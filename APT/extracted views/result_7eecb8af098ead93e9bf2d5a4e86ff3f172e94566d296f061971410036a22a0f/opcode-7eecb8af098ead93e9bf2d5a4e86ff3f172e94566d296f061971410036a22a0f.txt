xchg inc sbb sub push pop cmp xor lods andl cmp insl or movsl mov mov call aad or or cmpb jmp push les insb jge inc out or cmc adc mov orl push mov mov int3 sbb test or xchg lcall mov ret ret fistl je mov cmpsl aam mov hlt pop cli adc fldcw cmpsb xchg jmp popa (bad) pop (bad) push mov sbb fimul pop cmp lds loope out push daa jp and push sbb loopne rcrb (bad) ja inc sub add add enter scas int push daa cmp outsl xor inc mov ficomp or adc je push push lahf (bad) lock xor pushl loope jbe adc jle mov cmp pusha movb push mov pushf mov jmp jmp call lea pushl movl jmp pushf movb xchg pusha call lea call call sub pushf repnz jmp add mov pusha pushf pushf lea jmp test cmp pusha lea jae call loop sbb xor pop cld sbb sahf sbb idivl lret lret xchg adc lods add cltd stc imul lods dec jae (bad) sti int3 daa sti cmp arpl ljmp (bad) xchg mov (bad) adc (bad) fldcw sbb and pop xor jmp data16 aas ja adc test jb jno push (bad) mov pop aad in or aas dec push fimul mov inc add fnop in xchg (bad) stc out push and push mov clc ret xor xor jp lea lahf addr16 imul aam adc mov popa mov lcall lock jge mov (bad) fldenv cmp push test or in pop xchg loope popf inc cmp xchg sbb bound enter imul or mov jnp cmp xchg mov (bad) insl push lods cmp data16 rol sbb sbb xchg mov call cltd stos jo (bad) lods shrl jo and jb jnp jg xor pop mov and cld cmp popf push inc add or (bad) je jge add push inc add pop cmp mov jmp clc cmp mov mov pusha call dec inc push dec inc dec xor cs insb add add inc add clc pusha pushf pusha movl mov lea jmp (bad) (bad) dec mov in mov push mov out mov lods fsubrl adc sub movsb xchg push insl dec push mov mov loop hlt jle pop or test ds cmpsb aad lods mov xchg es push insl cs xchg pop aad sbb movsl out gs lret adc xor fisubr and cmc sbb imul jle test cmp xlat dec leave xor jnp das fldl mov popa fwait adc sub mov pop xor pop test out xor or bound or call daa cld cmp stc dec xchg enter js mov mov imul jb mov jp dec xor jmp out outsl lcall cmp adc and jp outsb and mov loop add dec popa and and pop xchg jg clc nop lahf push add sub test push (bad) mov (bad) loope and and ret scas jmp mov dec loop and cld (bad) icebp pop jbe movsl mov push lahf cs xor push inc sarb jl les xchg xchg js pop (bad) (bad) adc int3 pop xchg xchg cmpsl aam jno ficompl mov mov negl (bad) pop jg outsl sbb lods jg aas es cld jmp fnop push jg mov cmp jmp lea ficompl xor or dec sbb sub enter ljmp insl cld lcall jge cmpsb sbb lret outsb sub pcmpgtd ret and and inc lods imul rcrb (bad) pop cmc or lock call shl push adc stc mov cmp cmpb call pushf pushl test add pushl clc movzwl sub mov push pushf movl call push fldt fdivrs nop xchg fdivrl jns fdivs jns mov cmp mov in pop enter sub add repnz (bad) pop mov adc jae push inc adcb pop jnp arpl jmp in int3 xor mov mov movb fsubrs jecxz rcrl in jae bound (bad) stos sar and imul (bad) mov pop fsub sbb fnsave loopne shll out adc outsl push adc loop mov push cld into pushw jne xchg mov andl and mov enter test pop xchg js fisubr mov (bad) xchg test mov cmp or or movl and call cmpb pushl lea jne push sar rcl mov clc add test movzwl shld mov clc add pusha call add add add add add add add into adc add add cmp adc add add pop mov add add add add add adc mov adc lods ja add cmc add add add sub sub jbe inc cmpsb test imul (bad) clc rorb lods fwait stos insb or push mov cmpsb fwait jb clc fcmovnb adc enter fdivp sbb pusha aas (bad) push sub stos fwait in mov loopne add inc stos cld in (bad) pop jo test int3 test sub xchg (bad) lock jne sahf push add push mov out dec xchg les in mov insl xor add lret push jmp add xchg pop iret and mov (bad) repz jle cmp bound insb flds test popa dec fwait or jmp jnp jne iret jp (bad) or and jge dec mov shrb adc or jno movsl xchg xchg add (bad) dec mov inc sub stos add xchg and inc lret test pusha stos js push mov notb mov gs xchg push test push sbb call jo (bad) inc rcl shlb movsl add loopne inc dec push inc jmp lea out dec push lock add mov jno (bad) mov mov mov repz mov cmp sbb test sub xor int jg xor ds and repnz aad sub mov shlb and and adc clc xlat sbb mov xchg pusha xlat adc in mov jb aam insl sbb shlb mov out inc cmp xchg adc jb pushf xchg mov clc sahf enter mov sub aam call sbb ljmp push jbe push jle mov (bad) push push lods jp popa jnp jo mov rol jge inc jno int3 call je xchg or enter nop add repz jbe fst popa push daa imul mov clc ret std cli jg or mov pop test or mov and lea cmc cmp xorb daa xchg (bad) adc imul xchg sub or mov dec test xchg sbbl push iret jl popf imul mov sbb popf or movsb and popa sbb pop test cmp aas fldcw imul ds pop sbb pop hlt sbb push sub sub cmp push adc mov je ss into pop outsl pop mov inc js sbb lock insb stc ds pop in fidivrl mov outsl mov and add jecxz ljmp ret mov jnp js outsb adc sahf das in (bad) out and jp stos js inc dec lods and dec rclb mov ljmp jecxz out dec sbb sub inc jbe cmpsl sbb in mul in inc shlb adc data16 enter inc loopne push cmp in dec inc push ja mov adc cmp sarl sahf sbb push rorl js cmp fwait sahf ljmp mov cwtl (bad) leave or iret inc adc dec jb mov roll test sub mov clc pusha inc pop mov arpl ja arpl ljmp aaa (bad) repnz dec in fist jae rorb xchg or sub cmp out adc movsl fwait xor scas pusha js push and push aas fisttpl dec adc mov cld adc dec inc or subl sbb cltd adcl aad cld fldpi mov scas sub push rolb dec rcrl push xchg sub je aam mov inc inc sahf nop mov push ds xchg (bad) inc push jbe sub popa inc xor sbb inc outsb js rclb repnz push sub clc add mov xchg gs pop jb (bad) jbe pop lods sbb push mov dec js int pop or jecxz fisub scas addl sub xor aaa add fnsave divb fdivrl icebp clc dec dec push (bad) adc or dec add or mov icebp jp or loopne mov mov mov sbb xor jle notb cmp add lret or push outsb jae cmpsl jecxz subl call aam adc stc lahf sbb jno imul test pop adc push lds push (bad) jecxz jmp sub mov js imul push dec dec lods adc loope inc dec jecxz repnz inc mov outsl cmp aaa scas ficoml pop xor sti sbb test jecxz add pop cld mov (bad) mov icebp stc fisubrl mov mov scas div enter xor ret xlat xchg xchg mov pop push fdivrl sahf cmp (bad) loope mov into jg xchg and test divl jbe xchg push dec icebp cmp sbb (bad) lahf jmp mov sbb icebp mov sub mov xchg lcall fadds xchg dec adc pop inc pop add int3 pop mov mov inc popf dec mov jp sub mull ret cmovl aaa xchg fwait test xor jle dec and jl jnp,pt inc add cmpl pushf or mov sub aaa fisttp dec cmp add xor cmpsl sub shrb (bad) cmp iret sub (bad) lcall jmp arpl or pop adc outsb mov shrb push inc xor lahf or mov fsubs (bad) lahf lods xchg std sub outsb shrl push jmp sbb mov fnsave pop mov (bad) pop dec xchg mov data16 decl insl out dec xchg mov (bad) in insb test add ljmp scas or or fsts sbb sbbb xor (bad) lock dec mov in test cmpsl outsb add rolb push aas fnstcw clc pop adc repnz in or jnp add out pop pop add fwait pushf aas and and in imull addr16 insw das xchg jae js cli dec mov test or pop add add mov std les hlt (bad) das dec or int3 push sbb inc push popf and xchg fisubr jbe int scas pushf call jnp and in push (bad) out clc fisubl cmc push dec rorl aas xlat pushl add std mov sub mov aad (bad) cmpsb dec lcall sub adc push mov fcomps ret clc stos outsl push (bad) pop scas xchg mov aaa inc sub in lods add pop mov jbe pusha shl outsl cmp loop jo dec sub push imul sbb mov jecxz and push bound movsb (bad) xor add rcll lret daa push test and scas sbb push inc lds pop sbb enter repnz sbbl mov cmpsb (bad) pop jne cmpsl mov imul dec cmp addb pop or js mov push ljmp jbe rsm mov mov rcrl add cmp mov inc jo push push cmc cmp mov sub addb out and adc mulb add jl iret inc jl incl mov aas xlat jbe cmp or lock outsb sub jmp pop repnz adc jmp sbb push les push std mov sub cwtl dec stc dec hlt (bad) xor pop and mov push dec enter sub mov cmp outsl clc mov sarb insl dec aaa adc pop (bad) xlat jne jb jl push dec (bad) (bad) gs sbb mov sub push pop xchg xchg test das lret (bad) jecxz xchg xchg ja pop mov (bad) in (bad) add cs cmp sarl mov inc mov hlt mov clc loop xchg mov clc sub mov mov js dec push lahf cmp jae repz xor cs pop out sub mull jg push out pop mov sahf (bad) or cmpsl idivl pop mov imul ja ret push sbb or pop (bad) aas pop mov mov fwait (bad) lahf mov jecxz (bad) mov push in arpl addl adc out dec roll fwait xchg mov cmpsb jns std imul or jge call jmp inc xlat push and dec fs icebp bound cmc adc clc les repnz cmpsb sarb icebp rcrb push cwtl lods (bad) fwait cmp daa fs aam loope mov and pop (bad) pushf mov les xchg adc mov les fcoml mov mov lea test fisubrl (bad) or cmp pop mov imull cmpsb in jmp xchg add int3 sbb lcall roll lods (bad) or shrl push pushf scas mov ret jnp (bad) mov movsl (bad) test test (bad) cmpsb ja inc inc call or ss fs (bad) mov dec mov xor cmp xchg sub pop imul sub or mov nop xchg arpl jg inc jg outsb test xor cmc loope lock nopl push xchg and dec stc fcom cs and cmp xor repz xchg xor push int3 cmp out (bad) hlt push sarl pop cltd xchg and fnstenv movsl dec mov fwait jl insl cmp stc insl aad mov subl popf pmullw aaa and push cmpb popf push and mov test gs fld es imul add imul movsb xchg out outsl fs insb popf mov arpl movsb loopne dec push push pushf ret sbb mulb jl jl pop inc pop mov pop mov add lock cmp gs jp cmpsb daa push jbe sarl jb jnp imul jnp test xchg (bad) xor adc or sahf popf fwait arpl mov sbb jp data16 fwait cli jmp inc adc pop mov addr16 cmc cmp mov xchg jbe pop push adc push mov sbb imul fidiv imul xor dec mov inc cmpsl aas test lods mov ja add dec repnz push push fwait xor mov lods sbb lds scas jl dec xor shll push cmp cli dec and pop cs call sti repz aad jecxz mov stos andb mov cli pop pop in fs mov outsb adc mov jle mov push mov mov xchg pop jl adc sahf push dec repz push orl stc jne pop pushf jo das cmp mov or mov mov mov lea mov pushf push or data16 mov cld test neg jl pop jnp (bad) icebp daa insl in cli in cmp adc and pop cmp adc ret push insl jbe mov xlat xor cmpsb inc sub int js sub sub cltd scas mov stc add inc (bad) stos xchg leave pop js loope push loope mov test add test adc jmp adc andl or scas out (bad) movsb add (bad) jmp repz inc std stos int3 lret movsl mov mov sti pop inc mov xchg cmp sub lods fist int3 in and add mov jmp xchg in or insl jmp sbb divl and fdivs adc (bad) xor out into adc add addr16 lret fildl jg sbb imul lret add mov lods xchg (bad) mov pop fdivs ror in call jg sub xor cmp push mov mov jmp fnstcw add push sub inc jnp bound or inc setnp inc pushf or push cwtl dec test popf push lcall stos into and lods xor adc scas icebp sub pop ds fincstp test mov outsl push in lahf sbb fiadd lods pop cwtl mov cmpsb nop pop inc xlat loop shrl shll mov adc int3 push sbb mov xchg sbb push in sti pop cwtl cmpsl fdivr (bad) out jns (bad) and pop (bad) fisubr jno scas fadds add push push inc dec push das jbe cmpsl push shll jae pop inc addr16 bound adc inc (bad) hlt test cmp mov inc (bad) pop dec fwait mov dec les aad jns sub test and bound jo imul imul imul mov lds (bad) fmuls (bad) lock int pop xor outsb leave mov push adc cltd les mov mull mov outsl sbb sbb add fnstcw loop cmp cmpsb jnp adc push outsl ret xchg jle add insb mov lea roll inc or sub mov dec shll sbb gs lods sbb push add jo inc xor outsb push outsb pop bound xchg inc push push jl cmp lcall scas ret or sbb push push insb mov sahf xchg dec leave mov cmp in leave lock jo pop xor test insl hlt jecxz in faddp mov sub pop shr mov int3 pop out push cmc in adc add xor cwtl sarl into je nop test lahf mov fnop scas mov lds sbb and sub add pop fstpl pop jne and sti xchg mov nop add xchg mov andb ficoml aad ljmp cmc xchg js and mov jmp jl adc xor mov iret out out aas (bad) jg sub dec sub scas cmp js cmpsl push mov sub jns dec scas (bad) cmpsl adc jno sbb pop push sbb ficompl pop pop adc jo push mov sbb sti pop pushf fwait jmp or cmpsl fucomip mov in mov lret inc int addr16 sbb loopne mov insl add out sub mov jnp sub ret dec imul pop mov jae add (bad) fldl inc jecxz sub fisub adc ljmp sti mov ljmp inc adcl xchg cmp sbb stc out stos bound inc or xchg rcrb mov sub mov pusha imul ljmp aad insl dec jne ja pop xchg aas lret test imul jp out cmpxchg8b xchg es out mov cmpsb shl loop adc (bad) mov clc leave push add lods int3 and aad sahf fcmovnu in (bad) jo pcmpeqd data16 pop (bad) out dec movsb fiadd inc mov and inc test or sbbb aaa adc adc jne or mov sbb imul xchg out out mov test int lret sti mov scas xchg cld std inc mov jle mov test gs fs popa stos push dec popf das stos shll add and push mov pop mov inc cmp lahf mov ja aas test sub cmp jl jae fisubrl cld in pop and add popl and jne shr not not btr sub sbb mov and inc add pushf adc inc jmp imul loope jmp cmc jl mov jl cmp mov test mov add scas inc xor sbb pop cltd test (bad) std sub jo idivb xor mov punpckhbw imul pushf bound test mov icebp cmpsb jns push imul jae push jnp push pushf mov mov xor cmp mov xor lahf or testb mov cmp fucomip stc push lods orl mov iret sub mov dec fisttpl jnp xor cmpsb jg lock xchg xor mov inc mov (bad) xchg mov adcl (bad) mov imul gs push xchg mov mov push jmp sti add mov sub or test movaps mov inc add loope pop imul push push add mov jmp mov jmp pushf jmp jmp movl pushf mov pushf push pushf mov pushl ret jb push push pushf movl push mov pushl lea jmp rcrl push pop repz (bad) adc adc lahf adc (bad) lcall icebp test xchg loope xchg add push inc repnz xchg sbb fndisi(8087 aad push dec push pop fwait pop fsub ficom xchg (bad) sbb test fwait mov shrl jecxz push push xchg aam pop loope push sahf fwait pushf inc loop push inc xchg mov dec loope aam mov repnz loop push push xchg fstpl and push (bad) jl int3 xchg (bad) sbb add imul push aam lcall add inc loope push mov mov or adc pop xchg repnz ffreep adc popa sbb bnd stos out lcall ret out adc sbb (bad) repz pushf repz jbe nop adc fcoml clc pop nop repz push dec pop stos roll adc lahf pop and popf decb mov scas xchg add cmp jl (bad) popf sbb lret xor mov nop pop mov je xchg mov je idivl adc popf aad jl jg repnz dec cmpsb push bound adc cltd push sbb xchg xchg pop xor adc cli adc idivb jg psubq mov pop repz sbb xchg shll ja push pop popf je movl inc cmp pop mov cltd dec dec lahf xchg (bad) fistp push jg cltd push lret jb xchg rcll cltd pop mov mov loop or aad jno cmp dec neg out sbb push cltd push (bad) call push mov cltd pop pop push jo jae pop pop jo fisub imul jo mov lret sahf push or (bad) jbe lret fldcw ja push adc ds (bad) jo clc pop xchg dec data16 or sub ja lcall hlt push and notb fwait rcrl subl jo xchg xchg adc fwait orl inc (bad) ja pop or mov push sbb push call cld aas popf pmovmskb pop in jns pop inc pop push xchg jg pop xchg push jnp sbb or lahf cmp cltd addb (bad) push xchg imul dec jb push pop or dec inc lahf sbb ficom loopne push jo sarl jae push add or int3 fs movl lds (bad) cs jg fwait loopne dec jo xchg js sbb (bad) xchg cmp xlat mov outsl jno or add in int and add or jbe mov push push aas popa sbb adc stc ret xchg mov enter mov sub iret (bad) aas pop push pop fstps movsb pop xchg inc mov dec fcomps sbb add cltd adc sbb inc sbb adc fbld sar mov popw outsl jl adcl jg adc adc es jae mov or pusha push add inc aam pop cmp mov xchg dec es out or sbb push dec repnz xchg icebp add sbb dec push add xchg icebp sbb loope push adc adc sbb push or xchg push sbb loope push adc shl add push or loope adc inc push sbb fwait cld loop push pop xchg xchg sbb (bad) loope jnp push lcall inc mov shll cmp ss adc fadds pop loope cmp adc fsts sbb mov pushf inc jge xlat sbb fimull andb jl and negl push lea pop bound int3 sub push mov xor repz sbb push iret xchg jl pop je jbe jb not pop adc sbb and mov pop push lds push hlt sbb mov xchg scas das pushf mov je lahf (bad) jecxz mov jp and sbb iret sbb push sti sub aas cmp adc xor repnz je lock in roll insb ret imul (bad) out adc inc xlat inc fs in pop xlat inc int3 sbb mov xchg sub push pop push mov cmpsb pusha pop push mov mov repz mov jno xchg nop shll ret mov loope inc sarb and mov sbb add pop rcr jae lcall jb nop fistpl jo adc into popf mov incl xchg cmp jae push cld xchg jmp (bad) ficomp pushf cli or jp push pop sarb and (bad) mov mov cmp (bad) (bad) sbb xchg adc mov (bad) mov lret push cmp push push cltd mov jg add (bad) push cmp inc push pusha cld mov push adc mov out and xchg sti fisttpll adc push loop (bad) mov mov cmp adc xlat cld sti push aam mov sbb (bad) pop cld (bad) xchg orl or movl sbb outsl sbb jmp testb add loope loope add inc cld pushf push sbb popf or or xchg mov lahf push push cli (bad) push adc lret loop cmp push inc push dec sarl negb jle (bad) jnp add loopne jle adc in sbb or or or ljmp (bad) cmp xor bnd xor insl mov adc jo xchg lods sti ljmp pop clc adc mov mov cmp jb sti jle bound sahf fwait mov fidiv sti sbb xchg jnp icebp aas push mov jo ja adc xchg out fcompp xor inc pop adc cltd pop lcall inc fwait adc xchg pop xchg sub mov jle lahf jbe xchg fcmovnb fistl push xlat cmp popf dec cmc jae jle push jnp cmp (bad) adc add push xchg sti pop dec movsb repz cmp adc pop orl add movsb cmp inc inc push clc push xor push push inc dec push jne repz push pop repz xlat push test push fwait push mov hlt push mov pusha stc adc xchg inc nop shr mov repz push push sub add insl inc xor add inc and add inc and add inc and add inc and pop out daa xchg adc xchg adc test adc test adc insb lret adc mov adc mov adc mov adc (bad) pusha iret adc mov adc lea adc mov sbb je mov repnz adc xchg jae mov icebp push adc xchg jb mov lock adc nop jno mov notl aaa xchg push push adc xchg ja mov cmc push adc adc push adc jne mov lcall aas lahf jo mov ds jg mov cmp sbb pop push cmp popw repz jge mov add sti pop cmp fwait jl mov adc stc pop cmp cltd jp mov push pop addl mov jo mov arpl adc adc adc movsl cmp jo lea lea dec sbb dec aam push sbb mov xchg mov fadd sbb jo call xor cmp dec push pop jo js mov pop pushf jg fdivp adc fstpl (bad) lock xor les jle stc (bad) movsl dec in pop jnp imul clc sbb jg and movsb int3 push imul out xchg fidivr fwait pop lret jne pop jo stos pop mov sti xchg push and adc lods mov rcrb mov cmp int3 hlt neg test xchg cmp jns sbb cmp add cwtl shlb pop adc mov negl std in fsubrp mov fstp sti imul push xchg sub cli pushf adc jle dec lea repnz inc sub jl push add (bad) or sti js pop cmp lods dec bound sbb sbb xlat add cmpsl or add cli cmp cmp cli add jo ljmp mov xor (bad) shrl lock push test sub movsbl and cli pop dec or fdivs pushf loop xor adc mov bnd ss push std pushf mov popf icebp lock repnz push divb xchg (bad) icebp mov fcomip push adc push jg add iret xor nop xchg (bad) lcall jecxz repnz (bad) lcall mov mov loopne rcrb mov pop adc sbb icebp gs pop (bad) adc jg xchg sbb adc mov sbb xor cmp push sbb bndldx repnz loope push xchg fwait adc (bad) push or popa xchg mov mov repnz mov fwait mov loop push add xchg push loope push pop fwait addb adcl loope push add push sbb loope push pop fwait cwtl sbb cltd push sbb fsub xchg push adc xchg sbb fwait adc sqrtps loope push lcall jecxz push push xchg add lahf loope push sbb push xchg (bad) icebp adc test xchg adc loope push add sbb (bad) out jecxz add xor cmpsb sub (bad) sbb jp (bad) mov dec mov sbb (bad) lahf aad adc stos mov mov sti in fldcw pop mov sarb sbb stos cli jnp lock mov xchg lock xor add sarb ljmp adc arpl xchg dec data16 fcmovbe lea pushf inc ficom fcmovnu rcl (bad) cltd jnp xchg insl mov (bad) arpl test fsubrl dec mov clc jp sti mov and int3 nop add mov je and daa mov lock xchg sbb fwait loope or out fwait xchg stc hlt xorl or push sbb daa push adcb push subb orb adcl cmpsl sub mov lds adc adc adc adc loope pushf out repnz (bad) xchg pop rolb pop sbb push push xor adc push sbb push fistl add (bad) push push xchg or movsb jl fwait hlt or xor xchg pop movsl sbb xchg and pushf repnz inc or je adc xchg dec xor mov mov sti inc xor fcomps jnp repnz xchg mov pop push adc sbb xchg add pop cmp or cmp push (bad) xchg or or push xchg add cli sbb xchg fs sbb js aaa push xchg xchg daa xchg fwait sbb adc das jg cmp pop adc outsl sbb and and popa mov xchg sub out pop imul ret or andl rorb scas in shll xlat adc popf adc xchg push out dec xor xor dec repz test sbb ret xchg in dec push push cwtl icebp cltd repz nop test sbb cmp xor adc cmp sbb insb sbb pop adc sti dec and push repnz mov loopne dec add ret xchg and imulb sbbl push xchg test mov pop xor pop jnp out add push sbbb sbb add or xchg jnp (bad) ret jecxz icebp inc xchg insb fcoml xchg inc xchg repnz and dec and (bad) xchg out cmp pop (bad) xor cwtl pusha mov inc lahf lret dec push push pushf rolb sub dec pop push fidiv test sbb push mov cld rorl in aaa ja jg push adc ret adc sbb outsl cli adc arpl adcl and xchg xchg pop mov adc loopne add sbb (bad) xchg addl sbb push test xchg xchg mov cmp cmpb add mulb jo ja shlb inc xchg jl push div (bad) loope and adc xchg in inc icebp div (bad) loope and adc div (bad) loope and in repnz idivl adc insl sti int3 mov push repnz or (bad) out lahf div jns in sar jl dec mov pushf and push test dec imull adc mov xchg adc icebp pushf sti and sub out mov cmp pushf std imul inc jl mov pushf and std xchg or icebp repnz movsb imull and (bad) in sbb in (bad) mov jg mov je sbb fdivrp loope imul inc jl mov pushf and inc mov push xchg jae mov fisttpl xor inc push mov mov (bad) repnz addr16 sbb mov iret jecxz mov les div dec mov ss (bad) push or adc push mov mov les adc in mov les loope and or jl adc icebp push loope je mov mov and xchg dec sub stc notl fcmovnbe repnz insb iret jb sti icebp pushf and xlat imul aad xlat xchg mov mov sub in out mov icebp dec mov in xchg fsubrp loope imul jl popf icebp and in out mov icebp dec (bad) mov xor sbb pop movsl cmc xor (bad) jns mov xor icebp and fistp fdivp icebp inc sbb and cmc in movsb std scas stc and (bad) std in mov icebp dec ja jns (bad) je mov add inc inc enter inc stc add daa dec mov cmp mov and movsb insb int3 mov fsubl mov (bad) jg lret imul fwait repz xchg je mov cmp cld rol jbe arpl das mov repnz mov cld mov arpl das mov pusha daa xchg sbb adc rcrl mov les in and or jl mov pushf and or insb int in jmp dec cmp fsts lods cmp xchg mov lock mov mov in xchg aad jecxz mov les loope and lods arpl movsl pop icebp cli in push test mov stos xor lret lock push out in jl repnz les loope and or and push add xchg jno mov arpl inc idivl loope movsb push fstl jl mov mov aad imul mov les fbstp jl icebp xor xchg push in xchg jb mov bound push (bad) dec mov pushf inc push lods das imul xlat push imul mov les lods movsl out or push testl in fmul (bad) sbb jle cmp data16 pop inc and adc xchg shll sub jle movsl adc (bad) or inc out xor dec inc scas cmpl or mov mov mov repz or rclb daa mov or lea xchg out cmp lods xor nop hlt xorl je pop sub xor sti sbb sbb cmp jmp lahf pop ficompl loope sbb jb sbb push jge insb mov dec (bad) or rclb xchg adc fs aaa adc push icebp xchg mov xchg loope inc xchg push int cmc nop pop nop mov xchg icebp pop inc add adc aaa or rolb in push cwtl or adc mov add aam cli jl stc js hlt out add sub push adc fsts inc mov or sbb sub (bad) aaa mov jns pop push jae sbb or push mov or pop pop mov or jnp dec adc mov jecxz out into xor stos aas adc nop add add fwait loope lcall orl pushf gs lcall or mov (bad) pop sbb jl aam dec in lahf stos data16 dec pop repz jae push mov dec sahf dec cmp dec jl movswl xchg xchg push sbb sbb scas or lock push cltd rcrb jmp imul xor jnp lahf jle push neg mov jg ja xor (bad) sub gs mov dec call loopne pop sti ret out aas mov fcmovu scas popa sbb cmp lret cltd jp aad adc add or jae jle faddl rcr dec jmp je pop call xchg sahf dec dec (bad) fnstcw push movsb orl fwait pusha sbb scas add jmp sub sti cmp sbb pop aam or loopne sbb sti jb cmpsb jecxz into clc test orl jno sub and out adc fimull dec xchg pop add sbb lock jnp nop dec mov notb jmp push sbb sbb ljmp in add stos nop mov push repz ljmp fldl cmp aas cmp dec jle fs or fistp scas push mov out jle lret adc jp push gs mov vmread adc mov xor fdivrs cli cmp lcall lcall leave xchg std sbb lock push nop xchg xor pop ss jecxz pop push cmp xor shl test iret pop pop xorl dec jbe insl dec xor or add cmp jnp lock mov mov xchg mov pop add das push das push cli jns xor inc mov cs sti pop ficompl sbb inc pop cmp jmp jbe scas mov insb roll push ret daa stos pop adc shlb pop ret lret nop inc pop lret add inc jo cmp rorl push inc loopne cmp xchg insb into cld cltd (bad) or aam fwait mov mov aam sbb mov js and push test ficoml lcall mov jg popw sbb jb dec aaa xchg pop leave pusha (bad) hlt push push nop fnstsw ret jl aaa adc dec or mov popf sahf jmp mov test jo inc loopne int pop cmpsb or jl xchg pop push rcrl push sti push adc jnp xchg push inc or aas rcll pop (bad) mov xchg add xor jp mov sbb jnp xlat cmp cli ljmp xchg push into gs pop mov lcall repnz fstps mov inc mov dec push mov push in aam cmpsl repz adc jnp add pusha mov jmp jmp push inc xchg imul bound cli les xchg push push daa dec ja jnp xchg jl and cmp cld add xchg pop sbb aaa (bad) and and inc inc mov insb push or mov mov aam mov test sub outsl cli add or push movsl jb pop mov cmp cltd adc sub adc push push mov jae mov pop in push sti dec push lcall into xlat jmp pop inc test or xchg xchg decb loopne call shr test cmp pushf jmp jmp pusha pushf lea jne movzbl not or test mov not add and rol sub movsbw bsf mov pushf bt sub bt pushl popl call lea jb jne test stc cmp cmp jmp jmp mov pusha lea jne shr xor cwtl cmp mov push add rol xor add sub rcl jmp jmp call push stos push mov mov pushf lea jmp add inc js je jb arpl jae bt cmp pusha push push lea ja pusha bt clc imul pushf pusha add mov pushf lea jmp pushf call mov lea ja push sub clc data16 mull fs add rol sub call out pop xor inc xchg xor pop dec data16 push popf fstl test and in leave bound jecxz dec dec and sbb xor ss dec jbe sub je cmp ljmp mov or or push outsb out ljmp sahf pop movsl mov sub pop pop xor popa fisubrl in pop int dec and adc jbe pop fs cmp cmp (bad) jno jge jo hlt (bad) inc aas loopne xchg push dec icebp push dec int3 lods pop test das divb xchg jno popf push popa cwtl jno mov test lock mov das dec (bad) cmc aad adc xchg pop popa lret jmp je sahf push das ljmp jl test icebp xchg cmp adc insl pushf outsb lahf mov orl jae cld add lret js mov pop (bad) mov scas jnp jo fbld xor lods cli add mov push jb cmp and add ret dec sub loope ficoml das fidivl das mov pop jle and xor mov and pop movsl jbe pushl and (bad) jne mov popf das lods insl xchg ret and lret int3 and jl and xor add mov xchg mov popa fnstenv cmp cwtl adc sub pusha popa (bad) xchg pop and js mov mov sbb jecxz push in sti pop scas cmp lods fldt mov jmp jae or inc pop pop dec or and loopne ljmp aaa xlat xchg lea xlat mov pop pop popa mov xchg ds pop xchg das xchg jge jnp movsb insb cs xor mov pop and xchg mov xchg aam lret out xor nop xor rcrl jne xchg ss dec mov mov sub js xor std loop mov mov mov jg imull sub insl (bad) lret sbb pop in adc sub pop iret pop nop xchg cmc and lods fstps aaa xor arpl push and push lret hlt insl push pop push xor add adc mov adc stos ja push sarb mov sub in (bad) jmp imul inc xchg mov sti jp push pusha jle jge cmc pusha pop int stos add (bad) repnz ljmp pop jge push fisubl mov mov push lahf outsl iret inc outsl outsb jmp out adc sub mov nop pop aam (bad) dec fnstcw xor lds cs xor adc aaa sub test (bad) cld icebp jle bound sbb jae cwtl mov cmp xor lcall fldenv dec in push shl insl xchg jecxz mov mov mov test es mov sbb add add and add push pop add loop add or add pop pop add mov adc adc add popa pop add test adc sbb add imul add add add and add jno add and add add and call call mov jmp push pusha lea ja pushf lea jne stc pushf imul cmc jmp xadd sub shr mov mov shrd shrd rol shrd mov mov add dec shr and xadd mov (bad) test sbb cmp add pushl mov pushf mov pushl pushl pushf not lods pushf pushl call mov loope rclb and mov jp,pt enter in fadds hlt push xchg (bad) dec sbb xor jne fnstenv fs xchg mov jl mov adc imul mov and mov in and cltd aas mov cltd lcall ret sbb dec sub push pop faddl adc mov and or or loopne ja jp and sbb mov cmp gs sbb loop (bad) leave or popa pop movsb out int mulb mov lcall shrb fidiv pop (bad) fisub cmpsb mov jl inc or jecxz mov fmul jge inc addr16 jnp inc cmpsl bt cmc cmp call mov pushf cmp test add pushl test mov bt test push lea jg pusha pusha lea je stc cmc stc add cmc pushf call lea je pushf pushl bt sub stc clc clc cmp pushf jmp cld loope mov push inc xchg insb inc mov inc xchg rorl mov cs fmul adc mov shrl or fmull mov pop pop pop inc mov pop fstp sbb ret push dec cmp adc cmp cmp in jle cmp insl mov add (bad) sub (bad) xchg push and cmp test (bad) fnstsw ret pop xor fist mov or lock push test xchg (bad) jmp add mov jle fucom push into cltd cmpb xchg mov (bad) jae inc fsubl mov add sbb fs mov jmp call movb lea je jmp notb sbb push inc ss cmp push push insl xor mov mov pop xchg std dec pushf adcl sbb jg (bad) incl push cmovo add xor rcl inc push in mov shl cmpl repz addr16 inc outsl movsb and cld cwtl push (bad) jne inc out jns and (bad) jae sbb test das dec cmp and lea fwait push xlat xor fbld cwtl adc insb iret jbe cld dec xchg fs inc mov cmp pop adc test add sbb mov push inc mov lcall fnop scas addb jnp adc aaa mov or jg fildll sbb rorl inc add mov lds nop data16 add adc out cmp pop outsb pop and (bad) pop andl mov sub dec fist jecxz (bad) hlt jae sbb cld iret inc push jae mov xchg mov repz in clc xor pop je mov jns lock flds dec loop inc mov add pop notb ss cmc xchg subl push into out in lahf lea shrd sub lea dec ror aas push shl stc aam push aad call mov push inc mov sbb mov xor (bad) cmovl loopne pop (bad) sub mov insl loope inc mov les add fdivs sub andl inc jno jb gs test testb shll pusha test mov pop mov xor ss or inc ret jle sti int mov push cmpl sbb jno lret jl pop int3 xor push ja dec mov scas jnp fs mov xor divb jg sub mov rorb cmp imul int3 jge mov mov mov test jp aad xchg xchg xchg push bnd mov test xorl popf dec sbb push adc or in fidivr pop and sbb clc add add and pop fwait ja es cmc mov push cli jge jne inc mov pop push xchg xor mov cmp jge xchg out inc mov pop jbe sub mov pop cwtl xor jbe (bad) inc or pop cld jl jo or xor mov ss xchg nop adc cmc xor sbb clc pop xchg pop mov push and inc lret cmp cltd xchg cmpsb mov scas pop jle push int cmp (bad) into pusha cmp cmp push out (bad) js xchg and sbb in add adc popa pushf lret (bad) xor sub cld insl movsb rol (bad) dec fdivl out xor xchg sub out js cmc lret xlat xchg imul or enter movsl adc loopne mov jmp mov js cmp gs sub inc inc sbb js es push gs loopne (bad) dec arpl sbb pop insb sbb and pop test lcall hlt pop xchg mov sub sub sub xor and in pushf pop bswap pop pusha mov mov pusha pushl ret lea jbe adc pusha xadd sub shr mov shrd mov dec inc add call call cmp push lea jbe dec call mov lea je jmp jae and add test out in shr ljmp sti sahf xchg pop test or xchg andb (bad) sub push dec xor dec jae aad pop mov ja test fstpt jl loopne imul inc int movsl mov aad cmp mov sub mov mov fnstsw cs mov loope es cli cmp ficom push inc xor icebp fisttpl js rcll call and popf xchg xor (bad) ja and pop and out and jno cmpb mov outsb out fsubs dec psubq data16 lcall xlat lods mov sbb fwait mov out (bad) xlat jae fwait mov sub cmp loope add out fnstcw cmp pop inc out ljmp pushf mov push or minps and (bad) gs mov or adc sbb sub pop pop inc sbb aad bnd lret lods jb dec nop xchg adc push cltd call fidivrl insb add stos jmp xchg sbb (bad) aas mov int jae sub loopne push push mov dec xchg xlat loop cld cmp aad mov mov xchg mov sub push cmp and (bad) pop xchg arpl dec dec out xor push or movsl movsb sub leave mov ret pop (bad) insl cltd (bad) push dec add jno and jns sub adc sbb adc add test incl add mov mov movl lea jmp call jmp jmp pushf lea jne cwtl movzbw movzbl mov pushf pushf pushl lea jmp aam mov es jnp inc js and adc jo dec dec lods jp inc and sub test fwait adc sbb in or icebp aaa mov cmc rclb push cmp or push cmpl mov pop lods rol es ja or xchg push stc jle int mov and jnp hlt pop sti lock sbb add int3 push add bts inc shr clc mov cmc jmp jl loop add inc sbb leave and mov lock dec mov or push inc xchg mov rorb jle add jp ss jecxz es jbe imul lods fs add xchg int (bad) fsubl lahf mov outsb inc mov add push pop andl pop pop (bad) and outsb loope scas cli lds es cmp lds jmp lods cmp sub sbb xor push icebp mov adc (bad) rol sbb pushf sbb jae and test cmpsb xchg lods dec lret pop fsubrs mov andb push add stos xchg popa ret data16 add mov out adc rcll inc inc popaw lcall inc stc insl movsl hlt aad or pop lret mov pop out mov sub push jno mov mov cwtl push dec popa cmp pusha gs add xor aad dec (bad) and pop lret jl xchg lods mov aam sahf mov rcrl push push std adc pushl jmp popa loopne lret inc jle pop scas out sbb and or mov mov dec cmpsl or xchg (bad) pop ljmp cli fbld divl je cmp nop (bad) push lret loope xchg lods sub dec js test loop js push dec xchg and xchg mov add outsb xchg xor and add lea ja pushf pusha call rol push sub call iret std loopne pop add call divb adc lock loope inc adc jnp (bad) sbb adc jne adc andl adc xchg push jl into dec pop adc psubusw mov pusha mov repz cmpsl pop ja test or mov cmp outsl sbb sub pop sbb add fisttpl repz mov in mov stc xchg jo or pusha adc das xor lock add repz punpckhwd popl sti sbb adc ds sub mov in fisttpll adc push cwtl pop dec sub adc pop mov jle,pn adc jecxz outsl out aas adc push and out push pushf adc or into jl (bad) adc adc xchg inc or sbb push xor adc push es xor insb jae xor push jle rorb (bad) fisubl cmc pop aas data16 sbb loop xchg sbb adc ljmp xor arpl je lret inc (bad) pop mov xorl enter sbb add dec mov add fwait test mov lahf jno jo pushf push js jp adc pop rcrb dec cmp xchg ret mov xor enter out adc mov inc or pop insb fldcw or adc pusha addr16 imul popf adc add loop jge adc inc jb jle mov or mov repz rcrb fnsave lahf pop cmp push in repz loope fdivr repz scas sbb push add out add or cmpsl xchg rclb lods mov add dec adc (bad) nop enter test sbb adc mov or push dec call mov or jo add lods inc mov mulb sub fldl decl push int3 adc or push test mov icebp adc pop loop inc adc shlb xchg in pop adc lds mull out std andl or adc pop and mov mov insl adc xor or or mov sbb sbb add adc lock leave push xor es xor inc mov (bad) hlt das ret add push adc inc popf mov cmc dec std adc (bad) mov push xor ficom push decl adc jbe mov in bnd lea test popf fnstenv or xchg daa pop adc mov adc rorl dec loopne (bad) xor xor add iret adc popf ja mov (bad) aas testb or in adc sub dec push ret mov sub xchg insb out jl mov aam pop in into pop or adc add inc cmp sbb fsubrl push int3 adc addl pop jno adc ss insb pop out cmp adc imul adc xchg and jecxz or adc mov xlat stos fwait cmp sbb xlat mov mov sti add mov loop pop fisttp xchg add out pop push push push mov xor jg jl adc push and mov mov add hlt or outsb adc fcoms mov inc jne rorl adc and mov (bad) fs (bad) xlat adc loopne xor inc xor push jnp cltd or cli int jo adc pop pop roll adc mov cmp enter adcb ja repnz cs cld dec mov jl movsl adc shl pop es repz mov sub push or scas sbb xor push dec adc jmp inc stos mov das (bad) outsb add add enter fdivs je js and xchg enter add icebp mov out (bad) push push pop sti test ret and std sub and cmp xor ja adc mov mull dec adc mov adc mov adc subb jl sbb cmp inc lcall fs jmp mov push mov push cli sarl bound cmp jl adc push xchg xchg xor or mov arpl into in add push or (bad) or ds repz nop push call xchg push adc cld push push inc cmpl notb mov stos adc repz add mov rcr pushf pop sbb or jnp or call shrb in lods xor mov pop mov mov xchg push int3 cmp fs xor adc insb ret push xor stos and adc mov jge daa rorl hlt insl and pop ffree jmp sub sub out sbb mov ljmp popa aam mov cmpsl inc (bad) aaa pop or decl pop mov pop and and or mov mov adc jle pusha add cli mov ret lret push inc cmp cmp add mov adc jns inc repz fistpll lcall xor fs movsl sbb mov test xchg stos mov add fs cltd add (bad) adc and sbb mov push inc mov fwait hlt repz xor sahf xor adc addr16 pop (bad) cmp adc ljmp push cmp xchg dec adc stc dec cmp cmp rclb pop mov leave push and sbb jne dec pusha scas in dec push cmp clc xor add movl inc js sub (bad) jno cmpsb pop cs fcoms dec adc jp out xor mov lcall pop add sbb or arpl xor int3 adc subl and in inc repz push jae rcll lods (bad) dec outsl add repnz cld xor xor insb xchg mov lret sub mov lods xchg mov mov push rcrl push or cmp fcoml cmp push push cmpsl jmp dec mov xchg jp jmp push test jg adc mov xchg cld or cs jne inc lock push push push mov xchg cs ret jnp push adc cmp xchg xor ss int pop out cmp adc (bad) aas int3 or add push aad pop adc jg mov xlat xchg mov icebp or lds push xlat inc dec jg xor rcrb sbb mov inc sbb addr16 adc (bad) inc mov push sub out and dec aas adc loopne out into jl repz mov lods adc push in inc imul and adc (bad) dec cmp int push mov push adc lcall js jo cmpsl adc dec pop xor pushf stc inc fisub xor nop test push cwtl mov loopne jecxz iret and fptan jb pop xlat ficompl shl jl xor popa clc dec adc xchg es mov sti icebp or xor mov inc (bad) push xchg pop inc mov rorb mov addb subl loop int addb aaa shr mov cmp xchg (bad) imulb insl mov lcall cld pop push mov push adc shl cmp adc int adc popf enter lahf (bad) cmp add fcomi dec push cmp inc lldt sbb push js arpl test in pop mov jns fcoml and or push jae mov fwait and add add in or scas stc jns flds pop xchg or adc xchg mov mov repz push or repnz jns mov repz add pop inc mov or and repz imul rol into lea push xor cmpsl dec jne push sbb sub daa inc mov inc push es xor fwait mov repz sbb ret or repnz push or sti pop sti xor mov sahf movb ret xchg data16 adc adc mov jp iret loop adc sub xchg cmpsl js in adc or jmp ficom ja dec int pop inc xchg xorb pop fnstenv std adc test add aas insl add dec and (bad) lods adc xor iret add dec push mov push mov sbb adc xchg fldcw dec jge adc jnp cmpsb (bad) xor enter sti adc jecxz and jne push adc mov pop mov orl mov jle sub cltd xor lds loopne out rolb out (bad) stc sub cmp pop xor add mov or dec and push sarl sbb (bad) lcall add movsl incl push push cmc mov inc add add or xchg inc jbe repz mov pushf enter fbstp xor push repz cmc (bad) stos inc pop mov iret cmp add daa add das js pop add pop mov xlat xor fs push cli dec add enter test mov popa and fs push and sbb inc out sbb mov or dec mov mov inc (bad) or in adc xchg pop lock ja sbb in dec add out test mov mov adc sbb inc cmp in mov jecxz lret inc mov xor pop push (bad) pop imul ljmp dec mov xorl inc mov lahf or rorl xor dec cwtl flds (bad) mov movsl jecxz or pop push out lds sub and outsl fimull xor jl inc mov mov xchg fimull rclb addr16 jnp push repz sbb dec loop push pop sbb into sub adc pop sbb (bad) push cmp repnz and inc mov lret cwtl xor add pop imul pop and sbb pusha mov push into push fstpl cwtl stc cmc ljmp xor mov addb out (bad) sti pusha mov sub (bad) xor scas lea xchg xchg ljmp gs (bad) xor or int3 stos pause stos mov scas xor imull jae xchg mov leave out push sub pusha and je insl pop xchg repnz cwtl jae insb mov push rorl mov cmpsb xchg xchg repnz andb sbb scas inc pop mov pop adc sub scas ja fucomip andb mov sbb push scas test popa jge mulb adc adc mov in sub lds loopne hlt loope jecxz cltd nop (bad) fcmovne or mov ror aam jo loopne and add pop xor pop or nop lock push outsl sub mov fcoms out out xor or and add add or mov arpl sbb inc adc cltd push mov xor xchg out stc pop add mov sti sub jge mov push es pop nop mov sbb shl test rorl aas sarb jge out and push call xchg and test push jne jae andl outsl insb lds add adc mov cmc adc push push adc shll mov xor in push or xchg les sbb (bad) push mov mov jns sbb popf pop lea pusha fwait in add adc fdivrs xor jno adc insl lea mov lahf loopne je or push or (bad) cmp mov lret mov adc enter out movsb aam insl ror es dec sbb add rolb pop outsl fdivl pop jo mov cs dec cmp test bound ss (bad) and cli int mov ljmp inc mov das sahf in inc testb pop bswap stos push sbb es or push aam pop stos sti imul inc adc into cli xchg push ror add adc or sub jl adc sbb lock mov fisttpll mov mov mov pop fs pop sar adc dec hlt shr xchg adc pop mov pop adc into out aas adc mov xchg xchg xor mov ja rcr pop subb insl mov push jae push enter (bad) fwait subl or push mov out push punpckldq cmpsl adc sub out mov mov add cwtl or mov out xor insl xorb punpckldq push or or sbb adc jnp subl aam mov stos int3 gs or jbe inc mov stos pop pushf aam ds out adc fsts pop mov lahf push imul sub lcall lret adc dec test pop repnz jnp outsl mov es ljmp addr16 adc push stos dec and add (bad) cmp cmp inc adc mov adc jbe div scas inc cmp adc sarl push cmpsl mov repz out push add loop adc mov adc xchg lods sbb jge cmpsl adc push mov push add and out aas (bad) loope and inc xor mov jmp cld dec mov lods adc cmp test adc lahf (bad) and lods orb bound lret push in subb out nop orl adc or adc add xchg mov in push insl lcall out push int3 pop add and add int fist or push cmpsl fiaddl arpl push out or sub xchg fdivp ss adc (bad) (bad) popf cmp data16 (bad) into sub jmp jne bound inc sub cmp mull loopne jb sbb mov adc insl pop inc adc in mov adc add push adc ficom xchg (bad) sub out je adc lcall (bad) (bad) jg mov outsl sbbl add adc mov xchg lea cli xchg insl pop or repz aam pushf adc cmpsb cwtl insb fldcw aaa mov mov jo and mov iret and add mov dec add mov or and orb or mov outsl add in rcrl les mulb jle lds add xacquire adc and cltd (bad) andps cmp fcompl push es add and lea jb fidiv add or add test scas pop sub pop pushf xor adc adcl mov imul pop adc jno mov dec je add pop add rcll (bad) or hlt add adc ret (bad) pop scas adc icebp iret aad pop insb adc sbb push mov add loopne push sub or iret jmp int lret mov daa lret lods mov aas mov dec add adc jb sbb mov jne lret and jo out mov adc lret pushf sbb adc (bad) iret and pop adc mov jnp out aaa xor les pop pop push lcall xchg out mov push in mov xchg push (bad) outsb and aam mov xor mov ret imull xchg fisttpll adc repnz add adc adc pop push pop sbb adc je jmp rclb dec pop or pop xor pop xor inc lea xor repz adc push jl loopne adc es cmpsb xor mov cwtl or lret adc add fs and out pop repz sbb pop sbb inc or pop das push stc (bad) mov mov ret loopne or fsubs dec xor pop cltd movl (bad) adc sub jle pop mov shlb sti sub sbb mov daa dec out jo in adc fnstcw add pop pop push xchg push test jo rcpps or sbb xchg mov adc out xchg push ret add ret adc stos pop mov lret ucomiss test cmp enter xorl xor ret insl adc repnz and lret push mov xor fldenv rorl jne pushf add mov lock arpl cld add mov cmp icebp out movsb add adc repnz xor cmp gs rorl adc dec outsb mov mov mov or adc pop (bad) xor push orb xchg xchg adc adc sbb mov mov jp dec push adc xchg push pop adc sbb add pop addr16 rorl inc xchg ja imul (bad) fucomi mov xor mov int3 movsb push (bad) jecxz adc lret idivl stos add mov test adc daa sbb pop or aaa in std mov adc popf repz adc xor adc mov adc es repnz sti xchg (bad) cmc pop dec leave jle xchg arpl (bad) mov (bad) and pop out movsb sub fwait push cld and jnp enter (bad) mov aas inc into add xor push inc cltd gs sub or mov pop add call adc pop push sbb mul xor xor out sub orb dec xor adc adc out cld repz xor push mov scas repnz push ss jge popw movsl lock adc pop repnz jp add aas adc mov loope cmpsl xchg adc sbb xchg mov sub cmp dec mov and insl jne lahf sub pop pop mov mov lea ljmp mov ds adc jnp cmp iret cmp cltd js jne mov sbb sbb mov lods out movsb pop push mov insb inc jmp repz scas loop insl sbb xlat outsl pop xchg sub cltd jecxz push daa in (bad) sbb cmpsl push mov inc sbb and or divb insl mov cmp mov stos in cmp js,pn sbb push adc lods test clc adc (bad) shrb adc stc push sub je add pop or dec mov (bad) xor lea in xor xchg setae sub jmp mov jno aas pop nop push outsl addl xchg adc or cmp cmc add adc test xchg jge sbb jmp adc inc mov and push mov adc mov stos mov repz cmp rcll mov or or sub sahf mov repz pop lods test outsb nop mov daa insl sbb pusha (bad) xor or dec (bad) (bad) out xorb mov je push xor scas bound push je inc sbb push fstpl aad aas repnz repz (bad) jecxz mov lret sahf and lods ret es pop add mov xchg fs pusha xor out arpl out cld sbb mov (bad) mov dec push sbb adc mov xchg std xchg push jne pop jecxz orl (bad) leave sbb adc faddl jb sti cmp dec xchg jns xchg call clc push ds gs nop lcall int3 mov pushf jno dec popa les fistl jecxz test cmp dec aas adc enter push popf pop push xor add mov xchg cwtl int push outsb add subl xchg movsb ss and xchg outsl inc fist (bad) adc in arpl decl inc add and adc test dec or adc int sub clc dec mov xchg imul sub adc lods add cmpsb repz push cs mov add add cmp adc adc fistl xchg hlt dec sbb in xchg sbb aad and (bad) mov rep xchg pop (bad) addl mov sbb lret cmp sbb adc xchg shrl jg (bad) lods dec and stc or imul and or pop xlat das sbb in xor call add mov dec xor je pusha pop pop inc hlt sbb pop pop add dec cmpsl or lods mov lar lcall (bad) repnz adc into xor push (bad) rcr shll leave insl rcr adc and xchg popa insb orl lods xchg jno inc or rep pop sahf jecxz repz jl mov xchg mov imulb aad out int3 in or xor call nop out sub pop xchg lods or lock dec lods loop or push and dec pop in inc mov cmp jp mov imul in adc push and mov sbb add xchg lods out inc (bad) (bad) push imul int les xchg js sub add (bad) icebp dec stos jecxz cmp pop adc add into mov mov add rorb push jne (bad) inc add das popf pusha repnz mov xchg xchg pop cmp jge out xchg lods lret jbe xchg xchg push jno adc sti enter or mov and cmp (bad) cmc cmp es inc xor push adc fidivrl jge adc inc jno test cmp (bad) add sub sahf adc imul lcall add test mov cmc enter push scas add out ret pop pop mov pop in ds jg call pop fisubl and dec adc mov imul xor cmp sbbb pop out out push cmp in (bad) adc and lods push xchg les out xchg inc loopne rorl mov dec adc sub mov adc hlt insb cmp fldl lock jl push sbbl es jp (bad) mov pop xor mov pop sbb adc pop fdivrs repz out (bad) or loope cmp (bad) repz aaa adc xlat (bad) repz mov add add fucomip adc jne xor icebp bound jmp mulb or call cmp in mov aad mul pop shl cs out xchg push mov cmp mov adc test (bad) aaa and adc adc jge xchg fstpl push sarb adc nop es lahf shll or xchg jno lret jae clc or mov mov pop sbb shll jne adc aas aaa xor inc or das repnz ljmp loope cmpsl cmp dec and jmp push movsb add mov lods movsl push out mov add xor adc or xchg arpl add sbb repz mov cmc push testl xor push jle scas pop adc imul push pop pop pop inc or loop push bound cmp stos out mov je mov ds pop and ret sbb add adc pop mov add repnz pop adc ret or aad cmp (bad) jecxz xchg mov or push adc mov repz pusha mov cmc add adc mov fidivrl addr16 das fcoms pop adc fist adc faddl test adc sbbl add lods test adc inc mov notb lret call mov sub push sub (bad) cld (bad) mov adc in int mov cmp pop inc mov cli adc repz int3 inc dec or mov jp orl test mov sbb adc aaa rorl mov mov or mov out fs xor loop in fcoml faddl jecxz dec sbb xor push cmc or add mov cltd cmpsb sbb ss adc and notl sahf fnstenv int3 shrl xchg and mov dec mov pop out mov xchg xchg shld loopne push hlt clc add bound adc test call cltd mov sub jp aas push mov repnz adc jns lahf adc jg cmp movsb xchg fist dec and fdivr adc sub lcall (bad) pop dec fcoms and pop add jns mov subb adc xchg or lret out sbb cli scas inc cmp call pop jne cld das adc xchg mov lret in (bad) mov xchg cmp pop adc fdivr iret repz cmp mov inc pop das in hlt or fdivp (bad) mov fwait inc leave inc adc sub push rcll jecxz jl dec mov and xlat push inc (bad) xor sub cs (bad) jo mov jecxz adc inc pusha (bad) mov adc repnz pop adc mov inc clc in sub stos mov pop mov push (bad) stc (bad) hlt scas pop pop cmp xchg inc xchg dec add add add push bound push xor in push inc inc call xchg and mov repz xor pop mov je pop popa push cli test ret push adc jmp rclb add mov and mov aas insb mov pushf push imul mov adc int fildl call pusha add pop push adc bound paddw dec push inc mov mov test jno pusha sub mov fistpl repz push cli jg inc cmpsb lea lock ljmp cs mov mov add sbb sbb rorb mov pop mov hlt test push xchg pop popf jo mov popa lds pop jae lret xor imul test add loope adc aaa mov and add stc lock lods inc pop cmc or xor jnp jo adc outsb mov cltd pusha fidiv mov pop (bad) cmc fwait cmp pop add pop jg push xor repnz inc xchg es int3 les mov adc pop dec push xor and insl mov fist mov sbb out inc (bad) out adc fstpl (bad) adc or (bad) xor mov sbb pushl pop imul mov and loopne daa sar mov out inc cmp xor or (bad) adc push cmpsl xchg mov mov sub addr16 mov pop popa cmp cmc repnz pop shl loope loopne je xchg and repnz das add rolb sbb add adc ja outsl inc xor std push mov andl out sti sbb jle int dec jnp jge pusha or push es repz outsl mov mov add inc xchg aad in xor imul xor pop dec or add adc mov rcrl imull xchg fnsave adc mov or fisttpl xor fcoml or (bad) sub sahf test pop cwtl in movsl mov lock mov mov mov pop adc mov xchg xchg in test adc mov repz iret rclb jg inc add popa push add adc lcall push push jns or clc jo iret jle std dec shlb mov in inc in mov lods add (bad) mov mov pop cmc add das jl mov int xlat loope xchg adc lret xchg and scas inc adc call stos adc or push icebp adc mov mov out data16 test das or push push (bad) fcoms mov add insb mov xchg nop out mov and pop push xor out pop dec and loope mov lcall jno dec dec mov adc (bad) mov test je or or jae or jne adc ljmp rclb pop ret push adc scas sub sbb aaa cmpl mov push inc cmp test out fnsave sub repnz adc int aaa stos fcmovnbe jge fldenv mov pop sub ds push repz adc arpl les xchg (bad) jge inc xchg and sti sarb mov les je fucomi das add std repz fisttpll roll pop loopne mov add adc fisttp jns mov test lret out mov lock ljmp cmpsl cmp mov pop dec and add inc (bad) addr16 outsb or mov xor jl sbb ret jae mov add mov sbb sub in add fsubrs adc jno pause jp jmp (bad) mov sub stos nop out leave ds jmp outsb int mov xor out aad int3 add int or in outsb jle push js mov ficompl add outsb push je cmp pop pop inc push inc push cltd jecxz hlt mov adc (bad) mov adc add push addr16 clc bound xor xor sub fnop es pop push lock adc lods (bad) (bad) adc xor sub and (bad) into or sub insb lods ljmp dec mov or adc aam cwtl in inc cmp popf pop cmpsb adc ret add shr (bad) test jmp sub and sarl mov in pop add std xchg xor adc xchg repnz or ljmp enter push aas int lds imul rcrl outsl loop add repnz and pop aaa out adc pop or and jmp cli dec dec mov nop repz stc (bad) mov lahf xchg mov and imul sbb aad cmp sbb orb mov ja mov loopne lret ljmp test adc sbb iret xor aad nop lret add push jmp nop pop and jbe xor dec sbb in adc repz and xlat push repz dec out xor pop mov mov adc push add out dec repz jb jmp stc mov and imul testl adc lea cwtl insb inc adc add xlat aam sbb (bad) popa or je pop mov xlat mov push xor add repz in lds sahf pop cmp cmp movsl or fstpt pop int pop js sbb adc dec xorl scas mov adcl ljmp (bad) sbb in aas mov ja shrl mov adc (bad) cs mov or dec xchg sub add std sarb add jnp scas mov sbb inc enter xchg jl sub sub push mov xor insl mov mov sub out cmp sahf pop push (bad) repz fadds (bad) mov inc jg pop sbb jbe jge mov loopne fnstenv pop lret inc lea or popa cmpsb rcrb insl pop inc mov or add inc add push aam jb xor mov call inc mov jb (bad) jg cmpsb fnsave mov lret loopne mov xchg jp push js xor (bad) bound mov pop mov mov mov into es xchg jmp push std push inc mov adc push cmp dec pop icebp inc adc aad sub lock mov or or out push and pop incb insl push sbb push push jge pop bound push pop lahf inc call hlt push xchg (bad) adc sarb push pop rorb aas jmp cwtl int3 mov aad out mov jno sbb xor gs mov adc mov fs out sbb hlt add jae xor out popf inc adc subl or imul ds loopne sub adc (bad) mov scas adc inc xor scas or and dec leave add cmpsl orl jne loopne (bad) push in sbb push dec jmp rcll adc hlt inc mov fisubr xlat in sbb (bad) and (bad) popa inc pop imul cmp xor call bnd scas push pushf sbb pop sahf dec push mov inc cmp adc mov test xlat adc mov or sub dec arpl add ljmp pop (bad) outsb mov pop orl hlt or or aas cmp lea or push mov jmp (bad) add outsb inc sub adc sti push dec aad mov add add mov lcall mov cwtl pop hlt pop cwtl sbb add xchg nop cmpb pop outsb mov sti mov repz (bad) pop jbe push sbb sbb or sub pop sub cmp inc push cld cltd mov adc pusha and or repnz cs pop jecxz xchg jmp jmp pop fmuls outsl add or sti jle lcall dec adc mov sub insb adc pop xchg dec sbb repz adc fcoms fimull mov in repz mov adc das fdivl jae jo mov adc pop popa aad jb adc jle imul pop mov jl lock fldl in xor xor sahf cmp inc push pop aam ja adc cmc test push push dec adc cwtl mov xchg push adc out sbbl adc add and outsl fisubrl popf push and stos adc push test jecxz cmp lcall mov fdivl in inc and insl adc mov clc dec aas pop shl fmull dec or insb push pop (bad) leave and mov sub inc loop push xor or ljmp nop adc push xchg jge adc aas add repnz adc xchg adc pop add adc mov (bad) adc inc adc fmulp adc loope cmp pop repnz inc aas stc adc cli sub rep xor adc push xchg outsl in sbb aas adcl fwait stc xor out xchg sbb sbb lds rclb xchg xor adc daa adc xor aaa lock lock repz mov bound aam adc adc inc adc clc sub add xchg lods (bad) cltd sbb repnz xchg aas out jns adc loop adc jl cmpsl aam adc hlt popa push jnp (bad) mov lret push lock test mov loope push push mov xchg (bad) mov sbb sbb xor xor mov pop jmp test xchg sub divl add pop lahf sbb (bad) sbb dec insb lods test inc adc lods pop adc test adc out add adc mov test add dec push adc fwait xor jmp test (bad) (bad) fstps adc push pop pop jb adc or pop data16 adc dec xor adc ret les adc aas pop sbb icebp dec scas outsl sbb (bad) dec mov shrl adc scas pop sti es pop xor fistpl sahf cmpsb in dec fimull inc rcll pop lret rolb mov inc pop mov rcrb leave fs adc mov insl imulb cmpsl outsl pop mov add in popa les lret subb jae mov cmc and popf add aad sub repz mov or adc lret mov sbb test xchg pushf imul or outsb nop ffree adc inc xchg adc dec adc rorl call adc adc xchg in ljmp jb pop and sub adc pop stos xchg adc int3 sub cmp out scas adc movsb push adc adc sub push push mov sarb add mov adc xchg mov mov shrl out test sub cmpsl ljmp iret int3 adc sub adc out mov out dec jne xchg sbb fnstsw adc mov fiaddl mov xor ret or mov jnp cmp adc jae gs xor mov jl jp inc (bad) cltd adc pop inc dec pop cmpsl lahf adc cli cmp push add enter push adc mov mov outsl mov movsb test orl xchg cvttps2pi cmpsl arpl push adc stc outsb mov dec cmp sbb pusha mov icebp mov addr16 and dec xchg lcall and aas iret hlt or adc pop mov dec and mov lret xchg mov adc jo icebp sbb or add mov out aad adc pop sub aas sbb rcr jl das xor xor sahf xchg or push idivb adc cmc pop fist mov aad pop and pop sub addl inc jnp adc lcall mov call (bad) fcomi push push adc mov mov adc (bad) mov (bad) fucomp adc pop pop outsb add pop adc sub mov adc mov repz jb test or mov adc add outsb mov call or (bad) aam inc dec movsl adc xor sub mov dec and jle (bad) outsb arpl rcrl xchg movsb sub push adc mov fidivl cmp mov lock pop fwait xchg repz add push or sarb scas scas xor shlb xor int3 sbb and inc and cmpsb jnp or jmp movsl adc mov rclb scas jl add into sbb dec add pop xchg repz push cmp sbb repz xor add int3 (bad) repz push cmp popf jecxz add (bad) ja xchg mov dec xorl lods cli or icebp call adc mov and xchg adc fsub mov and push fdivl and icebp lahf cmpsl (bad) xor add lods (bad) xchg jp lods and iret rolb loopne sbb adc mov lods sti adc iret insl rcll mov cmp and clc mov inc push adc pop fs fdivl mov ljmp mov mov movsl jbe push lds jmp pushf inc sub mov sar adc mov sahf jns push adc call mov push cmp sete jno pop push lods mov mov push or pop (bad) dec cmp dec fild fabs cs and inc mov jecxz jno mov stos loope or jg ficompl imul aaa add mov mov adc (bad) outsb ljmp add sbb mov stc adc pop xchg outsl mov insb mov xchg sbb adc stc dec jae loopne xor sbb js xchg sub div ljmp mov pop or out adc pop mov adc loop adc data16 adc fstl add je movsb or or xor jo imul cmpsl dec jno pop and les pop nop out or adcl fs test adc lahf out cvtpi2ps mov jge pop dec (bad) sub fcoml add mov je xchg mov fistp cmc adc loope (bad) or lea popa mov add adc sbb scas cmpsb dec mov xchg fldcw movsb jp int3 add shlb adc mov leave cmp add mov rorb jno popf daa inc addr16 dec xor imul insb xlat scas xor stc mov out mov dec mov nop pop add pop adc adc jb xchg dec jg xchg push sub ret jecxz or (bad) cmp pop xor jge setp not cli out mov push mov push incb hlt add mov (bad) lret daa adc inc jb xor (bad) sub adc adc sbb std jmp mov xor mov mov add cmc mov and lcall popa incb jno mov adc leave sbb jno (bad) mov out test add sbb outsl adc mov mov mov pop insb dec out adc out ja (bad) xor movsl adc xchg (bad) mov adc in call mov mov cmp aaa nop sbb mov fsubs lretw es rep adc mov mov xor and inc in add or popl cmp fnop jg mov cld hlt pop adc scas add ja sbb sbb or mov sub sub rolb xchg adc adc stc mull adc popa mov or inc cwtl or xor imul lret ficom ss adc imul and cmp mov sbb fcomps repz in mov jmp adc testl nop imul xlat pop iret fstl mov dec xor lods xor push mov add pop cld mov lcall pop adc xchg outsl subb sub xchg push xor xchg mov jne (bad) jbe add in lods dec test pop pop rcl into jg aas (bad) add repz adc arpl or sbb cmpsb xchg test mov mov xchg (bad) pop adc bound adc mov sbb leave int ret mov punpcklbw (bad) pushf xor mov cmpsl push push and mov fsubrp les xchg insb aad xchg test pop xor hlt loop cli in ret fnsave mov mov insb adc jae or adc js adc loope xor jle push aad adc adc and xor inc dec mov repz lods jecxz pusha (bad) cmc fwait lods or (bad) adc adc sti push test add fwait aam sbb push daa jecxz sbb adc ret mov mov shr jnp pop adc push add xchg daa cwtl add repnz movsb push mov inc jmp ds dec jle xchg lcall and mov cmp adc adc xor ficom mov popf sub push imul mov movsb push and int3 sbb push sub mov pop je outsl (bad) adc and ret rclb and add pop mov cmp or sbb dec push test enter add outsb xor popa outsl aam rorb adc daa adc mov adc (bad) or inc dec in (bad) inc pcmpgtw or add adc dec inc stos stc sbb in add adc jno push xor (bad) pop adc in icebp out adc jmp mov pop fldcw rclb shrb mov push enter clc cmc sbb adc pop ret out or fwait xchg (bad) aas mov stos aam jecxz outsl in movsb js sbb jbe pop cli (bad) dec aad call outsb pop push adc mov or hlt xchg sbb scas leave pop mov dec repnz cmp in push adc into fstl pop sub icebp mov pushf jnp jmp ljmp stos push ror pop inc insb cmpsb test mov pusha fstl or push (bad) mov sarl add pusha (bad) cmp insb adc out jnp stc mov dec inc xor sahf add in and lcall mov test mov xchg repz sarb js pop movsb push addb add into xor js and hlt out sub mov and pop adc adc sti sbb and jno mov nop and aas mov mov mov gs insl pop add int3 pop adc add adc pop aas cmp adc push out mov add repnz adc mov xchg (bad) enter test xchg insl mov pop sbb or sub dec mov lock sti mov fldcw ror js sub and nop enter into lds arpl loope int mov mov outsl sbb adc ret fwait add pusha adc insb in push popf mov cld jno insl add adc repz jbe adc out or cmp mov mov sub lock and cltd adc xor sub inc movsb movsl push mov cmc adc xchg inc push inc pushl in test popf pop (bad) sub decb addr16 js inc pushf xor pushf dec xor repz xchg repz mov push jb adc aam push imul cmpsl cmp in mov cmp adc dec mov mov sub jnp arpl iret or mov adc testl adc mov mov gs mov jmp arpl clc mov mov mov sub adc lods dec stos sarl cld test sbb cmp pop fwait loop mov push jg in mov (bad) int inc or stos or leave mov and ret adc mov xor and pushf adc mov out dec repnz cmp xor push or addb adc leave add jb mov fisubl jmp mov inc or jbe adc jns push orl or (bad) sbb sbb into hlt in xor stos mov push out loop sbb add scas mov adc or icebp lds inc adc out cmpsl rcll mov and cmc xor adc cmpl ret incb mov adc sub out shrb nop pop sub (bad) rcrb jp xor daa adc and mov std add mov adc iret lret jl into rcr lods cmp std jmp mov sub ja mov je or dec or adc testl xchg int adc pop mov repz test and (bad) fmuls loope mov adc push dec sti mov and (bad) xor inc adc stc push push adc je lret push fs mov or cltd movsb adc pop aaa adc and jnp imul xchg and imul sub adc aaa sbb mov pusha push ftst mov fdivrs mov push mov aas (bad) push mov lret inc push repz dec fbld (bad) adc xchg or aaa les inc call scas cmp shrb inc daa lods or push adc les sbb adc jmp push fimul fstpt add push adc imul sarb test (bad) and push ficompl out ret adc out sbb inc sbb add adc addr16 jecxz inc sbb in mov pop enter pop push jmp adc xorl fcomps leave int jb inc mov lret jbe popf loop mov cmp (bad) int in push repz imul es hlt sbb or mov in dec mov sub stos dec jmp jbe outsb in fsubs mov aas inc adc push arpl out jne cmp ret mov and add and test inc loop int3 sbb adc dec shrl add repz sti and mov js loop je lods roll mov adc xchg movsb adc push jb mov pop fcomip lods out mov and mov cli push xor push push or add out lds int3 dec les (bad) out adc cli es pop mov outsl mov inc xor sub out adc mov adc xorb repz sub jne xorl vorps test (bad) jnp inc cs ss fldenv rcll into sahf mov push pop in xchg aad cmp mov jne into call xchg mov pop rcrb mov fneni(8087 test dec cmp sbb shrl xchg or xor adc xchg dec add xor cld push call loop jl sub push out sbb js leave and adc mov xchg int cmp or push cmpsb (bad) add (bad) mov add pop test jl ss jno leave std sbb in jle adc sbb adc test pop ljmp mov cltd adc scas xchg mov popf jbe test mov lahf aam mov jmp hlt rorb mov out fs push ljmp add icebp adc cmp lea mov push les test pop pop dec jae bsf mov rcrl fs arpl rcll (bad) repnz out mov xor or xor adc jne pop adc out outsb add popf ficom mov mov (bad) adc mov (bad) repz loopne and xchg stos and and in inc pop aad push repnz dec adc aas lds dec jg (bad) loope adc push xor cmpsb imul cmp mov cmp stc mov xor inc lods or dec xchg hlt lret jb addr16 and adc mov push and adc jo test (bad) fsubr pop loopne mov or data16 mov fs add outsb sub cmp mov fmul lods adc repz jbe or xchg lock add out adc cmp push (bad) lahf sahf arpl dec push add fisttp dec int3 fbstp or mov mov lret or rorl inc xchg xchg mov into pushf mov (bad) sub dec or outsb in adc push add adc aam mov repz cltd mov movsl sub add inc sahf repnz out push jle divb imul adc dec cmp adc mov push xor fwait adc xchg arpl sub cltd inc and fnstenv sbb pextrw pop js fsubrl add aad or push ret mov dec cld xchg or sbb adc or adc xor outsl or in cmp aad adc int daa inc insl hlt and negb loope sbb int3 out inc xor sub cmp mov jne hlt adc push test mov cmc dec and mov sti idivl xor mov xchg pop jg jb and nopl hlt mov insl mov mov test mov adc mov pop add push rclb dec sbb cmpsl imul icebp pusha adc mov adc adc xor stc adc pop in xchg test sbb cmpsl jbe decl je loopne (bad) xchg (bad) push jmp pop xor int3 cld adc jns push fucomp lds fidiv push sbb es nop cwtl mov mov and mov xchg mov or jle adc pop imul fstpt aad mov xlat xchg sbb (bad) popf mov adc xor cmp mov bound in es scas imul out mov fmuls and or rep mov jmp jge outsl aam mov aam fwait rolb xchg ljmp xchg cmovns push nop mov cs add adc in mov out add shlb gs test or in jl mov adc sub fisttpl pop insb fistpll iret adc push sbb mov movsb test xor hlt (bad) xlat das add call fistp jnp push push jge arpl sub lea lea push push fldcw mov pop fucomi sub or shr lock mov adc stc jnp out adc lcall or sub notl adc das (bad) lret jl into adc jae pop jnp out divl repnz sub or mov subl iret test xchg push xchg sbb pop imulb mov addb into jp pop ljmp repz jnp test lock in dec imul xchg cmp pop or xorl lds cwtl mov and or jno or jns pop sbb push or addr16 xor xor cmp dec jo mov jge or sub popl and cmp push mov enter int xor imul xchg mov loop mov ret mov int cltd pop cs xor rorl imul xchg (bad) sti outsb sahf push lock lahf xlat or jmp jp ds or pmulhuw cmp lahf sarl jne add loop adc jno push mov mov test repz and nop push sub jb xor and sahf scas push (bad) mov testl mov mov pusha ret in fs sbb sbb dec cmp xchg data16 mov pushf stc movsl fs push fstps xor adc or or out jbe jg es stos cltd push xor dec push or pop test rcll cmp repnz add adc mov pop int3 gs cmpsl rorb imul scas stc test add xchg mov sub out push xchg xchg ljmp jmp jb xchg or or mov adc cwtl push pop das mov mov dec imul call cltd sub dec pop out dec mov mov push dec femms (bad) and inc lret sub shufps test repnz ret bound (bad) sbb fabs mov jns jnp push push or push bnd dec rorl jb fwait decl mov jge gs (bad) andb subl inc mov aam repz stos scas sbb inc lret lock or xchg pop sbb mov xor loope call and cmc cmpsb les nop push in (bad) xchg mov push test (bad) jle push and daa imul (bad) pushf adc lods fistpl repz or (bad) notl aas insb and or test pop outsl xor xor xchg stos call rcll into cmp inc mulb bound mov pop add add push adc das fdivrl cmpsb adc outsl add fldl je cmc dec int or cmp xor mov xor mov (bad) jp and lock mov sbb push stc mov or jecxz and cli repnz cwtl shl adc into les mov sbb pop cmpsb outsl cmp addr16 pop push cld (bad) movsl sbb add aad dec mov imul add mov jle cmpsb dec pop xchg and xchg aas mov rep push icebp lret mov clc cmp cmp dec and mov lret add out out pop repnz clc mov daa jne aad add call xchg bound cs sub ljmp test repz xchg dec jle out out fsts mov in jg add (bad) add add mov in (bad) jno (bad) adc in scas push mov push cld adc jp and sbbl insl movb mov inc pop sub bound (bad) mov adc (bad) jnp fsubrl imull mov sti sbb ret scas inc dec repz cli into mov mov sbb push sub sti iret or mov hlt sub cmpsb fdivp push orl loop (bad) and inc bound adc push lods sbb in xor bound dec xchg lret inc xchg addl repz aaa mov bound mov cli xor adc jnp inc jge xor ret orl or mov xor add add xor cmc adc sahf xor pop push lods iret je ret std dec inc test inc push (bad) pushf add repnz add andl mov mov and out pop out xlat stos add xchg or xor mov mov aaa adc mov mov xor loop cmp hlt or and xchg push imulb insl adc mov mov adc xchg sbb cltd xor add sbb aas lods lock in orl sub push add popl lahf popf or repnz push int inc (bad) movsl jecxz int inc nop xchg test sub pop mov adc lcall cmp mov pop stos or cwtl das leave mov or adc popl push adc ja or in (bad) fldt scas (bad) das ja hlt sbb iret lret mov pop out bound mov rcr rorl movsb fdivs shlb ficoml rorb xchg test push daa mov inc xlat aam in xchg movsl cwtl cmp into andl inc adc outsl sbb push push add xor lret xchg jmp jecxz adc loope xlat push mov stos sub mov and sub mov fisubr sti mov ljmp mov mov sbb test or (bad) mov pop xor xlat jecxz shlb or lock out inc sbb or add cmp xor push dec mov adc pop outsb xor cmpl mov shlb (bad) mov lcall pusha sbb adc xor mov jl mov int3 pop pusha inc jecxz dec call dec jmp into xchg adc nop xchg sub push (bad) mov pop test or mov test add lea (bad) pop jbe test or pop add in jbe sti jo cltd or xor mov xchg aaa movlps popf cmp int (bad) hlt mov sti out into aaa (bad) lcall inc sbb lods cmp xchg stc mov jp jne push jne nop inc popf mov imul aaa into je xor neg xchg mov mov jns hlt or mov jle jno adc cltd sub and cmp mov jl mov gs mov jnp inc xor adc mov adc (bad) sub out je jmp es test sbb xor int dec into adc (bad) loop repnz mov fwait dec out dec add adc mov push inc rolb fsts rorb movsl pop or xor js ret orps jp mov pop (bad) adc scas jne call pop rcrb lods push fsts leave (bad) shr and repz testb sbb adc mov test or cld in sbb mov ljmp cvtdq2ps shrb adc popf jmp pop testb jecxz push jp cs pop mov mov mov jne stc jne add test xor fstpl lods adc mov popf push movsl jnp xchg test adcb fmull dec xor stos mov mov arpl mov shr jecxz outsl pop xchg fwait sbb push jae push (bad) lcall xchg mov sub xor in in scas adc mov push stc mov (bad) xlat adc adc and ss js mov inc lahf int cmpsb xor pop push stos fimul or cwtl dec out jno or sbb (bad) repnz es push jne cmpsb add repz xchg cmpsl popf sbb in push sub outsl adc cmc jns cli in mov push les stos add dec jecxz (bad) (bad) movsb adc mov and fisttp pop jae push xor add cmp adc out lock push inc loop adc mov aam movsl push dec in jge mov dec (bad) dec pop pop or push sub or lahf adc lret add mov xchg mov ds jmp mov cs inc mov add push cltd cmp fidivr hlt test out xchg push setge push out sub or jecxz fildll mov or sbb xor xlat orb ds push clc mov inc repz add fstps fmuls ret or xchg adc adc clc and adc jnp,pn jae sbb adc addr16 mov pop int3 cwtl les aas insb vcvtss2sd sbb xor mov sbb cmc enter pmaxub cmp xor xchg adc repnz stos dec mov push in mov iret push stos or pop insb jmp ss xchg mov stos add dec aaa push cld adc pop jne aas mov mov pusha mov dec loopne fsubr out cmpsb push outsb push adc repz inc cmp adc jmp push out mov dec push cld daa adc push leave es arpl in mov test data16 packsswb sbb jbe cmp adc dec out rorl je cmpb fwait mov push lds push and movsb adc test sub insl out ss in dec xlat cld or fdivrl mov cmc inc mov inc test addr16 ljmp add jo mov fs lret adc popa sbb adc mov lahf mov stos in cmp aas std xor sub insl dec mov (bad) jnp mov cmp das xchg adc lds cmpsl inc aas (bad) mov cltd shlb out lea loop pop cmpsb sbb push mov sbb adc adc adc repnz mov mov add jns movsb cmp or mov mov scas fs cmp adc dec lods imul lret sbb inc js and out sbb cmp push fiaddl pushf imul (bad) jo lret mov and mov jae xchg sbb jne int mov adc std (bad) pushf mov addr16 mov sub rcll sahf inc nop aam push test pop mov lds adc repz gs mov or ljmp mov callw dec fs decb repz jne xlat mov (bad) xor push iret pop and mov adc sbb jo xchg sarl rol or and adc jge (bad) (bad) rcll push push push adc jl dec insb pop xor mov pop add pop out lcall xorl icebp cmp cmpsb daa sub stos mov (bad) jg adc pop mov mov push jbe movups mov jle xlat mov adc pop dec ss adc frstor mov sti scas daa dec pop add cmp les push inc xchg loopne dec add popa push inc fcompl adc lret sahf mov sub push adc ds pop rcrl int adc push xorb cltd jae adc popf mov push ja sbb stos idivb insb mov push (bad) mov repz fildll push pop mov daa addl jnp sbb and cmp dec push add es adc pop das lcall les pop pop cmpsl xchg pop lea push sub xor fdivrs (bad) gs sub sbb (bad) jmp stos mov jecxz and out push ss mov pop sub adc mov xor sahf pop adc dec sbbb or mov add adc push pop jns pop sub repz loope out lods fcmovb mov gs jbe in or xchg lds stc push pop dec pusha addr16 inc ds adc (bad) popa shll sub int aam xchg adc fdivrp iret mov adc mov mov movsl pushf (bad) adc mov in pop stos jbe adc fidivrl sahf xor ja rorb sqrtps mov or aad mov sub xchg in lcall ret js (bad) test mov push and sbbl out (bad) jno mov pop adc push test sbb out adc out daa xchg outsb fnstenv add fimull cmpsb dec imul xchg fcoml xchg stos pushf ficompl mov pop push arpl and xlat fimull les cmp mov insl movsb jecxz dec jge (bad) rorb repz pop (bad) mov mov mov adc and mov insl mov add mov or xor or fucomi push les clc sti add xor inc mov out jmp ljmp push mov int adc xor stc pop sbb and adc sub in mov xchg insb xchg lret rsqrtps sbb enter xor aad mov xor fidiv xor inc mov and or mov adc mov cltd adc stos or repz (bad) stos sbb sbb aad stc push cli int push sbbb mov lfs mov (bad) mov cmpsl cmpsb adc inc or rep decl cmp push fsubrl jl adc ja ljmp nop mov mov (bad) out pop rcll jecxz jl cmp adc xchg push cmp jns,pt repz and push xchg and mov lds adc add in stc scas popa (bad) mov and popf hlt inc jecxz stc dec cmp push fnsave (bad) lretw lds dec ds or je mov lcall repnz daa mov push mov inc in inc mov fldenv xlat fwait into (bad) adc push xor push cltd lds inc or pop cmp loope push (bad) or and push inc xchg xor add or add stos dec mov out lahf jo int3 lea lret mov iret test ss adc push out cmpsl inc push push add sbb (bad) lods inc mov fnstsw xchg pop mov dec les shlb sub pop iret add dec cmpsl push adc xchg ret pop mov int3 sti push push aad jns not sub fldcw (bad) push or iret jle rcl aaa in dec ficom int3 adc mov sbb mov xlat insb or or sbb outsb jecxz rcrb data16 pushf xchg rcll or sbb pushf xor and or in repz jecxz adc push aam push repz xor stos push adc (bad) xor push adc sub outsb mov rcrb adc jmp adc jo outsl cmpsb pop mov add adc call in mov ljmp addr16 (bad) adc and cmp mov lret xorps pop jmp sbb movzbl add (bad) and jecxz bswap orl xor shl or mulb cmc mov xor jno jmp inc mov adc push fmull cmp in pop push or adc mov out out jns ljmp sub movsb fidivl add jns push adc lret mov nop mov jae pop mov cmp mov adc outsb xor aaa pop insb push lea add cli ss dec cmp jmp shlb sbb cmc xchg adc cltd dec arpl fbstp call sub lds cwtl jle repnz pop lahf dec xchg orl mov hlt xchg xlat (bad) pop test inc dec add adc lods ret cmc hlt (bad) repz cmp fs mov adc cmp sbb jns or add adc ja sahf xlat jmp inc adc fsubp fildll xor xchg jecxz cmp adc sub jge pop inc and xchg pop add jno push jbe je packssdw adc cmp insb xchg or push aad xorl mov out je icebp (bad) jle movsb push bound xor xor add out leave movb rcll mov in cld mov push insl add in cmp js jle lock pusha mov add or jne fadds push daa repnz inc shrd inc fucomip push mov xor cs or lahf in pop psrlq lock (bad) cli leave outsb add adc in mov xchg xlat dec sub inc pop lea adc adc dec jns aam cld test lea in sbb movsl dec sub inc mov adc (bad) cmpsb sahf jle add push add movsb or xchg or xlat adc jp gs jb adc loop int jg mov repnz xchg (bad) and inc mov push leave nop gs outsl add adc and aaa repnz add inc xor or (bad) je icebp xor repz sub ss (bad) das pop adc scas nop push movsl pop and insb pop adc push jnp xor push add push push xchg lcall adc in (bad) lock mov cmp mov pop insl sub adc xor movsb adc loope ret mov adc cmc icebp pop sub cmpsb pop push sub bound pop push add into adc pop jmp ljmp into mov loope sbb paddd mov (bad) aaa loope xchg inc adc dec aad cmp pop fs cmpsb ficomp ss add repnz cmp test dec and and addr16 outsl xor mov add and or bnd or sub test bnd push pop shrl dec push xchg push cld jns cli mov xchg mov inc pop jb shl sub push (bad) lcall mov xchg lods jle mov push and loop cwtl lahf mov mov lcall or dec sarb out loop mov icebp adcb and pop sub addl jp jae mov push popa ljmp test (bad) enter aam jne mov into push push xor sbb and or roll dec dec xchg and rcrb pop sbb test dec loop fcoml (bad) pop push adc xchg in jae mov xor sbb xlat xchg outsb rol push jae mov jnp fs push sbb ja pusha fcompl cmpsb mov test ret pop inc jmp mov pushf jno mov jmp adc imul imul lcall insb adc out loop call jmp ret pop xchg gs and pop xadd mov in push outsb push xlat xor nop mov mov cmp pop xchg adc orl out jecxz pushl out inc mov jb mov or imul shll dec push xchg sbb mov fwait movsl sbb stos sbb lock cwtl lods jg enter mov (bad) int lock leave xchg fcom out (bad) imul lret push fiadd adc adc ret or je or cmp or pusha (bad) mov scas fstl aam addr16 lods hlt repnz sbb xlat pop push (bad) sti adc pusha sbb mov xor test xchg sbb js repz xor sbb mov adc jge mov sub out adc es pop jb add sbb inc add sbb in fsts xor or adc js fdivl cmp xchg cmp int3 xchg (bad) mov xor cld fimull xor pop cvtdq2ps repz je mov pop mov jno jmp das pop mov loop int and out sbb cmp mov lret jne cmp addr16 pop push or out sbb push out lcall and push xor popf pop and dec jp inc cmc in jle in inc jg push loop jno mov dec je sbb jg rcrl push sub and push add add or pop insl in jno lods aam stos add mov xchg loop xor or in mov or imul adc adc cmp push or or fcmovb stos jb out mov fildl dec xchg pop xchg dec arpl stos idivb cmp adc jle call adc add sarl adc pop data16 cld xchg lret push and xchg out movsl pop adc ja cmp dec cmc repz jns ljmp lock into out push outsl repnz pop or sbb aas xchg daa shlb cvtpi2ps mov addr16 sub xchg adc mov inc addr16 fsubr sub mov ja das ret add subl adc xor adc dec outsb es push ljmp push daa movsl int adc pop mov jle test adc or sbb dec aas call cmp pop pusha dec adc jle cmpsb pop sub dec outsl leave ljmp sbb aam lea push cwtl sbb icebp inc std add or repz mov mov popf jo jg addr16 mov push adc add xchg (bad) fxch dec mov sbb jmp das inc lea (bad) push insb xchg jle test mov adc push dec adc xor sti insl mov and ror mov dec fcoml jnp sbb in sbb jbe push test scas adc std sub sub stos es push mov icebp cmp sbb loopne in (bad) jae xchg sbb lea mov pop xchg int3 pop mov sbb xchg arpl add lods repz call mov leave jmp in xchg jno pop jbe stos test imul jne ds fsubs mov (bad) hlt add daa (bad) adc cmp mov dec orb adc dec pop adc sub push sub test add mov push repz xchg fcmovnb adc pop lods les insl adc mov ja sti (bad) popa or nop insb cld or inc addr16 outsl xor aaa inc jecxz or dec bound xchg int iret jmp hlt jle and pusha mov mov push pop dec mov icebp shl sub lds sarb loopne cmpsl adc repz mov pop insb (bad) pushf scas jb mov dec adc call inc mov sub push js (bad) hlt cmp imul push xor xchg call nop fmull out movsb (bad) and or lea shlb outsl push dec out add sbb or push pop or jl mov imul daa das mov paddusw movsl je adc jnp mov mov push sbb xchg test xor and mov lea sahf sbb sub adc das add jb pop mov in add pusha lahf fist xchg sbb loope aam ret add mov mov lahf xchg and adc add jg push jbe jp test adc gs sbb xor inc mov mov xor mov test push stos or or sti adc cmpsl push adc inc xor xchg pusha (bad) lock int3 pushf sub push cmp and lret dec incl push inc xor or push sbb cmp push fistl xor sbb or or cmp movsb (bad) cltd pusha mov sbb in cli mov adc ret movsb sub xor adc push add fimul mov imull loope add adc cmpsb pop mov dec lcall addr16 into sub or ficompl push adc sbb inc (bad) adc inc sbb adc cmp and push or mov push mov mov xor cmp and mov jp (bad) adc iret out adc in aaa add loop xor lcall mul dec adc idivl adc into mov sbb sti adc adc and mov ja sub cli add repz pushf enter or popf adc mov stc sbb push jb (bad) mov sbb lahf xchg cmp mov popf inc mov stc pop call push push out repnz mov adc pop xor mov jge fiadd stos add add push sub pop push popa adc pop xchg popl pop xor pop jo call adc xchg es cmp push push pusha pop icebp pop enter jnp adc pop mov mov mov adc int aas push pop hlt add adc (bad) movsb addr16 adc fdivrs mov cmc pop adc gs insb pusha inc adc fwait dec in stc inc jbe adc xchg dec lods pop mov gs cld (bad) cmc daa xchg mov adc (bad) jne insl inc pusha sbb je adc dec jp hlt sbb mov xor lret push imul sub insl clc mov add out sub lods fcompl repz out sub cmpsb out js scas and inc cltd mov mov mov jmp shr push push and int3 cmp imul inc into sub sub or jmp mov je sbb test rorl int3 and add jno test adc in jle repz and lcall imul repz pushf dec or inc xor adcw adc stos pop mov out imul bound jp (bad) popf loope out stc and push pop in in rcrl mov fldenv mov stos xlat imull mov and loop ficom pop (bad) jecxz pop fisubl pusha adc (bad) push xchg (bad) incb gs lods rclb xor sub inc rorl mov jno sub sbb adc aam addr16 add jecxz mov mov or into xchg out jecxz inc mov cmp pop sbb and jns les xchg jmp jge mov (bad) xchg test mov subb mov testl and adc das bound push (bad) aas (bad) mov pop and or jg cmp imul xchg stos cmpsb cld loop rorl lahf inc ja sub inc xor sub adc pop lahf and outsl and sub mov pop nop cmpsl aaa sti xor dec stc adc xlat js mov (bad) sbb cmp cs push leave outsl mov outsb push jno aas dec xchg test sub adcl stos push cmc in push inc aas in xor push xlat mov sub jb lods mov je cmc adc (bad) daa lds (bad) or ds mov leave outsb dec xor pop push (bad) out pop xorb mov ret mov xor mov repz and shr xchg lods pop or jle hlt mov mov mov inc lcall sahf pop xchg dec jle int3 add ss pop add lea (bad) mov push adc or xchg adc pop add xor fdivp add imull xor sbb mov pop xchg out cmp inc mov mov sub pop loop adc repz mov push push int push mov adc and testb fstpt jecxz dec repz rcll (bad) xor int ret out cmpsl cmp (bad) lcall inc mov mov push sub pop in aam xlat lock js jnp cmc and cmp mov mov xchg and lock stc dec mov adc adc inc mov dec lds lret add pop push jno add stos test push out cs dec stc sbb mov xor (bad) push xchg mov in pop jecxz xor jo or fstps cmp xor cmp jle jl xchg js cmp sbb sahf push and hlt cmp dec imul bound ds lahf aaa push and and jecxz jo shl push jl add test push in cmp xchg xlat add push sarb fsub sarl xor fiaddl je mov push jmp sub adc jo push pop push repz (bad) and inc roll xchg pop sahf xor movsl add std adc nop mov dec insb mov pmaxub xchg or or (bad) fadds neg adc in or ret sbb sub or sbb push outsl inc jne mov lods adc xchg jae lods push dec enter xor sbb add dec and int and mov lahf push xchg push pop push fwait mov test and cli cmpsb lahf lds inc cltd push fcomps lret out mov mov (bad) or jl mov or and push les adc loopne lock icebp jae dec and sti lock jbe adc jne addb mov dec (bad) push xchg sbb mov sub clc cmpsl ja jg push cld leave mov ret lret inc iret movlhps das sbb popa divb mov xchg push lds jge pop dec lret call lea in add repz mov pop xor jnp rorb cmp (bad) mov pop repz xchg ljmp xor mov pop mov mov (bad) push adc test mov mov xor sahf push sub xchg push xor inc xchg je and jmp out ds test cmpsb pop cwtl nop rclb sahf dec push daa xor cli add fucomip cmpsl inc jmp push das into enter inc cli dec jmp adc outsb lret in cld xor (bad) pop xor fwait outsl fnstcw adc and adc movsl jnp popf setno mov pop adc mov jg test outsb jno (bad) mov scas add fcoml test and clc mov adc sub xor add xlat jno pop sti push cmp cmp jo jns scas sbb adc shrb add insl sub ret push arpl inc ss add (bad) (bad) hlt pop lret push adc out in scas jle push lock and js add adc sub sub or fcomip test stos int test fsub stos sbb adc int jg jns dec movb sbb rorl mov xor xor or das andl xchg inc test cltd pop mov aaa add dec or ss out adc xorb pop scas (bad) and xchg mov pushw push fsubs mov or pop adc insl sti push xchg push and jp arpl mov inc cltd xchg int ret (bad) lret ss jns adc pop inc (bad) testl xchg mov popf fwait je mov rcl adc dec mov int xlat cmpsl and xorl notl dec mov sub iret jecxz fdiv lcall out or repnz inc lea add push or sub or (bad) into dec mov (bad) jno loop (bad) mov jmp adc inc rol mov stc adc flds cs lcall ljmp jg push and add mov adc lret jle add lock mov adc xchg popf xor repz or jmp push or insl dec push out js int3 adc faddl xchg imul add mov sub and jp movsl xchg outsl add pop adc jb out adc std pop xor cs mov jmp inc cmp hlt inc xor xchg adc (bad) mov insl nop (bad) cmp xchg jbe repz fldpi mov out adc cmpsl cmp adc out lahf jge jns je add mov fidivl lods stos pop jge push dec stos pushf mov push xchg div mov cmp cli call xchg dec mov push pop mov test cmp and jae imul hlt dec push xchg int3 ficom mov jo ds push push test dec jno mov cmpsb pop cltd or xor inc or shll je push leave push aas out test mov xchg fisttpll aam pop adc roll lock sbb dec mov je pop fidivl test fmuls sbb sti repz mov adc clc bound xchg xlat push inc scas pop xor testl outsl je leave imul addr16 sarb push sbb dec mov mov push (bad) cmc test sbb das jnp dec stos (bad) (bad) outsl xor sbb ret mov inc jno loope (bad) xchg xor xor mov int3 out mov aam adc loope inc insl shl adc mov xor mov adc (bad) xor xor aad push sub jne xor jno enter push stos mov sbb jne jae sbb out mov add dec ds ja adc (bad) aam call xchg mov mov add mov jbe push xchg addr16 fisttpl mov push jb nop mov stc mov inc inc mov repz ret jge xor std jl negb lods xchg inc movsb (bad) pop mov fisubr jmp mov mov insb jno pop add mov or sub test loop xor or jbe subl push dec insb (bad) mov jmp adc hlt dec in ja clc popa dec jl pop add add lcall mov mov popa sbb (bad) mov inc or fist and pop aas enter cmp int shrb sbb xchg mov movsl cmpsb jne sbb lahf inc or sub or adc mov push dec mull xchg mov mov aam jns xor or mov ljmp push xor mov shrb or scas cmp add les push stos mov lahf nop mov and and fwait repz mov out mov movsl cmpsl addl dec insl add lcall xchg lds xchg jae fsubrl roll out adc adc mov pop out lock pop add das adc or cmp inc jmp aad xor mov and rorb ret repnz cmc xor and (bad) cmp scas add sub or mov mov push (bad) add mov arpl dec adc inc cmp add fsqrt mov mov imul dec xchg push popl lods inc into movsb repz jmp fs add pop mov adc adc loopne out push xlat xor aas push sbb or out xchg sbb test dec or fcoml add scas mov iret stc out adc push repnz fwait adc sbb xlat adcl ss add jmp mov andl ja xlat in inc jns jo adc sub pop icebp jge notl pop mov into xchg xchg insl inc xor jo jecxz addr16 out or stc or jbe enter cwtl sub imul adc push jl (bad) mov std dec (bad) jmp jmp pop dec dec sbb mov je fs pop push lods (bad) jmp xchg mov pop loopne push fwait (bad) adc aam mov lods repz pop sbb pop sub subb int addb mov (bad) push add or add push pop or jo popf xchg nop adc aam imul sahf scas xor repz mov hlt or out bound xchg dec nop mov adc insb enter je mov adc jle jl icebp xchg push mov in sub or and pop movsb sbb xchg repz mov sbb push loop adc jg pop addr16 cs shrb jecxz insl gs cltd add icebp daa fldt psadbw xchg (bad) adc mov mov sub cmp fsts or mov adc ss or into cmpsb adc pop rol mov pop jl (bad) shl outsl test loopne add adc jp ss mov mov pop out imul mov scas inc fisubl scas (bad) nop jno mov test int sub and mov pop add sub pop mov pop adc dec xchg jmp xchg push sub mov out dec pushf xchg pop xchg clc cmc jbe adc mov icebp fiaddl stc xor or inc jp dec push cli cmp roll mov and lods pop add push mov stos adc add leave mov int xor cli or cmp mov std negb sbb insb fist mov push cltd jge mov daa mov imul push mov inc cmp xor mov dec add add push into mov sti push or jecxz ja xchg int3 xor adc push or sbb cmp push or push jecxz mov adc xchg and adc pop adc icebp push dec iret cli pop jnp mov fistp fs xor insl and bound (bad) loope or inc push test dec arpl adc jo cmp cmpps inc pop mov out leave stos out adc or test (bad) xchg rcll fistp xacquire xor xor or cwtl mov push rcrb adc xor sub sbb les xchg mov xor mov (bad) push and popf sub outsb push cmovae loopne adc push in inc cs add enter cwtl mov into mov repz jecxz sub mov dec or adc jb mov out mov ljmp or jg xchg insl inc adc and out call add aaa push lea inc xor bnd sbb bound mov rolb dec mov jl sub pop scas sbb (bad) js or jb ja mov push leave cmpsl add (bad) push rclb xchg repz push adc jp inc xchg jnp jne adc and xchg xchg and xor (bad) xor mov lods outsb adc xchg lret adc lods js dec cmpl iret xor xchg imul cmp dec adc pop jg adc aaa mov enter add (bad) lahf dec (bad) ffree adc popf clc inc push stos push imul sarl cmpsb add ret sub sbb mov test or pop imull push cmp or call out aas dec in add sar jb imul adc (bad) pop cmp popf mov ljmp enter cmp or or addb pop xor mov pop xchg test movsl fwait mov xchg adc nop rep mov add fdivrs dec adc movzwl mov dec movsb xchg push jns shrl repnz cmp or mov add pop test adc or push and js add loop fildll (bad) inc mov cmp mov inc cmc pavgb push sti cmpsb cmp pop fiaddl inc or out insl and imul enter mov fistl xchg sahf ret inc loopne sbb xchg adc sbb pop ljmp push or in cmp orl adc jmp mov pop mov adc stos aam lcall sub lds xor aaa or pushf jecxz mov setb and insl push test sbb add add adc jnp test adc (bad) cmc out fwait jecxz stos (bad) iret (bad) adc cld jmp movsl dec loope add jg cwtl jg fisubrl sti (bad) and pop mov test xchg (bad) cmp mov add mov xlat jnp outsb and or mov xchg enter jb arpl lahf mov xor inc sbb mov repz and cmp mov shl mov lock (bad) or mov mov testb cmp or inc repz popa mov add nop movsb sbb jmp add adc mov xchg xlat daa adc out ljmp dec xor sbb mov pop xchg mov jno adc mov add pusha jle cmc sbb adc push cwtl and int jns cmp lods add fwait nop (bad) das (bad) adc ss in xor add in pop stos ficompl xchg adc lods pop jmp xchg int3 sub xchg mov mov je xchg cmp and fmul jge adc push sub adc in mov xlat pop pop and dec cmpsl fisubl inc mov repz cmp mov insb adcl cmp add adc out fsts (bad) cmp inc add stc imul adc pop push call push or std ss inc icebp in pop mov repnz adc jecxz daa lcall add fiaddl sub push mov sbb inc xor call js loope jle add cmp cmp in adc push outsl je xor xchg mov test sarb movsl sahf insl gs pusha fstl xor ret mov (bad) mov iret xchg fidiv jne fnsave movsb pop or (bad) loope aaa lock cmp mov stc jp mov bound add xchg ror rorl add (bad) ficoml negb nop and loop or cmp push test xchg fstp adc push sub shll loop repnz dec xchg cltd testl out ljmp pop push (bad) leave dec mov adc adc ja push xchg insb mov movsb pop fbstp adc js dec adc repnz adc jo insl and cmp xchg arpl xor jg add out sbbl jno fsts movsl and int mov call dec (bad) jae loop mov aas pop imul divl pop push stos pop inc adc add mov mov adc loop mov sub pop or sub sbb push push gs or nopl xor movsb sbb les cmp mov int lret aas push mov pop mov cli fmul adc push das lcall (bad) add adc pop cltd dec adc dec loope gs cld insb lds popl in inc xchg leave xchg mov mov push sub cvtps2pd aam inc into loop sbb push adc inc push out cmc cmp adc pop repz out adc sbb sub pop fidiv adc or jge lcall mov cmpsb push jmp test xor cmpsl rclb pop xchg lcall mov das jnp sarl fnsave jmp test add or adc insl xor adc jmp mov and push pop pop sbb add jle gs xchg test add pop insb jnp ja pusha adc xor loop xlat mov xchg dec es dec add dec imul inc mov repnz inc loopne repnz mov sbbl aaa push adc mov sti mov inc cmp lods add pop xchg inc jnp xor sbb imul insb push inc lcall in dec add pop adc and push or jecxz and mov jnp dec pop sarl popa fdivs adc shlb sbb fs inc stos jge add ljmp xor fwait jmp popf jno movsb sub dec mov jae or adc int3 jg (bad) stos outsb dec adc jle and (bad) leave inc dec icebp sub cltd push dec pop xlat mov pop xor mov jns inc mov inc pop pop and mov xchg add into ds xor pop repnz and or or int or repz add push pop mov push mov mov cmpsl xor dec std sub dec das in and jecxz jge adc push sub movsb mov scas jle inc or xchg pop adc notb nop dec jge push push outsb enter psllq adc mov xor fidiv push cmpsl push imul nop mov repnz dec (bad) push ja mov and cmp and pop adc out movl int xlat push xorb inc and call cwtl push out add fsqrt rorl dec (bad) add jp popa repnz outsb adc in jge mov ds pop sub cmp sti test adc pop adc push push mov cmp addr16 xchg enter jge adc push out push mov sbb xchg or adc shl gs popf arpl ficompl lods add fsts mov stos sub out pop mov add mov mov cmp pop mov mov rolb mov add jecxz cld cmp sbb mov ret inc xor add pop sub xor ljmp mov repnz mov repz sbb je mov push loop outsb cmp shr push ja loope sub xchg mov cmp inc int3 mov out cmpsb fldenv lcall or mov sbb out rclb repnz mov outsb les out pop xchg sti (bad) gs sbb gs ret popa push push mov (bad) xor pop or add lods ljmp pop arpl inc rorb mov imul mov iret push jp cwtl (bad) xchg xor cwtl mov ficoml inc cwtl (bad) je sub mov cmc jbe add mov lret pushl dec dec adc (bad) or jmp mov sbb push cli je loop xchg ja inc imul out lcall adc add inc cmp daa lahf insb sarb push movsb jge or dec (bad) clc dec pextrw or push jne ljmp sbb imul fstps inc adc xor outsl repnz nop sub jge jno adc dec jmp fidiv ret or test push mov sbb repnz mov jnp push outsb add scas lock pop test ret sbb xchg out add lret cmp adc (bad) mov (bad) adc mov push fs adc cli xor leave mov decl jb iret jecxz sub fcompl or jae pop nop je call xchg mov sbb push sbb adcl fildll mov adc sbb iret cmpsl sbb scas sarb (bad) cmp push adc adc push je (bad) into icebp daa inc insl mov mov movsl dec lods adc xor addr16 sub add inc mulb cmp dec fwait push in mov push adc enter lahf mov fimull push dec cmp push inc xor (bad) push test pop cli push out jno ret adc push (bad) mov (bad) sbb adc mov es in popf adc cltd (bad) mov arpl sbb cmpps sbb cltd mov xchg cvtdq2ps lods adc or lds hlt ljmp inc jno xor push aas push movsb add xor int3 cmpsl sbb pop lods pop shlb mov test rolb out xor out add mov fimul int3 mov adcl mov loop or pop rorl mov repz jecxz push ret push mov inc addb jo fmull insb lods mov test lock adc sti mov push dec adc jl repz pop xor push popa addl imul sbb pop lea and loopne mov sbb (bad) sahf mov adc inc sbb mov sar pop icebp sub js js and push mov add hlt jl dec mov popf sub (bad) into sbb mov sub shlb cmp loope mov ftst mov aas push mov pop mov sub or (bad) sbb aaa insl or push xchg mov xor imul cmp das popf lock xor pop movsl sbb aam popa (bad) jne or pop push push mov icebp xchg enter sub xor loopne jbe test inc pop lods pop push adc add sti xor sub popf sbb pop push adc jno fwait ja mov mov adc xor or icebp orl xor xchg push shrl xchg inc cmp int fs push xor inc (bad) rolb xchg push fiaddl frstor jo jo or adc pop fcoml mov daa enter pop fcoms out mov add mov je pop int3 add out jbe into adc push ds fist movsb mov ret add int mov (bad) out jns add xchg cltd dec mov push (bad) and and (bad) push je int3 sbb addb and add cmp mov or jge or test and jmp pop push cli js inc lds and push popf ja rcrb dec or adc jae imul icebp aaa cmc pop fstpl insl cmp push data16 mov jp xor cld cmpsl repnz sub lock cld (bad) adc rcrb mov cmp sub lods or pop sbb add repnz imul lret xlat add mov (bad) lods xor mov adc and test push cmp popa lcall push ud2 pop adc or mov fbld xlat cmpsl sbb xchg sbb cli bswap mov aas xchg pop push imul push lcall gs (bad) fsts cmp adc imul fwait xor (bad) cltd popf fmull sub pop outsl mov xchg fdivr test rol and iret push push sub adc les adc in mov call bound nop xor mov push fwait shlb mov jecxz jae adc js adcb sbb lahf and inc call push mov jmp jne lea adc cmp je (bad) (bad) jne in (bad) ja mov loope stos iret enter incl sub (bad) movsb stos adc stos rclb les pop pop mov pop or sub (bad) cwtl lcall psadbw add (bad) xchg in xor jge loope dec mov sbb xor aaa (bad) adc es cmp int cmp sahf sbb sbb mov icebp test xor add jae insl xor iret add mov rep test lcall mov pop in in or sbb scas dec mov leave xor jmp popa pop sub mov add xorb cltd jge dec cmp (bad) xor outsb inc hlt push push dec mov (bad) lret mov xchg repnz stos pop adc andb sbb xor stos push aaa lret lahf outsb mov rcrb pusha sub int3 mov pop (bad) test shrl (bad) sbb push je fs enter push mov into sbb pop add xlat insb push test xchg outsb adc mov xchg popf bound mov mov push dec pop repnz hlt pop jnp and push xchg add stos push popf jbe cltd push nop cmp sbb lret lea frstor adc mov adc cmpb adc (bad) adc stc sbb cmp sbb imul repz jno arpl lods test mov fstps push fsubrl scas ljmp xchg jae fdivl out test int3 xor aas and xchg and sbb mov sti aas sub fstl jp (bad) xor push addr16 daa je mov mov gs out mov addl mov mov rorl pop jle and lret int3 jno lahf push sub jne mov xchg enter or sbb adc push stc inc cmp fsubl mov xchg bound inc push sub xor jecxz imul enter dec adcl adc or loopne insl pop leave rclb rcrl jecxz xchg dec jg insl les add nop cld add lret mov aaa mov inc jge into cmp aam jle sbb mov movzwl pop iret int3 nop je sbb sbb sub sub xor pop outsb lods pop and ljmp xor mov push fbld sbb mov push daa xchg std repnz mov fldcw adc (bad) dec cmp or popf push pop aas xchg sub sbb (bad) mov adc inc or mov and add rcrl roll icebp add cmp xlat (bad) or das cmp adc mov mov adc pop adc lods andl xor mov xchg bound inc mov xchg sbb ret xchg or test dec xchg ss sbbl push mov or xlat ljmp fistpl cmc addb nop outsb fdivs aas dec inc movups mov (bad) push cs sbb add adc pushf aam scas dec (bad) lcall fs sub jno inc sub sub mov or xor mov adc jmp iret movsb inc mov sbb aas mov and sbb adc mov jne add push dec and mov mov pop xchg movsl jo (bad) mov insl mov lods inc xor js or ljmp imul xchg mov movsl sti (bad) xor push pop jae aad cltd adc xor mov (bad) push push faddl aas dec inc or roll jp fstp xchg adc dec cwtl jbe nop ficoml push rcrl fcompl pop mov sbb ret adc (bad) lretw mov xlat aaa (bad) fist int3 push push mov rcpps (bad) mov leave xchg jbe dec mov lods xchg xchg movsb pop out pop lods pop adc mov dec pop add inc mov addr16 hlt or pop stc ss and out ja xor aad xchg push push out mov mov mov clc dec push lock mov clc fsubl pop adc xchg nop push mov push out push fidivl mov lret push fsubrs into push imul lods enter xchg int xlat in outsb mov aam outsl xor jbe dec pop shld in (bad) or ficoml inc jl adc fstpt xchg loop icebp xchg outsb adc xchg xorl (bad) push out cmp sbb out mov mov adc pop jbe xor lock push jecxz into and or push xor inc adc mov xor ficomp or push fnstsw loop jp mov fisubr repz test pop xchg lods adc mov out pop adc aaa adc and fmuls sub sbb pop pop fsubr addps cs push repz fnsave sbb mov adc pusha pop in repz mov add adc lods mov popf lock xchg xor in jbe cmpl fisttpll or sbb pop repz ss xor sahf add outsb xor cmp cwtl lock mov and stos fsubl adc push xchg cltd notb fsubrl fiaddl adc jl adc cmpb int nop shrl insb fbstp mov pop add xor sbb leave test fs rclb sub push and mov mov fdivl push ds and fsubr adc and es mov nop loop mov fwait or pop jl mov add mov mov aas fildll mov in test test aas rclb repnz cmp pop imul ja sub imul sbb mov scas mov sbb mov aas mov stos lods pop icebp or in int adc stos in and mov popa adc repz jge fmull push adcb cmp mov (bad) popf test in adc add into xor push xchg cmpl insb adc jge add sbb stos push ds mov push mov rcll push dec sub lret adc fdivrl adc fiaddl lret adc adc push xor adc out lds sub adc mov adc in in lret movsb xchg fisubr js iret les mov insb dec movsl jp adc shrb jne test sub ret push push push loop cwtl insb incl sub inc mov pop shlb adc ss (bad) repz xor xor add int adc fisubrl adc ljmp cltd and mov loope or gs adc in and add adc imul jp cmp sub into repnz aad inc cmp mov add push or xchg mov push jmp je or push loope xor addl and dec mov xor lcall shrl bnd jmp adc push dec out sbb xchg adc data16 je jbe cmp js (bad) test ret pop or xlat adc pop out popa mov scas sbb adc hlt xor aas (bad) int3 (bad) push cs ret add adc stc dec sbb ret and (bad) jne jg aas cltd shl pop ljmp inc repz inc cld mov (bad) mov xchg xor pop movsb or sbb adc pop adc clc push cmp cmp adc cmc inc mov ds pop (bad) loopne ret pop add dec mov adc cmp adc mov in (bad) mov jne sarb and out push lea outsb add mov lahf jmp into mov adc in js push sbb rclb leave cmp adc add es mov jl repz lahf (bad) cwtl lds int aad mov jl int cmp and mov jnp lret mov lcall adc sbb gs mov adc js push jne ret push and sbb rol pop out fisubr les sub in cmp cmpsb add adc pop xchg sbb imul or mov pop mov adc sahf aad sbb icebp or in push int xchg push mov into xor adc mov dec repz mov cltd sbb xchg loop call mov js dec mov jo adc leave adc jg in (bad) adc fucomip dec xor and out mov jle sbb adc loopne pushf mov out or lock insl pop lds popa sbb in add sbb out adc xchg lcall je sbb xchg cs (bad) iret sbb ficoml lret (bad) mov sbb mov add aad hlt adc pop add or mov push sub inc (bad) inc mov xlat cmpsl fsubr mov or and or insb loop repnz mov bound or mov mov hlt shl dec (bad) push adc repz mov andl cmc popf (bad) int3 lahf adc das dec jle loopne adc std mov xchg or js (bad) mov lret jl je in inc xor inc adc cmpsl cs das add scas mov mov push push sub mov clc aaa sbb insl adc or lods mov scas (bad) jno mov sbb stc or icebp xchg cmp xlat push push jno adc rcrl lcall inc adc or xchg cmpsb and inc sbb inc iret test bound inc mov fs in into push xchg push jp test aad pop sbb pop add jecxz and adcl sbb mov repz add push (bad) cltd lret sbb pop stc pop mov and adc adcb (bad) or rorl pop adc push mov adc fidivrl out mov mov arpl sbb cld test cli add or out jle cmp jbe adc out cwtl pop ror pop dec int xchg mov and push ljmp push inc or adc rorb mov jo loop rep push ficoml jns inc ljmp sbb xchg int mov adc mov lock jno sub in mov adc xchg xchg daa clc or call lret subb fcoml rcl adc xchg xor xlat movsb jae xchg push cmp repz mov daa lahf or scas mov cmp adc adc xor mov out pop xor testb cs sbb adc sbb stos jecxz nop (bad) xor sub and jle mov cs decl mov and fbstp mov or mov adc in outsb test (bad) pop imull sub or outsb pop repnz pop gs add jae,pn addr16 aad xor jns out inc sub ds scas xchg mov lea frstor push or adc sbb inc add xchg dec cmp or sbb mov aam add enter add push mov in cmp test movsb and or and dec mov jmp sbb leave ja lods (bad) xor popf jge pop sub dec inc cmp adc loop or dec inc repnz cli and xchg sbb ud2 pop sti addr16 (bad) mov push pop jb enter std dec movsl sbb push cltd stos add xor adc es sbb lock add out adc bound dec ret dec xor mov sbb push push cltd lds fwait test nop inc jns divl icebp add push je ret pop adc cmpsl (bad) ret mov xor pop je lret sbb sbb adc rcrb (bad) add xor inc or and loopne mov jns push pop adc cmpsb or (bad) pop cmp xor sysret add pop or adc xchg push adc push and or (bad) and or mov fldcw push imul test dec rolb dec movntps cmp nop dec repz pop jae cmp adc pop sub std ret jns inc push cmp (bad) jl mov adc aas cwtl icebp pop adc mov mov sbb push pop sub or (bad) clc jae mov xchg mov xorb jp pop sbb mov pop dec jmp inc stos adc mov lret adc (bad) decl mov sti mov into sbb (bad) test dec call adc adcb pop out dec sbb mov mov mov adc lahf (bad) les dec add insb ficoml sub ja adc sub pop js,pt repnz mov cmp mov loopne xchg xor and adc push mov mov xlat repnz xlat cmp test fcomps adc mov sub int3 inc cmpb ss fsubrl (bad) pop add loop stos fildl pushf in cld mov jp adc xor shll (bad) in shrb scas push outsl enter mov xchg out sbb int notl sub (bad) fimull rep and push nop in adc out jo ret sub xchg dec repnz rolb movsb (bad) pop jne out mov add fs adc xlat das lcall mov daa push add adc nop push aam addr16 adc xor addps jo and xor mov shrl aam shl inc cmc dec ljmp repnz imul enter (bad) adc pop (bad) cs xchg pop or incb add bound (bad) push loop sub arpl push dec xchg xor nop movsb jle xlat int mov adc mov lods fidiv xor lahf outsb insb xchg add leave mov out stc xor mov sbb jb cmp mov shll div and jmp mov mov popf adc sub and sub push repnz imul (bad) (bad) cmc in push xchg push fistpll dec mov leave and (bad) addr16 pop mov adc mov int3 mov jl adc push sbb imul push cmp imul stos shrl mov adc (bad) sbb xchg inc push mov xor adc test ja (bad) sub lods cmp push sbb sbb cmc loopne gs mov lret xchg xchg ficom ja sub scas lock xor (bad) sbb or mov jp imul orb pop in push int push orl adc inc pop sub adc call dec xchg push pop or ret push (bad) fisttpl test xlat test in push jl or leave push enter (bad) mov inc (bad) jg outsb repz mov or jno dec nop or lds ds and and and pop mov mov ret inc or rclb dec repz add (bad) xor jb data16 adc push add ficom mov loope cmp push out adc add lods mov loopne pop pop add adc hlt repnz arpl jle add adc add xchg shrd and movsl enter setns inc ror add dec scas jbe adc aam ja ret adc or jnp push popf inc xchg pop adc shrl arpl adc and xor jle cmpsl adc data16 jbe jnp push inc (bad) cltd adc adc bound lcall add dec mov lcall and pop push lods dec sbb repz xor dec sbb dec adc cmp push insb test mov icebp push insl sub sbb int (bad) mov in push mov lcall int aad data16 or push push ret lods subl pop insl and (bad) mov idivb sub push sbb in or out insl adc rcrb adc (bad) mov xor sub into cmp push xor je sbb mov and fcoml outsl addr16 sbb lcall insl movb es nop mov clc repz loope negb ja jo mov lds paddb sahf adc fdivs xchg adc mov pop mov ljmp mov mov int3 sbb out adc adc cmpsb sbb shll sub mov fistpl mov outsl mov add insl pop fistpl push xor add ljmp jp pop es popa mov enter clc push mov pop sbb repz mov sbb icebp add (bad) mov jnp cmp cmc stc mov or iret sbb or out adc sbb xchg mov divl add arpl cmp or in arpl test or insb iret xchg dec nop jle adc and cwtl lock xchg dec cld inc popa es std pmulhw sbb jbe shll mov pop int (bad) mov shl fiaddl sbb add and xchg jmp add in inc mov dec dec xor push and lods push in cwtl (bad) mov fistl jp repz mov mov mov dec lret pop lea add scas adc cmp faddl xchg mov jecxz in dec cmp pop test mul test outsb adc pop push iret sub ss lds xor sbb test add repnz fsubrl mov inc das sbb nop push dec cmp lret pop fcoms sbb adc push jge (bad) mov xor pop lcall sahf repnz and mov add inc adc xor add push negl cmpsb push insl and into pop (bad) cmc push cmp add jg enter cmp out mov mov ds repz or std enter stos loop iret cmpsl popa aad mov xor adc fcoml jge pop push mov or lock in in int push adc and mov adc xchg arpl fwait shll xchg rolb lcall (bad) jb sbb pop push adc fwait imul jns adc aad sub sarb test push outsb fdivl xchg dec add fcom lods sbb pop sub xor sub mov lods cwtl jb adc ret push out mov scas fs flds adc mov repz test fdivl jmp enter int3 test popf je pop test mov sbb adc nop mov fcmovne adc js push dec cltd jb adc cmp mov rcll fdivrl or cmp fist stos adc or dec mov pop xchg clc push out mov xchg xchg add adc shrb icebp mov (bad) adc push jno jnp and push mov inc xchg in sbb xor or xchg jne mov or push add pop mov repnz aam sbb inc xchg fcoml jle add call inc cmp repnz enter inc and shll nop mov sub repz mov gs hlt add xor pop repz or minps mov jg loop pop scas mov repnz xchg xchg pop mov bnd adc mov dec repnz lret int3 sub les push mov mov test out lods cmp or inc push je xor stc out cmp adc mov (bad) stc orb adc movsb (bad) or scas imul in into xor in repz jo les adc cmp call out inc cmp or adc mov inc push xlat (bad) mov pop cmpsl sti mov (bad) mov jp mov add fnsave xor (bad) or pop loop add and and inc (bad) or scas add mov cmp pop popa adc sbb out pushf adc cltd lock jne aas add pop mov adc and test inc shll out movsl movsb push mov mov enter aas xchg adc mov adc dec (bad) jnp adc add mov fcom pop in xchg xchg fidiv xchg leave jl mov adc roll push fcmovbe roll or out sbb out xchg pushf mov sbb sbb (bad) xor mov cli jmp xchg in push inc mov adc fimull clc mov daa adc adc ret fsubrl pusha mov add adc pop xchg fimul inc ja repz push push cmp xor adc jl cmpsl inc or adc andl pop sbb cmp lods dec repz or adc mov lret jp mov sub or fsubs lds and sub add sbb add pop loop popa (bad) push pop and dec and or pop cs shll cld stos sbb pop xchg dec cmp mov jnp and lcall mov je ret adc sub push (bad) or adc inc mov push fwait sbb pop cs mov aad xchg adc out les push or jb clc test sbb movsl pop cli jge adc rcrb int xor sub pop adc leave xchg adc push popa add mov push cld ljmp mov test ja mov cmp fmuls pop andl mov fldcw pusha and adc add js add adc adc pop xchg out jne enter cs add dec cltd adc int ret fidivl jb rcr repnz pop pop mov mov in shll insl je pushl stos insb inc sbb add or jge adc add push jle rorb (bad) fsts negl aam inc bound dec jns and mov pop push outsl jb mov fldt mov xchg (bad) stc adc mov mov cs pop sbb (bad) xlat mov dec pop jns sbb sbb cmp and daa sbb push aas cld xor cmpsl mov pop and adc stc xor push xor popa pop (bad) das ret xchg cmpsb add adc pop pop xor fisttpll inc add adc push sahf movsl ja push xor bound and leave adc flds fildll adc xchg in adc adc jl cmpsl add movsl dec je dec enter xchg adc or daa adc das stc int3 imull push stos add mov mov add hlt mov jg dec aad mov outsb adc mov inc popa lods lea (bad) es inc pop call xchg mov sbb mov cmp or adc pop repnz cmp outsl inc adc pop fmuls out pushf stc and loop add push sub pop xor fs roll mov repz dec jle data16 add add jno mov pop mov or xor add js ret pop dec cmova jp fstpl xchg cmp mov adc cmpsb adc pop xor xchg mov cmpsb adc mov xor (bad) push cmp mov jbe in adcb iret xorl decl addr16 scas je add pop or fstl push (bad) xor pop lcall mov popa or xor es jae sbb arpl pop or mov out sub fs dec lds jnp xor inc mov mov xchg adc push sub jne test adc xchg in lcall (bad) or push push adc cli push loope sbb daa mov inc aaa lea cmp sbb cmc push sub pop test add adc clc and mov les adc xchg add ljmp lods push pop push or pop adc push mov out fcompl fsts es das adc std push aaa rorb repz shrl dec (bad) sbb outsb fdivrl adc or and stos add adc cli push out (bad) jne sbb repz add mov fwait or fdivs popa int3 movsb pop imul xor adc test lock mov adc push and jp repz xorl or jmp xor insb fs cli enter dec inc jle xchg aaa in addr16 scas mov xchg popa repz cltd sbb (bad) dec push adc mov adc pop mov or xchg inc lcall movb orl xchg xor mov lods mov pop pop out inc inc pushf mov push in int out or je push loope mov fldcw movsl jle push mov (bad) xor in push in gs adc fcoml call push inc arpl rcrl push mov in lods es mov je (bad) hlt cwtl roll mov push ret xchg lret lret adc lcall in lods jmp rcrl loop pop addl repz push mov mov ret adc cmp xchg imul pop aaa adc les xor adc fistp aam aad aas and xchg ljmp mov outsb add out ret (bad) je push adc dec roll lret out adc push ret repz sbb icebp mov mov push daa sbb pop faddl adc dec adc inc sbb push lds jnp mov xchg mov imul adc adc dec scas mov jle pop andb push leave push mov stos push sahf pop ljmp cli pop mulb adc movsw jecxz dec add imull call add jbe xor bound pop cmp test daa xchg cmp lods mov mov adc adc (bad) push adc jl adc mov jns shrb or sbb aaa add add mov cmp mov xchg xchg mov or dec repz jg cmp sbb push xchg jbe push dec insb repnz out mov enter cmp push and rol dec or (bad) iret int3 icebp lods mov insb mov lret je inc inc xor jno sub mov mov shr lret nop cmp test sub or daa pop into fwait mov popf lahf sub sub rcl sbb adcb loop lds imulb push adcl xor adc ret imulb outsb or pushf inc push xchg flds dec xor inc push cmp cld jp add mov std jecxz movsl jg push jmp sbb add lcall sbb jnp xor xor jp shlb xchg (bad) in add pop in dec sbb pop adc cli pop adc mov or btc lods sub (bad) jno dec ss cltd addr16 jg iret fdiv pop mov stc (bad) out adc mov cmp das jl mov adc dec cmpsl adc aad pop ljmp sbbb jecxz mov (bad) mov xchg out and rorl or push xchg push push push das std dec cltd lret movhps sub xchg mov shr in sti xor xor xchg xor lea add fcoms test dec js fdivrl std xor mov andb cltd mov or mov jno cmp add pop rcll mov (bad) jb pop and jns jmp xor jno xor xchg bound sub pop inc jb or mov push dec mov push xchg adc xchg jno push and imul fcoms les clc mov fisttpl adc pop fstps scas stc iret arpl adc aam lods out or adc test or lret fnstcw popf cmpsb sub cmp cmc or arpl ret inc repz fwait iret test sbb out or xor nop jle adc test das test sbb addr16 inc out xchg pop in cmp cmp xor scas add test or (bad) jge sub sarl mov dec adc adc stos lret xor fimul mov mov bound pop scas rcr ret or add add jecxz xor xlat out shr mov ficompl dec mov orb mov xor dec push addr16 jp mov imul cmp (bad) mov lea inc pop jle dec lcall pusha (bad) push cmp into mov das cmpsb je ds or iret mov adc sbb rcrb xor pushf cld lret adc (bad) lock xchg adc mov fcmovu push adc add adc jne xchg jno jns cmp pop arpl loopne addr16 mov lea adc pop or int mov or jne mov sarl push clc arpl les mov adc test je mov pop call out fcompl push mov lods add repz mov pushf xchg mov inc mov inc jg fwait enter add imul es mov or mov repz pop movsl ja int mov push inc popf mov or or add xor cmp jmp out xchg in pop xor cld pop stos or (bad) mov cmp jmp push cmc dec push pop fbstp lret loop xchg stos repz xchg fiaddl mov or stos sbb (bad) enter adc icebp sbb adc push repnz sub add ljmp hlt pushf mov mov pop xor or test add out cs push sbb add (bad) test adc cmp push test sbb xchg add int add adc fs sub repnz dec cmp or shrb es test adc mov cmpsl add stos lahf repz cli negl adc in adc cs js arpl shrb repnz xlat es mov mov mov loopne dec mov js jns rclb xor mov or icebp cwtl stc xchg push adc mov mov lret cmp adc sbb or mov mov je jge enter xor sahf jns adc fs mov adc jb xor ror xchg rdpmc shll mov adc test dec fwait int3 mov or in aad jecxz xchg call adc shlb xchg mov jns mov clc movsb lock aaa or repnz adc inc mov cs je mov inc inc add repz push or addr16 (bad) int gs xchg repnz push pop or xchg adc pop ja rorl and fnstenv xor jo repnz in adc fstp sub aaa cmp test in jne pushf dec inc out mov adc cld cmp or scas int3 les push shr cmp cmp inc cwtl mov loope push push or mov cltd and lcall adc adc int3 cs cmp xlat mov adc jecxz adc add data16 xor and into daa adc add adc xor cmp adc add ret aaa outsl inc imul cld pop jno dec add into jb lret (bad) push adc (bad) cmp mov cmp stos int lock sarl dec pop adc adc cmp movsb (bad) adc jno push adc jmp fmul fs adc aam mov xor adc pop stos or mov mov or inc daa cltd add shll adc cld stc pop adc enter lret mov adc pop mov movsb or add pop add jae dec xor xchg pop insl adc xor jne insl inc jne adc mov xchg cmpsl adc pop fidivr or fildll adc inc mov xchg mov pop cmp int fistp adc rolb ja push aad jecxz sbb es jge cld add push dec jle mov adc les inc int repnz cmpl pop xor inc (bad) loope sbb push adc pop test cld movsl push push dec xchg pop dec or loope cmpsb sbb add xchg and push cli leave jge xlat add sbbb (bad) dec push adc xor inc lcall mov shrl lret mov add xchg xor (bad) test cmp cmp add and mov mov add jecxz (bad) mov lods pop sub fidivrl and out mov xchg xchg pushf mov aas repnz mov adc mov xlat iret sbb scas inc test xchg xchg leave dec adc sub adc pop test cmp mov iret mov dec jno pop in imul rcrb pop pop mov push adc sub lcall (bad) sbb add test cmp and or mov repz stos test dec out mov imull push fstp or and cld (bad) mov jb adc std mov (bad) jne sbb pop nop mov roll lcall fstl xor out pop jnp repz ds in pop push xor (bad) fcoml cmp aas xchg jle aad sbb fildll mul push adc inc cli movsl dec inc pop mov jl loop or pop mov movsl push idivl jp lcall adc xchg push sti repnz sub fstps sbb fistp stos shl mov andb rclb mov shl xor lea push popa or rcrb cmp ss pop xor pop roll dec xchg dec fs enter xchg out adc stc in dec jmp notl je and fisttpll lds or repnz adc xorl psubusw xor and nop (bad) fistpll mov pop mov sub je clc lea cmpsl sbb adc mov or jle lds pop popa adc pop ret jge loop xor inc aam fidivl hlt add xchg push and mov inc sub xchg repz ret mov ljmp or imul pop sbb pushf cwtl loopne xor xor imul dec bound jne outsb into fptan daa sbb leave adc popa pop out (bad) adc mov inc mov xchg rorb loopne ret pop pop scas fsubs inc inc cmp (bad) pop ljmp stos and loop lea (bad) mov cli dec jno or or inc fsubrl push outsl fidivl ds cltd icebp fiadd lock in push (bad) xor and sub xor lret loop adc dec cmp lds ret insl dec xor mov loopne (bad) je gs adc or jl gs mov addl cld dec repz push imul cmp fwait test xchg push mov (bad) jne je pop xchg sub mov or sbb and mov jg add movsb sbb in xorb or test push adc xchg test mov xor mov mov (bad) cld or clc dec sti xor cs adc leave mov adc out aam insl xchg and pop xchg mov cltd sub test lcall daa xchg xchg jmp adc lock pop incb repnz lods mov inc mov adc addr16 jp in mov sub adc mov mov cmp scas push (bad) lock pop adc in xchg daa stos dec pop aas nop jmp pushf (bad) leave out add mov (bad) in das sbb jnp sbb repnz jo pushf clc cmpsb adc xchg aas jecxz inc xor aas iret lea in mov imul or lds popf (bad) outsl adc clts jle fcomps lods loopne adc outsb popa lret and push xor xor test std push adc xchg out xchg sbb rolb mov xchg in add pop repnz fisub bound leave aad mov nop xor rcrl in shlb adc pushf imul xor sbb xor jp jno sbb stos sbb repz pop mov aam adc mov sbb pop inc inc sub push bound and out adc cmc sbb jmp xchg xchg cli xchg je and sahf fidivl (bad) xchg nop das push notl sbb xchg jg orl lcall mov test ja xchg cmc mov push sbb sarb in out pop add jno adc adc adc in sbb rorl mov xor movsb arpl mov push adc imulb rcll movsb (bad) mov in out hlt push xor push cmc cli push or nop mov sbb add sahf icebp mov jp in les ret stos or adc pop rorb jge sbb es aas pop push int (bad) sbb rcll pop dec xchg cmpsl cmp rclb add push sbb rcrl mov adc in lods insb sub sub outsl xchg lods daa jge repz sbb idiv mov dec adc mov xchg pop aam jne mov sbb adc jae outsb mov mov (bad) in in inc mov scas cwtl push imull pop sub sbb int adc (bad) (bad) mull dec cmp sbb aaa fwait adc adc jge mov xchg lds mov lahf cmpsb xor cmp out lods xlat adc or adc push sbb and imul sbb mov shlb mov jge mov ret jmp mov add jecxz or mov push add ficomp insb pop mov ja lcall jl mov dec pop movsl dec stos in adc mov mov shr adc fsts fbld sbb inc xchg rorl push cmp notl push lds push mov mov and idiv cmp testl arpl nop pop push dec out mov xlat fist push push pop jmp into repz test data16 cmpsb in pop fbld out iret push (bad) mov add stos push ljmp add sub fbstp cld mov lods pop orb (bad) cwtl aas push push pop push add inc mov loope test inc sbbl pop push push iret pop cmpsl fdivs add sub insb push xchg dec mov ret add dec sar mov adc nop lock adc mov aaa push dec (bad) mov push aaa out or (bad) mov or rcl xchg loop mov push out and xchg push xchg xlat mov jmp adc repnz out loop daa pop cmp xor mov adc stos sarl or repnz loop cli push add push push ds decl mov cwtl and push push je aaa (bad) jmp sbb js push leave arpl push or and addr16 pop or push pop fs fistp push mov das repz and test or inc cld xchg iret sar adc or sub xor inc xor orl adc pushf rcll xchg pop ljmp xchg xchg out pop cmp and loop out mov out push sbb fmulp xor or rcrl inc mov repz dec sub mov inc adc pop add fwait inc mov add int3 repnz lods dec xchg stos xchg jmp jl adc push xor push sbb xlat out pop xor push add inc lods push sub rcpps dec xor fs cmp dec adc mov sub xchg mov xchg ljmpw add inc aaa and incl test xor or int3 xchg (bad) je adc push dec jb jbe jne pop int pop adc dec jns int inc loop pop fbld pop jecxz or in add ss mov pop ljmp push inc enter les ficompl dec out or dec inc xchg dec out dec xchg adc xor or test outsb push test loop ljmp mov aam fcomi adc loop dec call out jbe inc lahf pop mov inc dec fwait push in and push or (bad) rcll pop movb pop sbb xchg dec push inc sub sub jl sbb in mov sub xor xchg jbe pop dec lock add js (bad) pop sbbl push ljmp mov fildl push (bad) or daa test popa fnstcw pop cmp cltd push add push lahf lods pop jp incb mov mov pop cmp adc inc les outsb xchg popa jg inc sbb xchg (bad) jmp adc pxor divl pop xchg ljmp jecxz je xchg adc and adc sbb lods mov mov xlat xchg popa jmp cmc shll adcl add jmp push dec push push aad push xchg pop into xchg xchg mov and push divb imul jecxz (bad) das lea xlat sbb (bad) mov mov sbb lock mov xchg fiadd push push push test pop insl cli bound xchg mov mov adc add adc push push push in daa (bad) ds inc pop push sbb xchg cmc repz int mov stos xor cmp out jg leave xor push cmp xchg or (bad) xor dec mov cmpsb pop inc mov mov out add mov adc in cmp xor nop cmp (bad) push jle (bad) rdpmc mov (bad) lea nop push mov mov jmp adc or push (bad) sub dec (bad) mull sub sbb pop ljmp movsb in outsb mov rclb mov loopne mov decl fdivl jo push call cmpsl sarl xchg repz xlat loop jp (bad) loopne xchg out std ss outsb pop in pusha xchg repz jno inc xor loope sarb xor push adc xchg xchg es xchg out outsb push jae imul popf dec repnz loop sbb repz adc jecxz maxps push jge nop add lods dec lret push sbb and mov clc leave xlat push sbb (bad) or iretw add cmp fcmovnb lods test or mov lahf mov xchg push or xchg arpl out leave popa xchg adc inc cs lea mov push icebp loop pop es xlat das xlat lock addr16 cld mov jmp out or sub dec fist lcall lcall pop clc imul cmp dec dec pop xchg adc push rolb ja and nop adc xor pushf out lock or ds and sti loope or (bad) sub loope cltd stos ss adc xchg loop movsb push mov add cmp aaa inc add sbbl repnz or mov sbb mov adc jmp loope gs out enter hlt insb add pop push xlat adc or repnz jmp add out dec popa sub adc xlat orl pop fildll push jge xchg dec jbe push xchg push mov sbb mov sbb out fs ret sbb insb sbb cmpsl (bad) decl or mov (bad) sbb sub sbb push xor fisubr add xchg pop andb stos pop adc fs jno imul adc fsub adc push and mov xabort pop es (bad) insb push pop rorl out movd test jo xchg out xor in in rcr sti and fcoml adc jne out mov movntps lcall push jmp out pop dec fbstp jmp mov pusha cmp hlt jno xor and loop cwtl mov push lcall mov loope hlt aam hlt nop lods loopne xchg lahf adc add or or out test (bad) pop sbb push and insl mov jg je jnp inc mov jecxz cwtl out pop bound push adc sbb ret movd pop pop repnz loop push mov adc add pop cmp jle ret jno inc sub movsb or mov mov in mov mov push js and xor add repnz adc aas jne xchg out pop ja add push inc sahf mov clc sbb loop sub mov out (bad) (bad) sub cli mov imulb sbb mov ret icebp inc gs pop sub mov lret imul mov mov and enter repnz adc test cli add push (bad) std enter dec mov or pop leave adc int add pop fadds (bad) or xor jmp out fsts sbbl xchg xchg dec xchg mov repz sub leave cmp shrl fistp jecxz stos sub (bad) pop insb pop add test aam sub xchg sbb and cmp pop fsts (bad) add mov dec and dec sbb adc xor call xor repnz js xchg jecxz sub push repnz sbb sbb fimul (bad) and adc fwait or push in fnsave xor adc sub jb jbe and fcmovne jp pusha pop jge add push xorl mov mov jnp inc mov (bad) rcrb lcall push (bad) gs dec and xchg ds (bad) gs std int pushf dec loop (bad) sbb xchg sub cs out test dec hlt test and mov aaa dec inc lcall in (bad) ja add and movsl cmp loopne sub fs pop push popf out mov mov repnz repnz mov les mov jmp adc push push xor add nop out ja sub imul je nop xor pop push sbb ljmp mov iret xchg sbb movb mov stos mov xchg outsb mov xchg inc fidivrl mov jmp loopne or sahf xor jmp jge jns xor push pop mov inc call insb out inc (bad) gs movsb xorl add lds mov pop sub testb sbb repz or push out push pop repz lret mov rorl roll (bad) xchg movsl iret and or test mov sbb ds mov clc cmp cmp inc ljmp (bad) int3 rolb cmc xor push into cmp mov jmp and jmp xor lea push jnp adc xor fadd ja add or or ljmp hlt or xchg js out dec lock lcall (bad) (bad) cs dec pusha and ret push adc out shll fcoml sub pop jp dec pop bound mov outsb pop rcrb insb pop push or in fidivrl pop ljmp xchg leave mov xchg in repnz in push mov mov insb cmpl push int fwait shrb xchg push fiadd daa data16 sub pop mov add gs sti xchg addb shr mov push in or pop out repnz arpl fldt adc subl mov paddusb subb or fs adc arpl mov pop cli fs fcompl jg fwait push mov (bad) call adc in jg add push sub jle clc or mov lcall pushw or int add jge aad cld dec es js sub cmp orl mov push sbb xchg std aaa repz and pop mov out dec int3 inc orb xchg pop xchg mov test dec orl add cmp fnstsw lea jecxz fdivl jg jl xor add (bad) stos mov rcl test rorb subb xchg stc out jmp fwait adc inc popa orl data16 cmp test push xchg leave pop push ljmp sahf mov cs stos out clc cmp daa divb pusha loop cmp pop rorb push sub bnd jmp mov push adc cmpsb adcl mov insl xor repnz push je mov (bad) pop xor or add out and add or xchg xor es insb ja out pop inc aaa fild adc jecxz mov pop pop mov loop jecxz push sub je aam imul ret icebp mov in ret movsl ss push notl push dec mov sbb sub insl jae pop ja push fisubl mov dec add mov sub out shll (bad) push (bad) mov cld rcl inc stos pop push dec sha256msg1 pcmpgtb lock sbb sub pop test push lret sbb mov scas shr pusha loop icebp sbb pop ds push mov mov xchg jmp sub movb jg pop inc xlat mov in inc rcll aad add dec mov test fucomip ja roll rorl xor in lret in xor mov and dec mov or movsl rorl sub outsl xchg bound inc (bad) adc dec ret push cmpsb add je in inc pop push ret jae add outsl subb lret adc cmp out test sahf mov push mov jb ljmp bound adc fild int test dec mov mov jle dec cmp xchg sub push and push (bad) div pushf outsb test jmp and js lcall inc scas dec adc push pop fstps aas arpl mov in hlt xchg fisub jp les je inc loopne mov or addr16 cmp cs mov mov jle out aaa mov enter push stos and fstpt nop mov jmp xor jle rcr or dec xchg mov gs repnz (bad) push mov ljmp adc jp (bad) mov mov xor out xorl xchg jo and je xchg adc xchg shrl cli imul (bad) cmp mov add pop icebp push aaa je cmc mov or mov adc cmpl hlt test gs or incb repz or mov test push les les pop cmc or push dec loopne cmpsl jmp daa imul push out adc xchg xlat cmp push mov out out sub add inc (bad) out (bad) push adc arpl out adc pop addr16 in xor imul in in xor scas jae xchg sub hlt adc pop mov add sbb ret or dec add adc or test add mov push rorb mov mov adc pop sub jnp xorb add jecxz add inc das icebp fistpl push mov jecxz (bad) mov xor ljmp ret (bad) test insl push xchg xchg jbe movsl (bad) mov dec cltd cmpb (bad) adc ret push mov mov pop push test sub insl cmp lods pop inc loope push jge push push fs cmp (bad) pop xchg cmp xor adc jbe xorl fld jo and push sbb dec pop roll fildl lcall sbb out fsts and sbb out push les jecxz or xchg (bad) sub fcomi mov stc jno or pop in sub adcl (bad) into dec ljmp dec aaa lods imul xchg inc mov gs mov adc pusha ret push daa iret cltd mov cmp jb cmc into sub lcall (bad) repnz xlat adc mov test mov int jg leave pop movb je iret sarl add aam int (bad) repnz icebp pop add dec adc in subb inc test ljmp ljmp leave inc cmc push outsb cmpb jl inc mov divl outsl and push mov adcl stc int cmpb inc outsl xlat ret out push leave xchg out sbb cmp loopne push mov dec adc jae xor dec pop cwtl les sbb cmc push dec push xchg mov and subl pusha vrsqrtss outsb fstps or or cs mov imulb jecxz xorb and loop or xor or sub dec mov mov cmovno push pop adc orl pop xchg sub adc arpl cltd aad aaa movsl adc xchg out dec (bad) sub push xor (bad) repnz aad adc pop (bad) dec shrb add pushf das fs fldenv sub lea aaa je push cmp jno mov std out jge add into adc bound push sub lret iret lret xlat stos mov mov or mov cmp xchg inc xchg and popa mov pminsw loopne push cmp cmp inc outsl sar mov adc stc pop xchg sub pop dec insl inc inc pop xor pop in mov fistp (bad) cli jo sti add test cmp jecxz ljmp or pop push je xchg jbe scas xor aad sbb je out ret jecxz out outsb xor push dec push cmp pop testb adc rcll shr out xor inc iret sbb call push xchg and shr repnz fidivl movsl mov mov in mov add aaa inc adc cmpl push mov push es das (bad) xchg outsl lock (bad) imul popa repz pop sbb sbb dec pop mov inc (bad) sbb add pop repnz and iret mov rclb movb loop adc sti or xchg loopne fwait adc decl xchg mov sbb loopne pushf ss and sbb (bad) or mov or mov cmpsl add inc lcall xchg add sbb imul push add xchg pop lahf mov sbb add sbb mov lea xchg out push addl xchg add sahf inc xchg push or xchg orl aaa or (bad) xchg xor fildl or sbb adc fs test fwait out adc or add adc mov sti add xchg es push inc popf or mov pop push push adc sbb pop inc pop or or push adcl xchg negl jmp (bad) call lock test adc xchg add sub data16 or jnp xchg test lock xchg (bad) (bad) or push cwtl jbe fild add loope mov sbb lcall add xchg dec push sbb xchg push popf mov push or add xchg cltd clc pop adc sbb pop pop or add pop pop pop xchg or popf test out aam cltd sub add jge xor jp fs ficoml out cmp flds mov call mov loop sbb xor mov push inc rol addl lar mov (bad) in inc pop loopne pusha cmpsb stc inc xor idivb sub idivl test adc lret adc or push pop test ret push js (bad) ja xor xchg (bad) inc mov push mov int cmp jnp mov push pop mov add cs imulb mov pop push push (bad) insl fsubs popa add stc dec pushf mov mov mov shr or call (bad) iret jno int adc inc mov xchg pop pop and cwtl out lods nop in jae in pop pusha and (bad) clc adc mov daa jg adcl sbb pop jp push adc sbb dec imul int fucomip stos test mov les movsl int3 test inc outsb aam dec push in je mov fs ss repnz xchg pop mov adc in cs add or mov mov xchg push dec push cmpsl cmp and daa (bad) pop cs add dec inc arpl test jl enter dec out inc mov cld js rcrb cltd sbb dec arpl jne dec (bad) cltd fmull mov outsl lret dec jg mov xchg vmptrld popa pop pop lods arpl sti or sub dec dec addb mov add xchg lods push jecxz cli xchg or mov flds xchg jmp in push clc shr or int3 sbb cmc adc dec outsl rorl and mov shl ljmp push cmpsb or pop push mov push pop out (bad) lcall adc cmp fs dec jecxz pop push rorb inc mov jno lahf (bad) sbb out out repz mov icebp lock popf dec sbb xor ret fist jle add adc imul or adc jb ja mov push cli push adc mov stc fistp insb xor outsl rcll xlat imull adc fcmovu or out cmp inc or (bad) dec jge xchg ret sub dec xor xchg sub int xchg cs int3 push mov push jle ja or sbb xchg aad add loop adc mov decb daa push repnz or push cmpsl jb ja sbb popa sbb pop (bad) sar repz inc ret (bad) in (bad) push clc fstp mov push aam cltd sub les loopne stos push js dec (bad) test iret outsb mov xor fdivrl adc sbb sub lcall push cmpl inc push pop inc ficomp int rorb lods dec in dec dec sub jae mov or lahf adc mov push lea xor lods fsubs ja xchg mov pop pusha dec cwtl jmp add lcall dec in xchg adc lods lea idivb sbb test push (bad) leave ret sub mov push mov inc in outsl cmp pop add pop push add sbb push shrb imul mov or jbe add popl jne repnz jle jg icebp iret cmp mov push mov and mov loope xchg or fbld pop fnsave xchg xchg cltd adc jge xor pshufw test sbb dec int fimull xchg inc xchg stc or (bad) stos rorl push leave push imul or (bad) lcall mov out or or out push cs lret sub adc cwtl fcmovnbe lods cld xchg mov aad push loopne fistp pop in push and xor push dec sbb sub cld inc and mov push cltd out pushf and add leave mov and or imul push hlt (bad) and out xlat cmovne enter sahf inc pop or xchg sarb xchg in orl xchg mov loop dec decb test fisttp iret adc in xor ret lret dec jecxz adc mov jle mov pop push je mov push add sub into sbb xchg sub add into xchg loopne std decb mov mov outsb pop insl push daa ss pop decb xchg fcompl nop adc js cli mov xchg cld mov mov addb outsb test jg daa sarl pushl lea cltd add push push in adc subl int3 xor rcr lcall sub mov push dec mov sbbl jo lret fsubs push mov mov dec inc sub leave cltd or mov bound cmpb movsl fcoml popf std inc cmp dec mov push jg mov in (bad) test inc in adc lock test xchg push mov or int3 imul daa out data16 push add (bad) rorl loop jae cmpsl add pop cmp xchg add xor je add mov popf mov jns or add or pop in pop jbe hlt or dec push xor inc cltd sub out std es mov pop sbb push mov mov mov mov inc adcb mov loop out fidivrl mov push loopne in mov jo into inc loop push push repz fistl je mov mov out dec jb cmpsl push nop mov push or lret test xchg dec int cli pop mov enter adc or dec sub adc daa adc lds fwait or lret rcll insb int3 cmpsl pop (bad) mov jnp daa fidivrl movsb push xchg xchg xchg and jmp je jp in mov fdivrs popa loope popa mov xor pop adcl fisttpl mov (bad) popa ja pop lahf cmpsb xchg pushf or push xchg lods mov mov outsb cltd lahf sub pop (bad) (bad) (bad) popf enter out lcall clc push pop (bad) movsb cmp sub xchg pop add daa imul xchg dec mov xchg test push dec out shrl outsb xorl and in enter lret (bad) loopne shlb xchg ficom mov and (bad) cwtl xchg and add shrb inc jecxz dec addl pop mov dec loope push jne inc inc cmp mov pop sub sub cmp pusha add fsubrs mov cmp scas dec jns (bad) push dec leave (bad) xchg (bad) jmp jbe or xchg push mov adc push xchg xor and div pop sbb lcall sbb jecxz lret sub cmpsb and enter and das stos hlt shlb dec or and mov lds add mov jmp movl mov pusha pushl movl pusha movb mov lea jmp push jno outsb fiadd inc jp testl pop mov xor movsl push or or adc dec jb int out test loop mov mov aam cmp mov lret xlat ljmp (bad) jge gs xor pop fs mov xchg es mov repz mov out pop leave ds addl icebp and xchg movsl daa lcall out clc cld (bad) mov fcompl pop fadds adc (bad) stc sbb mov jb,pt (bad) icebp cmpsl (bad) xlat lret arpl outsl xchg fadds add add push push or or pop inc sub add sar cwtl (bad) sbb jns jns xor movsl pop mov cltd fadds scas push fiadd in scas ljmp push push jge or pop mov pop in es das cli xchg xlat lods dec out aaa out mov xor ss mov test call xor sti mov and divl push jg in int3 mov adc pop xlat jns movsl lret sbb ss stos mov sbb xchg sbb jne inc inc jmp clc lock mov adc adc adc lea jb push cmpb push call mov movl pushf push push push mov movb pushl ret fs inc (bad) and pop inc mov dec mov cmp dec sahf ret cli ret dec adc ss call mov rol cmp xchg xchg arpl lcall xchg aam hlt mov icebp aaa xchg ja xor push adc andl call xlat btl jne dec sahf inc ss popa mov cli cmpsb dec inc pop das (bad) sub jecxz outsl int3 push push test movsl pop jns jae stc test mov clc lea add cli add leave jo adc pop fwait push stc xor xchg xor xor pop jno (bad) jmp rorl pushf setb movsbw mov sete pushl mov movl jmp add pop inc push and jp pop call addr16 and jl je ja jl push sub andb jns sub in (bad) push fsubr xchg xchg int3 sti jnp mov (bad) icebp add sub popf clc push ret inc mov xchg jnp pop test and shlb sub lret mov cmp sbb outsb push xchg imul in sub fldl2e push mov pop ficoml shlb xchg push out mov sbb icebp jle imul arpl mov push jmp stc inc add or xchg dec pop sub adc mov or (bad) lock not add ror not shl mov stc cmp pushl jmp btc or and mov pusha add sub xchg sar push mov btr rol xchg jmp insb lds lahf or xchg mov fistpll dec movsb ret xor cmp lahf dec mov fstps movsb cmp fistl add hlt insb gs (bad) ret rcll clc sbb lods mov loopne (bad) js xchg sbb rcl jmp mov enter push cmpsb xor and call jecxz test movb mov sub inc stos xor (bad) idivl xchg jne xor cmpsb sbb lcall adc mov (bad) xor aaa subl push push cmc dec jp jns mov pop jl push jp nop imul inc and std jge sahf inc test cmp cwtl call bt repnz call pushf mov movb movb pushl ret call jmp mov pushf lea jne shr bsf bt sub shl bsf adc mov rol setno clc add clc clc mov bt test pusha call lea jo pusha stos mov push pushf lea jmp jmp mov movzbl not movsbw mov pop pusha mov pushl ret lea jae pusha lea jmp call call pushf or mov movw lea jne cmc (bad) icebp btc mov push push pushf or jmp lea jne call rol mov pushf cmp push pushf pushf lea jb test clc cmp cmp pushf lea ja and test add test setl ror mov stc pushf cmp call dec push pushf inc in inc xlat xor fwait shr mov repz repz out add pop clc mov aas jne mov xchg ljmp and das inc xchg push add movsl jg inc sub and mov jmp jle push mov xchg hlt or das lcall test stc or sbb push jb loopne inc clc jge lods and dec stc jp out add pop rorl lea jne or cmp lea sub rcl rcr btc mov setle sub shr add cmc cmp mov clc cmp test jmp lea mov lea mov movw mov call movb mov movl push pushf lea jmp jmp lea ja call sbb repz repz fstps lahf mov aas rcrb cmp nop sbb xchg sbb cmp iret sti and lock fwait dec (bad) repz repz push pusha xor xchg xchg adc je jae rcrl push adc repnz push (bad) nop cmp dec rcll dec adc xchg push adc (bad) dec jbe lahf sti pop cmp sbb cmp adc mov dec sahf adc sbb xchg rcll jecxz jo push pop and sbbl shl out add movsl pop or adc xchg mov mov or xchg xchg (bad) (bad) mov xor push adc lods mov repz add in mov (bad) aam mov jg xchg mov sbb adc add cmpsb (bad) out sbbl loope addr16 jbe adc pop aas lahf jo mov ds jg mov cmp sbb cld pop cmp sti pop cmp sbb pop cmp sbb pop cmp sbb pop pop xchg into cli xor prefetch psllq xor pop inc cld inc notl test aaa out push jecxz jl add push sub jmp dec addl sbb adc adc adc punpcklbw push add push adc je dec fsubs or add adc enter cmc fcoml dec mov push xchg sti adc loope xchg fwait addb adcl loope push lahf fwait cwtl sbb lcall fwait xchg adc xchg push adc loope push pop fwait adc pop sbb repnz loop push or test fwait xchg loop icebp repnz xchg push and repnz xchg lahf sbb fwait xchg xchg loop push adc lea sbb loope push add add add add fwait sbb push adcl or lahf push repnz or add add pop xchg sub sub adc repz xchg add out inc xchg push cmpsl add jecxz arpl add pop icebp je lock (bad) loopne add pop sub jp mov xchg xchg push add jge jecxz dec addb setno popf or xor fwait pop xchg test xchg mov sysret repz ljmp mov mov add jne jecxz sbb in pop imul popf xchg daa or pop sahf mov pop adc pop push testb push pushf mov add arpl stc inc (bad) adc dec push pop xor pop mov fsubl dec dec pop pop inc hlt push in movsl lods cmpsl add insl inc adc push mov je mov add xor xor add jg adc mov enter xlat cmpsl mov rcrl (bad) test test bound sbb icebp adc lcall sub cs jg lock test sub mov leave and or icebp rorb adc daa mov lods adc incl hlt (bad) and inc lahf adc arpl add fnstenv cmc (bad) not nop adc mov jge mov xor mov xchg cmp call xor das leave mov cs mov mov xor lods inc mov in cmp lods jbe pop fwait daa iret icebp repz add nop push mov mov pop mov adc dec test add ljmp mov mov dec sti mov mov test cmp xchg mov sub pop mov pop (bad) or data16 add cmp mov aas xchg add push addr16 lret adc mov adc pushf repz test ret pop pop xor adc jb lahf adc xchg adcl xchg mov and das dec test lcall mov (bad) adc ljmp sbb or pop adc daa frstor xchg je pop and adc sbb add push ret pusha in cmp jl mov xchg dec pop dec popf adc repnz out stos sbb ret mov push data16 shrl xor ret outsb je mov jmp and inc mov adc push mov adc xorl fldl adc sbb push ret (bad) ljmp nop mov call cli adc sub incb xor jae test sbb xlat xor arpl mov mov dec test inc adc int push mov push mov scas mov in shrb xor sbb dec movsb lea xor adc push fcoml mov mov pop inc cli sub addr16 dec adc jp dec xchg loop and aad rolb xor and xor mov adc or adc mov rolb pop jnp adc cmp stos sbb xchg adc in fiadd les sbb fnsave insl fsubs in adc or hlt sub adc cmp mov adc out inc popa std xchg insb enter insl aas adc push add xor ds shlb add cmp cmp xor adc or jae loop push loopne sbb adc fs jle add ds outsb mov adc push stc adc xchg repz cld or push sub jo fs adc les cmpsb cmp lock xchg pop (bad) adc test push mov pop mov push push mov js sub aam inc adc add push leave data16 xlat adc xor sbb lods xchg xor add lret adc add push cltd movsl jl ret dec xor sbb xchg scas dec adc syscall pop aam jno push in and mov and and lcall jbe sub mov gs enter aam adc (bad) or mov popf and stos jle out movsb jg pop lcall (bad) outsb adc lcall pop dec dec mov or arpl or leave and popf cmpsl adc dec stc cmp pop icebp aad xchg jp xchg adc roll adc mov jae stos movsb and adc (bad) lods mov fisubr rorl shll mov xlat insl jno mov mov push or test mov cmpl fisttp (bad) inc and sub out mov sbbl stos shl adc adc iret adc inc hlt insb lahf cmp dec adc mov xor xchg aad pop ret mov xor lock adcl push aam jo ficom or mov ret rorb inc jb mov xchg (bad) or cmp and mov int rclb fwait xchg sub adc jl test inc xchg jp xchg repz js xor pop loope lea (bad) mov mov addr16 dec out pop cltd adc cmp adc sub mov xor push adc add push inc inc and adc cmp cmp sti cmp rol scas dec sub adc or mov adc insl mov movsb ret scas cwtl jl jns pop loopne mov in jle fldenv cmpsb out (bad) mov sub mov roll (bad) (bad) aam or mov mov adc xor sub insl into push add clc adc adc or loope popf adc in rcrb adc out adc and jnp jge movlps je pop jmp sub xor pop or imul pop movsl xor jbe mov dec adc add ret in adc xor xchg adc lds pop (bad) dec jne loopne push pushf rcrb mov pop aaa (bad) and jbe ficom loopne ret dec mov outsb mov jmp mov ljmp or movsb add aam int out and mov mov jg fdivp (bad) shrb lods mov sarl aas (bad) je (bad) push in adc shrl push adc ret adc mull imulb stc sti leave addr16 inc pop mov (bad) sbb je in adc dec cmp aas rclb dec push sub (bad) adc lods adc movsl mov aaa mov or jl jg fwait xchg adc adc adc or pop fwait aas jo mov push mov sbb test int3 push push bound inc into adc mov add sahf pop or adc ljmp push daa add dec pop cmp pop aam or addr16 and in lcall movsb in ljmp cltd adc jle loope and adc jp (bad) out into adc in test adc jge add aam adc bound loope push push rcll sbb (bad) sbb dec adc and adc mov cmp jge movsb fidivrl add push add jbe cmpsl mov sbb (bad) shl fnop pop adc xlat inc out dec pushf cmp xchg pop (bad) xchg aas adc hlt xchg mov sub test add jo nop xorl movsb mov pop and ficom jae cmpsl test test dec stc adc adc fisttp pop xchg or loope cmp lret sub cmpsl pusha pop cmp mov mov push adc lret and adc rcrl repnz push adc xchg (bad) shlb jg scas in add xlat imul lods jecxz push ljmp adc addr16 jne popa fmul aaa rol mov or mov je ljmp push fisubl lds scas roll adc cmp (bad) repz add inc xor adc mov pop shr or movq xor enter sub mov adc repnz hlt xor add adc lcall push dec push or adc pop jecxz (bad) das (bad) mov stos sub lock sub aam mov inc popl cmp mov adc loope adc das xor fistl outsl ja mov and dec je jnp mov aad mov add lcall imul add repz fcompl incb nop or out rolb or add adc mov cli inc mov xchg or mov jle mov (bad) xor dec int sbb pop nop call mov punpcklbw cwtl (bad) out adc pop jbe mov and enter clc nop test pop add std test int3 or scas pop add pop out stos repz outsl movsl pop aas ret or cwtl (bad) xchg cmp and clc std in mov (bad) push mov sub or adc add xchg sbb pop or adc push in lea (bad) add adc pop inc cmp imul adc daa push jns push mov xchg popf int pop ss adc loopne adc adc and inc leave push out repz fwait out into add mov inc and insb fisttp or mov adc adc add jae insl pop inc xchg jle jae adc pop es out mov scas icebp ss ja mov js jno les mov dec adc cmpsb lock pop dec mov mov dec inc or adc push mov xchg cmpsb fs popa into mov test fwait dec mov xchg inc (bad) daa sbb adc (bad) xor stos dec xor adc out dec out add movsb jae repz sub adc push add mov sub hlt int pusha (bad) push mov pop fadd scas pop (bad) jecxz sub aam jns leave xor mov mov mov adc xor cmp inc ljmp pop test pop out pop ja lret inc adc jnp inc xchg mov mov sub test fstpl bound xchg call insl ror stc popa sahf mov cld movl repz in mov or dec jne add xor fidiv mov pushf sub nop xor repz ret (bad) inc cwtl pop std (bad) mov mov mov jp subb adc sbb jb lea outsl ljmp test into adc movsl bound sub inc jg pop adc repz mov jmp stc aas ret xchg lahf adc mov (bad) dec mov xchg mov push sar dec or jge adc into sarb sbb adc adc sub dec pop adc mov adcl inc fwait inc pop test push push lahf jbe mov or lds push or inc push clc and jae adc sub inc adc sbb call ficompl adc mov pop or adc mov aad scas jge fstl iret sahf rcrl xchg xchg push jp cmpsb or daa pop subw cltd adc mov sub rcrl cmp (bad) in cmp pop cmp push repz adc pop call mov mov adc mov mov es xor mov aam mov into pop jno dec xchg cltd cmp sbb (bad) cmc das adc add jno lods loopne jge jp mov xchg test or dec sub insl jae daa int in add mov adc pop pop cltd xchg push inc jge adc lcall adc cmpsl cli fs scas or adc dec xchg and inc adc sbb mov scas xchg int flds bound jmp pushf mov pop out scas lahf pop mov push call pusha hlt sbb cs stc or adc clc cli mov repz adc repz fisttpl orb mov (bad) mov scas push and packssdw loop jne (bad) sti dec add (bad) pop pop push js sbbl inc adc cmp xor insb or push sbb rorb pop sub cmp pop and add inc jb mov ficompl aad rclb ljmp push push add pop jecxz xchg hlt repnz add mov adc cltd pop insl stos adc mov jmp mov (bad) add adc xchg xor mov jb or adc push mov adc cmp xchg adc xor mov sbb repz jge int3 cmc popf mov adc and xchg adc stos (bad) mov lcall push sbb in jmp adc xchg xchg cmp add test pop xchg leave jnp enter push jno xor or inc mov add out icebp out cmpsb sbb sbb incl (bad) adc adc cli adc pop mov lcall mov inc and mov pusha enter push pcmpeqd std sub mov inc out mov or or ret stos rorl ljmp jns xor adc and es xor adc jns sahf rorl fldl xorl movsb pop mov adc mov imul inc mov int and add mov js pop push jnp in aam sub arpl lea out lret and adc dec add and xor (bad) adc cwtl pop or adc (bad) or mov push in push jbe mov je inc arpl rdpmc push bound js mov xor adc adc aam shlb cmpsl sbb es jge xor fmuls xlat aaa bswap pop jecxz mov or pop mov adc xchg push adc add icebp pop and cld jae sbb sbb stos lods imul push adc add xchg cmp lock and jns mov fimull rol mov mov (bad) sbb (bad) jmp data16 adc cmp or cld enter mov push mov adc scas add aaa or sbb fsub dec stos adc ljmp test or pop adc push mov pop (bad) outsb cmpsb mov (bad) shrb sbb sbb sbb repnz lea addr16 add aaa dec ds or lret rorb loope pop mov adc and sbb sub or mov jecxz leave pop (bad) das dec addr16 inc inc cmp (bad) lret jl stos shl mov fstpt push fild repz mov pop adc or inc xor sub add pushf pop adc sbb mov sub out add aad imul enter pop sub hlt pop fadd insl mul sbb fdivl outsb jg push movsl xchg in repz or fbstp sub mov push out jl out sarl sub adc fs jne shr sub or mov ror add pusha shr cmp not mov jmp fistpll jae repz inc rcr insl inc pop jle sub cmp pop jge push push jno sub daa xacquire fildl icebp ficoml sbb jnp,pt sbb xchg push out scas addr16 dec out or add mov jg fnstcw pusha lret sub sti dec shrb mov (bad) cs les jno push leavew pusha mov mov xor clc sbb xchg in fsts sbb shrl mov dec sahf sub sub push lock sti adc adc jg sbb pop jecxz lods mov insb mov cmp or sub and mov pusha pushf pushf pushl ret jge pushf pusha sub lea jne pushf inc lea push lea call push call inc jg pop cld pop inc jg lods lret insb jnp aas sbb mov es jle movsl pop adc mov test std xchg mov bound sub call mov sbb insl xchg cmp test gs fwait insb push cmpsb dec xorl mov mov push and mov mov fisttpl ret xor divl fcomps cmp sahf jl lahf cld (bad) push loope cmp xchg sbb std out mov pop inc xchg imul loop or xor cwtl push aaa lahf mull dec adc and mov xchg seta js inc (bad) (bad) xlat into sti lret hlt jecxz jae pushf mov cmp (bad) aaa or rorb (bad) negb lahf loopew push gs out icebp cmpb movsl out pushw jne xchg rorl fidivl mov mov stos lods push mov fdivrs sub fisubr mov jp xchg push pop inc outsb jne (bad) add jns test cmp mov mov mul mov hlt addr16 push xchg sub mov out mov test out xchg jecxz push jg and fs call push call mov pushf movb mov bswap cwtl movl lea lea jmp push push lea je pusha mov push pushf mov jmp setle jmp not lahf lea jmp bt jmp jmp lea jae clc stc cmp pushf lea jae cmc cmp jmp je xchg pop inc scas jecxz fldl2e cltd mov ljmp (bad) mov and dec jae dec inc shll dec inc mov sub loopne mov mov aad and push ja cmp xchg push loopne bound pop mov mov popa loope inc mov jecxz mov push test inc mov and inc iret add xchg cmc hlt xor and push loope mov push incl inc fldenv je and or in aad pop pop in add add insl into movb in and or insl pushaw rcll push insb scas or cli mov mov aaa lods push fsubr jg or xor cmpsb testl mov dec call mov aad ret in idivl mov jmp idivl in mov jg xchg mov nop mov stos clc pop inc pop sub xchg enter push inc jp jae jns cmp inc jne xor movsb pop jns jg icebp test pop xlat stc xchg and cmp mov add xchg int call into inc pop or dec inc mov jns and mov icebp out sub or mov and (bad) push push sbb repz aas stos scas dec sbb repnz aad xor sub push sub mov data16 loopne lcall sub notb fs jb cmc pushf call lea jp movb cwtl push pusha mov pop cwtl lea jmp lea je movsbw add ror shl mov stc add cmp clc mov not call push adc pushf pushf pusha jmp movb pushf pushl popl mov push pushl pushl ret cmp add push pushf mov mov lea jmp clc ja pusha test add mov lea jne push pusha pushl pushfw popw bt mov pusha test push xor stc stc call pushf lea ja bt imul stc stc stc pusha add push lea jmp lea ja bt call movsbw mov movzbw lea call lea jb clc test bt stc cmp push call jl inc lahf cli pop inc mov xor je and std (bad) add shll je xor jns sbb xchg arpl test sti xchg jne push pop cmp cmc ljmp dec jmp xchg loop ljmp sbb sub pop jns fmuls pusha aam insl pop sub movsb pop add dec lock popf sub push xabort and rcrl push fs (bad) mov mov pop imul mov cmpsl lds data16 mov mov lahf aam imul jne pusha mov clc bt clc pushf add pusha mov movzwl lea movzbw xor mov call js ljmp shl or fidivl into xor clc iret mov cmp sbb outsl out adc dec gs pusha aas sbb pushf cmp daa jecxz mov mov xchg and in xchg (bad) push add cltd jne sbb je sti shrb xchg inc push jnp test push addr16 lods jns adc jo jg je adc lock nop or cmp jl push adc mov and jne inc and outsb into or stos sub push movsl rolb push ret into gs jge sar or pop pusha adc dec icebp cld add mov inc and add enter incl lahf bswap movsbw movzbw mov call mov pop inc sahf arpl scas sbbb or push dec pop imul push popf cld push inc pop jp jbe sub xchg inc pop inc jo call sub jnp jle inc je loopne or js adc je sub cmp fmuls lods cmp std pop xchg push sbb les mov int call das iret xor xchg lods dec inc push scas dec icebp fnop fstpt call sub pop push sahf sbb lret insb xchg out cmpsb jmp push leave ljmp cmp add mov pop push mov jbe stos pushl pushf call stc xor (bad) add inc ret subl mov adc (bad) ficomp mov andl popa stc sbb out fs add push cmp sub in nop push cmp inc shlb clc iret inc cmp lcall shrl and lret into push mov popa dec pop xlat mov fisttpl xchg mov pop imul fcoms in inc (bad) push lock fildl dec sti inc sbb icebp xchg xor mov xchg scas add dec fadds jb add mov das insl call repz mov repnz cwtl daa lea ja stc jmp lea ja push jmp pushf clc clc repnz lea jge push pusha pushf lea jne bswap bswap movsbl movb cwtl push bswap lahf lea call into push inc stos sbb ljmp xor das adc or cmp pushf repz clc xor dec or gs xor mov sbb shrl out pop inc mov pop in xchg inc mov mov dec ss call inc js ja and sarb add aam mov push sbb aaa call adc int3 xchg stos jnp iret push sbb lret xchg jle dec push lock push push (bad) push les dec aas add mov push xchg dec inc mov popf incl popf out pop cmpl mov add jno inc pusha mov push push pusha pushl lea jmp call jo pushf movw lea jb bt cmpb jmp call movl pushf movw mov movw lea jmp not call dec btr bsf mov bt push test cmpb pushf lea jne btc mov stc sub daa mov cmc sub add ror mov bt test test jmp call not bswap mov cmc cmpb pusha jmp scas mov inc add insl hlt cmc cmp xchg jmp sbb mov out fldl mov mov xchg jae divb mov movl push sbbl cmpsb pop lods xor mov xsave cmp jae jmp mov push aad hlt imul or scas push xchg inc mov add lea je cmp pusha mov or pusha pushl jmp pushf pushf call mov add shr ficompl arpl mov mov add pop (bad) xchg jae cwtl dec push push push (bad) sbb out jnp inc outsl outsb je bound ds add inc test (bad) or dec cld out sbb lds ja cmp xchg outsl xchg bound outsb fcmovu inc and or sarl in jne (bad) int3 push xlat jno (bad) repnz mov test bound add push pushf pusha lea jne sets movb setne movsbl mov pusha mov pop pusha call call add mov add mov aam or int3 lret clc push pushf add outsl fcoml cmc sarb orl call xchg fistp sti mov mov add fs int addr16 pop xor int push push adc fwait call or (bad) mov pop pop add sbb movups stos or jns jmp lret push sub scas push aaa mov jecxz xchg (bad) roll mov or popa xlat lods adcl jle jnp xchg bound and push add lcall shl out lret xor pop ja clc mov inc out stos cmp xor sbb sti mov mov cmp or mov pop call cmc (bad) in xor fs stos sahf lds test pushf pushl popl push cmp jmp imul jmp call movw lea jae bswap setne bswap lea mov pushf lea jmp repnz push pushl mov push lea jne lea mov pusha movb pushf pop movzbw not mov movsbl lea jmp pushf mov pusha pushf mov mov pushl ret lea call stc pushf pusha sub pusha push lea jne call jmp lea jne jmp shld rol inc mov clc test jmp hlt in leave pop add inc jp rolb cmp pop mov mov enter in inc lock jnp out xchg rolb fwait les pop pop xchg scas cmp rolb add hlt cmp add xchg test mov adc outsl call xor stos js jg sub sub push xor mov xchg mov cmc push cli push cmc cmc sub jb ljmp push push jl add add int3 sbb push adc scas lds mov inc repz das in jge dec fwait xchg out pushf movl call call (bad) sbb add inc xor add inc cwtl inc arpl mov or sbb in shrb and lods or aaa and mov enter push push subl lods das mov mov push inc mov in mov xchg push dec (bad) or sub icebp push mov xlat lret arpl pop pop cld cmp not movw lea bswap mov jmp mov movb dec pushf push jmp movb repnz pushl call bswap pushl bswap mov pusha lea pushf movl pushf mov push pushf pushl ret lea jae pushf call call jmp ror jmp cmc or call xor add and push pop jg push dec bound dec roll rolb sub leave xor or mov cmpsl stos ss and cli mov mov in inc mov daa dec mov fcmovne fbld into mov inc (bad) lds dec ret lock jle cltd ds lods (bad) mov icebp cmc ds xor enter cmpsl mov rcr xchg insl fldenv pop in dec cmp xor nop push adc ss rorl fstpl inc jns jno fidivl outsl mov pop leave ljmp movsb ret fcoml sbb push sti jp aas (bad) jae xor adc sahf push add mov cmpsl xchg mov inc lahf or dec cmp and ljmp jge fisub sbb lahf mov and push std lods mov mov pop ret jmp sarl push fwait push mov bound jae aaa mov (bad) xchg (bad) push rorb sub jl xchg xchg mov jns cwtl in jae out adc addr16 (bad) je mov adc (bad) aas and es mov cmpsb in fistl inc mov pop (bad) sbb mov adc mov addr16 adcl insl aam mov inc adc ja test (bad) push cltd add and test push test gs sbb or xchg lahf inc add stos mov push push add (bad) xchg adc mov bound push je fstpl lahf mov das data16 (bad) or inc xlat jne jae icebp lock add (bad) ftst push mov mov mov cmp sub inc dec jl ret das jg pusha adc push xchg paddd mov cltd dec cmp fsub testl and je push inc sub mov push aaa dec int test adc roll pusha sti xchg cmp sbb adc pop inc clc insb fbld push xchg sbb sti push xor cmp jmp pusha call push add sbb iret out lea and xchg imul xor aam (bad) mov add pushf or fcoms jo pop mov dec xchg or jne mov fs addr16 jl mov lds jecxz xchg outsb out mov pop jne aas les jbe imul mov cmc insb fnstcw dec pusha sarl ret pop insb mov aad loop or dec test mov push js mov jecxz sbb ss movsb pop inc mov cmpsb pop fs cmc daa sahf xor inc gs push dec outsb outsw add add hlt sldt iret cmp pop inc jne lods (bad) mov test dec pop and xchg mov inc test inc bound adc mov push and push test dec xor es xchg (bad) cmp fs fsubl clc lods xchg sbb cmp push jg cld push cmc fstl outsb adc addr16 dec xor adc mov xchg fcompp not movl dec leave and ret iret mov pop std dec lods or call enter sbb adc jbe push mov push push lea je push bt bt test sub pushf pushf stc cmp pusha jmp cmp jae cmp pusha cmp call cmp cmp or pushf lea je clc clc pusha cmp lea pushf mov mov pusha pushl ret sub mov cmc stc stc pushl popl cmc push cmp test cmp push call pusha stos mov pusha mov lea jmp jmp adc call dec (bad) pop orl inc jbe add and fwait arpl idivl push xor xor mov push mov mov mov xor outsb mov add pushf roll inc mov pop mov and sbb dec dec mov jbe (bad) clc daa out je lret mov adc cmpsb ja mov and pop dec and pop jmp pop jmp (bad) loopne push push push jge push push stc loope lock cmpsl jns ret push dec clc addr16 out setge test cmp stos sbb push jne xchg mov in sbb push sarl inc loop pop popa ds xchg mov jns ret jne lret mov mov xchg xor call (bad) cmc test adc jne sti cmp cwtl lods and xchg jns pop or mov adc gs ffree pop sahf test or inc (bad) lea jb jmp jmp setl mov cmp clc movl bt test pushl push pusha pushf lea je bt clc sub push movb cmc cmp movl call pop pop rcrl call shrb (bad) (bad) call cmpsl js aam in sbb (bad) sub loopne in adc cmpsb cli mov (bad) push in xor sub sbb int3 jmp dec movb or lds shrl xchg je andl push and xchg scas sub inc mov sub das mov or xchg roll cmp repz aaa pop (bad) (bad) mov push das rcr repz dec cmp jl arpl rorl mov mov dec out dec mov mov out mov addr16 push or lock loope (bad) js xchg and jnp int lret sbb add mov rcll stos sbb cmpsl ja xchg cmp dec jecxz out lods sar insb fstpt or call out bound fcmove add mov (bad) int cmc or fdivrl adc push fstl inc in dec test pop inc movsb pop inc scas xor xor pop movsb orl ja mov in std and lds testl gs push dec cmc jg pop push (bad) adc (bad) notl movsb inc jge test gs or cmp pop fwait addr16 in bt pushf stc cmp call call pusha mov sub pushf pusha pushf cmp jmp jne pusha call movb call bswap push call stos pusha sub into (bad) mov dec jmp mov inc jae cmp dec iret out (bad) dec and add loopne das add scas sbb sub sub frstor andl push call jo xor int lret add cltd or xchg fbld dec out inc cmp dec mov push mov cmp cmpsl and test cs mov lret sub fiadd repz mov jae loope ja cwtl inc popf shrb xchg pop rorb dec ficomp es ret sbb arpl pop cmp (bad) mov lods adc test sbb out jne lea jae or rol xor pushf mov bsr mov add rcl mov bt cmc call movl jmp pushf pusha jmp imul pusha movb jmp add inc push es inc stos fiaddl inc (bad) repnz scas xchg inc jle aas push jnp mov ficom add cmp inc add (bad) push jno les mov add pop lods js jg aad adc pop pusha adcl adc shrb pusha je int jb dec xchg sarb mov ljmp std data16 test aas popf sarl popa add (bad) and repz in test cmp mov add push out test sahf popf jp loope push fsubr fisttpll xchg dec inc stos and or or xlat (bad) fimull xor popf or movsl sub dec call out add push add lret fsubrl mov fisttpl cmpsl nop pop sbb mov xchg sti pop cmp movsl sbb push add andl es sub pop push addr16 in push ret mov mov adc pop mov xor dec ja sar dec repz add (bad) repnz movsl pop test aam xlat mov xchg push mov pop add and fistl in roll push mov cmp ja push jno mov add xor adc add add inc and vmlaunch push pushf lea jmp jmp call cmp call clc mov bt test test movw movl call push call sub cmc pushl popl cmc pusha clc cmp pushf movb pushf lea ja and sub push pusha cmc btr lea add add inc not rol mov call xor in add ss fwait imul ja sub inc mov mov (bad) daa sub test in jb push pop sti dec lret loop or or xorb sbb fidivrl ret (bad) enter iret (bad) int jne add xchg mov or mov leave ficoml js adc test jg or aam ljmp pop aas cmp mov movsl outsb leave pop scas adc pop add add cld cli ds sub pop lea cli add pop xor icebp das cmp repz les orl popf xchg cmp add cmp in es adc inc rolb add jne lods jbe pop test cmp jns and mov fdivp or subb ds jnp mov fcmovbe out ja mov out adcl test and out imul mov outsb xchg es mov mov pushf jle cld mov adc ja xchg sub into inc jge inc inc mov push lods pop stos lcall loop push data16 repnz les sub shr sbb and jmp lea jb cmc cmp cmp cmp jae push push movw lea jae test setp bsr and mov pushf cmp not mov shl mov mov stc cmc sub test repnz pusha lea jne movzbw (bad) icebp sbb mov mov rol sub lea test or mov cmc sub pushf pushl popl call and loop,pt add cmp xorl in fstpl (bad) hlt mov pop neg xor xor out dec mov push adc cmpsl inc test stc icebp mov add xchg js ss lahf add in and pop jbe fisttpl leave add pop push sub sti repz cltd xor insl pop sub pop jo ljmp stos rorb test jle shrl xorl pop lea iret or xchg (bad) repz mov ljmp iret inc sahf pusha int3 xchg pop pushf lea jb pushf mov call add inc gs outsl fs gs popa outsb fs gs add leave jmp pusha lea jne rcr mov cmc sub bsf shrd mov clc sub clc call add adc pusha push call scas push xchg dec adc inc push aam fadd mov adc addr16 and dec into add mov or push lds sub lds sub movsb mov dec movsb jae xlat mov es xor jbe adc les push insl ds jp fsts and popa xchg and mov dec pop mov lock ja dec jae fstps pop popa iret push pop or int push lods jp insl fdivrl inc out push jl sbb push inc test mov inc sub cli shll mov in aad in inc rorl test add scas push aas pushl je cltd mov or adc sbbl ljmp adc adc mov rcrb insb mov mov add aaa inc test pop scas movsl insl pop cltd inc xchg scas cs into sbb (bad) mov loop stos push insl fidivrl mul cs leave lock cld inc test hlt push outsl int clc ret or scas jmp inc xchg cmc adc dec sub call pushf call scas jo or xlat and ret ret mov or movsb adc mov fucomi pop out std xchg mov push neg cmp add dec xchg mov inc mov xchg pop lret ljmp cli sahf mov or ds jnp push daa sub push xlat xchg add push sbb (bad) xchg xor in fwait sarb push aaa mov xlat ds lret mov sub sbb mov cmp mov sub cmpl mov dec lods xor (bad) fsubp push enter into jbe jno std fisub sti push mov sub sbb lcall ja mov ret je xchg insl pop cmpsl mov lods std sub popf jns sub mov cld shlb enter adc fwait or (bad) cs xchg jge out flds movb pop scas jnp in jns repnz lods stos lods fadd sub gs scas xchg cmc or daa sbb xor push dec inc ss cli xor mov xchg lds mov out xor add out fild sbb sarl pop fnop fucomip xchg xchg push aaa xchg jnp xor aam add add lds icebp loope repnz lret (bad) nop push cli sub in mov sarb je movsb mov ss sbb add mov and inc and push int3 xchg jecxz popa in xchg adc dec hlt mov into inc cmc outsl repnz jge cld mov inc cwtl push xchg outsl sti sub call test ret jae (bad) lock push mov add (bad) jmp enter not lahf push jmp push lea jne pusha pushf movb cwtl bswap mov movzbw lea pusha movl push jmp add bt pusha jmp or push ret inc in and cmp (bad) roll dec ret clc jg dec je inc inc jae xor mov add mov adcb sub mov mov ficoml xchg int cmc decb pushf pop sub addr16 mov or add arpl movsl dec xchg (bad) mov test bound adc bound or xchg pop mov lahf in js das push loopne dec (bad) push mov xchg out cld push jbe fmulp dec adc xor dec addr16 push call lret fcomps add insl xchg jge mov dec push or int push jge push mov push xor pop shrl aad dec cmp iret lret pop fcomip les mov mov mov aam dec cmp rcll adc cmp insb int3 popa aaa popa dec or ja stos lea ret or xor int3 cs imul cmp push mov push mov inc xlat repnz in insb mov mov (bad) xchg mov mov bt shl pushf lods mov xor pushl ror movb pushf inc push clc pushf xor pushf push push lea call push cmp mov jmp lea jne movzbw pushf movb movzbw cwtl movsbw mov push not not lea pusha push mov movl pushf mov pusha pushl ret movl push mov mov movb push pushl ret sbb push mov xor add inc jg sbb mov and lds jp xchg xor dec and dec jp push sub roll jmp sbb inc lods fildl int3 cmp les mov push outsl push cmpsb cmp cs push lods sbb mov and fs je bt cmp bt sub pushf cmc pusha cmp pushl jmp push pushl jmp mov add je xchg push sub aas cmp mov sbb push std rcrb sub mov inc mov mov and jmp xchg or mov xchg lret and (bad) mov ljmp stos fwait mov sbb iret (bad) adc mov in dec leave mov dec ss test dec xor mov fdivl out add push push neg imul subl fdivrs jmp jbe mov adc mov aas test in push cmp test or mov clc cmp popa cmpsb iret and mov adc ds in lahf lods mov xchg lea not mov movsbw pushf jmp mov add rorl gs inc xor inc mov jo pop mov push popf or pop aas pushl jle xchg das pop imul test (bad) rcrb iret cmp cmp jecxz mov enter mov mov sub test pop inc lahf bound jg inc xchg mov mov iret imul into mov les lds pop leave jmp cs jb add rorl inc stc push mov and xchg or insb push movsl or jg sbb das inc push add bound cld arpl pusha pushf lea jmp lea jne pusha push pushfw popw stc call mov pushl pushf pushf pushf pushl ret imul stc stc cmp add pusha lea jmp call cmpb jmp mov jmp cltd or add add jl adc add add or adc add add cmp adc add add pop mov add add add add add adc mov adc lods ja add cmc add add add jmp movb lea call call repnz movb pusha mov push lea jne call mov data16 icebp or int jb (bad) (bad) cmp pushf pushf push lea ja stc sub jmp movzwl push mov test stc add cmc bt cmc pushf mov bt test jmp pushf mov inc jmp lods lahf call and ret push mov inc mov or aaa mov das scas pushf (bad) hlt mov xor (bad) mov pop pop mov dec jo in mov xlat aaa test mov out xchg mov lea aam (bad) pop aaa (bad) cs pushf loope inc push sar rep pop push cmp loopne hlt mov hlt add (bad) aas xchg addr16 pop enter pop jge cmpsb andl or mov (bad) rolb ljmp xlat inc rolb aad pop jmp clc ja shrl mov and leave mov jns (bad) insl ret push andb and jae test pusha clc push xor movb lea call call leave push subl inc dec mov fdivl push add cmpsb mov xor sbbb dec les stos iret dec and repz imul lret stos add adc or add das xorb sbb pop in add lods push clc pop adc mov add outsb in cs clc mov cmp enter fstpt xchg ret pushf test insl aas cwtl fldl scas sbb inc (bad) iret cmpsl lahf faddl sub pop hlt dec movsl and stos ret (bad) jge lret xchg mov mov fwait mov xor (bad) lods mov fs je cmp test add cmc stc cmp call push push inc push xor cs insb add add jecxz into pop lret adc lods cmp fisubl cmpsl (bad) loope call cld push es sbb loop adc loop addb stc orl xor jle div dec mov fdivrs pop mov mov insl fs (bad) (bad) idivl xor mov fsts sbb rep lods jne loop shrd data16 repz lret jmp ret pusha cmp pushf cmpb jmp jmp jmp pushl lea jb pusha cmp movw cmp jmp popa sahf fmuls inc imul pop xchg push aaa mov ficoml or test popf (bad) movsl jbe inc sub mov dec mov dec mov or cmpsl pop dec outsl jmp mov mov inc and xchg add jge sbb cli push sub test insb jecxz dec pop mov dec cmp sbb sahf mov or out dec sbb xchg adc or pushf sti push fisubr mov push daa add xlat adc mov je add in ret call pushf cmp xor insb jecxz jmp mov xor pop jae pushf or insb test je push scas aaa inc gs dec adc push (bad) stos (bad) sbb mov jg and jns pop lods (bad) iret shr shl lret sub cmp adc mov xchg sbb repz adc or lock pop xchg push lcall lahf bound mov iret push xor mov pop inc cwtl icebp movsl sahf add or fidivr xor out stos (bad) repnz jbe insl les jns adc ss or test lret gs cmp imul sbb push xchg xor push xor lcall popf xchg pop mov stos mov addr16 int andb or push test jo sub mov pop and stc jo in or pop (bad) sub sti push iret xor aam rorl and inc pop jb es mov mov (bad) xor loopne lods cltd iret decb pop idivb and popl sub mov aas jp lea jle mov cmp lret push or fimul insl fistl icebp push pop stos ds mov pop rclb into lods sbb and push xlat movsb jge daa movsb pop (bad) jp pop shll cld les fcomps jmp ds fsubrs xchg push imul or jb pop out mov push sti push sub mov cmp and inc fimull sti lock stos test add pop mov xchg aaa decb stos add and xlat subb leave cmpsl xchg xchg ds int mov test roll insb or pop add push sbb icebp push fwait mov mov es out js mov inc push pop in inc inc out inc sbb cmc lods pushf lea mov jb mov test loop cmc outsl repnz ficoml out or icebp loop shll sub into adc add enter cmp push lods sbb jae mov andl fdiv adc das jg imul call jl sbb xor jge or js pusha mov in fisubrl in xor (bad) movsl cmpsb lahf mov (bad) (bad) pop data16 dec lret mov or xor mov mov aam test jno (bad) shlb sub pop mov adc pop pop imul jmp pop xlat subb dec push iret push inc jle arpl dec inc xchg inc push push aaa outsb cmp adc pop mov enter mov add (bad) mov call xor xor imul mov jns rorb lods int3 addr16 cmp rcrb xchg pop pop lahf movsb notb or mov in out ret lahf mov test andl sub pusha fstl jp cmp sbb int jl xchg push rcr mul sbb (bad) repnz int3 in mov (bad) dec enter scas pop repz ret jbe sub enter loopne cli mov push push xor push xor int cli pop std das xchg sbb dec mov jns sub or xor jmp mov lret fisttp test or shr xor mov and mov rcl sub inc bswap dec not mov cmp sub cmp pushl pusha call sub add call push gs xchg push inc push add and xor out out mov or lods and jg mov (bad) and test bnd fistp rcrb and jg (bad) cmp sub push jl inc (bad) xchg jg pop call (bad) lret lret and or stc xlat and loop shr xor out arpl in ss (bad) lret push xor movsl sub ja stos popf jecxz push stc pop (bad) inc add pop insl roll pop sarl jg lcall call cmp lea push movb movb mov jmp cld icebp pop xchg inc mov lock mov mov mov ret sahf cmp repnz gs xchg fistpll mov dec lds push daa xchg lret jle xor daa test bound pop pop jbe mov es call xchg mov pop xor mov sahf dec clc jle outsl xorl out scas pop clc pop out push in cmpsl or test sti sub into push xchg xchg stc insb mov xchg sbb inc mov inc out fmull xor dec js jo cmpsl xlat in mov jge and dec aad sahf sub and xchg (bad) mov add inc std sbb ret les mov push popa mov mov (bad) fimul orb xlat mov fsubrs bswap jge js call fnsave gs xor and rcl or leave xor and mulb movd xchg (bad) repnz push mov push xor fs jne rcl pusha sub aam aam btr mov not dec add setnp clc mov test test pusha test jmp pusha jmp cmpb add inc xor xor lods and mov cmp inc dec jecxz mov call mov mov out cmp mov mov movsb repnz jp ret mov fwait inc adc fbld imul das hlt and push aam insl sub leave pop iret (bad) and adc mov jmp inc push mov js mov dec xchg sub leave test or jmp ret pop gs adc jge adc and arpl (bad) add movsb das imul add pushl imul clc pushf mov jmp pushf jmp mov faddl add int pusha mov adc std into push scas (bad) (bad) iret push pop outsb xor jnp into sub popa pop or loop add inc push (bad) and xor ss stos pop addb pmuludq cli push inc sub addr16 dec popl inc lods fucomip push mov fcmovnb popa sub jmp movsl mov inc sub outsb cmpsb sub je cli and xchg into xor jne sub lea (bad) je jne and pop mov dec je mov (bad) and jne jp insl mov inc lock adc dec pop xor imul mov pop (bad) aad and cs add hlt jmp dec insw pop popa jb bound sub lret hlt jne,pn sbb pop fsubrl subb jmp add jnp lock mov bound sbb das xchg inc mov jno cmp movsb inc push (bad) pusha cmp xor jg cs test xorl pop addr16 sahf rorb xchg sarb data16 stc sbb cwtl movsl mov stos add std push jmp popf ret push dec or pop pop cmpsl cli bound inc inc xchg mov pop sarl jp xor xor or je push mov insl cld add mov lahf jg sub jb dec sti mov popf mov mov push cwtl call mov mov stc call pop sbb sub inc push and in add lock or fstps jb pop pop rolb rclb (bad) jo sarb adcb jb mul mov clc mov (bad) int enter imul inc les fbstp xchg mov sbb dec (bad) xor lahf sub in dec int3 (bad) rcll mov push imul jb dec ja in stos gs jge pop sbb adc or lahf sbb add add roll xor push lea jne push call jmp test push jmp push call inc push push pushf push lea jmp push pushf call movl push pusha lea jmp les adc add leave push and movsl scas or cwtl jp jno cltd popa and jle dec pop mov jno push popf out mov fbld mov fcmovb lds loopne,pt lahf adc nop pop xchg pop cltd xchg fdivrs xchg xchg loop mov push and cmp js pop lods pop out sarb jmp jae hlt pop pop dec push mov jns push (bad) cmpsl xlat inc imul xorb daa pop and cltd inc cmp loop inc mov lret mov lea daa add test sub cmpsl iret inc push addl xor (bad) push shl inc mov shll mov jg jbe push mov js rcrb aas mov jns xor or adc aas ret add stc pop stos pop cwtl shl mov bt clc pusha cmpb jmp xchg pushf push movl mov call lea jns push lea je shl add sar mov cmp push add pushf clc mov pushl add shr mov call fwait lods (bad) inc sub inc gs mov test or mov inc jge cmp cmp pop loopne mov and xchg or sti imul jle and insb mov lock inc scas fsubrl stc test mov (bad) sbb mov decl ror sub cld push das sbb (bad) in cmpl loopne add out mov add dec aas sbb cmpsl movsb adc cmp popf fidivl fstpl pop push dec pop sub dec fcomps jecxz adc cmpsb test or add or test pop mov inc lcall or push ljmp stc clc add pushf pusha pushf movl lea jmp movb jmp pushf lea je push pusha sub clc clc stc cmp lea je ja call lea mov push pusha cmpb movw lea jne aam sub push das shr rol mov sub test rcr sar or add or mov bt test test pusha call pushf lea jne or bt mov call xor ror mov cmc pushf jmp (bad) xor jno add dec shl call jle and jns adc int3 add mov outsl outsb xor aas nop (bad) int out push clc dec jmp rolb mov add and push stc jnp test push ljmp push inc ret pmullw add jmp fnsave jne push mov popf (bad) sbb nop push pop xor mov stc iret xor dec mov in decb stc pusha mov imul mov mov jmp cltd (bad) mov (bad) out fildll ret inc gs sar mov stc cmc call ret push xor call fisttpl (bad) pop or jmp movsb loop xchg ss cmpsl lods cmp or and pop jp inc fdiv sbb outsl sub icebp es cmp out int3 cmp mov sub fwait test scas push icebp push (bad) inc push pop cltd dec jo movsl or mov pop dec scas dec fisubr mov mov in sub das pop shrl sbb mov outsb in sub pop mov cld inc lods adc add mov push lea jmp pushf lea je jmp movb call jmp mov sub cmp cmp jmp jmp cltd jbe xchg add inc imul add sub adc sub sbb sub mov je xor sub push adc jo jnp or inc xchg mov push or popa bound out dec sti mov adc pop jns or jnp scas push push rcrl pop int mov mov cltd jns dec jo scas fiaddl loope insb sbb or xor leave cmp cwtl pop mov dec int3 sbb pop (bad) jo fsubrl push in sbb pop loop cmpl xor lods cmpsb pop subb sbb and ljmp out (bad) sar push sbb add stos xor addr16 adc sbb inc inc test mov and sarb pop cmpsl pop scas jno cmp xor lds loop in jnp adc jae pop leave aad leave cmp je mov push outsl jae std mov push dec or cmp or jo pusha pop ds and pop xchg adc bnd pop adc jne jbe jg fcoms mov aam cmp jl movsb in shrb or xor inc sub lds dec mov xor lret in hlt adc xchg pop adc xor js sbb jne sub jmp pop or or pop xlat pop pop (bad) out enter outsl cmpsl or pop pop push std js in mov pop xchg jg inc jg incl adc pop push adc xchg sbb cmp cmp mov sub dec or push dec cmp pop jo test dec sbb rorl push aas idivl fnstcw loope cmp xchg pop jmp fisttpl cmc xor fcmovbe mov push arpl pop int pop (bad) dec (bad) ss insb sbbb add and sbb cmpsb and rclb stos (bad) push repnz pusha jmp push jbe fbstp add arpl adc ficom push dec dec xchg push xorb pushf iret push sbb fnsave cmp inc xor js xchg mov mov movsl jnp mov stc inc cmpsb mov push repz xchg push fsubl pop sub cmp and pop aaa je (bad) lock pop dec mov fldenv popa xlat push arpl aam lcall ja dec les push andb push mov repz pop into cmp sbb hlt add cmp mov out (bad) sub fisub sub test sub sahf inc lea (bad) in shr fs rcrb push adc adc push push imul outsb aas or xbegin xchg push fstps pop loopne les and mov sahf insb fmul into lret movsb repnz stos pushf in lea gs ljmp into fildll or fldt add (bad) sub pop rorl xor mov fimul rcrl dec mov mov cmc or push stos sub out fidiv jb or sbb mov cld or cmp cmp add cli orb inc cmc or bt cmp sub push clc cmp jmp pusha movw pushf pushf mov push push pushf dec bt bt clc stc not cmc call lea jae dec pusha mov mov mov inc inc lea jns mov call jmp lea ja bt call jmp pushf pushf lea jne shld mov shl sub jmp pusha mov call jmp cwtl jmp mov lea ja jns jb cmp test bt bt cmpb pusha pusha pushf call push lock std std mov xchg fs mov ret jno jmp mov sub mov pop loope xor sub sbb jge stc in sub fldenv aam push lret loopne and enter test fs xor aas mov inc es cmpsb add mov xchg int shrb jmp sbb inc mov ja xor inc (bad) fsubrs test sbb dec push jne mov xor sub and clc push rclb jno inc or xor push xor imul xor fistp add sub mul dec into sbb addr16 lock sub pop adc dec in sbb pop xor sbb cmpsl dec adc sbb std bound inc push outsb add sub arpl fcoml add cs jge loopne mov dec in sbb div jns xchg popf (bad) lds xchg inc mov cltd stos es in sahf lahf (bad) xlat jno aad lods (bad) xchg into sbb lods lods test aas pop fsubrl cld lods mov push sahf cmc cmc scas pusha lea jnp jne setns shr rcl cwtl xor clc test sar aad mov xor shr add ror or mov bt cmc test pushf jmp cmp sub bt pushl call stc stc rol call mov add clc cli jno inc push (bad) pushf push cli mov (bad) or sub sar cld jb (bad) dec fwait popl aad jg mov cmp jecxz mov in pop cmp pop jno int push arpl loope inc hlt ret jo or xor dec lods fs mov adc pop jmp xchg xor sbb jmp and xor shll cmp sub lret xor addb cmp add push cmpsl enter shrb ret sub mov shlb push adc mov xchg push fcomps movsl push in arpl cmp add xor sbb xchg inc jg jle test mov dec gs mov jnp cmp out cmp and sahf fs mov (bad) push push push int3 jae div xor pop outsl jp les adc ja push cli (bad) fdivl adc clc adc js adc jmp popa xchg sbb mov sub rcl mov push (bad) lds gs pop cmpsb inc dec sbb lds jle repnz idiv (bad) insl (bad) mov jne es adc push inc add (bad) or in nop mov dec test pop pusha (bad) cmp xor fildll fwait and in fwait or out mov jmp aas push pop imul xor bnd xchg outsb repz inc xchg lock mov aaa mov lds pop fistp lret cmpsb insb jmp fwait xchg rorb (bad) enter cmp dec insl add push (bad) test push xchg sub sub arpl add jecxz fsubrp (bad) psadbw jno pop sbb in ljmp fwait cwtl (bad) enter pop popf push jbe pop sahf lret repnz cli fadds into add rcll jp lret jl mov cmp loop sarl gs jg (bad) or arpl fstpt jnp (bad) cmp por imul lds inc in fsts mov in xchg push adc mov dec leave pop sub cmp push lds mov test into add and add out rclb es or add mov push dec xlat in adc sbb xlat in enter xchg add (bad) mov stc (bad) pushf mov ret iret out (bad) (bad) into add out jne movsl xchg xor pop dec xlat sub test int cmp and mov fcmovnbe sahf movsl aam jae aas ret (bad) clc lret in es xchg xchg jb xlat adc adc repnz sub jp call push sub les or leave add movsb jmp lcall pushf aad (bad) mov or sbb xchg lea inc mov pop jp cli lahf jmp jo cmp cwtl cltd decb push pop imul scas xchg cmpl lea ja stc je imul pushf movb add movb pushf pushf pushl lea jmp mov adc das mov ds xlat lds scas in fadds cli cmp (bad) pop pop jbe sar pop mov js leave xor js lcall out mov jae inc mov movsb ljmp jg fldcw test push pop add adc adc loopne dec inc push bound pop fadds je xchg test or pop dec jp pop lods std das cmp or xchg aaa pop inc xor cmp push pcmpgtb cmp movsb out int jp popa pop mov sti lret aas cmp push (bad) fisub mov (bad) rol xor jno in mov ror int inc lcall add dec add add add add add add add add add or add or add add add add push ds sbb (bad) mov inc mov in pop sahf lods test (bad) push inc out and lds inc imul aaa sub mov rcl xchg lock stos pop push jmp outsb jbe mov fdivl mov test dec push sbb iret (bad) jne xor iret xchg icebp jae outsb dec scas dec (bad) sub int3 sbb ret push pop fidiv xor and fdivl push lock int test testl add mov sub add aas or out cwtl dec mov sub mov (bad) in fwait push dec popl hlt icebp mov xor lods pop jg push int3 sbb pop inc icebp scas xor xchg pop sbb rclb add test imul popf jecxz rcl lock jmp or jp loope subl fwait xor mov popf xchg iret xchg sbb cltd push xorb mov mov pusha pop inc lea in lods in ljmp adc mov xor bound adc push pusha xchg iret dec addr16 push mov fdivl push xchg lds pushl rclb mov (bad) sbb mov sahf adc (bad) idivb sbb xor cmp hlt imul xchg in lahf adc sbb shrl adcl or pusha or rcr jae loopne pop insb cmpb dec inc inc mov inc pop xchg (bad) pop add js push push or in int3 mov movsb cltd or mov dec lcall out pop or pop outsb push loopne inc scas popf test add das lahf jl inc mov dec mov inc (bad) mov ficompl sahf mov dec pop mov mov int3 mov or push out idivl sbb xorl (bad) dec mov shlb outsl std jns lods push pop or cmp ret lcall xor ud2 mov std ret out out loopne popf xchg mov mov test subl bnd sub aas (bad) int js mov aam iret ret or je stos fsts mov inc xchg add ret cwtl fs out mov cld mov lret sti ss sbb mov mov xchg and cmp aam pop jo add sub stos fidivrl push enter out add jnp jge outsb xchg or and pop in sub add inc mov in movsl (bad) cmpsb scas xor gs iret push xchg cmp lahf mov pop inc gs adc xchg movsl mov test and cmc push int and mov and pop sub inc cmp js icebp repz jbe sbb inc pop xchg andl mov jg add xor (bad) mov sub in or stc jmp lret xchg insb dec adc ja dec cmp out mov lods inc xchg push sbb xor hlt test jbe into add push mov xchg int3 movsl inc adc lret pusha and cmp int3 mov mov sbb mov fwait pop mov and xor sti inc cmp data16 in xchg add jae clc data16 ljmp cmpsl cmp repz mov xchg push mov cmc iret xchg xchg ret in loope test mov mov push (bad) movsb dec addl (bad) les out fsub mov pusha lcall lahf cld aas xchg jo out data16 stos movl ljmp push or cmpsl repnz xchg hlt (bad) dec lcall cmc negl sbb fidivr movsl (bad) aas mov pop mov ret int fnsave xor xlat (bad) jae cmp mov jg and idiv test inc (bad) mov sbb std adc add sbb cmpsl adc pop xchg push adc and inc dec pop fldl sbb iret mov dec fisubl jb (bad) push insl push sub push add and fbstp xor dec repnz unpcklps xorb push or js cmp aas add test mov mov pop loop cmp add xor xlat aas xchg pop push sti test lds je outsl (bad) loopne fdivl sbb pop outsb push test out iret lahf stc jecxz inc and and (bad) in xor ret dec outsl xor arpl and int3 jo or movsl pop push sbb stos sub inc cli cmpsl cwtl popa adc data16 dec mov pop or daa aad push xchg icebp les enter stos mov mov in mov inc in je lock scas in or and adc leave sub ss xor (bad) mov cmp mov jmp xchg lods rcl imul dec out leave mov cmp popf popa daa jecxz loopne inc lds cwtl pop movsb mov fst test rcll mov scas sub cmp (bad) jo jno int fldcw mov stc xchg in test fsub mov sub mov out (bad) inc sub js in inc mov inc xchg add icebp (bad) jo pop aad push fucom xor cmp leave mov loope shll fnstenvs jl std ret xchg in mov in ljmp dec jb dec data16 lahf add sub mov inc popa test fwait or test inc or leave lds cmp push aas int3 push add xchg mov push adc fs jbe popa cmp lock pusha and int enter push scas in leave add mov mov inc bnd push push pop cmpsb ljmp inc or pop jnp sub (bad) push jne pop cmp ja or mov sahf cld adc fldcw cmpsl and std leave sahf out scas xchg push fucomi fnstsw lock pushf sub stos cmp mov add xchg sahf mull gs sbb and pop rorl and pop outsl stc popa or je xor mov fmulp movl ja pushf ss inc out push out (bad) aaa dec ja jo arpl (bad) mov mov sub jg lea insb pop loope dec popa sbb push mov sbb mov push add mov les pop popa aad or stc mov (bad) aam push fcomi xchg mov pop cli dec sbb movsb shrb mov sti pop xor xchg out ja pop inc push dec inc fbstp insl mov (bad) add aad jg outsl jne repz fadd mov dec mov std mov scas push out push adc sub dec in or std dec popa testb imul lret aas xor xor pusha daa push ret push inc jnp adc xor mov repnz mov push in out aam mov notb jne cmp pop int3 mov call mov sbb (bad) sub call sbb orb add cld leave (bad) fildll xchg scas nop outsl in incl pop lret lret xor lea mov push mov pop add repz sbb loopne ror inc mov call mov loope inc mov push (bad) fldz fdivs push push jmp pop mov push in add cmp dec jecxz push mov call dec data16 insb rcrb sbb add notl lret sub cmp mov pop or jbe lret les cmpsl or inc mov and jo mov shrl jge adc mov or scas cmp xor int stos cmp in aad ret leave cld fisub mov cmp (bad) out or pop imul pop std or inc mov fs mov mov incl sub xchg lahf pop pop ret inc shll lds lea xchg jns mov in repz pop xchg icebp sbb pop aad push adc bt jb mov inc jne sub movsl push int3 cmp xchg mov inc lret shlb in pop jno mov sbb mov adc loope push stc jo loope mov ds jno push add das sub ja push or sahf mov mov lret push mov outsl loopne negl fs sbb pop adc sub adc add xchg scas lock pushf mov jl mov rorb jno pop sbb jns neg cmpsl sub adc (bad) int cld push sbb aad dec out or dec jl lock lcall stos jno fdivrl gs test out inc xor cmp add mov stos or addr16 mov aam jne (bad) cmc movsl jecxz or pop push cltd push xchg (bad) and push data16 mov sub stos xchg mov add rclb adc pop cli push inc ret mov faddl out mov subl xor test dec pop fwait dec xor loop dec xchg cmpsl outsl aam jno mov bound jne mov adc dec es outsb or dec flds jae jge adc or stos (bad) loopne fidivr fs mov das mov xchg out test (bad) pushf js loope jno and sub mov mov cmp push push leave mov sub jge js adc stc mov pop lret xor dec cwtl insl jne xchg js xchg jbe dec lcall sbb add inc stos push xchg outsb xor ret cmp inc dec adc (bad) iret sbb aas sub enter dec lea adc mov add adc aaa (bad) inc and mov mov mov jns sbb fwait dec xor cs mov push fwait icebp inc xor xchg mov mov or int inc loopne inc adc idivb jp leave push push adc push mov pop iret aaa or cmpsl sbb inc pop cmpsl or cmpsl cmc dec mov xor fbld popf xchg scas or imulb dec add push nop es data16 mov jnp pusha dec sarl addr16 call xor mov dec andb in test mov pushf outsb (bad) ja int cltd gs cmp ret sarb (bad) iret and lahf scas mov and sub xor sbb (bad) in (bad) mov test and mov mov imul out icebp pop repnz mov (bad) in hlt clc lock mov out xchg mov dec add (bad) in movsb jne aad lock lret clc push int3 cli add mov inc push add lock inc mov sahf and aad test cltd jne pop cld add imul jb sub pop mov mov or mov insb aad fs std nop nop and shll add into ret stos pusha or lock add jle dec popa jg loop xor loop inc mov cwtl (bad) mov push sbb or mov pop cs repz jnp pop fwait in cmc or fnstcw sbb adc cmp sbb imul and addl pop enter push inc jg add xchg ja fwait sarb jnp xchg scas mov xlat and and imul push flds push loopne out jne ficompl xorl idivl mov (bad) (bad) jle movsl and adc sub scas lret jecxz (bad) iret dec test lods cmp ret mov pop cld pop iret dec mov xor shr movsl cmp orb xor and push pop xchg push in scas shll pop and movsl mov ja sub fwait mov mov mul or pop cltd int3 inc into inc int inc xchg int sub sbb loopne dec push jne cmp jge incb jno jb sub lock xor aaa enter stos fwait (bad) rcrl add mov call shl inc mov pushf pushf push cmc add pushl stc movzwl jmp cli jecxz cmp inc pop loop loop add xchg fucomi fwait aam clc es ss mov add jne push sbb jg jae push sub xchg xchg sub xchg mov andl dec hlt pop jo (bad) aad and push lds or push bound push hlt mov iret icebp adc int3 mov (bad) rcr sub repnz int3 add push pushf out in lret in mov adc add mov jno rcrl adc div (bad) fldt lahf xchg (bad) lcall add pop (bad) or lea call call jmp sub rolb inc jle dec jle adc mov sti clc (bad) mov mov pop cmpsl dec cmp stos xchg (bad) cmp inc pusha mov jae clc cli xlat das lcall int cmp std push stos test mov mov add or xchg mov dec push gs inc punpcklbw sbb dec repz gs (bad) outsl int mov int dec sahf and inc jge mov lret lcall ss cli cmpsb and mov xchg pop mov add addr16 scas (bad) push dec add (bad) je inc popf adc sub mov popf cmp aaa sarl mov ret dec add push mov repnz jecxz mov ja inc fwait sub fchs jne aam into ljmp sub ss iret das inc mov pmaxub inc mov lret int3 or mov addr16 test ret mov cltd hlt (bad) addr16 xor pop push cmpsl (bad) mov mov add mov es mov loopne push leave jle mov xchg sbb inc flds stos ficoml jnp and jnp fs inc push (bad) test in xchg mov and (bad) xor cmc push add lea jmp call cmp mov jmp jmp movl movb pushf pushl popl pushf push mov pushf pushl ret (bad) testl shrd test mov pop bsr adc and mov clc push bt sub bt jmp push shr movsbl bswap call rcr notb loop dec pop dec insb stos or push jle push jo dec push popa cmpsb in out out mov cltd call test cmp (bad) aad and pop subb push add cmp fs push lcall lea add xchg pop sub push mov aam (bad) movsb or imul ds jge cmp int jecxz gs arpl cwtl xchg (bad) jmp aaa in push inc mov or mov setno inc sar jmp test mov pushf movb lea je push bt sub bt jmp jmp pushf mov push lea jmp xchg ret push add insb mov icebp loope mov inc pop bound inc out clc sbb jge sbb lds xchg mov pop xchg push cmpl nop or add movsb mov ss xchg in add push xchg xchg mov push (bad) push or aad in cmpsl pop cmp sub outsl or jbe inc addl in les scas push jnp push lods jle pop jmp and std std aas dec dec cmc cmc lahf mov xchg sbb test insb sbb ret cmpsb xor cs arpl xchg or inc imul (bad) gs imul lcall push test sub negb xchg loopne pop dec mov mov pop lret sti fiaddl icebp in testb mov lds adc inc push jbe mov sti clc lahf data16 cs pop inc cmpsb or xor mov and psubb mov xchg insl insl push xchg ljmp xchg andb xchg adc cwtl aas cmp loope enter mov cmpsl es ret add adc idivl adc loope aas jmp adc push push add pop mov or test cmc in rcl loopne mov into jecxz iret xor xchg jle push lahf int3 inc mov fistp mov xchg cld lahf and xlat adc inc mov out rcrb fistpl lcall sub cmpsl arpl jl std rcr and pusha repnz imul movsb and int fidivrl in sbbb out lock and call in xor and sti xchg push in and ja (bad) roll fs jb pushf mov mov pushl ret inc xor pushf jmp pushf pushf cmp jmp movb into push add adc jns sub jns push int movsl sahf xchg call xchg add mov hlt cli push mov sub push and lahf int3 mov lods xchg xor int mov xchg lret jmp mov xchg xor xchg mov loope or sub add mov add mov push mul std fs mov ds pop sub push jge repz (bad) sahf dec xchg jge mov out mov pop push dec cmp adc lret test js lret mov js aas mov shrl sbb jno data16 xor push add out hlt (bad) mov call mov inc xchg pop popa add push lret pop mov push addb (bad) test sub andl in mov jmp xchg rcrb ljmp and or jo jb mov dec push not repnz add cmp fstpt xor shll cmpsl mul pslld inc daa idiv push ret das in pop movsl stc les loopne (bad) xor fs cltd or in mov jecxz nop dec dec mov loop nop aad mov ret shlb ljmp icebp data16 mov inc add call and jns jbe dec setb bts mov rol ror add ror mov neg sar add pushf bsr movl shld adc and mov mov cmp cmc cmp pushf call dec jmp pushf test cmp jmp lea jne btr mov shrd call jmp pushl lea je pusha call test lea add setns mov bt mov cmc jmp push jmp cmp add ret xchg sbb imul xor jnp jmp push enter push lods stos sarb clc and (bad) (bad) mov or je xchg mov aaa mov sub test shl jo (bad) adc das pop cmp scas je gs add xchg mov test xor lods xchg ljmp test xchg orl orb out adc jecxz stos mov pop divb lods xor cmp and push push xorl repnz lods mov push jl fstpt mov push mov dec imulb xchg lock pop mov in cs in shlb test test push cmp jmp lea je test call push lea je push test sub pushf clc pusha jmp pusha cmp inc loope dec je xor jne aad add or mov decl xchg cmp les out bound pusha jg cmpsb je js jnp imul movsb mov jp cmp dec sbb inc lret loopne pushf push jno stc outsl dec fcomps jmp and sub mov (bad) (bad) jae fisub movsl mov in lret insl fcmove mov xchg inc dec leave sub cmp stos and pop add mov or push movsl fnstenv pop lds push xchg aas jp lea je bt cmc bt add cmp pusha cmc call cmc not call inc jge pop push add cmp repnz (bad) (bad) nop pop xor dec jbe cmp cmp fwait sub hlt xor test cld scas xor dec push push pop xchg arpl das sahf iret sbb and inc and pop xchg rorl mul xor loope or push in sarb jp fs cli and mov test cmp daa fsubr adc sbb jg fiaddl push insb rcrb xor xchg ret mov pushl xor jp mov mov push in sub sti push sbb pop mov pop add mov jns add xchg xchg call mov out sbb xchg loopne ret imul adc inc sarb push pop aaa mov jae and xor fbstp pop xchg lea mov pop sub add test fiaddl cmp inc sbb das mov sbb movsb movsb ret lods inc iret push je xlat pop cmpsb je mov adc rolb popf mov mov (bad) jno in jl js loop push mov lahf dec outsl clflush push xchg outsl add push daa mov pop or or cmp xchg int out jbe das (bad) or push insl fcomps mov arpl push add pop mov into ja mov mov bswap pushl popl lea jmp lea ja clc bt imul clc add pushf mov lea jmp movb mov mov not movzbw seta lahf movl movzbw lea jmp bt stc stc clc sub pushf inc call add pushl lea jmp jb cwtl inc pop add (bad) cmc pop mov sub mov add fimul push xor pop xor xchg fscale mov mov dec jnp arpl push bound test cmc into push jl adc (bad) or mov mov ret out mov inc ret aaa pusha int scas xchg cmp testb jge push mov pop jns pop jno cld rorl ror std int3 std or cltd cmp out cmp pop push mov in push xchg mov jns (bad) or neg minps pop roll dec out jge or dec mov call stos pop insb cltd inc test mov or sub push pop add (bad) pop mov dec stos cmp fisttpl insb dec insb fiaddl imul push jno dec ret das mov sti daa inc sbb push mov pop xchg fimul and jecxz cmp pop outsb adc (bad) pop shrb add sub ds aad mov push (bad) js xor les lahf inc push mov sbb mov add add bsf push inc test mov sar sub bts push rcl das pushf mov shrd pushf not cmc mov rol shr sub pusha movsbw bswap lea pusha call mov pushf call cmp pushf mov mov jmp and aam add and jle xor dec (bad) fsubrs test cs stc out data16 rcll lret (bad) hlt add mov or push jp ds mov pop sub fimull test and out scas je,pn rcll adc fidivr inc jle pop sub jae out jne xor sub mov cmpsb jecxz push in cltd add sub mov jno mov jle mov xchg outsb cmp repnz (bad) sbb mov jp sub inc jle fbstp and ss stos mov sub bound inc sbb movsl pop scas imul inc icebp add mov cmp cmp ret dec mov adc push sbb pop enter jg jb loopne xor mov cltd gs mov pop add ficompl lret cmpl lods outsb arpl jmp repnz loop inc jns fcmovnbe push or sub cs push cmp jecxz mov pop cmpsl out stos fwait lret xor cmc pusha pop cmp in push je mov roll shll mov push sbb cwtl jno jecxz pop movsb or nop jmp out int3 lea mov (bad) fs or mov gs in repnz and xor fistl lret dec mov adc xabort mov cmp jg int3 out add mov cmp sub jns lock aad add imulb push push arpl shlb or sbb out inc ss sbb shll mov loopne fistl (bad) cmc js xchg xor aaa mov cmc mov sbb test cmc movb sbb sbbl icebp mov cmp jbe adc xchg jno jno inc mov (bad) jbe movzbl pop andb stos cmpsb jecxz aas outsb add fimull rorl jge adc call push jbe sbb sbb xor pop dec push ficom loope dec les mov inc (bad) ss xor cli xor fs dec insb fcoms sbb jae push negl jge sub xor pushf xchg push pop xlat lods pop inc adc testb jl jns out add xor out push jnp dec adc rcrl jns push sub cmp test popf pop add cld cli jns sbb outsb inc mov and mov scas cwtl popf xor inc into mov adc pushf test imul mov inc leave adc repz lock (bad) cmpsl test push pop je leave push loop mov cmpsl inc pop leave push dec mov push push mov jnp pop mov jecxz adc mov dec mov divps enter aad push and int xchg and ja (bad) stc mov bt pushf bt stc and pushf push add pusha lea jmp pusha dec movb lea jne cmc mov bt cmp pusha pushf jmp in push rcrb inc daa pop insb dec pop sub lods cmp jg push jo inc or mov lcall xor and xor xor and fs sub aam push (bad) mov xchg (bad) insl jne lret out idivb call into popf movsl adc mov jmp xchg mov xrelease jmp jmp and jp mov std add adc dec out lret stc push arpl scas push jp fs ja add clc inc sub bts test add add mov pushf or clc mov stc repnz pushf pusha movb push lea jne push movb lea setle movsbw mov movsbl not lea pusha pushf movl mov call adc dec adc movsl jae adc cwtl ja xor testb jb adc shl cmp nop inc adc je mov iret mov imul mulb fcomps sahf bound mov pop lds into dec adc xor sbb mov add movsl push mov push jns call sarl mov jg mov ret jnp lret jo out gs in int int3 jmp iret jbe icebp adc jg dec jle jecxz arpl xchg pusha aam adc in shrl mov imul jecxz outsl (bad) out leave bswap jmp lret imul shll out gs in jl stc das jns not jbe (bad) icebp shrl out aad aam jecxz arpl loope jo incl jge std fnstcw stc (bad) jns lret ret add into xchg (bad) xor sti sarl pand adc fldenv cmpl add inc inc (bad) xchg aas adc fdivrl fisubl mov or adc pop sahf adc pop fisttpl add pop mov jbe fsubr movsl imul out gs in jl pushf stc sbb adc (bad) jbe icebp shrl out lds pushf jecxz arpl loope jo call jge std leave jl loope mov fcompl push sbb push fldl push jecxz jno fsubp shlb out adc in shrl iret imul aad sbb cli fsts and neg jbe fcoms flds add push pop int3 ret test sub mov sbb rorl jno (bad) push in movsb dec or iret popl dec push cmp (bad) mov bswap shrb mov or mov cwtl sbbl jecxz mov push push mov fistl push stc dec xor xor (bad) pop mov stos pop push adc cmp out or mov adc push mov adc movsb push adc jmp sbb (bad) mov cwtl pop push push push movsl (bad) dec (bad) mov jb adc in (bad) in hlt sub mov cs adc dec fcmove jbe frstor mov add or adc pusha and sti xor mov adc and and add cmp stos repz enter subl inc dec ret add pop fcmove mov and repz jmp push andl adc pop cmp or and or lret push jp je sbb out xchg sub lret das add je ss pushf pop push jg pop nop icebp mov lcall fsubp pop adc out cmp or inc or or ds add and inc test mov sub xor sbb or stos rolb sub addl (bad) and add nop int3 adc test pop sbb repnz jo bound pop lret cmp sarb mov sbb mov insb xchg scas cmp mov je xchg pop jp fist adc popf or jno add mov adc repz repnz adc xchg push sub inc sub ret xorl mov xchg outsl daa out shr dec add imul mov or or lods ret jle adc mov imul push push aad hlt adc adc mov adc repz (bad) aam xor enter dec mov js jnp fisttpl inc cmp repz mov adc arpl (bad) mov mov inc push adc shr loopne or lea pusha notb mov imul xor pop adc xchg dec icebp nop int dec mov jb mov aaa cld adc dec xchg dec adc lret pop (bad) sahf nop adc fstl lcall (bad) push adc rorb mov jg jb pop mov push (bad) rolb fcmovnb icebp mov fs sub (bad) out popa pop test leave rolb adcl outsl (bad) lods repz test add fwait dec cltd les adc into sub ret xchg shr mov adc adc fldl cli adc jno xor sbb jge push inc adc and in add adcl lock adc imul dec adcl loop (bad) cld adc sahf test adc jmp add xchg pop rcrb mov fwait jo adc push idivb mov jp pop mov adc sbb ror cli mov sar mov sahf fidivrl add stos xor adc insb testb pop stos or aam adc (bad) mov stos ds and push test cmp pushl outsl mov push movsb add mov subl sbb es arpl pop sbbl xor scas js insb int sub mov mov add pavgb dec push dec adc stos pusha stos cmp push call mov lods out rcrl int3 xlat adc sbb jbe mull mov insl mov sar lcall jge fiaddl xchg add add push mov sub jmp scas aam push stos xlat add add mov leave inc xchg xchg cmp pop lret sbb repz cli jae mov adc sbb xchg add lea xchg cmp pop fcoms xchg push sahf jo adc mov ret leave roll push (bad) mov popf xchg add fldl or or xor push dec adc push pusha jns repz mov adc adc adc sub or pop push js cmp inc hlt add int dec mov es and adc cs jp mov mov mov (bad) xchg pop ljmp out push xchg inc xchg xchg mov jecxz push jge shrb aaa or mov pop int and lret adc mov adc sub das dec dec loope inc adcb fs cmpsb adc outsl call pop andb daa adc and jl stc mov sbb std ss inc pop add out mov and xchg jbe clc cld mov push xchg xor sti mov cli loope cwtl mov adc pop mov lahf mov push (bad) lods adc lods fimull pushf outsl adc cmp push cmc ss scas or sub in inc fwait addr16 dec adc and int3 push or test pandn lahf adc pop lods (bad) out mov in lret stos dec sbb test das hlt add in test xchg adc jbe xor sub mov cli mov add jns push xchg repnz mov push xchg adc data16 les adc clc lods jns call mov and add xor cwtl xchg mov aaa and das cmc inc jecxz in sbb mov mov xchg clc aaa mov adc aam test clc sub dec adc xchg sti rorl ja aaa stos aam adc inc je mov mov fcompl cmp sahf int3 rorl xchg mov jno aaa cmpsb sbb mov aad pop xlat xchg ja je cmp pop int3 cwtl and out adc leave outsl dec adc out push test adc cmp fucomip out test or test adc jp repz and dec adc repz das mov adc popf adc jl push adc sub hlt cmpsb adc (bad) mov stos cs and xchg lods push dec adc and rclb popl inc adc ret adc (bad) and loopne dec dec ret arpl mov aas test xchg sbb mov mov (bad) xor pop adc sbb push adc cmp repz repnz xor adc leave ja adc sub (bad) (bad) jae cmp sbb pushf jno xchg adc cmc ljmp in mov sbb mov mov testb je xor mov xor jp clc and jne push adc in adc insb mov adc xchg ret adc out ss mov and dec pusha stos adc call stc int cld out stos xchg pop adc xchg push xchg mov mov or rorl pusha push shr mov dec mov mov add push add jns adc add inc nop mov dec and jmp mov adc ss mov add sub cs dec lds sar pop movsb xor cmp push sbb jmp clc adc mov jle pop jecxz ss mov sti inc push mov inc push mov fst std jno adc push call rcll js and jnp sbb aam mov mov jbe pusha adc aad mov xor jge adc mov inc test xor or and adc movsb out test loope mov or rcrb jo jg mov dec popf sub jmp (bad) enter das sub xor fdivp cmpsl jb adc xchg cmp repnz sbb fidivrl mov lock xchg es mov adc add jmp fnstenv cld movsl jle pop es and clc adc jecxz stos pop add fldl ret dec or les and sbb sbb push adc jmp fpatan xchg ds fidivrl jl adc sbb jl mov mov push xchg push clc adc pusha mov xchg dec adc lea rorl adc lock mov (bad) mov out mov push pop jae sbb or fistp (bad) div lret xchg (bad) push repz (bad) xor dec xor inc (bad) lds cmp add daa outsl js xchg popa adc arpl mov adc stos cmp pusha and loop daa and ret jl jns mov cmc loopne cli push mov adc pop sbb xor incl or repnz adc dec xchg and in sbb shr adc lret in adc inc inc add add lds (bad) repz test lret or out iret outsl push (bad) xchg xor std stos pop lods cwtl push mov push mov cmp es in push scas pop sbb sbb jns stc pop push lahf adc xor inc add adc pop hlt lahf (bad) jbe mov fldl lock adc mov fwait xchg add jne adc sbb call subb out les inc mov jns adc sub (bad) insl xor lods sub daa daa outsl in jmp addr16 rclb jge jno pop xchg in (bad) int3 add mov dec (bad) push add hlt sti rcll cmp adc ja xor jne adc mov (bad) push outsl (bad) psrld mov stos and nop out daa mov pop (bad) cmp and inc xor dec or (bad) xchg mov cmp add sub popa add lods in test ret jle cmp repz das cld add adc shl push setno adc jns cmp xchg adc (bad) lock das xor xchg and aam xlat std or xchg mov jbe mov jne xchg pusha adc cs std adc cmp sub xchg scas popa push dec and outsl cmpsl sbbl adc or inc mov lret repz cmp repz dec xchg or or hlt mov lea or adc aaa xor nop mov lods xor scas test cmpsb jne flds and mov enter mov inc xor add data16 pop add ljmp adcl pushf sarb xchg int3 sbb fwait jmp adc (bad) inc pop cmc (bad) mov pop in ds or or popf push jo mov mov cmc adc aas sub mov xor jae adc push cmp xchg push sub xchg adc xor fist lahf test inc push scas xor fwait push pop nop cwtl jnp push jns push adc xchg sub lret call mov fs daa xorl repz loopne adc insl mov mov or and adc push and push scas xor fisttpl (bad) repz pusha inc (bad) or sub mov add adc pop xchg adc jle push xchg adc pushf repz mov push dec xchg inc ljmp dec and dec mov popf jecxz adc adc les inc mov or cmp adc aaa add orb sub and test xchg in pop add mov mov fstpt fild mov pop push xor pop cmp cwtl jo jno jne add inc push inc adc sarb xor jbe sahf into sbb cmp fwait adc in clc je (bad) bnd push pop adc push jno xor out cmp stos adc mov adc lds add cmpsb cmpsl mov imul dec data16 and inc dec repz sub repz pop or push (bad) or bound testl mov add jnp jb lock add mov pop es outsb (bad) mov or jmp ds or jns adc and bound ret xor in inc popa add loopne adc scas sbb push (bad) adc fistpll add mov or (bad) lea adc add push rclb xor sbb out mov rclb xchg jl push lcall cmc insl xchg xchg (bad) mov mov adc ja xchg hlt hlt xchg add mov xor in test adc fcoml popf pop sbb adc movsl push dec push pop rcll inc xor add es hlt popa loop js inc adc and pushf out shll dec or ret mov or lcall stos dec and sbb push fisttpll adc and xchg inc adc push (bad) cmp xchg adc push dec adc inc or sub insl adc (bad) bound push mov movsb jge adc adc adc leave inc sub adc test push test (bad) jmp add mov ljmp rcrb xchg pop adc ljmp add repz or xor ja mov adc jg xorl adc mov (bad) mov (bad) mov nop pop adc fcoml mov adc mov lods push cmp sbb pushf cmc adc clc push adc add adc insb test mov in pop inc pop xor flds fs add popa out ret outsb mov test xorl adc repz lods fmull and adc mov push push mov loope inc aaa cmp adc sti sbb fcoms es imulb int3 inc mov push push int3 pop lea test scas lds inc sbb inc adc loopne enter lea or js and xchg in aad mov xchg adcb push and dec sub add test mov pop nop std sbb ss cmp dec shlb adc mov int adc je adc xor ja cld sarl ret jb or or les xchg test cmp pop xor adc lcall xchg test adc sub xchg in (bad) pop repz fmul lahf dec incl adc adc dec adc push das ja sbb adc les ret dec jno arpl stos insl push cmp push mov rolb ficomp mov mov nop xchg lods repz xor mov mov add int sub cli sbb adc push into clc mov rolb loope inc inc mov pop adc and push test popa js and fldenv adc xor pop cmp sbb mov test xchg jno push xchg in sbb sbb dec adc push enter pop or std nop mov xlat dec xor lock les push or popf xor jae adc int3 adc lret mov mov fsts push imul jnp mov adc xchg adc cs push or dec pop insl adc and (bad) dec int3 sub ret jbe adc pop adc sbb jb fidiv mov add push in push (bad) mov add and cmp inc cwtl in int out push popa adc adc orl adc push xchg arpl subl das dec inc scas pop les hlt mov lods roll push xlat xchg icebp adc aas jnp popf fnstsw xor into push iret cmp adc sbb repz mov mov pop mov aam mov pop add pushf push push enter dec sbb gs psllw mov pop push push aad xor je push repnz fisubrl ret pop mov xor test lods push bound mov shll add adc push das jle xchg or dec push imul mov mov cmc inc inc test in sbb enter push or dec push or std pop adc push adc xor adc mov jbe sbb add mov mov imul jecxz lret xor sti leave cli loop and int3 inc mov ret and loope cmp inc jae add mov andb lea and add dec adc xchg jo adc gs mov fdivrl add lock or nop idivb cmp xlat cmc mov or adc pusha shlb jbe fadds cmp mov xchg cmc sub dec mov adc xor jo sahf jb repz in inc sbb repz iret inc and adc out shlb ret adcl fs es adc add enter push and dec adc bound das cwtl adcl dec dec imul adc into stc dec adc jno hlt cmp jo adc push dec push insl adc imulb adc inc lret leave bound mov pop (bad) fsubrs cmp xchg jmp orl xor gs xchg xchg sbb and loope inc and (bad) dec fsts ds adc pand or adc cli cmp jns ret sbbl insb xchg cs nop sti fbstp xchg push push and dec cmp js and fcoms aaa cmp adc push lret cmp fcoms cli mov xor aam adc xchg adc push test lcall cltd imul insl js adc lcall adc xor jle xchg loope mov dec sbb popa dec add and imul into insb lea adc xor std (bad) mov rcrb adc pusha dec mov enter pand xchg add inc push adc pop add inc xor add testb int adc es jecxz rep mov push sbb mov xchg cmc jl add adc sbbb das xor inc pop mov cmp mov adc repnz icebp and repnz mov push ja mov movsl xor add fwait sti xchg adc mov xor adc dec xor loope sub sub sub mov dec rorl adc jecxz (bad) push outsl dec les ret pop adc xchg dec mov das mov in aas lods mov lods or andb sub test inc xchg add adc mov or sti sub nop int dec add hlt daa xor dec adc scas add xor lahf mov xchg cmpsb jb fistl inc daa inc lods and add js inc mov ret lahf dec js mov stos inc mov aas bound adc sub insl clc xlat jp xor jno and xchg jmp adc jnp sahf stc je xor dec push das xor pop inc mov adc xor dec ljmp pop adc sbb mov cld cltd adc or xor mov iret scas les mov nop cmpl push mov and inc adc psrlq int push xchg adc imulb fdivl outsb ret cs or mov jno xor cltd in lcall lods icebp dec xchg push ljmp mov adc and loop cld mov and icebp sub repz add leave and or bound push add rorl sub pop inc adc pop jnp fcomi sbb jl cmp ss sbb adc mov jae je push adc xchg adc ja dec pop adc xchg mov mov sbb adc repnz xor adc push data16 cmpsb fidivrl jnp push adc cmp fnstcw int cwtl jmp outsb aaa popa pop adc adc les rcll sbb push fsub xchg xchg daa or scas xor in (bad) add or sbb stc sub es orl adc mov push lds sbb jge pop lds add mov pusha adc aaa es inc orb add mov adc out js mov loop ljmp push ret xchg pop jg adc adc test dec ret and xchg pop repz mov stc adc mov std xchg repz stos (bad) inc cmp or pop lea sbb xchg jno mov sbb pushf cwtl xchg aam sub rcll in cmp cwtl notb psubusw mov test adc cld mov aam lock xchg push push adc dec lcall addl mov rclb loope cmp roll mov push adc movsl scas inc outsl adc sub dec xchg and adc imul lods jg adc nop inc push and sarl xchg push jno (bad) jbe push add dec loopne or add and mov cwtl in inc jnp adc fs or (bad) adc lret call pop xor push add in inc imul in cmpsl sbb jge xchg insb (bad) sub cld adc adc xchg jb popf cmp sbb pop loope scas xor xchg pop push cmp jo pop or or push (bad) mov add and adc mov jne adc cmp int sub push add aas mov adc sbb adc push rcll shrb jecxz pusha adc push mov xchg inc mov dec pop mov adc pop xchg jge fwait sub sbb rcll into xchg add movsl jbe adc xchg push pop jae push rclb xor std add mov pop inc add add adc sbb (bad) xchg repz mov adc xor adc cmp xor mov adc xchg aad roll xchg repz push adc jne lahf jl or or adc mov fcmovnu aad or mov lahf fcoms jl or test (bad) jno out in mov jns repz mov pushf cmpsl mov insl test xchg lods dec or dec xchg push and mov imul dec loope scas and mov and sub jo add jbe je push mov xchg adc stos dec test cmpsb jne data16 and add sbb sbb jns pushf rcl sti stos mov lret adc fs loop adc fidivr inc pop jmp mov imul pop inc les sub or stos mov mov xchg add xor fistpll mov pop add test ljmp xchg xchg sbb xor xchg jno adc shlb je fistpl aas pop xchg push push daa adc add jb sbb push pop sbb icebp test push inc push add sti sub ret adc sarl or mov jb adc dec or adc dec cmp outsb adc sub sub and inc dec cmpsb or cmp adc adc ds rcrb xchg je push cwtl js cmc test (bad) xchg jl or test and and or call addr16 iret mov arpl fs in les rep push ret sub adc add jge jecxz (bad) std add xor mov cmp mov cmp adc ss dec notb imul es frstor adc pop add ss mov add xor push xor idivl mov push or inc cmc pusha mov dec mov jecxz and mov fsubl sbb ja aaa loope adc stos or inc ret and iret xor add push adc popf adc pop sarb mov or pop mov shrl dec retw xor in je cs rol adc mov adc adc lcall adc repz rorl xor push add and gs (bad) shrl inc mov jl xchg jmp rcll (bad) xchg xchg leave rorb out pop loope pop sub pop repnz jl cmp mov add sub mov push or test mov xchg xor pop cwtl jbe add jge xor pop cs push adc repz dec subb test adc jg ds fistp pop stc mov mov and jl xchg sbb mov xor repz xchg dec sbb mov xor decl xchg aaa xchg adc push and push enter xor loope pop rcll std (bad) adc adc fwait pop out ss je add bound adc inc and sub sbb fnsave js push mulb push pusha test and pop push xchg scas adc jl sbb xchg adcl xor jecxz and mov (bad) je,pt fistl xor add jmp add mov seto mov or adc bound loopne adc gs (bad) jle push cmpxchg lahf mov push insb or movsl (bad) adc push xor pop xor pop arpl adc adc aaa push pop xchg stos push add fs adc rcll push xlat aam pop adc data16 mov add ficoml sbb push or push xor push and fnstenv adc adc fimul sahf insl hlt adc inc repz cwtl shlb int jecxz and inc mov adc adc out add bound dec inc imul bound push or aad cwtl or mov push xor ds (bad) adc xchg sbb jne popf sbb cltd std ret jge mov mov shl je push cmp cmp dec adc pop xchg push dec xor mov xor adc push xchg adc push jp dec je add mov lret repz inc (bad) or out psubq inc ja dec mov test mov je mov dec lcall push (bad) or repz and inc cmp cmp fcoms sub iret sbb inc sbb outsl pusha lea mov mov add xor adc enter inc or add or test cmp mov adc adc andl rolb fsubrl pop dec jnp dec cmp sub add adc add cmp rcl adc nop mov mov dec adc movlps sbb call xlat jg mov xchg push mov push xor cmp push xor cltd mov pop adcb mov jecxz addl insl mov mov sbb rorb popf dec pop mov in test aaa dec or push sub adc xor outsb push popf dec or sbbl push (bad) in mov rorb add sbb push xchg sti jp xor xchg sbb mov sbb push adc and adc add repz fwait js adc mov out popa lret cmp hlt repz (bad) test je mov adc seta xchg sti mov adc pop cmp cld and (bad) addr16 mov popl adc mov sahf dec adc mov mov cmp mov fs xorb pop sub into cwtl repnz jle and adc es push pop lock mull repz xchg jle push mov lods lock xor out and adc daa lods lret sbb push pusha (bad) mov shr adc push jecxz jecxz push loope shrb aam pop inc popf add out add bound inc jg aas jecxz adc sbb pop aad cmp and mov jne xchg adc cmp pop adc mov pop leave adc and fcoml push xor mov adc lods ficompl pop lock push sub push subl adc stos add mov shrb xor add int3 js inc pop daa dec dec cmp pop adc sbb adc call test popa push fsts ret (bad) es movsb jae movsl jbe push adc adc sbb inc jg mov (bad) xchg inc mov push test daa lds cltd inc pop xchg and push (bad) mov add xchg jmp test into push sub mov dec xchg or sub add in nop daa scas mull adc jecxz dec xchg insl cmp adc jo fdivrs pop hlt sbb xor loope adc and adc mov push add cmp mov jne xchg pop push pop outsl adc stos mov jno cltd or popf in fildll mov adc je mov (bad) xor cmp push and xor push sub push iret xchg daa loope xchg imul push (bad) outsl inc shrb and cmpsl mov sar inc push cmpl outsb add bound dec adc sub and mov aad cmp adc mov push cmp aas (bad) shlb xchg adc or (bad) dec jecxz mov cmpsl in fwait mov cmc je jnp mov sub (bad) or and sub pop sub xor fisub adc xchg outsl cli daa mov aad jnp cmp pop std fdivs das mov jl cmp sbb fsubs adc sti pop push ja xor dec mov and adc jne adc mov jbe mov add fbld (bad) xor mov add cwtl adc adc addr16 rolb bound mov pop sti adc sbbl adc jecxz mov out sub daa sbb or cmp cmpsl stos out and push mov xor lock adc je movsb push add push aas icebp cmp mov shrl jno adc adc movsl push mov ret repz adc cmp jmp imul pop test data16 adc mov push cmp mov into mov aad jg (bad) and out cmpsb repz mov popf adc divl imulb bnd push add push push arpl adc aaa pop pop mov adc adc push or movsl mov mov adc fidiv mov jne pusha (bad) mov xchg cwtl mov addl sbbb xchg cmp xor xor cmp dec mov jae ret adc sub stos adc insl (bad) mov imul pushf adc xlat and outsb inc add mov xor jg fwait in adc movsb enter jecxz push and and ds adc sbb mov cmp add pop cld jecxz jmp sbb (bad) out and outsb add clc sti repz cmc (bad) push or enter mov fist jne push adc xor outsl hlt enter push or bound adc (bad) mov rclb adc stc test add je xchg test lods fsubr fist add in jecxz int push or (bad) insb pop dec fwait adc mov test xor sub test push mov jne aad std mov push repz cltd (bad) fist adc mov (bad) adc imul es les fwait adc xor out lods mov inc add adc mov xchg in iret adc adc push sbb mov ficom popf jp pop xchg push mov addr16 adc cmp xor mov push xchg mov cmc (bad) xlat lea shlb sbb aam sbb jl fsubl mov adc inc aaa addr16 sbb cmp jns mov xchg push pop jnp fwait cs jb adc xlat mov xchg adc or jo cmp rolb daa sbb rep or dec lret pop adc (bad) adc cli stos stc sub int3 adc jne bound ljmp xorl adc pop adc jno std push lods xor pop stos (bad) addr16 push mov int3 and adc bound aas add (bad) pop adc xor mov (bad) cmp inc pop adc loop mov jecxz mov pop cwtl adc mov divb nop cmpl adc adc std jno lcall add dec xor fwait scas stc scas cmp pop lahf add xor jb push nop outsb mov xor push inc jno xor and or add adc add mov pop adc sub mov or adc inc jb rcrl scas lret dec (bad) in jae mov xor es adc xchg pop xor mov xor adc push (bad) push or cmpsb dec bound add or adc in cmp mov into and out inc (bad) loope leave in into jge pop pop mov sahf mov test jns pop inc adc inc xchg popa repz cmp pop mov (bad) or test adc sbb aaa or dec rolb inc je fisttpl ss xor fwait in mov je sub loop pop into js inc mov inc mov jns cmp xor test les adc data16 in stos stos cmp jb ds cmpxchg sub pushf lods js fs add loopne ljmp ficoml xor je fisttpl movlps int3 scas movsl push sub mov adc movsl repnz mov jp fucom pushf into xchg lea or mov adc pusha aam icebp scas adc push add adc in int3 arpl (bad) adc pop or xchg sub adc repz ficompl cwtl adc or or xchg xchg pop adc xor repnz adc add add cmp xchg ficom pop xchg jbe adc adc test lahf insl adc sbb sbb push push mov nop xor das insb scas pop mov outsl adcl mov mov sti test xlat inc adc gs add and outsl xchg in enter adc xor jnp sbb ret push or adc pusha adc or xchg rolb xor out adc and pop hlt cmpsb repz outsb xor out fs inc mov mov mov lea mov adc daa jmp (bad) notl pop adc in mov ja push adc shrb dec add insl in pop inc pop mov fist cmp rclb (bad) aam fwait pop jge adc mov adc sbb adc adc pop pop pushf std outsb adc (bad) adc adc xor dec push adc push adc mov xor adc add popf jb push out adc mov jae sbb adc add dec push test xorl lret inc add inc push mov xchg ret adc adc adc jnp movlps xor inc das aaa sub pop dec adc add cli mov les pop xchg fs adc sbb cmp pop aaa dec push lods xor (bad) xor add mov into (bad) jg push loope and xchg inc adc mov sbb pop add clc and imul jl pop pop and jno int scas rorb cmpsb adc lcall xor xchg push insb loop dec adc adc ds fdiv pop adc repnz xor sbb adc mov push mov xchg cs scas (bad) add dec adc aas adcl xchg out jcxz sbb cmc sarb pop mov xor dec adc dec sub or ljmp and insb adc std xlat mov rorb and inc cmp jecxz or add xchg data16 and add sbb movsb xchg adc adc mov rolb xchg adc add mov mov not (bad) xor imul sti stos pop rorb or add jb adc push xor jne xlat jbe adc (bad) push incl pop xor test push jl cmp adc or push adc cs int3 pop or movsl pop adc popf xchg push pop ss test imul test push into xchg dec sbb pop les sbb mov daa daa adc xchg gs and xchg fdecstp mov push aam rcrl mov sub jne mov adc inc popl add lea add and add in and inc imul sub adc sar jnp mov imul jecxz or into cmp lock or pop xlat adcb insl je jae xchg ret adc mov (bad) jo xlat ss adc xor repz mov mov adc jl mov mov mov jecxz adcl adc adc in aas and add repnz aaa daa push adc call stos lcall (bad) out arpl dec add adc mov xchg jo cmp hlt pop add jae adc push jl je leavew and adc test and adc xchg repz adc mov pop test jmp out mov fist ljmp adc xor jmp mov push fcoms push fcoml insb aam or jp xor aad push add jno mov ljmp les xor adc add adc xchg (bad) repz mov mov adc stos cmpsl scas les fldl pop test popf adc adc sub out hlt das xor aam adc dec adc cmc cmpsl rol add jno (bad) pop jne mov lock pop pop rcrb in add adc add and fsts inc sbb mov push outsl bound mov pop or adc pop sub jb add add orl lcall xor rcll sbb mov into sbb pop in adc jl jecxz adc pop mov jmp dec sti cmp arpl decl inc dec cltd pop lock adc push pop adc ja xor cmp or fsts mov in movsl lods js mov sub mov mov push mov (bad) adc sbb repz jmp pop adc add cmp adc mov push and adc aas icebp mov xor xchg repnz pop adc mov add lret dec or mov mov pop inc adc lds je push loop das lret ret bound xchg daa mov adc mov orl lret inc push das or xchg add adc hlt xchg pop mov xchg (bad) icebp or or fsts lods fadds push mov jg adc and adc pop adc rcll popa sbb sar das xor adc loop repnz sbb cmpsb xchg daa popa js or and in inc test lret xchg int3 rcrl data16 ljmp dec rcl jge cmp test out mov push push les ret sub adc xchg aas stos add adc cmc mov xchg mov pop aam cmp mov push adc sub dec adc hlt and and bound mov out adc call push sbb jne fnstcw into xor pusha sbb inc (bad) mov gs arpl test loopne adc push (bad) push out or pop adc repz scas pop mov rorb (bad) stos call or insl jbe lea movsb jne adc sahf jle jne std add rcll dec adc idiv das shll push daa sarb inc pop mov movsb adcb pop es mov out lods mov mov (bad) sarb pop pusha ja cli mov movl (bad) les insb push pop lret cmp adc cmp adc lahf or mov adc cmp mov hlt mov push xchg or adc fstl inc (bad) cmp xlat das mov repnz popa sbb adc aam fstpt xor outsb mov fwait jmp repz lds es inc push adc lds push mov iret ljmp pusha aad sub dec xor inc sub adc mov icebp stos out adc mov cmp icebp push rcll dec adc cwtl mov adc sub or out mov and das push out mov mov mov add xchg cmp (bad) rolb push sub out sub insb push jecxz in jns cmp (bad) mov fcoml xor push daa sbb adc cmc fwait xchg divl fnsave rol mov mov xchg ficompl inc adc test and repnz xor adc and bound cmpsb and push add or pop jbe (bad) xor push outsl gs lret (bad) mov imul sbb fmull dec ret sub adc xchg fidivrl (bad) ficoml sub testb push and sbb add and inc adc repnz es mov out push adc add inc ret aad mov adc jmp xorl ljmp dec jle incl fstl (bad) adc pop xchg sarl adc sti lods (bad) idiv push jns adc push adcb xchg add cld adc lahf jl mov xlat je push out movsb push adc adc fsts adc outsb xor adcl push insl orl arpl nop in sbb cmp orl les xchg in stos repz jo push pusha imul aam push and ljmp les shrl icebp dec xchg out je repnz jnp adc lret je test xor pusha test sbb xchg add cmpsb pop adc test hlt bound adc add push or adcl out in xchg test pop enter cmp push cwtl sbb jb adc add (bad) lret nop adc adc xchg in clc cli adc pop rclb (bad) xlat xor (bad) dec adc mov hlt loope popa bound adc sub test sbb icebp fwait jb jae xor mov push inc xor adc add cmpsl fs inc flds int jecxz mov mov ljmp lods loop mov dec insb push or ja cmp cmp add notl repz hlt je push outsl push inc out adc movsl jmp (bad) daa push cmpsb inc sbbb lcall jp (bad) and (bad) popl mov mov adc orl stos and push mov adc xchg cmp pop or push jp xor or mov jns cmp cld cmp xchg ret jge adc push xchg adc repz aam push std xchg cwtl cmc aas mov lock jl adc xor mov out loopne orl imul xor and push push sbb in and xor sub adc ret cmp pushf cmp iret lret ret xchg dec add addr16 repz int3 jo pop adc repz iret mov jne inc adc xor outsl in xor addr16 and jnp sbb rolb pop adc leave mov nop js aas jecxz xchg dec mov dec rclb sub lods int3 out iret add pop in jecxz int pop adc ficoml mov xchg imul add add mov lea cmp push xchg repz pop pusha lea mov inc jnp cmp and adc jg add jae mov in les insl push xor je xor ds push cmp sbb mov and adc test daa adc mov adcl or loope ss adc add cli sub cmp pop adc ss cmp mov mov jp mov (bad) xor xchg add test pusha push pop push ret (bad) loope leave in loop inc movb rcr and inc xchg out leave adc push inc xchg mov or fisubl mov inc xchg add inc pop adc mov (bad) fistl pop pusha adc aas mov aam sbb fs (bad) sbb jns adc push xchg xor xchg and inc cmp aas adc cmp adc jbe adc cwtl movsl fistl adc divb push rclb rolb push mov push (bad) or xchg add sbb orl cwtl adc push (bad) aas dec push scas add scas xchg sub iret xchg or sub dec sti adc push adc sub repnz or cmp sti adc xor dec adc sub cmp and lret mov inc push js add repz adc ret mov xor push or push aam roll pop jbe pop or sti mov push test adc jp dec adc pusha lret jmp (bad) adc sar cs (bad) sbb adc jmp int in mov push pop mov xchg stos mov adc fidiv mov pop lcall push (bad) cmp fisttp pop repz adc sub enter mov xchg push adc sub mov je cwtl in adc xor fmul adc jp add adc adc test or mov iret add adc pop rcrb (bad) xor in adc movsb (bad) out dec insl adc dec (bad) repz adc lret inc mov add xchg loopne out jl xchg sub mull lea pop add mov les jbe push daa mov popa outsl adc xchg daa xchg mov orb mov or adc lret adc sub adc (bad) ds (bad) repz stos aad sti dec jns adc fsubs mov pop lea xor sbb xchg (bad) je dec hlt cs adc jno inc push mov xchg push adc insb xor cld add push or cmp sti adc xor (bad) mov ret sub popa (bad) add ret iret adc cmp pop jmp mov xchg and xor mov mov je adc push mov xor lea adc adc jns add pushf rcrb je mov enter adc mov xchg inc repnz mull pop add dec adcl int gs imul mov add ds jl fidiv inc adc jmp inc jns cmp mov jb adc mov scas sbb aad repz mov jmp aam adc mov divl scas xor cmp push sub orb sub jecxz and adc movsb scas xrelease xchg adc adc loopne add lret dec or dec push pop imul add pop (bad) add push (bad) mov scas pop adc cmp mov pop add leave pop adc scas rol popl in and (bad) (bad) adc test aaa test add adc arpl lds fisttpll pop mov leave rcll adc mov adc push inc xchg imul (bad) jl ficoml jb push pop stc push push jne ljmp add adc fnsave adc test push sbb adc mov jmp sub push push mov adc outsl lods dec lret insb (bad) repz pop (bad) sbb xchg add push out repz es rorl int or inc jge push mov icebp call jp adc (bad) aaa cmpsb push xchg inc mov adc (bad) insl xor and es adc mov add xchg mov xlat adcl imul sbb pop int mov pop fist xchg sbb adc repnz and xchg cmc jne jb or rorb jp xor (bad) in xchg mov mov mov fcompl or push (bad) adc and add add add add in adc adc test push mov dec shrl sub notl adc jl sbb scas repz call dec sub rcrb mov push add (bad) cmp rclb dec nop in xor addr16 inc jge adc test adc cmp adc or adc lea (bad) lds inc xor mov sub imul add movsl mov daa inc fist push add push adc mov xchg repz cltd cmp cmp pop push cmp xchg add sbb xchg cmp adc sub mov lret push xchg (bad) jae divb fisubrl (bad) push dec or push push inc jno aaa dec xchg popa mov adc or ss add push push repnz mov mov notl sub sbb mov adc jle adc adc dec mov or bound cvtpi2ps adc xchg adc cmpsl xchg and inc adc not sbb xchg jno push xor push sti daa mov mov (bad) xlat outsl js xor bound ret inc add repz pop gs and add inc int3 and lret data16 push xor sbb ffreep sub inc add xchg movsl mov add sarb mov sbb std jns mov adc mov sbb add adc lock aad jge aas aaa push nop std cmp fsts sub sub (bad) xor mov fs dec add xor imul sub mov sub mov movsl or adc sub call pop iret xchg gs and sub adc mov aad adc cmp mov pop pop sbb add xchg jmp push adc std jae mov aas (bad) ss fstl or xchg dec push das mov and adc xchg aas divb lock fisubl flds and adc adc and pusha in cmpsb pop lret popf gs pop and jge adc (bad) mov bound push enter xchg loop jns adc cmp fdivs jmp inc test or add sbb inc sbb pop inc jnp inc adc call pop popa jo adcl vucomiss pusha dec push or adc adc jge (bad) ficom je mov cmp pop adc pop xchg inc dec and mov pop loop adc aas add jno mov cmpsl rol popa addl (bad) add adc imul push push leave inc and adc popa mov ret jle adc repz pop add xor movsb xchg in add adc xchg xchg push jb cmpsb ja pop adc aad sbb sub push sbb fwait xchg jb sbb adc push vmread addr16 dec jmp test out mov adc stos push rolb add add bound in adc ret xlat push dec loope adc lods jge add pop ja push adc jecxz mov rcll and je xor ja pop adc iret adc cs pop add andl nop push mov mov mov push mov outsb adc pushf mov xchg rolb imul lea outsl (bad) sbb test dec pop push or adc jbe adc xor loop popf pop pushf adc mov adc mov sarb xchg push adc sbb jg sti adc and xchg inc je xor repz adc mov xor repz adc sbb scas mov jno dec insb repnz adc adc inc jmp popa fnstsw adc in scas dec dec pop pop bound lods adc dec push dec adc adc jl sbb and push addr16 mov jae sbb adc ret mov aam xchg pop outsb pop adc sbb sub inc jbe xor ja pop adc lret pop add push aad adc mov adc add jmp inc andb push (bad) jg adc pop mov mov xchg adc stc cmp jle (bad) bound dec jnp jge add push adc xor ret jae adc xor imul aas xlat (bad) ss mov mov insb push or adc fnstsw mov incl (bad) (bad) pusha xor fs adc or or cmpsb cmpsl add rcll addr16 aad cmp adc or mov dec xchg rorb shrl dec (bad) jmp lods ret imul push imul repz xchg xchg jp aaa mov nop xor dec xchg adc or (bad) jl mov mov or and ds jp mov mov mov xchg adc inc adc adc and arpl sub (bad) sub add and pop add add dec fmull nop jnp pop cmp pop cmc pop stos notl xor inc adc dec xchg imul adc je push adc outsl push das icebp imul xchg adc mov push mov adc ret mov mov xor pop hlt adc add imul dec test data16 add enter adcl (bad) mov sbb mov imull insl cli stos stc lods mov jmp xor (bad) adc ret pop mov sahf adc jnp mov adc push aas je adc lock ja shrl dec adc (bad) movsl mov sbb adc inc mov sbb push (bad) xchg popl adc sub test adc pop lds jmp pop or dec loop (bad) add adc adc cmpl in mov in sarl repz fidivr mov or push cmp aaa fidiv not jbe push add daa jne adc repz mov xor adc sbb in add xor orl inc lods faddl sbb cmp xor shr fldl adc cs into add pop or adc mov jns stc mov sbb cmpsb adc dec xchg jmp add adc and adc adc sbb cmp fcoms sbb dec adc mov xchg push (bad) push cmp cmp nop pop pop xchg adc jge sti stos shll xchg add lret pop pop lcall mov roll xor add adc jbe push adc jge cltd xor adc mov orl cwtl mov xchg add add add xor or mov hlt dec adc (bad) sbb dec xchg scas rep out imul ret test xchg xlat push adc cwtl sti adc hlt into mov xchg jecxz inc adc jl inc sbb xor ja (bad) mov popl adc jmp rclb lret dec sub jmp add pop adc or repz adc (bad) mov mov adc or xchg aad adc jge mov (bad) jne adc fisubl std insl adc sub dec and test add sbb sub lret xchg insb fstl lret xor cmp adc into jno adc inc jecxz enter jle adc mov adc mov ret adc insl inc or and adc (bad) jo iret mov inc add push adc mov cmp fcoml xor pop rcl sub sbb or in adc adc xchg cmp adc nop mov repnz push adc mov push xchg stos cli jmp je fnstenv push jnp cmp mov cwtl out cmp in repz insl inc ret fstl or lea ljmp adc pop sub lods clc lods loop dec orl adc adc mov lds pop clc repnz xor fnsave loope adc dec aam cmp adc mov loope out adc cltd inc jb sbb lock pop (bad) and inc adc xlat push js mov xchg xor jp sub je je mov adc xchg fisttp sub enter xor in lods add push inc adc ljmp push sbb pop pop bnd cmp sbb pop int3 (bad) cmp clc mov je mov adc mov and pop adc add pop loop pop push fwait xlat cmc jns mov shl je adc mov or adc add lods in roll sub dec test add repz or call (bad) inc adc outsb cltd xor lods cmpsl in and jne xchg loope jnp adc push cmp adc cmp add lcall cmp pop rcrl push repz (bad) ja sarb xchg daa mov out dec adc push lahf mov in ljmp pop adc and push mov add add add xor adc lea adc sub addl and adc push and adc xchg push (bad) xor adc test jno mov ljmp les and jl adc adc jecxz mov adc dec push add loope test fcoms pop lods pop adc cmp (bad) pop (bad) hlt sub cmp insb stc inc xchg adc sbb xchg int3 cltd adc push mov mov sbb rcl jb hlt push xchg mov pop pop sbb lods mov inc adc rcrl jl sbb hlt rcr ja mov push test add adc addl jmp cli xor mov ljmp movsl adc mov and adcl aaa cmpsb xchg and adc sub (bad) and repz mov push (bad) adc fwait loope adc and inc test jle sub es sbb mov push adc mov xor xor push ret pop pop or push adc xor push push pop jb and adc cmp std push xchg jbe adc push or mull xor push xchg sahf xchg push (bad) xor stos cwtl sub jns cmp out and mov ret shrb adc lret pop lcall mov push int3 ds (bad) mov lea (bad) jae insb scas sub adc cmpsb rorb jae nop inc pop cmp pop add jno xor xor push rorb les je cmpsl mov icebp movsl hlt lret adc call and sarl data16 lods mov add add and mov jno movsb jecxz fwait push aad mov insb jne and mov (bad) shr xlat leave push adc (bad) rolb rcrl sbb xchg sbb xor mov sbb mov cmp lcall adc mov fistl xor xor xor repz cmp jmp or push adc popf adc repz inc mov inc cmp lock adc add test cmpb pop movsl xor push les dec or or mov mov je mov test push call adc cmpsl sbbl mov pop repz mov or xchg (bad) repnz cmpsl pusha adc mov add jp pusha nop lea push arpl lret push jmp (bad) mov in aam scas fcmovne fisubr fucomip adc in add sbb adc inc fiadd adc sbb (bad) hlt sti xchg adc sbb mov inc dec outsb (bad) xor mov cmp adc cmp cmpsb adc mov inc sbb adc push je hlt aaa mov add test dec push lock adc push out aam sti adc sahf xor nop outsl xor aas and cmp out mov jecxz lcall shrl lods adc fsubrp (bad) mov sub adcl and aaa test das sbb in mov sub enter adc pop and mov in cmp jp std sbb xchg sti js cmpsb jmp jl inc sub inc sub mov jns aas js inc cmp fisttpl mov nop sub and and and sub fisttpll adc jecxz dec sub inc xor sbb adc fidivr adc xchg mov cmp pop sbb add xor mov adc faddp mov adc mov xchg decl jg pushf adc arpl bound mov sahf insl jne mov xor push hlt adc rcll nop add jno lcall xchg insl pusha inc or add push add stos jns jl add mov inc adc dec (bad) push mov lods call fwait adc sbb and dec add add lea adc mov and in jp mov mov lock or adc cmp sub or pop sub cmpsl cmpsb and adc pop mov and das mov add mov mov mull inc sub add shr xchg cmc adc test mov clc sbb (bad) xchg mov mov je xchg andl add sbb data16 (bad) pushf add mov sub mov aad stos jg add adc cmp cmc mov xor enter add sbbl out movsb adc into inc lds sar mov xor push xchg inc and jmp insb cmc adc fisubrl adc fild or test sub jmp push adc xor xchg add adc xchg adc es sub insb inc addb les adc loop (bad) arpl repnz mov add add ret bound bound or (bad) popf int3 mov push nop gs rorl les push sbb mov jnp ficoml clc mov arpl inc cli (bad) pop add (bad) xor cmp iret adc mov das ds adc ss push push or cs adc push push dec cmp push xor sahf mov daa bound out ret add adc cwtl arpl xor (bad) pop sub mov imulb scas adc dec popf add mov lret sub lea xchg dec push inc jns adc push aam (bad) ds jb repz repnz add adc (bad) stos sbb push xchg inc inc adc in les in mov inc repnz push and mov mov mov mov xchg and in data16 shlb or sbb xchg and cmp adc repz mov call rcll lds daa jo jge repnz mov mov adc push lret fistl xor add push hlt or maskmovq out xor or nop push adc inc daa ror adc add stos and jns xchg or push insl mov js adc push sete outsb cwtl sub repnz mov adc inc cwtl add pop add push mov fnstenv adc jge repnz adc dec pusha inc adc sbb adc test daa push loopne arpl outsb mov andl mov mov mov repz dec push dec add sbb les jne xchg push cmp sti adcb xchg lcall cli jl sbb cmp adc inc mov sbb sbb xchg adc ja ds das pop and xchg adc pop xchg aam push icebp cmc adc repz iret aas ss xchg mov adc repz jns popf or ret mov xchg add test (bad) mov sbb xchg dec pop adc or xchg test leave mov xor and dec xchg jno sub nop adcl popa adc mov jge (bad) ss jbe sbb sbb scas pop cmpsl jne mov into and inc adc xorl shlb (bad) mov or add mov adc sub add inc push mov push add add cwtl mov mov rcll jp mov or xchg iret cltd adc cmp adc cmp push ja and (bad) dec adc sub fcompl sbb (bad) cmc (bad) repz nop leave mov cmp adc cmp push sti lahf sbb pop cmp jno mov repnz add bound dec cs inc xor adc xchg (bad) push in out repnz jmp insb call adc or push bound popa add lcall xchg inc adc cli xor not cmp or xchg adc mov xor xorl int adc cs mov lcall mov mov lret xor mov jg adc mov das das add and and ds ja jns jp repz aam mov cmp repnz cmp sub dec cli mov jnp icebp xlat mov adc push mov adc jno sbbl arpl (bad) xor jno mov xor mov (bad) divl arpl push and cmp push add daa adcl lods and adc mov rclb js bound add sub jmp cmpsl lcall mov add popa dec and into sub es das nop mov sbb cwtl icebp jns xchg push jb xchg jbe,pn out pop adc adcb js outsl arpl adc out ret xchg loopne add mov adc int3 xor inc sahf out test dec pop dec movsl dec call js xchg mov pop inc xor movsl mov clc ss pushf pop int3 cmp sbb lcall sbb lsl xor sbb rclb adc addr16 pop aam mov sbb sbb stos or push arpl jecxz int3 xor mov cltd mov adc adc fsubrs daa repnz mov nop adcl pusha dec add sub (bad) cwtl xchg sti xor pop (bad) out mov loope imul pop adc xchg test dec fmull and movsb adc imul int3 dec push dec mov xchg mov add xchg push ds icebp pushf xor xchg and adc daa adc jecxz sub lods test add xchg lret shll cmp add sbb push pushf les (bad) (bad) orl (bad) in sub stos pop mov sbb insb xchg jle cmp adc sbb xchg adc mov push xchg mov adc mov rcrb fwait pop mov pop cmp mov adcb xchg add add repz adc cmp mov mov mov mov mov mov mov (bad) adc xchg push jbe push (bad) xchg adc out out ret std test jbe mov xor lock sub ret jecxz inc addr16 or pop cmp sub push lcall sub sub dec mov aaa inc pop dec fcoms sub test popa enter inc push inc add cltd add movsl jle mov cmp add push jecxz je (bad) ret mov xor add and ret xor setl jmp and enter adc xchg jle xor mov sahf xor pop jecxz mov mov cmp jb add add push xchg add ds negl mov or in fnstcw pop xchg pushl adc adc xchg sbbl dec pop adc mov (bad) cmp push or imul add mov scas sbb and scas arpl add lods popa adc push test adc pop adc xor mov cwtl jno jnp jmp mov ss inc cltd fcmove sbb movsb sbb rep in adc and loope fs adc push movsb rolb and adc sub incb or fbstp add das pop push jb mov mov adc (bad) xchg out adc xchg popf aaa push hlt push xor scas mov mov mov inc adc lcall adc aam push cltd push notb add and xor fpatan xor xchg je cmp hlt mov push lods xor mov adc mov mov cmpsb les adc cmp cs jecxz add adc mulb adc lods jge test (bad) sub ficoml adc aaa in nop pop sbb push push lcall or (bad) push xor in inc mov mov add xor add add cmp mov pushf into das adc scas shlb loopne jge fs test add int3 jmp and pop test aaa nop pop andb into notl ds xlat adc pop cld or add xor sti out pop xchg pop jb mov or scas aam out adc pushf adcl (bad) push fldl adc adc cmp mov icebp xchg adc sbb sbb lock mov and dec orl mov fadds cmc subb dec adc test insb in dec and adc fbld ss add mov fcoms out inc push add cmp xchg pop adc adc mov push das xor (bad) add daa mov mov pop mov outsb mov sub ret push shll add bound pop push adc cmp out repz sbb inc addr16 es mov add dec pop xchg pop adc cmp loopne arpl and adc jp xor pop xchg push xchg cmp jns adc cmp push insb cwtl mov push adc popf push mov ds cmc mov adc fmuls adc cmp shlb lods daa jecxz pop mov clc add and push xor mov push dec or testb nop orb lret add or mov push cmpsl jb push sub fbstp push or xor xor mov lea jp pop push add pop js and pop lcall test pop mov int3 jecxz bound arpl sub xchg or (bad) negl test inc add es mov and dec (bad) xor mov pop sbb jecxz ds cmpsb cmpsb add or repnz lock sbb push je stos (bad) dec xchg pop adc and jecxz adc mov adc dec repz adc adc mov cmp lea nop rorl push sbbl inc inc fimull adc push (bad) jge orl iret mov lret lods sub sub test lcall lods mov pop push iret stos repz and or inc mov jbe sahf xchg pushf xor mov lock dec mov adc data16 mov psrlw sbb sub imul pop adc mov je push or js adc adc notb mov cwtl adc push sub xchg add int3 sti test xchg sbb mov adc xor xchg (bad) lock push aas xor lcall and adc ret (bad) add xchg adc adc das or adc xor popf loope loop jecxz inc pusha dec add out or push sbb mov xlat or or mov rorl push and dec push enter mov outsb add daa inc dec (bad) adc and in stos repz sub or pushf sbb push nop cli sbb mov cmp or xchg rorb test adc add xchg mov pop and push adc adc sub mov add cld push rcll mov test loope pop jle jb adc fcomps push sti cwtl int pop cmp xchg inc mov xor cltd jb jmp adc adc mov sbb push mov or jb pop push xor push add mov adc in jae fistl push adc daa adc lahf add (bad) icebp mov adc dec test shrb and sub xor xchg into mov sbb xor imulb clc add lods and sub mov xchg and adc movsb xchg cmp pop adc repz pushf lahf xor push in sbb xor or inc or sub stos add movsb aas adc xchg pop lcall out inc mov or xchg and mov leave js imul or (bad) decl mov cmc pop aam sbb mov lahf pop inc fcoms sbb cltd dec mov (bad) mov dec fcoml popf adc je aad xor sbb nop aam sbb sub push test mov popf or inc adc (bad) mov pop adc lods repnz dec test mov inc test sbb cmp xor mov xchg and outsb rcll ljmp das add orl insl (bad) xor fsubrs sahf test xor (bad) mov jne cmp push adc cmp adcl out data16 cmpsl imul mov ss sbb sub inc xchg adc sub add adc add ret mov adc js popa and inc jecxz popl and scas adc or push mov adc jbe xor fnstcw (bad) push jl xor sbb cwtl rcrb adc nop cmp push push jb fisubrl xor nop sbb xchg pushf jp jne into adc test sbb cltd mov mov pop int dec nop out adc adcl cmp mov adc bound xchg lods shll dec or cmpsl mulb dec int3 (bad) subl test outsl cmp xor add or adc lods stos adc popa adc repnz dec adc fnstsw xchg xchg push sti fidivl lods adc jbe xor or and (bad) shlb inc out popa jp clc call adc push adc dec ret daa and aaa mov imul dec repz inc cmpsb imul mov cmp mov xchg jno and in int3 dec mov push adc mov mov add test adc adc jle iret dec adc inc adcl adc in mov test xor add (bad) les push stos mov sbb mov loopne arpl inc nop xor mov out std adc sbb ret sbb mov adc xchg dec mov test movsl mov (bad) out adc je jo cwtl lahf aaa xchg push lock xchg pop adc mov inc das mov push inc push adc adc dec cs lds inc add and shrb outsl adc test ljmp stos xor popf push adc cmp (bad) lock sbbb or mov xchg pop int mov xchg js test add andl loop add scas mov sbb adc aas mov gs or and cmpsb mov adc lret adc popf mov adc ss std mov cmpl xchg sti insl pop fdivrs adc je mov push xchg push dec jnp lock jae rcl cmp push jg adc cmp xor push cmp adc sub in mov push add pop inc mov data16 or loopne mov jmp (bad) int sub in mov and xlat test dec push jecxz roll lret adc inc xchg add ds mov repz adc sbb or adc inc xchg adc pop sub (bad) xor xor adc jecxz,pn inc mov arpl (bad) out mov add out iret cmp adc add inc add push sarb adc mov xor repz jo and (bad) mov jle cmp xor adc jbe ss mov dec adc push and clc aam mov nop dec or push adc pop adc (bad) push sbb cmp cmp mov mov mov lock xchg movsb clc adc aaa cs xchg pop scas daa out (bad) into adc dec enter mov dec fimull ret test push sub pusha cmp cltd lahf repnz adc mov jb push adc cmpsl adc lret and sub cmp iret adc daa pop sub lods outsl mov ret ret rcrb adc pop cs imul shlb ret movsb test data16 inc pop cs adc sti sub (bad) ja mov adc std mov xchg or in adc aaa xchg xorb mov shlb push xchg pushf mov repnz and push or pusha jns fstpl fdivrs xlat aas jno pop adc or inc fwait jmp out add stc or push scas frstor in and andb cmp shlb xor and mov push mov adc add xor mov ds xchg xor xor or sub mov movsl and jmp (bad) pop movsb pop pop xchg fist adc jecxz loop mov adc xchg adc add or inc pop adc jle mov or xchg xor jno adc mov mov xor xchg pop xchg loopne divl out push test adc clc ja int repz mov push push xchg lods add inc ja movlps pop xor cmc repz push sbb pop adc cltd int xorl rorb daa inc out adc jecxz mov test adc adc jmp call adc roll push js and insl loope push shrb fwait dec pop push adc movb cmpsl jne adc pop adc adc xchg sbb sbbl push xchg mov popa pop adc mov mov pusha sub dec pop pop stos mov test pop dec add mov ret jge loop adc les mov xlat imul add (bad) xor cmp adc mov cmpsb push adc xor repnz xchg outsb push sub xor xor mov pop push (bad) xchg push rorb sahf mov adc aad adc mov adc outsb cmp loop sub dec int3 and scas add mov inc adc cmpsl mov scas lods test sub mov dec inc and movsl xchg outsb push xlat and rorb lods sub into or xchg inc pop xchg (bad) adc aam xor sbb adc adc adc sub sub xchg adc mov adc es inc sbb repnz orb jmp ss (bad) dec cmp (bad) les js movsb (bad) and rolb sbb ss pop lret sbb pop cli pushf fildl sbb push das jo dec mov or adc fstps idivb adc movsl mov cmp xchg jge jno pop aam hlt je adc adc andl stos mov xchg xor ret cmc mov lods gs mov cs adc (bad) ss adc push and andl xor test ds adc push sub ss popl add cmp adc out or scas in scas addr16 inc sbb sbb xor mov adc push mov mov or xchg and push mov mov cwtl adc jae ds repz adc xor push mov sbb scas mov adc lods outsl add and adc cmp (bad) mov jb pextrw adc sub push or xchg cmp mov sub das bound xchg insb push arpl (bad) repz mov push pop jb prefetcht1 jge mov mov pop inc push lds (bad) mov imul sub loope inc xchg push mov mov adc shrb bound mov xor jbe mov or inc push or mov adc (bad) (bad) repz notl fsubl pop adc dec divl mov push ja mov test (bad) lret ficoml push xchg jne mov cmp loopne xor adc jp into xor adc rolb push cwtl add xor arpl pop cs (bad) adc sub lds adcb mov mov adc adc (bad) jb pop sub xchg in rcl fcoms adc mov push lods xor xchg mov add inc popa leave fs pop cs inc push adc adc cmp mov lret leave sub loope imul fidivr (bad) fsubrl add out adc cmp adc push push sbb stc outsb cmp pop sbb sbb pushf push ret xchg rclb mov ja and mov adc and jne ficoml xchg cmp mov adc dec xor push xor and and adc rclb scas xor push adc cmp je pop outsl out adc insb sub adc cs cmp adc dec sbb nop subb movsl pop (bad) pushf or push ret xor cmpsl rolb xchg xor pop xchg adc cmp push in adc je push mov mov adc dec and loope data16 mov sbb jne cmp mov enter lret call rcl int push adc loopne arpl and cmpsb mov jg sahf repnz jecxz adc pop fistpl adc inc clc loopne psllq out xor mov insb sarl loopne ret sar mov adc pop cmp bound adc ss dec xor dec repnz jno mov xor xchg adc lods mov push jl xor (bad) out (bad) mov xor test push out sbb notl or push dec sub movsb inc pop adc ret xor daa stc adc negl xor aam jno xor lea mov jp mov adc adc adcl mov leave push or or nop adc aam idivl mov inc movsl js inc aaa les rol mov mov stc pop pop sbb sbb loope movsl pop adc sti lods pop adc sbb cmp push hlt adc (bad) insl int3 je loop sub cmpl xchg push xchg adc mov (bad) je mov aaa das aas (bad) ss xchg and loope cmp jne adc icebp loop shr sub in pop test or pop lcall mov xor and or adc movb repnz mov (bad) stc and add jg adc jae cli mov adc or std scas adc dec inc adc iret (bad) and fdivrs adc push adc mov lea mov (bad) adcl adc loope or add mov (bad) aam xchg or insb push (bad) adc mov mov sbb adc icebp hlt rclb pop push adc and and or (bad) cmp mov xchg push xchg sbb call sub adc repz push or push bound adc test fsubs mov pusha or xor gs mov mov mov outsl insl js loop jns sbb and adc sub or mov jmp xchg in jmp sub xor adc int3 xchg mov jno xor je or adc cmp dec rep test aam lds push ret test or (bad) dec pusha mov (bad) loopne mov into dec adc movlps lcall pop les jg sbb sbb negb lahf cmc adc repz pop sahf jle mov rorb out pop pop fsts mov mov sub lret sti inc adc push ss aad sbb gs adc sbb movlps (bad) mov xor adc std push mov push adc data16 shrl jl adc roll out jp jb push pop in mov mov insb and rclb lods jle andl xchg mov adc push into sti pushw mov (bad) jl (bad) or clc mov jns mov push rorl inc scas sbb ret and jecxz xor test loope mov push push adc sub mov (bad) ret mov adc mov push andb mov inc add sbb ljmp mov adc repz xor imul bound cli push pop in mov xor jecxz adc xor adc sti in adc adc call insb push push cltd mov or push cwtl adc xchg pop fsts jno (bad) xchg scas xchg xor mov das adc stos (bad) in ret cmpsl ret (bad) jecxz dec repz xor push dec test adc insb xchg insl imul sub lcall int3 add push dec (bad) dec pop adc or sarl mov pop adc rcll rclb xchg repz add or ret or mov or jae outsl (bad) into fldenv or imul lds roll lods push adc push or adc out (bad) xor gs mov adc mov adc je xchg mov push lret fs out gs adc mov jb dec jp adc lock ficoml pop pop push sahf std adc sub adc inc xor jb xor xor push mov push loope inc cvtpi2ps adc dec xchg addr16 iret insb jns test imul fnsave (bad) adc pop in repnz dec push push adc imul stos int3 int adc sub xor xchg inc std mov sbb xchg std repnz add adc fstl push in push adc push scas mov jecxz jns aad stc gs or enter je xchg scas adc add mov rcll sub insl jne mov popa dec adc loop adc incb sbb mov cld mov pushf sarl popf aad sarb arpl mov movsb push sub dec xor daa aam fstl int3 jl lret push inc cwtl xor fwait std fistpll lret push dec mov jge adc xor mov jl out movsl jno ds adc inc xchg addl cmp loopne mov repz in int dec ljmp adc dec jle adc cmpsl mov or mov and lods add mov movsb testb pop jne adc lock shlb adc sub int mov add push fwait lret mov adc mov inc add (bad) fsubr mov add outsl adc add notb mov repz sbb pop insb cmp dec test adc xchg jmp fistp faddl fidivl pop mov das cmp sbb pop repnz bnd fcomps lods add (bad) jns or nop add adc cmp jl jecxz fbld adc repz mov mov xor addr16 fnstenv pop xor push adc out mov sub push hlt mov adc push outsl lret mov pop and mov xor jb sub leave adc fs dec cmp mov sub movsb jne add xchg pop mov (bad) stc adc mov ss xchg cmp sub out loope adc adc je cmc (bad) hlt xchg (bad) jne push jecxz dec mov pop push push xchg movsl fildl mov add jmp (bad) mov in iret mov jecxz aad adc mov cmpsl dec adc lcall sub je shll or adc sub adc pop aam xor jb or push in sub adc cmc pop xor mov adc aad (bad) sub lret outsl mov or xchg in shll repnz aaa test adc loope pop sarb popf ds ret jl (bad) sub test leave outsb pop inc add adc repz add push adc (bad) xor lds into ljmp adc cs inc sbbb add leave jp adc ret repz fs and lds adc push imul push enter jge mov lcall lea adc cmp mov cmp mov js mov sbb test out shll add adc push push adc adc push je mov mov dec fsts and adc sbb adc pop mov cs adc xchg test xorl fsts mov cmpsl aaa jne jmp shr leave repz mov or adcb into loope xor in add lret cltd ret mov adc fstl out adc into jl std vsqrtsd mov pop add popa add push arpl xor xor sub cs inc sub or mov and jno sahf adc (bad) inc mov adc push mov adc jge repz xor dec or xor adc sbb xchg cwtl adc pop pop adc stos mov xchg xor arpl sub add sbb jbe divl ds or and xor xor jp mov je adc bound cs inc or repz add pop popf inc adc cs (bad) rorl sub pop incl dec adc orl inc scas mov rorb or lcall mov jg movsl ficom adc xor xchg adc lods dec and add les cmp adc xchg or mov loopne inc loope lods adc mov xlat pusha fnsave mov shll pop ja xchg adc (bad) pop mov aaa adc sbb cltd adc popf xlat imul repnz mov adc lahf push cmpl inc pushf mov adc sbb jbe mov fcoml fnstcw dec fwait mov jnp xlat pop adc fstpt lahf pop aam xchg push add xchg and repz mulb inc or das jmp mov xchg out decb je xchg out movsl sub stos je add loope dec adc sbb adc jb stos mov fsts mov pop dec mov icebp es or sub push push pop pop adc mov rorl outsb aam or xchg adc outsl data16 xchg mov in add and pop popa pusha mov adc bound jne mov repz les adc (bad) or es jecxz sti and cmp mov (bad) adc ss sub adc push pop jo jne push (bad) adc adc sbb adc push adc mov je adc xor repz adc xor fsubrs or push push lea outsl jno dec out out les adc imul push loopne pop push jecxz movsb out fmull adc popa call test (bad) adc imull adc adc adc (bad) dec jb push mov cs adc push (bad) sbb push repz icebp push mov adc test xchg adc mov repz dec xchg iret aaa bound sbb outsb sbb pop in mov or inc mov leave int3 pop adc pop inc jns adc mov rorb jo rclb jge pop cmp pop cmp dec in adc push outsb cltd addr16 mov sar adc adc imulb xlat lcall xor mov pop and lret lcall jno cmp pop push sbb xchg into icebp movsl mov aam dec add dec out les (bad) xor cwtl fs mov dec lea sub pop adc or aam repz cmc (bad) push ret (bad) xchg adc jl jae push pop (bad) rorl xor popf std fsts push adc mull adc and jecxz loopne adc add inc sbb jl andl adc arpl loop loope sarb fldcw adcl lret loop mov int xor insb pop push add (bad) in adc adc adc cmp adc push jns repnz xor mov pushf insb adc pop outsb je push (bad) xor cmp sarl mov push or xor inc push mov cld adc push sbb int cmp sbb pusha movb mov inc es jecxz imul xor adc inc loope cmpsl pusha ljmp out adc or in popa punpckhwd and sbb adc adc jl je cmp or dec xchg gs and push adc dec or inc stc int3 push mov add adc dec shl (bad) mov cmc movsl ljmp ret insb mov test in adc pop jg test loope (bad) mov pop sbb movb lcall jb mov push xchg fst push adc adc aam push adcb mov divl repz xchg push xchg insb xor (bad) fadds in pop push rcrl sbb xlat jl sub out push jl jecxz bound dec rcll cmp leave insl in inc jecxz rcll or or fs jmp sbb adc dec cli test mov (bad) or insb inc and sub dec adc xchg imul adc pusha xor rcrl mov cmpsl adc test and sub adc insl imul push mov lods movlps inc out cmp adc add aaa and adc mov push adc dec jmp into iret adc dec add in push dec ss pop ret cmp push mov xor stos (bad) fdivr ret (bad) mov imul adc adc negb cmp test adc adc mov call (bad) aaa or (bad) xor fsubr push dec outsb inc adc adc pop jnp fsts (bad) repnz dec adc add loop mov outsb mov loopne push mov or movl ja adc test in mov adc in dec in xchg adc adc mov aaa pop xor cmp add xchg jnp repz dec add push insb movsl lret inc pusha imul lahf leave jb adc shl adc and sub sahf rcrb test (bad) push push add jmp loope mov movb add xlat das push mov (bad) mov pop xor adc adc mov stos (bad) repz out into cmp sub cmp sub fdiv push iret aad xchg stos push iret jb add sub ja push popf adc mov stc adc adc rolb scas ror xchg wbinvd sub or adc mov mull adc es xchg shll xchg adc adcl imul push fist popa dec adc adc mov adc jae xchg dec shlb adc ljmp adc mov ja int3 fsts adc sti call inc out lret insb ret loope mov dec adc sub mov mov push and add adc testl pop (bad) icebp add pop or test pop xor adc pushf fwait lahf sbb faddl jp adc push xchg cmp add hlt sub (bad) aam inc adc inc xchg fwait rcrl xchg jo push xor or inc cmp (bad) insb adc mov mov cmp test repnz mov jb sbb adc insl outsb sub xor inc xchg inc push adc adc cmp rorl dec mov cmpsl mov mov and adc mov mov xchg sub inc addl inc adc cld cmpsl popf lods repz pop jno jecxz and inc inc xchg scas adc sbb mov mov xchg pop push aas fistpll aad and adc lods mov cmp call mov xchg xchg xchg icebp mov sub or out mov adc repz mov lahf adc xchg movsl push sbb dec push scas mov fwait adc xor loope sbb sbb bnd arpl cwtl and inc cmp bound cmpsb sub js es insb sub repz sbbb jmp (bad) aas lods sarl add adc rol addr16 rcll jmp or push xchg rcrb mov xchg inc or aam mov sbb sub mov cmpsl xor in shlb loopne movsl add lea mov mov enter lret imul in lea lahf adc test push add popa sbb repz add inc in pushf add mov pop sbb adc mov xchg std adc cmp jle and arpl pop add mov adc xchg std mov nop mov lahf xchg sbb fistp popa (bad) repnz adc lock stc cmc push adc xchg adc out push adc shlb cli dec xor mov mov icebp les dec sahf adc mov add adc dec lret add or fisub and jle sbb popa mov lret scas repz and xchg movsb lods or cmp cli push adc add xlat dec pop adc gs (bad) cmp mov loopne inc push mov addr16 pop adc imul (bad) mov cmp pop jbe sbb lods adc popa mov les outsl scas gs cmp cwtl adc (bad) adc clc mov add lcall sbb nop mov fsub adc sbb pop lea mov adc call sahf push push test mov adc mov jno mov or cmp in shl xlat lea add xor into out cmpsb es iret mov xchg xchg (bad) mov xchg andl adc sub xchg (bad) cmc lds lret push scas dec addr16 mov lcall adc (bad) sti xlat jp repnz sbb lahf sbb mov out push js movsl jmp shlb or (bad) adc add gs lock loop inc rorb xchg lea push dec ss jmp imul fcoml aas movsl mov mov or adc popf sahf sbb mov out adc xor mov pop sbb adc push mov scas lock (bad) sbb xor adc mov add adc neg jns sahf adc clc js cmp adc stos test bound int3 or adc and mov xor sub add dec xor or (bad) nop adc or pop jne lcall inc push cs mov inc pop push mov nop adc repz mov sbb jns stos mov dec adc add in orl and sub (bad) xor jl adc bound push or ljmp out insb mov (bad) jne mov fnop or loopne or ror jb lea (bad) adc adc adc xor stc xlat jl sarb sbb imul js icebp fnstenv jo sbb imul jecxz mov or stos or sbb int sub lcall pextrw cmp adc fldl adc pusha loopne arpl aad outsb dec jae cmp add lds jb cmp lahf jns adc scas adc cmpsl push js mov sbb loopne mov adc and mov or test lods (bad) jmp fucomi adc sub loop bound js adc and xor sbb add mov cmp inc mov sti es xchg pop adc sbb popf sbb ds clc add mov push pop lahf sbb xor (bad) fisubr sub cwtl movsb or sti adcl cltd dec rcrb adcl sub push das mov adc rorb pop add in in adc or pop lret adc arpl into adc mov lret inc mov adc xor insb outsb adc cmpsl jno and cmp adc mov mov sub push push cmpsl mov push fimull js dec adc fs inc ss jp clc or adc inc sub dec add add adc (bad) movsl ret dec orb push pop add std ljmp push xor aaa push dec stc (bad) fisubrl and clc mov push cmp push mov loop adc push cmp dec push ret xchg add fidiv xor add lods cmp cmp xor mov sbb cltd push sbb (bad) fdivrs adc or and mov pop sub pop push cmp adc mov xchg and cmp aam ja mov loop adc push jmp orl cmpsb fimul pop push adc pop inc jbe int xchg adc (bad) dec adc out push es daa iret (bad) fiaddl sub out inc xchg push and and enter insb lcall outsl or mov push and nop (bad) sbb mov cmp adc xor adc ror jmp out cmp cltd cmp mov push adc mov ret es aad jge xlat cmp sbb adc jo xor adc jp mov pop aam int push adc adc les inc adc repz subl repnz xchg adc xchg push psadbw outsl jo inc in sub stos add add xchg ret inc jb xlat mov icebp ja mov aas fnstenv dec jae push jle adc lds cmpsb jmp and fwait xorl add add cmpsl adc push (bad) leave imul aad aaa mov sub ret dec sub push sbbl mov xor pop cli cmp cmpsb adc cmp xor pop inc lcall pop push jne push scas push jl loopne or enter adc fstl adc movsl les push outsb cmp jno stos mov push idivb adc fwait insb jae mov cs xor in mov repz out adc dec add push outsb bound cs jmp push test dec sbb loopne mov ljmp int push scas (bad) push dec adc rclb in or into dec and enter pusha lret aas cmpsb rcll add dec repz out in mov jmp xor sbb mov mov and inc sub add ret add cmpsb nopl adc pop sub dec xchg or sbb iret aas adc cli add mov adc fdivl cli lret adc repnz nop adc push leave xchg fcoms add lock adc jne repz xchg adc mov mov jno fildll lcall mov adc out push and test clc test adc pop add adc ja adc test sbb rcl dec adc adc add inc add mov in xchg or roll adc xchg add jmp ss jnp jb lock adc movsl pusha adc mov out lds push loop cmp add push mov adc sub pop inc xor cmp mov and lret sbb and inc adc loope or sub repz push ret adc cld jnp idivl jp mov adc cmp pop xor cld ja stos xor xchg inc xchg test pop push (bad) jbe aam pop aaa mov imul jae sbb and mov stos pop test mov xchg rcll mov add jnp xor push adc or call jle or or and insl test popa xor nop inc (bad) aas into sbb aad stc jne jns cmp lahf jp adc out pop fimul inc or mov imul jecxz sub imul or ljmp adc add push inc fild movsb pop sbb in jmp dec add pop add xchg mov popa popf and push test std jno xchg sbb sbb cmp (bad) clc adc adc pop nop std and aas push mov xor mov dec fisubrl push pop ds push push pushf call cmpsb or push adc pop push cmp (bad) xor sbb insb push stos adc in in adc test dec dec cwtl scas push dec pop adc pop movsb mov adc sahf or xor push mov and adc cli js adc repz mov sbb adc adc xor or pop or cs addr16 movsb mov or xchg xchg cmpsb jae cltd adc adc bound pop mov xor mov sbb popa std adc jmp pop adc pop enter add xor adcb outsl repz xchg sar push pop fsubrs sbb ljmp xor adc rcr pop push gs adc push adc push xchg mov adc xchg mov movlps or adc rorl adc ret mov aaa lods movsl jne lds leave or sbb xchg ret adc dec cmp mov sub repz pop sbb push jnp mov pop test fsubl jb stos push jecxz sub push in jmp sub repz shll (bad) insl sub lea sbb inc push roll adc ret inc add push jp adc lret xor ds sar pop rcr or mov mov pusha xor mov mov mov adc out xchg sbb je shlb add ficompl mov sbb sbb and adc das mov mov add bound cmp scas subb sbb test test scas adc das les popa in lret or fmull push lods mov test ret lret ficom repz push inc xchg addr16 aam adc sbb sbb and inc adc pop push jg adc adc andb ror adc adc aad push pop jb adc movsb xor bound fcoms fwait daa add rclb xorl or scas mov adc push mov xor push aas mov aaa xchg push pop mov lock fimull sbb push dec jl jae mov adc dec xchg arpl xor mov adc xchg mov push cli stos adc jb adc jge adc dec xchg adc in adc das add adc mov pop xchg test mov mov jmp xor adc adc mov test mov pop or xchg xchg mov adc cmp fsub mov adc into mov lret scas mov out lret jp adc adc fcoms add jne mov insl add mov or add ja adc mov cmp adc ja pop cmpsl fcmovbe notl adc cmpsl pushf pop push add mov cs cmpsb push sbb fcmovb inc adc sti adc pop test xchg adc xchg add adc (bad) sbb xor mov stos mov dec adc mov and addr16 push sbb movlps adc mov pop adc push mov cmp adc das pop sbb xchg adc mov fidiv mov lock ss add loop popa push adc add xor xchg adc (bad) data16 out adc movsl stos xchg mov mov out add rep and dec stos xor test add push mov fstl add pop outsl cmc xor adc cltd and xchg emms test dec push ret mov sub and in pop gs mov in adc imul mov insl fdivrl pop jg xor push jns mov int (bad) jae mov xchg aas mov adc push sahf es adc adc push ret and adc movsl mov mov xchg aaa adc fwait or sti sub adc sub ljmp push mov lods lret in adc push ljmp inc int or insb jbe test jmp arpl ljmp mov js rep mov cmc mov adc insb jmp in adc adc sar movsb iret adc insl mov mov xrelease adcl or test sub imul jl je not fmuls xor push aam jmp mov pop nop jne test push cs and jns cld je mov mov mov (bad) call cli aaa adc push pop sbb shr jp pop adc je scas adc and in movsb inc or sbbb xchg mov inc daa in and and sub test sbb cmp nop xor lcall push ret or pop mov xor add adc adc xchg imul mov dec (bad) enter iret mov dec add movsl je or adc shlb push adc jmp dec es imul js add xchg cmp adc jecxz jmp mov cli bound adc mov dec xchg adc adc repnz pop lahf push jecxz int3 jb ss lret (bad) divl clc adc cwtl add fwait lock pop add jne je adc pop fneni(8087 fdivr adc (bad) (bad) pcmpgtb sbb movsb adc repz xchg scas inc ror push or dec or push mov adc das cmp fwait insb jae dec dec nop inc xchg or cmp or (bad) adc mov pop mov dec (bad) adc mov (bad) mov addr16 xchg jbe into xchg or inc sub stos push dec jg repz sbb xchg adc pop or rcr jo adc negb stc cwtl pop out fdivl adc (bad) int3 stc adc sbb repz jo push adc call add aad jle mov push adc adc cltd jecxz push fcoms nop dec or pop xor push fcoml xor iret adc ficom fldt (bad) jecxz in int3 or push lods dec pop pop adc aad mov mov sbb jb jge inc bsf adc ret (bad) xor dec sbb pop inc xchg fdiv sbb lock (bad) xor fild push mov xor push adc lea inc jnp cmp insl pop adc mov sub sub adc jmp add push insb sbb mov xchg xchg adc pop and mov xor jmp aaa std nop gs adc add mov hlt push aaa ljmp arpl or adc adc fbstp xor repnz (bad) test dec fcmovnu cwtl push adc add xor cmc out stc test and (bad) out mov push imul adc xor add in ljmp xchg sub scas adc sbb fs leave out adc aam pop sub int xchg inc push nop push ds jp adc sbb adc sub or or mov adc sbb aaa test repz insb jnp daa mov inc pop mov pop leave adc enter leave or (bad) insw dec jp,pt adc mov xchg mov fs add test sbbb cli sbb xor push out push ret adcl mov xchg add mov inc xor out xchg loopne jne adc cmp cmp je scas subb out movnti clc test insl fwait adc out les add daa adc mull lahf movsl mov mov inc xor mov insb into subb mov dec adc jg xor ficoml daa xor movntps inc cmpsb and adc sbb repz stc cmpsl xchg loope loop inc in fcmovb mov adc add push je or out adc mov inc cmp imul or mov push sbb mov pop repnz cmp jmp push sbb insb adc adc notb adc push scas icebp mov lret dec sbb pop sahf xor ds push or mov les xor jp cmp adc fwait dec rorb push adc mov pop daa sub cs xchg adc inc std loopne insb sahf xor lock xchg or stos test outsb ja mov ljmp ret rcrb adc xchg adc loop mov lods cmp jmp enter movsl cmpsl add mov dec adc comiss bound mov jo (bad) sbb mov adc push or shlb mov push sti xor jmp jo outsl mov in push adc adc cld cmc push scas dec adc mov inc stc jmp lahf test adc fimull test roll mov push adc nop push or mov mov shl test adc inc dec inc xchg adc adc adc fild dec arpl mov dec fwait sbb dec aad out orl stos mov and xchg dec je test out iret xlat and aas sti aad les fcmovnbe xor adc lods xlat and mov inc mov arpl insb jmp adc into push inc xchg arpl or adc addl push popa push in add fiadd mov dec test or aad stc pushf adc jnp mov loopne aaa mov sbb cmp mov mov mov jae adc mov add push in or gs adc mov rclb repz insl mov lret orb das pop gs push sub dec adc adc dec pop into je das test inc rolb fs add pop imul ja popa scas mov adc or adc rcl push pop cmp push fisttpl adc adc mov inc cltd adc mov adc imull aad inc int3 call dec dec addr16 je adc mov (bad) adc push jp jge adc adc out in pop in xor adc std sahf and les lods lock adc pop call adc mov push or inc cmp rcr divl adc xor adc bound data16 int adc adc adc sub in sub add inc (bad) adc sbb jb jo jecxz int3 adc loopne ljmp mov sbb mov xchg jp aaa adc mov pop cmp (bad) cmp lret fdiv cmp sbb xchg add pop hlt add mov sub dec lods mov push dec adc mov in cmpsb inc nopl or mov adc mov adc xchg push xor xchg adc adc aas adc xor xchg jb punpckhdq clc jle adc jb xchg popf sahf cltd pop stc push (bad) repz adc fcoms test test lods adc sbbw rclb and or push pop scas pop out es or adc inc push adc rclb jb shlb (bad) shrl pop fwait adc mov jae and sub es jecxz ret add out sub frstor cmp fisttpll insl push fiadd xchg subb movsl js les loope stos xor mov push pop rcll out (bad) enter in pop call push fcmovu mov adc mov mov jno pop xchg adc or or mov ret push lcall fisttpl adc mov xor rorb inc sbb and (bad) (bad) loopne mov pushf rep lahf les mov aaa sbb call jmp leave xor in test dec imul das add loop enter adc adc (bad) dec pop mov fidivrl adc jno in shrb adc lea xchg adc adc sbb push icebp inc add or mov inc xchg xor je fsubrp push add or out xchg mov scas (bad) xchg xor pop imul fldt jns mov mov push clc xor mov jp push adc in add xchg mov shl jl out inc cmp sbb dec adc mov adc mov dec mov xor adc adc xchg dec push jno fucomi add and or (bad) xchg popf test jns in mov mov adc pop fdivrs shlb xchg les mov (bad) out add add xor js jge lcall loope mov and test imul stos jecxz fwait adc cmpsl add pop mov (bad) lahf mov cmpsb cmp dec mov push adc mov mov (bad) or jmp xchg je nop jge aam adc xlat repnz and sub adc push jle pop push hlt rclb xor mov dec subl je iret ret pop push mov nop dec push (bad) divb test pop push ret mov or imull pop adc jb pop sub les sub adc push and scas sbb mulb std pop adc (bad) popf (bad) xor or inc (bad) test bound int adcb in add mov lahf adc inc push outsb adc sub push cmp insl pop adc idivb sbb mov les mov add mov adc or or lea cs (bad) and mov stos lods sub mov (bad) adc cwtl adc adc test aaa gs jbe sub or outsl out (bad) mov push in ss adc fisubl scas or jmp out push push lea adc cli out test lods cmp jno sub test add pop mov rclb xchg ds adc mov (bad) pushf adc mov mov add and adc sub adc push jbe rcll or adc rolb repz adc jp dec xor lea rcll xorl es lods leave xor or adc gs ror adc das dec call lcall or imul loopne cwtl adc loop pop xor insb xchg pop test mov push cmp lds cmp pop jmp adc adc mov mov adc xor add pop push adc scas mov mov dec popa (bad) adc test bnd jp adc cmc repnz rcll mov cmpsl jecxz nop daa sarb mov pop jo pop mov pop lds insb jg rol nopl cmp fstl jl adc rcll push mov push push ss adc mov cmp push adc mov rorb inc mov jge adc mov stos in adc jecxz jmp ss adc dec (bad) shrd adc dec add jmp fcoms in (bad) mov xor shlb ficom iret les adc inc xchg data16 (bad) repz enter insl repnz or orl sub shll in aad cmp fdivs mov adc xor lcall dec int3 push clc sahf repz mov push cmp dec out je and fist hlt mov aaa imul repz push jae xchg or (bad) jo adc cmp (bad) cmp or cmp sub cmp adc mov mov push mov das inc out or or stos aam or push pop add jle adc pop popf nop mov jne dec adc fwait xchg pop cmp and (bad) dec jecxz das imul aaa psubusb jecxz enter call hlt lret ja cmc pop adc add adc (bad) jns adc adc cmp adc mov xlat popa pop dec xor adc mov pushf adc (bad) scas mov sbb xchg push xchg add cmc cmp cmp sarl mov push jno mov cmc in adc mov add outsb mov js in adc cmpl adc and pop xchg add dec addb xor imul jbe mov adc adc addr16 mov fidivl push repz mov adc push mov das mov jle insb sbb adc xor push sub lret push push pop repz pop mov adc movb into xchg mov ss mov repz ss adc add fdiv inc adc jnp lcall or xor mov dec sbb adc mov mov push cmp or cmp movsl push mov lcall (bad) add fcompl pop mov jae mov sbb fisubl adc lea iret pop ljmp xor and adc repnz adc adc adc lock cmp dec adc adc xor push mov push jno and (bad) add adc pusha mov imul and imul jb adc jns mov jno jmp xchg jo popf or fldlg2 jb cli xor pop lcall rcrb mov mov add sarl adc adc dec xlat mov mov mov cmc or adc and bound imul push jo push cld fs (bad) nop adc dec cmp ja loopne mov dec xor rolb jp adc xchg mov mov xchg cmp (bad) push out xor ffree xchg cmpsb push lds mov sub test rorb lea lret ret sbbb adc fldenv adc (bad) mov in ret ret pop adc mov xchg add and nop jmp pop ja adc movsb adcl mov mov adc push cmp or sti outsb repz adc jp adc adc or shrb add test adc xor cmp or loope lret adc or adc vmread and and fildll pop ljmp daa imul xchg cmpsb jno cmp pop jb jg cwtl xor adc xchg outsl xchg pop sub and sub lret insl out jmp rcrl scas xor push adc incb adc cmp and jbe stos sub pop adc pushf popa or je arpl insb jae pop adc sbb fstpl adc mov adc xor xor adc jecxz inc adc test call push cli cmc push adc lea mov adc rclb jns adc outsb sti ret icebp arpl dec lret (bad) push inc add or dec fadds adc mov imull insb (bad) dec sub rorb jo push add lret fwait stos pop add mov test test gs (bad) cmp adc xor xor dec adc jl rorl add push adc add pop jne lcall out mov int3 mov stos lret je pop dec sbb add test popf adc mov adc rorb mov out stc lds inc push adc ds lahf notb int jmp cmc fnsave (bad) and adc xchg addl or insb adc sbb jge adcl cld (bad) into sti adc scas mov das or fsts adc adc in adc mov mov mov sahf adc ss push mov adc mov cld sbb xor divb lahf xchg xor pop add sbb adc outsb xlat xor mov adc sbb or pushf pusha je out insl cmpsl dec or (bad) xlat bound outsl push add rcl jb in inc jmp (bad) arpl popf std push mov subl adc sti xlat repz mov adc fldpi hlt lds call loopne out orl les testl dec jno,pn js sti popa mov mov fsubrl and xchg add adc mov notl adc xchg mov dec xor (bad) (bad) pusha nop and icebp scas std adc push test mov inc xchg ja pop adc aad sbb adc test push mov xor adc addr16 scas jb add dec xchg inc cmp adc add sbb inc out (bad) sub jecxz ds adc sti lods jo jle adc add mov adc cmp jg mov cltd adc cmpsl fcmovnb pop (bad) xchg mov in mov rolb mov addr16 add mov adc out mov test mov jp sbb in xor repz stos fs popa mov in (bad) mov ljmp insl adc aam jo jg fsts add stc mov push add mov stos push fsubrl repz or mov adc xor xchg push push pop adc push cs test cmp adc jge adc pop (bad) stc into int3 or mov js addr16 je push jl,pn adc xor push jmp mov adc out jne add adc fmul je aaa (bad) dec and sub ljmp or adc jns rol adc cmp push fsts adc lods mov imul sub insb mov ljmp test lcall cmp cmpsb pop add inc or mov fimull xchg add stos hlt adc adc icebp adc xchg ja jno fcmovnu mov sbb adc push jb adc adc push inc mov xchg adc xchg jecxz ljmp imul jns xor repz mov in cs push sbb je data16 into add in lods nop call cmp adc adc imull (bad) jmp out sub (bad) mov in adc fcompl adc push jne adc adc scas ljmp sbb adc push enter adc imul fistl adc dec lret pop push adc mov adc rcrb adc push jecxz out xor mov adc adc lcall scas xor push mov xor sbb mov lahf adc lret mov je int3 roll cwtl cwtl xchg mov fistpl push adc push loopne inc in test adc inc hlt pop sbbl xchg scas and and enter nop adc bswap jecxz add jnp adc sub and clc adc std pop pop push xor mov adc arpl lds out inc cmpb cwtl addr16 adc icebp gs inc or lods je add mov xchg jmp add cltd enter adc adc xor push mov jmp xor adc je xchg std cmp jmp hlt add adc cli pop push jbe jae inc push mov adc xchg fcoml lcall addr16 loope push adc cli add loopne sub adc in fbstp push dec add enter aaa repz pop push adc dec or dec repz adc lds cmp xchg add in aaa out add test or mov mov adc adc sub mov iret or adc mov mov mov cmp repz cmp pop or adc sahf xchg data16 jg sbb sub adc mov and push mov clc in mov adc push int aam xor dec push add inc adc adc into inc inc subl xchg adc xchg push pop scas gs outsl or sub shrb sbb and mov sbb adc jle push mov cmp mov xchg mov inc cmpsl and xchg sbb mov ret lea and push adc sub inc les mov mov mov bound pmuludq fmuls adc sbb cmp repz jle pop xchg xlat imul (bad) mov adc xor xor aaa sub inc xchg leave mov xor pop adc std push or dec mov pop lock je push jge xchg push into mov (bad) adc adc fisubrl adc int sub or rol pop add adc dec in add loope and ret pop fs adc adc dec pop iret (bad) outsl add xor in daa bound adc or or jne sbb fwait mov sbb jp sbb xchg push sub inc or inc sub out icebp mov sbb mull into stc bound aam in pminsw test je pop movsl aam xor adc adc cmpsb and xchg inc out adc xor jne jp sahf fdivr test lret repz jae movlps adc push lahf push sub and cmp adc xchg mov pushf pop sbb mov pop sti push inc adc insl mov push (bad) repz lcall test push iret adc jae cmp cmc popa push adc dec pop (bad) in ljmp jno ja mov jno fmuls mov cmp adc dec jbe push rcrl jge adc nop je pop rorb pop adc cmpsl xor imul and adc gs sti cmpsl jge movsb sbb jmp inc lds nop add fs std repnz push or test repnz sub adc adc popf (bad) mov adc ss jle cwtl rcrb sbb fsubl repz xchg scas cli das cmp sar rcrb sahf xchg push jne adc mov sbb xor test sbb stc out inc adc ja xchg adc ret iret outsb pop adc bound out inc sub test or xor out xor dec push stos sub pop (bad) xor mov addr16 jp adc xchg hlt into shrl jns xchg inc test adc adc mov adc lds push adc roll cli add (bad) mov sbb add pop in push repz and inc or sub mov sbbl push adc inc sub adc js lahf loop lret xchg add mov push pop jle adc cltd pop xchg jne scas add sbb cvtps2pd aam subb jo ficom jge push jp,pn sbb ficompl adc xchg movsl rcll mov sbb sti mov mov mov rcrl dec cmp mov orl adc sbbl push pop jbe mov jb scas jne push dec loope adc push add cmp inc repz sbb push mov jo insb fsubrs push lods push aad daa adc arpl mov outsb xchg popa test xchg inc lcall adc adc scas inc repz lret ret inc add add les inc xchg (bad) mov adc mov sub test xchg movsb or push jno cmp bnd push push pop adc pop cmp cmp adc pop adc adc rorl in adc dec sbb dec adc sbb jl aas out ds adc adc add cs fsts jo push xor push dec rorl sbb out mov adc mov cmp (bad) shll ja jl cwtl je frstor dec add ret jno imul outsl adc in mov push xor adc and test add inc loopne leave push add movsl adc mov addl push or adc loop inc in movsb push adc jecxz aam pop mov mov in sub xchg pop jl mov ret mov sarl adc adc (bad) icebp pop pop pop add sub adc sbb mov repz cmp aam mov mov or adc jnp cmp aam lret adc dec sbb imul adc adc adcl stos sub mov int bound adc mov adc mov sbb jbe xor adcl add or xchg adcl add in inc mul adc daa (bad) lret (bad) push in adc sub ja xchg (bad) ret mov je rcrl cmc fisttp push imul les icebp push fistl xchg pop cmc adc adc xchg jne cmp adc xchg mov push pop repz jno xor xlat xchg repz sti je mov xor (bad) and xor mov xchg or outsl les pushf adc sbb xor repz add scas and adc popa adcl imul xor add or push push adc adc lcall bound cmp loop mov adc pop inc xchg sbb mov dec cld mov stc xchg int3 jnp mov mov mov adc mov mov pop int rcr sbb aam icebp mov or mov push pushf negl pop xchg nop (bad) mov jns cmp mov push (bad) mov in movsl pop add fcoms sbb push sub sub gs adc xor push imul adc aaa mov xchg sbb in mov adc repnz xor cli mov jecxz jne xor pop cwtl in push lods sub addr16 mov outsl jp mov nop arpl andb push fcoms mov mov mov (bad) sub inc pop (bad) das mov adc jo sbb aad adc mov push aam ja adc add sub fwait mov adc repz jle jecxz mov adc push push pop lcall adc fwait adc ja xchg adc outsb pop jns adc cwtl add scas test mov dec test (bad) xor mov pop outsl out test mov (bad) and xor call jecxz leave cltd or int3 xchg adc int3 lock or je pop push aaa cs adc dec push test push sub add movsl xchg fsubs call push adc incb out bound rol add adc dec cld add dec frstor push loop and xor pop mov add dec push inc add adc seta xchg test pop or pushf (bad) add adc dec sbb cs jno push mov xchg movsl jmp mov adc test adc mov int sbb sub imul arpl adc (bad) stos iret in insl xor mov mov add xor sarb adc cltd sbb imul adc push adc xor or inc xchg ljmp adc (bad) mov sub push dec int3 or cmp mov lcall push mov repz sbb xchg sbb mov or stc fldt push mov lods pop dec insl out and test adc adc icebp dec sti xchg jmp inc je out adc inc adc dec adc cld adc lea in mov ljmp ja inc test rep or pusha jmp aam adc pop fiadd subl adc add test mov pop or add pop pop adc (bad) xor cli cmp mov adc outsb repz adc sbb jl mov fdivs out mov push sub mov adc sbb int3 xor or cwtl mov adc cmp es add push lret das inc ja push enter cmpsl mov inc sbb js and push sub movsb scas add movsl push adc dec adc (bad) jno popl adc or pop mov pop pop fstps or mov dec repz pop imul dec nop cs mov mov lcall xchg enter push xor mov cmp xor std dec fs enter nop insb pusha scas add repz mov aam adc (bad) pop mov inc repnz adc (bad) or xor cmp mov xor jle xchg xchg or mov loope (bad) lock mov pop test sbb lcall repz mov or mov xor add push in dec inc (bad) loope repz xchg popa ficom adc (bad) pop push sub sub dec jl adc (bad) fs adc mov sub adc out std mov adc jno and or scas adc cmpsl aaa out (bad) and mov (bad) repz cmc js movsl jae lea jmp insl mov ret mov adc ja fildll add push lret loopne test lods push fsts xor nop enter mov pop mov xor push or jecxz inc or adc xor pop lds xchg sbb pop adc int call inc jp push cld stos hlt movlps adc cmp cmpsl xor cmp mov inc inc or mov outsl adc lods push or add das jne cmpsl xchg mov push mov push cmp push into orl cmc and jnp mov aas lods (bad) push add call xchg sub xor add adc cmp iret cmp insl adc lods mov int3 pop test dec mov mov push pmaxub mov adc arpl loop repnz adc xor mov je add popa cmp sbb dec cmp arpl sub mov lcall cmp sahf imul arpl inc fwait out out sti bound adc adc mov adc fs add ja rclw mov add in mov pop adc dec cmpsb imul mov jns sub jno aad mov adc push (bad) xor xchg aaa xor adc adc repnz stos and mov mov push mov jl notb mov xor pop add xchg sbbl int3 push pushf or adc cmpsb xor adc mov cmp repnz mov mov mov push inc sbb mov int xchg outsb stos cmpsb pop shrl mov sbb pop jle ds out or and test adc scas xor jmp addl push rcll push (bad) repz mov cmp dec fldl aam icebp sub mov add lock fs (bad) test mov repnz loopne adc adc adc test add jecxz pop push sub push popa hlt push andl jo sub sbb adc pop mov mov roll pop adc (bad) out lcall xchg add adc rcll bound adc lds xor xor cmp adc push in loope mov xor cld push lods pop into repnz or sub out int in mov (bad) jge xor ret (bad) pusha imul mov stos repnz push adc fldl pop xchg pop lea popa jmp sbb out mov add rclb adc sub add das push mov sub mov mov add or ret sub mov adc dec adc jle adc mov data16 pop fsubp adc inc push pop xchg pushf aaa adc lahf seta sub dec jle fnstenv add push mov fimull adc mov jmp or adc push xor sub int3 adc sub adc push push adc dec adc imul adc mov sbb mov xor adc and mov add adc push (bad) icebp or jmp add stc adc loope stos adc pop data16 nop ficoml sti mov or inc cmp dec cmp adc ss adc repz jp jne rorb adc cmp xor divl ss int adc in mov repz xlat jb fwait cmp adc lds call xchg movb dec int3 add inc pop adc pop add xchg sub jmp jle push outsl pop mov outsl push addr16 adc mov nop cmp lcall xchg lea test jo add movsb xchg repnz mov mov sub dec pop adc sbb sbb adcl setne shl xchg pop jne mov push shrl adc push pop cmp icebp lds fcmove adc add pop adc push pushf adc mov xor mov fdiv push mov adc adc add arpl add cmpsl push and jl cwtl mov pop and mov incl test movsl pop loop dec mov adc fimul xchg jle adc adc mov in adc insb imul adc (bad) mov loope in enter pushw adc push pop dec sbb jnp shrl or pushf cmc or aaa (bad) xchg mov (bad) lock mov push hlt aam adc inc lcall adc sbbl scas jmp and jecxz cmp mov adc dec jp adc outsl adc xchg push gs mov xor mov out add orl test adc dec adc mov (bad) std mov outsb add insb das push mov adcl or ret adc inc jno xchg inc jbe push mov mov xlat cmpsb push repz ljmp mov out push pop pop adc pop mov pusha (bad) call dec cmp adc loope xorb movsl pop imul pop mov mov push mov add or mov sbb adc jnp call fist inc adc pop insb xchg pusha jae mov in int xor xchg adc adc mov mov push iret cwtl push stc adc add jne test inc mov cmp adc adc dec adc push dec push int xchg or roll outsb dec xchg adc roll jle gs add int3 push xlat pop sbb cli mov in jmp add push pop xchg inc xchg inc (bad) adc lds add lretw adc cs jecxz scas inc cmp xchg shlb adc mov adc or mulb xchg pop xchg adc (bad) xchg adc adc adc jno xor adc or ja adc and jno and pusha inc dec mov (bad) mov or les mov adc cmpsb push stos bound movsb xchg xor test adc mov cld in xor adc xchg pop aad pop adc dec inc adc fmull enter xchg dec sahf mov adc mov mov xor adc adc add into shll adc leave lods hlt call inc mov jp mov pop movnti fwait ljmp adc inc xchg pop sub mov test loop stos sahf adc movsb xchg adc jle aaa inc mov adc adc sbb xor adc ret jns mov mov adc adc rorb adc sbb push hlt aas mov cmp mov push test adc xchg nop push sbb dec xchg enter lret dec mov or (bad) popa loop faddl pop xchg add rolb popf adc add and enter test mov adc xor jne adc ja pop js pop or rolb outsl rolb cmp mov adc nop inc or cmpsb dec das xchg mov test add push cmp sub add out adc out call mov mov and push adc push mov dec mov imul adc inc push cwtl mov test jl adc hlt ss aaa sti (bad) out into adc sub loope fmuls adc movsl jb jecxz imul loop je sub insl adc or int xor pop adc pop lods push adc mov ja adc jge adc adc adc adc (bad) adc adc sarb inc aas loop nop and scas stc adc add mov jg xor mov sbb sbb xor jae cmpsb mov mov push fldl adc cmp pop cmp pop mov xlat popf jne call push aad adc adc add repnz repnz push (bad) adc add ret cmp adc test push dec mov xchg unpcklps sbb mov mov push daa jecxz xor int3 js sbb jl xor adc jle adc inc (bad) adc jno sti xchg adc or inc fldl bound push adc mov sub dec pop icebp push pop adc adc sbb stc stos test ret mov jns mov je sbb lret repz mov adc dec hlt sub adc dec adc sbb (bad) dec dec je pusha cwtl mov (bad) pop adc push in jp adc inc inc (bad) (bad) pop test add adc mov push (bad) mov rolb je mov and (bad) and add nop daa adc push adc push adc pusha popa pusha adc xchg adc das adc bound sub mov bound lods (bad) (bad) je into dec pop adc jecxz mov mov adc xor (bad) xor adc adc adc std dec xchg psrlq add rclb xchg hlt mov scas lret cmp add cs push sarb adc outsl mov lcall inc jns adc adc movsl xchg dec adc adc out cs lods adc loopne dec movsb mov dec xchg je rcll mov clc notl mov push adc xchg mov pop into (bad) js int3 loope or ret das jle adc dec je dec inc mov xchg rcrb (bad) push add add dec dec dec dec add js add in test mov pop adc icebp cmp push fstl mov adc icebp and es adc adc sarl cmp call inc mov or push adc push mov lahf adc adc mov and pusha cmp sbb sub adc lea xchg roll or sub xchg dec push test clc in add adc and popa pop add mov mov pop xor jne mov cmp js lcall cltd scas icebp add mov and scas adc outsb jns rol lar add pop frstpm(287 mov mov sub push data16 out mov hlt push addr16 jl mov xchg lahf adc fsincos push pop mov cmpl mov mov mov adc xor adc mov cmc mov repz jb popa cld adc pop int3 aad lahf adc adc les push add inc add movsl pop jl mov loopne add mov fidivl test adc add and or pmaxsw push popa gs adc push sti bound mov jmp adc (bad) xchg movsb push lds repz xor aad push fnstsw xchg adc popl repz dec inc bnd lds in push adc leave into shlb in sub cmpl adc add insb sarl mov repz sti cmp cltd pop (bad) and sbb adc push adc je popf ds fistpl push xchg pop xchg push xor (bad) add movsl xor mov xchg test adc adc pop adc jae mov daa outsb lahf adc (bad) xchg add jg pop adc movsb out adc or sbbl jge rcll push adc test lock adc dec pop pop mov pop lods jns mov lret lods or push movlps sub pop lret cmp adc mov adc (bad) or cs inc adcl cmp sub adc aam divb pop mov mov adc mov xchg xchg mov adc xor push adc mov pop sbb (bad) mov roll push jbe mov sbb pop jb rclb mov inc adc mov adc push inc add push shrb roll push lods lahf adc add xchg mov loopne adc jge or rcll push adc dec adc gs or xchg cmpsl repnz add inc adc stos sbb adc ljmp adc mov mov movsb mov (bad) mov adc adc mov or mov sbb xor mov nop push outsb add lret sqrtps adc inc mov adc xchg sbb xchg aas mov lock adc fwait pop int3 adcl add push xor sub lea in test mov bound and sub in pop jecxz push adc mov int sbb push add popa std jge adc mov adc sbbb push or les cmp pop lods jne push ret and sub add out sub popa fistl inc adc push js lods notb jmp pop repz inc pop dec xor adc cli cmc jbe mov push xchg pusha pushf adc in stc js pusha adc ljmp in adc push add and adc lret sbb scas inc sbb push js and movb outsl dec es push insb push or ret cltd xor in scas or shrl dec push mov cmc and mov sbb adc jb mov mov adc mov jle mov adc push adc pusha adc xor nop mov sub test pop sub enter dec cmp popa sahf adc jmp mov mov jl adc push jge adc loope sbb sti push push arpl mov adc (bad) cmc adc stos cltd inc jbe jne add repz mov pop sbb adc adc mov xchg sub adc rclb or cmpsl adc cmp xchg lret bound or mov or cmc lds jmp sub insb repnz stos dec push adc in and mov xor xchg (bad) sbb push lds xchg inc repnz movsl enter loope adc xchg insl arpl adc inc adc out inc mov adc mov cmp adc mov repnz fmull jnp pop je jg mov push adc mov adc push aam aad repnz sbb xchg pop pushf adc mov cmp mov into inc pop xor adc or inc adc mov (bad) out arpl mov add cmp adc mov imul out inc adc add xchg or sbb fisttpl aas in inc test sub adc or test gs push out ds sarl outsb adc adc dec or jb mov js adc adc mov repz xor inc ss jmp imul adc fisub or loope jp adc pop jno ds std je mov push outsb ljmp jae xor repz aam mov lret adc les xor in adc or lahf mov repnz jns adc xchg mov rolb xchg seta pop adc arpl call (bad) push adc dec subl xor stos outsb or push adc popf aam adc inc adc outsl loope loop or adc test push pop or imul mov or (bad) imul jecxz mov and cmp sbb adc adc cmc and shlb cwtl mov fidivl test adc adc sub rep aaa mov movq mov aam push pop mov stos popf inc adc arpl lods shrb xor adc jl or push rcll inc rol adc adc mov add fldl js push adc add lret or pushf adc sti int cmpsl adc and jecxz lret popa mov cmpl lcall dec xor dec inc mov add inc pop fiaddl pusha adc inc or add loop and mov popa pop adc adc adc inc addl cmpsb add cmp jnp add fwait mov iret pop subl mov adc repz jmp (bad) sbb adc adcl sub call adc mov pop or push jmp add in and test inc jmp xlat out les les stos dec xchg adc pushf inc fisttpll add mov pop nop ss inc adc (bad) scas xor mov jno pop fcoms fidivl mov popf gs adc cwtl insl lahf (bad) mov mov adc xchg xchg push sub add sbb adc shrl pop lret push pop mov pop insl (bad) in dec scas and adc inc cmc dec std in xchg xor lret roll or adc or ret pop icebp mov mov jp push jg,pn jl push (bad) adc mov les stc dec call inc mov mov in mov xor imulb adc cmpsb push mov nop dec mov (bad) adc adc mov push cltd ja lods or into xchg lss pop adc es xor jl mov jmp mov addl dec adc or and push cmp decb jle adc je ror pop ja je out and les into add test inc jnp xor mov or in imul bound or ret sbb xor sub out jmp insb or or addl subb dec adc xor aaa ds pop jle mov mov add in jl jae pop adc push adc sti pusha adc mov xchg inc xchg int3 xor sub adc and adc sbb adc je xor adc mov or add imul (bad) movzbl repz daa loopne inc fistpl jmp lahf adc data16 adc orb dec jne sbb ficom repnz adc icebp test add sub movsl or nop fdivr jb fcmovbe outsb push les sub add arpl movsl rcll jmp int3 loope test lahf adc mov and and jbe mov jmp add inc out mov xor clc push adc aaa ss (bad) popa adc imul sbb je cmp adc dec push jb lock adc and adc adc repnz adc mov adc in dec test xor cwtl test test dec adcl sub adc ja ficompl adc xchg into mov stos insl add imul xor in adc mov pop ja push adc pop out adc adc xchg outsb ret jns adc xchg sub lock pop addl xchg inc mov jne jbe iret add or (bad) addr16 test fcoms adc xor fadd popa loop sbb or nop pop jg xchg lock adc mov cs adc sub xor nop push dec mov insl loop imul cmp sbb pop xchg adc (bad) icebp cmpsb or loope and je mov or fildll push xchg mov push adc jo xchg dec cmc outsb mov and pushf adc cli lods or lods fistpl scas notl sti xlat mov cmp nop adc out repz hlt (bad) lods push or and push popa test xor mov mov fisubl dec loop mov sub loope (bad) repz (bad) xchg ud1 pusha pop ss adc lret (bad) dec mov lods inc std push push inc aaa add mov callw dec adc adc jns je divb adc add cwtl lcall jge add or adc repz fcoml setns out jmp jecxz mov std fs push xchg mov test mov arpl (bad) je imul sub dec stos (bad) add pusha jecxz sub adc rcl aam pop push enter jno adc push mov adc mov loope fs gs punpckhwd jmp adc mov aam adc mov int3 adc adc setg push jnp ss pop repnz xor adc aad adc mov jbe push sarb adc lahf adc pop push or and repz rcll sbb jo fcomps mov or mov (bad) cltd adc popa cmp fwait mov cmc stos mov sub adc outsb test movb lods add js adc mov pop adc lods adc lods xchg scas mull adc mov lds add mov mov enter fs inc ret adc pop dec (bad) and dec adc scas inc dec adc sub sub data16 movsb pop adc into sbb push lcall adc push aaa ret lods lahf adc sub pop dec adc mov adc push jne and ret rorl repnz into sbb adc cld mov mov insl outsl or adc or push and ret pop int cmp in pushf adc or adc inc add and cmp test cmpsb or adc lods and roll xor pop js cwtl movsl adc enter jecxz lods adc add push add std pop pop lcall pop adc mov mov roll es adc mov aaa add pop adc sbb sub mov cwtl dec adc xor negl in xchg dec or adc sub and insb adc insl out daa push rolb adc sub js repnz insb lods jge adc jne and adc push loopne (bad) shll paddq inc sbb push sar (bad) jl (bad) shrb mov imul dec loopne enter je jo sbb inc insl mov mov pop sahf inc hlt xlat lods je xor bound adc inc sub cmpsl lea adc jecxz stos repz test test inc adc inc adc cmp pop cmp adc adc aam into add mov lea mov mov push jle repnz sbb cmp push xchg cmp jb xor shrl mov ja push and mov adc imul (bad) inc adc repnz xchg dec std adc xlat cs and cmp sbb adc jp sbb inc mov sub adc inc and xor adc adc sub lcall mov mov add mov ljmp pop adc inc orb decb pop ljmp cmc jge fwait mov adc adc cwtd adc mov xor and adc xchg adc xchg mov iret pop iret mov xor out dec adc repz (bad) sti cmp pop adc test mov adc int3 loope adc jnp mov adc sub jg mov adc out inc leave out push fistl adc jns xlat es xchg xor adc movsb sbb pop in adc (bad) sub inc mov xor xchg popl add jbe cld mov (bad) adc add das adc pop inc sarl mov mov push xchg stc adc dec adc flds adc mov bound or pop mov xchg call pop cmp mov mov icebp int mov jp xor in int push int adc ret push add push (bad) pop into or stos xor dec movsb pop adc leave (bad) (bad) fsts add out mov daa adc dec icebp xchg js ljmp jp adc lcall loopne push mov and adc js in pop loopne test add (bad) in js rcl out jo aam jle rol push adc mov loope rcrl xchg mov push jnp sbb xchg nop mov negb jg sbb (bad) roll fs mov adc cmp pop pushf sbb mov (bad) adc mov push dec adc push mov hlt cmp bound adc cmpsl popf adc mov bound add mov adc adc aas pop cmp or sub adc jmp pop cmp cmp lcall daa dec leave mov lahf sub vmwrite test das or mov mov xchg fsub push adc inc adc xchg call mov adc not call adc inc push pop jnp mov adc (bad) adc int xchg add push popf insb repz in jae mov mov adc leave push pusha callw pop adc test pop js (bad) mov enter js dec adc and dec mov pop adc push movsb adc icebp pop push ficoml dec (bad) lock lods mov aad stos outsl mov mov mov mov das add movsl loopne cli in adc adc orl ror jno aam rclb fimul hlt dec mov repnz inc jge adc pop bnd aas jge adc add test fimull pop adc ficomp adc lea mov push pop cmp adc sbb cwtl cmpsl rcrb leave mov mov jg mov cmpsl and outsl lock push or sub adc imul adc into loopne mov imul hlt out mov ss pushf push jp popf xchg xchg lcall push int repnz mov shrl or fsts and adc dec cmpsb push fs adc rcl test sbbb jg pop and stos pop or adc cmp mov sbb jecxz jp mov scas adc aaa adc jle aas push hlt mov ja cmp fwait adc adc cwtl int3 or (bad) adc fadds rolb lret xor add dec scas int3 dec bswap adc xor les push js data16 fs icebp bound inc call cmpsl sbb and sarb mov scas jle mov sbb mov js (bad) pushf xor adc ret int3 rclb cmp mov adc adc cmp sub adc test sbb jo mov inc aad adc add adc ret pop or xchg adc sahf adc jl mov mov adc xor mov adc jp adc adc stc fcomip push hlt mov (bad) adc jecxz adc dec notl sbb jl pop mov mov dec out adc add imul inc mov add cmc cmpsb push (bad) mov mov xchg stc arpl insb lret adc les or adc insb shlb ficoml je test repnz add mov movsb das adc mov ljmp stos insb aam adc jp fmull leave mov mov outsb mov adc push adc ret mov pop adc mov adc or push rep xor rcrl adc mov insb add test push jo sbb mov add lods jl pop into mov cltd push fwait adc xor inc jp pop dec call int inc dec or push dec lea mov out push rcrb int pop push dec test movb ret add pushf mov pop data16 push bound cwtl pop (bad) stc int3 mov and cmp mov add pop insl xor repz mov or in popf in push into adc inc das inc test sbb (bad) push repnz pop adc pop mov sbb outsb adc adc mov jbe adc add repnz sub cmp xchg in xor sbb lea ds xlat je pop sbb jecxz pop dec pop pop adc lods sarl es adc adc out inc adc adc cli mov cmc mov adc jae mov out adc adc sar mov movups jp outsb mov xor int3 adc pusha ret test psubsw jecxz movsl fnop or xor inc scas add mov sub push test sahf and lret adc mov subl push adc jne jns adc mov je xchg cmp rcpps (bad) lods adc jmp (bad) out test leave rclb or pusha jns jp fidivl (bad) (bad) jmp lods or jmp cmp cli lods adc in push out pop adc mov adc cmp fwait jl jge bound cmp xchg and loope pushf mov adc add icebp mov insb adc adc pop push adc (bad) or mov push add imul imul or aad movsw out and dec (bad) or xchg adc cltd or mov pop in or push adc out cmpsl adc or fs gs mov add repnz sbbl lret je push or xchg push dec push jp push dec jle mov mov leave add add sub pusha jne adc jns adc lea scas (bad) out mov adc aad je leave adc dec xchg add mov dec cmp push and pop and fdivrp push pop sbb je or aam adc or mov ja sbb repz test loope mov sbb cmc cmp repnz add insb xor (bad) cmpsb test adc adc dec adc push cmpsb rclb lods adc adcl lea arpl aaa stos adc adc or (bad) in repz aad adc push rcr push mov pop adc dec adc adc push rcll push imulb lock fwait or adc add cmp adc cmpsb je rcpps ret add daa mov in adc inc sbb lea adc lds adc inc dec nop inc or add and mov xor scas ds sbb data16 adc scas mov shlb insl push adc popa add cmpsb or sub jae mov adc movsb and push adc test inc mov mov adc push and sarb cmp xor xchg (bad) push ja ljmp jno jae mov xor pop nop cmp or les pop pop (bad) or sbb pop fstpt and jns sbb jnp push dec adc sbb mov fmull cmp adc pop (bad) jns jns adc loope orps adc add (bad) mov pop or and stos repz lds pop dec adc adc bound jle adc ljmp adc inc push mov adc adc dec mov stos sub jecxz int3 ss xchg bnd sbbl lret or mov mov push adc rclb cwtl aam adc sub add sbb jge repz ret jnp jns mov xor jge mov cmp cmp stos sub mov outsb (bad) dec or dec mov test push jo fiadd cmovne out mov inc fsts mov fwait adc inc es adc outsb lret dec dec xchg imul adc mov pop jmp fstl cmp add sub adc and fsts pop js mov adc fldcw adc xor cwtl add aam jg cli adc or nop mov push mov and sbb bt mov or daa icebp movsb sub adc mov xchg push test out pop stos js mov fbld inc decb push add xchg push xchg stos xor bound int repz (bad) adc aad jecxz sbb fcomi mov test repz (bad) add mov mov cltd lret jnp cmpsl pop sub out test or pop mov pushf dec cmp test sti mov outsb dec int add imul jbe repz dec push jmp rol fiadd adc pop mov je push pop jo (bad) lahf repz fild pop movsl mov sbb adc fnstsw xchg pop (bad) (bad) idivl fbstp cli hlt jp adc pop dec enter imul movsb mov adc push push int movsl sub xor or pop adc pop adc ja pop fdivl mov push sbb cmp dec adc pusha js add popa cmp mov js add inc adc outsb cmp test adc (bad) pop adc mov cmpl mov push mov inc adc jl mov adc adc xchg (bad) adc mov idivb xor adc adcb mov fidivrl fwait mov push push add icebp js cmpsb rorb cwtl adc stos sahf or js test bound and mov push shlb test jns movsl fs mov cs xor (bad) mov adc pop les popl mov push sbb sub or (bad) enter or jne xlat int3 adc cltd mov add mov adc and xor rclb pop xchg sahf inc jb shrb dec stos mov adc cltd outsb adc nop pop mov adc icebp stos (bad) sbb pop sbb std jne jg rcrb and fcmovne mov out jge adc pop xor xchg hlt jg sarb pop sub daa cmp je or ljmp mov (bad) mov jno sahf lods or push xchg (bad) jo mov inc push or nop add inc pop enter jnp aad adc adc adc jmp jne rorl add inc mov in stos scas dec mov add addr16 repz insb cmc pop das loop mov test adcl mov jmp (bad) hlt scas fldt xor (bad) pop adc rcrb popf fbstp mov push inc fildl pop scas notb dec outsb sbb imul jecxz pop rcrl adc mov adc or mov dec (bad) ss adc int push mov in add in mov dec adc push add xchg adc faddl out add adc imul adc push adc push and inc push add jecxz jmp mov and std and repz insl jmp loope mov or sbb add dec xchg (bad) repnz mov rcr sbb clc adc pop (bad) mov outsb cmp pop pop adc clc or ficom rcll fisttpl push int (bad) mov js xor adc jb xor cmp inc adc je fmulp adc push adc push lret adc (bad) (bad) lret scas mov (bad) add sub and bound adc adc adc adc insl ja aam ds (bad) ljmp add inc pop mov lcall sub adc adc popa test add add pop xchg repz xor mov lahf jmp adc icebp cmp xor sbb clc adc add sbb adc ds icebp pop pop adc jnp mov sbb aam sub push cmp jp adc xor test adc (bad) int3 mov dec test mov dec adc cmpsl loope mov jge mov add adc movsb dec out adc mov pop ret mov out cmc inc xchg (bad) shrl fstp xor push and mov test xor mov shl inc dec xsha1 cmpsb mov lods pop ja adc adc jns mov out sub and push js adc push pop xlat push outsb jl xorb mov adc adc outsb sarb jge adc and (bad) lods hlt adc adc test gs adc loopne add mov pop cs adc or xchg or jno and pop inc ret push and sub jns jbe repnz aas push add arpl push aad adc adc mov or xor ja call adc add cmpsb adc les loopne mov mov and fist je sub adc mov or xchg mov jne stc push rcll inc and adc mov adc repz cmp add in xorl lret in cmp pusha adc cmpsb movsl ds (bad) repz fdivs adc jle int3 notb fimul xor xchg cs push adc jo push ja mov lods adc (bad) push imull pop (bad) cmc jbe pop (bad) fcoms mov adc or xor and lret mov popa pusha adc cmpsl neg adc addl lret mov fs adc sbb addl mov sbb push push int cltd sbb sbb push mov sub orl mov notl jge popf pop or mov imull add cwtl xchg adc push (bad) repz mov add insb divl mov adc popf idivl mov sbb pop popf pop mov dec roll adc pop ja push adc adcl insl movlps inc les mov adc adc jle adc mov imul adc mov pop icebp sarl pop ficoml pusha je mov std out idivl push adc stc out or call ret ss lea stos adc xchg push sub dec adc adc mull adc pop fs inc mov stc (bad) std ds (bad) dec pop in adc inc adc sbb dec ret cmp xorl scas and std adc mov rorb ret test pusha and test (bad) icebp shlb adc nop jle popa mov inc outsl leave xchg test adc pop lret mov or scas and sub into pop dec outsl adc sbb mov xor pop adc dec scas jne adc mov mov add lods xor cwtl adc mov out ret inc lds jmp adc insb adc or add scas push dec adc jnp cmc inc pop adcb xor lock adc mov adc or mov jne (bad) repnz adc sub mov std (bad) cwtl xchg inc jge insl mov adc out xor in xor dec (bad) xor adc (bad) jb cmp ficomp sbb rclb adc std jo mov xchg push int pop xor jecxz mov xor shrl cmpsl ret push jnp je add and xor lds push adc xchg sub adc xlat dec (bad) adc shrl lods mov sbb push pop jb xor cwtl pushf rclb xchg mov inc xchg and adc and mov inc adc inc push aas add add jp adc loopne out cs push mov sbb jmp mov dec aam pushl xor xchg adc mov cwtl adc rorb adc cli lods xor pop push xchg cmp push xchg xchg les adc adc pop xchg jg push movlps xor xchg gs insl push xchg ficoml adc (bad) jno jecxz rorb adc vcvttsd2si addr16 fs sbbb pushf adc out cmc xchg into pop add xor adc push adc dec xchg addl arpl gs repz and pop (bad) fmull jo dec aad lcall xchg push push sub enter mov int3 out push adc jmp icebp repz insl inc pop cmpsl adc adc mov in gs adc adc pop dec aad lret inc pop and adc cli adc add sub adc je push in les add (bad) repz movsb cmp lret mov pop out or js loopne inc jl adc xor cmc mov mov sub sub es mov inc punpckldq add sub movsl mov lret adc xchg aaa mov xor gs adc dec test scas push adc push push add lods ret (bad) pushf mov loop sub cmp sub xor not push xchg adc sbb jns jp adc pop (bad) adc pop jmp adc mov pop mov cmp adc push cltd adc adc ss fcmovne push push outsb mov add inc mov lods mov (bad) (bad) jb adc and mov or and sub lods into stos adc (bad) call icebp out mov mov fincstp cmp or bound adc lds (bad) xor adc fsubrs inc mov or adc dec dec inc and xchg inc adc inc mov test jecxz or xor cmp dec adc imul push pop repz xchg adc mov dec je rclb insb lret shlb jmp sarl inc aam mov xor in dec push outsl inc jp jl add fcmovne push or add mov add cmp lahf adc xor into sub adc jne pushf scas cmc stos adc or cs out stos xchg mov jb adc ja pushf mov pushf adc pop lods lcall repz sub mov imul mov xchg dec add jns jl lcall adc dec adc or adc mov cld mov scas mov push inc adc aad cmp adc xchg (bad) mov mov adc ret sbb (bad) (bad) mov ja in adc cltd push popf call or mov arpl in (bad) jmp and lret insl adc mov div dec leave add cmovp mov adc addr16 into fstl call sti inc adc mov sbb xor push movl xchg js push adc adc push lret xlat adc xchg (bad) shl jle aaa adc popa loope adc push jecxz xchg or mov adc sahf sbb adc adc mov adc inc xor loop pop xchg pop pop xor aam push jge adc or mov xor (bad) sbb xchg notb mov jmp fwait bound sub dec js xchg out mov rorb in cmp repz mov adc pmuludq push sbb adc mov es xchg sbb mov cmp repz mull or lret int mov sbb mov mov jg adc sbb mov ret sbb movsl test sub andb out adc mov aaa and adc adc ret xchg (bad) xor (bad) jb shlb sbb cmp push jl aas mov mov push cmp xor mov je (bad) repz xchg mov aad xor or adc fstps hlt outsb fadds adc imul data16 adc push cmp leave and mov bnd fisttpl insl and subl stos mov cmp inc faddl sbb aaa mov mov mov adc xor (bad) js sbbb or sub loop (bad) mov adc mov ret cmp and adcl push sub out pop sub and push cltd dec xor es fmul adc pop sbb and repz pushf adc imul lds movsb xchg adc adc shrb and dec pop pop outsl ljmp add imul adc popa pusha rclw pop adc scas and mov jmp add adc inc jbe jo adc dec sub adc xchg subb arpl roll insb in cmp cld and daa xor dec test inc (bad) adc xchg jo mov imul mov (bad) repz pop jge adc adc adc dec adc stos hlt dec repnz cmp fwait xchg lea sbb mov call (bad) push outsl cmp rclb je mov mov repnz xor add scas daa dec xor out int repz gs inc jl push (bad) adc mov adc jmp lods sbb cmp rorb add adc pop push adc adc add repnz mov adc add nop (bad) dec inc lods push adc sub cmp jecxz mov adc adc xchg inc scas adc xchg adc push (bad) xchg mov xchg push adc or pushf xor test test adc popf adc mov adc adc mov adc adc lret push dec sbb adc mov mov push pop (bad) call adc (bad) adc jle xor xchg (bad) in adc mov lret mov xchg xchg int out pop popf sub imul in int3 movlps pop or fdivs adc xchg addr16 in dec repz cmp gs sahf adc adc ljmp adc pop adc pop popa jo outsb jl xor adc xor adc inc push nop rclb and push cmpsl add outsb (bad) cmpsl adc jp adc add and inc adc icebp jne jbe xchg and or mov adc xchg push adc adc add mov or sub hlt lods mov or cmp mov mov lock fwait jmp cltd ret adc outsl test or jmp pop into divb scas inc dec in adc arpl jbe mov jmp (bad) fsts out lods push adc cli push aaa fnop push repz pop dec pop push or adc addl lods in or leave cli inc jne lret popa inc push roll adc dec faddl pop out mov adc out scas sub cltd adc sarb fnstsw fidivrl out inc adc and sub push jp mov divb iret xchg scas push rcll xlat mov add jne mov fdivl dec push mov cmp add inc cmp sahf cmp js adc or shrb or outsl les test inc cmpsb xorb adc lea adc ja adcl scas and (bad) popa mov test or xor in adc inc inc or adc out outsb dec jecxz push scas cmp mov test jno or mov jbe jecxz ss fldcw ss int3 insb popa stos mov adc jl mov adc xor adc xchg add fsubrs jno adc cmp adc xor mov lahf pop pop jecxz inc bound adc mov data16 adc ficoml daa and push push movsb sub repz push in inc adc xchg xchg shr fsubrl adc mov les js adc std aaa adc adc aas adc adc jo xor adc adc dec or adc into pushf call outsl loopne adc mov adc adc jb add or (bad) cmp leave jne adc cmpsb ret mov pop lods jno sbb fstpt sahf pushf nop adc sti mov popf mov int xchg jecxz xchg cmp mov adc adc push sbb mov icebp xlat pop mov cmp adc stc mov mov lret add leave or fmul cmc pop sub adc inc andl jle sbb lahf xor mov pop sbb add loop cmp out pop movsl leave fadds adc std push in das sbb jb xor jp adc (bad) int3 adc cld adc adc or popf popa mov xor dec xor mov data16 popa inc adc adc fsubrl push mov lahf adc inc adc mov add jo pop sbb mov test push stos push lods vpmacssdqh dec (bad) (bad) xchg pusha inc xchg movsl sub inc imul ficoml dec adc adc adc mov xchg fadd xchg adc xchg out dec mov jl xchg pop adc ret jmp pusha adc dec lahf (bad) lods scas adc adc xchg insl adc call jnp pop inc adc inc sub sub xchg outsl push or adc inc or mov mov cmovs adc xchg mov dec fwait mov dec adc sub dec sbb or jge mov test adc push daa adc sahf adc mov lcall add dec ds mov mov lock outsb inc adc adc cld ja push inc adc insb dec mov mov adc xchg stc mov cmp xchg je dec imul mov dec lods sbb xchg cmpsb and fstps inc pop adc imul mov popf push jmp loopne inc insb cwtl adc in xor pop je push jmp lock xor adc push inc adc cli adc pop adc pop push out add mov sbb adc pop adc adc adc adc jns adc mov int sbb mov scas (bad) loop adc (bad) adc sar push mov sbb mov add into mull scas sub adc jp adc adc adc adc jmp out (bad) push xchg cmp jns adc sbbl das mov adc daa adc adc loop adc adc xchg ja inc or insb xor push nop pop adc sub movl and stos movsl lods (bad) adc xchg jle adc xchg into iret adc les lcall ficoml scas adc mov ret pop push pop adc adc xchg dec imull out gs adc movsb dec inc dec pop adc imul mov sbb sbbl adc cwtl lahf popf xchg mov jmp scas cli das pop test xchg cmp adc popf cs sarl push sub mov ss push pop mov push lahf jmp lcall adc pop push aam cmp dec adc adc cwtl adc inc mov pop in in mov popa rolb adc or adc loope adc repnz repnz stc test adc mov mov mov push xchg je jmp insl xchg pop adc cwtl adc stos call adc icebp leave roll punpckldq arpl add pushf cmpb dec lds adc and out pop adc ljmp push jge mov adc mov sbb jle adc mov je add mov mov lret cmp imul adc xchg xchg pop push mov cs adc stos and adc cmp or enter lea xchg stos jnp xor or mov popa push and add cli mov rcll repz push ficompl das scas cmc jns pop (bad) dec adc adc lret add adc inc (bad) xor adc mov bound sub adc cmpsl out insl xchg (bad) repz mov idivl shrb xchg xchg ljmp adc jbe mov push pop gs cmc lods mov mov mov push jmp mov adc push adc lds xchg adc fs mov or or sub inc mov call push pop jbe push cli lahf rcr adc out (bad) frstor adc dec ret xchg mov mov push adc sbb pop (bad) aam push xchg push add or mov stc lret fs push (bad) jp adc rcrl xor ja ss fcom dec adc push mov ljmp insl jno sbb repnz jo (bad) mov adc jmp xchg in inc mov adc adc subl push int dec inc inc adc test gs mov xchg inc dec dec push dec arpl cmpsl and mov gs adc test adc dec xor adc inc loopne jmp jecxz stos outsl sub test xchg dec xchg pop rorl sbb push fstps xor repz imul movl adc sbb faddl push repnz sbb pop pop repz cmp repz mov cmpsb fstl sbb js lods mov test jle adc dec cmp add jecxz aad adc sub pop adc mov dec pop mov pop adc jge mov mov mov adc mov test inc lret add sub (bad) js inc fs (bad) adc dec sti mov sbb lds jecxz (bad) shlb adc sbb sti punpckldq cmp adc mov lods xor adc mov jmp mov into xchg callw adc ret test insb or imul in adc push adc jb adc mov pop or pop pushf adc push mov push adc je pop pop xor icebp movsb adc cmp add imul sub adc stos test xchg and mov adc and ret pop sbb fisttpl pop (bad) (bad) adc mov jle sub adc ja fstl sbb push shl dec jp adc xor push add vpsllvd inc sbb sub aad pop rcll push popa sub push push adc popf adc cmp jo adc fdiv mov adc pop adc test in inc mov push in adc cmpsl ja mov adc adc xchg adc stos xor outsl adc adc repz mov test arpl mov outsb scas enter dec sbb pop sub (bad) dec out mov adc int pop jmp adc jmp add repz cltd sbb xchg or dec ror pop push dec lods sbb scas pop in adc stos mov cmp adc cmp mov cltd out movsl or push and xchg leave adc mov pop sbb movsl mov xchg sub sub (bad) or insb loope and adc cmp aas int3 push adc dec mov test test push cmpsb aaa inc repz pushf push std mov lcall mull in mov adc inc jle adc mov rcll mov xchg push or jle add fcompl inc pushf (bad) mov pop lea cltd adc fistpl pop add xor fsts adc movsl sbb inc push adc push push adc mov lock mov adc fstl pand movsb or adc dec mov cmp adc jle adc daa push in test pop or push push add lea or inc popl add repnz adc jb aam adc mov in (bad) jmp jmp (bad) dec adc mov xchg adc rclb jp fstpt popa fsts push inc cs popf xchg xchg adc cmc xchg jnp shll mov idivl cmp or stc adc mov rcl bound xchg adc pop sti in adc push cmpsl push xchg cmpsb in sbb adc repz pushf insb add cmp adc push test jp jbe es adc test mov dec push or (bad) (bad) scas mov push mov or adc jne and popf adc push jg roll xlat enter repz cmp adc adc inc push sbb mov pushf xor lods (bad) adc xchg adc imul ret mov in xchg cmp adc add in and and (bad) ja lret sbb popa adc clc loope mov cmp adc jns repz mov adc pop sti adc dec adc dec dec inc jl mov mov sub adc ja mov adc orl and pusha cwtl adc mov insb mov negb popf xor (bad) or test decl (bad) roll inc dec in adc adc mov mov mov fmuls xor inc les sarb push add lret add or fisubrl sub push pop xchg out and push adc dec xchg or inc inc stos dec add adc imul push icebp dec inc adc xchg adc fucom mov sti test mov jno sbb add inc xchg in adc sbb lock popf repz mov adc adc std push adc jl mov adc fwait jno test xor cmp mov cmp adc addr16 mov push mov jl sub and daa iret test inc cmpsw mov je and xchg les add ficompl dec test (bad) adc (bad) rep sbb iret (bad) fmuls rcll int3 mov push adc lock lods pop adc cmp repz dec xchg dec xchg mov adc mov test mov sbb adc push mov or fiaddl mov mov pop insb push out jecxz fnstcw loop test adc stc pop cmc xchg pusha adc aaa adc push lahf loope or adc test js or fistl hlt push popf lea (bad) ja movsb adc pop loop dec jmp and insl js out fs ret pop sahf out adc (bad) mov or cmc loopne sbb popa (bad) xchg inc dec subl push or cmpsb jno cld test push lods jo cmpsl fcoml sbb xchg mov adc push adc adc mov adc inc mov loop adc jb xchg cmp mov or adc aam push lods dec js imul pop hlt mov fstp incb sbb jns adc sbb add pop inc jno mov and adc daa adc pop adc and adc mov adc lea mov lds adc cmpsl dec xor clc cwtl mov pusha or push push and mov adc repnz inc xorb add xlat iret mov push fisttpl cli loope rcll loop ret scas xor adc push outsl cli movsb dec stos adc out in scas push adc mov lcall aam adc xchg adc jmp into adc repz adc fidiv cmp insb push data16 adc pushl adc jmp pminub or fsubs adc (bad) jmp push js and stos jae pop adc mov call stos dec cli insb adc sub jmp ljmp scas inc test or inc mov push sub adc xor cmp xchg shrl dec push test or mov adc cmp int3 jae sti add bound adc inc movsl dec adc jmp push test ret movlps inc sub adc xor mov daa push push pop pop mov mov imul cmp nop enter fwait push or cli mov xchg adc sti icebp repz out rcpps mov stos rep loopne data16 mov jmp adc sbb int in in call rep shlb push mov lds mov (bad) lret jp stc ret push cmpsl sbb iret std scas cmp movsl pop adc cltd (bad) lock hlt in xchg lahf (bad) push movsb imul adc adc lock hlt into aaa jno rorl enter divl mov sub and mov push jge adc mov (bad) lock icebp adc adc aam push jno mov mov add or lock push pushl add xchg xor clc adc mov adc mov je outsl movsb fsts and in or sbbl push inc cs adc sub loope call scas pop adc inc ret stos (bad) push adc lea mov sub cs lods jecxz aam mov jae cmpsl mov popa adc jmp add hlt roll fisub inc xchg push xchg mov sbb gs mov add mov icebp test (bad) mov loopne jmp add adc data16 jnp scas les adc cmc push inc push pop or adc jnp mov pop andl adc adc jo push ds jbe cwtl loop pop adc pusha fmull std cmp lcall cs sub mov imul adc adc data16 inc dec jmp xlat into arpl or mov dec sbb add (bad) adc rcrl out mov dec adc push dec pop push adc dec xor adc inc (bad) mov adc loope xchg push movzbl adc and mov add push mov fwait adc and push adc adc cs mov cmp fbld push adc push push adc xor inc aam loop adc add cltd jge jb lock xchg pusha push and cmpsl pushf cmpsb push adc ljmp adc daa add push je mov dec adc add xchg dec cwtl outsb cmp repnz xor outsl adc sbb jns repz cmp divb adc outsb fisttpl popf movsb daa adc sbb lock (bad) pop add cmp inc jns or dec out add adc (bad) sub mov inc aaa out or sbb xor or adc (bad) cmovg loopne into ljmp dec jo stc adc adc adc adc cs push adc cld pop mov add ljmp movsl mov dec xchg clc and adc pop loope dec cli cmp bound cmp mov xchg mov jbe push adc and leave fwait adc aam dec adc pusha outsl js sbb mov mov add test mov add inc dec (bad) adc notb aam adc cmp mov pop xorps push adc cmpsl in jae fisttpl mov xchg adc mov test insb or or push xchg out popf mov inc adc lret cwtl adc rcr out je ficomp lea (bad) repz cmpsb sarl scas adc adc xchg add cmpsb xchg adc push enter mov dec popa in adc dec add cmpsb xor orl adc gs (bad) mov arpl mov add loopne dec cmpsb repz (bad) icebp sahf mov pop cmp xchg pop movsl pushf int cmp push pusha test mov into call clc int adc enter cmp push mov dec pop dec push adc outsl pop adc mov sete aam mov jbe ja insb dec adcl add int outsb repnz fsts jns adc mov pop in adc adc adc push adc imul jb mov js adc dec mov insl adc add mov inc sbb (bad) sbb sub or jmp outsb mov pop iret test adc adc shll inc adc cmp jmp adc into into adc push adc mov mov xor push adc adc jge adc xor pop adc in mov adc mov adc mov es dec add test cs inc mov (bad) lret sbb sbb and adc xchg inc aam bound not jg stc clc fwait push push adc mov rol or adc adc int enter into jno iret mov les adc lret imul notl xchg in mov push mov test orl mov aaa fs ss lock adc adc xchg and xor xchg les adc jge adc adc adc adc cltd mov adc mov mov mov mov lock push xchg out xor repz les sub mov adc (bad) cwtl andl hlt lds pop aad hlt stos xor jb dec outsb adc and and iret adc adc fsubs jg cmp push jnp cmp dec std adc (bad) sbb or xlat jmp lock dec sbb loope ljmp inc sub xchg insb xchg dec pop or inc jmp hlt lds adc adc stos mov mov lret mov and sub xchg or mov (bad) mov pusha fimull adc je xlat xchg mov aad push adc pusha adc jo lea mov imul adc loope (bad) mov adc jns pop lea shrl (bad) mov dec mov pop stos xor adc push mov (bad) outsb rorb andl push ret xor add adc xlat xchg xchg or insl sub or dec je sub add push sar lock sbbl dec mov jge mov mov mov dec int3 cwtl adc or mov fmul adc mov inc push adc movsl mov push (bad) mulb mov arpl out mov dec sahf repnz dec cli adc pop or push mov push fcoml add jle mov adc mov adc adc pop push call inc fldcw adc dec adc and orl or sbb movsb adc mov xor adc inc sbb fsubr adc rolb adc push out (bad) incl adc sub jnp push adc popa jmp fwait (bad) test out icebp pop je adc mov or or movsb pop adc movsb adc adc lods movsb cmp add sub xchg pop orl mov adc xchg fs adc cmp adc mov xchg adc cmp xor lods add lds push ret das push and or lods pop adc dec aam sbb adc adc fs outsb fwait adc mov in ds adc into or xchg sbb mov inc xchg or adc push repnz rcll adc mov push ljmp (bad) out in repnz fmuls adc sbb aam (bad) lret xor adc inc adc jbe or lea mov imul cmp sbb sbb mov lret nop pop bound jecxz icebp sahf cmp push insb adc outsb adc xchg out cs inc dec and pop loop movsb pop xchg pop inc adc (bad) adc sbb test bound adc mov ret movsl rcll bound xchg popf sbbl movb sbb cmp pop adc mov cltd movsl sbb sti push lcall jecxz add xchg jp je or jle fnop dec adc and mov lret in insl push adc je ja mov add popa or mov scas mov add dec adc js add repnz popf lods jecxz cli mov aam mov popa in cmp cmp lds adc pop inc pusha lods adc cli adc add mov push sub adc repz pushl jge adc xchg adc adc enter shlb mov xor ss je xor push loope lea movlps sti clc mov xor mov shrl test cmp lret insl push adc repnz adc adc push push jg jp (bad) adc test (bad) iret adc mov adc outsl adc push dec sbb sub outsb sub adc mov jb mov aad loop adc aad adc push mov test pop adc stos adc and iret popa std adc mov mov cwtl popa fstl mov mov add pusha pop pop mov adc mov clc adc test dec cmc mov aad adc outsb bound fadds out (bad) push adc rcl loope mov fcoms pop xchg bound adc cmpsb or inc or or push adc leave adc (bad) jo mov adc (bad) repz pop mov adc jno ss pushf cmp cmp icebp pop add cmp mov pop adc push push pop mov mov xor mov int3 add lods adc test sub lret or aad arpl xor adc adc in adc lods and mov stos das (bad) dec into push dec aaa iret pop neg ljmp lret dec jmp imul or mov lds mov dec adc mov leave lea repz sbb les adc sbb (bad) idivl sarl daa (bad) jb dec lods mov push loope adc jecxz jmp clc adc imull adc shl cmpps adc sti push je fcoms xchg jno (bad) or add test adc imul cld and mov adc dec and adc dec adc sbb add jle push cltd jg mov repz sbb xchg push pop fwait xchg mov jg or adc mov nop sub mov scas adc dec adc scas xchg adc cmp pop jmp jle adc jae out mov mov cmpsb and orl in nop es push cmpsl test pop dec add inc movsb rolb pop adc adc adc ja out adc scas xor gs mov xchg add fwait imul add pop push cwtl lods mov adc sub add add pop adc rclb nop jbe jg test adc pop movsb inc push adc jle negl lods add dec pop mov xor adc cli test push adc pop jmp add cmpsb scas adc leave add pop adc mov xchg or rcl inc push inc push dec adc inc inc or pop shrl in int3 loope scas xchg (bad) sub sub push jle xchg es popa adc adc adc jo fsubrp adc mov fdivrs push adc sbb adc push (bad) fcoml nop xchg add mov rcll pop frstor cs pop inc adc test adc jl mov lds repnz adc adc (bad) dec inc mov fsts or fisttpll pop push jb (bad) (bad) push mov sbb and orl jecxz cs scas mov adc mov test adc mov or in xchg jge,pn mov fwait pusha lea lods mov aad and (bad) jb rclb push lret xchg test repz je mov mov mov fcmovne (bad) pop adc add out push push adc adc push lea cmp push lret adc pcmpgtb out int pop dec mov mov mov lods push adc (bad) int fsubs loop aas adc imul sbb xor imul les dec popa push mov pop adc mov es scas int3 adc fsts sbb pop fisttp sub lret std cmp repz out mov test push fisubr mov adc je pop leave and adc test adc xor fs push mov mov cmpsl add movsb mov movsb mov addr16 mov fimull adc gs mov adc clc and outsl or mov adc adcl add in inc mov adc jo cmpsl jmp inc clc or xor adc cmp adc imul lahf std jno sbb sbb sbb sbb dec popf push mov lds xor sbb adc hlt dec cmp adc stos daa lods cmpsl das imul repnz dec mov sbb pusha aam adc xchg lods ds adc adc inc pop adc mov sbb popl cmp out pop into loopne mov adc adc dec adc imul adc fwait xchg mov mov cmp adc adc pushf push pop xchg adc mov xor adc push test xchg lahf mov mov adc inc adc dec popa adc inc adc push scas mov xor dec leave in adc jns adc cli mov fsubs out dec adc stos and adc and cmp adc push adc pop mov xchg pop adcb xor test adc adc jge adc sbb loopne (bad) mov pop mov das sbb repz fcmovu insl adc icebp pop test rcrb push sub leave adc jno adc mov dec sbb sub add arpl popa pop movsl push mov pop mov sub push pop and adc dec cwtl push adc adc cmp into inc or dec cmp dec bswap or movlps cmp test pop insl (bad) lcall mov or lret leave scas sub dec bswap xchg das jbe or fs mov jb nop add stos lea mov movsl je mov add jle (bad) (bad) sahf jo lahf mov ljmp jbe xchg pop xor jo mov mov dec scas or push neg pop jle or cmp fnstcw cmpsb sti adc or adc inc mov mov mov lahf adc imull (bad) xor outsb add adcb orl mov insl lcall cmp cmp mov sbbb sbb xchg std lods and or stos outsb ja out sbb icebp push leave sarl lret in adc sbb int das add adc arpl daa cs lea jmp jbe mov inc adc pop add inc xor inc mov pop test xchg adc shll test fcoms enter sbb jo cmpsl cmp sbb int3 add mov xchg (bad) insb iret mov stc popa jb mov mov loope adcl cmpsb inc adc gs mulb adc adc sub dec adc mov (bad) std adc mov sub pop fcoml xchg jo sbb pop push (bad) mov cmpl xor les sbb or pop jmp int out adc outsl sub jae adc mov xor and and xor pop loop gs adc addr16 or int3 pop enter mov adc pop or push movsb or push pop rcrl adc (bad) lds daa scas test mov mov push mov fcmovb push adc and (bad) lret leave adc or repz lcall pop add leave mov imul mov sbb push gs adc adc add adc cs popa sbb data16 or push mov sbb cmovnp mov bound hlt push mov mov aaa (bad) lea xor mov in xor xor pop lahf std negl (bad) add adc adc cmc std pop popa dec adc cmp (bad) popf xchg cwtl sbb repz sbb jnp cmp or or push mov xchg addr16 push mov shlb add add andl adc add adc mov adc xchg leave mov lret mov repz lods adc into mov jnp cmp inc fcmovnu adc add shrb into xor cs adc leave xor dec inc jmp mov loope cltd xor aaa pusha or or mov xchg je xlat ret push rorb adc ljmp fisubrl mov int adc xchg sbb or aad push mov addr16 adc push mov aas fcoml push fmul pop adc xor add sahf push repz jb nop or scas lea mov lods into jns dec out cmpsl sub push in movb arpl cmc dec les mov adc into push inc xchg inc xchg repnz pop fldt adc push adc and mov in mov adc pusha enter in pop loop js xor adc movaps pushf pop mov sbb repnz mov pop adc dec adc adc adc xor xchg mov push add or mov adc or sub (bad) dec arpl loopne movsb pop stc adc xor adc test xchg mov lock add mov (bad) lods mov or popa xor xchg std out mov adc ja mov andl add jl loop movsb repnz inc movsb mov jno (bad) jl lret and inc rclb adcl in or repz inc mov outsb lds int xlat sbbl inc test pop pop adc adc jp mov nop in repz adc cmp outsl adc adc je ret sbb adc pop sti xchg (bad) mov js add adcb adc inc xchg adc pop jecxz push out push adc adc adc push add inc popa sbb jno jp movsb lods adc ret dec add aas xchg fstpl daa test mov das push mov sahf jge adc outsl mov pop inc roll movsb fstl dec push adc (bad) popa dec dec adc inc adc ss sbb mov nop dec adc jp adc out mov pop adc movsb pushf (bad) repz movsl cmp mov cmovb pusha insb sti scas dec lret mov mov sahf mov mov push out push add rclb mov xchg dec mov scas adc push js rclb fmull adc ret dec fadds adc fsin rcll in fcmovnb int3 jae pop push movsl jns addr16 test sub adc sub gs adc mov inc adc es adc mov sbb bound clc adc mov xchg inc cmp push sarl jno xor adc iret pop sub arpl adc movsb pop adc jge adc or inc cmpsb fcoms adc and sbb pop xchg xchg adc jno adc mov xorb adc or pop (bad) lahf adc adc movsl mov adc push (bad) xor xchg adc push adc adc cmp test xchg les in adc adc and cmp mov add in (bad) gs cmpsl int xor adc stos mov (bad) mov lret adc adc lods notb leave adc adcb shrb xor xchg shrl adc imul and ret push add cmpsl adc jecxz or sub adc aam bound lahf adc ss fcmovu adc push inc (bad) in sarl xchg cmp xchg adc push rolb leave adc push (bad) aad fdivl movsbl cs adc jnp fistpll jb sti sbb out push into movlps mov test xchg add mov push or add cmpsb inc out in (bad) push sub aaa ret fiadd jmp mov adc mov pop pop mov adc mov jbe xor push cmpsb mov movsl imul arpl xor push inc (bad) mov (bad) je inc or mov add test add subb cltd adc jmp add (bad) daa out js insb push jg jle adc adc mov pop add mov cmp daa adc mov xchg jns cmp push jne sub adc lret lahf mov cmp or mov sbb xchg or adc mov movsb adc repz mov cltd jmp nop jmp add mov adc add imul cmp jle adc mov test fsubr mov pop js iret movsl mov cmpsl or mov addr16 jl mov mov lcall or pop dec adc cmpsb adc inc or movsl (bad) fidiv jmp push sub out xor inc test call adc int das cmp mov and adc daa pop out scas xchg and (bad) rcll xchg jnp mov adc cli bound sbb ss out icebp mov aad lcall xchg xchg add mov adc je clc mov push mov hlt or push push pusha repnz jne imul imul pop adc adc mov dec push xor dec ret add jle adc pop in xor add gs inc adc stc adc bound in jecxz aam adc cmp add and mov mov add pop pop je jg jns int3 sti adc dec ficompl inc adc sub pusha ja,pn push and push adc push mov jae adc sbb je xchg jo mov call shll out adc in ficoml adc add push push inc or add mov adc ss pushf jle cltd mov nop xchg movsb cmp dec add (bad) cmp adc mov stos cmc lods cmp adc xor repz adc jecxz test adc cmp inc jecxz data16 add lea inc lret test scas add dec cmp les push jl mov adc mov adc out aaa lods mov adc leave out movsb out adc daa cmp fwait data16 cwtl push mov cmpsb dec adc adc cmp sbb (bad) mov mov adc mov je mov pushf adc xor fwait xchg sbb push adc adc sub test cmova shrl adc add adc adc xor inc (bad) leave cmp pop je insb adc inc fimul or dec in cmp pop xchg add mov inc mov xor (bad) les lods xchg lea xlat adc pop cli nop mov cld mov or push adc stc jp fdivrp jbe adc fild push int3 jb cmp adc aam push jne clc adc mov xor xchg add dec push push mov push push in ja int3 adc mov das dec outsb adc daa adc mov scas or stos sub mov adc test adc jmp adc int push aam pusha adc insb adc (bad) inc xor adc add pushf pop mov shl loop into repz xchg inc sub or jae icebp aam nop nop mov add adc ds adc jns adc int lea adc dec sub lahf adc inc lret es adc inc jb adcb push repnz lods icebp dec mulb sub fcoml add ss jp stc sub ret out mov cmpsb mov pusha movsb dec adc and adc fcoml mov mov adc icebp xor sbb (bad) mov adc push movsb movb orl aad pushf lods xor dec sbb cwtl mov out test adc lock repz adc sub std int shll jmp xor mov stc (bad) sti (bad) lock xchg pop adc cmpsb loopne aas add mov add sub sysexit int3 mov arpl cltd cmp jmp dec adc xchg mov scas dec adc iret test adc adc adc adc mov scas mov jns adc mov adc mov inc repnz push rcrl dec pop (bad) jle mov sbb cmp lahf stos js (bad) repz jo mov movnti cmpsl adc sub adc ret sbb sbb adc mov adc adc xchg call das jns jp lcall popf pop pop jg mov pop loope ret in adc xchg adc ja,pn sbb xchg adc mov dec adc pop outsb push addr16 adc or lods out add inc lea jmp mov jmp lods ss adc jge adc cwtl adc inc adc sbb aaa inc adc mov adc cmp rclb jns adc and aam pusha mov shld add xchg add (bad) fisubrl adc jae jns adc jle adc mov adc adc mov repz fwait cwtl xchg sbb pop adc jb mov cmp adc push add dec push mov loopne into or and lods dec adc pop adc push adc push adc adc enter pop or adc pop cmp dec xchg outsb adc adc xchg sbb cmc pop int3 sti mov mov test push adc cwtl push sbbb sbb lcall xchg popf jg pop adc xchg inc ds xor pop pop adc adc push fwait in push sbb sti sub adc adc shll xor js adc inc rorb inc adc loopne jp adc push je push movsl test adc adc lcall sbb adc add mov je lret push (bad) inc (bad) adc adc lods xchg adc push in (bad) pop add adc lcall test (bad) xor cmp jae cmp nop cld mov adc sbb adc adcl adc sbb xchg mov adc es adc js cmpsb cmp adc adc out add and sub lds adc jb mov aaa or adc addr16 test xchg push push push (bad) ja sub test push sbb nop mov adc mov test int3 xor mov adc pop sbb push adc adc jge adc adc mov fisubl cmp (bad) pop adc shr and push adc data16 xorl fmuls add add stos lea cs adc sbb mov add orb hlt dec test adc pushf fdivl pop or push fstl adc pop xchg cmp subl push adc adc adc xchg negl jge xor mov push push adc and rcrl mov xor stos adc movlps inc int mov cmpsb xchg adc xchg test mov movsb mov jl adc adc lret or xchg out inc sub or adc jno adc in insb add mov jne adc add xchg sbb push cli pushf pop sbb mov adc mov mov lea xchg fsubr adc sbb mov sbb movsb sbb jp adc (bad) outsb js insb scas jno dec (bad) fdivs test push dec hlt jo rorl adc ret and xchg bound out (bad) imul add add mov notl scas pushl cmp cmp adc es lds adc iret and adc test adc (bad) outsb outsl add mov and dec adc arpl out cmpsb sub (bad) out mov adc aas adc jnp pushf sbb push adc sub adc pusha dec xor sub adc adc mov xor sub xor mov adc mov iret int3 les (bad) out push mov in daa and mov mov adc mov jp adc dec jp adc adcb inc xor pop inc or and stos (bad) movsb loopne sub fcoml ret pcmpeqd mov adc push adc dec into insb adcl daa mov sbb (bad) sarl cwtl xchg xor cmp add popf jbe push push pop jle ds sbb push fwait mov fucomi mov fs adc mov pop mov inc scas jmp xor rcll ds dec cmp or inc daa icebp inc inc adcl mov (bad) dec inc pop mov inc add sbb and xor divl push pop cltd cwtl stc adc dec adc (bad) or push pop jb push out lcall mov out jmp (bad) dec push mov std jmp cwtl add push adc xchg mov pop pop sbb adc rclb xchg repz rolb adc add pop push cmp aas lret ja push push jle fstps lahf arpl pop out insl dec adc icebp idivb sbb cmp and jl mov test mov xchg adc je xor pop adcl les jecxz add or pushw jmp rcll push (bad) or jne mov cmp adc hlt cltd mov mov lods adc cmpsl std add lods icebp cwtl iret and insb in sub pop adc sub stos sti ljmp mov leave inc adc mov mov sbb (bad) out movsb jmp int or adc mov loope nop jle add (bad) mov dec push or adc xchg adc xchg aam push pop xchg push mov adc lds mov xor fsts sbb lods movsb bound adc and adc adc add mov dec std adc jns adc test push inc popf adc adc ret nop loope fs mov test sbb add inc loope cmpsb out aam ds xor dec cmp imul adc gs add sbb adc xor push cmc mov nop cmp cmp or jge xor hlt ss mov test out sbb sahf (bad) ss and dec (bad) outsb cld adc test adc adc (bad) adc es adc stos adc popa mov pushf adc (bad) add or cmp and mov hlt movsb call add pop and adc leave pop ret jle sbb adc pop mov pop cmp out adc sbb icebp dec fiaddl adc sbb fdivrs adc cs adc mov lea movsb stc adc test mov adc add xchg adc dec hlt repz ljmp adc leave adc lret nop push inc jb ss test out es adc cmp test pop and out mov mov cmovb mov cmp orl test adc loop stos std ficom adc movsb jl js adc jmp mov push xor pop movsl in adc mov adc adc pushf arpl xor jae xchg jp adc pop mov cwtl out mov adc ljmp adc faddl test and ja ret int3 adc push das mov adc imul adc mov adc sub (bad) adc adc cmpsl mov (bad) or orb mov sub adc xchg mov mov ljmp add mov cmovp mov cmp xchg jecxz popf push push push icebp (bad) xchg push gs adc pop mov repnz pop pop lahf sbb jne add xlat mov adc dec adc mov adc sbb mov mov adc aas dec push push add mov lds add scas ss adc loope,pn (bad) sub popa cmp and (bad) adc mov push bound or pop data16 mov add lods xchg adc clc push loop mov fiaddl adc and mov cmp movsb sub sbb adc adc test adc movb into je scas loop pop adc add leave push in mov cmp adc test and sub mov lods dec and xchg inc fiadd pop or adc mov xor inc (bad) xchg je repnz cli xchg jp xor push mov push mov cmp fdivrl call fstl ffreep fldenv (bad) in mov mov insl fild stc (bad) into cli pushf test add shrb (bad) cs call mov pop pop xchg or daa and (bad) test or cmp adcb xchg adc iret in push adc push adc aas adc fcmovbe xchg mov add out int outsb mov cmpsb adc sub repz test adc xor mov adc adc fs cmp add test ret stos adc mov mov push adc mov mov sbbl dec mov cmp rcrl repz stc hlt mov add mov lahf lret mov cmp fdivrl pop cmp adc pop out std nop or push mov xor dec fwait xor cwtl (bad) sbb adc imul cwtl adc push adc and cmp in scas or or add test cwtl adc xchg js gs xor test adc mov mov repz adc sti es shlb movsl mov dec and lret int or cmpsb and lods xchg adc pop adc insb xor xor daa xlat dec adc cmp xchg or add add mov cmpsb push adc xchg stos xlat inc nop inc adc jbe stc push adc loopne pop cld (bad) adc add cmp push pop icebp (bad) idivl aas rorl dec sbb ja xor adc pop lods cmp pop jge adc sub (bad) push loope mov push repnz insb in mov ja fimul test adc cmp stos lcall inc dec add add leave inc inc adc mov mov (bad) arpl push adc mov adc xchg push (bad) jecxz and test adc (bad) dec adc mov sbb push hlt aas jge inc sahf vpcmpgtw adc loope mov cmpsl and movsl or push cmpsb cmp jae jp adc adc int3 pop adc mov mov adc pop insl adc mov adc shrl dec ret adc in jmp adc inc inc push cmpb adc xchg test dec les mov imul notb mov jp adc add jl mov mov adc popa adc mov adc adc scas inc adc repnz add fsubrs je insl les adc cmpsb loope adc and fucom mov sub push cld adc jg mov adc xor dec hlt out (bad) fsubrs mov scas pop popa int pop mov dec adc mov sbb and or rorb repnz jle adc int3 into bound outsb add xor adc nop add mov lods sti adc pop scas insl cmp adc lods mov pop add mov push in xchg xor pop lret adc ficompl xor cwtl pushf scas adc pop mov clc adc dec js ja add mov rorl xadd add xchg test adc clc sbb sti fnsave aam test jmp pmaxsw rclb sub adc xor rcll hlt jg sbb jl imul inc notb repz cltd push jle adc lods xor cmpsb lds leave les sarb adc cmp dec int mov adc adc pop or insb mov outsb test push test das (bad) fcoml add xchg aas adc pop fwait (bad) mov mov adc les adc mov sbb and (bad) mov pop adc dec imul xor xor push jno push cmp mov rclb mov mov pop and inc (bad) xor xor xor scas xor pop pusha sbb (bad) adc add les adc test adc adc inc adc adc mov dec xchg adc dec mov or ror add movsl jle mov (bad) fxch cmp adc das aaa insb (bad) out lods adc setae add aam adc adc ret gs adc lods xor jg movsl adc or and sub les pop lahf pushl add int3 inc in or or jmp adc add jecxz xchg sbbb jo insb adc int xchg inc jbe xor and cwtl enter (bad) and int psllq push xor incl or call adc jo adc ss mull add inc loopne imul and cmp fmull mov xchg pop xor pop ja mov notb pop daa adc adc push mov mov (bad) cmc pop fnstsw mov mov adc js and lcall xchg fiaddl adc pusha mov adc or adc jp adc adc (bad) mov inc add jnp scas adc pop jecxz (bad) mov pop in ja jg adc adc lds rolb add adc inc mov in les add enter test mov cltd cwtl or jmp inc les xacquire push fsts ja adc mov out cmp cmp fmull adc (bad) scas inc adc es adc lahf adc pop pop push push adc dec add jns adc gs adc ljmp loope inc jbe push dec xchg imul adc or mov test pop test pop inc adc pop sub repnz std mov (bad) jb cmp aaa es adc xchg and sub adc mov into jb adc push adc stc adc adc adc sti addr16 dec sub adc stc outsb xchg and dec dec movsl enter adc mov push push xchg adc cmpsb inc push adc sbb mov insb dec pop add adc cmpsl adc into push adc repz in mov adc jb mov jno inc fisttpl sub nop imul lds mov xor inc mulb add (bad) dec jmp shl cmpsl sbb jne mul mov fisttpl push pop adc push shr jge xor cs adc cmp adc push cmp or test std ret popf jge push mov mov xchg push adc mov lea stos (bad) pop test jl or aas push ficompl (bad) (bad) xor adc iret sbb je push or inc sub adc sbb and mov pop adc int adc nop mov lock pop mov jl lcall pop (bad) xor adc mov test pop adc inc movsl cmp inc shrl mov mov enter stos stos xchg or int3 pop push in mov adc ss fstpt adc xchg adc xchg push mov setbe pop jg xchg cltd dec sbb jle lds cmp adc dec push adc ret (bad) xor into mov push push add mov out mov cmpsb mov xchg inc (bad) or test adc and adc (bad) adc push adc ret or lods mov mov mov mov inc adc popa adc rclb adc (bad) fcoml sbb cli test adc aaa scas push cwtl and and adc lods pop dec fnsave (bad) mov fadds adc cmp or imul cmp mov push pushf incl popa sub xor adc (bad) mov repz fbstp adc mov xchg sbb jmp test sbb cmp mov adc jo adc fwait ss adc fnstsw pop (bad) out adc push add std mov cwtl xorl in movsb pop adc imul adc test xorl or movsl push add inc cmpsb inc adc insl adc push add addr16 (bad) test mov mov pop adc test adc adc lods pop adc adc push cmp xchg mov jecxz push jl roll leave insl insb adc adc adc insb lds push mov dec adc test adc cli stos cmp pusha adc inc scas adc mov je mov xchg fmuls adc jecxz notl cmp sbb lret or adc jne aad insl repz xchg or pop popa ficom loopne jns push enter mov push xchg pop jl scas inc adc outsb jo (bad) adc push and mov xchg adc pop adc sbb lods push adc mov sarl lods aaa adc mov adc mov test lret adc imul stos adc adc adc xor ja mov adc (bad) adc cwtl adc xchg mov mov pusha sahf and adc rcl mov popf movsb ficompl adc sub adc insb fidivrl roll jns inc (bad) adc push adc adc sub adc fimull inc inc das adc cmp add dec nop sub jmp xor mov jecxz mov lods insl aas dec (bad) jne and pop inc xlat loop push mov xor jp adc jns xchg inc push pushf jne (bad) mov mov je (bad) xchg sub adc sub mov or popa pusha adc stos adc sahf sub inc sub fcmovb cmp inc or (bad) or movsb fcoms cli lods repz mov adc loope add mov in lea rcll adc jb idiv xchg inc jp adc (bad) xor stos cmp sbb jg adc cmp lret fmuls stc ja jne xor cmp ffreep fadd mov icebp add mov sarb inc add sbb mov pop mov xchg cmpsl outsb xchg int jmp push dec aas sub push lods xchg inc or mov (bad) adc and adc xorl cmpsl mov mov push xchg stc mov fstpt adc sub cmp mov xrelease add cltd outsl jle pop jo mov imul cmp cmpsb rcll and adc orl inc mov pop push fcoml sbb sub adc stos mov fsubrs adc rcll out jecxz or xchg mov das pushl adc aam jle add adc adc nop adc adc pop sbb dec in jge push jg jns dec in jne cmp or sbb insb fs ja jno adc jnp adc xchg mov enter (bad) (bad) jp xchg jmp sti movlps js or push or mov adc or subl or push and imul popf adc sbb jl xchg adc adc xorb push scas mov cmp sahf pop fstpl data16 adc movsl cltd dec mov mov mov dec sbb adc xor push xchg add ret inc out adc adc push (bad) adc mov std push ss test mov mov and push adcl mulb or lds insb (bad) in add inc clc adc or nop lahf pop sbb pop adc xchg push push or cmp add and add or movsb adc test mov loope stos push or mov push popa or xor or test pop push cmpsl adc push popf aam dec adc adc sub adc leave cmp stc adc sti pop ds sbb frstor (bad) iret adc jae sbb (bad) mov jbe sarl loopne enter fimull xor pop pusha cmp jb mov xchg xchg sbb fidivrl pop adc adc adc ret adc mov test out adc gs fimull adc mov stos int test out int3 ljmp adc and fisubr dec dec push pop test js adc movsb xor dec dec adc dec add jo adc cmp and rorl rorl adc cmp (bad) aas aaa mov push fisubrl jns adc pop lea dec lods or push pop icebp push mov mov add in test cli push mov (bad) cmp into adc call rorb pop lods rclb dec dec and inc xor fimul inc lret mov into cli adc std adc dec dec imul xor adc negb adc movsl sub dec mov loop adc insb adc out mov iret xchg xor jle aam pusha adc adc push loope sub rorb xchg jnp mov dec sbb lahf add adc lcall ficoml je xlat xor dec es adc movsb xchg stc dec (bad) mov ja lods mov ds lahf xchg adc dec push adc xor push mov or fwait test fsub cmp test adc stos mov shrl rorb cs mov add (bad) jle imul mov dec dec jmp subb (bad) lods push adc dec hlt lea jecxz push enter adc adc enter push lret xorb adc push xor andb pop and xor sti mov adc pop pusha rol insl popa dec adc adc ret repnz adc jg push cmp ja jp adc sbb rcll repz jp outsl mov dec mov push xor lea xor xchg adc push mov xchg out iret js test dec roll in push ret cmp jns adc cmpsb and pop outsl and pop ficom jecxz add pop stos repnz dec aad imul mov mov scas pop adc inc add inc xor mov pop adc adc cwtl adc test pop mov mov das mov push (bad) inc adc lea fisubr cmpl repz adc lds insb xchg movsb inc shll fisubrl bndstx xor aam jnp cwtl mov mov or leave and stos xorl push (bad) xor sub lret test outsl adc movsb jb mov notb sbb sbb dec inc adc add adc (bad) xor out mov insb dec repz rcrb lds jno add adc test clc pop dec dec jns (bad) cmp aam ja ds lods or hlt mov push inc rcll mov or adc mov pop cltd adc mov mov mov rolb fsubs daa adc adc bound loop mov pop push fwait lcall mov or cvttps2pi adc stos adc adc insl mov adc movsb (bad) xor jnp adc pop add cmp cmp aam ja add adc fs int3 dec adc adc dec adc fsqrt push pusha push dec adc sbb dec out movsb jecxz scas and sbb push les adc adc adc outsl add inc repz mov test xchg adc mov cwtl pop cmp jge lea fldenv adc fcmovb inc adc dec adc inc mov sub lret adc adc lret push or cmp adc les xchg xor adc addr16 adc or sub adc dec adc xchg push xchg sbb cmp push adc dec adc dec adc movsl test stos fisttpll mov mov es adc lahf inc xor fadd repz cmp cmp std adc add ja mov xchg xchg fs adc mov ja ss insb test mov adc dec jecxz push test or or pop enter fs dec (bad) push or or adc pop repnz cltd (bad) insl pusha adc adc iret je inc or movlps hlt arpl sub sbbb mov popl lea bound or (bad) sub push movsl (bad) in adc adc inc ja pop sub mov dec dec adc adc pop cmp std sahf ficom sbb adc push mov adc jle lds mov movsb jno add test rcll and push test mov out sbb mov leave stc inc cmp adc repz mov icebp lods pop in adc adc (bad) push adc mov inc clc daa sti repnz push in adc adc test push leave xlat xchg scas ss jp xchg es adc insl adc call xor adc dec movsb stos and pop and adc mov repz mov pop adc add lods adc push orb lret jmp cs iret adc (bad) jmp adc pusha adc xchg std mov repnz lock mov push mov testb fsubp adc adc and out scas adc loop and add add pop adc sub and push xor aaa cmp lods mov fcomps sub adc adc pop out adc push adc xchg adc adc inc mov hlt adc or ja add xor scas jp jl insb gs pop adc adc daa mov or mov mov push pop stos and cltd gs push cmp in lods inc out ss mov push xor adc ds (bad) movsb jo inc dec adc jmp push jo xor adc out mov adc insb adc repnz adc mov pop jecxz imul adc fcoml rcll or cmp inc push dec adc adc daa loopne repz in scas lods mov cmp icebp sub xlat sbbl xor dec mov insl mov cld cmp cmp dec sub and xor (bad) and inc cwtl xchg and push inc adc outsb jp adc adc stos jnp adc out repz mov adc xchg lcall repz stos xor adc sbb ds inc in popl adc xchg xchg push adc mov xor (bad) mov lcall scas xchg or jle lea adc lods mov xor xchg push add es push adc lds push mov lret adc imul repnz icebp loop sbb fsub popa popf adc adc and iret pop push pop js sarl adc sbb lods adc cs adc ja fdivrl mov es adc int sub test das jae repz lods ficompl push (bad) adc adcl fucom adc (bad) push adc mov jne adc mov and or lds mov cmc repz rorb mov adc sbb movsb int3 adc ljmp pop pushf adc pop and adc adc cmp inc movsb fcoml dec jns adc adc scas mov mov push mov jo jecxz scas bound ss adc mov adc and adc jno,pn cli and adc inc push adc push adc jae imul aad icebp popl das and mov fimull adc mov mov dec adc daa adc movsl adc jle adc adc mov jbe adc aad cmp xor adc jmp aam or jno mov out sbb mov lods lahf adc adc dec add mov or test dec cltd adc mov call sub cld lods ja scas int3 adc loopne add call push adc cmc incl fcoms mov popa test cwtl adc lret sbb pop mov push popf ljmp xchg fsub jbe fisubrl adc adc insl fimull xorl mov dec jns adc adc push out push push daa in das (bad) in ljmp adc inc es mov mov cmp icebp dec pop cmpsb push js gs add data16 fstps movsb inc adc add lahf (bad) pop push cmpsb lods pop adc test leave xchg xchg (bad) mov add jp pop adcl mov mov mov adc sahf cmp in adcl lock cmp adcl xchg cmp dec lods adc (bad) mov push lods lds movsl sub or pop add sbb xchg push or or adc aaa pushf out mov in pop call sub sahf adc into (bad) sbb push cmp pushf popa sbb movsb cwtl adc mov adc xchg cmp adc adc adc lea xchg inc mov dec adc (bad) adc scas mov adc jle movsb sub pop int3 xchg adc adc mov dec mov mov xchg adc adc jo jecxz mov adc pop adc add xor imul mov fsubrs push ja test adc stos adc jae les mov adc and notb push push adc in adc xchg mov nop jnp (bad) mov push mov push cmp cmp mov jo jle sub adc rcll scas jns dec adc pop cld nop lcall or bound mov adc js rorl adc (bad) cs cmp mov (bad) jle adc dec xchg out ja adc mov sbb add cmp cltd or shll mov adc dec sub pop dec adc inc cmpsb mov xor loope and adc sub or (bad) int3 stos test adc and leave adc stc adc dec mov pop mov or lret dec je or adc jae mov xchg mov jns adc stos rcll add xchg cmp clc mov push pop lahf popf mov test ss push cmpl loope pop sub outsl pop adc adc pop fadds cltd andb mov das gs (bad) je call cmp shrb or sbb daa (bad) and adcl fsubp rcrl cmpsb sub or adc inc pop ret adc hlt mov pop cmp inc repz (bad) fwait (bad) movsb repz int3 mov insb imull xchg mov mov mov lret mov adc into and adc test adc push dec int3 pop mov pop xchg pop xchg pop jg adc sbb roll adcw clc mov sbb inc pop popa in adc (bad) adc repz push xchg lds adc lahf push adc pop mov sbb int3 (bad) loope cmp mov into repnz jge adc jns adc ljmp subb adc stos mov aas iret ret adc and adc adc mov cmpsb jle adc imul repnz pop adc mov lods popa adc mov adc lcall cmp (bad) jo fistp mov fistl pop adc pop xor jns int3 loope push fistp sub lret mov adc push sub pop inc out mov jg mov inc push adc (bad) adc movl iret std scas push xchg jp fstpt xor js xchg pop jge fwait out test and lock stos jl adc test cmp mov sbb add inc mov adc in lea leave xlat out aaa arpl push icebp jo sahf xchg xor adc data16 adc jl repnz incl mov cmp pop jns adc arpl sti push stc rcr pop adc sarl (bad) js xchg fwait or mov int fcoms push enter adc movsl sbb inc inc dec adc mov mov fcoms adc lret ret add daa mov cmp sbb adc pop (bad) fcomi (bad) cld cmpl pop lret in dec repz insl comiss or sbb mov sub loop lods test (bad) jmp adc ss mov push adc fcoms pop sahf jns outsl mov push mov adc (bad) jbe pop (bad) adc mov inc mov dec sbb or xchg push jmp or adc adc movsl xchg test out or xchg inc push aaa adcl cwtl add adc adc scas mov or je aaa sub xor adc lods adc adc and inc shrb pusha xchg and stos repnz inc push xchg mov inc xor xchg or adc stc adc adc push jb mov mov pusha adc ret sbb (bad) or xchg push mov or orb cmp movsb loope fimull mov in adc pop adc adc xchg imul add xorl adc jbe negl cmpl adc les addr16 adc andnps aam push xchg mov dec adc lds js adc fisubl adc xchg pop adc stos jo mov enter adc shl icebp adc push les adc push adc xchg and popf pop sbb mov (bad) cmp adc jns fnsetpm(287 adc pop imul mov cmp sub outsb (bad) iret mov mov add mov jge in adc jl and lods and or je stos and insl or test jge adc adc adc inc adc test mov sahf mov adc dec adc adc ja add or into xchg add iret repz adc lahf lods in ficompl adc inc adc loop mov mov cmp je scas popa scas lods dec test lret mov sub xor js adc add (bad) push (bad) shll cld loope or push mov (bad) nop cmpb xor push and adc cmpsb in or mov cmp ret (bad) (bad) adc adc adc ss adc mov push loopne std adc push lods pusha adc adc sub (bad) sub mov and push popf cmp js adc mov sbb xor pop add fsubs mov clc adc call pop neg sbb imul or pop pushfw xor adc add dec imul cltd lods sbb dec sbbl xchg mov sbb or jno aam mov xchg loop test adc adc pop sbb popf fsubrp push movsl sbb sti mov pop lods adc add mov jge adc cmp adc and sahf les movsl dec adc or in (bad) iret sti int mov (bad) pop or add add popf adc ljmp repz and mov sbb cwtl pop fisttpl shll dec cmpsb popa xchg xchg shrl and sub ret sbb push inc and or scas push rorl mov dec pop cmp xchg add das adc push cmp mov mov mov leave sahf add mov jo adc adc push nop lock repnz add sub jmp adc into push cmc outsb jecxz inc insb mov adc int3 jmp ljmp adc pushf rcl adc sbb ja pop fsts sub pop mov lods (bad) adc data16 adc insb push adc jmp and call aam scas mov adc sbb xchg jg loopne push fstpt lods sbbl out add scas xor xchg dec pop pusha xor adc fmul push adc sbb pop daa push dec push or mov sub aad sarb mov test and sub mov mov outsl mov push cmc pop sub adc fs sbbb mov mov xchg sarl sbb sbb cmc xlat (bad) inc adc adc xchg roll sbb repnz lahf dec into mov sub adc (bad) mov sub adc xchg adc add stos int3 ja or xchg adc push and adc or pop push adc test inc mov jp mov adc push dec xchg dec push add rcrb xor push push rolb mov push pop sarl sbb pop and pop cmp sub pop adc adc popf mov jp and lret xchg mov xor adc movsb push ljmp loop popa adc repz pop gs or adc mov das jle xchg aad ficompl adc mov ret adc add mov pop sbb mov jmp dec mov mov into in add ja adc (bad) xor outsb jecxz (bad) jno adc repz js add pop scas sti adc fcoms cltd push add cmp jo cmp sbb je pop jl lds adc icebp leave mov lods cmpsl out pop sub mov lds jecxz aas dec mov movsl test std and cmp xor or or mov sbb or icebp ds or adc cwtl cmp mov outsl push adc test adc mov inc adcl in data16 stos in imul add xchg ud1 pusha mov (bad) enter popa mov iret mov mov inc xorl xor adc test call (bad) xor jb movsb sti adc aas jle add mov pop test jecxz jp pop icebp mov fisub call sbb xchg ds faddp adc cmp ficoml iret pop push sbb das rep adc jo push outsb mov inc testl mov test lods imul mov sti mov mov mov pop jp flds (bad) test adc fmuls dec dec pusha test mov push or dec or sbb xchg mov xchg mov adc sbb popf imul mov push popa sub xor repnz xchg pushf fwait xchg jno xchg roll ja adc nop mov xchg pop adc mov or lret pop adc fstps int iret pop fwait push xor ds mov add adc sbb dec sub (bad) (bad) push dec outsl adc xor mov jb cmp lods or (bad) popf mov out xchg shll adc test sbb jne xor jl mov pop add (bad) fsubrs adc cmp adc mov adc jns adc xchg scas sbb xchg popa xchg aad adc cwtl sbb xor adc xchg mov (bad) scas sbb loope mov fsts xchg or add adc imul jae sub adc cmpsl xor test push pop cs adc into push stc sbb movsb lods push adc enter and xor and push jge adc loopne mov andb push xchg adc push pop test roll mov or fs fiadd add push add xor adc imul adc (bad) cld stos movsl pop adc dec pop mov popf jns adc bound arpl mov xchg mov xor mov es setge jno adc je cmp scas push adc xor inc aad fs sub test dec cmp push or and pop adc xor outsb adc sbb repnz lock adc test push push addr16 (bad) lea xchg or jmp loop ret add adc adc inc xor bound cmp (bad) hlt xchg inc stos adc adc dec inc adc clc icebp jb cmp adc jns mov or js lods adc mov ds adc push icebp je repnz jp,pn adc repz cli into jns adc jecxz and xor dec pop movsb lret int3 jmp loopne dec dec jns adc rorl mov mov daa adc adc mov xor into hlt lea sub popa cltd adc iret in mov push and das xchg js pusha adc cmp mov adc popf adc xchg cmp adc int3 jo adc sbbl nop repz stc rcr je ss jmp lret pop movsl call adc pop adc mov xor mov cs adc sbb push leave adc test inc notl scas lods sub dec fdivs xchg adc (bad) mov inc adc add movsb test jns adc mov aam ja jne cmp add or insl dec int3 or scas lods pop adc pop aad (bad) fstl mov jne aaa test mov repnz push adc adc adc sahf cmp ficom pop nop cmp lea sbb mov xor test sub loop mov fiaddl insl mov cmpsb mov test mov pushf scas mov les adc xchg mov into fsts je,pn jl movsb and je jecxz dec les adc cmpsb push adc cli dec xor test adc sub jecxz out into mov adc inc fs and sbb ret sub pop push cmpsl out add inc mov outsl adc pop cmc sub jle adc rorb inc adc push adc repnz mov jp adc adc adc adc mov push dec or lods dec outsb fisttpl cmp push adc mov js sbb test rclb adc call cmpsl jmp xchg fwait (bad) int3 mov or ud2 xorl jmp xor adc mov push xchg je inc adc and adc cmp push adc pop cmp je adc int3 xor popa mov add test stos inc dec xchg ja fs adc pop push sbb dec mov dec mov pop idivl (bad) mov imul jle adc roll orl or out adc inc xchg adc inc fmull leave adc inc dec mov sub je push adc scas mov xlat mov in jle adc inc jb mov adc adc data16 imulb cmpsb push adc out pop dec test repz mov jne cmp stc stos cli lods xor or jne xor adc rcrl adc movsb repz adc fwait push adc adc out adc inc xchg rcr mov int xor fwait jp hlt test push sub ret ror fsubrl jns adc xchg dec push sbb xchg cmp mov or pushf aad push stc mov adc data16 and je bound iret adc cmp sti jns jne jno ss jle adc pop pop aam repz cli stc in aam adc adc xchg ljmp jecxz das adc negb sbb icebp xor pop dec repz push rorb out movsb (bad) scas mov and adc push and cmpsb sub inc lds adc insl ja out push imul and and inc adc idivb int3 adc xchg mov inc adc jns adc jp adc addr16 dec ja sbb lods fisubrl jne lret test adc stos stc lods shll bound in adc jmp repz xchg jg idivl sub std inc pop adc loopne das movb rorb aam jno mov push cli arpl dec and sbb push je or inc scas dec adc pop adc stos adc and fbld sbb mov jno cltd (bad) mov push mov push scas mov xchg jg add or std cmp movsl fcoml psubq sbb aaa popf in repz lock push inc adc bound add in cmpsl or rcrl inc xchg int3 sbb in push pusha add mov cld adc mov xchg adc adc adc cmp sub dec mov sub dec scas out adc adc inc adc arpl loope repnz hlt test adc mov jmp clc adc adc cmp shll adc repnz push adc jg (bad) movsb jne (bad) movsb mov aam mov mov adc out mov insl test adc imul dec inc lods clc adc adc in pop fimul push lea jge adc adc push adc adc shrb scas int pop dec or add mov mov jecxz jne sarb adc cmp xchg jp mov cmc adc or adc popa sbb cs adc xor jp or add nop mov movsl dec dec daa jp adc cmpsl push adc (bad) mov mov mov or imul cmp adc lods mov adc adc adc lret inc or jp adc insb rclb adc add test pop mov jns sbb movaps repnz push mov adc out out mov inc lds pop push adc ss repz mov jne sbb inc adc dec add mov test inc jge adc daa scas orl adc adc xchg jb aam jbe jns repz mov adc lahf lods adc leave pop fs or leave adc dec adc inc gs imulb adc xor add inc ja pop add jns or jg push int repnz mov adc cmp mov nop add jmp adc push popf negl cmp inc or mov mov lods inc push icebp lods mov lds pop inc bound repnz stos insl rcll sbb xor push mov and xchg adc stos cmp ss shrl add sub cmp cmpsb jmp pop or cli rolb jb mov mov adc out out and adc adc adc add adc inc adc ja dec adc pushf adc (bad) mov jo mov jo push mov repnz ja sub repnz adc fcoms int dec outsb mov out push adc jmpw adcl jle mov mov es mov cltd mov adc jnp cmp and icebp into add push test push xchg pop (bad) adc lods dec sub adc sub adc (bad) (bad) cwtl or adc or add lods push movsb fsts cmp adc add xlat lods inc adc adc shll movsb hlt adc adc je orl imul adc cld adc lea int3 sbb add and inc ja mov adc ljmp jp adc mov sub dec xchg pop xchg out cltd push fistpl test call mov adc and flds enter mov sub adc adc jo jl ljmp int3 jns outsb xor lods jnp sub adc mov sub xor bound adc jl insl adc lea push mov bound lds adc ficom fmul adc cltd xor mov adc xchg test push mov mov mov outsb dec adc and pop xchg pop std jne cmp bound adc dec mov scas add mov std dec pop push adc or std adc adc jp adc or sub es mov xchg cmp sbbb adc out fstl push aas lret pop ja aam movsl mov addl loop lcall adc xor sbb (bad) adc test sub sub lret adcl dec aas mov lods pop movsb mov es adc loopne jle mov and adc xchg aaa adc and inc test adc pop push xor shll sub or jg inc cmp pop push adc dec adc pop push sbb jne (bad) adc jno adc inc xchg adc adc roll jle test movsl gs adc push ret xchg test and mov sbb test mov mov adc ficom test adc into stos adc jns mov inc test mov xchg adc mov leave insl scas adc push adc cmpl sbb aam lret repz cmpsb lcall lods push scas mov int sbb xor ror pop ret icebp fwait sub daa mov mov sbb insl xchg iret adcl inc (bad) jmp test and sbb mov mov adc sahf rolb ja icebp (bad) test push jae xchg in outsb mov repz jg mov aas jmp leave pop xchg sbb jge pushf adc loopne (bad) sbb daa outsl jns fdivs fninit test movsb jge fwait sub dec in push shrl mov mov leave fstl inc add sbb mov cmpsb add sub add pop mov cmp add fdivs inc adc cmpsb add mov mov dec stos mov add ret cmp dec mov jmp adc adc pusha adc adc mov inc aad adc push adc cmp lahf int3 jle sub mov mov dec dec pop outsb mov std jecxz adcb repz adc sub adc sbb cmp sti adc xchg mov inc mov mov pop lar push pop adc or adc ja fsts or push pop adc movlps and push shrl fdivp adc test adc cmpsb mov adc mov cwtl addr16 adc orl les popa mov add gs adc mov movsb addr16 es push mov inc sahf dec jns mov push mov add lcall xor mov sbb mov adc setp sbbl pop enter sahf adc rcl adc mov hlt rclb xor inc adc das adc stos lods pop adc and imul repnz mov and loope lret jp adc lea sbb movsl sub adc mov clc adc jns adc jnp (bad) insl push adc adc stos adc adc mov cli stc adc inc mov and mov fwait adc decl add adc test adc and repnz fstps mov xchg inc lahf add int3 cwtl icebp fcoms mov mov (bad) jns mov rcll push pop in inc int3 jecxz dec dec out rcll mov mov cmovne imulb xchg popa xchg shll jl test (bad) cld lea sti cltd ret fwait adc adc push xchg iret xchg or push (bad) call mov cmp inc vcomiss and repz imul and movsb mov xor sbb inc outsl adc and adc jo mov sbb adc xor push push adc (bad) cld push mov jne adc mov stos lret adc pop jp adc adc add mov jp pop push movq adc pop push push leave adc add je push inc shll adc cmpsl xor and inc inc movsb scas adc fcoms adc enter dec adc adc cmp and out mov sbb cld adc jle adc jg push inc push adc mov adc lret add xchg movsl call pop pop push adc mov mov cmpsb or mov adc mov mov mov (bad) cmp sbb test xor sub pop mov je mov ds adc lea sarl adc push adc sbb lea pushf mov test repnz lds fcoml mov jl sti sbb sbb mov xchg and and mov push adc xor cmp sub sub adc scas repz or cs adc das adc out (bad) popf adc adc push cmp cmpl mov aad movsb dec adc mov movsb pop int3 aas jecxz pop lret mov xchg adc cmp test mov pop mov sbb or insb fwait mov sbb adc push sbb adc xchg notb inc rolb rcrb fidiv mov adc cmp cmp insl loopne pop pop adcl adc adc mov fsub into repnz out lods mov data16 adc (bad) adc nop (bad) xchg test icebp cmpsb sti adc fs mov push dec adc loop adc xor insb adc mov ds into daa adc push adc xor adc mov pop lock pop std pop popa lods add stc (bad) sti lret adc (bad) jle je,pn jmp jp mov daa (bad) movsb dec adc mov lcall adc roll mov xor mov notl movsbl or (bad) push jecxz enter mov cmp in inc inc aam jp adc aam stc cmp (bad) xchg inc dec xchg les (bad) les outsb xchg adc dec or and sub ja xchg cltd adc insb adc loop sub jns adc dec loop mov (bad) adc scas adc (bad) fidivrl pop movsl push lahf cmpl fstpl xor adc xor sub and pop adc adc xor inc ja push adc shrl xor adc js push or icebp adc cmp dec xchg adc mov cmp sub mov dec adc cmp pop aam adc mov icebp or bound cmp pop int3 mov ja adc adc insb adc orl ret ja insb cltd adc inc fldenv push in and sti or cs adc adc inc dec adc sub or inc idivl xchg adc lcall cwtl adc dec cli push sarl idivb mov sub ret lods scas adc jp outsb mov push call daa lahf test lds adc add movsl pop inc adc pop shrb adc adc ficoml lahf xchg push (bad) lret jge push mov xchg scas pop push mov repz outsb imul sub adc adc mov add pop ret inc pop adc iret clc fcmovb mov sub lea ds inc push adc test adc push adc jns xchg sbb pop push cltd sub adc or out dec dec mov dec push adc data16 adc test adc movsl sub fs hlt (bad) add lods ljmp out mov les jl mov or repnz outsb add pop and ds adc adc mov mov push inc xor adc shrb xor or pop mov mov push push adc bound cmp adc aaa out sbb cmp pop fwait jl adc pop xchg lahf in pop lcall sbb cmpsb mov mov loope sbb int sub repz sub or test fwait sub xor xchg ljmp orb repz lea push push mov mov mov xchg or lret adc adc adc fcoml imul das into and cwtl outsb adc cmp mov pop cs nop xchg push movsb dec (bad) adc scas add jae stos fstpt in adc adc inc cld mov into sub adc sub xchg jecxz xor push adc push jb lock jg aas pop pop (bad) es adc add adc cltd push add and sbb push mov mov aaa jg lret lea push mov adc sbbl xchg ret (bad) push repz push adc adc popa ja mov pop adc popa movsb cmpsb ljmpw adc stc adc mov adc adc inc adc cmc cmp or jge push fdivl inc mov cwtl adc add cltd jl ficompl pop adc dec test jmp push les cmpsb and pop (bad) mov cmp and or aad movsb mov sbb xchg adc adc out jle adc jge adc jg les test mov and adc add test xchg mov add jns xor ds adc int3 mov jns adc adc imul adc cs cmp mov add push mov or daa int3 sub adc stos adc insb mov mov pop add adc inc data16 or add pop adc scas or (bad) cld adc mov movsb fdivrl add loop pop imul out in adc dec add add psubsb sbb ja fldcw pop add mov (bad) xor bound xor sbb mov push std mov (bad) cmp adc dec adc aad sub add jb sub inc lahf add add push movsb jbe jno xchg int adc adc and and pop shrb dec jge adc outsl ljmp and push inc adc arpl cmc mov in and notb mov adc cltd push cld xor mov into push adc inc jl lret add bound int3 jo les add (bad) cmp scas outsb mov mov out cmpsl lods lods adc adc sbb lcall dec cmp das pop lea sub push adc arpl xor adc ja cmc adc mov mov test adc push mov xadd adc push or adc xchg pop stos adc inc mov mov push nop mov loop pop mov xor sbb scas popa xchg loopne inc in inc adc mov jmp out push repnz and adc movsl xchg adc jae je test in test push or inc je inc aas jmp mov sbb mov lock lods jle adc js sub fwait adc es mov sbb mov imul aad jg lcall imul test in fstl dec jp adc movsl mov sbb enter and jecxz or psubw repz inc xor add dec pop in mov ret adc xchg add lret cwtl imul pushf xor pop push and adc jno fcmovnbe sbb test adc jo addr16 or aaa scas mulb push (bad) mov sbb xor push mov das mov lsl adc scas in outsb repnz int3 jle cmp in adc inc pop adc pop push mov mov mov mov test push adc mov xor jne das inc out lods push js ljmp adc push adc adc adc cltd adc mov shll adc adc insl inc lea or mov mov adc adc add jge push aam in adc dec adc dec adc xor (bad) adc jne adc scas aam adc or sarb push xchg xor sbb mov cmp fcoms pop jns adc sub movsb cmp inc add inc mov subb rcl repnz jle adc adc clc adc popf xchg jne cmc push sub pop adc out les adc pop xchg sbb test rcll cmp dec adc popa sub adc ficoml add push scas pop sub cmp push cwtl or rcrl (bad) add dec lret and push out pop dec dec pushw adc adc mov jecxz push adc sbb adc push fwait pop xor pop sbb clc adc int mov add inc fcmovb mov sbb mov add cmp fcoml jecxz push or js or js or (bad) aam jno mov sbb adc cltd sbb add xor rolb or adc repnz mov adc pushf adc insl rcll xor sbb bound mov push dec adc mov jb scas mov hlt adc insl adc mov mov insl adc fcoms or inc adc push or shrl addr16 das pop inc push adc pop mov pop adc cwtl jl pop ja into fsts xchg mov int pop mov adc cmp xchg adc xrelease test call adc mov adc outsb insb adc movsl adc xor repz mov adc dec jg push or cmp das xchg cmp icebp inc pop into ret popa repz imul adc idivl repz pop ret (bad) notl push (bad) cmc adc jl dec hlt adc sbb mov test push and outsb pop adc and mov cmpsl sub out sub adc inc xchg in xor ficomp (bad) je inc adc fimul cmp mov adc into xchg adc hlt jle adc push inc jge push ljmp and and sub mov test cs stos adc clc mov adc adc fwait mov adc sbb mov cs add adc or sub je sbb adc movsl and lods (bad) mov aad pop inc outsb clc adc xchg shrl ret repz jns cltd (bad) rclb add sahf fstps cld cmc or (bad) mov adc popf adc insb adc notl pop repz xchg adc dec xchg adc test sub je out xchg adc cwtl (bad) and sbb jns adc insl ret inc mov adc xor jbe adc jno push mov iret repz std adc call adc fcoms popf repz and push inc dec lods dec adc mov icebp sub cs inc adc dec jecxz mov jmp imul stc mov sbb psllq stos lods jmp ret jns int3 push and into push cmp hlt mov enter imul shlb xchg scas cltd inc sub adc adc xchg lea out fldenv (bad) dec jbe inc adc aaa xchg rcll movsl fist pop cmovge xchg jnp cmp xchg push and adc jg rcll push adc mov loopne adc pop mov xchg inc dec test mov add push push test call adc sub xor sahf test lods insb adc mov repnz jb push adc mov adc adc les test popf adc sahf repz pop ret mov push adc and das mov ljmp imul inc fsts cmpsl mov adc lds adc sbbb xor xchg cmp mov sahf or ret sub and push adc sub adc bound adc adc adcb lea cmpsb jns adc mov ja repnz adc add adc mov (bad) mov mov sahf adc adc mov sbb pop aas xor xchg cmp adc (bad) dec mov loopne in adc or and xlat rclb lods adc hlt popa popa imul out repz mov cmp adc inc adc mov push cwtl cmp hlt cmp clc jp adc pusha cmpsb outsb adc (bad) (bad) adc push mull test xchg loope jmp pop mov and pushf adc sub outsb jo fsubl adc adc sbb xor mov adc mov out mov xor inc inc cmpsl adc aas mov push pop dec ja outsl adc data16 fs jo fisttp es cmpsl cmpsb movlps rol data16 add cmp jp adc adc test rorb dec adc push les inc push mov and mov push mov xchg call fstl out inc fsubs adc fldenv fadds xchg add push aad adc mov cmp adcl shlb out sub pop sub (bad) jmp jmp adc cmpsb adc enter imulb adc fucomi mov add dec adc les movsl aad (bad) xchg sbb pop addr16 adc movl sub mov and adc mov jp rclb mov adc loop and adc movntps cmp adc lods ja push or inc gs adc xchg dec inc das adc pop cs cmp mov jl sub adc cltd mov adc int pusha dec dec lods mov dec push mov sbb (bad) dec adc pusha cmpsb dec adc sti loope pop insl adc adc out shlb icebp mov sbb push mov dec inc xchg adc pusha aas sbb icebp mov (bad) mov cwtl fnop data16 lret push stc xchg cmp xchg (bad) lea adc xchg lahf stos mov test mov adc xchg cmpsl pop xlat xchg ret imul sbb and iret icebp jle mov lcall adc test adc add outsl mov negl gs dec mov sbb fdivl dec rolb or inc adc imul mov xor adc xchg dec jecxz push out mov mov and vmovsd divl frstor adc jl mov and adc incl stc rorb adc jecxz insl inc dec fwait xchg and data16 adc mov movsl (bad) dec or inc out adc into ja mov mov lds mov mov mov add dec xor test adc xor divl dec call jg enter add push adc and sub adc icebp enter xchg das push mov insl les or shlb and push mov repz adc imul adc insl mov (bad) popf and adc hlt pop xchg pop add (bad) fwait jnp adc add sub stos lods add mov cs push fwait sub loop mov dec push add mov mov or xor idivl adc dec jmp adc pop incl adc rcll (bad) icebp je pusha add jb cmp repz cmp adc insb adc jl pop adc xchg sbb and mov aam sub add nop cwtl fcomps out xchg dec sbb adc ljmp lods mov dec je nop or sbb pop adc mov sahf mov (bad) leave mov and popa pop adc fwait scas popf mov mov pop stc in adc jecxz sbb adc enter jns adc mov and stos mov aam fsts outsl adc xchg test nop xchg (bad) mov popf lahf xor adc pop adc lea adc mov xchg or aad int sbb call adc loop and or adc es bound adc cltd and outsb mov mov movsb hlt adc adc fdivl (bad) adc adc adc sub adc adc adc stc adc mov adc adc outsb ljmp scas mov iret cltd pop adc in test mov jecxz das mov movnti int3 jecxz mov aaa ret icebp lahf push pop pop adc pop xlat ljmp roll cli fidivrl mov mov sbb push sbb (bad) jle (bad) pop data16 adc jns fstps xchg fadds jp jl in cmpsb xor sub adc bnd movswl push fsubrp xchg dec movsl mov add sub call mov repz mov adc mov shll sbbl sbb movsb pushf adc xor xchg cmp xchg and cmc scas ds adc jae stos inc adc push adc adc pushf adc cmp inc subl (bad) mov repnz sti mov je scas pushf scas aas dec aam fimull adc push xor xorl xor adc adc aam sub es (bad) lds jmp cmp fmul pop in adc add adc mov or lret fcoml pop outsb and insl rcll repz pop push inc xor ret gs ss adc inc push adc mov shlb jg popf sbb xor pop pop int3 inc adc fldt adc test addl adc fneni(8087 (bad) jmp (bad) scas test scas or loop and xchg adc mov nop movsb xchg mulb scas cmp pop jle adc mov sub test push add sbb mov push enter adc adc inc adc aas movsb adc lea cmovnp cmp xor mov nop sbb adc (bad) mov stc mov inc pop adc adc fisttpl adc xchg sqrtps push adc xchg pusha jp test cli lods add mov adc (bad) adc push xor adc adc xchg rcll adc xor push adc fsubr pop mov ret cmp es movlps cli out fwait jp xor push inc ljmp js inc adc pop (bad) sbb ds push xchg adcl sub iret adc lods pop adc shll mov jmp into lret into mov rep ret gs cmpsb (bad) push adc add cmp adc push adc adc pushf adc jg or mov sbb jmp pusha adc mov xor lahf adc mov push jo xchg testb arpl repnz sbbl rcrb push loop btc cwtl xchg std data16 int3 push rorl add call (bad) rclb dec sbb out je (bad) leave mov adc outsb and adc mov fiadd cmc xchg (bad) xor adc mov dec outsl adc and adc lds inc rorb dec mov jo cmpsl jg mov adc movsb dec mov adc fs adc cmpsl adc into or dec rcll push adc sbb inc jb push jge adc mov sub stos mov fstl push mov adc push popf outsl (bad) jg push fdivrp jecxz movsl pop data16 adc nop addr16 or sbb fwait in dec leave neg or popa sub sahf or push add and xchg adc pop loope and in jecxz jo mov ficoml cmp mov dec outsb insb mov adc fdivl push (bad) hlt adc test jb mov pop sub sbb mov test mov dec xor cmp inc mov push scas and adc adc dec adc das adc and test adc movsl pushf cmpsb dec adc mov sub adc or dec mov add mov lahf adc test dec mov or push outsl imulb push cmc xlat cmp adc out jle adc daa adc repnz xchg leave adc adcl and (bad) mov sbb push sbb in xor mov roll inc ss add jecxz mov adc movsb or sub lret and adc sbb cmp shrb out jmp xor sbbl adc adc popf mov xchg mov xchg lds jb mov adc adc fstl cli jp adc insl jb mov push notb aam adc or outsb fcoml shrd pop sysret adc sbb push mov adc push sub loop insl sbb sub xor das nop mov and adc mov adc and or mov mov adc adc adc movsl adc les adc xchg adc adc mov dec dec mov fsts rcll xchg movsb pop jne notb pop adc xchg out inc mov (bad) jmp mov mov pop popa adc ret dec mov js push cmp mov sbb bound sbb mov xchg adc adc hlt mov dec adc (bad) adc imul add icebp int mov mov adc insl adc push adc imul jnp cmp sarl hlt mov adc pop lea (bad) insl pop adc adc scas adc nop leave aas mov lds rol popa add pop adc (bad) movsl or adc adc jb sbb ljmp cs (bad) cld adc add adc (bad) mov and adc dec adcl mov (bad) out adc popa adc adc test cwtl adc xchg in adc mov mov adc daa inc pop mov adc adc dec inc (bad) or loop jns adc insl sbb jne push pop pop mov cmp cmp adc adcl cmp adc out adc adc adc (bad) pop into and push lcall es aas dec pop scas lock adc popf popa fsts imul inc sarl sbb pop lds xchg loop push cmp stc adc dec adc adc test adc mov cmpsb and adc repz adc int out adc imul insl adc xor sub mov lea movsb inc push inc es adc (bad) ficom test mov sbb jge pop adc adc mov adc je int3 repnz test adc pusha (bad) lods fs mov push adc or movsb insb adc mov inc out adc ja pop push adc in mov mov adc xor ficoml sub adc dec insb stos je or jbe xor mov push inc dec out adc fildll adc or cmpsl mov mov addr16 adc push adc adc shrl cmp mov adc dec adc sub in sahf (bad) xchg inc jp adc orb mov pop adc pop mov mov fwait lret mov mov mov jge pop dec (bad) mov push adc lods divb cld adc cmc mov adc adc add dec fistpll adc lahf cli pushf cmp adc adc xchg add lods dec mov leave adc cmp mov xchg adc popa test adc inc or or test adc sbb (bad) test mov stos out mov test lcall xor push popf adc mov adc adc sub adc mov sbb push loop lret or ja lods out aam (bad) xchg inc adc jb xor mov mov dec adc push and adc fwait lock pop sbb add nop adc cli fldt je or adc (bad) adc insb shrl adc popf adc call movsb xchg je pop and loope cmp sub ss adc pop scas adc into mov jne aad adc nop xor je int3 or (bad) xor sbb and jge adc sbb (bad) enter sub add adc ds ss fsubs adc les adc js movsl and adc dec adc adc adc cmpsl mov pop mov hlt mov push rcrl jb xor add xchg xchg mov adc xor adc jle mov adc pop dec cwtl mov xchg mov push fisttpll fwait cwtl fistl mov (bad) sub inc add mov adc (bad) mov mov or and mov (bad) pop pavgw adc adc cmp pop and sbb xor sub adc xor xchg ss adc adc adc dec adc fstpt cmp or ror cmpsb push test nop lret xchg or mov inc test test cmp mov adc sbb bound adc adc push adc adc mov sub and popl adc das xor jle fsubrp sbb sub and bound adc lea ja adc test adc cmpsl mov pop push adc dec outsb adc int3 adc sbb mov sbb movsl pusha adc adc adc xor adc or pop popa xchg adc mov hlt mov movsb decb mov adc adcl lret mov mov movsb fsubs push mov pop in (bad) and dec adc or mov mov into lret les adc rcll out adc (bad) jo (bad) ja (bad) int3 push adc fsubrl adc push dec add sbbl fs (bad) push cmpsl test pop adc ret xchg cmpsb push adc ficoml ficom mov sbb mov jge test adc dec push mov icebp xchg push pusha clc mov sbb gs adc mov mov mov lea jmp add add xchg shrb das cli push adc cmp xor jno push notl out loope inc lahf adc adc lahf adc xor mov aas dec xor sub xor xchg adc (bad) loope lods adc dec (bad) lods mov rorb insb adc inc dec and repnz jb test adc adc lcall mov mov lods xchg adc js (bad) out gs add es and aad push pop adc push dec (bad) into repz jmp adc sbb in mov (bad) jns (bad) sub adc dec in sub inc mov cmpsl mov sbb (bad) mov mov leave xor adc add inc mov mov adc (bad) mov movsb cmp repz and out lods mov add shl xchg xor dec jg push lods inc adc adc mov cs adc test dec pop adc xchg pop push cmp xor insb and adc in push dec adc in in sub pop add mov adc dec adc mov rclb mov add adc in adcl adc repz push repnz rclb xchg xlat adc or xor test adc adc pop movsb hlt adc adc push push inc adc or xorb mov mov xor movsl inc xchg adc adc rep test pop add xchg adc ret mov jbe insl mov in adc mov add in push adc jns repz adc jl sub adc adc or orl inc push adc push push add shrl lret inc repnz test xchg pop jbe xor stos adc pop pop mov push int3 sti pusha lock adc mov ja push pushf adc gs and sbb inc cmp xchg adc adc adc js fwait adc push lods test adc mov mov or mov adc adc jne dec sbb or adc ret test push sub (bad) push and mov mov adc cmpsb dec or data16 cli mov mov or les adc adc dec jnp adc lcall movsl int stc fs adc rcll in mov sub mov jle adc add push adc out cmp cmp mov or insl add inc cwtl in xor adc loopne imul test adc ja xchg adc inc adc les (bad) adc jl cs adc mov adc lret insl mov adc adc mov sub adc or push xacquire dec lock loop arpl adc icebp js cmp adc stos jl dec cwtl or adc mov cmp adc adc pop notl pusha mov aam xchg push xchg adc adc add adc jno and roll out push adc inc inc adc mov inc mov sub mov mov ja aaa xor push pop push lahf add mov cs pop ror cmp push stc decl call loop stos and rorl inc inc adc add test dec mov and mov out (bad) data16 adc sbb repz repz mov pop (bad) or call int3 iret adc adc je sub int3 das adc fbld gs (bad) jne adc jmp and inc (bad) add out mov xchg mov nop xchg ss adc cld adc mov adc adc jle adc jnp cmpsb jle adc adc adc cmp jge,pn mov or int3 (bad) sub sub cld push sub lods out jge adc adc inc sbbb adc or adc cmp adc add jecxz fildll adc jmp adc cli mov push cld adc pop pusha push insb adc mov mov nop in mov inc xchg mov adc jp adc and and adc repz jl pop dec xchg (bad) insl inc fstl mov bswap mov test jae adc (bad) hlt xor cmpsb popf push bnd push inc inc xchg lds adc pop and adc daa adc and adc xor cmp aas mov ret cmp pop rorl xor pop je adc dec fcoml pusha les pusha dec ret rclb icebp insb adc inc mov adc fisubr adc mov push xchg repz test in sub adc dec jb sbb adc iret mov add fimull sub mull adc int pop movsl xor ljmp fadd adc jns xchg leave inc or std adc out jl sub pop xchg sbb aam jns push adc mov adc adc adc es adc sbb adc int3 xchg cwtl rclw mov pusha pushf into pop jb jbe pop jo loop mov popf fwait movsl outsb adc iret (bad) into repz or adc popf adc adc popa mov adc ds outsl int3 int xchg mov and sbb repnz push xor fwait adc dec aam jno jns aam xchg adc addl das adc aam repnz out mov adc adc lods int das test xorl test bound seta scas xor adc jge adc sub adc adc (bad) fdivr add mov mov push in mov repnz adc shlb and add (bad) lock inc (bad) push adc adc adc sbb pop adc scas add jo rcll push adc adc jno das gs fcoml add dec mov jecxz fsubrl (bad) test and fcoml push or movl push pop (bad) sbb fwait cli jns out sti (bad) adc imul dec lret adc ja bound add test mov push (bad) dec test enter dec adc les mov inc mov mov out xchg int sbb lods jno sbb fwait or pushf fldl fimul mov mov scas arpl lret fwait out rcll mov stos in test pop outsb adc dec jle add xor push sub out mov xchg (bad) mov fwait je sbb push xor shlb adc jl pop push int3 hlt adc adc lcall lret add stos sub adc jg test cwtl popa lods adc xchg fiaddl ljmp leave hlt adc popaw mov xor push pop push jmp and dec or xchg mov adc xchg test fwait imul (bad) icebp xlat mov pop sbb loop adc xchg mov imul push add jne dec lret adc (bad) icebp jno pop push adc fisttpll scas mov insb das sub mov imul stos icebp es xlat inc mov xchg out mov add out and inc lods dec xor add sub add mov fisubrl add sub push cs adc fcmove adc adc into mov fisubl xchg rcll shlb xor fwait movsl cmp cmpsb fsts pop push adc out inc adc adc rclb push mov and and adc out adc dec insb repnz pop arpl adc mov xchg xor cltd fadd xor gs adc sbb xor addr16 and inc or push adc adc or mov jecxz popa jb jae mov adc or adc push inc fldenv pop outsl pop mov insl xor adc adcl ljmp cmp adc adc aam adc popf adc push adc jl xchg mov dec inc push adc push fistl in lea mov (bad) adc mov adc push (bad) sbb inc test mov jecxz sub pop pop out mov xchg mov int3 push fwait out and pop arpl in push fidiv test pop adc bound lahf pushf ficomp clc adc mov adc xchg imul lahf les mov adc jmp xor test cmp mov adc xchg push mov pop sbb cmc gs xor ficom mov push adc mov popa mov idivb adc aam int3 cmpsb test pop adc adc mov sbb mov call pop sbb popa fcoms cmp out outsb lahf adc or aas jmp cmp xorl push cmpsb add adc mov in pop adc xchg jmp and arpl dec pop rolb cmp mov adc scas cld bound mov jle adc and adc pop adc mov repnz ss push adc push mov int jne icebp mov jecxz aad std adc aaa push out adc mov pop mov sbb sbb adc sbb icebp idivl mov scas sub insl pop mov mov adc insb xchg or (bad) nop sub stos inc test push imul movsl std adc mov nop insb clc call sbb pop sbb fild adc push mov jnp out jmp jbe inc (bad) or cmp jb pop xchg adc cmpl scas mov icebp mov mov jns push adc adc inc outsb sbb das push ja pop lahf adc dec mov sub adc lret popf adc movsl mov pop dec mov stos subb mov daa jge jle sahf or rol mov leave out push and adc imul pop adc out mov jno adc fldcw test lea fstl pop test test andl mov popf into sbbl adc pop pop mov xor loope (bad) pop adc insb or mull adc fcomip mov test dec adc test shrb xchg add imul cmpl lods stos adc out adc dec mov jbe mov mov jp adc jp adc pop adc xor push sbb jmp xchg jmp push iret mov imul jmp lods xchg push sti (bad) lods mov das jecxz mov mov xor jle adc or add clc add xor sarl (bad) sahf movb shlb xor adc adc dec adc adc (bad) insb inc xchg and push stos sub adc jns adc lods xor clc adc sbb sub adc insl cmp or int mov add pop xor int3 mov or movsb adc pop fmull adc fcompl pop jle movsl mov imul xor and adc mov mov fdivs jno pop pushf sbb mov cmp xor (bad) test jle fwait xchg jo fidiv adc popf loope in dec pop adc inc sub mov rcrl mov movsb popf hlt lcall dec or dec fwait icebp aaa repnz cwtl sub out adc pop push dec lret outsb repnz adc push push mov imul mov cs adc jmp adc xchg jmp dec popa adc scas push adc sub adc push lret adc adc scas pop xor aaa mov call xchg in adc cli repz lds aam adc sahf adc add repz fimul xor les mov push ret sub adc dec mov dec lahf lea sbb test push imul adc add enter dec adc cmpsl adc cmpsb mov and mov adc lahf movsb imul fldl adc jle push adc lods adc pop pop lahf adc jmp enter cmp xchg sbb cltd add adc push cltd je pop pop push adc lcall leave pop pop xorl dec test push push out xor lahf mov or add xchg inc shrb dec mov int sbb xchg or sbb add lret sub movsb scas mov adc (bad) sti mov xor jno push xorb dec adc mov adc les data16 push adc adc scas bound les movsl dec adc test out push test popa add (bad) pushf fldcw lods cltd adc adc xor lahf fidivrl loop repz or scas mov call push test clc sub dec adc je pop pop mov adc or jp out mov adc sbb fistl adc mov les inc adc xor adc adc or (bad) jns enter jmp or adc cmp xor adc fs sub mov push outsb in aad xchg adc (bad) mul xor mov adc data16 (bad) xor jl inc fidivr adc (bad) fldcw cmp cmp and adc int out les adc xchg dec xlat mov insl adcb jmp jecxz addr16 or in adc imul push adc push adc jp adc cmp adc mov adc adc xor xchg dec jp adc mov test mov insl ss adc and adc inc setae adc insb adc mov lods lret mov add lods jo sbb adc sbb jl pop movsb cmp sbb xchg and daa in repz mov or leave lahf adc or xchg or or xchg cltd in sub std adc xchg movsb imul repz adc jns adc jecxz rcrl pop adc out mov dec jecxz jns adc das repz cmp dec adc cmpsb dec adc int3 and std adc cmc sub out dec adc popf int3 mov scas rep fmuls insb ficoml inc xor inc sub out lods sub lret (bad) sub icebp gs ror adc das dec call xchg scas mov adc loopne scas adc pop lret lea (bad) lcall outsb inc adc adc adc adc adc mov cmp cli enter push adc lcall jecxz or repz bound adc cmpl (bad) cmp push negb xchg cmp inc fldenv push adc pop lret adc mov (bad) cmp dec mov test adc inc adc popa in shlb lds cltd adc icebp test adc call mov pop test adcl jae push xor push sbb sbb adcl inc rclb sbb cmp xor scas mov std test adc adc shll ja mov adc push adc jns adc adc addl push dec xchg xchg xchg setns jge (bad) adc mov adc mov data16 adc jl mov (bad) or mov add jecxz pusha xor adc inc adc adc adc test adc gs pop or rcrb fwait mov cmp mov cmp fcoms mov bnd imul adc or cltd mov int pop jmp dec adc pushf movsb lahf adc shll xchg cmpsl inc test add inc int push push xlat sbb mov adc movsl jge dec icebp (bad) jno stos or in not iret mov adc stos imul imul cmp and dec push jge adc jno push nop cmp leave jl or xor jo sbbl cs mov or cmpsb dec adc dec adc xchg shrl mov inc pop adc adc adc mov adc jno mov xchg dec adc dec mov push inc push adc mov mov adc cwtl adc dec adc jno add xchg test xor loope cmp jmp adc ficompl adc pushf push lahf js adc add adc js stos inc inc adc dec mov out mov sbb sub bound push mov push rclb and mov pop (bad) in in mov in add lahf pop xchg pop xchg xchg jo cwtl jns xchg pushf int mov sti adc push dec repz add sbb cmp xchg xor mov (bad) and adc sub xchg (bad) cltd (bad) pause cwtl adc fcomi jle sub adc mov adc ds xor out lahf (bad) inc cli adc adc fcompl adc (bad) sarl inc and adc push movsb add adc cmc mov outsb repnz jp imul and push cmpl bound cwtl fldenv and push int or or stos push repz jmp adc mov sahf jbe push jnp sbb cmp lods rcll (bad) sti fsubrs setno mov sahf xlat xor dec adc mov bound adc lcall cmp cmp shrl jae xor test adc test add xor bound pop adc lcall adc adc lods repnz and xchg adc mov mov addr16 adc jbe sti fdivrl adc push lods push mov scas rcrl lret mov add adc bound into adc (bad) movsb inc sbb xchg xchg loop into push or push imul jp adc jmp adc push (bad) pop out cmp push adc push xor add cmpl cmp or in mov cwtl mov aad clc adc push jecxz inc lock pop adc inc inc adc pop lret xlat adc out lds adc xlat sub in repnz dec push jge adc test js mov and or pop gs adc ja aaa es (bad) adc add bound dec push adc int cmpsb mov sbb daa sub data16 dec adc adc xchg sbb icebp divb adc (bad) xor sahf adc fdivrp (bad) cmp adc adc bound repnz jl sbb sbb adc cli sbb cmp sub (bad) notl in and or iret mov xchg dec pop int3 mov jecxz test js sub stos aad adcl out pop mov dec add or int lods mov int es in loop movsb pop adc test cmp call inc push dec mov push jge adc pop mov sub dec mov mov roll mov mov inc out cmpsl adc mov inc adc mov pusha and stos adc popf negl sub adc mov xchg repz repnz call xchg jecxz push mov cmp pushfw xchg sub into adc mov shlb adc cwtl adc loope fucomip dec fisubl adc mov pop sub repz adc jne rcl adc sub xor sbb jecxz ljmp out pop adc popf movsb push (bad) jb push adc adc js and adc pop push pop add inc xor sbb mov and adc call xchg popf push (bad) pushf push mov je outsb adc inc pop xor idivl adc jge popa jns adc divb icebp test fld clc cmpl in adc js imul and inc iret and test inc inc int int3 test inc mov leave sub add and lea mov sub push and sbb (bad) cmp mov inc xchg mov dec shll mov mov rcrb push adc adc int3 movsb sbb fisttpll adc pop lret or jb xchg xor adc jns adc pop add jnp shl mov push clc push pop rolb (bad) mov add test data16 popa dec xchg mov adc adc adcb or ficom movsb rcll mov adc stos (bad) outsl adc test adc rolb or sub (bad) call loop xchg cs inc adc in add js arpl lds out sub inc fwait loope sarl cltd or nopl call fstl mov ficom bound clc adc jp adc adc arpl adc push sub mov push stos jg sbb xor cmp sbb repz fcoml int3 in adc adc aam int3 xchg adc inc push adc clc push insb test in sbb stc mov mov adc dec adc dec adc mov fistl imul ret ja jle loop inc out es sub mov adc adc adc adc rclb stc adc insb adc or ss gs adc loop (bad) mov mov adc and mov fwait add (bad) pop je ffree cmp inc mov inc push adc mov lds in shll sub xor fbld gs inc mov enter adc (bad) mov cmpsb roll out adc push (bad) sti push pushw int3 (bad) jl leave adc sbb push xor mov adc ret pusha dec gs cmpsl movb push and aaa je xor xchg inc dec and adc mov test mov xlat bound ss xchg adc adc adc and adc jge xchg cmp ja stos int3 inc adc mov je cmp push ret sarl sti adc jb xor test mov mov out jns cmp adc cmp push ficoml jle mov sbb jno mov xor (bad) adc leave mov adc (bad) out xchg inc mov mov cwtl pop adc adc mov mov push dec ljmp fldt push adc adc inc enter pop adc jl or shll mov out dec or insl call pusha push (bad) cltd push out sub mov mov adc movsl out adc adc mov pop mov adc (bad) ja jns adc fcoms push adc push adc rcll pop adc sub xchg (bad) cs adc std and int scas fcoml cltd xchg mov jl add push sub sbb das test dec adc or jmp add jecxz and adc (bad) enter add mov fwait lods fwait jl adc fistl stc sbb insl (bad) shr sbb adc (bad) adc adc pop or out or outsb xchg pop jge std mov shr (bad) mov cmp and inc stos adc jp adc push mov sti rolb test mulps repnz pop adc dec int3 fcmove pop adc or pop xorl push negl fstl ja adc adc sbb lods movlps sub aas adc lds adc inc cmpsl andl mov inc push and mov adc lods loope pop xor push cmpsb cmp in adc (bad) push stos pusha adc enter xchg cmp out sub pusha push pop adc mov push dec sub loope loop notl adc xor xchg movsl jb lock fcoml sahf jo ficomp xchg ljmp sbb mov pushf mov pop mov push cwtl xor cmp ficompl push fdivrs or add dec mov adc sub adcl or mov mov popl mov fwait popf mov mov xchg inc xor adc jl jmp adcl dec lahf xchg sbb fidivl adcl inc jle mov pop insb outsb imul add xchg push push adc das and cs sbb into mov mov lods mov popa pop adc not and push or leave data16 mov push roll cmp lcall mov push lret sbb adc cltd sahf adc cmp hlt mov rcrl mov out mov jmp outsb pop cmpsb xchg test lret mov mov in adc xchg push (bad) fs mov shr shll mulb xchg ret test mov adcl pop push jg jl adc pop push movsl cmp mov push dec adc adc fldcw leave (bad) mov mov mov mov pop mov movhps aad arpl adc push shr push movsl jge adc mov add fwait pop fwait pop mov sub adc (bad) jnp aas pop fstps mov fcmovne decb adc sbb mov mov cmp mov imul or sbb movsb rcll loope add les adc js call mov mov mov sbb cmp fld fimul xchg lods (bad) mov pusha cs adc adc xchg enter std jmp mov add repnz adc adc lcall push jle sti pop add loope add lcall add int3 fxch fwait inc add movsb enter mov scas sbb negl push inc dec pusha or mov xor add mov lods add enter mov mov xchg mov (bad) adc data16 stos pop stos sbb push add ffreep pop (bad) je fdivs into sub dec lods mov into adc es sahf movsl sbb jnp fmul jp mov pop push jecxz mov mov push movsl movsl in adc sub or cmp adc push dec adc adc push call data16 adc pop adc sbb xor xchg imul adc adc push add aaa mov fnstenv cwtl fsub push xchg (bad) sbb call xor xchg dec jo fidivr dec dec or pushw push bound jge push (bad) es push cmpsb hlt mov dec ret pop (bad) pop dec push mov adc pop sbb fsts les dec (bad) repnz or sub and adc push adc jle adc xchg arpl push mov adc data16 adc xchg ss jle iret lahf les push sti sbb icebp inc pop and loopne push mov icebp cmp and pop sub mov insb pop mov call mov add adc xchg add test pop adc rcrl fstpt adc test imul sti jge pop sbb pop (bad) (bad) fidivl jb mov pop dec jnp push mov movsb or es enter shrb pop mov push jle sahf sub adc dec inc adc rclb int3 pop lret inc adc dec xchg pop insb push add add lods xchg adc push jb adc mov pop push mov test push sub inc lods clc adc or push cmp dec fs data16 adc fildl cmp mov jg test add mov es adc mov roll mov xchg ret jg dec (bad) cmp adc fstl sbb push fnop push or adc add push pop xchg xor jecxz adc add addr16 js push inc cli adc jge adc push pop push inc fsub adc or adc lea mov aas inc mov shrl test out in adc sub mov adc mov push (bad) cld adc mov pop inc push adc out mov adc dec adc lds sub cmp adc mov push or adc xchg push mov add ret mov adc bound xchg adcb adc outsl loop or sti pop mov pop adc lods int add imul sbb je xchg sub scas or stos adc stos pop int scas negl push mov scas or lods add xchg dec idivl sub mov mov test mov mov cmpsb mov cmpsb sti adc (bad) out sbb mov jp cltd neg adc pushf pop mov out jns mov cltd sti mov sbb push push les adc dec popa or dec lods shr jae fcoms je lret pop scas or movsl adc (bad) loopne ret jle call push (bad) adc test sbb scas popf push cs xchg pop aad pop incl adc daa xor adc dec push add nop or or icebp out cwtl inc test stos imull mov setns jge arpl mov int3 or pop adc inc lods insb adc mov push add sub mov movsl dec adc fdivr mov movsl lcall pop aas cmp fs mov push pop je fcoml mov sahf pushf inc mov jb inc test ret sbb mov imul lret loopne sub add outsl test fiaddl cmc cli mov addr16 pushf jp pusha or adc xor push repz fisubr cmpsb mov ss movb cltd sbb cs adc fist imul gs adc aas stos mov push loope and push mov adc dec ret inc fincstp (bad) stc fs fisttp adc jl repz loope xor std adc mov inc dec dec cmp sub adc fdivs inc adc adc cmpsb out sub stc outsb lea adc out (bad) sub adc daa rol pop add xor dec dec or scas stos dec push mov or pop jb stos push pop int xchg xor scas imul jo add adc adc mov int3 push push es dec and mov jne roll mov or cli jmp mov lahf fsubr adc dec daa mov inc decb mov xor fwait push cli ds mov repnz adc push jecxz adc jp mov hlt push push xchg adc add leave jns in (bad) sti adc (bad) jp adc pop data16 test popa sbb nop cwtl push adc ja pop lea addr16 adc sbbl scas cmp adc pop out adc dec adc inc popf adc adc lds jle (bad) sub xor imul xchg dec (bad) test adc and sub ja push and jo (bad) push adc sbb push adc jne xor and sub gs adc xchg pop fwait bsr rol xchg adc cltd jmp int3 mov bound add adc adc adc dec inc mov data16 mov or bound pop int3 and adc xchg mov jns jae notb or inc mov test mov rclb out mov (bad) repz test or push adc jp adc inc (bad) adc into cmp fidivl fs popf pop sub adc aas fisub aad pop pop jle aam adc mov lret nop mov push test mov xor movsb jl andl mov out lds scas addr16 addl cmp cmpsb (bad) adc cmp test das sub loope dec subb and push adc push repnz cmp movlps xor sub cmpsl fcoms pop outsb xchg por ljmp mov mov mov mov fs add push adc adc mov out push adc mov jecxz adc xlat push pop adc aad cmp test and repnz rcll sahf (bad) add push jmp fcomip out sar adc std xchg jge mov fnstsw les adc popf push aad stc fstpt mov fdivs sbb scas mov pop int3 jmp repz xor mov push or adc dec daa shlb ret mov inc mov adc xchg inc sub scas subl mov mov mov movsl adc push cmpsl jbe push (bad) bound out arpl and adc push (bad) lock mov repz pusha push add xor adc hlt and adc or sub test and adc lcall mov loop (bad) mov add lea cmp adc dec adc xor mov adc xchg push imul or outsb cltd (bad) cmp jle hlt fdivs mov cmp cmp cld jp sbb pop movsl cltd and sub adc add cmpsl daa dec and sub rep (bad) and inc into sub adc sub dec adc add xchg add repnz pop lods and or in mov jmp ljmp push push aas icebp jge jmp pop jp adc data16 andb mov add sub popf js cmpsl xchg mov leave and int and add adc imul lea test jmp adc mov sbb adc stc mov pop mov stos nop out movsl jns repnz adc cmp jne je or aam adc imul mov movsb inc adc adc jbe adc mov cmp mov out icebp sub cmp add inc and inc ret adc scas int3 jb cmpsl dec dec adc in adc push adc adc sbb mov mov cmp push pop fdiv mov adc adc into out add repz movsb movsb sub je inc mov ret jmp dec add addb das jne cmp std push push and ds pop insl std adc imul adc hlt ds das sbb shll std lret shlb add or push mov (bad) icebp lahf rol sbb (bad) bound scas inc adc pop ficoml sbb add cld dec jbe (bad) (bad) dec sbb sbb adc int3 popf add movsl dec imul cs adc jns xchg mov jg addr16 shll sbb daa dec loopne loope es test mov out inc mov (bad) repz enter dec mov mov jmp add adc (bad) dec movsb and mov stos fstl xor scas adc inc mov and adc mov aam cmp ror push dec sahf adc es cs pushf bound inc jae add push mov fst xor daa push jge jno xchg nop adc movsl std adc mov adc into add out mov xchg adc movsb fcoms cmp adc inc jo imul loopne je ljmp or cmpsl cwtl movsb mov in nop jg int3 inc adc or lods das adc and mov add or xchg out mov and or in in xor sbb mov (bad) in adc leave mov xor adc aad jb mov inc xchg jmp in psrld adc fsts sbb je mov lret xor adc xchg or pop push sbb adc aas repnz mov shlb scas or leave stos adc and adc jl add sub rcll ja jmp jbe fisubr pop mov mov adc fidivr scas adc add stc jle repnz jo add data16 cmp adc pop jno ficom xchg jae cwtl adc ret scas cmp adc xor loop xor push lods movsb fimull adc out inc adc sub adc adc inc adc lds adc outsb pusha adc addb in mov (bad) ja notb (bad) mov stc sbb sbb jnp inc fsubp adc push lret cwtl xor jns bound inc adc adc push sarl test adc mov adc scas ret cmp inc xor inc and sub or mov lea repz cld in aam ja movsl sub and iret cmp inc (bad) adc inc roll or push into shll adc and int3 xchg adc in jmp adc jmp inc xchg out movsb ljmp rclb jge popa fist bound xor jl jae inc jne dec adc stc cs inc (bad) inc adc inc aad sbb shrl (bad) adc mov adcl pop insl (bad) into inc adc js mov imul pusha mov es adc pop test adc les cmp jno mov push lahf popf sub enter or xchg mov fwait (bad) xchg inc in adc pop imul xor inc lret add mov add pop xchg sbb xor stc adc lea scas mov fisubl push dec sti adc push adc sub mov lahf dec add adc xor lret cmp jns adc jmp and dec (bad) mov out jb ds out inc xchg movsb movsl adc mov xchg dec xor xchg outsl and adc cmp adc sbb loopne jns adc jns adc mov pop loopne cmp lods cmpsl je test or call in adc dec cmp cmp mov cmp std pusha inc lds leave push adc push insl adcl sbb xchg push lea bound jecxz bswap mov adc jbe cmp push scas mov cmp pmulhuw add pop stos adc adc push jp cltd jb add in lock push pop sbb add not sahf popf (bad) adc pop mov int3 jmp adc insl js ret stc mov add daa jns adc mov or mov repnz adc adc mov adc lods pop adc adc xor adc add push out daa xchg lret xchg mov je mov fstl and xor adc or push lret xchg in adc jb icebp sbb cmp mov adc dec pop (bad) mov adc scas adc cmpsl lea outsb mov inc adc and push adc aad dec adc lods lret dec ljmp mov in cmp clc adc push fwait negl stc sti gs adc mov dec pop (bad) mov unpckhps fstl mov sub adc sbb jge jne ss jae push and fsubrs xlat jnp jae mov sub adc repz repnz and subb xchg adc out mov dec add push and popf adc adcl dec fwait cmp add adc adc repnz inc je mov sbb repnz lea pop jg adc inc sti or andb mov adc adc mov test int sbb mov mov lahf mov jle adc data16 inc rcll sub popa test inc aaa loope inc stc scas mov lea dec repz xor adc adc jge or dec jp cmp adc cmp mov mov lods jecxz and insb mov ret cwtl jb xor (bad) fnop adc fstpt pop lcall pop out or rcll imul in jle or xchg dec ja pop adc and lret inc jg mov dec push (bad) xor into repz insb (bad) lods pop sbb pop adc mov sub out jo add sbb sbb xchg cltd or scas jle pop pop repz sub bound adc loop inc in nop ret es pop lret or adc addr16 repz mov jle adc or hlt inc push jle xchg cmpsl mov or jb jl xor popf xchg ja xchg cld adc mov cmp lods rcll jne addb out adc inc xchg lret lahf roll mov push sbbl out inc incb sbb negl cmp adc adc mov movsl fsts add insl mov mov sub iret push hlt push mov stos push jecxz or das pop or (bad) or xlat or repnz lds and push stos out sub inc sbb movsb aaa and jns add mov cmp inc push cs into xlat cmpsb repz inc ljmp enter adc movsl int3 int xor orb adc add inc sbb frstor arpl ret loope sub insb push scas out push fsubrs negb add xchg pop mov aaa push inc shrl inc push out stc adc nop xchg fwait adc jo or icebp adcb add xchg in adc xchg jbe sbb popf dec roll ret add rclb push or jl in movsb sarb inc xor dec add cmp and adc js mov adc gs and aam adc lods and test pop push adc pop mov andl sub and outsl adc aam push daa mov movsl stos lods xor and or pop xor push mov rorb pop cbtw adc inc dec dec pop dec adc push loope insl rcll dec adc lcall inc xchg add mov xchg pop pop fwait xchg adc and adc inc mov nop insb push mov leave lcall add je xor or push repz push es adc loope dec add outsl lock cwtl or mov (bad) mov je dec inc adc and pusha pop into shlb adc dec lock xor inc adc dec inc mov push adc rcrb test mov sub ds adc gs cmpsb xchg adc into adc call aam jnp jl mov ret push adc adc into insl adc fwait dec ljmp mov cmc adc mov fimull xor push bound adc jb adc cwtl gs bound lods jo and inc repnz adc movsb and jmp test push push jecxz dec sti xor mov adc lret adc adc fs into loope mov dec or xlat xor repz in std (bad) pop jl dec push adc adc inc mov xchg add notl fcomp sub lock push adc push stc add and call out adc ljmp mov and adc adc or lds adc inc repz stc daa cmp or lods stos sub adc rcl push jmp ret add jno inc push jp popf xchg mov mov scas mov (bad) andl mov push adc add sub leave adc cmp xor adc inc adc xchg lcall mov fwait mov adc loop pop adc lock stc sbb rclb popa mov pop adc mov ja add xchg adc daa inc cmpsb imul cmp std lods jg pop mov out out jmp mov ja mov (bad) mov call or scas and out jecxz push js fisub adc idivl pop xchg movd fcmovbe adcb data16 adc adc flds adc (bad) push imul mov jae mov or jmp inc xchg stc (bad) repz pop pop sbb or add mov xlat push pop xor loopne ret sbb out pop adc fidivr jl and mov or movsb or gs loope (bad) add cltd adc or stos cmp mov inc adc adc lods fcoms or (bad) mov jae xchg jecxz cmp cmp jge bound and adc add adc in adc int3 adc dec pop mov push dec pop cmp movsb inc adc push outsb cltd mov adc push or scas lcall cwtl push lret push xchg ja xchg dec lock sbb int mov push in cmp push or jl or sbbb fsubrs fcoms shlb add or imul popa mov repz add xchg or inc adc mov rcrb push xchg xor add xchg and faddl mov and loope add cmc push or sti in aam adc fsub adc adc adc adc (bad) adc adc xchg or adc repz cmp mov (bad) das mov mov scas mov jo pop sub loope dec mov cmpsb dec adc adc and mov in adc ss adc insl fwait adc cmp arpl add sub and push sub push sub les inc xorl add jecxz pop adc inc push adc pop pop hlt inc sub fadd sbb xchg divl adc mov xchg adc adc jnp (bad) jo sbb push lock sub test adc out movsb and xchg andl outsb jnp push xchg xchg lea pop jns adc adc adc mov adc mov cmp push adc fstl je fnsave xchg scas or notb dec add flds jp fidivrl insl inc adc adc adc adc adc lea adc ss lods jg cli jp adc pop adc mov insl mov mov and ss dec adc test nop jg repnz sub repnz lea xchg mov dec sbb aad or adc mov andl bound xchg inc aaa push pop loope (bad) mov xchg popf mov ficom adc fildl scas xor dec inc adc jns lock pop mov out out adc ss xchg adc es adc dec adc mov out inc mov movsb pop adc mov (bad) jmp bound jl adc test mov (bad) sbb rcl stc jo fcoms add insl push adc pop add pop (bad) adc sbb faddl push repnz subl push mov (bad) pop addl pop adc scas adc rcrb adc pop pop mov adc cmp repnz mov clc adc mov jns pop adc mov pop adc adc stos das imul repnz imul outsl loop mov aad ljmp push (bad) cltd lds adc xor push add popf xor push sub jns adc test adc movsl in adc mov jns adc (bad) in gs push jmp popf dec pop test inc (bad) lahf in repz test ds fmull xor push inc mov adc inc pop mov adcb ficoml pop adc add loope xor adc out pop push fs (bad) fcoml sbb test add (bad) in js pop (bad) out jo aam fistl mov hlt aas xchg cli icebp pop mov fisubr es adc push fcoms out mov adc jae push sbb xchg push icebp mov sub adc cmp divb rcll nop lods add push andl cmpsl ret (bad) push jecxz add adc push adc out rorb arpl push (bad) sub fidivrl cltd adc insl movlps ret arpl adc (bad) (bad) test mov mov outsl orl add and add mov pop popa pop mov jbe std mov adc (bad) aaa adc mov lds sarb adc cmp andl jo mov adc cmp fbld adc mov insl push push mov jl adc dec push (bad) cmp loop mov insl add sbb int3 lret adc xchg push cmp adc mov test add and aaa mov decb adc or mov stos enter adcl push aad lcall push adc pop adc or js (bad) or inc (bad) mov push mov mov mov rorl roll adc repz mov dec fcoml popl es test sbbl lret adc cmp sbb adc mov icebp push cmp mov mov fstl push xchg and inc cmp pop jle xchg cld pop adc pop loopne loop and scas mov mov adc adc movsl adc inc enter in adc test mov sbb mov lods pop mov add insb movsb test mov (bad) push stos push jl jns adc sub jmp pop dec repnz adc push cltd fcmovbe pop adc adc mov scas mull push out xchg and enter loopne pop lods rcll je inc lods adc mov mov sub sbb aam (bad) push cmp iret pop pusha aas push stos add sub adc pop inc adc data16 ret sbb xchg mov aad adc nop jb xchg fcmovu or mov inc incl stc adc aam je sti lahf jle repz cmpl add in mov repz (bad) xor repnz push daa nop orb sub adc or add call in icebp pop ss adc inc ret or jp movsb inc adc mov sub add adc ret xchg lods (bad) dec movsl mov pop iret add adc lods pop adc pop movsb fsts pop jp adc lock cmp xor jb or clc iret push xchg and cmp inc adc add push (bad) cmp xchg inc in xor xchg in into adc loopne dec adc movb js adc inc jb test xlat inc adc adc aam push nop xchg lods lock xlat pop (bad) adc std xchg insb and nop outsb enter mulps cltd gs int add and inc bound adc adc (bad) fldenv adc call lds xchg xchg pmullw mov out add stos rorl popa cltd adc dec cmp pop push fcmovnbe nop ja repz lahf ljmp inc adc push add xchg push jno aam notl not lods insb adc mov mov push pop adc sbb add dec (bad) adc imul outsb insl test cs adc dec pop daa mov data16 pop adc (bad) or lret adc xchg out mov add movsl dec dec neg adc sbb sub push adc in or rcll push or sub ret xchg loopne mov adc faddl push or imul stos das fs iret or jo add jo jne sbb adc cmp daa pushl and sbbl mov push aad xchg stos push iret jb fwait sub jno fcmovne dec adc (bad) hlt adc adc xchg adc bound test adc xchg mov lret out adc push adc xor bound adc stos mov adc pusha mov adc adc mov stos pop (bad) or mov daa test adc mov out pop adc adc inc xchg lds adc outsl adc push movsb cmp mov push add mov adc push xor jle xchg fstl adc arpl lods lods jno mov or push push fsub adc js (bad) (bad) cld adc pop lods jle nop test sub xchg insl stos outsb dec repnz or (bad) mov adc (bad) adc test loopne sbb bound adc lds les adc mov insl xor insl rcll xor xor sbb and into ja xor adc addr16 adc imul and adc scas mov push sub imul and mov adc sub xchg imul or push xchg insb adc repz push add adc mov adc js adc cli inc jbe push mov out adc aas mov repz test (bad) mov mov xor pop rcll repnz ret xor fcmovnb dec jmp or int3 loope dec mov shlb lods dec add popa outsb sub repz sbb dec notb iret or test enter mov pop push js nop adc sub mov adc push adc insb sub or sub rorl adc adc movsb in adc test adc adc xor inc xor aad dec jns adc pop jns sbb adc mov clc cmp adc cmp popf imul adc pop add dec push jno mov rol in pop out mov adc add repnz dec ret adc adc ljmp pusha inc sub adc cli out mov inc and lea mov sbb dec xor adc pop je int mov adc pop (bad) roll rolb sub divb les xor adc jle adc push (bad) adc jb xor adc (bad) out out mov mov adc test loope sub adc dec sub (bad) rcll scas dec push mov xchg xor sahf test adc push es test mov xchg cmp adc es adc dec fadds adc repz push mov dec dec lods sbb mov adc adc rcll jb push les mov mov mov (bad) outsl adc adcl push pop outsb sub or dec adc mov jns pop xchg sbb test loope push fldl xor adc call adc call push cmp adc dec icebp pop inc xchg adc mov fisttpll insl adc test sub adc lods nop adc out ret js ds adc jge sbb sahf mov xor sbb add popa repnz add out adc ds push sbb mov repz movb data16 imul push adc ja movsb dec adc dec and adc inc mov push in adc jge adc (bad) sti push js je int3 notl movsb stos mov pushf adc xor ds xlat outsb rcll fs popa cmp adc imul subl fisubrl adc mov push mov jg adc mov addr16 cli mov xor cmp xchg adc shrb dec ret jp adc fcomi push jle jl test or icebp stos mov inc and sbb cmp es adc lods movsl adc das pop ljmp dec mov test xchg movsb push push lds sahf xor or cmp xchg leave int and adc sbb lock adc adc mov mov adc (bad) mov scas dec adc mov fwait (bad) mov jbe adc mov sub inc dec adc or stos fisubl fnstcw push mov pop adc mov std mov test into xchg adc mov repz adc pop dec push cmp outsb xchg push inc adc sbb insl mov mov (bad) mov in push faddl out stos or or test adc out adc je cmp leave adc pop jno ficoml xchg outsl push enter push add xchg mov jno sbb adc repnz movsl test inc mov in ds xchg sub scas or pop adc clc adc cmp adc xor adc mov xor xor aas and pop adc loop xor adc jns je jmp sub test xchg adc sub loopne fstl sbb bound cmpsl test mov add and out or sbb (bad) lock sub adc adc push adc adc xchg adc adc rorl fcoms dec and adc dec lock nop add (bad) std adc dec mov fsub adc insl sub push dec jne sub repnz cmp adc ja mov mov adc mov or adc dec fisubr adc leave adc loope push xchg adc adc stc stos (bad) mov cmp dec fwait jl or push leave adc jnp xchg jns push jge mov adc dec adc sub push in xchg jbe mov xor adc std adc int3 adc pusha cwtl mov popa stc adc jns adc mov stc jp adc or (bad) ss nop mov rorl sub adc adc lods sub xor pop and adc (bad) gs mov insb adc xchg xchg mov inc adc push adc scas (bad) mov push in (bad) cmp lods lahf adc or mov sub loop jo loopne into sub adc adc xor ret sbb movsb test cmpsl test idivb fidivr neg mov sub adc ffree xchg inc je mov cld cmp adc sub adc adc out mov dec cs xor add inc jle adc adc push scas (bad) loope add mov mov adc loop mov mov cmp adc int3 cmpsl mov pusha pushf js xchg repnz cwtl adc adc rcll lods add cmpsb mov int3 lret (bad) mov adc notl jns stc push sti jmp adc push adc (bad) leave adc (bad) or test xor insl add pop out adc xchg inc adc inc repz ljmp ja jne je in or push xchg lds gs jp adc or push or prefetcht0 adc push xchg adc mov movsb fstl xor ret cmpsb jp adc pop test ljmp cmpsb push adc dec mov ljmp adc imul js lock repnz adc adc stc call and mov inc adc mov adc (bad) (bad) mov and adc mov jbe adc adc mov adc mov inc in adc lret adc push inc repz add pxor adc jg mov nop insb adc inc inc sub cmpsl repz adcl sub fwait inc xorl daa repnz add ret loopne adc repnz lods jl repz inc je push sbb out or paddq xchg adc sbb cmp div stos mov shlb sbb adc jmp mov or fadds adc cmp adc cmp pop sbb mov xor jae xor (bad) or add dec inc jecxz mov sub adc in decl pop aaa mov in ljmp test adc push mov pop adc push or mov loopne cmpsb out add xor dec push adc adc adc pop adc shr adc fdivrs inc sti adc adc cmp xor mov daa cwtl int out xchg sub cltd adc lcall adc adc mov sub adc dec dec pop mov jl mov mov ja repz and mov pop adc mov mov adc lods xchg adc pushf jge (bad) scas mov outsb sbb push les xor xchg xor push out cmp adc sub mov ss adc adc push push jecxz and js mov cmc repnz dec adc adc imul adc repnz mov or cltd adc inc xor addr16 test mov mov rcr or idivl rcrb jb pop cmp xor inc cmp adc adc jmp dec dec test adc cli cmc jbe jge adc pop inc push or xchg adc adc adc fstl pop adc push jecxz mov mov icebp js mov sbb out scas repnz xchg xchg adc sti mov adcl fimull add adc cmp cmp push pushf pop push jae pusha iret lea jl ljmp adc add bound addr16 adc aam adc dec add inc nop adc stos push int3 lahf out pop or adc adc xor mov or enter fldenv xchg lcall fcomip adc pop add jns jp,pt sbb mov aaa push pushf push adc push mov repz pusha adc or jno cld cmp sbb push add adc pop mov ljmp pop add aam add mov adc or aad xchg xchg lea cld adc jmp subl push pusha push or outsb add inc xchg (bad) xchg adc lock pusha or push mov aas daa push adc push add movsb enter rolb test test sbb mov movsb or fimul sub gs or cld xor jne mov add mov scas pop jecxz dec movsl xchg test adc lcall sbb pop adc mov pushf js movsl sbb mov clc mov jle adc jno jb int3 adc inc pop lret adc enter ss adc mov jg adc adc lods jns add xor pop mov xchg xchg icebp push adc nopl cmpsl mov inc hlt xlat mov and mov gs mov push enter lea mov in mov dec mov adc or or adc stos loope orl adc mov xchg (bad) xor lock or mov cmp sub mov mov adc xor and js mov xor testl inc js,pn ret leave inc adc out or adc pop push xchg lods movsl loop into out ret mov outsb push aaa and ss lahf je adc push test pop lcall fidivrl sbb mov push mov mov xchg push inc sub icebp push lock xchg (bad) add push repz dec mov repz dec cli xorl fstpl pop cmp push rcll in aam aaa xrelease xchg or xlat add add xchg adc inc int3 dec nop ja or sub outsb nop scas pop (bad) cmp adc shrb add adc jbe jno,pt mov cmpsl lock incb (bad) adc lcall add mov cmp mov add arpl add out push cmp xlat jo arpl pusha lret inc scas adc (bad) adc adc clc cmpl mov add call ret inc inc push loop mov adc int3 mov mov cmp fstpl sbb xchg leave sbb sbb cs ss nop jne push pop xor push adc xor xchg mov test sbb sub and cld (bad) adc sarb push xor add push test sub lcall imul repz xor in add stos inc mov in push adc insb pop lret jge adc les jmp pusha mov loope ret adc mov mov xchg mov sub push add andl add test fldt adc and leave xchg inc inc mov pop inc sbb inc inc push adc andb mov xchg mov adc cld pusha cmp xchg icebp pop adc mov mov std adc iret fucomip cli ss mov fwait push jno mov fimul adc inc testl jo xor lret ret repz jne xlat pop (bad) rcrb adc cmp xor push and int3 adc and mov jne mov mov jae sub in orb test mov insl xlat incl jno movsb subb push push adc loopne int mov mov mov adc aad and or push iret sbb (bad) push push (bad) push xorl lret test inc xor inc add xchg lds mov jmp shll out cwtl dec pushf and sub call popf xchg jns mov xlat imul jno sbb fidivrl sahf mov xor adc xor push mov push and mov adc xor arpl jmp (bad) xlat pop ror xor xor add mov xchg adc push sub ds fildl leave in adc int (bad) adc (bad) adc ss lea shlb mov aas sub add or jecxz add or cmpsb cmpsl adc subl cs mov jae fdivs sahf adc sbb xlat ja daa notl into xchg das xchg add xor xchg sub hlt rol clc add xor mov adc out cmpsl loopw inc mov pop (bad) adc inc lret lea mov sub movsb lahf (bad) jne sbb mov jl push pop pop aas popa sbb sti add in cli les or pop xor mov xlat mov adc ret and ret mov push pop pop add ss adc or xor push movsb adc xor jno cld mov xchg mul iret scas adc jmp ret cmovae inc mov sub addr16 adc mov mov lret or dec sub loop adc xor fistl dec orl adc in orb or push dec mov inc pop sbb push sti mov jns pop notl scas or (bad) cltd lea out mov test js and fisttpl loop stc mov push movl pop (bad) xor std movsb jge mov jo adc lret imul add aam fisttp cltd inc pop sub pop mov mov mov mov fistp test adc daa pop pop mov sub sbb xor xchg stos sbb pop mov repnz cmpsb aaa lahf xchg jg mov jbe push mov mov adc (bad) nop pop adc pop push sbb mov push inc xor dec adc ret xor stos into dec bound lds adc sbb xchg sub and push loop jmp and outsb sub imul out call dec fwait xchg adc dec mov nop imul repz jae xor add pop out in mov push enter add dec pop dec inc fisubrl mov adc add pop ret mov data16 js pop inc gs call fsubrl and sbb adc mov aam add lods cwtl lret enter jbe sarb fcmovbe sbb jmp fstl scas aaa and ss fwait adc mov push hlt mov adc dec ja lcall adc jg hlt jne mov adc push or dec rolb negb (bad) lahf or xchg push adc aaa aad dec push mov xchg dec mov imul cs movsb stc (bad) mov mov jg sbb adc out ror scas push sub hlt iret clc sbb stos jo loopne nop loop dec leave outsl rcll mov xchg movsb adc jbe xchg adc ds (bad) fwait rcr jo rclb stc stos xchg and adc daa xor stos arpl add in adc js inc jae push jne clc add jecxz ret mov shrb in (bad) arpl mov fnstsw jno popa aad cmp fldl or add mov sbb mov push pop cmpl mov xchg xchg jns xchg sarb sbb cld mov jge jp (bad) dec add rclb hlt jno mov lcall and and mov sarb mov pop xor rcll ss repnz cmp adc push jp ds pop jae repnz fldlg2 adc roll push dec jecxz xor cmpsb mov outsb les clc mov daa sub and add outsl adc ss mov xor inc add int jno roll push sub mov mov (bad) jg sbb call xchg clc adc (bad) adc (bad) mov xchg (bad) xchg outsl adc invd and lret adc mov and mov (bad) stos adc add push shlb jne (bad) repz and movsl sahf popw add and and (bad) iret mov mov add lahf adc pop mov std pop cld ds mov shlb dec dec fcmovbe mov fimul xlat jno (bad) push das xchg adc xchg movsl pop jmp and popf std sar fstl adc (bad) (bad) scas xchg ljmp mov fistp jo repnz xchg dec mov mov pop inc repz xchg push loope xor test and xchg ret movsl sub push call orb daa adc loop mov jecxz shl sub in or test and xorl sti jo push ds adc adc xor repnz add in fs mov add repz adc rorl adc and mov sbb add adc xchg test out push insl lcall xchg inc xlat dec mov jne,pt aam cmp xor xor and add ret add pop test shrb mov push (bad) push adc cmp xchg jmp int adc aam cltd arpl aaa push adc push adc xchg into stos mov dec jne out and je cmp xor mov hlt jecxz,pn mov repz or ret leave push add sbb fsubrl xchg lods adc mov test xor scas or lea push or aas adc sub and int mov push hlt mov and pop pop push mov mov mov push adc or (bad) repnz xchg movsl popf into adc and inc and repz ret mul repz add nop in fs dec loope jge divl add sub mov subl inc inc mov cmp fwait in pop dec pop adc pushf je pop jl xor fnsave scas (bad) inc mov lock cmp mov add mov jmp enter jbe popa push mov add jne push (bad) into adc (bad) sbb cmc addr16 adc jl (bad) xchg xor ss add pusha jae adc (bad) inc cmp stos inc lea mov sbb mov ja fmull pusha push jmp mov adc rorl pop sti mov leave data16 mov or lret imul add scas mov repnz pop mov fdivl cmp stos adc xlat and mov adc (bad) or and scas cmp and adc inc nop andb adc cmp adc pop cmc insb adc movsl mov stos adc addl adc add mov cmp jle fcomps sbb jmp add push sub js xor mov (bad) xlat mov pop dec lock sbb xorl fwait xchg sbb push push xchg pop mov jno aam int mov push cmp aam mov mov mov mov imul push or test dec stos dec cmpsl adc mov add sbb roll jno xchg adc popa test insb xchg mov cld jge adc (bad) (bad) in xor mov mov or or insb dec push stos dec adc mov cmc adc xor sti aaa ss int3 xchg or xlat dec jne adc cmc loopne movsl scas adc inc pop bound mov test inc testl dec loope andl or fdivs mov movl dec mov or ud1 dec mov mov pop jb jle adc mov int aas mov pop rcrb cmc xchg push mov or xchg stos xor adc sbb xchg mov adc push mov adc nop add cltd xor mov jae jne mov xchg fmuls mov addr16 dec pop int orl cmp je fcomps (bad) adc cmovnp stos ret movsl (bad) lods int3 aad add jmp int jmp sub out bound arpl xor xchg loope xchg cmp jg popf mov xor push xchg mov adc (bad) int3 orl add sub adc mov lea es inc inc repnz or (bad) jmp pop pop sub (bad) pusha and rorb lea or outsl xor sub icebp mov aas jge push mov mov or jp sarb ss push repnz push (bad) mov mov hlt nop leave mov mov test mov cli or imul xor daa or adc std mov mov divl sub mov xchg pop jno stos adc lods daa loope adc outsl inc mov clc inc mov mov mov pushf stos pop stos add scas push or popf mov dec inc push lea sub jae adc scas push cmp mov xor in and mov hlt dec ret inc add pop (bad) popf mov mov or push xchg jl cmp xchg (bad) mov push and and xlat aad adc xor cli mov sbb lcall dec orl lret in xchg sbb mov mov adc add cmpsl repz push mov xchg lret mov les pop adc xchg cmp jno cmp lretw rolb les test movsb andb add repz jecxz and inc pop adc push push cmp test test dec cmpsl lods iret or repnz das xor cmp adc jne push cmp adc xor adc xor pop push lods movsb or pop adc (bad) lahf adc mov push inc adc stos popa sub mov push add adc and mov dec mov arpl push mov xor lcall mov lahf mov jmp adc aad sti push mov cmc or or cmpsb xor xchg mov jecxz repz mov mov adc pop ds sbb adc aas lcall push shll adcl data16 jecxz andl or repnz mov adc inc insl or push hlt adc adc ss sub mov dec rolb cltd inc sbb mov adc and repnz jae cmp adc ljmp into cmc scas mov out (bad) mov cmp adc jns adc sbbb rcr add xchg and adc in loopne sbb xchg push cmpl insl fimul adc lds adc push insb repnz mov fstps popf lahf sarb adc jp pop push add dec mov lret cmp icebp push ja aaa bound adc ret lahf outsl mov adc xchg sbb (bad) fnsave aaa repnz fwait js nop pop add adc test add sbb adc das out daa (bad) sub push dec faddl loop lods sbb stos movsb or repnz iret mov repnz sbb scas sbb jb hlt jo xchg jp nop aad add test dec cmp (bad) lea popf shr and add push adc xor add add bound or adc sub push jecxz or inc and or adc ljmp push aas xor adc mov jecxz cmp cmp pop cltd into add mov jne xchg or scas xor shrb or sahf adc stos push and daa mov test sbb rcrl push ljmp mov mov dec in xchg bound xor xor in popa scas daa dec inc xrelease arpl sub rep pop rcrb aas adc dec stos icebp test into pop adc repnz adc push xchg pop sbb sbb lcall stc mov adc test leave xchg or ds adc das inc push test (bad) mov and stos xor sbb or and dec push inc out pop test imul and xchg cmp fstpt scas cwtl jmp insb pop pusha cmp adc adc loop out out movsb or sarl and std adc adc sbb xor ret xchg (bad) jle push paddb (bad) xor stc int dec sti iret or inc or ret imul inc sahf add inc sbb jge aad jg (bad) dec loop mov lods add or mov mov add out addl loope mov adc push (bad) imul xchg xorb cmp sbb popa shlb mov out adc mov adc pop cmpsl push add mov adc sub iret or adc hlt adc int bound adc add movlps xor aam test dec jno push stos (bad) ja adc mov inc sbb rorb in adc repnz push xchg fidiv xchg ds loope or lahf stos (bad) (bad) xor mov adc xor (bad) mov fisubrl clc sar push repz shlb int3 or ja cli mov jecxz add xchg andl jle adc ret adc std lds iret pop add or or clc pop jl cmp adcb add and stos adc jb clc popa xchg and push out mov push jae ds mov lahf repz xlat xchg push les shr lret insl ljmp inc adc inc fist iret repz mov data16 sub mov jecxz xor cmpsl xor incl mov mov test loop xchg push dec mov rcrb or mov adc adc add cs jns xchg sbb adc (bad) fucom stc mov and das ds fcomp xchg hlt mov adc cmc adc pop adc mov push hlt jb nop clc repnz xlat xor cltd fnstsw xchg inc cli inc lret inc jbe or or cmpsb lea mov adc pop pop adc add push inc imul scas movsb adc movsl mov mov aam std int3 adc out add inc imul (bad) shl lods or pop xorl lea adc cmp repz jo xor adc lods push adc sbb jl jmp mov movsl stc imul cmpsb mov and les adc add (bad) (bad) adc int loopne in adc shrl sbb lahf jno fsubr shrb xlat cwtl push lcall fstps add ds mov mov adc mov sbb js push push pop push (bad) pop std leave (bad) adc movsl xchg jle adc adc clc push xchg (bad) shrd push and jne xlat ret (bad) push sub sub jecxz fldl mov dec std or es in test lods jb fadds jae cltd scas jo or add mov popa dec mov arpl add xor lahf adc fwait xor notb xor ja mov jb stos ret or adc (bad) and test fisubr mov mov jmp jmp mov mov mov xor jle lods cmpsl loopne scas lret ret mov int3 cmc adc sahf out sbb xor ficompl jp mull in mov xor push mov jg xchg scas pop in mov rclb jmp mov repnz fdivr repz mov (bad) fildl push or mov adc pop cmp adc xchg xchg mov faddl mov inc adc js and adc leave sub sub stos ljmp (bad) lahf xor fmull push inc loope lret adc in sub xchg inc xchg lea sub xchg ret adc cmp repnz outsb mov or shlb mov in and movsl pop rorb mov int3 jb xchg dec or sub movl mov ret mov leave (bad) and adc cmpsb andl mov adc sbb mov mov adc xor xchg push pop and push ljmp cmc mov push adc aaa dec push repz adcl adc pop pushf jae mov cmp adc int3 xchg lea adc fdiv mov mov (bad) hlt lret nop add out mov xchg out and (bad) inc mov jo sti and jecxz or (bad) shrb push mov rorb or fisubl mov out jns inc test mov dec dec push jmp outsb loope stos ja dec fiaddl and mov adc jne adc repnz (bad) aad out out or into mov cmpsb adc loope sbb popf inc dec mov adcl daa cmpsl inc and ret push fcmovnb mov adc repz lea mov addb (bad) fbstp inc cmp cmp or push ds mov sbb (bad) mov and fmuls jp lea cmp xchg mov adc mov xchg adc push mov nop adc adc sub adc bound jo sbb fwait adc adc test dec pop out sub loop ljmp movsb cmp adc add sub pop add subl popa (bad) or mov sbb jmp lret or insb outsl sub das aaa dec shr xchg mov (bad) hlt fdivl divb cmp clc jp xchg adc test xor insb shrb inc dec cmpsb or inc jge adc adc mov pop lret inc and push inc add icebp loope (bad) adc ret nop and or jnp aas cmpsl xor ret or nop adc mov xorl dec hlt lahf mov and add aaa xchg add adc testl repz adc bound insb xchg sub inc xchg and xor push pop jae hlt sbb push mov mov out iret adc push adc mov cmp stc js or xchg out mov test sub inc cmc mov das sbb sbb mov insb shrd adc mov xor lock xor lcall push xchg pusha push mov mov repnz push mov repz ret lods das pop xchg out andl pop adc pop and daa mov or (bad) cmp cltd cmpl sbb ret lods pop les jne xor add mov adc adc push (bad) pop cwtl pop jns sbb adc adc or or cmc notb mov mov (bad) adc repnz jecxz push cwtl ljmp outsl adc push sub repnz mov mov sbb mov shll cmp xor insb lods loop pop (bad) xchg mov or mov xor mov imul lret scas outsl ljmp stos xchg call cmp inc movsb or rcrl js push ljmp shll pop rcrb xchg xchg imul xlat or adc mov jno mov lea add jmp rcr lods mov mov and or sarl into xor jnp rcl xchg mov push dec and inc mov sbb cmp pushf fnsave repnz push mov or int popf mov out lahf mov hlt sub rcrb cmpsl shll repz aad xchg adc ret fisubl xchg push jg clc xchg push xchg xor mov icebp add insb jne out adc test mov hlt add stc in es pause adc je stos or adc sub mov bound nop or xchg test (bad) adc dec or pusha dec or push insl xchg and push mov mov rcr not jne lock out mov adc xor push add gs inc out ret push adc sbb pop sub push adc dec dec cmpsb int jecxz and mov mov repnz in pusha and pop and jecxz sbb adc dec jns pop test pop xlat rcll pop push pop pop adc cmpsl pop inc add adc push push push xor repnz push mov xor or mov inc in and mov je ja mov sub mov aad push cmp repz xchg mov adc shlb ss movsb imul add dec jmp lods ds pop xchg fs faddp in adc rol dec sub jmp stos imulb adc test pushl inc mov das enter imul subl mov jp cmp testb sub shrb cmp or dec adc movsb shl addr16 adc xchg pop push adc pop inc das push daa lea addl in jl ficoml test xchg movsl push inc cs or xchg add add or sarl adc sbb sbb add out jmp or (bad) xor push mov dec repnz cs in mov xchg add xchg mov mov or leave sbb push mov hlt xchg pop aaa xchg sbb mov or (bad) mov sbb adc and xchg es adc mov adc gs mov bound test xchg imul pop in pushf lea enter lret iret push sub add ret nop jae mov push repz jne dec mov clc sub jno je mov sub adc pusha addb adc bound jecxz loopne sbb rorl out adc sbbl cmp rclb test cs xchg add cmpl add mov add cs push sbb iret push sbb pop movsl push and iret lahf cmc or xchg mov jb push xor mov mov jecxz hlt daa cwtl inc aad mov xor push adc std jb into cmp movsl xor mov push add adc fbstp xor xlat rcrb cmp shrb sub xor test loopne bound movsb sbb fs mov sti cmpsb push lret xchg xchg repnz subl add or test xor (bad) rep ss mov pop adc inc ljmp mov dec mov add adc mov nop movsb xchg mov cmp cwtl cmp add mov dec jle xchg adc into inc dec mov or inc and xchg loop add popa xchg and jmp adc movsl insl inc sub scas rol push mov inc stc gs adc mov dec ret dec xchg adc loop add jbe adc std push sbb xor push mov test jno sbb iret sbb lods xor and les xor cltd adc fwait mov adc xchg jne mov ror icebp adc mov pop xor push nop std xchg pop adc adc push (bad) arpl add rolb cmp sbb mov push mov mov lret inc ficomp enter dec push add in jmp or lea jne mov adcl pushf mov negb cmp pop stos das insl push pop xor mov dec loop adc andb mov adc cmpsb or cmpsl test imul in pop (bad) imul and inc nop loopne addr16 bound or or int3 adc push push cmp adc lods mov sti in cwtl rorb pop jp xchg je icebp adc lods ror (bad) sub xlat dec cli adc push mov notl xchg stos aam xchg daa cmc dec xchg mov (bad) xor push dec or in adc jmp and insl and mov push add pop adc adc imul adc sbbb out cmpsl in mov and adc mov adc xchg out sbb jg cli mov sti dec push adc xlat xchg test int adc repz outsl adc mov rclb inc cs adc (bad) push cmpsb adc lret stos mov test incb push (bad) hlt adc jmp into mov sbb (bad) pop mov es or roll adc mov lock adc lahf inc xchg repz sub mov mov popf jnp adc inc push stos adc or push xchg jns cmp bnd jae mov lea mov adc hlt cld xchg xchg pop adc lcall pop add xchg ret adc dec add out (bad) mov shll fucomi jno shr (bad) cmc inc iret adc subl or mov mov lahf scas push pop pop sub ret adc dec or scas (bad) daa and adc adc roll push aam hlt cltd xor repz xchg dec sti repz jmp rorl and mov cmp cmp loop push adc add inc cmp add or sub pop repz cmpl mov push into pop mov cli adc ficom pop mov mov cmpsl fxch repnz sbb xchg lcall mov xchg push ror xchg mov jbe adc xor mov mov decb ljmp adc xchg pop xor ja xor rclb jnp xor inc test cld fs pop and fcompl sbb add stos bound dec adc outsb and sub cmp movsb out inc rep pop ret insb scas mov enter xchg mov mov xor mov adc fs inc movsb dec adc out movsl and adc cld rcll cmpsl adc sub mov into movsb sub adc enter cltd (bad) icebp xorb mov rorb ret mov mov push xchg in jle mov sahf push mov popf xor add test adc mov jp sbb xchg pop fiadd push mov xchg mov shrl adc pop add cmpsl mov sbb dec mov pop mov sbb or (bad) adc adc jne fstl adc divl adc mov pop mov daa mov lea sti or xchg mov adc sub xor jae xor nop adc sbb in inc leave jmp outsb mov test or pusha push and nop mov xchg adc xchg sti mov adc xor (bad) adc movsb out add loop enter in and movsl push or repnz leave lret rorb add movsl and or jne cs xchg cmpl push mov maskmovq pop lea pop ss jns mov jg pop repz dec cmp xchg mov mov nop fidiv stos ss jl xor pop add xchg aaa icebp jne das push xorl and in push sarb jns rcrb mov mov inc jae mov pusha adc mov mov into mov mov xchg into mov dec repz (bad) ljmp repz mov or insl push call scas stos lret out or mov push inc shrl repz push cltd xor adc test ljmp mov outsb out loop and add lds mov adc mov dec orl sub adc push pusha mov es stos lods add loop xor sub shrl (bad) cltd mov mov cmp lock push pop jns jnp lahf (bad) fstl dec cmp cmc cld cmp xlat scas pop mov hlt pop and push adcl mov mov xor notl adcl cs mov mov hlt push adc insb xor xchg popa sub stos and or cmpsl lds xchg mov sbb mov adc push and mov dec sub mov xlat stos fdivp cs and in cmpsl mov insb mov rcll nop dec push inc adc inc jbe xchg xor sbb ja (bad) adc push arpl push in repnz jmp xchg mov les jno int sbb ret adc xlat loopne and mov sub dec movsl call lds (bad) mov jge push mov or adc fnsave ficomp pop loopne aam jle jns pushf lea pop iret lahf adc mov mov push pop (bad) xor pusha xchg and inc push mov mov jle popf nop push push pop mov in jo or je push xchg pop (bad) push adc push fist push add adc into jnp xchg insb mov inc dec es inc push test ret loope add and pop jbe adc inc and scas add or lods or scas (bad) sbb lea iret (bad) dec loopne scas sbb add adc aad lahf pop adc xlat mov lods adc repz movsl adc inc mov bound or sbb add xor iret adc dec and repz pop popa cmp sbb adc out add add jnp pop dec adc setns cmp sbb (bad) cld icebp sbb add adc xor (bad) sar xchg pop adc xchg adc push jbe fist adcl pop add xchg xor or mov or xor sbb adc xchg aad (bad) lock call (bad) mov icebp add dec and adc movl add pop add adc stos and adc mov lods push imul pop scas cmp cmp ret inc in into or mov pop scas cli int3 adc mov xor aas aam (bad) xor mov xchg and mov or out inc and or movsb popf in sbb (bad) adc xchg dec je cmpsb call in aas data16 adc and sbbb insb xchg add (bad) sbb cmp xchg xor jne adc rcrl cltd jo adc aaa mov inc rcrl call decb repz call sbb aad adc push ret mov rolb mov cmc cmp fist ja test mov (bad) xor push adc xor mov aam jno stos adc nop inc shlb outsb jecxz adc lods ret jge pushf adc cmc dec mov mov in stos rorl lods mov popf xlat mov mov lret mov or xor mov enter xor test mov mov push mov push (bad) hlt nop lods mov add dec adc movsl ret inc loop add push mov cpuid out or jne or loopne pop test push subl data16 jl cli sbb mov pushf (bad) ficoml mov fdiv inc mov mov enter push fdivl xchg jno sbb stos mov ja push adc cmpsb aaa jge mov push xor xchg push mov int (bad) mov stc movsl push add repz fstl push ss mov stos and lock adc adc andb jmp mov adc call dec stos mov (bad) xchg and iret cld pusha fsubl or imul mov sbb test pop lea rclb push xchg adc push or stos shlb add (bad) rorb add (bad) lret add in fildl and push sub mov fs mov stos inc jnp jl push mov inc jae inc lods popl adc add cmp test inc mov cwtl xchg jg sti fstpl adc (bad) hlt dec mov pop fist mov xchg dec pop mov inc adc jl pop notb aad xchg lods jb xchg adc jbe push movsb adc push mov mov fild pop hlt rcl mov jp add cwtl or jbe les mov cmp adc jecxz cmpw adc nop xchg xchg mov popa xchg insl mov jnp lahf aaa sbb repz (bad) out mov adc push mov mov scas xchg popa (bad) jae lcall jbe mov dec push adc mov es inc in add imul inc xor movsl mov mov or mov int3 ret adc sbbl je jge mov in (bad) sub jns mov (bad) mov cmpl jns (bad) mov ss xlat mov cmp adc mov ja xchg mov adc or aam int rclb pop jl adc pop adc pop stc je pop outsl jno mov bound push sbb repz push outsb aas and or inc mov inc dec js inc push mov adc pushf inc mov adc xor cmpsl fcmove xchg mov xlat pusha nop shrb xor cmpsb or mov outsb inc xchg mov aam repnz adc mov mov fsts pusha mov (bad) mov pop and mov pop daa or lds out movsl pop xchg cmp ret pop add or std dec xchg test jo cmp ret mov adc pop and add sahf imul sub int3 jns cmp rcr mov out sub test xchg call pop push pop sar xchg adc mov xor mov adc jb and dec push adc sar cwtl jae xchg hlt or xchg movsl mov (bad) dec loope sbb adc jb jno mov xchg test pop out sub jbe les in js xor and mov or adc cmc ret stos cmpsl imul int3 scas adc pushf xor mov sbb sbb jp daa and call adc scas sub sbb adc mov mov xor pusha push push mov mov andl mov or mov adc loop cmpsl es pushf push js mov (bad) mov xchg inc xchg xchg das gs bound hlt inc pop adc in std lea xor fidivl rcr add xlat adc sahf gs mov (bad) push fistl mov adc (bad) jno jbe xlat dec adc mov xor xor adc mov loop rolb fpatan sbbl xchg jno fwait mov mov mov lds shll loop xor stos pushf sub setle inc cmc insl sub and jl sbb add stos fwait (bad) les inc or bound (bad) insb lret mov xchg insl rcr (bad) push inc adc jae push jo push cmp ja mov push jne stc sub or cmp (bad) pusha inc ret xchg insl stos add das ss pop sbb in bound adc data16 out add xchg mov mov mov jb dec add push mov (bad) (bad) into adc xchg js adc mov (bad) mov rcrl pop adc push inc popf adc mov xchg pop push fcomps mov repz stos hlt movsb pop out repz ss push sbb lock in lods or mov dec push mov inc lcall adc sahf sbb sti in xor mov cwtl fs mov gs repz and js pop rorl ret nop pop jb mov je test add mov (bad) push mov stos jl fwait scas push xchg orl pusha dec mov movlps inc aaa (bad) sbb adc adc nop ss push leave adc stos pop sub sub add (bad) out sbb scas (bad) int3 push repnz mov dec mov adc sbb pop cmp adc push ret dec add jle xchg jmp and xchg test mov sub mov push sub pushf cwtl xchg (bad) cmc mov adc add testl cmp adc push or xchg mov jno sbb cmp jp xor xor aam lcall xor repz adc pushf or out rolb pop mov mov push mov outsl adc insb addr16 test adc test test sub sbb adc push sub mov aas jae repz push aam (bad) fwait dec std dec xor xchg adc aaa mov (bad) hlt lret or cltd adc fwait dec adc jns shlb add mov jmp enter push push pop xor (bad) and test push sub jge mov cmp push mov jg adc cmp pop or mov cmp je mov mov push adc ds rcl loope inc adc jb notl mov adc xchg push hlt mov dec mov dec adc adc idiv push or jne jno ss loop adc dec stos popa adc cmpsb cmpsl inc mov pop mov push adc imul xchg sub loope dec adc adc lods add das mov or sub add rcll xor cmp lcall push add or dec sub or pop popf scas repz mov dec lods adcl or cld es in adc mov int3 outsb test scas mov pop (bad) pop mov aaa adc sbb cltd adc popf xlat imul xchg lret pop or jb xor xchg adc xor mov push push adc popf adc cmp je or push sub push test sbb mov lcall push sahf or (bad) (bad) enter sbb xor (bad) test push shlb inc dec arpl shr fisttp mov adc dec or adc mov sub mov fsubrl adc mov insb xor bound les add sbb movsl mov jge lock xor xchg fdivs imulb adc push test shlb add mov jae mov xor fisubl fmuls mov dec sbb popf lea int3 aad push lret add movsb lods ja popf int dec mov ret stos pop loop icebp xchg fdivrl sbb (bad) fisttpl push or test (bad) rcll cmp hlt pop fdivp xchg push mov pop movsl mov sbb movzbl cmp fstps add hlt xchg xor push sti je push adc push lcall insb push mov mov out lret mov iret add add jecxz mov pop adc push inc fsubrl outsl (bad) repnz sbb sbb adc adcl adc inc shr push outsl aad bound adc (bad) ficom out pop pop pop (bad) aas jne rcl push xor dec hlt or les pushf mov inc cmovle loop (bad) dec push out int cld ljmp lods fiaddl jne lret lods and adc dec cmp pop into sbb adc push addr16 dec sub mov cmpsl iret (bad) or imulb adc (bad) repz rcr icebp xor jo rcl jl sbb adc cmp cwtl (bad) adc mov push push repz fidiv ss sbb lret xor adc mov xchg fdivl pop xlat inc sarb lock adc mov nop rcl mov push or mov inc xor sub sub mov dec repz movsl sub pop gs adc inc cltd dec xor lcall pop out shrl sbb jecxz (bad) sahf push aam iret (bad) out adc insb or sub xor fwait (bad) divl pusha pop push fdivrl xchg movsb out pop mov (bad) (bad) xor mov lcall ret stos (bad) add test daa movsb popa push add pop adc (bad) pop jmp mov bound or hlt adc push into aaa dec mov lret insl out push dec or daa mov pop jle cmp aas shlb inc (bad) fstpl push repnz (bad) pop jne adc enter adc scas cltd jns notb pop pop jle jmp dec jnp fild popf pop cmp jle xor adc (bad) (bad) fstl dec xor mov ss xchg fistl flds adc xchg lret xchg or movsb outsb das lds adc shl subps fist aaa and ret insl dec jmp sub repz mov insb adc push sub xor test cs jno (bad) cmc add xor pop add fstpl xchg pop or cwtl pushf fistl xchg mov fsubrs enter mov mov ret jmp adc xchg mov jae cmp mov cmp imul shl loope adc jo fwait pop pop sbb xchg (bad) popa bound or adc roll adc outsl pop inc mov cwtl xor sbb mov cwtl dec jecxz mov or adc pop xor dec push (bad) repz push and inc (bad) cmc sbb (bad) xchg divb loopne mov flds xor xlat push jbe adc cmp xchg push push xor jnp (bad) mov adc int push lret shrl mov jecxz loop add vcvtps2pd mov push ret aam scas dec adc inc test cmp daa mov push xchg adc xor and pop push adc xchg lock jno lcall and dec inc int and fcmove sbb sbb pop nop mov inc leave daa add jns cmp adc cmpsb mov insl test movsl repz ret jl pushf bound xlat mov outsl sti int3 lcall xchg push pop leave adc sbb sbb jle pop mov sahf (bad) mov shrl sbb fst test mov lods emms mov mov fwait nop xlat push aam adc mov sbb cltd fnsave aam (bad) xor aaa fcom sub iret mov lock xchg loopne (bad) repnz out and ret pop mov jg mov insl subl mov test xchg sub (bad) repz aas mov in lds or adc xchg add adc ds mov aas xor xor adc std out ret repz call mov fstp adc inc sbb pop mov sub xchg (bad) call add push movsl test add rol test mov lret adc mov outsb rcll jge ja mov mov add ficoml jnp jge stc mov out adc xor (bad) pop or mov mov clc sahf xchg ss pop pop mov xor out mov shrl add xchg xor sti mov mov mov std push insb mov pop add repz pop sbb aam je repnz pop mov lcall inc call in jecxz (bad) or imul mov cs mov loope loop sub adc jo jg xchg test mov test xchg sub adc xchg int3 cmc loop adc sarb jbe mov xor xor adc hlt outsb push mov dec loope add or adc and adc inc pop and (bad) iret test outsl cmpsb inc cmp or add xchg les and iret jecxz (bad) cmpsl rep in add cmpl fild xor mov aaa adc sbb pop adc and insb adc idiv rclb xor pushf xchg cmc push mov lcall cmpsl adc push adc pop xchg pop xchg cmp push push inc int3 jecxz xor pop pusha mov repz mov aas push mov mov sahf les fiaddl dec and mov and cmpsb mov sbbl les add adc call push scas xchg sub paddw lret cmp ret stos mov lret adc inc (bad) loope sbb mov nop mov push lret pop enter out push xchg js outsl cmp sbb mov shlb test mov adc xchg adc and repz in sub fwait repz cmp paddsb adc mov inc adc pop inc jle jo repz aas rcll mov (bad) cmp (bad) scas adc aaa mov hlt xchg pop roll push lret mov test js call add adc adc xor subl mov mov xchg jno fcomi push sub adc addr16 sbb dec xchg iret add mov mov lret push in xor adc lea adc push sub xor cmpb dec add test lea sbb sub les inc adc adc negb aaa mov or jb adc repnz push mov sub jnp mov xchg inc pop mov mov push lea push inc (bad) jg cmp ficoml and pop ret imul in and adc jo adc adc pop xor push loop mov aas mov push gs or adc (bad) mov jbe rcr push shufps and xchg idivb xor adc insb pop enter ret add add cld mov hlt mov ficompl adc jne daa movsb pop lcall gs addl adc and es shl mov test lods shrl lea mov sbb mov lds hlt outsb (bad) xor aam adc loopne (bad) jb nop push sti mov cmc (bad) xor cmp xor mov mov movsb add stos ret lods cmpl movsb test addr16 mov fs in (bad) imul mov add add push subl push mov loope mov pminub xor pusha pop adc cli xor jnp push jle in pushf pop push (bad) xor sub dec jo mov mov mov icebp push loop sub adc xor xor push xlat push push xchg pop nop dec dec mov pop add in clc adc repz pmullw adc shrl loopne icebp movsb das mov out loop and js movsl xchg jecxz add pusha test leave adc mov adc mov dec add out mov lods lea xchg adc mov (bad) and in adc xchg mov pop lahf push mov mov or push mov call ret es add pop add cmpsb push loope adc push dec mov in repz addb sbb xlat (bad) popf adc and push out bound mov inc je xchg push jns xor lahf jnp mov dec ret adc movsb mov jmp lahf nop rcll pop push (bad) jbe mov cmpsl or nop fnstsw xchg je push sbb adc aas lods xlat mov xchg bound xchg adc cltd nop adc jmp sub xchg adc mov lds test cmpsb out inc stos adc out dec fadds mov sub sub or insl rcll or lcall test lret adcb shll xlat mov push add push fbstp sbb pushf xchg (bad) xor aaa jmp xchg lret or xchg xchg js cmpsl dec pop inc repz sub hlt aas iret adc xor loope mov stos add add and sarl or leave in adc adc add sbbl mov pop pop mov mov ficompl imul test pop xchg stc sbb jno jbe (bad) dec xchg stos xchg test cmc (bad) xor or lcall adc int scas adc xchg mov push xor push mov sub adc movsb adc js dec jmpw xor jl mov adc or popa imul adc scas sbb in pop outsb sbb mov adc int jmp or add jb ss popa adc in addr16 sar (bad) xor nop xchg stc test hlt xchg (bad) mov cmpsb dec mov (bad) inc adc scas inc cmp flds sahf mov or pop inc inc out and cmpb int movsl rorb dec rolb in jmp movsb pop inc pop inc mov leave pushf pusha decl jle adc cmp jg into mov push insb jge cmovp adc fnsave fcoml or adc inc je mov xchg test xor push or xchg adc sbb hlt insb pushl add adc fdivl adc mov xchg add cmpsb roll add cmpsl add or mov and out and xor sub lods adc push jecxz shl inc jno cmpsb add jmp scas test xor enter jecxz mov repnz (bad) adc mov xlat hlt (bad) lock mov lret adc mov mov loope leave adc and sarb sbbl xor inc mov fucomp adc and adc mov cmp adc in and adc jg pop dec sbb mov jb fstl xchg mov pop jne lahf in popf push adc pop insl mov add rclb mov stos sahf mov pop loopne add adc jo aad push ja (bad) sub stos adc cmc xorl sbb xor adc mov push add adc dec adc lods mov (bad) xchg mov cmp jb pop outsb push sub adc sub mov jecxz lods mov push dec pop in push insl xchg xor inc out test xchg push (bad) xor cwtl sti fidivr push (bad) xor jne into cmp data16 (bad) jo nop inc int call and cmpsl mov xor popf mov xchg cs or out mov sub sbb and jo mov ja xchg add fldl test insb mov bound and pop inc mov sti (bad) jns push mov add cmp pop dec sti inc mov pop or mov xchg jae push adc mov jbe lcall pop cmp adc sbb mov (bad) and (bad) adc xchg sbb push adc aam in std imul rorl out add inc imul inc adc mov add add test stos ljmp mov bswap push out jg xor lret jae xchg or add stos adcl jb aaa data16 hlt sbb std (bad) xor xor (bad) sbb iret out addr16 int ret repz inc lods test movsl into or outsb pushf cmpsl repz rclb adc inc dec adcb in mov pop stos fistl daa incb xorl out pusha and lds shlb mov lahf leave mov fnstsw adc pop mov mov xlat xchg cmpl inc cmp into fisubr stos sbb adc adc xchg pop loope mov adc lea jne enter pop push ficoml rclb sbb ret jl add negb or xchg mov jge mov adc adc stc add repz sub mov outsl sbb sahf mov cmpsb fstpl aam int (bad) inc sub pusha mov dec adc (bad) mov enter movb or imull cmp add push pop push fwait (bad) fstps push xchg in mov push mov sbb mov add or mov and jbe xor mov and test or and mov ljmp add ret movsl mov ss inc je loop jge fcompl xchg jno mov push mov xor mov (bad) mov (bad) notl (bad) leave adc and xor adc lock xchg mov repz mov jmp rorb and xor repz (bad) adc aad push adc pop (bad) push loop inc outsb push or dec mov cmpsl mov pop adc inc test scas mov (bad) hlt imul test adc addl out stos sub dec jmp mov aam lcall xchg adc mov (bad) adc in adc push hlt das jno nop shll leave daa mov jmp ljmp or dec cmp dec pushf adc adc add add repz ret inc stos xor adcl sub adc mov cmp sti sbb cld ss mov push mov or fcoml xchg out xchg mov push mov ds jl pop sar repnz hlt je je or adc stc int3 decb adc nop jo aam xor adc xchg xor (bad) ss sti rol mov adc mov (bad) in and icebp xor repz decb and sub mov mov shlb mov out mov mov mov pushf mov adc fsubrs mov mov aam xchg jno mov mov or adc int3 mov in into mov xchg ror mov adc nop sub (bad) add pop and lret or adc lret push popf enter int3 jns cmp xor or xchg adc adc lcall fwait nop mov adc cmp fadd adc pushf int3 mov adc mov push std adc enter int3 adc adc ret push ficom cmp fcoml mov nop cmc mov loopne stos xchg mov rep xor cmpsl xchg pop icebp sbb xor divl stc in mov xor test out loope subb adc xchg lret adc js sub or lods mov rclb loop or xchg cs outsb scas or daa xchg pushf aas rcrb sbb adc mov adc or or daa xchg inc sbb out cltd popa mov sub mov loope mov movsb mov mov test and adc adc popf inc repz cltd pop xor jno cmp aam add rol mov mov cmc xchg xor lret adc mov mov xor push mov xchg or mov mov xchg push lcall xchg xchg cmp mov xchg mov add stos (bad) in pop cmpsl test mov mov rdtsc sub shrl xor rorl nop lea aaa stos xchg js dec loope ror inc mov mov jbe pop sub mov ret mov fidivrl clc mov xchg mov lret cs mov mov add adc cmpsl out xor hlt push xor mov in lods out adc add sbbb loop and scas das adc add xor mull cmp pusha cmp sarb mov mov aas (bad) ds divl insb sub lahf xor into adc dec pop out dec xchg pop xorl pop and mov push push fcomps adc push adcb cwtl adc push jecxz xor push mov cli inc jne xchg test shrb imul cmpsl inc jge mov cld sub xchg add movsl xor dec mov sub repnz adc es fildll lods mov mov jns mov adc mov mov xchg out test stos xchg mov leave push mov adc push push mov adc mov mov (bad) pushf mov ud1 mov adc sbb mov mov push adc jmp mov mov mov inc adc gs adc mov mov mov mov repnz mov xor mov daa xchg inc aam dec add mov add add mov cmp mov iret inc adc (bad) ljmp add jl push xor dec orl scas iret adc scas push insl lods xchg aam repz jae idiv mov cmp clc rcl xor stos jge xchg adc pop orl dec mov push lods adc xchg jecxz xchg nop cmp out sub adc movsb out les cmpb add nop (bad) or jmp and adc and xor xor sbbl sti ficompl mov in insb mov xchg adc push jl sti cmp cs xchg sbb bound xchg pop call xchg pushf pop mov ret sti mov sub adc rclb cwtl push popf mov xor mov xor sti or sbbl fldt test xchg mov inc lods adc xor cwtl add cvtpi2ps or and add pusha pop or adc andb mov push sub jmp adc mov (bad) cmc cli (bad) pop fnop adc xchg ss dec adc out xchg adc sbb ret sub add jp mov in aam mov lea test add and mov adc cmpsl or jecxz xor sbb jnp xor idivl popf cld sbb and outsl pop lods jmp push cmp or pop repz xor mov adc (bad) adc xorl pop jo adc pop fdivrl xor add adc pop push adc mov adc xchg adc ja mov dec adc insl inc repz cmpb mov xchg fisubl mov fsubrl icebp or hlt addl or mov adc loop in mov (bad) mov aam adc lcall and pop jae mov push jle adc stos cmp xor int3 pop into int clc loope pop pop and into mov lock and inc jmp mov adc or cmc adc cmp hlt orl dec test pop dec jle loope call dec jle adc das or jo repz add lea cmp xchg push (bad) push (bad) add xor cwtl cmp repz pop adc notl aaa mov push rclb push push dec ffreep rcrl xor fwait and sbb daa or popa xor fs or adc sub adc fildl adc in stos dec adc imul mov xchg add je lods ret cs adc dec orl rclb and xor pop cmp cmp or sbb sti es cmp jecxz and iret bound lock adc inc mov xor add sub add sub xor std cs or jno mov (bad) shl adc movsb jge fiadd cmp fsubr mov fcoml or jmp sbbb insb pushf lea sbb adc pop fdivrp mov ja inc add jns mov mov adc jo mov or xchg test outsl cwtl mov repz adc cmp ds icebp and pop (bad) push (bad) (bad) sbb or adc add shr outsb sub dec sbb insl not lods or mov repz cs ljmp in orl loopne push adc jmp setb (bad) jbe mov add aas lcall repnz adc jg mov lret xchg push and cltd in iret jns mov daa ljmp add nop arpl mov lea jecxz stos inc inc sub xchg pop negl fimul pop mov adc sbb sbb add mov shrb pop cmp mov xchg sbb jecxz xor and xor push adc xchg pop hlt mov push pop mov push and ljmp adc cmc cmp adc and and js mov ret inc sbb push push jle sarb push mov bound sbb aam adc idivl pop sbb cmc lods pop fs cltd movsl adc out inc lds jecxz (bad) arpl loope jo incl jge std leave jl enter shr sarl paddusw (bad) sbb mov sti ret jnp or jo out leave gs in insb cmp iret jbe enter lret jle jb arpl xchg pusha aam adc in shrl mov imul lds or jmp imul shll out mov (bad) sbb aam xchg jns not jbe icebp shrl shr aad aam packsswb loope jo decl jl stc (bad) jns ret add xchg fdivp adc (bad) gs nopl repnz add mov int3 dec and scas add test aaa pop imulb xchg adc fs shrl iret xor out lret add or fcmovnbe imul ret pusha shl gs mov lds stos jns test shrl and dec mov jg mov adc sti aaa lock gs in insb fsubr fldt neg xchg jbe icebp fnstcw xchg mov sub insl jnp test sarl dec mov adc icebp xor pop add push jecxz nop (bad) fs ficoml add xor mov adc into xrelease push in mov jno adc sbb xchg lds xchg pop std inc push arpl jecxz dec inc test dec mov adc adc mov mov lods adc mov popa xchg aas jnp in stos aas xchg add push (bad) nop xchg fwait adc lds mov repnz icebp mov lds in repz cwtl nop mov (bad) rsm imul cmp movsl repnz lea loop adc repz out test ret push jbe adc fwait call es mov lcall fsubrl lods adc imul andl cmc adc outsb sbb jle enter (bad) mov (bad) mov imul mull in dec movsl stos xchg ds outsl pusha loope push or or adc imul lock pop icebp loope xor insb mov out sbb push test mov lret pushf xchg add stos insb test jle xor rorl fcoms aad popa pusha mov dec adc or rclb adc iret adc adc (bad) aaa jmp add (bad) push movsb ds and mov sbb notl jbe dec or adc insl scas nop mov loope or mov fcoml push fcmovnb and mov mov mov sbb das adc cmp cmpsb adc lcall mulb jge xchg repz (bad) aad out jne (bad) fstl xor lods and dec jge fwait cmp stos imul adc test jno adc pusha dec mov mov mov cmp adc fdivrp repnz nop inc push sbb mov out std mov add ret xchg adc jmp pushf adc (bad) outsl icebp dec hlt xor mov push (bad) fld repz cmp inc cld ds xchg sub and (bad) dec jmp adc xor call mov adc fsubrs and jecxz mov jl mov lret dec pop adc mov sub xor adc gs aaa fs mov sbb pushf mov push jnp adc pop sub jle out add adc loopne xchg mov or mov and pop xlat pop fwait mov (bad) push (bad) jmp movups dec ja fimul ret mov mov push gs xchg inc xor ja adc stos loope call int adc mov lret or (bad) fwait or movb adc aaa outsb inc jnp mov aas add add push push adc push orb das xor adc and in adc out in jno adc (bad) cmpsl int3 (bad) lds sbb cli push clc adc and popa lcall jecxz ret pop scas adc (bad) lock jmp pop outsb (bad) mov imul push jno je pushf movl xor mov add mov mov stc ljmp dec mov mov dec test shlb jmp cmp push sub push lods jmp inc gs cmc add xor or aad hlt xor mov loopne sti clc xor push sbb pop pop leave into std test pop in xchg pop xlat int3 add adc cli outsb xchg or pop or (bad) push adc sbb sbb adc aaa fisubr jbe inc adc jno fcompl add adc jo sbbl je mov jp pusha push adc daa pushf pop sbb (bad) outsb repnz jg pop jo cmpsl inc push test (bad) adc sub mov push jns std pop xor iret and notl push arpl jo mov (bad) mov (bad) cmc repz testl xchg push add arpl push adc jb neg add fnstsw lods out mov popf (bad) adc cmp sbb sub popf or adc fnstenv (bad) adc adc lret cmpsl adc xchg gs add popa out lea or iret hlt repz mov adc inc divl push sbb (bad) popa aas mov fdivp fist jg dec adc into inc xor add outsb mov dec push pop imul mov ja outsb mov sbb (bad) xor dec add ss into adc ret jns pop int jecxz sub and cld leave mov add adc icebp out daa jge push xchg outsl adc xor push loope hlt sar (bad) insb adc adc add in lcall cmpsb (bad) out pop pop xchg sbb adc xor cmp (bad) cmp sub add inc sbb sti adc adc sbb and lret pop rcll mov mov adc adc add pushf and lods push pop fildll imul cmp adc test xchg imul shrl je xchg push push or aad outsl xlat and add insl or ret pusha fstl cmc lret lret popf or or jo mov dec mov pextrw mov cli mov or call mov repnz sarl mov repz or ret fdivrl imul addl cmpsb xchg jl fwait adc je icebp leave and pop sbb sbb test add adc xor mov lea or aaa adc dec adc es rclb push jmp mov sbb sarl or xchg inc adc jae push not out in xchg test pushf add adc jnp sbb fisttpll mov add int out mov xchg mov (bad) imul dec jbe push fmull in adc sarl and add adc add adc ja test jo mov popf adc jae adc push adc out adc stos (bad) pop push cmp adc iret or mov adc bnd add adc loop lock std mov adc (bad) mov mov mov fmuls lret mov pop hlt stc add xor call or stos imul push or lds testl adc fdiv in faddl xchg nop dec sti outsb adc sbbl fs ror mulb add push adc mov xor ret jb data16 adc jnp call daa pop imul aaa dec and push xchg sbb lahf daa dec cmp adc sbb les out adc adc in outsb mov (bad) cmpsb inc adc sbb adc sub cwtl adc scas enter mov xor xchg daa xlat cmp adc push dec repnz push add or pop movsb and push test or in adc call neg sarb mov insb sub into loop jnp add out aas js in int mov in pmulhuw repnz fwait cld movsl inc jge (bad) sbb mov ret fcomps inc adc or xchg and or jle xchg rolb inc sbb add sarb icebp rcll (bad) (bad) adc push fisttp dec jno push inc stos imul xor fstl lret cld rorl stos dec adc icebp sbb and cmc push sub cmpsb pop call cwtl mov push fisubl jno std lret (bad) imulb push mov sbb nop add lods mov addr16 jge push inc and push leave pop jg rol adc jecxz mov mov pusha and adc dec inc cwtl inc in (bad) adc sbb jmp adc mov fildll sub or pop xor sub outsl mov pop sbb (bad) jg or add dec (bad) jge cmpsb pushf xchg mov dec pop mov stc add xor stos adc inc xor loopne adc adc insw xor xchg cli int3 daa inc hlt jle jecxz pop icebp loope pusha in arpl xor inc mov mov test (bad) jbe push sub adc xor xor pshufw push test adc mov lret adc mov jo popa mov jmp das dec dec adc icebp adc sbb add repnz stc pop cli out adc push gs mov mov mov cltd mov rcrb inc stos es outsb nop sub mov pop loopne adc repz mov ret xchg add mov (bad) cmc nop xchg xchg test adc mov in outsb mov pusha cltd xlat push mov add pop and adc inc es or packssdw adc aas or adc nop adc mov jmp shr xor aad mov jno inc adc push out xor ret std (bad) xor int aam mov mov loope or mov in sbb xor mov xchg pop xchg pop xchg repz nop outsl jmp inc pushf js test sahf cltd bound adc insb adc adc jbe jge jle adc jo jns jl adc pop push pop push pop cmp pop pop pop push pop pusha pop imul hlt add cmp xor and pop movb or or in (bad) repnz lock into (bad) fmull lds (bad) mov adc test push adc addr16 data16 xor inc and pop (bad) inc cmp adc dec ds pop push push push pop jbe xor pop gs adc ss push dec push pop sarb and dec addr16 repz inc dec js cmp sbb pushf push sbb add imul xchg push dec aam and shrb inc mov inc aaa insl ss sub fidivl test push or and aaa inc ret jle cmp lret cwtl ja jno push sarb rolb sub and movsl adc mov sub pop or jo adc adc sbb adc sbb popa sbb mov adc push push jle xlat cli repz cltd clc pop stc loope pusha fnop call adc leave test lea dec adc daa mov movsl push cmpsb rorl add les cmpl (bad) data16 popa scas jecxz arpl fs jmp adc outsl mov adc cmp (bad) dec (bad) mov int3 adc scas jp cmp insb or cwtl or or or mov add push test lds adc add xlat repnz (bad) (bad) fsts pop or dec ret ret push shlb into mov in (bad) (bad) call mov or sub mov cmpsb xlat push aam roll shl mov loope mov out mov mov mov mov mov jne fisubr push jbe jge jle jg sti jo pop sub inc pop out in ret pop es xor pop adc pop add pop cmp adc leave sbb pop outsl fnstenv or or hlt adc into mov (bad) scas mov test loope or jne loopne jecxz loop add roll push movl xchg subl xor add xchg movsb fwait dec add cltd fldenv adc movd dec (bad) dec adc dec dec sub loop sub pop cs out sub pushf (bad) jno sub sbb pop ss aaa repz cmp cmp sub scas push iret cmovs or bound outsb adc xlat jne jno adc call repnz repz icebp jle les adc cld add rcll les jne out xor enter mov mov mov mov adc call jns inc jp jg pop push pop adc pop and sbb pop sbb sbb xchg add ja mov int int3 xchg shr mov popf mov pop sub mov mov and inc adc xchg jne mov adc and cmp add inc inc inc push pop sub das jae cs xor sbb int3 adc jmp in mov push sub ljmp mov insb enter scas (bad) adc cmp mov xchg fwait push xchg xchg xchg jno sub cmp adc and ret das cli pushf sub xor lods push lcall mov jecxz (bad) ja mov dec mov mov adc xchg dec jge jo fistpl inc xchg inc mov adc sub pop xor fnstenv jo pop adc leave push pusha adc pop repz outsb pop mov repnz fldl cld cmp and stc daa xchg es or outsb or sbb insb pop imul add add repz jne movsl add aam icebp out out in jecxz inc loop xlat adc shrb pushf adc out arpl popa icebp repz jge jp jle jg xchg push pop adc lods cmp test adc mov mov outsl sub imul dec mov add sub sub out pop rcrl adc jns cmp add cmp jg unpckhps jno mov repz mov repz or mov adc mov mov add xchg sbb out cmp pop stos pop imul mov movntps push repz int sub pusha cld or cmp pop fldenv fisubl adc faddl mov mov daa lcall jp mov mov shll or outsb sbb mov push jae push push pop adc and pop mov jno push add jl stc aad (bad) jg xor repnz mov daa mov mov adc addl (bad) icebp jo aad aam fnsetpm(287 fimull mov (bad) and jne rolb jae aad mov push adc enter and add call jg push aad int3 push adc mov lret jne adc mov mov mov mov fiadd outsl movsb outsb in adc jle pusha ja jb call jne das (bad) das push jbe push cs mov push stos push insb mov lods pop dec pop adc stc fstl adc loopne fwait adc scas fisttp mov push jl popa insl adc pop xchg aas xor aam jle jecxz arpl jb adc adc es sub xor mov mov icebp mov sahf into lahf dec pushf adc insl test or repz adcl adcb xchg xchg test (bad) aam fs loopne loop cld add arpl dec pusha xor jbe sbb insl adc pop testl repz mov dec out dec mov dec decb lret loopne push das ficompl mov mov test pop rcrl out xchg out cltd mov (bad) loopne cmpl (bad) jge jns lea xchg jle jnp bound mov outsb jae je jne jmp jno dec jo ja jbe jae lods fdiv icebp in push ljmp data16 jo popa jecxz or dec out sbb arpl stc fnstsw fnop jecxz in inc xchg fistpl (bad) (bad) fdivp fstpl out shr fnstcw loope mov (bad) repz clc enter int3 (bad) cmp test (bad) cmc ficomp in les (bad) lock (bad) repz and loopne loope in shr (bad) ljmp aam (bad) nop inc inc aad adc sti scas clc mov stc mov mov mov sub movsb or mov jecxz in stos daa stos stos stos loope std test scas adc scas cmc lods rep icebp stos pushf out hlt out test adc sbb mov mov scas mov lods stos mov mov shl repnz gs addr16 push imul ss mov xor mov in out (bad) aas adc and popa and or jnp sti or push jbe adc sbb adc sbb sbb stos adc adc call mov jge jnp pop clc outsb stc repnz jns jbe push insb inc jmp popa mov shrb imul loopne les or jae xchg jle xor addr16 or cmpsb jo jge xchg mov and xorl jmp (bad) in mov xchg gs popa nop xchg jg sbb idivb popf addr16 cmc insl call pusha jge imul sbb dec icebp nop dec ja (bad) rcl dec add je mov adc push icebp push hlt push jmp in cmp and and das mov mov mov add in mov jno jb mov insb sarb jno test testb cld jge jp (bad) jl shl in ljmp imulb cmc adc pusha ljmp clc insl sti (bad) cli fs mov jge sbb jle je jae inc cli (bad) int3 adc sub jle sbb jmp sub sub decl dec in mul gs loopne jecxz loop lods pminsw shr out out adc mov lret cmp stos nop mov iret (bad) cld rcl cli aam (bad) fisubrl (bad) repz repnz lock (bad) iret in into out pop leave repnz in dec adc enter mov fs lret addr16 mov mov ss xor jge jl sub and push mov mov je jno adc jle jo nop jg js data16 sbb inc xchg pop out push add aam (bad) notl xchg js in jge std adc fdivrs ftst jle pop inc aas test push pushf xchg adc mov adc gs in mov pusha mov sub (bad) cld test int3 out out mov jae mov repz adc inc stos add add xor mov idiv mov (bad) jmp xchg ret adc int3 (bad) adc ja sahf mov xor insb xchg into inc popl mov add or add add in lahf into dec iret es pushf mov mov mov mov lods xor scas (bad) pop mov adc rorb das push (bad) out adc lret mov mov or jbe ja push adc pop mov pop push inc xor and add in push imul or adc shll test push and adc je push pop push out xor stc xor repz (bad) (bad) rol js add fisttpll push adc jne cmp stc xor test (bad) or mov lcall jp jnp pop sub inc jecxz inc or add adc shll jge cld data16 es and add add repz out leave scas ret adc (bad) rorl mov sti pusha jnp sub adc test test cmc fcomps push sub adc adc into dec leave xchg mov xchg push and enter je les in jmp frstor adc cmp adc cltd aaa pushf xor jle arpl push and lfs aad mov mov aaa xchg (bad) jb push cmc push adc out pop push mov adc lods aam mov stc mov mov pop or and sub ljmp fcoml dec fild lcall cmp or and mov xchg adc mov pop cmp mov shrl fcoms adc (bad) lock in adc or outsl inc enter xchg and and push push ja aam add jecxz xlat mov ret or mov jb jne in pop pop nop pop mov dec cmp in mov call lret ror es (bad) aas outsl inc outsb adc sub sub mov in mov repz imul int (bad) adc mov dec aas dec cmp mov rclb add pop lock adc mov mov xchg mov cwtl ja mov push loope in adc icebp or jo pushl sarl ja xchg dec lds std sub cmp mov sbb jl or sarl cmp jb push aas adc add xor clc jecxz loope scas fdivrl adc xor popa cmpsb and lea jno jno stos pop jmp push and in out adc in ror fsubs sbbl xchg pop add loopne fucom out (bad) repz mov adc in aam adc cltd mov ficom xchg xchg adc dec or adc inc adc mov leave xor test scas mov xchg (bad) movl imul mov loopne cwtl xchg adc adc loope pop mov xchg xlat push mov nop test lret adc icebp adc notb stos mov xchg adc xchg xorl je dec pop movsl adc aas xor outsb add jmp ljmp (bad) je adc fstl fdivrs cld fwait jge rolb jle jns jp jg aas xor sbb test rclb xor sub adc insl mov xchg mov lret mov int3 xor ja adc lds (bad) mov mov scas movsl cmpsl mov or adc fs inc push and mov mov lock jecxz in push add adc out sub fstpl jbe inc push dec xchg xchg das shrb gs adc je enter mov fwait add pop add hlt cs (bad) aam add sbb adc in mov inc xor adc fild jmp or adc ret lods xchg mov xchg or call sahf jo pop imull mov stos add daa rorl push sub (bad) push sbb adc mov std xor lcall push or test add ret mov aam adc jp mov jle adc cmp iret sbb mov adc loopne js cmpsl fbstp adc int3 dec push pop dec adc ss mov sbb sbb sub iret pop dec add pushf fdivl cld mov out push lds cmp out adc push jne mov movsb leave movb loopne inc add and les adc sbb mov xor add fstpl lret loopne dec cmp jae les xor pop cwtl sbb sub repz mov dec or push adc jge lods mov psrld push out sbb adc loop rclb push adc mov sbb add in clc mov aad es je cwtl adc ja arpl mov push sbb fisttpl cmpsb popf or mov call es (bad) repz lret insb inc lods test xlat pop icebp lret push cli xor iret adc adc insb jae clc push pop xchg adc imull fimull inc push dec mov dec repz adc adc push cmc lret sbb and xor clc or fcoms ds lods xchg mov or notb adc jb lret mov push dec adc pop cmp lcall adc lahf mov xor jo pop pop xchg dec repz push sbb sbb scas icebp (bad) mov add lock mov movb mov sub push mov pop mov insb add sbb mov mov dec xchg adc jae das rclb xlat adc ss scas sbb xor sbb inc out dec (bad) sbb sbb push sbb adc mov rcr xor adc mov or lret mov pop (bad) arpl or push xor mov popf xlat aam pushf add nop jb add mov movlps jp ja pop outsb cmp adc addr16 adc mov rolb fnsave adc fbstp adc or jecxz rorb inc mov sbb fwait test lods push xor (bad) leave aam imul std inc popf adc (bad) repz jmp jno,pn icebp ret pop inc (bad) add push addr16 add jecxz (bad) mov fs adc push jmp sbb adc sbb gs xchg push icebp rcll outsb sub mov subl stos adc (bad) xor inc cwtl mov in cmp inc lods xchg mov nop mov cmp mov loope adc in test mov leave mov add push or pmaddwd fcoml call add insl cmp iret xor ds (bad) xor loopne inc sub push and adc fistp in push (bad) xlat cmpsl rcrl imul xchg and sbb data16 mov jns aaa ljmp (bad) xchg ljmp int fisubl lahf cmc and (bad) push mov adc mov mov jae fwait in adc ds push xor fildll fs pmulhw adc cmpsb out aaa insb shl xor or mov push jge adc call mov fildll push mov jge repnz fadd pusha add leave fidivr (bad) fisttp and pop sub adc pop out aaa insb (bad) lods adc ja repz popf sbbl add les aad pop mov int fwait or adc mov test cmpsl gs add pop into jb cwtl adc fnop jbe adc cs out in or icebp adc jge test mov mov mov popa xor (bad) pop lock mov leave pop enterw repz mov adc adc cmp rcr out and stos es daa sbb aaa pop xor mov fstps sti pop (bad) sub adc mov loope adc (bad) mov adc jge lahf int3 nop stc push adc mov das pop adc bound sub adcl push adc dec cld popa xor push out mov adc jb repz leave push add loop adc in jg and inc adc jo push adc adc add xchg in adc addl mov movzwl adc frstor mov or (bad) pop pop (bad) hlt outsb sbb sbb mov xchg xchg imul mov adc cmp lods dec adc adc es dec jo lahf adc cmp (bad) mov xchg cs mov dec sub adc cs mov loope mov push scas dec repnz in jo adc int rorb sbb cmp loop xor push iret adc mov faddl sub (bad) sahf cmp lds adc cmp repnz cwtl and adc out test or adc out adc adc nop pop xor arpl mov jbe dec adc xchg ds adc sbb xchg and enter xor adc xchg sbb xchg jns test ror add adc sub lret push repnz mov dec push dec call arpl test xchg adc hlt adc cmp pop jg add inc push repz cmp (bad) jbe cmp push pop clc jae mov xor dec jns jnp adc insb add sub xor adc and lea call xor je jl in ds hlt cmc adc mov push xchg lret push xchg stos push rclb data16 sbb or je cltd push pop xchg adc dec mov andl push adc movsb loop aad imul mov ss imul cmp cli movsb in imul pop adc (bad) icebp push jnp mov shll pusha adcl jl adc xchg mov xchg mov cmp mov outsl bound scas clc imul xchg (bad) pop mov and mov mov outsl in xchg jmp jge fwait test push adc rolb cmp push pop adc adc cmp into rcrl cli sbb mov pop adc push (bad) mov es into jo xor or dec dec loopne add add push push test test cmp inc sub pcmpgtd adc loopne xor daa sbb sub adc leave or repz repnz pusha xchg jge nop mov lcall hlt xchg (bad) out mov adc jb std pop sbb sbb shlb sti mov movb in push mov or std inc sub adc pop shr cmp xchg xor cmp add sub fnstsw mov push adc push hlt pop xchg sub adc nop or out test (bad) mov jne psrlq adc test iret add repnz push imul sti mov add mov leave or int3 xchg add scas adc dec out cli bound xchg mov sub mov rorb inc arpl and mov sbb mov cmpsb cmp xor adc and das lcall adc inc movsl add mov clc sbb pand dec jns and xchg adc mov movsb jmp (bad) into inc adc sub bound pop cmpsl rolb jno sbb mov adc popf rcrb push sub adc leave mov mov aaa aad lcall xchg add or clc adc ja pop call ficompl jnp sbb mov divl pop jno pop dec lods adc call ljmp movsb mov mov (bad) ficoml jae jmp adc fcompl dec scas add imul orl lds jb sbb sub cmp (bad) push push sub push adc jg xor fnstsw arpl and adc inc hlt mov fcomi dec cmp xchg incb iret cld ljmp or into add out jae xchg arpl pop sbb or jo dec dec int (bad) adc ret xchg lea inc adc push dec sub xor mov repz ret mov adc mov aaa adc adc or or jo or push sub push mov adc cmpl jmp dec sbb adc and in xchg adc out mov add loop loopne (bad) lock adc daa lret gs adc pushf int3 and fcmovne dec (bad) dec inc repnz mov or inc push push fnsave int xor ret lahf repz add aaa mov jns out dec cwtl in mov js pop dec inc add push lcall stc (bad) movsb das mov popf push cmp pop dec cmp xchg adc jae dec push (bad) mov adc sub push rolb cmc adc rcrl mov roll mov fcmovu sub push insl ret adc outsb jnp repz sub ljmp mov fmuls xor mov dec lcall lock add push add lods xchg (bad) push xor dec push js xor cmpps pop mov mov pop adc push rclb into dec mov mov xchg in pop sub imul sub sbb lock clc out adc sti pop hlt shrl push mov fadd lds out loop jge icebp cmpsb xchg xchg or out adc push and adc in mov push push das cltd in nop and or mov or in je push inc inc xor imul outsb popf adc sub xor cltd inc mov mov adcl rclb ja mov loope jp jmp daa lds stc pushf insl adc test cwtl andl adc jne xor scas mov inc loopne popa xchg mov (bad) jne add jg pushf leave adc sbb (bad) ljmp xorl out xchg mov jle insb and movzbl adc fs dec adc adc es jno sar mov dec adc fidivl mov test xor aaa sahf mov jns jg imul fiaddl pop or xor jo add mov mov adc xchg mov push ljmp jbe inc jo sbb test stc or push adc int3 inc mov insb inc mov mov adc push aas ds pop adc lret loopne jo inc fwait inc ja neg adc insl (bad) pop cmpsb subl aad and xchg fist test and test adc sbb cmp xchg stc cmc arpl dec pop je test into xchg or fmulp je cmpsb xchg or jo pop adc sbbb stos mov jg lcall mov and lret mov mov dec fcoms lea mov roll (bad) jne scas add scas xchg push sti loope jecxz xchg sub push pop hlt adc push lcall sub adc pushf xchg sbb adc in inc into and xchg cwtl (bad) fidivl jo pop out scas ffreep adc in std adc ja pop aad sub adc test or leave adc into xchg movsl dec inc rclb jne xor push adc jns fadds xchg xchg adc or mov icebp mov inc inc insl sub jge mov mov adc add pusha mov push mov out adc ficomp shrl aad add movsl divb add pop aad inc dec push fs movsb (bad) adc or push dec dec popa or test push add xorb insb push scas or mov lret in adc stc (bad) push jp adc rcll mov xchg sbb or adc sub push mov adc (bad) jb xor jle xor flds mov dec dec fist hlt xchg and pop adc lcall or imul sub sbb adc sbb sbb inc inc sub iret aad adc or das aam jno adc mov mov jl (bad) or std mov inc popa adc cmc or inc int3 addr16 fisubr pushf ret jno es rorl adc cmp add pop or or dec adc clc sbb lea dec and mov fdiv dec jecxz jp xor movsl stc jmp pop cmp push out mov pop aas adc sbb xrelease push lods test sub dec xor mov adc sbb xchg rcll and fwait mov pusha stos pushf sbb xchg dec mov mov adc jg fs adc in loopne pop adc and xchg inc notb adc sub ds adc or add xchg adc sbb push xor sbb dec xchg mov movsl cmpsb scas fmulp adc lahf dec inc adc sbb repz stos call mov adc cmpsb xlat enter js sti pop stc bnd test sarb mov pop mov add xchg lods push lret aad add arpl in pop test pop mov adc sub adc dec arpl into sbb scas adc ret adc xor dec test loopne cmp xchg xchg mov or test mov cmp nop clc lock and (bad) enter mov add scas jmp sbb ja push les fisttpll and popa or rorl in sbb mov scas adc (bad) cmp into sbb adc dec dec shrl inc cmp adc test push je lret mov mov adc xchg mov dec in mov int repnz repz das add xchg xchg or adc rep insl xor push adc cmp movsb or dec and push push xor ljmp (bad) and cmp insb in adc mov mov mov jl dec pop and adc jno pop test xor lock or or (bad) in sbb xchg jne adc push fisubrl cmp inc pop mov xor insl jl test mov xor adc testb mov adc add adc sub jecxz in imul dec or cmp std popf add (bad) cmc loop adc fdiv push xor aaa mov dec lcall bound sbbl ja xchg add adc adc pushl mov (bad) andl mov or xchg adc mov add in loope gs shr pop mov outsb (bad) inc inc add pushf jle,pn pop stc adc loopne push dec xchg clc cmp jecxz xchg dec (bad) cmpsl arpl dec (bad) repz jae xor adc scas pop or cs out clc adc sbb xor pop add mov mov sbb cmpsl cmc (bad) fstpt or or insb adc and or push (bad) pushl scas lcall (bad) sbb cmp stos mov pop test or xlat mov adc or divl lods mov push mov mov push ficompl scas dec repz push dec cmp addr16 push ret aam sbb inc call dec icebp cltd repz fs daa mov aad and adc sub inc ret sbb add mov repnz xor and dec cmp test push lret nop xchg pop stc lods or adc cmc pop adc adc in movsl adc mov push mov pop adc mov push fnsave out or push push adc das in sbb adc dec test shrb leave rcr mov jo pushf sub xlat in inc pop (bad) adc outsb leave mov movsl imul jo je imul pushf mov push xchg xchg orl xor cltd repnz enter inc xor and xchg into test aas fs inc dec cmpsb push mov stos imul repz aad jo sbb xchg jnp pop sbb std scas adc jle nop adc xchg mov fs sbb mov add pop in (bad) repnz sbb add or test adc inc movsl mov sbb negb push insl add adc lret adc fistp or add add lds loop repnz icebp add addr16 into sub adc adc add adc sub xchg or mov inc dec nop jnp mov negl nop sbb or push add sbb out xchg adc adc push adc xor push sahf or fcoms cmp adc mov ret cld or push pusha dec sahf xor imul push pushw iret int push inc adc loopne test dec test and hlt int3 xchg xchg jmp mov sbb subl add adc mov and ljmp mov fwait push mov or fcoms jmp inc orl mov or hlt repz insl test es cs xor out or push adc add add or adc inc jnp mov jb aad mov popa add mov mov sub fsubl cmc push add sbb adc adc mov and hlt add lret gs xor jl lods cmp jne aam push sbbb adc sub fstpt (bad) jae lods stos setle or outsb scas push movsb mov or aas push and mov jg cmpsl jns add cmp adc mov ret test mov imul les sub jl inc jo inc push imul mov push pop xchg cltd xchg imul mov fidivr jp mov push sub lods dec mov inc adc mov xorb inc push out stos pop pop (bad) cmpb sbb lods rolb fnstsw cmp sahf cwtl jge lcall push mov scas sbb mov js out lret scas nop lods xchg bound cli ja ljmp leave fwait mov imul cmpsl test xchg pop push (bad) push mov cs test pop dec adc imul lods movsb jl and cmpsl add pushf xchg xor sbb adc iret movsb adc pop pop es sbb and mov adcb out test jle test in mov nop adc lcall pop repz movsb stos orb addps sub aaa xor mov cmp pop dec mov pop adc adc jge sbb std push out rorb (bad) sti repnz push sysret xor (bad) stc hlt addr16 adc out icebp lods jne pop popl aam pop mov mov dec in inc js fs aam popf jecxz mov (bad) xor (bad) (bad) hlt and cld (bad) or loope cmp cmp outsb xor scas pop pop xor dec fistpl into adc inc push in cwtl lahf rclb dec clc jbe or push repz and pushf mov imul and jp inc repz mov sub mov sbb into jno aad repz mov adc mov pop and sarb ss dec pushf hlt adc aaa sub adc lods mov dec mov adc and arpl jo mov clc and pop (bad) adc add jnp dec stc std je das push (bad) ljmp pop fist mov hlt mov aaa jae adc dec repz or adc dec arpl adc jge sbb repnz mov mov push ljmp rcll jg jbe pop and adc (bad) out pop (bad) mov sbb dec xchg repz pusha ja cs adc fnstsw mov mov mov mov xchg pop lods sbb int3 dec adc cld in adc ret adc cmp cmp shll imul adc jg add mov mov adc or loopne (bad) int adc xchg enter out adc popa jno dec or adc pop daa push jg leave mov lods div add inc subl mov out ss mov xor xchg add xor jl adc into mov and leave test dec pop pusha std adc mov mov pushf cmovo loope arpl sbb ret jl lds jmp rcr inc jmp fsts insb pop sbb push pusha push dec xor jne pop or xor jbe inc test pusha clc dec adc scas xchg dec iret lea adc xchg sbb jge sbb pop out sbb xor out push and inc dec rcll cmpsb les repz xor aas adc xlat xor jbe aaa xor pop add adc imul aas xchg xchg into out clc adc cli jo jb cmp mov int fcoml cmc sub sahf push aad mov out daa jg mov xor push cld test jg sub lcall pop lods scas jp inc shrb jnp push mov sub adc pop fs mov das loope mov mov mov sbb inc mov and pop imul stos mov xchg adc nop xchg adc inc loope mov inc cmpsb push xchg add mov xor cltd xor in push movsb xor add sarl dec add push bound pop pop mov push adc jnp xchg adc mov push push adc cmpsb fwait or cli jne pop inc push add mov mov call jae sub bound adc notl xchg dec rcrb adc test js jg (bad) push (bad) notl sbb into sub imul js out repz sbb negl icebp pushf bnd scas adc xlat push mov hlt mov test push jge adc and inc ds nop cmp lods adc fistpl out mov adc out xchg sbb or mov mov lock mov xor mov sub jnp roll and jmp or fisubrl (bad) ja dec lock cli pop push xor sbb clc xchg addr16 mov iret xor bound hlt loopne in jno inc cmp xchg mov rep out in outsb enter ffree adc jbe imul jb hlt fisubrl adc dec xor outsb inc ss ja lea dec lods iret xchg mov sbbb mov jle popf xor jp int sbb add cwtl dec push adc icebp adc inc push mov les xor aas adc xchg mov add adc add dec sbb or sub dec pop adc scas jecxz cmpsb sub cmp adc push jg (bad) dec (bad) gs insl addl out mov (bad) lret scas std mov adc (bad) jne jmp xor or xor push and jo sub push mov cltd lahf cmpsl adc cld cmp (bad) sub push xor xor loopne cmp push mov push pop cmpsb add xor rol xor xchg pop and jno fisubr scas arpl cmp sbb cmpsb xor repz sahf pop push pop or popf dec lret jae ja mov mov xchg popa adc mov pop gs lcall adc adc mov (bad) or (bad) dec push jno adcb sub add iret lea lcall ret out dec jg les adc cs arpl adc cmpsl pop sbb and test mov jo jbe mov sub jne outsl adc (bad) xor jle adc dec jge jno xchg into adc test and (bad) (bad) aad xchg or lods outsb mov cltd repz and hlt and jge mov lret cld adcb inc pop and xor or jl js push sub mov and dec or mov jg bound inc mov iret imul adc mov mov fadds add dec mov int cmpsl repz fcoml push mov (bad) icebp adc scas leave push test adc bndstx repz adc outsb lock in jne xchg adc xchg je add out xor mov movsl push add arpl fldt les (bad) incb xor cld das jle jmp push mov outsb cmpsl pop mov pop syscall and into stos sbb rcll aaa add repz xor inc scas or call mov es mov mov xor dec jg adc movsb sbb mov inc loop adc adc sbb mov pop inc mov (bad) rorb movsl lea hlt rcrb pushf add (bad) popf lds cmp jmp stos mov les mov cmp daa adc adc je mov jge pop dec loope clc les xchg shrb iret (bad) adc dec aam adc mov sbb or push jle dec ljmp push in scas adc mov mov adc shlb fs ds nop dec add inc add (bad) and mov cmp js daa insb add mov pop fs adc adc in push push xchg push fistl mov dec jecxz and adc mov pop lock sbb sub sbb movntq out cmp pushf pop or rolb xor enter push add add adc push int out clc test popl lea aas hlt push sub daa mov notl cs outsb out sti xchg mov fisubl pusha mov push and adc clc dec mov xchg inc ja jl inc bound xor adc inc imul mov int3 push lret cmp jno xor aad nop add xchg or pop stos mov bound cwtl mov rclb pop mov int xor test or arpl push cwtl xchg adc mov inc adc test add or adc jle mov outsl push jl pop shl (bad) out adc or xchg adc jl mov and sbb jb fs dec cmp adc arpl mov pop xchg les ljmp sbb jmp mov fnstcw mov push outsl addr16 push xor out xchg ljmp mov lods adc dec mov mov sbb inc or xor cld fidivl lahf adc std push adc enter cmp adc ljmp mov xchg adc test sbb mov cmp fildll sbbl iret adc out pop aas sub cmp icebp or adc adc (bad) not push mov cld data16 push int3 ljmp add std add lock sbb dec add dec and stos adc dec icebp movsl push adc pop data16 ret xchg add add adc (bad) and out sub imul mov mov adc xchg je sub negb push (bad) std setbe sub stos and pop sub cmp pop sub jg mov int3 adc mov mov outsb sub mov cmpsb adc lods mov (bad) adc mov adc adc mov or xchg mov mov jns pop aam and je mov clc sahf inc jle dec fwait les (bad) push or stc test adcb xlat cmp adc les pop cmp iret pop adc sbb xor arpl rclb clc cmpsb pop int xor clts aam push outsb push mov mov cmp sbb adc sub xchg jns scas sub ss mov adc cmpsl sbb fs inc popf pop pop (bad) cmp (bad) push daa sbb pop adc xchg insb push pop push adc sub or addr16 sbb ficomp das insb popf cmp or mull and pop add movsl test or jecxz repnz hlt adc dec (bad) push adc sbb into ljmp mov mov inc and js out sbb lcall iret push clc nop rolb pop stos add add xor or shll mov clc imul cmpsb cmp loop mov cmp scas adc inc out xchg sbb jmp mov or imul rorl xor add jo (bad) addr16 xchg fstl shl or nop and daa iret mov vphaddwd stc or arpl adc stos pop inc js outsb sbb bound push xchg or lahf or adc add inc adc imul mov les pop rclb adc inc in rorb out lds or addr16 sbb hlt mov and sbb xchg test notb mov push (bad) mov ja mov fstpl pop stos xor pop adc jno xor clc mov adc scas and sbb (bad) arpl popl ja dec fcoml out dec int3 and adc popw addr16 popa mov loop cmpl adc lock adc mov loop push jnp push dec lods out das test adc dec cmp (bad) mov sbb inc adc test aam sbb cmp sbb xor ss push sbb and and cmpsb mov adc ljmp push sbb adcl mov sub jno and adc out mov xor cmp data16 push mov xchg mov push jbe adc mov stc cwtl jecxz fnop lret and imul sahf (bad) xchg psllq in bound pop mov jns mov call adc outsl test cmp jp aad pop adc iret jle inc (bad) jo dec mov add jl inc lods scas insl xchg cmp sbb lret fcoml lea cltd (bad) (bad) jb pop mov xchg adc cmp pushf adc mov xor gs dec mov stc fwait xchg (bad) xor les into dec out mov dec lods ja mov or pop rorl pop (bad) xchg aam pop adc enter pop ljmp nop ret jbe cs mov adc xchg cmp or out push push and movb js rorb mov mov aas test in ss pop xor ficom adc outsb lea xor mov add pusha pop adc mov fwait mov fdivrl inc cltd add and (bad) int push dec test lods insb repz adc mov dec mov ds adc push mov shrl pop push cmp mov jg cmpsl scas push mov repz or int mov pop inc adc addl jne push hlt lahf (bad) adcl shlb daa adc push int xchg pop fstpl rep xor or in test lcall leave pop stc cmp and or mov adc lret mov adc dec jb xchg inc adc mov sbb dec xor lods jnp jae dec pop mov insb in fsts push adc sbb add aad sub jge add fcoml add inc push arpl rcrl js adc fisubr add adc pop adc xor xor xor pop shll pop dec adc ret mov mov bound fsubrs (bad) rorl rolb add sbb pushf add and push sub int3 (bad) out add mov sbb inc mov and loop fsts pop push dec mov fcomps mov lods adc cmc push in in or adc cmp mov or xchg add ret inc sbb sub fimull xchg loopne cli adc movsb test stc mov (bad) aaa loope or lods jge imul mov mov rcr adc xchg lods push push inc lcall sub mov push mov sub jp and (bad) mov jmp push inc or aad fisubr or stc int sbb pushf xchg adc mov js aaa ffree cmp shrb sub cmp xchg mov add (bad) inc push adc mov lock movsl cltd add arpl or repz sub mov pop outsb adc cmp andl adc cmpsb leave or fnop repz pop adc cmpb aaa lahf loopne sub cltd in dec adc es xor add fstl fs js xor sbb sub (bad) mov or push icebp loop pop adc jp xchg sbb mov sbb adc enter add sti push es aas fwait insl push xchg jp (bad) or addl int lcall cli test xchg loope movsb adc emms jl adc mov push adc push pop pop mov push sahf fdivl cmp xor cmpsb cs repz mov imul (bad) push in push dec divl rorl pop pop xor add data16 inc rorb pusha lcall mov in fsubs adc aam orl mov xor in adc fisttp shll dec lret loopne test aas orb lods cmc shrl repz and sbb movsb (bad) out out sysexit adc mov inc xor lahf add cmc adc sbb add mov (bad) repnz in into adc mov cmp jmp pop mov sub pop (bad) fist adc jne fst dec sbb movsb pop lcall stc xor notb loope cld jl or ljmp faddl gs xchg adc mov nop pop xor nop pop mov (bad) mov sbb xor or jno sti adc push fcomps mov and add xor pop mov mov cmp mov lds add add push push pusha mov dec adc lock cli lods or jnp adc cmp pop stos jmp nop mov and push jl sahf lods (bad) aad pop dec pop out mov adc jp pop push clc add push push std mov imul jne int in sbb inc adc mov mov test sbb push and int3 arpl adc mov mov rclb aam add adc mov inc out pop flds mov (bad) mov divl or in and test adc fcompl adc jmp out xchg push sub adc gs or insb sbb xor mov ja dec (bad) sbb push rcl stc cs sbb out mov adc lret mov nop adc mov call pop cmc std dec mov rcll push adc stos xlat jnp push lds rcll insb or adc lods xor adc cltd inc (bad) std (bad) mov mov dec mov sbb mov hlt adc jge pop sbb lods fstl test push pop mov daa or inc sub mov test les adc mov xor sbb or out adc (bad) icebp push std out dec mov dec adc jns imul das adc fs stc adc sub adc mov jo adc lcall bswap adc jnp andb adc sbb xor out or xor movsl push fcmovnbe jmp test lea or daa mov or imul pushf dec test dec and xchg mov fmull fldt pop sub test ljmp mov mov repnz push xchg mov sbb repz inc aad mov pop cmc dec adc (bad) or xchg in mov iret int3 int mov xor sbb adc lret out test and jge into test mov sub xor adc mov inc (bad) or cli xchg pop push mov mov sub std adc adc jge sub scas adc (bad) or pop out adc mov mov fmul enter scas ficom pop ret fisubrl push adc sub mov mov mov in sub dec adc test arpl push repz mov push sbb or jg mov dec xor fstpt add in call in pop mov xchg pop rcrl stos mov insl mov mov lock cli dec dec adc adc icebp mov sbb or fiadd xor int3 lods add rcl mov arpl adc ret scas mov test xlat repnz pop pop dec cmp sub rorl mov and js mov xor xchg nop sarl dec dec insb clc pop stc mov mov xor adc and stos nop sbb jecxz mov add scas add mov lret jb (bad) (bad) push stos into sbb mov clc scas shr fwait jno mov cs outsb or popa adc jle (bad) adc inc and mov sub in (bad) add in mov icebp fstpl fwait je mov mov adc popf adc sahf inc imul ror mov adc (bad) daa loopne cmpsb or adc adc arpl rolb ss adc push sub cld addr16 (bad) int movzwl push xchg mov lcall addr16 mov xor xchg dec and and icebp cs jno add adc inc adc jae adc mov sarl adc push hlt mov adc fs sub pop inc in aad fcoms mov repnz add mov add sub adc push in mov les cmp cmp inc (bad) test xchg fild outsl scas repnz sbb jnp add test pop ds fwait adc xchg iret inc sbb arpl js insl pushf pop sub adc aam or and adc cmpsb cmp adc ja sahf sarl sbb push and mov fs jle movsb insb daa push test test repnz mov add lock pushf adc ret xor in pop jle aas push jns mov js adc push inc adc mov adc jne or add cld push ss insl adc adc inc ret les and cmp js in ja ss adc or movsl adc scas pop xor rclb add or fcompl add jnp in lea cmp ds or pop inc aas xchg incb or lcall mov adc stos js jbe cltd adc out insl insb mov dec (bad) push add inc add dec adc mov adc das nop aad jmp jne dec inc xchg fdiv adc lret push loop scas nop xorl daa push mov sub je push sbb mov push dec jno stos mov (bad) xor jg push rcll sub das out xchg popa fadd adc test dec cmp repz mov pop xorl rcrb call add imul push test add mov push xchg xchg imul cltd mov int3 (bad) leave addr16 adc inc pop jbe push xchg int3 add repz adc inc mov adc daa pop ja cmp pop sbb xor inc jb push or cmpsl xor sub idivl cltd fstl gs lods jl add repz test xchg push arpl mov lret daa (bad) aad imul and out adc js cld sbb hlt leave jo pop sub out ret add push aaa jecxz adc xchg arpl jl xchg sbb cmc (bad) jo popa imul ficom add pushf adcb (bad) or (bad) negl adc dec add push inc mov in mov (bad) das xchg inc adc xchg dec sbb or stos push jecxz ss ret cmpsb in out mov cmp lods pop and adc adc inc aas stos gs adc pop jns mov mov incl mov pop cmp lods and pop addl in mov push mov mov jae gs pop (bad) mov fidivl repnz xor sbb adc sub mov pop xchg cld cwtl fnstenv push loope sti fmull or jns js mov movsl in stos add add lea imul adc add mov pusha xor das xor fcomi adc lds fwait push jmp mov sti imul sbb add (bad) mov cmp std out clc leave xchg addr16 cmp push jmp adc lods sbb jne fstl imul fcmovbe mov pusha dec sub (bad) xor mov xchg rolb dec xor pop or into xor ds or daa (bad) in adc arpl repz cwtl leave fcom cmpl (bad) jns xchg jno subb sbb inc repnz xor mov adc cmp mov dec into lcall iret cltd nop lods dec mov lret aaa jne push jbe lea movsb pop cwtl (bad) jno and mov add pop xor dec popf or in inc lcall (bad) cmpsb test rol jecxz sbb out adc xor out xor mov faddl (bad) adc enter adc call jmp push dec pop push clc xor adc add bound cmpsl mov xor pop or add xchg or jp leave or push es sub stos adc outsl add pusha or xchg dec ds mov sub rdpmc push icebp jnp push fnsave arpl push test inc scas pop jl inc sbb mov or pop mov or sub sub test adc cmp inc jge data16 mov movsb aam jmp mov pushf mov mov add mov movsb adc mov add mov mov inc xchg lret sbb mov (bad) mov loop ja ret mov aaa out pusha (bad) dec or xor pop or jl lods loope xchg aam int3 mov cmp test xchg add sub mov push cwtl in push std int sbb jns mov push (bad) cld movsb fdiv adc ficoml movsl sbb lahf pop mov scas jg or nop cmp mov es adc int3 pandn jge sbb stos push push mov adc dec insb xchg mov mov xor adc ret xor or outsb jo shrl cmp lret mov or adc add sbb push cmp orl fs dec cmp rcl jecxz into mov mov pop sub cmp jmp out fidiv mov inc daa in mov aaa into adc ficoml mov pop mov popa (bad) xor push mov out adc or sub stc and out cltd push inc xchg lret mov adc call sbb (bad) adc fidivr cmp ljmp in iret leave (bad) in push test adc add xchg (bad) nop out pop outsl ficomp mov adc mov mov mov fwait mov daa xchg xchg adc and jmp into push das mov cmp add movsl dec adc jle adc stos push aaa lret scas ret rclb fwait inc mov add adc popa call sub or push sbb adc popf and test stc adc addr16 and ja enter (bad) xchg push xor int3 jno push call sub mov jmp (bad) or jecxz sarl outsl jno or or inc cmc mov adc and or rcrb std out pusha ss adc fnsave mov adc insb sti sub jns adc fdivl int adc aam add adc mov push adc scas sbb adc mov ds inc add pop push sub adc jne test push mov adc and jo adc arpl adc loopne mov adc xor push stos adc data16 ds sub pop push mov cli repnz pop call mov xchg shrl adc dec imul pusha cwtl clc out sub mov xor cmp add lods loop push mov mov push push les adc inc bound and in jle jne mov cmp out xor push or mov mov mov outsl mov stc jb rorl loop (bad) outsl cmpl adc lcall add pop jo movsb xor sub jecxz leave mov dec mov dec push jb adc aas mov shrb fsts mov stos cmpb inc dec ror adc cmp std jge xor adc popf and rcll fiadd or dec test or or stos aaa cmc femms cmp or mov ret and out (bad) mov adc fnsave cmpsb cmp sbb paddsw (bad) pop adc cli mov int3 loope pop lods xchg adc xor add inc nop imulb ficompl stos test mov push pushf sbb aas pop lea xchg mov add (bad) arpl adc mov cs sub xchg adc adc dec sbb adc insb pop push mov in mov push jl stos pop aas fisttpll ret arpl xchg popf repz mov jmp outsb add loop pop inc adc pop pushf push jmp repnz dec imul or or subl adc cs or lea mov mov ss sti lods adc dec pop cltd sub and jmp (bad) adc popa popf adc cmpsl xchg inc je cltd cwtl fcmovnb add scas call lret mov xor movl faddl add rcll mov push test or sbb jp fs jle push iret and test pushf ds xor inc or sbb imul dec mov pop mov insl jl push fnstsw add aas xor inc cmovb adc out and test adc and mov fadd mov pushf dec jnp hlt jge pop les adc out lea mov push push adc loop pop xchg push addr16 ret popf fwait inc mov mov mov pop or jle adc lods das (bad) rep sar add and test add pop adc push inc push push (bad) ja lds cli xor adc add fldlg2 sbb shrl nop (bad) adc dec mov adc aaa and sarb adc mov test mov xchg jae add mov xchg mov out hlt xor cmp les adc cltd loope pop int inc popf mov push test adc mov (bad) rcrb fimull enter setle es jmp adc repnz mulb ljmp xor out add add cmpb mov adc jl mov popa adc js pushf adc add dec nop out inc mov in add cmp mov fwait mov xchg sbb out push inc adc lock cwtl orl adc sub es push (bad) adc push outsb inc cmp adc pop add rclb and pop clc test adc sahf mov cmp fildl push mov ljmp mov mov ja jb,pn sbb push in adc adc jnp sbb ficoml cs jae cmp mov test xor popa mov jnp pop add add ret ljmp push or mov fwait sub aas stos pop mov int3 adc rcl jl pop mov mov sbb mov or lcall jmp pop adc and outsl ret (bad) mov fdivl dec rclb push jmp (bad) test adc cmpl xchg stos push mov int lds sbb gs inc jp adc sub xchg sub cmp dec repz into fisttpl mov adc jb xlat pop xchg sbb adc int inc dec mov dec push inc (bad) lods or add adc pop push lret and fcomps or push adc les mov xorb in in push push xchg (bad) dec rolb fiadd push sbb inc adc fcmovnb and push push js cmp pop adc enter pop lods adc push imul push pop aas nop mov cmp sbb (bad) repnz push js add xchg in adc inc mov sbb xlat cltd cmpsl stos repz iret mov xor jg adc (bad) icebp movsb adc pop jmp adc in repz (bad) stc push ja jmp dec mov btcl das sbb adc add adc addr16 jbe pop ja mov out or fbld sub mov or movsb add mov (bad) in adc es xor jno dec mov push hlt sbb adc dec loop imul sti das add push adc mov mov out pop adc lahf jnp push popa hlt mov jl add xchg pop cs movsl sub vmread adc pop mov xchg pop cld popa sbb loope mov xchg xchg mov sbb ss (bad) (bad) sahf jl add cwtl pop test dec test cmp adc push lods fdivs cmpsb mov add mov sub cmc cmp adc in std jns dec outsb adc and ljmp pop in std push stos out call cmpsb int3 sarl hlt mov adc cmc adc lds loopne insl ficom adc lods hlt pop xor pop adc stc call cmp test jb repnz ficoml fbld gs subl adc mov mov and jo mov loope push shrb ret xchg push adc sub iret dec push clc (bad) push or mov fwait movsb dec rcl (bad) jo pop add add jbe repnz adc ljmp mov mov shlb push sti cld add jno nop cmp and jae stos sbb dec ret cmpsl aad or cmp cltd jns push and mov (bad) xor clc sbb mov adc mov into jno pop jnp adc mov xchg insl mov jb (bad) add dec pop adc sub addr16 adc add in pop xchg movsl add sbb adc loope or jmp sub push nop scas iret push xchg sbb mov std pop inc xchg cld in pop (bad) loopne push xchg dec jae cld (bad) jb in xchg or cmp aaa out pop (bad) push inc mov pop mov ret adc xchg (bad) mov inc pop adc test pop stos lea int3 test out xor mov loope fimull cld fmuls repnz repz push jnp push mov adc out xor dec mov scas imul add xor pushl pop idivl in mov jmp stc std mov ret adc xor and cmpsb mov and cld pop shll sti pop test mov js adc pop enter mov ds or fistp jno sub cwtl leave out push (bad) hlt sbb test addl pop mov pop out decl faddp notl pop inc mov lret pop adc push jno cld jecxz mov xorl std xor arpl cwtl push pop mov mov fnsave test mov loop enter mov mov cmc dec add adc mov movsl xor fcmovnb sbb or inc mov je adc inc cmpsl dec pop es fisttpll aas and mov fdivl inc cmp cmpsb ret sub das iret stc sbb repz sub imulb or cmp cmp push push add mov add jnp add aas movsb inc pop jle push out pop fs and dec rclb jne aaa das pusha movsb jge mov into push inc add ds adc (bad) fwait inc mov jp adc decb call lds repz ljmp cld cmc (bad) adc add adc fmul nop (bad) shrl movsb hlt add repnz bound fisubrl daa mov jns dec adc mov shl loop pop xchg aad (bad) xor das add mov out xor sbb daa mov pushf aad out lods mov push adc aas pop push in or or (bad) xchg sahf jb adc ds (bad) sbb or adc fidivl scas adc jb pop mov enter sub hlt rcll push mov jbe dec adc adc das and inc adc xor sbb xor fwait mov aaa repnz imul sub ja cwtl adc push or cmp repnz out xor inc sub cmpsl mov ds repz or clc lcall (bad) jl fisubl bound jae sbb sti lahf jge sub cmp add fcomps adc xor in adc xchg or scas jg fisubl mov repz push xor xor out jmp inc or sbbl xchg jne or dec lret mov (bad) pusha or xor mov push xchg or lea cmp lods pop sub or jns dec sub jp popa pusha cmc sub jne mov lahf jno icebp xor xchg push xorl (bad) adc (bad) sti and push cmpsb adc popa scas lods mov movsl jns push adc inc push insb add xor adc push lcall jns test adc inc adc adc pop mov stos mov outsl lock loopne adc push imul test mov (bad) mov or test sub xchg loop out pop jl dec in adc into xor cmpsl fnstsw add (bad) aad or add dec (bad) sbb mov lret xchg stos add or jmp (bad) adc add or outsb js repz inc lea or fstpt imul jno insl ret cmp adc fisttpll das adc daa jg dec add jne mov push movlps mov insb adc divb js mov xchg out gs (bad) adc hlt jl cmp roll nop jge lods je ficompl lret into sti cli push sub cmpsl out jns pop xor cs int mov lock adc cmp lods inc or std xor (bad) fsubrl sbb and lea inc push push outsl pop adc jbe nop adc lret mov mov mov mov sub xchg adc daa nop rolb inc jecxz or insl mov cmp fdivl cmp sub cmp stc adc inc js imul (bad) loop call cld dec mov aam add icebp js ja adc out insl mov push insb add popf jae icebp mov hlt mov adc fcoml inc mov adc imul push fs mov add int3 pop addps adc push rcrb outsl or jno push pop ss dec std adc or dec adc rcrl dec adc adc inc cwtl push lods adc push xchg add adc out add mov mov mov inc sub mov dec popf loope in mov inc jae enter jl cmp pop loope call ss mov adc scas mov adc jne call mov push mov loop add mov adc push or adc out js adc adc sti fiadd sbb mov inc cld adc push mov rcrl aad mov icebp push rolb mov sbb pop dec movsb je adc mov enter bound ror das adc addr16 mov aam adc push sbb popf adc xor or (bad) aaa sbb cmp lahf inc cmpsb sbb jo rcll and dec xchg push lods cmp pop lahf arpl sbb sbb mov cld mov test (bad) mov cmp mov movsb mov add push sub pop sbb sbb push pop bound mov adc mov xchg xchg cmp mov and repnz jmp mov std gs sahf into pop push adcl arpl aam out scas popl sbb adc stc cwtl adc pop fwait sub popa adc mov mov xor inc mov xchg sub xchg adc enter mov xchg imul xor loopne lar adc in mov notb mov lock pop add mov jp or test nop das jecxz dec mov daa and sete adc lea xchg jecxz ljmp loopne mov jbe pop popa jmp sbb lds sbb sub add inc ss adc xor sub cli imul mov enter std push repz js inc jbe and push push xor cld sbb xchg pop es mov sub (bad) call cli sub or addr16 aaa sbb add imul stc sti mov popa or adc scas cmp pusha add adc dec jae xor loope xor pop lods aaa add xchg rcll adc ret mov in hlt pop jle cltd add and int clc pushf (bad) or mov push or jns adc xchg repnz popa std lods (bad) cmp sar push std fbstp sub mov adc aam bound xchg mov sub mov pop lea mov add data16 outsl repz push movsl out in imul mov fildll mov cld adc jp hlt push jecxz pop fmuls pushf xchg mov testb mov pop pop pop lret shr shr (bad) out jne sarb jb out cmc push stos mov fsts add (bad) lret or pop incb js fs rcrb popa imul add pop scas js adc sub jp mov mov ja stos add repz sahf mov movsb xor jb cmp and mov out xor xchg adc nop cmp adc movsb (bad) out xchg xor xchg push inc daa sub je mov fistl (bad) push jp repz icebp mov outsl sbb dec fildl adc add nop mov int3 mov cmp inc lret sbb sbbl cmc jno push hlt adc in (bad) adc dec pop cmc vpsllq jae lock pop mov mov ficoml push sbb jno mov adc jl pop rcll cmp aam add sbb roll sbb and imul repz cmp cld sti pop repz pop mov cwtl sbb aad ljmp ret and cmp iret push ds inc or mov push or push pop mov fmull add (bad) jne cwtl mov arpl fcmovnu mov or cmp xor aas add xlat xchg jp jnp jb call rcrb ljmp adc (bad) sbb inc sti add stc cmp cmp or loope xor lods sbb in pushl (bad) jbe pusha adc mov xor gs or fimul nop xchg clc jno (bad) and pop jp,pn or mov in adc decb adc sub adc dec ror push add inc xchg adc test jo push and test cmp stos ja int3 adc mov push nop in fist subl xchg xor aaa ret push xchg dec loop js lcall cwtl int3 sbb call inc fnstsw stos inc adc lods add aaa jae icebp mov push out (bad) push cmp cmpsl cld or cmp xor call out mov xchg imul mov push jne mov adcl or and jge,pt cmpsb mov and fcom or mov dec mov repnz adc (bad) mov lods in dec dec jle cmp popa fsts mov adc outsb in and lahf rorb mov (bad) mov (bad) and sbb stc sahf add mov mov push add mov ja sub and sub mov fistl pop ret test faddl mov test scas add mov pop call add cmp jp adc mov cmp stos adc adc xor (bad) das int adc mov je movsl ret rep add mov adc add dec shll cmc adc sahf mov lahf insb cwtl sub repz test or mov pop xchg cmp push (bad) cltd xorl idiv sbb mov or push xor sahf cld mov int loopne adc sbb push pop mov psubusb sbb mov jl (bad) js jne adcl xchg mov cmp sahf mov inc int3 sbb fs adc dec xor mov push adc add js jnp add int adc loop (bad) adc ds pop and testb test jno je mov xor or mov pop repz sub cmpsb test mov mov or call outsb or sbb pop pop pop hlt js daa adc xor (bad) adc add stc adc push adc adc and mov or adc mov lahf ljmp jle fidivr adc push sahf (bad) jle adc jns (bad) mov jnp rol inc je sti add pushf outsl or pop fdivl mov cwtl mov dec int3 hlt inc pop add insl (bad) adc inc int add adc sub add je jmp jle aaa lahf mov xor or jne or out or adc subl jne mov hlt fwait out inc aaa jmp jg imul xchg mov arpl sbb adc add mov sahf or shlb cli cmpsl adc ja neg inc adc imul mov sub mov lods xchg adc push daa cmc into sbb mov cmp inc inc fsubrs mov movsl xchg test fcmovnb adc jbe incl xor mov push in dec inc shrb fs pop inc mov out pop dec cs add adc pop imul xor pop cmpsb (bad) (bad) adc (bad) pushf push int3 jg rcll sbb xchg cmp sbb ds add jge test hlt adc insl lret pusha cmpsb sbb pop and or lret lahf jnp gs add and pop jae jns jmp pop add and sbb add sti xchg add cmp mov scas dec and cmpsb xchg add adc mov outsb rorb inc or xchg jo adc mov push mov adc dec mov jge adc inc bound adc inc xchg lock jae into imull xor pop pop out int dec pop insb (bad) pop shll sub bound inc jge iret mov lds add (bad) mov xor movsb cmpps es leave adc movsl cmp dec or repz (bad) push popa mov in jp and insb adc cmp cmp mov jne mov pop cli punpckhdq imul data16 push mov mov call pop mov inc clc and push push jmp add loopne es std pop scas stos mov hlt adc xor mov rclb adc cmpsb ja loopne inc add push cli shr mov insl aaa fxtract cmp dec inc (bad) adc aaa ss repz mov popf adc dec std add sbb jmp lods aas daa adc pop jge inc mov adc jae adc lea in mov adc arpl pop adc mov les jnp sub mov mov bound sub adc daa sti aas jecxz adc ja cmpsb inc (bad) push pop adc rorl aam or sub pop sahf test (bad) adc pop dec cmc or scas sub mov int3 into or ja roll pop jmp aas scas and mov rcll sbb xchg lock mov xor js sbb dec pop sti push rcl jecxz jno jle lea adc dec pop gs outsb orl pop je mov and adc jg pop cmp scas out stos or cld adc mov out adc adc sbb ljmp pop sbb data16 jae mov ffreep in test pusha es sbb dec rol popa scas adc div pop je test jae or (bad) out pop or in enter inc int3 adc push push sbb das gs jmp (bad) and scas sbb or call leave push (bad) xor cs pop (bad) jmp or xchg sub cli repz add pusha popf (bad) or movsl cwtl mov adc xchg xor pop sti das jne jbe sbb in aas add imul fstl xchg mov and rcr icebp adc insl aad lahf pusha repz or enter lods cld xlat xchg and adc fcmove mov sti pop cmp mov jg mov ds adc cld cltd mov pusha xor repz cmp sub adc nop loopne xchg lds mov push pop xorl cmpsl lods adc data16 dec mov ret rorb jne fwait sub adc pop mov adc inc push mov mov dec pushf adc scas mov test stos add (bad) sbb jno loopne xchg fidivrl loope ja xor xor push aaa in lea lret (bad) mov cwtl sbb lock pop sbb mov push inc test sbb mov jo fisubrl jb int3 cmp mov push mov add jmp adc popf aas in jp inc jne xlat mov adc cmc jns int3 decb xor cmp aas frstor mov xchg dec xchg ret pop adc jns jne xchg ds adc cmp or out shr outsb test sahf push test repz xor inc pop push mov add faddp fcoml mov ja xor add add xchg dec test (bad) xor mov push push mov jmp adc addr16 adc psllw and mov lock es imul or add adc daa inc std or pop xchg jp push mov popa lods adc in test mov arpl out dec xor adc mov jl push push sub cmp push push or sbbl adc xor rclb enter nop xchg mov in test or push stc sub mov dec add adc in rorl cmpsl aam repz jno dec loope loopne repz dec inc sti (bad) fisttpll cmp mov out add adc insb jae cmp pop mov inc adc xlat divb (bad) fldl sti imul jb and xchg lods insb dec mov dec pop push in es adc xchg fs xor jnp js or daa xchg inc fidivl mov xor and lods adc pop aaa movsl loope sbb mov dec adc mov cmpsl adc pop cwtl loopne iret adc mov push mov popf jge ret mov int3 pop idivb icebp ljmp jns or mov xchg push push mov in adc mov jns hlt out fwait cli cltd adc mov in pop cmp jmp and jo dec jg (bad) dec and cmp adc mov xor xor repz or mov hlt adc xor pushf adc inc sbb adc daa add fcoml sti push test int out adc stc cmp xor xchg mov popf arpl xor adc repnz jae test movlps lods sbb adc push rclb cmp xchg adc cmp insl xchg and mov adc push fistpl mov xchg (bad) test mov cmc lods pop jle fdiv xlat adc xchg inc sbb ja jnp sub iret nop mov adc pop jnp sbb cwtl add pop movsb xchg icebp mov push xchg stos les pop aas loope mov adc sti sbb in sub cmpsb ds pop cld adc adc aam xchg add mov pop sbb mov mov ljmp or andb (bad) mov adc shlb stos aad and adc jecxz xchg xor cmc push fstpt repz bound dec enter mov int3 adc in and inc xor xchg out sbb adc imulb imul xchg adc loop xor addb cmc sub or push icebp dec adc jp inc loop mov movsl fs jecxz adc (bad) outsl jno shl adc sub cmc arpl inc test inc cli push lea scas dec inc adc xchg cmp xor cwtl mov add and fstpt (bad) cwtl adc ficoml adc stos inc fdivl mov test pop test and sbb dec dec (bad) stos ja jg jp jo adc cld pusha pop addr16 sub rep nop aaa push push cmp adc cs dec mov dec mov repnz push push bound and mov or inc mov fistp add pop pop insl js adc jbe and loopne ret jae rcrb shrb and inc xchg pop pop test adc inc repz push push call aaa jecxz cmp out loopne push lret mov pusha sahf adc push push adcl and mov popa pop in adc mov jo inc arpl mov inc lret xor push ja push imul cld mov and jo repz mov (bad) clc std mov out add lods jno or sub clc adc out dec in adc ss add jg movsb ds xor ret outsl jno sti test in mov jbe int3 sbb scas cli rcrl adc es adc or jecxz xor adc cmp and repz or inc lret or mov fist ret jnp add outsb xchg sbb adc push das sbb addr16 imul xor jg setbe adcl fs cld push inc adc sbb sbb repnz mov mov repz out inc xor movlps mov add out cmp inc push pop xchg adc pop es call push aam jl pop xchg add mov inc leave xor xor into xchg ffreep adc push test xor cwtl sub rcll xor sbb add fisubrl cmpsl (bad) nop std mov (bad) stc or lods pop pop out adc enter pushf lret mov mov es xor hlt ret inc test add adc pop stos or (bad) stos fcomps roll (bad) lods push loopne sbb sbb addr16 call jnp jecxz std xchg dec sub push loop jns sub fcomps pushf xor add pop aad lods adc notb adc pop lcall sbb jmp or xor jecxz leave cmc inc stos (bad) out das add fs (bad) lock ret mov mov adc xor (bad) loope or rcll adc cs mov mov adc mov test mov movsl imul inc xchg adc mov xor or adc jnp xchg cmc dec and cmp push test (bad) dec addr16 pop adc jg jmp iret pop nop (bad) mov adc je and mov xor sbb inc adc stos jmp push xchg hlt adc mov ja ja jbe cli adc addr16 test sar push mov (bad) mov in add inc aam adc sbb out jbe adc inc or sbb jp inc jl,pt mov cmp sbb mov popf and stos jp addr16 and mov in fdiv jmp adc push adc mov adc adc mov mov aam sub ja sub or lahf adc jmp movsb mov mov adc mov cwtl repnz adc inc inc jns jo sbb bound sbb adc (bad) mov push addr16 mov push pop lcall pop rclb add and jns insl cltd mov jle cmpsl loop rcrl push rcrb test xor fmull adc push dec sti cmp mov jnp adc cmp repz add dec pop nop mov adc or mov (bad) pushf fwait sahf xor aam cwtl add lock jle (bad) xlat mov or rorb scas pusha mov mov sub sbb mov fwait out adc mov in lods inc adc ficom movsb adc xor push repnz dec xor push mov in lret adc push dec repz or mov test sub adc in rclb out aam int cmpsb cltd jbe mov rclb xor call dec jg fbstp xor fcmovnbe mov jae push adc push fldl jno stos cwtl add cli push icebp rolb test mov jns into adc sti sub adc dec inc mov and jge test dec rclb and vandnpd mov adc dec push sub incl adc jge sub pop call jae frstor adc dec xchg xor stc cld icebp adc out and cmpsb das push addr16 scas arpl add and popf mov adc aad push adc outsb add mov (bad) nop or jae cli adc xchg push push jmp push cmpsb add imul pop dec sbb and push sarb push stc and mov aad and sbb mov sub pop push adc adc lock xlat jp adc cmpsb xor shlb (bad) aam xchg (bad) aaa cli pop or fisubl lds mov xor out adc sbb mov mov (bad) xchg dec and daa repz push test or or pop popf jns adc jb (bad) stc jbe dec adc mov sbb push int mov hlt cmp adc rorb xor pop dec jbe xor or js aas push lds xchg insb sbb stc adc adc test adc (bad) je cltd insb sub adc jno adc jnp adc cmp (bad) lret ret mov mov ss (bad) cmp mov adc pop mov test sub nop adc xor lods repz push xor setb xchg cli adc les lea data16 push adc pop and inc lahf sti adc lock dec pop stc xchg adc and adc xor sbb adc addr16 mov and dec (bad) mov mov and pop adc fnop jne ret pop outsl adc loope mov in adc js jl mov sbbl dec mov xor imul jecxz pop and daa and push push or cmp movsb adc mov cmp fisttp sbb xchg imulb mov lds mov xchg add push add mov (bad) mov mov rcrl std mov and int3 xlat addr16 stc jnp repz mov outsb sbb push cmp loop add cmpb jns movsl or (bad) adc notl in in jno and pop mov out adc jle mov cmp es imul and mov adc sub ret pop mov push repz call movsl xor dec push add xchg mov xlat jecxz mov (bad) push repz push je sbb (bad) leave xor push mov mov aaa ret repnz cld and movsl test jo adc mov adc mov ds xchg jns cmpsl mov push into sbb adc mov sub dec cmp scas enter addl stos add xor mov mov push (bad) hlt pusha dec and mov cli stc add inc xor mov psllw adc in scas jbe xor mov mov inc cwtl orb bnd popl xchg cmp mov mov and jp out loopew pop adc out les xor int3 cmc xor mov adc push faddp shrl sub mov lahf sar cltd adc es jnp add in sub insb fmull adc xchg jb adc pop cmc pushf xor lds pop arpl dec or or jne imul repz icebp dec push sub insb repz outsl mov jns movsb cmc scas inc mov xchg push (bad) std adc sbb push rcll push and in std neg popf insl sarb mov and xor int3 (bad) data16 pop pop movb jmp divb inc inc adc enter popf fdivl mov xor pop mov xlat je and xchg bound xchg dec and pusha inc mov xchg adc insl add adc aam je cmp nop das in push or dec mov movsl adc test mov mov outsl leave cmpsl pop ret pop adc (bad) mov push pop addb xor xchg pop aaa xchg inc leave mov inc push adc push pop icebp cmp hlt mov ret pop adc rolb rclb test (bad) dec stc pop lret adc and mov jno outsl sbb add lcall sbb (bad) jmp cmp in add inc imul mov push mov pop xlat out push mov jns,pn pop cmp stos add adc aad jne push mov lea xchg xor fcmove jnp add cmp adc sub lcall ficompl out adc mov in or adc jmp fcompl mov dec sti lcall es xor mov mov fdivrs pop and lds inc adc clc repnz and inc pushf nop outsb or dec loopne add cld and adc or in jne fs and sbb mov mov movsb mov jle push or add xchg imul enter ljmp push sbb fiaddl movl mov xor adc test jg xchg inc lock (bad) mov das jl lds cwtl add xchg adc shr sub cmc divl das pop sarb negb daa mov fs mov adc fisttp int jne lcall (bad) or or mov mov mov xor jg cmp jmp cltd je xor sbb cmpsb std imul mov mov jae lods fstpl pushf or push mov mov (bad) movsb in cmp cmc mov je leave jbe and jae adc sub frstor out stc stos rorl int nop and je adc add jo cmp push jl inc and push cmp inc rcrb bound mov adc insl inc movsb or sbb push xorl mov push daa sub cmp movsl pop push movsb adc mov (bad) testb cmp pop outsl and (bad) cmp stc shlb test dec dec (bad) pop mov cmp adc xchg (bad) adc fsubs adc ret ja sub mov sarb jle inc push mov dec add int aam hlt adc aad pusha dec test jo add mov mov and inc pop jne rcrl or cli add mov adc dec pop push adc jo xor imul jg or lods stc scas jne adc cmp xor mov push dec dec (bad) movsb arpl shll xor loope (bad) call adc in inc jo sbb mov jge shlb mov arpl les push aas mov dec outsb adc (bad) es (bad) shlb push jae (bad) out out adc enter mov movsb repz testb dec add sub ret and cmp xchg mov rcrl movsb jne sbb mov cmpsb mov das pop mov adc scas cmp and imull inc jl adc add add fucomip adc pop cwtl insb int xchg lea dec (bad) mov jnp lea loopne sub dec insl fldcw adc mov mov fsubs pop mov or in mov std popl popa or adc mov adc inc jg addr16 push adc adc adc dec sbb lods dec (bad) mov sbb jg movsb sbb add cltd xchg adc cmp cli adc cmpsb inc in fimul mov adc mov xchg push (bad) idivl into jns int3 adc jno call stos jg movsl pop in dec jno sbb or scas mov xor sahf pop pop and adc pop and bound push out xor jnp (bad) out adc in (bad) add mov push and hlt adc fnclex push fs sbb mov mov ror pop rorl data16 or ret adc add mov int sbb dec fidiv mov sbb jmp mov cmpb shl aaa xor in mov or cld xchg fwait jb or rclb jge clc aam adc and adc in repnz mov das fs jmp scas scas call lea loope or adc pop mov pop cltd ja cli jmp add mov roll push test cmp aam add pop ret dec movsb daa adc pop iret es pop adc adc insb adc adc adc xchg xchg jns adc lcall hlt mov mov stos rcr jge rolb fs into sub add xchg add mov push sbb rclb jp inc adc pop cmp add push or mov xor add xchg inc mov neg mov lcall outsb jbe push repz sbb adc push inc xor add adc mov int3 pminub mov pop loop mov mov shr dec js es aad pop loope test bound or in jb adc sbbb js hlt fcmovb aad inc fildl mov dec daa add mov add addb adc or enter dec std inc jl fisub insl adc (bad) mov adc sub int3 mov push jecxz push lock (bad) leave fmuls pop cs decb (bad) enter jle adc or iretw push test sahf and dec jle std sub xchg lcall fs pop rcrb or (bad) out repz (bad) push or mov test (bad) adc jo and dec fst jbe in (bad) or mulb sbb les adc pop inc xchg lea sarb mov adc jnp (bad) xor pop addb adc xchg subl and cli adc and jae cmp sbb psadbw insl ficomp add and shrb das jo in jne xlat clc xchg pushf sub xchg out or jb (bad) bnd jl adc mov (bad) adc rolb pop inc mov adc dec fdivs cwtl adc rorl sub sarb add aas adc push inc nop sbb sbb (bad) xor lods popf (bad) in in cs mov das add scas adc cwtl or mov movsl inc adc xchg adc or sarl jb sahf adc xor and xchg mov jp xchg sub stos int3 adc jo dec and adc inc pop out into insl xor mov sti sbb xor or adc imul inc sarb sti mov mov jg inc xor mov iret repnz xchg adc pop cltd popa imul mov scas mov in repz sbb mov fstl xor mov inc mov (bad) loopne jl addl adc cmp adc xchg mov jg cmovle or sub movsl adc mov add test xlat aaa mov mov shl jno sub dec push fadds les sahf jbe (bad) and popf mov in icebp pop aad cmc xor or pop lods ror adc aad push jg inc outsl or add cmp fiadd add popf nop nop mov movsbl call hlt pusha popa add jb xchg mov icebp adc adc and add loop js out les scas dec sub lret mov or jo,pn ficoml cmp decb fidiv pop mov fstpl ret adc xchg xchg mov jno test add adc jns push outsb sbb ret adc sbb dec and cli adc cmpsl test gs inc and movsl adc or shll imul in cmpsb cwtl mov mov enter bswap add aad ja arpl adc adc mov adc xlat fdiv adc pop fidivl aam in or sbb cmc int cmpsb jo lea test decl mov adc in int3 adc and pop add out imul adc (bad) mov jle push adc dec jno add jne xchg out adc cmpsb xchg fistl stos stos gs xchg test push idivb (bad) adc xchg in mov test mov mov and stos rcll adc mov popf adc inc dec ret mov cmp or scas in mov aaa addr16 or mov and pop loopne add imul adc xchg cmp (bad) inc test push fldl sbb fsub or hlt xor xlat jno movsb das or and jne lret add cmc dec imul lea inc lock fcoml and or adc cltd sbb ret movsb pop fcoml outsl dec sub lcall sti sbb pop xlat sbb paddd add jp scas arpl xchg in sbb mov add jmp leave mov push jl pop adc sub sbb cmc or (bad) adc cld cltd sub mov test pop jo mov aam ljmp test push fs cmp shlb cwtl sahf jo sub roll mov xchg mov je adc lods sub pop scas cmp xchg mov int3 push push (bad) stc arpl mov mov aaa sbb adc and push and mov sbb jne sbb inc sbb adc imul adc pop or xchg leave jle sub adc in mov iret inc out lea aas decl adc scas aad (bad) (bad) pop repz in push daa lods adc add ret lea cmp aaa lods enter mov add adc insl sbb int rcll fiadd inc lahf (bad) jb jnp push in mov cmc adc jecxz scas jge shlb push inc add and addr16 (bad) adc pop xchg out in out inc adc (bad) adc ret stos adc inc loop ljmp divb lcall mov dec leave dec je mov xor jae inc jne mov movsl sbb adc stos pop push mov pop scas xlat mov add mov subb push orl sbb inc imul or clc adc mov mov std cli arpl and repz xchg sbb mov ds mov dec pop or fnstcw mov or xchg pop jno pushf mov outsl mov out cmp cmp add push ljmp adc xchg pop aad adc pushf mov int3 inc mov push dec loop xor sti xor add adc mov cwtl inc lods adc mov xlat adc je mov or adc or ja jmp mov lret cld sub rcrb mov add xor das psllq xchg cs mov in adc stos mov ja mov add rclb sarl orl push xor cmp mov imul sti enter adc dec movsb loope push cli xchg fmul popa mov cmpsl add and pop dec iret scas js fnstcw out sub adc push leave push hlt call add rorl ja or fstpl ret fs cmp adc popa xchg fisttp adc mov add lahf js and std data16 mov imul adc xchg je mov push push mov push rclb repnz xor mov stos mov lds std pop dec adc and aas arpl or js inc scas aad cmp adc inc stos pop push rclb adc pop dec orl jb inc or adc sub pop cmp test adc adc (bad) cmp jg and cltd jno ret dec or fnstsw push xor int3 sbb sarl push xchg sbb adc lret add icebp mov pop lea adc pop (bad) loope adc in fcmovnb or loopne fwait repz xchg lret xor push arpl dec fldcw (bad) gs out lods aad jge pop adc mov ja push mov pop (bad) adc jne test xchg sbb mov movsl push xor xor aaa sub sbb xor int3 leave or in roll xchg push push sbb add ja or adc adc mov repz mov add aad dec xchg rorb sub pop adc pop pushf push adc jno in xchg ret add jecxz test dec sbb js add sbb fdivrs outsb or loopne aam repz and jl pop mov mov mov pop xor mov imul mov mov rcr lret test in xor jne xchg pop (bad) cs pop pop mov data16 (bad) xor repz in das inc lock sub mov dec sbb sub (bad) in clc pop cli fcoms cmp add adc pusha ds addr16 cmp sbb pop adc fistpl xchg daa push ja sbb mov dec adc rcll adc add add push stos rclb or adc ficompl add jne fbld adc es mov shl dec cli add xor and lea mov lret or adc je cmpsl icebp add pop sbb fs pop cmp and rclb pop ja movsl adc jmp jge adc dec icebp pop iret cmp mov xor repnz scas repz pop lods (bad) sub test inc mov push cmpsb pop into mov ljmp dec adc mov push cwtl dec cmp pusha fistpll leave (bad) mov adc mov mov mov push enter adc ret sbb ss mov push rolb rorl push mov loopne adc (bad) pop nop sti mov in aas adc mov push mov mov repz stos mov cmp sahf sbb adc popa mov lret push (bad) or int adc loope cmp jns or add and stos nop jg pop or jo mov dec adc cltd adc inc cli mov lcall push adc arpl lods adc rcrl adc pop mov add inc mov ret adc push pop dec test adc cmp xchg lds adc dec and (bad) (bad) cmpsb jno adc jmp cmp adc sbb push scas jb jl int3 roll icebp adc stos mov stc das pop jno loop sbb add inc adc mov adc adc sub aas (bad) mov adc loopne mov jle in adc cltd dec mov pop dec or xchg cmp adc jmp adc add push pop and lret (bad) adc jge repz mov fsubrl adc add adc decl dec outsl or ficoml into push jnp jb aas adc push adc jne lcall dec je cmpsb lods mov repz adc add mov subl hlt mov (bad) adc push js test arpl mov sbb sub xlat mov outsl stos psrld add imul mov lret dec sbb xlat adc sbb sti fnstenv dec adc mov iret loopne adc pushf add adc jmp adc jl faddp in cmpsl adc loopne push jmp push sub fidivr lret dec inc jbe (bad) sub mov pop mov cmc mov bound inc sbb dec sti push pop aas in adc mov neg adc push sti or jnp inc cld bound (bad) rcrb cltd adc pop push pop pop lods adc adc inc jle adc and adc lods or or nop mov jo jl jbe add sub pushf scas push xor stc sub or inc mov cwtl dec in adc scas aad mov dec jp imul fcoms sub sti pop shrb cmp aam jno dec loop adc lahf jae mov rcll dec mov cmp aam mov pop and mov nopl sub stc pop push xor or leave add lcall fsubs popa pop pusha xchg mov push popf test add shll mov fdivs or pop fs lret adc mov loop sar (bad) inc pop adc mov out addr16 in xor push mov push xor sub push adc and jmp test pusha js daa hlt adc and in add xchg mov test repnz adc adc lret xchg cmpsl repz test mov adc movsb push adc pop (bad) arpl das adc cmp mov mov mov addr16 or or adc scas push adc js adc adc das movsb mov adc loope mov f2xm1 or mov ret clc push mov ficompl adc mov pop lahf repz int mov rorl cmc mov jp mov ret push jmp fwait lods into mov jae adc push sti (bad) into jno call fistpll out lock mov jle adc ret pop and clc sbb and adc insb dec inc lcall cmp (bad) jb es adc (bad) jbe push lahf (bad) rcrb sub sbb mov (bad) dec shlb xchg sbb ja cmc adc clc xchg jns out je adc daa rcll push jmp std push mov mov pop jno sbb push push add mov pop (bad) int jns add xor and bnd fwait push adc mov pop xor adc jge shrb fwait test mov lret dec sbb dec push mov mov dec or adc loop adc xlat xchg lods enter icebp sti stos iret dec add stos sbb (bad) xor leave stos insl pop push mov inc adc icebp cmp pop adc fildl (bad) mov es adc jmp sbb sbb dec movsl push jnp adc shlb cmp mov jmp sti adc rcl adc aas aaa mov adc je pop mov jle sbb cmp adc push sub pop por mov fnsave xchg outsb test sub jl sahf adc aam xor sbb das adc andl mov movsb daa fucomip xchg mov xor xchg (bad) ret jl mov adc mov adc idivl icebp shrl clc inc adc sub mov mov int je lret sbb dec scas sahf imul aas pusha iret add push clc push mov inc add add adc xlat sub or push dec adc lea fisttpll lret dec dec push xchg push sub sub jg fdivrl fbstp cmp add repnz add cmp adc lea out not std sbb stos jns (bad) lock adc call outsl out mov push mov ss mov mov push push stc out dec sbb (bad) and roll nop xor cmpsl mov push or pushf sub mov orl lods adc lret sbb and bnd cmpsb push lret push or push ficom xchg fwait mov repz adc in inc cmp mov pop and cmp movsl adc mov pushf fwait in lahf popf xor cs dec pop push add xor ret pop jbe into bound cmc iret mov inc lods imul adc xchg jo lahf cld fwait push adc jge mov jns repz pop cmp or inc or add jp cmpsb adc or cmp push mov fdivp add pop ret ljmp idiv enter adc mov sahf jecxz cmp adc mov sbb popf lahf sub adc or pusha leave jmp je adc ret bound aas add adc mov cmpsb adc int rorl adc cmp imul dec icebp inc and (bad) int pop (bad) xchg pop (bad) rcl push repnz xchg arpl rorb outsb fsubrs xor jle mov fimull push pop jl daa into push adc test xchg cs add les fisubl pop repnz in mov adcl movl dec mov popf mov xor mov sub adc subb movsb inc repz mov (bad) cmp lods pop (bad) into mov adc fsubrs push adc lods mov fsts xchg lret adc cmc rcll into mov inc push in push repz and cmp data16 mov dec xor mov popa fnstcw fnstsw daa inc lcall pop mov mov leave mov adc inc sbb popa mov mov (bad) fcomi xor dec add and add cld push xor out fistpl jl dec adc xor pop sub sahf push je mov in (bad) xchg sbb shlb lcall xchg gs icebp mov mulb pop dec fnstenv xor rorb dec dec dec pop (bad) mov adc icebp fbld mov cmp dec mov adc and in leave fnsave pop cltd sbb fwait pop pushf xchg mov cmpsl mov rclb popa into xor or repnz mov mov lock adc jge pop or and adc sbb test and adc cmp aad fwait and xlat mov notl jmp out addr16 call mov faddl mov lahf cmp in xlat mov adc sbb pop add add mov or push mov jecxz jns shll add out fild cwtl xchg out xlat adc enter adc test aam adc sub int3 pop mov adc idivl out dec ljmp fdiv mov and cwtl jl or add out xor sbb data16 add dec ja inc adc je (bad) add mov test inc add mov imul xchg cmp addr16 adc movsb les ss adc pushf stc xchg popf sbb in sbb or cld pop adc adc test and adc dec lret xchg adc and adc cmc add push adc in mov pop adc int cld data16 cmp sub dec jno inc pop pop fs ret ss fnsetpm(287 adc sti pusha fwait mov push dec xor mov mov push aam std or push and repz rorb xor add jg lds jle enter punpcklwd lods dec aas sahf arpl (bad) decl adc sbb stos push inc or sbb cmpsb sub test mov dec outsl xor paddw pop adc js in adc pusha sbb mov ljmp mov loopne add push xor mov (bad) jp mov dec sahf out ljmp int3 or jecxz pop xchg mov xor jno fcoml cmpsb dec jns loop int adc icebp pop scas xor out testb xor xor cmp push subl mov in adc inc add test lea dec add mov sbb dec jae dec aaa inc xlat sti adc push mov cmp iret add (bad) xor lods std pop int mov push jno negl cli je xor rorb imul rcll jnp outsb sub adc leave adc xor lods scas adc pop sbb adc popa mov adc loop mov adc pop cmc les pop stos adc pusha mov push or enter mov xchg dec idivb xchg ret add shrl adc and mov add inc mov xor lods or sarl ss fcmove pop xchg inc mul xchg nop or inc sti mov nopl ffree adc fcompl mov icebp lcall fdivrl enter (bad) jae jg adc push cmp adc or (bad) repnz fbld inc adc mov xchg inc out and pusha cli xor sahf (bad) ss sbb push push cmc and add pop rcll fmull mov xchg dec iret xchg adc lcall adc out pop add sbb adc mov adc adc aad xor mov and out pop or push xor out fwait (bad) test or outsb adc bound iret mov xor jp popf mov (bad) cld xor repz cmp es call jmp add push insl (bad) adc lea js or adc nop loopne xchg jl add in in (bad) push xor add lds inc in pop jge adc inc jae jb call or adc (bad) and roll dec xor mov iret rclb (bad) sbb insb andl adc jg mov push pushl mov addb rcll ret jae idiv adc pop imul in lret lods jbe push xchg adc cmp inc mov jns push push (bad) test ret dec cld cmp push aad adc js gs (bad) sbb cli sub insb or adc mov xchg pop (bad) jno pushf ficompl aam cmc sbb scas adc push (bad) test mov loop clc adc lods jecxz adc mov (bad) icebp mov or clc jge mov mov jne pushf mov shlb test push sub mov lret ja push std sub sub (bad) and adc mov xor repz jmp or cmc mov stos imul add iret push mov jl addb mov js shrb inc in pop rcll or mov pop push out adc notb or outsb fstl lock xchg insl int3 cmc rolb sbb (bad) xor adc hlt push mov icebp lods cwtl adc jg adc sbb aam out icebp adc ss test push mov rcr xor push or jmp loopne std inc sub imul add push cmp adc jmp jns adc and adc or jno repnz xchg pusha push imul sbbl jbe jecxz inc and cmc (bad) adc mov push adc sub xchg testl dec clc mov inc pushf sbb mov inc popa mov pop adc mov mov leave lods cli (bad) ljmp pop lahf mov ss cmp jb adc lea dec add idivb jns stos (bad) pop xchg adc mov push adc xchg inc hlt cltd mov add (bad) je push sbb adc fdivr int3 cs nop adc xchg (bad) sbb imul cmp xchg mov push xchg fldenv push push jae pop fmuls insb and repz add sub fwait cmp adc inc inc or mov jl loopne test pop adc jp and mov jmp stos jo dec mov dec push pusha hlt add (bad) pushf adc loopne add pop arpl int sahf or hlt fdivr movsb mov adc ljmp and push xor insb adc rol scas xchg or adc pop orb adc sub xchg adc je rcrl loopne mov jecxz test popf sbb pusha mov sbb test (bad) loopne and pushf mov iret daa adc out subl loop mov in xchg sub dec jnp ficoml jno daa sbb push imul shrl adc (bad) fnstsw mov add sti int3 pop mov add sbb push add out test lods fwait call adc jb mov push mov and aam daa jo rorb test dec out int3 or mov push jo data16 cmc sbbb std sbb cmp pop aaa add out adc xchg ret dec add xchg rcrb xor push out rorb sub or mov dec orb adcl outsl sbb lcall out (bad) sbb adc orl adc das js insl fistp sbb enter lods ret mov lock and jp push aas enter fwait sti sahf fdivs je adc sbb mov add insb xchg pop fmull xor test lock cmp dec fstps mov js lods inc jg cmp loop lock push daa dec adc add std adc lret cmc sahf les hlt xlat add mov cmpsb push mov mov (bad) arpl ss sbb pusha cwtl fbld sub (bad) clc sahf xchg in movsb fistl cmp xor xchg and aad pop dec hlt lret leave xor push or das mov add into leave jno stos lret lods add notb arpl push imul adc in adc aaa movsb iret js dec xor sbb mov add cmp stos push adc cli adc mov xor lock mov iret fnstenv jp push sbb jns (bad) ja adc pop in jle mov dec and pop cwtl dec dec (bad) adc das fs cmp and add pop testl mov xor and mov push and adc mov adc jg sbb push pop xor pop repz sbb adc hlt fisubr sbb push adc xorl fsubp cmp insl mov mov (bad) jo or nop xchg or adc in sti test adc and pop fsub sbb mov mov hlt and es ljmp push repnz add mov dec and in ss pop push adc inc dec lret (bad) jmp stos sbb mov cs adc subl xlat mov das hlt or add ret stos out mov mov out or add addr16 adc (bad) int3 push adc push sbb leave adc mov xor mov push or adc inc xchg out into sbb adc inc pop and clc mov cmp inc xchg lea adc arpl insb cwtl mov sbb pop outsb xchg adc iret dec int3 out mov push fstpl jo call adc add pop adc call dec adc mov push fcomps aaa adc mov je dec test loop sub ljmp adc movsl add es jp xor dec mov or adc sub adc or and loope cmp xchg cmpsb movsl (bad) push in adc mov rcll dec sbb leave cmp ljmp dec adc aam loopne test (bad) mov insb xlat cs ss xor mov sbb xchg fnstsw in cmpsl int3 jle adc push ds pop inc div ljmp or add js pop pop cmp das adc and adc insl fidiv adc lcall jg and pop cs mov scas dec lahf mov pushf jae mov mov in mov sahf xor cwtl sbb push adc pusha incl stos hlt scas (bad) or xor mov adc into and rol in in add test (bad) xor jecxz inc mov fcomip mov mov adc xor push adc cltd pop and adc jae xor jo fs xor mov or mov insl je mov inc cmp mov pop sbb ficoml imul mov jne or mov cmp push in (bad) out mov mov pop pop sbb rcll aad sub adc adc xor fcoml and push xchg pop subl aam test ficomp xor mov (bad) cltd aas sbbb jbe rcrl aam out jge leave (bad) inc adc adc fild ret pop xchg mov movsb test add dec idiv in int sub xchg pop mov loopne jmp in (bad) jns repz mov and sbb ss lahf adc ljmp inc pop ret adc imulb dec loopne push repnz stos jg test daa (bad) repz mov add xchg dec push out mov add inc and gs fstl mov add or sub sbb nop adc inc addr16 clc jecxz dec adc mov xor mov loop mov pop sub adc mov adc pop aad pop xor jae add mov adc push cmp (bad) jo sub cld mov add xchg jns mov jne push lods or (bad) loope cwtl sahf test adc imul sub stc push addr16 xor push popf int3 outsb dec xchg aad cmpsb roll inc pop addr16 pushf bound adcl lcall and mov pop mov in hlt aam xor mov jns push xor mov adc lock js and bnd mov ss insl mov or push xchg clc sub cmp out into out mov (bad) add dec xor sahf xor xor mov daa add enter jle xor jp push inc xor and or adc jle push xor mov add fnsave mov adc test fcoms and and (bad) imul js jo adc cli lods ljmp adc jle (bad) adc and add mov sbb xchg daa xor inc add push mov xor mov xchg cmp push push mov pop pop sahf jl (bad) cvtps2pd ljmp lds test jge std adc dec sbb mov adc faddl scas adc (bad) xor test pop jg mov out adc pop push outsb adc fsubrp adc insl daa scas arpl aas adc mov mov das push ficomp or shl or jae lcall mov js adc cmpsl cmp jmp sub ret pop outsb adc cld jnp adc add cs fdivrl sub jb push mov adc sub adc push or adc mov mov inc cs or mov xlat fild mov int3 or adc roll cmp repnz loopne cmp pop jg mov adc mov insb fcoml adc dec (bad) repnz pop adc push mov cmp mov or add adc leave out test (bad) mov jg push adc aad mov cwtl xchg (bad) and shr cmc push xor out fcoml fdivl in shrl rolb mov jecxz adc pushf xchg dec lgs adc negb inc xor push or adc (bad) notl outsl mov loopne les ficom cmp push pop adc xchg and sub std sbb scas pop push xchg clc in pushf ret mov jns icebp (bad) lea push add cmp (bad) dec adc subl adc mov add mov mov lret in and bound cmp rcr dec gs (bad) insl add adc fwait outsb lret xchg push mov dec jne mov nop mov gs lods mov push call scas jmp adc add dec mov (bad) repz movhps and rcl or mov clc xor pop test sub cmp add mov xchg add adc add xor loop and (bad) sbb mov loope xor adc adcl or adc add out outsb leave pop add sub lahf jge sub adc enter jne stos or xor arpl iret pop xchg popa push pop mov scas inc inc xlat imull aas pushl xor or ror or bound inc sahf rcll or pop adc cmpsl pushf (bad) sub push mov nop pop arpl add add data16 rol pop mov gs xor mov inc adc add cmp mov lods ret das pop adc iret mov adc sbb sbbl dec sub mov push xor push inc (bad) adc jmp dec mov adc out mov int enter fadds xor push pop jb adc xor adc or adc sarl xor xor pop bound adc jb add test jo aam in adc leave aaa test shlb sbb push adc inc (bad) and or adc into int pop mov (bad) nop aam jne daa cmpsl (bad) inc in adc mov or int jp adc push dec scas adc sub out popf jae or mov jmp pop cli xor mov or and adc mov adc stc pushl clc jmp adc xchg pop sub subl mov lret cld sahf adc jl leave adc lock mov and pop (bad) hlt xchg jnp sbb out pop test mov mov sub or adc xchg imul xor cmpsl mov or xchg outsl cmp and jecxz push lcall or or mov xchg inc mov mov aam into divb mov icebp mov add mov out or sbb push adc fs sub insl (bad) xchg adc sbb adc jl aaa or pushf cli xchg out and xchg mov addr16 adc cld (bad) into cwtl (bad) rorb je pop pop adc ss neg scas sbb (bad) leave int3 or mov je js jle mov jecxz pop mov movlps dec popa fwait sub sbb adc and adc add pushf add jmp adc pusha out push inc adc stos push sbb mov cmpsl adc out loopne out adc inc pop push jb flds mov ret fsub mov test cmp arpl loope or inc out (bad) inc ja ret adc sbb sarl dec and fwait adc push iret and ret or and ds push push decb adc fdivs jle xor inc mov repz xchg (bad) fmuls sbb add or je dec lahf das lods adcl movsb push loope xor add add xchg push outsb adc or sbb sub mov dec xchg adc jl test (bad) repz aad mov sub test xlat adc in in repnz jno mov jg inc adc mov xchg popf jnp je in nop xchg mov inc sub xlat mov mov out fwait cld (bad) fiadd cmpl add lock leave sub push mov nop add jp (bad) in pop cmp sub shl add dec pop inc adc sub or and int3 pop add stc mov push jge arpl jns dec adc mov xchg add adc pop or jns jbe out (bad) or jl adc sub aas nop sbb ud2 lods cmpl xor in add push nop es pop fadds xlat mov test xor adc dec pop jmp cmp jbe scas fs lock daa iret jne repz or cmp stos stos pop pop xor mov mov jne shr and jno dec (bad) or push or jecxz add adc fcoml adc jp,pt sub addr16 inc push stos bound mov xchg mov hlt mov jl push rorl xor loop stc test adc adc cmpsl sub or in add xchg fdivrl push adc mov cmp (bad) mov je dec cld stos mov cli mov add mov jle or cld add sahf adc sbb inc pop adc rcll adc icebp jae adc inc into std adc pusha rcrl jbe sbb inc adc add or cmp push lock sarb dec leave xor (bad) mov fistl mov das out lea dec push nop nop sbb adc xchg push mov dec xlat shll adc jl mov adc or sbb fsubp scas fisubrl mov setbe adc pusha adc popf add sbb fs cld cmp mov mov mov adc fldt xchg adc pop pop sub dec mov mov addr16 pop dec dec and xchg jne int3 add adc clc push (bad) mov sahf xor (bad) insb xchg mov jno adc arpl inc xor cmp cmp cmp lods (bad) cs dec imul dec and push hlt mov in adc mov inc jnp sbb adc (bad) outsb xchg out cwtl xor lahf call pop xor inc repz mov ss je inc push sarb xor nop adc cmp push mov lret mov jb push adc pusha xchg mov popl out adc pop mov jno cmp stos adc dec lods inc fdivl daa jne jns lcall lret sbb or pop adc mov add pop std adc push and adc rcrl inc push leave xchg int cld lret push or dec ljmp enter pop rclb mov xor scas rcr out nop push cmpsb sub dec fisttpll xlat pop test mov dec repnz xchg cmp lea push (bad) rol cli inc dec or popf ror fwait (bad) into cld sarb add add add pop nop sub adc sbbl (bad) sbb je mov cltd xlat adc push fwait icebp popa sbb mov ds pop adc jnp xor fwait scas cmp jmp cmp stos aaa mov mov jb ficompl push adc adc cmp xor push cmp push mov shrl nop jecxz (bad) mov jl cmp (bad) test out aad and sub mov xor or adc mull rolb ja (bad) add push fldcw jmp mov lds cmc xlat pushf and mov push jno cwtl adc xchg ljmp rcll in rclb arpl adc pop int mov and imul movsl mov sbb lcall (bad) jmp sbb adc sub adc pop xor push and adc pop mov sub repnz repz mov daa sbb adc mov lock inc sarb sub push xchg inc dec fistl pushf movsb maskmovq negl cmpsb jg enter sbb xor sbbl cmp jb out and imul fucomi imul or jne (bad) adc xchg cs mov jbe aam pop lahf iret addr16 mov arpl mov lret inc or (bad) jecxz (bad) into cli or out and aad pop adc mov xchg jnp jge enter push dec fwait jl jno adc jle hlt inc mov inc adc pop inc jnp adc add iret push mov in outsb out lock adc loope sub xchg (bad) test cmpsl and lret xchg out inc insl push mov jb nop xchg (bad) dec fwait adc mov adc mov jge dec (bad) push jmp mov pop and adc test adc inc pop (bad) repz pusha push xchg shll (bad) lods gs mov and pop cmp jnp mov mov stos and xchg add aam in or sbb ja stc pop mov sub cmp std bound rcl adcb in adc xchg or xchg adc dec imul repnz repz xor cmp and (bad) std stos adc popf ret gs adc das fistpl jge aas cmp mov mov pop pop pop in movsb lea stos jle adc ljmp loop sbb fabs inc aaa jno inc fwait adc outsb sahf enter push ds fildl mov inc or movl dec mov add or add mov fcomip std mov adc ja test mov or aam adc push mov into lds sbb mov pop stos xchg shr lahf jae add test imul pop imulb jge adc add out aaa sbb popa mov lds int lret out movsb mov das adc push add xor in cmc adc or nop xchg in and stc aaa pop jmp out push js sbb in xor or das cmp adc iret lret (bad) jle jo aam icebp adc (bad) hlt sarb fpatan movsb xchg xchg cmp mov adc stos (bad) mov dec mov cmp rorb pop jg (bad) jae pushf or xor ror xchg push and cwtl push xor mov add and and lea fisubrl xchg popa xor jnp repnz test (bad) fdivr mov cmc adc jbe add pop sbb sti mov fsts (bad) movsb int ja xchg in adc or push mov fldcw ficoml movsl aaa mov adc mov (bad) out adc pop adc cmp adc cmp xchg lea push pop or xchg cmp loop fs mov and mov (bad) or sub stos adc push xchg (bad) call les or pop clc sbb out lock daa xor mov lds dec jne fdivrs into adc in dec sbb cmp jns mov sub mov and aam push add ds arpl mov jl add push dec lods adc cli insb cmp cmp hlt adc jg and pop push notl dec pop imul aaa lahf adc nop mov xor sbb or inc adc test mov add cwtl xorb adc cli xchg lods psllw out (bad) sbb aaa adc in inc jae cmp or cmpsb xor push inc ret jns add mov sbb jae push call test repz sub cwtl sbb lahf lods mov fist adc dec popf lods (bad) repz insl cmpb scas sahf sbb rcrl dec push adc pop mov ljmp (bad) jo mov (bad) adc jno adc (bad) cmp lcall or lret mov gs adc jecxz fidivl out pusha adc adc or xor es mov cmp sbb mov adc sbb pop xor insl push sbb aam inc cmp in push adc mov or push adc cmp fstl int3 push adc daa pop sti je pushf mov mov mov sbb xchg bnd mov (bad) repz adc test xor inc mov cwtl les int scas dec adc lds adc push enter out adc xlat fcoml shrl out adc pop or (bad) fstpl adc es sub xor js aad out inc jge movsb sub in rorb mov adcb aaa outsl or adc pop add js push sbb sub dec in adc jns adcb push mov dec xchg cs mov inc adc and sarb fisub lcall fsubrs in push or mov sub xchg jl mov xchg push sub mov in popf mov mov sub cmpsb imul insl mov and and jl pop mov jecxz cmpsl repz mov cmp add es sbb push int3 sub (bad) mov inc sbb cltd mov mov (bad) xor popf lds pop push repz test lods push jb lea cmp inc sbb or rcr dec int pop mov push shrl jo adc in or bound mov push loop adc js jl cwtl popa call fimul int xor push push clc into mov mov add lcall sub xchg jno or mov mov xchg pop mov fstpl mov push gs mov sbb adc dec dec sbb sti mov aaa push (bad) scas fucomi adcl call mov push pop jb adc dec xchg mov loopne lret ja adc dec (bad) shrl popf pop mov mov xchg movl xor call sbb pop loop mov push xchg xchg cmc clc xor addr16 inc rorb into lcall jecxz add fucomip jns adc cmpsb test gs (bad) lret xor xchg sbb cli imul xchg out mov dec cld movsl lds mov gs leave sti push cmp sbb adc xor dec adc mov mov and push stos in mov adc test push insl adc (bad) jl nop xchg adc xchg or xor aam adc jge (bad) aaa cwtl lds pop mov mov push mov fimul mov lock adc mov push repz adc jns sbb adc push mov push or mov add xchg enter sbb xor (bad) adc jg stos adc call in fcomp mov iret jle faddl mov adc mov add das adc rcrl sub adc xchg hlt ficoml stc sahf mov inc push sbbb cli push loopne insl jns leave nop adc cmpsl or add or das adc xchg pop aad in adc lock adc sub outsl sbb xchg (bad) jbe or jns in icebp mov xchg fisubr jl (bad) xchg popf adc jo cmp and pop adc subl mul outsb or fs mov push dec push pop add mov push xchg sub adc mov adc xchg dec and or adc dec jbe mov je sbb and pop mov lods (bad) icebp imul jle adc lods mov gs in push cmpsl mov imul popf shl loop lods pop mov mov test lret mov in out scas add (bad) ss mov rolb mov in cltd and idivl mov scas leave stos hlt and fild adc xor xor pop flds adc pushf sub inc lods cltd adc push xchg in movsb cmp sbb clts mov mov into cmpsl jo mov xlat insl out dec hlt adc inc cmp aaa lods and push daa add (bad) sub or mov sar fst shrb xorl adc out outsb pop fnstenv and mov fisubl pop punpckhwd lret adc pop cmp rolb adc xor jae adc dec adc jmp mov adc cmp orb adc imul andl imul in dec daa adc (bad) cmp cwtl or adc (bad) jne sbb and mov jecxz rorb gs pop (bad) lret les pop adc cmp jmp xor adc dec jg mov sbb adc mov dec adc xchg fiaddl jmp add cmp movsb adc loop xorl push sbb out lret pusha fwait adc pop adc bound addr16 push add scas xchg jle arpl pop push js jno pop movlps in xor in dec loopne jne cmp into jp insb rcrb movb in jae mov xchg cmpsl pop mov (bad) mov xor and sub xchg popl adc (bad) in adc insb sbb sbb loop cmpsb repnz rcll xchg (bad) cltd inc jle adc pop outsl rclb cmp test repz out scas add aad (bad) or in cmp and lods push add lahf ds adc hlt aam je mov push in cmp or xchg jmp adc adc push inc outsl push xchg ret push (bad) shll and mov loop (bad) jge popa and test into or out icebp movl les int cmp adc aam (bad) mov clc or imul adc test dec add mul jb sbb sarl xor dec sub sub sbb cmp cmp xchg cltd push sti mov (bad) or lret and xor sbb (bad) ds push adc out les jo cwtl xchg sub jns mov negb mov in outsl lea adc or rclb mov dec ret jle fildl add adc je push sub insb add out adc adc mov scas lahf outsl or jb inc neg lcall dec xchg icebp cmpb mov fisttp add adc adc fxch adc xchg push xlat lea push lcall cmp adc rorb lods out pop push pop cmp pop or inc enter xchg leave mov rolb mov data16 mov rorb cmp xchg cltd mov pop xor sub adc pop es or adc aam xchg adc push mov jp (bad) mov es jmp sub xor adcb mulb into inc mov and mov pop push test adc cli out loope xor or dec js adc adc xor pop (bad) cmc insl xor jns orb jle lahf sub mov mov inc pop jb call mov orb test pop icebp aas adc loop cmp pop outsl xor cli stos adc or and push sbb push mov add cld jo xchg lea adc arpl insl cwtl iret or xchg mov sti pop xchg push outsl mov xchg add jl aad xchg or inc fdivl test inc fimull pop adc or adc dec das jb jg je pop pop insl movsb or repz mov int aas cmp in and inc inc mov adc xlat adc jp push adc repz in or and push adc add repz add xchg or stos fistpl lahf or and mov cmp in sbb mov (bad) mov sub xor pop adc dec mov adc enter outsb xchg pop shr leave and out mov (bad) (bad) cli adc ljmp xor push aad sbb sarl add and sub jns add sar inc jo mov fidivl mov mov clc rorl dec add adc sbb in fstl adc inc or sbb mov xor pop jecxz int3 mov dec sbb out cmp dec outsb ret lcall add push daa aam leave notl lahf outsl cld add insl iret inc adc sahf mov add cs rcr out push jbe push inc fcoml or aaa add xchg lock jecxz loopne stos or adc mov inc xchg adc lds mov nop jl inc pop inc pusha xchg xchg test enter sbb lahf adc mov loop adc xchg (bad) or or aaa pop fsubr sbb sbb cmpsb mov mov adc das lods mov mov mov cmp mov mov sub (bad) jo das xor adc inc jecxz ja or orl js lret add jle adc (bad) cltd imul jne repnz lret mov adc imul adc ret fnop hlt mov adc jmp jb addr16 cli aam adc mov jl std pop pop lea mov or cmp xchg xor xlat push repz pop fs adc pop push test sbb inc push adc in js mov adc cs dec push scas or mov clc (bad) stc adc test lods outsb fsubs stos adc (bad) dec cld mov stos xchg sub hlt andb adc inc daa pop adc add pand sbb testl mov push push jl mov cs dec mov stos mov xor dec adc xchg xor int3 jns adc je lods dec sahf test mov add add mov aam bnd (bad) adc lret (bad) fmulp sarb or adc das cwtl sahf jnp je adc out mov mov mov (bad) in scas or stc loop inc (bad) sti sub leave or fmul fs pop cwtl cmpsl push add je pop lret out arpl push xchg mov push scas adc sbb push or cli popf pusha push jne inc fildl add or and inc (bad) gs mov xor add (bad) clc and push hlt aam push xchg mov and (bad) repz push mov or lods adc (bad) push mov xor jb inc in fcompl pushf adc aad dec daa mov notb mov insb adc orl sar test adc adc sti adc sahf inc add imul and jg dec je out iret rorl mov test xor ja adc adc repz and jbe dec (bad) adc sti xor movsl pop std adc inc cmp adc xchg in mov mov dec je int3 out test mov movsl sub in lret push in or add int or pop pusha dec fild mov adc pop lods adc adc inc in fistpl mov adc and adc pop cld xlat push popa sbb and std adc push and mov in js adc test loope push mov cs mov adc movsl mov sub dec add sbb mov mov test stos mov movsl aaa cmp sbb push (bad) push rcll mov popa faddp dec addr16 ljmp leave cmp sbb loop push ja (bad) push xchg pop sub mov les jp movsb sub adc mov push cmp jns mov repz cmp pop dec inc mov sahf mov outsl add cmp ror pop push faddl mov adc and in addl sahf (bad) cmc or pushf loop add lret mov cmp test lock mov adc scas sbb fnsave and sbb in adc sbb adc adc jno fcompl xor lea adc loope pop jns popa jo add mov push cwtl cmp lds fnstsw xor nop movsb ret xor pop pop jecxz (bad) mov cltd cmp pop nop ficomp jg imul dec mov adc popa dec push jmp sbb inc lret imul out imul jns pop mov (bad) sub jecxz and addr16 xchg stos pop or adcl and sbb mov lea jmp adc cli mov adc or (bad) stc ss xor (bad) adc jge xor repz flds sbb adc jecxz bound pop push adc inc inc daa mov data16 adc pop or jge sub cmp stos leave adc sbb cld mov mov dec leave popa es xchg jecxz adc adc lret (bad) gs test inc lods lods les mov aas dec imul sub push adc pop push mov daa cld pusha xchg or ja jne pop mov mov sbb adc outsb and add cwtl adc and psadbw push fdivrs scas or xchg adc cmc or and int3 imul xor out adc repz repnz gs xor movsl pop inc aam test int3 fcoml sahf xor repz cmp cmc hlt sbb sub scas pop and inc pop aad into pushf adc mov sub add add jg cltd cli mov iret ss das inc popf fisubl adc (bad) cmc mov js xchg loopne ret pop jbe xchg jb xchg stc mov push repz or in adc (bad) cltd lret add push adc jmp sub insb push inc cli mov roll int pop cmp lret mov jg jb pop aad pop push inc fldz data16 in push dec lea push pop xchg xchg mov xchg mov ficoml mov loopne ret xor mov mov jge adc sbb adcl stos push cli pop cwtl push into adc cmc out (bad) test sub mov lret jl dec sbb or pop xorl xor mov add (bad) fsubrl xor add in adc lret popf call pop inc addr16 adcl xchg or mov mov and pop gs test mov repz adc mov fs inc incl lcall enter add in xchg sbbl adc (bad) frstor jno cmp add pop mov mov pop adc sbb push jne adcl std mov test pop in addb push mov cmp xchg adc pop out ja (bad) adc xchg ljmp push imul adc cld push adc cmpsb xor lret sub sbb loop hlt mov mov aad adc fistp xor out pop xor repnz mov leave sub xor enter shll je and add mov in adc or push inc xor mov icebp or faddp sub popf xor sbb push call gs mov adc cmpsb xor jecxz adc xlat jl fs adc out imul ljmp cmpsl mov pop adc aas add mov xchg push int repnz cmp rclb insb mov mov adc or adc (bad) cmp daa dec xchg adc lea dec mov iret pushf add mov out adc pusha icebp sbb into add add push frstor xor mov int3 push push dec inc mov adc sbb icebp adc mov negb mov fs adc scas mov mov adc rcll sbb dec pusha rorl stos lret lahf xor xchg dec pop sbb cmp cmp jmp or insb inc out outsb xor dec dec ja mov hlt pop xor sub (bad) ror pop mov dec add add push lods shll jo sbb jl jl mov inc xor mov out lcall bound addr16 fcomps mov sbb mov jbe das sub mov adc and adc xor mov mov (bad) xchg adc xchg prefetchw stos adc jge or add adc mov jae xor jg dec mov adc mov das adc icebp adc adc jl pop push adc xchg or jle or sub xor cmp cmc push or pusha repz leave and push sub js mov scas pop dec dec orb push inc fwait sbb movsl jae cmp ficomp rcr out lds mov dec lods inc xor mov inc jecxz in mov (bad) movsb add sbb cmp enter popf pop xchg out jno mov add adc inc (bad) ja outsb mov rcrb xchg mov aas ja sbb idivb pop xor mov repz enter mov gs inc add sbb mov aad push (bad) add sahf mov imul adc popf mov push mov add adc mov scas xchg hlt ljmp push and fadds adc hlt pop adc outsl fincstp adc sbb int sub and adc ljmp divb rclb js cmc adc lds (bad) rcr adc or jp es adc movsl lds sbb imul insl dec add lretw faddl mov cwtl pop repnz mov in add jg fmull or test adc inc and daa jb xchg outsl iret imul jns (bad) jne insl pop adc pop dec out jl imul jns cmp popf movsl sbb adc adc xor push adc cmp sub xchg shr ja sbb and push ds dec or ljmp cltd dec inc stc cmc cwtl shlb sbb mov adc mov xchg or adc adc imul cmpsl cmp rcll clc dec jecxz into jo movsb sbb mov mov adc jge xor xor mov sbb out jo fild cmc lock adc data16 les sub adc jno dec lods (bad) aaa push test xchg or adc shll adc outsb cmc sub ret xchg stc cmp fsubrl int3 xor mov jne jnp cmc push rolb inc (bad) xlat mov cmpsl adc xchg mov arpl test repz or insb sub adc mov jge fcomp adc (bad) sub jmp lcall mov push dec imul or scas js and lock mov sbb loopne mov dec adc ja cmc into in adc cmp mov push push insb xor xchg or adc cli cmpsb sub ljmp push (bad) dec int3 xor mov imul fcoms inc adc outsb push xchg (bad) lret repz cwtl repz into rcrb fistpll adc pusha mov add idivl repz dec cld stos in xchg or xchg lret ljmp adc mov outsb push cld addb push push pop sbb repz loope push hlt and and nop cmc xchg test ds mov cwtl or aaa mov out aas inc clc add adc mov mov mov sbb mov nop imul push ljmp or aas lret mov dec or jp into xor daa cmpsl or sub xor add rolb and jnp sub jb aaa dec ret stos mov lods or xchg je or cli mulb rcrb adc adc roll cwtl stos (bad) aad adc fnstcw add insb mov pop sbb adc mov fdivrl dec pop movsl data16 loop add adc ret add sbb jmp push lea dec fisubrl mov jl adc dec call xor fmuls fldt adc fidivr fnstsw (bad) loop sub jo xchg pop daa xlat test adc or notb and in movsl pushl adc mov fcoms sarl out (bad) lea lcall sub sbb fidivrl pop cmp fild movsl mov arpl and fs sub insl out xor test pop fist mov mov lret aas and adc inc fdivs scas clc push sbb in rorl jge adc pop jl imul repz inc sbb mov jp adc cltd push in mov and adc pop inc mov mov adc mov jbe adc push es shrl and fs cmp cmpsb lds imul repnz test test and adc js loope scas divl sahf das fsub or cmp les sub jb pextrw sbb iret cmc aad add inc sbb dec and idivb scas arpl dec pop add sbbb push xchg lods mov cld or adc sub bswap dec nop fmuls jmp or call adc adc pop testb je adc add adc adc xor lods ljmp sbb jle cmpsb add fwait int3 sbb xor leave (bad) adc add cs and aas mov sbb push roll xchg mov add cmpsb nop incb repnz add or mov push jg (bad) push pop xor clc push enter fidivl repz sbb mov push (bad) bound mov sahf lock movsl push hlt adc xor xor ret push cs and adc movsb mov dec add inc or test jbe stos cmp or xor rclb inc les adc imul test sarb repz adc sarl cltd xor fdivrs xchg cwtl scas adc (bad) out push mov aam inc and push icebp inc dec add fidivr dec xor adc adc push sti aam push lret fiaddl lea mov sub int3 xor out lock cmp and jne sbb mov adc adc mov sbb adc fldcw jns push lret xlat or js mov imull adc (bad) mov xchg inc mov ja enter hlt or fadds jns adc (bad) popf add pop and shrb mov call mov dec xlat mov push jl jnp pusha jns dec jae scas enter sar cmp adc mov dec rclb push mov lea adc scas sub (bad) pusha adc sub loop sub pop push stc push mov cmp mov rcrb adc daa (bad) xchg xlat adc sub lea pushf adc popl adc out (bad) mov imul xchg int (bad) inc cmovge stos adc sub sahf nop push sub xor cmp movsl pop ja push pushf daa or inc (bad) imul push jge adc div sub fwait imul cmc gs mov push cmp (bad) rorb cmp jle insl icebp xor mov xor adc aad push cmp adc push cmp popl cmp push mov jge jae jnp and mov dec add stc mov lcall out jno int3 sti add das dec or popa rolb push cmp sub and sbb ss (bad) daa loopne fnstsw adc or dec cwtl dec imul std out js cmp pop push adc mov (bad) loopne (bad) xchg rorb or cmpsb adc lods imul aad jns rorl jb dec fdiv (bad) (bad) fstp adcl mov inc test sbb outsb lds inc pushf push adcb add mov sbb xchg mov cmpl test lods popf add mov into js inc out xchg xor in mov clc lods mov add cld sbb cmovae jge adc aam inc inc and dec test pop push (bad) lods mov popf inc leave ja or repz sahf and mov jb inc faddl dec xchg adc aad shll push jne cmpsl cmp adc hlt call sub je dec jle or mov adc ja add pop out xor inc rcrb es mov sbb adc scas call cmp lods adc (bad) fs jg adc lcall xor ficompl adc int3 in scas push dec add xor xlat nop mov sbb xchg pushf ror es adc adc movsb cs in out loope mov and jge or icebp or adc add sti adc adc xor and xor or mov addr16 lret adc fcoms lock sub stc push (bad) mov adc cwtl adc adc xchg ret stc repz adcb sbb xchg das sbb cld sub xlat pushf xor sub imul sbb jle fsubrl std jle (bad) mov adc ss lcall in jae cmp inc ljmp jne test out cmp fs out stos xor (bad) or push rdmsr pop adc out andl mov cmp int3 movsb sbb push xor push add xor push xchg and mov cmp xor push or adc rol sti or inc sub dec dec mov out and adc imul and dec add push daa cmc or jmp lahf pushf adc out adc adc push dec ret jns mov xchg leave pop pop sub insb xchg lahf push es and adcl sbb out xchg mov inc cmp ljmp gs sub mov xor pop mov clc push call mov pop ja out sbb mov push add push popa outsl data16 adc inc hlt push ficompl and pop add int3 mov fistl dec pop je incb ljmp mov sar sbb or inc sbb adc (bad) xor repz mov hlt imul mov repz pop pop enter inc xchg fbstp adc dec das mov ds adc mov fnsave pop (bad) adc repz into bswap jge adc std mov jecxz test adc insl adc mov ficomp popa ljmp dec in cmpsb xor outsb lods mov mov cld aaa adc les in (bad) cmpsl stos mov add pop adc fistpl movsb repz and loope iret adc sub mov mov cmp in sbb jo repz cs inc xor insl xchg in mov pop adc jp sbb ret adc xlat pop (bad) sub push jg mov pop adc testl mov mov adc and cltd xor cli and jp adc sbb dec mov iret xchg (bad) pop pop xor fwait insb rcll sub mov stos xchg inc imul aas xor cwtl adc sub push mov dec (bad) jnp mov fsubs add inc in shl or ljmp xorl shlb mov aas (bad) mov sub (bad) sub jno cmp mov fwait adc xor cmpl push jg addr16 adc pop push push xchg rcrl outsb mov iret insb mov jge repz mov push mov or adc lea nop leave adc pusha adc movsb add mov lods adc in or xchg xor fwait mov xchg pop adc and dec cli or adc push out call jg jno into aam cwtl jp and in inc mov bound icebp mov ret mov sbb out adc push arpl jp lods adc sbb jg jnp popf or ljmp jns xchg (bad) mov data16 push rclb in adc enter xchg jno and sub out mov aad jno mov push sub or inc out pop push mov push sbb in arpl loopne in (bad) cld pop mov dec mov repz push or cmp adc scas loope or jne sub add int popf mov insb add dec loope jno xlat xchg pop std lods and iret ja or enter (bad) sti test dec mov pop mov cmp pop (bad) sub pusha sbb mov mov push adc jp (bad) (bad) lock int3 mov insl out pop test adc jmp xor test mov and rcrl les jno dec loopne cmp adc jp in loop mov adc inc scas xchg in inc std fldl push adc adc jg ja mov xor push add mov mov dec fstps jo repz inc push orl aam sbb adc cmp mov add loopnew es test (bad) (bad) and out adc mov inc dec mov jno sbb xchg jge sub sbb adc aad push jnp sub mov jg xchg jmp aam adc mov subl mulb mov jo cmpps add je sbb cmp fmuls jle adc jmp jne inc dec push adc push outsb imul lcall dec stos (bad) jmp int jmp stc adc xor out mov adc cld sbb sub popf mov dec and add lahf cmp data16 push rorb (bad) jb mov mov das in sub xor adc inc sar shl xchg pushf mov cmp dec push adc (bad) cmp mov jb mov adc lods sub xchg push adc push das leave stos xor repz mov cltd out hlt push loopne ss movsl sbb cmpsb ds aam pop lcall inc cmp fnstenv jecxz scas mov nop inc aas addr16 add sahf aaa lods adc je inc insb lcall aad adc adc lods add mov insl test mov xchg bound repz fs xchg sbb loopne rorb and jg test adc fwait outsl lods mov das mov inc mov cld call adc xchg (bad) inc dec fwait adc shl roll xor add push or shl xor aad add xchg push adc xor fmuls pop rclb (bad) js sbb adc (bad) (bad) in ds repz push jmp lret mov das imul add mov js adc xchg (bad) lds push cmc adc push push in xchg mov and and sahf jbe mov repz nop pushf adc icebp sub jb or xchg out push adc js in iret and xlat cmp inc dec adc lods and adc dec xor adc lret push imul loope sbb fisub cld xor mov out adc pop push mov test push and mov mov leave repz add dec dec mov inc pop jo icebp cmp pop cmpsl sbb out push add inc xchg rclb out xchg mov mov rcll adc cwtl add adc js jno adc mov lods adc mov or cmpsb mov lds ficom xor mov inc mov in adcl stos xor xchg mov iret pop pop ret mov stos mov imul xchg or call pop sbb cld stos mov add (bad) repnz mov inc sbb fwait adc push adc dec xchg loop and cli movsb pop add mov and xchg jb add out mov xchg loope jge mov push scas scas daa adc into jb jo int adc pop andb fisttpll (bad) adc les adcl pop ds mov xchg pop mov fs adc adcb add cmp mov xor dec adc jne aad cmp ret imul pop sub daa push adc dec adc test fcoms clc mov je and in adc mov dec pop out (bad) call and adc xchg test and insb push iret mov or mov jne adc sti and inc and in into add lcall out mov fdivl pop add xchg mov xor dec adc call adc outsb cmp or aas xlat inc jg adc mov das fcomip and adc rcrl xlat adc mov lock adc xor adc xchg or bound pop inc lahf aas popl fistpl cld out mov pop sub adc mov inc mov jmp adc fstcw adc sbb outsb fisubrl sbb push jnp adc sub adc mov dec sub ret (bad) notb stos nop int3 sub adc or mov ret (bad) xor push or mov mov xor pop fcomi jno loop lret ror adc or jo sub sbb mov sbb sub test cli mov testb imul adc mov sub in pop inc adc (bad) push dec xor add push hlt ret pop adc and add lahf and jp lret add out adc push sub and jp inc das pop dec repnz ret hlt add adc imul mov lea roll or inc dec pushl or cmp lret adc hlt dec add cltd push and mov jno adc and repz mov sbb hlt push adc inc and (bad) jns lcall fnstcw call mov addl (bad) popf sub pop ret es int push imul jmp ljmp mov cmpsl data16 adc insl and push xchg jo sub shl push xlat insb fstpl add das adc jl inc (bad) lret ret sbb cmp mov cwtl jge mov xorb push sub push adc fidivrl clc je repnz xor push push pop pop cld or add adc stos sarl adc (bad) dec push lret fnsave mov out xchg mov push xchg xchg adc xchg xor (bad) fcompl and add (bad) repz xor lods mov insb repz xor icebp cmpsb (bad) (bad) aaa pop cmp jg mov fnop push pusha cmp gs fwait jne push pop xchg sub sbb mov test ja or rcr imul loopne lea mov aad outsb jmp adc adc popa push jmp xorl movaps stos jno mov rcrb shlb dec inc and cli adc inc leave mov jge adc loopne jo popf jae xchg ffree in adc adc inc xchg ret pop sub pushf fsub adc cmp roll or fldcw in idivl pop mov mov dec xchg cmpsl (bad) repz clc inc call adc cld mov cmp push inc gs lret (bad) cmc cmp inc rcll (bad) rorl pop (bad) pushf adc and mov aas mov add adc push jb add mov xor insl sub sbb fstpl out aam outsl add fcomps cmp jne xlat fnstsw or push js push adc ljmp aaa stos daa pop xchg mov in add jmp aad je daa adc aaa fnsave cmpsb mov add jmp pushl adc xor ds sti mov xchg scas xchg cld subl ja daa int3 out adc mov js call adc (bad) cs mov mov pop call lea jae adc icebp adc jno sarl std adc ret lds push enter add pop data16 add dec push aam cmpsl add scas push sbb adc push int add adc leave pop ds fiaddl sbb loopne sbb mov xchg fprem1 arpl adc movsb cmp xchg imul test je insl ret xor adc daa out lahf adc or or dec test mov mov adc jl mov pushf out nop lea mov push bound in js jge in xchg adc mov cmpsb dec adc sbb lret mov pop sub xor movl inc xor fidiv shrb (bad) dec xor adc add das xchg adc and (bad) lds adc fistp hlt push mov dec push pop inc pop xlat mov mov inc xor out xor int3 scas pop sbb cmpsl add add xchg mov sbb out add mov mov xor (bad) pop sysexit sahf adc xchg inc and adc pop fcmovnu sbb jl cld mov ror inc adc cmpsb (bad) pop xor dec mov lret or nop add jecxz aas sbb mov push adc mov dec sub adc (bad) sti xchg int3 mov sar mov xchg daa adc (bad) fstpt adc cmc mov enter jle xchg out pushl pop pop arpl repz inc jno repnz mov adc or repz jne inc cwtl adc or pushf fstps adc cmpsb pop push je movsb inc mov or pop jge loope cmp test out cmpsb cmp xchg add ss es pushf dec adc jb inc adc (bad) imul push adc cmp fwait dec imul jo repnz gs adc cmp shrb aad xor rcrb mov xor iret jp adc sahf aad cmp xchg pushf mov outsb jbe ret mov pop add daa adcl (bad) negl mov shll into cli loope jge fbld pop outsb lea div pusha loopne lret int add pop adc or mov repnz pop (bad) push sti jp xlat or sbb inc lods cli lret adc loope mov lcall ljmp and (bad) pushf mov and popf pusha add mov cmp test shll mov cltd cmc adc popa dec mov adc clc and (bad) adc cli inc pop push loopw mov jmp test call movsb cmp into inc adc adc test mov fwait (bad) adc add inc push pop out xor sbb pop xor cltd cmp adc hlt pop add js xchg repnz mov scas mov jo xor jg fcomi and adc mov out sbb mov lods mov ret repz mov incl and jae,pn mov adc mov scas cltd dec pop push mov test mov in sbb adc xchg inc mov addr16 (bad) int mov xchg push adc sbb adc movsl pusha imul push mov aam jl and jmp repz adc repnz ror pusha mov pop inc inc adc inc mov adc loope lds lock shrb loopne outsl call aas clc add fs fcomps (bad) ja pop fwait adc es sar xor add aas pop hlt adc sbb pop push push insb jns jmp push loopne pop sbb int3 mov push sbb jne adc fcomps cmp adc push (bad) or ss push adc dec int3 lods adc xlat or adc stos mov adc pop pop fucomip lret or adc pop pop pop or nop adc xor adc test add and int js adc adc popa cltd (bad) jmp or out xor je nop fstps neg adc pop imul pop pusha xor pushf les xchg mov adc je aas mov adc sarl cmp add mov je mov add adc cli scas add gs test imul ja out jnp and dec movsl in out mov mov and (bad) or or sbbb and pop outsb adc push pop jno mov adc out js inc rep adc sahf mov je fist add insb cmp pop and lahf dec hlt adc adc shr jp cltd mov lcall xchg dec hlt dec imul std aam xor mov in xor jo add dec dec mov leave ds adc sub push adc (bad) out ss xor jnp orl (bad) loopne mov mov mov jmp pop jae imul (bad) mov loope cltd xor pop lret sbb push inc mov mov imul test in nop ljmp adc rcrl sub sbb iret ds (bad) adc add adc aam mov dec and daa out mov sub cmpsb sbb xor add mov add jp data16 jns and jle pop mov adc test adc fisub push inc lret xlat stos adc fisttpll sbb mov dec ss pop rcl jne mov (bad) push in mov inc jne psllq mov adc cmovnp jb jecxz shlb out jg or pop xchg pop add adc push dec (bad) jno out adc push cmpsl lahf xlat sahf iret js cli aam rcrb repz inc xor (bad) mov out std bound cmp js repz (bad) outsl mov (bad) or adc xor inc pop or fdivs and push and adc fistpl cwtl jne mov jo pop mov adc jmp loope dec xor and pop insl xchg push cli pop in adc push scas cmpsb adc jmp aam mov xor orb and ret sub or sbb adc pop adc mov inc (bad) sarb mov sub lcall gs stos push scas int adc ret leave add sbb out pop (bad) xor shll mov push adc aam pop jg ffree sub icebp mov pop xchg loopne mov lea shr test iret (bad) inc and pop push mov cmp add mov ret fbstp shll xor adc fs xor mov lret pop inc lea xchg mov dec and ret jl lods je push mov addr16 push or adc js mov pusha mov cmc aas mov cli hlt jne adc mov repz adc les cmp (bad) movsb hlt adc dec push test pop cmpsb adc jbe mov jg adc push dec aas push mov stos mov jb add lods add int arpl test jns fisubrl stos lahf mov sbb jp or mov push add call int nop fcomi in clc adc push dec inc dec aam adc rorb in insl and pop pop imul jle,pt movsl add adc push popf movl xchg add in imull xor inc adc xchg into push leave scas sarl lcall cld das (bad) daa mov mov dec fiaddl pop adc adc lahf pop mov into or xchg fwait mov gs push and in jb sbb push mov fldenv hlt aas adc imul shrb mov jnp mov lods jno stos rorb add movsb outsb insl ss in notb push add sub repnz jbe and add daa jae xor pop add inc (bad) int3 xor fimull inc (bad) clc sbb stc push loopne loope stos idivl xlat add cmpl mov nop add mov or add adc adc cli xchg aad jecxz push xrelease addl fisttp (bad) ja adc lcall int stos js push mov fs xor jne dec outsb jno insb cmp ret sub repnz outsl xor xor cmc push cwtl cmpsb mov push mov ljmp sub pop adc je outsb xchg rolb pop (bad) cld aad xor add xchg pop add ret mov jno mov or loopne jae ficomp int and jnp push adc sbbl lret inc pop neg inc mov adc pop mov movsl dec push add rolb insb (bad) movsb adc push jb adc inc adc push cmpsl fcmovbe cmpsb adc mov jecxz inc push outsl or ret add jne or dec adc out inc movsl pop addr16 popf jl dec jno jmp mov les pop test mov sbb je imul repz add and lea mov add cmp adc or out adc insb into jns mov add loope pop (bad) out enter sub std push fadds push mov push das out sbbl aas adc je rclb insb push ljmp (bad) out jae test or arpl sub test sbb test int jp adc jecxz pop sub fcmovnbe clc aad adc jae xor out lret out addb lcall mov in xor jp cmp push jne sbb in repz movsb leave daa cmpsb mov stc jno lret pop fmuls shl in mov push cmp pop stos sar push adc and sub rcll adc dec pop dec sub je fisubl xchg fistl lcall and sbb adc out inc faddl dec test adc jmp pop adc js adc inc jge adc and jb repz ljmp dec mov or xor (bad) movsl stos adc inc arpl mov dec inc adc dec jno or add add dec popf mov sbb adc dec lds add push dec repnz push adc arpl xchg push lahf mov insl sbb or mov lods lahf aam dec pusha rolb or fcmovu gs adc push mov mov stos cmp in aaa lret pop arpl dec add adc xchg inc inc into push fisttpl (bad) and cwtl adc push ljmp xchg out pop pop mov notb ret fs (bad) jae addr16 imul mov pop nop out mov jne or das mov outsb pop in and nop pop xor stos dec or adc bnd es mov mov fs mov or fistl fwait pop adc adc xchg sarl mov mov jmp push cmpsb and faddl mov in (bad) es bound repz mov mov adc rcrb mov jbe mov xorl cmovb jg push xor (bad) aas and push jns and push adc sbb or stc mov int pop lret mov stc ja fimull repz push jl test ss cld es add fisub lea cltd pop lock pushf mov mov or push pop (bad) jg adc cltd lods rcr pop std add fadds adc mov add cmp das sbb imul repnz je mov jno mov adc rcl adc cmp cmp xor and pop or adc jg rcll lret add negl inc adc dec dec xor xchg pop and inc add mov adc dec pop sub lcall pushf pop mov gs sub xor jge into sbb pop jecxz adc or in dec out adc loop adc ficompl call adc in push push ret jmp test decl jno or xchg xor push (bad) scas das jmp rorl add adc divl sub (bad) mov aaa ljmp repz jecxz or or lods sub jl pushf (bad) jno call fwait jns cmc xor lds mov add cmp movd jle adc mov (bad) adc fucom daa add adc int test add or xor mov xchg sbb adc arpl mov fsubs adc ljmp jae clc pop jmp cmpsl fwait sub inc pop (bad) xor mov (bad) lahf pop cltd pop popa adc push int outsb daa adc repz (bad) loop inc sub and push repz and shll inc adc jl xor fsubrl in add adc cltd imul mov add mov pusha (bad) jp (bad) call and std clc xchg stc jbe and push fstp sub (bad) adc pop (bad) repz aam cmp or imul mov loop adc subl push cwtl sbb hlt sub mov andl pop andb clc lock sahf test cmc mov mov pushf cld adc cmp bound and int xchg xchg stos (bad) or inc xor mov sub push adc jb mov dec sub sbb repz push jne int mov push xchg dec or adc fcomi mov mov cs push xor push sti and or sbb lds xchg je movsl dec test pusha adc add adc bound and cmp mov pop mov adc lret mov adc inc lahf popa mov mov icebp jp int inc es iret jo lcall (bad) cli repz mov adcl mov sbb loop xor cmp pop aaa pop stos aaa decb scas sbb adc push roll adc pop jl xchg adc adc or sub or clc adc pop xor adc jno xchg adc aam es xchg adc stos cmp mov (bad) sti or lcall addl fimul adc mov pop push xchg fild gs push inc leave bound add lcall and sub testl fwait jne,pt cmp cltd cmp cmp scas mov mov push dec sub pop icebp rorl sub push cmp push in pop mov xchg call or arpl sbb fdivp stos adc xchg pop xchg mov ret jle mov adc in sbb push nop fdivs adc out lcall fsubrl sbb sub sub (bad) fcomip leave repz stos xor adc push xchg int3 pop adcl inc mov inc push dec scas out and idivl in loope fildl aas shr mov push pmuludq ljmp stc mov adc push sarb sbb mov fcmovne inc mov push mul lods lea fist adc ja cmp adc inc into dec aaa and xor mov xchg mov sbb mov movsb mov xor in sbbl xor movl mov adc leave jg mov sarl cmpsl inc xchg lret adc outsl adc jns xchg int adc add ret scas pop jnp adc push mov loope scas adc sbb iret adc in ret test cmpsl and (bad) xchg divl aaa repz adc push xchg adc (bad) int3 inc mov mov jmp pop adcb pop daa aad arpl push add inc and lahf (bad) bound mov imul notb out sub cwtl out popf into push adc inc fistpll adc push and cld fwait xor add mov xor lret hlt movups sbb icebp adc push mov dec push cwtl popa xor (bad) pop loopne inc mov fwait mov (bad) push sbb clc int das adc into pop icebp adc cmc aad inc inc mov movsb pop das sub pop adc adc fwait sbb mov jo push pop inc psllq sbb xchg jns loope aaa mov into fldl ret or adc out push mov xchg adc pop jbe enter iret pop adc jg push cwtl (bad) js push mov add mov inc (bad) imul inc push mov push adc or adc fisub pop push push shrl adc or (bad) shl mov lea jno sbb adc push add add adc lret mov sub jp ret decb cmp add adc sarl stos sub inc lods rcll mov or imul rolb jecxz pop cltd adc les inc mov push cmp scas xchg mov jle and cmp inc sarb test cs imul jo adc adc repnz aam dec mov and pop and insb mov cs inc and popa das add mov push sti jne ds xchg or out inc adc jno inc mov mov rolb adc imul lret sub push or test adc ljmp add ss adc lock xchg mov adc cmp (bad) adc push inc test das cmp jecxz and je pop xchg stos or xchg adc loopne fsts and and das rclb ficom sub adc stos push call mov adc sbb mov mov pop repz xchg das sub adc xchg mov jnp insb mov jbe fwait aam aam push xor add std push pop or push push jge mov invd and or cmp out aas push ljmp cmp es in mov adc aas xchg sub pop je push pop lret sub lahf push push ficoml sbb add ljmp ret xor out out adc rcll dec repz pop leave notb iret adc in jnp inc mov sbb adc sbbl test mov ljmp fs push adc add mov sub add jle es sbbl popa push repz jno cli dec pushf adc jl addl sub pop inc push xor push stos xor dec sub jge xchg push push and mov es pop xor mov sub or mov and and push repz push and inc mov stos mov inc mov sti pop xor add push imul lds lret inc mov pop push and rclb mov mov or sbb repnz inc jl in pushl scas lret call mov xchg adc arpl loopne fcomps popl pop push pop mov xchg cmp std adc cmpsb data16 repnz lret pop xchg daa mov in adc shll add pop rcll mov mov cmp mov cmp push adc add adc (bad) lea nop jo rorl stc adc adc test mov mov adc jg call je lock adc dec lret xchg add add or repz pop ja lea sbb nop mov mov add sub add xchg cs adc jge xchg sub inc jl jnp sti mov xor loop xlat cs in inc dec push pop into and push sahf mov push push pop dec cmp adc lahf leave fwait xlat xchg les ret push xchg addb adcl adc add or xchg popa inc xor addr16 pop inc and add out movsl xor adc mov iret ret stos add sarl mov adc jnp enter int sbb adc dec rcrb popf aam (bad) repz inc inc sbb sub cltd cwtl fild and jmp sbb int3 ficomp mov icebp sahf mov repz leave or into out (bad) mov jb dec push adc dec sbb fidiv or aas fsubrs or inc jno out or test jbe adc (bad) sbbb or adc cmp (bad) call cli fsubs into jecxz rorb (bad) or push pop js adc rcll adc mov jl cmp repz mov fwait or or add xchg lret data16 ja jb mov xchg repz push adc mov add ds je ror in popf pop cltd inc xchg sbb mov cli into lahf adc sub sbb inc mov xchg ljmp insb pop rol loop mov mov js pop adc fbld pop jb sub jecxz adc stos shlb (bad) adc mov stc push sub and add nop cltd dec aas cmpsl fnstsw andb cli outsb notb or mov add fldcw lds xlat add adc push add icebp cli xor ljmp inc push mov rol adc or cmc (bad) mov js adc icebp inc cwtl add or scas stos ret pop inc sbb mov mov adc mov hlt xor fimul inc sub mov sbbl adc (bad) adc xchg test adc imul xor adc pop adc out add mov add jmp jb inc cmp push fcoml cltd mov inc int3 xor sti sbb stos scas in adc sub mov inc mov sub adc in loope insl adc pushf sub bound mov adc and mov sahf cmpsl jp gs ds push dec fildll aaa decb scas pop adc ljmp dec pop jg fild dec lods outsb sbb add cltd sbb cmc adc pop jle pop int3 mov test outsl or mov adc jge xor rolb jp pushf adc cwtl xchg test pop xor sarb lret xor out pushf adc dec sarb mov adc sahf and mov adc add cmp mov xchg pop push adc pop ja adc inc push xor cld cmp or lcall jecxz xor stc or (bad) je shrl mov in mov (bad) rep dec scas adc fistpll adc mov mov push (bad) or mov aad mov stc bound popl xor in dec addr16 adc xor sahf xchg pop push or outsl cld cwtl jl iret aaa hlt rolb test cmp into pop lret xchg sti loope shr faddp inc or add je mov shr inc fs dec xor out xchg ja sub mov fimul and adc nop ror push jl push daa inc adc in jo cmp xor rorb adc idiv jne jae les scas dec dec mov mov push cld adc jmp rorb stc adc inc adc ja pop adc fdivrs pop adc ljmp jb adc repnz adc lret fsincos (bad) and jb adcl xchg es gs jne std adc test inc dec xchg test adc mov repnz pusha lock (bad) xor lret (bad) pop (bad) xchg cwtl adc lcall repz pop jg fiaddl jp fildl mov mov xlat inc scas mov or sub (bad) xchg dec aad pop adc lods dec jb popf enter mov inc adc fsubs scas clc push int adc pop xor mov jo mov stos xchg add nop xchg push (bad) adc xor lret jbe cs adc sbb repz or push adc data16 mov jnp or push inc je lock adc adc push repz (bad) arpl mov adc ljmp test dec mov aam push sahf adc cs call push xor test fidivrl fstl adc inc lret fdivp fdivr push sbb sti lcall (bad) jmp mov adc jno jl xor jmp lods inc leave pop cmpsl or xor mov push pop inc nop adc mov es std aam ret ss sahf lds in lret cmpsl fidivl adc push in adc dec shrl rolb pop adc in xchg adc (bad) push jno std mov in hlt or cltd sub rcl insl pop (bad) mov mov xor (bad) adc pop loop (bad) aaa xor adc cwtl sub cwtl stos lods hlt cmp or sti push jno and add jle mov sub stos push (bad) and repz xchg dec adc in mov mov cmpsl or mov in inc cmc xchg mov popa mov hlt add imull lahf or shlb insl cld add stos adc sbb icebp jecxz jl orb aas int xchg jmp xchg xchg inc push dec push (bad) dec negl mov push jle fiaddl repz fdiv mov mov mov in stos xchg mov sbb cmpb pop (bad) jno lret add in inc mul adc sbb mov ret cltd (bad) mov cmpsb xor lods sbb sbb inc fprem1 daa adc loope jae mov cmp cmpsb xchg mov repz fldt push adc in loope dec push fadd adc xchg roll lret cld pop outsb adc sahf mov adc pop jo repz inc cwtl ss stos xchg shufps int insl adc fistl stos pop jecxz push xor push adc jge fs cmpsb adc (bad) mov in pop jbe mov sbb cmovnp dec lods adc or mov adc xor adcl outsl scas fidiv sbb push add adc sahf int3 dec iret pop je adc sbb out mov inc repnz adc iret push push nop xor cld ror shrb out push adc mov (bad) xor mov and push xchg mov push les pushf push mov shlb or mov lds xchg adc into cmp fs cld imulb pop int3 insb cli shll mov dec add and dec stos xchg (bad) mov in xchg jl sub adc mov push xchg inc sbb rol sbb mov (bad) xor pop leave dec lahf in mov pop jae jnp aad out pop mov adc pop pop adc (bad) pop das adc push negb pop or adc popl outsb xor inc fimul adcb out rcll cmova xchg adc ret push mov adc jno scas jge lods std xchg cmpsl ret sub or add xchg jns std adc xchg mov mov aaa or aam sbb call xchg das jecxz xor xchg jns mov jge insl adc gs std adc pushf loop jg pop mov xchg in push push rclb test les push mov xchg mov or add sarl fsubrp push mov rcll test gs mov pop aaa fcmovnu mov aaa mov jecxz pop mov movsl or (bad) fstl pop jmp loopne testl out (bad) push pop sub adc and out mov mov add in or push cld lock cmp add mov adc mov repnz lea adc rorl or xor pop pand mov shlb lods sbb iret es lcall jno imul jnp adc push push push mov das pop stos popf add frstor cltd mov repz jbe movsl or adc lret push and movsb xor jmp add repnz xor int3 pushw lods adc inc or mov loope pop adc loopne ds sub aad xchg inc mov out adc push mov xlat pop idiv adc fsub adcl aad adc inc inc stos adc push mov inc insl mov push and incl fsubrs push mov xchg and cmc or js outsl (bad) je gs sub rclb mov inc adc or bound mov rclb or ret dec xchg (bad) adc sahf out in jecxz mov int3 and sbb jnp or (bad) xor push shrb xchg loope xor arpl cmp inc adc fimull xchg pop xchg mov jge clc pop push dec push (bad) in mov push rolb jo fwait add cmp pop add stos enter xor and push jo scas xchg mov cmpsb aaa repnz sbbb inc lret das xchg insl notb cmc enter or xor inc aam adc push jns pop lret jne xor mov (bad) (bad) sub stos inc jb push pop push in std add jge movb or popa xchg call lret lock gs push xor or (bad) adc xor fisttp sbb push ja inc mov adc jmp addr16 lods dec int3 or sahf adc fidivr lcall jp aad xor inc je call adc xlat cmc xor mov mov adcl cmpsb fstl xor loop mov dec jle jbe addr16 notb mov jne outsl rcrb sub daa adc mov adc in sbb adc xor or adc sarl adc dec loop adc xor mov or adc je scas xchg aam sbb xchg cmp shl cmpsl mov inc ja mov add les xchg adc adc loopne mov (bad) xor mov sbb stos adc (bad) jmp adc imul pop mov adc fcompl mov and icebp int3 mov test sbb lods sbb cmpsl (bad) sub or add loop adc fisubrl adc rol pop xor inc lcall adc scas aam xor repz jg enter add mov sahf jns mov lods adc and gs lock popf jo mov loopne jno iret ret in fldenv hlt test jae shll adc popa inc adc adc mov sub xlat psllq xchg push cmp dec adc pushf pop (bad) into (bad) adc and scas adc and jg mov jne fadds xchg lock rclb sub bound iret test mov sbb add xor repz mov arpl push cmpsb shr pop adc (bad) nop idiv outsb enter inc adc in bound inc or adc jmp xlat outsl in add mov std pop jle pop (bad) or (bad) int3 xor or out xor arpl push dec outsb adc outsl mov adc fildll add and lcall imul adc (bad) pop push add adc out mov notb aam in daa sbb ss pop push pop mov adc xchg sti adc (bad) js dec lds mov inc mov push or rorl (bad) das lcall in mov xchg pop sbb inc adc pop clc sub mov xor fcoms (bad) lods rclb addr16 bound sbb cltd adc arpl push jle push dec nop loope popf push lods jmp push sbb fisubrl pop xor (bad) or fdivs lea add jecxz push xchg rorb jnp (bad) stc xlat addr16 andps dec or call xlat or xchg cwtl stos cli and clc push xor pop lods mov (bad) fwait jl cmc adc enter ret sbb xchg sti xchg jb pop pandn and mov repnz ss aad mov sti mov cmpsb leave add adc add lahf insb (bad) mov cmp jbe add jno adc bound dec fist in outsb jnp xor jns and add decb addr16 mov sbb stos insl sub adc mov and test lea fmull push adc add inc and add or fisubr nop in (bad) dec adc mov adc es popf stos mov jne push mov xchg or bndstx repz and pop adc add pop or pop out or call sub nop ret push mov in adc in das mov movsb (bad) mov daa sbb (bad) mov mov ds test in pop fadds mov adc sub scas in repz mov inc mov (bad) push sbb xchg mov das and pop xor push adc adc jno sbb out cmpsb pop sub mov mov int3 push and push xchg push mov hlt pushl pop adc xor addl ss nop jecxz add pop adc lock or (bad) sarb and (bad) adc sbb xor jg outsb out mov pushf jmp pop mov xor sti adc xchg push das loope daa inc (bad) adc dec leave imul inc sahf imul pop adc sbb nop xor pop outsl dec jns adc je jle xchg adc inc jbe mov adc repnz mov scas and (bad) out inc lods movsb jecxz xor jge pop adc pushf adc mov hlt mov dec scas mov push fdivrl test icebp mov std or mov mov jne les ficoml adc jno movsb sbb push pop (bad) in adc ret mov jo mov or mov jmp sbb add xchg loope push std fcmovnu jbe and sarb adc mov adc mov pop adc dec ss and dec lods scas and gs insb cmp iret dec nop cmp lahf adc aas mov out push inc test adcb inc pop push popl mov and mov fidiv mov xlat xchg or xchg testl mov xchg mov (bad) adc test cli sub mov adc or adc (bad) test lock push or sub pop outsb push jne and xchg and (bad) mov pop pop xor ficoml push add sbb add dec sub stos wrmsr xor nop stc lahf test fwait adc jns imul mov mov sub jl inc pop push cmp (bad) lds sub add repz mov xor shrb xor add and xorl sahf or call ds xchg adc hlt in push adc sbb test les push jae pusha cmp hlt add push (bad) mov adc inc sbb pop mov xor jg sarb or movb loope xor std mov int3 adc pop mov xchg fldt add adc mov icebp xor or int3 push aam xor shr adc xchg jge mov (bad) mov adc push fsts adc repnz mov cmp xor cld adc push mov inc rolb stos hlt jno arpl loop out sub inc inc xor fcoms scas pop adc push cmc fildl adc out xor push mov imul lods imul dec and ja mov stc cmp loopne das or into jno ljmp push sbb mov and push adc inc stc test loope pop cmp mov lret xchg std outsl movzwl xor add add and pop adc lods push shl cwtl call adc out xchg aas adc test or mov add rolb cwtl adc bound adc xchg push and dec push jno cld add test cltd aaa fcom push (bad) cmp mov adc aas xchg bound adc add push xor jbe sub out xchg repnz adc inc cwtl adc lods xchg sub adc fiaddl adc or test (bad) testb xor dec dec mov mov adc inc fidivr movsl mov call xchg repnz aam adc push or movsl xchg lock sub adc jmp (bad) mov call or push addr16 hlt push jl pcmpeqw jmp pop jo adcb mov sub imul decb lahf rclb and ret pop add xlat repz push pop movsb popl adc jne sub je mov sbb cld add pop xor mov push loop push sbb adc mov rorb fdivrl scas out in adc inc inc ud2 dec aaa adc es gs imulb out imul mov xor cmc mov mov mov mov out mov ret xchg divl or cmp mov std push fldl shrl fcom cmp lods mov xchg pop xor mov cs or int3 cmpsb adc in pushl loope jecxz (bad) or pop leave shrb stos pop adc jg int3 in dec inc in arpl or jne call push and adc sub mov repnz pop pop xchg pop or push ds xor in xor xor cld nop cli loope sbb adc sub lret push jle cmp mov push cmc nop sbb pop add iret jo lret push xor arpl (bad) or fsubrp adc pop ja cwtl popa sub outsl adc out sbbb add or mov lock mov push cmp sub mov jo ds cli mov lret push inc scas jecxz xor (bad) jno fsubp lar ret jb jg repz mov fcomps arpl pop aad mov mov mov add add push xor sbbl mov sub mov roll and arpl mov or cmp xchg mov in leave fisubl sbb mov daa inc and or out out shll or pop shrl loopne popa mov adc jge lahf jnp (bad) adc sti daa sbb pop jno addr16 insb cmp xor jnp cld pushl or inc jbe sub mov les pop sysenter fs mov sub out repnz addb test inc or jle sbb call fimull movsb adc cmp mov das test xor xchg sub or enter test pushl adc xchg push adc adc sub insb out (bad) adc dec jge sbb push enter add adc push fisubrl shl mov sbb xchg fisttpl scas std (bad) imul dec in cmp adc and sbb pop lods jl xor nop ljmp repnz ret add (bad) push aaa mov inc imul adc mov adc hlt test adc jg or aas (bad) fildl and outsl adc xchg xor mov and (bad) mov repnz rclb in push mov inc adc xor dec scas addr16 or ljmp add or dec mov pop sub cld ficomp and imul sub sbb adc push pop adc pushl push je sar lods lea dec push adc mov adc or adc inc xchg inc pop mov call and std int sbb xchg daa or cmp lds adc xor jg add adc lret mov fcoml and mov test xor js push pop mov roll adc jbe lcall scas jae or adc inc xchg in push cmp sub adc rorl loop add sahf adc cmp sub push jg pop or outsb into fs mov popf movsb pop stc cmp lods sub and icebp sbbl adc sub pop push add adc mov dec adc mov cs mov or (bad) adc mov call mov or cmp mov pop mov inc pop enter inc dec mov adc and jle and dec xchg lock lods push dec adcl outsb xchg test cwtl repnz loopne inc cli mov or adc jns cltd jmp test add inc mov xchg add push fnstenv iret fcomps sub mov or xchg daa int3 call jno inc mov sbb adc jns pop sub cmp pop lods push pop aas inc cmpsl dec mov in lret insl jmp push stos xchg cld adc iret jns mov sbb mov jmp mov push jge (bad) repz dec mov or aad mov mov into insl dec rcll pop push dec lods push inc iret mov adc faddp repz data16 ror lock jo inc fistl mov xchg das adc arpl xchg test sbb push pop push jbe xor hlt mov fs or iret sti (bad) mov inc mov nop jne push push adc dec inc gs cmp mov aam test stos iret into adc add push or sbb inc movsl or push cmc adc sbb mov (bad) adc cmpsl adc pop and hlt out arpl or jge movsb (bad) scas sbb sub add fisubl pop faddl lods adc cld jge adc dec (bad) push and add pop mov xchg cmpsl loope nop sub jae push iret sub mov lea pminub sub leave pop ljmp lds mov loop add (bad) into or xchg push inc xor pop lret add fidiv pop addr16 pop in leave xor adc shrb repnz imul das xor jbe cmp sbb hlt loope idivl cmpsl nop pop adc mov adc (bad) push ds hlt lods pop cmpsb fcmovnu add xchg mov imul fucomp xchg or adc xchg movsl lock and icebp vpshufhw popf sti sbb add push mov cmp mov inc fs lret mov sub adc fcoml daa jb adc mov adc test pop mov jns mov orl adc adc outsl mov dec cs add jp adc jno xchg aam aas mov mov adc outsb enter sub jnp add inc loop adc push dec sub outsb imul adc adc xchg xor adc lret aam (bad) repz mov call fnstcw or pop (bad) ja cmp jge mov adc add xor dec jb jnp inc icebp mov xor in imul adc push pop test ror loopne imul adc cmp adc stos pop adc leave dec sbb cmp xor adc mov clc xor stos mov stos xchg adc jmp sti test inc pushf mov addr16 repnz ret mov aad adc xchg hlt fadds xchg dec sub push sbb rcrl iret shrb andl movsb adc dec fisttpll leave clc test or xor cmpsb fldl lods ss mov into jo pop cltd stos out call or push cld sub (bad) lock sbb jl pop or lods sbb or sti call mov enter test cmp jne rcll sbbl and sbb push imul fistp js sbb ficom jg mov lea sub std adc aaa sysret pop adc sub in lods out cmp or jae hlt fsubs (bad) test xchg (bad) negb pushf jmp jle adc mov rcll jne push std stos mov push shll icebp cmp push adc lock sti adc adc inc xchg in xor push or inc add es lods adc adc in dec dec rolb repz cli dec add mov adc dec dec dec out repnz sub add rclb add mov push outsl and mov push movsl mov or mov adc and das sbb add mov sbbb lret mov repz inc mov mov cmp xchg jge mov dec mov mov adc push pop or adc (bad) (bad) adc jecxz mov fisttp dec lock push stc insl xor icebp movb xor inc test lcall out push divl loop arpl loopne scas lock test inc fldt sbb sub mov lds cmp lock inc insl test pop sbb xchg cli ds out movsb jmp sbb pop rol adc mov xchg push jmp adc inc repz push out dec xchg add lods and xacquire adc cmpsl mov icebp adc pop (bad) nop xchg mov jecxz (bad) fcomps aas jp rorb mov mov out and inc pop scas inc xchg (bad) jb (bad) xor movsl mov sbb fwait mov shl (bad) cli popa cmp movsl dec fcoml mov dec or mov lods fucomip lea mov inc stos cmc pmaddwd adc or dec push push loope adc add adc add or repz mov push adc push pop lahf inc mov je inc jge adc pop mov xor mov and xor and push je sbb mov fldcw sbb push ja repz out imul addr16 outsb push cmpsl (bad) in jge into jp nop adcl daa in xor test stos out ud2 push lds stc adc xor cmp (bad) int jno test stos fsts add nop xchg test adc daa imul nop or repz setns sbb cli inc mov repnz pushf outsb cmc adc call xor repz cmp mov es loopne mov xor mov sub das or xor mov notl cmc movsl or mov sub mov scas add popa jb cld pop lret and jae pop fmuls mov and sub inc pop pop cmp mov inc jl int (bad) repnz pushf je in pop lds out jbe xchg xor or loop mov xlat movsl inc adc pop push aam subb adc push (bad) adc fsubs in or inc pushf iret hlt cltd test pop xchg adc or jmp xor shlb test add adc cltd out cmp mov je inc das push pop add jns push mov xchg add push bound adc jge das rep xchg movsb lret into or repz leave movlps dec mov xor add adc mov push movsl lock add sarb push aam adc std add scas push sbb sbb xor and pop mov movsl adc sbb cs dec adc jle mov cmpsb add adc movsb iret adcl and fbld pushf std adc das jbe fcomps xor cmp push dec popf test lods or (bad) or adc stos clc and repz iret cmpb fisttpl xchg cmp pusha sbb movb js cmp adc jle int3 add dec out arpl push sub out lea dec iret lds in fnsave fs adc xchg bound test mov adc xchg int nop jle rcll xchg arpl fistpll adc in std pop adc lret adc (bad) cmp or data16 push inc sbb ja sti cwtl jno dec mov shlb sbb mov movsl adc lds xchg (bad) adc stos add fist fisttpll and imul cmp fdivl mov sub repz cmpl mov adc std popa cld push arpl inc sub out adc in dec pop ret jl pusha imul lret je fsubl mov mov xchg xor cltd cmc je in add mov xor insl or mov xor andl mov lea rcll cmc push and outsb out cli push mov lods sub adcl pop mov scas jle cltd fmull mov repz shrb in push adc cmp cmp adc cmpsb mov xchg mov inc inc test lea fcmovbe xchg jns sbb xchg nop int dec push push adc and movsb jb cmp and das lods inc pop scas aad cmp out lds cwtl pop adc cmpsb add ficoml adcl adc mov mov xchg or aad jns xchg insb push test add movsl (bad) mov incl (bad) ret cmovge (bad) jne shll (bad) pop adc xchg (bad) mov fmuls fisttp jne mov push jns in or or cs aam add jg jl add pop ret xchg pushf fisttpl repz pop bound pop jns adc mov lock sbb jl mov out adc les adc adc inc psubd imul xor adc (bad) in bound cld into push cmp or and add fcomps push mov pop push jno jg aas push pop cmp adc xchg hlt mov int3 test mov mov jne add xchg (bad) pop stos ret push iret daa push dec xchg mov mov out stos xchg cmc aam dec pop push xchg xor mov cmp jo jb dec repz xchg pushf jne (bad) or xchg mov call icebp repz jne fldl mov lcall mov jge (bad) xchg pop dec ret loope pop rclb arpl les sbb sbb in cmp jecxz inc enter mov loope sbb add lods and (bad) mov mov es or repnz push ss add push mov xor insl xor out xchg (bad) fisttpll jno mov or and addr16 imul hlt nop adc cltd jmp lods xlat enter test inc mov fmulp pop add mov sbb pusha inc outsl repz scas mov insl ja or cmpsb cmp push std add push and mov sbb pop push or dec leave sub xchg xor mov jae inc dec and and int mov pop adc xchg popa data16 push subl xor fucomp into test test mov adc inc inc xchg jg subb push jl cmpsl push mov mov jns mov adc adc inc mulb xor xchg push mov jecxz idiv into imul loope aad cwtl xor je (bad) sti icebp add jg sbb je (bad) mov pop inc into mov mov sbb xor insb test adc (bad) mov mov pop hlt into aas adc or cmp in repz lods imul adc lods jns push or adc mov cmp adc in mov mov adc cmp xchg mov adc pop xor inc pop lret iret sub es mov xlat sub push xchg test outsb dec mov loop or jnp mov push imul enter xchg test xlat leave icebp xor or adc or jne sarl daa (bad) mov adc lea sbb push jne movsbl fwait adc dec jno negl mov sub jecxz mov jp ror daa sarl pop mov adc aam fwait add cmpsb bound pop inc into or jne popl mov cmpsl push (bad) es in dec repnz arpl repz mov pop (bad) and ffreep adc in movlps aaa xchg jo jmp fdivrs adc (bad) insl jmp imul adc push inc and mov cmp push je pop push cmovbe cmp mov arpl or adc jmp bound mov jecxz sbb or cltd adc push rcr cmc adc scas xor repz dec idiv popf pop push leave pop fs cltd xor std (bad) adc test adc ljmp repz pop mov out loop mov add popl arpl push xchg (bad) jp int3 lds adc fs insb inc mov test in mov add mov test and arpl and cwtl and mov adc fcompl add or out sub push sub adc jno lds ljmp add lahf addr16 loop je xchg sbb mov mov mov out adc int3 daa dec jbe xor cltd std pop nop or das (bad) stc add mov hlt mov loope sbb ljmp or adc cmpsb jmp add ficom (bad) mull rcll ss mov mov xchg xchg push scas mov jmp inc ret inc (bad) sub lret jae add pop and sahf addr16 and push push push xor ljmp enter xchg cmp xor mov sti adc mov out test test pushf stos adc (bad) (bad) jl xor mov xorl xlat lock loopne lahf push (bad) sub adc or mov movsl imul in insl repnz popf add lods add sarb sahf loopne xor cs adc mov mov pop or aaa inc xchg adc pop fcoms sbb mov mov xchg sbb iret mov sub mov jmp push cs enter movd jmp lock mov mov or stos push cmp dec pop ds or (bad) lret pop mov les and jae sbb loop nop and pop in dec repz xchg mov and stos int arpl push jbe dec pusha jns ret push and push xchg fidiv pushf repnz sub imul (bad) or jl pop rorl add fisttp xchg push mov mov les (bad) fimull test add dec cmp (bad) mov push add inc lahf adc test mov add daa adc lret ficoml adc lods mov or mov hlt inc sti adc ja jo (bad) mov cmp mov sub aam call (bad) pop bound dec mov enter adc pop or mov in adc xor stos pop mov lret iret test mov adc mov mov push fs push mov repnz jecxz cmp xor mov lea cli pop or in mov cmpsl in mov jne outsl int cld adcb pop lods push stos shl sti mov test mov and mov nop pop cmp repz mov xor in inc cli repnz push dec dec inc push inc xor or jne adc xchg inc mov xor and jmp imul push rorl pop test pop divl nop push mov (bad) cmpsb xor xor daa leave cmp or (bad) or add sarb jp jbe mov in jno jae jecxz pop mov pop jbe jo mov pop pop repz lcall scas insb insl mov xor (bad) fcoms mov pop imul push mov dec push jle adc jno add adc xchg fiaddl adc mov inc adc cmp xchg mov adc add mov adc jl mov roll adc pop xchg test insb and aas push pop pop push adc add adc or fisubrl sar ja xor sub jecxz lahf adc cmp cmp adc (bad) ficom insb pop xlat stos lods cmpsl sti in jb paddw in mov shl adc notb and lods mov push into xorb sub sarb adc aas mov mov imul lods xor sbb ljmp cmp lock fildl cmp rcrb push icebp xchg popl fdivs cltd xchg adc mov test jl inc xor mov jge sbb rorb mov push and in sub add das mov xchg jle lea mov adc addr16 icebp cmp arpl jmp mov adc sub mov cltd scas sbb fcomps adc outsl adc mov mov notl outsl (bad) mov rol dec adc lret in xchg mov shlb xlat hlt aaa adc sub stos xchg xor int sbb mov pop inc or or pushf sub mov divb arpl push imul and sti add xor or in adc mov jmp cmp insl test mov push mov adc mov add adc xor ret mov nop test notl cmp cmp sbb xchg mov sub dec fst (bad) xchg imul add lcall stos mov mov rclb or push xchg add sub push imulb ds repnz ficomp adc adc sbb lret mov aam sub jecxz fsubrs sti lds lfs jecxz lods mov aam adc push or adc cmc fcom bnd dec xor lret movsl xor faddl sahf aam mov cwtl aad imul push mov add aas adc loop mov jge mov movzbl adc in mov pop adc cli iret mov dec cmp sub xor mov dec repnz xchg nop inc cltd clc insl pop ss sbb mov jbe xlat pop pop ss or xchg cmc int inc adc xor js mov sbb adc pop mov push lea sbb jmp sub das mov movl mov loopne jae jge into lahf lods add xchg inc mov or popl add jmp je mov mov xchg fsubrs fst pop mov adc sbbb adc or push adc in push adc jnp ss call adc jp and push mov xchg rorl (bad) pop int3 lcall mov push lds fs xor push repz fcomps mov mov inc xlat call jne sub fisttpll xlat push jecxz add cld scas leave adc and (bad) std cmc adc xor imul daa jae jmp adc or enter loop mov (bad) je add int mov adc sbb adc sbbl insl jle mov mov mov adc xor or popf aam jo push or dec shll movsb xor jae and adc mov cmpsb ret adc pop mov repz push insb jo je pop dec data16 jns sahf adc popa mov adc (bad) lcall (bad) sti add notb adc pusha pop dec xchg dec adc minps add jns test or lcall gs dec pop adc es out adc sub jo sti jae mov push lret mov add mov shlb paddusb dec dec push adc cld jmp mov icebp adc mov push (bad) push ss mov adc xor rolb repz mov lcall inc lock dec add jb rorl sbb adc ror and leave jmp (bad) sbb incb lds cmp data16 jno sub popf out xor xlat adc pop mov xor fildll add insb cmp loope (bad) popf adc mov daa jbe xchg aam repz sti lcall mov jl jecxz cltd int3 adc pop push adc xor push add fstl push lret sbb stos or sbb pop sub mov push mov add push ss add outsb mov inc cmp nop call inc loop lods pop imul adc jb add xor push rclb adc sar les or lods sub cmp adc sub or jle bound fdivs or cmp cltd sti mov inc repnz lods add pop add sahf cli out adc jbe push xchg mov jo mov mov mov mov adc subb jl movsl cmc and (bad) aad aaa sbb adc and mov dec xor lahf push xchg lcall mov outsb ret rcll and jecxz adc xchg clc mov mov adc and or adc xchg sbb mov cmp add add rep (bad) out sahf clc fwait mov and fcoml icebp sub hlt adc int3 sbb jb enter loop gs ljmp and rolb fnop test scas mov mov mov aas rclb jle loop out stos push cld rol (bad) jbe mov imul xor aaa int3 arpl jmp adc or xor xchg out ficomp inc sbb mov imul leave in arpl cld test jnp cmp andl out adc or pop adc lcall stos jle pop or xor dec or in or fs pop addl jae inc (bad) mov mov xchg pop dec pop inc push mov jmp xchg mov sbb adc flds push mov xchg movsb sbb in adc js or ret and add xchg adc cmpsl mov adc sbb inc inc sub push aam test js mov xor out or push lret lods sbb data16 ficomp ucomiss outsl xchg jnp pusha adc pop xchg pop fdivr add cmc xor orl call mov es or nop (bad) stos or push (bad) ret sahf xchg jmp push inc pop inc scas adc push das es fisttpll xlat cmp inc adc pop into pop ret pop adc cmp test add push popf mov and lds push bound sub dec mov adc pusha scas jge movsb mov adc mov (bad) xor pushf sub int3 popf lods pop fisttp inc test out mov cmc mov cmp adc and push push cmpsb mov or (bad) cltd xor cmp in lds push push and push js add cwtl pushf adc or test sbb xchg fwait (bad) mov cmp inc pop into inc add pop add fadd mov mov test testl mov dec push push xlat outsb pushf mov xor sub pop ret jmp sub and lea xchg pop mov or rcr adc cmp adc jno adc pop lret xchg xor icebp pop ret sahf call mov rolb inc (bad) or cmpsl sbb xchg mov scas ljmp push aaa (bad) adc fstpl add mov in scas jae adc and inc inc lock adc mov xor aam movsl fwait or push cmp inc adc jbe xchg popf cmp mov sbb fwait mov add jo jecxz lock hlt hlt inc adc jp sub fxch adc mov lock fdivs or inc outsl adc (bad) movsl sub mov and mov mov lahf or adc mov out outsb inc imulb scas in pop jl les leave out xchg adc (bad) (bad) cld adc pushf jg pop mov sti popa std inc and adc enter dec jne xchg (bad) (bad) mov jmp mov insb sbb je les popf dec out xchg scas sahf mov sub jmp inc cld cmpsl add mov or sub out push mov inc adc movl push lahf adc scas mov adc and les repnz add adc int3 addr16 mov movsb loope ret cmpsl add xchg and pop sti adc std jb mov xlat insb cmpsl arpl xchg xor icebp cwtl ss or push repz (bad) ljmp jne adc outsb mov adc xacquire xor or adcl inc mov stos pop pop sbb je pushl jmp es rep lret loopne lret mov mov pop push stc push xchg add adc push jg cmp mov adc ret sar adc cld jecxz inc mov pop mov mov push fsubl xor (bad) mov cld adc cmpsb loopne push fnstenv pop in loop mov bound mull std gs adc jecxz aas xor divb pop mov repz mov int3 xchg mov mov adc sbb mov pushf adc mov adc fwait shl insb mov fmul push adc rorl (bad) cmc adc xchg lcall aas mov push test adc pop cmpsl fwait mov sbb fpatan sbb and and sbb mov push xlat dec rcll (bad) push and out sub repz ss test jl adc scas add (bad) sbb inc add mov (bad) ficoml fnsave clc or jno push xor lods sarb inc jno dec mov bound mov loop xor data16 rorb xchg repz pusha test pop push and subl pop loopne adc push xor xor enter loop out push pop aad jno rclb push jnp push mov adc xlat adc jae hlt xor rolb pop jns call jg mov ret dec adcl pusha pop dec add enter jge out inc xchg pop les test das cmpsl mov pusha int pop push outsb pop jg jns stos push adcl stos or or repnz aam cli mov es imul test jno cmovg scas call adc stc lods not sbb xor fimul jne xor or lret xchg sub adc dec xchg cmpsb in icebp out adc pop push push dec jg xchg cmp xchg ret lods mov and dec dec mov xchg or cmp repz jo es xor test mov add push bound jne or (bad) xor (bad) xrelease hlt movsb repz jmp dec sti jle dec hlt cmpsl repnz cmp adc scas mov sbb mov (bad) repnz or push adc movsb and (bad) out (bad) mov jg mov jl andb insl int3 adc or mov mov cwtl xor lcall or xchg in mov xchg daa adc push cltd fist adc xchg mov ljmp enter push int or pusha xor fcmove popf loope in add sub mov je mov dec imul sbb push (bad) aad loopne adc push ret add inc xor jecxz xchg sub adc rorl (bad) mov insl jns ds adc jbe adc (bad) dec inc fldcw cld xchg adc mov (bad) inc dec les cld out sub jo adc repz xor sub cmp out sub sbb mov jbe mov rclb rcll cmp adc inc adc inc out pop mov and mov repnz mov pop movsl xor push xlat mov cli jmp xchg (bad) mov outsl pop xchg push push jle adc push enter adc mov mov shlb and mov add sub in adc loope cs mov add (bad) pop movsl call jl in nop cltd stos js mov dec or lahf outsl xchg jp xchg movsl adc adc lret fs mov push subl mov hlt enter jl adc add sbb repz pop or inc pop push cmpsb fisub mov arpl jno pusha jo mov mov jne movsl push sbb aad sbb ljmp loopne cmpsl inc xchg das testb adc (bad) mov insb (bad) pop jle jmp mov gs loopne mov add fcomps xacquire cwtl int3 pop adc adc shrl push adc dec arpl jno inc push in mov out lcall lock lods adc imul cmp pop push mov and js cltd adc lea (bad) adc jle adc or push adc or stc in inc ja sbb jno adc (bad) mov test ror aam mov mov dec xchg popf push loop and rcl mov jmp adc arpl fisubl jl sbb dec (bad) xchg jne mov in fistpl adc dec rolb in adc int3 lss or xchg andl pop cltd sub adc scas insl and mov mov test add adc push cs adc (bad) mov fistl or jno (bad) nop iret inc inc std test pop and add pop loop sti adc out push xor jb fadds std sbb push sbb std js and es imul inc je mov out cmpsl xor jle adc jbe mov adc inc call int3 adc push dec xchg shrl (bad) mov lar repz pop adc or rcrb cli nop icebp movsb hlt add push ror dec test add repz jno push mov adc aas mov ja and (bad) jae xor push cmc adc sbb rorl sbb adc jae outsb xor dec cmp ss repnz xchg xor loop jbe or je xchg adc fidiv imul leave push aaa add test std cmpl adc cltd mov add sahf test out dec inc inc sbb pop hlt dec pop adc (bad) xor insl adc repz add notl aas jbe lea pop adc xchg push sub xchg in mov stos dec pop insb in push adc add pop dec iret test adc xchg mov add fisubrl mull xor add and icebp or decl aaa pushf mov addr16 xor add mov mov push cltd insl test je mov add mov das xchg cmpsl jnp xchg xchg jns sbb sub jmp (bad) jle rcll bound icebp jnp dec push mov ret stos (bad) adc (bad) ds push dec repz fiadd mov fistp xlat xor fwait adc popf mov pop jge lds cmp sub pop rcr js adc insb test push xor rorb in (bad) lcall ret test mov shl mov cli arpl negl test xor mov add dec lds cmp out jg flds jmp scas or ficompl adc sub add out jno sbb adc cmp rcrb aam pop adc insl xor fldt pop lock sbb fmuls add mov into dec push inc jp,pt lea push sbb adc or (bad) xchg xchg push adc mov rcll test and test or or es pop lcall dec or cwtl adc and xor pop fist jp jb clc (bad) mov xor sub jne push adc mov jnp nop repz mov lods pop xorb sbb ds cltd push push adc xor pop fist ret lret outsb inc or sbb test sbb sbb adc inc in adc andl negb in fiadd jbe or cmp rclb stc inc or pusha mov fwait push dec push mov mov and movsl mov and insb adc or add push sbb adc push fdivrl (bad) mov aaa aad inc ja mov faddl mov sbbl mov fadds cmp pop adc lock xor adc bound jne push daa adc pop xchg std mov jb es out mov adc addr16 sub dec out (bad) xor or or sbb adc pusha repnz mov test sbb bound icebp int3 sbb adc nop dec adc and or cmp sbb aam push adc loopne loope lds (bad) push adc mov aaa cmp or sub xchg arpl (bad) lret sbb sub dec mov mov mov pop adc lret mov (bad) gs outsb adc roll ja sbb xor pop xchg vmovaps or sbb adc push inc add pop dec outsb mov xchg xor (bad) adc mov lods pop mov adc sub pushf adc cli out adc ficom sub test lcall cmc adc mov aam arpl lods fdiv jle mov or cmp adc pmulhuw or rep dec fidiv push mov scas mov add or adc out ficompl jnp cmp fimul adc xlat fs pop sbb aas push fucomi outsb add dec inc loopne adc insl iret arpl in sti pop mov test icebp shl (bad) mov push jbe pop fstpl shr adcb jnp fisubl mov fs cmp stos pop leave push pop shll push jg and push push xlat add repz jb xchg pop sbb ja stc ficoml jmp repz mov sub cmp mov mov xchg add sbb pop movsl fsubr rclb shrb push js sbb cld sbb les sbb call leave scas int push fadds (bad) cld rorb rcrl (bad) cmc dec sub adc lcall adc lea mov loope sub fs pop mull nopl dec je movsl adc sub xor add pop mov and test das fidiv movsl adc shrb jmp xchg mov add sbb iret daa cltd cmovno jns outsb dec out movsb push fstps or aaa stc (bad) lcall and (bad) jno clc and frstor in mov in adc rcrl fcompl movsl imul adc mov jae adc add mov outsl adc xorb inc in and or lahf sub mov sub outsl xchg inc cltd dec iret mov call or mov xchg sub dec rcll inc adc pushf daa dec leave adc xor sub sarb cld out scas adc jl cltd outsb dec leave xor mov rclb xchg xchg or lret adc call push aas (bad) into adc incl cmp push xor gs adc int (bad) jnp test lock nop sbb inc mov shr insb pop adc (bad) ljmp jo xor xchg lret out and sbbl mov mov cltd add push gs repnz jmp fldenv mov mov mov (bad) pop push pop xchg ret adcl adc mov and rcl (bad) xor lea fucomi shlb arpl call cltd jns sbb adc inc hlt xchg adc call or (bad) insl shrl out push ss insb or or ficomp xchg daa and inc andb jle cmpsb push inc lods xchg cmp fstl cmp jo adcb insb sub sti or adc xchg bound adc insb sub fadd pop repz mov or mov loopne add cmp sub rclb xor dec inc dec push pop cli mov mov jp adc repnz insl adc cmp insb mov jle adc adc push mov adcb mov lods pushf add xchg (bad) add dec out adc mov cli scas pop or add adc jg repnz lock xchg adc fsts pop mov negb mov in adc adc repz push mov cmpsl xlat sbb push repz cmp popa mov adc push xchg xchg pop and repz out scas xor adc lds repz das dec mov iret aad in inc hlt mov dec jmp cs mov adc or das push js adc inc ret jb arpl rorl mov nop dec sbb mov dec jge pop jno pop mov sub repnz jb xchg mov fldcw or adc dec adc lds mov inc push aam add repz scas (bad) movq xchg ljmp (bad) adc jmp inc xchg leave lret jp dec sbb adc fmul pushf mov aas repz xchg jmp nop bound rclb add pop scas push sub xor adc fisttpll sbb adc clc in mov xchg mov sti jae add rorl cli and hlt mov nop inc mov dec jae aas std mov sbb sti test or addr16 (bad) out mov sbb sbb jge push add cmovg pusha in enter inc jg cwtl or mov push xor push movsb push mov xorl sub cwtl imul leave clc adc adc sbb and (bad) pop adc imul je adc ja fbld rcr xor loopne push mov cmp mov inc adc lret stos imul inc and xlat xor daa add cmpsl and (bad) rcrl orl add or fs adc jae popa xchg sbb loop pop clc rclb jno out cmpsb in (bad) dec adc gs stos xchg mov jl pusha mov and iret je inc scas inc notb addb mov push cmp push cltd addl cmp pop imul repnz mov inc jge mov rolb loop sub or cmpsl pop mov sub jge aas mov adc cmc sbb (bad) and repz push inc dec jne lret packssdw adc mov adc rclb rcr loop sti jb adc fwait int3 sub add push mov cli (bad) hlt adc jl sbb xchg ja adc jbe xchg push push (bad) dec (bad) repz jl mov jp cmp jns enter cmc mov loope sbb push test sub outsb xchg cmp mov or adc js dec out mov decl cmpsb dec int3 lahf lret adc cmp out inc mov mov lds mov adc mov jge add das mov sub and aaa or nop jmp xor out dec hlt pop or push (bad) inc jecxz orb out cwtl xor aas cmc cmp lret sub mov mov push add out test sbb rcrb fs scas cmp sub insb mov sub and fsts adc pushf inc xchg and dec test aas add cmpsl adc (bad) fcomi inc pop jle das cmpb (bad) outsl or lahf push int mov xor mov mov sbb adc pop aad push mov clc lcall lea jp rol push mov mov inc xrelease sahf lods data16 int3 stc adc fisub or call cli and test int3 xchg mov jecxz cmpsl dec das dec xchg or inc inc call lret dec mov cmp dec ljmp push repnz mov test addl xchg adc das mulb repz or mov lret jnp adc dec jne add jmp adc mov fs outsb scas lea and mov adc push add pop xrelease jo or sbb lcall adc mov xor mov dec pop mov insb in cmp xlat pop jno nop jb bound pop or mov fwait sub adc xchg aam sti mov inc andl (bad) mov repz add or fsubrl add add insl rclb loope bnd rclb jb js adc pop mov xchg jle adc (bad) movsl test fs daa mov mov jb aaa into loopne jecxz jge adc dec mov ljmp stos test xor or cmp mov adc in jb inc sbb adc es xchg adc sahf mov scas fdivp cli enter jle jl adc pop out xchg repz jbe fnstsw adc call lods sarb test push scas push or adc xchg sti sub jno sbb daa movb std cmp pop imul xor mov xor sahf add jle outsb inc inc or hlt dec loope inc or jmp clc xor and add divb jp adc xlat jl mov out adc jmp xchg jge cmp mov cmpsl int3 imulb out pop adc inc mov mov aaa dec repz ret adc imul jb adc fsubrl and jmp sub nop je pushf jecxz mov inc outsl movaps adc test inc mov add adc or xor popf mov insl arpl ljmp inc mov xchg aam ss push inc mov ficomp jmp sbb movsl inc rclb std dec dec shll pushl data16 (bad) rolb adc iret stc pop dec loope lods fild xchg adc push pusha xchg rep push int3 sub mov aam xor fld sbb sbbb jp loopne cmpsl xor stc repz jl scas adc insl xchg push xchg daa push repz push pop adc fs std push pop jae test adc mov xchg stc sub dec sti mov mov out adc pop and nop mov mov xor adc (bad) fimul adc (bad) roll ds orl add adc xor mov mov lods cmp das lock insl pushf mov cmp xor sub add inc adc cmc ljmp fidiv inc lods test mov into int3 nop xchg adc or add sbb adcl add icebp pop xchg mov aaa mov mov sarb sti sbb in and cmp xor xlat mov jne pop jno adc mov ret adc aas push adc mov (bad) xor cmp rcrb test repz aas dec into push das mov stos repnz xor daa iret add rcll add or popa lret mov (bad) sarl adc mov test addb adc outsl mov sub mov or jge das nop ror adc daa inc push mov xor rol xlat pop adcl sub negl lret stos add out xchg (bad) cmp fstps in das inc inc adc lods jae mov sbb (bad) cmc adc or std adc cmp in push adc mov mov adc jp add addl lock test rorb xchg add leave sbb ja or mov add dec adc fmuls xor sbb adc and pop mov outsb mov out cli sbbl repz cmp or push jae add inc cld int3 push xor adc add add sar ljmp ficompl mov mov jo imul pusha jp sub cmp xchg adc xchg lods (bad) pop (bad) enter (bad) xlat mov lahf sbb add xchg jb lcall pop in insl or xchg fucomi stc mov (bad) jecxz outsl mov popa xor pop insl out imul sbbb adc xor inc adc cli loop adc push add into jb pop adc xchg dec bound aam repz adc mov fiadd xchg movsl push das repnz int3 adc mov jp mov xchg push mov adc das mov (bad) mov popf ret insl repz in mov dec or je pop stos mov dec int adc cmpsb jecxz pop jnp jmp jmp push and rcrb xor repz ja and adc (bad) inc pushf cmpsl push rcll mov rcrl jno cmp popf bound mov sub scas dec and adc ja jge js iret int3 je or mov enter add in push das popf mov mov (bad) add pop push mov xor inc xor adc out outsl mov orb jl in xor lods lcall xlat repz adc mov sbb add fxch incb inc daa je scas test mov adc rcl and leave clc pop rcll jo popf jg ljmp push add out mov fcompl cwtl pop xor jo push movsb (bad) lock mov jl mov jg inc push pop adc ror mov cltd inc fisttpl movsb push mov push bound ret adc out cmp xor xchg sbb jmp adc in sbb sub xor pop stc pop icebp ljmp sbb loop out mov rcl shll inc nop popa adc sub pop add push mov mov test outsl jp xor out cmp insl ficom leave mov jge in pmovmskb pushl lock clc aam jo incl mov xor rsqrtps lock xlat jo add ja repz (bad) cmp jbe aaa xchg jne call add aad adc inc xchg repz jno test lods and fistp in adc dec outsb inc mov fs jmp jl mov or xor fbstp sub xor daa add sbb or aaa xchg adc shlb jns cld mov adc (bad) fsubrl xor icebp jle outsl (bad) or (bad) sarb xlat insl add and adc inc mov lock add xor std repz push xor pop push adc lahf ss adc mov sti adc stos mov lar fcoml xor test or int3 push arpl adc cmpsl icebp sti pusha xchg dec ret adc scas popa js test or imul out shrl movl aam imul inc mov dec push imulb sbb pop or cmc (bad) addb cmp adc or mov adc mov out xor in push add xchg pop (bad) insb or add scas adc shrb xor cmp fwait in dec xor cmpsb push sahf sub or add mov repz dec out ljmp adc jns sub mov mov cmpsb mov add mov hlt (bad) add jns adc sbb sbb popl sub jno mov adc add fidivr repz scas popa scas icebp dec (bad) sub out dec adc pushf fcomps jmp mov inc into loop popl pop adc sarb pop xor or popf lahf sbb mov movsl push push xchg mov pop mov ds pop (bad) add dec fcmovnb adc inc fs mov pop xchg xlat mov mov (bad) in cmc add incl sahf mov push push dec into loope jecxz call out shrl orl sahf pop sbb test push into fcoml lret roll push adc jge mov xlat push daa pop mov push into inc xor scas not sub pop pop push xor and pop jns adc and insl add mov push adc test lret add push in outsb adc push dec add jbe or dec cmp imul jl out adc bound mov dec outsl xlat and scas adc out push mov jmp mov mov lock mov xor loop sub push sti cwtl sbb repz loop out mov movsl adc in sub pop mov (bad) mov push mov imul ja out jns push mov test hlt scas xchg sbb imul insl mov jle xchg fmuls and inc cmpsl lcall sub lahf xchg rcl xor dec movsl adc fistl out in scas adc and cmp rolb stos pop xor loope sarl jecxz adc push adc add add and mov mov gs or fistpl push je imul cmpsl mov adc mov mov fiadd mov adc mov or cmpsl aam jb repz adc mov scas sbb adc push (bad) pop lock aas adc add adc push imul adc jae cs sub inc mov or das sbb mov lcall inc inc sub push pop xor cs or ljmp or and in cwtl jmp outsl mov (bad) fiaddl fsubrs xlat adc jae jno in ficom cmp xor mov or int std (bad) (bad) and pop inc xor push popf add aad imul (bad) inc test int3 push adc push jno adc aam les xchg pop lock lret xchg mov xor (bad) (bad) and mov mov and int lret pop jecxz dec push push sbb fisubrl adc test xchg cmp pop repz cmp out fldenv xor xor ret cmpsl pop cmc scas xchg cmp mov sbb pop loope xchg (bad) or sbb adc mov pop adc test adc inc clc and mov (bad) adc dec lock sub mov adc pop bswap loope call lret (bad) mov adc sub inc (bad) std leave sahf adc in adc int3 in jnp mov xchg ss xor sti mov sti rcll mov outsb mov sete popf mov jno outsl loope adc adc ret adc mov pusha or hlt jns insb adc mov jo (bad) sbb lret dec push jno push or adc movsb stos push or or std xor pop and xor (bad) adc inc dec sub add ljmp rorl faddl adc or sbb call push mov ret addr16 lods xchg ds add cmp xchg mov popf push mov stos dec jp imul dec adc and imul pop jmp lret (bad) sbb gs pop outsl test arpl pushf push lea imul dec imul mov pop dec pop push inc sbb or aaa outsl adc out jmp and sti xchg arpl sbb es test pextrw adc push sarb mov adc in mov sbb adc outsb jns dec bound adc fimul repz xchg dec mov (bad) in adc addr16 push nop inc hlt inc iret rcll cs call roll lods adc inc jmp push xchg sbbl shrb jge (bad) adc stos repz mov sub jl mov pusha xchg mov iret adc mov fwait sub adc xor adc dec negb pushf adc loop push mov (bad) adc in sub push add icebp into pop repnz pop lret xor pop add jmp or cmp insl in sahf xchg nop loope push (bad) mov fstpt adc push cld pop ja es gs popa add mov ret add dec lret xor aad and stos fnstcw shrb fidiv or aam (bad) mov pop test lea ret fs sub insl lock mov rcll mov adc rol call adc mov out jb pop int adc lock mov jns (bad) sub or mov (bad) fstpt test movsl fldenv add adc scas add (bad) in mov insl repz pop (bad) test push int pop inc adc push fistl push dec mov out (bad) in pop popa push adc pop push xor shl inc imul dec pusha pop lret or xor mov stos sbb or aam mov mov cli fiaddl mov sbb adc adc cmp adc inc (bad) adc mov or mov mov jle inc xchg stos cmp les mov nop adc mov lods stc and in test and ret jg adc or inc push jno test or push lcall xchg cwtl mov fsubl adc mov aam xchg sub adc pop decb repz adc xchg or add cmc dec pop push jge xor jg loopne in mov fcoms jae imul add adc ret add data16 mov xlat iret imul shll mov xor fsub sbb jo test and jne mov into sahf xor lock dec xchg js movsl mov aam aaa adc shrb add xchg xchg test cmp dec jl push adc (bad) sub sbb and push cli imul add fistl (bad) aad pop into xchg push repz dec jmp lret daa dec adc mov notl out add xchg testb sbb push dec xchg push leave pushf mov loope or adc cs js jle sub loope push and xchg or adc das push cmp adc mov popa adc stc push push loopne rclb push mov scas or bndcn adc fimull mov vcvttsd2si adc repnz adc sbb sti sub mov out ds mov fucomi cltd shl in adc mov loope xchg aas adc add inc stos jnp outsb adc orl mov mov push jl jns xor jb push popf imul inc fadd repz or in add add sub or add fwait data16 lea cltd adc inc stos (bad) adc fstp fcoml les mov (bad) adc jbe icebp shll in adc fldenv cmc ficompl inc add pop cmpsb inc jmp push cld pop bound adc lds sub mov adc pop and stos aam sbb mov (bad) shrb xor es pop pusha loope fs adc ja nop fcmovnu nop repz xorl adc mov orb xor mov lret repnz (bad) adc mov xlat mov sub pop lods dec (bad) mov adc xor dec inc sbb and add aaa xchg lahf iret mov testb jle xor dec shlb mov jg push bound fistpl adc gs je enter pop int3 adc cmpl mov xchg adc xor sbb adc (bad) pusha xchg adc adc mov adc aaa jmp jns jmp aad push loop out pop push test rcl sbb push xor movsl push lcall add dec stc dec jo inc add push jns or fldenv int jnp nop jmp inc imul je ss test mov test add (bad) hlt mov fs int enter sub push daa push scas pop sub rclb imull pushf xchg cld repz mov push rorl inc xchg push pop sbb xor les push dec adc outsl stos mov jl iret sti dec adc (bad) or sub dec adc xlat ds loope or popa cld scas pop notl loopne mov mov leave mov adc pop push mov je or cmpsl cmp push pop mov mov adc imul pop inc push cmp sbb mov adc dec (bad) rclb mov push clc push ror add jbe cmc (bad) dec (bad) jo arpl add fmul push adc pop jne call out cwtl (bad) cmpsb adc das pop jbe mov call rolb xor (bad) jo cltd mov mov (bad) adc outsl mov cltd mov cmp lds je mov std xchg push and scas mov lret jae test add push cmpsb or sbb inc sbb (bad) add pop jge ficompl xlat xor cmp adc dec aam fisubrl fnstcw and push adc imul mov int adc addr16 jb cs and fsts push pop adc les sbb daa mov sbb gs add (bad) or adc out adc pop jle jne enter sarb stos dec gs mull mov sub pop aad xlat adc scas push stc popl adc lock sahf push insertq jns mov in add (bad) ds movsl lret pop push dec push mov iret adc push adc nop fdiv cli movsb test xor or xchg out jns or adc insl xor mov popf and push cmpsb mov (bad) mov test lock cmovl sbbl pusha daa push je or (bad) mov sub jb xchg jno or nop inc xchg mov inc ret and sub push and sub jnp test pusha repz push cli sub (bad) out cmp xor cmp mov stos lods add jno xchg push jb mov insb iret dec ror adc cli aas pop movsl in aad repnz pop aam iret fwait xor pop lahf scas les adc push notl or outsl lcall adc and int3 addr16 sub js and lcall add fisubl xlat jecxz xchg adc sub sbb xor adc neg popa (bad) mov clc adc test aas push xorb sbb or inc stos test test in xor ja adc out pushl fimull cmp xor andl mov mov aaa lea scas add cmp jae (bad) stos and (bad) in push bound mov cmp sbb mov out js aaa dec inc mov or cmc adc xchg in shr mov stc push adc xor mov pop xor dec mov test or loop inc push mov adc and add adc cmp out xor add lahf pop adc pop loop mov out xor add scas xchg sti test and sti aad or mov mov subl cmp inc in mov push pop repz sub mov jo xor lcall sti mov fs out mov cltd sub push cmp push ficomp jbe aas cmp fmul adc (bad) test adc mov sarl adc inc dec ja pop sub test xchg inc or sarb fadd not mov loopne sub or insl dec adc pop cld pop mov call mov push mov notb es enter mov xor cmp jae lock cmp loopne adc outsb cmp aam or fstl and jne add mov cmp pop mov in inc sbb fstps lret (bad) cmp xchg movsb out sub rclb jge aas inc mov adc sbb xlat ja push mov sti sub cmp adc xchg stos push cmp andl test in mov ss xchg popf jg int adc dec fwait pop jo jae adc mov cmp push mov mov mov push and mov xor sub les or mov fsts loopne lock mov push lcall enter (bad) out hlt push add mov add mov lds pop jns icebp repnz and mov jmp adc push sub adc push fcoml test lret rcr sahf arpl mov mov push and and pop adc scas mov insl sbb out daa movsb push adc cmp jbe popa adc outsb inc shrb repz pop push dec cmp ljmp in xor movsl and outsb lock sbb lret or (bad) pop adc mov into fmulp test repnz add js xchg fldl mov aas pop dec lods adc lret cld xlat adc xchg mov xor test sbb int3 jae stos (bad) and in jmp jns jnp sti push and xchg mov jp dec jns mov sub mov pop and inc (bad) aaa adc adc mov es xchg mov ds or jge lret jmp pushf (bad) mov aam add cli mov mov xlat (bad) jp adcb sti mov jecxz iret cmp cmp inc insb adc bound icebp cmp pop jmp or mov and pop (bad) or aam out gs add push mov adc out mov and arpl mov psraw pop and adc add adc cmp inc popa xchg imul mov adc adc repnz (bad) out adc jmp cmpsb mov clts pop icebp xchg in cmpsl push xor incl mov mov arpl iret mov inc xchg mov notl fldenv or jecxz sub inc mov push xchg test adc adc jp sub add cmpsl xchg imul mov jb dec jecxz js add dec ds test mov dec mov xor leave sbb xchg adc xor js sbb dec pusha mov mov test in aad push push jmp pusha mov int adc push adc add adc mov (bad) (bad) dec int rolb jmp and out mov rolb jns mov icebp push leave (bad) nop cli loop xor xlat mov in loope pop sub and addr16 mov adc call js test adc je jno inc xchg test mov adc rcrl clc mov cmp out insl add scas pop (bad) cltd nop fstpl cmpsb add int repz and repz js jbe adc mov ljmp out call adc test sub jbe cmp sbb mov inc out xor xlat out test cs inc outsl pop adc into mov xor sbb adc cmp xchg adc stc dec nop jmp push or popfw push cli ljmp roll popa add rorb aas outsb jecxz in jo out adc test add (bad) (bad) and add adc xchg push enter push cwtl test pop popa dec add and scas xor repz decb or jge leave inc cmp jbe add sbb rorb pop ja lds (bad) adc mov xchg (bad) mov push inc lret sbb adc movsl and adc cmpsl out mov or ret adc push and dec cmp bound sub xor jae jle call and ret scas xchg xor adc jns inc dec adc inc xor loop mov pop add mov in xchg push aam add ja jne sub adc push loope dec lods fidivrl popa pop inc cltd xchg add adc sahf loope adc mov xchg les add mov fstl jmp imul lcall xor (bad) mov jmp push jle nop lods mov pushf cmp push mov repz push imul mov xor xor adc sbb jle in inc rep jp adc cmpsl xchg sahf popf push adc add dec sub iret xchg adc lods lret rcr or or xchg xchg adc outsl add ror pushf or jle mov add repnz cmp cmp jge scas mov loopne adc mov pop push jl cmp push mov mull rorl inc pop ds mov push aam rcrl mov xchg andl push sbb mov cld iret in int outsb out push into seto xchg cmp stos mov xchg adc lahf andb adc sub arpl loope push adc mov (bad) mov adc mov dec loop xor lret cmp jno mov mov add mov xor add mov in mov (bad) xchg leave (bad) cmp xchg inc test test xlat xchg cmpsb scas sbbl xor mov or xor out ljmp adc mov inc out mov xor test xor rclb mov xor stos lods fisttpl inc xor xchg add jo mov dec adc fisttpll (bad) xchg in inc arpl inc imul out adc xor fisubl xchg push sub and mov inc (bad) sbb or pop and loopne daa adc sub inc adc mov ljmp xchg rclb jo icebp repnz fbld rcrb cmp push sets sbb jge adc jae inc insl bnd adc test loop inc sub and ret add jne adc sub inc mov ss add arpl repz repnz sbb iret sahf add pop popa rcll pop adc or fnstcw (bad) int3 push and out xchg nop sbb insb pop dec xor rorl imul stos xor mov pop cmp je lds rclb jb sahf cmp fstpl inc mull inc popa fneni(8087 mov aaa mov (bad) je sti or mov loope aas adc mov mov mov into add ja loope shrb cltd roll cmp or adc daa jp mov pop xchg fsubp sbb (bad) iret enter (bad) in repnz iret sub jecxz lret es pop xor stos and addr16 je aad popa lods adc mov into bound jb xor loopne or pop aas std add push jns (bad) in out lea addl ss add ret adc pop les sbb mov cmc mov ds add xor pop add xor fsubr int3 mov nop hlt loopne cmp out sbb or data16 jmp les mov adc loope cmp es leave pop adc out inc or lcall cli cmp (bad) jo imul call enter sarl in jg adc mov (bad) mov add inc icebp sbb pop adc push jne ljmp push dec add add iret push push sbb mov push sbb sub mov adc push inc jb push test inc out push enter adc jae aam je xchg arpl adc push pusha and push out adc inc (bad) aaa jo cltd cmp fidivl sbb test adc adc push imul xchg and icebp push jo adc sbb out call mov sub popa test adc mov loop mov pop jmp push adc cmp (bad) out push cwtl xchg push pop jae push out xor test adc sub inc ret xor sub jge mov dec jl ss jns or std pushf or sub lret and in inc sar xchg out fistl mov pop xchg jo rcr jge icebp mov scas mov add movsb fistpl adc xor dec adc dec xor adc pop jge stos repnz adc clc jne adc jno out mul sbb jge sub cwtl mov movsl sub (bad) hlt aas sub push xor mov in jo adc jecxz adc dec nop adcb lret mov jnp pop mov lret pop loope cmp call cli repz cwtl jne test scas mov mov sbb aaa (bad) jle pop pushf mov daa scas inc or xchg inc push aas adc test into std movsb test adc out dec adc xchg aaa adc or jmp mov sbb or add aas or enter or int3 lds push lcall jp daa in inc mov fs jg mov aaa or hlt push cmp adc mov inc bnd popa sbb movsb arpl push push mov cwtl push cmpsl dec cli push popf xor mov dec jb xlat adc add call adc xchg popf or push icebp mov xor push jg mov or insb inc and or pop jg adc sti sub scas imul sbb cmp jb sbb cltd xor pop out adc jp,pt (bad) (bad) repz lods xchg jb loope mov gs std imul ljmp jmp loopne out push gs mov mov insl daa mov push push inc in push push sbb aam or adc fimul mov cmp sbb ss inc (bad) out mov rolb mov fs repz (bad) orb xlat je outsl sti cmpsl mov insl fwait adc xchg arpl jno jbe jl cmp add aaa ljmp mov cmp adc fistl js packuswb iret in mov xor jle fcoml shrb xchg clc xor adc push pop test pop (bad) cmc repz mov mov sub nop inc repz (bad) lret call sbb mov out push or adc push dec mov insl lods mov shlb outsb dec pop outsl pop es shrb (bad) mov mov adc popl cmp jno jne or repnz jns fwait pushf xor sbb insb and popa pop jle adc daa data16 sbb push adc hlt xchg push mov es or (bad) les jge or adc notl xchg (bad) adc std or dec mov pop sbb fstl add call int push inc fdivr int jae ss pop adc mov mov jb jg adc jge inc adc inc std dec adc mov push adc xlat sahf es adc mov ror cmp pop xor insb ficom lret mov mov inc or aam adc sbb hlt adc imul stos fidiv lea in jbe adc mov loope repz out bound mov xor shlb addr16 outsl (bad) cltd cli adc sub (bad) push outsb lcall mov and adc adc mov pop mov popa push pusha stc or xor adc pop scas (bad) int adc les std ljmp pop mov or adc add xor or movsb imul scas jge sub std jp addr16 ljmp rorb mov sbb add outsb (bad) adc push aas fidiv jne adc dec jecxz hlt loopne pop inc mov cltd fxch push sar pusha mov popf nop out sbb loopne inc loop out adc jle adc sbb adc fsubp sbb mov jae jecxz daa push jl out xor mov ret pop jle adc test push lret xchg jle loop cmpsl xchg fstps adc push push sbb mov call cmpsl movsb add nop jg sbb dec dec xchg xchg jns into sahf pop inc in dec adc and adc sub push adc fldcw jns add pusha shrb stos mov or push je adc inc jbe add scas lds adc nop dec sti inc sbb adc ret add popa adc mov test adc xlat das push repz imul mov mov pop or (bad) jecxz (bad) iret add add pop bound jle int3 out and inc sbb adc lock cwtl leave std adc jge out inc pop adc lret jmp rcrb rcrl aas out cmpsb adc inc mov cmp repnz jbe adc adc (bad) divl rcrb or adc mov jle adc inc roll arpl jecxz adc test adc pop nop insl test or jp xor add adc (bad) sbb xlat xor adc leave and (bad) out push adc pop dec adc xchg shrb sbb inc flds adc mov inc adc push lahf push cs mov int3 or (bad) mov mov or test nop ret adc or jbe add stos sub xchg movsl jb add cmp lcall jg in inc (bad) hlt sahf dec adc repnz or adc imul adc jle sti sarb cmpsl roll pop stc roll jbe call adc ret mov adc push aam fnop js adc movsb add fdivp (bad) adc mov push push sbb pop adc mov paddw xchg sti and mov scas rcl shlb mov test adc and adc jns mull int3 repz ja dec in aad or js roll dec cvtdq2ps sub cwtl lret push fistpll call push adc aas inc add adc xchg daa (bad) xchg sahf mov or bound push rorb push ret arpl jb or push mov cmp repz adc lcall pop dec mov scas iret aam cmp data16 frstor test pop dec push add adc cmp mov das fxch mov mov adc (bad) sbb test or ljmp scas movsb and or out jp ret adc jae movsl repz pop inc (bad) ja push mov cli repz mov sub pop jle add and out adc dec and adc addr16 adc in out sbb mov sub inc shlb adc sbb sti pop sbb or rolb fcompl loop aam add adc and scas aam ss mov or jl das mov inc adc lret dec (bad) mov (bad) out sbb add cmp dec rcr pop inc ja imulb push jle push call cltd sbbb xor mov data16 xor in jge pop dec insb pop adc xchg adc into add js imul push mov mov jo or mov mov popa in mov and sub adc in push inc pop ljmp outsb push loopne in dec adc xor adc pop cmpsb pop xor je int lea cs adc cmp notb dec ja cmp sub adc sbb stos inc rep add imul dec xor mov or outsl inc jecxz pop iret push xlat (bad) pushl (bad) sub repnz ss (bad) cwtl mov xor inc jmp mov xchg cmp lods in pop adc mov pop lea ljmp icebp adc push (bad) bound or fisubrl fdivrs adc xchg or cld mov icebp inc xlat cmp mov stos int3 and push inc sub push mov adc mov outsl add mov mov push adc mov repz clc mov jp add xor push cltd push adc cld movsl fistl mov dec push push jle cwtl (bad) mov cmpsb rcrl repz mov fbstp sub or jle adc or sub cli (bad) ljmp pop cmp mov dec rolb pop jns push push rcl roll fs jecxz sbb (bad) stc mov pop adc lods lock pop and jno int3 test jno xchg jge xchg adc or daa andb push clc popf lcall outsb jb,pt pop shll adc dec scas sbb (bad) pusha adc pop sub lcall addr16 lods repz cld inc push movsb call ror sbb xor add stos int3 adc aam repnz or aaa (bad) mov popf insl lods inc adc push xor test dec popa push pop rcrl mov cmpsl fdivp mov inc jne pop pop adc mov stos outsb ficoml pop xchg lea mov push adc ret cmp insl adc (bad) repz adc vaddsd dec test pushf fsubrs movsb push xor ret xchg jbe adc cli in mov mov cmp mov jmp inc add testb jb sarl pop lods mov lahf mov push notl inc sbb stos nop lock cmpsl jmp rolb xor sub push xor sbb sarl push shrb sti pop cld dec mov cld repz cmpsb or stc adc int3 and dec sbb shrl cmpsb xchg jo nop call shrb xor stos dec cltd or movsl test repz jnp push mov adc ret sub adc dec lea mov shlb push notl xorl or xor jno movsb or std lods add call in stos jne fdivrl jl in icebp lock xor lcall sub jno jecxz adc repz mov std jge icebp or insl add adc cltd aaa pop sarb in fsubl popl adc jmp mov das jo dec xor add ret notb xchg int3 cmp dec mov and adc rolb lret ret (bad) mov loop push dec jl inc pop cmp in or jo in js sbb inc stc fst imul inc scas out mov push repz pop es jb repnz jnp mov nop je arpl jg add leave cld pop out push jnp add inc jecxz fstl imul dec insl push adc movntq xchg sbb stc int3 enter pop adc call ljmp jmp xchg push pop jl adcl xor mov cmp icebp adc int push push adc mov in sub xchg sbb je movsb repz jp xor ljmp out subl mov cmp les fnstenv adc stos adc add pop sahf and push mov or jmp test (bad) std ficom xor jmp mov in movsb or cs (bad) repz lods cltd adc out and jnp inc cmpsb outsb pop (bad) xor mov icebp call xor mov adc mov leave mov ret mov add or sbb adc nop cmc int jb sbb sub mov jmp iret mov jne add jno out sbb repnz or xor and bound fcmovbe sub test mov dec in jle mov lcall xchg mov das (bad) mov adc xchg add ljmp jbe sahf cmp dec cmp jnp (bad) pushf mov mov jge xor xchg sub xor cmp inc inc (bad) icebp sub stos out cmp add roll dec adc stc ja bndstx xchg lock xchg adc xor fs insb mov adc lds stos test js fstpt dec cmpsl loopne cwtl stos lods adc lock lahf dec jno push sub imul pop scas aad cmp mov sub mov sub popf pop xchg cld adc (bad) fistpl int3 lea hlt clc mov adc adc in sbb and or enter jbe sbb pop rclb sbb inc insl aaa adc pop imull adc cwtl xchg and mov adc sub es lcall xchg dec cmp mov cmc adc xchg jmp into popf fwait repz unpckhps adc sub lcall and inc adc adc jns jl inc xchg or jmp call adc inc sbb and insl cmp out lea push subb dec or jne in xor inc in movsl push mov aam fwait mov jg pop adc stos mov cwtl push movsl xchg es mov add xchg xchg push xor (bad) jne push aaa loope adc push mov rolb add (bad) push add and or push stc adc xchg push mov movsl hlt or roll mov fwait iret out adc in dec loope pop icebp sub push out jge add enter iret xchg adc arpl out dec inc or int jne pop mov mov push ss (bad) sbb stos or adc pop sub (bad) pop jae jp test add (bad) idivb xchg stos cmp in dec pop gs cmp adc jle cmpl lea fld pusha lahf mov mov jno xchg and in mov repnz test mov movsb add push or and ja fdiv push push mov mov dec adc addr16 push jle push mov in cvtps2pi sbbb push sbb enter pop dec jmp lret mov (bad) rcl push xor fwait jne mov push mov sbb mov (bad) push ret adc cmp or mov push mov push call (bad) out mov scas mov xor xchg mov adc dec insb adc cmp push scas adc loop clc repz add mov jp std (bad) mov push xchg or sub or mov mov adc pushf fstl jo and mov adc jns cmp mov lahf xchg aaa sbb popf fist dec pushf jecxz push dec pop mov cs xor jg sub sub adc ss add adc movsl cmp sub mov je sarl adc jnp mov mov xchg adc xlat cwtl adc sbb (bad) push mov sub pop adc bound adc lret into fucomp sbb push adc icebp subl xor je lods mov add insl push adc push inc cmp pop lret or (bad) shlb fnsave jle (bad) add incb jmp mov popw sti test repnz adc inc mov jne jo inc push mov jge xchg pop mov mov xchg in iret cltd rclb push push mov xor pop inc mov int3 or inc mov xchg inc sub adc popf mov shr das maskmovq (bad) (bad) jge adc adc mov lods adc add xor sti lcall dec pop into adc push aas xchg pop inc bound push push jo pop mov inc adc add mov (bad) je popf push jge mov cmp (bad) pop ds call xor jbe cmp fimul popl adc int fcomps mov test mov stos add adc movsb mov (bad) daa iret or or sub pop cltd xchg pop xchg add adc xor pop sti or adc xchg adc fimul or and enter fwait push jp sbb push mov fldpi ja push sbb inc xor adc cmpsl xor loope popa or fldenv push mov inc mov dec lret mov insb je repz ret pop mov push add ds pop dec pushf adc lds les cwtl sbb pop xor sbb adc (bad) scas lret sbb pop outsb aam cmpb out mov adc mov push dec incl faddp in mov (bad) dec xor xchg (bad) test fnstsw inc cs mov pop cmp xchg out and hlt nop (bad) lret pop pushf imul mov mov jmp mov ljmp and enter xor mov in lods cmp adc push mov and scas adc es mov call into jae decl xor sub jecxz push iret xor push ja clts xchg adc mov psadbw enter sti push sub mov arpl jae in rol adc adc jo (bad) xor bound ss (bad) or dec hlt push jp xor push out sti adc popa lods xchg arpl push push push jmp mov (bad) rdmsr (bad) xor inc mov in mov (bad) pop adc push aaa fisubr repnz mov out adc adc aaa mov das push testb outsl sbb or xchg adc mov mov fisub lea or (bad) adc std jle cli add adc inc insb out frstor aad test mov pop jbe stos sbb mov ja pushf adc pop jg scas pop xchg cs mov dec loope mov sub or sub std mov dec add (bad) popf adc jg and ds cmc sbb push adc dec push outsb daa fwait test std ffreep sbb test (bad) sbb jl xor sbb imul ficompl lahf dec cltd xchg adc pop xchg xchg movsb mov stc jmp cmp stc jl out je add xorb push add mov mov addr16 cmp push jmp sbb jnp jae pop (bad) pop mov aaa xchg dec or xor inc cmc adc jge icebp shll adc out sub clc rolb fsubrs mov hlt cmp nop rcrb push xchg adc xchg adc add pushf adc out in dec insl and cmp adc movsb loop testb rolb fmul push mov lretw cld mov xor mov lock loopne pusha adc dec rclb mov out adc out es pushf mov dec jns jmp xchg dec jge xrelease int dec std lds push mov pop movsb leave cltd fistl in shl pop sub fmul fwait aam and sbb mov stos adc lahf jecxz aam inc adc dec (bad) jle lods xchg dec (bad) mov adc fcomps adc inc pop mov and pop xor mov or aaa repnz mov popf divl mov jne aaa rolb in hlt pop outsl rcll pushf mov sub aas mov add or xor je testl cld add dec adc push ljmp fsubp pop adc cwtl es mov loop dec ljmp sarl mov mov sbb and enter jmp lds adc xchg sbb pop repnz jge fdivs pop cwtl (bad) je push xchg ret loope adc test stos xor add add adc gs adc and mov dec xchg lea inc dec jl jae cs inc push adc adc std adc adc cmpsl adc loop cld adc movsl ret ret fdivs das faddl pop mov lea xchg je loope hlt adc sbb ret sub sbb (bad) mov mov or mov cmp add (bad) mov fimul adc je push dec jmp xor cmp mov jne adc push int popa xor mov dec inc fmuls aad dec pop dec ja adc sti repz cmpl test xor push adc in notb sbb (bad) mov xlat lret adc mov arpl and mov adc adc mov aam repnz and sbb jle fmull into scas mov adc fnstenv icebp lret repnz mov ret shll fs pop adc mov fs adc rolb enter xlat add loop push mov notl mov cmpsb push out adc sti mov sbb bound mov adc jno test mov andb in sti xor mov xchg adc cmp jmp pushf ret mov loope (bad) xlat xor std rclb incb jle adc notl daa sbb dec pop mov adc pushf adc push es cmp xor push adc cmpsl sub jo jae orb pop push dec push sub es add int3 in fist mov inc cltd sbb iret xor or lcall push in std sbb or mov add adc pop sti shrl push sub movsb and sub aas mov jns sub xchg insb adc int pop pop fnstenv fisttpll jns dec adc and mov scas cmp in cli push cmp dec test pop ja xor push into adc jnp xor sub mov repz xchg mov inc pop roll xor test aam dec out stos adc in push stc and mov cmpsl jb mov or jge mov int3 je add push mov inc inc dec aaa xor loopne lret adc ss dec adc jb jg and insl fbld mov adc pop adc movb pop mov inc loopne mov popf pushf iret mov cld adc shrb add adc popa adc mov xor add cwtl lret inc adc sub pop inc and iret jo inc cmpsb shrb dec mov es aad dec in xchg jmp add adc jg or xor hlt popf stos adc lret xor sbb rorl gs mov mov mov adc mov adc fistpll fucom shr inc jge dec insl fdivrp iret ljmp push xor cwtd inc jecxz add cmp adc nop sbb adc (bad) out mov jg jno repz shlb mov cmp sbb pop mov sub in sbb xor shlb out int3 jno adc cltd mov dec pop sbbb in or adc xor fwait roll mov sahf int3 hlt repz in lock and ss jle adc push cmp inc pop xor roll gs mov incb (bad) adc adc and add call lods stc jp and mov outsl or xchg cmpsb outsb insl cmp popf sub adc ret mov in data16 mov flds jbe inc loopne clc xor imul add push test adc xchg jp insb outsl adc int3 mov xor xor lea (bad) cld js std imul adc inc xchg xor (bad) notl icebp adc jbe sbb je std (bad) cli roll arpl lret fsubl clc inc lea hlt push xchg adc and mov repz scas adc or cmpsl les adc adc movsl jo outsb scas popf mov xlat pop xchg mov ret adc int3 sub xor fstpl adc subb dec xchg outsl mov pop cmp adc mov pop xlat jl addps adc push dec jno adc inc (bad) and dec roll mov test inc adc into mov push mov outsl icebp jge ja orl pop ljmp push outsl lret cli repz aam pop clc fistl stc popf add rolb mov mul adc (bad) push iret cmpsl (bad) xor movsl dec outsb cmp pop imul xchg xor jb cld lods insb pop adc push ficom (bad) push adc inc rorb inc xor mov pop jge loope or ficom fwait cmp outsb adc or mov xchg dec jl xor or ljmp imul pop jo mov xlat subl adc mov xchg mov jmp enter jle inc adc dec pusha mov jl adcl in rcrl pop inc mov ljmp in mov fidivl aad push cmpsl push adc fdivrl js pop pop fstl sti cmp mov ret mov xchg mov push xchg bound xor dec xor insb mov scas lret (bad) xor adc or adc vmread pop adc pop rolb lcall push add repz and rorl xor adc inc or mov jmp fwait (bad) nop push rclb pop mov roll mov mov push sub jl adc inc lret mov adc adc and in xchg dec pop adc pop (bad) fidivr adc je cwtl adc sub adc inc imul test lea dec adc jg or add adc mov out cmp frstor gs (bad) inc adc sbb push shlb xchg cmp daa and (bad) (bad) fnstenv sti ret mov rorl adc mov adc fdivl xor enter inc adc push (bad) (bad) adc lea sbb cltd repz jbe inc push jae or jno xchg adc cltd xor xor xor adc dec clc (bad) mov sub mov push xchg or push insb mov push jp adc mov mov int popf jbe push add js sti add arpl adc jnp mov adc and out pop adc bound and mov dec adc outsb push and cwtl mov les clc sub pop mov jne xor cmp cmp xorl jae or ret pusha hlt xchg jns popa sbb cmc mov out push stos xor mov aas or popf and imulb mov xor adc btc pop pop mov mov sti jb or shlb lret xor out jmp outsb inc repz dec jnp les adc pop cwtl lahf push xchg lds lea push lods mov xchg cs xor add test rclb ds fisubl push push jecxz and ja ret sbb pop adc cmp enter das mov adc neg sbb cs push pop imul ljmp inc repz mov xor out jmp and out test sbb pop jg aas movsb pop (bad) popf movsl or out xchg fs add rclb cwtl shll in mull pop stos adc cmpsl add fldt js sbb mov mov in out xchg icebp xchg mov add mov rorl cld lcall fcmovnb fimull or mov add jo adc xor cmp in pop iret addr16 inc adc push mov adc jl int nop push (bad) es add dec mov mov lcall push cld push xchg adc stc push lock inc imull insb dec jno sub mov fsubrs push xchg insl xchg call xchg or or les fsubrl push adc int out mov call jecxz jae mov stc push mov adc mov mov lds cmp (bad) push add orb lods inc int mov jge push jns rclb xor adc fistl sub sbb adc or cltd rol movsl xor xchg pusha adc xor adc fildl adc ss (bad) icebp int3 inc jno in popa xor mov adcb xor loope cmpsl jnp adc add lret jae cld jbe dec lcall repz shll push outsb and mov adc jge out inc test arpl adc insl les rolb (bad) lea aaa loopne decl incb sarb jg dec adc sub add sbb jns iret pop nop pop (bad) (bad) test adc xor rclb lcall adc clc xchg data16 push ret adc inc mov sub fistpll stos divb or xchg shll adc aaa call jo stos adc mov mov push std test or pop push xchg jnp in fisubrl sbb jecxz xor and push jne lea cli mov push sarb and and rorl cmp cmp int3 cmp sbb pop call rol sbb adc mov in adc cltd and xor js xlat cmp (bad) popf pop je fs pusha in push pop es dec nop mov cmp imul mov int into pop adc sbb xor ret push push mov arpl mov sbb sbb add shlb test test dec loop jmp cmp add pop xor or sbbb in movsl mov imul adc out lcall cvtpi2ps popf mov fwait pop adc stc pop neg scas hlt jns insl mov lock aam ficomp loopne or sbb aas stos or push pop xchg adc and enter aad push cmc mov (bad) pushf hlt (bad) sbb xchg push adc jl mov (bad) adc cli rcr sub mov cmp jns imul or scas bound mov mov xlat int mov dec sahf jne fcoml jbe add popa inc xor dec push pop pop lds mov jo aas icebp adc loop mov (bad) mov lds mov test int lods imul loopne int3 es adc sbb outsl in sub into or sub fwait push mov xchg cltd sti es sub rcrb push cmp out xor ret or adc inc mov pop xor lds mov push push sarl (bad) jno js adc push adc sub out push adc loope rcll in popf sub int inc pop sbb push xor sub ret dec push sar jle sub add daa adc mov loopne aam test cwtl mov jno jmp fsubr ja pop test out pop dec push mov mov mov repz inc and lcall or sbb xchg and (bad) push pop adc mov mov push or sbb (bad) loopne sbb and incb out xchg mov dec mov jge jns pop (bad) or insl adc mov icebp adc hlt inc xchg mov xor je scas fcoms dec jp jb push stos adc test xchg mov movsb pop mov xlat sbb lock fmul (bad) aaa clc loopne repz mov jge in adc push sbb mov cld rclb jae push mov cmp in popf lock cmp out sbb xchg addr16 femms pop xchg mov bound mov xchg fstl cmc xor nop ljmp out adc sbb cmpsb or add adc lcall jle xlat push jo rolb xor idivb leave adc mov cli adc mov popa mov icebp (bad) jno in pushf xchg add insb repz dec mov ds cmc dec pop cwtl in xor arpl lods cltd push addr16 add inc jl inc outsb jo jge int mov leave ret jns jmp cltd push enter xchg ds cwtl adc flds bound pop mov push adc fldenv es dec test (bad) divl data16 push sub pop or sbb fnstenv addr16 adc mov pop dec (bad) enter xchg inc adc gs mov jmp sub adc pushf dec js inc lcall adc (bad) adc sbb fdivl add adc stc cmp adc orl loopne dec push push dec je bound cmp sbb sbb xchg negb push insl fdivrl push inc repnz xor (bad) mov iret outsb pop sbb sub xorl imul cmpsl lret sbb mov fwait adc js sub and je outsb out out add mov (bad) mov scas push adc notb call xor cmp mov adc lahf add cmp mov es pslld xchg (bad) sub xor xchg popa cmp jle pop cmp xchg es fcoml scas fild cltd mov push sbb mov shlb xchg icebp pop jmp lock movsl ror pushf cmpsl imul pop xchg mov sub cmpsl dec lahf adc repz jg and xorb dec paddusb xchg fimull inc push cwtl cmpsb add adc imul dec jb repnz mov stos sbb (bad) movsb and mov in int3 adc push jo (bad) jnp enter push push jmp cmp ret lds lea ljmp cwtl gs mov int jmp insb hlt mov testb mov lods and adc inc aam inc adc out push popa push adc add dec rcll out and (bad) sti mov mov out aad out pop pusha je fwait push imul mov fisttp js and outsl loope pop outsb jecxz pop xor roll jl adc adc cmp (bad) jno sbb rorb mov jg xchg pop and mov adc xor leave jno fnstcw or popf mov mov popa (bad) out lret movswl repz ret sub mov pop cmpsl mov or imul adc fnop pop fucomp pushf jno mov nop jbe mov ret int3 adc or sbb inc test loopne or shr jne mov nop mov fsubrs mov scas dec mov cmp pop sub repz push xor or xlat repz or inc adc dec sti push sarb mov (bad) neg add jge push aas rep mov mov mov and mov pop mov xor cltd das (bad) sbb pop iret cmp jnp inc movsl fadds pop lss cmpsb adc (bad) xor mov out mov and sti aam pop popa mov fadds out xor push jle jge test jae adc in scas sbb adc sbb adc cmpsb mov or aaa jbe mov adc pop xchg repnz addr16 mov adc aad adc mov adc cmp sbb adc add inc dec jbe je mov ja stos cmp sti dec ret adc xor dec mov loop ss and add adc push scas inc xor jle xchg ds int3 adc call mov iret scas xor jns jle sub enter das adc into push xchg es lods fstl aas mov mov cmp pusha push sub adc dec xor inc jmp out movl shrl in inc or pushf push pusha ret and adc push jp dec daa adc ds ja fdiv pmuludq dec mov adc jne add stc adc add cmp mov add stos mov adc adc xchg adc (bad) movsl inc decl xlat sbb adc adc inc inc sbb cmp lret mov add incb xchg jne cmp out xor data16 stos loop test xor xchg xor push in cmpsl cs sbb or push insl adc and mov sbb call scas mov sbb mov xchg or repnz cli mov iret lods mov int3 inc inc mov cmp pusha mov test mov mov jo lret inc sub rclb insb sar (bad) mov pop pop mov (bad) mov in les cld aad push sarl xchg or mov push mov mov lret fiadd (bad) jae inc das (bad) adc out mov pop push out pop lcall jae sbb push movsl loop cld pop (bad) jge mov mov sbb aaa pop test (bad) movsl mov (bad) mov pop bound xor mov cmpsb or outsl adc test sub inc xlat mov mov xchg js cmpsb fwait out and sbb dec in nop es int3 stos into in or insb xor xor jle pop xor fcmovu adc jb dec hlt adc out outsb mov sub aam test jge or (bad) adc mov (bad) mov cmpsb call jb sub add push jecxz rorb notl add mov add push xlat out pop adc fcompl sbb xchg mov (bad) jp in push inc inc sbb or rclb hlt movl cmpsl mov js add ret or lds mov push xor js jp stos and cltd sub xor repz jle in dec jo (bad) (bad) adc adc push and jl mov cmpsb loop adc xlat sub adc inc xchg ret bound in xor jno pop imul dec mov inc repz xchg dec popa fbstp pop jle or bound cmp xor sbb (bad) hlt push adc sub pop fsubs test jno and and movsl sbb sbb cmpsb out or adc cmp push or scas jge int adc add pop adc xchg push sub adc adc or xor hlt es (bad) or xchg loop aam sbb xchg dec mov or pop mov push mov pop inc adc enter lods or repz into dec adc lret dec insl push inc shrb inc sbb pop cmpsl adc dec push jo xchg imull decl adc inc push jl add sub jle jnp adc in mov pop adc aad icebp mov mov in call mov push jecxz fisub repz rclb outsb adc dec or scas push push not inc adc push cwtl pop jmp movb pop mov inc aas push inc out ja adc jmp into mov out pop and out jl test add jle push xlat andl aam hlt jb jo mov dec in test fstpl ds mov into inc repz in mov pop arpl std pop inc xchg jmp xchg mov rorl pusha xor out and adc loop fcoms negl dec pushf std inc push cli mov sub jo mov (bad) repz mov pop (bad) lds test loopne andl (bad) jae mov lds mov pop lock jo ljmp xchg xor lret jle lret into pop adc and jg loop adc jecxz out dec data16 mov inc (bad) int movq push out adc fwait mov adc insl int sub cmpsl adc stos mov pushf imul sbb pop ja jo int3 adc add sbb pop adc lds ficompl and xlat rcrl das stc pop jmp mov lock add adc fcoml cmc xor cmp mov lods repnz pusha scas adc int3 mov inc and jo mov fmulp (bad) adc in in mov push jns insl inc cmp adc cs ss xor mov xor (bad) mov lds push jl cltd data16 fistp inc or add and push pop cmp sbb stos or dec adc in inc dec mov lret pop inc jne lcall fsts cmc call dec xchg in xchg push add mov enter cmp jo das daa movsb xlat repz sar nop (bad) loop jb adc fidivrl jmp cwtl fstps xor test adc mov mov insb mov cmp adc mov cli lea adc push outsl mov scas adc sub es (bad) mov inc jbe in mov fnsave xchg sbb shrl (bad) xor pop jne cmpsb add sbb inc jecxz adc xchg and in jp push adc push sbb (bad) mov push mov add bound pop xchg xor addr16 and pop push and mov add insb in movlps or adc jl out push leave (bad) mov ja imul addr16 shl pop or mov popa insb and mov fstpl iret mov push or pop add inc cmp adc imul mov movb push int adc gs inc les adc pop icebp lss xor pop movsb jg adc adc jno jl notb inc mov mov xor xor mov mov sub adc mov adc pop fstps repz pushf sbb push mov or mov ret adc mov xor mov call dec sbb jbe add xor lret loopne add push sbb js xchg sub (bad) nop and dec add or and jmp adc jne add adc xchg stos and out test pop or add adc jne es adc dec lods mov dec mov xor jmp add lock rcll dec inc outsl dec jl xor jbe sti movsl and adc mull shl dec adc inc xor dec jle lcall jg repz pop lds jmp aad in add fwait add add adc sbb cs adc lods or rolb adc lcall pop bound push pop mov cmp add jno add adc outsl std xchg sub mov fwait (bad) push out stos in mov adc mov std mov pusha (bad) (bad) xchg adc push xchg ficom jae pop pop aam mov add adc imul adc xchg (bad) adc in pop ss in adc jg std repz jbe imul pop xchg add fnsave adcl sbb add mov pusha test jo cmp jae mov mov insl xchg je mov inc scas push sbb (bad) out or adc sbbl data16 pop repnz sahf aas xchg push dec adc push fdivrs je sub cmp jns stos jp (bad) lcall or cmp mov xor mov push std adc xchg push pop mov mov nop cmp adc or adc ret pop push pop and daa negb sbb pop nop mov repnz call xor dec or adc imul adc mov leave push jno stc sbb aad xor fs pop pop bound pop sbb in shlb fldenv push mov adc cmp push xlat cmpsl xchg cli xchg or (bad) cmp shlb adc (bad) fnstcw jl adc inc fisttpl xor mov cmc xchg push mov adc push fcmovb add out lock jo movsl adc iret (bad) aam inc repz jg adc (bad) repz int3 hlt mov adc enter jbe inc adc cmc dec fs cs rcll jecxz adc push xlat ljmp out inc sahf inc jmp rcr test imul ja sbb adc (bad) push gs mov pop insb push jmp aad sbb nop pop sti adc shll dec jns je mov bound mov push dec out loope repz dec test (bad) xchg xor add lods sbb fnstcw sub adc inc jb fs mov or lcall (bad) sub push cld push pop adc mov pop mov int3 stos jp cvtps2pi dec pop jge adc push nop and ljmp sub aam cmp fmull adc jns fcomip xbegin mov push push jle mov lahf and inc mov adc xor adc pop test or fadds push mov sub aas push adc fs pop push in mov (bad) mov push jge sbb sbb inc dec cld and jle ficoml mov jmp popa xchg hlt fstps out shrb sub aas lods pop mov adc add sbb sub add mov je xor push or mov scas push jns push push (bad) and femms push mov push mov xchg adc push mov xor scas lret xor jge sbb fisttp hlt test maskmovq mull jmp xchg add and insb inc or jle insl sbb mov jp xlat jno pop jl xor rcrl daa add jnp cmc cmp repz out call adc int adc mov adc push lret mov inc data16 jae (bad) sub int3 push out jnp in adc cli std andl lret adc fisubrl lret and push lds adc add adc cmp ljmp add add jg adc (bad) sub repz lret push outsb sub ds jne popa aam adc stos xchg mov rolb pop inc pushf dec pop test adc mov xor and stos repnz mov push mov adc dec or inc mov popa or xor xlat out add hlt mov repz and or or sub push (bad) mov jg repz push js push aas outsb xor dec jmp jmp loopne cmp int popl hlt pop adc std xchg ret mov sbb repnz insl add iret pop in adc test call pop loope (bad) mov icebp ficom or lcall dec jo pop mov outsl adc mov in mov add movlps adc adc mov or fs jge adc fadds shll nop int sti dec adc cmpsb out notb mov shl add mov jo lcall mov push push leave sti or mov xor pop imul xchg repnz inc loopne aam loope inc adc test xchg lahf push dec pop add mov out mov jb mov push mov mov rcrl sahf fsubrs sub jne push cmp adc stc hlt cmp jl out movsl and jae inc push (bad) ljmp and or (bad) and inc clc or aam out repz icebp fabs lea push jno adc adc jge rorl sbb pop dec xor push mov (bad) (bad) or fisubr aaa push xchg ds xor xlat out adc stc fwait sub (bad) adc dec call dec adc negb xchg mov adc dec neg loop test shrb outsb xchg adc jge pop adc fwait inc enter inc adc sbb adc daa addr16 notl (bad) repnz cltd fistl dec cwtl adc mov xchg orl mov push jnp rcrb jg rorb fiadd push pop fnop adc mov sub out push or imul adc or dec lcall cmp das adc aas adc cltd adc les add enter pop iret xor ret adc cmpl pop dec add adc movsl ffree sti iret js jnp hlt inc push data16 icebp adc in jge or and push pop frstor pop mov jo rorb cmp push (bad) jnp andb ret cmp adc or dec aam push add repz ret outsb jb sbb xor fistl das jp push pop fsubrs mov xchg frstor push sbb out aaa jne cmp adc imul jb xor adc adc int3 or std pop xor mov pusha repnz sbb (bad) push stos push adc cmc xor aaa fimul iret mov pop jbe mov fcmovne jne,pn sbb pop scas fnstcw adc repz sbb dec and sarb xor mov test xchg movlps loopne pusha imul pop and mull or adc roll or pop adc pop insb lahf add out (bad) xchg lret cmp adc (bad) repnz addl fldt (bad) jecxz inc mov js sub movsl and cmovl adc xor push jnp dec int lods (bad) aam sbb data16 lcall push add mov inc adc jns mov mov fisttpl dec adc adc imul xor jle icebp add lea mov mov ljmp adc xchg xlat add ss adc test and add adc sbb inc arpl xor xor mov pop jg or add cmp mov arpl push mov sbb cmp mov cmp pop adc sbb repz or jg gs (bad) mov inc add mov sub outsb daa and enter adc pushf (bad) sbb (bad) loop repnz mov movsb stos adc ss leave aaa out (bad) mov mov cs push xchg mov push push xor rorl mov icebp push adc adc pop add fdivrs adc out dec push test testb mov push (bad) mov (bad) rol mov int and in aad adc das faddl or les xor mov push ret out js repz stc adc mov repz pushl loope adc push cmp xchg (bad) stc pop scas cld stos (bad) hlt adc add cmpsl mov pop adc lods decl sub cmp dec adc test or mov cmc dec aad cmpsb pop mov mov gs sgdtl mov stos icebp mov cmpsb adc push and mov mov adc dec inc sahf imul pop jp je das mov inc cmpl pop mov xchg fdiv adc int3 into jle stc push lods rorl push dec adc xchg ljmp jmp imul and adc js gs clc and xor not rcll out xchg xchg push out loope rcrl xor clc (bad) (bad) push push mov fwait je sbb sahf jae lret or adc lret dec jnp mov repz xor pop fdivl jp loopne addl adc (bad) mov sbb mov mov add cmp adc imul or lods mov je sahf push repz pop mov adc stc dec fs push lods xor lcall sub push pushf xor paddd inc adc cmp sbb (bad) adc aad sbb popf xchg xor mov aaa repnz lea pop jl xor jns pop xchg add mov mov pop and test in mov iret cmpsl loop mov and pop mov test pop and pop adc aad xchg popa mov sbb mov xchg inc cli sbb adc loopne arpl adc stc dec pop mov jle (bad) icebp adc cmp (bad) adc and out mov push jne stc js int3 mov lods inc pop inc adc pushf xchg xor std adc icebp xchg mov iret xor and stos out hlt adc adc insl add adc ret aaa js sub pusha add ss adc in jle out sbb repz hlt rcrl sub push popa and nop movsb mov push xor adc sti ror inc jp mov jle jno fsts jne mov add cmp sti push or dec adc test and xchg std xor lds dec add aam rcll mov movsb mov push cmp pop dec retw and mov mov repz (bad) push jmp add pop repz xorl mov sub gs data16 sbb push dec cmpsl loope aad mov mov add in xchg ficoml or push leave rcrl adc push pop clc cltd aam or out iret ret mov rcll push sub es pop jb ficomp lret jo test loope aas ja aam sbb divb push dec adc sahf hlt push xor decl lock xor push or addb test (bad) call sub mov adc jb xor sub mov mov push ret adc decl ja add ror in adc inc jge imul pop pop icebp fisubrl fmull outsb fwait aam lcall lret add pusha pslld in shlb mov das adc sbb call into mov adc pop dec pop cmp push mov and xor xchg (bad) icebp rcll insb aam push xchg stc mov mov mov lock imul rorb xor ja loope adc decb pop rolb mull ja adc int mov (bad) xchg call fsts in jecxz (bad) pop jp rep xor push data16 or dec repz sbb inc (bad) test xor (bad) sahf mov out push repnz mov std loopne adc sbb mov sarl jns adc movsl imul icebp adc push (bad) std inc push das popa adc ret or xlat jns or jge call adc loope inc adc imul and fisubl dec call push das push mov sub nop mov or xchg popa or mov xor lock adc xchg enter xchg pusha sbb (bad) xchg ljmp (bad) jbe out xchg adc data16 adc jns bound pushf and fcoml std xor and cmp adc sbb adc xchg and aam cmpsl inc pop mov sbb adc push xchg jbe jb or pop push ret jmp pushf aam mov and andl jecxz xor mov adc (bad) or mov adc jecxz and stc notl daa aam add sub mov nop and push cli sahf dec add ret loop mov sub inc decl pop dec in mov and adc cld scas lock adc popa iret and mov xor (bad) pop ficom adc int rclb loope testl sti and or adc sub sbb out adc push push imul stc dec xlat aam (bad) xchg push clc push jmp pop pop mov pop sub adc pop xor adc or daa mov mov inc add dec clc lret repnz inc add test push ficoml addl jne cmpsb mov push mov add outsl cmp mov ds sub adc mov dec mov mov stos mov out adcl adc imul adc pop xchg outsl mov lret adc es ret adc dec (bad) or aas pop sub jge js,pt lds rclb inc push sub mov or fild adc or mov mov je aad icebp pop pop repz loope cmpsl or gs xchg test nop or cs (bad) xor fcomi xchg mov cmp xor adc inc in sbb add (bad) and xor xor aaa mov adc xchg iret adc push popf imul adc imul jne loop pop or das (bad) addr16 lods sti aad cmovl movsb jbe hlt add lahf stos add subl mov loop jecxz imul mov jnp adc stos xor repz jg adc js push in pop push cmp notl notb cld mov xchg cmpsl cli push inc adc fcompp push aas dec les fs ret repz or fsts jle aaa bound repz xchg fadds pop adc mov (bad) sbb push jbe stc cmc mov jmp inc cld add pushf or gs inc adc icebp adc jae cmp daa cmp add fs loope shl mov sbb jae jge add fnstenv out ret adc mov inc cmp dec mov cmp adc jae out cwtl lods push rcrb stos sub sub mov (bad) mov cs add sbb xor cli mov out aad shrb push in add imul js adc mov loop fcmovne adc mov push loope push cltd test cmp inc dec in xchg fldcw cmp jae or adc lea add adc xchg pushf call adc sub add push sbb mov (bad) adc push imulb pushf enter adc insb movsb scas jne adc xchg cmpsl sub adc add pop pop adc enter cltd pop iret jbe not into mov xchg adc lahf gs push pop mov or (bad) roll scas pop mov inc sub mov sbb add (bad) cmp inc xchg xchg adc pushf mov nop sbb repz cmp sub out sub adc pushf icebp or cmp adc adc pop iret sub and sbb add jno add pushf xor mov push movl sarl jge mov push sbb or scas dec cmp sbb adc mov add js stos push pop movsl xor xchg stos inc mov adc dec loop ja jns mov push fldcw into int push jmp lcall jmp pop or in dec stos aam push adc cmp lret pop xor sahf lods mov icebp inc adc dec pop mov in fsubs cmp and dec (bad) adc xchg inc out sbb fcom repz sbb dec and enter jno iret (bad) sbb fbstp test repz imul adc test push pop jbe or repz ja jmp (bad) mov maskmovq notl cmovae xor mov add mov repz cli in mov pop mov mov in adc xchg stos loopne sbb fwait mov mov adc xchg nop mov mov push push mov inc xchg xchg adc je mov stc jmp adc lods xchg in or hlt and sbb icebp push adc pop dec adc cmp (bad) jb sbb add in adc lea xchg fistl (bad) (bad) cwtl fcoms ret jecxz out popa adc push (bad) adc (bad) test push mov mov fnstsw sub xor nop inc lcall add jnp sub adc lahf mov adc shll jmp cld dec repz sub or inc add jns cmp or adc mov scas mov ds jg adc sbb jne andl push (bad) mov ror int xor outsl loopne jb xor neg adc out rcll cwtl push movsb fsubr cmp hlt ja cs mov push xor std mov in sbb jg aas push das sbb cmpsb sub insl xor and adc mov xor movsl (bad) fidivl pop inc add aad (bad) in dec repnz lea nop shrb mov adc dec popf dec adc mov clc daa cmp gs mull adc lcall xchg jne sub movsb or mov and xor mov mov add insb imul je repnz call jae xor mov mov mov icebp lret shrb pop aam pop or jle repz sbbl add fldl inc adc leave adc inc push mov push sti add xchg adc cltd cli aaa add or xchg repz (bad) or inc adc outsb in xor and imul lcall sahf mov cmp loope adc jno ja or arpl sbb adc push cltd repnz ss adc xchg xor negl jmp jmp ljmp pushf xor ss adc stos xchg push xchg in pop cmp fldenv adc (bad) adc and sub or adc lret ja lods add jne xchg mov pusha jmp adc mov imul adc and stc adc push cmp push cltd shrl je ret pop movzbl mov add les or lods pop (bad) push mov lds mov outsb push scas adc cs (bad) mov in pop add xchg (bad) addr16 mov in or ret push icebp jl adc (bad) lahf sbb adc idiv add stos add loop into out pop mov mov pop mov cmc hlt add ds pop or xor adc pop (bad) out dec mov adc (bad) fdivp add movsl inc nopl (bad) mov add adc push push fwait loopne lcall mov xor adc push add pop inc adc pop test into jecxz int3 hlt std rcr push lea pop adc stos enter cmp adc cmpsl pop movsl xor mov jbe dec lret loop xchg test sub dec jb pop adcl fs lret dec jmp aam test xchg mov ljmp cmp les rolb xor or popa scas add jo je repz sahf push jp out stos test mov pop xchg das daa mov pop mov and or jae hlt mov add ret rorb je pushf xchg dec jecxz daa sbb xor jbe push scas adc jecxz xchg mov cmp dec ficoml mov xor adc out shl lret adc data16 xchg lea push call mov lock xchg dec mov mov adc cmp mov push xchg jmp xor leave out adc (bad) icebp lahf movsb scas das pushf adc xor mov add cmp mov pop stos and or adc jo mov xor mov and and adc pop push add lret sahf les adc enter sti pop divb inc ret mov test mov (bad) and sub in (bad) test xorb xor push je inc int sub int3 stos test pop or add mov cmpsl push jno mov cmp addl push pop adc jmp or or pop dec mov add mov adc push adc adc mov push repz adc lret aad jmp mov jbe jge (bad) lret push cmp daa bndstx shl mov or sbb das mov lds add pop or jo adc (bad) cli pop popa mov mov inc add leave scas jb add lret xchg mov inc adcl dec insl (bad) jne clc cmpsl sub xchg jns (bad) movsl inc jo push outsl cs mov hlt (bad) out xor popa cwtl or les nop int insl mov jne aaa cmp test adc popf or testb add xchg lahf aas ja mov xor lock out adc mov icebp xor jp jb stc lods xchg jmp shr incl aas sbb ja enter aaa xchg pushf div jmp repnz add adc out pop or ret ss jmp cmp mov mov fdivl (bad) adc adc mov out icebp jp mov gs imul mov das movsb jbe or push int3 out add push int (bad) test arpl out sti adc repz lret jp fwait rorb xor (bad) inc push sarb adc je push adc cli stc loope xchg repz mov mov clc xorl sub es cmc adc adc pop out and cld sbb ja sti adc inc jns sbb mov xchg jbe xor int3 jmp ljmp sahf dec ficoml mov or jle xor pop adc adc or fcoml imul fldt mov lds xor sarb sbb pop adc fcomip or rorb mulb mov jg in adc in aam or push or adc mov insb and mov rclb adc mov or lahf push jae adc imul xor mov (bad) adc sarb push inc xchg sahf jp and out (bad) adc jbe pop adc xchg jne outsb dec insb adc push sub jno mov adc mov sbb xor and adc push jb in xor (bad) adc loop add add aas sub adc mov mov das sbb inc shlb test pop cmp adc les push add sbb or jg sub loopne add jbe lcall adc or adc sbb push mov or in pop sbb iret mov jno loop lret mov test jae outsb push inc stos add and aas bnd jge pop ret sub xchg pop xor mov loope add pop adc push sbb jb mov insl or or int xor mov or xchg xlat ret adc push stos bound repz lds mov aaa mov adc sbb dec or xchg dec xchg cmp pextrw adc popf xchg movsl out fimul adc or hlt arpl in cmovg cmpb push xor xlat cmp sbb test pop xor data16 jp (bad) xor lods add pop (bad) xor and cmc jb mov lods push loope and nop mov sbbl jae xchg xor adc cltd or stc int jmp enter xorb adc (bad) mov push shlb dec pop adc fistpl mov add xchg pop pop jle pushf jp adc add adc out outsl push repnz popa fsubl shr xchg push or out sub sub int3 js (bad) (bad) jae lret mov aas and adc cmp push add xor xchg shufps imul jae mov sbb inc push jle mov ret xorb decl pop mov or movsb movsl adc mov dec sub mov rep aad or es loop ja add adc cmp test sar pmaddwd xchg scas or adc (bad) aad xor out repnz mov adc (bad) add adc daa xchg lock xor mov adc leave sbb dec popf xchg sbb adc lods jp addr16 xchg adc inc cmp push cld push adc xchg pusha push mov fsts add hlt ljmp adc imul cmp jmp daa outsb pop out mov adc add ret int3 push adc jl stos adc loopne sub scas pop xchg cli adc xchg mov adc popa xchg fwait cltd cmp mov paddd aad (bad) jns xor xchg in call or mov cmpsl push sbb cmc aad inc mov fwait repz sbb pop lret fdivrl lods push lds adc sub mov xlat int mov adc aad aaa (bad) adc mov cld inc jns cwtl adc jg out adc add push pop xor push sbb test add mov repnz leave dec add insl inc mov das sub push xchg adc out add pop cld add mov sub loope movsl mov mov sarl call sub stos test outsb adc out dec push push fdivrs push inc push adc negb std mov xchg (bad) dec in pop push jne jbe add mov mov insb xor mov pop dec insl outsb pmuludq or adc jns addl stc xchg jne (bad) jecxz jge push cmc pusha adc rorl pop sahf adc leave jecxz (bad) jnp or iret pop aaa jle push (bad) rolb sbb or dec inc adc gs adc or lret test jmp xlat mov or adc outsb add jle adc mov adc frstor adc in insb xchg ffree cmp mov sbb adc jg outsl cmovge adc gs mov mov ds (bad) ljmp call and je fstps fstl (bad) push lods jo ret lret scas ret movq repnz lea movsb adc or cmc pop rcrb (bad) incl push (bad) data16 pop mov cltd cmp xchg jle adc cmc add pushf mov jae mov xchg aam (bad) sub test setae add std std dec sarb aas and cmp loope (bad) mov and into adc jne in sub pop in insl xchg out cmp es cmp xchg or lea jmp insb jno in dec (bad) inc mov (bad) adc jecxz jno rorl lds pop clc fmuls adc jno mov loope sbb notb jbe orb cli cmp jmp repz or dec mov jae mov push lret jo push xchg cmpl dec cmp cli (bad) lds or adc sahf ret xchg jmp xor adc imul fs xor lea dec add pop push scas jmp dec outsb scas cmp (bad) push add sub mov (bad) xor aas test dec ret and xchg add cli sub lods je push out roll dec mov dec (bad) sub rolb xor push push iret fimul fcmove push cmp repz mov out push into mov call mov les jo and jecxz push or call xor inc mov or iret lock adc mov aas pop xchg cwtl pop jno mov in push stos ret rorb das lret cld inc movsb adc rorb jb or test nop mov lods das sbb pop popa inc addb or jecxz adc jle dec adc les xchg and out fcoml adc decl adc into or (bad) xor dec mull adc pop sahf test adc sbb dec add adc addl mov cli push adc notl rcrl cmc (bad) jle adc push mov insl dec lret sbb or sbb ret mov int3 in sbb cmp lret jbe adc cltd mov lock mov xchg adc arpl faddl loop outsl sbb fiadd push cmpsb les (bad) lcall int3 rcrb stc or ljmp mov repnz addr16 arpl movsb mov mov fistl ds lea xor mov loop fldcw cmpsl push (bad) adc cmp jmp rolb push cmpsb pop inc and xor fxch loop mov insb shll sbb or mov lea sub fidiv loopne sbb adc xor popl jb and mov je adc in dec xor fs ljmp lcall sbb jne clc xor cs or push inc dec cmc push sbb sbb xor add mov sub mov jno int sahf jge repz movd popl movsl (bad) adc popa outsb pop jns scas jnp adc jge lea xchg mov xor out xchg mov adc xchg cmc lods pop pop adc add leave or test jmp std jns adc lret outsl xchg lcall scas in sbb jmp lock mov xchg cmp cmp push outsl out inc mov cmc scas lock adc jne nop fucom fs mov or cmp dec jns jmp mov inc or dec cld lock push xchg and dec rcrb inc pop cmpsb mov (bad) mov mov dec push repz jno push cltd addl cwtl or or outsl stos push adc ds repnz lods xor jl push or enter fidivrl cmp mov push mov pop sub ss sub mov inc ljmp jle repnz fcmovne inc pop pop lods xchg sbb sbb xchg aas popf outsb adc lods (bad) xor shll cmpsb mov out sub stos or and psubd stos mov loop adc mov jge sub and mov pusha add in in push repz xor xor or aas adc ret and push movsl mov shl xorl pop adc cltd sahf sub insb aam pop inc cmp mov repz (bad) mov push repz cmp pop aam push popf adc push lods push adc dec and fcoms jns sub push adc cmp pop test in pusha jg xchg mov jns insl bnd arpl mulb inc test pop dec adc push cwtl pop add xchg ret lds (bad) mov push mov push or pop xchg in adc mov dec sbb mov mov pop (bad) adc jecxz fwait adc jge scas frstor in jno imul sub mov lahf lods adc (bad) repz jne movsl outsl aam insl xlat in cmp or (bad) je adc clc adc out lock mov int mov repnz inc or adc inc xchg cltd ja test adc stos aad add data16 jl xchg cmpsb (bad) mov jecxz sbb or xchg mov jne adc xchg iret popf xchg sbb popa je cmpsl cltd mov stos jae mov adc dec mov push orb movsb xchg adc push pop jnp adc adc mov pop inc rolb jl mov xchg and js adc mov stos test mov pop xchg in adc add jmp or test mov rclb pop sbb pop mov mov rcl mov sbb xlat adc loopne mov fidivr mov pop push in mov pop or sti xchg add cmp lods (bad) pop adc and add adc push or mov push cwtl jae adc or enter pop adcl frndint pop push pop jg push int3 fisttpl test fcoms shrb jnp sub scas add sahf es and xorl clc in (bad) adc mov subl sub mov cmp add jo xchg iret cmpb inc sbb xchg repnz jb and int3 inc (bad) mov sub loopne inc adc hlt xor icebp or scas adc pop mov adc jb jecxz jns js test dec cli and push fwait enter in out adc xchg sub adc repz xchg mov sub sbb push add adc dec aad adc mov inc jecxz pop leave aaa sbb or ficoml fbld mov adc out mov mov lods scas mov cmpsl adc (bad) adc mov push nop push imul jae adc test nop les jmp adc add or (bad) xor cld jo adc out icebp in test push rclb test or fildl fcoml repz negb adc push dec add inc in js mov fwait mov cmp sub adc pop nop and add fidivr adc adc pop fadds push rcr xchg inc sbb stc adc repz jle dec mov adc jge,pt ja js xor and pop mov or data16 xlat jmp adc push cmp (bad) je mov pop mov lcall int3 cmp sub push mov xlat xor loop xor add adc lds (bad) adc sub into (bad) mov out adc sti mov mov jge adc orl icebp repnz adc mov repz mov in lock mov adc cld loop scas inc adc push call xchg and push lcall xor cmp mov sub pop jbe dec mov lcall mov fs sub jp mov fwait es mov mov repnz xor xor adc jl add adc cmpl adc pusha gs mov xor stos dec pop jne adc jo movsb or repz inc mov xchg adc sbb fidivl pop pop push sub or mov lcall test jecxz adc inc adc and sub adc fcmovu stos mov inc mov aaa or add and std ret adc stc pop xchg out pusha sbbl fisubr icebp cmpsl sbb or xchg or dec shrb (bad) push xor pusha pop and adc aaa sub into adc adc lock mov mov jbe pop ljmp imul add adc cmpl xchg aas (bad) mov add sbb hlt dec mov adc inc stos popf aam dec arpl sbb fistpl ds js lods sbb adc call das cld nop mov pop in lret repz cmpsl mov xchg jb or sbb roll jns repnz insb or scas pop adc fs (bad) in and fstp cmp mov add pop jbe jge pop jg adc cmp xlat loope cli adc xlat mov stos jle nop add movsb adc cld push loopne mov adc inc jmp pop aas rcl loope add (bad) and repz gs es sbb sbb xor lods pop xor stos adc xchg fldenv adc xor (bad) std add nop gs lret or cwtl xor clc test test lret push adc popf inc mov aam (bad) adc push push (bad) add adc lcall loopne jae inc add pop mov into or sbb ret push xor fist adcb cld pop and int3 and sbb adc xor loop or cmpsl jge or mov adc outsb dec dec int3 pop xchg push loop clc or xor or in (bad) jl (bad) jnp xchg stc test sub mov inc and adc loope mov adc xchg jns sub (bad) mov mov or jb xor xor mov cmpsl xor xchg rolb sti or xchg sbb or adc in clc add repnz mov mov jmp adc cmc and rcl nop add pop inc std sub test fwait jnp (bad) jge adc cmp ret in lock mov push sub xchg fcmovne pop mov or mov cmpb fidivr in pop xor js and out (bad) cltd je mov add adc jbe (bad) mov cmp lock das jmp xchg pop bound dec bswap sarl pop mov (bad) adc xor mov adc ficoml inc cmp aam dec ljmp adc pusha (bad) jmp or mov xchg push xor mov mov adc jl js daa ljmp add mov mov pop xor dec and lds idivb adc adc in adc mov xchg adc dec push mov and loop mov mov sbb push ret pop mov sub xchg push add icebp mov xor aad adc xlat sahf daa push adc repnz loop xor adcb clc sub sahf cli add stc adc cld (bad) xchg adc movsb pusha mov sbb cld (bad) fldl les or mov add iret fiaddl adc adc mov add ret mov out sub incl adc xor lods adc cmc loopne (bad) push and insb mov mov (bad) jne or imul iret mov xchg aad pop mov sbb push inc adc mov rcll shrb rol les or mov jmp std adc pop dec add dec adc lea add addr16 call inc mov inc adc jmp rol test stc adc mov inc pusha adc pop ficompl lret call popa or fwait pop push dec xchg mov mov or fisubrl dec pop int sbb pop mov adc inc rorb add in enter mov adc (bad) mov adc sub push negb dec repnz enter mov (bad) popf jg insb fmul je sbb loopne xchg js sbb test mov jge add adc clc pop pop in ss adc mov adc xor push adc pop daa cmp sbb movb ret fisubl int3 xor sub adc insl pop addr16 dec cmp push jecxz lahf push push aas insl (bad) sbb pop sbb bound mov add push add scas daa mov xchg fsubl btr ror cmp push mov add push outsb loope xor or mov js lea push cmp cmpsb push adc and aas test xor loopne dec cmp xchg cmp cld inc pusha rclb mov jl lods lcall pusha mov movsb je adc push sar add sbb add cmp mov adc sbb scas or lods clc ss sub or (bad) adc inc and fnstcw cltd ret add movl push adc stos mov push call rolb add test mov rcll je push xorl aas mov (bad) out int aad mov adc jl jb mov ret lcall adc movsl dec rcll jno or adc lds movsl jne jns xchg ret test adc jno mov mov xor cmpsb out adc dec cmp push cmp jne mov fwait sbb lock leave aam or cmp xor in adc (bad) dec mov adc addr16 pop mov push xchg or loopne (bad) xchg hlt xor mov fs add clc mov push jge add int3 xlat jmp pop cmpsb fidiv add cwtl fisubl push ljmp xor nop jae add js mov leave pop in scas push aad mov sub add adc sbb adc pop out push push sbb jbe insb adc adc imul push xor ds mov in jmp loope in push cmpsl push mov pop add xchg mov mov (bad) rcrb adc fucomip fcmovnbe stc sbb repz xor pushf push rorb add mov lea or pop pusha pop xor jmp add in xchg repnz scas xlat adc push gs nop add add stos mov pop cmc out inc add sbb in adc std sub cltd dec clc adc test mov xchg xchg std jl sub inc mov mov mov prefetchw lcall je mov dec jnp loop les jge and adc js sbb xlat fs jecxz adc in pop (bad) movsl mov fcoml xor dec xor jbe rcrb lods xchg and hlt push shll mov dec jmp popf sbb int fs ljmp mov test das xchg jns sub add xor adc jge mov inc insb inc iret cltd and fcoml (bad) fldcw outsb inc seta adc arpl and xchg adc cmp jp adc dec lods adc xchg push imul or xor adc xor fsubs mov cmp mov jnp rsqrtps mov mov pop adc dec je xlat jmp fcoms lcall pop adc sbb xchg sbb dec adc aaa lea lret daa sbb pop jns adc jecxz mov mov mov out adc lods pop out mov hlt ds rcll mov call adc arpl hlt pop sub sbb rcll push xor out sbb sti sub or in mov sbb or out adc lock jno mov adc inc sub adc dec aas dec inc push cmp adc hlt mov adc dec jge (bad) lret adc pop or adc std sbb aaa pop adc mov cmp rcll movsl aam clc adc sbb xor xchg mov push mov lds or dec das inc or mov lods push test xchg insl fsubrl xor je pop lea cmp mov xor cltd mov or or je mov orb popa loop imul add mov repz sbb cli adc sub adc and adc fmulp (bad) sbb xor outsb adc mov out mov icebp js add xchg lds jl stos test insb mov mov mov mov push fbstp loopne cmpl nop jae cmpb adc call sub stc adc xor push out adc mov dec xchg jno test add and imul out loope adc xor lret in xlat repz or stos mov adc dec dec rclb leave sub xchg jae adc loop daa fdivrs adc cwtl (bad) jo push lcall test and nop add jmp cmp cwtl mov push ret sub sahf hlt cmp and fmuls add popf cwtl es je pop sti xchg lcall sbb data16 pusha mov dec mov adc fsts pop mov push ljmp loop pusha scas cmp das push mov or dec adc mov inc mov stos adc dec fldt (bad) inc xor xlat adc std jecxz ljmp adc mov fsts mov sub lret cwtl xor mov test adc dec jp adc fstl (bad) in mov jbe mov inc js dec adc icebp dec outsl xchg rcrl xor dec mov adc enter sbb add pop push adc or adc mov imul movsl and in loopne aaa adcl in or add or jbe mov (bad) pop imul jne daa jecxz or int3 (bad) je or cmp xor adc dec aas cmp mov imul insl inc pushf xorl outsb mov js (bad) xor adc fnstenv insb cmp aam repnz movsl cwtl sar adc inc xchg bound mov out mov scas das pop ret adc cmp xchg icebp adc or outsb add fsubrs loopne fwait push pop pusha rclb rorb movsb aad pop or jno jge inc mov int3 adc lahf add mov rolb in stc xchg inc and jle adc xchg push lock xchg je pop cmp packuswb pop dec cld pop fdivrl cmp (bad) ds jne mov inc push jmp test adc cmc dec fcmovnbe sub add add data16 repz scas adcl mov or add adc pop mov les icebp and adc nop cmp mov add fnsave fldcw aaa test dec popf and mov sbb or jae inc leave dec sbb mov aad notb mov andl mov fstl popf mov lds adc fidivl adc (bad) mov leave mov cmc js das mov xchg int test pop pop addr16 sbb mov scas in jmp pushf sbb adc enter insl adc adc pusha inc jecxz fsts cmc icebp xchg jae lret (bad) xor (bad) dec cwtl pop iret sbb xchg shrb ljmp xor add adc cmp mov stos leave insb (bad) mov xchg push add jno adc insb add jnp pushl pop arpl ja repz rdmsr dec dec cmp mov adc sti into adc adc (bad) lock sbb cwtl movb test loopne mov adc movsl inc sbb add adc push push daa adc imul or (bad) aaa das cltd xchg int pop dec adc xor out (bad) mov cs add mov and or sbb push js lock divb test into jae add add inc mov cltd or femms in icebp inc aaa loop or mov popl and mov add jg cmpsl sub notb xchg push xor add dec inc jbe xor rcr pop pop xlat outsb dec adc sbb dec cmp jl add cmp sub repz idiv aam push adc jg cmpsb xor mov or add adc adc push stos lcall mov jae dec movsb pop popf sti mov sbb lods test fsubl adc xor sbb inc arpl sub add add imul push mov out push or sti ljmp sti pushf inc insb mov adc fdivl (bad) pop pop das daa adc and xor sub dec jmp inc sub movsl dec bound out jno push adc xchg loope dec out adc mov je ficomp mov fcomi adc fldenv sbb xor inc and dec or (bad) cmp add int3 adc pop xchg xlat ss mov xor call add ljmp pop pop stos hlt rclw lcall sbb push mov mov cmp mov pop pop nop pop add mov xlat gs inc xchg out mov enter loopne into js adc xchg (bad) or adc insl lea jle adc sub mov xlat xor xor fidivr sarl int pop xor rorl nop jecxz jbe xor scas aam sbb pop dec xchg adc pushf pop adc adc call repz or and pop (bad) cwtl cmp rcll sub push mov pop out jne clc adc jecxz adc lds add mov sub sub xor sbb lret mov sub aas dec pop mov inc arpl mov add add (bad) sbb dec mov adc push insb xor mov push mov dec nop add sbb cld push sub repz adc jecxz aaa sub int adc in cmp or push lret fs push sbb and pop add rcll cmp rol inc aam pop fs outsb in int cld mov popf pop add xchg dec push (bad) sarb sub cmp sub sbb sub (bad) (bad) sbb mov jmp stos aam shlb cmpsl data16 push pop inc (bad) pop xchg adc stos cmp adc test dec daa jnp sub xor (bad) out rclb inc xor jbe mov daa xchg sub aas les int3 jp mov adc mov rolb mov aaa adc popf repnz adc sub repnz push and leave inc dec inc jbe pop lret and adc pop std test mov cmc rcrb xor fwait je insb lock imul or mov inc ret cs cli adc xor adc pop mov (bad) jmp icebp repnz sarl subps leave pop mov mov mov data16 add sub leave fwait mov out xor int3 xor aad decb push pop cmpsl mov je pop int fadds add xor out lods sbb stos rcr cmp incl je mov mov (bad) stc push rcrb mov icebp jmp adc (bad) mov mov jo aas imul sub sub cs and mov jecxz cmpsl pop push inc add pop aam lret inc sbb xchg outsl adc jo (bad) repz dec out lcall hlt push ja out xchg jp add sub push jno shl xchg iret mov sub std or data16 nop orl test aaa adc in mov adc mov nop push in fimul clc insb pop sbb loope add jnp pusha inc push aad insb and mov jae inc mov jmp out fwait push loope cmp mov pop dec mov push mov or pop mov imul dec int3 xor addb pop or adc adcl add mov pop aaa push sbb insb push inc ret pop pop adc scas cmp push adc adc popa adc data16 in mov jae adc mov jmp push mov scas pop mov mov mov divb les cmp adc mov and ljmp pop test adc cli insb rclb std jmp adc jnp pop adc inc ds cwtl in sbb mov in das or test jg lahf jnp jne mov mov stos adc movsb or adc subl fistp enter add push addr16 adc cwtl pop cld ljmp mov insl std (bad) fwait rorl shrb add dec gs sarb clc outsb cltd nop inc jno pop xchg lcall fsubs pop js xor or push mov in sub mov mov sub mov adc test ret adcl inc push dec mov (bad) sbb push (bad) in jae test sbb mov mov adc (bad) and repz fadds (bad) push mov incb cmpsl and iret xor idivb pusha and ret and xor push xchg outsb (bad) jbe adc dec in inc add ss jmp inc mov loopne int3 pop pop ja lods pop adc lret add and adc mov in fdivp push hlt ja daa push adc push std xlat push (bad) mov jge fdivrs sahf mov hlt adc push sub adc (bad) jmp fldt push mov jecxz int cmp sbb add out mov mov or pop sbb xor push push daa ret bound sub loop pop inc add dec lds pop mov adc hlt push add and icebp xor cmc sti pop movsl movd jno inc mov inc outsl pop pop lret lods xchg mov add fdivrl push aas (bad) mov add fmuls dec or jne sahf loope fwait add scas enter push xchg andl push jmp sbb adc sub adc push inc adc and (bad) cmc mov sarb jg pop add out ljmp std adc iret outsl insb push mov xlat mov push lret scas sbb adc cltd (bad) aad nop leave add xorl data16 stos jmp xchg xor std ss mov sub sub cwtl je jg ds mov clc in adc imul inc bound sbb or adc pop xchg and repz cld mov out int repz imul push rorl mov es loope fucomip jno adc cmp xchg ss (bad) sti or dec add adc insb cmp mov adc inc sbb lds mov mov imul mov ficompl cmp decl mov adc data16 insb cld inc (bad) dec adc mov mov fadds or dec mov out jecxz sahf repz fildll arpl (bad) pop pop ja mulb or jmp clc adc pop std stos inc xchg push adc popf hlt pop push fs push add mov dec cld ss shrl jae fbld scas out lret mov imul cmp cmp adc add repz mov les push rcrb test cmp rol inc push add push popa (bad) mov mov sbb cli adc jecxz into adc mov adc fadds hlt cmpsl cmp xor aas sarb or push adc pop jns (bad) das (bad) lahf adc inc mov in adc push xchg inc lods cmp mov scas pop enter hlt jb int3 repz stos dec in jmp sub jno cmp cmp arpl testl inc ljmp dec add or lea ja xor lret test adc cmp adc (bad) in pop fistl loope adc mov or mov addps in movsl insl mov fwait in inc xchg mov pop out mov xor mull jmp insb bound outsb mov (bad) xor sub mov (bad) mov daa add call mov rolb ds xor jae rcll adc adc ss jecxz or and imul pop aaa pop fistl xchg dec sbb push dec out adc xchg (bad) insb push add ret and mov (bad) push inc sarb and push std int3 inc adc cli push cmp add jecxz or adcl data16 inc add repnz popa jecxz fldcw adc sub push push pop pop adc mov rolb adc repz int3 add cmp pop pop inc sub cmpsl xchg mov push mov adc xchg into adc aaa dec dec push pushf add xor inc rclb ljmp pop xor add mov xchg pop repz aaa rcrl xor or dec out xor cmp mov jb sub fcmove xor and lahf gs mov daa icebp out pop jb jge xor shrb jg scas minps shr cwtl cld ret pop push xor out stos inc mov stos sub ficomp push cwtl popa insl adc push mull sub sub push adc iret push in in lea or adc jb inc pop pop fisttp adc sub xor aas leave xchg xchg jl out jb or jnp jno add pop sub arpl scas dec test push pop push add xchg sub scas add adc jb lods es test inc mov test push mov repnz xabort cmpsb cmp inc mov rcrb repz repz jns cwtl mov in adc xor push pop dec stos sbb and adc adc or cmp idiv mov and and mov pop mov push dec repz in jo sub xor dec add jne dec sub out repnz (bad) ficompl adc inc add es adc xor bound add mov stos xor mov push clc out adc push xor pop hlt adc mov fiadd icebp je pop addl xchg jne mov dec lret jp out test icebp mov fwait aad lret mov cmpsb push jb mov imul sbb addl add jmp sub lret dec sub jb mov imul add push je adc lret mov sbb and push adc inc (bad) xchg fistpl frstor ds mov cltd adc pop mov mov dec push adc subl adc lods loope scas mov jae sbb arpl push ds repz dec cli mov and or jle sarl pop and and adc pop jne adc mov loope cmp and sti ds xchg push (bad) sub repnz dec hlt and jb fsub and jns pop loop push xor test (bad) push push inc and imul pop loope out adc ljmp push aam cwtl mov stc test inc adc shlb in jno adc dec mov xor push data16 adc mov xor icebp pop xor vmovaps int je repz lret mov adc (bad) out cmp adc inc xchg push adc fnstcw sbb in jns sbb das leave repz mov mov pop stos adc inc sub sub cltd add push xchg push and adc in adc rcll adc inc inc lret lret repz cmp sub adc add adc and lods pop les add mov inc mov adc xor test pop inc mov fs sbb mov sbb adc jnp mov insl ret neg xor adc js push movsb ficom (bad) adc or bound dec loopne (bad) adc fwait xchg inc cmp (bad) adc xor js adc dec and xor (bad) scas bound xchg adc in (bad) repz sub (bad) cwtl adc push inc inc adc pop adc sti icebp mov fistpll jmp ja mov sub int mov cmp mov in add ficom adc lret mov sti cs lahf xchg adc inc inc xchg stc cmpsl adc xlat hlt mov cmp mov mov push icebp push outsl imulb sbb (bad) cmp mov cmc ret push sbb xlat adc push (bad) imul adc xor fcom aas jp sbb (bad) (bad) dec cmp jnp lret repnz loop adc push mov ror mov sbb sbb mov (bad) test stc inc enter mov xchg fiaddl test cli push les lea pop lock ss data16 xchg jnp adc pop push xor jl cmp or repz push pop and pushl mov loopne push sbb xchg or adc lahf iret xor sub pushf pop adc js (bad) dec push mov jle pop stos inc jmp sahf outsb jg mov cmp int lahf aas insl jmp cld pusha daa jne pop adc push je or test push mov repnz cld push or mull adc jns call repnz jg sbb cmp test test adc addr16 clc xchg push nop into inc (bad) xor pop ret add cmp push cmp push cli mov xor xchg sbb and mov xorl (bad) femms cmp out mov or add out inc xor ret std add or scas jmp xor pop pop xchg pop adc leave lds das or or aam adc test call adc cmp inc in mov adc pop cmp shrb mov cs adc sbb inc (bad) jo xchg pop mov fdiv adc cs div adc dec aaa jo sub repz jge jae sbb sarl push movsb imul adc aas mov adc dec mov icebp jl repnz inc aad xchg or jno push inc mov loop cmpsl mov lods xchg (bad) bnd popl stos scas xchg xor xchg ret (bad) arpl loope int enter push (bad) xchg mov daa mov das mov add or pop sbb lds iret push insb outsb out int3 test nop or add mov loope int3 sub xchg mov fnstenv add nop pop adc lock daa out lret ror mov adc js sbb fbld mov pop test and data16 dec out je xchg inc xor add sarb adc cltd sub xchg (bad) adc into adc mov pop mov outsl adc push push test bswap mov mov lock stos sbb movsl mov daa xchg cmc popf out aad or mulb repz and dec jle repz stos adc inc jnp rol jle and mov cmpsb mov call iret out inc rolb pop mov dec outsl (bad) mov mov add repnz (bad) pop xchg add outsb (bad) or add jge test and adc arpl and pop imulb xchg scas cmp leave or nop bndldx mov dec movsl lret dec stos (bad) and and inc leave fcoml cmp push add adc add and pop mov std xor xor ljmp jmp sbb or inc add xorl iret add arpl clc inc ret pushf ds popa inc pop xor icebp xor mov xor inc add in jle xor fldenv or xlat mov pop pushf out mov out outsb sbb xor fadds mov repz pop das test (bad) les and xor mov cmp or pop nop cs mov std cli insb ja xchg fisttpll lret add dec jl adc movsl pop gs sbb rcrl xchg subl test rcrl mov sti mov jg jae repz mov push sahf cmp mov jmp int cmc jo adc leave addr16 or xor in pop inc into repnz lds (bad) jb or aam add or (bad) ljmp aaa lock xor in jecxz mov stos dec adc inc rol dec mov stc xchg aaa or push sbb pop pushf adc sub and call push lods repz bound pop mov mov leave mov mov icebp pop push push femms push adc out pusha imul adc sbb xor mov (bad) fmull adc nop aas enter xor pop lret xlat dec adc sbb xor mov adc xor push add lcall outsb mov sub xlat and cwtl xchg adc fisubr mov mov jmp mov inc stc loope loop nop rcrl pop push mov mov cmpsl pop js sbb ficom ret pop cmp (bad) fiaddl and mov sub xchg cs rorb inc adc mov and push (bad) xor cld mov xor mov mov xor outsl sub scas mov lods lcall das subl adc out repz dec mov mov push mov aam lret adc inc cmp iret fimull lock push test adc into add imul adc pop fs loope out xchg pop push or dec adc loop into jb sub mov add adc out repz mov and inc and adc loop lods adc adc fnop inc and bound jns scas mov test pop push inc xchg imul add sahf aam out xchg pop xchg insl (bad) add xor cmp aaa int bound mov inc popf ficomp (bad) add inc icebp push sbb fisttpll add cmpsb adc dec hlt pusha jns adc repz aas cmp xchg cli adc sbb sub paddsb xor xlat or xchg js mov aad stc dec sub jl mov mov test sbb mov push lds xchg adc xchg mov dec adc add pop pop sbb mov inc out pop addr16 cmpsb xchg (bad) cmc in add adc jp lods pop lahf (bad) pop outsb xlat lock pop aas sub rclb adc add mov adc inc or cmpsb add mov test fbstp sub pop (bad) in out enter ljmp xchg jbe add xchg out mov and rcrb out fnsave jnp push inc aaa loopne sbb lcall outsl shl jbe mov jae jmp mov xchg push xchg scas nop (bad) or pushf mov xchg or inc push push lahf mov stc aad adc (bad) rolb add xor xor mov xor rcrl jno pop mov dec and or add add mov pop mov and (bad) pop push jo pushf adc jp rcrl adc adc cmp xor xchg rorb mov cli rcrb out sbb xchg inc mov dec add mov add xchg dec pop adc out and sub mov fstps mov inc testl cs adc data16 xchg ret sbb loopne cmp and adc cli cmp dec cwtl sub adc fsubr repz push pop xorb ja jg inc adc hlt lea lret and dec xchg sbb js sbb mov sahf cs rolb inc push sarl adc ss in sahf (bad) and and lods arpl outsb (bad) sbb rcll mov jb hlt add pop les jp sbbb lock ljmp daa pop mov inc je adc and mov (bad) mov out adc add mov aam rclb out scas or cmp adc cli cwtl pop mov leave test jbe aad xor and push adc es xchg pop pop add mov insl lahf aas inc lret adc sub pop pop adc push jl mov xchg adc nop mov push ljmp mov mov insb mov pop mov ss (bad) xchg flds adc sub pusha pop shrl mov insl je adc push hlt xchg ja adc mov jbe ljmp notl mov jge lock push pop add adc mov cmp adc mov dec cli dec inc adcl (bad) jg loopne jge adc inc dec cmp clc or (bad) jo adc enter loop mov dec sub jns adc adc pushf xor adc inc mov adc in adc xchg push mov adc lods gs xchg push adc repz sub sti popa in repz ret enter or adc in movsl andnps rcl icebp dec pushf pop scas and mov or clc inc pop mulb jp scas sbb je jg sbb pusha xor sub adcl mov cld mov leave push xchg sbb push pop pop cmpsb scas repnz pop xchg push pop adc add (bad) xor cmp arpl add and fs push (bad) frstor sbb sbb jg sbb xchg or mov test int pop sbb mov push test mov imulb les or jae iret adc add mov fsts outsb mov adc cli push pop jmp jnp (bad) decb adc push xor sbb (bad) and out adc fdivl imul clc xor std or and or lock adc xor xchg xlat mov pushf xchg adc cwtl lret adc or test mov adc daa add xchg int jl dec sahf clc adc cli inc cltd mov pop sub mov (bad) incb rcrb ds sbb gs adc push int3 mov mov sti mov fs jb aas sub pop sbb xorl repz outsl scas inc and stos aam into add push xor stos pop (bad) out ret sbb pop fcomp cli (bad) mov aaa push jecxz sbb and mov cmp das in cli xchg mov or mov push cmpsl into and loop xor cwtl repnz (bad) call fdivrs adc pop xchg and jae jns,pn push mov test mov sarb xorb cwtl push adc xor mov and sbb or dec adc imul lret ss mov and jle jno cmpsb out xchg fs lcall push mov int fwait leave jae inc sbb jge mov xor push sub adc sbb add cwtl lahf pop into iret cmp add sub adc push pop jl mov inc (bad) adc in subl jno xchg mov mov cli lahf pop cmp mov inc jne push test fxch adc shrl sbb fcmovne add xor out test adc xorl mov imulb repz fisttpll dec mov push adc ljmp or repz cmpsl (bad) xor jno,pn adc data16 iret fistp mov or sbb and imul push ret sbb mov adc inc inc nop test gs mov jnp add movsb add and divb (bad) ja je sbbl into (bad) xor adc shrb mov dec ss into add jo adc out pop sub xchg inc out (bad) enter adc idivb jle xor xor repz mov jl and push push push leave mov adc mov fwait adc test ficom mov add adc mov dec dec sub pop xchg (bad) sub sub dec js gs jns jne (bad) push insl pop push rorb mov mov out xchg sahf jne mov sub pop dec cld cmpl adc (bad) lods mov ficoml pop mov ja js cwtl aas adc mov loopne test adc pop icebp lds loop jne jae jns into and sti fcmove test stos mov adc or xor mov (bad) push xor xor out sbb insl fs out mov test fstpl (bad) ret movsl mov and cmpl loope aam pop test cmc xor mov adc test xchg or repz inc xor lock bsf cmp inc dec adc lret test jmp cmpsb lods adc add dec loope or inc in pop push call pop push push mov (bad) je adc mov aas adc fstp jo mov (bad) cmc xchg push sbb stos adc imul adc je cwtl adc push movsb inc jmp stos call loope adc push xchg mov cmpsl adc fidivl in out adc pop frstor adc test sub out aad inc adc lds push dec lods pushf pop popa mov ja sbb or mov rclb mov pop push js (bad) or leave add jge mov push hlt ljmp sbb mov push cs leave adc cmpl sarl shlb sbb shlb hlt clc call loopne (bad) adc push lea pop xlat bound cld adc cmp stc adc sbb jbe dec shlb or nop loopne mov out xor test jp dec out jne rcll sarl lds xor out (bad) (bad) xchg repz lods insl sbb mov mov xchg mov sbb mov xchg movl add call and adc cs xorb rolb rol inc add xchg scas xchg pushf adc fcoml dec pop xlat adc cmp add push out mov pop mov adc jg cs call mov dec subl mov jnp call outsl mov pushf rclb mov hlt mov (bad) repz popa jmp mov or sahf ja mov dec push loopne test sti pop sub out cs int adc inc xchg pop jmp insl adc cmc inc xor mov insb jmp std push adc xor outsl mov mov fldpi add adc data16 into stos cmp dec pop cwtl jmp mov adc hlt std outsb ja pop cmpsb adc sbb xor or fldl pop or adc cwtl add xchg rcrb sub sub mov icebp jge adc (bad) xchg mov mov jl (bad) fs aam fwait pop jmp andl enter fnstcw imul divl mov jns adc stos rcll mov adc xor lret jmp pop pop push mov inc ds jns cli xor aad mov aas or sti pop adc arpl xchg xor xor out adc fs xchg cmpsb arpl cmc ret jecxz fisttp pop movsl jge stos mov mov push fprem1 pop fs je pop sbb sub inc test out jg ficom sbb push loop sbb jmp cltd pop push in xor jle fcmove loope adc mov into push sbb pand adc dec mov adc mov or mov and adc in mov std pusha push adc ljmp inc test pop adc imul popa mov insl adc mov rorb jl in pop and add and jo rcr xchg iret pop mov sub jmp mov pusha mov rol mov cmp sub pop jno pusha mov in sahf ret (bad) clc in dec or adc icebp xlat dec dec scas xchg jle cmp das xor add pop js xor or add loop dec inc mov jl out int3 stc and adc (bad) loopne push pop jle lea inc in mov mov movsl shrl xchg adc inc ss insl pop fcoms (bad) sub (bad) dec popa adc jle sbb outsl lret jp pop dec jl dec pushl inc neg adc xor adc mov jnp pop jns jb ss push mov xchg jno pop nop shrb dec adc pop adc pop fstl and adc sbb mov (bad) cmp jae sub out adc and cmp mov popl xchg adc inc dec in das mov mov add push push aad and pop or xlat outsl mov repz in cmp jg (bad) std mov xor fwait jb mov pop mov push pop imul int3 or loop jnp or jae xor pcmpeqd and data16 push aas ret mov adc (bad) pop cld sarb in test pop mov lahf inc adc inc (bad) rolb pop xlat mov in outsl inc push sbb mov push bound iret int mov lods or adc xchg stc xor sub jnp ret inc repz adc stos adc pop (bad) pop adc xor jno mov xor jo mov cmp dec mov bound adc pcmpeqw jae push nop mov loope mov pop xchg pop jge loopne pusha scas std (bad) nop mov nop dec (bad) mov test fwait js insb sbb adc pop test loope xor adc lock lret mov rorl dec xor pop pop pop mov mov mov fsubrs repnz adc inc xchg push add aad sbb inc and jmp inc sub int xor dec insl jbe add inc add rcll loope (bad) gs adc push lods adc sbb or sbb and xlat adc stos jecxz mov cmpsb loop not inc sbb lahf push inc pop adc mov adc add xor test out push or lea fsubs in lods bound jnp dec in loopne pusha sub scas lea dec je ja lret movsl pusha repz jae adc xor adc mov mov xchg lds pop mov ficoml es xorb insb mov scas in xchg call aaa cmc lds lods mov pop dec fucomp sbb pushf lcall shrl push mov cbtw cld inc repz xlat dec (bad) ljmp xor not xchg or bound inc inc xor in xlat sbb mov sub adc mov aad cmp push popf stc inc lea hlt out insl adc mov das xchg pop push cld add pop loop mov aaa insl jg inc xor jno jnp sbb adc pop xchg leave adc insb outsl cmp xor add pop jl mov call dec sbb mov outsl out loope jns and add pusha ret xchg and out out xor pop dec xchg nop arpl adc sarb test out adc xlat sahf cmpl xor xchg mov push cmp test or adc xchg hlt fnsave dec sub outsb lea pop add imul mov sub xor and mov in lods lahf pop (bad) or sbb notb mov push adc rolb lds lds add jbe orl adc mov sub lods mov xor negl or adc cld enter push nop adc xchg mov mov jge sbb add or clc adc out push aad pop mov mov adc movsb arpl shl lcall lds imul or sbb xor adc (bad) pop xchg jno cmp outsb addr16 in je int3 pop repz clc (bad) hlt aad mov pop (bad) sbb ret sub dec xor jno or les seta scas je jl leave ret mov or cmp cmpsb add fdivr adc aam push adc subl cmp adc jge add mov mov dec fildll cltd add xchg ficoml push (bad) into cld enter cmp xchg je jmp cmpsb movsl enter test rcll sbb std or cmp adc test out mov adc (bad) faddp repz xchg das out sti mov or nop testb ret push sbb xor incb jae adc mov cli (bad) test mov lds rcr mov movswl or push outsb lcall or mov add arpl adc gs add popf adc jae sbb mov add mov and and bound lds ss jmp adc jno mov imul loope mov add and je add loope nop mov adc xchg pop mov push cmpsb inc xchg sub dec xchg adc subl ja std notl in push xchg push dec adc (bad) in adc inc jp in aaa adc jmp xchg repz sbbl push adc mov push pop insl pop push ja mov es shlb push xchg push mov movb inc cmpsb imul adc (bad) or adc push in and push insl adc int3 jb ja inc rolb jecxz (bad) jecxz (bad) add popa jae xchg fcoms adc and sbb and mov out push cmovns adc clc out xor scas add movsl fadd add adc sbb nop xlat add adc pop sbbb push inc (bad) adc aam xchg or jmp push adc js pop cmp adc mov cmp fmull push adc jp mov or lret sahf adc push add mov imul pop mov cvtdq2ps jg cs push sbbl adc mov scas outsb cmp push xchg and rcrl or mov lock dec ret adc ljmp cld adc sbb mov mov fcompl invd adc scas lods adc in mov icebp daa jp hlt adc lea (bad) jne mov je or jle add jae adc cltd mov pop adc mov sub and mov jecxz insb imul sub fsubr jae iret nop pop pop adc add cwtl gs test inc cltd jge cld jns aam clc cmpsl cmc sbb adc jle dec sahf adc loopne push ljmp das sbb lds inc mov in push adc cmp (bad) adcl adc lock js stc pop adc xlat xchg pop pop push jp mov mov push pop mov sbb out adc dec ret inc je jmp sbbl out pop mov push aaa inc fldenv mov imul adc lea pop adc shrb mov adc adc mov shr popa cltd adc ja fnstenv test adc rclb insb dec inc inc out std (bad) adc ror push jo cmp lock pop adc mov (bad) mov push popa mov pop inc repnz mov jl leave mov adc repz mov pop add adc test data16 call andl mov lea scas lahf sub adc and xchg rcrb imul stos and data16 outsl xor (bad) adc cmpsb adc insb or mov mov repz sti inc or jnp gs (bad) daa cwtl and and or ljmp adc and jp jg popf and xchg (bad) iret xor xlat sub mov adc jbe xor shlb push dec jge rorb adc jg and inc lods mov push sub movsb aaa or arpl dec adc add stc repnz pop xchg incl stc ret fucom adc imul ja add lea mov aaa les aad dec mov adc (bad) xor mov add je adc sub xor push decb mov jmp add mov (bad) pop lods daa dec xor cmp outsl or dec mov stc mov mov divl inc ret je (bad) or mov or imul xchg aaa adc jne adc push into call adc ljmp inc adc into cmc mov add xchg push mov ja clc jle fdiv adc sub xor lahf (bad) inc je add mov movsb pop cmc inc pop xchg lcall pop insb int3 (bad) pop cmp mov in xchg adc nop aas add popf fs jle add lret adc daa sbbb mov add pop adc in jnp out frstor inc add mov adc adc fs insl push dec mov sbb mov mov cld sti push xor mov inc xchg add xchg xlat (bad) lret fimul int cmp cmp adc mov lea vpslld mov sbb mov fs fidivr cwtl aam pushf xor (bad) lock mov fcmovb sbb enter (bad) add repnz into sarb add mov scas aas mov push je or nop adc jb mov adc adc sub rclb shrb add scas and fidiv fcomip aaa ret adc cmp fstps xor aam sbb pop outsl jl adc and or daa or inc adc pop cld push xor adc vmread aas test icebp xchg push incb xor lods das mov outsb adc mov jp fmuls xor in mov adc xor add aam loopne push (bad) jb pop faddl push pop cmpsb push or push adc es stc pop (bad) mov xor xlat cli (bad) shufps xchg in dec movsl aam test pop sbb adc mov mov sub mov mov mov cmpb inc int3 mov addl rcrb into inc adc sub mov jl loope in add mov mov xchg sbb setle push add insl cmpsb aad outsb adc push pop mov iret xor pop in ljmp mov inc push cmc outsb sbb shlb adc test dec pop dec inc xor je adc stc in fist sub pop push lret into and adc mov (bad) idivl jb imul fs mov divl inc out out sbb int adc mov pop subl lea fdivs mov imul mov adcb inc dec (bad) mov in mov inc jmp or add in and adc mov inc sbb jno inc push sbb loope dec ss repz jecxz mov and pop adc stc (bad) adc adc cmp fcoms (bad) jp stos loopne test adc mov mov jmp or or out jnp fisttpl push push cwtl popf movsl mov ja decl or nop jnp ljmp nop sbb fisttp xchg cli mov fdivrl xchg cmp cmp daa imul dec add dec repz inc lods gs addr16 stos add std aaa aam insb add das js test pop pop xor and jnp pop cmc mov jno out outsb dec add adc mov call add pusha outsl adc jbe mov adc pushf jne nop dec ret fwait lahf jge xchg push pop hlt or lret push aam out dec (bad) dec repz mov mov cmpsb cmp test fisttp notb pop imul mov mov daa mov int gs add mov cmpsb stc or rorb imul dec rclb mov popa xchg inc add mov push insl mov jb sbb arpl jns cmp adc cli int3 ljmp mov sahf ds xchg (bad) repz inc push and ret pop push jg (bad) in sbb ja cmp xbegin adc inc pop mov sbb cmp xor test sbb hlt push xor cmc jp sbbl stos and hlt jge repz data16 inc push mov inc and pop jnp mov fpatan pop imul mov push xor xchg xchg fstpt enter (bad) cmpsb mov clc sbb ljmp mov int3 adc adc pop and push adc test inc adc pop (bad) outsb adc das shr mov add mov or add jne insb pop sub inc mov or lea add inc pop adc jp cld push or or adcb mov mov icebp fbstp push jae sarl lods push sub pop outsl stc mov cmp xor add mov mov aas rolb (bad) xor gs imul adc stc (bad) sub (bad) xor in push scas mov cmp adc loopne dec aas inc shll nop jmp jmp enter sub scas pop sub stos push cwtl stc loopne shld sub or pushf mov sahf fldenv and iret xchg movsb or js mov xchg xor in fiaddl movsbl mov rcrl adc (bad) aaa and jo das mov pop out mov movsb push sti and mov xor hlt mov (bad) cmp push mov push adc fcoml jae sub xchg test mov rep mov call (bad) pop out loopne sub add jb or repnz cltd mov test out inc cmp jno pop adc mov push inc and dec arpl cs test das insl mov out xchg push adc xchg (bad) and push push mov inc adc cmpsb lahf adc ficoml push loope or cmc xchg nop out es rcr push addl loop push push adc ljmp adc mov repz imull adc xchg call pop adc pop fs sub adc inc cld jmp ds xor or dec repz sbb cmp jae (bad) mov mov test rclb jo push frstor push movsl mov rolb int mov sbb repz (bad) mov int3 (bad) push lea adc or cmc sahf mov lea scas adc lret jl jns jb add test dec adc pop nop loope inc pusha pop cmp sbb mov mov cwtl mov lea popa mov bnd pusha jbe pop push push adc jae (bad) mov test adc or add in adc adc repnz mov mov jl and aam adc or jo in std fnstcw shl cltd mov pop je adc mov sub push insl push adc pop cmp jge mov daa or call loop mov jle rep popf mov xor mov mov popl cli push repz fnstcw dec (bad) out mov mov adc les dec lcall fstpt outsb lcall es rclb xor dec push jecxz adc xchg pop push pop adc rorb cwtl sub and or aam jbe movsb andps adc nop (bad) mov push je repnz and push add pushf movsl sub add fisub mov lret pop jo sub in mov mov sbb jno sbb das inc mov repnz mov out ret dec adc sbb lahf mov mov dec mov incl or xor mov adc and scas pushf dec cmp jb mov adc popf sbb and push data16 pushf xor ror (bad) jae (bad) pusha or mov imul or flds dec pop xchg rclb jl out fild in (bad) mov lods or fiaddl cs jo and jmp sub mov add ljmp sub lods push push adc lahf decl mov lcall jae mov xor cli add jl mov cs scas sub jb (bad) cmc pop dec add lods add test je xchg cmp mov push inc dec sub adc (bad) adc mov jle adc jo add pop sub movsl ja add pop mov fimul adc (bad) lret pop (bad) mov inc in sahf into fwait pop addr16 push lock jg movsb dec dec sub repz inc aad mov adcb jb jmp xor xchg mov adc and popf mov cmp faddp gs fdivl sahf adc pusha push mov jmp push inc adc push lahf je sbb (bad) adc es ljmp arpl mov or icebp std adc dec mov sub and and lock xor fwait out adc into mov and mov adc or push push jae loop das sbb scas clc xchg cmpsb xchg jnp aas dec add jno mov cli adc and (bad) std or std fdivrs sub ffreep inc add sub sbb xchg sbb inc es mov add cmp inc int3 (bad) popf lods adc pop add adc (bad) (bad) dec repz adc sub adc xor push idivl or xchg int3 mov sbb movb fstpl aam mov mov aaa adc adc cmp pop int3 push lcall jle gs stos iret inc adc cmp rcr xchg and rcll lea mov fldcw xchg cmp jge adc jbe in in lods adc pop adc dec loop sbb icebp rcr shlb das pushf adcl mov fstps ror gs repz cmc or inc adc xor cmpxchg adc jo outsb iret xchg ja (bad) mov or aaa pop in adc lods cmc and jg dec out stos fimull mov fs adc cmp stos adc rorb xor inc int imul out inc (bad) mov push adc insb test adc clc movsl in xor mov inc xchg cli notb pop fcompl lea out pop outsb jge adc pop cmp add xchg adc arpl les cmp enter push xchg pop repz pop (bad) aaa xchg cmpsl sbb inc gs rcll add xor jmp inc lcall (bad) stc fdivr insb sub (bad) rcrb dec push sbb popf add adc xor mov (bad) or mov sbb in dec pop cmp pop test jl mov sbb adc push in mov std enter inc (bad) (bad) xchg xrelease jne in ljmp or pop mov adc mov rcrl mov notl sub sahf cmpsb (bad) adc xor xor fwait xchg call mov mov sub aad adc xor pop adc fwait add adc adc imul adc mov mov add (bad) dec das mov mov sbb inc aaa jb add call mov mov repnz cs dec adc subb inc (bad) test mov nop xchg cmp lock int3 enter mov cmc push xchg mov outsl pop inc sti outsb mov mov insb sbb clc or jae adc mov pop adc and (bad) add cmpsl andl sahf xchg popa mov pop sbb pop cltd dec cmp xor repnz mov xor scas adc mov dec fdivp adc pop bound int3 test stc jbe decb adc out fdivrl push int mov jae stos cmp xchg sub adc aad stc inc xor les cmp xchg ss jp test cmpsl outsb add scas adc adcl inc add (bad) mov pop in jle dec add rorl mov cli or sub sbbl mov lret pop sbb adc push lods dec adc adc jb ljmp imul in jmp lds adc sbb insl jp cmp call adc cld xchg push dec sub and mov pop dec adc jle sti dec sahf mov in push xchg mov movsb fcoms or outsl adc adc aad pop in cmp adc mov mov adc mov ret mov int out cwtl je movsl mov jno sbb inc xchg insb movsb push mov mov xor xor or xorb dec adc iret inc shrl sti mov sub sub lods insw dec std pop and out cltd adc inc xlat xchg cmpsb sub adc ds push adc sbb lods mov es rol test rolb inc jp lret add xchg xchg dec xor icebp cs xor ljmp or leave mov jmp test dec jmp mov mov js jmp push mov mov sbb and mov pop test or lods push rorl xor xchg adc sbb and mov or enter stos push mov fs xchg je pop nop lods loop mov or sub mov push push xor in mov mov mov pushf add mov adc int3 sub cltd outsl hlt rcl out xor add sub ljmp mov aad mov fstl sbb jle (bad) movsb add jl outsl push cmp xchg or dec or (bad) jge xor pop leave and in or lret jo jns and pop mov aas add push push dec mov xor int3 rolb jae jbe xchg xchg add bound sarb mov push inc sbb jecxz mov adc xchg sub (bad) cmp jbe sbb lods or ficomp cmp push push nop adc adc jmp sbb das adc aam imul sub pop mov dec lret inc loope xchg mov ret or xchg inc scas dec mov (bad) jl (bad) lcall pop mov (bad) adc fcoms rclb std mov adc lahf mov adc xchg and sub imul cs repz out popf jns mov (bad) (bad) sub sbb ljmp in mov frstor call outsb pop sbb jmp add popa add loopne sbb adc decb mov dec push fistpll out adc bound inc sub or or pop xor mov cwtl pushf mov (bad) clc shrb out adc sub mov and aam ljmp nop mov or scas dec mov (bad) add pop lret into jno or imul imul mov adc popaw add push out push aam lahf adc cmp rolb adc jnp pop mov sbb test pop push sub cmp cmp sbb push dec adc or jne stos nop imul (bad) xor push cmp push fdivrs or adc popa mov icebp adc std (bad) mov enter and jmp mov adc out cmp leave sbb jnp xor shr test xor sub jbe mov jae xor jmp aas in add cmp pop mov (bad) cmpsl xchg hlt adc nop fnstenv out iret adc dec mov in adc xchg (bad) cli cmp popf inc xchg lcall xor adc movsl repnz std rorl xchg adc or inc dec adc add jne mov pop mov jnp lahf xor mov pushf adc cmp jle out scas cld add cmp lods ljmp lea or inc pop cmpsl mov repz ret xchg and repz sbb out jnp orl mov dec pop xchg sbb je dec into lret sub adc pop jecxz divb sbb lret movsb nop (bad) inc or lods push jnp arpl in lea mov mov cmp test mov sbb aad in mov notb adc sbb mov mov (bad) flds cwtl incb inc inc test adc cmp adc lcall xor jb push cmp push xor hlt sbb xor outsl add pop mov inc adc (bad) mov xor call sbb js xor push or in (bad) jns pop fwait pop mov repz push gs sbb in cmp lcall test ljmp push xor jecxz fstp adc in ss push popf cli adc ja jg xchg shlb mov loopne lock repz xor or adc xor mov inc js test adc arpl mov jecxz scas or sub xchg loope stos pop jno movsl mov sbb xchg add test push cmp rclb sbb rolb repz mov cmpsl cmp cmpb dec adc lcall mov cltd sub movsl pop aad repz mov cmp cs out in in and jg mov cmp lahf jge (bad) xlat mov xor push (bad) jmp sub adc outsl fdiv adc outsb push test mov jo,pt push lea test add adc or mov js xor pop fwait push mov (bad) out cmovg lret hlt add pop popf xor cwtl mov xchg xor mov std lods adc mov outsb adc call cmp dec mov cs jbe cmp shlb fbstp cmpl mov movsb add add push add add adc mov movsb and jb and pop dec mov fadds cmp add rorb mov repz jne adc rorb push add cltd jno ret jge xor sub xchg adc cli gs popl xchg inc das scas jb (bad) popf adc adc inc adc push dec push cwtl mov adc adc sti inc (bad) or ljmp icebp mov jne mov mov daa sbb pop xor jo in cmp cs mov cmp push cwtl adc mov stc adc and sbb je insb lcall out mov pop push adc rcrl mull push lret dec cli lret pop repz int es sbb rcr inc sub mov addr16 adc add adc cmpsb loop mov mov mov pusha movsl jae and push add inc and sahf jecxz xchg (bad) xchg adc mov add cwtl das push mov adc bound sar ds adc adc pop outsb js push aaa scas cs in les mov adc jne lods push das xchg in xor int add mov iret hlt xor (bad) jl dec pusha adc adc js ret into mov aam push xabort dec sub inc jmp cmpsl dec adc outsl repz dec lds aad adc fisubl fsubs xor (bad) adc into shrb (bad) lahf enter dec ljmp sbb jo cmp ret mov loope mov push arpl sbb (bad) dec xor aaa mov adc outsl data16 setbe adc xor push dec jnp adc jae pop or adc mov adc ljmp dec push adc push dec lods daa adc popf push aaa cmp sub sbb scas lret jp js mov aas lds or xchg mov test jl adc xchg icebp cld in inc or test pop cmp imul cmp repz add mov iret push jmp fnstenv addl mov mov insl adc sub jnp loope pop (bad) xor mov or inc (bad) fdivrl inc xor or sbb dec int3 subl push or adc mov adc out orl push fstpl jecxz sbb or (bad) fmuls loopne adc dec cwtl jg jo in aaa stc xor or xchg lret adc sub pop adc out imul mov out mov dec rclb pusha fcoml incl mov repz pop cmp je repnz mov js aad pushf mov sbb pop pop xorb int rcll das or and cmpsb jg dec js inc dec outsb or int lar decl jns test push adc adc push mov jmp xorb sbb js pop add jecxz cld push repz dec sub and (bad) jmp push rol lock dec push push add adc in (bad) adc mov fcom fnsetpm(287 push mov into inc and xor fbld loopne mov adc test jmp dec adc ret jae jno jb mov mov out adc stos (bad) mov and mov into push jnp push cltd adc scas dec stos aaa int3 push pushl lods decl ficomp notl adc lret pop cli shl jo or dec movsb incl sub and jae mov or cmp xchg sbb out fidivl int push ljmp xlat aas adc popa adc fwait dec pop cmc or and movb add enter in adc or xchg jp dec adc in popl adc out or iret (bad) adc cmp shrl jo adc dec xchg bndstx mov pop sub sub les out xchg pop sub jae adc adc outsb jg or cmp sahf aas mov jmp mov adc inc imul mov pop mov mov push xlat sbb adc dec lods adc or repz roll pushf or imul fldl mov out mov or cmc rorl (bad) and xor dec jmp inc sti add push adc pop jl adc jae xchg xor fist mov or pop jo mov icebp xlat cmpsl leave and jl inc sub inc mov add test xor jge bound mov inc push xchg or pop popl jp repz xor call sahf mov adc jmp mov daa aas push mov imul xor outsb mov adc and sbb ret rolb fwait popf push jb push andnps testb mov cli pusha push cmp dec or jl cld adc rcl inc adc ficom jae (bad) or iret mov je ficom push xor scas mov lods mov xchg test adc data16 add nop pop inc hlt add jmp out sub sbb mov fistl jbe sub cmp sbb inc add jb sub or cmp adc movsl sub (bad) jae stos xor fcoml sbb and in mov ljmp fisubl jne cwtl loope js push xor pop push xor mov add xor hlt xchg test icebp xor movsb and aad sbb pop icebp pushf ja enter mov add fcmovu jo inc sti sub mov repz and pop add inc adc cmp pop rorl sbb sbb (bad) std cli or xor cmpsb stos inc fdivrp add push xchg int mov jg add push adc mov and cmpsl sahf pop dec rcll xchg and (bad) mov and adc leave mov push or or (bad) sarb inc inc shrl leave in sti loope cmpsl jg xchg adc push inc mov enter stos (bad) xor bound adc mov xor adc jae repz jne cmpsb xchg mov xlat sub jbe sarl adc out mov jge ja gs mov mov into mov jp faddp mov xchg sbb daa xchg clc (bad) push leave sbb nop andb ret sbb adc sti cmp push and xchg pop bound mov lret xor or mov sbb adc dec lock or (bad) push (bad) cmp ror ljmp arpl std fs mov pop imul adc sub int mov pop adc aad cld cmp cwtl loopew je adc mov pop popf gs xor in (bad) xor push push (bad) ss loope fbstp (bad) notb mov insl test or jns adcl mov sti push xor je scas mov imul and jns scas mov dec int3 popf je sbb mov cmp sbb pop adc cmpsb aam cmp loop jne fiadd out jl stc mov adc in scas aaa pop test xchg (bad) cwtl negb lea adc or icebp shrb adc cmp repz (bad) and lods int3 int sarb xor adc mov in add icebp sbb mov mov fs mov push mov movsl jmp pop adc mov cmp mov insl pop cltd mov mov (bad) lock adc adc xchg and mov lea jg push adc jno jbe insl (bad) iret add jp cmpsb test xor adc inc cltd mov push pop xchg add loopne outsl xor cmp imull adc imul adc adc cmp jo jne cmp adc xor fstl out mov outsl jns nop cmc xor mov frstor pop xchg stos leave (bad) rcll (bad) cli movzwl pop lcall roll mov aam or andps adc idivl repz add xor hlt stc pop fnstenv out adc inc xor test repnz out inc cmp jno cmpsl ss push (bad) push push pop adc sub rcl in adc out inc xchg xor pusha jmp pop gs stc int adc jge lahf in xor (bad) adc shrb adc pop add test mov popf fcoms push pop lods jb or mov mov mov xchg mov add sub adc aam add inc lock adc loopne lcall mov test lods cmpsb dec fcmovbe sbb mov les daa scas insb orl mov sub sahf cmp lahf popf push mov roll add adc stos jmp sbb repz mov frstor jae adc pop mov push xor call inc (bad) in adc sbb sbb xchg pop pop adc dec xor adc test adc add stos fwait ret aaa adc popa xchg adc jle xchg hlt mov jns mov xor aad out sbb adc push xchg adc in nop pushf cmovnp adc xor pop mov data16 xlat adc arpl sbb push adc pop rorb fwait int3 mov shrb movsb pop xchg test sub sbb adc dec outsl adc push and sbb rclb sub adc lods outsl shll stos add add rcr imul mov mov adc stos inc andl mov adc scas push movlps and pushf sbb inc testb xor iret ds stos int3 dec xor pop mov push repz lock pop adc pop add dec mov sahf cli jbe mov sub shll add push adc arpl pop pop pop and jl lods cmp push or jp rolb xor push mov jge sti in scas stc sahf adc or xorl jl jae push cld data16 je add in mov or pop stos or adc jmp lea jg jle xchg adc fist mov aaa mov jbe push iret imul jne (bad) pushf adc dec or mov xor add lretw adc dec sub fsubl fisubl push dec inc adc jne or lret pop std call adc and push adc dec pop je ror push push sbb fwait adc pop xor push adc and dec push sub adc out sbb adc cmc jns sub pushf (bad) test fsincos mov dec je faddp (bad) leave adc mov icebp mov xlat or mov movsl (bad) mov xor xchg or adc jmp test loop mov arpl dec adc pusha in push adc mov arpl push test or adc inc shrb (bad) add and and adc (bad) cltd adc rorb and gs push fwait xchg mov xchg sbb xor movlps dec adc and pop mov outsb adc ss js cs xchg jl push test pop int3 loope sbb adc adc xchg adcl es xor out xor stc (bad) mov sub pop jns mov mov insb js mov notl stc mov adc fldenv dec stos push sahf adc out add cmp loop loopne xor mov add into inc jno sub out xchg outsb nop les mov pop mov xor outsl and in loopne push movsb and fsubrp xor xor add lahf fmull jae mov mov and adc jo inc mov lret sbb mov scas insb or and daa jbe inc xchg xchg or scas rclb rolb pop cmpsl dec cld insb insl adc (bad) mov in adc loopne gs pushf loope adc jle arpl movsb jecxz cld or sbb cmpsl or mov adc nop repz pushf mov das (bad) (bad) out dec js in add mov (bad) adc xchg pusha add pop push (bad) inc cli and enter repnz ja add lahf stos jmp ds adc push cwtl movsl js mov push cmp (bad) pop pushf (bad) fbstp push std xor mov push jl xchg test add jns ds ja mov adc stc test adc mov and cmp dec mov adc std imul lock mov add inc out pop pushf rclb rclb mov movsb cli adc (bad) push adc fistl arpl pushf je addb adc cmp push jmp pop mov nop adc cmp adc pop ds dec test outsb inc roll xchg jmp pop jecxz jmp orb adc out ja jg jne and out jp clc xor rcll (bad) lods jb add push fdivrl add lea mov xchg sub pop daa and decl outsb adc dec or xor jno adc out adc push lds (bad) or add sti dec je xchg inc add divb mov xor sbb aam lods push cltd inc adc fwait adc and int or in in das arpl pop (bad) or adc inc cmp adc sub adc pop (bad) sbb jg cmpsb loopne ret sbb or push and inc loope popf into adc pusha jmp lock sub mov mov mov xchg imul lods sti push movsb cmp pop cmp fs pop xor jb popa adc push sub sbb mov push adc add sbb mov cwtl xor sbb in mov loop rcll mov jo push adc aaa sbb call add cmp iret mov add mov xor lret sarl out fcmovb add fdivrs and subb xchg and dec pop mov adc or dec pop xor nop (bad) sbb adc adc sub cmp test pusha xor adc jmp hlt or mov or pop je sbb xor dec lock adc adc sbb adcl mov shlb fwait jne int popw (bad) movsl push mov pop rcrb call mov adc dec insl mov notb push xchg jecxz jle pop icebp jno cmpsl inc sbb pop xor adc mov inc pop sbb scas insl es and je mov aaa adc push fistpll xor pop mov inc dec adc addr16 push cmp fnstenv int ljmp xlat adc enter shl adc xchg mul adc cmp or sar adc pusha pop adcl in adc jmp mov loope mov xchg sbb cltd (bad) push imul adc jg mov (bad) or pop sub ja addr16 adc push fcomps icebp bound pop ror lret jmp shrb sbb rorl scas pop and rcll lcall and xor (bad) test cmp and mov iret es jne mov mov jp movq pop call lods fcoml adc jp adc mov xor es or aad pushl or adc jmp (bad) ja mov pusha jo sub push lret jg in adc loope push and sub mov jae mov adc sbb or rcll jno mov jg mov add (bad) inc enter adc xor jnp inc cld cmpsb out jo adc leave add shlb adc add lds enter mov shl (bad) jmp adc mov push daa pop pushf push repz push pop inc adc fs cwtl gs nop ljmp cmc mov xchg jb ret mov (bad) sub mov xlat cmp cmp push call inc xchg pop jge cltd jle rolb ror add add rcrl fdiv cmp cmc jae loop mov shrb cmp mov idivl fbld bound add lahf mov adc int3 pop in xchg ret loopne or or mov out int3 ss mov push pop pop cmpsb (bad) std call loope bound push adc es (bad) (bad) jne mov mov and loopne lahf xchg imul push sbb mov mov or adc sbb cwtl push or or xor outsl xchg addr16 scas pop push xchg sbb mov sub ljmp rolb rcrl sbb jp cli gs jbe jne push mov jl push repz xor add call push adc xor fwait adc mov xor mov adc pop push in cmp xor lret and shrd add je inc mov dec mov mov or add or mov adc jae mov fistpll fstps inc cmc and lret ds in jno push xchg push adc insl adc in hlt (bad) pop (bad) repnz aas lods (bad) xlat (bad) pop and add mov and andl mov cs xchg adc imul std movsl in popf dec adc or (bad) addr16 sub shrb cli cmp aad sub dec mov cmp fsts (bad) out icebp dec adc ss push das adc adc stc sub rcr xor bound sbb push push fbstp cmp xor testb mov add push add ds and (bad) (bad) adc in fcoms lods mov adcb adc (bad) xchg lods iret ret mov int sub ljmp (bad) data16 lret adc adc jne mov scas mov push (bad) outsb push mov or (bad) enter push loope push adc lret fnsave add mov push int3 (bad) adc mov stos jnp pop sbb cmp mov and inc jae push ss mov aad sahf (bad) pop xchg lea adc mov push je pop sub mov mov adc cld jecxz repnz adc sbb inc ss repz push jnp push and js adc stos fsts xchg and out mov xorl mov lods sub push loope mov mov push stos (bad) push adc clc mov sub cld inc ljmp mov push popf aaa adc push push das adc mov (bad) cmp dec lahf mfence adc insb aad int pop fdiv aam xchg mov mov test jle popf cwtl jecxz adc js push scas push lcall pop jl in push jle mov cmp loope add xchg adc divl inc popa sbb push mov out mov fidivr cwtl jae adc fildl push je pop jecxz pop or pop fsts js push mov cmp les clc dec aas out repz push sbb std sbb sub rcrb ret pop push add sub test test pop xor push iret sub push mov and add xchg mov arpl sbb adc adc inc adc fnstcw or lea ja mov clc mov icebp mov rorl mov mov pop dec mov pushf nop mov or je mov cltd sbb mov push push popf nop add adc clc mov js adc mov rcrl pop pushl adc jnp pushf cs hlt adc push mov xor in or adc add nop xor xor (bad) in adc cmp lret cmp cltd rorl scas push xchg sbb push gs adc popf push aas adcl sti repz xor rcrl mov adc rcrb sub mov ds mov mov jo aam cmp jge loopne fistp adc pop aad shrl repnz daa mov inc sub fxch xlat adc and and cmp inc pop mov scas adc adc adc xor add mov xchg or loop xor cmp inc pusha ficom pop adc dec (bad) sub notb loope mov xchg adc loop fstl int pop popf sbb stos daa pusha push push dec movsb pop jno sarb mov add adc test adc shll pop rcrb adc je (bad) fsts mov daa and push jae mov jg or dec jmp fcmovne cwtl mov in and rorb into mov inc mov clc add stc mov push add mov push pop bound shrl aam adc mov test adc rolb inc aas dec lahf out jecxz (bad) mov (bad) nop arpl xor cmp repnz cmp in jb adc jp stos adc mov xchg add rolb fdivrs notl sbb inc jo adc aaa call scas push mov test jb add repz mov pop sbb fwait cmpsl lcall (bad) lahf in into xsaveopt lods cwtl pop mov notl inc movl shr adc cwtl cmp cs es fistpll mov mov into jnp sarb xor or (bad) (bad) push sub stos inc (bad) xor jne std adc (bad) mov push adc mov mov xchg sub lds ficomp repz push inc cmp push xor xchg adc ss mov cli mov scas xor lock outsb subl add add shrl xchg in hlt fwait jg or push sbb xchg mulb fstpt mov adc out loop add mov sub pop rcpps fisubrl imul stc sbb pop outsb sbb adc jecxz mov xchg adc mov mov mov cmc push outsl mov cmp mov adc mov pop test add push enter adc (bad) jnp mov aam push dec sub add rcrb pop jnp add mov outsl cwtl pop imull or in lea inc xchg lret xchg inc repz test lret adc cmpsl mov movsb lods test dec xchg scas or mov push and sbb into jns ffree jno mov insl sbb xchg call loop in outsl mov enter xchg fs call clc faddl mov mov adc jl loop rol adc sbb popf cmpsb in mov sub jnp sbb pop pushf inc adc xor addr16 push shlb adc es ljmp sbb dec rcl cwtl stos (bad) ret in adc xor cld mov daa mov mov repz adc aad mov mull test call mov xchg and ss add adc push ret add imulb xor xchg inc stos rcll ffree mov or inc mov pop cmc pop cmp data16 repz or enter xor (bad) rcrb rolb adc dec sub xchg xchg mov add adc leave nop xchg jp push int jge inc aas out ficom add ljmp ret lock nop int3 (bad) repz test push decl adc xlat adc nop and adc outsl pop inc pop in adc push pop mov (bad) ss aaa adc das mov jnp and std je dec lods mov dec test sbb or sub cs jne pop sti sbb lret call pop dec out mov push loop repz add push mov outsl mov adc int ret es inc dec xchg jp cmpsb dec xor mov or add adc outsl dec push notl push out pop cmp xorl (bad) popa rcl sub pushf adc in repz xchg adc aas jb mov shlb mov push xchg push xor adc aam add mov jge mov pop sub std xor and xchg pop adc inc in xchg xchg mov dec pop fdivl jns fisttp iret push int3 mov mov or adc xor sti adc (bad) sarl push mov mov enter shrd mov xchg sbb cmpsb push cs mov outsl xchg ja iret out push xor xchg sbb sbb (bad) push sub out adc push sbb (bad) sub or addr16 int3 lods pop js in or (bad) pop lret stos (bad) adc jne jecxz in adc dec sbb and push (bad) and mov pop push fdivrs out insl loopne adc xchg jecxz imul sub sbb call or repz lcall jl mov lcall daa jb pop nop out inc adc mov mov pop cli les adc inc loop cltd mov adc push je jge mov inc mov dec adc jo (bad) pop sub adc icebp mov mov mov fwait or lahf xchg adc xor push mov mov and test adc add or adc stos fucomip cmp icebp adc jp jmp add fs and in ret adcl adcb cmc mov jo and push pop cmp xchg add inc pop and inc adc xchg mov adc mov adc mov out xor pop xchg les adc sub (bad) xor mov jecxz pop ret dec adc mov les clc mov cld push pusha mov dec push and scas jns outsl out adc xor xchg jecxz int3 lea adc test xlat jmp add int inc sub repz ret insl arpl or sti adc sub adc and aas jl imul stos popa mov das adc je or adc loope add adc xchg adc je es stos out adc bound mov in add and push shrb mov outsl or mov loopne mov test insl repnz add or mov mov cmp pop outsl adc in mov (bad) outsb or clc fadds mov hlt xchg shlb xchg repz mov lods adc in arpl out (bad) std dec pop xchg (bad) je into and test leave adc jmp mov lods aam and mov les add push add lock add or push push inc mov push arpl sub dec adc or fdivrp sub inc add sub loope in mov xor and sahf jp lea les aam and fs xchg test mov lcall scas or mov sbb add inc and sbb mov push imul cmp push and scas cmp mov dec mov cmc pop adc (bad) and pop jmp mov push stos gs je aaa dec jg add cmc rcll repz ss notl in adc push iret repz sbb aaa jecxz or rclb push repz mov jnp (bad) push mov dec xlat jecxz rcr jg mov arpl adc add cld cmp pop adc hlt push sub add lock rolb mov xchg out inc adc jbe clc sbb mov push dec mov jne or jae xor push push mov xor ja outsl xchg add mov aaa out adc pop pop sub or in lret fcoml imul outsb lea dec dec enter add inc adc mov or mov xchg dec adc push or jge adc es sarl dec adc sbb adc cs xor pushf outsl xchg dec popf pop jno xchg ret add insl jle mov fcomps or jg bound push sarb adc jns mov adc fdivrp jp xchg hlt repz sarl jge push cmpsl xor cs (bad) jno mov and fcoml push es cld test dec pop push and dec dec add sti add adc into in adc icebp sub sub out or mov cmpsb xor inc adc pushf cld (bad) repz scas jl inc adc sbb and out gs inc adc js imul cmpsl adc xor adc xor cmp cs adc xchg mov iret int3 sub mov arpl jns or inc daa mov add mov xor pop bound clc sub sbb scas out adc lea bnd inc adc inc mov sahf shl push int3 ja loop imul sarl pop repz sub test stc adc sbb jae pop in cmp sub or dec mov adc ror (bad) adc movsl inc outsl lret adc cmp xchg push dec adc repz sub push dec dec jo test das lock pop adc pop popa arpl mov sbb aad andl mov adc sub out fidivl stos mov adc push xchg push insl cmp data16 cld lret and call push add pop pop adc cwtl lahf xor inc xchg (bad) xadd push push pushf adc movsb rcrl daa mov mov (bad) repz dec or pop loope add dec adc mov mov mov adc in mov (bad) or mov push or or mov mov add push insb push adc leave mov mov or adc popf out frstor mov xchg sub cmp xchg xor add add addr16 cmp or into inc jecxz aas lret inc prefetch sbb adc adc in adc xor xchg scas out adc xorb imul adc pop insb dec out aas adc mov into adc (bad) adc int mov flds scas fnop dec and jle adc out insb xor test xchg lods pusha mov mov ja mov mov in leave out mov inc outsl push mov lret add movsl push cmc clc aad inc mov (bad) repz cwtl lea sbb int3 and adc mov cmpsl adc jg in xchg test mov mov das sub adc adcb mov jbe jae pushl xor outsb sti adc sbb iret fildll bound mov fs adc xchg cmp xacquire adc rol (bad) xchg xor or jg call cmpsl adc mov insl xchg mov mov stos pop cmpsl (bad) dec adc loopne adc xchg sub push xchg jb mov inc enter mov faddl mov das inc adc sahf jge push fwait adc and (bad) sti adc xor cmpsb adc dec loope push test test add adc push or inc fildl jbe,pt mov adc imul jbe add jo stc adc lods or mov adc sbbl call xchg cli loopne cmc ja adc adc rorb jmp xchg mov stos sub (bad) mov and loope mov clc neg inc (bad) lahf jno jl or and (bad) mov fwait (bad) cmp pop adc andl adc icebp jns xchg push outsl (bad) mov (bad) add adc ja jecxz adc es repz mov mov int3 push mov sub push lods je loop popf mov fwait adc sub pop xor out (bad) fsts ds mov mov shrl xor (bad) or ja adc xchg fucomi aad sub xor movsl jno (bad) lea out add rcrl hlt addr16 and popf mov xor lock test pushf or sbb ss or pop sbb dec push add test pop xor rclb mov xchg sbb adc dec push push std push shrb das mov or adc mov (bad) sbb inc gs clc push push loope aad cmovp adc (bad) mov adc xchg mov test add jbe repz adc or (bad) icebp clc adc push pop test adc pop or cltd push adc dec ret push aaa mov xchg cmpsl (bad) add rcl ja or insb popa mov cli xor cmpsb hlt sub pop pop pop adc xchg adc mov daa enter jnp lret out push and mov adcb (bad) xchg js inc iret add mov push mov and mov gs imul and push mov cli or jae pop adc mov aas dec adc push mov jp ret mov adc idiv inc outsb mov pop mov xchg shlb add lods jge lea inc push popf adc ljmp repz xor lods or cli js (bad) mov pop mov jne aam dec or lds loope es add sbb mov repnz stc fiadd jne jo je scas xchg cmp dec inc bound or pop lret add jno sub dec push mov lock xor roll push punpckhdq and mov dec scas test stc push lea jg pop mov adc in bound adc movsb cmp adc lea pop in dec in add dec jae int or ss add lods aas pop xorl xchg xlat sub xchg or push and fwait inc mov or jmp inc jg cmpsb cmp sahf loope daa push adc enter dec test cmp mov arpl imul fcoml or xor add and mov push mov aas les pop sbb repz push mov adc rcr mov inc cmpsb push mov cmp xchg stos nopl fs repz inc das add jg jp push movsl data16 cmp lds into iret cs mov fiadd scas imul clc outsb call mov mov int3 or jae sbb aas adc cli inc aam and int3 jbe push hlt push adc out jae inc adc into je adc imull sbb mov lcall add mov add pop add repz cmp mov adc (bad) int mov adc neg movsb repz rcll das push pop and add nop fucom adc xor pop adc cmc test and and adc lock pop push sbb push mov pmulhuw (bad) mov push jnp das fwait xchg fisttpl xchg cmpsb and sub popf push mov add test pusha popa inc sub ss jb sti add in scas das adc xchg adc sub or sarb aaa imul hlt stc data16 add pop jae pop ljmp jle mov jnp mov adc xchg ja push push jmp in sub adc mov push popa repz mov mov cmp fistl dec insl roll lds repz mov dec mov aaa adc xor fxch xor (bad) ljmp or hlt dec mov pop and or mov (bad) mov adc in je cmp aam inc mov and mov xor fsubl lret adc cmp ret mov faddl inc jnp inc divps ljmp fs adc sub jnp xchg fcomi lret xor mov adc out mov xchg xchg adc test fiadd (bad) adc in adc bound fcmovnbe jmp fidiv mov into xor das repz mov mov or adc imul inc push subl adc ret or inc mov movsl adc cltd sbb adc dec out int inc (bad) pop jecxz adc fdivr add push test add xor popf lcall push addr16 loope lea cmpsb adc xor adc lret push jmp jecxz inc mov mov out xor dec and iret push out pop das loopne jns and lea out xlat xchg loop aas add pop pushf mov push adc in xor jge mov dec les mov fidivr adc cltd adc mov sbb (bad) imul xchg jle add pushf sbb add mov mov xchg insb in pop or lds jle mov rcr push jp (bad) icebp and adc (bad) jno or sub inc mov jge hlt mov icebp movsb cltd mov cmp xchg xor xchg cmp mov xlat or (bad) iretw mov int push jmp mov dec mov xchg ret dec jo clc setge loopne adc pop outsb aam inc cmp les adcl mov out xchg jp repz leave sub push inc xor rolb dec mov jne rcll icebp sahf in mov enter mov mov sbb or add pop mov jae nop dec (bad) dec sbb add adc faddp push stos push dec xchg adc ja inc mov aam mov mov fcoml in mov jl inc insl adc jnp cmp xchg cmp call in cmp mov mov adc (bad) mov adc (bad) mov adc test mov pop mov mov inc cmp (bad) sti test dec add insl (bad) jmp sbb cli adc add push push sub wrmsr idivl std xchg stos loopne push in adc incl iret adc mov popf nop loope add repnz mov sbb shll jp push or inc movsl mov (bad) pusha int jmp mov daa push scas js in adc or mov cmp or sub or imul pop sti push sub enter repz cltd or sub or rep mov ljmp (bad) cmp lahf fsubs dec shlb orl fidivrl adc mov adcb inc stos sub xchg mov or daa mov dec pusha (bad) xchg pushf (bad) adc aas xchg mov lcall lahf test in cmpsl adc or xchg test out adc cmp inc sti xor push jo jl enter push add add aad sbb mov mov mov adc adc add in pop inc mov in pop mov imul pop icebp or in bound push adc mov adc pushf rorb mov dec push cmp fcoms sbb push aad sbb out aaa fistl mov popf sub adc xchg lcall lea adc jbe dec stc js mov adc sub adc popf mov mov lcall jno push adcl sub jge adc pusha jo dec add movlps lock xchg or mov or and xor dec dec dec push add pop dec mov sub jl jo ss loopne out pop sahf push int3 cld xor icebp push push stc xor int3 lcall adc jne gs cli adc jl in jno cmp push popa scas stos out adc leave jge inc bound push fnstenv jge adc (bad) clc sub dec mov inc inc mov jmp cmp (bad) div cmp mov add lret adc rcll dec mov (bad) insb lods stos je ds adc test adc shlb adc enter jp push xor fild pop xchg lret adc pusha movsb inc (bad) cli in mov inc sarl rorb jl xchg adc mov enter xor dec adc outsb xor jge pop mov adc enter xchg mov inc adc sbb mov arpl and cmpsl (bad) adc call push adc out xor mov movsb adc fistp aad mov out sahf test fstps mov ret sub enter lahf adc data16 jae stc adc inc and adc leave movsb dec lds push imul sub inc add push (bad) or fwait mov adc loope cld popa mov ljmpw test lock xorb popa repz pop xor mov push into xor sbb xchg mov ljmp cli mov rorl mov test shl aaa mov je adc sbb jle icebp (bad) sbb adc stc xchg (bad) mov lahf aas cmp mov hlt adc sbb adc xor sbb mov jecxz (bad) adc adc push cmp push mov sub jge out xchg cli repz imull push in and adc mov lock xorl rorb xlat clc mov inc adc xor adc jle loopne insl cmp orb repnz js iret xchg push ds push mov xchg cmc adc aam push imul add test mov mov lea fs decl and push shll mov xchg add mov enter lods ja movl push adc cli stos sbbl rcl sub push dec repnz adc cmp enter cwtl clc loope or jo stos es jmp adc in push sbb cmc adcl enter std call ljmp adc fadd pop imul gs push xchg mov (bad) dec mov ret sbb adc arpl sahf outsb adc jg or or or repz xor (bad) pop ret adc xor repz pop imul orl mov mov lock repz sub fwait sub rorb dec xor dec enter adc sub mov aad rcll pop adc push clc push jl lods lret push xor add jae cmpsb subb lds popf add or jo sub add dec js pushf nop adc mov je (bad) pop mov hlt cltd out and add aam pop faddl int3 add xor cs (bad) les jmp and xchg adc rcr dec adc les repz mov mov outsl mov mov ss pop add hlt add adc imul xor push in mov pop call mov bound popa jl or cmp int stc es and test add iret test adc mov jns pop hlt dec pop add lahf add lods and iret adc jne mov dec mov ret and jns jp call movsb pop inc ds scas std cmp test clc cmpsl mov repz pop loop out cmp sbb addl (bad) pop cli sbb inc mov jecxz pop pop pop push repz dec adc xchg xchg add or xlat lahf rcrl aaa cmp mov xchg or adc call pop adc inc mov adcb faddl push std adc rcrl adc xchg xor sub fisubr and test repz movsb xchg aad add inc inc psllw mov mov jmp xor cmpsb clc jmp stos jne jecxz pop and mov in sahf cli loopne pusha pop adc xchg jae lds mov push mov adc (bad) mov or add aam mov pop sbb nop inc xchg lahf dec adc je js iret xor pop add cmp (bad) adc aad ficoml jbe push xchg jne cmp adc (bad) xchg daa call stos pop sti js xor cwtl cld cli jmp xor in sbb push jecxz shll and adc adc (bad) cmp pop adc add push ljmp scas xor xor adc iret and (bad) je imul sbb push cld stos push xor icebp push or in jg aad pop xchg adc fcmovnb add js and sahf cld fidivl mov (bad) mov fs add call test into scas sub ljmp sub mov fdivrs nop enter jmp mov scas jecxz adc (bad) jbe xchg push mov or adc out out inc jno cmp (bad) aam dec lcall js enter lea mov jbe inc sub jb mov adc fwait xlat inc ja mov dec cltd mov fstps xor xor lods push les stos fstl inc rcll cmp mov dec add xchg (bad) (bad) into in jmp aam pop pop mov adc cli cmpsl xlat jnp lret mov jmp push add xchg pushl scas adc push mov dec jae adc inc jge or stos outsb test push push add mov sub sbb in cmp jno int mov inc xor push pop test xorl sub mov sub dec or je aaa fcom jno gs ja aad in adc hlt fwait popf add loope xor repz xor and mov push adc cli fs rcr rcll adc push xor rol push aad movsbl xlat sub fldl xchg pop sub adc push mov adc dec sbb adc jo ds cwtl lret jae das or push movzbl push pop mov stos or dec fsts mov cmc test push (bad) xchg popf std into mov push fucomi out ret lods notl mov loopne pop inc ficompl orl rcrb fldcw add add pop cmc xchg pop fidivrl repnz out lds or gs data16 xor dec fcompl add add jnp add cmpsb cmp xor jae adc stos neg rclb loop mov dec dec aam sbb mov (bad) push pop sbb add jne jb jae and dec inc dec scas adc cld xchg jns mov jno popf inc mov inc dec in rcl xor popa mov gs int3 push adc fwait pop sub (bad) dec dec lea xor adc shrl imul add jle xor repz andb or cmp adc adc ljmp fisubr lds popf vmread stos pop call xchg xor std aam mov sti outsb dec fimul add test (bad) lret movsl or push and add sahf lds popl mov push es loopne arpl scas jb pop adc xchg mov or clc pop adc pop pop and pop rep icebp movb jbe test or out cmp mov flds aas adc dec in xchg je out or clc or std hlt (bad) int ds stos fwait inc add jecxz dec std pop push sub adc shrl add sti push into cmpl adc mov pop jno sbb adc pop mov mov (bad) sub out repz push or adc out or push jp fsts movb into movsl or fcompl adc sahf mov mov mov push fwait (bad) xchg je out or in sysexit xchg inc ret jecxz rcrl enter test adc movsl daa cmp lret mov adc repnz add test inc cmp popa or repz jmp pop movsb ja mov add lcall pop xor pushf mov xchg sub cwtl push ljmp imul repz inc mov jecxz adc xchg and mov cmpsb dec ret mov dec sarl jge repz xor cltd rcl mov pop jns jno aad mov movsl test icebp sbb lea fs scas movsb jbe adc into push jge sahf in nop adc das xor adc cmp in push ljmp (bad) test addr16 pop push js in cmp sub (bad) adc inc mov sarb arpl inc add mov dec (bad) dec dec jno mov mov jo fsts outsl arpl cmc xor punpcklbw enter leave sbb mov jno sbb pop stos mov push imul adc push jge fisttpl int3 out mov mov lcall subl loopne push xchg (bad) adc rcl and mov insb add sahf mov outsb adc std fcoml xchg adc mov scas into aaa adc jo mov adc sub (bad) xchg hlt aaa pushf mov sbb (bad) shl popl jns mov adc aad ret sub push movsb xchg dec repz jle and add stos imul push xor xchg or (bad) mov inc dec dec int sahf loop mov add out sbb (bad) mov lret arpl cmp push add js fstpl fwait leave xchg adc pop cmp adc andl mov cmp xchg dec scas test mov pushf mov and cmp xchg xchg or jmp and adc addr16 and lcall lock shlb pop jmp mov icebp sbb or jg,pn adc fbstp mov mov cwtl sbb pop inc das adc push in (bad) jnp mov adc xchg dec mov nop add scas add cmp loopne adc pop in (bad) xchg into adc scas mov mov inc lret and sbb mov cwtl mov dec imul in inc dec xor insl mov mov jge adc movlps inc jg xchg divl adc nop fs add adc in jecxz add test sbb loope inc pushf cli pop pop (bad) jecxz (bad) or stos push sub adc mov lods xor stc rclb popf scas addr16 mov sub mov adc pop add jl mov ljmp jg pop mov sarl enter adc inc lods add sub pop jae pop pusha movsb mov aaa out jge fisubrl or les adc das mov fs adc in push (bad) and mov or fwait adc sbbl add aam adc adc push insl cmp mov cwtl mov add push inc adc sub lcall cs (bad) imul shll adc add mov sbb in test mov mov not fs int3 lcall xchg dec mov fs cmp lods repz outsb jae aad popf jmp loopne adc call sbbb stos test cmpsl xor popa add shl cmp pusha xor adc jne push mov mov jp fistp mov cmp xchg xor xchg popf adc rorb inc mov lea outsl je pop dec sti lret add aad pop mov jle mov mov imul adc push and jp and push (bad) mov adc out insl rclb test adc pop push iret pushf aas adc imul xlat cmp daa arpl pop adc mov xchg mov mov test into sahf adc sbb icebp and mov add push andl aad mov adc jmp in aas mov dec cmpsb push jmp mov adc (bad) adc imul push (bad) test int push adc mov or sub std loopne lods xchg jmp stc sbb cmp or jne (bad) iret jnp push sub xchg inc shr inc ss sti push push pop insl xor in (bad) adc add inc lea inc add adc cmp fs push adc jge ljmp repz dec inc sahf mov loop in add cmpsl jle jnp lods mov cmp cmp xchg inc in ljmp push mov adc xor mov adc xor push and sbb jmp push adc addr16 push bound xchg add and mov lret out push inc xchg cwtl enter mov sub xor mov rorb inc push fistp adc (bad) push imul mov (bad) and dec jecxz js ss imul sub jo jl test gs hlt jecxz je pop mov mov dec loop xchg test adc jmp jbe sbb es mov mov mov call mov mov test cmp dec adc into xchg jo xchg test adc xor lock mov push mov sub add mov test jmp mov push fildl push fs sar ret sub jmp adc out mov add cmp test (bad) adc sub dec adc fidivl adc aam jo js aaa mov cmp push shl or cmpsb hlt shrl adc fwait rdpmc push and push cmp or sub push push adc add rcr sbb lea sahf inc sub in and loop sub aad icebp sti sub inc pop jbe add adc and adc xor cmp inc incl and (bad) aam xor test xor repz mov aas inc inc mov or mov jne push iret sbb and mov sub add data16 push mov or in fiadd add mov xchg lds adc into push mov xor add test loop (bad) ljmp mov mov mov lret or stos adc pop jge push push mov bswap cmp sub icebp scas mov pop push nop add sub (bad) out mov xor add sbb sti and jns xchg insb cltd lea pop pushf movsb sub test adc imul mov xor (bad) xchg adc fcmovb inc mov dec (bad) aam dec adc inc ror dec pop pop adc insb scas jns popa (bad) adc cmp arpl jp cmp push jmp push mov imul call adc mov xchg sbb jg or in sarb lock adc sbb mov xor pop cmp xor loopne xorl mov cltd xchg dec adc mov icebp sub fisttpl lret ficompl adc shl mov std imul stc cmp adc xor and jmp mov or adcl (bad) xor lock pop insb in js adc cmpsl adc inc and inc push icebp mov js std call sub lock xchg push push es lods into or lds inc scas xor jne in stc mov pop jge repz or leave mov inc or mov (bad) dec (bad) sbb std or push fwait mov das orl cmpsb sbbl pushf dec adc cs fildll sbb adc pop pushf or (bad) jno dec int inc cmp mov adc lret jne bound dec and sbb repz xor push shrb pop xor cmp (bad) pop ljmp sbb jle or (bad) sbb sub xor mov and adc stos sbb hlt jge and ret push cltd daa int imul loopne xchg lahf cli inc repz mov hlt inc mov test jae (bad) call mov jmp ljmp ss or adc jl (bad) jecxz shrb adcl adc insl xor in pop mov adc test adc lret repz xor xchg stos rorb daa imul and adc in xor sbb xchg sub adc adc test cmp xchg sbb rorl cs jge popf iret cmp or icebp fwait mov mov jbe lret sbb mov into mov or mov add ret cmc jmp rorl sub adc dec cmp push adc mov fsubrp adc sub inc mov loop pop pop adc and stos lods or hlt test ljmp inc sarb ss xor popa or and cmp icebp xor push adc inc inc loop fwait xchg inc and mov or ret mov loop mov mov add adc or jno xchg icebp mov xlat xchg and call pop adc bound movsb stos rcrb mov in outsb jg sbb (bad) mov fildl stos sub push push dec mov add mov fldl imul xchg out push hlt jne add clc in or mov mov aam and int loope (bad) fild push mov mov inc sbb mov rclb push mov sub out jne testl cmp lret shl or fwait rorb ds dec push mov push or pop pushw rorl ja mov test and or mov cltd dec inc or inc adc push insb out scas mov adc cmp das (bad) adc inc xor adc movsl cmp adc iret adc mov clc lcall adc mov mov adc xor pop int3 or push mov adc cld adc or push adc clc pop push test or adc add orb comiss mov pop or jbe mov iret xor jecxz (bad) pop pop inc iret inc adc daa adc or call stc pop sbb mov mov cmp push repnz dec std pop enter pop sahf clc imul or icebp push push ret inc lret inc adc sub loop in adc daa jae js adc fcomps in push or fimul movd adc lahf add lea xchg push outsb pop stos mov pop fbstp clc and test lret xchg adc stos mov int xchg popf stc jge pop test inc xchg mov lahf xchg repz je sbb jbe mov mov pop lea js and sbbb adc cmp dec bswap adc out mov xchg movsl mov lcall in (bad) or push movsb std jno dec and xor sub xlat adc dec lea xchg inc adc dec (bad) fsts sbb adc repz adc pushf sbb lret mov lea xor out pop loope mov pushf or cli je (bad) add cwtl mov in popa fxch inc cmp jle adc dec cltd mov adc dec dec mov adc inc cs rclb cmp popf fildl xor or sub xchg xchg cmp push in sub adc arpl mov or cld pop sub fdivl push push into shrl adc cltd popf inc xor adc aam int3 std xor jl mov adc and je mov pop mov jne movsl adc (bad) adc and mov mov daa in cmpsb sbb push push int repz (bad) insl rcll lea adc dec fsubrp daa jb mov inc jo shrb imul xor push jg push mov adc loope jne jmp mov out incb xor push icebp cli sub fwait movsl or xorl aas in mov in adc jno and les mov xor adc mov sbb mov xor imull sbbl sarb imul xchg mov aam fldl imul imul adc mov or ja mov lods aaa imul pop mov imul adc xor add stos and push jae fiaddl das or arpl ss jecxz std ret stos test into sbb cmp and mov (bad) sub ret or xchg hlt adc fistpll pusha hlt cmp push enter push push ret add adc or sbb out bound xor and push dec add or cmp mov add adc or adc mov ss les pop inc (bad) sbb sarb cmp mov xor fimull mov cli jb test fisttpl setl mov or test dec test aas aam add cmp adc movsl inc mov pusha shrb in mov xlat hlt push aas adc inc sbb cmpsl lds adc in dec subl cld (bad) repnz jge aam mov adc mov cmp mov xchg xchg push jp push data16 xchg out push cli xchg mov dec jg ljmp popf mov fldcw or cwtl xacquire push in cmp in and or adc xor leave adc loop shll pop adc mov icebp cmp mov or pop ret mov pop dec pop out sahf or icebp (bad) jmp inc push adc or mov fmuls dec mov lods adc lahf hlt adc xor call fwait xor aam movsl jae bound pop mov pop inc mov mov xchg and xlat bswap mov scas adc jge,pt xchg pusha adc mov push inc xlat sbb or nop push cmp repz loop imul into bnd xor or out jae cli aaa sub test notl (bad) int dec aad mov jmp (bad) ds adc dec js movsl cmpsb adc fisub jl ret popa push hlt in adc cmp add out push sub nop pop adc sbb xor dec (bad) push adc ljmp xor bnd push (bad) mov pop clc movsb mov pop and in add xor orb add adc movsb (bad) jo cmp sahf je ret adc or dec inc js (bad) mov ljmp mov inc lcall adc mov sub adc int3 in adc jo pop xor gs scas add mov or xchg rcl mov add pop mov jne jae or test push add (bad) rclb add dec lods adc adcl outsl in aas pushf loop inc data16 xor aaa imul push lock adc or cld cmp xchg fisttpll adc cmc mov ljmp and sbb xchg popa fsubs pop dec into adc les nop cwtl shrb xchg loop and (bad) xor pop push inc inc or (bad) je dec mov lods adc or popf repz mov adc enter insl jbe scas adc rorl in sbb xor in icebp jno xor insl jmp xchg and fwait pop inc fimull push lods adc pusha stos sbb or daa fstps xor pop xchg mov scas lods or adc movsb into test adc outsl int3 fdivr cmp es in lods test mov adc (bad) in mov add lods aad push push dec adc fidivr dec mov inc cmp ljmp inc mov xchg mov add cs or sahf outsb adc lret lahf outsl fistpll notl lock mov test in mov pop sbb push lds or xor out sbb sbb adc (bad) out inc adc xor ret hlt rorl jnp in js push jle mov push lret sub adc insl push adc es aam sub lods sbb add loopne lock outsb sar add mov xchg mov xchg ljmp insb add sti lea mov daa mov pop sub out mov cmpsb adc lods ja popl xor mov fwait pop sbb jmp push dec cmp call data16 jg jmp dec sbb dec inc jo inc xrelease (bad) xor sub or call cmp repz fistpll dec dec icebp adc lds sbb inc mov mov pop aam mov loop mov je popf mov push jo mov (bad) mov sbb daa ret mov out lahf jns int3 add pop xor jae fldenv loop mov sbb inc jns xchg cld imul sbb movsl mov cmp fadds (bad) sub add xchg xor sub imul or push jnp stos (bad) xor and fldenv jle lcall dec lea sti inc repz jl pop adc adc or cwtl idivl jne add jae inc mov adc scas adc fnstenv out in sarb push pop pop adc pop adc adc add fisttpll stos ljmp jne adc ds and nop jnp pop adc hlt repz push aas dec stos or nop in in push xchg xchg pop imul mov cmp popa sbb xor repnz adc push pushf cmp shrb out xchg jne push imul int or add dec xor aas xchg mov cmp das sub out and push xor adc jae adc dec fidivl fisubr rcr stos mov mov rcll mov or mov jg adc mov (bad) ja movsb adc cwtl inc dec adc xchg inc les adc iret in out fnstsw stc out cld mov add mov adcb xchg xlat ret lret imul and aas cmp divl pop das adc pop mov mov (bad) enter dec mov inc xor cwtl jg lods subl cwtl std fsts lods mov xchg pop popf adc orb xor cmpl push aam sbb mov pop ret xor or inc or out lea xchg fs mov mov (bad) adc int push sbb repz call pop sub aas or push fcoml cmp xchg sti fwait hlt pop pop pop das or cmp stos orl xor bnd xor sbb test or out mov repz jg xchg movsb scas adc shrb pushf adc mov inc lods mov xchg scas add add pop sub test adc push xor lret adc push pop push push pusha enter xor sbb clc sub cmpsb adc (bad) add xor pop push add jg inc mov xchg loopne or mov ret fiaddl adc repnz scas ds adc aad movsb cld xchg cmp mov shlb or mov popa ds xchg sahf rcll mov sbb lock xchg push cmpsl adc and repnz lds dec fbld outsl adc lods lret in cltd xchg push lahf pusha (bad) das add lret call inc xor lods push mov icebp add sbb and adc adc dec sbb rcr jne mov mov pop mov (bad) xor scas into inc (bad) mov mov faddl mov repz and test lahf cmpsl sbb ret clc dec (bad) shr xchg aaa jno test push idivl arpl or dec push inc mov decb (bad) mov rcr inc ljmp pop mov jp push inc jmp test fistl or ror cmp imull adc add leave lods (bad) pop mov scas sub push out or out lcall mov in lahf dec packuswb pop mov movsl adc xchg dec dec add add mov stos push add push iret test cmp dec (bad) pop xor and pop in adc adc push mov push aam movsb adc pop mov or jge sbb pop adc (bad) into mov jae (bad) loop rcrl cltd adc enter ret aaa add outsb xor sbb lret cwtl fyl2x stos mov test mov inc add adc push and jg xchg jecxz inc adc insb adc (bad) out call popa or xchg pop or and xorb pop aaa rorl sub imull or inc adc mov adc std xchg mov adc popf pop lret aad or add sbbl add dec xor loopne jae cmpsb sbb add outsb lcall (bad) sub jb sahf xchg cld divb adc push sub jno fstpt fldenv lods sbb adc mov dec mov in adc idiv rorl fimull pop push dec push sbb mov in cmpsl adc pop mov hlt mov rorl out jecxz nop push adc inc mov testl sub xor cmp mov movsl or popa shlb rclb xor cmp adc inc push int rclb and (bad) or popa xlat push push fsubl dec jge and (bad) loope mov or pop pop and adc xchg push nop dec mov ret cpuid sbb popa pop test aas adc aaa mov adc fcmovnbe pushf les repz outsb mov mov mov mov shll ja lea mov xchg push sti pop out inc test dec or or movsb ja mov cltd cmp jp adc scas mov jmp test insl pop (bad) or adc arpl jg mov lods jae lret mov je push fdivrs aas mov dec shlb push xor jae (bad) std pop test scas adc jb pusha adc and movsb mov pop (bad) cmp pop pop sarb sbb lea (bad) sbb ss mov adc inc mov xor bnd fistl jne push sbb adc or (bad) fdivl xor sti cmp jge push adc cwtl xchg mov dec dec scas and shrl adc dec push adc outsb es nopl sbb mov arpl adc loopne mov and out or fcoms jns in sub jg mov (bad) mov orl adc cmp bound push pusha mov cmpsb pop xchg mov std mov dec push or stc xchg push sahf sub dec adc jns scas mov repz xchg js inc jno outsb rorl repz aam les xor addb inc xor jb sbb ret adc mov lret fiadd xlat cwtl dec stos adc lods daa mov outsb adc jcxz sbb (bad) adc aam pop inc push and xchg repz cltd aad or ds (bad) lock or jge push jle mov adc bound mov lods (bad) jl insb sbb add sub xlat sub adc movsb or sub jg cld sbb pop mov xor idivl fwait subl adc and xchg ljmp pop incl cmpsl adc xorb jg je add xchg add inc mov stc aad mov or loope or mov push xchg and pop inc sub lret mov pop mov (bad) imul or jbe mov cltd cmp sti dec adc xorb enter push xchg pop aam iret test sbb xor pop xor jae cs scas mov push adc add adc (bad) sbb jno inc lret push adc mov push inc fs (bad) repnz adc stos insl or dec insb xor es mov xchg cmp mov frndint add xchg push sub mov mov adc (bad) loopne adc popf das adcl movsl jg mov int repz ret loope jbe mov and dec xor cmovno sbb adc cmpsb sbb push addr16 mov div add mov lret adc ds jb pop fbstp (bad) andnps bound mov lahf adc push and ret inc add adc push stos mov jge fidiv xorl sub pushf test dec fiaddl or pop daa imul adc mov push add stos xchg xchg push xor arpl orl xor not xchg cli test cmp lds cmp adc adc pop xlat daa and mov (bad) push and int3 adc imulb adc mov xchg add mov cmpsl push iret cltd rsqrtps fcmovnu mov fwait mov sbb adc rorb aad push xchg ja jno in pop clc inc xchg dec pop adc sbb adc sub mov mov es out dec pop adc cmpsb decb aaa stos (bad) repz mov or loope adc pop xchg and dec in mov xchg stos jno adc mov mov xchg mov (bad) cli (bad) or out stc cmp into add xchg loopne scas adc addr16 dec mov repz gs aas sbb adc cmpb mov pop pop cmp ljmp push lcall inc push xor cmpsl das push adc push sub push pop ds test jl xchg adc sbb lods repnz push adc mov add xor pop in add aas enter adc gs jae adc cmp loope jle cmp (bad) adc or into adc les imul scas or dec mov mov out xor mov fadds sbb fstpt insb adc add fiadd xchg xor nop dec shlb stos sbb xor aaa (bad) mov cli pop nop adc push mov leave push scas add adc push andl cmp lods adc jle xor mov sbb in adc or mov xchg pushf lret dec adc unpckhps enter mov pop int3 pop adc mov popf test arpl or outsb adc adc addl or aam adc test push adc je xchg jns xor adc ds push adc sysexit mov add aad jo clc push dec popa enter adc test jecxz jge jle cmc repz sahf mov jp xor aaa pop adc and shl cmc ljmp adc sub insl into in or insb sub fdivp outsb xchg dec pop pop xor add mov mov jns stos daa sub and push push fs (bad) and adc inc movsb in int mov (bad) hlt adc sub pop jbe sbb push adc ds xor (bad) fiaddl inc adc test cmp cmp dec dec (bad) xchg ret jns jle push mov cmp adc gs test and pop cmc xchg xor xlat cmp movb bound mov pop dec rorl pop fstp adc xchg or add scas aas loop and outsb xchg loope pop xlat shrl lods adc inc adc adc xor sbb mov fldl adc add sub add cmp add inc lods lretw mov (bad) lock mov adc xorl push jo rcrl mov push clc sbb push xor jne xchg sbb scas xor insb repz sub push mov lcall jb add jg dec xor jmp lret mov jo add pop push pushf (bad) aam lods mov into stos adc push add mov lock mov test pop cltd inc nop adc adc mov sub sbb daa ret push adc adc mov dec pop pop push jmp push jl pop jno cmp test adc add push mov mov dec mov adc push xchg repz iret arpl sbb stos sahf mov das or arpl mov xchg fdivrp adc scas push sbb and lret sub imul adc dec jmp dec and inc or xor out sub adc add mov adc xor or or pop mov adc push ja mov divb xchg js pop mov dec hlt dec aas addl jge clc cwtl bound lahf xor adc xchg dec cvttps2pi pop mov in adc fsubrs mov adc fucomp mov lret jbe adc in stos lcall aas repz jae pushl adc or je fs outsb add es iret adc jb pop or jbe or repz dec sub push mov add xor cltd adc sub xchg insb add fildll cli lcall mov add sub daa pop es in fisub ljmp js xchg adc (bad) pop add cmp lea xchg mov scas clc xor add mov cmp aam repnz pop adc or sti adc mov (bad) cmp and xor jl or stos mov xlat adc mov xor (bad) xor add pop int3 jle push adc mov mov sbb or aas push (bad) divl xor and icebp dec mov in adc jb fwait nop push fadd repnz xchg das or jp xchg adc jg xchg (bad) adc xor inc adc aas dec cwtl lods pop push inc cmp adc adc and xchg std enter xor pop (bad) cmpsl push insb mov imul int adc mov jae add adc jbe mov enter adc inc popf (bad) dec stos fwait adc mov xchg and cli cmp imul ret mov into inc adc pop outsl pop fwait and adc or mov adc test (bad) ja cld ret push gs pop cmp outsl pop cli fbld lret repz mov or hlt neg mov popa cli mov lock xor in rolb add fistp iret mov fwait mov push icebp pop cmp je popa adc mov notl pop cld sbb mov aad sbb mov mov adc xchg xor daa mov or adc cmpl mov cwtl repnz bound je ret sahf or xor xor iret inc (bad) jns xor lcall cmp add ret push or mov lcall call pop add adc (bad) mov mov (bad) adc call out cmp push sahf stos adc jl insl test flds cltd (bad) ret pop and or sti adc xlat push movsl cmpsb mov shrb xor in pop cmpsl (bad) rcll mov jne inc adc jns mov movsb shll xor scas inc jo mov mov adc movsb mov int fsubs cli xor nop add and retw dec addr16 int push lods loope movsb adc rcll dec mov mov adc clc jle and jne adc pop push or ud1 push xchg xchg aad cmp jmp sub call push jl dec mov clc pushl test adc popf pusha in decb dec inc xchg push loopne js mov mov mov ret sbb mov stos out fs jns pop es repz mov (bad) xor or mov add jge pop sbb aam mov pop mov cmc adc mov xor pop ficomp xor mov cld sub dec repnz nop adc add hlt into stos adc dec or cltd inc sarl add inc cmp sarb cmpsl out lock inc adc int push jb push mov and xlat adc adc (bad) iret pop adc jb cmpb sub mov fsts arpl inc push adc ss dec test test pmulhuw jns push outsb lea leave shrb mov das push sub add adc test mov lret fmull xchg add fmulp sbbl sub cwtl mov (bad) mull (bad) into jno ss out or movsb repz sbb dec bswap repnz adc jle js jns mov sub xchg xor (bad) scas loope loop mov adc cld pop (bad) jae rclb pop into fcmovbe dec ja mov xchg shll movlps fidiv adc fild lods cmp adc xchg xchg out inc aam lret adc ljmp push imul mov ljmp xor aaa pop adc mov mov push mov mov sub jp fcom inc ljmp mov adc jb jmp mov les call dec xchg mov adc dec fdivr loope inc std adc jo sub lock dec xor fbstp femms add lods push (bad) push mov lret in into call and xor cmp lock mov or adc repz ret imul pop sahf js dec xchg jbe sbb punpckhdq mov and lcall push les test dec cmpsb sti mov iret adc jle push mov adc xchg push inc and scas fcoml mov test sbb aas cwtl pop stos pusha adc xchg rcll push shl xchg insl (bad) dec push sub cmp xor test mov fbstp or add xchg mov sbb jecxz mov and pop xchg dec jns das adc dec insl lret lea xchg mov mov mov rep movsl pop lea xor jp ds cmp into cli fidivl adc jns xchg adc jbe adc dec jp loope loop nop in xchg test adc mov imul xchg pop (bad) or push or jle loopne jno or je mov repnz in fs repz fsubp mov jne nop cmp or popa xor mov movsl lret rcll or mov icebp iret (bad) jecxz xchg adc insb push jmp mov mov outsb in hlt xlat jo loop adc out cmc sbb fcmovu jmp das mov bnd in mov nop and fcoml adc lods sub inc mov cs jnp xchg cmp or je adc insl dec cmpsl sbb add adc out fstl cld int3 adc int xlat lahf jge xor push dec in test stos in xchg mov pushf add test push lcall or hlt and add je fcomp cld mov push lea mov lret lahf in xchg rep js nop repnz or adc fyl2x nop mov iret cli in mov xchg push dec or inc icebp and or adc add bound xchg aam mov je rcrb insl dec (bad) mov (bad) lods xor inc popa xor and shl loopne and dec push fdivr ret outsl or and test mov and adc mov (bad) out push xor adc std xchg ja sbb mov sbb jo jge or jae and fimul dec ret jns and incl xchg (bad) in jmp mov xchg jb mov mov pop mov xchg push out js jg xor cmp adc jp dec push pushf and nop dec mov fist xlat movsl cmp imul jbe mov mov sub mov scas ret inc lret adc imul repz adc enter movsb pop adc adc push push (bad) in mov fdivp aam es pusha lret mov pop sub or ret pushf inc inc (bad) fsubl fstl lods jbe negb mov adc pusha stc sub dec or in repz stos mov sbb mov nop dec inc arpl pop test int pop in (bad) mov (bad) adc rcll mov mov cmc dec (bad) loopne adc push in adc clc lcall sahf aam movsl dec cmpsl pop adc or adc sub cmpsb cmp (bad) mov fnstenv jmp adc fsts gs stos adc dec pop lahf adc cld or adc idivl jnp imul push lret mov fdiv inc and adc hlt out inc sbb adc push cmp (bad) xchg xor je add adc aas pop idiv sbb adc mov shrb insb xor jge xchg imul push (bad) xor cs (bad) in add out mov xchg pop mov adc int3 jb sub fistpll xchg in repz test and jg sti fisubrl daa fiadd mov (bad) adc add repnz push mov add je xlat ss jecxz std push cmovno adc mov xor loopne xlat or or dec fildll faddl inc rorl jge sub cmp cmpsb sub and or notl rorl inc adc test aaa adc sbb and sti cmc inc nop adc adc std scas adc push or mov iret mov pop jnp popa bsr xchg mov pushf movsl adc mov push xchg in outsl adc cwtl jl inc mov jp adc mov jecxz adc adc popf icebp pop or in or repz jb add test jo or adc test pushf push pop scas inc adc add or jo adc sbb jmp push dec push adc (bad) mov fidivr adc add adc mov and rorb shll sti xchg jne mov or mov adc enter imul jmp sub sahf ficoml fcomps jno mov or push aad add pop jns arpl (bad) icebp and sbb shrl jo inc out xlat stos add sbb sbb aaa int3 jp mov or xor (bad) idivl dec decb cmp jmp popa dec pop adc ret push sub jb adc out repz repnz hlt or mov pop aas or add lahf mov push push adc sub sub inc lcall add cltd call adc xchg sbb mov icebp inc mov mov or lods outsl mov xor je (bad) cwtl inc adc mov jge add or das xchg inc fs adc push pop xor mov loopne and por addr16 inc ret aad lds fisttp subl or fstl fisub roll repz outsb (bad) fnstenv lea adc fcoms pop add test xchg aaa xchg (bad) fcoml out jg or adc cmp in mov jg div fninit imul adc in xchg ret ret xacquire aam inc cmc inc xor outsl cwtl mov push mov jmp test cltd imul mov pushf mov (bad) in mov (bad) sti jle imul sar or adc cmp xchg sub mov fidiv adc push cmp pop adc push repnz sub xchg pop nopl push sbb push cmpsl adc mov aam pusha add mov sbb and int3 leave outsb aad lods nop or lret sub adc (bad) clc repnz mov mov sbb ja (bad) int lret add in xlat (bad) call add jmp xchg movsb or dec xor pop xchg shrl cmp xor lahf and adc lret adc cmc pop dec lcall mov leave sbb jns out push mov add out mov push jae push add cmp rorl hlt xor adc (bad) xlat add cltd push xor mov xchg js xchg cmp adc out pop lock sbb shl loope mov int mov mov test or sahf imul pop (bad) lret sbb cmp add add inc lock (bad) adc stos mov pushf jg adc cmpsl popf adc cmpb call ljmp lods adc (bad) xor not adc mov ss lock pushf push adc gs add sbb mov adc std imul pop add arpl std mov dec adc imul adc in xchg mov xchg sbb (bad) rorb enter jb repz ds (bad) adc popf mov sbb addr16 pop stos sub pop ficoml (bad) xchg push jne or jg notb pushf or cltd dec scas std mov cmpl into sti addr16 sub bound outsl adc lret rorb dec (bad) or and adc (bad) fisubl lea push add dec pop stos cmc pop adc or insl adc push mov test lds xor aaa xchg int mov adc stos push cmp rcr mov or adc movsl imul push jge add mov mov pop push xchg repnz mov inc mov rolb jecxz mov fs mov dec add aas pusha fistpll repz push push mov adc aad iret dec inc xchg jge adc fidivrl sbb cmp out movsb adc jecxz loop sarb mov lret lea inc mov ds lahf sub (bad) jmp out add push dec adc aas arpl (bad) scas push lret (bad) mov shl xorl adc jge (bad) fidivr or repz xor aaa or or lret das mov sahf scas sbb mov pop mov xchg sub inc pop (bad) or gs ljmp mov cmp jne inc add fwait mov sti and leave xor mov add js mov adc std (bad) or and mov add inc popa pop mov outsb push xor imul inc stos mov pslld sub loope sbb adc cmc loop jmp or adc mov push int movsl (bad) adc pop mov movl cmovne mov ror call mov push mov sti ret mov jb loopne jg push fild and leave cwtl je sahf mov aam dec fstl loopne jle dec imul pushf and push or and adc insl movsb sbb add (bad) out jle rolb cmp sub xor aaa mov push out cld inc (bad) dec cmpsb xor gs (bad) sahf jmp std push popf xchg adc icebp dec ds adc subl je jge insb jmp ja decl sbb xchg imul lret add push add xchg js and mov lret cli or mov add mov cmpsl ret mov adc adc lock pushf and adc mov xchg lds xchg jo pop out jecxz xchg adc ds out outsb inc adc inc cli inc mov sbb xor je sub sub cmp mov xrelease lcall fwait adc adc loopne mov rclb rcr bound xor mov add into mov notb xchg jo sti test dec pop adc jge adc dec cmp cmpsb sbb ret mov dec cs pop fmulp in add loope mov test jg imul sub or mov and jmp pop rep or cmp jo fidivrl adc mov (bad) adc pop pop ds mov inc push pop (bad) jmp jnp push cmc jns outsb stc jbe xor adc aaa fsubl push push adc jae,pn js je xor add pop nop mov xor sarl fdiv cmpsb adc mov movsl sub mov lahf push push cmovne sahf xchg adc xchg into movsl mov les lcall dec lahf gs lds repz lahf stc sbb or or jae je icebp xchg lods bound test dec adc sub adc mov pop scas inc adc fisttpll add test jbe pusha cmc fwait adc pop das mov adc jl push test lret jne stos sbb inc adcl jp outsl scas imul repz push popa cmp and add and jl sbb adc or adc fcompl (bad) aam lret sub clc addr16 adc adc dec out push cmp mov mov cmp sti inc je adc jb adc dec push int3 outsb adc inc sets jg sbb sub adc test pop mov mov push shl iret fnstenv pop add testb dec add in rcll leave movsl (bad) aad movb xchg mov in jae add add inc mov xchg sub mov inc cmpsl adcl loop test xchg pop aam jg mov sub add mov mov lret sub int fdivrp outsb lret movsl out cwtl pop jne add dec dec nop adc adc sahf adc cli pop jl stos dec movsb mov addr16 pop repz jecxz pop or das pop inc cmp pop inc cltd lods je mov mov addb or jecxz (bad) mov cmovge push arpl sub pop lret or and xor adc xchg pop stos movsl mov lcall and fadd push jl jmp data16 cmp sbb xchg jp,pt xchg (bad) cmp mov push rorb aaa popa sbb adc sbb repz cmp shlb mov stc mov scas iret cmp cmp in idivb add inc aam adc and or and shr sbb mov sbb mov xor mov out and sbb inc lods idivl adc mov jno cli lretw pop lcall gs push jl sbb adc out xor xor mov ficoml mov dec inc adc shll sbb int3 mov xchg aad jg pop jge and xor mov rcpps jg test into pop aas jl adc js push cmp in adc mov adc pop int adc mov lret jle shrb (bad) mov adc xchg test xchg mov lret adc inc mov popf add mov adc dec jecxz mov jmp cmp adc lds xor jbe adc in ljmp test fsubs push (bad) outsb jg adc xchg mov loope out out adc or repnz adc push sbb adc cmpsb sbb popf out push (bad) int mov and stos add mov lock xor jb notl or push fwait adc and lahf mov xchg daa es fwait mov inc lock pop movsl ficompl lods repnz and sub inc add js loopne dec push jnp adcl popf subb push rorb repz popf xor stos notl xor fs inc imulb mov test xor lret adc call jns pop (bad) mov test lret adc ret xor sbb jmp xor xchg lar dec adc popa shrb int mov adc inc (bad) bound iret das mov sub cmc xorb add xor or lea inc outsb pop xor out iret xchg add sub dec mov sbbl fsub sar adc jns lea xorb andl adc das and add repnz xor pop inc roll incl call xchg sbb je jb xor add loopne mov xchg (bad) add sbb xor mov je int sub add adc leave loop movsl test xlat adc mov cli adc pop outsb lahf es (bad) shrb adc push negl pusha ljmp mov in mov iret pop or scas adc out mov jne xchg inc add adc les xchg fistpll icebp leave scas std shrb jb xor pop fadds insl insb adc mull and push pushf adc mov (bad) cwtl add jno leave mov mov sbb push bound psraw mov xchg mov or cld aas adc pop out lcall dec adc lret out leave adc xchg fmuls mov movsb (bad) mov mov mov mov add sub sbb mov and jae enter mov mov or pop sarb add out das mov push test loopne mov aaa (bad) xor push pop (bad) xor adc fmull (bad) mov xchg mov addr16 in pop addb mov mov jae push ficom cwtl inc mov push mov fdivrl inc mov fild stos mov popl add pop sub aaa inc movsb xorps repz mov ds test pushl xor mov push dec xchg adc adc arpl iret fdiv xor sbb test subps rep out int3 lcall or mov bound adc add sbb push xchg or adc test sbb and test adc pop (bad) xchg cld xchg adc lods and fsubr mov fmulp cmp lcall mov xor int3 adc outsl mov mov test cmp out ss push push pop cmp adc aas xchg into inc inc pop cmp add jbe les lahf adc dec movsl jg lock mov rcll loopne sarl adc inc push movsb jns mov fdivrs mov push and loopne ja add pop int3 lahf repz jge mov ret sub inc adc pop outsb ja inc fstl add pop enter adc jmp fmul sub repnz cmp sbb mov repz xor addr16 loop ss adc arpl pop enterw xchg push jmp pop push ja adc or pop pop add pop pop cltd fsubr sbb mov shl test xor test dec mov adc push popf add rol jbe ficomp in cmp push daa lods xlat and (bad) iret or loope adc push add sbb mov adc adc scas cli mov stos push (bad) sbb add lret out leave jp pusha push sub cmp stc xorl fisttpl int3 out rcrb sub adc lea xor dec dec cwtl pop mov push dec adc push jae cmp mov cmc jp icebp lods out or adc lods fwait mov repz addr16 pop sahf outsl adc (bad) ljmp iret and out add shrb and push out ret jns andl aaa mov mov mov arpl or int3 add mov pusha sub pop or mov xchg jo into xchg lcall jecxz xchg ret jae popf adc out dec clc mov out pop jns jp xchg cs push pop sub adc jecxz ficoml push mov xor ljmp scas add sub stc adc jo enter sbb inc cmp popa (bad) and mov xor or loop sub lcall ds and sbb push xor repz cmpsl mov cltd repz push and mov jl popa dec jns push ss (bad) mov insl dec mov pop pop jbe xor adc mov mov popf lahf js sbb bound fwait sbb iret xchg or repz es or adc adcl pop pop mov sbb loop jo icebp push mov jae adc fadds fs adc test xor adc or mov xor mov adc sbb dec stc mov cmp cmc test test mov adc dec or push cmp adc in xchg mov out sbb cmp mov test xor rcrl sub loop orl loopne cli scas fcoml and push dec and mov fsubrs mov pop adc stos dec stc pushf or repz pop adc inc daa dec lods add mov call push into adc (bad) test subb mov sbb cld push adc shrb mov (bad) xor lahf outsb out add mov adc adc mov pushf dec adc mov int sub jp loop jbe iret adc and fwait (bad) hlt sub adcl inc mov adc out adc xor lea sbb jnp mov mov adc add je aam mov call mov adc lods cmpsl (bad) stos (bad) mov xor jno xor or shlb mov adc adc imul and je xchg cmp out aam pop in mov punpckhdq jg lret sbb cltd adc divb push cmp (bad) adc sbb or mov scas adc adc adc dec inc pop xor ljmpw test xchg sub cmp (bad) xchg sub daa adc inc mov adc sbb lds jle mov repz loope fs adc sbb add dec repnz sbb dec xchg adc adc adc push xchg pop sub xchg cmp std push ljmp sbb mov mov movsb vaddsd shrb cmc inc (bad) jb pop js ret or sub (bad) ja dec and sub rclb or xchg add mov sbb mov cmp or jbe inc stos adc out in out mov sub les dec scas jae in lds mov adc pop push mov les xchg (bad) test or pop xchg cli mov jne and incl imul xchg ret jmp jp or or add inc je stos pop iret push mov inc loopne and add cmp adc cwtl adc arpl cltd sahf test push call das jmp arpl dec adcl pop mov adc les setg pop test cmp test mov add jb rclb (bad) gs adc movsb shlb add jne mov cs pop clc inc loope jb (bad) mov jmp pop shr mov push es (bad) mov in mov ret xor outsl rcrb jge adc loope mov push lahf sub ljmp loope mov sub inc add dec movsb aam add mov daa cmp negb les std dec xor fwait add jle adc cmc and adc (bad) outsl dec shr cmpsl adc inc (bad) fcom mov pop jg dec (bad) insb inc adc pop and sbb push dec (bad) repnz push add jecxz or imul fisubr jg push cmp arpl das inc and cmp lods cwtl sbb sarb pop dec je iret lds cmpsb xor pop pushf sub fwait mov rolb cld mov mov or lahf pushf adc sbbl jno ror or call shrb out sbb xchg outsl sub jnp sub pop stos sub add mov (bad) negl adc push (bad) and int3 in mov std adc adc mov push adc inc sbbb repnz push fnsave gs jno sub jns mov outsl (bad) loope clc (bad) repz into in mov lds shll mov sub push in clc adc loope pop mov xchg xchg sub jl ret out push jmp std clc js sbb jg adc cwtl sub repz mov popa xor loope mov pop rcrl mov and (bad) repz push rcll mov setle push imul xchg push cmp test dec out or xchg or stos sub nop cwtl xor adc aaa push mov aam jns mov in push or xlat sub jecxz inc or pop cmp notl and push outsl adc lahf das mov mov nop adc jne mov inc lds adc adc fwait pusha inc mov mov add shlb cmp ja scas iret fdivrl xor out enter inc mov mov dec xchg cmc es adc xor add or xor fs decb movsb or imul cmpsl lea adc jl xchg cmp aas dec xchg jbe ret and scas ror or or push jmp inc ret bound mov repz jecxz ja int out fisttpl addl dec nop add pop xchg fnstcw ret adc adc jecxz dec je mov pop enter inc cvttps2pi sub push popf or dec adc sti dec mov cmp adc adcl or jns inc push push in jae mov (bad) (bad) adc ficoml cld add push lock shll mov cmp addr16 sbb sub data16 mov repz sub fild outsl mulps cmp mov adc push movsb pushf cmp sbb adc pop xchg scas ljmp push test adc cmpsb lahf mov inc lock (bad) xor or pop test iret push jl bound jp stc ja lods adc adc inc sarl mov push into push push or icebp adc jl mov adc and pop mov cmpl ret dec or jp mov mov jns inc mov iret clc shlb lock mov test push pop adc mov sbb mov cmc jae cmc sbb out mov adc lret add pop adc and mov and adc sbb adc lods add dec sub arpl dec adc pop dec mov stos adc scas push mov jmpw push and pop adc lahf pop mov pop (bad) iret lock fisubr xor (bad) or or jecxz dec inc das adc mov jnp or test adc ljmp sbb xor popa mov sub hlt sub dec pop (bad) mov and add push (bad) repz adc dec cs repz xor ja lret adc (bad) push dec test icebp xor xchg (bad) hlt (bad) rclb mov ja or (bad) jo ljmp dec popf jmp jb fcoms push or push lock cmp adc idiv mov iret pop adc xor push add cwtl arpl clc sarb mov adc lods leave fbstp add or mov arpl and jne or mov rcll jge mov lds js push push dec jno push adc ja or xor cs (bad) (bad) mov out scas outsb adc inc and dec vmread adc leave std mov adc in mov jns mov pop mov js (bad) push rcl add jecxz mov shlb pop std bswap cli cmp mov hlt iret cmc add imul fucomip adc push mov push movsl (bad) (bad) adc pop outsb in enter pop sub dec adc scas xchg mov inc xchg jo lahf in adc fisttp adc sti js lss in ret dec pop jae arpl adc movsl add mov push repnz push push cmp fmull sub jle ret lahf pop jne sbb (bad) mov mov das (bad) adc movsl lcall enter or lods lea adc fsubrl adc sbb call adc test push js aam adc sub dec imul pop xor aad imul adc in xchg push sub cmp xchg xchg repnz adcb stc sbb dec idivb out mov adc int jnp or stos xchg mov or mov lret mov sbb xor push std ss push sub add adc aam push fwait ret insl adc icebp dec fisub inc mov cmp in mov xchg sub rclb jmp mov xor fmul pop xor fimull int loope sub int3 adc inc sbb adc (bad) rolb shl insb pop gs push push adc stos in lahf lock lods xor ret sbb imull adc pushf jmp adc lods ret dec push mov imul inc sbb mov adc jp pusha adc test scas adc out cwtl ja inc adc pop insl jl (bad) psubd lret popa (bad) frstor jle jecxz test sbb cmp repz sbb xchg ficom push mov xchg or and jge icebp or sub mov add jl mov paddw jmp pop imul jecxz nop mulb or (bad) hlt pop adc ja aaa daa adc and pop sub mov push sbb pop test (bad) rorb shrb xchg add push fisubr test imul cmpsl mov mov pop insl (bad) fsubl cmp jae rcll mov repnz bound xor adc adc and adc cmp fdecstp test push push ror hlt pop cmp imul test jecxz mov fdivs rorb push scas add pop jo adc push pop jne scas mov cli xor mov pop mov push fwait or push adc aam jbe mov into xor call or hlt sti xor mov (bad) xor adc mov pop nop jno pop sub xlat scas or sbb ret in aad jno hlt dec sbb int xchg lret leave xchg sub mov xor cltd repz out and cmc dec sti add cli mov or jle sub into loopne inc sub dec xor (bad) xlat cmc call in mov fdivr adc jb paddb mov mov or in lret inc xor xchg add mov xchg rorl adc xchg lcall mov dec lods (bad) (bad) adc pop jp shrb stos add call lock jne and adc xchg push push mov movsb mov or outsl xor adc sub cmp cmp iret (bad) outsb add pop cmc push sahf pop sbb dec xchg jmp es xor icebp jg repz roll or adc xor imul xor fwait mov sbb test das sbb xchg mov lods push xor imul adc scas (bad) mov push shrb stc sbb in lret dec sbb push or adc xchg add adc test inc mov mov inc imul rcl add mov xchg adc push sbbb das popf ss enter xchg and sub push adc (bad) movsl (bad) icebp jo (bad) adc test jno sub adc sbb sbb negl cli sbb inc dec stc insb and add clc add xchg adc jne scas adc push or pop adc imul gs adcl xor pop sub insb or popf push jnp sub or jns nop xchg lods and sbb mov mov inc fs fidivl lock out fbstp mov adc mov and mov pop outsl push dec push jns in movsb outsb pop pop inc sbb stc das and or mov sbb in test sbb mov mov out and sbb xadd jmp insb sub cltd iret out decb loop jns or lahf sbb xchg add sahf mov fstl fiadd loop inc sbb push sbb add push mov add inc lret sti pushf (bad) xor adc sbb stos xor sub add sarb imul scas mov add push sub lret pusha gs add xor mov (bad) rdtsc or cli imul cmc lea push adc test jle adc or lods xchg hlt bound adc lret adc sub pop cmp (bad) push (bad) cltd sub or xchg imul xor inc stos (bad) ficoml loop sbb test adc test cmp (bad) jae jo,pt add and add insb in (bad) repz jno jo mov (bad) (bad) mov adc rolb aad sub push or and shll and and addr16 adc (bad) lods ljmp adc cmp (bad) push push mov mov jmp shll stos adc jnp adc add or cld into adc dec pop sbb lcall enter or mov (bad) in repz outsl nop ret sbb mov mov adcb or shr daa lret mov adc mov insb mov into push lret jl and fsubrl iret loopne adc xchg pop mov js inc movsl fdivp or adc push pop cmp jle jge test insb sub mov push ret popa lds push cmp mov in ljmp mov mov clc (bad) dec mov pop jbe sub adc lock outsl inc les popf je push pusha mov lods xchg pop lds in mov mov ja stos fucomp push icebp (bad) gs add outsl stc adc cmc add int3 test rorb xor stos int mov int3 pop push out or xor (bad) or push movsl push hlt iret (bad) inc xchg pop out out xor adc rorb push loope jge je mov and adc imull test add or dec adc pop shrl push jne push int3 xchg adc sti dec add mov (bad) adc dec push in adc pop push adc inc aad mov (bad) adc add (bad) add adc movsl jl xchg lods dec adc bound into adc fistl aaa push arpl mov js roll or cli sbb push stos adc push jmp push sbb mov mov shll les cmp imul xor mov xchg test pop xchg rcrb dec lods sbb add (bad) adc mov rcll cltd ja in mov jl cmp hlt xchg cli add and push ret jns inc adc movsl push js xchg out nop fdiv cmp aad bound enter jecxz pusha inc nop push and jae lock jbe add sbb fmull gs hlt loop je pop into xchg sbb lea sub jp push (bad) hlt push xor aam insl adc jno cld mov mov cmp adc (bad) pop insl adc pop iret (bad) mov push test xchg dec mov sbb adc pop sbb adc jmp arpl daa ljmp and js jge and cmp enter repnz adc into push xor fs and xor test sbb cmpsb dec xchg hlt mov fdiv scas push or in push (bad) icebp rcll pop jns int lock mov std ret mov daa fs mov and movsl setp hlt sarb insb test adc fwait int push pop fdivl aad xor xlat call (bad) adc push pop call in cwtl fisub sarb dec out fs popa scas aas or jl cli sbb adc cmpsb add into xchg rorb frndint xor adc sub into sbb adc push ret punpckhdq and loopne (bad) or dec pop repz sbb leave (bad) hlt push mov aas push mov pop sbb nop push add mov jg flds aam adc psadbw jnp shlb (bad) std jge xchg test adc adc inc mov adc sbb jg inc call pop test inc jae push xchg adc notl mov (bad) mov lock jnp mov or push es out jg adc jo fsubrl int3 xchg imul adc fild add cmp iret push xor xchg inc (bad) or sahf and inc xchg push cltd mov movsl pop fmull adc push adc adc adc std mov xor jg aaa jl or into xor mov fwait aaa adc scas pop outsl das or repz add adc loop daa repz xchg mov adc (bad) jge cmp ficoml out scas (bad) jbe fsubrl (bad) mov add and pop sarb mov pop test push ja decb insb xor dec jnp or pop enter addl push xor push push jg mov inc push sbb sbb (bad) adc ja mov adc or adc push into cs pop cltd loopne cld loope xchg xchg (bad) adc lea (bad) movl negl fcoms clc adc push inc jae or pop xchg mov popa jne stc iret push addr16 cwtl inc cmpsl and out adc pop inc int3 movsb jno aas xlat push fiadd cltd mov push xchg fiaddl jo shl aas (bad) mov cld xrelease adc sub (bad) dec xlat push sbb adc or jnp mov xchg cwtl scas push mov mov add sarb rcl repnz fnsave push xor mov dec adc test mov inc mov notl pop cmp push por add sar stos lahf mov mov rorb push sbb push divb cmpsb divl fs jg and xor addr16 clc jecxz and push rcl (bad) (bad) xor mov mov mov pushf leave sbb in adc cmp inc adc into ljmp pop push es ja mov lds sub in push gs xchg or fdivl adc das aam xchg stc cltd adc scas aad mov mov lcall popf cmp adc fist shrl mov jmp cs ja dec ds adc push sub adc cltd xor stos xchg xchg xor add movsl inc cmc mov xchg adc std sub dec cmp mov cmp mov xor and sub pop mov xchg fsubp mov jb or int ret push push xor jl mov mov nop add mov push dec (bad) adc adc (bad) dec adc insb out adc and fldt stos pop aam adc inc je repnz adc and stc sbb lea adc fistl mov mov hlt sub cmp or jg add and mov adc push adc lahf inc repnz xchg sahf mov clc pop and xchg xor sub cmpsb notb in int3 xor pop popa add loope loopne (bad) mov jp sbb (bad) int sbb mov sbb adc inc push call rep sbb and adc inc test mov jecxz lock mov jb repnz jne adc aam xchg je adc adc jl add cwtl mov mov or lea pusha (bad) stc adc push jge and xor flds and pop push shrl sub xlat es mov fldl sub sbb mov dec sub inc pop lods jle out jp mov enter xor movsb jecxz (bad) fwait outsl mov sarb sbbl adc cmp push sub (bad) ja or fmuls (bad) cmc inc or pop pop adc mov jl dec aam lds mov std xchg scas aaa add insl cmp mov hlt int adc or inc scas jnp popf rclb inc cmc add enter aad scas int3 les add repz outsb arpl add mov jle rolb aam mov add xor mov int jl (bad) cwtl mov xchg and jle mov lret sarl jge int3 mov xor iret fidivl cltd aam rcll jb leave pop jle mov inc loope aaa mov add ret ret push faddp inc fprem1 push inc add push mov xchg adc lods add repz adc jae add adc (bad) mov adc inc dec repz or xchg mov mov lret adc shll ds xor mov lea add (bad) and (bad) (bad) adc push or fisubl mov out jne sub enter mov loop mov sbb cs adc (bad) mov (bad) xor in dec adc mov (bad) adc or neg clc push mov rorb rcrl inc fwait icebp mov cmp adc shr lds adc adc pushf sub push call cmpsb jmp lea dec cwtl je pop std les repz ficomp (bad) pop int3 push adc (bad) icebp push adc fistl sub test pop mov cmpsl sub popa (bad) cli adc cmp shl mov add adc ja bound fisttp notl xor push jmp hlt cmp xchg out lret arpl sub in lret and jno mov repz cli mov adc or fistp and adc and daa mov lea shlb nop pop or (bad) pop pop (bad) push imul jbe lcall jmp pop jno sahf and xchg pop xor mov pop mov adc fcoml mov adc sub jno and sbb adc fstpt test inc insb or divb cmpsb jns fs sbb mov aam or pop repnz and test bound loopne sub js call rorb fidiv iret ss lea or sbb (bad) or aad div mov movsb (bad) in push push pushf (bad) add out lods xchg iret in pop and adc cmp add mov cmp fcoms jnp out mov aad push xor mov ja repnz push sbb mov jne xchg push push fcmovnu add aam push (bad) xor ret out pop cmpsb and movsl adc or push xor insb fnsave adc cmc arpl inc sarb jmp pop xor jo add xlat ss mov adc mov lahf inc cmp adc (bad) jmp movsl or popa cmp fwait lcallw dec push fcoms rolb ret std iret bound xchg mov xchg aaa rorb add xchg jle or scas inc in movlps (bad) leave and lcall sarb and mov scas call jle mov sbb ret lcall cmpsl into jmp pop notb jle sbb fsubrs lret xor dec cmpsl (bad) push call add lretw fadd repz out hlt fwait sbb pop mov adc fildll xchg xchg movaps dec out fldl mov imul cmc lcall cs sarb jbe and lea pop lods mov xrelease adc jecxz push mov notl fs aas cmp clts imul jecxz iret rol ljmp inc dec shrb cs sub dec or js push and adc popf lea mov xchg adc fisubrl push mov mov adc jle cmp and xor adc lret mov test lret leave clc mov adc xchg mov lods adc pushl mov call pusha lods sbb nop mov ss or mov imul or jmp sub add mov jle negl add adc mov inc aad push push test mov xor xchg xor add xor (bad) jg out inc mov cmc repz test jg insb add call test and jp adc fprem1 xchg std aad sbb (bad) (bad) into mov adc and push push cmp (bad) cmp repz rcrb push jl adc pop adc mov inc dec adc insb mov xchg mov adc or out fisttpll psrld sub or leave mov dec out cltd sbb and mov out cmpsb in adc adc pop iret adc nop mov mov fisttp pop and jb mov adc shrl adc mov xchg xor fisttpl mov lock add (bad) or push popl out pop repz pop xor xchg xor popa mov adc inc scas jecxz mov inc (bad) cmp ret xchg ss (bad) nop inc lret adc daa je cmp shlb out cmp popa xor push adc (bad) rolb push mov popa repnz mov js add test or mov xor lock stos mov aam mov ds push gs adc sub push repnz fwait int adc add pop mov jne stos pop and dec adc xchg imul adc fs psrlq adc js mov shl jb aam sbb push pop add adc mov xor cmp adc mov xchg dec sub dec adc out nop add push xchg js xor xlat clc or sbb mov out adc adc std mov sbb int xor xchg (bad) cli in ret mov nop je add jecxz dec mov cmpsl adc pop dec (bad) imulb adc and adc xor adc cwtl sti adc and into repnz push mov nop mov dec cltd mov dec gs or repz xchg sbb repnz jns add or cmp pop les (bad) adc or out adc cmp xor add repz dec jno js rorl add adc mov xor clc lahf dec cmp iret rcr adc push (bad) call mov add in jecxz adc sub cli ljmp inc hlt inc xchg inc adc jl adc bnd adc xchg cmp aad stos push adc stc inc popf inc jmp jb jo (bad) xlat adc outsl out bound sbb stos in adc scas lock xchg push adc int3 mov xor push add out inc in mov js sti loop xchg push sbb xor int sbb mov mov adc xor mov lahf adc sbb mov mov pop (bad) fsincos ss data16 xchg cmp xchg dec repz scas stc hlt jg or pop xchg int xor add sbbl push dec int mov rorl inc addr16 cmp dec or cli repnz push pop leave popf ret jb rcll mov xor ja inc leave dec adc in jo xor xlat roll ret adc jmp stos cli jne xchg adcl xor inc aad mov arpl inc mov push inc dec or push cmp jp hlt or jecxz sub push clc adc negl fs hlt adc xor movsl jle sub adc mov or mov outsb aas sbb mov xor stos add clc push dec xchg loop push xlat add addr16 sub inc fstps adc stos cwtl adc mov add add adc fs xchg mov mov popa adc in mov xchg mov jl repnz lds outsl cmp dec xor nop cmpl arpl adc sub and pop in pusha dec ja scas pop loop ret and iret in push lea stos push imull rcrb xchg xchg inc je mov stos and fcmovbe aaa pushf xor addr16 jbe sbb cmp add xor rcrl cmp rcll pop mov in push sub movsl enter mov push add pop cmpsl addr16 dec iret das or ja pop cmp adc (bad) test or stos cmc in xor xchg sub rcl cltd rorb ds mov mov xchg aam sbb sub adc stos adc push mov dec stc repz mov enter in cmp sarb mov xchg pop data16 out add pop push out lcall mov sbb (bad) sar adcl xchg jo addr16 into pop (bad) adc mov adc pusha out adc cltd pop repz mov ja sub (bad) jg mov nop xor xchg scas mov pop cmp mov push pushf aas imul fucomi pop jae push ds iret adc pop inc mov je mov adc sub mov cmpsl push lods fs push adc pop shrb inc adc or gs add sub (bad) hlt and sbb push or pop xchg and repz push mov and bnd outsb xchg adc adc pop jge inc mov (bad) mov mov arpl jne adc lahf mov mov sbb adc jae mov out out adc jno fmul mov out adc (bad) fwait scas cmp cmc add or xor dec mov adc enter dec (bad) inc push and leave hlt fwait pop mov das icebp (bad) incb or pop xor pop inc jb out mov push adc scas sarb aad popf and lret rcrl xor adc mov xchg jmp adc pop leave add sbb hlt int mov mov scas mov mov cmpsb mov push in jne jge pop call adc outsb aaa movsb imul gs cmpsl cmp adc ljmp int3 mov lds mov cmp adc xchg aas popa pop stos sub mov (bad) push fldcw mov inc xchg shr push mov and in push adc xchg fldl gs mov mov adc adc lcall out rcr jae stos pop das push push insl adc test pop push add or loopne or fwait cli push out inc push mov inc icebp scas jno mov leave rcr inc mov cld dec or adc mov dec shlb lds mov inc adc or pop shrb adc inc pop sub mov mov roll dec inc scas (bad) jno rclb or xor cltd dec fwait mov mov jns and ret xor ljmp inc rclb dec adc aad int3 push mov test mov pop repnz xor imul mov push js add dec adc adc fdivrl (bad) lea push outsb sub outsl divb cli push stos fwait jno cwtl hlt mov popa sti xchg mov or push jg jnp mov lret stos lock mov and sub or cmp add jge cmp adc pop adc xor repnz std add loope push cmp sub mov (bad) fistpl jbe adc fcomp lahf cs hlt jmp xorb adc mov add mov adc xchg pop jle xchg adc dec (bad) pop push iret mov shlb or and into mov pop pop std movsb adc xor sbb add adc cwtl popf out pop pop lret mov scas imul sbb jae dec aaa cmp sbb sbb mov lods pop test shll das rclb dec scas fwait pusha xchg mov and xchg adc andl nop bound mov les ljmp imul jecxz xlat outsl jmp pop inc getsec les dec or or adc addr16 mov adc scas repz inc cmc and cli mov mov push push stc popa xor pushf repz add inc cmpsb jae inc mov pop fdiv pop mov pop add adc mov fdivrs sbb inc adc cmp gs pushf inc fs jae or adc jl stos sbb adc in dec adc add je iret xchg xor rolb mov xor imul or daa dec xor adc insb sbb das push clc sqrtps add aam call adc mov out cmp inc push pop xor lret pop dec (bad) mov shrb jecxz jp push sub or notl pop jge adc cmp cmp inc xchg xchg mov adc sub fwait sub and dec out pop jno add in mov sbb xor out or mov jne mov mov (bad) rcr add mov std mov cmpsb into cmp rorl adc lods cmp jo imul rcrb shl popa ficompl sbb into adc cmp mov jecxz pop lea andl in cmp rclb xchg outsl mov push iret daa add orb inc popl enter adc push push push dec loop outsb adc mov adc test shlb jmp (bad) insb adc push mov sub stc adc addr16 lret fcoms imul loope xor jno insl adc sbb fildl and je push stos gs js fxch or das mov sti or jge mov mov inc lods sbb push (bad) popl mov stos loope (bad) fnop adc lds repz push mov lods inc cltd push adc out cmpl lcall xor sub cs das adc or cmpsl push insb pop pop in rolb (bad) inc bound and adc mov (bad) cmc jge fnsave xchg and pop add sbb dec jmp sbb adc xor mov (bad) dec pusha and outsl xchg or sbb adc cmc lock mov or mov lods mov sub lock cmp mov mov stos loop sub scas dec jecxz inc or lea adc mov fcompl (bad) js adc pop dec shrl adc pop cli push adc pushl js dec lahf cltd data16 arpl pop sahf jp sub sub mov mov icebp (bad) xor sub xor insl fiadd adc push movsl add lcall and push rcl shrl adc adc cwtl repnz fidiv ret mov sub push add sbb jbe psubd xchg scas add and mov aad das psubb notl dec cld push jb adc adc loop mov in insb xor lcall mov lods xor cltd adc in js cld push push mov insl jne mov bound (bad) scas or and xchg jg test loop adc mov (bad) cld fadds js or or call add jo and sub sub repnz movsb imul das jo mov pop add dec xchg push test in nop or sub fadds shl jmp mov push mov imul pop lods dec ljmp adc cwtl daa jnp (bad) jecxz mov ljmp sbb arpl push inc mov push xchg or mov fimull rorb pushf mov ljmp or pop fsts xchg lahf xchg sbb xor adc add cs and dec inc adc nop fcomip xchg stos in adc enter cmp es pop cmpsb jmp add fmuls icebp mov pushl add inc pop roll mov push lret xchg cmc imul dec and mov mov jb popa loopne ret fnstcw fucomp int cli ret cmp adc mov repz xchg ljmp mov daa push loopne lea repz out adc pop xor sar sarb jbe mov sbb dec mov push cmp xor add jl adc daa adc dec sub adc sub scas adc jnp inc into jns sub movsl dec cld ss mov mov and loop jno xor cmp add aaa xchg in xor (bad) adc push insb out lds adc push cmpl and or push loope jecxz js inc or fist lcall inc adc aad cli adc add xor push mov (bad) mov and sbb pop sbb and inc or mov jb repz mov mov in andb pop ljmp je sub (bad) jo jp adc (bad) mov sbb ss xchg cmp adc shrb dec (bad) push adc and sahf sub xlat adc enter lret paddb stc adc sub je stos scas cmpsb shlb jmp pop inc decl insb sbb dec stc (bad) xor sti test loopne sub or push (bad) adc ss or cmp (bad) or mov cmc xor adc movb xorb sbb adc jg ja fstpt (bad) adc add outsb and out les adc popa dec xchg out std push pop inc adc iret popf notl cmp and inc push rep adc or mov outsl sahf xchg and adc add fnstenv push push adc mov jbe add adc fwait push jge push cmp insl adc and push cltd cmp cs sbb pop inc and jg cwtl pop sqrtps insb pop jecxz fisttpl sbb adc xchg cwtl inc adc xor mov cld dec xor or or outsb lea jmp inc mov sbb fdivrl adc mov pop arpl inc dec lods sbb (bad) cmc call mov test mov int lds adc xchg and cli inc adc cmp jbe mov fldcw or je imul cli movsb and jmp roll xchg jne cs imulb xchg jne negl sub xor push mov insl push mov mov adc pusha push xchg pop test sbb dec lock mov lahf cmp and or fstl or scas xor sub adc icebp out mov xor enter xchg mov or push repz or sbb nop scas (bad) loopne adc cmp insb mov or leave xchg sbb sbb adc out adc mov gs push loopne push adc popf xchg adc jb mov mov sub sbb mov lock rcl adc punpckhwd push inc add cwtl and std sub dec cwtl add into mov xor stos repz mov mov add repz out add dec stos lods pcmpeqw mov mov push in dec das leave stc repnz dec or xchg cwtl and jecxz or jl movsl imul jg (bad) mov cwtl test cli pop je or push inc mov addb sub adc mov sub ljmp lahf daa dec adc adc xchg dec xchg xlat and es ljmp adc dec insl in mov mov mov mov (bad) mov test jnp jle mov adc jb push out push and (bad) cmp xor jp movsb sbb dec add aad fstl jle xchg mov shlb xlat pushf pop mov add iret js out add ror daa cmc add ret dec pop hlt (bad) push fucompp adc mov mov enter jae pop adc jle mov jno inc sbb cmp add mov dec leave adc mov xlat jns inc mov adc fmul push push popf mov lret cmp outsl bound add ficom mov mov das push push pop push pop pushf push sbb cs jmp jbe adc xor mov and pop jne mov movsb mov insb push sub data16 fistpl shl cmp add ret xchg fdivl and mov pushf xor ja xchg inc and cld cld imul fcoml popa icebp inc cmp pop lret gs leave push and jns dec sahf adc clc jb (bad) mov xchg aaa inc lea push rolb outsl cmp mov jge push push (bad) sub sbb sub adc cmp push in push jae fsubs jns adc rep in push xor push or xor pop add jae je dec adc ret pop jne (bad) jns adc cld cmc xchg sti sub repz mov (bad) lahf das inc or mov mul repnz xchg (bad) pop clc rclb push mov hlt insb in or sti mov xchg pop mov add add hlt imul mov sub adc nop aaa mov in pop je (bad) int mov adc sbb push cwtl int3 (bad) xor outsl mov jge mov mov mov sub cmc pop adc scas mov adc add or (bad) adc out repz jmp cmp roll inc adc ja xchg adc lahf and mov clc adc adc jge lcall mov cmpsb mov xor pop dec and sbb add cmc (bad) lock mov test adc jo push xchg dec inc xor popf imul loope daa xor and push adc inc int inc jge mov xchg mov xchg das je jns (bad) mov sbb pop pop jmp mov inc lods fildl hlt fwait push or push pop add loopne jecxz popa push ljmp call cmp jle cs inc push push sti push mov sahf xchg loop or in sbb jns or out aam xor xchg add repz je add insl aas ret das push pop jo stc cmc push dec fnstsw (bad) adc sti xor das dec fbld ss incl rcl into adc sbb inc push movq (bad) sbb movsl jnp pop gs arpl mov repz pop hlt xor pusha movsl ljmp pop call sbb mov mov outsl adc sub enter movsl lea and test add xchg jge ret push push mov lds mov test jle adc gs call aaa sti push repz outsb sbb les bound sub cmpsl pop sbb and jp dec aam pop stos mov adc push dec mov pop jecxz mov sub daa adc lea and aas sub xchg cmp data16 or dec xchg repz jno add add fmull addr16 jp hlt push aam mov negb (bad) or aam xchg insl lea andb icebp cs xchg adc adc fistl dec adc inc jbe fnop adc (bad) pop or inc cmp jg faddl push fcmove xor js or daa xchg dec and mov inc jo in lea cmp adc insl inc movsl sbb dec mov adc mov xchg repz in out je push into or adc lcall adc ret data16 sahf clc mov mov sbb push inc add xor arpl adc (bad) xchg push adc sbb aad data16 mov (bad) fnop or and ret mov out cmp xor and mov ds cmp mul sub ja mov fcomps repnz push pop mov les cmpsl insb daa sbbb or mov mov in das out dec push cwtl dec adc movsb cld mov test sqrtsd adc sbb repz mov addl sti inc rcl (bad) mov xchg stos lock add pop cwtl imul mov (bad) add and adc and push int pop int3 xchg inc xchg stc sbb lea adc ja sbb repnz fiadd rcrb mov or cmp xorl dec sub imul pop adc dec push adc frstor je flds adc xchg (bad) jne mov rcl adc int jle inc push adc cld add mov inc mov adc jne push jl mov lahf (bad) xchg mov cmp push or sbb xor sub arpl pop scas adc hlt inc mov js int3 int3 rep in rorl adc sub push and pop push mov inc ror cmp loop fildl lret mov inc sbb mov inc mov rorl adc xchg daa sbbl add gs mov pop lds jp mov or dec cmp adc inc fcoml mov inc rcrl mov cmp stos jno mov xchg cmp or sahf movsb or imul (bad) jb lods adc (bad) das mov jno mov jmp ljmp sti inc mov xchg adc cmc mov test cmp popa mov push xor divb sub or mov adc push mov inc xchg sbb imul adc mov lret outsl dec mov cmpsb fcompl inc flds sub aad sub enter lahf mov in fistpll bts scas adc mov mov loop cmpsl mov in imul adc (bad) or mov sbb jg mov out aam xor mov jl or aaa sub mov pop jg adc mov adc clc cmc sub fs or aad inc adc popa adc sub lock pop or xchg push je adc mov adc add pop dec adc ss sub ror xlat push xchg push xchg adc sbb lret adc jo (bad) xor rorb lock mov and adc mov sub push dec xor sbb pop stc addr16 cmc adc pop xor jo or xchg mov mov sbb loop push mov test pop mov pop push adc sbb mov sbb adc out insb mov repz cld out fs movsb pop (bad) pop lahf outsl sbb xchg iret or dec push push jne movsl test jnp std add cmpsl enter mov mov push adc jg shrl adc mov adc push mov lods in jno jecxz adc push adc jg jl sar (bad) sahf in cmp sub cli mov inc cld adc pop ss or (bad) enter (bad) mov add cld adc cs shrl or cmp and (bad) pop push mov sbb add adc pushl popa or or xchg and std adc add stc andl (bad) int3 mov xchg xchg mov inc fnsave or pop or mov adc inc call inc jmp xor push scas cmp sbb stos adc cmp pop pop or adc mov and dec (bad) mov jns pop cmpsb adc les iret pop adc adc push (bad) dec fldenv xor inc sub dec adc sti out jno (bad) dec fwait adc (bad) mov adc std push dec hlt in and ret (bad) out mov nop pop mov pusha jbe sub dec lock leave xor pop fstl aad and sub nop cltd xor sbb scas rcrb mov andnps rorl lret adc inc pop cltd (bad) jo iret xor pushf or dec into or stos gs sbb mov inc popf adc data16 sbb in inc stos mov cwtl pop mov cmpsb or mov shll (bad) add mov outsl insl push cmp bswap rcll mov test cmp xchg push je jle adc xchg dec xchg pop in adc sti fisttpl adc popa and xor push push add sub push pop dec ret repz test mov add das adc sub sbbl les subb push or mov adc inc fsts jle adc and (bad) adc or adc pop rorb rcll push push mov add mov xchg inc les outsl sub xlat pop adc lahf cmp mov popa daa sub sbb test mov or mov imul or xchg xor and (bad) mov xor cmp das mov cli add cmp add scas inc ss call es jle adc decl xchg adc lcall inc xchg out popa or je mov add mov pop ret push stos add std adc lahf mov xor or insb cmpsl adc sbb dec movq sbb fistpll (bad) inc arpl sti mov jae adc add or cmp popf test adc loope mov sbb int jle (bad) je int3 push adc stos xchg push adc bound hlt pop or mov int3 in adc ret jmp mov pop gs xchg and pop out xchg jnp inc scas mov sub sbb push fcoml lods out sahf jnp xchg lds mov mov mov sub sbb adc push (bad) loopne add repz cmp adc sti rcll xor dec sub imul (bad) xor outsb adc sub imul mov jbe out sbb stos dec mov mov mov pop xchg bound lcall insb (bad) mov add out in insl sahf int3 (bad) (bad) js das mov movsl iret repz mov sbb push add daa add enclu ja xchg adc js dec mov mov out cmpps add add nop jmp (bad) adc gs enter or loope out rol (bad) mov inc gs and push insl jg and shll sub mov mov repnz lahf ret cmpsl (bad) mov mov jo jns mov mov sub movsl cltd xor adc div pop adc inc in mov adc lret push sub mov test inc lods clc adc mov loopne addr16 xchg in repz mov xchg fwait dec add int3 repnz (bad) inc stos adc jbe fsts add leave cs adc pop and icebp xlat or pop lea or divps mov xor addr16 dec rcr jae fidivl adc shrb adc cwtl jl sar or mov mov rclb addr16 cmp inc int3 ja push sahf inc adc mov sbb adc out movsb mov xorl add adc jg cmpsl add cmp mov inc jne ret pop repz outsb mov rorl add (bad) pop inc mov or adc sub bound adc sub mov (bad) adc xor (bad) das sbb push pop pop (bad) sarb leave xchg push adc push fnstenv lea ljmp add cmp fsts and mov adc xchg call push adc jge add dec divl pop mov (bad) popf adc xor enter jecxz and je data16 inc fwait adc xchg test or add xor orl add inc test (bad) sti push push and sub ljmp add adc add jns ljmp jno or lret aam or repz and adc mov adc xchg repz mov xchg adc sbb pushf sbb mov push clc jno xor push (bad) or movsl jbe inc cltd popa sbb jecxz adc cld xchg push pusha mov inc or xchg int3 jns push push cli adc repnz jno mov and lods mov add push or fstp adc xor cli in inc mov (bad) sti movsl out je mulb stos xor xchg adc adc je addr16 ljmp out cmp or xor repz cli or test or xor xor pop rcrb sub imul mov mov mov jne sbb mov push add pop pusha jmp insl sub lahf imul int or push aaa dec ljmp sbb lcall or adc movsl mov setle cld adc movsl and adc lahf test ds jge jo cmp out addr16 sub pop inc and popa in out aas jg push adc xor inc dec cmp das (bad) mov imull rorl gs adc rcll aaa (bad) cmpsl cmpsb inc xor or xor add xlat dec xchg sbb out adc pop pop out adc pop pop pop adc out mov cmp xchg xor aam adc jge or testl scas adc sbb pop out ficompl pop (bad) rcrl std dec fistpl adc pop sbb or gs push adc add sub icebp mov outsl add insb jo in nop adc mov fiadd mov mov xor adc inc daa dec sbb pop cwtl xor jo push popa inc adc daa fwait das adc sub jns mov shrl les sbb outsb inc add pushf popf mov mov cmpsb cmpsb pop pop fidivl xchg push cmp fsubl pop jg out and shlb or (bad) (bad) mov adc jl pop xor in je dec mov and test xor adc add adc mov dec (bad) xor pop mov loope (bad) hlt icebp inc add ss and inc adc adc xchg inc ret pop popf je test adc (bad) dec mov sarl xor xorb fcomp adc scas sbb sub mov mov cmp xchg sbb scas sub scas (bad) mov push in xchg outsb sbb jg fbld out adc test jge shlb fwait imul addr16 nop in add mov sbb adc and add adc sbb mov mov mov jne mov xor scas mov (bad) jbe icebp cmp test leave repz and pop inc rep stos xchg or push xchg add shrl dec adc out imul aam divl adc push jb dec pop adc jl cmp fbld and sub push cmp hlt adc mov adc add or hlt jecxz (bad) outsb adc xchg sbb rcrl and xchg in or pop adc (bad) repz and adc mov inc andps popf cs push repnz rcll lods movsb jae xchg or mov or inc fistpll xchg or mov sub push (bad) mov mov add ja adc pop mov cmp add dec adc mov adc dec pushf adc adc cmp adc dec fwait sub pop into add shrb xchg ret cmpsl aaa adc push pop test je xchg popf sarl sub repz add sbb adc lret xchg mov shrl fsub add sahf popf adc mov sub push xlat hlt lods adc cmp jae adc and rolb mov shrl cmp xchg and adc lods cmp mov adc rcrb lret cmp add xchg xchg sbb sahf pop adc jecxz sbb and adc dec pusha dec lds in mov and leave push mov add sub addr16 std xor adc sbb mov mov jns mov loop mov pop adc in add sarl or leave int call inc rol or pop (bad) gs push ret dec add adc cmpsl (bad) jb push fcoml mov mov (bad) stos ss adc xchg mov jecxz lret sub sar adc and stos xchg pushf adc sub dec jl lods lahf mov rorb dec les repnz repz jmp lods add imull adc shl sub sub mov and (bad) in adc out pop or jmp inc andl popf jp adc dec sub test lret lea cmp xchg push outsl lcall sub imul leave xor fbstp and aad mov xor jb test push sub and adc push jne mov xchg (bad) dec (bad) movsb lds lcall mov out jge add arpl mov rolb mov mov cmp cmpsb in notl lahf out scas cmpsl loope movlps fwait jecxz stos pop mov fmulp sub outsb mov pop or aad adc iret mov pop jns inc sub out xor or insb repnz adc pop or push sbb cmp xor adc dec rorl push nop repz andb mov rclb dec pop dec enter cwtl inc cmp and in xchg dec data16 test andnps adc shrb mov stc loopne (bad) dec ss jl sub push sub sbb fidivl push adc lods adc mov xchg sub adc dec sbb fcmovu aaa adc pop repz or adc xchg lods adc fs nop (bad) adc sbb mov adc fimull jmp loop cmp (bad) push test adc sub push and push repz sub pushf es mov gs notl push or ret pop cwtl push mov xor (bad) pushf mov mov pop mov cmc jg lret fcmovnb add dec xor mov sbb push popf fdivrl popa sbb adc in movsl rcrb cwtl outsl adc into adc in jl ja mov inc out and in xor push adc sbb jl push aam add subl or mov lret rorb mov cmp mov mov adc mov jecxz push or popa (bad) js scas push nop (bad) push notb push out mov gs pusha in pop fldl imul add js inc xor lret leave sbb mov sub mov and test sbb (bad) addr16 cmovg loopne popl jae sub push adc into add adc hlt mov lock sub scas xchg nop ss or int3 outsl add nop mov repnz add int3 push movsl or or inc push xchg mov subl push adc push je fcompl (bad) jne sti push bound jmp mov ficom mov mov imul adc sbb aas xchg xlat adc pop inc repz push imul ret popa or pop adc out lret es xor and hlt fadds lea mov out jl adc jecxz or inc xchg cld aad mov sub add push sahf lods mov (bad) cmp cmp xor sub mov sub loope stos adc push in mov rcrb adc cld or adc insb xor jecxz push add adc cmp fimull mov xor stos dec sbb cltd and iret push adc and lds or pop jae or fwait rorb cmp push dec adc cmpsl fs adc adc lret mov cmc push pop add adc push roll sbb cwtl push add or insb loopne movsb andps dec dec pop sub nop leave cwtl xchg adc aam jnp outsb fstp cmp iret scas xor push repz pop or jne jecxz sti push xchg pop (bad) unpckhps pushf xor fnstenv dec push mov or inc pop inc mov cmp leave (bad) (bad) adc jecxz push popl xlat and mov add cli clc or orb popf mov and (bad) dec sbb mov repz mov jae int push mov ds shll jbe aad jmp or test fsts cmpsl sbb jge stos mov adc push add adc pop xor cltd xchg mov outsb jbe push movl lods in ret sbb and iret sub mov outsl adc arpl adc or mov dec adc movl int pop das push cmp jge stos movsl and xchg or xor sti or adc pop mov xchg aas int add sub sbb xorb pop dec xchg jg add dec push shlb int add notl xchg iret (bad) icebp mov mov xchg adc repz or repnz adc gs inc adc lea pop push (bad) sbb (bad) and lods pop fadd fwait pop adc loopne popf adc sti jecxz imulb notl sbb xchg lds inc lcall vmptrst dec lock rolb sbb std aad cmpsl adc xchg outsl cmp push and mov in sbb mov sbb sbb loopne outsb mov pop lock xor leave scas pop mov sub adc push enter adc (bad) cmp add ja std (bad) inc xchg adc jp inc mov (bad) sti lock and push sub push leave or lahf bound lds jecxz arpl mov xor mov jno mov andl add pop ja enter mov (bad) sbb add imul pushf mov dec lock fs jns fisubl in mov adc clc and mov int movsl adc jg sbb sbb mov mov xchg inc adc lds sbb es or add repz fisubl stos cmpsb loop xor push rsqrtps add pop mov clc popa sub call dec outsl adc or sub loope je cmc lret in xor cmp insb lahf loop out lcall fwait mov adc fsubrp adc xor adc sti in push fsubrl mov or je in jb sbb movb push cmp cmp pushf push dec mov gs mov push jecxz jne adc daa mov das adc in mov push xchg aam aaa add (bad) mov xlat jmp xchg call push pop or into jnp mov lcall xor (bad) or inc adc popa test adc test push stos lret xchg mov dec and (bad) sub daa (bad) or xlat sub inc mov pop aaa icebp lock adc loope rorl jle loopne push sti fldt mov cmp push pop test adc adcb shrb (bad) and xchg add or add push stos pusha adc sub jp inc inc pop add scas pop xlat adc xchg xor ret lock adc mov jns sub shr sbb loope out adc mov dec xor inc sbb adc shrb fldl cmpsb adc xchg stc sbb clc imul dec sub cmp adc mull movsb push and cs mov rorb add arpl dec fisub dec push sbb xlat pop js mov cmp das sarb mov cmpsb cmovno imull mov movsl mov mov rcll repz sbb int3 out (bad) adc adc and inc xorl adc les jge out push mov xlat xchg imul and dec icebp adc mov dec sub cmp pop adc insb scas sub dec cmp mov fldl adc jge icebp jno mov sub push lds adc jae inc inc dec aas adc mov mov (bad) or sbb sbb divl out xor cmc push pop mov adc pop add fstps and adc fcom test rcr daa lea sbb jmp jne decb push out roll aad add lret mov cmp (bad) push inc adc inc push scas repnz into pop sbb sti jb xlat pushf jl mov popf mov out adc mov cmp aaa mov sub imul loop shll xchg adc lds loop je or add sbb inc adc jecxz mov pop mov ds or mov jl in fcmovb loop into add in inc jle sbb cwtl or jge push sub fimull and mov fs sub adc call push jp fistl mov xor ja jge fstps push loope jae adc out imul mov fwait inc fistpll or dec push insb mov cmp leave adc jae hlt adc int jp mov dec imul adc stc scas adc adc fistpll sarb call aam ljmp enter push pop sub xor aaa incl ds mov popf pop or sub or repz cmp jo insl xor mov orl out std pop sbb adc lds sbb mov mov loopne jecxz add sbb push inc repnz and aad in les adc jbe xchg xor adc jae icebp xchg fistpl xchg or daa jne imul insb mov inc pop in bound adc es (bad) lods ja dec or out add adc incl mov ljmp nop xor (bad) fdivrl adc push adc lret aam pop adc adc dec jae xchg pop adc mov xchg jge lds xadd ja pop push push rolb pop push cmp lahf or dec mov xchg mov lret mov data16 (bad) adc mov testl repz cli push mov cmc sub sub je rorb int3 mov mov ret cwtl imul pushf aad test lcall mov (bad) pop div pushf (bad) and inc sbb sub or lea jno les mov mov inc outsl push adc lock and xor stos std xor xor out icebp mov (bad) hlt sti cmp sbb adc dec rolb mov adc lret or sub in loopne lcall jmp cmp ja clc xchg repz gs fidivrl mov cmp das mov mov jns pop sbb xchg cs repnz pinsrw out cwtl mov push enter xchg into adc or sub mov and repz sub mov mov subb fcoms pop pop outsb stos aad gs adc jbe mov cmp mov adc sbb and jno into dec mov repz arpl cmp cld mov stos aam addr16 adc add pop inc jle hlt jnp add addb iret in mov mov sub cltd or arpl sbb lcall mov adc dec sti cmpsb adc or rorl adc int xor adc je stc mov or inc pop fs in movsb adc push cltd mov jne push pop leave dec mov xchg add or push xlat jae jmp decb jnp pop iret add xchg adc aaa sbb mov mov and or ljmp jle xchg fwait (bad) push int3 mov jne js pop movsb (bad) aam repz xchg fnstsw in mov xor (bad) pop push shrd repnz adc adc ss xor fcmovnbe (bad) mov scas bound pusha out inc adc xchg add push mov xlat mov pop push out (bad) in push dec pop pop dec xchg fbld bound mov mov ljmp cltd adc int3 mov mov xchg and push sbb rclb xorl and addr16 xchg mov cwtl aaa in jl in sub add dec mov (bad) arpl mov mov pop jns ficomp jne stos add sar xchg mov xchg jge and adc dec lret cmp add jle scas or jbe cs mov repz or xchg lea dec adc mov test std push (bad) or test sbbb dec aam gs std jge adc cmpsb addl xchg xor mov js adc jo cmp jae setnp adc mov cmp sub adcl dec scas adc dec push shl and repnz inc adc lea and inc pop add pop sbb out repz xchg je notl adc xor or push test repz jns dec cmp dec mov inc jb es stc int pop push push addr16 adc out mov fisubrl adc push (bad) test jg mov sahf shlb pop sbb and das or dec inc mov lcall adc mov rep and int push (bad) mov cmp test int3 mov lcall cmp movsl jle (bad) or adcb inc (bad) lcall inc dec lret je or jo mov dec cmp inc icebp adc aad jbe and adc jge cmpsl repnz mov mov leave xchg xchg push ret call xchg pop mov in inc lods out add sbb enter jl repnz adc popa sbbb lods push ret push add dec push pop movsb lahf xchg xchg out xchg mov loope jae xor add sub icebp push (bad) jne or lahf lret in xchg bnd lods add xor fwait mov xor jns in and mov sarb adc xchg outsl cli adc repnz adc mov push xchg jmp mov adc addr16 pop push loope adc addl adc mov popf mov mov dec or mov mov pop fimull fstl ja push jae or (bad) subb inc adc in xchg cmp ret push adc add jno cmp repz dec out jo in adc adc xchg aaa addb sub test popa fcmovne add add fdivl adc sarb push mov sahf and inc fstl outsl dec cmp fwait dec adc pop xor insb adc adc sub fwait push add adc imul xchg adc inc push jmp lea inc jbe mov pop sbb xchg mov out popf adc add aam iret adc ja sbb mov mov lds xchg dec mov push movsl (bad) xor aad pop adc fist xchg pop fwait stos xor es adc mov (bad) and pusha ds pop ja xchg dec sbb lret jbe popf add daa (bad) adc jnp jb xchg sub mov adc adc sub jmp or dec incb xchg add cmp xchg xor adcb std inc push dec enter adc xchg sub cltd lods daa xlat shrb mov in adc mov fwait pop int3 mov sub les cmpl adc push jmp ficompl dec mov fcompl pop pop add gs sub xchg out fnstenv sahf xor fst loope add push aam nop jg lods dec adc or sti loop out enter push pop imul pop jb and and adc fldt mov stos adc sbb or shl les adc loopne adc or adcb adc js lock or pop repnz lods rol cmp rorb mov adc sbb rep (bad) cmp mov inc sbb dec xchg test jne or adc push negb (bad) arpl lds popa outsb adc in test xor xchg or mov sub and shlb or pop adc mov cmpsl cmc out xchg adc ficomp roll adc mov adc sbb adc sbbl xor and push shrb gs pop push movsl cli mov mov mov std and adc data16 dec dec jbe repz push dec mov cltd pop and adc lea lahf into xor xchg adc rcrb adc call xchg or iret sub hlt xor lods xchg cld insl cmp clc ja call jge imul (bad) push mov adc push xchg movsb adc idiv pop mov and ja mov pop xchg shrb inc mov mov xchg in mov cmp cwtl dec adc fwait push cmpb mov add xor jb sbb cs adc xor cmpb lret aam and adc fwait lahf test add adc cmp pop js xchg cs adc repz dec aad jb adc lret jp mov adc iret int outsb in adc inc dec xchg ficoml mov jns mov cltd lret jp add test repz xor cmp mov xor popa fcoml sub icebp outsb add into daa (bad) fwait gs adc pop xchg loope add adc dec lods cmp in sub mov rorb mov insb push mov adc push pop repz sbb neg mov jl and xchg add cmp push mov push xor add push es and stc jo cli pop outsl or dec adc pop jae nop (bad) imul adc fildll shlb adc xor sub jp rclb in adc rcll (bad) faddl cmp insb sbb jge cmp xchg push sub paddd and div bswap jno cltd push hlt fnsave pop leave fadd jo jne fcoml lea adcl pop mov mov adc push jno adc mov test shrl add pop ljmp das subb scas mov jge mov and andl out sub jp pushf pop rol jnp lods out cltd cmp rcll sub pop sbb mov jmp setns cli jno call fwait dec cmc mov adc sbb adc sub lods push mov jns fwait std pop adc add fistl push adcl push aam cli adc add mov mov pop ret bound adc les jg je movsb fwait inc call shrl sbb adc and mov lock or (bad) fwait adc xchg mov ret mov subw in stc mov or add notb xor cmp outsl mov pop push add adc addb sbb mov and mov (bad) or adc stos fist push inc or test ds xchg shrb aaa sub (bad) stc test std fstl mov outsb xor mov xchg adc pop repz xchg (bad) scas (bad) mov (bad) xor xor (bad) mov xor fwait cmpsl mov repnz cmpsb rorb call adc int3 sbb xor in pop cli lds rcrl nop roll cmp int3 adc jo ds jp mov cli adc data16 daa aad sbb dec ret and mov adc (bad) mov cmp and lret jg arpl push inc adc hlt add adc cmpsb push mov mov aas jns jmp cs loop mov adc adc jbe push fdivrl outsb adc xor lret pop imul jnp adc dec push adc mov adc cltd pop imul adc sub jmp adc loop mov mov sub xlat lock mov xor rolb mov jae outsl test push mov jno dec jno mov (bad) mov (bad) mov sbb or (bad) cli xlat pop jecxz jmp lock adc xor stos loope inc fs repnz xor adc sub (bad) rcl fs xor cmc imul (bad) sbb clc in test nop hlt or xor push push pop inc flds push xor adc mov stos repz sub mov push or add (bad) jecxz mov cs imul add rorl xor mov insb test pop imul jbe xchg (bad) mov xchg leave inc repz dec dec or jecxz jmp mov cmp les xchg stos sahf popa adc sbb call in jmp push push cwtl push bnd orl or fidivrl fdivrl cmpsl jl or adc cmp pop test or cmp mov push test lea js sbb cmpsl xor ja mov jne fcoms lds ret sub adc outsl lods repz test or mov cmp gs inc adc jne jmp in cmp sbb enter xchg mov rclb mov cltd add fisubrl cmp push sbb pop fnstsw data16 or lock imul es arpl mov xchg pop sub (bad) or adc bound in push int3 dec xchg adc mov push inc adc divl arpl mov push add xor movlps fsubl dec mov jno dec mov xlat sub int loop or add mov mov lds mov (bad) in clc or repnz ficoml jne fisttp dec dec lcall or push mov add les adc mov adc cmc clc sub adc xchg and adc les hlt in add in repnz sub ja cmp add xchg xchg adc (bad) cld mov adc adc xor xor (bad) icebp xchg add push pop adc hlt sub repz nop ljmp imul fcompl pop (bad) bnd sub call adc (bad) cs jecxz jae xor movlps ds into scas mov lea icebp jl dec and jmp sbb xchg pop data16 lea adc cmp mov (bad) popa push dec or adc jns ficoml sbb ljmp hlt sbb mov call dec add paddsw aas mov nop repnz outsb inc sarl mov addr16 lea pushf (bad) aas jne lcall or addr16 xchg pcmpeqb lock popa pop add mov sbb jnp push leave repz jo mov int3 data16 xor je pop ljmp pop xor fild mov dec inc adc out idivb test jmp fcoms pop adc fwait ljmp sub cmp push push mov xlat arpl pop mov inc cmp inc out lahf push repz out cmp mov adc and rcl or ss mov pop sti nop adc push push pop daa push adc outsb pop pushf clc lds add aaa pop cmp push daa and or jle adc rolb (bad) ja sub invd je jp pop mov loop test (bad) cmp xchg cld jbe mov xor repz pop scas lds or dec xorl sbb or and enter mov xchg pop xor lea adc push pop stc stos mov lea push fstpl fdivs adc pop xchg mov adc repz mov rcrb xor adc inc lods dec stos sbb xchg sbb cmc dec sbbl lea and adc stos ljmp rcrb adc imul mov mov in add adc sbb movsb adc hlt pop pop cmpsb adc mov sbb jne sub push int3 push mov jae adc xor (bad) lret lds or adc sbb fwait adc scas (bad) cld cmc xchg mov insb push jle push gs xor or mov mov pop into or push dec aam xchg push sarl xor or jp pusha sbb and fistp and xchg inc adc cmp sti mov push loop sbb add pop fwait cmp popf xor shr rol outsb add incl jp cmpsl ss mov sub mov push mov inc out adc inc insb movsl mov sbb sbb andl cwtl mov ja aas test cmp das pop push jl cwtl mov aad cmp jmp lahf mov mov xor hlt adc ss loope gs (bad) mov adc sti adc pop push add adc mov jp lea adc pop bound add sub jge dec sbb pop ljmp cmp movsl sbb mov mov jl out (bad) subb pop sbb aam adc adc cmpsb pop cwtl shlb add imul push dec jae add adc fstpt mov (bad) mov sub dec dec iret jo dec fwait cmpsb cmp push in xchg pop add jno jecxz sbb mov imul dec pop adc aas jbe sbb add fwait pushf and rclb test adc das fildl pushf cld jno ljmp (bad) add xchg jecxz rcrb in xor pushf test fld1 imul into mov sbb add mov push inc push mov pop add outsl out out mov pop push or popa cmp mov xlat jp and mov cmp inc add or orl adc cltd aad push out mov jne packuswb add or mov das repnz cmc ja adc xor (bad) popa hlt sbb add add xlat loope push cmpsb push shld jo pop dec mov xchg ss ljmp adc scas mov int3 add decl pop sub mov mov mov lahf into mov or sbb jnp adcl test cmpsl fistl sbb xor jg pop test lea fbstp pop loop push and adc bound adc sbb push fs mov hlt out int sub (bad) cltd stc adc add xchg xor mov lods sub mov lock bound and inc pusha les test loopne mov leave xchg nop lret les mov xor adc jle or adc pop jg mov sbb andb add std push aam adc pop pop test icebp push adc cltd out loop adc xchg lea jp or stc adc cmpsl rcll lahf jno inc xchg or cli lods leave dec cmp mov pop xor cs or mov adc dec or pop mov inc pushl daa xchg adcl ret xchg cmp pop push cmp ja add popf push adc jge cli adc mov out push test popf nopl mov bound and mov inc adc gs js shrb push inc out les mov addl rcl push test and and fisubl pushf inc adc sti jl lret inc jns mov xor or mov push push mov dec inc xor rol cmp xor (bad) repnz (bad) adc and pop je add mov pop or roll cmp cmpsb jns xor or aam push jne decb popf xor outsb mov cltd push add xor sub mov push dec add aad jae pop mov jge mov nop (bad) jns aam dec adc mov jnp mov daa adc or popa add ror adc out sbb jle imul add or icebp mov leave adc lock and jne popa daa xchg mov dec int adc dec shll adc xchg out cs cmp (bad) (bad) inc in adc rclb sbbb adc shr pop loopne or (bad) xchg mov stos adc je cmp add insl push fwait pop mov mov push rorb dec fnstenv mov or enter repz lods and adc scas mov and nop orb in (bad) or fwait repnz lods dec leave or push out lcall es xor fidivr dec cmp sub repnz lods enter cmp ljmp test loopne jns out repz cmpsb pop nop test and shrl dec pop lods pop cs mov in data16 mov shrb pop inc loop adc jo aad push adc iret stos cmp mov mov mov adc push mov in sub jle movsl mul shrb leave inc sbb push xor pop emms xor jg notl or jbe lods nop lods mov int dec jecxz fs cmpsl call adc sbb push dec sub add loope push stos cmpsl out jmp pop or xor mov test fdivrl test (bad) lock adc jb mov mov repz pop sbb (bad) imul je enter push test outsl mov or cmp xchg dec mov xchg sbb fadd int3 pop dec ret in adc mov fs popa cmp lcall aaa xchg push or in mov xor push dec mov sub and xchg sub out int adc and stc jecxz (bad) testb jle push ja sbb or scas (bad) repz adc push out and inc lahf inc addl loope sub adc mov enter push daa push test into fstl add sub jno subb (bad) jb jo mov mov mov andl adc loopne and repnz push cmp outsl or mov adc fistl or jo lock (bad) fwait sbb (bad) xchg adc push stos popl ljmp int3 push or out push scas add adc ljmp dec adc xchg pop int3 addb add ja mov jnp je mov pop (bad) bnd cmp std out adc mov outsl ficom sbb xchg and imul sub and mov imull sbb mov xchg addb sub xor mov imul xor stos or xchg les aas popa out mov mov ret lret xchg (bad) adc dec pop test daa ja adc adc or rclb repz xor cmovo notl cli enter jle in popf mov inc test arpl xor ret inc add out adc and shl mov add in pusha sbb add popf pop stos adc push cmc aas push scas mov int mov popa outsb mov sub cmp fnstenv dec adc jp dec sti sbb jne out adc ss sbb jmp or aam sti adc push ljmp dec sub mov jl outsl or adc into out cmpsl pop notl cltd xor jnp or xchg loop adc in bnd sub rorl pop mov push and push imul push mov rorb jp mov lods push pop lret fcomps in lea add cmpsb mov data16 stos dec mov jns adc sub jno jg ja mov inc inc and mov push push xchg pusha push mov cmp xor inc sbb mov mov or loop mov clc xchg jb and xchg cmp int out mov mov cwtl loopne dec mov and jo in lds inc adc pushf pop test jg aam xor inc ss rcrl mov xchg je push (bad) int add or movsb sbb mov jne out add lret dec cmpsb mov in push pop call shrl (bad) or sbb pop cmp add js stos adc jmp push mov mov aaa lgs ret sarb xchg push push dec inc adc rcll test adc out inc aad add repz fidivl sahf cmp out sbb ret mov inc sbb mov stc enter sbb xor pop add (bad) adc popa lcall pop daa ret repz add dec xchg insb xor ret call adc mov cltd int3 adc dec pop pop mov xchg and push mov jne jmp sub push addr16 (bad) ja add mov gs es jmp fistl lcall test out out adc rorl push mov jns dec gs mov inc adc mov mov push inc mov (bad) mov repnz (bad) jbe adc jo scas aas in mov cltd sti sahf in sbb sub mov repz (bad) aad in cmp loope rolb imul imul test adc js sti pop in push adc ret push cmp cmpsl loopne xor jbe es (bad) adc adc ja jmp int popf sbb mov in fdivs repz mov jge adc jae or out mov pop mov loopne lea adc ret fstpl lods popf jo cmc cmp inc cmp nop dec pop sahf xchg push mov pop cltd add jg fwait jp inc loope mov xor cmc imul dec add scas adc pushf mov int adc fdivs sub xorb cli mov add dec mov repz jecxz imul ret popf cmp push cltd aaa mov mov (bad) sahf movsb adc cmp shrb push repnz pusha pop sahf (bad) mov adc ja cvtdq2ps ret sbb mov rcr pushf movsl add jno fs fmul dec push add in mov xchg mov pop sbb adc icebp hlt sti in (bad) in addr16 inc inc mov add adc push inc cmp xchg pop adc nop dec push pop pop arpl cmp xorl roll jae lods sbb and mov jle adc jge xorb fimull rclb cmp repz xor dec xorl loop ds adc insb sbb mov es pop ret dec push pmaxsw inc pop jne mov inc (bad) out jbe push shr adc rorl adc pop sub mov adc pusha mov xor ja loopne bsr mov or dec jnp push mov pop pop in cmp stc mov lods jno adc into in xor sbb sbb dec fcoms mov pop rclb data16 cs stc inc (bad) xchg cld xchg mov (bad) mov or cmp movsl stc xchg adc out push mov dec enter in fisubrl add xlat lahf jns mov push or scas sbb mov outsb (bad) push push inc adc int3 mov mov repnz subb push xchg dec dec js add jbe push pop or mov push pushl sbb outsl sub or pop dec arpl repz jns (bad) mov xchg xor pusha xor inc ljmp pop hlt adc push mov aaa dec repnz fwait pop push rolb adc xchg jp mov mov sbb pop enter test mov test pop cmp mov cmc adc jg jge bound jnp adc xchg sub adc bound xor int fimul adc dec cwtl stos (bad) xor mov in mov mov sub rol mov ucomiss or sbb cmp dec inc outsb ret fcoms imul or mov pop adc les cwtl (bad) mov mov fcoml xchg adc stos aad adc dec adc fsts insl push out adc repnz mov shrb cmp or (bad) pop je add push add cmp push dec (bad) mov aas fwait sbb das pop push dec push xor cmp aad or sbb push icebp lods xor (bad) iret (bad) repz sub sbb inc adc sbb pop pop pop adc lcall adc test or lock lcall lret lahf and dec adc aad mov imul or sub insb adc ljmp jae sub xor pusha xchg push mov xor faddl or add loopne xchg add xchg test xor test insb mov in dec or dec out inc adc mov orl mov mov bound adc int mov loopne mov mov mov sbb inc inc or xor popf imul sbb jmp pop cmc popf out div sbb adc mov dec jbe xor mov jnp loope (bad) in scas adc or test mov xor sbb adc stos loopne ret mov mov iret mov ja push adc inc inc xor sub adc xor pusha adc xor mov (bad) dec test cmp cmc addl repz push add loope mov daa out repz sub and (bad) aas mov inc jmp cmpsb loope add adc sti and push lea (bad) mov mov push sbb and jnp adc jae and xor mull mov stos (bad) sub mov arpl push pop fs adc push push pop movsb push mov fistpl movswl mov outsb aas call xor cld fstl mov pop ds push add dec add outsb sbb inc adc aaa (bad) and xchg bound lcall test push pusha add mov (bad) adc arpl dec cmp jnp sub loop mov lods repnz adcl mov adc xchg dec int outsb adc fstpl adc bound int mov addb pop add aad orl rcrl lock pop scas adc cs jns rol xlat fnstsw cmp imul fwait (bad) int push pusha cmp ret das adc test and out inc aam inc lea negl or vpsllq dec (bad) xchg add xor enter fdivl xchg sbb fwait mov or push adc sub adc imul scas and aas pop mov sub push push adc mov and fs sbb adc add push adc push fistp in pop repnz imul mov test aam cmp pop pop inc jnp adc (bad) ret mov mov aas inc sbb sbb push xchg ret sbb lods imul mov mov dec cmp dec add (bad) ja fld out sbb push stos test xlat adc clc pop inc push (bad) xor sub mov inc push cwtl (bad) mov mov outsl xchg call jo adc cmp pop outsb and cmp jmp or add stos xor dec sbb pop adc icebp aam sbb mov add in lret or ja or mov adc jno das adc and pop add adc adc lock ljmp stos inc sbbl fistpll or adc adc add sub lods fsub xorl int3 mov pop dec popa sti mov (bad) mov adc dec les adc loop adc fisub ret cmp fstl cmp fsubl mov mov (bad) cmp sar adc xchg lret lods or jnp sub jo int3 dec push xlat lea adc dec pop jbe dec adcb pop jns mov imul icebp daa or adc mov sub (bad) or fcompl fs mov pusha pop (bad) mov adc cmp sti mov xor pushf pusha dec adc or xchg dec cmp or lock je mov lahf and xor aam sbb out cmovg ljmp scas (bad) xchg pop inc pop out adc push xor jl push pop adc hlt (bad) mov add adc cmpsl test adc jle dec adc xlat rcrb or mov mov fwait cmpsl roll jno pop cmp cs ja or (bad) and mov cmp xor sbb iret bswap out dec cmpsb mov mov add sbbl cmp mov js sub and pusha sbb pop push adc leave lods push fsub dec lcall psrad adc push lock adc repz jno jno aas fcoml jmp add int3 xchg sub jmp out popf mov (bad) pmulhuw adc xor xor out movl sub testb xor jp (bad) pop xlat (bad) mov enter lods out xchg inc adc cmp ja sbb daa je adc dec addr16 xchg sub mov rcrb (bad) xrelease cmpsl out mov das adc lret test push cmp add push jle or inc or push jo data16 gs into push jbe cmpsl dec (bad) adc push mov jmp mov fstp ja imul xor icebp pop push or xchg pop mov mov xchg pop jno sbb add addb push pop inc mov adc arpl lods mov test pusha adc push push sbb mov or jle mov test mov xchg add sub adc ss sarb dec rorb rorl adc pop test cltd xchg add repz loop (bad) sti scas or adc cli rorb push mov aaa push cld sub addr16 adc daa jecxz fwait pop cs sbb (bad) frstor push adc cmp sub pop loop push ss xlat add push adc fsubrs cwtl lock xor xchg adc stos jns adc loopne jg scas pop sbb add adc out dec loopne ja sbb cmc stc xor push cli pop mov mov mov flds pusha (bad) cli jae stos mov (bad) cmc push inc aas enter leave sub dec hlt add dec adc add int movsl rclb lret scas in lcall pop fcoml mov (bad) mov and mov mov repz xlat iret push inc pop pop jo xchg insb adc and add nop lods push mov pop lret or sub adc jb or test aas lahf push sbb dec ret rcll lods cmp jl inc and cwtl cmp ficompl adc mov inc rorb subb call push test mov adc out jnp nop sub add push mov adc movsb dec and fsubs adc les sbb out mov sbb lcall test (bad) sub adc mov popa push aas outsl sbb stos pop jecxz fnstenv iret adc (bad) movsl inc das mov icebp scas mov hlt outsl add in push dec xchg ds and adc xchg and movsb rorb je sub fadds adc inc les mov frstor jnp imul nop push and dec dec clc push xchg adc lret call daa js cmp adc add pushf loop ja jp aaa test rclb mov pop sub icebp lret std mov pop jae int3 pop xor add dec insl rorb mov mov adc stc inc mov loope mov cmp and js push adc mov add add add cmp fild cmpsl gs repz (bad) push xchg or xchg xor sbb fucomi add mov inc cli and xorl js movsl into pop mov rorl ret cmp lret sub mov push (bad) sahf pop jmp imul in aam adc add sbb aaa mov data16 xor sbb pop jecxz and (bad) movsl sti in mov jp out xor aam pop inc lret (bad) jnp adc dec lods jb add inc (bad) or adc mov jecxz mov add shlb mov mov and adcl dec (bad) sarl dec setno adc adc icebp xlat lcall jle xchg adc stos mov bound or mov xchg enter push into pop pop push or and hlt (bad) adc enter cwtl add inc aas push mov (bad) aad dec adc popa mov notl or in mov sti cmp xor pop pusha mov jl and jp mov loope cmp push push les pop outsl push pop cmp mov jl jmp xchg negl dec xchg repz pushf pop scas sahf ds mov adc loop,pn popa push hlt repz add push jecxz mov or in sbb adc test sub test in mov fcoms cmp adc xor outsb enter or pop push cmp repz cmpsl fsin sub jle inc xor push mov push mov mov adc dec lods (bad) fstpl idiv sahf jp (bad) sub pop xlat mov cltd and scas fmuls and xchg jg adc pop cmp pushf adc dec adc inc cmpsl rorl xchg jnp push test adc mov fmulp jae adc out xchg daa pop mov les popf push jo stc inc adc inc mov mov dec pause ficomp pop pop or lock insl jne mov pop jb hlt adc adc orl je xchg cmc cmp test les repz outsl mov lret ficom cmp (bad) mov mov invd adc xchg sbb pop or in rclb pop ficomp mov test sub mov xchg cmpl and push rorl jae out inc fiaddl mov or pop rcll int mov mov clc jo lcall cmp inc or or and xchg ss xchg repz and mov adc scas lods cmp mov xor push ss in iret or imul adc add lret push cltd in lahf adc mov aam jl and or in xchg mov fildll nop sub repz mov mov push int3 stos outsb fcomip rcr adc mov pop adc mov dec adcb inc push and dec mov int3 rorl dec or sbb dec inc push mov sub add jne stc adc pop sub mov (bad) out mov adc sub lea mov add nop xor flds aam inc cwtl outsb divb enter mov cmp mov pcmpeqb add (bad) repnz jne and cmp sub orl leave adc mov adc movsl jecxz mov ret dec idivb xor adc fwait push adc aad jmp ficom xchg sarb rorl (bad) aad or or test in xchg aas cltd push into nop roll pop pushf int adc push dec dec adc sub push adc lds repz mov xchg cltd jge adc adc outsl test mov mov leave xor push lea pop lods bound adc jns sahf jb movsl stos sbb jne xor adc das inc in jge mov iret dec scas bound pop nop (bad) sbb in repnz loope mov in push cmpsl add fs or lock rorb adc jp inc loopne mov popf sub mov xchg jb adc xor cmp hlt or pop dec or inc or pop lock lds (bad) mov ret dec jmp adc xchg pop pop nop clc xor sub dec sub rcll xor adc je add cmp int les jmp pusha mov mov xchg mov mov jmp sub adc or or add mov sbb mov jne inc ret fwait adc mov icebp xor (bad) subl data16 adc popf adc xchg fidivl mov jnp mov addr16 dec add fmuls fimul sbb insl out push xchg inc mov mov outsl sub push cmp cld cltd mov dec jns gs and idivl mov frstor lcall adc fbstp movsb mov aaa and xor jo out std lea jbe aam xchg scas std mov jne cmp and inc popl mov lea mov pushf and fwait pop test sub insb fsts roll adc lods popf adc xchg add push aam and jecxz and sbb loop jl push pop adc jg mov push or repz mov xchg adc jg aam sbb dec inc xor imul ret dec sbb mov insl ret addr16 or or inc mov in add adc sub push jg mov mov fs or dec in jo cmp movsb adc or adc imul in ret adc or std add cli test sti notb push adc adc mov cmpsl hlt rcrl popf mov or or mov repz dec mov adc mov dec repnz test cmpsl cwtl (bad) sub xor xchg add pop mov dec inc mov xchg jno xchg lods fldenv fsubs scas sub jmp push mov in nop mov dec mov xor xor hlt add into pop mov lods adc (bad) int3 mov fsubl xchg mov mov cld xchg lods les and jle cwtl cmpsl mov mov adc movsl inc ljmp adc or xchg repnz ja sahf dec xor popf adc mov jno scas lahf les bound xchg adc fsubrs (bad) repnz inc sbb int3 loopne cmp adc out jmp (bad) (bad) scas movsl adc outsl sub adc jmp push ljmp inc test addr16 inc adc ret mov movsl mov adc loopne out mov push mov loope outsl ds jnp mov roll pushw push xchg fcoml adc dec into adc push ljmp std sub clc xor (bad) in add mov push enter lcall adc insb inc inc push mov pushf add mov xchg sbb js loopne fcmovu adc mov adc loop mov sbb adc cmc scas lret adc and mov ljmp aas popf lahf jg dec (bad) rorb inc rorl (bad) push cmp enter sbb sub add adc sbb repz mov jl nop in lret loopne std lds flds jp inc dec pop adc jns mov inc inc out rolb stc test adc test cwtl adc dec mov mov sar leave add shll xchg movl xchg sbb push or inc adc fstps push inc lock daa xchg inc lahf sbb imul jge sbb mov dec mov sbb add add popa je ret rol mov jg fildl icebp mov push rorb dec fisttp or test add out add (bad) jo inc mov in sbb in repz (bad) jmp fnop mov (bad) or xlat push movsl lahf mov adc loop addr16 test add repz rcrb or int3 mov ffreep jne or leave cmpsl push adc ds sub mov add cmovle dec (bad) aaa sub in repnz mov ret pop (bad) push and mov adc add xor inc int3 adc lock cs lea ds ja inc imul mov push sub ss pop or push push push and sti add test xchg lahf popa insl mov adc iret push lcall outsl sti test scas sub test sti (bad) aad mov cmpsl push xor aas decb hlt rolb jnp mov popa adc mov adc cld jo mov popf aaa cmp mov mov xchg jns jecxz cmp or test cmp test aad adc test loopne dec pop scas outsb cmpsl adc xchg cmp mov ja (bad) dec mov out ret cmp fisttpll dec aaa add icebp pop dec test mov dec ficoml cmp pop jecxz std adc shlb xchg adc inc clc xor pushf jb adc pop outsb push xacquire pop xor imul and and dec inc pop (bad) inc es xchg adc out jg fistp adc adc adc jns addr16 (bad) clc jl inc ret mov sub cmp sbb inc mov adc (bad) inc push dec mov pop mov pop adc outsb and cmp jo decb xchg adc hlt cmp push lds sbb lods cwtl or jmp pop mov xlat (bad) pop push ds and xor mov ficompl (bad) cmpsl mov xlat adc sub out fld ret sub (bad) mov ja inc or (bad) add mov adc negb stos add loop outsb clc loopne in adc fidivrl mov adc mov aam mov jmp xchg pop dec inc pusha int adc lods std mov scas dec xchg out inc out rcll into fisubr lds mov xor push add bound dec dec dec push push adc inc icebp repz outsb adc mov pop in and dec sbb pop lods inc or ja xor pop inc adc lcall adc sub pusha pop loopne adc or jne pop movsb inc adc and adc (bad) xchg int3 cld add push mov iret pop xchg rclb out int3 negb adc push sub cmp jle es sub adc jb sub mov and stos call jns cmp push adc adc popf mov adc jns xchg or mov stos sub or mov shl add adc jmp mov xchg icebp nop sti je jmp leave movsb mov les adc xor pop cwtl pop adc idivb test mov imull (bad) push sbb aad pop jbe xor les adc and test adc push dec jnp add sub stos scas jle leave mov mov inc dec adc or add imul repz xor ds je or nop adc inc fist js sbb fwait inc test repz mov fisub mov dec ret add jne mov js orl dec mov es repz fnsave or out lret push rcl aaa adc ret mov rorl pop fsts mov addr16 hlt ret xlat outsb pop adcb mov movsl inc adc stos inc (bad) jno add stc jns add adc sub pop xor xor aaa shll insb inc or leave stos repz ljmp pusha nop outsb jb loope adc (bad) loopne lahf cmp pop adc mov xchg mov xchg cmp into inc repz (bad) dec mov adcl pop (bad) mov std adc js mov (bad) push pop adc lret andb push adc out mov nop mov sahf adc push repz inc in adc rcl push faddl sahf xlat sub mov jle xor and int3 cmp xchg (bad) dec adc fldt mov mov dec xlat mov pop dec mov sub int mov dec lret mov mov push lea mov pop xor adc add jae adc mov sbb sbb pop loopne movsl sub arpl dec cmp mov mov push repz inc xchg xor hlt iret adc adc mov aaa jge adc sub or pushf inc adc mov pop xchg mov push cmpsb hlt dec sbb addr16 mov nop dec pop sbb adc jecxz xor and (bad) adc enter ret push mov xchg mov loopne (bad) mov or bound scas es adc inc (bad) dec ret scas adc int3 push jbe inc repnz movsb jl lds push imul inc xchg adc jnp add mov sbb insb iret mov jno mov inc imul mov cwtl xor movsb ljmp ret insw int3 add adc xor inc sahf jecxz sbb xor add cmpsl daa sub inc jns into adc fs stc pushf jmp std fstl das mov je nop xlat xchg or sti test mov jnp push mov cmp sbb aaa xchg movsw adc test jl pop nop movaps xor js loop loope pop gs adc jbe and addl adc adc outsl mov xor cmp mov sub out outsb xchg lea outsl add jbe fs adc int3 aad aam jle cmp ja adc pop sub sbb push mov sarb adcl sub pushf mov add mov jmp lahf xor shll add repnz fstpt je add (bad) mov int fcoml sbb and xchg nop leave ss outsl mov inc jae xor adc adc divl into loopne sahf adc xor dec clc addr16 in fnsave adc mov dec out aaa jmp dec sub xor adc jo adc sbb sub fiaddl inc out dec loope adc jae cwtl adc sbb mov ds notb mov mov or adc stos loopne mov insb fldcw xor (bad) dec rorb add pop rorb lcall mov incl sbb xor push and ss ss mov pop std pop pushf rcll pop sbb test jle adc push ja mov push test sarb pop mov or sub cmc imul xchg mov (bad) rclw dec out mov or in cmp mov test les je aaa add push pushf adc dec movsl dec enter adc outsl lods xchg and fsub cltd cmp adc cli arpl cmc jbe mov loop adc add push adc pushf insl int3 xchg lcall (bad) inc js sub enter popf aaa dec iret add sbb psubsb out sbb mov adc lods fisttp test xlat mov and add xor lods (bad) outsl adc (bad) (bad) adc andb rorb pop dec and sbb je pusha mov test sub pop push aad addr16 adc shll test repz popf pushf dec cmpsl outsb or in fs mov xchg pop loop js mov stos xor scas (bad) mov add push cmc push push test pop movsb fiaddl lahf jnp adc subl stc add pop bound cmp xor mov lods mov mov addl xchg add fs mov ret inc jbe mov jle fisubl adc xchg dec jp jno mov sbb imul ror sbb movsl push (bad) ds into add loopne push push xor or (bad) xor fcoml les push mov xor xlat repz addps add pop xchg sbb test adc andl nop jbe sahf jmp repnz adc pop (bad) xor shr bound add inc dec mov call sbb and push adc fiaddl adc sahf or adc jno push mov mov inc sbb cmpsb adc gs xor lea add mov jg idivb dec rorb mov repz imul push adc iret and lahf adc adc adc data16 repz jno xchg mov aas jno mov jp sbb mov ficomp xchg adc xor lea push cmp adc shlb xor test jp sbb adc mov push sub or out mov into test sbb arpl aas mov mov repz xor inc or repz in sbb push adc iret subl xchg punpcklbw push mov cli dec or push in adc mov adc adc mov add popf dec sbb shlb add cmpsb adc sqrtps sbb adc (bad) idiv push jo repz loopne xor mov inc pop mov push loope nop mov repz adc imul das mov lods adc mov inc xor jno mov cs jg mov out inc lods outsl loop (bad) or popa xor cmp test dec daa loope (bad) orl mov out dec push aam xchg and scas orl dec mov adc int3 push add jo xchg gs xor (bad) or jg outsl sti cmp nop push adc fs xchg inc in mov add dec loopne int cltd repz (bad) adc shlb adc sub pop adc mov jb nop shll adc jl out sbb sbb adcl xor fldcw rcrl mov sub add xor in stos jb or lahf adc lods mov adc in imul rclb repz or sarb jecxz mov (bad) mov sbb adc add stc adc adc aas sub (bad) adc lcall ror aas es push inc sub mov adc in mov call dec cli (bad) and inc cmc mov scas orb mov mov jge icebp mov lods inc jne fnstcw addl aaa aam scas or mov stos dec jo lcall imul xchg in sar mov mov icebp adc add movsb popf cmp adc jge movlps add leave xchg outsb ret jbe adc sahf fbstp cli mov mov or movsb in pop jle push sbb fiadd minps xor push xor mov lahf mov scas dec add mov adc push lock shrl mov sbb enter push xorb dec mov repz int3 or pop adc pop loopne imul clc sbbb mov lret ret add or mov adc stos mov xchg mov adc (bad) mov pusha jmp fadd adc sbb mov xchg jo ret fdivl adc dec or arpl and stos insb jecxz adc add pop xor jnp adc mov sub adc fisubrl adc mov mov jo outsb (bad) adc es out adc aas push xor adc int3 cmpsl push sbb jns cld pusha adc mov mov sub adc mov mov adc or adc sbb (bad) insb adc daa adc sub adc mov sub mov add adc rcr mov jge test or dec jl jmp mov test stc inc cmp iret mov ss in adc inc bound lret pusha mov jp sub mov jns rolb cmp test insb sbb lret int cmpsb or inc (bad) scas fnstsw test jo and mov pop (bad) arpl pop mov xor adc pop cltd fcompl and xor int3 add in ljmp jmp and jo or mov inc inc int3 dec lds adc cmpsl add cmp jo xor push pusha pop fcomip lcall imul adc push inc and jmp hlt aam sarb cmpxchg lret enter je aaa push int3 ljmp dec jmp cmp mov hlt adc in jp ds mov scas xchg test inc jge add mov rorb mov inc jae outsb and xor add insl mov adc push push rdpmc sahf fimul cltd fnstsw jecxz jg adc mov sbb ss sbb fistl mov lcall inc cli xlat add or les repnz dec pop addl mov adc jne (bad) and ret (bad) or inc mov fisubrl mov jge loopne imul or jle jno ss or in out xchg xchg repz jl mov rclb xchg xchg das ret push lods aad hlt insb xchg fs ljmp fninit mov sbb adc ds pop loop adc in (bad) scas dec sti lcall repz xor inc sbb bound leave rclb cmp addl xlat jo pop ljmp sbb push cmovge and inc or add jge scas addr16 adc or lds xor mov sub adc daa sbb adc adc cmp into xor pop jg jp sub add jp mov or jnp jns add outsb sarl xor dec sbb xchg cli or push sub repz jp (bad) stc test mov fwait sbb adc (bad) inc inc shl movsb or add hlt leave shrb add sbb cld sbb inc add xor into push fidivr fsub jbe mov jge int3 fcmove into in adc (bad) xchg lcall je scas adc xchg movsb dec jg mov mov jno add in and notb xor ja,pt and jne dec add shrb test xchg xor popf dec lods ficoml push adc (bad) repz pop insb sahf sbb pop or lret xor adc ja jnp mov mov adc push jbe aaa push jp sbb shrl ss movsl cmp adc cmc fimull movsb sub mov adc xchg out repz in push pop (bad) or gs out (bad) repnz dec sub mov adc xor lahf adc es dec adc inc lds sarl jno sbb adc mul adc adc dec mov int3 mov push add fimul loope in jo je add adc mov mov test pop sbb pop shll hlt xchg sub fimull cld xchg lock (bad) into add lcall std adc pushf adc adc fldenv pop xchg fs scas xchg push cltd aaa pop adc lret push mov jae,pt pusha push adc jbe mov nop dec popf sbb jle comiss (bad) jno or movsb sbb pusha xchg adc mov cmpsl out sbb sub (bad) pop push rorl mov pop je add pop repnz (bad) shlb mov inc adc in lret aam rclb xchg aad pushf subl fstl mov scas sub sbbl or sbb dec sbb xor shr jns add mov xor jmp lods in xchg xor shr xor aad adc pop pop mov or mov xor (bad) loop mul xchg sbb sbbl push int3 (bad) push scas add arpl sahf or xor push fisttpll leave adc das add inc sub push (bad) sbb dec popl adc jb push bound xor and hlt lret insb call pop dec dec adc cmc lret xlat jl mov mov std adc leave mov test push pusha pop inc lahf scas xchg dec adc in fwait insb loope pop and repnz arpl mov fmuls stc mov jnp hlt adc and (bad) sbb clc lret inc push gs adc inc push ds xor adc addb xchg jnp mov push mov (bad) repz or push pushf inc scas push outsl popf sbb movsb and xor lods adc ret pusha lret jo push adc aaa jg je loopne and lea jns cmpsb repz int mov out pop (bad) into adc or pop repz pop jg cmp xacquire add out (bad) (bad) js or or xchg rcr in cltd adc insl jnp sbb xchg inc push push or aaa adc js cli adc and xor jmp movsl add xor pop repz andb push fmuls lods mov adc and fcmovne sub outsb cmpsl jge or out push jns cmp adc xor stc mov pop jno jle or test push cmpsl shlb cmpsb add movb roll inc pop adc hlt add (bad) gs xchg pop loopne sub push xor add add xor sahf clc out pop push xor dec adc loope mov outsb aam xacquire and je add mov mov pop js mov in subl mov push xchg pop in clc int addr16 iret ret adc inc adc pop cmp dec insb adc shrb ficoml cmp mov jl mov mov movsb out mov xor sub call xchg (bad) xor cmp xor stos (bad) or pop and stc adc into dec mov not jecxz std ja roll pusha and xchg pop xchg int lcall daa fnsave sub fimul mov out inc and or aam (bad) je pushf xor adc sbbl jl fwait out dec imul test mov sub jp inc mov rcrb mov pop into mov pushf mov (bad) or inc push xchg imul mov push aaa mov notb add or mov fcmovbe sub cmpsb imul add push fdivrl adc hlt daa and adc test pop add test xor pcmpgtb lcall sbb loopne cmp adc xor xchg rcr or and fistp clc scas mov xor ja shr add int3 sub call inc or retw repz idivl or sbb pop cmpsl jle (bad) imul lcall jae gs das xor sete xchg push dec scas addb adc jns out push adc je sub and or dec jle jne mov pop fadd das int3 enter xlat je loope pusha adc aam mov push inc cmp mov jmp js sbb div mov negl or add das mov mov adc jle stos daa cmpsb mov dec std adc mov mov adc lock xor xchg ficom add (bad) out adc add mov es adc mov push rorl (bad) outsb mov pop push pop arpl add adc (bad) cmp sti cmc loope bound and scas push scas pushf test fadd pop sub and and mov adc pushf cmp inc mov sbb mov movsb adc push xchg stos xor cmp push add sub cmp daa xchg pop adc lret repz jecxz sub rorl or test fist sbb adc adc movsl popa xchg mov jns outsl mov mov sbb aam lcall and out rcrb je jge jb add ficompl shl adc fsubrs aas popf das push lahf lds daa fild repz addr16 inc scas adc xor add int3 xchg loopne or iret je adc sbb cmc fwait or fcomi mov fmul jge adc aam push dec pop mov mov jb push aas fdiv adc push add add add inc jl adc xor xchg stos push lret loopne add xchg fstl mov das inc std adc out mov adc mov dec adc pusha fs mov and adc mov test adc ret adc mov imul jl xor and scas xchg mov pop fidiv and xor ljmp adc out adc cwtl mov test (bad) outsb stos inc pop seta mov mov mov pop xor sub lahf add mov int ljmp cmc fcom lret mov dec or inc mov fisub sbb mov pop dec lods jae cltd push adc adc dec popa (bad) xchg outsl adc pop jecxz adc mov add jg,pn roll iret dec mov jl pop imulb hlt mov sbb loopne stos (bad) iret push loope lcall enter pop imul out dec jne adc cmp daa xchg adc loopne or adc ds cmc ret adc rclb push jne mov sbb fdivs adc loop pop xchg test or xor pop xchg orb xor stos movsb adc mov adc jbe add xor movlps loopnew and push xlat nop xor addr16 test stos cld push les xorl mov arpl sbb mov sti adc sub adc movsl (bad) pop sbb outsb add adc loop icebp out xchg jno adc dec out cmp jo adc jb jmp adc dec mov test sub divb adc and mov mov jo mov pop jnp mov sub loop (bad) call xchg mov mov (bad) adc in cmc jmp dec xchg adc sub xchg ret test add xor hlt adc sarb xor mov pop lea imul fs sbb mov lret mov adc test xor arpl adc pop insb inc cmp fidivr jno pop adc aam (bad) adc outsl (bad) arpl stos popa mov fnstenv push into mov or daa adc xor and (bad) adc pop in imul xchg sbb inc jge pop or popa nop repnz and pop dec inc cvtps2pi adc gs pop xchg shrl push (bad) xchg out cwtl movsb jge test pushf dec xor jo dec es pop xchg movsl daa adc insb dec negl adc mov xchg add adc inc mov push ds nop push push mov push aaa mov mov ficoml cmp mov jmp adc fs sub test or aam sbb sahf pop fs cmp add hlt imul xor mov das or mov push mov hlt xlat ljmp (bad) ja pop adc repz adc push jo adc mov adc add hlt cld push mov xor xlat cmpsl lahf dec dec daa push adc dec or insl adc dec xor adc fwait push lahf mov push mov fildl fisttpll adc sbb xrelease aaa jmp dec dec mov cvtpi2ps shlb dec mov or adc mov mov scas sbb adc push and mov arpl les stos cmp sbb aam inc cmp jo mov pusha clc sbb popf xchg sbb and adc lcall adc repz ret jne adc fistpll in cmp fmull mov iret div inc mov xor in lret dec ficoml lds fcoms mov rcr add and rclb inc out pop leave or xlat pop wrmsr adc cld jl cs xchg repz jns add loope mov mov sbb or in inc adc (bad) jecxz adc ss mov adc mov pop push fistpll jne cmpsl pop and mov les dec cmp adc out gs pop roll adc sub repz mov xchg mov inc adc adc ss xlat fiadd adc mov xchg sbb (bad) mov (bad) into jl or or dec in out xor cmpsb mov pop sub aaa roll mov jl gs push inc scas mov dec mov mov or mov clc sub add cmc (bad) ja call (bad) (bad) mov aaa repnz xor adc data16 call xchg jle and cltd mov push add adc sti or dec aaa repz out jb ret pop adc lahf add movsb repz mov daa aad nop mov mov sbb adc imul adc and or out push idivl pusha repz call adc clc adc mov adc xor cmp xor clc pop in es push inc xor mov push rcr lods inc add nop xchg int xor loopne lret add push ja adcl aaa mov pop leave and xchg les bnd rorb enter mov mov adc sub sar test add imul push popf mov sub movsb insb adc dec adc mov mov js lret lods or sub adc test cmp mov lret xor rclb out es pop jle push pop dec mov jmp cmp push clc mov jmp ret push inc inc nop pusha pop das adc adc mov pop in arpl dec in lds repz test xor in dec ficompl int repz pop jmp adc adc scas add fs adc add daa xor (bad) popa movsb push mov je adc lock sbb mov mov cmp xor aas mov add jmp xor aad mov xchg xchg cmp fdivl mov cltd sarb pushf lock xor ret mov out mov sub sahf shrl test sbb adc adc imull cmp (bad) cmp ljmp daa es iret pop mov je xor push ljmp fldl adc or adc stos es test sbb lock iret mov fcompl jle jne loop push (bad) mov movsb call mov or pop in adc sahf mov mov and icebp jmp ja test fildll mov (bad) je and pop adc icebp mov add nop int adc xor adc mov dec rcll pushf sub adc adcl mov shlb jne inc mov cmc (bad) sbb adc (bad) adc (bad) adc pop jbe shrb mov stos rcr add test iret psrld mov lds movsb lea push sahf repz push mov pop ret xor jne adc push je fwait and (bad) out adc adc mov fmull jge adc notl stc xchg dec movsb mov out (bad) mov adc mov (bad) xor or in cmp mov out and sbb pop adc (bad) cmc out negl xor movhps pop (bad) insb popf (bad) mov jne sub mov inc adc into push mov jnp dec sbb jmp add push loopne cmp add into add mov adc mov lcall nopl pop nop repz sub mov inc leave xchg mov inc lret sbb adc push mov (bad) jae jle adc xor push add fisttpl pop mov lss int mov push xor xchg mov lods dec and or shrl xor packuswb pop push xor adc cmp bound xchg (bad) rcrb pop add fcomps aaa and jg insl rolb mov cltd (bad) add stc push or dec (bad) jno movsl cltd push add ja adc pop mov ds mov cmc test xor mov (bad) scas mov sti lret (bad) jo mov pop xor mov aam rclb xchg lods pop jg popa sbb test pop push gs push mov adc pop dec xor mov and xchg pop mov mov xchg adc dec mov push jb scas fistpll (bad) mov xor mov icebp jbe push mov (bad) ficomp mov adc adc das mov adc dec not push xchg and js aad cmp cli sub fisubl rcrb loop outsl sbb sbb and mov test adc fcoms cmp mov outsl sbb adc (bad) js add jo lods adc xchg xlat adc (bad) xor icebp insb jne mov pop aaa mov xor and add daa lea mov icebp mov imul pop fnop adc lea adc (bad) sub mov enter jne cli into dec imul sbb xchg mov imulb pminsw repnz adc iret xor imul pushf push mov sub xchg sbb xor (bad) lcall repnz jae ljmp xor test mul fs aaa xchg mov insb (bad) mov mov inc je sbb daa adc ljmp xchg xchg int adc lods jge or bound inc jo pop pop fsubrl xchg adc or xchg ja push jae and rcrl adc inc addr16 daa push sbb cltd inc cmp push ja jno or lods rclb cmpsb jg ret call xor inc mov adc mov pop cmc das dec sbb dec mov repz lods inc xor xlat or lcall xchg jne fs loope negb mov nop fistpll clc out jecxz rorb adc push sub adc or in dec lods and sti mov lods push enter adc scas cmp adc push xchg jo adc jnp jg push fwait or sub sub aad sarb les mov fs in dec add push ss inc push test and sub adc loop hlt xor and mov outsl jae adc sub repz addr16 inc and mov mov inc iret cmp jmp and mov loopne push in fucomp (bad) pushf push inc xor sub pop xchg sub push loope or roll mov in xor adc scas in dec cmpsl sub adc jnp inc movsl jae popa adc repnz push (bad) sbb jno sbb jp pop lods or adc adc mov push sbb push js arpl adc lds adc call fs adc pop ja dec cmp aad cmp out adc add aam es or jno add jno or push dec sub imul movsl lret push mov lret adc inc imull int3 adcb pop mov adc dec sarl loopne outsl pop adc xor mov jne sbb adc test insb std es in or cmpsb push mov and mov mov adc jecxz hlt or (bad) or mov xchg push mov cmpsb pop divb fstpt mov push hlt addr16 dec cmpsb push pop add xor loope mov iret pop repz insl outsl (bad) xor mov add lahf repz hlt (bad) mov and mov jno mov xor add dec test je xor xlat push sahf dec or (bad) adc out add adc and sbbl jle js lret mov test stos adc notb fimul aas adc inc gs xchg push inc insb rorb and imul xor or adc or adc icebp xor nop mov or hlt fwait ja mov jp mov (bad) mov jo mov or dec pop je dec les add adc mov cli xchg push bound pop mov mov sbb aad mulb inc mov jno call loopne addr16 (bad) push inc dec pop mov push inc mov xor imull xor xchg push rcl adc test lods adc pop not adc fwait movsl add pop push cmpsl aam adc mov mov adc pop mov jno and out push or repz inc das orl add jg xor inc gs push mov adc lock push mov insl mov int3 sub mov pop test adc sub test or paddd xor adc or out add xor push rolb pop and mov adc es push repnz mov dec push adc xor adc (bad) pop cltd adc cmpsl ljmp dec jnp les sbb xchg scas pop into adc cmp mov jge mov rcll xor inc pop mov lret (bad) xor pop insb repz nop icebp pop mov add (bad) fimul stos cmp mov addr16 or insb jmp fist in jecxz mov cwtl add and fnsave adc aaa test jno push inc and rcll adc stos lea cwtl adc adc adc (bad) hlt sbb stos adcl (bad) push test mov xchg add push lods pushf out shl in pop das add add cmp fidivl es xchg cmpsl addl mov and pop aaa push pop xor push aaa cmp mov push int3 or xor iret xchg or repz mov cld mov mov into xchg stos adc stc push push adc jg in movl lcall xchg push fimull loope leave push xor (bad) xchg sub push adc loope add scas push rcrb lock push push lcall push inc or cltd movsl adc das cmp mov xchg mov or cmp into adc cmpsl imul es xor push pop jnp jl das out sarb adc arpl xchg fsubl je ljmp inc xor adc test add jno stos xchg mov or sbb sub pop sarl (bad) adc es and les push mov jmp xchg ret mov testl or (bad) xor jp mov add cli aas push lahf iret fcmovnbe mov or pop or jns out adc cld dec dec int fsubl pop enter jb mov push push push and adc pop xor mov mov lods push cmp fstps mov xchg bound mov cmp add je and push mov mov mov insl popa cwtl leave adc inc adc lock lahf rolb test hlt add repz sub sub adc (bad) ja cmp mov das mov dec es cmp mov mov negl nop mov push xchg mov arpl adc fldcw shlb rclb (bad) adc add fistpl aad ds sub jae adc adc int3 adc test into and and xchg ss rcrb cli mov sub lock sbb mov adc sub pop leave cmp inc repz and movsb sbb adc dec mov jno pop jne jmp mov pusha and inc push or nop mov push jg,pn dec leave adc inc movsl (bad) push dec in scas pop rcl adc push xchg loope fsts mov adc (bad) pop mov out dec hlt adc (bad) aam jno xchg pop and or sub test and stc dec mov cli lcall mov pop test push sbb mov adc push jle jo out inc iret xor add or out inc cmp sahf insl push repz into pop cwtl mov fs adc sub mov mov scas pop shr aaa adc iret imul adc icebp xchg notl ret les push pop pop popf mov test sub rcll xchg in in into mov lcall push iret lods or mov shlb mov lret adc inc pop int3 inc push stos adc shrd and push xchg lds mov add push jg dec mov pop push jle xor jge xchg add adc push adc ss inc xor inc mov pop sub push adc adc fidivr jae (bad) cmc sub pop or mov mov sbb adc adc jns (bad) mov in mov mov sbb movq xor test and pop inc sbb repz or add loop adc mov adc adc cmc pop js adc rolb adc xlat imul cmc pop out dec dec push jb adc arpl movsb mov stos adc xchg or mov mov lahf subl mov push sub rclb mov or jo sbb dec or js hlt repz pop test sbb push cmp add push sar push nop adc sub xchg mov jp mov push aaa xlat cmpsb stos fbstp adc inc sbb fst xor xchg mov lods (bad) mov xchg pop mov mov stos cmc add lock jle pop in adc (bad) and dec xchg pop xchg cmovbe icebp pop inc mov push cli or cmc xor adc pop jne aas cmp xor lcall cmp lock mov fisub mov outsb iret fbld ds (bad) adc xchg ficompl pop imulb adc pop xor inc into adc push push pop out jbe xchg fcmovnbe mov (bad) pop (bad) mov jns adc push adc mov dec xchg in dec loopne fcoms ja cmp xor repz xchg mov jmp insl fimul and (bad) mov xor sti adc loope movsb sarl andl adc fwait aas shlb in mov lock pop jae xchg or ljmp push ja mov sbb and or jno inc aam fist imul push repz popa sbbl xchg adc ds jp loopne,pn jne insl inc stc repz lds cvttps2pi test jbe pop imul mov fcmovbe hlt adc adc add or mov xchg lods sub sub mov sbb adc jnp adc adc or sbb xchg in jecxz dec insl jo (bad) ljmp push push loopne push fs fsub adc stos mov adc dec dec add add or je push scas push adc imul sub repz inc (bad) in iret push pushf adc dec push repz mov aas adc inc pop inc sbb fiadd repnz movsl adc fstpl lods loop stc adc and ljmp jo in leave cld sti mov adc mov mov aad push stos scas mov add sldt sbb int3 add inc repz dec pop arpl jo cwtl enter in cmp imul mov ss cmp adc sbb mov lods or lcall xchg (bad) notl xor pop pop jp imul push add dec or icebp or inc cmpsb sub or cld iret pop adc out cmp or mov adc mov mov cmp clc xchg push xchg sbb fs scas jo adc clc fcompl adc (bad) mov adc sub cld adc loopne mov inc iret mov gs adc in jl ffreep mov pushf xor loopne inc mov push push rcll xchg adc jge pop xor xor cmpsl test je xor pop push dec inc xchg in or iret mov xor stc adc enter rclb adc in movsb push inc cwtl adc gs sub and add push adc out int3 test sti inc sbbl fbld mov daa xor mov sub jp jge adc and xor pushl or jo repnz sbbl pop call mov std mov out sbb inc adc loop repz pushf jge adc and xchg (bad) in push loop ffreep push cmp xor adc cwtl jge jp daa std xor jae push inc je xor jl adc lret (bad) out mov adc std (bad) ss enter lcall sbb push add lea ss mov xlat inc popa adc and push icebp (bad) lock aas jmp sub out nop fbstp inc mov dec ret xchg loopne mov push pushf adc or push je adc dec xchg or mov pop hlt mov shlb inc test test cwtl int3 push std ss repz inc dec call sub jle idivl cmpsb adc push mov xor fs ret sub adc mov push push mov enter popf (bad) pop cld sbb add pop mov lea cmpsb fstl add cmovge aaa adc in and mov int3 adcb adc test push repz (bad) mov adc sahf repz dec cwtl lods mov fwait sub mov sbb and pop js mov pushf in repnz es jl pop enter hlt adc jbe (bad) and inc popf mov stos inc cwtl pusha sahf add cs xor call push pop jp movsl cwtl adc (bad) xchg push mov clc xchg xor jmp mov mov mov nop xchg mov or xor aam xchg or int3 cltd push scas das add cmc popa xchg cmp sbb pusha inc mov jle jne sub mov sub clc enter xor adc in fld cmp cmp jp xchg movsb (bad) adc icebp cmp popf xor bnd mov pusha mov adc cmp leave mov cmp test std jle mov fstl mov xchg adc mov mov ss pop mov xor jnp lds or inc sahf adc adc dec jns jo cmp cmpl add adc std dec (bad) jl adc cmp pop mov loop or push scas repnz iret (bad) mov add sub in (bad) inc adc mov fimull sbb dec adc xchg iret fstpl or lods out add xlat outsl aam adc lods les (bad) pop mov and dec adc push (bad) push mov sahf stc hlt adc adc dec push xchg inc jp or (bad) push out sub cwtl push jb or hlt mov mov add sub cmc pop pop adc sub adc pusha add jnp repnz push lcall xorl in lahf lock adc pop insb rcrb xchg fstpl insl stos fstpt adc xchg rorb jge mov adc aam inc pop in and lods or mov or adc gs push xchg mov or fdivs mov and lods adc jo adc or pushf aas sub mov addr16 dec mov lret (bad) mov adc or out lds mov cmp adc cmp inc lcall mov adc clc xor cmp sub mov (bad) xchg (bad) mov data16 adc aaa cmpsb and mov adc je mov adc xor ja fstpt rorb push adc ret lret or in arpl adc pop xor add cwtl inc insl push xor mov repnz pushf mov pop or cwtl or or adc addr16 sarb adc lds adc aam sbb leave adc fdivrs (bad) adc push fdivl sub inc bndldx rol in fwait nop or sub inc or jns mov push mov xchg cwtl adc js push mov adc aam ds insl jne xchg cmp mov sub adc mov mov adc stos pop mov inc jecxz and sbbb outsb sti mov (bad) (bad) push mov cli loopne pusha and push cmpl adc je test pop repz fidivrl sub pop shrb adc mov gs adc (bad) mov scas cmpsl jb mov jmp adc mov sbb ret mov push fsubl jo adc (bad) repz push aas loopne insb or fucomip jb (bad) adc loop outsb pop mov push sub mov xor stos in or int3 pusha adc xchg popa xchg ret ja cmpsl fwait xchg int3 out adc rorb and pop xor mov jecxz push leave das scas adc inc jns (bad) std adc lret pushf test repz test ja push mov iret cmp sbb mov (bad) pop add jno jecxz js adc pushf mov adc jne mov fwait (bad) inc idivb cmp sar cmp stos out xor repz push out popa (bad) dec cmc dec sub outsb mov mov aas pop mov adc jmp dec adc pop cmc bound gs adcb pop jp mov (bad) out sub mov sbb xchg add xchg roll in pop jnp or (bad) popf jne sbb outsl inc out xchg xchg mov or nop pop fist pop sub xchg scas dec mov pop sahf movsb js je mov popa out or mov push mov test repz xor xor ficom add outsb frstor mov inc lret negb sti dec dec sbb jle loope inc rolb or adc (bad) (bad) iret pop mov mov xor cmp fcoml daa inc rol dec pop and adc aam aad xor fimul push mov xchg sbb je sbb aam sbb jp out mov (bad) loop mov shlb fcoms cltd push hlt loope dec repz adc pop inc decl adc orl adc divl pop mov pop movsb push jge or mov push mov adc aam ja xor pop add repz or adc outsb xor add inc and adc add nop xchg iret cmp sti sub fwait cmp adc es das adc movsl test or xor jle and dec (bad) ja in insl mulb adc push or in lock stos sbb adc cmpsl int cmp loope sbb and notl shr sub sub inc adc and and (bad) jne hlt xor pop (bad) jmp cmp loopne jg pusha pop js vmovapd add frstor rclb lods adc aam or and lret and cmp mov and adc out adc iret sub unpckhps test add int pop add xchg pop mov sahf xor sub mov shr cld rsm jecxz cmpsb sti adc out insl fisttp ja popa loopne daa cld push or (bad) adc out jo mov pop mov pop fbstp icebp sub sbb (bad) mov addr16 adc push mov sbb daa adc adc dec dec adc sub ja je in inc pop push add in lcall sbb mov (bad) int stc dec pop or dec xor testl adc enter jae fs out ja mov dec popl xchg xchg mov mov insb pushf adc xor pop ljmp add push sbb sbb jne movb mov or pop jo mov pop and (bad) cltd jb inc mov or repz xor test into xchg pop push je dec cld clc mov mov jne lahf jno out jo pop or icebp push aas push adc cmp les sbb mov cwtl sbb mov js adc out test (bad) iret jg and sub lahf push adc mov stos jp xchg mov add out clc adc xor ss mov push leave pop sbb push fxch ljmp sub adc into sbb fcomps or adc shl sub xchg testl mov or pushf jp adc mov mov inc ljmp sti ret mov adc inc lret mov test and aad cmp pop addl adc push lret sub or repz mov add mov stc sbb lea repnz incl adc pop xor jae dec loope in sbb nop lods adc jl icebp mov mov int3 add and adc dec cltd (bad) repz aaa xchg adc lret mov mov sbb xchg adc sahf sbb or clc test cltd xor dec aas xchg fistpl stc mov add jp aas rclb aaa cmp (bad) repz nop sub out hlt or adc xor sbbl dec sbb mov or fadd int adc pop xchg movsl xchg inc jo push enter mov out pop push adc push (bad) imul sbb cli adc es xor outsb (bad) or or mov cmp sbb jecxz add push outsl rorl lods adc int3 jl leave mov notb xor das loopne loope add xchg shrb test mov mov jo repz xchg frstor ret or adc jno mov and pop popa rclb loope mov jno xor leave add repnz mov push jge add negb fildll sti (bad) add rcrb lahf adcl adcb sub xchg push aam leave pop addr16 (bad) (bad) adc mov aam cmpsb adc adcb test adc pop (bad) jmp rcl (bad) jg pop bound cltd jo dec cwtl adc mov lret aam lods add fildl outsb pop icebp rcl cmp sahf add pushf mov outsl (bad) loop or adc mov (bad) icebp xchg adc pop mov sub mov test arpl lock std jmp adc xchg xchg repz or and out fwait pop out pop push push push jo push rorb mov test cwtl into fmuls jnp mov ds or adc subb repz push lea xlat adc lahf fcmovne xchg jmp (bad) adc in add sbb lahf jge cli mov jno adc sbbb adc mov fdivrs cmp negl jmp add jae xor sar scas mov push stc xor aam jb mov sub xchg sbb and inc out xchg add sbb (bad) aas jbe adc mov bound pop inc xchg xor xor jl fidivl adc sbb xor test adc shll out out mov lods adc subl adc sbb xor dec mov mov jl xor mov jle out mov dec adc cmpsl adc stos adc and sub mov ljmp aaa pop scas je cmp and dec adc (bad) pop sub push dec scas pop cwtl out adc mov adc mov dec mov in out dec loope mov jnp xchg je pop jbe addr16 lcall js ret push inc nop or and mov roll stos adc and xchg shll cmpsb mov fdivrs pop out fldenv (bad) outsb add adc movsl into add adc dec lret sbb test mov lcall stos outsl bound test jle adc xchg int3 mov adc inc in or dec adc mov mov into push test jmp pop stc push outsl shrl fbstp dec aad scas (bad) push out nop lock or repz push lret orb icebp rcrb xchg push adc je or and mov xor adc inc xchg xlat sbb adc sbb xorb sub or dec sub push xor outsb pop push xchg xchg xor cmc push (bad) mov or xor lods repz jl adc mov inc adc and fist lock mov mov jp scas xchg dec dec adc divl or fldl dec clc ror out mov mov std dec pop inc sub push std sbb int3 repz nop mov movsb xchg pop or push or cmp mov leave adc lods loopne adc dec enter icebp pushf repz jnp push popa jb dec dec dec mov scas sub adc adc stc lret dec inc bound xchg mov decl mov std ss ret rolb xor iret mov imul adc mov loope or jno cmc mov psubsb jb jo std adc xchg or adc sub std dec sub (bad) adc mov lock add insb sti xor xor jle jg js (bad) xor dec pop sbbl insl adc sub dec adc outsb adc popl lea lds push out adc adc fisttpl mov jae sub and dec push and repz mov fcoms cmp mov sbb lret push xor mov int3 imul mov std (bad) or sbb xchg adc fisubr (bad) mov mov jns mov adc sbb push (bad) (bad) mov mov xchg ss add icebp mov xor (bad) mov xchg (bad) mov and lahf aad or loopne leave mov decb ds xor push mov lret add mov dec cmp mov scas ffreep inc mov dec or bound push into pushf scas or aam xor fistpll insl out pop lds (bad) sub push inc adc fbstp sbb imul adc pop test or pop rclb dec and ret mov mov sbb pop mov and in shrl ljmp (bad) mov xchg nop xor fcmovbe mov adc xchg mov es pop jnp adc js pop inc (bad) add enter xchg lods cs adc andb in (bad) adc add adc dec jg sbbl mov test jne sub (bad) cmp cs inc xor ljmp or test inc hlt mov cld or jg push jns cmc fs mov mov repz loopne jp pop mov adc stos loope jg push scas adc cmc xchg mov mov pop cld or push test cmc (bad) in jbe pop adc pop add push dec xchg sub and bound xchg adcb and nop test sbb jne lds or fwait repz mov mov sbb sub les adc inc xchg inc lret mov and mul mov pop mov pminub mov sub or into repnz sbb inc jnp ret shrb add sbb pushf pusha adc (bad) cmp in pop inc imul or push mov jmp jmp fnstenv movsl les fs and adc cmc sub call adc jle and aaa cmpsl rclb cmpsb sbb adc jge lahf in xchg repnz push xor push (bad) push fistp imulb inc pop fimul sbb adc negb ljmp call ret jno nopl mov jo sbb mov (bad) out dec mov sahf pop insb lahf add and dec jae or popf sbb out leave push mov cmpsl ja adc jnp lods dec mov mov (bad) sbb in ds das fst inc xor andb and test adc les pusha int3 mull mov mov sub lcall mov adc aas pushl or inc dec bound push inc sbb pop rcll add (bad) fnstcw inc xchg outsl ja inc and xchg mov pop movsb sti jne test adc lcall (bad) shrb adc imul repz adc int3 push sub scas sbb sbbl dec repz adc cmp jne jl lods or pop decl dec daa xor pop inc adc xor pop adc lock jns push pop push rorb adc sub movsb mov out adc fisubr add adc (bad) or data16 pop sti sbb imul jle jns not cwtl adc add inc push adc icebp cli mov push pop stc mov mov les sbb sbb xchg sbb adc or pop mov out imulb jge adc xchg je cmpsb mov or adc pushf jb dec cmpsl push pop or cmc shrb or test or lods push (bad) test add repz stos mov aas adc mov adc cmp lock in aam sub daa stos xor inc push mov popl ret adc pop mov cmp pop push sub pop dec xchg data16 fmull pop xchg jns bound dec adc (bad) dec icebp adc add adc ss cmc setge adc sub jl in sbb or adc call enter repnz mov or add xchg mov in push (bad) sub adc outsb sbb mov ret loopne (bad) adc sarb cmp lds das ret push push sbb hlt sbb adc lcall negb stc mov cld add adc jmp lret outsb mov cs outsl adc sarb jg movlps js arpl sbb mov insl repz int adc adc bound test xor mov mov pop rep sbb xchg or adc push call adc mov adc jg adc adc push adc and std pop adc aam outsb sbb pop push lea cmc mov jo insl mov js (bad) jbe adc xlat das mov fbld (bad) jae xchg loop fnop sbb rcrl nop adc repnz mov push dec mov cmp jge adc sub je push stc mov adc and adc or add test pushl or inc adc stos adc jge push test movsb rolb pop and fistl cmpsb (bad) stos fcomip dec cmp fstl fstps jnp test inc pop mov hlt mov les adc movb loop push dec adc es imul add cmc lahf nop cmp cmp test mov (bad) jae dec dec add repz aam in adc in clc rep jns mov mov sbb gs std adc inc or mov clc push adc test and adcl mov sahf pop imul add dec lret xchg outsl xlat jo mov enter jne iret xchg mov int3 mov adc mov (bad) pusha adc dec stos aam sub popa xor push std cmpsl adc jo hlt cmp lds mov adc dec inc mov ret adc push sub adc arpl cmc shl mov jecxz aas mov mov lahf adc and sbb out ret add adc je jmp xor clc mov and fs loope mov xchg mov dec add adc data16 adc stc xchg cmp mov or xchg ss shrl adc mov aam xor push and xchg jecxz test jo std int3 mov adc repnz mov push adc stc imul sub js add adc movsl inc pop mov lods sbb and test mov adc repnz arpl adc imul sar cltd sbb add sti jo cli xor adc jne fs xor mov jbe test mov xor rcll xor cmc addr16 mov adc fnstcw ja sub adc (bad) dec push xchg push movsb adc xchg fdiv xchg lret xchg test repz pop adc jo out bound cmc adc mov frstor cmp adc adc jo xchg mov inc mov jl (bad) adc rorb and popf iret cwtl pop adc and lods adc into leave fisubr sbb sbb dec ret sub sarl and jle (bad) sbb pushf and repz pop nop (bad) loope adc mov jg jecxz pop lret je out xor xor decl sahf adc cmp xor jl mov or pop es gs iret mov cmc mov fidivrl adc out inc test push add adc imul jge popa sbb xor aam jbe mov aas scas or pop adc (bad) xor mov lock cli lahf adc mov jl xchg insb xchg fdivl adc pop dec dec movsb std or inc xor xchg out add inc or cmp jge adcb and cli imul adc (bad) (bad) mov inc adc sbb adc imul xchg das inc xor cld (bad) xchg push imul pop push sbb adc pop lods aad adc mov (bad) cli xchg mov mov add xor sahf dec imul in lret or push adc adc cmp adc gs into mov and loop adc outsb dec std je shll ret jo sub dec (bad) mov xor jo lods cmpsl test pusha cmpsb in lods sbb push dec fwait pop adc repz push adc pop out fwait mov dec loope fiadd xor test outsl scas pop movsb mov aad in lahf (bad) mov adc repz adc stc lock mov in movsb add cld xchg push jl mov clc sub xchg cmpsl fnstcw fwait pop stc js popf mov and add dec mov hlt ficom push (bad) mov mov xorl out (bad) adc add adc xchg mov xchg jecxz pop daa adc sbb sub cmc insl repz adc jae rorl xchg mov mov dec std leave repz nop or adc or dec adc xchg out xchg or shrl jp lret stc and inc sti imul adc std push movsl in adc push in mov mov repz sub fwait adc mov repz xchg or xchg rdmsr mov inc je fwait pop test xchg inc mov ja jne adc pop or ljmp adc loop jbe add add std mov mov mov push in cmp xchg push or int3 adc flds push mov seto jns fdivs mov popa adc push dec lds dec add adc arpl gs fwait and subl pop ror es jne enter ljmp je push xlat dec adc or mov lds dec cld stos (bad) adc out rclb jae push xor sbb loope push pop xchg sbb pushf inc sub push enter or xchg xor sarb orb add adc popf mov cmp pop test sub addr16 jmp dec or into hlt add dec mov mov push sub pop and fsubrs in out iret dec adc adc lahf dec pop mov push ljmp jb mov imul jbe push cmp xor inc scas test jecxz adc fcoms jg sub (bad) cmp dec inc push xor sbb adc xchg add psubd outsb (bad) mov daa mov push fnop mov sahf fsub mov jmp cmc mov fimull adc add push adc js das shlb pop mov fcomps xchg daa in adc and test adc lcall jne,pt test sbb adc mov cmp jns push sbb in mov int shrb or sbb adc lds call mov cmpsb rorl push aas sub add lret scas and add inc adc repz hlt lea inc push sub or xchg xchg ds adc ret shrb out cld xor sub hlt mov (bad) out xor ljmp jl inc stos fnstsw pop (bad) adc aam xchg adc dec les mov xchg test mov pop adc fs pcmpeqw mov pop loopne or sub int xchg lods push mov push scas (bad) jmp pop jo jle imul or cmp mov sub pusha cwtl test js jbe ja in sbb addb aad lea jl mov mov dec jle add mov in xchg sbb xor out pop and push pop in mov jg paddw adc pop adc ljmp int (bad) jp bound xchg fdivl repz aam nop mov mov repnz mov adc jmp adc out ss call mov enter pop jno int3 mov xor clc aaa rcr jmp or lods adc nop jecxz xor mov dec scas mov js xchg or adc mov adc jmp out pop ficoml xor movsb popf loop mov adc sbb pop ss xchg mov jl and adc and push jns inc lods dec hlt pop mov jle jne movl aam out dec lcall adc aaa xchg idivb outsb xlat adc and in aaa je loopne enter sbb dec (bad) outsl push jp pop lea in cmc int mov jns sub (bad) mov pop adc cs (bad) repz ljmp mov xor mov lds jne xor adc out hlt outsb mov aad sbb adc jle xchg mov imul jae fisub clc adc in loope out adcb jae xor int3 sbb dec (bad) movsb insb jl int lcall xor mov or mov divl addb push pop add fcomip adc std outsb jmp les pop adc add xor out xchg insb sahf mov adc test and dec mov push (bad) mov and outsl mov push (bad) xor sbb adc test hlt repz repz mov jne adc xchg cld adc fnsave push adc sub bound xor xchg mov fistl cmp mov rcrl sbb insl jnp repz (bad) mov lods push push test les jbe aam mov fidivl ret adc outsl ljmp mov or push out xchg (bad) mov (bad) add nop pop dec and adc and movsb cmp mov outsb pop lock incl aad js and pop or dec xor add popf push add jne inc push aaa push (bad) into (bad) jmp sbb icebp cmp adc adc rcr es xor (bad) mov adc push dec adc fnsave repz (bad) dec push mov add arpl adc mov or xor pop adc rcll or mov jns pushf ds jo icebp adc hlt (bad) adc pop in mov call xchg pop stos hlt ret and shrl cmp mov mov movsl mov adc jno std or add (bad) pop push dec notl in adc ret mov sub mov lahf push add inc fs mov adc xchg or les scas adc js pop mov adc xor mov and sbb jno add sbb movsb adc (bad) insb sbb in repnz fisttpl pushf incb adc psllq mov or sub test cmpsb (bad) (bad) icebp jnp sahf pop stos inc cs ret (bad) lret and lock pop sti popf xchg inc mov gs xor repnz adc test and xchg int adc push jae adc pop jo xor leave adc push sbb les lods mull sbb adc clc (bad) mov popf jp push in (bad) jbe adc inc add jo cmp ret adc pop inc (bad) dec inc adc inc dec (bad) popfw lods fwait int3 adc mov jnp iret mov outsl adc sub cmc scas push lock roll rolb leave cmpsb adc sbb ds mov push xchg adc pop inc sahf stc adc hlt xchg stos dec fnsave inc repnz repnz and adc ror sub xor fsts inc es inc add dec dec xor ret add nop inc enter or add ficomp addl adc or mov sbb add adc push mov test scas shll add and push into adc xor adc push dec movsl jb int3 (bad) imul insl aaa push (bad) push loope adc aas add adc mov icebp test cld push sbb adc push xrelease stc lret mov mov (bad) popf add icebp mov setae out repz mov arpl aaa pop adc mov jmp and mov mov insb add add jb repz outsl jge mov adc adc iret adc cmp or gs addb nop cli cmp pusha add bound xlat jnp (bad) dec pop push incb mov mov je shrl fistp pop arpl (bad) mov js adc sar sbb dec cmpsb or adc js fidiv (bad) or rcrb sbb push jecxz mov pop cltd cmpsl pop pop popf lret xchg add repnz cs adc pop sbb mov adc adc sub dec adc or sub orl xor mov in (bad) std fistl inc lea push mov jo mov fisttpl inc loop xor popf pop adc sub pop or sbb add loopne sub inc adc je sub inc (bad) or mov adc ret scas into (bad) jno mov popf cs adc (bad) enter mov adc xchg aas fistl lock adc adc popf dec inc add adc sub push repz cmpsl std rol pushf outsb fimull adc adc repnz into sbb jle repnz xchg in jle jb outsb ja mov xor out sbb jne lahf adc leave adc movsl mov fsubr sbb add into lret inc adc sbb push pop (bad) gs scas adc jmp test in add mov add pop movsl mov inc insl jl jb je stos adc movsb (bad) (bad) or (bad) mov inc rolb xor pop jp cwtl ljmp inc test mov sbb fisttpll add (bad) in cmpsl sbb rclb loop dec dec (bad) sbb mov outsl (bad) fsubs cmp sub xor cmpsb xor mov adc xchg jp scas cwtl mov adc mov fcoms or test shrl dec adc or std ljmp cmp or mov rep mov mov or push fnstenv lret sbb adc icebp or pop adc pop adc sub repz mov popf test por jle iret mov sub or sub xor sbb (bad) pop inc insl lods insl mov adc fistl fmull push hlt adc sarb or mov call in outsl cmp lret ljmp mov mov cmp test adc aas (bad) movsb pop pop fs pop push scas xchg xor out add aam cmc xor jo push or xchg stc rclb mov sbb jg cmp std es xchg jmp cli or lahf ds ficoml jo das dec es repz insl dec imul adc mov rorb xor pop push cltd sub stos and cwtl dec lods cmp test push (bad) scas adc mov sbb adc mov cmc data16 (bad) je int (bad) out and rorl test sbb cmp mov cli mov js and pop push mov adc push dec aas rcrb mov mov arpl xchg repz cmpsb frstor enter mov lea sbb and push adc pop fidiv sbb push pusha xor pop out enter je mov and jecxz movsl int3 adc loopne jne pop dec dec xchg outsl lret mov add cwtl loope adc ljmp out dec jo popa dec xor clc incl lea fidivr adc and jle xor mov add adc cwtl pop push in dec inc push xor or add add negb out inc out andl jge mov mov bnd inc repz daa inc sbb stos or adc outsb out scas or sahf lret adc fbstp (bad) xor mov mov adc rorb jno push out (bad) inc or adc jmp pop sbb in ret mov and inc mov fild mov adc mov mov adc fs adc not insl test es and and mov mov out pop or xlat xchg leave setno cmpsl cmp xor rclb xor add cwtl je pop adc mov adc jmp jl pop outsl cld adc ss adc arpl jno addr16 je push outsl adc js pop into sub (bad) rolb test add mov adc and inc dec shl or jns mov rsqrtps js scas enter repnz lock xchg lret cmc mov adc push sar fist add les jp pop adc mov and out mov adc and xchg push leave orb adc shrb fsts (bad) xchg ljmp dec pop aaa adc lods aas inc mov jns adc int std xchg ret (bad) gs xchg fwait push inc mov add cmp push mov mov pop adc xchg jle dec mov jmp lcall rorl imul fmuls pop stc adc xchg adc adc out xchg xchg jg jnp cmpsb xchg cmp fmuls pop lea dec adc (bad) mov clc scas test xchg push adc std add xor pop cmp adc sub arpl or adc inc dec dec adc sbb mov dec rclb or pushf movsb mov in add jmp test sbb add int3 mov mov iret or nop fdivl jb xor adc out aad xchg mov push (bad) aas push inc repz fucomp gs test adc add fwait rolb dec push out sub pop cmp xor pop jne ds pusha and inc and push not adc add aam (bad) loopne cmc pushf lds jns sarb shll mov mov cs arpl lods scas mov leave pop mov inc cmc mov push jns push faddp sbb adc icebp out ficompl mov sbb in adc push jl xchg test ja data16 adc repnz cld adc enter popf jmp aas aad pop mov mov adc fsts dec fildl adcl and adc repnz and stos or lret mov sti adc push imul jo cmpsl (bad) push adc shrb ret stos xchg (bad) shl cli adc test adc mov and push or cmp ljmp call loope cmp push dec (bad) out gs aad les pop mov push sahf (bad) push push xor jo or lock cltd adc jle mov sbb xorl shlb xchg xchg test inc xor ss dec pop (bad) xlat and bound int push cmpsl adc (bad) adc es push popl popf sub int3 cmp cmp or ficoml xchg pop sbb sarb and test int stc mov push pusha rorb repz adc pop imul or in fistl (bad) aam inc dec inc cmpsl cmp scas xorb mov push adc push jle mov daa ja outsl push xchg lcall jae adc add out adc mov outsl jge pop mov in fldcw stos cs mov mov adc test push mov and push (bad) ljmp popa mov int3 xor popf data16 pop or mov jno push adcb (bad) mov setnp mov fsubrs loope xor and jle adc add rcll push inc push inc mov mov in (bad) insl std inc mov xchg sbb (bad) cmp adc daa mov mov adc sbb pop cmp sbb aas adc pushf mov outsb or mov dec adc push movb cltd adc dec xlat sub shll sbb mov ftst or add fild popa or pop xorl (bad) into xchg nop dec pusha fiaddl cs ds xchg add fdiv hlt mov cltd lock cwtl pushf pop or push pop in adc lods lds mov pushf dec push sbb hlt push sub lods sbb sub xor jge adc mov mov (bad) xlat push adc sbb popf mov imul mov (bad) iret (bad) (bad) mov sub mov or lods lahf or sbb adc (bad) cmp sub adc mov push adc push add sbb xor and jecxz out adc and xor sub sti adc jb (bad) mov mov xor pushaw aad or repz adc (bad) pop notb aas add fisubrl mov ja add pusha push inc shrl xchg push mov inc jmp ret xor adc (bad) mov jl mov or out pusha pop mov shlb inc cmpsb jmp mov int3 jnp (bad) out push bound in lcall adc mov sbb xor or push xor mov cmc mov das pop adc cli jp aas sub (bad) adc outsb pop mov adc cmp fisttpll sbb aam or mov sub cmc fstl pop addr16 jnp mov shl cwtl lods out or dec push rclb mov add (bad) push and lea adc dec mov ret add dec fdiv dec sub or xchg hlt inc icebp adc outsb lret pop outsl adc scas lods cmp addr16 adc mov pop and mov loopne ss pop negb stc mov cmpsb imul sahf xchg adc adc inc mov adc ret cmp xchg jle jne lds dec add mov pop dec popf adc jbe adc push loopne mov sbb out pop pop or xchg int3 add or push out mov sub inc xchg fmull test mov push pop leave inc out ficom data16 and ds pop xor or pop mov repz xchg mov jecxz je aaa clc test stos xor xor adc loope mov loop adc xchg xor or adc cmp jnp push sti cmpsb adc xchg and rclb (bad) movsb xchg jmp push faddp or idiv adc out xchg das mov fwait lcall mov out call mov sbb dec repz test mov xor xchg iret lcall adc mov fsubs adc ds cmp data16 jne pop adc inc add jno nop adc bound outsb test enter push pop adc mov mov lahf adc pop stos inc leave push int cmp adc sub insb lock mov imul inc (bad) and repnz aas or adc sbb adc imul inc (bad) scas sbb lahf adc daa das out adc (bad) adcl (bad) scas xchg cmpsb add jg int mov js pop jb fisttpll mov ficoml push out scas aaa ja pop lods adc je (bad) xchg mov fsts push sub out push pop pop xchg (bad) lods xchg and add xchg scas loopne rorl out mov repz lret mov adc lods movsl fstl and or sbb adc add repz sahf aas mov pop xor add aam mov lcall sub pop inc jno add (bad) mov daa (bad) mov xchg insb pop mov (bad) jae into xor (bad) repz fsubrs mov mov jae mov (bad) cs cmp inc sbb xlat jno leave and aad (bad) fldl rolb adc or cmc pop mov xor mov adc pushf imulb gs shr rep mov bound add out sbb jne fs inc icebp orl pushf adc std add loop push int3 pop dec adc popa xchg mov ret xchg cmp mov adc cmpsb nop aaa or sub push pop push xchg adc push push lods adc and dec adc inc (bad) adc lahf aas test pop add adc lret pop jb or adc sbb adc jp cmpsb xor xchg addr16 add jecxz push push fadd add xchg call adc bound adc sub adc push cmp dec lods and adc fsubrp inc lret out mov repz enter mov jge test pop cmp fwait cmp int sub ljmp inc rcrb js hlt mov mov aam gs scas pop pop cmpsl inc out adc fiaddl lcall jmp fs test add jl mov dec push test std add sbb jnp adc mov nop (bad) repz les cmc adc lods icebp daa mov inc cld and cli xchg adc repz repz jae fisttp adc lcall mov adc add mov hlt repz push xor and lret out ss mov outsb pop mov cli std mov hlt adc repnz push pop jbe repnz cmp out js (bad) push rcrb inc and mov push nop loope sbb adc inc pop mov mov clc sysret pop cmpl lret insb adc push imul inc dec dec cmpsb add es leave xorb iret mov les popf adc es inc adc jmp fdivp shrb cltd hlt mov dec xor push push setb fcoml xor stos cli sbb adc out pop imul gs mov pop std push lods or add or push mov cmpsb mov sub sub int push jno xor ss das mov and pushf cld pop (bad) jle jl dec pop pop or aad adc xchg push repz add jmp adc das cld outsl pop sbb jl lock aaa mov mov in cmp aad xchg jo out adc xchg mov stc out adc les into cmp lret ds adc das jno sbb xchg sbb jnp dec adc and xchg scas hlt pop xor pop xchg jne loopne sahf ss dec inc mov push adc mov add decl jge das xlat movsb cwtl jns adc pop mov pop scas xchg ret adc add adc dec adc pop push push cmp adc pop sbb movsl mov or push lods adc sub jnp std mov add call pop sub xchg nop (bad) ja sbb aas das fdivrl jmp in jmp sub jg scas xlat idiv ss js rcr sub xchg cmp push mov xor pop jne loop or sbbl das adc std sar or insl test inc or data16 (bad) lret adc repnz mov mov add adc outsl pusha pop jno nop cmpsb or lret cmp mov adc jnp dec psrld aam (bad) sbb xchg insl rclb ja mov dec scas mov mov addb mov dec cs jp mov pop fistpl push mov std jle sbb cmp adc or jbe mov aam mov mov ljmp aaa in xor jno orl dec int (bad) adc aaa xchg sub xor test pop mov pusha out adc loopne add xor push mov or lcall cmc jns cmc divb push dec jbe mov sbb sub pop out aaa push fs repnz sar insl jno es in adc push inc and movntq out sbb adc pop lock add inc dec lcall cld mov (bad) mov cmovbe or fbstp sbb or shrb insl lret clc cmpsb push test or mov add mov push jp test xlat out or dec xchg jns sub repz pop or or push sub cmp or dec mov mov xchg dec outsl adc jno int3 rcll adc jge out adc mov sti das hlt adc cmpsb add repnz adc push sbb (bad) popf sub mov sub (bad) xor pushf add mov mov pop adc (bad) into popf hlt mov pop mov leave jmp test aam mov int3 ds push scas mov mov inc adc mov push xor aam popa mov add int adc xchg stos xchg test cltd addl inc and jb aas loope sbbb repz int3 in push xchg je inc adc pop mov and lds dec pop sub push cmp out inc adc (bad) adc sbb loope push loopne add aaa scas jmp or sbb pop lret xchg adc ljmp mov repnz inc out nop adc lods call jecxz dec jno ficoml cmpsb jp je fcoms (bad) movsb mov fiadd add adc jnp es loopne or jp adc pop (bad) mov mov notl jae out popf pop adc lds mov ja mov sbb cli bswap pop jmp and repz pop jp adc pusha rcr lcall add push adc jmp pop xor dec adc je xor cmp hlt jae aad daa (bad) popf pop subl jl sarl shl shld sub jne vaddpd cmc pop jnp sbb sbb xchg xor (bad) sub out xor xor test cmp mov xor arpl push sub jecxz rcll into mov sub mov mov cmp test lahf mov jnp repz ljmp loope lcall sarl pop lock cmpsl adc repnz adc insb addr16 in ret add pop push inc xchg lock stos (bad) rcrb andl inc xor sbb in (bad) add sub adc or notl adc repz arpl cmpsl insl sbb int clc cmp mov adc call and test jecxz xchg ret mov adc mov scas adc xor or jle notl adc imulb lret (bad) jecxz adc inc sub repz dec bound loopne jge scas pop sbb jg out ror ret push add int3 xor inc xor lods rsqrtps push stc js ret or lahf adc or repnz push (bad) and pop inc adc loopne iret adc movsl adc (bad) mov mov not and mov jnp fs xor pop les dec adc inc dec loopne cmp mov sub (bad) jbe xor shl jns pop mov adc push out scas shlb lcall (bad) and push dec inc or insl xor or push fnstsw mov jmp addr16 adc pop sbb aaa push aam dec lret aas pop mov pop cmc pop sub pop es or aas cmp fisub adc test repz xchg (bad) jmp push adc mov stos stc mov dec ljmp int3 push adc jbe ja and insb push sarl xor adc stos adc shrb (bad) (bad) jnp add (bad) inc mov jmp adc inc jnp jns mov and jg mov insb inc jle ljmp rcll repnz inc out inc cli int3 dec adc gs outsb scas ss into cmp mov fwait push int3 mov sub std je and into outsl hlt and mov add lret sbb loop mov add adc faddl int adc inc (bad) (bad) adc out aad repz js sbb lret adc mov mov aam or pushf adc mov xor cwtl inc adc xor stos dec jnp sbb jle mov mov adc fcoms jo xchg (bad) aas push adc adc adcl out pop mov adc pop jo adc dec outsb daa icebp dec xor adc ss jl ficomp (bad) mov jg xchg adc sbb adc fbld ss pusha loop adc jmp adc dec (bad) mov add popf mov push sarb or add mov stos addl mov mov mov xchg roll stos sbb mov cs push dec das dec adc and sub aam add ret jecxz into cmp lret mov jbe sarl xor xchg xchg inc gs lret mov adc notb ljmp push adc xchg add mov lret or xor mov adc jae jbe (bad) xchg jmp nop setno inc in or or add sub int3 adc push sbb and ret inc xlat fmull shld pop adc push xor add adc push aas (bad) imul dec scas (bad) mov xlat and xchg shr mov jns push mov xor cmc adc jle ljmp xchg ds mov adcl push ret test gs jns or add bound stc mov lcall inc sub jle cwtl adc push or mov cmpsb enter or add mov mov pop int pop xor shrb xor loopne adc addr16 xor sub mov int xor (bad) fstl mov cwtl cmpl adc mov push (bad) ljmp mov and or (bad) div mov repz imul xchg out in outsb nop push mov add in repz and push cmp sbb adc adc jbe inc dec pop push push mov add pop int3 push lods inc notb rcrl jbe xor sub xchg nop hlt notl lock mov cwtl jo je in (bad) out fnstcw popa adc dec mov mov or jbe mov orl jne cld adc mov xchg adc xor data16 dec (bad) adc scas out ret cmp adc rcr jne (bad) fcoml movsb in cmp sub outsb dec xchg test mov mov std iret sbb pop push add lcall insb push and out (bad) jns sbb push jl cs (bad) ss cmpsl xor jns lods and outsl outsb inc dec int pop inc adc aad adc jb cmpsb inc or dec js or or pop (bad) mov jge gs imul mov pop adc mov (bad) mov les loop inc int cmpsb xchg jo push ss jl orl cmp jno call add nop adc ljmp add notl mov cltd cmp test mov mov or lcall xchg inc pop adcl jecxz je and or repz and mov sbb notb mov jge fcmovnu ret mov mov adc lahf mul adc rcrl inc ret or nop dec cmp aam xor push mov cmp sub aaa xorl mov xor loopne ljmp cld test mov mov jb lea adc mov sub mov pushf jmp cmp adc and iret dec scas imul lahf mov adc jne ret pop inc xchg xchg adc adc pop cmp pop adc dec add adc mov or jmp daa cmp push popa adc mov jno adc daa and mov test test adc xor lahf je dec pop adc inc mov add adc or or adc adc lcall notb scas dec jbe pop xor xchg call scas aaa or mov loop xchg adc xchg ror (bad) xor in aam mov pop jmp push pop insb and sbbb sbb dec stos mov aas mov jg repz (bad) and adc mov ret sub mov xchg push pop sbb xchg sub test arpl loopne cmp rorb sti mov shll rcrb or dec mov dec outsl pop das pusha or adc jo cmp push pop pop insl xor in cs pop ret xor adc adc xchg cmp gs lcall xor add dec adc or mov fild jo xor or gs mov pop jns int3 adc sub xchg pop iret adc inc dec es pop mov push inc mov adc cli mov aas jg mov ret xorb out sti mov insb push iret xchg and adc cmp into lds mov sahf fidivrl (bad) sub inc sub aam int3 or rolb out jno rorl sub incb add negl xor pop adc ret cld xor insl ss bound (bad) adc push adc or pop mov sbb mov adc not outsl call js xor loop cmp sub dec jmp lcall add test cwtl jno enter dec adc sub pop xor and pop mov add loope jmp adc cmpsb jb repz dec fld call or adcl cs pop fist jecxz xlat out mov inc out cmp adc adc inc jnp and mov rolb adc nop xor imul mov mov mov repz lods pop (bad) (bad) jge mov cld enter fist adcl daa xlat mov js inc ja lds add mov scas mov adc and jne repz repnz mull dec mov jne hlt (bad) cmpsb sbb divl out adc adc xor cwtl or mov and add in mov xor sub add or push push out (bad) mov int3 add adc popf push icebp fdivrl test imul push adc jmp adc mov xchg (bad) hlt sub and xchg adc (bad) sbb cmp scas push pop jge mov inc lcall and inc add push into das push jp sub repz inc mov iret xor arpl push repz in jecxz xchg inc push lock iret repz mov cli negl and mov icebp or sub xor jmp adc je pushf cmp mov adc ffree cwtl add adc jnp pop dec outsb jl imul xor adc xchg mov adc push sbb pop (bad) xor adc fldenv xor jne cmp sbb xchg or repz gs inc scas aas xor sub cli pop (bad) rcll mov nop movsb mov rorl inc adc push popa adc lcall sarb out adc or mov and or mov fldl sub add push adc scas jae jo xchg adc (bad) sbb ds push (bad) out or xchg (bad) fstl aaa dec test dec ss lds rorb (bad) xadd or test out or adc push adc insl aaa or lret pop in mov mov xchg pop ja sub insl adc jle stos popl les imulb mov inc inc xor mov loope (bad) mov or pop pushf cmp daa adc das call (bad) fsubrs adc into into mov or cmp adc (bad) sti gs adc mov add mov or cmpl inc rcll repz adc dec cmp push fistl mov (bad) imul mov popa (bad) loope cmp push scas inc mov pushf adc inc cmpsb fwait adc inc push aaa fildll adc pusha int3 push dec xor ja xor cmpsl xchg dec mov aad adc ret gs or sbb adc roll aas aam movsb in ret mov pop scas imul enter add adc dec ds sbb outsb adc ja jmp (bad) (bad) insb mov adc fmull int3 nop fisttpll adc js dec inc add mov push push cmp fxch xor bound outsl mov cld addr16 jp hlt popa data16 add push addb mov sbb and adc arpl or sbb push test adc xor mov add stc push mov dec stos movsl adc mov adc (bad) outsb cmp cltd xchg dec sbb xchg xor sbb mov xor push hlt in mov sbb or mov jno adc (bad) or test mov insb lods adc dec pop jl mov adc popf aas in clc sbb lods mov movsl xor icebp adc aam aaa cmc mov push mov push adc stos mov mov lret cs push jmp sub cmp xchg dec into or rcrl mov cltd inc add inc hlt dec popf loopne push roll mov rclb aaa mov inc pop dec jmp xchg lret rclb and and mov and sub mov inc xchg arpl and add stos jne and mov daa inc adc mov divl bound cmp push add or push dec xchg adc pop adc xor test lret pop jo sub adc mov insl or mov pusha dec (bad) pop adc sub jl pop divb jg cmp pop arpl and jnp rcrl cmpsl aas dec sbb hlt and aam popf add cs push lcall mov arpl adc push imul stc call pushf add adc leave imul jb movsl mov jnp out dec fimull xchg repnz inc aas movsb rclb lret jp adc int3 cmpsb lahf or cld adc push mov or push add adc arpl push push cmp and lods mov movsl mov push xchg add mov mov (bad) cmpsl pop shlb xor stos add out adc dec pop enter lock ficoml add jp mov ret adc push sub mov cmpsl pop adc shll (bad) pop adc mov jbe out mov jge mov cmp or adc mov push dec ficom adc dec iret and cltd xor lds mov jne icebp add andl aam push mov adc xor scas aad adc jae iret jbe mov adc xchg mov insl or push adc pop or (bad) jno stc data16 sbb ffreep arpl gs ds jbe pop pop adc jb push adc adc inc fwait jg mov out sbb xor add lock pop jno adc (bad) loope shlb add (bad) push sub sbb sarb push addr16 pop rol scas xor inc sub test insb or inc mov outsb adc inc jae push xor dec ss mov mov mov popf in or jno mov xchg mov sti cli adc js scas adc add loop insb outsb jns cmpsb sub (bad) mov sti mov clc lods add mov popf adc mov popf ret adc jne es movsb (bad) sti psubusb xor test mov pop mov push adc and fildl lock xor dec push sbbb jge adc ficompl adc sub pop and in arpl cmpsl lcall adc mov insb adc popf aaa lret sbb je mov loop sbb pop rclb add push (bad) mov sbb mov lods or adc addr16 pop out adc call and mov loopne xchg mov add push (bad) mov jmp cltd (bad) dec cli or inc pop subl insl stos add fcmove mov (bad) repz pop inc jg push or adcl sbb (bad) xchg outsb popl loop xor nop lds add std lcall add dec and cmp sub mov mov aad rcrb adc addps (bad) mov arpl ds fcompl mov stc add mov stos mov pop and dec sub out repnz xor xchg push adc pop adc push pop ja test shlb pushf (bad) jae mov lcall inc cmp cld or test mov jp or jne xchg adc xchg repz test outsb arpl aas push xor push addl adc sbb mov inc push (bad) mov popf (bad) or and jno or lcall int3 push pushf ja jnp test push pop add adc lea popf ss es push adc cmp push or inc xchg mov ljmp dec mov fucomp stos into push test add cmc jecxz sbb jg xchg push add mov adc repnz les clc mov adc inc push pop adc mov pop jmp add jo int cmp cmp or pop lahf fisttp repz out sahf and or mov and icebp dec or xor sub push push vphaddbd cmp in adc sub inc adc (bad) out ficoml scas jge les cs (bad) arpl and dec mov je xchg cmp and pop xchg mov add add fisttpl push mov sbb test inc sbb es sub mov fisubr int3 push lret mov pop fwait mov repz sbbl adc in pop popa mov add push push lock adc mov das and jle cwtl shlb push in jo fcomp mov pop pop popa pop push inc insl test cmp or mov mov adc mov fistpl adc add and cwtl (bad) and das push (bad) fldl loopne or mov pop adc add adc push sahf mov imul xchg in lea div lods dec jbe sbb mov dec push cmp jo jp push hlt insl js sbb in sbb (bad) adc xor jne sub (bad) std rolb sub xlat pushf or mov inc push adc test scas sbb pop adc mov push jge dec adc pop daa jne (bad) or movsl add insb pop mov test xchg out (bad) fcoml adc and fwait mov shrl sarb adc imul leave (bad) sbb je lret mov and mov push xlat dec mov fisttpll shrl fs and or jno mov (bad) clc or roll mov (bad) push mov sbb sub mov xchg adc lret gs pop je dec mov push xchg xor add xchg lock adc pushf popf push xor adc cmp and loopne (bad) daa xchg mov adc addr16 repz test or das add adc std ficom mov sbb cmp repz add jb aaa add or adc jae push inc hlt insb sti adc pop dec jg loope mov sub sub pusha push repz sub iret push push xchg or adc add mov shlb xchg jmp es adc xchg aas stos and xor ret add fiaddl int3 popf adc jnp fildl fnstenv out setne ficom xor in jg (bad) mov ret mov test or mov mov push data16 pushf sub mov aad adcl cmp jb inc repz adc js ficoml out jne ss or ljmp arpl or adc cmovl dec mov mov inc inc inc sbb aad sbb push mov cmpsl mov jmp aas out imul inc aam test pop arpl int cmp mov mov notb mov pushf cwtl out xor sbb repz adc in xor aad jecxz (bad) mov sub imul lea lods push (bad) fnsave std sbb xchg xchg rcll scas jecxz in jno repz out popf outsl adc fisubr adc jle cltd aad and cmpsl out mov inc addr16 mov pop scas test add add jo aad push rol add cmc into push ret fistpl ficoml jp pusha push (bad) (bad) andl push jl add hlt push or pop cmp mov loop dec aad jb es adc cmpsl xor push mov adc adc cltd xor cmpsb pushf cld adc fsub adc xchg push bound gs jle cmp pop and dec (bad) add ficomp jp nop xorb jno mov lahf aam mov xor cmp mov mov lret popf mov hlt cwtl push adc stc aas jno ss mov xchg dec lds jmp jb mov daa add cmp push xchg dec mov in jmp or call xchg pop test inc adc mov (bad) fdivrl (bad) je sub sti imul aam or xchg dec fs fsubs in fdivl sbb arpl loop (bad) cmc pushf adc mov adc int outsb rolb mov lods push pop push inc mov sbb leave inc add je xorb lods cmp lret adc sarb adc (bad) adc out xchg jle jg cmpsb adc or lock cltd mov adc out sbb mov out push cld cmp adc ficom (bad) adc mov mov sbb insl adc jo jb sub jns lret loop or fist jecxz xchg xchg insb jmp push pushf test adc mov inc and out push aas add ret pushf stos pusha cs in mov roll mov cmp or adc mov lret fs hlt pusha faddl mov sarb or mov stos into (bad) cmp mov pop jno jl jg xor fldl mov pop and int es mov jp fadd in dec jmp pop adc jge cld xchg mov cwtl lret (bad) leave sbb xor and mov sbb in sbb and gs loopne test inc pop pop cwtl cli into (bad) rclb andl loopne push sub add adc mov cmpsl push pop pop test xchg sub gs inc out scas repz pop xor jo xor or es loop lods or cmpsl adc jg and data16 jbe dec xor inc pop shrl imul aaa loopne fst int adc mov mov mov jmp cmp inc scas pop stos inc loope out xlat pop mov xchg loop stos repz push mov mov adc sbb lcall fwait pop daa jle adc or rep mov sbb jnp icebp adc fwait cmp movsl popf xor jno adc mov bound dec rclb mov nop adc out xor mov jae (bad) xchg lods inc stos mov shll sbb or jecxz mov mov outsl push adc xlat sbb jns sahf sti dec adc imul mov adc stc fild scas mov neg inc dec into and addr16 pop add mov adc sbb push repnz mov mov mov add adc or (bad) xor and je cld cmp jmp aad or call cmc push or adc push jo xor fwait in mov (bad) adc dec gs (bad) xchg neg xchg clc pop into add pusha or push jp cmovnp in (bad) hlt inc mov push ja out lret rclb or or loopne mov push sbb add sub movsl rcrb cltd or push xor jecxz insl sahf sysret fwait insb stc mov xor xor jne and lea (bad) inc fsub add sbb adc and and sub or xchg adc lods (bad) cmpsl test inc cmp mov sbb add push dec add out and push leave rclb lea std cmp inc sub jnp adc cltd cs mov cmp mov adc mov xchg pop jmp adc push sbbl xchg int or aaa push cwtl adc test call xor mov fist hlt call addr16 add arpl jns or or in je adc push and data16 in jne mov cli sbb lods rcl (bad) fcmovbe add sbb add ror mov fidivl nop mov negb mov in sbb adc fistpl cmpsl adc pop shlb push js stos adc and adc andl out mov adc out adc imul js adc push out jle mov fnsave loopne push push sbb adc mov cmp dec adc jns out pop jmp jb (bad) jbe push pushf hlt in arpl ljmp pop mov jno scas test dec sbb xor das adc ficompl fldenv cmpsb adc ss mov adc sub push (bad) fimul scas pop add inc or dec clc test das test addl repz repnz pop ret (bad) punpckhdq pusha xchg push adc xchg fdivl lea xchg push xor or dec xor or jge pop pusha inc enter xor xchg jmp mov pop xor cwtl fist pop xor push mov xor and lods inc cmp ret repnz adc push xchg adc push and push (bad) repnz add cld adc mov adc mov inc adc stc adc adc dec clc das adc hlt push push adc cli call pop ret cmp jbe lret mov xchg repz (bad) sahf inc repnz cmp adc adc insb mov xor movsl or es repz cwtl mov mov jmp cs cmp icebp test lcall mov add xor adc cmp sbb or xor sub les ss mov cmp bnd mov nop in adc mov gs leave outsb ud2 mov addr16 jmp pop mov das repnz jns dec test push cmpsb push arpl jo cmpb mov movsb cmc mov cmp (bad) psrad (bad) rep jbe lods bound or rclb out jecxz and xor adc or pusha test (bad) stc fwait std xchg xor xor and (bad) adc lret push adc clc dec cmpsb adc lods xchg adc (bad) xlat add mov adc push sub js add div imul dec and int3 adc fcomi (bad) adc jg inc mov pop scas cmp mov jecxz shl cwtl cld repz sbb fmull (bad) pop adc out cmp push cmp nop mov sbb clc mov loop push inc dec les mov xchg pop xchg sub adc sbb enter adc mov inc jecxz sub jg in (bad) mov dec push adc (bad) cs adc lock mov adc movsb pop mov mov mov pop cmc cmp (bad) mov scas ds ss out xchg inc xchg adc mov dec clc adc aam (bad) adc jp dec divl aaa xlat stc hlt pop mov pop or dec adc push xchg leave outsl cld push sub clc mov xchg nop dec (bad) sbb rolb pop cmpsl sub fwait push adc or add nop sbb stos adc jns mov inc adc (bad) mov fsts aam rcll in push cwtl aaa repz push add aas movsb das stos shll ljmp lds pushf leave mov std mov insl jmp fildl inc adc mov jp xchg adc int jnp aas sub push or rep mov sbb test pop and inc adcb push cmp and mov (bad) adc test mov mov or push fcoml scas xor les sbb xor jbe jne adc sbb std adc push out cmpsl (bad) or stos fwait jmp cmc movsl pop mov adc cltd jns push push add in cwtl adc fwait mov pushf adc test jmp loope pop repz adc or repnz std int3 ds icebp ljmp push mov adc mov fnsave pusha sbb adc pop mov pop sbb adc xor mov adc sub call adc scas inc push sbb js or adc bound push jo push adc gs js dec push mov and out out mov lods ror sarb adcb inc cmp (bad) mov adc and adc or jge push or popf push adc pop fildll mov leave shrl test or (bad) mov fs dec adc adc flds (bad) adc das push addr16 adc adc les icebp lock adc mov xlat sbb pop lock (bad) rclb scas out ret loopne xor mov and sbb ds iret push adc pop je out cmp lret inc cmp adc stos jmp lahf mov out mov mov mov rolb mov ficoml loopne xor push mov lea pop inc fbstp xorl or xchg xchg inc popf xchg int3 adc ret je icebp in lods pop or xor dec adc out jle sbb and add xlat inc and adc xor lret iret loop pop sbb in icebp rcr pop xchg inc push imul xor adc adc dec adc jmp xor dec fnstcw data16 jp mov pop adc cmp and cmpsb int (bad) jl add adc mov nop add inc mov aad sbb cmc mov xchg gs fwait ss aaa out cltd sti movsl addl dec mov jno mov loope cmp adc or inc hlt daa cmp mov sub pop shll cmp add pop test out inc mov cmp xchg push or cmc mov ljmp and arpl sub std imul adc pop insb in div (bad) js and subl mov push mov das mov mov sub (bad) dec (bad) cmc into lods adc cmpsl adc mov out pusha sub pop xchg dec and adc pushf aad fistpl inc insl adc cmp jo cmp stos enter call push xchg xlat imul movsl scas sbb and test nop lret mov add rcr adc shl dec out test inc jbe adc ror repz dec and xchg orl imulb and leave sbb cmc push xchg mov scas sbb cmp add or cmpsb dec lahf adc inc mov cmp mov sub mov add fucomip xor sbb dec adc lods mov and or xchg in adc cmp add mov cwtl push daa pop aaa imul cmp mov adc pop jno lock sarb stos sub pop and add cltd add adc xlat xchg mov pop sarb xchg jno xor mov and stos add or mov fmuls adc notb out jle add adc push mov aas in mov and in mov xchg popa push loope cmp scas cmp mov cmpsb pop jne xlat push repz adc mov inc sub out cmpsb aas mov cmpsl or sti adc pop adc jno loop stos sub divps aaa rorl and jg insb cmp inc dec out aas repz jno add or mov push sti repz jecxz repnz fsts lds pop inc (bad) (bad) nop repz fistpll jo test fs in xchg adc mov (bad) scas adc testb sbb js (bad) ss repz (bad) std fsubr dec pop jno fwait push inc dec adc push xor mov mov adc adc in xlat clc mov xchg cli jge scas aam aam inc mov lods repz gs sub add out push sbb cmpsb or int dec (bad) (bad) fdivr (bad) push ljmp daa mov dec cwtl push and loope cli add nop das inc sti sbb (bad) sub xor jns dec in repz sub cltd sbb loopne (bad) cmp push sbb (bad) (bad) in loope adc repnz mov sbb mov or mov enter and sarb clc or div ss cmp mov lds cmp xchg scas inc inc out fimul mov inc dec outsl xchg or jno adc loopne jge xchg xchg popf push adc add dec adc ror call repz std add cmpsb scas adc ret icebp jmp or dec lods out push inc dec fsts adc mov xor leave pop jmp dec xchg test inc adc int3 outsl mov add pop fadds mov out xchg nop jge mov loope or (bad) arpl hlt mov movsl xchg xchg adc out add mov or (bad) add or xor movsl iret test into fildll dec sub push (bad) xchg loopne adc push ss ja gs add jl xchg mov loop inc adc aad into sub imul jmp ret data16 aad or sti adc fwait or add pop stos adc inc mov inc xor in dec sbb and or adc clc data16 aas test adc push add sbb cltd inc int3 pop or lret mov or jnp fcomp add cmpl push sub xchg lret inc pop cld add xor loopne (bad) jge push fisubrl adc push jle int adc clc test dec and adc sub sarl dec insb (bad) fisttp mov or movl scas cmpsl inc insl in lds pop fildl fdivs push aam xchg add inc mov cli ja inc mov sub adc incl sub jge hlt pop fist mov movsl repz jp cmpsw inc sbb loopne repz loope in and test adc add mov scas pop dec dec insl jmp lcall mov mov adc ret outsl add jbe adc loop fcomps shl rcrl shll mov stos jnp sub or mov roll adc lret xor push cmp jmp push (bad) or cmp xlat sub jecxz daa xchg xor pop xchg jle jle adc mov mov and mov sbb adc xor dec mov cmp xchg (bad) adc das popf inc xor stc je pop pop add loope out nop pop daa sbb sbb adc punpcklwd jo pop inc mov sub aas repz push xor xor bound lds in jg sti sbb xchg mov sub mov mov inc or adc aas jno std xchg xor scas mov cli mov incb add and cmp insl jae pop repz lcall pop fdivrl enter lret (bad) daa jge pop xchg xchg push sub mov cmp xchg sub and push (bad) cmp pop inc jl xchg ss call shlb push sub int3 mov adc adc mov js es pusha and adc jge lret into add cmpsb rcrl lods adc adc jns push sarb test sub add adc aad fwait or or add jno cmp adc cltd push je data16 fcmovnbe dec jne mov test fwait stos adc inc mov inc sub sbb mov adc mov (bad) fiadd jl mov adc jecxz xchg or mov cmpsl mov lods mov push push icebp adc cli adc pop xor femms mov push jae lds (bad) lods mov addb les insb sub adc inc and cmp inc pop jl adc pop mov jg adcl push stos xchg cs pop fistl inc insl add and popa shrl jae repz aaa not or ss sbb pushf adc cwtl mov dec sub push xor icebp hlt repz xor push lods sbb mov sub cwtl fwait xlat adc push lahf shr fs push or movsb mov mov adc clc cltd mov adcl call or cmp fimull jecxz xor pop pop lcall ss add lcall es inc xor test cmp lea adc inc ret insl inc scas add sub xor jo rclb ret repz mov dec lea cmpsb mov mov xor lret sarl push clc fnstenv data16 dec dec ret push imulb movsl in mov pop adc mov mov clc fdivrs cmp mov or aam jne dec mov adc inc pushf aas rcrb and mov jle cwtl and mov pushf je loope sub add fcmovb adc cmp xchg mov aaa popf pop lods insl push (bad) out nop jp lcall cwtl popf dec iret ja rolb fmull pop pop xorb lahf push jno pop loopne ja repz and or or xchg std addr16 and xchg aad adc xlat push ret push jmp cmp jne dec pop bound xor dec add mov les sub mov fmull mov lret sbb test enter dec (bad) test xor push ja adc add adc sahf and into push inc ljmp (bad) jo test jno pop inc or sub push popf addr16 adc jae xor sbb lds push adc dec jl xlat cli cltd adc mov cwtl loop in adc xchg or popf sbb jecxz adc mov inc jp scas jge mov data16 adc arpl icebp getsec or or push push adc mov pop ja sar sbb sbb pop lods xchg nop mov pop jo fcomps mov xlat cmp adc mov add cmp xor inc test popa push (bad) adc lock adc in and notb push sub iret rclb call scas push add sbb test test jo add jmp dec jp mov mov (bad) jge dec scas adc popa ret rcrl gs adc jl lret pop add dec mov cmp stc fldenv int3 cltd add mov out pop jno pop repz fwait int jg (bad) sbb enter pop dec cs popa inc imul mov insb xchg pop (bad) lds fdivr xchg loope mov dec pop dec lock mov mov mov lret into pop imul adc mov pop jl adc sub mov inc (bad) and test mov in mov test gs adc add aas cmp sub xor xor fstps adc in mov arpl and rcll shrl xchg fnstsw or sbb pop sti dec adc xor das adc (bad) cmp repz popa fiaddl stos mov adc cmp and jno xchg cmp jg call mov push sbb or cmp adc (bad) push repz sub mov jmp adc das add insl in pop (bad) int3 mov repz mov sbb mov outsb daa pop rorl rcrl jae add adc jg aaa loopne (bad) hlt cmp adc jns mov leave adc inc subl push loop lock jge mov enter movlps pop jecxz push insl mov iret adc adc and aaa fstpl adc sub cmp inc pop mov push cli push add jne mov add adc inc mov aaa je pop xor dec add mov adc sub pop adc add xor xchg add or mov mov movsl mov les ror repz mov dec mov scas adc dec jbe push rclb mov xlat jge adc lods dec xchg adc xor lock inc fiadd pop and add adc dec aam or push repnz movsl xor lds jne xchg push dec in cmp jge push ficom (bad) jbe jne fildll cmc sub mov pop mov add inc loope pop cmp adc mov xchg mov rorb adc sahf add mov rolb inc adc fcoms adc push lock (bad) inc orl push dec xor incb decl das fdivrs xchg cmp out cmpsl cltd jl inc or adc bound ror or daa ss xchg inc or stc sbb in push adc test dec jae rorl xchg adc jnp repz lea nop xor iret std aam scas adc mov adc mov (bad) shr or (bad) pop ljmp jo nop jg or sbb fucom xchg dec adc xor (bad) fucomi mov xlat movsb les xchg xchg adc decb inc loope inc ret rclb shl and xchg jecxz stos mov repz mov mov or pop leave pop or dec sub mov fistp xor lret movb cmpsl xor ljmp mov scas stos dec adc mov jg lret add popa or push or mov hlt sub pushf out mov pop push imul jns inc repz xlat rcll pop scas mov test call rcll push inc adc cmc lcall jp enter push sarb push movsl or xor xor stc or mov xchg test aas hlt cmp dec adc mull adc inc mov popf fist or sbb or pop pop arpl cmc jbe fsts dec mov into mov adc out call dec test sub cli into test push lcall mov push imul adc jb cmpsl jno pop adc and and adc sbb add daa cmp test inc mov insl push pop sub lods xchg push stos pop push jne bound sbb rclb ja daa or jno pop into mov inc sbb lods mov adc mov pop stc adc jb lret lods aad jnp (bad) add push rcrb push nop adc fcompl aaa cmc imul push hlt mov arpl fstp mov or jge into loope and pushf sbb xchg and jecxz xor cltd dec aas mov adc cmovle jno or pop mov xchg adc aad and jp cmp xchg xor or std pop jno in repnz (bad) rorl or jle xor pop dec adc aaa pop pop adc xchg repz jne ret (bad) push sbb xlat mov inc mov xor add sub (bad) fmuls sbb jae daa repnz add imulb insl xchg pop ss cmp pop int3 pusha lock adc mov xchg ficoml sub inc mov loope jg sub adc (bad) daa dec xchg cmp mov stos fidivrl aaa gs adc inc stos rclb repz insl mov or pop sbb dec push mov adc insl add jle cmp subb adc icebp adc (bad) sbb adc mov add adc jne lret and cmp pop int sbb pushf and sbb or mov adc ret mov push xchg and stc xchg aaa inc adc loop and xor sub lods jae mov je push fs mov jecxz adc jp shll cmp and xor mov sub leave xchg xor or jg stc mov out fist add mov cmc adc xor pop cmp jb,pn xchg icebp cwtl aas (bad) adc mov mov sub mov sbb adc je jnp (bad) nop jecxz inc mov pop push stos or fnstenv cmc bound enter mov xchg add shrl sbb xor push mov js add sbb adc addr16 and lahf fcmove cld adc mov or mov (bad) jge repz je sbb cmpsb adc pop mov inc adc dec sub ljmp push lods pop lcall jge movsb ret push dec inc push sub adc sahf faddl jo or xchg jnp ljmp rolb add adc pushl cmp push clc xor adc mov pop mov xchg aam call fs cltd rcll adc jecxz gs rorl add arpl push shl imul jge fnstcw jbe,pt adc fdivs rclb push mov test adc sbb (bad) adc xor repz adc adc repz xor movntq mov jge sub push sbb xor adc adc inc lcall xchg ficom cmp pop sbb test ret andl inc das jbe adc push popl mov and out sub cltd fistpl cwtl outsl jno xchg repnz jae jecxz aas xor or and pop inc mov push movsl std push addr16 scas sarl repz fsts and (bad) pusha loop xor lret dec (bad) xchg movsl adc (bad) push adc pop inc js pusha cli mov lahf (bad) fstl xor xchg xlat mov xor (bad) aaa pop (bad) imul wbinvd and xchg adc insl mov add pusha sub imul or iret dec insb push adc mov lcall shrl xlat stos sbb shld imul in xor pop jo adc fs iret inc out lahf xchg lods dec lock sti adc jmp lods sbb sbb ss inc lret adc push jl push cwtl pop or sbb sbb pop in fistl xchg rclb xor addr16 pop adc lret (bad) fdivp jecxz cli inc sub cwtl adc inc pushw fsubrs jp gs mov pushf add mov add mov or inc and stos (bad) mov sbb lret mov es adc int and dec jne mov push pusha daa xchg cmpsl xor sbb mov push xchg test insb loope gs xor test inc in inc fcoml jb sbb imul pcmpgtd adc or int3 shlb lahf mov rclb inc xchg (bad) stc pop repz inc movsl shlb dec mov test mov fcoms or cwtl addb xchg jg sub mov sub sub imul jbe push mov sub mov cmp adc cltd iret das mov jns or mov shlb dec addr16 or ljmp nop leave xchg and jecxz mov into mov push in push int3 adc mov sbb ret adc leave xchg daa (bad) scas mov adc pop cmp cwtl das sbb inc mov cmp push push (bad) iret jmp fcoml scas mov (bad) mov dec xchg add cmp xchg add inc fcomp adc push mov adc xchg imul mov jp or or loope pop rorb fiadd arpl pop sub mov mov fcmovnbe inc movb sbb mov notb sbb out adc lock or pushf inc cli fs ja les stc lods cmp mov push or sbb adc mov jb test movl jecxz dec jmp cltd mov (bad) insl dec incl sti fnstenv add aaa imul (bad) push lahf cs push cld ficom sbb clc inc adc mov scas adc mov sbb lea push hlt movsb mov cld mov adc or push push (bad) aas in (bad) inc adc pushf into cld neg into push adc clc fadds pop out js mov int3 stc mov enter adc ret adc mov inc sarl mov xchg dec xchg jl imull nop (bad) xlat dec adc cmp dec (bad) jge cltd add fldl imul mov (bad) jmp mov icebp and aad add std jne mov cmpb adc or mov mov notb jmp loop ret pop adc movsb jle rorl xor add or push mov decl inc stos pusha pushf jl adc cmpsw outsb cmc mov adc mov dec movsb xchg mov jmp or adc mov xchg pop cmp loope add cmp and bound xchg mov adc adc in dec adc mov xchg add mov push lret pop adc mov and ds addr16 xchg mov dec push pop lea xchg test je scas add adc mov xor stos xchg int3 test daa sarb adc out jg idivb adc mov fwait aad pusha push lcall sbb add sbb mov frstor cmc sub or pop jns xchg fwait cs or jge adc (bad) loope adc test push test jg inc mov push lds mov ficompl mov cmp (bad) push adc xor adc sbb push stc (bad) mov jg fistl ja mov xor fnsave push out cli cmp cld (bad) jnp rorb mov sbb dec sub ss insl push mov out pop ljmp cmp imul aam push xor insb addb push ror je or xchg test pop adc daa push adc ret adc aas mov push adc adc pop cwtl je adc enter pop inc aam push dec not push pop pop sub lahf repnz test jnp jb pop or push enter push popa (bad) or in sub in mov hlt fsts insl push jmp sbb adc dec inc popf sahf bound adc dec cmc leave (bad) xor nop pop adc pusha jg fist mov stos in adc push scas cltd lcall push test movsb add loopne adc (bad) xchg inc sbb dec lods pop sbb adc sub cli adc cwtl (bad) or (bad) cmc mov stc adc pop popa imul outsl mov fbstp dec insb lcall xor jecxz pavgb xchg push add addr16 mov pop adc in pop pop mov lods ret add mov adc mov push out adc xchg sub jge xchg cmpsb jbe repz pushf dec adc icebp (bad) int3 sarl lods mov sti test adc xlat mov mov adc sbb dec mov cmpsl jnp adc sti mov insb stc adc jbe into adc dec aas adc mov mov scas jae xlat inc fcoml cltd leave in jne in fcoms mov sbb adc lods loope xor repz pop stc lret rcrl or int rep movsl clc test stc out sub adc mov rorl std adc (bad) add movsb outsb xchg push test or jae jne in jle inc fadd cwtl xor fiadd and loop std and rcrb test sbb add dec jle inc mov mov sti inc mov cmpsb shll sbb inc adc pop xchg inc popa dec clc adc xchg xchg cmp cmpsb jo push sbb nop ret iret dec xchg popf aad jecxz aaa test lods insb mov adc (bad) popa dec arpl mov pusha outsl (bad) cmp jle imul xchg jle stc insb adc inc push xchg fmuls push fsubp fist loope stos sahf test int fdivrs jne inc fstpt out (bad) loopne mov jo pop and xchg iret lods ret mov or pop fcmovb adc add sub mov xlat push pop (bad) les dec (bad) lods or adc inc out adc xor mov lock pop xor shlb pop dec movsl inc flds add pusha mov cwtl mov xchg add mov test sub scas mov pop sti das aad mov jecxz adc pop cmc insb adc jp (bad) negl adc lahf jbe jmp push xchg movsb sbb adc and fxch dec sub mov add sub or (bad) icebp cli jl mov and ljmp mov push push push or and mov adc sbb xchg and push loop ret scas dec popa sub js cwtl movsb inc push pusha adc mov cmp adc jle adc dec cmp inc and pop pop gs loope sub jo cs nop jno mov mov bound inc (bad) jmp outsl xor or xchg aaa add cmp lea push decb xchg inc dec mov add push movups mov and jbe fisttpl dec mov pop fsts sbb stc leave (bad) jno sti cwtl adc cld stos add xor in bound sbb xchg clc mov mov int loopne sub std mov jae mov adc sbb in mov push adc pop sahf lahf cli xor mov test pop jg lock (bad) repz push lret adc nop lods test jne mov adc (bad) fnop sbb hlt add (bad) imul fadds sahf sub jp adc xchg add adc (bad) cmp adc xor mov int3 and mov xor xchg push sub mov pushl (bad) sub lods mov notl (bad) fwait jns sbb jae std adc aad das pusha div cwtl adc pop add roll (bad) mov (bad) cmp pusha scas or or and add repz ret popf or insl outsb repnz das sub hlt and pop or mov test leave stc inc adc daa and dec fdiv aas arpl inc push pop imul (bad) hlt sbb mov js ljmp cli adc fnstsw ja jmp dec call xchg xor mov cli ficoml jge pop int repz lods push and icebp dec or scas pop xchg jmp push lret or adc adc scas pushl xchg es add adc dec inc xchg movsb xchg sbb jns mov outsb in sbb jb (bad) mov repz dec jno stos aaa pop or dec jae adc ss aam jmp mov mov and mov dec push xchg cmc adc int out daa dec adc jecxz pop adc lea iret sbb adc push test jo xchg mov in adc (bad) cmpl dec icebp sti dec rcll xchg xchg push sub dec add popf mov inc je into lods pop pop push repz mov out (bad) lea cmp sar xchg aad pop push adc stc cwtl mov adc mov clc pop movsl adc fs (bad) cltd fwait adc ss push jbe pop mov in insl push adc add clc or jmp test or jecxz cmp adc add rclb xor and or imul and aam mov je cli push lods shrb mov mov aas sub adc jmp pop push fcomps xor loope inc add mov jb arpl pop xlat push mov xchg add mov xchg and cmp imul pusha dec cmp cmp mov enter lret call xor push inc into dec iret push push mov mov sub xor dec cmp adc pop push sbb cmpsl push mov shlb sbb jbe jp test sbb enter sub adc ret jns jecxz mov repz and iret dec mov mov jbe adcl and dec or lret rcrb mov jns xchg aam push jle and movsb mov sbb pop call cwtl xchg mov stos ret mov sub fwait (bad) push pop and cltd gs or test into mov das pop mov adc adc (bad) xor adc adc fistp xor add test or in add mov add add subb iret dec adc jmp fmuls xchg mov xor dec dec rep btc mov push adc shr add mov mov ss adc adc jne das jge cmp adc aad lret push (bad) adc cld pop lahf mov push faddl jbe and inc js mov mov iret mov rorb movhps jp inc popf xchg add push inc xor dec test or and leave ret jno and mov shrb mov xchg js lds inc ljmp or cmpsl scas xchg and add dec mov pop rolb pop jno mov aas mov mov push gs (bad) adc pop insb mov and push adc sarb sub addl inc flds add add dec aam mov fistpll and mov movaps pop into or loope pop sti adc iret mov adc cmp sbb push adc mov jne sbb xchg out xor adcl jmp std mov jb adc mov cmc push lods sbb adc push xor incb test add fwait aam xor mov or cmpsb push sub lcall push into test or scas pop or out sarb sub mov fldl push negl jmp and mov pop out adc inc dec xorl mov and add rorb xchg sub add adc (bad) cmp push adc and insl push or insb mov or popa adc sbb sbb or jnp sti jbe adc dec pop add popa xchg roll adc adc cmpsl adc cmpl pop sbb adc mov in shr adc xor xlat test adc add push or xor es (bad) cmp mov or pop cld sbb xchg push fsubrs jno gs adc data16 sub inc js lcall cmp fistpl xlat ljmp and adc adc inc pop xor mov jge,pn (bad) pop jae adc call repz pusha mov stc lods adc fidivr jae adc xor popa sbb lret adc xchg hlt aam outsb adc cmpsl push xchg sub cmp into cwtl adc adc ja test dec loope cmp das adc test or jmp dec aad sbb jne adc test and mov movb lret outsb and jno lods andl adc lret adc inc cld sub std stc push adc ret out outsb clc jnp nop mov rcll cmp adc or jecxz adc cli mov mov stos std mov leave jbe mov xchg mov or cwtl cli sbb or jae add in mov aam adc adc cmp push je adc cwtl push jb inc xchg jle icebp (bad) jbe push aaa in mov adc mov lds sahf xor adc insl push ja outsb mov xchg xchg pop jne in (bad) adc add add aad call xor pushf xor in inc daa test stos lcall out mov ficoml lret lods mov adc mov adc jbe adc add mov xchg cmpsb adc and adc push sbb fidiv adc dec stc mov xchg mov mov lcall aas mov pop into je push or mov push mov les adc aas mov cltd popf mov xlat in dec fdivs mov xor lods add lea push adc mov xor test xchg repz xor inc (bad) jae mov push or mov stos push outsl xchg dec adc adc scas in sahf mov ret lock adc lods adc stos mov jae fsubl mov mov (bad) mov test fs movsb add loopne adc gs repz sahf dec adc lcall popf pusha adc mov mov dec jmp mov push mov jae push repnz jbe adc mov pop dec fmul scas outsb insb xor xchg push ja loope add xchg adc enter mov (bad) jno lret bound adc mov sti insl popa add xor or mov xchg icebp adc out pop aam push les movsl bound pushf mov xchg push add dec sub mov mov add and mov lock adc or roll cltd jmp mov cwtl imul adc xchg outsl insl pop and or xlat xor sbb imul cmp adc fmull or icebp push (bad) xchg aaa push imul dec jbe pop loop add ja pop test out adc pusha js mov inc insl add mov adc or movsb jns (bad) js push out xor push daa adc inc (bad) mov enter in and imul sbb push push mov cmp dec adc sbb jo ja repnz mov std xchg or xor mov adc push mov pop fiaddl adc mov add aam xor aas in pop jl sub repnz insb mov div push or pop lret sbb add gs adc adc xchg pop (bad) jecxz inc adc fcomps adc je pop shll and shl idivl mov sti decb adc xor adc leave popa dec test cli inc xor or ss (bad) lret std daa fmull pop xor add adc push mov mov pop adc add iret adc cmc push pop push hlt fisubr arpl inc jnp repz aaa stc mov shr adc cwtl shlb jecxz jnp adc ds in jmp daa mov dec dec aad (bad) jne jp xchg sbb xchg mov loope mov outsb mov icebp adc dec pop dec adc fs or adc popf ja pop enter push mov js jno or adc jnp pop inc jg test mov roll add dec and jo sub sub mov xchg roll scas stos xor fs data16 mov pusha jo adc fadd push or jg mov stos adc repz sbb divl loope xchg and push add stos xor scas shll hlt je test xlat scas adc daa mov (bad) std (bad) mov mov pusha scas cltd mov (bad) mov or fcmovb inc jge sbb or imul inc lcall pop cltd enter adc stos mov pop adc test (bad) ficompl fisttpll adc and adc into lret repz xchg test std adc sbb push mov add (bad) xchg pop adc movsl inc mov ljmp cmp aad scas add add adc push pop mov test adcl es stc xlat popf dec ret adc mov sbb bound clc push or inc push mov jns leave add mov aaa outsl push int3 pop add sbb xor hlt mov mov add cmpsl mov adc xchg outsb adc shrb gs leave push scas add adc je push mov shll sbb or jg xor jns mov rorl mov test pop adc xchg loope imul xchg inc sub mov in push hlt mov xor aam mov shl (bad) jns ret mov xchg pusha push (bad) ds loopne jmp in and mov shr xchg icebp adc adc xchg dec xchg repz lods hlt ret lods add xchg sub in jge adc icebp lahf add in adc push mov cmp mov mov adc aaa jl ret adc push adc or fcompl lods out fldenv mov test cmc lock outsb lcall mov mov imulb out xchg pop pop cmp pop fwait aad sub adc fdivrs inc mov xlat push and adc xchg dec repnz pop hlt xor lods or sub aaa (bad) or (bad) movsb into xor and add movb add sub adc fdivrl xchg inc cltd jo jbe adc popa push adc aam rclb aas mov or adc lock repz cmpsl stc out jae mov lret adc push neg outsb lahf (bad) dec ds mov sbb mov adc mov mov push (bad) adc dec (bad) out ret scas inc pop loop or adc xchg lea xchg (bad) jmp adc ror or shrl out lods fcmovb or jecxz cmc xchg push mov insb xor cmpsb push lret adc outsl in jle mov jecxz push shll fst cmp pop in outsb hlt or nop jo (bad) enterw cmp cmp loope aad sbb xor xor inc nop push stc or cld push mov mov into pop in dec cmpsl jno bound test adc fwait dec mov jb insb sbb xor aas adc or mov cmp inc repz pop fdivrs aad sub cmpsl lds xor adc test andb loop mov cmp push adc adc inc insl call enter in test push (bad) or push lock lods inc sbb add pop or mov mov add and xchg or pop shlb sbb lcall int pavgb and cld hlt ret push pop mov and adc ss test out push mov xor adc jge dec cmp mov negl jmp push adc inc xchg jo lcall shlb adc notb pop movsl push aad gs cmpsl jcxz lahf mov (bad) adc pop adc adc fcomp mov test popf mov popa and outsb jmp sbb and je rcll (bad) add add adc sbb xor adc and into adc pop add ss adc pop push mov or iret inc call cmpl test adc sub dec cmp cld adc sub das inc pop ja or subb xor and sbb or fcomip mov inc mov outsl adc jae push xlat out adc daa repz or test fcmovne in inc jnp push dec imul repz push cli adc xchg stc jge fwait sbb inc fs adc out icebp adc xchg pop pop iret cmp adc adc jo mov outsl cmpsb adc cmc pop sbb imul adc js push bound dec sbb stos inc aas jno,pt mov or xchg jbe push and push push iret adc mov xchg pusha loop sbb push aaa insb xlat lds pop imul xchg aam xchg jnp adc (bad) cmc dec lret xlat jle mov imul xor outsl xchg xchg repz mov sarb jo lods mov ds stc pop clc pop or sbbl sub jmp int3 mov push xor mov xor ficoml es pop dec xor pop inc adc or sbb adc inc jne mov xchg or addl fdivs pop jl xor adc push in dec lods push adc sti mov daa adc fisttpll clc xchg jp add inc lret or mov dec adc call lcall imul addr16 push pop sbb adc in mov popf adc scas mov js ffree jo popa cmp adc out mov jb adc pop dec push mov adc inc adc push sti rcll cmp repnz sub push inc icebp andl dec repz ds out mov or dec test adc je jg or (bad) pop mov in mov sub jnp loopne movsb or iret sbb mov int3 mov rorl dec je xor into add or jae xchg incb dec pop jge jmp sbb enter cwtl fcomi cmpsl sub jnp sbb loopne sbb mov cld nop adc jns jb or xlat adc idiv inc mov rclb jg dec aas sbb shlb lahf push sbb cmp scas pop jne js add jae sub adc icebp je outsl mov adc adc leave add shrb dec pushf sub (bad) jae adc dec stc (bad) adc and xor jge ljmp cmp cmpsb dec enter add inc lea add jmp lods cwtl or movsb shrb jbe adc pop sbb pop adc lods test jae push test adc arpl xor cmp add rorb scas inc outsb sbb adc negb mov adc pusha jb jne fldl mov lds in (bad) int mov gs rolb cmp xchg and push dec fdivrs lea xchg negb sbbl nop mov add aam or jge imul push adc mov pushf adc call mov mov int adc jl cld add out popa or pxor cs cmc add xor fwait adc gs mov clc aas ss mov sub add imul (bad) repz mov rcrl xchg mov lcall adc inc shrb out rcrb mov xchg (bad) ficom cld sub xor ds add call add mov neg cmp jae in cmp xor sbb lods shr push push xchg iret inc dec pop sarb sbb and aaa adc mov lret mov cmp push push sbb fucomp and mov jle lret roll mov push adc push dec test xchg aam rclb sbb or adc mov adc push out push adc mov sarl jecxz ja fiaddl loopne gs jne xchg in rclb std repz aam mov adc jl pop jle nop inc fldt sbb popf sbb adc add lds lea and adc movsb test bound inc adc in or jnp stc js pop xor in ret and clc adc int3 stc mov adc dec xchg cld lock mov test icebp adc out rorb mov add loop hlt adc ja xor fcomps fcoml sarb jmp fstpl pop rclb xlat lahf dec test push mov dec mov inc push dec cmp or call xor mov pop out pushf xlat adc pusha add mov jmp bound rclb xor push cwtl mov dec fistp xlat add inc dec pop cmp das sbb (bad) xchg mov mov jecxz and xchg jno sbb sti adc inc aas mov adc and add das pop adc les jecxz pop cltd adc push cmovb ja out dec daa sahf mov mov or jecxz dec add push pop aas clc adc pushf jae xor sub negb cmp dec mov mov mov xor add mov mov and sbb sub js pop and inc inc fisubrl push out inc lcall aaa (bad) repz add repnz xchg lahf stos adc adc push mov adc repz mov xor adc adc cltd lea dec cli xor xchg rclb clc xchg adc dec jecxz mov pop test push add jne mov mov pop inc insl adc jb pop rolb shll out push adc test jno les push scas repz (bad) imull jne mov or mov lock adc addr16 inc jns test dec or in bound jp test sub inc mov aam dec scas pop imul inc push fist insb cli fistpl out push fcoml repnz int3 jl adc sbb in mov mov iret outsb out adc lret lahf pop mov pop sbbb outsb sbb (bad) adc inc add adc pop inc add je dec (bad) sbbl fcmovb lock lcall cmc je repz (bad) (bad) inc cmp jmp in or inc fimul ffree adc xchg jnp adc sub pop hlt xchg out adc std into adc test adc cmp stos dec add pop xchg enter mov xchg lods adc out and or (bad) and (bad) pop push add jmp xcrypt-cbc cmpsl adc xor jnp adc lock xchg pop cmc push cmpsl stos xor in xchg push notl scas lret sub adc mov xor sbb mov paddsb adc inc jg (bad) ljmp xchg push fs or sbb adc (bad) sbb (bad) sub repz popf inc out xor and pop adc jne push lods xchg cld dec adc add dec mov jle adc mov inc adc subps mov std test sti mov push addr16 lea dec mov aas in sub shl xchg xchg imul fst cld sbb sub scas test adc enter xchg rep mov fst or adc cli adc unpcklps icebp add push mov (bad) scas repz and or test jecxz xor or test sbb out xchg pop faddl repz jle mov adc insb das push sub es adc pushl adc sbb jge or add sti mov adc in imul sarb cmpsl mov sbb add adc pop adc inc bound pop jo sub and outsl ja cmp or loop xlat scas lea loope out out pop hlt lods lret repz (bad) bound jne roll xchg xchg sub mov jns insl sub test lods orl lea adc adc or or fmul stos mov adc in leave loopne pop adc inc add rcl mov mov xor inc jge sbbb idiv push pop pop inc cmp dec push adc pop rorl (bad) pop mov jge test mov popl add sub test sbb (bad) insl roll or sahf arpl jg or add mov jo mov shrl insb mov dec mov scas inc mov test pop pop je rcll fldcw mov aam pop and (bad) repz push pop sbb frstor cmp cld adc lock jp xchg mov jge dec (bad) pop stos push push repz enter and fcoms test xor mov mov lock adc outsl cmp sub add inc pushw inc test (bad) sbb cs sbb je fnsetpm(287 stos cmp pop jne pop adc test inc stc jl xchg jno inc adcl xlat mov xchg xor (bad) mov push push xchg cmpsl sub and ds adc ret jp adc bound sub imul sub (bad) cmpsb fs push jae adc in xchg or pushf lcall adc pop push test gs notb mov push ror jne (bad) lret aam fs pop fcmovu gs fnop inc xchg ud1 mov sti outsb popf dec mov test cwtl xchg loope mov pop add push cmc (bad) int adc add adc jo dec shrb inc push push pop (bad) jno xchg add mov ja pop aas or dec (bad) sahf jo adc mov mov jne or adc mov inc cmpsl add adc xchg ficom movsl stc adc adc dec push nop mov xor flds hlt cmp (bad) js jmp sbb jecxz adc jnp mov add enter adcb stos jb xor adc dec xchg cmp sub adc push lret add lss cmc mov add rol in xor pop or cli cmc add imul scas adc pandn inc mov enter mov push inc jg xchg jge mov push in add sbb imul mov mov adc icebp mov sbb in adc fdivr sub mov mov mov mov pop mov jno jp sti adc pusha pop cli adc pop xchg std and gs or xor addr16 or sub mov sahf loope cli push ss push mov scas adc movsb call mov sbb inc jnp adc mov adc out lods jg mov fnstenv hlt push jno push or mov dec jp in cs adc js insl cld movsb add mov adc out adc and mov int sbb or call xchg das lds cld imul test repnz mov pusha and out jp fidivl stos out dec adc call jle cltd cmp decb sahf adc cmpsl jmp pop adc imul rcl sti add adc stos mov adc (bad) dec movb repz out or dec sar loopne xor lret inc addr16 repz and leave mov sbb mov in fdiv repz sub lret mov nop xor xor pop addr16 add pop cmc dec sbb aaa popf adc outsl movsb les test movsl adc mov dec mov ficoml jae mov (bad) or clc adc add fdivrl pop nop mov (bad) cmp andl inc xchg icebp or dec test sti cmp adc insb push mov add push (bad) decb adc add fsubl sbb or out fdivl or push adc imul inc adc cltd ljmp pop es aas adc xor cmp dec or subl ficom adc sahf mov inc gs int3 (bad) lds cmpsl ficomp mov or mov lahf lods repz repz repnz popa or mov add lret sub sub adc or mov test xor loope mov push or aas lods stos sti aam imul and or adc and mov xchg sub scas sub jno dec mov ret jb sbb std xchg call adc dec cwtl mov andb lahf xchg and inc outsb push les mov cmp push adc das jle (bad) (bad) jae scas std sub xchg mov stc ret negb iret mov add sbb xlat in jns dec or repz adc fdivr hlt xor xchg push or lahf test movl addr16 push popa outsl adc lods movsb test stos incb jp mov adc mov pop rorb aaa cli push adc imul fdivrl jmp or jle repz add shld sbb jnp inc dec insl cmp pop adc into insb stos aas fcoml adc sbb dec lcall push repnz popf adc fidivr fcmovne xor std aam (bad) xchg jns pop xor adc (bad) lods fdivl (bad) dec cmp jge or cwtl adc mov sub add mov clc imul dec xsaveopt cmp adc mull adc out rcrl cmp mov icebp rep adc sub jp adc std dec xchg add adc mov in dec lahf imul fdivrl nopl (bad) jbe psrld pop in (bad) fiadd sbb xchg pusha sti or (bad) call movlps sbb int3 mov or (bad) pop mov mov loop xchg je insb pushf (bad) xor sub (bad) ljmp cli mov nop sub mov xchg mov pop cmp iret (bad) adc ljmp inc icebp repz or adc or and pushf adc stos adc inc in jo (bad) aam insb insl gs xor testl inc cmpsl mov push sarb pop mov mov lret xor jecxz loope jno je or fstpl xchg icebp imul sbb add sbb lods lods push xchg jb (bad) push adc or test pop adc js clc hlt cmp pop lahf and test repz (bad) scas fidivrl fs repz cmpsb aaa pop (bad) or pop mov sub and test mov das adc (bad) jbe dec and inc mov cli push popa mov lret dec imul int3 and and adc (bad) cmp clc ficoml popf mov fcomps adc andb push add sub mov xor iret adc ja arpl push mov add mov adc pop sti mov adc dec cltd xchg xlat or cmp (bad) sti cmp pop pusha inc std jnp push cmp adc cmpsb ficompl ret cwtl mov adc enter sbb fstl xchg popf adc aas sub mov mov xor mov xchg add cmp jne and sbb test mov xchg mov je mov dec pushf shrl add mov xchg imul dec xor mov or cmpsb movsl popa inc sub mov push jno and in push fs notl arpl pop lods fist cmp mov add dec adc lret sub cltd push ja fcoms scas enter jne adc daa clc sbb jp sahf cmp (bad) aaa lea pop fwait dec loopne ret adc or adc pushf dec pop adc rcrl in sahf add mov push inc add xchg outsl xchg jbe adc adc pop push aam jecxz mov xchg dec mov inc repnz sti (bad) or pop (bad) xor jge std mov into mov adc inc iret adc mov dec dec cltd mov rcrb rclb jno (bad) mov int3 mov push xor rcrb iret repz pop jp jmp loope shrb push pop jae stos or adc std dec xor mov or adc jbe or popf push adc inc stos fcoml xor in mov add aam pop push push loopne adc xor stos pushf test xchg push hlt mov adc test push xlat (bad) cld dec aaa (bad) punpcklbw mov pop inc rcll sti pop pop mov sbb cmp mov cmpsb mov mov push mov mov out ret mov jne out dec movsl push adc inc mov fisttp inc das out adc inc pop in test ja mov fwait es js sbb ret repnz push mov cmp xchg add imul xchg out inc xor stc add and and rol or (bad) mov jmp call mov mov dec mov xor cli xor jmp sub (bad) mov loopne rcrl fdivr adc into jno mov dec repz fldenv add jbe mov or iret (bad) mov lods dec or and mov jns mov cmc cmpsb fs add popf dec outsb (bad) jl push adc shr lahf jecxz idivb adc imul fwait pop sbb inc mov xor cwtl aam and adc adc scas dec pop adc and cli xor inc ficom (bad) decb je sti add stos lock jbe fwait out out cwtl adc (bad) scas mov stc jo loopne jns pop mov sbb out or cmp xchg mov mov adc pop jo mov call or push in adc ja idiv pop les adc pop movsl xor sub fcoml mov xlat popa lock adc mov (bad) xor nop popf adc (bad) xor add adc or jmp mov mov hlt lock in xor sub adc sbb repz stos enter mov adc fidivrl pop jno add mov inc sub cmp aaa sbb push mov pop mov bound stc aad or lcall jns pop fcoml js mov jp mov xor adcb pushl aas or inc and inc adc or cmp xchg adc xchg and adc xor cmp adc pop idivl adc push scas dec in xor adc add xchg movsb gs adc and mov adc push or adc inc test adc dec add inc rcrb sub add and jb inc std jl mov mov mov inc loop mov pop icebp push inc dec ret repz push dec js cmp adc sbb adc sub push mov and adc outsb cmp scas pop mov pop repz lock sbb lea adc repz inc push nop mov mov dec cmpsl xchg xor in jle lret lea das jne lock jmp rcrl cmpxchg xchg js xchg mov lahf cmp and roll adc jecxz or adc pop icebp imul push fistl jge leave cmp sarl xchg shl movsl or xchg adc insl (bad) adc xor mov or leave adc out push loope pop mov mov adc jmp (bad) aaa cmp push mov xor sahf (bad) fdivrl cmc inc inc imul sbb adc ds rcll push and test loop enter cltd mov jmp test shrl push and push xchg sti mov mov ss dec loopne jge adc faddp mov repz mov inc cmp mov mov andl ret les (bad) hlt cmp push (bad) jno adc shll and repnz pop (bad) mov push out fisttpll out or or iret rorl cld xchg test scas mov dec mov cmp mov and jb mov pop in repz mov out insl int test mov (bad) in mov mov inc or (bad) adc jl ret scas dec mov roll ja or in jg loopne pusha mov xchg adc sbb adc inc out push sbb inc add fdivrl mov jle xor loopne,pt inc or xlat sar enter jnp add xor inc hlt or add push cmpsl pop jge sub or jbe fwait sbb lret repz ficompl fcomi adc imul dec popf xor ret out mov mov ja arpl add call insb repz push cmp dec mov daa add lahf sbb jmp lret adc addb lret xor in fist pushl mov jne adc ss xor mov dec stc test cmc sub jns cmp test out sbb (bad) adc fs jbe xchg insb imul xlat (bad) mov in test inc inc adc insl lahf sub imul and inc loop pop rclb mov xchg int3 adc ret clc pop lret cmp in or sahf repz fildl rorl adc fbstp cmp js jne mov fistpl sbb push and adc jne mov sbb pop adc pop dec and rcll push (bad) (bad) cmp iret add insl out adc pop sub xorl inc xor pop inc mov mov popf sbb jae adc xchg stos iret je xchg dec outsb cmpsb lcall sub loope adc popf dec popa push shr pop add or inc adc sub mov and xor adc jae pop cmpsb xchg mov adc sub inc fistp or (bad) hlt adc mov mov fs fistl mov jmp xchg adc xor add sub adc push iret mov adc mov adc sub adc mov cmp adc push adc sbb fs add jge xor pusha sub cmpsl (bad) dec add mov xor dec or jb rorb push clc and xor (bad) insb xchg cmp ja push or mov div scas sbb dec sub adc jnp jo imul popa repnz lret imul adc cmp adc addr16 xchg lcall xchg add leave push mov rclb std (bad) xchg (bad) mov in xor sub or (bad) sub lcall (bad) pop adc jg sahf or repz mov loop jle iret pop adc mov mov and add xor adc sub adc mov mov les ja adc jae shll adc pop mov dec adc cwtl lods push mov inc adc nop sbb sbb and xor push pop mov (bad) lahf pop insl jno pop cmp cmc fnstenv movsb sub adc ret fcoml and scas pushf jne xchg dec pop jl mov jge inc ficom adc jmp test sub adc mov jne pusha or add bound fldenv jae cmp pop rcrl mov sbb cltd aad gs nop inc loop mov cwtl lret adc icebp push (bad) fsubrs std push pop cmp clc dec adc sub add mov icebp lret test adc scas fsts call pinsrw in ss dec loop inc pop xor subl mov dec push lea sub std push mov (bad) bound mov sub mov add adc hlt stos add dec adc pop push or int3 lret inc mov sbb mov fwait push mov inc push sbb dec adc call add add andb les test pop mov out adc push dec and xor aam es xorl add repz cmp pusha nop addr16 pop or rep lock cs cmpsb or add pop ds inc inc int into sub add cli jle mov sbb mov push mov jbe imul mov popa mov lods rcll dec test lds (bad) repz stos or push daa gs lfs adc inc or sti (bad) and (bad) call fcmovnb popf mov stos fmul push stc add adc rolb add ret mov loopne pop js jns inc xlat adc sbb cmpsl pusha adc inc mov xor lahf adc dec and insb dec sub pop cmpsl add mov or imul fsubs push push (bad) jmp mov adc aas xchg jnp pop mov nop sub add jb loope xor lret bound push mov mov jbe,pn mov out lcall mov inc outsb adc fcoml cwtl add js sbb push lods cmc adc or (bad) idivl add int3 (bad) imul adc inc lds out pop add sar push or mov add cwtl add adc sbb xor pop cmp mov lret jne xchg sbb ljmp adc and adc add call mov in sub adc pusha cmp mov mov iret dec adc fild test jns xchg adc sar dec cmp adc rcr sbb daa scas sahf adc pop mov push adc pop or adc xchg push xchg adc or or xor popa cmpsl jnp jp insb or mov pop adc xchg scas stos jmp ret or xchg push cmp mov lds hlt inc adc iret xchg pop orl jecxz fisttpll (bad) ja lock inc mov sbb out mov not xchg aad adc test cli xor add sub add mov (bad) sti mov fxtract lahf addr16 push pxor bound int3 cli test and jle xlat insl add rcll stos adc frstor adc outsb sub adc xor add loop xchg scas adc add test add orl inc (bad) mov add negl jno repnz sbb add jge adc lahf js jnp mov mov push (bad) ja pop repz mov adc sbb inc cs mov into imul and or rcll inc sbb repz add mov xor iret push sti int jno insl or pop push jbe testb (bad) mov outsl pop ja inc icebp fisttpl pop mov push (bad) mov stos clc aad popa out mov adc inc gs adc pop push imul add xchg lods notb push dec and imul cmpsb out or sbb call adc leave cmp nop xor (bad) insl in loopne repz std imul push add popl in movsl jmp push movsb sbb xchg pushf jle adc xchg push daa jmp das es ret jb rcrb inc out mov into push xor fucomi insb je add push inc adc mov pop sub and inc decl mov cmp adc cli jae je push pop xchg sti inc adc inc pop cmpsl or repnz pop jecxz mov inc repz and xchg daa fsub xor mov dec adc inc jl lea push test inc sahf add (bad) xor add leave rcrl ljmp cmp das dec (bad) adc jmp call shrb out movsl sti mov test divb sub mov pusha std adc fidiv orl cmp arpl xor std (bad) int3 std mov cmp stos ret push pop mov and jno inc xchg ret pop sbb push dec cmp adc jge pop fbstp cmp sub adc sbb jge mov decl xor cltd lods popf adc test cmp adc out in addr16 fsubrp aad inc vmovlps xchg inc imul jb subl bound lds xor add push xor jle sub or scas xchg je repz and jle mov push icebp negb xor mov xor xchg movsl ja das or mov push idiv ss cmp clc sbb loope pop adc mov insl ret pusha sarb xor fwait or mov xchg fdivs iret xlat pop xorl sbb adc xchg nop push adc cmpsl ds dec divb xchg inc mov rcrl push jno and xchg cmc aam adcb imul jno in inc or repnz imul cmp std bound sahf lds test or mov adc mov loope push xlat jb mov inc int jbe fimul xor outsl mov out dec or and sub dec repz int3 jge loope rorl addr16 test pop pushl fwait mov aam in lea sub pop jl mov xchg outsb or call xor lret sub (bad) mov fbld in pop mov lret adc cmpsb pop sbb sub popa or or xchg mov int3 adc aas into mov es adc hlt fnstcw loop add rol sbb repz stos test into mov into decb in add movb mov sarl add push jae push (bad) mov adc hlt leave jne sti lcall cli xchg sbb je loopne or or jg and xor sarb insl push push adc add adc iret mov and pop dec pop jp mov cmc insb dec dec xchg fsubs push pushf js,pt in add (bad) jge popa add adc std (bad) aam (bad) jne,pn cltd add jp mov xchg sbb mov push aas push fstl pop movsb cmp xlat cmpsl movlps ret mov sbb mov arpl or jle mov add or dec scas es mov dec adc xchg pop hlt adc cmp andl or inc adc push and pop pusha or cmp scas adc jns cmp adc sub push fildl test (bad) jle sbb xchg sbb mov cmp daa and nop xchg adc jp pop push stc adc les adc cmpsb pop dec lcall add or addl mov test cmpsl dec fimul sbb sbb adc cmp push in stos or mov outsb push leave or add mov push mov pop (bad) iret adc mov and and adc mov mov je cmp push movb movsl imull dec push (bad) mov inc adc ret add stos jo popa rcrb fcompl dec ficoml push mov std adc xor movsb int mov adc fadds adc inc rcrl push int cwtl cmpl or add and xorb and rcll xchg xor stc adc mov mov cltd (bad) leave sarb add mov and pop or xchg shll mov mov repz rorb adc dec lea inc mov xchg or ds test bound sbb jle adc xchg add xchg rcrl inc push adc adc sti jecxz or dec adc test adc mov lods int3 rol push jmp mov addb iret inc imul fwait stos mov cmp pop popf sarb mov sub call mov push or cwtl lods adc out pop xor mov fsubl adc shll cmc ret sbb push sub mov dec lret mov std pop adc test xchg or adc push rclb mov cmp movsb (bad) cmovp imul inc jne adc cld inc std pop add adc int3 les adc push loop xor stc repnz sbb aam or dec mov sbb mov add mov mov lods stos or shlb jae cmp jle or sub daa dec xor mov aas xor (bad) mov stos lock adc (bad) sti jle add aam rcll sbb jno adc adc test iret lcall out pop lods jno rclb outsb lea out inc pushf je adc mov hlt test out pop add test push and aam notb jmp ljmp mov pop xchg and jl mov movsl (bad) arpl data16 add mov inc and mov mov cmp jo aas roll adc bound adc lahf (bad) rcll es mov iret sbb adc mov dec popf push leave xor mov inc mov cmpsl adc push scas or and orb int pop xchg fcompl pop mov inc pop push cmp jmp dec mov out push into pop adc icebp cmp sub movsb add add push aas cltd aam inc or mov cmpsb jno push xlat in decb xchg jecxz popa sub push insl push pop pop add test xchg xchg out sbb cmp hlt sbb ss pop xor repnz jg dec out mov (bad) mov or mov push xchg jno sahf pop mov in add mov je push jb ret inc and adc popa sti in and stos xor arpl imul xchg (bad) sahf adc jns pop jae sub outsl prefetch or or inc push loop or jns (bad) repz and insl mov dec enter adc dec adc sbb aad lret xchg adc mov js inc int3 leave popf mov icebp lds in (bad) dec pop rcll jecxz movl (bad) lea mov rorl dec jns lods ret jb xchg cmp lret mulb mov xor adc mov pop cmp es inc outsl mov ret js mov push pop pushf sbb stos mov add loope cmp js in aas adc rep cwtl int add xchg adc jmp stos adc rcrl or xchg push clc or mov roll and xor jnp mov xor xchg jmp adc not push sahf mov std in loopne cli mov js sub ljmp and movsb scas stos rcr pushf xchg int (bad) aas nopl mov lcall inc notl xchg push popa ljmp mov pop imulb rclb xchg cmovl xchg mov jg add inc sti imul lds sbb mov les sbb jp pop and test nop jb add push adcl inc scas fdivl (bad) cmpsl adc popa pop dec mov cmp mov sbb notb les pop dec jmp mov lret stos jg adc sub add cmp cs mov adc std fs in push sbb adc mov adc inc push fsubrs les xchg sbb insb repz stos add out mov push jae (bad) mov cmp loop push sub sub lods fsts popa mov lahf xchg inc jno movsb cld sti adc mov mov inc sbb pop pop and repnz out je mov sbb movsl and add rol sub shlb mov fild movl adc movsl sub repnz mov decl fnstenv cld stos jnp inc inc shrl lret js nop daa dec lcall xor loope movsb rclb aam add sub mov adc (bad) xor repz repnz orl push fscale stos xacquire pop adc adc lret lods lret mov rclb fucomip repz cmp and lea adc sub imull jno or les (bad) out add sbb pop push push adc (bad) xchg es adc push and dec adc xlat pop or test insb inc xchg push or rol mov adc sbb adc sar aas movsl loop adc push or rol adc mov inc add xor js dec adc xchg in mov adc pop lcall adc jb or inc hlt sub lods mov inc dec adc xor sbbl leave mov pop adc ret cld mov int3 pop xor jecxz push push cli in int adc test inc notb mov repnz insl mov push lds int3 jno pop cmp insb rcrl mov xchg (bad) popf in int3 adc push rep jno or hlt or or bound scas mov or add inc and sub (bad) push pop bound nop mov add and lods (bad) pop es test add push xor cmpsl imul adc inc outsl push aam movlps dec int3 int xor imul mov and dec cmp adc push mov adc (bad) mov push adc sbb adc insl or pop adc (bad) sahf test mov sbb inc adc test ljmp mov add push jo test push add or and pop adc js outsl mov mov popf fistl jmp loopne lcall mov jmp scas xorl in cwtl hlt mov inc (bad) jmp pop sbb push mov call addr16 lret out sub jne dec cli cs push mov ja or mov in and or mov adc das lods push or (bad) jne mov xchg jl fadds movsl xor mov (bad) mov repz arpl jne mov sti cmp add ror lods aas inc rcll popf out fldenv dec adc lea adc cmc sbb (bad) adc xchg add pop insl xchg adc mov data16 xor dec adc sbb dec dec ficoml adc in loop inc jp and inc outsb mov clc adc arpl push xchg iret mov (bad) cmpsl cvttps2pi xor mov mov (bad) jl push adc aaa and mov dec mov cmc (bad) xor (bad) push sub cli adc std inc aaa adc fwait push mov xchg adc pop xor pop pusha mov data16 add cmc mov lea movsb decl xor (bad) negl cmp lds lret je cmp leave pop fdivrl xchg jo idivl mov xchg or loopne mov out cltd lock mov push xor negb fwait jle mov push daa test popa dec pop add push adc data16 imul adc xchg outsl outsb icebp ds adc xor cmpsl dec inc mov mulb mov xor pop sti imul xchg or sbb inc (bad) mov adc (bad) sbb push dec (bad) lret adc mov gs mov sbb mov pop mov push adc cld mov call inc lret out xor mov dec pop shrb sahf ja loope fidivl xor sti add mov pushf push xlat test pop je dec test js mov in iret jb mov cmp out cmpsb push mov add ds loop cmc clc cs cmp mov popf push test inc (bad) mov (bad) adc nop loop pop sbb idivb lret repz out test je into or rep lahf stc mov or adc or in adc call xor push mov pop mov inc test xor iret stos insb or insl jae in mov gs pop push out cltd das sbb insb jecxz adc test xchg sub push adc int leave repz jge fsubrs icebp lods mov sub xchg addr16 jecxz xor repz out add call test cltd mov adc sbb adc loop adc outsb lea push popf push push inc cld repz and cmpsb imul pop clc outsl xor xor stos cmp mov test movsb clc lea arpl push dec jge lock out push push or jno std or sbb pop sbb pop mov sahf bound fldenv push loopne rcrl lret mov in ds das xor in dec cwtl adc and rorl mov out pop cmp dec fisubr loop repz xchg out sub xor adc cmpsl and pop lds mov ret adc movsl loopne lea (bad) adc sbb mov rcr mov mov pop ret xor stos adc cmpsb dec xor addl push push adc les jge inc sub js cmpl cmc imul pop fistl add adc mov jnp adc (bad) jge pause xchg sbb or and loop mov add jg mov ret or sahf daa adc sub cmp xor adc (bad) pop rcll mov je jae idiv dec cmp ds out push lods mov (bad) test sbb das push aas sbb sarb cmp std out pop cmp xor ds orl repz lods and or ret pop ret adc aad cli dec xchg inc xchg pop (bad) or jbe (bad) dec cmpsb std xor xor nop pop pop mov mov les adc jb icebp pop xchg aad hlt mov int add nop cmp ret and ret out mov xchg mov add mov push sub outsl xor adc mov adc mov adc lods mov xchg rcl mov pusha add std int adc fistpl (bad) or lcall mov xor cmp lcall cs mov test jl ficomp inc push rol (bad) adc mov cmp jmp mov jecxz mov mov ljmp dec hlt push mov adc push lock ds cld mov ret dec (bad) push mov jecxz mov mov adc push ret stc ficomp push push insl jl out pusha jo mov arpl and hlt push adc clc std xor pushf rcrl imul (bad) icebp jns push fiadd pop mov add les add dec mov or mov aas dec mov mov jmp call dec adc sti xor inc int imul cmp add insl or adc cmp push adc dec rorb and mov jns leave pop mov dec pop mov mov call dec push insb and imul (bad) sti adc adc adc cli test and fidivr icebp or les mov repnz adc insb push daa pop imul adc adc xor movsb sbb (bad) stos push aad xor add adc push xor adc js rorb fs scas in lcall outsb mov adc cmp sbb cwtl adc (bad) int3 js xchg adc cmp in jns inc mov jecxz bound adc push adc mov mov xor scas add int js cmp mov mov add cmpsb sbb jbe fnstsw sbb notb pop hlt fld dec push mov imul sbb clc pop sbb inc adc mov xchg and sbb mov mul or call adc cld (bad) xor jo rcrb fdivrs idivb mov push adc cmp adc (bad) (bad) aad pop pop xor std pop adc mov lsl adcb fidiv lds adc adcl sub mov adc ss mov rorl loopne imul cld dec mov lret and adc adc lods add les mov fildl fldenv scas insb push add adc mov push rclb sbb inc aas pop iret adc stos in adc cmpl jl mov adc mov jmp in adc mov mov sub psubq into std jno inc pop pop mov mov push pop or pop add pushf lods lahf fs negb adc clc mov add pop adc ja icebp addb sub enter aas pop rolb clc jl add stos sbb iret and cmpsb mov push mov mov rolb mov out adc sti ljmp xor les mov (bad) jg and or dec adc pop stc sti (bad) jo outsb adc dec aas lock (bad) fild movsb jecxz mov outsl cmp sti push adc out fcompl and fistpl xor test hlt or cmp mov jecxz xchg scas loope mov pop cmp adc mov test jne adc lods fimull subl fs adc xchg mov clc sbb sbb js push push adc or mov adc in push bound mov (bad) loopne popa jbe clc mov cltd adc in imul jecxz adc (bad) lfs mov clc inc pop mov std idivb push mov in adc jne addl lea in jg lds dec xchg pop or mov lahf jle aas lods ss ljmp mov dec adc push lret mov adc xor sbb mov mov ds (bad) mov inc xor adc or mov mov cmpsl adc cld dec mov imul and ficoml ret mov add push shlb lret push or mov leave std inc add or adc mov jecxz pop jmp adc lcall xchg sub mov adc jnp dec add adc aas jge sub lock inc mov adc xchg hlt movl xor hlt pusha mov loope mov xor data16 jo movsl adc pop cmc test lret adc sbb arpl sar pop iret rorb addr16 mov xchg sbb movsb sahf aas aam jnp xor int cmp xchg lret rcll loopne enter inc xor push add jne pop xcrypt-cbc cmpsl xchg iret fiadd push fstps sub je jne inc jecxz enter sbb cmp int mov mov adc sub rclb pop loop push mov rol sbb cmpsl fisttp mov test and pop push inc lds aaa insl ficom mov fcomip ja clc xor mov xchg ds dec push adc fcmovu mov sbb (bad) push nop int mov add in xchg loopne andl (bad) out dec test push into sbb rcrl es mov jbe jg cmp xorl and mov and loopne stc dec mov mov (bad) invd cmp leave (bad) jl mov xchg sbb adc push out loopne lahf bound push jmp jnp or int lret adc sub jmp cli mov or in nop cmc das orl dec adc and pop pop cmpsb mov pop adc inc xchg mov mov jp movsl mov into sbb mov mov mov adc sub lods nop mov dec adc push sub cmp in out cmp iret hlt dec push adc mov ljmp test fs ret std fcoms sub out mov adc daa lret add mov xchg bnd mov repz (bad) rorl jmp mov cwtl test cmpsl ds ret mull push adc and adc fdivr push adc cmp push jno insb mov aam loopne les cmp sub xor test insb icebp movsb fldt aas jl (bad) xor sahf add jne ljmp stc sahf adc adc mov movsl test push lock mov dec cmp fisttpll addb add movb mov das jmp push push iret mov pushl out or jg sub adc and adc sbb xchg dec mov ljmp jmp in std dec xchg mov sbb mov and mov mov ret adc inc mov out mov int3 mov fdivrs inc xchg ss lock xor adc mov pop (bad) mov test and mov jo and add xor cmpsl test cs das (bad) adc ret fstl pop xchg adc popf push pop cmpsl sbb nop adc sbb cmpsb add (bad) inc loope cltd jge int lea or test jno and or jge cmp cs adc repz (bad) mov cwtl mov cmp sub adc xchg roll lock (bad) xor aaa cmpsl push sbb lret jne pop dec adc stc movsb call and adc or gs fnstcw jb rep ds sub aam sarl or int pop and sub add cmp repz cmp in divl pusha add or out loope pop push mov lahf adc rolb sbbb maxss fdivrl and ret lahf inc inc xchg (bad) mov adc stos notl and pop cmp addr16 (bad) cld stos adc std inc arpl push cmp adc ljmp or js sub ja dec (bad) pop scas fwait popa adc jl add leave clc lea cmc movsb mov inc adc shll in xor cltd loope sbb nop inc mov dec pop jecxz sub cmp pop rep mov (bad) decb jge adc out and or movsl ret nop adc fildll inc cmc repz ret popf push imul es addr16 sub outsl mov sar xchg arpl pop mov adc int mov aas cs add push aam push jmp cmc fnsave faddl pop call adc jp pop scas aam sar mov or cmpl aaa add adc adc cli fwait pop lcall mov mov add pushf sar cwtl jne imul jle rcr mov xlat jb push getsec mov ja sub or inc sub jb add and xor cmp lods adc lock jns pop jle addr16 and int3 sub aas mov imul jns idiv adc or and es rol and ja jns adc stc in (bad) mov mov push scas lea cmp xor sub inc dec pop leave adc outsl xor push lods push or cmp divl repz jb adc fld mov pop jl sbb stos shlb xchg jg test push xor jmp (bad) enter lds aad xchg dec mov fstl cmp pop nop or push add rep xor mov push dec ret and adc es ret inc scas cwtl adc add or xchg pop rcrl cmp xor cld sbb aam sub mov xchg dec in jns dec jmp stos aam or mov (bad) sbb push pop cmpsb arpl jl lea inc xor pop pop bound add sbb sub inc or popf popa push jl jo xor sbb dec imul adc das mov aam sbb push push mov mov test xchg push adc or cmp push hlt rcll leave inc sub fstl xchg mov mov adc outsl push jl addr16 repz out test (bad) adcl cmp daa adc mov mov push movsl cmp xchg fadd pop cmpsb adc repz adc and lock inc xchg adc xchg sti adc jg mov adc sbb js icebp push xor cmp (bad) xlat movsl repz lods lds adc fwait xchg pop xor mov mov inc jl add adc test jne push mov sub lods mov sbb xchg xchg jno pop sahf sbb push add xorl xchg mov adc ror (bad) xor jp adc cltd jb dec xchg fsts ficomp xchg lods add rclb dec (bad) mov pop fstpt outsb adc movsl pop fs lea push jo push mov jno jg lcall sub add pop pop jae fistl shrl push jecxz jo insb mov adc lods mov outsl jbe adc sbb (bad) xor mov and imul xor adc push push outsb lods jns add packuswb add xchg cltd cmc push xor out in cmpsl push dec push dec mov push dec adc adc mov adc xor mov out nop adc rcrb sub jecxz sbb cmp dec std rcr movsb cs (bad) adc mov jno push dec adc xchg pop popa and cmpsb addr16 into sub xor inc or sub adc sbb inc into sub adc nop rclb out pop outsl loopne push adc or jae cltd mov adc (bad) pushf mov pusha lock push test mov adc and xchg int3 mov inc mov subl cmp out dec or lea mov fsts test xor pusha adc pop cmp out sub xchg lret sbb rep test xor jle sub in psrlw jecxz mov jle add addr16 mov xor out mov (bad) add adc inc hlt cwtl pop sar mov or into outsl pusha lret stos mov xchg sub repz repnz jg adc icebp add mov push lret lods inc xchg add cltd pop pop out adc outsb add and and adc in mov rclb bound daa adc or in push push out insl iret les aam inc jecxz push add repz je cmp rcrb cwtl outsl jl aad push lock shrl adc pop bound pop dec mov and dec xlat and pop add lcall (bad) je and ja repz mov jno ud2 jb fcomi (bad) loop les and or ret imul fnstenv sbb movd jbe fidivl inc or call mov inc adc sbb mov adc unpckhps frstor cwtl fisubl pop jo hlt mov cmp int3 mov mov jg test mov pop push pop in adc xchg test add mov xor fimull pop jnp out mov push push mov adc xor adc das mov sbb es or movsb mov adc div ja iret and call loopne (bad) ljmp adc xchg repz hlt mov push movsb adc adc aas adc mov push jnp arpl notl cmp cli insl jle push int inc xchg or mov mov fiadd xchg mov ror shlb adc sti mov xor sub call sub stos add (bad) idivb das out and out in pop pop adc aad mov adc adc jecxz es adc leave loopne adc jg sbb pop adc or dec adc fwait sbb dec fistp xor inc lcall sub imul sarl into scas jle push inc lcall and inc pop jmp iret sti sub arpl adc js sbb xchg (bad) mov das insl stc or sbb dec jge adc dec int adc add in pop ljmp mov das pop imul fcomp dec enter lea fldt insl push sbb aas stos cs jecxz testl adc cmp adc jecxz adc cmpsb insl outsl imul mov lods jge xor mov fldcw cmp out add popa and xchg das adc (bad) dec pop repz je repz fisttp mov push insl out mov in cmp pavgw mov cmpb jb,pt and mov xchg cmp adc xor add std out lds test imull mov repz jge pop mov jg aad inc pop aas out stos or cmpl pop jno fist xor push lret stc roll xchg mov dec push adc bnd and stos push ss adc or out xor mov mov mov mov adc dec sub push repz dec (bad) or int aaa push inc adc xor lods adc pop inc mov cmpsl lret jbe bound mov icebp sahf popf mov xor bsf mov es cmp mov mov (bad) mov and jg adc pop or (bad) loope gs into je and adc add cmp adc adc lcall (bad) cltd jnp leave xchg mov fadds adc int3 ljmp pushl push mov out fisubr or adc inc jle shrb sbb repnz jo fistp adc dec xchg push adc orl repnz sbb out int adc clc fimul fstpt mov and or outsl push and adc mov pop ljmp ss sbb shr push ret clc dec (bad) adc jne cli (bad) jp adc hlt leave icebp sub mov xlat dec or lea mov test cmp push subl mov mov or (bad) int sub (bad) fildll mov notb add push (bad) push adc cmpsb adc push int3 cmp cmp les fidivrl in cmp mov dec aad pusha jmp js xor xchg jmp ficoml aas mov lods push adc movsl or sbb or repz or push test lahf adc mov jl add inc and fistpl xor rcl (bad) addr16 add pop pop jb loop cmp mov roll sub fnsave mov adc bnd nop insl jns jb ss mov negb adc xchg mov test pxor out sub iret mov adc lret cmp fildll aam je outsb fcoml add and test inc add aaa subb es pop adc adc lock ja stos bound repz push mov pop jbe jnp aam popf xchg clc sub add or cwtl aaa jecxz xor xchg mov sub dec int3 sbb push mov pop ret (bad) test pop (bad) in leave dec mov addr16 je cld adc jl sar inc sbb outsb push fs mov (bad) aam jecxz,pn xor lcall dec cwtl paddsw push mov push xor aas pop mov movsb mov and adc pop mov mov aam xor (bad) test adc cmp inc sbb lret ds outsb cmp popa push adc xor nop addr16 adc sub fstpl rcll std imul test sti adc xlat lret mov scas sbb mov add sub adc (bad) adc arpl mov xor push ja push or push test lahf sbb jno,pn test adc mov jge adc fisubrl cmp sbb adc jae cmpsb sarb cld sub add (bad) pop mov (bad) lds das ja punpckldq adc adc ljmp jne scas add std rorb sar mov jg adc inc imul and jp mov popa stos cmp outsb ja jg repz imul mov adc push mov jns sbb sbb inc cmpsl add adc jno (bad) test and push jb rclb adc sqrtps adc pop icebp ss pop addr16 ficoml popf cmp insb std xchg adc imul xor mov push adc adc pop fs in adc outsl scas adc loope rolb mov pop and sbb adc inc (bad) adcl (bad) fistp dec dec and bound or add loopne movsb adc mov aas push jae repz test jmp xchg lret imul scas adc jbe test cmp ljmp sub adc in shrl mov lods push pop fwait xor leave cwtl add dec mov jp mov adc inc push xor repnz add ret std inc mov cmp xor nop xchg into and dec je push mov test adc leave push enter dec sub das add mov imul insl lods xor mov xlat lcall mov jecxz push icebp mov fisub ja in adc push dec cmc imulb sbb xchg adc cmp adc js popf movsl imul outsl pop adc mov adc fsts repz lea lea sub adc adc xchg inc (bad) in popa repnz xor std stc ljmp (bad) (bad) add cmp jbe in pop aam js (bad) adc inc (bad) jns test imul call mov push ficom xchg and xchg adc mov mov cmp add popf mov xchg rcl add add aaa or adc ret out mov inc test and xchg or mov mov mov mov sub shrl je mov (bad) rorb ret cmovno push jmp loope je push adc xchg jp int3 jae negl push mov cld out pop add xchg jnp mov fnsave lods dec loope push adc mov xor mov (bad) jp sub jno push mov (bad) insb cmpsl add adc sub out push lock push call sar test pushf les push pop enter icebp mov or xor mov pop in pop adc and mov adc dec push ret sarl push push lds cmc loopne rol out cltd loop (bad) fimull ja outsl lahf xchg mov insb jae push mov cli add sub sbb movsl and push mov mov adc push lods adc push (bad) clc inc mov pop lods into jg dec jmp test ret add ljmp mov (bad) adc mov push cmpsb dec rclb cmpl stc sub dec repnz movsl jl xchg sbb addr16 mov bound sbb lahf rcrl je sub test jecxz fcmovne mov xor sbb add mov repz mov bound mov lock repz das pop jmp ret mov es push stos clc bound fdivs sti je movl adc or int repz mov repz in std test pop mov or out insb cmpsb mov inc add cli stc movsb adc add outsl pusha in std jne mov add fisttpl rorl int sbb (bad) adc adc or rolb cs mov setno cmpb adc xchg add mov or rcr adc add adc adc pop (bad) sbb mov rorl or je mov jns push stos adc (bad) repz rcrb sbb loop jns pushf sbb inc cmpsl jecxz cmp cld test adc loop xor test rorb or lcall repz out cmp jne add mov addr16 add and dec adc cmp mov (bad) stos xchg dec repnz adc cwtl xor popa adc fisubrl or or movsl xor hlt imul xor aas jne adc arpl xor ja out sti dec xchg adc mov stos into and mov mov jmp xchg insb xor int3 adc scas imull mov sub idiv pop xchg push adcb xchg add hlt mov push sahf adc inc lret nop lods mov mov loop cmc adc push arpl add mov or and bound adc test (bad) cli out sub dec fcoml and sub shll rcl pop push mov (bad) mov or mov push cmp adc ss imulb xchg xchg test popa inc add outsb imul jecxz mov aam insb push adc mov xchg push dec add clc inc xchg cmp cs popa mov pop pop pop cmp (bad) hlt lret pushf sbb lods mov or mov cmp and and sbb push adc (bad) ljmp in pop push pusha test push loopne and js xor pop (bad) dec mov lea xor adc adc arpl or ret scas adc test mov mov jns mov xchg adc imul mov mov adc xchg arpl push sub nop jp inc adc pusha out sbb adc push sahf pop adc jnp inc adc push cmc test pop adc add scas je push xor jae push add pushf xor je aam imul mov icebp xor (bad) call das push mov (bad) stc adc mov cmp push mov test mov adc push push adc or and stos jae clc xor (bad) push and pop pop mov ret cmpsl jle or cmp adc xchg mov pop dec xchg imul or ja xor fcoml pop and xchg jle add cwtl fiadd pop cmp adc cld dec cltd sti lock movsb and fsubs sbb cmovo cmp inc lods (bad) pop add fs les add dec adcl sbb (bad) fidivr mov or jb lret push lds jle call notb push stos mov outsb out push adc cmp pop pop dec jbe adc or sub pushf jo and pop hlt daa dec fmull xor cmp xchg shr outsb or sbb sbb rcrb loope adc pop adc mov je add adc inc fildl jae and adc push and cmpsb add inc rorl sahf sti add mov dec adc out xor aad sbb xchg push ljmp or sbb add push mov mov add (bad) mov data16 cmc addr16 cwtl adc mov mov or sbb (bad) jns (bad) (bad) rcrb pop rol mov gs and dec in jo mov jmp or aaa test or xlat adc push mov xchg sbb xor out (bad) adc mov cwtl mov popf call loopne xor push daa lret or or in imulb adc lock adc outsl and push popa lret mov jnp call or xchg clc leave or jp repnz and loop xor cmp pop and outsb stos insl les push jae mov arpl inc cmpsb adc dec pop and repz test or (bad) pop sbb push arpl jp cmp add aas (bad) adc jmp shll lea clc inc pushf lds inc (bad) (bad) and push adc insb dec lcall jb xlat lds fs outsl push data16 adc jo fstl out scas xor arpl repz jl insb adc cmp jp inc and shlb repz out pop cmc dec adc pop sarl jecxz adc push aas mov subl and xorb inc cmc arpl or mov sbb xor fcoml imul cmpsl popf xchg in push out sbb (bad) add ss xchg sti push mov sub mov lock sbb adc push jnp push and mov repz das lcall (bad) cmpsl pop loop cmp mov xchg mov xchg rep or or and or adc sar mov je jns (bad) roll push sbb sti mov fucomi ret push dec fsub adc cmp lods je in xlat xchg sbb dec pop sub mull sub mov bnd daa mov cwtl pushf lret rorb xor mov jae pop xchg jo mov or repz stos inc adc jnp jb mov lods sub insl ds cmc dec mov nop dec lcall movsl arpl cmp (bad) repz pop cli mov add ja add jge mov pop repz lcall scas mov or loope cmp jge or push xchg jl mov popf inc mov pop adc or mov jno mov jle xchg scas outsl jecxz imul lret cmpsl or ds ficompl mov iret add xchg mov sub jno lcall pushf adc fwait daa mov (bad) outsl sbb pop (bad) and jb xchg sahf cmp jg ret adc lret sbb cmc into fistl lods or repz popf out (bad) pop imul scas icebp test jb les sarb inc outsb repnz adc xchg xor mov sarb or inc adc into xor adc dec push fisttp sbbl es inc and adc xchg rcrb xor xorb push xchg sub xchg test or adc add adc jne (bad) mov sarb inc cmpxchg lea adc cld mov loop lds pop je arpl or sarl fwait xor pop out adc push (bad) pop or jg adc jp es lods jb int3 mov and push imul fs mov dec mov inc and jne jne adc lret into mov test stos movsb bound mov pushl (bad) cmp sbb push out in inc nop push insl mov arpl adc iret nop out sub rcrl xchg mov adc xchg fisttpll sar add adc adc lods sbbb cmp push pop pop push xchg fisttp jl imul mov mov or cli add out adc xor test pop sub xchg fstpl test add ret sahf xor jo xchg call sub or inc lea int3 add aad inc pop lods popfw mov dec mov add xchg (bad) std jne enter add test sub jle mov mov into mov cmp add shl lea sbb jecxz jno out inc or (bad) rcrb adc cmp cmp jnp int and test xchg insl hlt adc inc cmpsb adc pop adcl jge ret mov jmp or pop scas jo dec imul add adc repnz xor sbbl push pop pop mov jg aad inc mov rorb int push sub jae scas xor or add sub dec dec out hlt push orl add inc fs frstor xchg cmp mov mov (bad) (bad) mov fcmovnbe insb popf add (bad) cmpsb xor xchg ja in adc sahf mov adc das stc and sub inc pop rorb (bad) adc cltd push ret fild jp aam push cmp movb mov popf push lods fnsave adc je int3 adc xchg es mov rcrb stos pop adc pushf movsl or sti arpl xor imull push ja adc pop loopne jge jnp adc aaa imul cld xor and aaa mov cmp pusha out push push les adc pop xchg popf stos and (bad) js add adc test sbb push inc aam jg orl mov cld adc mov adc rcr and rorl int3 loope test push xchg in and add push xchg adc imul loop cmpsb adc stos outsl and push int3 ja,pt cmpsl push (bad) adc xchg lea jge jae adc or ret push int not call lds mov es push and adc mov jne out stos xchg aad loope push (bad) imul jno sub xchg roll adc xchg frstor push cmp cmpsb mov inc ljmp pop or adc rol sahf movsl insl push adc inc outsl outsb adc or xchg adc pop stc les dec add dec push out lods adc and mov dec (bad) jo push das data16 mov mov sbb dec adc mov (bad) hlt mov xchg xchg scas push xor fisttpll push leave ret out adc aaa add pop mov adcl add jno (bad) xlat fcompl adc in sub and pop or inc daa inc in mov adc and lcall adc sbb inc leave (bad) lret jns lcall cmp inc adc push in push movsl test pop adcl pop jmp in out jmp push test mov adc imul pop mov or and pop adc jecxz jle std push je ja lret adc fbld mov sbb pop rclb insl and jecxz sbb stc mov in pushf cmp out (bad) adc mov adc mov cmp mov or push push or shrb lahf pop mov out (bad) dec adc shlb adc push sahf scas inc mov push mov adc jnp xlat adc adc (bad) cli out adc xchg stos (bad) mov mov add ficoml hlt dec out int3 pop stos pop out imul adc or or ja mov mov js or in in loopne push ss adc xchg dec bound mov xor xchg xor lods leave mov add inc cmp dec les xchg cmp adc inc add ds pushf xchg adc and jns call push loopne leave dec adc cmp pop sbb adc or adc outsl add pop loop jno rolb xchg aaa xchg mov (bad) dec cs lcall add add xchg mov popf push adc cmp sub (bad) mov sbb adc test xor adc je addr16 sub bound and xor mov dec mov sbb call cmpsb or dec cmp adc xchg jmp aaa jno lods into adc cs mov mov mov jne xchg jecxz pop mov or mov repz lcall xchg pop ficompl inc insl mov mov sbb adc push xor add jge test (bad) or xchg pop mov push adc dec sahf push enter mov mov adc rorl les dec lahf std add imul aaa fsubrl cmp adcb mov lock iret outsb adc nop cltd mov adc push mov or aad jae cli sub cld mov or mov jne imul sti nop popa or mov mov push lret loop push scas (bad) dec xor lods ret xchg cmpsl jl into or pop mov iret xchg sahf sar jns stos sub gs fmull xor xor mov je test sbb pop addl outsb fistl aas ror mov nop add mov std fbstp mov daa add ss (bad) pop aam or mov imul repz push outsl xchg dec mov xchg in add lret sarb sbbl pushf adc scas xchg pop and adc add mov out jae adc lods xchg add and pusha adc in mov xchg dec adc call push adc mov cmp jmp and repz cltd adc xor inc je icebp and xor (bad) xchg push push pop repnz lret es cwtl mov je and adc repz repz dec mov or test add nop inc cld insl sbb btr outsl les mov xchg fidivr mov ja sti sbb and out adc xchg ret stos jg pusha and pop movsl subl test jns daa std xchg adc and adc and dec jle adc cmp addr16 dec fisub das adc xorl jecxz inc adc adc xchg (bad) movsb in mov jecxz inc mov pushf test push sub inc clc xor or sub lock aas pop mov popa xchg in ljmp mov mov and mov outsl adc pushf jl push repnz aas adc fcoml add pop fcomp (bad) xlat (bad) adc mov mov ret adc xor outsl mov jmp or pop sbb loope iret ss adc popa or mov into and xor adc or jno cld dec mov push notb mov xor pop ja out sub xor in in xor lret xor jl lea adc icebp dec jecxz mov or jge adc out loope les sub push inc or mov cld cwtl pop add xchg inc adc inc in or shr or popa add or std adc lcall mov aas pop cld popf adc jb jl sarl insl xor push sbb adc int3 add rcl sbb fnstcw test repz out loopne mov lea adc jmp adc hlt mov scas repz mov jl xor push jae lods scas fidivr mov xchg jns pop or xchg in mov fsubr jbe jnp sub les lock in xor hlt push xor mov lea mov loope (bad) std ja push inc cmpsb iret out aaa inc repz clc sbb mov mov pop jbe testl adc fsubrs gs popf inc imul repnz punpckhbw cmpsl mov and jb mov (bad) mov xchg test jmp ret adc (bad) popa in xor xor xchg xchg dec push add adc roll cmc pop (bad) mov out push fstpl xor cs sbb daa in adc das test adc sti mov rclb pop xchg jmp addr16 scas lret in call inc or out adc (bad) mov pop mov out or nop mov and popl xchg add pop in cmp xchg les inc aam pop adc sub pop adc imul or mov mov leave fsubs push insl pop (bad) adc std jns mov imul sub fxch or and push xchg imul pop mov xor inc jb add push xorl pushf icebp orb inc test push mov test or sub aaa in ss dec mov les add repnz sbb inc xchg loope and cs imul scas adc adc test pop adc adc es repz xor dec jo test pop xor dec imul sbb and mov aad lcall push rol sahf jnp adc mov xor movsb sub aam xor dec (bad) not aam adc pop cli dec lods adc inc jge (bad) daa cmpsb mov repz (bad) sahf adc sub adc into outsb jne dec pusha imul xchg faddl orl sbb jno or adc jne jp out popa mov (bad) les dec test mov xchg inc ljmp pop icebp mov xchg (bad) adc in pusha cmpsl cmp adc jecxz jb cmp jmp adc cmpl adc mov lea add loopne mov out mov xor aaa or mov gs add mov sub adc push jle adc pusha sti sub xchg popf jle adc imul adc jo push js lret push sub (bad) and dec adc into pusha lods cwtl fnstenv ds pop adc adc in adc mov xchg xor lret push push adcl movl (bad) icebp add xchg mov mov mov fistpl or test sub gs or hlt fistl xor dec sub je adc loop bound movl dec test mov add push xchg jne icebp push addr16 xor insl loope xor adc mov mov aam mov jns stos mov lret lret inc mov scas jne insl add pop ja popa aad adc fdivrp add jp adc loopne in test (bad) jnp adc in mov pop jmp adc repz jbe in shlb pop mov push adc cmp pusha fwait sbb adc pop fsubrl adc dec mov sbb dec xchg and cmp (bad) cltd lret daa jp repz mov and mov push push add adc test outsb cs sub mov aam add and adc rcl mov push adc out sub pop pop out jnp and dec fild popf repz (bad) je js dec or adc in cmp cmp sub jno and (bad) fbstp aas loop sbb or outsb int jae adc ror dec div adc repnz jge pop sub outsb pop push daa inc ficom sub shll or add cs ror mov xchg sbb xlat iret mov ret outsl adc jp jbe xchg test test inc sbb cmp or mov sbb sub stos ljmp cmp imul push mov ss add adc pushf mov fnop out sti loopne mov lcall aas adc push xchg cmp cmp mov mov pop and mov mov repz imulb or xor mov cwtl cmp push adc mov test adc xchg nop xor (bad) lods in sbb sahf push xchg sub mov pop lds and scas loope jmp adc aad (bad) mov pushl or push add jge sub adc add dec push int rcrl repnz stmxcsr adc test adc repnz or adc je cmpsb enter pusha mov adc cwtl pop push push movsl xchg arpl mov test popa mov out adc test bound lods add lret jecxz xor sarb mov adc in aaa adc jo (bad) out jl mov mov fild mov adc addb (bad) xor ficom lods cld add xchg fwait mov sbb mov sbb adc adc loope adc dec stc jb fdivl mov sahf pop and cmp sbb push fwait stos jecxz adc pop jle adc scas scas inc or mov mov sub rcrl fxch sub mov jge lea xchg dec cld add push ja dec (bad) or rcrb inc xchg adc jl adc movl std loopne sbb push adc pop xchg mov sbb sbb or or mov test mov xchg dec adc ret cmpsl and jb push fcmovnbe lods loop adc daa pop sbb icebp xlat or fnstenv pop adc mov arpl push les pop out inc cmp adc sti xlat in ror hlt xchg scas sbb adc shl stc fwait and popf (bad) adc dec xor push pushf xchg adc aas fstl es or sub lds jno cmp mov or mov adc xor add adc jnp pop subl sub or add out scas aam adc pop sbb pop std inc adc cmpsb test jbe mov imul fsts xor and repz lea (bad) mov mov pop sub fsubs sub rcrb out sub push mov mov fnsave iret add addr16 mov lods call xor clc add loop sbb cwtl rolb push adc adc adc adc fstp cmp adc push dec xor and mov adc jno jge add adc mov pop test mov mov cmp into jg sub xor arpl daa iret cmc sbb xor lcall lods fistl adc (bad) repz push sbb adc jecxz lahf jno jmp cmp inc sbb repnz push adc movsl daa lods repnz or jecxz leave mov adc inc adc xor lret mov xchg xor (bad) adc jmp dec adc ja jmp adc ret inc sub aad lea push (bad) adc jb mov cmp jle xlat out in fnsave adc inc scas lock unpcklps jg ret push in cmp add adc rorb xor and adc add movsl das adc push cmc in (bad) push imul rcrb cli xor cs jns dec jmp sub mov int3 pop add jb adc ljmp mov push and stc dec mov bound xorb cmc data16 pop mov mov or dec mov cmc push inc push mov mov into xchg adc adc test shlb sub dec paddusb adc pop push mov (bad) mov and nop mov (bad) shrb pop ret shl cmp push inc mov pmaxub fidivrl rol adc jmp add das cwtl mov es adc jne pop in arpl mov xchg push enter mov mov test dec cld movsb mov cmp adc cwtl test mov sbb adc or sbbl pushl mov js cltd xor adc sub insb push and fimul aas fiaddl out (bad) jne mov mov repz jp outsl mov aam (bad) scas mov mov adc cmp push or xor aad mov imul adc inc sbb adc add lods in clc adc sub pop adc maskmovq notl mov enter mov and dec out stos in sbb jge xor or fstl push (bad) clc test xchg jle mov jne in ret movsl push lcall out test adc add mov pop xchg push mov adc jg sbb fadds push outsb mov mov movsb inc sub cmp mov or dec hlt cmc xor and (bad) mov mov sbb mov into repz cmp adc stc ljmp jns and mov pop xchg inc pop lods adc inc dec imul cmp pop lret dec cld hlt dec mov mov xchg mov int adc testl into lods inc dec mov adc decb sbb sbb xchg and out mov in dec pop add fidivr out stc dec movsb stos pop addl lods clc es cmpsl repz and inc inc adc and stos lcall push out mov adc xchg and inc cwtl dec jbe mov push adc adcl in xor jmp pushf arpl sbb or mov mov stos mov (bad) pusha adc repz fstpl mov and out pop adc repz mov fiadd ret rcrb jp out pushf (bad) xor cwtl mov insl xor arpl push jae cmp adc add jmp fsubl rcll inc dec outsl outsb add arpl adc pop mov mov push mov push cwtl lret (bad) leave bound dec mov mov aad sbb notl push cmp rol adc sub adc adc pop mov addr16 mov mov cmp scas lret adc adc repnz mov fist cmp push les (bad) scas adc popf into call clc mov (bad) and sbb insb adc cmp xor fmull enter movsb jge dec inc add adc in pop push imull sbb adc xor mov push sbb mov shrl push dec or cwtl pop or adc or cld mov ja dec mov out mov pop lret mov jmp adc mov mov (bad) fildl pop arpl scas xor ret test add js jmp sbb and dec mov fisubrl add insl xor in int3 les mov fld inc repz cwtl lods lret or sbb fistl and incb rep dec adc mov xchg adc jmp imul jge push pop xor loope xchg add mov mov add cmp repz mov sub jns inc add or and (bad) sbb pop mov inc or lcall push xor adc add (bad) mov or icebp mov mov enter adc mov cmpsl cli sub lods jbe (bad) (bad) or rolb sbb mov mov je je xchg lret or dec imul pusha repz adc stos ds pop mov pop xchg sub and dec adc push mov test cmp popf rcrl repnz std dec dec cs andl mov add adc (bad) jge lock cmc pop adc rorl rol xchg xchg adc mov inc clc aas mov and cli xchg push loopne cmp adc (bad) or dec add pop repnz iret sbb pop inc in mov out movnti adc test std (bad) movsb mov push xchg adc dec loope add addl inc shr jbe or sub faddp repz cmp repnz sub ljmp add mov adc iret add pop xchg sbb aad dec xchg hlt inc mov repz mov out or adc dec push sub cmpsl orl jg jb (bad) movsl adc adc dec mov add and repnz add inc nop inc scas push or lds stos dec xor adc and sbb clc mov adc repz fdivl in lret pop adc jg fwait sbb stos add (bad) sub adc sbb cld dec stos adc cmp mov (bad) xor repz mov data16 (bad) pop (bad) adc pusha sub dec add xor pop (bad) xlat dec int3 push mov add icebp std outsl arpl mov dec imul js (bad) repz in fwait sahf xlat adc je adc lcall xchg pusha dec enter jne icebp (bad) lahf fbstp and or add adc punpckldq std scas fist add data16 gs xor bound xchg adc sub (bad) (bad) adc xchg dec nop adc dec paddw aam (bad) adc pop mov jne lsl fs addb imul movsl jne and sbb xor mov add pop loop xor adc jne jns adc or or jno add out fwait cltd mov cmp adc mov (bad) xchg std mov and dec sub pop mov cmp push out (bad) icebp pop adc ret rcl jg (bad) int3 fistp arpl jno pand loop icebp adc dec inc mov cltd cmp dec (bad) lods or jecxz stos jmp jmp pop movmskps addr16 nop dec xor mov ret adc das pop jae adc add int3 add push adc mov sbb adc cs adc pop int3 mov daa adc repz iret cmpsl push ds inc push in cmovs xchg pop std lret or or jae or mov inc dec decb xchg lret lods add add push lods popf pushf xor fwait cmp or lcall adc cld mov lods sbb insb sub in add call test mov std adc bound push lds adc adc push loope lods mov xchg repz scas or push push add sbb xor test lods add xor hlt dec pop mov and fistpl or adc pop push sub imul lret and outsb adc test adc stos imul lret sub adc jp jb fsubrl js xchg sbb jle add sbb pusha jno ror mov stos jo xchg mov add pop insb fsubl xchg hlt aad rclb andb sub adc mov (bad) and inc adc lock mov add sbb dec data16 mov and add in adc jnp decl repz loope aaa fnsave or mov sbbl mov pop loopne sbb mov mov jge and adc cmc stos dec in push jp ja xchg cmp jns rolb (bad) leave mov hlt ljmp mov inc adc inc inc rcrl add mov (bad) cwtl or jnp add imul jp xchg mov jle sbb sbb fisttp or xchg or orb icebp sub push repz sbb in (bad) pop push mov jnp inc test aam lods mov and sub ja sub (bad) int shrb adc sbb cmp adc les mov adc adc hlt jne inc pop jmp mov icebp divl cmpl cwtl out mov push sbb sbb adc stc cli cs xchg negl je sarb mov mov imul push push mov inc outsb cmp mov sub adc cmp jbe sub xor push je pop addl and push sarb cmp loopne adc xchg pop mov and inc inc xor lret call cmp adc mov rorb sub imul mov xlat xchg aas imul jp sub xor (bad) test jg adc and dec push mov jmp add stos movsb push jne adc mov dec in adc dec xor xor sbb jae pop mov test add mov pop jns push sbb or fcmove lea dec adc popf adc stos subl loope mov pop adc hlt or mov popf cmp mov cs adc ja gs fcoml std dec imul das and (bad) (bad) hlt mov or push ret ret or mov outsl adc dec fdivs (bad) into insl sub mov or call cmp (bad) int scas adc imul cmp insl ds imull hlt push mov pop jmp adc popf out dec popa jnp lods adc loope add mov adc push adc mov adc dec push cmp xchg adc test sbb adc xchg xrelease arpl mov pop (bad) jns or pusha pop adc fidiv out lret sub (bad) xchg cmp push (bad) (bad) jmp xor fidivrl sahf xor adc or jno sbb rorl fist or das or push jle adc cmp dec jl aam sbb mov xchg push ficom pusha and push je pushf pop sti mov sub test sbb push adc cld (bad) inc adc fwait cmpsb jmp sti mov fistl aaa xchg dec adc mov add loope (bad) cmp rolb mov push ret adc jl cmp inc cli insl push sbb movsl data16 dec cmp or adc mov popa xor lret aad adc sbb pop adc data16 sub mov addr16 mov wrmsr sbb popf sub sbb add and lahf add in outsl inc push aas pop dec rcl out decl cmpsl das imul movl iret pop adc test popa xorps cwtl scas xor jo push in lret in jae sub adc dec xor adc xchg dec scas lock add imul adc jns jnp xor adc mov sub and sbb rcll repz jbe (bad) clc aaa mov lahf mov fdivs into sbb jmp jno jns adc mov ss adc jge ret mov adc insb stc lcall inc push adc jno xchg or xor cmp mov inc and sbb inc xchg or nop add dec mov push jmp out stos pusha inc sbb (bad) push call add jnp sbbb hlt fwait adc sbb xlat or xor or popf push sub mov js arpl push xor mov mul insb adc repnz data16 stc popf pop mov ret mov xchg lock ss adc push dec sbb jo push or lock int xor ret fsubl cld adc or adc xor mov ret pop sbb vmovhps insl sbb sbb cmp mov ljmp adc scas mov and dec pop dec xchg push jae loopne pop adc outsl (bad) or hlt cmp sbb inc addr16 adc fisubr incb hlt movsb sub push mov lock dec cwtl (bad) mov lahf inc or fldcw push insl jecxz jnp scas push sarb dec stc adc sti cmpsl in inc rolb sahf and loop mov jecxz jp icebp icebp xchg mov push cli xor jecxz inc dec iret push fist les adc pop xlat nop adc jae stos cltd test mov mov and pop pop xor jecxz sbb shl mov sbb pushf scas lret adc (bad) adc imul xor lock addr16 jnp aam add jmp dec pop movsl aam jle pop sti insb das mov inc push xchg mov jg aad xchg adc loope and aam adc ss mov imul sub shlb inc rcr sub add mov mov rcll inc inc btr jle repz call pop lahf fist aaa mov cmpsl mov int3 inc add adc mov mov scas add sub sarb roll fnstenv adc test cmp mov lea div divb pusha add sbbl mov mov lret arpl (bad) imul adc popf mov pushf mov cmpsl xchg gs mov adc (bad) (bad) jns jae sbb xchg std punpckhbw in sbb and andb push mov rorb outsb cwtl push xor sub add add mov jno data16 dec imul aam pop and mov mov jecxz xchg ret repz adc or mov movsb stos mov mov inc mov ret cltd int3 or lea pop mov sub call add adc pusha jne repz js shrl adc pushf xchg or pop das adc and mov into sub adc aam adc insb jns scas shll insl or cmc (bad) pop ds jae out daa mov imul adc xchg pop mov int clc mov jb outsl push xchg arpl adc mov js mov sub clc into dec push add out or dec repz add add das dec adc add or int adc mov fiaddl add lldt sub mov ficom jne (bad) aam roll popa rol sub out xor mov sub sarb push jae bswap enter lds adc jne push fnstsw lahf adc or xchg shrl (bad) mov pop add gs notb roll out (bad) adc int3 stc sub jns lcall mov nop imul xor stos jns adcl sbb mov (bad) xor or sahf adc adc testb push push dec fsts pop inc push adc cmpl adcl ret int inc data16 cmp mov adc push repnz dec mov imul xchg mov fwait xchg les (bad) mov xor adc pop pop push adc fstpt in xlat fcompl adc adc xor pop imul inc push inc add cmc pop adc pop push aam and jge ss xchg cmova xor cwtl andb or adc dec into in ret (bad) fs jne mov jge ljmp fs inc add sbb lea fstl xchg lods dec test and insb cmp addr16 xchg aam orb jo inc adc lea fist and dec jle js mov test lods fldenv sti adc lcallw xchg mov or adc xchg sbb cwtl jo add repnz adc call popf out adc fidiv inc shr add cmp daa mov les idivb adc adc adc nop out adc inc movsb mov stos adc adc cmp adc insl movsb dec nop pushf pop fcoms mov stos lea bound cmp pop fnstsw imul push cmp fstl rorb xor jmp mov pop ret data16 or stc rolb mov add cmpsl ret repnz (bad) add and jmp negl push nop inc sti iret dec adc jmp push add mov cld outsl sub sbb pop aad je ror xor xchg cltd adc push add jno addl std cmp lret lahf clc lcall push nop jge dec adc push sub add adc cmp cmp pusha pop mov cmp mov adc mov mov test adc pop cli jns cmc pop or rcll aad popa xchg jle int or into dec (bad) jmp fwait adc inc test pop (bad) ror or add jp add or iret mov xchg insl and or lea push (bad) sub mov xor insb sahf enter pop into (bad) xchg incb push lods int (bad) (bad) xor fbstp lods movsl pop dec bound push cmp cmp jnp adc (bad) out lret popa or adc inc pop scas mov mov cltd pop int in outsl push adc dec insl adc mov and mov sbb dec outsb jo pop lods (bad) mov mov add out sub and inc xchg add cmp (bad) mov mov lods pop lret test stos icebp adc xor adc ds mov frstor cli add pop pusha mov jge xor adc cmp (bad) adc lret adc mov lods adc cmp decl bound sub inc ds popa les mov push mov enter out push pop insl push pop test pop mov mov fnstcw mov adc pop fist dec adc xchg jbe stc push mov sub add rcrb mov fsubrp mov pop int3 xchg adc jno cmp insl loopne adc in cmc fs rcll adc adc fisubr cmp pop adc sbb outsb mov and lods insl movaps insb fdivrl fxch cwtl add push clc ljmp sbb mov inc adc jle es inc in fnsave mov xchg les xchg mov test enter es hlt dec or imul out mov sub or test rcrb and mov repz outsb mov inc loope (bad) and pop xchg push mov mov sbb shll (bad) push lods add popf outsl jp adc cld iret push sub sbb lret pop adc ret in sbb sbb inc subl leave dec out adc mov nop (bad) psubusw jge xchg (bad) or mov enter (bad) sbb sub add test insl outsb test push call cmpsl das inc loopne das push adc loop or push sahf fwait shrb mov fisttpl sbb add movsl jbe int3 adc xor scas incl pop mov je sub push pop cmp push cmp popa cmp pushf xor dec cmp or es xchg mov inc cltd add neg dec push adc or cld fidivrl (bad) cmc (bad) sbb imul aas fistpll fwait push ss test inc cli or xor loope push (bad) jno or outsb adc jl outsl cli inc or inc cmpsb pop shlb lock or mov dec js adc sub lcall xchg xchg adc test and aas imul cwtl jge adc inc dec adc lods and mov ficom or dec mov mov sub mov fadds jbe mov scas lds icebp sbb pop fildl sbb jno testl pop out adc add orl xchg adc mov xor cli inc sub push adc push aaa adc add adc fwait popf es ficoml cmp pop and pop jne pushf test js ljmp adc adc cs sub inc jge adc sbbl sub sbb test sbb in shlb fbstp and add lock enter xchg mov mov pshufw xor mov imul mov adc popf jmp add adc pop hlt cmp (bad) repz test pop lahf cmpsl adc divb xlat cwtl mov rcll sub fnstenv bound sbb mov lods divl mov and inc jge pop sbb lcall mov and pusha insl lods adc pop mov pop rcrb xor ds popa ficomp dec mov xchg incl and xchg adc pop aas and imul mov fmull and incb adc pop add mov daa sarb push cmc cmp dec pop or adc add (bad) mov adc incl xor lock sub negl rcll lret inc pop pop push dec sbb mov adc movsl jle adc call adc push adc xchg pop adc ljmp aam int sbb pushf lahf push jmp sub lret xchg fnsave and je insb push adc in nop mov inc les sbb ret mov daa or pop sahf xchg xchg lea sub cld adc xor adc jp jae push les int mov push adc or jp sbb xor mov adc adc in dec adcb ljmp mov push in pusha adc pop pop or mov dec fcmovnbe (bad) jp adc scas cli and lea add rolb dec push pop mov shl xchg jno mov (bad) (bad) ds adc pop js push imul rcrl inc repz push jg repnz adc push mov fdiv stc sbb add hlt dec adc xor cmp mov das sbb pusha mov or lods jo popa add dec insb repz std xor sub movsl xchg ljmp aas push jle stos nop bnd fldl2t cli adc push bound rorb (bad) cmpsl daa add mov in push pop jns rclb xor xchg xchg jecxz,pn and sahf jns aad adc (bad) lock pop ret push popf pusha cmp adc bound inc add mov xor and jb pop xlat nop fildl test jge inc push adc pop pop (bad) jmp xchg xor cld movsb mov pop adc xchg enter pop in add push fldt je bound lock or cmpsl mov mov mov lahf xor ret inc cmp sub push mov test pop jo pop mov and jmp mov adc addr16 cmp add gs xor cli stos sbb xchg hlt pusha arpl pop adc fcoms mov aam dec adc add js in ret and adc inc arpl inc or jno je add data16 adc fdecstp sub arpl add sub call or iret xchg cld pop lock test or mov cltd popa out enter fdivrs inc mov cmp hlt (bad) and jge mov cmc mov lea loopne out fidivl hlt adc or fwait pop adc inc sub adc in dec stos mov cld adc jmp fcoml jnp jne bswap mov jge les mov add jbe mov aas mov pop popa cmp mov or test sidtl fcoms mov push pop sti adc dec jp adc cmp dec loope mov add add add sahf adc mov xor and mov adc je jmp cltd push cmp fisubrl xor dec push repz clc (bad) xchg test or adc sbb dec adc add ljmp xchg movsl mov out shlb iret movsb fisubr mov pop cli jl mov sar adc les aam adc jecxz gs sets mov xor inc push adc jecxz jae mov in xchg jp jmp subl arpl add daa add xchg mov cmp mov push sbb xor es adc add xchg popa xor sub xchg aas dec scas push fwait or (bad) add sbb xor mov jo add out popa sbbl push enter inc sbb pop or icebp jnp (bad) mov aas xchg mov sbb adc dec inc movsb cmc pop add adc jb xchg stc inc sub dec (bad) (bad) mov add mov adc push fdivl pop into rsm jns adc dec xchg fldt adc add mov lret xor hlt cwtl pop jecxz mov (bad) mov add int3 sbb sub mov and in mov aas mov fadds pop inc imul xor mov xchg sub fcmovnu dec mov outsl inc xor jle nop adc aas pop enter xor and add jp sahf sbb pop adc pop sti adc xchg icebp dec xchg add mov inc lea jo lds dec test loop leave (bad) hlt adc jmp mov and xor jb (bad) xchg or jbe mov lret pop push cmp bound adcl mov scas scas sub sbb jnp ja out ffree cmp cmp repz enter xchg fisttp lods adc push popf push push or subps (bad) ret std lahf adc sbb add movhps mov inc dec leave adc lea (bad) lods cmpsl lcall or lahf daa aaa xchg mov adc hlt push push pop and pop movsb mov aad lods adcl add cld data16 mov adc jb fmull call adc adc and inc scas adc adc push sub adcl (bad) cmp loope in test or or jmp adc sub adc cwtl in push adc mov adc adc jle movsl cmp jno outsb adc loop jae push shlb xchg add mov or in adc (bad) dec je dec int3 jecxz fist scas arpl fwait push pushf jae or adc push sbb lahf test ljmp sbb (bad) adc lods rcr icebp or mov lea aad iret and jae adc fadds adc sbb icebp sbbb sbb xchg adc dec pushf lret push cmpsb push fsts xor xchg std dec mov sub inc adc sbb sub loopne repz iret mov pop cmpsl dec mov aas jno pop popf cmp lds mov subl (bad) popa adc rcr dec js cmp adc and pop insb test rcrl or and das outsl inc or (bad) std mov test push mov inc hlt sbb mov (bad) negb clc adcb sub mov jno ja xchg insl jle mov repz push sbb or adc test lret mulb pop xchg or pop test adc dec ficompl dec sbb or push mov mov in fist and insb (bad) mov lret pusha cmp in cli xchg test adc adc push pop das imul and adc mov mov push bound shll or pusha repz mov xchg or xor pop adc jb ret js jnp inc xchg addr16 mov pop jno scas pop xlat rcll mov (bad) jb sti or xor cmp pop loope push xor or movsl das sub cwtl xor mov push xor js xor lock lods sub inc jbe add fs xor lcall sub cmp xchg add jb icebp adc es loope xchg mov cmc lods jge mov adc inc lahf leave cld adc mov imul adc adc add adc xchg mov sbb mov mov rorb sahf pushf mov xor mov cltd rcrb jg pop add notb xchg lret mov cmp fnop out pop mov repz daa add jp push sbb sti xor adc pop cmpsb sub or movsl mov aad xor in imul add dec out adc xor xor jbe in lcall push stos inc adc mov and std xchg cld inc dec add pop outsl jmp sbb mov rorb xlat fistl push mov mov pop pop into lcall fst mov out mov jns pop jmp or es sub pop adc or popf mov jb pop pop add push decb (bad) (bad) mov mov fist std call cmp jne adc imul xor xchg dec mov arpl rclb xor and xor dec lret adc rolb insb (bad) je (bad) repnz xor add cli pop xor gs add repnz enter imul popf cmp scas mov add cmp or and (bad) and adc or add int stos insb push icebp mov or pushf arpl and dec ret insl stos pusha xchg adc xor xor sub adc lods pop xchg adc jo inc aaa imul dec nop adc xchg jle aam mov adc ljmp adc inc adc and inc cld push adc das mov jg sbb pop adcb pop cli xchg dec enter adc sbb dec cwtl pop push xor mov jge adc cmp stos das mov add js fnstenv adc cmp mov inc stos ljmp mov sbb or add lcall fnstcw enter insl hlt inc or or stc pop push in icebp insb mov xchg adc test adc sbb sti adc loopne xorb ret adc repz jns xor xchg sub mov add jle mulb and gs push add je mov mov add lret adc mov cmp shlb cmp push mov sub pop xchg lock imul mov sub dec out xchg jns push adc (bad) mov repz pcmpeqd pop repnz push bound inc (bad) stos pop jecxz out adc imulb stos mov jne dec adc cmp fwait loop pop cmpsb pop adc mov and pop (bad) adcb shlb cld subb (bad) mov into adc pop dec cmp and jp dec repz push sub imul mov scas pop xor lods sub (bad) pop push jnp mov mov addr16 lret imul fwait cli jmp insb pop lds or imul inc adc jnp aas sub mov or ficom mov push js hlt les mov dec cltd daa jns adc sbb js in iret fcoms aam pusha fistpl pop push adc mov icebp lcall in xchg or cld mov and push test (bad) outsb adc fidiv jg cmp mov mov sub test inc mov xchg adc cmp jg fcompl adc std in dec stos (bad) inc (bad) int3 aad insl pop cwtl divl adc mov mov ret jbe add and adc xchg stos fs adc inc xchg adc push xchg cld sub (bad) (bad) ret sahf movsl adc cmp pop add adc sub lret cmpsl inc dec stos movsb rclb jne inc leave jmp enter mov adc sub mov xchg addr16 (bad) sub int adc jbe test repz or cmp fsubrl add lret test clc jge btc mov int lods enter push roll roll sub cs (bad) sbb push fistp mov add sbb sbb fs into cmp testl das or aaa loopne stc push pop push rclb add bound push loopne mov nop pop movsb mov inc dec cmc add xchg stos test xor lret push or sahf cmp loopne mov sbb adc mov adc mov inc out sbb jg je out mov adc push sbb repz subb dec ret adc ja push adc mov push jecxz mov (bad) cmp cmpsb xor sub sti bound push adc pop jns adc sub int adc aam xchg ds bound inc cld and mov repz xor mov in loope ljmp inc dec sbb xor repz pop xor lahf dec adc out jb or sbb repz mov sbb in stc sub fcomi stos jae mov cmpb into (bad) xchg in adc (bad) icebp inc repz adc mov adc or mov adc js lods sar sbb movsl sbb sbb imul (bad) out mov ficoml flds ds push push rclb pop lret adc mov cmp adc in mov mov pushf jns ror pusha mov nop jb xchg sbb out push jmp jl sbb push lds aad add mov jl lret xchg lret xchg ja inc cmpb repz out (bad) pop loop sub ret int3 add adc xor sub jmp and or clc xchg fmull xchg and mov push mov sub mov into loop adc fisttpll jg and cmp out call xor xchg and mov xchg jbe ljmp add and mov adc stc dec in xor push mov push xchg (bad) ja sahf arpl adc movsb fisubr adc pop ret add dec (bad) adc cli es jmp push xchg jno ja aam xchg pusha inc adc cmp mov mov call add lods xchg bound adc jbe mov xor (bad) das dec lahf or push adc jbe out mov lcall sahf xor imul inc out (bad) and jb pushf popf shrl notb (bad) lds pop add adc mov adc sahf aaa xchg popf xchg adc mov lods in mov into in rep and adc shr sarl mov fisttpll push push adc insb ds popf movsl lds jne adc pop mov sub rcrl nop loopne pop int3 adc or adc jge xor repz pop sbb aam inc je xchg cmp fmulp sbb xchg mov xchg popf adc addr16 repz mov mov adc adc into out rclb add es mov push inc mov repnz enter and mov lds fwait adc cld fnop adc movb dec in adc pop (bad) subb lods adc scas fsts adc outsb cmp test call and repz rcrb das std pop pop gs jno sub stos mov and fimull pusha icebp inc test sub add jl insl jb xchg js mov cwtl fs (bad) in rcll icebp rorb mov xchg sahf pop adc aas outsb loopne xchg popa aaa xor adc test rcl test (bad) pop ss lahf rolb outsb inc xlat icebp adc dec iret sti adc int bound rcl adc inc mov adc and jle push adc inc xor inc and ret lea into leave adc in push xchg mov mov mov das mov sub push jg push jb ja dec bound das sub stos fadd xor inc add cmc push aas xor add sbb out imul jp add jnp push ret rclb mov xchg fisubr mov out rclb andb mov out push jg inc mov xchg lods jne int push ficom and adc or inc repnz mov (bad) adc sub jle in lcall ret lret test adc cmpsb sbb aad (bad) adc inc adc adc lahf jecxz rclb nop jo lcall (bad) cld cmp xchg cmp jno adc mov cwtl adc lret ret aad sbb movsb mov cmpsl adc push pop cli adc in xchg adc cmpsb cmp call pop in roll adc adc cmp or adc iret add int adc ljmp cmc lahf push adc add pop sub add sub or ja in mov push xor (bad) repnz or push and or insl xor roll movsb idiv push xor out add add sub push fsts sbb adc mov xchg lock lods xchg orb js aam pop mov jge adc mov aad dec divl sbb adc push push xor sahf leave popl lahf xor into pop pop mov fidivl cmp push xor sbb jne mov adc or aaa adc mov push mov adc cli (bad) rclb leave push pop cwtl mov movsl push sbb in adc adc mov sub mov dec mov (bad) xor cltd fwait fs ret outsb clc mov arpl loope or sbb imul pop ds push inc movsb movsl hlt cmp sub insb add stos xchg pushf std xchg repz lret insl movsl mov mov cld jb int3 cmp mov mov out in push inc mov cwtl push cmp cmp rep jp fbld cmp or add mov std shlb jecxz adc jle ss adc xchg pop adc xor push pop pop dec and je mov or mov repz mov imul dec repz adc sbb jmp mov (bad) xor sub insl cltd dec ret lock popf push pop mov or adc xor rcrl xorb xchg xor int repz icebp dec test pop add sti cmp pop adc push adc xor adc sub mov mov cmp adc icebp xchg add je ret cmp mov call test cli faddl aas repz push stos xchg sub cmp jecxz push outsb fcmovnu pop testb hlt ret idivl jg leave stos pop in cmp adc pop scas sub sbb push pushf ret out negl adc movsl dec cmp push adc push loop in into xor aam xor jle imul jnp inc adc xor sbb adc inc sbb jo fsts inc enter push nop sub jno dec dec mov and mov inc mov adc xchg fdivs cmp sub adc xchg cltd mov gs cwtl mov dec paddd out or dec or adc (bad) std xchg sbb add sar pop jb adc push inc shlb pop lea adc outsb jbe mov mov (bad) fild jne xchg adc (bad) or dec xor mov test cmp push and xor mov inc mov mov adc cmp pop fistl and hlt in int3 or adc mov subl test or sbb adc adc xor adc or xor or and jne inc pop dec ja fist dec xor rcll cmp sbb aam jmp daa outsl push jo adc stos test into outsb inc pop jo inc fdivrs pusha add add sti or leave adc js cmpsl imul rcrb jns andb sbb jecxz mov push cmp sarb adc sbb push cwtl dec sub jae sbb adc test in lret jne,pn adc fidivl inc mov pop (bad) push add fcomi popf mov mov sub and jp add inc (bad) iret push xor dec gs mov popf test mov lret adc ret es push pop push adc xabort dec jmp xchg jne hlt jno adc push mov fcmovbe sbb mov jne jnp push cmp sbb adc jle or xor cmp push mov in adc sbb adc jecxz inc (bad) fstpt adc add mov andnps adcl lods sub movsb scas jo adc or ja jnp sti rolb and test adcl out adc lea je les icebp in jge pushf fstpl leave inc push fwait pop or or add fsubs mov cmp mov mov int js popa je push mov mov or or mov adc mov cmpsb movsl fdivl or sub jge adc mov aaa test jmp out dec push add adc rcrb (bad) mov rorb jbe aad xor xchg adc ja adc push lahf cmp imul mov ljmp lods adc lods adc aad add push jmp cwtl hlt adc pop jbe mov test (bad) xchg add mov dec xor and adc pushf daa (bad) hlt mov and mov or call movsb or lods mov inc adc adc nop dec adc sti cmp adc and das mov int popf mov enter rep inc add xlat inc data16 cld ljmp mov mov and divl shll adc (bad) xor mov lcall outsb sbb mov pop hlt cld add pop jae or lret adc mov adc lock push inc xor int3 enter (bad) adc push mov adc sbb addr16 adc mov ret sub mov xor mov xchg adc adc mov xchg adc (bad) aad out fidiv out push sub adc jns mov adc rcr push sub fwait add inc (bad) (bad) jge jo jp shll ds push mov shlb push xchg ficoml inc fldt jb repnz adc push or les ficom insl and ret jbe add (bad) insb sbb xchg jb aaa out xor push repz roll sub add add ret adc add cmp fdiv mov adc imul jle nop clc dec lods or and ret mov (bad) repz pop xchg or imul jno clc stc mov jb aam or cmc push movsb mov mov cmp stos or loope daa faddl xchg jbe hlt gs or mov clc adc adc faddl adc test int push mov imul je jmp or push jle adc test cld and jae sbb stos or pop fcom scas jno sarb je sbb adc mov imull out jno or adc sahf add leave push adc dec fldenv mov sbb adc push sti cmp test adc mov inc movsl jl mov test js cmp push push (bad) fcoms inc test adc push cltd out adc mov pop aam in arpl stc stos repz cmpb xchg add xchg imul scas bnd pop sti pop xor sbb in sarb xchg and mov bound lods jo rcr xor lcall test mov add mov sbb mov mov pop mov adc nop push adc inc sar mov xor in movsb int3 rorl mov adc add sbbb xchg adc (bad) loope push inc sahf ret adc roll adc jmp (bad) adc psubusb jmp push repz mov or sub and mov call pop jno adc in (bad) push out jnp xchg inc mov inc dec push push faddl out imul cmp mov (bad) lods sbbl dec and mov cwtl je xchg (bad) xor sbb push mov mov sbb or or int3 mov lds (bad) frstor roll or xchg sti inc cmp fwait xchg mov icebp gs or dec inc ret mov pop in or lret outsb adc mov sbb xor xorb leave ficoml je aad mov shlb push mov sbb bnd push rcl stos adcl aam test adc lock and adc loope add jb xchg push sbb scas push pop inc jbe adc fcoml adc cmp (bad) adc jbe outsb aam mov mov or or (bad) daa movsl insb push jae ret test push pop pop jbe xchg test cmp or lcall mov dec xchg test ror mov cmpsl cmpsl cltd adc jne xlat repz in mov jns inc sbb mov (bad) test pop pop inc or dec adc dec jns repz mov icebp aas sbb subb mov repnz pop jge jg popa loop jno mov (bad) rorb adc or addr16 lcall es push xor adc fs jecxz dec xchg je je fisubl (bad) jno fcoms insb xor or adc xor sub mov adc cmp mov cmp xchg adc jmp mov sbb xchg std pop mov and ja inc jnp imul hlt cld cmp adc int3 fldt sbbl mov add pop repz mull adc push cmp dec pop cmc rep xchg std lods adc adc cwtl das pop rorl popf push adc mov pop ss iret push roll mov cmp add sahf movsb sbb (bad) stc mov adc cltd mov dec mov push out pop add rdmsr mov sbb pop dec mov fistl (bad) testb adc xchg jmp adc hlt add insl mov push and or scas push sbb ficom movsb xchg add imul adc mov test stos mov adc das (bad) mov in rcll nop and lret es xor jbe (bad) dec icebp or insb nop out push dec je add stos popf adc push pop dec (bad) cwtl scas adc xchg lcall push xlat sahf fbstp pop dec movsb jmp dec mov pop lea push or or das ror cmp ds adc lds push push insl fndisi(8087 or (bad) iret scas and cmpsb sbb adc inc jl pop jge dec adc gs fldt xchg lea sbb adc lock dec xor pusha sahf cld jb xchg mov mov push lcall sbb fidiv add aas popa adc dec imul xor inc mov shr adc mov aam shl pusha inc sub cmp test adc sbb ret cmp out les cld rorl std dec fnsave adcl adc inc inc in pop es mov adc hlt int adc stos outsb sub xorb inc and pop mov jle add push imul bound add push add addr16 in fwait adc push iret lods sub adc xchg mov cmpsb lds outsl pop pop adc xchg adc adc mov or sar lock nop pushf out sbb (bad) adc sub dec out lret xchg stc or aad inc adc adc jo mov lcall add enter sub dec push adc sbb mov movsl mov mov sbb add cltd (bad) iret lods sub adc scas (bad) sbb (bad) repz add lods in adc repnz and divps xor push outsb orl or sahf les sbb or adc sub xchg pop cmp js pusha xor sti (bad) adc xor daa dec jne imul movsb lcall inc dec mov into data16 adc addr16 inc dec push in cltd cmp lret enter sbb inc push jp xor pop push jle or jae pop adc pusha and cmpsb adc adc int3 ss fcomi dec adc iret mov into pop push aaa in jb int3 cmp in (bad) adc mov popf push mov jg,pn and mov repz sti push xchg mov fisubr test xor mov xchg sub inc push imul xchg pop fcoml int3 jl in inc jge and add pusha jnp lcall scas and lret dec cmp adc inc aas cmp push mov int loopne scas adc cmc sub pusha sub bound cmpsb lahf shrb cltd js lock sbb fst lret jnp adc pop repnz je or inc notb lods imul add push mov (bad) push sub stc repz mov cmp adc out rcll or sub aam cmp test int mov mov jns dec pop and (bad) fwait adc scas xor xchg mov inc wrmsr or mov adc out repz icebp and nop arpl stos cmp or out or cmc je rcrl xchg adc call adc xchg cmp xchg into or adc add je imul sahf fwait (bad) mov ror stos xorb cmc mov adc sub std in push (bad) negb pop add (bad) rep lds mov pop push lods mov imul mov xor xor xor and (bad) (bad) sbb sbb jb into pop sti adc cmpsb push popf repz inc mov xlat mov sub dec cmp fistl std add andb push mov sub lahf dec sbb mov add (bad) mov fucomi push mov stos pop fldl idivb sub bnd sbb bound (bad) and adc lock fs sti xor bound int3 mov sub adc or out adc fwait push enter adc push dec jae popf adc outsl push sub out (bad) or xor lcall adc out adc add imul push push bswap xor test pop popa add adc in push and arpl mov cmp mov xlat rcrl rclb or aaa mov pop das xor (bad) out lea pop or lods or sbb jmp fisttpll test push pop mov test mov lods mulb mov cmpsl aas and inc shr xchg outsb mov cmpsb sbb popl data16 jmp cld adc es int3 sahf push repz xchg outsl mov push imul adc mov push arpl cmp mov mov ror aad lods sub lods push pop mov lahf inc adc addr16 add xor xor xchg sbb adc mov fidivrl fldz or repz mov hlt repz jbe cmp mov adc xchg fsts jmp dec es pop and push sub sub (bad) rorb cli fldln2 mov addr16 adc jae adc rcrb int3 adc mov jl lods adc arpl call test mov xchg pop das or mov xor inc or adc xchg nop adc sahf (bad) test xchg rcrb movsb inc cltd add jbe adc mov (bad) xor dec stos pop push xchg mov inc imul xor js or leave (bad) je test cmp sub xchg repz pop mov mov push mov imul xchg and xor pop out sahf adc inc (bad) mov cmpsl xchg jnp fsubrs mov sub or les out (bad) adc jbe push adc scas push mov sub ds sbb into fildl (bad) pop xchg in nop cld or mov adc notb push adc jno sbb out mov or cmpsb ljmp adc jp movsb mov mov push cmp adc test adc or stos fist ja iret jo xchg jl adc out add jg inc loopne loope adc rcll mov fsubr mov insl sbb mov (bad) mov xor lods add add sbb stos out adc push adc xchg mov dec dec inc movntq out push or mov sbb les imul mov in out inc ds push mov xchg lock xor cmpsb mov inc and or movsb and pop add andl movsl adc sbb jne pop xor xchg icebp aas mov sarb std sub pusha push decb push sbbl int outsl imul and (bad) imul ljmp pop aad in dec adc fdivrp sbb xchg jmp adc mov in pop xor cmp loop or outsb push shrl adc sub scas push repz dec fs mov fildl lcall jecxz arpl adc push or cmp dec cmpsb add cmp adc pusha pop lods xchg mov xor add rorl adc add pop mov xchg inc xor mov outsb xchg cmpsl sub popf cmpsb out sbb aam add add adc sahf loopne mov les je xchg (bad) jbe cltd inc pop xor jns and adc les pop cmpsl or pusha mov in je or jno pop test test (bad) (bad) dec inc fwait imul ret lret xchg std outsl mov loop loopne stos bsr xor int pop ss or ficoml jae dec inc mov movsb sbb les adc jo dec inc push movsl adc stc out fnstcw or fs repz out adc addr16 adc movsl push sbb xchg mov fimul stc add xor fcoms jmp es or push mov cmp xor push inc das jo adc ja or jae dec adc shlb mov mov inc arpl cmp or faddl mov cmp xchg jae add repz adc lahf sahf lret cmpsl stos xchg mov pop dec adc data16 sub mov mov fisttpll pop mov cmp mov fisttpl jnp loop jl dec clc sub mov sbb jno scas xchg stos enter or adc mov lret ret adc or fs imul rcl sbb adc call add in out xchg or lods xor mov nop das lea dec or dec mov and or adc (bad) leave mov repnz push rorl ja repz iret aad dec ret inc and imul mov enter mov sub mov pop pushf push mov xor stos add stc mov xor in sbb lods iret fistpll adc and mov mov mov adc cld mov dec xor dec imul and pusha mov mov lcall push sbb nop or mov xchg fiaddl cli adc loopne sbb jmp sti sbb push dec adc imul and nop xchg scas fmull pop adc imul dec mov mov sub rcll lcall iret sbb hlt push push pop into roll mulb xor lcall add negl in jmp sarl sub pop xchg (bad) xchg mov and sub cltd aas (bad) xor (bad) jb paddusw popf mov inc lea rcrb movsl sub pop xchg xor inc cmpsl hlt mov xor pushf jle add aas push adc (bad) xor add jge mov mov xchg std es pushf and cmpsl stos cmc call cli mov jb leave mov das rolb mov cmp adc iret xchg ret daa mov adc push and fnstenv nop or fucomi gs dec mov cmp add add sbb (bad) mov test pushf imul repz adc jp gs repnz inc pop jl pop in mov addr16 aaa mov shr mov lock stc repnz xor jne in iret dec cmp cmp imulb bound pop add ret jb sti aas push int mov cmp pop jp adc cli (bad) lods mov cld (bad) (bad) sub outsb std into mov adc imul out add or cld fdivl adc dec jno repz aas (bad) (bad) jbe add jmp mov or pusha push adc imul adc test insb xchg sub adc push daa push or nop call inc movsb mov (bad) mov cmp je push add aas dec mov aad add cmc mov mov mov xchg lock pop sbb lds frstor les jb and in or movsb pop xchg jae out js adc out clc ds adc inc xlat (bad) lret push mov je inc add mov fistp cmpsb xchg mov lret mov (bad) sarb gs in adc stc jecxz jns adc add cmp es xlat pop in adc pop sub xor fdivl jne add adc popf out inc data16 cmp out sbb xchg (bad) repz test cmp mov or push cmp or rclb dec ds push mov movsb (bad) test lret leave or jl jecxz xchg and adcb sub pop adc lret outsb invd sbb adc fs cmp cli adc mov (bad) or int3 cltd pusha push and sub xchg neg push adc sub push ja mov inc fwait test fstl dec cmp loop vcmppd std loopne fisubr stos pushf test push js cmpsl lock les sbb mov or push outsl adc mov cltd cld sub out adc push rcr loope cmp clc add dec xor das in cmp sub sbbb pop dec pop jae mov jmp mov or movsl rclb adc jp dec inc ss cwtl jbe sarb in sub pop adc cmp divb insb pop cwtl add push adc nop fcomps add or repz xchg in adc mov adc add adc pop hlt loop mov xchg cmc adc adc jo push shufps pop sbb popa add push stos mov sub outsb dec (bad) or or mov (bad) push mov push fwait or xchg mov fsubr popw xchg int jg sbb mov fs adc (bad) lret pop adc pop jo shlb fcoml ljmp outsl adc test and addr16 cmp test or mov jo pushf adc mull mov adc xor cwtl adc cld inc adc insb iret dec push scas jne repz enter lcall inc (bad) je mov push out xchg inc xchg mov adc mov (bad) adc adc add mov adc mov in adc popa notl movsb loope and xor xor sub sahf mov sbb lcall rcll adc fcom cmc ja mov inc into fwait les pop out mov mov lea cwtl int3 or sbb adc iret and sysret add adc imul xchg push in and and jne shlb cmp adc pop (bad) sarl inc repnz adc mov pop sub adc adc roll test mov xchg fsub add (bad) loop fiadd adc dec (bad) and test xorl dec adc mov adc fwait jecxz scas std daa adc jno add push ja sub divl add fcmovnbe sub ret ficom out cmp adc gs cmp adc mul rcll aaa push addl add push sbb mov ret in or sbb stc iret adc lds repnz lret fwait jnp fsubrp or adc fistpl test lahf mov push sti mov pop push push xor dec loopne jp gs incb lock sti cmpsl in adc pusha adc (bad) mov aas sub adc sub dec adc (bad) jb push add jle pop pop addb imull or movsb sbb add repz push aaa mov out or xchg mov and popf je fidivrl adc mov mov rol cmp lea mov jp repz sbb lahf sub in arpl pop subb add shrb insl jne loop mov (bad) pop sub xor sub imul add dec cmpsb adc xor paddusb mov into adc hlt (bad) out out dec fistpl xor jmp popa and lods or pop loopne xchg jge sbb aaa mov sub fwait xchg pcmpeqb sbb adc cmp push repz loopne mov jb ja scas sbb and adc mov push sub mov sbb sub xchg jb (bad) xor cmc mov in out bound aaa (bad) mov adc in dec ljmp fildl jae xor push and test inc mov jp pop adc mov (bad) test mov cltd push lea movsb jno fmuls loopne adc or pushf mov push shr lea stc test int adc add das xchg int3 jae mov or lods nop sbb sti push add pop call and mov loop dec xor insb add sbb sub rcll pop rcr fidiv jb xor or xchg int repz mov inc (bad) (bad) mov adcb cmp xchg mov insb sahf addr16 adc sbbl mov rclb lahf add xor xchg push leave jo adc pop vcvtps2pd fucomip adc pop and adc imul mov sub inc jecxz sar pop adc mov cmpsl jge xor push add or add dec mov fsubs mov (bad) inc std or adc xor test xchg mov mov xor ret adc lret sarb adc sbb popa test rolb fidivrl xlat in cmp sbb add adc not sub push adc pop out scas add dec and mov dec adc push dec out (bad) lock jp mov ja insl add adc cmp cmc test cmp cmovo xchg stos ds xchg add xor rclb adc psllq dec or orl push mov mov adc cmp aam push mov add sbb xor sub test sbb aam mov sub stc adc push xor sbb cmp or inc and sbb popf test out movsl adc xchg pusha (bad) dec imul cmp or mov jno mov cmp dec mov psubusb shlb je daa div adc mov sub push push fcomip mov fist push dec pop adc pop std call cmp inc add sub lret adc jle (bad) jb fmul mov in pop pop xor xor sub in push push cmp std out or sbb mov mov test cmpsl xlat fwait sub cltd mov add pop mov in (bad) jno adc push and out cld adc inc sbb add adc hlt mov pusha repz push cmpb mov adc rcl adc cmp xchg loope cwtl xor jnp xlat xchg jl pop dec jae mov data16 cmp cmpsl lret movsl ljmp sub daa dec or and out sbb adc lcall xchg sbb dec or mov xchg out fcmovb lea sbb pop mov movsb pop pusha add lods mov aaa jge es xchg jg or sbb fimull or fld cltd push xor mov imull mov and xchg sub test pop push insb push lcall iret and push fbld repnz movsb mov inc or or inc mov lss xchg out adc inc js aam fcoms mov ds je in stos adc cli popa adc mov mov dec addr16 aaa xor out push adc roll test mov jno push adc fbld icebp add dec xchg loopne inc or cld (bad) nop roll test enter push dec pop add cwtl je pop cmp pop in adc fdiv inc call and cmp adc cmp popa inc sbb outsl lock (bad) hlt imul lahf push adc jp xor int3 jnp jne ret shr stos sahf fmuls adc repz addb push in mov xchg mov std xlat jmp adc adc mov sti adc push mov (bad) adc mov or xchg jge test rcrb sbb sub lahf inc insb xchg fwait adc jae adc xor sub (bad) fstps mov pop rcll popa cs ds adcb adc negb xchg mov lret add lret xchg and dec sti adc pop jmp sub adc inc adc cltd jnp iret or pop mov xchg push (bad) outsb sbb mov and push sbb add outsb loop xchg mov add sub lcall push or lock mov xor (bad) mov icebp xchg ja (bad) aaa adc lahf int mov xor movb push adc inc in jmp ds scas dec jmp aas std scas shll xor movsb xor lds inc fldl2e adc sbb dec ja sub popa mov jae jmp movsb in (bad) imul rcl movb pop add xchg in iret sbb cmpsb xor loopne xor prefetchw std cmp mov xor mov add xchg adc cmp lea jb cmp nop jle adc (bad) jnp sahf xchg or call orb std mov fsts sbb dec aam sbb xor loope,pn xchg sbb cmp sub mov fiaddl lahf jmp rep fbld ret push rcl xor push fldt inc lods mov sbbl mov pop mov sbb das scas cmp mov add leave mov push ror mov jge daa in rep sahf sub lods push mov mov dec mov pop add in mov push ret mov push fs lcall pop xchg cmpsl lods jbe,pt outsl int push jne xchg mov fist aaa cmp add adc sbb sbb mov clc fwait adc cld and in add mov pusha adc xor jns push test sbb in push lods clc adc mov mov in lret data16 cmp ror inc andb xlat adc inc repz andl out xor mov xchg mov (bad) xchg mov pop xor mov adc hlt sub fistl xchg insb mov and jle adc push mov mov jnp out mov inc in loope push xlat cmc adc mov and mov call mov adc iret adc sub inc push jnp repz cmpsl cmpsb adc and rcll stos imul mov adc or lret sti enter das lock sbb ret jo pushf stc add call lea xchg mov clc adc xchg jmp dec jne int (bad) scas jns data16 mov shll shr sub mov adc (bad) push lods xchg and push insl lahf sbb call mov dec int3 out adc (bad) divl aad sbb mov addl into pop mov movsl and test cmpsl andl add xlat dec jns sbb ret adc lods repz push nop adc imul stos dec mov mov adc cltd (bad) sbb sub outsl add loopne adc cmp add pushf xor outsb cmp push xchg xor lods sub ds call arpl in xchg cld adc adc inc outsb out (bad) xor adc out lret int sub xchg mov jne or cmp loope mov pop inc (bad) adc push cmp daa pop adc pop std xchg popf mov push adc rcll sbb outsb push out mov xchg adc fcmovbe dec pop or lret adc mov inc adc jnp test mov fwait cmp pop inc pop roll gs push mov adc adc cmp xor lret mov sub (bad) mov fmull push jp cmp jmp adc dec jne adc jmp push adc push es fdivrs xchg aam add stos adc or jnp cmp mov test inc xchg pusha nop ficom mov or imul inc sub dec sahf xlat and cmpps mov sti pop das mov adc popa or adc test adc push cld lock dec daa cli dec sbb nop addr16 or xchg adc mov adc imul xchg (bad) fwait mov pop adcb and popa notb in ds xor sbb mov or pop sbb (bad) sub jns mov sub adc mov pop xorl (bad) jno test sbb insb fwait (bad) xchg mov std inc (bad) repz icebp sbb aas add cmp adc stos movsb adc inc dec lods cmp arpl adc addr16 les enter frstor adc mov lcall xor aad sub push adc ja test xor aad xchg and inc adc mov movsbl fnstcw add int lret sbb cmp mov fs adc hlt inc or xchg pop and subb fbstp cmp mov stos icebp adc iret fldenv adc sbb jmp insb sbb pop test dec xor mov mov adc (bad) bound scas lcall scas rorb cmc pop ljmp lock sahf fs mov dec shrb pushf xor dec dec adc sbb outsb jge jg std push arpl xchg jmp adc ljmp push popa (bad) sarb and mov mov sbbl pop (bad) or lret sub mov jecxz dec inc iret and sbb or jle pop adc div data16 test lret jmp xor mov push mov sbb mov sti cmpb iret push (bad) lea (bad) enter mov sti bound jle inc mov mov adc loopne adc rclb faddl int3 xor sbb inc dec aaa mov xor int push scas adc rclb inc xchg jl test sbb pop imul pop cmc mov out cmp lea mov stos xor fwait sub fsubl icebp jecxz sbb inc adc push ja cmp sysret (bad) xor mov xor jbe xchg (bad) loopne ja es adc xor add adc mov pslld mov xor mov in sahf pop movb mov (bad) jle adc (bad) xchg mov jo rolb push daa test popa and movsb iret adc in mov arpl adc (bad) popl lea leave cmpsb push cmp loope int notb iret jbe and add jge mov ret fs adc adc xorb pop pusha mov adc cmp sbb es xchg sub fnstenv mov push aad cld cwtl les sub push repz sbb (bad) test cltd xchg push call jmp and movsb cmp lods sub mov stos push mov sbb adc mov jge lcall adc (bad) sbb xchg and jne push add sub fdivs mov sbb xor (bad) inc add dec push fldt mov push cmp sbb repz add es test pushf xor add lahf sub mov (bad) add imul fmulp adc add add (bad) mov jge push enter mov rorb ficom lods outsl lea adc ljmp adc jecxz rcll clc xchg push inc dec mov sti imul or pop adc aad xchg out in arpl aas sub adc inc xor stc insb sub jae enter in jecxz jmp cmpsl outsb push xor popa mov or nop (bad) jmp lahf cmp add cli in in js outsb push mov lcall pushf nop pop repnz test gs jmp sbb xchg jge or sarl adc sarb dec pop xlat mov adc test and dec mov inc push shrl adc stos cmpsb lock ret sbb pushf repz jns mov cmc lods cmpsb cmp xlat pushf movsl mov mov and pushl pop std mov aaa fnop divl lahf dec or jecxz mov pop lock loope inc leave push sbb or hlt jmp ljmp sub aas and adc lock or std sbb sbb fimull adcl dec adc xchg pushf cli adc fdivp adc lock adc es test fmuls fstpl pop adc test fist jns push lock xor push fs push or xor inc leave lock (bad) xor (bad) ljmp dec xor mov adc es sbb sub scas and adc cmp sub jns scas and scas mov outsb adc fimull add aad jns aaa mov sbb inc or and rcll adc movsl insl adc inc inc push dec adc adc inc or fdivrs inc hlt aad popf adc call push cmp in xlat push cmpsb add adc inc lods mov adc gs jg sub sbb cmp add enter hlt inc mov inc adc pop xor cmp jno daa dec cmp repnz jo inc lds leave mov loope sub sub nop fimull mov cmpsb dec mov cli lds jno rclb mov jecxz pusha lahf xchg mov adc insl repz fcoms mov adc xor adc repz arpl xchg call cmpsb sbb cmp jecxz les jns add and lret out fs mulb adc inc mov loopne daa mov mov add xor mov add nop incl es dec jno mov lock jecxz push adc (bad) mov push jb adc into pop out xor adc dec push pop sbb (bad) jge jbe cs xchg out mov dec adc rdmsr cli (bad) icebp or or jecxz dec cmp jns add movsb (bad) push jle adc mov aas ret fist xor pop imul push push jo popf push inc sub pop or xor dec fildl xlat js stos mov push push ret loopne in scas dec hlt dec jb and sub adc mov icebp pop cmpsb mov pop (bad) sbb adcl roll xor ret ret lret jbe fsts popf adc insb dec stc nop and lahf or lea out std pusha dec bound xchg pop xchg pop iret cmp adc (bad) cmc push imul adc xor sub cltd popa inc lock push and push adcb adc and in push mov pop mov das cwtl xchg idiv dec pop (bad) lock inc pop ficom gs mov xchg or mov orl mov adc sub mov cmp xor jo out adc or and push jg mov cmpsb shrl pop nop fnop sub (bad) int jno add and pop mov jmp sahf (bad) adc cmp test xchg repz icebp pusha jl dec pop mov sahf shrl jg xchg lods or xor cmpsl jbe push (bad) lods jno lds and adc xor lahf stos and or dec aaa adc repnz adc or add test test cltd inc or (bad) or sbb outsl push or xchg gs repz dec lods jl or or cmp popf inc xchg add arpl fwait sbb jp pop (bad) ds (bad) std sub cld mov or mov inc sub push dec jge push iret xor imul clc rcrl mov xor rcll cltd cld ss push jne in or add adc or lcall jmp fiaddl add lods push jno xchg out adc jg rcll hlt adc (bad) ja stos adc shrd adc cld push cmpsl faddp (bad) adc xchg jbe lahf fsubrs pop cmp test adc pop dec jbe insl pop or adc jmp sahf adc ss int3 je pop out bound adc out sbb imul ja ret dec mov outsl xchg xor pop dec popa (bad) js mov lods or mov and jge fcom nop rclb mov xlat mov repz call push lea mov inc test (bad) into movb adc dec lock iret jmp adc test ljmp sub into je movsl fcoml add data16 inc out arpl repnz ror lcall sub adc (bad) adc pop adc mov cmp out pop mov jno jl fiadd xor int3 sbb aam inc adc mov xchg pop adc push push adc test das add pop mov mov jbe adc sbb sbb lods imulb aam adc out push gs adc (bad) das (bad) push or in repz xchg (bad) dec sub adc xor cli das xchg adc xchg mov sbb enter add mov sbb xchg arpl jne sbb xchg adc mov pop inc dec xorl push fcoml aam xor int3 mov arpl lods loop gs adc mov cs push sbb dec sahf xchg add (bad) push xor outsb adc jmp nop (bad) loope or jbe mov sbb int sbb xchg adc leave mov stos pop dec mov adcb jbe add iret xchg or or (bad) lods ret lcall aas push sub aaa (bad) sub rolb adc mov ljmp push rcr sbb out xor (bad) mov sub adc (bad) notb dec rcl enter pop jb xchg add arpl sub sbb xchg lcall inc fistpll or lea or lahf divb push dec adc pop repz (bad) sti xchg jp or adc (bad) dec test jecxz adc mov hlt push cmp int or adc mov mov ss out jbe adc jg out mov nop dec push dec push sbb push mov idivl pop xor and lock sub push (bad) add push movsl adc repnz jg push pop cmp les pop data16 adc std fisttp sarb nop jle push adc js inc mov adc das std scas hlt jnp add dec add aad mov in into dec mov (bad) repz jae mov ret sbb ljmp dec adc jge fildl adc xor push out imul or or les inc mov dec in hlt adc stos cmp cmpsl out and add push (bad) pop (bad) lock into loopne or jb ret jp orb jle adc xor fstl popa adc pop cltd add cmp cli or pop xchg mov adc les shrb cmpsb mov xchg sub or mov adc sbb insl (bad) mov in xor mov jns cld int mov scas mov jmp cmp or popl iret cmp in inc addr16 es adc xor test pushf enter daa xchg or mov outsb sub and jns clc fadds add out add dec out xor xchg mov das lahf dec inc nop les loop adc pop lea push jns xor sub dec gs rcll iret repnz inc cmp call and add add fdivrs test xor jl cmp adc pop in dec sahf into out inc shll sub sbb dec dec sbb ja inc adc (bad) in adc cmpsb adc pop call cmp ljmp lahf arpl pop notl in sahf pop inc movsb dec adc fisubl cmp jmp loop movzbl add fldcw rorb adc movsw (bad) stos outsb push scas adc mov movsb jmp lock mov xchg jle xor dec jle pop mov inc gs ljmp outsb or adc mov adc adc mov xor in les add adc inc movsl jo dec (bad) mov push popa dec leave mov aas int insl arpl and push cmp in push fisttp or sub xchg and cmp frstor inc push jge inc or mov jl sbb mov ret aaa repz jecxz test adc push sbb aam sub dec mov mov sub or or mov lret out adc and decb or xchg daa add cmc das mov xchg leave jge adc cmp stos movsb sbb fcoms adc xlat or add push and mov adc gs shl (bad) add cmp (bad) (bad) divb (bad) out stc lcall mov xor (bad) inc sbb movsl push lods adc xchg orl and fist push out iret jb mov cmc adc out and jb das clc int3 ret adc (bad) lea adc ljmp xor fldenv lods in adc jecxz mov adc in jns loope adc test mov jbe xchg scas (bad) ss lret add jns pop dec imul cmp adc out imul adc adc rcll and sub out or test add xchg aaa mov adc pop clc or jle adc jmp dec repz out mov rcll dec mov adc mov lods adc pusha bound roll cmpl pop iret aaa mov sub sahf add xchg cmp cmc jl xchg xor xor jno scas loope adc or xchg insl shr fmull push shrb repz lret inc adc xchg pop dec out loop and shr ss adc xor scas nop nop push sbb negl sbb cmp inc scas ret orl movl pop mov jp ljmp mov xor xchg sbb js (bad) mov xchg test test in lods jb push mov xchg xchg adc lahf push movsb cmp adc lds loop jae adc (bad) in adc ret mov mov std movsb dec rolb cmp add rcrl rolb pop add pop sarl sbb ja push in mov shr pusha ljmp mov jge (bad) mov push add cwtl jne adc jle adc movsb icebp loop enter xor ja cwtl push mov mov iret arpl adc add in or adc sbb xor fldenv inc sbb adc sahf push add lock and or out pop (bad) xor outsl cmovp negl xor sub ret xor or inc adc inc aas mov arpl stos movsb mov dec adc mov xchg mov ret jecxz push cmpsb jmp sub jb adc mov push xchg les std sbb xchg jae cmc inc pop jp adc mov cld add in xlat out int3 jp push adc mov xchg adc test push adc daa incl inc out popf xor lret loope sysenter sub roll sbb mov dec shl adc adc cmp push adc sahf mov or or jne mov fisub insl xchg repz repz movsb roll adc movsl (bad) fiaddl jmp stc jle adc mov dec test pop sbb mov xor sbb mov dec pop repz insl add icebp push cld dec adc hlt fcmovb outsl xchg inc adc loopne test mov jle adc xor das adc (bad) mov jb cmp sbb shr (bad) nop adc outsb adc or pop mov pushf lret or xchg out int3 sub adc das dec ja (bad) or push pop jmp ror cmc pop cmp sub mov insl imul push jbe add jecxz dec adc scas jge push add adc loop adc int3 test xchg aas call ss je scas jno int3 or mov xchg mov jnp sbb sub mov (bad) mov mov pop pop repnz mov pop out fldl rclb xor lds nop push jp and xchg inc or add popf push movsl pop adc int cmp jo ja rolb pop adc test lock jo mov mov ss jno jle sbb add adc data16 arpl in out or jne adc stos dec mov or or loopne addr16 or adc pop adc adc mov aam test xor pop adc in sbb fwait adc gs sub push in mov data16 inc adc es (bad) push and jne sub cmp test lcall or cli (bad) sub mov ss xor stos adc xchg lods jnp dec cli jmp lea adc loope mov adc or cmp enter dec push sub adc lock jl scas or pop out rcrb lcall adc sub xchg insl int3 and inc push ljmp test pushf out inc adc cmp (bad) xor push cmpsb adc lea and arpl mov cmp add mov adc push jge out xchg (bad) int repnz ja enter push (bad) (bad) adc fdivl adc mov push cmpsl and sub ds and adc or mov mov push xor mov movsl adc push aaa cli arpl out dec push lock rolb nop adc sbb test leave add (bad) repz jecxz divb mov outsb iret stos popf dec adc lods adc cmp mov xor insb or inc push adc cmp dec cmp aad xor hlt jge jne xor popf or jl pop dec inc add sbb lods sti cmp and sbb or mov icebp inc push xchg dec insb ja lret xor cmpsb and lds mov push imul mov xor test xor pushf adc sbbl adc pop dec out xor insb fidivl test sar mov movsb inc xchg mov stos mov rorb and inc xchg mov int repnz daa outsb push push or fs jle mov in push mov push pop push aas adc int3 adc dec cmpsl sub out xchg push add icebp and push repz (bad) enter jp in xor pop xlat sbb push outsb test lds js adc lret (bad) popa loop sbb inc adc rolb popa xor lock jnp aaa or (bad) pop or ljmp arpl jnp cltd push stos adc push ljmp sub out xchg bound adc sub outsl adc push xor in add cmp fwait leavew and xchg adc dec mov aam aad cmp add adc lahf dec pop rcrl ss or add adc divb loopne les mov fiadd aaa push adc or cmp int pop scas in enter and xlat cltd daa adc call test push adc mov fcmovnu add fbstp inc dec xchg pop lea dec dec adc xchg roll mov cmp sub xchg mov (bad) or (bad) std add subl xchg gs mov mov sub mov push mov adc xchg mov mov fisubrl sahf sbb cmp cmc xchg aam push xor stos adc in ret mov inc adc out jns fdivl push les cli bnd movsb pop data16 adc es loope lcall add sbb mov pop insl adc cmp adc or (bad) xlat loope iret mov aaa sub xor inc adc out xchg ss mov adc sub xor jns je mov daa sti mov push or addr16 dec repnz xchg aad movsl cmp sbb mov in adc pop fwait adc add ss (bad) jle sub jne in aad adc adc lret aaa push adc scas sub adc mov or xor push repz sub inc push or popf bound pop pop xchg dec push fwait xchg add jle into add lods pop fisttpl xor dec pop dec icebp cmp out xchg jp hlt int mov mov push add imul and pop adc xchg add scas add jge add xor push fsincos xor in cmc jns pop adc in xchg inc mov ret jne xchg xchg stos cmp stc adc push jb mov adc cmp cmp pop cmp je adc sbb (bad) adc add dec or adc adc mov xchg test imul push popa mul jno sbb mov xor shlb adc mov jg pop adc decl out xor and sbb imul mov pop dec or out mov mov fidivr outsl aad adc adc jne dec (bad) insb lock xor add les pop negl mov push cwtl lods iret adc (bad) mov adc ret push adc mov arpl popa or push sub adc sub mov cltd push sbb arpl jg shrl jae jo or adc push sahf in add xor jbe adc xchg fistl mov jae inc mov sbb icebp sub testl lahf mov js sahf rcl movsl scas dec das xchg mov ljmp cmpsl inc lahf (bad) adc rcrb push xor leave xchg push push cwtl cmp fdiv adc pop push mov cmpsl add and dec adc fwait jnp push or pop cmp mov repnz addr16 add add cmp fwait popa clc jno pop fadds jmp xchg loope icebp adc lods fidivl fsubrs iret mov in mov sbb and adc lret rcrl mov adc fsubs ret pop jmp outsb (bad) jb ret adc sub call shr mov adc test scas out jp mov lds iret (bad) mov ljmp xchg mov add xor scas (bad) dec jg adc mov int3 repnz or cmpsl xchg inc jle adc fcomps pusha sub fnstcw dec push adc adc adc mov adc jnp push mov mov inc push das push les adc fdivr fsubrl cmp mov or (bad) fucomip inc fisttpl (bad) out nop rolb mov loopne adc and adc scas incb add outsl adc pop insb movsb xor ds imul (bad) xchg cli cld or pop dec jnp int imul adc adcl fnstcw std add lahf adc stc (bad) neg lea (bad) scas insl ret xor out mov cmp insb (bad) fistl sub imull or cld shrb ficompl push inc mov sub jae jecxz sbb mov cwtl repz arpl int adc cmp adc inc push ja xor dec push mov sub and jle and xchg xchg pop mov repz adc hlt lcall dec fimul and and imul es or (bad) xor arpl lods and rsm and imul iret dec pop cs aas (bad) popa adcl mov fwait mov cmovle mov xlat adc int sbb and mov mov mov jb push adc sti inc push rcl out adc cmp dec mov mov loop push xchg jmp adc lret add mov inc or dec add or pushf xchg xor push push aam add xchg mov fist xor mov inc cmp xor les add jecxz enter shll or cld adc icebp lret mov repz cli lahf test in sbb ja mov leave loop sbb push mull jns (bad) xlat sbb mov cmpsl outsb bound adc cmp push jmp iret push xor test subl adc jns mov adc std sbb adc adc aad dec sbb dec jge mov push pop lret fwait adc (bad) xor out push push adc cmp adc andb xor jge pop inc (bad) push add gs fwait cmp dec ret ss ror pop jb addr16 or bnd adc (bad) dec mov xchg adc inc (bad) mov xchg or jg add xor dec aad (bad) popa in cmp dec xor ja or adc in push inc loope mov dec push dec xchg cltd addr16 mov or and imul insl repnz mov cmp dec add mov jge jb je push jnp pusha lods pop cwtl push push push mov sub incb cmp add mov jp inc scas aad fs adc push insb push (bad) add repz push push add jb stos jmp sbb insl pop test call stos or push mov mov in ljmp adc (bad) je jmp adc dec mov sub and add adc scas cwtl (bad) adc sarl inc sbb dec out mov push cmpsb pushf scas adc or push jb dec fwait dec mov das jl js shrb cmp (bad) pop inc jne or daa nopl lods cmc jecxz (bad) sbb and shrb dec mov int je adc arpl (bad) adc jle scas push cmp imulb aad outsl fucomp push mov mov fcompl (bad) mov adc jecxz loopne push mov adc test xchg insb pop cmp add jnp loope jg js iret sahf mov pop push add adc jge fist xor sub stos loopne xchg popa jns push arpl mov pop xchg dec sbb out adc push rolb or or add push cmp pushf mov leave mov lods adc ja and into xchg outsb daa pop dec push pop dec (bad) dec mov push sbb xor xchg add push or mov test call xchg nop jne and pop cmp xlat shrb in cwtl or popa cmpsb fs adc mov rep xor xchg or mov dec int3 push sbb lcall adc cltd (bad) outsl adc ja xchg ss insb fsts mov (bad) hlt sub adc into jle fwait int3 test sbb sbb pop push notl push int3 dec enter ja add push (bad) and shll out repnz ret adc (bad) lret xor in mov pop inc cmp (bad) mov rcrb test in or aaa adc adc cwtl lret pop dec mov adc push xor inc movsl mov std push push mov add xchg push jno adc sub push mov adc mov clc les add adc add mov adc int divb adc sbb scas adc arpl loope in int3 jmp pop or push push dec sbb pop adc shlb sub shlb lods xor stos push imul adc mov adc movsb aad out loop in adc xor push adc mul std xchg cmp adc test add add or pop pop and mov xlat mov sbb lret fsubrl shr jnp add clc adc inc arpl pop and pop dec aad ret nop enter stc bnd add jmp push adc pop mov ret mov into xor ja xor jae mov aam mulb out adc push and mov daa jne add pop int (bad) aas push xchg xor mov or pop mov int3 out lcall pop push (bad) repz pushf inc xor (bad) adc (bad) jmp push in push lock ljmp add dec adc adc rclb lahf shl out repz adc mov je enter sub mov mov sbb xchg adc add fwait xor lcall inc cmp rorb sti xchg pop out adc fisttpl xchg cmpsl iret adc aas rorl das aad loope jp xor add push gs cs adc es or adc lret jl scas js xor inc xchg mov lods dec xorl mov jl jns add scas dec mov pop enter fimull adc mov cltd movsb adc pop negl xchg or pop fiaddl pop adc jl lds std sbb data16 cmp adc jnp jno mov mov imul outsl scas ljmp (bad) ja pop mov int nop ret fdiv fisub cmp pop gs jle mov es mov into mov repz cmpsl sub ljmp aaa mov (bad) and adc cmp adc lea mov gs cmp pop pop cli adc mov leave cmpsl jns fmuls mov nop mov or adc sub lods scas popa lock jo dec sbb and hlt pop sub cmc sbb mov xor push popf sub pop nop (bad) call pop ret push sbb jecxz adc mov fcoms in in pusha rorb xchg adc push (bad) fidiv nop repz in loop adc dec lds mov out mov iret push enter js push nop mov jl flds lea push lret adc cld cmpl add mov add cmc decb fnstenv mov jp ret scas jge adc rcll dec repz pop rcl lods clc sub fdivrl jle out fiaddl jne and pop push mov dec test pusha mov push lock je in int mov sbb adc fstps sbb xlat fildll mov aas dec dec mov mov hlt addl jnp lds mov xor cmp in aad pop ret xor push push xchg stos jge adc outsb pop jle dec xor rol inc dec xchg jo adc inc test push pop pcmpeqd mov ret jnp mov pop aaa pushf push (bad) adc jl mov out fbld dec or and mov sbb pusha adc aaa (bad) adc inc jo mov out loope (bad) ror mov mov sub adc cltd adc dec or inc dec add jns push adc cmp rcrl lock data16 adc jnp jbe arpl lock jl std or outsb (bad) mov dec add popa repz cmp pop pushf push adc roll lods icebp insl js cltd mov negl fs jmp adc sbbl push fstl jge ret test jo xchg adc stos movsl stc sahf push fldt mov leave dec hlt jge adc enter gs hlt add pop adc sbb and xlat add imul outsb inc hlt fdivr scas mov mov (bad) cmc dec addr16 nop sar fist pop mov imul and adc (bad) pop mov sbb mov out in int3 mov icebp cmp dec adc in fmuls arpl mov (bad) pop lea adc pop sbb jge adc or fadds xor mov jp push jle sub pop mov push mov mov or (bad) int sahf mov adc scas das rcll mov pop xchg loop xor adc pop int mov mov dec mov cmpsb popa scas pusha dec push or pushf sbb subb es mov and lahf in push adc fwait cmpsb in xchg push cli inc sub mov adc xchg jo clc stos inc push xchg fwait push jae es adc out mov fidivl mov sti xchg leave mov push fadds xlat std mov mov int3 and addr16 sbb add jg sub xlat fstl in pushf shlb in cmp mov stos push adcb fldt enter mov mov clc add sub lahf and stc jecxz pop xor in cmp leave pop mov inc add adc xlat adc ja fist je fs adc lcall xlat adc or out pop push xchg sbb push loopne xor pop cmp dec or cmp int3 adc (bad) rol dec sahf lcall popa out mov and dec and hlt fiaddl gs daa and ljmp (bad) adc pop adc add sub adc sbb outsb hlt aam add cmp rcr sarl and sbb mov jnp xor daa sahf adc push or jmp (bad) jle les (bad) sbb jp adc nop xlat out sti xchg insb xchg fcmovnb (bad) adc iret enter adc in pushf xor adc add aad out test adc pop aaa (bad) jg popa pop jne xchg fs add addr16 mov sub adc loopne scas adc sub (bad) lret sub ficomp xchg (bad) adc mov dec add jno xlat loop repnz roll jbe nop mov sub xlat pop adc adc repz adc sub adc dec inc push or ljmp dec ss repz imul pop xor mov add mov add jnp adc inc xor sub mov cmp mov xchg xchg jb and cwtl int3 add hlt pop ljmp dec repz pop lret das xor stos call out repnz fbld adc inc xor (bad) outsb mov adc jmp mov cli imul push push xchg jg sub push ss lods adc mov dec pop iret cmp adc out imul or popa push add xor insb push add or adc push aas xchg cmp and xchg in adc inc adc pop addr16 pslld data16 loopne push loope mov pop mov xchg mov push push pop pushf inc adc and pushf dec jge adc mov cmp outsl mov mov xchg das or cmp push push lret push lods xor fdivs sahf jle add paddusw adc shrb rol mov cmpsb aaa mov add jne mov call push mov pop dec sahf or cmp bswap jmp imul adc (bad) imul test movsb mov (bad) sbb in cmp pop adc mov test daa mov adc bnd jecxz mov ret arpl lods add sbb sub cmp nop addr16 test adc push dec adc rol gs test pop ljmp xor and sub lret push jp and sbb adc mov sub loopne or es flds mov sub cmpsb shufps test mov lock (bad) test mov adc shll aaa setne aam push xchg out rcll mov mov cmp jl mov mov ret adc popa dec insl je cltd in lds jnp mov or and dec addr16 in sub adc dec pusha inc flds testb or xor dec fbstp dec add push test pop dec add repz sbb cmp mov add adc jbe mov movsl movsb add clc repz mov sub js pop mov and dec out pop mov adc sbb out es fsub adc into dec xchg jmp pop xor scas loop call (bad) mov mov cmpl cmp (bad) adc ja fstpl daa mov xor add jg cmc xor out sahf mov decb dec in int3 hlt adc pop jge mov insl adc test (bad) pusha clc adc mov lods cld rorb cmp add dec repz icebp inc stos cmpsl lock jmp cs push adc in sbb cmc add lea mov mov rorl insl dec sarb cltd leave ss popa and mov mov fcoml fisttpl jle xor outsl repz lods arpl pop rcrl sbb sbb out xor sub pushf push pop add xchg test and std or and mov adc fyl2xp1 jnp adc jmp dec push (bad) mov or adc push aad lcall mov jbe enter mov or fcomi sub mov mov sti jge xchg pop ja adc xlat pop inc (bad) repz repz mov push pushf or lock outsb int3 mov add dec sbb dec js mov mov (bad) stc shrd test lcall jne (bad) or out mov (bad) mov in inc mov xor int lahf stos push clc sub fcmovne cmp or mov jne paddsb jb scas add adc cmp push xchg adc jle mov ljmp lahf pop mov mov add pop rolb jne pop mov mov sahf in pop ja out cwtl sub adc ror mov cli fildll inc (bad) or push rorl rdpmc mov lods pop mov pop push push mov xor out push mov push adc or gs inc je rcll outsl repz xor jge out lret push mov xchg push imul add mov sub xchg sbb sbb adc push (bad) adc subl jno idivl push adc ret (bad) push cmpsl in jle xor push xor mov sbb mov jns mov xor lods add mov xchg ret xchg shlb ficoml in jns adc ds mov push adc into cmp sahf push lretw addr16 dec mov test xchg jmp fnsave dec or adc pop sbb in shlb mov in add adc xchg stc mov adc xchg xlat mov idivb (bad) jmp and popa les jl mov (bad) lahf dec dec (bad) jne dec mov jle pusha dec loopne adc js or jmp lock int3 and adc and push sbb int sbb inc stos pop lcall dec jo sbb adc jne jno adc fldcw test sbb stos jp ds cmp lods and lret or adc cmp push dec aam push sub jae or adc testb mov mov jne int adc popa mov adc into push mov xorb add adc push icebp rclb mov (bad) call rsqrtps pusha sbb adc jne cmp mov mov fnop add push or loope test int hlt ret push fs xor pop xchg adc mov in add das js adc addr16 fwait lods xchg mov or (bad) sub fisttpll lret loopne cmp or in push xchg adc dec (bad) xrelease in or repz icebp (bad) jmp popa sub or mov mov fwait jl adc sbb int fstpt int adc and sbb pop dec mov mov push repz arpl push cmpsb scas insl jno aad adc mov stos adc add and rol jecxz adc adc pop das push (bad) adc inc xor fcompl adc sub dec sub mov jle cmp popf sub push xor mov jae popa adc fisub adc cmpsl adc mov frstor and push adc enter repz fwait or mov inc adc and adc pop or scas pop popf cwtl jae or mov sub loopne mov mov nop je nop sbb push jo daa jecxz xchg es pop add mov cwtl inc mov sub adc xor xor sbb xrelease int add fldcw dec jno jmp or pushf add jae stos sbb ljmp pusha mov or test mov mov fsubr pop pushw repz fwait fs and hlt pop inc mov sti mov ja sbb test out mov jl or xchg cltd iret xor lcall sbb pushf adc idivl push mov jo add adc hlt or xor mov mov mov cmp sti dec or fxch out jge sarb adc mov arpl (bad) adc ret (bad) aas xchg push dec cmp mov xlat (bad) icebp adcl or pop adc (bad) inc adc jecxz scas fwait aaa loope adc cld popf stos add adc adc dec adc mov dec mov mov inc dec idivb adc mov dec clc shrb jne xor mov dec adc add cmpsb jecxz data16 sbb loope adc pop cmp sub addl push or or adc xchg mov push (bad) shll repz and push inc add ror xor stc into push pop imul ja xor push dec sahf jl add inc push lods (bad) aad in in cwtl cmpsl mov sti pop add pop in pop inc xlat adc outsl mov nop mov insb sub push add and cmp xor mov add xor add stos push push xchg mov daa push icebp push push xor jmp outsl or out mov dec and sarb dec sbb ljmp cmp and mov xor es (bad) pop lahf mov rolb movsl addl xchg jno test idivb push adc repnz out movsl adc lahf insb lret ja adc mov lods sub adc sub ljmp pop je add inc or adc adc or pushf (bad) adc xchg aaa mov add mov lahf adc lock sbb adc dec mov xor imul push pop pop repz sub mov lea in shll add call adc push adc fnsave lret jl (bad) cmp dec adc add (bad) jno sarl push test dec jg ficompl push push and push adc mov adc lahf (bad) xor nop imulb jg push or daa jl test dec inc lods push adc pop adc out jnp adc repnz push push mov adc or and adc push cmp aas inc xor xlat or inc insb pop and scas jge fnstsw mov add std fwait xor mov add sar (bad) sahf pop pop xchg adc dec subl pushl aaa out mov sahf adc xchg bound aas cld mov adc jbe add jp ljmp and icebp mov mov sbb pop mov test (bad) jb cld scas adc fstl adc out call (bad) nop loope xlat lods adc les or std inc out jb adc lea sub mov and movsb cmp adc in out sub sub push in add fstl shll sub adc and mov adc mov mov mov lds xor or dec jno popa ljmp nop jo adc and in xchg (bad) movsb push adc ret jge xor mov adc lret adc pop (bad) xor scas or test out push lds test mov mov adc or xor add sub inc push es dec mov mov iret out jg add call cmp mov and xor sbb adc addr16 pop adc daa cmpl mov popf dec into cmp out xorb enter nop xchg dec pushf mov jnp adc out ret xchg mov shr cmp sub xchg addr16 mov push repz das in outsb sub jbe xchg sbb xor insb dec (bad) jo loop mov mov scas in ret adc (bad) loop loope mov jge and stc sti je imul fisttp stos ds out sarb imul push imul das or mov add insb cmp mov pop int aaa pusha aam push jns sub repnz adc test dec nop bound and xchg or leave aad je and adc xchg rclb dec fs cmp out adc mov (bad) mov lods mov insl sarl fdivl scas push imul push jmp cmpsl jecxz cmp adc popf fiadd inc mov push rcll mov add popa and pop mov push outsl jmp pop pop cmp mov fdivl bound mov adc (bad) mov dec (bad) aas and cmp mov and mov sub hlt sbbb adc or out aam adc popa pop (bad) stos fstl (bad) cli xor mov cmpsl xlat add scas jae notl dec insl or inc adc repz cmp push cld mov das aad ret lret dec adc adc fwait adc (bad) mov mov aaa icebp pop adc lods insb notl aad and repz cli add xor pusha mov jns mov jl rorl inc adc sbb aam mov xor cmp add pop jp pop (bad) sub fsubr push xor or fistpl add mov rorl xchg jecxz sbb sahf push sub and mov sub outsl cltd xchg dec out pop pop lods adc xchg fisttpl leave adc cmp push insb adc pop mov inc mov imul jb xor lea in fs or mov pop cli xchg adc ljmp adc arpl adc xchg das push mov lret lods sbb jmp mov mov mov mov add leave repz int3 fsubrl ss push sbb aaa ds rcrb and movsl or imul rep xlat je dec adc lods test adc dec adc addr16 cmp adc sbb ret test adc push loope xchg xchg mov cmp mov gs movsl and insb xor xchg pop jno jecxz adc clc pop mov add xchg push fisubr inc xchg mov lds mov adc mov in aam pop add lret push add sub hlt je repz lahf stos xor fwait jle cmp jns and addr16 push jno into cs imul mov dec int3 jmp adc adc cld stc push dec push xlat pop xchg and add out data16 adc xor dec std aad xchg adc mov adc pusha fucom fidivl movsb iret imul flds pop mov les adc lret fistp popf inc add std cmc sub add enter (bad) jge lock sub or mov aad xor xchg xchg xchg inc arpl cmp mov ficom add jb outsb rcl pop mov pop imul mov inc test mov adc pop xchg and icebp xchg sub outsb je xchg ljmp pop or mov in cld enter xchg aam and test or or adc sbb cmpsl icebp xlat shrb mov out jg mov mov (bad) mov out xchg into (bad) push rcl aas cmp sbb adc (bad) xor and push fisubrl jne adc add sub mov (bad) adc cltd mov jne,pn cmp in popf clc jbe adc jns pop adc cmp adc xor andb scas fnsave movb adc std idiv xchg xchg sbb mov xchg or sub sahf lea mov cmpsb mov (bad) xchg xchg lahf pop adc mov inc jle fmuls or jae mov imul outsb dec (bad) jge pop push pop adc or dec or jnp jl fstl (bad) mov int mov ficom inc fwait sbb lock cmc adc or icebp cmp adc push jecxz stos jp sti adc inc bound insl pop popa addr16 inc cmpsl mov adc aam push or push clc adc adc lret and mov rclb pop sub add pusha mov adc inc adc jae (bad) mov aad adc xchg cmp in ja add mov mov aaa jae mov les xchg add fcompl insb xchg sbb adc pop fistp push stc aaa popa xchg inc (bad) dec iret adc (bad) mov xor rcrl ja fistpll mov outsb sti loopne (bad) dec mov scas inc cld xchg or ja mov adc mov (bad) xor movsl pop dec addr16 setb adc mov xchg aas rcll fadd (bad) imul xchg adc (bad) adc cmpsl xchg dec sub or out or dec ljmp clc bound (bad) xchg adc pop adc pop nop (bad) xchg ljmp mov pop fwait push daa ret pop dec mov jmp adc cmp icebp adc lahf (bad) out fs clc sbb outsl mov dec cs sbb pop cld and enter mov sbb jbe push adc testl adc xchg test pop xor sbb and cs out jbe mov pop mov sbb xor (bad) test cld push repz addr16 repnz adc jmp clc inc sarb adc cmp cwtl pop lret enter mov out cmp subl push dec pop adc pushf insl enter sub sbb mov and leave nop adc movsb sub lret xor inc shr aam movsl inc ja mov or stc push adc sti pop jge inc push mov or test icebp sbb push mov popa adc int fnsave ljmp and ret dec and ds mov add xchg in daa cwtl leave xchg adc ljmp adc add jb cmp mov adc jge bound and mov clc (bad) nop pop xlat xor sahf cld pop fldenv hlt cmp adc (bad) insb inc mov aas adc movsb fistpl adc add cwtl mov pop adc dec repz in xor lods or inc jl les (bad) lds add fcoms adc jmp or cld lods (bad) inc in into or cs or jle mov test data16 sti mov xor xor and adc mov inc jecxz inc push adc and inc std mov lea and adc or in mov add add mov xchg fisttpl cmc sti fcoml mov loop repz xor sbb fisubr in fisttpl pushf (bad) push repz fs jle aad lds pop cmpsb add bnd insl adc out xchg imul (bad) adc (bad) das sub lret adc add add sub ficomp add shrb aad dec sbb loopne cmp lret popa mov (bad) repz test into jno push push sub lea pop xchg adc scas adc lds enter add cmp pop xor (bad) and pop les xchg std push std ja mov (bad) negb sbb adc outsl adc in inc inc xchg xlat jo data16 aaa movsb and hlt js mov sub (bad) nop inc inc adc clc mov lods adc sahf push adc cltd mov adc test (bad) fildll (bad) jno adc push nop push pop or (bad) rcrl jg addr16 xchg pop jo sub cli adc arpl inc xor adc jg push and sub repz push movb test mov lcall and bound in xlat repz xor mov adc mov into sbb insl lret pop out das cmc or addb leave fisub add lods (bad) fdivrl mov (bad) push es syscall mov add adc outsb lahf cltd mov xor repnz out stos adc adc test incl sbb adc mov mov repz sub or shrl or cmovge xrelease aad pop push or fldcw push iret insb enter cwtl pusha jp sti xor jbe ret scas int3 outsl adc mov insl adc daa add jb adc dec push loopne dec jnp push mov mov adcb mov pop push xlat or (bad) lret loop fist data16 or insb jle xchg bnd sbb cs sub repnz adc int3 enter push push pop jecxz add adc pusha add adc add mov iret dec inc add jecxz pop ret and xor (bad) mov xor roll inc into arpl mov stc mov cmp push leave dec and inc outsl and mov mov fs daa leave push jno push ficompl jl pop or ret adc mov or in aad nop and push push dec aas or leave ucomiss repnz mov or (bad) push dec sahf mov test xchg aad and jne inc cmp or mov push mov sbb adc lock xchg imul cmp push cmc mov loope xor je ljmp cmp lea adc mov lock xor mov jle adc pop adc mov test mov cvtpi2ps xor pop movsb jae pushf add mov (bad) out adc inc insb loopne xor fist mov test jns cmp adc cmpsl out repz ficompl lods adc dec xchg or dec adcb pop mov test repz xor push cltd daa fs (bad) into pop mov pop jns jl fcomps fnop pop cmp sbb adcl (bad) lods pop gs push pop adc adc out lea adc mov xchg loop adc movsb sub inc insl xlat push out cmpl loop push sbb jno adc sbb aam and cmp pushf pop ffree xor scas sub shrb call addr16 fist inc aam lret jp adc popf scas xchg xchg hlt mov adc loop popa pop mov jmp (bad) sbb sbb mov add adc jae adc stos mov dec daa adc mov adc adc or stc repz mov pop adc out stos adc ds dec add adc mov popf out sbb adc faddp (bad) gs rclb loope dec shr dec cmpsl adc push fstl fildl or scas mov ja jp xchg std mov cwtl jno xchg mov jmp mov push lret or iret pop dec mov imul stos inc mov std pop pop xor scas sbb cmovl adc jl adc adc lds bound adc or cmp fsubl sti mov sub inc and (bad) rdmsr xchg sahf add cmpsl adc inc pop push adc mov cmp jns pop adc cld cltd popa jle leave out xor cmp mov add adc fs imul mov xor mov push int3 mov xorb xchg insb adc pop pop cmp aas mov cmp xor xchg dec ror add ljmp scas adc pop ret add rorb in adc xor fcoms push mov xor add fist mov push test dec movsl repz adc push ror rorl xchg sti xor sub push cltd mov repnz add adc std jbe mov push adc dec loope cmp and sub push loop frstor int xchg sbb jbe clc ljmp mov mov sub fdivrs adc loopne ljmp xchg ret adc mov pop int3 fdivrl push mov cmp (bad) movsb pop cmp xor inc mov mov out mov xor test mov les pop push jno leave and adc adc scas int popa push xchg jno mov mov pop add loop add std inc sub mov mov rolb xchg loope adc mov test push aas or sub (bad) mov adc insl push mov or hlt adc adc add mov shld adc adc add test push popa pop mov mov clc xor xlat jmp push adc lea adc movsb inc cwtl mov or sub push and or pop sub mov scas push ja pcmpeqb xchg in adcl lea sub ds add push adc jo stos push popa xchg fsubr cwtl jns shl push scas (bad) mov ret xchg mov adc bound je xchg stc das add adc inc adc mov test adc daa dec ret sbb aas fnstcw add pusha xchg loopne sar test cmp dec cmp rcrl xor xor sar fildl cmp adc mov sbb daa jae xchg (bad) sub cld dec adc xchg js and popa enter pop rclb into push mov outsb js or dec (bad) dec mov jge scas pop lods adc xchg mov mov (bad) pusha adc mov scas adc addl repz cmp cld (bad) aam hlt stc adc mov sbb out je fwait xor xchg dec movsb push xor adc mov push xlat scas popf and minps iret stos pop xchg rcll add pop pop arpl xchg movsl adc jnp xchg jg (bad) notb pop (bad) je push shrl adc adc adc repnz or adc pop mov jl nop cmp dec push out pop mov call or adc sub divb mov or ret popf cmp xor test cmp ljmp (bad) sub inc movsb sub ret sahf sub std movsl adc rolb (bad) jno movlps test int xor call or xor mov lea jle push imul sbb jo,pt jp in or dec adc jbe gs adc clc cmpsb mov into adc inc aaa and pop int xchg push loope or pop push jg push adc dec nop xor jae add aas jno add mov jno ficompl adc inc push (bad) adc lcall or or repz xor cltd push mov xchg or mov pop js add adc pop clc cmp mov test adc stc inc test and add or add fcmove pop adc sub orl or inc or sub sbb scas mov out xchg xor fistl pop mov popf fcoms or es mov adc test aam daa int adc jae lods rolb adc ss jns lret (bad) jl adc orb adc int push xlat jmp gs push mov or adc push leave js aad pushf xchg int3 cli push inc shl mov dec cld push call mov mov and stos mov lea imul (bad) jne push (bad) lea fldcw mov or push push stos pop adc pop fisubl mov fs call loop jg mov and dec xchg movsl pop iret xchg sbb leave cmpsb jnp into clc adc add stos adc cltd push fstps mov fnstsw pushf xor gs push adc xchg mov shr in call dec test pop dec mov mov pop repz test hlt (bad) push adc sbb mov and sub repz push (bad) js imul mov inc cmp adc popf ljmp push jmp mov shrl gs ss add push sub push fadd dec cmp xor sbb adc test repnz xor mov popf mov jle xchg sbb mov or adc xchg in adc hlt lcall dec inc pop sbb clc pop adc mov cwtl xor and xchg xlat mov (bad) sbb xchg repnz mov mov cmc into lock mov adc out add pop or jbe pop mov sbb (bad) dec xchg adc js pop adc cs push fistl jl xor inc or adc cltd mov add dec adc mov dec and repz lods aaa mov dec gs add cwtl scas mov adc pusha jo lds push push sti jmp inc pop repz enter imul sbb mov push push or into subb sub out fisubrl mov lret mov and in adc js popf adc jmp sbb adc mov decb xchg mov xchg fstpl xor cmpl jae mov or inc adc and push mov jb popa ret insl add out adc out and loope lcall das pop inc scas push and hlt mov (bad) mov fwait dec adc leave pop push dec cmp out pop push lret loop inc xor sti xchg dec sahf iret jecxz fdivp je mov setg addr16 mov lcall or dec mov or stos (bad) (bad) mov mov repz jecxz sti and mov mov lcall or pop add adc pop xor jno dec hlt fcomps out in shrl das push lods adc test push gs outsb ficoml cmpxchg xchg popa lahf cmp sub arpl mov (bad) mov xchg sbb adc jnp lods (bad) imulb xor sub outsb mov or fsts rol or pop or mov push fs adc (bad) imul (bad) enter xchg adc inc sbb outsl shrb push inc mov dec jo cmp aas push xchg pop adc movl repnz xchg fucomi (bad) jmp cmc sub aad std mov stc inc xor xchg mov adc dec push repnz std arpl adc xchg ja (bad) repnz test sahf sbb aam adc cmp scas and xchg adc add das aad adc adc test mov mov in lock fidiv push les insl repz div jle scas out pop and sti push or or pop mov les pop sub popf dec dec xchg pushf das repz mov cmpsb adc sbb xchg stc addb mov in stos jns mov cltd mov imul or (bad) jmp jno sbb and push add xchg fsts (bad) jl xor or sub cltd stos jne dec rolb test jge fcoml in mov movsb (bad) repnz pop cwtl outsb cwtl pushf adc xchg inc jecxz stos xor mov dec lret repz adc sti push fadd adc xchg in jb mov cmp scas out js mov xchg push out add ja cli adc and mov dec adc mov push iret rcll fs xchg mov rorb xor adc push sub xor rolb hlt in movl adc rorl rcrb ret sub ja adc fsubl mov xchg pop add xor ret fstp mov aas adc pop jo,pt ss adc mov mov std inc arpl adc dec rcr push in jl inc ret adc sbb (bad) mov jno xor or lods mov mov sub adcb shl cld push ficom xor sub stos and sbb mov push dec sub inc adc lods cmp in adc popf and lcall push sbb sbbb ret clc mov xor or cmp test ret stos cmp syscall sub sbb sbb rorb push or cmp (bad) jo adc dec jp iret mov (bad) mov mov adc (bad) add mov stos mov fcoms cmpsl mov out adc xchg mov repz sub dec or popa mov push and mov adc lea loope lods push decb idivb mov mov sbb adc (bad) cld (bad) or inc mov adc movsb cmp adc pop pushf mov xchg shll ret xor movsb cltd repz into leave mov inc and mov mov (bad) mov vmptrst ficoml mov mov sub and clc in push fidiv movsb adc mov test insl test jno adc popa push or paddb lret mov xchg and mov adc pop cmp adc dec xor and scas pop cltd and imul fistp mov nop dec pop xchg fistl jne mov mov popf int3 ds daa inc in push push orl in sbb sbb adc jns in jle inc loopne xor mov or pop push add pop inc inc dec xchg fisttpll enter pop mov subl cmp fcoms cld jl daa es dec adc mov outsb (bad) (bad) lcall xchg (bad) or dec rdpmc (bad) xor jecxz adc mov pop add repz popf insb in decb jmp push mov mov xor cmp mov sbb adc adc mov inc adc mov inc shrl push rolb adc mov or andl out inc add pop cmp mov ret scas sub add lock sbb jae xor imul repnz add les or repz add (bad) ss push jecxz xchg push mov in xchg mov repnz push ficoml bound (bad) stos adc sbb cmp xor mov add xchg test lea cmpsb fs push adc lret sbb lcall xchg adc pop sub lock mov adc cmp out ljmp inc xchg xlat push mov cltd lahf adc jle or in bnd inc sub lret adc mov mulb adc pusha pop addr16 and lret adc aam jne inc mov add mov lret (bad) push nop jbe xchg or movsb fcom cmp repz std decl ret and cmp stos scas mov add ret xchg dec mov mov sub fstpt (bad) mov pop mov jnp and add xor fimul pop (bad) cmc xchg xchg in xchg add in test stos jbe je bound sbb test stc jno fisttp sbb dec adc mov xchg inc or adc mov push mov mov inc or into (bad) adc jl xchg inc inc in add adc cwtl mov adc pop lds cwtl inc push aam loop adc mov add nop dec adcl ret cld mov mov lret add out jle pop out imul mov lret fcompl inc (bad) repz inc jno inc cmpsb mov shl flds pop cs sub dec test (bad) lret dec ret mov adc ja aaa adc rcl adc daa mov lods adc scas addr16 std pop aam dec adc push dec stc lahf je sbb pop jno xchg enter cmpsb xor repz push xlat dec jo into int adc cwtl or adc sarb cmp pop adc movsb dec shlb sti mov fnsave and sub push jecxz and lcall sahf adc push xchg xchg pop es fadd jp (bad) mov sti lock aas fcmovbe mov sub add sarb adc or insl push (bad) adc movsl enter push adc out cmp jno jnp adc xorl insb inc adc mov xchg pop push (bad) mov adc pop arpl and adc ret jae push and push (bad) pop adc add call adc stc out push mov inc pop fdivrl and sbb ret push xor mov adc inc xor sbb enter mov jmp (bad) test std sbb psllw adc push stc mov sub mov lods js pop xchg pop adc pop inc inc adc sbb push pusha adc pop mov push jecxz mov outsl clc stos (bad) cmpsl rcll cmp or popf movsl repnz sub push mov add inc adc pop fld mov adc add xchg call (bad) xlat cmp sbb nop xchg js out das add frstor xchg (bad) or jbe fsub add add cmp cli adc repnz cmp es mov sbb adc test add pop xchg loopne sub subps cs adc out cltd pop sub xor aam or sbb sub push popf mov sar das mov movsb mov adc cmp push pop shll movsb xor jns cld adc add adc mov cs (bad) lods adc lret sbb lret adc std dec xchg hlt adc adc rclb pop sbb data16 xor add outsl and notb and adc sub fadds sub sub and cmp aam gs pop adc jp push dec sub cmp or lret loopne adc sbb call sub add sbb push fist mov shrb cmpsl (bad) mov push nop add pushf push push jecxz sbb mov pop mov (bad) jl add adc jno repz iret outsb adc xchg jle movsl lret push nop nop mov adc pop mov push in adc sbbb aam adc pop insl and mov add sub xor (bad) mov std adc aam mov mov stc pop mov in loope repz jmp (bad) pop outsl bnd cmpsb scas ficoml lahf xchg in sbb shlb leave adc jbe cmpsb mov mov mov adcb scas or adc dec add cli mov add lret shl into or adc ja fs pop mov cmpl adc adc add and mov mov push mov popf sub or pusha out and jp iret lahf adc (bad) test xchg pop or mov xchg call or push adc int gs xor fwait mov push sbb iret jmp cmp cmp sub in insb adc (bad) mov fsub js out repz sub lock ss test imull add scas or push xor adcb mov mov hlt jmp enter subl inc mov aad imul xchg stos (bad) ss dec mov movsb jns adc or cmp pop aaa mov shrb subl sub dec lret sahf imulb lea adc loop aad fistl dec push hlt mov or push inc fwait mov int3 jne ret pop je js push nop test pop add popa adc push xor push jne adc adc int3 push sub push jbe adc mov xchg mov ja adc cltd sub gs sub imul pop dec mov mov ret jns das adc lock mov adc insl sbb adc call lods xor jnp adc or cli in mov xlat xor loope push xchg dec stos sbb dec cmovbe xor jecxz sar adc (bad) adc jmp pop mov push das sub push ret xor add sar xchg cmpsb and outsb mov adc mov arpl mov lcall adc pop es and add adc dec mov mov fstl fisttp adc xchg adc push jnp test aas fistl pop add push adc jle jp jecxz fidivrl jne jg mov std xbegin iret stos data16 lock adc out xor aam push das adc jo pop test mov dec or xchg (bad) jne notb into pop movsb push and xchg mov hlt or bound adc sub mov adc sub cmp adc adc xchg mov push popa lds or sub dec mov mov test fist adc mov pop mov mov xor sti lds mov cmp xor or nop cmp mov adc roll pop sbb push jle push adc (bad) xchg stc data16 xchg inc mov inc pop mov sbb adc push movsl xor push lcall int3 adc push sbb mov mov std add std mov movsl adc cmp pop sub fidiv mov lods mov mov adc add xor sbb jne and mov pop (bad) mov adc pushf mov mov cmp cmpsl dec pop xchg lahf pusha bswap push adc jb cmp (bad) mov adc dec lret fwait xor inc jnp fcom ljmp adc xchg dec add mov add pop xor imul lock or dec dec sahf loop dec es xchg aaa push (bad) xor mov add mov lret xor mov test in stos inc (bad) jb pop sub sub repnz add pusha lds and test adc push js faddl xor insb loopne add mov lds sti outsb xlat sbb mov xor adc adc xchg mov adc mov aaa sbb push adc nop mov adc sub and cli mov in cld lea jl dec sbb jne dec pop inc mov out adc clc ret inc jmp mov dec xor push add lds inc xorl (bad) orb lret jbe pop push jmp push idivl mov call mov (bad) (bad) pop std scas outsl push fbstp mov pop stos pusha loopne (bad) mov call push inc adc in fld jbe ret mov int adc mov icebp mov out lahf cwtl lea movsb nop cmp inc and adc movsl jge das push push adc fs sub fadds dec jae pop mov jg mov mov (bad) ljmp (bad) nop adc pop mov in cmpsb or ds aas sti xor mov xchg popa xchg test sub cld inc (bad) fbstp jge cmp jmp push sahf in inc jns inc roll cltd pop imul repz (bad) fidiv cmp enter outsb test adc pop fwait btr out xchg jecxz mov pop push push adc mov jne movsb arpl (bad) mov pop jecxz daa es test mov icebp cmp push add inc int3 jl mov out xor fnstcw inc sub mov mov les repz adc pop scas jp and adc adc negb push loope or inc jge cmp cmp jns movsl mov adc dec push stos loope pop dec adc lahf inc inc adc pop cmp lods add sbb mov adcl shrb cld jno sbb sub or loopne xor lock xchg adc xor cmp jo,pt adc mov dec jp adc pop stos pop out jecxz jno mov xor (bad) mov push call mov adc ja outsl adc dec sub (bad) pop fs mov cmp and pusha cmp and stos add or in mov lret fwait adc sbb lret dec pop adc adc out aaa std push and stc push rcrb xor pop adc bound mov fbstp add (bad) ljmp mov mov stc adc in mov mov incb mov sbb adc xchg push nop ds adc pushf mov adc sbb test lods xchg ret push ss xchg sub in adc or mov cmp push sbb repz and xor sbb adc mov push in ds jl adc and mov cmc push xor scas mov mov add inc adc lcall pushf xchg shlb and mov cwtl sbb mov mov in adc add popa jle cld icebp cmp stc pusha sbb adc insb popf jb dec cmpsb repz add lahf sub mov jne aas sahf dec roll lidtl adc push sarl or cmp mov enter das add stos fildll push in (bad) fs (bad) push popf aam xchg rcl xor dec loopne add in pop dec sahf pop loope js (bad) rorl pop dec (bad) adc cld mov xor out das lock (bad) test dec adc movsb outsb pop iret fwait ja adc repnz jnp es adc push add pop pop test lcall sub fistpll in rcrl clc dec add lcall int3 test adc (bad) mov xlat mov dec insb ret adc (bad) mov ret pop call (bad) data16 push push cmpsb and push lods push adc cmp sub ficomp push imul pop fdiv (bad) in adc aad adc cs sbbl and pop mov lahf (bad) mov repz stos cmpsb inc sbb adc pop test enter adc jmp inc mov cmpsl jne es fldl adc addr16 mov xchg clc arpl mov out dec xchg or test test mov repz lret cs mov out (bad) jmp out pop jp fcomp adc leave push mov mov repz shlb adc notb and mov fwait call in cmp jo or jb dec fwait mov fldt jecxz pop xchg repnz xor nop jnp rcrl arpl xchg out popa outsb adc push dec clc aad add add mov adc jmp bnd mov pop imull movsb mov pop jmp mov (bad) dec leave stos add and or (bad) pop loop lea xchg mov jbe mov rol ret adc xchg jle shrb dec push push sysenter mov mov xchg push pop mov fsubrs aas cmp negb int3 pushf adcl mov mov orl push test sti scas pop adc cmp jo outsb adc or pop jmp push aam rcrl stos data16 jl daa insb movsb mov mov insl test add (bad) push xor ljmp fcmovu adc mov outsb mov inc jp (bad) adc test xchg mov jo int adc pop and ret cli and ret dec or mov or jnp jle in mov mov mov sub pushf into jnp cltd adc mov (bad) pushf sti mov xchg jno adc es ljmp (bad) cmp frstor mov insl add pop aaa dec mov sub popl outsb roll and icebp push adc mov inc and bound push add jmp ljmp cs push movsb cmc push iret mov push inc imul mov cmp pop sub call loope mov (bad) adc stc adc inc push (bad) repnz xor inc or adc jne mov aaa mov daa shlb les push dec std (bad) lret jge adc iret xchg cld xchg subb jge out cmc jl subl packsswb mov mov sti mov jno jbe fcoml ret inc (bad) mov (bad) push repz repnz push das add pushf sub test inc or or adc insb inc adc arpl nop test jecxz push jo mov mov ds add cmpsl and popf push mov mov in sbb or mov push cmp adc xor pusha adc xor push push outsb xlat out das sar scas repnz stos hlt add in xor adc cmp pop loop (bad) dec jno xchg cmp sub fsubr adc inc cmp pop (bad) mov push sub pop jecxz xchg pop fsubl adc imul add das es repz and clc movsb or or adc xchg aaa mov mov adc adc mov (bad) sbb aad (bad) insl outsl or ljmp lods scas xchg daa adc push jp push add aas mov or sbb sbb add test pop arpl push push cmp xor cs ljmp lods adc andl mov adc pop inc loopne pop push sub jb shl cmpsl dec pusha adc sbb stos leave add adc push sbb adc clc call xlat fwait cmp xchg mov mov stos adc xchg adc movsb xchg into jl popf cmp outsb (bad) jb and jns repz add in push adc jmp xlat jo xor adc stos pop sbb jnp outsb adc lock or movsb int3 in or je dec ret fcompl adc mov test jl ds repz mov cmpsl xchg jecxz test mov jno int3 dec rcr adc add mov iret mov aam (bad) outsl add rcrl xchg mov (bad) lret pop rcrb or adc aam pushf mov pop add out jle push movsb jo mov dec mov xor cmp lods sbb mov les mov jmp (bad) stc push lret pop adc mov or out iret arpl inc lret xchg lret pop sub push push jnp out dec (bad) mov jb addl sbb mov pop sub repz fwait cld and sub add bound mov popa fcmove pushf pop mov inc sbb sbb shrb mov outsl cmp addr16 punpckhbw adc dec testl repnz sti push imull adc and pop arpl (bad) sti adc ret ja adc or fsub and aas jae adc adc push jp decl dec jge adc loopne sbb adc fs movsb and cli sub loope arpl lods hlt ljmp fistl int3 jae or xchg mov pop sub inc lret xor mov push add insl jmp lock xor inc adc or mov (bad) mov jg jnp into out add les repz or call dec inc mov sbb nop cmc mov sbb mov mov lods lcall and mov inc add push inc mov fwait bound mov sub ds and inc sbb js xchg sbb push mov add sahf cld adc jo stos mov popw mov addr16 pop test push and sub adc fdivl aam hlt adc scas xchg sahf mov sub inc mov or lods sbb xchg cwtl (bad) int adc jl jge mov lods adc cmp cs sbb adc movsb fcom adc (bad) sbb push mov dec push adc xor add inc and mov adc jnp insb cmc stos add sbb jl gs cmp dec jno push aad sub ret pop xchg adc xchg sbb out push and aas xchg jge jp push cmpsl xrelease jns rclb paddsw mov adc lea sub push pop into mov dec fldl in js lods (bad) cmp shrb xchg ret fwait mov in into mov or cmp out leave dec cmp adc and add in xchg outsl inc jbe pusha adc inc push add adc test clc pop bound pop push daa scas adc push outsb adc mov cwtl insb push bnd jno adc (bad) sub pop xor mov xor add cli push dec cmpsl cltd xor jbe cmp ss xchg adc lock fistl gs jp icebp stos or and pop arpl dec jmp push xor call lea ficoml js and sahf pop (bad) jle enter mov (bad) push mov hlt xchg shl adc dec loop cld mov mov xorb lock (bad) or lods test and lds leave or icebp mov movsl clc adc xchg daa out mov (bad) and outsb adc and stc mov jnp,pt jle push push cmpsl repz dec cmpsb fnstcw (bad) fildll mov adc jnp test loop jne nop add scas stc ret xlat int3 adc pop mov arpl adc pop push lods dec and jle cmp or pop popa xor test clc enter stos repz and mov movsl gs pop push adc enter push icebp jae sarb pop cmp adc or adc add enter adc xchg mov aas and imul sbb das repz cmp sarb xchg inc mov mov push jno add xchg xlat adc rcl and mov cltd and pop adc jle enter cmp adc mov dec cld lods int mov push into adc mov fdivs and push jp push push lds rorb lods adc jl adc mov addr16 and (bad) out inc xchg and adc fimull adc outsl imul adc ds add inc cmp loopne cmp adc xor xchg adc sahf push add (bad) divb pop and lret mov repnz sbb scas xor adc (bad) sub inc sbb in xor loopne xor stos sti add push mov arpl adc cmp ds es push js leave adc xor movsl xchg out mov adc sbb or (bad) cmp out lret ret mov mov pop test push mov cwtl adc cmpsb adc cmp mov (bad) cltd fldcw mov aas or or lcall aaa jecxz xor pop mov loop sbb pop cmc mov add std je test ss jmp adc loopne cld (bad) call sbb scas xlat daa adc repz mov mov jo popa and or adc fnstsw sbb aaa test sub test lret (bad) mov clc test mov lods pop icebp das and sub and sbb and adc mov test xchg pushf movsb adc adc inc cli jp xlat jo dec pop adc aam repz mov into call add nop scas sbb fisttp cmp add cmp shrb int sti movsl inc xchg pop push out adc pusha pop jle stc adc pop daa imul and (bad) push call adc adc mov inc (bad) mov adc lock xor mov clc pop (bad) mov divl xchg outsb adc ficom (bad) xor sub add push pop jnp ror ret adc aam jecxz aaa xor in loop (bad) or inc shlb xchg or jbe adc adc (bad) xor push or stos mov (bad) push or adc jbe sub jecxz jge (bad) mov add xor cmp into sub ljmp mov adc adc cmp sbb jmp pusha jno mov add and mov mov pop sub divl loope jp mov adc lods cmpsl imul add roll push jp dec sub sub mov adc push xor fcoms and arpl mov fadd mov inc adc xchg pop scas into mov shrl xor push xchg das dec nop adc cmp je mov mov adc jbe dec mov insl fsts pop and inc daa or mulb push aaa hlt adc cmpsb mov mov pop and or push test dec pop pushf scas and sbb xor jae imul fs jbe (bad) add popa cld repz aaa sbb mov or jb sub sbb xchg xor or sbb jne sbb pop xchg jmp sbb adc call out std ret cmp ud2 adc xor jl aaa roll popa aad (bad) mov (bad) loop jle dec mov sub popa or adc gs out push mov jg rorb lahf add sub fimul dec pushf xor mov add pop add repnz ljmp cmp dec adc fs ja call mov popa in mov imull enter popl sbb xchg push stos and mov add adc outsl push sahf jge xchg movl pop pop repz add iret mov aam sbb lea adc (bad) outsl adc cld test lds cmpsb push add js and jle fdivr stos jne mov sub sti out xor mov adc bound insb sub jecxz fistl dec stc xchg sbb test addr16 and dec adc add jne (bad) mov jae add stos add addr16 add sbb in mov stc lds cmp shlb xchg (bad) ss adc stos clc inc outsb into mov mov sahf mov movsb popw iret add stos adc jecxz es lea pop xor mov sahf pop into add cli adc fisttpl adc imul xchg push call sub daa push insb add adc xor or repz subl sbb xor and push in lcall lea add fcoms fwait mov loope cwtl sub dec mov adc dec ss jge adc sub loope,pn fimul sar test xchg movsb hlt ljmp fisubl lret imul data16 xor rol sub pop loop icebp mov sti lret stos mov loopne popa sub add popa aas popf adc inc inc lods adc std jmp and cs or mov icebp iret inc mov movsl push sub cmp adc scas jbe adc adc out mov sbb and and pop aam lds loope icebp popf add repz xchg stos mov jmp adc adc (bad) hlt faddl adc cltd mov cmp adc jmp push test rclb mov (bad) dec adc mov mov jne adc fucomi (bad) jb int3 daa adc push enter hlt mov jge ret rclb mov pushf jno adc negl in adc lds cli dec jo (bad) add xor or movsb sbb test movsl cmp imul test mov jns pop fidivrl sbb adc xor push sub push mov leave add in test imul aas outsb std je jns adc or cmp js mov mov sbb pop mov adc jg pop adc fidivrl adc and pop into out adc pop mov sarb add adc push scas sub adcl mov popa mov mov (bad) lock or mov lods movsl popf lret xorl push push (bad) pop fwait adc add cmpsb ret jl add jne imul mov iret pop pop popa mov add jecxz add jno cmp aam scas push adc inc (bad) mov jle jl inc das (bad) xor mull or adc and xchg mov jp or outsl fwait iret inc ja cmpsl push data16 jge jno pushf inc insb enter xor mov fcmovne pusha sub cltd in sbb and cld add sbb sbb adc jp adc out mov mov adc sbb loope mov push jnp cmpb sbb xor outsl jg add xlat lahf fcoml or xor bound dec xorl jp jbe int push mov mov in mov push adc mov pop hlt ja xchg adc or leave mov xchg or gs and in mov aam push mov les xchg mov push jbe cmp fwait out push fisubl incl mov push test add adc int3 jo dec jnp stos std push adc mov push sub cmc adc and lods aad (bad) xchg adc adc jle popa repz lahf adc mov cmpsl fwait push or and (bad) lret outsb or sti and insl or out sbb push jbe,pn sub (bad) push aas or addr16 sar scas adc sti xchg cmp je or cmp mov mov insl fadds fistpll clc pop adc mov ret maskmovq mov adc test arpl dec aad jae jns fs rcrb add cmp sub xchg lahf sbb sub mov or push nop mov add lea add arpl sbb sbb sbb adc or lret add adc push mov adc jmp mov dec les inc out insl push mov jmp out adc pop nop mov adc pop pop adc push mov push sbb adc and inc mov sti mov dec mov test jecxz push cmp mov repz or pop jnp xor jecxz sub or xchg (bad) add mov jp xor adc outsb dec xchg fistpl nop xorl cmovb lret je xchg pop jnp adc gs cmp add xor xor xchg sub pop outsb int3 push push loope pop das jnp aad int insl mov adc imul add lea mov aas inc mov adc jne icebp insb dec and jo jmp mov push std adc xchg and dec loope push adc cmp mov adc adcl adc popf mov xlat jne jmp xchg add repnz out ss adc cmpsl cmp push sbb and adc stos xor scas repz dec popf cmp int3 aam mov arpl stc cmp test iret cmpl adc aaa add adc xchg pushf out adc jmp loop xchg jnp adc ret cltd adcl hlt jmp rolb mov push stc and sarl cmpsb mov mov inc enter or jbe sbb subps mov ret or bound test aaa ret in ror cmp mov loop test sbb jae rol xor push je push mov adc rcrl mov das aaa xor xchg jae push mov adc in cmp es jo divb and ss outsl inc (bad) jne notl shr scas lret pop in adc aam xor loop repz sbb and adc idiv add fs repnz xor negb les cmpsl xor push cmp cmpxchg mov dec inc leave inc cmpsb (bad) sbb mov pop mov std mov xchg test sbb xor xor bound out insl adc sbb push arpl jo add movsb or inc xor push popf inc jg sbb sub dec adc gs adc fcoms push mov cmc sarb sti paddb (bad) clc sbb mov cmpsl sbb adc hlt jns dec insb adc test leave in inc mov sbb jecxz jbe pop sbb push adc jb fucom popl push mov xor jmp imul mov int aad dec adc xchg (bad) xchg xor lods lods pop movl push sahf inc stos sub cmp mov pop stc mov lahf lds adc sbb es aas dec add sti int mov adc ljmp fmul adc push (bad) fiaddl adc or adc enter pop ss fwait repz fcmovnu mov jge pop insb dec adc fsubr pop adc xchg mov inc cmp sub cmpsb or nop aas xchg mov data16 cwtl mov fdivl pop jl mov adc movsb jae mov dec pusha dec mov mov adc sub jl outsl test call sti cmp mov ret pop bnd leave inc adcb mov push outsl rcl sub je jle insl or add aam cmp (bad) in cli mov mov jg aas xor push dec rcrl insb icebp pop add pop and jp xchg xor scas (bad) dec aad std repz imul dec push add jae sub in push cmp dec cli lock and sahf adc into add add dec imul jae cltd jg fcmovu jo mov sbb mov or xor daa sub adc pop sbb pushf (bad) std adc sub adc pop xor lret leave mov aam testl or pop popf mov lock je push sbb adc cltd stos adc push in adc aas jecxz mov and sub rcll mov mov insb mov adc into mov repz mov insl push test fldl2e adc ret fldl mov push insb adc push ja add nop mov shrb jmp aad in adc mov sbb sbb and adc into cmp push dec mov pop add (bad) fsubp sbb rcll push xor mov pop test fstl ja xor lahf mov sub scas imull or adc add pop mov xchg push add lcall cmpsb cli call or adc push outsb adc dec imul es outsl in pop jmp cmp push mov push jle mov ja outsb xchg jno in aam or rcr dec push lret (bad) xor call cmp adc aad lcall sahf xor lds cmp dec pop (bad) repz into imul cmp rorb cmp dec jnp mov pop add add xchg bound inc adc jge sbb dec das adc mov mov cltd and out add in fdivs inc outsl add iret std inc inc mov pop inc mov adc and dec insb lea pop mov lods in and pop movlps cs adc ds pop pop or jae fmul push xchg int3 in icebp jge jmp or or cwtl pop out or test jbe loope add repz pop cmp lret adc addr16 je push bound mov xchg pop pop movsb xchg pop int xor addb aad repnz scas test popf mov (bad) call mov jl mov mov jno into pop iret aaa mov lds dec (bad) repz mov out sbb pop int3 adc xor adc das sub pushf push add dec add push insb or pop push adc enter dec mov mov out pop xchg xlat pop xchg or (bad) (bad) sbb (bad) adc xchg call adc (bad) dec or jbe popf stos repnz aas mov sbb pop adc sub xor jnp pop push xor hlt int add daa repnz aaa adc divl loop repnz (bad) fdivs and das jno loop,pn addr16 cmp dec sbb and inc aas xor or push push flds mov or mov into xchg sub and daa adcl incb sub nop mov popl pop dec daa adc push out mov cmp mov add push or sbb pushf dec mov pop pop jns,pt adc cmp lods jo xlat push adc ret addr16 stc jnp pop mov stos out ss sbb outsb xchg jl adc dec aam mov js push mov xchg pop ss add sbb adc lock sbb sub adc in loop pushl xchg ret sbb push push lock mov data16 jb or sbb adc mov outsb xchg dec cmovno fdivs mov adc ret data16 iret js adc pop or jnp sbb lods push sub mov test adc aam adc insl xor ss mov add mov xor stos mov rcll xchg mov roll pop cmc pop adc retw add and pop shr mov adc cmpb jp adc clc aad hlt jb mov fbld sbb mov mov lcall (bad) icebp sbb inc mov std (bad) xlat mov add adc out lcall fidivrl inc adc lods xchg repnz xchg add in and mov stc ss ja xchg xor or jge dec adc divl adc test push adc in cmp jge xor mov mov iret and inc adc arpl adc mov fcoml push jb push sbb fsubrs or dec inc repz inc mov shll pop inc je adc frndint test ret sti mov mov dec inc mov pop pop repz mov add sbb stos xor pushf push sbb call fcompl mov lcall xchg add sarl add aaa test xor scas xor lods sub add add adc sub (bad) sarb mov inc xchg (bad) into movsb adc enter subl dec xchg xchg (bad) sti cmp (bad) adc adc adc out jne xor inc in rol outsb test dec adc daa stc xchg pop movzbl hlt (bad) cld in adc jg lods adc mov pop adc int mov or mov sub adc aaa roll and inc push daa psrlq jecxz nop movsb es push popw or cld ss lret popa repnz adc (bad) cmp cmp pop (bad) js adc adc sub inc mov sti mov cmovne mov fsubr push subl add dec pop out adc leave pop and adc fcmovnb push xchg cmpsb mov adc lods insl bound lock setbe sbbb xchg iret rclb cmpsl xor mov pusha adc mov ljmp push repz jno out xchg cmpsb mov repnz inc lret adc mov (bad) repz mov add pushf int3 adc inc test mov shrl mov mov sub dec cmp xchg scas or xchg or in xchg xor inc nop jp add add jl lock rorb and or pop loop mov sbb inc xchg (bad) pop lret xor and cmp or mov cmp dec pop xchg cmp ss ret and loop cli sbb xchg repz mov adc iret rcr js mov repz mov imul adc adc push rcrb inc adc add or icebp int sbb (bad) in stc xor repz sbb adc ja pushf stos push lcall pop xor (bad) in adc adc mov mov flds arpl xor aad test ror nop loopew or enter push negb ljmp sbb (bad) mov push pop sti push dec cmp sbb sahf jl je rorb mov fwait cmp mov lods nop push push and xor mov xor jnp sub push les or imul (bad) adcb mov sub xchg int and adc mov pop jne and and stos cmp repz adc mov jne rcrb push adc iret jmp int adc fwait pop in xchg enter mov sti jo imul adc pop cmp jno adc iret adc ja xchg ljmp adc cwtl leave mov mov xlat jne popa mov and into repz mov mov lods add cmp or mov inc std test dec adc jg push mov xchg pop mov jns lods xchg mov cmp jnp and push adc xchg or xor or cmp pop cmc push pusha sar jle xlat pop subl cmp popf stos cltd sbb imul mov pop inc or call jg xor and push mov rclb outsb leave mov jo or and mov jb cli mov popf lods adc push nop stos dec sub out lahf (bad) ds cli lock in sub adc xchg jno testl jne imul (bad) cmp fwait add mov scas hlt insl and test dec lahf cmpxchg les pop ljmp sub cmc cmp repnz or xor popf adc push nop and js dec push imul xchg mov jmp (bad) xor popf xchg adc push fcoml dec mov push adc and out cli xchg enter pop xchg jge mov adc leave xchg in adc mov or js mov jo nop je ja push adcl jnp adc aaa inc mov out xchg mov jmp adc push cmpsl mov mov dec dec xor jecxz dec pushf sbb add or into aaa adc cltd mov adc imul call cmp sti mov adc mov jbe lods adc mov loope cs or sbb adc xor mov stos jecxz jne pop xor out loopne (bad) pop daa sbb jno pushf adc les (bad) push adc popf lock adc sub jno les nop test and add ljmp adc je (bad) js push adc cmp adc cwtl ljmp test aad sbb push imul mov mov loope push xor sbb rcl (bad) jbe,pn adcb mov sub inc shll out das mov (bad) into mov je pop push or mov cld fist dec dec xlat js adc (bad) cmpsb xor cwtl scas mov das adc leave bound in adcl sti lock mov (bad) jl mov adc mov adc outsl lods or inc es xchg push ficomp fsubrl lret js cs push inc mov (bad) xor push adc xchg or mov adc (bad) repnz inc push arpl adc dec or mov mov adc sbb xchg hlt imul lcall sub test adc mov xchg adc aaa xor pop gs cmp add sub std sbb mov stos dec xchg inc popf loope mov test xchg hlt pop adc push int3 add adc aas inc cltd cmp por loope push das add leave mov pusha bound adc sahf push xor adc and ljmp mov hlt repz rclb sbb jno (bad) iret jae data16 adc sub mov imul fidivrl (bad) add adc and cmp adc adcb dec mov jmp add movsl scas loope xchg aas adc dec xor cltd loopne or add faddl mov ret aam aas push adc pop pop pop (bad) nop shr repnz test test xor lcall adc sbb (bad) shlb lods adc out daa add adc data16 jno adc xchg mov and (bad) jbe outsl adc test jnp dec aam add and scas sub popa into imul adc jo push ss je push pop adc insb and and adc inc sti mov inc arpl out not test test repnz (bad) insb adc xchg add repz add or or adc xor inc repz hlt popl adc mov add mov rcrb pop lea dec adc cld fcmovb and cli inc adc fnstcw adc gs pmuludq jge and in dec mov push push adc adc sbb adc jb and mov mov adc mov cmpsb fst ljmp xchg inc psadbw xor (bad) xchg (bad) pop adc cmovns call aam mov pop std mov adc repnz adc lods insb adc cmpsl sbb jnp ja sub or lea pop repz push ficomp mov nop add les or scas adc mov or (bad) sti jns cmp or and adc add in cltd push mov mov je add shl jle das add aaa xor mov jns into clc scas adc lahf cld out insb nop push adc insl test aad je adc lods scas xor pop popa mov mov lds adc repnz int3 lea shrl jg adc iretw in and bound adc xor mov out ret sbb cmpsb push repz sbb adc out std int sbb inc jne in lods int adc pop cmpl adc ds cld mov sarb push push repnz mov adc adc test movsl adc push movsb in stc pop dec push push scas jae lods jg sarb mov (bad) mov mov or dec push stc or pop movb adc fwait subl repz mov pop arpl adc clc aaa xor mov xor xchg outsb add mov mov movl ja repz cmp js imul adc push (bad) insl ret adc or mov adc shll (bad) adc push cmpsb repz xor pop inc cwtl or lret inc ljmp sub cmp mov dec setae mov push mov cmp mov mov or ljmp xchg popa push adc (bad) push adc int or loop int3 sahf add test push adc mov popf adc jmp cli or rorl scas and adc jp and xor jnp pop mov mov and aas lods pop adc leave lret jo mov xchg jecxz mov mov adc movsl data16 jo mov jge adc fistpll adcb jne cmp pop int3 mov push adc dec mov mov adc add pusha push xchg sahf sbb ja (bad) pop mov push push cmp pop push dec movsb adc nop mov pop inc arpl ljmp repnz push pop loop cs mov mov icebp xor rorb inc int outsb jno fwait add dec xchg cli sbb enter fsubp insb mov xor inc scas rorb sub lods int3 xchg adc xchg jl xor pop and ret rclb pusha inc mov dec adcl ds mov sbb loop mov (bad) adc mov lea arpl adc or (bad) cmp repz int3 loopne int mov adc adc sbb ret xor scas adcb sbb pop sub ljmp sbbl inc mov loope ror (bad) fsubp adc js mov push ret mov dec stc xor test push popf cmp adc sti mov movsb adc imull adc add sub inc das mov add dec addr16 fs and jne push lcall insl adc add je mov dec sub inc adc ja (bad) sbb jl fist adc adc clc push inc cmp mov sub cmpsb lret xchg xchg data16 cs adc mov add mov mov adc cmc leave scas cs cwtl inc repz sub lods add in nop jno push pop lcall call mov adc rclb inc mov mov and out xor adc movsl mov jno out arpl cmp mov push push (bad) adc das xchg cmp mov cli pop fwait adc xchg bound repz sub pop test adc add pushf and mov fbstp imul (bad) xor adc mov mov pop mov out pop rclb popf mov jmp lahf inc cmpsl or inc cmp lea (bad) cli push push xchg adc popf jb or sub mov adc jbe pushf std andl mov js jo adc je popf icebp adcl adc (bad) cmp xchg ljmp adc stos inc fnstenv (bad) xchg addr16 mov nop cld inc scas add mov sub add or pop xor xor xor stos adc dec imul add dec or inc rep in jo push push add (bad) or imul ds inc outsb fistl inc sahf sub sbb jae mov leave es cmc cmpsb addl aas adc stc xor in int xchg cld sbb sub iret inc pop outsb adc pop lea sbb push ss dec or aaa repz add mov repnz xchg mov arpl lsl fwait xor adc out (bad) mov xor mov push xchg sub pop and je (bad) push int3 jmp adc aas mov add (bad) out mov xchg loopne repz ficomp in and add mov mov repnz push ret sbb xchg mov fwait xchg dec sbb loop ret xor jl xchg fcoml adc xor sbb test pop enter sahf shrb mov jle fisubr fnop add repz scas mov sub inc (bad) rcr enter push loopne ja out xor addb es out adc (bad) jp inc or mov dec lea and fisttpl xchg adc test lcall fdiv loope pop or (bad) xor and adc insb sti (bad) test stos adc mov xchg mov test pop and scas je cmp mov imul adc add mov mov cmp inc push hlt dec adc sub xor notb loopne push mov inc mov inc int xor rcl fwait cmp or xor add xor call pop inc adc xchg in daa loopne icebp outsl notl sub xchg adc xchg cs dec adc and mov mov (bad) ss jbe pop jo sub gs adc xor adc mov nop (bad) dec call lret adc mov stos mov dec and idivl push insb fwait shlb mov add dec adc stc mov adc test cmpsb inc insl pop adc add mov cli inc mov adc rorb mov mov adc out xchg adc bound dec adc scas add out inc xor mov ss cli or sub inc (bad) (bad) sbb mov stos ljmp xchg fmuls imul adc dec imul xchg pop std lods int3 aaa xchg out adc push sahf je or pusha mov push sarl cmpsb js push jp leave in iret (bad) adc dec jmp mov and leave mov (bad) sbb jo les sub adc ss xchg nop adc jnp adc pop or sub lahf add bnd dec pop arpl shrl sub xchg fcoms dec adc push push sbb inc add outsb push cwtl mov or pop mov push ja or mov adc in rorb or jp clc aas hlt xor push in sahf mov adc in es out jno adc cvtpi2ps movsl jg (bad) or mov or mov push clc addr16 mov jmp lahf fiaddl fistl xchg add add addr16 loop mov cmp ret push jecxz pop mov fistpl fimul xchg aad xor mov or xor sbb je ja xchg insl add xorb adc add inc out loop xchg and or mov jl stos mov fcoms and push mov sar int add or insl sub mov mov out cs imul pop or in stos mov mov lds cmovae jo idivb mov shrb mov aam test roll xchg imul add add arpl push rep mov dec (bad) pop sub in add push ljmp or sbb test dec cmp adc mov sbb push inc imul cmpsb adc jp mov int in lds mov add in mov out jl or sbb xchg inc jne jbe add mov mul and add popa mov cmp js inc push sbb std xor lods test scas daa inc loopne mov cmpsb mov test inc iret dec cmpsb pop mov jle and adc mov fstpl and mov mov jo iret pop aaa push mov aad dec xchg ja push mov adc or aam out mov pop sbb mov movl push ret (bad) xor out jecxz push inc movsb sbb lods jecxz add mov or repnz xchg gs adc inc xor dec xchg mov int3 pop push (bad) aad loope adc mov (bad) jne xor and fnsave int imul das inc sub jae adc jp insl fmulp or int3 push popa xchg aad call add jp jno mov adc or cmp out pop (bad) loopne pop mov lods inc push adc mov iret adc xor out jo mov shl imul vmovd push repz mov (bad) je ja mov adc repnz add repnz iret inc xchg adc fcoml negl adc (bad) aas jnp pop js sub pop jns (bad) in adc mov ret movl lds je push hlt out adc mov lea fstl adc and adc aam jae adc xchg inc insb push movsb jp add jecxz push adc pop sub add dec adc sahf sub hlt (bad) adc stc mov mov inc push ret mov sub jle adc or cld sti clc dec xor mov fildl or pop mov es pop and mull adc push (bad) ss nop xchg inc icebp cld clc scas xor popa gs insb (bad) sbb sbb xor cwtl imul dec adc sub outsb jecxz aas cmp cmp mov cmc or call adc and pop adc repz sub lret push xchg mov or dec das adc lods add mov adc sarl arpl loop push popa push or or cwtl cmp imulb rolb push aas ffree mov push (bad) minps stc jg push jl push jne add mov inc pop shlb fstl fldcw je add push repz in aam (bad) mov or jl test (bad) lods ja,pn adc int3 mov lret dec inc push adc in repnz fcoms je cmpsl or or xchg mov xchg mov dec (bad) dec fsts sbb and xchg jl aaa adc (bad) daa xchg fdivr adc sti push jbe je cmp push push popa xchg scas push add pop shrb fdivl or shl or pop pop std int3 arpl adc push repnz (bad) push or les pop mov jecxz movl jb adc mov fmul mov pop push cltd pop out inc loop mov addl dec add popf cmp sbb mov lret mov mov dec xor xor mov testb std imul movsl lods add adc mov pushf pop jg repz cmp loopne inc std pop mov push gs cmc fs xor jb sbb pop or mov adc iret enter adc jb inc rcrb push or push and mov cmp leave inc push iret push insb and pop jle pop fwait pop or ljmp adcl cli mov mov (bad) (bad) or dec add test in and test ja stos mov or repnz mov inc adc xlat mov (bad) push mov jecxz add xor insl sub mov sbb adc call xchg add mov (bad) cmpsl out sbb shrb adc arpl mov daa sub fdivrs jae push popa adc pop dec push add adc push test cmp call add je mov inc cmp ror loop push add adc test push sbb test outsb xchg cmp xor sub xchg pop mov pop dec mov addr16 daa sbb not jmp cmp adc mov adc cmp mov fldcw jge pop lods xor stos push and (bad) repz movsb mov or add fsubrs out test (bad) imul push xchg repz pop xchg sbb jns xlat clc mov push inc nop pop mov jmp xchg into adc mov jo mov test jp cmp mov addr16 jno pop mov scas insl cwtl dec mov push dec fidivl out jb jne jle popl sbb adc ss fwait aad inc testb or loop jg repnz jno mov mov mov in fistpl dec inc cwtl daa into adc dec iret ja imul fmuls adc inc pop (bad) negb xor jae mov leave mov push aad pop xchg (bad) mov push clc adc jne jmp adc xchg push imul push mov gs pop fs push xor icebp push sbb dec cmp adc cmp outsb je insb add loopne push adc out cmc (bad) repz aam clc stos popf jmp or adc adc add jmp jne outsl das xor rcrb out and lock in rcrl mov pop inc and aam adc xor inc repnz mov and ficompl sbb repz inc popa test jle std fidivr or pushf push dec push fdivs pusha pop sbb pop mov negl into (bad) shrb hlt inc (bad) sub loop pop sbb push xlat cs adc add clc sub (bad) pushf int3 (bad) adc repnz add add repz and jecxz cmp into and jecxz std leave xchg add add icebp insb push push jb jmp sbb dec inc adc adc rcll mov jb push sbb adc adc fwait jg mov push adc int3 adc lea mov xor adc xchg xchg mov leave push rorb jno,pt adc add adc push cmp adc xchg mov add roll adc mov mov adc jbe add xorl or and popf icebp adc inc jg fildl xchg mov dec mov inc jmp gs (bad) aas loopne orl add aam mov ljmp rcrb jo adc test adc rorb fidivr (bad) fs clc adc adc in add cmp stc (bad) adc inc outsl jle insl sbb pop in out ret inc xor sbb xor ljmp mov adc push pop sbb mov cmp mov cmc mov mov loope out in push repz invd decl jnp (bad) stos jle sub jg mov xchg loope sbb mov daa (bad) pop in popa pop decb push add pop lods movsl je sub xchg sbb sbb adc sbb sub add lods (bad) pop lea adc or jp ja jecxz loop mov xor popf xchg push xor sbb and adc js shlb lahf xor lea (bad) mov dec mov xor push inc sub popf adc clc movsb inc or pusha nop lcall and subl mov adc or sub nop jmp std add fcmovnbe xor mov pop jle adc (bad) repz into hlt ret jmp add movlps sub lds adc sub xlat pop repnz subl xor inc movsl mov repz popf add add mov cmp xor fdivl adc adc loope and dec cltd adc lds scas loop or xor cmc push cs mov fcoml jge xchg add fs push imul mov adc fxch xor jo rcrl stc pop cmp push xchg mov push cld ret sub int3 out es jo mov adc stos sbb popf push shlb int3 sub bound jbe inc jmp add repnz inc jae out add or pop mov adc imul or push sbb lock icebp out and adc push ljmp cmc jnp push fadds dec pop pop cltd push mov jge sbb das lea ljmp (bad) xchg enter pop push xchg popf dec push adc pop or sub mov jp hlt or add les (bad) mov lds push jo sbb add sub inc xchg sar xor or sub mov adc push pop mov pop (bad) adc xor jle adc adc int3 jmp sti xor inc sub and jne cmp test add lcall jp imul cs aas popl xchg inc xor call xchg in (bad) cmp pop dec ret aaa fdivl xchg imul xor aad mov imul (bad) scas mov push sub stos jb in lods add mov lcall jae adc mov clc dec mov cld adc adc inc pop and mov inc xor stos add decb aad or mov mov lahf (bad) mov dec fwait mov in dec or add xchg cmp loopne lahf cld inc adc mov nop and jg mov pop inc pop std cli adc roll adc mov dec rclb mov xor fstl cmp stos fcmovnb jbe adcb cmp repz add outsb cmp stos push sti lods adc pushf adc cwtl lea aam ret push (bad) pusha jne inc mov or lret rorb or mov mov mov lea dec sbb fsubrs or and adc ficomp call adc jns push sbb push ss rorb popf jmp cmp aaa dec cmpsl lahf jg pusha xchg adc inc jecxz cmp xchg lret pop jo push mov push int mov pushf xlat sbb xor int3 test mov insl loop repnz mov mov lds adc lret and mov cmpl int data16 xor cmpsl or dec adc and imul adc sub push adc sti shrl mov push ror sub jecxz xchg (bad) cmp pushf mov imul mov (bad) push push fmuls adc test and mov jmp je and ret fsts movsl scas jo sub and rep clc enter mov call cmp xadd scas cmpsb clc cmc imul and daa xchg sbb mov dec adc call vpsllq pop or cmp ljmp sub jo in inc xchg out stc xor cmp pop popf xor adc cmp pop jp inc adc xchg mov pop mov setnp dec jo inc mov adc into test adc xor push push pop call cmp push or stos or inc into movsl xchg adc insl pop adc lret xlat jle,pt adc test mov xchg sub cmp hlt in mov xor adc push mov mov adc push dec or test mov add adc (bad) repz cmp pop test js call inc imul sbb push mov outsl cmp sahf dec test pop or out int shrb movsb mov jle sub or loopne push inc repz pop xchg out (bad) jbe or and stc mov add repnz adc mov (bad) (bad) xor or mov adc xor lods add aad sbb aas cmpsl mov inc or inc inc mov inc lods into outsb sarl fiadd mov mov dec lcall add and shrb sub add mov fst into push fs xlat adc push arpl xor pop adc in es (bad) (bad) push ss xor loopne mov js aam or cs negb push add cmc ret lahf mov dec push pop loop mov or cltd test push in repz clc movsb les pop mov gs adc push inc jns scas adc repnz or into mov xchg cmp mov adc hlt movsb enter aad mov inc adc dec or xor (bad) adc jno jo push bound ficom jg jle lret ss repz sub js inc and and xor mov push lcall ja ret inc (bad) insl adc jo sbb fbstp gs xor popf dec pop sub xchg int3 scas adc sub in adc xchg mov push jo sbb nop fwait (bad) jge adc orb sub mov icebp test cmp popa pop test xlat sub mov pop pop shlb andb in dec je sbb xor out xor (bad) add cmp insl add cmp sti fistp xchg adc lock (bad) xor adc xchg or push mov cwtl pop inc int3 jbe add std outsl fidiv imul adc add xor adc rcrl sub fldl cmpl cmp pop div scas mov lods repnz add adc pop je adc (bad) mov out or (bad) fnstenv or cmpsl dec loopne lret jb stos add ret cmp inc mov or and insl in adc leave xor (bad) or andl adc fmull and push gs pop jmp jnp vmovlps lcall adc int jbe xchg adc jecxz mov mov mov mull out sti sub pusha cmp lods dec stc movsb add imul push pop pop int shrl mov mov sub and movsb cmp iret loope adc sahf faddl pop adc adcl xlat mov popf or pop adc and repnz ss and sub push sbb (bad) loopne rcr mov notb cmp jns repz or fmull mov inc aaa fcoms push clc inc call pop adc dec adc div xchg fwait insb jnp test psubw repz or imul lods scas sub out fdivr dec add mov inc adc mov outsl mov push sbb fs add adc hlt pop aas stos mov fstps mul push lods (bad) icebp adc pop push sub fsubl mov add shrb xchg add push lods lea sbb movsb or jl jo sbb mov adc mov push adc stos addr16 aas scas cltd notb sahf test nop mov rclb dec pop in adc xchg lret insl adc sbb and icebp inc pop mov lds mov or mov sub add jg sarb cmp repz ja mov pop scas xchg mov popa jge jl push push add daa (bad) aam rcrl sub pushf adc in mov into adcb sub das xchg xchg jle adc add pop and sub mov repnz or jle sub dec jg mov xchg sub lods aas xor adc add inc jae cmp popf int xchg rclb rcrb iret in (bad) adc inc mov add test add cmp pop gs aad adc push xor test or ds adc mov mov mov mov arpl cltd mov ljmp xchg or xor cmp jae std adc icebp insl or test dec jns dec (bad) fildl adc fucomip test ret out shlb lret adc aas scas add mov data16 or sub xchg adc jg je add mov push adc sub in (bad) xchg fcomps add adc aaa out repz shrb pop loope out or mov out pop call std sbb sub rcll push cwtl jb adc push popa fs ss mov rclb xchg lcall adc push gs lods xchg and mov pop repz xor mov aaa lcall jl xchg repnz sub aam movsl (bad) mov or decl or lods lea mov enter pusha lcall data16 lock clc aam cmpl scas xchg sbb lahf mov pusha xchg mov cld and mov inc insl ret mov jg pop adc sbb xchg popl test inc cli imul test sti adc jo pop jmp adc xchg aam pushf out push out clc inc and adc test push adc adc mov add aam adc jne adc mov fcoms mov popf xor adc push mov (bad) mov xchg push mov mov push mov pop or adc cmp loope ja out or aad mov mov repz shlb movsl test pop add arpl mov xor xor rcll andl repz dec jnp sbb das mov cmpsb add adc hlt jns and adc ds pop mov adc ret fldl adc or adc shrl or cmp xchg stos lods imul insl xchg mov push adc dec arpl bound xor cmpsb aaa xor push out jno (bad) mull scas pop or adc pop adc jno mov cli and add shlb pop jnp or adc out adc loop sbb dec adc mov rcll mov orl in aaa popf lods adc xor xchg lret pop lcall jmp pop repz aas jno cli scas add popf fiadd lock jae outsb jno or fildll sub addr16 cld fldt mov and cmp add sbb adc fistp mov shr xchg andl (bad) scas inc adc pop loop jns fcomi or adc (bad) scas sub cmpl out jbe ja push popf mov das rclb aam mov or (bad) adc bound out mov add out inc and push leave cmc and cmp jnp fs out push add adc and jl sbb mov add adc add adc mov cmpl mov or jno dec pop loop test arpl popa (bad) inc adc cmpsb or adc repz xor cli mov add add mov adcb adc xchg xor adc adc mov aaa xchg cmpsl or mov mov lahf mov add adc sbb sub in sub outsb add gs imul jne dec adc xchg hlt es mov mov dec ds pop adc cmp adc (bad) loop xor test mov dec pop pushf nop outsl test pop mov hlt jle and mov out and inc add sub repz jg sbb pop rolb fdivs sbb inc popa data16 lret cmc jo (bad) cmp icebp mov data16 nop dec mov mov movsl inc mov lret pop std pop cltd in cmc adc and repz movsb mov iret push adc sbb push adc inc or mov and imul or fldcw pop sub mov push faddl dec aas idivl ja sub jecxz adc cmp test rclb xor pop mov mov pop mov adc pop (bad) mov xor mov aas insl addl push loope adc sub fsubl repz out int inc pop adcl jbe dec mov daa into orl adc mov cwtl cmc xor sub fcoms inc in or test mov test jns adc adc dec or nop push or lds sbb xchg add outsb paddusb adc shrb xor sub push (bad) fbstp pop adc mov add into and ds mov jg fisub cmp adc cmpsb loope imul mov ljmp icebp fisub adc adc adc cmp or adc inc push dec mov dec aad repz ret ja or insl jp cmpsb xchg jmp sub movsl cs hlt int3 popa fs lcall jae lret test adc insb (bad) adc inc push xchg dec dec jl stos or pop jb hlt xor adc jge adc (bad) and andb mov dec movsb ret cmp pop sbb dec add mov mov fstl jne insl xchg rorb bound pop (bad) sti int3 inc cld mov imulb sbb and mov fwait pop ficoml es mov fild bound dec repz cmp nop add stc or sbb fwait adc cmp (bad) ss xor (bad) ret xor cwtl stos push js mov jae push adc xlat call adc xchg xor adc stos mov movsb push fimul inc jmp push add mov xor inc lret popa lret (bad) xchg cmp mov or jmp into aam mov inc clc cs (bad) jno mov fdiv cmp xchg stos scas pushf adc in pusha inc cld adc sub fwait adc pop fisttpll adc (bad) adc jmp aam jg sbb add adc sbb xchg sbb adc enter xchg xchg xchg cli je inc mov pop mov mov sub mov repz lds adc rolb push stc adc jle in mov ret lret xor fs cmp jle mov adc sub lea xor aam cmc jg mov fist fst adc jge jb adc ret clc mov je cmc daa xchg mov sub mov adc movsb aas or cmpsb sbb xchg lods cld stc sbb scas icebp or sahf adc aam pop mov out adc pop repz xor push repnz mov lods adc cmpb fpatan test jecxz pop sub push inc aaa adc sbb mov push fistp outsb bound mov pop xchg and inc sbb or xchg pop cmc lea dec add jge adc cmp mov inc cwtl sbb jno or mov mov and (bad) in dec jnp (bad) adc sbb insl int3 sbb xor jb (bad) or adc push dec adc dec push test ss adc aaa bnd mov out fwait sarb mov adc jmp sti insl or mov int mov das lods cld rcrl lock push sarb push cmp popf icebp rorl mov addr16 sbb dec in sub js push mov adc pop (bad) inc adc jmp jno adc enter mov push jge adc jl frstor inc dec cmpsl inc xchg popa and int sub cwtl sahf add cmpsb inc bound adc lea adc push int3 (bad) outsb rcl fdivs sub xchg addb pop push adc jle icebp push mov js push sti mov mov jmp rorl mov shrl imul inc nop fwait loope add es xchg inc adc in jp pop (bad) in jmp sbb pop push jb stc data16 add adc pop (bad) out fistl mov add inc pop mov push dec es fiadd (bad) adc loope mov xor and pusha or pop popf in adc or mov and ljmp adc mov xor insb rcl or adc into repnz jns mov adc test leave rep imul or xchg adc pop fcoml mov stos outsb ja pop cmpsl sbb lock add dec data16 (bad) rep push (bad) mov mov repnz movsl or jno cmc test rclb add out test mov loop in and sahf repz movsb dec popf outsb decb or push ljmp mov cmp mov mov push adc push test adc jmp dec adc fsts mov jns sbb lret push ficoml dec out mov rep sbb cld cli (bad) mov adc adc cmpsb fisubl int3 xor loope adc je movsb out mov add cmp pop jg js or bound cltd xchg xlat dec add adc (bad) mov cmpsb push xchg adc outsl mov cmpsl and xchg in xchg jae jo adc hlt mov adc pop cmp (bad) outsb dec adc or push adc in push jns push inc adc int xchg mov pop mov cmp inc fwait test adc dec stc xor add fisttp mov sub adc adc nop cmp dec adc push inc js mov and xor ljmp xchg xchg out adc leave cwtl xor add sub push mov stc add lahf (bad) loop push loopne decl adc in mov into adc pop ret test push and adc lods movsb mov dec inc adc cmp mov inc repnz add jbe push push adc (bad) sbb jg sarl nop test js nop sbb sbb (bad) push adc icebp sub leave jae cmp hlt dec push aam push add mov cld sub rcrb jmp or sbb push and popa or ffree jp int3 aaa mov add (bad) push or xchg xor rcrl mov daa nop cmc lret adc pop pop mov adc dec mov and mov int adc movl inc fs sub das (bad) repnz push in sub pop cs xlat test mov imul inc ret mov adc push xor sbb dec inc adc xor lods dec das mov xchg (bad) xchg push pop pop sub mov std adc push add imul decb sti xchg sub or mov (bad) or dec mov and jne xchg push jle (bad) jb push push adc adc fwait xor pop xlat sub icebp mov in mov insb scas and test or cmpsl pop dec adc cmpsb mov sbb adc out mov xchg pop (bad) std mov push rolb daa sub hlt sub dec rcll or lods adc rol push fnstsw (bad) mov pop xor out mov inc xor fsubl push or pushf test arpl pop jle ret lahf fimull xlat adc inc and sub lret (bad) lret push sub das pop or les adc lret jne into and ret pushf orb xchg scas das insl pusha adc sub (bad) int3 jmp out in pushf inc ret xor adc fiaddl adc cmpsb pop push add push push mov jns push hlt (bad) mov mov popa fild fcoml mov cmp addr16 (bad) adc adcb pop xchg xchg xchg idivl xadd cmp popf lock cmp std lods adc mov adc hlt mov sub fwait push add add adc arpl adc or add lcall inc xlat cs add test jnp xchg push repz fwait cli std stc outsl inc mov mov bound jbe les adc adc or arpl int3 mov in inc dec popf jge adc cmp sbb mov dec rclb sbb add dec push or push inc xchg xchg add fs adc jae insl sahf pop sbb stc xchg mov cmc mov into cs inc int or adc push cmp aaa push dec xlat popf cmp add jmp adc add pop nop inc jno movsl fistp scas mov cmp test mov inc jg xchg or mov xchg adc clc stc mov sbb cmp xor out inc lret adc lret add scas sbb or xor sbb aad cmpsl inc outsb and adc xor movlps inc push repz (bad) xlat jge inc lcall adc call fstl dec inc out gs in adc adc test jle adc xor ja mov clc fcom loope adc sbb add add xchg dec in xchg movsl stos adc jne arpl and and or call js inc jno sub lcall int3 sbb adc push mov psubsw pop (bad) xchg out test fidivr int push and es cmp mov bound dec adc ss leave fstpl rclb stos jo js push testb fsubrl xor add in inc ja test repnz loope mov push insl adc popf notb fwait mov sarl xlat push pusha dec adc sub jmp adc popf je or cmp js inc lods aad cld push add jae fwait adc mov adc repz std mov jmp or and push mov and adc pop pusha in xchg jp mov addb jns out lods fisttpl xor jo nop pop scas test lea mov or adc popa jmp mov call push add jl movsb inc push je mov adc outsl sar adc into jno xchg dec inc scas adc cltd jecxz mov ja sbb fdivrp nop jno das adc xlat xchg dec push adc dec mov push jne int or (bad) je mov add mov adc and mov js sub and xchg fsubs lods outsb (bad) jo call jnp adc sbb test xchg mov adc cli sbb jo adc aad fistp jno movsb mov push lret add test pop fwait adc (bad) imul out repnz inc xchg or jl and test dec add repz lahf call adc fucom sbb adc pop add arpl inc (bad) outsl cmp cmp or xchg xchg movsl js ljmp and test adc sbb cli xor sub cmp (bad) ljmp (bad) fist cmp xchg sarl jmp add test aam adc mov rolb push (bad) cltd pop cmpsl jo sub mov mov add xchg mov add notl outsl mov xchg (bad) push xor push jle xor inc clc adc xchg lea les fdiv lock pop cld mov adc shlb fsubl add divps popf icebp adc adc and dec out (bad) and inc int3 ja movsl adc test dec sub sbb rorl (bad) adc popf and mov push daa adc adc mov ljmp or adc (bad) fxch or dec jmp sbb test cmp and pop scas mov leave jg int3 loopne xchg or cmp adc test push pop aam adc addr16 and fiaddl pop and repz insb scas sbb xor inc (bad) nop inc repz pop sub dec cld sbb mov or jle out xor pop das sub stos add xor cmp into test ss sbb fisub popa or pop stos and arpl push repnz or adc mov push call notb icebp push enter (bad) cli repz mov out dec adc insb mov adc push xchg in pop minps test jmp popa xor fstpl cmp repz lods pop adc mov dec imul dec or mov dec adc pop pop imul adc jae jno jb adc (bad) out inc jge in mov add cmp dec mov add adc shrl adc in (bad) call add hlt fild adc jae and sbbl add fidiv push test scas push sbb mov jg jp xor insl (bad) mov xchg (bad) xor test js mov lcall shrl outsb sub shrl ljmp jge stc sub rclb jno adc dec (bad) repnz enter adc mov cmp push fisubr adc enter stos push sub push xor xor scas add inc or imul cmp popf movsl cmp adc push mov lock pop stos outsb adc dec lahf fs pop cmp fidiv cs clc adc jns lods test adc ror sbb xor mov mov lods sub int adc push cmc sub push add data16 inc jno and repnz sub adc mov cmp mov cmp xor cmp mov or add divl dec sub cwtl pop push repnz adc dec jnp out sbb xchg jecxz adc push lret in cmpsb (bad) (bad) notl mov jmp xor mov jo push push cwtl jns into cmc cmp fdivrl (bad) adc enter sahf and into (bad) cmp or in ud2 push add push cmp add mov and add inc nop adc add cmp leave test mov ror pop enter mov data16 jae xor addb lcall cmp adc pushf out push sbb or or adc fmulp push nop test push (bad) out (bad) inc mov and inc rorb xchg repz xchg scas mov ret cld add lahf xchg scas daa notl push mov cmpl adc jns out repz sbb popf sbb repnz out adc mov sarb clc push leave dec adc and xchg jne mov inc fwait mov decl push scas fmul sbb push pusha jns sub addl adc mov jnp sbb (bad) adc add fs adc dec and psubusb mov iret mov movsl stc push std scas xchg (bad) js fwait divl adc das jnp out pop iret cmp out lret lret pop mov aas sbb adc fsubs or inc push sbb leave mov rcrb dec mov aas (bad) and pop cmp adc inc call stos pop leave cwtl out xor testl sbb add add repz jb push inc std scas mov mov adc pushf mov adc jns adc cltd sti sub mov and mov jbe (bad) sub xchg mov cli adc jle cmp pop in cltd movsb cmp ds jmp cmpl aaa fbld lods adc loop sbb dec cli mov scas pop fimul cld or cmp (bad) and mov add xor and jne xchg push gs aaa setbe cmp mov mov or lds nop rclb xchg mov mov push int3 push sbb cld or xchg push adcl and lret adc xor and mov push jmp aas dec mov mov sar movsb push mov mov adc mov lahf (bad) xchg mov adc push push (bad) dec add xlat aas jno mov pusha sbb push or adc (bad) push jmp pushf sub movl jp fstps add mov jge dec mov enter and sub jle adc out dec notl lahf pusha ret add aas stos aam std xchg (bad) xor out in loope out cmpsb dec adc lods cmp mov dec aam (bad) add sahf push sbb inc jns (bad) xchg add mov dec popa lret and mov xor mov int3 add xor je ja and cmpsb or in popa sub std adc ljmp jb call in jne jns add push xor xchg inc xchg mov (bad) mov ret pop jb push aad (bad) stos test dec or fstl jno cmpsl mov lds adc mov mov loopne add jae pop push insl into repnz mov pop adc in pop xchg adc add xor cmc adc dec add pop mov adc or pop mov inc nop pop mov scas cmpsb xchg adc xchg adc in xor lock cmp enter rcrb rclb inc aas pop loope int3 adc lret jmp enter ja inc ret inc push in sub call je mov ja push adc jg xlat inc and and mov xchg pop inc push testl pop loop repz in cmp mov xor mov mov add adc rcrb cltd addl inc cmp push mov mov jae or repnz mov jp adc mov popf adc xor stos mov dec clc ja rcll les push adcl ret mov mov and insl add add adc lea adc dec jnp jge test xchg adc cmp xchg iret (bad) xrelease lock cmp adc movsb mov jbe jno push iret adc xchg or rclb loopne aaa sub lods adc jmp jb mov adc (bad) and loope and adc movsb addr16 es mov out inc je cmp test js add dec cltd mov xor sub int3 push rol sbb dec lret jb cmp jno xlat inc adc mov or pop js sbb pop and push ficom mov adc mov pushf or adc repz xchg adc add fstl jb pop out sbb sbb xchg fistpl add or and pop sbb hlt out imul adc roll and jno pop (bad) xor cld pushf mov int push (bad) in push shlb mov jp push add jno iret in ds add out adc fwait dec xchg mov adc pop stos pop xchg rcll inc icebp push fisub xchg xor mov int mov and jl stos xor add jnp mov repz jmp cmpsl cmc (bad) mov mov inc test dec mov outsb lea jae mov adc fsubl dec xchg adc adc adc xchg fs xchg cwtl inc adc lret sahf in imul dec xchg mov addr16 add xchg mov xor popf stos adc pop inc jo movsb (bad) cmc inc or jns (bad) adc das dec jno jnp push xor adcb daa jb xor xor and stos clc lcall lret shll sbb mov jae pop jg or xchg xchg adc and ret jno dec addr16 mov adc aas in repnz adc add adc (bad) call pusha adc pop pop sbb fildl mov in and inc int mov push sub mov cmp mov out adc push hlt movsl rorl mov cmc lret pop or mov mov mov outsl rcrb and add cmp sub push jae xchg pop addr16 daa push mov pop (bad) arpl pop adc sti rolb add jb or xchg je xchg dec and or leave loopnew pop push mov inc hlt adc lret ret das mov out incl cmc call xor sub loopne lret adc shll adc jle mov sbb rorb in sbb scas adc sub ds pop mov inc cmc dec rcll aaa xchg pop rolb cmpsl imul adc scas roll sub xor cli jmp ds js add fidiv dec or call sbb fstl lahf jno pop jb jle fmul outsb adc lods push jmp inc mov fnstsw add sub pop cmpsb cwtl inc (bad) sti jmp xor cmpsl repnz outsl xchg pop fs jb inc mov cmp ljmp cmp popf adc mov push xchg mov fwait (bad) xor jo imul adc mov (bad) aad push sbb pop lret cld adc pop in (bad) loope cmp outsb arpl jg fildll xor in es adc test pop inc js inc shl insl xchg add adc mov aas fnsave rcrb mov jns sbb in jno adc dec pop sub and push pop add sarb push mov sbb imul pop mov adc push dec xor (bad) ficoml add add dec sub adc mov adc mov lods aas xor sbb dec loope je or (bad) dec mov dec (bad) jge pop adc push mov int3 jl adc push nop out xchg adc add mov add nop hlt cld mov clc insb sti adc lock mov jecxz loopne and repz popa and stc adc xchg sbb loopne add jo xor mov fadds and mov jg jbe adc inc mov adc adc adc gs mov dec adc loope scas push adc add mov push fnstsw and xchg adc jo pop scas int3 adc cmp xor sbb fistp cmp loop test and pop adc mov xor pop pop adc cmp insl repnz ds mov mov xchg ffreep bound xor pop cmpl cmpsl jmp sbb aad dec and jbe stc add inc loope (bad) xchg rcrl add ficoml daa in jno sbb out repz mov push adc pop push test mov xor insb movsb cmc out jmp add imul cs (bad) repz scas testb leave bound rclb std (bad) lock or aad pusha fwait sbb mov nop int3 sbb mov ds inc sti sahf adc xor bound cs mov (bad) movl insl mov loope adc (bad) push ss sbb jne adc jbe cmp ss lret jnp adc leave sub scas pop and mov push xchg rcl adc dec push rcll adc outsl out (bad) rolb xchg cs xor std cmp xor sbb fxtract rol adc jns pop jmp pop cmp rcll (bad) test ror outsl mov or xchg stc pop jbe adc sahf in popa aaa arpl js,pn mov repnz jne or pop sarl sbb js mov mull sub sti dec aad test add imul mov or add cwtl aam adc jno popa sbb fimull push pop lods add sbb xor ret add aas xlat mov jle ret rcll push adc fldt or lds adc and test cli ds cs ret enter sti je repz in mov sbb orl ret adc scas mov sub push or daa jno adc cmp push adc push shr in repnz add sahf daa mov mov adc dec into sbb insb (bad) mov sub dec sahf add adc clc cmp adc and shrb adc popf dec push adc jno push sbb and cwtl insb xor jmp mov stos or mov add sti adc std (bad) jno add mov imul push or jecxz jg dec fisttpl push dec out mov fwait dec or scas adc cmp enter aas adc ljmp adc jo jle jno das repz pop mov adc dec pop cltd loop jmp push out add fcoml cld push add adc push mov push mov mov cmp adc dec xchg sahf test sub int3 jge xchg lret push pop sbb push adc jecxz daa es insl or jmp sub mov inc dec xorl mov int3 das adc pop mov fwait dec inc fcomip cmpsl push sbb mov push mov or fstps repz or mov add enter movsl pop movsb xor and push adc dec dec adc bound adc bnd and mov inc mov add int adc das out add adc cmp or pusha lea xor jo pop jecxz adc ret (bad) ljmp push fistpll cmp frstpm(287 adc hlt pop mov xchg int adc movsb sahf stos push jg aad nop in mov (bad) int mov cld pushf mov andl adc push pop cmp addr16 aam inc adc sbb notl xchg (bad) test popl add rorb adc hlt addr16 inc roll cmpsb adc nop lods mov loope mov ret adc cmp jp in adc mov dec pop cs fsts scas insb stos nop cmpsl and push mov mov xlat jbe pop (bad) jne sub push out stc xor push mov aas fcomip xor testb mov out repz icebp pushf stos (bad) in dec lea adc cld dec arpl scas mov add jmp mov (bad) repz xor movsb rcl jo out cli adc jecxz jmp mov inc pop shll inc repnz sbb adc add pop mov jno out sbb and lds mov in pop nop hlt dec lret sbb cmp xchg call or dec mov mov testb stos sub mov (bad) (bad) out pop (bad) push mov adc jg sbb xlat mov (bad) jno (bad) lret push loop loope lds dec addr16 sbb mov testb add jb add (bad) je sbb mov orl adc adc pop (bad) mov add ljmp insl dec jns and repz sbb aam (bad) mov pop jnp repz dec pop inc xor sbb mov push and cwtl jb loope xor hlt mov sahf std adc adc out cmp mov (bad) lods xchg cld fs scas in lcall aas jne pop mov imul push test mov adc enter pop pop rcrb pop xorb add push push addr16 fisub adc dec leave lods xchg and or dec icebp adc loope add jmp adc je mov mov jecxz sbb adc inc fnstcw loop iret mov cmovp adc push ja cmp sub in jae lcall pop inc lods xchg xchg add (bad) adc sbb xor pop pop leave inc test and ds push mov movsb jmp pusha xor push and imul jb mov test or lods adc mov adc sbb movsl push test int loopne or outsl bound lods pop adc cmpsb adcl mov jo sbb or and loopne jecxz pop mov or mov pop sahf das rorl adc or mov scas add gs sarb cwtl adc cs pop xor lar add and pop fsubl jbe adc ja pushf sti into inc fistpl mov mov pop pop daa pop (bad) ja or xor addr16 shl xchg jmp adc dec nop cmpsb adc outsl mov mov xlat adc and or jecxz cmpl add mov mov pop pop incl test add je inc es hlt dec in sub jg sarl adc push push jno mov adc cmp adc in or in in repz xchg cmp mov xor pop dec jo in (bad) out (bad) sbb or and rorb sub xor subl flds mov popl mov lahf xor cmp stos shlb or pushf repz loopne addr16 inc adc adc insl add mov adc fdivrs jmp adc lahf pavgb insl (bad) adc or dec adc daa and jb inc adcl push lods adc or out inc in adc out sbb xorb adc (bad) stos mov xor repz jecxz fidivr adc aaa stos cmp loop (bad) and inc int3 cmp add imul mov mov jg adc (bad) xor out sbb scas arpl fnsave cmp notl fsubrs xchg fwait push (bad) adc test pop icebp dec xchg mov dec in jle ds imul lods xor or xor or xchg xor sbbb cmc cmp inc adc push adc fwait inc aam (bad) call mov subl dec sbb push adc ret adc push cmp xchg out xor cli ret aaa xor mov jecxz fdivr jg repz shrb insb add adc push push sub fcmovu lret mov stos lds arpl inc scas (bad) insl xor mov adc fstl sub inc push mov mov lods adc in int pop mov mov xchg adc mov mov pop push push push daa adc arpl pop insb out cmp cmp mov mov adc rorb jae push xor scas mov xchg and test jle lahf inc aam enter mov mov std jp fldl adc and mov mov or adc jg mov mov xchg adc inc scas xlat mov mov cmp movsb js dec (bad) data16 (bad) arpl test pop sbb fsts mov sbb lahf jae rorb adc hlt mov pop and cmp dec shrl aad jge test sarl fwait cmpsl adc test ret pop sarb mov mov adc bound adc cwtl cmp mov dec cld mov mov mov push je or and jno sub sbbl jl adc test mov aam lds push xor push xor cld data16 daa jns call mov dec jo sub cli lods stos adc fcoml jne mov outsb repz mov xchg push decb adc pushf adc aaa aas jge push mov addr16 int adc mov jbe mov or sbb movsb pop adc and pop dec les movsl mov lea jp nop mov sbb test (bad) dec outsl stc pop add inc rolb inc or inc jge js scas in xor shrb pushf (bad) aaa es std adc (bad) mov adc gs aam int sbb mov adc mov inc mov pop or mov popa pop fldl2t rolb arpl jge mov jg dec das mov jb sbb push adc push mov pop call inc and push std pop popa mov xlat add mov fcompl loopne stc sub adc mov push adc decb adc and leave int adc cmpsl call out xor cli xlat inc movsl (bad) or adc xchg lock roll push jne pinsrw fdivl pop add or (bad) lahf popf dec adc pop mov adc mov ret jle add or mov in sub xor fnsave out xchg das adc add data16 xchg (bad) aaa push fstpl add adc jg arpl addr16 cmpsb pop ret cmc mov adc in mov test pop cmp mov incb int3 sbbl pop adc dec mov xchg aad push sub fnstcw iret mov repnz outsb aaa outsl xchg and mov cmp popa push in jno xor adc push pop out jmp dec icebp add pop sbb lahf cld adc roll adc (bad) loop ficom jmp adc xor data16 mov fcoms rcr (bad) pop fistl pusha out fmull out bound scas mov arpl repnz lea adc decb adc mov loope inc iret adc cmp add push dec mov mov arpl mov shl xlat sbb negl and add adc push mov adc mov (bad) lret adc mov sbb inc (bad) sub mov pop jg cmc out jno adc das loope adc pushf sub lahf stos insw rcrb jbe dec dec adc or mov ret int3 inc pop cli and and lret jl test jno xor rcll loopne xorb push xor sti out sbb outsb dec hlt adc pusha inc daa adc in xor mov inc add xchg inc ja test pusha outsl bound cwtl mov mov test (bad) xlat push std or in rorb pop mov adc mov xor data16 fstpl repz push (bad) mov inc cmc sbb jns adc pop or adc pop loope lock sub leave sbbb repz bound xor add push sarb fistpl adc adc add dec jge lods lods adc jl ret dec clc js xchg jg adc add incb xor repz or enter fdivrp in cmp xchg pop pusha add mov push jae adc jmp xor arpl mov add xor mov or xchg add clc jae xchg cmp sbb sbb rcll xchg adc push rorb adc inc adc test push popf inc dec push add or test mov jns sbb nop popa adc mov xchg pop adcb push mov sarl xchg lea push cs push xchg cmp fsubl push or cltd adc or xor xchg movsb and dec jne mov aas clc adc adc aam push adc and push insl ss jmp jns pop movsb adc nop mov imul bound pushf dec cmp inc aad xchg imul test add or (bad) jge mov xchg mov ret adc pop scas and mov jecxz outsb das (bad) mov rorl movsl or dec shrl out aam add push adc inc popa ds push adc sub xchg adc insl rolb mov (bad) je add out out mov push scas cli sub test ja fs aaa mov int3 push lret ja fwait rolb test inc sti cmp pop loop fdivrs xor pop out out adc add jo adc fisubr xor pop push call xchg lcall test aaa adc push or jns jge (bad) ret lcall shrl rcll fdivp xchg adc sti out adc mov imul rclb je push xor cwtl scas lods adc jp mov fstps pusha mov bound fcoml cmp mov orl mov dec addl pop (bad) lock and mov mov sub (bad) pop cmp icebp mov (bad) es xchg mov loope add adc dec pop repnz xchg cmpsl pop push mov dec dec cmp push repz adc cwtl fsubrl xchg ds add mov jno scas xchg xchg aad adc add (bad) mov adc mov dec adc pop in jmp jo adc movsl sbb popf or adc mov push imul xchg cs jecxz call or adc push xchg icebp stc dec mov loopne adc lds xor jge shll jl cltd popa adc int3 pop push mov mov pop jp jb jle adc in xor xchg (bad) les add push xor adc add mov cli cmp mov adc mov stos jb scas or (bad) mov out dec jl ja mov (bad) addr16 test lds push js mov mov imul sbb mov adc arpl jae in adc inc jns push mov lock sahf pop daa icebp sbb cmp gs push adc testb mov cwtl iret adc and xor daa add pusha and add and jge sbb add or shll push adc sbb repz mov rcll or orb (bad) repz jmp sbb pop popf shl outsl push sahf sbb mulb fcoml sbb xor in cmp cs mov cld and lock mov fstpl sbb ret movnti sbbl xchg or push cmc and test fwait ljmp xor cmp mov icebp mov add pop push (bad) mov cmp (bad) ficom inc xchg fistp fcom or cmp cld lahf xorl mov sub adc fdivs adc (bad) push jae aad loop lcall sbb (bad) iret std adc lock mov adc jae outsb rcrw sahf adc mov dec adc mov cmp andl push je in adc call aaa jle adc xchg xor lret fistpl sti (bad) les xchg sbb popf call xchg push (bad) icebp pop cs mov pop add pop jge je aad push sub rolb and cmp in mov add insb adc mov sub gs mov adc jg movsb adc xor sub push ljmp jmp imull (bad) imulb pop adc jnp push (bad) sbb add adc std aas push (bad) mov imul mov sub sbb mov (bad) push sbb adc call adc dec cmpsb sbb mov frstor (bad) pop pop push int cld adc dec scas inc pop sarb adc adc outsl jno lahf pop mov pop mov imul pop push push jecxz push adc shlb mov push lods adc mov adc (bad) xchg mov or int inc adc clc cmp fcmovb mov adc push into scas das jno adc lds pop jo adc xchg loopne pop ftst fnsave in and push int3 sub loop cmc sub in dec add mov sub adc adc nop loope fstps mov jmp insb push shl jmp gs mov xor nop out pop jmp mov sbb adc pop sbb loope jnp add and dec dec pop xor push or push rorb push add sbb clc and mov pop rorb jne xchg adc loope mov inc (bad) xor aam subl data16 testb enter fdivs sub pop xchg lcall ljmpw cs lret (bad) adc adc jb jg cmp inc sbb dec outsl mov sub cmpsb add adc (bad) lock xchg adc pop ficom sub xor outsl push stos add adc xchg decb (bad) mov rclb (bad) ret jnp fwait xchg idivl pop cmp lock adc or insl mov out add lcall in mov jo pop mov sub cmp mov outsl sub les rcll cmp lcall stos test jge (bad) fiadd (bad) pop (bad) cmp fisttpll jp mov or sub add mov add xor movsb adc mov gs add popa std imul inc jne icebp push xor mov add ds xor pop popf add xchg pop adc ror movsl add or sbbl sub aad xchg repnz push test (bad) hlt adc repz mov test negb jp add adc xor adc andl push adc jl xlat or xor adc test or out test ret push gs jecxz out inc fcomip scas mov daa push mov or inc mov rorb pop jno std inc adc ljmp lret rol jae mov cmp pop xor js ss pusha lea xor jno pusha ficom call ljmp mov hlt nop dec adc test adc sbb mov push inc adc mov pusha stos icebp ret push jmp dec iret or xor int jg or xchg add stos cmc cltd cmpb or sbb adc loopne sub mov (bad) movsb imul jecxz fldenv or call in pop xlat mov dec mov loopne lahf inc insl adc adc and (bad) sarl rcr xor lea popf repnz (bad) daa test push jnp adc xchg out jle outsb lds cmp rcl pop mov fimul add sbb call mov mov mov sbb cmp stc ret sub adc icebp push lahf imul cmp test clc insb fistp ret add jb jno sbb leave push mov std cwtl lret fistp stc lahf rclb jbe add mov add adc mov repnz cmp test sub into adc push pop adc xchg lret inc shrb push aas dec lcall and dec mov aam and mov pop pop call lcall cmp inc xor xchg mov push push (bad) or (bad) fdivl adc adc lcall enter shll fistl popf sbb adc jo test mov nop push and mov sub arpl lods fwait test fisttpl pop adc add xor push inc and adc push mov stos adc cmpsl aam adc std loop xchg mov sub add mov adc aaa sub adc mov loope das enter in sbb sbb and xchg (bad) mov adc cmp in pop jecxz jl shlb adc (bad) imul leave test jecxz and pop add adc adc sub or sbb xchg movsl mov xchg dec test adc pushf jno scas jmp je push ret dec ss pop fucomi (bad) orl add push dec sahf push adc dec (bad) bnd and adc push xor sbb adc mov xor jle xor sub adc push movb pop not imul faddl adc adc lods xchg notb test sub mov cmp sti lea inc adc int out adc mov (bad) jmp stc fisttp adc xor nop ret push add ljmp adc cmp dec xchg nop xchg mov ss xor cmpsb in pop dec lea and xchg stc out arpl cld or pop adc imul cltd mov xor mov add cltd fwait push icebp inc or mov push adc mov adc ret cmp mov jmp ljmp add nop adc sahf outsl jmp adc cmp xchg divb push fisttpll cmpsl adc cs pop test nop mov adc cld dec fistl scas mov sbb call sub repnz mov or pushf push push ret pop mov mov pop leave mov repz sbb cmp sarb repz push fwait adc repz add pushf mov addr16 xor adc xor lea imul out cmp push xchg in loope out mov mov mov xchg push adc stc repz cmp jecxz jo outsb mov lock fistpl lods sub inc dec xlat addl add pop push stos sti (bad) adc enter cltd fistl mov ja out and mov xor cwtl repz mov dec sbb mov lret sbb lock data16 or push ficoml push mov adc notb ret in adc and xlat dec fstpt sbb loop mov aaa test sub push cmp adc (bad) aas movsl mov jg outsl sub adc jbe bound fs ret push xchg add (bad) rdtsc jmp aaa xchg push cmp daa pop or dec addr16 stos adc das bound or jmp fs xor adc push mov pop jo fstl pop daa mov nop icebp call pushf out dec lods mov aas jae adc jp and xchg arpl lock mov inc adc das jp loopne lahf and inc aaa jne jbe out (bad) adc mov add or sbb dec pop into sbb jns inc in mov or or fadd (bad) jns data16 and mov dec or test aad fcoms add jne mov int3 lock repz adc sub adc adc mov mov pop adc mov call adc inc nop xchg mov icebp mov xchg fist sbb jecxz adc (bad) xor gs popw int3 loope adc mov stos add adc fist aas xor js ret lea sub xchg dec sahf sbb cmpsl adc add ss jns mov dec adc push push out aas and enter jle dec add jno or fistpll hlt xor sbb ja jecxz cltd (bad) es or pop sub pop call test lock sbb xor adc sub ror dec lcall xchg adc ds mov adc adc pop cmp adc ja mov test js add push (bad) mov dec in push jno fisttp ljmp (bad) adc out or jne inc adc add lods fstl in loop add sbb js xchg lea sbb and decb and inc out and mov fimull cli sbb push mov adc and mov sub or mov and pop add xchg adc jl sahf adc scas fcomps mov mov jno sbb out and cmc (bad) jmp adc sti adc sarb ficompl mov mov mov pusha mov push popf ret cmp out cli pop dec and sub or push mov jae adc jp push push out cmpsl push mov adc out in adc mov mov mov daa lods push adc pushf hlt xchg adc sbbb icebp push inc or test sti mov mov loopne ja aaa adc in faddl (bad) lahf sbb test daa mov or jne xlat pop cmp mov lock jmp xor cmp adc jno repz pop xchg add dec sub push mov push bnd mov or lahf jmp push mov (bad) insl xor adc icebp test les (bad) movsl inc lcall adcb pop mov mov jb push adc pop xor xchg jae jne rcll inc sbb std xor hlt mov (bad) xor sbb aad adc add jge lods push fbstp imul cmp and mov push (bad) aad add hlt inc cmp pop and inc int adc fs xchg fmuls iret jmp cmpl mov xor add sbb call adc das into xor jne setbe insl mov test push adc or pop xor cmp dec xchg xchg cmpsl inc add cmpsb xchg aas add mov xchg outsl pop add sbb push in fidivrl and dec (bad) jns fldl jp inc mov fs push stos rcpps lods sbb iret or nop sub or imul dec stos push int3 cld jno cmpsb sbb scas test jae adc into cmp xor pop repnz out or xor cmp xorb mov outsl test cli hlt sub inc stos mov out scas mov adc mov data16 imul xchg jo (bad) bnd adc and movlps or xorb xor and push add pusha inc or xor fsubrs push or ss clc adc cmp lahf or (bad) jb enter jecxz sub adc mov jns sbb cmp mov xchg mov fs stos aam jp mov push int in jne jno xchg mov pop push (bad) std clc push rcll mov sbb je dec mov push repnz pop adc jecxz mov mov adc pop sbb sbb adc lods and rclb pusha pop shr test clc test jno fidiv adc rcl sbb pop xor xchg jno dec mov mov cmp add lret adc mov xchg xchg push rorl or in fwait jp out xchg (bad) not mov adc aaa cmpsl je mov adc divb js adc inc dec test sub clc loope hlt fist adc daa stos mov pop scas xor arpl cmp jecxz dec leave add rolb jno mov stos das addl xchg adc ljmp popf outsb ss xor or (bad) dec adc and pop xorps insl push (bad) fnstsw cmp add popa dec cmpsb inc cltd lcall mov into jnp mov sbb aas (bad) scas or les in inc lcall leave inc dec or mov pushw out (bad) paddb sub xor xor push (bad) jg int3 jbe sub outsl insl add mov fistl aas or mov pop sti or iret cld ror ljmp les inc insl shlb scas rol lsl pop movsb cmpsb mov ds aam rcr fnstsw (bad) pop add push adc lcall fs aad xchg mov add scas mov adc loop jp adc xchg jmp fistl adc inc adc pop adc lods jmp sahf push scas lea sbb (bad) xorl sti cltd mov call int adc push aaa mov or and out lcall arpl mov incl jg rcr test out dec fcoml xchg insb add adc lahf loopne mov push mov push loop adc rcll out mov push popf popa mov jl push imul mov adc imul xor incb test mov shrb jg xchg test call in out inc mov clc or bound nop mov pop popa or dec fist sub xchg add daa push xchg outsl insl jns shl jg cmpl add dec sbb (bad) or sbb xchg pop adc test pop adc mov out adc pop out adc inc dec push popa test mov sbb scas lock movl sbb sub dec pop xor push xor jmp mov fdivrp scas addr16 add adc outsb ljmp cmp (bad) je lds mov adc or cmp sahf sbb adc dec mov push repz push fwait xchg pop add shll xchg push adc emms cltd (bad) xchg and sub les punpckhdq mov mov rcrb out sbb sbb dec stos (bad) std mov mov jo daa dec inc jmp movlps sbb xor in mov sub ds and movsl out cld mov pop mov ds (bad) adc rcr repnz test pop and int imul rcrl add into fdivrs gs or mov in mov popl or mov sub mov pop movsb inc adc pop pusha jae mov mov nop ret (bad) pop enter dec push adc push into mov pop xchg dec add bound and adc sbb push adc xor fstl dec into pop add jecxz pop call or jns fs fstl fistl (bad) hlt sbb jle xor push imul or shr pop movsl outsb adc (bad) jecxz dec mov (bad) cmp xor adc dec push and mov mov into sbb das mov pxor push inc popf sbb es push bound mov or lock and push jl gs jmp dec sbb adc push push sbbl add xchg pushf mov add sub (bad) push stos xor shrl adc mull and mov add push mov cwtl dec xchg ja dec movsl call gs sbbl sub adc mov jl mov les mov cmpsl jo mov pop adc into dec xchg mov clc push add inc push lods add je scas aaa xor hlt (bad) clc mov in xcrypt-ctr cmpsl fildll sbb loopne inc aas daa xchg shlb (bad) test mov pushf adc sbb cmp outsb lret mov fcompl push clc add (bad) adc xchg mov addr16 xchg add adc test sub pop adc mov cmp into mov xor out cltd in inc jne mov and xor or mov xchg or das mov cmp movsb fcmovnu push cli inc adc pop mov gs xchg push xchg sbb add insb adc or mov and cmc inc mov (bad) repz inc dec hlt cld jmp out push xchg psubsw mov clc sub xor cmp mov (bad) xor push lods mov sarb stc pop push cld xchg xchg popa adc hlt divb scas insb scas loop adc mov mov (bad) fcom xor and adc loope cltd pop rcll (bad) sahf sbbl cmp add pop inc xchg and push lret mov jge adc clc in jae lahf imul cmp sbb cmp (bad) (bad) imul lods ret shrb adc fwait xchg lret orb insl clc sbb loope add push jl repz pop mov jns inc jnp pop pop xchg (bad) mov xchg sub scas cmp mov cmp and and inc jbe dec test pop stos push jns (bad) or cmp xchg adc sub mov stc or xchg xor lods fwait adc pop test mov dec loope cmp dec into shl or push mov push and adc outsb mov mov mov mov sbb add adc out dec adc adc xor jb popa cltd insl add adc xor jecxz adc fsubrl dec imul jnp ret (bad) xchg adc aad loopne add fsts xor fwait popf outsb enter jnp adc inc and adc adc leave jecxz xchg adc sti (bad) mov test hlt adc dec push iret dec test inc movsb cld adc sarl fisubl jecxz,pt lds aam jnp iret mov adc (bad) hlt adc fst out xor cmp popf cmpsb or cld (bad) adc iret lahf cltd mov pop enter cmp scas pop adc andl cwtl adc jp jle inc mov cmpsl aas sub mov cmc adc outsl cmp mov ret add shrb mov xchg das dec cmpsb mov mov add jno add into mov fisttp add movsb xor clc shl scas adc fiaddl mov add inc sub inc ds rcll fnstcw add cmc aas fistl sbb roll adc es xorb adc popf dec push popl cmp scas adc mov adc lret dec pop jae mov addr16 pusha lcall (bad) sbb arpl add aas pop cmp or adc pop in les sbb adc push jecxz rolb xor pop or aam int3 mov icebp mov add sti test ljmp adc jnp mov (bad) or out mov fidivr out lahf adc pop bound adc sbb (bad) cmp add adc pop ljmp and or fwait add xchg sbb nop subb int3 adc jbe fs pop outsb adc call cmp adc in bound mov jne xlat test mov inc add adc xor dec shrb and jns adc pop stos pop lcall pop mov testb inc xrelease sub mov mov sahf push repz sbb mov mov jecxz (bad) adc adc push adc arpl fwait jnp jmp push add adc add adc sub mov lds adc lods ss stos xor mov adc sub or dec adc cmp rclb inc movsl inc outsb push xor inc pushf push or and call out mov mov popa mov movsb cmp push adc adc mov dec test testb (bad) pusha push loope cmp in push in repnz ret repz movsl enter xor jns add stc push push mov outsl daa jecxz imul jo xchg sbb xor mov push mov cmpsb add xor or xor adc sub aaa dec mov mov mov inc (bad) rcrb call adc mov sbb dec add inc enter mov push ficom arpl test icebp mov cld in mov adc aam in cwtl movsl hlt rclb push stc loop mov jecxz ss add adc xlat mov jmp adc mov mov mov stos jmp sub rcr pushf js mov pop pop cmc shl stc adc mov lods dec fwait jns add sbb imul insl jle lea fstl xor aad pop fmull cwtl cmp ret popf add mov mov aas notl loop bound and or cmpsb jae loop cmc adc sbb lods adc mov adc es stos push mov cmp mov adc (bad) xchg push daa movsl or (bad) fstps aam std jo scas lret ret adc mov pop adc (bad) adc cmp into ljmp shrb adc mov xor es adc pop (bad) mull push into adc scas sbb in repnz lds inc dec adc pop pusha cmp in ja xor insl sub pop repz xor jle inc jo xchg cmpsl or adc xor inc mov hlt xor dec and int3 mov aam sahf pop cmp scas or adc repnz sub movsl repz fimull popf dec scas dec pop lret xchg sbb adc (bad) sti je cs push aaa sbb rorb pop js push inc xchg push (bad) dec in mov mov jg pop jo adc out adc lods adc imul adc mov jo lods and in add sbb into outsb nop inc hlt (bad) adc repz rcrb cmp jne movsl bound loop jae dec dec sub adc lds adc mov xchg or das sbb dec mov push nop jno popf adc and cltd and imul dec jle mov cwtl dec adc cld mov mov push repz adc icebp pushf inc push adc shlb mov (bad) rolb jl mov repnz xor dec xchg loopne or (bad) dec add sarl fisub call dec sub jno out out ret sbb cmp xor fnsave push fisubl adc (bad) shlb add lods les rcll imul push adc pushf lds test pop shrb cwtl inc lock pop mov fisttpll jmp outsb lds push test xchg insb mov lret jae cmpb jge int3 mov pop fcoml and jmp push ds jge sbb mov and js sbb adc sbb (bad) mov xchg mov shlb and cltd loopne xchg push mov out add mov sbb adc ljmp in sbb cmp pop ss clc inc mov loopne xchg dec scas mov inc add ds xchg pop mov iret popf stos mov add roll in sub adc stc and jnp cmpb hlt movl inc adc inc mov subl cld dec pop mov sub mov adc lret repz xchg sahf cmc cmpsl add scas jbe add ss adc jge adc adc xchg icebp pop adc jp push sahf mov jle xor xor stos pop xor jno push mov push inc in mov mov lods jne popa adc pop stc add adc sub mov jns or mov jge fisubl aas imul cmp (bad) test xor into add mov loop xchg jle adc inc push lahf pushf test mov cmpsb dec adc negl xlat dec in dec xchg repz lock pop rorl lea and mov movsb in pop dec jg inc mov inc cli (bad) dec mov push push ljmp setle mov pop sbb (bad) or adc (bad) into xchg outsl fcomps cmp pop and cmp sti mov jle sarb rcll jge cmc enter fdivs loop jno movsb add push xor in or and icebp jnp push push adc lcall in (bad) pop push mov sbb jmp movsb xor push push inc imul outsl out cs add out mov adc ret les xchg sbbl arpl mov xor mov inc sbb pop jne xchg mov xchg sahf xchg inc pop push (bad) fdivr dec xchg mov icebp inc scas clc ljmp (bad) dec lret mov or adc aad ret adc test mov sub fisttp pop hlt test shrl jne stos pop daa iret inc lea fwait xchg and adc repz or adc push scas dec mov insl sbb pop adc jb adc hlt inc pop mov cmc pushf (bad) (bad) repz nop mov xor arpl lahf jae ret adcb ret jbe lcall nop jmp jne mov ds test adc iret in xchg into push adc xchg lret repz pop add iret rcl jno jnp sbb sti insl pop adc in add xchg or or movsl test leave adc ret dec jnp mov (bad) testb mov add mov pop stc xchg mov add jno repnz jnp or or (bad) repz pop in fistp pop daa clc add mov popf out fdiv mov fstl adc jge mov mov fwait push insl stc ss adc testb or or sbb and fcoml (bad) ficoml rcl or (bad) mov out jge xor mov shll pop push movsb fnop sbb ja adc cmc shr sahf sub or pop dec mov push pop lods push out movsb movsl scas inc pop pop addr16 pop mov lahf xor or lds adc sub xor and xchg xchg rclb sub pop adc mov adc mov fiadd frstor or outsl xor push mov (bad) adc aam xchg popf sub (bad) jmp and (bad) popa or nop cmpsb mov or sbb pop xor mov dec inc insl add in sahf add imul std clc sbb adc add roll gs adc jns mov adc (bad) int3 xchg pop adc push adc adc in pusha mov fsubl adc push test rcrl rorl xchg pop pop adc pop clc incb mov lds nop scas mov lods and outsb aaa nop pop stos lret jno les lcall mov lea gs ljmp cmpsb xchg rcrb mov inc ret movb adc mov dec xor rclb xchg adcl mov adc cmc in xchg pop xor or ss push daa out rcrb cwtl jnp or inc adc int3 push xor mov dec or mov mov or mov call push pop xor jae xchg scas mov xchg aam or cwtl sub jae lea (bad) mov sti mov xor sub jbe aaa lods jecxz xchg push adc repz repz xchg xor lret cmp push inc sbb test push mov arpl je mov adc divb adc jl mov ja mov loopne mov sahf pop stos or jne or add call loop and and lret inc popa repz jecxz int jne or pop cltd push jmp inc arpl xchg jge mov jmp fisttp jae adc inc mov adc (bad) lods aad int ret jge cld inc mov loop dec mov pop popa push pop adc (bad) jbe push jmp mov test out push outsb xchg sub inc push push push mov adc sub sbb int3 jns add stos mov mov outsb xchg adc or xorb lds pop nop aaa sarl jl stos cmpb xor cmp repnz sub lods or adc xchg jbe into mov xor or or jns inc inc sub dec loop repnz and mov pop add lret rcll lea dec rol push aas test xor push repz movsb adc fidiv push mov incb cmp dec adc and pop mov (bad) shl adc stos push les scas pop jae sahf nop dec cmp sbb adc pop repz sbb cmc sub dec add popf xor jp lock aaa or cmpsl adc sbb mov pop add adc mov add mov not xor adc stos outsb push (bad) out add add ficoml lahf xchg mov jns outsb iret aam jbe loopne cli ja insb das inc xor (bad) or int3 mov (bad) mov push inc xchg or pop xchg jge loop idiv jbe je cmp std adc sub (bad) fstpl push fcomp (bad) (bad) mov adc aas pop cwtl xor or out xlat push adc jg sub cld ja sbb dec mov js mov sub xor (bad) out add or jno (bad) cmp mov jbe fisttpll btr test xchg and or lds and push adc xchg mov aaa jnp jge jg fsts push out xlat sub inc dec xchg push and sbb stos add cmc dec inc cmp jne test (bad) mov pop out and iret xchg jge mov ds adc sub adc push lods sbb lcall jecxz faddl add inc adc repnz loope mov outsl sahf aas adc aam adc push jns ja,pn lahf andl and pop loopne stos mov push dec add (bad) in bound outsb dec adc ljmp xor or dec pop mov adc dec mov (bad) lds inc test xchg loopne nop cltd (bad) inc or cwtl inc loope out adc mov pop and sbb push or mov dec xchg (bad) pop es dec gs insb outsb imul pushf nop nop mov call jno adc rcr sub push pop xchg cmpsl fbld sub adc inc scas enter xchg shrb push test pop or std push or sbb jp (bad) cmp jle xchg std fistpl or lahf add sahf adc xchg jbe repnz inc je hlt adc adc repz loop mov out xlat test push sub je dec and pusha push adc xchg xchg iret jae cmp mov xor int3 stc sub add sub bound mov sub fwait jmp dec cmpsb (bad) js cmp dec test popa pop xchg push aaa cwtl add mov mov xor adc push inc fdivs xor in adc sub jmp stos mov mov adc push rorl push xor fwait adc mov adc scas jb or daa in into cmp fnstcw pop dec push xor mov mov hlt nop mov sbb dec ljmp xor mov adc in movsl jbe adc xchg mov mov inc cli mov and out or jg sub xor mov adc add aad lret adc inc adc fsubs hlt movsb aas div pop inc test (bad) (bad) fcmove call sbb lock test mov push jecxz cmp xchg movsl into jge mov lds and push aam loop adc int imul adc (bad) jp pop ret sbb into inc popa out pop or in fsts adc stos arpl adc mov mov scas mov mov adc shlb out inc mov sbb jmp push lea dec pusha lock lods nop imul push mov xor loope adc outsb gs mov push mov popa je out mov and imul stos jo sbb adc add add loop xorl cmp adc add or test adc xchg int fist adc sub adc xchg add mov xchg add arpl jae push cmp sbb out jp xor fcoml or adc or stc lret fstl xor sahf int mov add push ja pop stos mov aas sbb jne jl add jbe arpl adc (bad) mov sbb loope adc add or fcomps xor xchg int adc add arpl or repz jle pop fmull adc pmaxub ffree adc cmp cli add cmp bnd adc lods cwtl adc or mov xor mov dec inc lea push addr16 jmp inc xor pop out and lret pusha xor aad and stos pop adc loop dec mov fwait mov fisttpl jae xor (bad) dec sti or adc cmc adc pop cmpsb adc or in ja iret push adc mov into rclb pop fdivr loopne rcrb repnz mov ja jb xchg adc div add jbe,pt pop push pop call add cmp ljmp mov (bad) push mov scas mov xor lods mov cmc jne aad rcll push sub arpl je xchg xchg imul jl fisubr mov and cld dec inc adc mov call fsubs repz stc dec mov out or jno iret stos adc faddp inc shrl imul mov aaa adc mov daa mov dec fnsave mov xlat scas mov nop jb scas or insb push in mov adc call lock sub mov (bad) xchg add cmp in insl stos ret (bad) insb adc mov (bad) jmp cmp and mov adc es lret mov shufps inc mov inc leave jle inc adc push push or (bad) cmp mov jle mov fwait mov pop insl sbb cmpsl mov xor scas outsl ds adc xchg jmp mov loopne,pt dec aas xchg scas add jnp xchg ds adc jp (bad) mov rcr in inc scas mov arpl pop mov notl xor add mov stos adc out push js in adc cmp or fcoms pop aad call aam stos sbb cltd mov pop or loopne inc xlat mov cmpsl cmp pop movsl out adc xor imul jnp cmp inc mov icebp dec insl out mov lods pusha adc roll fstps mov js cltd popa cvttps2pi sub sbb in push stos lea sahf fldt push add adc pop inc adc mov pop mov mov int aad xchg test movsb fucom adc cmpl aaa adc iret (bad) pop adc jg dec push sbb sub cmpsb or xchg repz sub inc (bad) hlt inc or aas gs pop into adc mov sbb adc mov mov xchg popf leave add push or inc outsb adc push (bad) test add xor or lds ljmp fsub sub loopne jg mov in mov and fs xor mov in add adc jl mov lods xor inc pop in xchg pop adc ja or cmp sub inc xor les test pop push pop adc leave mov dec (bad) lock dec es imul out xchg mov orl adc repnz add stos push insb lcall inc pop adc je cmc daa adc into stos loop jbe inc adc cmp imul adc pushf js push call mov xorl outsl (bad) and xor xchg xchg adc mov adc pop sbb ljmp mov adc dec adc rclb and cltd cmp mov ja jmp pop call (bad) push adc clc in sub movsb xchg mov push mov lahf adc sub and mov mov bsr (bad) pop xchg fcompp inc imulb (bad) repz mov std sub adc movsb fldenv or dec mov fdivs fildll dec loop lods pop insl pop mov mov flds insb cltd out sar (bad) adc popa inc xor call lods lock repz pusha hlt sbb inc push push fmull dec imul repz push leave mov mov loope js rclb mov sbb sbb cmp sti add mov push outsb lock jbe add adc mov iret (bad) mov or movsb lret xor or jns bound mov dec imul or xor xor sti push mov in adc test jno jns mov ret add dec xchg jmp fs jecxz out stos mov mov inc std cmp inc add push mov adc xor and sahf outsb and adc sub les adc and mov sahf dec rol imul mov lea mov cmp pushf fcoml sub cli cwtl adc mov push adc cmp lea dec or push adc adc cmp and adc es mov xchg (bad) hlt stos test sti daa call std mov push (bad) iret pop mov xchg scas lea rcl stos fwait icebp sub (bad) xchg pop push pop fisubl cmp icebp test xor mov aam ss adc popa lcall les mov mov xor pop les mull mov mov mov gs adc jae jg orl adc dec jnp push sbb testl xchg mov lret add aaa add push iret cmpl mov enter dec das inc in or in adc pop push movnti (bad) jnp adc ficoml scas adc mov dec adc aas enter add negb push sub aad adc mov loop mov daa icebp out scas or mov das cltd adc cwtl jnp adc subl ret lods out shrl or cmp cli sbb insb jno sub inc out hlt out or test mov shll jmp mov in pop add and and xchg das mov popf outsl ds cmp pop mov imul daa xor inc out pop clc adc jbe mov adc je (bad) sub pop into inc mov adc push loopne cmp xor lock mov mov inc add add mov scas pop and pop arpl dec lcall dec nop mov push lret adc dec dec sti clc dec ret repz jle sbb pop lea jb fisubr test loope mov aas push mov js repnz pop (bad) repz push daa ljmp dec mov push adc mov rclb cmpsl es mov sbb out sub dec je cmp rol rclb into jns (bad) (bad) repnz adc cmp push dec mov inc mov or jno mov mov int3 xchg push into adc das mov mov push pop ss adc (bad) push fildl sbb or mov int3 adc jnp mov dec jno adc (bad) pop cld mov jg mov adc add fs sub xor jnp or mov inc adc shl adc mov mov movsb or push fist aas outsl xor sahf lods enter mov inc ja dec dec xor cmp xchg out and xchg mov adc je repz adc lock adc cli xchg or and aaa jne cmp aad mov cs jne in shr lods sub mov (bad) (bad) xchg adc dec sbb pop (bad) and adc aam adc xchg iret dec push xor movsb adc or adc inc adc or test xchg mov jns cmp pop aad dec xchg xchg inc or leave mov jbe repz add in lahf cmp lods pop ljmp scas lods mov xchg pushf test push movsb or or popf adc into or mov ret ds push jge lret popa adc (bad) daa and call mov adc jb sub out sbb (bad) cmc and inc arpl les mov orl int3 or xor pop jnp lea adc rorl sbb loopne adc jp sub cmpsl jge lds or aam xor mov notb adc pop cwtl lahf jp pop adc cmp adc mov mov pusha xchg lods pop lcall pop sar ljmp jno sbb rcll sub pop or insb add das cli inc dec adc xchg adc and nop (bad) int adc adc xchg xchg pop sbb (bad) sbb mov push (bad) push lock hlt mov enter cmp cli repnz fwait (bad) xchg sbb push jns repz (bad) faddl adc jg mov xor pop dec or lods mov dec rclb mov inc sbb xor add clc das mov sar popf imul mov data16 xchg mov adc mov mov inc and mov bound fsubrl jb or aad or lcall add sub xchg inc inc add cmp add mov push add out clc mov aas sub scas cs mov adc cmp jmp mov mov mov push divl adc inc dec jl sub insb sarl rolb xchg add pop pop adc aad in lock xlat cmp ja add xchg (bad) ret mov inc xchg and inc loop push jno adc lea cwtl lret fld cmp fwait cli mov pop xlat in inc pop shr adc ljmp iret (bad) cmp push sub testb stos ds fstp mov add mov jl rolb insb js aas jo (bad) (bad) adc jg sbb lods stos aad sub scas or or pop fsubp and inc ljmp out ret cmp test adc xchg cmpsb adc imul leave jns lods icebp ret sbb pop jno subl dec dec push adc mov or mov or and repnz (bad) or cmp push jmp sub or or mov mov dec push xchg fstpt adc lcall int3 mov in xchg lods lds push aaa jmp lcall mov adc outsb test jno les push scas adc outsl dec test (bad) push je nop outsb adc adc mov push sub pop mov push xor jge arpl pushf adc adc sub (bad) and int3 pop adc sarl in adc and movsl stos in stc xor jge fadd popa sub rcll pop dec adc ret and stos push mov pop jne aam jp adc push pop cmp sub jecxz adc mov (bad) push mov jb add test or or push icebp or adc gs adc inc mov adc xchg cs int xor add pop xchg push fsts decl jnp xchg mov sbb inc push mov mov fistpl push imul jno inc push or test pop xchg out push push sbb imul mov lods xor out lock inc adc dec adc outsb dec add xor mov sbb ret notl inc cmp add mov add jbe mov mov adc fnop jmp loope loop pop pop jne pop adc sub std repz (bad) sbb and pop and xchg sarb jecxz push sbb sub add aam sahf mov push scas hlt ja inc and pushf call xchg lret adc xchg sub in mov sti mov push repz inc gs rorl sub mov adc mov adc inc icebp test mov cmp js and shlb frstor aas pop test int3 mov repnz mov and addr16 adc and je jno ret mov pop or adc clc push pop fs jge (bad) (bad) adc icebp (bad) cld adc sbb xor cmpsl pop mov scas cltd sar adc (bad) push cwtl adc sub xor adc sub repz aad loopne adc cmc outsl xor xchg lods adc mov mov or lcall jmp mov adc mov add (bad) cmp (bad) mov add rcr nop es sub les test adc faddl pop in cmp jbe je cmc add sar push mov mov call jmp mov push hlt cmp sbb lea xchg and mov pop mov insl sbb cmpsl repz loope mov fnstenv xchg inc mov enter dec out decl ljmp jno adc adc add dec push scas sub (bad) mov lcall adcl push jge (bad) adc mov pop outsb adc aaa and jmp cmp ficoml inc lcall push mov insl lret or pop inc adc sub es add xor loop xchg fs gs aaa inc add roll xor out adc loop mov dec push popa or jne mov stos loopne addr16 pop lock mov cld push orl (bad) pop xchg adc push into fwait adc xchg add jo mov push sahf iret bound and nop test test cwtl adc sub leave sub cmp jp or fmuls push mov push jo sub adc jno xchg leave mov jmp repz int ljmp xchg jl aad sarb sbb adc je ss cmp mov adc lods add fisttp test and push std push add (bad) mov add mov fcoml adc sub push pop outsl push dec adc fistpll adc aad (bad) imul mov nop cwtl jb adc mov loopne sub sub ret movsb mov (bad) fsts data16 in push mov fnop adc sub sbbb jecxz mov sbb cmp add mov and movhps aaa iret jne outsl push ffreep sub sbb adc xchg sahf adc xor inc loop nop adc adc xchg mov jno mov test stc sub bound pop pushf mov imul out cmpsl (bad) pop and adc inc jp lea mov or nop adc ss adc out js out fstl cli inc rcrl or push (bad) sbb mov movsb inc sbb pop lock jge push adc push xchg cmp ljmp or cmpsb xchg xor mov xchg jp arpl ja push ret int3 pop or cmp jb js mov adc clc into and icebp or pushf leave xor pop faddl add sbb cmp adc clc mov jo cwtl jge adc mov xor out mov add clc xchg adc loop rcr push mov inc rolb imul popa and (bad) add mov sbb (bad) jae inc rcrl cmc adc shlb imul lds jmp insb push addr16 ror lea call lods and push xchg into mov dec jecxz mov adc pop lods lods xor (bad) repz popf or mov and dec adc mov add cwtl aad sbb add and dec or sti push adcb add sbb jecxz repz (bad) xor pop push pop cmpsl inc adc sti aam and cmp push adc es test ds jl mov push dec mov inc adc je lahf loope xchg stos inc mov or xchg mov or mov mov mov mov mov cmpsb in pop icebp xchg adc imul mov pushf cmp pop sbb out dec jp mov daa jg in push call lods adc xlat aaa mov jne enter mov adc dec icebp jg js inc jle mov push adc sub or movsb adc mov aaa xchg adc jbe sub orps adc mov aaa sarb xchg push pop sub pop adc in fmul mov adc inc pop cmp repz adc push pusha loopne insl and adc jle lea fldl xchg rclb or cmp scas mov test jecxz mov sub mov mov or or adc add stos ret add mov mov adc ror xchg pop adc movsl in (bad) xor ds icebp mov inc cmp push gs iret or data16 jmp rcll xchg daa leave fisttpll sbb cmp mov xor popa jb int nop movsb test dec out or sbb xor mov btr push insb lods ret hlt pop in adc test std (bad) sub cli jno mov add test roll fwait (bad) ja aas adc mov repnz and jbe test jle je stos enter lock (bad) adc mov iret xor inc jecxz mov pop movsb cmp dec dec add movsl ja adc outsl rcrl je xlat add inc add inc fcoml fwait pushf repnz pop lods sub sahf xor jg movsl mov xor sbb push sbb andb sbb insl or mov ljmp loopne arpl sub push (bad) hlt mov add add je inc cmp inc jb ret inc add adc xchg mov adc and rcrb or cli fdivr pop adc cmc cmp inc out bnd fs fisttpl lods aas jecxz push in or fs xor loopne rorl push or cmc jae sbb ds jmp mov lret sub add dec adc lods push jo imulb mov outsl pop jbe cmp repnz pop mov ljmp cld mov cmp dec aaa nop adc arpl or inc fstl sbb adc mov fsts mov mov mov aam inc sbb adc mov mov adc and ret mov jae repz cmp mov add sbb jmp adc add out jo adc or popa or inc mov or mov fwait movsl xchg sbb dec adc push jae pop psubq lret frstor add jo (bad) daa or cltd dec xchg mov adc mov cmc or cmp mov (bad) jbe das mov xor push (bad) mov adc xchg roll ss xchg mov popf adc inc jle shlb aam mov mov mov mov popa and adc mov loope mov or aad and jmp es (bad) cmp adc cmp in fcomp leave adc lods sub mov xabort adc jle push add out popa xor dec or adc inc roll xor imul mov push stc pop fcompl mov or sbb sahf push and adc mov jno (bad) xor ficompl ljmp repnz inc pop push add mov jmp push xor pop push roll gs (bad) out sub sub pop mov lock mov mov btsl cmp sub xchg outsb inc sbb push jae ret mov adc test mov inc in lret push mov adc rol test sbb xchg addr16 and cmpl repz test pop dec or ficom mov fs aam jp stos jg mov xchg mov addb (bad) pop test or mov adc out popf loop mov adc test leave pop ret inc movsb adc add cmc int3 or insb adc jge inc adc (bad) jmp xchg dec xor adc mov fnop aas fldl (bad) jb outsb (bad) mov push rcrl ds push mov and sbb pushf cli cmc repz xchg jg sub pushf icebp adc ffreep jecxz cs ret leave xlat hlt xor out inc in movsb inc sbb dec sub push xchg mov xchg adc push cmpsb lahf (bad) add adc and in dec xor or pop inc adc lret arpl scas adc xchg mov xor mov inc arpl hlt push cmp sub sbb shl lret dec add mov sbb push mov and lret pop je stos dec xor or dec push mov dec sub sbb sub push adc add scas es rep cmp push and movsb test cmp push enter punpckhwd xlat jnp jge mov repz mov and push stos or ja shrb adc cltd jns,pt jg mulb jo cmp popa add sti mov mov fstl aam add lods out adc adc andl stos popa test mov outsl sub sub or push inc dec push adc jae adc repnz mov sti pop mov je icebp pop das add fwait and aam mov mov repz test push test arpl mov and adc or addr16 stos adc aas loope test rcl lret or (bad) mov jle andl adc pop test lods adc outsb daa bswap sbb iret adc mov jg adc xchg push xor xchg push lahf (bad) mov stos lcall in lods dec (bad) jb adc pop xor add lds add out popf adc lods adc bound push xor aaa sbb jne popf sbb and je clc (bad) push xchg in push ret fcoml add out xor ficompl movsb lret nop push push add repz adc shl jns sbb add push shlb mov dec lret popf in adc push inc cwtl adc int lea jp and mov roll repz cmc rorl cmp repz xchg (bad) mull out ljmp sti mov adc js mov inc fildl repz das pop cmpsl mov xchg cwtl push pushf adc or or psrld adc and and add das jl mov rolb adc push add mov lcall mov outsb pop pop imul lret pushf nop or mov dec rclb xor mov popa push dec out call pop sbb adc cmp repz jo sub jns jge adc mov mov (bad) xor int fidivl adc ljmp pop lock lds adc dec (bad) push loopne fdivrl pushl mov jecxz stos in insb xchg pop adc and lods adc enter scas push repz jge fisubl push jns in test inc adc mov test (bad) sbb daa and adc mov lret out mov (bad) fstpl or pusha jp outsl push dec movsb loop mov paddsb rolb push sub xchg xor je dec outsl ds or mov js xor loop orl popf mov adc xchg mov into push (bad) sarl cli mov mov push adc in mov and hlt inc outsl ss jbe mull mov push inc push pop pop adc inc cmp adc add sbb mov sti scas xor ret fbld rclb lods jae call mov mov adc cmc out cmp xor mov pop adc fildll sbb push or pop inc jnp mov jbe adc push ror push lock mov inc adc sbb adc push add cld shl and addr16 dec xor push adc dec pop inc in mov ficom idiv lahf push rcl xorl cmc test ficomp lods loopne shrb sbb mov aad xor cli push bswap loope adc mov aaa push or adc adc pop in dec add adc jmp cltd push cmp adc repz iret xor adc adc fcompl ss push pop pushf adc (bad) or push (bad) jno fistpl add pop in shrb mov mov pushl sbb mov xor add ret add out xchg xor or push fptan cmp and call pushf mov cmp jecxz bound repz icebp and xor mov adc sbb adc fucomip adc dec movsl rcl adc or into aaa repz stos popa out mov cmp cmc scas mov adc pop rclb xadd adc fmuls gs lock hlt fwait popa je (bad) mov les lahf into hlt mov adc mov rcll adc das dec or cmc adc sub in shll add adc jl adc ficoml push lods cmc aaa add sahf cmp mov adc push ds xchg dec mov adc pop lods adc in adc push cmpsb push adc pop xchg dec pop les or cmp fcoml (bad) xchg lahf scas aaa (bad) fucom adc and out fs jecxz cmp inc cs out cmp adc leave mov int3 dec sti adc mov (bad) popf mov (bad) js aaa and pop out in adc mov and adc dec hlt mov cmp mov pushf adc out loope rcrl inc aam pop sbb adc mov adc mov fmul push or dec adc rolb cwtl inc outsl aaa aad arpl mov adc pop out (bad) aas into mov adc cs lret jle mul adc push push fs or mov seta cld sbb int mov xor jp (bad) adc (bad) mov add adc out mov push lret xchg pop sub mov int imul test aam cmpsb xor xorb sub xchg (bad) and mov popf xchg mov add push imul dec les jo cmc movsl add push rorb mov lock add repz xchg push add sub mov mov test aas xor xor ret nop mov sbb out or xor (bad) fsubrl xchg test mov jb and idiv pop icebp adc sbb cmp (bad) mov or stc mov adc push jns cmp xchg (bad) aam lods das (bad) cli mov hlt mov xchg call fs mov add sub movsb bswap popf add inc adc push jp adc mov les mov ret push jae mov push and (bad) and adc cmp loop mov xchg cmp repnz or and sbb jae pop cmp xchg adc mov xchg (bad) pop int3 dec cmp mov xchg jbe inc in pop pop jecxz push lods jmp outsb in adc gs add ret adc and xor outsb loope roll adc mov adc testl xor mov (bad) movsb dec adc jp mov or gs shrl and sarl push out imul jle hlt andb lret or jmp int lea sbb adc outsb out les out add je rol adc cmp adc (bad) idivl lds mov mov dec push cmp sub push add fnop negl in xlat pop and add call mov xor lds adc push je lods ss add (bad) ficoml jne imul cmp adc inc adc push jo cwtl mov mov pop data16 bound (bad) pop push xor and add xchg loope jge adc push sub cmp mov neg stos ret loope mov ret add cmp add lds movsb and ror xchg mov (bad) repnz (bad) mov loop adc pushf arpl rolb push aad in ficom cmp cmp sbb (bad) adc repz mov inc sti lret jecxz or loope lea inc lds cs out adc daa ja sbb sub test int3 mov mov sbb dec adc lock (bad) mov mov push ficom xchg sub sbb inc inc dec push adc test dec repz ret inc sbb mov cwtl adcb loope js xlat sbb fsubrs xlat lods push les dec cld ret adc mov out adc inc mov fbstp dec adc sti scas lret pushl add or mov push push adc subl adc iret cmp in xchg mov sub sbb ds lods add insb mov stos jmp ret mov mov je enter pop dec call fidivrl cmp loope jg mov adc push es (bad) adc xchg mov adc push cli lcall sarb pop adc sbb mov ror hlt mov out pop push (bad) fdivs adc jle cmp in pusha sarb enter mov loop push data16 ret mov fs jnp jge mul ret scas sbb adc outsl mov nop xor adc cmp cmp fadds mov lahf mov sahf aam pop xor xchg add cwtl inc xor inc (bad) sarb or je addb nop or dec cmp add adcl or adc jo push pop mov or mov sub lret dec (bad) stos cmp clc fstpt sbb adc xchg cmp pop add adc xchg adc (bad) xor mov jb lcall cmpsb push mov sbb sub fimull mov mov divl movb mov push cmp scas lock in xor or movsl cmp adc cmp push sti adc les push je inc (bad) cmp sar dec cli or repz out outsb cltd fsubrl fist xchg pop mov push jg mov xor int andb or rorb imul xlat adc loop mov popa mov outsb dec jb out pop rclb adc scas and pop lds xchg cltd jne mov aam out jmp mov in sbb adc insl jge call (bad) push pop pop mov ret orb rclb push notl add mov mov push jbe add pop cmp sub pop sti lea xchg pop adc decl mov xor or push cmp (bad) sbb lret sub add insl addr16 mov fist cs jns cmp adc xor cli cmp xchg sbb adc adc sti adc xadd push aas mov mov mov xchg loope mov adc push cmp mov mov (bad) mov negb add imul pusha hlt mov adc push outsl adc fidivr mov adc jae adc xor adc sbb adc mov dec cmpsb xchg aas adc call ret adc adc pusha addr16 mov (bad) dec inc or xor cltd or lret (bad) in jmp insl inc dec mov lods mov jbe jge mov push (bad) cmpsl push jl test adc jge lret adc push stos inc pop xor out outsb cmc outsl setge add jle xor cmp add dec popa repz data16 mov adc jmp arpl push out inc (bad) adc jg cmp or jl stos insb les shr or adc pop mov jmp adc rcll ret or xor cmpsl dec maxps adc rcrb popf loop (bad) aas ficoml outsb xchg add adc rclb mov pusha pop inc lahf ljmp adc and loope or xor push pop clc adc data16 xchg stos inc pop jo jle adc add outsl sti adc inc in lock push (bad) (bad) in or cmp push jb ret adc (bad) pop mov cwtl sbb jno or xor mov add jno cmp fcomps cmp sbb adc fisubl pop sub xchg bound (bad) mov lea adc and adc gs cld adc mov mov fildll mov jo stos adc hlt lret xchg mov adc pusha xor lods jecxz sub push arpl jo and lock and sub stos pop (bad) adc hlt mov adc push pusha sbb add xchg xor sbb es adc fwait dec sub lcall loop mov es jmp rolb jns jmp push mov sbb popf outsl (bad) scas inc leave adc in fiadd push ljmp lret adc add mull xor cmp jge add cmp fsubs ja pop dec add cmp (bad) je adc mov and or adc mov rolb pop inc inc test int movswl dec (bad) sub popf and test adc cmc xchg out notb jl pusha xor cmp mov decb cltd mov add push lcall inc xchg sbb in mov push (bad) adc add cltd xor adc xor sub mov std xor mov pop pop dec and mov repz xor iret inc add mov mov pop xor or mov in adc adc cli ret push bound jge cmp (bad) std int3 lods hlt add and loop fisubl or fisttp repz jne cmpb sarl inc cmp ja adc jne repz pop adc xchg sbbb adc cmp and adc lods cmc movaps mov adc push xchg cltd xor mov cld cmpsb jbe (bad) dec pop cli adc in mov mov in popf adc int3 adc lahf adc jns test cmp dec sar int3 pushf mov xchg push push fild pop and or mov mov sbb adc outsl mov sub add jp (bad) aam test xchg fnstenv jnp jge push adc (bad) sahf mov adc adc es xchg mov push dec pop dec pop mov jne jno or add dec sbb adc push bound adc jne cmpsb adc int3 mov clc fsubrl or jg adc pop pop data16 adc addr16 (bad) jo (bad) adc mov adc mov out adc xor lds push mov adc adc xchg cmp repz hlt jae cli aaa psubq mov idivb push sbb mov dec adc cmpsl aas xchg loopne push adc imul stos mov lods adc or loop adc in or or jnp popa add pop mov fsts (bad) push sbb adc fsubrs adc and dec (bad) insl fnop adc jae popf sbb cmp movlps xor pop (bad) sbb insb fldl adc loope test ljmp das lods add rolb mov cmpsb cs mov aaa adc fcmovbe cmp daa pop fcompl mov repz cmp or and push xchg or adc jmp cmpsb cmp xchg dec jmp outsl pop adc or jnp pop mov inc push loope lock inc (bad) (bad) je sub test dec lods lea adc mov mov inc bound sub push jecxz hlt adc inc mov sub push dec adc cmp ja bound push jbe popa adc in rorb adc adc lods rcl push jnp pop dec loopew pop xor and dec adc out popa shlb in pushl jbe mov dec cmp aas scas add add cmpsb dec lea insl into pop adc xor adcl push clc jns adc lock sbb mov jae sub sti (bad) in lods sahf (bad) lock xor leave (bad) mov aad mov sbb test jnp and lea adc inc mov mov daa adcb hlt int icebp push sbb cmp xchg cld inc adc mov lock jge fsubl xlat add test sbb je jns sub jle push imul or shr xor adc sub push jmp mov cmp pusha sbb popa mov and mov dec les pop test adc push mov sbb cmp roll fstpl adc or add (bad) das adc dec mov xchg jne push adc sub adc mov cwtl std rcrl pusha mov ret out popf cmpsl jmp mov repz xchg add mov cld cmp and mov mov in notl dec push insl hlt mov or jle mov sbb adc popf into sbb sti xchg mov and inc pushf cmp fild es pop inc push adc sbb (bad) xor and out mov (bad) xor imul jno arpl bound aam sbb ljmp adc push or sub (bad) scas sub adc jp pushf loope mov mov mov push inc fld mov mov mov ret push pop shlb add mov shrb mov xchg push (bad) xor test push add dec adc cmp sbb adc ja dec adc inc jno inc lds mov ret in cmp adc cmp loopne mov rcll pop nop add add std jge xor xor in stos lock es xor movl dec in aam outsb pusha test adc add push in pop adc xchg fwait ret (bad) hlt mov push add mov sarb out pop mov push (bad) fsub mov and xchg push xchg jo adc lret mov adc fisub jge adc push jmp lret add sub clc jae xchg and daa jae in xchg enter cmp (bad) inc adc push push adc cmp push int in in dec adc push aaa push bound inc mov add lahf mov jns ds ja scas mov rorb xor mov inc inc or into mov jne xor add test mov cmp push lods push adc scas rcr aaa and xor clc add cmc loopne adc (bad) pushf or lcall jae rcrb lock sub (bad) lret push jmp out pop ss sbbl pop mov mov loope inc popa test or inc pushf nop insb mov in or jnp mov mov sahf test cmpsl mov shll cmp mov add cmpsb xchg idiv enter sub ret or adc pushf leave adc mov sti add sub xor mov sbb xchg inc ret lds repnz add bound lods cmp inc inc add repz xor icebp or inc rolb in dec lock add (bad) cwtl adc mov or lcall rcll mov xor lret js (bad) pop push add mov and push inc add mov dec dec mov adc divl adc mov sbb xchg jge mov mov insl repnz inc xor mov pop jmp adc inc insl dec sahf dec inc mov lods in adc insb lcall nop ret mov adc (bad) movsb dec pop cmc pop mov sub (bad) lahf ja mov (bad) (bad) adc adc stos add mov clc pminub imul sub add cmp add scas movsb mov call or lea adc andl or ret adc cld and ficoml push jne xchg mov cmp or add imul inc pop xchg adc popf adc add test or mov dec pop adc test jo mov pop addb pop and adc sub jg lea push inc pop int sbb inc jbe fisttp push pop adc sbb xor mov das out ret push and push leave outsb sahf lods popa push xchg jbe adc aas add add nop inc xor movsl cmp stos loop adc aam push call ds int3 xchg pop es inc daa xor int xor adc pop movaps rcll adc hlt jge das sbb loope xor lea sbb push adc pop jp xchg mov jno mov adc movsl sahf adc (bad) mov mov push xchg mov fnstsw mov push adc out jne lret and roll dec push or (bad) jae adc xchg inc cld xchg jg in test dec ret or sbb pop add xchg sub adc rcr hlt dec mov mov lea sub inc mov or push sub pop xchg jle add push inc adc into (bad) push ljmp daa pop sahf adc addr16 pusha cmpsb push popa or stc adc movsl in adc test ds adc pushf inc sub (bad) push lock jge mov or mov das or mov cld add xor inc push pop dec insl jb mov jl cmc or movsb pop jmp cld jbe pop bound enter dec mov xchg add adc jmp nop push xor pop pop out cmp pop mov divl sub icebp mov lods adc sub insl and or jno ds cltd out cmp movsl adc lods outsl adc ja add adc push jp push xor xor les outsb test (bad) dec lcall cltd pop bound mov mov push dec imul aaa adc xchg xor (bad) and mov outsb sub and aam inc sbb (bad) adc inc jns sarl movsl jno bndldx or loope pop mov sub xor stos int (bad) je into pushf push xchg adc adc or pusha adc pop mov repz les icebp xchg jl or adc mov cmpsl xchg xchg stc mov sbb gs repz push ja bound ljmp or lods push mov mov test repz cmp sbb ss mov lds and xor insb push or dec xchg dec xchg xor sub or mov mov sub or insb (bad) out dec (bad) mov nop mov hlt mov inc xlat ja (bad) mov jne popf in repz lock mov sbb and mov push mov add imul dec pushf lret stos dec icebp enter adc fiadd into (bad) adc fnstenv dec subb (bad) int3 add icebp dec stos cmpl xor jecxz pusha xor out jb push mov or mov add adc pop pop imull pop adc dec addr16 cmp pop mov adc pop mov mov xchg std xor enter sbb cmc sbb mov push xchg mov xor add fcomps sub stc shrb pusha rorb pop (bad) pop pop xor insl mov adc add loope hlt lods mov mov xor shll jge mov test xchg sarb and inc mov mov push mov sbb das enter jge add xchg and xor lock sti nop mov or add or xchg adc adc adc mov or xchg adc rcl mov fcmovnbe inc insl orb adc sbb jns ficomp repnz jp adc adc cld pop mov sbb int3 push cmpsb cli sub scas insl push scas mov jge aas adc repnz push inc clc adc mov mov mov mov dec adc stc icebp xor or (bad) adc fst dec dec sub inc out sbb sti dec xor gs pop inc and data16 nop (bad) or insb xlat mov adc pshufw stos nop adc loope notl mov sbb cmp cli adc mov add adc repz pop adc mov data16 std aas push pop (bad) out and add cmp into out jb sub rcr das dec lret jecxz cmp adc out lock (bad) pop adc mov imull pop push mov lret push scas mov adc mov adc add xor daa test mov or lock cld mov stos add sbb ds adc sub test mov mov rorb sbb aaa insl mull push push inc addl jns mov fwait cmpsb ret or std rcll cmpsl inc sub cmovl test sub out loopne xchg sub and mov dec adc fcoml daa xchg idivb fnstcw add pop adc jp xchg (bad) cs mov adc push cli je aad adc jl (bad) xor (bad) stc cltd push pop rcrb xor xlat push xor jl push adc mov out ret sahf adc std push aas stos fcmovne mov addr16 add mov push rcll xor push adc dec les (bad) push jne or adc cmp adc mov js ds adc jno adc pop fwait and test aaa loope or dec (bad) mov xchg out lea and push xchg sub in fistl add repz fwait inc adc dec int3 sahf lds and push pop outsb adc lret xor or (bad) dec push adc rcl xlat adc sbb xor xchg sbb xchg popf mov xor (bad) movsl xor dec pop jmp add pushl lods lea adc test les sbb cmpsl mov (bad) dec adc pop xor lahf (bad) push adc add movl mov imul dec repz fadd adc mov mov push or js pop mov jle in jne (bad) repz hlt loop cs or mov wbinvd std sti pop adc push or adc arpl test sahf jmp sbb mov fdivrl (bad) into pop (bad) icebp or repnz inc je (bad) mov scas (bad) fcompl std cmpsl cltd jle movsl jne aaa push insl add dec push subl adc in cmp jns aas jp lret pop xor out mov ret repz stos push mov adc xor adc ficomp mov dec (bad) ficompl xchg inc fsubl xchg lock add neg inc push xor in or push fisttpl adc mov int dec pushf adc mov mov loopne lods rclb or jmp adc (bad) sub stc jle push adc test add xchg je mov (bad) scas or test adc data16 mov mov sub fsubs scas adc adc xchg xor sarl cmp jbe mov pop jmp fcoml lods call imul cmp ja,pn push rcr adc fs loop int int3 bound push mov add adc xchg inc inc push jo push mov insl lea out pop mov mov jp inc aam lea ror pop xlat adc cmpsb (bad) mov lret fcompl add sbb dec mov pop movsl sub pusha mov test sbb adc (bad) mov fcmovu sbb jo mov xchg xor xor loopne or push push fcoml in into sub inc daa inc or out push sbb mov dec out stos add lahf adc arpl loop es and and adc add push outsb adc ja push pop push pop rorb cld cmp sbb sub mov cmpsb mov ss or mov mov or mov jge iret (bad) jno mov inc enter mov ret push sbb jbe rcll push mov push loope cmp xchg cmp repz jb lahf and mov stos inc or sbb arpl add mov cld imul xchg and jge decl mov add aas rolb int add mov testb push xor xor mov fwait xchg lock (bad) mov mov fisubr ret je dec adc dec push dec adc out and sub add jbe push push jp faddl push inc cwtl testb jl sub lds in adc jecxz jno push mov jg mov lock imul ds push pop dec xchg cmp mov push mov mov xchg inc pop pop or faddl mov in pcmpgtd mov dec outsl adc out cmp ss adc iret rcrl stc push push (bad) loopne int3 (bad) mov inc test lret mov sbb jl pop (bad) rclb rcrb mov sahf adc je mov push lods rcll adc mov xlat dec lea adc iret mov scas jle add or imul xor stos (bad) in xorl xor and (bad) xlat test jge jnp arpl and test or mov push popa adc pop push mov sbb mov fldt inc incl or das je inc addr16 and data16 outsb adc adc cmc adc sbb push xchg xor (bad) mov fwait repz push aaa fstp popf test xchg adc add add int push push (bad) and and fisubrl sub (bad) xor sub add mov pop popf xchg fimul jbe mov jb jg add aas xchg test mov rep pop pop mov push push push pop sub jno fcomps mov std mov adc gs and rcl and mov js add adc nop xor sbb mov stc fs pop adc xchg push ja in cmpsl adc jb adc sub or inc dec xor jge out push out adc int3 les mov add jo mov adc sti rcrb push rcll dec sbb adc jle movsb sub imul hlt cmp mull je cmove cmp cwtl hlt jg or adc add push je jb add and adc push leave js out jg rcrl not push cli add orl lret mov or call sahf jle push daa jno xchg mov mov sbb dec adc dec pop push popf movsb sahf inc adc leave pushf loopne adc rorb fwait xor pop popa or push adc out cmp test xchg adc pop mov add adc mov lods idivb push cmp into xor sbb push xlat adc cmpsb addr16 (bad) mov xchg loop cmp or mov push dec daa or les int3 sub outsl add mov inc jbe or shrb dec mov mov and repz mov xchg adc push push lea pop xchg into push mov adc push lds push xorb sub sbb jge mov adc sub and adc pushf out rolb jecxz mov xor lods add cmpl add iret jae adc fisubl shrd inc mov mov xchg (bad) mov mov or add adcb int or push cmp push int3 loop into fildl adc xor (bad) adc xchg and add xchg movsb pusha adc jmp xor daa or pop push cmpb lret lcall aas sub inc adc int3 add shrl roll stc sbb or xchg xor leave imul inc or jnp mov mov psrlq or int jb xchg je std add xor or jno mov or popa clc adcl in sarb xchg pop jl repnz adc xchg enter mov bound movlps inc icebp mov stos xor arpl cltd push (bad) movsb mov xchg hlt mov add iret (bad) lret xchg loope test add dec add nop pop adc adc sub hlt aad mov cmp repz xor leave mov add xor dec mov cltd test and out cld push icebp adc xchg gs adc loop cmp mov stos inc adc mov sbb imul (bad) mov sbb lret dec cmpsl jnp jle adc jae cmp ss adc ljmp sbb fwait aad xor mov je dec jecxz fs pop insb cmc adc nop sub inc xor imul push push jp stos adc (bad) mov int3 ljmp sahf sbb sub sti adc movsb mov mov add cmp scas push fiaddl sbb in add add mov notb in movb cmp call lret stos mov or test adc repnz jno mov xor int add out ja mov mov push mov imul loope ret inc out jne lret or outsb xchg out movsl pop adc das cld (bad) adc (bad) aas pop sbb adc imul push cmp call sub push adc daa adc popa je adc jo (bad) mov or add jns add stos lock stos mov mov das pop jno lret jl pop mov repz mov lods loopne lea mov and mov pinsrw pop adc jp test int xor mov clc mov aas mov sbb push lods test jne xchg das xchg test aad loope dec movsl inc imul push jmp arpl repz test fwait jmp mov repz mov sbb cvtps2pi rep cmc repnz leave rclb imul push mov aad and fs js jns cmc fcom repnz pop add jno cmp adc ja call int3 sub adc sbb aam shrb mov (bad) mov dec lock add fstps repz decb mov sahf pop xchg pop addr16 (bad) adc lock jg push cwtl test ret pop fs adc int3 and int3 inc xor int adc adc dec cmpb adc lahf jno adc test rolb push mov adc mov mov push mov cmp fcompl adc mov push push push jno xor fwait into cmp movsb jp (bad) xchg and pop jecxz ret (bad) into adc test pop divl mov adc mov movsl or pusha test ret sahf mov adc daa sub xchg in adc mov inc outsl inc adc add or mov xchg xor dec popf or and jnp (bad) sbb or mov out test xchg mov lock sub (bad) or ret mov cmp push adc mov push adc push add jae adc js je pop sub sbb repz (bad) shlb mov push lods or adc and push or aas pusha in lods adc mov repnz adc sbb lcall cmp adc adc adc jb lods mov dec rcrb enter icebp negl lret push push or push adc xor popf sti mov adc add dec clc sbb fsubs adc (bad) enter mov mov orl adc lods push cwtl xor stc sub inc and add sysexit inc lods mov cltd sbb test cld lcall sub xor adc pop push mov mov sarl inc repz test inc push or or mov mov sbb shl movsl inc mov add addr16 add adc subb fwait movsl popf nop lcall in cmpsl bound out mov incb lahf mov push jbe or mov adc enter inc and mov lret adc sub adc sbb jg xor jno in mov repz into mov mov cmpsb pop out aam xor iret push movsb (bad) jo xchg add into pushf dec nop add les fdivs into int push adc or push jge adc sbb pop jl fcomps clc dec jae xchg dec mov add or lds sbb cli int3 addr16 scas repz pop dec insl sbb pop mov add dec cs jp adc sti (bad) std push outsb idivb pop mov cmp stc mov or add lods mov cmp or jb mov repz xor and add iret adc aaa cwtl lcall repnz es inc ret adc testl fbld mov mov outsl neg notb mov sbb xor fcoml adc dec lods and mov stos jo sbb (bad) pop push or stc mov test push dec pop pop adc inc gs dec sbb repz add lret cmp mov ljmp mov int xor push les (bad) mov loopne cltd repz pop aas cmc adc cli add mov stos push or cmpsl adc popf stc adc jl and xor hlt enter popa out adc scas leave fistl lret loope adc sbb jmp push nop adc mov push leave and adc gs push jae pop mov mov cwtl jne dec pop cmc hlt mov or sbb mov jecxz in push mov repnz jge and cwtl cmp push mov mov in ss mov sbb stc fadds inc adc callw mov das mov aad mov add adc sub adc jmp and out mov rcl test adc xchg fimul and mov jmp push adc cmp mov mov mov aad sbb push and cmp add mov clc inc das es mov adc xchg mov pop mov push rclb and popa lret adc mov jge xchg pop adc xlat rolb sahf and loope adc jle movl xchg cmp pop (bad) cmpsb pop mov (bad) jmp scas sbb sbb mov ss pop popf sbbl fs xchg dec fucomip shr aad sbb mov adc xor std pusha ret mov popf js inc mov jns xor sub outsl jp xchg add (bad) mov lahf mov adc fs or repz stos test mov (bad) in lods add xchg sbb mov jg jo mov inc adc jne and or pavgw lret xchg adc leave adc rclb nop jle fs popa stos repz in repnz adc jne int rcrl repz lcall ret notb out xor (bad) xchg aaa adc add mov jae mov xchg shrb adc stc cs and push jb std mov inc adc mov movsb cmp mov dec mov or push aam jle dec adc jno xor mov outsb dec es jo inc aad pushf or lcall mov std cmp das stos adc lods jae (bad) iret pop or sti jp pop mov xchg arpl pop loope inc mov into mov mov call jb flds in in jge cmpsb jecxz cmpsl sbb (bad) jno gs add sti xchg (bad) xor scas stos xlat mov xor or jl lods loop test fldenv mov cmp add xchg jnp mov cmp ja pop repz aam mov push adc jbe push adc loop mov fs xlat aas movsl rol adc (bad) cmp sub aad or aam mov movsl inc or imul cld repz stc pusha insl ret pop enter hlt jne lea scas xor loopne adc setne adc (bad) fwait jne mov mov xor popf mov and test sarb or pop dec outsl pop cmp adc sub xlat fmull shrl xchg push mov xor (bad) sub adc xchg in shll lret cs or sbb cmp or (bad) xchg inc cmp mov xchg inc dec add or aam repnz push xchg in adc lods cmovbe inc push adc fnstcw xchg mov movsl cmpsb or push lods adc inc push xchg adc inc rcl sbbl or push ja in jo cmpsl repz cmp push add aas inc cmp adc push pop or adc pop or fadds dec cmp adc mov arpl lret xchg xor hlt sbb mov and push xor adc scas mov mov add pop out int adc je loopne push adc xor ret or jp xchg xchg xchg pop pop inc adc xor pop adc shll inc push out out lcall call or push sar inc adc das rolb int3 push mov test dec punpcklbw stos adc sbb (bad) fidiv dec pop pop stc sti jmp test xchg pop xlat (bad) aam mov int movb sbb es pusha adc jbe fildl dec pop sub mov (bad) jae jmp addr16 loope sbb stos adc push mov iret adc push arpl pop les test (bad) ja rcrb lds ljmp (bad) sbb mov add test xchg adc insb push enter clc pop outsb mov sbb pop adc sbb fwait push xlat jge sub call push push popf loope iret pop push (bad) adc sub jbe pusha test cmp mov push test add xor lcall jmp mov and aaa and push adc mov stos adc data16 fwait inc and sbb stos adc push imul pusha decb fwait add xchg adc lock stc test mov inc mov xchg lret push repz pop pop and mov lock inc hlt adc dec mov subb je inc or int movsl adc fwait mov mov mov pop pushf outsl push adc arpl or fild mov inc mov sti adc dec in mov pushf sbb mov outsb call inc adc (bad) in add imul xchg and fwait loop cmp or mov in mov mov xchg daa xor test hlt dec add lds sub sbb xchg mov cmpsb loope push mov (bad) hlt adc lods test and addl out sbb or mov mov push adc int3 pop lods mov mov push repz and repz inc xchg pop and adc jnp cmp and sbb cmpsb add xchg mov aas xchg cmp add dec roll out aad jb add fcmovu mov orl adc insb sbb inc adc cmp xor (bad) mov mov mov in jle ds xor lds sahf or rolb out push repnz cmp mov or std loop xchg adc cwtl push ret lret adc daa scas push jmp mov loop cmp push mov mov fldt sub pop inc lret dec pop pop or pushf jo dec adc lods pop repz in (bad) pop (bad) lea sbb mov xor les pop inc sbbl stos mov (bad) mov test add adc xchg mov xchg mov and js sub fisubr push dec rolb xchg adc pop js xor xor adc push mov test lcall cwtl fisttpl scas pusha add pop (bad) negb mov (bad) cmc xlat mov xor adc xchg or leave sub jle mov or dec jno push xchg repnz mov push sbb or add sbb add ds lods mov and add addl stos lods sub adc jg sub dec mov cmp pusha ljmp adc push int3 adc mov xor jmp or xchg adc outsl lahf call push aad mov pusha fbstp or enter cmp jl call pop add adc pop jecxz cmp lahf pop adc lea lds test dec movsl (bad) out mov add xorl mov testl and mov (bad) mov sbb repnz aam xor push cmovg ljmp adc rclb pop inc jns cli scas repnz sub jbe xor scas test inc out add sbb push shrl xchg loop rcll and cmc ljmp punpcklbw lret sub jns rcrl mulb dec pusha cwtl add jne adc cmp and add xorl out and adc and loopne fbstp adc loop push je fcmovnu repz add sbb lea mov ret push stos pop adc cmp mov mov mov adc adc lahf lcall push in add aaa xchg xchg mov aas movsb loope dec xor test das hlt in and mov xor adc add mov or sbb orl jns daa push adc xchg arpl add frstor or testb adc fdivl ret and cmpsb in divl adc in rorb arpl mov mov adc fwait aam imul pop movntq out mov mov lahf sub sbbl mov mov cwtl clc cld adc mov lret sahf popf adc lock adc icebp xchg inc ficoml jge adc data16 (bad) xor adc mov pop adc jmp fs and shlb adc bound mov fistp and adc outsb fldt sub or (bad) enter push in fisttpll adc xor pop inc lock push cmp xlat cmp insl and mov adc mov (bad) notb or lcall mov scas into ds dec fisubl adc in leave xchg cmp xor mov push sbb xor add in pop mov popf jmp ret cmpsl pop dec inc jno pop in cmpsb (bad) cmp and adc pop popf mov fs add pop adc int pop fwait mov xchg shll or xor jo and push iret loope and daa push or inc in outsl repnz inc push pop jmp or xor push addr16 int std sbb mov xor (bad) dec sub add push rcll or dec inc dec fs or jecxz mov test lds ret fldenv clc sub ljmp mov xchg or insl xchg addr16 mov and adc adc mov test xchg popf int3 bound popa dec in outsb scas inc fmull push iret je in lods adc loop stc push jae and add (bad) pop pushf aad cmp adc test aam insl repz adc test add popf std jo xor lods jae sbb (bad) cmpsl dec jmp xor or clc mov mov mov and fldenv mov test dec mov jp mov pop sbb cltd jb xor xor dec (bad) lea lock std popa sti or nop imul mov call repnz xor add push das pushf xchg dec pop notb xchg xchg movsl scas mov jbe test in bound sub rcrb das jno imul mov adc push js dec movb sub inc xchg pop inc lcall sub or lret popf mov adc adc sbb mov adc das push fnstenv sub jmp lcall je les das repz (bad) mov pop adc mov push adc and ss mov dec pop xor sbb mov adc sub adc jb cltd (bad) cmpsb or adc (bad) mov sbb mov inc lea jne cmp inc enter repnz mov push out pop mov mov fdivrs (bad) xor aaa jp adc push jg mov movsl out stc loop adc pop pop stos aaa inc sub inc cwtl popa inc loopne push pop sti push mov or mov insl scas rcll or cmp sarb ss div ret iret inc mov bound adc mov imul adc outsb jne jecxz xchg dec adc icebp sub jmp and pop add out arpl adc dec adc adc jecxz aam imul mov xor cmp jl add adc mov xchg cmp out mov in pop xor mov lahf aaa add jb ljmp inc push icebp loopne adc daa jno subb xchg ss and aaa push pop lretw xlat pusha movsb out pop enter test pop fiaddl adc dec and jo or push les into lds cmpsl mov lea inc (bad) mov mov (bad) mov mov adc jae stc por notb pop loop repnz es xor (bad) xlat add adcb cmp adc ret dec xor dec mov or mov out cmpsl rcrb pop movsl pushf mov (bad) or xchg psllq lcall inc adc jle dec dec rcrb pushf loope movsl mov xorb mov mov or icebp loop aaa push rolb fcompl int3 adc jno out xor (bad) aam add adc xchg test cmp adc test loopne jbe mov mov adc popf pop or fucomip xchg icebp adc (bad) inc scas rcrb pop adc clc out neg iret mov mov pop pop test adc push ja adc cmpsl mov lea mov adc in add mov std pop faddl push mov in scas inc pop int3 les fstpl pop mov sbb adc sbb out adc lahf adc stos mov sarl mov push aaa jae pextrw ss xchg mov fcompl mov in sbb out stc adc sarb push mov lds stc test fmuls or sarb or push (bad) pop xchg mov (bad) add loopne or and hlt aas ret mov push or lock mov push es lds insl data16 xlat adc idivl cmpsb jge cwtl cld adcb stos sbb adc pop mov in mov stc pop test pop push cltd adc mov (bad) mov inc cmc (bad) iret inc push loopew lock lahf int ljmp (bad) fsubp adc ret dec fldcw or dec cmp xchg push and pusha popf xchg testb sub bound imul pop adc xor add and adc ss mov sub push add jl bound push aaa repz adc sub push stos adc fadds cmpsb adc cmp add xor adc hlt mov mov insl (bad) mov adc jne scas aam adc sub adc (bad) fwait mov pop cmpsb xchg scas adc jle dec adc mov imull cmc decb clc test adc and cld adc pop inc jns jp orl cmp sbb inc or mov adc jo lods cmp leave add sti jg sbb sbb add add sti loopw xor sbb outsl jl sahf pushf inc push fimull leave pop mov rcrl mov mul cmp and outsl repz dec cmp and mov loop xchg adc mov nop dec add push lret testb mov fisubl enter sbbl push dec mov lea ja or fistpll cmovnp cmpsb adc sub cld out jbe cmpsl sbb repz arpl int mov loopne repz inc mov std mov mov (bad) xor cmp cli adc xchg pushf stos cltd fcmove mov jmp sbb pop adc loop xor mov shlb mov cmp in add adc pop xlat iret adc and jae lret cwtl inc clc or mov adc and adc mov adc pop dec fcmove adcb push iret inc cmp sub dec mov pop sbb or (bad) out imull stos add mov pushf sbb add int test adc nop in imul lds adc or fdivs out lsl mov shlb jns fstpl sub repnz xchg jae cmp movsl (bad) repz xor or cmp insl pushf push test cmpsl sub movsb je adc pop jb inc lahf dec adc pop push adc cmp je negb mov adc pop xchg (bad) adc dec in ja jbe mov out mov out cmpsl push sub in test xchg inc in sub fimull pusha or mov sub lcall and or sbb pop movsl pop imul xchg mov xchg cmp xor jno in push mov mov sbb adc xlat test imul xor std test adc ss lods adc adc sub data16 out adc fwait jl int3 xchg adc (bad) call adc in repnz mov int3 xor adc data16 xchg dec add adc sti sub iret (bad) rcrb jmp add inc jnp ds cwtl pop sub sub adc out aad push xchg push adc nop jb repz (bad) sub loopne loope pop adc shr outsb cmpsl push xor xchg dec sub inc rcrl insb and adc out cmp add pop push test popa mov std and jmp adc je pop js add mov sbb add push cli add and scas notb out mov insb imul (bad) repz rcll adc cmp repz mov adc xchg nop int mov aad aas mov or (bad) jno mov cmpsl push std rolb adc inc push (bad) cmpsb test push add imul jbe cmp pop lock in dec inc jo and je mov out add jecxz dec ss inc cli xor adc arpl mov loop jns js or imul mov mov add cli inc jo push dec cmp repz mov out adc add pop sbb jp mov test call fstps pop push cltd fcmovnu (bad) repz data16 rorl cld or scas repz inc fldt xor sbb push leave adc xor adc sub xor cmp daa fnstcw lods cmc add dec rcr int3 je jecxz mov pusha mov negb xchg jne adc mov adc outsb icebp movsb xor mov test sahf out fistp dec notb mov sbb aam xchg adc mov push in xor adc xor notl (bad) (bad) imul repz fcompl mov (bad) pop sarb cmp inc orl insl jno,pt mov jbe es xchg in sub fcoml mov sbb in fucomi mov jg insl shrl add imul sub mov in adc imul mov sbb and and hlt or jnp xchg (bad) rorb movlps mov push (bad) in inc dec lods prefetch adc fwait or mov in cmp sub lret aam aaa jmp inc movsw xor push pop or icebp in fs and xor cmpsb (bad) sub jmp sbb stc rcl pop repnz and call in xchg inc adc call iret aam jne sbb lods and push (bad) fisttp fxch aaa or cmovg insl xor (bad) das aad in popa or jmp call adc mov mov xor sbb mov adc or pop adc push aad lock adc adcl fwait rorb stos sbb ror ret jne lods (bad) push ds mov adc popa test mov sbb fs mov outsb fildl and jp adc adc sahf (bad) mov xchg mov inc je jge xchg and jecxz mov mov mov (bad) push repz flds mov push push (bad) fdivr das pop dec or imul outsb mov cmpsb mov cmpsl out out cmp cltd lahf mov mov add imul sub or std test shrb or in into sar mov loope xchg adc sub in fcmovbe pop xchg push mov out clc (bad) fcompl pop hlt sti in cmpsb repz add pop or int xchg pop jl lods adc mov (bad) iret sub cmp push adc xchg std cmc sub pusha or clc mov pop and mov or xchg mov sti sub in mov cmpsb push jle pop mov (bad) lods je jecxz and cmp push pop sbb jno shrb jnp mov fadd adc lds daa inc ljmp repz enter pop adc jecxz repz add xchg loop,pn mov incl mov or and ret fstps lcall inc mov nop mov inc adc int3 pop jo sub int mov sbb adc out (bad) ja mov mov push and add out lods ficoml jne mov or loope int3 mov adc frstor mov imul lret adc push dec dec dec pop repz xlat push dec dec xchg xchg xor mov mov or sbb out aam les mov push (bad) adc (bad) (bad) add lahf (bad) fsubrs inc add xor pushf xor lret ret loope dec push xchg mov hlt fidiv xchg push adc sub add xor les lods fs cld fwait hlt adc jg jge xor sbb or inc or pop jae mov fisttpl dec dec adc xchg sbb ret xor icebp mov insl call dec and sbbl jns,pn clc popl mov add xor divl mov xchg hlt in adc aas lock repz push mov lds xor addr16 stos adc push adc rclb sbb mov sbbl inc mov sub mov pop (bad) sbb mov sbb push movsb insb mov rolb lds xor sbb out lahf add pop push cmp mov xor xchg scas sbb mov (bad) and adc rclb int sbb notl inc or push je lea cmp jns fsubr cmp (bad) pop jmp dec pushf jne dec dec mov add cmp inc imul rorb pop ljmp pop out in and pushf inc push fisubr and pop sbb insb sbb sbb jg adc icebp loope insl jb gs cmp lods adc xchg push sbb shrl cmc gs stos rcl sbb pop (bad) repnz popa mov test adc pop ficoml ret fistl out jbe or mov dec push lahf shlb rclb std imul mov stos fwait push ret subl sahf mov pop mov mov mov imul adc mov jns adc and push pushf or mov adc lock inc dec xor pop fnop push push sbb and mov dec mov (bad) adc das (bad) dec add adc and add mov push sahf fstps xchg lock adc hlt icebp add sarl adc jle fsubp rcr je push (bad) sbb mov lcall insl xchg adc je outsl faddp inc or mov jp adc (bad) add mov inc (bad) iret adc jbe adc and add scas push mov cmp adc roll cli fdivs mov adc mov cmpsb xchg shrb sbb jb adc aam mov lahf xor dec adc push fadds mov adc pop xchg dec out dec adc cmc mov fiadd adc mov lock push daa and push sub ja inc orb test adc jecxz mov rorb push outsb mov aam mov fldl mov rolb loop sub jbe,pn int std push mov pop jno sbbl aaa pop loopne or pushf (bad) (bad) ljmp or mov push jg add adcb mov idivb sbb adc xor lods fdivr mov push push inc add and and sahf cwtl rcl enter dec sbb mov jno arpl push and cmp pop push mov pop insb adc or pop xor cli jmp or adc aad sub xchg jp adc push sahf sbb adc shr imul and sub pusha add sbb push xor dec stc push mov or int push mov js pop pmaddwd inc jne dec dec pop ret pop mov aad mov jae xor (bad) stos subl mov nop scas sbb lds pop pushf loop cmpsb pcmpeqb inc mov pop sub cwtl push adc cmp call fst xor adc cmp dec stos mov sub or mov adc loope cmpsl mov je aaa scas int ljmp daa rorl out loop lcall lret adc mov jae xchg loopne test pop dec je and sbb mov clc inc mov lcall adc test xchg cmp push pop andl jmp adc and sbb xchg repz repz mov mov jbe pop adc outsl add adc sbb pop adc push cwtl adc repz sbb and cld out (bad) jno adc inc loop inc xor fsubr mov pop in adc insl dec push lcall test hlt dec xlat mov inc adc xor add and add movsl insb jbe add push xor push sub je pushf in hlt fstl mov or mov aaa cmp jnp das adc fmul pop insl or test xchg decl pop adc or jmp pusha mov out inc repz push mov adc or or arpl mov sub jge jle xchg mov daa or mov rcl add sbb mov ret push sti adc mov mov mov (bad) or hlt pop adc xor repz out xchg fcoms test push cmp inc adc adc mov cmp xchg les fldcw pop or inc repnz pop xor dec inc cmp cltd aaa adc inc in inc mov push adc jg sbb sub sarl repnz push push test cmc movsb cmpsb xor lcall jnp push stos xchg les adc inc addr16 adc mov inc push adc jae out jecxz jle dec mov mov adc pop addr16 arpl fwait adc jbe pop out xchg inc iret das push (bad) or cld adc lea push lahf fidivl adc xor lods fsts (bad) sbb fistl mov adc fiadd jl mov dec mov shl stos cmp xchg fwait out pusha sahf sub sbb pop dec (bad) cmp ret jb jmp or sbb (bad) adc sbbl lret mov (bad) cltd fidiv gs ja pushf notb test in sbb sbb repz fdivl adc pop mov push pop jl inc adc adc movd mov jb loope fnop rcll pushf sarl test out add adc xchg or mov mov notl adc cmp adc in (bad) push pop lock pop decl adc push lods das lea mov dec daa jno enter clc jl adc int lods sub xlat aaa movsl sti sar adc icebp sbb or and str jg cmc scas iret dec sub inc and in flds adc (bad) adc lock mov dec (bad) sub fwait daa rorl (bad) mov cmpsl adc (bad) int3 mov adc movsb popa mov test clc imul inc repz ja or or adc push ret adc cmp inc and cwtl cld data16 les iret fistpl mov stc mov jne fadd adc mov lea xor dec xchg xchg iret ljmp dec xchg hlt adc pop mov mov pop mov mov adc lret push mov scas neg (bad) xor scas add stos jp cld cmpxchg in add lcall ret sbb outsb shrl mov push aam jae xchg mov stos adc adc lret fisubl rcrl movsb inc add pop rorl aad xchg mov lods sbb mov push push adc jg scas sbb outsb adc dec cwtl bound (bad) repz xor mov lea (bad) (bad) in mov stc mov lea adc inc jo (bad) inc add test cld outsl adcl stc push (bad) xor call (bad) cltd inc adc mov pop rsm rolb ficoml stos pop xchg mov std xor sbb lods push fisttpll push jns add push rclb or sbb jmp xchg rolb sarb fxch incb adc adc scas adc pop aam adc mov popf adc xchg das push adc pop out call xchg aaa enter dec pop repz insb outsb mov xchg or jb sbb ret test jg adc jbe mov jge or pusha mov (bad) or adc mov insl cmc loope xor das in inc test or jno mov add dec adc fsubs mov push xchg adc loope mov sub dec repz push shlb ja push mov xor add mov lods loopne mov push push repz and mov test xchg imul in pop inc mov xchg movsl dec mov adc (bad) pop aad ljmp mov sbb andb stos jns inc mov std pushf jge shrl jae mov aam out fs sbb push mov cmp aad or push sbb leave out cwtl jmp fidivrl pushf aas adc xor sarl ss push push inc pop xor push dec cmp cvttps2pi es adc and mov pop lret mov outsb mov jl mov dec cmp or add mov mov mov xor add adc cmpsl push leave ror fcoms mov inc sahf insb pop add xor dec es pop (bad) repnz lcall imul adc mov test popa dec hlt mov adc ret fwait mov clc loope pop sub test imul fldt jbe adc inc jg inc (bad) mov adc je xor sub cld or mov cmp pop adc mov push (bad) pop mov out push pop loop sub lea mov sbb stos adc push outsl mov lcall push adc jge ljmp and mov cltd xor mov (bad) lock loopne and fnsave jle repz fsubr aad mov xor shrl ljmp jbe inc or into mov add sti and (bad) jnp in pop adc outsl sub adc xlat lea cmp imul (bad) mov pop push les xor adc ret jb dec xor adc cmp sub cwtl mov jl cld arpl push push xchg mov in dec xor loop mov add cs jno adc inc adc (bad) mov in stos ja cmp rorl fcmovb pop repnz adc sub stos stos repz mov dec insl adc les adc loope push jb sub mov aad sub xor aaa inc jmp jno sbb fadd fsubrs test ss negb repz adc mov mov xchg jge mov sbb arpl adc mov lret dec adc in add repz cli loopne cmpsl xlat adc pushf fwait repz push cwtl pop in loope into xor fcoms dec ja ds (bad) xor icebp add inc jb int3 add dec mov mov adc popf mov push mov rorl test adc adc inc xor mov int3 fdiv inc xchg adc jo pop into dec adc repz daa or rcl fiadd pop add enter mov rcl imull dec lods pop and xchg adc sbb jo adc mov xchg sbb imul mov scas mov sahf ficom xor push and adc outsb (bad) jo push out adc push mov lods in fcoml (bad) int3 lds sbb adc mov jnp imul mov stc sbb adc out (bad) jl jns xor xor adc xlat pop mov jge mov mov stc inc cltd lcall pop je adc xor pushf adc add fldcw push adc xor add push and and je adc mov imul daa adc mov aaa lcall imul rolb or xlat test jg mov out adc sti or (bad) movsb add movsl lock and (bad) push pop sub push rcll mov ljmp std mov xchg or pushf addr16 stos mov call dec fdivrs in aaa adc lcall xor outsl sub pop and xlat popa cmp bound inc (bad) mov xchg adc clc xor lea or cmpsb data16 loope adc adc jae add lods and mov stos loope (bad) lods lock out push scas pushf (bad) into rcll add daa mov (bad) adc lds adc add pop dec adc int3 movsb adc rclb (bad) out pop jp pop mov fidivrl inc adc pop cmpsl fldl gs (bad) (bad) aaa add out pop cmp fcompl in shr jns xor dec sbb cs mov lds sub xor sub mov (bad) jmp es xor mov pop mov lods or or xor inc xchg cli add fbstp lods imul lock loop sbb mov mov add or mov out sbb pusha sub loopne mov push sti or push dec push and lea mov jno push cmc cmp xor out mov jp dec mov das sub pop mov add out (bad) mov jae movsl add repz lock or and notl orl adcl lret inc sbb test or into mov in cwtl out ds xor sarb sbb add push adc mov rcll xor cltd rorl cs mov push jb enter cli and pop push repz out decb cwtl or jp (bad) mov mov dec xchg cmpsb (bad) in adc in ja push mov adc ljmp cmp cwtl xchg adcl jno push dec sub inc imul (bad) or mov push popf ret adc sbb and adc xchg sub adc mov adc jae ficoml jecxz aad dec or fsubrl jle xor insl adc mov gs rclb jns sbb aaa mov jl adc fs popl xchg bound push loop sarb adc push mov adc or testb mov mov sub outsl jecxz les or jbe inc sbb or in scas inc in push fsubrs pop in dec test bound popf leave (bad) imul mov fnstsw psubusw cmp xchg scas fwait ljmp inc test cmc rcl sub and stc stos inc (bad) adc std into or adc pushf push insl stos jp mov test mov jbe push rcrb adc dec inc js and xchg mov inc push mov push pop mov scas ret dec jmp cltd mov repz or mov mov imul out ficompl xchg repz push fldcw insb pusha xor cmp or fucomp pusha adcl mov nop add arpl push stc adc fnstcw push sub addl in cmp push jne pop ds outsl dec int3 movsl adc mov lret push adc push mov (bad) icebp scas outsb adc inc pop js bound imul lods adc adc pop xor dec adc mov adc mov jmp jp pop (bad) xchg mov insl fisubrl pop mov and sbb pushf adc sbb pop ds push or adc jno mov ss jo and cmp (bad) outsb pusha xor xchg in adc and mov (bad) jb mov mov pop jne mov fcmovnbe add pop enter or je mov cld popl imulb fdivrp shl stc movsb xchg pop cmp xor pop aas mov push adc stos (bad) mov ja sbb (bad) call jl add stos cmp dec sbb sbb (bad) push push outsl iret inc adc movsl dec mov mov into es adc jb push adc sub push inc jns into adc mov mov add adc fsts adc mov pushl repz inc in repnz mov pop adc xlat clc lods cmp daa (bad) adc loopne (bad) cltd push inc adc mov repnz jecxz mov (bad) cld push mov lret cltd add or adc mov (bad) sbb arpl (bad) or and pop sub (bad) hlt add jno iret sbbb adc (bad) push pop adc adc je and adc jecxz test fildll xor jne add inc ljmp cmp sub outsl in cld cmpsl push pop mov lds out adc mov push inc inc mov dec jp fildl addps les loope lock and adc cmp ficom xor xor dec mov test mov hlt mov adc pop into push adc mov xor and sub add xchg fwait adc mov xchg (bad) aaa repz dec adc test push lea mov adc push jl punpckldq js lock mov xchg jae pop pusha mov pop mov fiadd lcall pushf sar iret rclb test fcmovu ret mov cmpsl push movsl popf dec push cli sbb movsl mov sbb adc mov cs xchg ret cmpsl adc dec das pop aam adc push fsts ds mov cmp int3 jo fsubl out call and sti push inc (bad) inc adc movsb insb cld adc xlat in cmp inc and sbb decl xlat (bad) jno leave scas outsb xor xor add mov (bad) cmp jecxz adc inc in pop xor cmp inc lock xrelease in cmp test push mov mov add shrl (bad) mov pop mov sub xchg out mov in adc jle clc (bad) hlt out adc (bad) and jns xchg test mov stos adc in xor movsl push lods xor dec xchg xor xchg push xor mov int jmp shl lods xchg inc mov bound xchg and pop pop inc adc stos mov sbb and adc test rcl (bad) mov add sub push jno mov (bad) cld and mov sub cmp push cmc push push pop dec mov adc repnz jl or dec vpsubsb jbe jb icebp or test mov dec push mov or hlt inc jmp in repnz repz into stc aas cltd aad jl adc and push push xor xor cwtl jmp mov imul dec mov inc int3 adc jge jb adc or cmp movsl add jl adc ss xchg pop and jecxz xor adc aaa into sbb addr16 adc dec cwtl negl cmpb pop push aam inc and insl mov and lret rorb (bad) jne daa (bad) je out pop cmpsl adc jne mov outsl jle adc jecxz cmp ljmp bound cmp mov call lds pop icebp adcl jp add jbe jne jno js sbb insb or inc stos cmpl add inc add adc mov inc incl jae (bad) or dec dec xchg adc call and (bad) mov push sarb pop or sbb adc insb or lahf cli adc push and mov lods hlt (bad) lea sbb or sbb adc and pop adc mov cmp cmp adc nop repnz jmp adc divb fcmovbe mov pop int pushf mov in dec testl nop je xlat push xchg cld dec cli add rcrl cmp into js cmc or xor add dec sbb pop push mov jo add and xchg jb mov out xlat pop mov jmp in test mov pop and call cwtl mov mov jns push fnop loope popa pop xor shrl outsl out popf mov jle adc movq jno cmpsl cmp or push fnstenv mov mov ss cmpsb adc and repz js rcrl inc test adc loopne fs imul push into add pop jl pop lret adc push mov aas and xchg dec movsb adc pushf pop fsubs stos out sbb mov movl mov ret in add push (bad) clc xor outsb push insl test shrb sub out xor adc roll es mov test push and mov adc xchg aaa jns lods arpl repz mov add sub xor leave push inc mov jge arpl ret mov dec xor pop inc scas mov jmp adc xchg dec fwait add ficompl jle add sahf sub fisttp (bad) or popf ror mov and adc xchg aad inc jbe mov inc out stos in addr16 repz pop xor test add mov sbb nop pushf mov adcl mov or cwtl xor push pop or adc loop and ud1 adc cmpsb lods (bad) push add sbb movsl push push jg or (bad) inc clc sbb dec lea lahf adc cwtl les aas loope fwait out xchg (bad) lea icebp hlt mov ss cli xor pop data16 xor rep int sbb adc push lahf out and adc mov outsl adc adc lret cmp nop dec xor push dec xlat dec adc adc adc (bad) (bad) stos fs out adc das lods js cli mov adc in mov adc xchg ror push push xchg add adc lea sarb daa hlt sbb ret outsb jno add or fcmove adc xchg xchg out jge cmpsb lcall dec inc test mov and inc ficompl (bad) arpl inc int ss subb cmpsl jecxz repnz or ja adc out iret in adc out and adc jns push mov nop sbb xchg push (bad) lea adc push adc dec ljmp xchg fbld inc (bad) mov xchg sbb in repnz aas add and xor sub rcrb fisubrl jae movsb xchg imul adc orl scas push xor jmp adc repz push adc cld add jge or (bad) adc dec sub or push sbb aaa leave fdivrs repz sbb adc mov jnp adc add scas push xchg loop mov xor lds sub lods sub cltd sub popa xchg adc push mov stos adc cltd hlt faddl mov repz outsl cmp mov cwtl sub and loopne ficom (bad) adc cmpsb mov sub add cld fucomip out sbb adc cwtl add seto adc sub mov loopne scas fldenv inc xchg adc into jne push cld nop lea xor mov adc mov mov mov push lret test sbb scas sbb and pop mov movsb or mov jae cmpb xor insl add adc xor lock enter mov movsl or iret dec sub cmp mov in fild dec iret mov rorl dec cmp orl lahf pop (bad) test jecxz out lods mov cli out movsbl xchg add mov add pop lahf inc xor mov xchg lea xor push es fsubl ljmp xor xor orl or ds push imul or ret repz adc jbe gs cld mov sbb cli push mov mov mov jle jae fnop cmp mov js and jb (bad) aam mov jno mov add loop push dec adc lods outsb adc or addr16 mov mov int3 xchg xor mov sbb xchg fldpi aad or mov mov mov fwait adc push ret add repnz jnp jo cwtl rcll mov ret xor repz pusha xchg push aad mov adc rorb adc scas mov mov mov inc fldl xlat xchg xchg je pop adc js test loope adc imul int and push jbe jno pop lret orl sub add jg xor adc sahf loope cmpl mov pop mov sahf xor pushf adc popa nop cmpsl xor scas xchg pop mov adc test adc push adc push inc add push aad in shr repz sbb pop mov mov repz sti (bad) pop jg jp push pop add sbb adc sti adc and pinsrw int dec sbb adc shll add sbb add pop mov clc mov (bad) test out mov adc insl cmp test and mov cli mov cwtl ljmp je imul add add xor bound jne inc test repz rcll jecxz pop imul or hlt jno add inc jns jno cltd mov inc mov adc scas insb int3 out mov xchg push shrl add xor add incb add add popf xchg cwtl and insl mov add icebp or inc nop repnz and loopne or outsl movsl add cs mulb adc push lahf movsl push das inc std lds pop inc push cs arpl adc into leave popa xchg rcrl sbb adc iret repnz dec aaa pop lods xor cmpsl mov sahf adc (bad) xchg (bad) cmc insl aaa cld adc (bad) lock sub dec jne pop cld pushf rcl xor ja lcall adc dec icebp outsb (bad) mov xor cmp mov push mov jg lcall pop xor in jns sbb or jge cs dec rclb jl mov jae sbb rcpps cs dec out adc int3 add cltd pop scas mov popf and jne dec gs pop sbb pop xchg dec je int or jge,pn std ja xchg adc pop rol push leave xchg mov inc imul aam xchg lcall cmp adc int3 insl and adc into sbb test test movsl jnp adc jbe and repz mov mov rcll and iret mov cs jno rcr aaa push clc dec decl inc pop adc lret mov mov loop add sub pusha dec jnp in xor out fcmovne adc add fdivrp mov sti pop pop rorb lret ljmp test pop pop push fdivl sbb popf dec cmp adc xchg test push jbe adc dec fcmovnbe inc mov sbb pop jae cld nop sti (bad) fimull lret (bad) push das adc jo ljmp jecxz dec sysenter scas dec adc loope sbb adc repz adc rorl into pop xchg lret in xchg mov leave mov adc or xchg adc bound scas xchg sbb cwtl mov test push adc scas push dec push xor test stos adc notb mov pusha jg movsl sbb adc push sbb adc in insl lods aas add (bad) repz stos (bad) mov mov daa repz ret dec sub cld xchg adcb lds xlat out pop adc nop test fcmovb or xor test pushf repz jne outsb mov sub sbb and pushl and addr16 sub push ret (bad) dec loopne lock adc jp out pop add or das and xlat subl aaa add mov xchg pop add (bad) lret sub test cmp xor or dec ret lock (bad) fbstp movsl iret sbb inc add push jmp push pop call pop mov les or pop inc test cld mov inc pop adc (bad) push rcrl addl jmp adc mov nop sub or adc adc push mov adc mov jns imul out pop leave les andl xchg sub fstpl adc notl mul into daa adc (bad) lds dec popfw jo sbb mov pop inc cmpsl adc sub leave fidivrl lret jle sbb ss adc test xchg push pop xchg (bad) pop mov lds adc sub rorl scas mov cmp or mov (bad) jae das and lcall notb adc mov clc mov push jl sub mov test pop fs hlt lret adc ss scas and les xor add fsub mov xchg dec jns cmp (bad) jge jecxz pop fucom outsl cmpsb repz divb adc pop mov (bad) xor dec add scas or mov xchg xchg mov xchg ret hlt add adc aaa mov jb testl pop fwait lds xor add jmp sub adc cmpsl faddl test fs cwtl int3 sub pop xchg leave (bad) ds jb mov cwtl fcmovbe adc or lds jne popa adc sub push adc roll mov lds mov push (bad) dec (bad) hlt mov xchg inc or mov mov jge sub sbb movsl mov pusha jo jbe adc cld jne adc loopne fcompl cmp xchg adc daa js xor jle fbstp pop sahf stos in jmp mov mov jmp arpl addl add xchg mov xchg pop out and arpl std pop adc lds jae add cmpsb sub insb and data16 adc or pop adc clc (bad) cltd mov adc mov or pop xor rcr sar (bad) or inc mov repnz cwtl popf lods or cmc addr16 mov xor pop adc addb enter mov mov and add ja insl aaa sbb in das adc jecxz (bad) mov test xor adc dec aam sbb mov repz sbb cmc push pop adc lret call mov testl movsl xor pop mov fdivrl stos (bad) out sub sbb mov in xor fildll imul dec cwtl adc xchg push sub fcomp cmp test ret xor mov mov enter sbb adc rorl imulb adc lret sub das stos or ret adc pop xchg imul push cwtl cltd mov mov or into mov pop pop in sbb cmpsl repnz sti dec pop add sahf inc mov lret aaa adc in (bad) stos sbb push ss enter jbe push aam insl (bad) mov push xor xor (bad) imul cmp repz rorl loopnew mov pop lds cld adc lahf mov fcoml jbe cmp mov ds (bad) push rcrb push cmp iret stos or aas pop sti mov data16 add sbb or adc int rcll cmpsb xor repz mov adc sbb roll in loopne cmovle sbb aad loop pop adc jl mov inc call adc mov clc mov mov ja ds das out rorl inc mov fstpl inc iret adc push adc lret adc inc inc mov dec (bad) jecxz sub hlt mov pop xor pop adc mov pop arpl adc (bad) shl xor xor lret or push sbb and xchg xor adc cmp pop loop outsl je jge dec mov (bad) xor add or inc mov jp rep in mov adc xlat sbb xor push std ret adc movsl cmpb adc jae add mov sarl mov cld inc and negb add rcr push (bad) pop add adc hlt lea add in inc (bad) mov repz pop pop cs adc cmp aas cmp push mov mov mov lea daa adc adc in imul int xor push or fdiv repnz stos out lahf or dec adc les pop imul cwtl (bad) adc loopne adc jecxz imul adc ficoml shr jl mov mov mov mov dec cmp dec js lret mov inc inc sub mov pop sub push mov jae int fistpll cmp aad call bound fcomps or jne push add xor jbe inc ficoml xor pop mov sbb nop or xor lods push mov test mov inc or (bad) mov pop mov mov mov ret adc mov jbe adc aaa fs adc fistp adc mov sub cmpsl push aas adcb and dec repz fimul mov test and sbb mov or add xchg sbb cld pop repz popf sub inc xor shlb sbb out in mov adc add mov mov lret daa sbb dec inc (bad) incl push dec movsl mov adc lahf mov mov sbb in addps mov ljmp dec push xor (bad) and mov mov mov fildl sub dec inc adc repz xchg xor mov add mov negb fstpt xchg pop pop mov insb adc add (bad) repnz and push arpl icebp xchg adc mov mov cwtl adc adc in (bad) sbb call mov mov adc sub push (bad) pop adc addl aas lcall push repz sub mov fidivr and adc lods lret pop (bad) enter aas inc cmp mov mov mov pop (bad) repnz xchg aas ror inc xor hlt (bad) into repz fmull sbb repnz icebp into cmp fincstp mov add fimull cli pop jae stos adc jns imul stc icebp adc sub adc add push jno ljmp lret enter push (bad) repz out or lret sahf int cld or pop aas pushf cwtl adc rcll mov add add mov or push test loopne fiaddl stos (bad) mov (bad) in push or lds mov cmp hlt sub les rclb das xor add sbb lret cwtl adc enter dec repz push xor inc push in jp adc xchg pushf mov arpl push jb leave (bad) mov sub jmp or imul jecxz out fnstenv push adc xchg in mov adc mov xor (bad) lret pop xor cmpb mov adc inc and xor inc ljmp ret shrl push clc xor cmpsl dec inc and lret adc js cltd push out mov push push (bad) lock idivl outsb loope pop jg dec cli add pop out push inc sub fistl adc fprem add (bad) xlat dec sub stos add enter and das jnp xor mov testb lahf into sub rorb movsb mov adc add mov gs xor adc call lock mov cmp adc scas cmp test add adc xchg out ja rcrb and mov imul cmp adc xchg outsb int3 pop lret inc pop adc and lahf mov xor fistpll inc push cli or lret adc loopne rol and mov push out and dec es je out sbbl js mov stos and or lods out std (bad) add les jb mov loope jle lods mov dec movsb (bad) inc push ret adc out sub adc lret push test adc jne movsl mov fisub or sahf lcall andl jne sbb pop add bound push sub pop sarl xchg mov lahf mov or adc rcll xor jg xchg cmp mov xchg imul ja jnp mov rorl stc mov (bad) sub out repnz adc adc push mov mov (bad) mov (bad) jl adc lock fs and dec push mov mov pop dec stc and xchg (bad) or mov insl pop add xchg adc adc mov pop inc inc repz cmp jg push fmull mov add cmpsb ret fiadd xor dec divl bound cmp adc mov xchg add xchg fidiv jmp mov jno adc add repnz call icebp sbb lcall pop dec (bad) mulb ficom out test jl add mov (bad) push or cld xchg movsb adc adc mov cmp fcompl inc jno sbb push ljmp dec add adc jnp or sub (bad) shlb out adc cmp inc test ja insl lds mov and sbb test cmp xor loopne jecxz aam fstl (bad) daa pop and xchg pop dec adc dec les test sub xchg sbb lods mov inc jns outsb pop scas add in movsb mov adc orb inc repnz in test int lcall aam dec test dec or or or pop push cmp or fucom adc imul es cmp rclb jb adc cmpsl enter lock adc sbb cltd adc movsl xorl pushf and push lret into jno lcall in mov (bad) js dec sarb mov adc imul sbb and fstps push (bad) sub repz loope pushl sarb ss scas add push sbb aam pushf mov inc fwait rcrl pop call cmc adc or sub cmp cmp adc xchg fcompl imul jge pop (bad) aad pop repz push scas fs add sarb lds add push ret sbb adc mov push jno gs loope addr16 inc fidivrl repnz ds and adc mov adc fst (bad) xor adc into int3 adc mov ds adc push repnz mov and std and sub test lcall mov pop mov pop and nop jno or pop and sbb jb or push add loope push fwait popa xchg nop jge addb ret mov xchg aaa das in inc adc adc push leave jmp js push sbb push and ficom mov mov push or mov divl std (bad) aad pop fwait (bad) test cmp pushf sbb gs mov pop movsb xchg xchg or adc rolb inc add mov adc sbb fs mov push cmp mov adc push cli imul xlat cmpsl jne dec mov cli inc xor outsl dec lods std or add add sar mov mov (bad) mov pushf mov adc xor mov and flds xor mov xchg cltd push sbb out sbb mov pop mov xor xchg or mov pop ljmp mov mov jbe jmp adc rclb add loop adc mov adc xchg ret (bad) notb mov sbb lret adc inc std mov inc lcall imul (bad) (bad) sbb xor fnsave cld xlat shrb out lcall xchg or sbb push mov movsl imul jae adc inc fldenv xor out sub test push jg mov inc mov cmp movsb hlt scas add add out adc push or arpl adc popf sub leave xchg adc mov jno mov or (bad) xor jl mov fcompl mov and fwait adc fstpt xor push movsb adc pop and pop stos mov add adc inc push mov mov popa ja sti leave or jp xor test or and mov add outsb cltd adc sub cmp pop xchg mov in (bad) adc sbb adc repz jne negb jp push notl or int3 adc lock adc or in add adc inc inc mov scas push xor lcall lods adc popa cmc gs (bad) xor fiadd pop icebp rcll or stc push adc dec sub sbb adc out xor fbstp jae push ret stc int3 adc push adc cli add fistl loopne out push cmpsl aas int ss arpl test xchg jecxz loope das mov pop inc push adc stos push or aad push out arpl rolb ret dec scas or dec sbb jbe jg insb sbb sti xchg dec (bad) stc xchg add mov cmc cmp leave mov adc xor xchg adc enter sbb insl je mov repz mov fwait adc negl jbe ds imul scas aam outsl ja cmpsb dec adc cld push fcmove imul jecxz or or sarl rcr mov rolb mov cmp stos adc adc jbe mov add mov notb (bad) mov adc sbb jne mov pop mov fdivl cs mov mov fimull adc shll loopne mov adc out hlt xchg xor jae mov cld aad fidivl cwtl ljmp pop loopne test mov jle adc and xchg movsl pop dec pop test xor into mov rorl enter scas std sbb cmp xor add mov in movsl scas mov lds cmp or mov push daa (bad) sub xor xor jnp out pop inc data16 dec push adc inc pop pop imul sbb mov adc loopne sub aas sbb mov ljmp lahf jnp adc addr16 push js test cli adc jl add adc xlat sub repz jle (bad) rclb movsl jge aaa adc movsb push insl adc popl xchg xor mov cmp push dec add adc popf cmp cmp (bad) fild xchg bndstx inc inc inc push loope push dec adc xchg es push push jmp and mov sub or xchg inc fwait adc jae adc add mov xchg bound mov push aam mov pop push psubusb in in repz dec adc scas adc fisubr push leave insl mov fsubrl nop sbb xor mov or jl adc and pushf pop adc sbb mov adc bound ljmp push push arpl push push jns push add mov pop xchg adc pop jbe (bad) and jp xor mov addl lods xor (bad) mov imul adc movsl out inc jecxz stos lcall add test pop and xor jo adc or pop lods andb hlt fldcw xor mov adc jo and push dec adc stos push lock popa jle push mov or inc sub jbe push xchg xor mov adc adc adc lods out mov adc repnz push inc ret popf dec inc mov adc cmpsb out push mov rcl cmpsl int mov fs adc adc lcall xlat sbb clc js jge adc fcoml xor add imul adc inc (bad) adc repz xor fstps lea sar bound dec and mov (bad) bnd lods roll cmp rcrb (bad) iret sbb pop sti cmp adc stc jae daa insl ss sbb add jge jb movsb sub or cmpl adc xor and xchg adc mov adc ljmp adc mov loop fwait lahf push mov mov mov mov xor or test (bad) adc dec sahf cli insl add mov mov cpuid push arpl pop push or insb adc movsb or enter add adc push ret data16 mov jmp aaa xor decl sub push cmc jb sub imul adc lods in popa ds mov loopne jge fwait and mov xlat fld1 jle adc mov cmp in adc cmc sbb xor adc pop movsb shrb push add xor dec cmp add inc pop mov cmp pop test jl and in sbb outsl mov (bad) add addr16 popa mov daa in adc ds loop pop cwtl lahf mov mov sbb inc xor adcl (bad) pushf cmc adc xor lock iret in ja mov fcoms pop xchg add cltd jmp fisub cmp inc mov rclb (bad) or jae (bad) adc cmpsb pop push cmp mov mov addr16 sub lods roll mov adc aas mov mov or enter mov test mov inc xchg add push mov stc add add shll inc jbe test dec dec sub adc mov fwait je inc or jmp pop jmp adc test and insl jg dec in sbb inc sbb mov lea dec adc jb and lock out imul das add repz adcl inc pop sub pushf fisub rcrl lea pop push aad mov xchg mov sub adc mov dec xchg sub push pop dec cs adc out add jnp rorl clc cmp xor pusha dec or sub adc add add in add and sbb adc cmp jge push pop loope add cmp mov das sarl pushl or push test xchg stos fistpll adc xor adc (bad) sbb mov fwait movups aam mov ret into push mov and leave repz dec mov mov cmpb mov test ret adc fldt mov frstor xorb fadd xchg xor movsl addr16 aad push or xor inc sysret (bad) outsb out fistl ret sbb lods or iret xchg cld xchg push adc sub cmp push inc adc movsl push dec pop and jne orl or ret adc enter es int mov sarl mov and pop adc aad rorb xchg fdivrs mov sbb push xor dec std xor or fsubl (bad) ret adc mov adc call mov bound dec adc cmp fnsave cwtl and jo adc mov push inc mov rcll mov and add in or push adc pop clc call adc ret pushf cmp cwtl stos jmp mov arpl inc imul into mov push das cmp adc jb add call cltd sbb gs and fcoml je sub dec jle xor push cmp xor push push sub xor inc inc and int rorb ss mov adc pop pop or aam ficoml inc lock aaa mov cmpsb adc ret insb xor enter imul int3 lock adc loopne or (bad) mov xor sbb pop lea bound scas int pop adc lds cmc mov or iret dec inc out fwait sahf cld sbb out sti popl mov movsl xor int3 xchg aad movsl sbb adc xor mov (bad) sbb dec sbb xchg push sub cmpsb or cmp popa sbb add (bad) dec stos fldl adc ljmp mov roll pop pop xchg jecxz mov jne mov or cmp shrl add dec in dec std lea insb xor xor inc lds pop cltd aad aas xor out fisttpll push xchg loopne adc pop push mov sbb sti adc adc rclb jmp insl outsl call dec outsb lea jne mov add lret sar dec cmp push out add xchg test mov push xor data16 sub rcll mov mov mov pop fistp out xlat xor test adc xchg rcr (bad) mov lods xchg loopne (bad) xor cwtl jne push mov dec jno dec or stos pop add lds das xor dec (bad) pop nop xchg jbe or sbb mov mov push repz lret out mov aaa adc aad adc into ds xchg mov xor lds scas push xchg mov mov rcll adc cld test push test or and lock adc push adc or fsubrl or je cmp dec in xor dec (bad) (bad) adc ljmp out movups mov push mov repz mov sbb xchg cmpsb push adc out idivb xchg es adc movsl stos test sarl mov push mov fmul jmp movsl (bad) mov lea inc push mov cmpsb adc lret cmp jmp ret lcall push jl jmp xor mov xchg cmpsb mov push js adcl cld pop ficom scas push rclb sub fs and adc jle push nop adc shll inc repnz inc sub pop ror mov es test adc xor jbe add mov mov jae sbb mov adc sbb pop call mov and or mov pushf adc std data16 ja arpl push loopne insb (bad) adc mov stos mov pushf repnz pop push call adc lret mov pop xchg in and out xlat pop add mov sti mov adc pusha push lcall adc cmove das lcall adc inc dec xor adc clc fdivs inc sub and loopne (bad) sbb popf adc pop idivb add adc je rclb in movsl sbb adc clc jg mov pushf repnz add adc and nop cmc fsubs or std leave jg inc rolb hlt pop pop mov insl mov xchg (bad) adc xlat adc dec jnp adc data16 enter dec adc stc push xchg adc sub jno mov inc jecxz fistp jle (bad) lock lret adc into mov xchg adc mov pop arpl roll mov adc fcmovu repnz mov ret jbe xlat sti sbb sahf notl push adc ds out push popf cmc adc xor dec push (bad) push cwtl adc cmp mov test sbb lret jmp ficoml and adc adc pop adc jo mov xor add fsubp lods mov pop mov mov jge jno fisubrl fs adc adc sub scas pop aad jno repz rclb sub cmp rcrb dec adc popf sub sub mov mov (bad) les pop test dec dec push repz out add adc mov push repz mov rolb repnz xchg hlt cmpsb invd (bad) jae jl arpl in inc imul nop lock dec lea sbb enter push nop cmc movsb dec mov xor push mov mov lods js shr add inc adc outsl int mov xor loopne add fldcw mov inc pusha repz addr16 add cmp adc and xchg add push adc mov cmp mov ret xchg sahf movsl adc and cmpsb fisttp mov enter jne inc das repz out xor dec mov xchg nop pop push jo push jae movsl pop hlt adc mov icebp dec sbb mov add (bad) stc or flds mov adc adc hlt adc or adc pusha out adc cmp fild adc test adc jae imul repz popf dec (bad) repz sti insl cmpsb lods xchg cmp adc xchg xchg or xchg lret pop xchg pop adc jnp or xor adc cmpsl lods pop adc inc push inc inc aas mov xor pop repz ljmp ss jle mov in aas sar aad fstps into cmp xchg add adc mov cmp add leave nop xor xor out and cmovne xchg mov xlat out adc std cltd inc loopne mov aam and and xor xor rcrb sbbl push inc xor sub call shll xor or (bad) xor or adc add adc pop pop lea adc and sbb pop out es xchg cltd cwtl adc and push sti fwait repnz mov add xlat insb (bad) mov fist xor fs (bad) adc xchg iret jne hlt scas add xchg or lods mov lods mov popa xor mov sbb sbb and pop jae push insl xor xor xor rclb fadds insl ljmp adc fs sysenter loop xlat fiadd cld scas into cmpsb adc sbbb pop ret cld fildll ss int3 add cvtdq2ps push or adc or push mov add in pop push lods pusha rcr ret cld sbb add sbb or shrl add dec or xchg push push dec adc cltd jge adc aaa pop and insl fstl push mov jne adc loop aad inc in dec adc ja and loope rorb int lahf adc adc jae jbe aas mov icebp dec jge sub rol adc ss mov jmp dec mov movsl cmpsb jae adc in push mov imul popa adc dec fstpl lahf gs dec sbb jle mov mov xor mov repnz dec adc push xor icebp sbb inc iret enter push push push mov mov inc sbb pushf sub mov jne jecxz mov add pusha loopne enter push adc stos fisttpl xchg (bad) or loope fisttp (bad) adc test jno insb mov mov mov adc outsl adc ret sub push ret lods cwtl jg (bad) (bad) mov mov add es cli adc inc test xor push xchg or outsl imul add lret rorb std imul mov push push push rclb adc cwtl addr16 (bad) adc jge int3 cltd outsl movsl push adc int ds adc lea and pop push add ret das pop adc inc mov cmp sbb (bad) or movsl adc scas cmp cld add sbb push mov mov inc daa aas sub js adc sub pop fldl cmp inc std js je adc fidivrl cmp fist daa pop jmp adc mov ljmp fistpl push in and xchg sbb aad sub mov inc pop cmpsl and mov inc mov add mov arpl int xor add outsb dec loope fisttpl out adc and sub nop or and dec sbb int fld1 lahf std cs mov add push jle and clc adc bound mov lock fnstenv mov inc js faddl gs pop jmp mov shrl out mov ret adc lods mov jno test jo mov cmp or pop xor adc jae jne outsb movsl mov mov xchg mov subb dec (bad) mov (bad) mov dec adc jne xor icebp adc gs mov fmul (bad) fcmovne jae adc pop sbb sbb pop ja ljmp or mov add mov or stc ss dec inc out lock std ror in hlt cmpsb jl mov xor mov stos cmpxchg cmc inc xor into adc jmp mov andl or sbb subb imul push inc add loop sbb adc mov cltd sub dec in adc gs loop push pop ljmp outsb jb out repz daa ss cmp stos adc xor lcall sub out (bad) stc push (bad) sub (bad) jle ja out dec (bad) jb test repnz pusha test adc js add adc les mov mov cs negb inc push nop (bad) adc xrelease rorb scas sbb adc xor sbb insl add adc push xchg jne cmp adc aad mov fidiv push repz dec leave pop jnp mov mov (bad) or push pop and mov (bad) movsb pop adc (bad) adc out daa mov mov shrl xchg das or lret mov pushf hlt data16 stc sbb aaa cmp rcrb movsl or adc jge rorb pusha push lcall movsb jg loop cmp bound mov jmp popa ljmp ss adc or (bad) rcrb mov and out adc mov cld mov (bad) rclb or lahf mov cmp fstps call insb clc push in xchg xor adc adc (bad) adc jmp push aaa ja lea push insl fldcw je cmpsb out ret add mov push std adc mov mov dec or or pop inc sbb add jmp jns in pop adc scas jnp bound or mov mov data16 xor sub adc xlat aad ljmp add jne and cwtl jo dec rclb inc (bad) movb mov cmpsl loope das push push in cmp push add in repnz cmpsb push adc add insl sarb nop mov sbb cmp mov int mov mov mov adc mov movsl pop add fstpt aas (bad) sbb imul cmp js ljmp hlt jnp std test adc push lods mov adc sbb (bad) mov stos add into adc (bad) jbe test es xor pushf dec adc pusha mov mov out dec jne cmp cmc outsb test fcmove mov popa (bad) mov je adc push add mov adc push out ljmp xor xchg dec adc jae imul xchg mov mov push stc sub mov push nop ds jle jge ret gs adc jl pop add js cmp std cwtl or mov inc sbb xchg adc mov xchg rorl and jle int pop and sub rcrl fimull lock jne lret dec jns adc mov jo push adc mov sbb mov adc mov add xchg inc rcl adc xor mov decl jge xor xor push cmpsb mov sub pop jo jns lods imul paddq les (bad) and adc rcrb pop scas mov aas cltd frstor mov add imul dec jno dec adcb jb lds adc sarl and lea inc jge cli adc in fdivp dec les fsubr in sbb mov mov pop cmp mov jle pop aam jge add stos fistp sti or adc cli push xor jle lahf stos pop pop dec add in out xor jmp arpl push lock mov int3 jo adc bound lea (bad) mov jae sub cmp push or and xor adc test dec fistp addr16 xlat push faddl hlt out mov adc jne jmp mov sbb xchg mov inc inc sbb sub xchg insl pop (bad) mov inc mov and pop lcall dec fidivl rcll and sti xchg rclb mov (bad) xchg fdivrs add jge out cmp (bad) rcrl idiv rclb int xlat adc (bad) (bad) mov inc add xor test aad cmp sarb adc roll push adc jge add es stc test add adc push push mov int3 sbb popa xor or (bad) arpl push pop adc push popf jg popa and jno lods outsl out repz push frstor nop adc sub mov xchg aas cmp fiadd test xchg mov xchg movsl int3 nop cli adc adc fistl mov popa ret sbb adc inc rolb push or les pop push std mov test cmc mov call mov arpl fldl clc jne roll into push fwait mov adc jl xor out or dec in rep std cmp outsb rorl fidiv mov adc in data16 adc (bad) xor (bad) sub dec (bad) inc aaa add sub sti nop hlt jecxz mov imul xchg inc push call inc nop adc inc or ljmp mov xchg and loop loopne rorl nop clc mov imul daa into push pand (bad) rolb int push pop jge lods ja adc push xchg lcall cli pop imul icebp ljmp jecxz and dec pop lea ret stc loopne lods mov adc xor test ret adc cmp or fldenv adcl stos insb push inc sub adc in std jg push cmp dec dec mov or stc call and mov push lea adcl push pop or mov adc xor mov lret or arpl dec or pop xchg or daa and lods pop xor scas mov test adc add push and mov adc adc adc cmp int3 out or iret adc lret push mov adc adc leave mov adc xchg js adc lds movsb mov je jmp test jae mov sub (bad) mov inc or lods jo and inc clc pop lods inc cmp adc sub (bad) out push or jg push cmp push rclb inc fstp or add mov add dec inc sbb aaa adc mov xor mov shll stos sub mov or jns sub cmp xchg pop mov adc les pop (bad) mov sbb fidivr icebp mov adc insl add push xchg shr jmp test loope (bad) jmp dec or jecxz jns rorb jp and xchg aas das pop stos test cld arpl in inc mov mov and icebp push add cmp dec ljmp adc pop mov aam negl sti jno pop push pop adc ds mov ret xor xchg in hlt sbb mov xor cmp aad push mov push fstpt data16 adc sub mov push pop adc out in fisttpll sbb mov ffree sbb mov sbb push cltd push mov xchg out mov xchg pushf xorl das mov push cmc inc cmp aaa fsubrl push sub pop lods jg pop lret pop jno add push add jno and add dec out xor push pushf or xor pop aad mov das mov adc stos pop xchg jbe adc mov add in jae fcomip mov pushf cmc mov jp movhps fist add xchg test mov (bad) mov push pop dec fcmovbe xor outsb push xchg fwait or mov and out xchg mov push sbb pop arpl call adc aas ds xchg adc or xor push (bad) rcr repnz adc mov or movsb sbb das and dec lods mov adc push mov std aad and mov pop xchg fdivrl jno xchg xchg adc icebp bound imul xchg cmpl or add pop hlt rcll cmpsl xchg out push test cmp mov pop mov xchg nop xor push pop push insb jl mov or cmp sahf inc add repnz jae add repz jno mov leave stc adc fstl dec sbb add adc sbb push pop jns cli adc xchg sahf repnz or cmp js,pn or mov inc and outsb mov movsl adc mov xchg and xchg ljmp repz fcoms (bad) jecxz add pop adc lods add mov adc pusha mov mov stc mov xchg ret lret pop test sbb (bad) dec sbb xor and add (bad) add es lods and (bad) adc cli mov adc or add adc int3 mov fwait out popa adc sbb (bad) adc mov adc cmc repz adc or add das setg es outsl pop adc xchg in int3 test (bad) ror lds xor adc jb data16 push xor lods inc (bad) add popf (bad) sbb dec sub je popl popf jle sahf inc test lcall add and fidivrl dec and cltd adc xor add xor jns jmp in decb and out inc xor inc int3 loope pop mov or adc add push scas hlt adc mov ret adc inc lcall dec adc xchg jb shrb iret sbb mov adc or adc notl mov fbstp lds sbb adcl mov movsl mov enter adc push xchg (bad) leave adc shrb (bad) ja adc pop jo int3 dec xor sbb dec les pop (bad) jno inc cmp mov add jge xchg xchg mov xor std pop ret mov adc cmp inc outsb lret aad adc cmp lock add add push repnz fnsave add adc jecxz out outsl push xchg xchg dec int add or or dec fstpt mulb les insl lret sub mov pusha mov sub (bad) xor push adc clc (bad) sti enter mov rclb ds xchg ret test xchg js adc pop scas xor mov lcall (bad) mov or fsincos dec and notl add imul cmpsl inc mov adc dec pop adc sbb repz inc mov adc jp sti cmc mov adc sbb push adc inc push add enter mov sbb xor cmpsb xchg lock subl mov or popa xor xor jp iret lods adc ret call sbb dec and lcall lods push dec mov adc inc xchg int3 cwtl inc push mov mov rclb adc cwtl xorb sbb xor sub pop xor cs repnz imul add cmp mov (bad) imul dec fistpll sbb clc mov pop movsl repz into outsl in cmp sbb psubsw lcall sub dec scas mov int out sbb add adc cmp jp mov imul movsb inc out adc dec cli adc popa inc mov push cmp mov ja mov mov popa push dec das inc fs pop add adc mov dec shrl mov cli ljmp lods sub mov rorb iret rcrb test cmovns xchg call clc cld ss adc fcmovne and add (bad) movsl add and push adc scas inc push jnp adc adc int3 jmp rclb jge repz cmc call adc in or adc lea aam clc icebp test add sbb out mov lret adc lock outsl pusha ljmp jno pushf rolb jno xchg fstpt sbb mov mov xchg rorb push adc out sahf or mov scas out and or repz enter add inc inc adc test xor test scas push (bad) xor lds scas insb sbb in add (bad) sbb dec mov cmp jecxz push (bad) test popf xchg loope fist mov lea push mov push mov xchg inc pop mov xor incl in xchg data16 adc test pop hlt scas mov ret cld adc or (bad) (bad) icebp cs adc mov adc xchg nop mov xor bswap lret and sub lock stc mov adc push jb enter int3 jne ljmp cs mov pop pop mov push adc inc mov cmp dec xor std into mov scas repz sub inc xchg cltd mov scas adc jb ds or push (bad) int3 push je xor bound sub call aam mov push adc xor mov enter gs push push ds inc scas adc mov arpl or lea adc mov cmpsl addb gs adc sub repnz push cwtl pop add sub or clc je (bad) lret ds ffree insb loop xor int3 cltd push and xlat or jae lock imul adc inc mov pop cmpsb mov icebp ret mov cmp out pusha rclb adc sti addr16 fidivl (bad) cli or pop sbb mov jno in push sub push mov pop ja fsts pop adc fs or xor out sbb (bad) sbb adc mov jb (bad) cmp iret push in pop sub sub (bad) adc jp lret jg adc or mov rcrl pop rclb xchg mov imul dec inc in push xchg loope scas adc pop sbb adc or adc imul mov mov inc fidivl out fimul sub and sub xchg xchg or xchg insl cmpsb std lock int3 cltd lcall pop ljmp imul add adc sbb add negl mov movsl or push add pop fcmovnu push pop pop mov (bad) stc adc or xor incb pop adc out cltd adc (bad) fistpl mov pop cmpsb adc not mov cmc mov xor mov inc jo sarb data16 jl cmp repz icebp mov ret repz cmpsl adc adc xchg inc adc push jle inc ds dec out popf push movsb push movd gs fdivl inc into pop sbb dec add mov fiadd bnd add inc and xor stc or (bad) add and aad js pop mov imulb mov sbb iret jp or sbb mov adc mov aad nop mov sbb xor adc add cmp test (bad) pusha insb pop mov inc lea test and adc xchg jmp je mov adc mov aam daa les dec dec fcoms and jb fnop pusha xchg sub xor inc aaa xor mov mov fistpll xacquire roll (bad) cmp movsl fstl int or ss test sub xor mov mov jmp sub xchg xchg xlat adc cmp cmc outsb nop xor rcrb icebp xchg inc repz aad dec mov in or push adc xor test adc pop pop xchg leave cmc adc xchg rcr sbb fnsave adc pop cli jo dec std data16 xor inc pop add xlat cmp and mov mov fnsave jle or roll sti sbb and mov loop sbb adc mov dec popf lds out pop push fcoms sbb (bad) jp pushf pop adc pop push push pop inc mov mov adc out movsb mov mov sbb fs or clc xor and dec iret test adc xor gs and jle dec (bad) lcall xor into xchg mov push rcrb adc adc cltd notl push clc stos adc xchg fistp adc lcall adc cmpsb jnp bound or adc jle cmp or nop add in enter inc adc push mov nop je sbb mov cltd popf adc mov add and jae and xchg js jbe arpl iret outsb adc mov dec mov jl mov mov arpl in lods cs mov imul pop pop or mov sbb cld (bad) add mov (bad) faddp add mov sub mov mov lret or sbb adc push adc push pop mov loope xchg pushf nop rcrl je int adc movb (bad) insb (bad) lods xchg fist and inc and push mov pop jp adc cmp aam push xor nop cs or test xorb out push jae push rclb or mov inc lret movsb notl repz mov or mov push in cmp xchg mov adc in mulb fstl lcall lds or mov popf push mov mov adc shl (bad) sub into adc fisubr inc jae jbe or adc mov and movsl mov mov test jle out popa cmp in adc xlat pop mov movsb sub xor sbb idivl xor or dec adc jp cltd push or adc nop imul xchg je sahf leave movsb mov hlt je xchg loope sbb shll out repnz adc or rolb adc into adc in jle cmpsl or fbld mov and syscall out aaa (bad) jb add inc loop imul bound iret cs adc push push add or cwtl cmp aad test repz cmp movsb ret dec jo mov daa out pop lea adc mov xchg inc xor push jae repz cmc mov mov pop adc sbb jge scas cmp popa or mov push pop je pcmpeqd xchg sar std sbb je shlb push daa adc cltd mov jle adc xchg sbb sbb icebp adc test out jle sbb xchg sbb mov rcll cmp mov movsb and jmp out jnp aam xor add jno cmc and inc mov xlat or add add repnz mov jge gs cmp pop xor dec (bad) xor mov hlt mov xchg ficom cwtl xchg loopne pusha sbb xchg clc movnti xlat stos push leave push sbb mov addr16 lcall clc jle adc adc sahf push dec inc fisub (bad) fildll xor mov pusha adc cmc rcrb adc sahf xchg xor push out xor mov mov xchg inc pusha xchg or sti adc mov dec nop lea jge fwait push cli adc out or mov sbb adc xlat divb popf (bad) das adc pop sbb (bad) mov and dec adc inc sub int3 push push imul add movsl test fstp clc cld xor inc or iret pop pop mov bound or mov lods mov loope dec (bad) sbb mov out jne loopne push xor popf push test adc les aam scas rcl out add push add ljmp sub pop (bad) inc dec jge adc sti jp stos notb adc cmp adc mov ret arpl bound adc or sub mov xor push mov int or (bad) test repz mov push or xor or dec and jbe nop push xchg test mov aas in lods lret pop cs (bad) ds sub jle push inc dec or mov mov daa pop or in push mov cmp test lods adc fnop lods negl sbb fistpll mov or add mov and or mov ficompl xor jno xchg xchg sbb jecxz pop (bad) jmp repz inc lret or mov mov mov std xlat push mov add mov ss jecxz pop cli mov xchg sahf adc push shll cmp cld out dec paddq xchg adc rcrb lret popf dec imul dec sahf sub pop jl jge and or fwait dec sbb sbb jp pop cld and cli adc stos sub adc dec add push fcompl adc mov inc pop (bad) sti mov (bad) pop or sub call sbb fildl push cmp mov dec xchg cmpsl adc or loope and push movsb or adc fdivs push add out popf (bad) lahf inc enter adc cmpsl std aas mov adc xor adc xchg add jo pop or daa movl dec adc addl cwtl cmp imul dec aaa rcr mov sbb xor call je lahf ja jno add inc pop pop fcompl adc out out mov out sbb pop pop leave adc ret repnz push pop mov fwait xadd imul adc repz fldt sbb adc jb or add fidivl aad inc cs add and (bad) xor (bad) push cmpsl add adc outsb cmp (bad) mov xor mov pop push sub or adc jb fnstcw jle loop lret or xor lods cmp addr16 jmp jne adc retw psubd inc xor mov pushf repz or push add adc sub js outsl (bad) or push cmp icebp lods jo scas ljmp xor xchg mov cld lahf push addb xlat lock or xchg mov sbb je and (bad) jecxz (bad) test sarb dec cli outsl wbinvd in cmp and pop pop imul (bad) cmc int3 jnp cmp je adc loope xchg add adc cltd adc pop pop dec jae mov xchg pop hlt into daa scas mov adc xlat pop adc ret movb jbe (bad) push push mov mov sbb out mov adc arpl bound jne dec mov inc sbb jns dec aas jecxz adc (bad) repz xor jae mov mov es out sbb jl (bad) cmc jle push adc jge inc push iret test xchg popa ret jmp mov mov adc xchg sbb push addr16 ds or in mov loop mov inc sbbl test movsb jmp insl xor mov pop add rorb aaa movsl out xor dec call push (bad) fstl (bad) mov lds xor cmpsl mov pop popa ret or cli mov sbb es ds iret pop adc leave sahf test mov mov or mov imul mov ss aaa sub sub leave (bad) cmp inc lcall mov or sbb inc inc rcrl mov stc sbb mov aaa and jl adc loop sub lret test mov or adc sbb lock test adc pop dec push shrl lret pusha or push push out imul fisttpl movsb mov adc xor sbb adc and ret lea cmp adc dec (bad) jle mov ror push sti sbb andb xchg mov shll adc (bad) xchg xchg loope push pop adc cmp push adc pusha ret add adc imul insl mov repz mov pop movsb in jnp jl scas stc insl outsl iret fwait sbb adc mov mov adc ljmp add cwtl hlt popa clc aaa repz (bad) mov sbb sbb jp xchg icebp xchg imul js pop loope inc or ret sbb mov cs sub fs cld adc push aam in inc jb fisttp adc jnp mov mov adc or mov mov add adc xchg rorb adc in add imul sub jg adc mul pop insb orl aad add hlt dec mov test inc adc inc (bad) sbb sbb popa dec mov cli in pusha xchg jno ficompl mov mov push adc cmp fs mov je dec pop popa ja push pop push lds call adc mov sarb push insb push ja add cmpsl push int inc lods jl sub and stos dec push mov push fildll (bad) lock pop fmul cmpsb xor out mov data16 mov inc in popf aad push sub cmpsl es ret mov idiv lcall nop loopne jns xor lret push add adc adc int cmpsl sbb in cli adc daa in fcomip pusha int3 mov rolb add xchg jle mov add je add pop enter pushf sub push nop push mov xchg lock jg jp push dec xlat inc (bad) stc adc mov out adcl gs pop out sahf adc ja in xor sti add mov fcoms sbb or adc jno mov xor push adc add loopne mov push stc icebp xchg scas sti call or mov lret jmp jo xchg or je test daa inc ror leave adc cli scas cwtl xchg fnsave in xorb pop ucomiss adcl es and sub lods add (bad) lods decb xchg xor or cld sbb mov jg int sbb xor add sub call xlat pop dec stos popa mov adc (bad) cld xchg test bound adc xchg cmp aad adc lahf leave aam inc dec (bad) mov test jmp daa arpl or xor (bad) xor stos jb or cltd fcompl (bad) adc (bad) jno adc sbb cli mov mov push mov loop xchg test lret jae xor mov arpl ja add adc aam or mov and and xchg mov aas pop rorl sbb adc lret lret pop inc mov adc mov mov iret (bad) shrb out pop pop xchg lcall fwait mov imul ret mov jmp sbb daa mov mov push add repnz push push jnp in cmp adc xchg nop jno addr16 adc enter xlat std xchg mov dec add inc repz mov or repnz (bad) ret jp out cmp mov scas pop ret jle icebp loopne mov mov pop adc jg lock mov test mov jbe and jno push pushf pop hlt mov rolb popf dec in and jg mov push cmc fsubrp jge int mov mov (bad) xor jg adc push push dec cmp arpl mov dec push mov jmp cmp lret or sarb xchg test fs ljmp and pusha mov ret sub push fmull adc xchg cmp das int dec jg inc imulb inc push (bad) mov xchg mov cmpsl push xor in out mov sub fwait repz add (bad) adc lds mov fcoms je cmpps pop adc and mov xchg push lcall outsl inc cmpsb push adc lock cmp jmp and adc imul cmp or pop jno mov test divb cli mov or sub in sub or iret jle enter mov or add (bad) dec jl inc xchg fs fidiv pusha push out dec popa adc clc shrb mov es (bad) lahf fs inc mov mov sub sbb xor push push clc adc jo rep adc fldl cld adc or mov mov add movsl dec cmp test adc pop cmp adc jns adc adc sub dec sti es adc fscale pop xor jno cmp pop adc adc mov outsb loop dec mov arpl mov in sub add sub jecxz mov cmp dec xor adc add es dec pop int3 pop lods (bad) sti adc and jns data16 iret lcall sti mov add test out adc adc lret xchg (bad) jo adc mov lcall push adc or mov adc or mov adc inc aaa adc jle adc xchg jge in rolb insb jecxz mov (bad) mov shr outsl push add dec xchg test push mov push or repz mov popw xor mov adc mov hlt sbb adc jb ss in cmp out inc jo mov xchg ret fcomps sub jnp (bad) cmp shlb fisubl das imul push popf repz aad adc sub jge jbe ljmp stos xchg (bad) jmp xchg int3 cli in xor xor xor jp test hlt into bound push test (bad) adc daa sti inc push inc in xor adc popf pop in sub ficom sbb fnop aam sub mov lods sbb xchg aad insl and call cli pop pop mov int repz sbb push fisttpl inc rorb inc sbb adc enter sub cmc popl int lret stc ret in adc sub sbb jp inc sti inc adc loope adc dec out sbb jmp insb repz icebp cmp pop ljmp mov adc les mov jp jmp xchg adc dec pop cmp xor adc push pop xchg push jge (bad) jmp sti daa test arpl mov test lret adc cwtl (bad) mov (bad) mov inc in aaa adc sub popf or jae gs push movsb adc jle cmp sbb adc ds dec xchg lret std outsl adc arpl and sbb and adc (bad) enter clc push sbb adc in rcrb notb mov xrelease inc sarb sbb (bad) jnp out aaa mov mov lea out insb cmc loopne lcall lahf xor enter repnz (bad) push jg push je and jmp insb adc cmpsw lock into mov xchg xor dec popf movlps mov xchg lea fistpll popa cmpsb adc pop xchg add (bad) std adc adc jp adc mov ror pop xor fildl xchg adc iret pusha xor or rclb inc movsb mov test sub push mov inc mov stos adc add adc aad sar iret xchg nop outsb push outsl xchg push adc jg call mov (bad) dec leave add ret mov mov adc cmpsb sub sub sbb nop lcall sbb sbb les adc or xor (bad) xor aas movsl (bad) lahf int lcall xchg mov xor stc cwtl xor in mov inc aam jmp inc out add rcl cmp adc (bad) dec scas adc jb and lahf xor cmpsl pop mov adc add xor int push fsubl rorl iret frstor jns xchg cmpsl adc scas or in adc leave lods bound cltd clc out (bad) xchg test jno xchg and shrb mov adc sub lret inc ds mov les dec pop and daa push cli adc test pushl xchg xor rcll adc hlt mov cwtl psubq cmp call push fucomp xor sbb pop scas xchg or mov cmp sbb (bad) xor sbb insb ljmp cmp add adc pusha jne jp add (bad) cld jmp adc repz xor mov stos popa mov cld jb sub sub leave in push arpl es lods cmpsl test jle aam pop mov fidivrl mov (bad) adc dec xor jle push ror xlat cmp pushf les lret sub mov sbb in jae pop adc cmp mov test push mov or sti mov adc shr negl (bad) lock xchg cltd add add dec aas or lds sub hlt aaa sahf add clc mov jne,pn gs mov popf fstpt fsubrs or (bad) push popf adc jbe insl outsl and xor mov scas dec hlt int3 mov mov mov leave push (bad) adc loope jnp jl dec scas notl pop shrl int3 inc cs ds (bad) fsub rolb adc movsl inc shrb call or fistl imul dec push pop pop jle inc or lods adc shl aas push add pxor mov gs pusha xor insb mov xor cmp stos adc sbb adc ffree test fadds xchg repnz (bad) rcl mov int3 in fwait test jecxz jnp xchg ds push mov fsubrl pushl lds lahf add ret mov jge xchg push adc stc adc insl mov push lret pop xor dec cmp das stos mov adc bound push fwait adc and xchg add adc add jp bound out add popa nop int aaa ret push xor into and pop adc dec push adc push add adc jae test adc and push out pusha jbe test jns sub repz fmulp sbb add xlat int mov add into insl add push push adc push fisttpl push mov pop seto pushf aam xchg pusha iret pushf inc (bad) in push pop jbe cmpl repz xor mov sub lods repz and add ret (bad) sub test adc ficom pop pop loop cwtl outsb xchg dec inc imul mov xor pushf add jb xchg int cmp clc xchg (bad) pop or jae add mov jne mov subl or or fistl adc rorb dec mov jnp jg pop scas inc adc sub fmuls rolb stos (bad) sub adc mov mov adc adc push aaa sar jecxz dec pop and xchg or mov dec xchg sbb repnz jno pop rcll (bad) scas in adc push pop jnp daa and push sti or dec adc mov sbb cmp adc push into and sub aam repz cmp inc xchg mov arpl adc cmp aad mov adc rcl sti jmp xor enter out adc jae popa cli into mov popf xchg push enter pop adc cmp sbb test lods jmp sbb adc rol push lret mov xchg movsl fwait xchg xor sub jb loope stos push adc cmp mov ds lss out push jne dec xor movaps mov mov sbb dec adc and jno or scas or (bad) out add xor jmp scas and adc jb sbb je mov add mov cmp mov ja clc add pop fwait repz pop sbb jno addr16 jae loope jno cmp adc add ret scas xor mov xchg inc aad stc pop adc inc mov lcall insb sbb push mov lret or xchg sahf imulb adc dec out movsl mov (bad) xor insb or sub or rclb xchg sub mov mov add je out (bad) xchg dec add mov (bad) or rcl push decl add movsl jmp mov sbb or sub adc in pop inc push or or clc pop xor rclb pop lcall adc lea dec mov fisttpll cmp (bad) adc jge push fdivr sub adc fwait nop jle addr16 mov (bad) hlt stc jl adc push in clc cli xor or call adc cmp sti mov adc (bad) in sbb cmpsl adc jbe repz pop out and jno add and mov lret jnp sub addr16 push into stc or push fidiv and lods nop cwtl clc rclb daa data16 lds shl sbb jo (bad) sub adc xorl lret dec adc mov (bad) outsl xor and repz lds mov pushf dec dec leave addl stos loopne or repz aam add dec or sbbb cmp sbb dec dec in adc dec sub xchg lods adc pop repz lds sbb scas fildl adc lahf ds ret sahf (bad) sub push dec jbe sbb adc pop data16 out pop dec fwait adc arpl dec repnz mov jmp notl lods fwait jo dec xor movsb sarl (bad) adc out movsb or add aad push mov mov xor sti adc xor pop loope xchg adc notb ret pop int3 push push pop add jp push insl movsb stos adc push dec scas lods dec jl adc adc outsl mov mov nop inc sub add cmpsl enter adc lds mov (bad) sbb adc stos nop movsb inc xor mov push adc mov or adc mov xchg xor xchg adc mov imul mov stos jecxz inc sbb inc movsb lret insb sbb push or (bad) jg cmp mov fwait adc jae fidivrl inc adc sub jno adc mov mov test adc jno (bad) jno je or mov les mov inc xlat mov lock dec and inc das repz mov dec fcompp stos ret jns loop or repz mov cmp pop hlt (bad) clc adc push jo adc mov jbe pushf push xchg rorl xchg mov movsl push mov adc imul pop xchg adc shr imulb xchg jecxz dec ficomp jge push push lods ja adc push arpl hlt or sbb aas dec rep loope (bad) cmp nop inc inc gs cli pop mov adc imul push jle mov aam and and leave pop dec pop jmp inc cmp sahf pop inc pushf jp adc dec add shll cs fldenv shl mov ret shr push pop mov adc pushf pop jge fsub jnp push shrl or push push les xchg adc xchg lahf pop xchg cld xchg js frstor or adc mov ret lods movsb fimul adc add xor cmp inc mov imul ficoml outsb xchg mov inc adc cwtl dec sbb lea pop xchg and scas (bad) mov mov xchg ret or adc adc mov pusha inc adc pop in jns xchg in sbb (bad) imull test mov xchg xlat inc call push aas mov cld adc mov dec fwait pushf mov adc xchg push stos popf push push sbb pop lods pushf nop fnstenv push repz or fmuls ja xor push jecxz insb hlt sbb jnp movsl sub stos or cmc js mov loop aam ret add mul gs adc and ljmp mov sbb (bad) push fs sbb je data16 mov jne adc cmpsl lcall adc pop icebp (bad) mov jns pop or adc sti pop imul xchg mov (bad) xchg sub jmp sbb rolb and dec and adc fs push mov lods lcall adc mov lahf and adc pop das push xor push lods idivl adc pavgw pop push mov popa adc push stos ss gs xor adc faddl adc mov lds xchg push cltd test pop sbb sti out mov adc xchg xchg cld mov mov adc mov mov adc stos sbb adc mov cmc dec cmpsl je adc jmp fmul (bad) repz test push jmp or mov cmc pushf push pop adc inc inc mov popa and lret push xchg aam adc (bad) sbb push inc loopne int3 (bad) push adc and inc mov insl in (bad) or adc repnz adc (bad) xchg nop adc and mov addr16 mov pop (bad) mov push jp lods or xchg cmpsb rclb mov sbb mov adc and mov rorb ljmp add es xor push inc dec sbb pop or mov repz dec or add or (bad) adc cmpsb ret (bad) repz cmp xchg pop (bad) (bad) xor call jg subl inc sub xor adc or dec mov rcl mov mov adc data16 dec idiv push push repnz xor push mov scas xor mov pop or adc or sbb sbb or inc mov hlt xchg cmpsl mov fisub jp bswap in lcall jno lds or push mov adc data16 pushf adc and xor aaa mov adc push pop pop mov xchg mov movsl mov or cmp add xor adc clc add pop outsl and mov push xchg loop or xchg out pop cmpsl or loope jno pop test bound jecxz add push rclb mov sub mov xor mov add mov pop adc inc push out inc jno inc in pop mov pavgb mov out insb mov lcall mov dec in ds push jno adc and test mov into adc add je and pushw out arpl xchg out jg (bad) loopne test sbb pop xor dec andl stos mov arpl sub out lock push in adc loope sbb fucomi mov adc daa (bad) in pop xchg pop ja rcl sbb imul adc fstl ja or mov outsl iret (bad) push lret andl ja movlps mov sub popl repz clc rorb cli pop mov mov das sbb mov inc jg xchg adc shll fildll stos mov enter push pop imul stos cwtl fcomps or je,pt xor mov cmc push push (bad) push in sbb imul pop push stc cmp pop popa adc push and jmp push push pop push add ror mov pop adc xchg scas mov adc outsb outsl push jne sbb xor or jnp scas add cmp dec icebp jb lret pop sub jno push add inc lods das mov add sbb jo test pop sbb negb sub xchg aad pop adc in pusha add and idivl add loop fisub cmpsb jp popf stos pop leave mov mov jnp add call or push mov adc jb call mov and pop popf (bad) mov inc add adc mov mov add rcrb lret fwait or pop pop fisubr mov cs lcall jb mov adc aaa xchg mov lods js out mov adc repnz push pop cmp mov cmpsl jo pop add dec jno mov icebp (bad) adc sbb mov shlb sar mov adc clc sbb dec cltd or test xchg pop xor push inc mov inc add nop adc fsubl mov or jne,pt (bad) shrb cmp pusha or je adc pop int3 lds mov pop outsb lahf fisttpll adc imul adc dec (bad) mov jg idivl xor sbb inc insb mov push push ja aas les sbbl push add inc adc add gs das popf je pusha into xor sbb mov ds adc aas cs ficom xchg in or mov outsb and xchg or ljmp outsl pushf mov mull cmpsb adc stc outsb or mov adc fistl lock sbb mov pop mov ret mov iret scas cmp adc dec arpl hlt je add inc pop xlat pop (bad) cmc je jb cmp out inc push and adc clc mov adc sbb xor pushf ret mov jno imul xor inc dec add push icebp adc jecxz sbb out outsl enter add jae or repz sub scas test push xor rcrl aaa mov push jae jb inc xor mov arpl mov xchg mov xor or xor in and movl adc sub test mov adc push call fisub add mov or (bad) daa mov or adc stos and mov cld arpl adc mov iret adc cmp dec mov fstl mov adcl lahf xchg mov pop dec inc sub and cs push mov adc ret fidivr push and (bad) in std or add pop and xor or sbb dec mov cld in je jge mov cmp pop jmp mov popf push pop adc bound add lret push in std scas mov jae nop sbb adc pop repz pushf jns movsb adc ds jbe aas pusha mov xchg adc popa ja jge adc out and rorl and cld jg clc push mov pop scas mov or mov mov adc push cmpsb xor pop adc cmp adc sub xor in adc push adc xchg scas inc stc xor mov add lret fldl jmp adc adc insl dec cmpsl xchg or imul xchg es nop cld push test pop pop aam jne adc mov stos pop shrb fcoms mov leave xchg cmpsb mov adc add fsts je comiss xchg imul test push lock and adc push outsb jnp packsswb fistpl push (bad) push adc sub adc sarl (bad) ss add xor in jne hlt xchg mov or adc lock nop adc std int adc loopne sub sub or adc mulb leave mov xchg repz xchg enter jl js inc xchg ficom push sub imul rcll cmp pop out inc imulb test adc dec inc cli adc sub test xor mov popf iret fild mov mov daa or adc push push pop nop mov mov sub or je mov adc nop push mov sub dec mov out add repz rcrb cld mov testb cmp lahf xlat adc popf bnd and mov cmp test out mov mov add adc xchg fistl mov cmp jae rcll in cmp movsl add sbb nop mov sti jmp in jns lock mov int adc rclb push scas pushf sbb mov pop imul ja cmp fiadd xchg int3 pop mov xor (bad) cmp les push shl adc lock sub mov xchg adc lcall xchg cmp call std jbe dec dec adc in inc jecxz repnz hlt and mov rcll adc inc lods push sbb adc lret xchg lahf rorb dec push ss testb cmp mov mov lods pop imul adcl push cwtl (bad) repz push movsb ret push pop loopne mov (bad) loop stc adc sbb scas scas xor mov mov lret add hlt mov cmpsb jp call out add ljmp test push (bad) lods adc cmpsb rol lcall jecxz xchg push fisub roll in pop push sti or xor jge sbb insl aaa push popl mov mov daa mov fdivrs ret and adc popa stos xor (bad) popl xchg mov adc adc (bad) cmp clc add call das into add xor scas wbinvd gs icebp iret xchg ss daa adc (bad) fcoml sbb add sbb cmp add into repz dec data16 cld mov adc or push sti test dec inc je dec aam jae jg add loope pop or ja and sbb mov dec iret stos dec xor adc in inc sub aas sahf push (bad) das jle inc sbb or mov in adc mov jne fcomip push xchg aam movlps cmp push mov dec dec push push sbb aam popf ret cmp xlat vpcmpeqb mov je sub psubq jo mov daa or sahf test and adc data16 shrb lods jl mov xchg insl test sahf pop adc pushl enter dec lods add add out mov test inc sbb in int adc pop inc insl xor aas mov mov adc or or cld lds or and cmp (bad) enter and sahf or xor lea adc arpl hlt push push lds pop dec lret gs adc xchg jmp adc dec dec aaa fidivrl lea adc add stc sbb imul jne xor rcll push jae je xchg add jl ficompl xchg sub test std lods insb sub addr16 adc jg (bad) cmp movsl add push (bad) pop pop addl nop or cmpsl mov sbb and popa jno mov jp dec ljmp rcrb push inc insb push or adc sub imul fdivl adc (bad) jo or jb push jg lret pop adc sub fs repz out jl ss mov or clc icebp repnz rclb hlt les xor xchg dec pop cmc ret out in xchg adc dec fsubl fst mov mov hlt (bad) enter sub xchg (bad) or (bad) popf mov adc pop ds data16 jmp jo outsl jp imul daa and cmp add sbb inc pop push mov jo stos clc push not xor adc jnp mov cltd std add xchg cmp mov rcrb adc or enter je test add (bad) ds cmc mov mov dec aam xchg add inc fsts sbb sbb jnp cli sub adc mov push testb xor adc pop add (bad) mov in pop add and xchg adc insb int adc xlat std out jge (bad) mov adc sbb mov addr16 movsb leave adc sub mov adc lea dec mov push enter inc cmpsb xchg aaa mov lret fwait xor mov movsl jmp add jbe mov subl push rcll pop sub repz jo mov lea pop xchg xchg bound pop das adc mov cs mov test inc inc cld (bad) lea leave adc lret fist xchg or je adc push cs jle lea jg adc xchg push dec mov je push inc cmp or mov stos insl call xor lods adc mov repz push bswap cmpsb jge adc out out jecxz mov ja adc or mov push imul adc hlt incl cmp mov inc std push mov push imull adc pop jne dec lret jno lahf xor (bad) dec or shrl test inc mov out icebp cmp repz xchg pop popf xor pop dec dec stos push outsl push and pop push or adc push ret ss push iret adc test adc cs cli jno push loop sbb ds mov jb bound mov cmp movsl pop inc negb loopne je add in mov and or and mov mov out xor fistl push sub adc jecxz fsts je mov inc adc lods cmpsl mov sahf inc or mov push push mov jmp shrl ja sbb sahf sbb adc stc in repz mov xor pop cmp adc or xchg popf fldl pop sub jmp out call cmovbe adc or cmc xlat fwait (bad) adc js ljmp fucomip pop jl pop repz xchg (bad) leave push cmp int3 (bad) mov jb movsb arpl sbb xchg inc repz jne push push mov mov fcoml jmp add repz inc outsb icebp cmp mov xor mov add movsb addr16 lock add leave push add fldt adc mov repz pop sbb sub adc push add jnp adc add mov imul iret out add out rcrb rclb in popf and sub mulb in push mov test out leave popw (bad) adc pop sbb repz fisttpll scas mov adc insl js sub push es arpl mov ret adc adc cltd lahf mov xchg sbb add rol ljmp jmp jge inc sbb or nop adc jbe pop adc jns add dec mov pop push js and adc icebp mov pop dec and or rcl scas push in stc pusha repz xchg (bad) into mov mov sub lock adc jle out xor cmp mov pushf pop sbb test js mov jns ja or jmp test mov and pop xor pop pop sbb dec gs and push mov fdivp les arpl in into xchg or push inc or xor sub mov mov repz rcrl dec or leave adc xor lret adc cmp sub pop fldcw dec out jo adc mov aaa cmpl add adc push mov and andl mov push out sub test getsec imul add fcompl or pop dec clc lret xor cwtl or mov push xchg mov cmp sbb xor rcll mov pop lcall sbb sahf push into adc in in insl xor and (bad) movb fcmovbe adc out int lock dec pop es fisubl mov (bad) fldenv push sbb jge fistpll out push xor pop mulb lar adc ljmp rol ror ret push adc scas adc test dec adc adc inc rcr mov out je xor inc adc int3 dec xchg adc pop (bad) mov inc outsb mov ss xor dec mov push xchg inc sub shl ret shlb in ss mov cwtl loope fidivr inc xor jns cli xchg aad pop adc arpl jecxz fnstcw mov daa sahf cmp adc sub mov inc daa xchg dec mov popf sub gs mov pop mov or dec adc pop push pop xchg add repz mov xorb lret mov xor (bad) adc fwait and sahf sbb jae adc (bad) pusha rorb dec sub daa mov adc test add movsl adc lahf xorb dec adc sub cmp push mov push adc imul pushf add sub xchg lret nop add adc sub outsl jmp push ljmp daa inc mov inc (bad) mov jno cmp das mov cs pop xor sub adc in push adc stos lods xchg sbb mov adc sbb sub push mov bound inc cld xadd jbe movsl and mov (bad) cmc or xchg les mov xor dec or imul dec push add push adc sbb adc mov fcoms inc cmp push movsl pop adc call into sub lods fsubs repz dec cmp mov pop fs outsb mov aas mov sbb xchg or adc rorl cmc mov cmpsb aaa rcr cmp adc mov (bad) jno adc daa xor jg add loopne fildl inc fcoml xchg add mov fsubrs sbb repnz fiaddl mov fdivr add pop xorb mov fisub pop xor adc aam sub bound into adcb outsb fwait adc ret adc adc and inc inc adc jecxz cmp add adc jno pop mov push sub mov clc shl xor fstpt cmp mov lahf add push testl mov add push in test inc cmp movsb adc in xchg cmp jecxz lods ficomp adc add dec addr16 push adc ret cwtl mov stc push flds or iret ja fnstsw arpl dec sbb pop shlb icebp stos ds adc adc ljmp mov mov or repz test mov inc jne add mov test jns pop in xchg xlat pop jnp push pop or fcompl add je cmpsl mov outsb add push and (bad) inc and in notl test inc sti cmp adc xchg pop fiaddl inc adc mov pop pop xor ds and pop addl mov mov lods sub mov ja les sbb clc push inc jl fwait imul mov adc orl jp dec sbb fstl into idivl jae pop bound rcr pop sub mov (bad) mov ret sbb in int mov lods xchg iret inc adc in xor jno pop (bad) and xchg adc rcrb jnp lcall arpl shrl and ret call lods pop std pop pop (bad) jno jl je aas es enter stos mov mov out mov repz int3 cltd addr16 or push in arpl lcall movsb cmp mov aam push jecxz jo dec inc (bad) or fpatan imul test out shll (bad) mov push mov fcmovnu dec into je pop das jb scas dec jg add repz rcll leave mov pop adc mov jge cltd dec (bad) xchg inc adc aam repnz outsl xchg adc mov mov popf test dec repnz sbb hlt icebp popf mov repz pop lahf inc mov add in dec lods pop or pushf adc add (bad) fildl dec xor pop xchg xchg aaa and mov mov ficoml icebp pop pop adc push out insl xchg dec test jno lds fwait adc jmp xor ljmp jns mov push repz inc add fs add insb push lods int and add dec cli sub inc cmp push add inc adc sar adc mov cli dec inc adc xchg in lds mov test aas in adc jp idivb mov in int3 adc ss stos arpl and insb (bad) lds pop in push lods mov in adc adc jl pop push cmp and cmp fcompl pop or mov xlat addb leave adc cmp push push orb sbb dec int jne pop cmpsl mov in fsubr das adc jbe enter cli push push lock mov in cmp adc repnz sti mov mov mov mov jl pop movl jmp adc hlt (bad) mov call lea add popa jno addr16 and adc mov test jne xor cmc je sub (bad) xor js cmp out xor clc mov adc out dec test mov mov cwtl out push xor inc call mov cmc xor pop scas or daa mov adc xorb sub adc fstps adc pop xchg test lret inc shl jmp iret adc or push jno cmp in scas add fs sbb out lret adc jo cwtl jmp aaa adc ret std insl into aas add in jp movsb sarl push cmpsb jae pop sbb pop mov push mov lcall xchg jle sub dec add add mov mov xchg (bad) xor fwait mov add push loope std mov fdiv inc ljmp lcall sbb pop jns pop adc into mov adc int3 sbb repnz pop lock es add xchg aam push pop repz xorb mov repz xor push add pop and mov jp mov scas jle adc jno xchg xor fidivrl jmp adc mov dec adc sbb dec hlt je adc lea sbb imul ret jmp aam pop pop repz loope mov or es jnp xor jge push ficom mulb movsl lock outsb paddsw adc adc jecxz pop mov in adc out aam and cmp adc lret push adc (bad) aaa jnp inc cmp adc stos out cmpsb addb sti cmp add loop ljmp push dec (bad) sub xor movsb int dec pop and push je or inc mov (bad) adc mov sbb dec lea sahf jg sub outsb imul and data16 adc fcmovnb adc ljmp les fiaddl (bad) ss insb movsb xor ja and sub sahf xchg or xchg adc ss (bad) bound mov mov adc dec lock xor xchg int3 jl mov jp sahf adc pop mov out push gs (bad) shlb lods loope add insl xchg cmp mov mov sbb in mov adc sbb adc arpl (bad) pop icebp sbb ss movsl bound lret mov xor pop xor aas and pop dec mov cmp adc insb sub xor (bad) and jmp jle adc mov inc adcl jae (bad) adc testl mov lret aad jne (bad) icebp mov mov inc in hlt mov ret repnz jg cs aas insl adc jl push cmc inc xor inc and mov inc xchg xchg notb outsb cmp xchg sti xor mov out lret adc mov mov adc cmpsl jnp adc dec jo jmp and sub inc inc mov cmpsb cltd mov loop xchg cwtl or imul inc xor ss xlat xchg mov mov add mov push mov dec scas bound js push dec push pop adc push das rcll push xchg loopne push push xchg aam jl imul add mov xor and xchg sbb jae mov mov mov push sbb inc add sub in aas add and roll es scas pop sub pop (bad) loop add mov push xor aam inc sti (bad) notb push jecxz pushf faddl (bad) xchg ja adc or or les ljmp xlat mov (bad) cmp adc test inc mov sub adc adc inc sbb dec push mov sbbb xor jecxz inc or pushf mov adc fdivs jns (bad) das movsl adc iret cld adc push and sub sbb or adc sbb outsb mov xor push adc jae add or dec adc mov jo (bad) pop outsb sub mul loopne pop (bad) repz dec arpl adc sbb dec test fdivs adc (bad) movsb stc repz rcl (bad) ljmp adc pop shrl mov mov mov dec adc inc ficomp mov push xor xor aad pushf mov sbb xor mov push cmp aas inc and mov lods adc rorl pop repz adc jge loop pop push pop fimull mov fwait loope push adc pop lcall push (bad) nop int3 (bad) mov adc jns pop mov jnp fcmovne shr sbb dec adc pop cld call push mov (bad) decl fsts adc (bad) (bad) mov push sarl sti hlt lea adc cli cmc add lcall and lods xchg orb dec dec add in lea adc mov ret loopne aaa addl push pop add push jo mov div fist xor push movsl rorb pop add in (bad) push sbb movsl and adc adc jno inc lahf adc mov xchg push cltd dec call fiadd adc data16 pushf xchg out sbb sub dec loop sahf jp xchg mov mov mov rcll pop cmp dec mov inc jnp add stos sub dec cmp cmc aam ja test repz dec xchg shrb lret adc jle fs sub pop lods mov outsb out push fldl jne xchg inc adc or sti mov xrelease xor mov adc ljmp shrl inc or popa adc arpl jge lds sub sbb iret sbb cpuid jl sub mov mov lock adc mov cwtl xchg adc cmp into mov xor push ret add dec jae mov add mov pop mov jnp mov dec mov js leave mov mov repz mov or jp inc sbb loopne push shrb jge mov push leave out xor dec inc (bad) sbb xor xchg mov dec dec sub ret loopne jno sbb in data16 dec jle and fsts xor mov adc xchg cli enter sbb rorb rol mov cmp hlt fwait test std mov push xor repz adc and ret test or lret out (bad) (bad) or pushf repnz dec sbb ficoml xor mov stc adc mov cmp dec dec es adc imulb cmp into adc sbb sbb jnp dec sub cmpsb (bad) sbb adc (bad) stos pop inc daa and stos ds fidivl cmp xor lock inc mov inc mov xor adc and or nop addr16 sbb push jno xchg pushf lahf std mov lea femms adc stc in fisttpll mov dec out adc add xchg fcoml dec sub jbe nop imul pop (bad) nop push dec ret jmp bound mov pop sub testl adc mov lods adc jo pop adc pop fidiv loope mov push add aam rolb or int sbb or out jle lea in das mov cmc adc ss (bad) cmp rcll repnz nop sbb adc adcl adc pop ja xor cltd bound out push mov dec adc in clc test xlat adc mov adc iret lea je movsb cmp in jmp dec inc add mov xchg mov mov es repz ljmp imul inc and iret inc adc clc cmc neg add mov (bad) icebp jb loope xlat decl pusha push or jle inc mov adc xchg sub mov inc jl adc sbb test rcrb scas sub inc xor adc (bad) aas jmp movsb or adc mov add adc stos sub dec push test mov mov gs push add jle and dec mov sub or mov mov and mov aam sub mov test inc pop adc xchg mov cmc repz jmp sub mov pop (bad) int je sbb lret adc xchg xor pop repnz mov fadds int rcrl adc inc cmp adc cmp xor push push add dec sub mov mov mov xchg mov pop adc movsl pop pop or jecxz icebp push push aaa jae mov addr16 (bad) jbe jo adc or jmp sbb or xor test aaa cmp jne cmp jno incb mov xchg out outsl mov sbb mov and dec lcall loop das out adc in mov dec lea xor inc push das jp adc add outsb shlb jg stos pop and out movsl inc jno mov push shlb sahf aam cld std test lcall adc mov jmp pop notl xor rorb js adc aad pop addr16 pop ljmp mov add mov fwait or adc or push nop xchg int3 add mov sub test lds pop and out sub int3 mov xchg stc sub mov mov add sahf jecxz enter ljmp push mov repz andl cmove xchg adc and (bad) scas ljmp and ret loop adc add add andb popa jl lahf int3 les jnp cwtl ret jg xor mov dec sti cs and inc push (bad) xor sbb adc add into xor outsb lcall out mov pop xor cmp mov xchg lcall cmc out or inc arpl adc aam fsubr push fwait divl test inc cmp sbb adc invd inc push mov adc cld out jns dec mov cmpsl xchg mov mov fbld sub aas xor push and les (bad) and xchg mov je (bad) das iret sub xor mov adc (bad) hlt push lcall cmp or mov push inc sub pop mov adc ds test iret imul and mov mov pop fisttp mov inc or fnstcw cmpsb in mov mov and and xor sbb sub ret inc cmp jae jnp (bad) and push popf jb or add xchg jns add jg jmp mov inc pop cs cmp jmp adc notb es cmc xchg adc ret movsl dec jb mov cmp cwtl adc pop nop popf inc sti je xor mov mov mov popa sub mov dec mov xor add xor test das mov sbb sarl adc sub lds xchg jbe inc jp xor or pop out mov mov or in icebp pop xor in cmc push mov inc mov jno xor add in fsubl xchg repnz sub lock push cmpsl lods adc call lahf push fmul mov les iret cltd sbb adc sub fucomip and fwait cltd inc imul dec int3 lcall jnp stos mov ss sub jnp,pn adc (bad) xchg mov mov jp test mov adc adc cmp cmp jle add repz lods lahf inc cmp adc cmp push pop sbb sbb xor iret xchg arpl adc pop aas pop mov lods sub outsl out dec ficoml cmp (bad) sbb mov push lret mov (bad) enter pop fucompp inc or roll sbb and push add adc arpl dec (bad) adc mov popf xchg aam notb push gs mov insl adc std push rcrl test adc in testl pop pop sbb (bad) fdivl arpl sbb das sub add jle push push or repnz jne pslld xchg jmp stos flds cmpsb add mov fcom stos mov addr16 scas gs adc mov pop mov in adc nop jp mov mov dec loope and or pop adc ficomp pop dec sbb adc gs lahf adc test pusha int adc mov pop repz sub nop dec xor pushf or push test rolb js lods adc lods or adc mov (bad) in xchg adc nop cmpsb movb mov in add adc mov cmp icebp notl cmc rcrb adc inc xchg add notl enter loop test nop or (bad) sub ret push sub and and mov pop or es adc (bad) jge dec stos pop lret lods cwtl add or mov ret jle xor pop es hlt aaa jecxz push fbstp push or out adc repz repnz adc push in stos adc sbb fdivs mov ret pop add adc add jle sar imul test xchg and adc leave movsl adc ja in adc das icebp imul scas mov (bad) adc dec add push or push push out adc je (bad) loop dec js mov inc imull test jb push das test push push push aas or call mov repz lods cltd adc in sub xchg rcrb aad aam push add cmpsl adc mov insl adc xor adc and mov out push xor mov mov inc push cmc lcall mov mov sub call (bad) or stos sbb add movsl pop jae mov orl push and jge mov mov or js push adc aam xor add into or popf adc fistp adc add lcall outsb jle aaa mov lods or adc fwait push in mov mov add andb in and push js popa cli push mov sub or jecxz stos inc pop aaa sti mov (bad) nop inc pushf (bad) sbb xchg daa add mov xchg add xor jns xor lods add cmpsb push adc (bad) mov cltd mov xor repz adc mov or and mov out adc mov jl in loop cmp sub inc inc xchg and movsl adc add inc xchg lahf adc adc sbb dec cmp jle dec lahf adc mov adc nop or lock jge adc (bad) jno push dec jae (bad) mov add adc aas cs mov mov fldl sub dec jne mov aam add sbb mov sub movsl push or mov insb orl push ret adc jb (bad) xor mov pop xor hlt pop add xchg scas fnsave repz int3 dec mov jge adc fwait scas inc mov data16 rcrl adc adc sub in adc iret enter and mov dec adc inc mov into mov adc push adc lret adc idivl clc out add jb lahf pop hlt jne push repnz or inc rol jne stc add loope (bad) xor cmp loopne mov jb xor rorb ds sub adc je rcl and fimull mov pop jg stos adc pushf xchg cli jmp lods dec sbb or push add inc dec adcl call scas or hlt push (bad) adc dec in adc pop jb dec adc adc push cmpb lds repz outsl mov push mov add loop cli add stc (bad) adc insb jne sti rcl pop fs pop addr16 adc xor (bad) xor cld or sbb into mov sub sbb inc dec adc adc xchg cld dec lcall jg out aas cli adc inc dec push jle lds mov insb mov pop test sbb pop aad add mov jns cltd jo es je pop lahf push cmp jbe fbstp in adc ret loopne push and pop arpl inc (bad) cmp jbe ljmp mov or pop and popf xor cmp adc or sbb xchg adc pop mov repz pop pop fidivr cmp int sahf mov mov cmp (bad) rcll fucomip enter push loope push (bad) add adc sbb xor xchg jmp lods in xchg dec or mov sub aas rep cmp mov ljmp std mov xchg xor stos push mov sar dec or lcall dec dec mov (bad) lods in loope retw jle adc lods add jl inc mov mov adc imul dec jo scas or add jmp rorb aad add pusha adc mov and es (bad) out adc cmc jno push dec adc inc cmp dec inc repz imull mov push xor dec pusha pop lret ret jmp xor jns mov adc lds sahf pop or lahf ror xchg push pop pusha dec in inc adc add jbe mov fsubr (bad) jb mov mov pop or call mov and xor fistl in pusha mov imul aaa fwait sarl push lds rcl or nop pop cmp scas adc and add nop lea pop insl xacquire ds mov lds inc sar add xchg pusha or mov and inc push adc sbb and add test mov stos out loop fisubr sub xchg mov jle add dec pop xchg sarb xor jno or insb adc icebp cmp sub (bad) mov movlps stc pop xchg es test sbb or adc xor out xchg daa je xchg push mov pop dec std je cmp imul (bad) jb sbb push mov lahf and or pop xor lea sarb rcll icebp cmpsb stos loop dec mov shrb push adc jecxz cmp (bad) stc adc icebp mov cs faddp adc sbb (bad) loop adc jp xor xchg xor adc sbb mov adc out and mov call dec or or jp sahf jns bound sbb in hlt in (bad) mov xor xor add mov mov adc cld fcom orl mov add lahf daa adc jle mov sbb lret ret sidtl mov call enter (bad) adc xchg popf das mov xor out enter xor rcrl insb adc lods loop xor std push fdivl (bad) and add shll roll jp push jb and in sbb sub or mov push mov lds fisttpll cmp or in sbb (bad) mov iret mov pop jmp push fcoml inc xchg lahf (bad) nop scas xor jbe sti and and jns xchg into and ret rorb push inc scas adc clc aad lret fistl adc push sbbl imul addr16 add fimul sub notl lret sbb mov xchg adc mov cmpsb xlat cmc fcmovnb adc pop pop pop adc sub or outsl fstpl sub in adc dec jae adc int push mov loop sbb or cmp cmpsb add adc bound adc mov test sbb add adc cld out enter repz jge jae insl mov push dec ljmp arpl into scas adc leave mov mov mov dec mov imul sbb arpl adc (bad) ljmp pop out (bad) adc push xchg lret fisttpll mov out movsb jmp push aam add and adc sbb js add push jno nop adc mov or arpl cld out hlt dec add inc sti insb jl sbb flds inc push xchg rorb sti clc sub test xor mov jbe rorl lret adc in fimull add sbb (bad) imul and mov repz xchg dec inc rorb jb adc cmc inc sbbb adc out cmp push inc cwtl adc adc adc pop jbe jno jecxz adc in add cmp pop cmp add add ffree xchg push stc mov dec cmp dec (bad) lahf mov mov imul xor sbb jnp and add push aam xchg pop mov (bad) adc ja in mov adc jle je (bad) adc and mov mov cmpsb add out jle add in jae or lret ret cmc lret jne pop adc (bad) in sahf call adc (bad) adc (bad) jecxz enter xchg sbb add ret dec add or xor xchg das sarb lock mov outsb inc push inc dec mov and pop mov sub jecxz add lahf and push loopne enter inc mov pushf inc or sbb mov mov add xchg jp adc mov lret adc (bad) loope nop push mov xor jg mov sti push add inc adc jecxz js push sub test mov sbb int adc loop loope mov adc dec nop out js add nop mov adc test adc jg xchg adc cmp stc mov outsb lea (bad) dec dec (bad) adc ja hlt mov call mov xchg cmp pop popf mov (bad) out mov mov mov inc jmp push xor or repz dec cmp jge fldt sarl pop test push sub push imul add fadds push adc dec testb xor inc add enter adc negl xchg lahf mov xchg cmp mov add gs xor inc xchg rol aam (bad) jmp sbb in sbb mov jle out and test lds jp cld mov sahf adc dec sbb jecxz insb das jg and pop in adc adc inc dec mov adc mov into adc sbb dec and mov pop cltd or ja or out rcr aas pop mov xor cmp nop mov mov test push push icebp adc les leave xor add or jecxz jno in dec adc mov jmp xchg mov adc mov test jno sbb or mov ljmp lods adc pop in mov adc jg pop mov jns shll push pushf ret jecxz jmp or hlt pop and loopne popa (bad) fisubl cmp jae xchg mov sti test push arpl negb sbb mov aaa sahf outsb adc cmp cmp mov push mov jno adc ds jecxz mov shrb push (bad) adc jle ror call mov jo push pop rorb mov ja dec and movsl test repz mov clc mov (bad) adc (bad) dec ret mov dec adcl adc adc xchg mulb pushl sbb jp popf xchg xor mov fsubl out push pop adc dec pop adcb or or mov xor push sbb xchg jecxz sbb and int3 repz adc popf mov xor adc jae in xchg stc popf dec adc sbb call adc nop sub push xlat jo call dec or inc mov jno or stos pop sti cld adcb test adc subl inc pushf das es adc mov adc adc sbb and adc push notb pop cmp sbbl out or xchg sub shlb testl add xchg fmuls or jns test int3 sub mov adc arpl pop enter add adc cmovnp sub movsl sarb sub pop ja sbb adc jmp cli push adc sar cmp movsb add mov dec fistp sbb adc adc pop icebp xlat sar int adc adc xchg push push adc xor add in mov adc fldcw sub mov fistp ret movl inc cmc arpl mov xor sub in xchg jnp mov or mov or lods cli lret mov sbb pop sbb ret adc or test mov inc mov sbb cmp push cwtl add imul sub js adc movsl sbb pop loop and shrb loopne (bad) and dec daa or pusha adc mov cwtl (bad) xor add sbb popf adc movsl jo push pop adc subl adc in ds pop xchg cltd adc call add sub cmc pop xchg ss nop cmp or arpl nop sub or fmuls std lds shlb stos jle fucom adc pop sub nop fild pop clc dec or mov popa push out xchg jb cwtl adc inc loopne stos imul mov dec xor loope enter xchg int daa and into mov sub xchg or adc in or push mov sbbl push mov sahf sub test mov add push add adc mov dec das popa adc les add or lock dec mov out test sub pop adc sub inc call push mov push dec ret push jb jbe mov dec leave inc sbb movb jmp adc pop movsl jge pop mov dec ds dec hlt adc shlb push pop adc lods sbb adc and inc adc add pop dec jb in mov rcrl fnop and pop into pushf arpl int xor dec prefetch dec dec adc (bad) pop cmp xchg jne repz divl adc fcomip lods (bad) sbb adc and xchg je push aad inc mov nop pop adc push push push adc xchg repz fdivl rcll insl inc sahf das dec pop pop (bad) adc add jns dec movb mov outsb pop das or nop repz xchg fldt adc in in adc stos shl mov fstpt cld ljmp movsl (bad) in (bad) xchg sub and sti addr16 lret loopne adc xor sub inc mov sub mov fcomip push adc jmp jg imul pushf gs lret (bad) jg push sbb daa adc and adc insb ljmp pusha sbb adc ffreep lret iret adc test sbb aad pop xlat pop ljmp sbb push adc mov dec int3 mov rclb adc inc xor in movl mov and mov mov dec adc inc stos icebp mov cmp adc lods sub push in adc jmp popf fist xchg push dec js or (bad) and repnz mov ds cmp sub add je and or push mov dec leave mov stos adc (bad) push inc mov adc mov or stos pusha adc xchg adc rcl cmp mov scas mov xchg inc sbb sub mov dec or and mov mov jp xor or inc adc rolb out das push daa jb,pt adc pop jne adc sbb inc test mov iret ret adc xor call mov ja shrb sbb sbb add jmp xchg sarb adc jmp or adc fwait mov jp not mov or sub mov movsb je aam xchg adc inc stc adc jmp add daa and sbb jo jno or inc mov adc adc mull or sbb out ljmp xor or int3 arpl cmpsl and mov and jmp stc adc js cmp andl mov enter sub call ficompl cld dec mov push lea (bad) adc test sub ljmp rclb jmp pop jle lret (bad) repz scas push mov xchg adc or sub adc xchg stos jo fidivl adc cmpsb xorl in movsb sar sbb sbb fimul dec add inc sbb xchg ret movsb adc (bad) jnp mov inc push mov ret add adc rcrb pop mov (bad) mov and sub or hlt jmp (bad) jno sti (bad) xchg adc or cwtl ret movsb adc or xchg repz jnp sar movl in add clc sbb adc aas setg pushf adc xchg cmp cmp loope jo sbb in (bad) mov faddp sbb adc xchg out mov mov mov mov jns add mov xchg add adc sub cmpl xchg pop mov mov int sbb shrb (bad) sti daa dec lcall and cmp xchg mov or dec xor in das jns or cmp adc leave fidivr out ja mov js adc jnp jle cmpl mov dec mov cmc repz jbe cmpsl aam cmpsb mov push add jnp aas xor pop xlat in dec xchg adc ja xchg pop inc rcl addr16 adc lret or out hlt xor xlat dec loope add cmpsb movsl jb cmp cld incl push adc mov mov pop sbb loop mov xor repz cwtl addr16 mov or (bad) lods lods sbb sbb add outsl (bad) or adc xchg clc cmp xchg aad xchg mov mov xor adc lods outsb xchg cmp int mov add adc mov in lds dec imul pop adc in clc hlt (bad) adc mov enter rcll push sub or iret popf lcall jo rcl mov loopne out mov decl xchg sub repnz fild mov push rcrb mov xor pop adc xor imul xchg stos adc push fcompl adc popf dec jg mov aas adc (bad) push add dec aam xchg je sub adc int xchg mov adc lea pop repnz xchg pop xchg push sub pusha push cmp adc xor xor lds inc ret add int and or sbb loopnew or aam fidiv pop cmp adc push adc aaa xchg mov pop push ss mov je xchg jg shr int3 bt in cs sbb sar add xor shl lea push int3 sbb ss xlat xorb mov outsb add or insl sub pusha xor enter mov cmpsl pop rcl cmp pusha mov inc data16 imul rclb inc cmp jmp mov adc xchg mov adc dec adc push pop shr jl repz jge jecxz and sbb movsb adc ret out mov cmp adc dec aas (bad) xor or into jo arpl sub mov adc dec (bad) pop inc adc ja push or daa popa add inc push pusha cmp lock sbb adc daa icebp sbb mov cmc sbb out loope aas lods fwait jecxz cli adc mov sti test fadds rcll insl jmp jbe out jmp sarl les dec adc or aaa xchg popf inc adc push mov xchg add lahf xchg or ret adc fnsave loopne test adc mov dec mov jb xchg pop dec sub out adc and xchg adc adc out cwtl jno lret fimul lods popf lret xchg xor xchg adc movsl (bad) (bad) mov push mov sbb sub nop mov es divb add scas sbb aaa add fadd cmpsl sbb stos test push and cmp movlps jae or cli orb xor in and sbb js adc or mov jg mov jns stos lock sub dec lahf and adc ds fildl nop add jl hlt mov sub inc or enter idivl bound in xchg adc adc lods jecxz roll mov icebp clc gs or jne mov ficom iret aam pop ja sub repz adc test mov inc sbb mov adc mov pop xchg inc adc out mov mov jns or add adc inc repnz and mov mov pop leave xor adc adc in fisttpll in jne mov sbb jns mov out stos subl mov jns adc xor repz and or mov lret jb (bad) test adcb out mov push mov out inc sbb adc nop out add adc sub leave mov aaa cmc xor bound adc (bad) push cmp pop lret pop adc and lds (bad) fdivs (bad) stc (bad) mov cmc mov adc jle mov pop lea pop aad out mov push adc lds test push pop adc xor mov fwait add dec add cmp jns push adc int jg sbb cmovae call ds call ss adc mov xor jge notl inc push subl xchg aaa (bad) lahf jns adc out add bound dec add xor pop dec mov loop dec or adc and sbb adc hlt jb stos cmp es mov xchg adc out lcall sbb adc ret adc xchg add test xor fldenv lea mov adc scas leave dec (bad) into mov out fsubl add mov add jl adc inc inc mov cli add (bad) or xor scas stos mov or jmp xchg mov ret pop inc cmc repnz jnp dec add mov (bad) sub adc addr16 pop test cmp push add xor repz out movl adc into test outsb mov bound mov push sbb (bad) pop es hlt mov mov pop arpl or sub jns sahf jbe fdivs jmp fwait push add xor push dec mov lods adc pop xchg add pop pop adc cmp push nop fwait loope bound les aam out data16 add int rclb adc mov and adc aaa test daa or push dec xchg icebp mov adc xchg sub inc mov jmp mov xchg icebp adc sbb leave rorl int3 rcrb movsb cmp cmp sub cmc or mov add adc push push in jb loop adc xor xchg adc fsts idivl sub aad pop shrl push push push cltd pop lcall cmp or aas adc popa sbb (bad) scas adc xor jecxz hlt pusha push jmp dec incb test push int movsl pop adc in push (bad) jbe mov std adc aaa daa dec scas mov adc mov sarb mov adc pop inc lods adc xor dec hlt xor push aas ficom inc arpl das ja xchg andb and or rcl jge (bad) or int mov adc adc inc mov icebp jbe dec add adc xor iret les jecxz (bad) js (bad) mov in adc rorl push js push pop mov cmp negl fwait pop sbb shll lods iret loopne aaa adc pop pushf mov hlt aam fcmovbe movsl jle out jmp mov aam inc in xchg xor mov dec mov roll or or lds mov repnz adc push fs xchg rolb sti dec sbb repz mov leave jnp scas outsl adc cwtl idivb adc mov pop mov shlb stc sub (bad) dec xchg fsubrl xor out les jbe sub mov aad push mov fidivr push adc (bad) push dec sbb pop jo insl or add cmpsl adc mov mov gs cmp jge mov scas jle or jl xor insb notl inc das ss sbb js popa loop stos adc inc ljmp ja pop mov cmp or cmp cmp out xor xchg test jne mov cli xchg gs adcl in or push fisubrl mov adc push xchg mov in ss jno sbb adc insb lea and mov inc and mov dec (bad) dec pop and rorb fcomps adc pusha (bad) mov add ret (bad) mul je or inc into adc mov xchg (bad) mov repz jl dec jp mov xchg aas or xor add adc cmp stos mov pop add or enter inc loop (bad) scas and movsl loope jbe scas shrb adc mov adc in mov lret fistl adc jo mov mov sbb repz outsb std enter lock in jno sbb (bad) cld (bad) cmp mov mov dec adc dec xchg dec adc xchg and shll xorb roll (bad) movsb mov or movsl mov xlat leave ja or fcomps adc adc cmp or pop jbe ss sub pop xchg movsl push jle or cmovge arpl cmp inc push repz jno mov nop push adc inc nop ljmp sub divl cli mov repz sub dec fistp out adc inc ror adc mov add fnsave adc or xchg mov fadd jae test rclb clc mov jg pop mov fistpll (bad) popf mov mov xchg scas outsb mov test clc adc rcrb mov xor xor sub mov scas negl aas arpl cmp stos dec inc leave pusha pop rorb push (bad) jbe cltd popf rcll fimull in frstor dec inc or mov pusha add xor sbb push lods stc xchg mov lock pushf sub paddusb adc mov push push cli (bad) adc pop popa cmp fistp push jno fstps xchg pop xor xchg adc pop sahf (bad) lret iret nop repz jno es or adc das addr16 into adc sub test xor push sbb clc ficom xchg and xor pusha jae push mov jb push cmp rolb clc out sbb pop jecxz cld mov push mov scas iret adc pop and pop jne dec add mov scas adc push loopne add adc in adcb xchg sub daa or xor scas je fdiv jmp dec or sbb xor adc enter adc mov lock mov xchg adc inc adc jb pop out and cmp sbb jne gs mov adc mov icebp mov adc ja pminsw insl jg jle,pt test loop jmp pusha cwtl rorb adc mov ss adc in rclb xor cmpsb mov mov out lods arpl adc lds xor or mov sub adc scas je loope push mov add sub and inc mov outsb loop movb clc fbld outsl test sahf int3 rclb js add (bad) jbe imul roll insl xor mov cmpsb push repz xor (bad) lret lds xchg or cltd ljmp adc pop push call fisttp adc adc and sbb shrb xchg rcrl (bad) adc cmp out push cltd rclb add pop ficomp lcall add lret mov push sarb outsb dec adc movl adc cmp fs sbb in repz mov (bad) ffreep push sub pop in test mov push rolb (bad) sub mov rcll sahf xchg mov push fnstcw imul mov adc pop xor jo jle push shr sbbl sbb fs in loopne lahf ror inc or dec lods pop cmpsb mov sarb movsb mov in jl sbb cmpsl sbb add int3 adc jmp inc or jne and popf fsubrl xchg xchg adc mov enter adc insl addb sbb jg adc loopne aam mov ja push test ret mov adc xchg shll dec dec push gs adc fistpl adc mov movsl mov ljmp repnz in mov jp pop push xchg imul call xlat jg dec sarl or mov jle adc lds push sbb adc and roll pop movl lds adc and xchg jbe ljmp mov clc mov cmpsl dec mov push aas sahf data16 icebp adc inc xor cli add (bad) cmp dec scas insb sbb mov jnp arpl adc cmp loop inc or pop push fcoms mov andb leave push popa mov xor add gs jo xor (bad) dec adc and fwait mov and orl or gs nop les fisttpll mov inc push in mov cli add adc dec dec dec and adc xor in jae in sbb out sbb jo gs sub iret js lea lahf and imul loope xchg (bad) xchg insl leave test fsubrs test cmp (bad) repz lahf dec je xchg cli (bad) jle jecxz cmp jo divl ror rclb xchg pop xchg push xchg mov add jns xchg mov stos pop pop movsb xchg (bad) ficom pop lret cmp or inc scas xchg mov outsb add add pop mov cmc das call leave mov (bad) ss or and xor sarb insl jmp cmp fmul data16 cwtl daa or imul inc sbb or adc push pop and std (bad) adc lods sahf adc ds adc mov fdivrs adc and push jo aam push mov lahf stos loopne xchg outsl cmp push and iret cs ljmp roll pop std lods xor imul adc test insl mov lret cltd mov rdmsr ss cmpsb adc xchg pop adc test sbb dec cmp adc adc cmc into sarl loope jge popl adc stos fsubs add cmp xchg jnp into (bad) adc mov je fiadd rorb in int xor add dec cmp lcall push adc pop mov stos adc jae xor xchg fidivl mov inc sar or adc popa (bad) ret jp mov cmp mov mov das lods int cmpsl lock adc js nop into jae iret imul jno inc mov stos push adc mov ds fmull cli pop sbb data16 jnp aam xorl popa mov les leave sub inc push enter dec mov ss adc sub pop inc call ja mov jbe adc ret adc or mov push fcompl mov pop sbb xor mov pusha pop pop adc icebp mov lahf xchg daa dec mov jne or sbb mov aam xor pop dec and repz xchg repnz inc mov pop cmpsb mov movsl mov sahf xor or imul xor xor loopne xlat imul add xchg stc ja xor cmc loope aas in or (bad) fstpl repz or icebp rep sbb adc sti in adc mov out push mov aaa andb sbb arpl mov push and mov fstps push fimull and mov daa roll xor pop sub loope ss mov fwait add xchg icebp mov sub adc mov xor mov aam mov cmpsb pop enter fbstp and stos pop in xchg fnstenv into mov push xor ja push std adc pop adc (bad) imul test out or adcl inc ja das jmp (bad) loop and push inc push lret (bad) mov (bad) (bad) cmp pusha fwait adc fidivl shl insl dec sbb mov sbb outsb xchg pop sub inc add and lds sbb xor out pshufw mov sbbl lret sbb inc fidiv xchg aaa movsb das sarb push xchg lahf adc dec sbb les adc aam (bad) adc add xor push or jbe jmp add repz shlb xchg mov push adc mov jg mov adc or movsl adc jmp data16 adc outsb or imul jle adc xor std xchg jp jl mov mov sbb jecxz xor adc in mov mov mov lock add sbb adc xor ficompl cli jge adc in cmc lcall lods xor rol scas cmp rorb adc stos xchg jo mov leave imul repz jns aas into in in add pop repz xor (bad) pop adc jecxz mov xchg xor sbb test cmp xchg add js inc pop mov pop adc ret dec in lret repz or jnp gs (bad) (bad) fadds adc mov xchg leave xor pop xor inc scas dec into insb or cld repnz mov out lahf scas mov xchg repz mov lea sub leave aas jl enter out loopne adc cmp (bad) leave adc aam outsl cwtl test adc shrb cmp dec jge out or mov clc jle js adc adc jg bndldx mov (bad) ret cld mov mov test dec dec adc cmc adc in aam inc ret test lods das mov sub js in int and outsb cli arpl call test jge mov fwait xor pusha (bad) addr16 pop scas xchg in sbb adc nop inc and jg sbb movsl pop or push out or and ret das or dec stos or je imull xor cmpsl rorb addr16 imul sbb jp (bad) pop mov add aam sbb mov vpsrad scas (bad) daa xor fisttpl xchg jge mov xor idiv test popl adc leave or push cmp mov add lock mov adc imul adc xchg (bad) int3 test js mov pop or mov sarb jmp add cmpsb add (bad) aad adc cwtl mov inc inc dec adc std mov xor cmp cli sbb (bad) std dec mov jp outsl popa adc mov shl inc sbb dec fs aad dec dec ljmp pop sbb int3 in or enter mov sbb push or inc mov or and mov xchg sti xchg pusha inc adc pushf outsl xchg adc sub mull mov adc jno push adc ja dec stos push xchg repz jge (bad) pop sbb and data16 ds dec jnp cs test add ss ret inc imul push into xchg adc mov in adc xor sub rclb fsubs ja lret dec test lock addl cwtl fwait sub out jecxz outsb dec or jecxz add xchg inc dec inc adc int xchg fistl xchg shll pop cmc lock aam insb aaa push xlat fstpt add jae xchg mov fwait mov sub arpl repz inc sbb or iret adc (bad) cs mov out jmp aam ficoml xor ficom dec aaa xor sbb cmp jl pop ja lods xlat adc jmp out mov mov movsl stos adc cltd das xor dec fsubrs inc aas aad insl mov lds pusha mov cli shrb dec push push popa add out dec sub pop add mov pop stc mov push adc or popf fadds and jle lea or cmc sbb push xchg mov cmpsl or adc loopne arpl cmp je testl xor pop aam jns push adc out or inc es fldl2t mov jmp adc lea and or repz (bad) push adc rorb arpl mov jle inc push mov pusha fcoml aas jb or jl enter xor ja repnz cld (bad) cmpsb test test sahf loop adc ss rorb hlt mov add mov xchg adc push (bad) (bad) push scas test in mov adc mull push sti mov jno cmp data16 sub notb clc pop fiaddl sbb std xlat mov sub pop js nop rcrb (bad) jmp inc popf inc mov adc (bad) jp mov je xor out sub and xor xor sbb dec mov pop pop imul mov mov into push sub shr mov aaa (bad) adc (bad) adc ret xor fcompl jle inc mov ret cltd dec pop cmp sarb xor ljmp dec popa insb mov adc (bad) fsubs push rcl add and inc add test (bad) cmc or cld std xor pop sbb cmp (bad) je sub popl cmp add adc insb (bad) jno xor adc ja outsl movsb sbbb fcoml push xchg insl stos mov sub pop je popa cmp sbb lods loop adc sbb add sar aaa loope (bad) xor repz ds or sub mov fdivs or mov or cli int3 mov adc sbbb pinsrw adc in xor lock jg stos dec in rorb adc daa fbld adc mov and imul outsb stos mov xchg in mov setae inc enter mov mov scas imul in fistpll jnp xor sub dec fstps mov xor push or (bad) sarb cmp push popf jp mov bound je (bad) pushl outsl adc sbb jae adc inc lods cmc and rcrb das jno out rcll mov sub fwait (bad) notl adc repz mov lret jl adc icebp xlat xchg ljmp fs xchg xchg jne adc mov scas adc movsb and adc jle aas jg std adc ss aam adc cmpl loop and sub fstp nop add mov (bad) adc adc jno mul add es repnz sub xor push dec popa repz rclb leave cwtl std or sbb mov pop imulb mov adc and sub sub je fsubrs sub lock out xor scas ljmp mov cmp mov cmc or mov repnz adc sub xor outsl push or shl stos dec push sub jns lcall enter sarb xor pop (bad) insl nop push or add cli mov xchg bnd xor mov adc jecxz cmp sub stos mov imul inc adc mov push xor clc inc mov ljmp xor rorb stos fimull jb mov push mov add xchg adc cmp mov inc or cmpsb push imul pop jnp js add xor fdivrs sti notl fwait int pop fisubl mov push mov iret dec shld inc adc insl movsb bound xchg adc sbb imul cs adcl or sbb std insb lods mov int sahf add repz and (bad) jnp pop mov adc daa jmp jge adc out mov mov repz pop iret roll jecxz cwtl dec sarl cmpsl shrl (bad) xchg jnp mov pusha out and fisttp das dec inc jmp jno (bad) leave mov mov or adc adc inc cwtl adc and (bad) dec aam (bad) cmpsb sub flds repz outsb dec push push outsl pop and fsts int add and ja push jg (bad) fdivs mov out jno cmovno adc insl mov or sbb add test jge adc iret mov cmc lcall jne fist scas jmp xchg lret lret clc in popa adc adc push cmp mov jo mov xor or cmc adc jle fist imul fsubrs imul pop pop in inc cmpsb psllq shlb inc outsl std mov rcll repz lea adc inc cltd xchg and (bad) mov adc dec iret lret adc sbb jge sub adc scas add mov ficom (bad) into test inc shrb loop xor pop push jne xchg jecxz shll xchg push psllw adc arpl lcall lea insb cmp pop pop insl into adc lahf cmc add loop mov mov inc xchg out aad mov loope and movsb mov out pop test mov pop adc data16 mov jne dec inc mov push (bad) flds leave je stos adc mov or mov cwtl stos imul xchg pmaxsw cmpsb adc lret cmp das inc popf stc adc cmp mov mov push push lret (bad) cmp xor rcrb adc es mov sbb add jecxz pop iret mov sbb in pop rcll (bad) in push nop lods xor mov (bad) dec adc push jno cmpsl pop cmpl adc sub mov div daa jp fdivr addr16 pop cmp cmp or std adc mov sbb cli mov das pusha adc ljmp pop fdivp dec mov or (bad) cmpsb dec push jmp pop adc icebp out mov cmpsl or arpl mov sub fidivl es lods sti fnstenv mov in xor pop rolb mov lcall call arpl sar mov loopne (bad) in mov jae in sti lret rorb jno xorl add mov fndisi(8087 in enter or je jmp adc int (bad) adc inc cltd or cmpsb mov mov adc adc cwtl repnz mov lret inc hlt (bad) cltd add dec or adc dec mov xchg cmc mov adc sti sbb mov idivb adc inc mov inc movsb in repz (bad) push gs or loope mov jbe (bad) lahf sti pop out repz orl (bad) test or adc adc rcrb adc push xor (bad) jmp dec lahf test fnsave jno ror and repnz cmp daa adc adc clc xchg jmp xchg cmp rolb adc xor jg inc pop jmp jns dec popa xor cmpsb xchg repz rcrl pop sbb push ret mov nop push pop lcall push add ror shlb das mov or cmp mov (bad) loop mov inc rorl aas push inc pop aad in mov sub jl sub loop adc (bad) jecxz cli adc inc movl scas dec mov or jno enter nop aas xor int sbb mov adc and adc push sub mov mov push (bad) mov frndint imul rcll jge mov cmpb in sub test sbb push stc adc mov clc scas int3 sub adc movsl out std je push popa push lock sarb (bad) sbb ss aam mov out cld and inc adc xchg mov adc mov ret lret cmp mov mov push out adc add and mov test or mov rcr out xchg mov mov les dec push loopne (bad) mov adc test inc enter cmc xchg push aam popa add adc (bad) mov divb pop in fdivp dec and inc fmull add or or ss lock repz ret push stos add sbb out stos jg call adc sahf sbb sar xchg int3 jnp sbb sti movsl pop dec push outsl mov inc adc pop adc xchg sbb pop int3 jns outsb add daa loope popf xchg adc dec aas fdivp mov mov movsb nop add pop testl pusha addr16 arpl mov inc (bad) loope cmp mov loopne jns sbb adc and xchg scas mov fwait pop lock xlat jp sub es push ret jecxz adc pop jg sub arpl pop xor lods mov and mov movsb mov adc (bad) jbe adc aaa push (bad) repz cmpsl sub arpl sub mov pop dec into push adc push loop adc dec pop cmp jmp push cmp mov movsl xchg lcall sub sub loop jne cmp xor xor dec iret dec adc pusha pop inc divl push xor adc xor push mov dec popf xor and jb mov loop dec lea out pop pop jg and lods mov imul mov scas add dec mov mov jle push stos mov test and lods test je xchg and jnp add mov cwtl sti xchg xor push rorb popf mov mov repz lahf pop xchg mov lcall adc sbb inc adc jecxz pop adc sub mov xchg add add leave mov jg fsubrl lret sbb cmp adc out test fisubrl sub adc jg mov push xchg insb mov adc cmp add dec les xor test nop stc int adc das incb dec sbb adc icebp int3 adc sbb rcll xchg adc (bad) jae cmp call adc imulb inc adc sbb cmp adc jg adc and (bad) repnz imul pop stos pop add mov leave mov sbb mov cld aad jge mov adc out or pop packssdw in add sub jo mov mov adc cmp cmp and out es (bad) adc xchg scas sub ds xlat (bad) mov lea push mov lahf add bound mov push call in add dec jbe cmpsl xchg aam faddl push es into push lds outsb and sub or adc ja arpl mov xsaveopt or popa cltd ljmp mov fild (bad) jae addr16 ss ja ds or daa xchg (bad) xor mov push jmp scas or (bad) loopne mov loope inc dec xchg es add adc pop lret and out sbb cmp push mov xor add popa jecxz adc lea push aaa gs adc stos sbb adc lock je adc pop in loop xlat sbb (bad) notl adc cmp (bad) xor xchg jmp hlt and mov repz out mov adc cmpb jecxz cwtl enter jmp sub pop fnclex push idivl inc adc and fsubr lods push or mov out inc jne pop repz fmull or fist icebp adc xor sahf (bad) dec adc iret enter xor xchg sbb repz aam mov je mov (bad) (bad) mov jle cmp xchg addr16 insl adc call cwtl ljmp cmpl push scas sarb cmp or sbb scas insl xchg mov or xchg cmp das dec rep jne push add ret int cld (bad) lahf rclb adc lret inc out in mov repz jmp push (bad) mov dec iret jp dec loopne stc das imul mov mov pop add add (bad) addr16 andb jnp sti in adc ss fildll pop lock punpckhbw adc inc imul and (bad) xchg mov jb arpl adc adc mov adc popa xor hlt (bad) jbe fistpl outsb xchg sub lret imul and dec inc pop into adc xchg mov (bad) sarb popf sbb xchg gs sub into in mov pop and adc enter push sbb es (bad) and pop adc stos adc add sbb jle adc or xlat or add adc in arpl cmp or inc bound call sub popf cmc xor in xchg pushf mov enter faddl inc pop mov inc call mov sbb fwait adc mov sbb or push xor xchg add pop jmp test and mov pop jge cmp cltd hlt inc inc std mov imul (bad) adc out aam xchg xchg adc js fstp mov cmpsl addl push push pop push popf (bad) adc push je or adc xchg nop mov adc pop outsl and loop pop push push or cmp fstl arpl adc cmp push sarl roll cmc or cwtl test push adc mov push add setae repz pop in out and inc adc das jmp out push xchg adc sub gs dec sahf mov jl pop js pop pop inc or jb push or inc adc clc addr16 fs (bad) jle sbb cmc jae add adc dec sbb inc jp rcl mov mov jb dec movsl adc pusha fild mov (bad) mov movsb adc lock inc mov fistpl or repz push fistl jl (bad) sysenter xor arpl cwtl pop xchg adc xlat call js mov ja cli ret xor mov ret adc and mov lods fdivrs sbb mov nop sub pop sbb mov adc dec imul push stos loop add pop pop hlt sub jo (bad) cld add lds mov mov (bad) mov cwtl pop sbb dec xor aaa fldl cmp daa or in jnp cltd jp and and or sbb lret cs push and jno push mov je xchg loope out stos push mov (bad) mov in xor leave insb adc mov cmpl hlt adc in pop fmull pop add mov mov add xchg xchg mov ret adc imul jecxz push stos adc out cmp mov adc icebp push ljmp adc lahf sahf or add fisubrl sti repz inc addb mov call dec sub adc pop xor icebp dec xchg repz inc fistl popf (bad) roll cmc add pop (bad) fidivl ret out pop adc fsts lahf mov rcl mov mov js lret xor fmul add test fnop repz flds push notb cli jp bound (bad) mov ret mov mov pop sub aad sub dec pop xchg adc jbe pop xor xchg add cmpsb inc adc lcall xchg jbe adc out (bad) xchg cmp lahf repz and inc out ficomp mov sub jnp adc jge js sub in lods inc and mov (bad) mov fstl adc jl insl fmulp addr16 add fs xchg hlt aad adcb add add loopne rorb xchg xchg dec mov jae add jg,pn pushf inc xor decl or out xor sbb sarl inc (bad) pop adc mov mov xchg stos imul inc add sub cmp outsb out add cmp faddl pop nop test mov sbb addr16 add notb (bad) call adc mov mov nop push mov mov sti lret xchg int3 popf jecxz fs cmp adc leave shrb sub inc aaa int sbb je jg adc adc and aas sbb xlat adc mov adc sub je mov stos xor jle sarb stc cld xor sbb adc into repz enter prefetchwt1 fcoml mov adc adc pop and xchg pop loop sbb xor xchg push popa mov xor adc mov pop div lcall fwait mov xchg incl les std int3 or sbb xchg xchg mov std repz xor mov pop adc ss je xchg push or push sbbl pop test mov inc mov bound push mov ficom ret data16 push (bad) jne adc xlat repz jmp loopew xchg stos adc roll popa inc xchg ss mov cmp pop imul push in es adc add jnp mov or rolb push xchg jae adc mov mov sbb cmpl shlb mov mov cmp bndstx nop mov adc ret enter mov mov loopne scas mov push movsl cmp daa mov std ficompl ret xor jge or jp mov in outsb adc in loope hlt repz outsl stc rorl xor dec shrb push mov inc adc or aaa data16 movsl hlt gs mov xor sbbl and shll (bad) jp int3 adc jmp push push nop in test cmp repz add idivb mov adc inc (bad) mov popf jae pop std and mov push xchg dec int adc inc adc fist xchg (bad) in xor lock adc enter and xchg sub mov adc daa xor pushf aam dec mov jns in iret pop ds adc pop adc pop and or and or dec lahf xor mov gs push sub fbstp test cwtl push aam mov mov lock sub push mov xor icebp push ret lods mov mov adc inc cmp lcall cmc dec stc xor pop cmpsl movsl or lods push mov lods sbb fsubrl test iret xchg add aas adc adc cmpsl pop call mov mov arpl pop inc repz push mov data16 imull add mov mov mov je sarl jecxz sub fnop es add mov sub iret orl cs adc fsts out push jmp mov ficoml in faddl inc mov adc sahf scas movsb (bad) jp sbb xlat in cmp push stc pop into daa adc mov pop je mov fisubrl mov loop cmp push enter sub sarb ficompl push lods jbe pusha adc mov and insl mov mov and add outsb add inc daa mov fdivr imul repz data16 seto cmc fsubl or adc stc loop rorb ret and xchg add pop test xchg fmul je mov rol mov xor ret imulb pop add lahf dec xchg (bad) in cwtl adc loop (bad) out push mov (bad) add cmp and pop fnsave cmp (bad) ja push xchg aas push sbb clc fbld xor aas js push adc adc addr16 pop xchg mov je andl ljmp add or mov ret xchg mov add jmp test or adc pop xlat sbb repz xor xchg sbb mov mov popa pop stos cmp add xor std adc arpl out adc pop repz jp cwtl adc sti (bad) mov into je aas mov xor or xlat adc xchg xor xchg mov or psubsb (bad) mov mov repnz mov int3 cli (bad) and icebp je cs mov push sahf xor add push daa pop sub xor jge and cli pop sbb adc push mov xchg jle test neg lret adc sbb pushfw push repz das sti daa loopne adc hlt adcl push xlat adc das inc movsb or adc add dec and adc sbb icebp mov loope cld adc dec jne mul jge adc aaa lods mov in adc push mov mov xchg or addr16 in adc popl cs cmp sbb mov aam jae adc sbb adc out push xchg (bad) adc cltd add adc imul movsl pop imul sub add stc fldl mov in xchg lahf pop adc mov mov adc inc xor lret adc sbb mov xchg mov dec mov xchg dec adc dec push arpl lds sbb notb daa inc es hlt dec or and xchg push fistpl cwtl adc push mov aas sbb adc adc mov adc xor jbe xor mov movsl sbb adc fwait scas mov imul sub jae repnz imul lret ds push adc jl fistl add sub jg aad mov xchg add inc rolb out daa fcomi ja mov popa sbb adc mov push adc roll test clc sbb cs push mov adc bound popa adc (bad) mov adc push shr cmp inc mov jns mov sub jmp pop mov in (bad) repz ficomp movsb add movsl jg xor push jnp in or fsubs push (bad) sti mov out mov adc lcall adc cmova add push adc cmp xor sbb fsts (bad) call xchg xchg pushf jbe cmp sbb adc sahf je mov shlb jo mov adc repz fsubrs adc lret push xor int3 fstpl add fsub jae,pn movsl sbb jb dec jmp adc (bad) add iret mov mov sbb add mov adc fst dec adc or mov bound or fwait (bad) es rcl push pop ret mov test add mov dec lret add adc clc xchg xor sub mov xchg rcrb push out lcall je lea xchg dec pop bound cmc and xor ds sbb or sub mov mov or and pop sbb xchg xchg adc scas mov add sbb aas dec dec popf mov push dec add adc sub movsb adc push gs fmull ja outsb sarb popa movsl cmp adc pop pop repz or adc (bad) dec or xlat push adc cmp adc cmp jge (bad) add cmp fldt and cmpsl jmp mov insl sahf and ljmp or add push xchg cmp sub out or lahf (bad) xchg push adc jg push es pop (bad) adc cld mov pop add imul scas adc adc mov stos jle jnp adc clc (bad) mov add pop pushf or mov mov pop stc or cmp sub fs das mov (bad) fldl repnz jp xchg adc fmul lods lcall ffree or sub mov jl xchg mov ficompl push add (bad) mov mov dec inc mov daa cmp fsubrl adc adc (bad) push sub mov nop daa or or mov adc leave add add cmp add les lea and sub xor mov insb xchg sbb or mov popa mov mov (bad) fildll cli adc xchg jnp negl mov mov dec cmpl or test std or fdivl (bad) adc insl clc cli add bound gs aam add or mov adc dec sbb adc pop repz jb adc sbb xor lds je test (bad) call add rclb sbb push adc jb stos jmp pusha push xor adc or stc adc loopne fnop xor mov dec add or cmp stc lods xor fisubrl pusha adc movsb les mov adc push dec pop mov pop mov insl mov (bad) lret pop or adc cmc push shlb out movsl mov enter mov mov or out test adc cwtl inc xor pcmpgtb xor mov fild fnsave inc enter cmp or push and xor ljmp adc out jle jo mov pop mov notl or pop std lret adc mov mov dec nopl cmp adc or pop je mov (bad) arpl mov xchg or mov pop ds jns incl rep jl lock notb test fistpl out xlat test stc mov ret push adc mov insl xchg xchg or jp fisttp and and add inc fstpt and sub addr16 fs adc xchg (bad) mov (bad) outsl cmp std xchg fadds js adc mov jne aad xor movsl pop addr16 mov adc adc xchg mov out test scas scas or cmp push ret das fldt aaa xchg pop xor adc cmp xor sbb lret jae pushf xor jl inc xchg stos stc ret adc pop test add pop (bad) stc xchg xor loop inc xor add icebp jno add jae xchg mov mov adc mov ret sbb ja jns adc in popa test in insb mov sub leave das jecxz pop cmc les imul push adc addr16 mov into xchg hlt jbe adc ficoml fsts les sti pop sub jns jbe inc mov jb leave inc and (bad) dec enter in dec pop mov adc add cli jns jne std or xchg push push loop jae mov inc add push arpl std add mov ds adc rclb nop cmp jnp (bad) mov inc adc iret cmc mov mov enter loopne mov inc mov aad out adc adc mov mov scas or xchg add jns nop jg sbb mov in jbe jo xchg or js int iret in adc push jne mov mov jb mov sub adc cli repz mov jb sub leave xchg std adc push mov pop adc inc test shr adc loope ljmp and (bad) int3 icebp inc adc push test scas pop adc jmp std adc mov cmp int3 pop and push ret mov cmp adc mov adc rcrb ret cltd xchg mov mov sub cmp and jnp outsl test inc cmpsb xor out sub or mov data16 push rcr adc mov test aam add xor fld ja repnz leave mov add pop xchg sarl push movsl enter sbb adc aam jae bound mov cs cli pop sbb adc mov sbb aas fs mov add repz dec push sti daa fwait ret adc jmp adc cmp scas dec addb ret in or jle adc inc add push pop adc lds jg ds mov dec (bad) inc and mov (bad) (bad) mov adc roll xor jo in cmpsl out cmp or mov sbb jbe xchg outsb mov repz test outsl push (bad) in aam cmc les jns fs xchg pushf outsl inc pop inc imul rolb in cli pop xchg xorl lret push outsl mov mov mov outsb mov mov and in scas or cli lea adc mov loope pop jmp xchg mov inc push je sbb (bad) sub dec mov adc loopne mov cmp push jne add rolb out ljmp repz sti jnp adc outsl xchg je jp repnz int push movsb stos adc cmp cwtl push (bad) leave adc push mov lret lahf jmp jmp imul jnp pop aam cmp xor cmpsl ljmp pop mov push push xor push fdivs lret leave dec int pop imulb pop int3 bound push sub sub xor sarb cli adcl (bad) stc mov out insb std and adc jno ret int mov push or and (bad) xchg call adc dec mov stos dec pop mov leave mov dec rolb pop shl xchg and cmc ret pop iret add push call daa adc jecxz aaa rcr lods testb in hlt das outsl mov out jbe push and jb int out inc (bad) mov fsts push popf jmp adc pop ja les int3 adc or hlt cltd cmp (bad) adc (bad) rclb neg insl and icebp jg jno test xchg and pop mov pushf int lahf xlat fbld cmpsl notb push xchg loope lock mov stos ss insl adc in and or jg pushf ds mov adc es cmp add rclb mov lahf sahf add adc mov popa sbb xlat pop cltd inc movsb pusha add adc xorb mov adc (bad) xor add sbb jbe jno jecxz xor int xchg adc pop (bad) ja jg stos rorb pop arpl pop pop mov add xchg dec loopne mov xchg jb push fldt xchg nop daa lret dec or pop cmp inc push adc xorl je mov sub inc jnp test jb stc cli out cmp xor ds int3 inc test rcrl aas pop mov add pop jecxz in adc mov shlb rclb sbb repz js int3 push pop orl push sub imul cmovge jg (bad) mov cmc mov adc sub xchg adc (bad) fisttpll mov repz inc mov scas das mov les (bad) rcrb adc adc pop lods or fistl lahf or roll adc out xor mov pusha inc push jno arpl cli pop sbb mov cmp in inc add into dec mov push adc (bad) mov pop adc pusha xchg hlt mov push jnp pop xor (bad) (bad) (bad) fcoml mov (bad) pop test push mov or adc mov xchg dec and mov cld movsl push jge mov das jl lods sbb movaps adc mov push insl inc out mov test neg arpl adc push int3 js aam shl adc pop jecxz repz mov stos mov jmp fbstp cmp int3 push imul mov or mov xchg fcomi rdtsc fstl xchg not sub jmp adc adc mov xlat xor into cmp adc inc cmpsl sbb adc mov dec imul cli mov pushf jge movsb adc cwtl daa repz inc mov cmp int3 push arpl pop outsl lds das and mov es scas push fcoml call out add adc adc fldl or mov sbb sbb mov addr16 (bad) mov mov mov mov jle xchg ret push in push enter aas xor shrb hlt or std sbb push enter jb (bad) (bad) dec sti scas mov xchg test lock call pop jns int3 and mov mov out sbb jne dec push xchg in (bad) adc pop cli or scas adc mov xor and sub imul jl adc cmpsb in adc loope aam int3 repz stc mov or or out fs ja pop mov pusha fldt xor popa test adc mov dec cltd in and icebp mov push jae ja jge ffree xchg dec int3 cmp imul (bad) adc inc push mov push xchg lock pop adc fs insl movsl adc add (bad) dec xchg add addr16 jg std repz out rolb or adc jmp mov hlt js mov lcall mov or cmp (bad) cmp or cs adc jg push in ds pop mov adc mov xchg sahf lock and jne jle add pop test jbe sbb inc mov lcall cmc push fwait adc in pop jno mov cwtl xchg sbb in adc mov ficoml xlat xchg mov lods sub xor addl jo and out je mov inc push mov outsl div das add push add mov mov jae xor adc cltd jb pop xor adc movsb inc mov jne mov adc xor sti dec xchg sbb xor notl cmpsl dec (bad) lock adc inc arpl mul test jp mov push and dec sub inc insl orl xchg arpl adc into ret pop xor lea add adc mov and mov in push test lods push lret dec and inc nop and adc fadds in dec or bnd test popa lods stc adc fstpl jns adc out in fwait inc dec jb (bad) adc push leave adc inc jnp jge mov (bad) and in push cmp repz sbb adc jmp adcb leave cmp cmp sub repz adc rorb loopne das cli jns jmp push out and mov xchg sbb lahf or (bad) inc adc mov xchg sbb adc cmp sub arpl std sbb jg (bad) cmp fadd enter or mov in pop out jo cltd or and lcall or adc sub nop and data16 xchg imul xor xor adc mov movsl adc or testb aam and call or jne sbb leave add (bad) or mov mov mov aas mov pushf pop add add dec and sub sub popf adc clc inc mov mov dec jp fisubrl cmc in mov xor cwtl (bad) jbe,pt pop push adc cmp jne jecxz jl loop inc std bndldx jg pop push mov in icebp aam stc nop shrl mov lods xchg xchg adc push jp sbb fwait test mov aad popf iret popa sbb jle mov xchg sub std mov pusha push addl shrb mov xchg stos xor push insl (bad) movsl adc mov cld into push add adc mov xchg mov loop popf pop aas push push jl adc jnp xchg adc rolb enter mov out dec inc mov loopne out xor mov popa jmp fdivl or inc inc stos pop lahf sbb and push cltd adc imul adc mov cmp arpl adc sbb or cli adc push or mov dec das mov adc cmp xchg push mov jnp insb stos pop in outsb sbb out jg mov or fwait add jne test mov jne stos ret or push adc fcmovbe mov rorl ds add adc dec (bad) int3 inc sub fsts in or in divb adc fnop xchg jecxz add xchg or add (bad) icebp sub in sbb mov xchg sbb aam mov cmpsl dec pop jns mov dec out test adc push mov add xor sbb nop (bad) push push push xor jo sti fnstsw pextrw lods or adc or lea (bad) mov loopne imul pushf push arpl fcoml jge or jl adc xor xchg adc add xor out adc roll (bad) (bad) adc mov cwtl popf orl lods add xor pop pop jns dec xor out or adc add dec mov sub div jbe in sbb stc adc stos (bad) wrmsr mov mov cmp fs adc out adc in sarb outsb inc adc push test push (bad) daa fidivl movsl mov adc mov dec iret xchg imul (bad) ret aad push push lds out pop adc loopne mov les cmp outsb adc xchg test movsl xor icebp mov or xor cmp or test mov call jle out adc cmp pop (bad) frstor ds cltd or dec jo push xchg je jmp xchg sbb pushf sub adc mov push cmp and fsts imul sbb ret mov dec fimul push xor xchg dec aaa rorb je movb jg add or sbb std lock xchg mov (bad) mov aam cli lret adc jns inc es mov (bad) ftst mov mov jo sub add adc insb mov or jb dec mov arpl lock or pop sub adc movsl xchg add (bad) ret (bad) adc aaa and push xor mov jbe pop sub les out mov mov sahf ret outsb aas adc cmpsb stos mov push and les sahf nop ficom and rolb enter rcll cli mov push adc xor and dec lods cmp cmp sbb (bad) cmp (bad) mov movsl push jmp cmp leave loop xchg jge xor cld ret push add push and and mov addr16 loop out repz push mov int3 sbb je push mov jbe xchg adc jns fcomps and in ja or divb pop add fimull sub jg sbb cli repnz imul out xchg test push adc inc jle push mov (bad) push fstps xchg mov and push repz adc cmp loopne sbb mov sub cmpsl flds pop add xor vmread mov or xor mov xchg jecxz data16 or adc inc xchg push nop rcll in fwait (bad) aam push inc pop xor cltd jae inc pop test dec dec adc rorl adc popf repnz jecxz sub add push jne push add add lea adc hlt fxch xor mov js inc mov aam ret aaa mov mov dec cmp fimull sbb mov inc ret (bad) ds xchg add bound lahf xchg add icebp cwtl and into mov ror adc lds ret fcompl push mov jo mov mov sti in xor adc test mov repz scas add sbb jb dec adc dec popa hlt xor jns jle mov mov insb aas notl inc ror (bad) imul leave push out jle jne push mov rcl pop push and icebp mov adc enter sbb adc push mov and adc fnsetpm(287 popa adc int xchg jb and ffreep add mov (bad) mov jno scas push or xlat cmp int add inc cli out rcll lock and sahf adc loope push adc popf jne adc inc mov sbb test cli adc rclb sbb std jecxz add in adc sub lret cmp push push adc dec (bad) rcrb add push dec jg or pop dec sbb pop int3 int icebp mov xor add movntps arpl int xchg sbb adc adc adc out mov mov dec testl inc add adc cmc pop shrl inc sub dec mov aaa adc ret movsl jae mov inc cli (bad) ja insl ffree xor inc add inc sahf adc mov mov das in out sub orl push mov mov and lea mov loop (bad) mov fadd mov xlat cmp adc jmp test dec mov mov adc dec lds adc fstl int das nop push (bad) cwtl adc orl test sbb imul iret mov add adc sub adc test mov sbb mov xor arpl jae mov insb push cmc stos (bad) adc push mov ficom lods jmp mov jb mov mov mov mov xor pusha jae add mov pop adc jnp cmp dec jge lahf outsb je adc pushf repz cmpsb cmpsl mov push or insb pop into in jmp lds popa scas mov and cltd jge pop call push (bad) push into (bad) (bad) adc aam repnz adc cmpsb lock xor or sbb and jbe xor movsb xchg int in fstl mov push movsl insl adc ss inc dec dec adc jge ja rol xor mov add jae push sub adc mov clc push (bad) xor leave test push cmpsb and adc insb push fstl inc ds adc daa or mov adc dec xchg inc scas adc (bad) cmc jmp clc fildll xchg add adc outsb mov cld adc adc jno adc and xchg enter (bad) adc pusha popf bound add sub sbb inc sbb cs mov xor orb push cmp (bad) dec push xor int3 into sbb addl push loope loope xchg jae mov in lods mov (bad) repz mov or pop xor fbld loopne int stc jmp cmp adc (bad) xchg aaa ficomp iret mov (bad) jmp xorl jbe adc jp mov repz daa sarb jle mov rcl loop dec adc push scas clc ret adc dec lcall add xchg mov cmpl nop popf mov mov fnstcw lcall (bad) sub insl das mov mov inc clc cmc std mov sbbl bound mov xchg daa mov iret les or mov push lea fist add jno pop pop sbb scas jb (bad) jmp shll ljmp mov stos sti or outsb sbb iret mov sub mov aad loope pop std imul jecxz add jl std push sub lahf push insb sar out push mov xor xchg sti (bad) add xchg orl and arpl push xor cmp lea jnp xlat add jge and xchg sub ds divl adc std loopne xor daa incl (bad) push movsl adc icebp shrl mov pop sbb jns ljmp flds fs push xor or aam je pop nop rcll sbb jbe iret jl adc arpl jge enter push xchg ret rorb adc lock lret jge test rcrl jne and adc xor mov scas push cmpsl stc xlat cmc gs into mov out fimul cmp imul push incl push jmp adc jle cmp sarb repz lret sub xlat sbb adc inc dec lea cs cmc aas pop cmpsl inc popa (bad) aaa push mov ret xor push sub sbb (bad) insl adc (bad) dec jbe aam mov int3 adc dec out or jb pop jmp ret or mov lcall jecxz lret adc (bad) aaa and adc lea adc cmp cmpsl sub int test mov jecxz push stos mov shll out dec leave loopne push data16 jecxz push mov push or mov adc insb imul dec push (bad) mov mov or fistl push out xor sbb dec pop inc lret nop mov mov pop in popf adc push (bad) push adc pushf xor xor in adc les fiadd add adc adc xor fnop les loopne aad mov xchg lods test call outsl mov jecxz jo pushf adc data16 fisttpll dec cmpsb xchg call xor cwtl adc sub inc flds adc js fadds aad pushf and mov adc xchg xchg fcoml je or cmpsl xchg adc dec mov rcll insb cmp push inc ja sbb divl jo (bad) mov lret dec or push fistl stc or xor sahf sbb jg das push rcr or pop xor popf scas or je frstor pop lret push mov and fdivrp fsubrs (bad) repz stos dec shlb mov xor inc push mov lahf test (bad) push cmp lock xchg rorl (bad) mov int cwtl stc lret adcb and jae mov (bad) iret or mov and and and jl adc jecxz dec jne hlt cld push (bad) std cwtl mov fldcw jl cmp rclb xor out insb incl iret fdivrs mov and mov cs and test dec ljmp or (bad) loop push mov call mov nop jno leave or rclb xor movsb cli das daa sbb pop xchg adc xchg in sub insl ss enter ret sbb adc decb add arpl or push les hlt push imul sti in loop (bad) xor js mov adc lret cli iret jmp adc sbb popa pop add cmp or jle stos mov push iret rcl mov pushf test sbb mov stos mov incb repz (bad) mov jb adc loop inc adc mov cmp jbe cmc xchg add and pop scas lea mov adc cmp das aaa fiaddl mov or and pop push cmp pushf ljmp pop sbb inc cmp sub cmpl push xchg fs xchg lock repz adc xchg loop xor mov xor mov bound adc xlat fdivrp mov daa and fldl pop repnz or insl pop (bad) adc adc js lods test cmp test outsl popf sbb push lds nop sbb mov push imul rcrl ret popf leave adc cmp push mov and inc mov xchg in cmp xchg iret repnz addr16 lea xchg mov cli lock sarb push outsl cmc mov rcrb cmpsl hlt or insb adc add xchg pop loop xor es and xlat adc pop cld add mov dec pop jae rcrl push xchg adc mov pop xor push push add adc push (bad) xor outsb sub or adc scas adc inc xchg imul int je xchg roll or cld cwtl lcall stos out in pop adc mov out inc repz aas add cmpsl das in mov xchg (bad) adc push sbb xlat adc and lods rcll add dec cli adc mov sbb mov add pop and inc mov pusha aas shlb lret pop pop loop adc or popa xorb pushf imul jle xchg mov addr16 test pop loopne sar es adc pop lods ss mov addr16 cmpsb sbb push adc ret sub adc in adc or mov mov adc out cmp int stos add adc test mov lods cmp dec inc stos aaa repz xor adc ljmp adc neg pop mov adc fstl dec adc adc (bad) and data16 in xchg ljmp xor adc push out and xor sbb mov fldcw jb lcall repz es mov test inc or inc negb lcall adc inc or clc pop dec adc ret test adc sahf pop cmp into adc jne xor sbb add out adc pop ljmp mov sub data16 jmp add mov xor orb mov jo adc adc clc iret adc xor rcrl stos or add pop lds (bad) out pushf stos mov adc (bad) cld test insl xor mov int pop into (bad) xor adc aaa jg fwait and push popa xchg push (bad) cltd xchg jo fstpt push sbb push adc or inc pop outsl adc mov aas out rclb popf sbb xchg pusha adc and adc pushf sub pop mov jae adc and dec daa in adc xchg inc jge xchg and rcrl mov xchg clc jl ret and lahf push xorl out xchg std shr pop jle loope adc dec fsqrt adc dec cmpl jb xor xor rorl xlat push xchg and bound push or pop movsb lds push ds dec xor cmpsl js inc or xchg and jg adc imul out ret push int add shll jo mov hlt jle cmpsb mov aad and adc mov dec rorb cli in rolb stc cmp jecxz mov fwait adc dec cmp cmpl popf xor arpl mull add sbb push shr sbb sub cld xor add cmp test mov adc or push adc inc repnz outsl pop add mov rcr dec mov mov (bad) lret xchg adc adc pop inc inc idivl sub mov pop mov add cmp jle and cltd repz lret xchg push inc in xchg xor sbb jecxz push lret adc (bad) jo aas inc adc or inc in jbe adc xor and adc test mov adc add lahf (bad) aaa std aam pop adc push insl (bad) push je nop (bad) jae fcomp or mov sub imul pop scas das lods pop adc dec popa xchg xchg dec adc mov inc inc data16 sahf mov jle in push int3 push cmpsb mov ljmp add aaa mov fwait add mov (bad) adc inc sub adc sbb test push mov or addr16 movsb adc xor adc sub pop adc gs adc (bad) stc rcrb mov sbb in xlat jne leave test xor adc adc or adc mov lret sub cmp (bad) cmp xchg jg rolb ds push rcrl fist adc mov inc std adc add adc mov jmp adc in cli mov daa adc lods mov mov pop cmpl cmpsb sti and adc inc das pop xor cmp test adc scas sub int sarl mov cmc notl xchg push sbb pop cmp jo cmp dec xchg ja add adc insb inc dec mov push (bad) or adc rorl mov ret add pop add icebp aaa mov leave std xor addl mov mov aaa daa iret add mov adc pusha outsl inc adc mov in push push sub das insl adc pop dec fbld push push and inc std xchg repnz xor lcall xchg mov add movsl imul lds nop mov aaa jecxz ficompl insb and (bad) and mov lods xlat cmp int3 pop pop out rcll fbld adc adc or mov lcall arpl sub adc push aam cmpsl sub adc push mov (bad) jge lahf rorl sbb fwait cmpsl imul rep inc out sahf insl dec or push leave xchg and test shl fwait lret scas inc sub push xor clc pop pop adc mov cmp cmpsb or sub (bad) nop cmc xlat lret sbb bound lcall jbe pop mov xchg insb mov xchg pop xchg or push int3 push in adc mov xchg jno repz add adc inc (bad) insb pop mov push add xchg jmp pop std cld mov jnp in insb pop lahf cmp aam mov push adc xor ficom add repz ljmp cmp jne mov xor hlt adc mov or xor pop xor sbb push cmp movsl cld or pop add add push pop mov ficom pop cmp test adc movsb lea stos mov pushf rclb lahf gs ret repz and pop repz jb cmp enter fldt repz mov add xlat fsubrs and fistl daa xchg adc lcall and cmp jecxz addr16 loopne clc bsf adc push outsl adc or adc xor sub mov mov inc daa rcr adc push xor or fldcw sub jle pop mov jmp nop cmc int or out mov add push fisttpll add sub adc sbb push xor movl xor rolb out mov add sbb pop in fist jne pop xchg out test sti mov push fsubp inc jmp mov push das adc ficoml mov inc adc pop push jbe repz and fnstcw ja lea fcomps and adc loop mov rcrl mov push test mov fildl imull loop scas mov (bad) mov dec sub xor test mov arpl ds or xchg shrb mov cmpsb jge lcall xchg inc adc or dec adc repz loop arpl add cmpsl cld sbb loopne xchg mov pop add inc orl ds lret mov add rclb pushf adc push adc movsb bound jge stos mov out or sbb xor sub mov mov out mov xchg sub sbb and int3 mov js or loope adc rcrb or outsl mov mov mov ret jae push into and lcall pop mov addb (bad) mov push adc out jo adc vpshlq test xchg push adc adc (bad) push dec mov xchg push adc mov mov xchg add and mov lock hlt jge test mov push (bad) das xor lea cmp ds pop adc cmpsb fistpll or dec inc in xor nop jae pop cmp ja dec cmpsb out int cwtl mov nop push or or into push or mov leave dec mov jecxz mov lret and sbb adc ljmp adc insl inc or adc mov test cmp jno and les pop mov fisttpl mov push mov jo mov adc stc xor (bad) and push sub mov jne in add pop ret mov mov sub shrl adc cwtl sbb and cmp loopne adc jecxz jg (bad) bound and mov mov jne mov sub outsb push pop adc lds adc and cmp cs push lods fstps jno dec sbb and adc (bad) repz out lret (bad) lahf fmull sbb jo cmpsl js add cmp and cmp sub xor fs test jnp xor test add mov out jae pop (bad) test adc int sub dec loop dec push or adc (bad) cmp mov popf mov outsb enter push fistpl notl leave or add mov mov je sbb fcoms sbb sub pop shll test or adc lods or inc jno mov add xchg sbb clc adc sbb pop call sti (bad) dec ja loope kmovb jae sbb arpl repz std movsb aaa pusha mov or iret adc sbb clc mov mov dec mov push punpcklwd adc jg outsl lods movsb and xchg or sub mov adc rcrb or lret xor addr16 add movsl fwait andl adc ljmp pop mov or mov adc add adc dec add adc mov mov cmp fildl and loopne ret pop (bad) push xor adc or stos cmp adc in inc repnz mov mov out lea mov pop and jb fbstp insl sbb adc adc push cmp push rcrl or sbb rcll aad clc andb adc das inc sti and adc mov leave adc adc cmp sub jbe fimull mov dec (bad) in push mov movsl rclb aaa ja sub cmpsl mov mov ficom dec add xchg xchg in jge mov mov stos adc lret not insb iret dec push addr16 jmp cmpsb add sbb arpl scas adc fnstsw daa test sub add jnp push add inc inc dec icebp mov in shrl adc imul in xchg sbb mov xchg sub loope xor push or or xor gs fildll into mov fcmovne outsl mov arpl add mov sbb xchg sub ja sub repz xchg jp adcl (bad) push mov adc cltd arpl pop inc dec sbb cmp xor jns push or stc dec add fcomi es scas push or stc sub mov fwait adc mov xchg ss mov rcl inc subl jae fildl mov ret ss inc fs adc lcall aam cmpsl add movsb jle ds sahf add sbb frstor sbb cs dec orl ja das into jmp inc ret in neg jg sarl sub popa jp inc pop dec out in decb xchg add dec pop imul and and iret adc insb xor lahf xchg adc sub fistpl insb sahf arpl pop (bad) adc inc xchg dec outsb imul adc xchg jbe xchg sahf add jnp mov loop cmp adc jnp mov jle dec jecxz mov add (bad) cld jne mov xchg or cmp mov dec or jo mov addr16 xor xor push inc xor jbe xor adc jns fs xor xor test adc pop arpl adc or push mov push leave pop adc insb xchg xlat adc fstpt xchg jge repz bound fwait or jns hlt dec xor xlat arpl push mov inc mov adc ficompl mov unpcklps ljmp clc mov mov jbe mov xchg sub imul fbld arpl adc mov aaa mov dec adc push clc sub popf mov mov in add sbb jns gs cmp mov add out pop mov (bad) mov mov xchg (bad) imul aaa aam xor je stos idivb out inc sbb in daa rorb pushf popf arpl jge ja adc aam adc mov or pop loopne dec dec into xor and out inc xchg adc jle sub je jo inc es pop push push into or stos imul cwtl jno xchg mov ja or movsb jne mov mov mov mov aad mov sbb pop mov push jl push es data16 pop rcrl and mov adc rolb lahf adc or out adc (bad) (bad) mov adc lods sub xor aaa or mov or jg or rcrl aad adc pop pop add in lods int adc lahf ja jp pop pop adc (bad) and lods les enter dec iret ss pop mov sti and ficoml lock insl out lea mov adc adc adc adc pop mov loope fs mov inc ja sub xchg pop cmpsb cmpb or call mov adc aad sahf aaa cmp mov out or xchg gs add rcrb fiaddl out mov mov ds (bad) or stos ja icebp adc (bad) adc mov ret loopne cmpsb pop fnstcw clc out pop pop in sbb lods ljmp jmp repz sbb or ja mov adc lcall mov imul fucom dec pop sub (bad) fsubr stos lahf push std out adc aaa ret out lea adc pusha mov adc xchg das aas fisubr int jle mov test aas cs mov fisttp mov inc or das sub jge adc jno fwait mov bound icebp ret inc pop jmp bnd jge sti adc lods and test pop push aaa sarl sub add inc lock mov jp mov (bad) lods scas and flds loope or pop adc pop aad mov xchg add xchg inc das adc cmpsb sbb in xchg mov dec (bad) fistpll adc test sub jg lds sub rcll aam sbb popf js adc (bad) mov mov dec loope (bad) sbb into movsl imul in adc inc addr16 xor or mov and rorb mov mov sti nopl jmp int pop sub fist imull movsl cmp add adc push sbb repz adc lret cmp cmp fcmovb xchg xchg xchg push ja push mov adc sbb rcrb bsr xchg cmp and outsl fildl adc dec dec (bad) jge fdivs lock xor or sub pop mov fisttpll pop sbb insb jg jne fldcw loope mov inc adc (bad) icebp enter popf mov mov push into fldlg2 (bad) call push shr notl adc or aaa mov fistpll popw scas aas push aam nop sub js inc sbb or test lahf sub (bad) idivl or mov adc push cmpb cli push xchg rcl mov mov or ja push mov out lcall ds pop sbb adc popa mov xchg bound pusha ja jns ds and push xor daa or fsts xchg ljmp adc jmp mov mov das in adc inc xor pop mov adc pop push outsb (bad) adc rclb push sbb adc fidiv popf call notb enter and (bad) push adc or repz sbb lret cmp sbb mov (bad) adcl dec shrb lods sahf mov sbb mov pop in adc mov mov sti add pop mov mov adc sbb int3 mov faddp pop xlat pop leave and test (bad) hlt adc cwtl insb movzbl mov inc push je cmp adc lret pusha jge xchg fwait sub movsl adc pop mov adc jae,pt ljmp add (bad) outsb adc push or or cmp adc pop (bad) xor iret pop mov inc inc xchg adc jno incb enter and xchg adc or mov bound xchg xor adc add jb subl or into and xor xchg (bad) repz or lods jno cmp xor or dec mov sub and pop adc repz jp daa cmp mov adc sbb jno push (bad) mov jb xchg out push mov mov pop pop mov adc push idivl adc lods (bad) loop adc fidivl push mov add ja jecxz jle xchg pop (bad) sub dec jg mov mov aam mov lods inc gs out mov xchg inc adc repz shl push adc jg (bad) fcoml jo in rcrb pop xchg push cmp stos pushf cmpsl push icebp lods add or hlt aam (bad) divps sti or adc mov fwait jno pusha pop adc enter (bad) leave adc (bad) fadds out arpl ja sub xchg sub repz sbb outsb add or scas imul add je push adc pop pop xor mov sbb push mov (bad) adc sbb push cld shrb icebp mov fldl jbe enter dec sbb in mov dec sbb add dec call adc or cmp pop push push je inc xchg scas inc lods xor fst push js sub (bad) or xor cli or adc xchg aas cmp xchg adc mov shlb loop pop dec jl dec mov add jmp test mov vunpcklpd vmread inc sub jmp (bad) (bad) dec mov and and mov push int add or push mov xor inc adc aad adc push bound sub iret aaa je dec mov dec xchg fimull mov jbe (bad) lods mov (bad) xchg das jns xor imulb negl leave adc pop inc nop fxch movsl adc adc ss jp sbb push pushf adc push (bad) sbb inc sbb mov insb lcall jae shrl or mov adc js mov nop movsb mov xchg movsl cmp idivl pop loope or aas dec push sbb rolb xor ja adc stos sbb adc addr16 push les mov movsb inc stos ljmp inc adc mov mov jecxz ljmp mov dec fmuls call outsl jmp dec pop push jmp push imul arpl sti sbb sbb adc je loope daa pop adc or sub add jne into cltd dec mov test adc cmpsb xor lds sub aaa aam clc jge,pt mov sbb out leave (bad) sub (bad) icebp ret pop mov ds dec cmp push cmp sbb adc mov jae sbb sbb dec dec je mov inc or jmp pusha cmp sub add add leave inc mov inc lret sub adc adc or jmp pop push xor shll add cmc mov or and adc repnz mov imul jno xor adc xchg nop mov dec sub sti lret mov stos jg mov outsl push aas add inc dec inc movsl jno pop mov xchg xor cmp sub fidivl pop (bad) ds lret push pop js jle push sbb mov hlt flds mov push js rclb or insb lret cmp mov push pop jbe fistpl (bad) in push or sbb outsl repz popf and repz sub fisttpl add add xor into out test mov mov cmpsl mov mov test sbb shlb das in inc cmc lods adc test adc lret jno adc xchg pop mov stos xor inc sbb imull repz cmp mov mov mov stc pop mov insl sub add arpl leave lock lds mov push push cmpsb xchg int adc jle ds inc cmc repz and pop sbb pop mov adc push xchg roll dec jno push mov stos xor add mov shr mov and jmp xchg mov ficompl pop cmp iret xor not outsl xchg inc (bad) aaa jecxz les add xchg das cwtl xor xchg adc int fs imul loopne push xor inc and pop (bad) xchg cmp adc push mov scas pop call fistp xor insb dec (bad) xor icebp dec pop and lret test mov in jo (bad) gs xlat push add (bad) xor adc cli dec adc pop scas xchg push add popf imul das dec xor test inc rep jbe pop aad cmc or push daa add adc test mov pop mov call lea or lods out faddp or insb aad jmp loopne or inc ret stos adc adc jl mov (bad) mov sar sub mov xlat imul (bad) call mov sbb xorl adc inc push outsl mov repnz sub popf cltd adc into push stos inc ja dec hlt cmp das and mov jo (bad) push add adc add lods push mov scas lret fnop sbb push roll sti pop sahf popl or repz mov repnz pop daa sub lret mov add es outsl iret sbb mov das scas mov hlt std lds sub pop mov adc stc outsl and xchg nop xor inc cmpsl mov add add xchg ljmp mov test das scas loopne cwtl lea mov sbb dec int mov insl and lock es out (bad) and xchg stos cmp inc pop fcoms test mov scas rcrb rcrb daa (bad) mov cld fildll jns iret les dec jno cmp jno cli (bad) pusha xor ljmp cs inc sahf imulb and cmp sbbb dec pop cmp jnp dec xchg dec outsl lret jecxz mov push imul mov dec jo xchg pop cmp pop jbe sub int je insl xchg bound sbb sub ret or push pop xor aam jns add adc sbb jne in bound cwtl or dec dec adc mov aaa jno rcll repnz pop fist lret lods popf mov adc push lcall and and sub daa rolb pop xor in push cld inc ss push adc or hlt xchg inc push pop adc sub fnstcw lods sub je adc stos mov add xor or iret and push (bad) sub mov inc sbb out xorl pop or js repz fwait adc aaa sbb les or adc gs loope xor push leave or sub pop xchg fnstsw xlat cld jecxz xor leave jle mov adc pop push call stc cmp lods jbe inc dec adc mulb xchg iret inc adc loop lods lock push daa das movsl xor outsl cmc (bad) ljmp subl aad add mov jb or adc dec inc adc scas mov aaa pop xchg mov add adc dec sub mov das daa (bad) xor and bound movsb or pop pop dec mov add xchg push jbe aam adc xchg add mov dec imul mov popa xor adc add adc xor adc insl jp pop push push ss xor add mov or std insb adc imul mov add pop sub dec push or pop sub adc rclb mov roll lret mov inc or repz test jnp adc pop popl dec adc lds lods ss and fcomps add sbbl jecxz inc sub or ret repnz adc xchg adc and fistl shrl in xor mov pop rcrl ljmp pushf adc sbb cmc xor or jp fwait push (bad) xor adc mov pusha test and jp (bad) mov (bad) sub mov in movsl adc clc inc or ret sub repz sbb aam add jmp daa add mov inc xchg arpl jecxz cmp adc and popf adc arpl call daa xor out cmp adc cs pop repz in cmp mov int3 pop push orl xor stos add imul jne adc push adc mov jl sti ret sbb in (bad) push jmp mov or dec push adc dec adc push adc adc add mov fdivs and fcmovbe bswap ficom insl aaa xor pop repz add sbb adc jp movsl adc in push adc mov mov cmc shlb (bad) cmp imul dec adc adc bound inc inc xchg cwtl ficompl ret adc pop add adc cmpsb push jb or fisubr adc mov adc dec decb aaa out mov outsb pop adc push mov and mov in imul pop mov push repnz pop jne pusha (bad) fidiv popf jecxz lcall adcl lahf mov cmpsb test subl scas push ljmp jmp clc sbb adc aam or int or iret mov lods mov jo pop jno and pop adc rolb ffree (bad) movsl inc push in adc call sub jle sbb adc adc ljmp mov xrelease scas sahf pop mov push rclb jnp lahf into enter adc dec in test int adc adc dec mov jae (bad) xor xchg push int jne mov lret scas es sbb xor mov jmp mov sahf dec les orl sbb or push and and sub inc pop jnp dec cmp inc adc xchg mov or imul pop pop inc adc je sti xor adc add rcll int mov sbb in jbe sarl push pcmpgtb cmp dec xlat mov adc sub pop jae inc mov shl push adc adc imul stos (bad) xor (bad) add ror divb sub and imul pop mov lcall int jbe adc mov xor inc cmp sub adc or adc bound adc addr16 adc test iret pop push push ljmp inc jmp and inc mov cmpsb mov adc push add test pop or sub stos mov mov lea dec push imul sbb popf cwtl or push pop fisubl xlat jno xor adc dec aas jge inc and sub adc sbb addr16 dec and faddl (bad) mov add xchg or adc sahf push mov leave jle adc dec sti lret call stos mov xchg enter add xchg dec mov sub ds adcl icebp adc int daa pop loopne nop adc mov inc jne and std loop and push jl (bad) fsubrl (bad) out rorl inc mov jne cs cmp add ja push dec mov addr16 pop mov mov pop int push ret xchg outsl out adc hlt repz jns adc cwtl mov adc xor aaa mov repz sbb pop and pop mov pop sbb push ljmp xlat xchg jge,pn or mov loop inc call xchg lahf inc add ss insl mov adc pusha dec adc adc cmp inc sti loop scas aaa add cld fiadd mov pop adc or pop in into adc mov scas adc or cmp imul jecxz sbb adc test ja repnz clc ret cmp adc (bad) pop je jp fs sbb sub insl cs adc lock mov (bad) jmp adc (bad) hlt push cwtl jns adc mov rep push into das pop repnz dec les cwtl dec fmuls dec in cwtl insb adc or jae repnz lods xchg mov adc xor out dec push sub loope notl rcrl rorb fwait inc popf outsl inc push xlat or and daa mov xchg lret xchg adc loopne arpl jne ss jo sbb (bad) ret mov jmp mov sub js mov add mov or repz xchg sar xor mov pop push lahf push push js sbb dec pop clc shl mov cmp add pop dec mov fdivrs cmp adc rcl inc fsubrl and pop sbb pop out repnz xor xorb cmp add mov jmp or sub mov jmp sbb imul ss inc imul pusha idiv mov inc rcl rcll inc outsw pop icebp outsb popf sbb adc pop ljmp mov leave sbb cmp adc xor cld add adc pop test jle xor inc mov or das inc adc rorl sbb jo cltd xor or pop push adc xor cmp ja sub adc imul and femms fsubrs dec gs sti push adc jno and (bad) jns jge adc fidivr mov mov add mov jae hlt mov sub xchg adc mov dec cmp mov dec outsl adc pop add adc xor pop and adc es pop push adc push in adc jns cmp rcrb jp hlt adc mov imul xor cmp dec repz xor fsts in xlat enter (bad) in fsubl test mov or into push inc mov je (bad) jbe cmpl iret jae jp adc pushf es notl aaa cmp jbe sub adc in je add inc aam fisubl adc sub out mov and (bad) insl inc dec mov xchg sbb pop je cltd out adc (bad) pop je repz stc pop inc inc test mov jns push or cmp insb sbb sub pop aad add push push mov fcoml stos cmp mov popf adc push jne nop loop xchg mov ds rorl mov xchg (bad) rorl and shl pop sbb (bad) push xchg mov mov ja call mov nop stos into add inc jnp aam test cld (bad) rcll pop adc and pushf sub pop popa inc jns nop stos sub or pop mov adc xor je mov (bad) dec and jbe mov xchg repnz inc adc movsb jae dec xor adc sub sbbl or lcall fisub xor data16 jns out push jbe push push adc (bad) stc iret xor lods cwtl sbb xchg adc scas cmp or orl data16 hlt jmp int out push cmc jnp (bad) sub xor fild dec push iret mov jae xor adc adc adc fidivl jmp adc sub or lock xor adc xchg mov cmp test add mov adc mov (bad) stos pop loop hlt jecxz add dec pop pop pushf xor adc adc (bad) xchg xor or sti test lock fcmove cmpsb sbb bound stos mov inc add xchg xor add (bad) add mov adc sbbl sbb mov or dec repz sbb and test sahf aam or aad adc push jo adc pop out (bad) mov push (bad) add or jae into inc lret aam fmuls sbbl rclb mov dec push adc mov dec dec dec repz cmc and js rcrb test fwait test popa dec adc in inc sti adc xchg mov (bad) cmpl cmp popa fidivrl cmpb xchg mov divl sbb outsl pop pushf push adc or mov (bad) fdivl lret call int3 and adc aas cmpsl pop repz out dec push xchg jns mov adc test cli adc and fimull sbb adc es fbld incl fs mov (bad) and xchg jp imul lea inc and adc call sbb outsb or cmc jl or jne and lods xor inc movsb call pop mov jo ljmp loop repz cmp arpl push adc xchg inc mov xor int mov adc imul push cmc add in repnz push repz adc xor push in inc rcr pop jae scas es mov cmp (bad) fidiv in shrl jb daa stos cmpsb loopne mov repz in aaa push adc sti lret xlat (bad) mov jmp sbb lods jb adc and cmpl sbb adc nopl sbb lahf arpl (bad) icebp (bad) ljmp adc ja adc jb pusha popl sbb push stos adc xchg test adc cwtl inc jns jo dec adc add lahf dec lret scas adc xchg mov and mov add xor fwait xor out test ja les jbe pop mov repnz jecxz add jg cmpsl (bad) hlt push ret jecxz mov pop std stos adc rolb pop adc cmc (bad) fs sbb sbb test add xchg mov cmpsb aaa dec push mov fcmovb loopne jo out mov sub cmp imul adc or adc adc iret add (bad) or clc (bad) outsl call jbe adc iret out pop adc lock pop adc jge es test data16 scas test mov loope or movsb ret or ljmp inc js loopne lods popa adc out adc ljmp adc pop popa cli arpl push adc sub push adc push and add pop cmp fnop or dec or and int3 cmp ret adc add fsts pusha jno or adc aas addr16 jae xchg jge push jbe mov sub pop add xor cmp mov roll (bad) sub add lret add repz notl popf and ficompl movl push mov mov out test movsb or sbb adc adc mov movsl mov lcall pop repnz jg ds sbb adc ror jge fisttpll xchg xor addps je or lahf enter lcall fiaddl fidivr scas adc mov (bad) divb movsb loop mov paddb popf sub xor adc dec inc jne mov je leave and loope jno pop and cmp adc or or jle xor out adc push or flds aad (bad) (bad) jo or cli fwait mov sbb add push out pop add test je inc and mov add int3 aad adc test push adc pop ds enter lea int das sti rorl stc out jo xchg lret adc out repz lods jno aam call in jb js (bad) dec lds or xchg adc mov pop cmp xchg dec pop mov rorb sbb push adc xchg sub adc push mov adc jb xor pusha inc aad lods or pop adc add nop push lock daa jecxz sbb xorl test psadbw or mov pop das pop sub std out adc or in adc jl pushf mov (bad) fcomps xlat and xchg leave jnp daa test add test jmp rcll adc insb dec popa xchg cwtl jmp mov or data16 (bad) push and adc push shr sub adc ret scas loopne sub mov sbb lea adc outsb popa clc repz into insl data16 shrd and stc sub rcll push int3 insl cmp mov aam pop jns daa pusha lret sbb push push stc adc jmp in adc lret dec or je iret dec int3 rclb out jg fbstp js testl cmp inc inc loopne mov adc inc cmp add (bad) int sub sbb sahf xchg jl bound out idivb sub popl adc mov dec xor mov (bad) repz popf adc dec loopne repz jnp or rorl mov mov add aas imul pop pushf daa adc cmp mov fidivrl (bad) cmc fist and mov pusha push mov xchg and lcall or xlat (bad) adc (bad) into iret test push or sbb sti (bad) cld rcll divb insl in push or test jp paddsb push call jle add adc sub pushf mov xchg pop xor sarb fwait loope,pt into mov js mov or decb (bad) xor imul sbb test push adc push cmc adc cwtl adc pop pop imul and hlt flds insb into pop pop sub mov and adc jae lods mov movsl dec mov jecxz (bad) sti adc push data16 lods sub xchg ss adc in sub adc adc jns xor xchg jno ret add adc adc and addr16 fsubl mov clc adc jmp repz inc mov jbe adc sub lret xchg insl mov jae lock mov sbb xor fbstp call push stos dec and scas xchg cmpsl clc inc mov mov xor lods mov jle adc adc inc inc jno lcall mov pop orl test add repnz test das xchg push jmp lahf jo or add jle jl adc sub enter adc (bad) sbb shlb repz icebp pop lods dec sub xor scas movsl xlat cmp imul fcoms mov je testb push repz sub mov sbb cmp sub adc push stos nop dec jbe mov or pop (bad) pop iret aas bound fs jp xchg mov push mov adc mov dec arpl adc pop pop adc test negl mov fist jne xor xor pop push mov mov mov or adc xchg mov adc pop add mov cmpsb xchg cmp sbb adc lahf daa mov add sub or xor and adc push (bad) dec xchg inc arpl inc jno les sbb adc lds mov push and mov popf adc in gs nop pop repz lods dec outsl push or aad fs std xor sbb lods mov cli adc xor pop pop in xchg movsb sbb sub enter fidivl cmpsl adc jg lds sahf nop js jp int lret sbb adc insl push adc pop call xchg or test mov leave push push rcr pop pusha mov movsl push or ja mov lods (bad) push jne xor (bad) jnp pop (bad) cmpsl pop adc lds inc pop subl imul dec sbb pop jg lock add jl pop add mov cli sbb (bad) mov jno push and push out or (bad) adc leave xchg into add out adc mov xlat xor insl xchg xor lods subl push xchg rcll (bad) movsb push jne inc adc inc cmp mov int3 fadds dec lret inc adc cli sbb adc cmp pop repz insb ret sub rorb mov out jge test (bad) sti dec pop adc js bnd and adc adc jge jns jae adc lea sub (bad) mov pop mov cmp dec sbb and mov xchg je dec xchg into adc sti (bad) cmp icebp jmp in xchg mov int sub popa adc iret pop jb jae push in mov sti imul rcll stos mov sbb adc (bad) es lock mov gs cmc sub adc add out mov sti adc outsl inc dec adc pop dec and or je aad cmc xor lea les inc cmp adc arpl in push enter pop xchg stos rcl cwtl (bad) pop cli rorb push rorl sbb sti shrb stos mov cltd gs push xor and push cwtl mov cmp sub rorb cmp push adc sarl imul dec adc movsb push add mov je (bad) inc repz sbb (bad) push lods jle sub mov pop call inc xchg (bad) repz cmp rclb setnp push adc jge cmp test add xor adc loop jns xchg mov mov xchg adc push pushf cmc gs xchg xorl sub je cmpsl pop addr16 jo adc and pop nop ret jmp adc xchg addr16 jne int adc and sbbl lock ret fistl rcrl xchg mov jnp stos int3 sub imul rcrb es adc fbld lcall shr pop or mov push mov sahf cmpsb sti add pop dec adc push inc sub pshufw sbb out jne mov and xchg test ja mov flds pop hlt sub add jle adc cmp arpl push fsubl inc mov test inc fucomip and adc in aas ja xor cwtl inc je mov adc sub mov add adc (bad) jae push cmp jecxz or push xchg mov lock or (bad) icebp aaa adc mov pop stc adc sub adc add and mov cmpsl aam adc add mov ljmp or mov push xchg daa iret jae adc in outsb stc adc add dec sub push call fsubrl inc dec and adc dec mov ret dec adc rorl pop ficomp adc ret adc jb es mov xchg mul jno int push xor mov sub ds enter add and dec pop pop jns xor lret jle add mov xor lcall shl or popf insb pop xor adc shld ret in loop mov repnz jmp or dec pop mov push adc outsl cmpsb mov adc adc sub and xchg sbb shlb add std mov cmpsb adc data16 mov adc ret adc ds dec test adc xor adc mov push adc repnz adc dec mov dec sub fsubrs dec and jo (bad) daa adc sub push popa inc mov xchg dec stos sub adc and sub mov aam pop sbb xchg (bad) xor stos fdivp lcall jne je data16 ljmp aam mov notl mov adc ret pop push mov adc pop pushf lods cmp push dec les add loop,pt xchg adc mov call adc dec add adc sub jb mov xor in and ret or jae lcall rcll ds pop (bad) dec rcll stc jmp das adc jae icebp in (bad) mov scas xlat ja (bad) pusha pop inc push cwtl shlb sub aaa jne jecxz xchg mov rcll lcall mov loope aaa (bad) adc jl std adc pop xor pop das pushf loope inc jmp sub adc loopne push dec push adc in lea mov inc sub push repz rclb ret pop rcr adc cmc xor addl pop pop cmc repz mov xor cmp mov out jne movsb sub mov ret fdivl add mov sbb cmp xor or dec ret push mov stos dec and insl adc xor cs xchg adc (bad) jbe dec daa dec in mov push idiv movsb mov adc mov push pop dec add test fisttp stos push adc mov sbb mov out repz lods xlat pop adc or or add add mov and sarl sbb sarb inc sbb push mov imul (bad) (bad) in inc in scas leave into je test xchg inc adc nop je out xorl push mov pop jp sub loopne out mov stos sbb dec mov adc pop cltd mov adc lret push dec insb push test lahf pop add mov std js pop cwtl rcll jne push adc (bad) push pop int3 cs and mov pushl push out dec in and repnz popa imul inc insl inc jo xor dec clc (bad) mov cmp sub adc xchg scas pop adc push or movb lods mov cmp mov sbb adc aad out pusha pop pushf repz outsb push jo insb lds push lcall xchg and hlt (bad) clc adc pop sub push arpl loopne insb lea aam jno enter repnz cmp adc xor mov fbld jle push or mov push out mov out test inc cmp xchg and das fmull cltd or pusha jno data16 mov fbstp add arpl popa pusha loope jno in fnop rorb jae or jecxz movsl ja repz popf loopne xchg inc test cmc add push xchg ror adc (bad) mov in lret in repz jno stos adc cs add mov je or sub roll add add (bad) mov dec add lock cmp fwait adc imul xchg adc xor add sbb add mulb inc cs shlb dec mov fsubrl sbb popa add or adc lds push inc js adc popa nop test and repnz mov sub aas jno ficom sub xchg lret xor dec mov out jbe or rcll jl sub jp in cwtl xor das subl push lret adc leave aas rorb outsl adc gs or or or dec js xor adc mov or adc fcmove icebp pop inc repz rol out test push or cs imul pop xor mov hlt cltd add mov push xchg pop loopne dec adc jns dec push fcompl fwait bound xchg xchg hlt push test adc push sbb roll test sub jmp pusha or pop sub and mov jecxz mov mov pusha pop push mov test outsl (bad) mov jge or (bad) xor das pop inc in sub aas lea cmp mov int3 adc inc jle stos cmpxchg dec pop push jno xlat in adc xchg lds mov ror push adc xchg daa aaa and inc inc adc int3 cmp cmpsl xchg loope addl cmp lret jno shll (bad) mov pop sbb pop or mov pushf out jl push pop cmp mov add mov stos cmpsl sahf mov adc or add xchg sahf rolb popf ret sbb jne xor ljmp dec jmp hlt aad jne push or int3 into enter sahf adc dec call imul (bad) dec repz (bad) std adc or dec jmp pop repnz xor (bad) hlt xor lds xorl je mov adc mov cmp xor xchg fsubrs (bad) call sbb or (bad) mov (bad) insb adc adc mov xlat adc inc es (bad) rclb mov xchg lods cmp and loop xor mov mov sbb push pusha xchg ficoml or dec mov pop adc ret test cltd insb sub jne test repnz push aas xor mov sbb and add int into mov ss pop out adc iret (bad) stos cltd jecxz in push jl or aaa repz mov adc mov (bad) fildll (bad) jae subl xor mov pushf and sbb stos aam icebp fist cwtl sub into push push (bad) adc mov pop push adc and add dec gs pop sbb dec adc xor mov into adc mov cmp addb sub repz mov popf lock push das (bad) loop adcl mov fistp push fidivr adc js xlat inc mov inc sub mov dec dec outsb adc lret mov sbb scas sbb adc add test aas and cmpsl inc sbb out cli loope xchg fsubr outsl ja gs mov jb mov stos xlat lods add push mov fild (bad) movsl fisttpll pop in adc mov sub push and popa cltd sbb adc push adc dec insb jnp and mov pushf jecxz xor jno insb (bad) out mov clc add jae aas ret subb cmp push fsub add xor std push popf adc mov sti push adc out pop push xlat roll xchg insl test or aam jnp sub and and adc aas push mov add jmp mov sub xor mov stc jnp mov sub mov in jmp adc (bad) pop adc stc and je dec imul pop adc dec loop imul jmp inc mov lsl sti int3 pop into mov mov mov jmp sub push cmp fildl push loop (bad) jae dec rcrb mov add dec hlt ret repz fadds sbbb inc adc inc ss jae (bad) adc push adc out mov mov add sub enter adc mov mov ja in adc inc notb aam dec cmp push negl xor xor xchg mov pop dec stos jecxz,pn mov add push jns xor sbb push lret fwait (bad) enter pop test rcl mov cld xchg adc fnstenv and push jmp je or test adc add (bad) jnp lss inc jno sbb mov mov movsl or inc pusha (bad) lret (bad) xor adc jp adc sti adc ret dec inc pushf data16 in shl add cli push jno out sbb aas test fisubrl out mov bound (bad) aas add scas scas sbb or push call pusha xor rolb cmp adc leave sub cmp arpl adc xchg sub inc stos loop xchg xor into mov fcmovnb jmp loop in inc and or sub adc mov pop or fdivs cmp or sbb ds cwtl mov outsl loop xor rcll dec out xchg jl push xchg push repz jmp fimul add or adc pop fbld sub pop aas into pop out sti pop adc mov stc lcall pop icebp dec in mov pop aas mov xor inc pop jecxz in cmpsl js mov icebp pop aad aaa leave cwtl ret mov fwait bound adc fdivrl mov xor ds mov xor repz (bad) xlat test dec pop scas add aam adc fs cmpsb and and push mov mov add sbb jecxz jbe adc inc add addr16 push cld jl xor int3 test or mov mov (bad) pop les int3 adc sbb (bad) mov lea clc sub int adc and push leave pop (bad) mov mov fisttpl test or mov pop pop adc xor fildl cld sti imul ret bnd mov cmp sahf xchg xchg mov lods cld lds or xor xor and xchg or dec dec test pop add push mov (bad) and mov test add pop xor or rorl sahf pop fcompl repz out pand loopne dec stc xor jl push (bad) pusha or test pop cmc mov std inc adc sbb xor mov cmp adc adc fdivl adc xlat fisttpll jnp out mov adc fwait jg lea ja rclb sbb adc mov (bad) adc jbe mov outsl vmread or inc adc pop aaa or incl dec in mov rolb data16 xor out mov mov repnz or adc and cli sub (bad) sub xchg cmp adc xchg notb test inc or out adc lcall adc add add fcompl mov inc mov add adc clc icebp inc add mov sbb aad ljmp xchg test in push inc sbb ret xchg mov dec or rolb andl adc inc jl add sarb or jle stos pop rorl jg mov (bad) xor inc (bad) adc test adc (bad) or loop or xchg int adc adc dec xor adc int inc movsb mov sbb adc dec or (bad) adc jbe jno sub xchg xchg loope test pop cmpsb icebp lcall das mov adc (bad) adc adc test imul outsb adc or xchg fbstp nop pop inc cwtl or push pop ret in mov test push and mov jo popa jae xchg inc icebp rorb sbb mov jbe sbb mov sbb mov stc adc inc aam xchg insb push (bad) pop push xor cld mov adc mov test lods gs sbb sbb ret mov addr16 mov jns jl icebp jne inc add out leave (bad) cld insb in (bad) in adc push repz or xchg mov adc fidivr repz dec jle lock cmp icebp adc xchg je adc or mov js test push mov adc pushf aam cmpsl ja (bad) xor loop fistl or out adc inc and adc lret std inc adc popa xor mov adc xchg inc sarl mov adc pop xor iret stc mov and push mov sub xor ret adc outsl cmp cmp das adc add test daa popa lcall adc into adc lock adc add or mov adc imul jbe pop aad into push push dec sarb (bad) repnz inc and scas pushf dec lock jo inc jmp jp outsl fsubs out out es in mov mov into outsb adc xchg jne xchg es sti adc in (bad) push push xor aad cmp xchg jbe mov iret adc outsb add adc pop lds test lods or loop xor psllq cltd cmp or and sub push out adc push adc jo fdivr mov push std sub aas mov fsts inc adc hlt inc pop jne push jae or int3 inc adc iret dec icebp cmp lret adc adc sbb ss or pop or xchg mov and jmp (bad) daa (bad) lock adc jno dec dec repz inc adc enter stos pushl and push jg cmpsl pop xor out fidivr adc and sahf aaa js add sbb push adc inc bound fs sbb adc mov and clc pop insb int3 jmp jl jle and (bad) cmc rclb outsb xchg loope xor mov mov repz nop (bad) (bad) pop dec adc xor sub not adc icebp jno mov out mov mov mov enter shrl das int sbb (bad) adc inc inc pop push xor mov insb xor sub sbb xchg adc jle cmc add out popa add push cwtl rclb les dec dec jmp mov jg mov loope xor and xchg fist inc ljmp imul stos in mov out imul adc ret subl lret xchg lcall mov adc mov jo mov xor mov adc (bad) xor mov test xchg adc cmc dec stos adc and pop mov aad mov or xor mov loop insb adc mov imul inc (bad) mov pop xchg std popa not mov pusha test ror adc pusha and inc repz jmp pop je push adc insl aad pminub mov test arpl fcomps mov fsubrl and stc ja or int3 out push pop add cmp adc outsl mov mov jns xchg dec fwait pop mov dec punpckhwd pop mov and lock jge adc inc sub adc mov adc mov lcall push sarb sbb mov scas (bad) cmpsb sbb add sbb jnp dec in aad pop icebp xchg mov sarl and aas xor cmp or rclb pop push sbb dec pushf adc icebp flds add in (bad) dec inc movsb mov adc gs nop ja leave adc imul out adc mov adc push insl rcr push xchg adc (bad) fidivl gs xor xchg cmpsb fsubrl adc pop sub mov adc push xlat notl out sub ds mov jmp fist imul insb push fs (bad) jmp daa std mov outsl jne stc test stos mov lcall imul sbb mov add leave rol adc push scas mov mov inc cmp imul dec je adc and add pop rcrb leave cmp push push adc mov daa push data16 pop jb (bad) leave lods adc in add pop cltd jnp sbb xor rorl cmp adc fs repnz aad push adc pop pop das scas ss (bad) adc sbb mov adc mov pop mov and imul outsl jg mov xor inc mov lret loop add out push xor mov pop xor jl mov mov cmp ljmp cmp pop or cmp and xchg xchg sub popa into in cmpsb push or (bad) mov add jb adc xchg sbb mov mov sub into mov ss adc push je cmc int adc test nop mov add jns int (bad) jge pushf imul adc jbe xor add adc inc sbb hlt or push sahf subl or pop pop repz fsubrl out dec adc add xchg or orb ljmp lret adc cld or adc adc xchg mov adc lahf sub xchg mov cmp stc fdivs mov cltd das xor fdivl or inc or dec adc int3 adc cmpsb cltd in insl icebp inc mov ficoml mov xor adc loope xor into or inc adc and sbb xor or (bad) stos pop push ljmp add cmp int bnd inc pop pusha sbb dec (bad) ljmp jmp neg dec mov aaa or adcb dec xor aam pusha pop or je fmuls and fildl dec je push nop fwait mov outsl ret pop jne out jno jns sbb icebp adc (bad) dec jle call je cmc sub pop add ret xchg leave xchg inc dec mov movsb test lock xor jmp vsubss cld add cmc xchg mov (bad) and lods in mov out jne ljmp aas in imul into xchg (bad) addl jb mov in sub xor adc pop xchg inc rolb ret dec sub adc xchg iret mov adc push std shrl mov addl cltd jmp or sahf mov cs imul pop sti aad hlt or bound adc mov xchg sbb das push movsb push icebp inc aas adc mov adc fcmovnbe les pop pop insb int notl mov aad adc lret or push jmp mov push (bad) aas add jnp imul adc push mov cs adc push mov mov sbb jne insl mov int3 pop repz incl or add pop cmp aaa aad or jns adc popf outsb insl mov std and clc sbb xor btr out push mov ja repz jge addr16 cltd jno cmpsb clc sub out push repz out pop jle xchg addr16 fcmovnu (bad) adc dec repnz loop (bad) cld rcl cld sbb fistp xor pop push into adc out push dec or lret sbb sbb fisubr adc xor push ret adc fdivs mov decb dec jp scas add shll cmp and mov sbb hlt stc jo xor dec mov insl sbb (bad) mov mov push aas xor (bad) inc pop xchg jmp jge scas xchg mov rclb lret xchg cmp vmaxss jae mov ret leave pusha test cmp jmp xchg fs (bad) clc jge mov fdivs cmp pop push and aad jg sbb int3 push mov xchg ficoml or adc arpl cld cmp pop mov icebp in or jmp stos and pop adc dec push cwtl ja xor push mov and pop cs mov cmp dec jo xchg mov lret lock cmp cmp fwait mov pop mov xchg inc lods test (bad) jo imul xchg or mov mov mov shl xchg add cmpsb jb xor aaa rep xchg lods cmp xchg mov jg mov sbb pop popf lret xor bound adc mov fwait jmp enter movsl test lea (bad) xor add cli sbb cld mov rclb mov inc mov sbb push in add add xchg mov (bad) sbb enter push xchg lods mov sbb pusha adc cld out fnsave mov leave mov into push pop pop je push data16 shrb xor lods lcall adc fnop leave mov les out xor jg gs push stos pop cmp push xor cmp mov mov and pop or and ret jle iret or adc cmp jecxz dec lds nop push cmp enter xchg popf mov inc lock pop adc pop jo cli mov jns add cmp cmpsl push mov sub adc data16 adc add sti daa inc (bad) push (bad) fcoms cmp mov (bad) xor sub inc mov test xor jecxz mov cmp adc sub adc dec pushf adc pop xlat ret shlb neg test adc shrb adc scas xchg add adc hlt loopne push jmp jo adc pushf sarb popa mov xorl adc cmc fwait setl adc xchg and mov dec (bad) js add or (bad) mov scas adc insb int3 fmuls (bad) stc xor mov cwtl jns adc dec or xchg xchg sbb insb and adc inc pslld mov xchg xchg pushf pop jecxz sbb adc jo mov pop aaa adc sub cli adc in (bad) pop mov push int fs in leave add xchg jmp je ljmp out or leave or mov pusha adc imul ljmp stos jle adc jno jmp in push add mov (bad) pop hlt test lret fidivrl in dec cmp cld cmpxchg mov test add stos out shrb adc xchg mov jge outsl movsb adc iret leave adc icebp sbb in jns in mov mov adc lcall ret pop jnp sti xchg pushf in mov insl rolb (bad) adc jmp and adc lock lret rcl sti pop rcrb dec push xor aaa xor xchg jg push (bad) cmp fdivs lea adc jg pop cmp mov (bad) or hlt add adc shl repnz notl leave lock sub outsb ds jg pop adc add jmp adc (bad) (bad) pand out mov jle adc fcomip jae test xor movsb add repz enter cli adc sahf sbb repz adc loop adc sub add sub adc aas inc cmp outsb je js pusha xchg popf pop sbb adc cmpb adc hlt call jecxz mov push and adc (bad) mov mov jmp fsubrl and iret mov pop loope rcrl sbb pop and (bad) xor push lfs cmp inc fistp and push or cmp nop call add (bad) fld xor push rclb mov es sub mov rorb sub dec pop les cmp xor cs ficom cmp insb out add out int inc scas daa or pop fnop pop in (bad) hlt add outsl std adc and push stos insl cmpsb repz cmp cmp int fcoml enter into adc call sub mov (bad) adc test aam arpl sbb (bad) mov ljmp push jae push push popf subl mov dec adc into jb xchg xor repz xor adc sub ror and xor in mov add dec leave push adc mov (bad) imul cmp pop pop dec sbb dec sub adc cltd dec adc adc mov ljmp push cli repnz mov adc or ret lds and test or std pusha pop mov pop mov pop xor leave jo push or mov adc aad idivl and ret xchg or adc sbb mov cmp adc jecxz adc pop mov mov pop (bad) adc subl icebp adc movsl out sti roll pop adc jo mov jno call mov lods imul (bad) sub jecxz lock push jl push cmp decb addr16 jno mov add or fnstenv push (bad) stos adc pop test cmp out xadd (bad) mov adc imul shld jno adc jbe jns pop push adc in jne jp jmp xor cwtl xchg mov ja push call arpl adc in mov ret push inc or lods adc mov rclb repz call je jae (bad) ja sub add jb call gs lret mov enter adc aas fstl out jg adc adc and int adc pop add xchg iret dec push cmp adc add arpl inc leave adc and mov mov cmpsl mov xchg mov (bad) mov adcl dec (bad) sub pop pop scas popa mov mov adc push adc jne jbe dec xor xchg adc dec pop mov ljmp popf lea or adc enter lret sar jb and fisttpll cwtl mov jg jb jge xchg push push (bad) adc daa jp adc (bad) pop jmp stos out sub cmc pop js (bad) les xchg mov xchg mov inc pusha fucom xor rolb mov add lahf cmp adc mov lods mov adc repnz sbb xchg push adcb int3 xchg push out xcrypt-cbc cmpsl adc mov and adc sub sti push sub scas sbb stos popf sarb lcall adc adc jbe push pop dec or adc fldcw mov scas insb je xchg ret adc out cmc or dec sbb add dec adc mov xor adc lea test xchg mov into jle dec pop mov adc cltd push dec push out xchg adc test adc pop jle mov adc inc cld in mov sbb nop adc ret aas or mov repz (bad) cmp std ret mov mov add (bad) fistl xchg mov pop inc pop out adc mov mov leave addr16 xchg sbb pop adc xchg insb aaa mov imul adc cmp adc loop mov jne imul pop aad dec inc or cmp dec movsl pushf xor mov pop bnd adc xor mov xchg xchg dec adc mov and cmp mov xchg xor mov push xchg adc inc cmp mov sub aaa sbb movsb fldenv pop (bad) adc xor popf aam xor notb push xchg jo test (bad) and inc loope and ja xor rclb test sbb js movsb cmpsl sbb mov fwait jmp arpl add xlat ds sbb shrl fsubr (bad) rclb dec ret mov fnstcw adc xchg add stc or push cmp adc dec out jmp cmp gs push mov push pop repnz (bad) cmp mov sarb adc adc mov int3 sbb adc mov pop les inc xor xor incb mov sbb movsb pop sbb push mov fisub mov adc int3 test push adc mov sbb push add rcrb jg fstpl lds stos loopne adc fidivl cmp stc iret cmp lahf (bad) mov out mov setle mov push sub dec pop dec enter aas sar repz in daa ja sbb sbb xor sbb dec add adc jecxz hlt push mov mov sub cmp dec lret xlat jg fs pop mov add mov iret test adc or push mov bound xor inc stc and aam int adc jnp hlt aad add inc pop sbb mov or test (bad) lret ljmp sbb adc rorl out mov add inc push adc es push fsubrl ficom jns sub fnsave mov dec out jne xchg jecxz jmp lret push fimul jnp aaa imul (bad) mov jns add pop int adc cmp push ficom bound push mov pop sub pusha adc pop aad pop push mov lahf add sbb adc leave adc adc xchg sub repz inc add mov mov push adc cmp sub sbb xchg repz xchg mov or loopne add jmp cmp jle cmp push (bad) jecxz adc mov push mov sbb sbb inc push fidivr sub fsubrs pop sub dec xorl mov repz jb dec lret jg push push or iret in mov and imul jp enter push mov divb push dec (bad) movsl cmp call sbb sti or sbb aad enter mov sub or rorb jle add popf inc jb adc push rcll sbb inc dec adc enter dec stos dec xor lds pop out mov ss fistpll jl mov mov incb fnstcw adc dec xchg leave mov xor jne xchg mov and into popf gs inc ja mov push clc or inc stc mov pop jg pop loopne out fsubrl xlat add mov xor sbb fsubp pop sub push test setge adc repnz lcall jmp lret jo bound xor mov rorl dec mov adc fmul int mov add inc mov mov mov mov insb add add xor leave pop dec rcll inc push mov mov scas push adc jl mov mov sub xor in mov push in (bad) repnz push clc inc adc mov iret pop sub adc jge andb adc cmp adc sahf (bad) ja in adc insl sbb enter in adc pop sbb add jmp out gs in mov xchg stc mov ja pop sbb (bad) repnz shr aad adc (bad) jp call fnstcw (bad) jns ret mov outsl nop xchg repz sti sarl or out mov adc sahf push pop neg jbe fdiv adc (bad) push mov jecxz (bad) loope add out (bad) in repz ds in into out jne xchg add je outsb fsubr (bad) and in adc aam divl jbe icebp add out ret gs or loope jo (bad) inc jge std out sbb mov jle and add sti ret jnp lret jo out gs sbb je inc int3 or scas dec and ret and xlat popa movsb or adc sub adc das addr16 mov push xchg mov out jne cli les xor cmp dec push sub leave adc les adc mov inc clc add mov push pop sti call pop pop inc mov ja je stos add inc pop jge nop xchg cmpb rcll andnps hlt jb adc xor mov push popa pop adc push das movsl adc mov scas sub aad inc dec popf int3 lea orb jno ret xchg mov pop aaa sbb adc fistp mov pop xor or xchg push fnsetpm(287 and add data16 fwait push adc or jle sub adc test movsb xor xchg in sbb or ficoml push adc jl add stos cmpsl push adc mov adc and mov adc out pop mov clc and add push mov mov ds insb xchg adc xor adc xor mov adc mov mov repz push dec pop imul div pop push sbb sub cmpsl leave jne inc mov add xchg adc mov adc clc cmp aam xchg rolb mov add pop adc jl popa (bad) in adc outsb pop addr16 jo lcall xchg pop (bad) (bad) adc bound enter out popa cmp fs paddsb xorl jl inc dec je lods (bad) adc xchg aaa in cmp push mov call and dec lock xchg clc push repz pop pop daa repz pop iret jge pushf jp mov ss mov ljmp out adc inc xchg fisubr mov mov pusha push add lret or jae inc ds icebp hlt push je or enter adc xchg mov jb xchg adc fcoms adc movsl add mov mov push vcomiss and adc and mov mov push stc jp pop (bad) fiaddl xchg arpl shr imul into push or add adc sarb cmp cmp leave in and movsb dec outsl hlt push inc mov xlat loop int add dec nop push jmp add add rcl push sbb mov sub adc (bad) cwtl mov ret xchg (bad) in test adc push cmp stos adc fnstenv sbb test repnz sbb pop insl nop adc fldt adc mov and cli shrl inc imul push push xchg sub pop hlt out andl inc adc xor mov sbb or pop adc out (bad) int in adc lods push push sub fistl add pushf test cmc ret int push adc mov in adc jg outsl sahf movsb (bad) adc or pop (bad) adc mov push cmpsb movsb mov test pinsrw xor pop fmulp in xchg out enter jle adc ja jl mov fcoms stos xor jp je mov enter das fsub sarb or sub (bad) sub loop dec sbb enter dec repz cltd push stos pop adc push cmp call cmc cmp add mov or orl cmp pushf mov or adc inc test iret mov adc mov loopne (bad) out dec ljmp lods (bad) scas aam push sub ss jns fsts mov pop xchg sbb repz nop or and add call lahf mov mov jno popa or fwait cli jp mov push ja pop testb pop test mov push loop cmc and cwtl mov xchg loope add adc pusha mov xlat loopne jg iret mov mov adc cmp rclb mov jg repnz xchg add mov pop mov nop movsb insl stos aam jge push dec into mov pop insb dec xchg (bad) fcompl adc xchg sbb dec je inc popa adc test lds or inc sarb cmp sbb insl jne add loop push jl pop adc add jnp imul xor into add pop xchg and dec gs mov xor (bad) mov aam setnp push adc jg mov popf stos mov or icebp mov xor mov hlt push cmpsb ljmp and je hlt mov adc fadds adc iret aad icebp int3 fist xchg xor jge mov outsb push imull in mov jbe xor arpl testl in push loopne aam push subl daa data16 out cmpsl and adc test jecxz std fcoml sahf xor push cli or sub adc insb xchg lods mov stos push push pop and (bad) rclb dec cmp xchg jnp inc insb in and push movlps add shr fwait rcl adc jecxz jp out adc mov or dec nop sub inc imul je xchg and or sub in addl mov imul je sbbb xchg or push mov enter bound cmp dec ljmp iret cmp pop out popf add ficompl pushf sbb mov mov loope xchg mov ljmp pop and fsqrt dec lods or adc in lock mov dec pop addl cmp (bad) (bad) xchg xor mov add pop add adc adc pop mov shrb aas mov cwtl or mov je xchg aas xor push add push xor push adc jecxz gs push inc xchg fsubrl mov (bad) xor adc rorl xchg xor es push fnop sbb pop rcll xchg push dec test out inc (bad) mov insl (bad) xor rolb adc adc pop lret out jle xor aad rol add adc stc pop xor cmp in and imul in adc decb stos adc fs (bad) cld mov clc push adc out scas inc xor dec (bad) into outsb dec dec or scas sub add adc std adc fistl xor loope test or add adc add cltd adc dec dec fstp rorl pusha xchg and mov or adc movsb lods in std jmp in or adc dec mov push push daa mov xor sbb stos add jae test jge push push inc lea repz rcl mov pop adc sbb fsubl lock sbb mov mov (bad) xor mov rclb out push pop or and adc and push sub (bad) xor and fnstsw add adc call mov shll xor push ss mov roll adc popf movsl dec aad adc mov xor (bad) push cmpsb fs fcmovnu jns jae (bad) (bad) jno lods or mov out cli xchg pop clc pop hlt aam sahf adc add (bad) jne movsl add adc xchg ficompl out dec test and inc lret es aas mov (bad) cmp adc pop adc (bad) popa jnp push adc ret data16 imul jp ja out fsts jecxz jle into rcrb stc jge lcall js jmp xlat mov (bad) pop mov mov cld dec pop cltd adc dec jle or fsts orb jns adc jle adc into hlt dec mov mov ja add insb jl adc or mov jmp data16 push inc mov and popf adc add adc hlt jmp shlb aad or sbb adc adc pop mov inc push pop popa dec jne sti adc leave fwait xor jmp adc mov scas jmp pusha add adc gs adc test scas sbb sub leave aad push loop adc push inc sbb in push pop jne lret or mov pop add mov pop xchg adc ljmp arpl mov xlat jle sti inc loope adc or mov adc dec jno push jns push mov cwtl and pop pop (bad) sarl imul popa loop repz cmpsl dec stc adc pop mov (bad) jmp ret xor int3 nop ret or or mov mov divl pop pop pop push pop push cmp sahf stc dec push sbb nop mov addl rclb mov imul jecxz add add fsubrp xlat push shl les jecxz mov push add pop adc stos dec out subl enter dec dec in sub push pop js (bad) xchg gs cld cmp push sbb mov sbb add mov out xor and dec inc rorl mov and mov push adc jle stos insb or add cli adc xchg imul sbb xor aas xor out data16 lahf into mov arpl fs add je push adc loope gs add or call adc incl cli adc inc stc adc iret jmp jnp adc icebp insl adc das shlb movlps jno outsb push xor adc lods adc cltd movsl repz xchg mov add sbb sti jge adc xchg jnp inc shrb jp aaa mov push sub cs sub divb jecxz pop (bad) push mov sbb fbstp add (bad) (bad) mov scas dec sub add loope cli sbb add iretw mov scas push mov add out lock aaa mov add mov add mov add (bad) adc push outsb jmp push std adc in inc enter xor jecxz int add lock mov mov js insl xchg add adc and lcall lods pop mov ss pop into xchg push add adc pushf std add sub xchg das clc mov sbb gs mov jno sti cmp cli int3 outsl push leave mov inc adc std scas push adc out scas cli push jmp test sub mov outsl dec adc (bad) mov rcr rcll xor pop add xchg cmp pushf push hlt push dec xchg aas (bad) and (bad) notl stos mov mov dec add mov push lds idiv ljmp aaa or push add out or push sbb push call out cltd adc fstl outsb mov mov (bad) push or push add add and sbb sub mov out stc inc cmp mov gs pusha ret fisubl jno mov adc inc xchg sbb adc adc repz aam or lea addr16 mov ffree cltd jl outsl fldl (bad) test rorb xor insb outsb in insl or out adc cs inc or pop adc leave sti pop cli std adc mov mov iret inc adc fwait dec mov sub adc sbb push xchg dec sbb ss adc mov sub adc sbb bound loope mov and iret dec add cs xor jno mov mov push jle pop jno xchg mov add test pop xor sti lea adc add cmpsb adc std ds adc dec adc jp sub pop jg cwtl loopne adc adc imul mov das dec decb dec insl (bad) adc lret not adc mov bound outsl je dec loopne (bad) cmc adc sti (bad) cld jne dec out add insl mov xor pop ja fistpl sub adc lea clc out insb sbb cmc adc mov nop hlt dec jns decl adc dec cmp add or (bad) xlat enter xchg inc or and sti and ljmp xchg jne mov out and xor cmc pop mov add rorb std cmp fdivl xor mov mov mov aas adc fwait adc fldln2 pop push ljmp data16 movl dec iret nop mov out cli jmp add rcr clc and rsm imul pop add mov repnz jnp add sti jae mov dec cmp repz lea push (bad) clc adc push pop sub mov adc mov rcr xor aad ficom sbb mov adc (bad) inc hlt idiv jne xor cli pop xor xchg adc lds (bad) xor hlt adc (bad) mov pusha lea and or mov das push icebp xchg lahf lret sbb and sub mov dec scas mov pop cmpsl adc aam rorb stos jge aas or movsl dec movzbl repz mov mov mov (bad) mov dec jecxz mov pop lods (bad) pop test out jmp bswap sub add lock mov sahf xor jns xchg pushf or inc pop xor out add xchg inc imul adc pop xchg push and aas mov cwtl dec xchg push (bad) xlat out xorl pop mov xchg jecxz push ret xor add out pop mov adc outsb add jecxz adc jge adc pop rcll pop cmp sub mov push adc mov adc jl sbb push mov xlat cmp rep mov jg adc jns test loop and ret xor mov sbb add inc mov (bad) in sub test icebp xchg or sbb and les jg cld jno lret cs enter loop pop popf sub ret je or iret xchg aaa daa adc lods in loope (bad) mov (bad) aam sub ds inc adc in mov fcoms je adc mov push test mov dec cltd idivl adc pop mov xor xchg or cld add and (bad) push xchg cmp ja jecxz mov ret adc jmp test sahf fadds (bad) aad movsb xchg xchg mov dec and inc in cld sub push popa jne imul pusha xor sbb xchg mov adc (bad) pop adc in adc or adc jecxz in repz cltd jne or cmp adc ss pop adc sub sahf test mov mov stos lock push (bad) adc je or cmpsl rcrl add inc ss mov mov or xor sub or test xchg xor shll out cmp leave adc dec push jo or dec aam mov adc mov (bad) fistpl xor or lock mov bound (bad) sbb adc in and fmul jnp sbb push fst or aaa test bound nop das cld loop pop in out mov mov cmp mov mov add or mov pop adc or fcoms lret xor or aaa sbb cli xlat repnz push dec pop lahf js add out sbb adc pop jp push je in scas push out fs outsl push adc daa sbb movsb and sub jecxz pop int3 add inc xor fadds stos test adc pop movsl xor or mov in sbb jno cmp pop test mov std xchg adc cwtl jge xor jo enter dec gs jle adc push xchg adc (bad) xor call push in cmc ljmp popf int3 fistpll pop (bad) mov pop repz jns push iretw pop push insb popl enter int mov dec out xor (bad) push push adc outsl daa pusha lods cwtl inc adc jne notl mov xor mov mov gs sub (bad) xor out adc push scas and fmuls in mov add lea les or adc (bad) push xchg inc add subb push lods xor xor xchg ret and je cmp mov out out stos sub ss icebp (bad) sarb (bad) inc xor mov mov cld adc xor fwait dec mov or or sub in mov xor lcall sub inc or movsb js pop xor clc mov iret addl popa pop jecxz adc pop fcoml fisttpl out push pop cmpsb pop adc stc adc inc je test popl cmp repz mov std pushf or adc clc dec mov (bad) loopne dec mov iret xchg adc outsb shlb mov lcall daa dec adc call movsl fstpt adc pop ss iret inc adc int jl jle repz sub imul ret mov fmull inc sbbl fildl add aad outsb or cmp adc cs jne pop add daa mov push scas movsb adc push jmp inc or adc mov out or adc mov cmp sub cmp xchg push adc pop inc lock cmp add stc add lahf roll mov sbb adc jmp fcoms xor adc ret call adc sub (bad) pushf xchg aaa adc (bad) and adc sbb test and lea mov (bad) mov aad mov mov enter jecxz rcrb adc or inc and imul jne sbbl aam fs mov fdivl inc pop pop in punpckhdq mov ljmp hlt loopne xor adc addr16 push mov je (bad) test inc adc sub sbb sbb dec lods and cmp popa adc jo aaa fisttp adc cmp (bad) out cmp mov sbb cld and pop xchg fwait or sub inc jmp xor inc jle decl pop adc iret loopnew jo ja call or jbe sbb push lods sbb xchg or adc test mov pop js outsb fisttpll adc in cmp mov pop inc ficoml xor jne fwait jge dec or push mov inc mov outsl mov adc fwait pop or push mov or loope popa cmp xor xor push jno pop fildll jl cmp adc jnp (bad) test adc js jb repz xlat or int3 push or movsb jmp cwtl fdivp jae adc inc jle mov aad imul mov mov lock mul sbb movsb jge or iret cs adc sub dec popa loope lods outsl aas mov cmpsb xchg or mov pop sbb adc clc testb mov mov sbb js mov sbb push pop addr16 adc and push mov adc rcl mov xor adc fistpl js dec xor inc push or adc inc add data16 adc cs ret fwait mov cmp stos jno mov mov jnp add cmc hlt jle add or sbb mov loope xor mov pop lea es adc loop mov jo sub stos mov out sti push out or lods mov adc dec cld aaa pop pop sub or add rcll mov out and or fsts push xchg push sahf add mov pop push pop (bad) ss jno mov test (bad) aaa out pandn xor push push sbb sbb xor repnz arpl push inc in jp sbb sbb dec imul adc rcll shl adc stos push adc xchg sbb jae and in mov adc cltd daa cmp sbb out pop inc push das push and xor jecxz rorb add rcll loop mov push out xor push loope xor sub add scas imul inc push clc pop xchg push xchg jge adc and cltd dec sub jbe,pt aas nop out stc (bad) cmp dec adc cmp clc push xchg add shr call adc adc cmpsb adc add (bad) hlt xchg pushf pop mov mov call test mov adc xor jae nop jbe lahf adc pusha ja adc adc xchg roll aad or adc (bad) adc scas nop stos push xchg adc negb (bad) iret or adc push fildll or adc pop mov mov sbb adc popa adc out inc dec inc daa add adc cwtl mov adc shlb adc or cmp sub mov in add xchg (bad) je gs mov (bad) push leave test push aaa out sub sbb sbb xor and inc fwait adc movsb dec pop adc ja ret aas notl xchg jmp mov push adc stc mov aam sbbb lds xchg lret fildl adc xor xor mov daa adc mov lcall (bad) mov je popf or lret push mov mov in ret adc pop push aaa adc jmp test cmp call or xor sub xor iret xchg push lods mov push bnd dec or je (bad) jmp or adc adc sbb ds jb (bad) pop outsb call inc xlat sti repz mov push pop mov mov lods or mov sub push mov adc lds adc add cmc hlt inc loop push popf idivl call add imul cmp test adc mov test (bad) pushf jg adc or xchg push aad clc jo or xor inc in mov outsl inc adc out (bad) pop xor sbb adc in mov adc mov add jmp xchg jbe push ficom loopne inc push fist (bad) cli (bad) shrb jae pop test sub dec test inc xor push mov cmp mov lods pop rcrl (bad) jecxz (bad) or push mov int push adc push jg sbb push cwtl shrb std leave imul ret and inc adc xchg jne xchg adc leave insb out push cs loopne (bad) mov jne pop inc out add sub mov fistpl mov and inc adc cmc mov test xor or sub addr16 test xlat sub xor repz inc lock jg or inc push cltd js adc rcl stos int3 jb out and ss adc shlb dec cli cmp mov or push bound jecxz sbb ret ja and sub mov shrl nop (bad) ds sbb test fisubr mov mov sub aaa pop imul jns repz mov pop scas sbb push adc push fistpll xchg es and mov adc inc ss adc sub lcall stos shll sbb mov insl in repnz cmp mov sub mov (bad) loop dec divl xor repz mov out cmpsb adc (bad) fstps xor repz mov cli cmp add fistpl pop dec xchg mov xchg adc jle xor pushf mov inc mov insb add lret push mov and out mov (bad) pop mov sahf sbb (bad) jne sbb xor pop ficom xor add inc mov mov test movsl fistl pop imul jne adc mov adc xor cltd mov cwtl outsl adc (bad) or fidivl adc lds mov xor sub and rcll xchg call xchg adc adc dec out mov fpatan xor pop iret shlb dec cmova pop cmp fmulp xchg adc movsl (bad) dec and stc push adc push push outsb push loopne jbe mov (bad) or push lods jmp fiaddl (bad) adc or cmpsl adc mov dec repnz mov adc jg pop mov ficompl addr16 sbb adc and int3 fidiv test dec push adc insb mov in or mov dec out lret (bad) divl or ficom inc xchg xchg test jl popf mov or pop or jbe adc cld pop mov adc je jne repnz pop aaa cmp and cli mov aas lock xor adc add and mov mov in outsl sub (bad) xor test sahf dec and fwait adc mov (bad) xor in or (bad) sbb and ja push cwtl push rcr adc rclb mov test je loop jbe dec mov mov add je daa sbb mov or pop adc sti popa add or out fnstsw add gs jne push jl mov and dec sub sub movsl mov lret lds jmp pushf clc (bad) cmp fidivl call jne adc cmc in mov pop adc loopne out jmp inc sbb sbb movsl mov cmp and cmpsb in and or shll cmp pop pop addr16 cmp dec jbe sbb nop clc adc add cmp inc mov push jne,pn push adc lea rcrl adc nop adc fisttpl adc and fs add stos fdivs and out adc jmp pop dec repnz inc popf div dec adcb insl cmp loope jmp ficom jns adc out sub dec mov fistpl cmp shlb ffreep add scas xchg adc or out clc js xchg shlb mov jne or and pusha adc clc mov adc sti repz cmpsb (bad) jae das sub lret push outsl cmpsl cmp add dec les int3 adc adc push and adc fsubr (bad) loopne (bad) mov leave pop lret ffree out dec push adc jp mov cmp cmpsb jg fiadd adc loopne sbb adc lock cmc lret or scas xor ffreep cli or lods dec adc std and (bad) mull cmovle mov lahf enter fs loope adc nop jno mov push inc daa (bad) aaa and dec pop mov fcoml nop sbb jnp aaa jg gs cmp daa pop andl addr16 rcrl inc std push xor jno cli jne out jbe cmp add add scas lods fs adc sbb sbb or cmc in pop imul or pop cld lret adc rcl movaps mov jno xchg aas mov scas rorl gs adc aad ss sub ficoml andb fsts cmp adc inc movl mov cmp les jne and popf push sub in dec dec cmc mov xchg adc and mov pop adc adcl adc xchg pop mov das in xor ss push rorb adc jae lods jb sub pop imul add jno lds or push pushf bound jae inc dec dec jl rorb neg lods add in push adc jp in add mov cs sub add fisttp sti int mov pusha movsl mov cwtl mov pop out mov adc in ds js jno (bad) sub mov sbb jl adc lock mov xor es ljmp repz addr16 xchg mov pusha inc xor out push addr16 fstps sub insl add lcall mov out mov or movlps mov faddl push xor daa pop sahf cmpl repz push sbbl mov in lds popa imul in les adc adc loope dec cmpsl cmp push xlat mov icebp aas jns push scas jmp mov outsb mov (bad) rorb fimul or iret adc jge cmp mov sbb loop mov scas jne add adc repz and xor test jns js push lcall push xchg sbb pop adc jnp fsts push adc cmpsl xchg mov cmp push dec int adc les xchg movsb (bad) repz add and sti add (bad) jmp push mov mov negl and pop pop add hlt or inc cld adc into insl aas sbb adc inc push (bad) and dec adcb int push mov mov xor inc popf rol sbb and icebp (bad) pop xor cmp bound and incl add push out fidivrl nop cmpsb adc (bad) popf js in adc movb xor out push xchg mov adc cmp clc or or aam outsl test aaa adc push push mov inc inc pusha mov (bad) rcrb mov xor imul sub mov add jle sbb adc push mov mov or sbbl lret mov pop pause mov cmp ret and xor inc add fildl mov mov sub pop jg adc data16 adc fildll (bad) int adc pop nop outsb and imul rcll (bad) negb scas fdivl pop or adc jo mov sbb inc mov xchg fwait and or adc out inc adc xor and lea in mov pop out int add enter mov ds cwtl aaa faddl repz lcall xor mov (bad) or or (bad) xor lods (bad) (bad) mov insb jmp arpl lds or adc or in mov enter or adc sub (bad) repz fsubrp dec inc std or add (bad) add (bad) repz mov pop rolb push dec repnz ss xor sti add push mov fsubrl (bad) in outsb loope pop cs and popf sbbl adc sbb clc adc pop (bad) add pop or jmp repnz data16 mov pop xchg adc dec jp loop aaa sub out dec push mov cld (bad) sub push pop lods sbb mov jp add push mov cmp mov ret adc fwait add mov jae (bad) pop add pop mov xor sbb mov inc dec adc adc or lret aad inc fucomi adc push cld fist sub cmpsb scas mov outsb xor sub fist in mul test adc (bad) movsl mov sbb iret adc pop dec or lea adc das (bad) dec adc mov and or decl arpl out sbbb and sbb cmc dec (bad) out push adc in pop adc lds mov nop fistp and cmpsb jge dec xor cmp notb cvttps2pi outsl and inc xor cmpl or in dec sub push xor xor push lret out push rcrb adc divb adc jno fist add loopne fcomps std popa adc xchg repnz hlt lahf loop ss fisttp pop adc pop jo imul jecxz adc mov adc sub sbb mov sub jnp sti or dec mov fidivl or rclb js adc cld mov xor xchg cli (bad) mov int3 mov adc or stc push lret sub repnz les es push mov test sti fistp fs xor xor out sarl pop jp inc and je mov in daa add mov inc (bad) adc sti push stos adc ljmp movsb dec fs mov or or aaa test ja pop adc cltd lods jae call adc scas inc mov adc mov and adc hlt sub sbb loop and push adc daa sub test adc sbb push pushf adc sahf int xor popf adc fildl adc fisubl sbb inc add xor stos and jbe sbb push jno cmp jmp out sti fs sbb cli rolb xchg xor add jmp aam mov push adc lods out adc sbb cwtl push dec in mov stos pop test leave xlat lea add jo mov mov in mov jg inc cmp xlat mov mov mov (bad) xor (bad) mov or cld pop jno lret mov mov pop cmp push push (bad) movlps mov dec adc test xchg iret (bad) ret vcvttps2dq xor stc mov jo cmp mov push dec jge mov xor mov adc jns xor add adc lahf popf pop mov adc into adc mov pushf jl popa cmc pop push and jnp arpl sub out add push or mov repnz loopne xchg push (bad) cmp sbb sbb insb mov and or das gs add or adc xchg (bad) or cmp cltd test adc dec jmp xor jge mov xchg mov adc or xor inc add add sub and xor pop inc pop rclb mov pop loop adc adc mov ja xchg adc test sub test sub ret ds cmp (bad) sbb (bad) hlt pop fwait (bad) adc mov pop jmp adc aad (bad) imul xor out cwtl and daa xor sub push jns sub incb cmpsl mov xor push and cmp ror add adcl dec sbb gs mov xor pop xchg out or xchg data16 (bad) mov inc sahf mov sbb repz sarl iret add add jg fmuls xor cwtl (bad) test (bad) aaa adc sbb jne adc add loopne loop or mov add dec xor sahf sbb sbb lock jno add push cltd roll jg jae or push inc adc xchg adc jo jge les data16 adc shr mov (bad) mov insb movsb xchg leave scas fist pop stc add mov xor push adc ss stos jns mov push xor test jmp mov xchg roll xor shrb loopne mov iret jle and adc jb pop (bad) repnz test inc sti pop adc xchg and adc mov loope lret xchg xchg pop cmp cmpsl add out adc jno and cmpsb data16 and adc jl sub je mov push arpl mov sub jns and ficom jle pop sub (bad) lock xchg daa fnstsw sub repnz adc loop out mull dec inc repz jnp in fwait jae out ljmp (bad) test dec imul or pop test addr16 enter out scas sahf lea pop repz sbb lea mov cmpsl push add xchg sbb adc scas xlat ds stc flds add xor sbb xchg enter dec pop (bad) sbb lcallw sub sbb xchg adc mov adc out mov imul xor mov and leave pop pop xor inc call mov add adc fwait xchg setp cmp add pop icebp shld push mov pusha daa sarb adc lahf inc scas or (bad) push ret in add arpl mov ds adc sbb jnp sbb mov pop dec mov ds mov sbb sub bound mov cmp popa jno jmp fstpl or mov mov xchg (bad) and push cs imul or inc xor or xchg mov inc cmpsb in stos mov dec subl push sub cmp dec imul (bad) lods lret mov adc in adc or mov adc sbb pop addl into in and xor lock popl movl arpl xchg jne or dec into lods xor cmp mov test leave mov loop adc out or adc dec mov (bad) mov lcall jmp mov ljmp adc mov lods dec mov imul outsb or es and adc mov and dec xchg mov sbb (bad) lahf outsl jb scas cmp cmp fwait sbb adc enter pop data16 cmc or mov rclb mov adc or xor mov mov rolb pop data16 scas inc adc push nop adcl push inc fsubl popf xor mov or push inc xrelease (bad) adc or in inc icebp ds scas stos cmp jnp inc mov or (bad) cld fcmovnbe mov xor jns adc sahf test adc xor mov adc enter add or pop ret add lea mov or adc (bad) jae push ret xor sbb lods shlb xchg adc jb xor xchg cli sub push in movsb psrlq imul add sahf fsts nop pushf cmp repz adc or fsubl add jb push xor dec xchg scas push mov xor adc cmp aaa insl nop les cmc mulb pop adc lahf jae (bad) adc push mov adc sbb sbb in jnp xor les cli jo lcall fdiv push and iret dec mov push enter lret mov in pop jg dec adc adc call mov aad imul aaa dec or or (bad) cmpsb test outsl jg push les scas cmp jno cmp jmp arpl mov adcl pop out xchg fldenv inc adc loop pop into pop lods pop and adc and (bad) aad push dec pop ret lds icebp sub scas jns jae pop jno lret outsl inc mov fidivl pop adc mov lock or cwtl cli mov gs inc in sbb or loopne in and in lret popf call inc inc pushl sub mov mov cmp (bad) call imul push mov xor adc icebp repnz or ret insb mov dec (bad) jb sbb test (bad) xor or pop dec cmp fisub loop adc test push hlt rcll loope iret push repnz sahf pop (bad) fmuls adc mov xor xor mov outsl rcrl das push scas addl push inc outsb and xchg rolb sub adc push (bad) call sbb adc mov sub and adc xor nop jae inc sbb in cmc adc lds ja mov out sub adc aam dec xor mov mov fcompp xor sbb jecxz jg jmp adc jno,pn test cmp dec insl adc xor mov sub pop (bad) lock adc scas (bad) ficomp in out aam pop push rep ret nop adc bound xchg mov sbb (bad) dec cmp faddl cs mov xchg pop outsl mov movsl adc (bad) fptan mov jbe cmc mov mov pop ret sahf inc dec pop idiv outsl call (bad) mov subl or std pushf dec sbb cli adc inc in mov xchg xor mov mov adc xor (bad) adc lcall neg mov cmpl jge outsl sbb mov jns mov adc aaa jbe int3 adc cwtl inc sbb xchg mov in repnz jp test dec sahf jno mov pop repz pop sub in adc cmp gs (bad) into adc test aas push and sub (bad) addr16 pop ljmp lock cs test jno jg add add add cmp in nop pop sbb and into stc adc or and pop xchg adc into cwtl or adc push in fstp idiv adc pop mov sub cmp cmpsb inc popf xor pop nop nop mov adc arpl repz mov push ret (bad) cmp cs jne lahf pop add in add xor dec mov xchg in and mov adc sub jbe adc push dec outsb xchg adc popa hlt and loop mov jl cli mov call xor hlt movsl into push dec inc or imul aaa xor mov add xchg adc push xchg int3 add jle (bad) jo stos dec mov lods add add adc pop repnz shrl fsqrt les sub je lea dec loopne call (bad) or pop jo jle nop mov dec sbb cmp xor sbb (bad) (bad) jbe push mov push adc sbb out sub cmc fstl adc lcall imul (bad) loop fnstsw push int3 or mov adc push sbb or cmpsb adc (bad) lock rcrb adc mov push cli sahf dec pop xchg push xor dec jle push pop test imul leave movl adc daa shrb xlat adc and fcoms (bad) mov mov pop xor push cmp stc movsb adc push inc push jae pop adc das mov cmp xor movsl xchg ret add pop inc adc jns xchg mov xor test fimull dec or nop cltd leave mov push or das imul stos insb xor daa pop lock push mov jns movsb push push outsb sub xchg test test clc inc add dec jns (bad) (bad) mov aaa adc enter loope adc pusha push adc repnz and imul pop enter add std ficom lds xor lods pop and sti adc add adc rcrb popa push addr16 jecxz fimul sub mov bound and inc mov mov lret int adc jb dec mov mov fidivl sub aam (bad) xor push or in aaa push jmp je andb pop jo out add es popa adc repz xchg cld mov adc and sub add add sti aas push rcl mov xor ds ror mov adc xor mov add fsubrs push push xor mov push add js das cmp push and cmp cmpsl mov test (bad) mov adc data16 xor ret cwtl and adc inc jmp loope mov add adc cmp addr16 fwait mov mov mov jbe add out int (bad) add xchg mov mov jne aas or push mov sub mov pushf or aam jo mov es jno add mov jecxz nop xor adc xor or (bad) adc repz lods adc dec cmpb loopne jae (bad) jecxz ds pop fisubrl pop mov adc sub pop jne pop xor sbb rclb push loop add xlat pop test and push pop lods mov test add mov or ret cltd imul jno insb pop fidiv pop xchg cli lea sti dec jo xor sub cmp addr16 rcll inc fs rcll adc mov xchg mov lret pop sub xchg adc pop mov or or dec xor ds cs cmp adc mov mov lods dec push sar sbb adc cmp dec pop mov sub (bad) xchg out mov jecxz or add xchg push mov adc lcall xor mov call mov stos iret adc pop sub inc aam adc ret in inc dec fist lahf push or push jnp jno pop inc ret faddl dec pushf mov cmpsb dec mov jl xor (bad) mov (bad) or (bad) inc std cmp out adc shrl lods jg out rcrb hlt jmp mov lret add mov repnz pop or mov jmp fmul lock jecxz iret and adc hlt pop or dec jne jnp std adc ja or popf sbb mov or pop insl in mov mov adc push inc adc and stos mov test (bad) pop in sub adc mov mov lcall sub xor adc arpl add std or fnop repnz popf pushf test in jle imul sub jne jle sarb sub mov pop rcrb add pop scas mov jb adc insb jns sarb pushf out adc xor pop or push fwait cmp xor and incb (bad) lret and popf mov lds pop fwait les xchg cmp int3 daa sub xchg fcoms paddsw push xlat mov mov cmp jnp (bad) mov (bad) popl adc lret dec mov add shlb lods dec or into stos out cmp xchg (bad) das jno iret rclb sbb jnp add popf mov xchg mov daa add mov xchg push lea adc sbb inc adc push outsb and repnz jns jbe jne rcrb xor adc movsl pop dec mov popa je adc push adc jno mov dec rcrl lahf or je stos mov repnz fistp and lcall xor mov xchg and push sbb fadd mov push (bad) mov cmp mov gs (bad) adc ja jge fnstsw inc mov adc or mov notb jne mov scas xor (bad) aas pop mov push (bad) dec inc fldt out mov jns pop xor hlt sahf sub add iret add mov sbb fdivr cmpsl scas rorl jl mov sbb mov out mov call adc ja data16 lahf adc or mov popf adc paddb jno sbb adc sbb and pusha adc test pop pop popf je adc ds and push xchg cmp jmp adc push mov rcrb sub adc fisttpl aam (bad) xchg dec mov xor mov neg pusha mov dec mov call popf inc pop lahf or arpl mov aam test mov xor aas sbb sub cmc xchg divb lds ret lock aam xor outsb add mov add out pop add cmp xchg sbb outsl inc fmuls mov scas adc xchg das (bad) gs mov jle outsb push rcrb mov mov scas inc jo scas or inc mov shl test (bad) into or aaa push lret pop adc test xor pusha pop and add adc inc int mov ljmp in adc imul pop mov (bad) call adc mov lret xchg jbe push lcall imul jl outsb pop mov jmp int add jge xor sbb and sahf adc cmpsl inc pop jo xor jge mov in mov cmp sub mov fs dec iret sbb jno sbb out inc mov adc ss insb jae orb push je pop clc rcrb fsubrp xor iret cmpsb mov jl mov dec dec inc push int cmp aas test js shrb mov test clc jg (bad) iret xor xor dec rclb cmpsb je ss (bad) into dec push mov sub gs add popf repz adc decl loop lcall loope dec sbb jmp mov hlt loop add mov push adc dec add mov mov sub rcrb icebp jno or adc leave mov adc jnp and adc stc daa jne inc mov cmp scas adc inc add fistp cmp je push jmp (bad) add pop jg adc incb lock adc mov sbb sub inc adc dec cli adc stc xchg xor and or fbld and xchg xor bound add push or (bad) mov in xchg pop test add jnp xor aam loop xor js movsl xchg mov lret scas lret nop leave (bad) mov xlat (bad) mov (bad) or int3 jno jp iret ret and adc add std sub mov inc add inc add push cli inc aaa push sbb jbe pop nop pusha (bad) js sbb fs aam stos icebp mov dec or mov imulb mov movsl testl cmp imul and inc inc hlt fadd cli or ficoml pop dec adc divl add pop inc add std in jne mov aam push lcall icebp xor (bad) es movsl mov adc aaa jl xor dec jmp stos lods sti adc pop jecxz xor push push cli pop or test das sbb call rclb bound or test jg out mov xchg xchg dec sub aad roll adc ds arpl int3 sbb ror mov sarb popa loope mov (bad) push inc adc sub mov adc test repz mov stos xor dec lods push mov aaa loopne xchg sbb addb or adc push jp push sbb jbe or in cltd mov dec xor adc fxch push inc enter push (bad) adc or mov and cld in pop (bad) lcall repnz mov mov and adc mov aam fstpl xchg rorl sub push test push inc pushf jbe push mov adc mov popf adc stos inc imul adc fstl repnz mov nop cmp or ss pusha jns in imul adc daa inc les mov jns jp mov insb in call dec sbb add lock jmp xor mov push sbb cli (bad) cmc lahf pop inc mov add pop add push jl add and mov mov loope adc push or lock and aam mov jg out add push xchg mov adc std add scas clc jnp adc ror fcomps (bad) adc (bad) dec mov jge adc ds sbb adc imul (bad) insb insl sbb shll or mov call test cs or ja sbb mov add ret stos xor pop sahf xor pop adc xchg jne les and ret scas pop test pushf cld inc adc faddl (bad) lret push adc jo rolb push add sub push lret dec nop fnsave jge mov aas mov pop jae pop adc mov imul fs xchg adc adc sub stc repnz decl add pop pop cs mov jb lcall or adc inc push mov aas icebp pop unpckhps dec push std dec adc fcomps xchg or adc inc xor sbb pop sbb adc and (bad) push pop mov shl xchg xchg jle sbb jo inc add pop leave adc les fcom add mov adc popf out pop xor adc aaa jmp into js cmc and popf mov fsubrp inc outsb xor shll lea hlt adcl xor xor cli fcoms mov mov adc sbb xor jmp dec dec adc stc ret fdivs (bad) adc xchg cmp xor and js adc adc out adc pop outsl in loop adc in (bad) fstl push jae (bad) testl xchg rcl stos mov adc adc adc aad mov push adc dec or jae ret dec push xchg sub adc cmp pop popa xchg or mov fldpi xlat popf ja xchg or push fstl xorb (bad) cmc fsub clc mov mov aas rorb adc mov lcall ja sbb jne mov and and jmp (bad) aad xor insb lret imul sub aad clc adc push or cmp mov ret jno in aas adc xchg mov add adc mov fimull int out lcall mov jno cmp divb fdivl js hlt out daa adc addr16 xchg mov adc (bad) sub pop xchg repnz int int3 add add pop loopne cmp pop (bad) dec test je outsl lea xchg cmpsb sbb mov mov dec sti mov adc jecxz ja jb sti jne lsl dec xchg dec js jns adc stos push dec cmpsl loopne (bad) popa jbe or fst xor xchg adc movsb lret xchg aad adc sti insl mov imul popaw add mov rorb les dec dec cmp mov cmp lahf pushl out jno pop adc lcall repz xchg jo pop (bad) or jae jb into adc sub hlt bound mov mov insb cltd lods adc fldenv int3 cmc adc (bad) idiv cmp mov int3 dec jecxz cmpsl popf outsb sub mov js mov jns fadds leave sbb aam scas lret fsts or mov adc xchg mov dec adc or adc inc xchg stos sahf add jnp xor cmp adc mov jl loope daa sub or sbb dec push cmp pop je lahf cltd aas test cmpl (bad) repz sub dec pop mov adc push mov cwtl dec inc adc inc mov jnp rorl or scas or loop adc (bad) mov outsl pop sbb mov cld rclb cmp cmp mov or inc sub sahf push push push ret mulb jle xchg pop imul dec jnp inc adc sub cltd and cmpsl mov cwtl hlt fidiv sbb and unpcklps jo xor and pop fsubrs add adc sub adc (bad) pop rclb adc and or pop fcoms or test inc leave adcl cld es jge aad adc dec jnp adc mov aas jno out sbb in jg xor mov outsb je push or pop out pusha mov (bad) fmulp (bad) push in adc loop adc mov mov dec inc sub lcall sub js rcll es lods dec push jnp add adc push dec adc and or dec mov das adc cmp lods pop and xchg in ficoml jb mov imul inc pop inc idivb sbb verr mov add adc stos xor xor icebp cmp jg dec aam mov sbb stos pop (bad) lock push andl (bad) cmp xchg adc lret add icebp (bad) ret cmc push add aam add push data16 adc ljmp lret lods pop adc jbe and (bad) fmull mov int or (bad) adc mov pop int3 cli mov xchg test push inc adc loop nop fbld push or dec popa jg out ror or cmp sub jg adc add cwtl test stos cmp (bad) mov (bad) jmp fwait data16 or lea jns ljmp roll lcall xchg or dec jae mov int3 mov mov lcall xor adc dec movsl rcll and sahf cltd or cld sbb pop mov jp adc mov mov xchg push push xor cmpsb adc int3 cmp stc sub mov pop movlps int3 stos movsl xchg jmp lahf inc inc push into cmp push mov enter movsl sbb adc mov inc (bad) pop mov mov ficom adc test out adc pop xchg inc imul adc das xor repz int inc loope bswap jecxz push sbb flds adc jge pop (bad) jmp aas mov dec jle pop pop repz imul jne inc test movsb xor jae xchg mov adc push xchg push or call xchg pop adc out shrl fdivs add dec rclb imulb mov cld (bad) push dec sub lods (bad) add mov nop out mov aam xor lds pop aas into (bad) loopne adc mov push adc adc sbb leave (bad) fsub sarb (bad) sahf cwtl mov enter sub pushf xor adc clc inc gs int add enter jns cmpsb xchg lcall push xacquire test adc cmp mov lods adc xor mov stc daa xchg xchg cmp pop pop push ret in imul or xchg mov jae xchg insb lock xlat mov incl int3 bound cmp add pop mov dec sbb adc divb lahf add fmul adc (bad) call adc mov pop adc mov xchg call sti sub adc and adc xchg cmp or test jge pushl and push (bad) shlb or adc popa sbb test daa call pop nop cmp dec mov rolb or outsb xor xchg jp popf mov fdivrl adc xor iret cli adc ret pop inc fdivl test cld call jle mov sub jp mov push add cltd adc inc (bad) mov aad mov xchg scas fcomps int js adc jno es sub pop jp sub pop popf inc call sbb pop adc cli ljmp sub mov mov adc jnp sbb icebp adc and cmpsb lret push xor out or into sub sub nop lds in and jbe sbb adc adc pop fidivl add das fisttpll ja repz mov iret jp pop or dec sbb loopne dec mov mov (bad) jb mov cld dec (bad) or adc leave xchg rep xchg and or sbb push test adc je push lods jecxz cmp push pushf rcrb cmp test movsb or push xchg sahf mov inc adc sarl cmp js bound push push mov (bad) adc inc mov adc xor sti cwtl dec out push adc lods mov sbb jl scas xor mov inc jge shrb mov push cmp adc (bad) xor aaa add (bad) dec loop (bad) mov mov cs pop inc das insl scas xor out movsb inc and adc add jmp adc repz movsb cmp cmc inc pop add and clc lcall xor mov xor pop xor sbb jmp xlat pushf sub sub push mov xor jno mov add push adc scas cli jno int3 sbb nop lds (bad) std pop mov adc push cmp mov push and addr16 mov (bad) negl xchg push xor or mov inc aam xor fprem cltd xchg adc leave mov adc test daa cmpl adc (bad) jns adc xchg add push cmp shrb adc pop lods test mov push sbb fldenv gs clc (bad) adc lahf shrb xchg sub out cmc push add mov dec cmp cmp inc mov jo cmp push arpl jbe mov push adc push ret je mov fistp or sahf (bad) in outsb push (bad) mov add cmp adc lcall pop out mov push fdivs adc ljmp mov into add pop or insb adc push mov xchg (bad) dec adc mov xchg data16 out adc inc out icebp loop (bad) mov repz jmp adc repz mov stos inc cmpsb popa xchg jns popf repz sbb test (bad) scas movsl jnp dec cltd adc out test (bad) adc xchg sub mov mov adc out cmpsb adc lods add (bad) bound sub test fisubr inc push xor jb stos jge scas pop jnp and cmp or xchg addr16 push rcrl mov inc out fs push je out mov mov es xor inc adc rorb xor (bad) jecxz mov mov je pop adc cld aam adc jp cmpsl pop outsl gs push mov push fistpl negl jmp mov add pop call jle sbbb fistl sahf inc adc out jno,pn adc pusha inc stos pop (bad) jae jge adc out arpl pushf jp (bad) inc push pop add in adc in inc inc adc outsb les add aad xchg and jmp push adc aas and mov bound insl out shlb dec sbb repnz adc cmp xchg aas adc pop dec inc push push mov lods adc repnz or cmpsl push jl mov adc mov jo lahf adc aas sub xchg mov mov pop adc sbb movsl call dec pop inc add pop std sub fwait dec cmp mov xor mov mov dec mov lea jmp cmp leave adc stc xor mov repz inc lcall enter pop dec aas adc jne jg in sub adc jl or dec push xchg cmpsl mov push or je and inc dec xchg sub adc daa fdivp cmpsl push and jp pop push leave lahf adc loopne popa jge push pop int3 test (bad) dec jne pop inc adc xor fs sub add imul cs push (bad) testb cmp or adc pop fsubl ds ss adc and (bad) sub aam mov adc push aaa jle lock ret iret jns iret nop adc xlat aaa outsb rolb pop std fsts frstor push xchg push icebp cwtl jb hlt push adc adc mov shr push inc (bad) dec stos adc mov xchg mov mov pop mov xor lods fbstp xchg xchg pop pop push loop dec adc outsl outsb xor cmp out jle mov or std pop xchg (bad) mov into add push pop aam inc adc fs xor test mov jp int rclb dec push sarl xor cmp in es sbb add rcrb orl popa inc adc outsl inc int3 jp call adc and test mov out daa inc jg adc (bad) aaa ljmp jp adc je test (bad) nop mov sahf stos xchg sbb sbb adc push popa xchg aam (bad) and jae adc decl das adc dec xor fucomp cmp lea push push cmp mov adc pop pushf clc cld js or and xor (bad) aad (bad) mov cltd lods in fdivl dec add mov icebp leave add jns jno push dec mov dec call rorl nop adc cmc jns adc decl adc and mov inc jl adc (bad) adc cmp dec jae fldt clc sub fsubrp sbb outsb ljmp add mov imul or xor (bad) dec mov ja sarb add mov aaa test add cmp repz mov outsb lahf sbb andps jnp lcall xchg fbld mov std jae dec cmp mov test push push adc pop xor test jae loop sbb push sbb scas lods sub hlt xor jecxz mov mov cmovl mov popf test adc xor sbb outsl mov push xchg sub adc pusha xchg jmp xor lods mov cmpsb int3 sbb cmp sbb loopne (bad) stc mov adc xor test xchg aad or mov jge daa inc leave sbb adc aad xor mov inc bound js or in push cmp (bad) jae xor mov xchg mov pop push xor xchg nop jne adc ficoml pop enter sti imul sub int3 mov daa cmp or test adc out outsl sti arpl adc testl (bad) xchg push int pop rcr pop into lret adc push adc mov adc inc add cmpb int3 jecxz mov pop (bad) bnd xchg dec add or inc dec dec lods sbb je pop push std add xor nop mov mov in xor into mov xchg lods pop xor in (bad) or neg mov mov rcrb shrb je sub cmp test cmpsl js mov inc in mov jle cmp outsb nop xchg lds ljmp pop scas sub cmp (bad) loope fnstsw push nop (bad) (bad) mov mov dec icebp adc or or push mov xchg fnstenv lods adc adc roll mov aam adc adc sbb cmc adc pushf gs ja push repz push add adc std jmp repz movsl movsb cmp rcll mov ficomp adc test out adc xchg push ss pop ficoml mov js jg xor jnp std repnz cli dec adc fimull cmc jns movsb xor or sub jb btr inc stos xchg rorb mov xor xor insl leave sarl rolb fnsave sbb push sbb jb pop iret jle jmp std mov push pop add jne mov mov cmp push ficomp lods dec push pmuludq mov mov mov sbbl or dec mov jno inc ret nop in sbb adc (bad) mov inc adc sub outsb push in push adc stos mov pop adc inc push in cmp or loope xchg sahf push stos xor iret inc mov cli arpl or add adc adc sbb push lcall mov mov sbb adc imul jae sti adc dec or mov or dec adc pop xchg mov jle cmp sbb outsb jmp xchg pop (bad) push into dec or jnp mov lahf adc or adc mov shll (bad) push insl or jns movups cltd sbb or pop imul mov jae movsl add dec fdiv jmp cmp or scas jge lahf xor (bad) sbb dec adc cmc mov pop or mov lods pop mov adc jl rolb mov push xor mov cld adc loop and jg adc mov inc adc data16 jp fiaddl adc lret mov test pusha out push xchg push mov jecxz xchg push clc sti mov xor dec dec mov ja sbb jp cli popf stos std mov insb pop mov inc or sub jne imul ljmp sbb repz lock fwait repz repnz enter int xchg test js adc adc mov xchg aas adc or leave inc mov dec sahf dec aaa arpl add mov jo push push lfs lea adc stc rcrb out sbb rol xor pop push rep test push mov add insb cmc ds rcrl das mov arpl xchg add add mov push jb mov fcompl mov arpl and mov mov xlat dec sub inc scas or xor rep js or imul lcall adc xor inc or inc (bad) pop sbb (bad) shl hlt mov add adc cmp cmp xchg or popa scas adc add adc mov xchg xchg repnz push (bad) mov or adc cmp in shrb xchg ret (bad) xor fnsave loopne cmp hlt les push imul cmp fistpl mov cld leave xor xorl aam in dec rolb (bad) mov out and test pop mov xor lahf adc pop bound mov adc fistp push xchg cmp scas mov cltd mov jns add jne sahf imul (bad) xor cmpl jg out mov (bad) cmp insb sub repz xor gs dec or movd fidivrl add outsb sbb ds sub popa notl add dec pop inc or jb adc jnp fnstenv pop inc lods adc mov out fistl iret divb and pop pusha dec dec adc mov notl fdivl imul lods es aaa in jg addr16 and push add xchg repz inc mov ja and mov (bad) imul leave scas xor cmc adc lock push push lcall mov inc insl cmp inc or es mov cld fwait (bad) je out adc mov and xchg push cmpsl lret add nop (bad) repz pop push addr16 or pop push mov aam inc or push and xchg lea test adc ss imul adc (bad) icebp in adc fdiv add adc xor or out cmp adc fsubr or inc fwait cli adc mov sub dec or fs xchg add stos fsubs dec les sbb aam or lss int cltd pushf pop stc (bad) out cmp (bad) cmpsl stos (bad) sub xor or sbb jne lahf ret mov insb lock cmp fist int3 xor xor adc ja dec xchg jno xor jl repz in inc sub mov mov lret push repnz inc mov test ret addr16 mov cmp mov cltd adc sbb (bad) adc jbe xor insl mov into mov call inc pop and cmp push push jg or adc iret lcall outsb mov lock or es cwtl sahf outsl mov jle out cmp (bad) sub lret adc aam aad es cmp mov sbb inc mov adc mov push popf int movsb (bad) movsl js fisttp stos cmp rclb xchg jmp roll mov sbb (bad) fnop adc add fldl xchg mov add fistl sahf xchg les cmp adc aas stos xchg mov out cmp mov xor loope xor or mov sub ss std ret adc fdivrl adc sub popl into xor mov pop and pop mov sbb les cvtpi2ps fwait xchg adc and jns adc sarl and pop mov adc iret mov testb movsb lret icebp inc xor movsb pop adc xchg insb xor mov ljmp in xor pop notb loope aad loop mov push adc push mov mov or jo pusha loopne fsubrs cmpsl fsubr push mov adc inc jge jle cmp lret das ret leave push or jo and xchg xor xchg pop lret jge (bad) daa sbb mov cli mov leave lods or jg mov xchg adc rorl adc jge dec xchg pop (bad) fs leave and pop ds jle fsts xor or hlt and push mov mov stc jle adc jb jmp adcl sub insl dec jne cmp and push pop jle xchg repz pop push mov pop xor jg push inc rclb fimul loopne push cli adc test lds call dec push enter adc adc popf sahf adc and jb cld adc mov call xlat lcall lods sub ret repnz sub adc and add jle setl xor (bad) sub popf pop adc aam (bad) int pop rcrb jle enter jnp insb mov lea add mov fistpll mov and bswap push adc dec pop mov out rcl mov pop movb std mov pop sbbl or mov jo rcrb mov jno xor add (bad) xchg clc mov push data16 and sub test jbe mov pop pop lret call shr fwait clc and pop pop cmp lret loopne inc or sbb fildll dec lahf adc out movsl clc jb inc jne add scas ja mov adc push add adc aam pop cmp out xor adc xchg cmp cmp inc or in lea sub (bad) pop lahf or lahf punpckhbw jg jae xor and mov daa xchg iret dec adc out cs movsl adc push shlb bnd adc adc mov dec lahf and out mov loopne jmp rorb pop add push inc pop pop mov into les nop cmp adc (bad) dec mov fstpt lods mov arpl popf (bad) lret shl bound mov fsub xor push outsl add mov add sbb push scas test jb mov and adc and cwtl sub push imul icebp push clc sbb lea sbb or pop das jbe inc into repz iret jns movsb or xchg cmp repz js pop cmp ds std sti fucomp rclb mov shl mov cltd or (bad) fcoms repz xor aam pop xor (bad) jns xor js adc jae lcall push add adc jns xor gs push sahf fistl dec notl push rcrb cmp pop pop add (bad) xchg mov push and divb sarb push jbe mov xchg (bad) je adc pop enter imul xor shrb adc xchg aam imul sbb add repz leave sbb push cltd jne hlt mov (bad) adc test adc int3 adc mov push loop cmpsl sbb in rcrb sbb cmp out inc cld repz xchg inc jno push jmp add mov rorl dec adc pop (bad) or repnz sbb sti mov dec lsl adc pop (bad) iret cmp add mov jmp (bad) lahf and ficompl adc or sbb mov pushf in push adc aaa sub repz dec dec stos cmp jecxz in mov mov pop pop mov adc xchg addl mov xchg mov insl xchg popa bound sub sbb inc and adc (bad) data16 cmc out sti out cmpsb adc adc ljmp adc fnop test xor sahf psubq ret lcall mov mov scas adc pop cltd jnp mov fcmovnbe pop dec or xor and push cli hlt adc sbb and lea stos cld aaa jnp xchg lea xor inc cmpsb adc adc push add rorl repnz sub popa es aam pop adc enter in jne call xchg mov or mov inc and adc sbb hlt mov adc adc rcl jecxz movsl rcr psubsw add add aaa mov mov adc dec ja stc adc pop popf pop adc mov inc (bad) stos test out push fldt mov adc pop pop mov add inc repnz ja xchg and sbb pop mov xchg or sbb repnz or add das fistpl add lock mov dec mov stc or jno inc sbbl stos and adc adc mov in gs inc in cmp adc sub (bad) mov jbe pop or aas cltd enter psubsb cmpsb ljmp imul leave out xchg rcr adc ds mov std mov movsl sub ljmp arpl fcmovu aaa cmpsl and cmp add or dec jno jle jne dec mov add sub jbe mov test pop mov adc nop mov mov fstps xchg mov jmp adc mov lea movsl adc icebp cmpsl mov popa push leave dec add js mov roll push jae (bad) mov pop fbstp xor or iret loop mov xchg imul dec sbb movhps xchg js xor cltd hlt adc pop ljmp mov popa push pop cmp mov in pop adc dec cmc fwait xchg mov xor popf jno mov into andb fwait xor mov mov add nop cwtl shlb mov push add jmp stos dec adc sub adc enter push bound sahf mov xor stos sti out pusha add or and movsb lret insb icebp fstps jae sub pop lods add (bad) lret scas adc pusha dec out (bad) (bad) sahf adc mov hlt jmp popf fisttpl mov and stos adc ds in adc mov mov sbb sar xchg adc mov aam adc pop add scas sub sbb adc mov or xor in pop pop in xor jne (bad) ljmp cmpsb inc hlt pop or mov dec icebp adc and pop nopl mov popf mov xor jge loopne outsb (bad) cwtl cli adc cmp mov scas push dec xlat mov lret adc cmp pop jbe orl jb mov lret out popa mov je add dec (bad) or jno mov adc outsl mov ds adc gs jo push add rep imul mov je lods push xor cmc aad add outsb inc inc rorl or push cmpl xchg inc xchg jb mov cmpsl xlat xor and (bad) sub push rorb jnp ds dec test sbb adc adc les rcrb add inc dec repz sbb push in mov pushf sub pop push jbe pop add pop adc jle hlt (bad) into adc and jnp jmp or les adc inc dec movsb sarb fcomps lret ds push insl (bad) push xchg sbb pop lcall cmpsb in push jb inc xor push jns (bad) sub in stos adc and rcll and std or sbb or push jg sub cmp cld dec movsb (bad) ljmp mov pop add xor adc sbb adc mov leave mov xchg popf or adc daa jo adc test mov push repz jae outsb (bad) (bad) aas out les jle add mov repz or cmpsb cmp adc inc inc sub cmp scas mov sbb es mov out xor dec add pop push imul divl xor jl cmp mov movsb insl sbb in rorl (bad) mov dec inc adc das xor rep cmpsl cmp mov jl or sbb adcl xchg add add mov outsl dec scas xor fdivl pop add push rclb jl push nop sbb int3 adc scas xchg scas jbe adc mov ljmp cmpsb (bad) jne popf push dec adc mov lods push sub (bad) mov push add adc sahf adc push in push adc ret cmc inc adc and dec int3 adc add lret loope mov dec cli or adc (bad) sbb test (bad) sbb sub dec insl xor cmp cwtl daa jns xor adc into fimul aam inc sbb push xor add sahf aad jbe pop jo xor movsl inc repnz pop repz mov clc adc test repz ljmp popf and gs stc dec xchg iret jge bound xchg cld pop (bad) mov cmp mov mov mov test xor adcl pushf (bad) outsb stos repz mov mov cltd cmp add dec cmp out add adc jae push add lea jno subl mov int flds push adc cmp lahf mov push push adc or scas pop adc pushf rcrb cmc mov aas adc push push sti xchg andl fldt jp adc iret in jbe cwtl mov xchg add cli xchg int or add icebp adc out outsl xor jae pop jno cmp or mov rol clc or adc push adc adc sahf inc xor cmp dec adc outsb cs pop subl pop lock cmpsl out nop fldl adc aas popa mov and (bad) mov test xor add popf push adc cmp mov cmp lret shrl lds adc sarl cmpsl hlt and jnp cmp int lahf xchg inc fcoms xchg outsl stc stos sbb inc btc or mov scas sahf sub es or les jmp out fist mov jb nop adc lret mov in mov shrl mov adc mov aam lret xchg les ja xchg lret adc sub iret cmp ret mov adc xor fstpt and sbb adc rorl push jge aam sub fidivl cwtl or imul dec (bad) push push fstpl mov sub pop xor push lret pop test mov cwtl cmpsl push and mov push xchg sbb aas push xchg add pop ljmp popf add repz xor cmp adc lods mov dec or jns mov out cmp or pop adc push mov lahf adc add cli adc inc sub lea mov subb and push test imul fucom insb out iret (bad) pop mov jmp add mov mov scas adc test jne loope lds shr dec adc lahf mov mov push es (bad) xor xchg add stc sub pop int xor push xor rep jecxz cmp dec add jne sbb aad jno jb lods and xchg sub decb cmpsb mov mov xchg jb xor bound stos and and adc cmp mov jecxz rcl mov addr16 (bad) adc into or mov sbb (bad) jge js push fimul test mov mov arpl ret repz push dec xchg rorb (bad) cmc push xor jno adc cmpsb inc negb jecxz and mov (bad) xor out mov xchg adc pop mov adc out xchg (bad) xor cmc stos jle arpl xchg push pusha push mov hlt mov stos cmp pushf insl cmpsb movsb pop data16 adc ret inc and push pop in adc cmp insb mov jl sbb jle mov or mov cs fs repnz push aam jecxz daa mov or adc xchg lock shll mov ja scas hlt pop test sbb pop adc in xchg cmp cmp cld mov lret and in cli xor push pop mov pop cmpsb int3 mov add fadds lock les ds add scas cmp adc push lret fs dec leave js adc xor mov imull cmc pop pop mov js loopne cltd call adc inc add divb rcrl lret mov sub repz idiv xchg jecxz adc std add cs push ds sbb popf or dec cmp repnz das mov inc adc rorl dec loope adc jbe enter and push sbb shrb adc ret pop dec inc mov xchg add or or fiadd xchg out adc daa and add popa adc mov sub mov pushf mov lahf popf push sbb insb sahf dec (bad) adc jecxz int orl sub fldt lock mov in jae xor add jge mov hlt xor xchg jecxz fwait adc pop xor jne and into and or xchg mov mov pop and mov popf mov ljmp shlb adc jmp rcrl movsl adc mov out fldt adc mov sbb pop mov (bad) repz dec xor nop or sub ficoml mov repz bound jbe mov push lcall cmp inc xchg jnp,pn mov and inc push mov outsb sbb dec xor jg rorb repz pop movsl cld lds add jae pusha adc fidivr lods mov push xorl pop or cmpsl adc roll sarb loop mov cmp inc adc adc fnstsw (bad) hlt cs call dec adc in pop adc sahf sbb push lds test arpl out je xchg xor lcall mov (bad) fcmovbe push repnz test xchg xor jne inc add add popf jne mov mov push lds add into dec fldcw sub aas ss xchg xor jmp repz pop push sti idiv mov faddl jmp test stos adc fadds mov jg orb jbe (bad) xor jmp repz adc ret jle sbb push xor shlb adc xchg rcrl sbb pop in xor mov (bad) cwtl sbb aam sub pop cs mov mov (bad) jno xchg sbb lods cmp push jle movsl pop iret sbb out into (bad) ja mov ficom xchg add lahf adcl pop adc and or dec mov xchg jnp or repnz xchg fwait cmp out adc mov outsb xor arpl (bad) or sbb std and push mov mov adc repnz xor in mov fs pop and cmp (bad) flds sti iret cmp (bad) in loopne or pop pushf repz xchg cmp in punpckhbw test andb pushf roll int adc insb cmpl aas jne cmp dec imul lea adc xchg notb lcall xchg inc or dec adc lret icebp inc arpl and movups mov xor aad push addr16 (bad) movsl mov mov clc push inc adc in xchg sub fwait sub imul fcompl add push mov sbb xchg and rclb or les in je dec int bound sahf outsb nop lret cld mov loope inc jns sbbl mov adc fcomip fcmovne pop mov ljmp loopne rclb sub or imul adc negl loopne xor inc sub inc lds sub bound or mov inc xor pop divb cmc (bad) xchg or or cli in sbb mov pop stos mov sahf adc mov stc int3 cmp mov jl inc pop sub popf add mov call adc ret ja cwtl or adc inc sub jne stos dec inc (bad) jnp popf cmp test loopne cmc adc in inc adc mov xchg pop movsl and ret add push pop mov jmp lret jle cmp adc adc popa popf mov xor inc aaa test call (bad) adc out lock out stos or adc imul test dec mov sub sbbl stc push pop daa dec mov add fwait popf mov mov (bad) negb stos adc rcrb hlt inc mov (bad) sarb xchg test enter dec outsl adc lcall mov adc and mov add jne shr nop cmp and adc mov or xor push loopne sub mov into repz sbb out loop pop xor aad cmp sub add jp mov add pop int3 ret adc jge,pt imul push add movsb ret push xchg dec mov in push aam in adc scas mov popa adc cmp sub rcr nop xchg stos emms cli movsb jp adc dec fs sbb dec dec add push rcr sub mov jl xchg das movsb xchg clc data16 imul jno mov je add repnz add mov adc in xchg pop test or xor fidivl (bad) aas jg adc adc (bad) stc clc in enter or xlat test and icebp rclb addr16 fs fsubs inc mov mov xchg cmp adc dec xlat ds and std (bad) jb divl sbb jmp test fsts rolb jmp mov pop xor xchg mov or adc (bad) aad push cmpsb in push adc xchg popf pop lods and cmp mov adc imul push enter ret test sbb dec repz ja mov hlt adc lds (bad) mov lods (bad) fisubl adc (bad) div pop lret callw xor lret or inc adc lds xchg adc mov adc mov adc mov pop cmpsb adc mov cmc and and jb push cwtl jle sbb mov mov jecxz adc loop adcl fmulp xor adc mov adc adc or jnp stc cmpsb xor xor or (bad) aad adc jae mov hlt enter push (bad) adc fdiv pusha adc pop bound dec mov adc xchg daa outsl cs (bad) adc mov (bad) or js out pop push sbb mov je mov ds cmpsl stos adc pusha imul fdivr in and fwait adc mov mov pop or push cmp bound (bad) pusha jb and jle adc or pop and inc mov dec mov in scas lds and jmp inc adc mov stos cwtl mov pushf pop loope push sub adc notl movsl loop inc dec clc stc in lret hlt mov je pop xchg incl insl outsb inc mov fimull rorb call xchg dec push jns,pn add jge jno das adc add jnp call sti ds xor xchg adc sbb adc xor cli xchg out adc cmp push mov adc push cmp sub or fstpl fldcw repz sbb or sub mov adc and repz adc hlt pop adc orl test adc jne xchg pop aam lods repz jecxz in add adc lahf sub jnp cmp pushl pusha and stc ljmp pop xchg lcall (bad) cli lret into dec jl in xchg test ss mov cld xchg ljmp xchg ret push in cli sub sub lods push jns repz les sub mov lahf iret adc xchg jl shrl or adc xchg jnp adc flds iret jle adc into and mov add sar mov adc rcrb adc orl xorb loop mov test mov xor std lods popa pusha adc stc jecxz adc mov cmp mov adc xchg and adc jo dec repz xchg xchg add sub xor stos aad jge dec xchg into mov imul jnp adc or repz cmp push push xchg test lds scas pusha adc imul scas pop orl pop out push cli or sbb xor xor stos xchg repz into inc daa sbb lret int3 das inc pause sub push mov (bad) flds pop mov (bad) (bad) mov les in push add mov jne loop dec neg add data16 cmpsl mov push add int3 dec enter test jmp pop push mov cmp mov adc dec push sbb pop pushf add mov or scas mov adc adc xor and mov movsb sbb cmp imul and sbb adc jmp insb sbb cltd push jmp addr16 lea add jl faddl inc mov and (bad) repz mull push out adc xchg inc adc aad cmpsb mov jns repz lds insb pop adc cmp jmp pop sbb icebp (bad) pusha mov dec pop inc nop (bad) sbb xor popf xor add fstl pop loop mov ljmp ret adc mov je js rorl (bad) mov mov mov jle mov or push outsb stos adc stc or jb adc mov inc in mov test sub lret jo inc dec xchg adc push or cmp dec jne add aaa xor arpl scas sahf je inc daa popf fwait add xor aas adc roll std adc push xor repz inc and inc jl jmp adc xor add fwait ljmp je sbb sub aam repz ret and push cmpsl ret mov xor mov push sub and dec mov aas dec sbb cmp mov popf popa out jle mov sub jo repnz inc mov jge out negl in adc inc adc dec arpl clc cmp mov sahf mov lcall mov inc imul jle aas bswap xor dec cli repnz pop loopne xor dec cmp cmpb cmp cld pop adc in or jl pop cld adc leave mov ret push imul inc cmpsb aas in xor lock add jmp cmc or imul push xchg add pop jmp das jle adc push addr16 adc hlt xor adc adc lds add rorl adc ds mov iret inc sub adc arpl cli xor jo mov adc inc ja mov push or fdiv mov sub repz xor outsl loope aad inc xor lds push dec or sbb mov dec mov xchg lea scas xlat xchg adc nop out fcomps (bad) movsl mov adc dec mov repz cmp ljmp add (bad) push prefetchwt1 add cmp mov js mov bound xor push mov inc test mov fs mov push sarl lcall arpl mov or mov (bad) ja xor sarb xor imul ss pop inc repz je mov (bad) call sub repz repnz (bad) or push stc insb mov outsb pop ret sbb jmp dec scas push mov shlb dec stos adc and and cmpsl pushf adc insb jmp enter lahf adc and xchg add movsb sub inc shll cmp decl mov imul ss ljmp ja push adc test mov cltd int3 mov (bad) (bad) mov pop jle mov xchg fcmovne (bad) repz inc hlt aas fwait or fdivrl xchg pop jns and sti xchg adc sbb insl nop push (bad) cli adc data16 xchg push sub add iret aaa in adc sbb xor mov inc adc jo sbb push (bad) xor inc aas or hlt rcr fwait or pop mov mov xor xchg or adc adc insb ret adc mov and jo adc sub fmuls adc push mov rcl sbb push clc ret jg push cmovnp push lcall iret (bad) add adc sbb add test mov adc mov xchg lcall pop bound rolb icebp pop fst arpl mov xor jnp pop movsb rcrl sbb sarb jg repz rclb push lcall sbb sbb in adc aam add jae lea repz leave loop in loope xchg loopne into mov xor adc jmp test es inc pop flds (bad) rcpps in adc or pop mov jns sbb jbe cli sbb sahf xor scas in stos inc addl leave mov push xor pop scas push jns into cs mov loop sbb push mov shrl stos inc pop pushf cmpsl xor adc cmp mov and lret insb aas adc iret rolb adc scas push dec stos (bad) mov sub aam sub ret icebp ja jno adc movsl push lret jg ljmp into jl stos shl mov dec sahf cmpsb (bad) (bad) adc jp inc inc scas or addl pop popf ud1 or xchg adc mov rclb pop insb cmpsb or or add repnz adc cs xor std mov and inc mov cltd adc xor inc sbb (bad) cmp xor lds leave repz push push mov or mov pushf or ljmp aam push leave jge in outsb xlat lret inc jle insb mov fcoms jno add es cmp add lcall mov mov sbb inc jecxz xchg (bad) es or in mov and pushf mov jo adc rcrb xor les test add inc mov push jno inc xchg scas adc lret cltd mov dec stos loop add push mov pop movsl xor les in sbb lahf inc adc xchg inc adcb xchg adc fs outsb mov and rcll adc pusha test add xchg cmp jecxz lahf es ret xchg jbe xor xor adc and cmp adc push push (bad) mov jge repnz push adc cmp xchg ds out bound pop cmp sbb repz xor add cmpsb lahf dec test fwait popf int stc xchg rcrb ds cwtl cltd pop ss add movsb sub repz fucomp dec push pusha rorl inc adc cmpsl repnz int3 adc push mov inc pop sbb adc arpl push (bad) ja adc es adc dec bound mov jne add icebp mov ja and jge mov push (bad) popf dec cs adc leave mov adc arpl test adc cltd jp dec rep sub fs ret or notl lods into lea repz imul pop adc jp push fidiv cmp adc subl aam rol mov add (bad) mov add jle cmp inc mov fsub cmp adc test or inc and lcall out aad push fdivl ss adc xor cwtl imul shl sbb dec mov outsb iret imul in pop jmp dec push sbb or adc je xchg adc clc jle and fsubl adc sub int sbb repz and sti sbb or xchg icebp adc pusha movsl div xor mov or sbb outsl daa mov push cmpsb movsb adc jp add test sub inc dec cwtl adc pop sub jo inc aam dec test mov inc mov adc cli loop,pt daa mov adc pusha add aam sbb out and xlat mov xor gs sbb push pop xchg jg enter sbb lahf and or ret mov mov data16 sbb fiaddl imul adc shr decl nop mov mov inc inc cwtl cmp loope sub (bad) pop mov adc cmc pusha aad xorb shr out add sbb jb fist sti xlat adc xchg sbb pop (bad) jnp mov sub out and dec arpl (bad) or outsb ret loopne push and sar pusha adc sub enter les push cmpsb inc pop add adc jmp adc mov fs adc addr16 jnp imul inc (bad) jmp push xor or xchg shll mov and mov mov aad jbe cwtl flds adc lahf bound fs insb add (bad) xor lods push jg inc mov sub xchg add adc sti xor jbe jb lcall pusha add xlat scas pop jmp fist ficoml adc sub mov idiv icebp pop stos xchg lcall sbb scas or mov mov shr pop out adc (bad) adc inc insl adc mov jmp inc es jecxz sti sbb sub xchg dec adc xor push dec inc xrelease icebp and aaa stos jle inc mov ja sti aas arpl pop adc fs idivl mov sbb hlt arpl cmpl cmp pmaddwd jbe or jg add mov rolb rclb sub pop mov adc (bad) sahf nop cmp mov repz ss movsb aas addl ret mull adc out sbb adc mov jmp fisttpl and xor cwtl in lods das dec adc popf dec lods sub fdivr mov jge notb inc loope push pop mov adc arpl (bad) mov fucomip jb das xor add divb push mov add push pop in xor push adc or inc mov adc push add stos (bad) add dec dec lret arpl adc pushf sbb adc test adc and xor pop aas adc xchg ljmp icebp (bad) mov dec dec pop hlt out xor sti jle cs pop and fcoml repz adc inc rcll div dec into aam mov adc in int shlb clc rolb cmp mov jbe push outsb adc in daa bound dec inc add incl jmp cwtl js adc cwtl fldl cmp fild add test inc jge adc iret hlt sarb negb mov repz lock cmpsb mov or ficom ds lods shlb fwait adc jg adc sbb sbb add mov cmp xchg out clc mov push pop popf inc adc jecxz mov nop mov inc push adc xor adc adcb adc iret clc and cltd (bad) xor ret (bad) outsl pop in test lret mov sti mov xchg or mul jne jmp aas dec jge push mov repz scas inc sbb mov cli sub enter (bad) mov andl sbbb (bad) or or je fwait push cmp xor aaa add dec test movsb sub mov mov add mov insl cld cmc je and stos mov fmull das xor inc dec add dec push adc int3 je mov xor shlb pop add (bad) (bad) nop int3 cltd add nop rcrl push mov xchg inc pop je nop loop mov mov popa pop out mov mov mov mov adc scas sbb mov in pop jl sub or imul mov mov pop add mov (bad) mov aaa adc fcoml add mov fldcw mov add dec dec add mov xchg fs jg xchg mov dec in sbb adc push cli pop (bad) xor fdecstp repz jmp insb pusha mov out mov cmp loopne push faddp add and es jbe call sbb mov fildll (bad) nop call popf cmp push pop push jmp and xor add sbb sub call out adc lds add adc push stc cmpsb adc adc jns icebp adc sub mov in mov cmp pushl cmp add xlat mov adc int xchg adc dec daa dec cmp push ficom stos xchg pop ret loop or and push mov std fdivr adc dec xchg adc dec jle adc adc out in cwtl xor (bad) sarb in clc adc sub (bad) or mov jbe push push and xchg movsl adc jmp mov ja mov mulb cmp icebp je mov push lea out adc inc dec aam lret adc cltd es sbb out nop orb movsl adc test repnz fidivl sbb test jle call inc fstps adc adc aas sbb int3 mov mov or ja dec mov adc test sub add aaa loope xchg ljmp decl push mov enter popa adc inc and stos andb out add mov adc sub adc pop pop (bad) cmpsl lret or jmp pop dec in sbb fstl movsl xlat lret jb sbb cmp call add lea adc jl dec adc mov adc or dec xor pop adc push adc pop mov dec xor jnp mov out xchg out push push sbb in or xchg in mov add pop sub push mov adc (bad) out dec loope lods jmp mov push sub pop repnz (bad) xchg adc test out xor xchg fcomip hlt popl insl xor jp jno sti inc mov mov inc or xchg in out rorb push (bad) lea pop cli adc arpl cmp in mov in add rclb mov sub adc pop mov adc inc adc cld adc jmp nopl adc push test mov add and (bad) lods les or xchg icebp xor aas and lea add ljmp lcall ret arpl popa jo cmc repnz pop xor repz (bad) jge xchg inc sbb or rcrb adc adc mov push repz push jge out insb mov fwait sbb iret xorl (bad) cmpsb dec adc jo int cmp xchg push rcrl push mov or dec hlt aad xchg sbb lea cmp mov adc mov dec xor insl adc pushl adc mov fldenv jnp adc insb dec (bad) cmc imul je dec in repz aaa cmpsl out aad test cmp mov jbe mov sub inc cmp adc or int pusha adc and (bad) mov mov adc inc jl repz scas or cmp les mov fdivrs adc push std icebp adc mov add xor stos mov aas cmp sbb push sub lock or add push in repz movb add mov cltd adc movsl loopne pop lea mov cmc adc into inc xlat add sarb test xchg nop and movsb mov loope inc incl adc sub jne push inc mov enter pmaxub mov sbb sbb test adc sbb cmp (bad) in out mov cmpsl sbb nop pop leave adc pop adc push movsl cmp lcall cld cmp or cli pop pop std cmpsb imull mov test add pop adc (bad) scas xorb sbb add pop inc add mov mov cmpsb adc out sub xchg ja and push mov dec mov xchg (bad) hlt stc adcl dec push sub adc hlt dec rcll mov (bad) fsts or sahf addr16 mov add iret and cmp xlat mov add hlt rorb ljmp adc inc pop fsts add adc fs test mov jp stos or insl ret lahf fisttpll int xor (bad) mov les sbb jo push dec sti js lock lods repz cmp ljmp xchg pmaxsw shl fisubrl int adc aas arpl adc mov into lcall scas pusha lret dec mov cmpsb lods jmp aad and adc pop (bad) cmpsl sbb loop sar imul and cmp mov in jbe xlat aas adc andb daa cmp mov test scas push mov mov xchg sbb into mov and cli adc pop adc pop xor movsb push sbb (bad) jbe je repz push leave and fcmovne xlat ja mov adc pop movsb aas jne sbb or ds fdivs repz inc adc sbb imul je iret mov ret jg adc mov jmp loopne push rorb mov jno test outsb mov inc popf xchg fstl lcall add sarb xchg push insb dec fsts adc inc je push sbb sbb out ds adc sub lahf mov xor hlt and add adc add insl mov call mov mov sub fimul lcall inc adc or push pusha inc fist xchg mov adc xor cmpsb mov inc (bad) adc pop or jae int mov mov mov cmc insl cs adc mov cmp pop inc push xchg fist adcl fdiv add mov js loopne in jo push mov xchg cli sub idivl push pop clc shrb mov ja icebp adc dec mov add mov divl in sbb push movsb (bad) (bad) push xlat xchg inc pushl inc pop popa into jb popa fisub push and adc or gs sub lahf add or les rcll mov ja adc (bad) xchg (bad) lcall dec mov movsb or push adc xchg or lods adc mov add add jmp pop inc adc mov push mov xor adc sub xchg rcrb lock cmpsb xchg adc push test add adc inc pop inc rcrl (bad) in cmpsl (bad) jne inc add aas out out mov sub add push into test push adc test in sub mov icebp das mov xchg neg xchg jg lahf xchg adc or mov (bad) repz and xchg aad out dec ret scas fiaddl rcrb (bad) push fldt mov dec xchg mov testl adc es and je pop adc out and addr16 call ret sbb dec bound hlt xchg add icebp fidivl jmp dec fisttpll int3 fldcw jmp add dec mov add inc (bad) mov add je xor mov adc popa stc fstp das sti adc jo xchg cmp inc push mov sahf sti rclb jecxz add sbb adc aam insb bound push push mov movsl pusha cmpsb fldt sub (bad) pushf adc and fidiv lcall fisttpl xchg stos adc (bad) xchg outsl mov adc or testl inc call mov xor in and add fs addr16 shrb int adc fdivp out mov add xchg in push push repz stc xchg mov into adc (bad) popa jo pop or mov push outsl adc movsb sub cmpsl inc jno mov or inc pop (bad) pop mov dec add test xchg add jae fs sub adc adc sub jns je gs mov repz push adc ds push bnd jmp loop add adc and xchg or cmp or cmpsl xor add push (bad) dec jecxz adcl mov lods repnz mov adc lods lds mov std cs notb les mov hlt sahf or xor push ss pop imul out imul sbb pop adc cmp mov xchg add adc lahf jb in inc mov outsl bound insb (bad) fwait cmp jno or jno (bad) xor inc icebp pminub push adc inc lods aad dec lahf andl push jge es loope rol stc push sbb aam inc mov inc test adc mov fstps push mov add sbb add pop adc sub mov (bad) jle mov or inc call shll test cmp adc xchg cmp movsl mov adc jno (bad) mov adc add jbe adc pop mov test xchg movsb jmp sbb mov sub cmp or mov jbe mov cmp push mov sbb adc cwtl jb movsl outsb leave data16 lret jne out or rorb sbb dec push int3 insb adc aam sub adc mov icebp ret lahf mov xchg data16 mov adc jb pop hlt adc mov cmpsb mov mov inc mov push push adc add movsl pop adc scas push cli xor xor push inc add pop inc add adc jae mov mov loop add daa mov jbe add adc mov xchg or lret hlt mov loope xchg cmpsb pop repz mov mov subl cmp xchg enter mov adc lds adc mov int3 aaa jge adc adc repz sahf xor mov into sbb out jp js cmpsl push and movsb nop in mov jnp mov pop dec mov or repz mov mov movsl adc xor cmpsl imul imul dec mov mov dec sbb (bad) in mov xor adc and fldl mov pop test repz mov fadds mov push dec mov dec scas rcrb lret xchg int3 pop add aam cmp or push cli push push jae and loope mov rol dec insb aad jne enter scas jmp lock jmp adc stos adc dec xor adc orb push push xchg (bad) fsubrl or mov and push (bad) cmp aam cmp or pushf js and arpl lods pop mov cmpsl adc imul aad mov xor and add sbb adc imul fwait xchg iret cmp mov dec pop fsubrl fsubr shlb mov (bad) mov push adc and int inc mov out push or scas push mov subl rorl int3 aam adc xchg inc data16 inc adc jb scas or adc or into notl iret or test inc repz inc out paddusb leave adc int scas dec shrl pusha mov fisttpl xchg (bad) push adc or fdivl xchg mov mov loopne push mov adc cmpsb movsl jno les cltd mov (bad) aaa (bad) out xchg adc lock rcrl clc adc cmp push add adc jae insl es daa push lds aad inc xor mov pop popf das adc popl sbb sbb jle adc cmp stos adc pusha mov pop and repz scas ds jmp sub jne add mov std lea and adc arpl out adc push fwait inc scas icebp push clc shrb pop mov das data16 mov (bad) pop test lcall pop test or adc push push insb mov sbb add and imul sbb dec mov aad adc and and insl mov loope les xor cld mov mov adc out adc inc test mov adc pushf mov pop pop adc adc jb inc dec cmp fcoml daa test sub mov push inc dec or mov inc pop stos sub (bad) mov dec out mov or leave adc mov mov or mov adc mov jp cmp or cmp aaa leave and (bad) xor insl xor cmp paddsw insb mov notl rclb adc cmp fs adc pop mov scas stos pop mov xlat insl loop push mov cmp inc mov mov xor inc jne je jo ret imul push nop pushf mov xor sbb fwait add or (bad) mov xlat jmp ret sub adc fs in scas push mov fisttpl mov (bad) repz pushf (bad) push or mov int3 and aam sbb jmp in jle rcrl rorb imull xor lock or or dec mov in dec stos mov sub or lret cmc adc xlat hlt jp out sub (bad) or lcall imul (bad) int aad pop xorl aam pop (bad) dec mov sahf xchg push fidivl inc mov cmp mov inc adc movsb sti pop push fs lret adc mov push ds add leave mov xchg pop adc mov out jecxz sbb mov pop jp adcb cmp sub sub or inc add (bad) cmpsl addb rcrb inc or dec pop lock mov add jl mov pop adc xor xor movsl leave adc sbb cmp push push daa mov bound stos (bad) adc (bad) and outsl cmp test push jbe nop jl add xor add shl or jae test decb mov push mov adc dec mov sub shlb repnz cs lods test adc stos push bound xor adc lods aaa jmp mov data16 jmp mov inc insl xchg mov mov mov fcoms scas in adc xchg jge outsl lcall sub ret cmc into insl insb adc clc adc push cmp outsb push divl jle or dec repz ljmp add adc (bad) push aas dec and call fwait xchg fisubr xchg mov jno ds mov mov insb adc pop jnp sub std fsts add mov push sub loope mov int3 add or mov es lcall mov pushf int add outsb push inc mov cmpb mov enter call adc xchg mov mov cmp (bad) fmuls mov add inc jmp test push jg shlb and aaa sbb add cld fisub adc inc ret sub adc aaa sbb divl xchg xchg jge sub adc sub jle lds imul mov adc xchg cmpsb adc ja dec push sti mov cmp lds rcrl cmp jno jl add push xor sbb mov imul out jo pop mov push xorb sbb and rcrb out adc add adc push adc cmp mov psllw mov push clc cmp mov stc dec cld (bad) jle aaa cmp fwait jp lahf inc push xchg mov subl mov into fisttp sub adc aaa sbb mov adc mov cli mov sahf jno inc sbb mov out or mov in adc jbe scas cmp fdivrl push test xor inc pop stos adc (bad) adc xor push pop rcrl adc xor aas push mov clc sarb std xlat xor ljmp fstpl cmp adc ret jno sub mov sbb mov dec pop call (bad) xchg ds adc test ret out imul nop mov aaa pusha jg outsb lahf pop mov adc dec in and imul mov jb adc gs and lods adc pusha xchg testl sbb mov jo fcoms fs or mov push jae jno pcmpeqb dec mov popl pop out jecxz mov mov insb adc xor nop/reserved adc adcl cwtl ficompl je sub jl stos pop mov fadd adc sti and dec (bad) in sub test loop mov adc loope rep dec jb int adc cmpsl (bad) test cmp js test adc inc ret cmpsb or xchg nop xchg movlps nop loop je dec mov lahf and repz fstl push or lret dec addl fucomi xchg cld lcall push aad push inc out sub call jnp cmp adc push mov ja sbb fsubr jb pop xchg xor jmp adc lods adc nop daa add mov adc add adc cmpsb rolb mov adc or dec mov aad das pop repnz mov cwtl (bad) sub xlat xchg fldl mov xchg mov jl inc sahf xor cs adc xor adc loop loopne cmp mov fadd mov je or mov push roll mov push fnstsw pusha jns pop cmpsl fsts repnz daa outsb dec jmp sti andl adc ss jg jmp mov cmpsl repz add cmpsb mov inc mov (bad) adc dec adc scas adc daa repz adc gs popl xchg pushf loope lcall lahf mov test sarb sbb adc sbb nop nop fbld sti sbb cwtl pop int mov sahf mov add test pop xor cltd adc aas pop mov ror push stos or sub arpl jl adc push stc jne push in dec rcpps popa test push jnp sub mov pop mov lea sti enter add and lret jns or test pushf adcl rcll pop ror pop jo pop leave shrl mov add push xchg out or in pop xchg loop mov add sti add or mov adc popf dec push push dec adc mov out pop cmp shlb mov push xchg adc sub adc xchg mov jnp jge xchg or mov loopne lods mov int3 pop aas int3 out loop adc push imul aad test adc inc sbb inc push mov (bad) ficomp push jecxz mov push repnz and cmp adc xor mov stc scas mov rep fidivl jecxz pop or outsl sbb adc xor ljmp sbb xor into pop adc push insb test jmp stos push and aaa or orl adc mov packsswb clflush add jno xlat inc lock xchg cmpsl fldl movsl ljmp or pop mov aad adc loopne sub pop (bad) adc test pusha push sti lcall out (bad) mov stc sbb (bad) xor sub shlb dec xchg xchg xchg push mov call (bad) pop fwait repnz mov push call stos fist (bad) loope addr16 or mov sti adc jg push inc pop push jmp mov sbb mov cmc imul pop mov (bad) jb scas loope add dec push adc push dec rcrl and int pop sahf xchg (bad) das cmp rorb adc rclb push xchg pop adc test xchg mov add lret push mov adc sub into out lcall jecxz aaa xchg scas or dec and sub xchg and adc add arpl or (bad) pop jbe pop fldl cmp jae nop cli jg jo mov mov scas inc sub adc dec call repz test loop sar push sub mov mov lcall dec push test rcrb dec fwait xchg and sbb psrlq adc cmp dec cmp stos add out fnop notb out mov mov daa xlat mov mov aaa sub ffreep lcall jae mov pop add sub data16 vmread lods adc (bad) std int3 lock jb insb adcb inc out inc push dec std je mov mov test or sbb sbb push push inc pop aam adc mov sub adc (bad) mov insb mov adc aad mov je addr16 faddl mov adc mov adc dec sarb mov push outsl mov cmp loop decl xor pop fadds cmpsb push ds pusha xor ss jecxz sub enter or lea adc lcall into push cmp scas sarl aas adc inc push in repz sar push fdivl (bad) clc sbb sub or adc inc or adc pop repz add call push xchg xlat pop hlt add stos pop aas jl std adc shll aad adc add mov stos stc rcrb push or int movlps adc jnp adc sub pop inc adc clc xchg (bad) and ret inc pushf div cmp and add add sbb loop fs mov inc daa inc test jg xchg dec jae or lods ss mov adc rorl push adc fs or sub add sub adc lret int3 movsl pop outsl add stos jle mov push cmp (bad) insb iret (bad) hlt cmpsl jns inc (bad) jmp adc xchg jae fs inc lea push push jne jbe cmpsb jne lret adc cmp test sahf jl inc and jbe dec xchg jnp out adc dec pop cld jmp ja adc jp popf std pop adc pop jo xor dec nop jg imul inc aad lret xchg xor cltd sub or adc (bad) jae mov cmc pop mov mov sarl aas push add mov out adc out sbb cs pop cli mov imul add jecxz fwait (bad) cli rcll xchg imul jne sub sahf mov (bad) xchg mov cltd adc mov push inc adc adc test dec icebp mov int3 stc inc inc sbb adc inc ss pop scas test fistp xor decb adc xlat sbb fimull jg add mov outsl pop jo test pop imul (bad) repz cmp jp outsb push jmp adcl pop sbb cld adc scas je pop sub fbld loope fs out xlat stos cwtl test jbe in or sysexit push and add pop imul xor insb outsl jb xchg add cmpsl repz or mov sbb icebp pop inc and jno daa repnz and adc (bad) lretw adc stos xor jno stc adc arpl adc das adc xchg inc add ret push mov push test (bad) adc jne lcall dec cmpsl sub add push push adc cmp stos mov push sbb movsl mov mov jp push or dec out add lods iret fcoms out sbb test outsb pop cltd push add jns adc xor mov nop push jmp adc outsb mov fidivl cwtl pop fnop dec lret push leave movsb adc sub sahf rcrl adc vmread icebp push cmp push aas pop adc cmp fsub xor pop pop out xchg dec push push rolb rcrl mov inc mov neg mov fimull arpl xorl cmp pushf push dec mov clc scas mov bound (bad) pop adc mov adc test adc addr16 push out fdivrs adc lds adc fdivr lock adc imul pop in mov fstpl mov aam fadds cmova or mov dec sub hlt aas rcrb adc mov ljmp push sbb dec sbb mov divl and insb into adc movsb mov mov cltd pop mov xor pop jg repz or pop (bad) (bad) mov into pushf or (bad) enter dec add insl leave movsl hlt (bad) cld or wbinvd xchg sti adc fwait (bad) dec imul jnp fadds fdivr xchg mov dec fucomp xlat outsl jmp adc in mov pop dec mov mov sbb dec adc pop xchg cmpsl push (bad) mov decl rep and and adc in push fucomp mov push ret xlat adc adc clc popf btr stos mov xor inc into sub add mov fistpl cmpsb adc dec sub pop jle sar (bad) mov notl sbb adc addb mov push mov stos add adc mov es xor mov (bad) and sbb in movsb into outsb adc jge gs pop repz dec mov pop jmp cmp test jae add xchg and sbb adc adc push (bad) jge or cmp outsb cltd into pop shr xor lcall pop cmp ficom adc jp cmp cmp adc cld sar cmovb adc jns (bad) add adc inc je dec add jbe pop jnp xor jle mov incl hlt mov mov dec or pop push cli xchg adc fldcw sbb add gs ja adc mov inc adc ljmp adc xchg popa jno mov mov pop in xor movsl insb pop xchg (bad) dec stc ror repnz inc add sbb scas inc add popf in cmp (bad) ficom aaa aas adc sbb repz inc cli and movsl xchg lods or jge adc adc cmp pop cmp lret lea (bad) adc fcomip adc cwtl je push and lret ss sbb lea cmp and inc jo dec fmuls imul mov mov ja mov adc fadd arpl dec imul sbb into mov inc pop or xor adc inc je icebp popf pop adc pop notb cld xor jbe pop push aad jge fbld cmpsb nop mov dec repz xor sbb es repz imul jecxz mov repz (bad) lret iret dec mov or (bad) adc cltd dec mov lea mov add cmpl sub mov fsubrp pop je ss and rcrb mov mov sub pop xchg pop fcmovnbe adc repnz sub adc jae orl fdivrl mov cs xor push push add xchg clc sbb std outsl adc inc mov in xchg adc imul fwait ret adc pop ret jbe sub xchg popf cmp sub cld (bad) repnz jle mov push outsb test adc jne jecxz adc es push inc cld daa sahf repz mov ret mov sub push or add subl mov push xor sbb or adc adc mov sti adc out mov adc insl andl jecxz cmc mov mov shr fidiv stc outsb pop ss xchg es adc out popf (bad) cmp mov std idivw loope mov adc pop loopne movsl mov adc test stos adc (bad) punpckhwd jg adc dec xchg mov adc xchg push sbb jbe or or fist adc push fldl add (bad) push nop adc mov xor jp pop add mov and xor mov scas lcall adc ror xchg in cs push pop xchg (bad) cmp stos or dec pop inc cmc lea inc xchg adc iret jo stos je add (bad) aam shll adc popa jmp inc rorb loope pop jns xchg sbb sbb dec push dec test repnz aaa adc jmp fistl (bad) dec inc adc lret cmp stos jne adc outsl push jle adc ja xor cmp push mov ret (bad) pop jl xor stos xchg roll jae mov sbb xchg lahf bound dec dec adc jmp lods xor dec out orl cmp jbe pop adc fstl adc cmp repz xchg lret gs nop pop (bad) pop dec xor lret dec jnp inc cmp notl repz push sub adc (bad) outsb mov das shl push leave out cmp lods xor xchg mov jo jbe pop mov mov addl or fsubrs das push movsl and dec repz jp xchg dec jmp and jne mov loope in push jb sahf adc and lods imul arpl xchg in xor push inc or add inc bound xor push adc or push cmp and sbb xchg jle jns into adc mov shrl and gs lock loop scas dec aas mov mov ret jmp sar pop adc inc jle lods adcl (bad) mov les test lock add mov iret xchg out inc inc push adc lods push cmp jb ret adc mov outsb mov jge arpl sub gs fist loop adc pop or rol ret inc lret xor sbb adc lahf inc sub xor test cmp mov adc mov pop fiaddl mov dec daa jno movd mov add ljmp sbb pop rol test (bad) rcpps ljmp mov sbb and sbb popa adc sti stos lea or xlat pusha sarb jno dec adc aad sub repnz jo jne fdivl xchg insb add sbb fdivrs sahf xchg sbb add adc popf test outsb adc xor adc pop addr16 js mov pop aas and inc (bad) mov adc cltd dec lret xor sub cmp adc push adc out xor adc outsl sub fs scas and es inc out ljmp mov pop fimul sarb incb test pop cmp cmp btr mov add sbb shrl lock adc adc outsl mov repz in pop div rorb pop ss jae adc repnz fucomip scas test mov xchg add mov cmp mov int3 loop (bad) jb out xor repnz or lods inc push mov pop push iret xor mov inc rdpmc faddl pushf sub popa pop cmp (bad) mov ja rcrl xchg xchg fisttpll rcll sti or adc bound adc pop and loopne push xor pop adc out mov int pop mov repz jmp sbb adc inc pop cmp out icebp ret (bad) lods cld in bound sbb stos mov inc inc adc mov call adc pop fstl mov lret cmpsl rcll into jle add in popf out hlt push sub xchg xor (bad) jge jbe and lock push pop mov add (bad) add not adc lcall dec jmp scas mov adc call adc cltd in inc cmpl mov fwait imul sub xlat jle cmp (bad) clc jno xchg jae js insl dec inc pop mov mov nop xor mov pop (bad) cmp xorl test xor std push adc adc adcl loop inc sub rcll mov xor sarb rorl adc adc lods mov adc push fmull xchg into fiadd bound inc repz clc push nop test push adc mov hlt mov out das and insl adc adc add add sbb add repz fisttpll mov xor stc adc inc out dec adc dec icebp add push (bad) adc leave or js mov jne add iret push jge adc cwtl lods push inc xchg jno (bad) push mov dec enter add stos cs ja or add in in aam xchg or xchg loopw sub jb mov and or and push add lcall stos stos std push add push repnz xchg in insl dec sub sbb nop mov pop add daa (bad) push fcoms lock lods or add aam fild mov cmpsb arpl push sub lock pop rcll cmp pop mov jge xchg les je hlt pop mov adc push xor inc push cmpsb sub icebp adc sbb test inc xor push xchg jp adc adc mov popf mov fs push jl pop push sahf dec push adc dec jbe xor (bad) cmc movsb adc setb adc pop lods jl adc cld sbb ss mov arpl push push out push and pop dec repz shrl (bad) stos insl adc add adcl xchg (bad) lods aad adc out sbb bnd cmpsl adc mov out adc movsb adc and adc nop jae jo jmp sbb lcall or fwait scas xchg adc jecxz outsb sub mov adc dec push add adc sti bound mov and in dec cli mov cmp enter add test inc sbb inc iret fist orl repnz inc adc lea jb mov stos add inc mov dec repz sub pop adc lret mov sahf cmp add aaa adc xor inc std fidivl lods mov fmul mov scas cli mulb xchg add adc dec push test add jge outsb cmp (bad) mov cmp push cld call shll les sub sbb adc jno adc mov outsb adc and adc sub mov sarl jmp and repnz add insb enter das xor jo or pop int3 adc mov scas mov lods mov push (bad) mov cld mov add xchg adc inc lds jecxz push mov adc jnp pushf push adc pop leave lock fldcw mov mov bndstx iret cmpsb mov mov jbe adc loopne sbb inc ja rolb jno leave aam adc cmpsl xchg push pop adc adc (bad) mov cmp adc lret sub sub xor aam adc arpl add repz jno dec jecxz outsb in shr push pusha adc repnz bound adc jmp and sbb fildl push hlt cwtl cmc sbb popf jle xor add mov sbb inc lock jnp out xchg cmp repnz jae adc (bad) xor loope push hlt add (bad) adc and scas adc inc xchg js and (bad) xor jmp add sbb xchg (bad) sub das stos push pop enter cltd divl inc fcoml ljmp xlat adc sbb movups imul cltd add or add mov adcb jb sub (bad) mov inc push push arpl cmc xchg xchg push jno pop test adc adcl scas in (bad) loop das adc loope les lret fildl add out movsl push or out rcrb adc inc add mov cwtl xor jle push ljmp rol test or jnp out inc xchg adc enter push sbb or (bad) shlb xor aaa sub call push mov adc int inc xor sarl aam mov dec inc push lret int3 push movhps outsb xor xor loopne pop in adc sti mov cmp adc in popl insl push adc daa pop lahf adc mov mov sbb mov push cmp adc arpl jbe push mov stos fwait xchg js jge mov sahf scas mov sbb cmp sbb sahf lahf fsubs inc pop inc push mov repz lods or fimul call add adc stc xor adc (bad) push pop adc test or pop int pause lret jbe xchg aaa lods outsb movsl or out hlt insl sbb into mov into sub out popa loopne fwait es adc inc outsl push aas iret xor mov mov ret std inc adc jge xor movsb mov es fsubl mov cld sbb adc xor enter sbb adc push adc xchg divl aaa adc or lea or adc iret int3 adc and xlat dec int3 adc pop cltd cli sub sbb nop inc mull and adc dec ljmp cltd push mov adc lcall or das in out add (bad) adc fs and xor or inc sbb ljmp loopne fcmovnbe dec sti mov adc adc and pusha jb int bndstx adc jmpw or lock adc sbb adc outsb mov jne add flds or adc (bad) mov adc pop xor jecxz sub adc mov hlt sarb addr16 add je mov fs aad xchg bound sub sub add cmp fimul and sub in mov popa aad add add adc add adc pop jne rcrl mov add jae lahf scas adc xor adc and lret bound adc out (bad) out gs push sub push or add int3 xor movl push jl mov or jae add jmp ljmp out adc xchg jl movsl pop adc xchg and (bad) cmc xorl xchg mov andl rolb pop add sbb outsl or push dec (bad) fs imul js in rolb into bound cld lods rorl adc das inc loope xchg jne mov adc ret or pushf (bad) adc test mov jb pop xor adc shrl pop adc or adc ret adc fwait push adc jmp loopne lds mov loop cmp cmpsb sub (bad) cmp or mov rcll add and dec adc cmp or fnstsw mov xchg push pop aad mov popa out lret js sbb sub mov test mov pop xchg xchg out cwtl bound test gs xor cwtl pop sub or leave cmp ret mov sbb and pop inc add xor addr16 pop adc dec cli out cmp add stc pop jecxz cmpsl pop icebp fcoml ja in fimul xor lcall sahf adc add pop adc cmpsb shr dec (bad) cwtl adc add test xchg inc ja repz adc inc jb iret mov (bad) adc dec jne dec (bad) fnstcw jb sbb mov adc dec xor or imul push fwait mov lods push inc out and cmovnp leave aaa inc (bad) outsl mov push fist xchg jno cmc pop pop sub cmp and add cmp loope,pt dec (bad) jl out or xor inc (bad) daa add xchg pop xor xchg jp mov push cmp sbbl jmp adc imul lret xchg pop pop add jg mov out int mov pop gs loop mov add or sbb aad adc insl or popf mov adc fisubr add (bad) lock push mov mov sub es aaa adc test sbb xlat flds fistpll adc ds pop ljmp adc xchg pop push dec out rcr insb shll jb clc adc hlt mov adc pop inc outsl call int3 adc pushl loopne rcr scas sbb xchg dec mov jb rorl ja adc fwait mov jle adc xor adc pop lcall push pushf jl cltd or popf mov mov bswap mov subl hlt mov xchg fldenv add sub adc push adc xchg mov or cmp add cmc lret mov (bad) jno pop leave cwtl call and ret cmp dec push adc pop cmp jp,pn mov loop fdivrp hlt sbb push jecxz test or fisttpll or mov jge mov push test addr16 lret cwtl sahf mov scas xchg jl add add sbb xchg icebp and add rep (bad) jb (bad) jbe adc mov add mov mov pop out mov ds adcl lahf add adc shrb sbb daa add xchg test psubsb mov push repnz mov adc lds adc mov loope mov mov data16 jl rcll dec sbb mov or je fsubrs push lret fiaddl sti movsb adc dec fdivrl xor fdivrs jle std adc clc xor or xor cs and test lahf fsubr test push gs call (bad) adc (bad) push mov adc outsl out loope sub mov xchg sub adc shrl aaa (bad) push lods mov sbb add jne imul insb fisub incl push fcoml xchg lcall inc mov mov hlt je sarb jns mov mov mov xor icebp inc in mov adc xor les je xor or cmc push mov rcll enter or and mov ss mov sbb mov test les sub rcll std and test fadds dec sub mov (bad) push cwtl cmp cmp jb dec sti outsb pop ficom push inc out into jnp insb cmpxchg8b (bad) iret (bad) repz rcr add ret or fdiv add cmp jno or push loopne pop insb adc sti mov cmp dec pusha ljmp sbb push lcall adc stc cmp mov lock sbb adc (bad) (bad) rolb adc aas int jp addr16 lods mov sub and or movsb pop repz inc stc push and pop fstp sarb fdivrl pop add jne notl adc inc xchg call adc aas rcll mov pop mov pusha repz (bad) jge xchg ss fdivrl jne sub jbe push or ret fwait mov jle or dec aaa rcll mov lret pop in adc scas jecxz aas aam adc loopne mov dec cmp movsb or xchg mov adc cmpsb xor shll dec sbb pop jnp pop push movsb or pop shrl cld adc mov pop cmpsb sub push repz jns pop popf sarb jb (bad) icebp sbb sbb test scas leave in pop test lds (bad) mov scas int push jge in inc cltd divl mov adc movsl push push adc repnz ljmp mov adc negl sarb fistpll jecxz pop push test add xlat xor cmp adc mov jnp cmpsb xor int3 in mov add jl xor adc and jno (bad) leave xchg mov lahf frstpm(287 jnp push push iret xchg outsl sbb fwait rclb popf sbb dec adc sbb xchg mov rclb mov sbb jl mov lods sti roll push mov mov insl iret js stos sarb cmp (bad) cmp hlt movsl or pop adc or xorl sub pop test cli xchg or cwtl sti xor mov (bad) in mov dec cltd int3 add arpl mov adc push pop xchg enter ss cmp jnp shlb fildll popf pop add cs sbb xchg mov in movsl sbb dec adc lods daa or sar push lahf xchg inc movlps inc xchg inc sub cmpsb adc push or ror inc or xlat ss mov pop es jo xor fs fnstenv dec or xor xor je enter lock xchg std call movsl icebp (bad) loopne adc add push ja adc imul inc cmc adc cltd arpl je outsb jg ss add add xchg jae pop aaa scas bnd popf jb fwait adc in rclb jge insl test cmc add ficom enter dec in sti adc inc lret imul add cmpsb inc out sti loope pusha and jns lahf pop pop add ljmp jecxz loopne xchg adcb jecxz inc cwtl pop jmp mov ljmp jmp add rclb cmp push gs daa aaa adc sbbl adcb jmp push push (bad) xor repnz or mov les xchg add and sub sub scas (bad) pop rol or mov adc jb adc push mov adc popa rcpps and sbb mov pop call cmpsb mov (bad) pop or outsl xchg add pop xor push pop mov sbb mov repz jns mov fisub negl cltd and mov push xor cld push mov pop pop out and into cmp clc subl pop sti loope in push adc add and orl mov leave mov (bad) lods jne ficom adc mov mov outsb inc adc adcl mov jns sbb cmc int sub lods fsubrs inc imul outsl repz test adc pop (bad) mov push scas dec and inc or adc adc lcall stos sti mov push jae jecxz jmp rcll push adc sti push into pop add (bad) aaa adc stos rcpps mov pop enter pop pop es xor pop mov mov mov cwtl pop adc push sbb xchg mov adc fwait int dec add cmp rolb adc inc jg stos lret adc jge jle test call rolb mov dec xor mov xor roll scas jns js adc jo jne in rcll xchg push mov lea pushf out pop dec insb enter adc imul mov (bad) mov faddl pop lar shrb fidiv mull mov or adc into xor xchg les xchg test stos xor cld add adc sbb scas push ret push rep mov mov (bad) xor mov cld add pop xor fbstp xor (bad) and or fisubl push in sbb jmp stos mov mov or xchg fsubl xlat icebp loopne adc cmpsb daa les cmp pop mov xchg mov and es sbb rclb or and mov mov mov adc les sub add sarl xlat clc dec mov sub decl sbb mov xor xchg fcomi push ljmp push adc stc sbb inc add pop stos out pop fsubrp cmp pop rorb cmp inc dec (bad) mov mov sub cmp and push add pop es and mov loope xor daa pop je (bad) bound xchg add inc fdivl cmp insb push (bad) loope jl shr xchg (bad) mov inc icebp in sub sti add arpl cwtl dec mov call subl adc jecxz sarb push push pop sbb and push adc push dec outsb inc cwtl in repz xor bound or inc (bad) int jecxz xor lock lahf sub mov out repnz jmp test into mov nop (bad) icebp (bad) sbb lahf test push pushf sub aad test mov test out aas push or sub in divl and dec lods add adc mov jecxz mov adc aas test add xchg xchg mov pusha loope iret dec dec adc lret sbb adc add les adc add popa sbb pop cmp out mov jge bnd lock adc xlat push mov jmp cmp fist push cmc add adc outsl push push scas cmp jle mov dec (bad) xor (bad) mov adc pop mov sar inc mov cli ret aaa pop cmc sbb loop adc pop repz imull aas lods cmc movsb dec mov push popf inc insl sub xor pop in fistpll (bad) pop je adc gs mov pop push adc adc push and ret cmpsl popa out outsb repz sbb pushf cmp loope sub cmc jge je sub jecxz ficomp or adc inc pop sbb mov xchg or mov inc jae pop sbb dec and jg cmp add lret gs mov aad rclb sub push (bad) push and dec mov cld jg loopne adc xchg fcomi out hlt sub sbb jo pop xor mov frstor arpl adc sahf mov push cld mov (bad) rcl jecxz add adc xor mov sub xchg mov aaa and sub adc xchg adc xor jg push mov notl pop xlat mov pop or mov das add test dec inc arpl rorb stos mov adc cmp inc adc jb decl mov xor dec mov and jl xor lret movsl enter int inc xor imul repnz cmc aaa and and adc (bad) sub adc fucomip cmp add fiadd add xchg lahf jg cmp adc dec jecxz cmpsl jo aam insl (bad) pop js fdiv clc xor ja in add cs (bad) loopne mov inc repz pop xchg adc mov add cmp aas lods jmp cmp aad js cwtl mov cmpsl xor or pop mov adc fstp pop add pop mov sub sub ret (bad) adc repnz adc cs sub pop adc and repz ds lods dec cmp loope mov (bad) int mov mov (bad) ja arpl in push cmpsl or lea inc pop sub push xchg or in mov lea jae mov adc jl or jae dec out pop inc lea mov mov jecxz insl nopl sbb adc idivl gs add xchg adc cmpsb xchg rcl rcrl decl adc repz aas mov jg (bad) in in out pop mov adc mov cmp test mov test add int rcl insl cmp vandpd sarb out inc aaa lcall pop sub adc mov xchg sub subl shlb mov adc inc and cmp push xchg cmp xor es test sub fwait cmovae and lds sbb jg fisubrl sub jnp repnz adc mov mov out mov jmp mov push jo xor or cld repz in rorb jne mov dec mov pop dec sub push or jle ficoml fadds adc aam add mov repz dec sub jp icebp xchg push jns adc jmp adc clc jmp inc std jae mov inc jg int into stc stos mov xor inc adc lcall adc bound cmp mov lahf xor mov adc in xor push pop inc test inc repz les inc in adc cs sub adc ret (bad) adc test imull repnz in cmp (bad) nop adc in leavew pop ficoml lock xor outsl adc jle pop cltd inc test jae mov cmpsb push (bad) dec test rcrl mov shll cmp xor stc sbb pop adc push pop adc loopne adc mov jp adc pop dec and cmc inc sar imul rol jg call xchg fldcw sbb inc xor pop add sub pop or xchg sbb adc cmp jnp repz jecxz inc jno sbb adc or scas xchg ja adc jl in xchg jo adc mov arpl jns inc adc punpcklwd cmc dec jno js add stc es xchg iret inc pop mov test mov mov std mov mov dec nop cmp ficom cmp mov daa repnz sbb fcoms mov mov xor mov (bad) fsubr pop pushf sbb loopne mov xlat int dec fist test and adc pop pop sarb daa sub jl out and test int3 inc scas out adc outsl test sbb dec adcb cld inc xlat data16 imul xor xor icebp cmp dec call iret jbe xlat push jp stos repnz adc data16 adc push and ficomp add movsl rorb fsts adc dec mov adc dec push sbb mov sbb ljmp aas adc adc (bad) pop scas adc dec sub sbb inc std je (bad) jecxz mov and fdivl outsb add mov jmp pop fstpl lock adc loopne xorl adc push xchg inc mov stos sbb pop dec js adc std pop test je test test addr16 movsb (bad) adc adc pop lock inc sub and cmp (bad) mov jp lea dec in cs inc in adc add jb or stos cmp push inc mov add lret clc rcrl pmulhw jbe or dec jmp jne or mov mov adc jle outsb insl into jg fcoml (bad) sahf call hlt jbe pop adc sbb pusha mov inc mov and call inc push lods adc imul shlb neg xchg cmpsl adc pop jmp adc mov shll adc jbe sti repnz cmp insl xor cmp out movsl adc lods (bad) or mov sub jbe (bad) mov mov cmp mov pop pop mov xor in adc or enter fstp and add mov rcr or dec bound je (bad) mov pusha mov les or mov adc cmpl pushf stc push aam inc mov jmp shr pop pop in repnz push pop cwtl push mov stos repnz daa jmp push jno push adc mov sahf loopne mov dec fs loopne out (bad) mov push jmp faddp xchg push in sub jnp loop in call mov inc stc cld push rclb cli mov jae push sarl clc add xchg daa in repz pushf movsb stc dec or mov outsb add push adc out lret arpl cmpsl stc in jne push add xchg adc cmpsl bound arpl in lods adc jge adc dec push out fisttpll jecxz cmp adc (bad) cld cli arpl jmp dec add or cmc push adc jecxz lods dec mov sbb pusha (bad) nop pop jmp adc loopne adc adc aaa jo lea stc lcall hlt pop fbld xchg int hlt (bad) adc nop add adc sub push test ret mov repz aas jo mov mov ss jns cltd je cmp jno nop adc (bad) xchg jb rol ficompl lcall pop push cmp je mov sub adc jmp adc imul sahf pusha sbb xchg adc lret cld mov insb adc add fwait sti mov adc subl xor iret inc pop add jg pop adc jp je add adc pop or repnz jecxz scas data16 lcall lea push mov adc push imul (bad) loop bound in adc mov adc es jnp cld sbb loop xchg aaa cs sub jl fistpll test nop aad enter shrb hlt inc adc pushf mov dec and jno fiadd mov ret ss mov xor cmp and ja shrb (bad) or (bad) cmc jle lcall mov std fstps sbb dec jae adc mov adc push jbe or adc sub or adc shlb add cwtl jle add or mov xchg push mov adc pop movsl mov xor pop add notl (bad) mov adc aad xor ja jl mov jmp pop adc std in stos mov sbb repnz (bad) cmp loop mov xchg aam into adc into rclb lret push xchg ss xchg mov cli pmaxub cmp outsb mov adc nop sub pushf (bad) adc fiaddl add mov inc repz cmc push sub xchg adc lahf lds je (bad) into outsl inc add roll pop adc adc stos sub jg mov js sub std repnz mov mov leave fidivl jnp shlb dec movl test (bad) jno mov or adc push and mov mov jno sbbb adc and or xchg test imul or mov pop xchg mov add xchg sti and lret jns out lcall pop cmpsb inc mov xchg adc rol adc in cli mov xchg inc add jns adc jb lea mov and mov sub repz stos push jns fstl cmc loope daa pop pop pusha pop adc outsb mov jo les add loopne jno daa adc xchg mov and adc cmp jb push inc out jl inc add (bad) leave pop adc ss in push mov ret jbe out or imul adc pop movsl jl test adc stos pusha lret mov push out adc mov in pop test xchg (bad) sti adc popa in adc push lock test int3 mov ja imul pop push adc or lea push mov adc add js xchg stos add jns add adc mov movzbl sti adc lahf pushf sahf mov mov jecxz in vunpckhps int mov push into jne pop dec and rcpps and jae jo mov pop pop ret mov into repnz fsubl aad sub js nop mov or pshufw or cmpsb arpl mov mov ret add push cmp push pop nop inc xchg or rorl repnz adc lods adc in jb iret ja adc icebp pop adc pop nop mov ds cmp aas lods and clc ljmp rclb lahf push mov xor pop add mov popf adc fbld insl xor jno xor and jl (bad) enter sbb mov dec bsf xchg (bad) dec add or sbb enter in inc mov aam or adc stos pop xchg iret fcom (bad) pop orb data16 xchg dec xchg stos mov pop pop push scas aam adc adc sbb adc or pop xor inc sti adc dec sbb (bad) and ret fsubl repz adc (bad) xchg mov push or or jmp adc and adc jmp in xlat adc cmp cltd or xor adc into push sub mov lock jns fildll adc pmaxub (bad) js adcl add les mov or imul mov push movsb mov mov mulb xor mov pop push in cmp sub sbb adc movsl (bad) mov adcl xor inc adc lret mov lret pop mov dec ss push adc fdivr mov mov inc xor xchg or mov and sbb sbb adc lcall in aaa adc setae lods repz push iret inc push sbb aam std and add pop cwtl pop cmp ficoml and mov sbb (bad) sahf ljmp lahf sbb adc inc pop push divb push mov inc imul jle push scas in loop test sbb adc mov adc push inc stc xor adc testl insb sbb testb mov or nop repnz mov sbb inc adc sub xor sub mov sti pop xchg or or in jp das sub (bad) xor add rolb jle adc movsb in sbb dec add sub lret insb std ljmp int (bad) mov lret lahf and outsb adc push adc movsl jns xor dec rorb push jl pop in jge pop loope arpl outsb ret je adc xchg decb aam adc popf mov sbb in adc lds xchg adc cltd sbb dec jle dec mov decl add movsl jmp cwtl cmp pop sbb test or pop popf jnp sub (bad) mov (bad) movsb aad arpl mov inc cmp sbb cmpsl jge imul movlps jg sub fisub inc add mov pop cld sbb push sarl jbe add cmp movsl rcr cmpsb adc lret popa mov xor (bad) jmp xor xchg jl,pn test pushf test cli push jecxz or or test push mov in or pusha ds hlt lods sbb add in xlat loop adc adc jns inc lods in and imul xor mov adc or sub jb lods mov pop pop sub bound sub adc fs adc cwtl jne je jbe adc and pop aad sahf inc jle adc sub ja mov enter push mov mov dec pusha inc out adc stos xor jno imul and mov pusha repz repz pop mov hlt rorb cs loope out repz push fwait scas bswap cmp dec pop int push sbb into movsb adc push dec loopne orl mov dec out out inc xor jge fsts enter push iret pushf adc push jle cltd cld repnz pop stos in xchg and adc push gs daa cmp xor in jnp subl dec insl sbb xor mov mov mov cmp xchg fdivr pcmpeqb imul dec sbb push xchg or call adc xor push out lods insl mov inc and adc sbb rolb push adc inc cmpsl rcrl add push sbb sub (bad) cld mov hlt adc jg jno idivb pop xor in adc pop btc mov loope test push gs adc mov fildll in push testl cltd mov ficoml pop xchg dec out adc mov nop outsw cli mov jge das xor adc scas mov rcr mov call into (bad) jmp push aam push adc push loopne or and call popa adc pusha dec lret aaa in jmp enter inc fdivrs out dec fldl xchg cmp jge push sti pop (bad) push mov jmp add (bad) pop or test iret nop (bad) mov hlt or out inc (bad) rcr jbe push cmpsl xchg movsl test or cmc sbb or fcoms imul xorl loop adc int3 adc in sub mov (bad) test pmullw repnz gs ret je cmp xor sbb adc cmp rcrl mov add test adc rolb mov adc xor setl adc push sub mov (bad) lea les push dec lock push aam loope sbb ficompl sbb xchg (bad) js mov imul inc pop sbb std jmp pop adc in aaa adc repnz ret les clc xor and adc in sub sbb ss jl into adc call fnsave (bad) shl push int3 cmp adc mov (bad) fbstp mov lcall push js mov xchg and insb mov aam (bad) or or repz in xchg lret add mov arpl pop adc lods adc sub cmc stos adc sbb insb jmp push dec or fs sub pop adc push movntps cmpsl adc mov loop mov adc clc stos sbb (bad) push out inc pop and (bad) repz (bad) in repnz inc add or pop jg mov in sub test add and repz adc iret rcll or in faddl nop aas test jno add jae push push lea push (bad) xlat jo mov push push cmpsl (bad) daa jnp inc adc stc loope adc dec cmp sbb or jmp lods mov (bad) mov lcall push repz mov xchg sbb sahf js repz scas inc and sbb pushf xor push (bad) and lods fsubr mov ja xor lahf jecxz xor push lret sub pushf sub mov aas xchg fsts test mov ret popa cmp adc or clc sub insb xor (bad) pop mov jmp incl outsl js gs out mov adc xor inc mov xor adc call outsb push daa icebp pop add xchg jbe inc and lea imul dec adc mov mov addr16 lods inc add icebp aam (bad) repz (bad) hlt jbe lock lret daa add rclb clc iret inc jecxz test lret int ret pushf xor repnz mov or adc repz push enter adc jbe icebp flds inc push aaa out pop andb negl movsl push mov int3 add js scas cwtl pop outsb xor sbb adc sbb adc (bad) cmc cwtl mov out add add shrb inc pop call fisttp jnp xchg aas or jae xchg xor push adc or fsub enter adc push cltd frstor lret scas inc fnstcw adc jo push mov xchg (bad) test gs xor leave add adc add mov rorb ficomp test adc (bad) or subl and fildll xor ret sub jno jge adc mov repz add add adc mov lahf stos push mov mov dec pop sti mov mov lcall jno inc sbb cmpxchg clc xchg pop sbb rorb inc push shrb mov add push std icebp adc pop cmp mov xchg mov lret mov adc push int3 xchg jae cli adc lods jle leave pusha adc add loope adc stos test xor lock mov add and dec mov cmp sbb sub mov xor xor sbb imul cld push dec cmp add aam adc adc push pop outsb push pop repnz sti (bad) std adc in mov sarb jno adc and es test jge clc pmaddwd ljmp sbb mov data16 cltd in dec arpl pop call and lahf cmpsb mov adc xlat xchg pop adc or clc mov ljmp test pop rorb inc pop rorl jmp cmp adc push add jp mov jge pusha out sbb or rep add and outsb pop sub adc das push push xchg lock or shl or push pop cli mov adc mov sbb shrl lcall aas ss adc lret xchg adc dec lds xchg stc add out and jmp mov outsl popf lods mov or pop adc mov adc cmp dec and xor jae mov mov insl inc lock test add ss jp mov mov test dec mov xor fsubl test sar adc rol sub mov decb (bad) sub pop adc ds inc dec mov fnstenv pop rclb aam adc mov add js push std adc pop inc adc xchg hlt push (bad) mov jb push pop dec adc mov push adc xchg repnz loopne jae mov cwtl xchg jmp outsb sbb add ret aas push mov xchg jmp mov les cmp pop (bad) dec push pop mov mov mov mov fcmovb cli xor repz fisubr (bad) or sbb adc xchg mov repz in mov (bad) aaa ret xchg adcl xor test les add mov enter sbb add adc aaa mov adc leave sbb out and adc inc mov lret push sbb sub addl mov mov xor push mov loop adc stc (bad) mov incl pmaddwd adc rorl rcrb sbb repz pop clc mov rol push pop adc popa orl cmp cmp sub xor mov inc or popf enter inc mov xor jmp add clc mov lods jb movsl inc add push jno xchg add jo enter (bad) pop (bad) adc adc xor int3 push mov mov inc je dec sbbl xchg pop test sub fmuls or push pop pop sti adc cmp (bad) push cs sbb adc icebp arpl (bad) popf push xchg outsb add cmp aas jb xchg cmp rorb in or add mov dec adc ret adc (bad) (bad) or cltd aam xor (bad) (bad) jbe fsts adc sbb jmp in cld sbb negl push mov repz jmp or push pop jl pop dec test gs or xor adc arpl repz test or outsb adc mov pop mov test fwait jmp stos ret sub pop ja or out pop jno lahf adcl fistpl (bad) (bad) fwait push mov daa mov adc mov push xor iret adc push pop xchg and jle (bad) xchg repz dec nop cmp or ds pop mov mov mov xor lahf test into push jmp adc jle scas adc je js jg mov inc push rcr jle repz push ss add dec jno in or add arpl mov sbb push sbb hlt or adc (bad) inc or adc fdivrs jmp push data16 outsl loop (bad) pop fcoml dec fs adc mov stos mov cwtl jge iret sbb xchg mov add repz mov ficompl lea mov nop mov shlb add dec adc push fnop movsb or pop sbb jne or daa lds shl mov aas mov in dec and adc adc mov or cmp imul popf xchg sbb es int3 cli adc cmc inc das mov adc mov mov push push add push and adc adc adc ds mov scas inc adc cwtl into pop push aam stos loopne mov sbb rclb cmpsl sahf xchg cmc sarl repnz pop repz cmp pop loop mov and in or xor nop or jo fidiv iret lods or cld push adc push sbb lea nop jb pop fwait xchg add les adc repz cltd adc dec pop into jo jmp mov stos movsl adcb cs or gs and inc adc test test adc mov inc cmp mov lcall sub jg imull sub rorb pop add jno scas roll dec dec rcrl shlb cmpsb add xchg jo adc xor mov sub lahf scas mov mov sub dec mov dec adc adc xor les imul sahf bound sti std jmp mov adc cmp adc push adc add xor (bad) bound in xor xor jle out arpl ret incl clc sub cli adc jbe push or je mov or and lods sbb stos fs dec adc cli cs insl xchg rcrl lcall adc or and stos pop jmp xor mov push pop lods stos add (bad) into insl mov jg insb arpl icebp adc pop inc (bad) in xor adc out or insb cli into jle rorl int3 add dec fs add lds xor adc orb or ljmp dec cwtl and test out mov lock or in fwait xor lret into std fldt imull shrl sub or pop pop adc jne push je stos jecxz lret stos adc jge (bad) dec adc and push xor in adc je jle out jmp adc mov xor lock js stos popf movsb repz in aaa pop inc cltd sbb jbe adc cmp (bad) xchg ret jno pop dec xchg and sub adc lahf adc ficompl cltd mov hlt (bad) fsubl adc pop cmpsb adc test push pop mov (bad) stc repz xlat mull stos shr mov mov dec xchg and pushf iret ficom cmp adc shlb adc outsl xor roll inc pusha shl call out push sbb out adc sar xchg in adc sub sarl adc jle insb shll sbb lea mov mov mov cmpsl xor pop push enter jae js stos jns aam jo out sbb pop mov xor adcl mov sub imul adc xchg sub out xchg jmp stc dec ret xor sbb adc adcb fisttp das cld mov xor or (bad) lock cwtl adc clc ljmp in push pop xchg fisubr (bad) jns lods inc xchg cmc pop pop adc cwtl (bad) jmp adc cmove (bad) icebp adc dec jle dec mov sub cmp std push ja pop (bad) (bad) xor cltd loop cmpsb popf adc lcall add mov mov adc or mov xchg shr fcoms and adc loopne dec pop subl push popf pop mov and sbb dec xchg fsubrs sbb into std push int3 mov sbb pop scas mov call les pop stos dec test jnp mov inc push mov adc ja xor test pop out mov adc ss adc sbb (bad) mov addr16 je rorb sahf shr inc and loop mov lds or (bad) std adc js pop or inc outsl adc (bad) addr16 fdivrl test push mov adc xor outsl lahf adc sbb adc test add pop mov mov adc xchg mov repnz adc sub sub xor sub add dec adc cld jmp fwait sbb aaa mov out pop jge pushf or mov xchg mov cmp sbb popa push xor shrl sub lea mov jg nop icebp add jnp adc xlat iret inc hlt lea lahf mov lock adc dec into aam sbb jnp arpl jge div (bad) sbb sbb gs insl jns adc loop jbe or sbb and xor inc xorl adc jmp in adc cmc aas push fld1 mov ret sahf adc adc sarb adc out mov pop jae and movsb xor cwtl outsb pop sbb xchg or jmp xchg jbe jle add xor dec mov adc adc or xchg cld adc lock xorl fisubl pop add or js and cmp lods arpl mov icebp jb adc mov movsl das xor out sbb dec add inc test loope inc insb leave popa movsb pop push jbe mov inc notl dec clc mov loopne fsts (bad) fistl jb jge dec or jne sbb inc sub adc fcomps mov loop fwait sbb xchg push ljmp or nop push popf loop jg dec jnp (bad) repnz mov std dec push mov repz into out mov mov jno push inc or test sahf dec sub jo push dec arpl adc out jne adc push fiadd adc jno movsl dec or add jmp push mov mov mov testb and dec adc adc xor adc mov cld hlt jbe adc (bad) jl lahf mov jle mov outsw rcrl cli fist jno adc sbb jae scas and jecxz mov adc shl jmp (bad) syscall add sbb or jo or lds sbb sahf dec xchg mov scas (bad) mov xchg sub xchg outsl (bad) shlb test (bad) aas and (bad) scas dec hlt adc ret je adc aaa jne xchg xorl dec call and out gs je pop icebp mov mov enter daa lock inc adc mov xchg jecxz sub aas fs xchg aam adc mov sbbl lds mov shrb (bad) outsb adc adc xchg outsl mov movsb inc inc adc or rclb pop or mov rcrb push adc outsl fwait pop jns mov adc pop sub sub push addr16 xchg test andl adc (bad) ja inc cmpsl dec adc jb out mov (bad) push dec (bad) jp jno sub and adc ds sarl loopne out jbe test iret dec pushf or mov push add adc adc pop (bad) and les xchg mov add jp jmp pusha inc in stc adc test rcr mov inc dec add call (bad) fisttpl xor adc xchg nop adc into sbb je sbb iret push (bad) sbb adc push inc sbb aad xor pop fisubrl cmpsb mov das call jl inc dec dec mov sbb bound adc push cli out mov push test inc and xchg mov in mov xor jo adc insb add pusha hlt rcr insl dec inc out fs std fisubrl push inc inc repz lods or jecxz or mov adc sub mov adc inc popa loopne mov arpl dec sbb pop add fist and push adc mov pop inc mov sbb sbb decl push fildl adc shrl adc int out mov (bad) adc ja imul mov pusha or mov mov mov jae (bad) sbb repz mov imulb dec sbb pop inc loope push pushf jne adc or je scas mov adc test add sub push andl rolb push lahf scas loop daa fwait clc and adc loopne or (bad) jmp pop clc ds mov mov aad push and insl sbb sub mov inc and pop clc xchg pop arpl mov ljmp xchg inc out (bad) pop push push sbb lods inc mov mov fsubrl mov or ret ror xor inc add rcr sbb push pop push adc fist jbe scas addr16 ljmp add add imul aam ljmp jno pop adc in fwait inc popa icebp xor mov in inc or mov cmc flds repz (bad) mov decb pop hlt or pusha test add mov rol adc xor pop add mov shl sbb add repz jnp mov divb test insb jecxz push aas xor insb (bad) push add adc push jb mov test mov movsl and cmp hlt fsubr adc sbb xor sti cmp mov inc and inc outsb lea js daa (bad) xor rcll xorl push rcll mov mov addr16 or mov stos mov mov adc xor rcrl shll and int cli (bad) mov add adc push mov (bad) mov lret jl int3 sbb jne and adc int adc sub insb xchg adc push std (bad) rorl cmp (bad) icebp cwtl and push out sbb out fs pop adc xchg push xchg cwtl jno push jo sub pop push mov outsb loope lock adc dec mov sbb push ror dec clc nop popa (bad) jmp test xchg fldenv or mov jnp push inc iret cli or and ficoml adc cs (bad) leave ja and adc in push push push adc sub cmp fdivr xor xchg repnz cli inc ret mov add dec lods repz cmp xor add jmp xlat adc imul mov pushf add icebp pop mov shrb insl sbbl cmpb adc xor sti adc (bad) scas mov out jns cwtl (bad) mov jae mov adc pop jl popa and addr16 jo fsts adc hlt pop cld imul push mov in or xchg mov (bad) icebp jp mov add xchg adc test pop adc arpl psubsb or lods pop dec jmp adc ss imul sbb leave outsl jbe rcll add fisubl dec mov mov jecxz addr16 sahf int adc rorl arpl mov xchg not xor insl add int3 in lret jmp push aas or out xchg dec bnd xlat lds (bad) xor sbb (bad) xor and inc adc jno js,pt adc fwait (bad) xor rolb push lock pop xchg or call push inc jecxz out stc push repz jno,pn (bad) push or lods mov dec or mov (bad) repz bound mov adc pop nop add cli or popa (bad) sarb and out fs inc and dec aas mov mov mov push lret or or adc les enter rclb xchg inc std cmp ret sub dec rolb adc ljmp adc push pusha in (bad) ja mov and adc iret out adc add sbb test std (bad) rclb jl cmpsl add hlt sbb bsr jle mov das adcb fildl push push pop fdivrs inc shrb ja adc xchg sub pop fwait repz mov dec jp adc dec sub fstpl (bad) loope out adc sahf negl dec push dec fnop scas icebp jmp adc mov addr16 movsb xchg inc xor fs mov xchg mov into or faddl js jg fcoms dec inc dec adc jecxz sbb lods je and sbb adc xor outsl adc hlt push adc pop fist es push mov rcr adc pushf mov adc or xorb pop adc shr hlt idivb call lods xlat mov xor (bad) jp add push push adc lock cmp pop cmpsb repz fstp push xchg idivl cmp rcrb jge sbb and adc dec mov xchg mov inc sub pop xor call adc pop cmp fs (bad) stos idivb mov cmp adc in pop stc shrl mov gs cmp xchg pop aad xlat ljmp jg fdivrs shll adc ret mov fldt adc pop mov (bad) push inc int xor in loope (bad) or psubq cli adc (bad) (bad) add xchg dec movsl jecxz rcrb jb push repnz fisubr push xchg cmpsl adc mov scas sbb push cmc sub in mov clc adc nop pop pop fs ret adc push (bad) lock std pop nop popf dec dec mov adc insb shll (bad) ret scas repz dec adc je mov movsb add jmp adc mov leave nop cwtl adc in jae push jmp fsts mov cmp loopne xor daa push (bad) adc stos jle mov mov and xor insb mov sub add xchg lds (bad) cli fcoms adc popa inc fwait push aam adc jmp xchg adc lret mov push sbbl xchg mov (bad) adc fisubl adc int3 add adc lcall fsts jmp adc push adc adc cli sub and imul test adc adc sub xor lods in adc inc jno nop dec and mov dec mov lock sub jne jne dec and aam cmpsl mov lahf addr16 test arpl inc out lret mov mov jnp mov ret bndstx adc push jno push mov dec cld adc xor jno aad sbb jne test rclb fistpl sbb mov arpl xor or add lea dec mov out xor mov lret cwtl aam jo lock adc insb enter movsl dec pushf mov mov jae jmp sbb or stc adc fs clc xchg jo insb mov gs add adc fmull addb adc cmp jb repz push xor fwait xchg pop rclb pop add mov leave mov dec sub sbb adc fwait adc and pop sbb xor enter dec pmuludq mov mov fnstenv xchg add xchg fmuls das mov xor xor xor push sub push add mov adc lcall push mov arpl sbb loopne frstor (bad) xor scas adc xchg cltd adc int3 in loopne xchg add dec (bad) and sti jg addr16 mov lock std mov pushf add sub xlat inc int3 adc adc mov inc adc repnz ret adc pop int3 sbb sub orb out jne or mov mov mov dec pop testl loopne test in mov mov shrb fcoms stos nop repnz enter jbe xor or mov jne jne adc or cmp adc iret cmp sbb jmp dec leave sub xchg mov sbb into mov xor mov jo movsb mov pop shrl pop sbb push roll mov push cmp scas rcll add xchg clc sar add adc cs push lods adc push cmpsl in out adc cmp adc iret (bad) movsl ficompl sbb adc nop fcoml mov mov cmp outsl adc lret pop sbb sbb int3 jns dec jp sbb xor cld xchg hlt imul sbb rolb cld jns pop das movsl pop lcall xor fisttpll cmp and adc inc mov sbb stos sbb mov into movd imul dec adc push lds or inc in sbb adc dec out adc push testb xchg mov dec adc (bad) pop gs mov pop fidivrl jecxz sbb adc int sbb (bad) add clc frstor fist pop and adc mulb ficom js test jl dec adc and notl inc mov mov sub xchg xchg adc int out cld lahf adc (bad) mov and imul (bad) mov test arpl dec call loop sbb mov stc push das add mov jmp cltd add std adc int or bound adc ficom jmp mov ljmp xchg adc (bad) push push adc fsubs dec or pop mov lret xor mov int3 mov adc mov jecxz loope sbb mov pusha mov mov add xchg push lods (bad) scas popa add cmp xchg adc js xor mov call jb ret push push mov xor sbb iret (bad) nop cmp faddl xchg push je push pop sub imul call (bad) xor or add xchg mov add inc scas je icebp aam cmp sbb jno xchg sub leave aas arpl mov jnp xor dec mov decb xchg dec dec add xor jmp les mov or incl cwtl test adc fcomps mov mov push pop out inc xchg adc (bad) popa inc add sbb add dec mov in add int ljmp rcl xchg out aas mov sub adc int3 or push lahf push adc xor and daa adc push dec dec nop mov leave mov adc jnp out js adc (bad) fstpt (bad) jb mov movsl lcall push (bad) adc out xor (bad) jae scas xchg dec xchg dec mov mov imul mov les xchg dec outsb add std add push jg mov in int3 jp (bad) roll push les rcr fwait sub fsubrl repnz loop inc cmp arpl push (bad) andl sbb lods hlt dec orb (bad) (bad) pop mov sub daa adc repnz aaa scas jae,pn sbb and pushf cli push or bnd xchg adc sbb pop xor push jmp inc sahf xor fadd push jnp insb mov xor mov es pop sbb rcrb cltd xlat in (bad) adc jl or out mov jg insl sbb adc daa cmp dec cmpsl rol push inc mov inc subl leave inc icebp xor mov sub fcmovnbe cmp pop cmp cmpsb push xchg cmc int3 adc cli xorl loope xor cmp rcll add dec adc cmp add aam mov (bad) lahf mov or inc call ljmp push or pop mov cmp xchg xlat pop add outsl and jns adc mov push lock ljmp mov jbe xor push psrld pushf out in sbb fs popw xchg jo cmp aam fsubl mov cwtl push adc inc lret inc xor pushf and mov xchg (bad) adc push aaa in dec dec jbe clc rcrb sbb jmp lods dec decl mov jp jmp aam stos movsl (bad) clc cmpsl adc dec push daa lahf andb dec adc shrl xor dec or xor add mov push gs arpl or jnp and rcll mov inc insl cmp sub pop add and adc inc movsb in sbb sti (bad) cmpsl dec adc jecxz sub adc or mov leave and shl fwait pop inc (bad) xor sub adc inc mov daa scas out repnz push (bad) notl xchg loopne outsl cltd and bound fcmovne jb or lcall mov inc lea xor into jl inc in fistpl das fisttpll in cmp fist insl adc int3 leave cmp add jg xor lcall int3 adc inc mov push stos shl lods cs jb cmp out xchg inc aaa hlt pop sub dec test ds push adc out cmp sub mul call jg adc fmul ficompl inc mov fs or jne es outsl or adc cwtl push push jecxz mov add jmp cmp mov cltd (bad) das jge mov mov dec icebp repnz cmpsb add sbb adc frndint hlt jge cld mov in dec les cmp inc mov (bad) lcall xor pushfw xchg pop xor scas lret jb mov sbb cltd js bound and sub repz xchg repz enter adc outsb fsubr xchg (bad) cmp adc xor leave mov mov in movsb sahf pop dec sti adc inc mov mov lret xchg and inc es popf iret dec adc add jp imul xor dec adc push sub xlat jne and mov mov xor sbb adc xchg sub jge popa mov or jne adc adc push adc mov and movsb mov mov fimull xor and xor jl jnp inc adc and sti fiadd and lcall jmpw outsl push push lods adc in inc fs rep in fnstcw orl hlt add xor adc adc xchg jno sti test and fadds adc xor adc sbb mov cmp mov (bad) jne (bad) adc mov mov xchg xor cld mov aaa dec sub mov loopne mov mov ljmp adc punpcklbw xor dec into stc (bad) cmp xor je push add fwait repnz (bad) push repz jbe xchg fnop (bad) or adc arpl (bad) xor push adc pop andb out popa rcrb addr16 loopne pop inc push adc xchg dec push adc push (bad) es inc test inc adc dec mov mov pop (bad) lods xor (bad) sub inc push sti inc repnz loop xor or test lods loope or test adc mov sbb push jp aad adc adc adc push cmp lret xor xchg mov movsb fistpl enter sbb outsb sarl je clc add adc notl sub add inc lea cmc push je sub incl or ret sub mov aaa mov inc adc or dec ljmp pop call adc mov adc int3 sbb adc pop mov sub jmp aas push pop xor xor sbb mov mov aam lods jne adc aas mov push adc cmp leave xchg (bad) popf mov dec clc andb jbe ljmp sub cmp (bad) ficom aaa iret mov or dec fiadd adc repz jmp mov (bad) cmp leave or andps nopl and iret jg adc xchg popf xchg mov xor push adc mov fnstenv int jns and xor mov xor movsb dec adc icebp sbb fldenv mov pop add lock adc sbb adc mov rcll mov pop lods into jae test int sbb xor add (bad) ja rcl mov stc test adc (bad) int3 ret repnz inc adc adc mov xor inc adc push push xchg lret jmp adc test jbe bound repnz scas (bad) jle cmp sahf stos adc rclb mov sub adc loope mov mov pop lret je inc inc jo jl in jge pusha xor fs jb popa adc dec bound xchg xor test or jle push mov add outsl pop fidivr lea movsb adc clc xchg jp mov cmp and mov sub adc in out sub mov adc mov cmpsb mov push sub movsb pop adc fsubrl repnz xchg cmp fs add mov dec xlat clc push or inc movsb push and adc lea mov inc rol mov push dec fidiv mov mov sarl popa cltd addr16 in inc push mov or and or adc mov hlt fbstp ds xchg mov mov pushf inc aas mov mov mov pop movnti das adc mov jge push aaa adc inc dec inc shl scas (bad) or out leave into outsl adc xchg test push adc test inc cmp adc stc mov test push xchg adc or mov jecxz xchg orl in cmp and int ds fldenv (bad) dec or js dec mov hlt or ljmp shrl xor or std mov movsl ja cmpsl addl dec lcall aam ret dec in jmp add movlps inc adc sbb call xlat cmp in dec sub add stos or into mov mov adcl or or stc lret rcll (bad) mov adc (bad) enter adc xor push adc dec stos ret push rcrb adc sbb pop jle adc je js mov popa dec stc adc sub das and mov add xor cmp or iret xor fsubr rcll adc or push dec lods inc sbb in icebp push add and shlb lret add je testb mov add rclb (bad) and (bad) aaa mov mov cmp repnz dec add inc sti lods adc icebp push mov push jbe pop or mov sbb ss dec mov xchg sbb jns jb add adc (bad) andb sbb es cwtl ficoml pusha es (bad) mulb cs pop jbe cmpsb rclb xchg or pop lock jge or cmpsb (bad) shrl out xchg adc xor lcall mov loopne mov fiadd wbinvd loop in lds sti sbb mov imul js xor adc bound out fdivrs into or or jae mov sub push jne xchg stos out cwtl shll rcll inc push int3 cmp xorl sahf movb test inc xor fstpt imul fldl xor test adc std (bad) jbe adc aam jns inc xor mov mov push adc xchg popf mov insl imul sbb fnstenv (bad) mov xor enter (bad) fmul adc (bad) pushf fwait pop or push test andl (bad) adc popa push scas xchg aaa pop add push sbb xchg hlt or pop push decl pop mov mov xor sub imul inc xor addr16 ficom or and in outsb shrl adc lret inc adc xor in sarb cmp ret dec dec mov jns popa jecxz jl dec notl dec das jne xchg or stos enter adc fdivl mov adc adc push sub fidivl pop jmp adc xchg sti sbb and jl pop xor xchg add cmp sti cmp movsb push jbe add mov jb das mov push and (bad) mov pop jno mov xor push adc fidiv adc dec popf test cmp mov repz fxch sbb adc cmpsb xor mov mov or mov push adc (bad) out pusha aas hlt xor call adc int mov loopne sub add inc movsl add pushf cmp mov popa dec mov jle mov cld (bad) insl and pushf sti outsb sub repnz test mov insl pop movsl mov mov pop out xchg adc mov into sub mov ljmp mov and outsb cmc imul aam outsl gs lahf mov push mull rclb or lret loope pop jle add mov pop jnp dec ret and icebp sbb aaa adc mov sbb mov rolb repz or ficoml ja,pn hlt aas add push bnd imul xor mov inc daa mov mov (bad) adc cmp dec adc pusha xor adc aam repnz push push clc adc ja stos ds mov adc addr16 adc (bad) mov loope lods jnp mov sbb xchg xchg popf adc pusha icebp adc lahf sub cltd fmull into sarl pop adc sub fwait cli scas in adc mov adc sub inc or adc pop xchg adcb das call rcll leave (bad) lcall pop (bad) neg sub jno repz dec test sbb sbb pop mov sbb cmp pop xchg mov mov xchg sbb ficom out add xor push clc sbb lods dec or adc sub movsl popa fwait stos movsb adc lcall and sub mov shrb sub adc loope pusha mov xchg outsl push scas enter xor cmpsb add sbb in adc shll mov jp push fildll inc jecxz mov rcr das scas lods or insb fdivs lahf iret (bad) mov and adc out mov (bad) out mov daa push jno (bad) adc lods insl std repz nop cmp rcrl cld mov adc sub dec inc test adc test dec fist sti mov es jge push lcall dec xchg adc push sbb dec ljmp adc jne pushf push pop pop aam dec add inc (bad) sbb out cld les adc lods adc aas (bad) mov cld dec xor add (bad) sbb adc insl add pop je (bad) xlat jns aad jne cwtl repnz jecxz les mov clc nop inc inc push xor mov or cwtd adc insb fnsave or loop sbb fdivl sysret push adc mov (bad) or push dec int3 adc out xchg adc pop rolb cld fmuls shl not add add or jle sbb stos xorb movsb ljmp mov adc jnp mov mov xor mov xor pop sub lcall and mov dec loop stos outsl push rol add sbb in pop test adc adc mov pop cmp cmp shll and inc pushf inc xchg adc dec mov xchg sarl repz cmp stos in xor test jo pushf sub or lret out pop fidiv inc loope jmp mov cmpsl nop adc or push xor dec sahf stos mov jns adc scas sbb jmp pop ret jno add cmp je push add mov jl hlt (bad) dec cmp lds (bad) les push std adc clc (bad) inc cld cmpsl and mov pop loope adc cwtl jl cmp add test xor in mov push pushf adc sub and adc scas push mov adc mov mov mov inc movl out aad ja ret sbb mov in adc pop stc dec cmp mov dec fisubrl cli mov in pop stos cmp inc pop iret push aam sub sbb sub dec sbb mov dec jle mov and imul or jmp sub add mov rclb or dec in add or and jo cmc push popf inc fstpl adc push mov mov icebp push push pop sub nop fisubrl or or push and adc loopne out fs adc dec insl xor ret adc addl ljmp adc std daa rolb out xor andl dec mov std and sub lds test sub fwait pop jg jle pop mov adc sub adc test mov xlat mov lods pop cmpsl adc adc movsl mov xor xor inc iret adc jnp fsubrs add jae adc push pop rcll cmp (bad) adc pop ljmp jbe jno mov sbb lock fmuls adc movsb xchg sub pop out das push pop mov sub mov xchg jnp mov mov xor or cmp cmpsl add cmc cmpsb bound pop add inc dec dec xchg lock xor inc clc mov dec rcll test dec adc mov xchg xchg dec loopne shrb pop mov sub xor or jae sub cwtl sub sti shl stos mov andl push and mov xlat jecxz mov pusha outsl call adc push jl pusha rcll and cmp clc and adc loope ljmp mov imul popf xor inc adc or negl (bad) xchg mov loope mov test adc mov adc mov cmp dec cltd mov cmp push jge pop mov test and xchg adc xchg nop lds lods mov add jbe jl sbb sbb adc push sub xor push or add lahf sti push sub adc push adc cltd adc adc push jecxz or sbb xor adc out pusha add lret in mov sti test mov outsb je pop testb shll (bad) push xchg repz cli cmp mov mov adc dec test jbe xor iret mov pop dec int add sarl aas mov dec mov add push or nop or dec jle ljmp adc int fisubl inc popa adc and cmp std or pop adc fmuls aaa xchg adc add xor addr16 jp pop enter (bad) shlb or fs outsb aad aam xchg xchg cs xorl (bad) imulb push sahf jns pop and imul mov cli xchg aad loop push adc movsl loopne push daa mov pop iret push push push push xor dec xchg mov add adc jnp call add adc in mov sti sub loope pop or fidivl ds rcr sub adc ret pop dec mov (bad) cmpsl out pop pop test lock mov mov lcall mov xchg popa aaa subl movsl xlat adc push icebp push je gs nop lock jecxz jne cmpsl mov sbb jge inc and test shl and cmc lods in adc jns stos repz adc mov and ja repz mov or sbb icebp adc movsb push aas fist sub in pop push rep lds xor je lea ficoml lds xchg ss (bad) jmp gs stc mov or adc lret int3 fist dec xor iret pop pop mov stos stc sbb or in pushf loope push frstor sbb adc (bad) fidivl inc imul adc into or hlt sub add mov cmp lcall cmp inc stos rolb xchg add add mov push adc pusha add adc loopne insl xorl fnstenv ljmp mov (bad) push sbb dec xchg adc jb adc cs adc sub and addl pushl adc mov cli daa xchg ja loope mov adcl outsl imul loopne inc rcr ss mov push jns adc int3 cmpsb test cmpsl scas add or movsb hlt or insb mov mov daa sub jns add mov push jge push pushf mov jl pop xor mov addl xchg stos mov pop ja jg les xchg adc xor sbb js adc xor add jns adc mov xchg in jnp dec into sbb xchg mov insl xchg adc (bad) jle add add cltd mov and std mov xchg jnp dec bound dec aad inc in dec sar jo call shlb out xchg adc mov outsl dec inc xchg jmp bound jb ja dec dec cltd mov pop inc xchg pop loopne xor in and shll mov std inc fistp mov cmc mov sub lods dec pop nop clc fbstp and leave jne paddsw dec pop stc (bad) ljmp arpl cmp pop jne xor pop insb cli mov adc jg (bad) repz adc (bad) shrb loopne adc push clc lcall (bad) pop dec mov (bad) hlt lahf sbb jne (bad) aam stos in push scas jg xchg incb jo faddl xor stc add insl fcoms and test jge xor sbb aas cmp out cmpsl lock mov or mov cmp or negl (bad) mov scas shll xor (bad) into inc push dec add inc jl fdiv outsl add jbe jne jns fs and mov call stc repz adc jb xor mul xchg or mov dec in push popf ret std out cs and sbb andb add mov lahf mov fucomp inc or mov adc lds adc mov push xchg mov aad lds in fdivl cmpsb mov repnz push pop push add arpl add mov adc orl jl mov fldt adc or std jbe push mov xchg nop mov dec or adc data16 std fcoms (bad) (bad) mov hlt add pop add or ljmp jg lret shrb add js repz pushf in add call pop je outsb push xor mov imul loopne xchg mov repz into in test mov iret dec or addr16 add mov dec (bad) xchg adc popf jmp adc jle jbe sti push adc lcall adc (bad) mov cmp pop testl xchg mov adc mov xor add cmp test fwait adc fidivrl shrb inc jne adc popf jge lock adc sbb push (bad) jle adc sub sbb mov xchg mov sarl or mov rcl dec es call xlat loop adc lds cmp or lahf pop adc push int in loope pop and nop divl (bad) mov mov adc aaa (bad) test adc int and jae jge add stc into sub lods cmp adc sub aas aaa and add jo ss adc (bad) int3 sub mov je add addl cmp xchg mov adc inc add adc cmp rep jne adcl mov scas movsb jo rclb ljmp adc lcall lock adc sti or push repz dec out and push add pusha repz fwait dec outsb inc sahf dec mov negl or cld ret or icebp push std repz cli add scas decl loopne rorb push rorb add lcall jl fild adc jne movsl jno cmpsl mov pop dec inc fs negl inc outsb mov out add inc cli dec mov lret push xor lods stc jnp ret daa jno sbb imul fcmovu ds mov test repnz push adc sbb mov lret scas sbb not push cmp adc ud1 sbb adc es jo int test fnstcw dec cld adc mov dec jnp repz lods and ror mov mov aaa push out jp inc sbb lods rcrb dec sbb fimull pop push incl in adc add pusha adc push js cs insb or enter push movb lods test fldcw idiv adc jecxz pop iret mov xchg test jmp outsl or xor mov mov pushf xor cli mov lea adc (bad) xchg shrb push mov add adc cwtl lea adc leave adc cmp pop insb imul adc (bad) cmovbe mov into leave fs adc in push adc stos mov repnz fstpt outsb enter xchg shrl adc jp movsb aad lds push mov xor inc add movsb mov adc push lods mov repz jo stos mov mov ja mov jb mov or fstl imul pop jmp fldcw scas js and or fisttp movsb out jns fnsave std adc (bad) outsl cltd fidivr xor mov js mov repnz lock sub or pop sbb inc xchg adc inc shll sub repnz adc lret aas adc sbb mov cmpsb xor data16 aad inc cld adc imul mov jle insl pop lcall (bad) negb jg fwait and jae mov inc xor lds and negl jbe popl jl adcb arpl rcrl push in cmp push outsb pop adc test inc xor aam stc lcall imul call push addr16 cs rcll arpl push jg incl int3 cld (bad) movsb xor push sub adc imul rclb mov (bad) push adc sub in cli repz xchg ret icebp pop pop pop repz daa push (bad) scas out sbb popa sar inc sbb or test sbb push ljmp pusha lods into xor addr16 (bad) adc cmp adc inc jb stc inc push fcoml outsb push out push int fnop repz inc jo repnz jge addl (bad) call (bad) push stc xchg js xchg dec pop mov mov dec fildl push sahf adc out in cmp jmp sbb repnz or adc pop jno jge or roll mov imul xorl xchg (bad) mov stos mov fwait pop add inc in mov test jbe (bad) jne adc inc test fnstenv aad sbb ret xchg push aas jo adc xor fidivrl call add mov std dec xor cmp xlat les add adc fldenv adc outsb std cltd lea fiadd adc movsb mov xchg inc push js enter adc xor ljmp mov push loop pushf mov movsb fisubrl inc fs xchg cs cmc inc jp mov aas data16 test add adc sti fstps mov (bad) add add ret stos cmpsl fildl ljmp dec lahf ja pop or jne xchg pop inc adc pop and pop cltd dec push je std dec jb pop iret xor inc adc mov adc push adc lock mov mov inc mov jb mov jno mov fisttpl loopne add xchg adc jge mov (bad) cld inc hlt shr (bad) das pop movl ljmp fiaddl adc cmp fwait dec clc imul fsubr movsb push mov inc int3 sbb adc addr16 cmp adc nop ficoml incl jb mov sbb fcoml adc hlt js test dec (bad) idivl xor scas push ljmp mov out cli pop push adc and js ss or mov add leave jl add fidivr xchg imul insb repz cmc (bad) (bad) jne sbb jnp pop add mov mov cmpl into loope lock ljmp push jnp sbb push insb pop nop jge lds mov dec in aad test adc push push sub jmp pop cld pusha into adc repz int xchg data16 repz (bad) leave xor mov pop push rolb cltd ret cmp dec sarb dec stos cli cmpsl cwtl adc adc mov xlat adc movsl scas cmp lea and scas insb pop adc sub fisttpll cltd dec insb pop mov test repnz pop mov push push dec fs pop ja call push xor fmuls les add (bad) sbb mov jo adc ret xor loopne mov sbb jbe lahf adc push xor push outsb dec imul hlt pop lret rclb xor clc rclb fildl repnz xchg inc inc add out mov sbb push in push mov jmp fmul repz lods mov pop xor adc and stos ret add jns adc arpl in out aam stos pop (bad) loope xlat (bad) xor fcoml push ret mov and dec adc loop ljmp push push xchg fstps insb dec or jbe fdivr or push out (bad) aaa pusha and sbb adc test imul adc outsl (bad) out push out call in fimull stos mov inc jle fdivp test pusha mov sar mov mov leave (bad) jno or jmp xor dec and repz xchg (bad) cmp fmul mov pop jmp adc je pushf mov xor adc dec adc push adc dec or movb test lds xor hlt scas adc out mull fadds mov les sub inc xchg push xchg int rclb cmpsb incb insl movsb adc mov test pop imul loop adc dec rclb int xor (bad) push sti xchg pop les cmp (bad) in scas jae mov mov jge push repz mov das or rclb pop sar jns or (bad) push in dec ds in mov adc jecxz adc lret (bad) cmp push lds insl cwtl pop mov fbstp dec out sbb push sti rorb pop cltd outsl push jns insl mov out or loope adc fbstp inc xor idivl push in mov adc imul mov (bad) pop mov xor dec lds insb cmp adc lods add jmp adc sti js imul cmp rclb in jns or sub jmp ja pop push xchg outsb aam or inc push adc test dec stc enter je inc xchg jmp (bad) shl dec add fsubrs (bad) sbb mov (bad) (bad) aad neg push mov xor stos jb pop dec adc out adc je push mov out pop or aas adc (bad) hlt (bad) sbb std adc mov mov pop es jne adc outsb mov ret pop xor dec sbb inc das outsl push lahf jle cmp fs icebp lret sti dec rolb es hlt adc lods aam mulb add dec mov adc adc adc add inc lcall test adc pop sbb ss or ljmp xor incb movl adc dec (bad) out add xor pop cmp cs sbb push js,pt stos jnp pop adc adc inc or stos jns call mov mov mov stc push stos push inc fcompl xchg push sbb insl inc adc adc (bad) out sbb fldln2 imul pushf add mov add fnstenv jne cmp adc pop je fnstenv outsb test or shrb loop inc lcall jp repnz pop (bad) jo cmovno jecxz repnz js jecxz sbb adcb adc test lret cmp decl pop sahf adc sub adc mov idiv data16 push mov sbb dec outsb or out std insb dec imul jmp push and push ljmp xlat je std and or js cmp test adc test pushf dec lea aad popa inc fildll adc bound xchg xchg faddl scas (bad) or push adc add inc mov out adc add mov movq sti shr pop add repz data16 adc in adc xor and dec cmp stc fs outsl xor fsts and mov push outsb gs in into mov sbb insb adc pushf push les dec je into adc push sub out adc jmp push cmp iret in xor mov cmp and (bad) testb cmp cli mov mov adc cs call jge sti sub or outsl adc xchg jp clc mov adc jmp lock inc jbe adc sub ds xchg jmp add pop jb push sbb xor push in pop repnz pop (bad) jmp sbb dec xor jnp out orb lahf cwtl xchg adc out add aam jno ficom add pop stc dec jns repz jl popa pusha xchg adc mov pop movsb adc or sbb cld cmp notl ret into out jmp xchg pop jns push jg adc rcrl push sahf adc push dec push pop in imul test adc (bad) adc sub dec push cmpsl (bad) mov or xchg movsb adc mulps adc cmp into or cmp (bad) in pop mov add push popa dec mov rol inc loope movsb call adc hlt pop (bad) stos call jno adc (bad) mov sti pop adc pop insl les and mov push fdivp sbb nop pusha dec mov or adc in pop insl xor mov mov in loope out sub mov and adc repnz and hlt push mov adc (bad) mov adcb sti lds push adc adc dec cli rcr mov mov out inc in xlat xor adc cmp bound sbb icebp dec adcb pop add adc rorb mov insb dec jb xor push mov addr16 out (bad) insl popa adc movsb in pusha sub or ret adc jns pop fistl dec cmp xor inc outsl mov inc into sti mov stc fidivr inc loop notb adc adc jecxz sub frstor rorb movsb fstpt leave cmpsl hlt jmp xor in sbb or pushw mov cwtl pop mov adc pushf (bad) xchg adc xor push sub inc xchg push mov loop push mov cmp mov cwtl out pop ds jae sti stos mov lods xchg sub ljmp stos mov jo adc ret mov xchg nop pop sbb cmp int3 jg xchg add adc movsl mov add aam insb sarb cli xor add adc xor fldl pop add mov lock pop push push call adc add out jle sbb test pop add push cwtl dec adc inc sbb mov inc adc imul repnz dec jecxz xchg dec mov inc sar jb mov jae je adc clc push hlt and pop push lock pop xorl lret xor mov mov out xor mov into cmc mov scas and in stos lock out fdiv adc stc push sar scas xchg inc andps adc jmp mov push dec nop rep mov dec rclb push pop loopne test fadds rorb cmpsb clc push push cmc lock push out push mov ret sub or (bad) cmp daa fiadd repnz adc scas lock adc fisubl arpl call adc sub inc pop mov addr16 call add test or adc push adc aas addr16 imul cmc mov insb rolb adc (bad) out fistl into mov out jo out mov xchg leave xchg push jne add mov dec popf stc je xlat (bad) call std roll jg loop jnp inc (bad) popa jp adc icebp fcmovb and cld pop (bad) xor xlat (bad) mov and pop notb inc repz inc or repz jecxz outsb mov mov cld cmpsl pop xchg stos test xchg adc int3 adc out enter fwait cmp inc adc rcll cs adc push cld xchg push pop adc push into push ljmp push ffreep (bad) loope orb fcompl lds inc add adc mov push data16 mov adc jp add pop push repz adc pop or pop mov sahf jo add js push pop mov outsb (bad) jo ret adc cmpsl fisub cmc adc sbb nop es lcall adc jmp or mov adc scas cli push adc (bad) (bad) push push xlat xchg inc jmp add push inc adc jl std lds inc fucomip cmpsb push sahf repnz adc sarl jbe repnz or adc dec out pop neg insb dec adc cmp fsts jge add push and fnsave mov (bad) pop in add dec outsb inc or decb mov xchg add adc xor movsb (bad) in fcoml or xlat jbe call jmp adc lea test rolb push (bad) (bad) or loop jo adc rolb call xor lods xchg lret ss xchg fisttpl jbe jp adc xor stos adc mov decl adc out insl adc fnsave in adc xor inc in mov inc push dec adc out sub and push repz push pop xor jns inc adc rorl inc fwait out jno mov in jno bnd (bad) sbb pop adc add icebp adc dec clc cltd mov mov dec repz lret sti add adc xor inc in iret xchg (bad) daa jbe arpl or jle out mov rclb mov fisub add gs mov movsl outsl add pop lock in cmp incb leave xor adc stos pop aas jbe (bad) repz addr16 (bad) out jle insb repz aad jmp ficoml or in adc outsb les adc push jle test push push push adc dec sti adc js cltd (bad) cli adc fsubp lds dec (bad) push dec cwtl mov std add lahf jns adc push inc adc or adc push pop and adc movsl mov (bad) rcr and push cld add (bad) inc jp adc inc mov inc clc lcall cmpsl dec ret or jno xchg adc adc adc js push repz shl (bad) loop leave mov sbb inc cmc or aad enter lock test (bad) ror jg or pop dec dec jge fdivp ja rcr adc out in in repz ficompl push jmp add nop aam (bad) mov xchg movsb dec shll imul add add xchg fstpl sub movsb loop js sti push and pop push sbb fldl push (bad) repz add push and ret bound sti mov rclb dec imul or push add pop scas loope mov and loop inc push push lcall dec inc adc push pop jmp out inc lcall cltd ficomp adc cld push adc inc icebp xor insb mov sti sub lret ljmp bswap mov inc ds adc test aam lret (bad) sarb pop add adc outsb fistl imull mov push icebp decb add dec pushw bound mov xchg lea shr iret mov push pop xorl dec mov pop pop push xchg adc add push cmp stc in sbbl (bad) orb mov dec sbb repz or enter adc jge popl aad inc xor xchg imul fs xor push in push push je cmp mov add pop lahf ret fdivrl into int insl pop inc std insb inc lcall adc fldenv adc int jmp adc and adc push mov clc sub arpl enter xor stc call in lea or jno jecxz or fst jge adc mov pop adc les sbb dec xchg pusha or sbb jg mov std dec adc dec push inc adc pop push push pop push ficom push lret sbb iret call jne and out inc out adc test add or push cld mov push xchg pop or in jne lea in adc adc aaa dec fadd cld (bad) out push test pop loop jecxz repz je sub outsb and mov sub (bad) loope sbb sti test pop mov adc pushf rcr arpl push mov add push dec or push push pop or adc xlat js cmpsl or loope add fldcw gs test inc mov iret mov insl push out jp sbb adc ret inc inc cmpsl in test mov pop fildl cmp js push cmc pop rcr mov xor movsl adc jmp adc mov insl (bad) iret or adc and mov xlat nop (bad) add test repz or inc sbb cmp test scas lcall push push hlt mov mov push (bad) lret stos stc outsb out adcb adc ret (bad) data16 add xor sub or stos xchg adc je push cmpsl ja adc push adc sub adc iret ret cwtl jecxz fcoml mov fist rcrl ljmp push sub in push or mov adc js out pop or repnz inc sbb loope sahf out or mov adc out or dec mov inc push inc adc or dec and or sbb loope adc nop mov (bad) repnz insl jmp stos and rol push insb iret pop jb scas mul mov addr16 inc or xchg jmp fst int3 pop adc das cmpsl jae enter jno adc in dec lahf (bad) in repz jmp inc adc aam cmpsb or arpl dec out popa adc pop enterw fsubr icebp inc rclb roll repnz sbb inc ss idiv adc fwait pop (bad) ja inc mov loop xor les pop cmp in xor add out inc (bad) loope dec repz fisubr insl sahf lahf insb xchg push adc rorl ror xor bound popf in aad mov adc cltd out shl inc arpl sub jp mov inc add push jbe dec xor pop adc fwait sbb ja dec jl dec or adc jmp shl adc sti mov cld jmp mov dec gs inc std loopne pop (bad) scas mov jbe jae xchg jo push mov xor xchg int out or xor loopne dec push push jmp ljmp inc pop push hlt ja scas sbb cltd movsb xchg sti ljmp fstl adc cmp js push xor jno ljmp in push ficom (bad) mov inc cli dec popa int3 rcl (bad) in push test scas outsl pop call adc cltd jae jne push std sbb lahf jo mov sbb adc adc push cmc adc fnstenv cmpsl xchg rclb outsb push push adc mov or push pop insb mov inc addr16 mov add mov adc aaa jmp push adc pop push sarl ret ja jmp push repnz xchg or subb int3 out dec adc repz (bad) repnz adc jmp in inc adc push add hlt nopl fildll mov inc jbe bound cld push xor sub in shrb xlat popf push sbbb mov mov cmpsl sahf mov dec cld lret adc push push or add adc fucomp xchg imul cmp dec add inc stos jle mov push mov adc std ror mov mov jb push popw adc or pushf mov insb push adc dec push or scas mov add (bad) jb (bad) push cld push mov inc test xor popf in gs add jle repnz adc or pop jp in mov incl add xor mov adc inc je xor (bad) call or adc dec xchg push repz adc cmp leave xchg nop xor orl aaa ja dec and and out sbb push fs popa lds inc mov push push xor mov or xor shll (bad) movsb push fcompl adc sub adc pop leave lcall adc adc pop sbb adc push cmp adc fldcw mov (bad) popf mov adc add icebp or add or pop jae gs je mov cwtl lret arpl push jae shll and xor into pop adc or ja je inc repz pop sbb mov adc jns dec adc sub cmp or hlt xor inc jo (bad) dec sti cmp pop dec xchg mov adc daa in xlat sub adc (bad) push lahf lods dec bound repz jns in repnz add dec adc add xchg bound nop adc mov shl jecxz adc hlt push (bad) loop pop outsl sbb push adc cmpsl test in aad aam and sub imul cs mov shrb xor std mov bnd int3 mov pop mov hlt jo jge vunpcklps xchg outsb fnstenv or adc xor movsb repnz aaa mov mov adc inc outsb int dec push lret mov movb mov outsl push jo adc test adc cld push (bad) cli push sbb int3 push adc xor adc cltd rcll mov jo pop inc cld insl adc pop int3 inc decl adc push loop outsl pop stc fstl xor jo sbb mov add or clc jno sarb pop dec jnp jo or enter ret fidivr mov cmp mov pop insb repz push in pop into sub xlat adc pushf dec pusha mov popl jb mov je scas cmpsl pusha or add mov dec js cmpsb sbb pop lea mov loope or mov and xor or lods (bad) or outsb in enter out adc sub pushfw jo jg bound pop popa js fldl push sbb jbe roll push jp xor cltd jo aam push mov inc jecxz lret subb fs jle in fwait mov bound jb cli xchg je lock pusha or fdivrl js adc aam jbe jne push mov mov pusha mov lret or loop sub (bad) and clc outsb cld or adc negb jo pop out bound lock icebp js movsl popf push repnz aam aam inc push add movsb jl lods mov jo ljmp cli and repz jle das movsb or adc xchg rclb int mov adc xchg pop mov jb outsb mov int3 das sbb sbb add add scas inc pop lcall enter push in push adc mov pop sbb pop (bad) in fild fwait (bad) add pop inc dec cwtl inc adc inc mov add xchg aam pop cltd pop pushf repz roll pop add push add add lahf add jg push xchg add add jecxz icebp jne repz (bad) repz repz je jne adc xchg movsl mov xchg ficoml (bad) xchg insl (bad) xchg and xchg mov xchg aam xchg mov xchg icebp xchg sbb mov sbb mov and adc out adc cmp adc fisttpl push add pop js push fwait mov xchg adc adc test out insb test xchg aam pusha cwtl pop jg pop (bad) pop pop mov or pop idiv pop adc mov jecxz dec push xchg ficoml jnp into pop push pop jo mov push movsl nop push outsl mov sub lahf stc push mov mov push adc adc scas lahf rorb push adc adc adc lret adc or mov adc adc adc inc adc call pop mov ja pop and lret add outsl jecxz dec push (bad) insl push cmp aam sbb or dec loope push cli mov sub xchg mov scas enter pop mov hlt repz icebp sahf (bad) repz xor (bad) je pop loopne push push cmp mov cmc jg mov adc push adc repnz rolb lods out fcoms (bad) fiadd bnd add xchg mov shl sbb stos sbb sbb add jns jecxz int3 push mov or cmp repnz xchg sbb xchg aas mov or popf xchg pop out rcrb dec jecxz pop call jnp xchg ret inc mov lods nopl jo rcll jnp loope movsl lds jne pop repz (bad) in mov iret adc loope add fnstsw rolb popa pop mov roll adc or xchg jno das lret cmp (bad) mov xor pop add push std and fdivrl fcmovnu cli fstpl out ret out jnp sub adc fcompl fstl jp out fwait or insl jo inc test adc dec sub sbb adc es dec jbe pop adc ret outsb xchg xor xchg jo mov cmp jb push adc push lods xchg sub inc add movsb xor push mov fisub roll daa jnp repz test mov push adc cmpsb or ficom sbb push pop loop adc pop add out std (bad) mov dec jle add aam mov in cmpsb xor cltd sub loop or out adc mov push stc push push push xor loope outsb call addr16 mov adc dec in test adc xor adc dec loopne mov adc (bad) stc ret data16 mov adc add inc jecxz pop push insb mov clc pop xchg add adc aaa jle repz jp mov push push cmp int pop dec shrb std repz sub xor mov mov lods sbb lret inc je out jge jo (bad) push inc stc dec jno lahf adc popf lock mov iret fisubr add adc (bad) xor (bad) das lahf cs ret jge dec pusha cmp push insl scas jne outsl iret mov cmpl inc or push lea adc lods shr push or call aad mov dec xchg test sbb adc xchg sti int push jo adc enter movl and mov add or or adc into test (bad) cwtl jge adc pop ljmp pop push xchg insl push sbb push jbe out mov outsb (bad) repz idivl lcall inc jecxz xchg inc bound adc (bad) testb mov js in jge dec lret rorl adc fisub inc add pop sar push lods add scas adc (bad) ficoml stc adc dec out jp sbb repnz rcrl adc aad aam cmc insl cmp sarb mov repnz mov int or xor sahf adc cmp xchg and adc push push pop je shll ja adc das mov mov xchg inc pop scas cld jmp adcl out stc adc sarb inc mov inc in adc sbb gs or adc out test pusha popf pop dec adc les shl sbb ficomp fbstp das (bad) cwtl icebp pop adc ret add xor pop mov add pop jno xchg xchg in mov sub sbb sbb les aam dec lea sbb mov fucomip mov add sbb adc cs push or sbbb cld inc push fdivrs arpl (bad) int adc scas inc xor adc lock adc xlat ljmp sti push xlat push xchg jmp insb cwtl scas or insl mov (bad) rcl cld lods lret pand gs xchg js call loope xchg pop in (bad) dec test in (bad) adc ljmp aad cwtl mov dec sub cmp push popa pop repnz out in adc divl scas fs xchg mov or decl rol mov add fildll lret add imul pop loopne outsl adc push inc mov aam out dec adc aam out cwtl adc inc add std adc inc sti mov enter add adc out lcall and cmp mov sbb xor loop popa xor rol mov add cltd imul push fcoml adc ror and add shll and adc mov jmp adc pop test (bad) lock xor sarb or aad adc arpl (bad) sub js or mull or pushf enter sub jne sbb popf outsl pop cmpsl xchg push jl jp lea (bad) pop inc (bad) mov repz xlat mov mov es cli jns in adc stc (bad) test sub nop xor dec repz mov jle xor (bad) push add and adc inc cmp ljmp and adc jmp cltd jle inc out cmpsb pushf pop (bad) cld push or inc push cs in roll add ljmp pop sub (bad) mov (bad) lret adc daa add jno jne or inc push jle enter pop aaa or dec decb inc fs cltd insl sti add bound dec adc icebp jp cmc imull repz jle outsb or je dec pusha bound loope fistp xor adc ret (bad) (bad) hlt daa xor pop mov sbb sbb sbb cmp repnz pop adc sbb js ficomp mov xchg cld fsts aam push or dec adcb cmpsb repnz pop into pop stc pop roll jle add adc push bound jecxz pop mov push je sub add pop adc jne lods adc jno inc adc flds inc sbb mov mov dec wrmsr add inc addr16 jle in inc insl std adc inc scas pop jp enter lret outsl mov inc adc gs adc lret (bad) ljmp mov dec rsqrtps inc pop lock out mov ss push sbb loope push mov mov adc dec jg pushf xchg mov add popa mov sbb out sbb or and scas cmc cmp (bad) add push es fbld icebp xor sub inc enter sarb lret jno in rolb add loope adc out ret jle bswap jg into sbb pop rorb inc mov out adc pop jl in (bad) into sbb push ja lcall fsub inc adc mov or iret sbb rclb lret mov adc mov jecxz adc scas in ret xor adc xor sbb adc outsl mov (bad) (bad) mov jl stc xlat jns rolb in insb aam jmp adc icebp leave jg pop adc adc insl aas adc out (bad) shr repz fildll fildl (bad) or jmp imul cmp adc aam jns (bad) shlb adc mov push jecxz notb xchg pusha cmp adc push inc adc jns adc imul pop adc add jo out fwait dec xor dec leave mov sbb fdivs fwait (bad) xchg (bad) sub or adc xor mov sub jns test addr16 jle decl add popa xchg icebp rcll negb in cld sbb mov dec add lock jmp enter insb decl lds into inc iret push out xchg shrb nop test data16 movl int3 in mov scas rorl mov test adc fmul ret mov add lds xor loop repz roll icebp loope fcompl pop repz imul inc or adc push shr pop rcrl dec sub test repz (bad) fildll das dec outsb pop ret stc fwait pop int add test enter adc xchg shl inc push adc fsubr inc dec adc adc adc xor pop ret icebp mov lods push adc adc hlt mov into mov jecxz sbb lret add mov into mov add sbb lcall out pop dec outsb test test dec sti insb out scas (bad) notl mov push pusha push ret cmp mov add out in (bad) stos mov jecxz loop ret adc dec mov push (bad) lods nop cmp movsb stc mov dec inc adc fcomi into daa push repz inc incb lret xor push in adc lcall push (bad) hlt leave xchg push outsl je push in add aam (bad) pop adc movsl icebp pop out and sbb xchg dec in pop les ret dec fucomi je fcoml rorb rorl pop adc add incb xor mov push add (bad) popf dec repnz loope iret push adc adc (bad) sub adc dec out jmp imul pusha push out (bad) aad sbb fisubl inc or adc scas nop xchg xor gs mov jno sbb insl mov xor xor xor add adc pop in ds add mov std push cmp jmp cmp (bad) aas sbb sbb mov call cmp or ds adc and sbb repz xor cmc sbb sbb mov cmp out and in cs cvtps2pi jmp in push sub in or mov adc out sbb add adc add add cmp repz xor cmc add das add add add popf in ds sti adc or push sbb or pop or incl cmp add ds or and or repz adc cmc or or or push out and popf in cs jmp sub adc push sub or enter das pop mov or out or jecxz and aam std xchg cmp repz xor cmc adc por adc pushl sbb ficoml cmp cmp sbb daa jg sub xlat mov mov or imul push pushl push je fidiv or push pop (bad) aaa or mov adc adc icebp push cmp sbb pop cmp pushf add add cmp mov adc sbb and cmc sbb adc sbb push loope cmp out xor sbb mov sub stc or or or sbb sbb mov sti sbb sub notl pop and cmc add or push loope sub mov sub repz icebp daa cmp out (bad) in repz push jmp adc sbb pop clts jmp add cmp (bad) mov or or or or repz loope cmp or push repz or push sub adc pop sub pushf sbb sbb add ud2 push sti or adc and sbb jmp adc push loope push sub adc ja ljmp mov mov test push clc sarb jge loopne push push out mov outsb cmc rolb sbb dec fdivs or pop in mov push es out sbb sbb les adc xor or or or pop or xchg sbb sbb sbb adc adc fcoml repz adc shr and adc or adc xor pop fmuls sbb pushf aam daa or or or add and mov add out adc add adc pushf or or fmull das or aam xchg xor int3 or or or psubusb sub les adc movb add sbb pushf sbb xor or or xor adc xor faddl das add pop shrb add add push fsubr sub aam daa sbb (bad) sbb sbb adc adc enter and add add pushf sbb sbb fcompl das sbb pop ret adc sbb sbb repnz jo loop xchg mov icebp dec (bad) lea out pop add stos pushf xor aam pop xor pop pop push adc sbb sub repz mov fbstp adc fwait mov or cli inc sti fdivr dec (bad) out add rorb push test in ficoml add loope (bad) mov (bad) cld push cmc or push neg push (bad) dec icebp (bad) inc pushf sbb inc adc lock (bad) into div push cmc (bad) repnz repz dec push sub inc sub dec inc jge add loopne inc in test mov push not adc add or pop push push adc or or (bad) sub pop sub sub arpl add sub dec in dec popf ficom lock rorb ret inc (bad) jns jecxz jge je jae sbb outsl punpcklbw mov mov adc rolb (bad) movsb add adc shlb outsb rcr popa ret rol fs hlt roll (bad) icebp inc or xchg inc ljmp and aam aam sbb sbb sub adc cmp cmp enter into aas add rcrb pop fcompl pop popf ficomp pushf rclb push ret ja push (bad) insl (bad) rcrl bound popa adc notl (bad) mov mov adc adc sbb dec adc or cld fdivl xlat repnz adc dec call or pop xor sub inc push xor pop decl pop adc mov mov push test xchg lods aam adc mov mov stos xchg mov scas lahf jecxz lods popf out (bad) jae mov mov (bad) fimull mov adc rorb mov fisub mov mov (bad) pushf mov or xchg mov mov mov mov fcom jns ficompl imul mov cmc inc repnz adc (bad) aaa xor fdivl int adc push leave jnp movb mov shll mov shrl and sbb sbb mov aas enter repnz pop out pop adcl add jg jo fidivr popf mov rcl jp or xchg pop hlt mov ds adc cmp sbb adc inc fadds inc push fisubl xor add mov mov popf movsb fadd xchg jae adc push xor pop mov aaa or jecxz icebp inc movsbl push addr16 repz stc mov mov cld fdivl sti push or jge fwait loopne push dec push dec or in cmp cmp (bad) mov test adc add adc add xor faddl xor fisub sub rorb or xchg cvtps2pi (bad) adc sbb sbb sbb sbb mov les sub fcoms rdmsr or or or push into movaps mov sub fsubl xor fisub cmp rorb cmp pop pop inc (bad) sbb sbb sbb cmp mov sub stc adc push lods adc enter cmpsl adc pop not adc adc push xor xor jae or ret popf (bad) mov imul add mov les push ds jo sbb mov lcall scas add cld inc mov into cli adc push cs fdivl jge jo sahf mov cwtl adcl insb jl je mul pop cmp (bad) pop mov aam clc inc or arpl adc mov (bad) enter into xor aas add add and inc fiadd lods adc (bad) (bad) push rcl repz cld xchg sbb lods add pushf mov hlt adc mov rcl js adc stc push push incb sbb jp adc dec in dec mov add fsubrl sbb popf jne js sub enter adc out in scas xchg scas mov lods cwtl lods fidivr xchg mov ud1 xchg mov stos xor pop test movsb repz bswap movsl adc mov cmpsb fdivl xchg mov sarb mov mov mov add shlb jno or or jle adc pop loope enter adc mov push cld sbb daa adc ficomp pop sarb jae xchg mov popa lret dec jmp or or push ljmp mov call ficompl nop cmp repz jg pop xor sarb fcom ficomp jb rcrb inc shlb data16 stos popf scas mov icebp pop repnz pop incb xchg nop mov movb add and inc std inc pop rcrb xchg call cs lcall jno xchg scas sahf pandn fdiv inc in inc les jno xlat fdiv dec repz shlb (bad) jne inc cmc or push pop popa fidivrl sbb adc enter add adc mov inc shrb arpl into int3 jbe push adc adc fsubrl pop sub push add daa ret and or (bad) xor xor sub sub or fsubs and and aam (bad) xchg adc and daa shlb and nopl fimul adc aas sarb cmp aaa mov xor mov adc or repz pushf mov fsts (bad) pop and enter mov jle jg (bad) fcomp cld mov std fiadd add pop out push ret mov int3 fs leave rorb daa push mov in add mov inc icebp fdivs sbb (bad) jbe mov mov dec insl adc into adc adc push in push fsubrl ja mov mov sar pop pop rolb inc (bad) mov fildll lods lcall aas sbb inc or (bad) jae fiaddl add or data16 movsb add pop loopne add add inc jmp or int xor adc adc push out pop adcb add add adc pop pop fcoms adc add div inc repnz mov arpl cwtl lret pop or sub pop in jge insb fnstenv rcll scas lea outsl rorb jno mov adc test ret xchg cwtl cmpsl sbb mov mov pop mov mov pushf (bad) sbb sbb daa adc shll adc inc fsubl sbb push jecxz adc std sar push call lock movsb pop adc or xchg out out add sbb adc pop sti pop fidivrl jl mov xchg into aas adc mov jns cltd mov (bad) fcmovb sbb repz ret push (bad) mov jns into popa sbb jb inc adc lea (bad) repnz sbb (bad) push adc push enter into mov test fdivl aad rclb call adc dec push rcrb add push aam xchg mov adc push adc fiaddl inc (bad) gs jge xchg mov and or inc hlt inc fiadd ret imul sub sub push mov test jecxz dec cli shld mov push insb push push xchg stos punpckhwd mov dec adc fnstsw in push test int3 jne mov cld dec sti pop lds insb les mov adc mov test nop test fimul loop int sub add shlb fadd jle fiadd pop and sbb push pushf std adc pop fcomps cmp ficoml add pop out enter jo sahf mov rcr jae fcmovnu fdivrs fdivrp inc add ret push (bad) movsl sbb or xchg mov mov (bad) incb or adc adc ficoml notb ja je xchg xor mov shlb mov repz repnz xor sub add rorb (bad) dec (bad) fs jb xchg xor mov xchg mov repnz repz dec (bad) dec fcoms lods (bad) lods (bad) lret adc out dec call adc sub cli dec adc pusha (bad) out movsb (bad) repz mov (bad) xor or lcall xchg inc jmp movaps (bad) dec lock adc jns xchg push in lret sarb adc fwait mov adc pop fistpll adc mov sbb fsubrl js or and shr loope loop inc jecxz cld inc stc out clc inc pop popf notb jmp call inc jecxz fsub pop in out out (bad) sbb xchg enter into and daa xor fiadd inc mov xchg fdivr pop adc and (bad) sbb daa sbb sbb pop into push adc sbb fdivrl into cmp rclb xor (bad) dec aam dec (bad) dec sbb jg add jge jbe jne push jb xchg mov adc xchg mov enter adc xchg mov mov fdivl nop mov ror lock (bad) fld mov cmp cmp jno push jmp or or btr push (bad) or and sub repz shrb pop fmull dec in rorb (bad) ret rol jle jns adc xor aaa adc push pushf cs dec call cmpsb mov mov adc mov lcall cmp cmp scas popf jge adc enter into les or cmc inc adc sub shl dec in ret out (bad) lock mov dec sti xchg cli dec dec adc int mov dec in or dec out fcoms push jmp or pop or cmpsl lea mov shlb and fsubrp jno ja out fist add cmp cmp or into pop icebp pop rcrb repnz fcoml pop jl jnp jbe ret xchg (bad) mov inc rorb mov (bad) data16 aam xlat fcom jl rcr repz repnz cmc push lock (bad) into pop nop and xor adc xor mov xor xor rolb and (bad) inc negb je xchg mov xchg adc in out out push loope loop stos bts enter test sbb pop jecxz or push loope xchg dec cli adc mov (bad) insb stos les (bad) adc mov popf and inc cltd mov lahf pop cld pop lcall push or push inc xchg repz (bad) jb repz jle jns add add xchg faddl jp xchg or sub ret sub xor xchg (bad) mov or mov adc les or or adc sub das mov cs rcrb mov or or lret pushf rclb sub inc sti inc fisub shll fnop or or push xor aam adc jg jp add jb fldl sbb pop cmp cmp pop (bad) inc add xrelease sbb xor popa or cld inc std les daa pop xchg adc stc push adc inc hlt inc or xchg push cld mov inc ret fimull aam pop loopne add push and daa or (bad) and bswap and and shlb mov es adc adc jo jge add add fs cmc push neg repnz adc cmpsl or jge clc (bad) sti lcall dec repz sub scas aaa adc xor push std mov cmc pop enter into pop push jecxz (bad) mov pop fsubr out pop fdivrp add rorb notb dec cmc dec or xchg lock mov repz mov xchg pop les pushf push push repnz adc jmp in enter into push repz nop rclb push xchg adc mov jge jo mov gs adc or into adc mov xor fldenv cli inc or adc scas cmpb adc out or adc jne mov mov rorl repz adc adc into jae lds xchg cmpsb xchg (bad) adc fdivp push not aaa adc sub dec icebp dec (bad) data16 dec mov push lahf adc inc loopne aam out or fcomps ficompl xchg pop (bad) adc mov mov fcoml add pop push cmp cmp adc rep imul or jae repnz mov push sbb adc cmpl xor sbb sbb xlat push ss lret repz adc push xor or rolb pop rcrb xor int xor rcll mov mov pop and mov xor xor or cmc push mulb adc push loopne repz mov rcrb pop push adc sub sub adc mov test fnop pop repz ficompl pop (bad) or cwtl adc fldcw sbb pop add sbb lcall fld sbb push adc push out (bad) stos test or adc pop les adc fdivs push xor push add icebp adc xor xor jne jbe fdivl daa hlt rclb dec adc mov ret mov sahf mov movsb andb xchg clc inc sti pop mov adc jg sbb pop rcrl cmp (bad) sbb sbb push adc pop adc pop lods jnp je xchg hlt mov mov mov mov cmp ds rcrb out sahf xor lea add and pop pop neg xlat fdivrl jg xor push jmp ret lock icebp in repnz repz jmp and or pop std sbb ss mov call sub add pop decl jno std jmp mov mov jnp push jno add push lcall faddp mov rcl add sahf mov ret adc or sarb pop daa fisttpll jo jns mov shlb jle mov sbb sbb jl sub mov push daa adc push loopne aam lods push mov and in push sbb popf mov cmc push hlt (bad) iret lock enter into decb or ljmp fdivrp pop cli rcrb (bad) jle or sub xor dec or inc in mov add push mov push adc negb adc repnz cmc push dec negl loope inc adc adc aam push cld dec cli inc std int sbb mov aas adc mov into or push sti push sbb cmp mov or mov int3 je stos (bad) outsl xlat inc jmp aad jmp jo sbb daa xor inc jl xadd or lcall (bad) fdivrs repz mov or inc mov mov dec or jae (bad) je mov jne rolb pop dec lahf or mov xchg or xchg xchg stos mov xchg test aam aam sbb jle adc mov shlb sbb xchg sbb into cmp cltd mov call pop sarb jno (bad) outsb mov int3 mov pop daa add sti inc repnz push fdivs sbb (bad) jge sbb push inc mov dec adc cmp cmp lcall shlb sub sbb imul jecxz (bad) leave push adc push loope clc nop sbb push sbb testl mov not add ja div shrb call aas adc cmp adc inc xchg pop dec mov adc xchg mov clc push not jne (bad) push iret je mov scas sbb arpl jp cmp cmp in sbb es (bad) adc mov fmull xchg test inc fs add pushf (bad) repz divb lret jno or test fmuls sar fidivrl inc mov sahf movsl fwait enter into pop repnz xchg sarb cmp jo sbb ret xor and hlt shl adc and xchg adc fcom jge fidivl sbb pop pushf mov ds add mov repz push jns rcrl aas add mov cli dec and sbb or adc jl (bad) jns mov mov notb divl mov int3 xchg mov adc and gs jge popa mov mov mov mov cwtl mov mov nop jb into jae ret loop ret push fisttp jnp jp sbb js arpl fs outsl out jb jno mov fidivrl jl jns mov pop out pop sbb jno js sbb repnz icebp jecxz (bad) jae mov cltd sub sub gs enter adc or rorb xor adc aam pop pushf aas repnz push std fdivs jecxz (bad) jp fisub fisttpl adc (bad) push (bad) fcompl pop fidivr es je jae int arpl mov add xor clc mov pop loop mov push xor pop inc fdivrl add sbb mov rcr mov mov mov ret jp mov mov jmp dec loopne loopne adc mov repz push jne je hlt adc push fdivs push adc mov mov xchg test sub adc scas cwtl jecxz adc xchg mov xor push repnz cwtl stos rolb mov mov push icebp push fs xor mov sub push jecxz cmpsl aam mov or fistp gs cs jnp jp mov std pop cld ficomp in rcrb inc icebp (bad) add rsm test push xor and subps pop adc fidiv cmp sahf mov into std cmc dec (bad) sbb stos lods adc lahf mov sbb clc adc mov imul push adc xor or cmc mov mov push lcall (bad) ret pop adc adc mov or dec jb rcl jae outsb mov pop das jecxz push loope mov mov mov sarl ret popf scas adc rcr push pop lcall ds cmp je nop mov ljmp dec jmp (bad) pushf fstpl jle fdiv fbstp sbb fidivr lcall push jl jge adc push and pop sarb notb push adc mov adc adc cmp push mov jecxz ja push out pop mov aam test mov push sahf (bad) pop jecxz pop (bad) sti inc dec decl clc into and xchg mov pop daa sbb sarb push mov (bad) mov sub lret or (bad) aad fsubl jle,pn add cli ficompl cmp cmp fwait into or rcrb mov popf mov fidivr sbb outsl fldcw cli mov jp notl or adc xor xor and mov imul sub mov mov fdivs pop orps in dec sbb pop sti push rclb clc push fdiv notl adc mov mov sbb fs addr16 cmpsl in test out dec sbb repz xor jno jp fsubrs fistl sbb sbb lahf mov pop dec ds into adc lods popf fcoml xchg mov pop loopne jle pop ljmp test fsubrl insl fiadd daa (bad) rorb push rcrb (bad) push (bad) pop cld addl dec decb repnz lock xchg mov fcmovbe push (bad) mov add mov mov into (bad) mov prefetchwt1 or adc fdivp dec cmc (bad) xor adc ret mov and sub push xchg adc or mov fdivrs adc fidivrl jge mov mov adc shl jecxz fist fsubp mov pop (bad) rolb popl xchg mov mov scas add cmp add mov pop or jge rcrl fwait mov add js ffree cwtl scas cltd data16 cld xor xor add jmp call xchg rclb adc xchg jle adc pop sub ljmp mov sbb fidivl test xchg adc mov mov mov mov fdivl outsl aad (bad) xor insb fdivs mov int into or xchg stos lcall sbb std sbb xlat pushf adc fldcw rclb outsb faddl (bad) pop adc inc loopne sarl push or push clc push push push mov mov cwtl adc push icebp dec repnz xor push loop add adc mov adc stc pop clc fadds cmpl jle jae ds bnd jle cmpsb repz mov adc xor mov jae into movsl iret cmovl dec rcl mov mov sbb sbb fistpll jmp ficoml std outsb mov insl aam jg jecxz cld push fcomps push rclb ficoml das adc ss jne push xchg fcoml shrb adc iret sarb ret insl pop or test xchg and mov fnsave pop (bad) pop call sbb cmp into mov jecxz (bad) fcompl in fdivp add cld adc loopne loope out pop pushf jmp mov sub jae jno lcall adc ja adc (bad) jb jns jae add pop das push inc aad or adc cmp jge adcl test dec adc pop pop jns jp cmp pop out xor adc sub (bad) jnp insb mov out adc jle add adc adc jmp (bad) mov add iret mov xchg fsubrl ror rorb lahf mov xor mov (bad) fwait mov rorl sbb jge shrb xlat sbb dec fcmovnb sbb cli inc adc enter into cmp xchg cmp aad out sahf mov fstl rcrb xor (bad) ss add test push mov (bad) or dec (bad) fcomps adc sbb push mov add push cli fdivrp pop nop call pop or arpl fs mov mov sbb cmp adc es adc mov dec cld adc pop repnz pusha mov (bad) jae bound adc sub or jbe (bad) aad movsl nop xchg mov pop (bad) dec adc cmp or test xchg outsb sub xor stos popf or outsl fidiv pusha jmp shrl int3 sub bswap jb repz je jge jp jns sbb shlb data16 insb jecxz leave jb jno adc dec in ja fsubrs rcr repz je pop adc and jmp negb stc adc pop cmp (bad) mov sbb (bad) movsl xchg mov or adc inc mov adc je je aaa push out cmpsb notl test push mov clc adc lret jnp (bad) aaa sbb mov jecxz sub rolb fisttpl fidivl mov mov (bad) cmp aad or push pop cmc pop rorb xor xor jle adc sahf cmpsl xchg ret (bad) mov in inc call push js gs inc repz adc xor adc push (bad) xchg mov enter lock jb jae sbb sub fnop jbe fidivr cmp daa rolb inc (bad) imul outsl enter add (bad) arpl jge push and sbb or adc pop cld pop pop pop xor pop sti jae je xchg movsb nop adc jb jg aaa cli pop sti adc bound icebp outsl (bad) jae push repz fnstcw jns adc jnp jle jg enter lret repz jge jl push dec adc sbb jo in pop js push int3 or (bad) in enter lret pushf push daa sbb (bad) ja jbe lcall add lods (bad) inc and jnp cmp cmpsl xchg mov mov mov fcmovbe imul adc add dec and adc outsl ds inc rolb inc popf rcrb pushf fcoml in ficomp pop ficoml loopne mov in xor dec sub inc fadds loop xchg pop out aam adc mov repz lret adc pop std pop ret mov pop in shr ljmp cmp push adc dec outsl (bad) or pop xor addr16 repz aas push ss mov nop mov or cli dec enter insb into lods mov push fmull xor daa sahf adc rcrb ss mov push out xor icebp inc lock (bad) or dec or cltd cmpsl push cwtl (bad) mov daa mov mov pop cmp je fdivrp inc clc mov arpl outsl and inc out lds mov mov lock and aaa xor xor xchg jecxz into shll mov fdivl and fisubr jne mov stos mov out out sub sub or adc cli inc je cmp aas cmp sub and mov rorb pop (bad) lods push fisubl add xor mov jbe call xchg dec lock int3 dec add lret sbb sbb xor pop repnz repnz in push (bad) sub pusha add push std push adc push notb push cmc push pushf (bad) jno push rcl out fcoml in fimul dec mov inc loopne loop mov xor pop or data16 clc std dec in or mov sbb inc sbb xor popa mov adc add inc cli dec clc or or sub sub repz mov xchg ret xor inc faddl inc fsubrp loop rorb pop out (bad) push in or xchg loopne repnz jecxz cwtl adc sbb jle pop adc adcl (bad) ficoml sbb dec std adc jmp xchg in in mov inc movsb pop adc cmpsl adc adc sub (bad) aas adc enter into std xchg push incb repz fcompl aas or jp sarl ret mov mov (bad) ljmp loop dec lods pop jo clc dec icebp or adc fcoms aas adc not repz adc jmp pop push push mov xor dec rcrb daa mov add pushf rclb sbb xor xor sbb out cmp and fadds or mov into cmp cmp inc adc push lock loop rorb loope (bad) repz out (bad) inc in in inc test repz inc hlt push int add adc loop dec push cmp out add xor adc inc std adc loop jmp mov insb mov dec or adc cltd movsb sub je and and push jo jge pop cld inc rolb sti inc (bad) dec clc dec cmovnp push add pop push rcl fsts mov push js lds (bad) fisub data16 fdivl iret adc inc in dec ret jmp (bad) aaa or movlps cld repnz add dec fimul adc adc js test rol bound arpl js adc or jg aam sbb pop xor adc pop mov adc sbb mov lds mov mov push or adc push fdivs pop xor aaa or push adc xchg insb rcl imul adc stos jge nopl xchg sbb adc xlat cmp adc add pop enter xlat into inc add rol jle fcompl adc pop sarb jbe ja push outsb mov shlb sbb in xor add xchg rcrb lret mov mov mov jno push adc xchg mov (bad) rorb andb jecxz and (bad) fs hlt adc dec adc adc or jb mov cmp push shlb sub cmp push adc cmp mov cmpsl andl adc mov or cmp adc pop and and and adc push std fs or aam stc pushf inc push popa fsubl mov jno shll into arpl fsubl js mov or push sub sub adc xchg cmpsb xchg psubsb les and lret and test aaa jecxz xchg mov adc mov mov pop adc rcr (bad) jno jns repnz mov xchg mov cmp adc daa sbb xabort std (bad) adc mov mov fdivl mov punpckhbw add adc add xchg fdivs fbstp ja add sbb enter je adc cltd mov pop cmp mov repnz addl popf cmp xor pop aam frstor in out fadds fnop dec adc movb enter gs (bad) mov adc lds fiadd adc gs ret mov (bad) ja je jae jle pushf scas sbb roll inc mov add scas enter test loop or adc rcr rcl dec jnp rcl imul mov jg or adc inc out push das add mov cs sub incb adc mov loopne cltd adc push cs ret push jns andl lds adc or rcrb fdiv jnp jl (bad) sarb adc and daa sbb push sub sub clc push or pop movsl fwait adc fldenvs adc popa fiaddl test xchg mov mov lret ret repz dec hlt pop sbb sbb rclb subl and xchg daa fsubs mov sbb push mov add fsubl mov and add or loopne jmp adc xor xor in adc adc popf mov fdivrs jl fidivrl adc jecxz enter fcmovne pop hlt pop sarb pop mov adc mov xchg pop xchg adc mov mov xchg repz mov or adc adc notb push adc and (bad) mov adc mov xchg mov cmpxchg lret insb or push dec cld xchg dec fisubrl adc add repz fstpt (bad) fstps push ret push ja fiadd insl jb mov lea aam adc stos xchg lods fcmove xor (bad) enter int3 addr16 int adc out dec out fsubr adc fimul nop ds repz (bad) sbb xchg jo mov incl sub sub push in or adc sub movlps push inc lret inc and xor (bad) mov cmp dec hlt and and xchg lds arpl movsl (bad) xchg jl fdivrs adc aas or adc xchg mov or hlt push adc rorb xor (bad) push xor cmc adc adc aam sbb (bad) mov adc imul mov (bad) mov mov popf xchg dec or mov add and outsb inc adc adc out les add pop sub adc inc into cmpsb andl flds rolb adc push sar push cld (bad) xchg aam xchg mov mov nop and aad jle adc adc mov dec cli loopne and push (bad) fsubrl jl jnp sbb jle adc cmp dec pop adc push cmc push ljmp add pop negl or aam repz ljmp add cmp faddl inc fisub lret repz pop pop xchg ja xchg call mov les into imul int3 jb lret fucompp pop call ljmp sub push rorb or sub dec ficom dec sti dec rorb push rcl push call cmp adc cmp pop ljmp loopne mov in dec add xlat imul add adc and sbb fadds dec adcb sbbl mov pop push pop cli mov into push adc push (bad) mov mov (bad) jno rcr push jae mov push in (bad) add or ja sbb adc mov dec or insl fcomps adc mov rorb into lods xchg scas rclb in pop in cmpsb pop adc add movsl sbb mov shlb adc add les and out adc inc loopne rolb fdiv add add add pop (bad) or cmp adc (bad) adc adc xchg mov or sub cli dec adc adc (bad) fidiv ret mov lcall mov and loopne pushf adc pop hlt fist adcl adc xchg mov dec push imul shrl movups xor xchg sub sub adc ret fdiv (bad) jbe fisub mov (bad) nop scas xchg mov cmpsb mov int in dec out xor out push call add into das or dec jmp fcoml (bad) xchg (bad) mov mov (bad) aam mov mov pop jecxz int3 jns mov sbb pop xor sbb jbe out push adc dec scas popf test (bad) lods xlat orl js adc adc pushf mov arpl push fdivl jns mov mov rcl jae shr push in push (bad) add sbb cmp cmp xor (bad) aam aam dec push outsl rclb int3 insl fldcw adc mov stos dec lods mov lods xchg scas rolb jno fsubr adc fimul and shrb add std xchg inc repnz loope push out inc out lods jmp push adc adc or fdivl and and sarb jl (bad) mov mov notl push or or adc aas sbb inc dec clc adc pop jae adc adc xchg adc adc adc adc jae fdiv ds pop adc push out push ja pop add aad (bad) loopne mov and and (bad) xlat jg jb jecxz xor sub add sub arpl imul sbb les pop or repz fisubrl insb (bad) insl adc push mov test stos fsubrl enter lret repnz negl jp adc and and sub xor jae jb fcom jne sbb xor dec adc dec std dec ret bound inc jle ficompl pop (bad) or pop popa adc xchg mov add mov xchg (bad) mov (bad) mov lods ror jbe xor loop out adc sbb sbb adc mov aam pop das or dec fdivs dec fisubrl adc outsl lds push test into mov lret lret fsubrp inc call xchg in in inc jge push sarl xor sub into inc call add faddp jae rolb lock xor (bad) aam sbb or adc mov adc cmp cli push stc mov test fimull sbb sbb jp jno mov mov fdivs inc adc adc mov mov push clc xchg push fdivp push cmc inc adc sub sub jecxz out shrb or jmp (bad) dec adc mov adc data16 xchg adc sub das fsubrs or fcmove cld adc dec decl imul leave outsb rorb pop daa cld jp adc mov jle fdivs ja lret lret adc push out adc sahf mov ds push sub into xor lahf push cmpl xchg jmp into movsb andl faddl jb imul xchg repnz push or sub pop fidivr xor pop inc adc leave jge sbb push nop mov fsts cli xchg adc out push fisubl fist mov mov adc mov xor jbe jne adc adc insl (bad) mov inc sbb fsubrl adc jo (bad) jae lret dec mov sub inc adc iret jl aam fidiv xor outsl fdiv push push neg mov adc jecxz (bad) jae adc scas xchg scas (bad) (bad) ja loopne cmp sti (bad) or push arpl shrb jno shrb jno andb lahf mov mov sar xor (bad) jne jb pop jno clc adc pop adc (bad) (bad) pop in je or add fdivrl adc xchg mov cli inc sti les jns adc (bad) jo fidivl push lock adc mov mov xchg mov xchg rclb mov xor mov inc mov fsts std pop loop scas fwait scas jno test add repnz cmp ficom push shl push insl or stos lds popf (bad) jno adc push cmc aam aaa pushf cmpxchg adc fimull sbb in imul into fsubrs jb mov adc mov test inc popa adc or xchg jo fisub js shlb hlt (bad) jne dec adc adc cmp lcall (bad) adc pop xor sbb cmp pop sub mov loopne push mov adc adc fs fdiv pop cmc movsb xchg adc mov inc neg mov pop ficom aaa adc (bad) jbe imul repz sbb inc arpl xchg cmc pop push xor push lahf adc outsl push dec (bad) mov or int mov mov test leave mov enter or mov sub (bad) sub pop dec push loop into dec jmp insb adc imul mov rorb pushf sbb fnsave jecxz loopne (bad) mov (bad) push inc adc jl lea shlb push fsubr pop lock adc adc adc into out in (bad) push movsb xchg lcall fsts sti aad lret adc sti (bad) stos inc and adc jns mov pop clc bound mov inc jecxz setl js or and repz clc push ficoml push cmp fidiv iret xor push jne (bad) or jmp adc adc adc cltd adc pusha ror xchg mov mov icebp push repnz insb adc movsl xchg mov mov aam push out or xor or sub sub adc add dec into mov repz shrb push or mov mov (bad) icebp pop out xor adc adc (bad) mov shlb adc cmc push sbb adc adcb adc xor shrb movaps (bad) xchg repnz mov add mov xchg mov xchg (bad) lret push sbb cmp or or or sub mov adc dec ljmp imul jbe xchg mov push jecxz lcall repz fldt das push ss (bad) jae adc mov cmp or das adc mov (bad) insb add mov inc std add xorb push notl xor sub inc inc mov or inc pop adc hlt popa and jmp adc inc or push and popf pop jo jnp xchg cmpsb xchg mov rclb push fdivl jb loop adc in rorb push sti sarw fwait mov cwtl xchg repz mov mov lods or fsubrs test adc test scas nop lods ror je fdivl inc jmp test inc in (bad) stc imul inc adc xor xor pop loop jp sbb push mov sub xchg pop push adc adc mov mov add aaa add sbb add fidivl jbe sbb fwait adc jb jno xchg mov je fisttp push jmp les xorb sbb xor adc mov mov scas subl or dec (bad) dec mov insl aam fmull cmp fsubrp push stc popf imul adc inc loope add adc dec loopne (bad) (bad) (bad) rclb jmp adc clc dec jg int mov mov xor xor push adc push ficom hlt je add push out (bad) and and inc div pop jecxz mov aam ljmp fmuls cmp or js enter into mov mov lret fmull jle fsubrp mov ljmp test jle pop mov push adc adc adc adc repnz test fsubrl dec bound repz les daa push fdiv aaa sbb ficoml push imull lret ja xchg mov xorl push jb (bad) jno push out sbb or daa jge (bad) sti add push jne (bad) mov mov adc cltd adc (bad) out inc mov or or adc sub push or adc (bad) mov (bad) mov popa rorl shlb int3 or inc out out in and xorl repnz (bad) fs xor inc fsub jnp add dec mov push (bad) ja push stos sbb mov sti mov aam ds ljmp lcall rclb adc xor cmp pop add add and mov push xor push out adc mov dec mov or adc or bswap out repnz in shr adc fsubr pop jmp add out out clc xchg inc std sbb inc repz repnz icebp mov adc into (bad) push std sar push xor add inc push inc xchg inc sbb inc push inc in push inc xchg inc sbb push push push fwait dec inc loop push pop xchg push sbb push push push fwait push push and out in push push or pop mov inc jmp mov dec out xlat adc fcmovb jne (bad) data16 popa mov inc jmp rclb gs fisubl xor cmp fcoml add ficom push (bad) jae outsb adc scas xchg scas (bad) loope in mov xchg jno adc (bad) iret add dec adc out pop outsb fisubrl sub into pop scas pop pop xchg and cltd inc pop test xchg subb xorl sbb cmpsb pop pop mov pop mov sbb add mov jecxz mov add call or movsb pushf rcl xlat mov (bad) adc xchg or mov adc mulb add jnp cmp hlt jns lcall cmp add into ds in fmull pop add rcrb mov push sbb rorb mov and fld pop inc pushf rcll inc mov push pop sbb push push aam (bad) xchg push xor add into ja xchg (bad) repz xchg fdivl push jbe cld shrb dec dec mov jne jmp jb (bad) xchg sbb mov xchg xor pusha xchg sub or adc daa mov test enter jmp rorb xor or stos mov (bad) mov jmp (bad) mov mov out pop scas out mov lods out orb add in jecxz out mov cmc and or (bad) into add adc fsubl and cmp test xor adc rclb add mov and pop add aam imulb lods add fsubrs lcall adc pusha xchg add adc popf adc ror pop pop lret int pop into outsb pop lret inc pop call dec xor pop fadds adc add sbb sbb and pop adc stos add lods add fisub pop insl shlb pop jae rcrb push (bad) xchg jo or or adc or inc popf repnz xchg cwtl rcr jg add jnp mov (bad) sbb mov fpatan test push fmull cwtl call sbb xchg xor sbb mov jecxz mov in or adc dec cwtl or repz lcall pop jg in pop mov rcl inc cmp sbb rcl ds fdivl lcall repz ror sbb test jmp mov xchg pop or shlb sub fsubl daa (bad) or add add das push loope sub sbb dec dec adc ret mov pop aam ja pop and pop or inc mov outsb fs or inc adc fiaddl mov (bad) in adc enter into les ret push es fadd pop jns fiadd sbb push (bad) int3 fistp (bad) mov sbb ds adc or xor sub pusha (bad) mov je jno sarb mov xor mov iret or fmuls gs scas sub stos pop repz repz repz pop repz xor or das lds dec cmpsl adc adc adc adc adc adc into lods rol mov scas jecxz and mov inc call push imul out mov sbb shrb cld jno jmp aam cmp or fcomps dec aam (bad) xor enter into mov mov xchg adc (bad) mov rcr xor (bad) jmp leave jno jecxz sbb repz jmp out adc pop adc (bad) or adc into aaa dec adc xor fdivl push jnp rclb mov rorb call inc popf mov adc sbb repz fistp lea fmuls out sbb (bad) lods or fist into scas cmp pushf fcoml push jp leave dec pop ror dec xor (bad) cli aam in mov insb fdivl adc mov mov push test dec repnz sub adc es inc into add xchg adc inc or insl js adc xor dec (bad) popa xlat or sbb xor mov adc mov cld std fsubrs lret sub adc xchg adc xchg pop push xchg cmp xchg dec xor std xchg push xchg insl stos xchg (bad) xchg mov scas ds aad nop add adc fsts in adc popf adc adc jp ds lcall adc adc adc mov mov fidivrl lret enter into fdivrp stos (bad) repz (bad) fnop adc stc sub cs (bad) dec mov or xchg outsl (bad) mov lea sbb xor mov push fidivl ret pushf (bad) sbb add xor ret into push in mov cmpsl fcoml adc jb inc (bad) je cmp rorb pop icebp or xchg pop enter stos adc cwtl sahf xchg adc fwait pop fmul nop cmp adc lods sbb leave mov adc shr fnstcw jl or pop rorb aaa mov add mov sbb and sub jmp dec test add aam xchg adc ja add mov fisubl mov adc mov loop adc loope loopne add inc testl xor (bad) pop lcall pop cli inc or lea sti out pop (bad) dec push (bad) xor insb insl add adc (bad) inc negl repnz adc mov pop aam push cwtl pushf repz fsubrs pop aas xchg lcall jnp adc adc adc adc adc sti outsb push repz cmp adc adc std fidivl and (bad) add mov into adc jg inc outsb jns adc cmp popa lahf sbb adc out sahf mov fsubrs jecxz (bad) push jbe test inc xchg mov xor das dec sub mov enter into xchg pushl je jge adc xchg loopne sbb lods aaa ret mov sub jbe sub (bad) or les ret mov xchg je test jb add xchg mov adc xchg popl xchg mov mov mov rorb scas fnstcw (bad) mov sub psllq pop loope aad mov lcall dec pop (bad) adc insb cmp or into adc (bad) or dec ficom sub ret enter lret or mov in or insl out fadd outsl lods xchg or gs fisubl pop int3 (bad) repz lods enter adc shlb outsb push adc xor (bad) and and jg xchg push adc fcomps or sbb push out push fucompp push adc adc push fcmovnbe push loopne push jecxz push or push adc push stc (bad) movhps scas pop push mov push xchg pop jbe add pop movsb fist cmpsl mov jp bnd or add loope and add add add add add add enter add inc add and adc add ret lods add add add inc pop imul mov add add push (bad) in push prefetchwt1 jmp xor pop jnp iret rcrb (bad) shrl or pushf out or aam mov jp add cmp pop enter into mov sbb shrb and jge xor pop rorb ret mov (bad) jnp call seto mov dec cmpsb lods subps mov iret enter in xchg adc xor cmp cmp xor push in ret mov aaa add pop mov adc xchg sarb pop sbb adc ja aaa xor mov adc adc mov in push repnz adc adc into pop xor jns jno add adc test pop xchg pop mov pop rcrb loopne mov add jg jecxz jno into or pop and inc pop pop jnp pop jo pop xchg loop mov pop test pop movsl test fidivr fldl repnz psraw or pop sub dec jnp pusha pop pop insl es mov pop mov pop xchg test push les out sub inc (bad) push push movsb repnz push adc jns pop push push pop sub jge push jo push cwtl mov mov adc adc sbb cld sti pop add pop adc push pop sub dec or dec out outsb lds outsl mov dec push push jno mov sbb fsubrp loope add lcall loopne adc sbb xchg out push pop out aam jo mov fsts out push adc (bad) xlat movsl pop add adc sti jne push repz adc mov repz xchg repz jbe rcrb cmc pop repz repz xchg rclb jnp dec pop xchg gs js xchg lcall mov inc sbb adc and in adc jmp mov and jae xchg adc add add add and out add in leave push or push or jns dec inc adc outsl push add icebp lcall pop iret dec pop int3 sub repz (bad) jmp sbb pop cmp pop cs pop add jns pop jle pop xchg lahf pop mov cmpsl pop pop fdivrl pop (bad) cld lock sahf add jno or sub das es dec add dec cli push push push insl xchg push push xor sub sbb mov jnp inc fwait scas mov pop xchg (bad) ja adc adcb xor lods mov mov adc adc inc adc sub repz adc adc lcall adc adc adc adc adc inc adc and out adc negl mov adc add inc adc adc imul sahf cmpsl adc adc and int3 movups in adc aam or cld sbb sbb mov or test scas outsb xchg lods dec xchg shrl nop add adc cmc adc fcoms sbb aas dec adc adc adc adc adc adc adc sbb int mov sbb sbb sbb sbb dec sbb dec sbb sbb mov xor xchg div xchg cmp adc inc xor sub adc xchg xchg loop push push xchg xor mul aad mov dec push das xchg adc fdivs mov sahf jge pop cmp jb add add mov (bad) dec xchg aaa sbb push and inc push fwait inc and add out rcrl loope push dec fwait sub inc pop sub add insl or aam dec add sub or jp push iret fwait lods mov dec push sub adc stc sbb lods loope push popa fwait cmp add loop repz pop loope push std lods push mov mov loopew push cmp push push pop dec enter dec into (bad) mov jp fiadd aaa add push jne add pop negl xchg cmp mov cmp adc jnp aam ja mov adc nop mov mov into push and popl divl nop add add mov loop push fistl outsb push dec fwait xor loop push mov loope push cmp push adcl sbb sti add repz xor repz inc repz and jg repz repz mov lods pusha repz dec xor test sti rcll xchg adc mov dec xchg pop sub out xchg (bad) int mov push jns adc xchg fscale xchg cld int3 xchg pop scas xchg sbb xchg cmp cmp cld xchg dec fist fwait xchg lahf jle mov xchg lods sbb leave rclb xchg pop adc adc sub adc adc push pop cmp xchg dec scas xchg sub xchg or push or adcb ss rcll repnz push adc rclb lea xor xor push sbb in stc fsub add test pop add and pop and push add dec add add push pop push push add and and and fdiv sahf sub repz arpl cmp es add jae repz mov stos outsb xchg test sbb loope push in lods bndstx sbb sbb inc sbb pusha sbb insl sti lret push repz insb push push push mov fsub xchg dec xchg cld mov push pop sbb adc sbb (bad) adc jge adc push nop or xor enter in sbb push or (bad) mov mov rcll movsb cltd movsl fsubp push in mov fcom xlat jno push inc adc scas lcall adc aad and imul push mov dec mov sub into push mov mov sbb sbb cmp ret push sbb cs cmp lret mov (bad) pop or add sbb rolb xor faddl dec cld fimul inc fistp and adc daa xchg xor xchg dec inc mov adc adc loope pop ret add pop pop mov and and dec add pusha loopne insl iret pop mov jp into pop add and mov adc mov sbb and pop dec or je pop jg pop popf xchg pop lcall and fild pop fsubr pop sti mov adc pop sub pop and pop pop cli int3 fldl jno add add add add les stc sbb call add cmc add rolb jg add and fs iret push mov push insl xchg push dec mov or xchg or jne xor push sbb loop jae push xchg scas mov sbb mov adc cmp jmp xchg pop ficom pop mov push jns push jae sbb loop repz jl adc adc repz inc lcall adc (bad) pushf adc enter into mov mov sbb sbb xchg nop loope push stos fwait mov dec push sub mov xchg fwait jle loop push seta sbb fwait pop cmp sbb xchg fistp mov fwait sub xchg mov xchg loope div outsb lahf xor out xchg test adc xchg dec loopne adc jecxz fmull or popf ficom xchg rorb jnp adc and in push mov mov sbb aad adc pop adc aas adc pop mov mov loop pop movsb mov cmp sti lahf (bad) rorb mov fstpl add push ficom in adc cmp (bad) sbb adc popa (bad) pop or pop adc sarb std cwtl xchg shl fidivr out ret repz mov cltd adc scas jl lods adc das adc or sti or sbb sbb sbb sbb pop sbb jle aad sbb sbb inc mov adc sbb sbb sbb sbb cmp repz (bad) repz (bad) outsl mov push repz (bad) and scas sbb enter mov mov repz adc xchg adc sahf (bad) adc rolb je mov xchg (bad) jbe add mov mov fwait repz leave ja lods div mov rep add dec add sub loop push lcall push push fwait sarl xchg sbb mov push mov xlat (bad) fistl adc clc adc sbb out adc pop adc jg fdivr xchg xor (bad) pop and adc test push jo rclb pop add pop xor rcpps icebp xlat push mov adc scas dec adc pop jmp in pop push lods pop or pop aas sub pop adc pop notb jp pop jge pop lahf adcl xor aad pop lret jmp pop jnp sbb add push add cld add and push imul inc push (bad) cmp repz rcrb push adc xor cmp push push xchg movsb sbb loope sti inc pop adc loopne sbb dec sbb add xor mov jae xchg xchg cs xchg lock mov xchg rcrb sbb pop aas adc stc adc adc adc adc xor sbb sbb std sbb sbb cmp add les repz inc push inc ss adc jge adc je pop dec add adc ret lods (bad) test pushf xchg (bad) int3 or pop (bad) in xlat sbb iret fwait dec sbb adc adc int3 xor stos pop adc pop dec pop cmp pop cmp pop pop cld pop pop ret pop jo pop jge pop fwait push pop sahf aaa pop mov pop stos repz leave ficom les cld jge add sbb sub push dec stos push dec test js pusha pop mov adc lods icebp adc loope (bad) int mov adc out adc push icebp or stos pop imul fistl xor xchg sbb mov outsl loope push sbb push jo cmp sbb ficom sbb fwait inc and mov and push std jl sbb aas add in dec mov clc std gs (bad) lahf inc sar pushf and ficomp scas rol adc (bad) (bad) sub test jp arpl inc sbb out dec repz aam adc mov out loop push mov sbb sarb pop jl dec xchg scas sbb out push icebp mov push mov cmp adc movsl push xchg adc push sbb inc popa adc xchg movsl shlb adc cltd mov (bad) xchg mov sbb xchg xchg scas repnz fisubl adc jno mov fcoms push out dec hlt dec aad sub xor push cs sub push aam adc lret mov icebp imul es push push lods push jb push jae push xchg cmp sbb (bad) mov mov sbb xor adc sbb jo pop jge pop fwait inc pop cwtl sub mov pop fstpl pop and xor pop sub inc sub adc shlb imul add or or sbb pop and pop pop lods pop pushf insb (bad) aam adc pop adc xor rclb adc push lds bswap sbb repnz sbb sbb sbb loopne sbb jl mov sbb sbb test neg lods repz pop repz xor xchg cmpsl xchg dec cltd xchg imul mov mov in into inc xchg xchg in push outsl push outsb fwait dec das loop mov add adc adc push adc xchg adc xchg push nop xchg jbe jno cmp stos push adc cli cltd adc jl adc inc or mov sbb sbb mov fcmovnu sbb inc repz repz je test xchg jge xchg xchg inc xchg scas add lods mov xchg stos in xor adc out adc ds pop pop lret pushf das adc sub ficoml mov or aam or (bad) adc pop sub repnz (bad) sbb adc adc adc adc fimull imul add aaa xchg adc xchg sarl in jae ljmp add das out sub icebp dec xchg push jb hlt shl xchg push or arpl fldenv adc inc hlt xchg pop sarb jns inc adc dec cli dec aam call adc es pop fwait push mov and add add add add mov enter int3 push xchg push jns mov mov jecxz xor femms xor mov sbb sbb sbb sbb mov fwait rcrb jle sbb add sbb sbb sbb sbb rcr xor data16 inc or and mov arpl push xchg stos in xchg leave xlat mov or decb adc adc in fdivs xor sbb (bad) jne std enter in into pop dec repz mov adc mov clc pushf adc arpl push inc adc jno pop pop push rcll dec xchg pop push pop gs pop lahf xor fiadd scas mov lret jmp add push add add mov dec xchg add adc lahf lock shl sub inc mul inc ret add and pop repz movsb inc into xchg int push fwait (bad) dec loop push jmp loope push jge push cs xor (bad) repnz xchg cwtl sbb pop push ds clc fnclex mov cwtl pop fwait loope loop push jne cmp add ret push movsl fwait xchg and xchg rcrb loope push dec fwait sub loop push mov sub fcoms push or push adc jmp jno repz int3 sbb push adc fidiv pop pop adc scas sti fwait (bad) fsub mov sbb push push lock (bad) mov xchg push jbe push sbb loope push rcrb sbb cmp fwait rcll xor adc sbb dec push cld push mov rcrl inc inc add scas add pop add ja sbb adc dec sbb mov sbb mov repz xor push sub fcmove adc mov add jmp js repz (bad) int mov jle add add xchg daa jmp inc or jle adc (bad) xchg push adc cmpsl push call push and pop push push ret mov mov ss int3 clc push out (bad) pusha adc sub add (bad) repz jmp xor mov add adc fnop mov push pusha cmp mov ret (bad) sbb sbb ss adc sbb dec sbb inc sbb sbb xor rol add jle add test out addr16 pop add adc lock jne jo jecxz dec push or adc jae in pop inc adc push lock loopne outsb out outsl jae pop aaa fs push out femms loop push iret xchg stos sbb dec push sub shll dec lock mov push dec adc and fdiv sub inc sahf repz repz pop repz sbb lods (bad) mov mov in xchg pop sub notl inc mov lahf or enter sbb sbb sbb sbb imul mov ja sbb iret sbb int3 sbb jmp scas push fwait outsb dec mov repnz (bad) or enter notb (bad) push mov ficom xor repz push pop sbb fdivrp shr repz jne call adc repz repz repz repz xchg repz push xor sbb lret movsb xchg iret xchg push xchg push adc push mov add adc dec decl cmp xchg xor sbb outsb loope push test push (bad) pop das notl cs pop or in popa pop lret fs mov push sbb scas push insl fwait inc sbb and add mov jnp jae xchg lea xchg mov xchg les add and xchg inc mov xchg inc xchg mov xchg test xchg (bad) sbb adc das pop adc dec lods adc adc sbb sti out imul dec repz repz in rep int3 push pusha movlps push add pop add pop jae repz fidivl or pop fwait push cmp pop xchg pop fbstp hlt push pop jmp dec adc add add add jecxz int mov push mov push mov push scas cmpsb push lods cwtl push lret jae out xor mov cmp loope insl push jg push jno (bad) sbb es dec outsl loop push sub or leave add adc adc adc adc xchg gs push inc or push add fwait mov pop xchg sbb inc fwait shrl sbb jecxz mov and add xchg cmpsl sbb fwait jmp loop push lcall cld loop push insb push and push dec pslld adc jno adc jle rclb adc rorb xchg (bad) popa push cmp xchg mov mov aam aam mov out fbstp jae push push ss adc loop push xchg xchg jle pop loope push or repz jno notl adc or inc adc sbb sbb aaa adc in mov (bad) dec adc cmpl mov fwait inc pusha nop or adc adc sub ljmp loop push cmp fwait lods test addr16 mov or push mov outsb jg cmpb add lret dec xchg add push and add add mov movsl and fiadd add (bad) jecxz int vmread dec mov adc dec adc insl fcoms (bad) mov stos dec adc or cmc ljmp adc adc dec adc inc jmp adc adc cltd ja mov lcall sbb push cmp scas or adc hlt mov lret xchg adc jno in adc xor sbb adc adc imul inc adc adc stos sbb pop repz in mov loope push xchg push mov ljmp cmpsl xchg adc push fwait das in and push gs inc sbb xor add mov popa jge addl and cmpsl or ret loope adc jp add adc adc imul adc in out cmpsl adc adc dec adc xor dec pop adc adc adc adc sub call sbb sbb sbb jle jmp adc push lcall rcrb aam fmull or xlat scas adc xchg lret jmp xchg enter ja (bad) push xchg std xor sbb adc sbb sub insl pop repz push mov aaa sbb adc or shlb je jbe movsb add pop aam adc adc mov imull adc fdivs adc sub int nop pop add add cmpsb dec add mov out adc lods and mov inc pop mov adc push add push add jbe fnstenv popf xchg add pop mov test in and mov add test adc mov adc icebp add repz inc xchg js rolb adc (bad) pop push adc pop push adc push aaa les (bad) push jg push jle push xchg add scas (bad) push int3 test push jb or adc adc rclb pop mov pop out scas pop in push dec add or pop testl mov (bad) add pushf or pop xchg dec aam sti jne (bad) jg adc sbb test shlb xchg fstpl jae sbb bndstx or cld sub fildll sbb sbb sbb sti sbb (bad) xchg clc pop xchg pop mov int sbb in xchg das sbb loope push test mov sub xchg cli sbb loope push (bad) fwait dec and xchg les mov fwait and push and push xor push sbb loope push bound push ret sbb inc push push jl lret xchg mov jo pop push add push dec xchg sub or out push test aaa push cmc mov jmp lahf mov adc shrb jne mov fsubrs xchg adc int inc adc lds push sbb loope push (bad) fwait lds xchg cmp aaa loop shlb sahf fwait mov sbb es add add add clc add push stos das push imul dec xor push push sbb (bad) je rcll outsb mov inc mov daa stos push add repnz push adc fistl lock (bad) repz inc mov sbb rcrb and mov adc push adc (bad) sbb movsl sbb rcrb jmp xchg sbb sbb cmp loope sbb inc sbb sbb sbb stos sbb enter sbb sbb sub or int3 jbe stos jnp mov sub sbb int3 sbb repz sbb sbb sbb pushf add sbb mov aam jns or fcom scas cmc adc sub lea repz in xchg adc jno out push add cmp or add in or add add jecxz dec rorb push adc enter push into cmpsl (bad) int adc add rclb movsb xchg mov (bad) mov push repnz push in jecxz ss xadd rclb inc inc xchg pop sbb pusha push dec fwait sub stos xchg mov gs adc push adc jno in je lods xchg adc and test mov repz ret and repz xchg repz arpl test repz mov add sbb cmp in sbb imul out sbb sbb sbb push sub pop enter repz scas dec rep or shr repz test sbb cmp pop add jge adc in sbb jno lret (bad) dec dec adc in pop (bad) pop popf icebp pop mov pop iret xchg pop int3 jge jmp pop call pop push leave pop or pop dec jo push add jno fwait pushf loopw push dec push (bad) aad insb push adc adc loopne jmp icebp lret fwait test pop push xor movsl adc and pop out pop ret sub popa loope inc pop sbb sbb adc inc xchg adc adc adc mov movsl xlat sti xchg repz add push cmpsb rep mov insb dec mov xor fstl push cmovnp out xchg pop lret mov dec adc std sbb cli sbb sbb pop sbb pop sbb jns mov add cmp add add dec gs scas push pop adc fucom or mov adc lret pop add and int add call dec mov xor loope imul mov sbb xchg repz push repz iret xchg stos sbb pop or pop jmp pop mov pop push push jle add jne lds cmpsl icebp addl daa loope jle mov jg or push aaa push lret jne inc mov es push (bad) fwait mov daa xchg in enter jno ds test test fwait das or xchg mov dec loope push push fwait aad loop push inc xchg or fmuls xchg push sub dec dec jno dec in into add lret std pop ljmp mov dec sbb loope push fnstsw cmc cld push lea test mov mov push out or adc lock repz xor or lods call mov sbb dec sbb sub or (bad) jmp dec loop push out (bad) imul bound and sbb mov jno push add lea and pop adc popa lret push mov xchg and mov mov rcll mov or adc adc imul add lret out stos adc cmp pusha jmp xchg mov mov adc hlt adc fist sbb adc adc jle fsubr cpuid (bad) lcall sbb sbb push adc in xor test xchg lods imul xchg ljmp add jns push push cmp inc or loope push xchg push int test repnz icebp adc icebp ficom fwait mov es add loopne (bad) push xchg xor (bad) adc jne adc adc add inc adcb xchg xchg es mov xchg ret in xchg sub rclb jge lea stos or int sti (bad) adc outsb adc adc adc sahf mov mov adc push adc rcll mov cmp pop adc push adc mov adc mov push adc ljmp ret mov mov les imul cmc fwait ja loop push sub shl pop in pop adc jl cltd adc scas xchg lods jecxz push jne aam pushf mov adc xchg out movl xchg adc adc mov stos iret rorb pop inc notb cmp pop call pop (bad) xor lods xor outsl push pop inc push pop and pop add out pop sarl pop adcl mov insb cmp dec (bad) push mov push mov push jcxz and ret and rclb sub push adc adc adc repz sbb pop sub push mov imul or mov repz xchg in xchg push dec xchg or xchg pop test jle xchg jnp xchg cltd sarb fsubrl push push adc adc enter into pop cs push imul sub iret adc push insb sbb outsb lret test lea iret ds or pop push adc mov dec adc mov subl sbbb loope push dec fwait sub loop push stos xchg mov data16 push aas fwait adc loop push xchg es add push inc xchg and pop loope push aam stos xchg inc push cmp ds sbb xchg xchg popa loope push add out loop push dec xchg xor sbb fwait mov sub out xchg int stos loope push dec fwait sub xchg xchg jg and add fwait mov loop push xor adc call push jge shrb cmp adc mov push inc adc int3 push and icebp daa push jmp loope push jg (bad) push loop rol pop adc mov sbb add add add add add addb scas add mov test push jl push pop lock adc or pop cmpsb xor test pop popa inc iret inc add pop add add je mov add add movsl add cmpsb add mov pop ret pop gs pop add pop or fidivrl xor xchg cmpsb enter xchg bound or lea adc adc mov divl cmp xor adc adc adc mov adc test adc aas movups pop mov jp adc mov (bad) sbb sbb sbb and into test xchg adc dec ficom sub ret dec or adc add add add add and outsb jmp xchg adc mov ret adc cmp (bad) repz (bad) ja sbb lea bound jns mov add lock jnp adc dec pop cmp pop and fwait (bad) enter mov or out fwait lds jb add add pop add adc mov loope push and add loop push adcl push or loope jg add add in repz inc rep inc pause add mov repz xor mov push imul add stos xchg jne xchg jl xchg cwtl dec xchg movsl or scas jle lea sbb sbb cmp repz lods repz repz (bad) repz dec repz xchg cmc rcll je push adc rorb pop adc sub jecxz int or aaa js xor push sub adc (bad) mov push xchg adc inc push lods adc push push int3 pop push stos fs mov dec (bad) xchg sub push loope push fistpl push das xchg pop fwait in adc arpl adc and loop adc (bad) mov jb push sub pop push les jnp pop pop cmp repz and repz addr16 repz sub xchg call rcrb repnz repz repz int3 repz mov jns repz repz or lods out xor xchg jb sbb xchg cmp xchg pop rclb xchg fwait push xchg mov xchg lret jmp xchg aas push push xor fisubr push add pop lret js pop cmp pop push push jno dec sbb fdivp jbe push mov xor or gs loope push or mov xchg xchg add fbstp (bad) rclb repnz mov xchg and add loopne icebp fist mov adc adc mov push lret cmc adc push pop sbb into adc push test push fstl dec push sub push imul push iret fwait mov loop push pop xchg in lods loope push push fwait xor loop push mov xchg shr cmp push fcoml add or adc mov adc ret pop (bad) cli imul xor fwait aas std (bad) fwait stc jge inc mov and mov shlb repnz cmpsb js xchg mov xlat pusha xor inc mov fdivl mov mov adc aaa xor imul loop pop dec xor sub pop out inc pop lods pusha fwait mov and xchg clc sbb loope push pusha fwait inc and out add sbb movsb xor xorb inc dec jecxz leave xchg add loope push mov push ficom jns adc ret add les cmpsb push sbb dec xchg sbb mov sbb sbb rcrb mov sbb sbb and in inc sbb sbb sbb sbb sbb cld sbb sti sbb sbb pop sbb sbb sbb sbb leave sbb in aad sbb add in add pop out pop mov mov fwait jbe and push push pop xchg (bad) sbb call rep scas push add sub fwait int3 lods sbb sbb sbb loop push ljmp push inc fwait daa add in mov add inc icebp sbb repnz adc adc push cmp fcoml xchg sahf sbb cmp sbb adc push stos adc adc adc adc adc mov or add adc movlps adc adc adc jne adc fcmovnbe pop clc mov ds pop cmp pop jg pop xchg xchg pop mov test pop push pop cld mov xchg add push adc sub jo cmpsb imul cmp adc stos adc mov xor pop xor pop fsts stos or adc rolb xor adc (bad) adc hlt dec cmovl sbb xor adc ficom xchg loopne xchg in xchg inc rclb sbb and push xchg into push xchg (bad) ja jge xchg pop nop xchg ss or cmpsl rclb out inc in and rolb adc adc adc xor push inc adc popa adc adc adc stos adc aad std sti outsb fcomi mov adc (bad) rcr pop adc sarb lret pop xor pop push jge jb pop jae pop xchg ljmp mov out add jmp xor jo push pushf xor fsts fldl std dec adc adc aas repz pop nop pop push inc imul mov add mov dec xchg add xchg stos popf (bad) fmuls adc xor push rcl push cmc mov adc hlt pop xor and outsb lahf add push lods fwait mov sub cwtl pop fwait mov dec loope push loopne lds xchg inc sbb loope push mov push push ss or in movsl push popf fwait jo loop push sbb cwtl push jns pop ss push push pushf xchg jg inc loope push call pusha push sub lods push mov push (bad) xchg movsl sbb fwait adc jne push sbb loope push (bad) icebp ffreep inc adc adc adc push adc hlt loope push mov jns addr16 loop push mov and push ljmp add add cs sub push jecxz push fcoml jno xchg xchg push imul mov loop mov push adc pop repz and pop add pop ret mov pop jae pop push and sub add pop lds mov pop jl pop pop mov cmp ret add add add jge mov push (bad) mov xor push push sbb sbb sbb stos sbb movsb sbb (bad) sbb sbb sbb sbb sbb sbb mov repz pop push xchg xor xchg sub xchg dec rclb xchg xchg pushf push xchg mov mov lock inc push lret (bad) cmp cmpsl sub push mov mov outsl cmc incb lock adc sbb cltd jbe loop push adc ljmp loope inc cmc inc push push adc rcrb xor (bad) push xor sub out adc add push or sarl and inc fstl ret push push call loope push dec fwait and (bad) je mov imul push (bad) xchg mov push and sbb fwait inc push add bound fildll mov jecxz push aas xchg sbb fsub mov dec loop jmp repz push imul dec repz repz cmpsl out mov test sbb or hlt inc or jns repz inc repz repz repz or repz jo xchg adcl scas xor push ret lret clc jmp xchg outsl or repnz adc repz pop push jp xchg cmc aam inc loop icebp jecxz xor xchg fsts loope lods push adc fwait cmp stos xchg mov inc add mov push adc movsl adc mov sbb inc sbb and loop add push and push gs es loop push fistl xchg pop mov stc int3 xchg fcom adc imul sbb sbb sbb sbb sbb mov stos rcrb outsb in sbb sbb scas repz mov sahf inc repz or mov mov xchg xchg jmp xchg or and adc adc mov lods adc mov sub sub add repz push mov adc mov ja sar push stc fs jb adc lcall icebp add fwait outsl dec loop push out mov adc (bad) adc fs adc adc xor pop push adc push adc icebp arpl inc xchg fwait add loop push adcl cmp add test add ds add add jbe fnsave mov sbb loope lcall test repz adc fimul xor unpcklps adc push insb mov insl push dec fwait or loop push (bad) xchg dec sbb loope push sti fwait cmpsb test dec push xor mov xchg fwait push xor notl xchg nop sbb cmp insb pushf xchg sub xchg adc xor cmc pop push mov xchg cwtl xchg pop aad sti xor fs ficomp int mov (bad) (bad) negb push (bad) mov xor xor ud2 loope loopne mov xchg jp adcb and stos mov mov sub push push out xchg int scas loope push jle pop into xchg or enter (bad) push addr16 inc test and pop add mov fwait bound out loop push enter loopew push cmp sbb add jl mov add add mov sbb not mov loope push (bad) fwait jg pop xor pop xor pop dec scas pop inc mov js pop lcall in pop int pop loopne pop add xor daa sbb inc (bad) pop jg pop jle pop lcall add xlat add mov add add add add add xor xor push cmc jg adc mov loop push push xchg sub push loop push lds scas push mov repz lock pop add push loope push ret and push and mov jle push in aaa loopne or int add jge pop sbb loope push cld fistpl mov pop push jmp push mov push pop adc xor sub inc lods push inc mov imul push lods out mov pop pop jecxz pop in pop pop pop pop and inc stos pop jnp pop lahf push pop mov pop stos push pop enter mov push xchg pop sbb pop dec idivl add sub pushf adc xchg (bad) out cmc sahf or mov pushf fsubs dec fisubl cmp (bad) dec sahf add xchg jne jae (bad) push pop in push push out jns adc or iret mov push xchg adc jnp rolb push adc xchg adc cltd jle mov outsb repz xor (bad) xchg mov xchg insb xor push xchg jecxz xchg repnz adc adc adc adc adc mov mov xor or sbb add pop mov sub push pop sbb sbb sbb sbb mov xchg push sbb sbb (bad) repz hlt repz adc into repz and sbb cmp imul dec pop outsb push pop sub mov pop (bad) jl loop pop add pop add int add jecxz lret push insb ss mov movsl rcll mov (bad) repnz push movhps stc mov or dec cmpsb and or into stos or (bad) int mov add add push add loop push dec shrl adc or loope push mov jmp sbb dec push and push stos xchg push inc loope push pop fwait loope loop mov loope push add out loop push xchg xchg push inc loope push lcall push jnp pop sbb loope push fstps push sub loope push xchg fwait ja loop adc cmp mov push adc push inc fwait sub loop push mov ja push loope push lock mov loop push cmp out xchg pop ror adc outsb aam lods cmc jnp adc jl leave mov fwait pop add in sbb sbb sbb sbb das repz inc xlat xor mov adc ss bound xchg inc sub inc xchg les mov mov (bad) adc adc adcl movsl adc mov or sbb pop sbb std sti or ss repz repz inc repz cli jb (bad) xchg xchg repz repz xchg repz xchg xchg mov xchg xchg ljmp mov sbb adc lods repnz dec outsl mov popa sbb xorl test xlat cmpsl fistl adc movsl adc xchg loop adc rorb pop push xchg pop imul adc mov pop out xchg pop or pop or aam add xchg into mov xchg stc xchg push sbb xchg xchg fwait aad ret add in repnz js repz mov pop out sub jne jmp mov (bad) in xlat pop hlt adc and xchg loopne mov pusha push dec fwait sub lods loope push jg cmp pop adc pop call sbb inc daa push and (bad) push test push adc lock mov pop loop cmp add adc xchg jns cmp sbb fwait xlat test xchg pop sbb (bad) movhps fwait jno sbb pop repnz int3 xchg scas xchg inc mov xor sbb rol ret in adc xor sub jne or mov sbb sbb sbb mov hlt iret sbb in sbb fwait inc das in sbbl cmp pop push sub mov out test jg (bad) in push add push push (bad) pop push push push dec bound mov mov xor or xchg mov js inc and and pop out pop movsb pusha pop test addr16 sbb out xchg lds xchg jo pop fwait sbb and push mov push pop dec push cmp sbb loope push sbbl notl nop sti adc nop push pop pop xor sbb sbb sbb sbb mov xchg loopne push or aaa adc cmc imul jg repz repz xor scas div int3 fpatan lret fwait mov bound sub aad xchg xor fwait sbb loope imull pop add mov adc loope push test setae in nop and push mov push jne push dec rcll notb repz ret fwait cmpsl pop adc fwait daa in (bad) icebp cmpsb bound push push test adcb push loop push cmpsl (bad) mov adc jle adc adc cmc icebp sbb fcomps push push xor or out je ret nop push lahf xchg push jle push xor push repz dec xchg jge mov push xchg cmp ret repz rorb inc nop push lcall push rcrl push pop xchg icebp sbb loope push jne ss fistl xchg (bad) sbb je jp fwait mov pop xor mov les sahf inc negb push jl jnp xchg mov sbb fwait adc add int3 jle or push sti push fcoms jns adc adc ficom clc sbb sahf inc pushf sbb mov repz repz repz pusha outsl repz xchg repz mov mov mov xchg imul add xchg loopne xchg movl test xchg xor dec xchg in xchg (bad) bound test mov (bad) adc sbb jp negb cmc cmp clc sbb add xor push push sbb sbb sbb nop mov mov sbb (bad) in (bad) rcr scas lea xchg repz push or xor sbb sbb and mov sub mov test adc rcr cs mov fisubrl add dec xlat push enter xor dec add rorb aam (bad) sub ja (bad) pop ret insb sbb stos mov jmp outsb iret psrld lods repz adc or fsubs (bad) es mov adc mov popf rolb mov xor pop fwait aam jnp or fsubs xchg push and mov add int (bad) pop pusha je dec jno and sti aam test imul push rcrl and inc adc add outsl adcl adcb cmpsl icebp clc push fstpl push pop xchg sbb sti loope adc dec push pop cs pop add cld je mov loop push xor loope push nop fwait jno sbb add add add or aam inc xor int3 inc lock out dec xlat fisubrl xor push xchg enter adc dec xorl pushf fdivl aam jne xchg rclb jns inc hlt pop mov pop mull loop mov in adc repnz into aam clc adc lret cmp fiaddl jp (bad) xchg repz add xrelease mov and adc push cmp pop (bad) icebp pop (bad) jbe jno sbb (bad) mov mov inc hlt inc adc arpl rolb nop jns pop xchg repz adc mov fcom popa sub adc jno pop pop inc sahf pop xchg jge add dec add add add jne sbb enter (bad) add jecxz int and push add push out push ret adc adc cs inc and and inc push aam push mov push mov popa push and cli test adc adc adc adc movhlps adc fcoms adc outsl xor inc push adc adc jne mov adc adc adc mov repz mov adc rorb out (bad) and fimull inc jge sbb adc aam pushf push adc xor iret stos push ficoml mov adc mov enter xchg into dec loopne rorb aam (bad) or fisub xor rorb mov lcall xor rcl xor sub push cmp fadds mov xchg (bad) pop cmp or rcll in xor lea xchg cmc pushf adc cmp test mov push or sbb loopne add pop inc lahf pop test pop and pop loop pop rcll push pop (bad) jno jb int3 xchg add xchg jecxz dec push in mov mov scas scas adc adc sub pop push cmc pop ljmp add test pop jp pop push and xor pop or pop mov pop jns pop jge pop pop mov ds ffreep pop mov pop pop lock xor pop or dec adc fimull cwtl ss jno push push dec mov adc data16 jns aad adc pop je pop push mov jecxz inc pusha sbb mov test mov (bad) xchg push call or xor adc push enter into stos mov mov push xor ret stc (bad) jne adc getsec repz mov insb mov les push cwtl or sbb mov mov mov adc push ret (bad) int movsb add repnz mov jnp mov aam aam inc adc pop fsub scas jae fiaddl xchg (bad) (bad) xor adc pop repz stos repz xchg mov adc (bad) repz pause hlt repz xor shlb adc or adc or iret and stos cmp lea push adc adc adc addr16 adcl xchg andb adc adc adc rcll not mov in sbb jb or adc sbb loope xor aaa rep push repz repz xor ds xchg cmp clc sahf xchg rcll xchg test push (bad) xchg dec rclb xchg std add enter loope push insb in fmuls (bad) xor shll into leave add push aad and mov pop push xchg rorb jl repz and rcrb push out je push icebp jecxz xchg sti or adc call mov adc pop je push orl shlb and adc sbb cmp cmp pop repnz add pusha aam xor adc in popf mov mov mov or aam cld and push sbb add pop pop adc add add jecxz lret push sbb push push pop push call push mov adc adc mov pop pop sub jmp dec lret movl ret jecxz lret lds out sub push or push repnz push rorl xlat adc mov adc adc adc pop notl jae jb mov jecxz dec push jno push pop xchg push cmp sbb fnsave mov push jp push data16 dec loope das in adc push sbb shrb les lods or ret into les mov sarb jmp push fimul mov lods or push sarl divl mov repz push pop or fmuls cs fisubrl or xor (bad) mov sub or or pop loop push adc and jl cmp fldln2 mov mov lock add dec addr16 jno mov enter movsl and fiadd pop cmp xor rolb adc add ret dec aam repnz jecxz aad lods jmp dec lods sub or les lea fmuls add dec outsb sbb repz into dec (bad) mov dec add mov sub mov ljmp cmp mov add out aam int3 fldt mov mov mov aad ficoml leave adc movsb jmp ja jmp out fsubrl clc sti scas das rorb mov subb test push adcl adc fdivrs movsl fidivrl pop cmpsl (bad) pop pop mov into ds dec mov cld cmp add sbb push sbb outsb or rorb in mov and sbb in sbb fsub push mov (bad) stos dec jecxz add bound pop pop pop add fsubl push les dec psraw dec adc (bad) xor mov push dec xchg cmpsb or pushf xchg adc xchg mov adc pop (bad) (bad) insl pop sbb into inc pop jecxz inc out mov adc adc xor dec hlt dec dec sub xor or adc ja xchg push aam testl repz das fisubrl jle fnop xchg dec out or push mov jecxz repz loope in inc xadd adc ret out (bad) cld aam cmc mov inc xor int out iret aam in adc inc out fadd pop jmp jmp cmpsl jae enter out into movsl gs movhps pushf fdivl jbe rolb popf jb (bad) xchg jae or xchg push loope adc aam nop cmc or pop fdivrs sahf icebp fidivrl repz pop sbb adc jl (bad) into jle adc xor or push (bad) adc je inc mov ffreep dec bound dec or push xchg inc sub jnp push les adc jg xchg sbb fidivl mov cwtl enter mov movq ficompl aam mov push and ror mov movsb xchg nop inc mov xchg adc call cmp daa lcall inc fisubrl dec mov (bad) sub enter into mov cmp pop cmp outsb adc or ret in cwtl or jecxz fxch adc fwait adc stos movsl les lea int and sub and cmp (bad) add in add jecxz add ja xchg adc adc out xchg clc rcrb xor les mov cs adc mov mov dec dec and adc notl cmp fidivr sti inc hlt cmpsb movsl adc dec ret adc mov xor xor or enter push jge adc jb jae adc mov rclb lods xchg lods dec sbb setb jno flds rclb adc push hlt aam sbb (bad) sbb dec fimull out (bad) dec in enter insl imul fcoml stos sahf stos fmulp fs popa (bad) dec adcb cmc es push and mov les add or inc fcoms addr16 adc scas xorl mov xor adc sti clc dec pushl outsl adc sbb push xorl inc mul pop push sub dec jecxz inc int3 mov mov (bad) frstor stos (bad) or xor ficoml xor push xor cs adc push loopne fcoml push adc jae jb jno pusha mov xchg cmpsl xsha256 cmpsb nop mov fcmovnbe aam aad notl pi2fw int3 or sub sub das adc enter into dec adc dec shrb imul fisubr adc lds (bad) (bad) inc scas adc or or or add adc and and inc (bad) popa shll gs pop fs movsl xorl adc sti push cli (bad) cmc aam lock adc push push xor or add add insl fnsave negl mov aad lods push adc test push adc pop mov xlat (bad) or or sub fs repz mov mov aad add fnop push icebp xor fisubr mov mov movsb mov add and adc cmp (bad) (bad) pop sti enter xor mov inc adc cmp imul in or rolb inc adc jg popf movsb pushf xchg xor adc sub push addr16 adc adcl push adc addr16 bound cld pop adc pop ja adc lea jecxz or enter in xchg inc loop and and jecxz jo add jbe rcl notb adc adc pop xor push repnz (bad) xor dec sarb xchg sarb nop out mov iret or push in fcoms in pop ljmp (bad) or sub sub sub dec icebp dec fmull repz fisubr shrb ret cmpsl test mov bound stos shll rorb adc and adc add add adc inc repz enter xchg into arpl bound adc int repnz test pop out push push in cld adc adc insb rcr lcall enter shlb pop adc out (bad) add xor and jge adc cmp cmp int3 arpl stos sub push les jns xchg xlat mov dec cmp adc and jle jp adc adc adc inc cld inc or mov xchg mov jp test mov push into xor xor ja jle adc cmp rclb lock test adc sbb rcrb pop rclb push and adc dec xchg fmuls ja adc out fisubl loopne ret je (bad) pop in jecxz loope sqrtps sbb sbb mov les inc or inc fcoms inc clc inc fiaddl inc (bad) or in (bad) out adc inc xor adc mov adc pop mov push hlt push arpl cmovns mov pop mov pop mov repnz cmpsb test pop inc push mov ret jns cltd mov xchg mov lret gs sub adc in inc jns jb pop adc adc jns jns aam (bad) repnz repz lock (bad) lods pushf adc dec ds push hlt pop add push aam jb imul adc lods (bad) mov test iret push int3 popf fidivr pop ret sbb ja xor add les add fadds inc fisubl lcall xchg add movsb test gs add mov push adc push movsb add movzwl push mov rcr into insb repz mov sub sub cmpsl add pop loopne jb cmpb jae add jecxz xlat in std xor jbe js enter sbb cmp sub (bad) sbb aam lret ror xor (bad) (bad) jb cmpps mov test roll adc ja fmul sarl fidivl sbb mov cmp lret ror jne fsubr jl xor adc arpl (bad) sub pusha mov aad aam xlat sub or (bad) lret (bad) xor jle fimull (bad) jb enter jecxz js (bad) in adc sub cli insl stos adc jle sub arpl (bad) das bound enter fxch fsubrs rcr mov fildll xor icebp inc lock and movntps push adc pop les or adc xchg ficoml int popa lea and adc aad aam mov jnp cs popa fsts mov call pop sbb xor cmp or sbb add pop jp adc or mov cmp sub adc sbb inc mov mov add dec ret je (bad) jno jbe movsl lret sub jp xchg lods lea lods mov test (bad) stos lahf add test scas repnz scas mov jbe fdivp jmp pop hlt xor adc xchg mov mov jmp sub xchg (bad) fdivrs shlb adc adc shll in inc stos bound sbb pop loopne pop add dec dec and movntq out daa adc dec sarb adc pusha (bad) outsl (bad) sarl adc or and sbb mov adc pop or fsubs and and and adc and and daa pop mov and and and daa or shr das pop in xor or cmp cmp cmp and and das adc or mov sub sub stos sbb sub das repz or fmull sbb pushf rclb sbb (bad) xor xor aas xchg ds or adc sbb xor xor xor adc fadds repz aaa (bad) xor js jmp or xor pop out pop push sahf in inc pop scas enter xchg lret insb sbb xor movsbl xchg mov pushf (bad) sbb xor mov insb fildll adc aam push jp rol jg pop lret pop in adc jl xchg fdivl imul add (bad) dec cmp adc dec loop jecxz in cwtl in fadds mov loop mov dec out ret das or mov push and sub dec sbb add pop cs or cmp dec sbb mov pop sub das sbb enter sbb or mov adc shlb sbb xrelease push xor dec cltd imul ds repnz inc xchg adc pop loopne jecxz adc and pusha jge fwait adc and shlb pop xchg in push xchg aam int cmp sahf mov inc pusha adc test xor lcall mov pushf mov mov cwtl mov xor mov adc mov adc cmpsl lahf cmpsb fsubl nop movsb fisub lea rorb test rep mov or sarb dec les test xchg lods mov scas cltd scas (bad) mov mov scas fsubr nop lods fsubrp popf std mov mov mov mov enter pushf movsb mov test mov mov adc mov mov mov mov push fmull nop mov push lea mov (bad) movsl mov je insl int3 scas movsl adc cli dec stc out xor adc adc incb clc dec xor sar std fmull push (bad) fimul pop in pop test or adc aas pop adc cmp aam cmp or xor add adc add push and into lea add cmp fdivl mov ret or pop mov xor xor add les or add push sub sub das fisubrl sub enter sub sub sub sub or fcoml das fimul dec rcrb and push xor push (bad) pop stc pop out fidivrl add incb ja push adc sub popf imul ret lcall push loop xorb subl subb add sbb add pop sub mov in loop les xorl (bad) faddl sbb and mov and add aas add push xor xor adc mov stc and je fdivrs or dec cmpsl adc mov cmp mov adc aaa xchg adc es or and aas xchg lods test xor aaa or fidivl mov xor rolb adc xor ss aaa rcll xor cmpsb stos adc or fsubrp add rorb das add jns and add (bad) aaa repz add or fsubrs or fisubrl adc push adc sub cs das add aam rorb fisub adc daa adc push cmp cmp adc adc xchg les adc fsubs or fisubl add push adc and es daa adc aam push or push adc pop cmc pop (bad) pop adc pop enter into pop mov pop push adc push cmc push (bad) dec (bad) dec or rolb inc rcrb pop les push or fcoms push ficoml aam (bad) xchg out enter into push lock repz fmull in push fimul loope rorb adc in (bad) inc out inc shlb jnp fwait mov push xchg adc add xchg dec out mov cmpsb andl mov pop out mov out inc push mov fisubrl sub xchg push lea mov mov orl mov or je fidivrl (bad) mov mov sbb shrl repz fsubl test mov into or add pop adc mov pushf aam js test mov mov add lods xchg test test xchg mov int3 mov mov mov mov mov mov xorl (bad) adc xchg mov or push mov push test fisubrl (bad) mov sarl repz fdivl test lods shrb xchg or repz stos test aam mov xchg xchg out enter mov mov xchg mov (bad) mov push shrb nop mov shlb out in (bad) xadd mov adc push in mov pop dec add in loop outsl out out and adc aad lock mov enter js mov jno in push jmp sub cwtl xor in daa mov jecxz mov mov mov mov shlb rep out (bad) mov mov ja jmp adc mov mov or or mov mov mov mov mov in daa lcall repz popf cmpsl in cmpsb test mov adc or mov mov movsb in in lea sti mov mov mov mov in shlb mov adc movsl mov stos lea mov sbb sbb mov out (bad) cmpsl or movsb andl sti adc mov out or push mov repz lods cmc mov popf mov mov or or lahf scas add repz sti stos pause lods std lods fwait scas repz adc std dec cld inc mov popa int3 fs inc add or cmp fsubs xchg mov (bad) in test inc xchg rclb std pop xor adc nop adc dec dec adc mov adc loope mov adc xor adc nop adc pop dec adc mov adc loope mov adc xor adc nop adc dec test fimull adc mov adc loope mov adc negl (bad) into loopne mov adc loopne mov adc adc push std push adc mov adc dec adc inc adc dec push adc adc dec xlat adc dec adc adc pop adc adc adc lds xchg jno pop fstl and sbb fidivrl out fcmove mov cld outsb xlat (bad) icebp rcl lret std mov sbb mov out fmul (bad) icebp lret rol icebp lret enter cltd popa enter xchg adc loop xor shrl dec dec es push loope ret xor adc lret and adc mov jns aaa adc add adc mov mov addr16 push fcoml add inc pop es adc mov add or fidivl add xor test push into xchg ja insb je (bad) je cmpsl adc mov mov (bad) sarb sar inc clc adc inc not adc or add dec enter dec into adc insl shrb adc dec out dec push or and imulb adc lods or sbb ficompl add add add and into pop dec add cltd adc or outsl fdiv scas xchg test call adc outsb ror lods mov clc adc mov sbb repnz jle push cmp cmp adc sbb cmc or dec idivl adc adc sub jge adc jo rorl lods mov stos xchg adc les cmp cmp jg ret fcmove popa mov sub add sbb adc dec out jbe add xlat popa mov adc out lods push cs adc ljmp adc cld pop jecxz or out pop cmp or mov adc mov mov pop sub adc xchg mov adc rclb mov fimul xor popa adc push out mov push outsb add incb pop movsl notl (bad) mov fsts xchg (bad) adc add mov sub adc pop push push adc js mov inc loop jecxz pop adc adc js pop xchg mov xlat imul and aam push sti setp sbb pop loopne enter cwtl into fnstenv rclb push icebp sbb push ljmp inc adc pop insl or jg sahf stos cltd fcmovb outsl rol inc out inc scas mov inc (bad) fwait movsb sahf and decl sbb (bad) hlt inc mov mov int3 mov lods movlps adc adc push je rcrb xor test sub dec lock bound adc test or dec add lock xor into negb rclb aad fdivl xor mov dec cmp dec mov or cmp mov rcrl (bad) les add cmp fisubl (bad) lds shrb test pop adc adc cwtl adc adc push out sub adc fmuls fimull dec bound dec into dec jecxz rclb loopne add fisubr mov push js pop adc adc and popa shrb xor push test (bad) adc fstpl das cmp xor push notl jle repnz sbb lds add add adc aam enter mov adc repnz cmp mov cmp cmp scas or jle arpl push aam adc repnz or or mul sbb adc loop in in out cmc sbb in arpl pop adc movsb popf stos jo xor cmpsb adc in (bad) jne fidivl les adc xchg mov sbb inc xchg xlat lods xchg xchg adc push (bad) icebp inc repnz les mov cmpl add xor into lea jb inc in inc fcoml xor or mov rcr push mov ds jecxz cld inc movhps adc aam add lock mov push mov js jne aas mov stos adc gs mov adc mov (bad) mov out mov cmpsb daa les mov jns push adc push in dec adc add push pop jmp lcall adc cltd mov jo push push adc icebp adc mov gs adc stos xchg dec pop imul jbe ja cmp int3 add andl out in in (bad) jecxz adc daa or cmpsb (bad) ror lret fmul mov fs xor popf aam cwtl mov pop in fistpll push jecxz loope outsb (bad) jp adc jmp adc xchg adc dec jecxz loope call iret jp (bad) leave jnp int3 inc adc push sub or cld xor fisubr pop sub lods pushf mov jge adc jns or rolb mov xchg push scas xchg in xchg nop scas xchg gs adc or adc xor inc or xchg test sub les outsl sbb add push mov mov or int imul fs adc add rorb aas adc mov xchg mov pop cli pop mov in pop out adc loope jae cs repz fdivrs or les xor cli add scas and das xchg or pop push mov mov mov test adc sbb push xchg fs sbb jae fsts pop repz ret test rcl insb shrl adc sub add add jecxz inc loopne notl out out adc or fdivs mov (bad) jbe les mov in insb into minps repz in push adc cmp adc push jmp shll fsubr (bad) or imul icebp jne jb jno fidiv jg jle arpl repz or add les lods mov dec js pop add push les popf cmpsl pushf aad lea mov mov dec pop outsl adc in push adc hlt adc push loopne push je add (bad) lret push inc in out push adc adc adc sbb pop lock pop adc adc xor xchg mov mov scas adc mov icebp inc ret mov (bad) pop cmc pop jmp lock movmskps sbb sbb mov (bad) enter fcoml add inc out out stos xchg mov cltd adc outsb cmpsb call andl sub adc ss cmp mov rorl andb xchg pushf or jae (bad) jb adc pop add nop cmpsl repnz pop xor rcll shll push daa push adc or fsts out int3 adc adc adc sbb push icebp adc xchg test (bad) shrl aam ja jb jno je rclb add (bad) mov mov mov ror pusha iret xor outsb outsb add push out add add push dec dec sub sub dec xor dec in je popa push inc xor mov mov shl scas std jecxz aaa pop fimul or adc adc pop adc push insb adc adc pop and or notl insl lds adc or inc mov ja adc add mov adc js adc pop negl adc lods xchg lods dec adc xchg mov jno fdivl adc dec (bad) lea (bad) ss mov jmp dec and cs mov stc mov repz fmull sub dec jl cli jns adc andb ror push xor je mov adc mov xchg movlps repnz int3 adc adc adc mov mov inc add lret adc and pop in adc stos xchg out inc clc inc push dec adc inc negl adc adc adc repnz cmp adc push out push enter pop xlat adc paddusb adc pop mov adc sahf lods lahf (bad) mov les rorb sub jno fdivs stos xor cmp (bad) mov inc fisubrl mul jno shl inc (bad) sbb add shrl adc adc adc lret cmpsb (bad) adc shrb (bad) movsb xchg sub adc das xchg add adc pop popa (bad) fsubs pop adc adc out jns data16 inc adc adc jbe and test adc jae jnp xorl push adc adc push pop repz daa adc xor xor rclb ret jo movb stos stos sub sub mov push dec clc jl or push pop in es adc jnp sub addr16 adc mov outsb adc adc (bad) fcmovbe data16 mov xchg out inc out arpl mov jl fiaddl adc (bad) and jmp adc outsb loop jle adc cmpsb push push call xor xor adc push icebp ficom sub (bad) xor cmp pop pop mov data16 stos mov notl test out pop inc subl notl mov adc jo es pop scas lahf adc adc lock jl ds adc adc mov mov dec loop xor dec push loopne adc adc out int3 adc adc adc in out sbb cltd mov sarb fistpll icebp lock repz mov adc movb inc mov lret push mov (bad) in cmp push dec mov dec lods inc adc push push popf lock data16 addr16 scas xor int enter mov out push in jbe sub aam inc out adc es add push shlb mov or xchg mov test outsl xchg aad adc ja aam adc or adc (bad) ficompl adc sbb pop enter push into fwait mov pop mov cmp es ret xchg jno add add push sub movsb xchg mov pop out adc mov cmp jmp adc jecxz push loope cmp adc mov mov sbb xchg mov adc inc repnz flds adc adc sub je add pop int add lahf add jle sti cmp hlt cmp fimul or rorb lret xor xchg (bad) dec jge push xchg push cmp mov les pcmpgtw mov je fsubl enter or xchg xchg mov push mov ficomp pop mov loope xor pusha nop pop sbb xchg xchg (bad) shr mov add mov aam aam jb cmp cld adc test pop adc ja jl push push fdivrl xor pop inc jae sar lock dec lods pop adc push xchg stos xchg xlat adc xor jnp jp xor notl scas mov lods repz push repz push repz adc pushf xchg repz mov adc in ffree mov add dec add outsl (bad) cwtl (bad) into test or fsubs stc mov adc adc loope xor out add mov add mov call stos (bad) push sbb xchg jbe sbb xchg mov adc sahf pushf outsl adc fwait sub fbstp iret leave (bad) (bad) in lsl add sbb xor sarb pop lret push mov hlt out xor or sub cmovp mov (bad) dec (bad) jnp sub adc (bad) xchg mov or push sbb lret cmc mov push push add adc and add add add mov ret jl (bad) pop pop and (bad) xor or dec adc mov push fstp add (bad) sti pop (bad) push in add add adc inc mov faddl mov fisub fwait shlb (bad) repz sbb (bad) xchg cmp jge lret movsb or xor mov push fisttpll fdivrs pminub pop mov ds insl enter pop jge call scas fcompl mov repnz fistl js lods pop adc sub push ficom shrl xor aas jge adc les xchg mov mov xchg adc push adc xor add adc mov sbb repnz or xchg adc adc xor sbb xchg fistl mov dec std add mov je add add inc add or aas sahf add jns push popf mov pusha push leave sub pop imul push pop push push jb push dec sub sbb bound adc mov les pusha fistpll xor mov sub movsb mov imul notb mov pop jecxz pop or pop xor jne pop xchg mov adc dec nop adc pop xor pop jne pop fwait clc jle add pop add pop add popf ficom pop cmp jle pop mov sbb add add add add add jecxz leave push sbb push aas dec push push in push sub adc int3 add sub adc sub dec mov (bad) mov mov mov pop mov movsb (bad) fmuls imul adc lock mov and dec pop ficomp (bad) das adc aam xor rorl adc outsb pop xor pop xor adc sub inc cmp jns adc adc sbb adc cmp xor out cltd lea mov cmp add mov sub push out add and cmpsl sub mov adc pop pop mov bound adc lods psadbw testl jne ficom jl mov xchg outsl mov mov adc cmp (bad) push (bad) mov lods push sbb lock adc push push jnp sbb or bound lea cs mov mov adc mov lcall cwtl sbb push loope fstl int xchg repnz test in xchg pushf mov mov xchg sti in sbb dec or imul xchg fucomip adc lods adc psllw notl add fwait adc add scas ljmp ss icebp or pop jae mov pop adc xor ret mov inc mov int (bad) repnz push (bad) in dec repz adc adc or cli enter cld into pop mov shlb lea adc pop sbb pop adc jo pop pushf lahf pop mov pop cmc scas pop or sub pop inc leave dec mov lahf dec add add add test mov data16 push sbb in sti lret rep push mov sub mov push inc mov (bad) jne lods push push lock push notb adc imul mov or dec sti xor adc sbb add adc arpl and add mov adc mov sbb adc adc adc loope ljmp out pop int jo push nop das push insl (bad) push or inc jae mov adc pop out pop rclb xchg xchg insb fwait pusha stos xchg sub xchg int3 notb imul add add inc mov outsb ja mov adc (bad) jp aaa add push scas pop outsl insl pop lods adc lret cvtdq2ps xor mov mov enter adc sbb adc add jp inc sarl xor sbbb sarb sbb adc jb int3 adc mov push jno cmp adc fcomps add scas add imul in add add loop push js insl ret push dec in inc pop pop add push out pop and leave scas push mov stos les mov mov fwait mov adc dec and or jno xchg adc adc adc sub lea stos sbb out mov pop pop adc adc loop mov adc add shlb cmp mov (bad) adc sub mov adc test adc pop sbb mov sbb les sbb xchg xor xchg sub xchg sub add pop adc movsb adc repnz xchg imul repz or or mov adc push lcall pop repnz adc pop push icebp pop imul fstl sbb cmp (bad) jg int3 sbb mov adc pop je (bad) cltd sub xor adc fisubr jmp (bad) push cli gs pop es xor push dec mov test push mov push repz push in mov add inc xchg (bad) dec aam dec mov and inc adc jns ss (bad) leave pop jae pop cld cmp and pop insl dec mov jbe loope mov ljmp or jne adc adc scas adc push adc adc jne (bad) pop sbb pusha ficom lods cwtl pop sarl pop push fsts cmp (bad) lock unpcklps or adc mov add xchg adc add add dec mov lahf and rorl mov (bad) jmp in dec adc push das pop mov lahf cmp test int3 sub test dec sbb jmp icebp imul es xchg push mov jae sti adc repz repz xchg add xchg insl call cmp std (bad) adc data16 (bad) hlt jo adc pushf xor jl or out xor inc repz repz mov and sub adc sub push adc mov les cmp pop pop adc pop add inc adc adc mov stos sbb sbb lret xchg adc adc push mov jb repnz outsb (bad) adc pop add pop add cwtl pop add cli add mov push std add add in sbb jge xchg mov sub cmp xchg lret ficompl lret (bad) jecxz call mov lds and les mov lahf xchg fwait jge xchg add xchg sub movsb inc adc lods adc or push add stos or jns adc sbb xchg xor xor add test scas sbb in mov pop incl jle add add add push add jecxz adc fcomps mov ret add addr16 add sbb add add pop xchg ret orl es mov inc out sbb fwait pushf inc sbb cmp cs adc mov lods mov test adc adc push push fidivl add fist add adc aas shlb pop mov int pop repnz pop add lcall adc pop mov pop pop aam out sbb adc pop push popa ficompl imul (bad) call adc gs and adc adc or call sbb push les (bad) lea aad insl fsubrl fcompl test sub cmp push adc push test push dec insl push or lret dec daa adc mov dec adc or mov push mov mov cld outsb fwait adc adc add fbld inc bound add scas push mov push sbb push cmp jle xchg xchg or lcall adc cmp adc adc insl add in inc jmp or mov fstps mov out mov cld adc into mov or and push sub jae sbb lahf repz scas test mov adc iret adc cmp mov adc repz xchg sbb xchg mov adc adc cmpsl adc push push add sbb adc jecxz cli lds popf ret xorb xchg and xchg test xchg pop mov push cmp push lret mov lods fwait push repnz push pop and push adc movd adc adc or loop pushf imul sbb sub sahf inc aaa adc test inc adc cmp pushf das repz repz (bad) repz jecxz sbb xor xchg jae xchg mov adc inc mov pop inc push (bad) js cwtl adc loop fcoms inc pop xchg addr16 sub out ja inc adc ljmp loop (bad) mov mov ja dec adc cmp push adc or inc sahf add cli inc mov adc adc adc mov mov add jge add add loop sub enter adc jg rcrb bound dec and outsl dec push imul ret push sub hlt les jbe jge adc xchg insb sub adc jge adc rolb out add sub push adc lcall sbb sti ror jle adc and adcb inc pop mov adc add jl adc scas add cmp adc xchg ljmp in data16 aas push mov xchg inc mov das adcl adc or pop in fcoml or add adc or (bad) aaa mov cs adc repz xor mov push repnz mov or enter mov daa movsb sub and test cmpsb add and push jecxz push and push inc test popf ja cld adc std mov pop jbe mov adc enter into jg add adc inc rcll ret adc loop das cmpsb dec or loope adc adc call mov adc mov popa xchg insl (bad) cmpsb inc adc leave rcll test push cmp loop (bad) or or add jp adc es mov cmpl sbb sbb ficompl rcrl fs notl imul mov les jmp add jnp repz loope ret bound pop out cmp in pop xchg subl lcall repz notl jp adc dec push insl push cs cmc mov lods sbb dec sbb cmp notl andl loope mov mov push addl loopne out push and popf lcall adc push adc pop mov in inc push adc (bad) adc and push shrb inc out mov sbb xor lahf push sbb add test mov lods lock push push adc add mov adc ss or or adc push and arpl lret adc out mov cmp mov pop mov ljmp stc xor adc adc or les lahf addr16 frstor xor in (bad) fidivr repnz sbb (bad) adc mov jge add or sub sbb mov mov jnp and xchg sub mov dec movsb sub adc and push pop out jb (bad) xchg pop cmp push adc adc xor and adc pop add pop mov std and push inc pop mov js dec adc mov adc pop mov mov lret out xchg and add loope mov in ret pusha and scas mov pop add adc mov dec mov int3 pop adc das push push jecxz push pushf xchg jp adc push push daa mov or adc test adc add add xchg adc jecxz arpl adcl in xor adc movsb test adc in sbb jnp pop fcompl adc bound pusha loopne add push jcxz test (bad) cmc dec cld pop mov jg pop and dec add int push test insl test dec (bad) lods mov push adc or js test and xacquire adc bound lods add mov add adc pop jo xchg bound adc ret mov pop pop sub mov (bad) mov adc mov adc data16 sbb and xchg dec out xchg xchg add cltd lods lcall mov fcoms and test (bad) adc int3 rcll out adc repz lea mov mov imul rcrb into cmc adc and adc into loopne leave push and push jmp xchg nop movsb daa adc or mov adc or and pop dec xchg pop adc enter xchg into pop loope rorb in jl repz xchg cs in adc cmpsl lcall xchg mov add adc loop sbb pop xor out pop mov pop and mov pop push lock add add push add add add add add adc (bad) adc test add push bound fldl push mov movsb add mov adc arpl mov mov aad js mov add rcl loopne fcompl push repnz jg adc pop call add js leave hlt ja pop push adc bound xlat fdivrs jnp adc sbb adc dec adc adc adc sti lds adc repz repz repz pop rep or pusha and sub in pop repz mov insl mov sub repz movsl repz repz repz out or add in sbb dec addr16 jb and xchg push enter ror les adc rorl inc ficom mov pop stc adc mov movsb enter lea adc jp adc adc fmuls pop loope push inc cmp push in fwait ljmp test adc adc pop pusha or add add sbb adc dec enter into inc js or addr16 sub adc imul shlb repz mov mov xchg aam aad shr xchg add jecxz sub aaa push sbb fdivrs push or pop sub movlps xchg enter into repz ficoml ficom ds movsb popf ret loope inc adc pop and sub push cmp xchg xchg lods popf adc fstl mov jl idivl daa add cwtl adc sarl loop loope int3 xor pop int3 fcoms ljmp push test stos pop jne lds add xor cmp adc jp adc (bad) push pushl int3 pop adc jg (bad) jb xchg mov enter out in inc adc pusha xchg push xchg jnp int and and clc inc popa call mov mov inc in out cmpl les fwait test adc shlb scas or or adc and daa inc out xor and outsb sbb mov add sbb sbb outsb movlps movsb nop movsl mov push cld fdivs sbb pop xchg leave jge dec adc and xchg jae je adc test sbb dec pop (bad) adc adc cmp cmp adc inc ljmp insl adc and or or add add shlb xchg adc divl cmpsl push adc movsb aas sbb push out xchg loop fnstenv jae loop push mov ja mov mov (bad) pusha pusha sbb adc adc shlb and jmp add insl mov js aam or push mov imul jno out pop adc repz lock icebp (bad) (bad) ja sti cld adc or aam or pushf push adc adc push dec mov enter into xor sbb fsub adc fsubrp push dec mov or (bad) or mov out dec loop daa push les pop adc lds bound sub mov sbb outsl mov lret mov mov adc rorl pop in insl sub cs push jp gs add insl pushf rcrb (bad) jno loopne add cli ja adc hlt pop jae jno out jge jne in pop popa xchg jno out ja (bad) repnz adc add inc (bad) xchg adc or pop adcl adcl out roll rorl adc dec xlat xchg aaa int dec ret stos inc or fistl inc fist pop fisttpll iret xor fildl dec rorl rcrl adc dec dec (bad) xor roll pop lret adc dec inc iret adc pop fist mov adc sub adc xchg adc xchg jecxz pop scas pusha enter movsl adc dec loopne out mov rorb adc push int3 ficom pop pop repnz pop lcall push adc int3 push fcmovu in adc pop sub add add adc adc xchg push fcomps xor movsb in adc pop (bad) pop enter mov pop jp mov sbb sbb or rcrb lds mov or or and inc js (bad) adc ret adc test lea (bad) enter into cld inc call fisub (bad) adc mov push int3 adc lods cmp push imul xor adc fdivr pop je ficomp adc inc repnz lods (bad) test push adc adc adc adc mov fmul xchg push xor loopne adc adc sbb mov pushf mov xchg or adc movsl adc data16 aam mov or fcomps mov mov push and lcall jmp cmpsb fcoml cmp adc mov push movsl (bad) adc xor and mov sbb adc sbb push dec push adc xor adc daa in lods mov imul insl adc adc jae je adc ret loop mov xchg lods and addr16 insl mov jnp cmc adc jmp movsb (bad) adc adc pop adc rcll push adc adc or incb mov adc inc xchg adc ret fistpll adc in dec js push cs adc sbb and jo pop adc adc inc pop loop adc xchg sbb mov mov fnstenv jp adc adc (bad) pusha adc scas adc notl inc stc or mov xchg imul add cmp fldcw fdivrp push adc sarb xchg xlat (bad) jmp adc xchg lcall adc xor cmp ljmp inc and adc adc xchg movb xchg push adc push pop dec adc push imul scas xchg cltd mov push cmp out pop add push mov jmp cltd adc inc (bad) sti jbe jne mov sbb sbb dec clc dec pop dec adc movsl adc pop adc xor pop repz add pop sti adc (bad) ds xor ret aam adc sti mov mov shrb adc out (bad) inc sbb adc inc clc inc into inc repz pop rorb push rorl jmp adc lea and and adc inc clc or arpl fiadd push adc adc adc std adc lea andl (bad) adc push and js adc adc mov adc cmp adc adc xchg mov fidivl or adc xor xor push out xchg into push jb shrb ja rcll mov cwtl in adc jl xor adc cmp adc jno outsl mov pop outsb ficom dec jb iret add xorl adc enter mov adc dec into dec hlt dec adc insb shrl ljmp mov das push and arpl fs jge jp fnstcw movsb fwait adc or and mov push adc test test push adc push std push (bad) lahf mov adc sub push cmp add sahf into cld push push call sbb sbb or pop ficom xorl test adc mov adc adc cmp pop and cmpsb loope je pop mov mov repz adc push pop insl adc sahf mov adc movsb out adc lret popa into jns,pt adc or jecxz in bound adc imul adc push adc pop adc xchg mov subb adc and and mov mov push xchg adc sbb sbb xor adc lcall decb pushw adc cmp adc pop loop jle adc mov je ds adc in repz sub or aad ficomp push jl shl pop out (bad) adc lds add dec lods adc bound lods movlps push cli mov cmpsb test adc lea xor push adc ds and adc in push sbb adc repnz adc frstor mov jg push adc fidiv jno je adc fsts (bad) push adc xchg adc adc nop stos xchg mov mov jle scas bound and adc adc out jp adc adc adc sub add push lcall clc insb iret rclb add mov sbb call into jecxz add jne push push mov les loopne push dec mov inc fidivl pop pop pop mov roll or adc push mov add xadd and pushf xchg lcall call aam pop pushf jle lea lods adc (bad) fcmove lods test or into inc enter add ror jb jp adc and and arpl outsb ss pop adc pop adc inc mov or hlt or push call jns adc push add or aam inc in jge jecxz sahf dec (bad) ficoml mov dec and adc mov xor pop mov add xor das (bad) mov fisubrl ret insl push add xor inc (bad) in loope fdivs test push cmp (bad) ja push adc xchg xchg lods add rclb fldl adc cmp pop sti inc inc adc outsb fisubrl adc add faddl or xchg push mov jo scas dec adc push add jae,pn les or fsubs std fiaddl je cmp rol adc scas jo add pop pop adc rclb jo xchg fldcw adc adc push jns or pop mov ficompl mov jg dec adc lcall xor sbb adc adc lretw adc outsl adc xchg lret pop cmp add add jecxz dec push cmpsb fwait push ret and or and adc insl xorb fisubl hlt pop (bad) lods loopne enter xor out jg insl adc mov fimul jecxz dec sub ret push (bad) xchg cltd mov mov lods enter jmp les es rcr and add adc mov adc sub (bad) mov mov adc (bad) push cmc (bad) fsts adcl adc std adc test xor pop jb push adc push push or rcrl or les lret push fdivs dec push dec push inc ud2 adc in adc rcrb lods into divl dec sbb fmull xchg mov push fildll repz aam pusha sbb sbb movsl jge push fstpt mov sti lcall push adc fimull popf (bad) outsl stos mov enter into lods cld jns push or xchg scas faddl push sub push cmp (bad) adc pop adc jmp lods lret adc push and mov cmp movsl adc add hlt test sub pop push adc rcrb sbb add pop lret in pop or fsts mov stos or adc pop jnp iret and int3 rolb add notl xchg mov (bad) (bad) sbb in mov out fisubr mov mov fs cld jae adc pop xor pop xchg cmp jp xchg adc pop adc fsts pop fiadd pop rolb sbb jo fwait inc adc fsubr adc xchg adc xor pop fist jl adc adc dec adc push adc jge adc insb jp adc add movsb xchg ret rol roll or ljmp or rorb push (bad) popa out or xchg (bad) or dec mov mov add mov add popa fcoms pop (bad) repnz push jb dec inc inc cmp xor cmp pop push adc push or clts outsl lahf add add ja add add and mov adc aam lods out sbb xchg loop push sbb push jmp and (bad) push fiaddl test or sbbl push dec sub adc adc repz pop mov scas je cli push les add pop test pop pop sbb pushf test (bad) or dec adc inc ret popa (bad) cmc (bad) dec lock or and mov xchg adc dec and add add in sbb or adc inc push sbb test inc ficomp loopne sbb sbb mov or push or lea sbb (bad) sbb rolb mov lahf xor (bad) xor outsl push adc push pop stos push jp push test push scas (bad) adc pushf mov push adc or in pop call fiaddl mov pop test jbe movb dec adc rep (bad) out pop add subl lods (bad) xchg repnz xchg aas pop xchg jle xchg mov xchg cmp xchg jge je pop and adc adc or add sbb sbb pop pop stos adcl les adc pop adc pop sti dec pop je pop adc pop lods es inc inc pop out mov add pop ret enter pushf (bad) jne add fmuls mov adc jne pop mov pop cli jb and push adc pop sub push imul leave push das dec push pusha (bad) xor mov sti pop fistpl add push mov adc add fdivrl adc sbb adc push sub cld mov cltd rcll xor dec push repz (bad) xchg add lahf adc in adc mov xor or sbb cld sbb sbb mov jns adc sbb adc mov adc adc aad stc pop fmull cmpsb pop lea xchg loope loopne adcl adc push stos sub adc out adc push lret adc adc lret cmc adc repnz pop subb or mov add stos add push add add pop or dec in fcoms xchg ja ficoml fwait jno jns xchg test adc mov mov fmuls fwait test mov fistl mov mov icebp mov xchg adc push jecxz test sti sbb loop out sub fwait inc jns adc sbb outsl push push test sbb adc aaa adc adc fdivrl jns pop out pop mov add xchg stos adcl adc push and testl movsl adc adc add xchg daa xor inc lea lahf insb sbb mov ljmp adc pop mov (bad) adc outsb push dec repz mov into sbb adc sbb sbb add pop push pop push push notb insl or jge sbb adc adc sbb repz sbb sbb sbb pop sbb xchg sbb xor dec rcrl data16 cmpsb dec adc adc sub sub adc push daa fcmovu les adc xchg cmp xchg jg xchg mov nop lahf pop je push mov add lods pop imul shrb (bad) adc jb adc es movl adc shrb orl add mov popa fcoms pop cltd fwait mov jecxz pop or sbb outsb out adc mov mov adc jge dec adc ljmp stos mov stos enter jecxz rorl mov out out adc add adc or rorb mov dec sti cmp pop mov scas mov in adc ret pop test int push dec fwait call push adc adc sub (bad) cmpsl sub (bad) jbe add jle lcall xor repz pop sbb adc fcompl pop adc popf adc ret xor roll push adc add pop sbbl sbb sbbl rcrb popa push sbb sbb sub imulb adc imul popa sub adc add shll fcoms sbb sbb sti mov mov pop test add mov pop adc scas mov inc cld inc mov inc adc sbb lahf je cmp add add icebp add add push dec test adc push rcrb push jne push adc mov adc inc inc aam adc push push or ret int pop inc mov xchg xor call adc push add fmull dec fisubr ja adc ret (bad) iret (bad) (bad) xor xor les or movsl inc xchg cmp jae adc adc adc inc adc push push mov add pop sbb std cmp into notl cmp push adc adc sbb add into add adc fwait dec mov int nop xchg mov xchg shrb ss adc push mov xchg stos mov and (bad) aad fdivrl sbb sbb sbb mov fcoml lahf or or xchg and adc das sub adc adc add out cld mov mov (bad) loopne adc in or sbb sbb pop xchg dec or cmp jo xor xchg mov add adc xlat xchg add adc fisub arpl pop ds lock xchg stos dec adc jbe adc test sti mov popa int3 pop and pop loop pop movsl sbb pop inc pop les ja inc xchg pop or xchg xchg hlt adc pop notl add lea jns int3 outsl ds mov mov pop repnz mov ljmp adc pop stc stos adc int lods xchg push loope cmpsb adc push rorl mov mov psubsw je aad lods add fsubrs fstpt adc push cs mov enter in sbb sub adc dec rorb lods cltd lods fsubrp inc out (bad) xor add adc xchg dec icebp adc int lods inc jnp push and adc int3 adc (bad) ret es pusha inc ret enter popa ffree pop es push mov add jbe jae mov or add xchg mov jne (bad) notl call jge imul xchg xchg mov repnz adc xchg mov mov xor fisubrl bnd jns pop adc cld dec sti into sbb adc jle pushf adc rol pusha adc lret (bad) int3 addr16 pop pop adc adc sbb ljmp cmp adc pop cmp ds or cmp out pop nop mov cmp adc xor pushf adc adc fisub arpl adcl mov (bad) lods mov mov push inc jnp mov lds xchg out dec in fcom in push jmp pop adc cmp and dec cli lcall sbb xor adc jge push adc loope out mov insl lret adc adc inc repnz call adc imul jecxz in sti jle adc inc adc adc push dec adc add out add call add imul and pop adc inc adc cmp push add adc ja decb roll pop lds lret pop xlat pop int repnz xchg ret push iret mov add hlt dec pop aad fsts int fistpll fstl fninit iret repnz lds fist rol pop pop rcll aad rcll fstpl std jecxz adc jecxz adc jecxz repnz repnz fwait iret mov adc mov int iret adc cmp sti fistl test add popa fwait adc fist fiaddl jge adc adc aad (bad) cwtl adc (bad) pusha fwait leave movsl sbb and adc mov or or mov cmc or or push loope cmp xor cmp repz adc aam adc adc pop sub cs sbb sub dec mov adc imul and cmc into adc ja mov adc clc mov (bad) enter mov xor test adc xor jge jmp push daa fiadd repz decl leave jns or push adc adc adc js addr16 mov add xor jbe adc in adc repnz xlat jns adc out adc je insl mov mov lods out lock icebp pop loop (bad) (bad) xor mov add loope mov mov mov pushf adc inc adc cmp loop,pt fcompl pop negl adc (bad) ja and adc fs xchg mov ds adc and or sub fwait mov outsl adc mov pop inc adc adc (bad) mov adc push or pop and in adc adc adc and adc enter enter cmpsb mov data16 fmull out pop adc (bad) es adc js mov adc stc adc out das mov loop adc out fisub into sbb sbb loop fsubrs adc incb adc hlt pop (bad) cmovb adc das push ss outsb push fdiv pop sti pop clc pop adc adc pusha adc dec and and push sti (bad) inc pop adc dec xchg xor adc iret (bad) sarb adc dec (bad) xchg dec hlt js arpl adc lss adc adc adc or xor ret test push ss pop adc xor mov mov icebp push lock cld pop in inc cli inc fadds mov and and inc cli inc rcl movsb pushf movsl fcoml fstp jl ja adc adc pop jecxz (bad) lock cmp test and js jecxz (bad) fisubl adc (bad) test test add (bad) adc adc addr16 adc mov adc pop cmc or aaa fcomps adc test add cmc pop hlt sbb jno adc push mov push adc pop aaa push adc jns adc mov xorb fistl repz ja (bad) ret jne (bad) sub adc add daa fmuls int int3 jecxz das add lods sbb rclb adc (bad) xchg and int3 ljmp adc push into repz mov adc adc adc shll stos push push pop int3 pop dec dec pop jbe (bad) mov leave pop xor into ja insl in adc faddl sbb sti rorb mov fcomi stos inc push pusha jecxz pop in movzwl mov jle or adc fisubrl outsl lcall or stc pop inc inc cltd adc out jg dec enter xchg sbb rcrl and pop inc lcall (bad) push pop fmull fcmovu xor adc pop je es jb jmp xchg cld dec jp adc adc es fdivrs dec adc cwtl imul insb cmp adc sub sbb jne pop shrl pop or adc into push adc xor imul jo rdpmc mov sbb jb push adc pop pushf cli mov popf jp insl pop (bad) mov repz (bad) push mov into repz ja rolb add or bound xor mov pop daa call test out cltd pushf dec add aas clc rolb pushf movl pop fsubr mov push fcoms pop mov stos and push ja push test enter mov mov cltd insl xor adc icebp ss jge adc (bad) iret pop cmp ja imul sahf dec add xchg je dec fidivl das dec ret push popa add adc push fwait push adc mov dec popf mov cltd enter add imul cmpsb adc dec push push jne fist fwait out sbb mov pop adc mov or rcr jmp adc movsl push pop xchg dec add in std jg push or mov adc push lods or test pop push adc lea ss jb fcoms pop repz jne repz mov mov adc adc cmpsb inc adc lcall add mov ficoml jb mov push outsb cwtl dec adc repnz loope adc addr16 lock test mov add jo inc mov sbb adc shrl pop lahf sahf aam xchg pop movsb adc mov adc xor or adc test rclb (bad) or push xchg push xchg aad xor sbb fwait xchg adc xor adc push mov xor jle adc cmp aam mov outsb pop (bad) adc xor dec jmp test stos adc mov daa int enter mov movsl leave jle adc jecxz push int adc xor popa pop test adc loope adc xor cmp sbb loop in adc fs insb ret or fistl push into jns jl xchg aaa mov add add jae push mov mov add add hlt jno push mov int3 adc sbb and mov or popf pop inc cmpsb notl pop jmp mov fcoms adc xchg adc xchg dec jnp in adc sub sub (bad) adc (bad) lods add testb xor add mov pop mov adc add mov bound sahf adc fstp lods mov pop sahf gs mov adc or int pop sbb jecxz push sti push mov in (bad) repz mov repz addr16 test rorl mov xchg xor xchg cmp adc xchg loopne lcall sub adc pop lock notl xchg jae call lret cmp jns imul pop inc outsb push mov jecxz push popa enter adc inc xor lock and adc lds adc adc jp in adc mov ficompl insb in mov xchg mov adc les xchg adc roll xor xchg push mov xchg out xchg repz test and fimull test les add sub push inc xchg or adc xor enter (bad) mov sti jns adc aam sub adc adc imul sbb sbb fisubl adc fnsave imul inc xchg into xchg jae xchg sbb xchg mov in sbb pop inc arpl fcmovbe mov inc (bad) cmp lods enter mov adc adc fsts mov into lea iret push adc cmp cmp scas adc (bad) mov fmul jns adc push and (bad) imul jmp call adc mov adc mov jo jg repnz div adc in adc cmp sbb mov push adc jbe ss insb fldcw fdivl (bad) lods lea scas jle xchg (bad) mov mov adc mov mov lcall sbb mov pushf fdivl adc sahf mov and adc aaa pop idivl fstl add and enter and and inc sarb add fbstp xor xor mov jp (bad) (bad) mov sbb fmul mov lcallw adc add enter add pop add adc lret int3 add into add dec rcpps or fimull rol pop sbb add or rorb rolb push (bad) add adc adc adc rorb adc add (bad) add cli rclb push fistpl xchg mov xor adc or mov adc lret jl (bad) jne gs ficom popf mov adc and adc es mov adc mov js adc adc push call scas cmp jne push xchg jo pusha mov ljmp and cli inc cmp and adc gs pop xchg mov std dec cld jmp adc mov (bad) adc pop sbb sti xlat jb push xchg adc outsl adc clc push jle adc adc adc and push add sbb sbb (bad) ja rcrl pop adc adc adc das fidiv popa push (bad) jae adc ror fwait aad and pushf mov mov mov xor (bad) aam aam pop repnz flds jle adc adc adc adc adc outsb loop lods add xor add cltd add mov and jmp adc mov xchg repz sub fsubs adc adc xchg adc inc sub adc and outsl je adc adc lret push mov pop jnp or jp mov rcll mov adc adc add pop or les or push or notb (bad) int3 fdivl inc jle adc hlt adc (bad) mov ret out push ja push inc js pop adc cmpsb dec adc rorb pop push push cld mov mov add mov repz jb addr16 cmp insl leave imul push jecxz sti test jge out or stos or call xchg jne rol mov add mov sbb aam push adc rorb aam decb adc jle adc adc or cwtl mov fwait repz xchg scas or fmul jo and fcmovb adc (bad) enter push adc pop repnz cmp sbb in push ret sbb loope push (bad) clc fadds push ret pop adc pop inc push cmpsb mull add out mov arpl jmp int3 mov sbb jns xchg in sbb (bad) xor (bad) mov jecxz jo out (bad) in dec insb incl imul sub dec fisttpll add pushaw adc out pop insl cmp fwait insb mov jmp adc jecxz outsl pxor out loope and in sbb jl sbb mov mov repnz push adc pushl mov jnp in imul cmc gs in insb adc aaa imul adc mov loope adc insl (bad) in inc insb mov cli leave adc mov jg hlt or scas adc pusha scas out gs nop in jl add adc jbe icebp outsb outsl mov add ljmp sar jge std xchg mov jns mov jle jecxz jg out or push adc jnp sbb add (bad) movsb gs and daa imul xchg movsb jg xchg repz jle jecxz arpl mov fdivrl adc cmp movsb jecxz outsl or inc fmull adc gs in cmp aas jns div jp mov xor adc roll fnstsw std mov or mov jle jecxz jg out pop nop mov jnp hlt fwait xchg adc in insb xor push adc not jbe icebp mov jg call jecxz xor loope adc adc in mov and and outsl sti or jmp imul dec mov jl repz (bad) mov iret out dec outsb shl adc loope jo decl in sbb jmp jle (bad) jg nop sbb lcall jne adc scas gs stos insb pusha pop or or (bad) adc jecxz andl out add mov jmp (bad) aaa outsb or and adc cmp sbb pop in adc stc add jbe push icebp cmp sbb sbb repnz jo lcall push jl stc insb adc jle or adc cmp or out gs lock mov jmp cmc jbe icebp adc push push jle jecxz jb fndisi(8087 push pusha xor (bad) in call test pop mov outsl sbb jb pushf lods int3 pusha xchg dec out or notl inc jns mull (bad) outsl out add sub jecxz arpl or icebp gs movsb ja sti adc mov adc mov jo out add in insb and mov jne lret sbb dec adc loope pusha mov mov or add adc test adc insb dec xchg aas add pushf imul adc xchg push cwtl mov cld cmp add jns sbb xor clc adc mov mov xor mov rolb cmp (bad) aaa imul push jecxz push sub lds push and repz sbb push xchg xor mov mov cmp pop inc or sub pushf out adcl jno push ljmp add pop popa (bad) adc xchg dec jae mov or je test mov imul shlb je push add mov xlat xor mov repz lods shrl js test mov and or jnp sbb mov pop test mov push inc mov rolb popa addl push adc xchg add dec addl jne add add push adc mov lcall repnz sahf lahf jo loopne mov jl cmp icebp mov je push xlat xchg dec (bad) xor (bad) mov rclb mov pop xchg push ja lret cmp push fwait adc add xchg nop sbb xchg jecxz sbb mov mov sahf insb push push fldcw sti popf pusha sbb into adc ret bound and sub insb (bad) ret add pushf std sbb adc ret jb cmc and push out addr16 jl or stc dec adc es push pushf jb (bad) icebp cmc push adc sub cmp sub loop orb mov mov notl repnz and inc inc add adc and adc lahf in data16 shr cmp je push adc outsl (bad) or lcall and push sar or (bad) jb cmc or (bad) jmp adc dec cmp int3 cltd mov cmp ficom bound movsb pop les sbb pop mov aas pop xor mov lcall xor xor icebp rcll outsb xor notl mov push jecxz imul cmp adc sub leave pop mov mov jmp nop roll xorl fisubrl fwait pusha mov scas pushf push (bad) push sbb mov mov jb push mov pop inc xchg or outsb jns daa and jecxz dec push retw test and seto leave jp out addr16 lret insb repz adc test mov test lret jo cmp mov push rolb mov cltd adc xchg pushf jecxz mov mov aam adc mov or icebp jmp mov adc mov pushf arpl orb loope and inc adc pop xchg adc mov lret scas mov enter (bad) xchg movl fnsave mov jns cli cmpsb jg push fidiv rorl xchg lret icebp enter and mov or xor xor jne adc js and adc sahf sub adc out xchg repz sbb dec jecxz mov stos adc outsb pop pop adc push mov xchg dec pop cmp push rcll pop xchg fstpt add add out adc mov rcrl sti sbb mov sbb repz mov pop jb adc push jl adc xlat or adc call ss xchg xchg pop add lock (bad) mov pop iret ss pushf xor add xchg pop and sub or shlb lds push movb dec adc or xchg jmp rclb int3 add sub dec or adc test add int3 push mov nop fwait lcall jl std lds jp and mov inc sub cmp mov adc mov dec les mov add adc add jmp je mov call negl adc je adc jge xor xchg sbb adc mov jl mov mov ror cmp pop xchg jns jl jae adc cmpl mov lods mov xor mov lcall fldenv adc mov dec push adc std cwtl ds sbb add inc jns push xor jno ljmp jle clc mov fnsave dec adc push push jbe movsb clc jne cmp push iret dec cld insb mov repz imul stos hlt fs mov push (bad) xor and ljmp mov xchg or or inc mov xchg int add aaa push mov hlt mov loopne in cmc pushf xchg xchg mov push adc and jle mov loope repz adc xor mov xchg sub mov push inc in mov cmpsb je enter addb mov mov cltd out loop mov xor adc cmp sub add jns out rcrl lretw repz in lods fsub std push scas or xchg adc je test pushf jge shlb xchg mov pavgw adc cmp outsb (bad) idivb pop js or sub pusha jne pop jg xchg fildll mov mov bound mov cmpsb xchg daa push (bad) adc mov bound and dec imul cmp popf test adc in sarl push jg mov jmp sbb mov adc inc and in lretw or dec jge jecxz and lock call inc daa inc in mov or incl adc out data16 sub dec (bad) sub movsb and inc mov pop push cmpsl jb xor cmp jp mov adc pusha aam in sbb push pushl mov fdivr mov (bad) lcall mov ljmp lods add cmp fidivrl push xchg xor mov rorl lcall fsts adc sbb add add dec mov inc stos out push lcall mov xchg mov adc sub mov jns dec (bad) fiadd (bad) in inc mov xchg mov rcl and adc pop jge movsb dec adc sahf jecxz sub jne mov inc and aam adc push lods jae popf sbb adc fucomip test adc sub adc mov jnp andl jo xor jmp or test mov arpl mov xchg dec movsb add popa (bad) adc fsubrl ljmp xlat je pop jno imul dec mov pop rcrb cwtl lcall push scas push add jge xchg add fwait divb cmp lods adc jb mov aam pusha mov roll xchg test (bad) sti xchg xchg sbb dec (bad) xor pop adc js,pn nop inc test or rcrb or adc (bad) out lds mov mov jle aas pushw jne xchg adc fs mov daa and push or sti or push xor xor in fimull sbb insb adc repz addl lret sbb jo aaa es jecxz (bad) dec test adc insl into mov jle adc das fldcw jmp add mov sub dec push mov mov daa adc sub mov insb fcoms lcall fistl cld and xor ret push cmp adc int3 shrb imul adc aam popf xchg aaa adc adc xchg adc repz rcl push xchg adc adc (bad) mov mov xlat adc mov cmp mov (bad) jmp mov jmp out stos and lds (bad) adc inc cltd inc fnstcw adc mov sbb iret adcl mov xchg lods push sub ret push push dec test adc pop lret loopne sbb in stos test mov pop repnz dec xorl jl ret mov cmp xor incl rclb xor mov ret adc xchg roll mov lahf stos inc icebp add pop push test pop push jge jp insb ss xchg pop js sbb mov cld repnz jo movsb jne (bad) adc and pop or lret ja pop mov cwtl adc sbb xor (bad) fcmovnbe adc fs push mov mov call lock pop xchg imul sub adc adc cs jbe (bad) fcmovb adc inc call je jnp sub add jmp jb mov mov jle xchg sbb jg mov pop and mov insb add add cs out (bad) sti adc jle in push insl xchg scas push xlat jno push outsb mov dec mov xchg repz or jecxz call outsb sub or lods popf repz mov mov sysret sub jmp fldcw rorb stos shr or imul (bad) adc jl icebp add push clc adc sbb sbb cmp imul xor rorl pop sbb sti pop (bad) mov loopne adc lret lahf jno mov nop (bad) into jbe adc ss flds adc push adc add je mov jns stc aaa aas mov (bad) cli inc mov mov (bad) into (bad) dec add int xor fadds aam mov adc and addr16 arpl outsl xchg jecxz cmp xor enter add pop mov stos dec or adc inc shl push or aam sarb mov mov popf inc inc cld adc or cmpsl shrb mov (bad) out inc stc mov lahf rol mov push bound ret loope lret or fstps or dec mov (bad) pop xor add aad add loopne adc cmp mov ds or loop sti andl or pop ret mov leave sub jle jno jo xor rcrb mov cwtl sub adc xor mov pop sub (bad) mov inc mov push mov pop nop popa sahf cli or jl xor sbb adc cld (bad) sbb in mov in insl add fs mov adc pop jge cmpsb hlt push or push (bad) les mov xor andb jnp sbb test push mov push mov (bad) xor (bad) les movsb adc stos inc jecxz loope inc or out cmpsb mov pop iret jns xor outsb jno inc adc push and rcl mov jbe mov aad or vpinsrw pop or popw outsl inc xlat or iret adc popf xchg pop rcl sahf (bad) icebp cmp movsl lock xchg test xor sahf jnp rcrb jns mov mov push stos sbb fnstsw jl das pop mov push or loope inc jecxz mulb adc pushf mov or jne xchg adc (bad) js push push sub out (bad) lds cmp jbe imul lds ret pop adc xchg mov mov adc adc shld mov rol xchg pop adc pushf push xor pop call mov adc (bad) mov lods cmp add dec (bad) repz sbb or (bad) aaa add sub test mov jmp scas mov je inc mov mov fcmovb adc roll pop ret xchg sbb les inc or adc lock fist scas add cmc test pop (bad) and push shr push inc adc mov xchg je mov adc mov pop int mov insl ret mov aaa sbb loop jbe pushf das adcl cwtl ret aas cltd pop (bad) adc fidiv adc push imul dec popf cmp sbb mov sub jnp dec xor xchg adc mov lahf xchg and xchg jne pop aad adc je jbe sbb repnz push int3 xchg adc jne (bad) fnstsw mov mov adc add dec adc sahf jne adc popa xchg and stos sbb hlt adc movsl outsb add das lea je mov enter sub gs mov lods mov outsb adc nop leave iret outsl jne adc enter push out nop test insl xchg sbb adc add jecxz sub hlt mov repnz pop pop xor adc fldt cli dec adc adc xchg jp push ja xor mov rcrb add cs mov push push push adc jno je test add sbb fprem1 pushf cld lock cmp (bad) mov rep sbb adc sub out push lods sti out adc mov xlat adc daa inc lea loop leave pusha and sub xchg or aam pop ljmp daa inc test add mov adc pop das pop test lods (bad) jmp outsb xor jb mov jl addl xchg push cs popa adc adc (bad) (bad) arpl loop lods lret enter push cmc or adc repz bound inc cmp ret out adc push sub or jo cmp outsl ret aad in cmp and jae in je add pop cmc adc xchg cmpsl ficom and xor add mov xchg lcall xor pop xlat xchg dec push add rol stos pop popf push adc outsb jb add icebp jl and add sub xor inc lock jo loop je dec add (bad) orl sbb xchg adc adc insl adc ljmp pop mov dec sti adc ss cmp xor jbe mov or adc adc or inc or es adc xchg mov xchg arpl pop jmp sub or pop adc mov dec imul (bad) and das lock dec adc add pop mov jl adc and aas mov adc jp pop adc test js jl and insl clc add call mov stos and pop loopne adc outsb cli push pop clc adc xor imul push adc pop cltd fwait cwtl cmp adc adcl mov pusha pop jge mov out or add jmp jg mov pop mov push inc fcomps (bad) adc adc mov adc jmp sbbl add test xchg icebp mov sub push fmull lods and sub cmc sub adc into rolb xor jb adc ficoml in out aad xor aaa adc and xor dec (bad) out insl or xchg xchg into pop or dec daa adc push add addl or fcmovne popf fidivr ja in adc adc lea adc (bad) mov adc xchg jle pop adc add repz test lahf stc movsl adc mov pop sub adc pop negb mov pop push cli sbb xchg mov mov stos cmc (bad) fsub sbb sub pop dec sbb xchg sbb (bad) dec jnp mov and xchg xorl test mov es stc add push adc jecxz and dec add ljmp rclb cmp dec mov adc les int fs test stos push test adc adc jne (bad) jge jbe arpl std xor jae in shr adc pop icebp out or movsb aaa cmpsw or push aaa sbb int3 sbb pusha loopne sub (bad) adcl add (bad) mov ss inc repz and iretw loopne inc fisub std mov cld inc mov add pop jl xchg je add test adc pop pop aaa add jbe mov xor xchg das push (bad) or push jne jecxz pushf sti pop lahf call in (bad) mov out mov pop jp sbb in adc dec cmpsb cmp push iret daa repz test xchg or cmp jae dec xchg adc cmp mov add pusha in popf mov lods add pop mov adc sub movlps (bad) notb (bad) fldl imul lahf hlt xchg enter push mov fist arpl cltd mov push clc dec inc adc lret pop push adc loopne insb cmpsb sbb adc mov push adc hlt sub lea xchg cmc mov sbb pop lods insb adc aaa test adc xchg pop push push das stos xchg nop icebp dec adc pop repz mov loope out mov xchg dec mov add inc ret fs xchg and roll add (bad) push cmp dec call pop lods adc dec sbbl fdivrs cmp pop adc sbb xor xchg (bad) xchg mov aas std adc jmp ret cld adc mov stc js jo mov lds stos icebp int3 jp jnp cmp stos fisub adc outsl daa dec sub adc jmp out adc addr16 xchg outsl adc adc jo jnp sti scas adc push pop jb scas int3 adc fdivrs (bad) sarb cli or pop mov pop or ret insb inc data16 out dec loopne loope and adc or loop jmp roll cmp sahf sub fisttpl lea in xchg addr16 or adc jecxz cmp divl rcrb mov (bad) cli into jns adc cmp rcll jne sub jg mov sub xchg pop cmc negb aam ds pop jne jbe cmp and (bad) fimull xor xchg sbb xchg (bad) or (bad) icebp adc or mov movsl (bad) pusha lsl mov adc out pop jg (bad) stos cwtl sbb adc pop cli stc adc and pop lahf dec aaa pushl mov jge sbb adc and shlb movsl cld stos sub mov jp xchg mov faddl adc sahf add hlt cwtl sti lahf sub lods rep pop outsb cmp (bad) adc ljmp sub adc mov fs adc or into adc push xchg and push not xlat inc mov or pop adc push mov cs mov and inc cmp and sub (bad) mov xchg xor call popa xchg push pop loopne (bad) adc cmp addr16 add mov jle adcl ss or ficoml insl adc xchg or adc fnsave (bad) dec sub adc gs jnp test inc cmp call mov and loopne mov xor vxorpd or sti push xchg js movsb out cmp aas mov or cmp dec jl dec push negb adc outsb jle mov cmp jne in mov sbb test repz sahf mov iret sbb lcall xor xchg jmp lods or ja and es iret popf xchg or test cmpsl push movsb jne dec xor fwait mov adc xlat adc inc mov rorl idiv xor cmp xchg pop fiaddl mov adc loopne leave hlt adcb aas mov mov push inc aaa jmp dec mov (bad) adc xchg add pop in mov jno (bad) (bad) movsl pop in adc add test imul xor lea inc sub or adc aaa scas shrb imul push into lea jbe mov sub and mov xchg push adc push adc xor ficoml das repz lea sbb mov arpl out iret outsl hlt leave icebp ja sbb mov cmove mov xchg stos mov (bad) adc enter jno test sub stos jno sbb sahf mov jl cli xchg push jo mov cmp push adc adc je pop daa cmp sub sbb xor rclb pop push adc ljmp mov mov pop jne divb fcoml mov fimull push pusha rcll js addr16 cli push div fcomip cmp adc sbb repnz test add outsb adc int3 imul int push rdmsr movsl xor mov paddsw nop dec pusha popa sbb outsb push dec xchg (bad) loope mov adc ret repz or mov and sbb xchg lods negl sbb adc popf std stc fldt lods mov adc or ss mov jo push icebp jbe sub adc cmp pop adc and arpl push imul imul cli out leave pusha xor insb stc fstps jecxz insl call adc ret aaa repz dec inc push and jns dec (bad) dec adc mov mov adc test inc fadds jb mov or (bad) lods or mov scas sbb jmp pop adc gs movhps jbe xchg mov mov mov bswap adc ljmp lahf xchg incl fiaddl repnz das dec loop pop adc sbb xor stos outsl add dec mov push std xchg shl cs rdmsr sbb stc jae inc fsubl inc and jmp or dec sbb loop roll push mov adc popf sbb adc lahf jge adc mov sub adc outsb xchg test dec jo int3 mov xor out pop adc std outsb cmp jg add fildl iret daa adc out or mov adc (bad) xchg test fdiv adc jle repz pop mov mov add adc into sti mov rcr push iret mov cmp (bad) push adc (bad) jnp lock icebp adc cmc fdivrp push hlt mov or repnz (bad) adc test cmpsb rcrb fnstenv sti pop mov jo mov out xchg jns add dec test int3 les test rol fild sbb mov scas comiss in adc jle mov push xchg adc mov (bad) icebp mov int cld inc shrl mov icebp xchg pop stc jne adc mov outsb adc in in adc popa imul mov add dec xor dec lcall inc fiaddl bound xchg enter adc es or imul dec (bad) mov cmpsl int3 aaa add push arpl aam adc or notb adc imul (bad) divb out das xlat repnz mov cmc push push ja mov mov push mov jle cmp adc sbb (bad) adc in sub aaa pop jne mov mov fisttp pop adc (bad) clc and arpl mov test ja mov cwtl pop je hlt cmpsb adc popa insb add test pop push inc das sbb inc into mov popf pop (bad) lock pop (bad) std daa es pop adc stc out imul sarl ret cld (bad) xor test mov xchg cmp fldcw push add cmp mov adc adc stos (bad) faddl adc pop cli mov lods lcall add xchg cs sub call in xchg mov dec bound les mov mov adc jl adc aad js daa cmp loop or push jp lods adc adc and cltd rcrl jg and jbe pop jle adc sti scas sbb or mov sbb mov inc or popf notb test dec sub add jbe or adc lock shrb mov iret aam pop lcall adcb xchg adc out popf (bad) sbb pop add add bound adc lret popa dec sub repz push cltd push dec hlt adc sbb jge jmp or mov movsl nop push pusha dec mov adc mov push pop adc das xor mov cmp lods dec sub lods (bad) xchg dec jmp (bad) lea mov pop sub les dec and adc and mov rclb push aam adc adc jb push dec push cltd adc sti xor jbe mov jne fstl xor jmp movsl fcmove push or jno xchg jb mov mov jecxz lret mov fcoms in out pop cwtl push std push fcomip mov xorb sub add xchg arpl pmuludq mov dec and into daa mov add out movsb (bad) adc pusha lret inc rcl jbe jge insl sbb cmp test mov mov adc leave call pop icebp or stc mov cmp jno ficomp cmc lds cmp outsl aas test test lods ljmp sete lea lods pushf rep add packssdw dec adc test adc xchg iret test insb dec stos mov add adc xor jb mov add xchg lods adc add test jbe icebp arpl cli and xchg es cmp and sbb push xrelease scas sbb sbb lcall push bnd out adc jg iret stos pop adc fist xchg fstps aam out shrl and adc sti and je adc in es xor dec jge nop inc adc mov cmp popa adc ss adc cmc imul je dec inc repz fstpl repnz lea lcall out adc ja,pn mov add inc jl (bad) mov icebp gs mov xor jmp push popa inc or (bad) aas lock imul scas decb (bad) adc xchg adc adc popa sbb dec pop xor shll (bad) or adc pusha stc dec sub xor stos fldl mov xor cmp add int neg xlat adc lret out dec dec mov or add sub xchg daa jno push add and jno outsl or mov or or aas pop mov (bad) fsubrl adc gs out adc jle mov inc add mov into adc aas out xchg xlat dec pop into nop xchg daa dec test imul sub adc popa fwait inc popf into push lret pusha (bad) sub or call xchg sbb je push adc adc push (bad) push aas mov adc push les cmp ds jp jle adc sub dec xacquire xor movlps repz pop lea enter mov mov mov jno jg mov adc and add shr or (bad) mov push xor xor aam mov mov ja xchg movsl fnstenv fidiv movzwl pop cld pop in outsb stos mov mov fist aaa adc or std adc cmp (bad) cmp imul xor int adc inc (bad) or mov out jns cli push push xchg or out adc jecxz lods insl mov mov nop mov out rolb sbb pop fcomip enter iret int mov repnz in mov sarb idivb mov adc aad sbb cltd adc es jno adc mov mov cmp mov cmp repz mov ficompl add jne (bad) jne mov xchg or adc cmp ds loope pop das fs xor rcrb pop icebp call ret and add adc (bad) testl fcmovbe aam sbb jae xlat xchg or pushf fcoms jl or cmc fwait in sbb neg in aad dec (bad) sti adc movsb lods out add fsts sahf adc push fs ja and mov sub cmp cmp add add call pushf pushf movl push push jmp loopne movsb dec xchg adc outsl fbstp lahf sar out mov dec jg imul addr16 and jl in lret in xchg xchg push mov iret adc and pop mov cs clc push pcmpgtw sub in popa dec sti jecxz push mov push sahf sbb cmp mov mov cmp add in fsubrl cmp push or leave fsts mov mov mov lods mov xchg add stos adc test cmovp add jge faddp pop inc mov and add test push pushl sub test bt pushl cmp jmp mov setno mov lea jmp das shr or mov pusha shl call jmp push imul cmc jmp or stos aas xchg adc lret or (bad) mov into decl and (bad) adc and cmp jg or (bad) in or mov sbb add scas js adc xchg or es xor rorb adc cs mov rorb jbe mov cmp aam cmp out sti dec mov push jo push mov xor fs aaa mov insl dec aas sar ds clc scas mov divb fisubr (bad) mov mov sbb adc int3 jge and or and push and dec mov mov ja adc inc and and mov in pop mov ret (bad) lea shr popa ljmp mov movsl sub movsbw movb sub add bt inc pushf rcr mov shr inc mov test jmp or mov xchg adc cwtl fcomi jle sub pop mov cmp mov bound pop loop (bad) fistpl mov cmpsb shr int3 in mov adc xchg xchg push sbb pop add mov jne jno mov adc mov aaa xchg or test jl xor fnstsw aas sahf push aas sbb lods and sahf (bad) dec add adc mov xchg mov lcall arpl sub in lods inc shrl adc pop lcall pop push stos inc pusha adc das aam mov add xor dec xor push xor mov or xor jo mov fwait push push xor add sub (bad) or and fldcw test push mov lock lods pop mov cmpsb fsubr xor (bad) fnstcw add add loop cwtl pop loope jnp jnp adc and mov mov jl fwait xchg in pop add pushf lea je pushf add pushf pusha pushf lea jmp lea inc lea bts mov pusha cmpb jmp (bad) mov or sarb in cmpsb adc addl aas scas mov ret das jg pusha adc sub jmp xorl leave dec loop scas mulb push out jl (bad) sahf stos stc rcr fmuls adc into sub scas leave adc out add lods insb repz cli stc pusha xor bt stc ror push pushf push jmp jmp movsbw bswap lea pusha pushf push pushf movl pushf pushl push mov pushf push pushl ret movl pusha pushf pushf lea jmp bt xor stc clc movw cmc shr jmp xor lds adc movsb xor in shr mov mov fmuls jp bound mov fwait popl inc outsl pop inc dec imul inc nop mov pop xchg pushf xchg lret out lcall sbb into xor xor dec insl sub ja cmp mov aam aad jle push fptan cmove int3 xchg test push test add int pusha in mov std push mov xchg sub mov adc push (bad) mov out int jle cmp xchg scas or out in out sub cmc and das jns sahf adc dec mov jmp scas rcrl cmp dec test add adc mov imul iret clc iret loopne mov addr16 mov cmp aas add cmc je adcl rolb loop fidiv cwtl adc lea repz sahf scas xchg lea mov inc push xchg cld les rclb call pop (bad) jmp popa mov pop aas pop mov sub jge adc ret sbb inc notl das and fisubr nop or cmp adc loope int ds ss cs mov cmpsb mov adc leave xor pusha cmp jmp add mov pusha lea jmp mov pushf pushf lea je test jle stc bt sub stc pusha cmp jmp inc clc xor cmc cmp cmc cld pushw popfw jmp pusha push jmp pushf pushf lea jne bswap mov bt sub test mov js cmc cmp sub pushf pushl popl stc pusha pushf cmp call pushl popl movb pushl ret inc mov inc mov hlt ret add (bad) (bad) repz loopne ret mov iret int3 or and xor lods xchg fdivp lret sub dec xchg cmp push (bad) in xchg out repnz mov xchg mov leave in cs mov mov subl sbb xor aam movsl xchg lods (bad) mov sub inc movsb mov push push mov mov cmp adc xchg xor in cmp loope leave add mov lcall xlat add test add push xor xchg ret test out mov out aaa xchg add sbb mov (bad) testb cmc pop and mov xchg daa push mov mov enter cmp xchg scas cld push in pop mov or mov sbbb fistpl sub push loope fstpl imul add inc jae je cld dec ja pop jl (bad) das jbe or inc gs imul jbe dec jg cmp push inc out pop add scas push jo jge dec pop xor cmc dec out mov add mov pop lret call mov mov add pop lods push stc test xor pushf pushl cmc pushf ror pusha inc cmp call jmp jmp push imul or push inc popa pusha popa push xchg and popf popa sbb stos add bound aaa popf xor add cmp ret cmpsl fcompl daa sub push ss fdiv sbb das mov mov adc push dec cmpl imul (bad) cwtl fs into mov stos adc das sbb mov lahf jae xor nop mov push cmp out movsl imul or pusha ret lret jl std add dec lds lock mov push aas test mov bt pusha pushf test push mov lea je test shld neg mov bswap btc sbb add btr bswap mov bt cmc pusha test jmp call call lea jae cmp test pushf sub call push pushl lea call pusha lea jmp clc xor cmp stc repnz jmp pusha bswap mov jmp mov repz fwait adc ljmp rol scas mov cmp out push mov or mov dec jle and mov or je,pn dec adcl roll in cltd xor ljmp xor cmp mov mov inc rcrb jnp add aaa push mov push inc lret cmc lahf in lds inc jmp call push in fs push pop inc rcrl adc insl cmc std mov adc (bad) cwtl idivb xor push mov out inc lret bound jno mov sub mov jmp jae adc inc daa ficompl sbb insb push cmpl push mov sbb test fist in pop push fdivl pop or and adc insl sti faddp push mov push lods cmp push cmc test add stc ror pushf push not call lea call movl push pushf mov push movl mov pushf lea jmp sbb push movsb adc xor shrl xchg cmp gs pusha inc xchg rcrl call loop and sti cmp xchg (bad) jbe,pn add mov push xchg jb push jle push push mov daa push cwtl leave adc jbe icebp aaa fwait mov pop subb cs cmp mov and out adc iret ja lea jbe mov hlt xor cmc xchg mov xlat mov mov insb or sub mov rorb add add mov add pushf pushf lea jmp leave (bad) (bad) movsl adc adc mov into inc xlat jg pop or in addr16 das inc dec mov gs adc or movsb xchg mov or test je aam jle xchg int cmp xchg dec pusha test std inc mov xchg (bad) mov pop push gs test in imul int mov lahf jbe les mov test push mov jbe xchg push sti in adc mov xor mov js aaa out in lahf sbb pop mov das jmp push push nop pop mov adc pop enter sub je add jne inc lds and (bad) push movsl inc jmp fwait mov mov jg sub sbb or rcrb jne and dec addr16 dec fisttpl pop andb adc xor mov pusha popf into cmc out lds and arpl cs clc (bad) or leave mov mov jge adc xor xor pop add je xchg fwait (bad) xor sub sti add or lods (bad) push xchg dec mov jp and decb dec clc jl jl xor dec int3 and jecxz xor test cmp aas repz xor nop or xchg sub cld lret xchg xor shl fcmovnu idivl sbb xor mov pop xchg mov nop and popf sub cs loopne mov pusha dec dec jns (bad) repz out adc sbb dec xchg mov rcr push jg imul inc ljmp or mov xor shll jg,pt mov leave pop movsb rorl dec ficom pop int data16 (bad) rolb loop (bad) ss movsb movsb inc pop pushf add dec andb shlb pushf ret jb push jle fmuls mov and leave shlb dec icebp add jmp fadd sti in (bad) adc cmpsb shrl xchg cld es cmp cmp lea push mov pusha mov shrb mov (bad) or push je stos mov (bad) inc mov add jmp add xchg xor mov movsl stc xchg mov sub cmp mov leave jo xchg insb lret loopne jl aas sbb pop sahf push leave xor jns in cmp cmp test test xchg sub push dec sbb ret push mov ljmp and or pop mov jbe jbe daa adc pop scas movsb rolb cmp inc es iret ds xor loopne cs push push xchg xchg lret inc adc push (bad) js add mov push cld ret les lock sub cmp or dec mov inc jno pop xchg fcmovne push jge xchg test jp and pop push adc cmpsl xlat jno in jno icebp test ret xchg sbb iret outsb aad lret in dec int clc inc in iret fsubrp push clc pop test jecxz mov xchg repnz mov adc lea pushf push call pop btc mov cmc pushf cmp call cwtl leave cmc popa mov (bad) and mov in mov cmp (bad) inc fidivrl sahf in fisubrl in popa cmp out lods (bad) out xchg out or in out outsw imul push sub test out adc into sub adc mov mov sarb jns pop xchg and jge cmpsb and cmp aaa xor into (bad) (bad) cmp pop movsl shlb or jb xor push inc and pop jns jnp aaa mov jle pusha es aam popa jbe outsb cmp inc jle js xor or or nop inc push sub sub jbe stc enter int dec lods bnd shlb mov mov (bad) out bsr add jnp je adc dec cmpsl mov test add call mov mov hlt xor adc push jl aad xchg ss test inc pop pop lret inc gs popf shrl cmp push inc fs pop (bad) fadd xor mov (bad) ret negb jl in cs jb adc call js mov outsl mov dec pop inc mov fdivl fstl inc pushf sar test or lret mov std xor mov clc in faddl pushf mov (bad) ja inc xchg iret push gs int loope mov inc pop shlb xorb xorl push in inc dec outsl imul jo xor sub stc jns inc xor cltd fcoml sbb jg xor iret jne js addr16 sti movsb pop fs jnp mov dec jb xor sub int popa jb xor (bad) xorl pusha gs fdivl data16 enter je notb fs leave insl mov pushl arpl pusha jg hlt cmp fwait jno adc push into xor jno or popa push pusha std xor lret jnp stos arpl cmp into insl push push cmpsl les ljmp dec test notl and hlt lods jae sbb inc fmul xor cmpsl (bad) adc (bad) repnz pop cmp cmpl (bad) mov fdivs imul push je pusha pop aas lret xor ja or sub clc jle js mov or mov roll xor cmp jbe or mov shl push xchg addr16 insb sub xor jg adc jge dec sbb jge xor mov int3 xchg jns popf scas data16 jne fidivl in idivl mov data16 xor sahf add push fwait mov stc stc add cli cmpsb pop mov mov add mov adc in aaa mov push and test insl sbb pop fmuls push jp popa sub call mov lods aad les movl aas popa lock ret add js pop addl loope (bad) loop mov add mov lods leave mov xor data16 sub xor leave add sarl pop enter insl xor stc ret add pushl push mov or pop jl cmp xchg je jecxz pop in stos push lret cs mov dec aaa xchg inc xor cs bound lea dec cmc add mov pcmpgtw sub rclb add dec in add jo mov movl pushl push movb lea jmp les jb lods adc mov mov std adc dec jb sbb dec jle push lret pushf mov push int3 scas push adc inc pusha icebp mov or hlt and sbb jge mov int stc dec mov fist cmp andnps mov cmp mov mov adc ljmp dec jecxz fsubrl lahf xchg jge push push repnz and sbb ss insl jno aas xchg xlat inc mov pop mov gs popa xchg inc and pop jecxz btc cmc rol shrd mov cmc cmpb call mov call jmp pusha lea jl jne jg bts add rcl mov clc clc pusha bt add pusha jmp mov jmp pusha movb push mov pop lea lahf pushf lea pushl push movl pusha movw mov push mov push pushl ret sub pusha push cmp push mov call add inc add addb stos push add push add inc btc pushf not sbb xor lea mov pop pusha jmp mov setnp mov test test repnz movb pusha pushf lea jne bswap jmp mov mov pushf pushf cmpb pusha pushf push lea jne movzbw ror pusha xor rol shr neg mov inc add add push mov clc test pushf push lea je push call call mov push cmpb pusha lea jne neg movzbw cmc sub pusha aad mov mov not add and rcr or mov clc jmp sub or scas adc and js push jno sbb fwait lods rcr into pop fsubrp (bad) xchg jo scas ljmp cmpsl fistl ucomiss fistpll bound int cmc mov jns ljmp sub xor jns fadds jecxz add negb nop leave jle imul mov mov inc and fs or inc inc lods sub iret sub adc fcompl jmp call stc fisubl jnp push jbe sub sbb dec cld push lea jae pushf cmp add pusha pushf call pop jmp add mov jmp push enter push loopne outsb mov ja nop aaa mov je ds jno adc jae test push mov mov hlt cmp (bad) push stos insb test jno nop ljmp and jnp adc xor mov sub scas and out dec shrb sub aam jae cwtl imul push icebp out out xor push cmpsl clc xor xor jns add inc fldenv out les test ror add testl push aas jbe mov mov adc sub ss sbb and mov insl mov lods inc sbb or data16 fnop aam inc sahf mov aam cmp mov add sbb fcompl xchg fcoms pop movsb cmpsl jnp stos insb fmuls dec mov adc cmp shrb fsubs push pusha adc out daa cs imul test or cmp mov je dec jle push cltd cmp mov add jne icebp sub inc cmc push sub les arpl cmpsb test les xlat cmp or scas push mov sub dec leave mov es fcmovnu pop mov mov call cmp sub sub mov or (bad) sub (bad) sbb xchg insb fisubl pop pusha mov jge fnop enter cmp fs and fildll cmp xchg xor test out inc jns sti or ja dec bt neg bt sub shr call hlt aad shrb iret push mov adc mov or rcr mov pop pop push js jno adc mov dec je dec (bad) sti add xor fwait mov jns mov in jecxz outsb adc xor cmp addb push mov ja jge or or inc mov cs fildl int jl cld xor imul jge jmp adc pushf xchg dec out cmp addr16 lock loope jb xor jnp dec lret fs cwtl sbb mov call mull outsl (bad) or pusha clc sub jnp cmp push lea ja movsbw sets mov pusha mov seta call lea ja lea movzbw pusha lea mov pushf bswap pop pusha mov setnp call call inc jmp movl pushl pushf movl mov pushl mov lea jmp pusha call cmpsb pusha pop mov adc mov sbb mov sahf and xor jae push lods cmp fwait loope xchg xchg stos xchg outsl mov imul jl aad xchg jne sbb icebp pusha lods push jne mov xchg jo test cmp mov push (bad) adc jne or sub hlt cltd insl and arpl inc (bad) in lcall (bad) xchg inc push cmc push (bad) jo dec mov mov mov arpl jge ja cltd in in mov lods push pusha pusha movw call or call cmp pushf dec dec dec mov das rcrl jl jo and or (bad) icebp mov int3 gs jmp mov add pusha test sub and push sub cwtl xlat and outsb adc mov (bad) xchg into jno push xchg mov push loopne lahf lock scas test fdivs lds xor adc and (bad) jmp iret bsr mov adc stc lea btc mov btc bts mov stc clc pushf stc xor cmc call xchg ljmp je (bad) pop xchg scas jae arpl aam mov sbb adc pop js lock maskmovq divl jae mov adc stos lods sti mov mov int3 gs dec scas add inc adc sub or jns mov les adc mov mov (bad) dec cmpsb inc jnp pop and add pxor popa or sub sbb sub inc xchg mov test inc jno rclb dec lds test jle pushl lea jne mov test bsr mov bsf or sub bt inc bsf mov clc jmp lea ja push neg clc sub bts sub add bsr push mov rol mov cmp pushl cmp repnz mov lea jne cwtl pusha movb pop setl push setb mov pop jmp bt ror pushf not pushf inc pushf cmp cwtl lea push movsbw mov movw lea ja call pusha lods pushl xor cmc cmc rol ror call bt cmp pushl popl pusha bt mov cmp pushf lea ja cmp sar sbb sub bsf jmp arpl push mov inc movsb rcll pushf mov cli mov adc sar in rcl fucomp xchg into in ss sbb int3 or jg xchg xchg mov aas fstps fdiv adc mov outsb push in add lret cmc adc in push push xchg jne (bad) int dec sub add mov popa inc sbb sbb andl fdivrp insb dec jl mov or adc (bad) lret sbb sub mov and pop rorl sahf out dec fnop lea cmp arpl sub decl or out mov jb pop scas js sub inc and pusha movw mov push pushl ret pop push jg adc inc push aas xchg ja das (bad) cwtl xor mov aas lea mov inc dec imul cmp popf xor test jmp and inc fcoms inc adc dec ljmp sarb loope into shlb push push into xor pop mov inc ret add adc lret pop mov inc add add repz xor popa lea bt bt bt add cmp stc stc test call bt imul bt pusha mov add pushl pushl lea jmp repnz push call cs aam mov inc std imul sbb fs push jns push inc lods imul fisubr xchg and fsts mov fs mov jnp push mov (bad) or insb (bad) lcall outsl sti dec mov int3 (bad) push dec loopne pop and (bad) rcll int mov inc hlt push jmp fcomps mov or test pop cmp mov orl stc lods outsb lods inc iret fwait lods leave clc shll cmp outsl add clc and popf sahf orl inc mov das xor xchg or mov leave movsb leave pop negb fstl iret push inc enter test and aaa mov std stc xor stos adc lahf sbb dec outsl arpl inc insb insb outsl arpl call adc pushl movb lea call jmp mov lea je clc add pusha cmp pusha pushl jmp lea pusha lea jns pushf movl pusha mov pusha push mov pushl ret lea jae (bad) cmc ror mov bts shrd sbb mov btc add (bad) icebp mov pusha call mov adc scas mov outsb pop dec inc (bad) dec sbb mov sbb adc cmpsl (bad) jp or mov lock push (bad) std and xor push pop les add jb mov pop mov add inc divb mov arpl pop jbe mov das mov movsl add notb int mov je cmp test les fs stos push mov xchg dec test cld (bad) adc cld movsb insb fiaddl hlt and and pushf dec leave jg adc mov arpl adc rclb push leave je sbb in adc shlb in out add mov movb push lea jmp cmp stc repnz push push lea jne push pop mov dec btr sub or cmp cmc stc mov jmp add inc gs outsl fs gs imul add cmp repz push hlt add mov inc cli pop and sbb adc jae ja lret adc clc cmpsb lahf pop pop cmpsb xchg adc fcmovnb cmp xchg cmp jns mov or fs int3 cmp push jo jg std dec add xor push fxtract add addl xor mov cld sub (bad) cmc jecxz sbb shrb inc or add pop jb (bad) out les xor xchg pop lea xchg (bad) jne push lock stos repnz xlat popf int3 mov cmpsb sub ljmp loop lods mov inc cmpsb jmp push or dec jmp add xor and xor fimull inc stos xor (bad) mov fwait outsl mov add push jmp movl pushf jmp pusha lea je call out int mov lcall sbb inc popf mov mov fisttpl dec mov scas stc mov pop nop les xor fmuls pop jle scas je (bad) lcall push test sub es test lahf inc sbb icebp fldcw clc mov nop int3 sbb sbbl negb roll and sarb jno fisubr mov shr pop leave les or cltd and addr16 add mov nop in fstps movsl adc repnz add mov and dec fmull mov test inc inc adc cltd lret dec jecxz in aas cmp inc and inc rcll ss sbb adc xchg dec je xor pop mov inc push cltd mov aam or jp (bad) movsl sub jle cmpsl js or jg adc ljmp (bad) mov popf insl push fisttpll jl sti dec xchg in mov mov out icebp jecxz int (bad) bnd cwtl jmp cmp or lret pop xor nop dec lret sbb cltd sbb test mov mov roll and std cmpsb cmp pushf push lea jb bt jmp pushf pushf movl pusha jmp lea pop pop push pushf pushf pushl ret sub pusha push bt cmp jmp mov lea je clc cmc cmc add cmc push clc bt cmp pushf jmp mov lea ja call cmp call jmp sbb sbb fs stos or stos rcrl popf dec rol loope jecxz sub cmpsl cltd inc rcrb cmp inc xchg inc pop adc and and mov and sub js add cwtl aaa gs xor push pop xchg xor pop or imul mov (bad) stos mov inc sub int sub push jge call jmp mov push cld vmovddup pusha (bad) scas cmc jecxz mov jnp cmp fldt mov adc xchg out ret mov in push inc test inc mov push call jmp jae shld jns bswap dec mov bt stc mov btc not ror mov bt stc push pushf sub jmp sub add jl pusha jno js sub xchg out mov repz push mov pop mov mov xor cmc jmp or sub or fs scas add stos jl pushf jle loopne in and jmp lea (bad) mov adc addr16 dec out adc add es jnp inc mov push xor leave cwtl pop dec out sbbl jo daa decb pop lds nop mov xlat cmp aaa add out xchg mov mov rcr fidivl mov in aad std in jmp lret adc ret mov loope in push jae or push add or push bound out aad adc add neg mov mov inc test jle xchg rcrl fwait lea fwait andps xchg inc cs outsl pop into inc mov adc mov pop ret rclb xchg adc pop shrl add mov mov mov out out pop mov icebp ljmp aam mov loopne aam xor addr16 mov or cmpb sbb mov sahf cmpsl outsl mov cwtl insb popa outsl mov ret push pop adc sbb mov xor sub notl jl shlb sarl or out ret cwtl int ret xchg mov inc jae in adc (bad) sbb pop scas xor xchg push inc inc arpl xchg and cmp scas jge inc mov xchg mov xchg addr16 xor jp xor xchg inc lea setge pushf mov pushl inc sub xor rcr stc neg xchg sar pusha mov movb or shr mov lea cmp pushf mov inc call call pushf pushf movl jmp mov mov bt add cmp cmc test pushl call mov inc cltd test ds mov mov pop push out inc xchg fdivr cld ja out (bad) cld sub nop mov lods cmpsb jge sbb mov aad jbe cs xchg cmpsb or ror mov dec mov in rorb lret dec sbb or sbb mov add and lret sbb cmp mov pop xlat pop nop cmp std push inc dec inc mov xchg repnz subl jl cli push dec repnz (bad) movsl icebp mov shld adc mov clc xor clc cmc add jp stc repnz pushf mov pusha lea jne rcl setle add mov rcl sub shl neg mov cmp stc cmc call xchg mov ds add leave loope cli dec cmp scas mov out pop jecxz cltd sub inc inc pop pop sub out mov daa (bad) jb xchg pop mov sbb add xchg (bad) int sbb mov aam cmp mov or inc lret cmpsb insb mov mov dec xor (bad) das xchg mov xor inc mov jo jae cmc dec ljmp pushf push ret dec (bad) lods mov mov dec xchg sbb ret lea pop mov call call clc repnz call xor scas mov sub mov cltd shlb sub pushf xchg clc frstor es loopne cmp pushf mov xchg and mov out test insw inc mov sbb mov jmp jne and dec in ret jb xchg es or xchg negb xor pushl repnz call lcall dec push sbb cmp mov enter add outsl movsb jecxz out enter push cld (bad) mull adc (bad) mov jle mov test (bad) cmc push push mov inc je push insb insb out lock fwait je dec mov ja (bad) pop push mov pop xchg lahf rorb sbb sti (bad) jno enter shl loopne xchg mov out push mov ss std (bad) sbb adc cmp popa rcrb ss (bad) enter sbb pusha popa inc loope jge cmp xchg sti stc xchg pop push test sbb inc cmp mov fwait int3 sti xlat sbb inc push xchg mov xor dec jae xchg mov dec cmp cmp cld arpl xor pop fisttpl add cmp mov ror mov inc mov aaa pop cmpsb outsl sbb sub jg xchg pop loop sub add add stos xor pop fimul push pop pop xchg icebp cltd jp add pop push or mov je inc stos jo and cld push pop test push mov fildl test inc mov push lea jae pusha pushf mov add push push jmp pusha jmp lea call pushf lea ja rol sub rcl shr and add cmp (bad) lock mov pusha sbb add add mov pusha repnz mov lea jne bswap mov pusha movb jmp add dec outsl popa fs imul add movsl lcall call stos js cltd (bad) adc mov xor jle mov xchg (bad) sti inc mov subl or xor leave icebp loop pusha mov pushl fisttp mov fdivrl and icebp lock sub add je jp push xchg pushf pop clc mov jle bound fdivs adc fcoml sub xchg fisubr fisubl (bad) fisubrl rcrl es xor outsl dec jge push push das jns (bad) xor (bad) adc mov mov pop pop xor xchg mov out int3 loop jecxz in xchg or insb mov lret mov jecxz out repz daa or sbb je sti inc mov push cmp pop aad out jmp mov movsb pop icebp in sub data16 ficomp outsb test and (bad) in jns and cmp call int popa imul jge fldenv bound cltd cmp mov je les (bad) in mov loope or pop aad xor iret jl cmp repz data16 in xor or and addb push xchg xchg cs xchg adcl push int fisub mov test mov cmpsb aad mov repnz mov jmp lods add arpl mov push dec ss lea sub push add jo dec pop (bad) repnz mov je xor cmp cmpsb xor rorb sahf daa fiaddl dec cld imul test call call cltd mov inc cmpsl in push (bad) (bad) mov push lcall cmp ja lret lahf mov mov mov mov adc mov pop addr16 pop sti and ljmp out in lahf aam add gs leave push fsubrs in cmc adcb das mov (bad) xchg gs adc mov and sbb test popf sub ret sbb jecxz lods adc into and xchg out push inc insb stc in outsl bound pop mov adc (bad) into repz (bad) idivl fdivr repz cmp push jge imul mov out das cmp test hlt sarb ret icebp mov dec mov fstps jl or mov movsb test add cmovo test shrb fnstenv ds add (bad) loope,pn or nop inc aaa adc fsubl push movsb cmpsl adc gs in jns xchg jl ficom xchg cmp adc and mov xor (bad) adc int loope jno pop bound and test iret dec ret in stos test arpl cmp pusha rcll js ss sub dec leave ljmp lcall inc scas rcll dec jg mov sbb push popf xor cmpl daa mov sub xchg mov bnd jle or loop xchg inc adc sub mov xor subl pop push mov test inc xor mov adc cmc push movsb or push fcomip sahf sbb out leave xor push dec (bad) call nop jecxz jle mov insl sbb daa xchg or push ljmp insl push jb push and or stos jmp imul pushf add push push lea jmp movzbw not mov xchg mov mov mov pushf call mov pushf call movb lea jae sets bts mov call add push mov adc lods mov popa xchg cmp xor xor jge adc pop jne stc sbbl and xchg (bad) push (bad) (bad) mul cmpsl outsl adc xchg int cmp in cmp xchg and jno or (bad) mov out (bad) mov in fnstsw push test addr16 adc pop lret xorl sub jp dec imul sub lret xor out cmpsl pop adc sarl mov mov insb jp push pop inc lds stos push jmp cmp ret fisttp fs ja or stc sub or sub xor shr or add mov rcl mov add mov call mov mov lea call push mov pushf lea jmp pusha pop hlt sub adc pslld fdivp scas fwait and scas jnp pop push push (bad) sub mov xchg mov mov lock jg inc xchg add push and call xchg xor lahf push scas insb (bad) xor cltd cmpsb lds (bad) mov add call rclb stc (bad) lret sub sarb xchg jp xchg push mov rcrb mov and mov pop lcall dec outsb stos mov or daa in sub in repz ja push gs leave adc int3 adc repz sub push xchg pop jb pop xor xchg dec testl cmp lods jbe cmp or push sbb sub and jno mov rclb pop mov push dec fisubr dec (bad) bound gs mov mov aad fimull dec sbb xchg addl mov inc lods fdecstp je sbb bound push inc xchg ss lahf jae inc mov mov cmpl push xor out push rorb xchg (bad) cmc and push jno hlt adc dec pop pop rcrl push sub dec sbb pop xchg rorl mov sti notl xor push and or es pushf xchg lea call icebp or and push cmpsb jo and xchg ret push and andl mov ret testl adc adc mov jg in cltd mov inc inc xor inc loopne cmpsl lret movb jmp push dec inc dec dec xor cs insb add inc out pushl sbb int inc les ror divb sahf lds or (bad) xor sbb stos pusha aaa inc dec aam or xor aaa es lods jmp sarl int sti nop push add mov aad mov and movsl xchg dec mov cmc sarb lahf (bad) dec mov lods xor xchg cmp ret fdivl mov outsl iret sbb xchg cmp pusha insb scas jae cltd or daa lret in xor ds subl push imul dec ja testb sbb jno xor xchg scas push mov shr adc dec clc movb pushl lea jmp pushf pushf cmp jmp push mov push pushl movl pushl ret cmp xchg jp adc (bad) cli rcll out out or lods std out test add (bad) dec sbb out push jg in in iret xchg (bad) dec mov push (bad) push mov int insl in lcall cmp mov add mov idivl mov adc rclb push sarb pop fcmove fcompl je push pop xor mov std arpl idivb pushf mov cmpsb pop jl (bad) jno in cli notl jno and nop mov scas out cmpsb aaa push pop test call clc aad jbe adc push xchg mov fsubs cmp add mov mov and (bad) out push gs mov data16 aam jle (bad) loop push push inc loopne lret push mov dec pop adc lods les movsl sub lods xchg ret jle or push (bad) xchg mov sbb popf adc ret adc push jmp xchg repz iret adc or loop push and rorl dec mov leave mov aad popf mov (bad) adc sub sub xor enter xchg dec push test xor xchg add pop jle bound (bad) lret popf push dec jg inc mov loope loopne ficoml repz inc inc adc or decb stos les mov sar mov out adc imul xchg add test push fnstsw push xchg pop aaa jno in cmpsb test add jle cld out aam sbb or out push ss stc bound adc mov jnp cmp or movl enter dec pop cmp pop xchg ret fnop xchg mov and add cmp scas push lods add xor mov fdivr and setnp (bad) cwtl bound pusha jl in push and mov mov mov mov fild aad jmp cmp addr16 into jl add cwtl scas out ficom lret scas adc lcall add cmp in jae outsl scas movsl xor adc jnp repz pushf mov aam out xchg mov sbb push fwait xor cmpl jge pushf int xchg cmpsl jns adc lahf pop leave loope pushf push add out (bad) fdivs lods aam dec nop aam stc push lahf imul andl in add fwait jg pusha les lea jne call pushf lea ja clc sbb bt sub cmp setae shrd or add bsr sub inc mov seto mov push repnz mov lea jne jmp add inc jb jo push gs gs jae inc outsl outsb je js add mov setne mov setns jmp pop rcr lods xchg xchg pushl (bad) sbb mov push add test out adc jmp ret nop adc int int adc out mov lahf jecxz mov shrl xchg pop add fsubrs push adc mov add loop sub aaa out ret adc push (bad) xchg adc jl sbbb pop dec ss std adc outsb int mov (bad) push cmp adc cmp xchg call out and mov push fiadd fwait add xor enter mov iret or repz or and (bad) add fbstp push jge mov mov (bad) ret xchg out mov fadds je push and add xchg sbb xchg test sbb aas xchg jb out xor cmpsl hlt or pop sarb sub orl add push jns xchg out dec outsl add adc out les movsb xchg mov xchg mov xchg inc test ror pop or in outsb cmc mov enter sti pop imul lock pop pop lret add mov sub push outsl add sbb stos xchg sbb js adc insb and mov xor adc push push data16 jmp jnp repnz xchg mov sbb jb add pop pop xchg gs sbb and lahf (bad) aaa psrad adc bnd (bad) push lcall sti add lcall xchg adc fwait adc adc mov or js sbb ljmp repz sub xchg adc out xchg (bad) or ss sti or xchg gs or daa pop or sbb xchg push pop push jl aad push adcl or push sbb pushf or push outsb fstl add adcl inc or push adc sbb pop inc pop or or push adcl xchg negl popf sahf testl fcmovne sti test cltd in call (bad) or notl testb jns fwait or inc sbb inc adc xchg lea or pop push cwtl pop sbb imul add sbb lea inc popf je (bad) fisttpll adcl popf push ljmp pop pop or sbb icebp addb pop inc or add sbb ss or repnz outsb out test cwtl stos cmp lahf xor out jle jle (bad) mov or pop dec pop jmp add cwtl and adc lods xor mov repz out xchg ret adc hlt inc mov subb add push sbb das (bad) sahf jg out (bad) xchg push adc mov fucomip dec jae dec dec cltd stos (bad) mov scas adc scas xchg ficoml aas add int (bad) adc dec add fisttp push gs xchg xchg and adc stos out push jmp daa dec arpl test outsb cmp in xor sbb xchg es arpl shr cmp das in rolb xchg xchg aam repz add lcall bnd jg leave stos jb iret cmp sbb dec pop mov and mov adc sbb dec adc mov loope or push movsb mov mov leave orl xchg repz adc jmp jmp test sbb dec sbb or adc or cld mov stos rcll lods nop push scas divb lods rol jnp push cmp cmp negl xchg in dec push pusha jge pop shrl dec mov outsb push aam push cltd push xchg fisttp or arpl push int3 add cmpsb sti out pop mov pop adc jne and out aaa jae pop ljmp insb mov das mov mov push ljmp ret mov mov loop fs repz dec xchg cmp sbb mov icebp cmpsb lock or push mov mov push mov out repnz push push nop push icebp sbb xor jecxz nop int3 xchg stos (bad) shrb ret stos mov xchg (bad) andb jg dec push mov loope repz jmp aad xchg stc sbb mov sub leave push test pop dec xor les int xor or sbb cltd jecxz mov push or aam mov lea leave fisttpll jp and cli (bad) jp in nop mov jae xor push out fcmovbe push cld lods push lcall xchg adc jecxz xor ss add call fwait roll adc push mov shll addb push push adc fild ljmp fimull mov dec jmp out xchg pop mov push push jl lcall mov cmp stos fs test pop or shrl loope mov sub xchg fstpl fstpt into out int3 test in out mov loop or (bad) into cltd roll mov dec or jnp cmp daa lcall sbb cmp data16 push push pop xchg out aas aaa rcr les xchg test rolb and xor stc push lahf adc out jb rorl dec xor pop pop and (bad) in cli xchg stc cld push inc (bad) cmc push in js xchg adc xlat fwait in add push div daa push scas out ja xchg sbb sbb adc cli int3 pop pop mov andl ljmp aad jle dec fidivrl pop sti xchg out stos es fidivr push idivl xchg outsb cltd lahf add pop pop push fs out insb sbb push adc out gs xchg cmp add sbb push test fbstp or lods mov lcall nopl loope int stos mov xor arpl aas lea or and xchg mov xchg adc push dec fwait (bad) out xor lcall cmp push mov jecxz lss mov test jno in jmp scas add cltd push and pop inc cmp jno jbe repz insl dec aam scas cmp loopne loopne jb cmp scas gs mov icebp pop sbb out push lret xchg xchg rorl push shrb pop stc xchg mov arpl add lcall push jg fstpl aad lock pop pop jle dec sahf imul jecxz pop fwait je sahf rorb xchg fcomi repnz push insl leave into mov mov push sahf cmpsl and inc aas addl push sbb loop mov inc sbb push pop rorl dec outsb nop repz mov cmp jb fs inc mov rcrl mov adc aaa mov xchg cmp sub xor cmc or and (bad) shll repnz loopne mov ljmp test push mov push in jecxz push jmp dec repnz out rclb sbb xor xchg data16 mov add int cltd sbb jne sbb sbb cld test nop xchg add xchg lahf pop sub xor lods stos push adc cmp pop xchg mov xchg cli repnz pop cmp xchg and lret sub lahf adc xlat add pop add sub je push xchg sahf push cmp sahf icebp stos sbb pop cmp jle and pop xor mov fistp xchg mov jg (bad) fisubl add pushf rcll adc lcall mov mov sti xor adc mov call (bad) add push push repz sbb into mov mov flds xchg push xchg imul pop stc adc adc push add decl xchg sbb adcl or push mov jmp push ficomp sbb repz pop insl pusha jo repnz jecxz mov dec add xchg out lcall mov pop insl cmp fwait or popl dec mov mov lcall push clc sti (bad) das repnz adc xchg xor sbb in mov pop mov jge jecxz push (bad) or daa xchg test pop add push add in movsl adc xchg out jnp in jp push ret mov cmpsb jecxz mov daa xor imulb xchg mov rol gs xor jecxz or call out test jecxz cmp cmp cli jb xchg push pop xor je out inc or jne add jb inc (bad) mov shl pop push dec lock push mov insl push subb pop loopne and add (bad) sahf rcll dec xchg or repnz arpl pop jmp ljmp adc and cld xchg or jnp push cmpsb adc inc movsl or cwtl push sbb add xchg lcall lcall jmp push inc or xchg push mov xor or pop sbb mov into loope sbb out dec mov sar jbe xchg xchg mov stc inc test fistpll add pop out les sbb pop divb xchg in adc iret rcl subl mov testb arpl mov pop lahf add or push xchg int3 and xchg adc fidivr lea pop dec imul leave rol inc fs sbb adcb lcall (bad) mov js jl push mov mov cli loopne dec fisttp jns out out jae dec ja mov std mov lcall data16 sarl push pop nop push lock or hlt out pop xchg out addr16 in stc sti sbb scas mov std lret add xchg or mov movsl fcmovne push mov push add lods hlt inc stos int mov arpl test mov adc out bound sub icebp mov icebp xchg inc xchg jo scas (bad) cltd dec (bad) fwait adc pop and mull push aas jnp call push cld lods xor inc push aad or in sarl pop pop push out sbb (bad) data16 xor outsb jp lahf popf xchg inc dec lcall sub bound outsl arpl in adc movsb out push xchg xchg das lea xchg and sti popf (bad) out xchg or movsb push test or xchg fdivr fcmovnu mov mov pusha add rorb sbb sub pop scas into or das les pop int pop mov fldt call sbb mov ljmp mov fbld fcmovnbe jl sti adc xchg loop dec xor mov stos push jnp insb jle pop stos cli xor mov or outsb and push movsl sbb jp mov jb (bad) out (bad) pop mov push jb mov jl fwait loopne int3 inc cmp out mov or pop leave adc repnz orb (bad) fwait data16 clc mov sub sub mov cli or fcom xchg rclb xchg cli lock push xchg ljmp inc mov lahf inc cs out sub jp push jge cmp dec xor out leave ss js mov adc sub pop push xchg and clc rolb adc out pop lahf sub mov xchg push mov jmp ret mov pop adc jp xor cmp rcll cmc je add mov sbb in lods mov push fs pop negl (bad) hlt xor pop insb or add push inc sahf mov sbb loop jg ja dec mov lds rep jae add and stos pop dec jmp out mov sbb dec in jne and jecxz jno loope mov das xchg (bad) divl stc mov out sbb xchg shrl stos (bad) in sub mov mov mov pop in lcall bound ficomp icebp xchg push xor sbb mov (bad) jl push jl push adc (bad) mov cli mov (bad) mov or jmp test movsb daa je jbe idivb insb fisttpl bound xor imull out xchg push sahf into loope repnz inc mov inc dec sahf jnp hlt rorl mov and enter or sbb loopne cltd xor lret int cwtl or xchg scas out pusha daa adc out loopne dec inc loop leave adc aaa sbb or push pop push outsl pop cli adc adc ficompl arpl lcall adc push pop xchg push lds inc movsb aaa pop ss cmpsb xor enter xchg fs dec mov xor push (bad) ja cltd inc out in mov adc push cmp loope loop int fadd sub adc or dec test dec inc jne dec xchg adc imul push push xor dec or les lea dec mov out sub (bad) clc adc sub daa jo setb push jae cld push or or add cmpsb arpl fwait and mov xchg gs mov push insl xor sbb push xchg xchg adc mov push push repnz add pop stos je pop adc fadds pop js sbbb fbstp push es push mov xor mov pop pop pop loop adc cmp inc lcall in xor adc xchg jecxz mov dec aas sub inc aaa adc add xchg out xchg lea jno (bad) and cmc cmpsb daa jo mov sahf push fnstsw inc sarb cmp int3 jno setns lock mov pop int adc in xchg les lods pop test sarb stos sub sub stc sub into xchg adc arpl sbb dec sub or popa fiaddl stos fldenv pop clc fs dec or xlat cmp xor push pop adcl pop mov sbb push outsl cmp mov and jb repz stc pop mov mov push int fmul pop cli adc jo pop push iret sarl popa bound ror mov dec clc push fwait popa jecxz mov loope fcmovu (bad) xor outsl (bad) add ja pusha call adc scas test dec lods enter adc dec push arpl jecxz cmpb xchg scas rorb or or sub dec jmp and pusha push test mov dec or push push xchg jmp cmp or arpl aaa dec loopne repz mov jp stos dec lret mov movsb lcall pop xchg add cmpl nop cmp into mov mov add sub xor dec mov xlat adc adc bnd cwtl repnz mov lods xchg imulb sbb nop int3 ljmp pop pushf jl ret lret cmp pop pop addb std push xchg inc popf rolb add aaa lods jle adc mov lcall push inc nop repnz cmc adc ficomp xchg lock out sub pop push loop fbstp fwait jo jae call add test push push sub add jp dec push adc mov je inc mov push sub mov xor inc push push sub add and and fstpt dec aam xchg loop outsl dec mov and adcb aad sar leave adc xor jp loop dec call jl,pn mov dec nop (bad) adc add lret orl xlat pop push je out xor mov fcomps add xor (bad) mov add call push mov dec sub or add push cmp je popa sub repnz pop jno aaa cli add fwait arpl fcom aam repnz sbb push cmpsb xchg loope movsb or aas push add push xor sbb ret movd adc adc cmpl push addr16 (bad) popa push inc xchg arpl je pop sbb gs arpl out jge popa mov and outsb popa jg sbb incl testl dec pop (bad) cwtl outsb rclb add xchg (bad) or daa ss pop incb cmp xchg arpl mov rcll mov addb out xor pop inc jbe mov in xchg sti out and adcl dec dec mov adc inc (bad) jge cmp mov cmp or repz cmc sub jno and cmp sti dec push subl fwait popf and dec lret sbb lahf das (bad) outsb mov xchg inc jo xchg or xlat ljmp lret shrl inc (bad) mov xchg xor (bad) push lods dec loop add sbb or in lfs push fistpl cmpb mull xchg sub out scas cmp jae daa arpl pop cmp jns add popa out sub popa or (bad) sbb (bad) or xor outsb mov adc pop push add sbb mov icebp cwtl cmp mov fwait jge adc pop mov cwtl inc sarl mov loopne stos mov outsl mov jns iret xlat xchg ret (bad) mov loopne in fucomi ficomp dec mov push test into lcall cmpl sub in enter dec mov and sti shr (bad) add outsb mov sub test and pop scas push dec hlt insb pop xor pop xor adc inc ds inc mov pop or sarl xchg lds fsubrs lods sbb and jecxz lret mov and jno inc add jmp es sub cmpsl nop mov push dec mov push shrl xorb repnz dec fbstp in outsb loop out inc sub mov add mov fcoms inc aad fs mov lcall pop dec daa arpl xlat xor jecxz or mov and push xchg xor movsb mov int int3 dec sub int3 dec pop mov dec pop add mov inc mov push xchg int3 add lods dec or xchg adc pop mov pushw add daa sub inc loop or xchg insb push xchg inc outsl adc inc in adc xchg mov mov in in lcall sbb (bad) iret add push lret adc (bad) adc add mov loop popa in stc push aas sbb dec jne enter sub cmc sti jecxz push or sbb mov xchg mov out jg (bad) dec adc xor lret push lock cmp mov cmpsb fldl adc (bad) push gs hlt xchg xorl sbb dec mov std mov jb push scas sbb loope in or push push mov inc xchg lahf mov fistl sbb cld cmp scas inc rcrl fwait push lock sbb mov (bad) cmp aam ficom shr out fdiv notl add nop dec ljmp loop cmp sub inc leave out (bad) mov divb (bad) negb sub mov dec fstps dec enter mov push (bad) and lret out adc mov or mov or lret pop xor inc ja xchg adc xchg mov mov xchg dec sbb dec std mov adc or fwait or lret jecxz sub cmc xchg scas dec pop mov xchg and scas xlat cs xchg push enter inc mov (bad) sbb add adc fs dec lods fucom xchg inc insb js adcl loop pop xor push adc sub dec push add fwait ret lret inc and jno sti xchg pop sarb (bad) pop inc mov cmp adc sbb loop or or stos ret push cmp stc mov andb sti cli js les popf fwait push nop xchg dec adc stos push or jnp movl mov pusha outsl push cmp pop out push ror movsb decb dec jmp data16 dec iret int (bad) jecxz push fs cwtl insb xor icebp mov adcl sahf lahf adc bound nop out jae inc ret pop ja aas push mov sub add pop mov and cmp in sub lret sub push push pop add fnstenv sbb add cmpsb test test xor in (bad) mov xor pop (bad) aaa fs jge and cmp imul addb dec xor in andl or rolb cmc push or or add int aam push or and push mov mov fidivl adc push mov push fstl repnz xchg mov inc repnz or xor and movsb push nop push fcompl sub aas push and mov dec add outsb xor or lods (bad) adc add or je push or js or int fsubr push jae sti outsl out adc pop sub jae scas push jne add out push dec push sbbl pop pop je inc xchg loop rorl nop push mov pop es sub (bad) (bad) inc cmp add out adc fwait xor fbld cmp xchg in fcoms fsts jne out mov repnz rorl ja xchg dec fldl stos loopne xor push orl dec (bad) jmp or inc mov push dec rol fpatan daa bound add sub outsb lods cltd lret push cmp loop cmp xchg out cmp lea std push xlat push cmp in in mov cwtl mov sbb adc enter test add or sti lea out loop and stos mov mov pusha test dec out push adc mov xchg into sbb fucomp or jne orb jmp pop push xor push mov aad dec push clc test or addl ljmp ljmp push jg inc ljmp push sub lock jle pop xchg mov fwait cltd push push sub stos and jnp push (bad) sbb pop les dec jg cli inc dec adc aaa push lret inc push lcall fwait inc sbb out ljmp icebp ficompl mov fcmovne xchg or dec sub push pop sub dec sub mov xchg cwtl or xlat push add ret iret js or lahf fdivp sub icebp in push cmp or mov mov jno int adc sub pop dec sbbb std push cmp xchg clc fcoml (bad) mov test cmp mov lock cmpb addr16 aad adc mov ret imul cmp xchg push adc pop ljmp pusha jle pop push xchg jp in xchg decb or int3 xchg insl push or adc push pusha pmulhw mov jle (bad) adc sub cwtl adc aad ret test ljmp ljmp dec sbb xchg or inc xor mov loop xor out dec loope pop lret dec xchg or dec outsl add adc sti pop dec dec sbb je fisubr xchg data16 cltd ljmp test rcll mov out pop int3 adc push jae cmpsl add inc or mov lret sbb cmp xor lds mov push orl and pop sahf or in sbb or mov popl mov ss ror ret ret jne popf adc stc jecxz push or roll mov pop out jp out outsb in cmpsl inc outsb add fiadd (bad) jb out stc scas or adc (bad) pop add (bad) inc sahf pop out add push adc sar add inc ret push (bad) in arpl hlt push (bad) pushf pop ret out mov loop add mov fisubl pop (bad) mov pop (bad) ror sbb (bad) rolb test or mov xchg or push in int fcoml xchg lods sbb dec orl std insl jnp mov adc lret fnstsw lea jb out clc mov cltd loop std iret rcll inc xchg icebp sbb push jae ljmp xor mov pop push add and xchg mov dec push jnp sbb push adc xchg scas push outsb add repnz mov mov push fisttpl repz and pushf loopne pop cmc inc jae outsl cmp mov inc jno xchg push push adc nop add scas dec lret add popa es orb xlat push loop jp push or xchg fimull cmpl push xor mov ret xchg pop lahf (bad) data16 dec call push or xchg push jmp (bad) (bad) in xchg daa jge xchg adc or jns sbb jbe es test scas xor push lret testl iret repz or inc pusha mov mov sub pop push test add mov int jbe mov adc cmp aam lods xchg add xchg stos inc loop xchg fs pop iret sarb inc sbb dec cmp in (bad) push push push mov dec mov pop adcb and fwait mov cmp and adc add xrelease mov cmpsl mov push cmc pop (bad) fmuls popf dec add lods xor or imul enter jl adc sbb fnsave push jnp fisubr scas mov push xor out pop and out mov or xorps pop gs adc mov fdiv shrb xchg leave std xor cmp mov mov pop sub in adc mov lcall inc xor stc repz inc (bad) int3 test loop adc sbb pop lahf adc data16 fnstsw sbb push int3 pop jmp enter shrl idivl adc clc in shlb sbb repz mov mov int3 sti cmp sbbl pop mov adc jle hlt leave pop add sub push inc scas jecxz fstps dec or adc or popa nop adc pop pop sbb xor sarb scas mov sub jmp neg inc mov sti outsl and mov sbb pop add adc into push cmp popa lods mov inc (bad) jne adc push inc or and addr16 xchg mov popa aam punpckhwd js rcrb jmp cmpsl push mov adc xchg xor mov or dec repz cmpsb sbb out sahf xor pop int3 and cmp sbb push or test cld femms out lret or mov add jle sbb jne mov fldenv lcall (bad) cmp mov cmp mov xor sub ss call fcoml push mov mov (bad) adc or add repz mov xchg xor inc aas dec test (bad) dec adc push jp or repnz pop mov pusha dec ds iret out xor and adc sbb mov sub fsubrs repz pusha add jg (bad) or popf cltd fwait add cmp push lock xchg cli adc adc push cmpsl stos add mov dec push in scas adc (bad) repz push or outsl push inc adc pop les push mov pop or adc cmp inc mov cwtl xchg push adc arpl lea adc jbe,pt push cmpsb imul (bad) push pop push xchg fldt jo subl cmp bound out cmp push push add ret inc mov cmpsb ljmp or fcoml add inc insb adc jle cmp lcall push test xor in stos sbb sbb lods push flds push add mov pop mov add xor push inc es leave adc xor cmp fwait pusha (bad) int or cwtl les (bad) (bad) push inc sub or xor adc jmp sti adc in mov push dec pop xor xchg adc xor loop and inc pop repnz loope repz int3 pusha xor movsl icebp add in jg cpuid cld xor xor (bad) sub mov adc sbb xor loop and pusha add and popa sbb xchg jb je xchg dec add pop or add mov mov lcall movl lea sub adc repz xor xlat call xchg jl pop int3 mov mov pop inc add lahf out shll out mov rcll loope mov sub pop inc fiadd adc or div push jg test sbb xor cltd sub adc inc sub push movsl sbb repz mov xchg jecxz and adc stos in inc fs dec or cmp inc lea inc inc sti jnp xchg xor pop hlt notb adc adc add push push insb je (bad) adc adc adc in mov adc cwtl and pop aaa inc or adc nop movsl out sbb adc push sub repz enter cmp movzbl mov dec cmp fildll add and test dec clc (bad) mov pop cwtl mov ret cmp leave repnz mov adc orl jge inc push (bad) jbe jbe jo daa push mov xorl push test lcall daa int3 into scas dec es dec (bad) xor add daa mov adc fnstcw loope punpckhbw sbb push add int nop and add xor movsb bound push call std mov mov add imul cmpsl (bad) clc cltd out and adc popa jae sbb jg mov les mov test popa or mov js cmp leave in mov push cmp aaa push push cmc shrb repz cld mov popf pop add scas vpsrad mov lock cltd out popa adc aad loop jns out add or sbb cmp or inc xchg ficom xor rclb (bad) int3 mov push stos mov jmp fdivrl adc cmp adcl mov xchg gs xor push mov xor (bad) (bad) mov jmp (bad) jp push lods icebp sub pop repnz mov add ret or push movsb pop jmp push scas pusha gs bound jg scas cli test xchg mov inc sahf push data16 insl test pop bound xchg aam out and or xor sti (bad) dec xchg ret call cmp fistl xor gs adc mov mov sub pop jmp xor test adc jo jae xor jecxz jg rcll or add mov add mov jp adc sub jo cmpsl adc mov xchg out pop xlat cwtl xchg mov fldt fwait call jno xchg or xchg and mov lods mov push adc add mov pop test add shll sbb lret rclb (bad) loope jno sub pop cmp bound jge fildl xor or inc lea sarb jae (bad) adc aam and mov fcomip mov loop (bad) repnz imul push and xchg mov or inc adc test mov jb fstp call (bad) mov sbb mov mov ds popa adc pop in jmp and aad adc adc pop xor sbb inc adc jbe scas fs or mov mov repz inc mov cmp divb mov lret adc cmp xchg add jmp mov roll mov (bad) cmp shl push aam or mov lds dec jle push clc (bad) adc std dec and (bad) out xor scas clc rcrb rorl adc hlt loop or and fdivp iret mov lods xchg cld xlat fwait das sbb mov xchg shll mov sub mov xor mov xchg stos jg inc adc ja inc lcall repz xor fildll pop xor cs add mov mov pop mov xor or xchg aas mov adc stos pusha ret and sub sbb cmpsl (bad) int3 pop jns xchg push sub or clc (bad) push repnz jns std repnz ja jo (bad) mov sub pop xchg iret adc inc maxps int bound xchg adc out push shl xchg and into adc or gs int test inc pop call (bad) scas (bad) lods or mov add icebp pop jge,pt adc push mov fidivl jne dec add hlt inc mov adc xchg cmp dec mov push loope jbe dec cmp mov mov data16 sub dec mov punpckhwd jmp ljmp add addl jp icebp inc shrb lret or imull test je jecxz dec mov lea stos xorl or mov xchg mov mov pop pop (bad) bound test or jmp sbb incb repz adc xchg in fisttp adc xor xchg xchg ja jle leave sbb or dec xor add or (bad) jb sbb stos pop mov mov jg xchg cmp sbb mov adc jle pop arpl scas and push test loopne push pusha ja mov call adc or repz clc sub or enter add test rcrl sbb xorl push loope and push call lods xchg (bad) adc pop stos not dec (bad) sub and inc mov and cli cmp sub repnz lcall add les imul outsl add mov (bad) dec scas mov cli dec adc pop bound (bad) notb or xor jno repz push and test imul sbb mov adc inc mov out repz xchg imull iret xchg sbb jecxz xor pop or jnp push mov (bad) js leave adc add mov dec and in repz imul pop or es inc scas or mov rcrb stc push sub and or adc pop pop sub testl adc insb cld mov dec call ljmp js dec rorb std mov push dec and jne repz rorb dec inc ljmp jno add cmp data16 scas xchg adc dec mov jne je ret aam adc jmp in js (bad) mov sti mov cs jmp pop jae (bad) into xchg leave xor adc movsl aad clc and lahf mov repz mov cmp test xor push lods adc mov sbb sahf lods nop xchg aam inc xorl inc pop mov add ljmp sbb (bad) inc pop push jl out out or bound popf or add mov (bad) aaa xor mov dec or xchg pusha fisttpl shlb addb adc adc ljmp out xchg pop mov cli or (bad) sbb cmpsl push mov jbe xor ljmp cmc testl pop add mov and (bad) pop dec lcall pop mov adc loope icebp fnstsw mov and xor pop insb arpl pop jmp adc mov sbb adc es jbe dec cmp adc cmp fnstcw js mov mov sub call fnstsw popa dec push or cwtl jb xor les subb test enter dec bound jne rorl mov cmp daa insb mov cmp outsb (bad) adc sbb lahf or lds loop es ret test into mov or mulb pop imulb pop jbe repnz and dec int ret stc xor adc adc repz add push jns mov lahf mov cmpsl jmp add push inc cltd dec arpl sbb mov out (bad) into sbb negb mov ljmp or clc adc add lds xchg popa adc test lret add dec cltd dec bound jo cli hlt mov push popf lret xchg adc shlb sbb bound dec mov mov sbb repnz jne add adc (bad) movsb sbb out shrb jle aad sahf lock mov push ljmp or ret adc cmpsl jp fnsave adc mov in out icebp jnp sub mov inc mov inc mov (bad) (bad) adc push xor sub fwait xchg and in fisubl dec and mov xchg mov sbb mov ficom clc aaa adc xchg ret push pop sahf (bad) add sti mov mov mov je insl cmp in cli cmpsl inc pop psrad ja (bad) jb adc or cmp mov pop dec inc movsl incl jnp jnp push mov adc push movsb aam fdiv jmp loopne and mov adc inc test pop xchg push pop mov popa sub mov adc and repnz jne adc lcall adc (bad) mov mov cmpsl into pushf jle hlt std push es ja stos fiaddl lds pop mov leave mov xchg fst das inc js data16 mov test (bad) mov popa imul sub daa jmp andps xlat pop push or adc cmp test lods fnsave sub (bad) fidiv js (bad) xchg mov mov push mov sti je adc fistpl (bad) push xlat mov mov pop (bad) repnz inc loop in scas adc rol push pop mov adc out leave mov rolb cmp loopne or xchg lds adc cmpsl mov ss mov adc out pop aaa adc fs mov xor sbb fdivrl int fcmovbe or xchg push mov dec je outsl mov divl das repz or arpl in pop add mov outsb fcoms scas ret push xsavec pop mov add adc jno cwtl adc jg push sbb in and dec sub adc imul sahf mov in rcll (bad) jp fcoml cmpsb mov inc cmp xchg in pop xor mov (bad) jns adc add adc jg (bad) std push nop rclb or add adc (bad) lods pop cmc (bad) into lds push sbb fisub push aam push push push scas mov loop je mov mov add lea mov lret rcr pop jl outsb sbb adc jge lret (bad) mov xchg repnz into jecxz or mov rolb and push pop adc xor mov mov shll mov add in jb sub scas mov sub pop pop mov icebp sbb xchg movsl aad movsb rcll mov push stc dec mov dec adc and pushf sbb xchg adc mov fist adc or cmp jmp adc outsl (bad) movsb add pop push dec es push pop xor lds push fs loopne adc hlt ja (bad) fs repnz loope sti test xor ret int les jecxz sti pushl add jmp ret sub outsl adc xor add xor roll arpl pop sbb sub mov (bad) fiaddl sti int mov testb stc mov adc adc sbb ret imul out insb push adc mov lods add (bad) xchg test adc mov gs mov dec add aaa adc push jmp xchg mov jg push sti cs ret pop push insb mov outsl xor add cmp js xorl das adc push cld dec push in cmp push insb sbb out adc (bad) dec aaa jns jno movsb pop ss out fs (bad) adc and pop lods (bad) aad sub mov (bad) inc (bad) fdiv or fldcw lods pop fisttp subl sbb jecxz sbb cmpsb mov add jbe mov stos push or adc mov mov adc mov cmp pushf cmp adc call pop adc add mov (bad) sub pop pop popa pop mov add push into adc sbb lock adc cltd imul pop sub inc and add adc dec sbb lahf icebp adc clc bound push adc jns (bad) hlt ja adc pop insl (bad) sahf jg xor (bad) adc mov pop bound and push leave out outsl adc xchg cmp adc mov push js shlb insl adc in cmp pop mov xor cwtl dec bound js clc cmp lds insl sub mov pop icebp ljmp push pcmpeqw xchg adc mov pushf fisttpll adc sbb mov add jbe fwait movl aas imul xchg sbb adc movsb adc cmpl mov pop sub loop rclb adc xchg cld nop xor pavgb jle into and adc jae iret xor ss adc dec mov js jg cmp xchg sbb aam ds xchg xchg dec insl cmp inc mov (bad) aam xlat push jmp dec adc pop cmp je,pn pusha nop cmpsl js mov cld or mov adc call sbb pop das repnz js sbb enter and push fcomps mov jno or adc clc loopne cmpsl or call loop or mov mov das fnstenv sarl push repnz inc sbb mov lret jecxz push push mov insl daa negl in movsb sub (bad) mov mov xchg pop decl pop (bad) and popa mov xor mov xchg aam seto jno xor hlt sarl ret cltd ja rcpps fnstcw (bad) adc jle mov iret gs push adc jle adc cli inc mov fisubl sbb lret cli movl xchg (bad) or pop (bad) out addr16 sti adc out and out or add xor sub dec xchg out cmpsb outsb loop or adc mov aas adc mov cwtl add out add pushf add mov sub fldz and sti sbb ja mov je adc movsl pop lcall or dec add cmp adc sub ret insl lret jl cmpsl sti mov jg sbb adc rol mov adc movsb sbb cmp pop add push mov rdpmc pop in out out or pop push mov scas xchg shl xor mov int pushf jne (bad) enter data16 decb adc jns out sbb cmp call add adc and jg (bad) xchg (bad) or adc das ret test (bad) loopne aas jg aad leave sbb xlat ljmp adc jecxz sti adc fbstp xlat mov adc daa insl es leave lock js push aaa inc cmpsl mov adc sbb pop cwtl sbb adc mov insb xlat add nop and sbb mov cld xchg lret iret add xchg rorb dec pop test inc subl scas out pop mov mov (bad) jbe adc cmp pop jg ss aad shrb icebp adc mov cmp dec out popf push ja loopne prefetch sbb (bad) jno adc arpl push pcmpgtw (bad) mov (bad) in mov std add loop sub xchg xlat cmpsb imul stos lods or addr16 rcll pop xor pop imul adc (bad) aad xchg cmp jl je cmp loope addr16 sbb adc jmp xor and cli or add sub add cmp adc sbb adc cmp mov test push mov dec ja push push jecxz inc stos arpl out inc sti xchg adc inc hlt daa sbb sub mull xor pop in sub subl mov cltd nop insb fidivl push inc sub xor cmp mov movsl adc fildl adc or add test dec inc xor jge pop (bad) pusha adc push (bad) movsb xchg fisttpll mov scas dec pop jb and adc and sti adc fbstp in enter mov aaa mov jb adc imul or mov inc pop mov adc test mov pop ljmp add fwait sbb subb cld pusha loope adc fwait inc xchg pop mov mov mov add int sbb jno add in into pop xor or das rcrl icebp ret dec sbb adc inc mov test sub cwtl or sarl mov mov divl (bad) setle cld pop mov sbb ficompl jns stos adc and mov jnp popa dec out xor int3 inc xor daa adc movl imul jecxz adc adc xchg cwtl repz and adc aam mov cmpsb pusha enter jmp fldl xchg lds aam cli (bad) ret ror mov adc add push fwait sub sti adc push pushf mov adc sub add mov mov mov xor loopne mov dec push sbb rorb call cli cmp adc inc in pop pop out adc xchg push pusha cmp jae xor (bad) ficompl inc insl lods jo jae int3 inc enter fwait cld xchg repz cmp lods rorb dec mov mov lock mov fwait iret lret adc jmp mov adc stc cwtl pop adc imul push xor bound push repnz subb add lahf cmp fwait add and scas lock adc dec jnp sbb mov repz addr16 fcomip mov nop mov rolb add jge repnz repz adc xchg das mov push (bad) jnp in jmp sti (bad) (bad) or sub adc (bad) mov dec pop icebp icebp jno ret inc mov adc test and std pop repz (bad) mov xchg mov mov adc imul sub xor xchg cltd mov enter add mov jge out (bad) sbb xor inc xchg fcmovne dec sub outsb adc ja and add adc sbb push arpl jae fidivl pop sbb push stos movsb jg pop sti xchg xor mov adc xchg ja pushf loop adc mov mov dec adc push jb pop rol lds popa add std (bad) jp fwait push adc aaa frstor or xor sub pop imul xchg mov pop adc in dec repz add clflush neg out rcll mov pop sub clc xchg pusha jecxz mov sti xchg rorb out test jb mov sub lret xor and and jb push sbb sbb adc add adc fiadd test dec out (bad) repnz pop adc adc mov icebp inc fdivrp jae adc mov sbb out add mov cli pop imul (bad) mov iret xor js out out fwait jo outsl outsb push adc sbb sub and xor stc fs mov dec mov xchg je push cmp jae popf push cmp or sub js inc (bad) jp mov shl scas jno xor sbb adc divb adc or pop fs call lcall rcrl fidiv scas sub notb sbb insl mov xchg lods inc adc xchg cmp popa mov mov in outsl test jl loope xchg iret int3 adc sar mov ja movsb xchg cvttps2pi adc loopne js aam and loope into mov xor jb movsb push int3 pop je insb adc (bad) bound scas scas repz lahf push loope adc pop icebp call pop fbstp sbb bound adc adc jbe adc popf sub cli loope mov pop scas nop mov mov xor add sub push adc sub mov add cli cmp rolb jns xor or out (bad) mov insb mov (bad) insl mov adc xor insb mov pop push cli adc mov out jnp neg (bad) jecxz cmpsl xchg iret rclb sbb in mov mov or pop adc adc imul add dec cmpsl push xchg testb or jnp mov mov or cmp push and jmp sbb add push leave jne adc pop dec adc adc and and push lock mov lods cmp mov fbld dec sbb lret or adc jg adc jnp ror in pop adc jns repz or push adc mov add insl cmpsb imul jno xor aad bound jge cmp repz jns cli pop push cmc mov mov jne mov mov mov lahf test jbe repz adc mov mov lret scas sub xchg adc imul insb idivl or or dec mov pop int3 adc fsts pop test ret loopne popf adc jbe push adc jmp sbb pop cmp adc adc cmpsb sub movsl mov dec adc push loopne xor popf or out adc into push in mov adc jmp loop mov mov repz pop push sub lods cmpsb xchg dec adc call les test rclb je loop ja lock xchg std stos xchg iret (bad) mov pop jmp xlat jbe data16 lods test jmp icebp or pop lret push xor push std or push scas sbb jmp jl shlb cmp or xchg aam push scas lret jmp sbb pushw iret scas repz jl ret (bad) repz je lret add gs shrl mov aad cmp xchg adc into pop divl lods adc dec xor mov push cli push icebp out in lret lret add pop mov sub inc xor call xchg (bad) adc pop int3 pop sbb repnz aam cmp mov push mov fisttpl jmp adcl fdivs pop jecxz xor aad pushfw lods hlt dec cwtl xchg sbb dec xor je push (bad) sbb cmp push arpl in sbb prefetch fstpl rclb jl lods lahf jmp call frstor dec jecxz imul stos xlat dec sbb fs inc push jge pusha adc mov adc shll repz scas shlb jb mov or movsl popf and cmp xlat adc mov pop data16 repnz divb mov repz scas sbb or add loop or push dec jl mov sbb insl test repz data16 decl xchg push std arpl lock out mov add mov mov mov sub (bad) scas hlt stos cwtl add sbb sub pop and loopne adc not mov adc scas in add mov sbb outsb mov mov jno mov icebp enter or lret cmc stos fwait sbb outsb add add lret subl inc mov cmc push or shlb add and adc xlat push push cmp push inc scas add pop push call fdivr mov lea jo jns repnz xor mov pop mov pop add cmp rolb inc pushl jp aam mov mov (bad) addr16 dec repnz mov mov testl mov test adc imul and adc test cmp (bad) mov mov sub jl (bad) xor je mov pop sbb repnz push repz push xchg push inc mov (bad) (bad) nop fisttpll cwtl sbb or jb adc popl pushf insb mov adc enter adc shrl fimull cmp cmp lods xchg lds imul jae ja or popl pop inc inc cmp mov adc mov cmpb pcmpgtd push mov add cmp adc adc ja push aam adcl lea xor stc in adc cmp mov pop push cmc jne in test (bad) adc sahf cmp adc jns icebp dec movq adc pop ds jne mov pop sbb es pop jnp dec mov add or dec leave adc xchg test adc xor push mov in je sbb sbb fldenv insl sar add push jmp mov mov adc test xchg and mov push rcrb mov push (bad) pop mov push rorb movb cmp test adc cmp fcoms xchg push outsl nop rclb inc pop mov adc stc test xlat (bad) stos adc pop adc out mov mov jnp add xorb and xor or scas adc cwtl or pop sbb inc adc mov and gs loop call mov xor jecxz adc leave (bad) mov xor data16 imul rcrb into mov sbb mov xor adc stos mov adc inc outsb jmp (bad) test int3 mov cwtl mov lret sbb mov pop popa fidivr jo push adc sub insb mov repz les push out (bad) mov adc in or adc inc rcll adc pop pop lret (bad) fiadd sbb mov adc outsl pop hlt or fstpl repz (bad) std rclb dec imul and cmpsb repz imul sbb push iret mov push adc sbb jecxz lock lcall stos add popf nop adc sub mov push (bad) jno pushf out adc ljmp int adc leave xor adc loop daa (bad) out addl jns mov cmc sbb das nop int data16 mov icebp jo adc out mov (bad) pop mov xor cmpsl pop lret dec nop mov sbb imul sub xchg fsubr or ret outsl cltd add mov pop cld mov xorb arpl adc adc (bad) fldl jnp and ja rcrb push jg or fild add pop jne adc imul mov mov adc pop jecxz mov mov int loop movsl (bad) mov popf push iret enter adc fldl movsb repz ret pop popf or inc mov (bad) mul jb xlat pop (bad) xchg adc sub cmpsb sti dec ljmp jno lds out jne xchg std mov sub add or sbb adc jno aas mov sbb add cld dec adc push xor push mov xor outsb xchg jge pushf inc test fsubl add fidivl (bad) out xor sbb inc jg push inc or cmp mov cld xchg xchg into mov add insl test pop lods lret imul not inc xchg push rcrb fistpl popa jne in jno pop mov jg mov inc pop sbb xor add dec imul adc or pop cwtl mov aam fldl adc in jnp test mov jb lea jl cli sub mov insl (bad) repz pop adc insl enter xchg xor mov cmc or inc cmpsb cmp dec insl xchg lret std and dec pop sub push adc insb mov imul xchg or jbe mov fcmovb pop adc divb out jne mov insl pusha stc push adc sbb adc mov je cltd xor repz jno mov mov adc jg call loop enter clc nop pop stos jl rep adc xor adc sub mov xor inc fldenv das popf gs adc pop mov adc movsb rclb pusha add add nop adc add lock pop mov imul roll and mov mov adc adc pop jecxz xor loopne nop negb insl addr16 adc fs repnz stc add push aaa sub inc pop mov andb add mov sub shlb cwtl pusha mov iret push imul call lcall ds aad cmovb ljmp add pop into adc or hlt mov adc and adc xor mov jmp sub cmp insl or rclb jnp mov jle add pop dec and sbb jb mov or movsb adc jne and lret adc mov cmp adc push lahf and jbe adc dec push xchg daa jle pop js push add mov xor lret xor pop cli jg dec movsl sub adc mov cld adc scas notb repnz xchg adc fbld ret and pop cld lahf repz inc mov (bad) mov inc js mov push jmp hlt hlt sarb xchg or cmp push jne adc sub jnp adc das mov iret (bad) xor cmpsb subss sub es mov (bad) sbb inc or cmp adc mov push cli mov jo mov fild xlat out out xor push mulb adc loop sti sbb cmp push inc stos add xchg aas xlat adc dec stos lods adc jg,pn ss push mov negl and or pushf mov add cmpsl mov incb jnp std lea scas leave or rcll push jae xchg loop adcl mov test push add cmp dec in jo cltd int3 cwtl dec pop scas int adc adcl xchg push or and lret push fist test add (bad) pop rorl out sub adc xchg dec xchg shl adcl push cmp adc add ljmp js pop (bad) sbb mov lcall or lods adc sub add ret adc sub jne or xor inc mov or shr mov and cs xchg dec adc xchg into imul jae lea inc (bad) fs mov pop jmp push pop nop fwait inc stos or (bad) int adc xor sbb push adc (bad) enter inc fcomps mov pop and adc mov test cmp (bad) lret dec sbb sbb xor and or dec sahf or fs pop rcrb (bad) std xchg lea adc xor cmp add call gs dec or lock jb xchg adc jo push stos rolb scas xchg fimul (bad) repnz adc and cltd bound int3 mov or xchg adc xchg xor adc int3 cld ret (bad) notb outsb or push fs sbb add (bad) mov rclb pop adc inc xor ja lahf mov mov xchg xor xor and mov inc cmp mov je repz mov jbe adc test mov (bad) adc mov (bad) adc adc movsb (bad) fiaddl fs repz jo sbb outsb imul adc jle adc imul add (bad) (bad) xchg test adc sub aad adc xlat fildl or int adc sbb sub in fdivr mov js pavgw mov or jg sahf test mov pushf adc or adc pushf jge ja nop dec sub in (bad) loopne mov dec repz inc adc in sbb mov cli adc mov lret mov jbe roll and sub ffreep or js fwait es and mov push sti sub pop faddl push (bad) (bad) popf mov lret cmpsb inc and je adcl pop push outsb shl mov adc xchg ljmp int3 jbe dec xchg add mov stos ret jmp test int or or push gs add adc sahf jne (bad) repz mov and nop xchg adc dec or test add je cmp mov dec (bad) (bad) pop jg loope adcl jp into dec adc lods push and adc in cltd mov adc fucomip lahf (bad) jp mov mov adc sarb add repz lea dec jns repz movsl fwait mov cmp icebp mov sbb pop adc gs adc xchg test add fmuls add cmp test test sbb popf repz sub cmp push cmpsl push mov faddl pop adc mov adc iret push and int rol cmp pop pop nop and jecxz dec and mov imul test jecxz dec daa add sbb xor fistl jmp mov in xchg out fcomi cmc inc sbb fmull (bad) mov mov repz enter aas pop sbb cmp jno adc ja sbb adc stos cmp mov xchg mov jp xorl xchg cmpsb fs mov mov sub outsl add jnp add and dec cmp and stc push adc xchg mov inc mov mov sbb insb jae mov stos mov add mov nop fwait xchg pusha or inc jns push adc aad add pop sti adc and ja adc pushf xor mov dec push bt fist inc add mov loop xchg dec adc mov imul push das test add pop imul fadds lds adc sbbl adc xchg lods xchg rcrl aam and into or lahf mov dec adc inc dec mov sahf xor out std mov repz mov dec clc ret pop add mov mul sbb popa repz hlt sub adc add cltd mov cmc repnz fs and push jno dec daa imull mov push push lcall ret popa and and mov out lods mov xchg insl ret cmpsl mov fwait insl sub mov movhps adc push fsubrs dec mov inc and inc jl (bad) mov fisttp jmp xlat cld rolb adc xor testb daa push lods pop mov pop hlt and scas int3 jnp and imul jns push mov pushl mov pushl ret jmp cmc mov cmc movsbw rol btc mov test mov test mov pusha sub mov bt pushf pushf repnz call test add call bound pop sbb push pop outsb xor pop jg cmp push daa xor jle sub mov or je sub add mov lahf pop rep mov push push inc fisubl mov mov lcall cs (bad) (bad) (bad) mov adc sub lock inc int3 sbb popa test sbb and outsb loop ror ds adc in mov push pop popf shl jns aam xchg xchg push (bad) ret sbb int3 mov and dec ds scas xchg out stc sahf out pop mov and adc dec repnz add aaa adc inc test rolb into dec lods jmp call inc cmpsw jnp adc repnz inc pop ja ja sbb fmull das jecxz pop dec and xchg mov daa push xor sub mov mov cli addl rorl push cmp sti jg adc jnp popf pusha pop pop adc call push cltd sti sub adc pop pop mov push mov cs sub pop in jg sti daa cmp jbe jmp in rcll mov pop mov imul push leave aas mov and pop sbbl mov mov movzbl pushf mov push setge lea pushf call pushl popl cmc stc cmp pusha movb mov pusha lea ja rcr clc bt cmc sub lea add bswap clc shr mov adc bt bt neg mov push cmc push repnz pushf lea jne cwtl lea cwtl pusha movb mov mov movzbw not lea pushl pusha pushf call movsb popf sbb push cwtl fidiv mov clc (bad) xor xlat dec jl dec ja das adc cwtl pop scas pop and aam xchg out dec mov ds test sar add cmpsl inc mov push in xchg ret mov jle push mov out out movl pop xor pop xchg outsl ja xor (bad) repnz in lret mov (bad) or cmc scas mov add shll pop test daa iret dec call sbb cmc js xor sbb je sub push xchg leave pusha aad push out es mov jp shrb ret mov sub ja aaa pop mov enter mov pop push xchg lods movsl jg es rolb dec sbbb out ds add rcr push imul jno call and sbb out dec rcll loop lds ja and pusha cmp mov jnp push sbb (bad) lcall dec das inc mov clc xchg movsb stos loopne and mov into aad cmp shll add adc in or sub in jge and test nop lret loope enter mov cmpsb jl mull cmp (bad) ss test mov out movsl int3 sub call mov adc call add stc jmp mov dec pop cmp cmp data16 arpl pop cmpsl imul scas sbb (bad) out cli xchg int daa bound push mov dec fs xchg out mov add xchg out sbb and and xlat add rorl dec insb aaa mov adc or push adc scas mov push fildll sub xchg adc pop xor mov fwait add popl pushl cmp clc jmp push lock std std (bad) addr16 push mov ret jns xor ret shrl mov pop dec ss pop lcall icebp sub pusha and aam pop ret add out shlb xchg test mov pushf jno push inc add lods add xchg push (bad) stos in sahf daa push and iret lock (bad) push push mov pushf lea jmp jmp cmp test pusha mov test pushl cmp cmpb pusha movb lea jne rcr bswap not xor sete pushf lahf mov mov sub ror add call jmp dec add and xor enter add mov add pop sbb outsl orb jge jmp xchg not dec add jae daa cld mov (bad) sub add mov xor mov sahf out fwait cmp cmpl cmpsb jns or cmp push mov loop int3 or sub scas mov ss and fwait inc outsb mov push es pusha aaa jnp push popa push push pop cmp jno pop aam dec and shl pop lods ds pop add mov inc repnz movb mov mov js fistpl or (bad) pushl movl pushf pushf movb lea jmp cmp adc loop mov add fsubr mov cmp dec cmp in (bad) sub mov mov shlb xchg xchg pop jmp and xor xchg mov bndstx xor jne fstpt lods jl mov in test lcall xchg jl fdivl xor pop sub add xlat sbb sbb je pop sahf pusha out push lods out jb or imul mov jmp push sarb pushf sbbl mov sub mov jmp mov incl lds (bad) mov mov ficom int3 (bad) mov shl (bad) ds ljmp nop dec xchg jmp (bad) xor in mov inc (bad) jle xlat js in jns mov sub or lea or (bad) insb xchg sub loope jnp loopne imul bound ss add add adc into js add sti adc jns loope mov push xor xor ljmp xor insl push das mov pop leave jmp mov add xchg mov xchg sbb (bad) pop insl sar jno pop lcall adc mov outsl xchg out enter push push lea ja cmc stc pusha bt imul push movb pusha add movb mov movb movb lea jmp int3 popf jmp setb push mov mov call add push dec inc gs outsl insb fs popa je inc add sar (bad) not jmp mov movsb testb movzbl add mov movzbw push mov lea pusha push jmp or mov sub inc push and js and lods test and mov aam inc popf int ss mov stos sub cli or or bound sbb xor push jo sub jl jp (bad) lcall lods xorb cmpsb add aaa test int cmp mov cmp and cmp rcl daa clc cmp jo test xchg cmpsb adc pop int mov fcmovb pop ret pop mov icebp xor jae sbb lret jbe cltd lock (bad) loope inc and jb in aaa (bad) sbb loope test pop lret mov pop and movl call out add movsl sub pop push mov mov sti pushf aas fimull push mov sub stc ds addr16 mov imul ljmp and test int3 daa insb sub insl push cmp sub cmp sbb jge iret sahf jge cmp out ja lret mov and into mov cmc mov cwtl xchg push clc fsubp lret sub out push mov xor dec jb mov inc mov xchg int loop icebp xor int sbb inc pusha xlat and cmc mov cli adc (bad) lret mov js loopne mov call jae mov or shrl aas mov mov dec mov sbb rcrb dec enter aad mov test sub sti push lret pop int fcoms bound push rolb mov outsb cmc xchg test pop testl mov sbbb mov outsl popf cli or and push cmpsl loope mov xchg pop inc xchg push sub mov rcl outsb mov mov subl add pop adc into jge mov sbb push movzbw inc bts stc mov neg not neg push neg bsf push pusha mov jmp lea mov pushl mov pushl ret call push pushf movw movl pushf call lea jae call jne gs xor fs insb add fs jbe btc mov neg shr btc and add shl sar mov shrd add shr movl stc mov test clc clc jmp add test mov pushf test call inc inc push inc push dec xor cs insb add fnsave xlat pusha mov lea setno inc mov mov jno push mov call jmp lea je call push adc aad sub shll push sahf in fdiv (bad) gs cld rcll or mov fst lock icebp sbb sub (bad) js sar test cli push push jge test and enter fstpt add mov out jecxz repz loop mov lcall pop imul jle and fdivrl fildl test or pop dec cmpsb outsb jns pop ja and xlat add mov fisub add push cmpsb cmp sub cmp xchg pushf pusha lea jne xor mov shrd adc mov push cmc pushf cmp jmp mov cmp jmp lea ret lea ja pusha jmp pusha call mov lea pushf lea call jmp add call push pushl movl pusha call mov adc dec push fildll push mov dec andl daa sbb dec cmp sub (bad) out inc ret xchg loop fs ss pop xor lods sbb jge lods inc pop je jnp dec pushf leave cmp push test xchg stos and es ss cwtl mov lcall std push mov movsbw bswap mov jmp rep movzbw pop pop mov push pushf mov lea jmp adc movb pushf pushf lea jmp xadd mov btr pushf add not mov mov pushf call not jmp rol inc mov cmp cmp cmp cmpb pushf jmp xchg mov mov adc rcll scas out mov sub shlb mov pop lock cmp dec mov adc clc scas xchg imul xchg imul mov daa sbb fildl and call xor addl xor movb cmpsl es daa movsl arpl (bad) mov cmp adc lock sbb scas pop test popf dec push adc sub mov popa push outsl xchg fistl movsb add (bad) decl sub sub adc and jbe ljmp cmp lret add jmp jae cmp inc jle cmp cltd jecxz lret cld ret lcall scas je dec jl roll pop push push fimul dec cld cmp inc xchg sbb lret in movsb mov in add jae mov or sbb das adc incl xchg int3 or xor mov xchg or push outsb shll pop enter imul pusha lea jae call push lea je clc jmp and pusha movw call adc adc andl imul lret cmp mov jbe lods xor jmp test sub dec cmp rsm outsb shll int mov pop rcll js pop push mov add dec mov add sub loopne dec adc sbb add fcoml dec add minps mov cmp adc aaa push ss in push cmp (bad) push add sub pop (bad) testl pop mov inc pop (bad) dec cmp mov loope mov cmp jmp xor push mov jb cmp outsb adc or push add jg (bad) ds lods xchg and (bad) jecxz xchg mov sub hlt fwait lods cmp dec add xor fild adc in sub aad jns cmpsb sub fldt xchg sbb sub inc imul mov mov (bad) jae pop dec (bad) les (bad) fmulp xbegin mov mov push bound (bad) cmp gs rorb daa jle das fdivrs dec inc fisub xchg push cltd inc xor add ret dec and test fnsave add ljmp lahf ss inc test out mov dec decb inc and xor (bad) pop pusha lea jmp pushf movb call sbb bts jmp xlat adc sbb icebp clc fxch add ror (bad) hlt aad jge jno cwtl das cli daa es lahf add cli push cmp insl or sbb xchg into or insb cmpsb cld or rclb add push aad ficom jne push xchg mov jb cli jmp imul fistpl lea jae js pushf push pushf lea jne call push pusha movl push pushl push call movzbw dec mov adc cmp mov xor bt mov stc cmp call lea jmp cmpsb xchg or ss aad xchg ficomp and push sahf or mov jo jno pop js mov aaa xchg pop mov insb push dec scas (bad) fstpt mov add div repnz or in in cli test test push push mov xlat sbb cmp jo orb je push (bad) cltd jne push (bad) imul inc popf cmc or mov pop fistl cmpl mov popf out js mov inc fs adc aaa std in pop in pop xchg ss loop scas js and or adc inc cmp add push sbb (bad) xchg mov negb and in mov adc sbb inc packsswb bound stos mov scas out imul and cmc fisubrl add bndstx (bad) lahf lds mov dec scas sbb repnz cmpsl sbb fldcw mov dec hlt jle dec addl insb adc jne (bad) popa rcrl bound enter in add adc cwtl leave pop inc rorw dec insl fcoml xchg xor dec xchg hlt sbb test sahf (bad) jo rcrl mov inc clc pusha pushf sub lea pusha or push push lea je call lea je push pushf cmp pusha movw mov movl lea je cmc pusha cmp movw lea je pusha push lea jmp pusha cmc sub call pop xchg enter inc add adc out (bad) jecxz decl loop (bad) xchg sar repz daa in sub adc mov mov push lea inc clc xor pop xchg mov test shr cld (bad) pushf jecxz lret or lods or insl push sahf daa das or sti cld sbb and xchg mov mov xlat push fs lret fcmovu lods mov and pop leave ljmp mov popa andl adc and fldt loopne lahf lds cmp xor and addr16 jmp pushl movl push pushl pushf push lea jmp lea je push clc test add movb add jg pushf test cmp jmp mov adc movsb test jmp mov out aaa lret sarb js cld sub scas pushf sbb mov (bad) xor mov pop jp adc sarb xor je mov jbe mov stos mov fwait jg jno pop std xor daa jge fbld mov and daa sub int (bad) and pop pop adc push jo (bad) aad xchg xchg (bad) sub inc mov sub repnz or sbb test add add insb pop mov test shrb inc out adc arpl adc mov repz jl insb adcb enter int mov in lods rolb or (bad) mov cmc movsb xchg adc js adc mov (bad) cmp gs ret test out rolb push adc (bad) jmp out sbb fcompl mov leave div enter sti cwtl in enter ret test decb cmc lahf dec jbe push inc and cmp lahf mov cmp cmc cmp call clc pusha imul clc test call stc push cmp pushf mov call pushf pushf lea je btr pushf add inc sub shrd shrd shr rol mov setae cmc adc ror add setno or cmp add movsbw or pushf not mov bt mov stc call jmp pushf pushf movl pusha pushf movl mov push movb lea jmp push pushf mov pushf lea jp movsbl push mov pusha pushl movl pushf pushl ret cmc sub cmc pusha cmp movb cmp jmp jmp mov lea call jmp adc adc ret (bad) (bad) or stos add dec inc pop push daa inc insb jp mov fs push mov inc xchg mov mov or in push xor pop and add (bad) cmc aad inc dec jo jle (bad) mov mov pop fstps xchg outsb dec dec mov cmpsb (bad) fcmovnbe fcomps inc cmp adc mov (bad) xor and lock mov mov or aad pop sub (bad) sbbl or lahf and xor divb pop add movsl movl cmpsb xor sub in outsl xchg jl sub push xor mov bswap mov pusha lea call jmp sbb adc rorl loop fiaddl ss mov jb repnz mov jmp repz jmp mov xor sbb cwtl lods cmp loop in adc fistpl mov rcll sti mov xchg xor les xchg add movsb aas jne pxor popa ret jb lea jne btr not mov test test pushf pusha add stc clc pusha movzwl lea shr rcl rol mov clc cmc add bt jmp and add cmp cmp pop dec sub jo xor test in in mov loope sahf pop xchg cmp lahf jo inc xlat mov jmp xchg push stos sub xor adc jbe in daa push pop xor jbe loope scas jne roll call cmp pusha xchg dec test push insl dec xchg in scas cmp jmp xor loopne negl pop arpl adc fildll jae sub adcl mov inc gs enter lret adc (bad) lock mov jecxz lret clc and lods aas push and xchg sub and clc ss fistpl mov pop push cwtl cmpsl jmp rclb cmpl sbb push adc sahf leave fsubs mov add or test (bad) jmp mov bsf shr sub bsf mov setnp ror or not add ror sar rcr xor mov test stc test jmp call dec jp lret ds aaa and stos js pusha out jp or ja push jo mov xor mov mov mov fiadd out rclb pop mov (bad) push xchg dec (bad) adc mov dec cmp ret loop dec int int and int3 xor imul movsb dec ds fimull in dec arpl mov jecxz xchg (bad) mov sub imul call or pop out xchg and jge stc fldt lcall das jecxz cwtl hlt imul adc mov out cli sub jp inc jns jg stos jl xchg sub and je push pushl lea jmp lea call jmp push pushl popl pushf pushf pushl ret push adc sub xchg push (bad) mov fs jno or mov loop mov dec shrl or sbb jmp sete mov aad mov jl sub stos push outsl push and mov gs lods xchg loop (bad) or mov fdivl jl test xchg andb dec fldenv leave adc adc adc or xchg xchg orb pop nop pop dec out and stc jmp daa sub jp dec call jnp outsb fs pop je and mov lret push cmp sbb add cmp or inc sub aad mov xchg add jae cltd mov in xor stos xor mov adc fwait aam sbbb out and call jmp mov adc sub adc out cmp xchg iret call sbb stos mov loop xchg pop cld jge repz mov cwtl pop les mov or jmp shlb add mov int3 (bad) xlat scas add repnz xchg sbb test or mov mov scas or mov cld mov sub adc xor imul out adc jmp imul je mov mov push xor in xchg in stc xchg leave les adc sub (bad) in shl pop call std aam inc xchg sbb (bad) fcomip in adc lods mov and adc jmp subb in xchg out dec stc mov rcll lds or xchg jecxz int int xor out call sub push insb nop jae arpl push dec inc out roll shlb fmul xor xorl add notb xchg out push xchg movsl adc scas and add pop cli add and push out test mov mov jo xchg out stc or (bad) inc jl nop shr cs push std flds xchg subl push pop pop push adc inc and mov pushf fwait push adc jb sbb xchg xchg lret pusha xchg mov jmp add xchg mov and test adc inc adc lods cmp xorb mov xchg or and popa mov add lods mov pop lret mov pop push (bad) cwtl push add mov nop sbb xor adcl out mov cmp mov and loop outsb push mov xchg mov mov pop xchg inc mov sub xchg dec mov nop jle bound inc fstl cltd dec pop push xchg repnz cmpl sti inc xchg js xorb or repz push xor push adc mov xchg ret push ret xchg sub pop gs push pop (bad) rorl leave adc dec sub dec mov xor add lret sbb lcall pop xor lret add add out lret or add jge xor or cli mov adc js sbb cltd dec in out addb pop add add add out or aas addl loop push and repnz out sbb sahf lcall cmc or xchg push repz sub sub mov outsb adc sbb or int3 sbb fistp cmc in or or aam push xlat inc push mov jle movsb ljmp sbb out xchg mov and dec das aas xchg aam (bad) or shlb sbbl cmp cmpsb mov cltd into icebp lret jns inc lret cmp xlat xlat inc push pop push loopne mov rclb (bad) or (bad) hlt mov mov mov outsb sbb (bad) or (bad) or inc xchg shrl pop mov adc xchg or mov in push jmp fstpt pop sbb sbb je and test stos xchg fwait jbe mov adc cmpsb add xchg push dec out adc sbb adc std gs aam sub lret inc mov cmp int pop aam pop movsl pop push jle push xor adc jo adc (bad) adc cli mov xchg pushf jecxz icebp ret push push les xchg pop push cltd push push xchg pop xor sbbl pop pop sbbb mov not aas cltd jno pop add adc cmp sbb push (bad) jge sbb cmp cmp mov mov lret dec clc push add jbe popf std popf adc or add cmp adc xchg aam dec fwait cmc pop loopne mov add push cmp xlat xchg sti add adc sbb (bad) mov sbb inc (bad) push pop adc add fs fdivrp add aas xlat lahf push pop adc repnz jl jo stc adc pop adc sbb sbb adc add fsts push or popf add (bad) lcall fildl sbb adc push sbb add mov popa push out push push xchg sbbl or inc add xchg hlt fwait loop sbb (bad) push or xchg adc pushf ficom add adc mov xor loop nop or mov pop add addl inc adc inc sbb sbb push push or mov xor sti (bad) repnz out xchg bnd cmc nop adc add mov xchg sbbl sbb xchg repnz fwait sbb loop xchg push cs rcrb sub sti xchg dec adc mov xchg mov cwtl pop mov test scas dec test rolb jle pop int andb movsb mov nop jge lock inc and or sbb add mov and enter pop iret iret mov lods aad and int3 pop xchg inc push stos jg xlat cmp xor inc add xchg out loop cmp mov mov sbb ret push dec loop out push mov rcl out or xchg js ja repnz cmc das iret cmpsl pmuludq pop popa sub push movsl movsb pop pop clc jmp stc cltd repz mov ret enter mov mov (bad) sti out aaa push (bad) or daa dec jb je,pn fstpl in adc inc enter dec add js mov push sbb or xor jge xor dec call dec adcb lock lea aad jnp pop add xchg out mov pop lock clc mov xor mov out push and jno adcl mov sbb orl (bad) and xchg sub movsb cmc inc dec rcrl repnz pop fldcw or xchg ds xchg add cmp pop sbb das push outsb out sub aaa add ja push nop out sbb in cmp push add push pop jbe (bad) ds xor insl (bad) ret dec rorb push adc or add and int3 push or fwait mov cmp and mov inc iret xchg add adc out xchg sbb shlb icebp lahf add ret inc jae repz fcompl cmp es pop xchg cmp aas mov addl or xchg adc or pop push out xchg or pop pop xchg xor sub sub imul sub (bad) scas pop gs push mov pop lea xor in dec repz add aam outsl js out push aad push or dec jnp add xchg out shrl inc adc lahf out int3 sar rolb movb push mov cmp adc pop adcl or jne gs bnd lea ds arpl out push fnsave mov dec and and call fwait jp outsb push scas cltd mov int3 and out loope mov add xchg lret add adc jg push cmp ljmp push popa int3 xchg clc lret jae sub mov adc dec jns in xchg or test inc stos xor adc xchg adc mov ja jl inc xor xchg xlat pop xor fcomps jecxz movsl mov adc cmpb sbb pop sub jnp maskmovq notl push (bad) jmp fwait xchg stc dec xor enter cmp push dec lods xor push pop mov pop xchg pop push loop xchg (bad) aas cmp aam mov addr16 push add jae push pop push (bad) jbe push in cmp push push js insl add cmp xchg orl loope int3 or inc push or mov add btr daa push inc jp and pop sbbb mov pop mov adc inc dec pop mov in add xor push hlt lret pop sbbl mov test xor (bad) push faddl movsl shlb leave mov and leave stc loop dec imul sbbb add scas pop inc mov push repnz (bad) push mov lods pop loop fildl fwait es dec cli xchg mov push stc jnp add push int3 adc in push fild sbb leave mov xor cmp ret fdiv std test loop or repnz adcl mov sub cmp stos dec (bad) (bad) (bad) imull in mov xchg int3 push and and mov inc je cld fsts pusha adc popa mov xchg popa cmp (bad) mov jno mov stc rclb sti adc repz pop dec xlat js int3 lret lcall mov icebp stos cld adc jecxz stos lods scas and push pop cmpsl xchg jp xchg adc xchg xor push ds inc mov loop inc xchg rcrl or dec mov or dec ljmp push int mov xchg scas andl in cmp gs lret je leave cli data16 adc loop sti and adc xlat out inc mov or setp cmp adc inc or rcll mov ljmp xchg iret push mov out mov cwtl ljmp lret jle pop popa xchg jl jae cmp out jge or jle pop mov and dec pop inc imul mov add dec sub imul mov add inc jp iret shlb sbb pop xlat cli sbb (bad) sbb push arpl jl scas test inc adcl je aas jb jecxz lea insb adc fs arpl jb sbb add sti outsb push jp or push cmp add or xchg pop and push (bad) gs imul mov push push dec add add out mov test fwait or lret loope sbb repz enter insb and out mov and xor xlat rclb stc sub or xlat shrb hlt nop int xchg xchg subl push push sbb or add jnp ja push loopne movsb sub inc sub mov mov je loopne and pop pop pop mov fs fidiv mov loop clc dec pop xchg push stos cs add mov dec mov jbe (bad) lcall and jo adc pop jecxz repnz imull cmp lahf xor xchg cmp add lret mov in jecxz int xlat (bad) push xchg aas jnp cli movsb jns (bad) adc cmc mov int3 inc cmp in sub int3 aas decb sbb lods xchg outsb cmpsl loop jmp mov mov dec xor adc and dec sbb or xor pop push inc dec push or int3 xchg mov arpl stc dec push adc iret adc scas adc dec jb dec mov push insb and and sub add push cmp push je test and pop scas cltd mov sbb in inc push dec out cmp push inc insb sbb cmp fldenv ret pop xchg mov xor and nop dec mov cltd dec jl out mov arpl dec shll dec cli test pop add arpl push fs adcb xchg inc sbb je daa insb xor loopne sbb ret ficomp push jns int3 xor xchg push test xchg inc cli push push sbb js pop mov out lods mov or xchg sbb adc out xlat add inc mov popa adc sbb mov out mov and sbb add mov or loop pop xorb repnz push xor and xchg xchg sbb (bad) adc movsl stos and adc fs fcomps loope adc xchg dec mov outsl cltd jge pop aam mov arpl and jp push imul push lds and xchg out out inc xchg adc push add mov test int sbb or into mov gs adc xor or mov enter int3 ljmp add gs rcrl adcl enter push rorl adc js and sbbb (bad) pop push sub jg js (bad) faddl aaa or xchg mov xchg mov fst loopne cmc fs push xchg (bad) popf add add mov push incb dec (bad) cmp sub rcpps sub jmp loopne ret xchg adc (bad) adc pop xor stc adc loope popa stos lcall fcomps js outsl xchg cld adc test mov jmp leave mov xor or popa dec xchg (bad) or sub test add (bad) sub push cmp lahf mov xchg jmp pop popl mov pop (bad) pop adc dec int3 decl cmpsb rsqrtps test xchg mov inc xlat push pop iret lds bound jmp cmpsl notb sbbl insl pop addr16 out or fs (bad) pop popf inc (bad) mov push (bad) mov add sub in xor push mov pop fldcw pop pop mov dec in loopne push and repz daa push mov mov xor sahf fmull add in inc icebp cmp addr16 imul sub ffree push add cs je sbb adcl xor inc sub push push mov sbb xor aas push popa js loop pop cmp (bad) xchg addr16 pusha add xor jno lods jmp xor addb add adc sbb lock dec fldenv or inc outsl test into cmpsb enter sahf mov mov mov ficom cmpsl cmp mov dec roll lds dec cs pop fs in cmpsb (bad) cmp inc int mov push dec inc (bad) lock lock lods push push es out js mov mov andl mov jne inc or add sbbb je and fcoms push dec pop (bad) repnz (bad) lahf sub xor mov jecxz mov ret (bad) dec int and inc jle (bad) and sub les sbb sqrtps popf and cltd jns into adc inc or fwait adc adc lods jbe ficomp out push stos js pop dec pop les arpl sbb xor lods lret cmpsb adc dec stos push scas scas cmpl (bad) push jmp adc repnz mov test inc loopne inc xorl loope,pt and push mov mov ljmp cmp mov sbb sbb outsl stc test mov pop das inc sbbb inc mov orl jmp inc adc (bad) sbb xor lea push adc pop inc insb add add out mov mov or sbb pop int shlb or (bad) imulb jmp inc pop mov stc pop or pop push push int3 push xor push test push xchg out notb push mov push test push dec in jno imul insb mov call scas mov xchg out jmp hlt or adc imul in cli xchg add test add jnp outsb pop clc mov mov ret (bad) pop add inc cli mov pusha orl cmc repnz fnop sbb jb lcall mov fistl std repnz cwtl mov mov xchg lret outsb in out pop (bad) lcall mov js dec cmp xchg mov xchg mov repz pushw stc push popf aam cmp (bad) enter adc pop call jns loop,pn or sahf cmp or out ljmp pop push rolb jl mov xor or sub (bad) lcall js shr es sti adc ljmp add or pop and lods or mov jae or lods int3 imul xor outsb xchg mov mov adc cli sti mov rep arpl adc (bad) hlt dec loop push in rcrl ret push iret cmp pop fdivr xor adc icebp insl inc andl push jge sarl inc push or std or xchg mov xor push jl loopne out repz pop mov jae add or and lods push out mov inc cmpl pop (bad) repz push or sub ds incb sbb mov dec xchg xchg or or fcmovnb bnd mov nop mov mov dec push xlat call xlat mov mov sub push cmp test les or loope hlt sahf popa push out mov stc sti push cwtl in push fdivrp test inc outsb daa dec mov mov push mov pop stos aaa push daa pop fildl jmp xchg fnstsw sarb sub adc cmp (bad) or mov xor in movsl xchg mov out addl inc dec push dec stc or xchg mov xchg stos jno cmp (bad) call xchg shrb cltd out bound int3 push dec push adc stc jl fwait mov xor dec xor lret or push sbb pop cltd sbb out inc scas (bad) push inc mov add xor add xchg repz cmp sbb add pop mov add mov in mov or insl jecxz mov mov adc sbb mov movsb outsl ss out fldl lods mov aad adc mov jns jge loop stc add pop xor xchg mov inc in enter rcr repz add decl pop xor or xchg lret pop daa mov adc dec (bad) mov rol mov mov rolb test sbb cmc xchg cwtl es adc pop mov aam dec mov pusha les roll leave xor test pusha inc and lret or lcall mov and mov jno mov fwait insl adc mov adc xchg jne lods daa or sub fs xor push jno mov mov mov in pop jo jns jae dec iret sub mov xor xor or je orb insl or push jae jno enter fwait cmp lret cmp pop popl mov cld jne jne jl stc movsl test fsubrl adc out mov mov adc sub mov xor test jbe add inc and mov out cmovae sub or xchg lahf dec or lret cmp cs jnp loope and inc sahf jne pop popf fcmovnbe rorb xchg cmpsb jge mov add mov jge adc and fcomps mov jb adc or cmc mov enter sbb and pop out insb nop pop add add bound dec xchg pop add test in mov hlt (bad) dec and icebp test in sub adc or pop out adc mov popf jl xchg sub cmp jecxz cmp lcall sbb lahf adc sub mov loopne adc dec mov fs (bad) mov out ja cli in sahf (bad) sbb push dec jns test loop or xchg aaa rclb and push insl mov push loop ret nop fdivs cmp xchg mov aam xor mov xchg cld iret rolb jp lock mov mov adc test xor cmpsb and sbb and cld add or imul mov mov mov sub stos jmp jecxz adc ret jecxz or ret inc popa scas push cld add out mov inc push adc nop push xor test or mov jle xchg aam andl test pop jno lcall cli cmp aam in fstpl data16 push (bad) sub adc or aaa repz mov push or notb or pop sbb insb xorl xor je and cmp ljmp addr16 in repz mov hlt adc cwtl sbb test push out mov icebp or adc sub or fwait push ret push movsl adc mov aaa aam pop mov push push lret leave add lcall adc jbe fldl pushf sub mov sbb push scas (bad) jbe push cmp int mov mov inc push and into dec mov sbb lret scas push sbb adc in pop pop scas jns imul ja push repz mov dec not scas inc insl mov xor mov mov adc jb ds xchg or mov mulb clc pop jnp out mov cmp stc mov mov xchg scas hlt and adc xchg or dec (bad) icebp and inc push add push cmc or inc dec punpcklbw jl (bad) outsb sti mov movsl inc (bad) std test fcompl cli cmp adc in repnz out test ja jge (bad) adc fidivrl xchg rorl enter pop and adc clc jg repz xchg sbb fbld repz je jb cwtl inc pop aaa push icebp dec inc adc lahf incl or int cli lods jp dec mov mov (bad) (bad) mov lret mov out sbb bound mov subl pop loop cld scas adc adc xlat movsb xchg jecxz jg xlat adc jp aaa (bad) dec adc or xor out push fdivr pop mov adc lret rol scas adc repnz or pop repz inc loop xchg or xchg mov jle mov mov loopne sbb add sbb stos iret sbb jp icebp mov and popa adc mov rcll test mov imul push pop in adc outsl dec leave push jae lock adc fldt xchg shlb xchg sub add mov jle mov inc ja (bad) sti jp test adc sbb pusha loope fimull cld xchg jp (bad) jns or and divb (bad) xchg subl xchg xor push sub adc push inc dec xchg adc rcrl repz adc stos inc adc mov add insb sub lods pop iret negl sbb push mov insl jge adc pusha in ficompl movsb xchg rorl pop jns mov das call rcrl cli popa sub lea enter aad lret fldl jb cmpsl fisubl fs add pop xchg rdmsr xchg xor iret jmp or lcall adc or fimull push xchg adc push repz mov adc adc xchg fistl adc sbb cmp orl in push adc mov dec lods icebp or jno pop addr16 lahf ret mov pop adc sub repnz mov xchg sbb sub jo sbb lods pop into jbe cmp mov mov xor insl push call sbbl xchg adc test loope xorb hlt ds or call jle push sub push rorb add inc cmp push adc lods sbb lret mov sti mov movsb or out sub mov sub mov fcoms or (bad) aad adc insb dec loopne std push push jbe add mov cld adc scas mov push push sbb adc ret and das mov mov push inc fs push or inc adc cli cmp into pop in adc sbb ljmp fcoml push sbb lods adc fs jb xchg cmp outsl mov flds (bad) mov jne jno in pop or mov pop xchg lcall sti mov or xor adc out push testb loopne push insl pop and das sbb adc lret jne cmp lcall push test inc rcrb adc dec mov adc mov test sbb xor push fidivrl cmp int3 mov pop pop mov scas jmp leave lods adc stc sti rclb call fcmovnu or das rcrl jle adc add add mov orb cwtl test dec dec sub jle into test ljmp adc mov or std ljmp orb cs (bad) mov outsl and ret xor fisttpl fwait sub mov xchg outsb jo add mov mov pop fisub mov mov add sub in roll push adc sahf jno out pusha out fidivrl sub mov sbb lret mov rcl or cmc pop rorb test loope xor js je push mov pop (bad) sbb nop jno fist adc in lahf popa sti ficoml and mov mov ret mov aad mov pop test jbe int3 popf adc or sub pop inc xchg scas icebp sbb jbe lods cmp xchg dec mov loopne push push cmp adc bnd adc repz sub push in jno xlat jns dec adc adc div mov xchg cmc bound inc insl mov adc adc adc ret fidiv xchg dec inc adc (bad) call cmp mov insl jecxz cmc repz mov sub mov or lret imul mov dec adc inc push xor mov (bad) xor pop fstpl cmp sahf adc rorb and ret jb push pushf pushl ret gs add (bad) fbld ret mov jnp inc jp and jl mov jnp aas and mov jbe cltd push (bad) pop xchg jmp repz add and xchg jg sbb mov mov (bad) or or push xchg (bad) xor add sbbl mov sbb mov ljmp pop aad mov loopne lahf cmpsb xchg mov pusha adc notb fidivl mov nop xchg jae je ret (bad) cmc mov repz add aaa cmp call sbb or adc loop mov nop push or adc lock movsl hlt icebp fadds and and adc sti ret shlb je xchg xlat hlt push addr16 pop in xchg push sar aam ja ljmp fdivs pop inc or mov dec test aas push out inc ficomp (bad) sarb inc xor jp jecxz repnz dec adc int3 dec in fisttp sub jp cltd mov add int3 dec minps dec xchg or sti sub xor cmc pusha mov pop adc (bad) jle aas out cmpsl lea jb pushf pushl ret pushf call push call call lea jne call movl pushf movl push lea jmp sbb or inc xor push cmp aad jmp mov mov adc repnz ret leave enter std push cli mov add inc cltd insl and jo push jge stc xchg push (bad) xor test sub lret mov add daa dec xchg aam mov cmp mov jecxz push jo adc or sbb les xor hlt icebp jnp ret inc aad sbb imul orl fs divb mov pop pop out imulb inc inc test jge adc push rclb enter and mov adc popf or dec ret cmp je add inc and inc loopne add call loopne leave pop adc in fs push push pop xchg cmc (bad) aad test jmp cli mov mov sti mov jge cmp mov jp inc xor dec (bad) adc in pop mov cmpsl jno outsl dec iret xor mov push in lock lahf xor sub or sub or adc icebp mov cmpsl enter test adc imul mov xchg pop sub cmpsb push leave cli stc jnp dec push stos push and call je and and mov adcl lahf enter push std or outsb (bad) mov scas jb adc xchg les in bound nop pop insb sbb mov sbb lret cmp leave cli stc lock push popa cltd call mov pop or push aas sbb and ret mov cmp (bad) loopne pop jbe les out xchg clc das fstl push jg pusha les loopne push in adc cmp pop repz jmp lea jne aas cwtl sub aam bswap sbb movzbw mov cmp or add pushf pusha pushl mov cmc jmp add add inc add add xor and daa xor xor dec xor jp mov scas xor xor push xor xor xor jb mov xor xor xor xor xor xor xor xor dec xor xor xor or jl xorl xor xor xor xor xor xorl ss fnstenv or cmp inc aaa inc aaa dec aaa pop aaa push aaa adc aaa cmp dec cmp cmp jns mov xchg cmp cmp cmp mov mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp push cmp cmp jge (bad) cmp cmp cmp cmp cmp cmp cmp jp mov mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp ss pop cmp (bad) cmp out cmp into and cld aas add add add insb add add sbb aaa xor xor xor xor xor xor pop xor jno movsl xor xor xor xor xor xor xor insb xor xchg xor xor xor inc xor fidivl add pusha aaa outsl aaa mov lahf cmp cmp popf aas add add faddl add cmc xor xor xor xor xor xor xor xor xor xor xor insb xor jg mov xor xor xor xor xor mov clc cmp dec aaa (bad) aaa mov int fdivs loop repz (bad) aaa mov cmp cmp cmp cmp cmp sahf cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp dec cmp jne xchg cmp scas cmp lret cmp jmp repz or sbb and sub xor push imul aad (bad) ds aas cmp pop aas fnstcw cld aas add add add add push xor xor (bad) xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor pop xor xor jae js xorb xor cmpsb xor xor xor xor xor xor push xor xor xor xor xor insb xor scas xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor mov lret xor out divl xor jnp xorb ss ss xlat ss inc aaa dec aaa push aaa fnsave in aaa cli aaa add push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp movsl ds or pop aas xor dec aas mov mov add add xor push xor xor xor cmp jns cwtl ss aaa or cmp cmp cmp cmp cmp cmp cmp cmp xchg nop cmp cmp cmp cmp cmp cmp cmp cmp cmp sub jb mov int3 cmp dec ds aas nop aas scas aas add add add add xor inc xor jo js xorb xor xor xor xor xor xor xor pop xor mov xor or xor xor xor xor xor in aaa or adc cmp cmp cmp cmp cmp and dec cmp lea xchg cmp cmp mov cli cmp cmp or or jb jge cwtl cmp cmp sub cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp adc ds jge xchg ds or xor dec aas gs xchg aas mov aas add add add add push xor and inc xor xor scas xor xor xor xor adc pop xor xor xor xor xor xor lret ss enter in cmp cmp cmp pop cmp cmp cmp cmp cmp cmp cmp cmp cmp and es cmp aas push aas jo cmpsb aas mov add add cmpsl xor xor xor xor xor mov aam pop xor mov mov xor xor xor xor xor xor xor xor ret xor divb xor ss outsb ss test adc inc aaa dec aaa push jo jne jnp xorl lahf aaa movsl aaa stos aaa fdivs cmp dec cmp pop cmp cmp cmp cmp inc cmp cmp cmp cmp cmp cmp out cmp cmp mov cmp cmp cmp cmp cmp cmp nop add pop add add xor xor xor pushf xor xor cmp cmp movsb cmp les int3 cmp cmp cmp cmp cmp cmp cmp or adc dec cmp cmp cmp cmp cmp mov add pusha aas fs push aas je js jl cmpb aas mov mov nop aas xchg aas cwtl aas pushf aas mov aas lods aas mov mov mov aas les enter sarb aam fdivrs fdivrl loopne in call aas hlt aas clc aas cld aas add add add add or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc xor xor xor xor xor xor xor xor xor nop xor mov xor mov xor xor xor xor xor xor xor xor xor add rolb js add mov mov xor xor xor xor xor sbb and xor cmp dec xor xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor dec xor test enter or sub dec ss ss nop ss (bad) add add add sub add add sbb (bad) xor xor xor dec xor push xor pop xor xor insb xor js sbb sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp dec cmp push cmp mov cwtl cmp movsb cmp mov cmp int3 cmp fdivrs in add add or or adc adc sbb sbb and add add and add pop xor xor (bad) cmp cmp cmp add xor add das xor xor push aaa xorb aaa sbb daa cmp cmp cmp fwait aas mov add add add add add xor inc cmp nop add or add arpl add add add inc xor cmp ds add loopne add add ret xor add add add cmp cmp cmp or adc add add add xor ss add add add or add cmp dec xor xor add add iret xor add add add push cmp add add add add jns (bad) mov xor sbb and jl add add add add test add lds test sahf xor xor add adc loopne adc popf aaa and sub in dec cmp add and add mov xor cli ss leave aaa scas cmp cmp addb or add out xor xor nop add adc add jp inc ss cmp cmp cmp lods add xor outsl adc inc jle xor dec pop sub add push cmp cmp notl lcall sarl inc jbe adc mov (bad) and mov jecxz cmpsl adc xchg jecxz sti icebp lods inc hlt jns mov (bad) and or incl xchg in addr16 dec ds jp xor pop fwait xchg push jmp jae inc enter sub loope mov arpl push and into std and mov pop faddp xor arpl das or out js inc add (bad) faddl xchg dec ret jg inc fbld mov and xchg dec inc lods das mov popa test push mov stos and cld xlat adc out imul lret xchg rcrb (bad) jne (bad) jmp ret jmp add pusha lea jmp pushf lods push test add clc cmc stc ror jmp bswap mov pop push setp mov call sub adc data16 jnp fistpl push xchg xor out shrl mov sar pushf mov fcomps enter and jl dec pop push mov orl xchg jmp mov dec mov adc fistp lock cmc js sarl in adc loope sbb call ja lea pusha jmp inc stos les imul xor scas jo hlt fistl aam dec mov lea mov rcrl in mov sbb sub jecxz test dec mov dec daa fwait mov cmpb jae pop pop (bad) jno sbb xchg xor pushf push adc js sti in int3 mov inc sbb cmp (bad) mov testl cmp xor and push (bad) sub mov pop jnp push push gs push adc push pushf and inc (bad) cmp testb fwait test pop push lret imul (bad) cld subb aam stos mov add xchg mov lret add sar (bad) or xor fwait mov roll mov popw fs das cmp dec adc lahf push popa push jae adc jae mov pop jle stos imul pop xor cmc cld xchg es adc ret out (bad) pop mov test not or push out cli lea mov inc mov jae sbb pusha out mov cmp repz jne cmp int shll dec cmpsl popa jge xchg cmp (bad) cmc popa mov jmp cs and xchg scas shlb (bad) (bad) in stc or sub (bad) icebp out mov xor inc ss popa mov rolb add pop lret mov jp jge enter pushf and adc mov enter in sub hlt cs adcl inc xchg xor add in xchg negb jg sub inc lcall fs loope mov mov cmp dec gs lcall inc inc sub xchg and mov ss mov repz push xchg out and ljmp outsb mov lods cs hlt adc out aaa jmp push outsb dec data16 mov in fisttpll sahf mov adc dec clc aam test ret stos shl inc mov (bad) pusha movsl xchg add aam addb sub enter push and and rsm xor push jae test ja jo fisubrl std mov push inc test fldl fildll stc (bad) stos out je inc push dec into in aad adc cld ffree fstl movsb push dec inc push iret into sti and (bad) (bad) jge daa xlat or jne ldmxcsr jl icebp mov cmc sub inc or push sub and cmp out jmp jle,pt jg sub jbe add decb movntq shlb and push lar imul xlat inc popa inc pop ljmp fildl and je and daa jne inc sbb insb enter inc out shrb (bad) adc addr16 add adc not mov jmp mov test test test pusha pushf push call jmp lea jne pusha pushl mov cmc pusha pushf add stc cmc movzwl mov mov push test pushf mov add stc call seta seto setge mov lods jmp push pushl jmp cmc call bt mov ror xchg bsf mov setl sbb cmc rcl mov inc sbb pushf shld mov setg mov bt shr mov add rcl inc sub lea jmp adc adc jne inc cmp add xchg in leave popf push aam sar insl dec dec sbb test cltd cmp cwtl aad cld jo cmp xchg inc dec or sbb pop mov insl push pusha sub push pop testl push jl dec xor out test mov push mov loope sbb (bad) and cmpsb xchg addr16 inc adc xchg ret push push ss icebp in je pusha stc or dec loope stos mov sub cmp or repz imul enter ds sub js outsl dec (bad) adc push push ja and insl xchg insl lds mov iret (bad) sti pop test das xchg pusha clc fild or dec ljmp sbb or enter ja scas add ja jo imul sub add fcomip mov lahf incl ret add (bad) push inc dec jmp and js push mov insb bound mov mov leave inc mov out (bad) aas xlat daa xchg dec aaa aam adc xchg push mov lahf pop icebp aam sbb adc sub cli aad mov mov mov jns xlat gs sbb stos lcall je fs xchg out std ret ljmp sbb adc repnz out addl cmpsb outsb and movsl jg adc mov mov jnp hlt inc outsl in jl aas mov clc outsl stos stc fs pop in iret dec inc test adc arpl sub in dec ja inc pop repnz (bad) faddl cld mov add adc pushf jecxz pop cmovge push push jbe call xchg mov js test add decb xchg cli sbb dec push out pop push adc test cmp add mov cmp sbb pop mov mov xchg aaa imul stos jle cmpsb fidivl nop pop pop inc pop orl xchg mov aam fistpl lock or ljmp sbb loop icebp dec movsb inc jns xor cltd sbb roll dec adc xchg outsl xchg fist test jmp xchg rcll jo inc cwtl xor subl insl int je cmp imul and je (bad) jno jg mov movl in or jge or and sbb xchg ljmp rcll dec jns xchg lea add jno inc xor cmp dec push dec and jb shrb cmpl push mov xchg movsl sbb cmp int3 sbb add mov les push stos push aam das jge and push clc repnz pushf call add dec outsl arpl inc jb add (bad) (bad) not rol lea test pushf jmp pushf pushl lea jbe inc sub and ror rol mov bts xor mov test lea add add jmp mov adc dec js sbb jl arpl push pushf rclb mov addr16 test xchg mov scas (bad) mov adc cmc (bad) aad lods jp push adc jno sub outsl mov and push int pushf pop inc xchg imul out dec add jge addr16 xchg cli lret mov or push int int cmp inc or shll xchg cmc xor dec cmp adc test mov mov fdivl cmp jecxz inc mov mov gs or das pop pop mov jo shrb jmp in insb jnp out (bad) (bad) mov jg pop xlat xchg pop ret sahf ficomp push push add push pop call (bad) sti xchg mov pop push pushf pop mov mov inc pop mov outsb push mov cmp lret rolb inc movsl dec xor mov mov (bad) mov in jg ljmp ja inc xor and adc cli add mov into ret and mov inc std jle add outsb pushw fwait jbe dec std inc pushf dec (bad) aad xor push or ret sbb jne inc dec pusha aad push out insb popa adc mov in sub in divl pop xchg mov and mov pop lock sub outsl ds cmp push jl jg cwtl xchg dec nop lahf push clc or fisubrl dec push jmp bt bt sub bt stc mov jmp pushl movl pushl movb pushf mov movb pushl ret inc mov inc bound push popf (bad) xor xchg push daa jle inc xchg pop xchg sub mov or xchg and stc mov mov jo xchg push imul jae addr16 fdivrs test mov xchg mov fistl icebp or xor pop nop pop mov xor cs pop cmp add inc gs outsl fs gs imul add std call push push push mov bnd fistpl adc jl sub jge cmp testl inc xchg leave add mov xor mov icebp enter fucom and or pop push sub loopne xlat xchg push std sub mov loope mov (bad) mov loopne inc je pop stc pusha mov add inc out int3 es out push adc (bad) test jl inc arpl xor xchg sbb cmp je lret cli out out mov mov insb shrl xchg shl dec jbe dec jmp cmp mov xor gs jno mov clc cli nop pop and insb scas add push negb sbb ss push (bad) adc outsb cmp stos jae xlat dec jo and sub mov decb imul sub add sahf dec movsl xchg data16 mov and pop pop push in push mov movsl sbb pushf call inc bt bt xor stc clc bt pushw popfw call inc rorb jge inc test hlt in and xchg leave loop mov sub insl or cmp pop jbe xchg pop mov insl call inc js lret pop pop movsl jbe push mov mov outsb cmc aas scas (bad) imul mov sub insl (bad) fisub fcmovnu repnz call mov lea jbe bswap (bad) repz adc mov rol add not not mov xor add bsr jmp push lea je movsbw movzbw lea movzbw pushf movzwl not jmp bt and pushf cmc movw pushf add add clc cmp cmc cmp add js pusha pusha dec pushf lea jns jne bt mov mov jmp imul call push mov pushf sub pusha cmc cmc jmp push lea je and seta xchg btr sub inc das lea not mov test mov ror cmc pushf shr sub bsr pusha stc mov test or lea jl push pushf lea je neg push add rcr cmc sar add sub or pop shr shl mov btr movzbw sar add bswap mov shrd add shl mov test test clc clc shr cmp cmp push mov push lea je jmp mov adc insb mov enter subl or mov xchg popa cs mov mov add lcall pop imul pop imul lret pop out inc arpl cmp push fcoms adc push jge pop sahf dec aas push sbb cmp test mov mov mov (bad) mov cmp imul (bad) mov mov stc adc in xchg xor (bad) out push and loop push push ds jg inc in pushf xor (bad) mov dec bound jns and adc cmp (bad) aaa mov adc add sbb mov call scas sti insl push sbb mov scas inc cmp out mov add mov dec sub movsl dec lds xchg sub mov test popf mov jge or pop and rcrl xchg xor jae mov movsb xchg sbb push and mov popa pop addr16 cmpl push subl xchg cli push dec pop iret sub mov (bad) loope dec xor lret sbb out sub sbb fwait lods or aad nopl (bad) sarl adc push jnp adc dec inc pop stc loopne enter fmuls jo lock loop xchg andl lea (bad) aad or cltd cmp push xor ss or push aad add test stc dec mov insl repnz jns inc mov and insb ret sbb mov in sub int3 aaa hlt int3 or loope and cmpsb fcmove fnstenv movsb ss xchg scas into add in push mov xchg in lds call sub mov movsb mov out call icebp shl push jecxz xchg leave add fildll xchg das jbe mov lret mov add jle fs fidivl pop xchg dec pop dec leave icebp pusha adc inc add sub mov xchg push imul cltd iret add adc dec adc fcoml adc test cmpsl pop cld adc jne mov movb not movb movw jmp imul ret call sub insl inc push gs pop lret inc scas arpl mov js shll mov adc xor (bad) xchg int mov aaa inc and xor hlt in (bad) inc mov mov jmp mov movsb mov repz (bad) scas lods fs rcl or test sti inc add sub pushf xor andl out push jae (bad) cmpsl xchg xchg pop hlt push pop xor add and and test mov in enter insb xor xlat sbb bswap jmp pushf lea ja push stc imul pusha bt stc cmp add pushf lea jmp movl jmp lea jae pushf (bad) icebp or ret bsf mov movb mov push mov pushl mov test sub stc call test jmp movl pushf push movb lea jmp repnz xchg jnp inc arpl pop jbe inc orl cmpsl dec dec and mov jae push cmp fnstenv pop cmp push and xor mov xor push test add mov add dec sbb xchg mov jo push add popa jb mov lea ja push imul cmc add movb mov lea jmp jmp test sbb shr mov cmp clc repnz mov pushl pushf mov lea jne pusha movb not jmp call mov lea jb cmc stc test cmp cmp call jmp movb jmp pusha pushf jmp movl pusha movb pushf mov movb pushl pushl ret movsbl lea mov movzbl mov mov lea pop not mov push movw mov push pushl ret jp and mov sti nop push int3 repz and add add shl jbe cmc or daa lea je and xor adc ret pop enter test and lret xchg jecxz xchg pop out push xchg inc cmp add adc and sub jecxz nop movsl out xchg or loop mov cmp sub std sbb dec nop lods sti stc (bad) fs icebp push push fsts adc mov push test and bound sbb adc fs mov sbb lds fincstp mov cmc inc push jbe and lcall jb push or sub mov inc and mov fs jne cmp mov sub adcl bound js sbb into orl (bad) sub sub jge sub shrl jo mulb (bad) pop lods mov jne pushf fwait popl fs jne push jne jne mov mov loop or jae or xor jnp mov cmp sub (bad) sbb addb and icebp push inc and loop or mov mov fdivr adc xchg add mov and jp push jecxz sarl mov jmp push cmc out push xor das dec sub movsb test jmp lret dec cmp int3 pushf in adcl jne dec gs popa je,pn int3 or adc scas or xor out ror das cld xchg jae push xor dec lea jno pop sbb pop bound or call and shlb and or iret aam popw inc dec les xchg leave lret mov iret jecxz mov mov add adc dec jae xchg fs or test sbb push iret scas jne xor xchg or pop xchg jg xor xchg sub mov sbb push imul dec dec mov out adc bound cmp (bad) pop out inc roll adc in add mov mov movsb sbb jecxz arpl adc xor stc pop xor loopne adc xor xor lret mov nop aam (bad) sub (bad) xor (bad) xor pop sahf mov push sub cli and jbe jbe (bad) iret mov leave or sbb mov push sub xor mov jecxz jns push ss mov pop jle push jns mov idiv fnsave cmp (bad) xor popf mov pop mov xchg jle push ret mov std clc daa rorl arpl lahf adc push push popf mov jmp push or xchg add gs bound jge jle xchg jne clc mov fsts daa lcall jb push xchg ljmp pop pop push sti push sbb mov sbb ja je jle pop adc fsubrs (bad) and cli movsl shr xchg push add dec repnz push sbb jo daa pop scas (bad) xchg cmp dec pop (bad) pop lret arpl mov dec jmp aaa aaa sbb or or sbb mov movsl add and xchg mov jne or adc push divb or rcrb lods gs inc scas xchg sub xor add sbb dec jbe pop add cwtl and xchg fdiv je push ss jae cwtl leave loop mov aam mov pop lock imul pop push cs xchg pop data16 mov xchg sub and cmpb arpl (bad) sub jle push push ss jl mov inc push repnz subl cli lahf lock xor ret add pushf cmp xor mov addl fisttpll (bad) xchg xchg repz aas xchg adc out push sbb psubd mov adcl int nop lods ljmp inc xchg push jae lea add ljmp rcrl xchg pop add lcall adc lahf stc rcll fsts loope pop mov jbe jno stos rcr popf xchg stos repz out xlat popa jno push test in stos rcll int jl popf mov pushf js sbb lret insb pop dec xchg aad stos lret cltd push add xorl pusha pop jae push sbb sti jae insl sub je scas sub rep pop push jae aam jle and (bad) pusha xchg pop xchg sbb stos dec pop xchg sbb inc xchg loop ja push mov jnp sub lods push mov js mov ficoml pop mov add out push movsl xor lea mov jge jbe xor jp fistp fadds pop imul add add pop sbb sub aam fwait rcll cwtl or inc push add rcrl cmp xor push mov add push push cs aas mul pop jne and push (bad) xor mov les add sbb pop mov xlat sbb add push hlt jbe inc add jle fnstenv inc repz mov pop mov fcomip pop fnstsw push das rorl lock jecxz push xchg sbb dec in repz xchg add mov mov add add rcr sub push mov (bad) jmp and xchg mov jne (bad) cmp mov mov mov pop push push push lock xor (bad) dec sub jb cwtl sbbb test push dec add xlat fs (bad) xor icebp mov fs in xor negl lahf out push xor (bad) mov jnp add pop push clc push stc sbb push mov push dec pop xchg pop rcrl dec xchg push jo ds push jl push mov sbb push nop stos std loope sahf pop jo (bad) mov pop adc xor out inc fisttpl jbe jecxz pop push repz loop jae jecxz dec bound dec fwait rcl jb adc pop jbe adc add (bad) add cltd ret divl xchg push mov push inc andb (bad) lcall dec adc xchg adc fs add jno cltd jno push pop sbb or fwait shlb mov xor and mov out jb dec ss test mov jl negl idiv je push cwtl lahf adc pop sbb xchg push adcb fwait mov clc dec push pop lahf lahf dec add mov cld fwait add ret push push xorl hlt push inc or dec pop lcall mov adcl push clc bound xchg hlt jl pop popf fimull movb mov lea xor mov mov mov xchg adc mov or sbb jb jo jl loope jl xor adc aas push loopne (bad) pop testl pop jb cmpsb add mov xchg adc fsubs push cmp mov inc adc shl lds jmp nop xor sbbb xchg lock adc mov xchg lock push jnp xchg xor pusha inc sub pushf mov xor xlat cmpsb cli xchg jle (bad) rcrl sahf jne pop pop or add hlt les inc xor xor mov cmp dec dec or stos repz pop in add sbb push push je movsb ss pop xchg cmp inc push lahf jecxz (bad) xor (bad) dec pop push sbb sar pop xor push pop mov adc xchg les pop mov or mov inc jl inc add (bad) fs xchg sub insb leave xchg sub push arpl and or jge adc and sub cmp push jb and mov outsl push xor lods mov xchg push push mov jge pop sub inc xlat (bad) cmp pushf jle pop jnp popf stc rcrb and push rcr inc dec shrl andnps jecxz (bad) mov stos andl rcll smsw addl test inc scas dec mov push mov xlat inc fwait aad gs jecxz popf not push xor add adc cmc cmpsb (bad) loopne bound or fwait loopne pop (bad) div push loop pop mov push pop push mov mov and ljmp mov pop adc adc in loop loope arpl (bad) jge pop imul push inc or repnz mov push sub jo lahf daa mulb jae mov mov ret insb adc iret xchg mov cmp mov xchg ror jl pop orb adc inc int3 popf jae and xchg xor push and neg adc aam aam or xchg fildll push lock mov sub cmp lret sub inc mov sub lcall sub cmp cltd push sub or sbb rcrl mov or jle add loop xchg add and adc push sub aas or add cs hlt aas cmp lcall sub xor daa push icebp stos xchg jne push and inc pop dec (bad) jae xlat sub push lahf push test xchg sub add (bad) fbstp sbb (bad) icebp inc sub repz sbb stc out dec notb fwait adc cmp xchg mov es lock rorl xor insb push inc xchg pop into pop lds xchg insb sahf inc stc push mov mov out pop in mov clc loop xchg imul cmp rorl mov into push (bad) (bad) jae rorl xchg push into out adc int3 mov jae aad cmp xchg dec adcl push setbe call add push aas xchg cmp dec repz cmp daa dec (bad) testb push or mov push popf and push jo andl sbb xchg push (bad) icebp xchg rol fstl jl pop push jl cwtl out push ss jmp mov cmp pop jge cmp lahf loop cli mov or js and loope pop pop ret adc add clc idiv fdivrs sbb out cld lods jecxz adc pop out push popf mov and jp adc inc xchg mov adc fcomip nop lods pop lods sbb jne add cmp inc lcall add push cmp xchg daa icebp push dec inc pop in push xchg ljmp cmp jb xor mov pop push push push xor aad push lods mov xor mov xor jmp xorb iret shr xchg imul popf xor push arpl mov sbb jbe cltd or adc clc xor xor jno jmp adc xlat push movsl lods aaa (bad) nop roll jmp xchg test dec into sbb stc loop outsl inc js cmp sub jns add pop adc inc cmpsb xor ret xor sbb push push xlat stc add xchg les lds clc push inc jle push pop lret push test pop xchg xchg out mov and sbb fimul cltd jl push add das lcall shl fcoms mov adc bswap loop (bad) (bad) jnp shrl jl dec sbb or jle push inc xchg jmp or xor cmc mov sbb loop sub sub mov rcrb sbb push ds enter push or or ss dec dec sub pop fdivl mov push mov jnp mov bound cld push push add xor xchg roll in and je adc xor stos pop stos add fiadd sbb popf xchg pop lcall daa jmp dec cwtl inc pop fistp cmp add mov mov jge popf repnz push adc push mov and push sub push hlt cli push sahf fwait ljmp mov xorl cmp inc adc sbb sbb sub dec das push je dec xor gs push pop sbb xchg pop mov xchg xchg ja and push jle and add xchg and push stos xor jo int xchg pop and push xchg lods adc xchg sbb and add aam in or xchg les jmp scas ss mov pop xor repnz in lret int cmp mov jp scas sbb (bad) add repz aam mov bound adc pop xor xor shlb aam jle push mov and push faddl ss push add je xchg loop nop stc jecxz add sbb push ror mov ret jp and or adc pop fs or push (bad) mov test mov orl pop mov push xchg jae add test xchg sub push int jnp jle fsub testl add rorl mov adc xchg dec push and pop xchg mov pop lock xchg add xlat jmp mov dec sbb xchg add mov std js pop mov add xor arpl and cltd or add add scas sbbl repz inc aaa hlt data16 mov cld xor sete mov push roll or xchg xchg nop sub mov mov clc adc (bad) (bad) xor mov pop decb cmc jp loop pop cwtl add inc test dec or dec mov dec or out xor push xchg xor aad adc push sbb sub adc xchg xchg in inc xor repz (bad) cmp lcall push add loop dec fs pusha and mov pop xor mov pop sahf pop lods popa (bad) jb pop push or add fwait adc xchg ret out mov jecxz push adc add (bad) jb push movsl flds mov pop xchg cli popf jp push dec fwait jecxz out adc fs adc stos adc cmp jb adc cmpsb out testb pop cmp pop inc xor cmp xchg add push xchg testl xor js mov (bad) or fwait lahf dec aaa fildl fwait mov adc fwait sbb xlat fwait sbb rolb negl and icebp pop sbb rcl xchg mov xchg inc mov or inc push fistpl jl xor aaa mov add addl mov sbbl xor cmp rolb popf lcall xor repnz adc pop es add cld stos loopne mov repnz std lods lock adc shlb mov jle js push and insb lods sbb loope inc adc push or pop mov add xor mov mov and sbb mov xchg out mov jb aam push xor jmp (bad) xor cs xor fldenv popf adc mov push jb sbb lea push outsb push fdivrp cmp sub xor fadds (bad) or push hlt sbb mov mov jmp xchg out push cmp lsl cmp or xchg mov or int inc sbb outsl repnz je jne test jo sbb and movsl fs (bad) popf pushf push push fiadd (bad) add adc push int cli add pop or loop sahf xor je cs and xchg and jecxz mov adcl mov lock fistp mov adc pmaxsw je pop push cmp bound icebp shrl pop (bad) xchg hlt push mov inc xchg push jg or loop cli loopne leave cmovb add mov es icebp shrb addr16 mov push jb hlt xchg mov rcrl jecxz sbb sub cmp jecxz jns cmp shll dec add inc cli adc adc sbb push inc (bad) mov cmpsb fldcw inc inc pop add cmpl (bad) jo in aas mov push xchg shr xchg cmp push (bad) cmp mov (bad) or scas pop sbb popf jno out adc cmp sahf nop clc dec add push sbb adc cmpsl notl push out xor divl jns push enter push cmp jmp sub test cs pop xor mov mov mov ret (bad) and push add stos mov pop or push inc out xchg stc lret out mov icebp adc mov push sub int3 (bad) mov add aas jecxz int sbb adc lcall fs loopne adc sbb dec rcll dec subl rcrl lods or leave inc dec orb add push and jle mov or pop push and (bad) xor xor sub stos jle idiv cmp arpl imul out enter mov ja lods pop loopne sbb add and adc jbe and hlt xchg inc xor add fisubrl pop gs sub add jp jne cmp add sti mov add adc push dec roll lret repz cli fcomip jecxz or (bad) push and fbld add int3 lahf or adc sbb xchg pop inc sti test adc idivb lods loope xchg xchg xacquire fpatan (bad) mov pop xchg fcoml icebp cwtl cs mov lret ss xchg sbb xchg jle and repz outsb cli inc xchg rclb mov adc andl sbb iret adc push push outsb push sbb add xchg and je cs mov sbb or add pop sbbl in data16 xor add push rorl push xchg mov push and push push push adc imul int sbb jnp push cmpsl push and lcall aaa dec arpl add sbb (bad) loope push fisubl lret push std push divb aad dec sub pop ret (bad) repnz jo,pn cmp xchg clc and repnz xor (bad) mov ret mov rolb or pop inc cmp hlt cwtl in js add dec out sti add lahf mov les loope push in out mulb movsb cmp push mov xchg mov mov adc adc dec icebp js mov lcall daa adc mov push jo adc inc rorl (bad) cmc popa mov (bad) bound mov mov mull add js adc add or loopne adc das cli mov push pusha jnp and (bad) push adc push push pop and iret movsl lock arpl mov bound cltd pop cmp inc pop xchg les inc mov (bad) jmp fsubrs jae xor lock jle rcll cmpsb fimull fcmovnbe (bad) cmc (bad) jmp into adc mov loop xchg lret mov adc into out je sbb insb cli sarb pop repnz aaa mov xchg out lahf es mov pop (bad) xor mov (bad) fcmovnbe bound push add sbb adc push fmuls and leave adc mov popf jno imul and sub cmp dec and out and mov andb insl dec mov (bad) add push cmp ret stc test mov xorb push pop in (bad) jl mov popf jecxz arpl sub push xchg mov and and mov loopne in pop loop or mov push data16 pavgw add push shlb sbb xor xchg and xchg jne pop je lock jb mull aaa mov mov or fwait imul pusha (bad) xchg push popa hlt jns jge repnz push dec ficompl xchg mov xchg or or push pop scas jecxz push and cmp push bound jae push adc dec je and sbb (bad) out repz or loop fcmovb xchg and adc pop xchg jecxz fcompl lahf pop jmp jecxz inc pop pushf outsl (bad) test lahf xchg jne roll pop repnz fisttpl fdivl sbb jecxz adc jne inc adcl jne and fs fidivl push testl ret adcl jne inc inc adc jne push add cmp test fwait mov inc cmp test stos je cs out stc add push cmp ja xchg pop dec pop sbb jne jp cmp and and test popa adc xchg pop mov (bad) cwtl divb pushf pop jne mov repnz xchg mov push fbstp sub cwtl jle mov and repz lods divb fstps js inc das gs cmpsb (bad) jne mov xor arpl dec pop xchg mov das popl jne data16 subl xor add test pop or cmpsb sbb sub mov stos pusha mov sub pop sti push test out ss mov xchg mov adc or xlat cmp repnz pop hlt sub loopne stc push nop xor mov aas push jl pop dec dec adc repz mov adc push out (bad) xchg lods push out popf adc into add loop popf push rclb fisubrl sbb push mov adc push pop pushf and or sub push aad pop mov add pop and mov pop lods or loope sbb out xchg mov loop inc sub lock sbb out jl adc push cs (bad) fistpl rcl mov mov push add or cs jae inc sbb jmp push cli jge push cwtl pop mov mov popa popf out xchg and cmp or adc scas fnstenv stc test inc pushf nop dec insb or mov mov pmaxsw outsb xor movsl lods sbb cmc push adc (bad) ss dec fdivrs and repz scas xchg enter mov mov pop or xchg add in push nop xchg out sub dec arpl mov mov jle xor mov dec push lea push int3 loop fsts add mov sbb lea add (bad) xchg mov repnz aad sarb or push xor mov insl sbb daa sahf sahf call repnz cltd dec cmpsb pop ret shlb icebp icebp test or pushf cli mov fcomip xor adc mov stc fsts sub jmp xchg movsb lea test popf adc xor mov test jbe sub (bad) jnp loop push jl push push cmpsl sub push cmp xchg xchg push or lret jl (bad) or scas ljmp adc dec mov pop mov push daa mov aad adc cmp iret sbb sbb push loop xor mov lret sub add mov dec adc sbb lret pop sti xor push pop imul iret bnd inc movsl (bad) repz xor mov (bad) xor adc mov add sbb pushf push and imull mov fwait rolb adc pop (bad) divl and pop arpl out mov sarl xor adc jae pop popa lahf mov mov push xor bound jmp adc pushf inc addb inc imul mov mov dec mov repnz xchg jle xor jne and stos jmp je psrlq notb data16 add xchg push pop mov decb xchg add or fildl add xchg sub pushf ret and sbb pushf xor push add cmp lret add fwait loopne mov int jmp loop repz outsb sbb add sbb aam cmp cmc loop (bad) push jle sbb shrl pop adc add movsb pop pop cmp sub xor arpl sbb sbb push pop enter je bound xlat adc popa aas jmp dec lret or in push mov or jle insb xchg (bad) in movsl pop push xchg (bad) (bad) xchg pop mov lock mov cld mov sub push in out lcall jbe mov out popf rol pop lea pop mov sti femms andb clc shrb andb fisttp sbb rcrl jns cmp cmp rcrl (bad) pop push repnz lods fstpl loope or push push aam pop xchg push dec not loop mov jle mov out popf jg lahf mov lret push push jne mov fcompl add and mov mov scas xor xor mov or mov push cmc xchg push out repz call dec push popf push fldenv push xchg xchg push pop pop inc mov adc aad xchg fwait mov xor outsl xchg xchg xchg mov loope mov xlat repnz pop push cmpsl pop ret test sub sbb test arpl xchg sub push (bad) jnp xchg (bad) (bad) mov loope add mov dec (bad) fistpl add dec cwtl jne cmpsl jecxz js pop mov push add and clc push jno push cmp dec xlat inc pop adc cmpsl in adc add xor adc divl xor movsb icebp aaa xchg add add inc and in inc fs pop mov xor bound xchg movsb lock lret or mov div push xchg sbb inc pop pop sub pushl or cmp leave push mov xchg daa pmulhuw (bad) testl lock add mov daa mov (bad) adc popl push repnz xchg out pop mov fincstp shrb mov rclb lret imul or mov pop push sti mov into cltd push aad sbb push ficom and and mov sbb jns or xor test (bad) or pop leave loop orl adc add adcl or push test mov std test push cmp into and pusha std xchg xor adc repnz xchg and mov xchg insl xchg xor mov pushf sbb movhlps mov push mov xor les fs jae mov mov or lods leave and jl loopne pop and push aas into out int3 add mov sysexit dec sbb cmp cmp insl adc jns mov mov test or repz pop and bsr lods incl mov pop cltd into push add or nop xchg nop pop psubb dec jl lods sarl xchg jae,pn adc notl mov and scas jmp (bad) (bad) imul inc adc inc cmpsb jle test or out test int push (bad) or jmp mov mov (bad) pop aaa mov push sub or cs pop pop adc enter stos cs (bad) int3 xor movsb or outsb xchg xchg mov mov jno xchg lcall lea subl pop pushf sub dec jle fdecstp insl xor loopne mov fld xchg mov mov and xchg repz sub sub or xlat pop jns adc int3 pop sbb mov mov repnz xchg jle sbb pop pop iret fdivrs bound adcl add mov xchg jo negb jge inc (bad) jno sbb fildll imul jae mov fistpll xchg test inc arpl dec lret jg push sbb cwtl sub pushf xchg xchg enter sbb push push sbb loop jle lock mov mov jmp punpckhwd jbe jno xor (bad) mov stc xor mov loopne testb test cltd adcb xorb call or test mov aad xchg loope test sbb or mov dec xchg in sub sbb mov icebp jne inc or adc dec adc jle fs (bad) mov and fdivr aaa jge mov jno sbb je fwait sbb shrb push xchg popf mov xchg ds cmp rorb jmp lret pop mov (bad) push jo fmuls je mov loop xor add pop or out pop shrl pop push xor sbb ss push or adc lock pop lahf or and cmp bound test cltd sbb les adc mov jns aaa push arpl stc inc and pop mov sarb mov cmp cmpsb notb cs push and sub push in cli cs loop enter mov in mov sub leave xlat hlt rolb push xchg pop inc adc int3 call imul push es es push xchg jle and mov mov lahf add stos insl call sbb push mov loop pop mov repz and stc mov icebp mov imul hlt adc (bad) repnz mov push lahf cmp rorb pop cs jnp or xchg popf inc xchg add fwait mov inc nop xchg mov add lahf sti test push cltd stos ret sbb sub mov adc inc xchg xor loop inc xchg or lods rcll pop iret shrl pop call mov xchg xor jecxz test pop dec iret dec repz mov dec and jns sbb cmp mov sti xchg aas xchg std shrl mov xchg (bad) jge push sbb sbb xor mov repnz pop andl aaa push mov push push adc fistl and lahf or test inc loop hlt inc push push push push push cltd out ja xchg sbb push test push jmp mov adc mov addr16 or ljmp dec loopne push and cmc pop push or adc and mov pop sbb stc ljmp (bad) aas mov push sbb pushf push push xor and dec popf mov dec push pop xchg mov fst jno hlt inc cwtl and loop cmp push and and faddl xchg xchg in push jae aaa cs mov js mov aad push pop xor xchg or mov lods loope push adc lahf dec rcll push xchg push aam push mov xchg pop stos loop add mov sub lods std nop add adc push or mulb dec cmp dec popf fadds xchg mov inc pop mov cmp popf mov push lret ljmp dec fist pop push (bad) sbb adc mov push sahf xor stc out es int3 lock inc mov pop lock cli bound (bad) cmp icebp add in gs inc (bad) mov and inc lods push stc fdivl sti dec or pop xchg out repz jecxz push adc push arpl rol test jecxz imul and rorl xchg pop int3 or mov jp mov xchg xchg rclb (bad) push icebp dec lret and fsubr adc sub xlat push jle rcrl sbb testl or (bad) adc repz cmp insl xchg sbb ds fldenv push pushf xchg push xchg lock daa jl xchg adc adc lahf in popa repnz dec jb sub pop xchg push sahf stc out pop in (bad) fildll mov jae jl out xor or mov rdpmc xchg popa fs mov inc lock scas stc pop lahf xchg xchg or insb mov int repz jle jecxz ds pop inc jle out (bad) xor setge sbb popa imul xchg out push push aaa mov adc mov enter xchg in xor mov or dec jnp xchg sub mov ja add and xor mov iret mov sbb leave ds shl ljmp push test dec dec push push mov scas ss adc push rclb and dec aas push dec xchg fnstcw lods mov inc mov mov fldcw jle jns mov jp bound inc addr16 in lds push arpl mov dec lahf lock cltd or dec pop lea dec ss arpl cs adc dec adc adc test mov cs je mov in cld cmp sub fwait pop int3 sbb lahf shrl (bad) push adc out and inc xchg rcr jp sbb nop jmp jns stos mov mov or cmp test stc or les jb push (bad) mov inc mov mov xchg enter and push fcoml xchg out pop (bad) xchg loop and mov popl stc sahf clc sbb adc in mov cs lods clc xor stos jle cli nop mov test stc xchg sbb mov and loope sub sbb push call (bad) clc cs fwait femms or xchg ljmp arpl lock sub (bad) mov test (bad) je clc stos fcmovb sub push inc and pop and lds ja xchg xchg add or les adc sbb cmp negl int3 bnd repnz subl cmc xchg out repz lret sti fnsave int popa push mov test popl je ucomiss adc inc roll push and sbb sub dec pop sub pop sti add push inc jle in repnz and fs ds gs rcll cmp (bad) (bad) (bad) je jo push out popa mov imul and arpl push and inc lcall xor popa out out arpl out ja nopl movsl push cltd sbb js adc in rclb pop add movsl dec xchg fnstenv lock mov inc mov and jae inc fidivl jb push into ljmp mov rcll sbb or in adc rcll pop paddsw inc pop sbb popa loope inc jne mov sub cmpsl mov aaa je sub xor inc stc jbe stos ljmp and xchg ja imul jno jno stos push repz sbb jnp int3 pop or imul icebp adc add push and arpl lock mov repz fs test cmp sbb fdivs mov xchg or cmpsb cli xchg pop adc jno and xchg iret jns xor xor jne jo arpl inc sbb xchg mov data16 mov bound adc into adc hlt sbb mov int xor mov pop adc adc dec in hlt push lock add sbb mov lds xor testl jmp sub pop paddusw arpl pop lods stc xchg push imul sub xor push push push popf idivb jmp sbb stc pop push pop mov inc ja ret hlt sbb out rcll inc sti and inc xor xchg add loop sub out scas jbe xchg js and out pop gs fisub idivl push push xchg ficompl hlt jnp and or xor mov push cmp sti adc add xor add (bad) xchg sbb add adc add movsb push sbbl mov xor cli push mov push cmp push push repz lret add sti xchg sub cmp push inc sahf lods imul push aaa imul adc and cmp es xor ss and push repz std repz loop and mov lret pop push cmp push jecxz gs int3 dec icebp add adc repz lods mov mov mov sub jle jb add in jno and outsl andl out push sub inc push stos add roll rorb push adc pop sarb ds dec in stos adc or mov adc mov stos popa lret fcoml jbe mov xor adc in adc dec fildll push bound outsb ljmp jp (bad) mov cld incb fistl pop adc xchg cltd dec jb fwait add fwait adc jle push push xchg popf ja pushf fdiv in jecxz xchg push cli mov mov adc jp clc pusha cmc (bad) mov mov jmp adc mov repnz nop adc add pop bound loop ss jb mov testl xchg pop stos cmpsb in mov jle xchg and mov mov sub imul and in dec repnz shrl sub pop fwait adc push loopne (bad) lds xchg fimul adc mov hlt pop jl mov hlt jns or rorb and pop out mov jmp sub mov push rorl aam adc sti (bad) sti mov and xchg outsl stos outsl adc xor icebp mov xchg aad xor pop xchg and repz sahf sub lea arpl jbe scas sqrtps loope xor adc sub enter mov inc dec test repz pop fadd sub xor pop xchg fcomp arpl (bad) mov jge and push pop xchg sbb xchg xchg fnop cmp xlat xchg (bad) jbe xchg push xor or or mov cs jmp mov dec jecxz (bad) shl pushf dec pop int3 fsub jl xor les (bad) mov loop dec lret test and cmc cmc mov icebp lret lea pop sbb lods cmp data16 adc mov jo fldenv adc or in mov test in adc pop jl add ficompl js pop stos push repnz pop fldlg2 adc ficomp push fwait jl,pn xchg jecxz adc push pop sbb xchg push ret dec bound mov jecxz pop popf (bad) mov cli ja dec lahf enter mov ljmp xor xchg js cmpsl mov leave sbb push inc pop or ret neg call loop ja pop cs push jno push xchg clc mov jae mov (bad) mov mov rorl icebp icebp dec (bad) dec gs or mov jge pop inc pop xchg jmp or loop fcoml xchg and cmp push sbb lret mov ss hlt inc fstl mov arpl jno sbb push ficoml fdivrs arpl mov xor xchg fstl push movsb loop cli push mov je fwait sbb rorl lret push icebp cmp or scas aaa mov or xor cltd rcll push sbb arpl je pop push mov inc cmp das cld rcrl jle or sahf add out sbb or sbb stc push xchg adc test sahf cmp ja jecxz jns cs negb add loope (bad) lret inc xchg notl jl mov add inc (bad) je xlat push mov rcrb jb pop or add dec addb mov mov mov idivb bound arpl or or sub aad push xchg adc cwtl fsts rclb repz sbb xor pop test cmp sbb jno ret or out popf mov sbb sahf mov push jge pop push test jae lock fmulp pop in test cmpsb jecxz xor cmp in imul fyl2x push fucom push out push loop push and inc mov fwait je aad and sub sti push cmp movsb cli dec rcrl loop pop sbb sbb cmpsb jmp in je xor pop inc pop loope adc mov xor lcall (bad) jle fwait nop fldt sub sti mov jno stc mov icebp test (bad) sub pop std and lahf sub jge out rcl into xorl out out and call popl loope lods jl pop dec adc pop scas jecxz push insl rcll popf jp out ret jl pop push stos inc (bad) ja loope mov adc push inc pushf add xor inc repnz nop int adc xchg xor cmp mov jp mov add cmpsl sub jb jle inc shrb ljmp fistl adc out mov decl sbb in xlat adcb iret push negb insl push mov and inc add xor popa xor mov and xor in dec sahf seto mov and adc imul pop shl imul and pop fbld cmc mov in mov jle ljmp pop rcrb or jno xchg push push jmp int rcr in ja pop ficoml shl int3 pusha mov jle mov icebp mov adc adc mov cmp cmpsl hlt jbe push xor and push add push test (bad) adc add les jnp cmpsb inc jecxz lea mov push jb push fmuls jl scas mov push push pop test insb sbb loopne fcomi in hlt add mov mov aaa das xor test clc ljmp pop bnd popf and xlat sbb and clc jne andl ds jne mov sbb lea lock imul xor add mov adc popf add or jge add mov cmp xchg int mov cs push push jne je jge inc lcall or fucomi sbb adc adc call (bad) jo arpl xor adc inc jno mov in jo adc adc shrb push jecxz aad cmp mov ror cs mov push add jae out insl push fld daa clc repnz lea dec sbb pop out jmp mov popf xor sbb arpl test cs add jecxz or pop lahf mov nop and mov adc sub push jnp jle and ja fidivrl xlat push andl and movsl jecxz stos mov mov xor and imul pop aaa fdiv adc pop nop add mov or pop les call pop xchg ret test dec popa nop mull push push add xchg pop mov hlt or mov ja sub mov movsb add ss add fisttpl (bad) jo sbb fwait ja lods pop lock out pop jne fwait mov xor add and negl jb fstl fcoml mov inc sbb test and mov mov or stos fistpl je sahf (bad) xchg add out xchg mov adc mov push push into mov and faddl stos cmp fadds insb add inc push bound in mov lock adc faddl nop push mov dec mov cmp inc xchg and xchg cld mov pusha xor dec clc inc idivb add sbb jns out test js sub paddusw cmp mov pop sbbb xchg iret jne xor jno je fnsave dec jno push loop sbb xor arpl xor push xor movsl test daa lret popf out adc add jl hlt sbb fist in lods repnz popf mov xor rolb xchg push and insb adc and xchg add lahf jg repnz push pop push fnstsw push fs pop add and cmc sub xor add stc cmp xchg push loop mov push xchg das mov cmp movsl pop (bad) call popf gs push add sbb arpl sbb ret ds push sub adc lods pop dec leave cmc jmp jns (bad) ja in push mov loop (bad) and push fdecstp je push aaa jp add fcmovne mov xor or dec lcall lods in in or jb icebp mov sub cmc or adc xor cs cltd or popa sub add xor jle lods sahf sub jl mov iret cwtl pop (bad) xor stc mov clc fnop repnz xor lock jb adc popf and and popf sub call adc and sbb lcall add xchg jecxz or cmp out pop or dec mov pop cmc lods call xchg mov jmp repz out add test andps xor mov add pop dec xchg out push sbb sub push fwait dec xlat sub outsl fisubrl mov in (bad) and adc sub xor add dec mov mov inc adc xchg rcrl sub std enter xor lret push (bad) insb or and lds cmp fisubrl xor inc add bound (bad) push hlt bound mov xchg mov push pop fadd ss repnz movsl stc push mov inc add cs insb movsl push mov inc and xor push push lods xchg (bad) push test or mov xchg jno stos loop sti push das lock ss cld xor add add aad xorl or nopl cld repz inc push aam mov scas pop pushf mov adc xor lret lret pop fwait insb mov std adc int and xchg adc cltd repz jle int fwait push sub aaa sahf shrl or mov xchg sbb enter (bad) push push inc mov fsub inc mov push rorl lret int je outsb cmpsb sbb add fnstsw adc jge adc ficoml roll dec repz (bad) pop or inc fadds cli inc in loopne nop push mov cwtl and rcrb mov xor xchg inc pop inc sbb in add js xchg bound or add add sbb xchg fs pop or mov icebp subl jmp or dec mov cmpsb lahf push test push stos jns mov arpl pop xchg jl dec rorb cld sbbl add ljmp lods out (bad) loope push mov xchg or mov popf loop mov loope popf loop mov loope popf loop mov arpl pop or inc outsb fistl repnz xchg adc test inc add int3 jae jb jg cltd mov xchg arpl hlt cli hlt adcl cmc mov sbbb lcall (bad) pop adc mov mov repnz xor mov ja ret pop inc cmp push xchg addb jmp ja out test into test and add xor repnz fwait push sbb xchg and push nop out loope adc loope popf loop mov loope popf loop mov xchg addb repnz mov inc roll add lds dec nop xchg test (bad) mov push je adc in cmpsl jne icebp pushf out push jne mov in jmp arpl dec int3 testb jg clc mov inc cli insb jns je fstpl in push push xchg xchg mov lea push pop push adc or cmp (bad) insb test leave jp std int3 push sbb test adc arpl lahf cmp int notl push popf push mov (bad) xor repz or and leave mov fcoml icebp mov fwait addl movsl movsl push repnz rsqrtps cld xchg xchg add aad mov pop mov mov sub cmpsl sub loopne and cmp stos cmp dec ds jp stc sbb nop mov cmp lods mov dec push mov sub repnz dec in data16 into (bad) mov cs adc scas mov (bad) jno jge hlt adc in dec (bad) xor pop lea add dec xor push int jb loope sub sti xchg roll ja test lock loop addl jmp push cmc test xor xchg mov (bad) xchg ss and push cs or sbbb in test add cs or pop movsl stos pusha cmp mov call ljmp jbe push jge out adc fs jle xor (bad) and add inc xchg popf jno fisubl inc pop sbb out leave mov mov test sbb mov sahf sbb andl adc pushf push inc adc out (bad) add dec shr fs sbb test popa adc xchg popf outsb sti popf dec fbld cmp jb mov (bad) adc sarb push xchg pusha inc mov jp pusha divl or sbbb vmovaps dec leave out ja pop lcall outsb movsb aas sub cmp adc repz pop xor test pop lahf xchg mov pop repnz adc outsl sarb push pop adc xor and outsl scas mov pmaxsw lock dec in iret daa arpl pop mov xor bound mov and movsl jb fdivp mov push cmp inc sbb js clc imull sti pop pop stc fisubl ja pop and and xor pop sbb mov addl sub fstl in out lret icebp in xchg outsb sub mov out mov xor mov jne outsl sbb cltd cmp add hlt mov add int das adc sti aad enter add mov xchg pushf push fnstenv mov add data16 loop mov outsb add xchg inc xchg mov jne imull add out xor das mov fistpl mov add xor (bad) test aad inc add popf mov mov orl cld add cmc insl loop cs inc gs sub mov push pop out mov and (bad) bnd mov clc cs pushf data16 add lods sbb xchg push sahf (bad) or xchg mov pop stos (bad) or es lret inc mov sbb rorl fidivl mov push jb mov xchg je adc nop loop stc jo fwait stos cmp cwtl mov sbb int aam mov jp or int inc inc loopne rclb cs jo xchg xchg in cltd add adc jl outsl push adc fldt addl out push psadbw add ljmp scas pop rorl push rorb je push (bad) cli es addl xor mov sub jp (bad) add xor or cli adc adc mov ljmp popa fstpt sbb lcall xchg jle ljmp xlat sub jbe inc imull adc jmp insb data16 xchg mov xor les scas pop (bad) mov cmp inc mov pusha mov pop mov sahf mov jne push lret xchg mov mov nop stos push mov pusha fsincos mov pop (bad) mov bnd sbb mov jno mov mov xchg or jl pop jnp paddsb loopne add push lahf leave jle ljmp cmp negb pop xorl hlt sbb cmp xchg pop jge sub fcompl (bad) aad xor mov sub popf push stos mov inc and xchg cs sti gs mov sahf xor inc dec stos or push in test shrb sar push inc mov xchg das or push mov pusha fildl arpl out cld jnp inc imul push call rcrl push push bound mov cmp outsl mov mov scas cmp nop push jge adc add addl xchg cs fcoml mov (bad) mov inc shlb int3 inc dec inc mov pop pop mov adc mov jl ss movsb push adc ja xchg xor pop lock ja mov adc mov cs fwait nop push clc mov xor push cmp outsb xor adc adc stos xchg adc mov aad xchg cmpsl mov outsb xchg mov mov push adc lea sbb cmp rclb mov inc mov (bad) mov jmp rcrb mul rcrb out sbb cmp xchg sbb loope cwtl adc stos pop adc mov push dec std lock testl lock out clc xchg sbb stc ret sbb mov pop addl xorl adc or icebp mov addl adcb pop adc ret pop xchg or push add test lock movsl ret pop mov xchg or out mov push and xchg add jge xor push pop lock mov cwtl add add lahf mov lock adc push lahf or mov mov xchg ret psllq in addb adc das out adcl xor mull nop push out pop adc ret pop xchg mull add add lahf xchg push jge adc xchg idivl lahf xchg push stc lock fcmovnb pop fwait divl sbb and ret pop sbb mov cltd add lahf cwtl (bad) int adc cmpl jl fadds dec (bad) xor add imul and push push (bad) push add xchg adc ret add jb jbe push adc push add decb cmovle sbb pop ret push fistl xchg add sbb xchg jecxz nop aad sbb pop ret pop nop mov pop aaa push add pop xchg mov or or mov dec mov add fwait adc xchg or push dec rclb inc adc xchg mov or cmp loope dec movsb mov mov mov loopne movsb sbb repz adc pop icebp adc sbb pop je arpl or out or rcr int3 xchg xchg lock adc xchg int call xor aaa adc lock or add sbb (bad) mov lods sub and (bad) lahf add jmp cs into xchg cmp out jp cmc pop push dec jb sbb xor jb sub test pusha push outsb jmp dec adc shll and mov dec stc (bad) pop fcoms repnz mov push fisub (bad) fdivl xor fwait mov popa cmpsb lahf xchg jecxz daa pop jae cli iret psubd sbb adc mov scas inc loope push xchg rcrl xchg jae sarl loop fstl xchg or lcall mov pop shl inc adc hlt or stc icebp xchg testl mov clc out xor sbb adc push ljmp rorl jge or loopne push test test fistpl pop sub push int3 leave pop adc jb adc and stos addr16 cmp outsl mov pop pushf xor pop popf lcall sbb aad xor call les fs sub push dec mov les push lret aaa outsb mov and push mov dec (bad) mov mov cmp (bad) jecxz leave lods mov xchg outsb mov arpl mov fiaddl jecxz cs in xor jmp aaa out push push inc jns outsl hlt stc loop dec xor out popa out lret scas lods adc push pop xor (bad) xchg mov loopne sbb mov test lock sbb or test divl cs fisttpll test out les push mov mov es xchg cs bound out mov cmc pop mov lret adc xor pop test sbb jp xchg push cli pop xchg jecxz arpl lods cli pop aaa fiaddl (bad) xor sbb inc mov mov add nop push stos nop mov fwait inc push rcrl in clc repnz sub outsl sub fisub sahf add xchg clc jb ss xor lret in xchg xor add fwait push pop lahf cmp add sbb mov call icebp jmp push test dec inc jge dec jmp mov and cs repnz jne adc popa sbb push and cmpsl shlb push faddl lods (bad) cld push push test push mov rcll cmpsl push mov lcall add mov lods out setnp test dec and inc push or sub movsb aad movsl lock push xor xor popf addr16 mov sti and push xlat push push (bad) repnz mov push aaa (bad) xor pop (bad) mov mov in sub lret dec cvtps2pd lahf shr xor movsb (bad) clc lcall lods call mov mov (bad) popf mov fstps je pop lods add adc loop pop pop jle pop (bad) push cmp xorl jmp adc ret pusha insb push or shrb inc cwtl xor push bound xchg (bad) or mov in jmp mov push shll (bad) lock xchg mov mov add jl jge pop sbb hlt mov nop ljmp (bad) mov (bad) ss or push xchg imul shlb sbb sbb idivl add adc xor dec mov dec jp stos rcll inc cli jl dec gs add xor mov in xchg mov lea popa mov in or sub (bad) xchg popf xchg cmc popf jg xchg push cmp movsb mov add or xor popf pop cmp push jnp stc sbb cli mov and (bad) lods call dec mov mov mov jb dec ds mov xor jge xor or xchg rcrb push mov jo hlt rorl push ljmp loopne fwait adc lods mov pop inc bound jecxz mov imul repnz dec xchg cli sub ss mov push or or adc out push (bad) imul inc xchg fistl testl lods out jno xchg in sub xor or sub lcall add rcrl xor mov stc push dec fs sub push xchg gs sbb inc xor popa into movsl or xor jecxz push dec je adc xor or test xchg or fs and sub mov jmp bound cmp shrl outsl mov ljmp aad xchg xchg push or notl clc pop aas aam jmp rcll jno lods repnz aaa xchg or mov xchg mov xor sbb ljmp dec sbb pop call push push aaa repnz or popf test (bad) loop mov rorl test push gs push jmp mov adc xchg ljmp adc pop aaa and mov inc push sti loopne inc jae je pop repz cs daa xor mov jb jno lea rclb jp push adc pop sbb or xor pop mov adc pop jle and fyl2xp1 add xor push mov or mov enter mov dec dec cmp popf xor hlt rcrb push movsb mov loop add sub xor xchg imul and adc fwait inc xchg sub loope je jae mov push test sub fbld lahf dec lock adc stc negb stc into jb scas jl dec and push inc (bad) mov ss dec adc dec jne pop rcll ss xor jo (bad) ds mov pop int3 and mov jnp stc push jne ss cmp pop ss adc add mov loope pop insl iret adc push sbb roll arpl divl aas daa mov xchg xchg sub out add add push loop jno pop fisub mov stc (bad) mov push sub or jl push xchg xchg inc sbb xchg icebp jmp je mov mov mov inc xchg je mov enter mov add mov ret jne in jecxz pop jne adc adc rcrl popf push sbb pop aam rolb ret xchg hlt sbb clc adc xchg cmp adc xor adc jae xchg xchg adcb lods test mov sbb ret or xchg xchg push scas or cmpb into (bad) ficom ja (bad) push pop cmp mov adc add loop fbstp test andb movsb ret or stos xchg lds xchg push or popf inc cli lock scas movsl sahf je adcl push xchg (bad) jno call lret mov dec jp mov mov push and xchg cmpl iret test push sub rcll fs in sbbl sbb sti push inc and adc repz pop xor inc push adc (bad) popf (bad) mov push pop sub andl cmp push (bad) sub aaa cltd shrb pop loop lods es rcrl repz int3 test xchg icebp sbb and out xor add inc sbb xchg idiv lahf test add daa in push inc popa adc or cmp in mov cmc sub xor ljmp jg aam cltd inc sti data16 es mov jecxz cmpsb xchg cmp add push cltd inc adc (bad) repz jae pop sub pusha xchg mov xchg mov sbb adc xchg xchg repnz mov repz negl sbb (bad) jp adc les sub cmp jecxz push add leave cmp jge sbb mov inc and mov mov scas mov dec mov in je test lds push mov pusha adc pushf movb mov lea call push call pushf push lea jb clc test cmc bt cmp pusha call dec cmp xor and mov bt pusha clc pushf cmpb jmp out aam adc adc pop dec and mov or arpl mov iret or dec or jecxz popf xor call lcall jnp jg sbb rolb xchg ret sbb push ffreep or pop fwait scas in (bad) mov pop sub gs fistl add inc push pop mov je imul push (bad) scas xor fwait add out push roll addr16 mov xlat xor loop fsubp out movsb subl jmp test (bad) insb mov and fwait inc js (bad) cltd xlat push mov (bad) movsbl and iret push mov mov and or inc stc push pop shll fisubrl cmp outsb loope mov int3 and add push (bad) pop fucomip or add pushf call jmp lea ja xchg pop pusha mov not lea mov lea mov call movb cmpb jmp adc adc adc inc outsb sub es mov push and in jb es jae mov and xor repz movsb sub iret pop mov outsb xor push xchg loopne lcall xor or or or iret ror inc xor (bad) xor xchg xor push enter cmpl mov scas xchg push cmpsl pop inc dec inc add arpl das sub inc popf imul dec push (bad) sysenter jno lods mov cltd jno in inc movsl sbb lcall sub mov fwait hlt mov push mov xchg notb ss daa mov test imul (bad) jbe rol lods push test sub es call movsbw mov jmp lea ja jmp shld movl stc rcr stc (bad) cmc mov pusha cmp pusha cmp pushl jmp lea jbe push mov pusha movb push movb mov push pusha movb lea call pusha mov pusha pushf lea jmp movw lea ja stc jnp push imul pushl pushf add push pushf lea jmp pushf pushf lea jne mov mov inc sub adc rcr inc mov clc sub pusha cmc test pushl popl test test cmp push jmp pushl ror clc clc cmc bt sub call stc sub pushf movb mov pushf lea jmp movw jmp call cwtl cmp clc clc cmp sub pushf mov pushf pushf pushl lea jmp movsbw xor mov jmp jmp mov mov movb mov mov mov lea jmp mov pushl mov jmp mov call pusha jmp call call stc movzbl bswap rcr shl bsf sub setg movsbw mov inc neg shld sete clc neg mov cmc push ror bsr sub rol rcl mov stc pushf pusha cmc add pushf call sub pushf mov mov pushf pushf pusha push lea jmp sub push inc mov mov xor mov push pusha push inc bt ror cmp jmp movb mov pusha pushl mov pushf call jmp mov pusha pushl push pushf lea jmp and pushf cmc test cmp jmp not push pusha pushf mov pusha mov jmp mov pushl popl mov mov mov movb lea jmp xadd aaa bswap mov mov shl call bt clc sub pusha mov push call jmp call call jmp not inc bt stc rol not not mov pusha inc and ror add call pushf mov jmp stc pushf shr call lea jo push pushf mov jmp movw jmp bts ror cmp and mov call mov movb push lea jmp pushf test pusha movw neg call inc pushf clc bt add jmp cmp test not pushf not stc clc sub bt clc bt push and push mov mov push pushf popl push pushl popl push lea jmp mov mov movb pushf jmp (bad) testb aad push pushf sub dec neg sub adc add jmp pushf pusha mov pusha pushf mov movb push movl lea jmp mov push call bswap movsbw xchg lea xchg lea push pop pusha xchg mov repz popl setnp bswap pushl popl not push movl push mov lea dec mov movsbw pushf inc ror call mov mov lea jmp pusha mov jmp jmp jmp pusha movb pushf mov jmp add pusha pushf mov movl call lea mov and test mov call call jmp not clc not cmp jmp jmp jmp mov movb cmp pusha jmp call jmp dec mov stc pushf sub stc pushf clc bt add push lea jp pushf pushf popl push movb pusha pushl popl movl push lea jmp stc clc ror stc sub jae sub test pusha stc xor mov sub jmp call mov call jmp pushl movb mov movl pusha mov pushf mov push mov push pushl ret mov push mov jmp push mov pushf pushl jmp call call cld call jle cmc rol mov stc dec bsf bswap mov jmp movsbw movsbw mov pusha pusha jmp pushf jmp cmp mov cmp add stc clc stc movl mov movb sub call shr aam mov xor stc rcr rcr mov jmp pushl pushf mov push pushf push movb lea jmp lea jnp xchg pusha pushf movl movl pusha mov push push mov pushf pushl ret xadd sar shld mov pushf (bad) icebp mov clc sub cmp test pusha shl pusha mov call mov push mov pusha lea jmp xchg mov cmc shld adc mov cmc clc pusha add pushf call mov jmp mov mov movb pushf jmp mov mov push pusha pushf lea jmp pushf mov mov mov pusha pushl lea jmp rcl pushf pusha mov btc adc not data16 repnz cmp add jmp mov jmp mov push pushf mov pushf mov movl lea jmp pushf call movb jmp sub push call ror add pusha mov mov call cmc movb rol push call mov movw pushf lea jmp clc pushf and pusha movw mov mov lea je pushf pushf jmp mov mov mov movb pushl ret pushl popl push push lea jmp pushf mov jmp pushf neg ror add add call adc mov pushf stc mov call pushf jmp pusha pusha add call test sub jnp add push jmp pushf mov pushf mov push pushf pushl ret pushf pushf pushf popl jmp bswap pusha jmp push push push pusha mov movb pusha lea jmp test cmp call jmp pushf mov mov call push jmp mov pushl pushl jmp pushl popl mov pushl lea jmp sub pushf xor stc cbtw movw cwtl cmc push clc cmc add call jno and clc mov mov setbe dec mov test push pushf sub pushl test cmc shr pusha call call lea jbe mov call mov pushf movw mov push mov jmp not aam mov bt jmp mov pushf movw push pushf lea jmp mov movb lea jmp mov jmp cld pushf rep shl neg pop mov clc rol mov std pushl popf mov movb mov mov lea jmp jmp pushl popl mov lea jmp add jmp push push movb pushf mov lea ja pushf mov pushf push jmp jmp mov pushl push movl lea jmp mov push call data16 repnz mov pusha call xor movzbl bt call shr mov movsbw dec bt mov rcr bt mov cmc test pusha stc add pushf shrd call jmp pushf mov jmp jmp pushf push call pushf popl jmp stc movb add jmp btc lahf jp xor mov shr shld dec clc mov pusha add jmp mov mov pushf mov pusha mov pushf pushf jmp bt sub mov mov mov mov mov push pushf lea jmp or call mov mov pushf popl lea js pushf pushf mov pushl popl pusha push pushf push lea jmp mov pushf pushl pushf pushf popl jmp aad push ror mov stc clc add cmp sub pusha test movl add cmp neg stc clc pushf call push movzbl cwtl lahf mov movb pushf mov push mov push movb lea jmp pushf mov pushl mov jmp jmp mov pushf popl call pusha call jmp mov pushf push movw lea jmp pushf popl lea jo pusha pushl popl pushf push pushf lea jmp cmc cmc pushl popf pushf mov pushf lea jmp test movb stc add jmp call pushf lea pusha mov pushl pushf pushf lea jmp inc push push mov pushf lea jmp pushl lea cpuid stc pushf test sub stc stc mov stc cmpl pushf push mov mov jmp mov call clc pushl popl pusha jmp sub xadd clc mov pushf and not shl mov bsf bts mov shr pushl popf pusha mov bswap lahf mov pop push mov pop lea mov lahf pushl lahf mov lea mov seta xchg movzbw mov jmp pushl popl push pushf pushl lea jmp push pushl movb mov jmp test btr sub mov add btc bts jmp pushl mov pushf mov jmp pushf mov push call ror cmc pushf cmp sub cmc call movw pusha pushl popl push movw lea jmp mov pushf popl jmp push push mov pushf mov jmp pushf mov mov mov pusha mov call pusha push sub jmp cmc stc sub stc stc xor call mov push mov lea jmp mov pushf push movb pushl ret jmp mov push pushf lea jmp std call inc rdtsc stc test test sub pusha mov pusha mov mov mov lea jmp pushf pushf popl pushf jmp pushf pushf popl push movb push pushf pushl popl pushl push mov lea jmp pushl lea jne xor mov cmc test call mov xchg movsbw movzbw call movb mov call mov call movzbw sbb lea rcl shl sub bt lahf lea cmc sbb and neg data16 (bad) jno or enter add pushf call bt pusha sub cmp cmp pushf cmc and jmp call jmp pusha mov movb sub mov cmc shr jmp xor mov neg add mov cmp test add call mov mov lea jmp pushl mov pushf lea jmp mov mov push mov jmp mov xchg push bswap mov pusha not pusha mov jmp pushf mov call mov pushf jmp mov call mov pushf pushf push lea jmp setp jl not pusha mov lahf mov mov pusha pushf mov divl call shrd not mov stc bt stc add pushf mov jmp call call cmc (bad) hlt cmp bsr mov movsbw xor adc mov jmp pushf call aad shl daa stc mov sub stc cmp rcr mov cmc cmp sub jnp shr pushf pusha pushf movb mov jmp pushf popl pushf pushl popl pushl push movb movl lea jmp pushf lea jmp movl jmp call mov push push mov movb lea jmp stc stc stc shl movl mov pusha mov mov jmp push lea je push sub cmp cmp xchg stc mov cmp clc jmp mov push pushl mov pusha mov push jmp mov pushl mov mov pushf mov pushf lea jmp call sbb adc inc sub scas (bad) cmp scas jmp scas pushl (bad) (bad) mov daa scas lcall adc incl or jmp scas decl sub jmp scas jmp and scas decl sub (bad) cmp scas jmp and scas decl scas (bad) cmp scas jmp scas ljmp scas (bad) mov sub (bad) cmp scas call push scas (bad) decl scas ljmp (bad) mov push scas (bad) jnp scas jmp and scas decl sub lcall (bad) jmp scas (bad) mov daa scas decl scas (bad) out daa scas (bad) cmp scas jmp scas incl push scas (bad) in adc pushl push scas (bad) cmp scas (bad) out daa scas (bad) jnp scas (bad) decl scas lcall cs decl scas decl and scas jmp scas call scas jmp sub (bad) mov adc ljmp lcall adc call scas ljmp scas call scas incl sub push adc decl push scas decl scas jmp sub call (bad) pushl push scas pushl (bad) (bad) out daa scas ljmp sbb jmp scas jmp scas (bad) cmp scas inc sub scas ljmp scas pushl adc jmp sub pushl and jmp scas ljmp jmp sub jmp scas decl adc pushl scas call daa scas ljmp scas incl adc (bad) cmp and ljmp scas jmp scas call scas (bad) jg scas jmp sub jmp scas (bad) decl scas pushl or jmp adc (bad) cmp scas ljmp ljmp scas incl scas call adc ljmp sbb (bad) cmp scas (bad) in or jmp scas push adc pushl sub (bad) mov or pushl (bad) (bad) decl scas decl push scas pushl or incl scas ljmp sbb lcall cs call push scas (bad) cmp and (bad) jp scas incl scas call daa scas jmp scas call push scas incl adc jmp sub (bad) mov adc decl scas ljmp (bad) jg scas jmp scas (bad) mov sub (bad) in adc call push scas jmp sub lcall adc call sub inc sub scas (bad) in adc jmp scas call scas decl sub (bad) jp scas incl scas lcall and incl or incl sub scas jmp scas ljmp scas ljmp sbb (bad) jnp scas decl scas jmp scas pushl sub ljmp scas ljmp sbb decl adc (bad) jg scas pushl scas jmp scas (bad) cmp scas ljmp scas decl scas incl and (bad) in or (bad) jnp scas (bad) cmp scas lcall cs jmp scas decl bts mov sub test sar mov pushf call ror xor rcl mov shrd pusha pushf xor push bswap inc not rcr clc ror movsbw dec movsbw bt sub data16 icebp xor movsbl pushf not inc rol add cmc lea movzbl push cmp mov jmp mov movb call daa aaa add mov sub sets call pushf movb mov pushl mov pusha pushf lea jmp pusha movzbl mov movsbl movsbw pushf pushf xchg lea call pusha mov pushl jmp movl pushf popl push call push mov pushf jmp call push mov jmp mov mov jmp jmp pushf popl lea jno push movb pushf pushl popl pushf push push lea jmp notl or shl mov jmp push pushf mov call pushf push mov mov lea jmp pushf pushf add bt call call call rep btc mov cmc add mov movb pushl popf pushf mov pushf pushf lea jmp lea jne bsr adc rcl rcr xorb not pushf lea lea mov mov lea jmp xchg cld pusha mov mov call sub call pushf pushl xchg pusha pushf jmp add btc sbb not sub neg call pushl pushf pushl popl movl mov mov lea jmp pusha pushf pushf mov push mov movl lea jmp add add mov mov call xor pusha mov pusha push neg pushl dec cmp cmc cmp cmp bswap cmp stc pushf stc xor cmp clc sub clc call jmp mov push mov push mov pushf call jmp push mov pushf mov call mov pusha movb mov pushf pushf mov call mov jmp call bt add pushf jmp mov jmp mov mov movw pushf popl jmp pushf mov mov movb pushl push mov lea jmp pushl popl movb mov mov lea jmp call push pusha pushf mov movb mov call jmp pushl popl pushf lea jmp call mov movb push push pushf lea jmp pushf popl pushf mov pushl popl pusha pushf pushf lea jmp pusha mov call lea movw xchg not pusha mov pushf jmp pusha pushf mov push pushf call jmp shrd mov push add pusha push lea jmp push call cmp add push mov lea jmp jmp pushf mov jmp shr add btc mov cmc push sub movb call mov movb push pushl pusha lea jmp mov mov pushf pushf mov mov mov mov push mov push mov pushl pushl movw lea jmp call movb pushf jmp mov mov pushf movb lea jmp mov pusha pushf movl lea jmp not mov pop movzbw mov mov movsbw mov pusha jmp mov pusha jmp push mov call movw push mov push pushf push pushf popl pushf jmp jmp stc call mov jmp pushf movb mov movb pushl lea jmp movw pushl popl movw push lea jmp mov call lahf shr mov lea not ror mov stc add pushf mov movw lea jmp inc setb sub call bt add mov mov mov lea jmp push lea ja lahf xadd aad mov jle daa shrd lea aaa das clc sub ror lea aas lea shl bswap lea and bsr mov sub lea mov mov bswap push mov pushf popl movsbw push not std mov bswap ja not pusha lea mov pushf call rol movzbl push add pusha pushl inc call rep add data16 (bad) mov shl shr test mov test clc cmc test pushl popf movb movb lea jmp pusha pushl popl pushl movb pushf lea jmp mov pushf pushf lea jb push jmp call pusha mov call sar xor mov clc jmp pushf pushl popl mov lea jmp pusha call bt xor movl jmp pushf pusha mov xor rcl stc mov jmp lea cmc bt sub pushf stc clc mov add lea jns pushf clc neg stc ror call shr mov sar dec adc rcl mov push cmp mov pushf sub pushf bt shl call push mov mov lea jmp mov push mov push movb lea jmp movb jmp call mov mov lea jmp pusha pushf pushl mov pushf pushf pushl lea jmp bt rol lea dec cmp add pusha lea shrd bt sub rcl mov shl bt mov bsf bswap add movzbl mov sub shrd cmp rcr xor rcl pusha rol lea bswap sar not movzbl xor shrd setb (bad) cmc shl xor btr rcr shr rcr movzbl mov pushf lea adc cmp neg mov test pushf bt stc neg jmp jmp jmp mov call pushf call jmp mov call add call test add push mov push mov pushl push pushf lea jmp pushf popl call call movb call mov push pop mov mov pushf mov call call call btc add adc and add push mov jmp push pusha jmp mov pusha push push pushf lea jmp cmc sub test cmc add call pushl popl movb push lea jmp movb push pushf divl pushf mov mov mov call stc bsr mov mov pushf pushl call pusha pusha mov jmp push pushl mov movb push jmp call shrd aaa mov bswap not bt mov jmp pushf pushf mov call shld mov jmp pusha mov call call inc push test cmp pushf neg pushf clc ror cmp mov clc sub push pushl clc clc mov push sub jmp pushf mov movb pushl pushf lea jmp pop movsbw mov jmp call mov push mov pushf jmp or mov dec pusha mov pushf cmp add pushf pushf pushl mov pushl push lea jmp call popl push pushf push push lea jmp not bsf mov bt inc add pushf push mov lea jp pushf mov mov lea jmp sub pusha lea jne clc xor call push pusha movb mov pusha pushl mov movw jmp pusha movl mov movb pushf mov lea jmp pushf pushl pusha mov jmp call mov pushf pushf popl movb pushf pushf call call pushl popl pushf pushf pushf movb lea jmp mov push movw pusha lea jmp push push inc jmp push mov pushf pushl mov mov push pushl mov pushf call mov mov pusha mov push mov mov pushf mov call lea pushf pushf movl jmp dec mov jmp sbb shl clc mov jmp stc shr pushf jmp rol mov call pushf sub pushf cwtl test pushf sub push pushf mov pushf lea jmp xor bsr aaa shrd mov stc cmp sub call xor neg movzbl cmc call rcr bt lea call call add jmp mov pushl pushf pushf lea jmp push mov call call mov pushf pushf mov pushf pushf mov lea jmp bsf bswap lea movzbl dec clc add shl bts sar add lea test not mov or neg ror and add pushf push add dec mov call bt cmp mov bt add cmc bt shld pushf jmp push mov pushf pusha mov push push pushf lea jb push jmp inc clc shr mov sbb call cmc pushf add call mov call push pushf lea jmp jmp sub push mov mov mov push movb movb lea jmp clc add push push mov pushl lea jmp setno mov jmp mov movzbw mov jmp stc clc add pushf mov mov push movw movb lea jmp lea cld push pusha not mov pushf cld jmp lea jge push mov mov jmp push push movb movb mov pushl mov push jmp pusha mov jmp add dec add add inc add cmc push add add add pop add add add add pop xor add add popa xor add add gs add adc 