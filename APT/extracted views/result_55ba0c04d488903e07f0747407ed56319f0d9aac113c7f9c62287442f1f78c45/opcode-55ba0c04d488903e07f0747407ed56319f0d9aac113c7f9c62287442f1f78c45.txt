call add push mov sub fnclex fwait smsw test jne smsw test je cltd xor xor xor mov jmp or or or or add add push mov push push push push mov cmp push mov pop jl push pop xor div or decl std add movzbl adc mov shl or mov fwait in inc call cmpb push or packuswb sbb and adc mov (bad) incl cld jne test jne movb jmp pop push shl dec movb jnp ja add cmp add ret shr rorl outsb pop push add add add insb mov pop mov pop leave ret aam (bad) fistl mov inc add or add adc mov incl test jne push bswap mov pop xor (bad) mov testb mov adc push (bad) in fildll sub adc (bad) call jbe push sbb or push push mov (bad) jle cmpb je jnp push adc outsb or cmp lcall cmpw clc je jo fstpt sahf and es or jne cmp fidivr rol or lds or mov pop jne mov sbb add outsb (bad) pushl xor cmp je push push call adc mov mov sub or and (bad) jae leave ret sub xchg jmp dec sti mov jo adc cmpl jbe or add popf pop movsl cmp out mov neg sbb inc mov or cmp ja push jmp mov (bad) adc xor and ret or add enter cmp ffreep or push lea mov lret arpl pop dec jmp jno (bad) mov push mov inc mov mov outsb pop incl jl mov or mov add push push mov pop lea lret and (bad) or or leave add inc cmp adc leave lea sbb push sti fucomi inc and int3 loopne inc cmp mov jae (bad) fisubl jle inc fincstp mov push (bad) xor pop dec or mov mov or into andl pop push inc xchg iret mov dec mov add add dec dec dec cmp inc push push xchg adc cmp jl lds subw test movl std mov cs ret pop or sub or pushl sbb add or mov mov lea mov pop or outsl mov je jae jae push push sti lock or gs push mov add lcall lahf mov jl inc push cmp push mov test mov inc push push sahf or sbb xor sub mov out mov mov add add mov sub fisttpl roll mov int3 or (bad) mov push sub (bad) std push pushl mov push pop add arpl pushl push int3 into or decl fsubrp insl mov add lret dec inc cmp jns mov sbb mov enter and mov insb xchg dec xchg aad cmp sub push fadds nop inc (bad) mov and adc sahf int cmp rol (bad) mov dec cmpsl cmpl xor and negb popa fdivs pop mov push mov xor push repnz call popa or mov test pop pop repnz push mov mov addl mov lock out mov mov inc mov add leave adc push or mov test sbb adc xlat jb push hlt mov mov rorb inc adc sbb add fistpll xor fmuls xor mov mov sbb lea jle fisttp (bad) lock (bad) ss lds add sti adc sbb cmp call jb push add xchg inc sbb cmp dec in inc outsb sub add push pop jmp mov adc cmp test imul mov push in fildl adc (bad) (bad) or jne xchg sti pusha fnstenv fmul xor mov ja push popa imul inc (bad) not mov lock jae cltd sub jle mov add mov mov push jecxz dec mov popf aam (bad) jne cmc pop js ja sbb bnd ret sub dec or sub imul inc je add cltd insb sub jle dec fstps add std mov in push cmp lcall mov (bad) aad (bad) clc push or xchg stc jne mov cmp inc cmp outsl mov dec push and inc jl leave nop xchg mov je nop mov adc and cmp sub jge mov ret aaa cmpsb mov lret lea inc sub jmp adc lock mov out or mov pop out jno or (bad) pushf or mov lea decl mov xchg adc out mov or push and sub (bad) imul bound bswap cmp adc xchg cmp cmp or mov (bad) (bad) repnz dec movsl mov or in lahf add and and nop xchg pushf lods and and mov je mov inc js jmp push mov pusha js xchg push je xor arpl mov mov cmc outsl jmp in xor pusha incl add mov movsl push inc add test push movl imul (bad) or push push or sbb mov in pop and jbe repz lds adc fcmovnb push jle (bad) jge lret pop cmp xlat ret push sbb mov ret ss mov (bad) adc ljmp out jae stos in je cld int3 fdivr imulb push es cmp jae cmp je popa inc lcall and sub xor int3 push (bad) mov or pusha fstp add adc repz sbb pop enter push push cli jne fcomps inc ret in out lea (bad) repnz push out outsl ss daa hlt (bad) or movb negl add jge add push loop push shr push mov (bad) fstpl jecxz and nop mov add push lea cmp or (bad) lea fnsave cmp pop decl int imul hlt scas jle cmpb fimul mov and or add or sub fimull arpl push adc prefetchw lea clc imull pop lea cmp js jns fdivl pop sbb jp push mov ds in xchg cmp fist push addl cmp orb jg lods rclb sbb xchg bound test mov arpl pop pop add sbb inc jecxz sbb fldt push push sub in mov add push add and into popf fisttpl mov sbb xor adc pop and xchg pop in andl add sbb pop fs mov or or mov adc sub sbb push add popa mov js and pushf dec mov sbb pop je imul and scas xor mov mov inc inc adc cmp mov (bad) cmp push cmp arpl aas unpcklps pop mov adc jp xchg jle ss pop jns mov or push scas xor jle testb bound aaa mov xchg fmulp mov andl xchg cmp and rclb cmp lea inc or jns call jnp inc sbb shll sbb ja and push jg cld aad hlt jnp jmp mov pop push push push scas imul jecxz int3 addb inc mov loope push je cmp fisttpll sahf jg or fwait push div pusha cmpl cmp ret outsl xor lea pop xor sarb mov mov push and and xchg jne popa fdivrl jne mov addr16 inc and cmp popa mov cmp sbb add outsb (bad) fistp or je dec pushl loope sub push (bad) pop fisttpl add pop or xor into cmp ss (bad) ljmp sub ror pop adc loopne add (bad) push mov lcall arpl add inc mov call push jne pop jae sbb ficompl or jb mov inc or roll xchg adc adc fsubrl movsb add mov pop (bad) and xor pop jnp movsl xchg xlat push pop push adc or cwtl outsb mov insb scas (bad) mov roll add add rorb dec jne or out sahf fmull add icebp roll sub (bad) and add xor xchg push sub mov je and push cmp aas xor push pop adc push inc add mov pop ss (bad) cld test adc push mov xor push pop push pop sbb sbb ret add cmp and pop mov push push adc insl or sbb lds lret jmp out rcll dec lock mov xchg rcll scas out pop and fdivs clc sub xor jne int3 mov inc or push (bad) inc fildl or xchg dec mov pop inc test insb pop insl xchg inc xor or (bad) mov inc adc jmp cs dec push cmp int3 mov pop int3 add sub sbb testb bound add into xorl mov jbe mov lahf test pop mov xchg sbb adc dec mov pop or dec jae iret roll xor inc test sete inc sbb xlat push mov xor cli xchg mov int3 int3 in (bad) mov adc decb hlt sbb xor std mov dec adc mov pop in add out add or xchg fwait cmp popa push mov out mull adc push add stc fidivr push mov xchg push add jae mov push dec test mov out testl jl mov out xor je or pop aaa fisttpl dec or (bad) or push leave popa pop mov or or push xchg inc jl fmuls or push xor repnz (bad) pop push imul lea dec test mov inc jmp out pop xor jmp push push push das sub push push shrb dec push ljmp mov mov mov add aam fistpl push push push adc mov dec shl call pop mov jbe adc mov fnstsw add adc pop mov pop loopne sbb jmp cmp stos inc dec inc cmp add xlat jmp fwait insl push xchg mov fcomps cmpsl or gs shrl push push add loop jmp out (bad) mov mov jne das std cmpsb mov outsb push inc mov push imul mov sbb adc fldl imulb inc pusha cmp clc sbb roll lods test fadds cmp into lock int dec jns andl pop sub clc sbb add add pop (bad) aam mov outsl clc add mov push aad mov and in adc push cli out xchg push lea inc mov fdivr adc push push fisttpl cmp aas test lock jne lods sub xlat bound mov push mov scas sbb and inc mov pop outsb rcrb fisttpll add enter jae in or add adc dec int3 sub adc cmpl mov cltd imul mov dec jmp push js mov inc popf pop je cmp xor xor ret jbe inc pop push (bad) imul mov iret cmp inc push mulb sbb add add sti jmp push aaa rcrb cmp outsl leave mov outsb sub enter pusha jae insb jo mov pop xchg stc cmp int3 cld mov rcrb mov jae loopne daa cmp outsl (bad) push push cld dec sti (bad) bound or sbb cmp cld mov add lods dec xchg and pop adc shll cmp sbb mov mov xchg push sub add adc data16 mov movzwl test push or xchg add (bad) mov sbb add divl mov sub outsb hlt inc or jbe ret data16 inc dec in (bad) push add scas push jae pop pop sti fistp push adc jle jmp pop mov pop subb and test mov or cmp pop fcoml push push mov mov es sub xor sub movd das sar mov jne pop mov push fwait test add mov jne orl mov mov xchg xchg lds mov push in pop cli std cltd pop idiv scas pop add lea cltd or aaa push cmpsl outsb or mov pop push adc push add jns stos fs mov pusha jecxz fwait lea inc dec scas roll mov test mov insb (bad) mov rcr sbb ret sbb jo cli test lret dec push jnp dec ljmp (bad) cli sbb sub xor or ljmp mov fs lahf fisttpll or fcomps je adc cmp sub xchg push cld jp or pop movzbl popf (bad) add inc jmp loopne adc xor sti inc cmp jle adc unpckhps inc addl repz xor add mov inc pushf jl push xor add clc test cmp sbb lea xchg cmova inc sbb inc xor cmp xchg sbb pop add add maxps inc mov xor and push xor cmp mov add jg js ret fimull rorl push cmp jae test jne dec cmp jl or mov add xor mov mov (bad) pushl cmc mov cmp jne cmp jne cmp jb cmp jbe cmp pop sahf xlat fnstsw sarb loopne jbe (bad) inc push cmp cwtl lcall dec xor add adc dec sbb push (bad) loop xchg push imul push insl and inc stc adc leave push add cmp lock arpl pop or test andl mov and fmuls push loopne je add mov (bad) (bad) loope adc mov mov adc add jne xchg insb dec test xor add (bad) lret mov cmp mov mov lea (bad) or add xor inc loopne adc orb adc push adc test push adc nop pop push sub sbb out xchg lods xor jle add add ss mov roll or rcl or push mov mov adc repz punpckhdq sbb or push add add adc jb pop (bad) xor lds pusha pushf cmp pushf xor pop loope dec or sbb push and push (bad) loopne (bad) mov xchg inc dec (bad) dec push jg and lea push adc (bad) mov sbb movsb mov and fdivrs and pop notb rcr mov sbb mov out inc sahf cs ljmp insb mov fnop jl popa jge adc loopne (bad) mov ret push or cmp inc add enter popa aam les adc (bad) push or cmp testl sub ss or xor xor sub sbb int enter pop xor sub jle int insb ja push (bad) jge mov pushf test (bad) mov xorb push fsubr adc add fcoml dec mov fistpl xchg ret xchg stc add andl fdivs inc add (bad) lcall sahf sub rcr fnstsw test jp fstp fld1 fxch ss (bad) xchg gs jns mov fildl fildll fmul fcomp jmp loope in adc shrl adc sti mov push add (bad) (bad) mov out mov jmp incl mov lret fcompp jne je sbb mov push loop xchg mov or add mov pop ret movsl jnp test es movsl jno or jae adc sub sbb iret pusha ret adc sub cwtl xor ret mov jae orb mov or in and add (bad) sbb xchg sbb sbb cs xchg cmc mov mov pushf adc add fwait int mov cmp mov mov or mov sbb movsl mov push mov inc sub sub add inc jbe sti jge and adc (bad) (bad) pusha inc mov xchg cli dec pushf push add adc fisubrl and mov les mov push jp jmp dec jle or sub mov push sbb mov mov xor (bad) mov pop add aad adc or push outsl pop imul aad testl jmp inc sbb test fdivs mov in inc add subl divb mov mov cmc push fstpt hlt dec (bad) xor jl,pt insl mov bound fwait push push xchg sub in jmp cmpsl fsub (bad) (bad) sbb sbb pop mov sbb add sti (bad) jle jae add adcl sahf es add dec pusha add pop add dec cwtl adc add push xchg or jo ret jecxz das mov jmp movb pusha out dec lea add jge push push out repnz (bad) mov or fstp lcall clc and mov push repz inc xchg lock mov pop push pop test test (bad) mov push push lock out out mov sbb add sub adc repnz jbe add push cmp jp add mov push push lea mov movsb outsb insl cmp adc sti inc aas call cmp fnsave jmp adc lods mov cmp pusha add fsub rcrb sub push adc dec insl das pop xchg sub cli dec je add sub ficomp or xchg cli outsb cltd jmp or jl fadd dec or xchg push sahf shll adcl and out push bound imul into dec sub sbb push daa mov mov sbb mov dec cmp neg sbb and sbb ficom leave ret sbb pop push je pop je push call cld je push xchg xor popa and or aad scas fucomi test xchg inc fist adc idivl inc push push inc sub js xchg js insl push sub data16 adc orb insl (bad) add push sbb xor xor or dec pop shrl mov and xchg lahf mov pop stc mov dec andb mov roll fildl pop adc repz push add or out jl lahf enter mov in adc add (bad) imul or unpckhps cltd pop hlt je outsl mov cli sub sbb (bad) mov push pop push or add jl cmpsl mov push dec xor push les sti pusha mov std pop pusha dec loop push je (bad) jle xchg dec and cmp ja (bad) inc ljmp xor or sub sub je mov hlt mov test ljmp adc test cld or mov or movsl clc dec les jns pop xor push cld roll loopne lea sub and clc std je cmp jb push mov enter iret push xor mulb (bad) push fs popf or shll (bad) addb push push mov insb mov inc pushf mov push jbe mov fbstp mov pop pop pop add mov mov popa test lea jmp dec dec dec roll es cmp or cmpsl push xlat sub fnstenv push pop lods ret and pop dec adc jecxz js push push add sub rcl popa cli out loopne sbb mov push mov fistpl pop les lahf lea sbbb fldenv and adc push roll push cld jle mov xor jp cld test enter repnz adc add cmp cmp mov jl adc sbb les add xor push cmpsb je aas pop cmp jbe bound dec push cmp jne fisttpll dec pop or sbb nop push add add sahf add mov cld push addl ds add jmp mov test je daa sbb adc sbb mov and mov imul test addl addr16 or aas lds test loop dec pusha pushl sbb int fs pop jmp loop xlat pop ret rcr arpl push jb xchg xor push (bad) inc (bad) push fadds add sub xchg popf jne sub aad and lock (bad) xor push repnz adc dec or sbb rol movzbl hlt int sbb test pop lock dec mov bound adc cld test adc shlb push xlat xchg or xchg push fs mov sub add push (bad) out dec adc pop (bad) jle or pop sbb ret sub push push mov repnz mov pop jmp push gs icebp jb stos or xchg xchg adc fstpt les add cmp or or add call ret hlt sbb das mov sbb mov add ret std pop sbb aad xor test or inc push add sarl fdivl push sbb adc les sbb add fadds pop movups in jnp inc stos sub sub cmp cli push hlt divb cmp xor adc cmp xor mov sbb pop mov xor cmp or fisubrl pop in je ficoml js leave mov mov popf cmp xchg daa push push pop and cmp push sbb mov mov fldl push fucomi or xor sbb cmp push sbb fisttp add std movsb jns or sub sbb (bad) or sbb orl push or push and inc xlat add (bad) (bad) roll negl sbb pop in mov adc mov sbb adc push lret mov mov daa jge lea xchg jle mov or pop arpl sub pop xorb mov stc push add lock mov js xchg lret movsl mov fadds (bad) (bad) pop fcmovnu test add add aam inc mov cld adc mov add mov xor cmpl pop mov add sbb es fstpt mov je or je add jae sbb ror jne loopne cs add das add push pop mov enter jnp xor and sbb out test jns movsb mov cs aaa nop push inc inc andb cmp (bad) arpl push push and cmp and lods mov je dec rclb or adc fcomps fiaddl adc shlb add imul sbb jbe mov fstpt sbb add and push mov mov push sub cmp fistpl xchg (bad) mov pushf loopne mull sub nop push jl jnp in adc shrb mov lods dec cmpsb addr16 adc push ja sbbb or inc mov and mov add popa dec jb adc adc push push mov cmp sbb sub stc orl push jbe lea and loopne or push mov sub push mov shr and add repnz adc rcl ret sub in insl adc je push mov push mov (bad) enter or mov mov adc and cmp int3 adc mov pop or pop cmp stos imul cwtl loope push xchg pop jo clc les adc push or dec cmc mov (bad) je ja mov jg push add movb and ret push or sbb fmuls out add sbb loopne ss sub sahf ret movsl sub in scas and jg push cmp rcrb call adc pop dec xchg push xor push jmp sbbb add and jno push jne mov (bad) jmp in mov test push cltd and add imul add shl cmp push and mov bound cmp jg cmp jne pop (bad) pop fcomp movsl fdivs add jmp sbb ret loop add push add int3 push or push int xchg pop xlat hlt mov mov or je cmp sbb cmp jl cmp add cmc clc mov adc sahf push jae addl add outsb mov lock push adc inc adc mov shr push mov or or outsl leave out jle fstpt push je cmp je push outsl cs andl push add xchg sbb fistp rcrb push adc jae mov pop (bad) pop sub mov fcmovbe (bad) je cmp jle push dec insb xchg ljmp adc das inc arpl jbe divl ss insl mov movsb mov lods (bad) pusha adc jne add adcl inc aaa sbb ljmp loope mov sbb ljmp mov add or inc mov pop jmp pop dec push adc sbb pop inc adc mov mov adc mov sub jo xor (bad) mov adc push mov add push jno xchg xor xchg mov movl repnz cs push pop js mov sahf add dec xor push or and outsl lock fadds cmp ljmp lea cmp nop pop mov xchg or fidivl cwtl jle and cmp mov xor loopne incb fidivr push ja daa clc mov fidivl sub cmp cmp and xor sub sub sub sbb stos clc xchg cwtl cltd sub push sar push and and shl sub pop mov add ret adc add hlt lea cmp outsb jl xchg outsb xchg xchg (bad) sarb push jg (bad) inc add jnp mov jbe dec push jmp jne push and cmp jbe adc xchg add or subb dec hlt subl (bad) (bad) fild cmp (bad) decl aaa mov ljmp ljmp cmpsb mov (bad) adc aad jmp xchg jne jg mov cmp addl lock les push inc hlt add or ljmp push outsl je adc sub aaa ret pop aaa test push dec xchg mov inc or cwtl fsubs xchg mov push inc xor mov les nop and push and mov lea test dec sti push mov and bound push inc sbb xor dec (bad) jne pop sbb add cmp movsb mov mov sbb clc add adc add pusha loope mov or outsb sub out inc (bad) jbe (bad) js ja jb cmp jae nop or (bad) or mov push dec mov (bad) fadds in add jno push sti xor jb inc adc adc and in cmp inc jbe or pop lahf inc pop lea jl insl je cs jne sbb lods (bad) sub fistl jmp sbb mov jae mov cmp or cmp dec cmp adc jb outsl out aaa andl (bad) xor incb ljmp push fwait lods xchg or arpl inc or rclb add push pop cld mov jo pushf add pop cli fbstp xlat cmp and lea add or loope lea dec sub int3 test sti xchg xlat (bad) jp inc sbbb mov jmp mov push test out (bad) dec mov adc or mov push outsb push adc movsl xchg sbb aaa lcall adc pop mov mov pop mov adc je or inc push call and cmp xor adc inc xchg pop pop pop in and push jae add mov jmp adc lock push sub push pop sub hlt (bad) or mov push pop xlat fldenv loope jnp (bad) push or stos cmove (bad) mov add cmp jb popa xchg mov es sub rolb cs test dec add xor jo pop adc push inc in dec cs pop loope cld jae neg scas xchg jp js clc push push mov pop movsl push stc jae lea je add incl xchg adc sahf jge or int subl pop stos jbe and out call xchg and dec sub inc add push add out or pop push lret pop mov sbb jae out das sub loopne dec mov out push jne aas mov jo aad xor jbe push xchg mov fsubrl xor push pushf xchg or jnp js bound lds in mov addr16 adc cmp cs inc fisttpl and std loopne push incl cmp fsubl fadd sub xchg add outsb and xchg ja sbb mov lock pop in or cmp pop xchg cwtl adc jno iret cmp mov xchg lahf push jmp imul push outsl das (bad) and rcrb pop mov jae mov addr16 xorl mov xor inc sbb test es fsubrl adc adc xlat test in push push cmpsl cmp sbbl and sarb push mov clc pop (bad) (bad) pushl and (bad) in inc mov mov decl or cltd push push inc dec jp pop and pusha adc sub faddl aam push mov loopne mov and pop and or fwait push sub in mov rcrb push pop add jo nop (bad) pop jo jo pushf fidiv sti or sbb xchg std mov cmp add adc add push jl push mov mov aaa scas jp inc shlb xchg mov adc and jo into xor adc inc les cmpb shrl ficom in xor sbb adc out xlat inc lods lcall mov cmp inc ljmp fldt (bad) add mov stc add sti cld inc std and adc and nop leave adc and and fistl mov dec push enter movl cwtl dec cmp inc pop dec into push lahf jo jne mov xchg mov push xor push push push aas faddl clc cmp mov out sbb addl aaa add xor jge mov push mov adc fcoms popa or sub add sub in ret cld lods mov test adc push xor push hlt inc pop push adc dec xor jg aaa add (bad) pop repz cmp sbb daa and sbb mov icebp push push sub pusha sub sub sbb inc mov adc add jne push mov pusha add orb sbb aad push ja scas xchg inc mov outsl inc popa lahf xlat dec loopne or add pop pop pop pushf outsl sbb push (bad) fidivl jp xor adc dec das jae mov pop inc dec test sbb insb loopne or fsubrs dec cmp ror cmp cmp in mov xchg ficoml add sub jge mov or pop icebp jg jl out roll dec or inc insl cmc jbe data16 push add rorl enter fdiv jl dec xor dec or incb shll loope cltd inc subb jae mov add inc sbb push fdivr pop push bound adc sbb rcll aam je jnp (bad) cmp (bad) jne and bound and and or icebp adc subl ds push cli test jp xor (bad) xor loopne ja decl adcl pop cli sahf ds sbb jmp push push (bad) aam cwtl (bad) ljmp push jmp into mov cmp mov xor rol sub aaa cmp in and hlt inc push hlt jae in jle sbb adc inc fldl mov pop push jnp in dec mov (bad) je push sbb mov add cmpb push pop lock push sbb lret mov jo xor jnp or xchg push sbb (bad) inc mov jb sti js and int3 mov les jmp insl push or (bad) add or adc stc push inc inc dec pop (bad) pop and sbb or sub cs into outsb push mov aam cmp jbe fiadd xor or xor mov lods bnd xchg inc mov mov loopne fldt mov mov (bad) pop or or xchg in inc push or sub dec les or sti pusha inc cmpsl add add push mov jb adc push add sub jl push shlb roll cmpsl fwait int3 push daa cs or pop and inc mov rcl sbb mov pop mov les dec aaa mov push or xchg mov mov cwtl inc pop shl test or nop fisttp mov test cmpsl test add add and xchg fnstsw bound cmc outsl pop test jne push or add jle mov mov les inc mov cmp push lock jmp sub cmp jge and psubb adc jne jmp cmp aas cmpsb add add (bad) mov mov and mov les (bad) nop xchg jmp shr ficompl (bad) xor lock in mov cmp dec dec movsb je mov (bad) mov das push movsb push leave push xor lahf mov mov jb lods aaa push sub lods pop mov mov mov sub push or mov push (bad) cmp jge movsl lods dec jo pop sub pop cmp xor pop cmp lret push mov inc xor loop add cmp (bad) mov inc push mov sbb inc add mov fidivrl push mov test xor repz movzbl add std cld sti into (bad) repz stc clc xor jo add lock movzwl xor jl hlt pop lock sti mov sbb xor lods jo adc shrl adc pop and loope dec adc sti les and cmp mov push push xor sub jnp ss or push sbb fsubs jne push pusha and pusha sub js mov pop (bad) xor jbe sbb dec mov notl cmp in pop mov jne test push xchg dec adc (bad) hlt and sub std mov adc mov lock add fs bnd push dec push gs cwtl cmp inc lahf jle pusha sbb add pop iret add lcall gs ret loop push cmp adc pushl ss jp mov int repnz adc xchg pop pop cmp push fwait aam xor clc clc mov sbb fmuls add cmp add scas movlps or jg or incl push and shr clc inc add adc push dec and sti lea leave pop in sub sbb pop mov adc sbb push imulb or cs add mov inc push sub mov sub cmpb (bad) mov mov inc inc xchg dec cs push adc enter adc pop adc dec and nop leave push jbe test sbb xchg jo xchg std and dec sar movsl bound add inc mov notl fisub pop xor dec xchg add pusha push sbb inc mov stos pop pushf xor out ds enter push jo fs iret adc adc imull (bad) rcrb push or les sbb or dec inc rcll aaa lods add add add fstl dec lods int3 adc add std arpl adc and push jnp xchg inc mov or inc test dec pop or ret ss popa aas enter loop add cmp add pop ret (bad) push paddsb add add enter add and adc int3 add cmp fldt add or jg es sub inc ret lret mov loopne cmp push lea inc inc pop xchg push jbe sbb insb push sub mov jno jnp lock fbstp sarb je push push sbb ss rclb or inc sub and lahf and or fwait sbb sbb (bad) ret (bad) ffree mov out mov nop push xchg sarb push sbb sbb and notb nop fimull sub iret ss test pop push mulb icebp bound jl jne (bad) sub mov mov daa pop push xor int3 leave mov sub add pop mov adc jnp mov fs je mov sbb popa and pop inc (bad) adc ficompl scas mov xchg or sub add add fmull jo xchg gs fnsave test add shlb testb fcoml mov add ret sub insb cmpsl adc cli jae mov inc add (bad) jmp aaa pop add jno subl xchg dec cmp fadds push xchg adc adc or push sbb pusha ss push pop push adc fdiv iret sbbl and push dec sub roll or lods pop rclb inc test pop inc push mov fmull sbb mov add push ret push push jo or add cmp or push cmp pusha mov push jl roll fadds pop outsl sub pop (bad) jo inc outsl nop rorb inc mov xchg add lock sub pop sub sbb roll mov or inc adc cmc push cmpsb dec inc int dec sub cs sbb pop arpl dec xor js arpl jle xchg lds add sub dec ljmp shlb cld mov or insl mov (bad) sbb cmc mov or add shl xchg sub (bad) mov cmp or xor sub jge sbb push xor and ret adc xchg cmpsl sbb xor mov into sarb inc xlat mov cmp dec push inc les push sub fistpl sbb ret add push xor mov mov mov adc inc or lock or add cli clc addr16 and push push push adc dec sub lea out add pop mov mov fild inc cmp mov pop push push push test add adc pop sbb sbb pop inc jmp or adc aas add pop pop mov adc xchg mov or pop mov mov mov and and push iret add mov push adc (bad) pop (bad) (bad) sbb leave push mov fadd fidiv push push sbb fld cs mov pop (bad) adc idivb (bad) jmp cmpl jne push inc jmp inc push fstl pushl inc and add jmp xchg and xchg idivb rol pop cltd cmp enter mov lea sbb lahf mov outsb or push jge clc or or or push xor cs je dec xchg clc push mov or mov push sbb sbb sbb xor and adc jnp andl pop jmp dec sbb mov fstps jge mov mov jle push or cwtl sbb push push jmp inc mov mov jl adc enter cmp je or add pop ja cld popa mov adc xchg push inc (bad) pop mov hlt movsl mov and or sbb add or int3 push scas jmp rolb pop mov cs inc adc or adc sbb mov mov out pop pop cmp or xlat adc dec out or fbstp call mov push xor adc (bad) (bad) ljmp (bad) xchg push add mov push push out add xchg in nop add add fwait mov mov outsb loop lea push out paddusb sub mov pop sbb fwait add mov push (bad) add fxch nop or mov movsl xlat jne movsb (bad) push rol mov fmuls jmp xchg adc daa xorl pop fwait in push push jae cmp xchg mov mov mov neg aaa setb push ja pop sti mov data16 or add push mov xchg or sub push andb jbe scas add cld mov test mov addr16 rsqrtps push push mov adc ret mov sub add test mov or imul pop aad jecxz pop jbe pop sub add aas jle push xchg add test sub nop sti push mov push lea lea mov outsb sbb push push xchg add test sub and push xor dec enter loope and push xor and add fldt jl inc sarl js dec mov pop pop fs aas xchg notb xchg sbb mov adc in dec inc movb pop cwtl dec cmpl inc or adc adc test mov add insl adc mov test and shll xchg aam dec pop mov and cmp ret adc push mov movsl dec pop lahf push bound adc mov cmp jb nop push loope dec cwtl push sbb call inc mov fldt rcrb or cmp mov or push sbb xor lcall cmp js pop mov inc dec cmp xor mov inc lds cmp lds lret push mov or mov mov push cmp gs cmp mov or mov pop cmp arpl insb jb mov dec inc pushf and mov sub nop mov add adc arpl adc add sbb xor inc (bad) insl mov add add pop aaa xor js dec add enter popa mov lods test mov mov push popf jbe insl push icebp add push xchg insb inc pop enter adc or aaa mov push cmp push jecxz jbe push pop and jno mov addr16 nop or fsub popl clc or lahf shrd jne xor mov lret or loope mov jo add inc cs call mov adc insl cmp cmp push insb (bad) orb pop adc or aaa pop mov mov stos push xchg rcrb add adc lock in sbb adc test mov xchg add and adc pop dec lock lret cmp jne xchg xor inc loope add push sub enter sub or xchg out pop and and jmp push mov jmp sti bound push adc dec add jge push call fmuls add pop mov (bad) (bad) leave cmp or (bad) pop cmp add dec cld data16 cltd cmp jne push lds nop daa mov or jmp incl lret inc std pop imul sub je pusha dec mov sbb dec fs inc addr16 test popa jmp ss idivl cmp in mov ljmp jo push add xlat shll cmp jle dec inc mov push add mov popf out push imul add sbb inc mov out (bad) xor sub lret pop or push or clc sbbb mov cmp (bad) or add mov mov xchg add mov cmp aaa sbb pushf inc mov adc orl sub jo (bad) leave sbb adc mov cmovo push cwtl add scas shl inc pusha add sbb test rcl jae in loope adc ds xchg in ss (bad) xor aad pop xchg dec push mov cmc pop pop cmp inc loope mov sbb mov inc sahf jns (bad) mov jl push cmp xchg (bad) mov lahf add test mov inc push mov sbb cmp mov xor mov push orl inc cs sarb je push sub xor nop push das sub sbb insb sub add ja mov jge div mov mov bound xor pop rclb add (bad) negl les lea cmpl push mov jo popa pop adc xor push sti jne sbb mov push xchg inc dec add fcmovb int3 shlb inc push push inc xor aas dec inc xor push ret jne xor ret xchg pop je inc push mov dec adc nopl and shrl bswap cwtl xor test ja fimul xchg int3 and push jl (bad) cmp push mov jmp roll mov inc cmpl sbb or adc call cmp aam loop mov test aam mov loop inc jle test hlt pop and enter out ret pop push add sub pop or sub mov inc mov lret pop ss bound lea outsl inc rol pop xchg jne pop add push ret or add mov cmp jp add dec jbe push fstl stos xor push mov xchg adc sub adc push and cmp not adc and push jmp sbb or jae xchg jnp add or push cmp sub mov daa loopne loopne mov mov (bad) jo adc inc adc test in movl (bad) sub push lock inc aad inc mov int3 push adc lahf nop and mov push and es or pop mov fmuls fwait mov mov cli pop mov loop cmp test hlt sbb (bad) push rorb jg pusha or int or xor inc mov in jmp call adc push fcomp lea shr push and sbb add dec mov or add or data16 inc in aad inc mov or into mov lcall daa lock or mov bound mov jmp in add ljmp add pop push fildl push sbb pop mov pop cmp (bad) aaa or adc push jmp dec push hlt mov (bad) and out adc flds data16 fcomps pusha insl xor push testb push sbb sbb xchg mov jl fiaddl jmp add icebp jne push jb add pop ds inc push pop push mov mov or dec or and mov or jo or notb mov lds movsbl pop mov add add sti js addb mov dec or xor jl ret pop jmp (bad) mov in xchg ss dec xor outsl adc mov enter pop subl call jle sub mov cld add dec add mov push xchg mov mov rorb and mov push or (bad) insb push rorb rclb add and push aad xor adc (bad) pop mov push jmp cmp les and scas mov push dec incb add add jb push and push inc mov push clc loop mov add test mov mov bound mov dec lods push cmp xor cmp loopne jp pop add pop sub fcmovnb xchg mov xchg mov (bad) pop sub stos push mov push pop ret mov xchg (bad) lods xor inc sbb push push jo popf movsl and testb aad push dec sbb (bad) adc xchg rorl add lock addr16 movb or push mov mov sbb xchg pop in pop fcoms dec mov and cmp outsl add andl ljmp or lea les xor je je clc sub cmp mov mov push repnz add push aas adc or inc or jne mov jle aad and test or pop or out add add jne sbb push cmp sbb jp jne or addl sub mov cs sbb or or lret add push push int push mov mov push aaa ljmp (bad) mov add sub call pop clc stos js add mov cs xlat decb cmp test popf movsbw out popa shl cmp int cmp or pop sbb mov and ficom inc sub call lret (bad) push sub fsub inc cmp pusha and jmp mov fisttpl mov and mov inc adc cli fsubr cmp out ss add fidivl ss js lock rclb pmuludq insl or fildl mov mov xchg xor mov scas mov je mov and sti cmp pop arpl cmp out outsb inc inc inc pop add jmp outsl adc xchg mov enter das (bad) pushl add push push push mov in jbe xchg fmuls sub ja mov mov ja add popa in ret jbe jmp inc push inc cmp xchg push adc daa cmp add pop hlt ja or mov push in mov jl aaa movsb (bad) js jmp xlat arpl or jne es or or int imul outsb push xor xchg mov nop hlt shrb adc xor pop test cmp mov les pop iret aas jl mov cld mov dec loop fs movsb xchg cmp jns subl xchg and sbb xchg and ret fldt test sti push test mov into adc mov add add inc adc add in mov pop pop test je add loopne add pop enter cmp inc mov push mov aaa jae jne pusha push cmp out pushf add sub lods add pusha xchg stos mov lods movl push jmp jo std cmp inc sub (bad) je insl sbb xchg mov mov dec dec dec push xor or push mov imul jge pop clc mov int and lret and lock inc movsb lea push mov stc pop mov cmp mov jbe shr pop mov mov xor add lret pusha cmp xchg push in mov adc sbb xor jl test jno push cmp outsl add sub sbb cwtl outsl xchg cmpsl call ja mov jbe les cmp sbb test push cmp pop in ret cli jno inc or shr bound push jmp mov adc jbe push hlt rcr add sub (bad) jmp adc mov jmp add aam adc ljmp push aam or cld xor fmuls mov and xor mov mov shll xchg sar xor mov (bad) sbb sub ljmp sbb aaa push (bad) mov sub or jo in xlat jnp test loope fs call dec loop xor sbb sbb mov aaa cmp xor sbb (bad) push iret repz lods pop shlb and sub js loop and and sub mov js popl push sbb fistpl pop inc fs xor push and jb inc inc insb pop jb lock or xchg incl insl cltd xorl xor sub pop xor or or adc fsts jl mov push xchg inc or mov pop cmp or jb jl xor adcl mov mov or xor mov xchg push mov repnz inc or jg lock mov dec add jge rcrl loope out sub jle push inc lcall fadds popf sbb dec in loopne add test fldl jmp stos or jl popa insb mov pusha pushf outsb pop xchg inc call in jl inc push and aad push dec jle or dec clc jge add enter xor adc add push lea arpl mov sti dec ret xor adc shr cmp fdivrs mov add cwtl cmp je daa or aam cmpb movl xor fldl fdivrs mov push push adc pusha lcall sbb call ljmp ret in mov out lcall fs ss xlat xor subl push pusha call je xor clc jl andb add xor das push addb mov mov adc mov xor or nop sub jne fstps add mov pushw iret xchg cld dec add movsb add cld dec leave push mov jbe pop sbb pop inc adc aad mov jne inc mov fwait dec add adc clc push push mov inc scas sub xorl fldl jno push mov adc mov xchg divb mov adc fldt int add ret push in add push sub jne mov add in add xchg lea or popf popa jmp xor loope cmp in and mov fs mov sbbl cmc cmp add test jl jl xchg pop inc inc adc cmp add subl jae pop jg sub cmp adc aas push mov mov or inc sbb ljmp pop addl icebp int outsb adc xor jo push (bad) push mov lock (bad) sbb sub mov push adc loopne (bad) pop repz mov or (bad) pop movsb pusha sbb (bad) int mov adc adc cmp and sub rorb ret mov cwtl and clc loop add scas cmp and xor add xchg jge comiss or push xchg out data16 adc clc push call inc clc inc jb insl mov ljmp jmp pop sub inc inc cld inc xor rclb sbb popf popw sbb jge push mov cmp (bad) adc add inc divl xchg sub push lds xor ljmp add cmp cwtl mov (bad) or and add lea enter push addl push dec orb xchg or rclb js add fs sub and mov dec jb pop inc jb ret and xchg xchg add mov shrb or mov mov (bad) enter sbb sub loope scas xchg pushl push es inc hlt pop xor xchg mov hlt xchg std aam cli mov pop adc push push ss xchg orb test dec aad jbe (bad) sbb dec aas stos adc cmp jne mov daa mov push and scas add mov jmp and loop push (bad) into xchg push dec sub sbb cltd outsb sub jo pop test clc repnz xlat insb add test add cmp sti je add inc and and mov mov add xor mov pop inc movsb fdivr inc sahf cmpl je jno sub clc jl jmp ss ljmp sarl push dec jb add call lea fdiv pop stos push lock jbe pop and mov mov xor jg and or lret push add push push out test mov fnstsw cmp dec loopne mov xor pop or cmc data16 inc mov (bad) mov (bad) push cli push push pop mov out test adc push pop insl or js push push jne push sub sub jle aas sbb shrl jnp xor pop add adcl adc add fistl sbb les or add (bad) or popa lock repz cli mov sbb lods mov repz pop mov inc xor xor push das into mov push aad inc mov jl mov push lahf ret mov or and inc add mov lret dec adc push fcomps fldl cltd mov mov adc push sub cmp adc decl addl sub xchg add pop pop push xlat push shlb arpl lds inc add or push out push aam xchg aas push sub std push mov cltd pop fnstcw je xchg pop add adc mov jge pop and insl inc add arpl arpl hlt shlb cmpl hlt movb push xor lock lock add sub sbb loopne (bad) cmp repnz insl insb push xor mov push sbb mov mov mov or push push fmull cltd add mov lock inc mov sbb inc (bad) mov adc push loopne mov jecxz and fstl jl call rclb or add adc scas ja cmp fcoms pop mov dec xor popa leave mov jge push scas cld push mov xor daa nop das push mov ss mov (bad) mov and shr jne mov jmp jp mov xor or adc mov add lods ljmp push and mov mov lock inc xchg loop xchg cmp mov repnz inc adc inc pop in mov add nop ljmp les add outsb sub add sbb in lods inc lods pop jle lahf sub push rolb (bad) negb inc jb mov inc lock push hlt je pop pop mov cld mov inc pusha adc cmp mov jb scas clc mov cld fstp or mov add xor mov inc inc and pop mov cmp ja jmp daa mov add cwtl sub jo mov out push enter inc sub sub pushf or xor push or add and add jg and insl lock (bad) mov inc push sbb test jb divb in enter sub bswap cmp or pop adc sbb (bad) or loopne sbb sbb aam push push rorl out or test js inc xchg fstps push aam cmp mov (bad) add popf add clc sub push sbb dec cmp sub fldenv add push lods jno push outsl (bad) sub add je pusha imull mov xor adc add fsub pop addb xlat add add test test adc adcl add lock xor adcl mov arpl pushf adc push xchg pop add (bad) dec push imul test mov jbe push data16 pusha add mov mov adc clc lock sbb adc jne sbb movsl cmp xor jae add lods pop hlt stos xor bound hlt xchg (bad) mov test inc pop mov xchg xchg lock (bad) or lea fiaddl jo enter sub cmovbe ja and lcall jo jo lock inc mov sbb inc mov dec xlat ret js dec (bad) or (bad) imul data16 sub push sub dec pusha jne cmp adc push push sub shll mov add push pop add (bad) pop dec pop std dec pop jne mov je stc jne roll cmp sub jg enter mov and arpl addb out jo inc add and push pop sub xorl cmpb and cmpb adc ss test mov push xor notb pop jbe test (bad) es gs sbb cmpl js mov add ret and ja sbb jae sbb mov enter sti cmpb jl add stos mov cmp call add pop jns aam fisttpl outsb jnp sub inc push xchg mov lea and clc sub movsb stos mov push push ss stos rcrl sub add or dec mov mov and sub nop push push xchg stos and xchg xchg sub jmp sbb pop enter clc lea ret ret add lea push mov sub loope daa sahf xor ret decl sbb adc jmp dec cld xchg push push aad sbb mov insl je shll mov add das dec sahf sbb clc clc clc sub add add sbb popf mov arpl test add push movsb mov mov mov loope ljmp inc jmp ficompl and out sub inc and stos rclb mov ret movsl jne jne push push add push lods pop aaa imul cltd push sub fimul mov cwtl not aad ret je inc pop movsb jle pop mov add (bad) push cmpl sbb push call daa and mov popf or xchg add daa xor xchg jne xor or sbb sbb loop clc adc es add daa push push fsubrl rorl jne and int3 mov test or dec aam pop inc jmp sbb mov add and out mov push xor cmp or inc sub (bad) lock jg pushf xchg aad and sahf xchg dec or and (bad) data16 je sbb and fucomip cmpsl int3 (bad) je mov ss mov aas or push push int sbb jg adc add pusha push ret pop pop dec mov out sub jecxz mov xor adc pop mov daa push dec js into sbb xor push add imul orl pop test jmp dec jge repz jne adc rclb mulb add arpl fadds sbb rcrb add insb jb add sbb pusha pushf adc cmp cmpsb iret adc lcall xor les push rolb add xor push xchg andl or push adc cmp pushf roll sub add daa sbb adc and (bad) in jmp xchg test rol add push add and pop add adc mov sbb cmp cmp mov adc add add shrb add push aam in and les test ret xor movsb jnp popl movl or mov mov fs xchg add xor movb sub sbb mov pop movsb mov dec adc sbb data16 dec or mov pusha inc je mov xchg inc add lock mov mov jp jmp jle in add inc and insb xchg and dec add (bad) mov inc adc add cs adc sbb enter pushf jl cmp add and ljmp cmp inc fisttpl inc mov enter fnstenv xchg mov adc sub mov test mov push sbb dec xchg ja imul and or and mov and in pop or (bad) jae loop std pop push xor es or into es jnp int3 cmpsl dec push cmpsb or push xchg mov pop mov shlb sub fiadd mov mov orl and and jmp adc pop pop push mov add and and sub cwtl ljmp pop sub daa mov cmp roll jo fstps add mov inc cwtl mov leave fisubrl stos in adc jae lahf jbe and (bad) adc sbb add fwait out xor add add je xor out xchg sbb adc addl pop push mov add aam cmpsb add xchg push add push gs lahf or lahf mov xor xorl mov add lock scas sahf jg xchg insl add fs movl jb dec push xor scas mov push xchg or (bad) pop lea int3 add push out jmp mov outsb stos dec fcoms cmpsl and aad lret fiaddl adc insl (bad) and test pop adc xlat sbb push cld arpl push jmp add icebp xor test sbb sub jp add and or sbb mov aas das jo je les add adc sahf adc add inc mov decb nop or in adc sldt (bad) inc pop adc push ret pop testb fisubl or sbb adc jg in add enter fildl add lods pop push push insb adc xor sbb adc cltd (bad) or adc pop push mov into push push sbb and add dec xchg xor gs (bad) mov (bad) xor call mov shrl add jp or rclb jle push pop add sub push in add push sub mov (bad) mov shlb test cmp push sbb push out or mov jecxz mov lods imul xchg inc ljmp push pop or pop rol push mov or cld and ljmp pop test jne and sar mov xchg sbb adc push js push daa stc in jne pop jne scas sti movsl adc cmp jne adc cmp cltd nopl pop mov mov lea (bad) stos push inc push lret xchg cmp cmpsb mov and adc mov mov std dec add mov and and cld aad cmp push pop pop fiaddl outsl xor adc sub jnp jb push adc jae lea mov push enter push cltd je std mov in aaa clc imul lea inc cmpl mov test mov or inc mov pushf push test xchg or addr16 add sub jge aad add xchg fidivrl rorb adc pusha je or jg adc mov mov push cmc stos sub repz mov cmp add xor loope sub (bad) dec mov jne icebp add aas mov movsb mov jg inc push mov jnp dec inc lds push cmp mov sbb push in xchg cmp jl out or dec (bad) adc mov sub cmp adc inc pusha push push dec add or ss inc fsubp icebp pop push icebp loope xchg inc hlt mov and mov xor xchg mov push push ja dec sub rorb add push sbb dec jecxz dec xor jmp movsl inc inc out add insb adc mov fsubr or adc push push daa mov adc cmp and pusha pop inc xchg aam mov aam inc push sti inc lret pop push or or incb je jl push adc fildl mov les cmp cmpb adc mov nop add loopne jb dec scas xchg jne pop jae lods pop or push mov push inc pop mov cmp mov push adc mov fistl mov dec fnstenv mov jb adc andl cli insl add cmpsb or nop add ds push push pop in push cmp vxorps sahf fildl add push bound hlt and push cmp jne mov mov in fnsave adc or iret mov push sub push and inc xchg push adc ret repnz loope addb loopne push xor fidivrl mov out in push sbb or outsb pop sti mov sbb jne cmp jl add jg cmp jl inc sbb daa sub (bad) aaa jg push mov push call inc into push push inc push negb fnstsw negb outsb sbb lret shl mov jp mov je sub dec pop mov outsb ret mov fcomi fildll and loopne roll inc pop inc dec mov mov shr mov dec sub push cmp jae out mov sub push push cmovle mov insl outsl push orb push dec aam mov xchg fwait push das sub fnsave xor std test or push xor cmp adc dec rcll jo xchg jnp inc sbb add mov js xlat sub mov inc dec ret insl mov pop hlt mov leave js mov in sbb cli incl mov push je mov cmp mov dec and test rolb mov mov loope or sbb inc sub inc push or adc mov ss push lock or or ficompl aaa jbe (bad) rolb sub add xor xchg and arpl jl add push arpl pop jge frstor add or stc xchg add ret mov insb cmp add call std in jl call cmp mov mov add dec sbb std jbe jge lcall adc movsb outsl xchg adc mov pop dec imul scas push mov shrb jne adc inc jl loope orl sarl clc add mov inc loopne or sbb leave enter dec xchg cs mov mov push ljmp in out cmpsb mov shr push push inc xor or sub lods and push lods lret mov push insb and pop sub pushl cmp cmp adc adc or out add cmc stos adc and sbb insb (bad) pop insl call stos cmpsb xor test mov inc call inc pop xchg or scas cltd int sub mov test or or ret cmp add shrl es add fsubl call sub rol das push stos push fwait lret rep push test inc push stc pop adc xor inc sbb loope and adc xor loope xchg push cmp stos mov movsl (bad) test or pop cmp das pop je xor or das jns out fistp cs js mov mov adc mov pop mov mov inc ja imul pop adc jbe add loop mov lret pop movzwl inc js add rep push in neg aaa sub cli mov jno add mov pop pop pop mov fistpll adc mov sub sbb inc pop adc push mov nop hlt stos adc cwtl or adc push jne sbb mov jnp mov js cmp je add sti icebp sbb jp je inc mov sbb push mov add push fcmovnu mov mov or mov dec push push and mov push cmpsb pop or xor insl gs jp adc (bad) dec pop and scas pop push aaa inc adc mov mov roll xor cmp mov adc jp xor jb insl and pop mov in cld mov mov (bad) (bad) mov adc pusha mov lahf inc inc (bad) push mov fs mov add or jbe inc mov add scas rcrl pop xchg adc mov ret add lods imull insb push ja scas pushf or lds push add mov jo adc add aad pop fcomps fs xchg sbb jb sub mov dec insb inc aam dec and stos add shrb shrl fcmovb push fs and aam mulb (bad) sar adc and sub sub (bad) arpl mov inc shr jmp mov lea dec push pop lea push inc cmp cmp lods pop dec cmp rcrb ret mov push push xchg cli ret sbb das ljmp cmpsb push lds dec pop outsb pop pop and cmp test and (bad) push std xlat add sub (bad) test mov cltd scas push add jnp mulb cmp jg lds mov iret mov add jae dec je (bad) es inc push sub sub mov mov cmovnp lds jmp aaa adc cmp jb adc dec jne mov fcmovnu call push add out xor push dec stc faddl lret int3 adc fadd fisttpll jmp incb jb push xchg dec xlat cmp mov jg mov mov adc cmp mov inc loope incb fucomip pop movsl and push push jge cwtl fdivs fldenv cmp xor push sub mov outsl adc insb or push push ficompl loop outsl mov lret lock popa stos cmpsl add enter mov or lret mov popf mov mov ret jle push shufps (bad) out cmp dec int adc adcl inc jg aas ss or inc arpl jle jp in or pop sarb dec cmp (bad) lods pop push cmp sub adc and jno push xor mov adc sbb push xlat ja mov pop mov jl dec jbe mov int3 add dec jbe rorb cmpsb add jg dec inc sub sub mov push inc loopne inc mov add pop xlat sub jne and popf mov xchg and cmp test dec adc and cmp insl js mov neg mov in inc addr16 jmp mov stos pop xor ret sahf and push lcall (bad) mov js movsl inc fwait pop or cld test insb ja stc cmp sar lret pop ret inc sub xchg xchg cmp out inc dec int3 mov or inc sarl dec inc mov mov data16 xor jne pop mov pop ja jg arpl inc add sahf push (bad) sbb popf out inc test outsb test test push mov mov pop add pop inc jp aad add pop js mov inc push (bad) std sub inc in adc ja addr16 sub dec cmp jno mov (bad) push or sti lcall dec nop aad (bad) in lcall push pop mov enter jno mov fidivl ficomp aad (bad) jne loopne pop mov xor pop out push jns adc sbb add add adc push xor outsl ja inc jb cmp std loopne mov xchg fdivrl inc cmp popa push xorb icebp sub add or std or decl (bad) dec mov sub xchg jmp cmp jb rcll push ja xchg add add notb mov (bad) cmp call push sub inc sub or pushl add inc or sbb mov roll mov adc jne or jb and and mov lods js jb xchg mov in rcr in mov inc cmp jle cmp jge xchg insb arpl or fcoms inc roll push and cmpb lock int adc test or push insb sbb cmpsb push xlat dec sub push mov mov mov movsl mov or xchg cmp add jmp pop add mov fs movsl mov xchg add push push out push pop out pop jno je je and test enter cmp (bad) mov add xor stos push ss cmp pop sub stos mov xor xchg cli fbld mov mov std lcall mov sbb sahf cmp fs sbb mov push clc sti fistpl (bad) mov jmp (bad) enter inc aam (bad) adc jo jecxz jo pop cwtl xor inc adc jmp dec push jne nopl jb (bad) imul cmc push or push sub pop pop test outsb push sbb lods (bad) jo pop push cltd sbb frstpm(287 inc call push and outsl pusha lss add sub repnz or adc mov inc sub daa (bad) jne adc push inc dec mov push pusha jecxz adcl cmp dec sbb fs fwait cltd fmul (bad) je dec shld les or xchg rorb lods gs mov xchg int loope inc fidivrl or jge sahf xor xor das push push lcall sub test xor dec and lock dec (bad) lret push sar pop push jno push neg sbb inc addb js ret (bad) or or pop cmp jp or je dec and dec inc adc inc fwait (bad) or ljmp dec and pop or insb cmp movsb mulb pop insl cmp add cltd (bad) ljmp cmp mov clc pusha movsl loopne sbbb jle jl repz loop movl inc insb push fdivl add vpabsb xor ss mov push adc mov jge mov cmp jge fld inc or or movq clc movsb jo dec mov cld jb ja push or push not in push arpl fmull cmp bound jp jne in stos fsts mov push sbb (bad) pop mov add (bad) aaa cmp push push sub or add mov addl lods outsb aad icebp adc jno add lock xchg and add mov pop mov or or adc imul cmc roll gs stos adc imul pop mov lea xor dec pop das jo cmovb movl insb rcrl pop push jmp and mov adc rorl jbe icebp cmpsb leave andl add add out add mov stos jge data16 mov mov mov (bad) pop adc jl add loopne outsl rorl div outsb and add je out rcr pop xor popf int jl shll jge sub xor les dec adc dec clc mov out std jne mov inc (bad) xor add and inc add inc mov ret insl (bad) call cmp (bad) mov rorl or fmuls jae mov or jecxz arpl jno out add shl jbe insl and add xor sub mov movsl orl mov xorl orl sub mov or or je xor fstpl sti xor imul sbb add mov scas cmp pop pop jmp push sbb insb (bad) xchg adc add aaa push dec inc xor mov xchg dec adc cmp pop leave xchg push add rcr or inc cwtl adc sbb mov outsb push push xor push js mov jecxz ret pop and xchg inc shll ljmp add or add inc test add movsl pop add xlat xor xor sbb rorl fstp dec push out jne pusha loopne and mov mov or or cltd mov into xor pop jb out mov in call rclb push push cmp sub add push icebp sub add mov mov sub arpl inc sub (bad) scas or cmp in add repnz cmp nop inc cmc div in inc push clc stc cli nop inc push cmp cld std dec fstpt in incl dec into addr16 rclb jb adc xchg subb dec out or ffreep out mov cmc mov divl mov xor mov pop or scas mov fs lea jmp adc je or insl fidivrl sbb sbb nop sbb out int (bad) add dec fdiv mov push xor cwtl lock scas push rcrl daa push mov mov (bad) lea add jne push sti sub adc fsubr add mov sbb pop pop adc (bad) je sahf mov jle jle mov shl div fistpll notl or mov or jne js xor push mov aaa jg mov inc mov mov fmuls pop shr and mov pop pop popf and jle nop inc jmp popa shl pop push or fcoms adc push cltd fiadd fldt sub mov ja cmpsl insb pop pop sbb inc xchg add inc cmp xchg shll out inc adc xchg xlat xchg mov push movsb rclb mov inc mov adc push and stc sahf mov mov sbb ja ret sub test xchg mov mov add mov push xchg cmp (bad) or push pop lock call (bad) adc lret call pop xchg mov shrl ret or lea add or and sub push sbb sbb xchg cmp pop and test fistpll jle add cmp mov jg std push shufps push or lds jle int3 sub mov add or shr lock popa ljmp jmp lea rclb pop dec jge cmp ja outsb je jmp mov push push test dec aas cs mov and xchg incb enter jle mov xor xchg mov and push adc pop lcall fmuls repnz repz ret ret push and aad or mov cmp (bad) push add mov shl cmp orb mov fistpl inc mov lret xchg movl (bad) pop sbb in ss mov nop and and pop inc push jge mov ja (bad) push push stos sbb pop rclb push (bad) je (bad) add and jns or jbe lock int in sub push orb shrb insb mov adc sbb ss dec add xlat jb sti sub lea mov imul cltd movb aad push push add test or jl xor cmp std add inc mov inc inc xchg xchg inc push push (bad) xor push dec jmp or and adc push out fs push pop jl mov (bad) push add mov mov jmp add jbe inc repnz adc inc lods rorl xor xlat xor mov xchg push jnp pop insb inc xchg adc lds mov mov (bad) fimull sahf or scas add xor adc sbb mov loop mov push cmp jb inc jmp mov mov cmp rolb fimul xorl lahf add sbb xchg inc out mov pop inc les lcall decb loope fsubrs dec cmpsl mov and ja in data16 leave jl add add outsl lret lods mov mov ja sbb lods mov lea sti daa mov jg xor mov jns ss and or test cmp jb jne mov (bad) ja xchg mov scas mov jb cld das jne sub jbe fbstp sbb loope mov jns mov jle mov jb shrl nop lods test push sarl xor sbb loop add mov daa lock push sbb jo pop in or pop xor shll movsb pop stos inc fdiv (bad) cld into jb (bad) jmp pop mov (bad) push ficom ret popa mov out jg ret adc push inc popa mov xor or cmp cmp pop orl lds push jl or cmp jg xchg and inc mov (bad) lock mov mov and orl movb mov (bad) jp inc lea add mov adc daa add push mov adc push push ret add add int push imul add mov mov pop or scas sub add sbb fwait mov mov pop add push out add sbb (bad) mov dec mov pop inc sbb adc sub inc test dec cld dec sbbl js jne cmp outsl xor cmp fsubr sub or (bad) fbstp testl add push dec pop iret mov mov test nop jge pusha je jne or add and and inc loope outsl mov mov pop loop or add shr (bad) dec arpl jne dec mov cmc xchg ss xlat js rorl leave je pop push dec or mov mov inc push sub push and (bad) scas dec jne pop pop xchg data16 sbb sbbl lea sbb jne and mov mov and mov push mov nop adc mov jo outsb (bad) jbe jne dec mov fbld jg inc adc roll cmp mov sub out or out out pop pop mov inc or lock pop xchg shll js pusha cwtl pop jl lcall mov shrb jl dec jmp clc out mov outsb cmp jge add jbe dec xlat jmp pop cmp lds test adc xorl cmp jg or xor rolb sub sbb rorl or inc lds sbb outsl mov pop pop insb pop push adc aaa push inc jg icebp sbb (bad) (bad) call and in jle insb jno pop (bad) icebp xchg cmp sbb push mov mov xchg mov pop xchg add add add dec adc and sbb add jle adcb or cmp or lea in jle push sbb sbb mov fs test rcrl sub imul lds aam mov (bad) dec push rorb iret cld mov mov push outsl xchg (bad) adc pop cmp inc pop push dec xchg arpl or xchg js aad ja xor fs jae hlt jle jl add rcr mov jmp inc dec pop cmp inc or xorl js in dec cmp xchg push mov mov aad fisttp xchg test mov add xor mov cmpl xchg adc (bad) push or add rclb mov dec or aaa lock xchg lods in mov hlt inc (bad) andl sbb add pushf pop add nop (bad) add ret andb imul sahf sbb inc add popf cli pusha push fsub push jle ret add or enter mov cmc add add inc pop sar sub add mov push mov mov xor add mov push mov adc or fistp pop jp mov adc les push ljmp fsubr pavgw sub or sbb mov in cli push enter loope sub xor pusha cwtl outsl xchg sub push inc inc or adc adc mov or cmp (bad) ss test cmp mov xchg add push mov xchg and xchg inc (bad) shl das nop popa andl mov sbb mov (bad) xor nop lret mov sub inc fdiv (bad) dec ret xchg add add adc andb lcall mov es push sbb mov cmp jle fadds add ss fsubp add jecxz mov fadds je xor push cmpsb cwtl fwait stos int3 test cwtl stos or test lock jo mov mov lods sub test sbb daa mov in add and mov arpl sub cmp mov xor fidivl push jb jmp push xchg push bound dec cmp lahf (bad) out outsl or shr push cltd mov jno mov ss popf add lahf xchg (bad) lock mov test inc mov fs pusha mov pushf sub jg adc push out rolb mov mov xor dec loopne push fwait insl mov xchg push lock mov mov lcall add lds sbb (bad) mov push test (bad) out add jmp push inc mov pop cmp (bad) lret (bad) mov sub inc pop and adc add ja mov sbb dec stc mov push sbb in loop fwait addr16 cmp mov bound xor mov and out add xlat pop setbe mov into add cmp (bad) push hlt or outsl pop icebp and or shr shl dec in lock pop andl rolb xchg popa inc cmp dec leave jo xor dec rolb leave (bad) repz add inc inc add inc mov mov je clc cmp fisub push fisttp or dec pop mov xchg sarl sbb mov mov inc enter sub and cld mov (bad) push mov add adc (bad) mov dec sub push aad rcll jnp add rolb shlb adc not push rolb mov mov add and push and pop movsb mov add dec mov mov cmp add pop ret adc or cmp mov sbb add add or movsl inc sub lcall add push popf clc adc (bad) repnz mov or push inc cmp push add mov sbb sbb je adc ficoml jge jo mov adcl aam or push push daa inc mov dec clc mov mov sbb inc and or nop mov shrb inc push push push mov cwtl ret sub push and add push push les xor push ret sahf call cmp rcrl (bad) and cmp cmp inc mov int or out mov enter mov adc rorl sub das push jo sar or xchg fidiv cmpb mov mov add dec pop or inc jno pop clc dec insl lock dec xchg mov sbb and mov das jb xchg sbb mulb js loope push push mov push or xchg arpl fcomi fwait sub add sbb shr xor sub aas mov outsb lds adc push inc push mov or xor cmp jne pop ret stc mov pop and sahf cmp mov push mov add or add mov sbb push je xchg das pop push add pop adc cmp nop add xor add mov and data16 inc fsub mov mov mov dec repz mov mov aam into mull pusha ljmp outsl fidivrl in mov cmp testl dec sub push add sbb adc mov iret dec sub inc leave jne and jae scas or mov bound rolb dec push jmp je mov xor push sbb mov and add jae imul mov xor dec lret insb in adc push fs sbb cmp repnz mov push xchg and inc cwtl insl sub pushf push and push cmp (bad) jne mov (bad) cmp add mov sub xor (bad) or mov je lock add mov sub pop test call mov (bad) and sbb inc cs jo mov mov or adc xchg sbb lods and shlb and mov mov mov in cmp mov cli mov adc push shr jge test and and (bad) mov in pop out push inc push inc lods loopne movl pop (bad) or or rcrl ret push cmp ffreep dec add cmpsl push mov or adc mov mov push jp xchg or mov jno sbb or sbb pop mov ja mov xchg xor and inc push sub pop aaa and or jle fnclex dec and push or push push (bad) mov inc pop add and out or imul call push popa shrb sbbb orl push cmp jae divb loope ss push in or sub incb sub mov xchg shll push mov add ja inc int3 clc adc sub mov push inc cld push test cmp cmp mov repnz into pop ja sub inc jnp cmp jae sahf bound mov jb (bad) lret mov outsl and scas and add push adc lret mov inc loop pop in jecxz fmull loope mov popa and mov xor inc add mov rorb xchg adcl mov jmp inc dec (bad) cld ja sbb lcall and or jne dec and push push push inc sbb fild sbbb mov popa mov add fstl add pop inc or push out nop in sbb cld and mov xchg hlt push xchg sub xor test sub push dec mov scas jnp aam xor mov xor test push or jnp xor push lock pop popa shrl loopne push das dec pushf push jbe or dec inc sbb inc xor cmp sbb shl fsubrs push mov cmp leave jae iret mov mov lret hlt dec sub or ss (bad) adc ret fsubrl faddl mov flds push push cmp (bad) mov (bad) std gs int outsl sbb insl rorb xlat push pop dec cs dec xchg in dec push dec dec leave mov mov lret imul inc jnp cmp and inc mov inc test (bad) fidiv sbb cwtl sti mov dec push mov inc inc sbb or and pop pop adc test test fcomps test enter cmp adcb fcompl das mov dec add enter test push xor push push push push fisubr adc jg and les bound lods sahf (bad) (bad) and push mov inc sub mov push rorl xchg sarl cmp jne push xchg dec push aam jb inc sub xor nop jbe leave cmc push push pop cmpsl lds ja shrb sub push imul pop sbb stos inc and xchg in es (bad) lret adc inc and xchg test or sbb mov out xchg ljmp push mov adc nop insb dec aad or in sub cmp xchg jmp push xchg dec push test sub xchg cmp sub mov mov aas int3 pusha dec xor cmp pop xor pushf (bad) je cltd and mov (bad) in mov cs shrl inc outsb out push push data16 and adc mov das aaa lds pop and mov ds inc dec (bad) adc xchg mov add xlat pushf mov push inc dec push or push enter mov in inc lea test sbb lret data16 sbb lds cs repz stc jne daa or in mov push cmc rsm mov out or add imul xor mov test push jle dec push jl xor jno push rclb add dec push push lds loopne,pn sbb and pop pop mov xchg or dec adc or shl in loope xchg inc rolb into pop and dec or in jnp xchg pop xchg push mov call push fwait and aaa add xchg dec pop add fs lret mov (bad) mov inc add adc (bad) pushf inc sub pop push fwait mov xchg in ffreep xlat lret inc inc outsb pop pop mov repnz out mov mov add mov hlt bound push sahf sbb sub cmp adc and cmp das jnp test mov je adc add addl std call int3 dec sbb dec test inc mov sbb fsubs std sub outsb mov sub mov inc sbb push inc (bad) ret mul (bad) xor nop (bad) jae enter (bad) mov or push jnp push lods and repnz xor push mov loopne dec and sub shrb fdivrs pop shrb dec or mov mov add fbld lods test je in loope and hlt jmp (bad) mov popf cmp sbb (bad) sub dec repz test xchg mov mov add dec sbb adc adc inc enter pop add adc fsts jb cwtl sbb pop sbbb pop mov sub sub pop add push scas fimull ss insb or loope ljmp sbb dec pop dec rcr jnp jb cltd decl loop stos pop add sub cmc adc inc sub sbb and xor rcl es adc dec scas or arpl mov stc mov adc xor lods or mov sbb dec add dec loop and jmp fistp ret sub adc mov dec pop or pop jne pop sbb sub push add mov in cmp xchg inc mov ljmp (bad) ffreep mov inc mov (bad) pop insl jmp adc roll sub sbb sbb mov or movsl adc inc js xor out inc sbb push push fdivrs mov dec push dec das push mov dec add out cmpxchg sbb push push cmp cmp sub std sub inc dec mov dec fisubrl cmp in lahf xor lds data16 cmp fstps pop adc mov mov inc enter aaa dec outsl mov and or imul add cld dec std divl add divb jmp add add sbb or xchg push or dec lock push push cwtl and daa (bad) and push pop das into mov sbb push sub (bad) (bad) mov mov jo push or and push pop adc push mov cmp push (bad) mov add xor inc add inc fstp jbe (bad) lret pop dec push sti je fisttpl dec pop jmp pop adc cmp mov sub sahf ds add aad ljmp rclb jo call ljmp pop pop pusha fs insb jo js mov push test mov std mov ljmp dec mov jne cmp pop jge mov xchg mov sub push fidiv ret add sbb cmp cmp mov push adc add cmp dec sub cmpsb jbe xor ds push pusha bnd mov cmp jne dec sub cmp jne cmp scas sub push add fdivrp outsl cld pushf sub out jae lea sub js push ret add mov jb mov lds mov dec add repz adc pusha inc mov jecxz jg mov je xor add dec addb pop jne fstpl lds pop outsl iret mov cmp adc cmp or inc mov and sbb inc cmp jb sbb xchg or cltd push adc mov cli (bad) xor xchg sub popl aam loop in pop sbb cmp (bad) cltd add inc adc arpl mov push add jmp test mov inc and mov and sub adc mov pusha inc sbb insb adc and jmp add inc add mov popa push dec dec cmp pop mov push xor test push or out shrl daa ja or insb insl add jle add mov decb or lds pop sub adc mov mov (bad) sbb outsl fdivrl out add fidivl hlt push fist pop mov push test lea icebp inc dec mov je sbb je mov adc dec mov sbb fwait loop dec rol sti mov xor fcompl (bad) icebp sarl mov je jmp test add test cmc test cwtl jo sbb rorl ss jno in movsl in pop movb dec mov pop stos ficom cmp jae mov test add xor jmp jbe add out mov or ret lock inc xor and jmp ret enter mov lret mov cmp and inc jno test mov icebp sub lea and mov mov clc shr pop jne inc fwait add inc in or mov lea (bad) dec and (bad) je repnz sub sub imul sub sbb mov rcll dec call xor cwtl lahf pop and mov add fimul mov andb push and sub jb push dec and outsl sub mov sub inc sub (bad) rorl sub ljmp sbb and je add inc jbe cmpsb aas ds sbb push mov push jbe (bad) call mov add dec push push xor mov xorb inc mov (bad) ljmp insb xchg clc addb jge fisttpll push push dec jne daa sti (bad) and pop ret shlb lea pop jl push mov hlt dec jp inc sbb repnz push hlt push mov sti jne mov (bad) repz call mov pop das and pop push xchg mov (bad) sub pop pop aam pop sub pop notl xchg or jne mov scas mov adc xor jg movl adc add mov inc and cmp add in inc test in jbe adc sbb adc (bad) icebp xchg dec stos in je adc shlb fist mov inc cmp mov ja or call mov repnz data16 mov fsubrl lds dec sub std mov xchg test push inc xor sti data16 sub mov jl mov sub and sub inc push push mov (bad) (bad) rorl ja pop lret daa shll pushf xchg mov xor push or xor pop mov jg sub or dec jnp inc mov pop jge,pn and xor xor sbb pop cmc inc sbb decb or (bad) dec jecxz add mov mov sub mov mov push push add pusha and pop lods dec fistp movsl pop or inc push jb mov (bad) pop or and rcrb lea jmp loopne dec add ljmp out test jne add dec mov or jle add add cmp pop nop add movl xor mov ljmp fnstenv xor inc mov xchg iret and xor es (bad) jp jmp cmp jg fimull push sbb mov je cmc lcall cmc xor div xchg mov pushf sub add push jb mov jbe (bad) (bad) out cmp jbe sub mov mov inc inc dec jne je jbe in outsl addr16 cmovns push push mov adc jp dec push aaa js jbe sbb push add (bad) cmovbe cmp daa or sub (bad) xor mov adc lods xchg jp loopne test sbb jno or mov mov in mov rcr ficoml fdivs or dec das push (bad) mov adc dec mov inc mov sub fwait inc or test push pop sub rcll xor adc add jnp je push and mulb jle fucomi mov data16 cmc insl xorl inc mov mov push sub xchg push inc mov (bad) add push add int jae enter stos shrl jbe cmp (bad) movsb push std pop in xchg cmp cmp jmp lods fistl sub xchg pop pop xchg jne pop add and or inc scas adc outsl fnsave push adc insb std ret mov or loopne enter adc cmovno push pop aaa pop xlat in pop fmuls push and mov mov mov mov add (bad) gs sbb pop int3 lea in pop xchg mov add add mov sbb sbb mov inc cmp sub and loopne cmpsb imul (bad) je mov mov (bad) in call dec in in lock hlt inc dec (bad) xor clc cld cld push out pusha aas rorl mov hlt mov add adc leave xchg mov rcrb std adc nop adc push sub lea jl cld test addr16 or loopne neg imul fucom pop stc in sub hlt pop or pop popa jae insl add outsl push out jbe inc inc cmp dec and mov sub pusha sub xor mov push mov pop xchg push pushf add mov (bad) xlat fnstenv ret cld mov pop sbb xor rcll adc or (bad) xor or or fwait in mov add mov (bad) mov test add and mov inc mov inc call sub adc cmp jmp std inc (bad) jbe pop pop sti call imul cwtl std cltd js sbb lock push cmc pop jae mov fbld (bad) jb outsb and test pop push add pop push inc je sar (bad) or dec pop mov and push sbb lret add fisubrl push push push and sub orl pop inc das add aam jne push pop pop daa mov std xchg or cmp inc jecxz xor jb or add add xor (bad) and in decb dec push sbb lock sbb pop add ret sub inc mov sbb int3 add in popa lahf in jnp aaa sar adc hlt pop pop js add pusha cltd scas xor pop lahf in leave add jmp push enter pop cmpsb imul add cld add nop aad or loope jb push xor test pop sub xchg or cmp push jmp sbb add dec push pop fs sbb (bad) ja lahf and add push lahf dec lahf ficomp jo repnz mov and mov push push mov test jle or or or scas pop ljmp loopne mov push scas mov or jo stos push jno pusha add imul hlt insb ret test std add mov movl insl mov es ss dec xor mov pushl push sbb sti mov subb addr16 movl adc sub fsubrs movl sub mov scas mov push jl daa clc inc push pop (bad) pop cs sbb jae pop or pop adc add (bad) xlat std pop sub add inc jo pop jno mov pusha cmpsl add sbb in jmp jno test movb arpl insl out sub dec insb mov add adc mov or call pop test jne daa inc jnp insl aaa daa push mov mov pop arpl or aad neg jge std inc jo jne adcl mov pop inc add xor cs add sub lods incb mov push mov cmpl js psubusb push pop inc push pop adc inc sbb insb or movups sbb mov loopne mov clc arpl jo mov adc mov mov add or mov dec sbb xor jae fsubs xchg sbb and movb jg jp insb jl lds sub fdivl push sbb xchg ss jo push clc push push dec or (bad) (bad) push (bad) jo das inc sub and push push adc enter gs aad stc lahf gs or cmpsb dec jmp adc adc inc xchg aaa pop cli mov mov fisubl ret outsb pop push inc scas pusha or dec inc rolb sbb push fs fs inc jns cli test (bad) jo cmp lock xor data16 sub sbb xor fucompp fwait test ds inc pop push adc into mov je rep pop or ljmp ret sahf ret ret adc fisttp stos movl decb int dec push inc dec or push inc cmc out xchg mov mov cmp je adc push jo sbb pop sbb sub mov imul pop add xor (bad) xor adc add adc mov and mov ret cmp jle add and mov dec flds add xor xor pop (bad) mov add or sub movsb cmp and inc lcall lods cmp (bad) lea loop or or or nop outsb in mov add es push push cmpsb mov fs jg inc adc pop adc adc jne adc adc and dec jae or adc cwtl ret add adc xchg (bad) adc adc fs sub dec cltd adc nop adc out add pop (bad) sbb cmpsb xor sbb sub xchg or sbb mov popa int add sbb (bad) cmpsb jnp dec mov jb sbb sbb sbb sbb dec jae inc pop pop xorl jne add add sub pushf addl ret iret cmp xchg pop inc aas inc (bad) mov (bad) cs adc mov cmp je dec repnz mov repnz rol lea dec aad add mov imul sbb pop (bad) pop add (bad) call adc dec daa dec leave add std das jo and sub ljmp (bad) jmp out in in and mov in dec mov xorl adc jge out enter mov lock add lock xor and in fwait dec and inc repnz enter repz imul push jmp hlt dec mov es and divb div popl inc cmpsb cmp clc push jmp dec adc and dec xor lock cli cli test sti mov in cmp outsl cld sub adc pop dec xlat inc std sbb sbb outsb xor dec (bad) adc jmp jne mov ljmp roll or mov xor push or test or jecxz adc rcll sti in and movsb leave fdivr and cld adc sti out out dec cmpsl mov outsb call inc push and sub pop pop jmp jmp inc dec pusha dec (bad) in add and cli pop sahf pop pop mov out out cmp push lock push cli jns pusha or add fs sar and pop inc mov mov arpl (bad) cmpps rorb add cmp popa jns pusha (bad) sti push cmp mov roll addl and fstp add dec add scas lods pop adc jle nop insl nop dec (bad) mov (bad) enter outsb icebp mul sub mov scas imull dec mov and out sbbl jne sub idivl mov test enter cmp mulb mov jns xor mov insb out out and mov cmp dec scas sub and pop inc pop add mov pop or sahf cmc repnz nop pop mov and jae xchg xchg or dec div dec pusha scas mov idivb mov and imul divb and hlt stc xor push fmuls in push inc push cmp and dec enter mov push out das and (bad) (bad) xchg xor hlt add in decb inc xor dec insl aaa add add pop xor adc push loope loope cmp loop scas repz sub fwait mov in adc add mov nop push inc push iret or mov bnd jmp aad bnd repnz cs sbb repnz or inc in in jns sub add pusha or xchg inc loope mov arpl mov icebp lods leave add push dec xchg inc nop inc leave sub push icebp lret enter sub cmc mov jp icebp xchg nop inc pop jp lock sub push ret inc xchg out popf lock stc lret push jns lock push gs lock push lock js xchg insb adc test sbb in inc push mov cmp sub mov mov add sub jae push ret mov pop push add and leave add add mov add dec add andl jo add xchg inc jne test orb sahf inc push mov jb dec add int mov xor or outsb jg cmp add daa add sub das adc push mov popf sub test and mov add (bad) and pop punpckhwd sub and fisubrl cmpsb imul sub (bad) mov insb rcrb push arpl dec mov dec adc mov pop aaa add add fsubr add jge mov std or je fldl jno pop pop mov inc add call xor daa loope cmc push fisttp das pop cmpw insl mov cmp cmpl outsl fnstsw pop cmpl stos jo addl xchg shll ret push push sbb nop sub add add add add push test pop add sbb sbb ds sub and jae,pt mov cwtl lock ds inc inc mov adc pop inc (bad) std pop mov enter and mov icebp (bad) adc or dec mov shr push fadds xchg mov cmp xor dec push sub jnp dec (bad) jbe sbb add or push rclb add dec ljmp fildl test mov fld imul cld and fldl jae das stos (bad) lret outsb je push and pop mov sub push pop push mov mov mov loopne fildll mov mov clc inc aas mov addr16 jle add loope gs out ret add mov adc shrl movl push push cmp add sub pop sub iret jbe push pop fildl push das or sbb or add xchg repnz add add pusha mov fadds jae shll push outsb jl loopne imul stos insl add lock cmp in adc aaa push push inc pop sub push cltd lret js mov daa and mov adc dec add rclb jne lods adc sbb fcoms cmp out inc dec xor xorb mov xchg push lea scas (bad) ja ret mov pop jne adcl cmp les cltd and add arpl (bad) push aad mov fdivrs js sbb sbb ret ljmp xor stos or rcrb sub cmp (bad) cwtl pusha or or loope xchg push adc jbe mov jg or adc push sbb cmp mov in fisttp adc push or int3 test xor mov lods mov pop sub pop jmp lea frstor fildl dec adc and jg add (bad) jg jg outsl inc add push ss jle sbb jg jg out or lea add (bad) dec jne mov add jo jno mov pop adc ret cltd mov sbb jno dec (bad) into clts adc xor scas adc cli jbe mov or jne mov into pop jg jg add adc icebp push push loope arpl les push push ja pop pop sub outsl and sub bound fsubrs fsts inc sbb mov insl jno and movsb sub push jecxz xor arpl adc or in mov add cmp push add dec ret jno ljmp ret and xchg lods test hlt adc xor inc imul or sarb das cld lcall sbbl pop jle xchg push jmp push push lret loop cmp (bad) jo add cmp inc adc jl sbb push push mov pushf loop sbb inc adcb sbb sub fdivs mov push push mov push push js out js mov loopne push and in lcall add rorb out or cmp jmp push mov and loope sbb push mov rcrb mov sbb (bad) decl or or orb cld shrb sbb sbb pop adc dec mulb mov xchg mov lock cltd insb adc dec xchg push in out xchg lods pushf sub or pop scas add sbb (bad) aam nop cmpsb pop mov inc cmp aam fbld mov pop sarb push add inc jbe ret cmp pushl mov or mov ret jae movups fcmovu mov add inc mov push shrl insb pusha in (bad) std ret jp insb pushl push les (bad) mov sub cmp sarb mov xchg xor outsb mov aaa dec push mov test add in data16 add pop inc and mov stos and popl add insb scas push or jmp adc daa adc fsub test mov adc pop inc or and or and dec adc popa lea xor and xor inc dec adc cmp adc dec scas push mov mov push pop add dec jno xor test cmp fucomp and aas dec pop cmp jns or out push add sbb and es stc push mov add or cmp jae sub mov je shll push in sub cld pop mov mov (bad) xchg jmp or insb movsl push adc in mov add and push inc mov test jmp cmp and test es mov iret loop or mov fldenv adc mov or xchg pushf cwtl mov sbb insb mov mov push push xor dec mov les cmp xor xchg sarb jmp addr16 push push int3 sarb pop jne cmp push or aas xor adc pusha add and popl or sbb inc mov adcl cmpsl inc jecxz push add insb mov enter dec mov ljmp xchg ss stc fist mov mov mov adc cmp dec aam jg aad mov aam inc test loope iret or jnp push push mov loope xor add pop or stos fs fsubp mov les jl scas mov or sbb repz mov (bad) repnz stos add rol inc dec push adc push in in or ret or push ja xlat insl mov movb jb pop pop adcb popf jmp fstps in gs shll mov jmp add xor or push add icebp lret cmp pop jbe jmp fimull cmc ja cmp cmp or add mov add xchg push and fcmovnb fs adc or adc add in in cmc enter jne push push popaw add mov mov fdivrl jae push jb pop push fsubrs lret push fldcw add adc or jo bound pop rcl std imul cmp sarl in mov mov loopne or inc es roll and xchg lahf mov pop and cmp mov cmp jb mov xor and push int3 jmp push jbe mov mov in mov mov cmc sub dec or push je add add add sarl pusha out inc add push add bound push mov push jbe lea add or add icebp lock or push cmp add inc or adc xor lea sub push lea outsb das fisub inc jp data16 mov or jge adc mov dec push pop pop add cwtl inc mov adc mov (bad) jae xor test test (bad) imul jnp pusha fstpt je iret xor sahf push stos adcb push adc push test add imul decb pop mov or mov pop lea sbb sub adc xchg mov imul rclb call sub lea xchg jnp dec aam mov cmpl (bad) mov xchg sub jo and es daa mov je push scas test sbb and push adc imul aad pop push cwtl and fwait mov and cmp dec or jmp cmp cmpsb push lret inc mov push and aaa ja pop dec push dec pusha push mov popf test imul xlat mov cmp jne dec int3 push sub cmp icebp pushl or das leave push xchg rdpmc mov test fcom mov pop push insl mov lahf js loopne mov ret mov jne aam popa or dec mov add aad adc adc and sbb mov mov scas lcall loopne rolb inc inc je pop test mov push add out lahf sti fnstcw movsb mov pop into inc push repz (bad) pop lds call add roll cmc adc sub mov xor sbb out sub fnstenv xor dec mov mov ss inc (bad) inc mov xor push cmp inc dec jne cmp jo mov ja into or xor int stos push pusha loopne and call mov jmp mov add mov dec jne dec pushf xor and and ss add mov test xchg pop and inc and enter inc dec or cmp popf sub sub sub stc xchg clc ret pop cmp mov push adc mov ja push cmp (bad) (bad) rcrb push jmp clc or mov aam sbb xor incl (bad) jae icebp shll push and cmpsl test rcrb xor rolb cmp push sub and and xor pop aas jle mov int3 xor add and loopne test dec adc add mov add mov jecxz fwait ret push aad stos jo je mov mov mov add outsl and lods dec adc sti sti xchg bnd lea gs ret or cltd fs std cld (bad) add add mov dec (bad) mov out add or sbbl lock or mov out jle (bad) push aas add jg punpckhbw push inc sub mov mov and lea inc add adc in xchg call lea sbb or add or scas (bad) cs and jp rolb fdivs push mov cwtl mov movsb mov idiv pop or test and pop mov mov add cmp ja cld pop mov or inc add push xchg inc mov and ss fsubs jbe gs add scas cmp lea push insb loopne test adc ret xor call add test push fcmovnu and movzwl ljmp adc mov adc je and mov daa jmp movb shr sbb mov (bad) lahf js sub mov lea adc cmp ja dec push pop roll ret cmp push and and mov mov cld pop inc cmp add mov xor pop aad sahf ret lds clc add inc jo cmpl mov ja adc push nop and add mov push sbb mov out pop in fbld mov inc cmc aam add cmp mov inc das mov push or sbb mov sbb clc fsubl jle adc add dec sbb push pop lods inc shlb add or pop pop jno and pop add push xchg xchg xor (bad) pop adc arpl push and push push inc rorb stos movsl jns mov lods add mov out pop jge push lea imulb mov add mov jp add or and std roll or test pop and mov pop hlt xchg xchg movsb add pop adc lea or movsb arpl rolb inc icebp movsl pop orl jne push cmpb iret dec pop mov test sub ret (bad) inc mulb imul (bad) leave xor lea mov popa sub in xor in fidivr sbb inc cmp jbe popa loope ljmp mov mov testl jge add cld jo jnp jmp inc or (bad) push pop test push movsb int mov test or inc pop cmp fisttpll fsubl inc inc pusha repz and not sbb ret add negb cs inc jle test loop mov mov inc test push push cs xchg mov adc sbb sub (bad) push mov mov mov cld notb or xchg inc scas dec loopne cli clc adc add pop mov push and sahf push mov sti rclb push jl add inc or push sub pop mov sbb mov sahf frstor (bad) cmp pop cli xor cld pop jne push add sbb adc push mov pop cmp pop call repz lds vpsadbw or xchg mov pop dec or or or adc (bad) mov add sbb data16 mov inc jmp sbb std pushl cmp dec sbb mov outsb scas scas jae mov ja leave and jmp (bad) or push mov sub dec mov mov mov call push push mov (bad) add pop loopne sub lret pop push cwtl movsl mov push adc int3 pop mov adc icebp sub xor cmp adc outsl shrb sarb xchg adc or dec pop adc mov and loop fsubr inc insb mov or mov cmp inc inc or push xchg in pop mov (bad) adc or dec sarb aam pop add pop xorl aaa jae pop mov pop cmpl (bad) je cmp cmp fs pop mov add mov fisttp leave ja sbb add xor mov in and push pop cmpl mov pop pop cwtl je lds ret adc idivl loope dec adc fnstsw mov mov sbb and push add rcr rorl mov xchg je aas dec rclb (bad) les fsubrs fstps xchg xchg or inc loop adc bound sbb jo jle xchg inc inc sub push fild inc ret call test adc cmc or inc shlb mov mov cmp imul pushf inc repnz push lret or add or cmp and js ljmp cmp jle push and sub sbb lret jne or fwait sub mov add mov ds pusha mov xchg adc and push mov inc and and pop and push mov and sbb mov daa (bad) xchg or inc push out pop div pop ja push inc aas or ret stc jb mov rcll les ret imul bound in inc or or add dec push je mov enter cmp std mov push imul cmp inc xor (bad) mov mov mov testw fsubrs je dec sbb shrb (bad) cmpsl imul cmp out test inc mov xchg cmp push hlt fcmovnb jnp stc push push mov sub lds cli pop add cs arpl outsb out adc and jmp outsl or lea push (bad) fadds aam in sub mov jmp out or pop mov or loopne test loopne sub jo lret cs add aaa adc mov popa and xchg sbb cltd sub xchg test je dec lock push jle outsl or sbb inc notb jle sub test pop loopne cmp sbb sub adc out ljmp mov push adc push jmp adc add hlt jno adc sub cmp in mov sub xor and push push add adc sbb shlb xor aad std or test mov mov sbb (bad) (bad) (bad) jnp int pop jp int3 push mov or mov sub cwtl mov je xchg (bad) push les rcll xor iret pop aad (bad) call push push add test inc cmp jb mov dec in pop adc jns and lods ret add clc push pop cmp xor icebp add adc fdivs adc test rcrl inc and enter add call sub push dec ja pop aad jne cmpb jmp or add cli add or clc or adc sbb adc inc aaa mov push adc sbb jne inc hlt mov test mov and add sarb shrb pushf add push cmp or outsl rcrl xor loopne sahf inc push pusha jo mov xor push inc and aas mov dec sarb loop mov lret cwtl loop sub push mov adc insl inc add ret push cmp add cmp rep into cs les push xchg sarb push lock push adc enter push data16 dec incb pusha mov pop cmp outsl mov jne aam and cmp (bad) cmp stos mov mov push xor or loopne inc inc cmpb orl sbb jnp jb add xorl add push add ds or adc xor mov ret test sbb xchg push or stos dec dec dec stc flds cmp add inc aaa push popl andl sbb jns xchg hlt shrb pop and movb loope mov push add add fbstp push add ss in fstpt mov or out cmp (bad) stos mov lods sub sub sub cltd dec les call not jge popa xchg sub push stos nop std add outsb stos pushl aas push mov int inc and push dec add push and call bound mov jnp ljmp or stos and adc adc or adc xchg jne push sub or push push repnz mov lret mov mov add push insb lret cmp rcll imul add add jg pop or jge jae (bad) inc adc inc sub fistpl or sub dec daa cmp jne pusha inc inc mov or adc fimul pusha inc pusha andb idivl pop or (bad) ljmp add xlat jge imul jle mov cmp sbb push inc add nop cmp add loop (bad) mov daa fs pop jge add pop mov adc orl and cmp adc lea dec out lahf (bad) push cmp and sarl mov jbe sarl jae pop in add mov rorl inc pusha imul push mov xchg (bad) leave pop cmp dec add sub push cmp ja pop jg,pn cmp imul inc inc and mov mov je mov or shrl pop inc xor cmc test and out in gs push xlat mov cmp jno jp (bad) dec dec cmp cmp mov inc add inc ljmpw add jbe lahf jne or lret inc push jmp fmuls aaa data16 das fisttp gs sub dec push add push rclb movsl cmp mov (bad) fcoms cmc cmp and sub dec add sbb and loopne sti (bad) pop mov and lock outsb add add push sbb adc jmp mov inc add int add adc mov loopne sub incl or mov mov dec ret add dec adc insb mov mov lcall add mov pop mov mov test add ljmp decl fstp pop mov ret mov cmp push xchg repz adc jecxz fdivl mov cs inc inc and add lods clc lods or mov add aam insl js xor into inc cld (bad) mov adc add leave jne lret jo (bad) ss je mov inc mov sub mov je,pn in sub fcompl jmp inc or pushf sbb daa icebp sbb imul xor adc popa idivl leave test movsl roll mov and clc out lods mov cltd pop ljmp jmp xchg jge call xor cmpsb test xor inc test adc ljmp fs out (bad) cmpsl aas jae mull loop adc jae mov add out pop pmulhuw fwait addl sbb pusha ds push push inc dec mov loop xor cmpl pusha xchg push sbb shl rcr inc aam jl add sub outsl ret dec pop add fild mov hlt test push les arpl cmp dec jecxz jbe pop bound add or jne push fbstp mov (bad) push sar cmp ret and cmp push adc cwtl and popf cmp mov fwait and jne inc out xor popa sbb (bad) aas pop and aam ret jmp or push out jne mov (bad) aam mov test adc or jge mov jge insb jne add js imul (bad) dec in (bad) xor inc rcrl mov roll out mov cmp and and inc pop js pop jmp and sbb imul mov inc (bad) add lea add sub add mov mov mov push cmp xor lock insl mov out and jge enter or rcrb push cmp adc pop mov sub sar (bad) loopne (bad) mov lea mov mov adcl mov add xchg sub andb xchg pshufb adc xor jb jmp mov popf jmp or stos jle mov jg xor push add je mov test dec adc outsb lock jne or pushl cs jne sbb clc add out add lock xor or cwtl pop (bad) push test out leave bound fucomi inc or subl xchg jl adc xchg sub repz xor add add sub (bad) dec subl imulb ret adc (bad) cmc push push (bad) jbe mov inc imul dec cmp (bad) jne lret cli inc jmp and or je xchg pop daa movl add sti add mov adc pop pop jns push cwtl adc xchg ficom jno insl mov and push and jle cmp xor xor mov (bad) push sbb inc add push mov sti addr16 or sbb inc out ret test jge jb scas fs lsl dec cmp push sbb ja push loopne adc ds sub sbb pop push jbe xchg push scas push mov adc push mov adc or ljmp stos mov imul adc mov outsl lock cltd or shlb sub fnop loop or jge adc stc lds push pop lock jl decl daa inc hlt xor mov loope mov test (bad) mov lock pusha std jmp clc pop pop pop mov cmp movsb jge mov pop cmc mov jo or pushl cltd add pop movsb cs jl adc dec jb and js add lock popf hlt mov push gs or pop (bad) rcrl (bad) pop xlat inc jge fcoml and jne sbb jno rcrl out loopne addb mov dec ret lret xchg inc cwtl in pushf inc and push push and movl push push (bad) jmp push ret sbb lcall xor or dec lret push push addb mov fistpl push jmp shrb test or sbb sbbl fmuls jnp adc icebp push (bad) inc or iret or add jne lret cmp or xor or jecxz add (bad) add add popf adc add pop lock mov fcmovne shr in scas lock decb add dec mov or enter push cli pop sub fadd test rclb xor inc in andb inc adc or mov (bad) sub lret cld shr sub inc hlt iret imul enter sub dec add push loop push aad mov adc cs push ja push clc or push inc (bad) jne shrl dec cmp adc pop lds dec push inc mov inc aam test jmp dec add roll pop mov andb popf jnp or dec loopne pushf mov push or cmp cli lds pop add jle mov jbe into push cli add xchg mov or ret xor cwtl inc xor jne stos clc mov adc sti add mov dec pop cmp cmp insb pop lcall inc adc rcrl fidivl jno add cmp rolb pop sub and arpl sti dec add sbb lods or idiv sbb jno inc mov insl push adc dec or loopne int sarl add push fidivl fisub icebp rorl out and add imul mov adc mov dec paddd inc mov test cmpb lret bound sbb pop xor fdivs jmp and push and arpl mov mov add xor and pushf sarb push mov rcr push clc dec shrb add je loope dec je add push mov test add pop or push xchg cwtl add sbb movsb mov add xlat iret out adc dec adc iret inc adc subl push or pop adc popa inc pop or mov clc mov add in sub mov adc dec adc sbb les cmp sub insl or aas cmp mov cld mov dec push ljmp lock xor lret adc aaa push xchg xor adc push adcl mov idivb pop rorl add dec push lods jo cld lods mov dec xchg aaa loope icebp cmp jbe push in jmp xorl test lret incl test push mov push add and lds (bad) (bad) xor jge mov pop dec imul mov pop mov inc pop rorb jne sub sti sub push iret stc push add (bad) lea lea push xor cli mov inc mov xchg mov inc adc dec fildl stos fldt adc out or sti out inc cld lock push add sub or addr16 jne cs push add insl mov sbb pop jmp sahf aad or sahf sub enter test andb dec inc push js pusha lods (bad) ficompl adc shlb push idivb xchg push mov jb fisttpl push int shr mov dec cld xor icebp cmp jbe in pop adc xor push push xchg test inc push insl stos and int3 push mov stc add sub xor jbe dec pop pop pop sahf pop cmp push pop inc adc lahf cmp insl test fcoml push pop das xor nop fisttp inc or jmp mov add jns inc inc ja sub add mov pop mov incl adc inc xor ljmp mov mov jl aas or fimul dec dec or dec (bad) xor inc pop adc pop sbb and sbb inc iret cmp fstpl adc and lret jne enter lea pop pop adc xor or frndint fistl pop mov sbbb cmp mov pop mov add pop dec and mov mov test pushf push mov adc pop testb mov sbb and insb sbb dec dec dec out sbb sub push dec cmp insb pop or fcoml js ja ja push imul pop insl mov xchg adc adc mov jns mov rclb or dec add push push repz and cmovbe loope mov push into popa rcr setns push popa popa inc es inc les inc (bad) xor je cld scas fidiv cli xor add aaa push pop and lcall test push jge into mov mov stos out test or mov mov (bad) icebp ftst inc cmp push mov adc (bad) (bad) or cs add push jne leave add sbb pop and imul fnstenv jmp lds adc lock xor push or xor into adc mov pop sub or add pop pushf push adc sbb insb in add outsb pop in add movsb or jo add mov mov clc mov iret jne inc ss sbb jo pop cmp inc lds jmp (bad) dec inc rcrb pusha and jne pop push push pop icebp inc fidiv leave inc test and or cmp icebp pushf and loope jo jae dec lcall jecxz dec leave pop cmp jge iret lret jno xor jno mov pop mov decb jne int3 hlt int sub and jmp cmp mov sub mov sbb or fwait sbb clc adc mov fisubrl jg mov mov push jb pusha fildl or fisttpll and mov out or mov jmp and sahf or stos mov push mov push into rorb adc or add aad xor inc adc jns jne,pt cmp xchg cmp add and inc leave jnp (bad) loopne cli inc add mov cmp mov std push mov and push hlt std sub lea cli dec pop jl js je mov push fimul add stos jp lret gs test jnp dec lea push or leave test loopne out mov push pop push adc orb orl push jmp sub or rorb je add or inc inc test jb jo and js lds xor mov push xor jbe mov shrl or lock lsl loopne pop aaa stos mulb or sub xchg add cmp in (bad) aas inc les data16 js sti fmuls subb test out mov push pushf pop mov sub mov cli and je push popf sbb lock adc scas jnp xchg sbb adc out or inc cld push add add jo push add xor cmpsb xor adc add add xor jne cmp sub pushw jae test test add std ja das xchg and inc add dec ret xor dec aad (bad) pop fcomip and repz adc dec or xor sti pusha fsts add cmp push adc daa divl add test rol add push fiadd mov and add push pop dec adc (bad) int3 push add add add push push imul sub sub or pop aam add (bad) ja xchg xor dec scas popf sub cmpl inc lds insb jl or mov push jmp cmp insb and push in jmp mov and add push outsb lea push inc rorb dec sbb lcall adc inc fcmovbe mov lea faddl aaa mov add sub call cmpw flds add cmpl jge xor sbb or mov fistp andb dec and shrb push jl sub mov cmc lods pop add lret cmp jb ljmp jb ret xchg mov (bad) jb and add or push xchg and and sbb nop mov xor loopne push or or decl bound sbb stos or lahf inc and or imul add dec lea adc mov adc and ret das sub jl push gs add aam inc sub je ds cwtl icebp adc les pop mov (bad) add add jae and or shrb in push (bad) pop mov jo pop xchg cmpsb fisttpl fs stos ret lea clc sub adc (bad) mov mov pusha pushl mov inc inc add lods mov shr pop dec adcl add add clc je dec je mov jle xchg xor mov sti jmp mov or push das or xor loopne xor movb cmp inc sti add xchg xor sbb jne or xlat or add sti add sbb pop mov not mov pop push dec jbe rorb (bad) mul movl fild (bad) mov fmull and rorl ret add mov pop icebp adc fsubr fucomi gs enter data16 (bad) mov test push fs push movsl jmp ficom push jo ss or mov pop mov sbb movl mov movsb fs or cli add call push xchg ret jb sub pop dec sti in mov push xchg and int je fsubrs sub data16 mov stc dec and push xchg inc add (bad) adc std pop and or pusha mov das fmull sub cmp cmpl mov adc fwait or call sbb push pushf jne repz push or push popf dec mov push push push push (bad) js mov idivl (bad) test pop inc idivl add xor and xchg jmp jo (bad) (bad) test fisubr std bnd lea xlat mov sbb push cmc jne test test ja adc pusha scas mov fs cmpsl clc mov in sbb div inc add adc cmp dec or enter mov fsts cs rcll adc pop and imul rorb adc fnstenv sbb sbb sub orb fwait mov jo mov mov rclb rcrl add inc test or fwait sbb sbb adc push je dec jns adc and push pop mov push push outsl pusha testl testb arpl push mov (bad) fsubs pop les push or and dec sub inc cltd ljmp nop addl xchg loop daa mov mov sub inc shrl ret or jo dec jne xchg mov xchg inc push mov mov mov sub xor arpl add add inc mov add add dec call dec inc icebp loopne mov xor inc shrl xchg or stos add (bad) fdivrl add add notb pop aas rcrl ret push jb mov jnp (bad) pop test out push mov (bad) pop sbb adc sbb mov jae leave pushl stos pop and lds cmp mov mov repz mov lds adc aaa dec repz mov adc push gs lret and and push or or and clc inc push sbb pushl pop or sbb fs adc ss and fs inc push and sub inc push sbb xor cmp sbb mov inc push sbb inc pop dec push sbb push push pop sbb pop pusha fs inc push push push sbb (bad) xchg dec adc je or mov xchg cwtl pushf mov movsb test (bad) cmp sub xchg xor sahf add dec fadds (bad) les gs mov mov cs push aam pop add xchg or adc adc fs sbb xchg or and mov loop roll push xor mov ror add sub adc push stos pop push out mov mov dec inc xor nop sbb movsl cmp cmpsb mov add fild bts jmp or mov ja call std mov sbb fisub mov and and inc add dec js jne add imul xor cmp pop cmp or aad leave push jmp arpl mov and rorl roll std mov jne mov mov inc inc into push add or dec icebp jne (bad) out cmp jecxz mov jne cld lods inc enter pop push lcall outsl xchg aam mov dec incb sar (bad) clc or push and (bad) stc jl and and mov inc or adc mov or pop ss adcl sub add mov and push pop mov inc lds xchg (bad) call int3 mov rcl sbb ret mov (bad) adc adc add push stos pop mov lea aam shlb push hlt cmp (bad) pop inc mov pop cmp push xorl das mov cmp sub pop fdivrl cli or clc adc mov jb aas push es mov push and sub inc sbb dec lods pop sbb jg int3 mov mov (bad) mov push xchg inc je push pop dec in push xor mov and (bad) mov sbb jmp push and push mov scas push jmp push addl push xor rorl inc mov inc sarb lret push aam sti outsl add lsl sbb or pop (bad) js adc pop add add push mov add and (bad) scas adc or adc pop in jns mov inc sbb sub mov dec (bad) xchg xor mov inc inc and mov adc jnp sub jge add fwait data16 mov sub or adc xor add pop jns dec inc xorb inc orl add mov mov aaa mov loopne out (bad) add les testb or sahf xor add add or mov or mov stos ljmp fcomps loope (bad) sbb mov jbe (bad) mov push xor pop dec adc dec and inc pop pop leave mov push sbb or add inc xor gs pop ret adc movw or pop pop xor std pop js das push or adc push add mov cwtl push mov and scas cmp adc les cmp je roll loopne ret dec pop rcrb adc jno xchg or adc mov and lds rcll (bad) sti push push mov and jb dec inc and pop aaa mov push xchg xchg pop ja jnp lods or add iret out inc xor adc push cmp cmp add rolb mov pop add jnp (bad) or negb add sbb mov inc add ss sbb stos or xor in (bad) (bad) mov pop fisubr fwait add cmp add and add pop mov adc adc inc cwtl xchg push pop xor divl xchg dec fisttpl dec cmp (bad) push sub and mov jbe and fsubs sbb int3 mov nop add (bad) push lea lea ret mov mov inc outsl shrb or push faddl mov popa xor enter rorb int3 mov mov mov pop rcrb add mov cmpl xorl fsts cmp jne fiaddl push xor mov outsl mov or cli push das std imul cmp push insb ret call je push or adc inc xor push mov add sub ret mull loope or cmp jo sub mulb mov pop subb leave jne div das out fidivr fsubl mul sub ja jb push add mov dec sub sbb or mov rclb neg sbb mov std insl push fldenv ret hlt fildl mov or mul and cmpsb jb and (bad) or add pop sbb in add adc add pop cmp shlb mov adc les push pop push std shrl sub mov push push sub stc out test add sub lea lea add inc mov jp cmp icebp imul int add jl add push push mov push or inc jle jo das inc mov push jne pop push jae xor mov ret or (bad) movl jne or jmp adc sub adc mov push dec xchg dec bound hlt and (bad) aaa xor jg mov cmp cmp xor js cmp adc and sub in icebp dec mov adc (bad) and test inc bound push push das lahf mov dec adc pop clc or test (bad) movsbl sub mov lds jmp popa cmp push ja sbb aam call sbb and jb mov add or fsubs dec in add sub mov inc or scas pop cmc outsl stos or clc cld (bad) mov aaa add or add je inc sbb loop inc ja sti cmp and or hlt sbb mov and daa jle hlt mov insl mov and notb (bad) int sub dec mov sub nop adc add popa mov in jmp and fstps mov add mov fbstp sub jl sbb adc ret mov xchg test push sub (bad) xor fbstp and jle es gs or (bad) aaa sub cmp jb cmp ja add cmp or mov cmp mov (bad) mov incl jb negl dec cmp pop pop pop leave dec int3 adc test and add xor push pop je lock push es shr iret test push sub fdiv xor mov adc mov mov mov cmp test iret xor xor fsubrl and negb or out push mov push dec inc cld lods insl xchg or test out shl pop add add out mov cmpsb fsts adc xchg sub mov (bad) aaa push std cld lcall fildl and cmpl test mov out ss jp add enter movsb adc dec sarb je aam add or ds xchg inc add mov add (bad) or inc mov adc add ret jb push sbb add or push or shr inc inc add or cmpsb cltd fs pop adc stos (bad) or add xchg mov (bad) (bad) or sbb sbb xchg mov arpl loopne (bad) add mov push sub shrl stos sub mov dec or adc ret or loopne nop mov das cmp (bad) and xchg insb popl insb xchg sbb push stos cld jmp cwtl xor dec cltd pop and xchg lock fmuls je dec or into mov jbe and mov or push jo xlat cmp and test mov (bad) jmp mov (bad) adc and inc and fdivrl xchg add rcrl (bad) in jne push xor mov mov hlt jb or and adc cwtl inc push add push (bad) mov mov (bad) mov subb dec test add xor push call dec adc or (bad) pop (bad) xor mov ret dec add pop js add push rcrb je xchg call inc or je sbb inc and or sbb insb jmp in sbb mov adc inc sbb das jne or imul inc ljmp pop jge push inc je ret add push cli outsl jl mov arpl sbb add and insl pushf insl add sbb inc pusha pop adc (bad) ja mov jmp fdivrl push cld dec xlat add mov add fnstsw dec add add and decl push stos ret pop jge jle or inc mov mov cmp sub lods jbe inc pop jle pusha add icebp push inc adc inc xorl jns adc sti (bad) pop ret sbb or mov cmp je xor in test cmp adc clc mov inc sbb xchg jbe test icebp pop jmp cs jns xchg (bad) xor adc inc lock hlt fiaddl push aaa mov dec movsl or lds lock inc dec adc sub push adc push jp stos jecxz or or push push or push adc out clc pop mov loopne movsl lock (bad) outsl or pop jo push testb add mov jge lock orl mov pop inc xor mov add testl mov adc mov sub and or sub cmp fcompl jle daa stc in lea mov xchg mov push push lea ja xchg pop pop sbb cltd test sahf lcall call push push dec in jo jns in (bad) cmpxchg and add rorl dec aaa cld cmp xor cmpsb xor xchg pop lds sti sbb call push add push adc xchg in test xchg jb sbb inc addb cli add bound mov notb or or movzbl jne xchg add push lods icebp sbb push add pop xchg and loope fisttpll mov lds inc add lods adc test in and repz pop dec leave ret jo fsubrs enter mov mov fadds fcoms cmp xor pop xor and jne mov push push gs add sbb repnz icebp outsl xor cli mov sbb add mov fildl and cmpsl push cwtl jg out dec fcompl (bad) add add jp or sub pop loop call decb dec add sbb dec lock adcb sbb sbb cmp stos leave movsl adc lret mov test adc mov addr16 sti fs xor pop flds xor cmp add sbb mov sub jnp mov out pop push add and (bad) push loope cmp test cmp jbe cmp add adc mov cmp cs mov xor mov setg xor cmp or add scas daa test in xchg cli or adc aas sub add roll test xchg fcomps test mov adcb inc jg clc inc lods inc inc pushf hlt rclb add push add sbb or add add push fwait mov cmc xor cmp pop mov xchg movb mov fidiv int jns mov adc or in (bad) pop idiv add mov (bad) or xchg or (bad) neg lods add fsubl push cmp nopl or push test and xor add sub push push jge push add int (bad) orb adc out inc sbb cmp xor adc ret popa inc mov mov sbb aam sub out mov lahf or fcomp aaa in push xor sbb sbb icebp jno das enter sub and aaa xlat add pop jmp test push lock sbb fstl test xor dec sub push inc inc inc dec add test sub and fsubr enter divl xor rolb pop sub add cmp cwtl mov outsb pop icebp call dec call sub lret or inc mov mov fsubrs add pop cmp sub mov sub adc cmp dec sub mov loopne sub ja xor es mov ds add xchg (bad) sbb xchg xchg jg jmp sahf dec xchg and jnp sub sbb popa push pop dec and add popf inc jnp subl stos outsb std sbb and add xor inc das jl adc adcb add push test dec mov inc neg sbb jecxz mov add jg ret daa mov (bad) jne push inc add sub pop aaa mov adc inc add push insl aad xor inc cmp or inc rolb jmp sub mov mov push adc ret mov push hlt ret or or enter sub add sub mov popa and loop out mov pop mov cmp add das add pop and inc lods enter mov shr ljmp lea jge or push push mov or cmp fbstp add xor out mov test dec pop sbbb aam cmp inc mov fldl les mov out cwtl jecxz jl adc lock jne jo pop test and (bad) das and sub js jg mov jbe sub or fidivrl addr16 (bad) js mov popf or jb push scas mov add or cltd push scas mov sub mov add fs and cmp and and arpl test jno ss add leave jmp pusha mov stc rorb mov inc imul iret add (bad) pusha mov mov dec and sahf jne outsl cmp xor xor scas test mov nop pop stos ja jno add loope inc add or or ret sub lods inc adc adc sbb flds add inc or add pop inc pusha lods and stos iret inc bound add or cmp dec add push inc adc xchg aam sbb mov sbb sub mov test mov rcrb sbb cmp mov cmp jbe mov frstor shrb fxch sbb enter inc pop leave push push mov jmp loopne or pushf sar jl (bad) mov test mov inc mov stc mov pop shrb push (bad) push fldpi sbb stos mov sbb movb mov push mov add pop add xor loopne jne and push (bad) pop mov rcrb xorb and fsubr xor xchg sbb push inc inc pop dec bound mov subb inc xlat add pop (bad) std xor andl add mov frstor mov mov fsubl sbb or (bad) add add mov fs movsb jo dec jle push push or mov movl in ret cmp cmp xor out inc dec lea test test les xchg shr inc add ficom and lods and add (bad) pop call mov test push add test add xchg or push and cmpsb dec dec inc loopne cmp jmp sub andl movsb xor adc nop jb test lods or cmp test jge stos cmpl repz icebp jae mov rcr mov xor fiadd popa cmp jl outsb pop add shl dec or sub sub add jns je inc inc scas and lock add out sbb mov mov add xchg jnp mov adcb inc mov aaa dec subb ret loop sbb adc fildl cmp or jne and adc mov or imul and in xchg and add mov mov jno jge mov xor pop push cmp test roll (bad) and mov loopne xor or dec inc rcr rcl or inc les cmp aas or mov jle cmpsb inc add lods mov mov loopne lea add mov insb jno push push jg dec inc sbb aas mov mov jg sbb and popf pop aad clc cmp jl (bad) mov or out je inc icebp movsb inc pop pop inc push add add xchg loope sub mov push cmp jmp sub pop cmp fldln2 push test dec jne jns int3 add dec adc es lahf les or and mov js mov or test insb pop nop (bad) (bad) or or push frstor pop cmpsb sbb inc jb movsl outsb (bad) loopne dec xchg js arpl push pushf cmpl inc pop pop pop adc les push leave jle rolb cmp mov notl add add in iret mov cwtl hlt add xchg add and aaa sub jmp adc sti jae cld adcb mov add cmpl sub adc into xor rorl pop jne jge or push pop add sbb inc (bad) and xorb dec inc movsl daa rorl in push fwait mov dec imul push cmp or call add cmp push js loop scas pop push test and mov stc ja movsb jnp sbb add repnz stc adc add sbb dec sbb stc nop dec push inc xchg pop push roll je add test je ss inc cltd sbb neg ja pop or mov jl inc xor pusha daa sti outsl xor jmp cmp jne cmp or cmp and mov cmp sub add mov out xchg in sub (bad) xchg add in inc xchg es cmp nop movsb scas and xor je mov inc adc push push lock adc jp aaa clc fwait pop fs iret dec je dec jne push inc or pushl in push jge sbb xchg cwtl mov adc clc icebp and cmp sarb adc add add jecxz mov aaa lods adc dec mov sbb neg inc add inc or scas or xchg xor subb arpl inc jmp add arpl pop xchg inc push aas or and cmp je adc mov push in clc test mov ljmp or vpminsw push push push xchg and pop adc jbe outsl xchg sbb push cmp jl iret jg enter (bad) cli adc add icebp dec hlt out push push cmpl pop lock hlt or and fmull add fbld stos fistp push or pop jb adc lret push mov dec mov or add popa xchg outsb in clc jl enter mov aad test mov idivl inc inc and sti enter jne or lods int push add push pusha pop xchg loopne cmp add add or nop inc adc inc inc (bad) mov (bad) in test lcall imul sbb sub sub subl es seto test gs rcrl sbb and push push sti or or dec mov or xchg add cmpsb pop mov push push add movl inc addl and cmp cmp xchg (bad) icebp test xor out lds sbb jae lds pushf jg subb jl ljmp jle xor scas adc mov in jle jbe inc loop test mov xchg in and ret add and test jg or inc jl xchg jo fisub mov hlt xorl loopne test enter das cwtl or push test aaa push hlt or push add sbb adc jp pop and mov jg ljmp push pushf dec mov add popf and xor push push mov and sbb sbb fbld and sbb add jp (bad) mulb dec dec dec sar push aam stos les add pusha subb (bad) dec cmp dec bound push push dec loope popf mov loop or fisttp xlat je cmp adc (bad) xlat or inc and sbb testb test push or out inc ja scas jne push push (bad) jmp ds stos and dec push jb test (bad) push je daa fmull test lea jb cmp jbe in push pop or inc inc (bad) je out push mov push lock decl jmp mov sbbb and imul sbb lods pop xlat push aam adc mov push add les insb ret (bad) rolb outsb in fstpl cs ja mov mov mov mov mov xchg push mov sbb jecxz mov and call lret push xor and or or mull xor sub mov rcll out xchg inc jge pop push push mov ds inc mov popf mov inc aaa aaa sub and and pop sub adc adc in and inc cmp (bad) push clc cmp push and mov ret sub sbb stos sbb dec aas (bad) jb cmp jb cmpsb pop inc lea mov fstpt lret xor add dec div jae xor (bad) rolb (bad) jbe push popl cmpsb loope aam xor inc mov add pop mulb lea mov cmc shrb les aam aam push cmp or sbb mov cmp icebp xorb mov sub push pop adc and loop call add cmp mov add inc mov jbe sub lea jl jo nop test sbb push mov mov jge push jge adc insb add mov fisttpll or xor sub pop or aas adc mov mov cli dec cmp push fadd jle pop lahf pop dec adc test and mov push adc mov sbb dec imul add loop dec jbe test mov lods stos mul cld fwait push jae nop/reserved stos (bad) jbe loopne call ljmp mov or ret xchg jge test mov not int3 dec dec in jbe pop or test mov and mov std mov xorb push sub cmp inc sbb xchg push push cmpsb jl je mov pop inc sub mov inc std (bad) or call mov popa ret out aaa mov jle mov fistp mov clc lea fs orl jle mov jmp jne repz adc loope or or mov mov adc adc adc sub xchg cmp xchg loop or out or aam inc cs rclb and inc inc fdivrs jmp paddsb push or mov dec in into sub adc or call adc jmp nopl fstps into sub pusha lds rorb inc test or cmp xor pop ret or push push psrlw pcmpeqd push mov lea adc loopne cmp push movq fcmovb pop insl es mov jbe mov mov leave inc outsb or or dec sbb jmp js sbb aas xor lds xorb cmp pop (bad) (bad) lds inc inc leave jo push and daa add push cmp add push xchg mov push dec enter or pop hlt lahf mov inc mov adc fnstcw adc xorb adc fadd add add imul lea es and pop (bad) out testb jmp add mov lahf arpl ud2 or or shl test push nop mov das icebp mov fcmovnu add (bad) mov roll sbb add push (bad) je adc push or mov lcall adc adc rorb or (bad) loop popf aaa in out mov mov movsl movsw sbb push (bad) mov xchg inc movsl push mov inc (bad) leave mov push dec (bad) jne sbb std stos inc hlt pop add or rorl sub or fdivl in sbb adc fcoms xchg mov neg sbb cmp sbb adc les sbb push pop sbb or pop sbb push sbb fsubrs push psrad xorl rcr sbb js fcomi sbb push jno inc sbb icebp push xor sbb xor and rsqrtps pop pop fwait mov jnp jne pop pop pop imul and lods rcl and pop ret loope shr add or lods sub idiv and imul cld lock push je (bad) push hlt hlt in or mov pop mov jmp pop fildl and push jmp sbb mov inc push jne adc adc cmp adc mov loopne dec or loop shll adc sub fisttpl add lock orl inc add fisttp jmp push or sti add (bad) ljmp xchg inc mov sbbb icebp add or mov test stos stos push stos pop lgdtl pusha stos or (bad) push js dec mov xor pop xor or mov outsb outsl pushl inc lea pop xor sub and test fildll and loop rol or fildl subl xor test cltd ss and pop xor (bad) or loopne fstpl inc sbb sub in cmp test loop,pn hlt outsl sbb cmp and push or sbb adc adc push call fstpl mov mov test fdivs or xchg or mov lahf and xchg (bad) jge push pop mov sub rep roll inc mov sub cmp and incb test cmp jg scas and sahf outsl popa inc movsl sbb rol loop rorl sbb push imul dec sub notl pop scas adc sub mov je dec lock out test mov outsl add out inc or push (bad) mov fdiv ret pop adc mov adcl adc jge mov jae sub jb pop adc add mov imull data16 xchg adc jmp push inc std sub insb jbe xchg mov or mov scas aam or jge sub sub dec jns inc inc xor mov mov jl inc fimul inc inc jno and movsb push pop cmp sahf sbb adc lods mov imul mov insl inc mov sbb mov add mov stos into sti aad cmp (bad) aas jl stos mov and test test jb jae fldt addl jecxz neg sbb push push lods mov adcb lock sub push or daa cs (bad) (bad) jne fucom adc lock leave inc scas leave in mov xchg inc es nop leave inc cmpl pusha lods in enter inc add inc inc add pushf inc xchg or pop and adc mov fmuls test add or mov mov inc add test lock lret movsb mov pop or cli or lea push lods mov cmpl cmp fwait ljmp inc jmp mov push ds or xchg sbb mov mov fmull cmp in jmp stos and outsl mov mov pop das add push pop jmp xor adc or mov or jmp lock jmp outsl ret jbe xchg or jmp push les jo push add lods cmp sub std movsl call mov cmp cmp jle cmp sarl arpl xor fsubr pop xor dec push fldcw adc cwtl push add cmp mov mov lods xor cmp jg adc ret mov jae sti mov ret mov pop sub or jge inc mov aas sahf mov add dec je jnp inc push decl je jmp pop aad ret xchg mov test insl ret or mov dec (bad) cltd lods jae adc pop push push pop and cmp or orl pop pop imul or ret insb loope stc sub cmp jbe mov mov scas mov je push je ss insl je pop mov rcrl test nop mov pushl mov testl (bad) dec sbb add xor rorl or ja sub mov add imul mov cli dec xor cmp jecxz std lds mov jmp sub mov sbb mov sub mov dec cmpb hlt aam or iret push (bad) (bad) dec adc ret popf pushf mov movsb stc jge (bad) fcomps mov or sub sbb push sbb (bad) in xchg mov xor stc imul sub sbb fldl fimul mov mov out in lods sbb adc xchg (bad) std pop test or xchg ja sarl add pop mov xchg xchg fsts jno (bad) mov cmpw cli das addr16 jb mov cwtl mov mov pop mov or je sub mov pop loopne sub shrl xlat addr16 push adc imul adc sbb out (bad) std mov shll or int lock std push int inc testl or jge or imul sub in adc inc or pusha cmpl adc mov xor das cwtl fadds mov sub movsl scas cs and add inc rolb push rorl xchg sub mov test in mov add rorl push cmp fistl cmp insb jge mov cld je jb addl subl push pushf push sub aaa nop inc inc loop out jg mov mov lock insl pop or iret faddl sub dec call aam jmp (bad) or pop and mov ljmp fs push adc dec adc jge out mov cs ljmp (bad) sbb push fcom insl inc loope sarl pop rcr (bad) dec dec mov aam rcl push add mov mov mov adc push int aas shl addb xor (bad) jecxz or aad gs sahf jge jb mov push ja fisub push or dec (bad) mov out sbb dec (bad) arpl or insl or pop mov aam sti addr16 and or int loopne lods (bad) insl stos pop testl jne,pt push lret insl pop or das jno (bad) push or movl jae xchg jnp push add or dec or test (bad) fdivs add sbb or decb push shrl add jp imul imul lea sub pop pop push popa mov lret (bad) (bad) mov loop mov lcall rcl aam cmpsb imul inc push fstpt dec scas dec xchg je (bad) push mov jmp add or cs sbb (bad) cmp enter jge or sub add add adc mov adc xor gs mov idivl mov push push xchg jmp mov adc rorl bound push (bad) or sub cwtl gs adc (bad) xor pusha fisttp jmp push adc mov repnz imul orb rol xor mov mov in mov or adc out mov stos aad xlat mov in mov shr out loop (bad) mov xor scas cli mov mov test setb sbb jp sar add leave pop movsl mov fucomp push lret mov aam xchg pop subl (bad) push pushf jnp lods dec aam dec addr16 mov jl and and clc inc xorl test or push bound xchg (bad) mov dec sbb push (bad) repnz out or adc mov mov mov jne inc imull les inc push and mov lds fsubr and fidivrl jmp add dec jne mov rorl dec shr (bad) (bad) mov push mov pop lea mov adc ret add mov mov repnz mov nop out push inc mov inc pop fisubrl scas out nop adc mov repnz dec test lods xchg sbb mov and inc sub adc add jne call icebp sar jno or hlt lret hlt mov call shr rorb (bad) add fistpl mov aas in sarb jge mov neg mov test mov mov insl inc jmp fcom mov or push mov mov xchg push lock sbb push pop and (bad) ljmp cli repz add imulb test repnz repnz or pop mov fs insb loop or pop out pushf push mov jmp rcrl lret add mov std xor call mov lock mov out push jo and fs mov loopne loopne test insl xor pop outsl sbb or pop call mov sbb push sahf inc inc inc xor mov je xor fmuls cmp faddp je mov add sbb jo lods push arpl adc push mov sbb cmpsl jecxz mov jo push cmp push ficoml sbb xor inc inc std lods push mov inc xor popf clc jle push xchg pop in cs fisttpl fisubl (bad) les leave es xchg jo inc or arpl (bad) nop lods add dec test in jns jmp fimull mov adc sub xchg mov repnz or dec inc xchg jecxz sub push das pop and sarb xor in mov mov mul mov jge push mov loopne dec mov lcall or je xor add ret adc daa mov loop movb push xchg lret dec inc inc dec inc out jbe sbb adc push mov test out (bad) movsl fmull mov add loopne call adc or add lds xor fisubr sbb jne (bad) jbe mov loopne jnp mov call xor loopne xchg lea mov rorb jns add cmpsl movsl jbe icebp (bad) fisttpl jl lea jmp and sbb lock lods out mov push (bad) or lea add push push cs adc (bad) or rolb push push fwait insl lock mov adc test or es sahf pop xor mov mov (bad) xor or add ss dec sub test mov decb jge xrelease or add dec cmp jae add mov or sub adcb das jne push mov inc add xchg mov inc mov fldt cmp jg roll inc ret orb lock add push add and sbb add or cld pop sahf add add test and or add test outsb add imul jno js je out or js or or mov or sub jne or jmp or push push pop je adc mov ret mov fistl imul push add rep mov dec or or cmp in cmp ret xchg js mov nop pop cmp cwtl lret into cs in pusha inc daa mov out xchg pop and xchg cmp scas mov or inc mov adc (bad) mov repz ret or adc fldcw shll adc lret adc xchg adc add pop add stos pop out push or hlt sahf lock and mov fsubr cmp outsl cmp or jmp scas mov sbb int lds bound adc pop js aam sbb xchg or (bad) push pushf mov add xlat scas ljmp cmc fimull enter in sbb ret jae leave iret pop jb adc xchg add es (bad) xor or mov add add aaa scas lret fdivrl stos pop test into or dec repz add or adc arpl into mov mov fisttpll pop inc fldl add and push or mov inc cwtl mov sub mov sub lock xlat and rorb xlat sbbb mov fisttpll bound les adc test mov jae (bad) jnp sub lret movsb imul test (bad) ror and push add sbb and pop mov xlat (bad) mov enter xor (bad) xor cmp pop adc cmp mov and subb mov (bad) jg xor sbb add add lock das jo adc shll push xchg cmp fsubr mov add push (bad) (bad) xchg xor pop lock mov push push cmp push adc jno das sbb sub mov cmp in jge mov xorl arpl push pop test push xchg stos mov fldcw jae add pop aam inc addl mov xor xor cmp add push mov pop ss xor cmp cmc or add xlat xchg rorl mov cmp dec mov decl insl and xchg sub out push add adc or cli push test mov (bad) or shl dec or orl scas mov jne jl cmpb pop jae mov data16 fndisi(8087 pusha lock xlat xchg test mov je mov (bad) rolb and ds sbb push fsubrs cmp push mulb and rolb or lods fldt sbb push shll adc or aaa lds aam dec ret pop in mov pushf xor jge lock and enter mov (bad) mov sub fild adc and adc mov xchg add insl test fmul and insl int3 aam std add mov fcomps in jecxz sarb add lds dec rcr pop (bad) xchg or push loopne dec jb fldcw aaa inc in push mov fisttp popa adcb mov std fcoms adc cmp xor pop rcrb orb and adc or mov mov inc les pop add rcll jae call test cmp pop shlb test mov push mov inc or dec in les jno fcomi cmp push and pop leave push cmp add xor (bad) or test loope xor divb or and call sub add push adc add push add mov movl and sbb and xor or and shlb cmpsl and fs adc pop cmp iret mov pop cmp or popf xchg or cmp fdiv push lock mov fmull add adc or movb or xchg in adc out xor clc jle push jb add adc leave mov imul or jge and add adc jns cmp sbb and cmp and adc mov jne cmp jne push jb cmp xor insb (bad) mov add cmp fwait xchg dec inc pop adc cmp (bad) cmp or fs test jo adc mov add outsl dec push sub repz (bad) or add (bad) cmp inc pop cmp or sub pop out daa test or inc std mov daa add std or add pusha ja addr16 movsb push or mov pop ret jno jg and mov push nop or cs mov movl or xchg ja ss cmp mov out cmp mov or cwtl mov mov xchg std jae push adc push fs add and xchg jbe scas mov xchg xchg test add xchg jge cld xchg mov mov jle (bad) or add add sub add add mov mulb mov add cmp test ret js cmp testb sbb or push imul pop cmp cmp fdiv add out cs add adcl jne enter cmp jo add cs jmp inc insb push adc leave push or push push cmp jle scas mov scas cmp das (bad) dec (bad) enter lods or add jecxz scas jno add jno inc (bad) dec testb or or add out outsl mov and and sub add or push sub inc cmc mov or mov gs sbb xchg into cmovb sub sbb mov or or push nop fildl or or push and fsubrl enter and bound ret push (bad) push add and bound (bad) mov pop imul loopne cmpl dec int xchg dec je xchg je ds xor or xchg sub add imul fnstenv mov sub mov lcall and xor push pop nop lcall sti adc sbb cmpsb imul in pop fsubrl pop cltd dec out dec xlat loope fnstsw add dec (bad) xor pop lret add adc (bad) or stos pop add jno push inc xchg cli aas test inc dec aaa cmp mov xchg add jg testb add rolb adc mov adc mov cmp fs popa je and add inc outsl jo jb addr16 pushl cmp xor dec gs outsb sub sub inc popa imul add push outsl xlat add add or or in pusha or add or jnp les adc or nop adcb add je mov or mov adc xor jbe add add and add enter arpl inc push sbb push add or sbb or or pop nop inc or mov jnp adc pop or or (bad) je sti or imul (bad) xor sub insb in sbb xor (bad) xor fdivrl jl xor sar add xor and xor (bad) xor (bad) xor (bad) repnz xor sub xor (bad) xor fidivrl mov sar push xchg dec (bad) xor cmpsb data16 xchg xor (bad) xor (bad) ss (bad) xor (bad) (bad) push mov dec (bad) xor cs outsb out push sahf xor (bad) xor fidivr mov sar add xor and xor (bad) xor (bad) xor (bad) icebp or xor sub xor (bad) xor fnstcw mov sar add (bad) xor and xchg xor (bad) xor aad mov (bad) xor (bad) cmc or (bad) xor sub popf xor (bad) xor fnstsw pop sar adc adc add lcall lcall jae repz imul imul cmpsb imul cmpsb imul imul cmpsb imul cmpsb imul imul cmpsb imul cmpsb imul imul cmpsb imul cmpsb imul imul cmpsb imul cmpsb imul imul xchg imul pusha (bad) xor rcll push xor dec (bad) xor dec sub pop cmp inc and xlat xor rcll xor add (bad) xor addl ret and xor or lds push fldl add xor (bad) xor adc sbb (bad) xor rcll push push add lcall adc lcall pop out outsl jo pop cltd push add add nop inc lcall dec xchg or dec xchg sbb adc sbb adc sbb xchg mov or ret xchg icebp fnsave sbb leave nop or adc push pop sbb xor test add pusha mov cmpsl or push cmp adc lcall add cmp jge popl add mov xor pop roll ja sbbl imul pop xor add pusha orl addb jmp push adc adc insb mov ds or sbb pop or pop lcall and dec popa jb and insb gs add or (bad) or pop mov pop rclb mov stos int and add jae add call add scas add jbe dec lods daa jo xchg rorb jae (bad) xor pusha jmp add xor pop inc and jle sarl imul add add cmpsb imul cmpsb imul pop sub mov xchg out pop adc push add imul outsb adc (bad) and arpl je outsl outsb daa cs imul arpl gs outsl dec dec jb dec inc push jg mov xor cs dec dec mov gs inc insb jae jb mov fbld pop push gs popa insb jne inc in mov insb outsl push and inc js je jb insl je (bad) gs insl jae cmp xchg insb mov lods fs repnz punpckhdq lods mov (bad) mov push pop and and and es sub sub sub cs xor cld (bad) (bad) pushl xor cmp cmp ds inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec movsl loopne add pop add pop pop pop pop pop mov (bad) fistpll push adc imul jno jae jne ja jns jnp in and jl jle add imul fsubl dec dec push push add int push out dec inc push rol or dec dec inc adc ret add xor std (bad) popa jo insb imul jae insl popa mov je insl jle je and insl fsubrs adc push xor push rcl bound jns and (bad) pop sub je jns or inc sbb and push sub popa arpl daa pop jae mov sbb insl and insl pusha rol xchg sbb insl and lahf frstor in xor dec jmp into insl fmull data16 bound notb fcompl sbb pusha fs dec push fisubrl and jbe and mov jp or fs pusha in out frstor and addr16 outsl cmp and sub jnp imul lods ret outsl data16 (bad) pop push insb insb popa outsb xchg sub mov imul insb jb sahf sub push popa arpl popa xchg outsb popf in pop mov outsl jb inc cmp insb stos dec sti imul fcmovbe add add push inc pop dec gs xor cmp adc xor ret gs popa imul (bad) out sbb dec lahf pusha ror shrl pop xor cli pop imul into insb gs orl daa aaa jecxz imul aaa ss jbe subl jbe sbb jne mov mov daa xor pop sub int mov fsub pop rol sbb sbb outsb jmp jbe shrb inc and mov sbb arpl jbe push popa mov insl subl or repnz and pop nop fidiv sub enter push inc jns je push jnp out out sbb inc mov add ja bnd xor pop xor xchg inc xlat gs in mov jae dec data16 inc cmp je lea xchg mov scas xchg inc faddp add mov (bad) mov push imul ret cmovl daa or add cmp addr16 and shlb jne add xor rcr mulb cmp xor xchg adc jb jg mov testb fs jo inc outsl cmp push cmp fdivs add mov sbb outsl mov lcall push dec daa (bad) out or and mov fsubrs or imul xchg and xchg mov or clc ret (bad) test jo pusha jle inc subl dec arpl or push insb outsl fs (bad) or cwtl inc adc in pusha sbb call and bound sub jb adc dec fs xchg push leave or int3 and int and ds gs and mov pcmpgtb ret or dec mov loopne dec inc mov pop sub add daa add sbb lods ss out jb lock arpl inc pop popa ja pop dec pop lods xchg (bad) xlat xchg mov push push fcmovbe outsb mov add jns je pusha sub pusha sbb and gs or andl ret sbb sub popa jae je xchg mov sub jae popa jb pop negb add lds popa push sub or jg mov adc cmpsb das dec sub rcrl sbb bound jge fsts or mov ss jl es add add pop das add add jae xor lods sub sub xor ds cmp add pop and sub es push jmp ja add or sbb mov jo cmpsl cmpsl and cmp push (bad) cmp ds xchg dec cld (bad) lret daa pop pop mov addr16 mov jb imul mov mov lods adc dec xor and cltd lcall in inc orb sub sub inc jg gs je adc cld (bad) lock cwtl cmpsb imul mov leave stc add mov add stc mov lods add movsb mov cmpsb imul cmpsb imul imul imul xor (bad) xor and gs xor sbb adc cld std lcall les imul cmpsb imul cmpsb imul cmpsb jmp mov cmpsb imul mov fwait cmpsb imul mov and jns fs sub dec add popa add and add add inc push in sarb add and and shrl subl sbb add add xchg adc add cltd outsl xchg (bad) incl adc cmp add inc xchg das add adc scas cmp addb xchg (bad) (bad) decl lea xchg xchg xchg xchg xchg cwtl cltd lcall mov cmpsb cmpsl cmp ljmp lods scas scas mov mov mov mov mov mov mov (bad) enter int3 int iret rcl rcl aam (bad) xlat (bad) (bad) (bad) (bad) fcomp fcmovu (bad) (bad) loopne loop in out call in out out lock repnz cmc div sub outsb lock stc cli sti sbb ljmp sub xor sub push ss gs stos inc jg add or pop jg push cli adc cmp cmp xlat fsubrl dec and jns add das adc mov or shll mov inc add aas push xchg std subl dec outsl jbe dec dec jp cmpl push test jne and inc jo xor inc pop gs xor arpl dec sarl jge bound sub out mov addr16 push push dec negl fiadd aaa jns aas cmp and fs inc push fisttpl push push addr16 imul or fdivs jne inc mov aaa das daa and add fcmovnb mov sub inc cmp and pop push jae fs stos jae adc in push push insb xor int jle jo subb cmovbe adc outsl js push inc push popf add cmp pop data16 mov jae movsl daa cli add pusha xor or push sbb subl cmp dec pop lret and lods xor xchg xor sub jne pusha add add cmp sbbb dec xchg add inc jo icebp dec add dec add push ljmp stos lods pop sub inc dec adc sub mov insl mov mov arpl popa adc pop js add push add insl xor mov jmp fnsave insb adc rcll rcrl roll push and jge ret hlt push jns jle daa outsb movsl or jns cmp pop das xchg cmp sbb xchg sbb leave mov arpl adc inc das or pop add cmp pop sub subb xor pop das outsl and out and shrb or sbb adc loope add ret test scas dec mov inc (bad) pop outsl add ja jne jmp jb sub arpl outsl add scas flds xchg outsl daa jae inc mov mov addr16 dec mov popa jae outsl add (bad) mov outsl and mov leave sahf push add pcmpgtw sbb jg dec aaa jnp (bad) jne add inc add add sub adc mov or add sub mov pop out or pop arpl adc push pop jo mov xchg bound lahf sbb mov .byte aas .byte pop call add push mov sub fnclex fwait smsw test jne smsw test je cltd xor xor xor mov jmp or or or or add add push mov push push push push mov cmp push mov pop jl push pop xor div or decl std add movzbl adc mov shl or mov fwait in inc call cmpb push or packuswb sbb and adc mov (bad) incl cld jne test jne movb jmp pop push shl dec movb jnp ja add cmp add ret shr rorl outsb pop push add add add insb mov pop mov pop leave ret aam (bad) fistl mov inc add or add adc mov incl test jne push bswap mov pop xor (bad) mov testb mov adc push (bad) in fildll sub adc (bad) call jbe push sbb or push push mov (bad) jle cmpb je jnp push adc outsb or cmp lcall cmpw clc je jo fstpt sahf and es or jne cmp fidivr rol or lds or mov pop jne mov sbb add outsb (bad) pushl xor cmp je push push call adc mov mov sub or and (bad) jae leave ret sub xchg jmp dec sti mov jo adc cmpl jbe or add popf pop movsl cmp out mov neg sbb inc mov or cmp ja push jmp mov (bad) adc xor and ret or add enter cmp ffreep or push lea mov lret arpl pop dec jmp jno (bad) mov push mov inc mov mov outsb pop incl jl mov or mov add push push mov pop lea lret and (bad) or or leave add inc cmp adc leave lea sbb push sti fucomi inc and int3 loopne inc cmp mov jae (bad) fisubl jle inc fincstp mov push (bad) xor pop dec or mov mov or into andl pop push inc xchg iret mov dec mov add add dec dec dec cmp inc push push xchg adc cmp jl lds subw test movl std mov cs ret pop or sub or pushl sbb add or mov mov lea mov pop or outsl mov je jae jae push push sti lock or gs push mov add lcall lahf mov jl inc push cmp push mov test mov inc push push sahf or sbb xor sub mov out mov mov add add mov sub fisttpl roll mov int3 or (bad) mov push sub (bad) std push pushl mov push pop add arpl pushl push int3 into or decl fsubrp insl mov add lret dec inc cmp jns mov sbb mov enter and mov insb xchg dec xchg aad cmp sub push fadds nop inc (bad) mov and adc sahf int cmp rol (bad) mov dec cmpsl cmpl xor and negb popa fdivs pop mov push mov xor push repnz call popa or mov test pop pop repnz push mov mov addl mov lock out mov mov inc mov add leave adc push or mov test sbb adc xlat jb push hlt mov mov rorb inc adc sbb add fistpll xor fmuls xor mov mov sbb lea jle fisttp (bad) lock (bad) ss lds add sti adc sbb cmp call jb push add xchg inc sbb cmp dec in inc outsb sub add push pop jmp mov adc cmp test imul mov push in fildl adc (bad) (bad) or jne xchg sti pusha fnstenv fmul xor mov ja push popa imul inc (bad) not mov lock jae cltd sub jle mov add mov mov push jecxz dec mov popf aam (bad) jne cmc pop js ja sbb bnd ret sub dec or sub imul inc je add cltd insb sub jle dec fstps add std mov in push cmp lcall mov (bad) aad (bad) clc push or xchg stc jne mov cmp inc cmp outsl mov dec push and inc jl leave nop xchg mov je nop mov adc and cmp sub jge mov ret aaa cmpsb mov lret lea inc sub jmp adc lock mov out or mov pop out jno or (bad) pushf or mov lea decl mov xchg adc out mov or push and sub (bad) imul bound bswap cmp adc xchg cmp cmp or mov (bad) (bad) repnz dec movsl mov or in lahf add and and nop xchg pushf lods and and mov je mov inc js jmp push mov pusha js xchg push je xor arpl mov mov cmc outsl jmp in xor pusha incl add mov movsl push inc add test push movl imul (bad) or push push or sbb mov in pop and jbe repz lds adc fcmovnb push jle (bad) jge lret pop cmp xlat ret push sbb mov ret ss mov (bad) adc ljmp out jae stos in je cld int3 fdivr imulb push es cmp jae cmp je popa inc lcall and sub xor int3 push (bad) mov or pusha fstp add adc repz sbb pop enter push push cli jne fcomps inc ret in out lea (bad) repnz push out outsl ss daa hlt (bad) or movb negl add jge add push loop push shr push mov (bad) fstpl jecxz and nop mov add push lea cmp or (bad) lea fnsave cmp pop decl int imul hlt scas jle cmpb fimul mov and or add or sub fimull arpl push adc prefetchw lea clc imull pop lea cmp js jns fdivl pop sbb jp push mov ds in xchg cmp fist push addl cmp orb jg lods rclb sbb xchg bound test mov arpl pop pop add sbb inc jecxz sbb fldt push push sub in mov add push add and into popf fisttpl mov sbb xor adc pop and xchg pop in andl add sbb pop fs mov or or mov adc sub sbb push add popa mov js and pushf dec mov sbb pop je imul and scas xor mov mov inc inc adc cmp mov (bad) cmp push cmp arpl aas unpcklps pop mov adc jp xchg jle ss pop jns mov or push scas xor jle testb bound aaa mov xchg fmulp mov andl xchg cmp and rclb cmp lea inc or jns call jnp inc sbb shll sbb ja and push jg cld aad hlt jnp jmp mov pop push push push scas imul jecxz int3 addb inc mov loope push je cmp fisttpll sahf jg or fwait push div pusha cmpl cmp ret outsl xor lea pop xor sarb mov mov push and and xchg jne popa fdivrl jne mov addr16 inc and cmp popa mov cmp sbb add outsb (bad) fistp or je dec pushl loope sub push (bad) pop fisttpl add pop or xor into cmp ss (bad) ljmp sub ror pop adc loopne add (bad) push mov lcall arpl add inc mov call push jne pop jae sbb ficompl or jb mov inc or roll xchg adc adc fsubrl movsb add mov pop (bad) and xor pop jnp movsl xchg xlat push pop push adc or cwtl outsb mov insb scas (bad) mov roll add add rorb dec jne or out sahf fmull add icebp roll sub (bad) and add xor xchg push sub mov je and push cmp aas xor push pop adc push inc add mov pop ss (bad) cld test adc push mov xor push pop push pop sbb sbb ret add cmp and pop mov push push adc insl or sbb lds lret jmp out rcll dec lock mov xchg rcll scas out pop and fdivs clc sub xor jne int3 mov inc or push (bad) inc fildl or xchg dec mov pop inc test insb pop insl xchg inc xor or (bad) mov inc adc jmp cs dec push cmp int3 mov pop int3 add sub sbb testb bound add into xorl mov jbe mov lahf test pop mov xchg sbb adc dec mov pop or dec jae iret roll xor inc test sete inc sbb xlat push mov xor cli xchg mov int3 int3 in (bad) mov adc decb hlt sbb xor std mov dec adc mov pop in add out add or xchg fwait cmp popa push mov out mull adc push add stc fidivr push mov xchg push add jae mov push dec test mov out testl jl mov out xor je or pop aaa fisttpl dec or (bad) or push leave popa pop mov or or push xchg inc jl fmuls or push xor repnz (bad) pop push imul lea dec test mov inc jmp out pop xor jmp push push push das sub push push shrb dec push ljmp mov mov mov add aam fistpl push push push adc mov dec shl call pop mov jbe adc mov fnstsw add adc pop mov pop loopne sbb jmp cmp stos inc dec inc cmp add xlat jmp fwait insl push xchg mov fcomps cmpsl or gs shrl push push add loop jmp out (bad) mov mov jne das std cmpsb mov outsb push inc mov push imul mov sbb adc fldl imulb inc pusha cmp clc sbb roll lods test fadds cmp into lock int dec jns andl pop sub clc sbb add add pop (bad) aam mov outsl clc add mov push aad mov and in adc push cli out xchg push lea inc mov fdivr adc push push fisttpl cmp aas test lock jne lods sub xlat bound mov push mov scas sbb and inc mov pop outsb rcrb fisttpll add enter jae in or add adc dec int3 sub adc cmpl mov cltd imul mov dec jmp push js mov inc popf pop je cmp xor xor ret jbe inc pop push (bad) imul mov iret cmp inc push mulb sbb add add sti jmp push aaa rcrb cmp outsl leave mov outsb sub enter pusha jae insb jo mov pop xchg stc cmp int3 cld mov rcrb mov jae loopne daa cmp outsl (bad) push push cld dec sti (bad) bound or sbb cmp cld mov add lods dec xchg and pop adc shll cmp sbb mov mov xchg push sub add adc data16 mov movzwl test push or xchg add (bad) mov sbb add divl mov sub outsb hlt inc or jbe ret data16 inc dec in (bad) push add scas push jae pop pop sti fistp push adc jle jmp pop mov pop subb and test mov or cmp pop fcoml push push mov mov es sub xor sub movd das sar mov jne pop mov push fwait test add mov jne orl mov mov xchg xchg lds mov push in pop cli std cltd pop idiv scas pop add lea cltd or aaa push cmpsl outsb or mov pop push adc push add jns stos fs mov pusha jecxz fwait lea inc dec scas roll mov test mov insb (bad) mov rcr sbb ret sbb jo cli test lret dec push jnp dec ljmp (bad) cli sbb sub xor or ljmp mov fs lahf fisttpll or fcomps je adc cmp sub xchg push cld jp or pop movzbl popf (bad) add inc jmp loopne adc xor sti inc cmp jle adc unpckhps inc addl repz xor add mov inc pushf jl push xor add clc test cmp sbb lea xchg cmova inc sbb inc xor cmp xchg sbb pop add add maxps inc mov xor and push xor cmp mov add jg js ret fimull rorl push cmp jae test jne dec cmp jl or mov add xor mov mov (bad) pushl cmc mov cmp jne cmp jne cmp jb cmp jbe cmp pop sahf xlat fnstsw sarb loopne jbe (bad) inc push cmp cwtl lcall dec xor add adc dec sbb push (bad) loop xchg push imul push insl and inc stc adc leave push add cmp lock arpl pop or test andl mov and fmuls push loopne je add mov (bad) (bad) loope adc mov mov adc add jne xchg insb dec test xor add (bad) lret mov cmp mov mov lea (bad) or add xor inc loopne adc orb adc push adc test push adc nop pop push sub sbb out xchg lods xor jle add add ss mov roll or rcl or push mov mov adc repz punpckhdq sbb or push add add adc jb pop (bad) xor lds pusha pushf cmp pushf xor pop loope dec or sbb push and push (bad) loopne (bad) mov xchg inc dec (bad) dec push jg and lea push adc (bad) mov sbb movsb mov and fdivrs and pop notb rcr mov sbb mov out inc sahf cs ljmp insb mov fnop jl popa jge adc loopne (bad) mov ret push or cmp inc add enter popa aam les adc (bad) push or cmp testl sub ss or xor xor sub sbb int enter pop xor sub jle int insb ja push (bad) jge mov pushf test (bad) mov xorb push fsubr adc add fcoml dec mov fistpl xchg ret xchg stc add andl fdivs inc add (bad) lcall sahf sub rcr fnstsw test jp fstp fld1 fxch ss (bad) xchg gs jns mov fildl fildll fmul fcomp jmp loope in adc shrl adc sti mov push add (bad) (bad) mov out mov jmp incl mov lret fcompp jne je sbb mov push loop xchg mov or add mov pop ret movsl jnp test es movsl jno or jae adc sub sbb iret pusha ret adc sub cwtl xor ret mov jae orb mov or in and add (bad) sbb xchg sbb sbb cs xchg cmc mov mov pushf adc add fwait int mov cmp mov mov or mov sbb movsl mov push mov inc sub sub add inc jbe sti jge and adc (bad) (bad) pusha inc mov xchg cli dec pushf push add adc fisubrl and mov les mov push jp jmp dec jle or sub mov push sbb mov mov xor (bad) mov pop add aad adc or push outsl pop imul aad testl jmp inc sbb test fdivs mov in inc add subl divb mov mov cmc push fstpt hlt dec (bad) xor jl,pt insl mov bound fwait push push xchg sub in jmp cmpsl fsub (bad) (bad) sbb sbb pop mov sbb add sti (bad) jle jae add adcl sahf es add dec pusha add pop add dec cwtl adc add push xchg or jo ret jecxz das mov jmp movb pusha out dec lea add jge push push out repnz (bad) mov or fstp lcall clc and mov push repz inc xchg lock mov pop push pop test test (bad) mov push push lock out out mov sbb add sub adc repnz jbe add push cmp jp add mov push push lea mov movsb outsb insl cmp adc sti inc aas call cmp fnsave jmp adc lods mov cmp pusha add fsub rcrb sub push adc dec insl das pop xchg sub cli dec je add sub ficomp or xchg cli outsb cltd jmp or jl fadd dec or xchg push sahf shll adcl and out push bound imul into dec sub sbb push daa mov mov sbb mov dec cmp neg sbb and sbb ficom leave ret sbb pop push je pop je push call cld je push xchg xor popa and or aad scas fucomi test xchg inc fist adc idivl inc push push inc sub js xchg js insl push sub data16 adc orb insl (bad) add push sbb xor xor or dec pop shrl mov and xchg lahf mov pop stc mov dec andb mov roll fildl pop adc repz push add or out jl lahf enter mov in adc add (bad) imul or unpckhps cltd pop hlt je outsl mov cli sub sbb (bad) mov push pop push or add jl cmpsl mov push dec xor push les sti pusha mov std pop pusha dec loop push je (bad) jle xchg dec and cmp ja (bad) inc ljmp xor or sub sub je mov hlt mov test ljmp adc test cld or mov or movsl clc dec les jns pop xor push cld roll loopne lea sub and clc std je cmp jb push mov enter iret push xor mulb (bad) push fs popf or shll (bad) addb push push mov insb mov inc pushf mov push jbe mov fbstp mov pop pop pop add mov mov popa test lea jmp dec dec dec roll es cmp or cmpsl push xlat sub fnstenv push pop lods ret and pop dec adc jecxz js push push add sub rcl popa cli out loopne sbb mov push mov fistpl pop les lahf lea sbbb fldenv and adc push roll push cld jle mov xor jp cld test enter repnz adc add cmp cmp mov jl adc sbb les add xor push cmpsb je aas pop cmp jbe bound dec push cmp jne fisttpll dec pop or sbb nop push add add sahf add mov cld push addl ds add jmp mov test je daa sbb adc sbb mov and mov imul test addl addr16 or aas lds test loop dec pusha pushl sbb int fs pop jmp loop xlat pop ret rcr arpl push jb xchg xor push (bad) inc (bad) push fadds add sub xchg popf jne sub aad and lock (bad) xor push repnz adc dec or sbb rol movzbl hlt int sbb test pop lock dec mov bound adc cld test adc shlb push xlat xchg or xchg push fs mov sub add push (bad) out dec adc pop (bad) jle or pop sbb ret sub push push mov repnz mov pop jmp push gs icebp jb stos or xchg xchg adc fstpt les add cmp or or add call ret hlt sbb das mov sbb mov add ret std pop sbb aad xor test or inc push add sarl fdivl push sbb adc les sbb add fadds pop movups in jnp inc stos sub sub cmp cli push hlt divb cmp xor adc cmp xor mov sbb pop mov xor cmp or fisubrl pop in je ficoml js leave mov mov popf cmp xchg daa push push pop and cmp push sbb mov mov fldl push fucomi or xor sbb cmp push sbb fisttp add std movsb jns or sub sbb (bad) or sbb orl push or push and inc xlat add (bad) (bad) roll negl sbb pop in mov adc mov sbb adc push lret mov mov daa jge lea xchg jle mov or pop arpl sub pop xorb mov stc push add lock mov js xchg lret movsl mov fadds (bad) (bad) pop fcmovnu test add add aam inc mov cld adc mov add mov xor cmpl pop mov add sbb es fstpt mov je or je add jae sbb ror jne loopne cs add das add push pop mov enter jnp xor and sbb out test jns movsb mov cs aaa nop push inc inc andb cmp (bad) arpl push push and cmp and lods mov je dec rclb or adc fcomps fiaddl adc shlb add imul sbb jbe mov fstpt sbb add and push mov mov push sub cmp fistpl xchg (bad) mov pushf loopne mull sub nop push jl jnp in adc shrb mov lods dec cmpsb addr16 adc push ja sbbb or inc mov and mov add popa dec jb adc adc push push mov cmp sbb sub stc orl push jbe lea and loopne or push mov sub push mov shr and add repnz adc rcl ret sub in insl adc je push mov push mov (bad) enter or mov mov adc and cmp int3 adc mov pop or pop cmp stos imul cwtl loope push xchg pop jo clc les adc push or dec cmc mov (bad) je ja mov jg push add movb and ret push or sbb fmuls out add sbb loopne ss sub sahf ret movsl sub in scas and jg push cmp rcrb call adc pop dec xchg push xor push jmp sbbb add and jno push jne mov (bad) jmp in mov test push cltd and add imul add shl cmp push and mov bound cmp jg cmp jne pop (bad) pop fcomp movsl fdivs add jmp sbb ret loop add push add int3 push or push int xchg pop xlat hlt mov mov or je cmp sbb cmp jl cmp add cmc clc mov adc sahf push jae addl add outsb mov lock push adc inc adc mov shr push mov or or outsl leave out jle fstpt push je cmp je push outsl cs andl push add xchg sbb fistp rcrb push adc jae mov pop (bad) pop sub mov fcmovbe (bad) je cmp jle push dec insb xchg ljmp adc das inc arpl jbe divl ss insl mov movsb mov lods (bad) pusha adc jne add adcl inc aaa sbb ljmp loope mov sbb ljmp mov add or inc mov pop jmp pop dec push adc sbb pop inc adc mov mov adc mov sub jo xor (bad) mov adc push mov add push jno xchg xor xchg mov movl repnz cs push pop js mov sahf add dec xor push or and outsl lock fadds cmp ljmp lea cmp nop pop mov xchg or fidivl cwtl jle and cmp mov xor loopne incb fidivr push ja daa clc mov fidivl sub cmp cmp and xor sub sub sub sbb stos clc xchg cwtl cltd sub push sar push and and shl sub pop mov add ret adc add hlt lea cmp outsb jl xchg outsb xchg xchg (bad) sarb push jg (bad) inc add jnp mov jbe dec push jmp jne push and cmp jbe adc xchg add or subb dec hlt subl (bad) (bad) fild cmp (bad) decl aaa mov ljmp ljmp cmpsb mov (bad) adc aad jmp xchg jne jg mov cmp addl lock les push inc hlt add or ljmp push outsl je adc sub aaa ret pop aaa test push dec xchg mov inc or cwtl fsubs xchg mov push inc xor mov les nop and push and mov lea test dec sti push mov and bound push inc sbb xor dec (bad) jne pop sbb add cmp movsb mov mov sbb clc add adc add pusha loope mov or outsb sub out inc (bad) jbe (bad) js ja jb cmp jae nop or (bad) or mov push dec mov (bad) fadds in add jno push sti xor jb inc adc adc and in cmp inc jbe or pop lahf inc pop lea jl insl je cs jne sbb lods (bad) sub fistl jmp sbb mov jae mov cmp or cmp dec cmp adc jb outsl out aaa andl (bad) xor incb ljmp push fwait lods xchg or arpl inc or rclb add push pop cld mov jo pushf add pop cli fbstp xlat cmp and lea add or loope lea dec sub int3 test sti xchg xlat (bad) jp inc sbbb mov jmp mov push test out (bad) dec mov adc or mov push outsb push adc movsl xchg sbb aaa lcall adc pop mov mov pop mov adc je or inc push call and cmp xor adc inc xchg pop pop pop in and push jae add mov jmp adc lock push sub push pop sub hlt (bad) or mov push pop xlat fldenv loope jnp (bad) push or stos cmove (bad) mov add cmp jb popa xchg mov es sub rolb cs test dec add xor jo pop adc push inc in dec cs pop loope cld jae neg scas xchg jp js clc push push mov pop movsl push stc jae lea je add incl xchg adc sahf jge or int subl pop stos jbe and out call xchg and dec sub inc add push add out or pop push lret pop mov sbb jae out das sub loopne dec mov out push jne aas mov jo aad xor jbe push xchg mov fsubrl xor push pushf xchg or jnp js bound lds in mov addr16 adc cmp cs inc fisttpl and std loopne push incl cmp fsubl fadd sub xchg add outsb and xchg ja sbb mov lock pop in or cmp pop xchg cwtl adc jno iret cmp mov xchg lahf push jmp imul push outsl das (bad) and rcrb pop mov jae mov addr16 xorl mov xor inc sbb test es fsubrl adc adc xlat test in push push cmpsl cmp sbbl and sarb push mov clc pop (bad) (bad) pushl and (bad) in inc mov mov decl or cltd push push inc dec jp pop and pusha adc sub faddl aam push mov loopne mov and pop and or fwait push sub in mov rcrb push pop add jo nop (bad) pop jo jo pushf fidiv sti or sbb xchg std mov cmp add adc add push jl push mov mov aaa scas jp inc shlb xchg mov adc and jo into xor adc inc les cmpb shrl ficom in xor sbb adc out xlat inc lods lcall mov cmp inc ljmp fldt (bad) add mov stc add sti cld inc std and adc and nop leave adc and and fistl mov dec push enter movl cwtl dec cmp inc pop dec into push lahf jo jne mov xchg mov push xor push push push aas faddl clc cmp mov out sbb addl aaa add xor jge mov push mov adc fcoms popa or sub add sub in ret cld lods mov test adc push xor push hlt inc pop push adc dec xor jg aaa add (bad) pop repz cmp sbb daa and sbb mov icebp push push sub pusha sub sub sbb inc mov adc add jne push mov pusha add orb sbb aad push ja scas xchg inc mov outsl inc popa lahf xlat dec loopne or add pop pop pop pushf outsl sbb push (bad) fidivl jp xor adc dec das jae mov pop inc dec test sbb insb loopne or fsubrs dec cmp ror cmp cmp in mov xchg ficoml add sub jge mov or pop icebp jg jl out roll dec or inc insl cmc jbe data16 push add rorl enter fdiv jl dec xor dec or incb shll loope cltd inc subb jae mov add inc sbb push fdivr pop push bound adc sbb rcll aam je jnp (bad) cmp (bad) jne and bound and and or icebp adc subl ds push cli test jp xor (bad) xor loopne ja decl adcl pop cli sahf ds sbb jmp push push (bad) aam cwtl (bad) ljmp push jmp into mov cmp mov xor rol sub aaa cmp in and hlt inc push hlt jae in jle sbb adc inc fldl mov pop push jnp in dec mov (bad) je push sbb mov add cmpb push pop lock push sbb lret mov jo xor jnp or xchg push sbb (bad) inc mov jb sti js and int3 mov les jmp insl push or (bad) add or adc stc push inc inc dec pop (bad) pop and sbb or sub cs into outsb push mov aam cmp jbe fiadd xor or xor mov lods bnd xchg inc mov mov loopne fldt mov mov (bad) pop or or xchg in inc push or sub dec les or sti pusha inc cmpsl add add push mov jb adc push add sub jl push shlb roll cmpsl fwait int3 push daa cs or pop and inc mov rcl sbb mov pop mov les dec aaa mov push or xchg mov mov cwtl inc pop shl test or nop fisttp mov test cmpsl test add add and xchg fnstsw bound cmc outsl pop test jne push or add jle mov mov les inc mov cmp push lock jmp sub cmp jge and psubb adc jne jmp cmp aas cmpsb add add (bad) mov mov and mov les (bad) nop xchg jmp shr ficompl (bad) xor lock in mov cmp dec dec movsb je mov (bad) mov das push movsb push leave push xor lahf mov mov jb lods aaa push sub lods pop mov mov mov sub push or mov push (bad) cmp jge movsl lods dec jo pop sub pop cmp xor pop cmp lret push mov inc xor loop add cmp (bad) mov inc push mov sbb inc add mov fidivrl push mov test xor repz movzbl add std cld sti into (bad) repz stc clc xor jo add lock movzwl xor jl hlt pop lock sti mov sbb xor lods jo adc shrl adc pop and loope dec adc sti les and cmp mov push push xor sub jnp ss or push sbb fsubs jne push pusha and pusha sub js mov pop (bad) xor jbe sbb dec mov notl cmp in pop mov jne test push xchg dec adc (bad) hlt and sub std mov adc mov lock add fs bnd push dec push gs cwtl cmp inc lahf jle pusha sbb add pop iret add lcall gs ret loop push cmp adc pushl ss jp mov int repnz adc xchg pop pop cmp push fwait aam xor clc clc mov sbb fmuls add cmp add scas movlps or jg or incl push and shr clc inc add adc push dec and sti lea leave pop in sub sbb pop mov adc sbb push imulb or cs add mov inc push sub mov sub cmpb (bad) mov mov inc inc xchg dec cs push adc enter adc pop adc dec and nop leave push jbe test sbb xchg jo xchg std and dec sar movsl bound add inc mov notl fisub pop xor dec xchg add pusha push sbb inc mov stos pop pushf xor out ds enter push jo fs iret adc adc imull (bad) rcrb push or les sbb or dec inc rcll aaa lods add add add fstl dec lods int3 adc add std arpl adc and push jnp xchg inc mov or inc test dec pop or ret ss popa aas enter loop add cmp add pop ret (bad) push paddsb add add enter add and adc int3 add cmp fldt add or jg es sub inc ret lret mov loopne cmp push lea inc inc pop xchg push jbe sbb insb push sub mov jno jnp lock fbstp sarb je push push sbb ss rclb or inc sub and lahf and or fwait sbb sbb (bad) ret (bad) ffree mov out mov nop push xchg sarb push sbb sbb and notb nop fimull sub iret ss test pop push mulb icebp bound jl jne (bad) sub mov mov daa pop push xor int3 leave mov sub add pop mov adc jnp mov fs je mov sbb popa and pop inc (bad) adc ficompl scas mov xchg or sub add add fmull jo xchg gs fnsave test add shlb testb fcoml mov add ret sub insb cmpsl adc cli jae mov inc add (bad) jmp aaa pop add jno subl xchg dec cmp fadds push xchg adc adc or push sbb pusha ss push pop push adc fdiv iret sbbl and push dec sub roll or lods pop rclb inc test pop inc push mov fmull sbb mov add push ret push push jo or add cmp or push cmp pusha mov push jl roll fadds pop outsl sub pop (bad) jo inc outsl nop rorb inc mov xchg add lock sub pop sub sbb roll mov or inc adc cmc push cmpsb dec inc int dec sub cs sbb pop arpl dec xor js arpl jle xchg lds add sub dec ljmp shlb cld mov or insl mov (bad) sbb cmc mov or add shl xchg sub (bad) mov cmp or xor sub jge sbb push xor and ret adc xchg cmpsl sbb xor mov into sarb inc xlat mov cmp dec push inc les push sub fistpl sbb ret add push xor mov mov mov adc inc or lock or add cli clc addr16 and push push push adc dec sub lea out add pop mov mov fild inc cmp mov pop push push push test add adc pop sbb sbb pop inc jmp or adc aas add pop pop mov adc xchg mov or pop mov mov mov and and push iret add mov push adc (bad) pop (bad) (bad) sbb leave push mov fadd fidiv push push sbb fld cs mov pop (bad) adc idivb (bad) jmp cmpl jne push inc jmp inc push fstl pushl inc and add jmp xchg and xchg idivb rol pop cltd cmp enter mov lea sbb lahf mov outsb or push jge clc or or or push xor cs je dec xchg clc push mov or mov push sbb sbb sbb xor and adc jnp andl pop jmp dec sbb mov fstps jge mov mov jle push or cwtl sbb push push jmp inc mov mov jl adc enter cmp je or add pop ja cld popa mov adc xchg push inc (bad) pop mov hlt movsl mov and or sbb add or int3 push scas jmp rolb pop mov cs inc adc or adc sbb mov mov out pop pop cmp or xlat adc dec out or fbstp call mov push xor adc (bad) (bad) ljmp (bad) xchg push add mov push push out add xchg in nop add add fwait mov mov outsb loop lea push out paddusb sub mov pop sbb fwait add mov push (bad) add fxch nop or mov movsl xlat jne movsb (bad) push rol mov fmuls jmp xchg adc daa xorl pop fwait in push push jae cmp xchg mov mov mov neg aaa setb push ja pop sti mov data16 or add push mov xchg or sub push andb jbe scas add cld mov test mov addr16 rsqrtps push push mov adc ret mov sub add test mov or imul pop aad jecxz pop jbe pop sub add aas jle push xchg add test sub nop sti push mov push lea lea mov outsb sbb push push xchg add test sub and push xor dec enter loope and push xor and add fldt jl inc sarl js dec mov pop pop fs aas xchg notb xchg sbb mov adc in dec inc movb pop cwtl dec cmpl inc or adc adc test mov add insl adc mov test and shll xchg aam dec pop mov and cmp ret adc push mov movsl dec pop lahf push bound adc mov cmp jb nop push loope dec cwtl push sbb call inc mov fldt rcrb or cmp mov or push sbb xor lcall cmp js pop mov inc dec cmp xor mov inc lds cmp lds lret push mov or mov mov push cmp gs cmp mov or mov pop cmp arpl insb jb mov dec inc pushf and mov sub nop mov add adc arpl adc add sbb xor inc (bad) insl mov add add pop aaa xor js dec add enter popa mov lods test mov mov push popf jbe insl push icebp add push xchg insb inc pop enter adc or aaa mov push cmp push jecxz jbe push pop and jno mov addr16 nop or fsub popl clc or lahf shrd jne xor mov lret or loope mov jo add inc cs call mov adc insl cmp cmp push insb (bad) orb pop adc or aaa pop mov mov stos push xchg rcrb add adc lock in sbb adc test mov xchg add and adc pop dec lock lret cmp jne xchg xor inc loope add push sub enter sub or xchg out pop and and jmp push mov jmp sti bound push adc dec add jge push call fmuls add pop mov (bad) (bad) leave cmp or (bad) pop cmp add dec cld data16 cltd cmp jne push lds nop daa mov or jmp incl lret inc std pop imul sub je pusha dec mov sbb dec fs inc addr16 test popa jmp ss idivl cmp in mov ljmp jo push add xlat shll cmp jle dec inc mov push add mov popf out push imul add sbb inc mov out (bad) xor sub lret pop or push or clc sbbb mov cmp (bad) or add mov mov xchg add mov cmp aaa sbb pushf inc mov adc orl sub jo (bad) leave sbb adc mov cmovo push cwtl add scas shl inc pusha add sbb test rcl jae in loope adc ds xchg in ss (bad) xor aad pop xchg dec push mov cmc pop pop cmp inc loope mov sbb mov inc sahf jns (bad) mov jl push cmp xchg (bad) mov lahf add test mov inc push mov sbb cmp mov xor mov push orl inc cs sarb je push sub xor nop push das sub sbb insb sub add ja mov jge div mov mov bound xor pop rclb add (bad) negl les lea cmpl push mov jo popa pop adc xor push sti jne sbb mov push xchg inc dec add fcmovb int3 shlb inc push push inc xor aas dec inc xor push ret jne xor ret xchg pop je inc push mov dec adc nopl and shrl bswap cwtl xor test ja fimul xchg int3 and push jl (bad) cmp push mov jmp roll mov inc cmpl sbb or adc call cmp aam loop mov test aam mov loop inc jle test hlt pop and enter out ret pop push add sub pop or sub mov inc mov lret pop ss bound lea outsl inc rol pop xchg jne pop add push ret or add mov cmp jp add dec jbe push fstl stos xor push mov xchg adc sub adc push and cmp not adc and push jmp sbb or jae xchg jnp add or push cmp sub mov daa loopne loopne mov mov (bad) jo adc inc adc test in movl (bad) sub push lock inc aad inc mov int3 push adc lahf nop and mov push and es or pop mov fmuls fwait mov mov cli pop mov loop cmp test hlt sbb (bad) push rorb jg pusha or int or xor inc mov in jmp call adc push fcomp lea shr push and sbb add dec mov or add or data16 inc in aad inc mov or into mov lcall daa lock or mov bound mov jmp in add ljmp add pop push fildl push sbb pop mov pop cmp (bad) aaa or adc push jmp dec push hlt mov (bad) and out adc flds data16 fcomps pusha insl xor push testb push sbb sbb xchg mov jl fiaddl jmp add icebp jne push jb add pop ds inc push pop push mov mov or dec or and mov or jo or notb mov lds movsbl pop mov add add sti js addb mov dec or xor jl ret pop jmp (bad) mov in xchg ss dec xor outsl adc mov enter pop subl call jle sub mov cld add dec add mov push xchg mov mov rorb and mov push or (bad) insb push rorb rclb add and push aad xor adc (bad) pop mov push jmp cmp les and scas mov push dec incb add add jb push and push inc mov push clc loop mov add test mov mov bound mov dec lods push cmp xor cmp loopne jp pop add pop sub fcmovnb xchg mov xchg mov (bad) pop sub stos push mov push pop ret mov xchg (bad) lods xor inc sbb push push jo popf movsl and testb aad push dec sbb (bad) adc xchg rorl add lock addr16 movb or push mov mov sbb xchg pop in pop fcoms dec mov and cmp outsl add andl ljmp or lea les xor je je clc sub cmp mov mov push repnz add push aas adc or inc or jne mov jle aad and test or pop or out add add jne sbb push cmp sbb jp jne or addl sub mov cs sbb or or lret add push push int push mov mov push aaa ljmp (bad) mov add sub call pop clc stos js add mov cs xlat decb cmp test popf movsbw out popa shl cmp int cmp or pop sbb mov and ficom inc sub call lret (bad) push sub fsub inc cmp pusha and jmp mov fisttpl mov and mov inc adc cli fsubr cmp out ss add fidivl ss js lock rclb pmuludq insl or fildl mov mov xchg xor mov scas mov je mov and sti cmp pop arpl cmp out outsb inc inc inc pop add jmp outsl adc xchg mov enter das (bad) pushl add push push push mov in jbe xchg fmuls sub ja mov mov ja add popa in ret jbe jmp inc push inc cmp xchg push adc daa cmp add pop hlt ja or mov push in mov jl aaa movsb (bad) js jmp xlat arpl or jne es or or int imul outsb push xor xchg mov nop hlt shrb adc xor pop test cmp mov les pop iret aas jl mov cld mov dec loop fs movsb xchg cmp jns subl xchg and sbb xchg and ret fldt test sti push test mov into adc mov add add inc adc add in mov pop pop test je add loopne add pop enter cmp inc mov push mov aaa jae jne pusha push cmp out pushf add sub lods add pusha xchg stos mov lods movl push jmp jo std cmp inc sub (bad) je insl sbb xchg mov mov dec dec dec push xor or push mov imul jge pop clc mov int and lret and lock inc movsb lea push mov stc pop mov cmp mov jbe shr pop mov mov xor add lret pusha cmp xchg push in mov adc sbb xor jl test jno push cmp outsl add sub sbb cwtl outsl xchg cmpsl call ja mov jbe les cmp sbb test push cmp pop in ret cli jno inc or shr bound push jmp mov adc jbe push hlt rcr add sub (bad) jmp adc mov jmp add aam adc ljmp push aam or cld xor fmuls mov and xor mov mov shll xchg sar xor mov (bad) sbb sub ljmp sbb aaa push (bad) mov sub or jo in xlat jnp test loope fs call dec loop xor sbb sbb mov aaa cmp xor sbb (bad) push iret repz lods pop shlb and sub js loop and and sub mov js popl push sbb fistpl pop inc fs xor push and jb inc inc insb pop jb lock or xchg incl insl cltd xorl xor sub pop xor or or adc fsts jl mov push xchg inc or mov pop cmp or jb jl xor adcl mov mov or xor mov xchg push mov repnz inc or jg lock mov dec add jge rcrl loope out sub jle push inc lcall fadds popf sbb dec in loopne add test fldl jmp stos or jl popa insb mov pusha pushf outsb pop xchg inc call in jl inc push and aad push dec jle or dec clc jge add enter xor adc add push lea arpl mov sti dec ret xor adc shr cmp fdivrs mov add cwtl cmp je daa or aam cmpb movl xor fldl fdivrs mov push push adc pusha lcall sbb call ljmp ret in mov out lcall fs ss xlat xor subl push pusha call je xor clc jl andb add xor das push addb mov mov adc mov xor or nop sub jne fstps add mov pushw iret xchg cld dec add movsb add cld dec leave push mov jbe pop sbb pop inc adc aad mov jne inc mov fwait dec add adc clc push push mov inc scas sub xorl fldl jno push mov adc mov xchg divb mov adc fldt int add ret push in add push sub jne mov add in add xchg lea or popf popa jmp xor loope cmp in and mov fs mov sbbl cmc cmp add test jl jl xchg pop inc inc adc cmp add subl jae pop jg sub cmp adc aas push mov mov or inc sbb ljmp pop addl icebp int outsb adc xor jo push (bad) push mov lock (bad) sbb sub mov push adc loopne (bad) pop repz mov or (bad) pop movsb pusha sbb (bad) int mov adc adc cmp and sub rorb ret mov cwtl and clc loop add scas cmp and xor add xchg jge comiss or push xchg out data16 adc clc push call inc clc inc jb insl mov ljmp jmp pop sub inc inc cld inc xor rclb sbb popf popw sbb jge push mov cmp (bad) adc add inc divl xchg sub push lds xor ljmp add cmp cwtl mov (bad) or and add lea enter push addl push dec orb xchg or rclb js add fs sub and mov dec jb pop inc jb ret and xchg xchg add mov shrb or mov mov (bad) enter sbb sub loope scas xchg pushl push es inc hlt pop xor xchg mov hlt xchg std aam cli mov pop adc push push ss xchg orb test dec aad jbe (bad) sbb dec aas stos adc cmp jne mov daa mov push and scas add mov jmp and loop push (bad) into xchg push dec sub sbb cltd outsb sub jo pop test clc repnz xlat insb add test add cmp sti je add inc and and mov mov add xor mov pop inc movsb fdivr inc sahf cmpl je jno sub clc jl jmp ss ljmp sarl push dec jb add call lea fdiv pop stos push lock jbe pop and mov mov xor jg and or lret push add push push out test mov fnstsw cmp dec loopne mov xor pop or cmc data16 inc mov (bad) mov (bad) push cli push push pop mov out test adc push pop insl or js push push jne push sub sub jle aas sbb shrl jnp xor pop add adcl adc add fistl sbb les or add (bad) or popa lock repz cli mov sbb lods mov repz pop mov inc xor xor push das into mov push aad inc mov jl mov push lahf ret mov or and inc add mov lret dec adc push fcomps fldl cltd mov mov adc push sub cmp adc decl addl sub xchg add pop pop push xlat push shlb arpl lds inc add or push out push aam xchg aas push sub std push mov cltd pop fnstcw je xchg pop add adc mov jge pop and insl inc add arpl arpl hlt shlb cmpl hlt movb push xor lock lock add sub sbb loopne (bad) cmp repnz insl insb push xor mov push sbb mov mov mov or push push fmull cltd add mov lock inc mov sbb inc (bad) mov adc push loopne mov jecxz and fstl jl call rclb or add adc scas ja cmp fcoms pop mov dec xor popa leave mov jge push scas cld push mov xor daa nop das push mov ss mov (bad) mov and shr jne mov jmp jp mov xor or adc mov add lods ljmp push and mov mov lock inc xchg loop xchg cmp mov repnz inc adc inc pop in mov add nop ljmp les add outsb sub add sbb in lods inc lods pop jle lahf sub push rolb (bad) negb inc jb mov inc lock push hlt je pop pop mov cld mov inc pusha adc cmp mov jb scas clc mov cld fstp or mov add xor mov inc inc and pop mov cmp ja jmp daa mov add cwtl sub jo mov out push enter inc sub sub pushf or xor push or add and add jg and insl lock (bad) mov inc push sbb test jb divb in enter sub bswap cmp or pop adc sbb (bad) or loopne sbb sbb aam push push rorl out or test js inc xchg fstps push aam cmp mov (bad) add popf add clc sub push sbb dec cmp sub fldenv add push lods jno push outsl (bad) sub add je pusha imull mov xor adc add fsub pop addb xlat add add test test adc adcl add lock xor adcl mov arpl pushf adc push xchg pop add (bad) dec push imul test mov jbe push data16 pusha add mov mov adc clc lock sbb adc jne sbb movsl cmp xor jae add lods pop hlt stos xor bound hlt xchg (bad) mov test inc pop mov xchg xchg lock (bad) or lea fiaddl jo enter sub cmovbe ja and lcall jo jo lock inc mov sbb inc mov dec xlat ret js dec (bad) or (bad) imul data16 sub push sub dec pusha jne cmp adc push push sub shll mov add push pop add (bad) pop dec pop std dec pop jne mov je stc jne roll cmp sub jg enter mov and arpl addb out jo inc add and push pop sub xorl cmpb and cmpb adc ss test mov push xor notb pop jbe test (bad) es gs sbb cmpl js mov add ret and ja sbb jae sbb mov enter sti cmpb jl add stos mov cmp call add pop jns aam fisttpl outsb jnp sub inc push xchg mov lea and clc sub movsb stos mov push push ss stos rcrl sub add or dec mov mov and sub nop push push xchg stos and xchg xchg sub jmp sbb pop enter clc lea ret ret add lea push mov sub loope daa sahf xor ret decl sbb adc jmp dec cld xchg push push aad sbb mov insl je shll mov add das dec sahf sbb clc clc clc sub add add sbb popf mov arpl test add push movsb mov mov mov loope ljmp inc jmp ficompl and out sub inc and stos rclb mov ret movsl jne jne push push add push lods pop aaa imul cltd push sub fimul mov cwtl not aad ret je inc pop movsb jle pop mov add (bad) push cmpl sbb push call daa and mov popf or xchg add daa xor xchg jne xor or sbb sbb loop clc adc es add daa push push fsubrl rorl jne and int3 mov test or dec aam pop inc jmp sbb mov add and out mov push xor cmp or inc sub (bad) lock jg pushf xchg aad and sahf xchg dec or and (bad) data16 je sbb and fucomip cmpsl int3 (bad) je mov ss mov aas or push push int sbb jg adc add pusha push ret pop pop dec mov out sub jecxz mov xor adc pop mov daa push dec js into sbb xor push add imul orl pop test jmp dec jge repz jne adc rclb mulb add arpl fadds sbb rcrb add insb jb add sbb pusha pushf adc cmp cmpsb iret adc lcall xor les push rolb add xor push xchg andl or push adc cmp pushf roll sub add daa sbb adc and (bad) in jmp xchg test rol add push add and pop add adc mov sbb cmp cmp mov adc add add shrb add push aam in and les test ret xor movsb jnp popl movl or mov mov fs xchg add xor movb sub sbb mov pop movsb mov dec adc sbb data16 dec or mov pusha inc je mov xchg inc add lock mov mov jp jmp jle in add inc and insb xchg and dec add (bad) mov inc adc add cs adc sbb enter pushf jl cmp add and ljmp cmp inc fisttpl inc mov enter fnstenv xchg mov adc sub mov test mov push sbb dec xchg ja imul and or and mov and in pop or (bad) jae loop std pop push xor es or into es jnp int3 cmpsl dec push cmpsb or push xchg mov pop mov shlb sub fiadd mov mov orl and and jmp adc pop pop push mov add and and sub cwtl ljmp pop sub daa mov cmp roll jo fstps add mov inc cwtl mov leave fisubrl stos in adc jae lahf jbe and (bad) adc sbb add fwait out xor add add je xor out xchg sbb adc addl pop push mov add aam cmpsb add xchg push add push gs lahf or lahf mov xor xorl mov add lock scas sahf jg xchg insl add fs movl jb dec push xor scas mov push xchg or (bad) pop lea int3 add push out jmp mov outsb stos dec fcoms cmpsl and aad lret fiaddl adc insl (bad) and test pop adc xlat sbb push cld arpl push jmp add icebp xor test sbb sub jp add and or sbb mov aas das jo je les add adc sahf adc add inc mov decb nop or in adc sldt (bad) inc pop adc push ret pop testb fisubl or sbb adc jg in add enter fildl add lods pop push push insb adc xor sbb adc cltd (bad) or adc pop push mov into push push sbb and add dec xchg xor gs (bad) mov (bad) xor call mov shrl add jp or rclb jle push pop add sub push in add push sub mov (bad) mov shlb test cmp push sbb push out or mov jecxz mov lods imul xchg inc ljmp push pop or pop rol push mov or cld and ljmp pop test jne and sar mov xchg sbb adc push js push daa stc in jne pop jne scas sti movsl adc cmp jne adc cmp cltd nopl pop mov mov lea (bad) stos push inc push lret xchg cmp cmpsb mov and adc mov mov std dec add mov and and cld aad cmp push pop pop fiaddl outsl xor adc sub jnp jb push adc jae lea mov push enter push cltd je std mov in aaa clc imul lea inc cmpl mov test mov or inc mov pushf push test xchg or addr16 add sub jge aad add xchg fidivrl rorb adc pusha je or jg adc mov mov push cmc stos sub repz mov cmp add xor loope sub (bad) dec mov jne icebp add aas mov movsb mov jg inc push mov jnp dec inc lds push cmp mov sbb push in xchg cmp jl out or dec (bad) adc mov sub cmp adc inc pusha push push dec add or ss inc fsubp icebp pop push icebp loope xchg inc hlt mov and mov xor xchg mov push push ja dec sub rorb add push sbb dec jecxz dec xor jmp movsl inc inc out add insb adc mov fsubr or adc push push daa mov adc cmp and pusha pop inc xchg aam mov aam inc push sti inc lret pop push or or incb je jl push adc fildl mov les cmp cmpb adc mov nop add loopne jb dec scas xchg jne pop jae lods pop or push mov push inc pop mov cmp mov push adc mov fistl mov dec fnstenv mov jb adc andl cli insl add cmpsb or nop add ds push push pop in push cmp vxorps sahf fildl add push bound hlt and push cmp jne mov mov in fnsave adc or iret mov push sub push and inc xchg push adc ret repnz loope addb loopne push xor fidivrl mov out in push sbb or outsb pop sti mov sbb jne cmp jl add jg cmp jl inc sbb daa sub (bad) aaa jg push mov push call inc into push push inc push negb fnstsw negb outsb sbb lret shl mov jp mov je sub dec pop mov outsb ret mov fcomi fildll and loopne roll inc pop inc dec mov mov shr mov dec sub push cmp jae out mov sub push push cmovle mov insl outsl push orb push dec aam mov xchg fwait push das sub fnsave xor std test or push xor cmp adc dec rcll jo xchg jnp inc sbb add mov js xlat sub mov inc dec ret insl mov pop hlt mov leave js mov in sbb cli incl mov push je mov cmp mov dec and test rolb mov mov loope or sbb inc sub inc push or adc mov ss push lock or or ficompl aaa jbe (bad) rolb sub add xor xchg and arpl jl add push arpl pop jge frstor add or stc xchg add ret mov insb cmp add call std in jl call cmp mov mov add dec sbb std jbe jge lcall adc movsb outsl xchg adc mov pop dec imul scas push mov shrb jne adc inc jl loope orl sarl clc add mov inc loopne or sbb leave enter dec xchg cs mov mov push ljmp in out cmpsb mov shr push push inc xor or sub lods and push lods lret mov push insb and pop sub pushl cmp cmp adc adc or out add cmc stos adc and sbb insb (bad) pop insl call stos cmpsb xor test mov inc call inc pop xchg or scas cltd int sub mov test or or ret cmp add shrl es add fsubl call sub rol das push stos push fwait lret rep push test inc push stc pop adc xor inc sbb loope and adc xor loope xchg push cmp stos mov movsl (bad) test or pop cmp das pop je xor or das jns out fistp cs js mov mov adc mov pop mov mov inc ja imul pop adc jbe add loop mov lret pop movzwl inc js add rep push in neg aaa sub cli mov jno add mov pop pop pop mov fistpll adc mov sub sbb inc pop adc push mov nop hlt stos adc cwtl or adc push jne sbb mov jnp mov js cmp je add sti icebp sbb jp je inc mov sbb push mov add push fcmovnu mov mov or mov dec push push and mov push cmpsb pop or xor insl gs jp adc (bad) dec pop and scas pop push aaa inc adc mov mov roll xor cmp mov adc jp xor jb insl and pop mov in cld mov mov (bad) (bad) mov adc pusha mov lahf inc inc (bad) push mov fs mov add or jbe inc mov add scas rcrl pop xchg adc mov ret add lods imull insb push ja scas pushf or lds push add mov jo adc add aad pop fcomps fs xchg sbb jb sub mov dec insb inc aam dec and stos add shrb shrl fcmovb push fs and aam mulb (bad) sar adc and sub sub (bad) arpl mov inc shr jmp mov lea dec push pop lea push inc cmp cmp lods pop dec cmp rcrb ret mov push push xchg cli ret sbb das ljmp cmpsb push lds dec pop outsb pop pop and cmp test and (bad) push std xlat add sub (bad) test mov cltd scas push add jnp mulb cmp jg lds mov iret mov add jae dec je (bad) es inc push sub sub mov mov cmovnp lds jmp aaa adc cmp jb adc dec jne mov fcmovnu call push add out xor push dec stc faddl lret int3 adc fadd fisttpll jmp incb jb push xchg dec xlat cmp mov jg mov mov adc cmp mov inc loope incb fucomip pop movsl and push push jge cwtl fdivs fldenv cmp xor push sub mov outsl adc insb or push push ficompl loop outsl mov lret lock popa stos cmpsl add enter mov or lret mov popf mov mov ret jle push shufps (bad) out cmp dec int adc adcl inc jg aas ss or inc arpl jle jp in or pop sarb dec cmp (bad) lods pop push cmp sub adc and jno push xor mov adc sbb push xlat ja mov pop mov jl dec jbe mov int3 add dec jbe rorb cmpsb add jg dec inc sub sub mov push inc loopne inc mov add pop xlat sub jne and popf mov xchg and cmp test dec adc and cmp insl js mov neg mov in inc addr16 jmp mov stos pop xor ret sahf and push lcall (bad) mov js movsl inc fwait pop or cld test insb ja stc cmp sar lret pop ret inc sub xchg xchg cmp out inc dec int3 mov or inc sarl dec inc mov mov data16 xor jne pop mov pop ja jg arpl inc add sahf push (bad) sbb popf out inc test outsb test test push mov mov pop add pop inc jp aad add pop js mov inc push (bad) std sub inc in adc ja addr16 sub dec cmp jno mov (bad) push or sti lcall dec nop aad (bad) in lcall push pop mov enter jno mov fidivl ficomp aad (bad) jne loopne pop mov xor pop out push jns adc sbb add add adc push xor outsl ja inc jb cmp std loopne mov xchg fdivrl inc cmp popa push xorb icebp sub add or std or decl (bad) dec mov sub xchg jmp cmp jb rcll push ja xchg add add notb mov (bad) cmp call push sub inc sub or pushl add inc or sbb mov roll mov adc jne or jb and and mov lods js jb xchg mov in rcr in mov inc cmp jle cmp jge xchg insb arpl or fcoms inc roll push and cmpb lock int adc test or push insb sbb cmpsb push xlat dec sub push mov mov mov movsl mov or xchg cmp add jmp pop add mov fs movsl mov xchg add push push out push pop out pop jno je je and test enter cmp (bad) mov add xor stos push ss cmp pop sub stos mov xor xchg cli fbld mov mov std lcall mov sbb sahf cmp fs sbb mov push clc sti fistpl (bad) mov jmp (bad) enter inc aam (bad) adc jo jecxz jo pop cwtl xor inc adc jmp dec push jne nopl jb (bad) imul cmc push or push sub pop pop test outsb push sbb lods (bad) jo pop push cltd sbb frstpm(287 inc call push and outsl pusha lss add sub repnz or adc mov inc sub daa (bad) jne adc push inc dec mov push pusha jecxz adcl cmp dec sbb fs fwait cltd fmul (bad) je dec shld les or xchg rorb lods gs mov xchg int loope inc fidivrl or jge sahf xor xor das push push lcall sub test xor dec and lock dec (bad) lret push sar pop push jno push neg sbb inc addb js ret (bad) or or pop cmp jp or je dec and dec inc adc inc fwait (bad) or ljmp dec and pop or insb cmp movsb mulb pop insl cmp add cltd (bad) ljmp cmp mov clc pusha movsl loopne sbbb jle jl repz loop movl inc insb push fdivl add vpabsb xor ss mov push adc mov jge mov cmp jge fld inc or or movq clc movsb jo dec mov cld jb ja push or push not in push arpl fmull cmp bound jp jne in stos fsts mov push sbb (bad) pop mov add (bad) aaa cmp push push sub or add mov addl lods outsb aad icebp adc jno add lock xchg and add mov pop mov or or adc imul cmc roll gs stos adc imul pop mov lea xor dec pop das jo cmovb movl insb rcrl pop push jmp and mov adc rorl jbe icebp cmpsb leave andl add add out add mov stos jge data16 mov mov mov (bad) pop adc jl add loopne outsl rorl div outsb and add je out rcr pop xor popf int jl shll jge sub xor les dec adc dec clc mov out std jne mov inc (bad) xor add and inc add inc mov ret insl (bad) call cmp (bad) mov rorl or fmuls jae mov or jecxz arpl jno out add shl jbe insl and add xor sub mov movsl orl mov xorl orl sub mov or or je xor fstpl sti xor imul sbb add mov scas cmp pop pop jmp push sbb insb (bad) xchg adc add aaa push dec inc xor mov xchg dec adc cmp pop leave xchg push add rcr or inc cwtl adc sbb mov outsb push push xor push js mov jecxz ret pop and xchg inc shll ljmp add or add inc test add movsl pop add xlat xor xor sbb rorl fstp dec push out jne pusha loopne and mov mov or or cltd mov into xor pop jb out mov in call rclb push push cmp sub add push icebp sub add mov mov sub arpl inc sub (bad) scas or cmp in add repnz cmp nop inc cmc div in inc push clc stc cli nop inc push cmp cld std dec fstpt in incl dec into addr16 rclb jb adc xchg subb dec out or ffreep out mov cmc mov divl mov xor mov pop or scas mov fs lea jmp adc je or insl fidivrl sbb sbb nop sbb out int (bad) add dec fdiv mov push xor cwtl lock scas push rcrl daa push mov mov (bad) lea add jne push sti sub adc fsubr add mov sbb pop pop adc (bad) je sahf mov jle jle mov shl div fistpll notl or mov or jne js xor push mov aaa jg mov inc mov mov fmuls pop shr and mov pop pop popf and jle nop inc jmp popa shl pop push or fcoms adc push cltd fiadd fldt sub mov ja cmpsl insb pop pop sbb inc xchg add inc cmp xchg shll out inc adc xchg xlat xchg mov push movsb rclb mov inc mov adc push and stc sahf mov mov sbb ja ret sub test xchg mov mov add mov push xchg cmp (bad) or push pop lock call (bad) adc lret call pop xchg mov shrl ret or lea add or and sub push sbb sbb xchg cmp pop and test fistpll jle add cmp mov jg std push shufps push or lds jle int3 sub mov add or shr lock popa ljmp jmp lea rclb pop dec jge cmp ja outsb je jmp mov push push test dec aas cs mov and xchg incb enter jle mov xor xchg mov and push adc pop lcall fmuls repnz repz ret ret push and aad or mov cmp (bad) push add mov shl cmp orb mov fistpl inc mov lret xchg movl (bad) pop sbb in ss mov nop and and pop inc push jge mov ja (bad) push push stos sbb pop rclb push (bad) je (bad) add and jns or jbe lock int in sub push orb shrb insb mov adc sbb ss dec add xlat jb sti sub lea mov imul cltd movb aad push push add test or jl xor cmp std add inc mov inc inc xchg xchg inc push push (bad) xor push dec jmp or and adc push out fs push pop jl mov (bad) push add mov mov jmp add jbe inc repnz adc inc lods rorl xor xlat xor mov xchg push jnp pop insb inc xchg adc lds mov mov (bad) fimull sahf or scas add xor adc sbb mov loop mov push cmp jb inc jmp mov mov cmp rolb fimul xorl lahf add sbb xchg inc out mov pop inc les lcall decb loope fsubrs dec cmpsl mov and ja in data16 leave jl add add outsl lret lods mov mov ja sbb lods mov lea sti daa mov jg xor mov jns ss and or test cmp jb jne mov (bad) ja xchg mov scas mov jb cld das jne sub jbe fbstp sbb loope mov jns mov jle mov jb shrl nop lods test push sarl xor sbb loop add mov daa lock push sbb jo pop in or pop xor shll movsb pop stos inc fdiv (bad) cld into jb (bad) jmp pop mov (bad) push ficom ret popa mov out jg ret adc push inc popa mov xor or cmp cmp pop orl lds push jl or cmp jg xchg and inc mov (bad) lock mov mov and orl movb mov (bad) jp inc lea add mov adc daa add push mov adc push push ret add add int push imul add mov mov pop or scas sub add sbb fwait mov mov pop add push out add sbb (bad) mov dec mov pop inc sbb adc sub inc test dec cld dec sbbl js jne cmp outsl xor cmp fsubr sub or (bad) fbstp testl add push dec pop iret mov mov test nop jge pusha je jne or add and and inc loope outsl mov mov pop loop or add shr (bad) dec arpl jne dec mov cmc xchg ss xlat js rorl leave je pop push dec or mov mov inc push sub push and (bad) scas dec jne pop pop xchg data16 sbb sbbl lea sbb jne and mov mov and mov push mov nop adc mov jo outsb (bad) jbe jne dec mov fbld jg inc adc roll cmp mov sub out or out out pop pop mov inc or lock pop xchg shll js pusha cwtl pop jl lcall mov shrb jl dec jmp clc out mov outsb cmp jge add jbe dec xlat jmp pop cmp lds test adc xorl cmp jg or xor rolb sub sbb rorl or inc lds sbb outsl mov pop pop insb pop push adc aaa push inc jg icebp sbb (bad) (bad) call and in jle insb jno pop (bad) icebp xchg cmp sbb push mov mov xchg mov pop xchg add add add dec adc and sbb add jle adcb or cmp or lea in jle push sbb sbb mov fs test rcrl sub imul lds aam mov (bad) dec push rorb iret cld mov mov push outsl xchg (bad) adc pop cmp inc pop push dec xchg arpl or xchg js aad ja xor fs jae hlt jle jl add rcr mov jmp inc dec pop cmp inc or xorl js in dec cmp xchg push mov mov aad fisttp xchg test mov add xor mov cmpl xchg adc (bad) push or add rclb mov dec or aaa lock xchg lods in mov hlt inc (bad) andl sbb add pushf pop add nop (bad) add ret andb imul sahf sbb inc add popf cli pusha push fsub push jle ret add or enter mov cmc add add inc pop sar sub add mov push mov mov xor add mov push mov adc or fistp pop jp mov adc les push ljmp fsubr pavgw sub or sbb mov in cli push enter loope sub xor pusha cwtl outsl xchg sub push inc inc or adc adc mov or cmp (bad) ss test cmp mov xchg add push mov xchg and xchg inc (bad) shl das nop popa andl mov sbb mov (bad) xor nop lret mov sub inc fdiv (bad) dec ret xchg add add adc andb lcall mov es push sbb mov cmp jle fadds add ss fsubp add jecxz mov fadds je xor push cmpsb cwtl fwait stos int3 test cwtl stos or test lock jo mov mov lods sub test sbb daa mov in add and mov arpl sub cmp mov xor fidivl push jb jmp push xchg push bound dec cmp lahf (bad) out outsl or shr push cltd mov jno mov ss popf add lahf xchg (bad) lock mov test inc mov fs pusha mov pushf sub jg adc push out rolb mov mov xor dec loopne push fwait insl mov xchg push lock mov mov lcall add lds sbb (bad) mov push test (bad) out add jmp push inc mov pop cmp (bad) lret (bad) mov sub inc pop and adc add ja mov sbb dec stc mov push sbb in loop fwait addr16 cmp mov bound xor mov and out add xlat pop setbe mov into add cmp (bad) push hlt or outsl pop icebp and or shr shl dec in lock pop andl rolb xchg popa inc cmp dec leave jo xor dec rolb leave (bad) repz add inc inc add inc mov mov je clc cmp fisub push fisttp or dec pop mov xchg sarl sbb mov mov inc enter sub and cld mov (bad) push mov add adc (bad) mov dec sub push aad rcll jnp add rolb shlb adc not push rolb mov mov add and push and pop movsb mov add dec mov mov cmp add pop ret adc or cmp mov sbb add add or movsl inc sub lcall add push popf clc adc (bad) repnz mov or push inc cmp push add mov sbb sbb je adc ficoml jge jo mov adcl aam or push push daa inc mov dec clc mov mov sbb inc and or nop mov shrb inc push push push mov cwtl ret sub push and add push push les xor push ret sahf call cmp rcrl (bad) and cmp cmp inc mov int or out mov enter mov adc rorl sub das push jo sar or xchg fidiv cmpb mov mov add dec pop or inc jno pop clc dec insl lock dec xchg mov sbb and mov das jb xchg sbb mulb js loope push push mov push or xchg arpl fcomi fwait sub add sbb shr xor sub aas mov outsb lds adc push inc push mov or xor cmp jne pop ret stc mov pop and sahf cmp mov push mov add or add mov sbb push je xchg das pop push add pop adc cmp nop add xor add mov and data16 inc fsub mov mov mov dec repz mov mov aam into mull pusha ljmp outsl fidivrl in mov cmp testl dec sub push add sbb adc mov iret dec sub inc leave jne and jae scas or mov bound rolb dec push jmp je mov xor push sbb mov and add jae imul mov xor dec lret insb in adc push fs sbb cmp repnz mov push xchg and inc cwtl insl sub pushf push and push cmp (bad) jne mov (bad) cmp add mov sub xor (bad) or mov je lock add mov sub pop test call mov (bad) and sbb inc cs jo mov mov or adc xchg sbb lods and shlb and mov mov mov in cmp mov cli mov adc push shr jge test and and (bad) mov in pop out push inc push inc lods loopne movl pop (bad) or or rcrl ret push cmp ffreep dec add cmpsl push mov or adc mov mov push jp xchg or mov jno sbb or sbb pop mov ja mov xchg xor and inc push sub pop aaa and or jle fnclex dec and push or push push (bad) mov inc pop add and out or imul call push popa shrb sbbb orl push cmp jae divb loope ss push in or sub incb sub mov xchg shll push mov add ja inc int3 clc adc sub mov push inc cld push test cmp cmp mov repnz into pop ja sub inc jnp cmp jae sahf bound mov jb (bad) lret mov outsl and scas and add push adc lret mov inc loop pop in jecxz fmull loope mov popa and mov xor inc add mov rorb xchg adcl mov jmp inc dec (bad) cld ja sbb lcall and or jne dec and push push push inc sbb fild sbbb mov popa mov add fstl add pop inc or push out nop in sbb cld and mov xchg hlt push xchg sub xor test sub push dec mov scas jnp aam xor mov xor test push or jnp xor push lock pop popa shrl loopne push das dec pushf push jbe or dec inc sbb inc xor cmp sbb shl fsubrs push mov cmp leave jae iret mov mov lret hlt dec sub or ss (bad) adc ret fsubrl faddl mov flds push push cmp (bad) mov (bad) std gs int outsl sbb insl rorb xlat push pop dec cs dec xchg in dec push dec dec leave mov mov lret imul inc jnp cmp and inc mov inc test (bad) fidiv sbb cwtl sti mov dec push mov inc inc sbb or and pop pop adc test test fcomps test enter cmp adcb fcompl das mov dec add enter test push xor push push push push fisubr adc jg and les bound lods sahf (bad) (bad) and push mov inc sub mov push rorl xchg sarl cmp jne push xchg dec push aam jb inc sub xor nop jbe leave cmc push push pop cmpsl lds ja shrb sub push imul pop sbb stos inc and xchg in es (bad) lret adc inc and xchg test or sbb mov out xchg ljmp push mov adc nop insb dec aad or in sub cmp xchg jmp push xchg dec push test sub xchg cmp sub mov mov aas int3 pusha dec xor cmp pop xor pushf (bad) je cltd and mov (bad) in mov cs shrl inc outsb out push push data16 and adc mov das aaa lds pop and mov ds inc dec (bad) adc xchg mov add xlat pushf mov push inc dec push or push enter mov in inc lea test sbb lret data16 sbb lds cs repz stc jne daa or in mov push cmc rsm mov out or add imul xor mov test push jle dec push jl xor jno push rclb add dec push push lds loopne,pn sbb and pop pop mov xchg or dec adc or shl in loope xchg inc rolb into pop and dec or in jnp xchg pop xchg push mov call push fwait and aaa add xchg dec pop add fs lret mov (bad) mov inc add adc (bad) pushf inc sub pop push fwait mov xchg in ffreep xlat lret inc inc outsb pop pop mov repnz out mov mov add mov hlt bound push sahf sbb sub cmp adc and cmp das jnp test mov je adc add addl std call int3 dec sbb dec test inc mov sbb fsubs std sub outsb mov sub mov inc sbb push inc (bad) ret mul (bad) xor nop (bad) jae enter (bad) mov or push jnp push lods and repnz xor push mov loopne dec and sub shrb fdivrs pop shrb dec or mov mov add fbld lods test je in loope and hlt jmp (bad) mov popf cmp sbb (bad) sub dec repz test xchg mov mov add dec sbb adc adc inc enter pop add adc fsts jb cwtl sbb pop sbbb pop mov sub sub pop add push scas fimull ss insb or loope ljmp sbb dec pop dec rcr jnp jb cltd decl loop stos pop add sub cmc adc inc sub sbb and xor rcl es adc dec scas or arpl mov stc mov adc xor lods or mov sbb dec add dec loop and jmp fistp ret sub adc mov dec pop or pop jne pop sbb sub push add mov in cmp xchg inc mov ljmp (bad) ffreep mov inc mov (bad) pop insl jmp adc roll sub sbb sbb mov or movsl adc inc js xor out inc sbb push push fdivrs mov dec push dec das push mov dec add out cmpxchg sbb push push cmp cmp sub std sub inc dec mov dec fisubrl cmp in lahf xor lds data16 cmp fstps pop adc mov mov inc enter aaa dec outsl mov and or imul add cld dec std divl add divb jmp add add sbb or xchg push or dec lock push push cwtl and daa (bad) and push pop das into mov sbb push sub (bad) (bad) mov mov jo push or and push pop adc push mov cmp push (bad) mov add xor inc add inc fstp jbe (bad) lret pop dec push sti je fisttpl dec pop jmp pop adc cmp mov sub sahf ds add aad ljmp rclb jo call ljmp pop pop pusha fs insb jo js mov push test mov std mov ljmp dec mov jne cmp pop jge mov xchg mov sub push fidiv ret add sbb cmp cmp mov push adc add cmp dec sub cmpsb jbe xor ds push pusha bnd mov cmp jne dec sub cmp jne cmp scas sub push add fdivrp outsl cld pushf sub out jae lea sub js push ret add mov jb mov lds mov dec add repz adc pusha inc mov jecxz jg mov je xor add dec addb pop jne fstpl lds pop outsl iret mov cmp adc cmp or inc mov and sbb inc cmp jb sbb xchg or cltd push adc mov cli (bad) xor xchg sub popl aam loop in pop sbb cmp (bad) cltd add inc adc arpl mov push add jmp test mov inc and mov and sub adc mov pusha inc sbb insb adc and jmp add inc add mov popa push dec dec cmp pop mov push xor test push or out shrl daa ja or insb insl add jle add mov decb or lds pop sub adc mov mov (bad) sbb outsl fdivrl out add fidivl hlt push fist pop mov push test lea icebp inc dec mov je sbb je mov adc dec mov sbb fwait loop dec rol sti mov xor fcompl (bad) icebp sarl mov je jmp test add test cmc test cwtl jo sbb rorl ss jno in movsl in pop movb dec mov pop stos ficom cmp jae mov test add xor jmp jbe add out mov or ret lock inc xor and jmp ret enter mov lret mov cmp and inc jno test mov icebp sub lea and mov mov clc shr pop jne inc fwait add inc in or mov lea (bad) dec and (bad) je repnz sub sub imul sub sbb mov rcll dec call xor cwtl lahf pop and mov add fimul mov andb push and sub jb push dec and outsl sub mov sub inc sub (bad) rorl sub ljmp sbb and je add inc jbe cmpsb aas ds sbb push mov push jbe (bad) call mov add dec push push xor mov xorb inc mov (bad) ljmp insb xchg clc addb jge fisttpll push push dec jne daa sti (bad) and pop ret shlb lea pop jl push mov hlt dec jp inc sbb repnz push hlt push mov sti jne mov (bad) repz call mov pop das and pop push xchg mov (bad) sub pop pop aam pop sub pop notl xchg or jne mov scas mov adc xor jg movl adc add mov inc and cmp add in inc test in jbe adc sbb adc (bad) icebp xchg dec stos in je adc shlb fist mov inc cmp mov ja or call mov repnz data16 mov fsubrl lds dec sub std mov xchg test push inc xor sti data16 sub mov jl mov sub and sub inc push push mov (bad) (bad) rorl ja pop lret daa shll pushf xchg mov xor push or xor pop mov jg sub or dec jnp inc mov pop jge,pn and xor xor sbb pop cmc inc sbb decb or (bad) dec jecxz add mov mov sub mov mov push push add pusha and pop lods dec fistp movsl pop or inc push jb mov (bad) pop or and rcrb lea jmp loopne dec add ljmp out test jne add dec mov or jle add add cmp pop nop add movl xor mov ljmp fnstenv xor inc mov xchg iret and xor es (bad) jp jmp cmp jg fimull push sbb mov je cmc lcall cmc xor div xchg mov pushf sub add push jb mov jbe (bad) (bad) out cmp jbe sub mov mov inc inc dec jne je jbe in outsl addr16 cmovns push push mov adc jp dec push aaa js jbe sbb push add (bad) cmovbe cmp daa or sub (bad) xor mov adc lods xchg jp loopne test sbb jno or mov mov in mov rcr ficoml fdivs or dec das push (bad) mov adc dec mov inc mov sub fwait inc or test push pop sub rcll xor adc add jnp je push and mulb jle fucomi mov data16 cmc insl xorl inc mov mov push sub xchg push inc mov (bad) add push add int jae enter stos shrl jbe cmp (bad) movsb push std pop in xchg cmp cmp jmp lods fistl sub xchg pop pop xchg jne pop add and or inc scas adc outsl fnsave push adc insb std ret mov or loopne enter adc cmovno push pop aaa pop xlat in pop fmuls push and mov mov mov mov add (bad) gs sbb pop int3 lea in pop xchg mov add add mov sbb sbb mov inc cmp sub and loopne cmpsb imul (bad) je mov mov (bad) in call dec in in lock hlt inc dec (bad) xor clc cld cld push out pusha aas rorl mov hlt mov add adc leave xchg mov rcrb std adc nop adc push sub lea jl cld test addr16 or loopne neg imul fucom pop stc in sub hlt pop or pop popa jae insl add outsl push out jbe inc inc cmp dec and mov sub pusha sub xor mov push mov pop xchg push pushf add mov (bad) xlat fnstenv ret cld mov pop sbb xor rcll adc or (bad) xor or or fwait in mov add mov (bad) mov test add and mov inc mov inc call sub adc cmp jmp std inc (bad) jbe pop pop sti call imul cwtl std cltd js sbb lock push cmc pop jae mov fbld (bad) jb outsb and test pop push add pop push inc je sar (bad) or dec pop mov and push sbb lret add fisubrl push push push and sub orl pop inc das add aam jne push pop pop daa mov std xchg or cmp inc jecxz xor jb or add add xor (bad) and in decb dec push sbb lock sbb pop add ret sub inc mov sbb int3 add in popa lahf in jnp aaa sar adc hlt pop pop js add pusha cltd scas xor pop lahf in leave add jmp push enter pop cmpsb imul add cld add nop aad or loope jb push xor test pop sub xchg or cmp push jmp sbb add dec push pop fs sbb (bad) ja lahf and add push lahf dec lahf ficomp jo repnz mov and mov push push mov test jle or or or scas pop ljmp loopne mov push scas mov or jo stos push jno pusha add imul hlt insb ret test std add mov movl insl mov es ss dec xor mov pushl push sbb sti mov subb addr16 movl adc sub fsubrs movl sub mov scas mov push jl daa clc inc push pop (bad) pop cs sbb jae pop or pop adc add (bad) xlat std pop sub add inc jo pop jno mov pusha cmpsl add sbb in jmp jno test movb arpl insl out sub dec insb mov add adc mov or call pop test jne daa inc jnp insl aaa daa push mov mov pop arpl or aad neg jge std inc jo jne adcl mov pop inc add xor cs add sub lods incb mov push mov cmpl js psubusb push pop inc push pop adc inc sbb insb or movups sbb mov loopne mov clc arpl jo mov adc mov mov add or mov dec sbb xor jae fsubs xchg sbb and movb jg jp insb jl lds sub fdivl push sbb xchg ss jo push clc push push dec or (bad) (bad) push (bad) jo das inc sub and push push adc enter gs aad stc lahf gs or cmpsb dec jmp adc adc inc xchg aaa pop cli mov mov fisubl ret outsb pop push inc scas pusha or dec inc rolb sbb push fs fs inc jns cli test (bad) jo cmp lock xor data16 sub sbb xor fucompp fwait test ds inc pop push adc into mov je rep pop or ljmp ret sahf ret ret adc fisttp stos movl decb int dec push inc dec or push inc cmc out xchg mov mov cmp je adc push jo sbb pop sbb sub mov imul pop add xor (bad) xor adc add adc mov and mov ret cmp jle add and mov dec flds add xor xor pop (bad) mov add or sub movsb cmp and inc lcall lods cmp (bad) lea loop or or or nop outsb in mov add es push push cmpsb mov fs jg inc adc pop adc adc jne adc adc and dec jae or adc cwtl ret add adc xchg (bad) adc adc fs sub dec cltd adc nop adc out add pop (bad) sbb cmpsb xor sbb sub xchg or sbb mov popa int add sbb (bad) cmpsb jnp dec mov jb sbb sbb sbb sbb dec jae inc pop pop xorl jne add add sub pushf addl ret iret cmp xchg pop inc aas inc (bad) mov (bad) cs adc mov cmp je dec repnz mov repnz rol lea dec aad add mov imul sbb pop (bad) pop add (bad) call adc dec daa dec leave add std das jo and sub ljmp (bad) jmp out in in and mov in dec mov xorl adc jge out enter mov lock add lock xor and in fwait dec and inc repnz enter repz imul push jmp hlt dec mov es and divb div popl inc cmpsb cmp clc push jmp dec adc and dec xor lock cli cli test sti mov in cmp outsl cld sub adc pop dec xlat inc std sbb sbb outsb xor dec (bad) adc jmp jne mov ljmp roll or mov xor push or test or jecxz adc rcll sti in and movsb leave fdivr and cld adc sti out out dec cmpsl mov outsb call inc push and sub pop pop jmp jmp inc dec pusha dec (bad) in add and cli pop sahf pop pop mov out out cmp push lock push cli jns pusha or add fs sar and pop inc mov mov arpl (bad) cmpps rorb add cmp popa jns pusha (bad) sti push cmp mov roll addl and fstp add dec add scas lods pop adc jle nop insl nop dec (bad) mov (bad) enter outsb icebp mul sub mov scas imull dec mov and out sbbl jne sub idivl mov test enter cmp mulb mov jns xor mov insb out out and mov cmp dec scas sub and pop inc pop add mov pop or sahf cmc repnz nop pop mov and jae xchg xchg or dec div dec pusha scas mov idivb mov and imul divb and hlt stc xor push fmuls in push inc push cmp and dec enter mov push out das and (bad) (bad) xchg xor hlt add in decb inc xor dec insl aaa add add pop xor adc push loope loope cmp loop scas repz sub fwait mov in adc add mov nop push inc push iret or mov bnd jmp aad bnd repnz cs sbb repnz or inc in in jns sub add pusha or xchg inc loope mov arpl mov icebp lods leave add push dec xchg inc nop inc leave sub push icebp lret enter sub cmc mov jp icebp xchg nop inc pop jp lock sub push ret inc xchg out popf lock stc lret push jns lock push gs lock push lock js xchg insb adc test sbb in inc push mov cmp sub mov mov add sub jae push ret mov pop push add and leave add add mov add dec add andl jo add xchg inc jne test orb sahf inc push mov jb dec add int mov xor or outsb jg cmp add daa add sub das adc push mov popf sub test and mov add (bad) and pop punpckhwd sub and fisubrl cmpsb imul sub (bad) mov insb rcrb push arpl dec mov dec adc mov pop aaa add add fsubr add jge mov std or je fldl jno pop pop mov inc add call xor daa loope cmc push fisttp das pop cmpw insl mov cmp cmpl outsl fnstsw pop cmpl stos jo addl xchg shll ret push push sbb nop sub add add add add push test pop add sbb sbb ds sub and jae,pt mov cwtl lock ds inc inc mov adc pop inc (bad) std pop mov enter and mov icebp (bad) adc or dec mov shr push fadds xchg mov cmp xor dec push sub jnp dec (bad) jbe sbb add or push rclb add dec ljmp fildl test mov fld imul cld and fldl jae das stos (bad) lret outsb je push and pop mov sub push pop push mov mov mov loopne fildll mov mov clc inc aas mov addr16 jle add loope gs out ret add mov adc shrl movl push push cmp add sub pop sub iret jbe push pop fildl push das or sbb or add xchg repnz add add pusha mov fadds jae shll push outsb jl loopne imul stos insl add lock cmp in adc aaa push push inc pop sub push cltd lret js mov daa and mov adc dec add rclb jne lods adc sbb fcoms cmp out inc dec xor xorb mov xchg push lea scas (bad) ja ret mov pop jne adcl cmp les cltd and add arpl (bad) push aad mov fdivrs js sbb sbb ret ljmp xor stos or rcrb sub cmp (bad) cwtl pusha or or loope xchg push adc jbe mov jg or adc push sbb cmp mov in fisttp adc push or int3 test xor mov lods mov pop sub pop jmp lea frstor fildl dec adc and jg add (bad) jg jg outsl inc add push ss jle sbb jg jg out or lea add (bad) dec jne mov add jo jno mov pop adc ret cltd mov sbb jno dec (bad) into clts adc xor scas adc cli jbe mov or jne mov into pop jg jg add adc icebp push push loope arpl les push push ja pop pop sub outsl and sub bound fsubrs fsts inc sbb mov insl jno and movsb sub push jecxz xor arpl adc or in mov add cmp push add dec ret jno ljmp ret and xchg lods test hlt adc xor inc imul or sarb das cld lcall sbbl pop jle xchg push jmp push push lret loop cmp (bad) jo add cmp inc adc jl sbb push push mov pushf loop sbb inc adcb sbb sub fdivs mov push push mov push push js out js mov loopne push and in lcall add rorb out or cmp jmp push mov and loope sbb push mov rcrb mov sbb (bad) decl or or orb cld shrb sbb sbb pop adc dec mulb mov xchg mov lock cltd insb adc dec xchg push in out xchg lods pushf sub or pop scas add sbb (bad) aam nop cmpsb pop mov inc cmp aam fbld mov pop sarb push add inc jbe ret cmp pushl mov or mov ret jae movups fcmovu mov add inc mov push shrl insb pusha in (bad) std ret jp insb pushl push les (bad) mov sub cmp sarb mov xchg xor outsb mov aaa dec push mov test add in data16 add pop inc and mov stos and popl add insb scas push or jmp adc daa adc fsub test mov adc pop inc or and or and dec adc popa lea xor and xor inc dec adc cmp adc dec scas push mov mov push pop add dec jno xor test cmp fucomp and aas dec pop cmp jns or out push add sbb and es stc push mov add or cmp jae sub mov je shll push in sub cld pop mov mov (bad) xchg jmp or insb movsl push adc in mov add and push inc mov test jmp cmp and test es mov iret loop or mov fldenv adc mov or xchg pushf cwtl mov sbb insb mov mov push push xor dec mov les cmp xor xchg sarb jmp addr16 push push int3 sarb pop jne cmp push or aas xor adc pusha add and popl or sbb inc mov adcl cmpsl inc jecxz push add insb mov enter dec mov ljmp xchg ss stc fist mov mov mov adc cmp dec aam jg aad mov aam inc test loope iret or jnp push push mov loope xor add pop or stos fs fsubp mov les jl scas mov or sbb repz mov (bad) repnz stos add rol inc dec push adc push in in or ret or push ja xlat insl mov movb jb pop pop adcb popf jmp fstps in gs shll mov jmp add xor or push add icebp lret cmp pop jbe jmp fimull cmc ja cmp cmp or add mov add xchg push and fcmovnb fs adc or adc add in in cmc enter jne push push popaw add mov mov fdivrl jae push jb pop push fsubrs lret push fldcw add adc or jo bound pop rcl std imul cmp sarl in mov mov loopne or inc es roll and xchg lahf mov pop and cmp mov cmp jb mov xor and push int3 jmp push jbe mov mov in mov mov cmc sub dec or push je add add add sarl pusha out inc add push add bound push mov push jbe lea add or add icebp lock or push cmp add inc or adc xor lea sub push lea outsb das fisub inc jp data16 mov or jge adc mov dec push pop pop add cwtl inc mov adc mov (bad) jae xor test test (bad) imul jnp pusha fstpt je iret xor sahf push stos adcb push adc push test add imul decb pop mov or mov pop lea sbb sub adc xchg mov imul rclb call sub lea xchg jnp dec aam mov cmpl (bad) mov xchg sub jo and es daa mov je push scas test sbb and push adc imul aad pop push cwtl and fwait mov and cmp dec or jmp cmp cmpsb push lret inc mov push and aaa ja pop dec push dec pusha push mov popf test imul xlat mov cmp jne dec int3 push sub cmp icebp pushl or das leave push xchg rdpmc mov test fcom mov pop push insl mov lahf js loopne mov ret mov jne aam popa or dec mov add aad adc adc and sbb mov mov scas lcall loopne rolb inc inc je pop test mov push add out lahf sti fnstcw movsb mov pop into inc push repz (bad) pop lds call add roll cmc adc sub mov xor sbb out sub fnstenv xor dec mov mov ss inc (bad) inc mov xor push cmp inc dec jne cmp jo mov ja into or xor int stos push pusha loopne and call mov jmp mov add mov dec jne dec pushf xor and and ss add mov test xchg pop and inc and enter inc dec or cmp popf sub sub sub stc xchg clc ret pop cmp mov push adc mov ja push cmp (bad) (bad) rcrb push jmp clc or mov aam sbb xor incl (bad) jae icebp shll push and cmpsl test rcrb xor rolb cmp push sub and and xor pop aas jle mov int3 xor add and loopne test dec adc add mov add mov jecxz fwait ret push aad stos jo je mov mov mov add outsl and lods dec adc sti sti xchg bnd lea gs ret or cltd fs std cld (bad) add add mov dec (bad) mov out add or sbbl lock or mov out jle (bad) push aas add jg punpckhbw push inc sub mov mov and lea inc add adc in xchg call lea sbb or add or scas (bad) cs and jp rolb fdivs push mov cwtl mov movsb mov idiv pop or test and pop mov mov add cmp ja cld pop mov or inc add push xchg inc mov and ss fsubs jbe gs add scas cmp lea push insb loopne test adc ret xor call add test push fcmovnu and movzwl ljmp adc mov adc je and mov daa jmp movb shr sbb mov (bad) lahf js sub mov lea adc cmp ja dec push pop roll ret cmp push and and mov mov cld pop inc cmp add mov xor pop aad sahf ret lds clc add inc jo cmpl mov ja adc push nop and add mov push sbb mov out pop in fbld mov inc cmc aam add cmp mov inc das mov push or sbb mov sbb clc fsubl jle adc add dec sbb push pop lods inc shlb add or pop pop jno and pop add push xchg xchg xor (bad) pop adc arpl push and push push inc rorb stos movsl jns mov lods add mov out pop jge push lea imulb mov add mov jp add or and std roll or test pop and mov pop hlt xchg xchg movsb add pop adc lea or movsb arpl rolb inc icebp movsl pop orl jne push cmpb iret dec pop mov test sub ret (bad) inc mulb imul (bad) leave xor lea mov popa sub in xor in fidivr sbb inc cmp jbe popa loope ljmp mov mov testl jge add cld jo jnp jmp inc or (bad) push pop test push movsb int mov test or inc pop cmp fisttpll fsubl inc inc pusha repz and not sbb ret add negb cs inc jle test loop mov mov inc test push push cs xchg mov adc sbb sub (bad) push mov mov mov cld notb or xchg inc scas dec loopne cli clc adc add pop mov push and sahf push mov sti rclb push jl add inc or push sub pop mov sbb mov sahf frstor (bad) cmp pop cli xor cld pop jne push add sbb adc push mov pop cmp pop call repz lds vpsadbw or xchg mov pop dec or or or adc (bad) mov add sbb data16 mov inc jmp sbb std pushl cmp dec sbb mov outsb scas scas jae mov ja leave and jmp (bad) or push mov sub dec mov mov mov call push push mov (bad) add pop loopne sub lret pop push cwtl movsl mov push adc int3 pop mov adc icebp sub xor cmp adc outsl shrb sarb xchg adc or dec pop adc mov and loop fsubr inc insb mov or mov cmp inc inc or push xchg in pop mov (bad) adc or dec sarb aam pop add pop xorl aaa jae pop mov pop cmpl (bad) je cmp cmp fs pop mov add mov fisttp leave ja sbb add xor mov in and push pop cmpl mov pop pop cwtl je lds ret adc idivl loope dec adc fnstsw mov mov sbb and push add rcr rorl mov xchg je aas dec rclb (bad) les fsubrs fstps xchg xchg or inc loop adc bound sbb jo jle xchg inc inc sub push fild inc ret call test adc cmc or inc shlb mov mov cmp imul pushf inc repnz push lret or add or cmp and js ljmp cmp jle push and sub sbb lret jne or fwait sub mov add mov ds pusha mov xchg adc and push mov inc and and pop and push mov and sbb mov daa (bad) xchg or inc push out pop div pop ja push inc aas or ret stc jb mov rcll les ret imul bound in inc or or add dec push je mov enter cmp std mov push imul cmp inc xor (bad) mov mov mov testw fsubrs je dec sbb shrb (bad) cmpsl imul cmp out test inc mov xchg cmp push hlt fcmovnb jnp stc push push mov sub lds cli pop add cs arpl outsb out adc and jmp outsl or lea push (bad) fadds aam in sub mov jmp out or pop mov or loopne test loopne sub jo lret cs add aaa adc mov popa and xchg sbb cltd sub xchg test je dec lock push jle outsl or sbb inc notb jle sub test pop loopne cmp sbb sub adc out ljmp mov push adc push jmp adc add hlt jno adc sub cmp in mov sub xor and push push add adc sbb shlb xor aad std or test mov mov sbb (bad) (bad) (bad) jnp int pop jp int3 push mov or mov sub cwtl mov je xchg (bad) push les rcll xor iret pop aad (bad) call push push add test inc cmp jb mov dec in pop adc jns and lods ret add clc push pop cmp xor icebp add adc fdivs adc test rcrl inc and enter add call sub push dec ja pop aad jne cmpb jmp or add cli add or clc or adc sbb adc inc aaa mov push adc sbb jne inc hlt mov test mov and add sarb shrb pushf add push cmp or outsl rcrl xor loopne sahf inc push pusha jo mov xor push inc and aas mov dec sarb loop mov lret cwtl loop sub push mov adc insl inc add ret push cmp add cmp rep into cs les push xchg sarb push lock push adc enter push data16 dec incb pusha mov pop cmp outsl mov jne aam and cmp (bad) cmp stos mov mov push xor or loopne inc inc cmpb orl sbb jnp jb add xorl add push add ds or adc xor mov ret test sbb xchg push or stos dec dec dec stc flds cmp add inc aaa push popl andl sbb jns xchg hlt shrb pop and movb loope mov push add add fbstp push add ss in fstpt mov or out cmp (bad) stos mov lods sub sub sub cltd dec les call not jge popa xchg sub push stos nop std add outsb stos pushl aas push mov int inc and push dec add push and call bound mov jnp ljmp or stos and adc adc or adc xchg jne push sub or push push repnz mov lret mov mov add push insb lret cmp rcll imul add add jg pop or jge jae (bad) inc adc inc sub fistpl or sub dec daa cmp jne pusha inc inc mov or adc fimul pusha inc pusha andb idivl pop or (bad) ljmp add xlat jge imul jle mov cmp sbb push inc add nop cmp add loop (bad) mov daa fs pop jge add pop mov adc orl and cmp adc lea dec out lahf (bad) push cmp and sarl mov jbe sarl jae pop in add mov rorl inc pusha imul push mov xchg (bad) leave pop cmp dec add sub push cmp ja pop jg,pn cmp imul inc inc and mov mov je mov or shrl pop inc xor cmc test and out in gs push xlat mov cmp jno jp (bad) dec dec cmp cmp mov inc add inc ljmpw add jbe lahf jne or lret inc push jmp fmuls aaa data16 das fisttp gs sub dec push add push rclb movsl cmp mov (bad) fcoms cmc cmp and sub dec add sbb and loopne sti (bad) pop mov and lock outsb add add push sbb adc jmp mov inc add int add adc mov loopne sub incl or mov mov dec ret add dec adc insb mov mov lcall add mov pop mov mov test add ljmp decl fstp pop mov ret mov cmp push xchg repz adc jecxz fdivl mov cs inc inc and add lods clc lods or mov add aam insl js xor into inc cld (bad) mov adc add leave jne lret jo (bad) ss je mov inc mov sub mov je,pn in sub fcompl jmp inc or pushf sbb daa icebp sbb imul xor adc popa idivl leave test movsl roll mov and clc out lods mov cltd pop ljmp jmp xchg jge call xor cmpsb test xor inc test adc ljmp fs out (bad) cmpsl aas jae mull loop adc jae mov add out pop pmulhuw fwait addl sbb pusha ds push push inc dec mov loop xor cmpl pusha xchg push sbb shl rcr inc aam jl add sub outsl ret dec pop add fild mov hlt test push les arpl cmp dec jecxz jbe pop bound add or jne push fbstp mov (bad) push sar cmp ret and cmp push adc cwtl and popf cmp mov fwait and jne inc out xor popa sbb (bad) aas pop and aam ret jmp or push out jne mov (bad) aam mov test adc or jge mov jge insb jne add js imul (bad) dec in (bad) xor inc rcrl mov roll out mov cmp and and inc pop js pop jmp and sbb imul mov inc (bad) add lea add sub add mov mov mov push cmp xor lock insl mov out and jge enter or rcrb push cmp adc pop mov sub sar (bad) loopne (bad) mov lea mov mov adcl mov add xchg sub andb xchg pshufb adc xor jb jmp mov popf jmp or stos jle mov jg xor push add je mov test dec adc outsb lock jne or pushl cs jne sbb clc add out add lock xor or cwtl pop (bad) push test out leave bound fucomi inc or subl xchg jl adc xchg sub repz xor add add sub (bad) dec subl imulb ret adc (bad) cmc push push (bad) jbe mov inc imul dec cmp (bad) jne lret cli inc jmp and or je xchg pop daa movl add sti add mov adc pop pop jns push cwtl adc xchg ficom jno insl mov and push and jle cmp xor xor mov (bad) push sbb inc add push mov sti addr16 or sbb inc out ret test jge jb scas fs lsl dec cmp push sbb ja push loopne adc ds sub sbb pop push jbe xchg push scas push mov adc push mov adc or ljmp stos mov imul adc mov outsl lock cltd or shlb sub fnop loop or jge adc stc lds push pop lock jl decl daa inc hlt xor mov loope mov test (bad) mov lock pusha std jmp clc pop pop pop mov cmp movsb jge mov pop cmc mov jo or pushl cltd add pop movsb cs jl adc dec jb and js add lock popf hlt mov push gs or pop (bad) rcrl (bad) pop xlat inc jge fcoml and jne sbb jno rcrl out loopne addb mov dec ret lret xchg inc cwtl in pushf inc and push push and movl push push (bad) jmp push ret sbb lcall xor or dec lret push push addb mov fistpl push jmp shrb test or sbb sbbl fmuls jnp adc icebp push (bad) inc or iret or add jne lret cmp or xor or jecxz add (bad) add add popf adc add pop lock mov fcmovne shr in scas lock decb add dec mov or enter push cli pop sub fadd test rclb xor inc in andb inc adc or mov (bad) sub lret cld shr sub inc hlt iret imul enter sub dec add push loop push aad mov adc cs push ja push clc or push inc (bad) jne shrl dec cmp adc pop lds dec push inc mov inc aam test jmp dec add roll pop mov andb popf jnp or dec loopne pushf mov push or cmp cli lds pop add jle mov jbe into push cli add xchg mov or ret xor cwtl inc xor jne stos clc mov adc sti add mov dec pop cmp cmp insb pop lcall inc adc rcrl fidivl jno add cmp rolb pop sub and arpl sti dec add sbb lods or idiv sbb jno inc mov insl push adc dec or loopne int sarl add push fidivl fisub icebp rorl out and add imul mov adc mov dec paddd inc mov test cmpb lret bound sbb pop xor fdivs jmp and push and arpl mov mov add xor and pushf sarb push mov rcr push clc dec shrb add je loope dec je add push mov test add pop or push xchg cwtl add sbb movsb mov add xlat iret out adc dec adc iret inc adc subl push or pop adc popa inc pop or mov clc mov add in sub mov adc dec adc sbb les cmp sub insl or aas cmp mov cld mov dec push ljmp lock xor lret adc aaa push xchg xor adc push adcl mov idivb pop rorl add dec push lods jo cld lods mov dec xchg aaa loope icebp cmp jbe push in jmp xorl test lret incl test push mov push add and lds (bad) (bad) xor jge mov pop dec imul mov pop mov inc pop rorb jne sub sti sub push iret stc push add (bad) lea lea push xor cli mov inc mov xchg mov inc adc dec fildl stos fldt adc out or sti out inc cld lock push add sub or addr16 jne cs push add insl mov sbb pop jmp sahf aad or sahf sub enter test andb dec inc push js pusha lods (bad) ficompl adc shlb push idivb xchg push mov jb fisttpl push int shr mov dec cld xor icebp cmp jbe in pop adc xor push push xchg test inc push insl stos and int3 push mov stc add sub xor jbe dec pop pop pop sahf pop cmp push pop inc adc lahf cmp insl test fcoml push pop das xor nop fisttp inc or jmp mov add jns inc inc ja sub add mov pop mov incl adc inc xor ljmp mov mov jl aas or fimul dec dec or dec (bad) xor inc pop adc pop sbb and sbb inc iret cmp fstpl adc and lret jne enter lea pop pop adc xor or frndint fistl pop mov sbbb cmp mov pop mov add pop dec and mov mov test pushf push mov adc pop testb mov sbb and insb sbb dec dec dec out sbb sub push dec cmp insb pop or fcoml js ja ja push imul pop insl mov xchg adc adc mov jns mov rclb or dec add push push repz and cmovbe loope mov push into popa rcr setns push popa popa inc es inc les inc (bad) xor je cld scas fidiv cli xor add aaa push pop and lcall test push jge into mov mov stos out test or mov mov (bad) icebp ftst inc cmp push mov adc (bad) (bad) or cs add push jne leave add sbb pop and imul fnstenv jmp lds adc lock xor push or xor into adc mov pop sub or add pop pushf push adc sbb insb in add outsb pop in add movsb or jo add mov mov clc mov iret jne inc ss sbb jo pop cmp inc lds jmp (bad) dec inc rcrb pusha and jne pop push push pop icebp inc fidiv leave inc test and or cmp icebp pushf and loope jo jae dec lcall jecxz dec leave pop cmp jge iret lret jno xor jno mov pop mov decb jne int3 hlt int sub and jmp cmp mov sub mov sbb or fwait sbb clc adc mov fisubrl jg mov mov push jb pusha fildl or fisttpll and mov out or mov jmp and sahf or stos mov push mov push into rorb adc or add aad xor inc adc jns jne,pt cmp xchg cmp add and inc leave jnp (bad) loopne cli inc add mov cmp mov std push mov and push hlt std sub lea cli dec pop jl js je mov push fimul add stos jp lret gs test jnp dec lea push or leave test loopne out mov push pop push adc orb orl push jmp sub or rorb je add or inc inc test jb jo and js lds xor mov push xor jbe mov shrl or lock lsl loopne pop aaa stos mulb or sub xchg add cmp in (bad) aas inc les data16 js sti fmuls subb test out mov push pushf pop mov sub mov cli and je push popf sbb lock adc scas jnp xchg sbb adc out or inc cld push add add jo push add xor cmpsb xor adc add add xor jne cmp sub pushw jae test test add std ja das xchg and inc add dec ret xor dec aad (bad) pop fcomip and repz adc dec or xor sti pusha fsts add cmp push adc daa divl add test rol add push fiadd mov and add push pop dec adc (bad) int3 push add add add push push imul sub sub or pop aam add (bad) ja xchg xor dec scas popf sub cmpl inc lds insb jl or mov push jmp cmp insb and push in jmp mov and add push outsb lea push inc rorb dec sbb lcall adc inc fcmovbe mov lea faddl aaa mov add sub call cmpw flds add cmpl jge xor sbb or mov fistp andb dec and shrb push jl sub mov cmc lods pop add lret cmp jb ljmp jb ret xchg mov (bad) jb and add or push xchg and and sbb nop mov xor loopne push or or decl bound sbb stos or lahf inc and or imul add dec lea adc mov adc and ret das sub jl push gs add aam inc sub je ds cwtl icebp adc les pop mov (bad) add add jae and or shrb in push (bad) pop mov jo pop xchg cmpsb fisttpl fs stos ret lea clc sub adc (bad) mov mov pusha pushl mov inc inc add lods mov shr pop dec adcl add add clc je dec je mov jle xchg xor mov sti jmp mov or push das or xor loopne xor movb cmp inc sti add xchg xor sbb jne or xlat or add sti add sbb pop mov not mov pop push dec jbe rorb (bad) mul movl fild (bad) mov fmull and rorl ret add mov pop icebp adc fsubr fucomi gs enter data16 (bad) mov test push fs push movsl jmp ficom push jo ss or mov pop mov sbb movl mov movsb fs or cli add call push xchg ret jb sub pop dec sti in mov push xchg and int je fsubrs sub data16 mov stc dec and push xchg inc add (bad) adc std pop and or pusha mov das fmull sub cmp cmpl mov adc fwait or call sbb push pushf jne repz push or push popf dec mov push push push push (bad) js mov idivl (bad) test pop inc idivl add xor and xchg jmp jo (bad) (bad) test fisubr std bnd lea xlat mov sbb push cmc jne test test ja adc pusha scas mov fs cmpsl clc mov in sbb div inc add adc cmp dec or enter mov fsts cs rcll adc pop and imul rorb adc fnstenv sbb sbb sub orb fwait mov jo mov mov rclb rcrl add inc test or fwait sbb sbb adc push je dec jns adc and push pop mov push push outsl pusha testl testb arpl push mov (bad) fsubs pop les push or and dec sub inc cltd ljmp nop addl xchg loop daa mov mov sub inc shrl ret or jo dec jne xchg mov xchg inc push mov mov mov sub xor arpl add add inc mov add add dec call dec inc icebp loopne mov xor inc shrl xchg or stos add (bad) fdivrl add add notb pop aas rcrl ret push jb mov jnp (bad) pop test out push mov (bad) pop sbb adc sbb mov jae leave pushl stos pop and lds cmp mov mov repz mov lds adc aaa dec repz mov adc push gs lret and and push or or and clc inc push sbb pushl pop or sbb fs adc ss and fs inc push and sub inc push sbb xor cmp sbb mov inc push sbb inc pop dec push sbb push push pop sbb pop pusha fs inc push push push sbb (bad) xchg dec adc je or mov xchg cwtl pushf mov movsb test (bad) cmp sub xchg xor sahf add dec fadds (bad) les gs mov mov cs push aam pop add xchg or adc adc fs sbb xchg or and mov loop roll push xor mov ror add sub adc push stos pop push out mov mov dec inc xor nop sbb movsl cmp cmpsb mov add fild bts jmp or mov ja call std mov sbb fisub mov and and inc add dec js jne add imul xor cmp pop cmp or aad leave push jmp arpl mov and rorl roll std mov jne mov mov inc inc into push add or dec icebp jne (bad) out cmp jecxz mov jne cld lods inc enter pop push lcall outsl xchg aam mov dec incb sar (bad) clc or push and (bad) stc jl and and mov inc or adc mov or pop ss adcl sub add mov and push pop mov inc lds xchg (bad) call int3 mov rcl sbb ret mov (bad) adc adc add push stos pop mov lea aam shlb push hlt cmp (bad) pop inc mov pop cmp push xorl das mov cmp sub pop fdivrl cli or clc adc mov jb aas push es mov push and sub inc sbb dec lods pop sbb jg int3 mov mov (bad) mov push xchg inc je push pop dec in push xor mov and (bad) mov sbb jmp push and push mov scas push jmp push addl push xor rorl inc mov inc sarb lret push aam sti outsl add lsl sbb or pop (bad) js adc pop add add push mov add and (bad) scas adc or adc pop in jns mov inc sbb sub mov dec (bad) xchg xor mov inc inc and mov adc jnp sub jge add fwait data16 mov sub or adc xor add pop jns dec inc xorb inc orl add mov mov aaa mov loopne out (bad) add les testb or sahf xor add add or mov or mov stos ljmp fcomps loope (bad) sbb mov jbe (bad) mov push xor pop dec adc dec and inc pop pop leave mov push sbb or add inc xor gs pop ret adc movw or pop pop xor std pop js das push or adc push add mov cwtl push mov and scas cmp adc les cmp je roll loopne ret dec pop rcrb adc jno xchg or adc mov and lds rcll (bad) sti push push mov and jb dec inc and pop aaa mov push xchg xchg pop ja jnp lods or add iret out inc xor adc push cmp cmp add rolb mov pop add jnp (bad) or negb add sbb mov inc add ss sbb stos or xor in (bad) (bad) mov pop fisubr fwait add cmp add and add pop mov adc adc inc cwtl xchg push pop xor divl xchg dec fisttpl dec cmp (bad) push sub and mov jbe and fsubs sbb int3 mov nop add (bad) push lea lea ret mov mov inc outsl shrb or push faddl mov popa xor enter rorb int3 mov mov mov pop rcrb add mov cmpl xorl fsts cmp jne fiaddl push xor mov outsl mov or cli push das std imul cmp push insb ret call je push or adc inc xor push mov add sub ret mull loope or cmp jo sub mulb mov pop subb leave jne div das out fidivr fsubl mul sub ja jb push add mov dec sub sbb or mov rclb neg sbb mov std insl push fldenv ret hlt fildl mov or mul and cmpsb jb and (bad) or add pop sbb in add adc add pop cmp shlb mov adc les push pop push std shrl sub mov push push sub stc out test add sub lea lea add inc mov jp cmp icebp imul int add jl add push push mov push or inc jle jo das inc mov push jne pop push jae xor mov ret or (bad) movl jne or jmp adc sub adc mov push dec xchg dec bound hlt and (bad) aaa xor jg mov cmp cmp xor js cmp adc and sub in icebp dec mov adc (bad) and test inc bound push push das lahf mov dec adc pop clc or test (bad) movsbl sub mov lds jmp popa cmp push ja sbb aam call sbb and jb mov add or fsubs dec in add sub mov inc or scas pop cmc outsl stos or clc cld (bad) mov aaa add or add je inc sbb loop inc ja sti cmp and or hlt sbb mov and daa jle hlt mov insl mov and notb (bad) int sub dec mov sub nop adc add popa mov in jmp and fstps mov add mov fbstp sub jl sbb adc ret mov xchg test push sub (bad) xor fbstp and jle es gs or (bad) aaa sub cmp jb cmp ja add cmp or mov cmp mov (bad) mov incl jb negl dec cmp pop pop pop leave dec int3 adc test and add xor push pop je lock push es shr iret test push sub fdiv xor mov adc mov mov mov cmp test iret xor xor fsubrl and negb or out push mov push dec inc cld lods insl xchg or test out shl pop add add out mov cmpsb fsts adc xchg sub mov (bad) aaa push std cld lcall fildl and cmpl test mov out ss jp add enter movsb adc dec sarb je aam add or ds xchg inc add mov add (bad) or inc mov adc add ret jb push sbb add or push or shr inc inc add or cmpsb cltd fs pop adc stos (bad) or add xchg mov (bad) (bad) or sbb sbb xchg mov arpl loopne (bad) add mov push sub shrl stos sub mov dec or adc ret or loopne nop mov das cmp (bad) and xchg insb popl insb xchg sbb push stos cld jmp cwtl xor dec cltd pop and xchg lock fmuls je dec or into mov jbe and mov or push jo xlat cmp and test mov (bad) jmp mov (bad) adc and inc and fdivrl xchg add rcrl (bad) in jne push xor mov mov hlt jb or and adc cwtl inc push add push (bad) mov mov (bad) mov subb dec test add xor push call dec adc or (bad) pop (bad) xor mov ret dec add pop js add push rcrb je xchg call inc or je sbb inc and or sbb insb jmp in sbb mov adc inc sbb das jne or imul inc ljmp pop jge push inc je ret add push cli outsl jl mov arpl sbb add and insl pushf insl add sbb inc pusha pop adc (bad) ja mov jmp fdivrl push cld dec xlat add mov add fnstsw dec add add and decl push stos ret pop jge jle or inc mov mov cmp sub lods jbe inc pop jle pusha add icebp push inc adc inc xorl jns adc sti (bad) pop ret sbb or mov cmp je xor in test cmp adc clc mov inc sbb xchg jbe test icebp pop jmp cs jns xchg (bad) xor adc inc lock hlt fiaddl push aaa mov dec movsl or lds lock inc dec adc sub push adc push jp stos jecxz or or push push or push adc out clc pop mov loopne movsl lock (bad) outsl or pop jo push testb add mov jge lock orl mov pop inc xor mov add testl mov adc mov sub and or sub cmp fcompl jle daa stc in lea mov xchg mov push push lea ja xchg pop pop sbb cltd test sahf lcall call push push dec in jo jns in (bad) cmpxchg and add rorl dec aaa cld cmp xor cmpsb xor xchg pop lds sti sbb call push add push adc xchg in test xchg jb sbb inc addb cli add bound mov notb or or movzbl jne xchg add push lods icebp sbb push add pop xchg and loope fisttpll mov lds inc add lods adc test in and repz pop dec leave ret jo fsubrs enter mov mov fadds fcoms cmp xor pop xor and jne mov push push gs add sbb repnz icebp outsl xor cli mov sbb add mov fildl and cmpsl push cwtl jg out dec fcompl (bad) add add jp or sub pop loop call decb dec add sbb dec lock adcb sbb sbb cmp stos leave movsl adc lret mov test adc mov addr16 sti fs xor pop flds xor cmp add sbb mov sub jnp mov out pop push add and (bad) push loope cmp test cmp jbe cmp add adc mov cmp cs mov xor mov setg xor cmp or add scas daa test in xchg cli or adc aas sub add roll test xchg fcomps test mov adcb inc jg clc inc lods inc inc pushf hlt rclb add push add sbb or add add push fwait mov cmc xor cmp pop mov xchg movb mov fidiv int jns mov adc or in (bad) pop idiv add mov (bad) or xchg or (bad) neg lods add fsubl push cmp nopl or push test and xor add sub push push jge push add int (bad) orb adc out inc sbb cmp xor adc ret popa inc mov mov sbb aam sub out mov lahf or fcomp aaa in push xor sbb sbb icebp jno das enter sub and aaa xlat add pop jmp test push lock sbb fstl test xor dec sub push inc inc inc dec add test sub and fsubr enter divl xor rolb pop sub add cmp cwtl mov outsb pop icebp call dec call sub lret or inc mov mov fsubrs add pop cmp sub mov sub adc cmp dec sub mov loopne sub ja xor es mov ds add xchg (bad) sbb xchg xchg jg jmp sahf dec xchg and jnp sub sbb popa push pop dec and add popf inc jnp subl stos outsb std sbb and add xor inc das jl adc adcb add push test dec mov inc neg sbb jecxz mov add jg ret daa mov (bad) jne push inc add sub pop aaa mov adc inc add push insl aad xor inc cmp or inc rolb jmp sub mov mov push adc ret mov push hlt ret or or enter sub add sub mov popa and loop out mov pop mov cmp add das add pop and inc lods enter mov shr ljmp lea jge or push push mov or cmp fbstp add xor out mov test dec pop sbbb aam cmp inc mov fldl les mov out cwtl jecxz jl adc lock jne jo pop test and (bad) das and sub js jg mov jbe sub or fidivrl addr16 (bad) js mov popf or jb push scas mov add or cltd push scas mov sub mov add fs and cmp and and arpl test jno ss add leave jmp pusha mov stc rorb mov inc imul iret add (bad) pusha mov mov dec and sahf jne outsl cmp xor xor scas test mov nop pop stos ja jno add loope inc add or or ret sub lods inc adc adc sbb flds add inc or add pop inc pusha lods and stos iret inc bound add or cmp dec add push inc adc xchg aam sbb mov sbb sub mov test mov rcrb sbb cmp mov cmp jbe mov frstor shrb fxch sbb enter inc pop leave push push mov jmp loopne or pushf sar jl (bad) mov test mov inc mov stc mov pop shrb push (bad) push fldpi sbb stos mov sbb movb mov push mov add pop add xor loopne jne and push (bad) pop mov rcrb xorb and fsubr xor xchg sbb push inc inc pop dec bound mov subb inc xlat add pop (bad) std xor andl add mov frstor mov mov fsubl sbb or (bad) add add mov fs movsb jo dec jle push push or mov movl in ret cmp cmp xor out inc dec lea test test les xchg shr inc add ficom and lods and add (bad) pop call mov test push add test add xchg or push and cmpsb dec dec inc loopne cmp jmp sub andl movsb xor adc nop jb test lods or cmp test jge stos cmpl repz icebp jae mov rcr mov xor fiadd popa cmp jl outsb pop add shl dec or sub sub add jns je inc inc scas and lock add out sbb mov mov add xchg jnp mov adcb inc mov aaa dec subb ret loop sbb adc fildl cmp or jne and adc mov or imul and in xchg and add mov mov jno jge mov xor pop push cmp test roll (bad) and mov loopne xor or dec inc rcr rcl or inc les cmp aas or mov jle cmpsb inc add lods mov mov loopne lea add mov insb jno push push jg dec inc sbb aas mov mov jg sbb and popf pop aad clc cmp jl (bad) mov or out je inc icebp movsb inc pop pop inc push add add xchg loope sub mov push cmp jmp sub pop cmp fldln2 push test dec jne jns int3 add dec adc es lahf les or and mov js mov or test insb pop nop (bad) (bad) or or push frstor pop cmpsb sbb inc jb movsl outsb (bad) loopne dec xchg js arpl push pushf cmpl inc pop pop pop adc les push leave jle rolb cmp mov notl add add in iret mov cwtl hlt add xchg add and aaa sub jmp adc sti jae cld adcb mov add cmpl sub adc into xor rorl pop jne jge or push pop add sbb inc (bad) and xorb dec inc movsl daa rorl in push fwait mov dec imul push cmp or call add cmp push js loop scas pop push test and mov stc ja movsb jnp sbb add repnz stc adc add sbb dec sbb stc nop dec push inc xchg pop push roll je add test je ss inc cltd sbb neg ja pop or mov jl inc xor pusha daa sti outsl xor jmp cmp jne cmp or cmp and mov cmp sub add mov out xchg in sub (bad) xchg add in inc xchg es cmp nop movsb scas and xor je mov inc adc push push lock adc jp aaa clc fwait pop fs iret dec je dec jne push inc or pushl in push jge sbb xchg cwtl mov adc clc icebp and cmp sarb adc add add jecxz mov aaa lods adc dec mov sbb neg inc add inc or scas or xchg xor subb arpl inc jmp add arpl pop xchg inc push aas or and cmp je adc mov push in clc test mov ljmp or vpminsw push push push xchg and pop adc jbe outsl xchg sbb push cmp jl iret jg enter (bad) cli adc add icebp dec hlt out push push cmpl pop lock hlt or and fmull add fbld stos fistp push or pop jb adc lret push mov dec mov or add popa xchg outsb in clc jl enter mov aad test mov idivl inc inc and sti enter jne or lods int push add push pusha pop xchg loopne cmp add add or nop inc adc inc inc (bad) mov (bad) in test lcall imul sbb sub sub subl es seto test gs rcrl sbb and push push sti or or dec mov or xchg add cmpsb pop mov push push add movl inc addl and cmp cmp xchg (bad) icebp test xor out lds sbb jae lds pushf jg subb jl ljmp jle xor scas adc mov in jle jbe inc loop test mov xchg in and ret add and test jg or inc jl xchg jo fisub mov hlt xorl loopne test enter das cwtl or push test aaa push hlt or push add sbb adc jp pop and mov jg ljmp push pushf dec mov add popf and xor push push mov and sbb sbb fbld and sbb add jp (bad) mulb dec dec dec sar push aam stos les add pusha subb (bad) dec cmp dec bound push push dec loope popf mov loop or fisttp xlat je cmp adc (bad) xlat or inc and sbb testb test push or out inc ja scas jne push push (bad) jmp ds stos and dec push jb test (bad) push je daa fmull test lea jb cmp jbe in push pop or inc inc (bad) je out push mov push lock decl jmp mov sbbb and imul sbb lods pop xlat push aam adc mov push add les insb ret (bad) rolb outsb in fstpl cs ja mov mov mov mov mov xchg push mov sbb jecxz mov and call lret push xor and or or mull xor sub mov rcll out xchg inc jge pop push push mov ds inc mov popf mov inc aaa aaa sub and and pop sub adc adc in and inc cmp (bad) push clc cmp push and mov ret sub sbb stos sbb dec aas (bad) jb cmp jb cmpsb pop inc lea mov fstpt lret xor add dec div jae xor (bad) rolb (bad) jbe push popl cmpsb loope aam xor inc mov add pop mulb lea mov cmc shrb les aam aam push cmp or sbb mov cmp icebp xorb mov sub push pop adc and loop call add cmp mov add inc mov jbe sub lea jl jo nop test sbb push mov mov jge push jge adc insb add mov fisttpll or xor sub pop or aas adc mov mov cli dec cmp push fadd jle pop lahf pop dec adc test and mov push adc mov sbb dec imul add loop dec jbe test mov lods stos mul cld fwait push jae nop/reserved stos (bad) jbe loopne call ljmp mov or ret xchg jge test mov not int3 dec dec in jbe pop or test mov and mov std mov xorb push sub cmp inc sbb xchg push push cmpsb jl je mov pop inc sub mov inc std (bad) or call mov popa ret out aaa mov jle mov fistp mov clc lea fs orl jle mov jmp jne repz adc loope or or mov mov adc adc adc sub xchg cmp xchg loop or out or aam inc cs rclb and inc inc fdivrs jmp paddsb push or mov dec in into sub adc or call adc jmp nopl fstps into sub pusha lds rorb inc test or cmp xor pop ret or push push psrlw pcmpeqd push mov lea adc loopne cmp push movq fcmovb pop insl es mov jbe mov mov leave inc outsb or or dec sbb jmp js sbb aas xor lds xorb cmp pop (bad) (bad) lds inc inc leave jo push and daa add push cmp add push xchg mov push dec enter or pop hlt lahf mov inc mov adc fnstcw adc xorb adc fadd add add imul lea es and pop (bad) out testb jmp add mov lahf arpl ud2 or or shl test push nop mov das icebp mov fcmovnu add (bad) mov roll sbb add push (bad) je adc push or mov lcall adc adc rorb or (bad) loop popf aaa in out mov mov movsl movsw sbb push (bad) mov xchg inc movsl push mov inc (bad) leave mov push dec (bad) jne sbb std stos inc hlt pop add or rorl sub or fdivl in sbb adc fcoms xchg mov neg sbb cmp sbb adc les sbb push pop sbb or pop sbb push sbb fsubrs push psrad xorl rcr sbb js fcomi sbb push jno inc sbb icebp push xor sbb xor and rsqrtps pop pop fwait mov jnp jne pop pop pop imul and lods rcl and pop ret loope shr add or lods sub idiv and imul cld lock push je (bad) push hlt hlt in or mov pop mov jmp pop fildl and push jmp sbb mov inc push jne adc adc cmp adc mov loopne dec or loop shll adc sub fisttpl add lock orl inc add fisttp jmp push or sti add (bad) ljmp xchg inc mov sbbb icebp add or mov test stos stos push stos pop lgdtl pusha stos or (bad) push js dec mov xor pop xor or mov outsb outsl pushl inc lea pop xor sub and test fildll and loop rol or fildl subl xor test cltd ss and pop xor (bad) or loopne fstpl inc sbb sub in cmp test loop,pn hlt outsl sbb cmp and push or sbb adc adc push call fstpl mov mov test fdivs or xchg or mov lahf and xchg (bad) jge push pop mov sub rep roll inc mov sub cmp and incb test cmp jg scas and sahf outsl popa inc movsl sbb rol loop rorl sbb push imul dec sub notl pop scas adc sub mov je dec lock out test mov outsl add out inc or push (bad) mov fdiv ret pop adc mov adcl adc jge mov jae sub jb pop adc add mov imull data16 xchg adc jmp push inc std sub insb jbe xchg mov or mov scas aam or jge sub sub dec jns inc inc xor mov mov jl inc fimul inc inc jno and movsb push pop cmp sahf sbb adc lods mov imul mov insl inc mov sbb mov add mov stos into sti aad cmp (bad) aas jl stos mov and test test jb jae fldt addl jecxz neg sbb push push lods mov adcb lock sub push or daa cs (bad) (bad) jne fucom adc lock leave inc scas leave in mov xchg inc es nop leave inc cmpl pusha lods in enter inc add inc inc add pushf inc xchg or pop and adc mov fmuls test add or mov mov inc add test lock lret movsb mov pop or cli or lea push lods mov cmpl cmp fwait ljmp inc jmp mov push ds or xchg sbb mov mov fmull cmp in jmp stos and outsl mov mov pop das add push pop jmp xor adc or mov or jmp lock jmp outsl ret jbe xchg or jmp push les jo push add lods cmp sub std movsl call mov cmp cmp jle cmp sarl arpl xor fsubr pop xor dec push fldcw adc cwtl push add cmp mov mov lods xor cmp jg adc ret mov jae sti mov ret mov pop sub or jge inc mov aas sahf mov add dec je jnp inc push decl je jmp pop aad ret xchg mov test insl ret or mov dec (bad) cltd lods jae adc pop push push pop and cmp or orl pop pop imul or ret insb loope stc sub cmp jbe mov mov scas mov je push je ss insl je pop mov rcrl test nop mov pushl mov testl (bad) dec sbb add xor rorl or ja sub mov add imul mov cli dec xor cmp jecxz std lds mov jmp sub mov sbb mov sub mov dec cmpb hlt aam or iret push (bad) (bad) dec adc ret popf pushf mov movsb stc jge (bad) fcomps mov or sub sbb push sbb (bad) in xchg mov xor stc imul sub sbb fldl fimul mov mov out in lods sbb adc xchg (bad) std pop test or xchg ja sarl add pop mov xchg xchg fsts jno (bad) mov cmpw cli das addr16 jb mov cwtl mov mov pop mov or je sub mov pop loopne sub shrl xlat addr16 push adc imul adc sbb out (bad) std mov shll or int lock std push int inc testl or jge or imul sub in adc inc or pusha cmpl adc mov xor das cwtl fadds mov sub movsl scas cs and add inc rolb push rorl xchg sub mov test in mov add rorl push cmp fistl cmp insb jge mov cld je jb addl subl push pushf push sub aaa nop inc inc loop out jg mov mov lock insl pop or iret faddl sub dec call aam jmp (bad) or pop and mov ljmp fs push adc dec adc jge out mov cs ljmp (bad) sbb push fcom insl inc loope sarl pop rcr (bad) dec dec mov aam rcl push add mov mov mov adc push int aas shl addb xor (bad) jecxz or aad gs sahf jge jb mov push ja fisub push or dec (bad) mov out sbb dec (bad) arpl or insl or pop mov aam sti addr16 and or int loopne lods (bad) insl stos pop testl jne,pt push lret insl pop or das jno (bad) push or movl jae xchg jnp push add or dec or test (bad) fdivs add sbb or decb push shrl add jp imul imul lea sub pop pop push popa mov lret (bad) (bad) mov loop mov lcall rcl aam cmpsb imul inc push fstpt dec scas dec xchg je (bad) push mov jmp add or cs sbb (bad) cmp enter jge or sub add add adc mov adc xor gs mov idivl mov push push xchg jmp mov adc rorl bound push (bad) or sub cwtl gs adc (bad) xor pusha fisttp jmp push adc mov repnz imul orb rol xor mov mov in mov or adc out mov stos aad xlat mov in mov shr out loop (bad) mov xor scas cli mov mov test setb sbb jp sar add leave pop movsl mov fucomp push lret mov aam xchg pop subl (bad) push pushf jnp lods dec aam dec addr16 mov jl and and clc inc xorl test or push bound xchg (bad) mov dec sbb push (bad) repnz out or adc mov mov mov jne inc imull les inc push and mov lds fsubr and fidivrl jmp add dec jne mov rorl dec shr (bad) (bad) mov push mov pop lea mov adc ret add mov mov repnz mov nop out push inc mov inc pop fisubrl scas out nop adc mov repnz dec test lods xchg sbb mov and inc sub adc add jne call icebp sar jno or hlt lret hlt mov call shr rorb (bad) add fistpl mov aas in sarb jge mov neg mov test mov mov insl inc jmp fcom mov or push mov mov xchg push lock sbb push pop and (bad) ljmp cli repz add imulb test repnz repnz or pop mov fs insb loop or pop out pushf push mov jmp rcrl lret add mov std xor call mov lock mov out push jo and fs mov loopne loopne test insl xor pop outsl sbb or pop call mov sbb push sahf inc inc inc xor mov je xor fmuls cmp faddp je mov add sbb jo lods push arpl adc push mov sbb cmpsl jecxz mov jo push cmp push ficoml sbb xor inc inc std lods push mov inc xor popf clc jle push xchg pop in cs fisttpl fisubl (bad) les leave es xchg jo inc or arpl (bad) nop lods add dec test in jns jmp fimull mov adc sub xchg mov repnz or dec inc xchg jecxz sub push das pop and sarb xor in mov mov mul mov jge push mov loopne dec mov lcall or je xor add ret adc daa mov loop movb push xchg lret dec inc inc dec inc out jbe sbb adc push mov test out (bad) movsl fmull mov add loopne call adc or add lds xor fisubr sbb jne (bad) jbe mov loopne jnp mov call xor loopne xchg lea mov rorb jns add cmpsl movsl jbe icebp (bad) fisttpl jl lea jmp and sbb lock lods out mov push (bad) or lea add push push cs adc (bad) or rolb push push fwait insl lock mov adc test or es sahf pop xor mov mov (bad) xor or add ss dec sub test mov decb jge xrelease or add dec cmp jae add mov or sub adcb das jne push mov inc add xchg mov inc mov fldt cmp jg roll inc ret orb lock add push add and sbb add or cld pop sahf add add test and or add test outsb add imul jno js je out or js or or mov or sub jne or jmp or push push pop je adc mov ret mov fistl imul push add rep mov dec or or cmp in cmp ret xchg js mov nop pop cmp cwtl lret into cs in pusha inc daa mov out xchg pop and xchg cmp scas mov or inc mov adc (bad) mov repz ret or adc fldcw shll adc lret adc xchg adc add pop add stos pop out push or hlt sahf lock and mov fsubr cmp outsl cmp or jmp scas mov sbb int lds bound adc pop js aam sbb xchg or (bad) push pushf mov add xlat scas ljmp cmc fimull enter in sbb ret jae leave iret pop jb adc xchg add es (bad) xor or mov add add aaa scas lret fdivrl stos pop test into or dec repz add or adc arpl into mov mov fisttpll pop inc fldl add and push or mov inc cwtl mov sub mov sub lock xlat and rorb xlat sbbb mov fisttpll bound les adc test mov jae (bad) jnp sub lret movsb imul test (bad) ror and push add sbb and pop mov xlat (bad) mov enter xor (bad) xor cmp pop adc cmp mov and subb mov (bad) jg xor sbb add add lock das jo adc shll push xchg cmp fsubr mov add push (bad) (bad) xchg xor pop lock mov push push cmp push adc jno das sbb sub mov cmp in jge mov xorl arpl push pop test push xchg stos mov fldcw jae add pop aam inc addl mov xor xor cmp add push mov pop ss xor cmp cmc or add xlat xchg rorl mov cmp dec mov decl insl and xchg sub out push add adc or cli push test mov (bad) or shl dec or orl scas mov jne jl cmpb pop jae mov data16 fndisi(8087 pusha lock xlat xchg test mov je mov (bad) rolb and ds sbb push fsubrs cmp push mulb and rolb or lods fldt sbb push shll adc or aaa lds aam dec ret pop in mov pushf xor jge lock and enter mov (bad) mov sub fild adc and adc mov xchg add insl test fmul and insl int3 aam std add mov fcomps in jecxz sarb add lds dec rcr pop (bad) xchg or push loopne dec jb fldcw aaa inc in push mov fisttp popa adcb mov std fcoms adc cmp xor pop rcrb orb and adc or mov mov inc les pop add rcll jae call test cmp pop shlb test mov push mov inc or dec in les jno fcomi cmp push and pop leave push cmp add xor (bad) or test loope xor divb or and call sub add push adc add push add mov movl and sbb and xor or and shlb cmpsl and fs adc pop cmp iret mov pop cmp or popf xchg or cmp fdiv push lock mov fmull add adc or movb or xchg in adc out xor clc jle push jb add adc leave mov imul or jge and add adc jns cmp sbb and cmp and adc mov jne cmp jne push jb cmp xor insb (bad) mov add cmp fwait xchg dec inc pop adc cmp (bad) cmp or fs test jo adc mov add outsl dec push sub repz (bad) or add (bad) cmp inc pop cmp or sub pop out daa test or inc std mov daa add std or add pusha ja addr16 movsb push or mov pop ret jno jg and mov push nop or cs mov movl or xchg ja ss cmp mov out cmp mov or cwtl mov mov xchg std jae push adc push fs add and xchg jbe scas mov xchg xchg test add xchg jge cld xchg mov mov jle (bad) or add add sub add add mov mulb mov add cmp test ret js cmp testb sbb or push imul pop cmp cmp fdiv add out cs add adcl jne enter cmp jo add cs jmp inc insb push adc leave push or push push cmp jle scas mov scas cmp das (bad) dec (bad) enter lods or add jecxz scas jno add jno inc (bad) dec testb or or add out outsl mov and and sub add or push sub inc cmc mov or mov gs sbb xchg into cmovb sub sbb mov or or push nop fildl or or push and fsubrl enter and bound ret push (bad) push add and bound (bad) mov pop imul loopne cmpl dec int xchg dec je xchg je ds xor or xchg sub add imul fnstenv mov sub mov lcall and xor push pop nop lcall sti adc sbb cmpsb imul in pop fsubrl pop cltd dec out dec xlat loope fnstsw add dec (bad) xor pop lret add adc (bad) or stos pop add jno push inc xchg cli aas test inc dec aaa cmp mov xchg add jg testb add rolb adc mov adc mov cmp fs popa je and add inc outsl jo jb addr16 pushl cmp xor dec gs outsb sub sub inc popa imul add push outsl xlat add add or or in pusha or add or jnp les adc or nop adcb add je mov or mov adc xor jbe add add and add enter arpl inc push sbb push add or sbb or or pop nop inc or mov jnp adc pop or or (bad) je sti or imul (bad) xor sub insb in sbb xor (bad) xor fdivrl jl xor sar add xor and xor (bad) xor (bad) xor (bad) repnz xor sub xor (bad) xor fidivrl mov sar push xchg dec (bad) xor cmpsb data16 xchg xor (bad) xor (bad) ss (bad) xor (bad) (bad) push mov dec (bad) xor cs outsb out push sahf xor (bad) xor fidivr mov sar add xor and xor (bad) xor (bad) xor (bad) icebp or xor sub xor (bad) xor fnstcw mov sar add (bad) xor and xchg xor (bad) xor aad mov (bad) xor (bad) cmc or (bad) xor sub popf xor (bad) xor fnstsw pop sar adc adc add lcall lcall jae repz imul imul cmpsb imul cmpsb imul imul cmpsb imul cmpsb imul imul cmpsb imul cmpsb imul imul cmpsb imul cmpsb imul imul cmpsb imul cmpsb imul imul xchg imul pusha (bad) xor rcll push xor dec (bad) xor dec sub pop cmp inc and xlat xor rcll xor add (bad) xor addl ret and xor or lds push fldl add xor (bad) xor adc sbb (bad) xor rcll push push add lcall adc lcall pop out outsl jo pop cltd push add add nop inc lcall dec xchg or dec xchg sbb adc sbb adc sbb xchg mov or ret xchg icebp fnsave sbb leave nop or adc push pop sbb xor test add pusha mov cmpsl or push cmp adc lcall add cmp jge popl add mov xor pop roll ja sbbl imul pop xor add pusha orl addb jmp push adc adc insb mov ds or sbb pop or pop lcall and dec popa jb and insb gs add or (bad) or pop mov pop rclb mov stos int and add jae add call add scas add jbe dec lods daa jo xchg rorb jae (bad) xor pusha jmp add xor pop inc and jle sarl imul add add cmpsb imul cmpsb imul pop sub mov xchg out pop adc push add imul outsb adc (bad) and arpl je outsl outsb daa cs imul arpl gs outsl dec dec jb dec inc push jg mov xor cs dec dec mov gs inc insb jae jb mov fbld pop push gs popa insb jne inc in mov insb outsl push and inc js je jb insl je (bad) gs insl jae cmp xchg insb mov lods fs repnz punpckhdq lods mov (bad) mov push pop and and and es sub sub sub cs xor cld (bad) (bad) pushl xor cmp cmp ds inc inc inc inc inc inc inc inc dec dec dec dec dec dec dec dec movsl loopne add pop add pop pop pop pop pop mov (bad) fistpll push adc imul jno jae jne ja jns jnp in and jl jle add imul fsubl dec dec push push add int push out dec inc push rol or dec dec inc adc ret add xor std (bad) popa jo insb imul jae insl popa mov je insl jle je and insl fsubrs adc push xor push rcl bound jns and (bad) pop sub je jns or inc sbb and push sub popa arpl daa pop jae mov sbb insl and insl pusha rol xchg sbb insl and lahf frstor in xor dec jmp into insl fmull data16 bound notb fcompl sbb pusha fs dec push fisubrl and jbe and mov jp or fs pusha in out frstor and addr16 outsl cmp and sub jnp imul lods ret outsl data16 (bad) pop push insb insb popa outsb xchg sub mov imul insb jb sahf sub push popa arpl popa xchg outsb popf in pop mov outsl jb inc cmp insb stos dec sti imul fcmovbe add add push inc pop dec gs xor cmp adc xor ret gs popa imul (bad) out sbb dec lahf pusha ror shrl pop xor cli pop imul into insb gs orl daa aaa jecxz imul aaa ss jbe subl jbe sbb jne mov mov daa xor pop sub int mov fsub pop rol sbb sbb outsb jmp jbe shrb inc and mov sbb arpl jbe push popa mov insl subl or repnz and pop nop fidiv sub enter push inc jns je push jnp out out sbb inc mov add ja bnd xor pop xor xchg inc xlat gs in mov jae dec data16 inc cmp je lea xchg mov scas xchg inc faddp add mov (bad) mov push imul ret cmovl daa or add cmp addr16 and shlb jne add xor rcr mulb cmp xor xchg adc jb jg mov testb fs jo inc outsl cmp push cmp fdivs add mov sbb outsl mov lcall push dec daa (bad) out or and mov fsubrs or imul xchg and xchg mov or clc ret (bad) test jo pusha jle inc subl dec arpl or push insb outsl fs (bad) or cwtl inc adc in pusha sbb call and bound sub jb adc dec fs xchg push leave or int3 and int and ds gs and mov pcmpgtb ret or dec mov loopne dec inc mov pop sub add daa add sbb lods ss out jb lock arpl inc pop popa ja pop dec pop lods xchg (bad) xlat xchg mov push push fcmovbe outsb mov add jns je pusha sub pusha sbb and gs or andl ret sbb sub popa jae je xchg mov sub jae popa jb pop negb add lds popa push sub or jg mov adc cmpsb das dec sub rcrl sbb bound jge fsts or mov ss jl es add add pop das add add jae xor lods sub sub xor ds cmp add pop and sub es push jmp ja add or sbb mov jo cmpsl cmpsl and cmp push (bad) cmp ds xchg dec cld (bad) lret daa pop pop mov addr16 mov jb imul mov mov lods adc dec xor and cltd lcall in inc orb sub sub inc jg gs je adc cld (bad) lock cwtl cmpsb imul mov leave stc add mov add stc mov lods add movsb mov cmpsb imul cmpsb imul imul imul xor (bad) xor and gs xor sbb adc cld std lcall les imul cmpsb imul cmpsb imul cmpsb jmp mov cmpsb imul mov fwait cmpsb imul mov and jns fs sub dec add popa add and add add inc push in sarb add and and shrl subl sbb add add xchg adc add cltd outsl xchg (bad) incl adc cmp add inc xchg das add adc scas cmp addb xchg (bad) (bad) decl lea xchg xchg xchg xchg xchg cwtl cltd lcall mov cmpsb cmpsl cmp ljmp lods scas scas mov mov mov mov mov mov mov (bad) enter int3 int iret rcl rcl aam (bad) xlat (bad) (bad) (bad) (bad) fcomp fcmovu (bad) (bad) loopne loop in out call in out out lock repnz cmc div sub outsb lock stc cli sti sbb ljmp sub xor sub push ss gs stos inc jg add or pop jg push cli adc cmp cmp xlat fsubrl dec and jns add das adc mov or shll mov inc add aas push xchg std subl dec outsl jbe dec dec jp cmpl push test jne and inc jo xor inc pop gs xor arpl dec sarl jge bound sub out mov addr16 push push dec negl fiadd aaa jns aas cmp and fs inc push fisttpl push push addr16 imul or fdivs jne inc mov aaa das daa and add fcmovnb mov sub inc cmp and pop push jae fs stos jae adc in push push insb xor int jle jo subb cmovbe adc outsl js push inc push popf add cmp pop data16 mov jae movsl daa cli add pusha xor or push sbb subl cmp dec pop lret and lods xor xchg xor sub jne pusha add add cmp sbbb dec xchg add inc jo icebp dec add dec add push ljmp stos lods pop sub inc dec adc sub mov insl mov mov arpl popa adc pop js add push add insl xor mov jmp fnsave insb adc rcll rcrl roll push and jge ret hlt push jns jle daa outsb movsl or jns cmp pop das xchg cmp sbb xchg sbb leave mov arpl adc inc das or pop add cmp pop sub subb xor pop das outsl and out and shrb or sbb adc loope add ret test scas dec mov inc (bad) pop outsl add ja jne jmp jb sub arpl outsl add scas flds xchg outsl daa jae inc mov mov addr16 dec mov popa jae outsl add (bad) mov outsl and mov leave sahf push add pcmpgtw sbb jg dec aaa jnp (bad) jne add inc add add sub adc mov or add sub mov pop out or pop arpl adc push pop jo mov xchg bound lahf sbb mov xor xor (bad) lea inc pop gs pop inc jne xlat lea addl xor stos sub or popf push inc cltd and inc push add fadds (bad) testb je sub or adc imul mov test (bad) je je add mov inc out mov push hlt adc je push inc add xor insl rolb push gs dec dec gs or fs mov (bad) (bad) sbb jns arpl insl add cs (bad) rorl jb (bad) flds mov pop add mov arpl cmp jne addr16 fwait imul (bad) xor push sub arpl pop mov add or lea mul mov and cmp add (bad) cmp mov push lds test jae cmp insb and jecxz inc in add dec es popa jno jns mov push push dec incl adc js dec clc loope push pop jb insb mov in cmp dec ja stos pmaxsw jmp aaa inc adc jne and outsb arpl arpl pop inc and adc jae pop outsl je pop ret jnp xor aaa push imull xor adc insl popa sbb mov pop xlat das xor jge cmp pop gs mov jne mov imul pop outsb movd add mov pop push mov cmp sub arpl push and push popf push cmp jecxz sti or adc sub xor add sbb ret data16 dec jne inc jge shll sbb push cmp push daa xor (bad) or inc or shlb je inc orl popa add loope sarb pop das mov dec js dec mov mov mov sub xor aaa test pop jb mov pop popw arpl jo or jnp cmp addl cmp xor inc adc inc (bad) xor das (bad) lea das xor inc adc add (bad) mov adc add or (bad) imul loope daa data16 and sub in insl addb inc (bad) mov addr16 and ret jns arpl adc mov jne adcl cmp jns mov insb or ja adc dec inc jbe push mov push sbb jp fs sbb cmp ret das jmp add sbb pop arpl and pop outsl add js push decl insb test popa repz inc lret bound inc cltd fmull sbb inc dec cmp sbb sahf aaa pop push xor sub fstl idivl sub (bad) pusha cmp add dec xor mov xor inc sub mov out push mov add loop lea jne imul rcrb imul xor sbb push sti push sbb loope add loope mov push arpl adc fs jae addr16 inc pusha mov inc ret dec add test inc imul mov pop mov sarl cmpsl add mov or fs inc inc loope add ret sub movswl (bad) pusha pop and or das push dec fldcw xor outsl imul fs inc aaa inc test fs xchg rcll jae outsl mov (bad) mov gs xor insl jae adc inc pusha mov sbb imul inc sub inc testb pop cmp inc add aad lock aaa arpl jns dec dec xchg cmpsl mov rcll imul outsl adc adc mov into adc add jno sub cwtl inc or sub daa je fldcw xchg and outsl sbb add xchg mov xlat add daa rorl sbb (bad) push ss sahf ja add popa add sub add dec xchg or adc adc lods insb nop sub sub or push int adc inc cmp sub or aas or pop data16 sub or adc push mov mov xchg std push test lcall sub and or add and sub insb or mov push lea pop andl ja add mov outsb (bad) pushl sub add punpckhwd popa adc dec movsl sub xor sub dec pop fwait and xorb add xor push add add mov sub fsubs jmp jbe jne fadds add add js (bad) or fldt ss das (bad) sbb and (bad) xor xchg and jbe roll pop ja add mov and (bad) jo fildll out fwait nop and pop jae mov dec or inc popa xchg xor cmpsl es daa movl mov notb or inc sbb cmc arpl push or fldcw inc bound addr16 adc jne test dec je mov nop fldcw xchg movsb adc push ja push add out inc shrl sbb jae imul fs repz dec adc in lds sbb mov cmpsl adc inc xor mov xchg in jo (bad) (bad) adc mov addr16 jne sub std inc add add dec mov pop sub push add add jne popa rorl jbe or das ret test push xorl add dec loope lret pop pusha ret (bad) dec rcll add push inc rolb nop sbb call pop mov bound adc daa add jmp in cmp das imul dec lcall sti pop sbb gs xchg test movsb dec stos jns xorl or adc sub mov inc pop pop (bad) (bad) (bad) aas popa bound cmp cmp cmp aaa sub sub sub sti idivb xor bound data16 outsl cmp inc inc xor and inc inc inc daa (bad) divb ss xor xor inc add push das jbe jb fs outsb and test iret aaa adc orl sbb mov lods clc inc add and xor aaa movsl xor pop insl push into xorb push pop dec mov dec xchg inc adc inc rclb mov aas ss (bad) push push jl cmp add fcomp push imul jg mov in movsl dec popa outsb arpl push in arpl cmp xchg pop add popf or adcl pop add and xor jno nop or inc out mov dec inc dec gs mov or icebp mov or mov add sub ja pop xor fsubs add popf adc je insb push xor outsl xor jnp ret push mov adcl push shrb jnp add jmp in ret rcrl negb (bad) negl adc add adc pop or xor out and xor add fadd mov jmp pop add push xor jo inc or test inc shr popf movq fistp into adc xchg mov pop cmc mov aad out inc stos or xor pop sub cmp add bound push stc jne fwait add fstps dec cmp push insb sbb icebp adc fstpl loope mov dec xor outsb fadds (bad) (bad) (bad) (bad) cmp aam mov inc mov adc bnd mov loope lods inc addl stc and fldl xor lea xor push add dec aaa bound es dec mov add insl pop pop or ret inc mov or add movsl mov fs add and bound insl or add pop dec fwait ret mov xchg inc add add out and push rcrb popa add xor (bad) es push sarb rolb dec jae or or inc xchg or add call pop adc stos cs adc sti testl xor push dec inc dec pop push sbb stc dec dec inc add add je les inc ret xchg sbb fcoml push je fwait add stos ljmp adc fldcw fs loop or mov inc add mov daa add and daa jo fs rclb orb add pusha scas fwait add mov xor xor fstl jg pop enter or dec inc jecxz insb mov and (bad) pop aam cmp adc sbbb push rolb pop xor add test jge pop pop xor inc inc jae and or das xor daa pop fcomp sbbb cmp or daa push fld push push ds pop popl test mov dec inc pop cwtl sbb inc pop addr16 pop in nop pop enter xor sbbb push pop mov popa sbb popa aas inc fs and inc scas in jo jno add jb fldcw add je sarb jbe mov push loopne inc out push mov negl cli sbb sbb pop inc mov or cwtl pop push je invlpg xor and cmp push leave outsl or enter pop pcmpgtd or and and fs xchg xor push xor pop sub (bad) xor inc cs add xor insb pusha mov mov popl dec push aas jo adc dec test push fsubs call push xor push repnz inc xor or and push in push xorb (bad) mov xchg inc lock or pop test and subb rorl xor xchg call fsts std cmp xchg hlt mov and pop sub sbb dec cmp xchg js movsb sub nop mov push fs mov pop leave add cmp in cmpsb xor xor xchg or sub pop imul movl sub push add mov add sbbl xlat adc divb inc daa xlat push push or push cmp and inc inc dec xlat mov fxch addr16 cmp pusha xlat jmp mov sub and notb bound test aas mov mov pop nopl dec pop repnz cmp sbb inc add sbb add (bad) mov push mov (bad) outsl shlb sub pop inc movsb not sbb dec loop rcrl sahf pop int3 cmp cmp add inc fwait xchg test or in scas pop popa ja aam aam add push xor push inc push xchg mov mov dec sahf or pop shrl imul mov and or in sub fs mov (bad) ss jbe inc ja adc mov jae add adc and hlt fcmovnbe mov adc insl gs outsl add jae popa add mov loopne mov addr16 xchg out mov mov xchg and bound data16 xchg jae sub adc outsl ret or cwtl mov fldcw das sub outsb fs adc lea push cmp add mov in cmpsb stos push out or add add pop adc pop add bound imul cli and gs je outsl lcall sbb imul cmp bound jae mov jb std fadd sahf cmp das jae pop sbb adc add add scas mov sbb mov mov cmpsl pop adc (bad) jne push pop jae pop pop pop xlat or xor push push pop orl pop and mov sldt addb pusha sbbl aas push pop pop pop (bad) jne or push pop cmp frstor or rolb push fsubs jne adc push orl mov pop lock pop push xorl pop adc push pop jecxz sub je xor enter cmpl fs and mov (bad) or pop xchg call xor pusha pop sbb cwtl xchg sbb mov xlat pop jl cmp sbb fcomps insb mov push sub mov roll mov jg push sbb push pop adc push sbb and jb xor insb mov aas (bad) decl pop bound insb mov push and movsb lar mov push sbb roll insb pop pop pop pop sbb push sbb incl jp cmp insb mov pop aam adc push inc mov push sub mov lahf fsubs sbb hlt jg orl push push (bad) mov mov pop jbe roll insb ss int3 decl pop add insb mov pop es lods prefetch fsubs xchg inc pop in fsubs jg pop pop pop push pop fsubs or jle pusha orl sbb orl pop mov enter dec pop cld and and push pop adc fsubs rolb aas fcoms pop and enter mov ss ss pop loop pop pop or pop xchg (bad) jns shlb pop cmp sar imul sub mov sbb pop mov dec pop repnz sbb push pop adc pop rolb pushl xor xor jmp and or pop sbb ljmp push sbb and roll pop (bad) add pop sub fsubs lahf lea dec pop cli push loope nop jmp inc roll xchg pushl xor fsubs movsb (bad) jmp or cmpsb maxps mov pop out pop pop insb dec sbb xchg (bad) jnp sbb (bad) ljmp pop mov push sub mov lahf dec orl idiv inc dec orl nop xor pusha pop aaa aas into incl pop daa pop scas bndldx fild push sbb pop pop pop pop sahf roll xchg (bad) jg aas pop mov xchg pop sbbl popl dec or les (bad) inc leave push xor inc xchg rcll push xor leave leave test xchg cltd fsts stc push xor inc leave in aad push xor push int push xor inc leave fnstsw xchg ret mov jecxz push xor push leave repz stos xor inc leave push fstpt sti movl xchg xor push leave push (bad) iret xchg or inc scas out inc leave push xor or lahf push out cmp jecxz out add fbld pop movaps mov pop cmovo fistp xchg mov lcall cmc sarb lahf add add pop rorb aas add enter sbb pop push sbb push popa aas add nop xchg ret jg xor add cmp or mov imul (bad) inc inc mov test xorl fmuls fs insb and jbe inc add pop inc and or add jns adc mov pop push test mov add arpl inc pusha lret out jecxz or sbb into xor (bad) pop incl add and xor decl add aas jg inc xor je inc stos cmp arpl cs inc push xchg pop test inc sbb add dec push nop pop movsb or sbb and fcomps and add test movsb mov arpl incl push inc movb mov pop add movsb cmp fdivs pusha (bad) jns and cmpsb fild mov lahf sbbl mov fisubl inc push sbb sbb test push out das iret mov mov mov adc mov pop ficompl fisubrl shrb rcr fsubp cwtl xor or cmp add mov in mov stos mov pop jbe jg mov inc adc or jbe pop sarb pop jmp add rolb lahf pop jl add xchg sbb loop xlat push lret leave sub or repnz mov sbb or cmp call adc sbb sbb xor mov push push xor push pop mov push sbb pop jnp pop dec lock mov orl das xorb pop (bad) pop addl add sahf pop sbb (bad) movsb outsl cmpsl pop mov jo roll pop xlat sbb cmp or sar inc cld mov pop jae pop and inc pmaxsw pop mov dec test pop pusha xchg dec (bad) je adc cld negb imul out jne jmp pop push testl lock pop and les call pop jns cmpsb jnp les pop cld mov inc shr (bad) cmpsl mov push sbb add lea add xchg into add add nop xchg xchg inc sub add test fild push mov orl jae and add test jge add mov jmp imul in dec (bad) xor loopne fcom ror xor (bad) xor mov xor rorl (bad) xor js jo push xor pop push dec inc dec rorl add and gs xor add or in or rorb jnp inc sbb and mov push fldln2 inc add jae and fild (bad) fist jle add fnstenv push push lahf push inc aas andl and shrl or (bad) and pop jg mov aam rcll (bad) xor pop mov add add cmp ja pop roll repnz dec xlat popf jg das add add and or mov popa cmp mov adc jge mov dec (bad) or add adc or mov popf dec fimul outsl adc (bad) push add nop sub jb add test push js in jge inc adc mov sub (bad) (bad) (bad) inc orb imul inc arpl adc mov pop pop pop pop and dec add adc (bad) (bad) pushl bound push xchg cmpsb xor lods dec lcall or inc (bad) (bad) (bad) jmp dec push sub mov xor mov jge cmc (bad) (bad) (bad) dec std cmp fidiv cmp data16 mov ret (bad) push adc cmp test adc lahf (bad) (bad) (bad) (bad) decl in int3 repz ds jl repnz jno mov cmpsl pusha mov pushl pop and lret gs (bad) (bad) pushl ret push push xchg icebp pop sbb out scas mov cmp in arpl mov (bad) (bad) jp or mov cli (bad) int3 decb cmc add xchg ja pop cld (bad) (bad) (bad) call sbb pop adcb xchg fnstcw sbb xor cs popa dec and mov popa add mov cwtl push lods dec push sbb mov lcall mov data16 push test jae push cld pusha fadds (bad) (bad) (bad) jg jge add xchg das fcmovb cmpl pop inc test adc ror xor data16 or add jg (bad) lcall scas cmc sbb push fimull test shl sbb cmc xchg (bad) xor sti call sti or fildll faddl sub jg das pop out adc xlat cmp (bad) (bad) pushl mov mov push pop pop addr16 mov imul ljmp (bad) (bad) decl clc lahf add ja,pt (bad) fisttp (bad) fcmovnu cmp inc inc mov jg mov ja lea (bad) push lahf pop loop xchg in jbe jbe leave out xchg insb popf dec jg dec (bad) (bad) (bad) pushl cmp fs mov inc and ja lods or testb pop loop popf add stos scas nop (bad) (bad) (bad) decl insb jmp enter mov in outsb hlt sbb es mov enter and dec jb (bad) (bad) pushl mov out nop xlat jle mov mov imul fisttpl in or fisub (bad) pop inc ret dec xchg call fsin push xchg (bad) (bad) (bad) lcall imul pop cmp xchg cmp cvtpi2ps xchg repz (bad) ljmp xor mov xchg cmpl pop sbb mov (bad) mov pop movsl aas daa (bad) sbb jmp pop (bad) aaa mov lds add push rcll cli in cmpsl (bad) (bad) (bad) (bad) jge lret ss lods insb (bad) lret fstps pop insl push loope sub cli cmp clc (bad) cmp cli mov xchg and xchg cmpsb (bad) (bad) (bad) ljmp addr16 dec mov or cld mov xor mov push add pushl xchg add aam insl xchg mov insb xorl lcall push orb loop in notb pop lahf (bad) and (bad) (bad) (bad) (bad) fsubs imul jl arpl sbb mov ror fs jmp dec (bad) (bad) (bad) ljmp sub inc gs mov addr16 or sti in inc aas add and sbb test dec outsl ret ds fs (bad) je aam jge repz dec insl out adc (bad) (bad) (bad) lcall (bad) std push lods jecxz inc jno (bad) xor inc cmc or xchg in push (bad) (bad) (bad) (bad) fsincos and or sub cmpsb push add mov push stos ret jge cmp sbb (bad) (bad) (bad) ljmp outsb or inc fsubl mov add insl test imul (bad) incl sub (bad) pushf in cmc push inc push mov add sbb pop add xchg ficoml adc (bad) (bad) (bad) jmp jne aad xchg stos push xchg mov movsb add inc test xor dec (bad) (bad) (bad) (bad) cld and push jmp inc inc stos cmp das (bad) popf inc cs outsb mov lds sahf loop aam jge hlt inc fcmovnu mov add jg cmp and cld (bad) (bad) lcall orl test adc insb aam xor cmp xchg pop xchg push mov ljmp das jnp bound xor add pop push xlat inc pop popa in sbb lcall pushl sbb clc lret sub jb rcrb cwtl mov (bad) (bad) mov sbb mov fistl cli adc repz xchg xchg shlb (bad) incl sub jmp xchg cwtl push mov xor inc decl or dec imul xorl lock call push cmp lock jecxz push dec hlt dec mov data16 fcmovbe or sub (bad) (bad) inc inc jg test jns cmp addr16 jae aam adc enter std jg inc int3 enter stc add aas mov push adc inc loop sbb dec mov ss add dec push insl dec (bad) fnop (bad) jnp aaa pushf push cmp and pusha pusha mov (bad) jg ret pop icebp (bad) outsb xchg and jmp pop push fwait mov aaa mov and lcall xor pushf outsb pusha inc je xchg (bad) rol scas jmp lea push imul (bad) imul (bad) xchg mov push jo push or test jmp (bad) push mov or push repnz inc cmp ret inc push dec inc mov sub and pop movsb (bad) (bad) (bad) dec inc int sub ss sbb xor mov mov shll (bad) (bad) ljmp in adc or cmpl insb sbb jnp push pop ret xchg (bad) mov outsb test fs (bad) repz mov cmp js out push std (bad) (bad) lcall push stc mov dec inc jno into mov or pop fwait dec cmp cltd or (bad) (bad) (bad) mov stc andl add adc pop aas imul (bad) pop cmpsb (bad) or cs xlat ss pop mov lock pop mov push pop mull mov add (bad) jg mov or jge xlat jl (bad) xor leave adc rclb call and sub cltd clc pop sbb fadds mov icebp or inc daa sub mov lds imul (bad) (bad) (bad) jmp (bad) aaa mov icebp mov fildll aas push (bad) mov lds mov js push scas sbb (bad) mov dec imul xorl les push pusha push pop stc add (bad) (bad) (bad) lcall sub imul mov cli shld jbe ds out jp (bad) (bad) inc adc lds adc and call (bad) dec xor jae repnz nop lret mov xor dec outsl (bad) (bad) (bad) inc leave enter xchg xor xchg dec popf mov mov pop mov inc call gs dec addl mov dec or xor fst shlb mov hlt shr sarl test mov dec mov inc jg and (bad) (bad) push das enter xchg lods jge das mov aam lds or push dec jp mov imul incl pop cli cmc icebp mov enter addr16 out xchg (bad) (bad) (bad) jmp jp xor inc pop mov je (bad) jl mov (bad) aaa mov icebp push jge inc or adc out dec test push test adc mov (bad) (bad) (bad) ljmp out cmp (bad) aam leave repnz rorl ds cld cli push cmpsb or sar aam adc fcompl mov lcall es (bad) call push push push mov mov inc xchg cmpsb xor inc dec (bad) dec aam mov daa sub (bad) call and cld mov dec ds xchg (bad) (bad) jne das push cmp mov (bad) jmp fs cmp and ret dec outsb lcall jecxz ljmp ljmp icebp cltd mov push xchg popa cmp scas xor sub (bad) ja push mov das add pop cmp xchg mov out and cwtl mov or jb xor xchg mov inc cs test adc out lret lods (bad) pushl add mov ds sbb pop in lock (bad) (bad) jg fcomps jo in sub mov pop jno stos dec popa mov mov in mov rorb inc frstor adc and ds dec and mov xchg iret test (bad) dec jg repz add mov xor aaa rcrb xchg jg xor mov or sub xorl clc incl pop sub add sbb sbb (bad) (bad) (bad) ljmp out xchg dec or and add push sbb sub cld rclb mov mov cmp mov rorl cmpsl lcall aaa add in sbb and mov xor (bad) push dec cmp cmpsl add or add or (bad) (bad) jmp mov mov aaa fs jl mov inc xor sbb lahf sub iret push movsl mov rcll shlb fwait push mov iret clc mov jecxz (bad) (bad) (bad) pushl mov xchg jbe rorb jecxz cmpsb adc lahf jl movsl or push mov (bad) pushl (bad) into xchg mov call mov (bad) jg (bad) fimull mov cmc out into inc pusha lret rcrl ror mov dec cld (bad) ljmp xchg pop arpl inc mov es sahf bound je incb test add imul sbb bound cmp cli test adc ja jb cwtl push xchg scas mov je call jmp inc or dec lods cmc inc push (bad) call rclb fimull jmp and pop or leave aad jo (bad) mov cld roll xor sub aas scas inc mov ss cmpsb cmpsl push (bad) lcall inc (bad) lods into or pusha stos test stos cmc (bad) ljmp mov push fnstsw popa dec cs xlat pop inc add cmc nop iret movsl push test test xchg cmp inc scas cmpsl popa (bad) (bad) (bad) (bad) stc inc jl imul (bad) mov jno push inc jne dec push mov sub mov sbb pushl es and dec jae leave cmpsl pop adc iret popa mov (bad) pop ficomp pop push dec xor cmovno add call incl fdivl sub or scas stos pop sub subl (bad) (bad) jmp in sub xchg sub dec and pop cs dec inc mov jae call xchg test push mov xor fstpl mov out inc and lods (bad) jmp jecxz push jecxz (bad) sbb sti popa sbb add mov (bad) (bad) pushl pushf xor jnp shll xchg sub pop inc xor mov (bad) jg jle (bad) les (bad) jmp mov (bad) incl icebp popf push sti std ret shlb mov cmp inc xor or das lock mov orl sbb aam mov push (bad) (bad) (bad) lcall xchg add jo or sbb aas lar sti or idivb and add fisttpll or hlt movsl jg add jb push push xchg or (bad) (bad) incl adc lret inc inc sahf inc ret bound mov je sub xchg lds call aad push and add stos jmp (bad) (bad) (bad) cli xchg xor test jb jecxz dec xor jnp push jae roll mov ds movsl sbb roll rorl cs loopne xchg mov push aas or pop lcall (bad) mov pop lds test xor lods dec insb out stos ss (bad) (bad) decl sbbb xchg mov rcll outsl stos leave sub push fdivrl xchg xchg mov and jl jl and (bad) ljmp adc jecxz push test cmpsl ret out sarl push jb lret mov pushf lret push add push jb lret aad test jl and (bad) jg and loopne jb inc sbb inc and call mov (bad) inc je fcmovu adc jg or adcl mov add aas jg ljmp int3 and fs mov es (bad) ljmp mov icebp fsubl adc or fwait sub fisubl (bad) (bad) ljmp lock test lret addb mov jl push sar decl test scas or (bad) jle lds push xor fidivrl jecxz arpl (bad) (bad) mov push jbe sub addr16 fcomp (bad) or fs ljmp xor xor fwait and in sbb clc or dec inc push test stos iret mov pop cmc (bad) (bad) pushl cmp or rclb bound aam cmp scas push mov leave icebp inc ljmp pop aas aas adc lahf subb addl mov lcall (bad) jns inc mov xchg in les gs clc (bad) incl aam orl sbb sbb cmp in xor insl pop xor cltd push adc je push test mov sub repz fbld and leave sbb in stc sahf cmpsl and adc xchg bound stos mov adc popa in sub and (bad) decl cld adc shlb pop cmp cwtl ficomp movsl push insb push or inc rcll and mov mov add cmp (bad) cld sbb dec outsl jno das dec cmp mov loope call sub nop loop (bad) push in fild (bad) es pop test bound pop insb (bad) (bad) (bad) fistpll adc aas dec push pop adc add xor rcll sub pop xchg jge fldcw in cwtl sub cwtl adc mov dec or out cmc (bad) call jg and repnz fsubrs jp inc push push inc (bad) fucomip lcall inc mov dec sub imul jle popl idiv lods decl push add ret inc je lea xor das je (bad) pushl mov xlat lret repz pop aad xchg cli (bad) call jb jns adc bound xchg pop xor cmp in lret sub xlat cmpsb sar push jg shr xor push add scas lea xor mov xchg into test lock jns inc xchg js jp std (bad) ljmp push lods push mov add mov test scas adc push jg adc pop jge ret in push pushl arpl mov mov jmp xor repz faddl std dec std mov xor cmpsl ja in fbld jb (bad) (bad) ljmp jb (bad) lret iret imul ljmp imul in outsl cmc or xor fstl pop mov or cmp loopne mov push add adc lods xor push xor pop adc cs (bad) xor cld xchg sarb cs mov lcall mov (bad) add or or cli mov sub or decl popf rcl cmpl repnz xchg jb mov outsl hlt (bad) mov mov dec dec insl mov rcr test (bad) (bad) incl mov lcall sub sbb inc add stos pusha icebp outsb nop rorb pop outsb pop (bad) (bad) pushl test inc lods stos sahf inc inc je hlt mov mov pushl xor insl test shlb inc push jmp jg in das das shl xchg ret mov jae adc adcl outsl mov inc (bad) jg (bad) mov pop lfs popa mov or repnz std decl xchg (bad) cld cmpsb adc pop xchg mov pop adcl pushf push movsl (bad) (bad) (bad) jmp pushf cwtl (bad) arpl cli or push movsl (bad) out xor mov push (bad) jg decl aam lahf aam xchg arpl xchg jno xor inc dec add xor aaa (bad) sub daa out je mov daa enter dec das xchg incl decl test sub popf lahf imul outsl lock push test push mov pop push sub add sub (bad) dec sub xchg xchg ret sub cmp cmp lcall cld ljmp pop stos cmp out jb mov ds xchg push lock dec lock inc adc addb adc sub xchg lret (bad) xchg jl test repz test jo aad outsb push std std fsub mov jnp inc or sbb ljmp xchg inc dec xor and lds les clc lret (bad) (bad) flds aad clc jge sub ds ficoml sbb sub pop loope (bad) call mov ret xor mov mov imul and (bad) (bad) jg sarb lods (bad) cltd pop sbb stos sub push mov bound mov xchg incl mov push bts nop (bad) (bad) (bad) jmp loope add (bad) mov std loop pop mov movsb clc ret inc pop xchg add fbld sbb ljmp movsl es popf nop sbbl jne loop push cmpsb call cmpl cmp mov mov stos inc insl lcall and lea or popf outsl mov pusha jb xchg xchg mov mov int3 (bad) cld (bad) incl cmp sub fs jge das cmpsb cmp icebp stos (bad) outsl mov out mov out adc mov sub add aaa out sbb mov jmp (bad) (bad) jg lahf push jns outsb and outsl and xor xchg dec outsl sub movsb lret pop jg (bad) (bad) jmp pop dec xchg push pop ret fnsave xor mov fldt or (bad) (bad) (bad) ds insb (bad) dec loope test clc cld jecxz js mov jns test stos jge (bad) (bad) (bad) (bad) jp xor (bad) div std mov xchg jo xchg fcmovu push ficoml adc dec aaa out (bad) (bad) ljmp dec js orl cltd xchg mov mov cmc cli pop clc incl push jb jb adc adc xor dec fnop loop adc into imul lods (bad) (bad) (bad) incl (bad) (bad) xchg cmp lods mov push push mov jl push iret jmp push les inc pop lret push sub negb aam push sub jmp cmc incl jle (bad) xchg dec imul (bad) les dec add jle das push out ficomp jns (bad) jg loope je sub pusha fist mov lahf mov jmp call or rcr adc push dec out movsl in fldenv cmp add lock movb push lock pop (bad) (bad) (bad) jg js fnstcw jg push stos xor or jle inc scas (bad) (bad) (bad) call push loopne fmuls icebp rcrl jbe cmc dec jle hlt aaa mov movsb adc xlat sarl nop mov imul mov fwait imul imul (bad) mov out pop shrb stos mov ret jp imul cltd jle push or pushl mov push int3 stc dec jecxz jae test das outsb xor insb mov shrl movl sub xor xchg leave adc ret or pop (bad) (bad) (bad) mov aas repnz pusha push scas xor shl add xchg insb fldl repnz inc mov jmp clc stc ret mov aas rorl cmp inc lret in pop hlt mov outsb lock mov jp int and cmp adc hlt incl andl fidivl (bad) (bad) jmp sbb out cmp loop cmp sahf fwait out lea pop aam ljmp mov sbb outsb sarl sarb leave ss (bad) (bad) (bad) mov (bad) testl mov outsb jnp pop jb popw data16 lahf icebp sub outsl pop cli push xor mov jecxz xchg jns ret das sti or std ret int3 sbbb sub in and ljmp stos jae pop xor add adc sbb cmp jo mov iret inc imul rcrl dec jp (bad) (bad) (bad) pushl mov fldl xor ret and rorb mov or std lcall das adc ret (bad) jmp pop dec lcall (bad) mov test sub jle lret and loopne mov pop loopne hlt loopne sub insl mov xor pusha dec pop es pushl pop out cmp adc mov jmp popa xchg xchg lahf aaa sbb jno jle add sti fucomp push push xchg push sbb lcall mov pop inc push xchg int jg ficompl subl or ret (bad) stc mov sbb arpl scas xlat sub or insb cltd mov das repz lods jge adc lea adc jmp inc ja sbb arpl out adcl bound test pop cli jg (bad) in mov into lds xchg and ja (bad) jg incl popa js add sub push es repnz (bad) fucomip add mov popf stc add push jp xor lea xchg addr16 inc aam pushl es xlat mov cmp fimul ljmp cs fistpl xchg (bad) insb inc outsl dec std decl mov (bad) mov mov lcall push push xor push (bad) jmp pop or cmpsl fisub push add jge lcall (bad) pushf pop add ret rcl daa push mov imul fildll (bad) in xchg shlb jle (bad) mov jmp and lcall inc outsb push out mov jno (bad) decl pop stc inc stos hlt xor aad jnp sub scas dec xor push (bad) ljmp lods lea mov mov mov fiaddl cmp call hlt call enter outsb xor jecxz mov inc movsl or (bad) call inc jg inc mov or lcall dec dec dec push mov (bad) das std (bad) mov xor xor and dec std adc mov (bad) (bad) call mov and pop cs (bad) xchg push mov cltd (bad) ds lahf (bad) daa loopne (bad) (bad) pushl xchg inc imul adc rcll aas xor sub push mov (bad) (bad) pushl add lock fcomi xor in mov test mov fild inc jae xlat fisubl inc ret xchg loop xchg jge stos test addr16 xchg and sti (bad) decl dec push dec mov push cmpsb inc cmpsl pop or jns jae mov inc mov (bad) call mov (bad) jae push push aad (bad) lcall inc mov xchg sub ja jmp lods mov sbb fmuls or pop repnz inc jns insb outsl repz add mov add and loopne ljmp aad xchg les mov jnp push insb insl dec leave pop jle iret jge xor jmp lods mov xor daa sahf push js out lahf iret stos xlat aas mov xchg fidivrl or sbb out add testb lahf dec push cmp aas cmpsl push push ret adc scas scas dec fisttpll jmp aaa cmp outsb jge ret jb and fisub (bad) ljmp hlt stos fidivl sti pop xchg rcrb pop and cmc repz aad fdivr (bad) (bad) ljmp cmpsl cmp push movsb fcoml add lods add clc loopne (bad) call inc cmp mov jmp iret inc mov adc add data16 in mov (bad) lcall mov inc mov inc push dec adc fimul jg das iret xor xchg mov jb mov bound adc cltd in ds sbb inc jp sbb xlat sbb jg lea sti cmp xchg jbe xchg sub (bad) jg or mov inc mov add xchg shl jno outsl sahf sahf xor pop adc ss xchg out jne mov scas pop ljmp stc xor pop dec xor mov pop mov int xlat andb test test pop movsb or enter or stos (bad) incl dec cmp lret ret orl sbb je (bad) (bad) jg sbb les push sti mov cmp les push sbb xchg cli (bad) (bad) cmp cmpsl cmp je dec (bad) (bad) mov jnp push (bad) pushl jbe lds cld ja fcmovnbe (bad) cmp dec xchg (bad) jecxz pusha jge (bad) (bad) jmp cmp or ljmp fwait (bad) mov shlb leave mov or mov stos jg test bts pop and ljmp frstor cli stos xchg jo movsl cmp cmc popa mov push cmpsl dec idiv or mov lret mov inc stos das inc or jecxz test xor push fs ror or (bad) jmp test mov stos loopne cmp rcrb push dec mov loop jmp repz mov lea popa adc ret sbb mov addr16 xchg push lret imul add jo add scas ror push inc xchg (bad) jg pushl xchg xchg add call out lea test (bad) dec push cmp push pop push fstl cmpsl test not pop inc (bad) inc hlt adc xchg stos (bad) (bad) decl pop pop movsl out icebp loope and or cwtl cmp cmp mov je outsl push cmpsl in sub imul pop js (bad) pushl repz mov jb dec test (bad) push xor std (bad) pushl fcmovb xchg out or lock fnstcw cmpl (bad) (bad) lcall inc stos push sbb leave shr mov add xlat clc inc mov lock bound iret mov jecxz mov sti fucomip inc jae dec rorl or mulb subb mov cli cld rorb in in vpackssdw (bad) (bad) (bad) mov adc out lret jge mov (bad) push mov clc test fildl icebp pop stos (bad) shlb lods (bad) jmp xchg outsl test pop jle dec lret pop loope decl mov faddl push dec into jmp sub mov das icebp (bad) incl push mov seto and les cmp mov sub cld sbb repz jle (bad) aad cld push mov add lds xor addr16 or and pusha icebp (bad) xor ret insl xchg test roll pusha sbb mov fcoml negb jp xchg imul xlat shl das xchg (bad) in decl mov insl scas xor loope jmp dec jmp sub lcall (bad) jle adc push inc pop ret add mov dec cmp (bad) (bad) jg femms sti rcr iret imul std cmp outsb dec adc xor ja lea clc jmp or sbb push sbbl lods xlat mov bound xchg push (bad) lcall xlat push push add (bad) (bad) incl repnz lds shll (bad) jle outsb insl stos cmpsl mov outsl std push (bad) mov aaa popf dec mov mov shll dec cli xchg out cmp or ret (bad) and and xlat jo sub lods mov cmp jg xlat (bad) (bad) decl pusha shrb dec rcrb imul into pop mov mov cmp (bad) incl iret jae pop add cmp or rsm loop call nop ja adc cmp cmpsb fsts xor (bad) das adcb xchg (bad) jg dec pop mov pop in adc lret dec (bad) (bad) (bad) (bad) ficom mov (bad) cli push and adc repnz pop mov dec testb ja jl repnz aaa push pop loopne clc cmp lea call jg xchg push mov jo leave pop imul pushf add (bad) (bad) (bad) dec xchg (bad) aaa sbbb aaa cmp lock test hlt js int3 int lcall std movsb xor shl dec push imul xchg inc pop lahf mov jle sbb test js xchg into mov loopne pop push loope sub and (bad) (bad) (bad) fstpt out pop inc xchg lcall ss inc scas or lods xor imul jg mov jbe aad xchg or mov jns stos jg bound mov loop inc dec cmp mov dec popa aaa xor and decl insb and std repnz andl push mov arpl mov pop call sbb insb pop pop pop push jns jle incl ret inc mov xchg push lock push sub mov mov loopne sub daa adc (bad) (bad) ljmp or push lcall insb out daa and (bad) push jno arpl and dec test aaa pshufw mov add fmull cli (bad) call mov arpl inc mov (bad) nop mov adc or (bad) jg inc jmp xor jge loopne ja push repnz and rcrl add (bad) (bad) lcall outsl xchg lahf inc push inc pushf mov cmp popf cmp xchg push lock (bad) (bad) push sub or push fcmovnb inc hlt push fisttp cs sti dec int3 shrl call mov dec frstor decl ljmp jmp call pushl (bad) pop and dec test aaa mov cmpsb imul inc xchg inc xchg pop pop mov mov (bad) lcall lcall sbb (bad) imul scas jb cmpsb shr sub loop,pn decl popa sbb insb rolb dec cmpsl inc pop lcall incl jne dec and dec inc adc shr rclb mov dec (bad) fbld cwtl aaa mov fisttpl cli (bad) (bad) push pop mov sub xor sahf ficomp jmp mov (bad) (bad) call mov outsb arpl mov arpl xchg xlat xchg xchg addr16 cmp or push ljmp lock fcmovne pusha fcoml xor das push out cltd orl mov test ret testl lret jnp jp inc aaa (bad) (bad) mov pop xor ret lret or xlat ret lods jle and ss scas push add push imul bound ja mov mov push adc les cmp icebp push cmp stos add add push imul mov dec jns (bad) sbb inc stos pushl push addr16 mov (bad) lcall fnstenv push sarl mov daa jns and (bad) adc xor sbb pushl fmuls and fmul stc scas jbe lods or and (bad) pop dec out (bad) ss (bad) rorl sbb lods shr or inc inc daa jbe data16 jp mov movsl pop xor xchg fistl jmp adc add insb fcoml mov scas movsl fwait pop popf mov fs fstps sbb fstpl adc (bad) ljmp lock lea sbb jo dec jl adc in or (bad) (bad) call dec movl in imul (bad) mov sub jge fcoml dec test std ljmp test pop push push add jns xchg cs mov mov mov add hlt jno and dec ret daa daa (bad) (bad) jmp jle mov pop pop inc sti scas push nop xor data16 repz (bad) (bad) cmp push xchg clc or mov add call dec xchg lcall insl test jmp push neg inc mov pop lock and cmp cmp and icebp (bad) fucomip call and (bad) mov scas fcmovbe cmp mov movaps sti testb cmp mov movsl daa fldl sbb (bad) (bad) pushl loopne cmpb stos adc xor cld adc (bad) (bad) jg pop pusha mov imul xor lret inc jle les pop mov cmc decl pop out lret outsb (bad) mov lret out sbb lea mov mov mov mov adc lcall in cmp movsb jecxz mov hlt (bad) lret rcl ret mov inc xchg pop (bad) mov adc cmp dec outsl dec add pusha sahf das mov sub call pop jmp add sahf enter (bad) addr16 test (bad) (bad) jmp mov mov or hlt xchg ret fdivrp xchg pop decl push clc (bad) (bad) (bad) jg sbb or inc mov cmc mov jo push cld mov xor (bad) arpl test adc leave add push (bad) fnop (bad) nop cs out js fidiv fdivrs mov loop loop ljmp push adc sub stos jecxz jb xchg ljmp and push or xor cmp fucom mov inc out push dec push out sahf mov mov les pop jo (bad) aad mov dec or lret mov pop lea xchg cld adc out (bad) xchg pop pop mov xchg cltd out xchg repnz fsub sub mov mov pop fstpl leave outsl (bad) stos sub jge xchg and insl sub insl and xor xor frstor jb shll incl fucomp sbb sub cmp mov sbb pop mov fwait mov or fidivl push (bad) pushl shrb xchg mov xchg mov inc add or sub add adc pop push aam nop jge and inc std pop and call repnz cmc cmpsl xchg adc iret and dec aam (bad) (bad) jmp jecxz sub push jg cltd incl and ror jne pop (bad) (bad) mov dec (bad) push fild aam dec ret xchg lahf mov stos decl add lcall pop test dec mov sti (bad) jg cmp mov cmc ja add out mov in test and punpckhwd pop jb and mov clc jg jmp inc orl jnp xor xor xlat adc xor sub dec (bad) fucomip fildll or adc push mov rorb aas inc (bad) incl outsl cld ret xor mov sahf push outsl push add lcall jmp push stos cmpsl pushf outsb mov scas (bad) lret pop mov sbb push mov jmp stos sub ret push pushf xor push push int3 or (bad) call push mov mov cmpsb insb mov insb gs in mov loopne xchg pop fcompl call sub xchg das call cmp inc dec lahf sarb push dec (bad) jae pop pop jecxz (bad) fistpll dec ds push pop mov shr scas ljmp (bad) (bad) (bad) jg pop sub xchg adc out pop mov dec add jg (bad) movsl insl dec (bad) (bad) (bad) mov rcrb ds aad popa popf icebp dec ss hlt (bad) rolb loopne mov xor clc cwtl in cwtl in jmp jp adc xor ljmp mov sub pop imul xor (bad) pushl xchg lods fwait call dec shl or add xchg mov (bad) (bad) (bad) (bad) mov sbb adc push repnz or xchg lds gs sbb push loop (bad) mov lods jmp push int3 cli fs sbb stos mov imul adc fistl shrb inc sti jno adc jle andl insl pop xor sbb add lds lods rcrl (bad) mov (bad) outsl lock mov rcrl cld fsubrl iret (bad) (bad) (bad) lcall jo jmp cmp (bad) in insl mov jbe mov mov cld cmp cli decl in xchg xor pusha cmp mov add js ljmp cmpl std and push jmp cmc xchg into mov mov imul fsubrs push sbb cmp inc test pop jno popa (bad) (bad) lcall adc push sbb icebp xor ljmp add jmp imul orl ja fisttp jle clc pop (bad) (bad) ljmp sbb jle clc jge sti (bad) idivl das scas pop cmc pop cli lods xor dec mov (bad) out or cmp insl fiaddl fisubr sub rcll add mov (bad) jg incl pop sbb je aas mov xchg test idivb xchg out jb (bad) call pop clc push (bad) in cmp jno rcrb adc push outsl add (bad) pushl std xchg adc cmc loop xchg jp push ljmp test mov push add mov adc mov push jp imul (bad) incb aaa out xlat push cwtl sbb sbbl add add push pop cmp fwait mov fadd add aas adc movsl sti ljmp mov stc push lock inc movl in icebp mov sbb xor xor je (bad) roll lcall sti (bad) cltd icebp insb outsl hlt sahf xor addl (bad) jmp push test ret and xchg jne sub std cmp mov insb fs call je jns das testb xor ret movsl stos jle outsl lock divl dec inc repnz pop or or mov inc (bad) or xchg push (bad) xor mov or push mov outsb jbe sahf (bad) (bad) incl dec jno sbb mov daa or out inc mov (bad) (bad) jl in outsb mov ds mov (bad) ljmp ret lea pop out mov xor in jmp jecxz inc stc (bad) mov pop js or jg call cmpsl adc jbe jmp and mov (bad) jmp addr16 mov (bad) jae daa lock fcomps or (bad) das pop call clc dec cmp pop ret das cwtl sub stos sahf hlt jns inc fcomp xchg xchg xlat (bad) call inc jmp adc stc loop mov or loop push ljmp mov sahf inc jbe xor ja mov (bad) call scas loop daa pop push lcall mov push mov scas das hlt inc dec jecxz mov adc adc jg mov test jmp jns cli adc popf lods cmc dec dec mov mov mov fucomip (bad) (bad) out sti xchg jns aaa push iret or stos mov sub (bad) push mov repnz (bad) cmpsb xor add icebp pusha stos stos fwait adc jmp (bad) (bad) incl mov inc jae sub hlt or lock loopne (bad) mov hlt mov add test (bad) lcall sbb mov lea mov subl mov (bad) mov add lret inc cld gs rcrb mov leave hlt dec popa push pop (bad) pop xchg int3 or pop pop loop lods cmp out rcl std (bad) in ljmp dec les aas xor xor and cmp outsl mov mov lods cmp int3 jb int pop (bad) (bad) ljmp push inc stos sbb xor test jno fisttpl les jl outsl jne sub lahf sub xor (bad) decl inc cmp jae push stc jge outsl out into sub inc je sbb push xchg or icebp pop ljmp ret vsubpd std (bad) hlt mov push outsl mov mov and daa shlb mov adc ja cmp mov dec add outsl std pushl mov fimull mov loope pushf hlt (bad) (bad) inc lret sbb or push mov adc sbb cmpsb xchg out xchg clc ljmp (bad) mov enter out loopw dec xchg push dec cmp (bad) cltd in cld pop stos push sbb fs and rorb stos jg (bad) (bad) jl jge push inc aad mov jno add lock xchg push pop incl mov and inc jp rclb mov xor jo sar (bad) std test sti arpl fistpll imul (bad) (bad) jg or cmpsb lds lahf and jne adc mov pushl clc mov jae (bad) mov fsubrs bound lret test (bad) cld push dec pop sub xchg imull cwtl repz dec pop int3 pushl (bad) decl jo cli ljmp (bad) hlt aaa (bad) xor push aad dec adc hlt adc add mov mov dec cmpl cmpsl inc aad push inc (bad) pusha jp push in (bad) (bad) (bad) incl movsl pop cld mov dec stc repnz outsb (bad) jne icebp ds and adc (bad) (bad) mov pushf icebp jle fnstsw inc repz call adc fmuls sub xor pop jmp dec dec std (bad) decl cmc fstpt in sub fimul jo push rcrl xchg bound lock jmp jo ret jnp jmp stos xchg ja (bad) pushl (bad) (bad) jbe xor cmp cmp (bad) dec cltd or decl push (bad) pop movsl cmp sub lahf addr16 jb imul mov cmp dec imul in xchg or out mov mov lods inc mov ja lcallw cmpsb cmp sub in jae (bad) (bad) mov shll and inc mov mov lods mov jge mov (bad) decl lock clc mov loope test test mov adc movsb sbb (bad) fmuls dec ljmp add sub xor nop add mov cwtl push cli jno jns (bad) mov mov gs xchg fdivs mov gs (bad) (bad) (bad) mov fisttp es push sbb in dec dec jl adc xchg cmpsl (bad) (bad) jg int (bad) mov jb arpl mov repz and (bad) (bad) clc inc lods push daa scas cltd lret and (bad) (bad) lcall jmp mov mov pop sub dec getsec sbb mov dec or cmp lret and mov mov push sub dec (bad) repnz pushf cmpsb mov add sub (bad) (bad) jmp pop icebp adcl jns mov inc lods lods ret add add inc (bad) (bad) mov faddp xor mov les inc and incl mov sbb jecxz and dec ror test incl (bad) (bad) call inc xchg dec xor loop test xchg ja dec fwait (bad) int pop loopne ficom test lret dec push add push insb jle add outsl icebp lcall sbb testl inc cltd repnz stos sbb rcl xchg cli sub shrb push shrb fucomip fbld mov pop cmp (bad) decl mov or inc xchg sub push pop sub mov std call pop out jne imul xchg in pop icebp (bad) (bad) decl loope add mov inc adc xchg adc adc xchg lcall inc pop mov leave lret sub sub adc int add mov add cmpsl cmpsl scas jb incb dec fs push loopne stos sub cmp decl dec ljmp add pop push jg ljmp inc daa mov pop mov mov pop pop sub decl inc shrb push movsb ja push pop jnp mov clc pop jge pop sub add test (bad) call in push mov mov int sub mov jp mov (bad) (bad) ljmp dec inc jbe cmpsl test jp repnz pop addr16 fildl sub lock std insl (bad) out out ret jae sbb stc adc pusha dec iret (bad) (bad) (bad) icebp test sub call je call pxor xlat cmp ljmp inc (bad) div popf in roll js imul mov sar (bad) incl jne xlat loopne loope jo pop cwtl pop (bad) enter jp xor fwait (bad) (bad) in jmp push mov (bad) adc cmc (bad) lret dec imul repnz and or jo xor and aas inc mov cld (bad) (bad) (bad) fnsave mov insl (bad) in fidiv inc mov mov cmp jle xchg decl pop incb xchg pop or fisubrl call ljmp cmp imul je pop pusha and insb imul je sbb xchg pop fmuls loope pop scas inc pop (bad) in inc out pop incl xchg jl popl lods jg or push sub (bad) mov xchg sub shrb (bad) pushl mov and les int3 (bad) dec fsubl sub inc loope pop loopne imul jo jnp decl sub add cmpsl mov std dec fsubrl sbb js or decl (bad) mov (bad) decl xlat aaa fldt xchg aam cltd les popf in rorl (bad) (bad) (bad) pushl arpl xchg pop xchg loope mov not mov mov je xlat add jne (bad) movsl (bad) jb aas ret (bad) or pushf (bad) fwait jecxz cmc adc dec neg icebp or xchg push pop cmp int rorb cwtl add pop mov xor push xlat std lea icebp ljmp pop pop je pop test mov in incl inc mov out and mov inc jecxz push push pop popf ds add mov lock pop mov scas (bad) aad pop dec jecxz jp stos daa (bad) lods sub loopne decl insl inc jmp mov jecxz mov nop adc (bad) (bad) lcall xchg lret adc es in mov xor mov aaa jecxz std (bad) lcall clc sbb (bad) push mov enter sar (bad) jmp jg mov xchg pop jl imul (bad) xor sahf scas xor pop clc (bad) mov push sbb stc or inc jno push mov lahf cmp outsl (bad) dec sbb popa cmc push (bad) jmp mov into mov mov sbb jecxz lahf (bad) cmp pop mov adc xchg pop push stc sahf das rcrb cs (bad) (bad) (bad) cld adc pop je aam outsl adc popa lea xor inc mov add or jp pusha jmp call inc lock icebp mov (bad) fstpl (bad) lcall push push jbe loopne pusha lret cmp jmp mov fwait dec hlt das mov inc ja add sbb adc (bad) loop cmp stos rclb jae mov (bad) (bad) (bad) jg cs pushf aaa idivb dec andl mov pop repz mov decl xchg xchg je aaa push lods pop repz loop test jae out ret mov aam popf jmp out xchg cwtl ss xchg sub xor jmp arpl jb movsb sarb inc ja mov dec dec scas out xlat fisub and xchg (bad) pop faddl and jge mov call adc mov add test mov nop (bad) (bad) (bad) jmp xchg clc pop add jae jge sbb aad mov and mov cmp push fst out push (bad) cli mov push jle jecxz adc faddl fldenv (bad) add ss mov sbb xlat out fcomps fist movsl inc or (bad) fildll cmp nop cltd rclb loop cmp rclb xchg push shrl aad (bad) (bad) clc xchg inc push cmc cmp cmc jg test (bad) xor lret addr16 jmp jmp (bad) (bad) fisttpl out notl pop adc orl (bad) (bad) pushl int pusha mov jl or sahf xor sbb xchg mov (bad) mov push add lock push mov pop sbb jecxz ret repnz fbld pop (bad) (bad) (bad) jmp movb mov cmp sub in sarl jecxz mov testl cmp pop hlt inc adc cmpsb pop xor outsl cld idivl and clc (bad) sti call outsb lock in push insl das mov mov nop sbb add call mov insb shr dec jae push cmc in enter cli dec sub lea jno dec pop js outsl into cwtl jp dec std out xchg into repnz jge decl jge cmpsl lahf cs push mov adc ljmp cmp mov xchg out pop clc shr loope sub sub insb xchg cmp adc in (bad) (bad) (bad) jmp test sub push jo add es mov adc xchg sbb cwtl pop (bad) (bad) (bad) jmp call push rclb push sbb in sbb inc xor les enter (bad) aas mov cmpsb adc arpl mov aaa jp pop inc in (bad) arpl xchg nop outsl cld jmp loopne jo rcrl test pop and out pushf mov das std or mov push faddl jmp (bad) out test mov lods (bad) decl fidivl jle push pop inc repnz push jmp push sub sbb cli std and jl,pt push popa lahf mul ret pop jns jnp pop fcmovu jl xor lods (bad) jmp cmp out sbb fdivr mov and dec sti aaa (bad) decl dec push mov cmp jnp or pop cld xchg sarb ds pop pop loopne jg jecxz xchg sbb sub push dec pop push in test js rol sti incl jnp xchg dec dec cwtl test in jp xor mov jg (bad) jg (bad) leave divb js xor xchg mov mov leave dec push mov hlt or pop push movsb insb sub mov push or (bad) mov and and fcmovnbe test xchg or leave mov rcl inc cwtl sbb aas out adc pop pusha pushl rcrl xchg cmpsb push add out out fisttp call push insl push fisttp pop loop clc nop inc inc lret rcll inc mov push clc mov (bad) (bad) lcall jmp ret fimul adc pop push adc inc jle inc cmc int and sub jle rclb push popf cmp pop (bad) xchg into mov (bad) incl xchg cmp (bad) xor mov xor (bad) cmpsl fmuls pop mov mov decl (bad) pop push xchg inc fcomps enter jb jl push mov pop fwait mov ficom jo push mov hlt mov push mov cmpsb or pushf pop popa adc sti inc dec (bad) decl lods mov jmp mov hlt into (bad) pop negl xor (bad) mov arpl fwait dec sub add out cli lods add roll call cmc mov xlat jecxz cmp pop int3 loop call aas push lcall push push jo and adc cmp mov sub xor (bad) (bad) lcall mov mov cmp imul xlat sub sub sub pop clc decl xor loopne xchg leave jbe cmp das das add jnp adc daa (bad) rclb outsl cld (bad) cld mov and adc enter repnz test lds or mov jecxz mov movsl lock pop (bad) (bad) (bad) jg in movsl stos ret pop loopne mov and aaa imul dec int3 jno fbld lds mov call pushl out lcall insb lods mov fisubrl (bad) (bad) inc movsl loope popa push and movsb stos ss mov mov repz add ret dec cmp mov outsl hlt decl subl mov xor or insb cmpsl nop ljmp stos call loopne test jg ja mov int scas dec fldl movsl (bad) bound push or cmpsb xor dec mov pushf andl (bad) (bad) decl test in mov push frstor add (bad) (bad) pushl dec push jb lock and aad mov in arpl lds adc mov xchg movsl xchg or jnp xchg inc pop sub push sbb addl push (bad) call pop jle or stc mov add rorl xor fs shll sbb jne push push lea stos into sub aas cs hlt mov mov popa loopne pop std mov aad dec loope outsl cli jle aaa std mov mov (bad) (bad) incl fmull push and push mov lret push rolb mov fcoms out or decb or or cmp data16 (bad) (bad) (bad) js daa push pop (bad) jae inc hlt cmc nop push mov push js flds (bad) popf adc incb (bad) pushf pop mov cmpsl outsl xchg (bad) ja js gs shrb mov das hlt sti gs test out push sbb enter incl sbb or repnz pop or inc cld fs (bad) ljmp cld push ror loop lock movsb imulb mov push std (bad) (bad) (bad) dec jmp jge hlt shld mov clc cmp fdivr mov fmuls xor adcb nop addr16 nop add fcmovnu sbb (bad) (bad) (bad) incl mov lahf push cwtl or ljmp fmuls adc push sbbl std push jnp repnz je loope push add cmp jmp (bad) (bad) jg fcmovne jmp ficomp sub cmp xsaveopt (bad) sti (bad) (bad) (bad) stc std add das push add jns adc dec add pop pop icebp scas ds fnop jg (bad) leave or pop mov push fcompl cmp notl sahf mov (bad) outsl add and sahf push into jg jg xchg outsb aaa loope fisttpl out out incb ret stos loopne (bad) (bad) inc pop ja sub (bad) mov jmp repz jne inc movsl xchg or pop loopne (bad) (bad) (bad) stc pop fstpl jae and mov (bad) bound hlt in add stc aad shrl (bad) jecxz cmc jne or jns sub sti and cld jmp adc sub aas std test test mov dec or (bad) mov pop mov in sbb fdivl ret (bad) jbe in lahf push call mov pop sahf in fbstp (bad) es (bad) jnp lods decl sti jo mov pop pop push mov mov jg mov decl (bad) sarl pushf lock (bad) mull lret bound adc clc jg lcall mov mov insl shrl add stc cwtl cmpsb stos or packssdw leave imul (bad) icebp dec sbb fbstp mov mov ret iret ljmp cmc sbb clc imul sbb inc lcall cmp (bad) (bad) or mov xchg pop loop imul dec out stos test xor (bad) (bad) push xor daa adc xor add xchg add sub pop xor add (bad) aad mov arpl ljmp xchg inc icebp jl dec cmpl inc out imul shrl incl enter pop push call not xchg add orl (bad) call (bad) xor pop mov mov faddl jle outsl hlt jmp lret add loopne inc inc push outsl rorb (bad) mov pop inc pusha mov cmpsb pop cmp enter jmp sbb push das add add fcompl mov out pusha or test push test push mov jmp and pushl jl pop (bad) js sar cwtl push fistl mov push ja outsb add in inc incl out fnstenv sbbl ss mov fs (bad) lcall sub dec insl jne xor icebp cmpsb insb inc dec mov jle cld inc push insb loopne stos add xchg clc outsl fmuls or pop fcoml aas inc (bad) lods jl mov (bad) (bad) (bad) inc lret cmp gs sbb mov cmp mov push imul add or mov push mov andl fistpl (bad) in xchg sub mov or fild jb mov sbb cmp movsl mov (bad) (bad) (bad) lcall lcall push mov std inc daa pop pop and push cmp cli mov (bad) mov ds mov add mov stos repz inc dec enter aam mov (bad) stc insl ret inc sti or jl dec clc dec test sti testl pop jae adc jmp xor pop xchg mov dec outsb ljmp cli cli adc (bad) mov cmpb jno hlt mov dec mov cmp je sahf xchg mov push mov pusha into aas xlat lahf lock (bad) (bad) (bad) fild shll arpl ljmp adc hlt jle fldt jle enter (bad) lcall in mov cld ret scas js or add sub in aas aaa clc mov daa sbb jge aas punpckhbw pop loop jmp and adc std out push outsb insl insb int decb (bad) mov pop mov loop fstpl (bad) sub jae sbb add scas adc or pop xor popf pop iret sub in pop dec mov cwtl (bad) or jb loop ror outsb daa rcl or out iret icebp sbb mov decl cmp pushf rclb (bad) cld es outsl push cld iret clc jmp (bad) das (bad) (bad) push das popa xor xor and xchg out inc stc jmp pushf xchg push xchg mov push repnz (bad) lahf (bad) (bad) and inc lea cmpl loopew ljmp mov loopne add (bad) push jg loopne add push jo cmpl or pop pop in inc or pop fsubrl loopne or insl add mov or call ss or (bad) jae lret pop push or jnp (bad) (bad) (bad) in fildll adc lret loopne subl sbb push fmull test rcrl add pop jo idivl mov fcompl or lret lahf pop jl test (bad) (bad) jg or ljmp pop adc ret shrb xor stos (bad) (bad) pushl arpl pop cmp dec out xlat dec mov scas mov (bad) (bad) jg ficom loop fwait out int cs pop mov aam pop cli rorb mov iret mov pop jmp popf in lret jnp fidivl sbb sahf incl (bad) jg mov push xchg cmp xchg xchg mov sub inc ljmp ficomp stos jbe loope lret or jl (bad) (bad) call fcomps data16 xor lds jp gs cmpsl test inc adc sub adc js sub imul iret xor add mov ja lret push scas int3 data16 mov enter pop add dec test mov test cld idivb call std sub mov jae clc mov loope add ljmp cld pop (bad) ret pop xor cld mov sbb outsl fcmovb aas repz xchg inc lods ret incl xchg call jl mov (bad) jmp xor std or mov add lret add xor or sub (bad) lcall cld pop repnz jg fistpll jmp decb (bad) (bad) mov aaa sbb in clc iret les mov ja sub sbb repz cmp xlat scas std sub ljmp inc maskmovq idivl clc mov lahf (bad) in loope loop (bad) in sti aad inc pop jnp jl (bad) call dec cld out dec ds mov addr16 jge mov incl lcall pop jns popl lret cli sbb sub ljmp mov jns jge dec sahf cli sar pop mov clc shr xor clc mov (bad) ljmp insl lahf jl pop sti pop aas incl cld fistl ja std sti mov call clc lcall test nop push sahf clc roll (bad) (bad) jmp jmp dec or sub lcall mov dec add xor loope (bad) lea aad sti dec test pop cld sub or fmuls mov ljmp std mov mov inc addr16 pushf dec pop sub cs repnz rorl movsl (bad) (bad) lcall pop test js rorl mov js loop jp shrl mov loop ret shll mov cmc arpl pusha sbb and (bad) call loopne sub jne jnp imul imul pop fs push sti decl or sub add and (bad) (bad) (bad) mov clc loop inc out (bad) cmpsl faddl push push mov xor cmp lcall adc rclb pop das pop xor xlat push in xor inc inc icebp (bad) incl mov test outsl sub pop inc cmp les int mov ror mov (bad) (bad) mov ss mov cmp negb (bad) lret clc fucomip inc repnz add jle mov testl aaa pop repz jle mov data16 push lds iret mov adc and aam ja lret xor insb fsubp sub (bad) (bad) (bad) decl sub popa cwtl dec mov or out test dec xchg or push int3 pop pop fwait (bad) call jg push pop dec call jne pop and mov mov jmp lahf mov (bad) jno imul xchg (bad) mov (bad) inc (bad) out data16 leave mov sbb dec and outsb sub pop push cld push (bad) lcall push push iret cmc out inc flds mov and (bad) decl mov cwtl loope int sub jge jle (bad) jle test cs pop outsb ja sub or jg xchg pop push cmp mov jge push pop outsl aad xchg fidivr pop std (bad) mov and xor adc stc mov popa mov outsl out mov push inc test sub ds faddl lret int bound shl mov pop or jp movsl fsubs std movsl mov into adc and push add stos fwait adcb jns loop std mov xchg mov std mov cmp adc or aad mov add call adc or xor add add or mov call jle jg sbb aam pop cs mov inc enter and mov or xor xor (bad) pop clc jg and mov cld or cli nop hlt lds adc shrl sub popa out adc adcb call push cld add mov lods fiaddl pop pop add decl incl call fwait pop lds shlb push push jp pop add pop decl (bad) xor fs push scas outsl sbb (bad) (bad) lcall add mov inc push popa lcall jecxz mov test shr mov lcall dec out cwtl inc pusha orl pop pusha xchg or jp push ret jle lock inc (bad) (bad) call cmc cmp mov and push jns ficom cmp insb nop das lock add test push inc add dec push jecxz mov push mov lds mov pop call pop cmpsb mov cmc xchg or dec cli popa jg jle or je cs sarb ljmp jmp sbb dec mov jp pop std fwait daa or aas je (bad) (bad) dec mov pop scas std idiv add sbb fcompl outsb sbb sarl outsl (bad) lock mov fbld inc xchg ljmp jno (bad) mov (bad) outsl nop insl repz cmp (bad) (bad) mov jecxz repnz jl stc mov xchg pop (bad) jno es mov mov pop clc xchg rep and cmc outsl jne sbb (bad) (bad) (bad) (bad) pushl clc fcomi inc ret cwtl idivb cmp xchg cmp mov mov (bad) (bad) lcall sbb mov dec xchg push popa mov call sub ljmp inc gs xchg push andl cmc out sub adc and cwtl pop test (bad) stc or pop xchg or ljmp cld decl lret aaa outsl xchg mov mov sbb ret jge pushf xor (bad) (bad) jg or insl hlt adc cmp push cmp inc cli sub cmp (bad) xor (bad) call popa minps sbb sbb jbe popa sub (bad) xchg fs pxor ret fucomip (bad) dec popa push pop in lret into (bad) cwtl mov fwait mov sbb outsb cmpsl fisubr push cmp int3 out movsl inc loop stos add lock ss cmp icebp mov fisttpl and icebp jmp cmp das (bad) (bad) jp or pop (bad) movsl (bad) or jbe pop dec push fcomps adc jo sbb les pop sbb jmp and jl lcall sar (bad) (bad) (bad) ljmp pop add push add or dec movsl inc jl stos pop lods xor (bad) (bad) (bad) jmp bound push rcr mov or daa (bad) idivb out popa pop mov (bad) dec scas push and pop pop xchg ljmp in mov cmp xor call (bad) cmp push dec add adc dec addr16 leave popa pop (bad) (bad) (bad) ljmp pop lahf and mov (bad) add test or mov sbb jle cmp add (bad) (bad) out pusha and hlt adcl dec dec mov mov data16 mov call aad sub add sub xor xchg cltd inc add (bad) ljmp xchg dec sub rol xchg nop int3 iret sub sti add sbb (bad) sarb mov je cltd mov js (bad) jg pop imul pop pusha inc xor ljmp pop std xchg je shrb (bad) pop ret imul pop loop hlt xchg pop addr16 or popa imul (bad) decl cld sbb or rolb pop movsb jb jbe cmpsb xor rorb (bad) incl mov lds rcll jne decl xor lret out adc (bad) (bad) ljmp mov and repnz adc aaa (bad) mov mov xor (bad) lods xchg push mov jge ljmp inc dec sbb pop mov jg nop clc lret jle mov dec ret push dec inc jg push cmp rcll stos jg pop call and push ds out (bad) (bad) lcall cmp out mov lcall cmpsl popf adc aas sbbl inc dec cld push push repz inc leave into (bad) call (bad) pushl pop add push mov test out xchg jg das stos ljmp aad lret ss push lret ljmp (bad) sti aas fidivrl shll test or mov pop add ja mov mov push xchg jmp mov sar decl cltd pop call inc mov xchg fsqrt jno jns decl pushl push pop jecxz push out pop cld pop pop dec out mov push das std outsl lcall xor ljmp loopne decl mov jecxz sub psrlq out mov push (bad) ja (bad) pushl push dec xchg outsl jecxz loope nop popa dec repz push lret sbb mov std call push stos xlat movsb movsl lea aaa jecxz lds lea incb push ja gs stos dec int jmp (bad) (bad) dec aad cs aaa rcll push aas mov (bad) xlat jo shl stos xor stos std outsl and test xlat push mov (bad) (bad) (bad) decl jle movsl pop (bad) lock lret incl (bad) or (bad) mov shld icebp (bad) mov arpl sbbl jecxz cmpsb pop sub (bad) (bad) mov dec xchg test loop nop stc ds xor jmp xlat sub jnp mov aam sbb mov mov popa jo js decl sbb mov popf jne push (bad) (bad) (bad) mov push pop add loopne enter sbb push lahf add mov (bad) (bad) (bad) jmp fs int3 adc or adcb xor mov sarl xchg gs or call or ficoml mov (bad) rcr js scas dec jnp test outsl lock outsl cli pop pop mov sarl xchg ret aam loopne outsl lahf mov push adc fdivl add jne push movl shr (bad) xor push notb jg xchg pop pop call cltd std (bad) (bad) decl jl int das arpl outsl mov cmp in add jno fimull into sahf es (bad) (bad) mov (bad) fwait pop jle rcll ja aad push mov push out call cld pop loopne sti sar arpl stos lahf cmc or nop push sbb cltd aaa jp or int3 inc add fistpll ljmp lds lea push ror jmp jg mov or (bad) lods ljmp jg mov (bad) (bad) (bad) cmp push scas hlt mov lock test lahf jo ret and push dec cmp or test data16 jnp sahf and fnstsw imul mov push mov bound imul (bad) lcall jmp int3 icebp and mov outsl cmc decl and cmp jno loop and adc (bad) (bad) fildll out sahf pop aas notl jb mov xchg and rcrb pushl repz insl push arpl inc pop arpl jg (bad) ljmp jmp lods pop pop (bad) cmp in sub pop pop enter push call (bad) cld mov adc inc cvttps2pi ljmp je xchg inc sub cltd add xchg mov loope ret mov and sub mov (bad) fdecstp fldz fsts jg adc or (bad) in xchg mov int3 (bad) fs in test test fnstcw out jae int3 pop push pop mulb mov (bad) das inc push ja jnp loop inc adc pop ljmp ds mov mov jnp cwtl inc ret add xchg adc mov push adc jecxz or mov aam les xor mov dec rorb mov pop (bad) mov xor add jae fbstp imul pop icebp mov pop jl (bad) fnstsw sub lret cmp mov xchg add pushf sub mov jmp xchg enter aaa lret pop in pop pop lret fldcw (bad) (bad) (bad) call push pop aad dec xor aam jne mov loop inc cmp mov rcll popf mov pushl shl jp fisub mov (bad) movnti push hlt xchg xchg pop call loope or lock (bad) incl mov push ret xchg pusha aas pushf test es mov data16 decb pop adc pop ljmp (bad) ret clc fldenv or mov add adc mov adc jle aam push pop inc jg es mov add pop jo out mov es add jle xchg loopne sar (bad) js (bad) sbb hlt rcll xchg lods and cmp scas adc cli xor inc daa sarl jle ret sub push fstpl pop aas xchg roll sbb lea jp adc jbe sub (bad) pushl cli cmp sahf (bad) pop adc mov les aam push andl xchg cmc mov data16 push sub aam inc inc mov (bad) (bad) (bad) fisub mov cmc ja jnp pop xchg xor or rolb xor push insl push (bad) into testb std add mov sarl ljmp (bad) (bad) xor mov out or cmp clc (bad) (bad) (bad) jg fwait out fwait sub adc daa loope js fimul subl ss (bad) jmp arpl jmp or pop xchg sbb sbb mov sub adc or pop dec adc bound in movsl test lods (bad) test cmc xchg (bad) (bad) (bad) lcall lret mov push sbb mull int3 xchg mov push ret push icebp out shrl pop call rcll cld mov cli mulb push (bad) add pop popa pop (bad) mov ss (bad) jmp aam jne push cmp lret shlb hlt mov mov cmpsl push lods mov push sbb (bad) sub (bad) (bad) jg jge flds or mul test loope stc push sahf int lock xchg loopne sub (bad) div mov testb jecxz (bad) (bad) ljmp (bad) mov mov pop sub inc test jmp inc movsb sti ret cld (bad) mov stos aas lret aas loop repnz clc and or xlat push jo xchg (bad) inc pushl cli ss adc and mov insb je in sub das hlt (bad) lcall sbb pushf inc mov sbb or (bad) decl fnsave xor outsb movsb fistpl push sub lods decl push cmc mov lods je pop rorl push and (bad) (bad) pushl mov lcall xchg sub push cs lret push inc xchg push fcmovnbe jne,pt jg lcall cmpsb lcall jnp jmp and and sub gs je imul test jl std (bad) decl in push fldt lea pop jl test mov xchg (bad) sbb outsl (bad) mov (bad) cmpsl mov jno mov jecxz js and pop sbb cmp inc ret dec std (bad) decl sub jbe faddl imul sbb xchg dec mov aas mov jbe xchg mov (bad) (bad) (bad) ljmp aaa mov mov test movl idivb (bad) (bad) push mov cmp fmull and mov xor push cmp jg (bad) mov (bad) sarl xchg les inc pop mov popa jg (bad) lcall (bad) xchg jns dec in cmp int3 cmc adc mov (bad) dec (bad) (bad) (bad) jmp jmp jae int3 xchg add add addr16 pop lods xchg mov ljmp rcll mov shr arpl pop jge xlat dec (bad) push or pop sbb cli stos outsb aam or inc mov (bad) (bad) (bad) call and ja dec inc push and inc push mov dec dec dec pusha xor sub xchg jo mov aam adc mov (bad) (bad) jmp shr push sub aad cltd or fsubs xor in pop xor test mov mov idivl (bad) scas (bad) sqrtps cmp ret xlat imul push inc push adc jb pop xor addr16 sub xchg adc adc sub fcmovne or aam adc sbb call mov int3 mov xchg adc hlt sti jle ret (bad) cld xlat cmp cmp testb xchg cmp out std mov into mov ja decb adc push (bad) (bad) jg decl addr16 ficom mov aas shrl push cmp fild mov inc icebp (bad) (bad) cmp dec mov dec push sbb jbe pop push xor sahf xlat jbe pop dec pop cld sub shr xlat mov or cwtl jbe ljmp incl mov mov push outsb jae jmp cmp fcmovu or ss (bad) pop fldl2e push sti scas decb sbb mov inc hlt loopne jno in jg and sbb (bad) aas inc out icebp mov mov inc add (bad) fild aas lcall jmp clc xchg cld lcall cwtl sub repz decl push hlt out mov mov fadds push sarb sbbl (bad) incl (bad) fstpt call jmp sub cmc sar (bad) jmp loop clc mov lock nop test sti das icebp fdivrl xlat and add fucomip clc add add cli outsl hlt cltd jmp pop sbb pop or push cld pushl iret mov push out aas add add sbb mov ror xchg mov cmpsl fs (bad) mov pop repnz call xchg lds add jno test (bad) decl push and test jo out push cmp pusha dec dec mov (bad) push outsl (bad) fucomip sub lcall iret bound inc hlt bound hlt decl ja lds loopne fsubrl in mov jg (bad) call dec add cli or push jbe xchg rcrb jp movsl inc (bad) (bad) (bad) call xchg stos or fisttpll out in mov push sarb cmpsb xor shlb int (bad) lcall (bad) (bad) inc mov leave cmp or jae insl lds mov and xor (bad) (bad) mov jecxz testl cmp pusha pop dec cltd adc mov mov (bad) lcall (bad) adc xor inc push add in imul xchg or mov jno add xlat sub push sbb push loop (bad) (bad) ljmp cli jbe pop popa xchg or int jo inc lds ds je xor sub (bad) (bad) decl push xchg adc popa popf aad imull adc std (bad) jg fnop jmp loopne pop not int daa (bad) stos xchg add push or (bad) pushl xrelease rcrb adcl shrl imulb pushl dec aas movsb and push mov sbb data16 leave (bad) jg pop mov and icebp out sbb or ret mov popf jb mov fcomps (bad) lcall pop dec insb push in push xchg mov leave shrl and (bad) das icebp test or sbb pop push xlat push insb aam loope jge decl push nop aas sbb sbb adc lds (bad) sub leave std pushl jno cwtl jae inc stos push imulb xchg dec loopne xchg dec cld sbb pop jnp adc cmpsb xchg mov cmpb push cmpsl addr16 jecxz and push sbb sti (bad) lcall cli mov mov dec mov dec popf lcall vunpckhpd pushl cli lcall xchg inc mov and push nop stos jb fiaddl cmp push pop insb fwait push mov xor pop push stos cwtl pop push sub call test pop cmp cmc in data16 arpl push (bad) (bad) jg (bad) std pushw (bad) jge mov sbb out inc (bad) xor xchg out cld fdivr (bad) (bad) (bad) fdivs shrb dec inc add jge sti push enter push repnz push mov (bad) (bad) (bad) (bad) jle rorb pop inc shl pop lahf mov test cmp mov push cmp call pushl insb push shrl sahf jge sbb sub (bad) pushl and pushf and push int adc push push push pop mov dec stos lds and fidiv mov dec cmp xchg leave lea adc push sti arpl lea aad repnz ja and jmp mov lock movb fcoms adc inc and sub add icebp lock mov xchg mov jg and andl dec in add sbb pop loopne or jle dec add push (bad) sub call mov loope sbb dec mov pushf xlat dec sbb fidivl (bad) (bad) mov bound jl and or or outsb rorb or mov mov mov (bad) in int3 out cmp sbb decl (bad) jne or and and cli jg ljmp fsincos lock test stc inc sbb into bound mov scas xchg (bad) sub pop in push (bad) (bad) (bad) fildll pop sub jae inc ret outsl adc sub mov mov pop outsb bound mov loop mov (bad) mov pop mov pop fwait cmp mov push jg test jb push movsl and cmp jno xor lock mov add data16 cli popa xchg (bad) std lret add (bad) (bad) (bad) jg xchg pop and mov jb adc sbb ds popf mov (bad) mov out out sbb outsb mov test cmp sbb mov clc and (bad) (bad) (bad) mov push ja dec lds and aam dec ljmp fldt out icebp xor lcall mov lods sbb sub scas mov xchg addr16 in mov sarb (bad) jo sub call inc (bad) (bad) mov jb (bad) (bad) jmp negb out repz icebp adc jae fldl xchg cmp (bad) (bad) (bad) cld or movsb adc lcall stos push aas push sub (bad) pop std dec scas icebp ss (bad) (bad) incl sub je pop mov jmp mov js cwtl movsb test nop mov jb mov loope push cmc pushf add scas mov sbb je fist mov pop int sbb mov jmp and sar mov out ss rorl test decl mov cli daa cmp addr16 jo jbe shrl (bad) (bad) (bad) lcall imul fstl andl add push divb out jbe add lods insl mov jle push dec (bad) insl in xor data16 test push lahf movl mov mov xchg mov xor movsb fisttpll cld pop (bad) (bad) mov fsts mov adc inc mov or outsl dec push jno insb cmp and sbb hlt ja fnstsw out cmp add pop orl xor cmpsb mov movsl (bad) (bad) (bad) mov (bad) lds pop (bad) pop xchg add inc daa out mov and cli (bad) pushl inc add dec xchg sti jl dec insl mov ds incl leave lock and out jns and in mov mov and fmuls or and daa sti fs mov add jbe pop clc incl xchg xor mov (bad) and push push test incl xor pop in daa stos dec in pop push loopne jecxz (bad) (bad) call cmc pop push push and xor mov mov mov push (bad) lcall jbe cwtl adc mov rcrb pminub dec adc jmp out mov add xchg addr16 or sbb sub push mov and push jg movsl sarb mov pop cwtl stos and adc fidivrl jno (bad) (bad) mov ficom (bad) xchg and movsl jb ja cld popf push call sub fisttpll hlt (bad) lcall leave mov push (bad) in lock push mov lret push outsl cmp clc popa movsl mov xchg out jns or (bad) (bad) (bad) (bad) mov popf lahf push dec mov mov inc sub push push test (bad) mov dec pop ljmp sbb mov xchg jne mov push sub xor xlat dec pop lods dec mov dec sub xor (bad) lods add mov adc pop sub pop clc fsubr outsb inc and cmp out daa xchg inc test mov bound lcall mov loope out push int sub (bad) (bad) jle xchg adc mov sar cmp xor xchg and sar sub jp ret call (bad) (bad) js ljmp stos xor mov and jmp xchg jecxz fldenv dec imulb rolb lcall mov (bad) js xchg mov inc push ss push add cs (bad) prefetch callw pop or and cmp ds nopl pop ds (bad) (bad) incl test ds repnz xchg ret lds invd sahf xorl (bad) (bad) (bad) call sub push pop inc inc mov aaa pop and cmp ljmp hlt and ret out stc rcll inc sub call int adc (bad) push (bad) cmp cmp add out adc (bad) (bad) decl testb leave lods data16 lods xchg pop repz lea mov dec push clc (bad) (bad) out aad pop popf add cmpsb ljmp lods or mov mov loop int call popf pop jnp mov (bad) lcall outsl je je cmp mov xor fistpl sbb icebp das lock decl inc push scas jnp mov rorb mov push lret out xchg in negb jnp xchg les xchg loop orl (bad) (bad) decl ss aas fmulp push popf (bad) fcomp loopne pop jae sbb repnz out stos clc (bad) (bad) lcall mov in aas xchg fstps sbb jno (bad) xor jne (bad) jle rclb cltd imul xchg adc stos or les shrl adc push decb sarb mov jp lods stc imul out xchg fmull or mov and test rcrl es incl cwtl add out bound int3 flds in les movsb push (bad) (bad) incl xchg xlat inc sbb pushf push xor (bad) mov gs (bad) (bad) (bad) cmp in and xor push (bad) out loop fwait pop loop xchg lock mov push jmp jge pop pop push xor (bad) pushl sahf or fidivl push xchg mov (bad) idivb out (bad) pusha xor lods fistp jns sti jae mov pop xor std ret mov mov lcall dec aas jne push std cmc (bad) jbe jmp (bad) jg jecxz (bad) incb add push shrb pop das sti ret test (bad) (bad) (bad) fsub repz test mov aam pop mov repnz ror and pop hlt int jecxz (bad) (bad) in lcall aaa and sub dec xchg xor pop and mov je outsl pop cmpsl std (bad) decl push incb outsl in mov shll inc stc mov das aad rorb or cmpsb jns js movsl arpl jmp push jnp cmp mov sbb in jnp xchg sbb sbb test mov dec sub (bad) (bad) jl (bad) xor or inc jae mov lcall mov dec jo (bad) xor push adc jno loope adc push cmp pop (bad) (bad) pushl dec loopne xchg or dec cmp xchg je xor (bad) (bad) call (bad) adc adc ss sub imul sar push clc rcrl mov xchg in outsl lock inc cmp cld iret xor insl jg inc and ret pusha jmp mull add int3 jp push mov mov cmc mov (bad) xchg fcoms sub push sbb sub fisttpl jmp jg test outsb sub cmp icebp sub (bad) (bad) jg mov aaa add stc bound mov call test (bad) outsb push inc stos movsb pop jge (bad) ljmp icebp pop and mov imulb hlt ja das or sub sub (bad) decl icebp pop (bad) out cmpsl adc adc insb or fldcw push and mov inc movsl gs imul jmp aaa dec mov cwtl mov pushl inc jae mov jg inc pusha ss sbb sub jns js mov pop pop repnz scas aaa or lea int xlat js push sbb test (bad) incl lcall jne push pop sbb sub (bad) (bad) (bad) in pop mov cmpsl aas lahf xor ss js xlat sti popf cli dec cmp mov cmp aaa clc lcall rclb ja or adc xchg (bad) push jmp cli addl sbbl mov lea std jmp out lods push sti or gs jg outsb push jo jecxz aad add arpl sbb mov lds dec insb push xor dec mov pop std jno adc out int dec pop popa mov test gs cmpsl mov testl in test xchg icebp (bad) push (bad) jg out es test scas les jge in stos xchg lds jg lea mov push out stos out fmulp mov jg cmc lods (bad) pushl sbb jb mov adc loop das pushf repz popf divps adc dec xchg lret sub push lods adc hlt (bad) (bad) call mov iret xchg mov test mov lds sub push pop (bad) xor std aad or js outsb in push repnz sbb ljmp fnstsw adc les inc push mov jg mov rcl stos cld imul xchg jg add (bad) call xor mov daa lret mov stos mov (bad) call adc fistpll cmp xchg (bad) jmp mov or jl xchg push (bad) (bad) (bad) ljmp jbe out dec and jmp dec push mov add lret aad add icebp repnz (bad) (bad) call call cmp das push bound dec fsts dec shr inc mov mov sub std pop mov sbb xchg adc jb femms loope (bad) ljmp inc fldcw je neg push scas imul dec push out cmpsl add adc (bad) lea clc xor ret sbb mov call sbb iret (bad) not add pusha test cmp (bad) (bad) fildll ljmp jae dec push mov mov lret push cmp add movsl xchg ret sub mov sub clc xchg lret or or movsb in mov lods jge data16 inc fisubl ret outsb sub jnp (bad) inc xchg repz mov add lret int3 aaa xor fnstsw jg loopne js repnz (bad) mov scas cmpsl cmp jl test stos (bad) mov push xchg je addr16 repz loopne shrb mov call mov jg das les inc mov cli xlat out pand pop fbstp add xor sub fimul orl inc sbb lock call faddl sub mov cmp hlt shlb into sub lods (bad) pop aaa mov pusha adc iret jg cmp jg (bad) (bad) lcall insl mov dec arpl pop jnp cmc mov push imul inc in add repz fpatan ja sub (bad) daa jg daa sub jmp ljmp pop cmpb clc xchg jecxz (bad) xchg lret fmul lds arpl mov dec fsin sub dec scas push rorl cmpsl adc pop neg xor mov adc xchg lea add adc clc negb popf hlt add decl and repnz out ret inc lea lcall or mov stos pop mov adc (bad) lcall jp out cmpsb push and movsb cmpsb cmpsb (bad) mov pop insb sahf xor xchg outsl cltd ds (bad) jg cmp loop sti mov lcall addr16 pop (bad) (bad) (bad) inc mov cmp imul jbe test jb mov js add pushl test enter jg hlt mov jae pop test out jecxz mov (bad) lcall cmc mov pop xor ret dec inc sub mov mov pop call call mov bound rcrl fcomps fldenv jns fucomip push clc (bad) mov sub mov sub push mov insb out cmp pop cld mov loop sbb mov scas enter cli mov (bad) fs mov push incb jbe int3 data16 push mov call pop stos inc hlt adc or (bad) fdivrs fwait fs mov (bad) jo cwtl lds cwtl xor fdivl push mov (bad) (bad) ljmp hlt dec scas in sbbl xor pop inc xchg push decl in incl mov or dec lahf aam das int3 cmpsb outsl sbb ljmp movsl lret xchg fwait mull jmp adc test (bad) dec pop and aad arpl pop pop push loop xchg imulb and xor push aaa inc loope push mov cmpsb (bad) iret iret add adc lcall mov mov adc pop sbb pushf pop icebp inc outsb adc mov (bad) icebp lds aad pop xor dec std dec jecxz enter sbb xchg xor add cmp cmp and das std jmp gs bound ret xchg pop in aam into inc cmp mov dec jl lock cmc (bad) cmp mov and fucomip pop mov (bad) jg jmp dec push fsubrp xchg adc dec dec cmc (bad) out aam pop shrb lods aam insl cld (bad) (bad) call into sbb mov insl loop out inc mov mov xor arpl mov das popf mov test jne xor aaa xchg jno test mov pop mov hlt (bad) (bad) cld mov xchg jo stos or dec (bad) mov ret ret inc mov ss mov pop in test loopne pop mov lock rcrb adc mov pop mov cld (bad) pushl sub jne mov movl adcl mov (bad) nop out jecxz adc sbb sub test call push lret mulb imul (bad) call mov sbb outsb xchg adc add jb (bad) (bad) lcall cs xchg addr16 fildl cmp call mov or call (bad) decl cmp imul add sub lcall push stos push mov sub pop mov dec aas (bad) repz ljmp movsb pop rolb mov mov mov popa repz mov jne dec out xchg in (bad) (bad) (bad) (bad) jmp pop xlat sbb out sub outsl arpl es adc stos sub leave imul xchg mov dec fnstsw adc jecxz jmp inc sbb (bad) ljmp lret jae push sbb add pop fdivl ficompl pop js mov (bad) (bad) jnp cmp int3 pusha (bad) mov int3 bnd fcomps push jecxz icebp (bad) inc xor push (bad) rcl shl push inc dec pop les test sbb (bad) (bad) (bad) fldt jbe js andl hlt mov or inc outsb xorl inc xchg movsl mov inc inc xor insl roll les xor mov (bad) (bad) decl repz xchg mov cld loop popa pop (bad) insl std xor decl std pop lock inc lcall lock sbb (bad) incl jmp pop add adc push es cmpsl mov cmpsb xor push xor mov decl mov ficoml jbe sub dec xchg sub inc fxtract icebp (bad) (bad) (bad) jg lods dec clc (bad) mov lods jne mov jns cltd adc xchg ljmp (bad) pushl scas cmpsl cmc stc aaa push sub (bad) dec mov lea xor fldenv loope jno pop cld fisttp cmp add (bad) pop mov notl mov daa jb out mov hlt cmp arpl push pop sbb mov aam into or (bad) sub das std ljmp jb pop push and jo sbb les sub (bad) (bad) jmp mov cmp lret shr add push insl fwait mov mov jmp into sbb (bad) (bad) mov test mov pop loopne sub jno fsubs icebp (bad) (bad) (bad) mov into inc and dec aas jl pop enter sub ret fs pop (bad) (bad) ljmp cmc (bad) adc and std ljmp inc cltd pop stc divb inc push xchg inc loop (bad) (bad) (bad) ljmp icebp cmp add jnp pop inc pushf into loopne in not enter mov cld mov or mov inc dec lock inc pop insb xchg sub pop fwait push inc cmpsl inc and sub cmp add scas dec add loope outsl std cld and and push or dec lahf (bad) (bad) (bad) jg jge (bad) adc lods lret add fildll cmp repz mov (bad) (bad) decl hlt jmp and sbb fisubl add in sbbb (bad) jg cld cmp mov mov adc cmp cmpsb fnstsw push or fsubr push push jg (bad) (bad) jns fcom mov mov dec shrl ret inc or adc mov mov and pop mov fildl jmp fadds rcrb loopne sbb (bad) mov push dec mov fucomip sub mov sahf jle jno aad cmpsl fs adc iret arpl lods jecxz push lods xchg or (bad) (bad) (bad) decl addr16 test mov lods pop push sbb xchg push jno cmpsb addr16 xchg ret clc outsl (bad) call cld repnz mov movsl lret outsl cmp sahf sub add mov es fst cmp cli dec stc xchg aad icebp dec push loope icebp mov jg (bad) (bad) mov xlat push (bad) rorb xchg fild xor incb mov mov cmp xor jecxz out push add xchg test add (bad) (bad) call xor fsubrl lahf jge mov mov jne inc sub popf xor and and push adc aaa (bad) jne add mov fimul mov ljmp fs cs flds mov or (bad) lock gs test sahf leave (bad) fnop ljmp and lods mov lods sahf fsubs mov xchg sbb jbe dec stos (bad) (bad) (bad) lcall scas sbb add push mov cmp mov imul mov (bad) jmp jne pushfw or test inc fmulp lret push xchg or loopne mov imulb xor jns push jmp mov loope loopne (bad) (bad) fbld mov pop and inc xor cmp scas push (bad) pop cli pushl gs loop std xchg in sbb pop push sub adc mov les ljmp jo cmp in insb stc into sbb mov in mov add icebp push int addr16 jns outsb jle jg aaa cli lds mov mov test (bad) (bad) adc adc cmp mov std xchg jmp cmp incl xor loope stos lret and test sbb sbb push mov out and popa adc jbe ljmp mov nop test out ret fs sti lock popf or cs test (bad) mov push nop imul ljmp mov jb lret (bad) push cmp jg lret mov pop jae jo (bad) jg (bad) jp cmp mov iret push bound xor xor insb into ret cmpsl test (bad) lcall mov pop cmpsl subl sub jp les add push jp (bad) (bad) (bad) jmp fnstenv xchg frstor xor ret lods inc sahf pop inc rclb sbbb test call gs push popl xor imul xor jg mov cmp (bad) rcrl and int push or or pushf loop (bad) call cmc add or test int3 and and push mov cmp lcall sub inc jge or sbb arpl push (bad) ljmp std in inc xchg and pop push (bad) in test nop mov sbb (bad) (bad) lcall pop jmp (bad) icebp pop mov mov jne stos xor (bad) std or mov sahf mov xlat xor lock (bad) ljmp dec mov sti std mov mov pop xchg xor mov loop (bad) jg jmp dec adc test or dec xchg leave cmp (bad) int js ret mov aam lcall mov xor xchg mov add lods push adc (bad) (bad) jmp insl lret mov dec (bad) dec mov or push (bad) jge (bad) fnop add inc (bad) sbb mov enter out push (bad) sahf dec lcall pop cmpl or lret out cmpsl push dec mov lods lcall je (bad) (bad) ljmp add push leave icebp mov mov mov push dec jne pop lods add jno (bad) (bad) jg inc push xor ljmp xchg sub pop sbb (bad) ljmp mov ja push xor add mov outsl mulb fdivrl and pushl inc (bad) lds sahf shrl je inc test mov cmp call shrl adc pop es push xchg cltd inc jnp xchg push mov (bad) ljmp call (bad) out mov xchg push add test pop into daa mov (bad) (bad) (bad) (bad) jns icebp ret clc sbb rclb jecxz jmp push jle std lcall ds mov cmp (bad) lahf fbstp sub (bad) (bad) (bad) mov fcoml (bad) adc out iret fcoml scas rorb xchg (bad) (bad) mov add adc and mov fisubr jae cmp into mov das pop push sbb daa inc mov ljmp cwtl xchg jnp mov inc xchg inc fnstsw cmp hlt add xchg loope mov lods (bad) mov add xchg clc ljmp lock sub out pop jno sub add add call pushaw loopne sbb cmpsb jp mov fs push sbb xchg hlt (bad) call es adc cmp cmp mov out imul aaa cli ljmp mov lock push in xlat scas adc push mov decl call inc adc mov hlt dec lea ss hlt mov ljmp hlt imul fstl clc ret dec std pop aad sub icebp je dec mov dec (bad) lcall push mov cltd (bad) adc stos inc xchg in dec enter jae ljmp cmc call mov (bad) fdivl insl and inc outsl pop hlt (bad) (bad) (bad) incl inc mov xchg mov cmp int addr16 pop (bad) (bad) (bad) lcall outsl in add and and mov popl (bad) out (bad) ljmp icebp stos push adc lods (bad) xor js xchg jecxz inc and sbb cmp das jo dec in bound and dec and (bad) call cmc push pop or inc repz add adc mov inc cmp (bad) sbb das std mov pop jl shl dec jne mov or sbb push lods mov arpl loope mov mov and (bad) bound jp cmp jae cmp pushf jnp in cmpsl leave cmc jno adcl mov mov push (bad) (bad) (bad) lcall jne dec hlt arpl xchg daa popf icebp push xchg push mov in inc xor fcomps test jns add ret push mov lods jno (bad) pushl jle mov mov mov iret mov (bad) mov fistp gs out rcr lcall ret lods (bad) repnz leave cld ret push pop stos addr16 imul push (bad) jmp in data16 mov pop je sub push cmpsl out lcall loop lea pop fiadd jmp jae jge jge lret sarb adc sub call mov fsubrs call pop lods int (bad) jmp int3 jecxz mov sarb push fstpt push scas (bad) cmpsb out fimull aad mov push mov aaa in or sti mov pop sbb (bad) call sbb and jecxz call mov leave mov add mov fisttp push fisttp xor fiaddl das das fstpl push loop lods mov iret popf and out inc jb push rolb (bad) (bad) incl cmp mov in sti adc add int3 inc push pop mov lea rcrb mov lea mov (bad) imul shr dec ret mov addr16 (bad) (bad) jg add out push adc dec iret out mov cs mov aad inc dec bound mov (bad) (bad) call imul or pop (bad) sbb add loop cld cmp (bad) (bad) decl sbb or js push push mov jo adc mov mov mov jnp gs rclb flds sti cld (bad) (bad) call arpl (bad) mov dec scas ret xchg repz lock iret (bad) xchg rcll pop sbb mov cld lret loopne xchg fnop (bad) decl add out cmp add cmp daa jmp loop pop mov adc pop call rclb icebp inc loope adc pop mov dec add outsl std incl add ds or push mov imul (bad) ljmp dec adc dec adc dec (bad) inc mov adc outsl lods pop pop lret jecxz cmp jb jg call cmc shlb lea cli and mov jg adc dec xor rcll subb xchg push pop icebp dec fwait cmpsb dec sub lock pop and mov stos or movsl ss call shrb cmp pusha rcrl sar cltd es push scas lock or mov fnop adc (bad) cmp dec dec (bad) xor (bad) (bad) (bad) call lds dec lea pushf mov adc pop movsl fnstsw inc mov (bad) jno cmpsl (bad) mov (bad) scas lahf push ret sub repz xor cmpsb mov movsb xor lock ljmp adc mov inc pusha fldenv add dec pop mov pop fimul push hlt dec mov add stc dec nop out outsl lock cwtl lea mov call dec imul clc pop jg xchg pop and repz (bad) cmp addr16 (bad) incl ds push ljmp cmpsl pop sti xor inc fstpt add pusha jo or pop shr xlat mov mov mov xchg push mov cmp pusha xor inc pop sarl arpl loopne and (bad) jg lods repnz and out movsb jecxz mov or pop jno push (bad) inc (bad) movsb mov insb or ficompl pop or pop in das lret cld cmpl dec xor femms out xor jg add jmp ss (bad) (bad) incl jnp xor je sbb sub cmpsb xchg clc cli nop imulb mov push mov mov adc xor cs sub dec sub outsb push scas mov ljmp popa cli pop loopne addl inc int stos bound stos cld pop xor cmpsl pop out fucomp (bad) or call jne xchg (bad) push mov imul jg xor loope sub ljmp leavew push iret (bad) lcall cmp lea (bad) call aaa ret mov rcl (bad) xor pop or idiv (bad) mov movsl scas xchg mov or mov rol xor cmpsb lea (bad) pushl shll cmp inc shr ljmp fist repnz pop inc dec (bad) mov (bad) imul scas aad addr16 xchg (bad) (bad) decl movl xor dec movsl jg ret inc lds (bad) pushf negb pushl xchg push bound movsb jnp outsb mov adc or push (bad) (bad) jg add push aad cmp add mov aas xchg adc hlt fsubrp lods adc cmp je fstl loopne (bad) call xchg or out into es or out jge test or pop jmp adcb (bad) pushl ljmp push mov ror cmpsb pop mov insl jbe ds (bad) (bad) decl mov sahf js or or cltd in mov mov loop out ds cltd hlt mov push xor nop sub mov add in mov mov pop ljmp or xor jns mov jle jge push scas adc rorb fwait sub cltd data16 arpl bound (bad) incl and ja adc aas jle sub pop insb xor mov cmp imull mov pop cmp pop fs sbb cmpsl jb decl dec pop push inc xor xchg (bad) jg mov xor stos jnp lds dec xchg inc push aaa (bad) (bad) mov cld mov or xchg mulb sbb addr16 (bad) (bad) (bad) lcall xchg fwait out mov bnd sbb push mov cmp movsl adc (bad) (bad) (bad) incl jnp rcr in in out aam mov rclb cmp mov std mov dec lret jge push adc dec dec aad (bad) fucomip inc (bad) stc pop push jg clc into in lret imul inc lds shrb jmp popa std out inc xchg icebp int dec sarl cmp scas pop cli inc ret inc mov dec fisttpll push loope aas (bad) negb stos pop movsl (bad) adc dec and cltd push out mov push mov fadd inc adc adc xchg repz cmpsl mov push clc (bad) (bad) call popa leave push out pop ja xlat popf pop pop mov pushf lods add mov and pop test push sub sub sub nop loop jle inc cltd cmp decl cld sahf lcall icebp pushf fmull cltd inc aad repz fild push push push movsb negl xchg data16 (bad) jb js or incl stos xor lret inc inc pop (bad) incl adcl and ret shrb cli (bad) (bad) ljmp jae or push pop push and xchg cs sub ja popf jmp sbb ljmp fwait sbb cmp push mov ret inc jl add test lret sti les ret (bad) xor mov repnz ja loopne (bad) xor fdiv cmp loop adc push (bad) ljmp repnz jmp inc add adc clc jne icebp enter test (bad) mov inc jo xchg xchg orl pop cmp and es aam adc subb mov hlt aas mov jmp add cmp ljmp in fsubrl xor xchg (bad) (bad) (bad) jg pop xor lea push jmp lahf or scas nop pop inc roll data16 sbb mov mov jae jnp adc popa add (bad) (bad) mov roll fs insb cmp jae pop lock push lods pushl adc jb add sub jmp adc xor push mov pop (bad) fisubl mov outsl (bad) cmpsl lahf daa pop pop add or (bad) lcall push push mov mov push pusha sbb pop lret mov das sarb inc pop mov insl cmpl (bad) (bad) (bad) pushl cmpl pop ljmp sti adc jle push or stos push mov adcb sub stc add cmp out sub (bad) ficompl lock in jo sub xlat dec (bad) jno aaa adc inc lahf mov call (bad) fnop (bad) (bad) cmp adc xchg insl xor mov std dec mov lds (bad) (bad) mov mov dec dec adc or adc out sbb addl sahf test push fldt cmp out jns mov loope (bad) (bad) mov xchg mov add (bad) fsubp popf aas lock into out jne lcall mov xchg jne mov inc inc jno (bad) (bad) (bad) lcall in mov std xchg cli stc mov ss cld lods push je test ljmp nop pusha popa dec lret push push cmp inc jae popf push xchg int (bad) (bad) (bad) decl xchg or jp popf lret inc lcall (bad) jnp mov (bad) sbb shrl jge mov inc dec jmp outsl mov outsl dec icebp rclb in adc pop into cli jge sbb or mov int hlt scas dec lahf gs mov mov jg (bad) (bad) in push pop mov sti push xchg pop incl (bad) test xor iret in int3 cmc lock (bad) pushl test xchg cmp xor xchg or incl (bad) ljmp or sub adc xchg push ret add rorl inc (bad) lods (bad) incl pop int adc mov enter pop xchg push movsb negb and mov push ret sub adc fs outsl out add cmp jbe inc (bad) dec inc mov lahf jb mov es push mov or aad and xchg sub aad mov mov lea in lahf lds sbb push or cmp push (bad) iret out int3 mov push aad jo mov (bad) in mov cmp rcl js lods mov sbb dec or ret pop pop xor (bad) out out aad xor pop jle rorl push sti and stos jmp loope mov (bad) incl mov pop mov inc dec dec dec xor dec mov mov fucomip inc sbb (bad) call mov out std lcall stos pop test xchg cmp (bad) (bad) (bad) cmp dec ja cmp stos aas push sbb cli jno inc pop loopne add out mov lods es (bad) decl adc das mov in ds cld aas in mov fsubrl jns xor clc fnstsw pop push ljmp sub add decl mov subl repnz pop ds call clc mov xchg sbb out out cmp sub push fldt (bad) mov mov mov mov jecxz lea cmp (bad) (bad) (bad) lcall js insl inc inc out pop xchg bound sti lahf and dec push in xorl (bad) incl add iret shrb xchg (bad) je movsl pop std (bad) jge push mov mov cmp fs daa icebp add call movsb mov mov loop ret in mov aas xchg xchg (bad) (bad) ljmp movsb pushf or jmp mov fdivrl dec popa sbb call adc (bad) (bad) jmp xor mov out mov adc cmp mov mov loope mov mov cmp out repnz fdivrp (bad) (bad) pushl add iret outsl std sarl test mov jne out push mov adcl hlt das cmc pop mov add stos sub hlt push (bad) jg mov lock jae pop (bad) jbe test mov or and jnp jbe outsl in sbb outsl (bad) ljmp movsb sub cli sub sub dec and cli popa test cmp (bad) decl in sbbb jg fmuls lea cmp adc fisttpll inc fdivr (bad) (bad) (bad) cmp or or lahf jae lods js rcrb and xchg icebp das cld decl push sti test xor push sub insb sbb pusha pop scas pop outsl (bad) (bad) call adc mov xchg mov jo clc sahf xchg fdivrp call dec add jmp arpl or inc fiadd or add lahf inc movsb pop imul jg cld cmp icebp mov decl call outsl adc mov inc addl lret movq addr16 mov lds ds arpl (bad) jmp clc lock pushl outsb clc ja fcmovbe and (bad) lcall outsl cmpsl sbb dec test push mov imul jl call cmpsl xlat pop mov repnz or xor (bad) (bad) (bad) (bad) cmp sub hlt xor mov mov jg leave add sub inc lcall pop into add jg es pop and in mov bnd ja test lcall mov pop les push xor and je pop popa scas sarb push sub sub ja scas push add and jg push push ficomp (bad) jae stos cmc leave fstps (bad) mov out add and js idiv test outsl cmpsb cmp leave bound cwtl out cmpsb (bad) (bad) call lret cmc add push sbb pop xchg ljmp push stos hlt sub add mov or or adc popf jns inc lahf ljmp repz decl sub pusha dec mov push js mov cli mov iret imul aaa pop rcll je pop aas sbb cwtl pop dec pop push mov (bad) (bad) lcall stos adc (bad) aas lcall mov adc xlat sar (bad) cltd mov fdiv cmpsb adc jle loop and js daa jb (bad) or jg cwtl push insb mov aas enter arpl repz xor mov popa lea xchg fprem mov mov sub jnp aaa outsl adc leave scas mov (bad) (bad) lcall cmp mov dec xchg es jne mov mov add jo outsl hlt pushl aam repnz fnstsw pop ret insl (bad) (bad) (bad) cmp sbb cld inc add mov outsb cmp je (bad) (bad) (bad) pushl cwtl scas (bad) xor pusha nop pop xchg jb pop repnz shr dec (bad) sahf lahf push repnz xchg jp mov mov push test pop stos popa push (bad) call (bad) into ds es push (bad) (bad) (bad) lcall dec out mov mov mov in adc dec or ljmp (bad) jno in push sub adc sbb xor pop ljmp call mov xchg iret or jns fimul pusha xchg (bad) (bad) (bad) lcall inc sbb lcall scas out into fmulp adc pop ds push push mov lcall adc aaa cli call push inc ret jno mov push fcmovnb inc xor and idiv in xlat xchg push pop cmp lahf cmp sub out jl (bad) mov pop lahf jns cwtl add mov xor std (bad) jg cld aaa pop leave out push mov stos cmp mov (bad) lcall pushf je inc cs fs jne (bad) push sbb jnp test add (bad) (bad) jg pop mov sub push mov cmp xor leave or (bad) fisttp inc (bad) (bad) (bad) jmp or call (bad) cld je sub inc mov fidivrl out stc in (bad) (bad) (bad) in push xor jge jp int dec divl std push jnp paddsw (bad) (bad) (bad) lcall push icebp cmpsl pop mov cmp leave jae sbb sbb into cmp lcall ret mov or call jg dec test cmpl jb repz pop mov inc rclb jns bound sbb jae jg (bad) incl test fwait and aam loope xchg testb add ret push push lret (bad) pushl xor push bnd loopne dec jb mov leave mov lods out mov ljmp jno mov jns popf inc and mov jl or (bad) cmp sub inc js loop or sub (bad) (bad) (bad) incl rolb or cli jo cmp shll repnz jg stc mov gs data16 dec pop in (bad) fildll adc dec mov fistpl sbb xchg mov outsl lock into pop xchg lods cmpsl rol or out cmc jecxz (bad) (bad) jmp sub (bad) repz dec ret sbb cmp pop push orb jns jle arpl fsub (bad) (bad) (bad) jmp in add cmp call sbb imul pop cmp call jmp sbb jno jae pop fldl lock jnp imul testb ret loope loopne lcall mov cwtl adc lret adc out cmp add mov inc push sahf mov and adc xchg mov lret sub in jno scas cli xorl je insb cmp iret cmp mov cmp jno and (bad) mov cmp popa in xchg iret mov add cmp add (bad) (bad) dec (bad) and (bad) fcompl imul movsl xchg repz ljmp inc stos adc leave faddp cltd out cmp mov sub cmp jb cmp (bad) (bad) lcall (bad) fcmovnb test (bad) das outsb mov and jge rcll (bad) jp sub mov lret fbld stos dec and call cli mov push inc inc sub test ret imul and and dec sar jmp dec mov seto or or nop xchg movsl mov jb in mov mov or jle imul inc sar sbb aam imul pop push popa (bad) and dec in adc cmp mov (bad) (bad) (bad) ljmp (bad) sbb mov pushw xchg cmpsl sub pushf (bad) in lea push jo sub (bad) mov repz xchg mov ljmp ret adc sbb mov sub ds pop lret xchg push inc push dec jo lcall mov mov cmc or sahf stos sbb cmp (bad) mov (bad) pushf or out sbb jecxz divb mov fdivr (bad) incl xchg fcoml xor sub pop jbe inc xchg and int3 outsl lods repz (bad) ljmp (bad) mov daa cltd stc ja xchg and decl ja stc fsubrp inc ja inc insb jmp (bad) (bad) decl pop xor sbb rcrl dec or popf and push pop push pop cwtl mov (bad) (bad) (bad) jg jo jmp mov repnz dec xchg mov ret xor sbb pop pop jmp pop outsl add jo lcall ja add mov mov mov ds (bad) call xor mov mov addr16 lock or cmp (bad) (bad) (bad) (bad) fidivl clc lea mov sub cmp stc cld test (bad) (bad) lcall push aaa imul inc cli adc (bad) cmc rcrb dec mov or sub lcall pushl jae adc out addr16 ds lds fidivr dec arpl bound (bad) xor lea addr16 aaa (bad) jg push cwtl and (bad) clc sub out xor push into sbb dec push inc dec mov fildll (bad) mov test pop sbb cmpl sub in in add sahf adc loop (bad) (bad) jg adc test loope loope fwait (bad) (bad) cmc in icebp hlt ficom dec ljmp pop call push jo roll out popa jg inc add lock (bad) (bad) jle and sbb mov pop clc out push jb in xchg mov inc xor clc push push push mov fdivp daa arpl (bad) (bad) fnstcw insb dec scas push and jp adc ja pop push in inc lods dec jmp (bad) (bad) (bad) fild lret mov int or rcl or mov (bad) (bad) pushl mov fs push adc inc sub push jno xchg and xchg mov (bad) inc jl lcall popa mov mov mov and ljmp dec xor es mov mov aad adcl mov or mov pop insb lods adc out inc scas mov mov imul mov pop (bad) lock sarb jno jg cmp adc (bad) (bad) ljmp sbb out pop or ss inc mov inc add pop inc xchg push sub pop call mov adc stos iret push mov outsl cld (bad) dec test (bad) ffree call lods iret and lcall ja add cld push ds lods pcmpgtb js adc jg pop test sbb stos cld mov mov clc mov sub popa aaa cwtl mov pop out jecxz scas pop insb cmpb xor lock addr16 cld (bad) (bad) (bad) dec and pop mov push or lret int mov (bad) (bad) sub or fildl push pop pop inc dec sub mov int dec (bad) fnstsw call cmp xchg push out rcr sti add loopne add loop xchg aaa jle clc push pop and out xchg dec xchg xor (bad) ljmp mov insl inc out negl enter pushf jl jecxz inc adc sub call andl dec out lcall pop mov xor in mov insb xchg aam add (bad) mov loopne mov xchg mov lahf test fnstsw fildl ljmp cltd jnp loope mov loopne (bad) pop sub xchg mov xor pop in pop cli mov (bad) push xchg jp insb aaa cld pushf inc jbe imul jb fs test repnz mov jno test orl add sub or (bad) (bad) pushl rorl add test sub mov std insl data16 dec rcrb adc jmp sahf dec push mov jecxz dec xchg fidivl jmp (bad) (bad) jg sahf cmp int3 or in or (bad) or sti inc (bad) outsb xchg repz lock (bad) (bad) inc sbb jo out ror mov sub rorb xchg out mov push push movsl subb dec push push pushf mull xchg mov mov jbe jle,pn jecxz pop clc inc incl jge test adcb js adc (bad) pushl fdivrs test (bad) popa jmp ret xchg inc push pop sub add fbld sbb inc ret lods imul push push and out or xor hlt pushl sbbl xlat adc sub sub out (bad) loopnew xchg (bad) (bad) call shrb addr16 popa rcll inc mov lahf or inc lea out mov add dec jg sbb lods outsb icebp pushl ja jne lcall (bad) (bad) mov fistpll hlt push pop and rcll sbb flds cmp (bad) (bad) (bad) (bad) inc (bad) negl test sub add xchg (bad) icebp xor lods dec shr mov pop std call in (bad) push call inc sbb (bad) (bad) ljmp rcll ds jecxz inc sbb hlt dec jns lock mov loope clc das mov aaa cld push insb movsl notl enter inc or test mov xor mov dec (bad) (bad) (bad) fildll jmp mov or int psllq xchg mov mov gs js mov jg int jo test cmp pop dec sbb inc adc lcall mov lahf imul clc out jae test or aad push (bad) pushl (bad) xor inc xchg ljmp (bad) fstpl sub pushf fisttpll into fcmovnu mov pop mov insl or daa (bad) (bad) (bad) (bad) mov pop cmp jne lea cwtl add imulb test (bad) lahf js ljmp decl nop fadds je das adc sbb mov int xor or push out or nop cld hlt idivl mov lock jbe sbb ja (bad) (bad) (bad) mov pushf dec test mov iret and ja ljmp or test sbb test or adc (bad) (bad) jg stc stos mov xchg add pop jmp in (bad) stos addr16 out jns mov mov out push stos xor jg ljmp add add jns jmp mov push push and (bad) data16 int3 nop mov add (bad) mov mov clc or arpl out loop pop mov lock (bad) pushl add mov (bad) in lods inc lahf and xchg cld (bad) (bad) mov sub or loope mov inc inc and jmp mov inc (bad) (bad) lcall mov aas popf jb adc jmp jge js jmp out inc jb into stos jne mov cld (bad) (bad) call adc pop inc mov mov xchg sbb dec stos faddl sub iret (bad) xor (bad) (bad) decl fsubrs rorb shll inc lret mov jae jae inc ljmp xchg push outsb test push inc das inc mov in ret pop scas add xchg stos sbb aaa cli (bad) (bad) stc push cs lcall shrl pop sub add (bad) (bad) decl sbb jl movsb icebp cmpsb xorl outsl push jp jge push shrl popa (bad) adc lods (bad) (bad) (bad) mov sbb iret jne push (bad) mov add xor jl mov pop or push scas adc je test fdivrl out call cmp mov sub sub sti sub dec jecxz push inc cmp or stos mov push int cmp jge mov adc das int3 movsl jo fcmovbe sbb incl cmp push loope leave arpl or push test je nop dec jnp add loopne (bad) xchg jl mov mov clc (bad) lcall fsubp push test sbb xchg cwtl or pop loop popf jp stos sub (bad) shlb xchg jg (bad) (bad) pop jbe lea mov lds or repz std jmp lods mov loope (bad) sub imul sbb out addb xlat cmp sub xor (bad) push sub loop pop imul inc ffree les xchg push mov pop fidivrl pushl mov xor or in cmp loopne push sbb jl sbb fbld or (bad) jno and jno push (bad) (bad) (bad) incl clc jmp lea mov repz imul (bad) hlt (bad) cmp pop (bad) (bad) (bad) lcall mov mov mov in outsb push cmp mov xchg pop mov (bad) (bad) (bad) jp adc inc imul test mov mov sbb outsb or icebp lcall or pushf int and dec and xchg push or arpl into xlat push mov (bad) (bad) (bad) jmp mov bound inc test mov std (bad) jp jge lahf out cmp sub jge aaa sti (bad) (bad) (bad) pushl aam xchg mov out and arpl (bad) mov xor and (bad) xchg mov cmp (bad) (bad) (bad) call and out jae,pn (bad) lcall fwait pop and pop lock mov mov (bad) jae jne lock aas xlat negb mov jmp cmpsl jns inc inc jp ret xlat ss orl add pop nop jg push in mov inc add xor loopne push shr fidiv into int3 add jo cmpsb insb (bad) (bad) (bad) jg fdivr jne dec inc (bad) cmc data16 fwait and pop push jl out out jge xchg (bad) lcall cld pop mov jp icebp pusha (bad) sti (bad) lret mov lret ret fsubrs scas sub inc rclb adc mov rolb jnp xchg pop xor aaa pop xlat cmpps pop and xchg rcrl (bad) fnstenv sbb aaa rolb (bad) (bad) mov popf add (bad) mov pusha scas (bad) les das daa mov pusha into in push aaa mov fwait sahf iret mov sbb cmp decl clc cmp mov pop mov pusha enter dec je (bad) (bad) ljmp dec jl mov roll pop shll dec in adcl dec inc (bad) (bad) jmp xor mov (bad) in mov (bad) imul sbb (bad) (bad) incl in cwtl sub adc or imul dec scas fwait mov aaa mov daa imul jbe (bad) (bad) decl pop jge cli inc fcomps cli (bad) or cli sbb mov sti loop in (bad) jecxz mov push pop sar mov and aaa cmpsb loopne (bad) notb repnz (bad) (bad) jg lods aas xor nop out jae mov (bad) mov sete mov jmp mov adc mov int3 jns xchg enter popa push sub adc mov jmp mov scas (bad) sub mov cmp sub mov xor movsb inc mov cmpsl (bad) push (bad) lock or xchg icebp mov mov (bad) jg repnz repnz dec xchg bound (bad) (bad) (bad) mov mov jl inc cmp or insl cmp sbb lea (bad) or sub cmc repz out lahf fdivr xchg dec je lret pop jmp aad sbb add mov cmc aaa in mov insb mov aaa incb mov test fadds stos test dec mov xor xchg mov shrl adc mov xchg ljmp lea jg (bad) ljmp mov (bad) xchg cmpsb cmp ja (bad) sub shr popf repz jmp outsb inc pop (bad) (bad) (bad) call mov popa adc (bad) js xchg lds jecxz jnp jnp repz jle into sarb call (bad) jmp (bad) pusha or mov lock idiv les mov imul cmp lret push push cmpsl push popfw and std mov xor outsl xchg ds cmc popa and dec insl (bad) incl lods add aam mov mov bound test push inc (bad) mov ret dec ret jg out mov jo (bad) cwtl pop (bad) jg inc sahf mov jne jle loopne add pop iret scas (bad) bnd aad cli (bad) push test scas jmp imul int jge jo or call push cmp sbb xchg test (bad) (bad) (bad) lcall mov push add aam or into inc cmp in pop std sub adc inc (bad) fcmovnb xchg ret and divl jle ljmp push pop sub inc (bad) in add or add dec push sahf hlt xor call (bad) ds int fdivs and sbb (bad) mov cwtl lcall and mov lock (bad) mov insl adc sahf jg std jg (bad) mov (bad) mov fnstcw out aaa pop cmp fwait (bad) push dec xchg mov push jnp call mov insl fstl sti jle gs mov (bad) adc (bad) (bad) (bad) call addr16 add scas std adc stc and xchg idiv mov ds sarb decl pop jg popf gs dec and gs subl mov (bad) sbb xchg xchg mov pop add inc int das hlt call adcl cltd ret mov jmp (bad) fcoml lock orb push out (bad) sbb das arpl lcall lcall mov jno fmuls add popf daa (bad) push outsb outsl jns (bad) fsts loopne jnp jg cld (bad) push ficompl cltd je aaa lds pop adc lahf lahf in jae (bad) mov scas or jmp xor mov mov push idivl xchg bound neg (bad) (bad) (bad) lcall cmp push mov in daa fdivr repz loopne mov xchg mov ffreep jae (bad) (bad) fnop dec or out adc js mov out ja imul rorb push (bad) inc out lods push jae cmc cmc pushf xlat fwait gs popf dec pop cmc iret in xchg push mov fwait mov or inc mul adc sbbl out xchg pop clc call mov pop mov fidivrl ljmp (bad) decl pop adc movsb inc ds inc cmc adc fwait lods mov loopne std inc addr16 cmp call sub sub add out push mov lds test dec push ss (bad) (bad) mov les or xor nop or cmp (bad) (bad) ljmp ret jg (bad) sub mov push cli incl popf outsb mov add mov or lcall cmp insb das adc cmc add push pushf or mov test or mov test inc mov adc adc or stc and xchg scas daa xchg testl inc dec (bad) jns cmp pushl (bad) jmp enter adc ja sub sub outsl mov mov lock (bad) fldenv inc movsl (bad) (bad) (bad) mov dec int bound adc lock xchg add or jmp xor mov jb pop mov iret in push enter push push jbe jg cs mov jl roll jno mov sbb inc outsb push ret pop test lods (bad) call popa and cmpsl xchg xchg out mov leave add (bad) int adc (bad) (bad) pushl push sbb pop sub test dec popf xchg xor int3 (bad) arpl call (bad) sub adc lea insb mov btc lods xchg mov (bad) lcall pushf ror jae jp sbb mov cs cmp and call leave push imul daa enter insl aam popf rorl lea sbb lods lods dec repnz insl popa data16 inc sti pop push mov je lret xor jmp cli xchg (bad) call sbb dec adc xchg ja fsts sbb (bad) sbb and outsl add nop add (bad) lcall sbb (bad) fimul fisub push push fwait push push dec (bad) mov insl ret cmpsl push sahf dec mov lcall sahf jae rcr mov adc (bad) iret int rcrl das lock lea push adc shlb fldt hlt cmpsb mov (bad) (bad) decl das push mov mov cwtl outsl sub rcr mov sbb pop push imul insb hlt push sub mov (bad) jg test inc mov frstor sub dec jb mov push dec pop (bad) fiaddl xor std imulb push jg xor ljmp push fsubr jl loop lret jno dec movsb pop adc push xchg cmc cmp (bad) (bad) (bad) jmp xor or repnz add inc fldt dec pop stos mov jecxz xchg push loope das cmp push dec mov ret push mov add mov jae (bad) mov out mov mov jecxz mov cmp fsubrl xchg movsb dec test lcall push jne pop int3 pop and xchg nop (bad) decl lock movsb cmp xor out inc pop imul (bad) pushl test inc sbb fidiv stos inc inc scas test pop and in inc outsl cld mov or or test add mov cmp aaa incb push jne pop in adc ja mov or scas (bad) mov or in inc pop das mov gs jge pop (bad) aas mov ficoml (bad) call test insb clc push sbb cmp push js,pn pop (bad) aad (bad) (bad) jg pop pop sbb insb pusha nop fiadd (bad) in test mov cld roll (bad) (bad) (bad) (bad) fnsave push insb inc dec mov fwait jl in dec (bad) mov in (bad) icebp jb xchg jl lods (bad) (bad) (bad) decl cmp mov sar fldcw cmp ljmp sbb and cltd test jne imul xor jg cmc es ljmp ja push fcoml (bad) (bad) ljmp mov mov or cmp pop push mov jnp int3 xchg push (bad) (bad) fisubr mov cmovb movsb inc pop popa cmpl in stos movb in pop push std cld xor call mov std cmovne outsb or es lods mov add inc (bad) sbb negb fnstsw das hlt jp jne (bad) xchg mov cli sub (bad) (bad) (bad) ljmp gs fs xor sub jnp push sub repnz in cmpb sarl and (bad) (bad) decl pop sbb repz jmp xchg (bad) in call stos rorb jb inc (bad) ljmp jmp dec mov lods fsub mov in dec imul pop or jnp jns adc (bad) fcmovne popf sbb mov loop jb scas mov (bad) (bad) (bad) pushl jmp dec lret dec movsb ljmpw mov or std inc (bad) fldcw cmp frstor leave fiadd push out aad add enter (bad) (bad) jg cmc pop xor loop push sbb xchg or (bad) in push adc lock (bad) cmp mov movsb fs add stos adc jns aas dec (bad) ljmp cli cvtdq2ps sti dec mov (bad) out dec cwtl push (bad) (bad) (bad) (bad) (bad) cmp lea test ja xchg or cmp mov jb pop push mov out int incl pop jb cmp int3 mov cmp pop mov or (bad) mov dec lock jle or push pop lret push fnstcw ljmp hlt add inc andb xchg mov fnstcw (bad) jmp mov ret jbe mov fsub xor jg (bad) cli icebp mov dec lds adc daa rep push orb pop (bad) popf pcmpgtw xlat or leave andb imul hlt jbe adcl xchg (bad) dec jmp iret cld sbb sbb mov mov es stc or sbb (bad) (bad) incl iret (bad) push cltd dec sbb fisttpl addr16 mov (bad) or std lea inc mov xor out rol dec (bad) (bad) mov jge into pop adc add jmp (bad) jne mov imul mov sub push (bad) ljmp mov (bad) jae sti push cltd jns fwait dec sub das (bad) mov gs pop jns scas scas mov sarb add (bad) aaa cmp and xchg pop pop (bad) (bad) (bad) jmp or xchg movsb pop dec imul int or pop ret fnstsw cld sbb lock das lock pop bound nop inc outsb clc clc (bad) decl movb rorb (bad) arpl and imul fild pop or data16 add fistpll push gs mov mov cli (bad) jmp dec cli jge add push and inc jne sbb push (bad) (bad) (bad) lcall push jno mov sbb sahf sub or mov movsb int (bad) mov (bad) (bad) (bad) ljmp and in pop call or push test fwait xor (bad) push pop aam adc cmp out gs mov iret dec fdivr ljmp jo,pt in jg loopne mov mov add cmp adc dec inc icebp mov stc push das movsl loopne shrb (bad) pushl mov mov xchg je mov fnsave push movsl (bad) lcall or mov mov outsb cli (bad) mov (bad) (bad) (bad) incl sub xor push cld in sub in mov jmp lcall jg ljmp adc and pop mov (bad) (bad) dec and icebp mov dec push (bad) ljmp xor jne es xchg adc int outsl cld das cmc mov add (bad) cli mov lea call cmp test call das dec lods sub cmpsb xor lods ret (bad) (bad) inc sub lahf ret mov ret push in daa jnp (bad) call rcr (bad) mov loopne dec mov sti out fisubl sub repnz cwtl mov mov adc mov imul cld call ja outsb mov jp daa dec dec shlb addr16 test xlat clc (bad) jg lock dec cmc push sbb cmp ja lock add push add mov movaps mov cmpsb into sar sbb add movsb xor test cmp (bad) jg (bad) fstl or add pop add inc repz loopne fcoml call test lcall lods (bad) xchg and inc cmp xchg aam xor pop loopne (bad) aas (bad) dec sbb lods data16 ljmp sbb out out test (bad) (bad) (bad) mov scas in lods xor lcall adc scas sbb pusha add (bad) fist clc incl sahf and out sarl incl push imul (bad) in rcll or int mov das mov or mov mov jp shrb in mov (bad) incl lea popf mov add inc cmpsl iret ret out jbe xchg adc add (bad) (bad) mov sbb adc dec xchg inc pop jbe aaa (bad) enter clc and mov in jae es ja pop insb movsl (bad) out jg lcall dec jne insl scas cmp and jecxz test insb loope jnp sub fwait (bad) mov pop repz xor push jae (bad) decl sub (bad) (bad) incl mov push jnp sbb cs enter es insb movsb sbb push sbb ss (bad) (bad) (bad) out test pushf call push into test into nop push enter push mov mov (bad) (bad) (bad) decl shrb les xor bound ret (bad) or divl ljmp aad aaa fidivr jns ja mov bound (bad) (bad) lcall adc push mov or scas clc pushf jb fbstp ret aad (bad) (bad) (bad) (bad) jl std push punpckldq (bad) sub in mov push cmp xchg call (bad) jmp pop orl add jne (bad) jbe ror mov jo fsubr (bad) (bad) call sahf insl adcl sbb aam mov adc cld (bad) (bad) (bad) fbld cs sub cmp aad push sbb ret xchg dec outsl jl cmpsb push test or lea inc fild nop lahf cmpsl (bad) push mov mov int3 out sub dec lret fisttpll mulb cld pushf gs mov imul clc mov outsl inc push push daa stc pusha inc push scas mov jmp lods jg pop arpl loope test jge nop ja notb stos out adc (bad) (bad) decl dec pop lahf jle in mov movsl and fs cmp scas jnp inc mov pushl sub pop mov inc xchg fbld loop jg ss sub add stos adc (bad) (bad) fild ljmp dec mov jno iret icebp dec mov dec cmp das push mov adc and xor pop ja nop push or sbb incl xor sbb ss cmp les icebp mov push lods popa jg sahf push mov aam (bad) (bad) jg pop or jecxz xchg add mov xor jnp imul fbld js (bad) je sub fstpl inc jnp push clc push shr or xchg jo lret mov mov call pop fs dec jle mov or icebp ljmp push adc data16 mov push stc (bad) push pop sbb decl cmp cltd lret leave dec pop or jl (bad) incl in sar cwtl je int out pop out dec pushf cmp fcomp clc (bad) (bad) frstor cmp cmp sahf popf test jmp add neg mov adc (bad) incl dec mov pusha push add push sahf mulb mov (bad) pop popf or lea cmp or push clc adc add sahf mov cmp sahf pop sub fcomp pusha mov xor xchg test xor fwait repnz (bad) jnp bound push add mov ljmp mov cmp in mov dec jno movsb adc clc (bad) call jb sub (bad) mov icebp (bad) and xchg (bad) leave fwait or negl (bad) (bad) jmp divb call cmp dec push idivl stos cmp mov lret (bad) (bad) ljmp inc subb aaa inc and xchg (bad) mov or (bad) (bad) mov add decb push push outsb frstpm(287 or nop movsb mov das outsl (bad) (bad) (bad) call jno and dec test test repnz inc xchg and int3 inc into mull in loope (bad) and outsl icebp (bad) mov stos aas hlt data16 dec add fstps (bad) jg jnp mov pop sub cli iret test xor and call cmc jbe jl jecxz (bad) jmp push sub in bound lret mov sbb pop jo mov lcall mov sti (bad) mov in jae lcall imul sahf jo mov inc lods dec in call sub js jnp and add mov int jmp xlat stos push (bad) int3 sub and xor in stos or add leave mov sbb incl pop leave pop outsb add jns or cwtl inc aaa inc dec xor sub (bad) (bad) (bad) dec test push repz out inc (bad) dec sbb lock push add (bad) or aad icebp fisttp adc test mov (bad) (bad) (bad) jl or sub add loopne or sahf cmp cwtl jmp mov lea clc and push and xchg (bad) (bad) (bad) (bad) cli aam xchg mov idivb scas add sbb frstor icebp mov push cmp xor xchg (bad) (bad) (bad) decl pop popa rolb cld xchg cmp sub call outsl xchg ss cli (bad) jg push mov ds stc push idivl inc fldl fcos (bad) pushl jae sbb mov cltd cmp mov push pop fwait sahf cwtl or loopne mov inc or sti pushf push ja lods in test stos dec decl mov mov dec lcall sbb push (bad) (bad) (bad) lcall out adc lods clc adc cmp loop addr16 (bad) cmp and mov out pushf arpl ljmp cmc lcall inc xor nop mov inc or data16 mov call xor aad jl xlat inc ret lods pop ja (bad) (bad) fnop xchg aaa mov lea js xor je add push (bad) dec jle inc jg jge mov call pop outsb in xchg ljmp jnp pop push add sub outsl dec stos jo (bad) (bad) jmp outsb sti pop clts sbb (bad) jno jle cmp lea (bad) aam mov (bad) add (bad) mov call push jnp cmp iret rcr jmp fmull stc cmp push xchg enter out movsb xchg add sub je sbb cmp sbb test ljmp ret test fst adc pop add aaa (bad) (bad) fcmovb pop pop iret movl pop loop jg test lods (bad) jg adc and imulb fiaddl out jge (bad) decl scas aad or stc pop cs xchg loop sbb mov and xorl or (bad) jmp in or out jo add xlat mov pushf iret clc (bad) (bad) incl push mov data16 and adc les mov mov adc mov fstps nop test pop je xchg stos ljmp cld loope sbb in js loope inc in lret lcall (bad) jg insl xor push test pop fimul ret jno nop xor std (bad) out jne sub jo ret push xchg fildll inc (bad) sbb mov call (bad) cmp xchg idivl push addr16 (bad) and les (bad) (bad) ljmp xchg mov idiv push cld loop jge call test push sub (bad) (bad) call (bad) clc sbb in cli pop jnp push mov std (bad) add xorl mov imul dec movl mov cltd movsl push push mov (bad) call movsl mov sub adc or xchg arpl jl sbb pop cld (bad) (bad) (bad) faddp cld lods pop and int3 lret adc push mov push fwait outsl les dec (bad) (bad) decl ss test bound pop mov scas rcll out jo repnz (bad) (bad) call out aam jl pop data16 pop push adc lahf inc lahf mov lcall or cltd out dec mov mov jno adc loop sbb push jmp mov xchg cmp decl fisttp les add inc aad iret jmp push lcall (bad) push pusha (bad) or flds mov pop (bad) (bad) call (bad) mov repz daa jae lahf add test or pop pop imull clc (bad) cld and lods jecxz mov mov ror stc mul jle cmp (bad) (bad) dec call xorb loopne call inc sbb cmc pop ljmp xchg (bad) sbb sub or sub (bad) mov (bad) mov inc enter mov hlt push (bad) (bad) jg cli mov lods push push mov mov cld pushl dec or sarb (bad) (bad) ljmp pop xor xor add adc fs fs mov pop cmp rcll jg (bad) js xor clc inc jmp jmp clc shr call int3 icebp mov or jno jecxz lods (bad) (bad) (bad) jg imul mov mov loop iret cmp jl mov mov enter inc inc add outsb inc cmp subps test arpl ja adc sbb rorb and xchg outsl push lret xor sbb (bad) (bad) (bad) mov cmp fsubr int3 mov rcrb ja cld xor js fnop insl icebp (bad) pushl loopne or inc add or adc mov test (bad) (bad) mov jno das and test mov movsb inc dec lock xchg inc cmpsb mov (bad) fstpt push xor jge shr stos jle fdivl dec ss (bad) clc lcall pop mov orl arpl ret lock (bad) (bad) (bad) pusha jo loop lods xor push insl ficom push outsb xor (bad) (bad) fisttp hlt sub jp insl xor cwtl stos cltd push xchg (bad) (bad) incl je mov jb inc ds sub setae int (bad) fcomps shr (bad) (bad) decl ss push jae aam mov mov inc cmp cwtl insb scas in or adc jmp les cmpsl jo stos rclb lock pushl std sbb sub rcl bound ss movsl or outsl adc out push lea sub cmp inc (bad) incb mov (bad) (bad) call fwait xchg js mov mov or jae jmp mov std (bad) inc inc test enter push jmp test (bad) mov cmp imulb aam aam cli and insl dec pop sbb jp out dec inc mov (bad) das (bad) incl xor mov inc push in mov cld ja (bad) (bad) (bad) push in sub inc xchg mov arpl in cmc mov xchg adc in mov daa adc (bad) test mov sbb push add sbb (bad) (bad) (bad) pushl pusha add pusha sbb cwtl cmpl pushf out pop sbb add xlat and decl idivl fs xor in add cwtl out and adc loopne and adc in or (bad) out les idivl punpckhdq lret aaa mov (bad) jg xor stos cmc dec push mov xor pop cli sbb fstps ljmp xor pop push dec xor mov mov int3 mov sub inc loopne (bad) (bad) jg and xchg push scas lods int sub adc pop ljmp idiv daa pop cli loopne sbb roll out imul (bad) fcomps mov test (bad) jbe stc jno push (bad) (bad) (bad) call jno dec out popf push cmp inc cmpsl mov sarl push xor mov mov (bad) cmpsb enter imul (bad) repnz mov (bad) outsl (bad) jmp push or add out repnz scas inc mov push aad add lods (bad) incl call insl and push test sahf inc or xchg (bad) fstpt pop imul push (bad) mov pushf flds mov jmp mov out sti sbb or int pop mov dec cld jg mov jb mov mov fstpl mov aam incl ret or and (bad) movsl add sbb (bad) (bad) in decb and pop pop mov rorb (bad) popf fsubl stos ja (bad) (bad) (bad) mov imul xchg popa sti test and xor xor jle pop (bad) outsl pop iret stos (bad) (bad) push inc rclb pusha lret mov jl mov dec daa dec dec and add mov push in imul adc jmp xor ret call cwtl jo arpl adc cmp mov (bad) (bad) decl in cmp inc enter mov and clc xchg scas mov lcall jae loopne xchg and test mov fadds fwait dec es outsl pop xchg repnz test ja pop hlt dec mov (bad) mov jmp lods add je mov jmp loopne mov clc push pop clc inc inc inc push addr16 call and sar xchg mov mov arpl inc fwait mov (bad) sbb out sbb jmp (bad) (bad) fcoms xchg fsub bound or jnp call loop cmp mul push and es repnz lcall std jge mov js pop inc push stos dec cmp xchg mov (bad) (bad) lcall push xchg stos mov mov iret adc lods leave daa clc ljmp inc aad test ret ret leave (bad) aas clc js dec stc xchg xor cmp mov lahf xchg jl push rcll pop push pop push xor jecxz or jl (bad) ljmp mov pop cwtl mov xchg mov jg fcmovne xlat daa test (bad) ljmp fmull flds pushf addr16 jns scas pop fsubrl sub clc es (bad) jmp xchg aas movl lahf xlat bound cmc in sub mov test mov enter sub imul mov jo push mov clc call sub hlt negb mov mov decl (bad) jne add pop lcall clc add popf mov mov sbb outsl sbb and mov call loopne data16 iret fildl pop adc sbb leave xchg cmp xchg js push sub aad cld repz ljmp lds loopne clc mov dec fist xor (bad) (bad) call push dec cmp (bad) xchg sarl cmp ret and repz (bad) jg mov jns in repz lods (bad) incl sar push (bad) and push add and add repz dec int and mov repz je inc mov loop std ljmp std sub stos mov cmp add shrb out (bad) (bad) lcall fldcw in inc fwait adc out popa jne mov fnop call cld aam sub mov cmp loope shlb xorl aaa mov jo test std jno add outsl lock mov sbb (bad) push dec std flds jle sub jg (bad) decl pop or ret and mov (bad) insl mov pop inc icebp jno jmp (bad) mov jno mov dec or xor mov mov pushf aas jb push in xchg cmp jg pushl mov xchg in ss adc and repnz push fnstsw pop out push (bad) into (bad) (bad) (bad) (bad) ljmp xor pop jns push ja adc sbb jno loope or outsl mov (bad) aas aas dec (bad) fdivrp inc mov xor inc (bad) mov test call push mulb push push je push lea insl xchg shr jmp pop roll std (bad) (bad) decl add push mov out xchg pop lcall into mov xchg inc test in in inc ret mov mov xor addr16 imul xchg mov add inc mov push idiv pop clc (bad) call cld push repz pop pop jbe pop inc ds clc (bad) incl pop cmp xchg ja fbld clc (bad) out pop enter jp jb fistpl std mov jl out les subl jmp call pop pop ljmp xor cmp stos out lahf adc add cmova (bad) (bad) (bad) cld sub push daa cld pop clc int inc fwait das cld pop aad cmc jne xchg push dec push dec mov incl movzbl (bad) insl mov adc pop (bad) xchg dec outsl outsl std (bad) jge pop cmp push scas jge fcomip mov (bad) (bad) (bad) pushl icebp popl out adc push outsl pop inc aad fsubrp test xor mov call call not push sub outsb xchg push out jne int or xor idiv cmpsb lret jl mov scas frstor bound jl (bad) cmp les pop (bad) bound (bad) test sub push pop into xchg decl fcmovu xchg test dec cmpsb and div sbb outsl mov ljmp bound dec inc mov mov sub xchg lahf sar or push in les jmp inc sbb popa adc jg decl sub popf js sub mov dec adc pushf jo or mov jno jg sub jg or fnsave std jb sub (bad) inc mov push out stc cwtl push (bad) xor dec add sbb lock mov and inc (bad) (bad) (bad) dec dec pop mov ja mov cmpsl movsb jo into (bad) dec sarb clc outsl mov xor pop incb or and jl push (bad) mov daa pop (bad) push pushl shlb xchg pop jnp icebp (bad) iret (bad) (bad) (bad) incl in insl int add stc insb push scas es xchg test aad pop sbb push nop enter movups (bad) call cli clc add jbe xchg mov je fwait cli divb jl xchg decl in or sahf insl push jecxz sub xlat imul mov clc dec dec add and cltd mov cmpl fimull aad mov insb lahf xchg push mov (bad) jmp fcomp sub hlt mov adc (bad) sbb (bad) icebp dec shrl orl and fs shll dec popf inc mov jnp add mov mov (bad) (bad) (bad) (bad) push sbb xor out and adc inc (bad) adc mov std call xchg idivb fidiv scas outsb pop lcall mov rclb mov int xchg decb sub or mov (bad) (bad) (bad) jmp dec push popf cmpsb hlt popa sub pop pop push xchg push sbb and daa pop lea fucomip dec push (bad) cmp popa call clc xor mov scas push (bad) lcall cld mov out arpl test dec (bad) pop and out mov cmpb sub shr mov xchg push xchg xchg xchg icebp (bad) lcall mov vpsubb adc inc add mov call outsl aad push cmp add imul mov (bad) (bad) (bad) (bad) js aad or mov mov sbb movsb lock inc dec or xor fisubr jns (bad) (bad) (bad) call lods mov adc insl test jns and mov dec (bad) (bad) (bad) (bad) inc sbb push cmpl mov fsts imul (bad) pop adc jp ret dec insl cld push push xor mov pop pop push or lea lcall xchg incb insl (bad) sub stos adc inc mov push inc pushf hlt jo adc jl dec sar ret lock call or pop sbb jns sbb das lret or or cmpsl add push insb ljmp cmp lret hlt xchg in xor add add fs and xchg or xchg pop sub ljmp push fmuls fdiv xchg les addr16 mov jb cmp mov cmpsl jmp inc sarb sub push das hlt (bad) pushl je,pt incl push cmp inc xchg popf sarb test cmc inc mov and cld pop cmpsl mov popf inc sti mov outsl and test leave adc insb push pushf xor or mov lea std (bad) (bad) fidivr add repz xchg cld or mov out test (bad) addr16 and (bad) (bad) (bad) ljmp mov mov roll sbb lods (bad) mov jge aas jge or ljmp push in sub in mov mov or mov aam or cs rolb and mov add push sahf jl and pop cli xchg pop and sub mov sub (bad) cld (bad) (bad) jg jno mov loop cs inc mov addr16 fadd xor fwait insl into mov mov aas sub fnstcw adc int and sbb movsl xchg inc cmpl (bad) (bad) push sahf adc outsl repnz cltd jae outsb dec cmp shll adc (bad) (bad) (bad) ljmp adc dec aad or xchg ja xchg cwtl mov inc jge aam daa pusha movl shll in cmp clc fdiv pop adc pop pop sar xchg (bad) jecxz pop movsl inc cmp (bad) (bad) incl insb mov pop lahf fwait push cmp pop rcll mov jno movsb cmc insb addr16 aaa cli mov pop aam pop fsubrl mov loope (bad) (bad) inc (bad) outsb add xchg clc fs mov call insb enter icebp sub (bad) mov pop enter (bad) mov in daa pop in flds lock sbb fnstsw push mov (bad) movsl jge jno aad ljmp lods add cli sub cmp jg orl popf mov cmp xlat push das pop cld fistp shl inc scas rorb pushl pop mov push jmp pop pusha add cmp jno pushf fwait shlb test int rclb fldenv decl hlt lcall mov stc mov and mov test aad sbb repz xchg mull loop (bad) ljmp xorl or jmp sbb jecxz mov (bad) aaa or frstor jnp cmp clc (bad) call adc push mov mov cmpsb fidivl dec lea (bad) call popf es push jnp cmp push mov ljmp cmpsl movsl (bad) addr16 jecxz mov push add lret fistp popa xor das xor push or cmp (bad) xor jg jg pusha jbe sbb fnstcw orl les lds cmc add je das xchg scas ljmp sub cmpsb mov leave cmp stos sarl cli lods (bad) lcall fxch inc dec and sub adc dec cld mov push test dec sbb lcall out loop loopne xor cmp (bad) cmp in in aas add (bad) (bad) pop jmp cmp pop jl xor (bad) (bad) pushl mov pop divl pushf cmp pop dec cmp inc lock inc out sub (bad) (bad) (bad) fsubrl (bad) mov aam sub dec loop cmp mov jae jnp iret loop push push test xor adc mov (bad) (bad) (bad) incl mov ja data16 mov (bad) imul inc movsb mov add add push call adc lea dec ja imulb mov push sbb mov (bad) incl fucomip mov pop inc scas jbe dec and pop push pop push push test cmpsb sahf decl push into aam sub aaa jns std add xchg subl or jns or dec jne jle out (bad) fldt xchg sbb cld loop fdivrs adc rclb mov push call andl sbb cmpsl jbe out lea call jg pushl popf push aaa xchg testl dec pop cwtl repz ret inc mov adc ljmp mov in (bad) sub cmpsl xor mov sarb scas jnp or jge push jb dec cld incl cwtl adc jg mov or rclb inc jecxz xor jb cmpb pop int lock les cmp inc mov sbb dec scas pop cmp mov call out fsubrs add jmp das (bad) loopne cli push out (bad) (bad) decl icebp stc add out or dec pop adc test dec (bad) leave inc sbb aam jae daa dec insb dec xchg (bad) (bad) (bad) ljmp aam and xorl push (bad) jle aad scas jecxz mov adc imul (bad) decl lods and pop aam cli scas out push insb cmp mov je in jnp ds push pop push icebp (bad) (bad) call lret pop add (bad) lods pop int dec aaa pop std movsb (bad) fnstsw outsl not aas jp mov pop int cmp jg cltd xchg (bad) (bad) (bad) call scas dec cmp sub out outsl out inc cmpsl add sub add cs stos pop inc jno ret sub push xor out test fcompl aas jg (bad) ljmp int3 outsl (bad) pop cmpb push repz inc pop pushf movsl loopne outsl movsl (bad) (bad) jmp (bad) cmpsb or loopne xchg gs add (bad) jns shrl mov mov pop xchg leave xchg test sub fmuls lcall test cmpsl test jae out push dec cmpsb (bad) popa jg (bad) (bad) fbld and lods ds or fisubr add add and (bad) jmp pop out mov mov sub jp mov stos and aaa mov sti pop scas and lret add outsl xlat mov mov bound (bad) (bad) (bad) decl lahf in das mov dec stc and mov mov es (bad) pop cld (bad) jmp es (bad) sbb outsl pop pop int3 push gs sarb adc (bad) (bad) (bad) pushl imul es aas stc sbb dec sub push outsl enter icebp cmp and movsb jns (bad) call (bad) out loope ret inc dec aam dec mov jl adc mov movsb jnp (bad) (bad) (bad) dec mov lods cmp mov cld stc adc (bad) out daa inc sub out test inc cmpsw jg xorl mov (bad) mov xchg je push jo (bad) (bad) (bad) jg imul clc sahf js lods lahf loope sti push movsl xchg fstl bound shl sbb pop clc incl fcoml jle negl adc cli sahf mov call pop cmpsb xchg mov pop sub daa addr16 das (bad) (bad) (bad) (bad) jns cmc scas fwait push mov xor or fs cmp hlt jno cmp mov (bad) (bad) call out xchg sarb ljmp push mov rcl adc pop jmp and push incl cli jmp mov dec je mov pop (bad) fdivrs cmc arpl xor push arpl push mov cwtl imul mov pop ss popf push ret call add icebp in (bad) fistl (bad) jp lods pop mov insb jno add mov das int3 (bad) (bad) (bad) pushl fnstenv testl bound mov fidiv push mov jmp mov loope add (bad) call sub fsubs lea or dec mov (bad) (bad) ljmp mov cwtl sbb outsl xor enter out sbbb mov mov (bad) pushl or inc rclb add pop adc clc ret or dec or hlt sar dec stc add sbb adc sbb pop mov push popf push xlat repnz pop xchg stos (bad) (bad) (bad) jg adc jo adc test out add punpckhdq out rorl xor push mov (bad) pushl sub mov inc shrl sub fcmovne pushf lds ljmp xchg push (bad) xchg add outsl sbb jae negb ss stos push push in ret pop pop jl pop jge jmp out popa in ja shll in xchg add incl repnz cmp jge (bad) (bad) xor stos (bad) (bad) (bad) decl frstor je ja xchg mov push lret dec mov adc lret loope xlat sbb jns mov xor cmp cmc inc clc ror push cmpsb fwait nop mov or ss int (bad) mov mov lret ss dec inc mov sbb xor outsl lock fisubl insl pop mov dec or mov (bad) (bad) (bad) (bad) cmp mov add push xchg rcrl (bad) inc sarb ds leave mov lcall aaa test mov cmp (bad) jmp sbb icebp adc pop fisubr push scas test mov rcll (bad) (bad) incl jo adc push outsl fsubs out cltd pop in dec mov (bad) stc popf test pop ljmp icebp outsl cmc rcll repz or cmp (bad) (bad) or insb lods cli aam (bad) ljmp sub and add sub mov cmpsb movsl icebp mov ljmp cld out mov push fildll add cmpl (bad) (bad) (bad) (bad) mov lret sbb add into xchg hlt pop inc mov mov pop lods mov das xchg (bad) (bad) dec pop or jbe xchg je inc pop add popa mov mov jno repz mov (bad) jg (bad) je hlt dec xor sbb sbb out stc int3 cmp loop outsb adc jmp (bad) test cwtl mov stos inc movsl pusha bound inc data16 (bad) call les test cwtl mov gs mov xor les sti sbb or scas js add xor mov mov lcall dec rcll fs jg inc mov fnstenv pushf jg addr16 outsl jo mov lea enter pop pop mov jle jp adc outsb xor adc mov mov or or inc mov int3 lods outsb lea sub (bad) decl push lea inc xor push push push lds imul decb test adc (bad) or (bad) (bad) (bad) xchg lods add xchg insl jp stos add insl lea jne outsb cmp lods (bad) (bad) (bad) (bad) out std hlt cmp lods call cltd push (bad) mov mov sahf push scas jae call idiv (bad) mov insl fildl (bad) fbstp inc fstp int3 jg push cmp add cld xor (bad) lcall sub es and in (bad) sti in ds pop test mov (bad) (bad) ljmp adc and mov lds mov add ds enter ficom sbb out scas pop popf xchg sbb ljmp inc xchg stc pop push iret rsqrtps inc push std sub sbb imul int xor jno into jge outsl xorl dec push (bad) decl das mov roll clc das mov lret cmc add push (bad) (bad) (bad) decl fdivrs pop test xlat or lret sbb push aad jecxz fwait test clc fdivrl (bad) (bad) (bad) (bad) out lcall push out jl insl scas repz rcrl jns scas cmp and (bad) (bad) (bad) ljmp add jb xor pop rcr mov into or dec push sti dec mov pop dec std push (bad) cli ficoml and cmc mov hlt loope inc push (bad) jg and mov xor inc out pop mov scas fdivr (bad) and call sub inc ja add lcall inc fmul mov jne,pn xorl daa lahf bnd enter out cmpsl add sub movsl in push jg dec fwait stos (bad) sbb pop mov sub (bad) pushl out adc fucomip test xor addr16 pushl cli xchg push lds cld or ret nop jb mov dec pop mov lcall sbb in sub mov push mov ss push (bad) (bad) (bad) (bad) cmp sub pop mov xchg cmp xor cmp ljmp fwait popa cs xlat in sar push push adcl rclb cmpsl dec call jno rcr cli (bad) mov mov pushf fstpt mov jb repnz in jge (bad) (bad) jmp jmp icebp xchg or arpl aad (bad) jp jb sbb out lds stc pop push (bad) decl scas fisttpll gs jnp adc rcrb rcr jecxz scas xor add test lods mov ljmp scas ficompl out mov sbb push icebp pop lcall mov push cwtl stc les pop push fstpt out aaa sub les sub decl (bad) jmp add ss jno sub hlt jmp dec addr16 pop push leave push (bad) incl cmpsb dec sub imul xchg (bad) xlat jp test fwait xchg push out das icebp aaa cmp sbb add inc adc push xor mov test xchg lds inc push cli mov call into in stc lret movl cs out cwtl rcll jmp cmp inc out dec (bad) int inc cltd iret jmp (bad) (bad) pushl sbb movsl jl scas out dec cmpsl inc inc jns hlt push mov sub stos push stos fcmovne imul jns sbb aam mov or push mov cmpsl iret (bad) pushf pop push push mov pop (bad) ljmp lds inc shr or sub mov and jo dec jp nop or jg (bad) pushl sub fnstsw das in stc mov and cmpsl (bad) (bad) call sbb stc and in cmp jle (bad) cmpsl mov jmp int3 int push shlb lods fcoms mov (bad) inc sti lcall nop (bad) pop add pop mov stos out stos mov ljmp and mov addr16 divl subl (bad) (bad) push xchg loop lret add push xor adc add idivb cli in inc push inc lock sbb popa mov jnp sub std (bad) (bad) jg imul pushf pusha mov xchg mov cmp dec pop (bad) (bad) (bad) pushl mov mov inc out test lods pusha pop inc cmp cld lds out and jle ficom or incl (bad) cli (bad) jg scas aam in clc ror cwtl stos push mov (bad) (bad) (bad) jg pop ds rol enter push jae push xchg idiv (bad) (bad) call ljmp mov jo popf imul outsb inc jecxz mov das adc ljmp outsl xor jbe adc push mov lods and push hlt ja inc call decl mov cmpsb int push cs xor sbb lcall addr16 (bad) cmpsl int3 adc rcrb mov jmp sub xchg dec nop mov out lcall stc mov mov (bad) (bad) pushl mov les mov push xor mov imulb das add lods (bad) pushl pop shll mov sub (bad) ljmp loope pop ja fimul (bad) or sbb in push adc add cmp adcb xchg jbe dec call (bad) (bad) lcall test testb jle jp repnz inc (bad) or das mov (bad) decb call sahf ds and testb cmp jne repnz sub cld (bad) ljmp fist xchg jle jmp add jl loop or sti decl ja js mov mov mov out jge call adc je shrl stc xchg scas outsb stc pop mov pop addr16 loop arpl dec xlat add insb jno sub (bad) aam sub sub aas push std cmp xor sub int mov inc fildll push jo mov mov out xadd sbb fcmovnu ret rol iret mov mov cld pusha insl clc (bad) lcall pusha xchg jmp sub scas mov cld imul cs das lock dec jle pop jg pusha push xlat shrl outsl sub xchg test (bad) (bad) sti stc jo ja lods lret inc popf xlat jno stos mov outsl jne pop arpl push pop mov jne or movsb fdivl (bad) (bad) (bad) push aas scas cmp and push fadds xor or add test gs (bad) (bad) (bad) ljmp cmp cmpl test mov stos add sub mov movsl inc mov (bad) ficoml sub sarb fcomp mov dec cmc adc rcll pop ss (bad) fucomip in (bad) xor or (bad) iret hlt pop mov inc sahf sub cmpsl lock fnstsw cmp adc dec and inc adc mov adc mov repz jno add xchg add cmpsb mov lock fistpl loope mull mov adc (bad) decl inc jge mov jl test sbb inc push (bad) (bad) (bad) ljmp dec (bad) push push xchg or lret (bad) xor mov jns xchg lcall rorl mov jle add rcr sub lret cmp mov cld jb aad xor shll (bad) jg call xor add sbb data16 lret cltd jmp or and adc ljmp sub mov (bad) (bad) gs inc dec mov pop inc ror (bad) leave hlt iret lret and jle xchg fdivrp jmp inc pop push cmp lret js dec push std in fisubr test lea out lret xchg hlt in enter aam and jle mov or xchg lret cmpsb pop jecxz lahf or fildll and inc xchg mov mov push (bad) (bad) (bad) lcall or mov inc adc daa add (bad) pop push sub ja mov push lods pop sbb jbe xchg pop pop xlat xchg cmp mov push ds aad ljmp pop scas sbb gs inc sbb dec xchg ljmp sarb stc xchg pop (bad) leave jo mov lea das std ljmp sub pop and iret jb daa rclb (bad) (bad) (bad) decl daa mov mov (bad) ljmp mov jno scas test and (bad) (bad) call (bad) (bad) mov ss cld lods cmp cmpb push loopne xchg cmp inc divb add mov (bad) iret in lcall std decl imul aas fcoml cmp sbb xchg adc fadd jnp call aas mov fadds pop pop loop xlat pop dec xchg das sbb decl sub cmpsb and shr lods mov mov sbbb call roll and fsubrl movsl test int3 add lret cmp inc in shlb test and daa movsb stos lret jg (bad) jg fbstp jno loope or fmull push fnop xlat loope cmpsb pop push test ret pushl push out inc and scas push cmp pop and mov mov dec lcall mov (bad) lret or cmc fdivr add mov mov push shrb les inc call xchg jbe cmp push xchg iret xchg sahf mov std jp and lret sbb in dec aaa mov xchg xor xchg incl inc sub pop jne mov cmc lea pushf pop jbe jb mov aas cs (bad) or dec and pop xchg push and enter int3 xchg out call call pop xchg xchg cltd inc pop jo adc notl fs fidiv enter fwait loopne jb aad xlat xchg or outsb mov push call lcall xchg popf mov test test (bad) call mov sahf push push xchg daa pusha in push inc pop lds xchg mov cmp outsl icebp das hlt sarb mov xchg mov (bad) (bad) call mov das int3 or cmp cld jecxz sahf lea lret pushf push (bad) ljmp adc (bad) decl into pop or or (bad) cmp in sbb add jbe sub push incl jmp add add xor popf add mov xchg ds and decl pop mov cmp xlat in push aad stc lods sub pop shrb inc ljmp ret rcrb mov push or xchg scas fwait pop xchg decl sbb sahf mov xor div jge jns outsb sti in mov jmp mov out mov outsl jl xor pop (bad) in pusha cmp pop insl iret dec int3 push decl push stc imull push test loop lock (bad) inc clc (bad) dec jnp pop sbb inc mov pop cmp sti (bad) xchg sbb jb fs xor cwtl notb hlt and inc inc arpl call add pop lret xor das icebp dec lds leave sbb cmp lods aam (bad) (bad) decl mov in inc leave mov jmp xlat sbb clc adc push mov insb xchg jmp mov out jmp add mov mov popf pop ljmp adc (bad) (bad) ljmp dec xor mov movsb xor jl lret push mov je ds lcall or push pushl aam pusha mov test (bad) decl (bad) jo pop mov mov pop cld mov lock int push icebp and mov test mov das (bad) (bad) (bad) sbb stos test mov cmpsb jle mov and mov loop (bad) (bad) (bad) (bad) (bad) (bad) cld adc mov mov jno in dec ljmp jbe popa fwait arpl fcompl jge ljmp cli int bound pushl pop xchg dec into push into inc pop sub ljmp jle out ds (bad) lcall imul std mov mov je dec dec lea add (bad) (bad) (bad) std mov shrl mov pop lret push fldt pop ret movsb cmp cld pop jmp loop in cmpsl mov adc inc push ljmp movsl pushl inc xor mov pop jp push clc ljmp imul lock and movsl pop lods call adc inc or or fisttpl push lcall std decl mov mov and rorb mov (bad) jmp xchg inc fbstp mov mov ja adcl inc xchg clc ljmp xchg je or xchg cld das icebp jg pop ja dec out fdivrl dec push fwait push aaa repz (bad) call or mov push sub fnstcw rorl sub xchg pop loop pushl push add mov (bad) fsub es subb pusha dec shrl mov jecxz jb and daa stos dec cltd dec mov or push (bad) dec push clc and lcall sbb xchg (bad) (bad) (bad) call or xor xor (bad) cwtl mov into mov scas ljmp mov (bad) (bad) pushl push xchg sar add xchg adc sbb in movsb and mov jg test mov dec pushf push sti dec mov ljmp js lds add ffreep dec push cli push (bad) lcall or in popf mov jb enter dec in cmp aas std incl jle jmp ret xorl das lcall dec add sbb push push mov push (bad) cmc xor (bad) (bad) (bad) aas pop scas push adc aam adc lcall sahf mov mov aaa cld adc jg (bad) fisttpl sbb outsb in test mov in lret scas fwait stos (bad) ljmp addr16 sbb cli pop sub int cli (bad) cmpsb xor (bad) (bad) incl std movsb sbb mov rol frstor (bad) cmp lods add (bad) (bad) lcall in ret cmpsb fs (bad) lcall mov fs cltd push mov and pusha mov sti sbb mov in js dec mov dec mov (bad) call decl aam jmp popf jl push popa orl std inc mov xchg mov js jmp mov jbe mov (bad) incl mov push sub mov and cmpsb icebp inc and dec imul cli (bad) jge pop addr16 xchg mov inc add std sbb jb sub fwait or (bad) inc out repz jne divl mov cwtl pop fldt lea xor sbb (bad) (bad) jg popf mov pop inc xor cltd js xor jg dec movsl popf jo das cmc jmp outsl dec cli add xor mov imul adc fsubrp test jg sbb mov fbld gs idiv (bad) mov xchg imul cmpsl pop mulb sahf aas and add mov mul (bad) add ss insl pop pusha aad mov in ljmp stos adc xchg inc arpl mov sbb lcall (bad) push push scas mov scas cli sub (bad) and rcr cli dec or pop mov dec sub mov pop std sub pop push xchg mov aas lock in insl sub pop mul dec cld lcall adc jnp adc mov lret cmpsb std (bad) decl mov rorb push mov std cmp aaa lret cli (bad) ljmp jnp (bad) ss xor cltd pop aad cmpl dec pushf movsl xchg mov sub pushl out cmp adc mov or insb pop std inc lods (bad) (bad) (bad) fisttp clc in inc lret push cld fildl mov test repz (bad) lcall sub mov ret pop fcom mov mov das arpl xchg (bad) jg (bad) push scas mov mov ficomp pop (bad) shrb xchg insb mov jmp cld incl mov nop mov and sbb mov (bad) test (bad) jg mov popf inc or nop sbb or loope mov pushl loope mov jns insb mov orb imul stc pusha and int cmp mov fnop or push test mov (bad) jo adc (bad) incl xor xor stos leave into lret and test in mov (bad) ljmp vmread jb pop sbb (bad) pushl add (bad) aam or inc push or leave cmp cltd mov sbb mov incl jecxz ds rcl mov push mov ret xor push test (bad) (bad) mov cmp mov inc fidivrl inc aad jle or dec int (bad) jmp cmp jecxz xor lock sar mov lods fxam movsl outsb lock ret xchg xor leave sub addr16 push (bad) call fsubrs loope sbb lahf mov adcl ljmp mov scas add sub add hlt js insl lret mov and mov and ret lods mov sahf cpuid lret lds mov ljmp mov push and outsb jg xchg cli sbb and mov scas je (bad) (bad) jmp cmc (bad) xlat jmp jns xchg xor (bad) (bad) ljmp mov mov dec ljmp dec mov dec push jp xchg loopne mov jmp mov xor (bad) mov (bad) (bad) (bad) call aaa lods dec adc ss cltd scas nop cmc addr16 mov cmc jns or xlat mov (bad) call cs pushf xchg mov add in in or add dec mov mov loopne fucomip push cld xor mov jge div icebp fnstsw mov iret mov insl cmc pxor mov test pop mov (bad) jmp xchg iret adc pop mov (bad) pop inc adc lods leave jp sbb pop in sbb ljmp test leave xchg stc insl jmp (bad) (bad) call fsts addr16 inc sub cmp ret lret jns push out fcom stos (bad) (bad) jg sbb cmc mov fs rorl push sub xchg or push xchg hlt sub mov xor (bad) (bad) lcall xor pushf mov movsl call sub cmp (bad) decl sbb gs loope add and into es (bad) incl test sbb mov or cwtl lds cmp mov mov aam fldt sbb and aaa sbb (bad) sbb (bad) lcall scas adc or scas mov or divb or (bad) jg add pop xor aas rorb sbb sahf (bad) (bad) incl cmp sbb push hlt or aam insb push les fsubl mov jnp mov les imul fs cmp pop push stos ja fs mov (bad) (bad) (bad) (bad) mov (bad) repnz sub dec mov mov arpl iret cmp outsb cmp cmovbe (bad) fsubrl les push mov jl fs fstps xor (bad) (bad) call xor lret mov int xchg xchg int out popf dec add das std aaa clc out rclb (bad) mov push jnp cli jg lret sbbb adc (bad) in ljmp sub pop xor outsb cltd mov aam inc (bad) ljmp xchg fwait add and hlt clc out clc mov or sub mov lods clc negl int int3 hlt addr16 packssdw call cli cltd adc sahf add or lods adc mov icebp mov (bad) mov das inc xchg xor mov insl popa mov popa pusha outsl (bad) decl lcall adcb dec (bad) daa pop daa stc and add fisubrl jge (bad) (bad) call jl push dec inc pop insl sbb push dec xor das (bad) idivb imul mov sub (bad) (bad) lcall in xor test sbbb lock (bad) cmp jb aaa stos clc dec add aam test inc lcall cli ret test sahf stos stos arpl outsb rorb cltd or pop (bad) (bad) call (bad) and mov mov mov lock adc sbb jae ljmp mov enter adc dec add in xor outsb leave sbb (bad) (bad) incl push sbb rolb dec add cltd aad (bad) daa jne out movsb mov push sbb (bad) cmpsl fsts and dec xor inc test inc cmp out sbb xchg push shr mov lods mov lcall movsl and and jge pop icebp mov sub pop pop in (bad) sbb nop arpl in popa dec inc push rcl sysexit sub cmc icebp clc (bad) (bad) jmp enter es insl je push xchg xor mov xor lods arpl scas clc dec inc cmc xchg push pusha adc xchg (bad) decl out cmc fwait cmp add sub pushf cwtl xchg sbb movsb es das lock lahf aam lods fidiv jge xchg shl ss lea icebp pop data16 (bad) (bad) lcall push das cmp popf pop outsb jnp cmp add pop jmp mulb daa (bad) (bad) ljmp lret incb dec fs adc aam out inc call push iret fsubs insb xchg dec fmulp aas cmpsb mov int out lret xchg lcall (bad) decl push push cmp lock lret lret (bad) ja sarl jmp pushf inc pop les sub nop dec mov cwtl inc ret lcall and sub dec add add aam (bad) sub call push ss mov mov aad aaa adc shr stos sub (bad) cmc mov mov mov pop cwtl push movsb sub fisubrl mov cmp sub es jg fmull loopne mov mov decl call aam leave lds sar pushl nop repnz pop jne inc mov in fwait pop jmp sarb fnstsw aaa mov in pop loope outsl xchg or push cmp cmp popl (bad) xor hlt adc and outsl push aam js cmp movsl add xchg mov add stc mov bound insb mov pop cld call jo and xor enter xchg and iret stos cmp (bad) (bad) xor jae sbb jmp add lret jg push call xchg push std loopne xchg add sbb inc mov dec xor jge push sar (bad) decl adc loop or sub lods sub mov scas sti out push rolb paddusb adcl stc stc cmp scas push xor scas faddp fwait test in and pusha lods push cmp jno adc xchg jg ljmp imulb dec (bad) jge add scas mov jbe mov push mov jmp and das xchg adc add in (bad) (bad) ljmp pop sub test popa inc xchg xchg jno mov in sbb adc nop mov jg incl push aaa dec pusha loop xchg pop jbe fistpll rclb or (bad) (bad) ljmp rclb xlat jecxz adc vmaxsd xchg test test mov xchg sbb int push xchg cmpsb jl rcll std adc outsl push pop jg add popa sbb into notl cmp sbb adc add call aad in outsl (bad) in (bad) xchg mov jg aas mov cmp jae push subl dec popl jbe lcall push iret mov mov ss jmp jns aad or lahf enter ja (bad) (bad) (bad) jmp ljmp push xchg cmc lahf inc (bad) imull xchg dec jmp pop adc hlt xchg (bad) push incl fiaddl xchg pop xor fisubr aas pop gs call and jg mov fisubr and inc (bad) incl push insl jp cmp adc sbbl (bad) sbb lds (bad) lcall cli mov pop or cwtl (bad) fistl ss ror mov aam test cltd cltd add sub or sub pop inc les pop loopne incl rorl push dec outsl xor and mov imul xchg cmp (bad) pop cli mov enter xchg jne decl xor cld cmp jp pop aam aaa pop popf cmp (bad) fdivrs (bad) incl dec mov fcomps jbe std inc sub mov leave inc or imul lock fildll gs and sbb jle in sbb incl dec jo test cmp fwait jno lods inc adc (bad) (bad) (bad) jmp cmpsb sti leave das adc stc loopne clc add add sbb jmp outsl icebp das sahf pop insl mov stos pushl sub (bad) xchg fistl pop (bad) (bad) (bad) (bad) mov hlt xor sub xor loope sti or repz lds (bad) (bad) (bad) ljmp fisub js cmp cmp or test stos inc mov aas dec inc add mov mov repz mov nop xchg daa (bad) inc jmp fildll popf out and dec ret in outsb add sub xchg sub xor inc icebp mov jg (bad) (bad) jmp adc cs fdivr inc sarl stos or xchg cld imul fsubl mov or xchg ljmp idiv incl fwait sbb pushf jmp sbb (bad) jne es lret or in loope xchg cli (bad) incl ret lods jns xchg negb pop outsb xchg in mov (bad) mov pop or leave (bad) inc sar mov jns movsb icebp (bad) (bad) (bad) (bad) jp mov jno ficom fdivrs pop sub call jle inc push (bad) jg cmc mov lea xor in ret cmp (bad) decl fist fwait leave mov jmp (bad) xchg mov cli pop lret hlt arpl (bad) (bad) call xor push xchg mov ljmp adc fistl lret insl cld ss sti (bad) aaa clc (bad) mov xchg fistpll jbe mov loope test imul nop movsl lret enter (bad) dec (bad) (bad) ljmp es pop aaa (bad) cli mov jg icebp or push sbb stos sbb dec shlb (bad) mov dec xor inc std jecxz loop push ficomp inc repz xorl and xchg out and pop lret push xor or xor popf push add sub xchg sub or cli (bad) incl pop pop cmp out fisttp call or or add sbbb out mov das mov pop sbb pusha or mov mov (bad) (bad) cmp pop pusha jl dec fwait push mov adc jns mov mov sahf adc pushl mov negl xor in jmp pop (bad) lcall fiaddl arpl mov aas fild mov (bad) call loopne (bad) jns xor cmc mov outsl hlt sub pop push sbb cwtl pop (bad) ja loopne stos jns (bad) (bad) (bad) jl dec push loopne cs in inc scas cli pop stc imull pop add aas cs int repnz (bad) adc outsl mov int sahf (bad) xchg push inc sahf (bad) mov pop xor lret mov pushl pop loope cmp mov bnd inc hlt mov sub xchg (bad) stc dec repz ficomp in das mov pop out sub jns and mov int3 dec in inc aad mov cmp (bad) jl je jmp lret and xchg in incb jg push cs les sub mov add loop (bad) cmp jbe sbb xor add das bound das pop fsubrs (bad) adc sub jg repnz data16 pop mov dec pop in repz imul das cwtl (bad) jmp scas movsb sub cmp add out int inc mov cli mov icebp xchg cmp clc jp mov jecxz mov mov sub pop repnz incb mov rclb pop jmp inc sti or inc sub ret mov xchg push xor std rclb stos pushl add data16 xchg cmpsl or jl jl in jle (bad) inc out adc mov jns and bound push sub pop pop ljmp std xchg aad fildl sbb cli dec push popf sbb popf test lds (bad) push xchg pop loopne and insb push mov inc jns jbe push aad dec std adc xor sahf lea mov lcall nop inc and xor stc xchg outsl rcll mov jp ret fistpll push out sahf cwtl pop sti adc pop (bad) call xchg xorl jb mov rclb lods push push xor xor pop sub mov loope mov ja iret repz xor repz (bad) (bad) (bad) decl dec cmpsl adc adc xlat xor divl pop sbb dec rorl mov repz pushf cld stc xor ficompl nop push adc sahf fs (bad) decl imul add add out cmc (bad) test rcrb (bad) (bad) jmp pusha nop jecxz mov divl cmp sti pop mov (bad) (bad) lcall inc cli add out fcomps push cs add or (bad) (bad) in popf xor sbb loope leave jecxz cmp mov mov push sbb lods icebp in es add (bad) decl or jmp iret inc aad pop and insb xchg xor sar pop push icebp mov adc xchg dec add jp jl lahf adc lcall scas stc and fwait aas test sbb inc xchg xor outsl push xchg pop dec pusha popf mov (bad) (bad) (bad) call out dec repz inc addb int3 inc mov sub lods sti mov std (bad) (bad) decl or cmp mov push push mov mov mov cli (bad) ljmp inc (bad) insl jnp adc inc push sahf aam mov out mov mov (bad) lcall (bad) repnz mov fs pop mov inc test push sub addr16 loopne mov push (bad) xor pusha jecxz mov push aaa in mov cmc mov mov mov fistpl push not mov cmp fs jg mov (bad) (bad) jns add sbb popf fsubl ret and (bad) call pop xor je sbb xor stc das mov add cli inc jnp sbb sub pop mov daa stos pop lahf xlat mov clc adc xchg dec fs pop jae mov jg cli (bad) mov addb (bad) jg mov jbe and rcl jno add mov (bad) jg jg jle bound outsb dec sbb (bad) aaa (bad) jle outsl (bad) (bad) pushl fnop sbb repnz mov mov mov and mov addr16 and (bad) (bad) decl inc sub inc xchg jbe (bad) fcompl add lcall pop test (bad) incl add inc jmp mov mov scas pop fsubrl dec inc andl cli mov je push rcl inc jg movsl dec or (bad) or cmc (bad) mov nop lea (bad) arpl jmp sub xchg lret xor data16 idiv (bad) fbstp idivb lahf adc cmp cmp sbb imul ja loopne in jl jno inc fnstcw xor fdivp and add mov in adc inc iret mov jb jae inc mov jo dec (bad) pushl cmpsb jbe or dec fistl push mov shrl jle ljmp lock jl dec mov xor sub cmp sahf mov push fwait adc inc dec sub mov sbb (bad) (bad) (bad) jg insl mov cmp mov pop mov out or shll sbb ret (bad) decl cld or or shlb and jmp push rcr ljmp lock adc inc aam out ja enter and lea mov mov fwait mov mov and popf (bad) mov inc mov mov stos ljmp fucomip outsb mov pop shll or fisttp adc xor sbb pop sub outsl (bad) (bad) pushl ja xchg push (bad) mov aaa dec cmp sub dec cmc inc push cs push xchg test popf pop fwait pop or ja adcl add sti (bad) (bad) pushl nop and int3 lds fs sti lcall xchg (bad) insl xor and sbb addr16 xchg mov (bad) decl test fldenv xchg adc ss int3 call mov mov (bad) divb aas or cs cmc clc mov aam push (bad) (bad) call cmp lock fadds xor sbb lret cli loopne xor (bad) (bad) fistpll sub int adc scas dec dec into dec (bad) xor pusha or or call cli push dec add rcrb dec xor xchg inc xor data16 pushl call xchg or ljmp jecxz movsb (bad) (bad) (bad) incl stc out sti subb jmp rcrb sbb sbb xor addl xchg push mov adc std rcrl hlt mov cld mov out mov loop icebp xchg shlb mov ret iret add repz (bad) (bad) (bad) fild jne in add mov push jns push pop push test jge enter ds push mov (bad) cld sbb cltd sbb out roll jecxz xor insb inc (bad) (bad) (bad) call xchg in inc inc jmp push ret loopne dec lock inc cld mov xor jmp sub bound and jb xchg sbb xchg mov (bad) jg push (bad) dec push jecxz repz int3 dec scas lock aam inc inc mov incl fcmovnu (bad) and cmp aam adc cmp test lods sbb fistpll xchg pusha imul test adc rclb mov mov lcall jmp in test sahf pusha push mov xchg out xor fidivr stos fcomip sar in (bad) sbb xchg adc sti xchg cs cmpsl into fdivr inc jmp lock ret jae dec fdivl and jge mov mul (bad) (bad) jmp outsl popa jge clc bound fstpt out cli lcall mov in (bad) call out cmpsb dec adc push shrl xchg pop xor or lcall (bad) jo jp or xchg popa sub jg popf fadd jne adc (bad) jg ljmp mov divl push scas lea xlat fisttpl lahf dec pushl sbb mov mov (bad) push sahf jge pop push pushf or (bad) call jbe inc dec clc addr16 test loope imul scas leave xor sub cmp pop cli (bad) stc xor jp mov xchg imul adc int movsb fwait ret cmp mov fcoms xchg xor lods cmp popl xchg add push pop enter xchg xchg jae decl pop jp jne imul pop jge and cmc call in rcrb iret mov mov jo loope call mov into jb (bad) xlat mov or shlb cli (bad) out mov repz test cltd int and repnz (bad) push add jae adc adc lds adc dec (bad) dec (bad) int3 int3 lods mov ljmp icebp sbb jge subl sub push adc iret rolb ror inc cmp dec cmp (bad) adc cmpsb (bad) (bad) (bad) decl mov shlb mov loop pop push cmp stos cmpsl outsl (bad) (bad) (bad) jmp sub gs jno rorb aaa aas cltd dec push test jno xor insl loope dec pop pop mov les lds push push sub pop mov (bad) lcall adc out dec test mov jo stos inc negb ljmp jl outsl call mov movsl adc sbb or call sub lret xchg mov jl ret jnp (bad) cmp scas (bad) lcall mov ja adc add lods popa adc mov mov pop mov mov out (bad) orl inc add shrb mov inc (bad) lcall sahf adc loopw push loop mov lcall in (bad) (bad) jmp out xchg xchg scas and sahf (bad) dec scas xchg out push jbe push aam (bad) (bad) (bad) out push jnp inc adc push pop ficomp fs adc and ret adc fsts sub cmp incl push sahf pop lahf test xchg ret bound pushf in pop mulb (bad) (bad) jmp mov dec xchg and push and push push enter pusha pushf mov (bad) fucomip add and jo movsl jnp fisttpll loop in loopne loop (bad) (bad) (bad) decl mov lock pop inc pop pushf and test pop dec imul mov stos and (bad) (bad) (bad) pushl rcrl jmp lret ficom xchg ja mov (bad) xchg ret (bad) call xor mov cmpsl fwait mov mov add push addr16 mov rclb xor (bad) (bad) (bad) ljmp jmp cmp xchg ret popa inc sti or pushf mov or adc ja into aam repnz push imul push mov fpatan (bad) mov adc jne push sub or jns sbb jmp pop mov inc mov jge lret mov ljmp mov test stc add enter jl pushf mov sar cli add push and push popf sbb adc aas (bad) mov jne pop and (bad) cmpl push lea xchg incl loope insl addr16 data16 and fucomip (bad) jo sbb pop adc mov mov ret push push (bad) decl pushf mov out jp std inc inc dec cwtl adc test (bad) daa mov mov incl pop xchg dec (bad) lds call cmpsb in adc or jmp mov inc test xchg into aaa shr ret fwait bound shll sbb cmp add mov ss (bad) jg int3 cmpsl mov int sbb pop inc repnz bnd or (bad) jg cmp popf popf jb push cltd jae je mov xchg stc sub aaa insb or pop xchg jg (bad) (bad) ds jae adc sti inc ds jb push mov shrl adc add pop fwait (bad) (bad) call insb and sbb inc mov clc adc inc pop fldt xchg xor cltd adc adc cmpsb and cltd lcall cmpsl adc dec arpl frstor cmp push or les outsl inc dec lods push jbe mov mov sbb jns,pt and fildll or adc or (bad) (bad) lcall sub sub hlt jne fcomp cmp xchg pusha add adc pop loop dec (bad) cmp call les sahf mov inc sub xor push jo xor (bad) (bad) fucomip lret xor dec and aam scas sub pop test mov call mov dec mov and test xor (bad) and movb (bad) incl addr16 ret push cmc cs add dec (bad) aad inc mov incb mov xchg cmpsb ss inc decl cld and rcrl sbb jg imul incl adc xlat mov or movsb (bad) icebp aad mov dec hlt pop rdtsc add cs adc pop jmp sub (bad) mov pop in les js jns pushf idiv das lock jno jno call push cmp in in jle (bad) (bad) call (bad) xchg inc xor aam call (bad) mov mov mov adc push (bad) das cmp or in int3 cltd in jb movsb (bad) (bad) (bad) pushl test test fwait imul stos negl mov inc stc ret cmp push (bad) (bad) (bad) incl pushf adc les (bad) mov inc cs fidivr dec cmp dec in out sub dec incl jbe bound rcrl dec cwtl test jle lcall mov test sbbb loop outsl icebp (bad) decl sub shll mov push cltd (bad) icebp test (bad) (bad) (bad) (bad) inc jb sbb shlb shl popa pop mov sbb lds add (bad) (bad) (bad) decl mov mov mov ds jbe jne ss pop (bad) ret xorl aaa popa test into or std mov cmc mov hlt nop call imul test lock out or adc inc push pop das sub test cmp jmp decl das test insb push shlb ljmp mov das loop test dec jl call push mov mov out pop rol mov lea mov flds cld inc (bad) call jmp cli jno and ror adc cwtl push je sbb call mov pop mov sbb cmp mov pusha nop pop or rcll mov bsf push repnz sub std (bad) mov loope fdivrs xchg out clc inc pop cwtl jl mov (bad) (bad) ljmp inc mov fistp dec xor fwait jbe sbb dec jnp adc in or inc test ljmp (bad) xchg je daa adc mov lahf dec jnp lret js inc (bad) fucomip jmp jg mov sbb xor or or mov dec std dec dec insl mov daa es sub bound and cli push pop std das icebp (bad) mov es cmpsb je and pop cmp mov std (bad) (bad) mov and dec dec daa dec (bad) cltd es lds daa jecxz and sub push rolb push or (bad) popa fwait jge jg call lret loop and neg (bad) in inc jo xchg mov decl pop dec loope in aad call lgs sbb mov or or lods ljmp inc mov add ret lock mov (bad) jg scas inc adc sbb or pop arpl dec inc push pop jecxz jne sbb add outsl jl pop (bad) pextrw stc imul sbb dec loop (bad) pushl and pop xor jge cmp ljmp (bad) (bad) adc push in leave jecxz jmp push loopne add scas push rclb fimul cld movsl loope imul cmp arpl xor xchg lds adc cltd jmp aas push (bad) (bad) (bad) cli jo aaa cwtl scas cwtl or push mov mov add or mov dec or enter sbb fcomip add jg test lahf iret ror mov (bad) (bad) mov int3 jge (bad) in or sub cmc cwtl je pusha call test rcll js or std jmp movsl cwtl sub (bad) ljmp jl inc aas mov int cmc mov jo cmp jb fdivl jge,pt pusha sti or sahf cmp call (bad) fstpl sub and into or add pop (bad) pop (bad) jg jg mov lret popf fdivs sar stos imul (bad) (bad) ljmp dec pop cld movsw dec pop aam xchg cmp shrb mov sub jnp (bad) push rorb test mov dec adc leave mov aad push add call push (bad) fisubl xchg inc jbe bound mov xor jns jo loop push mov ljmp jecxz arpl call adc out xorb lahf sbb dec (bad) (bad) (bad) lcall test inc or scas cli push xchg xor inc std xchg out call lods (bad) (bad) (bad) (bad) fistpll add ret lods or push in jp add imul mov addr16 movsb xor push clc xchg test add sub gs (bad) (bad) incl inc xchg stos imulb (bad) hlt daa mov cld push das jo cmovbe inc cmp sti je sahf push or and popf aad fstpt call aas mov push inc adc (bad) dec int push gs mov cmp int3 je (bad) mov sub std or mov jl jb xchg push (bad) (bad) decl addl sbb sub scas scas loope mov and jl (bad) (bad) (bad) ljmp sti push mov pushl add pop xor push adcb inc lret cmp pop jo ljmp call adc jno (bad) xor pushf adc mov sbbb jecxz jg mov xchg cli aas inc cmp xor outsb iret insb (bad) jbe in adc (bad) jg ficoml xlat mov lahf mov inc pop xchg or jecxz jo jle (bad) idiv insb sbbl pop fild inc daa addr16 fisubrl int mov repz or out adc (bad) mov adc sbb pop push gs cmpsb jg,pn sbb mov (bad) call scas mov inc mov mov xchg push (bad) (bad) (bad) (bad) decb outsl add xchg pop out dec into mulb and or clc jb cld mov (bad) decl mov mov sub call pop mov scas (bad) mov cli sbb (bad) lret lock icebp ljmp fbld push jmp jns daa lret pop lcall adcl (bad) and movsl pop icebp (bad) out stos rol sub into jae stos fs (bad) jmp dec mov aas or rcll fmuls inc add add (bad) in pop and cmp (bad) (bad) (bad) mov jge into jmp addl scas lcall inc nop aam push cmp dec inc adc int3 addb pop decl adc inc xchg mov xchg fldl cmc mov loop pushl lcall ss jnp inc ds (bad) dec mov lock push repnz in mov sti mul aam mov (bad) lret pop stos test push dec data16 xor mov idiv into daa (bad) (bad) mov add stos inc movl inc inc pop int adc jo mov inc (bad) sub dec jae,pn subl push in clc inc sub lcall cmp xlat ljmp jns jno loope lea cwtl mov loop add pop aaa fdivp jge add pop lods sbb push pop es push sub sar inc (bad) (bad) clc pop xor jbe xchg (bad) adc in mov push push (bad) (bad) (bad) call shlb cld mov bound les push cmp mul jo inc sbb das icebp (bad) decl xcrypt-ecb cmpsl into mov cmpsl xchg adc push jge add (bad) ljmp mov mov mov (bad) and fwait in cs sbb scas ljmp cmp mov adc test xor cmp (bad) (bad) lcall cmp or aaa sub sub repnz movsb fmulp or (bad) ljmp std xlat lahf shrb hlt cmp out popa js enter sub es incb incl dec cs pop sbb insl push decl std loopne mov lock push or xchg sti sub (bad) sub mov (bad) (bad) insl jo push stos mov mov dec pop xor leave lret cmp (bad) jg (bad) push and mov lds (bad) outsl (bad) mov fstpl jl sub xchg mov clc or or lock imul jge in add je movsb lods aam dec orb push dec sarl cmc dec mov jg mov xchg or adc and xchg jno call call pop xchg add ficompl adc negb in add mov pop mov and rclb in loop xor sbb rclb add xchg outsb jle test push dec cmpsl jno xor (bad) jecxz dec pop cli fistpl mov mov ret fidivl pop aas lds push mov stos sbb pop jno push dec jnp std or xchg and inc adc xchg xchg in lods aaa xchg push rol add mov aaa jp cmp and cli push sub lahf cld inc add xchg rcll cmp jb decl das mov fstpt imul pop inc rcrb sbb das jne test iret dec cmpsl xor dec lcall lcall dec sbb movsb lret pop xchg into xchg outsb mov std (bad) incl jbe push and mov pop pop mov nop xchg popf mov ljmp outsb sbb xor aaa dec mov mov mov insl sbb shll mov (bad) jg xchg loopne cltd in sub (bad) (bad) (bad) jmp cmp lret mov (bad) mov and idiv add fcompl (bad) (bad) (bad) dec stc cmpsb loop xchg jb or or lcall pop ss imul and out sub (bad) (bad) jmp xchg fldcw fmull gs lods push and sbb test xchg clc clc cmpsl mov enter jnp out aad mov (bad) ljmp inc mov pushl inc jno adc pop fisubr lcall (bad) mov xchg je push xchg int xchg cmpsl push (bad) push mov call add sbb adc jb,pt je ficompl popa cmp (bad) decl std lahf gs (bad) mov jg xlat mov and mov lea mov mov pop daa pop mov loope lret inc jo,pt daa sti movsb stos les std pop loop inc add decl adc push mov cmpsb inc gs pushl xchg inc fsubrs xchg dec mov push inc mov std das cmc (bad) jg lods push mov popf ret std xchg adc test mov jmp mov test jnp push lret mov xchg xchg xchg xor imul lds aaa out add cmpsl jle lock jno sub dec and rol add sbb in stc jne (bad) pop sub sub pop xor inc dec in mov pop rorl jg mov add jge adc or (bad) decl stc lcall daa popf sbb xor lcall aaa outsl inc jns in subl sub aas imul and es sub jo dec loope push and pushf int3 lock (bad) lcall call loopne clc xchg jns dec aaa loope lods clc imul jns lock rcrb fsubs xlat jo movsl dec cmp sub incl (bad) out add sbb movsl lods (bad) dec popl pop pop jecxz sbb or dec loope fisubrl in cs ret mov inc jae das lahf pop cmp aam jne adc call jno ljmp push lret test in push int dec (bad) push xchg lret arpl outsl mov mov cmp xor inc fisubr mov (bad) cli rcl test sbb add loop cmp cmp (bad) (bad) jmp mov loop fdivl loopne xchg dec jl,pn fnstenv lods mov movsl cmp test jg push dec add call pop test adc xor mov push or pop (bad) (bad) out or push push fdivl xchg data16 mov xchg or mov and jo dec add push and (bad) and nop sbb push lea iret mov jnp sahf int mov ret or push cltd jge jbe mov repz shr scas (bad) xchg push out and xlat adc outsl (bad) sub shlb mov or fnop sub jmp out fsubl (bad) add mov pop clc jnp adc xchg popf out lds jle test or (bad) (bad) lcall leave cmc cmp imul pop sub enter xchg jo jl in pop jmp (bad) cmp ja xor mov lods lret dec scas lahf cmp shr inc loope (bad) (bad) inc pusha inc and repz jbe xchg orl xor fnstcw testb cmpsb xchg cwtl cmp ret adc incl cli imul cwtl repz outsb in lock (bad) lcall loope or push xchg sub mov jns lea (bad) pushf mov and or mov (bad) jg pop add xchg pushf (bad) mov add enter pop adc (bad) mov fdivl pop ret cmp sub adc (bad) inc fmul mov icebp jns das add loop call bound (bad) (bad) (bad) pushl das inc test arpl fadds mov add rclb cmp jmp sub adc push je adc or or mov fstpt movsl mov cltd inc mov or fs adc mov mov ficompl push push push jmp mov jp push or push sbb movsb cmp add or (bad) mov ret or pop adc leave pop and out pop mov cmp or (bad) incl sub xor mov enter adc dec (bad) mov and pop mov lds aaa cmp cmp jns cld (bad) adc (bad) mov or inc mov imul mov es push ljmp loop lds sub les cmp sub jo movsl xchg clc jg in pop test fwait sbb lcall incl pusha in int jp movl addr16 adc mov inc (bad) mov cmp push aam int jg test dec stos dec push sbb gs shrl hlt push dec (bad) (bad) (bad) decl xor jl jle lahf fisub pop sub leave lcall pop mov (bad) mov xor mov (bad) fidivrl lcall mov out dec cmp pop xchg leave insl in inc xchg clc call movsl cmp ds jb movsb and movsb out decl lds lret mov lods nop mov mov jg cli ja sbb add out jl addr16 push or mov pop pop and pop (bad) (bad) dec or lods adc jae scas nop jle ljmp insb mov int3 jge push pop mov push xchg cli decl add pop fcoml outsl add (bad) decl pop into adc and inc (bad) divl jp dec aas ret outsl (bad) (bad) (bad) cmp mov and rol popf clc jmp jb xor push in cmp or outsb (bad) (bad) mov movb inc cmp enter mull fisttp (bad) or sbb mov scas inc sar (bad) pushl xchg aas (bad) push mov sarb sbb aaa ds (bad) call and repz mov enter insb and movsl insb scas mov out movsl (bad) jmp xor stos imul pop adcb sub sarb inc hlt mov jae out out xlat jb cld (bad) (bad) (bad) ljmp mov jmp mov jne (bad) rcrb fwait int pop pushf mov mov jmp sahf imul rcll jbe cmp out test repnz adc je (bad) mov repz adc fisub test cmp hlt push fwait je fwait pop fisubl sub pop outsl std idiv xor fisttp or pop jnp cmp int sbb ljmp lret jae lock jp stc add and pop adc aam push (bad) in loope xchg ljmp dec push fmull je (bad) (bad) mov sahf xor ss cwtl ret pushf adc sub cld pop pop mov jmp ficompl jne mov push addr16 pop ljmp cmp ror bound mov pop (bad) (bad) push xor sub sbb inc std dec and push leave inc fsubrl cmp inc and cmp adc xor sub aas pop imul (bad) push dec or fs lcall out sub sbb repz test inc pop jbe out sub loop (bad) pop cli add mov jbe mov pop pushf add sar mov inc addl push mov rolb incb push stos js adc sbb ret cld pop into or push outsb cmc (bad) js adc (bad) (bad) jmp mov clc rolb (bad) and xor rcl inc adc jne scas add sub (bad) (bad) ljmp int3 push xor xchg xlat inc cltd push push movsl cmc or push or xchg enter mov (bad) jmp stc xor mov loop hlt jno adc inc jb jl inc mov (bad) (bad) ljmp in mov push mov push push xor bound sbb test jae roll jecxz imul fdivrl fmull xchg mov call lcall pop insl pop in cmp inc mov icebp xchg pop stos popa pop fsubs ror lds icebp pop jl leave (bad) stc outsl ja jg (bad) (bad) mov in mov mov xor or mov dec lock je int xor call push iret addr16 lahf jg icebp mov cs pop mov rcr rorl fcomip jne mov fldenv roll imul test (bad) dec push fimull add pushf mov pushl hlt mov pop fs arpl fsubrl das lock jmp (bad) (bad) jmp mov int3 mov jecxz xchg mov stos (bad) mov sarl sub (bad) jae lock cltd xchg xchg mov inc adc cltd push cmp xchg repz fmul cmp cld (bad) pushl imul test jl and cmc stc pop data16 (bad) call fucomi lods add jb out mov repnz lret pop cwtl int or into cmp outsl cld call hlt out stc mov sbb lds adc mov mov cmc (bad) call and mov imulb in jg inc (bad) sub stos fisttpll cld fucomip mov movsb repnz mov adc (bad) (bad) (bad) fsubl arpl scas sbb sahf nop push inc (bad) icebp xor pop bnd xchg das mov and push lds mul jo jmp sub cmc cli (bad) jmp push pop dec cwtl fisttp (bad) sbb xchg cmp in test (bad) (bad) fistpll sub jge sbb ret outsb cmp add bnd sub xchg test (bad) daa push (bad) mov pop (bad) (bad) (bad) lcall inc jnp insl cs mov jge add xchg mov or js arpl stos aad mov hlt (bad) fstps mov outsb mov inc push aas jecxz lds shlb or mov (bad) cmp jmp pop cwtl xor loop andl scas jl jae ficompl jle mov mov sub das mov mov mov jle call ds repz mov repz (bad) test or mov (bad) (bad) (bad) inc xchg jo sbb pop push repz in insb push mov mov add push pop xor imul cwtl mov (bad) ljmp mov call inc movsb adc cmp test mov stos (bad) jg inc sbb mov enter (bad) mov js cmpsb jno mov inc mov (bad) (bad) (bad) mov in cmp xor push jne mov pop sbb (bad) ljmp aam cli cmp (bad) xor pusha (bad) ljmp daa data16 fadd repnz (bad) (bad) (bad) incl xor adc cmp je icebp pop and shr sti pop (bad) test (bad) jmp push sub call mov cmc jno test or incl jne mov mov nop sub clc fs andl subl lods (bad) outsl mov jne jnp arpl (bad) (bad) (bad) (bad) jmp cs movsl scas movsl jge js (bad) je clc push pop ret fwait mov or stc pop xchg lret xor mov adc push mov test mov std (bad) mov aaa xchg stos or movsl mov lds ljmp fs imul cmp shl push imul (bad) call sti xlat leave mov pop push mov jae xchg mov ffree jg pop inc xlat (bad) (bad) (bad) ljmp jg and sub push loop push fwait lock std pop ret out jge dec stos dec std (bad) (bad) cmp dec push push inc xchg call pop stc sub jp push cmp (bad) (bad) jmp jecxz das out fwait movsb dec in lret mov in sbb popa insl insl jg mov push incl std out fsubl movsl push cmc jae bound ret (bad) jg mov sub lods sbb (bad) (bad) dec mov jbe or jg loopne lret adc stos movsl inc mov int in (bad) (bad) fistpll cs mov out mov jno aaa pop imulb call stos pushl xchg sbb and xchg and mov mov (bad) test cmc push sub loope sbb sub out (bad) jecxz mov call sarb mov or (bad) mov adc mov mov xor sbb push xchg fisttpl jb ret idivl movsb scas pop movsl popf ljmp inc pop fdiv xor jecxz fmuls mov call cltd fldcw jnp pop icebp mov fucomip pop loope mov inc std icebp inc sbb icebp (bad) fucomip dec cltd ljmp cld out aas xchg fldl2t ds mov jae sub hlt das loope cmc (bad) fdivl sahf cmp test (bad) (bad) (bad) mov inc (bad) push rcrl pop xchg mov mov decl (bad) rorl aad push cmp jmp jecxz cld jg loop jb jp sub mov mov add push std das jl sub loope lods out dec pop in ljmp das jnp les stos (bad) movsb mov sbb cltd lods sbb stc sub cmp cmp andl adc xor fcomps aam (bad) (bad) (bad) ljmp loope out mov mov mov pop sbb push sbb stc loope mov mov sti ficom ss mov hlt out mov jnp (bad) lcall (bad) incl jecxz gs aas in addr16 ja cwtl (bad) mov dec add (bad) ljmp xchg cli pop repz pop add inc sub xchg mov out (bad) (bad) call mov xchg pop or js ret in fisttp decl jmp (bad) jns dec fiaddl jns pop cmp jae out sub loope (bad) (bad) (bad) in mov pop push jae or (bad) shll arpl lds jae (bad) ljmp jb jge (bad) aas fadd mov nop aaa pop mov sahf and sub xchg (bad) inc pusha pop stc sub mov mov dec loopne (bad) jmp repz gs inc and (bad) mov loopne imul pop mov in xchg jp lock sarb mov xor lahf outsl cmp (bad) les jmp mov pop jns jne mov lcall and cli (bad) jg lock mov dec sahf mov in pusha push (bad) cmpsl (bad) (bad) (bad) decl xchg xor mov mov sbbl loope movsl xchg das icebp (bad) call std fsts lret lock scas cmp xor fisttpl (bad) call ljmp imul scas lcall into loop dec inc scas sub daa lcall or aam pop adc inc pop dec sbb mov pop jmp idiv popf (bad) (bad) pushl adcl (bad) movsl dec pop ret jmp (bad) jae int (bad) ljmp in sbb or inc dec inc jne (bad) mov pop outsl mov (bad) push inc popa mov repz in (bad) (bad) jg out push adc addr16 or stos xchg pop movsb push loop mov and mov jmp in or gs (bad) push mov addr16 loope xor lds cmp scas jno mov jae pusha aaa scas mov jo jmp pop cmpsb (bad) (bad) (bad) mov out xor std ja in aas sti sbb mov mov mull xchg (bad) (bad) (bad) decl cmp or lcall pop outsl xorb cmp xor je (bad) (bad) jmp stc and notb push mov dec pop mov add cli pushl jle ss cmp jne out dec and xchg mov cs pop loop dec xchg imul mov in js lds pop cli (bad) fcmovnu mov xchg pop xor or cwtl and sub (bad) incl std out pushf push arpl (bad) fsubl test aaa insb inc jne or ljmp inc pushf fmull (bad) (bad) shr cmpsb xorl sub out xchg fsub inc jnp insb adc sub iret out sub sub cmpb repz sti in mov pop jp aaa rcr mov not jnp mov cli call insb add sahf (bad) mov int (bad) gs addr16 cld (bad) (bad) decl jb int3 dec mov scas sub scas out jecxz jae dec fnstsw mov mov and sbb and adc lcall cli into cld sbb arpl xor xchg adc mov out cld pop ljmp lock jg mov mov cmp xchg es call outsl push lock in cmc mov out push ja out (bad) (bad) (bad) lcall inc (bad) jns push mov test mov repnz mov sub repz lods call xchg xor ror pop cmp xchg sub ss (bad) cli movsb cwtl loop (bad) pushl inc dec and neg into out lahf lods or xchg orl pop (bad) mov in sub jp (bad) dec jnp std movsb ljmp and movsl movsb sub pop push or movsb test add mov fnstsw (bad) lcall mov int jnp jo jbe,pt hlt and push test push in jl (bad) (bad) pushl notl cld or xchg mov imul in ss xor fucomip (bad) inc out xchg pop sbb rorl in pop jmp adc add jg pushl jno push test addr16 jbe xchg imul ret (bad) leave loopne sub aam inc cmc dec mov movsl mov add aas bound jg cmpsl out adc aam lret imul xchg repnz test add sbb out mov xchg sbb push flds fwait movb cmp mov subl push xchg xchg cwtl mov and (bad) lcall icebp mov jmp jno xchg out ljmpw cld ljmp push loop ljmp ret std mov xor push jns cmp loop sbb call cmpsl push jge popf and outsl (bad) (bad) decl (bad) sub fistpl cmp pusha jb lcall cmc mov cmp xchg xchg decl jmp (bad) ljmp lock fs mov (bad) hlt (bad) fidivr or jnp push popf lods jo jmp jmp cmpsb outsl ja cmpsb scas repz mov (bad) (bad) call mov push pop pushf in call loope cmp pusha enter jae pop mov (bad) (bad) mov in pop sbb js push jle das mov roll (bad) jmp leave mov adc fcmovnbe cmp aad es dec (bad) (bad) ljmp stos ja xchg inc xchg lods xor (bad) stc das adc lods mov sbb sub jg push pop mov fiaddl stos mov (bad) incl cmp jle cli arpl out jns ret push pop (bad) fnop pop add add cmp aam mov ret inc sarb jle sar (bad) (bad) or push cli add (bad) insb jp rolb mov psrlq out mov ret push and mov sub xor and pop loope jmp out scas (bad) (bad) (bad) incl test sbb jns mov clc (bad) sti idiv ror fs jne cltd (bad) (bad) (bad) lcall enter xlat int3 test push push pushf pop mov sbb or sar mov push loope push jg and add out scas movsl inc jle scas popf jg (bad) (bad) out lock push shrb je roll fiadd inc inc or or adc pop nop es (bad) in push mov adc push stos sarb jle jle fist cmp fs mov xor mov leave decb (bad) (bad) call mov popf into stc ficom jne mov xor fistpll out xor pushl rcrb and add lods push jno movsb or (bad) ljmp test mov out jp mov mov mov xchg je js,pt lret insb adc frstor (bad) jg push outsb in cmp cmpsl pop jbe push fldt int3 mov (bad) (bad) jg dec sti out loop (bad) out mov cmpsb fiaddl call lahf cmp or dec cmp mov pmovmskb rolb jge and push idiv or jbe inc ret fidivl fnstsw mov adc jge bound test das hlt xchg xchg cmc inc add pushf xchg repz (bad) ljmp (bad) pushl mov test arpl adc and push int xchg jb xchg loopne ljmp cmc test sbb sar outsb fcompl mov cs icebp add ret (bad) jg jns fidivr nop fidiv mov jmp sub in jbe sahf cmp hlt cmp int (bad) mov int3 adc mov add (bad) (bad) jg push test loopne stc pop fimull clc and dec rcrl jecxz ret mov lret push cwtl (bad) fsubp std xor push mov dec shll push lahf ret add out and fwait mov outsl cltd pop inc scas adc push (bad) ljmp mov push (bad) enter aad jno jae and adc lds mov enter hlt in adc jae shl pop push push push mov outsl std cmp adc fildl cmp (bad) pushl jl sub fnsetpm(287 jb fstl (bad) jecxz jmp (bad) (bad) pushl add (bad) cmc aad sub decl inc out push mov movsl sbb mov cmp outsl icebp or lods mov inc mov adc roll xchg (bad) (bad) jg dec inc pop (bad) or ss push pop stos xor xor push mov lcall cmc push push push sub add aas push push outsl hlt sbb pop pop pop lods bound push icebp inc ja or out pushf test (bad) ljmp loope sbb in lea mov inc ja (bad) call addl scas dec push or (bad) (bad) jmp mov bound mov mov cmc jp movsl mov jno (bad) (bad) (bad) out ljmp sub add sub mov cwtl incl pop jl or mov and cmc inc lret popf fidivrl je fwait mov int3 add push push iret out pop lret call js loopne (bad) jg pop sub ret push xor outsl jno adc ret adc mov out int lods (bad) rcrb enter add pushf (bad) fild fildll push loope or push push adc (bad) (bad) ljmp loope icebp int push fldt in jmp push (bad) sbb pusha and mov out (bad) decl popa out mov (bad) jle cmp jb rorb fucomip call sub cmpsl push dec mov std imulb iret mov ljmp fcoml sbb xchg jmp cld xor cld (bad) mov mov inc inc ljmp mov lcall das cmpsb mov ret mov sub mov fsubrl je inc stc hlt inc in cmp decb pop rclb jae popa inc fwait aad je (bad) call movsl mov jge add dec cmc out or in je or sub jecxz call xchg add sub push jnp pop and nop out imul mov add fnstsw in repz (bad) jmp dec add mov mov mov outsl (bad) (bad) (bad) jg loope mov jmp nop sbb mov ds cmc lea sub pop push pop flds mov cmp les insb mov loop stos inc or test outsl lock mov cwtl pop and loop,pn sbb push or jecxz andb pop (bad) ljmp popf push mov dec xor and mov add inc das xchg cmp (bad) incl dec mov mov outsb dec xchg jmp test sbb dec mov (bad) (bad) ljmp lcall into scas inc and sti stc mov les into (bad) adc inc add stc in fcos das cmc movsl loop dec mov cmp dec out xor jno (bad) jg decl adc fcmovnbe aaa or mov imul fs loop pop std jmp imul cwtl ficompl es adc test lock mov test sub pushl xchg pop test sbb lret mov (bad) fisttp sub (bad) mov mov jle push inc insb pushf mov inc push loopne cld pop mov sbb loop add lahf mov jno adc sbb (bad) fcmovu mov mov and outsb jb cmp or outsl sti sti pushf call clc das jp outsb lahf jp (bad) mov and add test fnstsw (bad) lcall stc call stc sub out mov std sti cmp pop pushf mov sar push pop pop fnclex loope add mov jns bts (bad) mov fcmovu xor sub xchg xchg mov or imul mov decl std xchg out aam add mov scas pop mov std pop cld pop dec icebp lock orl leave sub jge sbb lock repz mov loop test mov and out adc jge in mov rcl icebp pop (bad) mov ja mov jl mov xchg cld (bad) decl dec repnz xlat sti add outsl xchg lcall (bad) decl jne mov xchg mov in repnz stos (bad) inc adc cld int ss (bad) (bad) (bad) ljmp xchg xlat gs add mov popa popa mul addl lock mov (bad) ljmp jmp dec mov mov xchg cmp in xchg mov add inc orb cmp into outsl fbld call cli lds imul pop add ds or test sub (bad) shr xor mov sub sub out sarb adc movsl movsl lahf jae fidiv (bad) popa loop push jg inc adc adc dec xor stos stos sbb or sub repz cmpsb cmpsb aam incl and ret popf cli add clc jecxz jae adc mov pop pop xchg xchg mov xchg (bad) clc (bad) (bad) (bad) cmp pop mov inc dec cli cli mov pop sbb cs sbb and arpl push mov pop sbb push lea scas mov jns (bad) jns (bad) (bad) (bad) in xchg (bad) mov mov sub data16 in lcall int3 enter dec xor add mov push (bad) das pop mov jo (bad) (bad) ljmp lcall (bad) (bad) jl (bad) jo xor inc arpl mov cmpsb jp into inc dec das cwtl imul and xchg (bad) cld sti jnp inc int (bad) incl jo in fistpll cmp push push mov sti dec sti imul dec (bad) ljmp ret ret leave xlat pop shll push push fistpll add pop push roll stos mov lea rorl jg daa mov lcall rorb (bad) pushf lods push mov jns jle mov or sbb arpl clc repz (bad) mov add xchg sbb cli push xchg push iret lret in (bad) (bad) jmp in in in and mov test dec lcall sti test add call push add xor imul cmp in jle sbb adc (bad) (bad) jg es fistl data16 adc fmuls lds mull outsl lock icebp cli in (bad) push (bad) xor adc (bad) decl aad in out mov fdivrl stos (bad) mov outsl ret jecxz repnz fbld dec push mov pop pop lods xchg (bad) (bad) (bad) jmp push xor hlt negl xchg (bad) mov and iret pop movsb dec dec in jmp pop mov mov sahf jp xchg push (bad) (bad) (bad) (bad) aas sahf mov aad sbb icebp jns or pop in daa pop sub ret test test (bad) call push push cmp push subb (bad) je (bad) (bad) decl jg rcrb data16 mov inc xchg xor sti jbe and (bad) (bad) (bad) (bad) fisttpl and mov dec jno pxor cmp rorl insl push dec subb mov jp outsl les pop pop mov adc push adc (bad) (bad) pushl push inc idivb loop mov icebp dec mov shrl pushf pushf std (bad) call dec lock mov in jle dec sbb sti jns cmp mov mov adc das iret dec repnz mov mov dec inc ffree in adc addr16 jg push dec js lock mov add push mov push call sti rcrb int3 (bad) (bad) (bad) (bad) incl pop (bad) imul (bad) xor outsb pop pop lock rcll sub and mov movsl (bad) decl in lret jle movsb push js inc xchg fdivrs mov sub inc rorl jg adc pop cmp push clc aad jae sahf dec sbb nop sub mov call xchg popa cmpsb adc or push or mov subb push xchg (bad) mov and xchg xor lods imul cli (bad) (bad) decl and das addr16 mov push xchg popw sbb pminsw pop nop cmp lock jb fdivrp and jl scas xlat jnp aas mov or and lods (bad) lcall cmp jp fwait scas roll mov out (bad) or (bad) (bad) (bad) jmp subl mov imul cltd pusha jle or fadds push lret xchg cmp stos lret (bad) mov repnz insb xchg push push xor jnp cmp call lcall fsub aas mov mov clc mov xchg mov jmp push pop shlb out mov decl pop lock xchg sbb (bad) fistpll cld (bad) cmp push (bad) (bad) jg stc out insb inc jno sti loope hlt in repz popf cs (bad) call shlb lcall hlt jl jp lods scas addr16 fwait daa into std mov adc bound sbb mov cli pop stos xor js (bad) dec (bad) (bad) (bad) jg push aas cwtl adc lods lret xorl mov fisub popa mov mov (bad) (bad) pushl (bad) push mov ret addr16 and jno sub xchg icebp in mov mov inc mov (bad) (bad) (bad) lcall push pop outsb lds mov ja movsb into aam sbb fist gs es lahf (bad) (bad) incl push sahf insl movsb addl jl js and (bad) fs (bad) pop std fiadd outsb clc xor jb js mov xchg (bad) aaa (bad) repnz fdiv les ss ljmp das cmc loop dec dec nop jb loop jb data16 movsl rol xchg push add push ds jg add dec cmp dec in cmpsb sbb std (bad) cmp cli (bad) shll sarb push inc inc hlt je sbb pop test incl inc in fildl (bad) cmp sub call lods mov scas movsb imul and pop outsl (bad) (bad) mov test jl mov and push ret pop clc (bad) call push sbb es adc and (bad) xchg mov loopne (bad) call or cmp sub nop cmp lods nop icebp mov (bad) jmp je pop std ret fdivr pop loop sbb (bad) (bad) ljmp popa mov popf loope daa xor jnp push cmova lock mov test inc cwtl (bad) je pusha aas bound je clc lcall cld stos mov lret mov lods jecxz fimul mov xchg adc aam dec pop clc (bad) fbstp loope and addr16 xor pop pop cmc (bad) ljmp adc in push aam (bad) iret adc pop cmp mov (bad) jg sub sarl fstl sti dec xchg inc adc sub cli outsl mov movsb stos into add orl inc adc add and cmp insb rorl and (bad) sub lret fcos (bad) push jecxz or (bad) fisttpl (bad) test stos pop cld jle cmpsb inc dec xchg xchg sar (bad) (bad) pushl push cli xchg sahf cltd push add push gs cwtl jl jo repz mov xor outsl add inc jo and lcall roll call add fdivrs je xchg shrl scas or clc jg (bad) icebp call pop in loope mov or fisubr aas (bad) (bad) cld mov call jno addl xchg and cli (bad) jmp pop inc adc int3 sub sub jg loop sub (bad) (bad) (bad) mov in and rorl leave cmp ljmp fnstenv jo sar lea jge fidivr aas out mov add ss das inc lock mov arpl (bad) not rorb mov push (bad) jbe pop stc stos leave dec mov (bad) (bad) (bad) jmp cs movb inc loop push gs lods insl je pop call xor mov sub incl lret ret cmc xchg push scas pushf push daa shr (bad) xchg xchg inc rcrb (bad) jae (bad) loop call pop cmp je or ljmp rorl mov aas jae adc stc out cmp movsl mov sahf clc push test inc push mov outsb repnz jg pop aam xor sbb jbe lret sbb cmc cmp adc sub push dec mov jnp jno in cwtl xchg inc mov cmp jno or cmp inc (bad) in jg loop sarb or movsl mov cmc imul loop std pop call xchg mov je in mov adc push adc icebp (bad) decl nop cli lcall jge cmpsl inc push xor cmpsl (bad) jl stos lcall adc ljmp stc fimul aas mov (bad) (bad) push wbinvd mov test adc repnz sub push lret icebp (bad) pushl stos push neg pusha aas aas mov (bad) lock xor xor (bad) (bad) (bad) (bad) mov jmp and in lds and (bad) lret test jae fnsave incl jnp add cld enter mov cmp loop cli (bad) ljmp jle inc loope (bad) mov subl pop adc pushl outsb jecxz mov es test (bad) jbe add jne mov mov inc cmp cmpsl (bad) push dec xor scas mov (bad) (bad) incl cli aam enter mov or in into mov dec lahf xor call repnz loop add cmc mov dec sahf imul lock push jmp jecxz jge mov (bad) (bad) (bad) (bad) (bad) mov mov mov je sbb jno add push sub xchg xchg dec lea call nop andl ret repz cmp mov aaa mov clc (bad) incl and cli cwtl and jae js aas pop push dec mov shrl (bad) (bad) pushl fsqrt add sub scas shlb and leave sar (bad) fildl jg lds shr push inc mov fcoms addr16 stos ljmp movsl xchg test jno imul loopne add aad pop mov or mov ds push ljmp lret out std xor enter (bad) fistp push cwtl sub push jp or into cmpsl in inc mov inc fisttpll xor pop ror push sahf out (bad) (bad) ljmp ja cli pop test sub sbb push fadds mov call add lea (bad) xor and (bad) mov sub cmp scas mov in sub loop mov rorb (bad) (bad) (bad) cmp out adc push dec je push sbb and fidivl or cmp ja (bad) (bad) decl stc adc push or mov jle pop lret xchg jmp mov fidivrl xchg aad shr pop push xor or (bad) pushl loop jle and adc pusha mov mov sbb dec mov dec ljmp sbb das lock pusha int3 (bad) les cmp jge pushf ss lock jg xchg jns add lods push test roll jbe cs call jl add cmp sub jg jmp les cltd mov pop sub or loopne mov loopne pop mov addr16 popf mov and hlt lea pusha mov jg lock (bad) (bad) mov cltd adc push sahf sarb pop pop test test pop cld mov sbb ss sbb or movups jo (bad) outsl std adc jo in shrl lret add imul andl mov (bad) mov fbstp movsl push push mov loop sbb dec jae rcr jl (bad) (bad) (bad) (bad) aas push mov dec inc vmwrite xor loop pop addl cmp (bad) (bad) (bad) pushl xor sbb mov adc hlt cmp adc cltd jnp cwtl jno (bad) (bad) (bad) inc and fwait push sahf es fstps test nop scas cmp aaa rorb popf lret jo dec popa pop out (bad) ljmp hlt xchg in pop xchg cmp mov pop addr16 inc cmpsl xor jmp data16 xchg pop fsubrp ret rorb sbb sbb (bad) cwtl adc lahf test ljmp loop (bad) call cs pop pop ds mov decl aad popa inc inc add fcoms xor add (bad) icebp sub (bad) jne cld (bad) call je daa adc js mov lods sarl ret cmp outsl push mov nop mov mov (bad) movsb push push loopne in pop cmpsb sti jo test jnp daa (bad) ja sub insb test je aaa ljmp pushl movsb xchg sarb cmc inc add mov push and push arpl daa (bad) (bad) (bad) ljmp jnp out ds cmp fildll pop xor push xchg jmp es iret jb in ljmp adc test (bad) pushl pop pop jae cmovg insl adc pop call (bad) into mov add cs mov push cmp or lcall push subb fnop dec mov jp lds inc jbe mov sub (bad) (bad) lcall and (bad) lret pusha in nop iret ss cmp daa enter mov cmp dec into (bad) dec rcrb cmp hlt sub lcall orl lock nop cltd ret lret mov mov test outsl cwtl mov subl pop add (bad) (bad) ljmp dec mov jp ret cmpsb pop arpl addr16 (bad) jg dec (bad) lods jnp add lods jecxz outsb dec enter push popa arpl cmp (bad) (bad) dec mov stc je aad in mov mov inc cltd xchg xor mov mov idiv push incl push lahf adc int3 loopne pop jp push lcall xchg out icebp jne ret aad pop mov out add sbb fisttp and jge (bad) mov pop and add pop std (bad) jg arpl inc sbb and push mov dec and (bad) (bad) (bad) ljmp addr16 (bad) push inc dec jmp arpl out or (bad) adc pop (bad) ljmp mov or mov dec adc mov insl jl out mov mov push xchg mov xor mov jmp out inc inc lahf movsb sub jg in ljmp mov sahf and decl cld jmp mov or and insb xchg addr16 or lahf sub or outsl out pusha mov xchg xchg call cwtl xor cld in ljmp jb xchg and in jecxz mov mov jo (bad) jmp into fstpl and mov test push jl add pop pop movsl push outsl std pop add stos mov add idivb push pushl xchg xchg jb xchg sarl incl add adc mov mov in and mov pop sarb mov sub xor leave mov sar lcall mov lds inc push flds jecxz nop xchg adc movsb add mov fidiv xchg push jno rclb fisubl mov cmp dec adc mov jp or add mov cmp xchg jg cmp clc (bad) incl inc or mov add sub std mov (bad) (bad) (bad) incl inc mov add jno (bad) je test incl cmp arpl into sub outsb and dec (bad) mov negl je lods mov scas leave cmp stc jmp pop ljmp push jmp movsl push jmp das hlt jmp insl imul test rorb mov mov enter dec inc outsb inc movsb mov das cmc incl pop xchg jno imul (bad) (bad) fildl dec fimul cmpsl popa test jl pusha hlt mov add leave adc sbb sbbb (bad) mov (bad) (bad) push subl mul (bad) mov lahf cmc incb (bad) incl adc mov insl nop push (bad) (bad) (bad) (bad) mov adc imul cld mov or movb pop jl (bad) mov lds imul (bad) movsb add xchg mov xor add (bad) jg stos and (bad) call and sbbl (bad) (bad) (bad) out cli push mov sub xchg sti jg pop or pop rclb xchg cmp mov sub (bad) incl jg dec adc out xchg mov sub inc add incl lods popf sub call lea nop in and fdivr call clc push dec add out test mov inc and dec pop xor jmp adc stos popf or orl inc mov in jg test add xchg pop adc sahf pusha mov rolb cmc lock sub dec jg incl xchg cmp cld (bad) in ja (bad) (bad) (bad) popa push cmpl fist dec xchg mov and xchg lods rclb (bad) (bad) lcall or in push pop adc add std aas and mov mov and add clc adc and add outsl (bad) incl daa mov (bad) ljmp push addl movmskps (bad) fstpt dec mov add push pop inc inc std push rcrl or adc insl mov lea lret add pop (bad) (bad) (bad) (bad) fisttp sub (bad) or test mov jbe dec jge sub or mov call push or jecxz pushl loopne cld cmpl inc aas or add insb dec push lock add cmpl pop mov ret or pop and rclb mov fsts test fistpl (bad) xor cmpsb adc es pop and mov pusha enter and fdivs and add and je lahf add and clc and adc xchg lock inc add mov sbb repz shll imul cmpsb jmp cmpsb cmp cld lret int3 add js in push pop insb push push sbb fidivl mov test or call add pop mov cmp pop inc (bad) pusha and ljmp icebp ja fstp cmpsl popf mov ret mov loop bndldx dec jl (bad) (bad) incl dec pop sbb and les lods jno adc fadd loopne cmp (bad) (bad) jmp jl popa pop idiv (bad) lahf out jl (bad) jae mov cmp inc add sub test (bad) call (bad) sub cmp insl mov ds out push (bad) jg incl mov in pop mov cmp loopne sub (bad) jmp lea out je js cmpsl decl jp add pushl push decl mov into dec lahf and mov int adc (bad) jmp sub fcoml cmpsl dec (bad) int3 bound pop (bad) (bad) (bad) call xor xchg movsb adc dec repnz sbb insb stos xchg sti inc data16 icebp xor xchg or and clc (bad) dec ret push xchg xor stc call scas inc mov (bad) (bad) (bad) fcomip (bad) out or lds and lds xor mov jns adc inc pop out push xchg mov daa test (bad) decl pop jl jp lds dec xchg jg and jg (bad) std into inc in and xchg xchg pop adc pop addr16 (bad) insb add dec or mov cmpsl ror sub rorl sbbl pushl jbe mov lcall in lods xor cmp push or or inc mov jne loop leave jns popa aad ljmp lods stc repnz xchg pop out pop mov test sbb push dec mov sub mov insb pop mov rcr loop mov (bad) mov hlt xchg add negl xchg dec jbe out jo mov mov pop test cs mov or sbb cmc pop call (bad) (bad) (bad) ljmp inc cmp pop (bad) dec adc sub xor aam sub or xchg les ss cwtl aam cwtl imul mov dec hlt jne (bad) call (bad) js loope cmp add xchg ja pop stc mov lock inc dec popf add pop fdivr jmp dec lods lods (bad) push lret mov xchg (bad) pusha les stc mov out xchg adc cmpsl stos cmp pushl insb push xchg pop imul pop mov in push lods push incl mov pop fisttpll ds call or mov jl roll fsubl subl js rcr imul (bad) pushl push sbb xchg mov adc stc dec sbb sbb push sub das cld pushl inc ja fmuls hlt in pop mov (bad) mov xchg ja,pt unpcklps xor sbb repnz xchg jp pop mov outsl add fucomip (bad) std gs scas mov pop loopne ljmp lock cmp or int3 clc dec adc cltd mov jg in jne inc or or (bad) jp pop push sbb in mov (bad) (bad) call xor push mov insl and cmp nop sbb pop mov xchg mulb incl mov sbb movsb jbe and mov xor loop sbb nop adc and jp and add call cli inc adc int3 pop (bad) shrl lds push repz jmp cli cld (bad) (bad) decl add in (bad) test push inc inc adc jecxz jbe fidiv sbb dec in fsubrs dec loope dec arpl push and xchg subb push movsl sub out cwtl fbld loop jp dec mov add sbbl rclb mov inc (bad) incl (bad) aaa aaa mov jge pop out lahf jbe out push mov bound xchg jl cmp and mov sub lcall or xor out mov sub dec jb xchg dec and (bad) (bad) fnstsw mov test outsl into push std daa in loope xchg adc loope inc push xchg mov adc popf cs add jno mov (bad) std cmc (bad) (bad) (bad) decl repnz int adc push fiadd mov fldcw jl adc jae nop out jl adc (bad) jg in dec xor fidivrl jge movsb cli in sahf sbb and movsb pushf adc aas arpl mov mov jmp test testb or (bad) aaa arpl jge lds cmp jae sub (bad) dec (bad) int3 jmp push mov mov mov icebp inc mull lods icebp (bad) (bad) jmp cmp ja sti cmp cmp pop loopne jo mov sub mov lock xchg (bad) lcall lret xchg repz aaa icebp in mov aas mov dec cs or push cmpb out cmpsl outsl (bad) (bad) (bad) mov movsb inc mov mov adc lea mov ja mov jg pop cmp sub (bad) or (bad) inc lret mov (bad) sahf push inc xor les jo aas loopne inc aam cmp add xor adc imul xchg push push or mov xor cld callw stos loopne stc add fdiv pop out jge mov pop (bad) fildll adc xchg add inc jne notl (bad) (bad) popa sub xchg rolb xor test (bad) out (bad) (bad) push push lds add icebp rcrl out pop xlat (bad) outsl mov dec push ds (bad) (bad) call fildl sbb popa mov repnz inc ret xor or adc int3 lret mov sbb xor ljmp mov jo mov lcall pop cmp (bad) lret insl ficom push out loopne xor lock (bad) std mov pop push int3 mov test sbb mov jnp adc pop je push aad cld popa mov imull mov (bad) mov decb lods xchg loopne imul jp movsl les ja or test ret xchg fistpll xchg xchg js shrb mov lods subb mov mov aam rcr mov out lock rorb sub mov (bad) pop (bad) (bad) (bad) jg push dec pop jb arpl sbb (bad) pop ret data16 ror ret (bad) fsub push jbe jle decl cmpsb mov jo lock jo out inc lods push fwait mov mov aas jle,pt add inc clc (bad) (bad) (bad) call adc xchg insl mov mov dec mov imul lret jecxz call call lods jle das daa or mov sbb xor push mov lcall mov xor push hlt mov cs aam cmc (bad) ljmp popf cmp push leave je inc xor cmpsb jno imul jl call (bad) jmp mov lahf xor jb out xchg cmpsb jae out insl mov enter jmp test pop pusha ds into push xchg lds push movsb xchg (bad) (bad) (bad) push and inc fwait xorl out push sub push psraw dec mov (bad) call push cmpsb cld adc pop int inc add and sbb imul dec stc das dec ror (bad) (bad) (bad) (bad) cmp adc (bad) mov pop jmp pushf (bad) mov jge cmp xor mov (bad) clc and dec cmpsb cwtl cli jge fnsave pop outsl adc cmp daa (bad) (bad) (bad) push scas addr16 pop ret jbe or cs cmovae ret cmp (bad) std repnz and fwait dec rolb dec das dec pop cli mov (bad) ljmp xor pop xchg sahf fs icebp pusha mov insb leave iret jmp decl xlat data16 jle jnp enter mov test mov out dec es sets xor clc lods decb xor sahf leave je or xchg sar or lret fmuls dec cmp inc in cmp incl push dec daa push test sar xchg mov lods add mov aas bnd out ja (bad) (bad) ljmp sub jae sub cmp gs aam sbb or push fbld clc jmp cmp ret jecxz push (bad) adc (bad) std pop add pop pop pop in mov fidiv int3 mov xor mov (bad) (bad) jmp pop fxsave ss jl push shlb push pop xchg jecxz sub outsb mov inc xchg (bad) (bad) ljmp icebp xor mov jecxz pushf fiaddl sbb into stos popf loop pop xor jmp sub or lea mov and pop xlat cmc leave mov lock (bad) jg shrb pop sub push inc rep push lret lods cs (bad) rclb test (bad) ljmp cmp subl test loop mov xor (bad) (bad) jmp test lods push imul jne inc push enter add (bad) (bad) (bad) (bad) ljmp pop orb inc shrl mov dec shll lods ljmp (bad) lcall pop insb sub ficom lods xchg push adc (bad) cmc jle lcall sub adc repnz cmpsl jae pusha std jmp mov and mov test or and bound jne lcall imul and imul (bad) jg jl cmp pop sub int jp mov jbe scas or out or lcall pop or pop test jb test dec (bad) jg lcall pop dec and and movsb insl dec mov pop sbb iret xchg adc xchg mov dec xchg sub mov or into adc mov pop mov jno adc aaa cli decl push xor aas xchg sub add ljmp aas push (bad) ss divb pop pop loop mov insl (bad) (bad) incl in lcall push xlat pop dec outsl fwait mov (bad) mov pushl flds xchg cmpsb das ret dec jmp or fcoms xor cwtl xorl dec dec fadds mov jle sti jge iret ja stc cmp daa cmp jnp mov jecxz pop push fmul push and cmp shlb sahf mov add (bad) (bad) jg lods (bad) push mov lret mov dec dec inc lds and pop cmp or push push mov call add mov into lods lock (bad) call (bad) xorl nop loop scas int and fisttpl push notl fs inc inc insb fstps pop push fcos inc lods (bad) clc xchg inc movsb popf insl pop icebp frstor addr16 inc (bad) inc xchg mov fildl pusha in mov (bad) inc imul ret pop dec mov push gs dec xchg inc and xor in jp xor lock (bad) pop cli aaa push jne or or fmull ja push les addl push xchg or popa out jmp mov mov ljmp icebp pop pop fcoms mov in shrl dec pop enter dec push sbb pop imul aas mov in hlt popa xchg (bad) (bad) (bad) fbstp push push stos xchg jbe rcll pop lcall gs cltd inc dec lcall (bad) (bad) (bad) (bad) in xor in repnz adc fmull xor mov mov mov nop pop push decl (bad) scas push ror in aaa pop sub ret setne (bad) mov addr16 neg out std mov mov pop into lret mov fiaddl mov ss mov xor js xor dec mov pop pop xchg aad pop enter cmc mov mov enter popf adc ljmp stc mov cmp mov xor xorl insl mov jne (bad) (bad) call xchg into lcall push inc call xchg cli decl (bad) adc mov lret pop je mov insl test cmp dec pusha sub addb int cmc inc adc (bad) (bad) (bad) call adc outsl and lret jae and out mov fdiv jb mov jne push (bad) jg jg pop pop and push pop xor sub data16 adc sbbl (bad) ljmp adc leave pusha lahf in cmp push ss insl in mov cmpsl lea (bad) mov (bad) inc faddp nop lea je pop std push pop (bad) lock fistpl arpl fwait pop add gs sbb (bad) (bad) mov dec cmp sar sbb mov outsl and fistpll (bad) out cmpb pop add add push in notb sbb (bad) (bad) lcall mov mov push cmc pop lea arpl xor mov or adc mov jne (bad) (bad) (bad) call or hlt push sub sbb xchg sahf mov int inc icebp dec push add cwtl pop mov cld aaa sub sahf mov dec mov xor jle mov push test jg outsl aas rcll sbb divb lods cmc add icebp mov push mov jmp push xchg bound adc cmc (bad) ljmp ficoml test (bad) jl xchg cmc mov pushl data16 or rclb cmp sub pop in dec push push mov sbb rcr push inc ror notb rol jae jmp (bad) ljmp or jno sub pop xchg (bad) sahf in push sub addr16 cmp in jg mov sbb xchg dec inc aas sbb cli or shrb (bad) xchg cli das add xor xchg rorl (bad) call push xchg xlat xchg insl shl and jg test loopne (bad) (bad) decl addr16 jae add jg mov insb push sahf pop jbe test (bad) (bad) incl xor or or ret addr16 xor mov jg ja and inc (bad) mov push bound mov or daa fwait (bad) jg mov icebp pop push jg sbb sbb ss (bad) fucomip cmc cmpsb insl into (bad) mov outsl lods xor pop pop scas pop dec jg jg pop cltd movsl dec mov fcoml loop adc cli (bad) jmp sbb pop jne xor fidivl fsubrl ljmp ljmp sbb loopne (bad) jmp mov jge adc cmc add and jo sub (bad) (bad) pushl add xor mov (bad) cs dec cmp jge pop inc sbb cmpsl mov (bad) call xchg sub stos mov sub xchg (bad) out fwait (bad) jne lock (bad) mov lods idivb mov jno pop jecxz xlat fldenv jl cmpsl sbb inc aaa clc ljmp lds in test in insb xor push stos insl lret (bad) decl scas in sti add ss push xchg dec sbb das mov mov mov mov aam push rcrl fs inc in outsl addr16 (bad) jl push push arpl lcall pusha mov ljmp pop dec lods movsl cli fdivr (bad) (bad) sti in aam or and repnz pop or call add stos out (bad) (bad) decl sub lret jb dec cmpsb nop stos jle scas icebp sub push cmp icebp jg imul mov jnp data16 mov jmp gs pop push negb (bad) hlt push add divl das icebp aaa xchg mov aas imul lock or pushf (bad) (bad) (bad) lcall jae or push jmp cltd out jno ds xchg frstor leave sub adcl lcall or mov movsl pop fildl pop sarl das (bad) (bad) ljmp jl leave imul scas dec (bad) dec xorl test cli ljmp mov cmp leave pop add push inc pop cld clc sbb sbb adc repnz cltd mov jg push cmpsb sub (bad) xlat cmp int3 ficom vmovddup ljmp xor and outsb pop lret mov pop xchg in pop addr16 jp (bad) (bad) decl popf arpl push outsl fld dec adc dec sbb and loope sub mov and fmuls jns popf test sti (bad) jl fild inc sub cli (bad) (bad) call das out pop jno mov int3 xchg inc pop or cmp rclb mov sub dec out and data16 or (bad) cmp xor gs cld inc test jg popa sbb sbb mov sub sbb out inc cmp pop lret mov pop lret xor (bad) inc ficoml scas (bad) aas sbb push adc mov std (bad) out addr16 mov and push cmc jb dec aam inc cmp in sahf ret (bad) jl cs adc fnsave pushl cltd cmp push adc dec mov ret mov dec sbb (bad) aad pop loop negb adc (bad) test mov mov dec (bad) mov push shlb js pop je popf cmp lcall lods outsl lock pushl or in stos subb ret dec gs andl lods cs pop sub (bad) cmp in clc and ljmp (bad) imulb mov inc xchg mov (bad) decl mov sub gs xchg push mov int mov add pop loopne inc push and push xchg ficompl aaa (bad) (bad) ljmp push adc cmp fwait xchg cmp inc mov aam pop mov call mov lret sub push xor sub dec outsl inc lock out call mov jmp icebp xchg jp add sub int mov ret das andl xchg popa adc push inc ficoml in jecxz sbbb inc jmp xor icebp mov sbb jl (bad) inc dec sub jae std mov sahf stos icebp add mov and fiadd lock push icebp xchg pop push pop push cli mov cmc pushl pop pusha cld sbb and cmp std addr16 mov aam jge in das out std scas or adc cmpsb shlb cld lods hlt jnp cli dec stos ja xor pop out insl out cmp pmaxsw (bad) (bad) incl dec pop icebp xchg outsb mov jbe addr16 cmp in and xchg and xor and xchg imul dec ds xchg xor add mov mov jecxz dec inc imul jl (bad) ljmp jb sub shrl jb pushl add lcall fwait xor mov mov stos push repz orb (bad) (bad) (bad) pushl dec cmp mov mov fcoms out xor (bad) ljmp mull lahf dec cli xor sbb mov out push lea stos hlt jns inc and mov std aaa cli call iret jmp fsubrp inc push mov iret (bad) jecxz adcl pop mov ret ljmp xor aas pop pop subl jmp mov sbb inc mov adc (bad) (bad) (bad) jg mov xlat mov lret push sbb sbb in inc xchg mov test (bad) mov icebp add loope (bad) and pop pushf pop sti adc mov pop (bad) (bad) (bad) jg flds cld ja pop (bad) xor mov repz fsubrs vpunpcklwd aaa (bad) cmpsb sbb dec push mov push pop xor loope add in je (bad) (bad) pushl sbb rcll jno mov lods mov in or inc sbb xchg jmp insl out jecxz stos mov dec xchg shlb jb sbb (bad) (bad) jg add rorl movl xor arpl inc aaa dec mov bound mov xor adc aad (bad) (bad) (bad) push jmp xchg imul insl add lcall mov cmp (bad) (bad) mov sub add mov and mov adc cmpsl mov (bad) (bad) call lret mov dec mov sub pop mov push push push (bad) (bad) (bad) call fcomi out jno iret push mov dec out pop loop idivw dec ljmp pop mov in dec into (bad) (bad) (bad) dec sub sub dec int3 dec lods test dec xchg jns repnz push mov andl test push cli cli dec pop in test add cmp inc adc sbb xor mov jg mov sub addr16 shrl or mov jg cmp ljmp cmp insl sub sub dec mov sub test inc push inc inc leave mov pop mov jmp int inc mov pop mov cmpsl fnstenv mov lea (bad) jmp out cmp push test rorl cmc outsl push cli lcall dec je inc sbb (bad) (bad) (bad) mov (bad) lea pop loop adc outsl je mov test cwtl dec insl loopne (bad) call inc push mov test dec push lret pop jno aaa inc dec jno or jmp lods pop outsb iret subl sti push dec sbb jo cli (bad) jg mov dec imul in int pop (bad) fsubrl cmc into pop leave push xlat stos mov jno outsb lahf and and cli mov and (bad) mov push scas (bad) ja loop push clc flds inc dec mov inc xchg int3 inc dec xor jg dec mov je test push loope inc dec cltd jmp jmp jb pop push cwtl loope xor (bad) (bad) (bad) lcall cmp lea mov mov mov inc loop adc jbe notl (bad) (bad) (bad) lcall insl and add mov rcl outsb fildl popf or mov mov push xor cmp mov xchg inc sub pop fidivl mov mov stc repnz lods mov pushl (bad) mov test icebp (bad) (bad) loope lock jecxz jl gs bound cwtl outsl (bad) (bad) sub leave sub int3 mov dec adc mov dec mov xor jp pop addr16 cmp (bad) and cmc push incl push push add mov dec idiv pop (bad) mov jo mul jg mov or dec loop shll pusha cwtl add dec inc dec fucom lcall rolb pop and fisttpll into (bad) (bad) (bad) call ja pop imulb adc and xchg pop pop mov jo inc inc jle dec xor outsl jmp bound jae outsb divps or or insb add pop or mov sub jns and aaa ss enter dec (bad) incl adc pop fwait push fisttpl dec or ja paddw (bad) incl dec mov (bad) fcompl pop (bad) mov jne cmpsb mov sbb jne test (bad) ljmp leave leave cs lds pop js jno sub xor sbb addl lcall (bad) lock adc inc inc aam (bad) (bad) popf in (bad) (bad) (bad) jmp (bad) stc into cmp std repz and add mov add mov sub mov das pop lahf aaa mov (bad) jno sbb sti (bad) (bad) in jns cmp sbb enter lds data16 xlat adc xchg in stc lret (bad) jg insb mov adc fs mov insb aam in and mov dec mov sbb imul add mov xor (bad) (bad) (bad) jg xor bound adc push push add (bad) bound mov leave int3 subl cmp (bad) (bad) cli push clc rolb push or fistpl bound outsl xlat fidivl gs pop fcmovb inc mov in and addr16 sti mov in jnp sub repz xor cmpsl loope in icebp cltd inc mov (bad) jg sbbb cmp sbb push roll or mov (bad) (bad) mov sub inc lret test ss pushf fwait jle pop (bad) (bad) (bad) mov fisubrl aas sahf cld lods cmp fistp pop pop js test push mov (bad) call fnsave push dec hlt fiadd and xchg jae jecxz cli cmc pushl dec or lcall jno or (bad) ljmp or scas mov lods or sub leave cmpsb ljmp xlat or cld outsl pushl pop sub and or and (bad) inc push xor mov fiadd push loop pop xor lahf push mov and mov inc test (bad) (bad) dec repnz es xor mov imul fs sbb incl in push rol push xor arpl push stos clc xchg (bad) (bad) ljmp mov adc adc push cld pop adc rolb sub lds push dec add lea fistp inc dec jmp xor mov aas mov sbb sbb popa gs add loopne test mov pop incl loope movsl rcrb sbb clc dec inc xchg jge loop ja sbb cli push cmpsb add cltd and dec mov hlt mov call das icebp xchg xor mov xchg pop es xchg add mov ret push out pushf enter (bad) aam mov adc jae movsl int3 imulb push repnz sarl (bad) pop fbstp fcomps pop push mov repnz jle lea add inc je and lret call mov jbe mov sbb xor into (bad) js ljmp mov add jge daa dec dec fimul and xchg jmp (bad) (bad) mov push cmp cltd fwait dec leave cmp xchg decb (bad) ja sti mov dec ret xchg fwait std dec fildl pusha fcmovnb xchg stc imul stos dec xor dec (bad) (bad) call stos rcll std scas cmpsb imul ret ss insl (bad) lods xor (bad) lcall xor inc in and sarb loopne push and xchg loop imul cmpb stos ror adc inc aaa add (bad) (bad) (bad) incl inc or cmp or inc in dec or adc push (bad) jecxz loope decl mov mov sub xchg lret sar (bad) call push cmp imulb inc cli enter mov je xchg jmp cmpsb (bad) (bad) (bad) incl (bad) mov inc xlat cmpl scas push mov adc clc (bad) (bad) (bad) (bad) mov mov mull push sbb and mov or jmp jmp (bad) (bad) (bad) lcall clc dec dec mov sbb xchg pop jo fwait pop mov sub addr16 shlb xchg lcall std and dec pop sbb out lret mov les sub mov dec mov (bad) (bad) (bad) jmp and in hlt xchg inc or in xchg leave dec xchg cs std add and jnp movsb pop mov dec sbb fldcw xchg rcrl mov (bad) out mov or sbb (bad) (bad) (bad) leave (bad) push mov jbe daa cmp je fstps xchg xchg call dec std imul hlt hlt fsts mov repnz jmp mov xor outsl jecxz in out div scas mov imulb mov pop pop adc jbe jecxz sub (bad) incl jmp mov sub jp cmpsl mov xchg fisubrl dec or mov or (bad) (bad) sub jg adc dec shrl outsl push loop cmp dec int cmpsb lcall (bad) fcmove test mov (bad) jne imul xlat movsb fimul xor or cld arpl push mov cmp xor (bad) jg sbb add andl inc fsqrt inc in stc pop cmc mov sbb (bad) repz fucom cs repnz (bad) (bad) (bad) call (bad) pushf dec loopne mov sbb ret orl (bad) jmp xchg xchg outsb push loope sub gs je getsec (bad) ljmp pushf dec sub mov lock repz xchg fistpll (bad) call loope push pop cld jp push push pop mov jle fstps inc aad jmp mov push sub xor cmp imul push push push lret fwait notl (bad) pushf mov fnstsw arpl pushf push inc je xchg je jo sub mov mov cmc inc popl mov clc xor mov aam out jae or sub (bad) fstl and (bad) pushl scas inc dec gs mov test mov cmp pop ja mov add scas cmpsb jp mov xchg loop mov loop pop pop mov xor ret scas pop (bad) (bad) pop cmp (bad) ljmp inc cmp cmp xor sahf (bad) mov mov push (bad) (bad) (bad) ljmp stc ret mov xchg cmc push push sahf jl outsb or or cmc and (bad) lcall jne in mov imul cs jl mov dec push int3 mov pushl or in fstpt rorl (bad) and dec rorb ret mov call pop mov cli or mov and das push mov std add or xchg dec mov sbb sub (bad) jmp adc mov stc sahf and scas fstpt sbb xor xchg in fcomp loopne pop add fstpt pop cwtd stos roll out out dec mov pop pusha jge xor sbb mov (bad) jg pop jno add xchg jp in jmp in daa ss or mov sbb fistpl rorl adc (bad) (bad) (bad) mov add (bad) ret fimul in leave mov push into subl xchg (bad) (bad) ljmp push fsubs xchg gs loope mov sbb call pop orb je and sbb ficom cli inc idivb jb stos cmp in sbb sbb xchg pushf jle push xlat (bad) (bad) (bad) inc sub dec (bad) (bad) jg faddp sti jmp gs xorb mov aad add (bad) incl mov popf movsb push mov dec xchg cmpsl mov sub sub (bad) in cmpsl inc cmp clc adc xchg adcb or fild push and mov mov popa in mov lock (bad) decl sub mov (bad) push les adc cwtl mov loop push and je rolb popa js mov pusha adc std hlt or adc rcrb ljmp decl xchg loopne pop sub xchg loope (bad) pop push js sbb or jg ljmp ror nop and into mov outsl mov mov xor cli mov mov sti or xor or dec xchg lods clc xor xchg push data16 (bad) mov pop rorl fiaddl int3 push and xchg push or pop mov lcall into push cmp insb pop push push xor mov mov test (bad) jmp imul push icebp mov pop arpl dec leave push mov pop cmp xchg (bad) call (bad) lcall rolb dec lret les lahf sbb push fsubs (bad) (bad) lcall fisubl cmp idivl and push jns cmc test or insb and ror jne lret (bad) jecxz daa dec das xor add lcall daa lds leave push (bad) fist out and das icebp jg cmp cmp xor decl test test (bad) aaa mov es adc push sub outsl hlt or cmpps inc test xchg mov inc mov lahf adc les bound dec or (bad) ja outsl call (bad) testl sub push (bad) jg and and and add jg arpl and and out jle das jns push pop push and pop mov sub xor pop dec notb (bad) push addr16 and in inc jbe inc jae ds cmp or mov xchg std imulb xor aaa cs xor push xchg mov dec sub mov insl sub push hlt imul xchg sub je mov push aaa or add cwtl or iret pop sbb das arpl and add or inc adc jge stos mov jo aam inc test outsl inc mov add lcall sbbb pop arpl insl inc or jmp imul pop push mov dec add lods fwait insb imul jo inc dec mulb es sbb jge add jae xchg insb shrb sbbl mov pop add imul outsb arpl push hlt dec mov gs push mov inc or mov add pop inc stos mov jecxz leave sahf in insb add jne fs stos emms leave push in lret jge add and pop inc jae jb leave push out jno inc js and jns outsl add mov addr16 imul mov cmp xor inc aam add pop stos and scas scas scas scas ss outsb or jne dec sub test push jle test mov inc push push mov push decl pop ja popa push out mov decl cltd sbb insl pop (bad) hlt push xor (bad) fnstsw pushl mov push movsb mov out (bad) xchg sub mov call mov nop adc push jno movl incl adc jmp (bad) mov hlt movl jg pop clc fs (bad) std cltd mov add insb push arpl psubd (bad) (bad) push or outsb cmp imul addr16 add aam dec std test pop xchg cwtl mov (bad) (bad) incl leave mov lods jecxz fdivs jne fild or shrl cmp (bad) (bad) mov enter mov and mov cltd xchg (bad) (bad) (bad) mov mov or or and or adc stos (bad) lcall sbb mov inc fdivl jno add aad mov mov pop mov push movsl in lahf xor mov js stc add mov push loope or push sub insb fs add out push imul insb sbb xor dec (bad) (bad) decl lahf repnz xchg push insb jnp add (bad) hlt or (bad) fnstenv adc cli (bad) (bad) ljmp cld fistp ficoml gs sti pop (bad) mov dec into sub (bad) mov aam movsl fisttp xchg fdivr (bad) ljmp (bad) shll jmp outsb xor mov sarb add (bad) (bad) (bad) jmp sbb or cmp add daa adc or and (bad) call mov mov aam mov push stc ficomp leave fldcw and incl mov push mov orl mov jle sbbl mov lcall push hlt (bad) (bad) ljmp fildl push fdivl or test call or or push in or mov pop jge hlt (bad) incl lock add inc push imul xorb hlt pushl insb sbb push imul aam loopne mov ficoml int3 dec fucom (bad) call test mov mov mov aad mov call xchg pushl ret push repnz mov cmpsb fldl mov (bad) pushl cli dec ss fisubl dec sbb scas (bad) dec add pusha jp inc ret out pusha fist mov test mov jns imul subl outsl and (bad) ljmp xchg ja int3 add mov das es (bad) (bad) mov sub mov sub mov cmpsl call ret (bad) mov sahf fldcw (bad) ficomp ret es pushf mov test decl pushf aas ss jmp addr16 jb push add adc mov jnp sbb (bad) (bad) call xchg or out fdivrl fisttpl aam roll clc mov push int ljmp les ja outsl ja mov out (bad) (bad) lcall jge push dec cmp pop or adc sahf gs scas (bad) clc sar imul pushl les loop mov push addl mov cmp cmpsl notl pusha sar test dec (bad) dec push scas fcompl fcos (bad) (bad) jmp fild cmp aaa push scas mov fidivr mov jmp repnz lret cmc push adc and sarb sub (bad) (bad) (bad) ficom fldenv jp,pn mov dec popa les sbb xchg sub aaa mov or sbb sub popa std add sub pop add jg andl imul std inc inc add pop ja aaa lods sub aam sbbl pop sbb sbb sbb or das ss sub pop xor lods sub adc cld mov xor mov cmpl jnp ret fild mov or and cli or or ret seto repnz hlt adc out cld and sbb into sbb rorl fisttp (bad) inc sub lds std lods jg jmp sbb addl aad push add (bad) push (bad) (bad) mov adc mov decl js inc outsl (bad) loopne jmp ret shrb daa cmp inc mov popf sti jmp (bad) (bad) (bad) ljmp jbe int3 repnz test pop stos clc scas adc (bad) inc jmp aam idiv (bad) (bad) (bad) jmp dec jp iret inc gs (bad) xchg push cmpsb scas mov or addl (bad) incl cmpsl xchg cmp xor dec cmpsl in in cmp (bad) (bad) call lcall lock mov popa sar mov fsubs mov stos xchg clc repz mov subb fwait xchg and and std idivl imul sti aas jno or mov pop fs (bad) ljmp les cmc aas ret shrl mov icebp aas rorb and (bad) (bad) inc cmpsl out aas inc cmpsb mov insb scas add aas xor aad mov std std into (bad) call shlb stos in das dec pop loope les aas (bad) (bad) (bad) call inc int mov addr16 push mov xchg aas and (bad) loop mov (bad) jmp jp popa push pop sarl jl mov das lea mov inc and (bad) (bad) (bad) aas movsl jmp jg sub jge mov inc rcr push arpl int3 and (bad) (bad) (bad) (bad) call cmp jp and cmp mov cmp std xlat cmp mov sbb (bad) (bad) pushl add movb aaa fldt cmp jno shlb (bad) out dec nop pop cmp xchg (bad) cmpsb mov adc mov sub dec in (bad) (bad) jg ss scas into imul faddp jge call mov xchg cmp and andl dec sahf adc (bad) scas push xchg jge loop cld fildll enter fmuls jae inc mov addb xchg and stos dec inc push push push and xchg stos fs push push push xor dec inc push xchg push and xchg push fs push leave push xor push inc push xchg mov imulb fcom add jg incl push gs popa jae inc jb outsl jb dec gs jo gs insb insb outsl arpl inc lods jne fistpll add imul inc jb arpl inc insl fwait stos andb dec and mov ljmp stos ljmp out fistl jae push sti testb js adc imul into (bad) std push outsl insb jne adc sahf jae jnp xlat mov push and dec gs sub jae dec outsl rorb (bad) sti ficompl dec jo outsb dec jne xor or push or insl sti mov pop inc outsl insl insl popa push dec pop dec insb mov sub sub add bound outsb sbb in mov or push xor mov jnp dec popa pop jae xor dec popa fadds fldt push outsl push jl,pn out js into dec outsl jne push outsl mov push fistl je jne (bad) je popa fsts push pop sub or and pop pop or lahf rcll (bad) in jns gs dec inc dec inc push movsb push testb insb push (bad) fcmovu jo dec scas push push pop mov dec insb adc mov push or xchg pusha push imul pop fwait jge fs jle nop bound fadd mov hlt cmp or adc fsts insl imul mov insb andb sbb adcl lcall push or dec mov out adc adc xor adc je rcl and andl outsw hlt push cmp push sub ja mov lods aam jae bound ljmp ret adc push xchg or add mov add inc jae popa jnp mov jne jns jb add insb mov inc inc scas aas mov mov test jns sub ret imul inc ret jns andl and inc push fs adc out jne orl insl (bad) pop inc dec lods xor imul and scas into adc ret imul es insl and popa addr16 cmp lahf stc push out or aad or arpl imul shlb push or adc rcrl sub orl pusha or fldcw add inc cmp sbb jb outsl dec das pop pop psllw inc js push loope int xorl loopne push mov mov xor add outsl sarb mov je mov mov popa je fidivl xchg mov mov jo mov or ljmp sbb cmpsl outsb jae stos adcb lahf sbb fdivr dec inc mov push in fs or adc in insb ss insl pop (bad) rcr push mov insl sbb pop popa in jbe or push jns inc sub or in xchg mov pop fcomps xchg adc xchg push shlb or jg xor aaa mov bound arpl add call outsb or dec add inc loopne ja pop push int xchg aam push push ss lods pop xchg rorl addr16 xchg and pop pop or insb rclb fadds mov xchg sub and mov insl ret pusha popa jp jo jb inc push sbb and push cmp sub or cmp inc cmp (bad) xchg fcmovbe and addr16 lock sub (bad) jns adc mov rorl lods insl int jne addr16 pop jl js jb arpl jns inc arpl mov xor je adc int mov movsb or rep adc (bad) inc mov inc and andl lods cltd (bad) dec test xor imul or fwait in jae mov xchg insl test inc pop jo jne push lock jge or lods insb sbb xor cmp inc mov xor in adc aas adc or out and cmp bound xchg push daa les cmpl icebp dec push addr16 adc mov or ss ds xor fs jle ja or inc add fsubp and adc cmp mov (bad) xor push mov inc jp push cmpsl inc jmp outsb fs or fs lds mov jecxz call jp pop rorl push add (bad) movsl (bad) cmp push inc pop xor mov mov jnp pop or adc cwtl je bound add out je nop clc jne inc adc (bad) inc shrb pop inc insb je jge xchg sub sbb and add mov sbb movsl outsl push ljmp fwait mov insb imul imul push push sub inc lds mov xchg sahf outsb mov (bad) (bad) data16 mov ret loop test or pop sarb add and cmpsb scas dec testl push jo xor mov push lods jb sbb add and xor sahf bound pop (bad) ret mull repz pop push jae test popa scas int int adc sbb dec rcll test fcomps mov sbb pop pop les sub mov mov cmp pusha or int3 into push cwtl sub ja fimull imul push push je and aaa in or xchg pop mov (bad) or and insl imul and push (bad) arpl and ret ret mov xchg adc movsb aam ja add roll je pop push clc imul adc in lcall lods imul dec sbb in or js jae sub mov insb popw jb inc or or push je add push add lahf shlb (bad) loop outsb daa xlat and mov mov cmp add dec pop call in push push push add add lahf xchg push cltd sub mov outsb jp aas fdivr jbe inc add add sub add loopne add or or xor in mov or sbb inc or add sti mov xor add pop or fldlg2 lods pop cmp sub push mov cmp add pusha das cwtl add add cmpsl or push insb popa and fiadd and xlat call add or add (bad) cs (bad) jne cli sbb nop pop daa jo mov pop add jmp pop lret sub dec sbb sbb adc add incl add add xor inc add call int jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jae xor sub jb shl mov inc xor je mov add jne mov sub adc adc add jne mov sub adc adc jne inc add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp nop mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja cmpb jne mov mov shr rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call popa lea push cmp jne sub jmp 