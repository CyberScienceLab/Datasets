pop add add add add add add add add add add adc insb add add adc mov adc pushf add add subb adc int3 add add add add add add add add add add add add add add add add adc add add adc jg adc nop add add add add add add add add add add add add add add add add add add adc dec add add add push add xorb add add adcb adc mov adc push add or adc aad adc loope adc icebp add add add addb adc adc adc and adc ja add xor adc js add or add add add andb add adc adc add movsl add add add add adc lret add add add add add add add add add adcb adc push add add add add add add adc pop add add adc jns adc xchg add add add add add add add add add add add add add add and add cmp adc dec add adc add pop add andb or add mov adc int add mov add adc pop add sub adc stc add add test add push push adc sub adc cmp add dec push adc popa push adc mov add jge adc lea adc cmp push adc scas push adc mov push adc inc add sbb adc in push adc lods add addb andb inc add addb adc push pop adc mov add xor adc inc pop adc dec pop adc popa pop adc jno adc jle adc mov adc push pop adc test adc mov pop adc fadds adc out adc cli pop adc imul adc sbb adc sub adc cmp adc imul orb add or add adc je adc and add mov adc pushf or add or add or adc fmuls adc inc add addb add pop add add push add cwtl push add cltd push add add add cltd push add add add adc push add add cltd push add cltd push add push add push add cltd push add add add fwait push add add add add add stos push add add add stos push add add add lods push add add add add mov or cmp push add mov add push mov add stc mov or aam push add add add rclb add add ret add add push ret push add lds add add popa lds add (bad) push add add add add add leave push add add add leave push add lret push add add add add add add stos int add add xlat rclb add add or push add aad add add add aad add xlat push add add add add add push add fist add add inc fist add fist add add (bad) fist add add add add loop add add add push add jecxz add add add jecxz add add add add aas addl push add add add add pop in add add add add add add stc in add add add add add add mov add add add add add jle push add add add add add imul add add add add add dec call add add add add add ss add or add add add inc ljmp or add add add gs add push add add add add xchg in push add add add add (bad) in push add add add add add add in push add add add add add add add push add add add add add add inc icebp push add add add add add add stos cli push add add add add add add and push add add add add add add mov add add add add add cmp push add add add add add add xlat std push add add add add add add mov push add add add add mov push add add add add add add lods add add add or add add add rolb push add add or add add add adc push add add add add add add aas add add add add add add add dec add add add add add add outsb push push add add add add add add add sqrtps xchg push add add lock or add test add imul add and add add add dec pop push add add add add add add jl push add push add add add add test push add add add add add add mov and or add fisubl push add add xchg and or add inc and add add add add dec sub push sub or add xor push add add data16 or add pop sub or add push sub add add add sbb push add xor or add inc xor or add gs add add sahf ss add add add add pop cmp cmp or add loopne push add add jp push add add fdivrs push add add sbb push add add add add xor add push add add in push add add test add add add add sub add add add add add add lret add dec push add add jbe push add fs add push add add add inc add dec push add dec push add dec push add dec push add dec push add dec push add dec push add dec push add dec push add dec push add dec push add add push add push add dec push add dec push add dec push add dec push add dec push add push add push add push add push add push add push add dec push add push add dec push add dec push add dec push add dec push add push add push add push add push add push add push add dec push add dec push add push push add push push add push push add push push add push push add push push add push add push add push add push add push push add push push add push push add push push add push push add push add push push add push push add push add push add push add push push add push push add push push add push push add push push add push push add push push add push push add push push add push add push add push add add add push push add push push add push push add push push add push push add push push add push push add push push add push add push add push add push push add push push add push push add push push add push push add push push add push push add push push add push push add add push add push add push add push add push push add push push add push add push add push push add push push add push push add push push add push push add push push add push add add add push push add push push add push push add push push add push push add push push add push push add push push add push push add push push add push push add push push add pop push add pop push add pop push add pop push add pop push add add push add push add pop push add pop push add pop push add pop push add pop push add pop push add pop push add pop push add pop push add pop push add pop push add pop push add pop push add push add push add push add push add pop push add pop push add pop push add pop push add pop push add pop push add pop push add pop push add push add pop push add pop push add pop push add pop push add pop push add pop push add pop push add pop push add pop push add pop push add pop push add pop push add pop push add push add push add pop push add pop push add pop push add push add push add push add pop push add pop push add pop push add pop push add pop push add pop push add pop push add pop push add pop push add pop push add pop push add pop push add pop push add pop push add pop push add pop push add pop push add pop push add pop push add pop push add pop push add pop push add push add push add push add popa push add popa push add popa push add popa push add bound sbb add bound and bound daa bound daa bound push bound pop bound pop bound xchg add bound mov bound mov bound out bound out bound sbb push add arpl and add push add push add push add arpl andb fsubl add arpl fisub add fs add fs add fs add fs add push add push add push add add push add push add add add add mov test add add push sbb add cs add addr16 add imul sub add push add push add insb push add push add push add push add outsb push add outsl push add outsl push add jo add jo add jo add jo add push add push add push add jno add jb add jb add jb add push add add push add push add je add je add js add js add js add js add js add jp add jp add jp add jp add push add jle add push add jg add jg add adcl inc adcl add push add adcl sbb inc or or xchg xchg add add xrelease push add add add add add push add add add add inc push add add add add mov add add add add xchg push add adc add add notb push add push inc add add add add add add add add add add add add fistpl push add add add add add push add push add add add add loopne push add push add or pop lods push add add add add add push add scas push add add add add pop mov add mov add add add inc add add add scas push add scas push add scas push add push add push add push add scas push add scas push add scas push add scas push add mov add add add add add mov add mov add and jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp jmp add push call add add add xor add inc add add add add test dec xchg or sub cli lds add add add add outsl push arpl add add int3 xor jge fisubl test test dec inc les adc jae dec mov pop out jb lods xor or stos add xchg push fild add add add add push cmp push push push cmp push aaa push push push add or inc inc aaa cmp push pop add in jmp and add dec inc outsl jb xor xor fild add push sbb add add add add jl add popa xor and sbb sub adc add arpl arpl add jae adc add add add add sbb popa xor sbb add add add add add jnp add popa xor and sbb pop add push add arpl arpl add jae adc add add add add sbb popa xor sbb add add add add add add or push imul add add add mov adc sbb add xor incl sub add add add popa insl xor add add or add add adc adc add add or push imul add add add add fs add insb je add add fdivr loopne adc dec inc add add add dec add jmp adc inc js data16 dec dec add add add add add add add add add add add add add add sbb add add add sub add add add add add xor add add sbb add jb xor add add adc add lea add add add movsb add add add add add add add dec add add inc outsl bound push push push push and outsb outsl ja add xor aaa cmp xor xor and xor xor cmp xor add add add add add add add add add add in mov add add add inc add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add mov add add add add add dec add add (bad) fdivr loopne adc dec inc add add add dec add (bad) in add outsl bound inc dec add (bad) out add inc outsl bound addb add (bad) fildl test or or or or or or or adc adc adc sbb or or or adc or or or or or or or or or or or or or add or adc push push adc push push push push adc or or or adc or or adc or or or or or or or or or or or or or inc add or das add add add adc (bad) fldl add or les aas add add add add add add add add add or add add add add add add add add add or adc add add add add add add add add adc add and xor adc mov adc xor (bad) roll and icebp arpl push mov xchg push fs ret ss rclb gs ret (bad) jne repz daa xchg movsb test movsl mov aad cmc push data16 xchg cmpsb mov (bad) out aaa inc push addr16 xchg cmpsl mov xlat out adc add add add add add adc and adc push popa jno adc mov push (bad) lock loope (bad) xchg inc push adc and addl xor push mov ss loop mov ret (bad) jne repz xchg movsb test movsl mov aad cmc push data16 xchg cmpsb mov (bad) out daa aaa inc push addr16 xchg cmpsl mov (bad) fiaddl or add add add add add mov (bad) or cmp xchg es mov or mov push (bad) push adc add pop setp and ret pop stos iret sahf xor mov lret and jnp xchg stc mov dec mov xchg insl dec out mov add xor mov jo fldenv fcomp addr16 out notl cmp sbb xor add mov mov cmp xor push shr sbb (bad) dec gs scas jnp dec xchg mov lods (bad) mov jle adc stos push int3 (bad) pop sub add push xor scas jle stos cwtl movsl adc aaa nop add cld data16 sahf adc add and mov lea mov gs pop arpl mov sbb sahf scas fldcw jle daa jae das jnp outsb insl aad fistp jge outsb loope std adc outsl mov xchg lds dec xchg stos sar xor cmp ret jbe inc fstpl add xor inc adc (bad) cmc fidivl inc push or hlt pop std outsl in xchg xchg (bad) shl pop push test pop push and mov fistpl incl mov (bad) test push in lea push push mov mov shrb push insb fucomip mov mov mov jge mov pushf xorb pop cmp jle fsubp incl rcr pop lods push xchg mov mov ja in add (bad) ret repnz (bad) xchg cmp scas out sarl fwait push xchg das pop test adc push xlat push repnz jno pop rcrb jmp movsl mov inc (bad) add push addr16 in mov mov jnp gs faddp out arpl jge mov mov cli (bad) pop xchg es arpl adc rorl sbb cmp xchg dec xchg jmp jg adc sub mov fcmovbe out sar aas cwtl xchg push mov pop or sbb fcmovu push loopne pop outsb pop fidivl sub into incl mov push lea jnp fwait cli ja lods sti inc sahf jno sti dec dec jo aam add ljmp aas hlt jg imulb les xorl or inc mov das dec int scas ss sahf lret insl lea mov jge dec add fcmovu mov mov (bad) mov stc jg (bad) fdivr add sub sbb mov (bad) cmp fsts arpl pop out int3 fmul push js rcrl jge mov lcall xor mov (bad) xchg cmp inc sbb mov scas lret dec cwtl aad movsl rcrl ret (bad) sub imul out cld out mov arpl (bad) add (bad) cmp add inc rcrl int daa ja mov sbb mov cmc push insl insl fstpt loop push lods jae mov mov call vpshlb jbe into lret mov xchg inc loopne lock lret add fistl fsubl push aas in inc divl (bad) cld aam aam loopne in add xchg adc arpl pusha cld out (bad) mov mov xor ss mov inc outsl outsl pusha sub divl jae sti inc mov jno int3 insl add xchg mov lea or (bad) mov (bad) fisttpl arpl xor aam pop dec incl popf hlt push mov rolb out fstpt add hlt inc negl gs mov lahf jno inc pop out incl es push jmp iret cli push inc mov jp arpl xchg inc stos test (bad) mov (bad) idiv jecxz xor sub cs (bad) cmp jo inc movsb add xor in addr16 movsl xor (bad) cmp pop repnz rcrb rcrb stos sub jmp (bad) insb mov xor sti aas movsb rorb mov out mov adc mov popf sbb imulb cltd lds push cmp incl movsl adc fldcw les add leave xchg xchg out int3 jnp cmp mov sbb jmp add mov jge lahf mov (bad) mov aaa push (bad) mov int3 cmc cmp hlt xchg sub (bad) fsubr mov (bad) cmp imul cmpb add lods hlt int3 sub test inc out lods nop xlat pcmpeqw ljmp iret mul in (bad) jae rol scas stc lcall mov add clc dec stc test add pcmpgtb hlt cmpsl loope mov cmc jae mov out popf nop out out xchg xchg out enter or fwait out mov push xor dec pop cmpsb je in stos xor leave mov or testb aam pop fcompl push mov pop stos incl inc hlt incl inc mov ljmp mov lods (bad) popf outsl negb cmp cli outsl incl inc jne in stc mov cmc jnp mov test leave std push and int cmc pop sbb ret mov add add mov or call sbb inc xor lds out incl frstor mov pop pushf or fsts mov jle mov repz cs ljmp les mov ljmp mov pushf mov scas mov jge insb cmc sub add rorb ljmp jo gs outsl mov aaa incl or test push jge aas test loop inc jmp mov ret mov mov cmp mov stos and cmc jg aas lret xor sub mov testb rolb lock inc cmp sbb iret int icebp fisttpl jnp stos imul cli (bad) fcmove mov out sbb push xchg lret pop cwtl (bad) cmp push hlt sub pop push test jg jbe fistpll jo mov mov sti inc aas aad pop xchg (bad) xor sbb add cmpsb xor ss outsl (bad) mov mov inc dec xlat cli icebp hlt incl test lret sub sub cli arpl (bad) cmpsl ret push sub incl pop into lds shrl sbb enter sahf xchg ficompl lods mov lock scas lret jg incl mov mov sbb sti dec jnp popf inc int3 rolb out sub pop pop mov sbb cltd daa add mov std xchg jnp fist jp ficompl incl add loop pop call xchg imul mov popf mov mov xor mov idivl fsubrs (bad) xor pushf push push cmp or inc sbb mov xchg fistpl inc cmp push out and jnp stc js jae std inc xchg arpl adc outsb push inc jne (bad) gs movsl into hlt sahf (bad) fwait inc ficom imul mov (bad) xor movsl pop loope std imul add ret pop mov and push iret lods push (bad) jp inc mov mov push addr16 ss jne not test aad jle pop ds ret mov push (bad) fstpt orl sbb push mov sarl das das xor xchg int daa pushf (bad) push aam xlat vpshlq jmp nop cmp mov mov add jo cmp lds inc insl and outsl fnsave xor scas stc jbe gs insl dec mov xlat mov aas aad jne lods ja ret fsubr fistpl out addr16 aas dec push leave idivl movsl in fdiv xor inc fs (bad) out into jle inc mov rorb cmpsl outsl icebp jg pop jo roll sbb push stc scas xchg push incl adc fistpl enter xor jge jg jp insl add leave lods lods scas (bad) in sahf fidivl add (bad) dec xchg mov add imul or lods add and mov or mov (bad) mov add cld adc sub xor jl pop pop hlt pop sti push mov add fnstsw fisubl sub cmc sub in loopne (bad) xor (bad) popf add in inc adc dec xchg jbe subl inc and fild add cmp shlb sub xor int stos lret sbb add imul mov jp idivl scas out cmp dec in pop fstps sub shll movsb xor int3 mov jnp das out (bad) frndint out movsl push lods mov (bad) mov push mov or pushf inc and mov movsb xchg or or mov xchg adc lahf xchg dec xchg ljmp mov je out (bad) jo mov cmpsl and add in scas aam cmp mov jno push sbb lea pop hlt jg jae stos mov cmpsl mov jge movl es idivb push xor idiv jne into hlt out ffree pop mov sti fdivrp mov pushf and xchg addr16 inc sti mov jecxz jl mov mov (bad) cmp mov jmp mov scas inc cmpb idiv add fnsave pop incl adc lods dec fwait aad jno mov (bad) (bad) jge push fwait pop jg ss xchg mov test add sarl sub xchg incl imul test add or sbb inc mov daa movntps sub hlt mov int scas scas movntps mov jge cmp mov pop mov rcr pop call mov cwtl sub xchg mov xor jnp and inc aad stc sahf mov pop iret clc mov xchg pop cmp (bad) or add add inc stos repz fsubrl lods rorl sbb push insb fsubl sbb hlt pop movsb (bad) (bad) int fcompl (bad) insl ds mov jle pop mov int3 jbe and aaa cmp imul fcmovu (bad) pop stc lds (bad) mov xchg push or and idivl clc outsb mov aas jecxz mov sti xor (bad) xor push add or ds push jb push flds (bad) fxam out push and xchg mov dec cmp mov push test sbb jno lea repnz repnz cmc sbb dec test (bad) lcall hlt cmp mov (bad) in mul lahf dec rcll mov inc mov fdivrp add lods push push ljmp (bad) xchg mov xchg push ficompl std outsl jne cmc inc mov sbb icebp sbb pop mov scas out push xchg pop call stos mul fs cmc jnp jge pop xchg movsl rcrl xor dec (bad) out pop push fldcw lret enter call movsl xchg and push out jge loopne (bad) add stos pop (bad) mov cmp notb push cwtl jl mov lock lods push int3 (bad) pop mov pop rcrl jg cmpsl fs xchg out jnp sbb arpl and mov xor out ds stos push jne mov ror cmpsl gs fs lret enter sub out in cld mov in fwait xchg pop mov dec dec adc sub pop cld mov cmpsb inc jle,pn aaa xor jno cli inc inc imul inc mov cmp jle in std ss repnz jle sahf popf mov mov mov (bad) or fnstenv or test pop repz sar add jg jecxz fdivr daa xor sbb fcmovnu jge lret outsb ja aad jle mov std paddsw dec fstpt inc cmpsb cmp fs or sub dec sbb cli jg pop (bad) fcos in push sahf push push push xor cmp dec add add add add cmp dec add add add add add add add add dec add add add cmp dec add add add add add aas addb cmp dec add add add add add js inc dec dec add add add add add push cmp dec add add add add add cmp dec add add add add add cmp dec daa adc add add or add add add add add inc dec dec add add add add das data16 add add add add add add data16 add add add add add add add add add push add add add add add add add add cmp dec add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl call dec dec add add add add add cmp dec add add add add add cmp dec add add add add add add add add add inc add add cmp dec add add add add add add inc dec dec add add add add add push add add add in add add add jae and je imul add add add add add add add add add add add add add add add add add add outsb jne insb add add add add bound outsb fs bound add add add add add push arpl add add add add and add add add add dec gs outsl outsb add add add add inc je insl insb outsl outsb add add add add push add add add add jae imul jae add add push add add add add add add add add add jae imul outsb add add add add addr16 jne dec inc insb outsl outsb add add add add outsl jb imul add or push insb imul imul jne outsl inc outsb gs je add add push jns gs jne add add inc push insb imul add add dec insl and add push bound outsb fs bound add add add add add push arpl add add add add and add add add add dec gs outsl outsb add add add add inc je insl insb outsl outsb add add add add push add add add add jne insb push inc pop push add add add add add outsb jne insb push inc pop push add add add add add dec jae gs inc pop push add add add add add popa insb je popa addr16 inc pop push add add add add add arpl insb push gs dec jae push dec dec bound insb add add or insb insb push gs push inc pop push add add add add add push insb imul add add inc push insb imul inc insb imul fs jne je add or jb inc insb imul add add inc push insb imul inc insb imul fs jne je add or inc outsl insb outsl jb jns gs jne add add inc push insb imul insb outsl jb jns add add dec outsl outsb add add je jo jne jae je outsl outsb add add add add insb gs jne jae je outsl outsb add add add add outsl je outsl insl dec jne jae je outsl outsb add add add add jb addr16 jae je outsl outsb add add add inc dec dec add add add add add add lock add add cmp dec add add add add add add add add add adc add add add add add pop and add mov (bad) fdivr loopne adc dec inc add add add dec add (bad) in add outsl bound inc dec add (bad) out add inc outsl bound addb add (bad) fildl test or or or or or or or adc adc adc sbb or or or adc or or or or or or or or or or or or or add or adc push push adc push push push push adc or or or adc or or adc or or or or or or or or or or or or or inc add or das add add add adc (bad) fldl add or les aas add add add add add add add add add or add add add add add add add add add or adc add add add add add add add add adc add and xor adc mov adc xor (bad) roll and icebp arpl push mov xchg push fs ret ss rclb gs ret (bad) jne repz daa xchg movsb test movsl mov aad cmc push data16 xchg cmpsb mov (bad) out aaa inc push addr16 xchg cmpsl mov xlat out adc add add add add add adc and adc push popa jno adc mov push (bad) lock loope (bad) xchg inc push adc and addl xor push mov ss loop mov ret (bad) jne repz xchg movsb test movsl mov aad cmc push data16 xchg cmpsb mov (bad) out daa aaa inc push addr16 xchg cmpsl mov (bad) fiaddl or add add add add add mov (bad) or cmp xchg es mov or mov push (bad) push adc add pop setp and ret pop stos iret sahf xor mov lret and jnp xchg stc mov dec mov xchg insl dec out mov add xor mov jo fldenv fcomp addr16 out notl cmp sbb xor add mov mov cmp xor push shr sbb (bad) dec gs scas jnp dec xchg mov lods (bad) mov jle adc stos push int3 (bad) pop sub add push xor scas jle stos cwtl movsl adc aaa nop add cld data16 sahf adc add and mov lea mov gs pop arpl mov sbb sahf scas fldcw jle daa jae das jnp outsb insl aad fistp jge outsb loope std adc outsl mov xchg lds dec xchg stos sar xor cmp ret jbe inc fstpl add xor inc adc (bad) cmc fidivl inc push or hlt pop std outsl in xchg xchg (bad) shl pop push test pop push and mov fistpl incl mov (bad) test push in lea push push mov mov shrb push insb fucomip mov mov mov jge mov pushf xorb pop cmp jle fsubp incl rcr pop lods push xchg mov mov ja in add (bad) ret repnz (bad) xchg cmp scas out sarl fwait push xchg das pop test adc push xlat push repnz jno pop rcrb jmp movsl mov inc (bad) add push addr16 in mov mov jnp gs faddp out arpl jge mov mov cli (bad) pop xchg es arpl adc rorl sbb cmp xchg dec xchg jmp jg adc sub mov fcmovbe out sar aas cwtl xchg push mov pop or sbb fcmovu push loopne pop outsb pop fidivl sub into incl mov push lea jnp fwait cli ja lods sti inc sahf jno sti dec dec jo aam add ljmp aas hlt jg imulb les xorl or inc mov das dec int scas ss sahf lret insl lea mov jge dec add fcmovu mov mov (bad) mov stc jg (bad) fdivr add sub sbb mov (bad) cmp fsts arpl pop out int3 fmul push js rcrl jge mov lcall xor mov (bad) xchg cmp inc sbb mov scas lret dec cwtl aad movsl rcrl ret (bad) sub imul out cld out mov arpl (bad) add (bad) cmp add inc rcrl int daa ja mov sbb mov cmc push insl insl fstpt loop push lods jae mov mov call vpshlb jbe into lret mov xchg inc loopne lock lret add fistl fsubl push aas in inc divl (bad) cld aam aam loopne in add xchg adc arpl pusha cld out (bad) mov mov xor ss mov inc outsl outsl pusha sub divl jae sti inc mov jno int3 insl add xchg mov lea or (bad) mov (bad) fisttpl arpl xor aam pop dec incl popf hlt push mov rolb out fstpt add hlt inc negl gs mov lahf jno inc pop out incl es push jmp iret cli push inc mov jp arpl xchg inc stos test (bad) mov (bad) idiv jecxz xor sub cs (bad) cmp jo inc movsb add xor in addr16 movsl xor (bad) cmp pop repnz rcrb rcrb stos sub jmp (bad) insb mov xor sti aas movsb rorb mov out mov adc mov popf sbb imulb cltd lds push cmp incl movsl adc fldcw les add leave xchg xchg out int3 jnp cmp mov sbb jmp add mov jge lahf mov (bad) mov aaa push (bad) mov int3 cmc cmp hlt xchg sub (bad) fsubr mov (bad) cmp imul cmpb add lods hlt int3 sub test inc out lods nop xlat pcmpeqw ljmp iret mul in (bad) jae rol scas stc lcall mov add clc dec stc test add pcmpgtb hlt cmpsl loope mov cmc jae mov out popf nop out out xchg xchg out enter or fwait out mov push xor dec pop cmpsb je in stos xor leave mov or testb aam pop fcompl push mov pop stos incl inc hlt incl inc mov ljmp mov lods (bad) popf outsl negb cmp cli outsl incl inc jne in stc mov cmc jnp mov test leave std push and int cmc pop sbb ret mov add add mov or call sbb inc xor lds out incl frstor mov pop pushf or fsts mov jle mov repz cs ljmp les mov ljmp mov pushf mov scas mov jge insb cmc sub add rorb ljmp jo gs outsl mov aaa incl or test push jge aas test loop inc jmp mov ret mov mov cmp mov stos and cmc jg aas lret xor sub mov testb rolb lock inc cmp sbb iret int icebp fisttpl jnp stos imul cli (bad) fcmove mov out sbb push xchg lret pop cwtl (bad) cmp push hlt sub pop push test jg jbe fistpll jo mov mov sti inc aas aad pop xchg (bad) xor sbb add cmpsb xor ss outsl (bad) mov mov inc dec xlat cli icebp hlt incl test lret sub sub cli arpl (bad) cmpsl ret push sub incl pop into lds shrl sbb enter sahf xchg ficompl lods mov lock scas lret jg incl mov mov sbb sti dec jnp popf inc int3 rolb out sub pop pop mov sbb cltd daa add mov std xchg jnp fist jp ficompl incl add loop pop call xchg imul mov popf mov mov xor mov idivl fsubrs (bad) xor pushf push push cmp or inc sbb mov xchg fistpl inc cmp push out and jnp stc js jae std inc xchg arpl adc outsb push inc jne (bad) gs movsl into hlt sahf (bad) fwait inc ficom imul mov (bad) xor movsl pop loope std imul add ret pop mov and push iret lods push (bad) jp inc mov mov push addr16 ss jne not test aad jle pop ds ret mov push (bad) fstpt orl sbb push mov sarl das das xor xchg int daa pushf (bad) push aam xlat vpshlq jmp nop cmp mov mov add jo cmp lds inc insl and outsl fnsave xor scas stc jbe gs insl dec mov xlat mov aas aad jne lods ja ret fsubr fistpl out addr16 aas dec push leave idivl movsl in fdiv xor inc fs (bad) out into jle inc mov rorb cmpsl outsl icebp jg pop jo roll sbb push stc scas xchg push incl adc fistpl enter xor jge jg jp insl add leave lods lods scas (bad) in sahf fidivl add (bad) dec xchg mov add imul or lods add and mov or mov (bad) mov add cld adc sub xor jl pop pop hlt pop sti push mov add fnstsw fisubl sub cmc sub in loopne (bad) xor (bad) popf add in inc adc dec xchg jbe subl inc and fild add cmp shlb sub xor int stos lret sbb add imul mov jp idivl scas out cmp dec in pop fstps sub shll movsb xor int3 mov jnp das out (bad) frndint out movsl push lods mov (bad) mov push mov or pushf inc and mov movsb xchg or or mov xchg adc lahf xchg dec xchg ljmp mov je out (bad) jo mov cmpsl and add in scas aam cmp mov jno push sbb lea pop hlt jg jae stos mov cmpsl mov jge movl es idivb push xor idiv jne into hlt out ffree pop mov sti fdivrp mov pushf and xchg addr16 inc sti mov jecxz jl mov mov (bad) cmp mov jmp mov scas inc cmpb idiv add fnsave pop incl adc lods dec fwait aad jno mov (bad) (bad) jge push fwait pop jg ss xchg mov test add sarl sub xchg incl imul test add or sbb inc mov daa movntps sub hlt mov int scas scas movntps mov jge cmp mov pop mov rcr pop call mov cwtl sub xchg mov xor jnp and inc aad stc sahf mov pop iret clc mov xchg pop cmp (bad) or add add inc stos repz fsubrl lods rorl sbb push insb fsubl sbb hlt pop movsb (bad) (bad) int fcompl (bad) insl ds mov jle pop mov int3 jbe and aaa cmp imul fcmovu (bad) pop stc lds (bad) mov xchg push or and idivl clc outsb mov aas jecxz mov sti xor (bad) xor push add or ds push jb push flds (bad) fxam out push and xchg mov dec cmp mov push test sbb jno lea repnz repnz cmc sbb dec test (bad) lcall hlt cmp mov (bad) in mul lahf dec rcll mov inc mov fdivrp add lods push push ljmp (bad) xchg mov xchg push ficompl std outsl jne cmc inc mov sbb icebp sbb pop mov scas out push xchg pop call stos mul fs cmc jnp jge pop xchg movsl rcrl xor dec (bad) out pop push fldcw lret enter call movsl xchg and push out jge loopne (bad) add stos pop (bad) mov cmp notb push cwtl jl mov lock lods push int3 (bad) pop mov pop rcrl jg cmpsl fs xchg out jnp sbb arpl and mov xor out ds stos push jne mov ror cmpsl gs fs lret enter sub out in cld mov in fwait xchg pop mov dec dec adc sub pop cld mov cmpsb inc jle,pn aaa xor jno cli inc inc imul inc mov cmp jle in std ss repnz jle sahf popf mov mov mov (bad) or fnstenv or test pop repz sar add jg jecxz fdivr daa xor sbb fcmovnu jge lret outsb ja aad jle mov std paddsw dec fstpt inc cmpsb cmp fs or sub dec sbb cli jg pop (bad) flds cmp dec add add add add add add add add add add bound add add push add jae push add add add add bound add add push add jae push add add push add add add inc dec dec add add add add add add add add jmp sbb push das das outsb jae popa outsl bound arpl das js jo xor xor add js popa arpl je bound imul daa and cmp xor inc gs gs jp push arpl arpl fs aas or cmp jo gs and insb outsb jae js daa popa outsl bound outsb jae insl gs das daa and js jo imul je outsl insb imul xor xor data16 insl gs jb and cs or data16 inc and insb outsb jae jb cmp je jo das das ja ja ja outsl jb das xor cmp das xor das xor sub jae outsb je js outsb jae daa and insb outsb jae imul jo das das outsb jae popa outsl bound arpl das imul daa or and data16 arpl jo imul cmp outsl jne cmp cmp arpl cmp cmp xor aaa fs arpl sub sub cmp data16 cmp daa or and insb outsb jae gs cmp je jo das das outsb jae popa outsl bound arpl das gs data16 xor xor daa or and inc outsl insb outsl jb jo arpl xor gs data16 insb outsl jb jo arpl or and push imul insl outsb jae outsl outsb xor aaa cmp gs data16 js insb pop inc imul outsb or and push imul insl outsb jae outsl outsb ds gs data16 js insb pop inc imul outsb or cmp jb data16 arpl jo imul cmp data16 arpl jo imul cmp outsl jne cmp cmp arpl cmp cmp xor aaa fs arpl sub sub cmp data16 cmp daa or and insb outsb jae jo cmp je jo das das outsb jae popa outsl bound arpl das jo data16 xor xor daa or cmp jb data16 arpl jo imul cmp data16 arpl jo imul cmp outsl jne cmp cmp arpl cmp cmp xor aaa fs arpl sub sub cmp data16 cmp daa or and insb outsb jae jo outsl je jae outsl jo daa push das das outsb jae popa outsl bound arpl das jo outsl je jae outsl jo xor xor daa or and push push imul cmp jo outsl je jae outsl jo dec imul or cmp jb data16 arpl jo imul cmp data16 arpl jo imul cmp outsl jne cmp cmp arpl cmp cmp xor aaa fs arpl sub sub cmp data16 cmp daa or and insb outsb jae je data16 je jo das das outsb jae popa outsl bound arpl das je data16 xor xor daa or and imul outsb je je outsl outsb xor je data16 imul outsl outsb or and imul jae insb jne imul xor je data16 gs insb jne imul cmp imul jae insb jne imul xor je data16 gs insb jne imul cmp imul outsl insb jne imul xor je data16 jae insb jne imul or cmp jb data16 arpl jo imul cmp data16 arpl jo imul cmp outsl jne cmp cmp arpl cmp cmp xor aaa fs arpl sub sub cmp data16 cmp daa or and insb outsb jae js jo daa push das das outsb jae popa outsl bound arpl das js jo xor xor daa or and popa jo inc jb popa je inc popa je xor xor sub cmp cmp xor xor sub xor xor cmp js jo inc jb popa je inc popa je or and popa jo dec outsl imul xor xor sub cmp cmp xor xor sub xor xor cmp js jo dec outsl imul or and popa jo dec gs fs je inc popa je xor xor sub cmp cmp xor xor sub xor xor cmp js jo dec gs fs je inc popa je or and popa jo inc jb popa je jb outsl outsl insb ds outsl bound push push push push and outsb outsl ja cmp js jo inc jb popa je jb outsl outsl insb or cmp jb data16 arpl jo imul cmp data16 arpl jo imul cmp outsl jne cmp cmp arpl cmp cmp xor aaa fs arpl sub sub cmp data16 cmp daa or and insb outsb jae jae push gs je jo das das outsb jae popa outsl bound arpl das js jo xor xor jae jns gs push gs jne arpl and or and insb outsb jae js jo dec cmp jo das das outsb jae popa outsl bound arpl das js jo xor xor insl insl das daa or and popa jo dec cmp imul insl and data16 jb gs jns gs outsl jne arpl or and cmp je data16 jae popa outsb arpl inc jne,pt imul xor fs popa sub sub sub cmp data16 cmp cmp jae push data16 jae popa outsb arpl inc or and cmp je data16 jne outsb je inc ds outsl bound outsl arpl cmp outsl je jae outsl jo cmp arpl xor fs popa sub sub sub cmp data16 cmp cmp jae push data16 jne outsb je inc or and js jo dec cmp imul insl or and popa jo dec cmp jne outsb je inc ds outsl bound outsl arpl cmp outsl je jae outsl jo xor cmp cmp xor sub sub sub cmp data16 cmp cmp js jo dec cmp jne outsb je inc or cmp jb data16 arpl jo imul cmp data16 arpl jo imul cmp outsl jne cmp cmp arpl cmp cmp xor aaa fs arpl sub sub cmp data16 cmp daa or and insb outsb jae arpl jo das das jo jb outsl jb das arpl gs gs outsb je das xor xor daa or and arpl outsw jb popa je imul jo addr16 arpl outsw jb popa je or cmp jb data16 arpl jo imul das jb data16 inc or js js jo gs or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and or js popa arpl je outsb fs ds or dec inc inc pop push push dec inc dec dec inc add add add dec imul insl outsb je push inc inc and pop and into add add add add add popa arpl dec push inc push add add dec inc inc and inc inc add not add add add shrl add add arpl je add push add add fs add add je je add lock add imul add add add adc pop pop pop add add add add pop pop pop add add add adc pop pop pop add add add adc insl outsb add add add insl fs add add add add add add add add add add jne imul add adc gs jae add add add arpl add add add push push inc add add add or push push inc add add add or push push inc add add add or gs add add inc outsl jo jb addr16 sub xor cmp and ja gs sub popa jb and insl jo outsb jns add arpl add add add adc inc inc and inc xor ss add adc inc inc and inc xor ss add pop and add add add push add add add push int3 pop pop pop and add add pop and add add add add cmp add add add add add bound add sbb pop pop pop and add add add add je fs add add add add dec inc inc and je cmp das ja ja imul add push dec inc inc and je cmp das ja ja imul add arpl add add add cs inc inc and xor ss inc gs jne je push inc inc and insb outsl jne and popa arpl sub inc add add dec inc inc and xor ss inc gs jne je push inc inc and insb outsl jne and popa arpl sub inc add fs add add add add gs outsb arpl push imul inc outsl outsb imul and inc xor ss add sub gs outsb arpl push imul inc outsl outsb imul and inc xor ss add gs add add adc add iret adc add int3 add or add add add pop and add add dec or push add add out gs jae add add add add add popl add add and add add push and jb add add add add add add add sbb push add add add add add inc add dec add add arpl push add jl addl nop add add mov mov mov add add add add add add add add add add add add add add add add add add dec add pop add add jne jl addl add add add add add add add add add add add add adc sbb add add dec add add jno jp test mov cwtl add add add add add add add add add add add add add pop add jb jle mov xchg add add add add add add add add add add add add add add add add add add add add add add add add add add sub pop add xchg mov lds testb push push push daa push aaa push dec push pop push push jnp mov popf push scas push rolb push jecxz cmc pop pop pop sbb sub cmp pop je xchg cltd pop lods pop mov pop clc or or or or pop or (bad) or or or or or or or or or or or or or or or or or or or or or or imul mov enter stc or or or or or or or or or or or inc or mov fimul cs dec push fs jg fwait push mov rorb out wbinvd (bad) cmovno pop (bad) xchg btr iret paddsb or adc popa adc fwait adc adc adc adc insl adc call adc adc jecxz add and inc adc adcl adc adc adc adc adc adc adc adc adc adc adc push adc mov push es dec push insb push (bad) push mov (bad) push cli pop sbb pop mov scas pop rclb negl sbb inc sbb mov scas sbb sbb sbb sbb imul sbb sbb sbb ja sahf sbb sbb sbb cmp arpl mov mov ficompl sbb sbb sbb sbb sbb sbb sbb jo cltd sbb push push inc push push xchg push mov pop ds imul ljmp and and dec and mov and and (bad) and and and xchg and and and and and and and and push and push xchg mov call daa jp stos daa fsubrl or sub sub sub popf sub sub sub sub sub sub sub popf sub sub sub sub sub sub sub jbe stos sub dec cs cs out das and pop das xchg das (bad) das (bad) xor xor xor xor (bad) xor xor fwait xor xor xor xor xor xor xor xchg aaa ss scas ss aaa pushf aaa xlat cmp push cmp inc cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp mov ds mov aas popa aas mov inc fs cmpsb inc out sub inc lods inc out inc xor inc mov testl inc add mov adc inc lcall inc stos inc lock xor dec add dec xlat dec sbb dec lock aaa dec jge les dec push dec lcall dec mov dec xchg dec fmull dec outsb dec mov add dec xchg dec fstl push jno mov push fwait push out xor push (bad) push adc push stos push notb (bad) push fistl push jne ret push pop push test push xchg push loopne das pop jge lret pop sbb pop mov pop cmpsb pop cmc pop inc pop xchg pop in xor pop daa pop js leave pop sbb pop mov pop mov add pusha cld popa dec popa mov bound xchg arpl fs fs fs gs cmp addr16 push in imul dec push push imul imul push insb scas insl or insl mov outsb les outsl js (bad) jo jo jo jno jno jno jb jb jae jae jae je je je jne jne jne jbe jbe jbe ja ja js js js jns jns jns jp jp jnp jnp jnp jl jl jl jge jge jle jle jle jg jg jg addb orl (bad) xor push cmpl jecxz inc test xchg xchg xchg mov mov mov mov mov mov mov lea lea mov (bad) ss sahf nop push nop outsb nop (bad) xchg aas xchg test adc dec xchg mov and xchg leave xchg xor lahf xchg or dec cwtl mov cltd cld lcall scas pushf sbb mov sahf inc sahf scas lahf sbb mov inc mov xchg mov out push movsb (bad) movsl cmp mov loopne push test test sbb (bad) stos add pop lods shrb sub scas mov ljmp mov mov mov mov mov mov mov mov mov mov mov mov mov dec mov mov cs fwait mov or jp cmc (bad) jo in shll ret fcmovnb pop ret aam push (bad) into lds enter ret movl mov lret mov ss mov xor int into ss mov aaa iret mov sarl mov roll aam aam aad aad (bad) push (bad) fcom pop xlat loopne fs fldcw fidivl sti fildl fstl fstl fildll fildll loope loope loop loop jecxz jecxz in in in out out out out call inc jmp in jo sti in xchg adc pushf out sub mov inc out int3 lock lock jb push mov sbb cmpsl hlt xor ret cmc fdivp insl idiv (bad) mov sbb test cmp (bad) cli push cli out ja pop cld cwtl std sub mov ljmp (bad) (bad) out add inc outsl bound fs add add (bad) fildl test add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add rolb or inc add add adc add add adc (bad) fldl add push inc add add add add or add add add add add add add add add or or or adc add add add add add add or add add add adc add xor xor adc popa and pop push jno sbb and es or rcl daa loope ss icebp xchg mov inc aaa inc arpl push push push sbb xorl mov sub data16 cmp dec dec dec pop pop pop addr16 js jp xchg xchg xchg xchg cwtl cltd lcall stos mov mov mov mov leave lret (bad) xlat fcomp (bad) in out jmp idiv stc cli adc add add add add push add adc adc adc pop xor jno inc andl bound xor mov rcl jb pop loope xor xchg push sbb icebp mov push ss fs or xchg inc je shl repnz gs aaa test jecxz sub xchg movsb mov aam hlt xchg movsl mov aad cmc sub data16 xchg cmpsb mov (bad) out addr16 xchg cmpsl mov xlat out dec pop push mov cmp imul fldl2t stc sub dec pop push mov ljmp add add add add add leave fs (bad) or or stos mov jo into lret add inc sbb inc fisttpl adc fisttpll mov inc dec es cmc cmc and xchg call sbb lahf lock cmpsb aaa imul mov lds rorl mov xchg sbb jmp jns cli test inc jne lds xor push or jecxz xor pop jge mov xchg dec adc and add rcrl rcl ret jns inc sub add xor mov xchg mov and aam mov lret inc mov into ret adc cmp (bad) lods adc xchg (bad) movsb sbb push test and pop out (bad) outsl jns das stos dec out and jnp nop mov test sbb scas inc ficompl inc push (bad) push mov es mov add std or (bad) nop adc es test lret ljmp dec and sbbb popa sahf fbstp mull pop aad fimull rclb stos fdivr add dec je push mov imul jae xlat ret dec cmp mov xchg xor xor dec dec mov loopne loop mov js flds (bad) or sti aas mov gs lods shlb or add fidivl add push insb mov adc into lret sub mov mov adc jmp mov mov roll mov lea push mov stos pop test xchg or and mov lret imul xor push inc add pushf inc cmp imul call js and jp jo or pop inc test inc outsl jge shlb jmp iret ss imul pop xchg shlb sub pop inc push jne xchg jns loop movsl xchg xor lods inc (bad) xor adc pop adc aam jle push push cltd pop push (bad) and sbb xor mov mov mov pusha mov pop lret fs rclb pop push in cmp cmp sbb hlt mov push imul push push push sar outsb xchg push or sub repz jp movsl inc jp fidivrl push mov sahf pushf lret incb sub cmp mov mov out push sarl mov cli insl dec icebp (bad) into mov (bad) push jns test mov (bad) out stc in cli xor movsb mov inc jmp push cmp mov mov pop mov (bad) sbb mov add repz jle js,pt or mov xor cld mov inc (bad) enter sub dec outsl inc into scas push sub sub or sbb or xchg test sbb xorl push aad xchg mov dec cmpsb or jnp test and push movsb push int3 push xchg int sub dec push movsl pop inc scas aaa mov js fstps mov xchg mov mov fcmovne out xchg iret sub mov pop add dec negl fnsave loope add sub dec sbb push push add add xlat pop sbb mov push test adc push test xchg dec mov cmp enter arpl sub dec and (bad) rclb xchg dec loop rorl or xlat or xor add sub adc cmpsb lods mov inc mov (bad) clc jno lea xor mov lods aam in cmpsb xchg cmp jnp movsl mov push (bad) xchg pop leave jp sbb adc jecxz and jge sub hlt lea cmc dec ljmp pop inc mov mov or mov inc popf cmp mov test fwait stc (bad) adc mov pop xchg ds insl and pop adc sub lods out add xchg fistl push xchg enter call addr16 jb (bad) and movl lret and scas push adc (bad) dec inc fdiv call dec xor rorb sub mov (bad) xor sbb (bad) mov pop outsb orps add and shll sub cwtl mov jge (bad) fcompl xor mov mov xor lds push fs adc dec mov xchg dec or push xor dec mov xchg dec imul lret lods fwait outsl loop lcall sub addr16 inc scas xor jno and xchg pop inc out dec imull fildll jnp mov popf xor popa loop movsl or arpl lods mov int3 add out std xchg mov gs sbb xchg push fstl jb jo sub call pop mov inc int sub pop popa lods leave rcrl pusha pop push lcall sbb lock push arpl js cltd ret add sub mov in sti aas sub mov clc push fcoml test mov xor dec dec sub push adc sbb mov push ret fisttpl mov pop xor push sbb lcall push rol call mov xchg movsb (bad) aad xchg push adc mov sbb out loop jmp pop or mov shrl sbb hlt and mov and jb std int3 sti mov je sbb data16 test adc (bad) cmpsl (bad) ret ljmp (bad) loop fnsave dec mov xchg rorl mov sub push inc sub es mov sbb jae fsubs imul push push test sub mov jbe test mov adc mov (bad) mov cmp pop enter scas xchg xor inc scas jp stos ss push jmp dec sahf mov (bad) mov sub push dec pop fcomps push inc adc dec addr16 addr16 inc lcall lret sti pop mov shrb sti test sbb les ficom xchg gs dec jle jp or mov int3 out cltd jo fdivrs jb mov mov mov outsl and test xchg or fdivl xor push sbb out lret arpl xor mov in push mov mov pop push jne cmp inc pop jns sbb push dec xchg bound or inc push xchg cld cwtl pop mov fsubr div dec mov mov xor lret dec mov fwait mov pop insl idivb pop xchg inc cli mov je lods int3 or and es mov cltd fidiv arpl xor or mov mov rcl loop xchg popf jmp je mov das loope cmc fildll and int3 out in mov (bad) gs into out pop (bad) std dec in jns sbb sbb and imul mov ffreep jle fsubl mov and adc sbb cmpsb ss ss (bad) subl mov aad add stc subl cli mov cmpsb test in xchg nop push dec mov (bad) jecxz lods add add adc push push add push and push mov xchg outsb sub test push dec repz add push addl repz mov fstps outsl shll xchg xchg cmp dec cmp insb pop insb fwait xchg lcall insl js scas pop adc mov mov mov popl adc sub inc int3 (bad) loope lcall xchg push xchg inc push es lahf cwtl sub stos cmp dec cmpsb sbb cli mov and dec imul push adc js mov adc mov adc inc movsb sub xor cmpsb fdivrl je (bad) sub test mov fnstsw rol pop inc push aad mov insb push mov jno imul mov lret inc add pop sahf fistp orl mov mov mov fst and push lret repz out aad pop ret jne aam in jns movsl aam bound mov mov mov popf sbb mov shr lret cmpsl mov (bad) jbe jecxz lods (bad) leave arpl push xchg aas mov sbb push pop cmp nop push push rcl jge push pop mov push mov inc mov (bad) repnz in xor mov out (bad) cli and pop out add push (bad) imul mov pop out sub sub sbb daa jns iret fdivrl jp sub cmc mov mov sahf sbb aad push sahf frstor mov cmp add adc cmp mov jmp xor mov (bad) mov loope aam push (bad) mov inc add lcall fidivl out mov jne and ljmp stos movsb mov mov dec in addr16 inc pop fwait lret cmp jl arpl adc add (bad) and xchg push movsl inc xor (bad) pop mov imul in negl in fcompl jecxz out outsb insl fmull loope mov leave inc cmp mov push jnp xchg out int icebp sbb lods repnz ds sbb insb pop or repz mov fisub arpl in (bad) es loopne scas cs push adc mov fisubrl sbb sbbb aaa roll jge mov fcoml fstp insl xor inc jmp dec mov xor mov mov sbb stos shrl in sub out jl fidivr repz jae push mov push arpl nop xor fstps or and pop rcrb pop jl ljmp fcomi or outsb data16 mov ja add movsb push lea dec sub lea inc jbe leave mov pop mov arpl fucomi and (bad) popf lret mov sub pop cmp dec aam lea cwtl js bound mov jno stos cmp and jae (bad) sub sbb das notb lret xor mov mov inc and jle xor dec outsb dec das andb sbb push sti aas or sbb adc xchg ss ljmp pop add lds xor arpl jne shrb call push in int3 or ret call inc or mov lea sub and fxch ss cmpsl je inc popa mov nop mov cli adc cmp jle out outsl add dec lahf iret xor sub mov (bad) insb in mov stos (bad) sub jmp sbb lret and in and sub sar stos sbbl pop lods sahf or cmpsb xchg test or ja or out sbb into cmp push and inc (bad) add mov test test pop jl out adc jno dec pop push push xchg and inc xchg add jecxz adc sub dec inc push add xor xchg xor mov cmpsb mov (bad) jp (bad) and rcr sub pop popa adcl cmp stos sbb aam pop xor sbb (bad) xchg adc cmp push iret in in dec je push sub addr16 in dec jno subb push and mov lods in sbb call push nop add stos pushf sbb sub rcl adc ljmp nop in xor push pop sahf test inc xchg aad movsl add xchg fwait int cmpsb mov aaa adc adc xchg leave inc adc ror or sub insl pop inc push mov adc xchg mov scas cltd and sbb and jp cmp pop inc loope jae int idiv cmp test nop out and inc dec lret sbb and xchg lret mov imull push sbb inc mov inc xchg inc cmp push and sub sbb pusha push fsubl pop into push aad dec bound and add lcall iret sub mull push sub xor mov inc push pop mov imul shrl mov push xchg sub or inc push dec sub das and dec out pop cltd xchg and dec test fisubrl cltd lcall les jbe mov pop and inc (bad) cmc cmp adc orb (bad) push jo jge repnz xor in xchg into cmpsb xchg int3 into popa stos ja and mov xchg inc sub add xchg imul lcall sub mov cmovle push inc push loop mov jns pop push jp stc mov adc mov xchg cmovno lcall and dec pop imul cs xor pop and les add pop add push aam jmp lea or repnz (bad) lock mov inc add lret dec xchg xor xchg sahf mov pop pop test xor mov and adc in adc in into xchg lret (bad) je lcall push cld xor dec aad or js push nop xor jo lods xor aam mov pop inc leave (bad) xor xor popf out inc test dec xchg and and xchg ljmp jb dec pop xor cmc xchg mov add ljmp add test sub xor insb out xchg shr or sub add daa loope add pop mov xchg push loop (bad) dec dec aam xchg xchg das inc push mov cltd jmp mov mul xchg popa sub outsb mov push push insl push push or lods pop push stos or push out push sub loope fwait inc jge in pop sub add loopne push shlb xor (bad) cmp jge mov ficom jecxz fwait pop add es jno push mov mov clc in adc sbb xor in push scas out pop test (bad) sti outsb fdivl xchg out ret data16 jbe push dec out jns dec pop movsl jo or mov enter loop and fcompl ja in mov pop or fidiv jno or rcrl xor (bad) mov cld dec aad hlt data16 lea iret mov cs inc mov mov sub imull aaa add add pusha dec out aas sahf repnz xchg mov jne int3 notl iret out test addr16 adc or dec add mov ljmp mov ljmp rcr cmp jp test mov test sub out popa lea sub lds push mov or popf leave repnz pop mov stos mov xor jno pop sbb dec push in mov cmp inc sbb mov scas popf mov lea cmp sti nop mov mov mov (bad) push xchg xor out incl sbb andb inc cltd lock inc adc data16 je sub cwtl outsb es dec test push mov dec xlat and mov sbb test jbe jmp and cwtl stos movsl mov sub mov xor aam jl mov and adc pusha in pop cltd mov (bad) ss ficompl lcall cmp xchg jecxz xor in xor lea inc push xor sbb push outsb cmp mov mov inc xor test cmpsb xchg jmp arpl xchg daa xchg insl std scas inc mov int3 push and es inc test (bad) dec add jl into in or dec or mov mov mov loope fnop jae (bad) outsl xor and mov sub pop cld sbb mov add in push jmp adc js xchg in lods pop or mov cmp or scas repnz sbb jbe sbb arpl shr jno ja xlat test data16 push and cmp dec pop roll and cmpb fnop push jno pop or shll sub add xor dec sbb mov leave xchg cmp pop lods movsb subl or inc xchg xchg dec sbb in xor lock lea and fwait inc mov sahf jmp outsb push push in pop sub pop loopne xchg jo cmp dec xchg xchg pop inc es adc mov repnz rcr movsb (bad) out push (bad) dec sarl and cmpsl pop mov xor mov out cld mov dec fwait pushf mov sub pop pop mov xchg push ret sub mov push xchg add and loope leave mov lds dec ss aam sub dec pushf stos lods lods sahf arpl and mov stos sub inc inc cmp push add lret mov out xchg repnz notl push lods cs imul adc movsl fdivs icebp push loop stos xchg notl ret jg std stos into push push fisubrl inc jae jmp shl daa lods adc push push push jl test cmp xchg pusha mov mov inc repnz jb (bad) and xchg pop mov fcmovbe mov push loope pop ljmp dec dec and cmp int and (bad) out sbb out addr16 (bad) xchg xchg mov enter mov lcall enter pop mov push and push imul lahf fistl in pop and push pop not mov mov push sub js adc pop sbb xchg add mov loope inc jp cmpsb cmp cmp pusha adc jne fcmovb and lret fstpt aaa mov sub fnstsw adcb test mov sub inc aaa arpl loop jge add jg pop lcall sub pop push push inc jb and lcall sbb add jne jo pushf sarl pop das shrl movsl pop (bad) (bad) inc sub leave test push push mov movsl lock fildll jae (bad) xor ljmp test adc cmp and jnp outsl loopne shl lds xchg insl int3 dec icebp movsb test cmc fdivrl fcmove jbe imul jbe jle pop notl pop repnz mov xlat xchg popf ret lods movsb push xor gs xchg insl pusha jno aas adc push sub ljmp cli jnp sub movsb jb lods jl pop ret and js pop sbb dec mov icebp movsb sbb sti out (bad) jmp adc daa pusha rcrl icebp je cmp lods leave cwtl loope mov xchg mov mov cwtl inc inc inc add xlat ds sti jbe lret mov xor arpl inc inc sub dec sbb jns gs sub xchg loopne fs push fcompl mov jb cmp push add iret and and bound inc adc push outsl jg pop mov and leave jo cmp in cmp add imul cmp adc sarl ljmp leave adc scas fidivr addr16 pop insb adc test lea push bound push movsb mov xor or pop mov ss pop jge sub adc lea push dec ret lods xchg push imul mov fstpl mov dec (bad) mov imull bound add clc pop mov jne dec jmp cmp dec mov dec pop xchg mov mov subl and or and cmpsl push adc sbb movsb push test cltd stc cmpsl arpl jle fidivr push push out or and adc and push push mov mov pop push sbb scas cmp fs jle jmp jge,pt ss dec mov cmp mov push data16 cmp xchg iret ss outsb push stos sbb jae mov inc mov nop test (bad) fistl xor outsl pop aaa in jae push add adc or pop into aaa sub jb push pop cmp pop dec sbb mov iret pop xchg out arpl push fidivrl mov mov das sub dec shlb pop lods ret dec rorb dec jb push mov sbb lock dec push ja or push test (bad) push dec dec and (bad) push in sub adc sub jbe cmpsl mov mov ret (bad) xchg out ss rorb fldcw lret xor adc lods lea cwtl sub or adc (bad) sub sbb cld inc or in mov ja add addr16 mov lahf cmp mov push loopne push push aam xchg (bad) (bad) xor push sbb inc push mov inc xor (bad) pop cmp and mov outsb xor inc mov cmp stos (bad) icebp enter xchg cli in mov mov cld dec (bad) and adc jne xchg fwait jae jno fisubl sahf xor movsl jl rclb jne add xchg pop mov adc imul dec das test (bad) cwtl out sbb xor xor xorb mov and dec pop lret xor ror js jbe mov sub push pop push or imul enter aad sub lods test sbb fmul sbb fnstenv mov add and (bad) sahf jo stc int arpl mov fdivrl dec inc xor ret push pop sub movsb scas jne insb ja inc push pop push and insl fimull stc add and mov (bad) xor ret mov mov cld push (bad) ss (bad) or lcall clc dec push mov cmpsb sbb xor scas sub fcoml xchg mov sbb or adc push xchg dec adcl mov xchg imul pop movsb nop push lcall xchg mov stc aas mov push inc jne ret push dec mov adc jb push inc data16 dec xchg out cmp push jp pop mov and inc push imul mov lods dec push in js lea mov loope pop cmp or adc pop test or adc or outsb adc inc fstps pop xchg push movsl and push pop lock dec in mov jge and enter inc xor mov test sub mulb movsl push fsubs xchg xor pushf push cmpsl lea outsb mov cmpsb pop lahf ret or test cmp xor sub xor xor popf xchg mov push lret pop xchg sbb sti lret ljmp arpl lods (bad) push mov cmp push and shrb in ja push mov push ljmp test add or push push sahf cli js xchg out push or push and mov aad or adc jbe inc lret inc stos sub push popa jecxz loop jb mov push fs inc or dec mov sbb jbe sub mov mov adc mov test sbb insl mov adc xchg add bound and dec data16 or pop xchg mov rolb jo and pop add mov (bad) xchg and sub aas (bad) lahf xchg cmp gs out les ficomp divl lret fcompl push bound cwtl dec mov adc setne sahf scas lcall or leave dec mov jecxz adc jg repnz cli cmc and nop and adc inc and out mov int3 jnp sub (bad) (bad) sti (bad) jo into (bad) addr16 aas dec inc dec push (bad) sbb je sbb mov ja dec mulb out jne jge aam incl cmpsl cmp mov pop push aad pop fidiv mov cltd lret in or ficompl inc mov outsb in sahf sub jl,pt cmp lret hlt (bad) sahf js jo mov ficompl fdivl (bad) xor mov ffreep imul add rorl dec movsb mov jge fisubl loop fisubl ss ljmp stos loop cmp enter hlt in bound rcrl cmpsl test scas (bad) mov insb dec movsb jmp (bad) ret ret (bad) mov movsb mov int std std xorl push setnp ljmp aad inc dec cmc xchg dec inc rorl sbb inc into xlat sub imul jecxz sbb mov cs and xchg (bad) loope xchg jae push int3 (bad) adc xor cmpl jbe xor cmp scas js into sub mov lret xchg imul test mov sub mov jmp jp jb xlat insl jl out or push sarl mov xchg leave arpl cwtl enter decb sub stc or movsb mov in ljmp sbb mov fidivrl addr16 int push fstl sub add sub les push leave xor adc leave and cmp out or (bad) mov jg out in jno pop imul (bad) or out in push mov mov jo jbe rol xchg test xor mov aad dec xchg xchg pop or imul jns test js mov pop ret mov cmp mov push push xchg pusha stos mov sbb xor lret sbb (bad) push mov or and push jo movsl cwtl sub pushf stc adc popf jge lods fwait pop aam dec jno xor xchg cmpsb sub or push arpl pop sbb cmp lcall xor int3 pop clc jne (bad) jge (bad) lret push mov xchg mov imul lds fcompl inc sbb inc push arpl jns push out movsl and xchg jnp xor sahf outsl lods jecxz ljmp mov sub imul mov inc insl outsb insl (bad) mov mov ror out mov pop mov jno sbb pop push gs cmp dec call insl and outsb ja fldt (bad) mov sbb xchg xchg pop (bad) pop subl sarb or sbb (bad) dec movsb pop dec insl adc popf and jb lret test ror add and cmpsl insb cmc aaa lret mov pop or into faddp xlat sarl das mov push xor push lods mov pop sub and mov dec dec push or jge inc inc daa out pop sti lahf jnp mov (bad) fdivrl ja enter cmp inc and mov rclb dec mov cwtl cmp outsb jns xchg push pushf sub je mov fnstsw dec loop js ret lds je add out and call cmp cwtl clc icebp dec mov lret ljmp fidivr jb push (bad) adc inc cs das xchg mov imul jne dec sarl lds mov shrb sub enter jg cs fistpll dec incl jp adc adc adc cmp data16 pop jl (bad) lock lock (bad) dec sahf and enter pop xchg mov push (bad) xchg imul adc pop test movsb lahf cmpsl and dec mov lahf or push inc icebp or fiaddl (bad) jmp mov out push ja aas jbe (bad) jge sar xchg icebp mov cmc fwait jecxz inc in jl jecxz out leave cmp arpl nop es and js mov mov mov dec inc mov div inc out pop sahf in cmpsl sub mov les mov mov dec or sub scas sub xchg outsl cli jmp mov sbb inc xor in push fisubl data16 pop cmpsb jg popa nop xchg mov mov incl jae dec ror outsb frstor mov roll jnp sbb fisttpll jo and popf xor cmpsl add jmp ror cltd lret repz mov inc push sbb pop dec push mov dec pop les xchg adc jns push adc and inc mov outsl push cmp iret (bad) idivl mov pop dec or mov ss sub mov hlt mov inc mov fbstp out mov sub mov inc and dec cwtl (bad) push lods inc adc inc push jge rcl jns xor (bad) xor lds mov sbb jns fcmove ss add push add aad insl sub push mov dec and pop mov sub push push fisubrl pop sub mov push mov mov inc fs and sub daa rorl daa pop addr16 xlat pop divb loop shl jae gs out mov js ret dec mov (bad) shl xor out insb insl push data16 enter sub dec sub dec cmp inc fistl add pop pop out ss dec jg in rorb lcall in jbe add sti push xchg icebp imul es lcall outsb mov add mov imul jns mov aaa or dec mov adc lcall je lret fdivl jg mov jecxz mov fidivrl dec lea cmp cmpsl dec xchg or cmp aam lret dec stos inc push (bad) mov popf fmull aaa jmp pop mov jae ds movsl mov mov pop imul out xor aaa orl and xlat fdivrl pusha fldcw fimul dec cltd scas and adc mov and xchg xorb fdivr xchg stos mov mov xchg enter sub mov fincstp ds cmp insl jl pop and inc pop mov inc dec aaa sahf (bad) fwait in jmp pusha movsb mov cmp sbb ret das xor pop insl push shlb and cmp bound pop ret int3 adc inc repnz cmpsl push nop test nop mov out mov cli jmp mov adc out and outsl or xchg dec xor and scas and xor sbbb mov sub inc popa ja imul cmpsl jmp mov lret jbe les stos lea sti lret outsl sub pop pop in hlt fidiv mov insl jp xchg cmp pop mov mov push mov adc xor dec jb mov lret mov push inc and push mov sarl int out in cmp or push fadd push cmc mov shrl pop sub or jmp pop mov sbb push aad sbb mov sbb mov mov lds daa add mov mov leave insl shrl scas lcall dec test aad cld mov insb jg ja pop out repz mov inc rcll add clc xor test push mov push sarl xchg out pop mov xchg xor mov (bad) gs subb test and mov sbb mov das jnp jmp cmpsb lods fdivrl data16 mov leave ljmp shrb jecxz jg sar lds enter shll lcall sub push jnp jno repz sub cmp add mov cwtl push int sbb (bad) outsl arpl dec jno xor cmp ffreep mov adcl fildl rcrl mov pop ss gs push cltd jl cmp mov mov inc data16 test and int pop jecxz pop inc (bad) call rcrb ja mov mov and add sub icebp movsb repnz ret inc sub ret mov add movsb lcall fcmovnu (bad) or mov mov movsb xchg cmpsl sbb sbb incl or ret mov bound sti popf mov sub jbe aaa mov hlt out ret pushf xchg adc in dec cmp sub (bad) and nop xchg push push movsb inc jo and mov movsl fs or or dec lea push cmp mov sahf sub loope icebp bound dec sub xchg push xchg (bad) add cld dec xor xor pop daa mov into in stc out lret fwait add jle inc mov jns jbe sti lret xchg push mov ds push shrl popf cmpsb xchg xor test incl jb lret dec jb (bad) repz negb xchg mov xor cwtl push fwait mov or inc sbb lods or lock cmp push jbe mov xchg sub add les shll dec sbb shrb sub icebp inc jb jnp mov arpl xchg xchg mov or push fidiv inc dec push repz movsb xor clc in int3 push push ret push test pop sub fiadd test scas scas popa xlat xor (bad) popa jns sub sbb sub push sbb xchg (bad) jno repnz fxch jo movsl pop push ss mov arpl mov dec adc rorl inc incl (bad) out adc pop icebp or push push jo or jecxz hlt (bad) jg ds fnstsw jmp repz repz push movsb pop cmpsl mov (bad) lahf ret push adc outsb fwait dec out pop mov xchg dec arpl lcall xor dec push cmp lods aam jo inc int jne add add aaa leave popf into (bad) fistp and lods and xchg mov push dec push dec xor out dec mov insl dec cmp test sbb mov enter mov inc dec push pop inc xor sbb nop stc push jmp push adc push aam sbb pop sub out xchg cmp mov xor fcmovnu dec sub pop sub shrb mov loopne fs popa dec imul adc fs jg dec adc (bad) pop sub adcl scas outsl (bad) sbb xchg sbb sub xchg movsl cmpsl insb fs stos adc push push dec inc bound or movsb sahf aaa xchg cwtl sub arpl ss imul mov (bad) sbb sbb and push in inc xchg adc and sbb leave imul mov add mov divl mov loopne and inc pop inc rcrb mov or add stos push mov inc cmpsb test dec dec push test and pop sub push sub mov sbb lahf imul push push into mov inc pop push adc pop push aad push pop pop sub int xor sbb or outsl fisttp sub sbb push mov jecxz ror sub xor mov mov mov sbb loope test mov mov cmpb int3 test in push in stos adc xor nop jns and cmp mov mov mov dec lret add add and inc and dec inc incl jnp pushf push push sbb icebp iret mov jo lods cmpsl cmpsl xor enter std (bad) dec mov enter ss adc mov dec out andl or orb test imul (bad) idivl mov pop mov xor dec sub mov push jbe inc cmp aaa (bad) gs push ss sbb add dec and out scas mov xor inc loop xchg push push pusha int3 xor (bad) (bad) cmp pop mov lcall cltd stos test test push lods mov imul xchg icebp leave sub inc (bad) mov add xchg jae das repnz cmp (bad) iret nop mov dec mov aas nop sti sahf mov jb mov (bad) std iret push and push icebp xchg cltd loopne cmpsb lret xor jle,pt pop test inc jns pushf mov je mov leave sub push lcall add mov loope or or sarl fnstcw mov sti scas lret ja icebp lret fwait jp jae cmp xchg mov xchg fisub mov or aam movsb jno mov fbld mov test jl jmp ds outsb dec test pop push fst xchg xchg push out out je imul fstpt mov dec pop arpl imul pop mov push pop mov insl sbb or subl fs mov push add mov int jl sti mov pushf fnsave stc loop enter mov loope and or movsb inc sbb lds rol sbb push jle outsl icebp cmpsl adc dec movsb jo jge test fstpl push leave out faddp (bad) imul es (bad) je dec add js ja cmpsl (bad) popa call pop mov in dec push fnstenv push fnstenv xchg div mov cmp loopne pop adc dec test lods push fist and dec daa dec mov idivl (bad) push mov pop gs and fucomi pushf or popa outsb dec mov fistpl insl dec xor rorl fs xor mov jae (bad) dec mov cmc push xlat fstpt xchg insb fwait divl in in pop repz mov jbe fstpt jmp push fucomip ficompl pop cmp arpl (bad) push lea (bad) inc sub mov pop cli outsb inc (bad) fwait jb fldenv mov fiaddl jb icebp js pop mov fnsave mov and pop fisubl movsb xor mov mov pop jbe insb stc fstpt scas or lock fildll mov fildl sub push arpl into out js stos leave sbb mov adc add xchg jg mov push xlat in outsb cmpsb jmp js jle (bad) cwtl stc add push outsb into ret (bad) in (bad) repz mov mov ret sub mov jb stc mov rcrl mov cs into idiv divl into jbe or push or (bad) mov cmpsb imul aam aad imul icebp pop js es adc testl mov movsl mov add in mov inc mov mov lcall aas push dec mov pushf fdivr stos mov lea dec imul int3 dec and frstor mov test xchg sub mov aaa jmp cmpsl xchg (bad) lret cwtl loope cmc rorb pop das jmp mov dec repnz xor fwait push mov data16 cltd mov push push or out out in repz icebp jmp mov imull ss dec mov fldt cld lea insl lods mov out fcompl lock xchg dec out mov xor xor mov arpl cmp repz mov int ss xor into and jno ucomiss xor loopne sti fbstp sti iret sbb mov (bad) fnstsw insl adc sbb mov cld mov test fsubl lock push imul sbb lret pop sbb daa xor add out fwait xchg xchg cli (bad) testb lcall das and insb pop fsubrl adc jg (bad) (bad) mov dec or and push dec xor push in jo lods cmp cld mov stos jg outsb jg pushf test pop std xor adc stc adc xchg ficoml insb adc stos xchg mov inc in sbb repnz test repz xchg nop loopne mov insl mov mov popf ret imul mov push dec insb in fcmovu inc xchg ljmp (bad) or loope and negl inc mov mov cmp adc adc inc and add lea cli iret inc sbb mov xlat jecxz int div daa xor jg sub cmp ja (bad) jg cmp cmc out arpl xlat jae std (bad) mov push in mov inc mov sbb lret xchg and xchg xchg (bad) in push aam push dec out mov es out add in ja insb int sub scas mov lods adc mov push sbb push bsf in inc aad push fldlg2 sbb fbstp mov loope or (bad) int pop jnp popf adc stos lods xchg adc sarb (bad) rcrb inc (bad) lahf jne push sti jmp vpsubq and loopne jne lods sbb sub rorl pop test test sti xchg in xor aad mov repz mov jae dec shrb fcoms mov nop imull notl (bad) cwtl lret stos mov pop jge std fnop std movsb out popa out popa mov jnp into pop mov adc sbb es pop sub push xchg pop sbb push adc jne adc push mov xchg jmp mov sub ret jmp mov mov jo pop mov outsl pop sarl sub lret inc push pop mov test pop gs xchg jge (bad) mov push (bad) addr16 das lcall js int or jne aad mov xor outsb icebp fcmove adc cmp (bad) lock cltd int3 push pop rcrl shrb pop pop inc ss jo and ss inc lods or mov and (bad) adc movd (bad) mov in pop lea imul cmpsb stc stc pop repnz mov ficomp cmpsl jbe jle sub arpl rclb aad outsl fcmove iret inc dec aad lock and inc pop (bad) sarl xchg negl ja jnp loope leave adc mov cmp mov jb or cltd fldenv cmp leave sub das mov mov jmp mov xchg cmp mov (bad) in addr16 mov xchg inc mov inc cltd (bad) cmp dec mov mov push int out clc imul mov jmp mov pop mov push popl dec lahf mov cs push ror (bad) push dec xchg xchg jno push pop addr16 mov (bad) jge negl mov jno sti jae fisttp mov (bad) fcmovu mov ss cmp mov pop inc imul (bad) (bad) mov sti fucomp pop ja pop (bad) lods mov adc js push xor cmp cltd lods rcll dec add inc loope popa shrl out insb dec stos jmp xor xlat cmp scas cmp pop xlat fstpl push fldt jmp outsb out cmp out icebp push dec cs mov push adc pop sub add out gs and or xor inc mov push inc aad mov sbb pop out jmp jns out push fmul leave pop lds mov insb fistpl fsubr and cwtl mov scas outsl jno xchg adc xlat loop sbb jmp dec cld mov inc xchg cld xor cmp xor sbb sbb arpl adc xchg push imul ret xchg (bad) popf xlat insb fbstp sbb dec nop fdivrl lods xor adc movsl mov pop sbb divb lahf fnstsw insb push xor cwtl jbe inc inc incl adc lods jle push inc xor stos inc imul xchg pop mov mov movsb hlt sbb stos popf ret sub xchg stos jp sti or hlt hlt aad icebp dec add js xchg cmpsl sub and arpl fmull imulb cmp pop xor imul ja sub enter cmp and das and sub push dec sbb call inc xor (bad) (bad) aas movsl cmp dec outsb lret mov out sbb aam fucomi and test mov aaa or xor fcoml dec cmp adc and repz or test stc jle ret loop cltd shrl cwtl call mov enter jecxz mov cs in sarl inc mov push fisubl sahf imul cltd mov mov (bad) int3 insl and dec jl test in mov (bad) mov jg or out insb lods pusha movsb movsb rcl int3 es lds adc mov je fidiv sub xchg and das cmp insl fldt mov xorl sub add and (bad) jbe mov pop pop dec xchg cmp and dec and xchg and in lea iret sbb out cmpsl dec out jae mov ret fnsave fistl sbb pop js call xchg sti stos lahf scas int3 in xchg sub leave in adc dec dec cmp ja jbe mov outsb xchg pop push pop inc je pop daa mov dec mov push jb push je cld adc add dec mov iret imul jno push addr16 jle mov jecxz add fcmovnb adc push and lods sbb xchg aad adc out pop xchg mov ds cmp cmc fst js mov dec dec cmc adc jno push aad roll or test test imul add pop mov imul jge jbe push sub sub and and cltd pop push sub int3 cmpsl sub sub dec dec add push movsb adc cmpsl or pop daa mov ret dec pop and movsl data16 push addr16 mov cltd fwait les pop add aam insb icebp cwtl cmp jne push add sbb jo xor out add sbb jecxz pop pop in scas sbb subl je stos std push push negb xor test mov data16 jp mov cmpsl jge (bad) lods jne sarl sahf mov inc xchg loop mov ljmp xchg shll jbe test push rcl push rorl je or add add jnp mov jns jns (bad) cltd ss pop scas cli xor lea test mov sbbb add aad and icebp jmp out mov cmp mov xor dec sbb out xchg addr16 sub inc push xchg cmp (bad) jnp jnp xor mov push jns xor aad cs aaa inc mov xchg jge or push adc mov jns in int sti fsubrp imul xchg repnz pop add pop les dec inc mov add bound pop pop push mov push icebp arpl mov popa sub inc and cmpsl cmc pop dec sub dec push xor jns in in (bad) cltd movsb pop (bad) imul push sbb or scas mov mov rcr cmp sub dec movsb mov inc xchg int xchg stc mov in mov inc push and inc mov xchg and push mov ja mov xorl adc xchg mov sub ljmp add fstpt sbb jnp outsb lods rclb push and or gs mov pop xchg xchg popf sub xor and jb fstpt mul divl jb outsb mov aaa xchg gs insl adcl ficomp push jne sbb dec mov inc cld (bad) int3 ja lods int3 out jae sbb push xchg adc and add call out push and call push in imul sub (bad) lret pop or paddusb push sub outsb lea insl inc stos loopne mov repz cmc lret jge push sub out push or (bad) lea sbb push aam scas pop jnp mov pop out test xlat mov inc test test sbb pop imul cltd sub mov mov xchg sub jns sbb ficoml cmpsb sbb stos fs dec aam imul mov sahf xor pushf dec add fidivrl pop das fucomp loop and sub add inc sub icebp sub scas pop imul dec cs dec je add test bound adc sub leave dec sbb sub (bad) ljmp sub inc push les sbb and xor mov test sub addr16 dec or fsubl jbe imul jbe xor dec push xor add xchg mov jle in lret (bad) pusha jae gs mov shrl mov rcrl cmp cld imul rorl imull movsl xchg cmp sbb mov adcl dec fisubr jecxz ljmp mov cmp adc jb out (bad) jne dec mov iret push repz dec mov push xchg lea lea xchg push lock sbb stos (bad) pop adc std mov mov je daa sbb jne loope xor sub ret jbe push cmp pop pusha mov fwait jno mov out lds int3 fs lret xor imul mov loope pusha (bad) aad rcll test cmp fwait ret (bad) ficom dec mov outsb lea outsb push cs arpl sub lock jb out pushf loope mov les pop mov push outsb pop roll push fldenv loope dec mov lret stc mov jbe dec loope (bad) (bad) pop xor push in sub ret loope leave add dec fdivrl scas xchg xor xchg cmp bound push in cmp pop dec bnd pop mov fisub in and jbe mov arpl pop mov daa in das jns jle outsl shrb fidivrl push (bad) shlb mov call inc mov inc mov jne mov pusha sub pop pop jbe in xor out data16 call inc test fwait (bad) data16 bound cmpsl dec outsl or push pop stc inc outsb in in (bad) push orl sbb imull repz (bad) aaa xor cmpsb sti arpl fist lds popa and mov repnz sub mov inc cmp minps fisubrl fdiv mov out mov dec lods adc cmp sub aad hlt xor sbb ret mov mov add shr sub fstpt fistp sahf fnstcw ljmp jmp out ljmp (bad) int sbb or fs rcl mov dec xchg loopne lods (bad) sti (bad) or sbb dec sub clc jmp iret outsl jno inc jb (bad) mov (bad) in push rcrb into push cmp fsubp popa mov add ss and popa and mov jns and mov dec test loopne pop mov test icebp repnz gs iret push fstpt das xor push cmp cld notl ss aam push sub (bad) fnop fsubs inc mov mov cmc loop mov (bad) fdiv cmpsl mov addr16 xor loop jo dec mov int3 movsl int3 jb mov daa mov sbb push dec jb inc jle (bad) jecxz jb mov aam sub call xor movsl fst rol jne mov (bad) imul dec mov stos xchg and sbb out fnsave jl ficompl int push shr mov ljmp outsl int mov jns pop jmp mov mov icebp iret mov sub js scas addr16 out mov mov adc jae fnsave adc movb je dec jb jno out sub xchg popf lahf fstpl insb imul mov sub push sub ret outsl imul (bad) mov fisttp daa dec inc test jne dec jb and rcr (bad) sub ljmp es mov insl ret les xchg mov mov cltd test push repz inc testl mov sti andl dec jp ret loopne xor mov test cltd fldenv stos mov pop mov roll add or cmp fmul out (bad) leave cmpsb lods aaa xor add imul imul xchg jmp sbb sbbb push loop cmc xchg pop jg (bad) ficomp mov (bad) add mov in inc adc inc (bad) out or cmp into loop movsl ljmp outsb (bad) call je imul mov xor mov push mov mov rcll out jb out sub jle aaa xor and cmc inc xor loope mov mov fisttpl inc and mov lret fstl adc jnp fldcw lcall pop addr16 xchg adc sub cwtl movsb push mov mov dec mov aaa jae dec out mov push inc mov fistpll aaa out cmp es in dec rcll or push rcl jle push mov and mov mov outsb cld mov (bad) mov into sbb mov test dec push clc xchg pop inc push movsb int3 pop push in gs outsl outsl stc sub jg,pn xchg jo mov pop fsubrl cld pop mov mov hlt js push in mov test xchg rorl hlt pop pop ja enter icebp ja jl in call popf jae mov fcomps xor imul pop cmp scas pop push jecxz xchg mov lahf setle stos ss cmp mov das iret mov mov les xchg lret jmp adc and imul sub lock inc mov mov dec mov ficomp fs fimull outsl jb,pt mov mov jne insl pop out outsl cs and ss xchg fistl mov (bad) bound dec fwait sarb popa sti das mov mov scas jg in mov insl in mov add xorl sbb jbe xchg inc ss lcall push dec or stc pxor add jnp loope out xchg ds mov adc inc gs cwtl xor xchg pop popf mov addr16 test adc or push jmp pop aaa out jl mov jb leave arpl adc jno aam pop ret dec arpl xchg das mov shlb (bad) lahf in add out jge push mov fcomps mov cmp ret xchg fstpl jmp int3 insl pushf out mov repnz outsl pop repnz jne sub xor push and xor sub in pop mov dec imul or xchg pop xor sub inc mov pop cmpsl sahf sub sbb xlat out and insl in pop in fidivr mov mov mov xlat lea lret imul je sub lcall sarb cld divl add sbb fimul ja pop cld pop fist addr16 pop mov dec enter fimul imul fwait sarl mov mov inc int3 fdivrl adc xor aad jmp mov pop fmul sub test loope lods lds int3 fist daa mov lret dec and mov popa mov cmc int pop jae ffree xchg jo fimul rolb push cmp fdivrl sub adc lock fisubl lret imul test push (bad) loope std inc and je addb fldt hlt dec sbb or movsb shr sub lea jbe inc sbb adc fsts cmp push sahf pop xor stos push inc pop jbe mov in into inc stos push push sub and sub vminps in mov pop mov xor or push fadd addr16 pop popf cmpsb fucomi add mov jl and cwtl (bad) or std repnz addr16 jns insl mov enter sub dec out outsb sub jns sub cmpsl leave jle pop jb aad jbe sbb int outsb sub lret jp movsl fdivr repnz orl and mov add mov das (bad) sbb push cs cmp movb fdivl lcall xor ljmp lock cmp push mov push mov ja mov push and jb pop (bad) mov mov (bad) int3 popl mov sub sti rcrl (bad) gs (bad) in push and or pushf jo es ss aam jno push mov fs in daa (bad) push jg ficompl pop sbb fdivl sbb or inc mov (bad) (bad) das or les js mov push jns fidivl pslld int outsb loopne mov (bad) mov outsl mov xchg mov mov addr16 icebp sbb adc movsb inc loop pop pop and mov fildl xor fs mov or int cmp mov inc adc jns push aas ja insl fnstcw in leave dec stc ljmp xor jns fdivl fidivl push dec fdivr sub cmpsl sti pop js cmpsl cmpsl or inc repnz in outsl jae out leave daa mov (bad) popa and rorb movsb icebp pop ljmp mov sbb mov cld mov mov subb mov mov add pop das mov out in dec les popf out sti lcall adc and ds cmpsb pop test popf sbb and lcall xchg js jnp (bad) cmp cmp or mov imul ljmp push jne in add mov inc dec stc mov mov or loop mov sub push lcall out stos xchg cmp nop add inc jecxz aas mov insl rcll xchg sar or push mov cmp aam sub or aam cli mov lahf lock jecxz sti jg sti push dec cld xor cld or loop cmp movb sti push jge jge mov push push mov lock jmp je lds xlat stc jmp fdivs outsl (bad) mov insb mov imul or adc dec cmp push mov js inc lea jge adc push xchg push repz in div in iret aaa jb repnz mov fidivrl cmpsb mov mov stos adc sub test push std fxam fidiv je,pn mov sub inc pop ljmp sub push test aam cmp fwait addr16 cmpsb enter inc sub pop jae push cmpsl cmpsl aad inc xchg in push pop call lds sahf pop in jbe div or outsb xor sbb fstl mov mov sub sub lds mov sbb mov xchg xor movsb add nop add fnstenv sub fcmovb mov hlt xchg movsl bound mov dec dec xchg cs rorl cmpsl les mov xchg outsb (bad) in xchg jge aad outsb sbb sub fistpl and mov and push pushf mov out ljmp gs ja mov out cs and mov push or push or mov and dec mov (bad) dec dec xchg scas test pushf (bad) mov jecxz add push adc fwait pop push jb or and out xchg stc int3 fwait inc into fnstsw push jmp sbb subl lahf insb in negb cmpsl mov inc and adc (bad) test sub inc pop mov pop xchg fwait scas jnp or mov xchg cmp xchg sub pop loop leave adc mov mov dec lea push add inc jl int3 mov push fidivrl bound sti adcl sub inc jmp sub jns adc (bad) xchg out cltd cmp loop jb pop xorl outsl or dec xor sub pop loop push lahf daa xchg ret out xchg fdivrl cmp push sahf scas adc divb or rclb push popa in dec mov dec and sbb mov fnstsw fstpt in insb mov insb cmp fidivl popf frstor pop mov stos rcpps (bad) ss mov mov pop jl push pop fs (bad) ficompl pop jns sbb push mov xchg inc jno rcrl nop imul push adc imul gs sbb in lods jp inc pusha pop dec adc jns mov and ja mov arpl lods fimull lds dec bound mov les cmp adc adc fisttpll cltd lds data16 inc sbb mov cmp add jmp call xchg std pop push (bad) xor pop and sti insb push dec (bad) lret neg push pop dec cld xor mov fnop (bad) out cmpsl es mov mov mov jecxz jns insl mov xchg fisttp mov fwait jge (bad) movsb pop (bad) xor and mov aas jne dec push inc pop inc mov and out pusha mov jmp (bad) maskmovq idivl xlat xor mov adc pop movsb int sub or sbb mov scas mov ret ljmp repnz cmp imul pop xchg fwait mov addr16 (bad) fldt jp loop jp outsb xor jle add mov jge push mov or add pop adcl or mov jne lret pop iret outsl imul sti mov pushf xlat jns repz (bad) in push movsl (bad) in fldenv pop sub js mov mov jns les stos ja iret xchg addr16 dec lds imul idivl dec mov (bad) test (bad) leave push mov ds ret aam addr16 dec jb inc cs daa or sahf js dec leave cmp insb jns (bad) fldt lods aaa or xorl imul fs and sbb dec mov dec (bad) repz test scas aam mov cmpsb mov ds outsl movsb lcall jmp sahf and push or sub incl popf incl adc clc ficoml push lahf mov shll arpl lcall mov mov xor int3 xchg mov clc sub fwait sbb pop sti mov cmp sub xor inc pop js mov push cmpsl test jno sub dec out mov std sbb scas jnp pop mov mov pop dec mov fs mov sti and sbb mov mov cltd cmc sbb sub out daa rol sub add das xchg dec (bad) pop and push xchg xacquire mov and add mov pop xorl sbb fs lret pop and lss jnp insl xor mov jmp lods dec mov pop pop xchg adc popl jg out mov mov cmp or shrl jp popf mov mov pop hlt out push dec sbb (bad) pop jne pop addr16 xorl sbb add icebp jnp mov dec xchg imul inc and inc mov cmp loop (bad) dec addr16 xchg inc sahf cmpsb jns pushf cld dec sub int sub das cmp cltd es inc sub fisttpll test mov jns cltd stc mov xchg jns je mov jnp or sub ljmp popa lea lock mov cmpsl in fdivrp (bad) repnz and ljmp mov mov cmp ret fistp ds xorl rep test out jp mov fdiv or or inc divl fucomip lds insl cmp test in pop test sub push dec bound cmp ficomp or adc push cmpsb (bad) into lret fisttpl pop in dec mov xor icebp dec jne mov or out mov pop xchg adc sbb xchg rolb xchg jl xchg jno aad or mov and cmpsb jmp adc lds imul out inc cli mul decb (bad) dec pop jg in xor fadds jmp add mov std sar arpl daa mov aaa in rclb cld outsb push inc dec in dec repz stos int add jbe (bad) push into std mov push outsl or jno in bound xchg add pop cmpb or pop mov iret fwait cmp cmc inc cwtl and aam insl fwait push data16 inc sub add dec pop jg daa (bad) push test adc popf xchg (bad) fdivr addr16 inc pop pop and inc mov sub repz jge mov cmc outsl repz ljmp mov jecxz scas shr das in aam sbb aaa inc imul xor dec mov cs jns xor cli das cmp enter cmpl fcmovne mov scas cmp mov cmp loope jbe sub adc loope xor add iret cmp fbld fnstenv sub cwtl and int mov ss jno mov lea sahf ficomp inc popa jne mov add mov cmp pop scas xchg mov in ret pop mov inc xor js pop daa xor sti movl test cmp mov mov lods push inc roll mov push xor in jne jne xchg fiadd mov and jno mov dec cmpsl xor cwtl fs or xlat jnp jae lahf cmp cld rcrl ficoml out lods sbb mov into ljmp stos scas test es and sub sub lock jle incl xor mov aas and inc dec fs in jmp out ret (bad) dec jne in jmp popf mov idivl enter sbb mov int3 fldcw imul dec imul int3 rolb xchg arpl jnp imull or (bad) xor pop pop dec adc lock outsl jno into or adc or stos inc inc sbb and mov imul neg xchg fmull ljmp mov mov call mov sbb pop imul cwtl fcompl fbld mov pop sbb add data16 out iret in (bad) fistpll aam in int mov ss sbb out int3 (bad) in jge mov insl push jae jbe sbb dec pop or dec push mov pop nop mov jbe fnsave out sub fisub mov dec lods sbb add mov scas sub pop (bad) adc jle jbe ret cmp sahf gs scas imulb mov dec stos js sbb ret sub dec add imul sub add pop dec pop les sub jl aaa pop outsl sub scas gs or fidivrl addr16 rcr push sub sub cmp xchg mov mov mov jno fucomi imul sub das mov dec jl clc dec rcrb in dec mov test aas cmpsl xchg cwtl dec lods jecxz lea lret fmulp mov and mov jbe mov xor test push stos mov rcll pop dec mov mov scas inc aas popf push lock mov mov xor dec sub lods stc paddusb outsb notl cmc fisttp scas pop xor cmp mov dec jl mov and inc adc push dec dec xchg add divb cmp mov nop (bad) insb mov xchg inc push ja pop sub push icebp (bad) cli arpl mov cli jae fcompl fisub mov mov mov add xchg push pop fwait (bad) sbb cltd arpl (bad) and hlt xchg and lea xchg mov out inc cmp adc (bad) cwtl (bad) sbb or loop test jns push mov add adc mov mov call lcall int3 jl xor (bad) jecxz mov mov and ljmp (bad) loope addl scas xchg or mov cwtl mov add pop mov push jo xor popf imul ja push cmp sub outsb inc mov test je cmp arpl loope xchg push pushf xchg push (bad) push sar lcall mov imul in mov mov xchg bound sub adc mov mov sbb inc pop loopne xlat jae pop aam xchg loop jne shlb imul lret and and icebp adc dec test mov stc pop cmpsb cmp aam jp push sub xor push lahf cmp push pop push push add xchg sub mulb mov arpl pop sub sbb pop sub inc push jge cltd gs jbe push inc lret add xchg or lods loop jne jb xor ffree mov push sub xor ficomp push jne frstor (bad) int add insl lret insl int3 cmpsb je sbb mov ljmp lock sti jae cs mov xor inc sbb xchg mov adc xchg dec ljmp incl inc push cmpsb ds (bad) push inc shrl dec push lret movsl mov pop (bad) fsts in outsb sti test jbe pushf xor xor xor adc (bad) push and ja pop sbb sub mov into sub adc (bad) aad gs jp mov inc mov test adc jno inc sub in fstpt fnclex xchg inc push dec mov jne gs sub cmpsb das jecxz mov jbe mov adc and stos or push dec insw and ljmp fbstp xchg (bad) xor js or dec xchg sti jl lods scas movsl lahf in sub repnz dec sub adcb or jge stos outsb xchg shrl pop lds test mov pop popa rep movsl pop inc inc add icebp (bad) mov ror rcrl adc clc mov push sbb (bad) mov or pop flds pop xchg push jge xlat cli jnp pop dec incl inc sbb out sti dec imul jmp hlt scas jl imul repnz and adc sub inc sbb pop leave mov pop (bad) add mov lock fcmove lcall lahf vpmuludq (bad) adc rcl std pop ds scas lret mov xchg inc test and jmp and push mov iret cmc stc and or xchg rclb arpl (bad) stos push fs movsb mov cwtl or sbb dec ds pop imul fistpl xor xor and mov sub push mov xchg push push sbb mov outsl mov fs pop xor ljmp pop pop out push sbb mov fidiv xchg jb jb xor and mov jp nop cmp arpl pusha xchg and loope jecxz ljmp nop rcr xor int cmp jmp add jmp cmp push and stos xor test aam movsb subl ja repnz sub out test mov add cmpsl dec or push test ljmp (bad) xchg loop xchg (bad) mov les clc and lods jne push addb and jnp mov (bad) out jo mov add and mov mov xorl clc rorb push xor ror jbe int3 nop push lds or and adc inc out mov push sub bound xchg dec imul js jns cmp fcmovbe loope dec adc fdivl aad add dec add in lret cld adcb leave push nop dec je adc xor lahf les adcb cmp sbb (bad) mov cmc cmp cmpsl stos scas movsl dec and xchg lcall sub mov push mov imul and movsb sbb push loopne pop jno js cmp sbb dec pop jns rcrb dec inc lret sbb imul cmp xchg or ror cmpsl jl jge mov repnz mov push dec xchg (bad) loope out mov cmp xchg jecxz js aam xor (bad) repnz adc stos fdivrs sbb jmp jo dec jmp mov inc mov cmp fist and inc push loope or and call lret sbb mov (bad) (bad) xor jb subl lret sbb popf daa mov and mov push mov ficompl mov outsb rcr aaa jnp outsb insb in scas dec xchg mov mov and (bad) shl test js clc popa xor inc mov lods and scas out movsl out jbe mov sti inc fdiv add add mov push cmp ror and mov pop dec in cltd frstor mov fistp scas outsl in fs ficompl out jmp mov das sti rorl imul push sbb rolb pop imul cmpsl ja push fsubrp sbb push xchg jne popf addr16 push in incl pop loopne jb xchg dec cmc mov in stos sbb arpl fwait lcall daa mov adc mov mov jnp (bad) fisub jo mov jmp sbb and rolb outsl and (bad) iret sub lret pop sbb daa daa fcomi ja jb fldlg2 rcrb xchg mov cs fs dec in int3 mov fdivs add xor xor (bad) ret mov push dec ja inc jbe data16 jmp mov (bad) dec scas mov addl jl fisttpll jmp lret cmp (bad) sbb sbb jmp sbb sti das out pop cmp (bad) (bad) cs mov jl adc pop scas mov cmpsb mov (bad) jae stos xchg add dec or lcall (bad) mov movsl out xchg insl mov mov (bad) lds and outsb sub loopne dec add sub jb cmp sbb incb das pop outsl pop movsb in dec xchg cmp jl repnz pop js jge (bad) aas adc clc mov test fs xor mov jecxz test add adc inc xchg idiv idiv xchg jle pop cmp ror lret ljmp mov push lcallw (bad) xchg ds xor mov negb xor jp icebp push scas fwait rcrb push mov inc rolb bound iret jl stc insl icebp fbld test (bad) mov outsb fdivrp aaa fcomps sahf inc dec push xchg (bad) pop cmpsb xor lock pop push xchg dec lret imul jg xchg lret test xchg lahf insl jbe in aaa cmp arpl jnp outsl and cmp les mov xchg xchg xchg outsb movsb mov lcall (bad) add fidiv pop lahf jae idivb lcall inc add dec sbbl imul inc mov xchg lods fidivrl mov addl js aam std jmp scas and sub mov xchg jg cmp jmp jge push dec mov xchg daa mov mov sbb lret jnp xchg cmc mov orl icebp aad mov andl dec sbb sti xchg jnp fsubp sti mov int jbe (bad) dec pop pop scas dec daa pop pop and mov adc push loop xlat or (bad) cmp or mov push (bad) (bad) out push dec stos popf ret (bad) addr16 movsb (bad) js fs aam inc dec inc inc sub or orb jl fnstcw out jnp enter (bad) or and lret mov sub add inc data16 mov adc cli stos stos pusha roll sub (bad) lods jb and popa cld in arpl push jl out mov mov addr16 adc sub pop ret ss sub lahf clc cmpsl push xchg adc and std (bad) cmc push enter xchg jbe cwtl (bad) cmp sub insb pushf mov shrl out push leave loope addl jmp stos inc stos xchg jl out mov sti mov fsubrl jle jo imul aam and ficomp js scas mov daa cmp and pusha mov add call jecxz,pt (bad) mov jnp in in dec rcrl push movsb (bad) pusha decb je movsb mov mov jl xlat mov cli loop (bad) popa aaa push fwait test pop outsb inc push (bad) mov and dec cmp xor lahf mov mov sub outsb mov cwtl out mov outsb ret dec or sub enter out mov outsl dec aam pop xlat je outsb aam in cld incl gs mov fcompp xchg fstps cmpsl test in popf mov ds lods test lea and test (bad) jmp jmp jnp xor (bad) (bad) mov insl fcmovu addr16 adc enter mov mov xchg and daa in pop inc in stos xchg jns imul out push dec scas push adc sahf or push addr16 push jbe sub xchg pop dec test mov jle ret mov pop lret setne mov test jno jne push repz fcompp (bad) lcall xor xlat push ja push imul hlt mov adc mov cmpsb (bad) dec jmp mov std mov lods movsl mov sahf and sbb fs mov faddl and mov jne sbb dec cmc cmpb xchg jbe jo out (bad) xor ja mov repz mov lret xchg (bad) shrl dec mov pop mov xlat sub sbb mov bound inc pop mov push std ficomp jge (bad) repz rcrl rcl neg das inc arpl int iret leave fs testb hlt out push in repz fcoml int3 mov fsts fmuls mov hlt xlat sti xlat sub pop inc mov dec jns fxch jno aad mov inc sub scas sahf mov lcall lret jns imul fistpl pop in jecxz push fdivl popa jl adc push in daa xchg dec out scas cmpsb or insl fist xor fldl xchg in cli mov pop sub push je enter (bad) popf popa mov aas addr16 rcr adc dec inc inc dec mov jl jmp cli lcall mov sahf js movsl icebp push inc sbb sub sti cmp cmp mov arpl sub aam mull lods gs adc push dec lahf nop mov (bad) (bad) repnz out xor aad out jns mov xlat xlat sub stos cmp mov adc ds out dec mov cwtl ljmp jl jmp mov scas (bad) push sbb cli xlat jo jae sbb lock and push push aaa fisubr jns jmp mov lret add lea and xchg dec or popf push ljmp mov fwait jb inc fsubs sbb mov mov inc ljmp add cwtl sbb push fwait lods jnp pusha ror sahf (bad) push jbe arpl in cmpsb jb xor jmp jnp cmpl notl fcoml adc in cli sbb imul jmp aad inc cmp jecxz scas je inc ficom out or rolb lock movsl mov fucom pop js mov imul daa sbb iret sub push ret sbb inc jb inc mov xchg and jbe xchg fsubl (bad) sbb loope or outsb incl jmp (bad) out repz xchg lahf jmp jmp aas mov in scas fstpt ss xchg cmpsl (bad) push push push add dec sbb jecxz aam movsb (bad) imul rcll inc mov xchg dec add dec mov repz add sub jecxz mov cs ficompl or push dec popa mov lcall dec loope inc push cmovnp xchg fwait xchg test (bad) (bad) push adc (bad) int pop or insb push loope icebp push (bad) ret sub mov push xchg dec pop jge push (bad) cmc ret insl (bad) push aad movsb jo pop push push mov (bad) xchg or mov push mov notb divb push add pop mov xchg mov sub in (bad) stos jl xor idivb dec push or dec ja pop outsb loopne cltd pop out jl fmulp push push in jns mov add or leave push out fdivl pop jp jbe dec dec loop out (bad) sub pop push inc lcall mov inc pop fcmovne (bad) push mov pop (bad) ja pushf aaa mov mov pop xor or adc andl mov jp mov sbb mov jo rolb popf sbb stos mov sub mul add cmc xchg push pop ljmp movsb jno pop fucomip xchg int3 mov sbb fsubs xchg test (bad) fmull xchg pop mov cmpsb test fidivl shr imul rcrl out imul xor xchg (bad) roll jge xor pop stos sub mov clc sub sbb lods iret (bad) in das pop nop adc mov sbb dec jae lea lock imul mov sarl add inc rcr cli sbb icebp lret lods push ljmp mov fstpl ss and sbb mov mov mov mov cwtl adc (bad) test stos stos stos xchg mov movsl in lcall or jge divb jae and mov push adc push addl dec popf inc out dec daa sbb outsb adc xor push push jle decb aad psrad sbb iret push and add xor fidivl lret push mov ss mov fnstcw xchg aam adc inc sub stc mov ror xor aam add cld inc mov inc mov divb cld jg push xor jp dec dec test mov fisttpl xor add or aaa mov icebp or rol clc inc push and jno mov (bad) sub pop inc (bad) (bad) lahf push mov push mov jo test push cmpsb lcall mov sub jge jge jae insl imul dec add jmp dec stc jns xor hlt mov inc jl lret lea mov dec in or jl lcall ljmp jp mov nop (bad) sbb fptan aam dec fistpll sbb lcall inc add arpl pusha insl lret sbb sbb dec pop ret add test xor jl sbb addr16 movsl xchg ficoml sub pushf out lods xor les (bad) or mov sbb xchg repnz or mov or xor push je xor movsl outsb dec in push repz bound enter mov xor movsb add mov xchg out fistpl pop dec sub scas dec mov adc adc lods add push jmp shll cmp loop and jns mov stos aam ret cld sub lock push adc jl add loope inc push pop sub add xor cmpsl mov test cmovg sub stc ret imul jnp pushf sub mov adcl sub mov jg push sbb call insl aas jno adc push push push inc rol sub mov in lea in jg and sbb push inc pop push test orb imul dec in outsb repnz lret addr16 jl mov inc or subb ljmp rcrb lret test sti mov push rcl shlb xor xchg xchg mov mov test inc xor sahf xchg out sahf push xor cmp outsl mov es pop or inc rcl mov (bad) fcompl or stc roll pop adc sbb inc and scas les xlat into xor dec (bad) mov in mov mov sub cmp inc or xor push in mov in add mov push cmp ja inc xchg jne mov mov mov (bad) mov jne shrb (bad) (bad) fwait sub jne fisub add popa or je sbb notl or (bad) lcall shll or xchg mov cmp mov xchg push push push or mov into fs ret mov sub (bad) popf mov fildll cmp pop imul scas mov popf iret inc inc les data16 bound mov into fstpl mov (bad) fiadd enter jne ljmp mov dec mov (bad) testb insl test cmpsb or adc mov adc mov jmp into (bad) inc push xchg test out mov aad jne inc call (bad) dec rorb xor inc xchg addr16 push cmc hlt clc out cwtl insl pop out dec pop mov inc fdivrs xchg insb jne js inc ret push je cld xor rcr cli jp mov mov orl pop sub and stos cwtd sbb ds mov xor xor mov push (bad) or pusha sti test push imul push sbb lret movsb lea push mov jmp in sub add mov cmp inc aad lods add pop mov aas mov adc mov (bad) ljmp cmc dec insb lds xchg in in insl subb and cwtl incl inc cmp mov fcompl dec loope int3 adc test jo jbe jbe ret enter (bad) and and imul (bad) sub pop sub ja or clc ss into and loope jno sub mov sbb push push stos sbb loopne xchg (bad) aam lods in repnz cmp cmc fmulp inc inc dec gs loope aad pusha out std rcll pop cmpsl xor cmpsb sahf cmp dec fildll popf xlat (bad) fistpll mov xchg sahf mov push cmp cmp xor rcrl lret sub stos ja ror jae fsubl int lret adc sbb xor and cltd aad adc or jecxz push dec push cmp test mov out rcl inc add mov mov loopne cltd out in das fwait dec xor and and cmp dec mov sbb aam ret mov dec clc mov xlat adc jecxz arpl xchg xchg rorl adc add lds test fwait cltd add xchg inc jne shlb das shrl push dec aam ret les je gs and mov loope or stc push add pop insl or push sbb clc mulb xchg (bad) ljmp cmpsl lods and add fidivl je imul adc jge lea daa jne test stos in pop gs pop dec mov mov and jne dec inc mov mov xchg (bad) mov add subl push test jnp mov adc pop jle mul xchg aam dec push mov jb lret or cwtl pop mov sub dec in aas mov pop int push jns xchg inc into out adc insl shlb mov push test (bad) loope push stos mov xchg scas lods xchg jns cli sub cmp adc (bad) test mov add stos in jp xor jmp mov js (bad) push sub fwait jp mov pop mov inc movsl jno xchg test xchg inc sti mov dec adc repnz or xor les outsb (bad) aam testb test testb stos (bad) (bad) enter inc or enter inc mov sub sub xor xchg pop and cmpsl loop gs mov or mov mov repz mov mov movsl (bad) push cmp movsb lods ret fs imul jmp and jbe movsb sub int3 fdivrl xchg movsb push xchg repnz sbb mov arpl add scas lcall xchg jne sahf sti repnz mov push insl hlt cli push and insb jl push cmp jge inc xchg js xchg jb movl xor lea popa xchg imul jl and leave adc fstpl gs sub xchg xor mov js cmc mov dec insl xor pusha xchg test push mov lret inc push push adc cwtl movb jb imul mov cmpsb out and scas insl loope sub dec adc aas shll push mov sbb push and push (bad) mov (bad) loopne mov push inc mov push mov dec in ret mov xchg pop mov ret int3 (bad) lock dec shrb pop push pop jb xor mov add or pop daa lahf add lcall or les stos jp outsb fstl ret mov in int3 push rcl aam aam cmp enter push (bad) push xchg mov push popa xor int3 iret and inc imul fucom mov in pop jecxz fsubrl and push add xor push xchg pusha dec cwtl mov jp mov jmp scas or fcmove adc jmp lods adc inc pop lret dec push push push movsb push stos dec pop mov fcomps daa push jne jl fcomps fdiv cmc inc push cld (bad) (bad) jne xlat jecxz jne push inc fcomps fstpt jmp cmp push cmpsl jnp cmp xchg aam ja nop fdiv jmp pop or cmp cmpsl sub lret push mov mov int3 jnp aad div xchg dec jno add fcomp pop pop inc sbb mov lock imul into mov fwait push xchg lods cmpsl cwtl xchg je imul ja mov lret imul jnp bound scas cmpsb mov add outsb in insb shl xchg (bad) out push ljmp rcl ds ret fistpl xchg insb idivb fcompl hlt ss push dec cwtl in sub imul ret push outsb in fcompl xchg outsb popa cli pop stos mov in outsl cmp jne fmul fmulp xchg sbb jnp test push ss jno cmp xorl jbe into in pop leave imul mov scas push into imul das fsubs pop inc mov mov insb cmp jb cmp jb xor (bad) sarl fistpl sbb inc imulb fistl js cs (bad) ja cmpsl xchg arpl scas push jmp mov in push add repnz push (bad) add xor in fucomip dec shr into ss mov sahf cmpsl sahf insl rcll jle (bad) pop or adc outsl mov mov push movsl xlat test aaa (bad) cmp ljmp cmp cmp or jbe pop xchg loope mov xchg and in (bad) mov sub fwait mov test or push jb into and pop xchg ret xor jbe pop je rcrb les idivl std leave cwtl fcom in mov je rol dec icebp ret cmp ficoml enter lret gs test fldt sbb fucomip mov loope xor lret pop dec pop lds addr16 mov inc sub loop add sti xchg lret cmp mov fsubr sub lock inc outsl or popa xor lcall and adc outsb (bad) stc dec inc and idiv fwait ss and addr16 jp aam mov iret fistp xlat leave in mov mov mov outsb loope xchg and pop ds lods push scas insb inc test loop sbb in push mov push aad (bad) jnp in imul sbb and xchg mov push fucom fs loop bound sub inc arpl pop das fmull imul cwtl push out pop dec ss movsb xchg dec icebp jno mov dec mov ja push aad mov icebp incl incl popf add sbb imul test sbb pusha jbe (bad) aas mov dec shr fsubl cmp jnp lahf jmp fistp stos jmp sbb push fs inc dec cmp mov mov dec daa sahf aad adc lcall aam inc inc mov dec in outsb mov idivl fcomps mov insb xchg insb xchg sti (bad) lret pop clc adc dec fisttpl jge jmp mov ret shl ja cmp into fnop loope fidivr jecxz rcr sub repz lret mov out push scas jmp mov jb divb (bad) fwait cmp mov dec xchg sti mov xchg push arpl (bad) dec pop in jmp out fidivr push push ret xchg xchg repnz movsl jp pop insl xor xor and (bad) push push out jge fidivr mov iret into xchg fwait xor push (bad) (bad) pop popa mov xchg jae movsb sub jnp lock loopne,pn (bad) sub and and (bad) ljmp in sbb pop (bad) dec dec enter mov gs icebp sti push mov sbb (bad) push adc fwait dec and mov pop sbb add imull sub jmp (bad) imul xchg out xor sub arpl jns bound fimul (bad) adc xchg lret mov enter hlt mov cmp lods lea fistpl insb xchg jmp pop pop call adc pusha test popf push mov out add and in rolb xchg out movsl cli js xchg scas pop lock aas xor ret dec lock dec mov rorl cmpsl out movsl jl imul pop test sbb cmp adc push enter and and inc icebp fcoms inc mov fstpt add shl xchg pop pop scas sbbl add and aam mov dec mov std inc ficompl or jne js add jne and stos dec cmpsb jns pop inc sub xchg (bad) or push mov pop adc ret (bad) sarb push xchg stos mov xor xor outsl xchg (bad) mov pop or test mov mov cmc add push pop stos push xor xchg cmp jmp push mov push sub or or sbb pop push push mov das and cli pop test imul ja pop or (bad) (bad) rorb js movsb ds fimull sub dec pop inc stos insb lods xor sahf mov loope xchg mov sar mov push push stos int3 dec scas mov popa shrb inc lods js sub loope sar lds jnp mov and mov scas xchg stos inc push inc sbb lock cmp fstps mov mov out and leave sub xchg lahf prefetch aad fild xor popa sub dec mov xchg push mov movl push jno mov (bad) and sbb or xor fidivrl add insl xor and stos das loop jb sbb icebp and inc and imul nop (bad) dec or mov pop push jle xchg sarb stos mov pop cmpsl inc lret aas movsl std repz pop cmp add (bad) sbb cld aas add push call push xor mov cmpsb lret adc aad rorl aam daa test dec mov addr16 fstl mov and xor mov adc in cmp xchg clc mov sbb fwait mov mov push push in mov cmc inc arpl add fimull out pop fidivrl mov aas inc incb sbb cmp push movsb dec (bad) cli dec sarl movsl dec in xor out push insb dec std fldt pand dec adc add imul xor inc mov and jp or out sbb adc xchg mov movsl ss aas aad sbb push dec dec adc sbb mov sahf mov jae xor pop vmovlps pop pusha pop out sti test or stos test push cs mov xchg inc repnz mov fdivr adc (bad) push jmp dec hlt icebp sub shrl js push aaa rcll cmc sbb push lcall jge rcrl je cmp sahf insl lahf hlt gs leave popf fcomi xchg sbb xor xchg outsl mov insb test dec nop mov fcmovne pop xchg xor lcall cwtl lods jg dec and and imul ret cmpsb lahf or mov in (bad) lock das or lods int3 jle insl icebp jge mov adc jno mov inc cmp rcrb lea dec sub push push test adc stos leave pop mov sbb jne jae rcr flds out mov fdivr inc stos push mov push jle push pop jp subl icebp mov stc or roll movsb out pop dec mov add leave ds int3 test or jnp push lods add or shrl sbb rep xor pop pop imul sar ds xchg dec aas lahf setge adc rorl inc dec mov and and xor jns xor mov test push adc xlat mov xlat adc inc pop repnz clc sahf sub push cmc sbb stc mov in xlat push scas cs mov cmpsl sub enter xor inc and cmpsb xchg jae pop adc dec or js imul insl inc stos (bad) mov cmc loop inc mov aaa lea dec test push es sbb jnp add adc jne out mov pop jle jg pop imul loop cld and add jns xchg das in test xchg sti mov inc xchg in mov mov ficom mov push lret mov arpl jle ljmp inc outsb mov push push (bad) hlt jle jmp (bad) mov stos push cltd cmp stos push and xor cmp push insb xor or mov cmc inc adc cltd icebp je ljmp (bad) dec enter add adc in mov dec cmc inc jl test cwtl dec call andl and adc andb and jmp xchg movb les arpl dec rolb xchg pop xchg lds ret divb out dec jp cs into cmpsl dec in pop jle push out fstpl push inc dec jp push and ds xchg outsl out jo in test (bad) pop xor nop sbb sbb pusha in pop faddl cmp jge int sub or mov imul adc mov push pushf jb out cmp mov fdiv addr16 and dec adc jno and aas sbb cmpsl cmc arpl xchg cld mov cli adc mov xchg lds loopne,pt lret push test in dec push sub xchg mov (bad) sbb xor (bad) stc or cli scas icebp mov iret mov aas push mov inc lea mov fnstcw pop xor xchg rclb inc mov dec out push xorl xor (bad) pop fs mov jecxz (bad) cmp aas out and push sbb xor xchg cmpb cmpsl sti jg sbb roll into pop pop pop bound mov sub out incl mov mov outsl adc imulb jle cmc xchg (bad) (bad) xlat jmp daa (bad) mov add push add mov jmp xor sub aad ret sbb xchg enter popa ror repz outsb cmp sbb pop lcallw (bad) dec adc mov rorb and push idiv jbe testl fidivrl adc adc mov xchg imul and mov jg push inc pop push lahf dec inc mov jg xchg ljmp icebp jae sahf stc xchg dec jecxz fs loop jbe mov insl dec xlat stc add xchg mov aas xchg xchg mov leave inc pushf clc int scas fdivr ja aam dec cmp xchg add out sub adcl loopne xchg aas add mov jle cmp hlt ret icebp mov ljmp and sub insl mov int3 fwait xlat xor mov sub mov mov sbb js adc xchg clc and andl ja xchg push adc mov xchg (bad) dec in cmove roll es addr16 push jo xchg popa in aas xchg cmp hlt imul cmc cwtl sbb into loope int3 pusha repnz clc fwait inc xor out mov xor fsubl in mov loop cmpsb fst (bad) dec js xor insl add divl (bad) mov dec mov bound inc xchg fwait std xchg dec ja fsubs mov loope sub ficoml into add out or mov mov (bad) outsl sub mov rclb cld arpl cltd pop mov pop adc out fist mov (bad) std mov (bad) xor mov fbstp mov fldt pop aaa pop mov shlb jp jp lret inc (bad) insl out sub fucomip (bad) outsl popa cmp dec add scas insl xor jo fcoml outsl scas mov icebp xor fs jle inc cmp arpl push mov lock shrl dec scas xor cmc sbb jns outsl mov data16 into sub clc loope jnp lods into in (bad) in das in daa pop in jge fnstcw adc sbb (bad) fistpl mov loop pop push and pop ficompl movsb xor inc dec pop (bad) daa das fucomp data16 pop inc pusha dec stos sbb incl jno and sub outsl pop push xchg push lods sub sub and data16 jbe jge fwait pushf jge (bad) movsb out adc mov pop push outsl imul mov andb aad add dec in mov mov leave jae mov mov dec xlat sub mov lock mov push jb sti pop movsl dec decb ficomp xor push (bad) repz ja lcall mov mov mov cmpsb (bad) mov or insb fisttp out mov mov fimull imul addr16 pop mov push jo repz outsb jg data16 cs fcmovu leave xchg jmp and push xor sub sub xchg int lea inc mov or cmc scas dec and int3 xchg inc (bad) add mov xchg in adc dec insl (bad) in jg cltd iret loop push inc xchg lds ret push in push xchg lock sub mov imul inc sub (bad) lcall mov adc xlat jbe (bad) in fidivrl in and or jns bound dec negb mov sbb pop push cmc addb mov faddp ror push je pop mov add jno sbb out icebp jae ss xchg mov in fsub inc jns xlat mov sarl fwait je outsb add xlat jl test lcall inc lret arpl xchg inc mov sti sarb mov cmpsl mov fwait sar xor sbb lods adc mov sbb fidivr ss je fcmovu popf and bound je sti dec jle push mov add out test xor out xchg mov mov mov xor jns jno in lret stos imul ss dec in mov sub adc insl icebp dec test pop xor cmp sbb popa enter push push or adc pop sub rorl imul fcompl (bad) or mov fs insb xlat jno mov fcomp inc xchg mov jecxz push dec xchg xchg fs inc xor jecxz jge jno movsl incl scas or pop maskmovq mull sub adc das (bad) clc push sbb dec mov sub (bad) flds pop push inc add sbb sbb add incl xor add add add popa insl xor add add dec outsb outsw add add or add push (bad) xorps adc add add add outsb gs pop add js add add add add push loopne add incl sub add push add xor pop add sub add add push add add incl xor add pop add je add add add addr16 add add addb add add sbb adc adc daa add add add add add je add add add insb gs jp cmp add add addb add add sbb adc adc daa add add add add pop add push push dec pop inc add add add aaa add add addb add add add daa add add add add push add gs xor add je jae add add addb add add pop add add daa add add add add or inc push push push inc push inc inc push add add add insb imul and add add addb or add push add add daa add add xor add or add popa insl xor add push add popa je jae add or add or push or or sbb add add bound xor add add add insb outsb popa insl cmp add js pop add add add adc adc incl xor add push pop add gs xor add add add insb gs jp cmp add js rolb add add adc adc incl add add pop add gs xor add push add je jae add add js sub adc add incl add add pop add gs xor add imul add push iret add add adc adc incl sub add adc add gs xor add add add arpl jae add iret add add adc adc pop add add add add pop add gs xor add add add add push mov (bad) incl daa add add pop add gs xor add add add add add push add add add add add gs xor add add add add add or add add bound xor add add add add add adc incl and add push pop add gs xor add add add clc pop mov or pop add add add add push add gs xor add pop add jae insb je add iret add add or adc pop add add add sbb add gs xor add lock or pop add add xor add sbb add popa insl gs add add jne add add or add or push or add push add add add or push imul add add incl add add outsl or adc add add arpl and cmp incl add add add push add popa jo xor push add or inc add add add add add add popa jo add add or or add add add add add popa jo aaa add add or push inc add add add add add or inc outsl insl insl popa outsb fs push add or adc ja incl sub push add gs xor add add inc js je add add add inc add add sub adc pop add add add add push add gs xor add add arpl add inc add add sub adc pop add add add add push add gs xor add pop add jae outsl jb add inc add add sub adc pop add add add add pop add gs xor add add jne add inc add add daa add pop add add add add or inc outsl insl insl popa outsb xor add inc add add add add add add add add insl insl popa outsb xor add inc add add and add add add bound xor add inc add add and pop add add add add or inc outsl insl insl popa outsb xor add inc add add and pop add add pop add gs xor add add add popa je jae add inc add add add and adc pop add add add add pop add gs xor add add inc add add add and pop add add add or inc push push push dec push dec inc add add add insb imul and add add (bad) add and adc adc and mov add insb daa add add add add push add popa jo cmp push add or cmova add add add add pop add gs xor add add add dec add inc add add pop add pop add add add add add gs xor add add inc add add push add add add add add bound add add add popa arpl and and insb imul mov pop or add add sbb add add add push add gs aaa add add add xor xor add inc add add add sbb adc pop add add add or push imul add add push sbb adc add add inc add add add or push imul add add je add fdivr loopne adc dec inc add add add add add (bad) fildl test add add push pop push pop push push add pop push push push push push pop pop pop pop pop pop pop pop or or or or pop or adc adc pop or sbb adc adc adc add pop add or adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc rolb or pop addb and add add adc inc add add add add add add inc add add add adc push add add add add add and inc push pop adc popa bound adc jb (bad) mov (bad) lock mov shl push pop and aaa inc push jae jne xchg mov rcl loope repnz ss inc arpl in and mov movsl es inc add add add add les adc add add add fiaddl or add add add add add nop xor cmp outsl mov adc jnp xchg int3 idiv and jle mov sbb outsl mov add jnp xchg int3 idiv and outsb addr16 sbb outsl mov adc jnp xchg int3 idiv and jle mov sbb outsl mov add cmp (bad) sub lock dec fldcw mov jnp cld pusha cmp jb in lret lret dec jb push incl dec xchg imulb xchg sub in lahf jmp jmp push aaa jnp std rorb out incl dec sbb je aaa sti aas shlb jp sub addl enter cwtl in testb in addl enter cltd in testb in addl fs iret int3 jbe and or (bad) push xor aas xor in mov flds add cmp mov and and aas xor in mov flds add mov mov pop aas fs iret int3 jbe and or leave push cs lahf cwtl in testb in addl enter leave pop stos and and test mov ds sbb scas arpl fisub dec push arpl repz add jl js (bad) fnstcw testb cld (bad) outsl mov mov fs iret int3 jbe and or (bad) outsl mov mov fs iret int3 jbe and or (bad) outsl mov mov fs int idiv and jle mov or fucomi addl enter cwtl in testb in addl enter cwtl in testb in addl enter cwtl in testb in addl enter cwtl in testb in addl enter cwtl in testb in addl enter cwtl in testb in addl enter cwtl in testb in addl enter loop mov in subl std and aas rolb push push inc sub repz iret jecxz jne dec lcall sahf and mov ja jbe movsb or jne lahf jmp pop aam stos clc (bad) jno in xchg daa pop frndint bound xchg scas pop frndint pusha cmp jb addr16 pop in mull dec mov xchg inc pop pop (bad) dec icebp pop fild lahf jnp (bad) xchg loop out fs jnp push daa (bad) imul nop xor out addr16 inc mov lahf jmp and and (bad) nop xor mov in clc aas movsb or ja aas mov dec popf das addr16 inc roll fisttp cmp push imul jle jmp idivb or jnp cld bound mov sbb icebp push divl add std pop jg or mov dec jnp and lahf pop aad cmpsl ja inc rolb and mov dec cmp test jecxz enter jbe outsb out (bad) dec gs pop push hlt scas ja inc jecxz int3 sub xchg outsl icebp mov xchg mov jmp mov cmc sti ss sbb jge (bad) xor and lret (bad) jae xchg xor movsl xchg (bad) lods jle sahf repz inc loop lret lods into daa xchg (bad) (bad) xchg adc push jmp add sbbl jl out std icebp mov push stc iret idivb pop sbb push jmp cmp inc aas dec dec jnp and in xchg sub jg test add push ret lods (bad) xchg ds jo sti aas jmp hlt mov fmulp hlt cltd popa fdiv mov mov adc adc pop jae jecxz mov aad adc aaa (bad) test mov fwait std xor push lret push jae stos push test popa enter fnsave and mov (bad) xor cmp sti aas (bad) sub mov jmp jecxz leave and (bad) outsl icebp mov lods dec flds addr16 (bad) jo out pusha stos arpl mov arpl rorb mov cltd dec push mov jg pop xchg adc pop mov addl incb iret outsb mov jl repnz (bad) incl sbb add push sub (bad) xor lock sti ror jle pop cmp mov incl addr16 scas xor stos dec jae ljmp sub sub mov xor cli inc aad jle mov sbb outsl mov add cmp int3 jbe and jle mov sbb outsl mov add jnp xchg int3 idiv and jle mov sbb outsl mov add jnp xchg int3 idiv and jle mov sbb outsl mov add jnp xchg int3 idiv and jle mov sbb outsl mov add jnp xchg int3 idiv and jle mov cmp lahf cwtl in testb in addl enter cwtl out jnp cltd in testb cld iret outsl mov sahf fbld fdiv jne in (bad) pop pop ds icebp jle fs outsl mov mov fstps sub push fisttp mov xor pop popf in incl dec data16 into and add repnz pop or idivb sbb sub mov jne (bad) idivl (bad) pop dec xchg cmc inc scas fwait clc (bad) jno in xchg cmp fcoml out movsl push hlt cmc jg push sub fldcw mov (bad) jmp hlt andl aam add cmp mov and or inc and add pop push add add add add push orb jb or scas pop jecxz pop rorb mov push mov xchg out pop lods pop jb rorb jae adc iret stos loopne js in sarl push mov jno pop push mov insl (bad) and inc add aam loop dec jne movsl fnop push push pop push add ror add and sub js xchg sub (bad) sub mov push iret push lds mov inc pusha and add bound popa leave pop (bad) aam push fldl leave movl xor jl stos mov or add addb mov add add add je add sbb nop add add cltd nop cltd adc xor jno cmpsb sub cwtl fnsave and sbb pop hlt fsubl jno fdivp enter sub es daa jecxz lea repz xchg repnz dec sub pop sbb xor loope ja adc xchg mov stos stos test ljmp push push mov jecxz adc adc sub and sub cmp loop push xchg (bad) jo or xchg push cmp add push in and and dec outsl pop lret (bad) aaa subl (bad) rclb loopne jp mov mov jb adcb jne or sub or mov lods push or pushf ja in out loopne loopne fwait repnz ja and in outsl push xor pop jo icebp dec mov ja xor xor sahf ljmp pushf fs cmp lret and push sbb cmp cltd xlat cs fsubrl jg or (bad) addr16 xchg or cltd adc inc sub or popa stos lods xor stos pusha mov mov out iret pop jmp imul push inc lds add inc pop stos mov int3 (bad) loope fs jo fdivrl jecxz or loope lods aad lock out ret fsts movsl inc in sbb and push pop idiv frstor aas sbb mov or pop mov rorl and int in std pop lods outsb leave mov jo (bad) loopne frstors xor shlb push js mov xlat cmp and je jnp add test adc mov scas dec xchg mov xchg sub xlat leave sub adc xchg jp ret ficoml scas jne xor pop jo ja mov ret movsl dec jmp popf jecxz and mov stos cmp lea mov jecxz sub lahf add pushf mov jge push pop mov adc xchg (bad) push rorl stos cmpl cmp clc cmp jno sub lods push xchg loope xchg hlt and fnstsw jnp push sti mov mov dec fs (bad) mov movsl ret aad popa into cwtl push xor cs jne insb xorl adc lea mov mov scas mov inc push dec shll test inc sub mov mov es popa mov dec sub pop test xor sbb xchg inc sub jp mov xchg mov bound dec mov stos rcll outsb mov xchg cmp movsb in push cmp xchg dec ja shrb mov mov push inc pop jmp test lods sub inc bound aaa cmp test pop or jl loope in pop inc push dec sbb (bad) cmp mov mov cmp movsl jnp ja adcl add add add xchg subl add add movb add inc in sub push and or outsl and nop or (bad) (bad) xchg ss lods sub adc int aam (bad) test and nop (bad) repnz call or test dec adc hlt mov push imul dec push inc pop clc pop xor stos popa in add dec int adc stos and fmull xchg stos jecxz sub cwtl (bad) push ljmp insl inc jge lcall ljmp pop xchg cmpsl push pop pop add ja in sbb pop sub jne push lods in data16 je mov adc pushf aam jns (bad) lcall and rcrl mov outsl pushf popa mov add add add loop test inc add adc jle scas fs add xor das and test or mov sub stc hlt mov scas dec cs dec popf push sti and movsl or jae addl push inc lds stos cmp cltd mov movsl adc jo,pt mov mov mov addl inc add add push or gs xchg or mov add push mov into addb dec adc add aam add add add add inc and add xor adc xor shrl mov xor jl jmp add fistp aaa add sub lods xor push add push icebp inc mov push idiv add mov pop mov cmpsl dec out stos imul mov mov jns (bad) add (bad) in cmp hlt or notb (bad) dec enter push mov mov movsl push xchg scas add push enter mov jnp adc push push mov sbb jmp xchg and or out sarl and mov testb xchg adc adc (bad) ja (bad) pop aam (bad) adc dec sub jp add out scas popa push jge scas bound inc daa clc (bad) (bad) fmuls in add bound mov mov mov fisttp pop es push xchg (bad) out sub mov sub movsl jae cwtl es fisubl fisub pop in add iret pop int out pop roll fcompl es xor mov mov sub add pop dec fs push or jne lds xor fimull into mov fbstp sub pop int je mov xchg (bad) fisubl mov lret mov xchg (bad) movsl jbe pop in nop fcoms and jnp dec ljmp push or popa jp jmp scas xor es cmpsb dec cmpps test ljmp jb cmp inc lret mov pop icebp lds (bad) mov je dec mov sub cmp ret loopne gs lods jne dec stos sub call xor xchg int mov lret push ja ret fstpl fwait mov mov and iret mov jbe stos pop decb mov xor aad shll aad mov dec mov scas cld push imul out mov push fsts shll ljmp jbe rorb outsb scas push inc mov inc into jmp xchg sub cs mov mov push push hlt iret ja shlb pop mov cmc adc insb fiadd xor pop stos mov push mulb cmp inc mov jno cmp push jae insl sbb adc stos pop sub sub dec sub dec flds pushf cmp int push adc les xchg ret (bad) pop aad stos mov jge pop mov mov push faddl fsubl dec aaa pop aad sub pop push sub xchg dec push cmp fldenv icebp pop insb stos mov and ja subl mov ljmp and adc and daa rcll (bad) jmp sbb push popl fidiv cmpsb les loopne mov sbb insb mov dec cs xor cltd cmpsb ds lret rcrl and mov imul push (bad) into push outsb (bad) scas repnz adc add push push cwtl popa mov leave adc fidiv pop mov aad inc scas adc push stc shlb adc jmp (bad) mov cmp sub (bad) mov cmpsb cli imull mov pop pop cmpsl pop rorb scas mov aas jno lea jne outsl sbbl sets aam adc cmp mov (bad) and pop sarb bound movsl imul and nop add add xor adc add add add push rclb add add dec add jo pop sub scas icebp xchg add and adc call inc popf (bad) mov inc sbb xchg push hlt add inc lea cltd and (bad) dec in mov mov mov push jo ss int3 mov add fldl xchg fs pop xchg das sub popf xchg outsl and aad test push test sarb sub ljmp push (bad) adc mov int cmpsl into cs mov sub (bad) stos mov ljmp mov jb in dec jmp adc aad push mov add cmp or dec dec and leave pop mov lcall cld sarb nop add add add add inc inc inc inc adc adc add adc push nop add sbb or mov out push sbb gs bound fs lock push mov inc lock out stc or sbb enter add sub inc sbb fsubs push push mov sub mov push mov add push push push push add and test add mov mov or icebp bound xchg outsb movsl adc push xor bound sub mov or add add inc adc sub (bad) mov add add add adc add add add add sbb add add add sbb sub and add les and xor inc es mov push adc add jno in lock add aas sub scas je stos adc test sbb dec sti mov ret mov in repz dec xchg inc inc inc xor imul adc mov test enter add add xor lods push inc sbb stos xchg (bad) push pop xchg dec mov mov push cmp mov rcll pop loopne fldl fmul outsb sbb movsb jae repnz hlt (bad) das mov jnp arpl and stos push int3 push pop and lcall dec negl adc lcall pop jns pop ficomp jb stos imul stos out mov test lea pop lret jle push mov in (bad) lods sbb out sub js lret ret hlt sbb xchg mov gs lods popf push pop and into jo hlt scas cmp push mov mov mov add lret les jno aad stos fs aaa mov test pop loope pop pop lret (bad) aas push mov mov bound sbb test hlt aad cmp sub or push mov stos addr16 xor aad fwait mov add or xchg mov (bad) push mov mov out out xchg scas mov mov ds das movsl (bad) jg or mov push iret gs adc mov stos jne inc imul popa test push stos bound in or test ljmp out jne insl xor mov mov repz push xchg pop cmp cmp inc fisubrl repz pusha mov das jnp icebp inc stos loopne inc dec jecxz xchg jae cmpsb cmp fstl js jmpw movsl adc fiadd lea mov es dec fldz pop out rclb pop popf shrl push push mov xor int in jne bound je int mov dec xor ja cli int addl (bad) sub push pop lea jnp outsl test pop lahf ss fucomp push leave sbb js xchg push imul outsb in mov cmp out mov shrl xchg je sub (bad) xor movsl jno iret fild (bad) int ret aaa mov cmp outsb ds adc xorb (bad) ljmp push es fnsave sub jnp into xor jns pushf inc mov in repz test fsts jo xchg test lods ret jb (bad) movsb push mov cmp cs imul cmpsb pushf (bad) inc mov mov out lods jnp dec nop sbb scas aaa push jne ljmp dec fstl mov popa (bad) jne stos dec mov xchg not sbb lret rclb adc push in bound in insl push and loopne test pop sub pop outsl scas ljmp fcompl pop rolb repnz pop out adc mov jmp sub inc fiaddl lcall xchg (bad) dec adc fdivr jbe xor push rcr lcall push mov sub gs enter sub imul sub in mov mov sbb mov (bad) jo leave pop mull dec jne mov sub dec cli cmpsb xor push icebp je shrl outsb xlat add mov inc and mov jp push pop cs jne mov adc or mov je testl sub sub hlt jl cmp cs mov pop cs push out xor pop push lods mov fs pusha mov in fldl inc mov mov jb stos push loop mov call xor cmp cltd scas pop add movsb sub add outsb sti inc imul clc dec lea sub outsb add push and inc frstor add add add adc nop sub mov inc add pop jo ja sub icebp xor push mov loop pop adc xor std lret pop aad subb pop gs cmp xchg into in or int3 (bad) pop rcll pop fs pop jl inc addr16 ret aad xchg cld jo out sbb adc push int (bad) sti mov cmp inc jb mov mov and mov std xchg pop sub loopne push pop mov mov push mov pop push add pop add dec nop dec addl pusha and dec push mov sbb cmp push jo mov pop fs xchg xor sbb xor mov jecxz lods inc movl jne ret adc bound sub mov jne imul test test or inc andb mov fmull add mov and gs shrb test nop cmp add test dec add or nop and push inc aad jae mov sbb outsl xor enter cmp icebp mov pop stos dec or add rcrb and add inc inc add adc movsl xor or dec or ret adc push test rcrb sub inc pop cwtl cld nop das (bad) cmpsl cmpl jnp adc ret (bad) cmp pop or fisubl mull rcrb (bad) adc mov clc ret cmp mov inc add xchg inc lret jne adc inc loop pop xor data16 stos std nop xor imul mov mov cmp (bad) pushf push mov and sub pop movsl xchg pushf jno fsubs andl sbb cmp inc inc loopne stos cltd in das inc stos sub fdiv xchg stos push cltd add mov (bad) jl sarl scas (bad) lods rcll push repnz mov inc repz jnp sbb push ja xor adc jmp jbe push mov (bad) lock sub (bad) mov pusha inc mov outsl mov (bad) mov out inc shrb or xor cmp out jmp push or fbstp or sahf sbb sbb ror in std adc push inc pop ja pop lods push (bad) pop sbb jns adc pop mov mov rcrl mov jmp push inc cmpsl fistp adc dec orl cwtl movsl xor aaa flds fwait xlat pop push lret add cmp dec (bad) jno mov loope inc cmp stos pusha mov not or (bad) into stos pushf fisubr jecxz dec mov mov cmp sub lods (bad) pop lods xor lret mov push lods or rcll sub test mov ljmp inc out aad add pop xchg iret xor dec test dec mov daa or rolb adc mov ljmp call clc test mov testb fwait mov shlb mov add mov mov mov es sbb fbld insb mov stos loopne xlat fwait out dec dec sub cmc pushf sub xor pop stos mov jb adc into xor (bad) pop cmpsb dec aad push fmuls pop je int push imul dec enter mov cmpsl jbe jp add iret arpl les aad pop xlat popa fidiv popf jno mov jge in mov cmpsl insb sub popf setle fnstenv repz in rcl jne lods xchg jmp (bad) mov cmc push lahf pop gs sub mov pop jmp mov test std daa cmp mov or (bad) pop fcompl aaa sbb pop sub xor cmp pop jnp jp xor ja ficomp mov adc sarl cmp mov xor iret addr16 mov cs aad cmp or cmp sti test push das imul bound and sti es pop fildl mov xchg sub shrl mov jmp sbb cmp das bound stos scas xchg mov xchg scas sub ss fcomps mov pop stos cmpsb add jne lea xor pop or jae xor push imul lods ljmp mov push aam jbe push dec leave je sub and jb xchg (bad) cmc or dec imul pop lods sub mov in jge push stos inc scas pop mov je mov cmpsb insl push rorl xchg xor lods mov dec jbe vpsubb imul lock mov rclb pop stos shrb jne,pn test mov enter dec cmp cltd cmpsl pop (bad) mov fstpl xlat xchg push call imull outsb scas test lods ja js or cmc mov mov int inc sub add cs (bad) mov xchg insb fidiv rcll mov lds out or mov (bad) sbbl jp xchg push push imul mov in sub add lock stos loopne test bound test cmpsb scas out test or pop das push push pop imul cmp jecxz lahf xchg lret mov ret push ljmp sbb xor cmc push out dec out adc iret stos add pop xchg jb jbe push cmp (bad) xor aaa mov aad adc loopne flds bound arpl (bad) stos lcall stos add faddl push add mov add add add inc pop les or dec aam dec xchg mov out test movaps repnz js lds add xlat mov stos rclb enter mov or cs insb ret pop movsl dec and dec pop (bad) mov xchg mov adc stos dec idivl push jle roll pop imul loopne das fisubr fcmovb mov mov dec push cli lds push int sbb add add add add mov add push sub dec add addb dec icebp add push jb jb popa in cwtl push push lret out (bad) mov stos mov or dec xor out aad sarl xor sbb ljmp xor outsl push and push and add ret jne push sub int3 aad xor pop lret scas mov or xchg gs cli or add nop add dec dec sub add xchg sub and call add add add add mov or xor insb cmp vpmovsxwd push xor in inc roll xor shrl push lcall xor mov mov mov fwait push sub outsl mov xchg mov sub js lret fsubrs inc pushf mov out inc nop scas cmp (bad) jb test jle mov mov arpl mov aaa imul pop (bad) push icebp cmp xor xchg js inc push mov pop imul dec enter pusha (bad) jae pop into lods es cltd pop jne imul add add add add sti movsb addb add add push repnz loopne lret stos sub inc jo movsl jae mov mov jno fwait clc adc mov outsb imul mov pop sbb dec mov orl jo out sbbl cwtl xchg lods aas mov push xchg pop scas dec cmpsl add cmp push mov ret or pop sbb mov loop lods jae sub jno movsb dec push test cmpsb adc loopne dec jp push sbb mov out sbb push mov mov push mov imul sbb jp fistpll add (bad) mov inc (bad) (bad) jbe test inc enter sub test (bad) cmpsl js xchg dec movb pop or sbb call stos mov in ja push cmp add mov lock push leave mov jbe mov dec push insb fdivrp (bad) lret and bound add mov (bad) (bad) push out fwait cmp mov fnstenv push shrb xchg in jno pop mov mov jns es mov jb movsl push loope inc insl cmp jbe mov (bad) repz (bad) bound jns pop adc mov ficomp pop mov sub addl jmp sbb and sbb movsb lods jns and into add mov mov clc pop mov mov lea (bad) ret in aad stos push leave jp insb ret mov in xor mov lods ja shrb aam adc and out das or xor cmpsl push call and sub push mov lcall inc lods adc cmc mov sub xchg pop cmp stos inc cmpsb sub out mov xchg and int push aad lock lock push mov imull in pop mov (bad) cmpsb mov push sarl push stos rolb sub movsl jp inc int jmp sti shrb jmp jmp jmp jnp add mov and cmpsl pop ja in push sub (bad) (bad) ss sub xor into sub icebp mov xchg push adc mov xor sbb in xchg push out pop xchg adc inc fldl push pop clc fmull outsb js jmp je and dec cmp scas int sar or dec imul je jae xor (bad) lea scas mov or jmp ljmp dec xchg push xchg and divl and test mov inc arpl mov lret and mov and popf sti dec ret dec jno aaa or out es popa xor rcrl (bad) loope dec mov (bad) lock ds fwait push cli insl es dec ficoml es (bad) jle adc jmp xchg dec push jns push and pop sub mov dec dec mov out dec mov popa jnp and jno inc imul mov pop in pop sbb jns test jae inc cltd arpl jp mov test xlat imul test push inc fistpll push (bad) mov pop sbb gs ss pushf fdivl aad xor xchg push nop test cmpsb cmp dec outsl xchg outsl mov scas jne inc mov jne sarl fcmovu xor arpl les in jo lcall icebp outsl inc mov stos gs dec aad sub dec movsl aam jle mov imul arpl imul mov jp adc (bad) cs jbe in insl pusha sub mov leave (bad) mov cmpsb cld je mov mov insb or aad pop cmp lcall loop loop shlb ja loopne sub out (bad) mov aad fwait (bad) xor cli fcomi mov movsl cmp out out pop xlat int (bad) push lds (bad) dec and mov aad incl push add jbe lcall cmc lods aad mov xor stos in imul mull test dec sub iret cs out jp xor sub mov out nop xchg xor adc iret mov inc dec mov mov and dec mov pop js daa leave pop shrb (bad) ljmp fidiv shrb movsb fisubr sub push mov popa iret push mov imul aad pusha mov fidivl out mov aad add outsb call movsl in adc rcll mov add flds add mov xchg idivl lds jns hlt les mov jnp jbe test jl and xchg (bad) in add jl adc add add ja add mov cmc enter or (bad) sub fiadd cltd push das bound and mov (bad) imul (bad) mov aam pop negl stos stos popf push pop (bad) jecxz jnp test lods imul icebp pop sub repz (bad) in aam out sbb negb scas mov add addb add and add and push jbe ds popa adc push imul or dec xor ja cmpsb or aad mov push push into lcall iret mov je sbb inc mov add or xor loopne mov sahf clc into (bad) shlb fsubrp sti fstl adc jecxz (bad) ss xchg push mov shrl aad sarl out xor gs push popa fiaddl add add inc inc and test add adc inc add and and add adc add add sbb ljmp push push lcall lods mov fstpl sub jmp ljmp leave popf stos cmpsb push mov out aad fwait mov ss inc pop pop bound jne inc stc or push lret es push outsb xlat jl xchg push movsb les movsb js (bad) fisttpl and push (bad) fisubrl mov cmp mov jns push xchg jo mov inc dec addr16 jne inc pop out jbe dec xor cmp enter sub (bad) xor (bad) jmp cmpsb cmc push cmp add imul mov movsb dec imul and adc in jne hlt (bad) int inc jb aam pop cwtl out jl icebp loop cwtl lea sub jae idivl cmpsl (bad) repnz sbb cltd imul mov ja add mov or data16 add add adc adc addr16 fs add jmp adc sub aaa sub mov fs or mov sbb inc xor cld inc mov mov sub cmp xor fisubrl (bad) out pop sub adcl xchg fwait repz cmpl xchg int3 ljmp out lods data16 cltd pop mov fst out add fldcw and lods jo dec push adc push adc push adc lods fidiv xchg ljmp xchg mov inc inc call (bad) enter fnstsw dec shlb adc out mov pop jle out xor xor mov call lds push scas or scas cld rorb xor mov test sahf fwait mov push jo or ja dec adc sbb fidivr xchg mov int3 pop pop sub mov xchg xchg dec out imul das xchg movsb jmp in sbb out fidivl ret dec out (bad) cli pop inc inc (bad) push outsb jnp jae push and mov jno (bad) push mov push adc sbb sarl jb pusha ficomp addr16 sub stos push cmp xor adc pop pop push or je es xchg ss push jmp mov push push stos xchg sub fsubrp stos adc lret dec cwtl in mov test aad mov adc or cmpsl adc pop add loopne fwait mov fidivl push jmp dec lods lds je int3 (bad) cs pop movsb mov sbb out nop scas stos mov push aad xor fwait dec fnsave and sbb lods lods mov aas jb pop stos popf bound test mov aaa jne dec jp inc lds jnp mov cmc test out outsl ljmp push and lods push lods cmc jnp imul push pop cmp divb cmp xor mov sbb pop inc shrl mov dec stos cmp push jb pop and pop mov push lret mov movsb (bad) mov loopne jne fidiv add stos lods int add imul push and test mov (bad) push fisubrl inc dec out pop std addr16 out orl in mov inc (bad) mov (bad) stos ja call dec jno orl shrb mov stos inc inc lds pop push movsb arpl xor mov and out xchg push js in jb xchg jnp mov fdivrs fidivl insl lret pop imulb les jae and inc mov fs cmpsl in rorb push (bad) movsb mov and cld mov imul lea push dec rorb cwtl xor jns in leave sar ds aad dec xchg and movsl jmp xchg cli fcompl aaa mov pop jns mov xor ljmp out out lea push push and call test adc xor mov clc jno (bad) arpl in ror jbe push adc outsb aaa and ljmp outsb pop jl popa dec jae sahf xchg sub js inc rorb pop repz or xchg cmpsl data16 mov and rorl sbb aaa xor in pop jae (bad) xor add mov cmpsl sbb pop test jecxz aad sbb mov addr16 flds lea jae sub push dec fimul push adc inc pop mov repz hlt inc out adc or xchg jp or sbb mov mov cwtl arpl lods add mov fs lea push mov mov (bad) mov fs push fimull lods cmp adc popa out mov sbb dec jp aas les lds add ljmp daa sbb (bad) pushf adc and in sti rorl lret sub aaa pop xchg (bad) mov cmpsb pushf mov mov cmp xor scas push mov in pop fdivp push sub lods (bad) mov jb cmp jno sub cmpsl adc gs jecxz sbb xlat jle rolb loope (bad) and cmp das push sbb inc mov adc mov jbe out lea jno mov cli and stos cwtl sub and jno and push xchg (bad) imul repnz sahf push mov lods fwait cld cmpsb xor jne lret ljmp in mov jae mov xchg jp and imul sub cmp push into xchg pop push fnstenv rorb mov iret aas mov pushf jbe stos sub loopne push mov test sti movsb add pop aad les dec dec inc (bad) in cwtl push in cmc sub and push pop add or inc adcl test add adc and push add and add or stc in xchg add sbb push add mov inc xchg mov push imul bound inc sub imul incl or jae aad fstl js push add addb add add add jbe pusha inc add aaa cltd outsl arpl je xorl mov pop mov push cmp pop cmc jp arpl sbb and imul loopne (bad) push inc inc push add push dec outsl movsl loope,pt xor xor sub cmc dec dec dec dec lock ljmp jbe push sub scas not fsubr fwait int jo lods jae mov jecxz imul dec fimul add mov add add pop inc and subb add or rclb add sub sub push xor icebp pop fcoms lret ret jl icebp pop in xchg inc test stos loop jp jge and pop imul sub sbb shl fisub daa loopne mov out scas ss frstor enter nop pop inc lods mov and jno xor imul shlb mov aam cmpsl lock push xchg int sbb sbb ret andl pop push inc int bound dec inc fistpll cmp adc les lea add inc fsubl push sarb mov dec lods jne jmp sub xchg fsts in lods cmp cmp insl inc test aad mov inc xchg das enter cmp push mov dec push dec icebp pusha les push in jae insb les mov pop ja lock shlb add add add mov dec nop mov loopne cmp add sub sbb dec jb inc ret dec cmp adc hlt stos pusha xchg pop xlat stos fnsave stos push cwtl push add mov push sbb adcb imul xchg sbb pop jne inc fild adc fsubrl stos pop cld mov jmp pop push mov jge in push pop jo fucomp xchg scas ret mov sub push jbe test cwtl jecxz or cmc mov fwait sti mov xchg in mov (bad) jb lds (bad) into cmc dec and mov jp or (bad) mov jl adc push xor xchg scas jle sub data16 out fnsave dec adc push pushf or cmpsb push jl (bad) mov add or jno and push (bad) sbb jmp dec dec lods xchg inc (bad) mov push movsl push cmc dec fdivs pop sbb fsubrp lds cs stos mov in (bad) pop mov inc lcall bound imul insb movsb sbb mov xchg dec mov push int hlt add xchg pop imul mov inc outsl mov mov (bad) push shrb ljmp sbb cmp push pop sub dec clc jp aam adc push mov (bad) in lock mov or jp cmp jl mov dec cmpsl pop ja or cmc mov popa push jb sbb mov mov pop push or cmc mov push jae les push mov sub mov js jp fistl push push mov icebp mov cld pop nop cmp jno in sub test dec sbb xlat dec push bnd mov or mov mull or fcmovne mov mov xor dec ds mov xor lock sub sbb add jb ja jmp pop inc pop jmp inc fstps into xor adc sub or repnz jne cmp inc stos push or mov xchg js aaa sbb mov pop xchg push push lret shrb or push mov dec outsl dec jp fisubl (bad) push fstl cmp dec cs push dec dec sub or pop mov dec icebp dec mov cli rcrl pop or stos mov imul fldenv xlat fnstsw enter xchg aam fucom cmp pop aad xor int cwtl fmuls push xchg leave push pop push outsl add xchg dec les pusha mov jle xchg pop jno adc xchg aad stos mov aad xor push (bad) fisttp push ljmp fstpl adc dec sub adc in cltd or sahf int3 sub mov sbb ja repz scas dec dec inc insb push xor into mov or (bad) sti mov jecxz in sahf ret lods cmc cli (bad) int3 ss dec dec aaa or icebp imul sub xchg pop cmp nop lods dec pop cbtw mov daa movsl imul xor out and pusha bswap out pop stc push mov cmp cmp xchg xchg movsb aaa jae xlat mov mov xchg push mov xchg mov fstpl cmpsl ljmp push pop enter xor mov jnp xlat data16 xor repnz mov cmp int int mov and sbb stos mov jecxz lods push or and stos stos test lcall xor movsl das push dec push mov shlb insb sbb pop jecxz,pn sub sub (bad) mov rcl dec (bad) jno hlt dec insl mov out je push shrl xchg out stos lcall push dec (bad) repnz imul sarl mov pop stos out sbb cmp adc imulb xchg aam cmp jbe push sub out mov pop lahf push or insl cmp mov stos jb and cmp cmpsl sbb mov mov add jns dec in test jbe sbb es fstpl aad jo dec es and mov int3 jne dec negl icebp adc dec push stos mov xchg push inc iret pop xor cmp pop loop add sub test and cltd scas in mov iret unpcklps movsl js lcall movsl ja xor loope sub cmp mov xor (bad) push fldl fsubrl gs and adc das inc push aas out nop int3 pop mov movsl push mov sahf mov inc (bad) mov pop out lret mov push mov lahf jne push xor jne mov aaa xor and sbb mov je push int mov mov fs jecxz mov rol ficomp dec outsl push bound push add add add add rolb or push push or test inc add add sub out iret mov aam xor cltd add inc out add push jo push inc mov push and andb sub and sub add add add adc add add mov push or add xchg mov lock and sbb or sub dec pop xchg hlt iret push push cs imul pop hlt jnp push adc int mov push test add inc stos adc mov mov imul int3 push cmpl cmpsb sub mov ja xor cmp sahf push scas ret (bad) xor frstor mov push outsl lods jmp xchg pop test shrb dec das xchg movb add int3 adc add push int3 vprotw popa in test add aaa inc mov (bad) push out jg mov fisttpll (bad) mov jmp inc (bad) mov aaa aas pop mov rcrb ffreep pop or inc mov lds sub push lods mov sub imul test fs bound test mov mov inc mov xchg and sbb (bad) call sub (bad) xchg test sub ss loop scas movsl sbb inc mov add mov lahf xchg sub ror fwait bound clc lods dec pop xchg xchg jae jp,pt in ja add jbe ret jb pop push mov loopne jl push mov jnp mov ret cwtl mov or insl mov mov lods mov xlat dec push pop cli je insl jnp jno (bad) jne cwtl imul jbe cmp jae pop (bad) aaa mov (bad) out dec adc add outsb sub dec add add add add inc or add add add dec add xor xchg add inc fcoml in jbe in dec cltd xchg cmpsl add and mov cltd xchg mov in movsb bound or es sbb imul outsl dec or mov dec cmp push lret out inc lds mov aad mov jmp jle sti shrb pop sub rcrl mov add rorb es push push add mov hlt push mov cltd sbb sbb jb adc jle add sub cltd imul fwait mov mov fldln2 cmp stos gs pop lock ljmp scas add imul mov mov cmp dec pop imul test stos mov jge adc ljmp mov mov mov push or out push lcall and dec adc out test push es dec dec aaa fiaddl xor xlat jne sbb fstpt jl cwtl mov mov mov inc lods add jecxz ss popf lahf mov cs or movsl sbb inc lret fwait jb shrl movsl loope insl push rolb cmp xchg sbb in adc dec out mov mov (bad) out push cmp push and dec pop push jo jns adc pop cli and add imul pop push sub cmp pop fdivl mov dec jb lds (bad) jge mov (bad) ljmp xlat mov push jp enter negb mov cmp loop (bad) lock jo mov inc iret imul mov (bad) scas stos sub xor stos push pop mov imul xchg dec out push scas cmp jno adc mov jnp fsts mov sub out sub dec push lret jne pop cmp dec (bad) arpl cmp ficom mulb inc push and or and (bad) pushf inc xor mov (bad) jo inc (bad) out jl adc addr16 lock push (bad) push adc jne dec and dec mov cwtl rcrb xchg mov movsl aad mov out loop fsubrp in xorl jno outsl add (bad) (bad) (bad) int3 sub mov pop into mov in bound cmp imul and iret mov lods push jp pop add es pop clc (bad) push aaa fsubrp imul lds jne xchg mov pop push mov ficomp push sbb pusha and jp push dec outsl mov lds mov stos es fnstsw lahf lret xchg mov mov cmpsl adc lods xchg lcall call addr16 pop lds dec adc pop lods int3 jp test stos sub mov push push jb out clc sbb imul xor jecxz pop mov in xchg jl mov xchg arpl sbb inc add ficom cmp in jns inc mov cmp lahf xchg jae lods call pop fidivl loop pop stc add xchg inc pop jbe pop imull rclb mov je jmp shlb scas push adc mov es jmp dec lods gs xlat mov push loopne stos shrl shl stos pop fsub push inc mov std outsl scas ret gs xchg outsb pop movsl sbb or rcl jmp shl arpl mov addr16 cltd outsb mov mov fildl mov fcmovbe out test imul mov push jno std popf mov mov lods ja jle fstpl (bad) movsb inc sub movb xchg imul out dec mov mov out dec jae (bad) icebp mov push and (bad) mov imul in in jo imul pop and jmp scas sub lret inc pop push adc mov fwait xchg mov test jo jns lret inc cmpsl lcall pop icebp mov xchg and fwait ror daa pop mov cmpsb sub jo je out mov jbe imul test loope iret or push push roll jbe mov nop push inc mov out je jge mov cmp popa inc movsl js push lods shll or mov ja stos js mov stos push dec shll sbb movsl je pop and stos ror mov orl inc inc rcrl ja xor out jo inc test and scas push cs xchg pop (bad) mov loope mov jo in xchg repz lock cmpsb push adc stos cwtl adc add add add test or add dec inc test dec mov pusha or or sub sub add add add movsl or mov or add add add faddl sbb add add repnz add add add and add add add add add add lds enter inc pop cs dec lods jecxz jge lcall sbbb mov push xchg xor sbb sbb jbe popa push mov cltd mov add incl adc jne or scas add dec and and fyl2x clc cmpsb in pop push aaa (bad) sahf push test fistl jp lods imul xor imul push in xor gs xor aaa pop andb or xchg or dec and mov stos jb gs scas pop stos jge enter sub inc push pop mov cmp mov add add push hlt cmpsl adc cld in mov pop and lods cmp insl es insb mov sub enter fwait xchg decb insl xor pop sub mov (bad) dec xor push hlt mov leave lods jnp nop fiadd popf or ja mov outsl mov loope mov adc movsl pop jge mov xchg mov mov test adc inc insl in pop out sahf stos mov sub sub add push popf lock in lcall lods lret inc mov in clc outsb jb popa sub mov cli pushf cmp je xchg sub fdivrp or xlat fistl mov in jmp push aam dec push popf arpl or clc icebp lahf sbb fist sub mov out mov mov pop cmp mov cmp mov sub dec (bad) fwait popf cwtl jg push add push scas lods sbbl xlat add rcl lods call and inc cwtl cltd (bad) adc xchg mov lds pop (bad) aaa imul or imul xchg sbb jbe lods mov repnz test fwait mov lahf xchg fs mov dec shll insb in out aaa cmp in pusha enter sub pop fwait (bad) mov mov push sbbl scas pushf lcall test bound pushf stos (bad) test mov add adc xchg inc stc testl outsb inc inc sub mov xor sahf andb ja rcl or adc arpl loopne data16 xchg push fimull push sbb dec arpl add (bad) mov xchg mov scas in jne xchg mov lret subl lret fisubrl dec cmp test mov lcall mov mov jl xchg fistpll ljmp jae fucomp arpl lcall xchg lret push icebp jl test inc fld push fnop lds idivl jns push stos stos inc les hlt fwait je cmpsb out aad push add mov imul and push sub movsl loopne adc push inc rol jb fisub (bad) jne dec mov push cmp xorb jnp mov les push pop or sbb push xor fidivl add mov lret pop outsb mov cltd outsl jmp xchg pop stos lcall inc hlt (bad) (bad) mov mov jnp dec and outsl add push mov stos lods push sbb pop add ficomp dec mov scas in jmp dec push push cltd sti out lods jecxz aas sbb dec std (bad) aaa pusha xor sub in push and popf sbb cmpsb fsubl mov sub mov lahf movsl or sarb test sub mov or fstps jnp push mov pop (bad) xor mov cmp cltd mov jno fisubl jp push and adc out pop repz or mov cli stos cs out or dec inc fstl test rclb mov sub pop das js negl and push mov test xlat mov stos pop push or xchg jb out (bad) fwait mov insl add scas sub fcmovnu and fdivl jae movsl adc push mov andb pop sbb sbb outsb push stos cmpsb stos jne dec inc inc pop icebp dec rcrb ret (bad) xor fstl fstpl loope mov dec xchg rcl add movsl push mov loop cli loopne fwait pop sbb int mov lds ucomiss call push adc dec jno jbe scas dec jb pop into and or mov rcr scas stos dec imul leave lods jns jno (bad) cmpsb scas mov pop pusha sahf stos mov fist and ror rcll mov mov stos ljmp repnz jb jb mov push aaa fucomp ss hlt jecxz stos (bad) movsb pop sti xor scas mov mov scas sbb mov in movsl sub mov in mov scas push aad mov test pop push xor shr inc inc scas jnp mov fldt cli push jbe pusha imul jmp rorb push adc adc push aam cmp ret lret loop mov cmp loopne add add or dec mov aaa sub jb mov clc push sbb mov aad mov mov mov xor (bad) sub dec iret push mov dec mov movsl xchg mov jbe leave scas fsub into push adcl pop (bad) arpl out int pop xlat inc jnp jne jae ret jns mov inc sub xchg pop mov mov or cmp push int push xchg mov inc aas cmp call aad lcall sub sub fstpt and test daa sub inc xchg mov (bad) data16 jne pop or xchg pop pop std xchg sbb js incl sub sbb mul add push xor mov jmp dec push scas sbb cmp xor popf (bad) xor in mov mov pop xor push or pop mov mov les in stos push mov popf jmp and sbb stos outsb dec test and sti cmpsb push popf push jl add int ljmp adc cmpsb lret test mov lret jbe aaa and (bad) cwtl push pop pop out jp out push fisubr mov mov jecxz cs jp mov pop sub stos stos (bad) (bad) jb xchg dec sub pusha stos xchg dec push push lock or dec lods adc add mov inc push push add add add add test sub push lcall xchg push mov inc test pop sub (bad) stos pop (bad) jns add int3 xchg adc and and add addb add and sub sub mov add add add push addb faddl lds add jge inc adc inc enter (bad) jmp add cmp cmp or std fisubrl xor les int dec ficompl sub and aaa pop (bad) not mov inc push enter stos cld decb add test add inc cmpsl loop mov in mov xor add mov ficomp dec js dec xlat cmp fistpl push bound cmp lret lea xor movsl push xor (bad) mov mov push mov inc xchg stos pop push inc mov push mov (bad) xchg out fadds lcall mov fldt dec dec jne sahf pop push mov fcoml dec push xchg push mov push orl jmp mov pop jmp xchg leave aaa mov pop inc in sub test push or popf push shrl and imul push in call test jo jnp mov pop nop outsb inc in insl xor enter dec (bad) mov aaa jge lods fisubl jg inc fnstsw mov xchg fimul lods push mov and ss push (bad) popf popf mov leave mov nop push test jge gs shrl or adc insl fwait adc cmpsl out enter rorb add add stos in push pop adc push push cmp sbb push sub dec (bad) je mov jo daa dec and lods arpl dec int3 cs hlt bnd hlt mov mov sbb stos int add int3 xchg xchg test jae lods ja lods mov pop xchg ficompl xchg fisttpl fnstenv pusha fnstenv les in mov int jmp pop std es jle add pop imul es xchg lcall lea pop loop adc ljmp aad (bad) incl jl jno lahf push les and xorb push and jg xor mov ljmp addr16 mov lods daa ret mov push sbb (bad) test test pop mov into (bad) imul push push xchg gs bound out rcrb cli and stos inc sar push into mov xor sub call sahf sbb and mov rorb gs shrl mov mov jns out pop inc lods or pop mov pushf sahf jl xchg fildl xchg and xor outsl inc jne out imul pushf sbb outsl mov ss sahf call mov insb in push mov int adc xchg lcall in mov rcrl jno fbstp movsl orb aas test (bad) sti jle (bad) jbe cmpsb mov in sti das stc fsqrt pop add sar lcall in mov rcrl jno fbstp movsl orb aas test (bad) sti jle (bad) jbe cmpsb mov in sti das stc fsqrt pop add sar lcall in mov rcrl jno fbstp movsl orb aas test (bad) sti jle (bad) jbe sbb xchg push (bad) mov dec pop repnz cmp in xchg mov popa iret (bad) cwtl and xchg push ljmp push data16 mov sarl fcompl jle sbb imul fwait sub test cmp (bad) insb int3 test mov mov jp xchg ds mov leave cmpsb lea adc repnz (bad) incl xor or (bad) push aas fcomi pop repz xor incl outsl fnstcw iret rol pop out aam cmpsb mov incl cmp push pop lcall cld in std sub jle std dec jp (bad) push aas fcomi pop repz xor incl outsl fnstcw iret rol pop out aam cmpsb mov incl cmp ljmp std ds jle cmpb adc mov aas addr16 sub fnstcw mov pop hlt sti sub add ss sarl jle (bad) jbe js imul cmp dec add pushf sub jb sub add mov sahf cltd outsl mov cmpsl cli jge cld call sub in ss mov mov arpl (bad) outsb add and pop push add (bad) rorl pop fnstenv xchg rorb mov outsl imul xchg cmpsb cmp (bad) push cwtl sahf lcall mov fldcw xor pop cmp adc and subb xchg pop lods mov mov cmp outsl lea sbb adc push fwait push mov ret dec lret jg out xchg cs mov movsl fucomip xchg mov cmp push leave popf shrb push lahf jnp jmp pushf lods dec scas mov mov add cmp out cld push xor push aas xor xlat stc dec pop movsl jmp pop add mov jns cltd dec cld mov call mov leave and in repnz insl xor add enter pop in mov push rcrl and lret mov sbb icebp pop enter jno jbe test dec and sti daa jmp pop insl jnp (bad) and xchg ja fsubrs stc insl lret jge shrb enter daa push out into xchg imul cmp mov out aad jge cs pop lret xchg arpl gs and mov push fldl inc sbbl pushf insl xor pop push (bad) shrl push cs pop call into dec inc (bad) jmp adc iret mov daa adc fnstsw icebp cmpsb dec dec fdivs data16 ds aaa or nop mov jnp bswap inc lock sub icebp fldt stc rorb dec xor icebp (bad) div mov insb add int rcl push shld lahf fildl jle fisubl lods mov lahf into (bad) roll out xchg jb movsb ss mov dec dec inc out push xor bound arpl mov loop xor ds cmp mov test das jb push sbb xlat (bad) xor (bad) loope jp repz (bad) repnz push out das lods shr xchg pop and ret fcompl push push push push jecxz lea stos aad mov push push stc push mov es xchg addr16 enter inc dec cmp imul dec push clc sbb xor dec stos jecxz xchg jae and lret cmp int3 arpl insb mov push ljmp rcrw inc std adc xchg (bad) in scas mov mov pop (bad) in scas mov mov sbb mov xlat sti pop inc call sti pop gs sub enter jge das repnz ljmp fcmovnbe adc sarl cs xchg stc pop inc js call gs xchg xchg xchg xchg jp xor je mov push jnp sub fstl test ret sbb jns dec sub cld loop xchg dec or push shll stos popa xchg mov stos les adc movsl xor push jge in aaa push xchg add loope ljmp das sysenter (bad) stos mov movsb add je xchg pop jle mov push movsb fdiv shrl ret or arpl imul sbb clc imul (bad) mov repz stos sbb loopne cld pop fstps mov popf cli pop out mov mov std in cltd dec loope xor pop movsl mov in sti xor sar and cld out dec pop lea push (bad) repz push icebp (bad) stc rcll daa stc push xor out int ja mov out enter (bad) clc icebp lods mov test xchg and in out fs mov push fs mov push mov jp xor lds inc mov push iret arpl out sbbl pop mov test mov flds pop jg dec fistpl jg mov mov out mov xchg (bad) dec fxtract scas je ret cs je adc push xor cmp cwtl (bad) dec add iret sbb mov insl pop test lods mov into fs cmp das addr16 mov inc xchg mov mov mov pop leave mov dec (bad) fsubrs push int fimul mov stos cs cmpsb pop pop sarb mov xchg adc stos sti mov dec addr16 (bad) mov dec fcmovnbe scas add outsl pushf pop cmp xchg mov push test pop cmc (bad) jb dec inc xchg test xor ret test test ret arpl (bad) rcll into pop xchg insb das add sub cmp cmp sbb push addr16 sub sub in cltd xchg dec scas int3 rolb mov push sub mov (bad) dec aas fnop lds sarl aad ret mov xlat jnp pop cmp and pop pushf in (bad) mov ljmp mov xor repnz out in jne mov faddl aaa mov popf jmp test add out jl hlt mov clc adc (bad) lock cwtl mov xor je push cwtl out mull pop or and stos inc lods adc sub xor sbb mov push mov xor imul push outsb dec jmp (bad) icebp jecxz mov int3 jg add cld sbb push (bad) mov sbb inc mov mov sub mov in (bad) dec mov push mov mov je jbe outsl les push fs push les fcmovne push pusha add add add jne das lods rcrb cmp addl bound iret pop xor outsb push jle mov lods push bound jno or xchg jg add mov sub cmp mov stos out loope inc jl int3 cmp inc arpl lds arpl das (bad) fmull mov sahf shll xor push rcrl dec les mov pop out stos lret mov popf mov mov cmp xchg fbstp add repz icebp test jbe mov inc bound inc xchg pop call inc xor lret insl and fldcw movsl das xor int3 inc jae jne jae lock mov jb dec mov rcrl dec movsb mov ret push pop adc ljmp jne std (bad) sti xchg dec push lret dec ret arpl mov lret xchg incl loop mov repz jle jmp testl pop xchg je js aad xor mov jmp xor push mov push jmp fisttpll mov pop inc (bad) mov cltd loope sbb into mov lods shlb sbb pop nop xor cs push lds cmp xor xor jmp jle adc dec or ficomp arpl pop add cmc mov adc adc inc addr16 and movsb push and mov jne jle (bad) aad adc sub cmp gs popa (bad) scas sbb xchg push sub jne shrl push dec mov add add add add mov sub add and dec add add add add and mov test mov add jns and and add or daa adc aaa adcl add inc push add add add add in or and pop ljmp lret adc int3 lods stos es mov xchg and push or pop out stos jecxz shrb cwtl jp jno cmp lock mov out lret rclb push mov mov and pop adc dec push mov jb lret push iret stos jecxz nop (bad) inc loop xchg int jo (bad) out hlt or scas cli cmpsb stos nop aam sbbl mov insl push divb mov xchg push cmpsb push hlt seta scas cmp jnp out and dec inc (bad) fcmovu outsb rol int3 xor fs out jl mov pushf test lds cmp sbb sti addr16 mov hlt jbe xor cmp fldl sbb mov dec int stos jno idivb inc imul mov lea aad divl mov ljmp push pop add sbb ss mov pop mulb dec add int fwait std rcrl out jmp loope mov bound adc pushf sbb adc int subl jnp sub xor pop pop incl add stos cmpsb test rcll mov imul incl jmp aam scas cmp insl pop xchg mov daa xor xor xor mov jno fwait lret mov ficomp pop inc push shl insl dec js dec jne xchg mov aaa int hlt mov (bad) cmc aad jbe mov inc test push pop enter sbb jo (bad) xor push mov mov stos out and stos in adc sbb xchg je sbb in aad adc xchg pop enter lods jno in cmp addr16 mov pop fistpl sahf popl neg mov mov mov popa mov sarb mov pop push jbe xchg (bad) xor pop je xchg stc mov scas insb or dec dec hlt fidivr xchg pop fisttp into cwtl mov test add incl cmpsb push adc out es rolb pop xlat repz adc es adc push fidivl cmp out mov cli gs leavew inc lret jmp loop xchg add inc xchg push fcmovbe inc arpl or arpl jne imul push pusha add int3 mov and push mov mov (bad) jbe mov aas or cmp mov jae and hlt outsb cmp lret scas dec dec dec stos xchg scas fwait popf jnp mov (bad) fisttpl lahf cwtl fimull dec fistl xchg int aas adc mov lret adc mov pop (bad) sbbb jnp add in ja out jb bound cld sbb cltd jae lods sub jb es push push adc cmp das gs mov xchg push mov mov cmpsb dec call cs mov into rorl sbb or sbb lods je int3 pop loop pop jg pusha jb sbb xchg das gs xor in gs int test fidivrl xor cmp mov jae add bswap prefetch (bad) jns mov rcll jg xchg test (bad) repz xchg mov mov pop into (bad) lds dec cltd mov pop sti xor xchg cmp mov jmp aam (bad) push cmp incl or adc pop shlb insb cmpsl daa xor stc xchg sub decb mov add add add ucomiss adc mov rcrl mov push shr nop into mov sbb mov lods out dec adc jp adc and ret or xchg insb mov lretw and sub cmpsl in xchg sub pop cmp adc pop fidivrl pop scas xor adc jo es fs inc sbb add out push std cmp push push inc gs sti inc (bad) cmp ss push incl pop xchg mull retw xchg adc push out (bad) xor cmp in repz imul adc xor pop cli faddl test push mov icebp lock pop push pop fsubrs cmp mov pop imulb adc imul jae shrl push ja mov jmp jge jmp icebp lret outsb imul std (bad) int loop scas jge mov aaa int3 xchg (bad) adc lods je ret andl push push mov andl push lds add add add ret jp xchg cmp shll fcoms lahf or pushf fwait dec pushf xchg ja lds in xchg call or mov lret mov sar add pop cs in or push imul push xchg dec xchg lods fldt xchg xor ljmp movsb mov int out pop jno sub jle or jbe ret (bad) dec mov iret insb push sub adc xchg not ds inc movsl jg dec push (bad) add add add dec dec insl xchg pushf pop cmp leave (bad) (bad) inc (bad) mov lock gs dec insl les movsb aaa jnp cwtl pop (bad) push or fimull xchg jnp popa std xchg and adc in adc out mov scas xor sbb js outsb pop ja inc adc adcb mov bound and mov sub ficomp negl (bad) cmp mov jecxz push dec fxch incl push push insl ds rcpps add add mov ds sub fwait outsb add out push outsb pop (bad) jae cld cmp push adc cli xchg std lahf push mov out loop jge lods adc scas mov jnp add push push xor je add push imul sbb dec pop fdivs int3 das pop scas mov scas push scas js cld sarl xchg push repnz stos ja cmpsb cwtl pop test inc lods push xchg push add incl orb ficoml xor mov dec lock (bad) stos push jl fwait sbb push pop mov int insb add add add leave in iret icebp insl sub sub push clc aam inc aad dec shll mov jb outsl xor pop into ss mov loopne mov outsl insl pop xor pop imul pop adc stos mov add dec cmc imul out xlat sbb fidiv out jmp (bad) mov fcmovbe cmp aam mov popf xor and pop push shll xlat mov add inc push pop or sub mov pop jnp loope data16 pop cli arpl aaa popa ljmp insl test lods xchg dec inc xor pop data16 add add add add stc test mov in jmp (bad) xor pop lods out cmpsb incl (bad) aas dec iret push js pop lea mov cmp into mov (bad) lret in sbb inc stos push xchg lods pop push cs jle repnz rcl jnp jno jp dec and das stc fcoms or mov pop cltd lret addr16 imul mov in pop add lahf xchg jb jae (bad) mov mov mov add add add sbb push xchg pop sub xchg xor hlt in push inc ret mov mov adc cmc icebp cmp mov scas push (bad) jl fstps jae loope xchg cwtl test js arpl lods mov sub stc pop add sub movsb jae xor idivb mov pop enter cld das into loop push sti aas or mov test les lahf xor imul shr jp (bad) pop jmp int jnp imull sti rcrl or inc jmp sbb lods push movsl adc imul out cmpl popf push xchg sahf mov (bad) mov pop jle sub stos push pop scas ret mov js sbb cmp imul out int cmp pushf cltd call dec fcom mov sbb stc mov mov and pop xchg inc daa cmp ljmp xchg pop sbb xor sbb nop lods or mov dec mov jecxz in ds inc adcl loop outsl xor mov mov out sub sbb lock push repz mov pop movl test imul pop mov pusha cmp outsb (bad) sarl imul sbb out aaa daa and int3 jnp cmp dec icebp (bad) leave mov mov cmc je jnp pushf pushf cs insb mov mov mov push push xchg scas mov sbb out arpl push stos xchg push and aad xor xlat (bad) add mov cmpsb dec push add nop cwtl dec movsl fisub mov (bad) in mov mov push ja mov nop adc ret and rcrl je test push cwtl aad loopne push or dec xor jg stos push adc sub in xchg jle push or add rclb out xchg add adc or inc inc (bad) dec inc inc xchg addb inc adc sbb add add add add add add add adc add dec add add add push inc movb bound and fsubrs cltd lods mov cmp mov adc and push pop in lds sti cmpsb out bound cmc adc inc daa mov mov sub cs xor lret inc int data16 xchg inc mov enter or jb insl pop movsb jecxz sub cmp fstl ss sbb shld mov mov cmp sbb xchg shrl mov popf pop cwtl push add ds std out jmp cmpsb cmp outsb lahf outsl aas sub push xor test push or dec out ret adc fisttpl add sub adc and mov jb inc outsb mov mov add sbb xchg xchg xchg lahf ficoml mov aam mov xor loop stos mov sbb scas xor xchg ret in callw daa leavew inc xchg push out mov scas xor call loope neg jns mov push je dec adc fdiv pop into xor pop sub pop xchg pop sbb dec test orb in xchg sbb insb mov int3 pop adc (bad) in push cmp in icebp (bad) es pop frstor mov lods fwait sub aas cmp rcll cli pop push aaa pop sub gs lcall mov lods fdiv sarl into into mov sbb pop shrl hlt pop pop mov sub pop das and popa mov mov adc xchg pop cmp cmp mov daa lds nop fdivr mov sbb fidiv fadds push pop push jo push aas xor cli dec adc lret cs pushf xchg mov fstpl leave (bad) mov (bad) popf push jmp out sbb (bad) mull insb (bad) fdivs out int3 dec daa aaa jno and in cs outsb push cld (bad) sahf or jno push rcl sub inc xchg mov pop fs jae pop cmpsb loopne fs xor fwait out mov ja,pt xchg rcl dec fisttp fdivs push int pop fcmovb cwtl mov mov jle pop stc xor pop bnd movsb mov xchg adc dec ret inc inc orl inc mov outsb dec addr16 (bad) enter adc sbb mov mov (bad) xor xor add add mov addr16 pop sub shll jae hlt cld mov and pop idivl out xlat pushf out cmpsl sahf adc mov mov popf ja mov enter lahf jae sbb int pop cmpsl fimul (bad) arpl ror dec dec mov aam repz jmp lahf cwtl jo scas push imul push lods (bad) jae in xchg cmc iret inc and dec (bad) nop xchg push insb mov movsb mov add std call add xchg lods xlat inc xchg jo fimull scas or dec cmp push push lods xchg icebp sub imul jnp mov (bad) and pop std arpl xchg js das aad incl lods addr16 (bad) mov test lods pop cmc mov push jecxz mov lahf lret cmpb mov jg xor dec or fwait push es iret xchg push shl insb cmp (bad) pop xlat lcall test int xlat or cmc pop nop dec js cltd fcoms sub fs jae fisttpl xlat mov mov jg xor dec (bad) ljmp ljmp mov push psubd jg clc clc test scas dec mov jnp mov in or dec clc push leave sub and call pop mov aaa cmp add add xor (bad) sub fadd stos in enter (bad) and pop std arpl xchg icebp mov sbb pop dec inc and dec aam dec xlat (bad) lret push in imul inc std ja mov in (bad) push jecxz mov cld cmpsl in movsb dec dec push stos mov sti dec stos mov xchg ja (bad) clc pop jmp mov sub (bad) arpl adc scas xchg dec rcll lods stc data16 dec mov outsb dec dec popf (bad) and ljmp adc dec divl scas mov (bad) jae insb (bad) lahf movsb cld test ja addr16 in jmp call outsb jne rcrb leave sbbl ret (bad) fimul jp hlt incl dec mov das incl sbb adcl sbb cli push scas cmp cs adc add add add repz fmuls insl call jae jl mov push cmp rcll lods ds add inc or and xlat xor imul push cmpsl fnstcw call mov sbb jl in or (bad) xchg or add dec imul pop mov iret fmul mov xor stc ljmp pop fwait scas daa adc outsb jmp dec push mov dec insb pop stos shll xor fnstenv cmp rcrb sbb (bad) mov lock cld pop xchg lcall push mov add cmpps hlt push fisttpl repz sahf push fs pop mov movd incl (bad) xbegin xor sbb ds inc xchg and inc sarl xor mov hlt lods imul jge sub mov push mov sbb mov sarb pop cmp int3 outsl cs jnp adc lret inc and mov dec lahf sbb addb add mov aaa mov mov pop push ror pop sub loopne and jae lahf jmp lret (bad) pop std push fdivrs and stc cs xor sarl mov cltd cmpsl lods popf bound mov cmp inc dec or dec lret ret imul lock or frstor or fidivl push mov (bad) icebp lea scas std enter add iret lret arpl lea cmc mov outsl ret cmp loopne ss jns xchg arpl inc pop adc (bad) ja add add cmp loope daa int3 repnz and mov jbe scas mov in cmp loope addr16 pop sub mov and pop mov pop out add add cmovp imul dec and inc sbb pop (bad) insb push inc std bound scas cmp jmp lds push add sahf in lock roll and fisttpl pop and incl popf leave mov out jg inc cmp test aam test rcll jb jo add add add mov push or loopne cmpsl xchg std sbb mov mov cmp add mov mov cmp or lds sbb fmull nop xchg lock shll stos and push int out clc push (bad) mov sbb fiadd dec testb adc sbb or sub or daa mov push adc divb dec mov fcompl and aad cmc cmpsl sub ds pop int3 push stos and pop lcall add adc add (bad) ja jecxz sahf add mov cmp push adcl int3 inc mov ffreep cwtl jns pop sbb data16 shlb or mov inc insl cmp pop adc sti push mov mov add add pop mov bound iret push imul or and mov sub repnz aam jbe sub xchg jns popf or xor call mov bound test mov pop lcall mov icebp sbb mov or mov lret pop xchg je lea xor ss jae div bound push inc out add jp daa movsb (bad) sub xchg push lods enter dec inc outsl out adc xor out in cld lock inc es pop ficompl pushf (bad) mov imul fsubp jae adc outsl cmpsl inc std xor rol add cmp push sbb pop push xchg and rorl dec push and push and xor repz mov push inc leave outsb (bad) out xlat stos jb lds and push shll inc popl xor lds mov (bad) mov push addr16 pop cmp mov cmp jl jmp sbb jp adc fsubs inc push and mov xchg fnsave lds push adc insb mov mov pop and pop test xchg je fs jge sub lods out dec scas dec frstor push pop cs jmp jno repnz sub pushf lret ja adc mov test in mov es in in jno orl push (bad) popf bound hlt mov adc ja ja inc add cwtl push aad dec cmp inc add (bad) in test add or adc add jns andb adc add add add add or inc inc and adc lahf mov adc inc inc inc inc inc and add push add add rolb orb and add jbe or imul pop sbb adc scas cmc jne mov mov scas sbb imul mov (bad) leave adc inc pop cmpsl bound das outsl sbb js hlt cmpsb dec inc xor push xor stos sbb mov cmpsb (bad) mov adc dec mov out cmp negl push in sbb cmp in add pop xor push cwtl div mov out ret fistp cmovge rcr repz in pop je push int lahf arpl or and popf lahf inc fild repz sahf in scas mov movsb cmc ret and lret jo movsl aad aad scas iret mov test stos dec or test mov mov push ds scas xchg sbb xor clc mov mov mov lea adc cmp lods test jp outsl inc inc pushf mov idivb jbe lret fucomip clc lods pop cwtl iret imul push cmp rcrl pop pop fs repz std and mov xor and fstpl (bad) mov ljmp pop imul jb push imul cmp dec les sbb pusha dec (bad) addr16 inc lret sbb push in test adc nop nop add add add pop sahf mov in and and mov or mov sti cmp gs sbb data16 gs insl or (bad) dec addl dec sbb jle sub sbb push or pop mov cmpsb (bad) (bad) jae or mov je xchg iret shrb bswap or repnz ficomp pop ljmp mov sti jle cld mov push fdivrs inc aas outsl das adc mov xchg sub das add mov (bad) lea sbb sub popa mov (bad) xor inc out dec lret outsl pop imul stc inc sarl out popa push negb cld imul cli xchg add sti in nop fnsave mov (bad) (bad) add popf lea (bad) into fxch into dec repz insb mov mov (bad) xchg and repz ljmp outsb fnstcw (bad) aam cmpsb lahf pusha out fnsave movsl mov mov ds mov pop push outsb lcall (bad) jbe xchg cmpb mov pop xor in xchg cld in jge mov in fldt stc fsqrt pop add xchg rcr or mov shlb xor scas je pop xchg popa mov movsl sahf mulb dec fidivr jle adc pop xchg enter icebp imul xchg pop jmp enter out or xor aas inc jns in inc sub add (bad) xchg fwait xchg mov fwait xor xor cmp (bad) jle push cmp mov jmp in shrl std inc popa std mov sub das das adc in shrl std inc popa std mov xchg or ficomp enter inc icebp mov lock lcall inc bnd mov cli sbb mov ljmp pop pop mov divl mov add lock rorl pop mov xor inc push std xchg xor jo sahf pop enter mov cld mov imul mov pop (bad) imul fsubrp ljmp lods xchg jbe sbb pop push push ja outsb ret jne mov mov xchg movsl je lock inc ljmp xor imul imul ja lock (bad) lock mov imul shll mov add test ss sbb dec dec aas jle out mov cmp gs xchg std ss cmpsb scas stos mov cmp push inc stos lods das bound sub mov pop xchg cli jnp rorl addl mov mov hlt aaa sub ja push cmp add xchg jecxz outsl mov aaa (bad) sub (bad) pop lcall mov scas lea xchg sub insb lods cmp in aam jge pop stos dec jb test lds and fcompl add cs pop repnz push or add dec xlat mov ret add fsubr sbb pop mov pminub aad (bad) xor out xor sar push push and mov mov pop in mov lea xor outsb bound pop pop int3 jae out outsb cmp mov mov xchg stc loope cs lea pop jp stos jns cmpsb out mov scas mov inc fisttp pop jp and push ds dec int3 fidivl data16 mov sbb scas jnp (bad) jne fsubrp pop imul mov add jb and popf pop jp rcrb jnp repnz shr mov fldt sub cmpsb push in iret mov js adc mov flds jno xchg in pop inc stos fistl bound mov sub roll xchg mov bound sub loop sbb bswap test mov and movb add xchg mov setge add inc sti adc imul idiv xor outsb pop adc lahf dec out faddp jb or lcall and cwtl in lds fimul lds out (bad) enter mov push pop dec js inc sti xchg sub repnz inc cwtl mov xchg xchg jne aaa cs mov lds outsb cmp mov les pop cmp sarb into pop aas insl mov mov inc mov pop mov (bad) movsl lahf aaa xor jnp push push cmp jb mov mov (bad) pop pushf dec push push push inc jg stos ja addl push mov dec int aad js sbb data16 push iret add imul les push hlt lods push ss mov stos es rorb pop dec push stos mov push lret mov pushf sbb add pop cs (bad) mov jns outsb into (bad) je addb pop and stos addr16 xchg xchg (bad) call fs scas mov ret sub jbe jnp add push and push pop or adc sub and fdivr xchg push cmp sub or (bad) stos (bad) sub pop xor stos push pop mov js pop adc push sahf fdiv repz dec dec rorb in jo leave int3 ret mov pop in mov outsl mov lahf pushf (bad) aam iret in xchg arpl lret push push mov movsb sub push mov jmp cld mov pop in in (bad) mul bswap imulb icebp pop mov stos cmp adc pop pop call incl insb jg sbb xchg aas push jbe or movsb inc inc xchg (bad) or jne jno inc insl out mov xor push push sbb out inc fs dec inc in mov fsts sbb dec ret insl add iret js,pn fincstp movsl in sbb scas movsb dec inc dec jg insb mov incl ret jns add xchg dec (bad) call adc incl xor lret ds or sbb push out mov divl mov sub addr16 mov retw xchg xchg subl push nop and ljmp lods in into mov cli cs (bad) jge shrl fisttpl dec dec les int call cmp imul stos lea cmc jbe push js dec cmp imul lods aaa ja dec mov ljmp xchg pop push in (bad) int3 dec dec dec ficoml inc movsb sub nop and sub ret xchg int push jbe in xacquire ss sub clc mov imull lcall sub cmp (bad) (bad) jae scas int mov mov pop xchg fisubrl sar aas push sub jmp push xor mov push fcmovnbe lahf jp fmul jl add loope (bad) cmp lret cmp push push adc addr16 movsb in aaa fistpll stos mov jmp leave jnp and xchg leave xor push mov or jbe lods lea (bad) (bad) pop in in cmpsl jns mov insb sub or into (bad) int3 sub or loop cmp xchg jge push cmc jno int sbb jbe imull mov jl mov xor in fisubr mov jb bound fs (bad) dec cmp pop fxch push pusha xor scas push fwait mov push in pop ja insl cmp in fs dec (bad) pop stos (bad) icebp fistl std aas push cmp adc inc outsb sub (bad) and jl cs das stc and fistl imul mov (bad) xchg lahf lcall jp sub sub mov sbb jno xchg xor scas lds xchg testl jp mov std mov stos and stos pusha cmp rcl mov jmp imul out lahf mov push stos bound xchg mov xchg movsb push ds test rcrl rclb (bad) adc shl jno inc outsl leave fsts stos aaa imul mov mov mov ficompl mov (bad) pop dec movsb mov mov mov shrb fmull xchg mov xchg popa mov imul jb mov xor insb int shll dec (bad) cld fsubl stos shr mov push dec call fidiv test lcall lods dec jbe mov sbb xor fdivs sbb aad mov sub xor mov mov jb jae stos mov test scas nop mov rorl ja add push jb jb cwtl and stos fnsave (bad) xlat ret pop clc (bad) xor (bad) xor bound lods or pop mov sbb jmp xor mov fprem cmpsb dec pop dec ss jp imul push stos in int stos adc ja sbb jg out push jmpw gs cwtl idivl inc loop xor mov arpl popl ja push lret xor push stos imul push sbb jecxz add fstpt hlt mov push jp mov (bad) mov add mov inc repnz add inc pop ficoml add push in testl lcall add xor add mov add add adc and je add inc cmc dec add sahf push xor or add add dec and sub mov add add add add or add add add and imul mov test xor rcrl lahf inc movsb inc xlat fucompp pop xchg sahf mov adc sub push or mov hlt nop pop fsubs xchg jno scas dec inc cwtl dec mov jb push or sbb mov jno pop jnp movsl mov push inc stos push jb out icebp mov imul cmpsb sub dec sbb xor (bad) mov push adc lret (bad) es pop das outsb inc stos pop sahf mov (bad) mov push pop push xor jge dec push cli cmp in loop in xor xor add push dec push jo and pop adc jmp mov call xor inc dec xchg (bad) imul jb mov jmp or hlt js jl and fsubrl ret repz lea test loope sti inc stc shr inc stc das xchg shrb xchg stos inc popf mov mov (bad) aaa push or sbb sbb js sarl pop cmp stc dec or ret lea inc cmp adc cltd int aad (bad) push push scas inc fcmovne sub mov aam and push adc leave adc add xchg imul fstps mov inc mov ret xchg xchg sub adc scas mov stc out lret xchg inc incl cmc push (bad) jle lret into incl inc jp jae inc sub scas mov dec xchg out mov pop push sub stos jmp fdivrp cmovne (bad) fldt xor cmp pop mov pop repnz and int (bad) jl dec mov stc js in or (bad) aas into or rcr test mov in or (bad) ja stos mov fs dec mov in cltd pop out std dec mov in cltd pop out jmp ljmp insb enter pop push scas lcall pop out jmp or mov (bad) or push int3 pushf test xchg movsl push les jecxz test insb sub out nop add add add sbb mov in pop sbb mov daa and sbb pop outsb rolb pop in mov inc outsb stos xchg dec mov sub sbb mov ljmp (bad) in mov add add cmp in dec std inc mov sub lret popl cmc push (bad) jle lret repnz push outsl das adc test mov imul outsb pop xor int3 lret (bad) fcoms adc sbb add push and jnp jae mov mov fucomip xchg cmp pop mov dec es cltd fwait nop mov shrb out mov push jle arpl and in or (bad) aas into pcmpeqb dec clc mov pop cmp dec pop mov xor pop test and add cmp int3 scas test into jge and loopne dec mov in cltd pop out jmp ljmp insb enter cmp std cmpsl mov fstl imul mov xchg lock pop in jnp sahf test jl xchg imul into pop mov (bad) cltd dec ret stc fwait pushf out aaa into mov pop cmp aas cs pop aas sti jmp jge sbb jecxz xor adc outsl sahf stc push daa lds jns mov sarb imul dec jbe cwtl xorl int dec rcrb pop or testl fdiv repnz push test dec add jb mov std or jnp dec xor push and jne mov sub jl cmp inc mov test aam lret mov jecxz ds in neg lock xor out push mov incl movsb add push js jmp lcall leave enter sbbl jo mov or pusha mov push test push xchg mov mov jg jle add cmp nop dec cs (bad) mov stos fimul and lret jle xlat cwtl mov (bad) and jo int dec mov scas cmp add scas xchg jge out fsts sub xchg mov sbb orl cmp in adc das xorl fidivl rcr mov and adc repz ja push xchg test ds cmp and dec xchg arpl mov jno mov mov imul mov int3 mov dec (bad) mov shrb popf imul (bad) jp add add outsl dec hlt ljmp mov fstpt cmp jl and adc fdivrp push ss push sub nop repnz lea push in ss int3 mov xchg jns inc mov jle cmp incl test pandn xchg push xor xor insl jmp and lret cmp sub icebp sbb xlat pop (bad) mov stc xchg push and jb sbb sub cmp gs or pop stos insl cmpsb in (bad) push jge push movsb out cmpsl xor jb lret push inc (bad) push pushf fs outsl lret mov fildll daa jbe scas and fstpt inc xor stos mov and scas jnp pop fldt setb int3 (bad) lahf stos dec (bad) adc mov pop in fcos add cmpsl insb and xchg cld xchg pop add pop pop lock mov sbb mov gs lret stos jne test outsl ficomp es sub mov bnd pop xchg adc pop hlt mov mov and mov dec lret sahf inc cld cmpsb hlt xchg aas leave xor sub add (bad) hlt lahf inc insl pop push or sub (bad) (bad) icebp js mov adc mov jl inc lods rcpps cmpsl incl (bad) sub loope aaa clc sub in (bad) inc jecxz cmpsb ds mov sub arpl dec and rcl popf cmp mov cmc lods mov xor flds push pop lea fnstcw stos sti jp imul jp xor xchg (bad) jmp mov outsl rcr data16 dec pop (bad) fincstp cmpb add add in (bad) int3 xchg jl mov lds bound popa inc arpl out (bad) mov test cmp adc stos insl mov and dec cmp add cld sub cmpsl jl xor lret mov sbb push leave mov daa sahf fisttpl jno and push popa pop or int push mov pop es gs mov dec adc xchg bound fildll gs mov cwtl cmpsb adc imul ret mov ljmp mov mov fcomps sub pop mov sub cmp mov sar sub aam ret jl pusha ret cmp sub cmpsb pop mov imul bnd add mov dec mov (bad) jmp (bad) mov add (bad) enter jg jp mov mov xchg xor lea cmc popa cmp mov addl xor and jne test (bad) int mov inc jl repnz dec inc addl cwtl xlat ds jb,pt mov dec and cmpb push cli pop mov ja cld xor jp mov add and pop mov or mov xor gs lahf cmpsb pop cltd cmp fs insl xchg dec push out movl lcall mov pop cmp enter sub xor lret and out jne xchg push rcrl testb test cmp bound lods cltd pop mov xor xchg pop or popf das or pop incl lods cmp rorl lock mov mov jp jbe outsl lahf int imul add add add imul cltd push (bad) pushf xchg xchg adcl adc fsts sub adc jmp pop jmp pop pop inc data16 pop js ret imul lds pop mov jmp jmp jne pop or jae inc imul jnp frstor repnz (bad) lret sbb push mov sbb rorb outsl mov push mov xor (bad) mov inc lods jge int mov xchg mov xchg (bad) xor dec jo fdivp or push (bad) jnp pop aaa scas push cmp out into sub ja add jl jb popa mov (bad) inc mov ror es lret int3 dec shlb add arpl out mov hlt push call (bad) lods push sbb pop xor clc xchg bound mov scas sar jp push sub sahf lret movsb in test lods add cmpsb ja add jnp cmpsb cmp test lods mov sbb stos jne mov dec mov loope leave pop (bad) nop int xchg popf xchg jmp enter call jae iret ja hlt dec sbb test (bad) hlt addb mov and imul push in sbb push adc lcall sub mov pop xor push movsb pushf pop cmp mov (bad) (bad) stos fadd ret rcrb mov xchg sbb je cmp imul jmp in cmp fsts cmc cmp jbe mov push xchg stos imul leave (bad) sbb stos hlt lcall (bad) fdivr add in dec (bad) mov sbb fdiv jg pop xchg push xchg cmpsb sub and dec bnd aas inc rcrb sbb mov xor lods sti push add pop mov imul mov mov fdivl scas cmp push cmp push sbb outsb dec (bad) je repnz mov cmc push mov jecxz xchg test sub mov adc fsts sbb mov in insl add cmp faddp mov sahf inc enter pop inc loopne adc es jno,pt and push leave adc lcall mov lds imul push sbb adc gs xor insl iret mov out jecxz mov pop and test push int3 jle sub scas aad sbb (bad) or pop xchg xor cwtl sub and pop adcb add dec les ds (bad) (bad) mov add pop je add add push nop add outsl inc movsb andb adc adc add imul add add add sub sub add rcrb jg je add add sub mov sub add bound add add repnz test add add addb add nop add and adc rclb (bad) add dec jns sbb cmp lods js pusha push xchg movsl push ret int3 call mov mov es (bad) ja xlat push sub xchg sub and push loop in in hlt jb adc mov mov pop jb jo hlt (bad) mov jle fs dec mov mov idivb jmp (bad) (bad) aad adc icebp pop pop pop fistl cmc fisttpll ja jno adc inc rcr lock push stc mov (bad) xor mov dec add orb add inc inc test mov nop lcall imul sub cmp push nop cltd stc and cmp mov mov push jbe cmp loope dec mov sbb push jnp fistl push sub xlat daa (bad) into sub pop sarb addb add lahf pushf test das push popaw in test or (bad) mov sub push cmp adc in xchg sti loop push xchg adc fimull sti dec mov out stos push and (bad) (bad) jb sub lret xchg sub sub xchg popa xor in mov mov jb adc mov in mov pop mov mov pop es jmp testb add sbb lea imull xor jmp mov adc repnz cmpsl jb aad imul xchg int3 rcrb clc lret int3 xor out cwtl (bad) cmp (bad) into cmc fildll js clc dec js arpl incb cmp cmp cwtl clc std pop ret fwait pusha icebp lea mov xchg xchg push popf jmp bound aaa vpmaddwd and inc add add js call lret pop aad and loope push bound ja lods je into xchg push fimull (bad) imul fidivr push xor pop pop movsl mov hlt fidivrl mov out mov xor fbld push fisub incb dec lods xor mov lahf lods xor incl or rolb add add lahf or jbe (bad) cmp lret and cltd js icebp push adc push out ret orl repz repnz lahf mov out mov pop ljmp or jle (bad) stc inc repnz lahf mov out mov pop ljmp or jle (bad) stc inc repnz lahf mov out mov pop ljmp inc push hlt pop xchg cli imul aad fstps outsb lret fwait push data16 mov scas jmp mov push cli popa pop fidiv add push arpl inc movsl pop mov pushf pop ljmp push (bad) popa fnstenv push cmp dec sub pop xor sub mov xor and add push sbb and ja sahf lds sbb cmpsl jmp dec outsl cld mov mov cld mov or sahf jg sahf ja sub xchg sub xchg in jns pop mov xlat data16 lods dec inc cli in in enter pop cli jbe aas push fs das add push mov add aaa data16 dec mov cmp hlt je,pt popa lret pop sbb int3 arpl (bad) adc xchg push ret mov xlat and add add ss jge rcrb mov mov fistpl adc movsl or mov jle js inc sub lret (bad) gs pop lods int mov cmp in push cmpsl and dec push lahf addl fcmovu out xor sub mov inc stc and mov in fidivrl xor sub dec and or sbb pop dec je fcoml nop mov mov push mov (bad) jbe dec mov pop in push sbb inc fimul add scas push insb pop xor xor cltd test lods fyl2x push mov xchg ret pop in outsb inc xor movsl xchg mov js push ds out sbb xchg sbb scas sarl mov (bad) mov outsl dec sub push hlt sbb pop rcll lahf pushf pop mov adc rorb incl loop mov pop (bad) dec xlat inc in incl jnp incl adc rolb add cmp sbb (bad) xor sti jae clc sbb in pop stos cltd ljmp pop aad inc mov cmp outsb sbb ljmp push rcl cwtl rorl pop loopne std mov subb (bad) mov jmp fimull xlat jp testl outsl add push jbe data16 out fwait outsl fistp insb jp (bad) jne jp rcrb stos popa popf imul cmc jmp cltd ja add rolb add les or subl aas aad out hlt sti jae cmp dec lods adc mov movsl or dec lds xor outsl mov push or mov stos mov inc fsubl stos push mov addr16 mov mov dec push xchg dec movsl scas cmpsl xchg imul mov dec mov popa inc pop scas jnp imul mov (bad) ds loop inc sar push sub push divl xor mov mov addr16 in push mov fcompp aad in (bad) jmp add mov (bad) mov sub mov pop push test in out out jne test jb push fiaddl pusha dec inc jae mov js xchg jnp jmp lcall les jp mov jg cmp jmp pop imulb stos lods pop push dec lret push add das js out andl and jnp dec enter (bad) mov pop xchg imul scas pop sysenter incl dec sbb add xchg fs adcl sub scas imul cmc leave je adc in mov imul or push rcrl mov mov sysenter inc rorl jge rorl addr16 nop sbb push sub test (bad) mov scas pop imul adc insb dec pop int3 dec iret inc xchg outsl (bad) and lcall mov add push imul inc pop dec jnp mov scas arpl sti int aaa xor pop xlat xor ret cmpsb iret pushf push es pop clc mov jge jbe (bad) iret inc into xor jae jp (bad) mov adc test pop mov mov frstor jae dec inc xor ja cmp xchg xchg push mov mov mov jno (bad) ret add fadds aas xchg sub pop mov mov mov mov mov jl cmpsb sbb sar in rcrl or pop cs or mov ds sub arpl mov mov xor loope je add mov dec (bad) jbe hlt sahf enter or ficoml add push adc lods jmp sub push adc cmpb sbb push xchg mov mov lock loop push push and xlat popa mov mov out outsl cld fdivrl cmpsl push call fistpl cmp aas and sub mov or push and jne pushf fs enter lods (bad) pushf pop sbb cli dec xor das leave aaa and cltd jge int xchg in jle push mov sbb arpl aad stc jae mov nop pop bound lods pop push cmp sbb adc add and and jns add mov push test mov add add or sbb add rolb pop cmp add daa lret add add aam add inc inc pop rolb faddl add dec cmp loopne mov add add push add xor mov addb add add add sub add dec add out xchg add add arpl jae add dec add xchg sbb inc xor sub jp lea add pop aad or jle cmc dec push mov popf das pop or cltd jnp sbb add xlat cli dec xchg cmpsb loop gs jge cmpsb jle (bad) negl cmp adc popa into push stos mov push and in adc sahf jno and xlat jne enter pop add push cs (bad) into mov jae push mov insl sbb stos icebp (bad) ds xorl lds jno and adc fisubrl fnop sbb mov mov pushf arpl dec mov (bad) xlat jle (bad) notl push enter nop xchg mov outsl js stos xchg push mov xchg jmp aas dec xor ret xchg mov fstps into test adc pop das add ss (bad) outsl push jmp aad in mov aam push sbb mov pop aam adc aaa sbb add repz pop jae int adc lods lods sub mov bound lods sub xchg jbe cmp sbb repz inc xchg xchg mov mov inc xchg nop data16 movsb mov jbe cld push mov loop fwait scas pop fwait repz (bad) adc and jnp mov bound out vxorps jge sub jae movsl mov sub shld jae or xchg mov dec push stos jge inc leave xorl in push add push adc in call arpl jnp lcall hlt addl push or nop xchg fwait push loope jno (bad) out sub cmp in incl add and mov leave test mov adc rcll ds cwtl lods adc insl push xor sbb test jmp push roll jb sbb js (bad) sbb fisttpl adc dec dec into jl mov js clc inc (bad) (bad) je bound mov and xorl lock cmc sub shr lahf cmp and dec mov shr xor rcll mov scas in cmp leave popf in push mov xor and mov daa cmpsl loopne mov pop fsts cld rcrl push aas push and inc test dec push (bad) xor mov ret les fnsaves mov fwait lretw mov into jmp push out mov pshufw add add lds sbb mov enter push mov in sbb sub xor sub aas sub inc fdivl imul aam pop mov out add pop rcrb dec pop dec jl lcall jg jae insl decb adc das add cltd call jb xchg mov into incl push push sbb ss xchg push popf mov flds fbld out add stos mov lods pop mov fmuls mov movsb lods or mov test jae cltd push jmp jge hlt push mov aas sub mov repnz mov mov cmc push ficomp mov add fstpl std jmp stc and cltd sarl std cmp fbld lret pop mov pop jp das push jge cli xchg stc dec call incl fidivr popf adc add mov repnz cld mov stos data16 jnp ret std push mov cmp xchg sahf pop (bad) jl or lock push jb pop out lea mov add sbb daa repnz mov insb mov iret mov mov ja cmp cmp jl (bad) push pop test leave or add add bswap outsl push sbb (bad) lea popf fwait sub sub popf test in dec pop ret das cmc adc nop mov xchg enter imul mov sbb push adc push jne int3 cmp jecxz inc rcrb rorl pop repz xchg mov jge lods jne pop push insl jae imul xlat (bad) call into mov ror sbb into movsb and dec stos out mov sbb ss mov scas jp dec mov add push jge or xchg mov mov pop jle mov insb or dec push outsl cmp jle mov (bad) fsts mov xchg out lods out pop lods ret gs incl fmul add fistpll xchg insl leave inc push stos and adc cmp scas nop cwtl mov in xor popa inc cmpsb sub insb jmp mov cmpsl aas sub push ja pop mov add sti cmp sub out clc push mov incl mov les add add dec clc pop mov push mov in fsubrs push fdivl ret in push rolb arpl stos lods mov stos cmpsl into jle mov std pop mov rolb imull dec mov add outsb (bad) push stc push call std pop mov data16 imul push xchg repnz clc cld test push cli dec addr16 cmc mov mov fsubrs psllq inc jle lds jp adc movsl mov ja (bad) mov cmc es adc mov movsb mov pop adc and inc xorl aad xor fnstsw mov sti pop inc jge push lret add add xor (bad) (bad) addr16 ret int3 ret pushf sarl fmuls mov bswap movsb outsb mov test stos shrl inc call incl popa sub cmc outsb stc inc (bad) push jp notb int add xchg pop out lds std cmpsl pop movsl adc xchg mov xchg int inc stos pop mov jle incl xchg pop repnz rorl mov mov (bad) cwtl out inc outsb sub call pop popa insb fcomip outsb stc inc enter jne daa mov cltd daa sub mov inc jb sbb jae mov mov popa gs int3 xor push or adc imul jp jmp es cmc xchg cmpsl out mov lock dec hlt dec popa and (bad) jl pop movsb pop or repz jo mov icebp jl lret (bad) jmp xchg (bad) lahf jnp fcoml or mov xchg cltd cmp test add fmuls icebp cmp in jmp mov movsl repz (bad) mov mov dec mov cltd arpl inc mov test cmp cli fldcw or out lods (bad) lock sarl je orl jmp jmp lahf or dec lret or jp movsl (bad) mov mov add add add out stos inc in jnp imul adc lcall sbb inc sti cmpsl pop pop ds test test sti mov xchg jl addb inc lock mov cmc jb fldt outsl pop je lods cmp enter les jb jbe lahf stc mov outsl jg push popf rolb dec sbb pop xlat fdecstp push fwait add push ljmp xlat (bad) aad add cmc dec xchg enter jl lods (bad) mov mov xchg sub ja lds in (bad) adc int xchg leave xor jp add push pop mov outsl js cmpsl int push mov jg xchg add fild pop dec push or lea int3 jg insb pop (bad) add pop add cmc xchg sarl mov mov sub cmp popa sti sub add add push xchg (bad) mov fldl xor mov arpl ljmp js and mov stc test xchg outsl out pop in push movsl (bad) xor adc ds hlt and lods dec (bad) pop sti imul scas leave int mov xchg mov repz rorb pop enter ljmp lret into push ficoml or pop stos mov (bad) js jmp jno ds movsl shrl add aad or mov and push addr16 fiadd int3 mov rcrl out mov loope push push add xchg or adc dec cmp and add fsubs push sub xchg in inc sub add add nop dec out add add add add mov add cmpsb adc push push add and inc jg nop add sub add add add add add add shrb or add add and test push mov mov cs mov xor cld movsb add loop (bad) jb xchg sub aad push cwtl scas dec inc cmpsb pop inc ret dec mov push or lock jb or push push sti sahf jo jnp int bound sarl push int3 mov push (bad) int add jb aad inc xor sub (bad) mov stc jnp push adc test fnstsw popf out fnstsw gs add add and add xchg fsts cld fmul out ss jnp cmp pop outsb or mov mov dec dec inc xchg xchg xchg xchg jecxz xchg or mov fcmovb xor adc or push test in fidivl sub sahf mov sub in xor mov outsl scas jmp jge and add mov mov lcall in js jno mov add add mov cmp iret ud2 ficomp dec in iret movsl (bad) je mov sbb cmp push sub mov (bad) xchg repnz xchg insb fwait hlt inc (bad) mov shrl pop push dec dec lds mov jno mov out adc add cli aad les push lds or fs xchg ds xchg imul in es imul fs cmc fld pop outsb sub add fimul cli and pop in int3 xchg xchg es push cmp lcall pop add leave je data16 test or imul mov dec xchg lea inc and add add cmpsl jl lods gs in fsts sbb pop ljmp pop jmp mov lret xchg arpl pop mov sub out mov cmp stos pop sbb inc mov into jbe push mov cli jle in aad xor ret xchg imul mov ret mov sbb int mov inc (bad) nop xchg bound mov movsb mov add ds in add add pop inc sbb pop sbb sub icebp mov enter cld data16 sbb aas mov in sbb outsb rcrl add incl sarb add add mov test popa inc popf fwait jp pop or out mov sbb add cmc dec repz xor into xchg cmp addb add add xchg push adc fidiv lret inc inc stos jge mov and (bad) mov pop repnz cld (bad) xchg fistl push jb mov xlat iret sahf mov out and pushf js push fptan jno mov repz cli insl aas stos (bad) aaa cmp mov fwait test inc std int3 icebp pop (bad) xchg test lods mov cmpsl push lret jns aaa xor dec jns inc dec stos mov add add add hlt (bad) faddl mov rolb xchg int3 hlt dec (bad) rolb jbe adcl (bad) dec aad jns sub sti out cli push bswap xor add in (bad) fcomps jge pop pop cli mov in cli sbb or push loope movsb jae pop arpl fcmovbe movsb pop addr16 ficoml xor push inc sbb fcompl imul add add setl xor outsb call add mov in lods movsl pop push and jae dec lock aas daa cmpsb and sbb ret mov jnp fldt imul ret lock mov mov imul pop add imul test cwtl sbb test mov in jmp jp pop xlat pop lds inc inc movsl inc std sbb xor adc jb jge jae and lcall dec notl pop cwtl jl mov sub mov dec push imul lahf addr16 fistpll das xchg sub fdivs scas pushf enter stos cld push mov (bad) std push xchg lock jecxz out add or add cld lods lret mov sbb out push mov or addr16 ret xchg cltd test adc sub cmc into (bad) leave cli or mov push jmp mov inc imul lock jp cmpsl rcrl sbb gs ret aas mov add or mov pop in lcall rcrb (bad) mov adc inc int jbe xchg pop insl lret lds shrl pop push cmp ss cs fdivp repz lret inc ret push or xor pop jb lea mov jne adc rcr jl jb sub push cmpl sbb fldenv das dec lahf stos dec mov addr16 and hlt jo cmp push roll das xor lea push fsubl aas inc add cld mov iret and cmp imul adc adc outsl pop xchg jnp mov out pop cmp popf mov add pop js pop stos cmp pop and xor iret imulb sahf adc sar sbb jmp jmp sub ss in mov and in mov (bad) fisubrl and (bad) mov in jecxz sub ficomp lret sbb out cmpsl sbb mov or fdivrs lds cltd adc inc scas arpl lock add push xchg cld mov out mov cmp sbb int3 rclb add and outsl cmp data16 pop mov scas inc cmpsl jne pop lock mov fstpl inc xchg lret jle call xor lods cmovl shlb loope lret xor adc mov mov scas imul lea lea mov pop pop jae inc xchg cwtl cli in pushf jg xchg mov test push xchg mov movsl mulb mov push lds loopne mov push add jmp and lods mov dec mov jl sbb inc inc int3 mov repnz fdivrl pop negb cmp xor mov mov sub lods mov int3 jnp fimul scas xchg cmp loope enter push fidiv add add (bad) cld repnz es insb in push cmp or xor adc xor push scas push cmp ret ret icebp sub les add rclb push adcb add adc add rcl es or mov les mov push pop test or adcb ret inc adc popf cltd add out xchg loopne mov jo xorl adc push movsb add mov inc inc test dec in xor push xor das or xchg push mov dec inc xor inc inc nop add add add add mov xor xlat lret stos jecxz adc mov dec fildll mov xchg mov mov add call push fcmove or jl (bad) dec int3 (bad) mov outsl mov mov adc mov imul jae cli movsb jb push (bad) xor sti push test es mov cmp stc and dec sub (bad) stc xchg or in cmpsl jg loope mov sarb aas and mov and fwait jp xchg mov imul dec imul into xlat cmp mov addb cmp ret sbb ror xchg lret jb cmpsl xor (bad) cmp mov incl pop xchg jno sbb lret pop imulb push nop and out mov ss inc jmp xor dec je (bad) aam pop nop in stc sahf inc push out imul ljmp jbe mov dec pop xor cltd fwait cltd lea data16 (bad) lds mov add or jge std adc lods imul aaa push dec add popa inc dec dec pop mov out cmp (bad) and fwait js call fldt pop and dec int cli jno mov (bad) jle jmp arpl shlb lahf mov add add pop mov mov test mov or cmp out fbstp out cli sub insb push cld jmp cmp insb in sub mov mov imul mov mov cmp lea outsb rorb jecxz outsb incl pop call loopne movsl push dec mov lds xchg insl xchg xor add test aas cmp xor pop addr16 arpl pop mov dec inc dec sar jg add xchg sarb lahf cld add movsb mov in fcompl mov incl add test pop in sub add add sub stos dec inc dec sar jg add xchg sarb lahf cld add movsb mov in fcompl mov incl add test pop in sub add add sub stos dec inc dec sar jg add xchg sarb lahf cld add movsb mov in fcompl mov incl add test pop in sub add add mov rcrb or pop add aad test repz push cmp std sub fs imul mov ret or xor mov mov add add jg sahf inc pop movsl ss loop pop add ljmp out (bad) xchg cmovs adc bound imul dec xor loope mov xchg lock inc cld loope mov fild ljmp sar jg add xchg sarb lahf cld add movsb mov in fcompl mov incl add test pop in sub add add xchg mov in outsl jge (bad) aam lahf stos dec inc dec sar jg push lea mov fildl flds movsb pushf repnz pop or (bad) jmp fsubp aas cmp lea in mov out inc jnp out mov sbb mov int3 ficoml push dec sub or imul clc mov aad cmp jle popw mov insb jge jge xor mov in int3 xor negl mov push mov lretw rcrb cmp jb les pusha ret fs repnz sub sbb (bad) addr16 mov pop fnstcw add faddl push std push pop pop imulb ficoml add std fwait xor incl loopne in (bad) jne aad mov movsl aas clc add dec call imul cli sar add ret not jecxz divb inc in js cmp std (bad) lock sub or cwtl mov fnstenv push nop fs hlt fstps ss jae incl pop cmp mov inc test add dec xchg cltd test add sbb aaa jne or jnp out lcall dec leave xchg mov mov push jns outsb sub dec inc fs lods jge repnz jb add divb imul les enter loop sbb out ret lods pop cltd push cmp movsb mov in fcompl mov incl add test pop in sub add add sub stos dec inc dec sar jg add xchg sarb lahf cld add mov vpsubq fild in imul data16 popf in cmc dec push imul ficom dec dec xor inc iret mov out cmp dec inc dec sbb dec xor mov mull mov jl inc mov js add mov std mov inc mov leave (bad) fcomps ret cltd in add pop mov inc je pop lret mov cmp in popf mov ds cmpsb mov iret arpl mov inc inc pop sub ficoml add or and sti adc es clc inc call scas cli and loopne in and jb mov adc add in mov incl mov cld adc mov cmp not lahf (bad) pop xchg sahf mov xchg xchg mov loopne in nop jne in mov lods aaa clc and pop je jb popa std lods cmp and and mov pop jg dec jle lahf lret ret inc dec inc sti pop outsl lock jl xchg cmp jbe cli mov data16 mov ja sbb jns mov mov jmp loope lret movsb push adc mov lock es cmp and mov and xchg xor mov jae xchg repz scas imul (bad) xor rcl xchg jbe std xchg xchg mov loopne in mov jge cmp and sbb mov push sti pop jae inc jle pop das notb fidivl add incl xchg xchg mov xchg xchg lods out mov mov aas mov aas add subl sti sub in pop iret rorl lret inc dec ret sti push jae inc jbe cmp repnz mov aad cld adc xchg sahf mov test movsb out sub mov jns aad push enter jg sbb in imul inc mov jae inc js dec gs aam nop cmpsl es mov out jmp mov loopne mov xor lock mov pop ja popa in xor or mov lret cmp mov pop mov imul xor pop pop out jmp mov pop xor (bad) les push sub lret xlat mov jp sbb mov push sti pop jae inc push xchg insl adc in push add lret pop pop jle sbb pop jge xchg xchg lahf andl mov (bad) aam cld or mov aas mov aas add jbe inc lret mulb test mov inc mov cwtl movsb int3 sub mov lods gs inc clc rorb mov fcmovu adc inc fstpt (bad) mov sbb add insb or cmp mov in cmp adc dec mov sub mov add lds mov mov cmc dec jmp ret ret lret in xchg mov lea lea clc dec stc scas mov cmp mov xchg lret jle pop mov push nop ret dec inc mov dec iret xchg jg cmpsb loope xlat cmp xor and dec int imul mov clc push sbb mov (bad) imul imul mov mov rcll mov (bad) jno xchg insb shrl adc jge cmp (bad) (bad) jmp cmp or stos push into and fs sbb pop ss les jns mov cmc push out mov mov inc insl call sub and fnstenv addb add mov dec imul movsl ficompl test jne inc ss aam sub push mov rorl cmp loop pop adc pop or xor imul inc insb (bad) mov and test je out into ja pop shl outsb push insl test (bad) xchg dec fidivl outsb cmp pop lret int jmp jo int pop xor popf xchg pop and mov call inc cmp pop cli lods sub incl imul add cmp sub into xchg pushf popf xchg ja fimul sbb flds add add pop xchg in sbb jne xchg xchg mov scas popl psrlq je outsl cmp fs mov idivb jge inc mov aad xchg lods jb push pop jp pop lcall test pop cmpsb dec fsubrp cmc pushf test out shrb mov ljmp aas div jle add xchg fdivrs (bad) xor (bad) xchg sahf pop in or in mov mov in imul clc mov incl je push es mov mov int3 cmp xchg loopne test ja cld hlt movsl jae sbb cltd mov pop mov dec dec mov push (bad) jmp mov push and in mov out dec jl and and dec popa jne aas add fidivr lods mov fdivs cmp inc insb pop das fs dec push xchg and cmp add adc nop pop test adc mov cmp js xchg sub ret push xor sbb call out aad (bad) ljmp xchg (bad) or cmp in sub out mov mov mov pop or fnstsw push enter (bad) insb (bad) jne jnp pop sub add and mov xchg loopne das fst or and jle pop jbe push fs jg inc adc add add pop add mov out sub add adcl push or add mov mov jo add mov hlt xchg dec rcrb add mov add iret rorb ffree jns mov dec cmp adc add bound adcb push inc into addb and iret enter add inc (bad) movsb out test or or adc add add pusha sub add add add js test cwtl mov pop outsb pop lea mov xchg mov sub scas cmp sbb mov sub pop dec test cmp push lds xor enter mov sub xchg jb mov adc cmp jle push sub jp movsb stos sbb jle sub lret jno in outsl pop ds mov jno gs jcxz push int test aad lock test adc lods sub insb subl or adc cmp stc dec sbb scas dec xor (bad) mov pushf hlt int3 ja jnp sbb (bad) loopne shld add sub cmp gs stc sbb mov and ret jge mov popf adc fwait or fst add pop jbe jbe fnstenv pop jmp aaa sbb test inc imul or shrl jp pop andb xchg adc add negb cltd fsts cmp dec cltd aad and std jle mov lods sub cmc dec sbb lea adc aam mov and rorl std push int out lods insl and test adc std cmp (bad) shrl aas je cmpsb add add add scas dec movsb insb sub sub xchg xchg (bad) xchg jl xchg mov sbb pop int push lock pushf cmc cltd (bad) fbstp or test out outsb xor test mov push in lock xchg sarl subl sbb xor je cld (bad) xor ljmp push mov sub cmpsb mov (bad) mov push mov jecxz push faddl inc inc add and dec add add add sti movsb addb add add add and test or add add add add cmpl add or add add add mov bound cwtl mov popf adc ja push imul mov mov xchg enter push lods adc jne mov out (bad) jb loop sti and sub sbb scas pop jb outsl push neg sub lcall push mov mov lods lds idivb dec pop jo leave lock jb das mov in fcompl pop lahf xchg jne,pn push jg mov jle ror xchg pop cmp inc in es bound push cmpsb pop and xchg adc sub ss dec loopne sbb (bad) cs bound push sti and inc in js dec lcall mov cwtl mulb test insl jb push xchg scas sbb dec jmp loop adc scas je cmc iret (bad) subl lds push mov leave or push jo mov inc pop mov imull and repnz dec dec pop or push lret popa aaa sub pushf inc out dec cli test pusha fcoml mov pop movsb cmp xor mov and adc sbb push mov adc or test lret dec mov adc mov ja push push in iret inc mov jmp pop mov mov sbb imul imul xor push pop or stos xchg rcl jecxz mov or sahf nop rcr outsb pop xlat mov jb xor outsl mov insb cmp enter pop jae xchg int outsb push mov out mov into in dec pop (bad) fcmovbe mov adc add stc or fdivrl rorl lods pop pop aad clc cld lret pop out sbb inc test jl mov adc mov dec pop fadds xor popf cwtl cltd push popf mov push int3 in xchg clc mov in out cltd cwtl lea aas push sub je outsb sub into mov xor jp daa loop cli or and jp xor mov jns and repz jae test mov cmpsl xchg sbb pop popf pop nop adc mov push jmp std dec xor dec (bad) dec pop call or and adc fdiv sarl mov ja hlt and add cmp loope mov insb mov jb or shrb into test incl stos cmp insl js push sahf imul push lods mov push jne jne mov jne xchg lds stos mov mov aam pushf mov (bad) in cmp inc and sub xchg out (bad) movsl in xchg stos addr16 arpl arpl jmp fcmovnbe sahf call mov ds lea or xchg rorl mov xor jl lcall inc adcl out cmpsb adc dec enter dec dec dec pop hlt sti mov jb lret xchg or cmpsl das into mov in out fwait xchg jae cltd inc ret pushf outsb fistpl dec mov ficoml dec inc and int fs or cmp dec xchg cmp and cmpsb (bad) leave imul aam pushf in in cld decb mov ret jp pop push daa sub sbb mov imul inc fnsave dec lret mov jmp cs xor mov pop (bad) cmp mov cmp in mov mov mov clc rclb movsb out ds or fldt mov or loopne stos jo ret jg adc test add movsl lock push andb adc pop push mov adc out push or out (bad) and hlt inc add in push xchg adc dec dec push movsb mov test fstpl and mov jl scas ret add mov xorl aad movsb xchg mov add js sub adc lahf gs pop orl push push push push mov test mov dec adc lock nop dec (bad) lahf addl nop add addb add out xor add inc sbb sub push rorb dec push push sub and int or jmp sarl fmull sub test or adc dec xchg and aad push or dec addr16 notl leave inc xchg xchg mov mov aaa ret push pop test xor lods sbb data16 adc data16 js lock jns arpl lret xchg bound js jb sub xor rcll mov pop adc sbb adc xchg cmpsl in inc xor fadds sarl and imul cmp hlt dec add add movsb mov subl sbb and jmp loope test jae imull inc adc stc cs cmp rcr sbb scas jnp cltd xchg xchg push fdivrl inc mov push cs xchg cld (bad) rorl lcall mov dec into (bad) je ja mov jnp lods arpl fcmovb mov outsb in jbe test sub push cmp mov cmp jnp add mov xlat mov daa pop jmp push adc dec and enter orb sub add fdiv dec fwait jle sub and aaa jge and scas ljmp add add popa roll mov lea (bad) xchg cli imul cmpsl (bad) mov cmp push test dec and add xchg and je scas cmp fist mov sbb mov call shll mov movsb push pop fmuls or enter and sub add fnstcw push testb adc imul dec cld cmp rclb pushf adc mov fbstp xor push fisttp (bad) mov je lds icebp sbb xchg mov mov aaa imul xlat jle xchg cmpl dec ljmp xlat fnstcw sbb add addb add adc add je add add add add add add add add or mov add add add pop popa and and outsb mov jo fadds clc mov mov push stos (bad) setp push cmp or push jne enter test dec xchg xchg pop or jno sub xchg test arpl xchg dec negl (bad) mov hlt lock outsb in ficoml or mov shrb ljmp bound dec cmp sbb aam lods cmp cmp roll or xchg aam fs pop dec xor and push lret xchg lods in fldcw (bad) push sub loop ret jne push push in mov fnop sti jecxz mov inc add movsl ja shrb cmp mov add and fiaddl sahf inc xor fwait jmp pop fwait sti mov out js jle ss xchg inc and push popf cld inc popa xchg test add je add inc push sbb mov jl movsb ret mov mov pop ffree push inc and aam repnz out sti cmpsb (bad) mov sub fwait repz mov jbe,pn dec movb cmpsb adc push inc iret xchg sbb fdiv sub inc loope fnop xor imul cwtl fmulp cli (bad) int dec mov xor pop jge sub movsbl lods outsb adc sub add sub jb add (bad) test and test hlt sbb movsl push xchg add insb clc xchg pop mov sbb xorl jmp or hlt add ds stc inc xchg sarb mov test jecxz outsl jne mov xchg out jns addr16 insb sbb int3 fwait xchg and and mov inc test pop fnsave xor push enter cli inc add lods jbe pop or aam push sub add mov sbb ret imul cmp xor mov imul aas cmp xchg lcall xlat loopne rorl int3 cmp loop out jns push (bad) aam xchg je push inc loope dec in aad lret or add shr pushf adc xlat mov jb mov lods pop (bad) mov xchg int3 imul pop sub sub push xor jno xor stos scas fsubl clc add cwtl rorl clc sbb mov mov das sarb xchg bound testb mov push cltd aas push xchg (bad) ss pop xor xorl xchg inc out add (bad) push incl and dec sarb dec and mov mov fdivrp shrl cmp fistl mov add inc mov xchg dec bound xchg pop xchg cmc mov mov outsl xlat sub jecxz arpl lcall imul push sub ret das xchg aas movsb push jno cmpsb (bad) gs enter js mov mov bound dec insl fbstp push mov jge,pt jae add pop out iret lods add mov repz nop stos inc pop adc test test jge add or mov xor sub shrb loope js imul xchg loop add bound inc push loop call add push pushf nop data16 (bad) les add sub adc sub lahf inc mov sub add add mov nop dec lcall add add add add add add lds adc add or add loopne add sbb pop mov pop sbb cmpsb pop fwait jb jge sbb rolb inc inc lods adc mov mov and scas pop lock add mov jnp sahf xor mull aad inc movsb push and xchg insl pop cmp mov xchg in lret mov (bad) dec jbe sti mov jbe adc cld sbb jle pop (bad) aaa aaa jge sbb dec outsb fwait jp out (bad) (bad) insl xlat ss adc fwait mov xchg mov mov (bad) enter jo xor arpl mov mov aam xor dec lock inc mov loope push aad or mov lods fstps fildll cmc mov lock in lcall mov xor ss pop dec pop xor xlat cs leave mov jae popf sbb mov out jl sub and fidivl dec push sub stos cs mov repz mov loope jo jmp adc aad push jl cmp sub add test cmp inc sbb lods stos inc imul sub pushf ja lahf adc enter test push cmp stc sbb sub into jnp dec mov cmp js mul mov fadd in push push xor lock mov dec mov lret and (bad) fucom ror je sahf imull sub cmp lahf test imul pop addr16 lret mov push xchg lock shll push jno push xchg sbbb pop (bad) cmp xorb stos in jmp mov int dec les xchg mov repz pop std shr xchg int out insl sbb push (bad) mov mov sbb into mov adc sbb dec sahf test js adc out nop or add add add add inc add and add add push inc inc add add inc add add add add and mov outsb sub gs hlt jbe loop dec jne clc stc or enter jle,pn loop,pt push jae xlat (bad) jecxz cmp mov cmp or jb mov mov je pop dec rcl out cmp into and push or xchg and outsl pop inc push in mov xlat jbe rorl sbb inc data16 (bad) fnstsw aaa sbb cmpsl sbb shr cltd cwtl mov movsl or popa or sub les fimul add dec andl dec hlt testl outsb and imul std mov fucomp cltd movsl xchg test pop inc push mov add and xor int3 dec mov xchg clc or loope inc rorb inc rcr pop and loope mov fs outsl orb mov push (bad) sahf in inc add xor imul test ds or jo mov outsb xchg mov cs dec mov cmpsb sbb sub ret or fmul out stc and jle xor mov mov mov mov outsb xchg int add mov (bad) mov cmp or pop out cmp sub sub adc jo mov push stos xchg test rcll test jne (bad) icebp pop add (bad) jae les idivb adc xor (bad) mov stos xlat and add pushf lea push shrb fisttpl sbb dec mov lods jle jae out aas loopne mov dec stc popf in enter ret popa pop jbe inc sub pop push daa loop call cmp std pusha cmp dec xor inc out (bad) fimul (bad) mov jno push mov mov sbb and push stos push push scas hlt sub add mov call jb cmpb out mov (bad) xor scas ss jecxz jns mov arpl xor fs push je aam fs fistp lods or popf arpl adc outsb inc xor pop mov mov mov xchg pop xor gs add test jno iret pop mov inc call out or stos mov push or shrb stos or xchg mov call data16 push int3 jnp push faddp cmp rcr inc hlt cli push dec xor pop xlat xchg jae out bound mov xchg jmp mov jae jnp xor test test mov inc enter pop xchg scas xchg cli popf or pop scas imul push psrld enter xchg test testb or jmp mov and jnp fwait xchg adc add add mov dec leave (bad) xchg pushf test bound or push sub bound push and mov xchg les cltd xor xlat pop mov cmp call (bad) pop out jmp push push ss fcmovb mov jae xchg sub ljmp ffree pop add sub push lret into push fimull js mov ret jg push adc jle out subl mov adc pop sti mov xchg sub mov xchg pop nop (bad) xor in ljmp pop jecxz testb add ret int sub (bad) aam add inc mov enter pusha dec cmp test int3 xchg idivl sbb data16 test push push addl push loope dec adc adc mov arpl lcall out add nop dec aad (bad) dec cmpsl or pop loopne xchg (bad) repnz mov cmp add inc and dec dec pop lret jo or movsb xor pusha inc xor push and fsubl add add add add sbb add push loopne xor add add add adc sbb enter mov add sbb rorl out pop jnp xor add lret adc or sub mov push in lds lcall mov dec pop jge loop cli push xchg into jmp jne xor sub lods loopne stos pop xchg divb xchg stc int mov fnstenv fcom mov fildll pop divl mov icebp repz daa popa dec pop push pushf mov addr16 out daa and or pop aaa popf jbe pushf out popa mov jnp fistl xchg cltd pop or adc xor aaa jbe fwait lcall sub add push popl jb (bad) mov lods stos sbb dec ret out aam jnp jl mov pop out push lcall mov pop xor mov push mov cwtl lret test push sahf cli xor mov scas jb pop aam cmp pop xor push cld in lock xorl inc in mov popa aas xor jb jae roll clc jge rcrl stos push jb imul jne dec inc mov pop jmp xor pop pop loopne cmp dec inc mov mov push sub sbb sub sti rorl mov cmp popf sbb xor push cmp mov pop jne add movsl adc sub in into xor addl scas add jae pop leave es fdiv imul xchg dec mov dec ljmp sub arpl je dec insl jmp push lret cmp and cltd jnp inc xchg icebp jae add or test (bad) mov xchg mov xor idivl cli pop pop push loopne push imul cmp push pop stc dec ds into insb movsb movsl in push mov dec push sub loope xor or imul mov and (bad) mov test mov xchg cmp jnp xchg fdivp jb mov adc sub and add rorb daa out xchg inc repnz add add mov arpl cwtl adc add and add scas outsl add addb add add add les add mov mov jge pop jno jbe jb jae xlat cmp lods push outsb dec push inc into (bad) (bad) repz xchg test cltd jno dec inc pop ds (bad) cmc push mov dec xchg pop push mov and cmpsl sbb sub mov jecxz cli cmpsl (bad) cmc jnp insl jae jecxz out scas loop test sbb dec mov lods stos jmp outsb mov lods sbb sbb push stos das jp cs (bad) or cmp inc sbb es jns repz in mov push xchg ror lods cmp cmovge fdivrl sub pop push xchg sub xchg xor stos movsl sub add clc dec inc loopne inc data16 mov movsb jae mov aaa shrl add out xchg push cld fcomps push cmp pop sbb inc mov mov (bad) mov mov pop push rcl cmp gs in add hlt xor adc sub outsb add xchg loop sub mov das jge pop push or cmp sub cltd sbb cltd adc sbb fiadd repz pusha test push jo jno pushf adc (bad) dec scas inc push sbb add xchg and push mov mov add fnstsw aas out push mov ss fiadd es mov outsb insb xchg addr16 add xor lds mov adc nop and add daa sub push test mov inc into sbb or inc mov or scas pop and jns in sub (bad) sub xchg push mov fisttpl aad cmpsb idivb push aam fs sbb push (bad) xchg mov les loop frstor mov sbb pop cmpsl cmp pop sub mov dec fsts and pop mov mov stos stc int3 ret (bad) add xchg sarb dec pop sbb aam out sub jecxz pop popa mov mov pop mov mov jns dec mov lea mov xor jae fistl (bad) cmp out inc data16 ss stos lods ja addr16 jecxz push jge xor lods push lret dec push int mov push icebp xor inc ret sbb cmp sarl mov (bad) jnp fwait dec aad stos aad dec sub cwtl pop mov ds mov outsl test icebp pop lods mov cmp (bad) sbb insb daa scas mov fcmovnu push xlat jl neg aad xchg push repnz pop popa lock sub ds outsl insb push inc test xor mov cwtl idivb test hlt shll imul fs lret sub rcrb loopne jg sbb add andl es lea kunpckbw fistl mov cld fnsave in mov daa lret dec lret inc mov push or fnstsw popf jne jno hlt jns ret daa xchg (bad) (bad) in gs jp pop mov push shrl cmpsb mov push inc lock add sub xchg add add xchg mov enter mov sub mov clc pop movsb push (bad) loop rcr dec insl xor inc cmp xchg jo push lahf adcb outsb in fimul mov mov xor stc ljmp mov dec add jp outsb movsl js in cmc push cmp rcrb xor loopne inc lods cmp mov lcall loopne jecxz inc mov jno pusha dec cmp add xor or add inc (bad) xor xchg mov or mov notl (bad) mov das ja imul fcoml cmpsb pop add aad aaa gs xchg xchg or sahf lahf jl adc in loop xchg pop sbb cs mov in and loopne nop add faddl add add add or push or add add add dec and sub mov ja popf mov hlt rcrl into test into dec inc insb mov into fidivl out aam (bad) mov mov push mov int mov mov sub in nop or imul pop divb movsb cmp mov idiv outsb add pushf adc push mov fldl in stc mov pop jo adc imul (bad) mov mov out iret jae mov imul jbe jmp stc jge mov jnp jl (bad) lret inc movsb mov dec mov sbb and xor mov xor outsb stos cmp add xchg pop pop push xchg es daa mov cmp ss mov push jae in xchg mov stos lods adc push add pop mov fcompl inc addr16 push inc inc icebp and lahf test add mov lcall dec pop bound mov test dec repnz ficoml dec sar cmc inc imul mov repnz ficoml test xchg mov fmul xor jae sbb pop insb xchg scas int3 dec lods (bad) cli loope test outsl fistl mov outsb cmp in (bad) lcall scas mov repz add mov pusha stos lock xchg pop sbb pop xlat mov cltd in push call aam mov cmpsb sub icebp xor pop or jmp dec mov das jo int add ficoml push imul fimul test pop in pop imul sbbl push or adc push and and push push or add dec add loope nop sub xchg inc lock add pop je add add ret push mov and add add inc jb cwtl aam add adc and add inc fs add jne adc cs outsl add mov push stos dec push ficomp pop (bad) int3 sub das sub rcl aad lds jns lods dec mov dec lret adc gs jb jmp jns outsb jae xchg dec xchg mov test xchg insl sbb lds outsb jecxz push jge ds mov call loope inc clc jmp jnp aaa and jns (bad) mov adc adc ret lds jb cmp adc scas pusha jb push mov jb jecxz mov add mov popa in xchg inc sub out add adc pop sbb push mov mov out and movsl or or in xchg mov int jmp push test (bad) loope shrl mov inc mov addr16 cmp jo out out mov cld pusha xor bound push popa jp int das push adc cmpsb fs or jno pop mov xor pushf leave inc sub inc popa (bad) cltd pop cli stc dec inc (bad) out inc push imul dec and xor inc lods jb shrb sub enter and jbe (bad) xchg push sub sti test (bad) mov mov loope push mov cmp pusha inc xor jbe inc popa pop inc sub sub dec and sahf fcmovbe adc mov inc popa push mov mov mov sub cmp jmp imul jecxz jns push jecxz mov dec pop aad lds in pop das cmp stos inc inc stos pop lds ja adc mov les push dec sub ds push sbb xlat pop stos adc lahf pop adc enter jmp jbe and loop lods push loope adc or xor xchg xor icebp inc mov sbb xor ja mov sbb (bad) mov push push ljmp rcrb pop push push lods push pushf out popf xchg jge jle sub lds jl mov xchg lret mov insb pop mov and fsubrl in dec movsl clc dec dec pop mov mov bound cmc push popa iret lahf sahf pop or incb mov sub pop xchg push jle mov push jmp dec pop std dec pop jno cmp das inc std or int xor adc add js ret aas xchg pop pop xor mov test rcll out mov lds fdiv pop fsubr pop das push cli dec xlat mov cmpl mov xchg popl xor mov arpl in cmpsb stos pop popf adc int xchg out dec into jb iret (bad) sbb xchg jmp and mov in sbb insb (bad) cmp je pop jle mov pop movsb xor stc cmp add sub cmp arpl neg jae xlat pop jae xlat insb mov or stc dec mov out ficom lret sub push ret xor mov push stos (bad) es pushf inc sub shlb xor dec data16 push jge mov mov add inc hlt in faddl push test pop cmp mov (bad) loopne (bad) lds das mov jns mov imulb jl adc repnz mov (bad) in xor aaa stc mov and stc rclb fistpl mov test mov sub adc ret pop jne loope gs int3 mov mov ljmp test outsb xchg mov hlt ret xorl xchg push push cmpsl adc cwtl jnp stos popa mov fwait shrb sbb mov sub ljmp rclb cmc mov (bad) dec mov in xchg cmpsb push inc sub and movl cmp mov pop dec inc mov adc mov scas or xor loopne jp inc enter inc aad mov push (bad) xor mov lods cmp mov scas jecxz cwtl bound fucom cmp out jnp push outsl xor js sahf clc push cmp add add inc sub add add add add loopne add add sub xchg clc dec add inc add add shr mov inc addr16 fsubr nop icebp mov imul or pushf enter aaa jns das jno fdivrs mov fidiv push stos (bad) add cli aas loope cmpsb (bad) movsb cld mov data16 xor mov sub jb aam dec insl call push mov test insw xor sub icebp je sub jmp sub pop and fwait cmp (bad) jnp jp xchg jle aaa fnstenv lahf or add add lods sti es xor daa dec (bad) dec adc dec lds sbb fcom sbb nop ljmp cmc das push sti fcmovu into mov add push sarb repnz imul jp daa int call cwtl mov in sub fnstenv pop jecxz mov push adc aam mov int3 pop push mov jae mov data16 test dec mov out loope jp inc jp cli hlt cmp in mov enter jbe mov scas xchg js sarl shrb inc mov xor (bad) in xchg mov and mov (bad) stos scas push call push negl cmp sub loop lcall lahf dec loop loopne test hlt mov sbb xlat outsl and addr16 cmp mov fwait push jo push test aad aad test or add xchg add add xor int3 dec cltd pop into cmp cltd cwtl mov aad pop lock xchg je jbe xchg stos test ret xchg stos push test mov or test xchg mov add or add add push push push or add add add dec sbb inc nop or test or mov add add and add add or add pop mov sbb das jl add xchg movsl outsl adc call movsl es push mov stos mov mov inc outsb mov stos lcall popl lahf add pop and ljmp test pop xchg jo jl push out fs fiadd jecxz mov xor pop xlat mov adc clc jne mov xor mov inc xchg mov ret cmpsl inc or test mov jae sbb jns scas outsl (bad) loop mov jne cmp outsl or lds pop lret rcrb lock movsb pop push iret add mov inc lret or movsl or mov pop push add cmp jbe mov rolb sbb pop jp lea sub push mov (bad) lods add add loope sub cld push or adc cmp out test dec popa inc stos imul insl mov fs pop xor imul je call test loop xor jl sahf test cs mov mov ret inc and cltd shll and rcl aad cmpsb loopne imul push xchg in pop pushf (bad) jnp cmp (bad) in push mov loope add fidivl mov rcrl xchg and (bad) cmpsb fwait xlat pop inc push ja popa scas jle les js adc mov pop sbb jnp push mov loope ds pop xor (bad) dec inc popfw loop inc dec xor test add mov (bad) mov add sbb mov inc gs mov fwait mov not cmpl xor test push mov sub push repz fwait jns stos imull xlat and pop in pmaddwd lret cmp rcr imul jge xor or push iret mov mov out mov jbe mov or push repz enter mov add add push push mov xor rorl jb lret pop xchg pop pop inc outsl mov (bad) es insb or and mov mov sti lods fidivrl jae lahf inc in (bad) pusha aas inc out cmpsl add cmpsl loope enter mov enter lret scas aaa add outsb aam and shll mov lret jmp mov loop lock mov pop jmp fcoml outsb stos cmp sahf jne mov pop aaa inc dec (bad) xor push mov cmp dec xchg int mov movsl mov aad push adc jne and rorb add test dec jl ljmp mov lcall xchg push movsl sub stc mov xchg popf aaa lock daa leave mov push mov out and rorb fwait icebp ret mov dec jmp mov mov inc aam sbb fisub mov inc cmpsb pop pop (bad) add dec add push mull sub mov add xlat outsb out mov rcll and push xor ret adc dec jbe ret cmp rcll sub out jne outsb test mov mov in je scas out aad mov dec loopne pop jo stos adc inc inc movsl jo fldenv cli fwait pop sbb in sub jno cmc dec movsl adc jecxz mov (bad) popa mov adc stos inc insl xor daa add sub xor das je movsl ror out mov std in loopne cmp fnstcw mov (bad) jo push loop push adc int andl mov xchg adc cmp addb add add and add (bad) sahf add loopne test fdivs data16 pop pop inc lock jne cmpsl pop clc sub sub sahf lahf inc data16 pop icebp cwtl mov fistpll sbb dec in dec iret sbb pop rorl imul mov sbb insb xchg lods arpl fldt inc add add add dec popl pop in push push pop mov inc int dec sahf push lock xchg jmp (bad) mov aaa mov push fisubr aas cmp xchg jecxz jmp jg (bad) ficompl insb inc mov dec ja lds iret pop std dec imul testl stos dec daa ret jns repz pop or mov mov or ret icebp inc push ret into ja cmpsb and xor test movsl aam pop out mov xor les add mov ljmp mov cltd stos mov outsb push scas mov push adc add pop push movsb jno adc cmpsb cltd push lods push jle popf fidivr jns push imul or dec add (bad) loopne aaa adc xor xor dec mov dec aam xchg push daa or outsl sub imul outsb mov stc jne cmp jp inc insb ret jecxz icebp insl in imul sbb (bad) jno leave inc inc and mov rcr (bad) sub mov test dec inc movsl pop mov mov out push sbb scas inc loopne pusha pop jb xor fwait mov add add add inc and add dec sub adc or add add add inc or pop mov arpl mov mov pop loop mov jne int xor cmc pop cmpsl ror inc lods aaa mov sub fs mov out stos (bad) xchg sbb pushf pop sub enter add jne (bad) mov push push mov pop mov int3 enter test cmp arpl frstor ret out or loop lea mov loop sub add inc mov xor mov adc mov jnp (bad) mov xchg imul sbb jae jmp sarl jns mov out das adc cmpsb push mov test mov lock or sbb push imul jecxz out inc stc cmc dec enter fcomps lret sub pop jl repz or (bad) mov popa xor mov and or mov mov push sahf loopne xchg sub lret sbb pop jns inc fsubrl mov push mov push int3 int3 xchg adc push dec pushf dec daa sbb mov mov sahf mov fidivrl add rcrl icebp inc loop pop ficom mov dec sti pop sarb mov cmp pop call mov or dec loop dec sub lds adc xor mov pop fild (bad) in inc rorl scas or loopne ret mov mov mov arpl mov and fimul lods ljmp nop scas mov sbb les dec push pushf add push push inc lods aam xor scas in add rorl test mov mov pop or cwtl clc outsl arpl imul loopne lret rol dec xor inc cmpl fcoms push pop dec cmp cli mov inc xor push fidivl scas or sbb push jb ret jnp movsl mov adc push inc repz xchg pop jb int jmp rcll fnsave cmp sub xchg mov and stos mov add sub imul push xorl iret dec dec xor test lea cs aam aas sub sarb adc ds (bad) fldl lcall jge jge daa lret aas dec cld and or push insb mov int3 lcall push les pop pushf push aad xor (bad) mov mov lea push xor fisubrl out or cmp mov sub faddl stos cwtl hlt fs icebp mov (bad) add mov xor mov xchg fiadd lcall jge push jb scas mov sub popa dec nop adc test movsb cli sbb je gs add jne lcall lea shrl stos mov push mov pop or pop jl mov js push arpl mov outsl fistpll lock pushf sahf outsl inc sahf (bad) faddl adc sub repz push scas mov xchg popf ds lods loopne stos inc movsl aam push outsl data16 xchg cmp jno aad fisubr in fsubrl jmp inc push mov cwtl mov xor stos push pop jno dec aaa mov es add cltd stos stos push jnp adc scas xchg dec and xchg ljmp push jge pop mov icebp (bad) movsl jne stos (bad) pop jmp in pop cs fsubrl sub pop rorl aaa sti and sbb jno insl push add jmp cmc jmp les mov (bad) popf sub mov adc mov stos lods (bad) loope jp push jg mov cmpsl popf mov push xchg xchg stos pop sub ss mov jmp fildll stos popa (bad) outsl outsb and stos sub stos test jmp sub jne clc xlat inc stos es jnp mov in pop xchg inc mov inc shrl stos out fstpl lcall sbb mov add xchg dec int rcrb ss mov lea cmp push xor cmp stos loope cmp fidivr pop mov sub cmp fsubl test xchg cmc pushf idivl into faddl cltd lret pop mov push mov lahf jbe cld out (bad) mov out in push in mov xchg add cmp pop mov insb mov or push fcom (bad) jb ds jle adc stos pushf in push out add add les mov push lods movsl adc mov mov push jmp cwtl mov stos pop (bad) clc inc jb das mov push scas mov outsl dec pop jb (bad) popf lcall das or outsb aas xor mov push and fmul push (bad) jl mov jns jno jl jb xor push lods dec jb stc sahf inc push into insl fldcw cmp mov mov mov sub and clc aaa and cwtl fs sub adc push in xor pop mov jnp ja sbb xchg mov pop leave xchg (bad) test xchg xchg mov mov mov xlat popa aad jle in push hlt scas mov xor jmp outsb adc fildll les mov inc arpl popa int stos pop mov xor daa dec hlt mov lret mov movsl cs (bad) stos in xor fstps mov int3 cs pop int push data16 mov int pop xlat mov add scas lahf cwtl inc jne out ja mov stos jge test pushf (bad) xchg movsb imul xchg cmp sub mov into mov cmc cmp ss sub inc fs scas out imull xchg add and pop cmp sub shl mov aaa xchg push push lods mov xchg pop into mov and iret dec push fisub mov and cmp xor sbb mov sbb nop xchg mov cltd mov es addl jo adc iret mov push add inc inc push data16 sub gs out dec mov mov dec jmp push repz and daa popa lret jae in frstor mov out mov out loopne stc mov add test push push jmp and adc lds (bad) jne fdivrl jns mov pushf nop movsl push xchg push jp repz adc in push xchg cmc outsb ljmp (bad) aad sub inc loop add adc add add add or push mov pop add add push push push or add test add or inc or add add dec add add add push addl ret icebp mov jl push cmp jmp fisubr adc aad push pop and jge xchg xor test and mov dec mov jmp fstpl add cld fnsave mov out ds pop or ja sbb jno adc jno rsm stos mov or dec push shlb xor jno ds fwait repnz adc lret cmp int3 cmp add aad cmpsb mov and mov add xor inc test (bad) xor cmp or mov in fistpll enter fild jp sub sbb sbb push mov push cmp xor lcall jp sub cmp rcr in mull movsl push add or cmc dec xlat ficomp xor sbb push outsb or push or or add xor outsb dec inc mov aam fmulp mov lahf xchg jge push insl and dec sub dec pop pop xchg dec iret mov xchg pop and aad xchg push fwait (bad) mov adc pop add sub test sub mov cmp insl push mov jp test xor in xor push std nop cmp mov lods mull xlat push xor data16 xchg int cwtl cmpsb mov flds mov or adc xchg movsl shrb dec (bad) mov mov mov xchg mov loope adcb push dec xor jno lea out add or sub xchg pop stc mov mov das push dec sub cmp xor out xor hlt xor repnz lret mov mov and push dec lret fninit (bad) dec lods add ss jns push xor jns dec sti mov sbb ds movsb and sbb cmp lds (bad) iret (bad) push sub out jne pop jp push sbb in scas faddl sub fildll inc je aas (bad) in incl int push imul mov cmc (bad) mov xchg dec add inc or test mov inc sub and pushf pop insb fwait push mov jb repz or fadd hlt mov ss in inc xor jb mov in test aas mov mov mov in lods aas cld push sub mov scas xchg jb push movsl pop lds add add int sbb rcrb adc popf dec sar add push mov mov mov cwtl mov add lods cmp xchg dec xor pushf jp ret aaa xchg xor mov std test dec push mov add pop daa push insl adc sub fcomip ja inc repnz fmulp fs sbb ja in push bound push sbb sub lock xchg xchg in jmp adc jo and rcl sub sub jecxz xchg pop or dec daa xchg jns push fdivrl cld scas mov jp test mov add push aad push cltd negl push adc fnsave pop push xor mov (bad) (bad) xchg push test fiadd pop into (bad) (bad) pop xchg iret sub push out push push jne aad shrb lret in test mov test addr16 fstl loope inc out or mov adc pop rclb xlat mov cmp enter push int (bad) add jp dec inc mov sub (bad) mov out repz mov pop mov incb cmpsb jmp daa jp ds into push push mov fidivr sub imul nop or mov mov adc aad mov sub dec jge xor mov decb jbe aaa outsb in cltd sub fist push addr16 insl jns adc adc icebp jecxz leave ja mov fldcw rcrb (bad) test mov pop adc sbb mov pop inc dec imul inc fcmovu jbe pop fistpll pop daa iret into sub mov insl and or add add movsb mov addb add adc push xor jl lods test (bad) adc adc cmp arpl (bad) loop sub push xchg push rcl jbe xlat mov adc jg bound jbe adc int je pop sarl pop jp fs mov xor push popa pop jne lretw ds addr16 das push sbb cmpsl jp push add add add pop xchg dec sub sub xchg pop mov jecxz and mov scas aam and jmp imul scas mov imul rcll adc in lret ds out jmp pushf adc mov repnz and imul movsb in (bad) call addr16 pop pop in lods dec mov mov arpl loop stos (bad) pop pop (bad) and fdivrp in lret jmp ficompl and xchg dec leave mov pop outsb jno pop mov aad mov out bnd mov incl je pop stos jp (bad) mov insb fstps xchg adc rclb add and aam adc mov fcompl push mov inc lds lods xlat pop mov fidivl sahf popf shrb dec lods insl sbb push dec sub xor mov cli mov and xor mov mov inc lea push imul mov jno pop pusha jb lret mov rcll xchg xchg and jbe in fisttpll sbb scas or repnz std stos cmpsb repz push idivl push int jae push pop notb fstl vminps inc dec hlt cmpsb jp mov pop jbe int3 imul jo fsubl ret dec int3 dec push sbb mov stos push mov push push jne fwait mov imul test clc adc add jne push pop inc es push (bad) fnstcw push sbb add jg mov pop ljmp push dec shrl into pop (bad) out ret mov (bad) cmp ljmp mov xchg (bad) xor fwait std orb (bad) hlt and or inc sbbl ds shll fsubl idivb pop stos xchg stos jl pop xchg jmp clc sti sbb mov inc iret pop xlat lea add ror lcall inc sbb push sub jecxz lret aad leave dec pop es fnsave sub push sub setbe imul and add stos jge in lret xchg xchg cmp dec pop adc out in shrl (bad) xchg push lods pop xor mov sub add inc mov addb addb add and add add add push mov or and add sub push push and add inc add add add add add pop sbb pop push (bad) out jno gs sub lods pop enter into lret cmp jl aad push sahf hlt cli fwait shrl mov cli stc push jb loop jl movsb fisubl cwtl imul cmp adc scas cmp or adc cmpsb mov lock jmp rcrb mov xchg jg push and popf stc and icebp adc mov icebp out icebp push scas push fisttpl ret mov cs pop in pop (bad) sarb mov in addr16 lahf inc dec xlat cmp int cmpsb daa push push lods pop xor into fimul lock push jae and sub outsb out dec mov int jne and imul ficompl push stos aad sbb pop xlat clc ljmp inc jmp pusha stos stos (bad) addr16 bts cmp cs aaa jne add pop jo out dec jae outsb outsb aaa mov movsl out sbb push sub fbstp jl in test (bad) rcll ljmp or lahf jge dec jp mov dec or sub cmp cwtl cmpsb and pop sub sub scas add mov inc inc dec daa aam les dec push in xor mov stos jle movsl das or sti cmpsl and jo fimull or cli daa mov push sarb test stos xchg push shrl lcall push mov mov sub aad jo aad jo cli shlb test pop sub push stos cmpsl add arpl pop cs sub insl lret dec clc xchg push imul mov hlt rcll push push ljmp push or fnstsw xor shrl std icebp gs xchg pop adc int inc mov (bad) fidivl lods sbb data16 in pop xchg pop xlat pop fsubrp lcall xchg push lea mov bound sbb mov lods jnp and fcmovne xchg ss (bad) enter fisubr jge mov mov jno push sbb add mov ja xor dec sti fsub lods aad mov jae lret (bad) aad pop mov aas aaa loope push mov sbb int pop loopne loope adc in cmp lcall shll cs add push or pusha mov lds inc cmp daa pop aam stos lahf and sub fsubrl cmp xchg sbb in jge scas repnz scas rclb nop cmpsb in dec lret inc xchg pop xor push adc das imul xchg mov int in inc in ret shrb pop bound and das aas or scas (bad) out push and mov jmp in jmp pop das xor or jne or pop arpl in dec lret in or sbb cmp enter or xchg lcall adc sbb cmp movsl mov imul dec dec dec dec imul daa xor dec fmuls hlt imul xchg sub outsl mov lret push push in test stos mov (bad) mov popf adc mov and mov (bad) and gs iret aas sub mov lods xchg fnsave jle call pop jb lods popf adc leave dec inc xchg inc jp mov xlat es mov add (bad) mov mov lcall xchg lea xor mov arpl in cmpsb stos pop sahf push adc shrb pop xchg or loop nop mov iret icebp ja pop repnz test lea fcmovbe pop mov mov int3 fdiv xchg jb,pt popa xchg push jae and insb les test in scas adc mov cli cmp in cmp sbb adc das sub imul cwtl test gs mov das dec lods add push dec aad mov push push gs iret in add mov bound push lods out dec scas data16 lret adc aaa mov outsb jmp hlt push sbb dec (bad) push pop loop pop out push (bad) pop adc inc scas cmp xchg jg lahf push mov ret mov (bad) cmp jne mov pop aaa int lcall movsl sub shlb in jno call fcoml adc dec lods das jp xchg sub inc (bad) (bad) add fidivr loop imul pushf popf inc repz fist inc mov xchg inc ret inc sti sub push mov in mov xchg int3 push sub mov daa dec jo negb jp pushf fs fcompl dec popa cld outsb out orl mov in insl add leave add pushf sbb sub scas mov arpl xchg daa insl fisubl loopne inc xchg push mov xchg cwtl and mov sub sarl mov stos mov (bad) mov xchg mov outsl dec outsb aad inc call ljmp lahf pop lcall repnz xchg pop in add push addl call fdivp dec mov mov mov lods fcmovnb xchg mov jno mov stos cmpsb jle sbb (bad) cmp sbb push cmpsb cmp inc and mov xlat sbb push adc push jp testl add add or inc add add fcoml leave push sub pop jb xchg imul aad or inc mov mov add pop xchg fwait inc jmp mov rclw out scas out lods std xor jne rorb insb inc xor and xor cmp je popf addr16 cmp in inc xchg ss insl mov inc add add or ror (bad) and inc mov fisubr cwtl sub push mov jle lods dec or mov add sbb jbe aam jne jne pop xorl xor xchg cmp (bad) or int3 ret xchg (bad) clc rcr enter shll mov mov fadd aad jnp adcl dec je into rorl dec ret xchg xchg data16 pop (bad) sub mov nop mov push stos rol adc lds cmp or out xchg test jmp insl imul jbe imul (bad) add sbb adc loope je fwait imul loope jns (bad) test icebp pop adc mov mov cmp jae cmp jae pushf cmpsb xor adc mov mov adc xorl mov adc cld aam nop push sub mov sub scas stc hlt mov push pop add leave lds add jns scas je fcmovbe mov pop push int (bad) imul push dec cs mov lahf push in stos cmp lcall push mov scas jl pushf inc fldt mov movsl push movsl je out push mov scas add dec and add or xor or fcoms mov xchg xchg pushw inc lods sub test pop jns (bad) stc mov mov dec fs sub and mov jbe pop jecxz inc cld mov jl cs dec bound negb cmpsb xor xor cmp dec test jbe dec (bad) xor mov test out pushf cmp out mov sbb mov fstpl xchg push in sub sub add sub xor addr16 aas je pop jo add add jmp lods dec xor insl cmp insl xchg (bad) (bad) sub xchg test xor or pop fcmove cmp ljmp pop fbld cld and xchg clc xor faddl pop or inc sbb jg push scas out xchg incb sahf sbb fs mov cmp into int3 int (bad) jecxz cs insl enter xchg outsl and jno jae jg cmp mov clc adc icebp push add jle out sahf mov push xor imul pushf mov aad xchg inc insl clc mov notl cmc pushf jb push dec xchg mov in int mov mov clc cmp xchg add std dec aad bnd cmp lret push (bad) lret fcomps insb fsts or leave leave dec lds out jbe div (bad) aad repnz ret dec rcrb js add or or fldenv ficoml addr16 ss cmp lahf sahf dec repz shrl loop pop push lods pop loope mov push pop icebp jecxz or jae lds fcomp test jnp mov repnz adc push xchg nop in stc dec push cmpsb jg lock out inc jmp incl push mov jl repnz aam mov mov jle cmp loope enter cli aas and adc pop xlat pop and jecxz cs jle daa aaa scas or out xchg lea mov add mov test mov outsb jmp inc fisubrl xlat aas xor add pop fdivrp ds aad (bad) fimull jmp mov js aam mov out mov cli cmp cwtl jnp ljmp pop fbld cld or pop incl mov cmp pop cmpsb add xchg mov mov ljmp pop fbld cld cmpl inc sarl lods push ret jne add cwtl ds aaa mov pop daa movsb push add sarb leave imul mov pop pushf pop movsb js imul mov jns sbb jae (bad) imul jl ficoml pop nop aad push mov scas push jmp out xor mov mov jl sar dec testb mov fdivs imul sahf (bad) add aaa movsb lods insl aam mov repnz pop out lods fwait xor jb loopne lret inc mov push or fnstsw popf jne fucom jno pop data16 xor pop mov imul inc xchg popf mov xchg (bad) int3 inc mov scas insl jp mov movsb popf paddw std bnd cmp loopne cli sub ret mov (bad) mov (bad) movsb popf paddw std bnd das cmc es popf js xor push mov mov stos movsb out mov rcl push stos out (bad) (bad) (bad) mov push sbb pop jae ss jge das sbb jmp mov fdivrs xchg ficompl (bad) test dec push imul xchg sbb push and pop lods fidivl mov xchg pop iret mov mov inc pop dec lods cli in pop mov pop lods push and stos js ret cmp dec adc arpl in cmpsl daa xlat in mov rcrl mov stos mov and add test mov push push xor popf push push mov imul cmp cmp inc mov aam std ja jge scas popa inc push scas or jbe sub cmp pushf decb int3 stc push xchg push pop pop fldcw xchg pop mov jmp lds xor aad arpl loopne xchg dec sbb push arpl xlat mov (bad) cmc push test cmp loopne cmpsb hlt mov push push fidiv pushf outsb lcall pop pop movsl dec xchg xor jp and ljmp jp roll cld cmp jmp push lahf sbb mov das iret mov cs (bad) pop in dec push mov mov out enter dec es loopne sbb int repnz cwtl and add into mov bound cmp sub mov in adc mov xor arpl fiadd jmp out mov xor es lods sub scas mov mov (bad) mov cwtl mov ljmp lahf das sub push loop lock test cwtl (bad) jb test push icebp cli cmpsb sub xor push sub icebp enter push mov jmp outsl dec das pusha sbb mov pushf mov cmc mov sub sub and lcall popa jl aam and lret scas aaa (bad) jecxz sub xor xchg lret (bad) cwtl stos sub test jb jo out mov int mov pop in jmp jp ds mov inc pushf aaa in cwtl dec scas sub adc pop adc xchg mov push ljmp cld ja xchg jno and sub mov fbstp adc dec and js or cwtl jmp popa dec sti mov jecxz jmp sbb ja out cli push xor loopne int inc jne test add xchg push mov xchg cs dec (bad) jbe add sbb ficompl sbb mov sbb jnp and push inc out (bad) out jnp outsb ret sti stos lods jnp add cmpsb int3 movsl (bad) int3 mov add xchg lea xorl and in cmc sbb jmp fwait insl sbb repnz mov divl xor mov pop stos sbb popf lods sub dec dec push push jbe jmp xor jp inc cmp nop pop pop in int adcb xchg into mov add adc rol and xlat dec call in rorl lahf pop xchg cmp xor lret pop xchg mov cmpsl sub cmp pop in mov fdivs packssdw mov cmp pop repz fnstenv mov loop or and pop sbb inc insb inc stos pop mov mov lcall mov and test mov add add (bad) mov cmpsb (bad) adc dec mov int jae hlt sub outsb xor in cld pop and stos fwait dec into dec jle cwtl mov mov lret into dec inc jl js pop jne mov insb ljmp lods cmpsl lahf cmp cmp cld xchg dec sub cmpsl xchg push jle add loope jae mov call inc sar scas aas sbb and cmp xchg scas (bad) and mov adc jp mov ljmp mov leave js pop das or push mov pop lret push enter inc fs inc sub mov or xchg pop jp shrb or cs mov movsb xlat sbb or jp movsb jmp cmpsl push sub mov push sbb xchg mov xchg mov jnp dec in sub je jno imul (bad) (bad) add pop jecxz gs dec lock or or stos adcl je (bad) mov push jge jecxz es mov sub mov and loope int outsb icebp or repnz test repz je inc mov push jne dec push stos call mov adc aad add cmpsb dec sarl adc aad stos stos lcall mov imull dec shrl pop xchg stos dec mov cltd rcll jg jne fdivrp inc (bad) (bad) in mov fucomp xchg inc push push adc in adc xchg jbe aaa add inc pop gs xchg jb xlat pop jbe idivl mov jmp adc cmp icebp inc movsl jo insl push lcall mov lahf sub jp push pop xchg jle inc jo aaa xchg ljmpw insb push add mov ret arpl stos dec cmp dec mov outsl cmpsb or mov int add add and add add add add inc add add add add mov pop shll inc jl cltd mov fcmovne lea sub pop pop xor mov mov xchg sub les jmp pop xchg adc popf cltd mov mov aaa adc std xor sbb imulb jmp mov aas cmp data16 pop outsb rcll jae test popl sbb inc cwtl out fcmovnbe int3 fs inc popa mov lods leave sub iret cltd gs fwait cmc mov add add add adc add sub mov mov cmp mov das adc sub jecxz (bad) idivl sbb cmp enter mov test push sub pushf cld mov aam jge pop cmp stos js fdivs daa arpl lcall inc je mov out xchg fsubrp mov push sub (bad) mov repz scas sbb scas xor adc mov out push pop es add and ret pop mov stc sarb jle test add mov loopne addr16 cld push stos mov test out addl sbb sbbl cmp cmc push mov in mov insb cmc inc in inc fist mov xor test xchg adc pop push sbb add inc pop jno scas jecxz pushf xchg mov mov adc sub test mov push add pop dec dec mov mov xchg xchg pop mov ljmp cmpsl adc cli into aaa in jae dec mov stos and pop jbe mov out xor xchg pop push ret sarl fwait imul jne jns iret jae ret xor inc outsb cli push mov sbb jb push jo and xor aam pop sbb pop mov loopne xchg push push mov lahf cmp fnstsw ds cmpsb sbb (bad) dec mov jl fcompl mov dec ss sarl inc jmp adc test int3 sarb dec pop jno cmp rorl cmp (bad) std push dec lock fdivr mov ljmp mull aas lock mov xchg hlt dec aas mov sar add add jae fucomip adc cld push sbb sbb xchg add iret fcmovu pavgb into pop add jns aaa cli and jg (bad) cmc or mov hlt xchg neg aas lds jo inc test mov sbb jnp iret sub add lcall mov xchg mov out jae mov push (bad) or push fstpl icebp popf sub nop mov leave xor sahf mov fisubr incl jmp jae add scas cmp mov and xor xchg and and xchg insl pop push pop dec fist pop fldt sub fwait mov pop iret into aas or lret push cmpsl (bad) in cmp popa mov imul mov jp call in lahf add add pop inc mov jmp (bad) roll repz sar hlt push shr xlat out cli leave jecxz rolb cmp inc xchg xchg pop (bad) inc bound fstl and pushf in cmpsb push loope jg push hlt lahf incl mov pop shl cmc xor inc lcall push pop out pop in or sbb imulb cwtl idivb scas arpl jmp imul xchg push ret in jp sar mov dec fwait out mov jmp dec mov jb pushf dec stos mov or mov jb jnp push add lods in mov jns dec lods sub cmp jae mov push cmp mov lahf movsl (bad) pop push sub cwtl pop lea mov push mov lock fsubrs cld rolb mov or fdivs lock pop mov xlat call sar or hlt pusha add ret push dec daa mov mov data16 jb sub lods insl out mov pop jbe iret outsb dec mov cltd arpl cmc jnp (bad) dec inc xchg jns fnstenv xor loop aad ror pushf pop cli push arpl lods cwtl mov jnp fistl xchg cwtl addr16 cwtl add lea xor daa mov test jns adc sub mov pop test xor arpl jle popf xor dec pop xchg push imul rcr mov sbb (bad) cmpsl call mov hlt push push sbb sbb sbb mov or sbb mov xchg xrelease add inc dec lods mov mov in cmpsb icebp lds cmpsb cld cmp jmp jne nop loop cli outsl jne out addr16 (bad) jns xor push jl sti lds fucomp add mov xlat jnp mov pop mov test imull mulb push mov add push push test add pop pop mov sub std shrl jecxz sbb aam xchg inc sarl jp rorl push pop loope lds dec enter cmc rcrb imulb jl xor in test inc push cmpsl gs loope stos inc pop pushf mov mov scas testl adc lods std jb mov xchg fldl fwait pushf jb repz xchg out add out mov dec sti into adc clc cmpsb hlt add add jno (bad) clc jno xchg cmp dec ja lret inc mov ja add into add push aam aas xor stc fildl (bad) loop push repz jp repz outsl cmp repz test in mov push sbb inc aad aad outsb adcl sub repz and add notl jmp stos dec mov mov mov xor adc lea mov mov loopne mov outsb sub lods adc mov sub lret sub sbb mov push mov in push data16 xlat ret roll xchg jp sti jecxz fisubrl inc (bad) adc mov std fildl adc adc jne xchg (bad) jnp xchg add cmp and stos xorb or lret cwtl jbe xchg sub and inc aad jmp insl mov icebp bound pop aad jns jbe ja kmovb movsl es dec lds clc jno arpl add dec outsb lret fsts jns imul cld pop (bad) shl mov cli mov jbe lods fcomi pop leave (bad) movsl adc mov test movsb lods sub incl les das dec xchg sub out xchg jg pop call test inc lds jns shl je inc pop push enter pop push add or test iret fldcw dec shr cli fwait xlat or add add add out pop xor cmc mov addr16 aam push lahf push sub les nop pushf mov int lds es test pusha mov sub pop loop mov prefetch or mov repz sub js lcall lcall or adc jp cltd rorl xchg loop cmpsl rcrl mov cmp mov inc mov mov call jne mov outsl jmp cs mov ffreep int stc popf aaa mov (bad) je imulb cmp jno dec (bad) mov sbb loop cmp mov jp pop push sub push pop in jp jns cmp mov cmp sub inc aad lods cmp mov movsl cmp fwait scas cmp movsb lcall push cmpsl movsb mov or pop inc aad mov fcmove mov out enter inc adc test jne push push lods dec cmp jp outsb lods loop (bad) ja xlat dec addr16 call in in stos push jb in (bad) mov nop mov rcrl cmc cmpsb or sti (bad) inc and test or orb cs sub icebp mov mov sbb mov data16 pop scas fidivl bound push stos cmpsb sbb call mov jo aam add outsb jae ja dec pop sbb pop pop xor push cs loope ja pushf call pop fisubrl mov push xchg ja stos sub addr16 mov inc and adc cmc mov jne sub and mov aam jle pop xchg or jne jl lret push jae pop jge or jo push call fsubrs xlat or jmp aad xorl adc mov mov pop fildl cwtl aad push outsl sub ljmp pop lea push pop in push outsb (bad) negl popf mov pop pop lea lret push mov or icebp sub push push dec rol adc into sub shrl outsb (bad) loop sub ficom aad into stc fiadd in add add add mov ds sbb and in enter int3 sub (bad) repz mov ds sub fcmovb popa fwait pushf jne cmpl sarb xchg mov pop sub xor jnp push sbb xchg (bad) (bad) idivl add add add jns in lret cmp js iret cmp add loope fcoms mov mov je fsts fidivl loopne dec shlb push data16 adc cmpsl pop cmp push pop lock lock lcall mov xor xor dec mov out mov mov ret xchg dec push dec addr16 sub mov dec fnstenv sub jge ret (bad) sub (bad) rorb nop add add add aas jae data16 push xchg push sbbb js sub pop push add int mov cmpsl nop or ffree and adc ror mov mov cmp insl push and pop and lret outsb inc mov jl test jae out roll pop push movsb (bad) ss add dec rorb lret sbb loop sub lret jl inc aas aas xor add add setg add jge mov xchg gs or (bad) out ja leave inc ret jb xlat movsl repz or jne cmp dec lods (bad) cmp push mov shrb sbb daa aad cmp scas inc xlat mov or std into xchg (bad) xorl outsl sbb stos ja dec int3 jecxz mov inc das insl or jbe jo mov adcl jne,pn dec aad cmp cs xchg mov loope push or mov in xchg js hlt imul mov iret adc push jecxz popf sub sub dec sbb cld mov mov pop sub or addl add add adc mov xor faddl pop or inc in mov lahf mov jg ret add pop shll (bad) hlt push incb (bad) xchg (bad) mov fildl adc inc test cmp lods mov and cmp pop add repz add cmp lret inc pop incl mov repnz movsb in push je dec sub jae jmp pop jmp js iret fcmovu pavgb into pop loop dec sbb mov jnp stc sub rcrl cmp out lret nop in pop xchg sahf adc pop xchg (bad) fildl lods aas push iret lret iret or insl mov and inc inc icebp cmp mov push aad mov mov mov insl out xchg xlat popa dec push lea cmp mov inc mov lods mov mov fadds dec mov cmpsl dec xchg les adc sub inc xchg incl fdiv cmpsl fildl hlt jle mov insl mov jb fisttpll in insb aam outsb into bound icebp sar sbb cmp popa sbb xchg sbb mov push les aas xor lock adc out (bad) mov std xor xor push std jle incl lods sahf aas dec inc pop bswap incl call outsb fdivr pop sbb and jg push hlt mov aas shlb pop jbe (bad) repz push je popa in sub cmp iret cmp hlt inc andb mov fsts mov mov xor inc mov mov inc cmpl mov cltd jae jmp cli add add cld and stc pop imul cmpsl in cli pop loope insl ss (bad) fdivrl cmpsb movsl loope dec dec cs (bad) push add aas xor pop js or mov das loopne aas inc bswap jg scas roll negb call and std movsl fwait clc cmpsl bound sbb aaa in sub lds repnz out fild mov cwtl lret leave inc mov mov mov out lods inc lcall mov mov and aad imul xlat mov out mov push push inc mov insl in push mov ja popf pushf mov mov xchg sub fs jne ds and mov lcall in sub xor pop (bad) movsl (bad) enter lock repz stc xchg std stc pop arpl aas pop dec iret aas movntps mov movsb les xchg and pop aad adc imul add add or and sub xchg add add mov test add inc add and dec xchg sbb fisub (bad) ss cmp push stos xchg mov jo xchg mov pop sti and clc mov mov in fistl pushf je ljmp enter in mov stc push adc scas pop mov push xchg stc mov pop lcall loopne div sbb out in aam pushf mov adc sub adc test pop mov int mov idivb movsl pop mov push into cmp fisubrl or (bad) xor mov out outsl push (bad) sub arpl mov and fidiv sbb outsl push cmp inc mov dec mov sbb mov xor lret push inc loopne cwtl mov fucomp xchg pop sub pop es cmpsb into pop jge xchg in push mov or ljmp xchg inc push inc xlat jb inc mov pop mov mov mov push adc inc ja into (bad) addr16 ja push loopne jecxz fild addr16 pop adc sbb je dec adc js mov dec pusha add stc push add les dec js js (bad) mov stos and sbb inc mov mov fs fstpl repz mov fidivl push adc pushf push mov sbb out insb pop xor outsb push inc repnz dec aam sub fcmove dec je mov (bad) imul (bad) rcrl dec pop jp cmp mov mov fsubrs in mov pop fsubrs in mov cmpsl xchg mov mov data16 xor push mov push int3 dec repnz mov clc pusha fdiv popaw inc cltd mov cmp mov inc (bad) into lret inc out out je inc (bad) fbstp lcall push test push cmpsl lods clc lock jecxz mov (bad) xchg jnp inc mov (bad) xor add ret setno mov xor lds lods mov inc outsb sub pop and aad xchg stos imul sub push sbb imul ret scas arpl in cmpsb stos add cmp fcompl enter loopne sub jb dec dec bound stos jecxz lock rolb into pop jecxz pop cmp mov add xchg out in gs xchg inc stos sarb leave jmp lock inc (bad) repnz (bad) mov add and cmpsb incl cld sub cmp xor and sahf mov (bad) loope mov scas pop movsl insl (bad) jo pop das jl dec call jg push fs fwait dec pop ret mov lods mov push mov inc es cmp (bad) loopne in dec lods cmp xchg int sahf aas mov xor iret jg movsb out push scas in jnp loope adc dec mov mov rolb lret xchg cmp repz scas ljmp test mov xchg inc push scas ja repz (bad) fnstcw jns adc cmc sbbb inc out mov jp (bad) imul mov mov rolb dec pop cmp xchg arpl aad out addb cmp add push cmp iret push xchg ret add jmp dec mov negb jb imul iret jo fcoml mov and mov jmp xchg fcmovnb outsb mov outsl mov test sbb sarl lds adc es cmpsb hlt iret sti inc push add add out push inc dec push mov scas sbb test sub jp push push xor add sarl xchg fisubrl cmp incl jmpw (bad) notl mov ljmp jae push jl jbe jecxz dec sub xor ret pop mov mov cmp fwait aad mov push adc popa mov sarb add fdivrl or mov sarl hlt lret arpl and or xor aas cmc cmpsb je imul cmp iret imul mov xor andl xlat jge bound (bad) jbe jmp and lea mov out popf (bad) sbb out inc jnp push add xor xchg xchg xchg test pop add or inc addl outsb xor sbb xchg mov add add push sbb rcrl rcrl adc lcall popf sbbl ret cltd arpl cmp enter xor push icebp pop cwtl cmp scas iret cmp cmc cmp jbe test push mov sub inc dec adc pop scas jp mov addr16 mov jno cwtl sahf or dec sub test pushf (bad) mov xor inc arpl add loop and sub inc mov out jnp out out (bad) jae out out mov add test add add inc add push in xor or xchg addr16 addr16 out outsb inc xchg jbe (bad) add mov mov mov mov sbb xor or dec push xor pop icebp xor loopne ljmp xchg sub jmp mov jnp jmp xchg mov push add jbe cwtl std aam inc (bad) imul dec cmp test cmp ds negl insl xchg dec (bad) iret inc inc ret pop mov ds shld rcll arpl jo mov xchg in jp cmp frstor in movsl lds adc stos fldcw fldcw cmpsb aas movsl out dec (bad) jno scas sbb lods imull out (bad) mov add dec (bad) xor pusha cmpsb hlt or stos lods cwtl pop leave mov inc mov push cmp push sub add dec test cld pop push cmp mov pusha push add in push adc rcrb lret scas les ret dec push int and pusha add dec mov aad xchg shll negb rolb dec mov pushf out cmp hlt hlt cld push xor pop push sub (bad) daa popf (bad) jne cmpsb cmp lock push das fwait inc mov aas sub mov adc jnp shrl xchg or leave dec jns sets int lret out mov push ret adc lods cmp mov sub sub iret lret inc iret jbe mov (bad) push adc and stos jl mov add add add (bad) negb lahf pushf popf xchg pop cmp sub js outsl rep pop mov enter popf imul loopne out jle gs inc jb inc push jb in daa pop jmp in test push pop int xor add add add push stos shrl or push mov jecxz lahf xchg jnp xor mov hlt fs nop fwait adc pop in inc mov aas aas mov lods ss imul lds dec les je dec mov (bad) outsl movsl shld mov (bad) dec xchg incl pop sub sbb test scas mov lret cmp gs repz jp lea jae negl sahf (bad) mov or arpl adc push popf push cmp xor xlat cmp call popf or inc pusha and addr16 mov shr pop cwtl iret push test cbtw mov inc push adc adc adc xchg in xchg sbb inc and iret fcmovnbe setbe dec fs movsl je inc mov in enter push adc ds incl rcrl mov mov cmp gs insl or mov cmp pusha inc test mov mov xchg mov and xchg in cltd sbb in test mov minps jle mov xchg fsubrs repz into nop lock cld jg sub jge,pn mov in cwtl hlt scas mov insb pop sbb out xor dec jmp add sahf (bad) cmp (bad) fwait cmp (bad) jne cmp push and cmp xor jne popf jle lcall xchg and dec idivl sub ds stos cli loopne sbb mov inc mov jae divb fisubrl jmp jp movsl xchg pop mov adc ss and inc test xor or mov sarl shrl loop jmp dec cmp sub push rorb jp (bad) mov and mov fs aas popf adcl and lds rorl sbb cmp les mov inc xorl mov mov and xor incb mov cmpsl in mov add dec mov arpl or cmp adc lea push insb sub enter and pop mov ljmp stos pushf rolb jne sub fimul jae xchg popf pop adc xchg adc sub stos nop mov xchg test mov lods pop sub das jl fsqrt or mov aad (bad) ss mov sti mov and pop cmc sbb lahf call sub aad mov sbb dec cwtl icebp pop movsb div pop fimul jb add sbb cli pop sub sbb mov sbb xchg mov fisubr adc cmp imul mov stc adc or cmpsb push xorl xor pop mov mov mov cmc gs mov (bad) lock std adc (bad) add pop scas mov mov dec loopne mov xchg movsl xor add lock or and or popf jns mov or cmp add in and frstor and mov push sbb mov inc mov arpl pop ljmp scas ret in lods or lea jbe int xchg xchg xchg xor pop sbb push mov cmp lfs pop shlb jge cmovae das jb addr16 into iret dec lret mov movsb cmp inc jae or loopne imul mov cmc bound cli sbb pop enter leave imul scas xchg (bad) clc mov or inc xor pop rcll adc cmp push pop xchg sub mov jnp sbb lret inc mov and jno mov int3 sarb stos loop jne mov icebp inc xchg xchg cs fidivl mov gs stc dec cltd push inc jae mov fwait stc movsl lea ds jg sbb out fisttp icebp xor add add inc add sbb mov cmp pusha cmpsb in aam movl xor jl sub mov mov arpl add loop push insl xor aad cmp stos in jno cmp arpl push cmp int adc cmpsl adc lods push jae or cs pop jns insl xor sbb rcrb lea adc mov out sbb add and imul xchg pop cmp clc cmpsb dec dec xlat mov pop mov (bad) push ss loopne cmp cmc cmpsb or scas or cltd adc adc ja push mov dec adc pop mov jp add scas sbb add push fimull in jp push adc aam cmpsl and and (bad) jno mov insb mov or mov das sub and les push and aad mov (bad) mov and xor sub and inc divl adc jae sahf out (bad) mov rclb sti sbbb rolb fsubl mov dec add dec cmp pop adc stos jl mov pushf adc incb xchg inc movsl adc push or sub mov aad sbb test mov inc (bad) mov mov mov and stos xchg sbb xchg outsb rorb (bad) in xchg lret dec inc out adc xor jnp xor inc jae jecxz scas int3 cld pop arpl cmc in xchg jnp dec in in mov push in imul sbb es call hlt aad (bad) out push mov (bad) xchg in subl (bad) mov jne clc dec aad sbb adc lods fcoml add inc sbb lret in mov sub inc dec outsb fcompl jmp mov fcomp stos in cmc ficompl pop leave mov add add add mov inc and fldt lretw ss aam test mov arpl scas fsubrl push pop cmp fwait rorl jp fwait ss jl sub leave fnstenv cmp bound mov idivb cmpsl (bad) pop inc stos outsl fldcw xchg xchg into dec movsl je rorl ja and out mov xchg add dec mov push mov insb mov xchg (bad) loop cwtl in xchg mov mov (bad) call test cli jmp js xor mov movsl fisubl xor mov cmpsb jne xor push inc inc pop sub push ljmp sbb inc mov and dec sub jne aaa sbb loopne adc sub cmpsb scas iret pop mov dec shrb pop xlat or jp adc xor outsb mov test push hlt stos hlt jno das xor sub dec frstor lea sub mov mov sub push mov fidivl out push (bad) cwtl pop fidivrl (bad) insl adc stos mov or jmp cmp shrb push push sub push add xchg dec pop jmp testl data16 xchg in push sub or lcall les fnstsw sub aad lret pop mov cmpsb cmp popa inc scas js jge xor dec jne scas or scas stos bound push push (bad) jae lods push push jb dec call ljmp dec out inc iret addr16 mov repnz in ss sarl testl add and adc add add add pop icebp addb je lds cmp adcl jb xor pop adc notb pop mov cmpsb mov dec jae (bad) and lods mov mov add aas in repnz mov inc outsl sar clc pop mov mov leave xchg mov mov repz out repnz fbld lcall push aam dec jno cmp cmpsb mov jbe adc out cmp fildll out mov add add add mov dec sub sbb int3 cmp js mov stos popa inc test mov scas pop cmp mov push int3 mov pushf mov or adc cmpsl arpl mov jmp jle jb lret cmpsb push stos fidivl int3 jle in inc inc xchg orl sub shlb mov ds adc or rcrl xchg xchg dec mov (bad) enter ret fnstenv mov stc jecxz (bad) xor mov jmp sub pop icebp and mov push add rolb add add das sbb xor sub aam mov (bad) cmp push adc pop aad fiaddl jne out (bad) stc jge fidivr test lock xor jne push movsl popf in sbb je (bad) (bad) add cmc fwait mov fsts jne mov sbb sub xor ja out pop jb cmpsl ja fiaddl mov mov and cltd testb dec mov stos fsts out pop dec notb push xor adc out leave sahf (bad) stos scas lret repz jns dec push sub inc pop cmp fisubr aad push cwtl dec jne test (bad) loope in dec jmp push ljmp aaa add jne inc xchg sub jp loope cmpsb hlt lods jne aad scas loop xor js cs repnz xchg rcll mov cs (bad) jmp lret subl push scas mov push out mov outsb add cmp dec stos outsl inc hlt xchg inc out test rclb and les stos outsb clc cmp adc pop sub inc lds dec push and sbb jne ja and mov (bad) loope push in lds flds sbb xchg push xor push bound imul cmp jnp inc jb (bad) dec push loopne popf test ja pop xchg pop lds xchg inc das adc mov jp,pt push pop mov cld movsl ljmp mov movb int3 jns int3 dec dec rcll jp xchg (bad) test cmpsb and stos push andb add rcrb incl cmp outsl ds fs or iret mov sub push rolb repz jbe mov cltd mov pusha dec inc (bad) sbb mov and mov xlat pop in pop sub jge ja sti xor inc stc pop push jge jg ds std mov ret lahf jle jp idivb not jle not cmp xchg sahf xchg mov repnz push and lea bound in imul insl jp xlat push cld (bad) test call cld outsb (bad) add mov add fwait loope cli sub pop in cltd das (bad) mov cld das jg pop and xchg and popf push pop mov xchg in mov push icebp gs pop mov test fnstsw cmp je jmp hlt inc mov jecxz ret aad es inc jae push notl ja add jg push aad (bad) lahf lret leave and sbb lea les sub pop icebp fucomip cmp out ret repz ret insl (bad) imul (bad) rorb mov ss add ss pop xor dec rolb push rcl lcall ret insl pop xchg rorb and inc lea push (bad) (bad) fsts pop cs cmpsl test rol movsl mov push (bad) push fsubl xchg repnz mov inc cwtl cmpl dec (bad) (bad) je dec scas jmp dec cli and into pop mov mov pop lret int fnstenv outsb mov outsb dec xor pop push popf dec loope mov xor xchg int and (bad) icebp cmp nop aas xor enter adc (bad) pop les aam mov pop sar add outsb lea inc incl xchg aas push addb cltd mov xor ret arpl bound mov dec call lret (bad) lds inc (bad) mov incl and pop fimull mov dec cmpsl push xlat outsl js (bad) (bad) and dec fldl in adcl cwtl out mov out repz xor xchg mov mov (bad) xchg mov es sbb cmp imul cs lods aaa inc jae lods dec adc pusha jl ljmp outsl dec jmp insl cmp and divb outsl (bad) pushf std negl in pop push and mov incl scas fwait cmp or call (bad) mov add pop lret mov add outsb (bad) add stos aas push jns std lfs pop shlb inc pcmpeqd fldenv inc ror push gs jae xor sbb std xor jp jns cmp cmpsb or jmp xchg dec adc movsb imul arpl scas hlt (bad) clc sub add call push xor and inc xchg xchg test and (bad) jmp push pop sub int clc in (bad) add cmp add add fucom addb push add add add add add add (bad) and inc push inc xchg test lret mov cmpsb sub jmp enter sbb mov test push pop mov push das sbb mov or mov hlt dec and sub flds push out lods movsl fmul movsl push jnp mov xchg dec test or ljmp inc pop enter jne scas sbb push ja hlt jnp add sahf test (bad) das push dec push scas dec aad xchg jecxz (bad) adc and fsubrl mov sub and pop adc xor rol ds and adc inc jg mov icebp mov xchg fstl test mov (bad) push call mov fist cmpsb cmp mov add xor cs mov sbb mov stos push or jno push push outsl cmp ret jmp into sub fwait rolb imul sbb fistp push mov dec fstl mov push cmpsb sub jnp mov push fwait inc xchg lret out mov test mov (bad) out scas enter test mov and pop xchg pop jl nop push xchg mov dec fs cmp cmp int aaa xor imul clc cmp ss les jge and sbb push xor mov out mov xchg ret mov outsl sub push or add jle cmp inc insb pop dec fs outsl push popl lds aaa pop xor jle repnz popf mov xlat cmp outsb jp xchg jl shll lock shr das jne (bad) jb pop xchg enter push (bad) mov and lret xor ret adc imul add add inc movsb cmp mov popf imul test xchg outsb mov pop in icebp adc xlat jle and cwtl xchg je mov push mov je mov scas imul xchg jnp inc in sahf mov ret in adc or mov hlt pop (bad) aas or add mov mov orl xchg dec sbb and jl cltd movsl sub jb jge adc aad jne push jle cltd jge sbb sub push mov xchg fisttp mov negl lret cs mov testl inc jbe test mov (bad) mov fwait lods clc movsl test roll adc pop fidivr sbb addr16 shlb aad popf and adc cmpsb jl ljmp push dec aam aad imul jmp ret stos out dec pop xchg pop jg hlt push xchg push and and aaa push fwait mov sti mov and ja inc sub jle mov inc es xchg sbb jne cmpsb push dec loope ret insl or (bad) test in xor test hlt leave aad fidivr scas pop xlat scas scas inc leave inc fimull out xchg dec cmp mov fcoml out lods pop pop out ljmp cmp mov fsubrl (bad) xlat ja (bad) mov xchg ret push jl stos scas cli movsl xchg push (bad) int clc movsb pop fisubr mov add aaa add movsb push out lahf add inc loop jge fisttpl arpl mov fidivrl fwait and cld faddp les dec (bad) enter push cltd pop shrb or pushw lods pop lods pop pop dec and pop cli std inc ficoml lret shll or popa mov dec lods arpl xchg pop (bad) mov add add (bad) mov mov dec sub mov push sub rcll das insb cmp fsub add incl test xchg push mov cmp mov lahf shrl aam jnp ja,pn push ljmp lods and insb jge pop repnz sub inc lahf mov lcall int es dec sub dec pop xor cltd fwait cwtl mov shll mov out xchg fsubrp mov addb add rclb push rolb add and xchg add mov rorb push inc add mov pop dec movsl ss adc in sub jb iret stos push mov (bad) sub pop (bad) xor push and mov push sbb sarl dec pop lds cmpsb push pop aaa ja clc fmul jb mov imul call scas xchg mov mov inc fsubl or scas sbb fldt push or sbb jae sbb cs repnz cmp rclb add (bad) enter inc lcall rcll adc cmp lret cltd sbb loope inc push add adc xchg bound fs lods push jge or insl sub rorb fdivr ja and pop aam xchg adc mov or rcrl mov adc insb cwtl push dec scas jge sbbl mov leave js scas cwtl rcll incl cmpsb imul mov dec pushf dec xor aaa gs stos nop sbb (bad) mov iret and xlat and pop xchg sbb push mov push adc and dec roll leave pop cs mov hlt hlt dec dec push push fdivrl jns (bad) pop pop loop inc push mov stos arpl mov pop adc push or loope jecxz or enter int3 xor push inc clc cmp in out add lahf aaa cmp xchg inc dec jp cmpsl pop adc push pop (bad) out fidivrl push aam mov mov aad fcompl outsb outsb push mov pop pop dec mov movsb xchg je and add dec rcr cld jmp mov push ss add shrb xbegin add xchg decb (bad) fbstp clc or loope fstpl inc pop cld cmpxchg add cld push insb lock cmc dec nop aas (bad) repz incl clc fisttpll pop jle jb cli push push mov add in rolb data16 pop decb dec incl scas xchg cmp lret xchg mov aaa das daa cs mov test mov out imul jl mov das jg pop and xchg and cwtl cld adc jnp (bad) sub pop inc out lret int (bad) (bad) aad lret adc fs cmp cmp lret mov daa sub xor dec inc mull push add add mov fnstenv sub push sub xor sub sarl mov xor out cmp pop in xchg pop outsl mov dec fstpt xor sub in lahf adc outsb fidivr inc jle xchg xchg clc das decb pop (bad) sbb popf lock shr movsl pop cmpsb pop outsb push inc mov sub aas mov fiaddl (bad) lock std adc (bad) paddb cmpb add mov cld pop mov push pavgb sub dec inc and jno lcall gs (bad) repz adc dec aas sar imulb cld mov ret dec bound xchg pop xchg in stos movsb daa popa dec cmp mov cmpsb fcoml lds cmpb pop iret fwait xchg xchg lock xchg or leave lock sub clc dec call lods dec sub das pop jmp scas icebp leave push mov fmulp jbe out xchg and push mov das mov mov divb in push cmpsl mov mov mov hlt jo shr jg aas rcll jg int add shll sbb sub out in cltd mov cltd add clc mov in daa incl jecxz xlat lock in cli stos lret xchg adc imul insl xchg push xchg popl test xorl fcoms jge cmp outsb push fistp sub mov aam mov testb nop lods add arpl sub loop push in aad lods jmp push outsb int jmp fistl xchg pop mov inc test push fimull (bad) mov mov jne sahf subl dec and lods xlat ss xlat sub pop fadds mov push mov add lcall mov sub dec les outsb repz xchg test cld std lock dec mov (bad) mov and push movb enter fs cld aam cltd mov (bad) mov bound fbstp out jnp scas jno add add add dec andl add add dec pop mov dec aam xchg inc scas pusha gs ss or insb mov jecxz inc cmp and test cmp and sti lahf jp and inc mov aaa jmp jmp in sbb sub add mov icebp (bad) cld pop arpl push jb jge shl sub push pop sub mov add in dec and popa andb test aaa scas popa je cmp adc data16 (bad) icebp inc aaa out faddl push es dec or (bad) jno into in sbb (bad) daa jg lods aad nop imull push xchg outsl add cmp mov outsb push ret (bad) in xchg mov stc hlt mov mov xchg test adcl stos loopne lea push movsl jnp xor pop stos out repz jg xchg add mov fs pop sub cmpsb push loope mov mov pop imul pop mov (bad) pop lcall cmc cs pop mov adc mov mov mov add mov mov jmp mov inc push ret push fcmove popf insl pop fwait rcrb arpl test ja jge es notb jne inc adcl xor ret test (bad) stos xchg sub movsb pop call pop lcall mov push cld int sbb aam pop jne (bad) gs xchg pop xchg imul leave inc mov aaa add in sub bound xchg loopne mov das popw mov pop cld and or enter xchg mov out rcrb pop xchg call jp ja cmova sub xor xchg mov mov cmp jae add adc (bad) mov in mov fnsave decb jle movsl pop (bad) insl jg pop push mov lods es lods mov (bad) int3 mov and dec test adcl inc pop push push and mov cmpsb pop shll rorb pop sti ficomp cmp lahf push cld dec dec mov mov movl data16 xor mov jns cmpsl ret arpl push testb scas sbb aam xor jmp cltd push ds cmp push add dec outsb jmp add jae push ljmp stos sbb movsb add stos (bad) mov mov sub js dec jns mov aad ret cmp pop sbb les fidiv cmp faddl mov lret stos add mov sub lcall dec xor pop mov sbb cmc inc xlat mov pop (bad) mov das jp add cmp pop jo and mov pop jae cld addr16 xchg pop push andl stos addr16 pusha xor inc scas adc push ret cmpl arpl stos adc lds (bad) mov push push push jl ds add pushf shrb popf shrb bound mov sub leave test test insb mov fidivrl (bad) fwait (bad) (bad) loop add faddl cli inc push int mov mov lods mov jmp negb arpl scas cmp push dec pop ss push dec enter sbb (bad) imul adc popf push cmp mov es mov push in jns into outsl fwait jl loop (bad) mov dec lcall add test adc sbb or inc dec out pop dec or iret dec and mov cwtl fisttpll cmp xchg mov mov jp lea inc clc lods xchg add mov pop scas or jb lret xor stc xlat clc mov add push and fdivrs (bad) stc lds xor or and les enter adc popa inc arpl add jo sub add add add add inc add push sub push add add add xor (bad) pop sbb hlt pop mov push xchg scas mov push addr16 (bad) in test add popfw push mov inc dec mov mov inc cmp jnp jae iret inc push cmp out push mov cwtl pop sub inc mov test mov push test sub insl ret xor pop sarl daa or (bad) xor inc sbb inc cmp mov mov sbb push add inc (bad) mulb popa jnp cmc pushf jb and ret (bad) sbb (bad) mov sbb inc push adc ss les arpl cwtl imull adc loope pop fwait mov imul jbe (bad) mov movsb sub mov jnp cmc loop lcall lods inc ret sub fidivr mov adc ret sbb sub inc mov pop iret fild enter mov loopne arpl loop jne push jecxz cmp ljmp cld bound lret loope jecxz loope mov sub push std fmulp mov pop adc imul scas outsb lock xchg xor xchg ficomp dec scas mov ret stc aam ds cmpsl mov inc aaa mov inc lods aaa (bad) xor bound loop ret jns cmc push out mov push int3 (bad) push cmp mov data16 add mov push outsb incl fs cmp mov mov scas in xchg hlt add (bad) lea pop push sbbb inc sbb scas pop iret fidivl pop pop and jl pop ja stos xchg movsl adc pop leave sbb in out idivl mov xchg int push pop dec add mov xchg out dec out incl push js mov stc (bad) xchg jns aas lds cmp hlt inc incl sar idiv mov push jmp loopne (bad) sti jl loopne test pop cmp add in pop loopne bswap (bad) cmc dec nop aas (bad) repz incl clc fisttpll outsb add repz ret push shrb fnstenv pop std je fcmovu inc mov fidivl xchg or or pop out repz mov (bad) sbb sub pop in cltd das (bad) mov data16 and sbb xchg sub pop in mov dec adc in jo inc addb (bad) jecxz adc inc xchg lcall sahf pop mov pop add ds int sbb movsb repz movsl outsb jge mov hlt out dec pop inc cmp icebp lea mov mov fdecstp dec mov outsl jle push jl push pmullw jge xlat loope push js jb adc pop fistpl dec repz loopne cmp test and ja mov jecxz cs mov xchg jmp aad das cmp imul stos jbe adc push xchg std jo pop add icebp xlat rcrl shr out add imul stos xor call (bad) aaa inc mov ret mov ret aas inc jle repnz mov stos repz cwtl jb mov loopne cli es clc jno std inc add ret imul aad pop shll cmc aas pop xor cld pop mov push pavgb inc cmp mov jmp mov leave jp in pop daa dec jbe cli mov std sbb xchg repz imul sub jne cld scas mov adc jnp call jo lret das inc mov lcall mov cmp aaa cwtl jnp ljmp push pop cmp rcrb mov iret leave inc xchg mov in pop push imul jmp enter fcmovu or scas mov leave fwait incb ss mov inc nop sahf cltd xchg cltd insl leave mov repnz fsqrt pushf jns mov (bad) popf xchg loopne cli sub out in cltd mov cltd addb push add (bad) aaa xor add (bad) mov inc orl popa ret fwait sahf mull sbbl imul sub xchg lods stos xor call sbb sub (bad) lods ds ret jno adc in or and adc loopne into pop cs xor arpl or test and or add mov xchg dec add (bad) loopne stos subl stos adc test or jno pop mov adc and (bad) (bad) movsl rolb adc and loop push or test mov loopne test pop lods loopne jno fwait (bad) push inc lds xor ret inc inc dec lret aad sbb out imul xchg push push fdivrp push jp jecxz xchg add gs daa sbb fisubr mov pop add dec (bad) iret or rclb cli fs in imul sub push sbb xchg sarb outsl stos shll mov dec lods fldpi add lret dec xchg jg inc inc inc inc lds repz jp imul xlat xchg cmp jge adc jle sbb hlt dec fisttpll mov ja adc mov xlat aas out mov add mov jbe sub lds and lods push sbb sarl stos aaa push push push mov popf jne and adc out test ja stos repnz mov arpl jne inc dec in fcmovnu mov mov cs sub je sarb adc jno repz xorl cmovb loope xor mov (bad) shll push data16 popf mov mov sbb cmpsb jmp daa mov pop push pop rcll or movsb jbe dec push in xlat ret ljmp jo in pop inc mov insl pop es jecxz je (bad) js dec pushf aaa arpl sarl pop mov cmp je into insb in xchg push scas push (bad) and push sbb adc push push (bad) cmpsb or ds xchg std add cltd xor imul cmp leave int mov jmp push movsb int imul rcr xlat push movsb enter or cmp push xchg dec pop pop data16 fwait sbb mov jmp jbe (bad) dec in jae lock xlat pop out ret lods jne mov sbb imul sbb add lock pop jae (bad) (bad) fmuls xor mov aad mov mov int mov test fiaddl aaa push fnsave gs push sysenter enter loope mov imul leave fstl sub lret cltd jns,pn and pop fistl jge sub pop ja pop gs jne shrb push ljmp imul jo movsl pop xchg cmp scas lods xor cmp adc enter inc dec push pop popf out or mov scas mov sub fwait mov sub adc push adc or push scas push ret test xchg mov in mov push jo stos (bad) push or jnp fimul mov push (bad) sub adcl test pop cmp rcll mov outsl mov or orl add add add add push push mov xor inc arpl inc mov jo ret orl pop arpl (bad) loop mov adc std push lock in push test or cmp sub loop jmp (bad) push in int dec mov xor jb mov mov adc sbb push push xor jns movq jl mov inc hlt sbb add add xor nop popa cmp xor xor xor jb aam test mov int3 mov adc in and (bad) cmc mov sbb sbb out imul inc clc inc ficompl imul lods xchg fs mov jp jge idivb xchg aas pop dec inc out cs movsl loope loope mov sbb sarb or (bad) loopne jbe in push iret scas test sbb bound and sub idivl iret jae jmp jae in pop in adc dec add add add add jo add add add push mov xorb add add or loopne inc incl fmul or jecxz add dec stos movsl sub push cmp lahf lcall arpl outsl inc dec and cli or pop lret icebp dec (bad) cmp fisttpl mov inc dec sti push outsb fst add dec mov add push mov icebp mov mov out (bad) inc loope in cmpsl sbb adc lret or xlat aaa xchg push xabort mov add sbb dec cmp fnsave lea push xor adc ss adc lods repz pushf push incl pop jnp iret dec xchg push in in mov add daa iret push leave or push je push pop mov pop sub pop xor dec push fistpll mov xlat stos cwtl cmpsl mov add dec push stos stos mov sub pop lds out (bad) push iret rcl aaa and bnd dec push hlt insl push or (bad) and mov aad mov jno push xorl cmp das jo add stos popf push and inc add sub sbb enter inc lret lret test inc xor mov push and cli xlat inc (bad) nop xchg test lods pop je sarl push mov je clc cmp fs adc add pop sbb fwait mov fisubr lret ret into aaa push push leave fidivl insl outsl push sub enter jg in push (bad) mov jne in adc sarb aam leave outsb lahf jnp fnstcw mov adc test push aad mov out repz sahf lock push (bad) rcrl repnz xor das cmp outsl pushf mov popa out lock cmp push pop jmp hlt fucomi adc mov mov xchg mov add movl sub push (bad) repz pop mov inc and sub jmp dec pop out bound inc and pop call push aas and insl dec rcrb mov insb jnp mov sub push sahf inc cmp outsl fsincos aas fmulp decb jge cmp idivb divl inc sbb dec pop cmp pop push xchg cltd sbb lahf das push adc and mov aas xchg (bad) pop xor ret shrl enter jp int3 xchg xchg jle jge int3 (bad) fidiv popa outsl jge rep add jae inc call fmulp decb jge cmp idivb divl inc sbb push mov dec insl stos pop push daa aas daa push imul adc sbb jae cmp xchg add mov sub int3 movsb popf fwait cmp leave inc mov xlat inc popl iret mov inc std jo xor cmp mov lahf out data16 ds or fstps psrld in inc insl dec es (bad) outsb pop scas cmpl xor adc xor rclb test push mov lods jle insb dec jmp cmp xor fwait (bad) (bad) cltd jne inc insb es pop mov hlt out adc mov mov lahf out data16 jle out sub jmp mov or jb icebp (bad) fpatan mov mov (bad) pop (bad) add sbb cli (bad) cmc push repz adc icebp and and bound adc pop mov mov popf call sbb mov cmp fcoms add lods jbe out cmpsb push (bad) mov movsl out repnz cmpsl out and std push cmp idivb divl push xchg lahf mov in iret loopne int3 push pop outsl js int repz insl push (bad) ror fldcw cmp sbb bound out mov mov fisubrl incl fstpl jo or lret imul push gs out fidivr test cmp push jbe les call inc call fmulp decb jge cmp idivb divl rcrb dec lock rcl movsl push ficom pop (bad) adc pop sahf adc sbb jns push sbb jno das arpl ret imul pause nop cmp push int3 arpl bound cmp adc aad xor pop sahf dec int (bad) (bad) sub (bad) xchg mov fs mov dec icebp pop cmp arpl mov ljmp add mov repz jecxz or add add inc push push inc and add add add xorl add add add add mov sub inc das (bad) shrb (bad) shrb sbb xor inc (bad) test rclb add mov dec rorb dec jl (bad) imul mov sbb nop mov movsb dec aas lret cmp lcall add inc pop push enter pusha stos insb push adc xchg adc mov or (bad) mov push sti jecxz xor xchg test loope cmpsb xor pop jb sbbb sub stos mov push add (bad) imul pop cmc outsb in mov repnz xor aad lret lret rorl aam (bad) jp imul push xor xor and int pop fidivrl scas imul pop push lock fisttp lret inc fstl iret imul popf fstpl add (bad) out mov lcall cmp arpl or sub push cmp jmp das jb push dec rcrl cmc (bad) mov imul cmp fstp jno aaa sbb mov ret dec pop mov dec adc jne xor push jae adc scas sub leave ja add xchg inc pop sub scas cmp stos mov pusha test push aad pushf fbstp ja aam ja sbb fisubr pop sub popa (bad) out js push inc stos scas jnp jae and (bad) mov and dec sarl jns mov jp in jle mov push movsb sub shl mov fcomp addr16 cmp sub pop xchg addr16 stos movsl jbe (bad) icebp fisttpll in mov idivb in jne mov dec and or (bad) js fmull inc xchg lds (bad) pop pop push ret lahf imul mov jmp test mov rcr adc cltd adc rcrl xlat ret jb (bad) (bad) pop add jns,pn pop xchg inc sarb es mov mov outsl imull hlt (bad) mov aaa cmpsb cmp mov mulb aad sub sub stc and (bad) iret lods mov inc ja cmp lcall jle (bad) jbe std push sbb js cltd test mov push sub (bad) mul mov (bad) ljmp xchg push out mov mov (bad) adc jnp fnstsw jns sub test fisttp sub arpl cmpsl stos push cmp dec adc push in rclb push test xchg in loope sub in xor fcmovb xor xchg jbe jo notb xchg or cld pusha xor jmp cmpsb std in cs push push push pushf mov cmp push xchg cmp pop xor and jb fs dec push or gs in out sub insl js je cmpsl imul movsb loope adc jmp stos pop adc addr16 add pop xchg loop fcmovbe xor sub ficomp mov in out adc movsl clc popa aad push outsl into mov add mov add add cmp cmp inc insb ret xor (bad) mov sub (bad) mov jp mov xchg mov outsl jae push mov jns lcall insb mov lea pop fadds incl mov dec jg hlt mov leave sbb inc adc jns pop sub xchg addl jmp (bad) aaa sbb push pop xchg inc rcll inc cs mov xchg push or es xchg lret loope xchg mov loop mov pop stos xor mov imul push lods cmp cmp movsl in push (bad) arpl loopne pop in jnp out jmp dec iret sbb mov inc ja,pn cs and jp hlt hlt push sbb mov jnp pop (bad) jb lret cmpsb ss sbb mov sub pusha stos aad dec ret scas mull aam ljmp add add outsb sbb add add add add push add add add add es pop stc cmp add shrl sbb mov cmpsb lods pop pop push cmc roll xchg push mov xchg sahf xchg pop rcrl scas lods js out push repz mov jbe imul xchg push rcll inc cwtl pop imul lret mov fimul rcll loop mov dec in xchg leave pop cmp add mov inc push pop scas rcrb es adc sub cmp loope loopne cltd adc mov jne cmpsb mov arpl lahf inc lods pop push (bad) popa lea jno jne out add sbb jp fisubl (bad) gs xor or cmpsl imul push (bad) lock lods jno aaa push mov mov or sub xchg lret xor xor adc aam jl inc fwait cmpsl popf repz and cmp insl repz inc fcomip subl jb pop fidivrl inc outsb idivl sub int3 push subl jge adc fisubrl jle xchg add loop pop xor or adc loope sub mov fcoml or cwtl adc aam aaa mov jno dec push stos push fstp add and push xchg jp sub xlat xor or repnz lods mov sub push aaa jp jne mov stos push loopne in pop cs out sbb sbb lds jo lea adc sub mov int3 sub cmc dec ja mov fstpl out mov jno xor iret pop push and push int3 clc push pop jo stos js push add cmp xchg rolb add and sti addb add push mov and add add add add add sub sub add add mov add or add add add add add add add subl cmpsb adc adc lds pop dec add add inc in dec dec push jl or lahf sub mov xor lods pop adc adc inc lods jae xor imul repz mov (bad) ja inc sub dec fldcw lret ja repnz das adc pop loope mov and addr16 fs and push xor ss mov pop adc cmc mov sub testl xor mov cwtl pop inc stos stos cs add or cmp ror test aad in pop mov or mov cmpsb dec loop test pop mov aam jmp pop jno mov or into (bad) roll insb stc mov cmp fst es pop push cwtl out (bad) mov inc dec jmp mov lds push ljmp scas cmp cwtl arpl push mov sbbl mov adc out or sub pop ret xor fidiv ljmp out sbb push into mov pop cmpsb ljmp ljmp push or sub scas out out loop and inc scas jle pop insl bound jne fcompl or inc mov push mov into pushf ss inc xor call rcrl aad lahf fldenv cltd and sub repz andb daa xchg or lcall adc inc and cmpsb inc dec stos xchg and sub cld arpl jg mov cmp inc les out jne cli faddp notl ljmp adc cmpsb loopne dec je dec and sti cmp les (bad) xchg sub cmpsl ss repnz dec sub xlat das mov cwtl xchg lea data16 test test fiadd pop mov mov pop aad cmp ss mov popa shr clc nop sbb jbe gs fcomi dec mov jp and int3 ret rcrb ja pushf addb ret xchg push dec cmpsb xor fidivl sub sub adc dec lret mov mov repz xor or movsl adc (bad) aas dec jns shrb sub inc push cli in mov mov push dec imul inc repz dec mov outsl inc in imul in xchg pop in mov lahf cli fs aaa adc push cmp sub popf das xor rcll movsl xchg xor dec pop push or dec jmp pop into xchg fstl loope ud1 mov jmp push adc mov xorl cmp outsb mov testl push add push mov fist notl es cmpsl js ret cli dec inc (bad) cltd scas repnz cmc sbb adc dec nop adc jne mov imulb jp dec xchg fucomp adc js fstl test ret mov xor add push mov xor imul outsb add cmp lods mov pop push popa cli icebp sbb sub imul flds adc sbb mov pop xor cwtl fwait cwtl lea pop add sub mov xchg shll and sub rcrb fldenv add imull cmp and gs loope cmp cmp (bad) cmp cli jae xor mov adc inc jmp icebp cmp repnz gs mov push xchg addl inc push (bad) loopne stos jp mov mov jns xor cmc mov mov xor sbb insb outsl dec into jno lahf or or popf and inc mov or pop adc scas into cmpsl in inc insb out (bad) push push aad xlat jge xchg lods stc jb mov je mov xchg mov mov scas adc jge xchg imul rcrb add add add add pusha add add add add test enter xor xlat pop (bad) cmp cmp lahf mov cmc inc push dec iret mov clc add into (bad) jmp adc mov jo popa pop pop in fsubrp cltd pop ficoml fldl data16 (bad) inc inc pop sbb sarl je insl inc dec adc xorl outsb push ss or scas or test cltd or repnz jnp fadds sbb fisttpll clc (bad) out dec push cmpsb cmp push sbb xchg (bad) in sub cltd jne loope,pt lods xor mov cmpsb push mov popa mov sbb fstpl jp fildl push cmp (bad) ret xchg (bad) mov push adc es (bad) or outsl inc loope je ret and adc dec adc loopne out inc mov lea and inc sub idivl and iret rorb rol (bad) lret in dec mov jnp mov cs loopne (bad) mov add fwait roll mov pop ljmp mov sahf rolb or test xor lea mov sahf loopne sub lret (bad) inc mov scas es loope sbb mov dec arpl mov out pusha mov mov shlb lock jne pushf rcrl in in cmp jle sbb fild dec std cltd imul aaa push jne mov outsl push shrl ja push push mov test push inc mov adc dec movsb in xchg clc cli pop sbb (bad) int3 sbb das or rcrb jmp aas inc dec xchg int3 mov arpl stc les xchg mov add add add cmpb int in imull pop dec xor mov adc out in in pop cmp sub pusha cmp inc stc push popf rcl pop push xchg lcall je mov cwtl out jno xlat push mov std jo incl test aam xor ja adcl into cltd pop fbstp ljmp push ja push and stos push adc pop dec mov das pop jb xchg lcall lea push and mov out arpl cmpsb lahf mov in test fiaddl (bad) aad imul test lods mov cmpb fdivl lret dec inc cld imulb add cmp cmp ret fisttpl sahf rorl in xchg pop movsb call push aad cmp std scas arpl sbb mov es mov ficoml and mov ficoml rcll mov push sbb in stc xchg dec inc (bad) xlat xor mov mov out std popa popf cltd insb or arpl inc jp fs jle fimull inc leave inc dec dec int push inc imul lcall xchg xchg lock mov inc xchg and jno sbb mov fist stos imulb sti push push ret sub es pusha js ljmp push push push dec mov gs jnp inc mov out mov in lds ljmp cmp incl xchg dec incl leave sub or cli dec movsb push push sbb mov jecxz (bad) icebp inc mov ds pop jae cmp mov fstl decb pop mov jg mov and sti aaa gs xor mov xchg mulb mov cmpsb mov add out xchg lahf and test shlb into das lcall add and fdivs xchg add inc lods xabort mov xor mov mov int jecxz mov andl (bad) mov outsb push sub and fs sbb mov mov dec js xor imul les mov call sti xor jne push pop fistpl adc dec add push leave push xchg and mov data16 mov shll jns (bad) test adc sub push sbb sub jmp incl std fs cli pusha pop mov fstl mov ficoml and mov ficoml jle fstps dec push fldl jle repnz loopne cmp ficomp rorb inc fs cmp popa xor mov sar push iret dec mov add pop movsl xor shll mov sub fadds pop xor xchg fwait and cwtl jae xor bound xchg stc int3 jge ss fnstcw aam cmpl (bad) in pop loopne (bad) add insb lock cmp xor imul xchg mov mov repz bswap lods sub arpl or push and and addr16 jne mov stc jns xor cmpsb and ds outsb mov (bad) outsb sar add jns in (bad) rorb cmpsb fisttpl xor inc cltd and xchg inc cld sahf sub add daa (bad) mov inc mov inc mov push imul fwait stc mov nop fisttpl push cmc data16 xchg sbb add add push and nop mov mov add add add inc test push adcb nop stos add out or (bad) stc stc (bad) fwait rolb mov inc dec sub es aas jae push xor int outsl (bad) imul add loop out fnstcw xor jge sbb sub mov push lods pop pushf outsb cmc mov daa pop sub scas iret or outsl iret ja sarl xchg imul pop add loope,pt dec cmpsb or stos das mov cs inc inc lds sub repnz fnstsw test out lcall push loopne std stos sub loop sarl in test sbb xchg mov imull jno pop scas stos push dec mov (bad) clc rorl or push imul ret xchg pop lods cmp jbe sub rcl xor test loop pop mov xor fisubrl xchg scas mov push imulb push push xchg jbe mov movsl jne jns imul mov push in jmp repz stos cmp sub cmp sbb incb cmp lods lods sbb mov stos (bad) jbe dec and shr addl pop out inc stos stc ja push fsubs cmp data16 fbstp xor sahf stc lods xor push and mov es mov cmpsb sub shrb out mov rep add dec test sar inc cmpsb sub into ds and dec aad add jne pop scas push lcall sub push dec push repnz and les test pop and imul dec push mov loop out add pop inc cld and rolb xchg mov incl pop cmpl lcall xchg cwtl pop js lret call (bad) mov mov movsbl sub xchg (bad) (bad) jmp inc arpl insb push inc mov arpl jle and hlt xor (bad) sahf dec loope jne into lret and ficoml gs repz addr16 rcrl hlt sahf push dec pop xor test push cmc mov mov inc imul into mov xor pop xchg pushf xchg mov ret call add insb in lods dec js and mov icebp sbb fnsave popf jne jnp enter jo in cmpsl mov je xchg insl sub xchg sbb pop insl (bad) lock or ficoml lahf jno inc mov ss shrl xchg adc dec cmc imul lea (bad) ss in stc iret jbe xchg xchg pop push enter mov push bound inc int es (bad) repz push mov mov (bad) mov pushf femms jmp mov lds xchg rcrl fisttpll lcall mov scas mov lea (bad) cld push ret out jnp adc add sub mov xor popf and cwtl movsl in push adc mov adc lret int cmp (bad) add rcrb dec push pushf jp adc rcl dec xchg jno sbb movsl adc add ret add jnp shlb cmp adc adc mov subb dec and fildl out push push adc clc add add add add js or or loopne enter xor mov (bad) lahf dec gs mov mov inc ja arpl out icebp js fldpi mov (bad) loopne enter jo mov cmpsl and xchg mov scas mov mov fstps sbb sbb bound idivl (bad) lds push mov push clc inc clc push fisubr inc mov lods cmpsb mov xor scas call dec mov loope and jb mov xchg xchg adc jp into jae push sub cwtl mov xor jne popl jmp sbb out dec dec inc ror in pop insb dec mov fstpl pop jnp and int3 (bad) jl (bad) mov je mov out jne cmp jbe jb jp addb add or inc add sbb add add add add enter sbb test and add add xchg cmp nop rcr pop cmp (bad) pop scas aad pop mov and cmpsl lret aad jb adc lahf inc lds leave aaa sub xor dec push adc mov sbb sti cmc mov stos aam out cmp pop pop xor inc push jno mov push mov mov cltd (bad) and les outsb sbb sbbl pop fsubs pusha push stos ficoml push inc xor push sub popa mov gs test nop xor repz aaa push adc pop stc mov iret aaa dec mov add inc mov repz mov xor (bad) fldenv (bad) mov lods fistp sbb mov mov lea xor mov dec adc adc out mov xor fs mov rcrl scas pusha pop inc push push arpl push mov adc movsb cmpl sub ret (bad) mov movsl xor mov or push push xchg push scas lock insl xor sbb mov jo out xor inc jne mov insb ret mov adc nop mov add addr16 loop stos mov outsb scas dec cmp fistl (bad) lock (bad) (bad) shr xor iret ret add arpl xor out bound test push xor cmpsl lcall adc or jmp test int3 leave int3 lret fsubr daa xor sar mov push or jae notb mov lea and pop adc cmp dec jae pop jns bound ror sub lea dec cltd stc imul std (bad) pop add pop xchg pop pop dec xor leave xchg jb pop push into xchg out mov pop fstpt cmpsl sub mov mov sub lock mov pop jge movsb cmp es ljmp add js je aad or lods popf (bad) cmp das xor push pop bound lock les lods jae or syscall inc cmpl jb adc jns ss ret lods cmp mov sub lods insl fstpl (bad) daa sbb rorb xor sub push mov ds inc dec and int3 pop cmc addr16 push das movl mov and sub daa mov and cs pushf sub iret lret fmull sahf cwtl rcr cmp lret xchg pushf pushf mov push jl cmp dec repz insb lods pushf sub (bad) repnz out push rclb repz mov mov push mov scas arpl mov dec pop scas xchg das (bad) or in push lcall push cmpb jns incl push mov incl xchg pop mov mov mov dec addr16 data16 jle cwtl icebp cmpsl fpatan or sbb xchg cmp add (bad) mov jle jg mov lahf cwtl pop or mov cmpsb pop repnz insl xor inc xchg pop mov lret ss sbb mov js or shrl mov push xorb aas aaa out pusha in (bad) mov dec inc pop lea imul mov lcall dec dec dec js js cs inc jne insl ret addl int3 sbb adc cs xor stos adc push out enter add (bad) push sahf dec popa fcoms sbb cmp fidivrl fs subl das jmp jno (bad) fwait dec rorl or int sub lret ss pop sbb mov enter jnp jae ret cmc inc repz ror inc into arpl push jp mov and frstor popf in mov movq push std jle incl lods sahf aas dec bswap lsl rcrl mov jmp (bad) (bad) lock fwait pop adc (bad) mov in cmp cmp dec or je dec mov (bad) cmp (bad) and fwait pop xchg in lahf or mov push jmp jne cmp push mov cwtl frstor leave and mov cli jne jle jmp (bad) (bad) mov imulb cld xor stc sarb xchg aas or ds clc mov lea xor pop dec mov insb pop mov mov mov mov (bad) add and add sysenter pop incl (bad) fdivrs add in xchg mov (bad) mov mov daa push adc cmp lods pop dec inc (bad) adc mov cmp jp pop bswap das sub inc lcall sub mov push push xor aas and fldcw pop push mov mov mov les call out sub xor movl mov sbb xlat and lret addr16 (bad) xor insb lret jo dec test pop sbb and bound xchg jl inc cmpsb mov movsb inc das inc and inc mov mov cmp mov sub sub xor (bad) je or gs inc jae xor sub lods out int iret mov pusha add add or mov add or add adc nop or mov push pusha pop add add mov sbb add stc xor inc icebp rorl imul and (bad) inc out xchg dec push mov daa sub (bad) jl inc sub and mov xchg pop mov sub mov mov or vandnps mov stos scas adc mov mov aad xor incl xchg add lahf aaa push imul push fildl sub pop cmp pop xchg push loopne inc les adc and push and and lods sub lret push test adc mov fwait mov lock fidivrl jns out jge mov fidivr fst jb gs mov xor pop mov inc popa mov stos sarl lds sub mov cmp mov push test mov movsl stos (bad) add in ljmp jmp pop xchg dec cs arpl push mov xor aaa push sub cmp imul mov imul push lcall add dec out xchg aaa jp mull jb pushf pop lret ljmp push pmulhuw mov mov xor in rcll sub fidivl and pop lock aad pop shrb int3 adc imul lea (bad) leave (bad) mov or fwait test jl mov mov mov scas fistpll or mov push sbb sbb (bad) xchg dec mov int jne repz xor scas ret mov lods cmp outsl adc fs add sub mov xchg dec or leave sbb aad loopne pop xor je dec or add mov jbe rclb adc jle xor scas nop or in cltd fdivs je xchg mov push mov inc jne aaa mov pop cld adc inc and data16 xor mov sbb scas sub test stos push sbb jb imul cmpsl and addr16 xor sub adc mov mov bound ja ficom out xchg out lea jnp dec and mov mov addr16 movb xor xchg xor pusha xor inc inc adcl xor mov jae jb stc xchg or jnp mov (bad) mov pop (bad) mov jne xor (bad) ds stos ret jne,pt imul stos cs loopne aaa cld jle aaa movsb mov out cmp mov mov sub mov mov adc inc loope mov stos inc imul dec xor ret xor cmp loopne cwtl hlt mov push fsubrl popf jno inc fdivrl jle inc inc dec stos repnz ffree movsl xchg sbb cmpsb cli imul enter aas jp lret inc push dec fisubr push pop pop mov lret add mov dec mov out push movsb sub (bad) add add add add add bnd cmpsb jp add mov jne lods lea xor std inc dec scas xlat (bad) adc mov arpl mov int3 dec cmp xchg cmp int3 icebp cwtl mov insb test mov ss out (bad) rcrb (bad) icebp mov gs shrl outsb ljmp and adc stos and mov fwait jmp mov mov in jg jbe mov sub int3 inc jl addr16 jb pop adc jb lret cmpsb ss les aam and movsb mov shrl inc sti fisttp (bad) dec loop mov push push dec scas movsb (bad) out or mov push sti (bad) dec push dec test add sub add add add add insl dec inc xor adc fistpll ja sub stos (bad) addr16 fiaddl out add rorb inc mov pop and xchg push pop push imul push fisubl or pop mov xor rolb outsl inc mov mov repnz xchg jmp insl xor xor movsl mov push pop mov mov fmull push fsubs xchg mov mov mov insl outsb int3 ret adc add xor cmp (bad) and mov mov in push push jnp cmp xlat sub mov outsb insl ja,pt repz out jae mov addl mov dec ss inc shl mov cld fisubrl sub divb push xchg imul fistp xor xchg xor adc xlat and add pop xchg mov fnsave adc push and xchg test fist sbb jmp dec add xor push fiadd loopne cwtl add mov aas mov aaa outsb sub xchg dec push lret aaa sbb push mov or ret xor ljmp hlt in cltd arpl test cmp pop loope adc clc push out push and notl pushf add test push xor inc je mov pop scas bound out repz in popf fnop cmpsl sub (bad) out xchg enter mov gs cmp cltd adc push or mov arpl out adc push dec sub gs mov pop test cmp cmp push pop lds pop les data16 out test xchg adc mov mov dec int outsb pop lods push das mov dec divb fnstcw mov outsb add adcl (bad) fmull jle jb xor sbb push movb mov cmc xor js and adc nop pop popf push ret jl cmp ficoml xorl pop adc es adc sbb insb es or xor jbe icebp cmp fnstcw mov imul scas into cmp lods jg fadds xor xchg cmc cli loop je cmp insb add incl or (bad) jmp pop jp movsb loop fbstp xchg cwtl pop xchg sub iret mov bound push mov sbb xor or inc mov ret or pop fidivrl movsl lods push imul out mov and inc mov insl (bad) das dec sbb mull test mov ret sub ss mov mov xchg lret add mov push enter stos insl jge rcr data16 and in pop (bad) fstpl inc lcall fcomps inc lods fwait inc test in pop imul xchg fildll inc push xchg fcmovb int sar or xchg push dec lods push lcall clc xor mov inc inc popa in mov js rdtsc push xchg jmp sar add out outsl hlt xor pop fidivrl mov or imul fstpl mov lods jnp pop (bad) mov mov hlt mov daa fnstsw fiadd inc mov cmpsb ss fistp in xchg dec movsb push cwtl jne into fucom pop (bad) adc iret or mov jmp (bad) mov notb rdtsc jge jg xor incl in incl orb shrl outsb lds lret dec lret sub out jae out jmp aad pop mull mov xchg inc incl and mov in (bad) mov xchg mov jecxz mov dec dec bound test pop xor mov mov stos (bad) and push jge mov dec fnsave xor push lret xchg push xchg fbstp (bad) cltd jae in cmpsb (bad) cmp stc popa sahf mov mov sarl push daa dec mov cwtl mov jl lret popf icebp sqrtps mov popf pop scas lds xchg sbb mov mov pop push sub addr16 and cwtl arpl (bad) je cmp (bad) mov rcll jbe xchg pop push int3 lds mov inc fs jae lahf add jb xor out out in iret mov incl insl and push addb lahf rcrl pop fistpl loopne mov lock std mov decb js or pop mov sarb lea shrl jne xchg mov lret sub sub ret and push lods addr16 cmpsl call scas cli daa call mov jmp paddb mov add das loopne dec js jns incl push lods (bad) fidivrl clc sub aas sub mov imul mov pop sbb (bad) test push and loopne iret sbb inc clc xor inc (bad) je pop int3 shrb xor js and dec jne stc lcall fsubrp insl aad push mov jno (bad) lock lret pop idivb mov add add mov test ret pushf xlat (bad) cltd nop test pop jmp dec (bad) mov sbb dec mov inc jp cwtl idivb jb jb xchg cld mov mov jae in mov adc subl incl jae adc mov fdivrs cmpsl push mov push sbb (bad) mov sub sub bsr xchg mov or add test add add add and mov or adc add inc sub and sub add add mov xor add sbb or and stos add sub mov dec outsb (bad) scas inc mov xchg cmpsl push imul cmp sti icebp dec dec xchg mov idivl dec sarl aam sbb push xchg dec (bad) cwtl and push mov push mov push dec lods bound test dec js dec pusha mov cwtl aad mov pop adc push mov movsl fidivr pop xor jmp sub mov mov adc sub fstl pop outsb mov (bad) pop xchg pop add mov out out (bad) out sti loop lock popa pop push data16 mov jo mov sbb xchg sbb push mov cmpsb gs mov mov cmp das cmp aam mov mov xchg je push sbb movsl fcomp fs scas sub cmp xchg push cltd out jmp sbb mov dec jecxz add inc dec and test scas mov push adc iret pop imul enter mov (bad) outsb xor xor jecxz faddl ljmp dec pop popa xchg push mov xchg mov icebp mov test or lods aam lret fiadd les lret lea dec aad daa pushf sub loop insb mov xor leave inc (bad) or mov jo (bad) ret push jp push test sbb aaa mov add scas lcall jae push out loop stos mov je mov push and jle stos mov dec es or movsl pop lods loopne cmp jno xchg scas insb xchg ret lea aad inc mov shlb aad add cmp add mov out test out call mov xchg jge xlat jle outsb mov dec dec adc pop xchg jno ret pop lods push pop stc jbe hlt mov inc jmp imul jbe and mov sbb jbe lds mov fidivr mov bound sahf lock psrld dec insb aam mov inc cltd xchg ja mov push test mov ja repnz test and sarl adc and mov lahf (bad) mov mov test hlt lret lret inc mov inc ja mov cwtl dec jne push daa popa adc sti test xchg mov in cwtl testb popf lea jae les popa mov loope mov jnp cwtl pop xchg pop push hlt cmpl negl sub lds xor jbe popf xchg cmp aam jge cmp pop mov enter push scas jmp into test out mov jle jp mov loop mov dec push or add rcr mov popf push int3 dec jo imulb test push out jns je lods fildll mov jo stos mov sub test shlb jle mov add add add add jb sub pushf lods xchg addr16 jl in push imul ret imul inc mov in lret in inc mov add fbld dec pop jno jne movsl testl cltd mov sahf lea fstl jae jecxz ret icebp pop repz out mov jg xchg sbbl (bad) pop insl mov adc imul xchg xor mov daa cmp xor imul add add add add add add or add push sub push addl add add mov add lahf mov ucomiss push aam sub (bad) xor in dec fstpl mov sbb (bad) cltd pop aad outsb dec imul jae sub gs mov lahf cmp adc inc and push iret pop mov dec fdivrs in cmpsb out and outsb pop pop pop mov push push pushf lods xchg out sbb hlt inc out mov mov dec and mov in testl push or and add xchg gs and pop mov xchg mov push jb push sbb xchg push pop daa cmpsl aad inc mov inc and xlat sbb inc jae test add cli or mov sarb sahf pop jl push adc loope pop test enter jbe push das jnp sahf rcrb cmp pop into mov test (bad) lret loopne sub xchg ljmp ss cmpsb std flds lcall cld pop cli or jecxz fcoml mov add push fimul hlt inc scas xchg or fstl sub mov push dec shrb dec mov cmp inc lock sbb std ret or out xchg inc out out inc in cmp add dec jl (bad) leave imul push xchg pop push jbe push inc cmp faddl (bad) mov mov push repnz jbe dec dec stc hlt or pusha xchg inc sub cmp movsl cmp sub inc out push jb jecxz imul loopne cmc out sahf mov mov sbb inc mov pop lret mov mov and outsb pop in es jge cmp arpl jg push pop jl cld int3 mov pop out lds mov pusha sub mov sub mov imul clc push pop cld and stc rcr pop mov mov dec outsb mov daa or mov sbb cs jns inc insb or loopne sub push loope push popa mov jle pushf add (bad) and cmp sbb inc push cmc cmpsb pop xor incl add addr16 push mov lea repnz stos mull fidivl push int3 insb pop dec inc outsl lcall add mov inc sbb pop fdivs sbb test fwait inc mov scas mov into mov jae sub pop pop push insl pushf nop cltd xchg jb mov shl pushf mov sub xor iret aas js (bad) adc rcrb hlt pop out je jp cmpsb add loopne sbb movsb mov mov adc dec nop popf jecxz sub movsb or push pushf xchg inc cs outsb out push stos lock mov rcll inc lcall mov xchg pop out test bound out nop test pop add pushf movsb dec mov (bad) testl adc leave lahf mov xlat std push in xor pop js incb xor cmpsl bound fcompl data16 bswap stos mov jnp ss mov xchg loop sub imul dec jnp fdivrs rolb fadd add push ret cmp je inc into mov push lahf xchg mov aas adc mov lret aad pop in imul je cmpl shll and in lods jae gs xchg xchg adc and stc (bad) add dec or test mov test xchg xchg xchg xchg inc xchg push cmp mov adc sahf scas jae mov bswap scas or cmpsl shll jbe push fsubr push cmp and mov (bad) jno sar (bad) cmp sub or inc shrb clc dec fs push stos push les sub xchg mov in mov into mov icebp bound out mov mov out mov mov imul outsl call movsb pop mov pop rcrl sbb fimul jg into dec clc xor mov inc xchg dec daa dec movsl in call inc jl push inc cltd (bad) sub push fdivl rcrb in jae in je out mov add dec out add stos mov jge incl or jmp jns push stc mov pop test cmp stos dec xlat jae cmp ret not sar adc push std adc outsl (bad) lret incb hlt cld ret std adc outsl (bad) lret incb hlt add repnz or lahf lock cmpsl cmp cmp jg push (bad) in cmp pop xchg addb cmc hlt lods xchg adc fwait incl leave not int3 push imul or cld inc (bad) cmp jo sub jp add jns inc mov mov pop shll mov das mov pop xchg cs aad xchg pop incl or scas iret sub in les mov xor mull add xor or nop add add or in insl adc jb clc push add add or add mov sbb xchg lods adc sub out and aam in mov repnz out mov mov dec insb cmp or hlt add mov sub aad (bad) repz aaa cmpsb scas pop stos push sbb ljmp (bad) repnz mov out adc mov sub popf aad (bad) jae jmp test movsb mov and sub or jle cltd mov sub outsb int pop out xlat fwait js rcll jg add imul xchg dec test mov scas add mov aad (bad) jecxz hlt mov mov in je fstpt jp outsl movsl push sub jnp rcrb dec push fisubrl test stos lds push test mov jmp push fimul push sbb (bad) xchg mov mov es cltd xor clc fstpl pop mov int jne adc mov ja adc lock add sbb and rcrb in aam in daa jne les mov inc fldl cli sub cs or aad insl push fwait stos push push mov (bad) mov jg out adc (bad) mov xchg in mov in sbb (bad) stos icebp ja xchg xor dec (bad) push push sub mov pop jo sbb xchg roll mov sarl mov fstpl addb adc pop jmp stos xchg mov add sti enter push pop mov push (bad) inc mov (bad) shrl push aad scas sbb outsb cli mov or sub jbe iret clc nop push lahf mov dec sub jmp jmp mov mov fimul sub orl fst mov dec and sti mov fistp test cmp xlat jno pop (bad) mov loopne adc lret or push mov fwait cwtl mov inc push test mov pop lret rcr sub mov and hlt inc (bad) lcall lret les in lea adc mov jnp mov ja ret xchg loope cmpsb cmp push loopne adc jmp cmpsb dec xchg neg (bad) mov addr16 mov jmp leave jp in cmp dec je outsb les xor cmpsb xor aas hlt enter push xchg mov push xchg mov xchg iret xchg xchg fwait jb xchg mov lcall mov sbb pop loopne cli int ret fildll test ja cmc inc in xchg in inc sub scas pop push enter push fcompl mov rclb mov test sbb mov leave sub jbe fcmovnb push out sbb icebp dec scas xor pop out sbb in lock dec fidiv push das sub in aad mov out dec mov mov add add add jg add add pushf enter add push push pusha add add sub sbb cmpsb and jns lods lods cmp ss out test push lods xor fldln2 xor sbbl dec test inc mov scas mov pushf in mov xchg mov aaa inc cli cltd push jo mov mov adc sbb mov or loop inc outsb iret mov dec daa movb (bad) sarl xor or pop lods inc sub (bad) xor or xor pop and rcrl fwait sub push insl pop pshufw push cmpsb data16 mov sbbl add popf cmpsb aad mov outsb fisubrl xor lds jne xchg test (bad) stos dec xchg mov or pop add movsb push xchg add cld xchg popf rorl cmpsb inc das outsl js fucomi pop cmpsb lcall out pop sub repnz add ja xchg dec add add icebp sahf es mov loopne adc cmpsb sbb int test mov fisub arpl push loop mov stos cmpsb hlt fiadd aaa scas jns fist (bad) mov ljmp in rorl iret add jp inc xor mov adc dec imul mov js inc clc sbb pop cmp cld negb hlt ss jnp inc jae xlat ret js shrl outsl inc imul mov ret fldenv scas jmp mov aad fisttp jns ljmp pop sbb and pop lods pop mov push andl fmuls lcall add mov out stos and jns push (bad) xchg loop popf incl xlat and or mov cmp jns rorb mull and dec mov pop adc jns iret xor adc sub enter fisub or incl cmp cmc xchg (bad) test xlat popf outsl enter jl xchg inc dec xchg dec arpl adc xor inc cmpsl and bound pop out add pop push add faddl movsb inc mov push xchg jnp adc loope imul lods xchg xchg scas inc insb push incl mov rep loop sbb inc cltd ror dec (bad) in imul cmp xlat scas lds jecxz jp divb inc rcrl jne sti adc fcomps leave cmp loopne (bad) sbb das (bad) sarb adc nop pop ret jb lret fiaddl cmp dec mov leave sub add cmp fwait jbe movsl mov cltd shrb das inc mov pop pop inc inc inc (bad) xchg lret das mov sarb jmp cld imul addb pop add cmpsb xchg lods subl push mov std and push xor pushf shll or movl push xchg mov pop in (bad) rclb adc sub lea dec test cli repnz test inc mov addr16 (bad) leave popf mov adc mov movsb jns int add xor pop add ja lods mov mov cmp adc mov sub scas lds or rcll shl jb pop bound in mov sub mov adc gs mov mov mov xchg ret movsb pop mov jg pushf js neg shl (bad) lock lock loopne add ret jnp in jge mov jns push jbe mov inc pop xor test pop fimull cmpsl xchg mov cmp cld fmull rcll cmp incl in cmpsl in lods mov lahf push push lcall (bad) outsb jne in lret out les adc (bad) jbe dec mov jns aad scas add inc std sbb mov add xor sbb mov add jo mov in cmp iret sbb sub dec imul in sbb dec add pop inc xchg es dec out jge and mov pop popf add xchg lock pushf xlat mov movsl mov push push xor out mov hlt add lahf mov bound jnp cwtl scas dec push dec sub cmc xor jg inc push inc dec mov daa pushf popf sub movsl and add inc arpl nop int3 push inc xor inc inc out add add popf stos inc or add add add xchg sub popa les leave (bad) mov mov mov test je mov pushf pop sbb push rcll shrl movsl rorb push icebp mov dec es sti loopne stos stos mov push adc movsl imul jecxz mov hlt pop lcall add mov adc xor pop jnp adc mov ljmp mov xchg pop sub test push adcl lods pop xchg dec fisttp into or dec sub jne mov popf data16 pop je cs mov sub inc mov mov mov mov push push adc sub mov adc pushf push inc jge scas hlt aad imul lds ret mov sbb repz pusha cwtl jne aad das cmp jne lods xchg or cmp lods jp push xchg aaa jne sarb test dec das jnp sub pop leave sarl mov pop ljmp mov cmp add sub imul ffree push push loop cltd adc push sub dec (bad) mov idivl fnsave cmp add daa stos test xor mov aas mov faddp adc loop lods (bad) adc mov lcall xchg stos xchg adc and iret adc xchg sbb pop mov stos (bad) (bad) xchg stos icebp (bad) aad sub out aad loop (bad) out lcall xchg and inc dec aad pop icebp jne and adc adc mov (bad) sbb pop incl sbb stc mov (bad) jns aad je dec (bad) rorl xor and dec repnz cli rcrb add mov in loopne cwtl cld out sbbl dec in sbb icebp (bad) mov (bad) test mov pushf dec leave js addb inc sub das and pop sub pop jno dec fldt daa sub loop out add test fildll sahf xchg adc mov add test stc jbe je fidivr rorl mov int in bound rolb lcall mov aad mov stos fistp push adc shrb mov fsubp dec out jmp push xor jp insb int3 into or mov or or mov and into movsl push stos dec mov scas ss outsb mov add add add mov add add and add sbb pusha add mov js popa jge (bad) cltd mov movsl xor sti jecxz and push cmp lods push cwtl out add loope sti les pop outsb inc xor jae xlat push dec sarb push adc (bad) jl cmp pop icebp aad loop pop std out js sub push pop test sti mov and mov bnd movsb (bad) imul dec and mov jno xchg or adc or scas dec sti jecxz sbb cmpsb jle lret adc movsb les push and outsl sub xchg jno and je into push lods push push stos mov ss xor jb mov xor (bad) popf roll jb add jl jmp stos cld movsl mov sbb imull (bad) push cmp sbb sbbl stos cltd adc insb ret ja sti cmpsb dec jmp scas hlt add and or fdivrl ja lds rclb xchg imul and (bad) lods mov add lods fimul dec mov icebp dec clc (bad) in fst fidiv std ret in push xlat clc cli add enter xor mov and push daa inc scas cli adcl mov cmovp dec cmp test jo adc sub test sbb repnz pop repnz adc lcall mov push dec inc cmpsl ds fcmovbe xor sub scas rorb fbstp fimul enter pop dec iret mov xor (bad) (bad) lahf rorl test mov jg test push mov xor cld xor jb adc fmuls add (bad) imul into and stos mov push call pop dec cmc in add popl sub push fxch pop adc enter adc mov shr add lods sbbl je sub xchg add mov add jns mov xchg push and cmp cmp mov push mov lahf push je test and cmp clc adc popa into div loope in pop and stos adc (bad) pop shll mov xchg mov cmp pop jne out aas divb jle jnp add mov fimull add pop sbb cld cs scas (bad) mull hlt inc andl gs imul push xor insl and sahf gs icebp cmpsl xor add xor pop mov pop fldt (bad) mov xor jns shlb pop into mov push arpl insb sub cmpsb sbb clc data16 xor in ret jg int3 lahf cmp imul sub cs ja in out (bad) hlt mov jle dec mov mov add in and jecxz or mov scas cmp iret (bad) jmp int fstpt push call daa mov adc mov cmc mov lret adc je jp into dec rorb push xchg mov (bad) sbb ficomp das loopne cmp push pop popf fs pusha jnp call movsb or add xchg lahf rcr stos add jns call (bad) pop in lods iret lock les mov mov clc cmp xor adc or add daa call mov jmp scas xchg in inc jmp jae lock repnz or lahf lock cmpsl cmp cmp das incl (bad) insl (bad) fidivrl clc sub aas and dec mov xchg mov pop into dec dec int3 ret les lea mov mov push faddl inc sub loop jnp xor fsubrp lods arpl fisubrl jnp shl js (bad) add mov add mov cmp imul out out out fstl cltd loop and pop pop pusha (bad) mov dec or pop ds and int or insl dec add out xchg sub fdiv cmp out outsl inc mov outsl dec inc mov std insb neg nop pop mov lret cmp pushf jp xchg xchg xchg lea push and lea fstl out negl jle imul jmp xlat cwtl push out out iret cmp (bad) arpl (bad) pop addr16 pusha jo add add adc in xor sub int3 add fwait adc push (bad) in mov cld nop sbb pop jp mov insb movsl cmp and aaa or push jmp cmp fimul mov xor cwtl arpl outsb ljmp (bad) mov pop push jne jnp idivl dec das adc adc dec cmp fucom adc loope jne pop es xrelease pop imul stc and stos mov xor and test dec icebp aad (bad) clc movsl xchg sbb pop mov incl sub (bad) insl (bad) xor mov test sbb loopne jmp adc mov pop inc push pop push cs xchg fstl cmp mov mov jp mov push jae scas sub adc outsb neg hlt mov lods sub jb mov jne cmp ja shlb arpl cs lods push fwait mov dec xchg jo shr adc add mov cwtl inc movsl cmp mov jns cmp xchg lret test xchg loopne xchg dec out push sarl lock xchg pop mov (bad) (bad) out adc sub cmp outsb loopne mov mov xlat lret ficom inc dec jmp idivb inc inc dec mov lcall adc (bad) loope sub mov lock ret out push mov and addr16 lods push push test jl xor push or mov hlt insl cmp inc xor mov pop (bad) xor sahf out mov (bad) pop addr16 push ljmp mov bound add addl mov jnp (bad) xor fdivrs adc stos pop jmp sahf or pushf inc and push jb mov xchg fsubrl inc jmp lods xor mov lcall lcall aad (bad) jbe push (bad) or dec pop cmp add aad testl stos sbbl jbe rcrl pop divl scas ret cs cwtl pop sub dec and cs mov sub dec ds sub mov stos (bad) xor sub add int3 lds mov inc jecxz or repnz mov mov decb fiadd lock call movsl adc iret popf rcll mov push aad jns mov repz jle push dec fadd push jno jl xchg mov inc jmp jb sub cwtl scas in js jmp sbb mov stos adc fwait lock lods push sahf lods pop inc sbb sbb inc mov adc add adc push rolb add add cwtl push mov int3 mov imul pop add jecxz or xchg push push push stos push fldl add sbb cmpsb pop mov dec ret jge rcrl lret push xchg in mov ds xorl scas add adc pop movsl pop jae and fisttpl in popf mov dec xchg outsb and btc inc cs mov repnz dec inc mov sete or dec dec and dec pusha dec shrl jno xchg push cmpsl adc pop push mov or mov pop adc cmp add notw inc jo sbb enter cmp fs mov mov or nopl mov sub dec xchg movsb addr16 xchg xor pop outsl pop test stos jae movsb add enter xor sbb hlt pop mov adc lahf movsb or adc jb cmp sub pushf mov jnp scas repz ljmp mov dec loope popa sahf cmp push stos dec out jne xor jmp mov ds loope jp mov test xchg dec push or int scas pop movsb mov outsb mov push mov aad mov xor and insb cmp pop or fs dec mov outsb inc jg jbe cwtl mov xor jbe sub xchg in sub imul push sti pop jns dec mov out aad int xchg xchg subl jp xchg mov int3 sahf mov leave lea outsb iret sbbl xor sub mov sbb fidivr ret imul mov int3 jbe scas fs sub fist psubsw insb xchg ss xchg fs int3 sub pushf out sbb dec jae jbe push mov sub push xchg scas (bad) (bad) fcomp xor imul scas dec (bad) sub stos lahf sbb push pop pop test push lods scas daa addr16 jecxz xchg dec shll (bad) mov jo stos jno push fcomps xchg jmp cmp sub fiadd std add adc adc xor cmpsl add fldt sub add adc in mov loope mov addr16 fnstenv mov pop jmp rcrl mov jmp pop aam sbb jecxz cmp in dec sbb int3 mov jg inc out in lds xor es aaa inc lods clc jbe loopne gs movl fidivr cmp rclb nop pop mov dec cmp sub cmpsb push xor sbb push dec sti or into in and sbb addr16 int3 sub pusha ficoml xchg fs movsb pop push mov call cmpb xchg mov cmp lods stc js adc mov outsl inc mov dec push mov and mov call les outsl vpaddd rcrl in push out cld daa push sbb push cmp notb pop cmpsl xor dec inc xchg stc push xchg xchg ljmp je frstor cmp repz mov push std bound and jmp sarl outsb add jnp pop xchg push popa inc icebp xchg sub xor mov lahf xchg mov int3 sarb xchg pop (bad) xor dec (bad) mov inc mov leave lds mov addr16 aaa loope lret fisubrl sub incl loop incl lock stc (bad) js inc push and pop jae pop jmp sar sub add jbe test rclb adc movsl out fdivrl cmp pop data16 decb inc hlt lret inc mov pop (bad) cli pop out hlt push mov mov aad out pusha jbe fimull test push scas fnop outsb mov push sbb je cld sub rorb pop pop hlt add popf push sbb sub imul ljmp xor inc rclb pop fstps sub dec gs xor stos ja xchg and bound icebp sbb shrl int cli inc in repnz out out jle jns outsb popf sarl xchg or jmp mov repz push xor int test xchg ds fwait andl sets int mov sahf or push in xchg cmp push rcrl sbb and sub or jmp insl jne lahf daa cmc cmp outsl fsubrs aas cmc mov test dec add lahf push into xchg (bad) xchg incl pop xor call cmc mov test dec add invd stos ss in dec xor fdivs sar cmp sub (bad) mov pop cmpsl ds (bad) fnstenv loope add xchg mov fdivs ret iret mov adc out or icebp pop inc xchg out jg in dec clc mov inc js jle cli xor sar xor push shll lock bound jae fisubl add je xchg pop push rorb daa sbb pop fwait mov lock pop add add rclb or and adc or negl dec inc mov xor int mov inc and lret outsb dec sub fldcw enter lcall fadds js jb and call adc nop sbb sbb or jnp stc shll dec pop push test xor cmp push icebp and xor jecxz add and data16 xchg popf ficoml or lret mov inc lds pushf push adc scas inc iret or jne mov mov and ficom inc xor cmp mov data16 imul dec mov lods sbb leave cmp and arpl dec data16 mov mov loopne nop test (bad) pop nop adc cmpsb sbb ja test sbb dec and mov imul (bad) ret fistpll mov imul (bad) (bad) mov cmp jne pop xchg (bad) or rcrb fmull jg (bad) stc stos fs xlat mov dec push (bad) xor xchg pop push int aad mov xchg inc (bad) out stos and dec mov fidivl push lcall outsb or push xchg enter addb (bad) addl xor push mov jo sub jns outsl addr16 ja repz test mov jmp mov les daa pop stos mov push push sub sub jne ja cs pop repz jbe sbb mov jnp stc push fwait mov (bad) lret imul (bad) sub aaa (bad) mov stos aad xchg stos aad pop nop or add pop and mov xchg fs cmp xor mov sub inc mov jl fstpl push imul cwtl daa mov cmc test push inc stos notb test stos stc add stos test in add cmp mov cltd addr16 sbb rcll adc mov mov cld bound cmp inc fstp dec cmp push mov pop jb shll jge jl call push cwtl out lods fiaddl adc push jne mov adc add (bad) in mov sub cltd or or in loop mov es (bad) loop mov or in movsb cld add iret int fildl pop mov jb and in and sub in nop int3 push cmp adc mov push mov aaa add and test addr16 ja mov jb cmp fnsave jecxz fwait lcall mov push orb ja fst or mov movl stos bound mov aas jle mov movsl push (bad) fnstsw push out pop mov and sarb add sub inc adc add mov add add aaa addb add add add add dec (bad) cbtw push jno mov bound lods push xchg mov (bad) repnz or push mov (bad) and sbb inc xor andl sub add in sub sbb cmpsl outsb leave divl movsl jns imul test inc lahf mov cmpsl xor (bad) xchg dec lods inc push scas dec push fisub fdivrp mov mov rcrl stc add loop sub mov xchg adc enter sub test mov stos ljmp add outsb and mov add test aam mov jbe mov (bad) movb fwait jmp loop xchg or jmp sub push test test jp xchg loop pop loop xchg data16 insb stos push aas mov cmpsl mov (bad) mov gs inc (bad) jb cmpsb sbb mov xchg (bad) and pushf xchg add jge sbb dec xchg jge ficompl mov add movb mov call sti ljmp push and mov cmpsl xchg fidivl xor fwait mov xchg xchg cmpsl pop jecxz (bad) insb movsb outsb cmp cs fs out cs and mov test je mov or mull (bad) lea inc cmc jae out xor cwtl xlat jle call ja dec scas inc xor sub xlat xor mov (bad) call incl sub shrb imul movb sub mov faddl xchg pushf lds (bad) (bad) mov jns xchg pop lea enter in imul push (bad) popf dec lret cmpsl add incl sbb pop and dec call mov imull gs cli cli popa push and das cmp lea sub xor mov push pop loopne inc push and arpl lea scas arpl add shlb js add fcomip mov mov mov cmpb cmp int3 in int3 rcrb mov scas jmp sbb push jbe dec sub enter push (bad) dec imul cld push fs adc xchg dec lret or idivb fwait jnp sarb inc push js pop jp aas aas cltd incl pop incl xchg insb clc hlt (bad) jl jp mov mov pop (bad) rorl imul add movl push shll imul test push popf xorb mov pop nop incl mov jp bnd rorb adc gs jp addr16 sub repnz push ljmp dec incl icebp pop pop lock xor xor jmp stc inc addr16 les jnp jmp clc mov jp add jo dec (bad) lock xchg imul roll bound imulb daa faddl in aad mov sbb stos sub xlat aaa movsb pop mov negb add xchg push insl or add incl xchg pop mov insb pop (bad) mov mov mov mov mov popf sahf stc pop test rcll dec lds sub cmp pop inc cmp (bad) add rorl mov popf jp popf (bad) jo xor dec inc mov cld repnz clc mov mov cmp lcall and jmp (bad) mov call bnd repz push gs ja repnz adc std jle mov icebp jle pop mov leave lds int xchg cmpsb push push jmp jg loop mov sub icebp jle sbb jp (bad) mov lret incl mov je adcl jo push jecxz addr16 inc push pop mov lods push stos jns sbb mov int imul int cmc jp jno jns mov ljmp int3 pop scas jl les addr16 cmc mov jno push jbe xchg xchg push data16 add dec dec inc test hlt mov lahf popf lds data16 addr16 cmpsb das lret negl lods out xlat pushf jmp jmp psrld xor adc in mov lods push xor outsl mov mov je ror sbb clc pop iret ficoml fildll mov mov and imul ja pop ljmp fiadd aaa sbb dec dec inc pop icebp arpl js sahf out fwait loop lret in push pop mov adc adc push nop add add dec adc add add mov mov mov or (bad) mov add add mov cmp adcb jo and push push dec int mov out cmp adc and (bad) cmp adc rorb es inc shrl cmp push mov pop pop loop test push pop or icebp dec and push cwtl cmpsl dec push test ss ja jnp ss mov pushf int3 dec dec outsb outsl xchg out rorl test xor jae fist cmp inc adc stos push cmp test imul lea mov xor les mov mov fdivrl or dec aaa gs (bad) push push imul inc dec mov jbe mov inc loope das jbe jne mov adc jle icebp add jecxz fldenv ljmp dec push aad jno imul int3 enter movsl fisubrl js sub dec sub and ja pop xor (bad) aaa rol mov dec cmpsl push xchg push xchg fnstsw loope lods sub call cmpsb out inc sub dec shrb xor into xchg inc faddl push leave (bad) push pop jbe enter dec movsb call out je movsb roll push pop jno mov (bad) cs cmpsb sub lret mov rclb pop mov mov inc push mov clc rclb mov jo jb xor pop ret ljmp lds fucom or xchg mov xchg jae lock inc movsl cmp jl sub es outsb sti loopne mov add lds loopne fldl movsl pop xchg ret jb push (bad) mov aas xor mov mov scas push ja mov rcrb les mov test add push push mov popf push add ret jno pop clc and sub outsl lds inc push adcb mov jns mov and js inc mov icebp int3 cs leave inc daa iret into add mov sahf lahf cmp div stc mov mov pop xchg mov cmp stos (bad) xor mov inc mov aad mov mov sbb lods imul stos push jnp cmpsb mov rcr add lret cmp js and adc xor out movsl jmp fstpl adc (bad) push add mov mov int ss fidivrl push icebp fisubrl lcall push mov jp es scas sbb mov push ja mov lahf fidivr inc mov add or add push add push inc add dec add movsb mov sbb shlb xchg stos test xchg mov dec scas and inc xor mov mov add mov shll sub daa push adc (bad) aas addr16 push cs nop dec jo push into xchg rolb cmpsl and dec fsub movsl push test sbb out sub flds xlat mov in negb jne out sbb fimull mov xor pop push push in sub imul ficoml lret mov jb push mov mov fisubl test add cwtl xchg repnz push cmpsl add imul sbb or cltd rcl add imul xor dec mov cmpsl push mov data16 repz popf jge loop in cmp dec test add sub inc dec (bad) xor setbe xchg pop push (bad) cltd ja fidivr mov cs pusha push cmp mov mov xchg xor cs ret dec (bad) (bad) mov add jnp das mov cli push int jns mov test les les loop jo xchg test test dec mov lock cs pop mov hlt subl mov ljmp sahf popf pop rolb jle in and sahf es gs inc ret or mov cltd scas mov push fdivl and jbe addr16 push pop inc movsl jge dec aad jnp addr16 xchg negb arpl jo jnp and roll and add outsl xor jo scas or cmpsl adc (bad) movsb sub mov push test xor add sub stc jae jae xchg push sub int sbb mov out fmull ret add test shrl mov (bad) inc push lods ficom xor aas cmp cwtl fdivrp add and std ds cs loope mov add (bad) scas inc cli xchg ja and pop fcmovnb fisubrl pop in rorb adc iret dec jl stos ljmp int mov sub jo out orl adc mov iret inc xchg fs sahf adcl push add xlat dec aad adc xchg mov cmpsb xor mov imul xor lods pusha jns fisubl icebp adc push jg loop in (bad) and mov int mov xor xchg dec mov mov (bad) jno dec jnp pusha int3 fsts xchg sub fs jecxz fwait mov inc dec repz xchg sbb xor xchg pop cmp push mov shrl insb les push push stc add mov push push mov and and inc add adc mov push cmp call out push aad jne jmp sbb std xlat inc shrb cwtl xchg add add add loopne addb dec lock jmp out loop inc outsb adc add pop nop push fs clc cli pop ds cwtl scas mul repz push rcll fldpi push div add xchg test pop clc lds push scas inc and push ljmp pop je push push nop roll cmp cltd cmp jno in pop cmp test (bad) fdiv lea jnp rolb lret lods jnp movb mov inc repnz outsl sub mov lcall jg (bad) ds sub loopne jae jge gs out pusha cmp jg int jmp in nop (bad) ja rclb sub pop (bad) arpl pop aam shufps pop fildl inc aam push mov xchg in fnstsw mov push adc mov popf lahf cmp mov inc xlat imul inc movsl sub loopne dec (bad) push mov stc jae push mov insl pop pop dec adc sub and jno cmp les mov repz mov sub test sub es popa movsl in push test out xchg pop and cmp lds je cmpsb or lock mov (bad) popa xchg shll mov hlt add cmp dec pop cmpsb jl mov lds adc ljmp es sarl mov rorl push cmp adc jae loopne ret adc jnp pop sub push xchg push add ret or inc pop scas das mov out clc int roll dec inc push add jecxz rorb lea leave inc movsl cmp cmp test jl or fdivrs sub sahf (bad) fwait mov adc loop dec mov push mov sub push sbb pop push mov inc leave dec or pop and fstl push movaps clc je push imul in rolb adc outsb mov mov fisttp mov dec mov add cmp inc loope jmp mov out orl arpl stos out jnp sbb and stos xchg dec pop mov push stos in mov ljmp push movsl xchg popf sub lcall sbb fisubr dec test lahf fs lods adc mov dec sti inc mov xchg lds insb fiadd mov pop mov mov nop in push inc push mov movsl sbb jbe fs rcll icebp dec inc cmpsb sbb push inc stc rolb add mov sbb cmp or enter add add jbe mov add add add add adc and sub mov sbb sub mov dec aas mov push sub movb add test lret fadds fiaddl xor popf push sti cmp jnp mov mov cmc dec popf scas xchg mov fdivrl loope pop loop fucomp mov xor rcl cld arpl dec push push push popf (bad) dec push test xor mov das in mov dec mov xlat sub js jnp fistp lods ficom pop es loopne dec xor xchg mov mov push inc adc jp in add mov cli (bad) xchg dec sub adc pop sbb int3 int3 fcomi pop pop fstpl sbb inc jne repnz fwait stos js and stos lahf and xchg mov mov pop pop sub pop xchg movsl jle int3 leave ficompl jg jne cmp imul stos adc stos cwtl sbb outsb inc cltd test sub sub cmp jno add das mov jns loop dec mov mov arpl loop jp in pop dec xchg inc mov push sahf ret shrb xchg mov pop shrl xchg aaa cmpb out xor and lret syscall stos xchg push cmpsb sbb jmp outsl push xor mov sub mov pop test add scas in das or loope or pop adc jbe fidiv fisubr xchg lods lahf ds jle pop out movl mov sbb dec js mov or push add inc cmpsl xchg int mov imul xchg jge gs test mov adc ljmp add in and sub test idiv add fs clc or subb dec mov loop addr16 in aam xor loope mov push in add dec jae les mov push cmp lea iret (bad) fidivrl mov call mov pusha gs sub push or mov scas pop (bad) jbe test push add jbe inc rorl mov inc mov xchg inc test push mov in add arpl cmc fsubrl fmuls movsl sub movsl jecxz pop or rorb cltd mov out pop fsubrp movl pop cmp fdiv adc lea divb lret jb (bad) push cmp daa fistp jns push out push mov insb lods push test xor inc pop mov inc push mov push cltd cmpsb cmp sub dec mov mov sub push outsb into push aad cmp sahf push rclb stos stos sahf loope clc pop xchg inc xor jbe ja xor (bad) scas mov lahf gs (bad) add ret add dec leave lods dec jbe dec inc popa and lods aam out repz rcrl or mov in pop aas jge dec ss dec inc fisubr and pop stc push mov add add inc jbe mov pop stc mov nop xchg adc lds pusha inc mov xor push inc and sub stos std pop mov lret inc scas pop mov push leave jae in outsb mov and cmp xchg ds repnz xchg cmpsb pop push or adc ljmp rcr xchg xor call in sbb rclb mov cmp test pop or or cmp cli daa and mov cmpsb (bad) inc jo nop in and cmp and xorb mov mov xchg inc inc dec mov push cs dec rorb in std sarb cmp push adc jns inc xchg (bad) ret jb xor push enter (bad) and xlat or stc or ljmp out mov dec repnz xchg mov cmpsb or inc loopne mov xchg jnp addr16 push shrl punpckhbw mov push outsl jnp sub movsl js das inc mov or adc adc call mov shll jmp mov xor xchg pop jmp (bad) fisubl pop jne stos mov push out pushf dec xor cwtl mov clc fistpll mov das xor and xchg sub rolb dec cs add cwtl cmp out cltd adc mov lret rcrb xor rorl je mov scas rolb clc dec roll push cmp rol add cmp bound rcrb icebp cpuid (bad) aaa cs test test add mov cwtl and mov daa adc gs stos mov sub cmp out xlat sub mov sahf mov inc lret jp (bad) cmp cs addr16 add cmp fdivl fcompl jne (bad) mov mov cmp es dec adc sbb dec or lods dec jbe mov dec push loopne ja mov adc repnz sub lret orl push loop adc and mov ret jb jl push adc adc pop out in popa mov jmp leave jp ss inc pop jne and mov stos mov inc (bad) repz aad je outsl jecxz mov jo jns push adc cs ret in in cmc jne mov ficom cmp mov outsb scas jnp mov stos shr add hlt lret mov pop mov fidivr push mov sub subb pop dec pop cmpsb sbb lahf mov pop lds mov add add push mov sbb add add outsl mov add add or add adc sub sub add add imul cmc ret shlb ret mov add pop adc adc add add add add sbb scas mov sbb inc int adc pushf dec push aaa fcomps jnp nop test xor lea xor xchg xchg dec out aad dec xchg jb xor fsubl adc imul mov jno and (bad) fwait shll add sti movsl dec (bad) rcrb jo cs xchg push (bad) jno das cmp (bad) scas adc mov dec imul sub je fsubrs mov test mov stos stos xlat or adc cmp fisubr sub pop mov jmp cltd xchg (bad) mov xchg mov pop out add mov xor jl or cld fsub xor imul jecxz leave jae pop cmp notl push jecxz adc mov fcmovnbe fdivl scas sbb fisubl pop icebp in push jp (bad) pop pop js rcll xchg movsl imul mov and lret sbb repnz test mov mov leave add scas (bad) mov test nop mov test sbb and inc dec call xor int3 aaa and (bad) stc jp mov jnp testb enter inc inc pop sbb gs sarb xchg andb popa out mov divb mov aam mov add pop hlt testl push jbe scas (bad) cs jo push lahf xor mov stos sarl inc adc jbe mov in in (bad) shll nop mov mov stos adc mov cltd aad adcl dec mov jecxz mov jb fs mov adc lea cwtl insb dec and and xchg add das mov cli movsl cltd sub cld and cmpsl add movsl xchg xor cltd pcmpgtw out ficomp (bad) jo push pop jne fcomps hlt sbb addr16 pop sbb sub push data16 cltd notl push pushf les cwtl mov stos test outsb mov lods mov and xor mov idivl nop mov jl hlt iret push jmp inc ret int3 inc mov dec outsb pop pop mov sahf scas je xchg mov push push outsb scas jns dec push and loopne lds insl push fidivr stc mov sub setg cmpsl xchg add mov (bad) mov mov clc je cmpsb and adc imul add or inc aaa sbb dec ret mov dec add push leave push rcll fs mov add pushf test dec jge push push inc lret or jecxz pop pop push adc int jmp sahf repz xchg xchg stos stc jle or push icebp mov push xchg ret out pop push sub fnstcw pop or or sbb cmp dec and push or pop and and addr16 or sub loopne outsl and mov adc out pop adc add inc jp and ljmp sub add (bad) dec insl mov mov lahf jp add mov inc inc and xchg imul sub push rclb roll loop adc aaa lret (bad) (bad) mov popf adc bound test lret pop jo sti (bad) leave pusha mov pop sarl leave mov stos cmpsb sub lcall mov adc push mov cli or xor sub nop pop stos test jno fisubl push stos pop jl sub sub dec lcall add mov fldz xor adc enter xchg jbe call test cwtl bound out add xor cmp lods jnp push sub (bad) dec mov outsb xlat xor pop fistl adc rolb sub icebp dec ffreep subl stc rolb outsl cmpsb jge inc inc loop mov cmp subl scas jg pushf push mov adc mov jl testl (bad) and inc in and mov cltd sub shrb aaa repz popf repz mov daa jp ja stos arpl mov dec adc jg add loope sub scas js jnp pop fisttpl test dec mov jp adc add mov test cmp mov xor jl popf leave fsts js pop jecxz xlat mov jmp out add add test int3 sub mov xchg (bad) mov jb lods adc imul cwtl stc dec rcll jo jmp cmp push jmp stos mov jle in xor dec push mov outsb test lret out mov in into push cld pusha std sahf sub aad mov push push xchg pop outsb push je mov fldcw (bad) loopne pop imulb lret mov out mov (bad) lock out dec push pop fstps sub movsl jmp mov push std pop push xor outsb orl push push mov test mov pushf adc add add repnz add jg pavgw add mov cltd and dec add pop data16 cmpsb push lea add xchg mov add and add add sti test cltd xchg dec test faddp and sub fildl sbb leave mov fs jecxz adc adc cli dec iret jecxz in xor rolb and and add add add jbe push cmp add mov pop (bad) and push mov xchg push mov ljmp (bad) daa push push jmp jecxz dec push push mov (bad) mov movsl jge nop pop pop or cmpsb in mov sub add movsb jecxz dec aad mov sbb mov into push xor sub out inc scas addr16 int3 mov mov mov pop sbb dec icebp xor sub (bad) cli scas xchg jno mov add fisttpl dec lahf inc (bad) int xor cmpsl adc sub add jl or es out (bad) cs out push es in bound sbb sbb xor add inc inc pop adc inc xor or or mov ljmp or or push and xor enter inc mov and xchg dec xchg xor sbb cmpsb push jo jp cld add mov and add cmp xchg dec repnz dec out jle addr16 (bad) outsb jb pop push mov test xor ja movb jb imul stc fnsave subb stos ret imul push jg xor jno lods shlb push test mov sbb enter les inc jmp or add xchg mov faddl fldcw fsubrs mov dec clc loopne sub mov inc ret out xor jmp rcrl lock push outsb cmpsb ljmp cmp fidivl push cmp popa cld jmp add sarl and sarb ja mov sub adc out xor push push push cmpsl xchg or test loop add push jb inc subb clc mov test (bad) pop or fcompl pop or sub push fisttpll jo hlt dec xor iret setg leave xor mov outsb (bad) scas adc push ss jb outsb cmpsb pop mov es icebp les test icebp in mov push test not mov out inc fldpi sbb fstl xor cwtl fsubrl mov in scas (bad) cmp mov xchg push mov pop and inc mov ljmp pop (bad) movsl in out pop push leave xor pushf xchg pushf (bad) mov rcrb cld push xor cmp xor mov lahf dec and shrb mov stc fidivr jns adc out lds mov pop fistpl lea fiadd out mov les test imul xchg xchg test sbb mov cltd addl cltd dec lock ja out in fiaddl cmp push push xor fisubl xchg lods in mov mov sbb mov xor mov test xchg xor int3 mov ja mov mov cmpsb in es loope test push cld mov dec cmp cmpsb or xor sbb in cltd andl cltd nop lods jo dec push xchg inc stos push cli lds jb and pop xor pushf mov jecxz scas (bad) ljmp in or and xchg not push mov inc lret stos push adc push (bad) insl lds adc pusha xor add mov mull inc inc dec sbb int out xchg cmp jp sahf mov mov ret pop adc cmc out test sub pop out push adc and mov lahf xchg mov mov mov out cmpsl push aad sbb and stos loopne scas or push mov in xchg cltd lock lret sbb xchg cmp test push or mov jp pop mov mov add push xchg insl sbb push fistl pusha mov ds push jno adc shrl fstl and inc stos out mov cmc pop sub test repz ljmp sub mov cmpsl push out sbb out cmc out popa ja in (bad) mov aaa adc dec rcll in push inc fucomp xchg mov push test xchg fiadd enter mov adc rclb and mov cltd lcall test lret rorl ret jae mov stos mov std mov push sbb stos jmp mov cmp imulb jns fstl repz sbb pop loopne and loope add outsb pop lock (bad) stos sub loope (bad) testb addr16 xchg jp dec imul lods cmp (bad) jmp fistp xlat adc sar sub mov ljmp adc ja scas (bad) fcoml imul sti stos lods aad jbe inc rcll mov sahf shll mov push add cmp pop test dec inc add pop sub mov bound sub sub add add push addl add add add push inc xor jae mov incl pop lcall push mov ret test test fs frndint xchg and cmp jmp adc leave ret loope aad js sti test test daa mov fisubrl adc stos sbb add add sti movsb addb pusha or and and hlt lea or scas int stc inc sub xor int3 inc jp mov and inc sti or out ljmp cmpsb push inc in out dec fnsave inc fwait stos aad mov aaa cld std push sub outsb (bad) push adc nop loop pop sub inc jbe imul in mov or fstpl in jle leave sub mov sbb mov stos sahf pop or mov in xor jne outsb add movsl push mov xchg sbb clc or xchg mov repz outsb sbb pop jnp pop dec sar (bad) dec ja xor scas loop cwtl jns mov cltd sub pop inc and add fadds aas out js aam push in push int3 jbe sbb ret stos jbe mov or adc pop xchg dec jo out dec inc add ret add stos push outsb ja add adc call ljmp cmp push imul push popf mov xor aad out inc les xchg mov dec (bad) jae das or fdivrl je adc jb jo push or jbe or mov inc jbe fsubl push or cmpsb cmp xor test jne sbb sbb mov call test dec mov test fcoms adc xor mov inc gs mov hlt sbb lock mov repz mov fwait lock pop cmp repz or ljmp push pop mov push sub les adc xor fnsave sbb inc aam pop fwait xor sbb in add dec xchg sti daa sbb xchg call add or loop and addr16 (bad) mov in add out hlt pop mov (bad) pop push int jno ja mov bound jb xlat icebp xor int xor jecxz in fs push leave xchg je in (bad) mov mov sub xchg lock add mov nop orl pop mov sub mov popa and shl push and lds xor mov mov or cmp sarl imul imul xor and data16 mov and cmp arpl imul lret pop xchg xchg out aaa popa rolb out adc cwtl ficomp xchg push jo or bound jle ljmp mov hlt addb push inc push push test fs xchg add or arpl cs adc andb xchg aad icebp ss sbb lret leave jno sbb or clc add sbb cmp pop push cmp lock cmp pop mov push jle,pt mov test jge jge rorl jno inc mov loop dec push in jmp dec fwait jg fcmovu (bad) jne dec sbb push test cmp mov leave int jle dec test imul jne dec outsb bound jge mov fbstp sub sub dec lcall mov cli imul pop fstpt xor cmp jbe pop les xlat or rcll mov dec and imul xchg xor roll stos lock int3 mov xchg push mov loope stos pop jns aaa lcall cmpsb sub and sub cmpsb cli ficomp incl mov cli es ja and or sub jmp stc jecxz mov movsl sub scas rclb inc adc popa dec out sbb inc lods xor leave lahf mov xchg mov pop mov loope andb sbb jb push push inc sbb enter aad in repz xchg push xor movsl push push jo aad cmpsl pop push jmp adc ss sbb pop icebp leave cmp (bad) mov push dec stos dec in call adc xchg (bad) iret mov and fidiv inc xchg rorl mov imul pop and adc dec mov (bad) xor scas ja fwait icebp mov mov adc aam lods inc insl push aad fnstsw icebp neg sbb stos xchg lret cmpsb les push movsl shr cwtl sbb (bad) dec lret rol out scas mov push sub cmp incl cmp push xor cs sbb loopne add dec lods push xor xrelease mov in xchg jl addl xor cmp add sti cmp cmp mov add xor std sahf shl mov (bad) fldln2 push jnp fiaddl xor repz mov fldln2 push jnp fiaddl xor repz mov fldln2 push jnp fiaddl xor repz mov fldln2 push jnp fiaddl xor repz mov fldln2 push jnp fiaddl xor repz mov fldln2 push jg fiaddl xor repz mov fldln2 push jnp fiaddl xor repz sbbl popa out cmp inc data16 xchg fldln2 add iret push rol jbe inc sahf in testb addr16 out iret push std sahf shl sti cmp iret idivb lahf in testb js mov (bad) cmp jmp outsl mov xor xorb popa icebp sahf iret push add ficompl add push (bad) xor jae sahf rcrb add out cmp inc data16 push jg ficompl addr16 jp cwtl cmp iret push sbb xlat out cmp inc insb add in testb or sbb add push jne call addr16 (bad) jnp mov mov ja std add idivb imul (bad) and add js xor ds (bad) mov call xchg mov pop daa sti mov hlt iret xchg add stos pop mov adc xlat hlt add ja std add or addr16 dec push idivb lahf in testb jae sahf shl sti cmp iret jbe inc sahf in testb in push jnp fiaddl cmp xchg sbb repz sahf shl sti cmp xlat push or dec push push aam stos lods (bad) (bad) (bad) fwait icebp into iret imul ret mov mov sti pop jns movsl sbb mov jne mov push loop adc mov cmpsb (bad) xor pop test ret cli out loop not mov (bad) (bad) mov xchg sub mov das scas (bad) and clc stos push jg incl push pop fiadd in sti int3 mov xchg push pop cmpsb popf mov fcomip or sahf stos addr16 sti aad rcl pop adc pop xchg in push repz sti iret loop shl inc scas mov add fcomps adc push int3 jmp xacquire hlt lahf ljmp in in mov or enter xlat sub (bad) sti mov cld mov incl and sbb push fdivrl shr cmc in incl gs idiv push pop xchg push incl in in lahf ljmp fdivrl adc stos push les (bad) pop lret incl xchg dec mov lock jge sub repnz pop (bad) pop mov dec negl jne jle lret incl jae push sbb xor xor sub xchg cld les pop jns push incl adc add test leave mov ljmp pop or add test pop or add test iret addr16 icebp jbe or scas cld mov incl and sub xchg aas fcompl out incl stos add inc lods jg lahf std cmpl movsb test popa jg or fldpi sbb pop lret pop mov pop xchg scas inc test sbb daa pushf inc stos aas sub pop fnstcw sbb lret les jg jg add cwtl fwait push repnz aaa cld popf push std fwait std dec popf pushf mov incl cmpsl (bad) add sbb sub mov fisttpl addr16 incl cmc add pop jmp aaa std incl cli nop cmp test push stc cmp push jns jne mov aam (bad) movsl or cld mov idiv xchg push xchg cmpsl outsl mov jg jg add cmpsb daa push scas sub std fild leave inc mov fist and fisubrl stos repnz mov add mov imul sbb adc mov outsl lret jnp lahf pop hlt aad or mov jg fucomip stos clc adc and or cmpsb pop sub jg xlat lock in cltd pop lahf out incl aam fisubrl sbb fmul idiv add jno jp std pop jle incl cmpsl add das adc and (bad) pop imul mov aas das and (bad) add sbb lret leave fbld in incl ljmp jge std dec sbb inc movsl xchg xchg inc sti push lahf mov xchg test push lahf mov xor lret mov mov add lret stos mov popa incl dec pop jo jo scas cld mov (bad) std mov in pop mov div cmc and inc loopne xchg dec push enter aad cmpsl rcr idiv add or in stos pop movsl leave imul cmc and loopne ljmp loopne jb jp clc jge incl mov stos push adc (bad) test shl enter lea popf pusha pushf test jmp cmp dec scas cli outsl cmc and mov ret push dec jl jecxz gs dec out jg out cmc es fnstenv xor push in jo and sub jmp xchg cli pop lahf outsl incl rcrl push std aas (bad) pushf push in std add xchg dec jno jae negl mov incl std cmp leave mov add xchg (bad) out insl or mov stos xchg stos addr16 incl push inc jns inc incl xlat std aas (bad) pushf push aam outsb jb xor loope stos popf dec setbe outsl stc xor out in lahf in idiv add jo jb mov and cmp idiv add mov jg pushf das cs imulb cmpsl add adc outsb cmp add jg incl rcll incl mov loopne in les inc mov jle (bad) mov sub shr xchg loopne sarl push lret add mov scas ror incl pusha out rolb stos mov imul pop jle jg xchg dec pop xlat in pop jle jg sbb insb xor aam call jle cmpsl out xchg cmp mov fist mov jecxz jecxz xchg xchg xchg sti pop incl in aas jmp enter (bad) adc xor sahf xchg sub leave loope in negb cld (bad) std cmp jb xchg xchg test pop mov mov outsb lock lret stc psubd in out mov std icebp pop out ja (bad) stc ficomp imul lds leave dec or test pop mov pop out pop dec jge or sub dec jle ja sti rorb jmp dec out push xchg xchg (bad) sahf jg loope ja mov fildll cli jb add les out xchg std cmp cmpb pop ss in rclb incl cmpsl xor (bad) mov incl and add jae cmp jb and ds pop stos stos xchg test sbb mov int ret decb incl xchg incl cmpsl add xchg mov xor aam loope mov incl dec push jl sub incl dec pop push mov xchg cmpsb push mov xchg xlat push pcmpgtb daa clc inc fdivrp add add psubd stc jp cwtl fstps ret (bad) pushf btc cmp jl outsb pop sar add lret pminsw xchg dec jle jg incl push pop rorl scas pop lods xor (bad) push movl test incl aam jae scas xor mov in dec stos push mov dec cmp imulb (bad) or cmpsb inc pop in incl idivl mov cmpsl cli dec cmc inc jae lds inc and xchg out imul std es mov outsl jbe loop cmc insb push js js sub bnd xor mov xchg incl in add (bad) and popa sahf pop scas adc das popf js pop leave lahf (bad) fimul stos cmpsb adc add cmpb (bad) jno ds xor jg incl outsl clc test dec xchg incl das (bad) fcomip add push xchg sub ficoml adc icebp jl iret (bad) and push pop out jg incl mov fdivs add dec aad inc xor sbb mov jmp add cmp incl mov aam jle repz clc scas stos loopne inc fldl2e pushf or mov jo dec fnstsw mov inc (bad) push push ja sub push pop mov aas int3 incl mov push mov sahf pop incl mov aas jbe stc lret ja mov popf arpl jg cld push pop dec mov jmp cmp loop lret mov mov jp sub test mov jg or int jns lds hlt sti cld xlat mov mov movsl dec scas mov push mov ds stos jno dec sub stos ljmp mov sti sarb fcoml (bad) and decb std cmp push and (bad) repz cld push (bad) cli shrb xchg daa loop into mov adc adc push subl adc dec dec outsb xchg cli (bad) dec lds call sbb sub jae aad lahf ds jge aas cmp (bad) cld push push fisubr loop ret add (bad) flds iret adc pop adc add add inc add add add xor je add add add add (bad) (bad) incl add pop rolb sbb dec inc dec and or add lcall add add mov add push gs imul add add push add gs cmp add add inc outsl outsl insb add add add out incl adc add pop add add add add push add popa jo xor push add add push out out add add add add push add gs cmp add out out add add pop add add add xorb push add gs add add add add or add pop and pop add incl inc add add je xor and sbb sbb adc add arpl arpl add jae adc add add add add sbb popa xor sbb add add add add add add push add gs add add add or add or add sbb add aaa push add gs add pop or add or add sbb add cmp add gs add pop or add or add sbb add cmp add gs add pop or add or add sbb add cmp add gs add pop or add or add pop add xorb push add gs add add add or add or add add cmp add jne arpl outsb add add add inc arpl outsb add (bad) incl and add cmp add jne outsl imul dec outsl imul sbb incl das add add jne push jo jae add add add popa outsb and jae ja jb cs add add add jae add add add add or insl outsb jne jb ja add add add outsl ja and jne outsb je cs incl xor add inc or insl outsb jne gs arpl add add and je jbe and push gs jb add add add add jne xor adc add sub add add add add jne js je adc or inc js je dec outsl fs add sbb incl add add add add jne imul add gs pop (bad) incl xor add inc or arpl jae jae add add add popa jae and outsl insl and popa gs add pop add add add add add jne gs add add add add or inc jne jb arpl jne add add jb arpl jne cs incl sub or inc outsb jb insb insb insl outsb je adc or outsl insb insb insl outsb je cs incl add add add jne arpl insb popa jb add add add push jae add incl add add add add jne outsl outsl insb jae adc push add push outsl outsl insb jae pop (bad) incl sub add dec or insl outsb jne gs imul or push gs imul add incl pop add add add jne gs add add add add dec or insl outsb jne bound add add inc popa je bound and je imul add add add add jne pop add add add push pop gs jb push gs imul add sbb add dec pop add jne gs jo adc add insb jo pop (bad) incl push add add add jne bound je adc or inc bound je cs add and add push or jo jo jne push arpl add add add bound arpl (bad) incl sub add push or dec gs jne push arpl add add ja push jne push arpl cs add add add add jne gs arpl outsb add add add ja push arpl outsb cs add add add add jne jb jo jb imul add outsl jo jb imul incl sbb add push pop add jne gs add add add add add add add jne gs jae add add add data16 jae add add and add push or jo jo arpl outsb add add add add arpl outsb add (bad) incl das add add add jne arpl outsb push jb jo jb imul add outsl jo jb imul incl sub add pop adc insl outsb jne gs gs push arpl outsb add add add gs and arpl outsb add add add add add jne gs add add add add add add add jne jb outsb je insb popa jae insb imul add imul jae insb imul add add add jne gs add add add add add add insl outsb jne gs jae push arpl outsb add add add data16 jae add add and add pop or jo jo popa arpl je add add add add arpl je add (bad) incl xor add pop adc insl outsb jne imul insb je imul adc push imul jne je and outsw cs add add add add jne jb outsb je gs arpl outsb insb outsl popa add add add imul arpl outsb and popa fs add add add add jne gs add add add add add add add jne popa arpl je push gs jae add add add data16 jae add add sub add bound inc jne jb arpl jne add add add add jb imul pop (bad) incl sub add arpl add jne jne push jb jo jb imul add outsl jo jb imul incl sbb add fs add jne gs add add add add add add add jne gs gs inc jne add add add gs add add add add add jne gs xor adc add sub add add add add jne gs jae inc jne add add add data16 jae add add xor add push jo jne push arpl jb adc add adc push jne push arpl jne jb arpl jne add (bad) incl xor add imul dec gs jne push arpl jb adc adc inc fs push jb jae arpl cs add add push add jne jne push arpl outsl jo jne add add jo jb imul incl sbb add imul insl outsb jne gs add add add add add add insl outsb jne gs jae push jne push arpl jb adc pop add data16 jae add add sub add insl push add jo arpl insb popa jb push add add add push jae imul sub add outsb verw jne imul insb popa jb add add ja jae push jae incl adc add outsl add popa add add add add add add add jne gs arpl insb popa jb push add add ja jae push jae imul add add add add jne imul jb push add add imul popa jb push add or insl outsb jne gs gs add add add gs add add add add add adc add sub add add add insl outsb jne jb outsb je arpl insb popa jb popa jae gs imul add imul je jb imul incl adc add jne add adc add sub add add add add jne gs jae push arpl insb popa jb push add add data16 jae add add and add ja add jo arpl insb popa jb adc add pop add push add (bad) incl xor add js add jne imul imul push imul fs je imul add add add add add adc add sub add adc insl outsb jne gs jae inc gs imul gs jae add add add add or aam inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add push add add add in clc add add or aam inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add outsb inc add push add add add out xor add add aam inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add outsl inc add ret add add shr push add inc add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add insl inc add add or incl mov add add imul add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add rclb add add call add add add add aam inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add insb inc add add push add add add or aam inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add outsb inc add add clc ret in add and add add je or dec add inc add add add imul add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add rclb add add add add add add test add inc add add add imul add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add add add add incb add and add add movsb out add add inc add add add imul add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add rclb add add add add add add inc add add add imul add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add rclb add add out jmp add and add add fdivrl add push inc add mov push add imul add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add outsb inc add push add add add add add add add add add jecxz add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add jo add ret add add mov inc add sbb add add add imul add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add insl inc add rclb add add add add add add inc add sbb aam inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add rcll add add pop inc add pop inc add sbb add add add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add rcll add add sar add add add add add sbb add add add add imul add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add push add add add add add add add cld add std inc add add add imul add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add jo add rcll add add pop inc add pop inc add add add imul add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add rcll add add inc add inc add add add add sbb add add add imul add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add rclb add add inc add inc add xor pop add dec add inc add add adc aam inc add add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add rclb add add add add add add add dec add dec add jle xor pop add add add imul add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add add clc or clc or jle xor pop add dec add inc add inc add xor pop add add add add imul add add (bad) (bad) (bad) (bad) (bad) (bad) incl add add inc add push add add add add add xor pop add dec add inc add inc add xor pop add add jo pop add push inc xor add or or add cld sti add (bad) (bad) decl add add add add add jmp or int3 cmovae or inc add add addb add add add sub add add push jb push arpl add lldt imul add add xchg push add (bad) (bad) incl add add outsb inc add add add add adc add add add add add add add add add add add add add add add add add add add add add (bad) push add add add mov inc add fiaddl cmp inc add add add add jl inc add (bad) (bad) incl add lods or mov inc add add (bad) decl or cli (bad) (bad) incl add pusha add add orb add or into and aam inc add and loopne inc add and in and repnz add inc add add add push fmuls push add add mov jge pop into dec inc xchg add outsl fild add add add inc add add add dec add dec lods test loope xor sldt add add add add add sub rclb test test add add js inc add add dec jmp adc sbb push adc add sbbb add add add jns add add add add cli mov roll outsl add aas enter add add add add add add orb add add mov add add add add or add add inc add add add or add add add inc or add add pop inc add add add add push pop inc add add add pop inc add add add push inc add add add add lock add test inc add add add add add add add add add add add pop add add add add add add add add add je inc add add add inc add add add lcall pushf lcall dec lcall mov inc add add add add add inc add add add mov pop add add add add add mov pop add add mov pop add add add dec mov pop add add inc add add add add add add add add mov pop add add mov pop add add add add inc add add add imul add add xchg push add push add daa add or push add rclb add add cmp pop add add jne insl add outsb add add add outsb add add add add outsb add jae pop add add imul jae je jb popa add add pop add add imul add jo pop add push add push add add cmp cmp push add add push add add push add push add add push add add add pop add inc add push add dec add push add dec add push add push add add add outsl add add je xor add bound jo add push or add add add add add add add add add add add add pop add add add mov add add sub rclb test test es les cld cmpl (bad) lods call out push xchg int mov pop jne roll xchg fsub inc mov jns mov enter mov or add add adc add add add add pop add add add add add add add add testl sbb add and add js testl inc popa je push outsl jne arpl inc popa je dec gs bound add add add add xor aaa add add add add sub add add add add sub add xor inc add add add add add cmp inc cmp dec inc dec push push pop jae jae gs xor pop dec push inc inc push push push push cs dec dec add inc popa je push gs jb push jne je insl gs imul push gs jb add popa push gs jb add add cmp add rolb add push add add add add add pop add add add mov add add sub rclb test test es les cld cmpl (bad) lods call out push xchg int mov pop jne roll xchg fsub inc mov jns mov enter mov or add add adc add add add add pop add add add add add add add add testl sbb add and add js testl inc popa je push outsl jne arpl inc popa je dec gs bound add add add add xor aaa add add add add sub add add add add sub add xor inc add add add add add cmp inc cmp dec inc dec push push pop jae jae gs xor pop dec push inc inc push push push push cs dec dec add inc popa je push gs jb push jne je insl gs imul push gs jb add popa push gs jb add add add add imul add add xchg push add (bad) (bad) incl add add jno add push add add add or movsb adc add add mov add add add lods adc add add test inc add add add mov push push inc add add pop addr16 add cmp cmp add add add enter add add sub inc add jmp sarb add add inc add add add add cmp add add inc add add cmp add add add cmp add enter or add lods push inc add jmp dec jg add add add add inc add add jns add add add push inc add jmp xchg jnp add add add or inc add add cmp add add push inc add add cmp add add adc dec add add inc add add add inc add add inc add add add sbb dec add add ja add add add add jmp fdivs add add add adc push add add inc add add add pop inc add add inc add add add adc push add add inc add add add add add inc add add add sbb pop add add ja add add add add add jmp xchg test or add pop add add add add sub inc add inc add add inc add add add enter sldt add jmp and inc add add add adc add add add add add inc add inc add add add adc push cmp add add inc add inc add add add pop add add xchg inc add (bad) (bad) incl add add add add sbb int3 mov inc add (bad) (bad) incl adc jo add pop cmp add add inc add inc add add add add add inc add and aam inc add and aam inc add inc add and aam inc add and cld adc sub inc add and aam inc add and and inc add inc add and aam inc add and dec adc add inc add and aam inc add and je inc add inc add and aam inc add and pushf adc add inc add and aam inc add and les add inc add and aam inc add and in adc add inc add and aam inc add and adc inc add inc add and aam inc add and cmp inc add inc add and aam inc add and fs inc add and aam inc add and mov inc add and aam inc add and mov inc add inc add and aam inc add and fcoml inc add and aam inc add and add inc add inc add and aam inc add and add adc aam inc add add add push add (bad) (bad) incl add add outsl inc add push add add add jmp xor inc add add add add add inc add add add inc add add add sbb add add cmp inc add mov push and add add add add sbb rclb add adc xor add push add add and jmp dec jnp add add add adc cmp add push add add es add mov inc add add add adc cmp add push add add mov inc add add add adc inc add add inc add add add es add mov inc add add add adc inc add add inc add add add add add inc add mov inc add add add add push add add mov inc add add inc add add add inc add add add sub adc inc add add add adc push add add inc add add add inc add mov inc add add add add push add add add add sub xor inc add add add add pop add add jns add add add sub inc mov inc add add add add pop add add jns add add add sub inc mov inc add add add sbb pusha add add ja add add add inc add jmp fdivs add add add adc add add inc add add pushf sub adc inc add add inc add add add enter or add add add add sub push mov inc add add add inc add add add add mov inc add add add add jo add enter push add add sub inc mov inc add add add adc je add push add add sub adc inc add add add adc js add push add add add mov inc add add add add inc add add movsb sub adc inc add add inc add add jge add add add inc add mov inc add add inc add add inc add add add add mov inc add add add adc mov add push add add sub add mov inc add add add inc add add add jmp dec test sbb add inc add add jge add add add jmp xor add inc add add inc add add add sub jmp push add add sbb cwtl add add ja add add add add jmp xchg test or add inc add add inc add add add cs add mov inc add add add adc mov jge add add add inc add mov inc add add add adc movsb add add inc add add add jmp mov add add adc test add push add add das inc add mov inc add add add adc lods add add inc add add add add mov inc add add add adc mov add push add add jmp enter sub add inc add add inc add add add inc add jmp rolb add inc add add inc add add add jmp rolb add adc mov jge add add add xor adc inc add add add adc rolb add inc add add add xor adc inc add add add sbb les add and add nop xor jo jmp xor add inc add add add add inc add add add xor adc inc add add add adc int3 add add inc add add push mov inc add add inc add add add add jns add add enter inc mov inc add add inc add add add add jns add add add add add xor inc mov inc add add add add add inc add add add xor add mov inc add add add ltr add add xchg pop add add inc add jmp adc add inc add add add add ja add add add jmp call add add adc in add push add add jmp clc test sub add inc add add add add inc add add add jmp js inc add add add adc in add add inc add add add xor jmp xor add add add pop add add add xchg inc add (bad) (bad) incl add add add add add mov inc add (bad) (bad) incl adc hlt add add inc add add add ss add mov inc add add add or add inc add add add inc add mov inc add add add or add inc add add add jmp inc jnp add add add adc add add push add add aaa inc add mov inc add cmp add inc add inc add inc add inc add add cmp mov cmp mov cmp xlat cmp in inc add cmp (bad) cmp or inc add cmp and cmp aas cmp dec cmp pop cmp cmp jae inc add cmp lcall add inc add cmp fstpt inc add cmp cmc cmp add inc add cmp sbb inc add cmp cmp inc cmp push cmp pop cmp push inc add inc add inc add cmp mov cmp sarb inc add cmp in cmp stc cmp push cmp adc inc add cmp sub cmp inc cmp push cmp popa cmp outsb cmp jnp inc add cmp mov cmp mov cmp (bad) cmp jecxz inc add cmp std cmp or add cmp add inc add cmp add cmp add inc add inc add inc add inc add inc add inc add cmp add cmp add cmp add add add inc add inc add and fisubl inc add add inc add and fisubl inc add inc add and aam inc add and mov inc add inc add and fisubl inc add sbb add inc add and fisubl inc add inc add and aam inc add and sub inc add inc add and fisubl inc add add inc add and fisubl inc add add inc add and fisubl inc add inc add and aam inc add and int3 sbb inc add and aam inc add and hlt sbb inc add and aam inc add and sbb inc add inc add and fisubl inc add add inc add and fisubl inc add add inc add and fisubl inc add inc add and aam inc add and mov sbb into and aam inc add and in inc add inc add and fisubl inc add inc add inc add and fisubl inc add inc add inc add and fisubl inc add add inc add and fisubl inc add inc add and aam inc add and lods pop inc add inc add and fisubl inc add pop inc add inc add and fisubl inc add pop inc add inc add and fisubl inc add inc add inc add and fisubl inc add add inc add and fisubl inc add add inc add and fisubl inc add inc add and aam inc add and les inc add inc add and fisubl inc add and mov and aam inc add and adc inc add inc add and fisubl inc add inc add inc add and fisubl inc add add inc add and fisubl inc add inc add and aam inc add and mov inc add inc add and fisubl inc add and mov and aam inc add and add inc add inc add and fisubl inc add inc add inc add and fisubl inc add add inc add and fisubl inc add add inc add and fisubl inc add inc add and aam inc add and int3 and mov and aam inc add and hlt and mov and aam inc add and sbb inc add inc add and fisubl inc add add inc add and fisubl inc add add inc add and fisubl inc add inc add and aam inc add and mov sbb into and aam inc add and in inc add inc add and fisubl inc add inc add inc add and fisubl inc add inc add inc add and fisubl inc add incl add subl add incl add cmpsb stos or add incl add sub add incl add lods lods or add incl add dec lods or add incl add xor and (bad) incl add add insb and (bad) incl add fsubrs and (bad) incl add mov insb and (bad) incl add into mov add incl add loope or add incl add add or add incl add pop mov add incl add sub and (bad) incl add cmp insb and (bad) incl add jo or add incl add ret ret subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp add add add imul add add (bad) (bad) incl add add insb inc add rclb add add inc add add add add add add pop cmp add loopne inc add add add add add add add add mov mov push dec inc add fist add add hlt sbb add add add add add or add xor add add add lock add jg add add mov jg add add pusha push inc add mov inc add add inc add add inc add add add add add add mov inc add add add add add inc add add add push inc add mov inc add add add adc les add push add add inc add mov inc add add add adc enter push add add jmp inc jg add add add or add inc add add cld push inc add mov inc add add inc add add inc add add add inc add mov inc add add add adc aam add push add add jmp dec jnp add add add adc fadds add push add add push inc add mov inc add add add adc faddl add push add add add mov inc add add inc add add add add inc add add add jmp fs add add add adc in add push add add inc add mov inc add add add add add inc add add add add mov inc add add add add in add add jg add add aam inc add mov inc add add inc add add add add inc add add add push inc add mov inc add add add adc hlt add add inc add add add inc add mov inc add add add add clc add add add add mov inc add add inc add add add add jns add add add push inc add jmp xchg jnp add add add add add add enter cmp add call mov inc add add add sbb add add enter add add add inc add jmp fdivs add add add add or add enter cmp add test add jmp in inc add add add sbb or add enter add add mov mov inc add add add add adc add enter aaa add add push inc add jmp xor inc add add add add adc add enter add add inc add jmp and add inc add add add add inc add add add inc add mov inc add add add adc sbb add push add add mov inc add add add adc and add push add add pop inc add mov inc add add add adc and add push add add inc add mov inc add add add adc sub add push add add pop inc add mov inc add add add adc sub add push add add pop inc add mov inc add add add adc xor add push add add mov inc add add add adc xor add push add add pop inc add mov inc add add add adc cmp add push add add inc add mov inc add add add adc cmp add push add add mov inc add add inc add add add push add add pop inc add mov inc add add add adc inc add add inc add add add add add inc add mov inc add add add add enter das add add pop inc add jmp xchg test das add add adc dec add add inc add add add inc add mov inc add add add adc push add add inc add add add mov inc add add add adc push add add inc add add add pop inc add mov inc add add add adc pop add add inc add add add inc add mov inc add add add or add inc add add add pop inc add mov inc add add add adc pusha add add inc add add add add add inc add mov inc add add add add ja add add add jmp rolb add inc add add add push add add inc add mov inc add add add adc insb add add inc add add add add mov inc add add add adc jo add push add add pop inc add mov inc add add add adc je add push add add inc add mov inc add add inc add add add add add test add jmp adc add inc add add add inc add add add pusha inc add mov inc add add add sbb addb add xchg xor add cmp add jmp xor add inc add add inc add (bad) (bad) incl add add add add mov inc add (bad) (bad) incl add mov add adc add add inc bound add inc add add inc add add inc add add pusha bound add inc add add inc add add jg add add jl inc add mov inc add add inc add add inc add add cwtl bound add inc add add inc add add jg add add mov inc add mov inc add add inc add add inc add add shlb add mov inc add add inc add add jg add add in bound add inc add add inc add add inc add add arpl add inc add add add test add adc add add and inc add mov inc add add inc add add inc add add inc arpl add inc add add inc add add jg add add pop arpl add inc add add inc add add inc add add js inc add mov inc add add inc add add jg add add xchg arpl add inc add add inc add add inc add add add mov inc add add add add rolb add jg add add int3 arpl add inc add add inc add add add add jg add add call mov inc add add inc add add add add jg add add add inc add mov inc add add inc add add add add jg add add fs add mov inc add add add rolb add adc add add cmp inc add mov inc add add inc add add add add jg add add pop fs add mov inc add add inc add add add add jg add add je inc add mov inc add add inc add add add add jg add add nop fs add mov inc add add inc add add add add jg add add lods fs add mov inc add add inc add add add add xchg jnp add enter pusha mov inc add add inc add add add add jg add add add jmp lods xchg aas add add verw add add xchg jl add cmp add jmp mov add add add lock add jg add add mov add mov inc add add inc add add add add jg add add test inc add mov inc add add inc add add add add jg add add les add mov inc add add inc add add add add jg add add loopne inc add mov inc add add inc add add add add jg add add add gs add mov inc add add add add add add adc add add sbb add mov inc add add inc add add add add jg add add xor inc add mov inc add add inc add add add adc add add push inc add mov inc add add inc add add add add jg add add insb inc add mov inc add add inc add add add adc add add mov add mov inc add add inc add add add add jg add add movsb inc add mov inc add add inc add add add adc add add shlb add inc add add inc add add add add jg add add add add add inc add mov inc add add add add adc add add clc inc add mov inc add add inc add add add add jg add add adc inc add mov inc add add inc add add add adc add add xor add mov inc add add inc add add add add jg add add add mov inc add add add xor add adc add add push mov inc add add inc add add add add jg add add test add mov inc add add inc add add add adc add add mov mov inc add add inc add add add adc add add mov mov inc add add inc add add add jg add add addr16 add mov inc add add add dec add add jg add add hlt addr16 add mov inc add add inc add add add jg add add adc add mov inc add add inc add add add adc add add sub inc add mov inc add add inc add add add jg add add dec push jmp adc add inc add add add adc add add fs jmp and inc add add inc add add add jg add add subb add inc add add inc add add add adc add add jmp inc mov push add add add add add jg add add mov mov inc add add inc add add add adc add add aam inc add mov inc add add inc add add add jg add add push jmp mov insb add add add jo add adc add add or inc add mov inc add add inc add add add jg add add sub add mov inc add add inc add add add adc add add inc imul xchg mov push add add add jl add adc add add inc add mov inc add add add addb add jg add add jl inc add mov inc add add inc add add inc add add cwtl imul int3 mov push add inc add add inc add add mov inc add mov inc add add inc add add inc add add add add jmp call add add push add imul push add push add inc add push add push add push add imul imul imul imul imul imul imul imul imul imul imul imul imul imul imul add add cmp add and aam inc add and mov inc add cmp add and aam inc add and add add test add inc add cmp inc add and aam inc add and add inc add cmp add and aam inc add and add add ja inc add imul add add ds add cmp add and aam inc add and push ds add cmp add and aam inc add and js inc add cmp add and aam inc add and mov cmp add and aam inc add and enter loopne inc add and aam inc add and lock add cmp add and aam inc add and sbb inc add cmp add and aam inc add and inc aas inc add cmp add and aam inc add and push cmp add and aam inc add and nop aas inc add cmp add and aam inc add and mov cmp add and aam inc add and loopne inc add cmp add and aam inc add and or add cmp add and aam inc add and xor add cmp add and aam inc add and pop inc inc add cmp add and aam inc add and addb loopne inc add and aam inc add and test inc add cmp add and aam inc add and rolb add cmp add and aam inc add and clc inc inc add cmp add and aam inc add and and add cmp add and aam inc add and dec inc inc add cmp add and aam inc add and jo inc add cmp add and aam inc add and cwtl inc inc add cmp add and aam inc add and rolb loopne inc add and aam inc add and call cmp add and aam inc add and adc add cmp add and aam inc add and cmp add cmp add and aam inc add and pusha inc inc add cmp add and aam inc add and mov add cmp add and aam inc add and add add mov inc add inc add cmp add and aam inc add and add add into push add push add inc inc add cmp add and aam inc add and add add fldt add inc add inc inc add cmp add and aam inc add and sub add cmp add and aam inc add and push inc inc add cmp add and aam inc add and add add sahf imul add add add add inc add cmp add and aam inc add and mov cmp add and aam inc add and enter loopne inc add and aam inc add and lock inc add cmp add and aam inc add and add add inc inc add cmp add and aam inc add and inc inc inc add cmp add and aam inc add and push cmp add and aam inc add and nop inc inc add cmp add and aam inc add and mov cmp add and aam inc add and add add cmpsl push add inc inc add cmp add and aam inc add and add add sub add imul add add inc inc add cmp add and aam inc add and xor add cmp add and aam inc add and pop inc inc add cmp add and aam inc add and lds add cmp add and aam inc add and subb test inc add cmp add and aam inc add and rolb add cmp add and aam inc add and clc inc inc add cmp add and aam inc add and and add cmp add and aam inc add and dec inc inc add cmp add and aam inc add and jo inc add cmp add and aam inc add and cwtl inc inc add cmp add and aam inc add and rolb loopne inc add and aam inc add and call cmp add and aam inc add and adc add cmp add and aam inc add and cmp add cmp add and aam inc add and pusha inc inc add cmp add and aam inc add and mov add cmp add and aam inc add and mov inc add cmp add and aam inc add and fadds add cmp add and aam inc add and add add cmp add and aam inc add and sub add cmp add and aam inc add and push dec inc add cmp add and aam inc add and js inc add cmp add and aam inc add and mov cmp add and aam inc add and enter loopne inc add and aam inc add and lock inc add cmp add and aam inc add and sbb add cmp add and aam inc add and inc dec inc add cmp add and aam inc add and push cmp add and aam inc add and nop dec inc add cmp add and aam inc add and mov cmp add and aam inc add and loopne inc add cmp add and aam inc add and or add cmp add and aam inc add and xor add cmp add and aam inc add and pop dec inc add cmp add and aam inc add and orb loopne inc add and aam inc add and test inc add cmp add and aam inc add and rorb add cmp add and aam inc add and clc dec inc add cmp add and aam inc add and and add cmp add and aam inc add and dec dec inc add cmp add and aam inc add and jo inc add cmp add and aam inc add and cwtl dec inc add cmp add and aam inc add and rorb loopne inc add and aam inc add and call cmp add and aam inc add and adc loopne inc add and aam inc add and cmp loopne inc add and aam inc add and pusha dec inc add cmp add and aam inc add and mov loopne inc add and aam inc add and mov inc add cmp add and aam inc add and fmuls loopne inc add and aam inc add and add add cmp add and aam inc add and sub add cmp add and aam inc add and push dec inc add cmp add and aam inc add and js inc add cmp add and aam inc add and mov cmp add and aam inc add and enter loopne inc add and aam inc add and lock inc add cmp add and aam inc add and sbb add cmp add and aam inc add and inc dec inc add cmp add and aam inc add and push cmp add and aam inc add and nop dec inc add cmp add and aam inc add and mov cmp add and aam inc add and loopne inc add cmp add and aam inc add and or add cmp add and aam inc add and xor add cmp add and aam inc add and pop dec inc add cmp add and aam inc add and orb loopne inc add and aam inc add and test inc add cmp add and aam inc add and rorb add cmp add and aam inc add and subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp subl jmp add add add insb ret dec xchg push add (bad) (bad) incl add add add adc dec pushf dec stos cmp jp adc add add add add insb inc add add push add add add add add add cmp add (bad) (bad) lcall inc add jae add add cmp add incl add add add (bad) (bad) call popl add add jl push add add add add add add add add incl add addb add add sub inc add (bad) (bad) pushl fwait inc add add add push add add add inc add add add incl add addb add add dec add (bad) call popl add add lods rclb add add inc add add add add add incl add addb add add fadds add (bad) (bad) call popl add add pushf rclb add add inc add add add add add incl add addb add add push (bad) (bad) call popl add add mov add add add add add (bad) incl add addb add add add inc add (bad) (bad) call popl add add int3 rclb add add add add add (bad) incl add addb add add mov (bad) (bad) (bad) cmp add fadd push add add add add add add (bad) incl add addb add add les (bad) call popl add add in rclb add add add add add add incl add addb add add mov inc add (bad) (bad) call popl add add cld rclb add add add add add add incl add addb add add adc (bad) call popl add add mov push add add add jae add add add add (bad) incl add addb add add clc add (bad) (bad) (bad) call popl add add or push add add add jae add add add add add incl add addb add add rolb add (bad) (bad) call popl add add sbb push add add add jae add add add add add incl add addb add add sub inc add (bad) (bad) call popl add add sub push add add add je add add add add add incl add addb add add cmp inc add (bad) (bad) call popl add add cmp push add add add je add add add add (bad) incl add addb add add cld or (bad) (bad) (bad) incl add and inc add add add jno add incl add add add (bad) decl add inc add add int3 jno add incl add add add inc add (bad) (bad) incl inc add add add push add add add inc add add add add add incl add addb add add in inc add (bad) (bad) call popl add add jo push add add add add add add add (bad) incl add addb add add jo inc add (bad) (bad) call popl add add and push add add add add add add add add incl add addb add add xor add (bad) (bad) call popl add add xor push add add add add incl add addb add add js inc add (bad) (bad) call popl add add inc ret add add pusha je add add add add add incl add addb add add rorb add (bad) (bad) call popl add add (bad) add add push add add add add incl add addb add add adc inc add (bad) (bad) jmp inc add add add add add add add add add add incl add addb add add lock inc add (bad) (bad) call popl add add mov push add add add add add add add incl add addb add add movsb pop inc add (bad) (bad) decl add aam push add add add add add add (bad) incl add addb add add sub inc add (bad) (bad) ljmp add add sub add add add add jns add outsl sbb jl lods mov cmpsb call mov mov cmp mov mov fmuls aas flds (bad) jae sbb mov enter and inc add push addl jbe js enter inc sti out ljmp (bad) stc add mov push (bad) sbb dec xchg push jne dec sbb cmpb xchg adc dec inc pop mov jmp add inc add cmc fsubr in add cmp cmp sbb ja sbbl ja jns jle repnz iret lods out add sbb sbb add inc (bad) roll xchg test test inc mov mov mov jg adc sbb or inc lret repz pop mov stc mov fbstp iret and (bad) mov inc ja mov mov or sub xor push add or dec mov add popf mov lds lret pop ret add dec movl call mov add cs loop out push test stos mov xor insl lods lahf out (bad) ja xchg adc push xor jae cltd jbe or jno popa repnz jmp (bad) sbb faddl pop jecxz adc xor cs out sahf scas in int je push or inc xchg int cmp testb xor pop mov in xchg add dec push movsl lock mov xor mov pop fldl insb mov add popa fldenv inc mov xchg mov adc (bad) sbb push cmp push push push cmp push aaa push push push add insl outsl fs jne push arpl insl outsl fs popa jb popa bound add add insl outsl fs inc pop gs jb gs insb add insl outsl fs jne arpl outsb add fs jb arpl jne add add insl outsl fs outsl outsl insl add fs arpl fs add fs arpl outsl insb pop gs jb add insl outsl fs inc push gs arpl jb add add fs inc inc gs jb insl outsb je insl outsl fs push push jne push arpl data16 outsb add add insl outsl fs push push arpl outsb dec data16 outsb add add insl outsl fs push push arpl outsb add add insl outsl fs outsl jne jae add add jne push arpl jae add add jb xor add insl outsl fs popa addr16 dec outsl fs xor dec outsl fs xor insl outsl fs outsl insb insb gs insl outsl fs outsl outsb add fs addr16 addr16 jae add add inc push dec dec xor xor add dec dec inc push dec dec xor xor add dec outsl fs xor popa popa popa popa popa popa popa popa popa popa popa popa popa popa popa popa popa popa popa popa add add push jb push arpl add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add or add add add add jns insb add inc add popa add imul add and xor add je arpl push add add add jns and pop add insb add je outsl add add add and and and and and and and and and and and and and and and and and and and and and and add add add add jns and jb add jo add je jae and data16 add add jne je and je outsl add add add add inc add pop add dec add add add adc add dec add js je jb add add add add add add imul arpl jp jns arpl imul add adc add pop add outsl add add outsl add add add adc add dec add and inc add ja imul add add push imul push add add dec add inc add outsb add jbe add add add add push add outsb add push add add add add outsb add add add add insb add add popa add add outsl add imul add add add arpl add add jae add or add jae jne bound push add add or add jae je jne add add add add add add jb add add push add add add je inc add js add or add jb outsl add insl add add add add add arpl push add add add add add arpl add add or add add jo je add add or add jae add data16 add add add add add je add add push add add outsl add add add inc add add jae jl inc add add jae imul push add arpl imul add outsl add outsb add add jl inc add outsb add add add jae arpl outsl add add outsb add jl inc add jne outsb add add add dec lods xor or stos add xchg push imul add add push imul add add mov add dec add jo sub add jl dec add jp jp jl dec add je popa add add add and inc add add add add add jl dec add add jb jl push add jo jl push add add jl push add jo jl push add add popa add jl push add arpl imul add add push add add add add jae je jb imul jl inc add add jb outsb add je imul jl push add popa add add popa add add add add add add jb popa add imul add add jne outsb add add popa add imul add jne jb outsl add add push add add add bound imul je jl push add imul dec add jo jl push add arpl popa add add popa add jp sub inc add outsb add jl inc add jae imul jl push add popa add arpl add add add jae imul insb add add jae je jb jne insl add outsb add add add arpl imul add sub xor or stos add xchg push imul sub xor or stos add xchg lcall add jae add add insl add jl push add jne outsb add add insb add jo jl inc add jae jo add add outsl add jae add add add add add outsl add imul add popa add jae jl push add jne insb add add outsb add jl push add popa add add add add je popa add add add add add jae je jb jne insl add outsb add add add outsl add jl dec add jae je jb jne insl add outsb add add add outsl add imul add je push add jl inc add je push add add jb imul add jbe add add arpl push add add add je jb imul jl inc add add je jb outsl add imul add ljmp adc pusha rcll xor add popa insl gs add gs xor add gs xor add gs xor add gs xor gs xor add gs xor add add inc push push push inc push inc inc push add add push push dec pop inc add gs add test add push add jo sub add add add jb outsl add add arpl add add add insl add add jne je push add and push add arpl imul add outsl add add add add insb add add popa add add je popa add add popa add jl push add jo and xor xor jl inc add jb imul imul and push add jo jl add add test add push add jo das add jne outsb add jl dec add outsb add insb add jl dec add je imul and inc add add imul outsb add add bound popa add add add add and push add jbe add add jns arpl push add insb add arpl jl push add jbe add add outsl add je jne outsb add jae jl push add popa add insb add jb jl add add inc cmp jno imul and outsl addr16 insl popa jae dec imul je push imul je imul pop push inc ss dec inc add add add and add add add add add add add jl add push add rcrl fimull xor or stos add xchg dec popa bound xor mov add sub add add imul insb add add imul push add outsb add jl inc add imul dec add jp jp jl push add insb add popa add add je jb outsl add add jae imul insb add add arpl imul add add add outsl add add add jb add add outsl add imul add outsl add add add add add insb add das add outsl add imul add popa add add outsb add insb add add outsl add add add imul jl inc add jae je sub add imul jl inc add bound outsl add jl dec add je imul push add jbe imul insb add add insb add add jl inc add add and inc add popa add jae jl add add les adc jae dec mov pop out pop pushf scas pop enter mov movsb lds (bad) stc test test dec inc adc sub sub imul cmp xor or stos add xchg cs push add xor dec popa bound xor add gs xor add gs xor add gs add cmpsb add add jbe popa add je add popa add add jl inc add je push add add outsl add imul add jb outsl add jb add jae imul and push add arpl imul add jae jns arpl push add insb add arpl and push add arpl imul add jns insl add push add arpl and push add arpl imul add insb add ja and push add arpl imul add add imul inc add outsb add add push add jae jl inc add jae jns and dec add jae je add imul jl inc add outsl add jae je imul dec add insl add jne jb jl push add add arpl push add popa add jae outsl add jl dec add add popa add add popa add bound add and dec add jae imul add add cmp add pop add je popa add je and dec add outsb add pop add jb outsl add jb popa add jae pop add je popa add je jne jo pop add add add add arpl jb outsl add outsl add je pop add imul outsl add jae pop add jne jb jb add je push add jb jae imul pop add jne outsb add add add add add add outsb add je popa add add insl add push add jl inc add outsl add add add popa add jae jl push add imul jae jl push add jb outsb add add jb outsl add jbe add add je imul jl push add add and dec add insl add add add jl push add outsb add outsl add add insl add popa add add insb add insb add jb add add add popa add add add add ja add and inc add insb add add add push add insl add arpl and push add jne insb add add add jae je jns insb add jl inc add add add jne outsb add and push add arpl imul add add insl add add outsl add add add add popa add add add jl inc add jb outsl add add jae add add add add push add data16 add jb add add arpl jb outsl add outsl add je pop add arpl je imul and push add je jne jo pop add outsb add je popa add add add add outsl add jo outsl add add je jae add add push imul add add mov add inc add outsb add add add popa add add add popa add add jne insl add add add add popa add jae jl inc add add sub add jae add add jb add outsl add add add jb jb outsl add jl imul imul inc add imul push add jo jl dec add add jb jo jne outsb add jl push add insb add imul add jne outsb add jl add add cmpsb add add add je jl inc add jb imul imul and inc add outsb add jae je popa add add popa add jl dec add popa add jns and dec add je popa add add insb add arpl imul add add add add jb outsl add jae outsl add add jl inc add insl add add outsl add popa add jns and inc add jb imul imul jl add jl add inc add jb imul imul and push add arpl imul add add add add add add insb add popa add add popa add push add je popa add add outsb add insl add jl dec add outsl add jl push add outsb add add add outsl add add add bound add push imul dec popa bound xor add gs xor add gs xor add gs xor add gs xor dec popa bound xor gs cmp add gs xor add insl insl popa outsb xor add add insl insl popa outsb xor add add insl insl popa outsb xor add add gs xor add arpl xor add add gs cmp add gs xor bound xor add gs aaa add inc jb insl xor add gs add push imul add add dec popa bound xor add je add add push push dec push dec inc add add dec popa bound xor add dec lods xor or stos add xchg inc popa je xor add push gs xor add loop lods xor or stos add xchg push gs xor add jb lods xor or stos add xchg dec inc dec inc outsl jb add jne gs jae push arpl insb popa jb push add jne gs jae add jo jo arpl insb popa jb push insl outsb jne imul add jne jb jo jb imul outsb jne imul insb popa jb add jne pop add add jne jne push jb jo jb imul insl outsb jne insb popa jae jne popa add add jne outsb jb insb insb insl outsb je add insl outsb jne gs jo insl outsb jne popa arpl je push gs jae add add jne gs gs push arpl outsb add add insl outsb jne gs gs inc jne add add insl outsb jne xor add insl outsb jne xor add insl outsb jne jb outsb je gs arpl outsb insb outsl popa add add insl outsb jne jne jb arpl jne add add jne bound add add insl outsb jne gs add add arpl add insl outsb jne gs xor add add jne gs jne push arpl jb add add add inc popa je xor add insl outsb jne jb ja add add popa xor add insl outsb jne gs arpl outsb add add jne gs insl outsb jne gs jae inc gs imul jne gs jae inc jne add add jne arpl outsb add add jne gs gs add add jne gs arpl add add insl outsb jne gs jne push arpl add jo jne push arpl insl outsb jne arpl outsb push jb jo jb imul insl outsb jne bound je add add jne push jo jae add add jo jne push arpl jb add insl outsb jne imul jb push insl outsb jne gs add jne gs add jne gs add jne gs add jne gs add jne imul imul push gs jae push arpl outsb add add jo arpl insb popa jb add jne imul insb je imul outsb jne gs imul jne jb outsb je insb popa jae insb imul outsl jo jne jb arpl jne add add jne outsl imul outsb jne gs add jne gs arpl insb popa jb push add jne js je insl outsb jne gs jae push jne push arpl jb add add jne arpl insb popa jb add jne outsl outsl insb jae add add jo arpl outsb add add add insl outsb jne jb outsb je arpl insb popa jb popa jae gs imul outsl jo popa arpl je add insl outsb jne jne push arpl outsl jo jne add add popa insl xor add arpl gs or adc add add adc add or add jae gs insb xor cs insb add add add gs insb inc js arpl gs add add inc add inc add add pushf int add or je jmp push mov call jmp add add add add jb gs xor add add adc add inc gs jns je insl inc imul jns add add add add test push add or je jmp push mov call jmp add add gs gs jo popa je inc add add pop mov mov add mov push add or je jmp push mov call jmp add add add bound jae outsl fs insb add inc push push dec dec inc pop dec outsb imul inc add mov add add ror add or je jmp push mov call jmp add add add add push push dec dec inc pop dec jne imul add add inc add add int3 int add or je jmp push mov call jmp add add add add push push dec dec inc pop dec jne imul add add inc add add fmul push add or je jmp push mov call jmp add add add add push push dec dec inc pop dec jne imul add add inc add add in push add or je jmp push mov call jmp add add inc push push dec dec inc pop inc jb add add add inc add add lock add or je jmp push mov call jmp add add add add inc push xor add or add inc jb ja gs inc add add inc add add cld int add or je jmp push mov call jmp add add gs imul je add add add mov add add or push add or je jmp push mov call jmp add add insb gs js jae jae add gs je inc imul gs outsl jne arpl arpl je jb outsl jb add cmp xor or stos add xchg jl cwtl add add add add add add push add cs dec dec add add xchg add add add add add add add and push add add add outsl add add xchg add add add add add add add add je add jl add addb add add add cmp push add xor and push add xor add add aam inc add lea add add and add inc cmp outsb outsl ja pop push jns je insl xor pop jae gs insb xor cs insb add mov adc inc add add adc push add or je jmp push mov call jmp add add add inc cmp outsb outsl ja pop push jns je insl xor pop push dec inc dec dec xor add inc add inc add add and push add or je jmp push mov call jmp add add add add push jae jb outsb inc fs imul add inc add push add push add add inc add add sub push add or je jmp push mov call jmp add add add add pop push imul push jns je insl xor pop push push inc push xor add adc add inc popa insb insb push imul outsl arpl or inc add inc add add cmp push add or je jmp push mov call jmp add add cmp outsb outsl ja pop push jns je insl xor pop imul gs xor add add push add add gs add je inc add add inc into push add or je jmp push mov call jmp add add or mov dec sbb mov cmp or add dec add add add add add add je je jo cmp das add add jns insb add je outsl add add jb add add jb das add add lods xor or stos add xchg (bad) xor or stos add xchg jmp iretw adc pusha rcll js jns insb add and arpl jb imul add and xor add add add add add add inc add push add add add add and and and and and and pop add jns insb add and arpl jb imul add and xor add add and outsb add je and data16 jne outsb add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add and and and and and and and and dec add imul add add and push add popa add arpl push add add add add add add add add add add add add add add add add add add add add add add add jb arpl push add add add add add add add insb add popa add add add imul and je push add outsl add jb add je and inc add insb add and push add and jo popa add add and and add or add inc add jb outsl add add add add dec add add add pop pop jbe popa dec jb jae insb je push bound add add add add add add add add add dec add add add push add add add popa add add and imul data16 jb and js jns insb add je outsl add add and arpl jb popa add imul add and xor add insb add and and and add add add add das add add add add add popa add add add push add add push add inc add inc add add add add popa add add and inc add outsb add and jae jne arpl arpl add jae data16 insb add and and add add sbb add push add je arpl push add outsb add and and add add or add inc add push add add add add push add add add add jae (bad) (bad) (bad) incl add add add add add jb arpl push add add add inc add push add push add inc add add add (bad) and dec xchg sub scas daa test fiaddl and pop out fdivrp add jmp adc sbb push into hlt out push roll adc xchg cmp cmp xor or stos add xchg inc outsl jb add add pop pop jbe popa push je push outsl push outsb imul add jbe popa push dec xor add cmpsl (bad) mov mov out int mov stos std out fbstp fbstp fnstenv mov enter mov int movsl add or or push add add inc add add rorl xor or stos add xchg add add popa add add and imul popa add add popa add add add jne outsb add imul add add add add add dec add add popa add add outsb add add add add add insl add outsb add je add add add add add jb imul add sbb add pop add popa add jae insl add add add add add add add add add popa add add dec add add add add jb jb xor jb cmp and dec add jo outsl add jae imul add add add add arpl jb outsl add add add add pop add dec add push add dec add add push add push add add and push add inc add inc add push add and cmp add add inc dec lods xor or stos add xchg aam inc add push add inc ss dec dec add add pop pop jbe popa inc popa jae dec bound add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add insb add inc add popa add imul add and xor add je arpl push add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add jns and pop add insb add je outsl add add add add add add add add add add add add add add add add add add add add add add add add add add and jb add jo add je jae and data16 add add jne je and je outsl add add add add jns pop add dec add or add js je jb add add add jae jp arpl jp jns arpl imul or add outsl add add outsl add or add and inc add ja imul add or add push add add pop add add add add outsb add push add add add add add add add popa add add outsl add imul add add add arpl add add jae add add pop pop jbe popa inc jo xor add pop pop jbe popa push je inc insl jo pop pop jbe popa push je push popa jb outsl jbe add jbe popa dec outsb inc jae jb add add jbe popa dec popa je dec fs je add pop pop jbe popa inc outsb add add pop pop jbe popa inc jb inc gs jb arpl add pop pop jbe popa inc jb jae add pop pop jbe popa push jne dec ja gs add add add pop pop jbe popa push popa jb push arpl add add jbe popa inc jb dec outsl jbe add add pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add jbe popa inc imul add pop pop jbe popa push jne xor add pop pop jbe popa inc imul add pop pop jbe popa inc outsb gs je inc outsl jne fs jb outsl jb add add jbe popa inc jb gs bound imul pop pop jbe popa inc jb gs popa jb imul pop pop jbe popa push je dec outsl jbe add add pop pop jbe popa push je inc popa je pop pop jbe popa push popa jb jne add jbe popa dec xor add add jbe popa inc jb gs je add add pop pop jbe popa push je inc outsl jo add add pop pop jbe popa inc jb gs je dec imul pop pop jbe popa push gs jns je insl inc jb outsl jb pop pop jbe popa push je push outsl inc outsb jae add pop pop jbe popa dec bound gs pop pop jbe popa dec outsb inc jb outsl jb add add jbe popa inc jb gs popa jb add add jbe popa push popa jb jae inc jno add pop pop jbe popa push popa jb outsl jo add add pop pop jbe popa push popa jb outsl jbe add add pop pop jbe popa inc jb gs bound add add jbe popa dec bound gs fs data16 add jbe popa dec gs add add or add add or add add add add add sbb add push jb je push jb jbe je push jb imul imul mov sub inc add add push into push add or je jmp push mov call jmp add add add add je jb jbe je push jb imul imul add add add pusha into push add or je jmp push mov call jmp add add outsl insl arpl xor fs insb add add adc add dec outsb imul inc outsl outsb je outsl insb jae add lcall add add insb into push add or je jmp push mov call jmp add add add add add add add add add adc add and add inc add add add add add add add add add or add or add adc add adc add sbb add sbb add and add and add sub add sub add xor add xor add and adc add add sub add add add or add or add adc add add add inc add add inc add add push add add add add bound push add je add jne bound push add je dec add add add add add bound push add je add jne bound push add je push add je insb add sub and je bound insb add add popa add je insl add outsb add add add popa add je insl add outsb add add je insb add sub and je bound insb add add jb dec add jbe add add add jb dec add jbe add add je insb add sub and je bound insb add add arpl push add add add arpl push add add add sub and je bound insb add jne bound push add je add add arpl jb imul imul add inc add add add push add and sub sub sub je bound insb add add je imul add add je imul dec add add add add add add add add add add add add add add popa add je insl add outsb add add add add add add add arpl jb imul imul add add add and inc add dec add and je bound insb add add arpl push add add dec add inc add and dec add dec add and sub je bound insb add add popa add je insl add outsb add add dec add inc add and dec add dec add and sub sub je bound insb add add jb dec add jbe add add dec add inc add and dec add dec add and je bound insb add add je imul and dec add and je bound insb add add jb dec add jbe add add add jb dec add jbe add add add add insb add add je imul add add jb dec add jbe add add add add dec add inc add and dec add dec add and je bound insb add jne bound push add je and dec add and je bound insb add add jb dec add jbe add add add jb dec add jbe add add add add insb add jne bound push add je add add jb dec add jbe add add add add dec add add add add add jo popa add je insl add outsb add add add popa add je insl add outsb add add add add insb add jne bound push add je add add popa add je insl add outsb add add add add dec add add add add add jo popa add je insl add outsb add add add popa add je insl add outsb add add add add insb add add je imul add add popa add je insl add outsb add add add add add dec add add add add popa add push add add add arpl push add inc add add add insb add add je imul add add arpl push add inc add add add and inc add dec add push add add pop add add add add bound push add je add jne bound push add je dec add add add add add bound push add je add jne bound push add je push add je insb add sub and je bound insb add add popa add je insl add outsb add add add popa add je insl add outsb add add je insb add sub and je bound insb add add jb dec add jbe add add add jb dec add jbe add add je insb add sub and je bound insb add add arpl push add add add arpl push add add add sub and je bound insb add jne bound push add je add add arpl jb imul imul cmp add sbb or add add or add add add add add or add inc add add add add add adc add push add bound push add je imul inc add add add add add push add insb add add add add add jne bound push add je je imul add add add add add outsb add je jae add add add sbb add dec add arpl je jne jb add outsb add je jae add add push add add add outsl add popa add add jns push add imul add adc add inc add je add outsl add jns add add sbb add push add add add je inc add add add add add add popa add jne insb add add jb add add add add push add bound push add je inc add add add add add add add outsl add popa add add jns inc add add add add add add add je inc add add add add add jb add je imul inc add je add add add jo add je add add add add outsl add add outsl add outsb add add outsl add add imul je add xor add je add jo cmp and jae push add add jae and popa add add popa add add add jae add add add add add jb insl add insb add add bound push add je add add add xor add add add add inc add arpl jne insb add add inc add insb add insb add arpl imul add add inc add je inc add jb outsl add add outsb add add jne outsb add add push add bound push add je sub insb add dec add jns sub and insb add outsb add outsl add add outsb add add jne outsb add add add add arpl arpl add jae add add inc add inc add add dec add add dec add jbe add add je add add adc add and push add inc add inc add add add add add add add add dec add add add add sub cmp add add push add add outsb add je inc add add add add add inc add dec add dec add cmp add add jo add inc add insb add je imul and je push add add jne bound push add je and add je jb jns and ja imul and popa add data16 arpl je and popa add add add je push add add add outsl add add add add add add add push add dec add add add add bound push add je cmp add add add inc add add push add add add add bound push add je add jne bound push add je dec add add add add add popa add dec add jbe add add add jb dec add jbe add add je insb add sub and je bound insb add jne bound push add je add jne bound push add je push add je insb add sub and je bound insb add add popa add je insl add outsb add add add popa add je insl add outsb add add je insb add sub and je bound insb add add arpl push add add add arpl push add add add sub and je bound insb add jne bound push add je add outsl add insl add jne insl add add and inc add dec add and je bound insb add add arpl push add add dec add inc add and dec add dec add and sub je bound insb add add jb dec add jbe add add dec add inc add and dec add dec add and sub je bound insb add add popa add je insl add outsb add add dec add inc add and dec add dec add and je bound insb add jne bound push add je and dec add and je bound insb add add popa add je insl add outsb add add add popa add je insl add outsb add add add add insb add jne bound push add je add add popa add je insl add outsb add add add add dec add add add add popa add dec add jbe add add add jb dec add jbe add add add add insb add jne bound push add je add add jb dec add jbe add add add add dec add add add add popa add push add add add arpl jb imul imul and cmp add insb add jne bound push add je add add arpl jb imul imul add xor add inc add insb add je add add add jae and jb add outsl add add add outsb add ja popa add aas add add add add push add bound push add je and add je jb jns and popa add add add je push add add add add add add add outsl add add add jne arpl arpl add data16 insb add add add add add add add add add inc add insb add je imul and push add bound push add je and add je jb jns and ja add je and data16 imul add add add add dec add inc add add outsl add outsb add add add add add push add add jne bound push add je inc add jne outsb add add add add add bound push add je add add popa add je insl add outsb add add add add add add bound push add je add add jb dec add jbe add add add add add add add jb outsl add and je bound insb add jne bound push add je add add or add push add inc add add add add add and inc add dec add push add add pop add add add add bound push add je add add popa add je insl add outsb add add add add add add bound push add je add add jb dec add jbe add add add add and dec add push add dec add and sub sub sub je bound insb add jne bound push add je add add popa add je insl add outsb add add add add add daa add add add dec add add add add add add bound push add je add add jb dec add jbe add add add add add add add add add add add jne bound push add je inc add jne outsb add add add add dec add inc add add add push add sub add add add je jb imul and sub add add sub inc add jne outsb add add add add add add add daa add add add add add add add outsl add outsb add add add add add add add push add add add dec add add add add add add dec add add inc add add push add add add sub add add add je jb imul and sub add add sub inc add jne outsb add add add add add add add daa add add add add add add add outsl add outsb add add add add add add add push add add add dec add add add add add add push add dec add add add add outsl add jo add je jne jae cmp add add add add push add add add dec add inc add add outsl add outsb add add add add jb outsl add add outsb add add outsb add outsl add add add je dec add add add push add add outsb add outsl add add outsb add add jne outsb add add add add add bound push add je dec add data16 jb imul add jne bound push add je dec add add add add add push add push add and inc add and je bound insb add jne bound push add je dec add data16 jb imul add jne bound push add je dec add add add add jbe popa push popa jb jae inc je add add add movb add push add dec add add add add popa add add add push add add add add popa add add xor and dec add dec add push add add dec add dec add add add add add jb outsl add add outsb add add dec add inc add and dec add dec add and sub je bound insb add jne bound push add je dec add data16 jb imul and dec add dec add push add add dec add dec add add add add popa add add add dec add add add add add bound push add je dec add data16 jb imul add jne bound push add je dec add data16 jb imul dec add add add insb add jb popa add add add jne bound push add je dec add data16 jb imul dec add add add dec add add add add add bound push add je dec add data16 jb imul add jne bound push add je dec add data16 jb imul dec add add add insb add jb popa add add add jne bound push add je dec add data16 jb imul dec add add add add dec add add add add jb outsl add add outsb add add outsb add outsl add add add je dec add add add insb add jb popa add add add outsb add outsl add add outsb add add add add dec add add add add popa add add xor add outsb add outsl add add outsb add add add add insb add outsb add outsl add add outsb add add outsb add outsl add add add je dec add add add add add inc add dec add inc add add add add add add add bound push add je dec add data16 jb imul add jne bound push add je dec add add add add add add add add add add add add add inc add jb outsl add add outsb add add jne outsb add add add jbe popa push popa jb push popa jb outsl jbe add add pop pop jbe popa push popa jb popa je pop pop jbe popa push je push popa jb popa insb add pop pop jbe popa dec xor popa jb add jbe popa push je dec xor add jbe popa push popa jb popa jb dec outsl data16 add pop pop jbe popa push popa jb outsl je pop pop jbe popa push popa jb outsb add jbe popa inc outsl outsl insb push popa jb jne insb add add pop pop jbe popa push arpl je jne je add add jbe popa push popa jb popa je dec gs inc popa insb insb dec add add jbe popa push popa jb gs bound fs data16 add pop pop jbe popa push popa jb popa je dec gs inc popa insb insb dec fs data16 jbe popa push popa jb popa je dec gs push je add push add add add add add add add dec add add jbe popa dec bound popa jb pop pop jbe popa dec popa je dec gs inc popa insb insb add add pop pop jbe popa dec outsb push popa jb pop pop jbe popa push popa jb jae dec je add adc or add add or add add add push add add add jb insb add jbe add add add add jns add jb insb add jbe add add je insb add add add jbe add inc add insb add je imul and je push add add inc add push add add add inc add add outsb add add and ja imul and popa add data16 arpl je and popa add add add je push add add add outsl add add add add inc add push add add add inc add add outsb add add and popa add add add je push add add add add add add add outsl add add add jne arpl arpl add data16 insb add add add add add add add add add add add add add add add inc add push add add add inc add add outsb add add and ja add je and data16 imul add add add add add add add add add dec add add add push add add dec add add add add dec add add add pop pop jbe popa dec xor jb add add add add add add add add dec add add add add add add push add and inc add das add dec add add add add add add add add add dec add add add add add add add add add dec add add add add add add add add add dec add add add add add add add add add dec add add add add add add add add add dec add add add add add add add add add dec add add add add add add add add add dec add add add add add add add add add dec add add add add add add add add add add dec add add add add add add add add add add add dec add add add add add add add add add add add dec add add add add add add add add add add add dec add add add add add add add add add add add dec add add add add add add add add add add add dec add add add add add add add add add add dec add add add add add add add add add dec add add add add add add add add add dec add add add add cmp xor xor and push add add push add add cmp xor xor and push add add push add add add add add dec add add add add add add add dec add add add add add add add add add dec add add add add add add add add add dec add add add add add add add add add dec add add add add add add add add add dec add add add add add add add add add dec add add add add add add add add add dec add add add jne add jns add push add add add add outsl add add add je add add push add insb add je popa add je add add push add insb add add add push add je inc add arpl jne jae add add push add add add outsb add imul je js je add inc add jne outsb add add add je add add pop pop jbe popa dec popa je dec gs inc popa insb insb dec add adc add dec add add add add add add pop pop jbe popa push popa jb jne add jbe popa dec popa je dec fs popa insb insb dec add add jbe popa dec popa je dec gs push je add jbe popa push popa jb jb add jbe popa inc outsl outsl insb push popa jb add add jbe popa inc js je jb arpl add add add pop pop jbe popa push popa jb insl jo jno add pop pop jbe popa inc popa je push je add add add add dec add add add add add add add add add add dec add add add add add add add push add add add add add add add dec add add add add add push add add add add add push add add add push add add push add add push add add add add and add push add imul outsb add and je outsl add add add cmp and add add pop pop jbe popa push cmp je xor add add add add add bound add add adc add add adc add add add add add or add adc add or add push add outsl add dec add add add add add outsl add insl add add add add add jne imul imul add add adc add inc add jo popa add imul add add sbb add inc add jo popa add je insl add outsb add add add add add dec add inc add add add dec add dec add add add add je jb imul and sub xor sub add sub inc add jne outsb add add add add add add add daa add add add add add add add outsl add outsb add add add add add add add push add add add dec add add add add imul je dec add insl add add sbb add and inc add dec add and je bound insb add outsl add insl add add add add add add dec add dec add add add add add add add add add je popa add add add insb add jae add add add push add add add add add add bound push add je dec add data16 jb imul add add add outsb add add add add add and and popa add add add add add bound push add je dec add data16 jb imul add add add jne je and cmp cmp add add add and and popa add add add add add bound push add je dec add data16 jb imul add add jae and insb add imul add add add add add outsb add add add add bound push add je dec add data16 jb imul add add arpl push add inc add add add add add add add add add add add arpl push add inc add add jmp inc mov sub lea add add add add inc add add push add add add add bound push add je add jne bound push add je push add je insb add sub and je bound insb add jne bound push add je dec add data16 jb imul add add jae and add add add add add add add add add add bound push add je dec add data16 jb imul add add add outsb add add add add add add add add add add add bound push add je dec add data16 jb imul add add add jne je and inc add and push add push add insb add sub and pop add add je dec add insl add pop add add add add add and daa add add add add inc add jb jae je dec add insl add pop add add add add add add add add add add dec add add add dec add insl add pop add add push add add add arpl push add jne insb add add insl add sub and je bound insb add add je imul add add je imul push add je insb add sub and je bound insb add jne bound push add je dec add data16 jb imul add add add outsb add and je bound insb add jne bound push add je dec add data16 jb imul add add add jne je sub and je bound insb add jne bound push add je dec add data16 jb imul add add jae sub and je bound insb add outsl add insl add add jne imul imul and add add add add add add add add add add outsl add add outsl add insl add add push add add outsl add insl add add add add add push add dec add add add add bound push add je and dec add dec add push add add dec add dec add add add add add add jo popa add je insl add outsb add add dec add inc add and dec add dec add and je bound insb add add je imul and dec add and je bound insb add add popa add je insl add outsb add add add popa add je insl add outsb add add add add insb add add je imul add add popa add je insl add outsb add add add add dec add inc add and dec add dec add and sub je bound insb add outsl add insl add add dec add inc add and dec add dec add and sub je bound insb add add arpl push add add dec add inc add and dec add dec add and je bound insb add jne bound push add je dec add data16 jb imul and dec add and je bound insb add add arpl push add add add arpl push add inc add add add insb add jne bound push add je dec add data16 jb imul add add arpl push add inc add add add dec add add add add outsl add add outsl add insl add inc add add add insb add jne bound push add je dec add data16 jb imul add outsl add insl add inc add add add dec add add add add arpl je imul add add je imul dec add add add insb add jne bound push add je dec add data16 jb imul add add je imul dec add add add dec add add add add bound push add je add jne bound push add je dec add add add insb add jne bound push add je dec add data16 jb imul add jne bound push add je dec add add add add dec add inc add push add add pop add add add add bound push add je dec add data16 jb imul add add add outsb add add add jo add add add inc add add add outsb add add add add bound push add je dec add data16 jb imul add outsl add insl add inc add add add jbe popa push popa jb jae inc add add add add add add add add add adc add jae arpl push add add popa add add add or add dec add arpl imul add add add add inc add insb add je imul and push add push add add add jb and push add arpl outsl add add add imul and popa add data16 arpl je and popa add add add je push add add add outsl add add add add add add arpl push add add add jb and add insb add je add add add add add inc add insb add je imul and push add push add add add jb and ja add je and data16 imul add add add add add arpl push add add popa add cmp add add imul add add add add inc add add push add add add add push add add popa add add arpl push add add popa add add add add add jb outsl add and je bound insb add arpl push add add popa add add jo add and push add add add add add add add popa add add add je sub pop add add add push add add popa add pop add add push add push add add popa add pop add and xor sub sub sub and add add add add add sub sub add add inc add add add push add add and inc add and je bound insb add arpl push add add popa add add arpl push add add popa add cmp add adc add push add push add add popa add add add js add push add dec add inc add add add add push add dec add add add add push add add popa add and push add inc add inc add add add add push add add popa add add arpl push add add popa add cmp add add add push add insl add jae je add dec add add add add add add add je add add add push add add add add add add outsb add add and add popa add je imul jae arpl push add add popa add add add or add xor xor xor xor add add sbb add popa add je imul jae add add je add add add xor sub add or sub add add add add add or add or add adc add adc add sbb add sbb add and add dec push inc popa je push gs jb dec imul dec add add add dec add insl add add add adc add dec add jae je dec add insl add add add or add inc add outsb add add add add or add push add add add add add adc add push add add outsb add insl add add add adc add push add jae jae ja outsl add add add add add outsl add and popa add add add bound outsl add je and je outsl add add add add add add add jae and push add popa add push add add imul and dec add add add add add add inc add add add outsl add and jae jne jb add add add add add add add add add jae and push add popa add arpl add and inc add arpl outsl add outsb add add add add add push add inc add dec add push add add outsb add add and jae jne arpl arpl add jae data16 insb add add add add add add add add add popa add insb add and je outsl add add add add add add add arpl push add add arpl arpl outsl add outsb add add add add and arpl jne jb jb add je and ja popa add and add add add add jns and popa add outsl add add jb and jne jae add add add adc add push add dec add inc add add add add add add add add jb outsl add and je bound insb add add arpl push add add add add dec add push add and sub sub sub pop add add je dec add insl add pop add add add add add and daa add add add add inc add jb jae je dec add insl add pop add add add add add add add add add add dec add add add dec add insl add pop add add add add push add sub add add add add add add add add add jae outsb add ja imul add push add add add pop jbe popa inc jo xor add pushf add add inc add add push add add dec add jae je dec add insl add pop add add add add add and daa add add add add inc add jb jae je dec add insl add pop add add add add add add add add add add dec add add add dec add insl add pop add add push add add add arpl push add jne insb add add insl add add add adc add push add dec add inc add add add add add add add je jb imul and sub aaa add add sub dec add js sub push add insb add add imul je sub pop add add add popa add push add add push add popa add push add inc add sub aaa add add add add add add add daa add add add add add add add popa add sub push add insb add add imul je sub pop add add add popa add push add add push add popa add push add inc add sub aaa add add add add add add add push add add dec add ja dec add add add add add add push add dec add add add add popa add push add add add add add add popa add je insl add outsb add add je insb add add adc add inc add insb add add add inc add add add add add popa add je insl add outsb add add je insb add add test add push add dec add inc add add add add add add add add je jb imul and sub xor sub add sub inc add jne outsb add add add add add add add daa add add add add add add add outsl add outsb add add add add add add add push add add add dec add add add add add add push add dec add add add add jo popa add je insl add outsb add add add add add inc add add inc add add inc add add add add add or add or add adc add adc add sbb add sbb add and add and add xor add cmp add or add push add add add add add add jb add je add add add inc cmp js test adc enter add inc add add inc add add push add add add add push add dec add add add add bound push add je dec add data16 jb imul add add pop add add inc add add push add add add add bound push add je dec add data16 jb imul add jne bound push add je dec add data16 jb imul dec add add add add add add add jb outsl add and je bound insb add jne bound push add je dec add data16 jb imul add add bound add and push add inc add inc add add add add add add add bound push add je dec add data16 jb imul add jne bound push add je dec add data16 jb imul dec add add add add add pop add add add add add add or add or add sbb add and add xor add xor add push add dec add inc add add add add push add dec add add add add arpl je imul add add adc add push add arpl je imul dec add add add add add je imul push add je insb add add add push add add inc add add push add add add add push add dec add add add add arpl je imul and push add inc add inc add add add je imul dec add add add add add add add add inc add add push add add add add arpl je imul add add je imul dec add add add add add add jb outsl add and je bound insb add add je imul and add inc add add add dec add push add and sub sub sub je bound insb add add je imul add add je imul dec add add add add inc add add push add add add add arpl je imul add add arpl push add inc add and je bound insb add add je imul add arpl push add add popa add add add and add and inc add outsl add and je bound insb add add je imul add add inc add add add dec add push add and sub sub sub je bound insb add add je imul add add arpl push add inc add add add add daa add add add dec add add add add add add arpl je imul add arpl push add add popa add sub cmp add add push add dec add add add add arpl je imul and dec add inc add add dec add dec add add add add jb outsl add add outsb add add dec add add add add arpl je imul add add je imul dec add add add insb add outsb add outsl add add outsb add add add je imul dec add add add add daa add add add outsb add add add add add add arpl je imul add add jb dec add jbe add add add add add add add push add sub sub sub je bound insb add add je imul add add je imul dec add add add add add add add push add dec add inc add add add add arpl je imul add add je imul dec add add add outsl add outsb add add add add jb outsl add add outsb add add outsb add outsl add add outsb add add add add push add add outsl add outsb add add inc add jb outsl add add outsb add add add add add add arpl je imul add imul jb popa add add and je bound insb add add je imul add popa add push add add add je inc add jne outsb add add add add je bound insb add add je imul pop add add dec add js inc add popa add add sub pop add add add arpl je imul pop add add dec add outsb add jb popa add add sub and inc add and inc add popa add add popa add imul add add add add arpl je imul add popa add inc add popa add add and je bound insb add add je imul add jb add je imul inc add je add and je bound insb add add je imul add arpl push add add popa add sub and je bound insb add add je imul add add popa add je insl add outsb add add add add add add arpl je imul add add jb dec add jbe add add add add add add push add push add and inc add and je bound insb add add je imul add add je imul dec add add add add add arpl je imul add imul jb popa add add and je bound insb add add je imul add popa add push add add add je inc add jne outsb add add add add je bound insb add add je imul pop add add dec add js inc add popa add add sub pop add add add arpl je imul pop add add dec add outsb add jb popa add add sub sub and je bound insb add add je imul add popa add inc add popa add add and je bound insb add add je imul add jb add je imul inc add je add and je bound insb add add je imul add arpl push add add popa add sub and je bound insb add add je imul add add popa add je insl add outsb add add add add add add arpl je imul add add jb dec add jbe add add add add add add add add add popa add imul and sub sub sub inc add jne outsb add add add add jb outsl add add outsb add add outsb add outsl add add outsb add add add add add and pop add add add arpl je imul pop add add dec add js push add add add je inc add jne outsb add add add add outsb add add add add add add arpl je imul add imul jb popa add add add add cmp add add add sub and inc add add add add add add add arpl je imul add popa add inc add popa add add add add add add add add add add outsb add add add add add add arpl je imul add arpl push add add popa add sub and cmp add add add add daa add add add outsb add add add add add add arpl je imul add add popa add je insl add outsb add add add add add add (bad) aad in dec lods test loope xor mov pop ret dec xchg inc jae sbb add in add add add push add add and inc add and sub pop add add add arpl je imul pop add add dec add js inc add popa add add sub pop add add add arpl je imul pop add add dec add outsb add jb popa add add sub and inc add push add and sub and je bound insb add add je imul add popa add inc add popa add add add add inc add add and je bound insb add add je imul add jb add je imul inc add je add add add add add add jb jb outsl add add pop pop jbe popa push je push cmp add add add add sub add add add or add sbb add and add adc add jae add je imul imul sbb add push add arpl je imul je imul add add add add add outsl add add imul inc add je add add add add dec add add data16 add add mov add push add dec add inc add add add add arpl je imul add add je imul dec add add add add add arpl je imul add add je imul push add je insb add sub and je bound insb add add je imul add add popa add je insl add outsb add add add add add add arpl je imul add add jb dec add jbe add add add add add add arpl je imul add jb add je imul inc add je add and je bound insb add add je imul add jb add je add add sub and je bound insb add add je imul add outsl add add imul inc add je add and je bound insb add add je imul add outsl add add imul inc add add add and add and inc add dec add and je bound insb add add je imul add add nop add add add push add push add and inc add and je bound insb add add je imul add add je imul dec add add add add add arpl je imul add add je imul push add je insb add sub and je bound insb add add je imul add add popa add je insl add outsb add add add add add add arpl je imul add add jb dec add jbe add add add add add add arpl je imul add jb add je imul inc add je add and je bound insb add add je imul add jb add je add add sub and je bound insb add add je imul add outsl add add imul inc add je add and je bound insb add add je imul add outsl add add imul inc add cmp add add and add and inc add dec add and je bound insb add add je imul cmp add or add push add inc add add nop (bad) (bad) lcall mov stc add inc popa je push gs jb add jo add inc add insb add je imul and je push add add inc add push add dec add and add je jb jns and ja imul and popa add data16 arpl je and popa add add add je push add add add outsl add add add add add push add inc add add dec add add outsb add add and popa add add add je push add add add add add add add outsl add add add jne arpl arpl add data16 insb add add add add add add add add add inc add insb add je imul and push add inc add add dec add add outsb add add and ja add je and data16 imul add add add add dec add inc add add add inc add sub add add add je jb imul and sub add add sub inc add jne outsb add add add add add add add daa add add add add add add add outsl add outsb add add add add add add add push add add add dec add add add jmp adc enter add push add dec add inc add add je bound insb add add jb dec add jbe add add add pop add popa add dec add jbe add add je insb add pop add add add add add add add add add add je bound insb add add je imul pop add add push add arpl je imul push add je insb add pop add add push add add add add add mov add push add dec add add add add popa add dec add jbe add add dec add inc add and dec add dec add and je bound insb add add je imul and dec add and je bound insb add add jb dec add jbe add add add jb dec add jbe add add add add insb add add je imul add add jb dec add jbe add add add add add add add add pop pop jbe popa inc jb push popa jb pop pop jbe popa inc jb inc outsl jo add add pop pop jbe popa inc popa je push popa jb add add add add and add push add add add add add add or add adc add adc add sbb add adc add inc add jne jb jae add inc add add add add inc add jne jb jae add add add add add popa add outsl add add adc add inc add jb jb imul insb add insl add add add add inc add jb jb add je dec add data16 jb add add add add add add insb add insl add add adc add pop add popa add dec add jbe add add add dec add inc add add add outsl add jb jae add add add add je jb imul and sub xor sub add sub inc add jne outsb add add add add add add add daa add add add add add add add outsl add outsb add add add add add add add push add add add dec add add add add add push add dec add add add add jne jb jae add add add add js test adc enter add sarb add add mov inc add push add rcrl inc popa je push gs jb pop dec outsb imul add add inc add add add add add add add add add add add add push add add add jbe dec add push add pop add add add add bound jne outsl add dec add push add push add inc add add or add xor add add add add add add add xor cmp add add or add add add add add add add add add add add add add add add dec add dec add dec add add push add outsb add jne dec add ja imul add add add add add pop add js inc add popa add imul add dec add pop add push add add sbb add push add add add jae je dec add popa add data16 add add sub add inc add add bound dec add inc add inc add imul add ja imul inc add add add sbb add add insl add inc add arpl jno jns jp dec add arpl inc add add add add jne dec add dec add push add push add popa add add add add add push add pop add jo inc add add add dec add jp dec add dec add add add add add push add add jns add add or add add pop add arpl dec add add add add add push add add pop add bound data16 add add dec add jo add push add imul add add add push add add jne dec add add ja inc add dec add outsb add pop add add or add jno outsl add add add add add jp jbe imul add insb add dec add data16 je dec add add add adc add pop add jno insl add add add push add add add add add push add inc add push add jns dec add js inc add push add dec add push add outsb add add add push add add dec add add je ja push add imul sbb add jp imul add dec add inc add js dec add push add add add dec add jbe dec add pop add add dec add outsb add push add add add add add push add push add ja data16 outsl add push je arpl arpl dec add jno jns dec add add add adc add inc add jne outsb add pop add add dec add add add add add imul add dec add js add sbb add push add add dec add push add inc add popa add dec add add add and add inc add add jp push add inc add popa add jbe jbe push add jb push add add add push add add imul add jne push add jns dec add jae add push add add jno push add add popa add push add add add add add push add jne push add inc add inc add inc add add add and add outsl add je inc add insl add inc add push add push add push add jns add add or add push jne inc add dec add add add or add pop add add push add add add add insb add push add je inc add add add adc add inc add dec add push pop add add add add add add push dec add data16 bound inc add add add add add dec add jbe push add add add inc add add add adc add dec add jno push add ja inc add popa add add add add inc add dec add add jb imul jo add add or add xor aaa add xor add add push add add add add add add add add dec add inc add add je jns push add add xor add dec add popa add jne ja outsl add add inc add dec add jb inc add imul add push add dec add add add add add add add add add add add add add push add je push add outsl add push add push add imul data16 add add add add push add push add popa add jo dec add inc add jne inc add insl add add add push add add add add add add add add xor xor xor add add adc add inc add jp insb add dec add inc add dec add add add add add imul add add push add add push add and add push add inc add push add add add dec add add jno pop add imul push add add push add push add js inc add ja jbe dec add add add add add add add add add push add add dec add jae inc add jp pop add inc add add push add add dec add dec add push add add adc add jne pop add inc add add jbe dec add add add add jne jo push add add popa add add add add push add arpl add add add add add outsl add jbe push add inc add push add add add add je inc add bound push add jb jno jbe push add add add add jne jp imul add arpl bound jbe js jo dec add add and add insl add imul push add jns outsb add dec add push add add imul add and add inc add add push add dec add dec add je inc add jae jb dec add add add add add add push add outsb add push add jno insb add jo popa add add add add jbe push add add ja push add jns dec add inc add data16 arpl jo inc add add add add imul add inc add push add push add push add data16 push add add ja add sbb add arpl add ja jb push add pop add insb add inc add push add add add jo jo arpl arpl dec add inc add add jo add add and add add inc add js add data16 push add arpl popa add add add add adc add push add push push add dec add add sub add bound push add inc add push push add add push je dec add dec add add js popa add add add add add push add add dec add dec add add adc add jns inc add insb add inc add add add add add jp push add jbe add inc add inc add jo outsl add add add add add add push add pop add inc add jo inc add push add pop add add add push add add push add outsl add dec add add add sbb add push add inc add add outsb add pop add add dec add add add add je dec add add push push add pop add jo add add add add push inc add dec add popa add inc add dec add imul add push add outsb add add or add xor xor xor cmp add add add add push add je inc add insl add jns dec add push add insb add je add add add add dec add add dec add jbe jbe push add jae outsb add jb dec add dec add add push add push add outsb add jne dec add imul or add cmp aaa add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add push jne inc add dec add add sbb add arpl dec add dec add push add add inc add outsb add jp add add sbb add dec add jb inc add data16 pop add push add add sbb add inc add push add push add ja add push add add add push add add push add insb add add add sub add jno insb add push add push add data16 add dec add imul add jo outsl add dec add add and add add push add dec add inc add add add insb add push add add add or add inc add data16 inc add add add sbb add inc add push add pop add je dec add jbe dec add add add add add add push add arpl add jb push add add add sbb add jbe ja inc add inc add add dec add dec add imul add sub add dec add add add add data16 add inc add push add dec add add add add add add jns insl add add je push add dec add pop add jno dec add push add bound add and add push add push add dec add bound add pop add insl add push add imul add add push add add jne pop add push add dec add pop add je add je jo add adc add outsb add jne dec add imul add js add push add add push dec add add inc add add add add add add push add pop add jo insl add dec add insl add add add add insb add imul add bound add add adc add push inc add insb add push add add insl add add add add add dec add inc add inc add add adc add jp jns insl add dec add imul add adc add push add arpl jae jbe insl add add add add add add add add add add add push add push add dec add dec add ja dec add add add add jne jp imul add add add add add js jns ja inc add data16 push add add add jb add add add pop add jno jae dec add jne dec add outsb add popa add inc add push add push add add add add outsb add push add inc add push add js jbe inc add jae jp push add add sbb add inc add jp jb push add pop add inc add dec add je add push add add push add add add dec add js dec add popa add add add add add dec add outsl add pop add add outsl add push add push add imul data16 add add push add add add add add add add add dec add push add outsb add imul add imul add adc add insb add jne insb add jp imul add sbb add ja jae inc add jb je inc add dec add inc add outsb add add add push add add add push add add push add insb add add adc add dec add pop add dec add push add add add add bound insb add jo push add dec add jo ja add add sbb add push add dec add add jbe inc add dec add add add add add add add add add add add add add add dec add jno inc add imul add push add inc add add add add add dec add push add dec add jbe jo dec add dec add dec add dec add outsb add add push add add push add add add dec add js dec add pop add add add add add dec add outsl add pop add add outsl add push add push add imul data16 add add push add add add add add add add add add add add add sbb add outsb add outsb add jae add inc add push add pop add add adc add inc add arpl push add add add add add add inc add dec add add bound add jb add sbb add inc add jbe push add jp push je jp jbe dec add add add add insl add add add dec add add or add xor xor xor xor add add or add xor xor add add add add add push add jae jp inc add add dec add push add add jae arpl dec add add push add add dec add pop add push add jne push add jno add sub add imul add push add data16 insb add inc add dec add arpl js jns dec add dec add add add and add insl add add add imul add outsl add push add inc add push add add add add add bound dec add dec add insl add insb add bound inc add add sbb add add jbe push add dec add dec add add dec add add add add inc add add jb push add jns inc add add add sbb add insl add arpl inc add outsb add jp ja push add inc add dec add add add add outsl add dec add inc add je inc add pop add add add add add jbe push add jae push add push add push add inc add add adc add inc add bound jae push add inc add push add add add add dec add jno js arpl outsl add inc add dec add bound jno push push add add and add pop add inc add push add dec add add push add dec add add add add xor add add dec add insl add imul add dec add dec add inc add inc add push add dec add add insb add push add add add add add push add push add dec add inc add add add je pop add add add or add add add add add add add add add add add add add add add xor xor xor add add or add add add add add add add add add jns add popa add dec add add add push add add jbe outsl add pop add insb add add add add push add dec add add push add add je jb inc add push add add add add jne add push add jb jp dec add outsb add add add push add add add add add add add add add dec add push add add inc add add outsb add add add add add add add add add add add add add add add data16 add add add add add add insl add add add add add add add xlat add add add add out add add add add add add add add add push inc add data16 dec add add push add add add add add dec add push add pop add add add add add add push add add jno outsb add inc add inc add push add inc add add add add add dec add inc add add jne popa add push add dec add pop add je add je jo add sbb add inc add push add jns dec add add push add add add adc add push add dec add bound inc add dec add add add push add popa add jno insl add dec add insb add push add add add add add add push add push add push data16 add push je arpl arpl push add add dec add add add sbb add insb add add jae dec add push add js push add push add add add and add dec add push add dec add add inc add jo jo outsl add add add add sbb add push add outsl add push add dec add popa add push push add add add add add push add bound jae inc add popa add jae push add inc add add add add add add imul imul add outsb add add add add add dec add pop add add push add jbe push add inc add add add add add arpl popa add ja push add jns dec add inc add jae push add jo push add add add data16 jno dec add pop add push add add add add add add dec add imul add jno outsl add add dec add add push add add push add jae push add inc add js dec add add or add pop add jno inc add add push add add add add inc add add adc add push dec add jbe dec add outsb add add add sbb add popa add dec add dec add push add outsl add insl add add add add push add jb push add outsb add add add add add jp dec add imul inc add outsb add add push add add jp dec add dec add inc add add jne outsl add push add add xor add jne pop add inc add add jbe dec add inc add jo push add insb add push add inc add jne dec add add add adc add push add outsb add push add inc add add add adc add dec add add add add add add adc add jo inc add js dec add push add add add add push add outsl add insl add dec add add add sbb add add xchg add add add add add jbe popa push bound outsb add jbe popa push popa jb fs jbe popa push popa jb outsl add jbe popa push popa jb outsl jb gs add jbe popa push popa jb outsl jb outsb imul add add add add add add add or add or add adc add adc add pop pop jbe popa inc jb inc outsl outsb jae jb arpl add jbe popa inc jns je add pop pop jbe popa dec xor jb add jbe popa dec xor je add inc add add add add add add and add push add or adc add or add add pop add mov add add add add and add add add add add add add add add add xor add and add add add add and add add add and add or or add add and push add add add inc add add add or add add and add add or or add add pop add and add add add add or add pop add or add or or add add add add add add add add add add add add add add or add add add add add add add add add add add push add add inc add add add add push add add add add add add add add add add add or add or add push add dec add add add or add push add inc add add add add add add add add add add add add add dec add add add add add dec add dec add add add add add add push add add add add add add dec add add add add add add add pop pop jbe popa push gs insl add add pop add imul outsl add outsl add je add add add add inc add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add push add add add add add add add add add add add push add add inc add dec add push add and inc add push add push add add add add add pop add pop add add add add add push add inc add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add cmp add pop pop jbe popa push popa jb insl jo add add jbe popa push popa jb insl jo add add jbe popa push jne dec ja gs add pop pop jbe popa push jne inc js je xor add jbe popa dec outsb push je push popa jb add pop pop jbe popa inc gs js je xor add add dec jo outsb push jb arpl jae pop pop jbe popa dec jae je imul pop jbe popa inc gs add add jbe popa push je inc imul pop pop jbe popa inc gs ja gs add pop pop jbe popa push dec xor add or or add add or add or adc add add adc add or and add add and add or gs gs xor cs insb add add add inc add add jl push add or je jmp push mov call jmp add add fs jo xor cs insb add add adc add push gs outsb je imul insb push add add dec add add add mov push add or je jmp push mov call jmp add add add add je arpl imul dec add add add xchg into push add or je jmp push mov call jmp add add add add add add add add add inc add push add push add add add or add add js add add add add add add add add add jae arpl jb imul add push add add add add insb add add add jae jae je popa add je jne jo add push add add imul inc add insb add add jae add add inc add add je add push add add je add add push add jb add je push add je push add popa add add add add add add pop push imul push jns je insl xor pop popa fs jo xor cs insb add add push add add addr16 jo outsb dec gs js add add add add add add mov add add add add or je jmp push mov call jmp add add add push gs insb outsl jae dec gs loopne inc add inc add add lods into push add or je jmp push mov call jmp add add add add addr16 jb popa je dec gs js add add add add add mov add add add add or je jmp push mov call jmp add add add add addr16 gs popa insb jne inc js add loopne inc add add add add (bad) into push add or je jmp push mov call jmp add add add add addr16 outsb jne dec gs js add add add push add jb jbe add and xor dec add add add add add xor xor add add loopne inc add add ror push add or je jmp push mov call jmp add add add add addr16 jne jb push popa insb jne inc js add add loopne inc add add fmul push add or je jmp push mov call jmp add add add add addr16 gs gs dec gs add add add add add call add add add add or je jmp push mov call jmp add add add add add add add add add adc add and add add add add add add push add jb imul add push add add add add insl add add push add outsb add add add add jne outsb add jae add push add add je gs imul add je inc add add hlt into push add or je jmp push mov call jmp add add or add add or add dec add add add add add push add or je jmp push mov call jmp add add add xor cmp dec add add add add or push add or je jmp push mov call jmp add add add inc add add sbb push add or je jmp push mov call jmp add add add add push jae push outsl imul jb jbe insb gs add dec add pop inc add add and push add or je jmp push mov call jmp add add add add imul jb jbe insb gs popa insb jne inc add add add pop inc add add xor push add or je jmp push mov call jmp add add add add outsb push jb arpl jae outsl imul add add add inc add add cmp push add or je jmp push mov call jmp add add add add je jne jb outsb je jb arpl jae add pop mov js inc add add dec iret push add or je jmp push mov call jmp add add add add pop push imul push jns je insl xor pop push jae jb xor fs insb add add add xor add add or popl add add push iret push add or je jmp push mov call jmp add add add add pop push imul push jns je insl xor pop imul gs xor cs dec dec add add pop add add insb inc imul add inc add add pusha iret push add or je jmp push mov call jmp add add push add add add add add add add add add add add jb add add add add add add add add xor add push add inc inc dec push dec dec add xchg add add add add add adc je dec add add add add add add add add add add insl add add add add add add add add add push add add add jbe popa inc jo xor add pop pop jbe popa push jne xor add pop pop jbe popa push cmp jb add jbe popa push popa jb gs popa jb add jbe popa inc outsl outsl insb push je add add pop pop jbe popa inc jb push outsb insb outsl arpl add jbe popa inc jb dec outsl arpl add add add xor aaa add add add jbe popa inc gs add add sub add add sub add add add or add sbb add and add pop mov cwtl popl add add insb iret push add or je jmp push mov call jmp add add add add add popa add imul add push add imul insb add add add inc add add dec add push add inc add inc add add arpl jb outsl add outsl add je pop add add jne jb imul and inc add outsb add add add add and add push add inc add add popa add insb add dec add je imul add add add add xor dec add add add add push add inc add add push add pop add imul outsl add outsl add je pop add imul outsl add jae pop add jne jb jb add je push add jb jae imul pop add outsl add add imul pop add jns jae je add add adc add inc add popa add insb add dec add inc add add jbe popa inc outsl jo inc jns gs add add add add add add jge add adc add push add add push add je push add add add jo add add add add add pop add add add add add xor inc add add add add add jae add push add outsl add imul add or add push add jae je popa add add add add add add add add add add add add jo jo inc add je popa add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add pop pop jbe popa push je dec xor add add xor xor add add add add xor add add add add xor cmp add add add add xor xor add add or inc add add add add aaa add add add add add add add xor add xor add add add add add add add add add add xor add add add aaa add add add add add add add add add add add add add add xor add xor add xor add xor add xor add xor add aaa add add add add add add add add add add add add add add add add add add add add add add add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add xor add add add add add add add aaa add add add add add add add add aaa add add add add xor add xor add xor add add add add add add add add add add xor add add add add add add add add add add add add xor add add add add add add aaa add add add add add xor add xor add xor add add add add add add add add add add aaa add add add add xor add xor add xor add add add add add add add add add add add add add xor add aaa add add add add add add add xor add xor add add add add add add add add add add add add xor add xor add add aaa add add add add add xor add xor add add add add add add add add add add add aaa add add add add xor add xor add xor add add add add add add add add add add add add aaa add add add add add add add xor add xor add add add or xor add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add aaa add add add add add add add aaa add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add aaa add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add aaa add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add xor add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add aaa add add add add add add aaa add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add aaa add add add aaa add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add aaa add add add add add add add add add add add add add add add add add add add add add add aaa add add add add add add add add add add add add add add add add add add aaa add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add aaa add add add add add add add add add add add add add add add add add add add add add add add add aaa add add aaa add add add add add add add add aaa add add add aaa add add add add add add add add add add add add add add add add add aaa add add add add add add add add add add add add add add add add add add add add aaa add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add aaa add add add add add add add add add add add add add add add add add add aaa add add add add add add add add aaa add add add add add add add add add add add add add add add add add add add add add add add add add add add add add aaa add add add add add add add add add add add add add add add xor add add add add add add add add add add add add add aaa add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add aaa add add add add add add add add add add add add add add add add add add add aaa add aaa add add add add add add add add aaa add add add add add add aaa add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add aaa add add add aaa add add add add add add add add add add add add add add add add add add add aaa add add add add add aaa add add add add add add add add aaa add add add add add add add add add add add add add add add add add add add add add add aaa add add add aaa add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add aaa add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add aaa add add add add add add add add add add add add add add add add add add aaa add add add add add add add add add add add add add add add add add add add add add add aaa add add add add add add add add add add add add add add add add add add add add add add aaa add add add add add add add add add add add add add add add add add aaa add add add add add add add add add add add aaa add add add add add add add add add add add add add add add add add add add add aaa add add add add add add add add add add add add add aaa add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add aaa add add add add add add add add add add add add add add add add add add add add add add aaa add add add add add add add add add add add add add add add add add add add add add add add add add add add add add xor add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add xor add add add add add add add add add add add add add add add add add add add add add add add add add add add add add xor add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add xor add add add add add add add add add add add add add add add add add add add add xor add xor add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add xor add add add add add add add add add add add add add add add add add add add add add add add add add add add add add xor add add add add add add add add add add add aaa add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add xor add add add add add add add add add add xor add xor add add add xor add add add add add add add add add add xor add xor add add add add add add add add add add add add add add add xor add add add add add add add xor add xor add xor add add add add add add add add add add add add add add add add xor add xor add aaa add add add add add add add aaa add add add add add add add add add aaa add add add xor add xor add aaa add add add add add add add add add add add aaa add xor add add add aaa add xor add add add add add add add add add add add add add add add add add xor add xor add aaa add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add xor add xor add xor add aaa add add add add add add add add add add add aaa add add add add add xor add xor add xor add add add add add add aaa add add add add add add aaa add add add add add add add add add add add add add xor add xor add aaa add add add add add add add add add add add add add add add add add add add xor add xor add xor add add add add add add add add add add add add aaa add add add add add add add xor add add add add add add add add add xor add xor add add add add xor add add add aaa add add add add add add add add add add add add add add add add add add add xor add xor add add add add add add add add add add add add aaa add xor add add add add add add add add add add add add add add xor add xor add xor add aaa add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add xor add xor add xor add aaa add add add add add add add add add add add add add add xor add xor add add add add add add add add xor add add add add add add add add xor add add add xor add xor add add add add add add add add add add add add add add add add add add add add add add add add add add add xor add xor add add add add add add add add add add add add add add add xor add xor add aaa add add add add add add add add aaa add add add add add add add add add add add add add xor add xor add aaa add add add add add add add aaa add add add add add add aaa add xor add add add aaa add xor add add add add xor add add add add add add add add add add xor add xor add add add add add add add add add add add add add add add add add add add add add add add add add add add xor add xor add add add aaa add add add add add add add add add add add xor add xor add xor add add add add add add add aaa add xor add add add aaa add xor add add add add add add add add add add add add add add xor add xor add xor add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add xor add add add add add add add add aaa add aaa add aaa add aaa add aaa add aaa add add add add add add add add add aaa add add add add xor add add add add add add add add add add add xor add xor add xor add add xor add add add add add xor add xor add xor add xor add aaa add aaa add add add add add add add add add add add xor add aaa add aaa add xor add add add aaa add add add add add add add add add add add add add add aaa add add add aaa add aaa add aaa add aaa add aaa add add add add add add add add add add add add add add add add add add add add add add add add add add add add xor add xor add add add add add add add aaa add add add add add add add add add add add add add add add add add add add add add xor add xor add add add add add add add add add add add add aaa add add add add add add add add add add add add xor aaa add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add xor add add add add add add aaa add add add add add add aaa add add add add add add add add add add add add add xor add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add xor add add add add add add add add add add add xor add add aaa add add add aaa add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add xor add aaa add add add add add add add add add add add add add aaa add add add add add add add add add add add add add add add add add add add xor add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add push add add push add js dec add pop add add add add add dec add outsl add pop add add outsl add push add push add push add dec add add add add add add jno push add insb add push add inc add add jp add adc add jbe bound jp push add push add push add pop add add add add add add add push add add add add add add add add add add add add add add push add jns dec add push add inc add arpl add adc add dec add push jb push add push add add add and add js add pop add arpl dec add add push add imul push add add add add js data16 add push add je arpl arpl dec add jno jp dec add dec add add add add dec add push add add add push add inc add dec add add js inc add add add add add push add dec add jne popa add push imul push add inc add dec add add add add pop add add dec add push add push add jp pop add add je push add dec add add add add add dec add jno dec add dec add arpl inc add outsb add dec add dec add add add add add xor add add add add add push add add dec add push add jns dec add inc add jae jae add add add add jo push add add inc add inc add add dec add push add imul add add pop pop jbe popa push je xor arpl add add jbe popa dec imul je add add pop pop jbe popa push dec xor jb sub ret rorb mov jae lret fmuls (bad) in mov lods in aad mov roll outsl add aas enter dec xor xchg lods mov repz xor or stos add xchg dec jo imul lods xor or stos add xchg push push arpl insb insb xor add add lods xor or stos add xchg inc jb jbe xor add jbe xor add jbe xor add lods xor or stos add xchg inc imul repnz lods xor or stos add xchg or jl dec xor add (bad) aad in dec lods test loope xor push sub aaa ljmp test cwtl mov roll xchg fsub inc mov jns mov sub aas add add jne push arpl jae add and dec push inc popa je push gs jb push jne je insl gs imul push gs jb add jae (bad) (bad) (bad) (bad) (bad) (bad) (bad) decl add xor xor or add add add dec add inc cmp js add add add add add nop add add std add add add add add add add add add add add add add add add test sbb add add add add add je imul xor nop push add add add add add pop adc add add insb add arpl push add add insl add add call add add add add add add arpl push add add popa add add add add add adc add add add add add push add add add add jae call add add add add add add add add jae jae add add add sbb add add add add add add add add add add push add bound push add je and dec add jae je pop add add adc add add add insl add add xor nop add add add add add add add add add add test sbb add add add add add inc add je popa add insb add add add add add add add outsb add xor add pusha daa add add add pop adc add add add add add add add add push add sbb add add inc add add add add outsb add xor add inc add add add add add pop adc add add add add add add add add adc add add inc or add add add add popa add je insl add outsb add add add adc add add add add add add pop add and add enter sbb add add add add add add add pop adc add add add add add add add and add js add sbb add add add jb and dec add jbe add add add test sbb add add add add add je imul xor push add add add sbb add add add js je xor add fadds add faddl add or add push add bound push add je dec add add add sbb add add add js je xor add sbb add sbb add add add popa add je insl add outsb add add je insb add add add add sbb add add add js je xor add cwtl pop add lock add add add jne bound push add je push add je insb add add add pop adc add add js je xor add call add add add add push add add add jb dec add jbe add add je insb add pop add add test sbb add add add add add je imul xor cmp add pop add add add add adc add add add add add add add add add add add cmp add lock add add add add add add add add add add add add add test add rolb add add add add and add add add pop adc add add add add add add add xor add dec add add add rolb add add add outsl add add add pop adc add add add add add add push add dec add add add add add add add add add add adc add add add add add add add add add add add lock add add add add add adc add add add add add add add add or add add test add rolb add add add je add add add add add add outsb add xor daa add or add loopne adc add add add add add je imul xor add push jecxz xchg (bad) into adc dec mov add add insb adc aas add add or jecxz stos add push add add mov add insb add or jecxz stos add push add add nop add jl add insb add or jecxz stos add push add add mov add insb add or jecxz stos add push add add nop add jl add insb add or jecxz stos add push add add nop add jl add insb add or jecxz stos add push add add nop add jl add insb add or jecxz stos add push add add nop add jl add insb add or jecxz stos add push add add mov add insb add or jecxz stos add push add add nop add jl add insb add or jecxz stos add push add add mov add insb add or jecxz stos add push add add nop add jl add insb or add add jecxz xchg (bad) into adc dec mov add add (bad) fdivr loopne adc dec inc add add add dec add jmp or dec inc inc pop push push dec inc dec dec inc add add add call add add insl outsb je push inc inc and pop and flds add sbb adc popa arpl add add add not add add add shrl sub cmp scas js cli in cmpl add add fs add add add pop pop pop add add add add push push inc add add add or insl fs or add add add or add adc push push inc add add add or jne imul add adc gs jae add nop add add imul add mov add adc pop pop pop add or add add push push inc add add add or arpl add faddl add or jne add or add add add or add adc jo je add test add aaa arpl add or gs add add add add jae inc inc and inc xor ss bound imul arpl gs pop pop pop and add add add add je arpl jbe add add add add add add sbb push add add add add add inc add dec add add arpl push add jl addl nop add add mov mov mov add add add add add add add add add add add add add add add add add add dec add pop add add jne jl addl add add add add add add add add add add add add adc sbb add add dec add add jno jp test mov cwtl add add add add add add add add add add add add add pop add jb jle mov xchg add add add add add add add add add add add add add add add add add add add add add add add add add add sub pop add xchg mov lds testb push push push daa push aaa push dec push pop push push jnp mov popf push scas push rolb push jecxz cmc pop pop pop sbb sub cmp pop je xchg cltd pop lods pop mov pop clc or or or or pop or (bad) or or or or or or or or or or or or or or or or or or or or or or imul mov enter stc or or or or or or or or or or or inc or mov fimul cs dec push fs jg fwait push mov rorb out wbinvd (bad) cmovno pop (bad) xchg btr iret paddsb or adc popa adc fwait adc adc adc adc insl adc call adc adc jecxz add and inc adc adcl adc adc adc adc adc adc adc adc adc adc adc push adc mov push es dec push insb push (bad) push mov (bad) push cli pop sbb pop mov scas pop rclb negl sbb inc sbb mov scas sbb sbb sbb sbb imul sbb sbb sbb ja sahf sbb sbb sbb cmp arpl mov mov ficompl sbb sbb sbb sbb sbb sbb sbb jo cltd sbb push push inc push push xchg push mov pop ds imul ljmp and and dec and mov and and (bad) and and and xchg and and and and and and and and push and push xchg mov call daa jp stos daa fsubrl or sub sub sub popf sub sub sub sub sub sub sub popf sub sub sub sub sub sub sub jbe stos sub dec cs cs out das and pop das xchg das (bad) das (bad) xor xor xor xor (bad) xor xor fwait xor xor xor xor xor xor xor xchg aaa ss scas ss aaa pushf aaa xlat cmp push cmp inc cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp mov ds mov aas popa aas mov inc fs cmpsb inc out sub inc lods inc out inc xor inc mov testl inc add mov adc inc lcall inc stos inc lock xor dec add dec xlat dec sbb dec lock aaa dec jge les dec push dec lcall dec mov dec xchg dec fmull dec outsb dec mov add dec xchg dec fstl push jno mov push fwait push out xor push (bad) push adc push stos push notb (bad) push fistl push jne ret push pop push test push xchg push loopne das pop jge lret pop sbb pop mov pop cmpsb pop cmc pop inc pop xchg pop in xor pop daa pop js leave pop sbb pop mov pop mov add pusha cld popa dec popa mov bound xchg arpl fs fs fs gs cmp addr16 push in imul dec push push imul imul push insb scas insl or insl mov outsb les outsl js (bad) jo jo jo jno jno jno jb jb jae jae jae je je je jne jne jne jbe jbe jbe ja ja js js js jns jns jns jp jp jnp jnp jnp jl jl jl jge jge jle jle jle jg jg jg addb orl (bad) xor push cmpl jecxz inc test xchg xchg xchg mov mov mov mov mov mov mov lea lea mov (bad) ss sahf nop push nop outsb nop (bad) xchg aas xchg test adc dec xchg mov and xchg leave xchg xor lahf xchg or dec cwtl mov cltd cld lcall scas pushf sbb mov sahf inc sahf scas lahf sbb mov inc mov xchg mov out push movsb (bad) movsl cmp mov loopne push test test sbb (bad) stos add pop lods shrb sub scas mov ljmp mov mov mov mov mov mov mov mov mov mov mov mov mov dec mov mov cs fwait mov or jp cmc (bad) jo in shll ret fcmovnb pop ret aam push (bad) into lds enter ret movl mov lret mov ss mov xor int into ss mov aaa iret mov sarl mov roll aam aam aad aad (bad) push (bad) fcom pop xlat loopne fs fldcw fidivl sti fildl fstl fstl fildll fildll loope loope loop loop jecxz jecxz in in in out out out out call inc jmp in jo sti in xchg adc pushf out sub mov inc out int3 lock lock jb push mov sbb cmpsl hlt xor ret cmc fdivp insl idiv (bad) mov sbb test cmp (bad) cli push cli out ja pop cld cwtl std sub mov ljmp jmp arpl add add add cs inc inc and xor ss inc gs jne je push inc inc and insb outsl jne and popa arpl sub inc add add pop and add add add add mov add sbb pop pop pop and push add add add insl gs jae add add add add add add pop and add add add push add add add add add add add add cmp add add add add inc push push and arpl add add add sub jb outsb arpl push imul inc outsl outsb imul and inc and xor ss add add pop and add add add (bad) add add add shrl add add inc outsl jo jb addr16 je jb popa je outsl outsb popa insb and insb outsl jb inc outsl outsb jae jb imul xor add jae xor add add add or add add add pop xchg add std (bad) (bad) (bad) sti mov add add add (bad) jne fildl inc add add add or pop pop pop ud2 or or movlps adc adc adc sbb adc adc sbb sbb adc and push and push pop push (bad) fildl inc add pop push or push push adc adc push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push push inc add or lret add adc add add les sbb add add add push pop or add add add add or push add add add add push adc or and adc popa jno and andl xchg mov push xor xchg mov rcll jne push mov push arpl add add add add add push pop or add inc add adc add add add add add add add add add adc adc xor pop and adc jno mov adc xor loope push bound (bad) xchg mov (bad) fiaddl or add add add add add inc adc adc inc test adc adc or add add inc test adc adc or add add inc test adc adc or add add in (bad) push dec and push dec mov fstp sbb popf jo scas pop aam jb xchg lods dec lods cmp push test lds sbb out imul loopnew pop pop or test adc mov pop les inc sti stos inc dec cli dec sub jnp (bad) xor leave push (bad) adc mov jecxz pop cmpsb jne inc dec pop out push cli leave fmuls jmp aam cmp mov in shr xor cwtl push imul out jne sarl cmp gs mov mov sub js cmp in outsb lret ljmp push clc adcl in push movsl xlat pushf mov mov das sti cmpsb inc fwait sub adc popa dec iret into xor outsl shrb xchg cltd sbb jmp sahf adc aad sti mov dec rorb mov sti push fstl xchg xchg jge dec xchg add push into nop add popa hlt cmc test pushf jne cmp dec cmp movsl sbb mov in ret int3 outsl imul lcall (bad) cmp faddl cmp repnz stos das pop gs or xor pop fildll frstor cmp test aaa push ljmp aam mull loopne jnp pop jno fsubrl push mov xor orl mov inc dec icebp xchg xchg sbb mov add add inc test adc adc or add add movsb sar mov xor jo aas enter add add push inc pop push adc call dec push les jmp ds fidivl test xchg insl jns jmp iret clc inc jg lcall jl cmp push push xchg out mov inc sub mov mov and cs int adc jne movsb xor movsl lods imull rcrb dec mov ret mov aam push fs (bad) mov inc and inc add cmp jnp xor mov fidivr mov add orl scas les lods aad lcall scas lea fcoms mov aas adc mov std jae icebp xchg lcall rcll jge sub add add jns inc pop jmp (bad) mov es test scas add cld xchg ficoml (bad) mov int3 ficompl push jmp xor icebp mov push fisubrl (bad) icebp les pop xchg nop push cli adc stos sub shlb and xor xchg int gs xor cmp (bad) fcmovne mov jne inc mov mov sbb imul mov cli sahf mov dec xlat dec cltd xchg sbb rclb ret mov jmp adc cli jae je cmp xor mov dec loop mov aas (bad) xor loopne push (bad) insb sub iret push jmp jge cmpsb mov test sub sub cmp adcl into (bad) sbb cmp push xchg and negl lret imul cmpsl das pop mov push in iret inc sti cs test jne cmp and inc add js mov nop push (bad) and add and inc sbb hlt (bad) jo pusha jmp and push aam pop cmpsl es cltd mov mov jo mov cmpsl gs js test cmc and out pop jmp mov pop jae lods mov and push cmp dec cmc jb mov pushf int movsb hlt in rorl daa xor jge add ja add and push dec mov pop xchg loop dec daa xor and push adc cs lret (bad) or (bad) pop pushf add or push cmp stos add add cmpsl mov stc mov hlt in mov sub fs pop cltd pop dec (bad) xor xchg and outsl movsb cli dec in jl into leave loopne lods int push lods jmp out (bad) xor xchg ljmp imul out arpl jae cmpsl pop test jbe in mov mov push iret cmp lret aad mov pushf jle hlt cmp add pop mov add pop test insl adc dec mov lods (bad) (bad) cmc xchg lods notl in xchg xchg inc into add push in fstpl xchg testl ljmp incl mov cmp (bad) fisttpll sahf sahf popa mov (bad) icebp add and into bound jge mov sub lcall sub pushf movsl add jge int3 pop jg xchg cli out jecxz cmp xchg sub xor adc mov sbb (bad) jae jno inc xchg mov mov pushf fldt jns andb push cmp sbb (bad) lods cmp dec mov push xor stc dec push jle aaa clc push popa roll aad aaa lcall ret lahf mov popf pop inc mov cmp (bad) int3 divl lods dec jle inc mov out mov and pop jbe aad xlat add cmpsb dec sub out xor lods jo (bad) mov test push ret idiv lret and loopne in mov xor jo xchg cmp ds gs or scas js xchg lret inc daa and ret je mov mov (bad) aad hlt in sub test into add test adc sbb jns mov mov push cmp cwtl fldl cmc cmp and mov push cmpsl test dec (bad) push pop jmp adc xor cli adc pop xchg cmp cld mov into punpcklwd sbb push and les mov push cmpsb dec cmpsl aad cmpsl jmp out lret lret add jge jle push popf movsb jmp push aaa add in and sub cmpsb aam mov jmp dec sbb out bound and and jae insb scas mov lret test push test insb test out in mov jbe mov jp ret push mov cmp jnp push aas jp pop sub insl pop jo mov mov lods xlat adc jo and sbb adc cmp sub xchg sbb lea mov pusha rolb cmp pushf js into negl adc js stos aaa je sti popa jnp cmp nop mov lahf push or sub xor call push es shll loop fs out sahf or mov sub imulb push neg xchg cmp add or add sub jno sub jno add repz xchg and ss ljmp test gs add pop mov adc jne mov inc sub sub pushf cmp (bad) (bad) pop cmc stc sbb and ss bound and jae fistpll sub or pop add xchg dec cmp sbb aaa fimul repz push mov mov dec fcomps test sahf ret inc cmp cli lcall inc (bad) negb out loopne bswap jecxz and cld fs inc jns inc pop jmp (bad) mov mov cld rcrl movsb gs (bad) sbb adc adc aaa lahf les mov mov out pushf sbb (bad) in movsb insb les dec sub fbstp je mov aas sub outsl fsubs incl or and stos in lcall and and mov je data16 das shl mov clc sbb cli or push cmp cmp mov jne cltd pop xchg out pop adc test fwait jno movsl dec cmp adc sub fstl dec je push sbb mov mov movsb adc mov ja jne int iret cmp xchg stc and jno xor pusha and jae jb xor repnz push aam cs adc mov dec sub adc and sub fstps clc and push add test (bad) push mov out sbb ret insb add push xchg push popa sub cwtl dec fnsave movsl and adc bnd lret jb je scas cmp pop inc push dec and or loopne fcmovne dec out cwtl xchg sub movsb in add into movsl popf lock xor or push inc add pop push sbb scas daa aam (bad) xchg add push test xchg sbb xchg enter jno jp adc pop pop ret lds mov aam aad shlb xchg jmp iret mov popf popf push mov add out mov rcrb mov adc xchg mov cmp stos xchg cmpl mov lret adcb je or (bad) xor xchg pop sbb adc fadd mov scas cmpsb jle xchg pop sbb cld loope lahf sbb (bad) mov cmp (bad) or dec jle in jmp xchg std rcll xor dec jno fidiv xor mov daa stc lds mov jmp fs (bad) jne jle js mov dec pop lret push jb bound cmpsb xchg mov inc mov jne or out adc jl jb adc jg jmp xchg add fwait and rorb lcall fcmovbe (bad) fsts sub cwtl insl daa andl sahf adc je cs int fwait daa das daa es popa xchg sbb test jo xor mov (bad) mov jbe xor adc (bad) in rol inc mov jbe sub lret pop xor mov xor das mov dec test out sbb ja xor hlt dec test out sbb ja xor ret in addr16 pop cwtl dec stos cmp in dec sti add loope xchg in push repnz cmpsb std (bad) outsl lock push movsb pop popf cltd pop jecxz mov stc inc pop push pushf pop sub pop jmp pusha test dec and (bad) out mov cmp inc xor stos lea test gs push cmp popa mov pop repnz repnz rcrl and mov popa (bad) fstpt neg mov cs ret aas out lret inc sbb into test insb sub xor inc mov mov mov push sub daa push (bad) imul xchg je dec xor jns jmp and outsb mov mov sub add push es leave dec jo and push mov cwtl fmulp mov inc adc push stos mov or xchg or mov add xchg nop je rorb lahf mov sbb dec add add sbb mov test insb jno push pop push movsb mov xchg cwtl xchg jo add lods cmp pause and jmp repnz inc fdivrl and cmp mov test add inc sub dec int imul adc daa add arpl and mov daa pushf add pop dec jge pop mov (bad) xor subb mov push (bad) enter scas stos imul jb xor aas lret lret pushf add aas frstor lods cmc add (bad) mov les dec hlt mov mov es sbb mov aam das cmp add push jne or out jge lret dec out jae dec xor imulb stos es mov add cmp and jno movsl aad paddusw adc cmp pop mov stos outsl mov jp push lods (bad) mull cmp pop add repnz mov cmc inc dec js pop dec inc pop lahf imul movsl sub add mov xchg sub lods dec mov js inc in jmp pop push push loope,pt xchg push jno loopne inc std xchg popf adc jmp int3 lods mov push and adc pop cmp inc fidivl lods mov daa cwtl fidiv inc rcrl lock scas mov dec test out sbb ja xor hlt dec test out sbb ja xor popa divb and sahf mov xchg cmpsb std (bad) outsl lock in cmpsb xchg push out inc mov incl lret push daa js add aad xlat bound adc push adc hlt pushf fisttpl pop not fldt xchg dec in and push push xor push fisubr shll mov mov movsl out adc fwait aas xor mov (bad) cmp jmp mov scas hlt (bad) fwait int3 cmpsb stos dec jne enter mov adc cmp mov gs push cmp mov push xchg mov jne cmp sbb (bad) and cld sbb out sbb jb add movb xor xchg sahf pop push out stos cmp cmpsb daa pop gs inc add movsb inc cwtl mov pop jno mov mov xor shll mov lret xor jno in pop jmp (bad) adc les leave loope rcr (bad) ja pop cmpsl ds sahf pop sub jnp mov sbb test repz jne sbb mov push ljmp decb inc push xor clc inc (bad) push lock movb xchg imul scas loope push cltd daa lahf in sub cmp inc push iret sub inc and inc pop lods mov mov cmp and popf dec add int3 lods sbb cmp adc lods jns xchg sti cmp xchg mov les inc add push dec push or add loop push out mov in inc pop dec push lcall faddp leave (bad) test mov pop jne cmp les xchg repz mov stos leave sbb test sarb and pop mov popa mov mov out add daa stos data16 inc fdivr mov ds cltd (bad) xor lcall dec scas leave in mov mov jo adc inc sbb sbb pushf fistpl in stc push dec xchg scas mov cli and cmpsb rolb fwait enter test xor out fwait sar inc movsb pop adc cmpsb inc incl out or loopne ret mov sub sbb (bad) in lods jp mov dec test ljmp cmp (bad) cmp test out cmpsb sarb xchg jmp fcmovbe jno xchg dec int lock lods sbb mov pop je mov push stc push dec aam popf sub mov dec xchg jp mov cli clc adc push fcomps push popf mov mov sub push mov xchg repz cmp fdivrs test out push nop pop xchg jl dec xor adc sti inc inc jl sub cmp add or jb add stos es cmp sbb and mov inc jbe test insb leave int3 mov (bad) cwtl (bad) sub popf rol pop xchg cmp mov mov into sti (bad) pop fisttpll stos xchg dec ljmp sub popl jo xchg repz mov mov das inc aam shr xchg sbb mov push pushf adc pop insb push repnz cmpsb std (bad) outsl lock lds sub outsl fsubs incl or push mov stos xchg cltd xlat pop imul add fwait mov pop lock mov pushf sub nop (bad) (bad) cmpsl xor cs xchg cmpsb xor or pop xchg (bad) fs mov sub add xor inc insl jns insl jb cs mov dec add es sub in out jecxz loopne (bad) lret adc rorb mov xchg dec lret nop jl (bad) xlat xor inc cli gs stc je mov push cwtl insl mov add pop xor xchg leave push and cmpsl pop fdivs fistl insb mov loope in jae xchg js in pop push add mov jmp mov jns,pt adc mov cmpb xchg lcall fmull push lods (bad) cli mov sub xchg ljmp jmp ficoml add and dec (bad) sbb add addr16 jg pop sbb jnp leave aam xor outsb sub mov fs sub loope xchg mov in mov xchg mov testl xchg (bad) rcrl push out sub jb push adc xchg cs xchg jno repnz mov (bad) or xchg in adc in adc ljmp imul in jle push lahf fildl movsl mov addr16 jmp push mov cmp lcall test mov dec xchg dec out in push cmp lcall adc movsl mov je pop punpcklbw push std icebp aam mov and mov and dec test ret lds aam arpl sti adc arpl inc mov cltd mov adc fldenv dec in sub sahf pop xchg push jnp dec mov mov mov popf in xchg test stos mov aaa fidivl adc pop (bad) repz inc xor push mov pop mov mov cltd sbb or cmp cmp pop xor out mov or loope fistpll cltd cmp (bad) lcall movsb cmc sub sbb jbe adc cmpsb mov dec jmp xor in negl sbb mov sub jp mov test or stos adc push ror int3 mov push mov sbb pop pop scas xor (bad) and push and and leave int mov in xor push xor ds (bad) xchg or ret (bad) jbe shrl xchg leave push and pop mov add pop mov xchg ror push mov push push dec adc les mov notb (bad) shl ds adc fimul in decb icebp cs jecxz sbb iret loop fistp popa jmp mov mov xchg mov push xchg sbbb pusha sahf cltd cmp loopne xchg mov into sti (bad) and es dec test (bad) jg jbe sbb and loope cmc mov bnd sbb hlt ds sub fiadd sbb sti mov xchg cmpsb std (bad) outsl lock adc (bad) int loop push pop push aad mov sub mov dec push xor nop mov add add popf std sbb aas mul mov shrl mov pop (bad) pop outsl (bad) aas lret or fsts ljmp (bad) cmpsl pop test dec mov inc sub ret (bad) xor imul cmp cmp adc sahf and (bad) and negl addr16 dec lods dec repz jle fbld cwtl sbb mov loope jle es xchg pop and push jo jmp cmpsl pop xchg jbe repz or sbb testb sahf mov sub push scas jge sub adc out inc jne mov lods popf jmp sbb in cmp fs mov mov cld jl out lcall adc rorl call pop (bad) mov arpl sub push mov sahf rcl arpl addr16 mov (bad) add or orl push in mov ss jbe aas dec test mov stos orl out addr16 xchg cmp cltd pop xchg push aad cmp into and jl cmpsl mov mov call inc scas and jmp add and (bad) push setbe in inc xchg test or int3 jb cmc call mov (bad) cmp addr16 fidivr dec int or mov icebp int3 push push cmp push push pushf sbbl out sub (bad) jae lcall fiaddl cmp popa fst or add jne les imul xchg jp sahf push out pop cli xchg sub xchg or adc std adc addr16 test lret in push xchg cmc cmp stc add (bad) xchg xor push jl cmp push cmp mov cmc mov mov xor je gs pop xor fidivl lcall push push lret arpl and (bad) mov push xchg cmpsb fstps xchg mov mov das mov jae icebp xchg stos lret cmc mov and push add xor sub ja xor inc push lcall imul mov in push cmp push stos fs or je ljmp lcall lds lock mov xchg dec fwait dec jle nop repnz and xchg outsb mov out cmp mov ljmp ret cmp test cltd pop jne fwait push rclb mov xchg cwtl jmp sahf jnp xchg or icebp mov xchg lret or testb jg pop not or aas inc scas add jmp mov add pop not or aas inc scas or jne pop out push negb jecxz jo cld daa mov dec and int3 xlat xor frstor push ret (bad) into xor lret mov sbb mov dec outsb pop addr16 jge ret (bad) ljmp outsl ds test sbb ljmp mov popf mov dec ja push push mov cmp fstpl das inc es in mov push lcall jmp fstps sub lods dec leave lret and ss add jne adc mov sub mov (bad) and mov ret test xor jg sub mov aam mov mov or mov (bad) add or orl dec ljmp hlt cmp sahf jb popf xlat sbb lea lcall sub je ljmp push ds lret fs dec cmpsl cmp insb jno cli inc xchg sub sbb pop lret add aas div ret xchg dec mov pop (bad) jno pop (bad) icebp (bad) stos dec pop jno inc repz add mov adc mov data16 mov jnp sbb mov xchg test out ds repz or mov jp mov push cli pushf jp push test es xchg in hlt dec sbbl lahf mov add jg std adc sub negl pop imul lds push xchg (bad) es imul or push push lods aas jno cmp in pop mov cmpsb xchg inc leave aas mov xchg pop (bad) or lret loop incl pop out mov sarb inc cwtl cld push popa movsb mov rol insl mov dec cmp bound ljmp ja pop and mov jmp or add inc pop pop out in jg inc stos cmpsb enter push push int sub push push fildll xlat out sub xchg mov xor pop pop dec or into cmp mov and fucomp leave out mov out stos adc lea pop lcall mov pop sti push test lods sbb jne adc push stos popa pop sahf sbb add ss sar dec movsb fistl mov imul mov (bad) xchg sub push lock xor pop mov inc sbb sbb adc fsubl pop inc and inc in stos or inc imul test dec (bad) jnp cld and jbe movsb xchg mov es fimull js cltd pop sub push add inc fimull or orl and (bad) add cmp lret outsb jp add cmc (bad) mov mov push xor adc test bound and pushf sub mov dec imul jae call sbb pop adc movsl inc movsl dec mov mov mov mov jge (bad) push mov fist shrl push xor in sahf push in add bound rorl flds xor or shrl insl leave pop xchg imul add sahf popl stc rolb ret fnstenv mov sbb cmp (bad) xor push mov out push hlt xor test call fstpl out insb icebp scas int test rorl lods sti jo mov jno jno cmp pop ljmp add in push mov push fisttpll int xor add gs mov lret lds out add sahf jle lea inc dec enter lret mov push in mov fnstenv and and inc and (bad) add or orl and (bad) add or orl and (bad) add or orl (bad) flds cmp add nop rclb xchg test mov push cmp imul push add add jb and add or add add add nop rclb xchg test mov push cmp imul push add add add add add add add add add nop rclb xchg test mov push cmp imul push add add add add or add add add nop rclb xchg test mov push cmp imul push add add add add add add add add add cmp add or add add xchg xor add and add or push jb outsb je sub push arpl imul (bad) or add add add add add and add add add add add add add add add add add or in in in add loop add (bad) add (bad) stos stos stos add xchg add lret lret add js add add xchg add jns mov mov add jl lock cmc add icebp hlt add repnz add lock add jmp add jmp mov add inc add mov add repnz adc add insl insl add rcl add rcl add (bad) mov iret add into roll iret iret roll enter mov mov add xchg xchg add mov add (bad) add aam add enter lret rcl rolb rcl roll rcl roll int into add rol mov mov mov mov lods lods scas add ja (bad) fiadd jo jo fcomp flds fcmovnu fiadd rcl (bad) add (bad) fadds (bad) fild (bad) fild fstp fild loope jecxz loope jecxz in out loop in outsl outsl jo xchg xchg cltd add (bad) lret fsubp add (bad) add (bad) add (bad) add fsubp add (bad) add loop add loop add in add jmp add out add jnp fcmovu fiaddl rcl roll (bad) fild loopne loopne out out scas scas mov out out loope loope xlat xlat xlat add fcmovnu add jmp add out lock mov mov add fcomp add leave movl int lret add iret int rcl iret add aad add (bad) add fcmovu add rcl add rcl add fcomp add ret mov add mov add mov add mov mov cmpsl cmpsl movsl add jp add mov imul lahf jle (bad) mov add jnp leave ret inc add cli sub push inc add in add out xchg add (bad) into add cld icebp add addl jb add fild xchg xchg jg mov jns mov popf jle mov mov mov add stos mov movsl scas mov add scas mov add leave rolb (bad) lret mov iret add outsb add pushf loop test imul addl popl add xchg mov add lahf mov (bad) fwait scas add mov add mov add jo add incl sbb loope xor test add add movsl in sbb xchg incl pop cmpsl incl sbb incb and std add jno bound add ret cmp incl xor mov add mov add mov add sar aaa mov incl cmp incl cmp int add sar add sar add incl inc (bad) add incb pop sar add addb ja add sar and incl and incl es incl sub incl sub in add repnz xor incl xor incl xor incl pop jp add les aaa mov loope cmp loope sub std incl add push pop adc adc adc adc adc and and and and and ret repz cmc cmc cmc cmc cmc div div div idiv clc clc clc clc clc clc leave out call jmp jmp jmp in in in in in out out out lock repnz add add add rcl aam (bad) xlat fcomp fcmovu fcmovnu (bad) fstp fnstsw loope loop in ret lret lret int3 int3 int3 int3 int int int into into into lret lret lret lret iret iret rcl ret (bad) vshufps mov enter leave leave leave leave lret scas scas mov mov mov mov mov mov mov add add add add fwait pushf popf sahf lahf mov movsl cmpsb cmpsl test stos stos lods lods mov (bad) (bad) (bad) nop xchg xchg xchg xchg xchg xchg add add add xchg add inc xchg mov mov mov add jnp jge jg addb test push insb insl outsb outsl jo jb je jbe js jp add bound pusha add add addr16 add push push add add add popa add add sldt add pop add pop pop add pusha add popa add add dec push push push inc push push push push push pop pop pop pop pop pop inc inc inc cmp inc inc dec dec dec dec dec dec dec dec and add or and and and add adc add or and and and and add xor xor xor cmp cmp ds inc pop add sub sub push and push add add add adc add add push add pop pop pop pop pop add and and add adc adc sbb sbb add add or or push push push push add adc add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) clc add pop lock (bad) add (bad) add (bad) add (bad) add (bad) add (bad) add (bad) add pop clc add aas incb add add (bad) incb add incb add incb add incb add incb add incb add incb add incb add incb add incb add incb pop (bad) incb (bad) incb pop (bad) incl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall add add add int3 xor cmp (bad) adc sbb push or fdivl and dec xchg sub scas daa test cmp xor or stos add xchg inc xchg add inc add add add insl xor or outsl jb xor sbb add and add add add add add add add add and add add call add add add add add add add add add add add addb add add add addb addb add addb add incl add add add incl incl add incl incl (bad) incl add (bad) incl cltd cltd cltd cltd cltd cltd nop add cltd cltd cltd cltd cltd cltd nop or add add cltd cltd cltd cltd cltd add cltd cltd cltd cltd cltd add add cltd cltd cltd cltd cltd add cltd cltd cltd cltd nop add add cltd cltd cltd cltd nop add cltd cltd cltd cltd nop add add cltd cltd cltd cltd nop add or cltd nop add cltd cltd cltd add add cltd cltd cltd add cltd nop add cltd cltd cltd add add cltd cltd nop add cltd cltd add cltd cltd nop add add cltd cltd nop add cltd cltd add cltd cltd nop add add or cltd nop add cltd add add add cltd add cltd cltd cltd nop add cltd add add add nop add cltd cltd cltd cltd add nop add add add nop add cltd cltd cltd cltd add nop cltd cltd cltd cltd cltd nop add cltd cltd cltd cltd cltd nop add cltd cltd cltd cltd cltd cltd add cltd cltd cltd cltd cltd cltd add cltd cltd cltd cltd cltd nop add cltd cltd cltd cltd cltd nop add or add or add add add add add add cltd cltd add cltd cltd add cltd nop add cltd nop add or add or pop rolb pavgb orb add push lock rcrb pop loopne js loopne js lock pop lock pop clc lock aas clc lock aas std loopne jg loopne jg rolb inc pop (bad) incl (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl pop (bad) inc pop (bad) jmp (bad) jmp (bad) push pop (bad) push pop (bad) (bad) clc aas (bad) (bad) clc aas (bad) (bad) cld jg (bad) cld jg (bad) (bad) (bad) (bad) (bad) (bad) (bad) jmp insl xor xor pop add add add in and add incl pop add addb add add gs add add add or add or add sbb add add add gs add pop or add or add sbb add add add gs add pop or add or add sbb add add add gs add pop or add or add sbb add add insl gs add pop or add or add pop add add push add gs add add add or add or add inc add add add popa xor and add pop add push add arpl arpl add jae adc add add add add sbb popa xor sbb add add add add add addb add add gs add add add add or add pop and pop add incl and or push imul add add inc sub adc add add inc add add add mov add or push imul add add mov add add fdivr loopne adc dec inc add add add pusha add (bad) fildl inc add add add add add add add add add add add add push add push push push pop or push pop or push push or or or or or or or or or or fildl inc add add add add pop push pop or or or or or or or or or or or or or or or or or or or or or or or or or inc add or sbb hlt add and add add adc inc add add add add add add or inc add add add add add jge add add add push adc pop and xor inc mov adc xor (bad) or push pop sbb sbb sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) loop in out call repz cmc div clc stc cli inc add add add add add add add add add add add add or inc add add add add add add add add and push adc pop popa jno and orl mov or xor adc push and loope icebp pop sbb sbb daa sub sub cmp inc inc inc dec dec dec push push push push push pop pop pop arpl addr16 jne ja jns (bad) addl xchg xchg xchg xchg xchg xchg cwtl cltd lcall test stos mov mov mov mov (bad) (bad) enter rcl aad xlat fcomp (bad) jecxz in out jmp cmc div clc stc cli (bad) fiaddl or add add add add add sarl loope data16 rcrl jne and aaa lock test popa sbb mov sub js ja rolb push imul push clc inc (bad) negb fidiv mov mov cmp nop iret outsl in cli xor ja (bad) nop or cmpsb stos icebp dec hlt out cmp movsb mov popf movsl in iret fldcw push in repnz cmpsl bound pop or xchg paddsb sti inc pop int pop pop fcompl js (bad) (bad) dec pop leave or add jb sub sbbb xchg mov pop cs data16 cmc mov leave fnstsw hlt cmp pop push mov mov out out in jp mov mov xchg jge ret ja pop dec imul adc dec and sub sub add pop lock mov loope int out pop dec fcompl and dec jb outsb jmp xor into adc out pop cmpb (bad) ds (bad) jbe push pop aam mov mov mov int mov and mov fcompp xlat lock or daa push xchg fsts movsl sub xchg inc jmp nop xor pop movsb add lahf adc cmp add ja imul (bad) lahf ja out neg mov (bad) jle sub repz loopne test insb xlat hlt das mov cs and mov dec (bad) jne adc sub push arpl sbb or loope pop fcompp clc cmp cmp pop test cmpsb (bad) ss in in sbb jo cmp icebp pop inc call aas push aad xchg repnz ficompl jmp pop pop repnz mov jbe sbb aas mov xchg lock sub div imul repz xchg ret mov push pusha pop cmp into cmp jno div mov mov je mov mov hlt mov (bad) cmpsb ljmp jbe decb popl aad insl adc in xchg mov jg sti add repz inc sbb mov rol or adcl jle jg sbb imul imul lods and pop test jp xlat scas inc loope ds cmp pushf mov jbe stos pop lds jne add inc popf xchg jg jo jns inc jae popf sti insl dec mov or (bad) clc lahf lock mov mov aad (bad) jne jnp jbe lods adc out xchg jbe cmp rorl stc mov lahf ficompl scas movsb (bad) (bad) mov xchg push push mov lret incl or push clc jmp lahf push das scas mov jmp loope xor cs scas sbb mov rol ror imul mov adc sbb cmp pop lcall rol in push dec popf mov mov adc push pop pop rcrl clc adc outsl hlt int insl dec out xor fisubrl mov pop push bound jne mov xchg add or lret adc ret mov cmpl pop pop fldt or mov mov stos pop leave insl jno popa mov cmp repnz jecxz xchg stos data16 or pop outsl inc stc mov jmp xchg in pop repz repnz (bad) xor je or cmpsl dec (bad) xor cs rcl jne and xchg rcll loop add mov loope mov js loop cmp nop ljmp lods push jae xchg jns sti fwait or lret fsub xchg push push push sarl and lds inc ret mov mov fs jns incl mov inc gs negl stos adc lea loope sbb push push xchg outsl adc pop dec ficomp xor stos mov sub jb mov pop hlt sub cmpsl daa mov mov cld into sbb cmpsl xchg cld dec lock mov lcall xchg mov sbb and mov pop add jae or adc outsl lds sarl insl cmp dec lock mov fmull pop mov pop js add jno scas jae cmp add pop or sbb imul jae fcompl sbb (bad) jmp cwtl add (bad) lret xor lods test test ret clc loope (bad) xor cmp mov aad movsb push and out outsl add sarl iret jbe cmpsl xor mov mov inc jg jle pop mov sar pop js negb in aas pop mov lock ja jl jb les adc inc sbb rorb jg in add shrb out lds xor dec test stos (bad) repnz sti insb mov sbb add pop or loop cmpb dec arpl add jecxz std in insb push fwait and jno mov mov insb cld insl jb repnz pop adc push pop pop xchg loopne ret sbb inc iret sbb jb lds fisttpl xor mov mov mov mov hlt sub ljmp in xchg fstpl test inc (bad) (bad) movl jmp mov scas and push (bad) sbb push cmp enter pop jp clc outsl loope push xor into scas stos stos dec addr16 movsl sbb xor sbb lea in iret cmp mov lods stc jbe mov scas pop xchg pop jb enter movl fildl repz in lahf jae cmpsl aaa ss xorb jmp or mov jbe inc xor xchg sbb mov inc add mov in inc sub (bad) (bad) fcoml arpl int loope es pop out xchg mov adc mov cmp lcall arpl mov aam push mov push out pop std xchg mov dec loope lods xor loope pop inc pop popa mov and sbb leave push iret popf mov mov xchg and jnp imull mov imul xor shl xchg sub leave and ja mov addr16 sti xor aam xchg sbb xchg pop mov sti cmp int pop fs loop fistpll mov repz mov popa jge pop pop add and (bad) xchg and das xchg xchg arpl cmp addb pushf pushf jp in mov js ret xchg mov fcomps aaa xchg dec mov daa arpl in jbe pop push jns bound lods incl aas ljmp incl lods mov aas push cld sbb imul fs fstpt (bad) xchg mov (bad) je cltd mov outsb lret sbb push xor lret inc lahf imulb jmp pop dec loop out ficom mov ret cmp mov les ja aas rcr fstpt rcrl cmpsb aad jnp adc sahf loop rcr jge sub xor fldenv add int loopne xchg movsl (bad) fmul loop sbb jne dec daa out insl jg xchg cmp mov cmp inc jo outsb insb bound scas data16 mov push mov push add jg scas or outsl xor xchg ret pop inc sbb movsl mov xor adc xchg inc adcl fild bound dec cmpsl mov lods push test test sub testb aad cli push enter pusha icebp inc mov clc mov or inc inc clc jae fisttpl or mov jns or andb xchg jge jb cmpb jge lock push mov adc fldt movsl mov cmpsb fnstcw fstl push stc (bad) jp (bad) out hlt scas cmp lcall mov add movl in fidivr shrd repz out test (bad) cmpsl jno or loop and cmp int pop add xchg je pop loope (bad) mov mov imul mov sub ja in add cmc outsl fadd lds cmp sti (bad) pop adc (bad) dec cmp lds xor mov fistpll dec dec fidivrl lahf (bad) fild jecxz adc dec test fiaddl lret mov in cmpsl mov (bad) movsb inc xor mov pop outsb jp fs dec adc out pop xor dec mov xchg push shrl cmc das or adc sub mov push push mov inc cmp pop sbb cmp pop pop pop (bad) cmpsl sub pop jge mov xor or nop in push jo xchg daa and push lds lock xchg loope or lahf pop xor cmp xor xchg outsl lods lods adc adc fldt xor jo xchg imul aas pop jl clc mov mov sbb cmpsl fld movsl jmp pop cmp xorb rcll jbe pop cmpsl scas (bad) pop xchg xor lret mov ret icebp mov sub inc (bad) cli mov test mov (bad) mov ds arpl enter lea pop push hlt das push jl icebp jbe loop xor mov inc test add call push mov aas mov lds data16 cmp imul sbb mov dec xor fs xor scas jecxz test add cli xchg xor and outsl dec xlat push xor mov outsb (bad) fstps cmp xchg ret lret xchg xchg dec (bad) js test xlat leave popf (bad) mov fstpt cld and ss mov sbb jp scas mov hlt popf cmp mov movsl cmc xchg movsl mov and addl inc ljmp sar adc sub inc clc dec mov (bad) sti pop pop mov mov add std fistp mov fwait aas test mov mov out and xor push ss jne nop dec shrb jg movsl cmpsb cmpsl movsl push mov movsl mov xchg sbb (bad) gs test lret mov mov shlb pusha pusha imulb pop push (bad) leave mov fwait sbb int3 test iret pop add (bad) jbe mov fild mov outsb arpl je repz mov jecxz lahf ret jnp jle lock dec cmpsl lds mov lods int3 sahf pop stc cs lret fildll dec out xor stos sbb pop in sub fldt or dec aad or xchg je nop leave (bad) mov fmull sbb dec dec sahf jnp inc loope sti (bad) je imul test cmpsb cmp mov into jns mov sbbl sahf stos loop sbb out and mov enter addr16 xchg incl adc cmp lds (bad) xchg dec addr16 fs sub sbb pop xchg sub or add mov mov jmp imul xor inc jge loopne mov in xchg cmp push dec shl sti aam testb ficom xor xorb lret add inc pop aaa sub scas or xchg js xor and lds mov outsl push stos js cmp sub pop pop pop jns ja fdivrl ret xchg imul pusha jae out test mov lock xorl push fs repnz aaa sub sti (bad) jno cli jnp incl rorl xor out sbb sti dec mov or iret pop pop imul (bad) jne add (bad) unpckhps lret xor xchg xor push push sar popw cmp ss stos jmp insl sub idivb imull fbstp pop push (bad) hlt in or loope incl stos sbb imul mov scas xor pop mov push mov lret mov sub adc cmp sar mov xor add push leave mov push inc mov xor or test dec fdivrl mov test aad mov xchg dec cmpsb inc test jmp sti (bad) mov daa and (bad) imul jno scas (bad) hlt leave mov push pop imul stos popa sbb je cwtl (bad) sub xor add addr16 push sub and (bad) mov pusha xchg ret sbb push mov jno jg repz sbb and cmc jmp stos jecxz sbb ret in cli mov lret pop xchg or pop xchg or push aas xor xchg loopne (bad) xchg and add repnz in in and ss pop lahf jl in pop scas hlt lea lock xchg fcmovnb outsl je sbb rcll clts mov dec xchg out cmp sbb lods call mov (bad) xchg aaa dec sbb arpl das test jecxz or sbb dec fnsave adc lds jne sti bound sysexit cmp mov bound sub cmp pop aad mov jecxz fsubr dec repnz sbb inc lds mov add test dec daa leave jl loop mov imul dec outsl imul std loop add add ss cmp mov comiss imul test sahf es or sbb push xchg faddl inc pop mov dec repz fisttpl inc lock xor push imul pop push mov mov mov xor lods and orl js pop icebp cmp cmp clc push rcl cmc fucom movsb jno push icebp mov int3 mov in mov xlat cmp jl lods push (bad) push pop xor cs outsl mov ss adc mov or cmp cmpsl push cli jg xor fistpl incl fimull pop mov (bad) mov mov out cmp sarb sbb mov and push bound lock lret (bad) lret mov pop push mov fist mov enter mov and lods (bad) cltd mov xlat or stos popf mov notb mov (bad) jl loopne fwait (bad) fcompl rcr sub out adc pop ffree lahf das sbb jnp,pn das fnstcw out fidivl push mov push xchg imul mov jg nop sub ja in lret mov in sbb xchg cmpsl stos jbe jns lcall (bad) fstpt or push mov xor lret mov loop lret pop aam (bad) leave jne loop sbb in (bad) arpl jo or call cmpsl call jp lret cmpsl call xlat xor xchg cmp iret cltd in pop push jo sub clc in jecxz or shl ret incl pop mov ja data16 xor in push in ja (bad) les test add daa mov mov dec xchg pop mov mov out xchg sti mov mov adc es popa out push clc cwtl fs pmaxsw jns inc dec dec push imul outsl xorl jg pop rcr js lods iret mov cmp mov inc adc xchg test sbb sahf cld and xchg loop add pop sbb mov xchg or adc push or leave pop and incl test xchg repnz dec cltd mov mov inc sub (bad) push bound and pop iret push sbb call jo push lahf cmpsb (bad) and fsub dec adc push out xchg xchg pushf jecxz out popa test dec sti ds jp cmp (bad) dec fistp jge pop jmp outsb mov (bad) lods imul imul sub lea add mov pop ret xlat mov xlat test loop fnsave aaa adc sarl addl xor imull jbe cli mov arpl fimul xor in sub mov movsb pause js popf clc mov dec ja sti push xchg sahf pop xchg lahf push (bad) push xor fcmovbe jbe stos jl adc mov pop lret mov out clc adc pop xor incl lock loope jle ud2 fldl2e ror mov int cld push inc notb nop ret fnstsw sbb imul cmc jmp mov shll xchg es mov (bad) pop sbb adc sub push aad (bad) cld xor lahf xor mov ljmp ljmp in fistpll adcl pop inc mov cli mov mov pop pusha loop jl adc cld les jbe je loope xor addr16 xchg addr16 jmp mov movsl lret sub sti jp add cmp add notb arpl hlt fnsetpm(287 pop mov out aaa or scas xchg mov addr16 mov sub jl (bad) scas je ss scas das sbb xor mov add and sub lret and xor imul dec mov scas sbb pop js dec push mov data16 mov loope dec add ficom sarl cmp lods je stos push aam mov out movsb xchg imul adc lock jecxz push test incl ja lods mov movsl jmp fild mov pop ljmp inc icebp pop cltd mov mov movsb mov iret imul lret in (bad) pop (bad) ss ja jns cmpsb push or ret clc mov insb outsb lods xor adc fwait out adc mov fmuls or fdivrl or jmp mov ljmp inc stc movsbl out mov xchg lcall (bad) ss mov push repz inc xor xor cmp jmp jle cld data16 pop stos js out repz mov cmp cmp cmp loopne jge int sbb aad push dec cmp aad fs pop ss pop add adc ss sub js in fimull lock jmp mov xor push repnz arpl and pushf xor add cwtl xor mov test mov outsl sahf mov xchg xlat (bad) idivb stc mov incl out out cmc and xchg icebp cmpsl pop icebp iret les cld ss incl or clc lcall cmpsl dec add pushf jo inc push enter es cwtl adc pushf push dec jns jg imul out xor mov ret (bad) neg pop jl sahf inc or xchg add fdivrs push inc ds sbb pop adc pop mov mov out adc push mov mov psubb sti (bad) in loopne fwait dec mov into aaa inc les mov leave out mov jmp sub mov xor les fmull fadd ja push (bad) fwait nop adc lea cmp mov mov cmpsb mov ja sti ljmp xor jl aad jbe (bad) repnz cltd out or pop stos jg inc jecxz mov js call or arpl sub push inc lea jns pop sbb or and sbb mov xchg lahf loop xor sub mov sbb js jae aam mov mov test lock adc jmp inc mov leave insb inc leave mov mov mov ficompl dec ss jle insl inc (bad) ljmp cmpsb inc lods in cs jno inc shrb test fmuls stos addb sbb out inc pop cmp dec (bad) in push push popf pop jne xlat lret div pop jl pop dec push fsubrp fbstp cld je fwait inc aam jge loop pop lods out push ljmp jl mov mov bound or das jl loope mov jl or sbb lds pusha ret sbb jp testb (bad) out dec int3 dec test pop je mov in incl lock shl scas test imul cmp and mov arpl stos dec add jb lea dec mov arpl dec psubq ljmp mov push divb notl dec inc adc mov lods lds sub dec push xchg xlat and loop bound lods cmp mov mov dec cltd rcrl push mov incl pop scas fidivr (bad) pop add (bad) lret loope mov pop jl lock out adc leave stos fcomp fcmovu stos lds dec notb mov nop inc push pop xlat lcall (bad) out (bad) xor push clc sub mov mov mov repz ds or sub mov xchg lock ljmp movsl lea rep in adcl xchg stos sub or (bad) das incl (bad) sbbl pop add call or addr16 ficompl xchg add lret xchg mov in outsb loopne jo pop pop test cmpsb mov out mov leave pop fidivrl call cmp icebp and mov pop adc jle mov aad ja jne addr16 jg hlt mov pop mov sub insl loop xor loope iret xchg sub push sahf xor imul jp xchg sub mov into inc jb and mov or jae xor (bad) lock adc arpl bnd jbe mov rcll and rcr test pop jecxz mov cli jg sub js pop xchg icebp push xchg gs xchg test and inc push fcompl in cwtl xlat or daa sbb repnz mov ljmp ret incl or sti dec clc xchg movsb pop scas xchg mov sbb lea bnd and test in ret ret scas loop stc jae and and (bad) fisttpl sbb push pop mov add test push movsb push mov cli jl or sbb cli cmp xchg mov insb pushf push jg loop clc push xor pop mov scas mov cwtl push dec aam inc mov xchg sar jl aaa pop daa xchg cmpsb insl fwait aad insl pop je inc clc jnp scas ljmp imul leave and xchg ljmp aaa sub das nop push jb in loop dec inc push jb lcall clc scas and xor mov (bad) mov adc lret ffreep xor mov repnz rorl and bound repz dec push mov cmc outsl mov int aaa mov ljmp icebp lods inc sahf pop cs jo and inc or imul inc (bad) daa fcmovu clc scas dec sbbl (bad) in adc xlat dec outsl push stos outsl xor push or sub icebp xlat jecxz xchg stos clc test aam cld pop imul mov dec faddp clc and add mov repnz sub inc xchg lret mov inc ljmp mov idivb jmp mov fdivr pop sbb xchg inc mov test sbb enter fadds imul outsb pop push shl xor mov fs pop or sbb (bad) xchg fs push cmc shrl and out mov push stos imul xchg jae inc and bound lret cs sbb mov push jg pop add out je push inc imul cltd pop fidivl xor addr16 push sub out aaa sbb mov packuswb jmp add hlt inc mov pop repnz mov xchg ret inc icebp gs es lret (bad) xchg mov push adc or cmp sbb scas push lods sahf movsl test out fidivl ret (bad) popa pop into mov cmp dec jb sub arpl sub xor mov pinsrw je addr16 xchg inc sub ret sahf sub int3 gs mov ret in sbb mov lret iret or push mov movsl icebp adc shl mov outsb cmp pop arpl in pop outsb adc movb (bad) push test xchg dec pop (bad) xchg sti mov popa in idiv iret sub mov outsb fs faddp int push lret lret add int3 popf jle ret fidivr jp mov jg jle push insl std nop mov jle mov and aaa lret (bad) adc popa and xchg insl test jno in je das punpckhbw out lods lods mov jns mov addl mov dec loop add add ss mov insl scas imul outsl and mov mov push ja enter aam cld ss daa repnz pop push fdivrp sub inc lock imul xlat xchg aaa xchg sub inc std cmpsl adc cwtl aaa ret sbb push inc adc pop dec out jns sbb sbb sub scas or or jbe inc and lods push jbe inc and cmp pop aaa inc pop mov aam aas clc dec cmpsl clc pop ret cmp xor cmpsl jmp ja loope sub ror xorb jno dec insl mov das loope in inc sti push ficomp sbb add and pop fmull sub mov lret jns mov aaa in fcomps outsb out mov popf cmp cltd repnz fcmovnbe jg sar cli imul (bad) mov arpl negl pop icebp das push icebp push test test imul mov iret lret cmp pop xchg jp call sarb cmp jl mov mov (bad) mov push pop bound dec test add xor leave enter les mov in icebp stos fnop outsl roll gs lahf lock lcall xchg xchg xor jecxz repnz xchg pop dec in gs inc leave lock shl mov push ficompl fwait outsl push sbb mov addr16 das lcall adc xlat push scas mov xor pop mov insl (bad) scas mov test jge stos xlat mov in pop mov in mov lock push jle fbstp pop leave lcall aad orl in std fnstsw out (bad) loop in f2xm1 (bad) out push sarb sti es xor mov imul add popa std int3 popa into inc jle loope jns cmp adc cli outsl xchg iret pop jl (bad) sbb xlat dec mov xor (bad) sub out and xchg (bad) inc iret dec lock clc lahf loope xchg fs pop imul gs inc scas adc sbb stos loopne repz test cmp pop pop (bad) jle fsub cli hlt and jnp jns aas in cmp (bad) jecxz (bad) aas mov ss je sub mov incb xchg jns jecxz or (bad) repnz es pop mov mov imul ds fisubrl out negb gs mov loopne jecxz cmc ret loop (bad) xor adc pop or outsl (bad) lret dec pop pop jns shrb aaa xchg push (bad) enter inc ljmp sbb fisubr jmp adc in sub mov unpckhps sub test push pop jp xlat mov xchg xchg xchg (bad) hlt std arpl jge xlat xchg jb dec xlat mov dec call data16 adc dec scas dec lock mov addr16 (bad) loop mov int pop mov repz sahf mov xor cmp popa pop notb in sbb jns into pop enter out sub jmp int loop fwait add pop clc daa les mov fdiv inc out jo xchg mov in arpl mov pop jmp jb int dec (bad) aas adc lcall or jne xor and mov je inc fwait jecxz movb (bad) xchg daa (bad) loope xchg aas lcall aas jbe ss pusha sti pop jp out sbb mov data16 roll sbb mov cs out into inc (bad) mov mov and and aaa xor lret mov (bad) (bad) fist mov dec clc std insl loop and push icebp ja jg ljmp insl in rcll (bad) cs rcll lahf sbb dec mov pop pop imul jmp sbb iret dec pop xor jecxz hlt pop fdivrs mov fadd cmp cmpsl imul mov mov xlat (bad) bound mov test inc fnop jge xlat or lret outsb movl mov loopne adc (bad) rcrl pop mov sbb push and bound and and loopne and cmp out in mov test jns loope cmc jg addb sahf or cmp in out out xchg jb aaa push lods jbe test jno scas jo jp xchg sar xor push das adc inc mov inc rolb add loopne push out pop fsubr pop lea fwait sahf adc je adc lret insl gs pop lret data16 mov lods xchg into sbb icebp outsl xchg and mov adc ss outsb xchg jp jns inc xchg sub xchg ficomp lock imul inc stos fldcw push cld pop repz dec jno pop dec movsb sti cmp dec pop inc rolb add jne (bad) push sarb iret aas (bad) in adc jbe push test pop xchg ds imul xor jb pusha cmp cmp (bad) repnz add (bad) ds cs scas mov sbb mov lds xchg cmp fistl lds push pop int cmp adc push xor pop mov dec insl into std iret mov cld test mov clc fisttp mov jnp (bad) fldl sti fs and and cs and shrb std das mov or fldenv aas (bad) mov ss adc dec out into test pop pop mov lods outsb testl fcmovbe inc cli add int pop push adc push xchg xor stos incl adc popa mov (bad) aaa xchg xchg mov (bad) es jae icebp xchg aam loop in in pop sar xchg cmpsl insl xchg fist sahf dec mov xchg pop pop aad inc add aam mov es cmp lcall pop imul inc xor nop cmovl mov pop (bad) (bad) cmp sub icebp mov enter movsl mov test andl in push loope sub jb es ret addr16 jo pop mov mov insl push aam lock out and ljmp out (bad) fwait mov jne jmp fldt push xor repnz pushf xchg dec cmpsl sbb (bad) xchg cmpsb out dec out ret sbb pop dec mov pop orl bound int leave push mov mov mov les (bad) es test pop dec repnz xchg sbb adc sbb stos (bad) in lods jle dec and mov adcl (bad) daa scas sub adc ss iret dec sahf out jnp lret adc js sbb fcompp into xor inc int sub ficompl dec lods daa pop (bad) sbb lret and or mov enter sub cld jge js rol aaa push (bad) (bad) push mov rcr xchg push pusha fs out push sbb popf movsl mull sbb clc stos adc out jmp xchg ja pop lea pop lret sbb jmp push out dec orl loop cmp mov xlat lods mov outsb mov lods lret (bad) and dec jae insl mov pop aas sbb cli fild insb push inc outsl add push jb in cmp jb mov mov sbb out cmpsb mov imul mov sbb mov add mov or inc push push mov mov das push cmp js loope mov pop push mov mov ret insb mov mov leave xchg into sbb repnz add mov shlb movsb aam icebp xor std mov test shl and dec mov repz incl push xor pop rcll mov pop mov xor (bad) push ss xchg scas addr16 test xor jg inc std xchg ficomp or pop sbbb and add xlat ret jg sti dec clc pop loopne sbb test xchg jbe ljmp fwait notl out add dec stc dec sbb out xchg (bad) je mov mov add ljmp ret mov leave pop out cwtl sbb enter js pop mov (bad) lock outsl inc xchg and pop in cltd in movsl pop fstpl pusha aaa adc push xor xchg jbe mov jne pop mov clc jae lds std pop int3 call push imul fidiv stos test sbb or jb,pn stc dec mov ret imulb xor jae outsl or dec outsb mov xchg repnz out mov push cmc pop outsb push cmpsl incl or xchg xchg into xor xchg dec xor and inc push sub into cmp loop (bad) fist xor daa imul loope jbe leave outsl bound xchg jg pop popa into and out and ja es rclb pop mov enter sahf leave das inc mov js je lods xor inc test gs loope into push adc xchg add mov xor (bad) lds lock mov out es pop aad xchg add jns pop push int3 and cmp push xor rcrl mov cmpsl js (bad) push jle (bad) xor lods hlt lret lea mov pop mov mov jns mov inc test icebp out sbb adc ret cli jnp cmpsl lds xchg (bad) repz loop xchg repnz daa in into sub jno push sti mov jge insb stc out testb sbb xlat ja xchg jmp pop test stc cmp adc xor into mov test cld cmp pop shr loopne mov out lods and sbb add dec mov sbb pop cli scas lea jmp sbb dec xor mov cmpsb aam mov add inc jecxz adc clc push (bad) mov jg sub out mov adc inc imul in aad push sbb cmp fidivl dec xchg push dec (bad) push std jl and push lret mov into incl fs test mov cli push fst inc fwait test (bad) push or jno push out imulb movl rcrl sbb fwait loope incl mov aas idivb mov mov cmp cmp and shlb add push test into sahf xor or iret mov push mov jno sbb mov mov lods jno je sbb cld je inc sarl scas (bad) mov pop imul cs mov outsb and sub in cmp xchg movb sar add into fidivl jmp push sar jge jle (bad) lcall mov pop shr mov mov scas mov mov cmp sub sub fs pop aas cmpb js ret push test fnstsw dec out xor push loope and data16 movsb sbbl add xor cmc sub les sub xchg push jmp incl sar jmp (bad) loope dec daa adc loopne push jnp add lahf adc dec jns fisttpll inc stos sbb lret leave and mov xchg outsb push (bad) lock adc jno pushf jle sahf pop mov js mov insl int mov loope pop push or mov jecxz hlt sub idivl sbb bound pop inc outsb and (bad) pusha ss (bad) jp push xchg popa mov cmp das mov js (bad) sti lds xchg mov aad mov mov int3 enter mov xchg mov insb inc mov (bad) sbb mov movsl std jle mov (bad) mov add lahf add jecxz jnp push clc cwtl and inc lea xchg mov insb mov scas rol mov jae imul (bad) push std fwait hlt jnp mov scas dec mov mov inc inc xor ffree ss ss andl cmp xor pop or ds imul pusha (bad) hlt fldt xchg pop mov (bad) inc fs in nop pop dec or (bad) pop outsb sbb sub cmc (bad) mov call push jo insb sbb hlt test repz insl dec loope in pop and pop and add (bad) xor lret insl pop sub pop cmp cmc pop mov xchg daa mov out xchg pop mov mov lods dec test js das sub idivb xor mov (bad) sub lea ss xchg push sub sub and stc jmp aaa (bad) fild loop cmpl push jp mov pop mov dec ret adc idivb xchg sbb sub dec loop add dec dec sarb data16 aas fnstenv xor pop dec pop pop pop adc test push and mov lret xchg push cld pushf out xchg lock ret xlat (bad) adc pop dec icebp mov sbb jo push mov cltd das jne jbe jge xor mov in popf iret xchg test xchg ds fsubrp jbe movsb negl jle data16 push lods dec addr16 jp mov jge inc cmp incl divb sti ret ds xchg mov xor sub cmp fcmovnb jns cmp and daa jo xor or jb in hlt incl mov sub mov xchg cs xor clc dec lods jne,pn outsb into call jb mov push mov je int jno pusha subl (bad) leave and js loope ret pop (bad) idivb mov insb hlt mov pop mov fucomi sub (bad) loope fs ret into icebp repnz sub cmp icebp (bad) mulb xchg std test jmp pop (bad) fldln2 scas cmpsb adc push jne imul xchg add imull (bad) cli movsb divb sub sbb stos push in cmpsl call lds test jnp icebp outsl popf jno jl (bad) (bad) mov imul ja sub mov jg shll mov loopne cltd cmp icebp daa loop lds js loop mov aas or jmp aam jns xor aad sti pusha imul jb repnz mov jp clc jae out (bad) and hlt out punpckhbw scas xchg stos pop push shrb ja xor adc les int3 mov imul stos test pop mov std aas ret shlb insl or pop ldmxcsr call ljmp nop mov scas adc mov rcll fisubrl mov (bad) jg daa push pusha jmp std (bad) clc pop mov loopne pop scas scas outsl negb fsubr push push mov push fwait mov sbb lcall test and push jl and pop adc es ffreep incl adc pop rcr loope test mov arpl push pop mov cs and bound aas (bad) mov mov loopne adcl dec loop sbb xor fadd jns (bad) lds xchg push aam lahf sub aad adc xor xchg mov cmpsb icebp xchg shlb xlat xchg js (bad) movsb loop xor and adc inc xor cmp jae cmc sub (bad) daa stos jbe ja cli jp (bad) sbb rcrl jle inc pop in adc mov mov sub mov flds lea pop pusha mov pop xor dec push xchg lock mov inc out loope sbb push std lcall fbld (bad) fidivrl insb in adc adc or xchg iret mov imul jae scas loope cmp mov pop or adc mov fsubl add xor scas sbb idivb cmc mov test fwait stc scas xchg rcrb cmp in add pop insl (bad) mov mov jle inc push sti cmp cmp shr mov sbb loope cltd das mov adc xchg mov dec lods mov sub xor or jle clc pop loope std mov lock idivl insl lret loop imul mov push outsl mov ja mov dec adcl mov sub hlt fisttpll loop xchg cmp hlt fwait push sbb push lea aas in pop stc mov stc pop lcall fwait push icebp inc (bad) fild inc stos imul jmp add dec xor iret xchg shll test lret jo stos aaa xchg jne das jne sbb jg movsb lahf sub xchg mov jmp xchg cmpsl cs dec or adc sbb fldcw lods movsb es repz stos mov and roll ja or adc negb mov shrb out fnstsw das mov push inc aad js test mov int clc stos dec mov ss mov cmp cs sbb icebp (bad) xor pop add imul pop mov mov xlat lds js cmc push (bad) cmp push popf ss cmp ret mov mov xorl sbb movsb mov stos dec ds mov xchg xchg outsb mov pop clc push pop les mov mov jle xchg (bad) mov and mov cmc pop mov xor or mov fistpl fnstenv push push shl dec popf imul sbb push jge mov jne adc mov int push jns arpl es pop xchg pusha into xchg inc sti popf enter sahf xor loope clc jnp aam jl aas notb scas hlt int ret out xor mov inc les sub push inc inc add add xor stos hlt aad loope inc stos (bad) jbe cmp jno mov dec mov push (bad) sub mov hlt xor sub cmpl enter popa cwtl loopne add jmp iret cmpb outsl adc pop add mov stos ljmp xchg adc push sub out or insb (bad) int imul dec loope fildll insl in and test sbb in push push popa cltd sbb push mov aas in scas cmpsb clc jg fbstp aas sbb jle clc mov jns xchg insb hlt ret inc or sbb iret test lea bnd fbld clc fcomi ds adc xchg and mov pop (bad) (bad) ja jne sarb mov mov xor clc scas lds das je test push movsb mov jb sub mov sbb xchg movsb nop ja cli ret lds rcrb mov (bad) (bad) daa pop jns insl jae mov sti pop cmp clc jae stc cmp sub add push add pop add add aad pop add iret or adc repnz adc push aam cmp mov in jno loope mov and xchg iret dec pop pop popf out imul xchg adc movsl cltd mov std std xchg aas popf cmp (bad) das mov scas sti mov cltd loopne (bad) jae in sti mov cld (bad) repz jmp push sar loope icebp into cltd std lods cmpsb std mov jle add idivb gs cmp nop sub out jne jnp mov mov mov aas cltd clc jg xorps (bad) mov pop cmpsb xor test xor adc xor adc add mov xchg test cmpsl icebp aaa les sbb lcall aas xchg insl movsl insb jae sub stc push push lret adc pop cmp iret push xor incl lret arpl jg (bad) mov jl cmpsb fiadd (bad) cld inc cmpsb cmpsb mov in leave add mov mov and mov lret sti pop dec jle clc mov std imul test adc pop in in and loope adc sbb fstpl popf add fucomip out jecxz aaa rcrb sbb popa test jp xchg jmp (bad) loopne es dec push popa pop in rolb mov fistp rorl push div xchg std mov insl loopne fildl or in push xlat dec mov stos lret push sbb mov in sti inc jno and xchg add rdpmc fisttpll (bad) cli cmp inc ljmp mov mov jg hlt jbe xchg jbe cmp mov (bad) jne pop or out mov div fldt ficomp mov mov dec sub popf pop xor fxch inc add iret sti dec clc mov cmp aas loope (bad) bound je (bad) xor xor sti cmp enter jno int3 and ficompl jle jl mov sub (bad) sbb mov out pop in jo lods mov bound add mov daa mov psrad in inc stos clc scas loop (bad) cmc incl fnstenv (bad) lahf lock fcmovne stos clc jmp mov pop xor push push add and enter stos in jno xchg xchg fwait jmp movsl cmpsb lcall cld dec mov insl outsl lock mov xchg outsl (bad) iret psubb aas or xchg testb lds mov mov (bad) sub jmp lahf fwait push iret loopne sbb incl test xlat xor ds clc jg (bad) cli sbb push popa movsl mov fcompl fdivrs sbb int3 mov push or inc ds mov pop or pop mov xchg adc psubusw push push js out fimul clc sar cmp add outsl (bad) scas pop clc daa (bad) ficompl popa mov fsubp sbb out cltd imul push xor arpl outsl ficomp xor sbb test imul popa push jle cs xchg lods std in incl iret lock mov (bad) (bad) jo push cmp or mov push sbb fwait mov lock add fdivrl loop clc sub fldpi pop sbb outsb lods in loop add les sub (bad) add cmp jno and and xchg movsb jne push push mov pop mov aam mov push idivl push mov dec add sarb lds push movsb negb aad jmp lods push jp mov popa lea out or les lahf xlat mov xchg idivl jg lret lock ret incl adc pop imul pop ljmp pop ja mov mov jp mov sbb es jns int dec sti or sbb jp mov sti divb icebp push je hlt call rep mov push inc insl jge mov mov (bad) and test pop icebp push lea mov cmc sub fldt xchg xchg adc xchg pusha cmp xlat outsb pop xor call jno repnz xor push out test jecxz enter addr16 loopne sahf mov mov mov out xchg dec sbb or shrl fldt ret cltd cld add ss jp xorl mov pop mov rolb cmp fstl pop dec mov outsl sbb adc pop fcmovu pop dec out sbb ss add mov test mov sbb push sbb fldenv icebp inc pushf xchg fcomp ret jae mov lahf xchg loope leave pop (bad) xlat nop jns push fwait jecxz and push sar lret gs sbb rclb jmp push (bad) mov xlat cmp mov mov (bad) and xchg daa arpl pushf jl mov in test xor das adc xchg and mov xor or and xorl cld xor test or incl ret jg adc fimull mov int3 (bad) or mov xchg or sub or cmp xchg jle lock inc mov lea xor add adc mov pop mov movsl loope movsl inc mov mov scas ret idivb stc mov lock xchg jecxz or mov out xchg push fwait cmpsb (bad) pop jmp jb out cs xor lret adc clc push mov sti sbb loop mov insl sti aas dec cmp jne data16 ret outsl xor int jle add xchg inc xchg pop (bad) mov push ret sbb xor push push icebp or sbb in je mov push lahf push lcall mov mov and lea dec sbb cmp inc rcrl in xlat sub lahf adc adc das sbb aam push test (bad) xor gs push add mov (bad) push hlt (bad) mov bound xor shr pop adc jne ja aas dec sahf call test mov out gs inc repnz rcr mov add leave xor mov cmp lret sbb adc mulb adc dec repz pop stc mov xchg in fs outsl es cmpb sbb and jnp psubb jmp fisubr mov xor lret stos pop aaa dec stc jge repnz bound push xor sbb jb inc pop jnp and mov ret jp lcall nop int3 mov sub add xor xchg mov inc sahf rcr sbb lcall je jmp adc hlt add in jl stos cs imul std pushf sarb adc pop hlt inc or and jb clc mov xlat incl mov das in out or mov test mov mov add sbb call decb ljmp inc mov push sar iret jo lret jge xor (bad) inc leave add pushf adcb xchg sub in jle sbb xor inc dec adc sbb jecxz mov lret sbb sbbl xor outsb mov xchg xchg shl ss ja repz cmp sub pop (bad) cld imul xor loop ret in dec dec (bad) jne dec and xchg mov loop mov mov out push adc sti lcall aam adc jg mov ds jl shlb aad out lods loop scas sub popl mov jle out add push add fwait mov or mov lods popa push rcr dec adc stc ljmp sub mov aas mov and addl rcll xor rorb mov sbbb jl loope imul mov mov add or mov enter repnz jo jae xchg fldl cmpsb cld mov mov mov sarl icebp aas shrl xchg pop lock mov mov iret jne imul fcompl lds push mov mov mov jmp pop push and lds mov push mov push ret addr16 mov mov adc fistpl jbe out iret adc pop loopne mov xor ret not push dec out fmulp les pop hlt cwtl (bad) das nop sub icebp xchg cmpsl mov aam push mov lock cld inc mov iret mov push cmp push les inc xlat lods shlb stc cmp arpl mov (bad) leave sbb pushf mov cmp pop push (bad) sub mov push sahf mov lcall incl mov cs ret adc call lea out and inc roll jb pop pop lock outsb mov lds push dec loop (bad) in or aad int or mov or sub add jmp lahf (bad) test jne arpl push pop sbb adcl mov sub and sbb rcrl loop or loop lcall mov scas test dec inc mov out in int stc pop mov cmp dec lcall jno mov (bad) test jg jp clc aas rclb cmpsb (bad) xor movsl inc loopne fisubrl scas xor lret loop xor xor cmp ret xor jecxz test cmp mov or jno loop cwtl hlt enter push push and fisub dec nop inc add lods jle scas mov mov sub clc jle lret ret mov adc pop int xchg lret mov aas ja pop adc rcrb std sahf mov push pop (bad) cmc mov fld1 repz jmp movl mov setns ja ds (bad) idiv xlat cld aas int3 jne mov jle jmp lock lea dec int3 mov test add adc rorb into dec scas ja lock sti cmp rcrl aas mov arpl cmp lods loop pop dec mov or in sti fcomp push inc inc arpl and mov xchg lea jg lea rcrl rcr imul leave ret add add leave or repz mov mov (bad) adc or xchg and dec jle (bad) sub mov in add pop movb lahf das mov fisubl mov into in imul xchg dec xchg outsb push jmp outsl shr (bad) adc das paddd jg cld imul jecxz pop (bad) sbb test push mov mov adc xor pop test dec ds (bad) jle jge hlt divb xor movsb mov insl dec ss mov ret sub add mov cs fnstsw loope sbb lds js insl lea js in subl and cld les xchg cmp lock sbb sbb movsb (bad) jp (bad) insl fildll push (bad) fcomps add dec xchg cmp out es sti ds sti mov leave scas mov xorl or aaa test das adc inc rcll xchg push pop inc shrb mov sbb mov subl ja mov les xchg pop or xor add add fwait scas iret insl sbb in enter incl mov call sub cwtl jl jmp lret cmpsl fidivr or pop aam aaa pop stos pop push ja jp iret mov jnp aas sarl into lahf push mov movsb fidivl add push pop (bad) sbb bound pop cmp mov jl dec or ficomp imul in mov mov out dec or sub lret cld inc scas inc lret cld or incl les push lret pop dec into fist lods push popa jno lods ret adc loop cs mov push movsl into into fwait mov (bad) push clc lret imul pop pop pop fnsave fisttpll out je mov or push push fidivrl popa imul mov pushf mov mov mov pop jecxz ret push clc jnp and (bad) mov xchg ljmp mov xchg out inc push or jp cld inc jnp jae sar and ret daa lcall aad (bad) aaa mov or sub adc cld faddl (bad) pushf xor aas push lock cli push xor adc fs nop daa xchg (bad) push insl movsb add test mov sahf sub xchg fsubrl cs ds imul lock aam push jp cli sub jns pop jns movsb add into inc lds mov fnsave jne jle je leave adc xchg pop mov ja xchg jmp cli fcompl movsb shl sar insl cmpsb (bad) dec and jno xchg enter push pop push sub add icebp or das les incl test lds cmpsb mov xor and mov (bad) ret jae mov and cld aaa sti xor xchg test clc jbe insb mov ja pop and jno add sbb jecxz mov (bad) pop dec arpl das adc sarl cmc push call (bad) push adc push dec xchg xchg stos mov mov sbb mov gs fisubrl fwait jg fistpl cmc cmc pop data16 lret pop sti das int3 in xor out xchg push jecxz sti lret jnp arpl jp scas test fistpl mov xor or jo (bad) pop enter pop pushf add out mov mov clc pop icebp stos ret jp mov daa mov sti sbb inc adc add sub sbb pop incl in mov mov mov scas mov idiv fs dec into cli gs inc push and sbb gs mov rcll pushf cmc xchg inc jnp ss outsb (bad) aad arpl sbb mov sub stc stos (bad) mov pop in fist (bad) mov outsb out daa fsubl (bad) dec cli cmc ds dec sti push jmp cmp imul data16 out add cmpsb (bad) rcrl pop lods inc dec xchg inc pop into push cmp aaa inc in fdivrl dec lahf push in mov xor sbb clc (bad) icebp inc push aad inc mov mov out and loop lea sub mov and xlat mov mov leave jecxz adc int (bad) dec adc cmpsl lods adc lret sub add pop xor mov (bad) repz mov je mov pop (bad) das arpl mov push fnop mov stos pop and adc mov adc jo mov jno mov icebp aas pop std in mov out pushf pop lret lcall aad incl push fldcw sbb lahf mov cmp pop pop push ljmp and mov out inc sti (bad) mov stos mov (bad) int add scas cmp ds add loop add (bad) cmc iret sbb and je (bad) test inc sbb loop repz inc sbb xchg jno pop or daa shr loop fisubrl fistpl (bad) fwait mov popw mov popf mov mov in xor lcall data16 insl cmpsl xchg movsb (bad) out mov inc in rorl (bad) icebp cmp lcall seta cmp mov insl pop std cli mov aaa xor (bad) xchg pop inc std scas mov mov out mov pop cmp push cmp pop popf test fmul outsb popa mov mov (bad) jo repnz popa mov jecxz xor cmpsl clc adcl lods fs ss mov int3 orl cmp push ja add daa xchg loop xchg sbb sub outsb sbb pop and and push sub mov aaa adc into add xor jbe adc xor inc inc icebp lahf les pop aad inc (bad) jne fcmovb lea fwait dec incl fyl2x inc mov and xor data16 push or dec jb lret jmp out incl and stos lods jnp jl,pn clc cmp lock ret fild pop int3 fidivl negb xchg push sub jns daa pop shll test in into mov lea sahf adc push xchg outsl jo mov test xchg dec push arpl and push dec xor pusha sbb loop mov daa js ret cmp jnp addr16 mov test mov test mov inc xchg or repz push js lds les jle lahf pop jl jnp mov ret lcall pop jl cmpsb add xchg lods sbb rcrb xor and jbe pop xchg out add scas clc jae jno lcall and iret sbb push cs push xchg sbbl jo popa sbb xchg sub sbb sub adc xchg xchg (bad) push cmp add lock xchg aam xor outsl dec lds mov push xchg movsl mov mov jns pop fsubrl xor loop arpl incl (bad) out mov jl mov mov dec push aas mov lds je pop lahf aas test fadd jbe adc jae stos incl add clc dec scas imul lcall or incw test pop in mov out iret iret sbbl or sbb std popf push cmpsl xor cli cmc shrl pop adc mov cld into pop jmp pop test lret outsl push pop js pop mov clc outsl loop mov mov xchg imul dec and lea adc add inc inc pop jno lea ficoml in clc (bad) mov ret test jle lock hlt lcall push fdivr lahf ficoml and mov sub les push iret loop xchg icebp inc not std test or dec adc cld bound ds (bad) fildll push inc stos mov pop and add add pop ja cmp sahf incl (bad) pusha cld add and push dec mov popf jecxz and aaa pop xchg jecxz sbb lret insl adc fisub (bad) ja addr16 xchg xlat jbe movsb call (bad) outsb (bad) mov mov out mov xchg pop dec mov jns nop (bad) (bad) ds addr16 lahf lock scas fsts and (bad) movsl push jecxz mov xchg iret sbb xchg or gs mov aas xchg jl icebp (bad) jmp lcall mov adc call add (bad) scas add mov hlt (bad) ret push mov imul mov stc or lods clc outsl mov loope lods iret xor sti dec mov and or push movsl addr16 jbe mov and loopne pop fiaddl stc sub movsb fwait rcrl fldcw (bad) ds adc lea dec divl aaa lds sub clc dec mov and lods loope pop pop fist sub xchg and xchg in adc mov out aaa inc mov lock xor cmpsl inc inc cmp lock out repz call (bad) mov pop mov sub mov js cld js pop aad aaa outsl jnp stos fidivrl sbb xchg rcrb jecxz or pop sbb into divb in xchg (bad) cltd jno outsl sbb xor pushf lock inc or popf sbb push in lods xchg cli stc mov repnz jbe mov (bad) dec iret ror cmc gs ret scas imul clc dec dec shlb jne lods inc xor insb insl lods mov (bad) xor sub jno lcall mov mov rcl dec mov rolb loop adc fisttp pop pop dec sbb xchg xchg xchg cmp nop adc andl mov add xchg sarl mov (bad) sub push xlat mov xor in push cmp add test push (bad) and ret das adc pop xchg icebp sti (bad) (bad) mov ret imul dec insl add or sub inc push orb pop inc neg sarl pop mov movb loope mov lcall mov ret iret sbb je add jecxz loop push repnz insl jnp pop mov cs mov sub rol dec inc mov into dec lds xchg arpl pavgw sbb sbb pop cmpsl mov cmp into mov ret out cs mov jl adc pop lahf loope repnz fidivrl icebp incb mov push aad fwait lods sub in (bad) mov pop jnp mov xor push int3 and sahf dec cmpsl in incl loope daa pop std mov outsl adc mov dec pop clc inc arpl and mov mov pop dec and jl sub xor aas and int jle mov into stc mov (bad) jecxz xchg dec outsl mov sbb lret mov gs addr16 mov cmpsl (bad) pop adc ja loop imul cld sub bound int (bad) hlt in cwtl cmp in push cs ret xchg cmp push jl sti psubb das mov jl lods fisttpl push jmp in cld aas cmpsl lods jno loop inc mov inc iret mull adc jnp cmpsl (bad) in imul aam pop adc lret jp mov add divb xchg inc adc add lea out rorl ret mov stos loop jl aam pop mov cs xor lock xchg mov xor inc push xchg ss and stos push jge xor outsl inc (bad) test pop xor pop jp and imul lahf leave and jecxz (bad) sub adc mov xchg leave push mov incl ret push pop push addb lea in cwtl add psubb idivb loopne (bad) sarl xchg push jne and inc push inc xchg or pop std xchg (bad) or cltd mov jle pop cld jo cmpsb jl loop jg js push mov sbb movsl lods sbb ja mov sub in data16 inc adc negb sbb jae jnp cmp fwait arpl inc loope add lock mov out add sub inc push mov mov mov mov mov mov jp mov cltd fdivrl fild jg scas adc sub clc and mov test idivb or scas jno popa sub negb popa addb lar mov (bad) loope mov scas xchg imul stos jle outsl test sti lods inc xor and fisubl out add dec jg xlat pop sub sbb jg lret xchg test sbb add cmc imulb incl push dec jle cld pop clc jg mov imul adc adc lods int3 sbb idivb push xchg inc dec fisubr cli (bad) mov push mov mov aas imul adcl test insl pop sbb mov dec data16 test into push adc in pop xchg mov loope mov imul pop les xor mov jb mov sbb (bad) mov xchg (bad) jg push aaa dec inc push push pop (bad) pop add rcr scas ret dec mov mov push fwait loope mov (bad) mov dec jno inc (bad) dec inc stc sbb nop xor jns scas imul fwait push sarb push js pop shrb dec cld lea loop (bad) in mov xchg push test jle movsb rcll mov (bad) mov mov push ljmp add loop ret dec icebp pop subl lock (bad) sub adc fstps lock jbe xor push cmp int loope adc xchg xchg mov je adc lods inc in jbe dec pop sub jae dec xchg ficompl test pop mov lds ljmp clc lret ja cltd or test mov pop fild clc out sti aas (bad) sbb clc mov jmp inc or sbb mov lret cmp jae adcb sbb xchg arpl xor cmpsl cltd leave push push jmp vpsubusw jg sarl mov xchg fldcw sbb sti adc inc xor and pop mov lods gs paddq (bad) lock ret fnsave push push dec cmp mov imul fs pop vmptrst pop push add and adc cmc sub cltd and ljmp lds aam test (bad) lret enter mov pop or mov ljmp xchg repnz xchg sbb fs adc cmp and xor in jmp xor push jmp mov add mov mov cmp mov and sbb mov pusha cmc jmp subl sbbl dec xchg mov and adc (bad) push mov fwait test push cmp iret pop cmp sarb adc adc notl xor mov hlt mov add mov xchg (bad) test icebp incl mov dec cmpsb inc lods clc ds out lret dec inc push or and sbb lock jae xor pop incl loope imul jle mov shl aas mov ffreep jg jle xlat cmpsb icebp sbb ret mov xchg movsb mov sbb popa mov push faddl or push lds jg or jbe fidivrl mov fiadd and adc or push shr pop inc sti xor lods lock pop pop pop push in outsb xor fldt jge fmull pop dec sbb pop ret mov push jns xlat ds and in addr16 cmp (bad) sub sub fisubrl or lret fsts mov inc iret mov aad inc sets into lcall aad xchg test cmc into xchg sub int3 pop das mov add in mov push jb push mov test or out mov es mov jg inc lods and (bad) cmp mov (bad) shr adc outsl lock ljmp in (bad) mov (bad) add inc cmp jno adc orl into mov sub shrl cltd mov or push and inc jno lcall pop cmp (bad) pop movsl ljmp fsubs inc and insb cmp push xchg push int3 aad adc (bad) xchg stos cmp popf les icebp dec lret fldl add setl push mov xchg (bad) fcmovu out pop repnz in mov loop imul jne mov mov gs jae or xlat jl mov gs iret xor lcall mov incl js notl popf xor lock xchg mov jmp and mov xor arpl jne push int3 and cmp cmp sbb or lea push add bound cld stc cwtl sbb mov repz fwait push sar push es lods fiaddl lea rcrb ret mov inc or nop jo jecxz negb cli outsl mov movsb sub cmpsl jo and es cwtl or jecxz imul dec lods gs dec xchg arpl pop (bad) xor sbb xor or add lods (bad) mov mov mov jns jle lock xchg xchg mov negb ret xor push fwait push xchg pop cmp sbb les dec ljmp std inc dec mov int sti mov pop mov ffree xchg stos jae (bad) sarb enter pop outsb jl test imul adc pop cmp jecxz (bad) pop ficoml mov and mov add fisttp pop sub out in negl in jae iret test cmp icebp dec notb xchg cs mov cmp mov test les (bad) cli add cmp inc out xchg aam pop add clc jg jbe (bad) iret test sbb loop push inc aam or lret pop pop leave xchg push sub mov cwtl push das sbb sub cmp ret rorl add outsl hlt mov inc addr16 xor daa ficoml (bad) and cltd dec dec push iret xchg out mov fimul adc xchg lds fidiv imulb xor lret into incl cmp sub fs cmp ljmp xor mov cli fnstsw outsl les clc jae clc in ja sarb repnz xchg clc ja jnp sbb xchg sub add push pop add in loope mov mov cmp push arpl xchg pop ret insl out test repnz stos adc adc adc fisub clc movsl loop sbb ja dec loope popa mov iret in and movsl pop inc incl mov inc xchg push pushw rol sbb (bad) xlat loope scas jae pop ret mov sti jmp int (bad) xor dec test stos enter add mov fmuls xchg stos sahf jp nop cmp push xchg mov xchg fisubr icebp push mov dec sub jnp leave jns ja xor leave loope fiaddl lods das (bad) (bad) push pop adc inc movsb mov mov adc fisubrl stos adcl fwait sbb test xchg push xchg aaa fdiv sbb icebp mov mov lock in out int3 mov mov lds jbe push lock jns popf dec push mov imul into push and sub sub add sbb outsb jecxz adc xor aas or imul ds test mov mov push push pop imul (bad) jl pop inc sub sub data16 (bad) and imul and repnz pop lahf loope cmp ret movsb mov dec out addr16 ljmp icebp dec jnp mov movsb jo ljmp test mov setl je adc mov lock test sbb push adc mov pop or ss divb outsb add dec repnz aaa repnz bound into cmp sbb sbb jle pop push fisub mov dec lea cmc sub test xchg and ss sub jo or jecxz lcall jl aad jmp imul xor (bad) sbb ja push mov icebp pop je push xchg gs mov int xchg rcr pop jp ljmp jg test outsl sbb push clc test arpl jge and and adc add addr16 outsb push or pop nop imul xor dec lock les (bad) push (bad) sbb sub pop popl and mov sbb xor xchg lock cmp mov icebp das test push (bad) int3 arpl in movsb xchg inc mov jge loopne leave lods jecxz ficompl (bad) push ss jno adc inc outsl and lods push inc out insl iret test sub inc into push xchg jl mov sbb xchg and fstpl xor mov stos dec out jg jg cli pop idivb jle insl lock pop mov mov sarl jnp bound loopne out (bad) addr16 mov clc mov loope xchg stos sub mov imul insl in mov mov movsl push adc cmp lahf push test dec sahf push adc xchg (bad) fcomip setns rcl and popf vpaddsb and and (bad) shr int3 imul jle dec and mov les inc mov lcall jbe or and jmp rcrl add pop (bad) hlt sbb mov js addr16 cmp inc addr16 dec ret jb rclb sbb int icebp push stos jno sub lahf fldt jns pop stos pop add sbb cmp push add push xor (bad) imull dec jmp ljmp sarb icebp dec xor incl cmpsb je cmp xor (bad) and fidivr (bad) and (bad) adc fnstcw loope mov inc jl (bad) mov or ret pop push (bad) push inc cmpsb mov loope out outsl push push pop fldenv pop (bad) dec adc xor lods leave cld pop testl adc (bad) sub push lahf (bad) out mov cmpsb push and mov mov jbe into roll cs jecxz ds insb mov out lds mov loopne mov data16 insl dec ret fbld mov mov sub lock (bad) dec lcall jge mov sti lods jb dec popf or jno adc (bad) iret in cmpsl icebp xchg fcmovbe ret or jae (bad) sbb psubb mov adc lcall test insb lods sbb adc xlat adc (bad) lds or jl scas (bad) jl dec fwait icebp push adc sbb jns or inc and or in nop cltd push push jle push sub sbb mov ret ss imul jg lea lret pop into data16 xchg and lods cltd pop lret add out or fimull pop ja loop mov pop push icebp ss xchg fsubrl mov outsl or popf sbb shll or stos cwtl jg (bad) popf sub add in in push cmp sbb xlat ret lret dec sarl pop icebp psubusb add in mov out imul xorb push jl (bad) iret aad incb fnop jg jle lock jae fisubrl hlt fcmovnu lea aaa enter jge fld out add inc mov icebp idivb jge js test mov movsb sub mov push dec and popf mov pop cld mov iret (bad) jns cmp ret daa (bad) mov jge dec mov cmpsb inc (bad) cmp inc insl in cmpsb dec sbb sahf xor gs mov js pop insb stc outsb ficomp push cs (bad) mov jmp icebp roll std mov pop stos jl lock lds or inc stc test jo stos dec mov test mov inc icebp into mov outsl sti pop loop mov clc aaa dec jnp add sbb lods lods jo push cmp into (bad) mov out add push icebp sbb fidivr lock les dec repnz mov push pop pop popf insb out cwtl push fimull inc pusha inc push adc les sbb icebp sub out xchg lret mov insl push inc push pop imul enter jae addb push sarl loope sub mov sahf or fist aam loopew ret psubb fldpi (bad) ds sarb (bad) data16 (bad) add jg,pt inc push popf fsubs push or cwtl pop cwtl xchg in add and loop mov pop pop clc dec (bad) (bad) (bad) dec loope test mov lods fmuls loopne bnd push jae jae add and cmp mov pop sub cmc sub push popa cmp stc cmp cmp lea icebp sahf imul pop sarb mov aad inc (bad) mov inc sub int arpl les mov scas cmp mov int jno xchg mov xor divb sub lret mov sahf test dec ret lahf mov repnz out repz xorl mov push inc mov or ss cmp cmp pop lea mov clc lcall xor mov ljmp push push push lret xor dec into fsubl sarl loope icebp xchg mov and pop mov fildll sbb mov sbb ja lods inc xchg sub mov inc fimull sbb xor and cli jle fisubr cmp adc jg mov fcompl dec fs adc and add je in lret fisttpl lods (bad) xlat lret stos pop dec (bad) pop cli fdivr fdivr xchg xchg call mov (bad) cltd lods insl pop mov inc ja fs out lret imul xor daa jo sar add add jmp xchg push jmp mov xchg push scas cwtl repnz repnz jno bound mov pop cmp or cmc test incl sbb xlat in cmp fidivrl andl movsb ret test imull divl xchg cmp xchg jecxz out test mov in lods cmpsb jmp adc rcrb fimul es aam out pusha gs pop vmovupd mov pop pop push (bad) lea cmc in jne aad int3 lock xor pop (bad) dec dec cmp or push rcl mov in in cmp arpl sahf jne pop and and mov int mov mov add sti aaa imul sar sbbl imul mov aam dec mov adc popa jo nopl mov mov lock sarl cmp clc and ret dec popa decb dec outsb fsts mov jo bound test incl add add dec js les jno mov jns ljmp shlb jbe and push incl sub jno push pop xchg pop dec out dec mov pop sub jns ds cmp mov mov pop mov jg xor add mov dec (bad) (bad) jecxz lds jg paddq int3 movsl xlat (bad) hlt pop repnz mov sbb jge,pt iret xchg dec jl lock xchg ret jg je sbb pop leave imul fldcw fs sarl out pushf xchg dec mov mov xchg into loop xlat mov pop fidivrl mov pop lds pop es imul dec sti stos cmp int mov mov insl (bad) ss mov jg fnop data16 (bad) hlt test lods data16 adc jns lret insl sbb fs popf sbb inc cmp notb push or fwait xchg (bad) push repnz scas jle (bad) les push fcom (bad) sbb xchg ja dec into pop std enter clc sub inc lea sub (bad) push test mov pop pop push jmp sbb sti sbb jmp scas cld jmp sub mov mov pusha sub dec fcmovnbe loop ret jle jle lock mov aaa call shll cmp mov aam xchg sbb or mov enter outsb inc movntq mov push mov clc jle pop out test nop dec and mov cmpsl (bad) pop out lcall daa mov mov (bad) das clc dec loope and pop test pop daa xchg cmp movsl shl mov in clc jne push push mov add je popf or or xor inc (bad) mov (bad) (bad) dec iret scas std fnstcw dec add out fcmovnbe in mov pop fcmove lret lock add mov mov std movsb sbb dec jnp inc cmp add sub pushf repz sti incl add clc sbb divb or pop sbb inc imul add push mov inc mov shrb push dec rcrl lock xor dec scas add xor fsts stc dec push cmp ret imulb clc outsl loop test (bad) mov push mov sub ljmp inc std cmc movsl out cltd imul loopne mov fisubl arpl sbb insl outsl lahf cld add push iret lock mov lret out cmpsl shr sahf push std stos ds jle lahf mov negb xchg (bad) nop (bad) sti ds or std cs push xchg and stos icebp jmp aas mov int dec ret ds fisubr mov inc sub xor fild out shrb xchg insb or int adc push mov dec notl mov lds das icebp pop xchg aaa imul or loope pop cmp jno imul ss inc pop pusha popa sbb out fsubs push std mov push jecxz jno jne in outsl push mov icebp mov (bad) mov lods fisttpl pop movsb fiadd xchg add mov shll adc cli mov push aad not frstor mov (bad) (bad) aas mov in lahf lock mov std mov cmp loope idivl mov aaa inc out and mov inc pop out or pusha add cmpsl mov add mov (bad) xchg inc aaa ficomp (bad) jne cmp jp xlat cld sub cmp iret int3 xchg xchg insl loopne mov lods inc movsb mov (bad) mov push incl add stos push lock int3 aas pop data16 sub hlt lods dec loop loop (bad) int cltd or imul movsl xchg loopne fs lock fdivr test das test sbb mov mov jb daa mov hlt incl vmptrld push lret add lcall xor or int3 or mov xor fmulp out div dec fisttp inc insl hlt cmp pop sahf mov jl cltd fidivrl loop out vmovd jecxz in mov cmpsb clc ss mov xchg push mov sub icebp inc jo xchg ss add (bad) adc int mov pop loop push push fwait push mov fistp repnz inc lods icebp xchg xor pop aaa adc adc fisttp jl incl or mov mov or pop std jne xchg adc ret xor (bad) insl mov (bad) inc clc pushf sahf xor daa lds movsl imul sbb adc mov jno sbb repz scas ss inc loopne push push sub ss pop mov inc out sub int jmp scas fxch push sub dec mov pop lret js loop test incl or fwait jecxz out push pop pop pop fcmovnu scas xchg arpl out pop ljmp inc pop xchg sahf add pop sti inc ret and leave mov aam cmp sti push mov imul cwtl pop dec xchg addl add mov adc ja sbb std pop loope xchg sbb (bad) in ret mov xor push adc (bad) dec enter in je outsb dec jge loop incl fnclex pop push pop or dec cmpl test dec mov sarl adc mov adc into push push lock pop mov xor mov negl test pushf jge xchg fstp (bad) lret incl cmpsb jp xchg push or popa cmp std ret pop js dec fisub daa imul push and add pop fcmovnbe loope std scas sarl add ret dec mov (bad) (bad) mov ljmp push loopne arpl in outsl movsl pop lock mov mov adc cmp pop push mov or fidivrl push or sti scas mov lahf fisub or clc sbb neg icebp xor iret xchg pop adc fisttp fildl imul imul stos popf les shrb xor aam mov pop sti incl pop cmpsl sbb fucompp cmpsb ljmp ficom dec mov fistp mov mov xor and inc jne cltd cmp nop aaa add enter idivb and fcomps adc lret loope dec fstps lret les aad lods jcxz mov push ljmp add xor xchg sti push imul (bad) fisubrl mov aas pop mov lock imul push or mov lahf loope cli jns ret (bad) fidivr jle clc push dec sar or cmp mov or sub jne adc sub test flds not push cmpsl sub pop sbb dec mov sub popf xchg jae aam push (bad) iret xchg fsts pop xor xor add xor sbb gs or or add pop ret lret incl mov mov scas test cli pop mov testb sbb lret scas dec or jbe cwtl nop lods pop jmp mulb icebp inc mov sub sbb sbb mov (bad) pop xchg cmp xchg cmp xchg pop mov out xlat and sti xor mov clc gs mov dec outsl test jnp out insl in fist inc jl cmpsl push add xchg mov push dec (bad) pop adc lock inc (bad) xor dec inc loope sbb pop test insl movsl jmp xor pop mov fmull mov push loop inc push xchg (bad) push cli push in jae pop push mov jno dec push cmp inc out jle scas fidivl loope les fsubrl sahf add out gs (bad) or fwait js pop loop jmp push fstpt in jge cltd mov jle stos inc imul out mov mov sub push icebp insb fstpl fild jmp ja cmp xchg mov movsl pop dec mov fidivrl iret ret lahf add dec lock lds cmp xchg inc mov jne (bad) enter xchg and pushf pushf add aas push incl rorl xor dec mov test ss dec in sbb (bad) iret sti jae cmp out dec inc and shlb in xchg pop cli jge mov sbb (bad) in int3 jnp addr16 add inc push stos mov mov (bad) movsl scas fcomps and fnstenv mov outsb add les push jb pop fnsave out jb jle jo mov idiv xor xchg jle js pop sarb dec jns jp aaa xchg mov dec push in xchg lret xor jbe bswap sahf inc adc push clc push jg cmpsb mov das push js dec imul inc (bad) sti cld test loop gs cmp pop xchg lea add lds jbe cmp cli sub lods icebp mov insl enter cmp and mov cmc stos cmpsl (bad) mov inc into ficomp lods outsl add (bad) pop lahf cs pop (bad) (bad) cmp pop push cmp adc mov cmp jl hlt hlt out scas xchg and xlat cli pop sahf fyl2x ja xor incl sbb out icebp and clc jecxz xchg into aad fucomi addr16 pop adc and pop clc mov addr16 mov icebp mov cmp cmp stc cmp insb xchg cli or aaa cltd sbb adc sub dec sahf dec (bad) dec xchg (bad) aas mov sarb sub imul cmc or in mov cmp dec in jge jns jl in push cld jae scas add pop lock xchg cmp xchg cmp (bad) push xlat push scas and push dec loop std rolb dec xchg jbe fcomip pop lock lods (bad) scas lret imul mov (bad) sahf cmpsl test fistl into mov jge sub lods insb push jb imul dec push jae mov cwtl faddp add (bad) pop out mov imul add data16 idivb inc mov scas imul leave xchg bound sbb jge add xchg ss fistp push je inc inc pop cmc pop and sub xchg dec dec push add sbb and bound and stos jecxz adc (bad) and push xchg loope pop adc (bad) mov (bad) imul dec cs adc jno mov push imul or out and hlt or cmpb stc pusha mov movsb dec lods xchg std scas popa cmp js mov xor js push fcmove loop xchg icebp pop inc shrl jl stos jg std xchg jp shl roll repz (bad) sti test out outsb dec scas sub jl lods mov jecxz insl push push mov je pop sub stos lods out adc sbb lret mov imul loope (bad) sbb inc nop ds in shr stos lret rcll dec and repz jle xor loopne sub in or idivl fimul js les icebp sarl les mov test xchg pop cmpsb sahf sbb jne ss xchg orl pop pop jecxz or sbb push outsl sub mov jno mov cmp pop and movsb es sbb enter dec jle mov fstl (bad) xlat add aas cltd (bad) dec jmp das sbb sbb je dec fmull jmp push mov cmp rcrb fucomi jb (bad) mov adc inc arpl jmp cmc xor (bad) sti xor test incl add lock (bad) loop fxch inc clc jnp call jmp pop dec adc je mov mov cwtl jns repz in sar inc lea jl,pn clc sbb push js jecxz cmpsl loope xor add pop push idiv push adc stos pop stos ret jae dec add outsb out repz sub sbb clc (bad) jecxz add cmp movsb movb sub movsb push aaa out push stc mov adc clc sub ret in jecxz,pn push mov idivb pop scas stos jbe xor mov xchg aaa xor test in mov jae inc outsl dec (bad) mov mov jle or adc rcll and mov inc std popf loope mov or jmp pop lcall and jae pusha adc xor loop mov xor sbb mov add mov sti adc pop sbb or and pop ljmp jmp call sbb mov imul arpl pop mov or (bad) icebp mov add pop dec test stos push jp xchg incl or jb dec pusha rcll into cmp aaa pop in int3 aaa push jae mov lods test pop out out repz inc mov pop cmpl push add sub mov dec shr insl add fld jne subb mov and and sbb pop divb lea lea pop mov mov cmc scas rorl lods in sub (bad) jb dec into mov inc mov loop mov dec icebp (bad) dec icebp ja cmpsl repnz sub sbbl aad mov adc and xchg cmp sub sbb imul push ret sahf es clc adc mov mov xchg (bad) adc imul push inc sbb fistpl (bad) pop stos dec divl pop inc outsl aas sbb fisubr mov fisttpll ja mov pop idivl lock jns lcall pop sti and pop xlat and pop jge mov int xor sub sub adc mov mov ja push push sbb int and clc mov loope xchg or lods pop cwtl cmc movsb mov sub shll lret sub scas xchg loope xchg or mov stos mov jecxz cmpsb mov dec mov jne arpl (bad) sti (bad) cmp pusha lcall xchg lds sbb insl outsb loop adc pop or stos inc pop push xor imul test (bad) into mov mov add cmp sti outsl addr16 int and daa loope push (bad) clc cmpsl mov movsb pop mov or mov mov mov or icebp mov lahf sub cmp cmpsb clc pop cmc sbb push mov push xor mov gs mov push xorb dec into adc cli inc (bad) mov mov test add jne sbb inc aam incl bswap outsl sbb inc into aaa repz cwtl mov rcrl xor adc in add xchg clc mov mov in jl mov jno sahf mov dec sub outsb adc adc pop or or lods jmp cmpsb frstpm(287 xchg mov scas popf insb cmc aam xor (bad) mov adc das inc (bad) xor mov push xchg dec jecxz rcrl sub sbb add mov loop test jmp insl jno (bad) ss test mov enter sahf xor pop test mov cltd loope mull and jbe add repz repz jl dec pop insl xchg loope xor dec add fisttp (bad) cmp gs loop aam inc test add push or clc pop inc stc sbb pusha dec into sbb mov das js outsl mov fist decb clc inc dec lock mov mov pop xchg pusha out and inc fildll fimull inc add cmpsb mov jmp push mov lods loope aam mov or nop lods or inc mov jb xchg inc pop sbb xchg push imul loope xor fnstsw mov outsb xchg fisttpl in int3 idiv inc (bad) push adc repz sbb (bad) cltd and lcall test rcll mov adc adc add add mov aam aas icebp mov dec dec push incl imul fldt pop xor or stos dec adc cltd iret pusha inc scas inc idivb sarb out mov mov scas mov (bad) mov push gs cmpl push jl nop ret (bad) jl clc sub icebp das (bad) xchg (bad) xor aad jecxz mov mov rorb mov pop in aad cmc ret arpl movsl dec cmp mov jnp je scas fidivl dec outsl fist dec and mov cmp movups sbb scas jle clc ret sarl mov shrl and (bad) ljmp test add subl fs mov jmp ja js in in ljmp lret xor xchg dec xor pop or cmpsb fcmovnb loop add sbb stos pop fsubrp sub xlat jp lahf cs push sub ss cmp repz (bad) lock loope mov mov fisubrl xor pop ss fwait iret mov sbb fsubp and gs ss or cmp clc adc repz push jge mov xor out mov outsb outsl jle sahf or push incl add inc pop es push lock lds outsl push ss hlt fidivrl dec fwait dec mov in shlb (bad) pop stos mov pop and out sbb add mov add mov jmp mov and lds mov shll cmp push loopne pop sbb (bad) cld incl incl add clc cmp rorl jecxz sbb mov mov cmc aam dec pushf adc int movsl lods or jno xor xor dec stc dec shlb cmc pop pop xchg loope jne cld icebp push mov jge xchg jbe fidivl xor jecxz shrl fs shrl lock incl addl pop fucompp mov jg xchg lahf jne xchg scas sbb aad test andb xchg incl andl pop adc pop xor jg call lret imul (bad) test sahf xor bound pop mov jns enter sbb add sbb lock pop push decb incl jecxz add fdivr ret ffreep (bad) mov jnp and (bad) int3 addl cmpb mov sub clc daa cltd xchg (bad) xor jns jnp jp mov mov dec in loopne incb pop sbb lahf ret pop sub and pop imul lahf dec mov movsb insb ret add inc adc daa in (bad) incl add clc subl cli sbb jno mov ret les loopne sbb xchg xchg enter fcomip pop (bad) fnstenv sahf or mov or fbld (bad) mov outsl test mov (bad) cmc aaa cmpl dec jb xchg mov add dec addl jbe add adc inc pop jge sub test shrb rorl ds jecxz,pn movl out mov loopne mov pop lock sub lods pop ret cmp scas loopw outsb lret xor inc mov xchg ret and pusha mov and lods clc add mov add js dec pop or cld pop scas jmp sbb mov mov adcl int sbb arpl adc (bad) bnd jecxz xor and mov movsb shll shl mov cltd out mov mov jnp orl (bad) inc jle aas adc dec xlat mov mov xor in mov cmp jmp arpl pop pop in pushf xchg shl stos gs jns adc xor jnp xlat enter xor stc xchg inc adc add in fimull (bad) loope mov lods pop clc (bad) dec clc xchg loope out mov dec xchg loop xchg divl or add ja or xor into jg decb ljmp sbb push shrb movsb xor jo sub mov adc divb int sbb mov mov lcall push lock add shrl (bad) loope add js pop test jge xor aas fsubl cmp sbb cmp pop add dec jnp fcmovu jg loope mov int3 xor leave push dec divl lods popf pushf jns div ja jle jl incl subl jmp outsl or sti dec call mov mov push mov push mov sub sbb stos mov add xchg sbb jl incl add clc (bad) aas in imul ret xor aas ret (bad) sbb push mov jge dec popf addr16 gs dec inc mov insl ret push repnz xchg mov push lock mov xlat pop (bad) idivl push lods mov jno inc enter das in lods cvtpi2ps xlat inc ret adc push fwait outsb sub dec inc stc sub je sub mov popf mov sub push xchg add and pop add ljmp lea mov iret sbb pop pop lock lds es scas pop clc mov lods jae mov jbe addr16 mov ss xchg cld jmp ret nop push loopne clc sub add ret loop test lock outsl mov imul mov out test shl or xchg sbb cmp lock faddl jg clc inc adc fcmovnbe je loope cmp sub repz cltd xchg imul aam mov jl dec xchg imul push jle dec pop enter xchg cld adc lds dec loope mov sub cli aam xchg pushf lcall inc jmp mov cwtl mov and pop inc sub cld adc idivb incl xchg leave aaa sub aad aad insl es push loop int adc imull sub lea std inc xlat repz pop or lock fist pop (bad) rol cwtl rcll xor gs add adc cmpsl and jbe scas popa andl repz push mov enter sub stos lea mov mov lcall loope add ds mov or jo pop xlat push sbb in je fistpll xchg push push inc into out mov fs jae mov lcall lock add imul stc xchg ljmp or testl in les dec daa cld sbb lock outsl (bad) mov mov les push sub sbb arpl repnz call into pop add pop icebp cli inc icebp sub outsl (bad) mov (bad) ds (bad) jecxz shr inc sbb iret and into in fsts add mov stos inc ficoml push dec pop jae scas or arpl ljmp sbb leave stos pop fldenv jge mov clc test mov lahf in imul inc mov imul repz mov add jecxz sbb xlat testb jg lahf aas sbb clc mov ret mov xlat pop mov push push cmp adc mov push mov loop xor pop js call clc sub in (bad) icebp test push movsl lods in fstpt (bad) outsl je and sub or notl xchg cmp xchg add (bad) pop clc inc ret jle lock cmpl jg ljmp in dec repnz add pop aam jb push ds int sarl pop push cmpsl mov xlat mov out in lods xlat xchg mov (bad) repz mov incl add icebp sub add fninit inc jnp test cmp cmpsl fnstcw adc stos pushf cld ret (bad) enter imul jle (bad) pop mov pop les push and lock test mov xchg pop jo in dec in int les and dec pop jmp out in xchg lock in jge imul lcall mov outsb ds mov out jb cld cmpsb inc data16 int outsb popl mov clc (bad) idivb inc lds mov pop ds ret sub xchg mov sub scas popf test inc movsb mov sti cli jle mov ret and lcall ret cmp cmpsl (bad) fdivr aaa rcrl jg mov int daa (bad) cmc or loopne andb add push sub daa adc add test cs (bad) (bad) aas adc daa clc mov lsl mov hlt lea in lods jns insl add xlat pop mov out (bad) jb pop xchg mov jmp pop mov fimul lock mov sti pop imul fnop ss (bad) pop cmp cmp pusha mov push lret nop jle push pop cld adc jl xlat incl addr16 adc pop lcall add push rclb pop fdivrl popf rorb lods lret lock adc shlb aad in stos rcr mov cwtl push lods add icebp mov imul mov dec clc and (bad) dec lock lea pop ret jle aam mov dec (bad) (bad) dec xchg sub sbb stc push inc stos ss fwait sbb addr16 adc add fildl loope xchg lods cld incl xchg aas insl mov jecxz inc cwtl rep (bad) int3 push add fucomp popf mov pop mov cmp jle clc pop pop clc xchg daa lds cmp add jb pop mov sub mov test inc ret add bound push lret lret ljmp dec pop push into adc iret ficompl stos fucomp fwait dec and pop xchg jp mov outsl push clc lea outsl loopne inc dec add jmp pop push push adc mov mov push push enter add mov pop fistpl clc pop sahf and movsb clc das std xor ret push movsl popf mov mov pushf mov ret jo jge popa cld ss jae pop cld push std movsl cmp mov xchg loope es insb fsubrs sub lods and and je or stc aam dec scas sti loopne out sar test lock dec icebp movsb sub mov jae cmc cmp add fstps adc xor insl cmp in xchg mov fstl ljmp inc jecxz sub ljmp xlat int3 mov iret rcr jle clc mov or mov jb adc scas es es fsub pusha mov pusha (bad) pop leave adc mov add jns aas or mov lock dec lea es das pusha sbb push and pop (bad) aas inc jl clc jne iret test adc sub imul pop aaa xor or loopne add iret (bad) sub jg jle cld dec mov hlt xlat sbb repz hlt or jnp fmull lea (bad) in mov aas popa dec sub loope mov fs stos push xchg xchg insb dec push push in xchg (bad) sti imul in outsb iret into leave and incl ficompl notb incl (bad) (bad) pop jl icebp daa test adc inc clc jnp sub jnp,pn inc sbb cmc push (bad) dec imul xchg xor js daa push inc lock xchg imul cmp jae mov pop xchg cmp cmc or dec sbb jno ret add jns jecxz adc mov pop jmp push adc lods mov ljmp mov test jno xor cwtl movsl mov lea rclb cld pop (bad) xor incl inc mov sbb idivl (bad) xor pop in cmp (bad) adc dec jo xlat add sbb xor hlt push mov sahf (bad) in sub lock push jbe stos insl cmp mov (bad) xor add sub mov jg in mov imul mov dec and sub xchg out dec jle mov sbb clc lahf decb repnz negb and icebp sub inc mov in and out outsb ja cmpsl add outsl and std push std mov sti xor pop inc (bad) fldl testl inc aam inc sub add jle repz mov addb iret loop (bad) incl push ljmp retw out ret ret mov sub icebp xchg cmp push jle cmp mov cmc pop mov mov pop aad (bad) psubusb pop xchg xchg incl fistpl fnop daa pop movsl incl add test mov (bad) mov and xchg fimull pusha cmp cmc out jge lock or out (bad) pop icebp push mov cmp ljmp mov cmp add scas sbb mov sub fisub ret mov int3 dec xlat test adc (bad) jbe push cmp scas jl aad data16 xlat inc shr mov mov out sbb xor stos xchg push loop adcl dec mov (bad) ud2 inc mov loop into dec xchg push (bad) and icebp das mov nop sbb mov lock mov xchg dec (bad) or push ss mov pop dec adc dec push xchg stc mov out cld adc loopne (bad) incl gs pop pop cld and pop mov (bad) hlt pop jne ljmp andl or sahf dec das xchg inc and in fmuls mov jl jecxz adc in sbb adc cwtl repz sub outsl clc sub add incl lock imulb aaa lock ss fisttpll mov gs movsb jae pop (bad) sub dec xor xor cwtl bnd jl push inc dec aaa xchg xchg pop fild ja mov (bad) aaa lds sub xor jno push jno mov scas out pop mov cld adc loop fwait jae (bad) popl jmp cmp frstor pop fstpt ficomp (bad) inc outsb jns cmp dec jg jg mov lods cmp hlt xlat pop mov mov loope popa mov lcall push push inc pop cmc jnp outsl incl xchg ja pop std mov (bad) xchg inc push xor aaa (bad) scas xchg mov fisubr aad inc jae sub push stos and mov sbb fs jl cli xor (bad) add inc cli sahf xchg sbb mov dec jae xor dec push dec in scas mov pop pop cld xchg sarl and inc lock std ds or pop fimul or mov inc inc adc negl cli inc rcrl iret (bad) cmc popf pop dec clc mov in sbb mov jle push (bad) inc mov dec imulb ret sub dec xor mov scas (bad) loope (bad) jg aaa pop icebp pop in mov cmpsb push out test xchg aam divb push jno inc out daa and push lret aaa lret pop mov add cmpb hlt xchg sub mov or cmp aas ds push xor dec push mov xchg pop adc test jp xchg mov gs loop aas (bad) jg pop ljmp pop inc and push xchg (bad) fisub inc cmp jno popa pushf jnp in cmp xor mov lcall ljmp int3 gs dec shrb loope bound dec jo sub rcll (bad) scas das cmp std lahf arpl xchg leave outsb mov and jge push add (bad) ja add add lcall (bad) frstor repnz mov incl push xchg daa add xor lret lock sub daa gs lds mov sub mov int insl fldcw divl decb aas icebp mov addr16 lahf ret mov negl (bad) or and xchg add fwait jl add jecxz cmp popf incl add clc xchg cmpsl fistpll cmp fadds push or add daa fdiv sub pminub in xchg lock dec mov popf ss mov insb lcall mov xchg repnz inc pop and sbb dec dec lock push mov xor and sub js or cmc push pop xchg loope mov mov mov xchg pop lods scas lret fidiv push call lcall incb clc push js ja and int lods outsl and fisttpl ret enter mov jno push xchg jne inc (bad) fmuls (bad) imul inc lcall jbe in or push rcr orl mov mov clc sub mov and jp (bad) sarl loope mov fistl sar in fwait sbb or aam lahf mov add add jbe loope inc xlat dec lock hlt sti mov xchg mov icebp mov xchg pop cmp xchg pop xor shrl xor adc (bad) sub lock movsb aad inc xor mov outsb mov pop test lock inc mov adc jbe mov (bad) jnp xchg xchg pop pop leave jne mov and and call jmp jg incl clc and mov fs xchg cmp mov mov push sbb pop jle popa in mov push out xor push push scas cmp push push sbb mov stos sbb push jle negl gs int loop ret jl aad stc sbb xchg cmp insb call or lds xor imul jne int push aam mov sahf fwait cmp in sub jle aad ds jnp xchg clc fistpl dec mov int3 (bad) xor (bad) mov sbb insl inc pop add mov mov lods out sub ret lds mov (bad) mov pop movsl xchg daa mov xchg fildll fdivrl insl loopne xlat push sti arpl pop push jg jne je pop xchg ja sbb mov push mov in mov lcall repnz push sbbl ds (bad) rcrl adc ret mov jle and or mov das repz push mov or ret pop xchg pop gs fs mov insl mov std (bad) mov sbb lret je pop rol ret icebp and mov lahf (bad) cmp outsl test pop or ret loopne mov lock jae add lahf adc xchg push std mov lcall mov fimul insl sbb pop dec fadds and pusha jbe jge (bad) xor loop add cld inc (bad) cmc in shr xor gs inc jbe pushf xchg mov gs repnz lods fild popa lock push mov mov cwtl imul repz fs sahf dec add lret loope (bad) pop sahf cmp push stos lods ficompl mov sti xchg sti sbb cltd out cmp lahf ffreep pop or mov push xlat and xor lcall lret out and mov add out jge rcrb mov arpl fmuls (bad) sahf xchg std fsub in shr gs sbb cli pavgw les aam push mov mov int mov add dec sub mov outsl and test or mov adc cld add into repz xlat xor mov mov mov and dec fxch adc sahf jno cmp cs stos lds rcrl pushf xor ljmp jbe lods hlt fisubr aam movsb aas push add iret lret and mov mov (bad) ficompl mov inc jno mov cmp nop in jae xchg lahf insb push pop sbb fsubr cltd repnz fistl cmpsl mov jecxz movsl add jae hlt std arpl xor pminsw gs dec mov and lret mov out and in out int add les scas sti loope mov test xchg jmp mov das hlt divb jo xchg push sbb or ffree daa int3 cld adc pop sbb lahf ret mov outsl arpl jmp sub shrb adc ja sti fstpt test (bad) adc mov sub xchg cltd push cmp test rclb xchg jg mov mov outsb iret icebp mov xchg push jbe push aad (bad) addr16 lock (bad) sbb mov imul pop adc ljmp sti add sub cmpsb xor ror push mov add and jge cld pop icebp add addr16 xchg stos fucomi jmp jns add outsb sbb fld add dec mov jl loop adc mov shll int3 cmpsl adc outsb pusha inc jno insl call das mov and lahf lret mov icebp push xchg sbb out and push pusha lahf xor sbb aas pop mov lods mov incl test scas mov (bad) sbb movsl loop fwait inc fwait lds cmp (bad) xor aaa push sbb mov nop adc jmp xlat sarb ljmp pop pop (bad) icebp sub adc sbb insl les adc pop mov in dec cwtl xchg xor jmp or push imul je pinsrw mov loope xchg js jno in adc push fadds sbb iret or std mov loop out pop sub into aad icebp inc mov fisubrl xor xchg push push das lret fs mov or push ja mov mov xchg xlat dec lock jne mov hlt fnop std push incl (bad) pusha lret push popf incl add call fdivrp aas dec mov fldl not adc dec sbb sub aaa arpl out repz incl add clc mov out ret dec aam in pop insl jne push dec xchg xor ds ficomp jo pop dec mov cltd pop das pop rclb rol jb incl mov insb fs aas xchg repnz (bad) mov xor fisubl push std mov (bad) cmpsl mov sub lods fidivrl ficomp cmp lahf jae test mov mov push sti sti push jl std cltd jl aaa mov hlt mov in jo out in xorb popf into dec sbb or push pop xor cld adc ret mov push jle pop and repnz jnp movsl lret sbb mov imul addl fisubrl pop clc push sti push jl mov or es stos cmp jb je inc fldl add push xchg sbb pushf mov pop mov gs icebp test xor jae ja push out insl inc and pop iret dec jne sub cmp (bad) xlat mov (bad) fdivrs mov (bad) cmp ficomp mov jbe rcll (bad) lods icebp inc repnz adc daa sbb mov mov lret pop imul cli xor cld in (bad) sar add cmc pop xchg add js (bad) cmp stc mov xchg es mov sti call rol dec rclb std add add cmp gs fcomps sahf pop xchg loope lods movsl or mov arpl sub lret cmpsb sub xchg mov shl aam push cmpsl pop push jmp fstp push ja outsb in mov incl add cmpsb dec pop xor paddsw test jae fimul shrl sub fcom ss mov sub pop cmc jb push add hlt inc mov cld adc jmp imulb (bad) loope sbbb aam xor mov ret and xor mov or ret in into pop fstpt loopne jg dec fucomi fistpl cmp jns dec das ret jp scas loop push jmp mov enter xor adc or fnstsw loopne aas mov (bad) dec xchg sub (bad) aaa sbb data16 push mov (bad) and int dec jno inc test add push cmp adc mov ss int incl jp xchg rol inc cmp fcoms out push xor xlat xor in mov lods mov repnz ret xchg jg pop xorl jmp dec in fisub aam enter popa sub scas jmp in cld or ffreep push xor (bad) je stos leave sbb std sub mov arpl inc cld adc loope test cwtl into xchg mov arpl jg inc enter or mov ds adc in sub stc mov mov scas xchg sbb incl mov push incl rcrb jg adc (bad) (bad) lods mov push loope mov out jno jb pop dec sub sbb loopne jmp stc loope add clc incl or lock iret fcmove mulb lcall sub push sbb and cmp sub movsl jp daa lret pop push ja xchg ljmp popa jnp dec das out outsl cld lcall sti adc fistp jg stos fbstp and (bad) stc movsb xchg fnsetpm(287 nop pop mov loop adc add jmp jmp (bad) divb mov insl (bad) mov sti mov push das incb lahf ret les sar inc loop add clc ret in push pop mov out (bad) xor pop test add push mov ljmp pop jns jae xchg cmp inc sahf and push pop pop mov ljmp gs fdiv jno cmp jp jbe je push fildll fisttpll incl orl add bound scas or pop cld mov outsb movsb adc and scas call clc cmp pop pop push incl rcll jmp lock (bad) xor add adc pop dec jecxz in in test lods mov jno aaa aad repnz iret incl mov std loop fwait cld xor repz shll cmp cmpsl les shll (bad) push xchg sahf in (bad) jle sahf and adc mov mov and fstpl add pop bound (bad) xlat push incl add clc jecxz jle lahf mov ret incl mov (bad) call pop (bad) mov outsl inc jbe (bad) mov clc adc (bad) mov das or adc xchg xchg imul into mov scas adc sub push mov insl sub jbe push in rcrb xlat dec mov mov rcl mov lock scas (bad) xchg ret incl lock fsubl fnstcw je mov jbe call fcompl mov enter or psrad or lcall outsb sbb (bad) sbb lods jle inc pop mov in sub mov pop icebp pop xchg sar sub test ss cmp xchg in xchg sub arpl mov in sub mov arpl pop mov lahf ret hlt jno jmp sub jp stos popa icebp pop stc push mov dec push fstp dec xor stos mov lahf jle,pn sahf push aam jle fnop out loop mov cmpsb clc push jnp push sahf sub push cmpsl pop and cmp or pop sbb xor and inc clc xlat test incl loope les (bad) add fucom xchg outsl loop je and (bad) fcmovne lcall push clc aas cmp rol xor pop add ja js add incl sti insb imul jle imul jno leave imul lods in les push enter xor data16 (bad) mov sub fstpl les imull bound cs in sti btc inc jle aaa dec std scas push outsb jmp divb leave and fcompl ljmp std xchg jle dec lock inc clc stos lods (bad) aad adc or cli ljmp lret das int ds sbb pop sbb rcr lock scas (bad) dec mov sbb push stos pop push mov loop mov xchg fcompl inc mov mov sub add mov sbb sbb sbb clc xor jle fwait sti dec fistl mov outsl push pop dec sbb pop pop arpl in mov dec and jb mov sbbl insl incb iret sahf adc mov dec push mov stos inc gs fbstp nop out ret jae inc sbb cwtl jmp mov lock ss rcr mov sub shl outsl sti mov cmpsl jl mov loope xlat mov sub xchg xchg jo aas mov rcll cmp jnp out cmpl mov xor push insl xor pop and aad mov add cld outsl cmp movsl loope aad xchg repnz pop ljmp cmp pop dec push cmp cmp cmp das loope xchg ret sarl xchg or dec das out sbb (bad) leave out pop sti dec shrb imul sub pushf mov sub mov pop dec jae repz mov das decb psubq jmp sub and xor out mov div xor or out shl sub xor bnd mov add xor or xchg adc push xchg sbb shrb push mov repz repz shr jne jmp movsb mov repz bound mov add incl lods and lock popl xchg mov lea shr jno arpl mov cmp fstps inc out in add sarb aas lock imul int mov lahf loope arpl push repz mov lret jle lods pop fcompl addr16 push fidivr cld imulb mov or jecxz icebp xchg jecxz loop push xchg mov stos cmc fstpt sub sti cmp nop lcall in movsb mov sub lahf clc (bad) sti and push clc xchg loop add in add pop lods fidiv and sub pop loope add cwtl and ja mov std pusha scas int3 pop fcmove decb icebp jecxz xchg js pop add dec popf inc dec dec sarb xchg leave cmpsb mov push pop stc and mov test pop xchg cmp (bad) iret sub popf sub mov mov (bad) cmp mov fcoms movsb push data16 fisttpl loopne fcmovu jmp (bad) sub jno mov cld push jecxz push cli out sarl mov xchg fcomip push xchg inc sbb into dec cmp lret les scas mov cld daa xchg jns sub jns ja mov stc mov or sti sub loopne xchg jle mov sbb mov xor push (bad) cli faddl sub cltd mov loop insl mov add (bad) or clc fwait (bad) imull cmp xor and dec sti test arpl add mov gs fstpt mov xchg imul lret jmp outsb in ja pop pushf ds xor jge (bad) out ret jp test cmp in lods adc ret sub (bad) mov in (bad) dec mov cmpb mov add cwtl add ret dec mov lret lock push mov (bad) fwait or lods enter leave add ret add jo sarb clc imul fwait push shlb lock stos push andl ss int enter lret sbb adc leave and sbb lcall stos inc loopne pop stos pop cmp jno mov loop sbb scas push (bad) int3 mov pop cmp jmp std push ljmp xchg dec sbb aad incl repnz aaa incl adcl xlat lds sbb xchg (bad) ljmp out sbb psubusb clc addr16 icebp scas xchg (bad) in pop outsb lods popa xor xor dec test mov and clc xor fistl aad das es int3 repnz out out dec ljmp pop xlat in pop (bad) jge lds sbb cmp and and lods cmp jge mov xor add cmp lock int mov xor repnz or lods stos cs scas mov mov (bad) jge cld adc decb test cmpsl jle mov jle or xchg mov ss or stc add add lock in imul pop or test hlt xchg jns mov jno gs outsb mov inc incb (bad) xlat jg (bad) mov mov fildll cmc jmp clc push ficomp outsb xchg inc (bad) mov fs inc inc xchg pop pop incl add cmp and ds icebp lahf les lds (bad) pushf sub inc ficomp mov xor cmp (bad) xchg es or and frstor cmp push pop sub dec ds inc xchg scas fisttpl adc fistpll push mov incl leave mov mov and loope scas fisubl pop std pushf xor lods xor jge dec push xchg fwait lret addr16 add icebp mov rorb incl xchg ja pop std mov (bad) xchg inc pop xchg incl lock scas fisubl lds xchg jg jl jg pop push pop test hlt fnstenv fsubrl xor lea inc in test js sub jg mov mov gs dec push lods and jb xlat xchg roll xlat shl call negb lock in (bad) lock sbb icebp xchg (bad) cmc adc cmp or push sbb js shr cli lahf in repz pop (bad) divb mov or clc aas dec mov push lods mov or mov ret (bad) fldt jl,pt mov xchg stos imul sahf add shl cmp cmpsl dec aam mov lods jp push jp xchg xor in mov pop ljmp movsl incl (bad) shr push mov mov hlt dec sbb cmp sbb mov mov cs cld stos sarl outsl int3 (bad) xor out (bad) cmp jge incl add lahf in pop mov pushf ret ja (bad) repz stos scas adc loopne xor hlt scas lea mov ds mov inc icebp daa mov and mov je daa push fidiv add and repnz cmp aas pop jg push cld dec jl sti or mov in fisubr push pop mov fmulp loopne fmull xchg pop (bad) aas clc add cli stc pop incl dec cltd hlt scas (bad) das (bad) pop or aas clc inc (bad) adc mov sti push pop std lea xor xor jae mov (bad) inc incl sarl xor scas pop jle sbb pop imul imul int mov fbld add or icebp pop notb dec jecxz fnstcw ret push push cs jbe or (bad) jns cmpsb push add cmp add mov lock mov dec jno pop push sbb fstl sub or or mul xchg faddl (bad) jge inc insb cmp sti fnstenv iret (bad) push lret jge loope xchg pop in mov int dec sub fcmovu jno cltd sti dec js les mov xchg mov or imul loope inc jg mov cld lods jns lret sub outsl decb pop lock add pop pop icebp out lods push cmp dec sub xor sti andl jecxz pop mov rcrb aas mov in loopew test push (bad) in sub test mov js dec (bad) les inc push mov or jle clc adc jnp enter cmovnp (bad) out sub add pop clc sbb mov scas cmc arpl and int3 mov fcoml mov dec incl add pop test sbb arpl jg js lret dec aam cld insl outsl lods int ffree (bad) xor cmp dec psadbw movb jmp xchg jecxz and mov fistpl divl scas mov xor leave jg scas in or push fnstcw ljmp cmpsb fistpl sub add stc (bad) jle mov clc aas ret lock sbb xor insl in sub and cmp adcl pop fcmovu and pop adc stos pop push mov ficom jae push stos aas or jecxz fld js idivb xchg push call imul fs fisttpll outsl and mov sub and clc (bad) imul clc mov ret fisttp cmpsl jl (bad) hlt fwait mov ja cmp fs in push or jo mov jo pop mov fsts incl pop ds push (bad) (bad) and and sbb inc lea loop loopne fisttpll gs stc add and (bad) std xchg jl loope add and xlat ds mov adc orl (bad) int3 add push and ror arpl fwait jnp cs cmc fstpt stc mov subl xchg gs loop ror sub xor jmp cli pop lods lahf fxtract pop jbe inc stos dec adc xchg int3 ja or and or add mov dec or and mov xchg dec push push xchg push or daa jns xor xchg ret sub mov mov adc xchg cmp jns test data16 dec and scas and cmpsl cmc (bad) mov mov unpckhps pop xchg pushf insb cmpsb mov sub mov mov popa pop dec jno xchg imul xlat (bad) cmp sbb (bad) std popl and stos jmp cli jns pop loop sbb push lcall add rcrl imul dec les push jp jns notl or mov add pop (bad) xchg dec mov mov pop test mov add adc nop ljmp mov scas outsl jge imul mov fist cltd and (bad) push arpl dec jno and movsl enter add fisubrl mov xchg jns in pop pop mov scas sbb pop xchg ret add jp mov pop imul lret (bad) pop jae rcrl (bad) std mov das mov into sbb cli icebp movsb cmp sarb add add adc add pusha add shrb imul dec sbb mov outsl out ret fisttpll repz out pop mov ret (bad) sub pop imul adc std loope sub enter sar mov xor mov ret and or loopne cmc jl cmp and mov sbb xchg dec (bad) (bad) mov mov or sbb add aas cmp cld add inc in mov xor dec xlat push cltd push sbb push iret jne fmul jo xchg sahf mov cmc rcl jg and (bad) dec cltd std in punpckhwd negb pop test xor arpl and jns lret mov loop xlat (bad) cld dec push mov repz dec and cmpsb fcmovu inc cmp jnp jecxz in loopne popf mov into add int mov mov sbb (bad) repnz into jnp (bad) repz mov and sub and cmp xor arpl insl jb inc (bad) in loop sbb and and bsf imull sbb mov dec mov incb out mov aaa (bad) lock xor push jecxz movsl fwait dec mov mov xor xor mov mov sti cmp add stos icebp iret (bad) fiaddl add out fs sti or outsl xor insb insl popa lea into fcompl mov clc inc jg incl add mov dec test pop mov sbb arpl sub mov xor inc jae xor (bad) add mov pop test idivb int stos pop cmp pop pusha (bad) lret sbb in es iret xchg jecxz test subl scas lahf sub cmp movsl cmp jge incl add clc mov aas (bad) aas mov test mov mov ja xchg xchg dec and or jns bound push xchg int3 pop pusha or fcos add dec loope std adc pop incl push lock icebp push cld mov iret xchg sbb sti jg clc ljmp jg js or test adc sbb mov mov aad jnp (bad) (bad) pop cmc xchg lea mov sti dec (bad) jne mov lea fwait xchg dec xchg popf mov xchg sub sbb mov call xchg hlt outsl stos push pop stos out out pop xchg sbb aam lahf xor fwait lods ss std out xchg dec mov jecxz (bad) mov xor mov push xchg xor stos or jecxz jl xchg pop push push mov lock adc and (bad) leave and nop inc pop out push repnz cmpsb cmp jle clc mov push push shrl dec scas or jno and (bad) xor sub sub xchg pop and (bad) loope mov loope mov xlat or mov fcoms and or bound (bad) pop ret cmpsl dec push dec jmp sti scas clc push jne scas pop inc xchg xor sbb mov lods imul add scas xchg dec jl popl lods cmp mov insb cmc and vmwrite loopne mov mov lods aaa decb or add leave cmpsl vzeroupper testb mov pusha lcall rolb insb arpl (bad) dec sbb fwait (bad) mov fisttp dec idiv xor movsl mov or (bad) cli inc or mov in cmp es (bad) (bad) jle fcomp clc mov lock fwait sbb xchg sub sbb xchg cmp fiaddl lods loope lcall mov mov sbb movsb xchg xchg fs xchg ret jge mov sub lcall test pop mov inc jp cmpb ss gs add in daa pop fsub mov outsl ret push sub add jp push mov cmp cmc scas in dec clc (bad) icebp jg jne cld daa fiadd mov mov scas movsl mov loop aad test xchg (bad) dec nop fs sbb and loop mov out data16 and out fsubrp movsb mov xor add add out aaa and mov inc ds jge int ja mov xor jge mov ja int3 std dec incl (bad) int shll pop cld cmp pop (bad) push xchg lds xlat jo sahf es inc bound sahf inc mov sub in lock nop pop lock call lock das push clc cmpsl push aad incl arpl cs insl out jb std mov jo loopne push mov mov xchg (bad) jg cmp in add pushf repz push and cltd mov pushf pop loope jecxz lret nop xchg jno loop loopne mov js (bad) fist ds mov xor dec lods or pop pop ljmp test mull je out int3 and bound dec mov in pop dec mov or jae mov push mov sub dec in jbe insl mov fscale inc incl ret incl inc pop inc incl sarl iret lahf sbb jno mov fcmovu ret cmpsb clc xchg cmc or mov (bad) jno xor arpl mov fidiv movl clc xchg icebp or adc and sti push pop mov test xchg stc jae cmp call lds jp (bad) jne and ret jne mov sahf (bad) loopne repz sarb fcmovne jmp xchg sbb dec xor mov ja rcr jbe pop and movsb xchg mov sub incl lock sbb inc sarb outsl (bad) add push aas fldt lahf cld imul lock icebp fdivrl insl add xor mov mov xchg imul dec test mov mov into movsl mov fsubr popf mov dec fisub adc rcrl repz fisttp clc popf jne aaa rolb ljmp pop dec ljmp scas (bad) push push cld cltd push mov mov pop fld mov aam sub xchg mov lcall mov lea mov popf sti lahf aam cld sub push je cld sbb incl lds mov add adc aas loopne pop mov xchg add ja les mov fs fistp ret cmp in in cmc enter repz ss js bound (bad) add lock jns cmc lret aad (bad) and test xchg lcall xor sbb xchg pop lret xor into repnz fsubr adc es mov (bad) out pop ss cwtl push mov adc sbb jmp jg sti cmp pop incl add dec icebp push out incl lea jne leave test xor stc lock add ret mov (bad) aas jae or aam add aas jmp sub mov outsb add push xchg mov pop ret test (bad) xlat repz cmp loop mov out xchg or xchg dec mov cmp dec roll pop mov test inc and out fucomi out dec in incb imul xchg in aas loopne push js (bad) cmp pop sbb fisttpl push insb mov insl lds nop inc xor (bad) shrb (bad) icebp add mov jmp lahf cmpsl hlt lea es mov ss movsl jnp jg lods scas not dec out (bad) dec mov sahf stos movsl call sbb xor xor mov pushf xchg les (bad) xor (bad) mov aam fidiv push incl push mov not mov (bad) mov mov inc fistpl adc mov aas lea add aad ret incl adc jmp jae add mov leave push mov cld icebp (bad) pusha std pushf cld or cmp loope scas pop (bad) subl fildll pop in adc and pop ja cmp dec arpl (bad) sti ds cmp fcmovu divl jge or sub jno mov lcall (bad) inc icebp adc mov mov pop mov pop lock push fist repnz hlt std jb xchg out mov xor je daa xor jns mov fsts mov clc (bad) lock xchg aam sub dec jne clc (bad) push push adc arpl inc (bad) inc int mov arpl cmpsl xchg sti push pop dec pop sbb (bad) fisubl insl cs mov add mov or insb nop add fcoml sahf das clc sub pop mov loope por (bad) cmc enter xchg push lcall std lahf pop add sub jge ja (bad) mov sbb mov out push hlt xlat push sti cli cli imul sti cmp push jl sub fldcw sub sti push iret lock gs mov sub cmp in out cld dec ja lods faddp loop xor inc fs ljmp inc andl les loope jl incl mov loopne pop (bad) sub jg cmp sbb pop xorb imul mov dec push fsub mov jo jg scas inc std xchg lods mov fcmovnb jg jle push icebp jge mov inc inc dec sub lea iret outsl in in xchg frstor mov xlat mov jle xor mov mov fcmovu scas int3 repz lahf pop popf push adcl fisubr sub (bad) repnz ds insl clc (bad) loop fimull ret ja inc (bad) int inc lock mov mov add (bad) fistpl ret insl sub inc push lods arpl adc movsl ja add add sbb mov (bad) je xor inc dec mov sbb jle mov inc bnd cmp jecxz add icebp inc push clc imul imul cld jle add jnp aad (bad) and pop sti and pop imul movl adc aas clc es fsubrp ficomp clc xchg lock xchg out dec je aad mov js xchg jb fwait adc lods dec pop sbb aas sub xchg imul lahf sub insl insl jle sbb hlt popa dec rcrl xor fidivl cmp xlat (bad) xor daa pop icebp xlat ret call cld jns dec imul stos inc xchg mov jl std nop mov jle lods js sti inc (bad) (bad) lock ffree movsb ja push sub (bad) or enter pop mov lds or (bad) jne test pop dec (bad) incl push jl push mov dec sbb jb test movsl xchg jnp arpl loope mov mov xor js loop ret aam jns in jo mov movsb test jns inc jbe stc sbb sbb pop mov and push jg fcmovnbe in jbe lret imul sub lds divb in clc inc incl add fstpl das clc (bad) icebp imul (bad) test or outsb inc insb dec mov add cmp popf sub pop pop sar dec cmpsl (bad) stos js pop mov mov inc mov lret (bad) rcrl xor (bad) and scas (bad) dec icebp outsl les iret lock scas adc dec mov inc mov mov pop dec test mov enter cmovo std mov js (bad) dec loop dec out xor incl cmpb popf or test mov pop mov shrb xor sub mov scas (bad) idiv cli jge sub arpl lea fisttpl (bad) dec cmp ja (bad) dec dec mov incl push hlt imul and sbb and dec xchg insb ja shr stc push jecxz mov inc mov scas test pop scas imul enter dec pop inc and sbb ret sub aas xor out sbb cld and loope scas jge loope jno fucomi mov xchg imul pushf adc mov pusha sub in lds dec jecxz clc jnp pop xor popl outsl insl (bad) lss and or add push out test cld sti jne hlt mov cmp pop mov imul aad fstpt lods (bad) xchg dec out fwait dec lahf xor add insb jle cld cmp mov cmp scas (bad) mov sbb push std xchg leave add push popf pusha push syscall xchg (bad) jo clc outsl loop in jne nop sahf and (bad) mov in (bad) xor dec outsl sub sub xor xor push dec push mov rcll xchg cs sub dec ficompl jbe push ficomp aam and scas test xor subl mov mov jb mov fs inc enter leave lock pop lock icebp loop ja push mov xor pop hlt cwtl loop,pn imul xchg cmp insl pop and xchg sti cmp jnp mov popf jns xchg stc das push iret daa cmp cmpsl incl das sbb jge sub jle jg scas fcmovu test dec mov push daa shrl jg mov inc insl les out cmp xlat iret clc pop pop or call aaa xchg add cld dec cmpsl jl mov jmp (bad) je mov data16 mov xchg xor int3 push push push xchg add pop in sbb fnstsw ret in jnp cld jb jl scas pop imul push cli push xchg jge (bad) (bad) xchg xor jmp adc cmp mull pop ljmp mov sahf sbb out adc fistl sarl aam mov loope jl incl mov loopne pop (bad) sub outsl ficoml (bad) jne lock rclb js shll pop imul sub jbe push outsb sbb mov (bad) sbb pop icebp mov mov cld stc mov movsl cltd and dec jmp sbb xchg xchg cmp fs imul sbb out scas mov repnz out fildll jb inc or lret je push inc fucomp xchg pop loop push test std jne mov repnz pop stos ss mov mov iret pop adc pop dec incb mov js dec dec bound pop inc or mov push aad mov add xor std mov aas loop pop les fsubr mov jb nop ljmp rorl lock lds dec pop ss xor sahf sub sub (bad) mov int or pusha or jne adc jl test adc out pop mov imul jns xorb in adc mov xchg pop std bound test sub sar sbb push xchg or and fisubrl aas xchg mov add std mov pop sbb fildll adc and sub xlat jb call mov and push scas pop fisubr mov hlt pop lea cmp mov (bad) in push imul sahf (bad) popa stos inc aaa (bad) ljmp xchg cltd fist mov (bad) mov (bad) fisub clc push adc and mov out cmp add cwtl jae into push in or jecxz adcl clc popa stos jmp and mov mov sbb adc push dec std les js out sbb dec fisubrl stc lods pop fisubr mov cmp mov mov mov mov jno add sub cmp js dec rcll inc popf cmpsl pop mov lods mov into dec pop pop pop mov test pop lock outsl pop js inc incl (bad) jg jbe scas mov cltd pop pop mov and pop push leave in and addr16 push stos nop dec icebp sbb dec pop push imul cmp loop pop loop mov outsb repnz inc xchg imull sub popa and pop cmpsl and mov icebp aas lds or jnp js push jg jmp (bad) inc mov adc sbb push mov mov lods jae (bad) push ja fist pop jle sbb xchg outsl sbb in in out mov add pop mov jg inc sarb outsl (bad) add xchg push je cld sbb incl lds fcomi outsl lds xor popa shrl out ljmp push inc adc pop add push push mov xchg adc pop cmp (bad) cmp push fwait loop xchg out cmp jno or sub push inc add movsb xor xor adc addb jmp mov ljmp jo add (bad) ror fnstenv out cld push incl add inc clc iret les cmp pop lock ficomp mov jnp cwtd or (bad) or sbb pusha dec or jne outsl loope xchg lods xchg xchg aas adc outsl in push lea imul mov outsl clc imul loopne adc fist jl loopne sbb sub in ss arpl les daa cltd repz scas fcmove (bad) iret mov ret idivb lock xchg sub stos dec push pop jge dec mov and mov loope push fs aaa setl inc push flds insl sub pop mov or movsb pop dec mov int3 push mov imul stos incl add cmp std mov or cmpsb das mov push ljmp stos daa xchg fs ljmp mov pop scas add push fistp (bad) es pusha clc dec icebp mul mov pop pop clc inc out mov inc imul nop sbb cmp add and mov js mov test and aaa mov sub nop jecxz scas int lods dec pop push (bad) pop lock leave cld xor sti cmp loope xlat cld dec loop dec imul dec mov and mov (bad) shrb (bad) mov push adc xlat dec lret ret adc test xchg xlat push cld shr (bad) addr16 pop and xchg xchg push xlat mov popf mov (bad) fmulp mov (bad) sbb div aaa lds mov pop push out xchg insl pop add fst ss push repz lods clc adc mov loope (bad) mov ja incl push ljmp addr16 mov bound mov insb lret xchg into enter sbb mov (bad) (bad) or fdivrs sti dec sahf dec add push or xor push cli (bad) aad dec cmc les pop mov roll and push or data16 test xor lds icebp les adc daa (bad) out scas outsl jl and jmp divb pop mov xor push rcrl jg xchg addr16 fisubl xchg mul sti (bad) imul mov es aad out fwait mov xchg out pop add mov lock pop sbb xor fstpt and push ja push and push push shr sub mulb xor xor ss push cmp mov into loop xchg bound lods dec pop add sbb scas dec mov sti cmp lahf mov (bad) mov push xchg stos js repz xlat xor lods vpaddq shrl sub das fwait sub push inc pop (bad) mov jns (bad) dec add pop add lds pand jno insl xor xor xor add sub mov add ja mov mov dec xchg pushf cmp dec xchg fldl add repnz sbb jbe les (bad) (bad) add xchg ljmp and pop xchg fwait inc (bad) lods and push push (bad) push mov or stc jnp xchg sbb adc xor mov out xor mov lret push out fs pusha adc nop sbb adc out mov mov push aaa pop paddw nop inc jno aas loope,pn add fcmovb jo cmp test add leave xor ficom iret mov cmp pop cmp neg adc pusha test imul xor insb jbe mov sbb mov jmp adc cwtl jns xor and imull data16 and movl mov fcomi xor xor lahf mov mov adc xor out mov lahf mov fsubrp sarb inc (bad) (bad) cmc mov fiaddl jno cmpsb or inc xchg and xor mov sub arpl adc lods or out sub je jle lcall cmp insl scas sub jl jns adc lea movsl jg int3 out je fstpt (bad) push das fldt dec xlat and sbb jb jne inc lods sub lock add mov in mov xchg addr16 lods jnp movsl sahf jns push xor lret add insb aas jl cmp inc add ret in xchg push pop sub ret ret jge in movsb jg hlt pop rclb js ret push mov push and std xchg ficompl out movsb mov data16 adcb call fsubl (bad) jno push xlat lahf out xchg rcl clc pop jecxz sbb dec vmaxss outsl or push int3 jmp fistpll out mov sub xchg mov lea jns inc clc imul push clc lahf sti dec pop cld je mov ljmp shrl adc mov enter dec mov arpl bound or mov jp out stos jmp icebp xor (bad) (bad) mov sbb pushf and add mov je lock mov sahf mov push imul sub adc ss cmp lcall sti cmp das push std push push xor xor xor jns jmp cmp neg mov add jle push aaa pop repnz scas sarb mov mov mov push sbbl scas aas ret mov mov inc sbb sbb mov jo cmp icebp push push je cmp out pushf add adc test es xlat loope jp shrb sub icebp adc xchg and mov xor sbb rcll push iret jl outsl dec mov subl (bad) repnz je sub fpatan push pusha ret cmp xchg in ja jmp movsl lods negl sti (bad) das adc std jle push jecxz mov data16 test adc push roll push int dec sbb ja jge jo jecxz frstor add push and iret pop mov add ds das add push push imul loope xchg cmp inc fild adc mov xlat or cli or xor push push cli xchg push scas test pop lret je xchg out or cmp mov lea cmp je test or add add (bad) loop sbb pop sbb pop jb push aaa and pop jne rcrl lea sbb sub arpl das out out dec pop mov out mov mov adc popa sti sub (bad) jecxz imul das cmpsb mov fistl and jp add hlt jg ds stos pop int3 fisubr shr adc sbb (bad) push inc pop scas cwtl jg push cmp or fmuls sub add clc aas sti cmp xorl mov jno mov (bad) inc xchg sub les or add ljmp lock push mov xchg push jno xchg icebp in adc adc pop sub fcoms xchg test decb rorb (bad) pop pop dec loopne adc and stos or mov les mov popa push mov loopne sahf cmpsb mov mov (bad) das lock ret pop adc sub mov adc mov daa xor dec mov sub (bad) xor dec inc jecxz loopne lahf in add mov aaa jle icebp and sar daa xor dec pop popa xchg jno add push out stos or sarl xor ret icebp pop xchg dec mov jne mov (bad) xchg out stc mov (bad) mov addr16 or shlb cmpsb mov xor xlat int pop in out (bad) (bad) xchg pop fmull fisttpl arpl sahf sub pop test data16 pop xchg dec mov int into xchg out mov pop incl addr16 sub fxch gs add mov pop mov mov aad sub addr16 add mov jno cmp dec mov icebp mov jo cmpb cmp aas add jle sarl pop fidivrl in mov and dec sbb push pop aaa pop pop std cltd cmp (bad) adc add (bad) (bad) cmpsb mov dec jne jno outsl mov cltd and inc dec stos sahf mov (bad) jecxz push pop push pop cmp jg addr16 out jb popa jecxz ja push mov add int or in dec outsl xor sub and cs (bad) js push jns mov mov cs cmpsb jl clc daa loop jae mov imul lcall nop sub cmp mov push ljmp test cli jge pop jg int add imul fisttpll aas mov in scas incl addr16 xchg lcall push xor fxam test push or test dec popf cmp push jne pop jg bnd push dec cmp sub aam sub mov mov clc pop mov dec push mov out inc je fldcw cmp mov in jg mov mov cmpsl lea pop shrb daa inc push je (bad) mov and fmuls mov scas sarl xchg add jmp cmp rorl push xchg or (bad) das fisttpll pop pop lock shrb fndisi(8087 movl xchg dec jno push dec xchg pop ret jnp lods xor xor js lret stc pop in rclb inc pop push pop hlt ljmp sbb jle adc jg fwait mov insl jns (bad) or dec icebp (bad) (bad) icebp mov aaa push mov in les xchg jne jae inc add imul mov mov jnp out mov adc (bad) pop insb lock lods movsl mov orb and mov jae jo mov in imul (bad) fisubr clc or sarb pop pop imul dec push out aad mov fwait push adc shrl out pop lds arpl sub jne fisub xlat lods fs pop das push imul xor fidivl imul push jecxz in jle mov mov ds push push test cmc mov incl add cmpl push into or mov test mov sbb sbb cmp dec in sti imul (bad) lea in pop outsl pop mov or arpl incl xchg insb xchg dec lods cmpsl cmp idivb icebp gs lahf loope adc mov dec mov fsubrl fwait dec aad ret fildll pop cmp mov clc sbb cmp lock mov cmpsl jmp jp (bad) loop and cmp rorl cs fstps add or stc imul (bad) mov sbb stos rcr (bad) sti mov jne jbe add mov mov jecxz mov sbb inc les int mov gs or nop mov mov std xor jne ret mov dec rcrb push test mov test mov int inc (bad) jbe rolb nop out mov in jg popf shlb jnp inc clc mov mov mov and mov dec mov or imul xchg fist xorb test mov iret ret das test ret pop rcrb cmp jp dec imul (bad) jne fwait cmp aad int3 sub pop cmc insb mov pusha pushf out or pop stos push mov cld lods (bad) std cmp lret jae lods push mov lret ficomp dec imulb iret jbe icebp xor jns mov xor lods mov push jo addr16 inc xchg sub add scas cmp stos lock mov icebp jae jle mov xor movups (bad) or enter dec xchg cmp loop popa mov jmp and insl lods das in loopne xor lret jns stos jae xor push xor inc inc push sbb decb or icebp iret or xchg scas test out mov in add outsb push arpl xchg xchg sbb jg sar pop sarl jmp push loop sbbl xchg stos dec loop mov jmp push pop or ret daa xor stos xor inc sbb test roll std pushf pop scas mov mov fist ret jp int sbb mov xor sbb and mov loop ret loope les sbb cmpsb scas ss lock pop aam cmc jge (bad) dec mov inc mov pop fsubs popf or xor pand (bad) fiadd shll pop icebp or pop mov daa xchg jns sbb int popa dec pop xchg (bad) sub inc sbb (bad) or lods in mov jnp scas fistpll xchg xor gs in cmpsl push bnd xor scas rcrl (bad) jmp icebp daa test jle js cli stc jle (bad) ja fildll dec xchg out mov sbb xchg ret out sub xor xchg addl divb or aaa fisubrl loop xchg je adc push jp mov mov jg mov dec jmp daa in or test mov sahf jle dec push lods stos lds mov push fisub adc dec and icebp pop les pop pop pop cmp mov jg dec mov lea loope (bad) dec or loopne stc mov test lods test fnstsw repz shrb xor pop dec divl cmp les mov in ja add out push lock xchg loope jbe loopne cmp jp cld ss les sbb mov cmp mov (bad) (bad) sbb add mov inc mov xchg lods and cs out sub xor sbb add cmp sbb (bad) xor sub outsl stos push pop xchg push dec les inc jns lea jg mov pop aaa mov pop mov adc aas adc movsl in test das loope mov dec xor cli out cmpsb stos dec sti and mov sub sbb movsl stos and dec dec int jmp xchg std or gs ss lahf stc incl popf fimul push clc loope imul xchg and ss mov sahf daa mov jg js inc pop adc add jg fnsave lods ja and dec mov mov cld adc aas add stos cmpsb jmp imul xchg mov shlb ja leave mov das lock ret incl push mov (bad) imulb jecxz mov pop dec stos jl aad fstl movsl cli fcmovne adc cltd popf dec test and sub dec jecxz push call (bad) pop fwait push xlat cld push lcall dec jne cmp and stos rcll movsl sbb repnz mov test stc std fistpl mov std aaa shl xchg out (bad) sub jno icebp add insl popa jns leave cmp jge int3 ficom stos adc mov sbb in lcall mov xor pop cld inc clc cltd popa stos pop js push mov sub call lahf and inc or adc ds (bad) dec test sbb cmp scas clc stos loop mov pop lock xchg xchg push cltd xchg inc fnsave sub inc push mov aam inc and out push and sub (bad) xor jp rorb clc push lock push ds popf loop scas out in jecxz es cwtl mov pop cmp xor pop or jmp cmp pop jae ja push cmp mov sbb fnstcw lock idivb dec ds pop loope fldcw jg mov sahf add call pop mov jl push aam pop mov std and cld sub js rcr in in je das (bad) negl rcl cmp jo and insb lea pusha and mulb lahf fidivrl sar aad xchg aas mov lods xlat push aam or frstor in inc leave dec test in insl ljmp loopne pop sbb iret or sbb in inc incl add push mov sbb mov fbstp scas fsts pop push add sub mov loope or cmpsb incl fwait push scas mov jg,pt lods pop insl cmc pushf dec insb cmpsb lods push (bad) adc scas scas shll cmc cmp icebp or das in imul cmp aas or std out add outsl imul fmull adc jne int mov mov fiaddl mov sbb mov jp ret mov call push jnp in fiaddl xor mov inc push pop lcall aaa testb repz lahf mov lock imul sbb call xchg (bad) jb data16 fsubrl sbbl adc lock pop (bad) mov add xchg mov push fstl in popa jae jbe in inc in push fldt xchg push popf or jl imul cmp cwtl out and push push dec inc jge fcomip out jp cld adc decb int sti jecxz xor mov mov cmpsl scas push cmpsb clc dec pop dec les dec xchg xor pop xor fsub xchg ja or add icebp jle addr16 fstps and jge std sahf out dec pop outsl out and cmp std add sbb add inc fs pushf aas arpl add dec lock dec cmp aas mov insb xor out sub js fisubl mov dec (bad) sbb (bad) test pop jle mov lahf add (bad) rcrl jge jo shl push shlb mov mov jecxz cmp jbe test xchg mov test inc push xor sbb sub mov cwtl shl int3 mov push adc sub jg imulb popf mov adc adc lcall loope stos loope pop jmp pop mov test xchg xchg cmp mov sti pop xorl ds stos ret and (bad) ret in mov rcrl into or loope jl sub incl (bad) mov outsl insl scas cltd mov sub es mov lahf cmp jle stc dec iret frstor cs lret pop clc sub push outsl cmp loop cmp or pop dec (bad) scas jl cmpsl mov test xor xchg cs or sub mov lea fldcw addr16 fxtract and pop loop jmp mov add icebp xor movsl push xchg or fidivrl add jmp jnp bound mov aad incl (bad) (bad) adc sarb cmpsb ret push stos mov ret cwtl cmp scas fs jge push push test xor sarb inc jmp mov sub arpl (bad) movsl jns add fnstenv add sub ss in cld mov dec mov lods mov fwait push lahf les faddl mov xchg data16 fwait xchg or xlat movsl dec movsl sub xor sahf pop int aas mov push div out mov jg push sub lds mov inc add fldenv xchg aaa dec lods lcall add in push mov sub jl loope mov xor cmc lahf xchg add pop (bad) cmc orl pop dec mov dec mov xchg or mov cmp incl in out popa loop adc sbb scas pop dec dec in mov adc fs sahf inc xor and adc in inc cmp mov aas or jl loopne (bad) sarb pop clc imul cmp cmp lea sti mov popf xor movsb (bad) stc add or push jmp mov shrl dec xor popf dec test xor add leave cmpsl jmp (bad) jecxz loop sbb and pop inc movsl xchg ret xchg dec ret add dec fnstenv clc and mov mov and mov jbe sub stos inc mov dec add lock xchg lcall mov ss and les pushf (bad) mov mov adc mov jmp push mov lcall test sti sub movsb daa sbb orb sbb ljmp pop (bad) imul arpl mov fidivrl add cli call add std movsb jg (bad) sti les adc (bad) jo push xor popa lods pop mov int pushf bound dec out mov xor cwtl lret push mov mov icebp pop scas rcrl dec jno orl lcall in enter sbb in pushf incl pop arpl xlat ret jl loope jb (bad) xor jg fsubs or sub test lret dec sbb inc lret pop pop dec icebp out rorl iret inc clc push pop sbb mov cmpsl ljmp jg lds mov insl iret outsb jnp mov fwait dec in movsl mov (bad) mov jg enter jmp dec hlt cmp sub add sub add negl pusha xchg cli xchg je xor repnz push jle fwait jnp pop imul aad pop mov xchg arpl mov cmp notl fldenv int3 mov lret es out sbb and rolb xchg lods out sbbb mov js dec mov (bad) (bad) xor out mov xchg dec adc dec rcll cmp daa sbb ret jge ret mov adc jge into mov xchg sub and adc pusha lds loop iret out movsl sahf xchg jle aas xor xchg xor jbe scas pop scas jmp jge lock (bad) into icebp dec (bad) iret mov ret std push (bad) pop adc pop shrl fnstsw not lods je cmp fcoms movsl push dec ja adc test fcompl mov adc movsl js loope ret js xlat mov add (bad) mov inc mov xchg xor dec mov and movsl mov dec add movsl mov aas push sbb mov mov popf push push mov cmp insl insl insl das das insl in scas fstps (bad) les cwtl les (bad) stc xchg xor push fildll js push imul dec and inc (bad) and pop xchg rorl gs add js es fisttpl imul xchg lock mov int3 fistpl pop pop xchg mov add mov sub lahf rcll dec dec lock mov iret push xchg pop push inc popf and mov leave mov adc dec popa xchg add xchg test sahf or int popf pop (bad) out imul mul iret pop mov cltd add inc dec add sbb lret push inc mov inc loop cmpsb and movsl sub lods push sub daa mov mov mov inc cmp sbb mov mov sub xchg xlat (bad) cmp adc fs sbb jns sub jno in movsl ja jg mov lahf mov mov aad and aam imul xchg dec outsl imul xchg mov sub dec (bad) gs adc and mov sbbl mov dec sub push and jns dec mulb clc push icebp and pop pop mov sbb mov jne sub adc out cmp mov pop mov mov or jno mov push mov xchg pop push aam lock out sub stc shll xchg inc mov push loopne sub jbe push movsl jle jp int std pop out pop or lret mov xchg repz fistpl lcall mov adc mov mov push dec xchg or push loop xchg add sbb scas dec xor cmp push lahf xor mov adc or je das ficomp jae lds push subl repnz mov outsl nop repnz dec in js (bad) mov mov (bad) cmc or xchg in jl stc mov xor dec (bad) mov sub lods (bad) ljmp inc arpl arpl cmpsb push out push sub iret stos or (bad) mov xchg inc cmp andl jo insl cmp push fsubl mov xchg lods pop js jnp xchg clc and popa and adc mov nop inc sbb nop cmp mov xlat das jne mov mov push pop mov arpl fldcw fisttpll (bad) jp xchg fnstcw inc icebp pop mov ret inc incl bound rcrl popf lcall fwait or loopne sbb mov mov fstl (bad) icebp pop mov pop adc jns dec outsl jne mov cs (bad) ja add and sbb incl es jb xchg add loop mov dec ret inc icebp dec jbe imul jge adc or data16 repz pop or mov jecxz jb int sbb andl jmp xlat adc fdecstp cmp pop pop inc pop dec adc jo (bad) es fidivl loopne sub outsb cmc out fimull addr16 stc xchg inc test mov dec push xchg into out outsl popf sbb aad das push les xchg pop jmp stos shll mov mov jecxz fisub sub ss rcll shl repz leave sub inc cmp inc ja add xchg jle cld popa (bad) jne es inc mov sub mov sub adc push lods out (bad) mov ja sbb or lods (bad) push movsl or data16 outsb sahf ficompl dec jecxz test and dec scas adc mov aas adc inc clc xor in ds (bad) arpl pop lahf fistp fimull xchg mov xor add negb aad fldt (bad) ss int imul insl icebp pop ret xchg push mov mov ds jae out mov aam popf movsl jbe push sub xchg and push mov imul clc and js pop fldt jmp jae xchg or pop fistl insb ret add jp cld jmp (bad) or or inc dec shrb in insb (bad) xlat jne (bad) in or cwtl (bad) ss or in xchg push test (bad) shrb jecxz push scas jl lock mov addr16 xlat cmp jne das mov mov adc pop jnp outsl insl adc jl popa sbb xchg pushf sbb movb imul cmp sub push xchg mov clc daa cmpsb call sub adc xchg cltd loop mov xor inc roll sbb sub dec or out fmull lods dec mov clc xlat lock (bad) and mov movsl (bad) dec sbb or ret test fstpt and call clc pop loope cmpsl test push mov mov pop pxor jecxz lock mov leave stos xchg clc inc xlat dec std sahf xor mov xor xor notb lcall outsb out scas in daa or mov add add and xlat dec mov call lret xchg in ljmp xchg ret mov aad aaa or adc test inc rol insl jb xor es rclb add add push loope xor jmp cmp outsb lds cmpsl push rorl add in outsb xchg fwait push incl test loope js movsl mov xlat (bad) push sahf xchg in sub pop lods es dec or inc sbb icebp je jmp xchg push mov xor and incl push icebp movsb push outsb rcrb stos jnp bound cli sbb xchg mov adc incl push jmp cmp jg pop mov in jge test or (bad) fcomp in lcall xchg push and in addr16 pop stos inc daa in aas sti pop push inc sarl mov push pop sbb orb add jp cld adc pop lock popf loopne xchg adc les iret mov outsb push sbb das and xchg inc mov out imul (bad) fild push es psubq fimull pop fldt xor jge mov out sub xor xchg std jne outsl cmp stos xchg test int and ljmp adc lods es xchg dec popa jmp add push cwtl sbb jmp inc mov loopne sbb xchg adc shrb ret xor pop cli xchg cltd insl insl stos inc inc lret sub idivb xor (bad) in (bad) xchg jecxz mov aas sbb js (bad) fcomps dec sbb sbb stos lods icebp out push inc pop mov fsubr mov mov pushf cmpsb or or mov pop pop xor adc test sbb pop jno aad cmpsl sub imul insl sti scas iret pop jne sar insb mov mov and xchg fucompp fcmovne pop sahf sti icebp imulb jg std inc push sarb aas jle pop mov mov lcall lods mov sub jo xor jg lods or aaa in push incl add push (bad) mov int xchg mov xor xchg inc mov aas loope,pn aaa add adc pop push out sbb mov inc dec jno lret adc cmp call cmp pop jmp xchg test inc adc sbb lcall mov pop jbe pop out mov out enter movsb fcompl sbb lahf mov loopne ficoml loope (bad) (bad) adc pop lock pop fnstenv bound aas cmp sbb jo outsb lock adc ret mov adc xor jb imulb mov imul les lret loop incl clc and sarl clc mov lcall pop mov ds add jl lret mov jg (bad) clc sub mov pop mov in dec loopne mov jne popa xchg les xor movsb (bad) loop ljmp xchg or pop mov xlat lahf push or std hlt mov (bad) mov mov dec push pop jne pop pop stos pop mov cmp jg out inc clc pop scas push hlt sbb bnd movsl fsubr (bad) jnp stc mov ss inc pusha add fwait xor sbb lahf lock fcmovnu pop test adc lock mov in shrl mov shrl and out add popa sub stos adc push lcall ret mov loope stc sti pop cld dec mov mov push inc mov mov mov and inc adc dec (bad) repnz xchg popf cmp sbb lods icebp pop inc pop or push negb fist mov call insb cwtl andl nopl hlt push jnp sarl popf adc fsubl es fstpl ds std mov add or dec lock out lods inc test mov jge cmp xor aam adc pop clc fnclex dec sarl popf cmpsl fnop stos dec aam jg dec or mov inc enter mov int3 ds push sub add push lahf fimull jecxz clc lahf jne rol push push xchg cli testl jae ja inc and or xchg pop jno iret fsubrl mov sarl jnp jb loop xchg adc fldt pushf jle in iret push adcl xchg pop jp imul idivl imul sbb popa add cs lods out pop outsl cld and mov pop mov cltd jno iret pandn ljmp aam fdivp ret and rcrl cltd sbb dec mov pop repz xor sarl or xor daa shl mov mov xchg push push cmp arpl enter cld lock mov dec imul ret (bad) loope vcomisd jle clc subl mov jp sub xchg cs outsb scas or test les fmulp loope fcmove loope (bad) mov inc dec std cmpsl ds pop imul push sbb cmp mov loope imul push push cmp mov mov movsl or lcall jmp inc mov je sbb iret sbb jge add pop add mov fsub sbb pop xlat int3 lahf adc xor xor idiv sbb sbb clc ja out hlt pop adc clc jne cs out mov cmp daa add pop add pop sbb mov cs xchg cmpb dec cmp sub sub inc push ss or jns add clc push outsl out mov mov push mov outsl push fstp dec fisub lock outsb pop pop daa or inc and xor sbb (bad) push imul add incl cmpsb jnp scas push mov fildll data16 xlat mov cmpsb push lahf sti arpl outsl lock in pop movsl fprem fcomi jns mov adc push adc mov dec pop jge lds imul lods cwtl in (bad) mov pop test clc int sbb inc divb pop jge movsl icebp pop dec mov movl test and push lahf pop cld inc (bad) aas gs out mov sbb aaa ret and add adc cli movl xor push insb sub lock das adc sub clc (bad) popf out lds mov mov data16 in imul jno xor xor movsb out mov stos mov push push stc push xor mov in add loopne loop add push movsl cmp pop clc cmp inc inc adc mov mov fcom ret std ret dec scas jg lahf jle clc xchg ret jl clc aad or shl jge pop jnp leave cmpsb (bad) jns push dec lea push (bad) repz lock test loopne insl mov jg mov fprem1 out pop jmp test stos mov adc and repnz xlat mov sbb mov fidivl daa mov insb cmc dec mov mov jb xor or in sti mov jecxz stos push mov dec mov cli mov movsl or pop rclb push add stos jle loope add test negl xor pop enter ret mov mov add (bad) fwait mov add add jecxz fildl les testl (bad) sahf and mov jl mov xchg fcoml xchg cmp push daa cs es sti loopne punpckhbw clc imul std mov clc test mov lock lods cmp es xor xor pop nop or xchg scas add mov pop sbb sbb jl lock mov jecxz mov add add mov sub test sub dec xchg in inc sbb xor adc repnz mov fwait xor call mov push aaa mov jg mov data16 mov mov and out insl jle jle push push mov lcall cmp sub lods dec sbb (bad) in jecxz jl movsb clc add mov xchg cmp (bad) lods test (bad) fisub das sub xor into mov mov jbe xchg sub mov sarb xchg loope test lea pop pop mov mov dec insl sub nop and loopne lahf nop add mov std xchg aas cmp xchg dec arpl adc cmp cmp sub mov mull movsl rorb leave scas ljmp cmc mov imul in mov ja,pt mov ljmp pop jbe mov add test mov mov ret sbb (bad) aad movsb mov pop dec mov jb out and mov mov ds lret fist ds jl shl mov push rep jecxz insl mov push and add add pop cmp xlat lahf adc sbb ja out cld adc ret inc mov icebp pop inc mov and mov incl pushf stc xchg pop sbb mov imul push icebp add xlat xor xchg stos clc ja jg in in mov (bad) mov iret aaa xchg add repz sbb or mov pop (bad) mov incl add or jne push mov mov clc pinsrw imul test xor icebp test or adc sbb jnp ds ficomp push pop dec shlb xchg sub xchg push imul add push (bad) mov pop (bad) pop mov les stos js insl dec ret aaa pop dec cld sub sar lret fs cltd and add loope clc xchg jb gs icebp rol aas push mov test lcall xchg lods aad bound xor pop out in lret inc xor push loopne push loope sub dec clc mov add cmp pop xchg mov mov adc data16 and cwtl push popa sbb mov das outsl mov mov (bad) hlt jnp ds jne out push (bad) sbb jbe (bad) mov mov push mov in fwait loope adc xchg loope dec mov scas mov pop ljmp pop sbb gs std call push and ret scas lods call roll movsl xor shrb pop xor lods (bad) cmpsl inc pop push mov adc jle (bad) fiaddl mov jp movsl push lahf fwait jnp das (bad) nop add mov or add and in push mov jecxz mov add cmc aam jne pop sti pop dec shl mov lods mov pop addr16 rcl stos push or cmp fsubp mov popa cmpsl pop fwait cltd mov dec jnp pop aad outsl mov int xlat into xor ret sarl shrl decb ds xchg mov jecxz out jge dec mov leave mov mov in icebp dec movsb in mov inc mov incl (bad) jae inc mov cmp lcall andb notl mov pop sahf cmpsl and pop jbe std cwtl lahf add sar add add clc cmc sbb loope push or push cmp add repz cs push cmp add adc iret ret ficoml fisubrl cmp loope sub stos pop jbe sbb jnp ret jae test mov ret aas aas xchg lds sub mov (bad) lahf int3 out iret jecxz setno push push pop ljmp incl shll mov mov pop cld cmp mov and push xor (bad) dec scas adc fwait loop frstor mov stos pop pop fdivrl cli loop repnz push sub pop out nop bswap shl and and jne mov sbb loopne js out mov insl test into ja dec mov dec nop js sbb jp cmpsl loopne mov pop cmp mov lds mov cs dec xor or mov cmpb lret xchg movsb mov pop mov scas js push test mov push pop jb incl xorb dec (bad) pop pop mov push xchg pushf xlat push dec jno push sub jl outsl cwtl pop imul jg scas aas lds push stos cld insl icebp cmp loope or imul sahf dec mov jns xlat stc push movsl xchg xchg push mov sbb ds cld xor mov lock push rolb xlat sub push inc aam mov dec mov and fldl in mov ret dec adc insl adc aaa aad scas adc ret dec loop bound insl lds push pop xchg pushf xchg stos std push loop rcrl repnz dec aad pop push dec fstpt outsl incl or xchg data16 push clc mov in mov inc mov xor cmp mov imul dec sbb sahf add lock icebp fwait pop clc lahf lods push insb jbe jbe movsl test jnp mov and sbb mov inc xchg fwait sub pushf clc jns scas pop jl outsl xchg incl or mov hlt mov (bad) enter dec or or fwait test mov data16 out jmp pop sarl adc lock imul insl mov ss mov ja pop lret stos in leave loop push xchg pop xor je jne hlt fyl2xp1 push mov jle mov push fist (bad) xor mov and outsb xchg jl,pt lods mov pop lret mov and cld pop icebp dec dec icebp aaa xchg sarb or mov jge enter sbb mov out or fisttp ds out cld jno mov mov (bad) sbb jbe les ljmp cs test popa or sub test in clc out loopne outsl pop (bad) jnp and jp push jb ret dec mov pop mov mov mov in add mov in sti jb imull mov dec xchg pop mov mov popf (bad) incl clc arpl mov sbb aas gs dec aad mov out out and dec xchg es cmp pop ss leave in lcall cmpl loop mov pop push push insl jecxz fisub sbb outsb or sbb addr16 push xor xor push aaa sti push clc dec push xlat jle js sub xor jecxz dec das int push mov add arpl xchg rorl popa lock lock xchg ret push lods lods pop fadd movsl imul inc xor dec scas sahf fsubs incl xchg mov xchg push push xor stos out std jle insb (bad) ljmp cmp fidivrl pop clc cltd lock loop mov jg ljmp dec icebp es xor stc push xlat jae popf xchg and xchg insl loope daa push movsb push sub psubq cld xor iret lea sub clc pop loop mov (bad) hlt cmp cltd (bad) fmul pop enter inc jl loop,pt sub cmp mov les outsb xorl je pop pop fs (bad) fstp jns and push inc shl xchg outsb push lods cmpsl scas jno cld adc lods jne dec fsubp cmp mov ds push sub jae daa inc rorb imul jnp jle lret iret inc sbb sti push test dec ret cld sbb dec loope jmp ja lahf mov out incl or jge cli inc mov add dec out add push sub outsb jae cld sbb out ret jnp repnz je insl outsb je mov mov push mov in rcll jb clc repz aas pop xchg inc icebp add (bad) cmp push push pushf mov insl pop pop mov inc jo pop and pop ret inc mulb xchg movsb (bad) (bad) or je inc push lea and pop insl mov mov les inc pop push cmp ret xor jne in ljmp adc je shr std setge imul sti push hlt xchg mov jns cmc int3 inc pop out inc (bad) into stos les sub ljmp sbb inc mov mov rcl mov sub push addl (bad) loope xor test adc test sarb inc movsb jmp inc aad movsb mov aad les out adc mov sbb fbstp arpl insl push xchg ss js int3 pop xchg xchg jne in mov push out pop xor sbb cmp mov dec or pop lods in mov data16 imul sti fstpl push iret and pop ffree jg push xchg (bad) jge js adc outsb iret sbb jg sub lea insb repz and or cwtl lahf cmp std cmp jle test sbb js jmp xchg sti sub sub push pop sub cmpb (bad) jo sbb dec cmp shrb push rcrb notb outsb bound sbb cmp ljmp xor repz push xchg aaa pop push arpl leave xchg and sub lahf les cmp push mov movsb pop fadd or xor mov or or jbe sub adc stos imul idivl inc xchg lahf fcmovbe jmp sub movb xor ljmp or pop xor cvtdq2ps imul out fildll pop pop mov fisubrl mov or out add aad pop sarb adc lcall pop fisttpl xchg mov mov fsub jle fmull jo add jmp imul ret mov xlat mov pop stc mov add jo mov rorb and adc cmp jo popf sbb fs imul lcall cmp sti pop js push lock (bad) xchg test js fiaddl nop mov or and test rolb lock loope adc (bad) adc pop mov aam xor mov jbe cs push sbb sbb lea les pop inc push sbb and enter call mov mov test push xlat insl popf aam out repz mov rcrb sbb rcl movsb mov dec jmp or mov (bad) push xor ficom mov mov stc call sub adc inc push mov lock (bad) pop pop pop push sbb sub enter notb (bad) in sbb dec cmp sbbl movsl loopne mov ds mov pop xchg push aad lret imul xchg js in out xchg clc xor mov mov loope inc popa aad cmp mov sub jno fsubrl nop mov mov fcmovnu out jnp ret (bad) sbb pop hlt mov in add sahf mov pop ljmp cmpsl mov arpl ja lea xchg and dec nop dec cmp jbe cmp dec das xchg or in imul pushaw ficomp ja idiv mov out addr16 pop xor xor mov jl loopne cs mov scas cmc mov push sbb out loope fucomp gs adc (bad) or or xchg add pop jg push loop jae ja mov repnz pop fild fwait sub popf lods out pop sub lret jno xor push and mov out das inc mov jge (bad) jbe test xchg fdiv cmp cmpsl (bad) mov jg js push (bad) cmc or ja iret cmpsl fstp inc rcll fsubrp fwait insb mov mov lret add (bad) in adc cld add mov adc int cmpsl mov xor mov nop mov int3 arpl dec xchg push xchg mov sbb icebp xchg loope xchg lds (bad) paddusb ja pop insb (bad) je inc aad insl loope mov sbb ljmp leave push pop in or ja pop adc scas ret mov sti ret insl loop lods pop dec jnp xchg push fcmove test test ss jae outsb loopne xlat xor cmp pop fdivrp pop mov pushf jge fildll clc outsl jmp jmp jnp mov mov push imul xor xchg bsr dec unpckhps cld sbb shl lahf mov jae cmpsl int jge test enter adc inc sbb fcmove shlb xchg dec pop scas dec jecxz adc ds add aad inc aad pop sbb lods mov fistp frstor add (bad) mov cmp loop add scas pop mov mov mov xchg mov inc imul pop mov inc xor jecxz test ja fisubrl int enter xchg lcall ja or scas jecxz ret cmp jp adc neg dec lahf sbb jne xchg (bad) mov mov lret sbb mov pop incl add add fwait mov dec loope push pop fxch idivb ljmp int3 int3 mov bound jno dec jl mov sysexit jg js dec shrl lods hlt lods inc dec ss shl adc nop inc ret cmp fs add mov test mov push mov lcall fdivrl daa shrl adc jecxz cmc (bad) cmp xchg mov div call xorl stc int3 fptan sti cmp ffreep and pop imul cmp xchg adc push mov mov dec jno fistpl pop leave iret sbb dec cmp mov cmp fstps lods lahf sub incb and cmp inc jp cld adc inc lock xchg mov test pop pop clc xchg dec mov arpl xor je jle mov jle pop ret (bad) mov imul mov rclb sti push clc out cmpsl or and mov dec incl ret jg lock mov imul cmpsl scas (bad) scas ljmp popl dec stos fcompl pop pop fidivr mov dec mov or mov mov mov adc inc adc test push sub clc pop adc or outsl mov js inc rcrl out ret shrl mov adc fs fisubl insl out in mov fs sub pop fstl decb cmp sub dec lds jl mov fild xor lock ret jb or pop mov mov jne aad cli jg xor dec into sahf mov add fcmovnbe cs test add ss adc mov icebp mov cli out je outsl aaa xchg aaa xchg es jne or lods in adc jbe sub push rcr inc and inc lock jae jg xor cmpl incl insl sub int (bad) pop je add dec jno out push dec xchg dec mov fildll jmp aaa (bad) adc outsb mov jge jns sbb mov and int3 mov in or jge sbb or icebp cmpsl in or pop mov mov push imul faddl aam (bad) adc and outsb and mov xlat fdivrl cmpsl xchg in pop imul pop and mov clc (bad) icebp mov sbb sbb lods dec or clc iret push jae lcall shlb xchg aas jmp xchg adc sbb scas mov loope push js lds xchg mov das ret out or inc test xchg xchg insl (bad) les mov ret dec jmp xlat decb jae and aaa cld xor (bad) daa icebp outsb mov lods outsl sbb sbb xchg je and add (bad) decb daa sti dec mov cld ds and (bad) repz xor fcompl insl push dec in lahf sub add fist sbb jp dec jle mov cli popf nopl xchg iret adc idivb scas fs clc cmpsl loop fidivrl loop mov (bad) lret jo (bad) (bad) xor pop fidivl cmp lock jne fs je push cmc mull adc loopne cmpsl lock jne cld dec lock mov mov ljmp push js int3 dec inc jo sbb fcmovnb int add dec outsl (bad) pop aam sbb das (bad) mov push mov pop js pop aam dec or jnp imulb jecxz and jo mov fdiv jno xlat xlat fistp (bad) sub loope in sub mov movsl clc dec aas or dec jecxz out pop xor sbb daa adc adc adc sub mov dec ds icebp repnz dec lret push mull repz jp out lock dec daa idivb (bad) add lock loop pop jmp inc das fstps ljmp cld inc aaa inc sti int3 test and cmp mov psrlq mov xchg mov ljmp push xchg adc in out (bad) sub push xor dec cld jg dec in sub jge pop mov mov (bad) jne or mov bound lret enter adc addl incl add mov cmp lcall or lret addr16 cmp cltd mov pop push scas dec ljmp (bad) mov shl (bad) cmovg pop mov pusha xchg mov loop jg ds lock lods loope push jmp mov fsubrl fistl xor les gs lret fiadd cvtps2pd cmp sti addr16 inc mov (bad) movl shl mov pop insl stos and cmp outsb jg js rcrl scas je add add cmp mov pop popa mov add sub adc lret pop in in xlat sbb in or lock mov js sbb jbe inc cmp rorb nop cmp lret mov out jno mov stos mov imul fldt repz sbb icebp fwait jb fnstcw inc mov adc ret pop insb jl lock loopne mov (bad) (bad) out inc inc xchg sub lcall mov sbbl or (bad) xchg jmp cmpsl (bad) pop pop fadd loopne mov test mov je es dec mov rcl mov scas (bad) jg daa out aaa lock rcrl lcall aad mov and sahf inc and sbb outsb lock cmpl jnp aas loopne sbb repz (bad) xor fistpl out mov sub dec mulb mov jge rorb jne jmp jne sbb mov mov incl shrl jg mov add jl imul int mov lret mov cmpsb repz in push fs repz add mov jg pusha icebp incl mov icebp iret (bad) push and pop pop sub fisubr (bad) cmpsl fimul mov out mov cmp push out ret xor cld adc (bad) int jl fisttpll dec mov mov rcrb mov fstps lea or sbb jmp adc add sub pop lock cmp out out cmc incl or call lods cld xchg sbb adc jno or mov mov sub lods gs jle sub out stos mov jge mov lods repz cmpsb out xchg pop shr incb ret sahf repz js outsl or ljmp adc pushf dec lret or enter (bad) jno (bad) mov ss add in pop movsl fnstsw ret jne in or mov dec sub mov popf out pushf jecxz,pn orl std test inc loope rcl loop in out cmpsl dec jge push jns mov fcoml scas pop test (bad) add dec dec (bad) incl push fnstenv pop sbb aaa pop or dec cmp mov mov nop enter sub (bad) and shl mov shlb hlt mov push xor dec jae fwait xchg mov jne jge sti daa jl lock rcr mov sti loope xchg imul notb fimul mov mov add and inc jg mov pop subl js (bad) jo sahf ss scas lods lods sub cmp sub fidivrl dec test mov or inc mov lds jg popl xchg jg jl scas js push shlb in xor sbb dec jns into divl inc adc outsl xor jb stc sbb add femms (bad) rcrb mov jl xor sahf cmp adc sbb fstps lret repz lods mov sub shll xchg scas movsb ficomp pop dec movsl inc or add insb cli sub ds sub jno and cli fisttpl mov hlt sub ret mov (bad) movsl cmpsb push aaa xchg mov and or ss cld mov (bad) in rcrb sbb dec (bad) aas fs fidivrl (bad) notb icebp cs jnp pop ret incl sbb scas (bad) mov sbb scas clc jle dec pusha mov mov mov popa mov add sti push pminub testb int pop imul incl push pop pop ret sbb (bad) lret bswap lods xor out pop (bad) cld push and mov arpl fnstcw add jge out aas push out adc out pop insl loopne push push inc incl sub dec add xchg imul mov jmp lahf mov les lret out mov jne scas mov push incl sbb aad or jnp fcomip xchg js sti push aaa mov mov aam in scas outsl sub mov fisubrl add scas test push js pop icebp lods loop sbb repnz cs dec jnp add sbb pop fisttpl repnz or mov fwait push push sbb fsubrs and clc mov ret jp sarb dec jecxz push adc insl out insb les inc clc std out inc mov enter sti jle,pn push pop mov mov sub stos push jne inc arpl xor test sbb xor mov pop jge jecxz sti cmp cmc aad lods cmp shrl jge adc lods xlat inc lahf xchg popf jge sarb andl into xchg loopne (bad) pop push mov outsl add jmp adc cld aas stos das fidivl repnz mov push adc sub push mov jge push dec stos test loope adc push les push fnop cmpsl loopne mov pop pop out das pushf adc stos test add cmp push xor incl mov xchg jecxz mov cs pop dec lahf push aad (bad) je subl test pop cmp xchg outsb push cmp pop and inc stos lahf mov cld pop sbb das icebp hlt sbb icebp lahf lds das xchg lds lods out dec mov shrl adcb ds or or bound dec into xor scas scas std mov hlt mov mov repnz pop sbb bound test add imul loope xchg cmpb stos jmp loop cmp imul mov adc jb jb repz jns lahf sbb stos or and push jns pop (bad) dec stos sbb push push into pop add out clc sub xchg lock ret aas push (bad) (bad) jg jl imul jmp ljmp cmpsb fcmovu inc lock xlat jno jb jg xchg and fstpl pop mov (bad) inc cld mov mov fwait stos cmp notl mov jle cmp pop insl fstpl out ret (bad) lcall fmulp incl sahf mov jno and sbb sub insl in je pop ja mov mov mov outsl decb (bad) sti inc jle (bad) adc cmpsl sbb shrl scas in pop jecxz lds mov or and mov mov ds je dec add je ss into scas jg xchg aaa jge sbb in mov in daa call ds std xchg incl loopne pop add pop jmp inc outsb jl imul cmpsb dec sbb xchg adc faddp enter fwait loope push imul lds and repnz jmp cmp sbb cmp adc je xchg push add pop imul cmp xor hlt push jmp idivb mov call clc rcll aam nop/reserved imul push mov bound shlb pop (bad) xor aaa (bad) mov xor incl lgs mov int3 jno in outsl sub dec and xor push xor mov paddsw clc xchg xor inc (bad) (bad) mov jecxz outsl cmp fisubr lods call cmp or incl loop (bad) iret or jle clc dec jecxz adc ljmp mov lcall sbb push dec jnp mov divb les xor dec dec std lods movsl mov push push xchg ficomp fiaddl js ret xchg iret or ror jbe sti jmp lods fdivrl andb in leave mov fcmovne (bad) sbb sub imul aaa mov sarl pop lds int mov inc sub xor add pop cld dec xlat cmp scas push pop pop mov mov or mov cltd cs iret out nop int3 int lret imul add (bad) int xchg loope andl xlat lods outsl mov push adc cli cmpsl out fs lods lock pop cmp adc fnsave sub stos aad mov fcomip jae (bad) xor pop icebp inc dec xlat sub scas imul outsl je outsl mov js mov iret xchg or in jl adc (bad) xchg cld jne,pn sub lods and cltd mov adc mov rcr xchg notb cld push clc mov dec aam cld cmp ja pop lahf jne sub cs daa or daa add xor (bad) notb or out in adc jg sti jle xchg push out xchg dec es imul gs sbb leave adc shrl fidiv fiadd mov push jecxz add mov fiadd mov pop jae sub (bad) inc and mov and aam sub out shlb clc xchg mov fcompl inc jns addr16 adc mov sub sbb or leave sbb jae mov mov xchg add imul fidivl mov sbb xchg add pop pop pushf jecxz std lods jle js loop lds aam in out xchg sbb in cmp rdtsc out and in dec pusha xor cltd lea cmp into ficompl hlt aad jg pusha xchg in movsb lahf push mov scas sar push jbe notl mov pop sub inc outsb add or sub mov ja mov (bad) es xchg les xchg dec push testl nop sub (bad) out mov lds mov out loopnew xlat test cmc cmp sahf sub scas gs jae nopl ret roll stos mov cmp pop push icebp test clc fcmovnb divb sti add or xlat cli inc int3 inc push or xor jbe inc and add stc jle sub xor in dec ljmp ret (bad) push pop lock scas cltd lods je leave dec pop ret call jl repnz repz mov movsl loope mov das punpckhdq cmp fwait xor fbstp (bad) in sbb mov inc mov inc jns lea push lahf pop mov inc (bad) xor aam jg jmp rcr imul xor outsl push and mov or inc mov jb hlt (bad) (bad) incb clc arpl cli or in sbb out and daa push add push mov scas inc xchg movsb mov int3 cmc repnz cmp stos dec sti (bad) stc sbb push daa lock mov inc xchg adc or test add cs adc mov and push or add pop dec das mov mov xor sbb aaa pushf jle divb cld jb out ret iret (bad) pop aas xchg cmp lcall mov mov outsb and gs adc add enter dec mov push fisttpl and push (bad) cmp ss adc cmpsl in adc cmc rcl pop iret jge scas outsb movl jbe jge iret xor scas bound adc cmp outsb inc cmovb xlat pop stc xchg cltd lods js leave scas cmp ds pop sub add daa test xchg shl orl xchg mov fidivr (bad) repnz mov (bad) mov push insl out xor sbb mov jmp aad test xlat mov lea jne es add out pop rolb xchg sbb or data16 nop shrl lcall sarb jae fs pop call js imul sub sbb xchg inc pop mov jmp sti dec pop daa frstor std popf out (bad) cmpsl mov pop and out cli (bad) push xor xor (bad) jo push (bad) mov insl stc or inc adc or cld cmp pop fcmovb js sbb repnz jno lods sbb adc jbe daa add daa lds adc xchg cwtl dec jno ljmp ret std ss movsb add jg ss lcall (bad) ljmp adc or sbb sti mov jae insb jo xchg xchg pop inc repz scas cmpsl (bad) fldl btc mov aad adc repz loop imul sbb in jecxz xchg sar mov ficomp icebp es gs das jae les lods mov inc (bad) aam sbb push mov jl clc imul xor pop mov xlat dec mov mov mov ljmp and jns es mov jg clc pop negl jns lahf adc jno push stos movsl jecxz pushf sub ret es jmp or or pusha pushf (bad) jp into xor idivl sbb scas sbb mov mov cli into (bad) or ds cmp ja xchg enter fildll sbb in mov sarl and scas ret dec outsl and insb mov mov push repnz jecxz add rorb cs jg cs or mov aad jne in xchg sbb imul mov imull add jp,pt in inc imul std movsl cmp loop dec out jl mov push xorb insl cs sbb cmp mov push jge sti negb aaa cs enter pop mov icebp push xchg scas cmova push test sub pop idivb mov cmp ja inc push sbb addr16 pop mov fisubr xchg push mov sub test push aad pop xchg ss mov push jno add popa mov jno (bad) rclb adc mov adc and pop pop test jne xchg adc gs pop add js loop push ss sahf lahf jnp fwait dec arpl je pusha xor dec adc push in pushf inc sub push mov (bad) sub sar cmc cmp mov jg lcall out adc xor dec mov sar ss cld inc adc (bad) aas jno add pop mov lahf push scas mov push (bad) mov ja xor jnp mov mov mov fist pusha stos adc daa sbb fwait ret ficomp lahf xchg and ja cmpsb mov push inc push push sarb add add adc incl in pop lock out lahf add mov mov sub pop in fwait mov mov fwait int3 insb xchg xchg add lret je cmp arpl mov outsb int jle inc fstpl addr16 cmp push jl gs pop inc jl mov cld pop dec arpl call push rolb push ret repz ret add loopne in inc (bad) mov paddd shl cmp xchg cmp mov lods sbb loopne repnz and jecxz sub sbb notb lahf test dec jnp push jbe test subl push ficompl out and lea sarl pop fisub clc mov xchg ljmp add sbb (bad) es and jbe mov and rcll add arpl mov lea aam sbb lods imul push inc jo cmp sbb movsb add inc jae loop xor loopne cmpsl jns imul mov jbe mov dec jno,pn mov test lds aas or mov (bad) and sbb cmp insb pop test add push repz jb jns add mov pop loope mov jbe js xchg jge cmp movl xchg aam enter cmp inc insl push pop jp jg mov push push push pop ficompl pop repnz lea add movsb mov and fisttp cmp aaa cmpl sub and inc xor addl repnz or cli pop mov aas subps add sub popa mov cmc xchg or mov adc outsb or cmc scas mov pop outsl xchg sarl daa dec daa (bad) dec (bad) sti dec mov push xchg jns add or xor add jg js ret les or aas pop lock jmp xchg jae adc pusha fldenv sub mov jnp shrb leave incl xchg insl jge shlb mov pop push xchg mov (bad) mov add lahf fadds pop clc pop lock cmp cld pop loope inc loope hlt lret pop mov daa mov inc sub xchg and mov mov lock rcrb scas ret das (bad) lret dec mov sti push mov mov pop push jne test xor fimul pop notl cltd loope add sti pop (bad) aad ss popf mov fmul les (bad) hlt incl add ss icebp fcompl jge push mov (bad) adc dec fmull adc test cmp into xor stc cmp adc or std ss lds and out pop adc jno xor sar scas (bad) pop fistpll ffreep jno mov sbb mov jbe mov jg lahf sbb (bad) xor mov dec sbb leave lcall pop mov int and movsb dec repnz les xor jl std xchg lock in add jl test dec rcll xchg jns lea and pop push sar lock outsl mov cmp clts inc fimull mov clc arpl mov out loopne sub pop clc inc test cmp lcall popf add sbb ja adc or loopne add jae cmpsl sub mov mov jmp lret push mov roll imul jne lea into jecxz push jmp fs xor push xor xchg jns xchg out inc (bad) mov aas xchg jg dec aas andb sub mov or lods loop dec ret out mov jbe add arpl xor pop fs pop sbb ds cld adc loopne ret (bad) sbb jne in adc mov push adc pop leave push jbe dec add pop pop inc pop data16 loope (bad) mov das rcrb pop pop ret sti sbb mov daa mov jge cld pop test addr16 xchg jl jb jle jns push push xchg jo pop xor fcomi cld std push ja cmp xor jbe xchg xchg lahf int cmpsl loopne inc jg xor ja push push (bad) in and (bad) hlt jg js push shll (bad) daa inc rol or mov ret push jl cs pusha or mov and stc sub or sti insl clc pavgw in or mov in cmpl xor out repz mov add push and mov and jb scas dec std movsl aas push mov cld adc lret mov loop mov xchg (bad) mov pop ljmp scas push loopne lret cmp mov pop dec shr insb in xchg loop leave addr16 mov mov (bad) cmp outsl xchg loopne leave mov sahf mov xor mov mov popf scas lods daa fnstenv stos jg das xchg (bad) xlat mov (bad) sub or mov (bad) sub int3 lret mov xchg dec sub sbb ljmp (bad) lahf mov add (bad) mov jno xor xor pop loope adc addr16 mov and popa mov outsl xchg scas loop mov inc xlat iret incl lock aas test js rcrl cmpsb jl gs dec loope adc imul pop ficompl (bad) mov dec jmp sub fcompl cltd test xor hlt sahf cmp dec leave lods lods inc push and test xor jae sbb pop push sbb mov js or stc cmp push outsl ret js test in outsl cmp out repz mov cld xor imulb mov enter mov aaa xchg jb cld xchg mov push xlat cld adc inc incl xchg dec mov loop ret push mov loope nop or outsl sub and cmp popfw nop adc repz add sub in aaa (bad) jbe sbb xchg adc data16 addr16 data16 jmp push jb or jp faddp add cld stos mov notb clc insl lods jl aam sub lret (bad) sbb hlt fistpl in aaa adc lods xchg push push pop dec (bad) xor jae rcll xchg jb inc pushf add jmp in jo scas ja aaa std and test push scas jbe xor repnz mov jle js loopne rorl pop or fist mov imul xor movsl in push mov movsb jno and cmp outsb jle incl (bad) inc jmp xchg dec xchg nop fmul addr16 and aad adc mov cwtl in in cmp (bad) test roll mov or add pmullw xchg push fwait dec aam add mov mov mov orb add icebp inc xchg test mov fadd jne pop adc stos fidiv shrl and dec pop mov pushf pusha mov adc out movsb pop push mov lahf pop popf cmc movsl sub je mov mov outsl fmul dec sarl aas mov mov into (bad) dec inc jmp mov mov xchg mov add dec loopne popf push lock in rcll xchg pop jg lahf adc stos inc mov imul fdivrl xor adc cmp sub fidivl adc decb pop loop aaa les add pop insl aaa push dec sbb sbb imul mov js push (bad) xor dec out ja lahf add fmull movsb stc rol sub sbb movsb inc lretw push leave in sahf mov pop xchg loope pop fimull mov xchg lret cmpsl lahf scas loop out into das or cmpsb xchg lret pop mov movq mov incl outsb iret cmpl sub push push sahf sbb insl in imul sbb loope jle xchg in push push jo or addr16 sbb mov cli xlat push xlat sub jns rol lock je and mov fadds rcrl aas cli (bad) mov mov sub fldlg2 jne outsb mov mov sbb (bad) xor imulb jecxz mov add or dec dec dec outsl dec mov out sub (bad) xor push imul push xor push xchg sub inc lods imull mov jo and jne pop imul cld xlat cld add lahf incl add clc mov mov pop mov xchg mov (bad) into inc sti dec push ficomp mov fnsave fbstp das sahf int jno dec (bad) fistp insb out cmp jmp push icebp xchg fwait jecxz sub and xchg dec mov mov jp loopne imul in fwait sti push cld push lock jmp add jp jnp push iret pop mov push lock scas outsb in mov dec xchg loop repz enter (bad) icebp loopne mov ljmp mov ffreep pop sbb mov sub into stos idivb call jbe (bad) adc dec lret pop fdivs inc mov out cli (bad) mov and js mov fcomi mov incl add std (bad) jl sti sub pop clc cli aas sbb mov clc (bad) out adc addr16 sub loopne out sahf addl mov movhps jg jg or ss (bad) jno push cmp dec loop call data16 push push into rcrl out adc sbb iret in jae mov clc mov loop xchg loope add inc ret ja sbb and lock mov lds gs jo cmp fimull mov mov pop ret loop or xchg loop test in mov hlt insl sbb js and cmpsl int and push jne pop pop mov push stc cmp test aas mov jmp addr16 mov fldt loop subl movsbl (bad) push mov movl xchg fisub pop repnz clc fsubrl cld adc negb pop icebp xchg negb lock pop jge das sbb push divl ss mov push mov cs jae (bad) jecxz js cld push das loopne ret fild jle jl shlb sub es out mov xchg xchg rolb lods (bad) pop sub pop mov loope jno idiv add and add mov ret fimull ret jge std mov push inc mov in push cmp insl outsl or clc js jae inc add mov xchg in adc repnz fstl mov lret jmp cmpsl mov fsubrl mov incl loopne pop sbb cld xor jecxz std xchg mov mov jge (bad) insl cmp je and jno int stos xor ret ror jbe clc fisttpl xchg loope scas mov in pop push xchg dec xlat sub fdivl xchg mov sbb ret pop and xlat hlt pop decb mov sbb in jg (bad) imul pop lahf xchg jno jbe mov aaa jae jno mov lret mov fwait popa insb incl loope (bad) pop cmp outsl add sbb push xor pop out arpl fcmovne sbb and jp aaa mov (bad) into out les xchg movsl je push imul ds jg cld push lods jmp or mov idiv cmp int3 sahf and push pushf xlat (bad) jne jmp inc cmp push cs inc jbe (bad) incl xchg in (bad) icebp jecxz incl add push aam xor flds aam popf je add fdivrl jg ds lcall cli and jge ljmp adc and clc or std jge add pop incl mov xor loop (bad) movsb fcmovu fsubrl pop aam lcall mov jne adc jb mov lea sub scas pop pop cli sub negl dec push int sub cld cmp std fsubr incl pop mov ja sub je fild insb mov loopne xor inc mov fsubr or fwait jns xchg stos lods addl pop add clc cltd loopne add clc mov fstpl xchg sahf mov pop inc arpl or test push sub loope mov or in mov xorl adc mov mov fwait xchg (bad) loop push lds jae sub jb adc sahf dec pop mov icebp imul sbb push icebp dec mov js rcl jmp lods adc ss scas mov inc repnz jecxz xchg lahf mov jo mov scas mov mov js jg push incl mov xchg dec in cmpsl jae mov outsl ret adc mov and push pop fidivr (bad) (bad) jg neg lcall jge dec inc sbb mov mov cmp mov out push aas push mov xchg jnp aam fnsave jns xor xlat adc adc jbe jb mov popf xchg or lock (bad) jnp jnp mov outsl (bad) mov ficompl jb es test mov cltd enter and inc adc lea aaa test xor jne popf inc lds jb dec (bad) xlat pusha rol mov ja add jne loopne repz jno (bad) xor lods gs pop push in cld adc push std fsubl add mov and push cs pop jne repnz xchg outsb std les lret xacquire in mov jl mov adc push outsl scas inc xor je (bad) sbb aaa fcmove push cwtl out xchg movsb xchg inc dec test inc pop and dec loope xchg lret aas push pop js jae imul jle or dec outsb sub out mov (bad) out sbb daa lock subl cmp push aad mov setle dec sbb adc in adc pop sbb icebp dec inc gs in imul jne int mov add jg js loopne mov sub pop mov sarb ljmp xorb lret sub pop jb loope and xchg loope (bad) mov mov xlat in jne push fmulp jmp lock lret pop dec adc dec iret out mov fadds xchg xor mov push clc cmp sbb mov lcall int int aam or in adc and sub ret add pop jl lock clc jp push jl lods push push inc or mov cmpl movsb add pop xchg mov cmpsl jnp fnsave aam (bad) jnp add pop cmp pop clc mov (bad) jp test or push lcall xchg sbb notl int xchg movsb adc lahf xor nop xor and (bad) mov and inc shr lods insb add adc or fldenv mov mov imul clc movsl insl loop data16 cmpsb xchg ret leave mov roll push add sbbl jl sbb ret and jne mov mov lods repnz ja push insb arpl (bad) sahf cmc in dec jnp jo jecxz cli cld dec ds out notl sub out jne jnp sbb fucomi xchg xchg inc jne in bound push ds sbb or pushf jp cld adc add xchg (bad) mov iret das mov push dec cmp dec je add jno cmp dec adc push gs or push (bad) xor push xchg dec fstp inc mov aam jns mov mov and enter add or and das sbb (bad) mov pop stc outsb arpl cs sbb xor cmp jl test jmp je lret addr16 push daa (bad) mov dec popf imul loop incl (bad) hlt aad pop xlat in jno mov and fmull sarb imul ljmp mov jmp and xchg or sub sbb pop (bad) xor push insl stos into in fdiv repnz in pop scas push inc mov in aad pop pop mov (bad) jmp xchg inc push (bad) notl jo or inc add xchg int3 popa repz add lods lock loop ret dec lock xchg jecxz mov and xchg or adc xor mov xor imul mov mov inc mov aad add inc inc jno out xchg add jne cmp pop lock ret sbb cld lea inc insb les jl fsubrl lahf dec test mov pop lods push daa mov mov and sbb sbb push mov ljmp cld dec scas jmp jmp mov sub (bad) sub pop push sbb (bad) imul pushf add sub dec adcl cmp icebp inc pop icebp adc mov push rcrb xor and sub sbb mov andl push pop (bad) pop imul out outsl cltd inc xor sbb out dec lock and pop mov dec lret sti int iret and xor aam mov pop fmulp (bad) repnz arpl fisttpl cmpsl cmpsb pop adc test mov cmp repnz xor jge fwait insl (bad) cmp test jbe (bad) cmp les sbb stos popa aas negb dec jne je sub data16 out mov movl out cld cmpsl dec daa fstl iret dec mov xor fldl loop mov mov leave call mov pusha movsb xchg inc aas jle out ret inc stos aaa (bad) outsl cs cs out in mov sbb jnp shll mov add mov clc stos clc jle shrl test insl sub lea (bad) push lds sbb push cmp xor leave aam gs mov fidivr mov outsb je rorl jns add pushf movsl negl sbb (bad) in outsl das pop js scas mov inc fistp imul mov leave dec push fidivl in add insl addr16 xlat or push lea cmpsl aad jns incl subb in xor lods cli xchg mov adc adc lock mov xchg aam lret and imul fmul sub and lahf add aam jl loope or push cli mov movsb xchg xchg iret int ficompl in xor clc cmpsb cmp cli mov in or dec inc cmpsl fcmovnb cltd and xchg sbb stc dec fs add pushf xchg mov clc sub (bad) mov std sahf std outsb and insb mov jae mov loope mov lods inc stos outsl dec xor (bad) cmp ret clc jns inc push ret adc pop cmc aad testb insl pop sub dec mov loopne daa test sbb rcrl clc cmp cmp cs xchg fdivs in mov cli mov or adc mov xchg add xlat mov movsl mov test mov mov fldenv mov mov xchg push dec outsl loop in pop pop js clc jmp adcl jno pop pop and sbb push jb (bad) dec (bad) dec jae xchg imul (bad) jmp xchg cmp mov clc je outsl mulb (bad) mov dec pop ret sbb imul std mov xchg push xchg add fcompp and mov sti mov xchg (bad) sub cmpsb lahf cmpsl iret xor cld aas addr16 sub inc push in outsl fwait jb and xor mov xchg pop js push mov es push push xor sbb mov pop pop clc jns fcmove test xor test icebp (bad) fs sti sbb loopne daa jbe repnz lock push sbb sub mov scas stc insb imul push jne out or aaa cmpsb ljmp clc xchg lds insl arpl push push xchg xor jle inc mov pusha add nop jp sbb inc ds xlat mov rcrl cmp out sub fistp les sub stc inc pushf leave xchg pop add add xor jle mov cld dec mov mov mov jbe pop lcall mov mov push jle xor ja sti pop adc cli dec fidivl sub cmp sub xchg dec xchg or jge xchg pop xor and aaa (bad) sub enter scas mov pop jmp das or mov les lods outsl sub jbe popa imul mov adc int3 or test jecxz sbb mov lods mov xor mov sub mov mov pop fdecstp adc or fistpl xor arpl cmp repz cld inc clc ja scas fimull loop ret js mov push (bad) xor cmpsb pop test enter loop sbb sbb dec icebp sub mov jmp push std xchg sbb ja dec adc repnz mov xor pusha xor pushf adcl stos lret mov repnz fbstp adc dec jnp pop out inc subl xchg xlat loop mov clc sahf sti sti sub push dec mov loope lods popf mov cmp adc mov cld dec icebp mov fisttp or adc shl leave jne add int and jnp sbb xchg sub sbb bound enter icebp ja jo ds push (bad) lock sub or push mov mov sub lds cmp mov pop sub dec clc lods jecxz jg (bad) pop mov lock (bad) subl in ds lods xchg outsb adc cwtl and sbb ljmp pop lods cli xor mov push cmc rcr addr16 out loop mov std test lahf mov in mov xor lods xor aas ljmp xchg sub mov jl jecxz cmp mov mov mov mov mov (bad) xchg (bad) and outsb mov mov test inc xchg popf rclb cmp les in xchg sub shll mov cmp jb push sub xor negb les (bad) in add inc jns sahf push clc mov aaa jge es imul inc sub leave lea jnp inc jo shrb dec ds idivb loope lret int3 lock dec rclb cmpsb mov add mov cltd loopne push jg sarl jmp mov cmp add mov add pop scas popf movsl cltd fcmovu insb cmc or sahf pop inc add lods jnp lds jns cmpsl loop ret outsl push fyl2xp1 mov sub sub out xchg xchg (bad) mov pop xchg sub sub popf push outsl in xor aas call aas lock loopne mov shr mov addr16 sti inc int3 adc jbe push arpl push push movsl cmp dec stc push mov mov icebp mov notl incl xorl loope pop or pop pop cld push icebp jb jl lahf les addr16 into sar and fbstp pop lret jno sub and adc jg (bad) sbb inc aad data16 sbbl mov lahf dec pop or lcall pop lret lcall js in addr16 push push cmp loope fcmove testb jmp test movsl (bad) jecxz jg and sbb es sbb and mov sbb ss movsb mov ds test jmp add ja enter in outsl or lods lods mov push dec or xor pop mov mov cmc jbe in out mov jo adc sti push cmc jge ja jge incl add incl (bad) jg inc incl add std aaa les dec jecxz bound lea sbb repnz nop cmp jnp cmp pop sbb sbb jle mov pop cmp cmp xchg clc out xchg adc out mov jae jno adc add adc shlb sar out mov xchg xchg push xor movsl nop mov stos cmp (bad) mov loopne,pt pop pop clc sub in mov jecxz scas ret sbb add (bad) inc repz mov mov and (bad) fcmovnb pop fisttpl mov inc push xor jmp mov jle aad push lret (bad) cmpsb mov (bad) lods stc incl jecxz (bad) pop sbb pop adc xchg jecxz out outsl stos js into xor test (bad) int in push add cld (bad) mov mov fwait push lock test push sbb dec mov inc adc adc scas xor and in sqrtps jnp jns dec mov xor aas push and xor mov cmp mov mov jg jns incl mov xchg cmp movsb fstpl mov lds lea jne inc mov repnz ljmp sarl pop cli std dec mov mov jne push adc push cld inc clc xchg lock push clc sbb icebp and xchg cmc sub sbb and mov sub repnz out dec xchg shrb mov ds lock icebp aaa xchg fistp imul xor jg inc mov cs push mov adc js add incl add mov popa jg sub xor fucomi xchg clc jle notl mov pop out cwtl in sub bound lods mov decb jecxz fsubrp push or movsl (bad) lea adc imul out lahf xor in ss mov loope les sbb ljmp in xor xchg ret loop loope aad cmp sar repnz mov mov ret iret adc jmp outsl mov imul mov xchg xchg pop imul pop jns in aas mov xor sbb mov xor mov outsl stos lds or push xchg in enter adc int scas mov add adc adc (bad) je,pn add inc ret mov lods (bad) mov mov fsubrp fildll and lock xor and jnp mov loopne push sbb sbb xor pop xor xor push ret xchg test int3 jno sbbl data16 (bad) fistpll pop call xchg jnp fwait imul incl loopne push das cmpsb inc fidivr fidivr repz ror ljmp and cmc inc xor inc mov out bound incl add xlat push cltd sti pop js dec lock mov sub or dec mov add mov popa cwtl sub aas mov cmpsl loop mov dec mov xchg mov imul mov pop cmp movsl std lods inc fisubl repnz fdivl push jbe cmpsb and or in lock cmp bound pop jmp scas lods mov sbb mov pop add (bad) cmp inc imul mov iret pushf push popf testb sub add bound clc lock lods test fcmovb push cmpsl xor dec mov dec push inc shll sbb frstor pop pop mov jne es mov sbb sbb sbb (bad) imulb mov sarl js les pop sub ret dec (bad) aas fsts mov pop sub xchg (bad) xchg and add add xchg inc icebp mov mov mov pop das pop fs mov insb mov mov mov cli stos adc sub shll (bad) ja ljmp arpl inc jmp sub sub stc pop sahf xor jg int rcrb pop jo mov popa mov cmp aam out mov sbb lea or add mov (bad) xchg sarb sbb (bad) cmp fnop fildl push out insl loopne mulb outsl (bad) lahf clc and in mov ret lock clc jae push ja xlat mov repnz and insl int mov movsb jo sbb push incl (bad) aaa jl mov mov cmp jl mov insl aad lcall push pop mov xorb jnp lret pop cmp mov imul pop mov shl (bad) dec hlt ja out sti test add sahf xor aas icebp or xlat pop gs mov ljmp gs cwtl jle stc popa pop pop and enter ljmp mov clc sub mov mov imul fucom sti or adc into ret inc test setle mov xor jecxz push imul loope fisubrl fimul sbb dec rcrb mov xor mov add jg xor jecxz in iret loopne sbb mov xchg pop ss jge fld jae mov sub and les add in pop jl js mov ja scas popf cmp iret stos push sti xor (bad) out xor jg mov adc (bad) xor (bad) jl loopne xlat ret (bad) ja popa adcl mov dec mov lods or popf mov xlat in mov xchg (bad) lea ret loope out (bad) lret stos dec sbb pop pop aam (bad) cmp push mov les inc fstpl mov cmpb jl clc cmp test push test loop in push pop loope enter jo notl pop mov fs clc (bad) nop je mov or sub fistpl add mov aaa outsb loope (bad) out outsb sub lret sbb stc insl addr16 mov outsl in push les fcmovb inc mov lea lods mov mov jle pop ficom pop add pop js or fldt ss inc sbb aas sub add in adc ds icebp mul aas mov cwtl pop mov xchg sti push cld sbb aam popl aad into leave cmpsl mov (bad) out dec std mov adcb sub ss fcoml mov ret sti and add incl (bad) mov in ret dec das outsb ds clc (bad) data16 hlt mov dec out xor cmp fisttpll xchg push pop cmpsb ds ja cmpl pop push lock or mov push xchg sbb mov or add orl sub pop and outsl out mov insb jnp cmpsl lcall cmpsl aad movsl lahf xchg inc mov aaa pop push incl push mov incl ret int cmpsl jg imul aas es arpl push jb pop cmpb idivb cmpsl stos jl aad jnp test fdivrs in pop leave or es inc out add nopl inc pop movsb (bad) sbb jg jg daa daa mov mov pop lret test scas pop inc lock jne cld fistpll lock sbb repz divb jl xlat ds add (bad) sbb scas scas and cmovno sbb push sbb addb mov ds popf ss (bad) mov mov push sbb push std mov pop cli cli scas fidivl xor cld cs xchg out sbb jg popl xlat mov cmp xchg imul xchg iret dec sub out clc sub test dec ret daa mov cli in (bad) lahf jno lods lods push insb lret jo int3 mov lret mov sub movsl mov xchg dec pop jo imul add xchg pop or aam and incl sbb lock (bad) cmpsb aad sub jns fbld imul mov out (bad) jno lcall icebp mov xchg mov adc pop fcomp inc negb sbb sbb push mov fwait je xor push daa mov sub xor mov sub movsl std insb jb jo add outsl lods pusha lods jbe je jb jmp iret xchg push sar pop jecxz adc cmp xadd lods xchg mov push rep movsb mov xchg repnz addr16 sub mov loope adc aam das xor cmp jge test adc push jb mov inc addr16 sbb out adc (bad) loope xchg clc das loope pushf jg xchg rcll cli call sub lret cmp lock xor cmp in add imul psubusw sbb sbb fyl2xp1 pop lret or mov push cmp mov cwtl loope sbb cmp jle outsb lahf gs sti ja je ljmp out pop sbb (bad) mov testb dec das inc xchg push imul (bad) ret add jno xchg add mov daa (bad) jle mov loopne mov aam fldl inc jnp test sub loope xor out cmp add fist mov (bad) aam adc push xor imul arpl sub mov fldt cmc aas add int unpcklps fimul add inc sbb sbb es sub adc jmp adc out xchg pop xchg xchg dec pop jle imul add xchg push loope fist ljmp jae lcall scas adc fisttpll pop int3 pop sub ja daa out or fwait sarb decb jmp push mov incl push pop xor popa imul sub mov push sbb sbb sub jle clc inc ret push daa mov pop in addr16 nop repz sbb or nop push sbb scas cmp xor imul loope fwait decb mov call cmp jle add repz incl aas lret icebp repz mov jg rcrb push icebp out ret js loopne mov loop scas xor int xchg insl outsb cld ret adc test adc lret mov cmpsl clc dec stos cld push mov jge movsl loope mov push inc xchg mov insb in aaa fisubl stos mov xor push fdivs xor jg imul std mov pop or rcll lods cmp loope enter ret std mov pop push test test into cmp pop ret pop or push lods insb incl loope mov sbb dec imul dec lods sbb stos lods pop sub add stos dec fstps repz stc jbe ror push mov pop xlat loop incl (bad) pop xorl iret loop mov or sar ds fiadd push and scas jecxz mov or dec sahf sub (bad) push xchg adc mov xor dec jmp pop sbb adc pushf or sar add arpl sub mov out sbbl fcmovbe movaps sbb rcrb xchg incb fidivrl (bad) ja jp mov mov ja outsb out out lcall stos sub repz mov gs loope fwait mov jge pop (bad) xchg and inc insl pop pop (bad) clc sub or push adc imul ret movsl lods ret jbe fcompl xor or xchg push loopne lret or lahf (bad) cli outsb mov clc push test fucomi mulb pop (bad) mov gs outsb or enter add (bad) xor je mov mov imul fucomip nop fistp inc into jecxz lea xor and lock dec mov cmpsl jl loopne in fldt mov xchg pop fsubrl jge mov xchg in fwait mov flds fstps cmpsl in ljmp lret mov stos mov xor mov lret jmp out movl iret sbb aas push clc pop fimul pop clc inc dec mov mov in inc lret ljmp lahf and stc cmp (bad) jle jmp scas push pop cmp inc or rorb fsts jl sub jmp jge icebp fsub (bad) fist jne or (bad) stos inc loop sahf dec cmp dec xchg outsl or sub bound inc and cltd mov mov push jg sub mov and dec and inc or add out repnz shrl aad mov pop sub (bad) ja into int3 fs sbb xlat pop out (bad) (bad) icebp jg hlt mov stos ret or sbb push pushf (bad) cmp jb (bad) mov rcll ret add pop ss lods in mov mov into dec outsb jne pushw fidivrl in fiaddl mov or and icebp out xchg (bad) dec xchg outsb sbb scas sub sub inc in repz xor iret jle aas mov data16 movsb mov mov gs adc or ds pushf jae dec lahf sub mov cli repz lcall insb jmp loopne jge (bad) push (bad) sbb sub das push pop outsb enter in in inc jno mov hlt ror adc enter xchg cltd minps and sbb jno fsubrp out cmp pop or mov push mov inc sbb xor (bad) and cmp iret pop in mov shl dec sub dec lods pop xchg (bad) sub inc loopne ss jns mov ret push rorb mov adc sbb xor jno push sbbl (bad) (bad) into fnstsw mov xchg xchg sub popf cmp outsl cmpsl leave sahf push sbb lods pop imul loopne inc dec dec jns or hlt xchg jno and and xorl push push loope or cmp xor add xchg adc cmp xor adc pop jnp pop (bad) out cld jnp int3 mov call mov xchg lods jo mov push or aaa icebp cmpb jmp clc test add jp mov js push pop outsb cmpsl rorl lahf mov imul (bad) adc xchg mov inc cli insl call sbb inc fwait inc clc jns cmp mov repz mov cmp sbb jnp mov mov sbb pop pop mov cmp sub in push xchg repnz out xchg cmp (bad) daa icebp lea pop xchg inc sahf fsubrp outsl or dec inc push cltd lret mov and and sti xor dec (bad) fisttp pop mov sub lret lds test aas sub pop jecxz adc loope out ja mov (bad) xor lock movsl movsb js mov fist jno test sub xor and xchg sahf sbb cwtl sbb fisttp cld cmp jmp mov mov dec sbb fwait pop stos pmaxub sbb jg in mov mov push in fwait pop mov fdivrp add cli movsl fimul sbb xrelease inc scas cmp inc loope xor inc ss mov cmp das sbb sbb pushf add mov push or xchg popf in repnz xchg cmp pop sbb enter mov outsb mov sub jnp outsb in sbb in xor inc jg mov clc adc pop sar shrl sbb push icebp inc loope jmp inc xchg or or movsl aad and xor mov pop loope mov dec lahf push xchg xor fsubrp push sub inc js adc jle pusha pushf xchg or cmp icebp push (bad) push adc xchg outsl test lahf arpl les ljmp sbb inc mov mov inc int3 cmp repz pop data16 mov cmpsl call fstl scas lods sahf lahf xlat jae sbb lock jecxz mov xchg push mov lods ds add pop and daa js or ss scas xor clc lock scas mov loop fcom ret idivl in jmp jns jg or sbb popa mov xor mov sub (bad) inc mov and and out in pop icebp pop (bad) pop adc cwtd mov sbb add jo aaa xor xchg mov add jl xchg push xchg (bad) aas or shrl notl pop xor or xchg jge imul jbe sti mov ja imul mov push pop aas mov scas icebp es pop sarb push cld inc lock cli aas mov mov fs cmp cmp sbb adc (bad) dec push dec je daa icebp sub xchg mov incl mov jecxz imul es enter pop jne fcoml inc (bad) repz adc insl lahf mov add ds lahf push jns je jb cmp mov stc xor xchg daa xchg sbb cmp jae,pn mov push mov adc lahf and xchg iret (bad) or or daa leave mov int3 inc clc loopne add jno dec sub out std xchg xlat ficomp mov outsl rcrl fbstp or js ret push daa (bad) icebp insl test ljmp enter push lret and cmpsl std (bad) dec sarb add into cmp ret in cmp pop cmp inc test lret jg fistpll inc push fisub fsub mov xchg pop mov (bad) mov inc pop mov fidivr mov mov outsb (bad) loopne push loop dec sar dec cmpsl outsl test xchg in xlat adc sub cwtl pusha fbstp jne mov imul jns cltd sti inc js sarl dec adc xchg pop inc scas js loope dec lds fs add sbb xor push xor jmp cmp loopne (bad) test leave leave pop cmpsl jne pop mov out cmp xchg insb div cmp adc pop clc aaa pop mov fs movsb xchg stc mov or mov add and ja cmc loop mov mov sti ja inc xlat movsb aam out jne imul and mov and dec fmull jge (bad) lahf or call mov mov push movsl bound dec push dec enter mov ds lcall xchg loope mov loopne add mov dec icebp pand cmp jb or hlt adc je (bad) js inc mov jnp out fnstsw lret mov mov jle je dec pop cmc (bad) lock in (bad) clc fwait (bad) mov popa mov xchg xchg stos pop inc xor (bad) movsb inc shll sete xor out das (bad) fnsave das mov lahf or clc stos inc xlat and sub mov xor add nop rcll dec pop clc lahf jecxz cld adc jle mov out mov dec pop sbb mov outsl addr16 sbb mov fucom xchg jbe sub add push out flds loope mov or incl add xor pop or dec test fsubp sbb sub je mov mov lahf adcl pop into (bad) repnz cmpsl fildl jno sub pop not push lods push xchg inc mov ds addr16 mov fcomip push out mov inc ret dec sbb add pop shr dec scas mov (bad) jne dec or sbb pop sub cmpsb or xlat adc jb push push add dec fcompl inc test addr16 pop mov ret int dec lcall fwait stos pop fadds loopne mov jb push jo add add adc jecxz (bad) out fsts ss sbb lods das and (bad) (bad) adc mov jns dec or lret aad or and jl std pushf incl outsb pop or mov mov clc aaa dec mov test fcompl adc les cmp xor test adc mov jnp incl pop in mov pop iret outsl imul into out test push (bad) cmp (bad) in outsl icebp add (bad) jle mov je jae mov or dec mov adc cwtl xor sub ljmp ss inc push xchg xor pop jo std les dec sub hlt scas ficompl daa aam gs mov add sub xlat push aad push jl insl je movsb das ja ficoml in jns cmp sub cmp push mov add sbb in xadd aas in cmp mov mov push fidivrl mov fbld std cmc les loope fs inc xchg jge stc insl std jle es scas mov ds mov out jne cld daa jle aad pusha aam mov jne stos mov movsb or mov nop pop cmpsl cmp sti ds mov cld adc shll cmp scas lea fstps cmp adc and fadd add and (bad) xlat loop in pop aaa xorl lods hlt jge fnsave outsl mov cmp push push and mov icebp sahf sub xor incl xchg out push clc imul test mov fidivl (bad) pop lcall jb dec sarb lods mov mov pop incl xchg cmc in xchg loopne dec movsl dec rcr in jmp in dec incl roll pop loopne mov lcall mov mov fdivp push xchg dec insl fs dec and (bad) mov dec mov rcr (bad) (bad) rolb and subl mov stos pop mov pop lock inc mov pushf (bad) fldenv rclb ds inc ret incl mov in or jmp out pop lds xlat inc dec shr in scas dec icebp and or sbb rolb jns stc leave adc sti inc xchg xlat lds push mov fwait imul sbb add jle shll das push jmp fildll cmp jne outsl mov jbe loope (bad) idiv lock (bad) cmc mov cld cmp es xlat ficomp mov sbb jl add jle mov sbb pop sbb jle jl icebp aas in in jl sar sbb iret test cli push mov iret mov lret ret or movsb jg push sub dec into imul rclb pop movsb pop clc cmpsb push and fldcw inc loop dec fldenv sbb inc xchg lods xor (bad) incl add lock (bad) incl push adc (bad) stos sbb mov mov loope out add or pop lds fdivl popl push lret in dec in cmpsl mov enter (bad) int3 push repz repnz rclb mov or iret (bad) mov inc mov push imul dec arpl faddl xchg xor pop ss mov push fwait mov fnop jg pop mov cmc iret test add dec insl jne aam xchg add adc and mov div clc arpl pop (bad) clc out push push outsl sub clc in out leave das cmpsb jae sub sbb mov cld out xchg sbb fdivr add xlat mov lock imulb lods jl arpl test pop (bad) push insl mov fs jno push stos pusha test dec loope push xor out lods lahf stos in clc fwait repz cmp adc add incl (bad) jge icebp jae ds clc dec lock mov (bad) fidivl jne xchg mov adc and lret or popl int3 mov mov shrl lds cs jg inc bound jecxz push lock scas sbb add push and push add xor hlt incl or incl add clc xchg rol xor jmp (bad) repnz xor test xchg fstl (bad) shll lds cld xor out out ds imul bound xchg lea mov jo xchg jg lock xor aad pop cs jne mov pushf pushf fidivl ss pop jg outsl aas sbb push sbb mov outsb in fildll cmp fmuls insb mov pop jns mov mov jecxz (bad) add (bad) jg pop jl mov iret xchg in cmp mov dec and fstps inc or cmpb test push rcrb mov mov or icebp xor mov mov out xchg (bad) aam add and jge incl add xlat sub jl (bad) jne pop popa sar inc addr16 testb mov out add adc movsl xor repnz pop lcall push scas mov lret outsb into lret outsb gs cmc aas dec aas addr16 imul iret sbb imul xchg xchg jle out cmp (bad) in int3 dec pop (bad) mov (bad) adc ret scas es insl ljmp mov fwait loop cld xor xchg std jb scas lods cmpl adc xchg inc loopne (bad) negb xor add pop mov out cmp jno pop jecxz shr sub jl jne fcmovnu pop dec out int pop dec jle into jle mov out cmp dec cmp pop lahf aas lock pop movswl pand dec icebp lea loope jge pop mov stos insl js shll or adc dec iret pop repz jne lret (bad) sub hlt incl and into aas jae mov mov xchg xlat out mov lahf loopne jg clc jae aaa lds mov sbb imul ret std mov mov adc adc xor paddb loopne fild cmp (bad) pop xchg fistl pop xchg mov and sub ss insb (bad) mov push rcr push jg aaa pop cs adc movsb or xchg mov xchg sub inc push ss pop lret bound pop jbe pusha clc addr16 adc das lea clc ja lods (bad) je xor fiaddl scas sub add and xchg xor shrl push dec xchg shlb mov pop stc mov addr16 jge push cmp outsb incl or (bad) aaa lcall js cs insl scas lods outsb lods aam lret or or adc fmull (bad) insb incl roll imul ret data16 jnp xlat (bad) mov pop fwait cmp insl xor mov lods lods mov (bad) out ss mov scas pop jg jl mov adc pop mov cmp push pop leave jg ss (bad) jle or sbb pusha push stos dec daa iret xlat hlt jg inc jecxz push ret xor insl adc dec mov mov sbb nop inc rorb call add xchg int (bad) ja fidivr icebp sbb push sub ja shrl xlat out (bad) fstpl fidivr aas add dec loopne or mov sub sti push jnp out aaa mov add inc cmp sti xor clc jmp dec incl or xor (bad) jle pop idiv xchg inc incl inc inc dec das jno add mov adc xchg clc (bad) loopne mov out mov fisttp mov inc jns add repnz in jle es or mov inc clc scas sarb in pop arpl add mov ljmp lods sub outsl movsb nop or adc ljmp mov or or in incl xchg in jae jge adc cmpsb xchg stos mov jmp in loopne lahf mov cmpl incl pop aas arpl test fnstsw loope punpcklwd insl xor adc ffree and adc sahf jg test scas sbb pop aad mov pop (bad) repnz jge jmp pop or int3 popfw in mov popl clc imul (bad) ds adc stos shrl mov push mov jnp jecxz jbe cmp cmpsl xchg jno dec mov out daa sbbl add frstor inc clc repz ds shlb mov pop pop pop shlb in in imul icebp lret jne sub xor dec dec call bound das pop es bnd out cmc jg cmc ds add repnz in popf mov jnp in pop loop mov xor pop jno pop push xlat (bad) ds xchg popa mov fs movsl adc pop pop mov jnp cmpb sti add mov loop xorl mov push idivb mov mov into or repz fidivrl loope mov sbb push lea mov aad gs inc xchg ljmp aas and fdivs rolb xor mov clc ffreep mov cmp xchg fidivl das (bad) out sbb loop sub lret inc xchg xor sub mov cmpl push ss pop dec stos das jp xchg neg dec div sarl jne xor insl out and pop (bad) xor cs stos pop clc jge pop repnz popf and stos jbe (bad) notl inc and hlt fist hlt incl xchg shrl int3 lea fcmovne bound mov add cmp mov add (bad) les in out loopne cs subl mov in lods popf jbe mov mov xchg popa xchg push mov fimul jg jmp pop xor mov (bad) lret out cmp and cmp aad mov ja shr aad mov pop jmp sub pop imul out pop (bad) dec mov mov divb adc pop mov iret jae add fnop mov inc clc cmp not out mov fcmovne (bad) cmpsl pop imul shl inc mov les (bad) sbb jns ret imul stos imul or mov push sub insl (bad) mov sbb repz mov ret or loope adc ss fisubr rcr rcrb cmp fdivr mov cmp repz mov xchg bound add sub jg cmp imul ret push xchg js ret cmp push dec loope lods rcr push cmp and les pop mov or (bad) mov lahf (bad) (bad) jl,pn aam mov scas out int subl mov xchg lret mov jle push jns aam leave and fisttp ds fwait dec shrb lret sub jge sbb jl addr16 out iret mov (bad) xor mov sub jne aad frstor push rol pop inc pop and inc mov xchg pop sub jb xchg jecxz or mov imul out push movsb arpl mov incl or push mov xchg fidivl mov gs mov js jns dec test jp lds int clc out push les sub pop movsl mov cwtl dec xlat push icebp (bad) loop stc inc pusha movsb loope cmp aam jno lahf lock jg (bad) js ret negl loopne lret push mov mov adc aaa mov adc add fwait pop adc cmp lahf adc push cmpsb (bad) rcll clc ja das ret mov jge or outsb imul int3 lret adc cmp adc push or pop push mov lds outsb mov stos aas xchg gs xor pop push xlat jg lock sub loope (bad) out xchg (bad) insl push ljmp adc (bad) jnp in lods movsl pop or inc pop test inc add or inc jge loope push fcomip dec xlat jle lahf sbb sbb popf push loope mov js (bad) gs mov lods addb jecxz mov pop and fidiv mov push cmp test pop dec mov fcomp arpl pushf pushf push push xor scas jle sarb jecxz pop add mov and int call movsl (bad) push xchg iret cltd mov xchg dec sub pushf xchg mov xor push xchg mov scas cmpsl outsl jbe cs mov xchg imul push jmp cmpb jge mov or cmpsb cwtl mov push (bad) pop mov roll xchg and push xor mov (bad) lret scas cmp daa test xchg lock mov pop jmp sbb xor or inc xchg mov in aas sbb jl mov mov imul jp lahf sbb scas loop mov sbb fstpt loop mov idivl hlt (bad) adc loop loop insl out scas scas pop shlb mov push push lea bswap fmuls fidivl add daa sbb aas mov xchg mov leave sub lret cmc cmp jb cmc dec int mov jecxz das pop lock cmp cmpsl out mov mov bswap sbb xor xor lcall jno test lods incl push adc dec inc daa jno add js loopne mov sub sti int lret dec ss push push (bad) xchg add hlt fdivl sbb int out les cli push xchg (bad) repnz or idivb mov jb cmp fbld insl incl adc sub iret pop mov jmp add imul daa in out cmpsl cmp inc arpl sbb lret (bad) cmpsb nop xchg adc sbb mov jae mov imul push leave mov ljmp mov dec sub cmpsb imul sar in (bad) push inc dec insb push jnp sbb ret divl dec lods and shl inc xor out out mov mov pop shll jp push lahf js bnd lock fisubr cmp incl add fstp mov dec or push shrb loopne lods jp mov jecxz (bad) dec mov xchg dec in outsb test nop add mov lods popa jl dec pop mov mov mov mov mov out lods aad jb into adc aaa push inc fmull movsl ja adc lahf adc movsb pop mov xchg mull cmpsb dec push or sbb adc push (bad) lods lea pop lock lea loop pand cli mov jbe outsl cmp sbb out jb push pusha out (bad) fcomps sub and lods arpl sub movsl addr16 jle movsl mov lret rcll test jb xorl out movsl dec aaa lahf adc fwait outsl outsb mov addr16 sbb jle dec fimull and in sbb cmp addr16 jne xor movsl addr16 fnstenv iret xchg xor aaa add sti mov bnd in test (bad) dec xlat inc mov int3 mov xlat ret loope les inc (bad) cli insl std les lcall mov inc adc mov fdivs out shl pop lcall daa icebp push lahf jnp dec arpl ljmp shl mov add js loop xchg loop or mov mov arpl or lds pop (bad) mov jns dec push jge jecxz test (bad) mov jno push sub rcrb testl xor push xchg dec rclb imul jecxz scas pop iret push aam jnp pop cld ss scas mov xchg xchg das out mov test jno and xchg iret int3 lret fadds lods jl jecxz sbb ret sti lret incl test mov jmp pushf xlat nop lds sbb mov repz mov and cmp scas test and inc loope xchg es xchg mov lods xchg fisttpll inc mov push ffree add scas (bad) jmp ja hlt or jmp sub adc cwtl fmull dec adc inc addr16 mov js mov jbe fmulp pop popf mov jl dec sub in mov (bad) cmp inc clc mov cld jle and dec mov jae fidivl outsb cmpsl bound int3 sbb (bad) inc mov into pop in pushf xlat mov ds icebp popf xchg pushf push fcompl js inc aam out cwtl ret push inc cmp fwait lock leave incl push pop mov (bad) fbstp lret dec lock sti xor (bad) das add call dec inc pop jnp lods lea (bad) mov push adc and cmpsl arpl stc mov jg addr16 and in lret xorl sub xor lahf data16 incl (bad) jbe aad out bound in cmp incl xor mov pop divb frstor int imulb js loop jnp mov test push push pop fs push imul add inc mov movsb clc fnclex ss jmp mov iret shll xchg das es ja and push (bad) cwtl inc inc xchg sbb lret pop push xlat jne pop rcrl icebp inc xchg insl cmpsl imul pop les lea adc pop cmp leave mov add fwait scas clc pop mov scas lahf jge movsl fcmovu jmp fisubrl cmpsb xchg insl loop fs xchg dec xchg or rcrl push mov xchg hlt outsl xchg stc stos and (bad) out mov mov insb out cmovno incl ret cmp lahf jns fcompl inc ja addr16 inc xor sub jae leave and xchg imul push mov push push sbb pop shr pusha mov (bad) cmpsl or out sub xchg fstpl mov sub (bad) hlt lea loop jle xor mov inc imul sub out adc js scas dec (bad) cld push loopne add jl sar sbb adc cs mov pop mov mov xchg jb mov mov xchg (bad) and push xchg cmp and mov sti idiv mov int3 and add sti jle mov xchg rorb iret insl addr16 and mov ljmp mov test sbb mov sbb pushf cli pop rcr or fcomps ds (bad) outsb cs test js mov bound pushf add out push ret mov jecxz sbb loopne fidivrl inc (bad) cmc mov mov fcmovne popa mov dec mov in out mov insl add loopne stc cs mov add adc and inc movsl ret jne or addr16 xchg rorb xchg mov and or (bad) rol mov and lret pop jl mov aam mov mov fidivr gs mov inc and in xchg cmp stc mov incl inc rol mov add inc and push sbb and xchg loop mov mov xorl mov enter imul arpl in mov sub add ret lahf sbb sub or arpl jnp pop or and arpl pop fildll mov mov fs fsubrl jg sub js negl (bad) lret mov inc cltd add xchg pop or or fnstsw les scas lcall jns and das xchg leave fwait popa fstpl popf cmp dec fistpll sub idiv std xchg jle cld sub mov pop icebp dec scas mov sbb inc mov xchg xchg mov jae cmpsl sti mov (bad) out pushf scas jecxz incl ret pop adc mov clc loopne mov xchg lods (bad) dec dec int mov enter test inc movsb add cmpsl jecxz sbb (bad) cmp cmp sahf and ds mov fdivr lock xchg cmp iret mov pop fnsave dec sbbb pop in xchg lock cmpl cmp loop inc dec sbb xchg lahf sti fisttpll pop lcall xor cs mov pop cmp and or int das xchg out bnd es mov mov pop dec icebp ljmp mov (bad) fidivl xlat mov jno clc jle movb shll and inc adc (bad) aaa jns inc and mov jo jge loopne xchg mov push imul mov movsb ljmp sahf push xchg pop bound leave xchg sar mov sbb inc clc gs or clc push les mov jb mov lcall jns xchg xchg cmp add push fidivrl mov sbb adc sti cmp mov out pop pop pop push adc das and jns jne and mov add arpl ret mov int3 inc pop divl fnsave iret pop pop pushf push test xor jl mov sbb lahf sbb fistp jle js dec shr cld aas lods jmp fsubrp fcomip in notb stc cltd lea in enter add mov les adc ja mov cli das fldenv popf push out (bad) aad out push addr16 or lock jle icebp inc popf scas in cmp mov loope add das dec shl lcall pop jnp pop and jecxz sbb cmp adc add jecxz (bad) xchg mov lahf (bad) fimull shlb xlat cmc scas sub push loopne jnp je ss xchg iret add into imul leave jg mov pop cmpsl aad insl leave ljmp cmp lea arpl add lsl jle incl shll fisttpl dec or cs arpl lret je sbb mov lret or imul dec sbb mov (bad) inc cld jmp xchg push and pushf rcrl sbb inc push incl xlat int pop cmp xchg add and sub movsb sbb sbb cmc add or dec pop ljmp pushf bound and cmpsb mov xlat in pop xor xchg out push xchg in add push jns fnclex movsb pop adc imul loop (bad) iret ss xchg mov and and arpl mov mov dec pop sbb jecxz sbb pop imul aaa dec xchg lods insb (bad) mov push pop mov sti mov std in movsb orb icebp push xchg (bad) mov sub push lods xchg xor sti sbb test notb adc push icebp daa test xor scas or mov pop inc movsl add sub dec mov jg faddl mov leave sbb out mov fnstenv mov out stos jne (bad) pop lock test jae aas (bad) sub lret ljmp mov add jnp arpl xchg push pop loop in scas test jns incl clc and jl (bad) mov add ret push clc lds (bad) xor loope fnstcw divl lds (bad) movsb ret or insl or addr16 adc decb jecxz mov xor js mov stc mov mov push dec (bad) mov pop (bad) inc enter mov clc pop jge in sbb cmc pop cmp daa ret jp sahf mov lcall jo shrb repz fsubrl out pop movq mov xchg hlt push sub mov xchg cld adc idivb push std nop jl jecxz dec loop mov test movsb jmp outsl idivb pusha mov push cmp inc cld stos clc cltd jecxz or lret pop pop push rcrb dec mov in jae daa into mov fs push jno and (bad) or cli (bad) fnstcw inc je adc add mov cmp icebp cltd cs and mov mov jb lret adc stos push loop mov out mov daa ret cmp jmp dec incl sub push jae jae iret out in push mov push mov fiadd repz mov hlt out testb rorl lock call sub mov mov mov mov aaa (bad) dec xchg lock mov lret sub test aas pop jnp dec dec popf inc out in das sti pop jmp push mov das mov mov out lods insl xchg push (bad) lods inc adc push adc mov add xor or lcall fwait pop adc add xchg adc xchg jecxz push push movsb xchg xchg pop push mov inc or mov add scas push (bad) ret aam mov xlat decb lea sub jnp ja mov int3 std xbegin ret les pop mov dec push inc jno and mov mov pushf sbb pop daa push sahf mov movsb jmp lock loop xchg xchg mov cmp or push js pop out adc push or in (bad) icebp jb jecxz in pop lock add jno pop push pop shr cmc gs test inc sbb bound lret xchg xchg into js xor jg inc ds (bad) xlat ds push (bad) ja mov clc jg sbb mov pop (bad) test sub add cmp sbb sbb jl push mov pop incl xchg ljmp xor jne fnsave mov cmpsb (bad) (bad) loopne (bad) ds push xlat push xchg insl aad mulb xor inc xchg dec jne jecxz (bad) ss repnz xor xchg std mov lock iret rolb dec aam cmp imul mov or mov inc add mov inc mov and push pop lcall loopne in (bad) icebp pop (bad) fidivr std mov xchg movsb clc dec repnz out and pop xor and (bad) add push add dec clc sub leave loope add mov clc inc jl imul clc data16 lock cmp stos push cwtl jno cmp adc repz jmp movsl adc std cmp repnz into sbb jp sbb lods xchg pop mov xchg lahf mov inc mov xor sub out sub sbb test out (bad) jno ret add inc cmp (bad) xchg movsl loope sbb mov in cmovg sbb lds in and inc or pusha push (bad) daa add dec ds lock divb clc mov pop sar add and loope mov (bad) adc cmp sub mov ret pop mov inc mov jl jns xor jle lahf push aas fs fsubrs jno or and mov pop pop push mov and sbb lcall int3 sbb mov mov push xchg and dec (bad) fwait lods fisttp fstps sub mov mov mov stc or dec pop mov in lods jge cmp outsl adc jp mov in fnstenv mov sbb pushf jns inc loope xor xchg rcrb incl or pop imul jecxz mov jns inc aad mov mov pusha jno xchg jne pop aas jae out inc mov outsl inc add jecxz fistp loope (bad) stc out cmc dec sbb fisubr aam std xchg cmpsb mov aaa lock push and sbb sarb xchg pop lock push mov sbb push mov dec sarb pop sub movsb imul and sbb sub jo mov cmp out xchg sub mov (bad) arpl xor cmp xchg xchg jle jg jns mov sub imul jae cs inc jb xchg lods jae add add push fsub repz fisttp (bad) xor xor imulb lahf fcmove (bad) cmp imul cmp mov sarb movsl lock pop clc insl loopne psubusw clc xchg cli mov (bad) aam nop pop dec and int3 nop in incl and inc scas pop sbbl xchg loop dec jne or (bad) fistl inc inc loopne ss mov add xchg mov and xor lds xchg cmp dec (bad) aam sub mov sub in stc popf xlat in dec icebp scas les aas insl lret iret sbb ret pop mov stos fisttp sbb xlat sbb jbe ret mov fs dec clc sub cmpl push test imul js and or and rolb cmpl es cmp fistp jmp mulb insl scas inc lods xor outsl in jb pop cmp cmp out incl insl push jno test repnz in lret inc lea ret lods leave adc jbe xor sub push js jb aaa call in scas lcall imul jecxz mov ret cmpsl icebp mov clc sub mov xor movsl cwtl out add dec cwtl push sbb sub mov xor inc clc cmp clc jecxz int imul and cs sub ds pop pop pop movsb adc cld or jne dec push clc ja jle mov cmc stos jnp xchg repnz lea adc xorb jbe pop cmp pop icebp (bad) (bad) aas clc inc hlt fwait mov gs pop fistl pop (bad) cs in and bound pop or cmp fisubl cmp push mov cmp cmpsl aad mov pop xor fnsave sahf push sti cmp mov or repnz icebp lods out mov (bad) push mov add dec loopne lcall fisub shlb xchg lock ret fidivr and pop sbb add jl clc pop loope cmp inc mov cmp inc fwait and mov add add inc mov dec ja sbb mov mov les inc arpl syscall arpl xlat mov jb fnstenv pop cld cmovbe imul sahf dec test pop pop lock pushf pop iret pop fldenv ret insl jbe push inc jo mov xchg mov mov clc stos icebp dec loope mov inc lock cmpsb insb jne dec inc pop fs test mov in leave add shlb scas (bad) and xchg or pop xchg (bad) mov insb leave pusha (bad) (bad) mov jle inc cld or scas in cmp or aaa ror test cmp in insl mov sbb jl xchg sbb cwtl dec das push jecxz popf incl stos xchg xchg mov mov push mov mov js xor lret jb rol inc out sub and orb (bad) mov incl mov mov test cmp mov mov gs jle sub push mov xor enter mov jl shr mov (bad) scas inc cs dec and mov or mov dec out cli scas rcl sarl push mov fldenv insl cs in insl hlt std aaa sub and dec sti mov xor inc fabs test shll cmpsl insl cmp mov iret push icebp (bad) daa (bad) jne cmp mov sub clc scas out loopne stos out sub sbb and push push test adc jecxz hlt xchg push sbb jnp dec push mov data16 gs push fchs xor pop sbb inc mov push dec out jne cmp js adc jmp mov and clc jne jmp paddb pop roll cltd jle sub xchg insl xchg aaa jns fstpt insl mov and mov (bad) aad fnstcw and push fnstcw sahf sbb out ret fist clc jbe cmp pop sbb imul mov jbe pushf sbb inc mov cli mov jae jle clc mov jg imul fidivl in mov movsb insl inc jne cmp gs cmovbe inc or add negb sahf cmp cs iret addr16 dec ss sub push mov insb movsb fs and cmp jecxz xchg sar mov ljmp data16 and xchg rclb mov cmovg scas insb mov mov push out cmc addr16 cmp mov rcr (bad) test (bad) je mov pop push insl out repnz sti sbbl dec adc stos dec into sub outsl inc (bad) je adc or test ds mov push popf inc pusha dec dec por mov (bad) mov sti sub testb pushf adc inc adc xchg xchg dec push mov mov xor jl lods faddl sbb jbe (bad) sbb and fildl mov pop cli jne mov jle into pop jnp push mov stc ja jb mov sbb sub jecxz jmp jnp mov cld cmp aam xor addr16 cmp adc inc mov inc aas addr16 lods (bad) outsl mov lcall ret adc mov pop mov je negb fdivp popa add repnz into dec aaa bound jo cmp mov aad jnp ja in gs les scas jge pop dec movsb pop inc lods in sub cltd loope mov in adc jg stos dec dec cs push outsb xor xchg mov addr16 jp xchg pop (bad) sarl sub xchg mov addr16 inc movsl jmp cmp mov cmpsl pop jmp xor notl in mov and shl cmp sbb loop cmp aas ret lock xchg pop pop inc mov cli es hlt les rol cmp inc mov jl inc nop mov sahf mov aad jle sahf sbb lods add scas outsl lods mov dec and sbb mov fisttpll xor out scas std clc jmp cmpsl repz ja,pn test and stos incl andl sub inc mov clc xor xor jg inc insl addr16 inc repnz dec cmp ja and pop fwait cmp lods jns xchg cmp mov fwait push scas or inc sbb stc dec sbb sub inc mov sbb cmp mov pop jp mov (bad) push or push notl add xor sbb (bad) cmp dec test adc call sysexit lret pop mov mov mov bound mov popa addl sbb call fwait hlt cmpsb and jg out mov ret add in dec icebp sbb sub shll arpl pop or add jp add jecxz lods lock push lock mov test fndisi(8087 and js notl xchg jo sbb rclb lcall ficom (bad) xor lcall mov mov jl repz xchg and xchg cmp cmp in add jle aas mov cs jl cmpsb ljmp dec arpl (bad) stos ljmp test nop dec xor mov xor divb add mov sti cmp ljmp jg sub and int fadd jnp or add iret add hlt scas mov or jg aaa lea loop test outsl adc inc shrl mov test fisttpll mov fidivl push repnz cli out sbb lea inc std lahf mov es lcall lds (bad) xlat xor outsb rol cmp push pushf js lds dec or (bad) neg in subb lods mov mov (bad) int3 or loop cmpsb push cmpsb xor cmpsl sub and lods scas fwait mov in cld xor xor hlt xor and xchg cmpsl movsb pop fidivr jbe mov mov into (bad) mov xor add lret mov add mov enter cmp mul pushf sahf imul xchg cli out push xorl iret in inc sbb out add loope xor scas inc les mov mov cmc leave in cmp pop cmp adc ja ja sarb sti jae inc xchg ss pop sahf inc cwtl jecxz repz dec lock mov ljmp add mov lea (bad) dec push xor cmpsl ds loope add (bad) and pop jmp cmp xchg mov (bad) outsb insl ja adcb (bad) sbb (bad) jle cmp imul sub cmpsl mov lahf fnstenv mov push and sysexit adc dec data16 fcoml sub sbb adc imul mov (bad) loope stos leave jne adc pop xchg shrb lds mov movsb mov (bad) (bad) xor jae (bad) lods test push push imul jle fisttp stos jmp jp pop xchg in jo dec jg les mov lea xchg jae es enterw jo push inc push push out popa and cmp ds sbb xchg lcall call push in (bad) (bad) pop mov loope in incl je out out xchg (bad) incl clc dec jle js push aad or mov pushf fimull xor xchg int in fs faddl inc and out mov ss bound inc loope or int mov int (bad) pop sbb jns cmp add cmp jae sbb movsl mov cmc pop jle lahf sub dec push jae clc cmp (bad) fnstenv imul test (bad) fstps or mov push push pop push or adc adc lcall push mov or movsb data16 test data16 jmp es lahf sbb mov pop scas push outsb cmpsl adc adc out pop and out mov xor lds sbb imul subl and and xchg ficomp stc inc and adc pop rcll out jnp mov mov in aaa icebp lods loopne cmpb das adc jns ljmp outsl and jne mov pop nop roll push out fld push icebp mov iret add loopw xchg pop mov xor loop cmc sub jb add js pop in adc in clc incl (bad) or icebp mov incl add pop call outsl (bad) leave jl cltd rcr sahf inc ljmp aas imul inc sub push loope sti fcomps repz fcmovnbe xchg jne imul insb push cmpsl dec xor pop jne (bad) sub dec xchg hlt pop fwait sbb adc mov inc incl ret clc sbb rcll jge stc push lods int3 jae out outsl inc inc fsubrl and dec sahf pop inc icebp pop mov push jl sar push loope call jecxz lret sub xchg inc add sbb mov push cmpsb mov lock ret out adc popf outsl (bad) lret jae test fstp mov shrb inc and sbb ljmp out jcxz adc fldenv sub mov fmul xor pop out lret jno loopne mov inc sbb lods arpl addr16 jmp out and sub mov jg sti xor fisttp js testb (bad) lcall bound test adc xchg je out xor or (bad) push jne xchg xor pusha (bad) mov mov in mov clc leave test and mov popf daa pop xchg sbb sbb dec xor repnz and push inc jno inc xchg loop mov arpl scas lahf inc mov jp dec or cmp int3 xchg xchg adc mov mov push mov xor or aas push mov xor xchg pop push (bad) inc bound (bad) ret mov pop push and scas pop push test imul jns,pn fsubrl mov lret ja push fnstcw jge sbb dec icebp mov aaa in (bad) clc inc (bad) jo jle mov andl mov addr16 dec jl jl inc jb daa xor dec (bad) rcr sbb mov (bad) dec mov shrl pop in cmc mov mov mov mov jno sbb jle push paddw fldcw (bad) lahf jge fs pop xchg mov loop sahf xor (bad) (bad) sub fs fnstsw loopne xlat iret pop sbb add adc mov pop aam mov jbe lcall mov and pop int3 or sbb and scas mov aas adc xchg pop bound pop icebp fstps in xchg mov pop fwait test mov out loopne jne stc jno aas pop aam sub out cwtl mov xor sub jae push fst fstps lea mov adc push sti dec std lcall cmp and jae pop dec push xchg (bad) xor xchg loop inc nop frstor sbb pushf incl jns cmp lahf dec ficoml lea js push mov shl mov sub stc daa mov loope scas and fwait xchg and aas lret pushf jbe sbb in jmp mov test iret (bad) incb arpl clc shrb fdivr jl ror sbb sbb cmp adc dec aam mov mov adc dec arpl enter mov imul jb test add (bad) rcrb or or xor ds stos (bad) (bad) mov lcall lds mov pop mov xorl mov cmp ret ror push mov ja xorps in aad lcall jg pop das add (bad) or sti ds jo mov pop sub dec push inc dec mov jne or add icebp shrl pop mov mov das inc std sahf lret les inc daa cmp sbb add incl (bad) xchg jae jle pop adc clc imul (bad) cmc sbb aam ljmp or fnstenv mov jg xor push mov add sbb push adc xlat mov insb ss cli ficom xor xchg mov stos mov in add test enter inc movsb mov lds incl add lods shl adc out and inc push mov mov icebp dec testb pop pop lcall mov and fs (bad) out xchg push jae xor fwait inc std mov gs mov mov and push imul jb (bad) dec cmp out cmp mov in das pop std mov sbb loop pop hlt jnp jecxz and dec mov lds into sub jnp sbb mov fs fsubr loope lea adc imul rol neg and push push push fs xchg mov das adc cwtl xor test xor push fisubrl (bad) idivl push nopl sub add mov ret mov jns pop inc in lds push add add leave mov jge loop push imul and or stos int3 imulb fs and fcoml in sbb clc outsl push test clc inc loop jp mov jmp jge mov mov ret jae cmp mov lret daa xor add sub in xor cmpsl loope fwait lock lds fsubrs dec xchg (bad) adc mov out jne jmp xchg dec ret jbe jae or test scas inc add push pop aas rcrl popa cwtl gs ror aas xor hlt sar mov arpl or sti jae push std popf incl loopne ficompl clc stos movsb jmp pop inc mov pop lcall mov aas mov and aas lock das adc pop (bad) pop xor incl arpl or imul mov imul fcmove mov pushf inc repnz pusha in icebp push xchg cmp fwait mov mov or sub dec sub jno and jo add out xchg cmc xadd and mov dec mov add (bad) jns jge cmp sub and shr es cmp scas cli cwtl pop push push jb push push jle daa jne scas cmc mov lret popa mov aad scas mov cmp and sahf dec jg dec arpl sbb sbb (bad) rorb push or pusha mov jmp repz lahf jecxz test test loope or ljmp and scas testl cmpb dec inc incl lock jnp lret pop add ds loop lds xchg cmp xchg rol jecxz je (bad) stos (bad) xchg nop pop and pop mov (bad) cld adc jecxz in test push imul mov clc push dec push addr16 xchg and and es pop mov sub sub and jnp fcmove out in xchg lret in jmp adc push rcr mov (bad) push xchg mov in dec mov push xor mov hlt psubusb ret (bad) adc mov and mov enter cmpsb cltd sbb sbb sbb enter jecxz in mov in mov cmp inc push mov fildll xchg inc test js movsl in dec out and imul dec xor imulb clc fnop repz aam or mov inc xchg gs clc adcl in mov int3 inc mov dec or sub inc inc clc xchg loope decb mov sbb arpl lods outsl test sub and and dec adc call xchg cmp cmpsl mov mov shrl imul jge sbb cmpsl sub je pop mov fwait divb clc pop loop sbb pop mov push dec aam psadbw pop shrb lahf and xor enter xchg push testb js pop mov xchg mov imul mov div (bad) lret xor and xor cs push mov icebp sbb add mov and mov push or sbb cmpb or cmpsb mov popf push inc clc (bad) sti jp incl mov test push lods in out cs inc mov add push jns and and add inc arpl fcmove mov mov pop mov or daa scas stc mov xchg sbb inc std popf cld insl jg sbb adc ret push mov pop mov repnz mov repz divl repz cmpsb cmp pop sub test lock in pusha mov cmp es pop mov mov or das aaa aas and js xchg add aas outsb sub mov push pop sbb fs sbb arpl repnz mov and outsb repz mov cld inc cltd mov iret les push popf mov pop push loop xor arpl movl xor mov scas push dec loop in ljmp pop jge sti mov (bad) int test push cmp (bad) incl pop mov mov lock jle push mov mov (bad) mov xor push mov test mov mov int sub pop ret cs data16 push ljmp pop cmp incl adc fistp and insb movsb xchg lds push outsb mov mov out fwait lret lret sbb shrb lds loopne jg cld or arpl test jle loopne push push push lock mov cmp cmp gs mov push pop outsb pop adc dec lock les fcmove imul jmp push (bad) lret sub sub jecxz,pt push push mov sbb cmp mov das ja jg mov mov fcmovnu divb adc push (bad) sbb sbb mov imul mov fcoml les ss push xorl (bad) push fwait lock loop sar or mov jmp ret sbb cld andb sub mov cmp and loope fisub mov les pop js (bad) incl adc aas sbb in outsb cs in out sbb and fnstenv or or jl loopne sbb pop mov dec mov jbe popa retw push cmp repnz icebp cwtl cmp inc fmuls flds push mov movsb lods hlt jmp mov repnz imulb jp incl loope jnp pop mov lock scas dec jns loop je push in sbb fdivrl pop mov arpl push xchg repnz push gs xchg aas sub sbb lock or sbb cs outsl sbb push aam int (bad) sti mov fst stos loopne sbb pop xor pop call add stos dec clc xchg insl inc arpl sub mov mov and repnz (bad) mov xlat (bad) mov cmp ror repnz sub mov inc dec repz adc cltd xor out push xor push lods inc jmp xlat lock jbe xor xchg xor mov cli (bad) mov adc les in hlt scas test pop (bad) lea das xchg mov sub int push inc sti aam fisubrl das dec (bad) hlt pop inc loopne mov in mov movsl shll (bad) les push leave (bad) sbb sub push ss or jmp push aaa xlat xor (bad) xchg mov sub xchg xlat xor and or and pusha xchg out bound mov ret popa int ret push fisub mov (bad) ficomp xlat sub loope iret mov dec sbb add dec xor push dec fs mov imul clc push ds out mov cmpsb xchg mov and sahf cmp lock push fsubr sbb push mov jl push sub mov mov and ja pop nop repz (bad) fisttpll mov cmc test in push and add insl sbb sub add add (bad) sub dec clc push cmp mov loopne jbe pop mov mov es push xor pop sub cmp mov jg ljmp pop jg jecxz mov mov into mov push and repnz jno lea push ds aad jnp pop jnp cld int push xchg movsb lcall pop pop iret and iret jge fwait jnp scas test inc and sub in mov test mov mov cmc jg sti lds ss push jg jb insl aas pop test sbb jecxz adc xchg enter lcall (bad) cmp jecxz rep mov nop stos cld mov int3 inc add or cld daa movsb jle cli mov dec arpl icebp xchg js std (bad) inc xchg scas adc pop (bad) jo iret mov cmpsl cmpsl stos fucomi sub aam mov mov cmc pop in jb xor push fucom popa sbb popf xchg mov jo (bad) sbb mov pop adc inc mov mov (bad) push xor pusha cld ss xchg pop mov cmp push mov dec idivb sub fwait int3 sub xchg inc daa dec sub and mov lahf (bad) in imul gs out stos clc outsl jg pop repz out sbb mov test pop adcl js inc lret shrl sbb cs loope (bad) cld dec pop shrb outsb jne and insl mov in add js and pop aaa ds fwait (bad) lods movsl adc and stos stos ja in sbb pushf sahf xor jne imul pop sbb sbb insl push push dec cmp in dec cmp jno fadds add mov push mov cmc jmp addr16 lcall insl clc mov push inc test std xchg jnp test xor xchg xchg stc leave out arpl pushf pusha jecxz icebp stos add cmp inc inc ret rcrl sahf cli xchg mov nop mov cmp gs cltd mov mov lods or loop mov cld jmp sub lods or xlat sbb jp rorb mov imul aas jno,pn fscale jle mov outsb mov rcrb xchg or push pop fdivr jecxz pushf mov arpl movsl fisubr mov imul xchg jo dec outsl mov lock mov iret pop sti outsl fstpt xlat mov fcompl pop mov loopne outsb dec adc push popf cmp fsubp inc sarb pop mov sbb mov gs xchg icebp enter inc mov and sub mov mov imul mov mov pushf push popf stos (bad) adc xor fimull pop ret mov push dec mov in pop loop push mov das insl in repnz xchg ret pushf lock cmp sar or (bad) notl push mov les daa mov sahf adc xchg sbb ficompl ficomp jb stos adc or ret addr16 xor sbb adc clc stos ret insl xor lea mov rclb cmp add jp mov stos jns aas xchg int3 jecxz xchg sti cld lea sahf ficomp sub in cli xchg lea mov lahf add (bad) adc repnz imul dec scas jl (bad) jecxz xchg insl and mov dec xchg cmp pop nop (bad) and inc mov jo test cmp inc mov lds pop pop (bad) xor jecxz lock clc enter add cmp push mov sub dec imul dec insb ret adc jns add out fild mov push cli lods outsl cmpsl cld aaa jae inc xor fcomip mov loope adc notb es lock lds nop ljmp dec adc loop inc cmp sub dec mov leave pop lods addr16 imul add int push aam lret lea jb stos rdmsr sub jo idiv (bad) lock sahf cmp imul orl gs es loope repnz cmp sbb fcoms fdivr loop incl ret aaa xchg je sbb mov cmp sbb hlt loopne pop jae iret sub pushf xchg xchg cmpsl pop repz jns or mov xchg mov pop loopne xchg lock lds sarb sub pop fsubl add or sbb cmpsl and aad insl xchg pop mov pop test mov cmp sbb pop jae ret scas cmp push mov jg or mov mov mov sbb negl mov (bad) jge (bad) mov add dec mov stos test sub add fnstsw mov mov ds outsl pop incl push adc inc fsubr jg out mov loopne xor inc cmpsb faddl addr16 lret test sbb loope push sbb sbb and mov aas pop js pop mov inc push mov (bad) fsts jnp sub repnz rcrb sbb mov shlb pop ss out sbb inc and jle stc xchg jb sbb mov mov pop das lock mov jns cmp fldt sub jl adc dec sub stc insl std pop cwtl jnp jmp fcomps pop cmp xor dec lods addr16 out and cmp fist scas push imul clc addr16 (bad) je adc imul xor int addl xchg fcmovnbe jae aaa fcompl xor pop cld inc sbbl pop fstpl and dec or (bad) pop and jb pop std inc out imul jecxz inc xlat pop icebp inc xchg inc arpl aad mov sub mov adc mov cmp insb aas sub lahf hlt out imul cld popl jnp dec add (bad) cltd imul and inc outsl mov xor mov lods roll push iret add in jp andl (bad) xor (bad) jecxz pushf xor push cmp push pop icebp lahf test out xchg rep push repnz popa bound or cmpb daa fnop cmpsl (bad) xchg push sub mov and es jecxz inc add push fcmovu outsl out std sbb dec mov (bad) into lret push pop lods hlt inc test outsb cmp in jb subb pushf lock movsl icebp mov daa ret mov pop fadd loope dec cmp pop sbb inc xchg jns jns sbb repnz add in jno outsl mov jmp mov dec aam lods in stc ss sbbl cmp out or cmp fistl xor inc nop add and scas cwtl push negb mov lahf sub lock mov jl (bad) jne adc xchg not dec mov sbb sbb ja and or xchg push sbb pop and xor pop clc add mov jmp ret jge push mov dec cs jle movsl mov xor sbb cmp ss ja xor mov adc imul mov loope fnstenv (bad) cld aas lods jmp push mov imul sti movb xor add push ret aad and pop lods cmpsl aaa fisubr shrl jg mov sub int fist movsl mov mov out (bad) nop mov push ret add push (bad) pushf arpl sbb hlt mov addr16 js (bad) dec (bad) scas lcall rolb pusha lods mov pop add sub push mov out jecxz pop lds fcmovnu movsl movsl fcmovne insl jno je mov inc and fs add sub icebp dec mov push sbb ret in add in ret jbe inc xchg xorb xchg push jae xor cmp movsl js fsubp jne pop loopne movsl lock incb icebp iret xorl xchg loopne das cs ret pop lret inc je dec xchg mov cmp insl aas loopne jg inc lock mov pop sbb mov iret or lcall outsl addr16 mov pop adc pushf fs pop (bad) aaa idivb mov mov mov add mov out daa ja fadds icebp mov jno loope mov xchg aas adc xchg in mov leave jae aam pop div (bad) lret pusha cmc fisttpl mov jns cli incl shr rol shlb mov stos jecxz fcom jecxz adc jge (bad) push clc ret int3 sti dec in (bad) mov cmpsb push movsb test int3 push xchg out mov xchg jmp xchg mov cs jg jne fsincos mulb add cmp out mov sbb sub out xor scas xchg and add outsb inc sbb sub fcomps xor addr16 jle pushf call and mov cld lods mov mov (bad) je or fmul jne jns rorl xor addr16 inc or fisub ret jmp add icebp xor push lcall dec (bad) cmpsb sub and in or ret pop push xchg test or inc and inc sub jae dec add or pop jl lock das loop ss mov mov call mov cmp outsb sbb or je add jle (bad) fidivrl pop cmp clc mov sub outsb (bad) popf lret dec mov test sahf cmc fmulp incl add out test ret sbb imul cmp mov mov sub and pop movsl mov sub push cltd fsubrs (bad) push dec jno outsb scas mov mov out shrl cld cmp mov orl stc xchg rorl jne adc je (bad) loop enter sub mov push aad test in pop jecxz fldpi lds mov lds mov rcr scas ficoml push fdivrl (bad) add dec repz adc add dec (bad) xor js lods movsl clc or nop fisubrl push icebp leave jno xchg imul (bad) xor push lods movsb shlb xchg mov movsl lods cmpsl ret int3 stc out add pop jmp mov movsl in mov xlat pop outsb dec cltd (bad) xor sahf inc cmp scas (bad) lock fcompp ljmp mov in cmp mov adc mov data16 addr16 (bad) mov test sarl (bad) adc popf outsl push pop xchg in dec das add push movsl jo (bad) mov jg scas clc sub (bad) cld adc lahf adc shrl out lcall or stos aaa cltd xor clc push lods aaa add movsb pop or xlat test xor jns pop stc and ret out mov cmpsb out loope add std stos jl icebp add loope lea incl or lods (bad) mov sahf or test sub sbb stc popa pushf je je push jg psubb (bad) in fwait jg jl std lods je add ljmp ja outsl and test pop (bad) jecxz enter iret pop sbb jle clc int scas loop xchg pop adc js,pn push mov ljmp mov or add push dec imul mov es add lods lret and fwait xchg clc cltd xor ljmp jne dec imul outsb sti mov pop jle cmp outsl lods movsl repz push ljmp sub pop fsts in add sub not leave insl in movsl lods jmp sbb aas in in lret mov rolb xchg andb cltd mov divb test xchg std pushf push notl dec daa test mov inc jl inc lea mov fdiv cmp xor aas xchg fsubrs scas push mov push and ror inc or (bad) jecxz movl jg icebp push mov test cli aam imul jns aaa nop push les insb pusha test add jecxz ret (bad) (bad) cmp jp not hlt cmp loope push mov std (bad) mov pop out sbb (bad) mov jl (bad) je scas jae pop mov cmp xchg lds or fistp iret pop call inc stos leave stos faddp das pop xlat in xor sbb in insl fcomps addr16 pushf push popf cld dec icebp xor dec mov xchg aas sub (bad) sub (bad) les sbb jo repz movb shrb cmc push repz into and daa outsl and lods sbb dec ret sbb mov pop lcall js ret into mov pop int outsl push xchg test ss ljmp sbb (bad) sbb mov (bad) dec (bad) loop pushf ds hlt cli outsb subl sbb in lods mov fild mov push jb ret into imul insl inc pop (bad) jne mov mov cs nop inc mov in pushf xor cmp jmp dec dec push pop clc aas scas jl shr cmc test lret div adc pop mov (bad) data16 mov inc sub cmp (bad) imul scas idivl and out xchg lret cld lods jp pop adc hlt scas test loop std pop ss in sbb dec mov xchg bound outsb add (bad) sbb dec mov pop incl xchg mov jnp pop ds dec rclb (bad) imul stc inc sbb jnp add and jg incl mov or mov cld sub ret jno jp int3 cwtl imul mov orl stos imul jg (bad) sbb mov push movsl mov xor cmp test shl out and mov (bad) int pop fild xchg jmp lods inc (bad) push stos cmpsl mov cmpsl in mov lahf adc fwait loopne ffreep sysret aaa xchg or and je sub inc jae push stc dec and or push fs loopne lcall jne pop (bad) (bad) lock test (bad) fidiv shrl mov pop (bad) sbb push xor mov pop loope push jp push aad pop loop stos jecxz xor js shr mov add pop in fsubs (bad) or fistpl mov and out sti inc clc shl pushf xlat pop adc scas fdiv int push fcom ss mov xor (bad) out mov nop lds movsl sub mov or pop (bad) cmp cli sahf mov cmp lea orl popa mov pop mov sbb xchg xor mov cmp add gs dec notb aad jge (bad) ja cmpsb movsl test data16 fild adc mov push cltd (bad) lret js imul fndisi(8087 incl fidivrl push and pop dec loop push in jae fsubr and xor push xchg push mov lahf icebp push rcr mov push pop pop (bad) xchg icebp stos ret rcr jl pop dec rol add and add dec xor xor sub insl lods jl cli insl aam sbb movsb loop mov out xchg (bad) repnz stc adc and and mov sub pop inc pushf mov jbe (bad) popf into loopne mov xchg jecxz popf daa dec lock les sbb jns movl jns mov ss fidivrl and ja jno lds mov sub and mov incl mov push jl clc xchg sbb mov ret jp sbb mov jg and mov inc nop pop ja sbb or cli inc repz fmull push push adc inc (bad) jo mov pop sub mov adc lods movsl mov negl ds xor test fdivrp add incl loopne into mov jg jmp and (bad) pop ds push icebp imul insl (bad) stos fs xchg xchg pop mov cld cli add lds adc std xor negb xchg xor mov jno out jb inc inc jge lods xchg lock mov (bad) pop xchg lret jmp jns xor fcmovnb in (bad) cwtl pop cmpsl fisttpl fisttpll cld push icebp push pop insl jl jno clc jb dec sbb fs nop pop xchg push inc dec inc stc dec pop cmp mov imul bound ja ret clc arpl lock imul lcall ss incl shll dec adc push out outsb jo nop js inc insb mov mov repnz ljmp push xor cmp loopne dec imul js pop mov cmp jl data16 arpl add ja cs ret lea jmp (bad) push push stc adc cmp movsl push mov aas push push pop push aas lret pop jb test sbb movsb lods (bad) pop std cltd mov pop ret imul inc lock mov xlat mov xchg inc xchg js push out jl fistl mov iret xchg ret push ficom xor clc jge dec dec ljmp adc or push stc and add fisttpll sbb pop jecxz ficompl push shr out hlt fisttp js push mov outsb and cmp dec test addr16 sbb outsl sub and cmpsb adc scas adc add jns mov lahf adc scas scas jb lods mov push cmp push sub fs mov data16 lret fmul jb mov mov (bad) aam fnstsw mov jne fwait mov popf lret test loopne dec sbb dec jecxz or jb loope jp in stos push and sbb adc dec incl xchg js sbb xchg in fstp (bad) xor xchg int3 (bad) inc mov stc out dec scas mov out pop int3 dec (bad) push dec inc sub pop (bad) mov sbb and test frstor fs pusha sbb mov lea sbb mov dec or or lret jno mov mov jns int stos add stc sbb in int aas lea mov sbb sbb dec jle jae pop subl fiadd aaa sub mov loopne push mov rclb loopne sbb pop mov gs mov xor (bad) test mov rclb (bad) cmp xor pop mov mov xor or test sub mov (bad) jae mov sahf push mov les jmp add mov out dec je insl and mov push fsubr aas adc push movsl pop fcmove jl ds dec rol lea outsl fiadd xchg xchg push jp jle aad jmp dec lahf inc mov mov dec cs mov mov pop imul insl push xchg jnp stos notb inc lock dec dec imul lds dec and add mov dec je mov popf lods dec cmp dec cli pop ret push in ja outsb xchg lahf xor push repz imul lds cmp cmc mov and lret stos sahf sbb out xor rcrb dec xchg xchg lea lods aam stc (bad) test outsb xor lret sbb jbe movsb add adc aas xchg pop sarl lods incl pusha (bad) movsb mov paddb push sub mov gs pop push inc ret fsubr mov xor jbe lea orb out scas xor mov mov mov mov jmp (bad) jne fdivrl inc (bad) lock lods jns mov mov pop testl out aas hlt sahf mov jecxz mov daa mov lock mov cmc sbb aas mov xlat (bad) jb jp jmp imul xchg mov dec xchg outsb adc inc (bad) pop xchg iret pop xchg jp outsl xchg in (bad) aas jmp jg xor add mov jg lods jg adc ljmp and push adcl adc adc jle and pop ret mov test imul das cs mov add and (bad) sti ret incl inc (bad) outsl mov add idivb testl imul xor pop mov mov ds pop out jae outsb (bad) push dec cli in cmp scas mov mov mov push stos sbb jecxz (bad) jbe cmpsl imul add ljmp enter roll sub jg,pt incb sub and subl ljmp xchg scas and into lea dec test and push das adc shrl addr16 mov int3 fstpt pop out in lods das sbb test repnz stc push jmp add test das xchg pop imul ret xchg cmp push sarb mov inc (bad) jno jle in mov xchg std in loopne lods jp mov scas lahf mov hlt fsub jnp (bad) fsubl test scas pop xchg xchg aas xor test add idiv add mov scas dec lahf decb jg push (bad) add dec and (bad) lcall xor das cmp int jnp pusha adc cmp mov mov lcall xchg daa fdivrp shl sbbl sbb add sti psubd incl mov imul mov push xchg mov std jle xchg outsb lahf cmc call mov lahf lods cwtl es mov insb and and add xchg fisttpll add adc addr16 out clc inc xor popf add into push lret xchg in mov sub xchg pop jb test mov stos push sub add jmp out add fs rcll mov out xchg iret incl add out xor pop lcall dec insl mov push jnp jnp lahf pop add (bad) fisubrl insl out rolb sub mov push lret adc mov (bad) push inc hlt adc xor cld int jl incl pop daa std mov imul incl push (bad) xchg xlat (bad) mov jl test jmp pop inc sbb arpl faddp mov jp push inc stos push imul outsl out inc aad nop lods repnz inc ss adc push cmpsl cmp add jno lahf cmc jo add in cli or pop std jae cli adc rcl aaa xor push ss sbb adc mov jl cmp hlt ljmp shlb aam in mov inc imul xchg ror push pop sbb pushf das pop push mov ljmp (bad) dec xlat mov pop out sub jmp iret push aad sahf mov hlt jmp pop clc mov sub xchg cltd leave ljmp pop out insl adc push jo fidivrl mov xlat adc xchg out sbb inc jbe nop jb dec fcmovnbe jg dec sarb push std adc das stc cs fmuls hlt sub pushf mov pop xor adc push mov gs lods aad lods ffree add (bad) out jl and and pop out test mov sub rorb pop daa leave repnz dec jecxz xor cld push incl pop mov cmc test incl xchg fwait dec incl scas pop call jne mov jne jbe or mov sbb cs pop dec dec add stc (bad) and mov fidivl pop (bad) mov sti scas cmpsb mov and dec or mov cltd and mov mov stc or jg jns add daa scas jmp das cld (bad) cmp hlt xchg add int imul mov mov mov pop ljmp addr16 in cwtl xor mov sub sarl sub jecxz clc lods movsl push xor (bad) pop ficomp lret in push sbb add enter pushf loopne adc fdivrl pushf pop cli sub cld jle aas (bad) or add scas pop sti cmp jno lods pop std (bad) pushf sar mov adc xlat in aaa fisubrl lds aaa sub dec or daa cmpsb ds pushf arpl mov les cmpsl jne popa push in arpl mov repnz sbb mov and mov adc inc (bad) incl cmc int hlt cmp and aas repnz cld das incl (bad) fisttp bound cmc std sbb or sar mov jl (bad) jle push mov mov lcall xchg enter jg imull push icebp pushf xlat aaa sbb fldenv pop cmp bound cltd jecxz push in cli push adc pop incl enter sahf mov aas stc push fcos add lods mov push popa sbb movsb lcall mov xchg loop cld xor ret xor (bad) dec lret xchg xchg daa sbb adc (bad) les xor sbb jnp mov and lods sbb jmp fcomip xor std mov add push stos jmp repnz push pop cli adc stc xchg mov out mov lahf jg scas insl loop and dec mov frstor cmp lds call adc fs push mov sbb sbb cmc push dec scas sub dec imul mov in repz loopne clc cli pop clc pop incb stc sbb incl mov incl in cmc fnstenv mov clc daa aaa scas cmc mov ret js dec sarl xchg leave and mov lods int3 mov dec dec jecxz mov (bad) scas pop push mov in loope cs jp mov xchg adc jo loop push add arpl and xlat (bad) incl push pop std xchg mulb pop jle mov incl xlat cmp aas lea xor jmp mov in add or push ljmp jmp lock scas hlt lods sbb mov pop fsubl cmp xor scas cli les add sar je and lea test js jnp push pop aam pop je inc inc xchg inc out divb cmp es cmpsl jbe adc (bad) pop repnz jg aas jmp outsl std daa jp (bad) incl in mov add hlt stos mov adc in (bad) scas cmpsl sbb jno pop idivb incl cmp clc incl inc sarl js rcr cmc xchg mov imul rcll jno cmp xor lcall (bad) mov or inc movsb (bad) icebp fstp mov add adc int scas cwtl dec sbb xlat jg push ds incl fcomps stc stos test add repz inc and lods jne sub mov stos cmp add mov lds lds cmp sub vpaddq mov or repnz mov pusha fs out (bad) or dec in (bad) mov jne lahf xchg mov pop inc gs and add cltd mov mov adcb incl mov cld xchg incl popa mov mov cmp addr16 xchg leave aas xchg test dec test jmp fisub jbe rcl mov add repz mov mov jl loop jnp int fiaddl or int insb loope lret push add adc push sbb lods lods sahf add mov mov jmp pop sbb setae lods lret mov ret in lods jg cmpsl incl daa lods out add (bad) mov adc in jecxz aam ficoml fstpl xchg mov imul enter push test sub call dec popf sbb xchg push mov ljmp jmp jo dec add negb loope inc jecxz add mov mov mov leave scas dec rol push pusha mov imul sti adc fs cmp scas pop push incl (bad) xchg incl mov mov std lcall push mov add mov test xchg frstor (bad) fcmovnb fisubr clc jae aas lds push cmp mov ja mov cwtl xor mov push mov shrb insl dec ret ret int pop mov jbe aaa push jp xchg mov ljmp xor pop inc stos arpl dec push push (bad) xlat pop bnd push mov incl dec orps push mov sti pop std sbb cmp xchg scas lock pop std cli fsubrl aas int lods clc add mov ja jmp xlat mov pop sbb popa add cwtl xor add cmp insl std std (bad) lods jns cmpsb mov int push int3 gs mov push xor dec lods data16 out add incb (bad) mov je bnd rcr fnop in int push mov jae outsl and dec test ss mov push lds xchg ret lret out or xor jno push loopne add cltd xor ja adc popa pop mov incl in outsl incl pusha fwait jg adc nop adc add mov fidiv mov ret sbb mov cld mov xor adc pop xlat sub pop enter xchg leave or dec lahf mov sbb fist int3 ljmp mov add sub sbb add fdivrs std or (bad) pop scas cmp insl ja and js leave out data16 mov mov ret adc mov jae dec and pop repz popa xchg lcall xchg jge repz cmp ja add cld lea neg (bad) mov ficom popf adc aam mov xchg je mov inc adc ja mov dec incl pop sub mov flds xchg decl adc add add inc add add add or je add add add add (bad) (bad) incl add and (bad) push or add dec and or add lcall add add mov add push gs imul add add push add gs cmp add out out add sub pop add add add add push add popa jo xor push add add push out out add add push add gs cmp add add inc outsl outsl insb add add add out incl adc add pop add add sub add or arpl xor add add add (bad) sbb push push adc add add inc add add add add add push add popa insl xor add add or add add adc adc add add add add push add popa insl gs add add jne add add or add or push or add push add add add or push imul add add incl add add outsl or adc add add arpl and cmp incl add add add push add popa insl xor add push add popa je jae add or add or push or or sbb add add pop add gs xor add lock adc add add add push add gs xor add pop add jae insb je add iret add add adc adc pop add add add adc add gs xor add add add clc pop mov adc pop add add add add bound xor add add add add add adc add add add add pop add gs xor add add add add add adc incl daa add add pop add gs xor add add add add add adc incl daa add add pop add gs xor add add add add push mov (bad) incl sub add sbb add gs xor add add add arpl jae add iret add add push add pop add add add add pop add gs xor add imul add push iret add add or add add add pop add gs xor add push add je jae add add js sub adc adc incl xor add sbb add gs xor add add add insb gs jp cmp add js rolb add add or adc incl xor add sbb bound xor add add add insb outsb popa insl cmp add js pop add add add or adc incl add add add push add popa insl xor add add dec outsb outsw add add or add push (bad) xorps adc add add add or inc push push push inc push inc inc push add add add insb imul and add add addb or add or adc adc daa add add add add push add gs xor add je jae add add addb add add pop add add daa add add add add pop add push push dec pop inc add add add aaa add add addb add add add daa add add add add add je add add add insb gs jp cmp add add addb add add add add add add add add add je add add add addr16 add add addb add add add adc adc daa add add add add xor pop add sub add add push add add incl sub add and outsb gs pop add js add add add add push loopne add incl add or push imul add add add add fs add insb je add add fdivr loopne adc dec inc add add add dec add jmp adc inc js data16 dec dec add add add add add add add add add add add add add add sbb add add add sub add add add add add xor add add sbb add jb xor add add adc add lea add add add movsb add add add add add add add dec add add inc outsl bound push push push push and outsb outsl ja add xor aaa cmp xor xor and xor xor cmp xor add add add add add add add add add add in mov add add add inc add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add mov add add add add add dec add add (bad) fdivr loopne adc dec inc add add add dec add (bad) in add outsl bound inc dec add (bad) out add inc outsl bound addb add (bad) fildl test or or or or or or or adc adc adc sbb or or or adc or or or or or or or or or or or or or add or adc push push adc push push push push adc or or or adc or or adc or or or or or or or or or or or or or inc add or das add add add adc (bad) fldl add or les aas add add add add add add add add add or add add add add add add add add add or adc add add add add add add add add adc add and xor adc mov adc xor (bad) roll and icebp arpl push mov xchg push fs ret ss rclb gs ret (bad) jne repz daa xchg movsb test movsl mov aad cmc push data16 xchg cmpsb mov (bad) out aaa inc push addr16 xchg cmpsl mov xlat out adc add add add add add adc and adc push popa jno adc mov push (bad) lock loope (bad) xchg inc push adc and addl xor push mov ss loop mov ret (bad) jne repz xchg movsb test movsl mov aad cmc push data16 xchg cmpsb mov (bad) out daa aaa inc push addr16 xchg cmpsl mov (bad) fiaddl or add add add add add mov (bad) or cmp xchg es mov or mov push (bad) push adc add pop setp and ret pop stos iret sahf xor mov lret and jnp xchg stc mov dec mov xchg insl dec out mov add xor mov jo fldenv fcomp addr16 out notl cmp sbb xor add mov mov cmp xor push shr sbb (bad) dec gs scas jnp dec xchg mov lods (bad) mov jle adc stos push int3 (bad) pop sub add push xor scas jle stos cwtl movsl adc aaa nop add cld data16 sahf adc add and mov lea mov gs pop arpl mov sbb sahf scas fldcw jle daa jae das jnp outsb insl aad fistp jge outsb loope std adc outsl mov xchg lds dec xchg stos sar xor cmp ret jbe inc fstpl add xor inc adc (bad) cmc fidivl inc push or hlt pop std outsl in xchg xchg (bad) shl pop push test pop push and mov fistpl incl mov (bad) test push in lea push push mov mov shrb push insb fucomip mov mov mov jge mov pushf xorb pop cmp jle fsubp incl rcr pop lods push xchg mov mov ja in add (bad) ret repnz (bad) xchg cmp scas out sarl fwait push xchg das pop test adc push xlat push repnz jno pop rcrb jmp movsl mov inc (bad) add push addr16 in mov mov jnp gs faddp out arpl jge mov mov cli (bad) pop xchg es arpl adc rorl sbb cmp xchg dec xchg jmp jg adc sub mov fcmovbe out sar aas cwtl xchg push mov pop or sbb fcmovu push loopne pop outsb pop fidivl sub into incl mov push lea jnp fwait cli ja lods sti inc sahf jno sti dec dec jo aam add ljmp aas hlt jg imulb les xorl or inc mov das dec int scas ss sahf lret insl lea mov jge dec add fcmovu mov mov (bad) mov stc jg (bad) fdivr add sub sbb mov (bad) cmp fsts arpl pop out int3 fmul push js rcrl jge mov lcall xor mov (bad) xchg cmp inc sbb mov scas lret dec cwtl aad movsl rcrl ret (bad) sub imul out cld out mov arpl (bad) add (bad) cmp add inc rcrl int daa ja mov sbb mov cmc push insl insl fstpt loop push lods jae mov mov call vpshlb jbe into lret mov xchg inc loopne lock lret add fistl fsubl push aas in inc divl (bad) cld aam aam loopne in add xchg adc arpl pusha cld out (bad) mov mov xor ss mov inc outsl outsl pusha sub divl jae sti inc mov jno int3 insl add xchg mov lea or (bad) mov (bad) fisttpl arpl xor aam pop dec incl popf hlt push mov rolb out fstpt add hlt inc negl gs mov lahf jno inc pop out incl es push jmp iret cli push inc mov jp arpl xchg inc stos test (bad) mov (bad) idiv jecxz xor sub cs (bad) cmp jo inc movsb add xor in addr16 movsl xor (bad) cmp pop repnz rcrb rcrb stos sub jmp (bad) insb mov xor sti aas movsb rorb mov out mov adc mov popf sbb imulb cltd lds push cmp incl movsl adc fldcw les add leave xchg xchg out int3 jnp cmp mov sbb jmp add mov jge lahf mov (bad) mov aaa push (bad) mov int3 cmc cmp hlt xchg sub (bad) fsubr mov (bad) cmp imul cmpb add lods hlt int3 sub test inc out lods nop xlat pcmpeqw ljmp iret mul in (bad) jae rol scas stc lcall mov add clc dec stc test add pcmpgtb hlt cmpsl loope mov cmc jae mov out popf nop out out xchg xchg out enter or fwait out mov push xor dec pop cmpsb je in stos xor leave mov or testb aam pop fcompl push mov pop stos incl inc hlt incl inc mov ljmp mov lods (bad) popf outsl negb cmp cli outsl incl inc jne in stc mov cmc jnp mov test leave std push and int cmc pop sbb ret mov add add mov or call sbb inc xor lds out incl frstor mov pop pushf or fsts mov jle mov repz cs ljmp les mov ljmp mov pushf mov scas mov jge insb cmc sub add rorb ljmp jo gs outsl mov aaa incl or test push jge aas test loop inc jmp mov ret mov mov cmp mov stos and cmc jg aas lret xor sub mov testb rolb lock inc cmp sbb iret int icebp fisttpl jnp stos imul cli (bad) fcmove mov out sbb push xchg lret pop cwtl (bad) cmp push hlt sub pop push test jg jbe fistpll jo mov mov sti inc aas aad pop xchg (bad) xor sbb add cmpsb xor ss outsl (bad) mov mov inc dec xlat cli icebp hlt incl test lret sub sub cli arpl (bad) cmpsl ret push sub incl pop into lds shrl sbb enter sahf xchg ficompl lods mov lock scas lret jg incl mov mov sbb sti dec jnp popf inc int3 rolb out sub pop pop mov sbb cltd daa add mov std xchg jnp fist jp ficompl incl add loop pop call xchg imul mov popf mov mov xor mov idivl fsubrs (bad) xor pushf push push cmp or inc sbb mov xchg fistpl inc cmp push out and jnp stc js jae std inc xchg arpl adc outsb push inc jne (bad) gs movsl into hlt sahf (bad) fwait inc ficom imul mov (bad) xor movsl pop loope std imul add ret pop mov and push iret lods push (bad) jp inc mov mov push addr16 ss jne not test aad jle pop ds ret mov push (bad) fstpt orl sbb push mov sarl das das xor xchg int daa pushf (bad) push aam xlat vpshlq jmp nop cmp mov mov add jo cmp lds inc insl and outsl fnsave xor scas stc jbe gs insl dec mov xlat mov aas aad jne lods ja ret fsubr fistpl out addr16 aas dec push leave idivl movsl in fdiv xor inc fs (bad) out into jle inc mov rorb cmpsl outsl icebp jg pop jo roll sbb push stc scas xchg push incl adc fistpl enter xor jge jg jp insl add leave lods lods scas (bad) in sahf fidivl add (bad) dec xchg mov add imul or lods add and mov or mov (bad) mov add cld adc sub xor jl pop pop hlt pop sti push mov add fnstsw fisubl sub cmc sub in loopne (bad) xor (bad) popf add in inc adc dec xchg jbe subl inc and fild add cmp shlb sub xor int stos lret sbb add imul mov jp idivl scas out cmp dec in pop fstps sub shll movsb xor int3 mov jnp das out (bad) frndint out movsl push lods mov (bad) mov push mov or pushf inc and mov movsb xchg or or mov xchg adc lahf xchg dec xchg ljmp mov je out (bad) jo mov cmpsl and add in scas aam cmp mov jno push sbb lea pop hlt jg jae stos mov cmpsl mov jge movl es idivb push xor idiv jne into hlt out ffree pop mov sti fdivrp mov pushf and xchg addr16 inc sti mov jecxz jl mov mov (bad) cmp mov jmp mov scas inc cmpb idiv add fnsave pop incl adc lods dec fwait aad jno mov (bad) (bad) jge push fwait pop jg ss xchg mov test add sarl sub xchg incl imul test add or sbb inc mov daa movntps sub hlt mov int scas scas movntps mov jge cmp mov pop mov rcr pop call mov cwtl sub xchg mov xor jnp and inc aad stc sahf mov pop iret clc mov xchg pop cmp (bad) or add add inc stos repz fsubrl lods rorl sbb push insb fsubl sbb hlt pop movsb (bad) (bad) int fcompl (bad) insl ds mov jle pop mov int3 jbe and aaa cmp imul fcmovu (bad) pop stc lds (bad) mov xchg push or and idivl clc outsb mov aas jecxz mov sti xor (bad) xor push add or ds push jb push flds (bad) fxam out push and xchg mov dec cmp mov push test sbb jno lea repnz repnz cmc sbb dec test (bad) lcall hlt cmp mov (bad) in mul lahf dec rcll mov inc mov fdivrp add lods push push ljmp (bad) xchg mov xchg push ficompl std outsl jne cmc inc mov sbb icebp sbb pop mov scas out push xchg pop call stos mul fs cmc jnp jge pop xchg movsl rcrl xor dec (bad) out pop push fldcw lret enter call movsl xchg and push out jge loopne (bad) add stos pop (bad) mov cmp notb push cwtl jl mov lock lods push int3 (bad) pop mov pop rcrl jg cmpsl fs xchg out jnp sbb arpl and mov xor out ds stos push jne mov ror cmpsl gs fs lret enter sub out in cld mov in fwait xchg pop mov dec dec adc sub pop cld mov cmpsb inc jle,pn aaa xor jno cli inc inc imul inc mov cmp jle in std ss repnz jle sahf popf mov mov mov (bad) or fnstenv or test pop repz sar add jg jecxz fdivr daa xor sbb fcmovnu jge lret outsb ja aad jle mov std paddsw dec fstpt inc cmpsb cmp fs or sub dec sbb cli jg pop (bad) fcos in push sahf push push push xor cmp dec add add add add cmp dec add add add add add add add add dec add add add cmp dec add add add add add aas addb cmp dec add add add add add js inc dec dec add add add add add push cmp dec add add add add add cmp dec add add add add add cmp dec daa adc add add or add add add add add inc dec dec add add add add das data16 add add add add add add data16 add add add add add add add add add push add add add add add add add add cmp dec add add add add add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl call (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) incl call dec dec add add add add add cmp dec add add add add add cmp dec add add add add add add add add add inc add add cmp dec add add add add add add inc dec dec add add add add add push add add add in add add add jae and je imul add add add add add add add add add add add add add add add add add add outsb jne insb add add add add bound outsb fs bound add add add add add push arpl add add add add and add add add add dec gs outsl outsb add add add add inc je insl insb outsl outsb add add add add push add add add add jae imul jae add add push add add add add add add add add add jae imul outsb add add add add addr16 jne dec inc insb outsl outsb add add add add outsl jb imul add or push insb imul imul jne outsl inc outsb gs je add add push jns gs jne add add inc push insb imul add add dec insl and add push bound outsb fs bound add add add add add push arpl add add add add and add add add add dec gs outsl outsb add add add add inc je insl insb outsl outsb add add add add push add add add add jne insb push inc pop push add add add add add outsb jne insb push inc pop push add add add add add dec jae gs inc pop push add add add add add popa insb je popa addr16 inc pop push add add add add add arpl insb push gs dec jae push dec dec bound insb add add or insb insb push gs push inc pop push add add add add add push insb imul add add inc push insb imul inc insb imul fs jne je add or jb inc insb imul add add inc push insb imul inc insb imul fs jne je add or inc outsl insb outsl jb jns gs jne add add inc push insb imul insb outsl jb jns add add dec outsl outsb add add je jo jne jae je outsl outsb add add add add insb gs jne jae je outsl outsb add add add add outsl je outsl insl dec jne jae je outsl outsb add add add add jb addr16 jae je outsl outsb add add add inc dec dec add add add add add add lock add add cmp dec add add add add add add add add add adc add add add add add pop and add mov (bad) fdivr loopne adc dec inc add add add dec add (bad) in add outsl bound inc dec add (bad) out add inc outsl bound addb add (bad) fildl test or or or or or or or adc adc adc sbb or or or adc or or or or or or or or or or or or or add or adc push push adc push push push push adc or or or adc or or adc or or or or or or or or or or or or or inc add or das add add add adc (bad) fldl add or les aas add add add add add add add add add or add add add add add add add add add or adc add add add add add add add add adc add and xor adc mov adc xor (bad) roll and icebp arpl push mov xchg push fs ret ss rclb gs ret (bad) jne repz daa xchg movsb test movsl mov aad cmc push data16 xchg cmpsb mov (bad) out aaa inc push addr16 xchg cmpsl mov xlat out adc add add add add add adc and adc push popa jno adc mov push (bad) lock loope (bad) xchg inc push adc and addl xor push mov ss loop mov ret (bad) jne repz xchg movsb test movsl mov aad cmc push data16 xchg cmpsb mov (bad) out daa aaa inc push addr16 xchg cmpsl mov (bad) fiaddl or add add add add add mov (bad) or cmp xchg es mov or mov push (bad) push adc add pop setp and ret pop stos iret sahf xor mov lret and jnp xchg stc mov dec mov xchg insl dec out mov add xor mov jo fldenv fcomp addr16 out notl cmp sbb xor add mov mov cmp xor push shr sbb (bad) dec gs scas jnp dec xchg mov lods (bad) mov jle adc stos push int3 (bad) pop sub add push xor scas jle stos cwtl movsl adc aaa nop add cld data16 sahf adc add and mov lea mov gs pop arpl mov sbb sahf scas fldcw jle daa jae das jnp outsb insl aad fistp jge outsb loope std adc outsl mov xchg lds dec xchg stos sar xor cmp ret jbe inc fstpl add xor inc adc (bad) cmc fidivl inc push or hlt pop std outsl in xchg xchg (bad) shl pop push test pop push and mov fistpl incl mov (bad) test push in lea push push mov mov shrb push insb fucomip mov mov mov jge mov pushf xorb pop cmp jle fsubp incl rcr pop lods push xchg mov mov ja in add (bad) ret repnz (bad) xchg cmp scas out sarl fwait push xchg das pop test adc push xlat push repnz jno pop rcrb jmp movsl mov inc (bad) add push addr16 in mov mov jnp gs faddp out arpl jge mov mov cli (bad) pop xchg es arpl adc rorl sbb cmp xchg dec xchg jmp jg adc sub mov fcmovbe out sar aas cwtl xchg push mov pop or sbb fcmovu push loopne pop outsb pop fidivl sub into incl mov push lea jnp fwait cli ja lods sti inc sahf jno sti dec dec jo aam add ljmp aas hlt jg imulb les xorl or inc mov das dec int scas ss sahf lret insl lea mov jge dec add fcmovu mov mov (bad) mov stc jg (bad) fdivr add sub sbb mov (bad) cmp fsts arpl pop out int3 fmul push js rcrl jge mov lcall xor mov (bad) xchg cmp inc sbb mov scas lret dec cwtl aad movsl rcrl ret (bad) sub imul out cld out mov arpl (bad) add (bad) cmp add inc rcrl int daa ja mov sbb mov cmc push insl insl fstpt loop push lods jae mov mov call vpshlb jbe into lret mov xchg inc loopne lock lret add fistl fsubl push aas in inc divl (bad) cld aam aam loopne in add xchg adc arpl pusha cld out (bad) mov mov xor ss mov inc outsl outsl pusha sub divl jae sti inc mov jno int3 insl add xchg mov lea or (bad) mov (bad) fisttpl arpl xor aam pop dec incl popf hlt push mov rolb out fstpt add hlt inc negl gs mov lahf jno inc pop out incl es push jmp iret cli push inc mov jp arpl xchg inc stos test (bad) mov (bad) idiv jecxz xor sub cs (bad) cmp jo inc movsb add xor in addr16 movsl xor (bad) cmp pop repnz rcrb rcrb stos sub jmp (bad) insb mov xor sti aas movsb rorb mov out mov adc mov popf sbb imulb cltd lds push cmp incl movsl adc fldcw les add leave xchg xchg out int3 jnp cmp mov sbb jmp add mov jge lahf mov (bad) mov aaa push (bad) mov int3 cmc cmp hlt xchg sub (bad) fsubr mov (bad) cmp imul cmpb add lods hlt int3 sub test inc out lods nop xlat pcmpeqw ljmp iret mul in (bad) jae rol scas stc lcall mov add clc dec stc test add pcmpgtb hlt cmpsl loope mov cmc jae mov out popf nop out out xchg xchg out enter or fwait out mov push xor dec pop cmpsb je in stos xor leave mov or testb aam pop fcompl push mov pop stos incl inc hlt incl inc mov ljmp mov lods (bad) popf outsl negb cmp cli outsl incl inc jne in stc mov cmc jnp mov test leave std push and int cmc pop sbb ret mov add add mov or call sbb inc xor lds out incl frstor mov pop pushf or fsts mov jle mov repz cs ljmp les mov ljmp mov pushf mov scas mov jge insb cmc sub add rorb ljmp jo gs outsl mov aaa incl or test push jge aas test loop inc jmp mov ret mov mov cmp mov stos and cmc jg aas lret xor sub mov testb rolb lock inc cmp sbb iret int icebp fisttpl jnp stos imul cli (bad) fcmove mov out sbb push xchg lret pop cwtl (bad) cmp push hlt sub pop push test jg jbe fistpll jo mov mov sti inc aas aad pop xchg (bad) xor sbb add cmpsb xor ss outsl (bad) mov mov inc dec xlat cli icebp hlt incl test lret sub sub cli arpl (bad) cmpsl ret push sub incl pop into lds shrl sbb enter sahf xchg ficompl lods mov lock scas lret jg incl mov mov sbb sti dec jnp popf inc int3 rolb out sub pop pop mov sbb cltd daa add mov std xchg jnp fist jp ficompl incl add loop pop call xchg imul mov popf mov mov xor mov idivl fsubrs (bad) xor pushf push push cmp or inc sbb mov xchg fistpl inc cmp push out and jnp stc js jae std inc xchg arpl adc outsb push inc jne (bad) gs movsl into hlt sahf (bad) fwait inc ficom imul mov (bad) xor movsl pop loope std imul add ret pop mov and push iret lods push (bad) jp inc mov mov push addr16 ss jne not test aad jle pop ds ret mov push (bad) fstpt orl sbb push mov sarl das das xor xchg int daa pushf (bad) push aam xlat vpshlq jmp nop cmp mov mov add jo cmp lds inc insl and outsl fnsave xor scas stc jbe gs insl dec mov xlat mov aas aad jne lods ja ret fsubr fistpl out addr16 aas dec push leave idivl movsl in fdiv xor inc fs (bad) out into jle inc mov rorb cmpsl outsl icebp jg pop jo roll sbb push stc scas xchg push incl adc fistpl enter xor jge jg jp insl add leave lods lods scas (bad) in sahf fidivl add (bad) dec xchg mov add imul or lods add and mov or mov (bad) mov add cld adc sub xor jl pop pop hlt pop sti push mov add fnstsw fisubl sub cmc sub in loopne (bad) xor (bad) popf add in inc adc dec xchg jbe subl inc and fild add cmp shlb sub xor int stos lret sbb add imul mov jp idivl scas out cmp dec in pop fstps sub shll movsb xor int3 mov jnp das out (bad) frndint out movsl push lods mov (bad) mov push mov or pushf inc and mov movsb xchg or or mov xchg adc lahf xchg dec xchg ljmp mov je out (bad) jo mov cmpsl and add in scas aam cmp mov jno push sbb lea pop hlt jg jae stos mov cmpsl mov jge movl es idivb push xor idiv jne into hlt out ffree pop mov sti fdivrp mov pushf and xchg addr16 inc sti mov jecxz jl mov mov (bad) cmp mov jmp mov scas inc cmpb idiv add fnsave pop incl adc lods dec fwait aad jno mov (bad) (bad) jge push fwait pop jg ss xchg mov test add sarl sub xchg incl imul test add or sbb inc mov daa movntps sub hlt mov int scas scas movntps mov jge cmp mov pop mov rcr pop call mov cwtl sub xchg mov xor jnp and inc aad stc sahf mov pop iret clc mov xchg pop cmp (bad) or add add inc stos repz fsubrl lods rorl sbb push insb fsubl sbb hlt pop movsb (bad) (bad) int fcompl (bad) insl ds mov jle pop mov int3 jbe and aaa cmp imul fcmovu (bad) pop stc lds (bad) mov xchg push or and idivl clc outsb mov aas jecxz mov sti xor (bad) xor push add or ds push jb push flds (bad) fxam out push and xchg mov dec cmp mov push test sbb jno lea repnz repnz cmc sbb dec test (bad) lcall hlt cmp mov (bad) in mul lahf dec rcll mov inc mov fdivrp add lods push push ljmp (bad) xchg mov xchg push ficompl std outsl jne cmc inc mov sbb icebp sbb pop mov scas out push xchg pop call stos mul fs cmc jnp jge pop xchg movsl rcrl xor dec (bad) out pop push fldcw lret enter call movsl xchg and push out jge loopne (bad) add stos pop (bad) mov cmp notb push cwtl jl mov lock lods push int3 (bad) pop mov pop rcrl jg cmpsl fs xchg out jnp sbb arpl and mov xor out ds stos push jne mov ror cmpsl gs fs lret enter sub out in cld mov in fwait xchg pop mov dec dec adc sub pop cld mov cmpsb inc jle,pn aaa xor jno cli inc inc imul inc mov cmp jle in std ss repnz jle sahf popf mov mov mov (bad) or fnstenv or test pop repz sar add jg jecxz fdivr daa xor sbb fcmovnu jge lret outsb ja aad jle mov std paddsw dec fstpt inc cmpsb cmp fs or sub dec sbb cli jg pop (bad) flds cmp dec add add add add add add add add add add bound add add push add jae push add add add add bound add add push add jae push add add push add add add inc dec dec add add add add add add add add jmp sbb push das das outsb jae popa outsl bound arpl das js jo xor xor add js popa arpl je bound imul daa and cmp xor inc gs gs jp push arpl arpl fs aas or cmp jo gs and insb outsb jae js daa popa outsl bound outsb jae insl gs das daa and js jo imul je outsl insb imul xor xor data16 insl gs jb and cs or data16 inc and insb outsb jae jb cmp je jo das das ja ja ja outsl jb das xor cmp das xor das xor sub jae outsb je js outsb jae daa and insb outsb jae imul jo das das outsb jae popa outsl bound arpl das imul daa or and data16 arpl jo imul cmp outsl jne cmp cmp arpl cmp cmp xor aaa fs arpl sub sub cmp data16 cmp daa or and insb outsb jae gs cmp je jo das das outsb jae popa outsl bound arpl das gs data16 xor xor daa or and inc outsl insb outsl jb jo arpl xor gs data16 insb outsl jb jo arpl or and push imul insl outsb jae outsl outsb xor aaa cmp gs data16 js insb pop inc imul outsb or and push imul insl outsb jae outsl outsb ds gs data16 js insb pop inc imul outsb or cmp jb data16 arpl jo imul cmp data16 arpl jo imul cmp outsl jne cmp cmp arpl cmp cmp xor aaa fs arpl sub sub cmp data16 cmp daa or and insb outsb jae jo cmp je jo das das outsb jae popa outsl bound arpl das jo data16 xor xor daa or cmp jb data16 arpl jo imul cmp data16 arpl jo imul cmp outsl jne cmp cmp arpl cmp cmp xor aaa fs arpl sub sub cmp data16 cmp daa or and insb outsb jae jo outsl je jae outsl jo daa push das das outsb jae popa outsl bound arpl das jo outsl je jae outsl jo xor xor daa or and push push imul cmp jo outsl je jae outsl jo dec imul or cmp jb data16 arpl jo imul cmp data16 arpl jo imul cmp outsl jne cmp cmp arpl cmp cmp xor aaa fs arpl sub sub cmp data16 cmp daa or and insb outsb jae je data16 je jo das das outsb jae popa outsl bound arpl das je data16 xor xor daa or and imul outsb je je outsl outsb xor je data16 imul outsl outsb or and imul jae insb jne imul xor je data16 gs insb jne imul cmp imul jae insb jne imul xor je data16 gs insb jne imul cmp imul outsl insb jne imul xor je data16 jae insb jne imul or cmp jb data16 arpl jo imul cmp data16 arpl jo imul cmp outsl jne cmp cmp arpl cmp cmp xor aaa fs arpl sub sub cmp data16 cmp daa or and insb outsb jae js jo daa push das das outsb jae popa outsl bound arpl das js jo xor xor daa or and popa jo inc jb popa je inc popa je xor xor sub cmp cmp xor xor sub xor xor cmp js jo inc jb popa je inc popa je or and popa jo dec outsl imul xor xor sub cmp cmp xor xor sub xor xor cmp js jo dec outsl imul or and popa jo dec gs fs je inc popa je xor xor sub cmp cmp xor xor sub xor xor cmp js jo dec gs fs je inc popa je or and popa jo inc jb popa je jb outsl outsl insb ds outsl bound push push push push and outsb outsl ja cmp js jo inc jb popa je jb outsl outsl insb or cmp jb data16 arpl jo imul cmp data16 arpl jo imul cmp outsl jne cmp cmp arpl cmp cmp xor aaa fs arpl sub sub cmp data16 cmp daa or and insb outsb jae jae push gs je jo das das outsb jae popa outsl bound arpl das js jo xor xor jae jns gs push gs jne arpl and or and insb outsb jae js jo dec cmp jo das das outsb jae popa outsl bound arpl das js jo xor xor insl insl das daa or and popa jo dec cmp imul insl and data16 jb gs jns gs outsl jne arpl or and cmp je data16 jae popa outsb arpl inc jne,pt imul xor fs popa sub sub sub cmp data16 cmp cmp jae push data16 jae popa outsb arpl inc or and cmp je data16 jne outsb je inc ds outsl bound outsl arpl cmp outsl je jae outsl jo cmp arpl xor fs popa sub sub sub cmp data16 cmp cmp jae push data16 jne outsb je inc or and js jo dec cmp imul insl or and popa jo dec cmp jne outsb je inc ds outsl bound outsl arpl cmp outsl je jae outsl jo xor cmp cmp xor sub sub sub cmp data16 cmp cmp js jo dec cmp jne outsb je inc or cmp jb data16 arpl jo imul cmp data16 arpl jo imul cmp outsl jne cmp cmp arpl cmp cmp xor aaa fs arpl sub sub cmp data16 cmp daa or and insb outsb jae arpl jo das das jo jb outsl jb das arpl gs gs outsb je das xor xor daa or and arpl outsw jb popa je imul jo addr16 arpl outsw jb popa je or cmp jb data16 arpl jo imul das jb data16 inc or js js jo gs or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and and or and and and and and and and and and and and and and and and and and and and and and and and and and and and or js popa arpl je outsb fs ds or dec inc inc pop push push dec inc dec dec inc add add add dec imul insl outsb je push inc inc and pop and into add add add add add popa arpl dec push inc push add add dec inc inc and inc inc add not add add add shrl add add arpl je add push add add fs add add je je add lock add imul add add add adc pop pop pop add add add add pop pop pop add add add adc pop pop pop add add add adc insl outsb add add add insl fs add add add add add add add add add add jne imul add adc gs jae add add add arpl add add add push push inc add add add or push push inc add add add or push push inc add add add or gs add add inc outsl jo jb addr16 sub xor cmp and ja gs sub popa jb and insl jo outsb jns add arpl add add add adc inc inc and inc xor ss add adc inc inc and inc xor ss add pop and add add add push add add add push int3 pop pop pop and add add pop and add add add add cmp add add add add add bound add sbb pop pop pop and add add add add je fs add add add add dec inc inc and je cmp das ja ja imul add push dec inc inc and je cmp das ja ja imul add arpl add add add cs inc inc and xor ss inc gs jne je push inc inc and insb outsl jne and popa arpl sub inc add add dec inc inc and xor ss inc gs jne je push inc inc and insb outsl jne and popa arpl sub inc add fs add add add add gs outsb arpl push imul inc outsl outsb imul and inc xor ss add sub gs outsb arpl push imul inc outsl outsb imul and inc xor ss add gs add add adc add iret adc add int3 add or add add add pop and add add dec or push add add out gs jae add add add add add popl add add and add add push and jb add add add add add add add sbb push add add add add add inc add dec add add arpl push add jl addl nop add add mov mov mov add add add add add add add add add add add add add add add add add add dec add pop add add jne jl addl add add add add add add add add add add add add adc sbb add add dec add add jno jp test mov cwtl add add add add add add add add add add add add add pop add jb jle mov xchg add add add add add add add add add add add add add add add add add add add add add add add add add add sub pop add xchg mov lds testb push push push daa push aaa push dec push pop push push jnp mov popf push scas push rolb push jecxz cmc pop pop pop sbb sub cmp pop je xchg cltd pop lods pop mov pop clc or or or or pop or (bad) or or or or or or or or or or or or or or or or or or or or or or imul mov enter stc or or or or or or or or or or or inc or mov fimul cs dec push fs jg fwait push mov rorb out wbinvd (bad) cmovno pop (bad) xchg btr iret paddsb or adc popa adc fwait adc adc adc adc insl adc call adc adc jecxz add and inc adc adcl adc adc adc adc adc adc adc adc adc adc adc push adc mov push es dec push insb push (bad) push mov (bad) push cli pop sbb pop mov scas pop rclb negl sbb inc sbb mov scas sbb sbb sbb sbb imul sbb sbb sbb ja sahf sbb sbb sbb cmp arpl mov mov ficompl sbb sbb sbb sbb sbb sbb sbb jo cltd sbb push push inc push push xchg push mov pop ds imul ljmp and and dec and mov and and (bad) and and and xchg and and and and and and and and push and push xchg mov call daa jp stos daa fsubrl or sub sub sub popf sub sub sub sub sub sub sub popf sub sub sub sub sub sub sub jbe stos sub dec cs cs out das and pop das xchg das (bad) das (bad) xor xor xor xor (bad) xor xor fwait xor xor xor xor xor xor xor xchg aaa ss scas ss aaa pushf aaa xlat cmp push cmp inc cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp mov ds mov aas popa aas mov inc fs cmpsb inc out sub inc lods inc out inc xor inc mov testl inc add mov adc inc lcall inc stos inc lock xor dec add dec xlat dec sbb dec lock aaa dec jge les dec push dec lcall dec mov dec xchg dec fmull dec outsb dec mov add dec xchg dec fstl push jno mov push fwait push out xor push (bad) push adc push stos push notb (bad) push fistl push jne ret push pop push test push xchg push loopne das pop jge lret pop sbb pop mov pop cmpsb pop cmc pop inc pop xchg pop in xor pop daa pop js leave pop sbb pop mov pop mov add pusha cld popa dec popa mov bound xchg arpl fs fs fs gs cmp addr16 push in imul dec push push imul imul push insb scas insl or insl mov outsb les outsl js (bad) jo jo jo jno jno jno jb jb jae jae jae je je je jne jne jne jbe jbe jbe ja ja js js js jns jns jns jp jp jnp jnp jnp jl jl jl jge jge jle jle jle jg jg jg addb orl (bad) xor push cmpl jecxz inc test xchg xchg xchg mov mov mov mov mov mov mov lea lea mov (bad) ss sahf nop push nop outsb nop (bad) xchg aas xchg test adc dec xchg mov and xchg leave xchg xor lahf xchg or dec cwtl mov cltd cld lcall scas pushf sbb mov sahf inc sahf scas lahf sbb mov inc mov xchg mov out push movsb (bad) movsl cmp mov loopne push test test sbb (bad) stos add pop lods shrb sub scas mov ljmp mov mov mov mov mov mov mov mov mov mov mov mov mov dec mov mov cs fwait mov or jp cmc (bad) jo in shll ret fcmovnb pop ret aam push (bad) into lds enter ret movl mov lret mov ss mov xor int into ss mov aaa iret mov sarl mov roll aam aam aad aad (bad) push (bad) fcom pop xlat loopne fs fldcw fidivl sti fildl fstl fstl fildll fildll loope loope loop loop jecxz jecxz in in in out out out out call inc jmp in jo sti in xchg adc pushf out sub mov inc out int3 lock lock jb push mov sbb cmpsl hlt xor ret cmc fdivp insl idiv (bad) mov sbb test cmp (bad) cli push cli out ja pop cld cwtl std sub mov ljmp (bad) (bad) out add inc outsl bound fs add add (bad) fildl test add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add rolb or inc add add adc add add adc (bad) fldl add push inc add add add add or add add add add add add add add add or or or adc add add add add add add or add add add adc add xor xor adc popa and pop push jno sbb and es or rcl daa loope ss icebp xchg mov inc aaa inc arpl push push push sbb xorl mov sub data16 cmp dec dec dec pop pop pop addr16 js jp xchg xchg xchg xchg cwtl cltd lcall stos mov mov mov mov leave lret (bad) xlat fcomp (bad) in out jmp idiv stc cli adc add add add add push add adc adc adc pop xor jno inc andl bound xor mov rcl jb pop loope xor xchg push sbb icebp mov push ss fs or xchg inc je shl repnz gs aaa test jecxz sub xchg movsb mov aam hlt xchg movsl mov aad cmc sub data16 xchg cmpsb mov (bad) out addr16 xchg cmpsl mov xlat out dec pop push mov cmp imul fldl2t stc sub dec pop push mov ljmp add add add add add leave fs (bad) or or stos mov jo into lret add inc sbb inc fisttpl adc fisttpll mov inc dec es cmc cmc and xchg call sbb lahf lock cmpsb aaa imul mov lds rorl mov xchg sbb jmp jns cli test inc jne lds xor push or jecxz xor pop jge mov xchg dec adc and add rcrl rcl ret jns inc sub add xor mov xchg mov and aam mov lret inc mov into ret adc cmp (bad) lods adc xchg (bad) movsb sbb push test and pop out (bad) outsl jns das stos dec out and jnp nop mov test sbb scas inc ficompl inc push (bad) push mov es mov add std or (bad) nop adc es test lret ljmp dec and sbbb popa sahf fbstp mull pop aad fimull rclb stos fdivr add dec je push mov imul jae xlat ret dec cmp mov xchg xor xor dec dec mov loopne loop mov js flds (bad) or sti aas mov gs lods shlb or add fidivl add push insb mov adc into lret sub mov mov adc jmp mov mov roll mov lea push mov stos pop test xchg or and mov lret imul xor push inc add pushf inc cmp imul call js and jp jo or pop inc test inc outsl jge shlb jmp iret ss imul pop xchg shlb sub pop inc push jne xchg jns loop movsl xchg xor lods inc (bad) xor adc pop adc aam jle push push cltd pop push (bad) and sbb xor mov mov mov pusha mov pop lret fs rclb pop push in cmp cmp sbb hlt mov push imul push push push sar outsb xchg push or sub repz jp movsl inc jp fidivrl push mov sahf pushf lret incb sub cmp mov mov out push sarl mov cli insl dec icebp (bad) into mov (bad) push jns test mov (bad) out stc in cli xor movsb mov inc jmp push cmp mov mov pop mov (bad) sbb mov add repz jle js,pt or mov xor cld mov inc (bad) enter sub dec outsl inc into scas push sub sub or sbb or xchg test sbb xorl push aad xchg mov dec cmpsb or jnp test and push movsb push int3 push xchg int sub dec push movsl pop inc scas aaa mov js fstps mov xchg mov mov fcmovne out xchg iret sub mov pop add dec negl fnsave loope add sub dec sbb push push add add xlat pop sbb mov push test adc push test xchg dec mov cmp enter arpl sub dec and (bad) rclb xchg dec loop rorl or xlat or xor add sub adc cmpsb lods mov inc mov (bad) clc jno lea xor mov lods aam in cmpsb xchg cmp jnp movsl mov push (bad) xchg pop leave jp sbb adc jecxz and jge sub hlt lea cmc dec ljmp pop inc mov mov or mov inc popf cmp mov test fwait stc (bad) adc mov pop xchg ds insl and pop adc sub lods out add xchg fistl push xchg enter call addr16 jb (bad) and movl lret and scas push adc (bad) dec inc fdiv call dec xor rorb sub mov (bad) xor sbb (bad) mov pop outsb orps add and shll sub cwtl mov jge (bad) fcompl xor mov mov xor lds push fs adc dec mov xchg dec or push xor dec mov xchg dec imul lret lods fwait outsl loop lcall sub addr16 inc scas xor jno and xchg pop inc out dec imull fildll jnp mov popf xor popa loop movsl or arpl lods mov int3 add out std xchg mov gs sbb xchg push fstl jb jo sub call pop mov inc int sub pop popa lods leave rcrl pusha pop push lcall sbb lock push arpl js cltd ret add sub mov in sti aas sub mov clc push fcoml test mov xor dec dec sub push adc sbb mov push ret fisttpl mov pop xor push sbb lcall push rol call mov xchg movsb (bad) aad xchg push adc mov sbb out loop jmp pop or mov shrl sbb hlt and mov and jb std int3 sti mov je sbb data16 test adc (bad) cmpsl (bad) ret ljmp (bad) loop fnsave dec mov xchg rorl mov sub push inc sub es mov sbb jae fsubs imul push push test sub mov jbe test mov adc mov (bad) mov cmp pop enter scas xchg xor inc scas jp stos ss push jmp dec sahf mov (bad) mov sub push dec pop fcomps push inc adc dec addr16 addr16 inc lcall lret sti pop mov shrb sti test sbb les ficom xchg gs dec jle jp or mov int3 out cltd jo fdivrs jb mov mov mov outsl and test xchg or fdivl xor push sbb out lret arpl xor mov in push mov mov pop push jne cmp inc pop jns sbb push dec xchg bound or inc push xchg cld cwtl pop mov fsubr div dec mov mov xor lret dec mov fwait mov pop insl idivb pop xchg inc cli mov je lods int3 or and es mov cltd fidiv arpl xor or mov mov rcl loop xchg popf jmp je mov das loope cmc fildll and int3 out in mov (bad) gs into out pop (bad) std dec in jns sbb sbb and imul mov ffreep jle fsubl mov and adc sbb cmpsb ss ss (bad) subl mov aad add stc subl cli mov cmpsb test in xchg nop push dec mov (bad) jecxz lods add add adc push push add push and push mov xchg outsb sub test push dec repz add push addl repz mov fstps outsl shll xchg xchg cmp dec cmp insb pop insb fwait xchg lcall insl js scas pop adc mov mov mov popl adc sub inc int3 (bad) loope lcall xchg push xchg inc push es lahf cwtl sub stos cmp dec cmpsb sbb cli mov and dec imul push adc js mov adc mov adc inc movsb sub xor cmpsb fdivrl je (bad) sub test mov fnstsw rol pop inc push aad mov insb push mov jno imul mov lret inc add pop sahf fistp orl mov mov mov fst and push lret repz out aad pop ret jne aam in jns movsl aam bound mov mov mov popf sbb mov shr lret cmpsl mov (bad) jbe jecxz lods (bad) leave arpl push xchg aas mov sbb push pop cmp nop push push rcl jge push pop mov push mov inc mov (bad) repnz in xor mov out (bad) cli and pop out add push (bad) imul mov pop out sub sub sbb daa jns iret fdivrl jp sub cmc mov mov sahf sbb aad push sahf frstor mov cmp add adc cmp mov jmp xor mov (bad) mov loope aam push (bad) mov inc add lcall fidivl out mov jne and ljmp stos movsb mov mov dec in addr16 inc pop fwait lret cmp jl arpl adc add (bad) and xchg push movsl inc xor (bad) pop mov imul in negl in fcompl jecxz out outsb insl fmull loope mov leave inc cmp mov push jnp xchg out int icebp sbb lods repnz ds sbb insb pop or repz mov fisub arpl in (bad) es loopne scas cs push adc mov fisubrl sbb sbbb aaa roll jge mov fcoml fstp insl xor inc jmp dec mov xor mov mov sbb stos shrl in sub out jl fidivr repz jae push mov push arpl nop xor fstps or and pop rcrb pop jl ljmp fcomi or outsb data16 mov ja add movsb push lea dec sub lea inc jbe leave mov pop mov arpl fucomi and (bad) popf lret mov sub pop cmp dec aam lea cwtl js bound mov jno stos cmp and jae (bad) sub sbb das notb lret xor mov mov inc and jle xor dec outsb dec das andb sbb push sti aas or sbb adc xchg ss ljmp pop add lds xor arpl jne shrb call push in int3 or ret call inc or mov lea sub and fxch ss cmpsl je inc popa mov nop mov cli adc cmp jle out outsl add dec lahf iret xor sub mov (bad) insb in mov stos (bad) sub jmp sbb lret and in and sub sar stos sbbl pop lods sahf or cmpsb xchg test or ja or out sbb into cmp push and inc (bad) add mov test test pop jl out adc jno dec pop push push xchg and inc xchg add jecxz adc sub dec inc push add xor xchg xor mov cmpsb mov (bad) jp (bad) and rcr sub pop popa adcl cmp stos sbb aam pop xor sbb (bad) xchg adc cmp push iret in in dec je push sub addr16 in dec jno subb push and mov lods in sbb call push nop add stos pushf sbb sub rcl adc ljmp nop in xor push pop sahf test inc xchg aad movsl add xchg fwait int cmpsb mov aaa adc adc xchg leave inc adc ror or sub insl pop inc push mov adc xchg mov scas cltd and sbb and jp cmp pop inc loope jae int idiv cmp test nop out and inc dec lret sbb and xchg lret mov imull push sbb inc mov inc xchg inc cmp push and sub sbb pusha push fsubl pop into push aad dec bound and add lcall iret sub mull push sub xor mov inc push pop mov imul shrl mov push xchg sub or inc push dec sub das and dec out pop cltd xchg and dec test fisubrl cltd lcall les jbe mov pop and inc (bad) cmc cmp adc orb (bad) push jo jge repnz xor in xchg into cmpsb xchg int3 into popa stos ja and mov xchg inc sub add xchg imul lcall sub mov cmovle push inc push loop mov jns pop push jp stc mov adc mov xchg cmovno lcall and dec pop imul cs xor pop and les add pop add push aam jmp lea or repnz (bad) lock mov inc add lret dec xchg xor xchg sahf mov pop pop test xor mov and adc in adc in into xchg lret (bad) je lcall push cld xor dec aad or js push nop xor jo lods xor aam mov pop inc leave (bad) xor xor popf out inc test dec xchg and and xchg ljmp jb dec pop xor cmc xchg mov add ljmp add test sub xor insb out xchg shr or sub add daa loope add pop mov xchg push loop (bad) dec dec aam xchg xchg das inc push mov cltd jmp mov mul xchg popa sub outsb mov push push insl push push or lods pop push stos or push out push sub loope fwait inc jge in pop sub add loopne push shlb xor (bad) cmp jge mov ficom jecxz fwait pop add es jno push mov mov clc in adc sbb xor in push scas out pop test (bad) sti outsb fdivl xchg out ret data16 jbe push dec out jns dec pop movsl jo or mov enter loop and fcompl ja in mov pop or fidiv jno or rcrl xor (bad) mov cld dec aad hlt data16 lea iret mov cs inc mov mov sub imull aaa add add pusha dec out aas sahf repnz xchg mov jne int3 notl iret out test addr16 adc or dec add mov ljmp mov ljmp rcr cmp jp test mov test sub out popa lea sub lds push mov or popf leave repnz pop mov stos mov xor jno pop sbb dec push in mov cmp inc sbb mov scas popf mov lea cmp sti nop mov mov mov (bad) push xchg xor out incl sbb andb inc cltd lock inc adc data16 je sub cwtl outsb es dec test push mov dec xlat and mov sbb test jbe jmp and cwtl stos movsl mov sub mov xor aam jl mov and adc pusha in pop cltd mov (bad) ss ficompl lcall cmp xchg jecxz xor in xor lea inc push xor sbb push outsb cmp mov mov inc xor test cmpsb xchg jmp arpl xchg daa xchg insl std scas inc mov int3 push and es inc test (bad) dec add jl into in or dec or mov mov mov loope fnop jae (bad) outsl xor and mov sub pop cld sbb mov add in push jmp adc js xchg in lods pop or mov cmp or scas repnz sbb jbe sbb arpl shr jno ja xlat test data16 push and cmp dec pop roll and cmpb fnop push jno pop or shll sub add xor dec sbb mov leave xchg cmp pop lods movsb subl or inc xchg xchg dec sbb in xor lock lea and fwait inc mov sahf jmp outsb push push in pop sub pop loopne xchg jo cmp dec xchg xchg pop inc es adc mov repnz rcr movsb (bad) out push (bad) dec sarl and cmpsl pop mov xor mov out cld mov dec fwait pushf mov sub pop pop mov xchg push ret sub mov push xchg add and loope leave mov lds dec ss aam sub dec pushf stos lods lods sahf arpl and mov stos sub inc inc cmp push add lret mov out xchg repnz notl push lods cs imul adc movsl fdivs icebp push loop stos xchg notl ret jg std stos into push push fisubrl inc jae jmp shl daa lods adc push push push jl test cmp xchg pusha mov mov inc repnz jb (bad) and xchg pop mov fcmovbe mov push loope pop ljmp dec dec and cmp int and (bad) out sbb out addr16 (bad) xchg xchg mov enter mov lcall enter pop mov push and push imul lahf fistl in pop and push pop not mov mov push sub js adc pop sbb xchg add mov loope inc jp cmpsb cmp cmp pusha adc jne fcmovb and lret fstpt aaa mov sub fnstsw adcb test mov sub inc aaa arpl loop jge add jg pop lcall sub pop push push inc jb and lcall sbb add jne jo pushf sarl pop das shrl movsl pop (bad) (bad) inc sub leave test push push mov movsl lock fildll jae (bad) xor ljmp test adc cmp and jnp outsl loopne shl lds xchg insl int3 dec icebp movsb test cmc fdivrl fcmove jbe imul jbe jle pop notl pop repnz mov xlat xchg popf ret lods movsb push xor gs xchg insl pusha jno aas adc push sub ljmp cli jnp sub movsb jb lods jl pop ret and js pop sbb dec mov icebp movsb sbb sti out (bad) jmp adc daa pusha rcrl icebp je cmp lods leave cwtl loope mov xchg mov mov cwtl inc inc inc add xlat ds sti jbe lret mov xor arpl inc inc sub dec sbb jns gs sub xchg loopne fs push fcompl mov jb cmp push add iret and and bound inc adc push outsl jg pop mov and leave jo cmp in cmp add imul cmp adc sarl ljmp leave adc scas fidivr addr16 pop insb adc test lea push bound push movsb mov xor or pop mov ss pop jge sub adc lea push dec ret lods xchg push imul mov fstpl mov dec (bad) mov imull bound add clc pop mov jne dec jmp cmp dec mov dec pop xchg mov mov subl and or and cmpsl push adc sbb movsb push test cltd stc cmpsl arpl jle fidivr push push out or and adc and push push mov mov pop push sbb scas cmp fs jle jmp jge,pt ss dec mov cmp mov push data16 cmp xchg iret ss outsb push stos sbb jae mov inc mov nop test (bad) fistl xor outsl pop aaa in jae push add adc or pop into aaa sub jb push pop cmp pop dec sbb mov iret pop xchg out arpl push fidivrl mov mov das sub dec shlb pop lods ret dec rorb dec jb push mov sbb lock dec push ja or push test (bad) push dec dec and (bad) push in sub adc sub jbe cmpsl mov mov ret (bad) xchg out ss rorb fldcw lret xor adc lods lea cwtl sub or adc (bad) sub sbb cld inc or in mov ja add addr16 mov lahf cmp mov push loopne push push aam xchg (bad) (bad) xor push sbb inc push mov inc xor (bad) pop cmp and mov outsb xor inc mov cmp stos (bad) icebp enter xchg cli in mov mov cld dec (bad) and adc jne xchg fwait jae jno fisubl sahf xor movsl jl rclb jne add xchg pop mov adc imul dec das test (bad) cwtl out sbb xor xor xorb mov and dec pop lret xor ror js jbe mov sub push pop push or imul enter aad sub lods test sbb fmul sbb fnstenv mov add and (bad) sahf jo stc int arpl mov fdivrl dec inc xor ret push pop sub movsb scas jne insb ja inc push pop push and insl fimull stc add and mov (bad) xor ret mov mov cld push (bad) ss (bad) or lcall clc dec push mov cmpsb sbb xor scas sub fcoml xchg mov sbb or adc push xchg dec adcl mov xchg imul pop movsb nop push lcall xchg mov stc aas mov push inc jne ret push dec mov adc jb push inc data16 dec xchg out cmp push jp pop mov and inc push imul mov lods dec push in js lea mov loope pop cmp or adc pop test or adc or outsb adc inc fstps pop xchg push movsl and push pop lock dec in mov jge and enter inc xor mov test sub mulb movsl push fsubs xchg xor pushf push cmpsl lea outsb mov cmpsb pop lahf ret or test cmp xor sub xor xor popf xchg mov push lret pop xchg sbb sti lret ljmp arpl lods (bad) push mov cmp push and shrb in ja push mov push ljmp test add or push push sahf cli js xchg out push or push and mov aad or adc jbe inc lret inc stos sub push popa jecxz loop jb mov push fs inc or dec mov sbb jbe sub mov mov adc mov test sbb insl mov adc xchg add bound and dec data16 or pop xchg mov rolb jo and pop add mov (bad) xchg and sub aas (bad) lahf xchg cmp gs out les ficomp divl lret fcompl push bound cwtl dec mov adc setne sahf scas lcall or leave dec mov jecxz adc jg repnz cli cmc and nop and adc inc and out mov int3 jnp sub (bad) (bad) sti (bad) jo into (bad) addr16 aas dec inc dec push (bad) sbb je sbb mov ja dec mulb out jne jge aam incl cmpsl cmp mov pop push aad pop fidiv mov cltd lret in or ficompl inc mov outsb in sahf sub jl,pt cmp lret hlt (bad) sahf js jo mov ficompl fdivl (bad) xor mov ffreep imul add rorl dec movsb mov jge fisubl loop fisubl ss ljmp stos loop cmp enter hlt in bound rcrl cmpsl test scas (bad) mov insb dec movsb jmp (bad) ret ret (bad) mov movsb mov int std std xorl push setnp ljmp aad inc dec cmc xchg dec inc rorl sbb inc into xlat sub imul jecxz sbb mov cs and xchg (bad) loope xchg jae push int3 (bad) adc xor cmpl jbe xor cmp scas js into sub mov lret xchg imul test mov sub mov jmp jp jb xlat insl jl out or push sarl mov xchg leave arpl cwtl enter decb sub stc or movsb mov in ljmp sbb mov fidivrl addr16 int push fstl sub add sub les push leave xor adc leave and cmp out or (bad) mov jg out in jno pop imul (bad) or out in push mov mov jo jbe rol xchg test xor mov aad dec xchg xchg pop or imul jns test js mov pop ret mov cmp mov push push xchg pusha stos mov sbb xor lret sbb (bad) push mov or and push jo movsl cwtl sub pushf stc adc popf jge lods fwait pop aam dec jno xor xchg cmpsb sub or push arpl pop sbb cmp lcall xor int3 pop clc jne (bad) jge (bad) lret push mov xchg mov imul lds fcompl inc sbb inc push arpl jns push out movsl and xchg jnp xor sahf outsl lods jecxz ljmp mov sub imul mov inc insl outsb insl (bad) mov mov ror out mov pop mov jno sbb pop push gs cmp dec call insl and outsb ja fldt (bad) mov sbb xchg xchg pop (bad) pop subl sarb or sbb (bad) dec movsb pop dec insl adc popf and jb lret test ror add and cmpsl insb cmc aaa lret mov pop or into faddp xlat sarl das mov push xor push lods mov pop sub and mov dec dec push or jge inc inc daa out pop sti lahf jnp mov (bad) fdivrl ja enter cmp inc and mov rclb dec mov cwtl cmp outsb jns xchg push pushf sub je mov fnstsw dec loop js ret lds je add out and call cmp cwtl clc icebp dec mov lret ljmp fidivr jb push (bad) adc inc cs das xchg mov imul jne dec sarl lds mov shrb sub enter jg cs fistpll dec incl jp adc adc adc cmp data16 pop jl (bad) lock lock (bad) dec sahf and enter pop xchg mov push (bad) xchg imul adc pop test movsb lahf cmpsl and dec mov lahf or push inc icebp or fiaddl (bad) jmp mov out push ja aas jbe (bad) jge sar xchg icebp mov cmc fwait jecxz inc in jl jecxz out leave cmp arpl nop es and js mov mov mov dec inc mov div inc out pop sahf in cmpsl sub mov les mov mov dec or sub scas sub xchg outsl cli jmp mov sbb inc xor in push fisubl data16 pop cmpsb jg popa nop xchg mov mov incl jae dec ror outsb frstor mov roll jnp sbb fisttpll jo and popf xor cmpsl add jmp ror cltd lret repz mov inc push sbb pop dec push mov dec pop les xchg adc jns push adc and inc mov outsl push cmp iret (bad) idivl mov pop dec or mov ss sub mov hlt mov inc mov fbstp out mov sub mov inc and dec cwtl (bad) push lods inc adc inc push jge rcl jns xor (bad) xor lds mov sbb jns fcmove ss add push add aad insl sub push mov dec and pop mov sub push push fisubrl pop sub mov push mov mov inc fs and sub daa rorl daa pop addr16 xlat pop divb loop shl jae gs out mov js ret dec mov (bad) shl xor out insb insl push data16 enter sub dec sub dec cmp inc fistl add pop pop out ss dec jg in rorb lcall in jbe add sti push xchg icebp imul es lcall outsb mov add mov imul jns mov aaa or dec mov adc lcall je lret fdivl jg mov jecxz mov fidivrl dec lea cmp cmpsl dec xchg or cmp aam lret dec stos inc push (bad) mov popf fmull aaa jmp pop mov jae ds movsl mov mov pop imul out xor aaa orl and xlat fdivrl pusha fldcw fimul dec cltd scas and adc mov and xchg xorb fdivr xchg stos mov mov xchg enter sub mov fincstp ds cmp insl jl pop and inc pop mov inc dec aaa sahf (bad) fwait in jmp pusha movsb mov cmp sbb ret das xor pop insl push shlb and cmp bound pop ret int3 adc inc repnz cmpsl push nop test nop mov out mov cli jmp mov adc out and outsl or xchg dec xor and scas and xor sbbb mov sub inc popa ja imul cmpsl jmp mov lret jbe les stos lea sti lret outsl sub pop pop in hlt fidiv mov insl jp xchg cmp pop mov mov push mov adc xor dec jb mov lret mov push inc and push mov sarl int out in cmp or push fadd push cmc mov shrl pop sub or jmp pop mov sbb push aad sbb mov sbb mov mov lds daa add mov mov leave insl shrl scas lcall dec test aad cld mov insb jg ja pop out repz mov inc rcll add clc xor test push mov push sarl xchg out pop mov xchg xor mov (bad) gs subb test and mov sbb mov das jnp jmp cmpsb lods fdivrl data16 mov leave ljmp shrb jecxz jg sar lds enter shll lcall sub push jnp jno repz sub cmp add mov cwtl push int sbb (bad) outsl arpl dec jno xor cmp ffreep mov adcl fildl rcrl mov pop ss gs push cltd jl cmp mov mov inc data16 test and int pop jecxz pop inc (bad) call rcrb ja mov mov and add sub icebp movsb repnz ret inc sub ret mov add movsb lcall fcmovnu (bad) or mov mov movsb xchg cmpsl sbb sbb incl or ret mov bound sti popf mov sub jbe aaa mov hlt out ret pushf xchg adc in dec cmp sub (bad) and nop xchg push push movsb inc jo and mov movsl fs or or dec lea push cmp mov sahf sub loope icebp bound dec sub xchg push xchg (bad) add cld dec xor xor pop daa mov into in stc out lret fwait add jle inc mov jns jbe sti lret xchg push mov ds push shrl popf cmpsb xchg xor test incl jb lret dec jb (bad) repz negb xchg mov xor cwtl push fwait mov or inc sbb lods or lock cmp push jbe mov xchg sub add les shll dec sbb shrb sub icebp inc jb jnp mov arpl xchg xchg mov or push fidiv inc dec push repz movsb xor clc in int3 push push ret push test pop sub fiadd test scas scas popa xlat xor (bad) popa jns sub sbb sub push sbb xchg (bad) jno repnz fxch jo movsl pop push ss mov arpl mov dec adc rorl inc incl (bad) out adc pop icebp or push push jo or jecxz hlt (bad) jg ds fnstsw jmp repz repz push movsb pop cmpsl mov (bad) lahf ret push adc outsb fwait dec out pop mov xchg dec arpl lcall xor dec push cmp lods aam jo inc int jne add add aaa leave popf into (bad) fistp and lods and xchg mov push dec push dec xor out dec mov insl dec cmp test sbb mov enter mov inc dec push pop inc xor sbb nop stc push jmp push adc push aam sbb pop sub out xchg cmp mov xor fcmovnu dec sub pop sub shrb mov loopne fs popa dec imul adc fs jg dec adc (bad) pop sub adcl scas outsl (bad) sbb xchg sbb sub xchg movsl cmpsl insb fs stos adc push push dec inc bound or movsb sahf aaa xchg cwtl sub arpl ss imul mov (bad) sbb sbb and push in inc xchg adc and sbb leave imul mov add mov divl mov loopne and inc pop inc rcrb mov or add stos push mov inc cmpsb test dec dec push test and pop sub push sub mov sbb lahf imul push push into mov inc pop push adc pop push aad push pop pop sub int xor sbb or outsl fisttp sub sbb push mov jecxz ror sub xor mov mov mov sbb loope test mov mov cmpb int3 test in push in stos adc xor nop jns and cmp mov mov mov dec lret add add and inc and dec inc incl jnp pushf push push sbb icebp iret mov jo lods cmpsl cmpsl xor enter std (bad) dec mov enter ss adc mov dec out andl or orb test imul (bad) idivl mov pop mov xor dec sub mov push jbe inc cmp aaa (bad) gs push ss sbb add dec and out scas mov xor inc loop xchg push push pusha int3 xor (bad) (bad) cmp pop mov lcall cltd stos test test push lods mov imul xchg icebp leave sub inc (bad) mov add xchg jae das repnz cmp (bad) iret nop mov dec mov aas nop sti sahf mov jb mov (bad) std iret push and push icebp xchg cltd loopne cmpsb lret xor jle,pt pop test inc jns pushf mov je mov leave sub push lcall add mov loope or or sarl fnstcw mov sti scas lret ja icebp lret fwait jp jae cmp xchg mov xchg fisub mov or aam movsb jno mov fbld mov test jl jmp ds outsb dec test pop push fst xchg xchg push out out je imul fstpt mov dec pop arpl imul pop mov push pop mov insl sbb or subl fs mov push add mov int jl sti mov pushf fnsave stc loop enter mov loope and or movsb inc sbb lds rol sbb push jle outsl icebp cmpsl adc dec movsb jo jge test fstpl push leave out faddp (bad) imul es (bad) je dec add js ja cmpsl (bad) popa call pop mov in dec push fnstenv push fnstenv xchg div mov cmp loopne pop adc dec test lods push fist and dec daa dec mov idivl (bad) push mov pop gs and fucomi pushf or popa outsb dec mov fistpl insl dec xor rorl fs xor mov jae (bad) dec mov cmc push xlat fstpt xchg insb fwait divl in in pop repz mov jbe fstpt jmp push fucomip ficompl pop cmp arpl (bad) push lea (bad) inc sub mov pop cli outsb inc (bad) fwait jb fldenv mov fiaddl jb icebp js pop mov fnsave mov and pop fisubl movsb xor mov mov pop jbe insb stc fstpt scas or lock fildll mov fildl sub push arpl into out js stos leave sbb mov adc add xchg jg mov push xlat in outsb cmpsb jmp js jle (bad) cwtl stc add push outsb into ret (bad) in (bad) repz mov mov ret sub mov jb stc mov rcrl mov cs into idiv divl into jbe or push or (bad) mov cmpsb imul aam aad imul icebp pop js es adc testl mov movsl mov add in mov inc mov mov lcall aas push dec mov pushf fdivr stos mov lea dec imul int3 dec and frstor mov test xchg sub mov aaa jmp cmpsl xchg (bad) lret cwtl loope cmc rorb pop das jmp mov dec repnz xor fwait push mov data16 cltd mov push push or out out in repz icebp jmp mov imull ss dec mov fldt cld lea insl lods mov out fcompl lock xchg dec out mov xor xor mov arpl cmp repz mov int ss xor into and jno ucomiss xor loopne sti fbstp sti iret sbb mov (bad) fnstsw insl adc sbb mov cld mov test fsubl lock push imul sbb lret pop sbb daa xor add out fwait xchg xchg cli (bad) testb lcall das and insb pop fsubrl adc jg (bad) (bad) mov dec or and push dec xor push in jo lods cmp cld mov stos jg outsb jg pushf test pop std xor adc stc adc xchg ficoml insb adc stos xchg mov inc in sbb repnz test repz xchg nop loopne mov insl mov mov popf ret imul mov push dec insb in fcmovu inc xchg ljmp (bad) or loope and negl inc mov mov cmp adc adc inc and add lea cli iret inc sbb mov xlat jecxz int div daa xor jg sub cmp ja (bad) jg cmp cmc out arpl xlat jae std (bad) mov push in mov inc mov sbb lret xchg and xchg xchg (bad) in push aam push dec out mov es out add in ja insb int sub scas mov lods adc mov push sbb push bsf in inc aad push fldlg2 sbb fbstp mov loope or (bad) int pop jnp popf adc stos lods xchg adc sarb (bad) rcrb inc (bad) lahf jne push sti jmp vpsubq and loopne jne lods sbb sub rorl pop test test sti xchg in xor aad mov repz mov jae dec shrb fcoms mov nop imull notl (bad) cwtl lret stos mov pop jge std fnop std movsb out popa out popa mov jnp into pop mov adc sbb es pop sub push xchg pop sbb push adc jne adc push mov xchg jmp mov sub ret jmp mov mov jo pop mov outsl pop sarl sub lret inc push pop mov test pop gs xchg jge (bad) mov push (bad) addr16 das lcall js int or jne aad mov xor outsb icebp fcmove adc cmp (bad) lock cltd int3 push pop rcrl shrb pop pop inc ss jo and ss inc lods or mov and (bad) adc movd (bad) mov in pop lea imul cmpsb stc stc pop repnz mov ficomp cmpsl jbe jle sub arpl rclb aad outsl fcmove iret inc dec aad lock and inc pop (bad) sarl xchg negl ja jnp loope leave adc mov cmp mov jb or cltd fldenv cmp leave sub das mov mov jmp mov xchg cmp mov (bad) in addr16 mov xchg inc mov inc cltd (bad) cmp dec mov mov push int out clc imul mov jmp mov pop mov push popl dec lahf mov cs push ror (bad) push dec xchg xchg jno push pop addr16 mov (bad) jge negl mov jno sti jae fisttp mov (bad) fcmovu mov ss cmp mov pop inc imul (bad) (bad) mov sti fucomp pop ja pop (bad) lods mov adc js push xor cmp cltd lods rcll dec add inc loope popa shrl out insb dec stos jmp xor xlat cmp scas cmp pop xlat fstpl push fldt jmp outsb out cmp out icebp push dec cs mov push adc pop sub add out gs and or xor inc mov push inc aad mov sbb pop out jmp jns out push fmul leave pop lds mov insb fistpl fsubr and cwtl mov scas outsl jno xchg adc xlat loop sbb jmp dec cld mov inc xchg cld xor cmp xor sbb sbb arpl adc xchg push imul ret xchg (bad) popf xlat insb fbstp sbb dec nop fdivrl lods xor adc movsl mov pop sbb divb lahf fnstsw insb push xor cwtl jbe inc inc incl adc lods jle push inc xor stos inc imul xchg pop mov mov movsb hlt sbb stos popf ret sub xchg stos jp sti or hlt hlt aad icebp dec add js xchg cmpsl sub and arpl fmull imulb cmp pop xor imul ja sub enter cmp and das and sub push dec sbb call inc xor (bad) (bad) aas movsl cmp dec outsb lret mov out sbb aam fucomi and test mov aaa or xor fcoml dec cmp adc and repz or test stc jle ret loop cltd shrl cwtl call mov enter jecxz mov cs in sarl inc mov push fisubl sahf imul cltd mov mov (bad) int3 insl and dec jl test in mov (bad) mov jg or out insb lods pusha movsb movsb rcl int3 es lds adc mov je fidiv sub xchg and das cmp insl fldt mov xorl sub add and (bad) jbe mov pop pop dec xchg cmp and dec and xchg and in lea iret sbb out cmpsl dec out jae mov ret fnsave fistl sbb pop js call xchg sti stos lahf scas int3 in xchg sub leave in adc dec dec cmp ja jbe mov outsb xchg pop push pop inc je pop daa mov dec mov push jb push je cld adc add dec mov iret imul jno push addr16 jle mov jecxz add fcmovnb adc push and lods sbb xchg aad adc out pop xchg mov ds cmp cmc fst js mov dec dec cmc adc jno push aad roll or test test imul add pop mov imul jge jbe push sub sub and and cltd pop push sub int3 cmpsl sub sub dec dec add push movsb adc cmpsl or pop daa mov ret dec pop and movsl data16 push addr16 mov cltd fwait les pop add aam insb icebp cwtl cmp jne push add sbb jo xor out add sbb jecxz pop pop in scas sbb subl je stos std push push negb xor test mov data16 jp mov cmpsl jge (bad) lods jne sarl sahf mov inc xchg loop mov ljmp xchg shll jbe test push rcl push rorl je or add add jnp mov jns jns (bad) cltd ss pop scas cli xor lea test mov sbbb add aad and icebp jmp out mov cmp mov xor dec sbb out xchg addr16 sub inc push xchg cmp (bad) jnp jnp xor mov push jns xor aad cs aaa inc mov xchg jge or push adc mov jns in int sti fsubrp imul xchg repnz pop add pop les dec inc mov add bound pop pop push mov push icebp arpl mov popa sub inc and cmpsl cmc pop dec sub dec push xor jns in in (bad) cltd movsb pop (bad) imul push sbb or scas mov mov rcr cmp sub dec movsb mov inc xchg int xchg stc mov in mov inc push and inc mov xchg and push mov ja mov xorl adc xchg mov sub ljmp add fstpt sbb jnp outsb lods rclb push and or gs mov pop xchg xchg popf sub xor and jb fstpt mul divl jb outsb mov aaa xchg gs insl adcl ficomp push jne sbb dec mov inc cld (bad) int3 ja lods int3 out jae sbb push xchg adc and add call out push and call push in imul sub (bad) lret pop or paddusb push sub outsb lea insl inc stos loopne mov repz cmc lret jge push sub out push or (bad) lea sbb push aam scas pop jnp mov pop out test xlat mov inc test test sbb pop imul cltd sub mov mov xchg sub jns sbb ficoml cmpsb sbb stos fs dec aam imul mov sahf xor pushf dec add fidivrl pop das fucomp loop and sub add inc sub icebp sub scas pop imul dec cs dec je add test bound adc sub leave dec sbb sub (bad) ljmp sub inc push les sbb and xor mov test sub addr16 dec or fsubl jbe imul jbe xor dec push xor add xchg mov jle in lret (bad) pusha jae gs mov shrl mov rcrl cmp cld imul rorl imull movsl xchg cmp sbb mov adcl dec fisubr jecxz ljmp mov cmp adc jb out (bad) jne dec mov iret push repz dec mov push xchg lea lea xchg push lock sbb stos (bad) pop adc std mov mov je daa sbb jne loope xor sub ret jbe push cmp pop pusha mov fwait jno mov out lds int3 fs lret xor imul mov loope pusha (bad) aad rcll test cmp fwait ret (bad) ficom dec mov outsb lea outsb push cs arpl sub lock jb out pushf loope mov les pop mov push outsb pop roll push fldenv loope dec mov lret stc mov jbe dec loope (bad) (bad) pop xor push in sub ret loope leave add dec fdivrl scas xchg xor xchg cmp bound push in cmp pop dec bnd pop mov fisub in and jbe mov arpl pop mov daa in das jns jle outsl shrb fidivrl push (bad) shlb mov call inc mov inc mov jne mov pusha sub pop pop jbe in xor out data16 call inc test fwait (bad) data16 bound cmpsl dec outsl or push pop stc inc outsb in in (bad) push orl sbb imull repz (bad) aaa xor cmpsb sti arpl fist lds popa and mov repnz sub mov inc cmp minps fisubrl fdiv mov out mov dec lods adc cmp sub aad hlt xor sbb ret mov mov add shr sub fstpt fistp sahf fnstcw ljmp jmp out ljmp (bad) int sbb or fs rcl mov dec xchg loopne lods (bad) sti (bad) or sbb dec sub clc jmp iret outsl jno inc jb (bad) mov (bad) in push rcrb into push cmp fsubp popa mov add ss and popa and mov jns and mov dec test loopne pop mov test icebp repnz gs iret push fstpt das xor push cmp cld notl ss aam push sub (bad) fnop fsubs inc mov mov cmc loop mov (bad) fdiv cmpsl mov addr16 xor loop jo dec mov int3 movsl int3 jb mov daa mov sbb push dec jb inc jle (bad) jecxz jb mov aam sub call xor movsl fst rol jne mov (bad) imul dec mov stos xchg and sbb out fnsave jl ficompl int push shr mov ljmp outsl int mov jns pop jmp mov mov icebp iret mov sub js scas addr16 out mov mov adc jae fnsave adc movb je dec jb jno out sub xchg popf lahf fstpl insb imul mov sub push sub ret outsl imul (bad) mov fisttp daa dec inc test jne dec jb and rcr (bad) sub ljmp es mov insl ret les xchg mov mov cltd test push repz inc testl mov sti andl dec jp ret loopne xor mov test cltd fldenv stos mov pop mov roll add or cmp fmul out (bad) leave cmpsb lods aaa xor add imul imul xchg jmp sbb sbbb push loop cmc xchg pop jg (bad) ficomp mov (bad) add mov in inc adc inc (bad) out or cmp into loop movsl ljmp outsb (bad) call je imul mov xor mov push mov mov rcll out jb out sub jle aaa xor and cmc inc xor loope mov mov fisttpl inc and mov lret fstl adc jnp fldcw lcall pop addr16 xchg adc sub cwtl movsb push mov mov dec mov aaa jae dec out mov push inc mov fistpll aaa out cmp es in dec rcll or push rcl jle push mov and mov mov outsb cld mov (bad) mov into sbb mov test dec push clc xchg pop inc push movsb int3 pop push in gs outsl outsl stc sub jg,pn xchg jo mov pop fsubrl cld pop mov mov hlt js push in mov test xchg rorl hlt pop pop ja enter icebp ja jl in call popf jae mov fcomps xor imul pop cmp scas pop push jecxz xchg mov lahf setle stos ss cmp mov das iret mov mov les xchg lret jmp adc and imul sub lock inc mov mov dec mov ficomp fs fimull outsl jb,pt mov mov jne insl pop out outsl cs and ss xchg fistl mov (bad) bound dec fwait sarb popa sti das mov mov scas jg in mov insl in mov add xorl sbb jbe xchg inc ss lcall push dec or stc pxor add jnp loope out xchg ds mov adc inc gs cwtl xor xchg pop popf mov addr16 test adc or push jmp pop aaa out jl mov jb leave arpl adc jno aam pop ret dec arpl xchg das mov shlb (bad) lahf in add out jge push mov fcomps mov cmp ret xchg fstpl jmp int3 insl pushf out mov repnz outsl pop repnz jne sub xor push and xor sub in pop mov dec imul or xchg pop xor sub inc mov pop cmpsl sahf sub sbb xlat out and insl in pop in fidivr mov mov mov xlat lea lret imul je sub lcall sarb cld divl add sbb fimul ja pop cld pop fist addr16 pop mov dec enter fimul imul fwait sarl mov mov inc int3 fdivrl adc xor aad jmp mov pop fmul sub test loope lods lds int3 fist daa mov lret dec and mov popa mov cmc int pop jae ffree xchg jo fimul rolb push cmp fdivrl sub adc lock fisubl lret imul test push (bad) loope std inc and je addb fldt hlt dec sbb or movsb shr sub lea jbe inc sbb adc fsts cmp push sahf pop xor stos push inc pop jbe mov in into inc stos push push sub and sub vminps in mov pop mov xor or push fadd addr16 pop popf cmpsb fucomi add mov jl and cwtl (bad) or std repnz addr16 jns insl mov enter sub dec out outsb sub jns sub cmpsl leave jle pop jb aad jbe sbb int outsb sub lret jp movsl fdivr repnz orl and mov add mov das (bad) sbb push cs cmp movb fdivl lcall xor ljmp lock cmp push mov push mov ja mov push and jb pop (bad) mov mov (bad) int3 popl mov sub sti rcrl (bad) gs (bad) in push and or pushf jo es ss aam jno push mov fs in daa (bad) push jg ficompl pop sbb fdivl sbb or inc mov (bad) (bad) das or les js mov push jns fidivl pslld int outsb loopne mov (bad) mov outsl mov xchg mov mov addr16 icebp sbb adc movsb inc loop pop pop and mov fildl xor fs mov or int cmp mov inc adc jns push aas ja insl fnstcw in leave dec stc ljmp xor jns fdivl fidivl push dec fdivr sub cmpsl sti pop js cmpsl cmpsl or inc repnz in outsl jae out leave daa mov (bad) popa and rorb movsb icebp pop ljmp mov sbb mov cld mov mov subb mov mov add pop das mov out in dec les popf out sti lcall adc and ds cmpsb pop test popf sbb and lcall xchg js jnp (bad) cmp cmp or mov imul ljmp push jne in add mov inc dec stc mov mov or loop mov sub push lcall out stos xchg cmp nop add inc jecxz aas mov insl rcll xchg sar or push mov cmp aam sub or aam cli mov lahf lock jecxz sti jg sti push dec cld xor cld or loop cmp movb sti push jge jge mov push push mov lock jmp je lds xlat stc jmp fdivs outsl (bad) mov insb mov imul or adc dec cmp push mov js inc lea jge adc push xchg push repz in div in iret aaa jb repnz mov fidivrl cmpsb mov mov stos adc sub test push std fxam fidiv je,pn mov sub inc pop ljmp sub push test aam cmp fwait addr16 cmpsb enter inc sub pop jae push cmpsl cmpsl aad inc xchg in push pop call lds sahf pop in jbe div or outsb xor sbb fstl mov mov sub sub lds mov sbb mov xchg xor movsb add nop add fnstenv sub fcmovb mov hlt xchg movsl bound mov dec dec xchg cs rorl cmpsl les mov xchg outsb (bad) in xchg jge aad outsb sbb sub fistpl and mov and push pushf mov out ljmp gs ja mov out cs and mov push or push or mov and dec mov (bad) dec dec xchg scas test pushf (bad) mov jecxz add push adc fwait pop push jb or and out xchg stc int3 fwait inc into fnstsw push jmp sbb subl lahf insb in negb cmpsl mov inc and adc (bad) test sub inc pop mov pop xchg fwait scas jnp or mov xchg cmp xchg sub pop loop leave adc mov mov dec lea push add inc jl int3 mov push fidivrl bound sti adcl sub inc jmp sub jns adc (bad) xchg out cltd cmp loop jb pop xorl outsl or dec xor sub pop loop push lahf daa xchg ret out xchg fdivrl cmp push sahf scas adc divb or rclb push popa in dec mov dec and sbb mov fnstsw fstpt in insb mov insb cmp fidivl popf frstor pop mov stos rcpps (bad) ss mov mov pop jl push pop fs (bad) ficompl pop jns sbb push mov xchg inc jno rcrl nop imul push adc imul gs sbb in lods jp inc pusha pop dec adc jns mov and ja mov arpl lods fimull lds dec bound mov les cmp adc adc fisttpll cltd lds data16 inc sbb mov cmp add jmp call xchg std pop push (bad) xor pop and sti insb push dec (bad) lret neg push pop dec cld xor mov fnop (bad) out cmpsl es mov mov mov jecxz jns insl mov xchg fisttp mov fwait jge (bad) movsb pop (bad) xor and mov aas jne dec push inc pop inc mov and out pusha mov jmp (bad) maskmovq idivl xlat xor mov adc pop movsb int sub or sbb mov scas mov ret ljmp repnz cmp imul pop xchg fwait mov addr16 (bad) fldt jp loop jp outsb xor jle add mov jge push mov or add pop adcl or mov jne lret pop iret outsl imul sti mov pushf xlat jns repz (bad) in push movsl (bad) in fldenv pop sub js mov mov jns les stos ja iret xchg addr16 dec lds imul idivl dec mov (bad) test (bad) leave push mov ds ret aam addr16 dec jb inc cs daa or sahf js dec leave cmp insb jns (bad) fldt lods aaa or xorl imul fs and sbb dec mov dec (bad) repz test scas aam mov cmpsb mov ds outsl movsb lcall jmp sahf and push or sub incl popf incl adc clc ficoml push lahf mov shll arpl lcall mov mov xor int3 xchg mov clc sub fwait sbb pop sti mov cmp sub xor inc pop js mov push cmpsl test jno sub dec out mov std sbb scas jnp pop mov mov pop dec mov fs mov sti and sbb mov mov cltd cmc sbb sub out daa rol sub add das xchg dec (bad) pop and push xchg xacquire mov and add mov pop xorl sbb fs lret pop and lss jnp insl xor mov jmp lods dec mov pop pop xchg adc popl jg out mov mov cmp or shrl jp popf mov mov pop hlt out push dec sbb (bad) pop jne pop addr16 xorl sbb add icebp jnp mov dec xchg imul inc and inc mov cmp loop (bad) dec addr16 xchg inc sahf cmpsb jns pushf cld dec sub int sub das cmp cltd es inc sub fisttpll test mov jns cltd stc mov xchg jns je mov jnp or sub ljmp popa lea lock mov cmpsl in fdivrp (bad) repnz and ljmp mov mov cmp ret fistp ds xorl rep test out jp mov fdiv or or inc divl fucomip lds insl cmp test in pop test sub push dec bound cmp ficomp or adc push cmpsb (bad) into lret fisttpl pop in dec mov xor icebp dec jne mov or out mov pop xchg adc sbb xchg rolb xchg jl xchg jno aad or mov and cmpsb jmp adc lds imul out inc cli mul decb (bad) dec pop jg in xor fadds jmp add mov std sar arpl daa mov aaa in rclb cld outsb push inc dec in dec repz stos int add jbe (bad) push into std mov push outsl or jno in bound xchg add pop cmpb or pop mov iret fwait cmp cmc inc cwtl and aam insl fwait push data16 inc sub add dec pop jg daa (bad) push test adc popf xchg (bad) fdivr addr16 inc pop pop and inc mov sub repz jge mov cmc outsl repz ljmp mov jecxz scas shr das in aam sbb aaa inc imul xor dec mov cs jns xor cli das cmp enter cmpl fcmovne mov scas cmp mov cmp loope jbe sub adc loope xor add iret cmp fbld fnstenv sub cwtl and int mov ss jno mov lea sahf ficomp inc popa jne mov add mov cmp pop scas xchg mov in ret pop mov inc xor js pop daa xor sti movl test cmp mov mov lods push inc roll mov push xor in jne jne xchg fiadd mov and jno mov dec cmpsl xor cwtl fs or xlat jnp jae lahf cmp cld rcrl ficoml out lods sbb mov into ljmp stos scas test es and sub sub lock jle incl xor mov aas and inc dec fs in jmp out ret (bad) dec jne in jmp popf mov idivl enter sbb mov int3 fldcw imul dec imul int3 rolb xchg arpl jnp imull or (bad) xor pop pop dec adc lock outsl jno into or adc or stos inc inc sbb and mov imul neg xchg fmull ljmp mov mov call mov sbb pop imul cwtl fcompl fbld mov pop sbb add data16 out iret in (bad) fistpll aam in int mov ss sbb out int3 (bad) in jge mov insl push jae jbe sbb dec pop or dec push mov pop nop mov jbe fnsave out sub fisub mov dec lods sbb add mov scas sub pop (bad) adc jle jbe ret cmp sahf gs scas imulb mov dec stos js sbb ret sub dec add imul sub add pop dec pop les sub jl aaa pop outsl sub scas gs or fidivrl addr16 rcr push sub sub cmp xchg mov mov mov jno fucomi imul sub das mov dec jl clc dec rcrb in dec mov test aas cmpsl xchg cwtl dec lods jecxz lea lret fmulp mov and mov jbe mov xor test push stos mov rcll pop dec mov mov scas inc aas popf push lock mov mov xor dec sub lods stc paddusb outsb notl cmc fisttp scas pop xor cmp mov dec jl mov and inc adc push dec dec xchg add divb cmp mov nop (bad) insb mov xchg inc push ja pop sub push icebp (bad) cli arpl mov cli jae fcompl fisub mov mov mov add xchg push pop fwait (bad) sbb cltd arpl (bad) and hlt xchg and lea xchg mov out inc cmp adc (bad) cwtl (bad) sbb or loop test jns push mov add adc mov mov call lcall int3 jl xor (bad) jecxz mov mov and ljmp (bad) loope addl scas xchg or mov cwtl mov add pop mov push jo xor popf imul ja push cmp sub outsb inc mov test je cmp arpl loope xchg push pushf xchg push (bad) push sar lcall mov imul in mov mov xchg bound sub adc mov mov sbb inc pop loopne xlat jae pop aam xchg loop jne shlb imul lret and and icebp adc dec test mov stc pop cmpsb cmp aam jp push sub xor push lahf cmp push pop push push add xchg sub mulb mov arpl pop sub sbb pop sub inc push jge cltd gs jbe push inc lret add xchg or lods loop jne jb xor ffree mov push sub xor ficomp push jne frstor (bad) int add insl lret insl int3 cmpsb je sbb mov ljmp lock sti jae cs mov xor inc sbb xchg mov adc xchg dec ljmp incl inc push cmpsb ds (bad) push inc shrl dec push lret movsl mov pop (bad) fsts in outsb sti test jbe pushf xor xor xor adc (bad) push and ja pop sbb sub mov into sub adc (bad) aad gs jp mov inc mov test adc jno inc sub in fstpt fnclex xchg inc push dec mov jne gs sub cmpsb das jecxz mov jbe mov adc and stos or push dec insw and ljmp fbstp xchg (bad) xor js or dec xchg sti jl lods scas movsl lahf in sub repnz dec sub adcb or jge stos outsb xchg shrl pop lds test mov pop popa rep movsl pop inc inc add icebp (bad) mov ror rcrl adc clc mov push sbb (bad) mov or pop flds pop xchg push jge xlat cli jnp pop dec incl inc sbb out sti dec imul jmp hlt scas jl imul repnz and adc sub inc sbb pop leave mov pop (bad) add mov lock fcmove lcall lahf vpmuludq (bad) adc rcl std pop ds scas lret mov xchg inc test and jmp and push mov iret cmc stc and or xchg rclb arpl (bad) stos push fs movsb mov cwtl or sbb dec ds pop imul fistpl xor xor and mov sub push mov xchg push push sbb mov outsl mov fs pop xor ljmp pop pop out push sbb mov fidiv xchg jb jb xor and mov jp nop cmp arpl pusha xchg and loope jecxz ljmp nop rcr xor int cmp jmp add jmp cmp push and stos xor test aam movsb subl ja repnz sub out test mov add cmpsl dec or push test ljmp (bad) xchg loop xchg (bad) mov les clc and lods jne push addb and jnp mov (bad) out jo mov add and mov mov xorl clc rorb push xor ror jbe int3 nop push lds or and adc inc out mov push sub bound xchg dec imul js jns cmp fcmovbe loope dec adc fdivl aad add dec add in lret cld adcb leave push nop dec je adc xor lahf les adcb cmp sbb (bad) mov cmc cmp cmpsl stos scas movsl dec and xchg lcall sub mov push mov imul and movsb sbb push loopne pop jno js cmp sbb dec pop jns rcrb dec inc lret sbb imul cmp xchg or ror cmpsl jl jge mov repnz mov push dec xchg (bad) loope out mov cmp xchg jecxz js aam xor (bad) repnz adc stos fdivrs sbb jmp jo dec jmp mov inc mov cmp fist and inc push loope or and call lret sbb mov (bad) (bad) xor jb subl lret sbb popf daa mov and mov push mov ficompl mov outsb rcr aaa jnp outsb insb in scas dec xchg mov mov and (bad) shl test js clc popa xor inc mov lods and scas out movsl out jbe mov sti inc fdiv add add mov push cmp ror and mov pop dec in cltd frstor mov fistp scas outsl in fs ficompl out jmp mov das sti rorl imul push sbb rolb pop imul cmpsl ja push fsubrp sbb push xchg jne popf addr16 push in incl pop loopne jb xchg dec cmc mov in stos sbb arpl fwait lcall daa mov adc mov mov jnp (bad) fisub jo mov jmp sbb and rolb outsl and (bad) iret sub lret pop sbb daa daa fcomi ja jb fldlg2 rcrb xchg mov cs fs dec in int3 mov fdivs add xor xor (bad) ret mov push dec ja inc jbe data16 jmp mov (bad) dec scas mov addl jl fisttpll jmp lret cmp (bad) sbb sbb jmp sbb sti das out pop cmp (bad) (bad) cs mov jl adc pop scas mov cmpsb mov (bad) jae stos xchg add dec or lcall (bad) mov movsl out xchg insl mov mov (bad) lds and outsb sub loopne dec add sub jb cmp sbb incb das pop outsl pop movsb in dec xchg cmp jl repnz pop js jge (bad) aas adc clc mov test fs xor mov jecxz test add adc inc xchg idiv idiv xchg jle pop cmp ror lret ljmp mov push lcallw (bad) xchg ds xor mov negb xor jp icebp push scas fwait rcrb push mov inc rolb bound iret jl stc insl icebp fbld test (bad) mov outsb fdivrp aaa fcomps sahf inc dec push xchg (bad) pop cmpsb xor lock pop push xchg dec lret imul jg xchg lret test xchg lahf insl jbe in aaa cmp arpl jnp outsl and cmp les mov xchg xchg xchg outsb movsb mov lcall (bad) add fidiv pop lahf jae idivb lcall inc add dec sbbl imul inc mov xchg lods fidivrl mov addl js aam std jmp scas and sub mov xchg jg cmp jmp jge push dec mov xchg daa mov mov sbb lret jnp xchg cmc mov orl icebp aad mov andl dec sbb sti xchg jnp fsubp sti mov int jbe (bad) dec pop pop scas dec daa pop pop and mov adc push loop xlat or (bad) cmp or mov push (bad) (bad) out push dec stos popf ret (bad) addr16 movsb (bad) js fs aam inc dec inc inc sub or orb jl fnstcw out jnp enter (bad) or and lret mov sub add inc data16 mov adc cli stos stos pusha roll sub (bad) lods jb and popa cld in arpl push jl out mov mov addr16 adc sub pop ret ss sub lahf clc cmpsl push xchg adc and std (bad) cmc push enter xchg jbe cwtl (bad) cmp sub insb pushf mov shrl out push leave loope addl jmp stos inc stos xchg jl out mov sti mov fsubrl jle jo imul aam and ficomp js scas mov daa cmp and pusha mov add call jecxz,pt (bad) mov jnp in in dec rcrl push movsb (bad) pusha decb je movsb mov mov jl xlat mov cli loop (bad) popa aaa push fwait test pop outsb inc push (bad) mov and dec cmp xor lahf mov mov sub outsb mov cwtl out mov outsb ret dec or sub enter out mov outsl dec aam pop xlat je outsb aam in cld incl gs mov fcompp xchg fstps cmpsl test in popf mov ds lods test lea and test (bad) jmp jmp jnp xor (bad) (bad) mov insl fcmovu addr16 adc enter mov mov xchg and daa in pop inc in stos xchg jns imul out push dec scas push adc sahf or push addr16 push jbe sub xchg pop dec test mov jle ret mov pop lret setne mov test jno jne push repz fcompp (bad) lcall xor xlat push ja push imul hlt mov adc mov cmpsb (bad) dec jmp mov std mov lods movsl mov sahf and sbb fs mov faddl and mov jne sbb dec cmc cmpb xchg jbe jo out (bad) xor ja mov repz mov lret xchg (bad) shrl dec mov pop mov xlat sub sbb mov bound inc pop mov push std ficomp jge (bad) repz rcrl rcl neg das inc arpl int iret leave fs testb hlt out push in repz fcoml int3 mov fsts fmuls mov hlt xlat sti xlat sub pop inc mov dec jns fxch jno aad mov inc sub scas sahf mov lcall lret jns imul fistpl pop in jecxz push fdivl popa jl adc push in daa xchg dec out scas cmpsb or insl fist xor fldl xchg in cli mov pop sub push je enter (bad) popf popa mov aas addr16 rcr adc dec inc inc dec mov jl jmp cli lcall mov sahf js movsl icebp push inc sbb sub sti cmp cmp mov arpl sub aam mull lods gs adc push dec lahf nop mov (bad) (bad) repnz out xor aad out jns mov xlat xlat sub stos cmp mov adc ds out dec mov cwtl ljmp jl jmp mov scas (bad) push sbb cli xlat jo jae sbb lock and push push aaa fisubr jns jmp mov lret add lea and xchg dec or popf push ljmp mov fwait jb inc fsubs sbb mov mov inc ljmp add cwtl sbb push fwait lods jnp pusha ror sahf (bad) push jbe arpl in cmpsb jb xor jmp jnp cmpl notl fcoml adc in cli sbb imul jmp aad inc cmp jecxz scas je inc ficom out or rolb lock movsl mov fucom pop js mov imul daa sbb iret sub push ret sbb inc jb inc mov xchg and jbe xchg fsubl (bad) sbb loope or outsb incl jmp (bad) out repz xchg lahf jmp jmp aas mov in scas fstpt ss xchg cmpsl (bad) push push push add dec sbb jecxz aam movsb (bad) imul rcll inc mov xchg dec add dec mov repz add sub jecxz mov cs ficompl or push dec popa mov lcall dec loope inc push cmovnp xchg fwait xchg test (bad) (bad) push adc (bad) int pop or insb push loope icebp push (bad) ret sub mov push xchg dec pop jge push (bad) cmc ret insl (bad) push aad movsb jo pop push push mov (bad) xchg or mov push mov notb divb push add pop mov xchg mov sub in (bad) stos jl xor idivb dec push or dec ja pop outsb loopne cltd pop out jl fmulp push push in jns mov add or leave push out fdivl pop jp jbe dec dec loop out (bad) sub pop push inc lcall mov inc pop fcmovne (bad) push mov pop (bad) ja pushf aaa mov mov pop xor or adc andl mov jp mov sbb mov jo rolb popf sbb stos mov sub mul add cmc xchg push pop ljmp movsb jno pop fucomip xchg int3 mov sbb fsubs xchg test (bad) fmull xchg pop mov cmpsb test fidivl shr imul rcrl out imul xor xchg (bad) roll jge xor pop stos sub mov clc sub sbb lods iret (bad) in das pop nop adc mov sbb dec jae lea lock imul mov sarl add inc rcr cli sbb icebp lret lods push ljmp mov fstpl ss and sbb mov mov mov mov cwtl adc (bad) test stos stos stos xchg mov movsl in lcall or jge divb jae and mov push adc push addl dec popf inc out dec daa sbb outsb adc xor push push jle decb aad psrad sbb iret push and add xor fidivl lret push mov ss mov fnstcw xchg aam adc inc sub stc mov ror xor aam add cld inc mov inc mov divb cld jg push xor jp dec dec test mov fisttpl xor add or aaa mov icebp or rol clc inc push and jno mov (bad) sub pop inc (bad) (bad) lahf push mov push mov jo test push cmpsb lcall mov sub jge jge jae insl imul dec add jmp dec stc jns xor hlt mov inc jl lret lea mov dec in or jl lcall ljmp jp mov nop (bad) sbb fptan aam dec fistpll sbb lcall inc add arpl pusha insl lret sbb sbb dec pop ret add test xor jl sbb addr16 movsl xchg ficoml sub pushf out lods xor les (bad) or mov sbb xchg repnz or mov or xor push je xor movsl outsb dec in push repz bound enter mov xor movsb add mov xchg out fistpl pop dec sub scas dec mov adc adc lods add push jmp shll cmp loop and jns mov stos aam ret cld sub lock push adc jl add loope inc push pop sub add xor cmpsl mov test cmovg sub stc ret imul jnp pushf sub mov adcl sub mov jg push sbb call insl aas jno adc push push push inc rol sub mov in lea in jg and sbb push inc pop push test orb imul dec in outsb repnz lret addr16 jl mov inc or subb ljmp rcrb lret test sti mov push rcl shlb xor xchg xchg mov mov test inc xor sahf xchg out sahf push xor cmp outsl mov es pop or inc rcl mov (bad) fcompl or stc roll pop adc sbb inc and scas les xlat into xor dec (bad) mov in mov mov sub cmp inc or xor push in mov in add mov push cmp ja inc xchg jne mov mov mov (bad) mov jne shrb (bad) (bad) fwait sub jne fisub add popa or je sbb notl or (bad) lcall shll or xchg mov cmp mov xchg push push push or mov into fs ret mov sub (bad) popf mov fildll cmp pop imul scas mov popf iret inc inc les data16 bound mov into fstpl mov (bad) fiadd enter jne ljmp mov dec mov (bad) testb insl test cmpsb or adc mov adc mov jmp into (bad) inc push xchg test out mov aad jne inc call (bad) dec rorb xor inc xchg addr16 push cmc hlt clc out cwtl insl pop out dec pop mov inc fdivrs xchg insb jne js inc ret push je cld xor rcr cli jp mov mov orl pop sub and stos cwtd sbb ds mov xor xor mov push (bad) or pusha sti test push imul push sbb lret movsb lea push mov jmp in sub add mov cmp inc aad lods add pop mov aas mov adc mov (bad) ljmp cmc dec insb lds xchg in in insl subb and cwtl incl inc cmp mov fcompl dec loope int3 adc test jo jbe jbe ret enter (bad) and and imul (bad) sub pop sub ja or clc ss into and loope jno sub mov sbb push push stos sbb loopne xchg (bad) aam lods in repnz cmp cmc fmulp inc inc dec gs loope aad pusha out std rcll pop cmpsl xor cmpsb sahf cmp dec fildll popf xlat (bad) fistpll mov xchg sahf mov push cmp cmp xor rcrl lret sub stos ja ror jae fsubl int lret adc sbb xor and cltd aad adc or jecxz push dec push cmp test mov out rcl inc add mov mov loopne cltd out in das fwait dec xor and and cmp dec mov sbb aam ret mov dec clc mov xlat adc jecxz arpl xchg xchg rorl adc add lds test fwait cltd add xchg inc jne shlb das shrl push dec aam ret les je gs and mov loope or stc push add pop insl or push sbb clc mulb xchg (bad) ljmp cmpsl lods and add fidivl je imul adc jge lea daa jne test stos in pop gs pop dec mov mov and jne dec inc mov mov xchg (bad) mov add subl push test jnp mov adc pop jle mul xchg aam dec push mov jb lret or cwtl pop mov sub dec in aas mov pop int push jns xchg inc into out adc insl shlb mov push test (bad) loope push stos mov xchg scas lods xchg jns cli sub cmp adc (bad) test mov add stos in jp xor jmp mov js (bad) push sub fwait jp mov pop mov inc movsl jno xchg test xchg inc sti mov dec adc repnz or xor les outsb (bad) aam testb test testb stos (bad) (bad) enter inc or enter inc mov sub sub xor xchg pop and cmpsl loop gs mov or mov mov repz mov mov movsl (bad) push cmp movsb lods ret fs imul jmp and jbe movsb sub int3 fdivrl xchg movsb push xchg repnz sbb mov arpl add scas lcall xchg jne sahf sti repnz mov push insl hlt cli push and insb jl push cmp jge inc xchg js xchg jb movl xor lea popa xchg imul jl and leave adc fstpl gs sub xchg xor mov js cmc mov dec insl xor pusha xchg test push mov lret inc push push adc cwtl movb jb imul mov cmpsb out and scas insl loope sub dec adc aas shll push mov sbb push and push (bad) mov (bad) loopne mov push inc mov push mov dec in ret mov xchg pop mov ret int3 (bad) lock dec shrb pop push pop jb xor mov add or pop daa lahf add lcall or les stos jp outsb fstl ret mov in int3 push rcl aam aam cmp enter push (bad) push xchg mov push popa xor int3 iret and inc imul fucom mov in pop jecxz fsubrl and push add xor push xchg pusha dec cwtl mov jp mov jmp scas or fcmove adc jmp lods adc inc pop lret dec push push push movsb push stos dec pop mov fcomps daa push jne jl fcomps fdiv cmc inc push cld (bad) (bad) jne xlat jecxz jne push inc fcomps fstpt jmp cmp push cmpsl jnp cmp xchg aam ja nop fdiv jmp pop or cmp cmpsl sub lret push mov mov int3 jnp aad div xchg dec jno add fcomp pop pop inc sbb mov lock imul into mov fwait push xchg lods cmpsl cwtl xchg je imul ja mov lret imul jnp bound scas cmpsb mov add outsb in insb shl xchg (bad) out push ljmp rcl ds ret fistpl xchg insb idivb fcompl hlt ss push dec cwtl in sub imul ret push outsb in fcompl xchg outsb popa cli pop stos mov in outsl cmp jne fmul fmulp xchg sbb jnp test push ss jno cmp xorl jbe into in pop leave imul mov scas push into imul das fsubs pop inc mov mov insb cmp jb cmp jb xor (bad) sarl fistpl sbb inc imulb fistl js cs (bad) ja cmpsl xchg arpl scas push jmp mov in push add repnz push (bad) add xor in fucomip dec shr into ss mov sahf cmpsl sahf insl rcll jle (bad) pop or adc outsl mov mov push movsl xlat test aaa (bad) cmp ljmp cmp cmp or jbe pop xchg loope mov xchg and in (bad) mov sub fwait mov test or push jb into and pop xchg ret xor jbe pop je rcrb les idivl std leave cwtl fcom in mov je rol dec icebp ret cmp ficoml enter lret gs test fldt sbb fucomip mov loope xor lret pop dec pop lds addr16 mov inc sub loop add sti xchg lret cmp mov fsubr sub lock inc outsl or popa xor lcall and adc outsb (bad) stc dec inc and idiv fwait ss and addr16 jp aam mov iret fistp xlat leave in mov mov mov outsb loope xchg and pop ds lods push scas insb inc test loop sbb in push mov push aad (bad) jnp in imul sbb and xchg mov push fucom fs loop bound sub inc arpl pop das fmull imul cwtl push out pop dec ss movsb xchg dec icebp jno mov dec mov ja push aad mov icebp incl incl popf add sbb imul test sbb pusha jbe (bad) aas mov dec shr fsubl cmp jnp lahf jmp fistp stos jmp sbb push fs inc dec cmp mov mov dec daa sahf aad adc lcall aam inc inc mov dec in outsb mov idivl fcomps mov insb xchg insb xchg sti (bad) lret pop clc adc dec fisttpl jge jmp mov ret shl ja cmp into fnop loope fidivr jecxz rcr sub repz lret mov out push scas jmp mov jb divb (bad) fwait cmp mov dec xchg sti mov xchg push arpl (bad) dec pop in jmp out fidivr push push ret xchg xchg repnz movsl jp pop insl xor xor and (bad) push push out jge fidivr mov iret into xchg fwait xor push (bad) (bad) pop popa mov xchg jae movsb sub jnp lock loopne,pn (bad) sub and and (bad) ljmp in sbb pop (bad) dec dec enter mov gs icebp sti push mov sbb (bad) push adc fwait dec and mov pop sbb add imull sub jmp (bad) imul xchg out xor sub arpl jns bound fimul (bad) adc xchg lret mov enter hlt mov cmp lods lea fistpl insb xchg jmp pop pop call adc pusha test popf push mov out add and in rolb xchg out movsl cli js xchg scas pop lock aas xor ret dec lock dec mov rorl cmpsl out movsl jl imul pop test sbb cmp adc push enter and and inc icebp fcoms inc mov fstpt add shl xchg pop pop scas sbbl add and aam mov dec mov std inc ficompl or jne js add jne and stos dec cmpsb jns pop inc sub xchg (bad) or push mov pop adc ret (bad) sarb push xchg stos mov xor xor outsl xchg (bad) mov pop or test mov mov cmc add push pop stos push xor xchg cmp jmp push mov push sub or or sbb pop push push mov das and cli pop test imul ja pop or (bad) (bad) rorb js movsb ds fimull sub dec pop inc stos insb lods xor sahf mov loope xchg mov sar mov push push stos int3 dec scas mov popa shrb inc lods js sub loope sar lds jnp mov and mov scas xchg stos inc push inc sbb lock cmp fstps mov mov out and leave sub xchg lahf prefetch aad fild xor popa sub dec mov xchg push mov movl push jno mov (bad) and sbb or xor fidivrl add insl xor and stos das loop jb sbb icebp and inc and imul nop (bad) dec or mov pop push jle xchg sarb stos mov pop cmpsl inc lret aas movsl std repz pop cmp add (bad) sbb cld aas add push call push xor mov cmpsb lret adc aad rorl aam daa test dec mov addr16 fstl mov and xor mov adc in cmp xchg clc mov sbb fwait mov mov push push in mov cmc inc arpl add fimull out pop fidivrl mov aas inc incb sbb cmp push movsb dec (bad) cli dec sarl movsl dec in xor out push insb dec std fldt pand dec adc add imul xor inc mov and jp or out sbb adc xchg mov movsl ss aas aad sbb push dec dec adc sbb mov sahf mov jae xor pop vmovlps pop pusha pop out sti test or stos test push cs mov xchg inc repnz mov fdivr adc (bad) push jmp dec hlt icebp sub shrl js push aaa rcll cmc sbb push lcall jge rcrl je cmp sahf insl lahf hlt gs leave popf fcomi xchg sbb xor xchg outsl mov insb test dec nop mov fcmovne pop xchg xor lcall cwtl lods jg dec and and imul ret cmpsb lahf or mov in (bad) lock das or lods int3 jle insl icebp jge mov adc jno mov inc cmp rcrb lea dec sub push push test adc stos leave pop mov sbb jne jae rcr flds out mov fdivr inc stos push mov push jle push pop jp subl icebp mov stc or roll movsb out pop dec mov add leave ds int3 test or jnp push lods add or shrl sbb rep xor pop pop imul sar ds xchg dec aas lahf setge adc rorl inc dec mov and and xor jns xor mov test push adc xlat mov xlat adc inc pop repnz clc sahf sub push cmc sbb stc mov in xlat push scas cs mov cmpsl sub enter xor inc and cmpsb xchg jae pop adc dec or js imul insl inc stos (bad) mov cmc loop inc mov aaa lea dec test push es sbb jnp add adc jne out mov pop jle jg pop imul loop cld and add jns xchg das in test xchg sti mov inc xchg in mov mov ficom mov push lret mov arpl jle ljmp inc outsb mov push push (bad) hlt jle jmp (bad) mov stos push cltd cmp stos push and xor cmp push insb xor or mov cmc inc adc cltd icebp je ljmp (bad) dec enter add adc in mov dec cmc inc jl test cwtl dec call andl and adc andb and jmp xchg movb les arpl dec rolb xchg pop xchg lds ret divb out dec jp cs into cmpsl dec in pop jle push out fstpl push inc dec jp push and ds xchg outsl out jo in test (bad) pop xor nop sbb sbb pusha in pop faddl cmp jge int sub or mov imul adc mov push pushf jb out cmp mov fdiv addr16 and dec adc jno and aas sbb cmpsl cmc arpl xchg cld mov cli adc mov xchg lds loopne,pt lret push test in dec push sub xchg mov (bad) sbb xor (bad) stc or cli scas icebp mov iret mov aas push mov inc lea mov fnstcw pop xor xchg rclb inc mov dec out push xorl xor (bad) pop fs mov jecxz (bad) cmp aas out and push sbb xor xchg cmpb cmpsl sti jg sbb roll into pop pop pop bound mov sub out incl mov mov outsl adc imulb jle cmc xchg (bad) (bad) xlat jmp daa (bad) mov add push add mov jmp xor sub aad ret sbb xchg enter popa ror repz outsb cmp sbb pop lcallw (bad) dec adc mov rorb and push idiv jbe testl fidivrl adc adc mov xchg imul and mov jg push inc pop push lahf dec inc mov jg xchg ljmp icebp jae sahf stc xchg dec jecxz fs loop jbe mov insl dec xlat stc add xchg mov aas xchg xchg mov leave inc pushf clc int scas fdivr ja aam dec cmp xchg add out sub adcl loopne xchg aas add mov jle cmp hlt ret icebp mov ljmp and sub insl mov int3 fwait xlat xor mov sub mov mov sbb js adc xchg clc and andl ja xchg push adc mov xchg (bad) dec in cmove roll es addr16 push jo xchg popa in aas xchg cmp hlt imul cmc cwtl sbb into loope int3 pusha repnz clc fwait inc xor out mov xor fsubl in mov loop cmpsb fst (bad) dec js xor insl add divl (bad) mov dec mov bound inc xchg fwait std xchg dec ja fsubs mov loope sub ficoml into add out or mov mov (bad) outsl sub mov rclb cld arpl cltd pop mov pop adc out fist mov (bad) std mov (bad) xor mov fbstp mov fldt pop aaa pop mov shlb jp jp lret inc (bad) insl out sub fucomip (bad) outsl popa cmp dec add scas insl xor jo fcoml outsl scas mov icebp xor fs jle inc cmp arpl push mov lock shrl dec scas xor cmc sbb jns outsl mov data16 into sub clc loope jnp lods into in (bad) in das in daa pop in jge fnstcw adc sbb (bad) fistpl mov loop pop push and pop ficompl movsb xor inc dec pop (bad) daa das fucomp data16 pop inc pusha dec stos sbb incl jno and sub outsl pop push xchg push lods sub sub and data16 jbe jge fwait pushf jge (bad) movsb out adc mov pop push outsl imul mov andb aad add dec in mov mov leave jae mov mov dec xlat sub mov lock mov push jb sti pop movsl dec decb ficomp xor push (bad) repz ja lcall mov mov mov cmpsb (bad) mov or insb fisttp out mov mov fimull imul addr16 pop mov push jo repz outsb jg data16 cs fcmovu leave xchg jmp and push xor sub sub xchg int lea inc mov or cmc scas dec and int3 xchg inc (bad) add mov xchg in adc dec insl (bad) in jg cltd iret loop push inc xchg lds ret push in push xchg lock sub mov imul inc sub (bad) lcall mov adc xlat jbe (bad) in fidivrl in and or jns bound dec negb mov sbb pop push cmc addb mov faddp ror push je pop mov add jno sbb out icebp jae ss xchg mov in fsub inc jns xlat mov sarl fwait je outsb add xlat jl test lcall inc lret arpl xchg inc mov sti sarb mov cmpsl mov fwait sar xor sbb lods adc mov sbb fidivr ss je fcmovu popf and bound je sti dec jle push mov add out test xor out xchg mov mov mov xor jns jno in lret stos imul ss dec in mov sub adc insl icebp dec test pop xor cmp sbb popa enter push push or adc pop sub rorl imul fcompl (bad) or mov fs insb xlat jno mov fcomp inc xchg mov jecxz push dec xchg xchg fs inc xor jecxz jge jno movsl incl scas or pop maskmovq mull sub adc das (bad) clc push sbb dec mov sub (bad) flds pop push inc add add sbb add incl add add push add gs aaa add add add xor xor add inc add add add add pop add add add add push add gs add add add popa arpl and and insb imul mov pop or add add and add add add pop add gs xor add add inc add add and pop add add add add pop add gs xor add add add dec add inc add add and adc pop add add add add push add popa jo cmp push add or cmova add add add add push push dec push dec inc add add add insb imul and add add (bad) add and adc adc and mov add insb daa add add add add bound xor add add inc add add add and pop add add pop add gs xor add add add popa je jae add inc add add add and adc pop add add add add or inc outsl insl insl popa outsb xor add inc add add pop add add add add add pop add gs xor add inc add add push add add add add add or inc outsl insl insl popa outsb xor add inc add add sbb add add add or inc outsl insl insl popa outsb xor add inc add add sbb pop add add add add pop add gs xor add add jne add inc add add sbb adc pop add add add add add gs xor add pop add jae outsl jb add inc add add sbb adc pop add add add add bound xor add add arpl add inc add add sbb adc pop add add push add gs xor add add inc js je add add add inc add add sbb adc pop add add add add or inc outsl insl insl popa outsb fs push add or adc ja incl sbb add cmp add popa jo aaa add add or push inc add add add add add push add popa jo add add or or add add add add add push add popa jo xor push add or inc add add add add add dec xor mov fwait roll outsl add aas enter add out rorb mov jae lret lods xor or stos add xchg jnp or inc add add adc popa popa popa popa popa popa popa popa popa popa popa popa popa popa popa popa popa popa popa popa add add (bad) (bad) (bad) jmp insl xor xor xor adc add or add add mov add or push imul add add je add fdivr loopne adc dec inc add add add sub add fildl inc add add add add add add push push or or or or or or or or adc movups push or adc adc sbb sbb sbb and and and and and fildl inc add pop pop or adc sbb and and and and and and and and and and and and and and and and and and and and and and and and inc add or inc or add adc add add adc inc add add add add add add add add add add add add pop add add add adc and xor inc push popa jno xor add adc push bound and (bad) xchg icebp inc mov push arpl and xor mov jecxz les adc add add add les adc add add add fiaddl or add add add add add movb mov inc loop enter mov mov inc dec xchg mov fistl xchg rclb xchg rcl mov addb in push add mov jle out orl add jge push and pop fcoms lret pop adc mull and mov les xorl mov push ja data16 dec dec lock add cmp sahf fbld push jae rclb dec push mov es out js add dec pop xchg jo inc xor ds add fiaddl fildl faddl mov add and add sub mov test jnp jae adc sbb into jecxz cli and (bad) and cmp mov sub push aas pop push sbb mov inc cmpsl push hlt or rolb push pop mov mov scas in das repnz mov (bad) xor hlt or imul xor lsl ret xchg stc (bad) flds xor incl dec (bad) and repz push xchg or inc into fild (bad) pop mov xor out bound pop dec es dec out or xor xorb sbb xor inc add dec int3 daa leave push (bad) jne dec push insl fadds rorb xor (bad) and inc sub fnstcw call jbe in into sbb aaa and cld push cmc cwtl inc and push shll out (bad) and not cld fimul jbe push rcr fs andb mov repz mov shrl fist lds fdivp mov sbb hlt sbb cmp pop nop cmp shl rorl dec jecxz add pop cmpsl roll clc mov int3 stc and push mov inc mov mov or (bad) scas mov lods sub sbb ja or mov mov call (bad) std xor rolb pop int sti and add mov mov mov mov mov cmp adc lea stos roll mov dec xor js inc gs rol fucomip xor mov call mov xor lea lret cli push das dec add loope mov hlt jo lock icebp sti and push push jbe outsl adc mov inc mov insl push sub mov in pop fwait xchg fldt loope push fistpl add mov mov dec jb (bad) repnz adc sub add inc sbbl xor (bad) pop jns sarb add outsl sbb jl lods mov cmpsb call mov mov cmp mov mov fmuls aas flds (bad) jae je ret cmp in ds dec jmp addl jbe js enter inc sti out ljmp (bad) stc add mov push (bad) sbb dec xchg push jne dec sbb cmpb xchg adc dec inc pop mov jmp add out xor cmc fadds cmp cmp sbb ja sbbl ja jns jle repnz iret lods out add sbb sbb add inc (bad) roll xchg test test inc mov mov mov jg adc sbb or inc lret repz pop mov stc mov fbstp iret and (bad) mov inc ja mov mov or sub xor push add or dec mov add popf mov lds lret pop ret add dec movl call mov add cs loop out push test stos mov xor insl lods lahf out (bad) ja xchg adc push xor jae cltd jbe or jno popa repnz jmp (bad) sbb faddl pop jecxz adc xor cs out sahf scas in int je push or inc xchg int cmp testb xor pop mov in xchg add dec push movsl lock mov xor mov pop fldl insb mov add popa fldenv inc mov xchg mov adc movl mov imul mov les (bad) lods jmp cmpsb rorb scas andl sarb xchg mov sbb jmp cmp add mov aam iret mov lods ret cmp jnp and mov ds testb lods stc mov sub stos xorl inc (bad) add mov sbb sub insb jno cld mov loop cmc push xlat cmp pop jnp mov or mov test imul xchg sbb shlb ss test inc or lahf and and or mov andl pop cmp and pop popa jb mov lds je push cmp xchg sbb mov movsb inc fsubr inc dec xor incb int sti and add (bad) inc lcall jnp pop loope mov out hlt inc mov adc jle pop push sbb insl adc mov cmp add sbb popf (bad) cmp (bad) call pop push push das mov imul enter xorl cmp into sti stc and dec movsl outsl mov pushfw mov ljmp sbb jle sbb outsb fcomip sbbb lahf xchg push jns cmp outsl faddl adc (bad) insb push arpl fcoms es cmp dec cmp inc pop xlat cmp xchg or inc stos loope test in out sbbb fwait cmp add fdivl sbbb inc (bad) push loop pusha cmp mov sbb lods sti pop stc mulb repz cmpsb jl aam inc shlb dec push cbtw loop fist (bad) jbe and mov ss mov aam dec adc lret rcrl pop jle push push stc and jnp repz inc insb lds sbbb push jnp push add push sbb jle and dec fwait inc arpl lcall cmp test xchg lret (bad) add je (bad) call dec add ss push ss insb inc add les iret add (bad) sbb mov jne add push and cltd inc adc orl int push hlt add pop jno cmc faddl insb lcall cmp int lea push dec xor add xchg adc and cld pop jmp cld push xchg or (bad) mov clc adc aad sbb pop mov inc scas int sbb lds addr16 sub (bad) jl cmp fdivl push push dec fiaddl cmpsb jb dec jno cltd fwait mov rclb fdivrl pushf rolb inc push out ds out mull les mov and in enter insl out and pop loop fdivs lock in push xchg repz mov add add prefetcht0 xchg pop push sbb jmp sub xlat pop movsl add push fucomip mov lods fcmovnu ljmp push push jmp jle add mov je add (bad) (bad) xor addl test arpl cmp sbbb and push jo fldenv (bad) ja add aad cltd adc pop dec fcmove xor push push dec mov add icebp daa arpl out inc stos clc mov aas inc add mov in and adc dec ds repz xor fcmove adc mov rcrl shrb pop sbb add movsb jne mov aas pop and lahf lock xorb leave add add jae dec sbb clc jns lret pop inc pop push jb dec and fwait xchg popl jno dec add mov mov mov sbb sbb ds jbe into jle pop cs fildl or (bad) mov inc push shrb loop test push cmp mul les jge cmp ja pop jp xor jbe add add lock loope sbb pop jecxz inc xor cli (bad) xor dec inc push and adc lret and adc sub adc incl daa and inc (bad) clc popf mov push addr16 shll sbbl shll shr in fstp subb (bad) outsl insl (bad) add icebp insb popa push aad pushf sbb in push jb roll pop jnp inc xchg roll je icebp out mov mov dec sub or cmp push in inc cs and sbb aaa fdivrl nop push mov and cmp shrd adc pop orb clc mov or cmp arpl jecxz repnz out mov lds lcall movsbl imul cmp daa xchg or cmp out leave push push aad cmp orl pushf and (bad) in sbb push pop mov add push (bad) cmp or movsb stc and aas aas xchg add enter add inc je (bad) adc or sbb xchg add xor or shll or aaa inc ja (bad) pop test out jo jg stc mov mov mov inc and jp add and xchg (bad) iret les mov out (bad) jbe xor pushf and or rcr addr16 push test movsl mov int3 mov mov sbb sub jl push (bad) cld repz lea icebp inc bound (bad) inc cmp sbb (bad) call cmpsl rorb inc mov movl and push adc movsl pop mov ljmp jp dec push push xor pop call adc adc sbb inc inc imul and cmp int push es fadds xor data16 xchg pusha rorl mov pop lcall push data16 inc mov xor mov lds stos (bad) jbe inc and iret or test pop into (bad) sbb pop add popf aad inc outsb nop out mov jns or stos cld xor and push mov add gs add sub push aas ret nop popf enter mov dec sahf rolb push call les push xlat push adc lret push jle sbb mov jge sbb mov (bad) int (bad) jmp leave add pop shrl lods nop jns clc push in inc mov stc and in test mov mov bound sbb mov and lahf out sbb mov roll jae xor jmp loop push add inc mov cmp js jmp add addl (bad) std shrb mov repnz sbb adc mov mov jne xchg in dec adc ret (bad) or mov mov jp enter sub inc push sbb (bad) adc jae cmpsl and mov int3 mov pop mov stos mov stos les jno or push lret and lahf push pop push xor add cmp flds cmp mov or mov inc lods test mov mov outsb dec xor xor sub cmp xorl int inc (bad) rcll mov pop cmp or pop or cmp enter negl fiaddl loop daa sbb xor scas into enter adc add mov jnp xchg jb ret inc (bad) (bad) jp (bad) shlb mov xor sbb nop jo icebp mov dec aas xchg and xchg lods js lret in push jmp addr16 jns pop dec jl add sub (bad) sub cmpb loopne sub cmc inc mov mov inc lret out mov mov or pop stos fs add shrb mov cwtl fwait mov xor rcl cmp push and sbbb push adc add popf fs je pusha outsl xor inc adc or sti out sbbb in push (bad) repz mov and push in push dec or push adc mov push mov je fbld sbbl loopne sub je fwait std aam push cmp fwait jle mov mov jle add les shr cmp mov push add fs mov int mov aaa and into xor sbb ja fnop sbbb mov enter jmp adc stos dec xor imul nop xor push mov fiaddl les sub (bad) ficomp jmp mov inc (bad) std iret lret push sub dec mov stos inc mov inc and fwait inc add push insl xor ja addl daa fstl add sub (bad) pop xchg and push cmpsb call cmpsb jnp add or jb jl adc add dec add push test out dec int pop xlat or rorb les mov ret jp cmpsb dec mov movsl add cmp pop leave add mull (bad) xchg or jo or daa scas icebp pop fiaddl or adc add cmpsl aad (bad) xor dec (bad) sbb lcall and aaa mov les xchg fs sub pop data16 and insb push xorl inc fdivl lgs and fimul out mov sbb push jmp push daa roll je test xchg into vpunpckhbw test jae jne xlat fsubr mov mov clc dec lcall nop inc adc add mov or sub mov mov ljmp sbb (bad) inc pop pop int imul push push fiaddl and pusha mov or mov add inc cmp imul add xorl jle iret jmp add adc sbb fmull into push sbb rcrb xchg jo adc je add push fs out sbb in xchg adc cld enter mov (bad) repnz inc mov enter sub daa jns xlat mov sbb cli fiaddl add (bad) fwait and xorb scas pushf push cli out fiadd push loop insl and fstpl test adc pop push add cld push sbb incl hlt lahf in push xor fs adc flds mov xorl cmp add sbb bound ja ret sbb add add pop pusha cmp int sbb mov repz ja stos or incb out dec mov adc mov jno icebp inc sbb or aad jb mov pop add xor (bad) stos inc out inc dec sub or mov push jno ret xchg xorl add cs inc addb hlt sub in dec imul in or into clc ds push pop mov sub (bad) lods js adc add push push cmp fbstp sbbb push popa ret push mov rolb movb adc inc and xchg add fcmovu (bad) cmc inc into clc xchg addl loopne cmpsb call repnz mov fistpll xchg (bad) inc add pushf clc and mov or or test dec rcll add and repnz out mov arpl inc xchg add in sub jmp jae (bad) bound (bad) push jg add ficomp dec add icebp inc int3 (bad) push mov add inc push xchg cld lds xlat in inc aam aam jne fnstenv mov push inc inc inc aaa outsb push std sarb cwtl cmp dec jmp cmp push addr16 dec mov lea test xchg push jnp fstl add pushf cmp ret and adc push int3 movsl outsl mov jno dec pop test pop iret fdivrs mov jne sub dec stc inc (bad) or loopne cmp pop fdivl adc pop or sarl fisubrl cmp fs shrl push push fdivs out inc or iret mov jbe popa mov add push xor pop in jne xor push (bad) sbb ljmp rcll mov push sahf mov adc mov inc jns add daa sub or scas pop sub push pusha jmp cmp sub dec xchg lds daa stc addr16 lahf cld mov jb lret (bad) sub pushf rclb inc cs or test xor ficom sbb xchg stc and ja repz iret mov push cmpb loop scas push inc setno aas and pop adc shrb inc aad fucomi sahf lret mov (bad) dec add adc lret aad (bad) mov cli mov mov push push inc inc inc pop xor or mov xchg jno jbe pop mov loop stos andl icebp out (bad) daa jae add cli xchg mov es sbb ja ds flds push sbb inc test lds scas aad pop xchg loopne sub or xor xor out iret and shl push jb jmp sbb xor sub xchg add mov (bad) pop insb mov mov add add push inc push inc xchg int imul ljmp xor (bad) xchg push inc pop push imul jmp mov fidivr jnp rolb sub mov leave add gs pop ds push push lock xchg test call sbbb cld shrb rolb js inc mov aaa in inc pop mov mov les adc or fstl jno cmp add push adc xchg mov lahf and pusha cmp jb mov test xor rcrl and pop ret mov rolb ljmp push mov movsl sbb clc test ror mov lea pop xlat insb and sub or clc nop and in add dec push btc outsb cmp outsl fnsave and cld push mov cmc (bad) sub pop xor shrl and fsubs add cli cmpsl lcall cmp jecxz mov inc lcall mov lods (bad) loop les enter es add sti xor inc add pop push lret add mov (bad) adc inc fidivrl dec aaa dec ljmp cmp inc add shll insl cmp add add cmp add in or push std xor mov push xchg dec inc inc mov push pushf rclb pop test mov call flds jle fcoml imul sbb (bad) dec in xor dec stos xorb ja shll out or push xor jbe dec ret add sbb subl sub lods arpl test sbb into adc sbb sub loop stos inc pop add sbb inc mov in into clc add or je jl add test mov or test fldcw and and out or outsb aam movsl in icebp inc popf sbb inc fbld mov add fsubs push push ret push mov andps outsb inc pmaxub aad dec pushf out subb push stc or repnz lret inc mov pop bound (bad) mov ds sub into adcl lcall cmp jo cs xor ss lods or push jne cli int cmp mov mov andb popa fstpl fsubs and sub add xchg fwait or adc sbb or insl sbb push push test sbb cmp adc lds nop xor or lods jl insb cli mov jbe jge or sbb sbb imul and xor push push insl cmp inc pop push mov jecxz inc sub jge xor xor push imul mov xor bound jae inc in and mov sbb pushf inc loope es imul je sti lds mov test adc xor popf imulb cmovs sbbb mov or push mov stc mov mov out incl lret mov jbe sub lcall or xlat in push sub add push or outsl sbb es push and jno add mov push lret inc loopne loop mov mov mov outsl cmp or jp andl iret sbb dec hlt push pop xor xchg push popf popf mov mov mov and sbb xor mov inc xor (bad) xor (bad) stos add pop ja add loop dec cmp scas fcoms rcrb mov loop int3 jp aaa xor sbb cmp mov sbb rorl sbb call xchg add inc das mov (bad) cmpsb push inc enter in test stos inc push mov dec lret data16 cmova dec test into aas jp lcall mov push push int3 xorl incb jecxz pop out xchg out add push adc pop pop sarl jne cs inc ljmp mov or jb jnp dec inc inc lea xor icebp insl sti lret push pop add (bad) aam jae inc mov xchg or test sub ret mov dec mov dec outsb out stc sub pop cmc pop cli insb andb push xchg lods and clc fisttpl jecxz repnz add rcrl push (bad) mov sbb aam lret jns and nop pop mov ja or ds mov mov fbld subl ja inc mov nop xor js jb xor pop add push pop aaa subl mov into jge sub mov popf mov adc movsb dec cmp je inc sti mov fcomi add aad les cmpl into adc imul and loope lock and addr16 dec shrl add mov mov cmpsl push pop lods push jbe add xchg pop cmp rorl mov push inc add (bad) pop mov inc (bad) fstl inc lcall pop repnz mov iret leave add (bad) xor dec rdtsc (bad) cmp adc xor pushf mov sbb push or dec arpl mov sub cli mov popf adc or add add orl (bad) test out cld shlb lcall sbb insl lea lods adc mov lods and ret pop lds test rcrl ja mov jnp mov sub rcll mov or sbb xor mov inc inc dec jo sub loop push inc xlat fmuls add mov orl fs imulb or xor xlat in sahf fisubr mov outsb sbb cwtl inc mov or mov jl lcall sub xor nop incl jmp jg xor add jo inc aam roll xor lods es jl dec data16 adc dec sub push loop or jae in (bad) lea pop sub mov enter cmp add outsb jecxz xorl dec out daa inc jmp dec cmp negb jno stc dec lcall push or sbb std rorb int jb push inc cltd push loope push xor xorb lahf pop xchg add movsb subl pushf cmp push call add stc push aam shlb aam cmp and lds (bad) push js sbb push sarl push mov out lock mov shll out mov mov or fild pop jbe ljmp add into fild xor bswap lahf xor push fnsave scas xlat inc mov add nop pop insb xor pop mov pop dec add add aaa cmp js dec mov jecxz mov jge fisttp inc lods jp sbb divl xchg sahf cmp cmp push leave inc sub adc popf pushf loope push mov mov je test mov pusha lcall xchg add sbb and fdivl addl pop into push mov rclb clc daa jl or mov loope in movq in subl jo dec and ss cs mov ljmp pop pop push imul (bad) pop inc add push loopne lret popa repz (bad) or inc adc mov mov add sarb adc push test inc xor xor push je add mov les xor ficoml xor cmp sub stc sbb in ss and inc push fstpt add push lea in add in out xor add push mov loope addl call mov add setp jle in pop (bad) xchg push js test mov mov popa lds add pop adc sub div inc sbb adc (bad) repz test pop cmp cmp adc nop jb mov adc add jno dec push in hlt inc fwait stc jp add or mov push or into (bad) int dec ss push out xchg add ret push adc cmp test loop xor les arpl les (bad) out inc mov mov mov cmp jne sub jno gs push pop and insl nop and add test and outsb cwtl jg outsl and cmp push push adc sbb adcl insb or fwait lods std rclb push and jbe inc sbb (bad) mov push icebp stc mov in cmp fiaddl sahf and lret in jbe xchg fcomps lock jp bound test imul ror dec mov repnz push insb mull mov sbb push cwtl arpl incl je arpl call pop pusha fsubr pop cld nop or pop pusha lock popa mov dec mov lods lcall fadd test fmull stos or add sbb je push mov incl jb jmp mov push inc psraw jg nop xchg cmp int add mov aas mov hlt adc aad ret and subl rcrl push dec pop sahf inc mov sub xchg adc call inc fnsave fwait lea add cmp adc inc jmp enter inc aad xor mov push mov insl push (bad) push arpl cmpl pop mov in sbb jae aas fldl mov cmp add mov mov int es movd or mov or push shrl ret xchg lds aas cmp dec push test lods shlb pushf adc mov in cli sub mov leave add cld sub roll cmp rcr sbb cmpsl ffree in sub xchg or inc jbe movsb mov gs test inc inc inc jle pop push push push out adc dec push rolb lahf and adc adc sub imul inc iret mov (bad) add sbb xor fnstcw add mov aad rcl add imul inc mov mov es sub aaa push loopne fcomi inc out sbb xchg dec sub adc lds mov xor add add andl ja xorl (bad) cmc inc push push aad sarl dec cmp adc fcompl inc push lock data16 loop insb stc mov mov jg testb pop sbb add xchg inc int cmp mov daa adc bound inc mov andl insb inc inc stos insl and push insb xor int bound into js cli mov in sarb xchg fst jb sub mov in je or insl and das sbb fwait dec add sbb sbb sti sub repnz sub jno jb (bad) pop lcall enter push fcom xchg pop push sub insb mov mov out xorl and outsb fxch push addr16 cmp inc push xchg loop enter in adc jno shll (bad) push inc inc testb shrb sahf pop jmp add xchg insb or adc cmpsl lahf loope lret roll fwait push jg push pop mov int repnz scas push mov addb or xchg in clc enter mov add sub mov scas (bad) push mov adc rolb outsl out and out test cmp fiaddl pop iret adc and add jle aaa arpl jp ret ds cmc leave add arpl sbb push daa jne push or addr16 js or mov repz push clc dec loopne sbb les mov xor or jl lock cli aaa mov dec pusha fsubr pop cld nop or pop pusha sbb sysenter pop push scas aas push jge ss les pop arpl mov add push cmp icebp lret std enter push and insb sbb or repnz jb cmp cmpsb roll mov fiadd or nop or or inc push xor jle or jmp xlat iret xor rorl aam (bad) sbbl in cmpl faddl pushf icebp fbstp jge push (bad) xchg xchg daa jp mov lods fadds cs sbb imul add bound push addl adc out (bad) cmpl mov fstpt mulb inc mov out lret loop jle inc cmpsb (bad) shrb mov call mov daa and sar xchg roll clc mov mov sub mov enter cltd loop push dec mov add arpl push cwtl (bad) fisubr jno movsb mov cmp ds push add jbe out inc rcrl out fiaddl or and iret mov scas aam or mov pop loope addl inc (bad) pshufw inc push out mov or inc das fiaddl cmp (bad) inc out call icebp jo xchg icebp jp popa loop xor xchg adc (bad) repz test fcoml faddl mov push ret xor out pop sub repnz inc pop stos push xor cs and dec and sbbb (bad) pop ja cmp mov repnz lret add mov inc je xor pop addr16 xchg add xchg push dec gs out inc mov inc adc adc push or rcll sub add js fcoms or jecxz cmp jmp (bad) xchg mov test sarl xchg jecxz or dec push fidivr and cmp mov lods sbb adc lods aam scas sbb dec into sub add int rcr or test imul in inc jmp and xchg sbb and lods cmc mov cmp jb or dec mov xchg jp cwtl add jecxz or inc aad jp xor sbb mov jb cmp rcr mov inc sub icebp inc push mov add inc cmpsl lds or add call sahf mov dec inc sbb xor ss call jmp dec cmp orl xchg test out sub add nop sub inc and lea push pop mov nop adc mov pusha mov cld ss mov cltd enter cwtl inc push add ds or mov dec and adc inc lcall xor push je in mov (bad) mov (bad) addr16 pusha loopne add xchg (bad) dec inc mov ret cmp std test fwait pop xor les cmp jno jo test loop adc mov jge sbb clc mov sub pushfw add sbb sbb inc and mov stos inc inc fisub mov test mov sarl loopne inc mov xor pop (bad) (bad) mov jl movsl sbb inc dec (bad) sub (bad) hlt mov push sbb xchg mov jns repz test scas mov jno push stos pusha call dec int push les int3 fildll push cmpsb push fcomi incl xchg adc xlat jb ficom add sarl mov add mov mov pop sbb or jno lods inc xor popf cmp addb outsl push loopnew or push and adc xor xor fcmovnb push mov adc rcrl (bad) adc jb and out add adc mov (bad) inc xchg xchg mov xchg shr fstpt and mov test inc rolb mov pop xor out pusha cmp nop sbb sub xchg pop out inc mov push (bad) adc mov push inc inc add jnp push call inc aas mov in inc inc push or test xor mov repnz in ss xchg or dec shl repz inc lcall fimull or fldcw add xor sbb cwtl mov cmpsb adc xchg pusha fs lret and in inc push mov bound int lods pop outsb scas lea inc push dec or es or inc popf xor mov lods (bad) sbb sub adc ret inc jmp test test adc sub adc clc jp jno in test pushf push lahf mov call nop jbe push push lret jo fstps sub add adcl hlt inc inc mov enter test mov addr16 in push pop add add jo shll sbbl push inc mov (bad) mov sbb xchg or pop jmp or dec mov ss push fwait imul lods mov jb stos inc inc imul loope or int3 inc inc cwtl mov xchg push movsb fbstp pop adc mov pop xlat in add mov jbe jne mov fisubrl ja and fcmovne mov or dec sbb xchg fdivs movb or mov push das and subl andb and dec test inc xchg or (bad) in xorl lahf test mov leave add jo jbe adc popa and jp cmpsb sbb jns frstor cmp xchg fildll in and arpl push pusha cmp leave add jns cwtl jl adc or push sti out or mov jle add (bad) push dec cmpsb (bad) arpl push xchg adc fs sbb loopne sbb add xor mov and dec dec cmc inc dec imul mov mov mov loope sti mov mov mov jl inc sahf rorb sbb push out lea add or sbb sbb xor mov inc mov movsb sarl lock and adc addb jge and (bad) sbb pop xor in mov pop add add rolb cmp adc mov add adc into lock sub adc je sarb xchg inc ljmp mov shlb inc mov sbb mov pop mov mov mov pusha popf nop push push movl scas aam xchg andb push jb lods inc xor cmp add mov cmp mov fstpl add mov mov mov cmp mov bound rcr test mulb mov xlat xor mov orl adc lcall roll mov sarb orl push enter lods and xchg cmp cmc sub add nop jbe or ret popf mov insl mov in imul fistpl jmp mov or cs push dec cmpsb mov out mov xchg inc or dec jecxz xor hlt jnp push sub imul sbbl aam insl xor jbe shlb adc and adc out sub subl mov and scas sbb dec dec mov pop add pop roll cs roll xor sub rol std mov subl mov int3 mov mov xchg inc (bad) jb ds jnp cmp fisubl add int stos in dec adc xchg pusha push mov push push cmp roll cwtl out sub in lahf inc add fnstenv (bad) or (bad) aam sbb xchg int mov clc inc int ljmp xlat mov adc and fadds or dec add mov sbb sub or (bad) sahf dec sub add stos inc ss or or jmp pushf inc jb imul add pop mov cmpsb aaa lahf inc adc je mov lds cwtl jns,pn popa pop push inc in sub shrl fnstsw (bad) flds subl jae lahf cmp mov jl sub inc xor push pop ret push test fwait mov andl in inc (bad) movl ret test push fs push dec or sub orl neg je test (bad) cmp iret lcall dec stos (bad) loopne nop inc adc out shl gs pop inc out inc lods adc jbe add cmp mov mov xor xor sbb mov (bad) push adcl jle inc pop iret fiaddl repz nop dec push test pop add sbb js loop imul jmp in mov add loope mov cmpsb addb pop pop es mov push pop inc adc movsb dec cmp pop push mov adc repz inc jmp adc rcrb mov or mov lock inc pop jo scas je push clc addr16 leave add mov fiaddl mov cmp fstpt add fdivl loop add sti dec add dec movsb in sbb or or mov add mov test push insb mov adc jo js sbbb insl test stos push jmp and (bad) jne aam push inc cmpsl sbb inc mov xor out inc xor scas mov adc movsb add sarb jno pushf adcl cmp ja lret iret or adc lods (bad) sbb xchg or sbb fcompl out roll hlt scas xchg inc push sbb jp andl jmp or sbb mov aaa jo push cmp adc and xchg adc mov mov stos popf xor add in addr16 in movsl dec or mov xchg add mov adc daa in push stos gs pusha mov dec ds es out cmpsl xchg cwtl inc int mov (bad) add cmp mov or mov inc popf sbb js xor mov push xor push jbe loop loope in call sbb js (bad) bound sub dec ror stos (bad) push sub insb sub push (bad) sbb adc cmp cld sti addr16 add jbe cmpl (bad) xlat inc jle loop out push test imulb push outsl xor add adc testl in in sbb inc daa and jecxz inc mov sarl push mov roll sbb or adc adc mov cwtl in dec dec inc cmp dec mov fstps jp sahf ret loop mov fmulp addr16 xchg pop adc push cmp inc mov mov add adc dec and pop mov dec xor adc pop xor imul mov add les mov psllq adc inc ror push or fs insb ficomp add xor pop lds ret pop inc std inc add dec add push inc movb aam test adcl sbb les dec repz jg or inc loopne lods data16 ja sub movsl (bad) pop add xor sarl sti mov out sub adc mov sbbl sahf xor mov mov fiadd hlt mov add jae fidivrl add roll push dec sbb pusha add pop mov andl mov inc rorb mov mov cmpl in mov jne ficompl add repnz and pop sub add add notl xor add inc mov xchg mov fistpl repz fnclex sbb jbe repz mov movsb push roll add jne xchg add xchg bound inc imul push push add sbbl jge incl or fimull cmp mov sti xor and mov pop sbb lods and aam push bnd push xlat inc add (bad) call outsl inc repz mov (bad) (bad) ror nop sub pop cmpsb pop push in fisubr addb mov outsl cld push sbb aam imulb xchg or pop pop (bad) inc push imul test sbb adc arpl inc lods cmp xchg pop push add and test xlat adc insl test lods push out and shr lods sub cmpsl sbb je loope cmp fidivrl test add test or jo xor push pushf insl daa and or (bad) and iret cmc in das mov sbb nop repnz lea sbb das iret jp sarb xchg jg iret sar mov mov add push cmp inc jl push js icebp aaa and dec lea jecxz cmpl mov int gs jae push mov roll cmpsl addr16 in cmpsb shrb dec iret push dec pop inc ret add leave add insb mov roll sbb cmpsl jmp sbbl clc lods in sarl add cs pop add sbbw fidivrl and and and sbb out xchg iret push push and std sub cmp sbb daa repnz les sbb daa data16 add mov mov inc pop pop adc cmpl out push into clc xorl popa add lods lds push mov inc rorl adc subl jo inc jg add inc in sub call in dec rcrl int mov add push xor mov outsb mov fbld inc out faddl call mov outsl stos push cmpsb loop nop cmp ret or nop xor aad add push mov mov mov in roll adc xchg jb fdivrp scas xorl push fnop cs mov mov movsb adc sbb shl gs fiadd (bad) jae mov xchg inc xor int cs or inc hlt push iret xchg out into push jbe pop pushf adc (bad) icebp mov pop pop push sub jne jl and xchg push insb adc and js xor dec sbb sub lret mov inc fiaddl addl add jl push mov out fdivr stc and (bad) sbb rolb cmp xchg les scas xchg add popa cmp and mov subl (bad) inc mov sbbl in inc sbb mov dec push push jbe xor shll xchg inc aam push push andb xor add xchg sbb inc dec clc jge add incb xchg or scas cmp xor orl fisubr (bad) sti cmpsl int andps jne in jp mov xchg (bad) call adc pop inc jl incl test push int sbb (bad) mov shrb je ljmp daa lcall fdivrl xlat or movsb sbb adc jbe adc inc aam add ffree push (bad) jae lcall and cmp mov in insb arpl push fcmovne add aaa daa jb dec sbb jl mov push aad or das push pop inc stos add sbb lret add mov add in mov (bad) xchg sbb ret std dec sub loopne outsb test popa add pop rcl mov sub cmp arpl sub mov test sbb incl push or out cli cmc inc inc push xchg leave add outsl push nop andl popa add mov mov lcall cwtl jecxz cmp and mov mov aam mov cmp idivl cmovbe mov jecxz ret shlb push dec inc stos sub and lock inc inc mov cmp rorl push adc cmp sbb push jnp inc outsl js js push xor mov sbb mov arpl xor add mov (bad) cmpsb sbb adc xchg pop inc add cmp mov add sbb pop mov add push (bad) inc insl scas jg inc aad adc lds enter std jecxz int add push imul pop sbb fdivs push mov cmpsl ss data16 outsl mov jbe call es repz inc call rolb hlt adc (bad) std xchg ljmp aad pop mov xchg mov hlt adc cmp sbb jp jecxz repnz cs add sahf hlt add push and flds ds inc in sbb loope repz lock stc jl outsb mov daa dec bound ds aas dec js pop pop aaa movsb jae les add orl (bad) stos inc mov inc (bad) nop pop cmp dec in mov hlt ret or aam jb mov add mov add adc push (bad) mov jae setbe orl negb lock mov call mov dec mov test enter sub sbb xchg (bad) cmp xor xorl mov mov adc cmp mov mov stc mov jbe mov aaa add mov mov pop loop jno jmp adc sbb sbb add push mov inc pop mov cltd hlt inc ljmp or loopne xlat dec rorb dec xchg test push fcoml fbstp iret adc mov mov inc mov inc pop sbb daa stos faddl sahf popa add adc dec mov (bad) cmp sbb outsl stos clc imul jnp call add pop dec jge daa dec add push int3 insb leave add sub in pop pop bound dec popa sbb mulb pop (bad) lret pop popa add clc es xchg nop adc and and movsb out jno cmp prefetchnta cs add mov or adc test jb and add enter iret push and mov add xchg popf mov pop cmp push sub int popf popf outsb hlt push movsb pop push into das cmp cmp in mov xor inc add adc call cmp xchg out cld mov xor xor movsl xchg popf push dec add mov sub xchg cmpl push add incl cli mov (bad) std jp and pop repnz or inc xchg lock iret leave add fstps iret mov outsl lds mov dec (bad) out repnz mov arpl iret pop fimul dec fisubrl inc or orl xchg push stos inc arpl mov std (bad) xor and (bad) call jecxz les addr16 cmp push dec mov test xor rclb and mov outsl addb cmpsl xor imull add sbb and push sub inc outsl and (bad) inc mov add jle inc jae jbe sarl jbe and mov shr subb sbb xor pop inc and roll mov call sbb clc inc lcall fwait clc mov add fiaddl push sbbb (bad) lahf leave add cmc mov cltd fdivs add inc pop mov and sarb xor int dec sbbl shlb rolb test and xchg mov fisubr sarb mov bound mov imul xor out mov or mov in inc fiaddl cmp mov bound add push xchg add in cmp or push insb imul jo dec add inc loope je push out inc std es add icebp inc xchg xchg or js lret mov enter call fidivr add mov and mov ds xor imul ret add cmpsl sub push movsl add xchg add dec sbb ds push mov lahf ret xorl push (bad) lahf xchg push cmp mov xchg push xor mov mov push and sbb mov ds jne or out and sub jo and (bad) jg add sbb and push pushf push ret scas scas jp push (bad) push jns sbb popf mov dec or sbb and pop jbe jns lret mov shrl and dec sbb mov mov mov ljmp and fcoms cmp das mov mulb arpl aas mov pop push mov mov pop or cwtl outsb and inc stos jns jge mov add mov fcoml sub ja jge mov lahf push mov pop jge les xchg (bad) push jne negl add ficomp dec push fstp pop push push fld int sub lret cmp push xor andl adc outsl ret int3 mov add pushf sbb fs jl inc icebp and shll or rcrb rorb jecxz dec cmp xchg icebp popa ret mov inc and repz mov xchg ja cmp add add rcrl les orl add loope aaa inc lcall mov aad subl add or fiaddl or lcall insl xor vmwrite inc xor mov mov inc xchg icebp cmp jle inc pop iret fwait (bad) xchg (bad) xchg addb cld shlb mov xchg (bad) aas and fdivrl mov mov das xor xchg and mov adc js pop gs inc dec pop push mov push sub mov aas cwtl push hlt adc aaa xorl inc inc dec mulb shr push add fmull popa (bad) mov sbb in bound ds aam nop lret fs ja xor loope mov mov and mov mov push jge xor frstor mov mov or in mov popa xchg mov xor push sub dec push or sbb or push push sub add jo sub sti lods mov loope popf mov or enter lret loope hlt pop pop adc fwait test and scas imul add xchg in and add jmp add jp paddw lods (bad) dec out nop inc mov push fs or pop inc pop lret add mov add popa jecxz and pop sub add pop dec sub add pop pop nop lock out push out sbb pop shll out adc loopne or push into jo cmp es mov hlt xchg inc dec (bad) mov daa test sub fcomp jg sbbl and mov insl les sbb mov in sub dec out adc idivb in push cwtl insb cmp lock sub test inc sbb mull nop jno pop shlb or sbb inc testl jp inc cli popa mov pop lds sbb mov or push cmc jns adc add sti pop xor sbb nop pop movsl or ret jmp xor flds inc shll cmpl popa cmpsb fdivl shl sbb adc sar enter (bad) int xorl int int3 pop mov and and sbb out imul mov xor test sbb scas cmc loopne test or sub push sbb add sub dec adc in enter (bad) mov ficoml pop push (bad) in enter std nop cmp fcomip inc stos inc push pushf loope je fadds push and mov adc cmpl xorl pushf jl dec dec jg lods mov mov fcoml cmp push add sub je addb enter add pop mov std in in or nopl cmp cmpb enter pop xchg aaa lock pop push dec jne jbe xor jae xor outsl call in inc stos aas ljmp mov std movsl push push jmp jle ret push iret decb addl adc cmp ja and mov out je test inc xchg or iret (bad) (bad) mov ja sbb jns mov ja or pop sbb dec jae add dec aam jg or or inc test mov xchg imul mov mov mov call sub stos sbb cmc inc push pop mov jg adc xchg sub push cs pusha jnp dec cmpsb pop aaa inc repnz es pop fs jnp les test shrl aaa int out cwtl inc (bad) xor sti and ret mov subl fst or fnstsw sbb xchg or mov mov icebp add inc sub inc xchg xor frstor mov mov xorl rclb cmpsl add push dec push lods xchg inc test sbb loope sub sti lods mov or or pop or mov xchg or inc orb sub inc push xchg mov lea and add jmp nop adc mov and stc inc mov and ficoml sub call or cmp test (bad) add pop dec sub add push arpl loopne pop xor ror shr pop add fstps cmp add or push adc adc jno fucom fimul jnp movsl xchg pop cmc and scas insb mov js adc inc iret and mov jbe gs cmp cmpl (bad) clc xchg sbb push and stc xor pop xor xor inc (bad) push fcoml sbb jno xchg notb and jo inc scas mov jl jo test fidivr mov ljmp outsl stc mov xor mov jnp in adcl cmp jbe mov frstor negb repnz cwtl stos js or xchg fbstp fsts push test ffree addr16 xor and pushf push dec jmp xchg add mulb sbb xorl iret nop sbb mov ss cmp cmpb push aaa iret xchg push lods and push lds dec aam dec add loop jno insl sbb sbb fiadd (bad) or in push cmp cltd push cmp adc or inc lcall sti mov ljmp push (bad) fildl adc fldl xor test cld mov inc scas mov mov fisubl ss pop push hlt adc push je adc dec inc add mov jle add add cmpsl push inc loop into and jecxz add cmp sub inc add out mov fsin push or loope adc adc add or sar mov ds cli fisttpll push push dec mov test fsubrl jbe pusha stc mov inc sahf les mov jmp rolb (bad) mov (bad) roll sbb jno rcl sbb add adc jbe add and cs in inc popf sbb inc inc test jmp out popf mov nop in adc incl enter adc subl xchg incl in or rcrl dec adc jg or btc jae lcall (bad) jbe stc and push pop movsl add lcall sbb xor and mov sbb pop push inc repz setge sbb lahf adc xor mov jecxz and add mov push mov jg xorl nop push mov mov out xor addl cmpsb cmp ss dec xor or leave fnstenv mov or fmuls sti les adc ss push or repnz mov jmp or jne add or imul cld add loop ss or packssdw mov mov arpl push mov mov fisubr dec jnp mov xchg mov nop push inc jno popf inc mov push inc std call test cmp mov jno mov aad lock jp loop push lcall (bad) xor adc cs push cmp es mov insl sub push add cltd inc mov repnz nop insb popaw push cmp xchg es les sub ja imul pusha fmull fwait jge and ret dec mov shl subl ds add cmp mov pop out subl data16 pop insl faddl daa rorb mov adc sub cmp dec sarl xor ss xor popl sub cmp or ja or cmp mov mov mov out push push dec jno xchg mov cwtl mov push pushf rolb (bad) out pop and sbb gs std test pop pop repz fbstp fldl cmp mov fcmovu nop cmp imul xchg add and or stos faddl xchg mov cmp nop or lcall sar inc or into lods and mov std and dec mov fisttpll cmp adc in aaa stos jge aas mov je pop aad xchg mov adc mov adc mov cmp sub push iret ss cmpsb arpl jle das xchg add outsb pop nop inc push or nop les inc (bad) dec mov mov dec out or cmp loop dec xchg add jb push aas int sbb cwtl hlt stc and cld mov lcall add ret movsb pusha push mov mov sbbb pop in scas xchg adc in or mov fsts jno in push pushf dec arpl or inc sbb add pop mov adc sbb inc ljmp jae push (bad) sub ljmp and dec jns inc cltd push pop xchg push dec mov scas jmp adc data16 mov sub xor xor pop or fnsave daa pop mov and inc push insb jg (bad) xorb insl mov adc in fistp push (bad) aaa lods (bad) xor cmp inc mov lret dec and dec and imul sahf iret flds imul inc pop scas in jns pop and jb shrb cmp pop jnp add out fiadd lods out cmp insb or lods pop daa jmp or ds push mov push mov xor pop sahf xor push pop push stos xchg mov sub xor sbb inc sbb mov (bad) aaa push xor adc in (bad) in mov mov mov xor push test je popa jne in jmp fiadd iret and sub dec add jl dec movsb xor ror mov pop je loop sahf outsl dec sti test bound iret mov lods lahf add decb in add icebp adc and call stos faddl ret mov cmc inc arpl push addr16 inc jp push xor pusha push movb fisubrl loopne xchg xor enter adc xor jp push jae pop push inc daa lahf int3 and xor repz and sbb inc mov and and ds add stos sbb cmp sbb xor aas adc sbb jbe add xor jecxz push pop lret ss daa cmp and mov mov add mov and push js cmovb fstpt aad xchg outsb fadds push add inc sub add jle lock mov adc popl into cmc inc stos inc adc sbb add jmp jb ficoml sbb sti mov mov pop add sbb add rcll xor or or aam mov cwtl pusha cld fbld fmuls xlat daa nop inc mov ret push push call sarb inc sbbl dec bound mov xchg push jmp fucomi xchg or stos sbb or mov and addl sbb (bad) (bad) add mov lcall or adc bound sub in xchg nop add lcall add or incl leave add clc test sub addr16 cmpsb jecxz adc test sbb aas btc jae lcall (bad) jbe ds add mov out mov xchg inc push xor subl dec mov mov fistpl aad repz setg insl aas test leave push fstpl and mov add xor mov mov bound int lods xchg mov or dec jo (bad) jne inc xchg jnp arpl xor adc mov lds dec lahf add movsl aad cmp jae lods inc mov jmp or add cmp dec sbb mov sbb inc inc out cmc xchg add cmpsl mov daa (bad) adc dec test lret mov adc jg jl in add push mov push mov repnz mov or (bad) mov int cmc cmc sub jno push es in inc lods sbb add adc imul daa xchg inc cmpsl iret dec jns jae loopne sub fildll add cmp dec xor adc gs pop jmp add lahf je add bound popl push sahf sub sub dec incl stos add mov enter lds dec push push push jbe or lahf insl mov mov int add pop pop push add out inc mov dec ret (bad) push imul lock aam push dec xor adc loope inc aad pop xchg add mov out add pushf xor enter xor adc sahf hlt pop mov jnp dec push dec or sbb or inc out jo nop outsl ficomp add sahf push out lds push je cli fadds or xchg in lock mov (bad) mov sub mov push lods dec (bad) jb and (bad) or insb ljmp shrl (bad) adc out into add ja sahf hlt add and pop jne in shrb nop out and pop dec ljmp add add lock mov sbbl data16 sbb sbbb fdivs sub aad lcall out xchg pcmpgtw repz cli out inc in sub mov adc cltd test imul adc mov xchg add pop mov xchg dec dec add push loopne and inc fiadd cmp jge into lahf inc sbb jb inc fs iret repnz das mov sbb inc pop add jnp dec jae adc hlt inc cmp (bad) fisttpll popl lret push icebp je push or xor pop mov into jp add dec out xorb call mov inc jmp rorl icebp incl (bad) xorl ss (bad) testl push adc inc je sub and gs jnp fldl enter xorb adc bound rclb cmp pushf pushf in xchg aaa in inc adc ss loope iret aad adc push jae rolb and in inc (bad) data16 fcmovne add iret add or add adc push sbb gs push into pop mov movzbl adc xor sbb mov lds push pop in jns,pn imul je or rorb cmp fsin ret out xor es (bad) orb nop mov add add pop call cmp loopne jmp ss imul testl je mov lods and jno mov push ficompl add push mov (bad) or push mov incl jp inc and fcompl push dec fistl scas jno and rcrb sldt xchg test adc pop addr16 rcrb (bad) sbb sbb mov jno (bad) cmp or add outsl push call div mov add and add lahf xor jmp bswap push cmp cmpsb ret stc jl jae lcall push pop xlat popf ret pop enter movsb loope and outsb cmp arpl or mov test and dec mov push sarb cmp cmpl (bad) mov into jne incl je loop cmp jns push push ljmp subb add icebp icebp mov mov cmp xor loop enter stos sbb imul dec mov rclb (bad) xor xchg mov movsb mov fwait std aaa sahf or lods cld test int nop pop add push cli jl or mov pop sbb mov insb mov in inc cmpsb xchg je sbb sub les cmc inc cmp push sti sti loope inc adc mov mov add mov aam fstpl mulb jnp ror dec sahf jge pop movsb sbb cmp in std shrb jmp ss into pop mov aaa mov pop mov movsb lock push scas bound pop inc add add inc sbb ret xchg (bad) jbe xor lods and aam sbb (bad) mov lds mov mov sbb es pop push (bad) imul xchg push data16 rolb ja inc std sub add ja add jae mov mull in cld nop push nop cmovbe in and pop lret cmp and sub add jnp add mov push je in and sbb sbb mov pop insl roll roll (bad) arpl mov js jp inc outsl hlt stc and mov lock push insb or add xor mov jp push (bad) add push out jecxz and sub stos dec adc and mov and icebp inc adc daa adc mov movsl icebp daa mov stos in jb test cmp inc adc adc add hlt inc lods mov ds inc (bad) idivl cld nop ds push mov mov add jge leave add xchg add movsb outsl inc inc sti mov addl inc xlat enter lret pushf and in inc push out inc fisttpll es mov dec push out sbb inc sbb xlat aam or sub xor mov pop roll mov cmpb aas movsb mov mov mov (bad) aaa add add pop mov mov xchg (bad) and or xchg lahf int scas in stos bound cmp inc (bad) lock xorl cmp add cmc inc mov mov sub inc je xor aam in sbb cltd (bad) into adc (bad) sahf push dec xor mov mov inc mov ret dec mov les or push stos lock nop or push mov sbb inc mov adc mov push push js adc add and push sub or mov addr16 aaa ss ficompl in inc lea aaa jbe push mov in inc push insb iret imul mov das fcoms gs dec popa inc mov cmp push push les orl mov push adc xor aad insl es push inc mov cmp ss jae fisttpll sbb cmp and and cmpsl and out inc pop sbbl cld roll fidivr in mov add push insb (bad) jno jnp dec ss out hlt xchg or push cmp (bad) jge push xchg and lret dec dec les cmp mov call jno iret bound mov cmpsb jno jbe push cmpsl add popa push mov (bad) cmc lcall ljmp or bt out nop outsl in das inc ljmp (bad) scas xor jle cmp arpl sub cwtl add sbb adc in inc mov mov arpl pop (bad) subl jge fcompl lods addl mov dec or xor adc mov call or aas mov xchg clc nop aaa or ret mov and inc add or pop lea and repz dec incl (bad) roll push arpl (bad) jp dec arpl jno or popa inc pop pop aad js scas leave add rcrb pop xor subl fidivl ret pop movsb mov inc inc scas nop sti mov addl pop mov and push dec sbb sub pop dec add ss sub outsl popa inc adc and popf out hlt inc ficoml push int3 push pop inc icebp (bad) inc in ja sub dec jnp inc loope add cmpl inc leave ja outsl add rolb cmpsb les movsl aam pop adc mov in jnp push mov pop dec gs mov or add (bad) jo pop xor push and xlat add loopne lea mov (bad) jbe push and les jge mov mov (bad) mov out cmp fldl inc xchg sbb add adc (bad) dec xchg subl sbb mov and in rcrb test pushf xchg or sub dec out nop dec push push jbe xchg add pushf nop xor push push (bad) sub dec aad out mov push rcrb cmp fsubrp mov les xchg fbld sub insb (bad) movsl add in mov pop mov lcall mov xchg fwait mov pop pushf movsb and mov adc mov (bad) inc mov jg sahf aam ret cmp out inc cmp or in aas pop enter xor iret roll sbb fisttpl xchg xor ret scas pushf mov inc dec movsb (bad) mov addr16 or mov pop fwait js push jle sbb imulb jg leave add adc push push xchg mov dec mov and add add and rep adc jno add inc inc mov jmp sti ret js imul out pop loope mov fldt or shrb mov int3 mulb cmp push jg insb gs inc add jbe or ja add icebp add adc test xor inc enter ret ss shrb lods cmp ret xor push test mov imul inc hlt lods pop aaa outsb inc sub je (bad) ljmp cmpl xchg cmc inc jp ret lock inc fcomps scas adc cmp insl sbb push push adcl push xchg cld xchg bound cmpsb jl jp out inc xchg pushf icebp sbb loopne pop popf push imul pop pop inc loop add jmp cmp fucomp sbb stos inc fisub test push push lods popf mov mov and pop inc imul daa inc in mov push cmp pop and call lahf ficoml mov xchg out test cmp xchg xchg push jno adc in and mov adc or pop lock (bad) cld mov sbb cmp jns or popl imul sub and add mov loope js (bad) iret leave add rcl mov push dec xor or cmpsl ficom add mov das mov add dec push or repnz (bad) cmpsl dec (bad) xchg xchg or add js fcoms push loope std pop push and into negl add in mov xor sbb out add cmp sbb mov dec adc enter jno lock mov or pop outsl mov cltd sbb push or sbb or mov sbb add jo fiadd sbb and mov mov sbb ret mov and sahf cmpsl fsub and mov popf mov testl (bad) jb push push mov push scas and lods cld mov sub inc ljmp jns fwait pop mov push ret push popf xchg xchg add hlt or adc and into xchg push mov pop push pop inc je xor mov add aas mov or pop (bad) xor inc ficompl in repz ds xor loop cmp pop test mov mov das cmp imul outsb (bad) adcl pushf negl mov push and lcall sbb mov test xchg adc subl repz mov cmp insl pusha sbb and clc jge add inc cmp sbb outsl pushf rorl in mov mov pushf xchg cmp inc pop sbbl (bad) add fdivl add cli int outsb and popa add mov add das (bad) jge push nop and and adc les loope repz inc push mov mov add jge jo aam je outsl insb and xor insb subl insb cmpb adc mov add and sbb mov dec mov fiaddl add sbb push outsl fsubrl or adc lods add jge mov fdivrl nop ss jns scas in (bad) add ds xor mov adc xor shr cmp push pop leave daa pushf and roll loope lea push out adc fistpll mov lret mov cli jge or test rcrl leave add ret mov aas or xchg sbb adc jge add daa xchg pop sarl insb inc out jne nop xor notl mov in cltd mov or mov (bad) rolb subb clc and out ds xor pop adc jg outsb xor push popl out xor aas push inc lcall (bad) lcall push push mov xor aaa test rclb loope xor xchg (bad) cmp inc pop cmp add or inc xchg mov sbb and xchg insb or rorb (bad) sbb incl lret and lods sub fnsave cli mov movsb subb adc aam cmp test dec adc pop out ret stos push or sub sbb push inc dec sub popf cltd xchg sbb push and add jb bound test (bad) cmp pop xchg enter dec (bad) or inc sti popa popf xchg repnz int3 add xor mov sbb lahf (bad) test inc pop repz push test rorl daa jae mov sbb aad loopne add and sarb sub jl xor xor push repnz incl mov fisttpl fistpll sarb movsl cld and push dec mov cs inc test stc (bad) (bad) cmpb xor aam (bad) mov sub xor inc cmpb out (bad) mov jne dec pushf clc add imul xor xor jo jg lds test push mov xor pop add cmp push add ret add sar scas inc xor sbbb outsl sbb lea data16 leave add out int (bad) ficomp test push mov faddl cmpsl cmp lods (bad) cmc test add in sahf hlt or in repz (bad) int cmpsl push test adc push jne ljmp pop xchg inc jbe imul cmp dec incl in mov xchg inc ffree pop mov ret or or cli movsl int inc cmp jno popa inc mov and fldl mov push cmp sub out faddl sbb sub mov adc add aad sub loope and into xchg incl mov add inc fstl ficom pop int3 cmp clc jl or outsl xor push aad mov cmc inc and daa jmp or lock incb mov add sbb and mov jmp es (bad) flds mov xor sub cltd fiaddl ds xor sarb insl cwtl les xlat sbb mov xchg push xor xor popa and out mov or (bad) sub adc (bad) push roll jl outsb mov out sub pop dec or add cmc mov fwait and adc je sbb mov mov pop cmpsb inc sbb or jmp cmpsl shlb stc addr16 or dec xchg push push jg nop shrl ja or xor leave add repnz outsb les movsb add loop sub xor hlt sub cmp js xchg jmp pop mov roll pop add adc sbb imul dec arpl xor fstl pushf iret imul cmp out inc mov push out pop and mov adc and (bad) sbb dec out stos mov shrb fsts loopne mov add or add add jl add clc call ret push lahf loope bnd inc cmp xchg ds aad or or jge add dec clc and xlat in push inc cwtl popf add int sbb sub jne jae add inc or test fucomip sbb fs ror mov or imul add pop xor adc lods mov leave add pop ret shlb inc xor adc cs loope (bad) pop bound popf movsb std pop add popa loopne sbbl mov cld loopne add sahf test add cwtl leave ret add or rclb xor xchg inc mov add mov mov lahf and lods stos jo popa or dec add sbb dec add cmp mov ja inc pop arpl mov lcall int3 push les xorl enter or in push jnp push sbb or inc or mov cmpb and icebp sarl mov in mov and xchg test mov out inc ljmp aas out inc stos es mov xor pop add cmp push adc aas push adc dec ljmp mov mov movsb or sub icebp leave add out int (bad) mov push fs mov out inc ja add out inc cmpsl xor pop xor (bad) add push mov push and div inc or icebp inc lods insl mov and test mov inc and pop mov enter mov push cmp frstpm(287 sub bound xchg cmp mov mov cmpsl mov add outsl cld cmp fcmovbe loopne pop adc sbb mov mov ja fstpl insl inc shll add lahf xor repz mov and roll add push shrl add xor clc popa cmc inc mov jnp inc push jge or aaa cwtl mov mov cmp cmp mov movsl inc or stc and pop mov cmpsl jae lods inc push (bad) les fistpll std fnop and pop sti and cltd push pop nop and or push add pushf mov loopne ja std (bad) leave add les mov mov sbb jmp and inc and mov mov aaa push lret (bad) divl test pushf sbb mov (bad) sbb or in ljmp pop pushf rorb mov out stos ss subl or imul enter adc sbb pop incl xchg inc fidivrl je sub pop fnsave cli mov and push and insb jmp mov xchg out mov aaa jl subl lahf add imul adc push sub and and jbe int hlt mov push mov xchg push aaa and jmp inc aam lods pop je push xchg cltd jno out test inc out sbbl adcl or out xchg mov add adc stos lock and mov add faddl popa mov cli cmp (bad) fistpl ss cmp or nop adc push mov and push out xchg or fnstcw lea popa add ljmp js push imul movsl add into dec sub dec (bad) jbe add shrl in imul sub (bad) daa jne jbe pop xchg or push dec test mov jbe and mov dec sbb adc fist inc xchg adc ficomp or inc xor xor (bad) cmpsl inc inc dec ss inc mov add mov jbe add int mov test add adc outsb mov push aad inc iret jnp frstor mov add imul pop rol add xor mov ja add repz sbb xchg cli add ret test rol in dec or add sti adc xchg dec or outsb mov stc in loop mov cmp inc das int sti mov test mov pop subl outsb in fs test movsb jmp addr16 daa dec clc add cli and push push dec out inc adc adc inc ja inc push mov int3 daa xor enter pop sarb call iret incl or inc popf sub or jbe inc push scas ror inc add imul jbe inc (bad) mov inc fmuls mull or ss xor lods subb imul stc roll cmp and inc pop pop test out int3 jae inc pop ljmp xor xchg inc pop push inc cwtl shrb mov lcall lret imul insb and ja pop jp int3 add adc push cs mov dec xor fsubr ss dec movsb push mov ret fisubrl pop addr16 sbb frstor (bad) cmpsl wrmsr sbb mov inc sbb jp or in inc in adc mov test shrb jno enter mov xor dec mov (bad) shrl insl js mov jge xor int pop sbb push jae rcrb pusha add mov mov or add cs or cmp jo inc aaa pop mov outsl push adc inc int cmp adc inc sbb ficompl and mov push push in aas addr16 xchg jmp inc cli jbe aas jb xor xorl mov mov in fs mov (bad) icebp cwtl out inc push dec dec imul rorb cmc dec leave fld xor sbb inc jp insl xchg lods cmc or dec mov ret fs xor add push (bad) ss mov loopne hlt test call cli and imul push jl andl add jo out ja adc incl push in daa cmp enter popf adc (bad) mov shrl jne imul pop xchg sbb or aaa jns fisubl data16 loope in push push loope xor inc mov adc adc (bad) nop shrb ss inc mov (bad) push and fildll (bad) and push ror sti adc popf push cmp push call and xchg jbe out js repz je push rcrb fsubrs ret push mov and out mov inc test repz das xor arpl xchg into inc pop dec and lret roll outsl mov push loopne cmp push in js insl fadds inc mov and mov iret testl pop inc outsb test mov hlt loope cmp leave add jg out lods mov in mov idivb sbb popa xchg les hlt xor push (bad) pop add dec add orl pop sti sub add jno xorl cmpsl lods pop outsb push cmpl dec imul (bad) subl enter cmp add daa in idiv mov fidivr cli jno stc test call and arpl xchg fbstp sbb push adc insl lea and jno movsb pop cli dec push shll push mov imul mov out ret or add imul mov rolb mov ljmp sbb cmpsb sub outsb xchg jno cmpsl stc mov add aas dec leave add sub in inc pop sbb xorl in ja mov or mov inc mov dec rorb loop das cmp pop popa in jbe adc mov in subl mov roll int test and sbbb ss xor lods subb imul stc roll cmp jp add fnsave ret push push inc repz inc xchg out sbb fstpt or stos push mov int sbb xchg or mov add xorl popf nop dec push icebp int inc lea insb data16 mov sarb movsl lea out push push fwait and out cmp add (bad) pop fadd stos or push addb sbb inc or add test adcl (bad) (bad) lds mov mov mov sarl or fcompl xor cmc inc lea hlt lret mov or in loop jl add addl add fistp push ret mov das and in push adc clc (bad) xchg pop mov push jecxz add cmp leave add (bad) sbb ss aad repz or fnsave dec (bad) out fcmovnu (bad) jp or or adc adc jge mov sbb or mulb lea (bad) lret into dec pop dec outsb mov mov sbbl sbb loope inc mov jbe inc mov xchg addr16 add cwtl inc adc add je mov xchg cpuid jne fdivs data16 enter adc mov push (bad) pushf out test dec ljmp out addl and jne in xchg add roll cmpsl mov aaa icebp out test (bad) icebp or bnd jbe add sub sbb jno pop lcall jp cmp popf test push lret jae pusha pop test incl or decb imul imul cmp dec mov push push pop xor fbstp fwait aad push mov jnp das dec clc pop mov mov pop fistl in and add aas flds pop les or aaa (bad) sbb xchg aad xor enter lret lods jg inc scas mov and dec inc insl pop inc mov inc mov outsl fstpl in subl inc lods sbb mov sub or mov icebp sub (bad) xchg add xlat jo fldl push and (bad) in sub mov inc (bad) jo jle add out cmpsl push sub sub lret add out outsb pop xor mov out subl inc ficompl push push or add adc imul dec cltd inc ljmp icebp mov cltd mov xor xor cmp add fadds mov subl jns add mov inc and or adc popa popf divb lods icebp cmp jne mov and les and inc add add arpl dec add test ja push xor sbb mov add je adc mov icebp and sub gs and xorl out fdivs xorl shlb test or cmp scas mov mov fcoms loop mov sub loop andl in sub dec sti xchg cld loop rolb or aaa lret xchg xor mov lahf xor std movsl add sbb inc out hlt sub neg (bad) in aas movsl push imul push ret or cmp mov mov (bad) pop mov push loopne fwait xchg cmp hlt mov push inc mov push or cltd cmp loop add jb shll jg ret xchg cmp rcrl popf mov jmp sub adcl cmpsb call sbb add outsl jg push arpl out lock lahf int xor nop arpl jnp jbe aam or loop jno cmp xor pusha rcr mov out add push aas dec mov pushf adc cmpsb shl mov or leave xor mov movsb xchg shlb mov adc arpl faddl adc xor and adc (bad) jp dec fdivs int push xchg xchg bound xchg bound mov hlt mov mov xor (bad) or push (bad) jmp movsb lahf push cmpl mov rolb push or cmp sbb outsb aam mov push dec pop push jo js sbb std lods inc das add jae cmp sbb fcoms loop or inc or pop lock jns cmpsb pushf or xor mov iret in push mov imul xor mov or pop sahf shl subb sub adc call mov push and cmp icebp inc fisubl cmp mov aas adc out stc and jbe inc rorb jmp jl daa adc popf in add aaa fdivl and cld inc ss cmp arpl in pop testl ds test rolb lock inc aaa mov es pop movsb stc and push hlt leave inc lcall mov or aaa push and add sub out sbb cmpsl inc xor les inc mov nop mov ficoml cltd jl sbb push or int cmc mov loope push adc jg repnz sub sub fldl sbb sarb inc pop add adc ds pop mov rorb mov xchg push or (bad) sub bound je xchg push int inc and insl dec int3 je test sub cs cltd inc inc xchg sub xchg xchg jl fiaddl out fs add mov enter mov or pop test ret sub push (bad) sbb je test inc and (bad) push insl sub add cmp in out inc aam push jbe jmp pop cmp mov inc mov xor mov xor mov push push push incl or xchg loop je dec add add mov mov sbb sub jns or pushf leave mov in push mov xchg jb xor mov pop sub pop mov ja jbe test imul add mov push push mov roll popa incl sar cmp mov ficoml fwait subl lds mov jno into imul push mov adc std daa dec aad jo dec mov add pop or aaa xchg cmp jnp or rolb inc lret push int3 (bad) dec clc out add aaa xchg call movsl dec inc (bad) mov add adc sbbb out dec push sbb addr16 add add and loopne fwait xchg mov cmp add xor fadd iret cmp js lret (bad) icebp and mov xor dec pushf dec loopne mov popf mov movsb push jg test rol adc mov adc insl add outsl jg dec or fdiv out pop aas lcall jnp jbe aam or push or lods adc mov sbb loopne movsl add cmp inc xchg aaa adc sub or pop pop nop push pop out out jnp or ja or sarl dec cmovae into nop (bad) inc ja int loop rcl xor aaa sub movsb aaa test add fiadd insl xor sti mov lahf dec mov and call clc and aas xor scas loop mov lock pop or pop mov sub idiv and and sbbl jmp add xor xchg or andl hlt pop roll inc add aam in in mov les sarl punpckldq xor test outsb xchg stos xchg inc cmp inc out repz roll (bad) xor subl pop sub sub adc mov testb or repnz or pop rclb daa out sbbl mov xor jle rcrb inc lcall ljmp mov and adc push xchg lret testb cmpsl mov stc arpl add (bad) (bad) popf lret cmp or push lods enter stos fidivr add or (bad) mov int push cmp lds insl ret out cmp mov add mov push jmp inc and mov out ror adc jp (bad) out mov mulb lea bound ljmp mov inc xor and mov test in into loop arpl into sti adc push scas leave add popf inc add ljmp pop in int sahf in shrl add add or adc and test mov es enter xchg int sub imul ss ss pop inc sbb jge inc (bad) lock sbb test data16 imul das xchg adc cwtl test and and nop cmc inc lea jae dec rcll mov jnp sub dec fbstp aaa out inc xor aaa dec (bad) add lret and push loope add and pop mov (bad) sbb popf fiadd dec adc dec jo push nop add aam aaa in push popf test xchg mov shrb gs inc and xor cmp aaa inc repnz sbb les add imull push add push int mov sub rorb or out andl mov mov inc enter ja xchg or clc and inc push aaa and or (bad) sbb xor lods lock mov sbb push cmp out and push and jae xor std dec outsb int3 inc add je and shrl das fadds adc adc lods (bad) mov add pop ss dec sbb inc inc stos std inc (bad) push fdivrl outsb or mov jg aaa lret adc and mov dec fnsave sbb aas mov call sub mov jle push fcomps sbb popa add nop loope mov dec jo mov xor and divl (bad) icebp (bad) outsl and (bad) xor loop dec xchg push lret das inc add and sub out mov sbb and push clc and or repz lods stos ds add arpl shrb mov ljmp adc and int3 daa popf rcrb imul les cld shlb push mov lds ss dec mov mov inc into loope test push adc fidiv jmp add mov add in cmpsb sbb and and inc aaa or pop inc and fadds in adc arpl lret dec loopew lds out imul xchg or insb (bad) jo sarb ljmp mov jg mov pop mov rclb inc mull xor enter inc mov xor int3 and out mov or out das or xlat (bad) xor (bad) cwtl push and and mov inc aam pop sarl test or add lds inc dec inc push enterw xor es mov xor add sti mov inc call fdivrl cmp dec inc or xchg (bad) cmp cwtl ja and leave out std (bad) or or shll imul sbbb adc ja adc mov and and push dec mov adc sub xor or faddp sbb mov or dec shll aad sbb and test popf xor xlat dec fldenv push sub subl cmp and fcmovu inc mov mov popa mov rcr in inc inc xor test add sub inc es add add in inc lret pop iret (bad) inc scas xchg or inc xchg out cmpb fbstp xor cmp sub out fisub inc xchg add mov or jb outsl lcall in std sbb cs aaa (bad) (bad) mov or add or push jl and (bad) movsb push imul pop xor in stc and add add cwtl cli in fs pushf rcll xchg sbb stc mov jno jle cmp imul add adc mov sbb pop mov inc cs lock mov jb inc mov nop jg ja or push pcmpeqw mov add inc pop ljmp mov sahf nop xchg mov adcl sub pop rcl lds push jns in or pop loop pop adc add mov stos insb xlat in aas fiaddl loop mov andl imul xchg loope mov push sarb mov mov or out shrb push fiaddl int3 hlt inc jg mov sub mov sti inc stos add icebp inc jecxz outsb pop ret fistl inc xor push dec adc mov loopne out push adc in add (bad) add das xlat fcmovne add push add inc pop mov aas test push push loopne (bad) cmp inc or rclb fs fs mov ds pop inc add xchg mov mov pop push loop mov push xor and fwait mov cwtl dec ds or mov mov mov stos (bad) outsl fisubr push xchg jecxz mov int loope or jbe movsb (bad) aaa lock or pop sub (bad) sbb sbbl mov and imul xchg add jmp in inc jmp jnp mov pop inc iret (bad) or push insl pushf cmpsl aad push inc sbb sbb push jp pop sub cmp fmul out inc stos cltd mov es test movsl jle andb lods pop sub xor xorl les ret push inc outsl jo test int jmp mov adc dec cmp pop mov lcall dec jo int3 out push gs arpl aaa adc or cmp sahf call stos inc in mov sub andl cmpsl inc sbb testl add cld (bad) xor inc xchg or lret movb and mov inc xchg cmp add test or (bad) repz xchg inc lods mov cmpsl testb pop ret out es sub inc lcall enter sub movsb rol mov (bad) pop and add add mov add push and stc cmp aam push xor mov addl dec sarb dec daa xor adc std daa jbe sbb ffree sbbl mov pop adc inc adc jmp add (bad) xchg mov pop imul xorb mov xchg and aas stos (bad) insb test xchg pop enter sbb xchg add push int3 push lock fwait pop jno jb inc les sti mov enter aas movsl add jge (bad) jns push loopne,pn pop xor push jle jp fidivl pop ljmp inc mov lahf pop rclb imul xor outsb stc inc add cmp add in sahf hlt sbb jle sti mov loopne push pop cmp mov arpl cwtl je test imul jg leave add sahf in fs in or (bad) xlat pop and cmp insb pop add inc dec incl ljmp inc dec rol mov or in in (bad) mov inc or in cmp pop add mov in inc xchg bnd ror jb push cs dec (bad) mov addl fiaddl aas sarb push sub popa xchg cmp or add mov out sbb pop popf mov push cmp cmpsl bound test js cmp (bad) add (bad) mov test mov loopne imul or repz (bad) xor nop dec add sbb sbb xor aaa add inc mov imul ss out push stos jge loop add pusha (bad) lock push inc cwtl andl adcl mov add mov or pop adc mov or pop std cs push pop add jp js pop fwait adc mov gs nop cmp jae std and loop (bad) xorl clc aaa adc rolb pop mov insb adc lock or leave cs orl adc ret mov push add fiaddl rolb xchg add inc xchg movsb cltd fist in inc push or mov sbb adc sub adc inc jle loopne add subl add imul lcall int loope adc mov or inc inc and repz (bad) maskmovq mull outsb xchg push xor testl jl ja loop out outsb sub push inc arpl aad lock stc and out imul inc rcl adc pop mov imul inc out scas lcall jmp mov mov adc cmpsb (bad) jbe lock or lea and xor ficom imul insl adc ss inc xchg sbb lret add cmp mov add cltd inc and add mov out adc out xchg adc daa jmp add shrb in lret xchg add add es rcrl js push sbb in and add sar xor and add int mov shlb jno or jbe dec (bad) loop adc nop ss cmpl hlt incl mov mov (bad) push push loopne aam inc or dec or mov cmc jge jo pop jp cwtl jbe fld add (bad) repz sub rol pop sbb add fisub mov add (bad) fnsave out jp test stc mov sahf test push bound call mov add dec jnp mov je cmpsl and add inc push loop mov mov push ja pusha ret jbe mov push push jbe dec sti fsubrs xchg add sbbl jg clc inc lcall adc scas call jo or xchg stc adc jmp inc push outsl in inc cltd lcall sub lcall xor adcl jp into sub popf mov stc lret movsb bound push lret cld and into aaa jno (bad) in rcrb (bad) mov cwtl and push cmp dec loop xchg out test stos test test into in cmpsb out adc push and (bad) sub cli addb nop mov fld push or mov push loope mov ljmp inc ficompl data16 gs ret pop aam arpl and ret dec push push lret jmp out inc or fstpt jae sbb and lds push aam jecxz test mov add add add (bad) popa jmp add push sbb rolb into dec xor je out lcall lea lahf ret push xchg cld mov mov mov test je outsb nop loope adc sbb push push mov imul imul push push ss mov aaa or mov movq fiaddl icebp mov out fdivrl inc inc mov icebp inc gs mov leave inc mov arpl rolb fistpll outsb call scas in fmull or and rcrl jge (bad) mov mov push aam cmp punpckhbw xchg push mov mov or outsb les outsb pop iret cs repnz aam frstor push popf test sahf ret pop push fstpl (bad) sbb fsubs (bad) or (bad) sbb (bad) jge in inc push scas fimul in inc push mov jmp push imul mov test (bad) lds jmp popf call fwait repnz popf and (bad) stos cs mov data16 or imul inc out outsb lcall pop or adc and add cmpsb sub inc cmp popf call lret sbbl jl das jnp mov jg (bad) data16 jg add sub cmpsl or cmp add sbb ftst cmpl les loop in sbb jns movsb cld ds push cmp xor cmp jno sub xchg sbb jge jl push insl cmp repz push stc xor aam dec and lea inc cmp push mov out add cmp sub push pop push fbstp cmpl mov ljmp jecxz inc xchg or xchg js or sbb inc stos cs sub adc mov jecxz jno adc test movsl ljmp fcmovnb push push lock jno add mov sahf lods mov cmp mov mov subb or fisttpll arpl lds push ds push jg jns sub mov mov fcoml test rcl dec (bad) outsb sbb pop popf mov sbb test or bound (bad) cmp aam stos pop or cwtl icebp inc (bad) jge sbb cmp mov or les xor mov adc fs sbb push gs jno add orb mov mov lret leave add add sbb and insb inc ljmp dec xor mov adc sbb sub (bad) movsb sbb bound pop pop push ljmp dec in inc mov jns pop jne rclb popa lcall push cmp inc add into les push jo popf in sub ret out mov test std push mov add add push js imul or xchg or inc das ja inc aam pop movsl add cmp (bad) pop jo pmullw push push ljmp mov cmp mov incl or das inc int sub test mov insb or mov subl in cmpsl fnstsw stos add es xor fs shr sbbb mov ss and adcb pop leave add scas jno repz mov loop push (bad) fwait in sbb pop xchg sbb push add push mov pop jbe mov inc mov roll in out inc xchg sbb sub enter fldt out xchg into ret mov test bound adc leave addr16 add mov fstpt inc adc call bound lods jp in lahf and push inc jmp sub inc rcr cmp arpl dec cltd cltd out inc int ljmp pop push mov fwait sahf inc add jnp adc test fistl inc and test loope push cmp mov cmp scas inc or addr16 out daa cmp mov fldl ljmp enter xor aaa xor addl daa lds insb mov scas clc mov out inc test rorb inc mov mov mov cmpsb jl fs add loope inc cmp or jge ss mov fcoml jo fwait mov adc rorb xchg into push inc push or nop jb mov and xchg add cmp and lods mov out fldt loopne xor pop and enter dec push movsb ficompl test movsb xor (bad) fdivs inc ds fcmovnbe pusha lret pop dec bound mov pop mov and or adc push jns sbb mov or mov fcmovbe or subw jg cmpl mov mov sbb jp add dec cwtl add jns push sbb mov adc jo loopne or inc fwait arpl xchg incl loop or xor xchg aaa fiadd sbb mov or sub (bad) fnstsw (bad) das lahf xor hlt (bad) inc int3 add lds cmp pusha (bad) push adc lret mov ret ret in stos loop cmp les jo or int3 mov push ss sbb pop or out repnz pop mov mov in jae lcall or cltd jo mov inc xchg inc adc loop adc add jecxz ds sbb and subl cli int3 mov inc pop cmpsb pop jnp mov and lahf and aas pop mov movsl (bad) call or inc push mov pop pop push jp popf sbb adc xor xchg sub push pop (bad) imul mov mov in sbb int3 xchg jge inc inc fs jecxz ficom mov inc inc fist adc mov mov fsub js testl icebp mov rorb out je sub lods cmpsb xlat adc (bad) mov inc cs and dec and (bad) dec inc stc or mov jns test mov test cmp mov or xorb jo push mov adc or lods xor jle push (bad) push cmp (bad) mov pop mov outsl mov pop push data16 lret aad ret out sbb push lods inc or dec add (bad) cmpl in mov imul insb je and adc inc clc dec in inc pop push mov xchg gs inc mov out insb mov rorb or ss mov aas mov push je lret incl aam movsb jnp jl cmp add lcall call rcrl loopne in dec imull (bad) cmp add jnp je rcrl or inc push or inc xchg xchg shrb mov mulb mov xchg es sbb xchg in cwtl cmp push dec sbb mov inc pusha ja lret int3 enter xor ss fcoms lods je aaa arpl iret mov shlb popa add into scas jmp xor dec inc sbb jae ret in mov lods aad sub ret cmc call int3 loop inc and pop push add stos add xchg push imul pop outsl lcall ss inc lea cmpsb cld xor add fcmovne sbb mov push jne stos dec push jmp cmp jle loope adc or aaa fimull adc aam rcll mov insb cwtl sub movsl sbb cmp push add cmpsl jbe test push push adc js xor and lods mov xor adc push sub inc mov je adc or xchg xor ret inc mov dec sbb xor adc aam mov sub adc add add jle push inc loopne imul xchg xor and or les rcr leave add int3 cwtl add (bad) stos push jg jns mov add adc mov push add mov (bad) into inc std enter and cmp cs xor leave call dec lea sbb cltd mov xchg adc add push test je xorl repz mov cmp add out test sub xchg adc dec in dec dec into outsb stc inc mov ja and or push lret (bad) push push nop jge mov imul in lret inc jmp add inc push push push adc pusha or and jge data16 out ds dec int3 cmp insb test test mov ficoml mov jae mov adc sarb (bad) stos popf inc iret leave add hlt mulb out ss pop xchg sub mov xchg sbb pusha inc int cmp push or lahf hlt cli mov adc inc xchg add adc das in pop xor mov and lret imul (bad) out and icebp test push xchg push and mov inc out xor out out xchg sbb adc cmp inc cmpsl add fnsave fdivrl outsb adc fldl push jmp add lock dec (bad) and add ss frstor insl out daa dec clc push fadds roll mov push popa daa mov mov sub out inc jno cmp adc jns inc inc ficom orl xchg or ja and xor mov and in out add leave add jl jno jecxz repz mull pop lcall je test adc pop daa arpl outsl gs inc add add xchg inc idivl (bad) gs jnp jo pop xor (bad) shrb push inc and adc mov ja or mov dec jg push outsl les xchg outsl loop pop jge (bad) hlt or and insb fimul add sbb ds (bad) (bad) or nop subl add inc aam jmp in xchg add mov leave mov imul repz mov add dec sbb jp stos inc imul xor cwtl lock and bound (bad) mov pop push sbb addr16 jp cld fimul or cltd mov inc mov (bad) lea mov mov xor inc or cmp fadds out addr16 popf mov mov ja adc out ss (bad) pop test push xor adcl inc fstl scas push inc inc lcall ds sbbl mov mov cltd faddl and mov (bad) lods push jbe sub or dec or mov mov and mov stc xchg or out inc imul out fadds lds cmp push jae ret push mov stos loope aaa inc jne and jl and les sbb (bad) mulb dec mov sbb sahf push out icebp inc mov adc mov rol xchg fnstenv push rcrl add flds adc or or test push sbbl sbb mov subb (bad) mov inc or sub je mov add mov cmp std dec sub xor outsb xor js xor loop jp mov int3 ss fs fadds mov shl out pop inc push xorl push fstps jnp sbb in (bad) jecxz add jnp lret cmp cmc fstpl cwtl js enter xlat xchg inc jge in popf mov cmc mov iret pop je hlt sub or call mov xor cli jle push ret imul adc sti inc inc mov (bad) jg in fbld cmp ret sbb ja sbb out mov mov pop rorl icebp je sbb incl (bad) cmp xor jle add pop repz jne shr mov and cmp xchg or outsl aam mov sbb mov dec push pop mov sbb inc lret int3 aas hlt incl flds mov adc adc jnp daa dec xor inc mov pop and xchg add or jo mov arpl inc data16 mov push push fildll faddl or xchg jbe add stos pushf sbb jp sbb fisubl std enter adc les dec rorb sti dec (bad) loopne mov or cltd inc gs cmp in (bad) loop push and sahf (bad) dec (bad) insl xchg sub pushf cmp adc inc aaa adc in inc and dec jo or jecxz test sub or ljmp xchg cmpsl dec xchg mov in push insl xor (bad) mov enter daa je adc dec mov dec movsb orl push sub sarl fbld (bad) mov daa int cmc daa movsl jae sbb inc in outsb mov pop cmp xchg xor xor dec daa stos jecxz sub mov mov mov push repnz dec imul imul jmp mov in insl push xchg xor test ss nop dec mov or js or aas addr16 mov add jns jmp inc xchg xor loop int3 insb push std sahf loopne insb mov or test pop pop lret jg inc ljmp pop scas in test mulb jg or aas xchg ja cmpl add add ficomp add or xchg push xchg jge mov adc fwait js pushf and lods jno jnp cmp lock (bad) cmp push cmp jg sub pop ret jmp in and (bad) cmc outsl inc mov ja push inc jmp adc gs je jbe icebp jecxz add add clc adc xchg adc inc popf sbb push int adc add push frstor or mov nop imul js movl mov cmp pop cmp call ljmp aaa sbb mov inc fnstcw inc (bad) inc int sahf stos or sahf push iret jg add inc out sub mov add or cwtl call cmp ret add or aaa loope fldt xchg inc jae inc mov (bad) xor or mov loopne aas xor movsb popa in mov sbb inc popf es (bad) movsb adc xor inc cmp cmp cmp and call aad add push popa mov and add and sbb xchg push out inc push in jbe mov inc or insl in inc push pop xor adc xor xchg xchg and loop loop aas add push cmp inc mov fdivr adc daa mov or aad shl adc sbb xor xor ss lock daa inc (bad) in aad outsl pop jp pop cmc inc jmp mov lcall xchg incl (bad) in addb fnstcw lret cmp fsubl int dec fistpll and push pop push sbb sbbb nop inc push xor add mov pop test lods sub add leave add jb pop sub js (bad) jno lock push rcrb push dec sbb mov lahf stos test sbb out xchg sbb mov xor subl mov push call xchg adc popf inc mov inc mov cmp and pop loopne and and shr xorl nop sbb cmp fiaddl lock test jle dec sbb inc or out mov and das xor inc jae inc les pusha sarl mov inc xor mov and inc xor out mov push fxch dec ja add test or nop loop xor mov xchg or jg mov add push pop push inc insb pop mov test sarb add add stc mov sti lret push mov jl add mov out and sbb int jbe stc mov out push cmp popf mov lds ret xlat push repnz inc addr16 adc or fucom fadds push mull jge lret js or jg xchg and dec xor adc into push jno hlt or sub in inc fwait dec iret pop stos and mov (bad) mov mov sbb inc ficomp nop cmpl mov sbb enter add sar add js les outsb fsubrl iret xlat loope je sti rorb inc enter out in cs rcll jb insb cwtl loope add mov ds mov sbb or ds jl add sbb adc dec ja mov inc fincstp add imul and hlt xchg push and ficoml scas sbb imul sbb pop into xlat cmpw mov lcall xchg stos push mov lea push or out add stos or testl rorb cmp xor cs in subb outsw adc push cmp cmpsb fwait mull xchg inc mov push or cs xor loop sub (bad) scas add jmp push push adc xor adc (bad) mov and mov sbb insl xor mov mov cli push gs xchg pop stos sbb xor sbb sub add int3 adc lods mov push fldcw inc dec push lods push mov jge in repz or inc jnp dec js roll cmpl push (bad) enter xchg push fldenv push xchg sbb repz scas xchg mov je and faddl ljmp lcall mov jbe or fs pop jge mov incl aad lcall jno lret xor jne aam lds cmp or shrb mov les push xor pop leave add ds fucomi fistpll pop mov popf (bad) pushf dec enter mov xor sbb inc xsha1 cmpsb dec and adc push mov xor push outsl lds xchg and testl xchg pop jnp push jmp (bad) addr16 std nop ds mov imul nop or shrl in sub sub jns inc les scas lods dec (bad) mov sbb lahf out cmp pop cld cmp nop pop ret or out orl inc push pop pop testl fs add outsb ret jge inc std xor rcr jg lahf adc mov loope leave in xchg sbb cmc (bad) cmp mull inc ja sahf iret stos mov dec mov push pop in repnz jne xlat in inc insl leave andl ss aas cmpl add or rcl cmp fisttpll xor pushf dec add push movsb pop xor out inc aaa mov add sub mov incl lcall in in inc or add roll pop les daa popa pop aad inc xchg js test jge (bad) ss and ljmp fs adcl inc dec ljmp adc imul dec mov inc push mov insb mov imul adc in adc out and mov sub hlt repnz aaa outsb leave add into data16 xorl xor call add pop call idivl ds clc mov sub movlhps and pop jg push aaa or jge (bad) dec and add inc xchg adc arpl cmpsl stos mov or xchg fildll or jmp fild iret mov mov sbb repz lds adc fnstenv call mov jmp mov inc popf sub popf mov arpl pushf out mov mov (bad) fisttpll add mov push push xchg adcl mov idivb cmp leave out (bad) add imul lahf push (bad) pcmpeqb mov les rolb cmpsl lods adc pop outsb iret flds ljmp add out xor outsb (bad) gs add and sbb mov data16 cmp repnz nop imul jbe repz jbe sub leave add dec lea mov push pop movsb push fcmovnbe iret jmp or icebp and js xor bound pop lds jg or fdivrl push push or push out xchg fiaddl adc andl insb inc nop jbe push or lea sbb lret jb ja outsl outsl cltd inc xchg adc cmc sbb stc mov sub (bad) add mov sbb (bad) mov inc cli sub mov pmullw sbbl imul and jns and xchg mov add loop inc cwtl stos add inc stos incl adc (bad) inc or mov idiv add fisttp add sub cmp mov push push push pushf push jbe inc cmp ds call leave add jb (bad) xchg add adc iret mov jae cmpsb pop arpl mov sbb cltd inc bnd mov and cmp in daa mov add jnp rorb rcrl std nop ss mov pop add fs mov sbb or jg (bad) cli and insl mov ja mov imul pop inc fwait incl call push adc imul or pop add xlat insl ret push push sub fs jl sub sub mov movsb fwait repnz insl leave mov push xor jnp jns xorb lret inc outsl jb aam sub das repz jg paddsb add aas xchg ds es xor clc scas mov fiadd mov cmp lods orl mov inc inc (bad) push cld mov cwtl in mov mov nop xor cmpl jno mov nop movsb iret xlat loope push (bad) jne add cmp push mov pop arpl add jp adc xor adc xor dec sbb lret negl jg add dec ja or daa fldl and outsl cmp pop addr16 pop dec mov cmp pop enter jle mov adc jl or push cmp loope pop xor clc pop adc adc cmp insl insb dec out mov fxch flds (bad) outsl push aas or inc lcall mov test outsb inc int cmp xchg push (bad) jmp mov sbb inc sub imul add fnop sbb daa sub dec mov sti adc lahf je cmp or out add and add sbb cld lds or cmp cltd in or inc lock arpl push sub add repnz (bad) add pop mov lods mov imul mov mov popf jge cmp mov or call add outsl and push and add sbb inc xor xor add or clc dec inc lods sbb lock lret and inc hlt and inc loop call add inc xchg adc loop adcl add inc inc inc inc pop aas sti and and jbe data16 sahf lods adc push aaa jo dec cmp mov and add out lods lahf mov jp idivb cmp cmp imul inc aad mov popa mov mov insl mov rclb pop cltd std repz outsl cmp push inc inc mov repnz jl fidivl loopne clc add xor adc incl mov push mov stc and inc movsb js inc cs or add sbbl mov (bad) mov cmp inc mov or and imul add repnz cmpsl pop pop loopne cmpb jecxz adc push jns or mov jae dec cld les cmp lret fwait inc lea mov insl ds mov repz lds dec mov movsb dec sti notb adc push xchg aad test mov add pop xlat out sub sbb fldt jne sti push jbe into adc or and (bad) (bad) mov sbb andl (bad) mov jge fist sub inc cmp jmp jb jmp mov adc jns dec es pop jmp push (bad) aam pusha es dec cwtl imul or je or xchg movsl inc fsubs incb fiadd incl or xchg or and lea inc popf repz xor mov repz fdivl in fwait in cmp (bad) mov stc addl lea add ljmp jbe jge inc push shr pop imul mov sar pop mov (bad) pop data16 cmp cmpl sub out outsl pop xchg or sbb mov inc xchg sub mov or push push cmp mov add pop je inc frstor sbb insl cli mov xchg popf mov jmp add mov mov inc (bad) rcl popf in and hlt add or push scas ljmp (bad) enter mov ja or sarb lret xchg pop inc pop cmpsl cmp mov lds xchg fisttp sub out and push js xchg fyl2x (bad) lret in pop ret jecxz cmp (bad) std dec pop pop fucomp fadds and push or mov ds into add in iret lods sti mov scas in jae test repnz shrl pop incl mov push add aaa cltd ja or cmp inc mov adc inc popf xchg xor loopne and inc ds (bad) cmc xchg or and inc mov xor jo lcall lock push pop mov and scas add adc jo scas aas mov adc inc clc stc (bad) adc or call push mov pushf iret jno out xchg pop dec nop in repnz sahf hlt or cwtl add jle pop and inc ss jge cld nop dec mov push xor ja xchg lock adc cmpb cs fiaddl sub aam xchg mov fcmovne movsl add add mov mov cs pop jecxz ja test cmpsb fcomp aas out inc popf and popa loop dec add sub mov mov push inc in add jl mov or pop push sti mov ljmp dec repnz inc dec inc enter push sti das adc (bad) jnp xor (bad) ss add xchg orl das add lret roll add mov mov pop or sbb add insl aad clc inc aam add jno jmp add jne lcall cmp mov or scas sahf out repnz shrl adc test fimul aam jmp or pusha sbb sub loopne add lock sbb je sbb repz bound xor xchg stc mov mov adc sub sbb inc stos add fiadd daa jge dec inc jne movsl daa jnp in call fiaddl or subl push mov add xor and repz pushf loopne arpl hlt inc rorl lds sarl dec loope or dec loope jo push lds cmp cmp es sbb or inc popa or repnz ss lds cmp inc insl adc jns outsb (bad) mov inc xor dec addl and scas inc or adc add ss dec pop bound (bad) leave jecxz inc mov (bad) jbe in sub call mov jnp pop push inc iret lret push xor add lcall dec stos cmc lds push dec cmpsl jl scas sub mov xchg fiadd ds push push and mov and dec or lock gs pop cwtl cmp rcr and mov add shrb addl ret ljmp pop jne fcoms add or insl jle inc jae ja push test jg and dec pop mov cwtl in inc loop roll jne inc fistpl dec ja push jno aaa jp ret arpl inc add testb idivl (bad) mov mov pushf out inc mov jle adc jp (bad) ds jnp cmp incl ret cmp inc xchg daa cmp mov sbb repz add loop or inc in push xor enter jno cmp movsl add popf andb stos lock ljmp scas ret inc je call loop adc push or sbb insb push lods test test add inc and call aad icebp inc out popa fadds or cmp popf roll rcrb scas fimul jecxz add outsb bound stos add pop or mov or jecxz (bad) ret testl add sbb jnp fiaddl cmpb pop out pop aam jle mov stos lock and ror mov cmp nop xor ret xchg add shll cmc sub pop mov dec and add and iret ss nop cs (bad) adc pushf pushf jecxz adc fstp (bad) rclb pushf lret xchg mov aaa jne cmpsl in adc xchg jb aaa scas fs mov daa scas dec aad ret (bad) lods test cmp add addr16 jbe bound dec sub jno sarb test lods jp pushf cli mov mov add fisubr pop loope subl in roll mov dec cmp ljmp sub fnstcw in push aad inc mov and dec sti push jo dec fsub (bad) lock ds add mov (bad) repnz push cmp outsl add adc (bad) mov xor pusha js in xor adc (bad) push out push imulb in scas sbb mov xchg mull pop aaa punpcklwd (bad) adc or leave inc (bad) mov inc mov out andl mov daa ja or push repz rcl repz sbb sbb clc mov mov cmp (bad) testb incl or adc mull and sub or insb popa data16 add mov jg cltd aaa shlb arpl rcrl jns (bad) fisttpll pop cmpl clc inc ljmp (bad) call push and insb and add (bad) or stos mov inc inc jl mov and popf movsb movb inc (bad) sbb add ret mov add jge jb rolb dec cs push jo movsb fistp (bad) add adc mov and outsb incl xchg or ljmp adcl jo jge push lods or aaa mov addr16 mov mov fwait jge or or xchg push push push insb and nop nopl rorb shll xchg lock movsl mov jp icebp sub jle movsb mov mov fidivrl xchg fwait out sbb sub sub ret iret xor subl add notl push sbbb lret roll orl roll push aaa mov mov pop adc hlt push mov and dec loop adc stc dec out lods (bad) pop gs stc and test xor inc xor js aaa sbb (bad) mov jecxz ja and jbe arpl mov clc jl es popf adc rorl (bad) mov or inc stos push ret xorb daa xor and ss lahf jp call inc pop pop xchg add inc ja lahf and inc aad in in movsb incl es sarb cli das ret in int cmpsl inc fidivl cwtl push cmp pop (bad) aaa add in (bad) inc ljmp (bad) dec add rorl xchg insb inc jbe jae mov mov jecxz mov inc ror inc add pushaw js shrl jbe stc outsb inc xchg pop (bad) fisttp pop sbb and push bnd or fldl add xor jl test push dec ss fwait les gs mov clc and add call sub cmp sbb add aas pop nop sub dec pop rclb inc leave add call bound in inc xchg nop jne das push stos add or mov divb adc push mov pop shrl rorb sub testb push ror xor mov or adc add sbb xchg push call imul aad sbb push push (bad) (bad) mov or add stos test or popa xor incl dec inc mov bound es test mov mov push xor xor imul gs mov or add ja mov mov ret je lahf andps sarb and xchg test cmpl mov mov mov aas test (bad) push pushf mov adc aaa inc test pop and jne mov leave add movnti or ja dec iret and std (bad) ss mov lds (bad) (bad) in les or jo mov cmp hlt mov pop shrb outsb cld clc and incl sub jl (bad) and inc push (bad) subl fdivr add enter loope (bad) dec sbb fadds add and jl ret push fsubrs push test jno mov incl aad fwait loopne sbbl sbb sbb nop stc in icebp inc sub cmp sub push xchg aas lock leave in incl sub pop out imul jo or mov hlt or and add cmc and dec push mulb push add xorl mov xchg push xorl jg push (bad) mov arpl inc call xor mov push push (bad) add repz pop jnp ret sbb mov sub push push mov xchg jns or lret inc mov inc cmp fisubr cmova cmp push cmp rcrb inc push mov (bad) or mov sub psubusw mov xor push js popf les add (bad) loope out sbb daa mov sub cmp xchg mov jo inc mov add outsb popf mov xchg aam mov cwtl jne in pop xor jns mov push jg cmp dec in loop pushf popa in loopne sub push subl inc lret mov adcl adc push inc (bad) push incl lcall or mov adc rclb orb scas in or outsl cmpb (bad) push mov and test pop push (bad) repz movl add inc insl ljmp xchg xlat pop mov add and pop or lds mul int3 and cmp fnop fldl incl rcll jae outsb jmp dec leave add (bad) sbb insb jecxz add adc adc jmp cmc outsl lock addl in and inc dec lea or xorl add orb mov out inc (bad) jne addr16 pop add cmpsl adc and add ljmp lds addl or sub xor outsl ret in push cmp inc lods inc lock push (bad) sbbl les sarb (bad) call add in andl adc (bad) cli fadds cs test loopne xor scas sbb xor sbb in or test insl add dec cmp add call nop gs (bad) (bad) push and bsr subl into adc cmp popf adc xchg sti nop xor mov sti push adc xor subb and test (bad) jmp orl fstl call mov adc mov inc add pop fnstsw add fldl call sub mov insl paddusw in mov std addr16 push push mov test push dec jl push (bad) and adc and adc mov mov fisttpll insb fwait fs sbb cmp in adc sarw and ss sub inc jne and add roll dec dec ljmp std mov sbb shrb xor ret or xor or mov mov mov nop inc fimull dec fildl inc sbb push mov add roll (bad) testb add adc mov sbb mov inc mov mov mov inc mov and inc out fcmovbe add or xchg in and mov das adc mov jl or fwait incl adc sbb inc outsb xor pcmpeqb cmc mov cli sub mov out loope pop or dec pop enter inc jp ja std nop adc xor subb xchg or cmp jbe insl jbe add add movsb dec add aaa dec add sub add inc subl (bad) ficoml mov aaa insl std push and stc lahf inc rsm xor test jle xchg mov mov and (bad) popf adc or sbb ret aad fadd xchg fcoml xchg mov (bad) add sbb inc mov sub xor and sub cwtl fmull push lds rcrb mov xor insl insb cmp loope into scas mull ss arpl mov test and sub inc cmpsl push sbb (bad) adc dec jo cmp jle dec insb mov loope jg or enter sub pop cld mov fucom call add push dec cmp daa (bad) push jle nop cmp lea inc (bad) int adc xlat push mov stc in cmp popa add adc or out test sub add jnp inc xchg push dec in rcrl dec add (bad) std and inc xlat jb jecxz inc insb and mov rcrl push lea test mov jo push aas sub je out stos add add aad mov icebp xchg in xorb js (bad) add add (bad) adc xorl jp fcmovnb adc mov clc (bad) hlt or test mov out repz xchg les roll sti sbb hlt xor jg cmovne lahf add pushw mov nop or add jae push outsl stos pop ja cmp nop dec in out pushf (bad) out in inc ljmp mov adc add fisubrl inc xor fiaddl subl rol hlt int3 outsb xchg mov dec cmpsl add adc cmp insl mov and sbb pop inc fstps hlt stc add jl inc jo sbb jnp mov push (bad) dec cmp mov loop je cmpsb xchg pop sbb stc clc mov (bad) in or ss mov loop int popa aad (bad) fldt cmp incl rolb xchg push in insl clc rcll aas mov repnz cmovg inc jo jnp or stos bound add or popa daa cwtl xor (bad) or inc stos inc push jne rclb and call or mov fnstenv adc dec daa xor bound inc imul lahf pop adc (bad) dec mov mov shrb inc icebp (bad) push xor insl inc mov dec jo xlat pop pop or rcl add daa sub xchg popa sbb dec or sub jae lods cmp daa or push adc mull sbb sbb jl jns add bndstx or dec and (bad) ljmp aaa mov mov inc (bad) xchg lcall out inc xor and push in mov xor push sub bound je scas add adc mov bnd sub cmpsb int3 inc test inc std sbb add ret cmp adc mov fbstp add out jp shl (bad) sbb inc fbstp (bad) mov push (bad) xor xchg fidivrl or push into std mov inc call push imul shrb jbe,pn dec and jo and and aaa jnp jg outsb nop or dec add pop or scas cmp add test out inc inc dec sti cmp mov test push sbb mov lahf xor adc and jns pop fucomip inc lea or push jecxz sub js mov adc dec ja push fwait sbb push or sbb and std call pop (bad) idivl sbb jo insb loop push cs sbb mov out xchg leave push jmp out cltd mov cmp call inc out ret cmp fbstp pop popf mov mov or hlt lret cmc mov push pop or xchg fldt sub test xor imul (bad) mov or bound adc and and cmp fdivl pop or xchg imul inc mov mov andl and ja mov sub dec movsl fildl sub mov adc addl (bad) (bad) cltd sahf xchg jmp or add stc cs test jle or mov xchg mov jle inc mov jg sbb add push jecxz mov ficom cmp sarb or or pusha lret loope xchg stos jecxz psubq (bad) jmp add push add pop cwtl iret push cmpsb jo scas sarl sbb jbe pop leave cmpsb ss and mov insl (bad) and and add push cmpsl push mov jl add mov xor adc mov std (bad) jae cs ljmp and xlat inc add mov sbb stos add clc sbb nop dec clc xchg inc pop adc cmpsl jp pop push mov gs sub in add sub and inc rorb xor mov inc push mov mov add inc mov popf jno mov insl stos sbb jnp leave xor inc dec add (bad) shl xor sbb in cmp fucom xor dec adc adc pushf scas cmp sbb push adc incl rcll cli push sub or jnp addl adcl bound enter in inc dec pusha inc or jbe lcall jns and mov inc cs adc repnz nopl pop or imul mov pop clc jno xchg push rorl rorb mov pop xor mov jl outsb stc fcoml dec ljmp fndisi(8087 je leave xorl subl mov sub nop pusha mov mov mov pop fisubr push jmp lcall adc and rol sub ret pop add xorb xlat push (bad) or fadd arpl sar out pop or dec sbb cmp and adc pop test inc mov push pushf js push repz test jp out jb sub mov sbb xor out aam xlat (bad) pop ret (bad) sti nop das (bad) xor in sti (bad) add mov cmp jbe test sahf test sbb cmp out or std loope hlt push roll arpl sbbb jb push cmp inc lea out inc fcoml pop push cmp sub das mov cmp loopne clc mov jbe sbb cwtl xorl je mov lcall lahf inc sti mov jmp jmp mov pop imul push xchg jle fiadd inc bound jge sarb jno fadds bound and sub push in inc pop loopne ja cli in inc push rcl (bad) mov test xor jo in arpl jnp fs mov pop pavgb mov cmp orl sarl add push xor mov cmc inc pop push lcall out or pushf daa mov pop mov das lret xor mov iret outsb push add ss cmpsb xor mov das mov dec (bad) mov push faddl insl shrb mov push loop daa shll ss lds xor mov mov mov sub std nop inc movsb mov es inc lea mov or int xchg add sbb add xchg mov add aaa add out fneni(8087 adc jge je and pushf xchg push cmpsb dec ficompl xor add cltd pushf (bad) mov stc mov mov adcl int dec xchg push addl aaa sub sarl loopne mov adc aaa std ds pop jl nop std rorb add jp dec push bound mov push cmp leave add adc add dec pop jp cmp stos arpl sbb stos push xor jns rdpmc data16 lahf scas in jae fiadd pop mov jnp sub pushf cld shlb or mov sbb inc push or cmpsb call sbb mov test out adc mov mov and ja xor outsb test pop rolb pop cli shlb sbb addr16 enter arpl pop out sub mov icebp sub pop rcr ljmp je call and add add outsb test dec cmpsl mov aas and push mov (bad) xor pop insl rclb xchg jge push arpl and popa test pop lcall cs lock int fiaddl mov push enter lret mov (bad) mov pop and xchg ja sbb sub jge in inc lcall add insl push sbb pop out (bad) push pop push sbb mov ret adc imul push mov push rclb push mov in sub xchg aad and xchg out in push pushf rclb mov sbb pop fistp and fisttp add std nop push enter leave inc loop fldenv dec (bad) mov repnz jae ds sarb shlb mov jbe pop test loopne sub or add leave add mov inc xor mov daa roll jp pop int mov rorl mov out inc inc cli cmp loopne cmp mov outsb pop and mov dec out or and push sbb inc dec lcall popf jae roll popa lahf fiadd cmp call cmp enter mov xchg add add (bad) dec jns in jb or jno andl xor in sub xor push sbb inc (bad) bound sub add fldl inc sti sub inc sbb je inc xchg dec insl dec dec loopne sbb adc mov adc push xchg jle fiadd enter dec xchg fisttpl sbb bound and and dec sbb nop add pop mov push add push sub imul cmpsl cmp ficoml test adcl jg scas (bad) or (bad) aam dec add insb pop lret inc fistl push add push add fadd sbbl jnp (bad) or and pop pop xor mov mov pop fiadd call loop adc mov (bad) aaa mov imul jnp pop push jae pop add fidivl roll jl cmp mov xchg inc push repz push sbb xchg or pop xor adc fnsave jl cmpsl out andl sbb xor adc ficoml or dec push cld fstl sbb aaa xchg or push add nop setp mov mov incl pop xchg leave add pop fsub (bad) lcall fwait negl mov inc inc outsl cli or mov fcoms xor cli xor inc jno insb insl outsb push add xor push pop scas in jecxz call add (bad) adc sub sbb loop xor lret dec xchg sbb cs xchg jb mov inc fiaddl shr subl ja xchg or and daa xchg pop or and xor mov adc out push (bad) mov lret cld cmp push inc fidivl jns jae xor fnop sbb jp cmp test ds aaa imul xor sbb (bad) call push xor jle and loope roll mov or (bad) dec mov movntps add jo fadds add mov sbb and and mov or popf roll xchg in xchg call popa lods arpl jbe or mov push sub lds pop inc lods ljmp sbb out inc mov ds mov xor xchg adc sti adc sbb in out inc cmpsb ficomp das hlt pushf cmp mov and mov and dec cmp inc jno push jmp push (bad) push add fnstcw sbb sbbb in inc jp shr and imul inc mov add popa cmp jb cmp xor push mov push push sub push lea push xchg (bad) fnop daa movsb inc (bad) loop (bad) xor rcl sbb adc xchg mov repz mov arpl mov sbb insb jnp xor push mov mov fiaddl inc push pushf inc xor add add lock mov jg cmc inc scas adc push hlt insl or inc movsb imul add hlt inc sbb je add xchg sub dec sub cld cmp pop inc sti mov in imul mov jb and mov ja or les or sbb sbbl jg insl cmc sub imull movsb add adc mov inc jmp jge pop addr16 fwait pop in push pop cmpsb sbb cmp fistl sbb subb sbb popa add mulb mov dec lahf adc out lods jl test jo sbb sahf adc jmp mov add jle out add inc mov sti cmpsl and push xor inc movb sub (bad) xor jae mov lcall sbbb fisttp aaa dec insb adc pop icebp inc adc adc jae push sub jbe adc adc (bad) mov lods dec sbb or fidivl daa pop aas xor jg into fmuls adc xor adc cmc sbb mov lea mov xchg sarl dec sub push mov hlt xchg jp mov sbb mov js sbb out jnp and xchg push daa dec (bad) jae inc push and pop mov push add nop wbinvd inc imul sahf xor dec sbb jb enter adc xor pop sbb loop mov add inc adc mov fimull bound (bad) and push jp mov or fsts push push jae cwtl xorb or sbb mov nop cli int pushf rcl hlt or jne pop push sahf pop lahf mov push and hlt leave out xchg sbb in and or xor mov or inc mov call mov and or fidivr sbb add pop mov push mov aam btr sbb push inc jle shlb fs in or cmpsl scas mov mov xor or iret sbb es (bad) xchg mov aam or in push jge pop ljmp lahf scas sub jno es ret movsl jmp addl inc mov mov mov aaa cli out inc int push xchg (bad) mov and add jp add ficompl leave cmp push inc pop movsb repnz or or push (bad) addr16 scas adc or (bad) call dec add or adc leave add xor push clc inc xor ret (bad) and and pop push mov aaa cmp add mov (bad) sbb cmp dec pop push (bad) shr (bad) dec xor jle or pusha daa out cwtl (bad) rolb and or and adc dec stos or sbb push sbb loopne lds push push mov adc lahf adc xchg adc inc aaa addr16 jl and rclb fidiv mov lods adc arpl inc cmp shlb dec sbb aaa jecxz test push and or xor sbbl lock rcr cmp repnz roll jnp xchg dec nop insl popf mov ret hlt test jns cmpsl inc ds jg test imul stc inc fcomp ljmp sti mov out hlt sub push fldl xor leave movsb loope ffreep and imul or leave sbb mov mov (bad) adc push dec addr16 ret jle inc pop push xchg lret cmp test push (bad) push or and mov cmp add testb adc or push int3 ljmp aaa add andb dec stos fnstsw fadds icebp inc mov test mov (bad) lret inc push adc rclb ret inc pushw push rorl inc dec mov fadds out fiadd stc and into or out pop sbb mov mov test enter inc inc outsb ficomp pop xor and sbb cmp subl add test mov outsl das clc mov sbb aam (bad) jnp or movl (bad) and js inc into (bad) rcrl mov popa sub rsqrtps mov das stos loop sbb ret cli loopne lahf mov outsl out mov imul adc gs push mov xchg adc sbb std adc (bad) addr16 cltd cmp and ret mov fiaddl dec sbb pop icebp out lea xchg add lock inc xchg or test aaa test inc lcall leave add or push int xchg fs mov and sub rcr cltd outsl addr16 test xchg cmp xchg jb (bad) mov rolb xor std nop jo push xchg sahf hlt sbb cmpsl pop jp insb rcrb and sbb mov shrb mov ljmp cmp out lret fadds add cs add fstpt mov lock incl inc ret pushf clc mov or (bad) mov add inc (bad) in mov leave movsb loop mov clc inc outsl mov lock push in cmp cmc faddl pop add fcmovnbe inc jp repnz or je mov or int3 xor mov mov mov dec xchg mov (bad) aad gs sbb ficomp adc pop mov cmp pop inc movsb insl (bad) sub or outsb in push and or fcmovnbe in inc cmpsl scas fld1 sbbb nop sub xchg ret insl call inc gs lea cmp divb push into push or icebp inc push mov inc cmp add pop test ret bound push dec ss or mov and pop mov ficompl sbb bound pop and out rcll loopne decb jle (bad) sbb cwtl loop das std push fs mov push adc add in cmp inc xor movsb (bad) fildl add inc mov lods inc mov loop cmp arpl lcall jae jne and inc outsb mov ds mov push jae fcomps xchg pop ds int3 jmp ljmp or and mov fs push add sub dec lahf stos mov sbb lret cwtl jecxz cmovb enter adc aas scas adc cmpsl sbb add cli out inc lods clc dec fiadd inc or mov pop pop loope or dec mov das je xor inc mov aaa mov stc and stos arpl cli and (bad) cmp ficompl fwait pop test (bad) jne cmp scas sub add or pop jae daa (bad) add add adc and mov cwtl inc (bad) cmp cwtl xchg or push xchg mov add test ret jb sbb aaa add add cmp clc adc push aad loop loope pop imul push inc ljmp sub lret sub inc xchg pop xor fiaddl jbe subl (bad) sbb lds and sub dec insb inc cmc daa xor mov subb out punpckhdq sbb into addr16 or mov or add addl inc lods xor outsl test test dec cld shlb dec clc cs sbb fldl stos fucom sub sbb xor ret out imull fcoml mov add clc mov jbe xor inc in inc mov cmp lret jmp std (bad) xor or lahf outsb adc add fsub incl in sbb enter add mov sbb movb (bad) pop xor mov daa sarl ss addl sbb (bad) inc or iret loope adc bound push cmp lahf and rol jmp inc adc pop mov dec mov lret xor addr16 mov es enter add mov dec or push mov mov (bad) xor inc nop dec in pop bound in or pop xchg and adc adc push cmp mov stos inc add addl xchg aam imul enter mov ja xlat inc mov sbb push pop lret lcall push xlat sbb jno cmp adc sahf sbb jle cmpsb clc popf sahf enter shlb fldcw fstpl loope sahf push mov test mov mov repz or cmpsl roll stos in or popa mov xor jo xor fwait mov fimull imul sbb xchg sbb hlt pusha dec jmp test add pop lods aaa pop sbb (bad) test dec or and lods cmp push push dec dec fcomp ja fwait jge adc movsl stos push outsl mov scas sti and mov xchg inc sub mov and setp rol xchg inc aam and xorl out cmp pop mov (bad) aaa jbe add jnp or mull dec mov pushf push arpl mov sub aaa incl in or jge add ds inc xor shlb inc nop bnd inc int3 mov mov ja adc push or popf lds sbb std enter jp clc movsb insb fadds (bad) cmp and dec cli add jmp push into adc ret ljmp sbb sbb fadds mov or bound pop sub lods data16 or mov enter repz inc or or js cmp xlat cwtl int fmulp pcmpgtb jmp mov jmp addl pusha and adc dec and jge xor or int3 (bad) jno test in jecxz xchg fsub push cmp dec popf loop in mov pop test mov jbe jne sub mov xor popa imul in (bad) push push mov jns aaa loope dec fildl (bad) add (bad) adc cmc sbb xchg jg pop lds cmp loopne xor add and shr (bad) mov rcl add adc mov jg nop push pop lds insl xchg xchg push outsb xchg cld fwait mov push daa fldenv pop cmp mov adc xchg scas enter xchg pop arpl int3 pushf sti push jae sbb mov rolb stos mov scas cmp pop inc cmc test outsb (bad) add out lret (bad) cmc mov push mov bound imul jle int mov inc add movsl add sbb lock jmp xchg iret adc adc dec clc pmulhuw out and lar cmp outsb les dec sti lods fisubl test mov xchg sub out inc push mov add and xor push inc mov jae add fldl or test repz or fwait pushf aas cld nop add push or out cmp pusha cmp or adc sbbl (bad) xchg pop fimull leave add popa adc std sub push xchg xchg pop inc xchg xor arpl loope mov lea cmp add mov dec scas push lret xor addr16 cmovo adc push sbb adc in ja imul shll xorl lea or sbb in (bad) fldl or fsubr in les pop or dec adc pop out test in jbe fs and cmp cmp ret push push push add (bad) sbb jns and jp mov jo adcb add ret aad xchg jp fistl sbb cmp (bad) in xor outsb repnz test sbb add (bad) jecxz fiadd mov out add mov fstpl popa mov and outsl mov and mov sti cmp arpl sub lcall imul inc int3 jmp int stc push adc mov aas add pop push orb mov outsb hlt or mov push shr pushf push fistp fimull push repz cmp ds sub jbe ds or ds popa loope mov sahf xchg jp insb hlt dec fiadd inc sub cltd push mov rol mov nop push pop add clc adc popf (bad) in push xor inc add mov ret push mov movsb cld (bad) jne cmp and sbbb cmp push (bad) idivl jno xor inc aas or mov push nop dec aas pop and fdivl pop and adc int flds jae iret (bad) popa pop adc fiaddl (bad) fidivl test mov adc loop mov mov test and rorb push pop fdivl je andps cmp clc mov xchg cmp jbe or ds mull pop std test or xor (bad) xchg roll add mov inc jle les sub sbbl lods sbb xchg cli fiaddl andps jbe or fimull sbb jg jle push or dec pop add insl stc and xchg or out add repz lahf sbb xor jbe sub jp push mov enter lret pop adc sbb shl int3 pop loopne call fdivrs in pusha subb push in sbb into or cltd sub fcoms orb insl push ja add pusha cltd sbb loope dec pop mov scas sbb loop faddl out and jbe,pn jnp xchg or pop jnp adc push sarl sbb and mov es add loopne xorl jnp pop adc clc movsb out inc adc shl andl pop sbb inc insb popf enter (bad) in push jnp dec mov idiv and jbe mov mov (bad) les mov sbb lcall mov sbb (bad) cmp ret ret (bad) mov inc out or sahf ret aad outsl xlat xor ja mov repz je dec fisttpl cmp push inc xor cmp in add mov pop jno adc cmc inc add push push shr out push dec push push sbb adc mov sbb or in imul or (bad) xchg dec stc lock test repnz enter and sub sbb rclb inc das push pop faddl add out inc loop je dec lods (bad) call inc cs cmp pop pop or jb lret inc insb int3 sub and push (bad) sub or sbb cmp imul mov xlat lock add cmc inc sbb loop faddl sbb mov loop fs test incl mov outsb mov push jmp mov sahf cmpsl repz frstor clc pop xchg push push jle scas sbb add or incl test add or dec mov adc outsb push sbb add jmp push addb xor ret sbb bnd sbb nop imul gs or xor mov notl outsb pop add adc or orb cwtl out add movsb mov push (bad) add adc icebp test push stc jle out iret rolb and mov in xchg push in nop xor dec sahf sub and (bad) mov mov sahf ret push pop dec cmp aaa fbld add pop xchg jb pop sbb (bad) cli mov and insb jecxz pushf adc icebp push test mov inc loop pop dec in mov cmp jo mov rolb or sbb in call leave fwait dec cmp or roll xchg incl xchg mov and pop ja rsqrtps mov or mov dec das and push jecxz inc pop cmp dec mov jno xchg xchg push test nop or mov (bad) cmc inc lcall jae adc dec cli outsb lahf add in imul pop imul or pop mov adc or decb jb movsl cld rcr push or int3 xor cmp add (bad) sbb (bad) outsl addr16 mov sbb push xchg ss add cmp scas sbbl add pushf iret inc adc add out jmp (bad) xlat faddl add loop inc pop mov outsl push adc loope cmp (bad) lcall jle es xor les in sbb in lods jbe sbb test inc es lock cli inc xchg add aas or int clc xchg xor jns push call popf iret and dec push sub mov dec or mov xchg pop cmp rcll sub loopne sbb push clc pop xor sbb in rolb fadds cld shl andl inc addr16 add inc push jl enter sarb (bad) outsl gs adc imul dec jnp je pop mov push imul faddl jne clc mov jb adc pop push xchg into xor cmp test hlt gs enter aad int3 icebp cli sub sbb and dec jns mov jno std sub or sub push loope add jne in repnz sti and addr16 daa repnz inc jne incl adc adc mov sub dec or out adc jp pop mov mov in incl sub dec das pusha sar mov roll jno adc in xor xlat mov insl std (bad) add rclb sub mov lock add ret jno mov inc bound cld nop dec cmpsl jne leave add ds fadds sbb add icebp inc dec cwtl cmovns sub mov mov jno add sbb (bad) or sub inc or add fidivl add dec sbb (bad) jo int3 xchg jg jns xorl push dec repz cli out inc lret push ret push push cmpl inc dec out and pop fsubl repz or mov xlat mov sbbl jno mov andl or lcall dec sbb sub iret jns mov xor cmp xor lds adc dec clc cmp aad inc xchg insl fucomi adc mov push mov loope fiaddl loopne lret ljmp push stc mov loope nop imul pushf iret hlt mov andl mov outsb dec xor adc fmuls cmp bound push fldl lods fsub repz pop in add cmpl sub fs cmp insb cmc pop ljmp adc popa shr std sarl pop xor jmp jg pop inc push push jecxz pop push xor lock icebp push or xchg outsl add pop movsb jne add pop adc lret dec xchg sub test inc (bad) mov call stos roll shr jb inc das adc mov inc les push cmp jae add roll ljmp pop or pop aam punpckhbw (bad) mov call pop outsl mov ret xlat cmp shrb sti int3 jbe inc into ljmp insb fcmovnb push xchg int3 fldl pop mov push push pushf addr16 and inc ljmp inc adc (bad) mov stos xchg xchg orl test stc jae sbb daa mov (bad) mov mov adc cmp out movsb pop cmp sbb pushf scas into dec add jo cmp (bad) xchg add cmp or sub push push stos in fprem test push cmp cmp cmp mul jle repnz ret testb mov push ret ret xor popl das xchg out push and lock sub popa jae adc iret mov out push sub mov or mov mov adc or leave adc popf icebp pop xlat call icebp jp (bad) iret dec lcall repz xchg cs inc xchg jno inc cmp pop jno (bad) out inc stos cmpsb pop decb add add sub add xor mov inc ss aaa inc (bad) cmp fiadd sub enter mov mov dec sbb gs dec mov inc ret inc cmpsl xor pop xor addl ret addr16 inc pusha inc nop sub fldl inc mov push dec movsb lahf loope out ds and mov lcall mov bound dec aad push push insl insl push mov movsb push jne aas and out mov or jp out dec sti push adc push push push lock outsb sbb imul outsb mov push cld inc sbb or popa fnsave (bad) aam sarb std sub mov mov pop into and out sbb loop int jns scas pop cmpsl mov sub hlt pop scas in pop mov mov adc orl adc imul pop mov arpl add jmp out imul inc and (bad) repnz addl outsb push mov test pop clc mov xchg mov scas jle mov sub (bad) arpl jbe rclb and les inc or or add xchg shlb mov mov add movsl cmp inc mov push xor stc lret cld and rcl mov or jle sbb popf xchg mov fidivrl insl dec push fnop and xor or mov mov jb sbb js inc cmp add xor cmp outsl pop repnz and or inc adc in push insb pop mov sbbl icebp sub stos retw pusha lret outsb jg add lods out das out inc mov add jb mov adc jg jnp inc in fdivs pop roll (bad) inc loope cs movsb in pop decb dec sti xor mov and xchg xlat jno push imul add xchg and or add gs or fwait jo mov outsl xchg mov movsl inc and or fcomi inc js repz jno orl ljmp faddl fnstsw out jnp dec cmp outsl add xorb or mov add pop stos pop loope mov add loopne divl xchg sbb push ret mov adc (bad) std xchg sub not sub call fist lret cli cmp cmp stos jecxz shrb inc jae inc xor hlt enter shlb adcl and xor pop test push or xor imul icebp mov pop push mov pop out loop ss loopne and pusha xchg adc mov sub sub paddusw cmp xor jnp mov mov inc mov (bad) add int3 or xchg adc aas (bad) fcmovnbe add (bad) lods clc mov lcall jb outsl mov pop and cwtl loopne or rcll push xor orl adc or add daa movsl mov insb jno sub push and dec lcall pop xchg insl aaa stc and in xchg push call insl xchg or les loopne insl sbb pop jnp aas inc sbb insl cwtl (bad) stc mov div mov outsb adc cmp or movsl xor fistpl inc or mov rclb call inc ret rorb add sbb loopne out sbb imul popa ja inc popa mov js inc outsl andl sbb inc aas and jnp xchg xchg push push inc out jle and jno sarb lock sbb incl insb ja sbb push test sub inc imul fcmove adc mov mov adc fwait dec jp data16 (bad) ss sub (bad) call insb cmp add inc lods sub iret out adc jecxz add loop popf lea jmp push mov out ljmp movsl add aas push jle adc rcl jae jecxz push clc adc mov mov fildl cmpsl mov dec lods std push lock nop gs test cmp mov mov call add ja jnp rcr xor push imul mov jmp sbbb pop cli dec int add iret jecxz js mov jne push or mov add fst les cmp ljmp mov jno (bad) sti mov andb rolb and pop loopne pop jmp or scas test pop mov loop out push hlt out repz jge or popa (bad) pop mov sarb jge sahf pop push stos in xor gs jl dec dec clc push pop sbb cmp inc ja imul js in pusha xorl xor aad les mull mov add or add (bad) ss aad repz and and scas stc mov inc faddl (bad) xor sbb sub pop or sbb jle (bad) lea jo ja cmp or setp and and pop push les repnz or jge faddl setb push inc cmp (bad) cmp out push adc inc arpl mov insl (bad) and adcl fmul sti nop push xchg cld stos or ficompl and mov into andb pop mov dec pop pop rclb (bad) xlat fiadd (bad) dec outsl add add jo mov subb (bad) rorb mov inc inc adc or or (bad) xchg push mov js sbbl adc lahf lds mov push mov cwtl frstor cld adc add inc lods fldt sbb setg out push lret cli std adc sti icebp and dec dec lcall shlb js int3 fadds xchg adc into xor add aad sbb add inc adc cs les add and aam and mov sub pusha mov mov sbb pop pop in push xor cmp jecxz jb push xor fadds (bad) push test nop and jns cmc std shrb mov xlat iret or fild les inc mov inc lock push jmp aam ss mov out inc rcl inc xor or jg loop outsl mov inc inc loope jb je sbb inc popf adc add rcll dec repnz jmp or and sbb mov cmpl add and and inc xor into sbb add add pusha idivl and inc dec mov add and aas cmc inc lcall and xlat dec imul cmp es and stos mov (bad) cli sub push stos aas push push (bad) ljmp mov fbstp dec pop mov jo jl sahf scas pop stc mov int push sbb push int dec adc adc add cli xchg add bound xor in fwait cmp lds pop nop jbe jmp int3 add popa xorl pop sti nop adc loope (bad) hlt sub mov iret cmp push sub (bad) mov loopne pop jns or add mov mov jne add jbe mov mov add pop roll inc push mov pop xor inc pop pop into lock in (bad) sbbl inc mov push push mov daa jnp iret bound push jbe,pn cmp fsubs roll xchg enter orl (bad) xchg xchg xchg lret or fmull or push cli lods xchg or sarl sarb add mov inc faddl sbb aam sbb outsb inc loopne ret mov test test cmp cmpsl int ljmp inc notl sbb sti mov leave add test sar adc push divl pop inc in pop mov stos sbb nop jg adc bound je xchg xlat (bad) (bad) inc or xchg js sbb or mov or aaa pusha and jbe scas in movsb dec (bad) into (bad) and fwait or dec or dec or lcall xor jecxz mov int mov inc cmpsl add and pop lahf xor mov (bad) jmp dec add decb es sbb mov dec mov add cmp mov arpl cmp imul orl cmc xchg inc add movsl inc int3 jns jo jmp rclb push lcall insb push jnp adc cs cmp add bound push mov mov into out push adc arpl push xor jl out and jb mov cwtl daa mov popf sti lods push arpl cltd (bad) or adc aas adc ja and int3 call inc sti mov jp dec idivl incl ljmp pop ret or cli mov or rcll pop std outsb mov add cmp (bad) icebp lods cmp addr16 and pop push mov lods shl push rcrl mov les mov fwait and jae out sbb cli std dec sub adc push fistl mov ss lcall mov imul icebp xchg or cmp push fcoml inc in mov adc aam jmp xchg vminss icebp lds pop negb in call loop add sbb push ret je pop fnstsw inc jp insb jo addr16 add nop cmpsl xchg push dec add pusha sahf rcrl test clc imul arpl sahf sarb cmp xchg fstpt and mov lahf (bad) add mov or das pop mov loope imul mov in mov add pop (bad) leave lds cs or inc add adc jnp lret push cmpsb pop mov or sbb adc iret adc adc xorl subl sahf arpl decb loope push jns push pop sti xor popf loop incb cmp outsl stc cmpsl lds mov add nop sbb pop out or pop lahf out sub jnp cmp mov fwait dec add js sbbl or add adc fimul inc push xchg xchg sbb pop mov cmp sub cmp jl dec movsb mov xor or fstl (bad) nop jecxz enter psubusb popaw movsl add mov push pop movlps pop rcll aaa mov loopne push jns mov mov inc repz cmp push cmp cli and cmp xchg test sarb and xor cmp ja popf popf test ljmp adc inc repz xor jne mov addb stos lods mov mov mov cld push cmp jmp xlat das jle fmul xchg cmp or sbb sahf scas enter and rol pop pop call cs mov mov ret imul pop stos clc sbb xor inc rolb hlt inc lea mov cmp addl jns or push stos push fstpt mov out sahf cmp mov cmpsl int3 jns dec aaa fimul xor idivl pcmpeqd pop ds roll bnd aam jnp mov je sar and movsb pusha and adc and testl call adc (bad) sbb ret inc jecxz add inc mov adc jg add add ss pop popa add or loop out add and stos add fistpll adcl or (bad) xor ljmp dec add stos int in and ret fidivl leave add and sbb inc inc nop stc xor insb inc ds push sti test movsl mov fnsave cmpsl movsl fs mov idivl and add imul addl fcoms and cmpsl cmc dec out inc pop jmp inc mov aas jl shlb cltd iret lahf jbe xor (bad) aam outsl dec fstl outsl mov mov jae adc test pop les (bad) mov fimul push pop into (bad) iret or mov loop mov xor or mov ret push add cmc iret push or xchg clc mov out inc loop nop or jne push xchg rcr shrb scas (bad) aad inc inc cmp into push push xchg and in call mov mov cmp jge inc int inc (bad) ret push cld dec push sub cmp sbb movl pusha outsl loope ljmp sbb ja mov push out flds (bad) or idiv and sbb pop aas xchg add xorl xorl callw popa sbb es es adcl std dec xor add push push mov add mov sbbl add int3 mov mov inc adc or insb jnp loopne xor push loop fwait add dec push mov jecxz add je jb in dec add pop jle or sarb out lds sbb bound xor push addr16 data16 and test inc cmp inc xor and (bad) sub lods adc int3 fidivr and push sti icebp mov ret mov hlt xor scas lahf sbb sahf mov cmp jnp add aaa mov loop cmp in scas jns aas mov sbb int icebp hlt inc cld inc add imul outsb sub jecxz cli mov pop cs test imul mov add sub enter jle ffreep add ja orl popa mov cld push repnz mov ror cmpsl add cmp xchg adc jbe inc movl xchg int3 mov aam push or test stos enter or mov loopne adc movsl (bad) lret aad push ljmp mov dec cwtl in inc scas jno inc cmpb or jl sbb jmp loop adc mov adc mov js out and xchg mov inc jne mov add sbb or inc push std call jecxz or xorb insl mov mov push enter add cmp fcoml inc push in out adc dec jne int3 nop push push mov incl movsl add rolb adc dec fisttpl stos bound les mov push in cltd lock js pusha daa jl and das add nop subl cwtl sahf pop mov movsl stos repz das daa xor lea xchg (bad) xchg or int3 mov dec xor int3 jbe data16 xchg xchg ss (bad) lcall and test ret inc or xor jo add mov (bad) (bad) daa lds push mov (bad) out nop push push mov test jp ja aas in sub sbbb cmpsl in stos inc (bad) clc in cmp loopne mov cli xor add mov push add popf roll mov fcompl in inc push pushf inc (bad) jns in mov push out and pop xor inc mov push push out stos jbe xorl hlt xor mov sub dec push fiaddl (bad) enter mov out in inc cmp cltd pop fwait roll cmp cmp scas loopne push lahf ficoml shrl call les xchg add mov lret pop arpl xchg and pop push cmpsl xchg mov enter dec dec imul ja lret andb test and xchg ljmp (bad) ss cmp repz test mov and push std enter cmpb es (bad) lea loope addr16 mov jns,pn push jbe adc cmc inc ljmp jge and (bad) mov gs mov inc push xchg (bad) loop pop addr16 insb pop or xchg (bad) test addr16 cli mulb sub insb add imul inc add jecxz push iret scas or jb stos imul and mov add arpl rcr in cmp xlat (bad) or loop cltd lock lea lods jnp mov popf clc inc leave add adc mov jnp mov jge jg in stc mov xor and sbb and push arpl les mov add push les add rcrl lret add jnp adc repnz mov sbb mov cld nop das inc arpl or mov cmp pushf std shrb adc fnsave jno and loop sti nop popa clc scas fnsave shrb add imul dec in testl push arpl nop push mov sti mov mov call (bad) jbe and stc mov dec outsl sub and dec repz sbb xor mov add sbb cmp pop in incl (bad) daa ljmp arpl js sti nop jae sub inc in and incl adc adc dec clc das in push int insb out inc call daa adc cmp lods inc ja push jnp fwait lcall mov fisubl jne or and jns jnp jp je clc lret add xor jae or jae (bad) iret push or mov push mov mov mov push dec rcr push scas push mov lret dec mov subb push aas std mov xchg inc shrb je adc sarl sbb scas daa adc push mov stos inc shlb jns aas sub (bad) outsl hlt and mov je inc loope xor push pop cwtl push outsl in in or jae adc or insb lds or sub out nop push jbe xlat push sbb inc pop xor mov adc lret testb pop jb push out inc dec xchg daa xor ds add loope sbbl jl push push rclb sbb es (bad) mov sbb insb daa int3 and test ret inc ret sub std movsl add pusha and nop sub adc addb cltd (bad) mov jg daa roll hlt mov les push or fmuls add jle xchg add mov ret mov out or mov add jnp lods lds je out xor mov lcall or xchg mov flds push iret stos and fcomi and into jns or add scas mov je repz mov call repz add shr cmp daa dec pushf push xchg adc jmp add mov hlt push scas loop xlat xorl sub in mov rcl fidivrl adc push aas lods clc leave push push enter jns out mov cmp xor lahf mull popf mov int xor inc in and sbb sbb ds test aaa sub adc adc cmpsl jmp or inc cli in adc mov push andl or sbb nop jae push mov in inc cmp push cmc pop mov inc into sub mov roll mov xchg fldl test mov ds add sbb movsb mov les rorb icebp lahf add (bad) or pop aam dec mov les aam mov dec add incl bswap out cmpl and and test (bad) fcmovnb or inc out dec jp mov push or or jb sbb add push orl sbb cmp les (bad) jne (bad) js push fcomi xorl mov orl sarl adc sti (bad) jne mov add and add lahf xor out addb mov sar jae mov dec ffree cli mov cmp add sbb sarl ret (bad) pop mov add inc push sub jp mov sub push jbe or and dec pop insb add push push movhps jmp inc out or gs sbb mov cmp push ret outsl push push outsl push into jnp or stos add mov cwtl es clc sub inc ss or (bad) xchg pop sbb sbb rolb cs mov hlt pop incl pop and cs adc jge cli leave add dec add xchg fiaddl jl adc add pop push and cmp sub and (bad) and (bad) or or outsl pop cmp jns lcall ret push ret xchg and aad sti ljmp movsb jns imul (bad) sbb into jmp and jns mov add int3 sti inc nop pop cli mov mov lock in and (bad) push adc and (bad) xlat jb ljmp mov popf inc leave add xchg or inc xor (bad) fstpt mov lods sbb inc fstpl adc mov sbb dec mov pushf lock (bad) mov pushf mov sbb out pop fcmovbe sbbl jns lds push daa adc mov test les push inc mov enter pusha inc ret mov xchg pop insl nop jp imul insb xchg inc nop dec push mov sub iret in out clc in adc jecxz or dec aad sbb sbb js inc add cmp enter shl adcl push cmpsb or push les sbb nop and das les inc push add or push jbe fwait dec (bad) pop jb lea sub leave push xchg cmp cmp test add lods fiadd inc mov adc subb xor mov incl inc subb inc push push jb inc dec or stc and pushf jno mov arpl ds fdivrl xor clc mov xor cmp (bad) sub adc in faddl in aaa fimull xchg or movb or dec sub mov cmp xchg fimul push adc xchg push xor popa repnz cmp push push add push dec imul pop stc mov push rolb jo orl adcl or inc es (bad) nop out test xchg sub lea jmp push lea punpcklwd outsl fprem1 jb dec (bad) aad mov sub aad (bad) ss adc inc stos push or pop loope outsb loopne int push ja lcall and in inc or dec and test mov jbe loopne mov aam mov or push xchg cmovnp lret cli rorb ror pop mov test and testl pop push jl push mov loope inc scas imul or inc cmp cmp in adc imul fldt add pushf sarl shrb adc (bad) pop loop daa push dec jnp cmp outsl jle xor mov push imul pusha inc mov call sbb mov ficompl mov call sbb out mov cmp rcrl jp sbb cmp inc and jecxz insl mov pop cmp js rcrb add add sbb push inc in scas test push push mov ret pop aam add cmpsl popf xchg add mov fadds faddl out inc push ss std xchg jecxz cmp push xlat cs sbb xchg xchg add xor in sub cmp hlt sbb test mov loop sarb mov jge mov push arpl in fsubr lahf push sbb dec out push gs inc aaa mov rcr pusha (bad) dec ss mov pop test jge (bad) frstor int notb sbb and outsl inc cli cwtl jo pop sub icebp inc adc out cwtl mov test js (bad) xchg mov (bad) mov incl movsl add mov push test mov adc es add faddl bound push jp imul (bad) push push fwait ret dec cmpsl mov pop mov gs adc dec jg jo rolb xchg xchg fldl stos pop lods rcrl data16 jbe ret xor int mov inc push lods push arpl dec xchg push pop imul int3 (bad) cmp imul shlb sub mov push dec pop int pusha out add push mov jae subl xor pop xor (bad) push adc popa add fucom add sbb mov sbb jg push sbb pop stc adc (bad) jg les scas out xchg mov mov mov subl jg,pt inc dec incl cwtl and push ja or loope pop jle sbb fcmovnb outsl fcoms movsl mov cmp dec or jno add (bad) cwtl in std nop and jnp out or daa roll loope push push mov out mov les rolb or outsb mov paddw jbe xchg dec (bad) mov dec shlb xchg (bad) mull add lret pop pop ret xor sbb fs xor pop add xchg xchg cmp adcl xchg or sbb rclb add ljmp dec fstps mov mov inc mov fwait mov inc mov mov adc jg incb or mov xchg cmc xchg or (bad) add or stc nop push movsl push lcall mov and addr16 mov insl cmp insl and jecxz push dec adc test arpl mov push cmc sbb dec out sub std push or mov and jns dec inc adc and xchg mov and inc and push push int add dec or add inc inc and movsl nop es jge (bad) in mov jo mov add or sbbw sub mov lcall neg aas in subl mov insl mov aaa cli jl das dec clc addr16 ficoml push rcrb shlb out inc xor cmp ret cmp (bad) mov icebp xor imul mov xchg inc inc inc dec cmpsb addr16 mov inc cmp inc xor mov mov rcrl popa enter (bad) in imul (bad) or or test dec pop dec clc sbb fs jnp mov call inc ja daa jmp add add or sbb mov (bad) int dec call mov outsb js xchg add add mov mov xchg adc or sbbl aad ljmp jne cmp mov mov sub sbb loopne sbbb or and rolb std sbb mov mov out jbe sbb mov and outsl and inc lods mov push leave add icebp add lock mov mov (bad) lock test and es push popa adc nop imul out fisub cmp les (bad) pop gs inc mov cld nop pop (bad) fiadd push push add das outsl xor fstps test nop (bad) clc push xchg pop fwait scas cwtl (bad) xchg push jg jbe add mov jno mov dec dec pop mov xchg or inc (bad) jl aaa cmp les jns pop sub in in mov lock lahf inc adc cmp test jle add fbstp imull or inc js mov mov insl pushf adc insl fistl add cmp inc cmp gs mov mov sub (bad) icebp in mov pop push push outsl push outsb jae jo inc or mov clc jae add jle pop loop cmp imul push js push testl mov ret xor (bad) pcmpeqw pop xor dec dec jp jo and xor mov sbb add test (bad) test cmc cs jmp ja pushf xchg test insl xor sbbl push test test rcr or xor mov mov nop adc jl arpl jo mov xor push add push stos inc loop ja testb xchg jno inc xlat (bad) sbb cmp aas loop lcall add mov sub out fcomi and hlt jp pop inc dec mov nop cmp inc jecxz add out (bad) adc stc push aaa jl sub loope inc call mov imul test inc pop movsb fcoms jb ret ds add (bad) add addl xlat jle outsl and xor adc add jae aad fcmovnbe sub xor sbb incl stos repz add mov adc lock dec clc sbb push (bad) mov flds sub jo add xchg pop inc (bad) xor mov popa out inc push push jno sbb call cmc jp xlat popf push (bad) add inc adc hlt inc adc adc sub mov incl mov aam inc xchg out iret pop movsb xchg clc jl add push loopne mov ret and adc (bad) pmulhuw in inc call mov clc mov xor sbb jg testb mov jmp inc fistpl cmpb aas pop rclb (bad) xor adc and sbb jnp xorl insl cltd and sti push mov inc adc dec pop push jp pop cld push (bad) cmpsl bound jge sbb mov inc pop mov jmp or jmp push pusha jbe fsubrl das test sbb or jp pop xchg jae jnp push roll aas mov sbb imul sti stc add pop add push subl incl test sub mov ds xchg negl push (bad) mov sub sub rcl pushf enter daa adc sbb lret push push cmpsb data16 mov dec (bad) inc fisttpll adc divl add mov (bad) jmp mov jp push in fs cmp std test xor repz roll jge sbb pop out cmp xchg test pop cmc ljmp subb gs (bad) mov test (bad) adc inc rolb outsb fcmovne sarb xchg (bad) jae lret fstpl xor pop jb call jo mov jecxz and stos inc adc sbb (bad) in paddd and push add mov lds push or pop aas ljmp add decb rcll jb mov pop div add push rcrb orl and fdivrl (bad) pop push mov pop inc jne jnp fisttpl and mov incl cwtl inc push push pushf sub mov mov les adc push adc jb add pusha testl daa idivb inc xchg or cmp subl shlb pop dec in inc ljmp aaa out je mov ds repz arpl bound test mov incl hlt xchg add fisttpl lea insl cld inc into popa add xchg outsb sub adc push ljmp (bad) mov data16 push add mov inc adc adc mov fcmovnu add inc jg jecxz roll jle insb lret cmp aad dec (bad) (bad) incl (bad) push pop xor ja enter cmpsb adc mov push push pop outsl scas dec adc pop in pop mov cmp cmpsl roll fs (bad) jge and stos sbb mov or rcrl incl mov jmp mov xchg or outsl adc dec pop call mov adc xchg sbb outsb sti and or in shr mov rolb jns (bad) lock sbb dec or dec cmp inc jb (bad) dec movsb dec mov inc sbb mov call outsb out (bad) bound shlb inc clc inc out xorb out inc insl pop jmp and xor adc mov inc sbb iret sub fisubrl or insb popa stos dec call add jo adc cmpsl adc inc inc aam adc clc mov aas bound hlt push loop lret aam enter jo add xchg pop mov repnz dec insb push xor mov and aad dec pop call (bad) scas inc sbb adc dec cmp rorl sbb scas dec sbb add shr jle daa add xor orl or mov jecxz,pn in inc movsl jl jg add stc aaa mov in test dec mov push cmpsb (bad) aaa adc xor add flds mov push (bad) jbe and mov jo mov iret (bad) hlt adc xor inc add jae mov test (bad) dec mov addl (bad) stc mov clc mov dec icebp addl das push or mov mov mov popa lret addb inc lea fcoms sub aam clc dec inc out stos xchg scas sti and lods lea add stc addb mov int3 push dec or pushf or icebp mov jmp add lahf mov out inc push jle aaa sar xchg add push mov mov sbb cmp lcall repz mov add adc (bad) mov pop push or outsb out fmuls cmp or cmp cwtl mov mov test ljmp add mov pop outsb rcll jnp xor out test cmp daa loop mov mov jmp outsb inc mov xor ds inc mul add int and cld mov enter (bad) iret push cli and mov ss (bad) sub add js (bad) push inc out mov xchg lds mov cmp je insl in push push test mov or mov ljmp sbb inc mov dec out sbbb mov popa cld xor cmpsl cli nop xor outsl inc inc (bad) (bad) dec out push sbb outsb hlt sbb aaa cli mov enter mov bts rcrl jmp (bad) sbb arpl shrb loop test cmp pop sbb mov pop cmp orl (bad) in pop scas cmp adc xchg sahf add pop pop nop cs lock rcrb in loop test in repz lods and jbe or inc ret cld dec ret jl and dec and in mov inc inc xor stos push inc add adc xchg add jmp mov xor ret xorl dec mulb cld nop or add incl sub dec pop ret mov push pop pop or xor add mov mov pop sub fidivr or mov mov inc aam and imul insl outsb repnz push shr (bad) adc ds mov pusha cmp jo mov in xor addb loopne (bad) jne inc or sbb fiadd add xchg inc pop rolb dec xlat jb cmpsl ss inc and mov mov cmp pop adcl jg sbbl bnd nop insl xor mov ds xorb unpcklps push ljmp insb ja call pop adc pusha cli pushf es push aam cmc rcll mov sarb movsb je fild enter inc pop out lcall sbb addr16 xchg (bad) imull push lret jg or or outsb pop in and loop and pop divl adc (bad) or leave add sub outsb hlt sbb pop imul repz lds push outsb ret push (bad) mov sub jae sbb mov mov rclb sbb and iret xchg int arpl and imul jl imul sbb (bad) (bad) test cmpsb add jle (bad) jge rorb ficom aas dec sbb xor loop xchg adc je insb pop loope push je loopne dec insb and mov xor and fwait jns sbb div arpl add pop add pushf les push sbb mov loopne mov push cmp sbb subl pop mov inc adc push dec adc aam mov sub and mov pop lea add popf les pop sub pop jp cld cmp lods and shlb flds aas pop enter add cmc loopne jbe std mov adc cmp adc test xchg cmovle mov dec mov roll add add repz mov rclb inc lcall mov cmp cmp imul jne xor ss cmpsb outsl stc push mov jnp jbe dec (bad) dec mov dec iret mov (bad) pop mov push push (bad) push ret fiaddl ss fiaddl out icebp inc fnsave push mov mov dec mov cmp adcl sbbl sti dec (bad) pop insb inc aas mov dec fwait pop push inc call enter shlb sub sarb ss int3 adc push mov popa sti scas sub xor fs outsb les xchg xor fwait scas sbb test jbe popa fsubl xchg or int mov fimul stc jl and int3 cltd and xchg or and push sbb pop outsl jmp dec jo jno inc inc sbb lcall mov repz mov xor jp hlt mov push rolb add pop push les push (bad) jl jbe js lret stc and ficompl test insl ja nop insl sub sar dec inc out pop shlb and in inc fidivl sbb cmp xor cmp add cmp or mov pushf or in add adc arpl mov int andl int3 rorb sbb psraw jg inc lahf mov (bad) push cmc dec jnp ja lcall mov dec stc nop sbbb mov push inc lcall add sbb cmp pop sub mov add pop insl inc push add movsb (bad) and rcrl inc mov cmp sbb js mov mov imul xor testb push and pop dec mov rcrb push sbbl or push or mov gs roll into inc mov js push enter pop push stos push arpl les loope data16 add sbb clc sbb pop (bad) or cmp mov movsl add incl stos and pop dec insb xorl and jne shlb insl mov sub movsl push out mov jle sub xor dec lock into cld (bad) loopne fiaddl or testb add out popl arpl pop dec add adc in push xchg and adc and repz aad xlat push or hlt test rorb adc adc xor stc test pop mov mov gs dec or shlb jl sub gs inc (bad) scas dec sbb call xor mov pop sub shll dec int3 shlb dec pop ret jno add iret je adc andl adc je imul cmp out jnp push push pop ret dec cld push dec jge es test daa push leave add sahf fisubr cmpsl mov push ljmp jnp xor out add mov cmp sbb test imul adc pop hlt (bad) and roll and pop cmp ret mov outsl pop popa sub rcrb iret mov mov add inc rorb mov push fnstsw inc lret negl ret xchg xor divb loopne (bad) aas pop enter and add les pop cmp adc jle inc ret pop inc jg jl add out outsb rolb (bad) push fwait mov sbb sahf nop testb inc lea inc les xchg dec cmovbe ds cmp add add jp add dec xchg add daa inc in inc xchg (bad) jle in sub pop inc mov or pop pop pop loope jle sbb mov dec add xchg pop es mov sbb ja shl sub iret add gs bound and movsb cld pop in nop es cmpsl cmp insl mov adc add mov mov inc fimul and mov or mov lock out cmpl scas hlt or imul adc fbstp out in sbb leave add mov lcall add loopne push pop mov pusha lahf das flds push lret in shl adc aaa mov and int mov inc cmovns adc dec or cmp sub xchg (bad) fucom add pop in adc ds add fisubl and outsl adc inc dec test in xor pusha or lret xor push cmc out or nop dec lods andl (bad) dec fiadd pop lock movsb pop call jp outsb orl (bad) je push jnp or xchg aam adc mov add add mov insl nop add and cwtl into fimul clc call adc jae mov int3 and in cmp jbe jns sub leave add subl push push xchg and sbb subb addr16 sbb xor leave add inc mov push jnp aam (bad) xchg dec aam or inc or xchg add aad bound adc inc push lcall (bad) in shr orb sbb popf repz popa add jp popa cs ds sbb cmpsl cmp in and push push dec repz aad add and rorl das daa jno jno ljmp adc enter repnz and adc mov inc lcall std dec pop xchg or repnz sahf jns xlat ffree insl jg sbb cltd out cmpsl adc or jl sbb mov lea out push jae mov mov adc cs inc int or xorl lods sbb dec aaa mov inc pop or cmc or cwtl fwait insl pop roll cmp push xlat mov add mov inc roll push mov aas lret addr16 jb push sbb test add pop (bad) daa xchg pop mov mov outsl gs nop gs stc loop push dec adc (bad) (bad) push adc mov cmpsb icebp outsl add jne test push aaa fld cwtl (bad) lods test ror pop sarl sbb or xor movsl add jne (bad) mov xor mov mov (bad) andb lret std mov push imul add icebp inc xchg mov xor jne ret add inc pop fnstsw lea add insl enter push ret out jge jne xchg jbe xchg add scas (bad) and dec fs stos jg pop xchg jle cmp adc push insb and push mov dec out enter jnp mov (bad) xor popw scas xor scas and xchg repnz dec mov push (bad) (bad) sbb scas in xorl iret daa xor out sub rorl pop mov mov pop push jo pop add xchg (bad) or xchg or ret or stc inc mov popa lret push ret lret jg adc outsb sbb dec adc mov inc pusha aaa leave add insb pop xchg or cmp pop fstpl mov jecxz pop movsl dec cli daa cs jmp add add jne sbb pop aam les add jnp push sarl add sub aaa ret and push dec cmpsb addr16 mov jnp xchg push movsl mov out inc and ret int3 cwtl cmp push sub push adc mov mov sbb push hlt push test adc arpl pop jle adc fbstp out pop fildll hlt pop cmpsb cld ss mov add jg mov mov flds dec inc add pusha add dec in xorl mov push rcrb sub aas or movsb cltd cmpsb push pop mov je loopne jae mov ss cmp dec inc jg jle cmp sbbl enter hlt push cmp jge mov xor pop insl enter pop dec xchg adc popa add sbb mov (bad) mov fwait dec ficompl jle or xor xchg or jecxz mov lds loop sbb mov fnsetpm(287 or dec (bad) cmpsl cmp out and cmpsl movsb mov push les mov fldenv jns cmc clc mov lahf mul sbbl or call mov int3 cltd (bad) test fiadd ret nop ljmp rol shll lea mov in push inc lds repnz push adc xor xor or aas and adc xchg sbb jge and les (bad) or fs xor jmp jb int3 and loopne xchg sbb arpl sbb adc xchg pop push pop mov (bad) dec or inc ja rcrb mov jmp pop xchg push xlat mov add popa mov xor pop sub or rolb lock nop gs mov out fadds push (bad) xor cwtl aas in aad aam inc les fwait dec repz popf xor call ficom in lock or dec and je or inc nop int3 and in in fiadd jbe ret xor fcmovbe loopne or and nop add xchg push fisubr pop iret jae sahf lods insb mov adcl jecxz outsb cmp ds adc imul jns add pop xchg jnp inc movsb dec inc fstl je icebp push cmp sub mov imul inc dec add rcll mov sarb mov (bad) dec dec addl hlt inc pushfw jo fisubrl in add add push and sub xchg lods insl cmp (bad) push gs test xor cmp push repz mov fwait subl or cmpsb (bad) xor insl xor cld push dec push pushf jmp arpl insb int3 or inc xchg pop mov fstpt jbe jg mov rorl aaa and aas xchg in ds jb out sub movsl xchg (bad) mov dec or fstps ret (bad) out or mov out subl mov ss in inc and inc cmp fs mov popf fsubp jbe les cmp sub insb ret cmc out jmp call out leave add cmc test int3 lcall xchg inc ftst out aas pop rolb dec movsb loope popa add xor mov int pop ss push addr16 or pop mov dec push lret sarb pop jb and in cli pop movl sbb mov inc pusha aaa leave add pop xchg iret jbe cmc or add jmp mov mov adc out adc pop push scas das pop inc add (bad) lea or or inc insl aaa or cwtl add test jo aas faddl mov and lods mov xor mov xchg jge inc mov sbb pop xor jb cmpsl lret push cli faddl push js divb stc test add andps aas in hlt inc mov mov push in lock sbbb lret fidivr lods jne cli leave push (bad) xor sahf in imul lret add stos test lods icebp lock data16 jbe jl arpl insb pop and out (bad) adc loopne inc bound add mov punpckhbw push pop or and jno fildl pop jne jnp leave add add pop pop mov sbb add pop add xor or jecxz (bad) mov mov inc jbe faddl enter cmp fcoml fwait mov nop dec mov enter in stc and xchg cmp mov and test repnz sahf jns xlat pop ret sbb sahf push mov fbld push mov ss cli sbb jae sbbl jmp jae sub outsb subb popa fcoml cs push adc imul (bad) lea jecxz lods cmpb outsl mov gs das int3 sahf dec or cmpsb dec outsl repnz add pop cmc add jnp ja loopne xor ss dec ds adc mov jne xorb xchg xchg in sbbl add addl xchg push add je mov mov fcmove sbb (bad) adc pop and data16 addl add pop cmp mulb xchg sbb incl stos roll xor xchg and or es jno in out inc mov sub xor incl xor (bad) lea pop pop push jae imul les enter adc add aaa (bad) aam addr16 push lahf jmp sti adc mov inc das add shlb xor (bad) pop into incl psubusw push inc in inc sub lods in mov es stos xorl dec cmp test push in jbe mov cmp inc lods jno add or dec sbb (bad) push call push jno and (bad) mov xor and ds cmp test les clc and and movq xchg int fidivl lock (bad) sbb clc and cltd xor sti mov testb mov add int3 ja ljmp sub into mov call std jecxz loopne cmp loope ja push add add push insb loop sbb sbb mov push insb ret cwtl cmpsl pop jno lret stos lock push jnp loope dec inc in lea sbb in and mov sbb popa cmp cmp lcall mov sbb ja jnp jbe or inc dec cmp (bad) jb imul (bad) adc sbb stos add inc or ja pop or inc mov ljmp (bad) mov mov inc cmp idivl sar adc dec in push mov jp rolb sbb int mov (bad) and or inc lahf scas sub jbe inc dec cmp dec cmp fadds push leave add nop jg pop push clc push outsb movsb dec in mov adc mov mov repnz adc loopne xchg sub cmp out incl outsl in (bad) insl and (bad) out mov or or clc jbe or push inc stos pop cmp fdivl aaa (bad) push sbb push sbb insl popf out hlt orl or xchg sahf (bad) or lret xchg (bad) js inc fldl sahf dec dec lret pop pop in shrl inc daa insb xor and add pop jno insb nop and fscale add pop mov mov jmp loope xchg add and jbe xlat adc cmp sub adc xor lods incl xor pushf push pop adc push jecxz pop pop and add in (bad) neg add pop push rcrb dec js ljmp into pusha js je outsl fistp lret xor jbe add ss xor inc inc lcall adc and aam pop xlat inc addr16 mov inc mov icebp ret in mov daa fmuls push mov pop mov pop push xchg lea (bad) rclb cmc xchg add pop xchg pop mov push daa sub incl push scas jl jns lcall clc add push andl mov xchg fistpl and mov pusha push jle adc fidivl iret xor insl hlt data16 add rcll add jg imul incl lods aaa xchg mov outsl mov xchg jo incl adc pop fisttp inc jmp outsb sub mov pop mov add push mov jg shlb xchg cld and add lret push xchg enter xchg mov (bad) push sbb sub add mov out xchg add js add pop in sub mov jne xor ds mov flds inc lds sub iret cli nop cmovne ja push jno (bad) dec sub mov add (bad) cmpl adc pop fimull fsts aaa sbb imul mov sub add lods add or adc fwait inc pop outsb or lods pop lock inc aam inc jbe jmp out mov out xor push sub fwait pop adc loope (bad) adc mov pop sbb mov sub (bad) sahf in lods xor xorl mov imul mov test cmc movsb stc and je cwtl xor lea inc jae dec adc push test mov mov mov test lods movsl inc clc lcall inc iret inc sub cld and and push mov imul leave mov sbb jne cld movsl add mov mov shrb iret or cmp ds and xor call in repz outsb and movsl sbb sub repnz incl sub aaa (bad) imul enter scas push das cmp inc ucomiss mov mov popa cmp dec out pushf mov clc repnz je dec mov jns mov clc sub popa or aas fiaddl (bad) out push repnz test sub cmp pop cltd mov outsl psubusw mov jb out adc push xchg push jb (bad) imul in sub inc sahf fwait xchg scas lret dec (bad) pop sti nop dec mov push pop pop lods jno xor inc fiaddl jbe pop ljmp dec or mov jle mov popf jecxz add frstor dec stos or push adc (bad) adc cmpsl leave add mov ds test inc pop rorb lods subb sbb pop inc scas or or sti jg adc xchg testb or add mov nop xchg adc daa adc mov xchg dec add lret adc cmpsb xor pusha add inc mov xor and and add idivl mov push dec movsb push mov shlb call imul rolb dec fsubs cmpsb and push pop xor bound dec or sbb scas mov mov outsb or cmpsl cmc pop leave add inc and test and inc out inc inc (bad) popa (bad) cmp lds add jne jg andl in inc xor push pusha jno fistp (bad) call mov xchg push int ds mov insl pusha aas in inc stos (bad) aam mov sbb dec jne std sub inc jmp mov testb cwtl out mov pop imul and xchg outsl dec decb sub add dec push sahf sub adc fmulp adc sbb and mov jp cwtl jb pop add outsl and subl in pushf rorb fistp icebp jp addr16 adc nop inc mov push dec ss mov inc out mov loop lods pop stc mov sbb fiaddl add push daa bound arpl jae scas std test dec stc jb sub nop aaa in out int and js pop add or mov enter xor mov cmp cltd leave push push aad sbb scas fidivl out inc sub cmp sbb fstpl xlat add cmp add inc add jo jne push lds sub inc adc data16 stos push ret pop jecxz xchg sbb jne adc out loopne test push fidivrl lea jo js adc outsl mov adc mov (bad) pop ret jno sbb adc cli jl dec xor fisttpll mov nop test leave add paddd sbb test xlat popf call cltd inc mov push mov inc int3 outsl mov test xor push outsl push and sbb aas sub jae push outsl (bad) dec inc mov adc mov adc ss inc (bad) cli adc loope es call dec pop call test mov fs push int in sub cmp (bad) loope testb rorl adc mov jb pop pop inc xor cmp or pop push ficom rolb pop (bad) call pop bound pusha jbe aaa cmp shll inc pop cmp cmp jle loop je fcmovne roll imul adc ret je or inc cld rorb mov inc test daa push sarb test push inc ret cmpsl add out inc mov into push or add scas movb out inc or mov fnsave xchg sbb or xor imul mov lret mov orl xlat pushf mov out jle add jge lret enter xor ds and fisubl out fiaddl jb stos cld pop and sbb cs jae loope sbb and cmp insl leave add fiadd jl insb push mov fs add push clc cltd dec out mov leave test (bad) push jnp xor sub mov out push je movsb jb enter (bad) mov jbe add xchg lret pop dec jnp outsb addl mov aaa inc jmp xlat inc lcall ficoml nop add push jmp stos push (bad) jno aaa push push adc or pop roll lock ljmp out or insb je mov loope mov ss outsb rorb add mov sub ficompl or les xor jecxz add jmp or push mov mov lret mov adc mov cs lea mov nop inc (bad) cmp fldcw sbb push adc or sbb stos popa pop xor xor stos aam (bad) mulb (bad) add adc xchg add outsl xor mull and xchg in and lret lods outsl lret cmp fistpl mov outsl leave add popa das mov (bad) xor mov ds ds (bad) mov addl cmp into into jo pop fcoml cmp xchg lahf adc inc cmpsb cmpsb mov popa js sub mov jbe or jnp cmp idiv mov rolb mulb push xchg inc rcrb mov cs aaa jae subb push inc cwtl and aad sbb xchg inc sahf xor and inc or add hlt cli and sbb xchg inc (bad) insl (bad) daa icebp push push sbb or add insb cmp push cmpsl mov and inc jnp addr16 outsl push xchg push sub jno mov bound test jl iret mov mov adc addl insl les repz subb jl js or pop repz sbb addr16 pop push xor je fistpl pop mov test fisub inc fs jae,pn (bad) ja mov getsec fsub pop dec dec dec fwait jle push stos ljmp mov sub add xor add enter adc rorb incl negl xchg (bad) loopne mov outsb shr add jo mov inc xchg imul movsb test and mov fs call xchg repz insb adc nop (bad) cmpsb aad inc ret cmp add movsl xor sbb fucomi int push sarl and pop or mov and pop dec orb inc je sti add adc push xor mov xor dec jge sub push jnp jns lds icebp cmp or push aad jg ja add add add or jb popa (bad) push insl push aam popl sbb bound add inc jle rorb cwtl jp or or sub dec in push and pop lret pop outsb jbe,pt in push (bad) mov xor add je jp fisubr in lret inc insl lods loope insl or rcrb or xor repnz (bad) ss jle dec inc sbb dec adcl cmp std and cwtl pop je jnp loope out sub (bad) mov notb sbb mov jge hlt dec adc xor gs and ljmp or cmpsb bound sti mov (bad) xchg sbb iret rcrl pop ja rep incl sub add cmp jo cmp mov (bad) adc data16 and cmp orl mov inc mov bound loopne sbb sub or mov test add dec lret jl lcall rolb cmp mov daa jne inc je mov aad cmpsb aas push mov mov int call mov aaa stc outsl out inc cs and (bad) xchg push adc ficoml pop push sbb inc mov movsb test pop roll lock inc push inc add or in sub sbb inc pusha push xchg mov add inc and push dec in or sbb fcomip push jno mov mov stos fbstp sbb fsubrs add mov hlt flds aam push adc dec bound pusha (bad) sbb push call les addl fidivrl aam push test xchg (bad) imull add or dec or adc dec ljmp test mov movsl push push adc add in ds icebp xor cmp and aad xor test dec and ret in out iret stos jno jo lret out cmp jl jne pop inc out sahf push mov cmp mov xlat stos add push sub (bad) mov inc (bad) mov push adc jo xor les sbb mov dec or (bad) add inc add sub xor imul fimull sbb sub sbb nop inc mov testl push sub mov inc cwtl inc jecxz jl pusha pop and cmpl aam ret lods test (bad) dec sar lcall and sub daa jmp or das push icebp push push add pop call mov jg in sarl loopne ljmp inc pop stos jmp js js loopne (bad) ret jmp adc out xchg das fcmovbe adc xor jbe add leave add adc cwtl in inc cmpb push shrb inc hlt inc fmull shrl movsb popa test into and inc xlat jne pushf pop int mov cld lret int call or inc into lds roll in mov ja ljmp pop inc ljmp sahf or mov jnp imul loop jne mov pop push sbb xor fnstsw sahf test int ret xlat out inc mov add lahf pop nop dec cmpl loope fadds and loope cmp lea bound mov pop cmp hlt inc and lret jno sub lock insl jmp xor popl inc cmp mov fistpl aas lret lcall push push add jo inc pop push popf xchg xorl fbstp int3 push xor cmp testl cmc jb je cmp mull or aam push add les mov sbb adc sahf xchg in lret pop mov sub push cltd in fwait push loop adc xchg insl sbb mov push pop add cltd inc xchg mov xchg or popf arpl mov or sbb mov (bad) stc xchg add xor dec add mov setnp inc add mov mov ds out repz rcrb or sbb in xor test inc jl push icebp xchg sub or orl push int3 cmp push push push mov cmp sbb mov push ds (bad) sbb lea xchg inc arpl adc cmp test cld scas (bad) andl (bad) pop xor mov push pop and pusha xor cmp xor sbb adc xor push shll pop xchg add push pop mov adc inc inc xchg inc outsl mov mov icebp popl repnz aam mov mov lcall lcall fistpll (bad) out xchg add adc addr16 je fldl push repnz out daa inc int xchg dec sub test mov pop inc insl dec and jge dec add flds popf stos sbb pop xor lock cmpsl testl dec outsb mov inc sub add pop daa dec test outsl repnz aas xchg jns push pop pop inc mov outsl cmp cmp inc pusha adc data16 es sub sbbl and add ret loop xor popa add push outsb fsubrl fsubl popf addl pop mov (bad) and and mov mov into inc iret je shrb mov cmp xor or roll dec lock cmp lcall lods pop daa out jae cld and into repz fstl cmp xor mov (bad) adc (bad) nop or jae mov imulb mov sbb sbb pop stc and ds push (bad) or and adc outsb daa dec lock inc stos cmp adc fiaddl xchg sub gs clc mov mov int into dec push daa pushf jl add and jbe out jo into adc cmp inc int3 enter or and leave sub cmp inc andb (bad) imul jp cmp test adc aam rolb adc push ror fdivs add lea stos xor nop cmp add and and shr dec aaa jmp sbb adcl nop (bad) cmp add (bad) repnz push mov pop mov sbb sbb movsb inc fsubs lds lahf xor (bad) jbe mov into sub mov aam leave in je loop cmp add (bad) adc and sti sbb pop inc in mov hlt ja aas das adc mov roll mov test hlt push xchg jmp or cmp vunpcklps pop roll lea fs push arpl repz xor xor bound mov push iret push call fldt cmp mov fiaddl movsl enter mov setae sbb adc rclb out push int3 lds ret pop inc add call jle push push (bad) push loop add rorl pop aas pop push pop jmp dec sti inc sarb push cli fmuls rclb push and pop adc xorb xlat jb call cwtl subl cmp fistpll sbb cli lock mov fildl pop in stc mov xlat (bad) xorl daa popa mov mov sbbl fwait push jnp dec push or cs add in popa jle daa push sub jno mov cmp flds pop xchg jo shlb xchg dec xchg add loop shlb ljmp incl lcall popa (bad) dec or clc inc jle sbb (bad) xor jns (bad) sub fnop (bad) sub les add push and jle sub xor xchg in adc push cs and sub rcrl dec jb push test sbb (bad) jne data16 sbb lcall adc jge sbb popa add sbb and add call test jle sub xor pop lods add mov (bad) jno adc add xor (bad) cld nop jne xchg inc cwtl adc mov lods push cwtl sbb cmpsl insl push movsb in jno jno xor rcr mov subl add (bad) jne adc lret cmp fwait daa xchg jp push rcll adc aas pop inc jne and loop stos or jo in fadds (bad) lcall mov in sub adc insb or inc inc xchg push les add cmp mov je inc push repz adc negl ljmp and xor xchg add pop push cmpsl push push inc jo imulb or in inc xlat sbb and loope je dec in mov or pushf sbb jbe jnp adc pop fs insl sbb inc jb jnp roll jmp or mov add pusha andl push popf cld and ljmp aam pop out jge and dec repnz mov adc cmp mov int and push fmuls rcr clc jo xor out inc ljmp mov push inc cltd icebp inc stos inc mov adc jnp sbbl lret sbbl out inc fdivl cmp add inc insl repnz sbb sbb (bad) imul cmp (bad) or movsl mov daa fisubl jge es xchg or sbbl add ss nop sub mov jae mov enter mov jb push xor dec mov mov movl inc ret fstl popa out push mov cltd inc stos inc lret xchg leave int stos sub dec clc sbb and push repz jbe sbb sti mov aas pop stos nop xor dec popf fwait jnp sub xchg jnp test insb orb mov lock add movsb cli and dec dec jbe and and inc sub cmpsb jbe add add dec add ja repnz push arpl scas cmp shll adc (bad) pusha subl ret jle push adc xchg mov pop add jle out push or jo inc lret or mov mov add mov add fiaddl pop adc in and jne stos fs lods and call subb ljmp js push sahf mov repz inc dec fldcw aad imul fisubr sbb into cmp inc fld1 subl adc add inc mov add or repnz lock mov imul popf xlat loop stos data16 lret mov sub jno stc mov ds pop outsb loope aad add sbb scas sub adc orl rolb gs rorb inc adcl jle and xchg lret repz push push imul or fistpll xchg push ss and pop push add lret in jno inc cs and out sbb xor lods daa js add lods outsb push sarb xchg jp daa pop loopne xlat inc add ss fldl imul call or xor aas je cmpsl mov or cmp inc repz jge enter mov add push ss hlt xor aam subb inc jae xor push cmp call mov mov outsl stc and or jne and (bad) or movsl sub xlat mov cmpsl stc (bad) add jecxz dec out and pop push mov jl cmp jns sub (bad) call push adc sti mov xchg adc repnz inc js gs xor sub test inc push test push (bad) sahf xor sti push sbb test repz or jle repnz mov mov stos add xor dec sbb jnp xchg jo cld stc mov daa jp sub xor dec inc push imul test insl dec popf insl mov add or or mov je xchg lds or insl popf roll ds pop stos or mov aas movsl fisubr scas lock adc and jne sbb (bad) pusha mov jecxz addr16 mov addl leave add scas and dec or mov fadds push dec cmp xchg in adc scas mov lahf lods mov mov dec sti push pusha sahf inc add scas je or add (bad) hlt fs fstpt aaa push mov add int3 cmp inc mov leave add (bad) push push add lcall nop (bad) fiaddl and mov imul insb inc nop sub cmp shlb js xchg scas inc jo fist fwait repnz roll shr aas xchg (bad) inc jmp outsl inc in xor fprem1 outsb xor mov adc mov (bad) xor sarl repnz push xchg fstpl lds popf mov fsubrl add xchg std (bad) jne arpl xor or mov or movsl ret iret testl test inc sub shlb and inc adc pop inc out test xor sbbl or rclb add ds inc insl xor xchg lcall in mov cmpsl imull or mov cmpsb sti enter cmp rcrl and idivb insl mov mov movsb fistp fldt arpl xorl push bnd outsb negl out lahf xor cwtl inc inc push out pop and mov add xor (bad) mov add jp jnp (bad) sahf xchg xor fsts mov inc out incl clc loopne dec movsb negb xchg fwait and and pop dec int cmp sub fldl fdivs jae mov aas fiadd mov pop dec imul jno loope (bad) sub inc (bad) mov mov mov push in in cmp ljmp xchg mov xor cmp inc pop and lea mov (bad) loope in xorl xchg or or cmpsb in push sub incl bound dec cltd iret addr16 movsl and cmp inc and cmp fwait inc sbb mov daa cmp jle (bad) mov insl pop jle xchg jns loopne inc and inc mov cmpsl vpcmpeqd int incl adc mov add mov mov js inc sbb and fsubrs imul inc jmp out inc das cmpsl mov xor mov hlt mov mov jno adc sub sbb dec fdivrl mov leave push aam jmp rorb inc pushf push pop nop jnp and dec pop push mov pop xor push mov mov mov jns lahf pop inc sbb sarb hlt inc cli pop add (bad) xor or int3 xor pushf cmp inc pop imul and mov in testl xor push sti pop mov inc push cmp inc push sahf xor mov sub or jnp nop fstl call lds call scas cli push gs jno cmpsl testl addl dec cmp add or sub cli mov aam mov int add hlt adc jno ret sbb xchg es out je mov inc lods push (bad) xchg push test inc or mov cmp mov sbb dec in repnz out add rolb outsb add jl pop movsb sbb jle jg add inc repnz mov inc ficoml add loopne adc test mov enter inc and push loop addl jl adc movsb loopne xchg xchg and scas popf int3 mov push shrl add add mov popa adcl push fcmove cltd inc xchg pop xor add xor add add fs fstpt sarb std add fdivrl push mov dec daa lods jg add jl push xchg btc leave mov (bad) push bswap shr leave inc stos sbb lods mov mov les hlt sbb bound adc dec push mov sarl inc adc stos decb mov xchg shr fsubl push imul mov incl or dec pop mov enter inc loopne int add mov (bad) xlat xor inc out pop jmp or and cmp repz pop dec pop jno and shl pop mov push lsl fs sub push fsts xchg loop pop (bad) hlt inc mov and fldt dec push shl subl fldenv ds sbb push push repnz inc or pop jg subl and rcll in jno ja add mov sbb iret testl sahf cmp cmp inc xlat cwtl imul outsb sbb insb mov adcl ja enter (bad) mov int fdivrs xchg xchg cmp test inc lds test testb out mov fisttpll adc lods inc int3 stos mov loopne push shll add aad cmp pop data16 sub cs add out shlb ss fldl hlt mov sub out inc push inc mov std shlb sahf aam or sub (bad) test pusha push cmp inc cmp ljmp outsl mov add fs push mov push lret pop fwait cmpb orl incl pop rclb add ljmp mov push sub sbb adc out aas ret nop into and adc add outsl out andb lret mov orb jo ficom popa out add xchg gs and mov inc push sub fldl2e subl in inc sbb movsb insb inc add insb rcr sahf insl sbb jne adc rol outsl cli mov je popf mov iret ja cli and jno and ljmp jp pusha add add add orb (bad) out in mov mov push out mov fadds mov sbbl xchg sbb mov arpl push fildl aaa push xchg or mov ret repz fstl adc fdivrs or inc (bad) adc mov jg sbb xor and (bad) pop stc mov mov test popa xorl inc push push mov push push push jecxz cmc jns or les jno jge or push inc dec lea add fiadd and lahf push add (bad) cmp ljmp xchg sti push sub push fwait mov aas das mov fstl (bad) arpl sti mov cmp mov push inc rorb out sbb addl mov jge sbb mov ds dec xchg mov js fildll cmp inc xchg stc inc ljmp dec mov pusha mov inc add ror mov adc imul or stos mov (bad) jo cwtl xchg sbb cmpsl xor or xchg (bad) mov push (bad) mov scas add inc and sbb inc mov mov jge dec push leave xchg pop leave add pop jbe in hlt inc push in dec xlat mov sbb arpl sbb mov cmp mov ja popa add push mov leave xchg repnz rolb mov adc or lret and jae incb das (bad) sub in xchg enter push rclw addr16 adc (bad) xchg testb pushf mov clc popa hlt stc and mov mov xchg fnsave out cmp mov fiadd jl or in repz pusha or xchg inc add or pop ret pop int (bad) jl clc movsl mov cmpl xor ret data16 ljmp xor cmp add mov jmp xor iret flds shlb outsb xchg and in pop mov dec dec adc xchg mov (bad) test pop test in add dec cmp sahf hlt or sbb pop mov mov sbb add outsb mov sub push jnp mov pop loopne push daa out adc add lret dec push fwait xchg sbbl sub js inc mov push mov pop shll sub cwtl adc das push subl sbb jno fsubrs push hlt or mov xchg push sub dec fmuls push popa add (bad) std inc roll dec dec lcall std push aaa inc push cld or test jb add outsb (bad) in push xor xchg sub mov popf shll jne cmp sub sub cmp and pop ss punpcklbw mov cmp cmp lcall fimul mov and push xor (bad) push add int (bad) adc adc ljmp fwait cmp xorl sbb or xor jl cmp lock xchg and adc or mov add and fwait push fbld or xchg jg (bad) xchg or and add test pop int imul pop sbb mov cwtl out xor movsl movsl scas sbb rorl sub add out jbe fistp and mulb jo add adc cmp cli mov cltd xchg mov scas cmp rolb cmp cmp js (bad) fimull cmpsl pop mov (bad) dec add mov inc inc and mulb (bad) add inc add cmc sub daa mov push sbb incl aaa inc pop jp mov or jecxz mov cmp sbb sar in jne sti push (bad) stos and out outsl ret or mov std mov mov imul and xchg pop push jp inc mov sarl jnp stos push repz das mov call jnp mov sahf and imul adcl xorb adc enter jl push jnp push xor sub data16 incl mov lock arpl mov hlt adc shr pop sub mov aaa (bad) mov lods sarb add nop pop movsb xchg push insb dec xchg cmp push cmpsb dec or stc or sahf or add loop lret scas cld stos (bad) mov dec mov scas sbb jp cmp or or mov adc or cmp iret mov jno cmc lods dec enter jecxz pop jnp xor (bad) call (bad) fcos add mov imul push sbbl cmp aad sar or int3 pop imul sti jge adc xchg sbb arpl add pop push and adc cmp jns fsubp push add add mov jl push bnd sbb loope in adc xor das or mov div lahf xor (bad) incl in imul inc hlt inc ljmp xor data16 in add jno sbb insb imul (bad) add xcrypt-ecb cmpsl leave add (bad) lea subl fidiv mov jecxz sbb add jmp sbb pop xchg and into or roll inc ret rcll ror shrb inc mov add mov mov inc jno sub adc sub test jle orl movsb add adc sub sti idivl adc jb and fwait push testb adc repz out aam cs mov out sub ror cmp sahf hlt pop mov xchg (bad) (bad) push fcoml imul sti cmpsl int push and ja incl and (bad) popa adc dec add into dec pop mov mov sub arpl int push adc bound andl gs ja adc mov les jae push jp jnp mov pop loop ret das fisubl push js popl and inc jne mov out sbb adc mov (bad) push push scas loopne xchg or orl fucomp mov int3 fwait stc popf push dec sub xchg cmp dec sbb sbb mov rolb add int and add dec mov dec test addr16 loope subl mov arpl push and incl sub ljmp repnz xchg dec or roll mov add popa jno adc shll or inc cmpsb in pop out lahf push push loop mov mov or sbbl shlb sbbb pop pop xor imul ss fiaddl add and fs inc xor call push (bad) mov scas loop xor sub ret adc jp mov mov push dec ss push loope out les add arpl inc ret and es sbb pop mov fwait sbb or push or mov or lods daa or (bad) adc pop or dec ljmp popf push and or push imul push pop dec mov (bad) lcall cmp sbb mov and stos xor fidivrl inc pop mov pop xchg mov lea enter push ljmp data16 int insl ret (bad) lock subb mov push subb cltd scas jo add (bad) mov xor (bad) dec ss and orl mov fs xchg or loopne pop pushf in and sbb and or inc sbb pop (bad) mov out popa add enter aaa push aas aaa xlat xchg or and jge push mov icebp xor pop push jbe shrb add lock mov aaa adc pop mov xor add xor lahf fiaddl movsl pop movsb sti xchg dec aad pop cwtl mov dec test inc dec das ret out adc or inc gs mov dec fdivrl cs movsb adc sbb in push mov jmp adc (bad) imul sbb pusha jbe xorl jmp (bad) cmp mov and push lds aam adc jno mov inc mov jae push push mov add push inc int or cld inc (bad) xchg add hlt scas sbb out or outsl cmc and imul nop inc sub inc js addr16 lret cmp inc lcall pop jge pop dec out push subb inc jns shrb dec outsl mov adc (bad) xchg xchg outsb and or mov lods mov scas mov add push mov clc pop lahf fs not jnp mov mov pop clc pop call push leave push push pop icebp inc or lods jo loope lds push outsl inc sbbl sub pusha cli pop add jns outsl out stos mov mov add in nop inc xlat jb jne jecxz xor pop popf sbb or sar lods inc ljmp ss subl sbb mov loope mov jmp ds sbb adc stos jecxz jns jne add aas pop dec add pop mov xor orb (bad) pop ss cmp lahf adc cmpsb mov and rolb xchg in and jge add (bad) xor mov data16 shll fwait push push jnp (bad) addr16 les mov paddusw aam dec in jns xor xchg in mov or cmc and sarb xchg cmp adc and or (bad) xchg sbbb dec push push mov sbb stos and clc xchg add push insl jo and jns outsb push add icebp aad cmp cmp and push sbb call add dec (bad) repz fildll call xor int enter std aad aaa inc in stos int inc icebp cmp sar ljmp in lret xchg mov orl std rolb add fstl mov sbb cmpl adc jne (bad) xchg andl xor fadds sub jno ret mov lahf push sbb or jecxz and xor iret pushf lahf lcall mov jbe (bad) fstps rcrl (bad) stc test mov xchg jmp loop nop daa inc insl pop jp sbb test sbb rolb adc out jge push (bad) mov (bad) xor fisttpll add mov mov insb movsb loop sbb jns sbb icebp lea dec stos dec cmc lods aam idivb sub arpl cmp ret xor lret xchg nop and pop in stc mov cwtl dec out or push mov lock sbb daa fisubl aas pop call in aad out mov arpl int3 sbbl int3 and mov dec pusha neg add mov push ficompl or xor cli and fs ljmp mov popf and sub rcrl inc sbb lods adcl add jno or jne mov subb addl insl and fs adc in movsl pop addr16 fs sbb mov outsb outsl lcall mov (bad) ja mov pop cmp aas and ret push add jb addb ljmp mov fldl test inc jo (bad) out sbb (bad) xchg or xchg or jne mov arpl add mov xor sub (bad) sbb popf nop data16 arpl rorb mov clc ja push jle pop fcomps inc adc addr16 push or sahf or lods or out imul cmpl sub popa pop test jns,pn sbb add add addr16 mov adc stc mov jo xor or mov rcrb sbb add jmp in out test dec push mov pushf (bad) hlt xchg sbb mov fisttp xor jb cmp out cmpl mov int cli pop push push pop push out and or jp push adc xchg shrb arpl fisubrl adc sbb js or cmp inc sbb or les loop add cmp cltd into fiadd pop cmp dec mov adc popf cld rclb or imul js nop (bad) ds fwait cmc mov popf sbb inc ss push push xor xor push out subl cmp sub mov outsb out js sbb mov mov aas test mov lcall adc fiaddl cmc mov rcrl or add pushf xor xchg stos or jae repnz mov sub je push push jae (bad) data16 sbb loope dec sub test testb or leave inc in mov (bad) xchg incl and movsb dec cmp pop mov imul mov icebp jo or sbb push mov dec aam mov (bad) cmp cli push or push jl flds inc mov iret incl push add ret sahf lret mull in out add cmpl sub packsswb js sahf and ja ficoml pop mov roll xchg (bad) pop test jge dec clc jl adc (bad) and inc je mov cmc lcall rclb popa sbb or add rolb out sub nop dec negl sub sbb jmp xorb or cmp mov add pop mov push mov mov and mov push loopne push push xchg cs (bad) in das mov jmp adc sub into mov cmp pop cmp xor fmull (bad) push jo or dec add fcmovu xor mov cmp and inc sub rolb sbb mov or jne repz jae in sbb adc test sbb mov pop test adc ret add rolb or push or jl add add xchg xchg mov pop add push push mov jae add test fcoml imul cli fiaddl push push and pushf mov mov ljmp aad in inc adc xor xorl inc mov and insb inc jne jno shlb sbb push imul insb out hlt inc insb cmp (bad) push jp jne lods icebp cmc xchg add inc arpl mov incl pop enter jns adc mov add add mov loopne rorb or sbb xchg sbb mov adc roll int3 xchg adc sbb adc fst repnz shlb out or scas mov js (bad) jl inc fcmovbe mov lock ja jns push icebp adc add sbb roll pop xchg sarb mov es dec cmp mov adc mov adc pop add sbb add fiaddl mov xor add je push sub add andps pop nop inc xchg ja mull adc jecxz inc push pushf dec inc push jecxz js and aad clc fadds aaa inc jae mov cli int xor cmp adc add out dec jb cmc stc mov jle mulb fistl or push mov add or mov cmc pop out sbb add je aad shl outsb adc scas dec add out xor je inc test push inc add mov stc inc and fwait ja (bad) testb xor scas cli jg mov or cmc inc xchg lock in in mov mov add xchg pop (bad) cwtl mov popf (bad) out inc notb and ret jl adc in stos jl aam loop sub inc push adc mov icebp ret aad xor popa int3 and rorb sbb inc mov mov adc loopne pop rorb (bad) test scas inc inc inc fsts mov cmp cmp ljmp push les in fiaddl aaa dec fnsave in sub push or out outsl lahf out subl es insb ja xor ja adc cmp lahf push repnz arpl mov dec pop sbb incl mov arpl sub sbb push or add insl (bad) dec imul sbb rcrb pushf cmp int mov lcall aad sbb sub dec pop sar or jmp aam roll jg add push int3 lock lahf sub push xchg adc pop ss loopne add add aaa mov cmpsb cmp inc in das (bad) jmp xor xchg cltd add jne hlt pop xor inc ret sbb fs and insb (bad) adc aaa or push mov or jp js push xchg dec mov int daa mov add lahf out mov cmpsl add in sub jnp sti outsb inc mulb ja sbb dec mov lock aad cwtl xlat adc push sti mov incl ljmp (bad) jae mov in push xor (bad) pcmpgtd rorl cmpsl push sbb imul bound std lods inc mov or cmp mov outsb sbb jae cmp mov mov popa insb popf rolb stos fcoml subl (bad) xor sbb pop xchg daa or test popf in stos into notl mov cmp add aam xchg scas les imul in lret cmpsb jmp push aas mov cmp inc enter in (bad) btr inc out and aaa mov daa mov pop cmp lahf mov adc (bad) (bad) mov xchg or bound dec xchg test mov mov incl movsl test push in adc lea imul add and sbb xchg or popa rorb stos pop mov jne push aam (bad) mov push xchg idivl (bad) xor push pop mov mov sbbl inc lcall xorl dec data16 hlt sbb pop xchg pop rcl ss sahf shlb enter mov and fiadd push notl xor outsl fiadd daa movsl and int3 mov inc out and mov jmp mov mov fstpl or movsl (bad) incl mov imul xor push imul sbb add fs add xchg pop add sar jne fisub and add insb inc in push push xlat mov pop inc add mov (bad) out (bad) cmp (bad) or add lcall imul (bad) jne sbb and test mov inc enter add push loope cmp sbb adc arpl mov cmp pop lods cmp adc inc or cld pop add cwtl mov xlat xchg aas adc xorb add stc jl and adc jbe pop push mov aas je push incb decb and adc inc stos sqrtps mov push dec adc jae rclb jbe mov push push push leave fistp shrl inc jp or leave ficoml xchg mov (bad) hlt add cmp leave add out enter out ret jl add pop or mov and jg push aas mov xchg (bad) jb inc push jmp repz aas mov sbb jle or inc iret adc and nop jp movsb (bad) jno idivl or in sbb cmp (bad) insl and add mov adc ss adc mov xor cmc inc or and mov test ret (bad) (bad) dec mov mov mov jg push xor sahf or out cs popf rol mov dec loopne fcmovu lock mov imul icebp inc jmp in push rcrl jno and sbb sbb or loopne cmpsb push push xor sbb mov fs or or je insb mov cmp cmpsb and jnp mov mov fistpl adc or cwtl lods clc ss cmp jo test ret lock dec std and nop and clc popa jl,pt insl jno inc bound in jp icebp aaa sub jmp inc pop or je mov lea mov push leave inc in pop loop mov pop or cmp add sbbl aam rcrl xor mov test sar insb mov jg add sbb cmc and mov bound (bad) push enter test xchg jns and add and add cmpsb (bad) pop mov stos inc push and test test pop jns incl repnz xor stos jne (bad) rolb or test ss pop mov ja lcall gs ja icebp inc faddl cmp mov push jnp sti mov jp (bad) addr16 fsubs insl cmp ret jecxz aam mov and push pusha add imul fsubs mov je rolb and add cli repz lahf mov and xchg (bad) jae roll adc pop push dec leave enter and mov or jle es sbb int3 and sbb mov or jb jecxz mov adc jp mov pop inc mov add enter scas popa roll xor push mov in jbe add mov rclb call rorb add in add lods ja,pt iret mov mov push sbb or ret mov pop xor inc xor push add inc stos jge inc mov into mov fcmovnbe and xchg or divb pop mull mov add jmp sbb cmp push jmp or cs faddl mov mov mov ds movsb inc xlat (bad) in jno sub (bad) dec dec push subl mov cmp aaa or cmpsl pop orl sbb push rclb sbb enter and inc outsb mov les ja push aad sbb adc inc adc add add xor pop push clc mov insl fstp cmp sarl add roll mov xor push addl mov inc sahf stos inc xchg jmp mov js fiaddl inc in out or push lahf ljmp mov push add je adc mov or jp xchg add cmp push mov dec xchg dec popa daa xor push andb add das add xor xchg pop add and fidivl je sbb mov push test fisubrl mov in push cmp jne adc pop mov nop aaa mov neg sbbl iret and roll add xchg adc (bad) add sbb leave aas jp add or pop push (bad) sub es int3 and clc jp sbb xchg hlt or inc adc outsl xchg adc es jb shrb (bad) testl and mov sarb data16 mov cs enter fs icebp inc xor lret adc rorb mov inc insl mov icebp inc insl ja test xchg test jmp mov aam fmull jmp call test outsb mov lret aam rcrb (bad) shr repnz ds insb cmp hlt inc insl inc pop pop adc cwtl (bad) add rorb test test adc mov pusha aas xchg roll xchg bound testb jne mov andl in je ja aas inc add jne mov cmp and insl sbb push dec mov fadds pop jb outsl cmp inc lret sbb insl test xor pop mov and xorl (bad) xor cmp dec mov in push cmpsb sbb (bad) std mov push pop mov sbb cmp xorl sbb ds aad call flds jo mov imul inc cwtl jne icebp insl xchg sbb (bad) adc jle jae inc mov std adc sub push imul popa jo ljmp sbb std push fidivl shr iret pusha jne addl (bad) sbb pop jmp inc je mov in andb lret add stos arpl dec xor mov xchg jae shl (bad) push mov push aas mov mulb pop and sbb or inc lahf add call (bad) imulb pop mov push jo test lret ljmp jle fbstp mov or mov int mov add subb out push jo ret int3 (bad) lcall pop enter push cmp mov int3 aaa mov leave add fildl xchg setp jmp das pop inc jmp lahf xlat add aas jecxz popf mov test shll movb pop inc push cmp and incl adc fs jb dec rdpmc (bad) xor cmp pop or popl punpckldq rcrl hlt cmpsb xchg nop insl mov nop xorl and orl add push mov or mov mov jae lcall push push xchg out mov mov cmp arpl adcl pop loope lret fisttpll pop mov dec notb push cltd mov test dec incl fsts cmp xchg cmpsb xor sub jle cmpsb or fldt and adc xor push mov mov gs jle mov outsl fldl lds or pop add (bad) popf sbb fmull call xchg jmp paddusw daa movsb cld sbb pmaxub movsl cwtl cmp sbb inc jne add int nop dec movsl gs incl je rolb inc (bad) add mov insl into adc fs mov pop push adc push pushf (bad) popa inc das mov pop inc into jbe pop call data16 int3 add mov faddl imul push mov lods inc cmp sti adc inc shrb lods ret pushf frstor add popf repz adc loop cltd and push dec neg subl push in bound jmp and xchg sarl xchg (bad) sub addl cmp icebp adc (bad) ja aam jmp outsl or (bad) repnz sbb xchg or and out jp test (bad) jl add rorb (bad) or push nop cli jnp decb sub push mov outsb push push das dec mov incl (bad) cld mov sbb pop cmp inc adc cwtl fstl xor (bad) sub fisttpl or xor movsb mov mov jnp add std push dec shlb dec insl (bad) or inc insl ja test mov in sbb add lds jne adc pop movsl popf je mov push pop or mov cmpsl push test inc ds and adc imul outsl mov lds and adc adc andl add jns pmulhw or jle adc fbstp icebp xor push sub fucomi daa mov repz rorb pop pop or xchg cld mov mov icebp (bad) adc and mov pop sub jne cs fcoms scas mov mov out orl push outsb das sub add add movsb fstpt push jmp sbb xchg xor push mov mov ss inc cmp and int3 and dec aad call lret (bad) or dec dec iret aam fldl popa aad lds ja and xlat pop push and test mov cltd mov xchg mov leave ret decb mov mov push jae or adc add mov xchg jo das fsincos mov push inc out fs lods mov or lods fwait push fistl cmp push lods lahf idiv and (bad) aam into scas (bad) hlt pop dec loope out adc cwtl rorb add (bad) jge repz jbe mov xchg iret mov add cmp adc imul inc cmp fcmovu mov mov push and mov push (bad) lcall push push push and and pop sahf push test gs gs lds cmp arpl mov (bad) inc (bad) pop add sbb pusha jecxz hlt adc sti test sub push add nop insl stos jl dec es stc and dec test daa aam jns push jno push inc push mov dec jno roll stos inc rcr rolb push and nop push cmp nop or iret jb insb iret hlt cltd out sub lds iret push js mov hlt inc stos and sub cli jbe xor jno and enter loopne insl xor mov push and leave aas pop test test bound push jne ds je fdivrl pop (bad) jbe mov insl repz movsb jne xor fs or das (bad) or scas cmp sahf xchg bound mov push (bad) cmp or cld mov push xor inc mov jmp inc scas sbb inc testb daa or nop and lods ljmp mov sub inc xor push lds push cmp xor and notb icebp jmp (bad) add mov mov mov pop adc repnz cmp movsb pusha mov mov and inc je xor jo pushf add cmpsb lea push dec mov es or xchg mov sbb pop jge popl mov jno nop xor lea push int cmp xlat stos or shl xorl imul mov adc mov sahf and lahf and add add dec cmp hlt or mov jae and stc or xchg add inc fiaddl in sbb cmp jp jns (bad) push outsb rolb inc andl sub sub movsb out sbb into pop add cmc inc (bad) outsb mov and sbb xchg push (bad) sub cmp sbb add cmp jb dec sub mov sar popa xchg (bad) jno aas hlt cli and xor scas psubusw faddl lret jge sbb mov loop sbb testb sub push (bad) sub stc xor std nop cmp cmpsl ret sbb rolb sbb test xchg test inc or out je pop ret test dec cld sti (bad) add and sbb and nop pop inc stos mov inc dec pop push sbb les jo mov ja pop stc mov icebp inc cmp in push xor lods mov mov sbb (bad) js and adc cli je and jecxz and call and jecxz fistpll add dec xlat bound dec in pop jnp add dec jne adc fnsave stos inc mov pop mov jge mov out add adc sub iret cld and sub jle xor push das ds xor push or pop pop inc mov push dec dec cli (bad) cmp rolb and dec mov jnp shrb cmpb xor stos push xchg iret cli mov imul call es adc dec loop,pn in hlt rol mov sub pop fwait pushf out imul mov inc adc dec pushf add adc pop mov xchg sahf ds pop pop push mov push arpl aad sbb dec xchg negl or das mulb int mov cld aaa and andl lahf mov stos cvtps2pd fnstenv mov push imul or add xor loop cltd repz ficoml xchg push dec jg jecxz shll sub mov test addl std push and out inc mov push pushf jle incl ljmp pop lea std test mov sar and cs inc ljmp sub dec sti push or add or xor cmp sub scas cmp pslld in jb roll add dec daa cmp cmp sbb es hlt (bad) call insl idivl push aas dec outsb sub cltd fistpll (bad) ss inc mov ficom stc inc push xchg pop fimul (bad) push leave ret adc dec cmova cmp add xlat pushf cmc dec icebp or jbe enter push mov js inc fisubl pop cmp repz pusha mov inc rcl popa and push sub pop ret push std mov push push or aas xor jns outsl mov sbb lcall out pop roll jb cli out inc pop inc idiv xor and hlt mov test fwait femms rolb pop inc xlat jb je sbb push shl sub mov das mov (bad) in aad push addl adc mov stc and sarl in or rorb movsb jae push int mov xor sbb xor jl cmp add xlat dec les adc inc pop jmp repnz test and adc inc push xchg or rclb lods xchg cmp add rorb addr16 call cmp mov or mov out adc or add mov mov push jg adc inc push xchg insl enter aam popf jecxz add lock fbstp jl fwait mov push ss adc add cmp jb scas movsb pop sbb out or movsl xchg nop sub fistp cltd (bad) xchg add adc subb adc xchg aaa xchg push cmp jp jns aad in cmp incl stos adcl push dec xchg sbb pop testb push nop sbb dec test push xor fstpt bnd popa sub lods aas cmpl add and sbb pop cmpsb xlat sti xchg mov or pop (bad) xlat pop out or inc or sahf and fldt cld mov dec or xor mov (bad) jno out pop mov dec fdivrl in aas xor and int xchg loop jae sahf int3 rclb xchg fucom push jne push lds adc mov mov out cmpsl dec xor in adc add imul xor fwait inc adc int3 les xchg jg inc adc data16 cli in inc ljmp rcrb in xchg or pushf fstl in dec fs push in push jb push push aas ficoml dec inc add cmpl jne hlt push sub inc inc insb pop stc mov pop pop out les pop xor fs lahf cltd inc xor cmp imul sarl sub sub sbb lcall xorl addb es pop imul mov and inc out (bad) jecxz add stos sbb cmp xor sahf mov fisttpl mov and dec mov xor fs fsubs arpl push cmp push push roll cmp cmp inc mov test mov std test test out mov ret (bad) jg orb mov inc enter fiadd addr16 inc sti inc faddl add scas cmp (bad) lcall sbb mov addr16 push add stc mov add or mov inc pushf or packuswb mov lods fdivs inc fs push ret mov jno aas hlt (bad) call and inc cmp std xlat cmc inc iret aad aaa add xor inc and jbe stc mov into les jle popl subb rorl xor lock rolb sbb mov cmp add ret mov and mov popf push or roll sbb inc mov in fsubp insb push cli out inc mov mov xorl imul hlt movsb std inc cli and pop aad dec push sbb jmp sbb cltd std shrb add mov hlt jb or or clc jp add xor add add cltd mov cmp jns adc iret mov pop or and cmp add adc sub out daa outsl stos or xlat and or push push cs cli leave add jp aam mov push mov cmp and std sub mov cmpl cwtl add jg add lods adcl mov dec push ja inc sub mov inc iret mov mov (bad) xor rolb ficom xor and cmp out add insl mov mov and call pusha bound subl idivl gs lock or mov xor std call xor sahf mov xchg leave sbb inc popf push xor xor xchg xchg in adcl xor incl mov bound and dec jno nop (bad) cmpsb jl out pop lds hlt test mov cltd push into loop push repnz add dec hlt inc mov xor adc (bad) jp pop pushf ds mov mov sub add inc sbb push loop cmp adc pop and hlt inc jo cmp lods jl add lods xor lret mull dec jle jns or mov fs ljmp cmp jae push mov flds push sti xchg sbb jne ja cmp in cmp in inc cmp gs sti nop pop faddl loop jp js adc xor xlat push sub outsb mov lds neg adcl aaa add and pop insl mov push sti mov adc pop int pop jns or xor mov sarb sbb aas loop aam ret xchg incl test imul jg out lods mov mov dec push xorb jl cmpsl mov cmc fadds xchg insb mov mov or cmovb (bad) cmp push dec stos jecxz imul (bad) cmpsb call cli jl adc cmp gs pop and xor or push jbe outsl cld scas subb push insl sub (bad) mov hlt outsb insb data16 adc push rcrl sbb xlat dec pusha popf mov cmp cmp jp iret lock sahf sub dec je insb (bad) sbb xchg adc adc popa pop mov jp call std mov sub jae fwait in cmp shrb mov push arpl mov pop pop nop xchg fcompl subl sahf and and bound add sbb (bad) lds hlt fcmovnbe jecxz jl dec mov cmpsb mov inc aam stos push jno pop es jns add mov push sbb (bad) cli cmp mov iret ret adc push xor stos rorl jmp mov inc jae xorl test rorl cmpsb cld (bad) add mov push sub dec jecxz and (bad) xor mov add add dec push mov in das xchg fisubr rcrb mov cmp pusha (bad) repz and (bad) mov out (bad) push or pop mov and enter cmp int jle sbb add sahf mov jge call mov adc ret jb inc lods and pop mov push movsb cmp mov (bad) idivl adc sbb (bad) jo or in inc enter inc sbb popa add paddq fiaddl incb mov xchg cmp mov sbb sahf aam pop xchg in mov roll push clc sbb ret push jmp or xchg pop addr16 loop sub (bad) lock push (bad) xor mov int3 jp adcl mov or push cmp cmp and sub inc push inc push pop rclb mov mov (bad) mov inc in xor cltd mov push jbe fs xchg dec cmp or aad inc dec inc ds sahf add mov pop pop stc dec jmp add jno mov adc aas xchg sub jae call in ret stos pop notb inc mov mov cltd std sub test push jno jle dec lret aaa pop mov mov push gs add mov jp and mov stos or aaa out inc push xchg jno out xchg push out mov push inc cmp insl fildll adc xchg mov ja add mov xor in addl inc ljmp push xor (bad) pop das loop outsb stos outsl mov hlt pop rcrl loop add sarb ds daa push mov xor adc sbbl inc outsb xchg and jmp or dec (bad) xchg cmp sbbl xchg incl and pop je pop cmp fucomp (bad) pop imul or adc movq pop or dec mov inc lods aaa xchg push insl or inc rclb sbb out adc insb inc jp cwtl push es inc push into adc mov xorb lock aad fadds popf pop pushf mov add scas and sbb ds jmp inc loopne int sti pop sub ficoml xchg lahf lock jns je adc push inc pop jg incl lods mov lcall lods lods shll loop mov imul and push (bad) or cmp jno sbb jp ljmp push lock ljmp sub sub inc mov scas cwtl inc inc rorl cmc test mov push lods cmp sbb mov out mov das cmc aaa les pop push xchg orb fmuls and sahf sbb adc add cwtl daa push bound jmp sbb rcrb ja push inc lods inc jmp or sub sub dec lods pop je inc imul pop xchg jg jl daa inc (bad) sbb xchg (bad) insb je lods pop lock pop rclb dec mov mov push es mov or sub (bad) jge sbb sub xor add xor popa pop movsl mov stos call lcall mov gs mov push or mov pop rorl frstor ret mov dec into ret pop add mov mov mov aad fistl pop imul or adc jae cmpsb std mov nop frstor (bad) fdivrl sbb and pop add push inc int test movsb ret aaa and cmp jl daa dec ljmp test inc lds ret sbb add add fimul std nop dec dec mov (bad) sti nop sbb sbb sub adc mov pop incl cwtl pop push ss pusha in add add add rcrb jae mov (bad) ss mov les int fs pop rolb fstps dec sbb xchg ret aad je sti dec std inc std test rol (bad) cli fiaddl mov xlat add fbstp sbb cmc loopne lcall loope aaa (bad) lock cmpsb dec dec jnp stos pop imul mov pop pop push cmp nop hlt inc lret outsl add imul repz fidivrl jecxz sti mov or insl inc je (bad) jbe lds hlt out rcll inc adc (bad) xchg dec rcr dec push mov (bad) xor xor or mov cmp and xor loope fimul mov xor jle or cmp repnz xlat add pop cmc sbb (bad) jno add xor clc add inc mov jb jmp adc test jge orl sbb fadds add (bad) ds adcl popa enter (bad) jle xor out inc cli push arpl lock into adcl fstpt outsb pop enter xchg mov hlt lea add stc mov addb push int3 loop je push orl repnz jae pop lds sbb sbb andb mull and lcall test jmp cmpsb outsb inc sub (bad) inc int3 es and pop adc or mov js daa jne and dec daa out test or subl cltd mov or pop add cmp and imul mov add movsl ds out inc mov jns ljmp mov icebp jle or jp and jle sbb insb sbb xor cmp adc es ja pop jmp add mov inc pop cmp adc test dec lock in out mov (bad) cmp or test sub notl dec loope push adc iret mov out adc lcall or mov xor mov movsb dec and subl into aaa or inc clc dec lds xor aad loopne aas mov sub push xor cld mov mov aam lahf dec lret mov push push sub lcall inc mov jge push sbb data16 je test (bad) mov jbe push ja sbbb push sbb sub xchg or and fs inc out or negl or xor orl xor notl nop cmp mov xor in cmpl and or xor sub push push add add add mov inc (bad) cmp js pop in push aam (bad) and arpl aaa adc push push stc fwait call (bad) xor into push or pop out mov rolb cmp push or cmpsl ljmp dec inc adc push inc mov fs push xchg out or insl in inc xor (bad) rol jns or cmp loopne mov jo incl je mov dec and adc jb mull push je popa mov push sub fptan or addl jp sub scas daa push adc movsb and and mov or xchg mov loopne test data16 jns outsb addr16 cli pop ficomp out cmp sub test hlt push into neg and es adc jbe sub mov jbe out add xor (bad) mov dec and bound pop mov sbb ds inc cmp ss mov dec movups sbb psubusw mov add sbb ljmp je add (bad) or or jmp mov ss (bad) (bad) xor and mov inc mov adc pushf (bad) in xor sbb imul mov mov or add pop movsb push adc fadds sti test xor std sarb xorb sarb pop imul jp movsb jae stc in inc jp stos add cmp cpuid or or mov out add les les sub mov repnz in stos ss add xor lret sub add ja sub cmc sbb and lds mov add cltd mov lock (bad) xchg mov cli push dec inc shll (bad) mov pop cmp mov dec ja mov xor adc inc inc out add and test jg add mov stos add cmp cld gs sbb (bad) jmp test jle fbld scas add pop sbb out or bound cmpsl xor or jns inc daa mov inc rcr jge aaa aad int3 jl mov dec inc add insb cmpsb (bad) mov incl xchg or pop jecxz fisubl add add and ret sub mov and mov adc dec lret std adc xchg or ss fiaddl js out sub inc lods push outsb sti fdiv inc dec imul out push xor jne (bad) test dec into insl jb cmp xchg mov pop jno negl or push push mov sahf mov or push fwait inc lahf mov fnstcw in fdiv jge std xchg rcl adc or pop js xor push xchg out and adc shl xor dec lret inc ljmp in in insl xor outsb mov and enter jp mov inc jle arpl sub cmp dec push push loope mov pushf mov cltd scas fwait cmp xor pop mov loopne xor push pop xor mov pop mov (bad) ficompl arpl cli and daa mov push mov cwtl (bad) mov add add jae pop (bad) ja fldz out fcoms sbb stos xor mov add je,pt outsb xor and ja dec shrb sbb fnstcw popf test mov aas loop mov shl addr16 inc fistpll jbe or cmp pop mov sub push push adc mov inc ss lds mov cltd icebp test jmp or stc aaa mov xor xchg out sbb loopne mov and bswap sbb cmp and iret mov jb cmp je aam test inc jbe es insb pop or and push push jle jp call and jae add call xchg sbbl ret cmpl pop outsl xor cmpl jle (bad) and sub mov bound add jge subb cmpw xor cmp fnsave gs jmp inc in mov and adc (bad) lock es or movsb into mov push sub mov xor push scas daa push dec notb xor enter pusha stc and (bad) (bad) and leave push mov sbb and iret bound mov pushf xor add pop insl test sbb popf in mov imul sbb dec dec bnd xlat bound outsb adc push outsb and int shrb imul cmpsb es jne ljmp push arpl inc (bad) dec insb sbb pushf daa ljmp leave out hlt inc cli pop ror and dec pop adc in movsb xchg enter call addl stc inc lcall add outsl inc cs cmp xor popa sub fs les out add (bad) and lcall je push shr cwtl aas xor pop loop sbb and jle xchg push insl pop sbb adc fldl mov inc test sbb dec out repz pop inc stos inc mov (bad) bound push cmp adc sbb outsb jbe out adc iret xchg inc scas imul and and sar inc push sub inc add mov inc sbb xor adc es neg fbld test add jmp roll fidivr call mov cli nop adc adc xchg sbb push cmpsl sbb jge pop mov (bad) dec or sbbl cmp jno int3 enter mov add jnp cmpl js faddl mov popf js enter cwtl popf fldenv cltd sti add cmp cs cmc inc or xchg aas cwtl sahf rolb inc enter fwait mov bound or pop push mov push test jae sbbb lahf bound push xchg xchg sbb add fcoml pop add sbb les scas dec and subl sub mov or sbb mov incl mov and and jbe mov jne pop push inc popf and mov cmp (bad) push cmpsl jno push jno push cmp jo or (bad) dec ss loop adc dec sub cmp imul (bad) or inc add loope outsl (bad) or jno in roll mov cmp sti jnp xor inc js sub shlb punpckhbw dec or btc sbb sbb xor xchg fidivr and icebp ret sbb sub cmp sbb clc popf in inc xlat mov cli arpl add push xchg and cmp xchg push cmpsb pop dec lds (bad) pop sti scas sbbl or rolb sbb repnz fsubs stc mov mov mov pop xlat in inc push cmp iret xor mov lret in and into sub test dec imul xor sbb jge add sbb hlt or mov cltd inc data16 xlat (bad) sbbl add sbb or addb std jbe push jl fadds aad (bad) sub and or fbstp cmp sti nop aaa out movl jns arpl add dec xchg aad hlt inc ds dec in add sub lahf je repz in inc or push call inc (bad) arpl (bad) ret test andl add pushf mov test bound fimull mov add clc mov xor lahf aad push jne add psubusw stos cmp xor roll adc scas repnz sub mov add fwait sbb (bad) stos pop xchg add fidivrl daa dec fchs subl mov or pop jbe loop sub mov dec pop jns cmp adc movl sti mov jns cmp or inc pop lods sti and (bad) aaa dec incl mov add (bad) fiadd add lock and hlt cmpsb loope pushf cmp inc mov add lea dec mov pop rol push push mov or sub rcll sub repnz mov stc adc fiaddl xor clc lods cmp mov adc out stos cmp jns cwtl inc js,pn loop sub pop mov scas sbbl movsb jmp jnp or adc cs rorl pop into sbb add rcrb outsl cmp insl sub dec push push cld mov inc pop mov ljmp add (bad) out ret out jp shll add xchg jbe sbb inc out mov hlt mov jmp loop or xchg loopne push jno lds adc divl rolb imull test insb jo movb aas imul sbb stc clc mov add xchg jecxz (bad) addr16 lods std enter jmp adc rclb mov sub inc aad mov adc or (bad) addr16 inc inc dec mov dec inc jbe outsl inc push push and insb inc lods adc sbb mov push dec xchg dec icebp or std fistpll mov (bad) jne mov sahf dec cli lock push incl xchg cs push adc test shl jmp adc add add int push in repz jecxz cmpsl adc fs scas dec cmp pop (bad) mull fabs movsl mov or aam dec loop shll sarb test mov adc repz add add mov adc (bad) sbb push sahf or test and lret push lea outsl jle in and mov out jecxz and push fdivrl xor jmp mov insl inc movzbl mov pusha fptan inc out add sbb mov in push jmp sbb imulb stos add mov ljmp fnstcw or imul cmp lods (bad) mov mov cmp mov pop push or das pop adc xchg mov (bad) inc and sub xor adc push or stc pop dec jae or jno mov lods out (bad) sub daa xor rorl or fidivl loope cmp (bad) mov dec sbb mov cmp daa or mov sbb hlt test dec mov lea cltd jmp nop aaa in jnp cmp and out stc mov std xor (bad) sub cwtl int repnz jp mov js,pn mov imul jae mov inc jo xchg or lahf jmp enter sbbl or test stos xlat add jno mov out clc jge sub add xchg int3 mulb cmc xor (bad) mov sbb add add xchg jge enter xchg dec and push sbb (bad) jae cmp mov je push add daa push lea sti and add cwtl add fisttpll add movntq rolb pop out sub int cmp (bad) enter and cmp xor jge jg xlat mov ret mov lcall jg or ljmp dec pop mov mov cmp (bad) xor js and sub and in inc loop jb aas fiaddl inc in push call lret inc xchg jl push mov push and sbb je pop inc pop or sub cld add testl and adc and fsubs roll xor cld cmp pop icebp sub lea fwait iret fist ret jle xchg push cbtw int3 sbb lcall cmpsb pop inc mov adc lret sub (bad) mov shrb in out ret cmp add int jbe adc dec fldl push push addr16 xlat push xor mov idivl adc pop adc (bad) ja jnp cli and cmp std xor mov and jnp push xor lds dec (bad) cmpsb imull sbbl add mov jbe inc lds arpl fcmovbe pop shrb or sbb loopne dec jecxz jns inc pop push (bad) (bad) xchg and out sub (bad) jbe cli mov fimull jno jle pop movsl xor mov nop (bad) lea popa mov std js push pushf and mov or adc and mov mov sbb adc mov push dec fs (bad) call in dec mov push jp mov sbb or dec jne add jno mov (bad) sbb notl fisubl push jne cmp push ret xor mov xchg mov adc xchg loope (bad) mull pop add scas loope or jmp or add test jnp stc mov jge and or in push dec sbb in imul insl adc idivb mov xor arpl int or pushf lods ljmp shl adcl jp push jno icebp or push stos aas mov and mov mov inc js dec clc insb cmp jno push pusha mov scas test inc scas out dec xor add rorb push pusha movsl test mov dec inc adc out inc dec lea je mov popf into sbb inc (bad) (bad) out std rolb sub cli fadds cmpsb leave stc and push add jns call adc shrb arpl mov test push sbb jge add sbb hlt or nop push cltd inc data16 xlat mov cwtl in inc dec call dec sbb icebp inc mov mov push dec pop pop outsl bound xor sbb repz adcl scas jnp pop cmp fnstcw pop xchg jnp or add inc mov mov adc fnsave mov lods mov ss xorl in mov or cmpsl push js and loop mov xchg add int3 (bad) push add mov jno inc arpl and in addr16 mov or adc xor (bad) jne mov leave add mov (bad) add (bad) jae or std rcrl and stc and xchg sbb cltd or into add xor lahf mov jb outsl pop out (bad) xchg push cmpsb xor jp js add mov cmc fiaddl inc sbb stos mov test dec mulb push inc pushf adc scas ljmp cmp in sahf add add cmp jmp pop mov in mov or rclb test sbb xchg jp ljmp stos inc clc inc push daa jnp cmp negb in jno and int cmp sbb jg aam inc sbbl xor mov add test gs pop loope inc ljmp adc lds push mov addr16 int aaa repnz stos cmp jb jge rorl pop adc lods js cmpsl xor (bad) je and scas ss out (bad) inc push (bad) push push xchg outsl fiadd loop mov stos dec sbb mov push sub stos add rsm push rcrl negl inc add outsl lcall sbb sub dec push sar push xor inc std nop inc movsb rolb cmp add fadds jns gs addr16 ds movsb jo out and push pop icebp mov lods testb (bad) cmovae mov push or adcl cmc jns add push popa aaa jne jne adc sub xchg movsb ret mov int push imul xchg mov outsb sub adc mov jns cmp (bad) and icebp xor cmpsb (bad) fxch outsl stos or nop sub push nop loop mov xor cmp or push sarb mov cs add xor ss std mov or or cmp ret xchg add fucomi pop leave xorl sbbl jne pop mov aaa iret dec icebp sbb lret lahf xchg dec in add fwait sbb xchg sbb inc xchg lock mov jo loopne (bad) fs sbb arpl mov adc jp jle cld (bad) movsb pop movsb adc ret stos sbb mov dec xor leave add dec stc bound (bad) lret shld scas sub sbb inc stos aad stos mov lds mov in cmpsb xchg mov mov iret cld and add jp hlt imul and sub mov xor (bad) das push inc add or in in shrl cmpsb stc mov inc mov sub add jecxz inc out jl jno test shrl jbe adc lcall sbb (bad) sbb call pop jbe lahf add pop adc cli pop cmpl fcomps dec movsb xor (bad) mull xlat (bad) aad shll add in mov adc inc ljmp pop mov mov lods lret pop mov lock xchg nop outsb xchg push inc pop mov outsb sub (bad) cmp or push mov in cmp int cmp jmp mov imul rolb fwait push mov inc push insl mov jnp dec and lock jo sub push push mov jbe sbb out inc dec push fwait pop lahf mov dec incl mov hlt inc cmp mov lahf dec pushf nop push push cwtl insl sub jno in arpl push sarl inc and je jg cmpl mov or in inc push sub and fadds push cmpsb cmp lret mov push shlb jae sbbb sbb push nop leave (bad) and add aad or mov push addl and pop xchg fisttpl adc stos fisttpll add mov loope add inc jo cwtl imul push and push lock pop stos mov je shrl sbbb lds arpl insl ss movsb ret push out (bad) movsb or cmpsl dec icebp stos (bad) and fidivrl rcl pop cmp ja stos xor sahf adc sub push (bad) inc jae adc pop outsb adc mov push xchg incl ret xor jp bswap jns fwait inc mov jno inc pop pushf fisttpl data16 mov (bad) xlat fisubl mov aas clc je (bad) out jp cmp cwtl aad push inc decb adc jbe push cmp das shr bound fucomp mov out (bad) (bad) (bad) inc jl inc fnstenv jb mov or stos push mov mov xorl clc enter jge add inc int or cltd sub push xchg (bad) hlt xchg or ds push cmp or or add or ljmp mov xor mov imul nop ss mov adc or add imul and hlt addb in xchg adc dec sub aam jecxz adc cli mov adc mov mov adc add stc push es test shll jmp leave pop push imul adcl push mov fwait mov and dec lea int out jb cmp mov div sub imulb xorl cmp (bad) out xchg (bad) ja mov mov push xchg ljmp jns push loop or xchg cmpl add sbb push mov sarl xchg push jge jae lock repz out notb xchg mov andl add jae insb ret jbe dec xchg insl push test add sbb popf lods inc push adc jp sahf inc xlat cs loope push (bad) stos aaa in iret ljmp cld cmp (bad) push adc add add shrb pop rcl pushf mov inc or fs adc lods dec stos fxch adc loope adc mov incl test loope scas sbb stc mov pusha (bad) sbb add xchg outsl cmp mov add jae (bad) mov mov rol out shll test je push cwtl lret xorb adc add mov jl ss sbbl mov xchg test cmp daa roll les outsb in sub mov aam lods jp (bad) pop mov in pushf and out aad aam subl add adcl iret sub mov mov mov iret in stc and and clc (bad) or inc mov xor js cmp push leave add add rcrl lret add xor xor fwait cmp pop xchg push cmpsb xor xchg push mov dec ret xchg or popf xlat imul pop pop xchg add div mov pushf mulb dec inc sahf adc push pushf mov xor ds fdivrs mov push inc add test inc enter dec mov inc mov sub pop inc fstpl enter les adc cmp daa stos jae sub xor sbbb mov add push xor scas jne int3 jp pop jbe in gs in movsb jmp mov push cs outsb stc mov mov scas jmp jmp cmpsb xor xor outsb xor into aam bound outsl jbe adc outsl mov and mov inc push jle jb test xorl xchg or addl adc daa lcall push xchg sbb in inc sub mov cmp mov addr16 or and loope dec dec sbb add jecxz adc pop cltd fimul (bad) jp rcrl sbb or mov add inc and adc (bad) cmp pop add cmp fwait insl cmc inc (bad) cld ss (bad) add or and xor add adc sub jl dec pop and loope sbbl addb mov (bad) push pusha es enter add add lahf dec mov sbb rol aas fiaddl mov inc insl and add push mov das flds pop (bad) jo insl fiaddl movsb or mov out std nop jae and or cmp jbe pop push push lds orl push (bad) or movsb xchg mov ds sub jp xchg push jb or out cmp (bad) or jno push xor popfw mov gs (bad) xchg xchg add call lea xchg iret roll cmp mov movsb or hlt andb test lods and cs insl cmp mov push mov cmp (bad) je cmp fisub leave add push adc shr (bad) dec lahf lret add rcl mov (bad) in test mov cltd push cld mov and outsl iret test sbb add fstpt jns dec and fs sbb test jmp cmp loopne inc ror pop clc out fcmovbe sbbl inc cmpsb push pop cli mov mov add pop out mov je pop xchg xor imul push cmp and add ljmp pmaxub adc or sub xor sbb lahf and cmpsl adc fwait outsl clc test jmp jno inc fisttpll stc mov jns mov push (bad) int mov int3 bound adc sbb hlt adc pop roll or jno inc and shrb ss jp pop iret cmc ss sti nop push divl bound and roll cltd adc daa in pop jb jne test (bad) popf sbb jp in daa xchg fmulp mov cmpsl sbb pusha mov push cltd cmp negb or sbb inc ds xchg sub inc imul xlat or in mov sti and add mov or pushw rclb stos mov jae jne and mov and shll add aam lock adc adc sbb inc push js inc ret jl (bad) xor pop dec jno popf mov pop jno insb and add sbb lock adc icebp or mov popf and adc inc aaa or in inc in aad mov cs adc mov std enter mov outsb and pop leave pop xchg mov adc icebp dec in (bad) mov pusha jp sbb fdecstp (bad) xchg pop push cli mov pop inc mov pop cli push mov leave and mov push lds lahf or jp imul adc cmp xlat in push aas dec jg ror mov popa enter insb push xor lahf ljmp and fcoms push arpl in imul sbb sbb sahf jae inc out fwait mov outsl loopne or aaa fdivs xor mov cmp out add mov adc add mov ret mull xchg int3 shrl dec pop (bad) and test dec (bad) jo pop aaa push mov call push pushf in or cmpsb cmp mov mov aas dec ret sbb js mov icebp inc push mov js push lret shrl pop data16 outsb mov inc leave mov dec pop pop adc dec sub jbe iret outsb mov and movsl sti loope imul mov add repz insl rcrl xor push or call xor (bad) call pop (bad) pushf adc push ret (bad) into sbb adc xchg test negl test inc xchg fst shrl pop fs (bad) jg sbb jo xchg jle sbb mov xor lret fidivl mov loope pop cs xorb push mov adc es jo in cmc add dec adc mov or cmp cmpsl push xor xchg std push push inc in and sbb dec dec add adc lcall or ja mov test imul mov sub mov fs (bad) xor out (bad) ljmp add push imul and popf (bad) loope sbb dec out xchg nop arpl imul or inc adc mov sbbb cli inc jp push xchg and sbb rorl add int xchg (bad) jno sbb sbb sub in sbb jp repz add push lahf mov add inc ljmp jecxz pop push push pop jo sbb and subl pop rcrb and cs enter in inc push cltd push adc (bad) in add rcll loope,pt addr16 cmp popf into lds pop jg jle xchg or popf adc psrld subl push aam scas sbb inc inc mov aaa inc ficoml xor jg inc iret hlt lret insb outsl repnz cmp je jecxz push mov aaa inc push popf cld mov jl inc in in fwait lods (bad) lcall dec push mov roll clc jp jle movsb adc aam in and xchg repz stos push es je jo lock pusha jno imul nop push sahf dec fimull jmp (bad) leave add out aad push aas stc inc aas xor pop dec adc outsb arpl addl out inc xor call inc out mov cs push sub adc shlb faddl mov leave push mov cmpsb inc push cmp imul mov test (bad) lea jp pushf mov sub punpcklbw test popa cltd sbb pop add push cmpl cmc jecxz insb or iret sub push adc sbb aaa mov cmp push fistl cmp xchg push loopne push aaa or cli scas (bad) sub lea jnp or (bad) je pusha fsubp sbbb add inc xchg mov ss add mov cmp in ficoml mov xchg mov mov sarb mov mov mov and dec xchg fiaddl int cmp std fs loope fwait mov jo dec and mov out xor fincstp and std addr16 add daa movsb xor cmp hlt in addl ja xor add mov jp popa imul or or xor pop inc sbb mov add jb cmp push push xadd (bad) xchg shrb stos std jmp mov add (bad) cli and inc mov mov mov add inc leave add inc inc or (bad) xor iret lea mov sbb insb test jno mov lea mov add imul imul adc xor add test mov loope std dec add cmp arpl leave push inc enter vmovsd pop nop or inc sbb pop mov testl (bad) call mov rorl push sub arpl (bad) xor add movsl push sub xlat orb and pop adc fucomip sbbl and mov or in or test pusha in inc xor or cwtd jbe add xor fisttpl cmp add jo add insl fcmovne and adc sarl cmp repnz mov xor fistpl adc add xorl cmp mov push and adc and in dec arpl add and jecxz xor shlb inc repnz out aam adc sbb and (bad) (bad) cmp lock fadds and push push jbe sbb push fimul xor (bad) or insb scas jle or push sub sbb (bad) ljmp sbb or or dec fwait mov xlat cmp mov int aaa and (bad) mulb cmp dec xchg mov nop insl push mov and mov cmp stos imul or in clc lds cmp enter mov ljmp mov pop mov inc fcmovu inc add xchg out outsl adc add xchg mov hlt inc lods mov jnp mov push nop add dec or vprotd insl push inc inc mov shlb add mov mov sti and (bad) adc cmp push mov cmp pop dec cmp out rolb and and ds das push adc pop mov push mov inc jns xor sti mov adc js lcall and imul mov inc sub repz int adc lea jmp fs add push aas arpl adc inc sbb jge add xor aas fucomp int mov push dec ja mov sahf lods mov test xchg jge repz pop je pop xor imul incb sbb nop push dec movsb push mov mov xchg sbb iret add mov push dec sbb dec mov push sahf mov sub push aad ljmp testb mov add sbb inc (bad) or cld nop xor das mov flds mov jge insl into add (bad) dec mov js fadds inc cld xor cmp shlb dec shrb sti into lahf add cmpsb arpl jbe dec cmpsb loope lea fsub push fcomi xchg add add test gs in aas inc add xlat ljmp and pop cli adc lcall mov (bad) cmpsl xor jle arpl mov cmp jnp push sarl iret fldl push aad popf jecxz fidivr adc xor add mov aas jnp jl add and stos mov lahf cmp inc and les inc les ja out inc ljmp mov pop push and insb (bad) push push js cmp inc jb ljmp xor xor inc adc jl inc fstl adc mov or xchg add jno repnz jge and jecxz pusha jae pop ds xor in add and outsl aas jno icebp inc pop inc xor pop fldenv add jecxz sbb mov jbe fadds fmuls or ret int std movsb fnstcw xchg dec mov inc push fidivl sbb incl popa mov idivl push roll or aaa insb sub pop out mov mov and out rolb jp and lcall adc or fist or (bad) rdpmc dec clc cwtl bound fist in inc sbb rol xchg ljmp out mul cmc inc lcall push stc mov addb cmp jmp popa outsl incl movsl repnz loop scas sub cmp in add jno cmp xorb imul test shrl cmp cmp jnp fucomip outsl mov jns ljmp add (bad) addr16 in pop lock lods xor mov mov adc add cmp into (bad) dec adc sbb aaa aaa push (bad) cmp xorl xlat inc lret mov popa ljmp dec mov inc and popf (bad) cmc mov outsl mull xchg in inc aaa mov sbb inc das mov outsl mov in fld1 (bad) jo mov iret and mov xor sub fimul push call mov adc mov incl mov orl add or lcall cmp sub sahf push test es xor inc xchg lcall popa add jb or out aad jmp mov and in inc push xchg jb insl popa in iret stos cld mov jge dec mov mov fsubrs jae sbb dec imul cld sarb sbbl in and fisttp xchg das and aas scas add push outsb mov jno (bad) lock xchg or cmp in jne push pushfw push sub adc or (bad) mov add jne bound mov loop sbb jno mov out add pop push (bad) cltd ja add (bad) dec sub mov mov push adc inc mov xor jnp sahf mov mov dec push dec jbe js (bad) xchg xchg xor aad mov sub cmp jge repz repz mov inc (bad) or and lahf add cmpsl push xor mov mov inc and push imul dec cmpsb pushf push pushf and inc jmp aad pop pop push ss sahf clc sub sti and aas push into add sbb je (bad) or jbe gs adc arpl pop mov imul rcrb mov push xor jno fcoms loopne subl mov add sub addr16 inc and fisub inc jp inc (bad) fstps hlt push dec in cs mov (bad) or sub cmp adc jle sub fisttp into cs xchg mov sub sbb aam inc push cmpsb ja mov sbb push insl pop (bad) fsubrp pop xor dec sti sahf fadds into xor jle out jp mov fmull mov pop sbb inc (bad) pop incl pop push sbb mov or mov jns out aam ljmp adc (bad) mov (bad) mov popf stc push sbb xor sbbb aas pop or cwtl les add ja (bad) mov std add add jecxz inc dec cmp scas popl or pop repnz inc lcall sbbl mov cld inc jbe add divl outsl (bad) add add and addr16 aam adc inc test rcrl add inc jno mov jns add loopne imul dec cmp xchg out fadds pusha cmp push sbb je mov arpl fiaddl pop and add sbb roll cmp insb and mov mov mov lea enter sbb and cmc inc add inc jne lods xchg add (bad) xor inc pop adc out inc je push in lahf add push pushf add xor sub cmpsb rolb mov sti mov fcompl sbb mov notl loop lea into jecxz fisttp and mov adc xorw (bad) popf pushf sub nop gs jno subb pop mov and jge lock nop or pushf in mov pop push mov ret mov inc ret inc pop ljmp (bad) test ds jo or pop mov incl mov iret and addl mov mov inc ret bsf adc mov data16 push mov cmp adc and cmp rcrl gs cmp xor mov jp sbb aam dec mov jo int3 add scas fcom fistpll loop mov xor inc jne add mov add rcrb push out das repnz adc or add pusha incl dec lcall mov add jb sub andl stos sbb repz stos and outsl sub inc lret ja and xchg mov ret shlb aaa popa daa and dec mov (bad) adc mov test addr16 pop and outsl popf rorb pop fdivl pop pop bnd jbe fcompl aam mov xor fadds jae adc cmp xchg (bad) jp shlb mov sbb pop ret (bad) or andl add aas xchg jb push mov push scas js in fadds dec push rolb add ds fmull lahf sbb push inc cmp mov sahf sbb and leave add pop insl icebp jecxz sbb add aam fmuls std shrb leave jbe popa push sub mov out mov jne xchg shrb inc out dec ret mov hlt add inc pop dec paddsb js adc out lds dec pop sar add addl jae cli inc add sbb push adc dec loope (bad) mov aaa cmp push int popf pushw add scas in push add (bad) arpl mov mov pop jo sbb loope imul test popa movsl push jae inc mov dec cmp js outsb out and rcll psadbw add mov shrb in or call out mov out into adc not inc adc pop (bad) je test inc or (bad) fmull lret jbe inc sbb sti arpl or cmpsb scas sbb push cmpsb fnstenv lods fdivr ret jo divl xor je xchg or mov or imul in into rolb mov xor jb mov mulb int3 pop loope inc out add test mov notl mov cmpl push rcl or jle mov sarb bound sub outsb push fbld xchg add aaa vpcomuw inc popa mov dec and inc adc cmp pushf sti rorb cli int3 mov adc mov jbe clc inc int loopne mov adc out mov movhps dec in inc jmp add fstpt jmp cmp adc inc (bad) rclb sbbl mov xor in imul das inc xor xor test jmp lret (bad) pop push jae movsl dec xchg aad add xchg xchg adc push add xchg or lcall in faddl sub and cmpl ret sbb imul add pop sti mov (bad) or jg or mov mov xor sbb sub test sub lods cmpsb jle enter push imul pusha sbb jo (bad) mov inc push sti insb xor (bad) sbb and xchg idivb pop bound fnsave into xor add sbb ret mov leave add inc mov lock loopne mov test shrb loopne insl test fisttp sbb jle push bound push push lock (bad) dec cmpsl sbb cmpsb out (bad) cmp inc cmp out and fimul cld push dec in xorb sbb xchg or xor inc loopne pop dec mov jo jo cmp xchg sti and (bad) xchg rclb bound movsb or into pop xor (bad) insb js mov or xchg add add inc cmpb xchg or lea iret push jo,pt cli inc push rorb push xchg fild fs dec push dec in dec movsl dec add adc adc (bad) mov mov inc and push add inc insl adc or shrl jle mov sbb mov jae sti (bad) in subl inc int lcall add cmp aam int push roll mov nop push nop movl adc nop jmp (bad) jno rclb cltd sbb push inc jecxz iret lcall push sbb push inc (bad) mov paddsw inc test fdivp push leave insb mov aad sbb or dec into lods int3 cmpb add (bad) test sbb orb imul clc iret xor push mov data16 ljmp popa es loop les and add add add les nop adcl jle ss fs jbe and mov fnstenv jl mov ret mov mov jns arpl hlt adc sbbl dec sub or sub mov sarl jne out lds rcl mov roll add rorb popa int jmp mov movl adc cmpsb out or pop imul xor faddl (bad) negl mov enter sarl cmpl cmp cmp add mov popa movsl push jae inc mov and push sbb ret or jb ljmp xor sbb push notl push xorb mov xchg or in ss inc push stos pop mov add test ret mov jb mov (bad) dec jmp jo,pt je sub mov dec icebp sbb inc sbb inc or and xchg or pop fs adc aas jb dec aam shlb cmp jo nop cmp fsubl fimull dec addr16 push mov loop push adc leave push jne sahf cs repnz jp and dec dec xor in fxch icebp sbb rorb mov in dec sbb and add cmc inc fnop clc aas shr or aam sbbb js add fs xlat rolb xor xchg mov push jae push push in psllw mov loop pop push mov pushf pop push add (bad) fxch jb outsl and pushf mov inc aad xchg add insb pusha jg (bad) push adc or fldl jg adc fcompl addr16 and fistpll adc flds and inc fdivrp shlb cmpl jge push rolb mov out test loope inc or icebp (bad) lea xor and mov (bad) add hlt repz inc int pop push lret js or pop js call insl push jo loopne mov push ret dec out add insb push je sub dec fdivrs mov add and add loop push subb jae ret lods cmp pushf clc xchg or xor rolb sub xor arpl icebp and mov and movsb inc mov add (bad) jbe and xlat push xchg push xor xchg cmp out mov inc or ljmp mov pop comiss or bound aad fldt add sbb pop das adc sbb outsl lcall cmovnp jge and inc push sbb jg and lahf adc push mov adc cmp adc fbstp fdivrs and cmp fiaddl addr16 inc mov inc out xchg jle sbb mov adc or cmp jmp push inc and dec fdiv in inc ficoml fisttpll sbb sub sbb mov mov sbbb mov jo sub push sbb add imul js movsb (bad) into fiaddl mov enter or mov jbe xor pop add lds stos (bad) xor int3 pop jp cmc lcall jle and cli cmp jb test outsb lea cmp add dec xchg outsb dec out subb insb xor add mov icebp inc ljmp bound repz mov (bad) ja add mov sbb add mov pop sti mov pop cltd xchg nop pop mov out fadds js inc stos and leave add movsb xchg mov sbb testl push and (bad) rolb (bad) repnz mov xor xor sahf in dec xchg xchg and les inc mov std add pusha xchg jge call add jg in call push xchg dec dec (bad) les dec arpl ljmp jle jge and in push cmp pop mov not (bad) outsb dec sbb int3 xor jge insl dec fstpt adc or into cmp push push xchg push js xor sub mov popa jno dec stc adc inc jo in adc xchg and negl mov inc into popa sti cmp (bad) xlat rorb xchg and int3 or sub popa mov sbb (bad) call sbb xchg or test je (bad) shl push or cmpsl cli lcall pop sbb mov ret in push out jns push jns mov fcomps pop jnp xor or mov add fcmovbe cmp add push addl adc nop sub call and jnp stc ja mov jp mov mov and push pop dec pushf fsubl or ret adc adc dec fwait cmp adc sub jmp and push cmp ret push mov popf and sub and adc inc jp jnp movsb jno aaa mov jo and mov inc in push mov and xchg ret inc and add (bad) jo pop xor loopne int3 pushf inc xchg mulb mov aad rcrl mov loope xchg xchg push in add dec nop pop pusha xor push push lds popa push xor cmp out fdivrs sub inc and jno jmp and cmp leave enter addb dec loop jnp push out xchg push push adc addl or mov ljmp popa ja nop dec push cmovb jp jge sbb subl std add push add insb icebp mov fcmove loopne pminsw sbb jno sub aas xor push lea inc mov lea jg dec loop and push add sbb lods and (bad) imul sahf in (bad) jne loope jno (bad) mov loop xor inc data16 mov sti inc sub jbe addr16 pxor arpl addr16 and mov sbb popa sbb sbb mov inc jmp test repnz daa inc stos pop mov jg add or movsl sbb and push mov sti lds xor push sahf xor pushf cmpsl cmc pop add stos pop xor test fprem1 inc mov jo xchg cmovbe sarl rol pop je rcrl out fs sbb add insb into push inc je fimull iret adc push add sbb loop lcall fldl jnp mov jbe inc xchg or pusha or xlat sbb rorb (bad) pop or pop repz pop (bad) je cli hlt (bad) cmp mov addr16 repnz out sbb or jnp jnp cmp cmp test and scas mov and int mov popl cmp lcall mov mov sub adc sbb pusha (bad) mov xchg test divl sbb mov js sub loop (bad) jbe jne movb inc mov sti cmpsb nop cmp cmpl mov and ret das scas sub rorl mov inc or test adc sti or in imul cmp ss mov xchg add in jo sarb or ret insb push jae xlat cmp mov rcrl mov inc lahf mov popa cli (bad) movsl add sbb xchg dec popa inc dec (bad) jo dec xchg std and ljmp shl add scas outsb fs fnstsw adc xor cmp test push call sbb mov cwtl push insl idivl fnstsw jnp dec pop jg push jmp or daa inc pop ja imul aam dec or add pop mov lea sub pop in inc std adc add (bad) mov nop/reserved movsl movsl ret roll mov call jo in (bad) jae out inc popf in add notb mov test movsl inc ljmp aaa cmovb jecxz sbb jb mov jb loopne mov shld in add loope add sbb sub mov push outsl mov jno fwait inc test imul or dec mov push cmp and test pop cmc imul pop push pop inc cs or mov inc mov mov pop (bad) sahf hlt push enter push xchg sbb fisubr sahf jbe (bad) adc mov fistp xor call pop xor adc mov rolb sbb mov add mov mov cmp loopne fnstenv mov add xor jo (bad) dec add push or dec sub xor adc (bad) dec outsl inc mov (bad) dec adc imul mov cmpsl inc clc push sub add das jl mov mov inc out and jp or mov and cli mov mov xchg cmp sti or inc xor add push jnp,pn add dec dec jae mov (bad) jbe popa test data16 cmp in (bad) mov dec sub in xor out lods nop arpl add push sbb std nop dec cld cmp insb jbe or push or mov xlat insb in mov inc jle push jecxz pop cltd dec int or mov add sahf shrl mov or inc or mov mov jmp xor stos mov xor xchg mov movsl (bad) insl mov in add pop mov mov pop outsb mov aad and cld pop xchg mov stos sbb ss and in rorb jns sbb or mov cld cmp incl push mov outsl jp sahf xor inc repz inc addl (bad) ds (bad) subb xor popf div inc rep inc or cmp add pushf cmp push imul adc mov outsb inc xchg and sbb jo dec fmull ja sti mov or clc mov subl adc and aaa push jns in and je cmpsl (bad) insb mov inc sbb add (bad) (bad) pop cmp adc cwtl cmp cmpsb xor in inc xchg mov sub arpl pushf mov ljmp sub (bad) outsl outsb mov push mov mov add rclb hlt inc adc das push sbb cmp mov mov ja out xchg sbb jle mov in inc arpl adcb mov cmp fadds rorb and sub (bad) std les cmpsl lock sbb cld jbe fcompl jns or sub out call or sub loop fldcw ss repz nop xchg add push xor stos leave add add mov (bad) enter push adc orl sbb mov test icebp xorl fisubl int cli push repnz inc pop push and mov adc or jecxz xchg inc roll cmc inc or stos and sbb outsb test mov adc jne sbb mov adc aaa je mov or lock sbb movsb loop mov cmc sbb negb imul inc adc or pop xchg push fildl add add inc jmp je in cwtl stos shr les sahf iret jp sub or dec popf mov xor xor pop and cmp jns or in out push jne mov cmp push (bad) and add aas mov lahf lock mov inc pop in cmc mov xor fwait leave add inc in in shlb rcll cltd out dec add sbb cmp jecxz add scas jnp dec movsb imul call repz (bad) incl inc out jo pop mov gs out push shlb adc and fcom sbb jl xor mov add inc mov ficoml mov mov mov pop xchg push popa rcrl mov mov aas dec jns push inc cld sti into dec add jno and cmp or jg test add imul cli jbe mov cmpsl loope inc xor std jb and pop jae mov ja ret jno mov addl lock or add xchg add movsb mov dec cmpsl andl cmp and push lock cmpsl mov mov and sahf nop pushf and movsb xor jmp lahf add mov arpl shrb mov loopne xchg ljmp (bad) out add push gs pop mov pop rclb dec xchg push mov (bad) int arpl and jle jge repnz jmp xorl mov sub dec xlat shll test (bad) stos (bad) test sbb ror mov mov mov mov insb jns push inc in aas (bad) incl lods call jle test xchg inc cmp fistl xlat jle sbb dec fnstsw nop jo sub rcrl lods fcoms inc cmp sub js les js fiadd add push push cwtl xchg cwtl shrl arpl xchg or sbb mov sub sub (bad) adc or mov push outsl lea daa test add out (bad) dec (bad) dec or insl push mov sub (bad) sbb dec sti adc pop mov cmp xchg daa pop dec in cmp hlt out fistl test add (bad) (bad) inc sarl mov adc pop push imul (bad) repnz jae and add pop imul cmpsb repnz and stos out js mov (bad) negb mov inc ljmp adc adc aaa and sbb cwtl insb pop mov sbb xor incl dec in (bad) jg ds hlt dec add xchg xchg push fsubr mov pop inc xchg fnsave xorb outsb das aas fldl fwait inc int lock ja cmp mov jp ret test aas mov and stos inc xchg into fnsave rorl sbb scas dec and divl jg add mov repz into cmp push jecxz repnz or jl pushf mov negb cli inc push rcr out or je jp (bad) or xchg int jl or add cmc hlt add test ss (bad) cld mov mov enter jb mov cmpsb adc mov mov pop push mov cmp pop into push cs adc xchg rdpmc dec gs shll mov push movsb repz jo in outsl mov nop cmp daa pop cmp jl imul dec psraw push popf push shll sub pop fidivr add rcrl pop add cmpsl enter push sub and dec xorb inc out push js add dec (bad) lea fstpl cmpsl out sbbl or out (bad) mov stos inc mov cmp lods xor inc cmp pop xchg in adc pop xchg sbb ret rolb add mov cltd inc dec aaa mov add or xorl (bad) adc fnsave cwtl jo sub jns insl dec repz xor movsb jg idiv insb or jbe loopne adc jbe je adc fstl insl test mov inc xor mov xchg or push push fidivr jb pop addb inc inc mov je (bad) loopne iret jbe out add mov call xchg adc in mulb jae (bad) pop xor dec insl add fadds bound icebp sub inc add mov call ret mov cmp jmp in in imul (bad) lea loop int3 ret (bad) cmp add int jo bound xlat mov pop inc call in nop xor cmp cmp leave fadds aas adc movsl mov insl int3 mov popa lret sub cmp mov ljmp cmp adc add mov mov gs jns enter or popf dec cmpsl andl shrl sbb mov push insl fxch add into nop (bad) pop frstor ja call sub jnp insl outsl loope inc push stos push xchg mov test rcr push scas popa sti mov jp imul fwait mov sub subb xor mov inc test push fwait psrlw lea or jns stos mov arpl xchg adc incl or pop rolb (bad) test stos push push in leave add or out vmovups jnp jb les popf in cwtl addr16 dec or mov mov push mov sbb roll push xor fiadd (bad) jge dec movsb jne fwait loop fiadd imul sbb inc lcall push popf aas sub fstpl out test or xchg add mov outsb ja jle push sbb (bad) out mov dec mull cmp enter xor adc jae mov enter clc or inc lret orl lock and (bad) out xchg (bad) call ljmp in jmp mov stos jecxz mov imul cltd imul loop lds jg test stc flds fistp cmp mov xor cmp (bad) push jno sbb aam out add int cli push repnz inc push push and inc loop and fdivl test es inc loopne stos pop push inc bound aaa inc les enter mov je xchg jbe add cltd cmp lcall subl push enter fildll hlt or sbb in imul and cwtl hlt inc mov call out add sarb push rcrl scas ret in cmp mov fcmovnb xchg or adc pop cmp cmp int3 and clc (bad) stos (bad) movsb loop xor inc jbe and lret cmpsl (bad) in inc pop dec mull je or imul loop hlt sbb mov xchg out pushf popa in shlb add cmp cmp sbbb cmpsl mov add insl add outsl loope inc fwait adc jns arpl push cmp pop imul std add cmp lds inc or xchg mov push jno dec pop xchg add push mov and pop xchg rcr cmpl js test (bad) jbe add into icebp faddl (bad) xlat stos push cmp cmp and jbe gs jbe out adc aad ffree add test pop push mov jo pop stc pop sahf or rcrb bnd shlb fcoml sub or add jle add adc adc ljmp and ljmp and mov in cltd fmull inc add pop das push pop mov shlb (bad) (bad) lea loop adc xor inc xor cmp push dec push cmpsb jnp fmull jae pushf push arpl data16 mov lock inc fstpl negb mov ljmp cld and push fmuls mov rolb getsec add add pop jle js mov lods cld mov mov fsubs sahf hlt sbb out pop dec add loop mov loopne lcall xor clc cld xchg push pop (bad) xor stos or jo hlt or mov pop das leave add fnstenv xchg aas jbe pop in adc or hlt inc int add adc test and mov call add repz lret mov mov lods inc in and ds pop movsb mov pop (bad) add jno push pushf mov clc xor push out outsl cld test fwait test cmpsl inc dec shrb push xchg data16 ljmp sahf subl or cmp mov cmp out mov inc mov sbb enter popf sub xorl orl out inc sbb sbb or ret pop adc (bad) popf mov mov aam xchg test xor (bad) jae daa (bad) add jo add mov leave add cwtd das insl xor pop fcoml es je (bad) push cs or lock inc dec cmp mov faddl (bad) (bad) (bad) ja decb push js pop cwtl inc xchg xchg cwtl pop mov shrl push jnp loopne jb sub add lock test lock jne cmp stos es ljmp or xor sarl push sbb bound cmc xor jbe enter push sbb mov fcomps roll in fwait inc mov (bad) xorl add sti push and and insb mov mov ss rcrb inc add jo cmp xchg dec popa decb fcmovb or fiadd inc jo in popf sub add mov mov sub mov lods js leave add xor mov xor inc ljmp sbb mov pop push ja mov lods mov xchg incl ja flds mov (bad) mov popf in jle xor cmc inc in xchg sbb loope out push push fsubr sbb xor lahf xor cmpsb out mov adc jmp push inc in pmuludq int inc cmpsb in mov mov loop into sub adc jmp (bad) cmp cmpsl cmp inc dec loop es sahf fistpl inc push shrl cld test es daa cmp inc inc push xchg dec mov jge andl inc pop insb or sbb adc sarb ss in mov mov int xor pop sbb jb add cmp notb and cli enter mov movsb push ja das mov dec imul cmc xor inc mov xor fadds add mov cmp int3 pop dec pusha xchg stc dec leave add jnp aam fldenv in sub xor unpcklps cmpsb (bad) imul mov fisttpll inc jp or lahf xchg stc and dec arpl pop jl add loop fisub xor fdivs roll clc mov and add dec pop sbb dec jnp pushf xchg out cmc fs in dec call lds push fs imul add movsb lds outsl outsl cmpsl in (bad) sbb cmpsb in cld enter lret mov mov sub nop sbb adc jne cmovl nop or ret xchg cwtl push outsl gs or sbb xorl rol and ret mov int3 in sahf cmp dec add mov add or xchg jl inc out cmp and jg ja les sti aas test pop inc pop stos rcl and sti mov insl lods jb outsl push add mov lods enter xchg pushf cmp repnz lret mov inc mov sbb jne nop adc add push cli in and xchg (bad) or outsl fcmovu test testl push mov inc clc cwtl aas or pop mov dec add and adc dec sbb scas add popa es fwait add xchg adc jge fiaddl add test sub movsl mov push fildll out dec xor jo or add pop sbb repnz mul pop roll push loopne rcrl xchg or icebp cmp cmp push lahf sbb add push add push push subb nop sbb add data16 rolb mov rcr out add sarl push in js lahf dec push (bad) push shrl sub xchg (bad) outsl jp call jge inc xchg or push jb pop push add adc roll (bad) out lock mov (bad) dec nop pop loope adc cs dec cmp loop push sub dec aam xorps (bad) adc dec push or into xor mov rorb mov sub jae fldcw popa icebp inc cltd or jle pop cwtl pop mov xor push in inc ds lock cmc mov xchg inc cmp pop push pusha xchg dec jno jl add stos or hlt lods inc repz int vphaddwq jbe arpl cmp mov pop shrb daa aas xchg aaa leave add fnstcw sbb mov fwait cmp (bad) aam jae icebp sbb dec mov jbe mov add (bad) subb fsub pop cmpsl lahf jo faddl jb fsub ret sbb add aaa pop call fmuls mov cwtl stos dec lret or aaa lret lcall clc popa add and (bad) mov sub dec ret movsb imul or fldl fwait adc inc adc cmp xor add fisttp std data16 push cmp mov push jae sub loopne add pushf jne enter test mov cli int pop mov xor add add loopne sbbb in add orl cmp xchg mov jg push cmp js test rolb bound movsb inc test (bad) mov out or xor push jo outsb push or sub xchg es in dec xchg mov cmp imul mov imul add sbb inc adc adc inc cmpsb cmp pop mov or out hlt inc cmp mov test (bad) xlat cmc pop cmp pop lea adc xchg xor ret roll sub mov mov aas adc jecxz xor xchg stc jns cmp fbstp out aaa adc mov in inc adc outsl (bad) dec sbb inc fsubs mov jbe (bad) ljmp inc dec pop push aam mov push ss outsb mov fadds sbb gs cs sub into pop ret xorl aaa inc int out push (bad) cwtl inc inc imul data16 outsb mov mov add cmpsl sbb ja (bad) jge fs cs inc jp jge mov insl mov jb pop adc int enter jl inc ret adc push stos or popf ret jg or fwait lcall fucomi pop les and in inc ds sbb mov insb and mov jle fwait scas lahf stos or in or push nop cwtl cli test push mov cli faddl sub movsl sbb flds jg flds mov push xor sub fidiv jbe mulb out sbb and out iret jmp add jp psrad mov jb mov iret scas adc (bad) bnd call jno add in popa xor pop nop mov shr inc xchg nop (bad) jnp and mov pop test add push lret call nop jo add cmp lret icebp mov pop add xor push jl popl add or mov in pop daa pop outsl inc es sub adc push mov cli test xchg loop pop push pop mov pusha popa xor cmc or mov sbb sti cmpsb aaa sub push push mov fdivr and sahf mov pop addl sbb out xor adc sbb xor cmp pop adc shrl mov call and or incl test cmpsl adc xchg pop adc add fcoml lods mov mov mov cmpsl mov pusha or (bad) sbbl adc cmp in cmpl mov mov xchg jnp or arpl cmpsb (bad) or dec jb jecxz sbb pop loope mov jecxz aaa adc inc cs and xchg add inc ljmp roll adc or sub pop jle dec inc mulb add shrb xchg arpl jno inc call (bad) adc sub mov fstpl inc es sbb push adc add cmp mov out faddl sub outsl adc loop sbb out rorb stos or gs incl mov or incl ret incl adcl inc out jg push dec cmp jle dec push push xor (bad) leave push popf testb mov adc lcall and loope fiaddl add test sbb (bad) loop push aam ret cmp cmp xorl inc iret sub jbe or popa cs xor scas sub or fnstsw loopne cmpsl roll in mov add insb jns and insb pop loope ss in aas ss shlb (bad) je loope push hlt lods jae dec lods addr16 nop (bad) popf adc add (bad) les enter push jno sbbl sub add inc ds (bad) lret add adc cmp dec pop ret adc mulb xorl dec rorb push insb out dec jae and mov jnp lods inc (bad) outsb sbb add std test inc cwtl pop mov mov scas inc xor fidivrl js jae jnp pushf xor insl mov and inc hlt fcmovne pop lods push hlt inc repz (bad) sbbl jl add aam ss ret mov ret inc in je (bad) (bad) jno loopne dec push push jge push rcrb (bad) jle push mov negl in xchg xor sub jge xchg mov bnd add inc inc sbb into dec sbb vmwrite loopne iret aad sbb mull or pop nop loopne nop pop mov lods pushw loop scas std enter ret pop lahf in out push cmpsb pop pushf push stc xor inc pusha mov fwait lret dec mov roll repnz aad outsl sub insl daa mov mov mov push in sub in and push fmuls inc fisubl dec cmpsl je rorb pop mov scas fnop cmp jge push push xchg (bad) mov test xchg xor mulb dec in mov movsb in addl inc sbb push arpl fdivs testb dec in add inc out pop inc push inc aam nop jp xor or ret jmp jg adc cmpsb add stc and mov jo pop addr16 mov pop lahf scas add rcrb xchg scas cmp pusha or mov add mov pop flds mov daa pop outsl inc out lods mov rolb jg into push dec mov loope cmpsb sbb add adc movsl push xchg mov nop sbb add xchg mov mov push (bad) push jecxz dec std mov test in add bound aad dec xor pop add test mov aaa in sub test ds pop and and push and and imul cmp flds stos or xor ljmp cmpsl sbb sub subb (bad) in incl or fiaddl out inc fisubl and pop pop lahf and mov (bad) xorl push (bad) clc push neg cmp cmp push xor sahf int3 pop pop daa bound ss inc (bad) out pop aam dec sbb enter or add lret in pop or and icebp cmpsb rcrl lods lahf les mov mov push imul push outsb and xor jmp cmpl jmp in loope sbb xchg push lock (bad) ss jno dec fdivs ja push les idivb call inc jbe mov pushf pop mov cmpsb jno insl lods pop xchg push push add daa add das fsin adc mov (bad) in fnop clc mov add sub cs inc fsubs (bad) mov fwait je imul push cwtl cmp sub sub cmp pop xlat sbb sub mov outsb sbb mov icebp xchg add loop aad xor loop cli xchg add jb loop adc (bad) or add and stos cmp pop and xchg add sbb fisttpl and repz push rcl pusha mov cmp add repnz aas mov arpl mov add daa dec ret xchg mov lods cmp cwtl insb adc call das faddl stos rcll int3 jp or or in int repz adc fisubl into cli fadds sbb js data16 jg sbb (bad) std addl ja mov add leave pop add std out fiaddl jb in inc aam fwait cli or arpl call clc test xchg bound xchg mov inc sub add fadds cli into cmp push fcoms inc out or aad push std call dec (bad) dec and aad add insb sub dec adc fiaddl cmp out mov int mov or add sub xchg (bad) sahf sub movsl ljmp add je cmp push or sbb adc loopne je xchg (bad) inc cs fs in mov hlt add cmp sti lahf and daa or subl fiadd inc dec mov add lods mov add movsl in inc xor mov sbb out inc fidivl inc jmp pop jmp adc stos push cmpsl adc push jbe nop cmp mov shll lret inc mov sbb jbe and aam lcall testl inc or jg and aam or mov push imul insb and inc jo (bad) sti daa lret out inc call scas mov int sub mov adc inc addl sbb mov push es xor bound and (bad) (bad) jnp push rcrb or bound mov push sbb in int3 adc and mov xorl jb je mov fiaddl or in xchg sbb out repnz ljmp imul jge dec jno inc cs (bad) lahf or inc cmp mull movsl hlt mov inc mov mov mov roll fsubs test (bad) xchg and enter mov push sbb push loopne sbb jl adc jg icebp add xor lock int cmpsb imul xor mov inc push jge cwtl mov leave add dec shr inc push sti mov pop inc adc ror fstl push xchg cmp jge in cli mov popf xchg mov xcrypt-ecb cmpsl mov and jnp sbb gs mov sahf push iret or test (bad) push aaa inc ret test jb aad sbb pop aam jp xchg add and (bad) sub pop jb rolb sti and and xchg es lret xor jge mov or mov cmpb cmp cmp in ss mov lds sbb sbb out orl js or stc (bad) jecxz fnop sbb pop mov dec int cmp out inc in xor insb in jg push jle fwait addr16 mov adc daa mov pop inc pop dec fsubrp es mov sbb cmpsb fdivrp and orl pop jns (bad) push pop pop fimull adc repz dec clc daa js mov push (bad) jg adc in cld dec into xlat les or test lret add ss sbb aam fiaddl (bad) fcmovbe cli adc repnz xchg adc pop imul out mov imul mov cs mov push cmp pushf jbe fs pop add adc subl std roll pusha fstpt jg inc push jle and push ret sbb jecxz rolb outsl cmp mov jne and je arpl mov iret je mov mov cmp add ds pushf rorl cmp inc mov loop mov mov les insl dec and decb xchg mov (bad) push pop sbb and fsubrp andl jp xor add mov movsb outsl mov inc mov or daa inc ljmp fidiv outsl fisubr sbb add xchg add mov jmp pop sti jg add ljmp cmp push into ja enter sbb and lds xchg or xchg push cmp movsb sbb sbb inc call test mov imul jge xor lds jle adc repnz cmp adc arpl jne jno pop lret push rsm add cmpl adc mov clc test incl loope jbe js cmpsl dec sar ret pushf cs cmp jmp sbb sbb or sub test push push jmp rolb lea adc mov inc mov mov push movsl stos push std inc outsb inc push xchg jge pop mov sbb sbb mov sub xchg shll (bad) in leave add inc mov mov jmp aad jp sub mov (bad) inc lea push in repz sahf shll ja sbb sarb cmp fldl xchg (bad) imul and push jae pand test or rol outsb mov jno ja flds mov add add cmpsl inc lea xor lret sub pop imul mov (bad) mov outsb jbe add lds out mov cld push jne push sub xchg jne sub dec fucomip (bad) xor sbb jo lret jno lods mov in pop xchg jp cmp cmp push jp jl add sti daa out lcall (bad) call bound mov ret mov xchg (bad) jp inc mov ret sbb push mov enter je out lea iret movsb insl mov (bad) xchg aad dec inc cmp or inc xor (bad) lea add or imulb xlat bound sub nop pop and js push xchg adcb mov jge cld daa leave add adc fs cmp data16 sbb mov xorl imul ljmp test jecxz rcrb sub mov pusha xor pop push ds mov xor (bad) nop inc out xlat cmp repnz shll sbb in add aas pop dec insb jg sbb mov (bad) negl push push ja push mov imul and lea or cmp cmpsl rcl les jne add jo shlb pop push dec les inc cmpsl (bad) xor add inc and in jle rcrb test fstpt in sub xor js psrlw mov add add lods and cwtl (bad) lock repnz leave dec mov mov gs lcall mov xor jl jne int3 and add xor jp fs pop jg std rclb or mov das mov (bad) mov lods jo and mov (bad) pop push ret mov cmp mov xchg imul xchg sti rorb xchg test add in (bad) push dec jge popl ret cmp inc or jp xor std call xor repz es lock roll ds hlt (bad) and mov imul add jns lret pop jne popa cli inc or jns xor mov pop repz shll pop lret loop sbb mov test pop aaa adc sbbl fmull test gs pop inc xor ljmp out adc incl xchg or or mov jecxz subl push out adc mov in pop mov jl mov xor sub divl xchg sbb dec movsl movsb mov sub add inc cmpsb subb cld mov fs insb adc nop outsb mov nop push push rcl inc xchg add mov divb out sbbl pop xchg mov push je add dec jnp dec fld out dec dec add fs jl add jae jp jne fisubr stos jp ja subl or lret push xor push gs fsubrs xchg (bad) ja adc inc cmp fdivp adc aaa cmp sub dec into push sbb jbe add dec mov mov loope or (bad) jne pop xor ss test pushf sbbl ja mov add inc sti sarb dec mov in das inc sbb add jbe fbstp mov adc and push addl mov adc test sbb cmp (bad) jbe xor mov add xchg aas inc or mov push push mov mov add nop or ret jnp arpl push jo and mov aaa lahf rclb add push xor int mov dec mov add xor jg sbb mov pop out cltd sbb sbb xor je cmpsb cmc dec incl flds pop pop test lods aam stc and dec mul jbe aas faddl mov cmp or jbe (bad) enter add and clc xchg lret jl fisubl mov inc add cli popf incl pop call loop subl xor lahf lret inc sbb add cmp (bad) adc mov and repz int fisttpl push jae orl and insb inc mov add mov stc and dec je sbb jmp pop ss and adc (bad) push cmp mov jo fisubrl add inc jb pop inc push xchg add mov inc in pop outsl xlat and rolb or cmp imul fwait ja inc jp add sahf rolb cmp call add or mov cmp adcl lods sbb jno in enter sbb add sub mov push cmp (bad) pop std pop les test mov mov or fwait test sarl push lods and lahf int3 push inc push loop or in inc mov mov sti test into aad xor out xchg jns pop xor add pop jbe jg (bad) xchg xor fs or inc xchg mov cmp rorb or xor rolb cmp movsl incl sub xor mull scas dec sti cmpsl (bad) or (bad) nop pop pop fwait insb std rorb mov pusha fdivl cmp mov fistpll xchg mov lret out cli js shr add (bad) mov incl jno inc mov pop (bad) xor sbb clc xor inc inc xor adc enter pushf addr16 and sbb fwait dec clc (bad) lock loope imul and imul mov test ds test mov inc movsb std xlat adc movsl cmp into call or jne in (bad) xlat cmp add fldl xor (bad) jge sub inc sbb or push pop push inc cmp xlat mov mov dec cs out test ja and in (bad) fisubr cmp and arpl mull push dec iret sub and jp mov clc call pop lods or mov outsb sub fsub test loop sbb push stc cmp insb pop pop cltd inc into mov imul sbb insl imul or fst xchg xchg mov mov sub popa jb sbb iret add sbb call adc mov dec outsl lahf in (bad) jge popa stos lock add (bad) jle cli mov out lods xchg fcoml or ficom mov mov mov fsubs cmp add push inc or imul loopne push imul faddl inc (bad) js add insl mov iret inc sbb cmp inc int fsubrs xchg push mov repnz add dec cmp cld lods lahf push sbb cmp push popa push push ljmp xchg lcall jnp mov pusha cltd xchg pop sti cmp sti jae mov push jns clc jnp dec jne pop mov jl jmp rcrl cld popa cld mov aas dec and cmp iret or pushf sub inc jmp xor enter cmp aad es out mov mov jnp mov jbe arpl xchg pusha jo test call nop sbb test stc cwtl fstpt xchg int3 mov stos fistl (bad) xchg nop outsb xchg push adc mov xor js cpuid or out or in sub inc shrb or fbstp les inc ljmp sub pop call insl and imul mov adc dec jnp sub fisttpl int inc and push imul push (bad) testb sbb ljmp lcall fldl sbb (bad) cmp iret sti mov add dec arpl add lods cld fcomip or out jne (bad) mov testl out es adc imul stos xor and popa mov xor sbb lods push xor inc add inc out movsb mov sbb addb pushf or cwtl inc jmp adc lods test sub shlb incl or movsl cld mov add xchg hlt cmc sbb mov insl ljmp dec pop cmpsl xchg add jb lods daa adc add inc xor loop fsts pop jne addr16 faddl (bad) lret ljmp xchg or inc ljmp and pop pop mov sbb push jmp add ficompl (bad) cmc dec iret jne jne cld push mov and jmp test clc and sbb sbb jne cmp adc push fsubrl jmp out adc sahf jle data16 hlt mov mov xorb int3 repnz or out sbb sbb popa out mov into aam imul mov cmp dec dec rcrl adc enter xchg or dec out stos or cmc fwait test shl rcll out fnop add sbb loopne push xchg xchg inc (bad) fdiv cmp call or xor cs xchg lods insl inc xor push cmp jecxz add out ret or outsl les or fs add pop dec adc or sbb adc mov hlt mov dec push add xor cld cs mov insb cmp mov sbb jp (bad) mov push adc je pop adc push clc inc lea cltd and sahf mov xor dec insb sbb dec mov (bad) aaa push js incl sub mov jns cmp call int3 sub enter mov fcom push popf mov cmp inc fdivs (bad) pop jle mov add (bad) xchg (bad) adc cmp inc dec imul lea mov insb outsb and ja dec add fs mov mov cmp lea insl fadds or roll mov inc add test cmp cmp cmc in stos subb addb sarb ds call test shrb and int int cli nop adc leave add incl adc movsb cwtl inc lcall movd dec xorb fiaddl les adc sti and mov clc jge and inc ffreep jo addr16 nop sbb push mov lea and (bad) add xlat push insb mov adcl jae add (bad) and insb test dec sbb fucom add mov fisttpl data16 and sbb pop test or mov push xorl xor aad ljmp mov faddl js mov sub mov sub cmp xor add dec mov sbb addb push out (bad) ja xor and add fistpll imul jp sub dec fnsave js test (bad) inc in loop mov in dec aam addr16 (bad) mov ja fadds ljmp push or add mov push xor sarb push add js push int3 outsb inc out repz push inc mov push es testl mov inc push inc sbb pop mov push ror mov cmp sbbl xchg xlat xchg or or mov inc add aad test mov js out inc ljmp nop sbb inc icebp mov lret and (bad) enter add sarl fs adc adc push or and addr16 push sbb add (bad) mov mov add push sbb cmpsl leave push inc mov xchg or cmp and test sbb jbe inc mov pop daa sbb xchg add into mov pop stos mov lcall jge cmpsl hlt pushf nop outsb daa sbb and xor push loope mov pusha jae cmc bound mov clc and mov push loop push in lcall mov sbb mulb mov sub loopne xor inc xchg xor xor jmp adc cmpsl testl mov (bad) sub sbb fiaddl xchg adc mov inc lret fs lret add mov xor or insb inc sub or mov in inc cwtl (bad) int mov or adc inc fcmove int3 into clc stc mov jns and push add lahf lods fldenv cmp add or fbstp insb cltd or shll inc mov cltd sbb (bad) add aad outsb dec inc mov pushf jle nop push movsb xor dec int3 inc xchg adc lahf add adcl inc mov and cmpb push adcl mov add jecxz xchg cmp cmp out out and repz ljmp cld shlb xor cmp and nop pop dec or and adc call add cmpsl add mov xchg rorb mov (bad) fstl or stc pop lcall mov and (bad) mov std faddl cld and out insl mov adc inc idivl incl lret mov sarb add xchg add fdivs aaa push mov mov daa fimull mov (bad) in adc sbb mov sbb or test dec sbb loop xor xor cmpsb xor repnz addl fldenv mov stos int3 inc cmp or xlat inc out jno enter cmp dec dec dec (bad) aam and mov call ja iret das mov sahf sbb adc adc aas notb cltd ljmp lea insl mov (bad) push inc insb mov in mov bnd gs push (bad) das subl and inc inc inc adc mov outsl faddl sbb add jae loop lahf add cmp popa pop test gs dec sub xor inc cmp push imul int3 sbb sbb (bad) lds mov xchg or icebp cmp inc inc divb test aaa dec lods mov dec mov cmp fisubl out mov push fmul out into cmp jmp mov pop cli fnop cmp sbb sbb or addl cmp push (bad) mov xchg lret cmp jg loope push jnp push cmp adc mov and leave div inc pop insb dec (bad) mov iret sub mov fnop ss xor adc mov cs push shl xor rolb clc mov or in dec mov push xor sbb add jae incl xchg data16 push mov sbb adc push mov outsb mov jo jge adc outsl push or int inc jb loopne adc insl add xlat out xor insb (bad) fstps cmp or dec pop lahf pop push loop or inc push andb sbb sub mov aas pop enter push mov adc sub xchg xor gs imul lret sbb pop jae sbb into roll push addr16 (bad) and in addb out lcall (bad) jle or insl dec sbb roll ss push lcall ljmp pop push mov push lcall mov dec sbb fimull sbb pop mov sti test cmpsb bound mov ss inc jmp push xchg xchg clc and int inc add xor fldl mov ljmp or outsb sub adc mov push jmp pop pop in cmp (bad) and jp pop cmp adc mov (bad) pop loop xchg add inc repnz cmp adc sub scas faddl (bad) cwtl (bad) sbb test outsb sbb jnp bound xlat data16 ss inc jae mov gs inc lcall mov pushf pop cmp push aaa or inc cmp shl orl adc addl fdivs and jle add sub dec outsb jne enter and packsswb jle (bad) xlat jb xor popa imul out jl sbb and mov cmp inc rolb dec sbb or ret and inc sub xchg add loopne xor inc js or sbb and mov jae out adc nop fnstcw popf mov ficoml add stos fsubr aas xor jle mov pop sarb inc leave add sub dec jno and add outsb vphaddbq sbb orl xchg push rcr adc and push int or jl push sti mov xor adc pop mov (bad) cs inc push pusha call incl in pop fsubs jbe sbb mov imul imul enter push lds (bad) or sbb or arpl shr or pushf mov sbb mov pop mov hlt inc push lcall inc cmpsl sub mov incl insl incl icebp inc fs addr16 mov hlt sbb mov (bad) sbb (bad) int3 mov xor dec pop stos into cs insl out mov mov pop ja subl mov jg int3 cmp add xlat cs js pop addr16 inc add push cmpsl mov cmpsb das test jmp inc out ljmp push sbb mov xorl push mulb xor andl lret adc mov and jmp add xchg sarl sub fcoms xchg ret jns mov stos or mov mov dec add leave add or out sub movsb int3 and imul stos rolb fwait push sub ja jne outsb sub pop loope and pop idiv daa leave add das js les sbbl aaa mov shll cmp inc cmp movsb add push jno outsl or imull sbbl xor dec xchg add add dec adc mov pop mov add sbb mov inc and jne fldl push int3 sbb popa mov add out mov mov or sub (bad) jns xorl jmp sub jl add add stos out aam sub pop outsl push test mov xor repnz inc cmp insb inc add rcrl subb jecxz subl aam inc iret aaa popf enter or add dec mov sub sub push fs mov fadds stos inc fs push adc insb loopne mov dec ds cmp push xor fidivr loop pop xchg push pushf push das clc dec inc xchg ss inc add adc add stc and inc insl push push mov and pop shlb xchg adc add ds mov jnp sbb jge pushf inc es out sub loop aam mov dec push xchg scas les cmp push das inc and adc loopne push mov or testb nop arpl xor cmpsb pop xchg bound call push lods dec in xchg or in inc cmp sbbl jbe std ja pop pushf sbb je sbb and mov adc mov push cmpsb push pop inc out or fcomps addr16 or test mov fcomps pop (bad) xor orl add les adc pop push insb xchg sbb lods pop divb (bad) popa add pop mov mov xcrypt-ofb cmpsl push outsb ret xchg and cmp xor jo inc loopne xchg xor imul inc mov add sbb push out dec cmp xchg xor sub mov lds cmp (bad) or popf jb insb push sub and push repnz aam int mov stos push push add insl fnstenv push jb add mov inc enter cmp int ja sub or pop stc (bad) dec add cmp and pop push test jbe int cwtl or cmc (bad) stos or push cltd pushf pushf roll inc (bad) (bad) insl es dec cld dec push push dec in mov sbb lea sbb dec cmpsl cld sub jge sub insb mov jmp das out in dec mov repz mov xchg iret popa pop xor push push cltd sbbb fiaddl add fsubp and test out pop rcl mov push push aad mov pop cmp rolb das inc pusha lea or popa add jb inc iret imul xor aad jno (bad) and shlb xchg clc inc es inc push dec xlat jp rol call sbbl inc pop cmp jmp repnz das andb fs inc sub adc pop and sub sbb mov and roll pop pop or rcl sbb sbb gs push faddl inc test clc cmp call cld scas test add jecxz mov fistl jns jno rcrl lahf mov xor (bad) sbb arpl push stos (bad) cmpsb shrb xchg xor mov inc ret add scas in pop popf mov mov cmc xor sbb push jno mov sahf test in test add call mov sbbl incl mov xor add mov push daa pop and pop mov imul mov test mov add repnz pusha icebp sub mov adc xchg push sub or lds lds adc jge xorb fcmovne push jbe mov insl xchg or adc sbb mov imul pop adc repz xchg cmp hlt sbb hlt incl lcall push push mov rclb xchg imul xor lcall std inc mov ss stc inc ljmp and aas icebp add adc clc js pop pop mov mov je (bad) mov inc xchg (bad) jge imul inc inc addr16 popf loop ucomiss lcall lods or or ret push loope jecxz cmc pop arpl (bad) fstpl sbb movsb pop fucomip jb ljmp lret pop prefetchnta xor jnp jae xchg pop mov dec sbb and add popa es sub adc mov fwait push pop in repnz push sbb jle push xchg dec mov std frstor (bad) add push call inc push jg scas ficompl mov out mov (bad) add sbb cwtl xchg sbb mov cmp incl (bad) inc xchg dec inc sub mov ljmp repz lcall loopne dec add push mov movsl push push unpcklps push mov mov xchg adc push mov dec add cmc lcall cmp idivb movsb fwait mov mov pop jl jl ds rcr sbb cmp rcrb hlt push dec in daa pop push jns sub cmp int3 fsubr or add xchg add sub pop divb mov nop fnop and hlt push and loopne fxch add fadds pushf movl push (bad) mov (bad) xchg test shrb cmp ds mov incl or movsb xchg in divb cli outsb (bad) mov clc ja cmc lcall test movsb in add cmp push pop fcomp dec or mov sar and adc (bad) mov ret mov pop push lcall push aas sarb jl and pop jnp in mov xor push (bad) xorl clc test (bad) je push dec adc add jmp lods outsb fs sbb daa add bswap roll mov aas jmp orl std test jns daa xor cmp add outsl insb xchg std jno (bad) popf sbb rolb sbb iret push xor cmp sbb loop cmp outsl inc std cmp sti dec cmp pushf mov aas or jle out je jge add (bad) mov sub (bad) in clc cld shlb fdivrs iret popa pop xor push jp add cld add les shrl sub dec xor (bad) (bad) jae inc and dec std gs (bad) sbb cmc aad (bad) jbe sbb xchg dec notl jle rolb or fdivs inc shlb push xor dec lds or jle adc es and sub int xchg leave mov push loopne cltd cwtl fs in out test addr16 xchg xchg xchg cmc fiadd outsb adc push inc add rcrl mov inc pcmpgtw push dec lods sub js xorb adc sbb push xchg mov jns pop push movsl dec push faddl or xor inc ljmp and in scas add push mov (bad) les fadds loop bound inc jmp xor mov leave mov lods test adc std nop inc inc cwtl popf es mov inc (bad) ljmp mov ljmp add aaa pop cmp mov lahf and incl (bad) out pop les sbb out inc cs xor clc mov lcall jns mov subl repz xor adc (bad) out mov fldt inc subl add pop mov (bad) imul xlat dec adc and mov mov clc fwait pop mov and xchg sbb fs jg loopne ja sbb add adc xor daa leave add into xor xor aad mov call mov jbe cwtl (bad) adc in test inc stos or or jge lds add ficompl mov xchg or jne add push mov jo fdivl add mov movl in imul divb push cld movsl add cmp push cmpsl cltd cli out inc push jo out inc xor jmp mov push loopne arpl ret loope test and int3 popa xchg clc push xor hlt (bad) setb xor sbb insl sti push sub or pop push cmpsl push (bad) adc icebp out test in xchg add (bad) enter pop enter or popf test adc ljmp mov inc xor xchg push mov or mov mov fs out in mov outsl inc jp testl xor inc test lahf pop nop cmp or addl es mov sti int and inc (bad) nop add inc mov out push fs popa ds mov test cmp jmp fucom sbbl test and push repnz ds bound ljmp rolb mov (bad) dec adc pop cmc mov arpl mov pop mov pusha movsl push aaa enter stos mov sbb jae sbbl cmp mov push cmpsl mov call (bad) and xor mov adc xchg jno cmp adc loope (bad) or dec loope xchg inc or push mov jp mov xlat adc push fdivr insb inc fcmove imull xchg (bad) stos (bad) repnz aam xor add divl sbb xor sbb js xchg and outsb ja adc jmp or cmpsl or daa inc adc rolb sbb inc mov popa cmpsl incl insl pop cmp dec and or push jp inc inc sahf xchg xchg (bad) ret add push mov jge sbb mov inc lcall sbbb jbe and add sbb iret and pusha and cld dec add pop push stos sbbb push inc mov adc add (bad) jbe adc cld inc cld mov lods es sti nop imul jle insl (bad) adc rcrb ficompl in inc or scas add in sbb pusha test in subl in cmp add add in loopne lcall in cmp cmp mov int3 cs fistl sub mov mov (bad) push imul das loope out in pop shrd xor lock into or (bad) fwait lcall sbb cpuid or mov adc fucom mulb inc gs push sbb test or cmp icebp std nop sub xchg int aad xchg or or cmp sbb lret insb mov arpl xor test in pop arpl (bad) xor cmp jnp rclb (bad) bound adc les dec xor sbb negb xchg or ds and call adc xorb test outsl imul jl dec movsl sbb pop divb lods push jbe sub sbb in push push roll xchg sbb xchg and out aad cmp jle aas test ds mov test out pop jo sti rorb popl mov in sub add aas js (bad) call int cmp loop imul jp lods dec pop dec sbb incl faddl add jae push and lahf cmc insb inc mov gs aaa add inc dec xor out jo add mov aaa pop orl jge std loopne in ljmp sbb sbb mov sti pop mov add adc and je or push test or push fcom dec fiaddl or (bad) int pop mov das mov (bad) lock in (bad) xchg or xlat movsl orb insl stos mov push imul jb lcall mov or inc test lock pushf xor fnsave dec xchg (bad) daa cli sbb add into je xlat push ret mov and (bad) je (bad) mov dec (bad) repz ret jnp and dec add sub jmp mull repnz mov lds incl adc jns ret and mov dec inc mov dec inc fdiv loop xor divl les mov call or pop cmp dec mov mov test std push shlb (bad) ffreep pop cmp std xor mov rorb sbbl in gs test in je sbb cmp jbe push adc mov xchg (bad) stos enter adc bound mov fs inc mov popl fsubs shrl push push xchg push mov adc outsb sti and sbb add ss add cli xchg or pop mov push push adc xchg pusha cli test sti cmp sub xor xor lea cwtl call adc test test les jno outsl pop and pop in outsb lea mov lods cmp fdivl sahf mov mov lea daa addr16 (bad) data16 adc fmul ja pop jmp or test out aas gs xor sbb add mov out dec mov sub jns add add pushf and hlt pop ljmp ss inc and mov test add or dec sub add and dec inc iret adc and in outsb imul ret add mov test hlt or cmpsl or push cmpsb dec push (bad) xor icebp mov ss mov std push cmp mov adcl lea mov int3 stc and mov out pop roll inc fsubrs cmp inc out adc lods aas jecxz int3 dec push xchg mov jae sahf sar out popf push insb rolb add ret movb mov xor fsub add std dec mov mov add lret pushf sbb (bad) divl or incl aad adc dec jbe stos pop test lea orl cld dec jge cmp insb dec mov sbb mov jp xchg fimul and jle jle lahf mov mov mov les jecxz rol adc je xchg jecxz (bad) or imul fbstp mov mov call pop jae mov je shlb test mulb inc rcrl push push add mov pop (bad) aas mov aad push (bad) mov loope ret sub lret pop mov insb and adc sub mov arpl or fimull (bad) dec (bad) jo or das hlt rcrb lret repz dec jae mov dec cmp es cmp addr16 mov sbb mov inc add pop pop mov dec mov dec xor and pop inc andl add sbb xchg ds icebp mov add xor mov in test jbe cli loop sbb stos call in inc ljmp or int3 inc jp shlb in jae jns xchg pop aaa mov stos xchg je fild int3 push insl inc dec fwait pop and mov out cwtl cmp aaa xchg mov adc inc mov push jns (bad) adc sbb push mov pop mov pusha add js add mov adc in sub enter inc (bad) cmp mov orb adc cltd xchg shrb jnp or jnp je imul mov arpl inc xchg div inc mov (bad) nop out inc inc (bad) cmp mov mov lock jnp in lret mov mov sbb and push pop pop mov enter or ret les cli mov in das (bad) cpuid or dec (bad) out and dec jp ja pop inc or jl or mov inc sub cwtl inc dec cmp mov push cmpsl cs inc (bad) data16 mov sub push iret adc into loopne and jno daa jbe adc fimul sub loop jne test addb sbb (bad) xor or and xchg aad addl and data16 mov xchg or ret lock ftst adc fild add xorl stos js ficoml incl das xor inc loope sbb pop add adcl add and aaa push dec push loopne jbe sbb xlat inc subb (bad) (bad) push sti nop dec dec roll nop xor ja push or inc cmp jbe push add push aam fisubr in stos mov loope or call jbe sbb mov fldcw add ror std insb inc ss popf pop aam nop dec mov push in xchg jno xchg or jp mov arpl push sti inc rcr inc out cmp push negl add or test incl test and dec add jo faddl push adc mov pop lds cwtl xor jb ficoml or jle add mov loopne cs xor roll jae add push mov cwtl inc int adc jp cmp xor call nop add mov lods inc lea insl mov (bad) or lock out inc pop btc (bad) xor xor (bad) inc push xor lock hlt psrlw sbb add (bad) sbb push mov dec pushf mov mov (bad) sbb lock add sbb inc stos cs add add pop imul adc cltd cwtl push test popa aam inc inc push flds sbb push xor push push shr jno adc mov add or or jmp fbld jbe loopne or orb inc sub xlat push int3 adc (bad) lahf mov loop push dec iret inc adc inc into clc test xchg push dec adc cmp fildl faddl dec xchg cmp add incl jae xchg call lds sbb inc imul dec pop mov nop fldenv jns add test loop push test dec out cmpsl mov cmp std nop dec push in outsl inc fcmovnu repz lret mov mov negl inc scas add fisttp adc stos roll and mov mov cli or sbb jbe mov js add addr16 out mov cmp dec lahf clc inc inc or mov cmp (bad) add pop cli xchg inc push popa jg js or push jecxz imul adc inc sbb cmp aad xchg out pop mull es das mov mov in xchg and subl add mov push lock sbb xor add add cwtl iret and dec xchg sbb jns gs cmp lods pop in sbb and jmp add loop push sbb push mov (bad) in mov outsl (bad) and inc mov inc jbe push cmp cmp popl adc xor jmp mov or out and imul push test lock int3 call stc mov test mov in (bad) xchg push pop mov cmc xor xchg bound ds add fwait dec jp ror cmp sbb push cs outsb leave inc push pushf out xchg cltd es popa sbb jae push popa cltd aad (bad) hlt push sbb jmp xchg stos cmp sbb out in xor sbb pop or mov mov push mov popf stc mov mov aad mov mov xchg add out data16 bound sbb lock sub pop lods xlat pop in add cmp adc push push mov and fist or inc mov jnp or cmpsl and fldl or jnp in xor or rclb xchg dec xor inc repnz test rcrl dec (bad) ss mov and pushf add mov sbb subb jne cmp xchg cmp (bad) std push and faddp push ja dec mov incl dec jg adc lds movsb cmp push push std jge cmp mov xor pop popf cmc fwait stos inc adc pop aad shrb outsb inc insb leave pop xchg dec jno jbe and add rorb sti out (bad) pop in xchg imul xchg lahf lds ret cmpsl aaa cmp jmp out jg in sub or jmp int3 jne dec insl and cmpsl and rcrb or mov ljmp cltd mov inc cwtl inc lcall jecxz push dec and mov or shl enter insb xor mov pop sbb and insl sbb cmp mov jmp (bad) fst jecxz sbbl push arpl add push insl inc std and aam mov mov mov mov loope mov push daa and (bad) or inc into or shl xchg dec adc pop add push push fsubr and and inc outsl std and outsb (bad) mov int repnz pop mov mov adc sti xor add lea punpckhbw mov imul mov ret mov cmp ss dec push mov mov xor out mov shrb pop or xor mov pusha int3 loope sarl dec mov add shr fcmove mov and lret xchg xchg dec adc jg adc adc addl test adc or mov xor iret imul add lds testl insl jae in fiaddl js,pt and ds das cmpsl and pop inc sbb jmp sub adc je subl popa jbe mov push mov mov ljmp (bad) mov popf movsb jg movsl add dec pop rcrb and out das loope xorl add and adc mov pop (bad) bndldx sbb pop insl test jmp pop lahf mov divb das scas push imul sub sarb push xor loop push hlt add pop cmp jne jle inc jle out adc lea not incl (bad) dec sahf and add in pop (bad) cmp and ja or mov and cmpsb loopne sbb cmp xor xchg mov and stos lret out jne shrb mov (bad) adc subl add pop js cwtl adcl push and xchg or ret movsb mov inc push push cmp mov mov sahf in imul aad outsl sti and or fdivl std nop xor mov aam push lds enter fiadd and pushf pop xor sbbl fildl test cmp mulb pop sbb add clc ja cmpsb nop push push testl lock or nop jnp das mov std ret push ja push hlt add daa pop pop jae adcl in fadds andl (bad) stos fcmovne mov add in addr16 js les dec repnz sub loope mov push inc stos jo mov call inc mov mov (bad) add cmpsl iret inc pop cmp mov jp mov mull call inc fiaddl mov jecxz andl out inc cmp lahf mov cmp add mov add lock sarb xchg arpl xchg xchg into or cmp movsb in test mulb sbb std dec add or inc cs popf outsl (bad) jl dec mov adc lods mov popf ljmp (bad) mov in sbb bound (bad) xor nop push negl mov arpl pop clc test mov aad mov xor rolb sbb arpl xchg pop sbb pop lds sbb add iret addr16 xorb cli repnz xchg rcll push test fwait aaa mov jae nop arpl lock inc jne xor jp pop mov xchg adc rcrb int3 mov push xor iret (bad) or (bad) add ljmp add sub adc (bad) xchg or std nop daa dec ljmp and (bad) test shrl cltd mov push and inc dec sbb jmp les stc sahf dec sbb test push les outsb jge xor push clc jb ret mov adc dec pop xor cmp je movsb popf dec and xchg repz ret lods push xor jp leave pop aaa sub test daa dec in mov pop add push sub jge (bad) in add jle sbb aam icebp lods push ds lcall roll arpl out inc push mov mov ds imul (bad) les pop ljmp cmp or js inc lods xor jmp cwtl jne pop push mov hlt dec or and inc cmp add shrl jnp je push dec pop cmpsb mov in (bad) jae sub xorl add fsubl sub insl shlb and ret xchg mov adc inc push xor cmp sbb aaa mov lea pop jb test rol lock mov or or or repz (bad) out add lds stos mull push push ja add jecxz mull adc test fwait ss outsb test inc out pop in xchg or adc jge in sub (bad) or mov call or cmpsl fldl (bad) mov adc pop in push les cltd cld es dec pop push (bad) test lcall ds adc adcl fwait mov fbld push xor lahf add test mov push sub adc aas ds inc or sti jge and (bad) fcmovnu add xor add nop std add add pop xor inc outsl (bad) cmpsl cmp hlt mov push nop outsl jl data16 cmp out int inc mov xchg mov mov push push and xorl and or mov jmp ja add add in mov push mov cmp inc lcall hlt popa icebp pop xor add fiaddl push pop jnp incl push or push sub sarb les loop or jo sarb mov sti outsb (bad) lcall add fadds mov push cmp inc int movsb dec jnp,pn sbb notb (bad) lret lods xor push sahf pop popa lret and inc cmp popa cwtl add cmpsl mov mov mov mov lods fist mov fldt adc test bound and sarl es jmp fidivrl je jge stos test xchg or or cmpb inc ret adc mov jp add (bad) dec les push test xlat xorl and push pop jmp or cltd in xchg or or leave ss or dec xchg popf lcall and and popf mov lods add mov lcall push cmp adc mov and adc xchg lds pop push in mov push mov imul mov dec lret (bad) lea cld cmpsl in add pop inc mov cmpl lods and inc sub and mov push (bad) pusha sbb cmp sbb push push sbbb mull nop jp xor out scas or mov pop xchg repz push mov movsb jecxz dec (bad) add out mov push insl xchg cmc fadds jne icebp cltd inc cwtl rcll (bad) repnz mov mov repz mov inc mov (bad) mov scas cmpsb (bad) and imul dec addr16 push in pop add pop mov incl or (bad) xchg out mov cmpsl data16 sub jp sbb (bad) or pop (bad) in cltd cs fcom push sti lahf inc push in and call sub jnp push mov cmp pop dec dec add adc mov add mov push jns xchg in (bad) int3 jmp xlat inc push xor vaddsubps es dec stos addb (bad) cwtl rol in or or iret test mov mov add dec out aam add aad shlb (bad) mov mov (bad) call jbe sbb mov jmp mov cld rolb jle int3 or fcom ljmp jg repnz cmp cmp inc xor mov pop jmp push xor arpl add fwait or sub xor adc push lea and ss fwait loop mov stos pusha jmp jl xchg and cmpsb push adc adc or test mov xorb and adc sub inc push (bad) jo xor mov incl push lcall pop mov sbb and inc sbb pop je out repz add push pop imul imul aaa int3 fdivp or ljmp xchg push in fistp int3 jns popa insb repnz fcmovnbe or xchg sar add mov jo,pn and into (bad) test imul (bad) and into mov cmp notb imulb insb and mov jbe mov pusha stos loop pop add add fldl push cs jae push xchg roll rorb add mov and hlt sub fcomp adc mov pop add mov cmpsl imul loop leave add stc jae add and push repnz lea inc add sub and mov jbe mov and aas mov pop mov push rolb or lds mov testb sbb push (bad) add add test outsl cmp or pushf add pop cmpsb cmp incl test add xchg sbb inc add and sub aaa pop jmp add std stos fcomps stc inc data16 icebp pop jbe push ficom out mov lret cmpsl adc fidivl clc scas sbb cmpb in inc adc (bad) mov outsb cmpsl mov push int sub movsb xor add mov std mov inc push jae fist add and (bad) sub pop xchg shl mov mov test jb jl dec (bad) aaa push in or mov cwtl fsubrs jno xorb mov mov loop (bad) jae iret mov call sbb jecxz cltd inc lods sub and mov mov add shll jbe jbe xchg mov xor adc clc add cmp ds dec adc and shlb pushf jmp mov repnz stos pop inc mov mov lods outsb jns (bad) xchg sbb or lods and mov mov enter pushf fsubrs or cli insl nop push sub add sub outsl pusha xor push sub mov sahf into hlt or or add jne mov in sbb enter adc add testl cmc jl insb pop mov push leave cli out inc (bad) ljmp stos shll dec out std nop cmp lods stc movsb jl and mov inc jbe (bad) and or test iret inc push repz call flds sbb mov out inc aas mov aad add or loopne pop shl xrelease xchg dec dec mov mov lret pop pop ret (bad) aas pop adc stos cmp mov pop jnp or loopne mov insb leave inc mov ss sti jb inc mov mov xor jno or repz xor repnz sbb mov add ja aam mov lods or neg add xor and inc fldl inc add outsl xor mov sbb adc rcrl insb mov xchg add xor add sbb jb (bad) xor hlt or sbb push inc cmpb hlt incl dec stos add add mov sbb sbbb jo sbb push xor push or test (bad) imull or (bad) or pop in inc cmpsb cld nop imul and push inc test mov cmp out xor sbb inc sub addr16 stc adc jecxz mov pop inc xchg rol hlt iret jl or and leave add je xchg sbb mov jne sahf xchg cmp pop push dec mov inc jae inc and scas or test mov repz xlat (bad) jbe daa shlb xchg data16 xchg or adc or jnp (bad) jae mov inc mov mov movsb ss push or and mov insb mov adc enter divl loope in mov cltd xor repnz sub xlat imul xorl pop popa notl dec pusha loope add inc add add cwtl cmp push and pop pop adc icebp mov or jns or scas sti and lock mov mov rol cmpb push xchg loop out pop mov xor mov add mov mov jae inc dec lds bound xchg in subb inc cmp dec into add punpcklqdq push mov nop daa outsl out sbbl adc out pop jnp inc stos mov ss faddl in xchg add aas push (bad) sbbl mov imul pop mov dec mov add mov test inc mov rol mov jae and xchg or inc lock cld test pop mov enter mov andl sbb loop lock cmp ljmp dec insl imul fwait ret jecxz mov mov push or pushf fstpl jnp sub addl out inc jnp nop xor push push sahf dec sub add shrb (bad) add aam std nop cmp mov add cmpsl (bad) mov push loopne subb lods lods inc mov push add pushf cmp xor cmp mov fdivl cmpsl imul mov aas push sbbl clc adc ffree pop push movsb dec push subb pop jge rorb add jo push jl mov and pop call negl gs jg add bound inc inc fstl inc insb pop inc jle sbb add cmp movsb int3 clc and fstpl data16 fisubr sub popf imul movsb sbb les cmpsl dec xchg shlb inc lret insl pop stc mov inc add ret mov mov push je jne ljmp pop in add mov and xchg (bad) pop addr16 adc mov push stos std cwtl add jb mov mov test call or repnz add cmp xor cmp xchg iret addr16 sbbl cmc popf nop sbb (bad) faddl testb into hlt or sub rcrb cmc cwtl and fwait cmpsb or or xchg std roll mov mov mov cmp test (bad) mov ljmp push stos sbb (bad) add lcall sub flds mov add mov leave xchg cmp sbb inc mov mov adc inc popf sbb push hlt incl loop loop adc push cmp repnz jge xor adc roll push call cmpsl adc adc jne lcall add push or pop jmp out and xor outsl fnsave jbe fstpl mov rcrb ret (bad) popa add clc xchg into jno in std nop js sar jno or rcl movsb pop mov xchg mov sub inc xchg mov push mov stos nop fiaddl out or pop cmp dec mov stc xor hlt mov mov (bad) xchg dec or and or ror push dec push mov xchg test ret mov jge push (bad) mov stos add add aam adc cmp or loop (bad) cmp mov ffree int (bad) shr sbbb data16 fisttpl lock (bad) mov loop das bound ljmp xor xor mov inc lods inc outsl push test jecxz jne mov enter pop imul fidivl adc jo jle daa rcrb xor cmp jbe shlb xchg fucom add pop rcl xor int3 cmp loopne lods cmp xorb (bad) jmp sub sbb mov movsb inc mov out sbb jo into jg push pop xor mov mov inc xchg push addr16 ds push inc pop add idivb lds popf mov sub and xor sti jl and aaa cli leave add mov or stc mov adc mov jae cmp lods sub outsb jbe inc or xor or sbb insb (bad) insb xchg sbb int3 sbb sub fwait jg pusha xchg sbb iret and jmp sbb mov dec ds repnz xorb std dec and fnstsw mov rcr push test repnz out cmp sbb sbb les add push xchg cmp sti (bad) out xor inc mov in add pop inc sbb add push and bound or xor je xor xlat sub xchg mov jns jp cltd aad std (bad) jne dec nop (bad) in nop jmp push jp pop and mov lea xchg jbe xlat incl push dec sbb add fistpll xchg movsl mov or lea lea mov int3 mulb out or mov xchg or pop enter mov dec xchg push xor pushf cmpsl cwtl or add adc fs shlb fiaddl mov cmpsb sub mov test pop or addl jb je cmpsl or lahf (bad) pop pop out mov aas js pop jb imul adc (bad) ja clc adc cltd jno aad adc push sahf add and into sbb jl mov enter rorb ret inc cmp sub fldl jmp cmp jp mov inc inc out adcl jmp shl insb es out sub mov jo lea nop and adc rcrl xor lret (bad) or jmp xlat cmp pop jo in sbb inc jnp inc cmpsb mov cmp mov cmp cmc es ja push cmp mov sti and cmp ja xchg or ret sbb and ficomp add mov inc mov push (bad) mov push fs outsl (bad) les imul mull ret sti mov xchg mov js ljmp mov add xor stos add outsb orl dec or cmpl push xor imull loope incl jae mov dec stc xchg adc or mov popf xchg sub mov cmp stos ss inc rcl sarl jmp push push pusha xor xchg or mov sub faddl jmp movsl fimul in and sbb sub or insl inc add icebp add adcb loopne mov or dec int clc in pop imul sbb mov loop xor inc sbb sahf add sbb (bad) into sub push jae stc adc shll or ficom inc mov pop sbb xor mov lods and negl add je scas insl sarb ss push stos pop sbb or mov push fiaddl adc push fisttpl ja andl adc (bad) push mov stos lea sbb push mov add lods sbb mov xchg out rolb xor mov pop add cmp or push pushaw inc fnop and fsubrs dec jb push push in xchg in cmp sub sbb std andb rcrl jb out push jbe xchg or outsl xchg aam rcl loope in inc idiv push cmp movsb outsl adc (bad) fistl (bad) push mov jecxz and sbb xor imul mov dec and test pop or cmp mov clc mov inc aam cmova sub xor lds aam lock add cld dec sbb and jge push push imul pop (bad) xchg fiadd nop xor ficom add call je loop incl (bad) cmc loop sbb xor jne add adc adc inc add push pop push (bad) movsl (bad) jl or add adc xor lds push mov dec xor push jno adc mov or pop fs js (bad) mov lcall (bad) fistl cmp inc cli add (bad) enter (bad) xchg or (bad) out xor movsl dec loop test and add pop nop jne mov insb mov orb or dec xor (bad) aam inc jae int3 mov daa push sbb cmp stc and dec and int push andl aaa adc int sbb and out push xlat outsl mov xchg add test or xchg cld xor or (bad) popa or lds push add mov daa jmp add pop (bad) lret mov frstor jo ljmp or or mov out mov inc pop ret rclb sub loope cmp sarb gs xor jo push cs adc out icebp or shrb out outsb rolb mov add add std nop jae adc std call (bad) lock mov xor insl cmp add push mov stc pop mov and shrb push es outsb pop mov push add fadds adc jg std nop cmp repnz mov xchg sbb cmpsb (bad) xor pushf enter and scas outsl mov iret fiadd push sbb pop dec inc loopne (bad) jo fldcw lock add loope xlat mov cmpsb shrb imul inc hlt push loopne dec pop (bad) or mov sbb int adc pop aas pop (bad) into adc (bad) or xor andl adc mov je add mov (bad) xor mov mov and enter add pop mov jp xchg push les cmpsl dec mov fwait mov sarb add lcall mov aaa lds scas push flds (bad) cs jle mov jns out xor jnp hlt push pop arpl enter dec pop fwait pop pmuludq jmp pop outsl pop fisubr and pop xlat imul add jae adc add pop sbb out out sub mov inc fnsave lods jmp (bad) add ret push movsb lock and pop adc inc lcall jne out loop outsb (bad) add inc loopne les xor add jecxz push cmc mov faddl mov sbb mov adc iret jb mov roll mov jecxz popa xor inc mov out xor inc jne in ds sub ret daa inc push mov mov into xor add pop push orb dec ficompl mov push movsb dec push test lret sbb mov ja imul dec int adc loopne repz movsl pop xor xor cmpl sarl (bad) aam dec inc sarl mov xchg in out lods push and sbb jbe or insl add int3 ret add mov movsb dec std push add cmp mov push push mov sarb and mov (bad) inc in rcrl out pop jns and mov xorl adc mov ficoml add lcall adc sub ss cmp inc push sbb cli mov std rolb fdivrl cmp mov or xor (bad) (bad) les jb or addr16 daa sbbl aam int3 (bad) mov mov daa push jl inc lods sbb push mov push jo (bad) sub xor dec out or add dec xchg push addr16 adc mov xor xchg enter xor jecxz adc (bad) lds rorb cmp jne je cwtl rcl push lahf mov jb pushf leave jns jp pop cmp xor in sub rorl adc scas ret sub add lea testl pop rclb xbegin punpcklbw pop cltd mov mov shl shrl mov add sbb xor mov lock arpl xlat adc (bad) xchg rorl and mov inc gs loopne jns inc jne ds aas mov sub push lods and (bad) adc cmp shlb jle sub push xor pop pop lock fimull repz mov pop jl push lahf dec or pop or mov dec jo pop adc inc cmovbe mov push js int xor cmp cli or mov (bad) dec sbb sti and (bad) pop sub nop add jo or xchg pop addr16 fdivrl stos stos push pop adc add sub xor scas pop mov jno (bad) (bad) mov icebp xchg incl leave push mov inc aad dec mov mov add clc in stos adc pop std call stos jnp mov insb (bad) sub dec (bad) and mov mov rolb loopne data16 dec dec mov (bad) pusha sbb jnp lret daa or push jmp add adcl and push jne cmp cmp out xchg negl subb jae outsb nop push add inc call push mov ljmp scas adc movb ret mov sbb adc mov jnp sti xchg adc xor fs mov popf mov (bad) mov pushf cmp pop popf dec loope cmp dec push out inc cmc add adc add mov mov and adc inc (bad) mov jo lods sbb jnp pop adc je and jp or stos jne outsb jo loop cmp mov mov sbb cmpsl movb loope or ds cmc mov pop and add jbe call dec cltd inc pop lahf pslld lods push iret mov nop xor mov pusha cs add push jmp movsb mov lods mov ret les jp dec imul and aaa test jbe pop push addr16 push cmpl in notb and imul hlt outsb jo into lret mov inc insl inc (bad) or xor aas xchg movsb jmp inc dec ret insl popa xchg push fisubl sarb or addl sbb rol orb repz cmp inc lea cmp inc sbb inc and sbb lcall xchg push inc jmp cmp leave outsl add sub lods lcall icebp js stc and sbb (bad) out xor mov jp cmp xchg jnp shlb mov ljmp push fwait pusha adc mov inc icebp pop push mov cmc loop inc je xor inc imul popa and dec xchg aam or pusha cmp jnp pusha stc mov mov xor pop push mov test test and (bad) mov xchg add movsb or nop imul push insb daa xchg add jnp inc scas and adc fs sahf mov xor inc mov jnp mov out inc int3 enter inc popf rorb adcl cmp cltd mov mov fnsetpm(287 sbbb xor js adc sti ja dec cmp mov sbb push outsl bound (bad) xor inc mov jnp adc push mov mov inc add mov add fisttp add int3 jb int flds or pop lahf jp rol xor fnsetpm(287 cmpl push mov aas push out subb std sub sbbl xorl loope jl add repz jns popa clc xchg into push dec dec loop aam (bad) fisttpll adc adc test stos or loopne push gs adc mov jnp sub loop mov mov in xchg add insl lock push imul ret inc mov (bad) je push sub dec test dec jg outsl jl sub lock rcrb and (bad) dec inc cmc cmc je insl inc les out in fmull push cmp stos fwait cmc jle sbb xor ret popa jno and add and xor push mull inc add clc outsb pop xor cmpl mov cltd lock mov push adc sub sbb popa and mov add sarb push aad out inc int3 mov and cmpsl and jg andl jmp ret stc xchg stc mov mov sbb dec je mov shll ljmp (bad) lods xorb xor mov lahf dec (bad) push fdivr adc or setb pushf in incl jbe xchg dec add push mov jg add cld or fisttpll xor mov data16 xchg out inc cmp xchg lea and out jno in sub imul adc subl xchg stos or insb (bad) sbb mov add cmc xor jae dec add (bad) mov sub int3 and fmull and lock adc in out inc aad sbb pop lret xor mov dec icebp pop xor dec pop dec jge and mov movsb incb and jo rcl adc arpl (bad) jle adc mov imul fcomip aas and scas mov adc in and dec adc fildl outsb xchg dec int sbb and mov or jbe je jnp lods dec icebp lds movsb pop jno,pn aad sbb je out addr16 adc js test pop mov xchg jne ja mov sbb mov dec (bad) in frstor sbb jmp out push mov and rcrb outsl movsb and daa add pop inc int3 jge and aad arpl sbb adc push lock xor jge and mov sbb pop jns rolb int3 push adc outsl mov ds popa inc hlt (bad) adc std in inc repz incl jmp pop mov fcmovne clc dec adc and add inc cltd jge mov push xlat xor jmp (bad) mov sbb ret aad addl enter sti fistpll scas outsb loopne aaa fadds subb fcompl adc mov xchg xor testl imul or mov push arpl test data16 or out imul dec sub int3 imul jo sbb mov sub movsb fcomip lret movsb (bad) push fmuls in cmp and xlat adc adc push loop xchg icebp dec cmp add xor inc xor adc xchg or les cmp jle add daa adc sbb mov or cmpsl add sbb test mul data16 in xor out stc ret out and jge into enter subl rcr pop bnd add mov inc out jo push popf and and cld pop xor lcall ljmp (bad) add jl cmp push xchg push outsb mov sti lea pop xor mov xchg (bad) out sub roll (bad) push jo sbb push mov and or or dec dec adc mov ret (bad) jo dec jns cmp adc cmp add aaa fldenv loop insl or imul adc insb cmp cmpsl jg inc sub popf pop (bad) jo leave add lods jns pop push mov dec in enter fwait dec xchg push outsl mov or push inc out push je arpl mov xchg or pop sti cmp jno adc jbe (bad) (bad) incl and in loopne mov xchg push into ret je movsb xor mov sbb sub fstl cmc enter adc outsl jbe xor mov dec xor jbe sub (bad) daa add or popf in rcll les cltd or or jne pop pop enter bound xchg (bad) popf sbb xchg (bad) jg jne int3 jns pop inc pop in jb ret ds xor movsb pop mov loop mov add mov sti mulb xchg cmp mov inc cmpsb ds ds lcall xor jb test mov out (bad) push xchg or int3 add pop ss int out mov les nop mov aas inc ret mov sbb push dec sbb mov popf mov mov ja hlt cwtl sub dec popa xor stc and lock loopne out add add (bad) les addr16 mov push out mov fwait fs sbb cltd mov dec sbb push cmp cmpsb cmpsb push test mov jg adc inc es in push sub repnz insl test adc dec ja jae mov and mov jle ss inc mov jge aam arpl test and int mov push mov adc cmp sub jb jmp cmpsl test cmp mov push (bad) mov out inc es bound mov or sub cmp (bad) mov mov sbb mov adcl or test hlt aad arpl test dec jge inc push (bad) mov out (bad) jnp ret and fcomip aas and rolb pop mov rcr (bad) mov loopne outsl cmc pusha inc repnz inc add popf mov lea xchg fwait pop js enter sub sbb cmp inc in scas mov ret fnstenv (bad) stos mov out xor inc addr16 adc loope cli sti roll pop fiaddl cmp cmp out mov or out in or cmp jne outsl js lods and movsb aaa xor jmp outsb xor je addl scas ja adc repnz cmp jmp add test push push cwtl jne add test bound pop out and cli enter fwait leave fmuls sub pop push imul dec push add mov and lcall add push ret jo adc add je mov imul jo mov negl xorl xor dec stos push push xor fiaddl mov rol mov lahf add (bad) mull daa shlb out inc int es cmp jmp ret or sub xor mov ds add enter xchg (bad) and gs mull fwait sahf fildll push repz inc hlt sbb fistp add (bad) (bad) ljmp fnop subb add iret outsb loop pop aas ret inc call aaa mov or and repz push (bad) dec aaa stos ja inc imul aas xor mov nop cmp xor in inc or loop pop js add (bad) push push sbb aas xchg mov cmpsl data16 jo pushf or dec mov mov and popa les in pop das subb pop stos cmc mov bound jnp arpl into hlt sbb lods sbbl sbb jae jbe xchg push out test xchg push sbb call int (bad) out mov stos out and aad sbb (bad) out adc ret cli insb sbbb insb mov leave add add pop ja and fisttpl cmp loope addl pusha clc roll sbb mov or cli mov mov les jp or nop outsb popf cltd in inc ss xchg in xchg in or mov xchg fbld mov xor dec je xor or xchg aas outsb (bad) xor add daa xchg add or (bad) outsb and sub cltd jae add dec jmp rolb popf mov test or cmpsl adc mov ljmp jne ljmp out test aaa mov pop push sbb adc fwait lea or gs pop mov add sub mov xchg cmc (bad) (bad) insl inc les mov add outsb push (bad) mov hlt xor mov (bad) add mov addb or lcall or outsb dec (bad) hlt sbb mov and dec cmp xchg add add mov sbb popa aaa (bad) iret testl ljmp push jp dec cmp sahf pop pop enter and add rcll inc cmpsl (bad) jns inc mov inc cmp call jno cmpl mov push loope mull xchg addr16 pop fldl imul adc pushf jp out xchg push rorb (bad) (bad) mov cmp add fadds inc es cmp or sub sbb push jns sbb add sub and dec mov stos jmp mov adc add les push cmp data16 dec mov add addr16 pop jo adc push sub mov (bad) mov lds lahf mov ja lcall add or test xchg insb jae sub shr inc decb mov mov adc sub add addr16 test (bad) hlt sbb scas adc push cmp mov mov jmp xchg mov sub loope inc inc (bad) push push push xor sbb pushf sbb adc rolb incl out (bad) jns les add push sub insl inc dec mov enter sti xor ljmp lcall dec pop cli mov or lret add xchg push or int3 jecxz jmp add into jle repz add sub xchg xor subl sub xchg pop mov mov iret lods call arpl repz lahf xchg fwait xor add add mov lret lcall cmp add jmp inc push xchg data16 mov push int3 or push sahf shrb ja daa roll in mov mov (bad) jmp pop aad test or inc jp lcall addr16 adc cmp mov jmp iret xchg rolb lods jge inc sbb add xor ds nop sub sbbb push ret rol sbb shr mov jmp fidivr nop cmp ja lcall repnz inc add popa xchg sbb fist mov or jmp jle popa loope outsb sbb out xorl adc popf and (bad) adc mov jp insb cs lahf in cmpl ret add mov out gs incl jp lret test dec fsubrs sbb cltd out les mov faddl in in inc std sbb inc ret out inc cli dec call sbb lret jae jle sti and mov jl je jns lods push or jecxz imul je ja and xchg pop mov scas or push testb lea incl in leave daa mov faddl xor fucomi mov test xchg mov aaa mov add adc pop mov sbb lods sbb sbb jmp pop xor out inc fstpl pop mov or mov mov popf call vminsd ficompl rcrl lahf inc adc mull jg add adc fnop and mov xor sbbb out loop dec in outsl (bad) (bad) ret addb sbb (bad) jne mov imul movsb out je insl sub mov add movsl xchg mov xor xchg cmp mov add int xchg mov mov push imul push pop pushf outsb jbe and idivl fnop add sbb int call (bad) test in mov mov enter adc outsl sub or pop jns iret std fbld jmp addb sbb sub add sahf in scas stc and loope shrl imul jp movsb add loopne cmp mov sbb in inc xor fwait push (bad) in out adc pop cmp push cmp xor push daa daa pop push aas loope xchg (bad) insb jae add lret dec mov enter mull fidivrl xor in xchg mov std es mov push xor add xorl aam rorb add and sbb bound insl loope or sar add pop ret and adc adc ja imul inc movb add cmc inc mov mov aas cmpsb push pop in inc aam mov lahf aas flds xor jbe mov xlat imul and lods push cmc movsl movsb mov (bad) jae insb xchg call loop fnstcw enter or stc inc (bad) add jnp mov mov push cmpsb jno pop jbe mov (bad) xchg cld pop inc in loop roll addl test sbb ljmp lret test shl in jae popa add add sarl in subb xchg psrlw pop outsl imul in adc mov sbb fnstsw and inc arpl arpl jne push out sbb mov push mov sub cwtl cmp (bad) add dec push int mov add add pop incl fldl ljmp mov mov ljmp repnz add int pop lret jmp sahf test inc jnp cmp (bad) out inc cli addb jno xchg sub into lret jmp push add xor mov aaa sahf aam push in movsb in dec iret leave add inc sbb mov and fldl aam mov fcmovne add xchg cltd jae jnp hlt inc inc fmull pop sysenter add pop (bad) std rolb int3 add pop inc movsb (bad) insb in sbb sbb outsl xchg adc popa shrl lods rolb inc push test inc mov push in or clc cld rorb nop jb (bad) push xor xchg mov mov ret jnp iret xor and outsl in test add xor roll negb fldl popa rorb jno outsl sub and (bad) mov inc lret mov and push mov test mov rclb cmp xor cmpsl sub and add or mov and jae xlat aad aaa xchg (bad) (bad) test ret test sub xor and mov cmp xchg test (bad) (bad) add adc jno out fldl add (bad) aas dec or movsb fsubrs popf pop test push lahf lret cmc call mov or cli cwtl lcall pop cli (bad) or ret or (bad) xor push xchg mov push fild and xor sbb out outsb fadds xchg xchg inc inc xchg (bad) (bad) insl inc les fnsave test inc mov mov cmpsl mov sbbb jo jns adc sbb xchg loopne fcompl addl mov push add cmp jg jg add enter dec or pop push mov xlat ljmp push loopne jb or pushf nop inc fimull mov outsb ss lret repz push ss pop ljmp clc mov fneni(8087 subb or xchg mov mov fwait jnp outsb lahf mov mov test sub mov (bad) or popa notl push and inc scas cmp push mov popf fs add push or pusha cmp mov and dec jno mov cmpsl push jns sbb jl xchg or cmp fdivp jnp add cmc inc mov (bad) mov fiaddl adc dec rclb dec sbb jns xchg dec cmp push lock addb dec adc jecxz (bad) mov out dec shrl pop jp mov add xchg xor roll cmp xchg fidivrl mov mov or sub xor mov jns and out out mov cmp xor mov xor xchg and aaa enter or cmp pop mov and negl aas xchg or and shlb mov movsl movsb pop dec cmp inc int sub mov push push cmp fisttpl imul scas ss and adc mov sub and and incl test jg subl sbb in ljmp shr mov sti (bad) out inc mov (bad) xchg dec sti push push push lret pop jns scas hlt sbb add dec repnz add and cmp xchg or aam pop aas xchg add add js sbb ss int3 adc lods in xchg mov hlt nop out adc inc or ficomp and push mov cltd inc pop scas cmp and sbbb pop mov add ret cs aaa inc icebp or cmp ljmp sbbl xchg int push add rolb sub pop aam sti cmp push cmp ret outsb in push mov rorb push adc data16 adc clc mov repnz aam or lea dec fdivr add hlt lods push sub pop push xchg add fbld or es xchg (bad) stc jo add jmp mov lock ljmp cmp cmp dec add fiadd and cmpsl mov cmpsb pop jo ss mull cmpsl dec or mov add sbb lds aam icebp cmp ja push es jg adc mov add orl mov xchg add xchg dec sub jbe mov or ret arpl sbb xchg inc lods xor mov in inc out in push mov cmp mov jp std cltd repz es jns int3 jmp hlt mov mov xchg (bad) jge mov cmpsb sub test imul gs sbb iret roll push movsb jae dec xlat cmp xlat add cmc mov sbb repz ret adc repnz add ljmp into sub sbb data16 mov mov inc dec jo jg or mov adc push out mov push push mov repz aas clc and std and mov cmp daa roll push mov xor cld iret leave add sarb mulb and insl inc dec mov imul fidivrl ret xchg incl test mov cs (bad) or mov addb shlb (bad) sub dec jns fadds xorl cmp jmp sub pushf rclb cmp iret arpl std ret pushf ljmp gs push sub add sub imul pop pop push (bad) sti pushf repnz jp jo (bad) jbe push mov adc cmp insb xchg repnz daa fdivs mov rol sbb pop pop loope xchg stos ds cli xlat cmpl ja rolb int3 inc (bad) cmc inc lea lock sbb arpl inc (bad) xor jg inc mov in rorb repz inc adc cmpsl pushf jp mov mov add cld push les push xor ret data16 inc dec pop cmp sar hlt hlt mov leave (bad) mov and fcomp stos push (bad) cmc inc sbb ret dec hlt inc push mov mov adc jecxz stos adc mov xlat insb cmpb xor lahf mov sub popf test inc mov iret (bad) adc push andl jecxz lds mov mov mov out test movsl add pop xchg mull addr16 daa cmpsl in (bad) inc rorl fiaddl pop mov mov xchg mov pop add mov mov lds sub sub fildl sbb insb xorb in and (bad) sahf js jae cmp jp and or das imul leave add (bad) enter mov out (bad) lcall jno js je inc in adc je cwtl and xchg and nop xor cmc inc out or mov int3 fcomp xchg mov fistp push cmc xorb shrb fdivs rcl or pop (bad) xor rclb lods xchg xorl sub fnsave mov mov leave out iret ficomp stc mov pushf lcall mov (bad) out xorl and hlt out (bad) fdivrp inc pop cltd in (bad) sti mov dec xchg rsqrtps imul push imul cmp lods ret dec stos or iret pop mov mov repz mov and adc les insb mov xchg add and push add mov jbe aam push out (bad) (bad) add dec outsb (bad) js das fiadd add inc mov mov jo scas adc outsb xor fbstp sbb mov cs add gs sub and jnp imulb push pop inc inc xchg rorb out inc out push fsubr xchg mov rclb push mov jns mov pop pop mov push push js pop shr sarb add mov (bad) (bad) sub pop stc sub fiadd add sbb and push repnz nop and cmp fbld mov (bad) orl scas imul repnz xor in cmp push js in rolb movsb (bad) mov fisttpl adc jno mov cmp jb jmp add or dec and jno add imul aaa lock (bad) mov and cmp sub fiaddl dec dec outsb adc sub adc mov loop out cli in inc add push dec sub sbb fbstp repz mov (bad) je call test ja int sub cwtl mov out inc dec add into (bad) pop mov and popf popa mov push test lock jno jecxz pop mov (bad) mov xchg xor cmp cmc sbb xor adcl ret lea (bad) or scas fsubp push inc mov repnz push test jle push add int and xor inc pop sbb mov lods test xlat inc mov mov (bad) (bad) and and add clc or ror divl scas aam loop xor int3 mov and inc jmp fistpll xor stos and fbstp rcll add mov scas repnz inc mov mov call xor (bad) cwtl mov pop lock add push nop popf repz mov dec repnz popl xchg mov fisubl (bad) hlt adc cmp dec mov push (bad) jp add insl stos or repnz mov ja push adc jg inc xor into cmp cmc (bad) (bad) sbb pop xchg xchg nop sub push (bad) sti lcall and fld add aad or jl and enter inc push xor into adc (bad) mov int3 ja lret rolb cli dec mov flds stos into or xor imul jnp es mov push mov push adc addr16 sbb cmp out hlt add (bad) mov add stos incl cmpsl sbb dec adc popa add cli fiaddl or lahf and sbb jbe out sub cwtl xchg mov (bad) pop je adc add in ss (bad) push add mov dec test or jge adc fs jecxz adc mov mov inc icebp outsl xchg inc cmp dec stos dec xchg add inc sub cmp add sbb cmpsb stos jo sbb add fdivrs cli leave add testl adc aam imul ror test sbbb cmpsl cmp out lcall jle or (bad) mov xor nop sub push inc sbbl mov adc lahf add addr16 sbb cs and jg cmp jg add add aad in call ss add ljmp add loop mov and nop aas inc ds (bad) jb ror mov hlt sbb divl and and daa adc sub pop cmp mov jno mul (bad) out and push and adc inc mov nop and mov jp mov scas add jo dec jae mov cmp iret xchg (bad) cmp jl cs sub jnp adc mov push dec popa mov xor sbb jo add and mov and rorl jno add jnp sbb mov aas aas push or shrb sub nop insl into push push inc pop jae fwait pop outsl in subl scas and faddl cwtl outsl mov inc fisubr aas imul dec mov je (bad) fwait xchg mov xorb (bad) jmp rcrb (bad) negl xor mov aas (bad) leave icebp inc adc add (bad) bound jo scas int sbb add enter xor pop push push jne sbb mov out pop jbe add xchg add push add addr16 call mov or cmp inc push aad push adc push push aaa jle push ret ret mov imul cmp or outsl les push cs dec sbb iret mov jo sub adc imul rcr or mov add mov (bad) or jo into fdivs xchg hlt adc or jge pop push ja out (bad) push int int push lahf xor add sub pop jne and mov mov enter scas clc addr16 pushf jg cmp notl sti sub add adc repnz lods jnp adc testb outsl xchg add fdivs sbb dec pop jo xchg jo or push cmp adc adc push sbb and (bad) xchg xchg lret dec mov jne xor test push jg mov daa cmp cmp cmp dec push into insl sbb das imul nop pop pop cmp roll lcall pop sarb in incl mov mov lods push cltd pop sub pop mov dec sub xor mov xor sbb repz fstpl mov cwtl daa mov leave add out mov dec test mov cld lret rolb lahf push test pop jecxz scas outsb es mov or inc jns add pop pop adc shrb push xor cltd mov mov or lea das push dec push hlt jne leave mov sahf lret cli mov int jne jnp inc stos test fisttpl adc in test ja and pop call push js lret (bad) or cmp push ret or xchg rcrb pop outsb fprem1 inc lea (bad) test stc and mov pop ficoml jp fwait (bad) xor sbb sub add ss push out push scas cmp (bad) aam repz aas lea lahf xor dec dec movsl fnstenv adc sbb xor adc and stos dec sub jno andl dec push ds int shll cwtl in sbbb (bad) out (bad) lret inc lahf push push les mov clc jp arpl jge mov aam data16 jmp xor js xor mov add nop inc clc mov xchg in mov add ss inc out int xchg adc lock (bad) ss pop push mov mov rorb int pushf or fbstp rcr cwtl cli or test sub jbe lds mov mov aam mov mov roll mov xor adc xchg sarb jnp roll mov push loop or cmc sub divb xorl (bad) jge imul jge mov cmp rcll lret xor push (bad) sub push in popl mov xchg and pop xchg (bad) stos push jmp dec jmp pop mov add add (bad) arpl inc lods xor cmpsb jbe cmp inc cs nop jae fcoml inc int in testl les cs and xor push jae rorl inc hlt gs int push fistl enter jecxz ds sub adc sub mov es inc inc cmc (bad) jae cmc inc lcall popf loopne rcrb jle mov aad stos xchg push xor (bad) ja les jns push into push push inc mov pusha in std nop and sahf dec mov jbe std test dec jo cmp and mov ds jo and ret or sub pop out mov movsl push inc sbb inc inc xchg fcompl (bad) mov inc or or inc arpl rcrb negl je jecxz mov mov push jecxz mov fsubs testl adcl aas jne out cmc (bad) sbb push jg shlb cmc arpl inc test nop sbb (bad) aaa sbb inc pop (bad) bound mulb dec and std popf xchg push hlt push mov mov pop imul push jmp aaa loop cmp mov xor into push movsl mov cli mov fs imul inc fnstcw rcl sub out aad mov mov xor scas fistpll fs cmp lcall gs mov cmp mov into push add lahf and movsl lahf loope incl fsubs jle push popf insb cmp push incl mov mov mov sbb ror dec repnz push add nop cmp push mov xor ret ds in fdivrl xchg inc or xchg ja pop mov (bad) cld sti pushf (bad) ja or xchg add cmp or sub add jnp and push jle add jb adc aam dec js ja subb push imul adc aam cmpsb inc inc inc int3 dec lahf and rcrb fldcw jg jp pop dec mov xor push adc lret je xor dec cmp mov inc adc push into sbb mov xchg push mov push mov cmp wrmsr (bad) sbb mov inc adc icebp jl sub mov add enter mov ret addl push aam imul and insb adc or dec int3 jbe inc int xor xor cld pop sbb push adc movsb pop popl sbb (bad) cli sub mov and popf test pop leave mov xor push pop test call xor outsb cmp ret mov inc mov or add push stos add nop pop push jle repnz lods and pushf nop xor jbe or imul sbb call and xchg inc (bad) mov push sbb cmp or dec mov xchg (bad) ja push mov (bad) aam in push mov push incl cmpsb out inc pop inc mov outsl insl cltd mov lcall mov out or mov mull add or aam loope push lock add (bad) ljmp mov enter xlat pop lds push imul out roll xchg cmp and test ret out mov mov aaa out push outsl push mov sub mov rcr or adc test (bad) lret in (bad) dec arpl jnp lcall das dec adc mov jle xlat popa cwtl xchg fdiv inc xchg unpcklps cld cmpsl mov sbb mov pushf or js ret (bad) stos mov add dec into call (bad) add fnsetpm(287 and mov cmp inc stc adc pop jp cmp cmc sbb addr16 mov pop jecxz mov inc rcrb subl es cmp mov (bad) std add notl sbb sbb push sbb rolb shlb int3 push pop test sar or lods dec mov jo mov aaa inc ret lea adc leave xchg adc pop lret inc mov outsb loop add xchg adc sti rolb push pop or (bad) jbe icebp arpl sub or sub loope sub lock cmpsb in mov xchg xor xor idivb shrl mov cmp adc flds data16 inc fiaddl lret jp cmp stc inc jne adc pop cwtl inc push fwait dec std or je dec cld sub sub add subb outsb jns outsl pop inc push scas (bad) js ja push jle mov (bad) mov push test adc mull adc mov xchg inc jnp ds (bad) ss loope jle pop movsl push sbb add sub push lock mov pop fucomp ds add data16 hlt dec in inc mov lret negb mov pushf jae js cmc mov mov xor rcr (bad) int mov (bad) mov pop daa outsb into aam jle loope xchg adc mov push add jb subb cwtl jb xchg loop jns jno adc or pusha inc adc jle inc adc fsubs roll push push cmpsb data16 push jmp cltd mov les loop sbb sbb fldl std pushf add rol xchg mov jle mov fidiv jl mov dec movsb mull (bad) jae jg or in int into daa movlps nop shl fbstp push sti inc mov pop xor (bad) and in es loope ja icebp inc lret data16 (bad) fs loop and mov sarb pusha (bad) orl xor cmp arpl testb xchg js call inc or and stc adc adc jl jns (bad) jb add rcrl pop lret add cmp xor data16 lods push pop ficoml push inc movsb push jo sbb cmp shrb das pop inc aad insl push adc pop inc fdivrp add inc mov js xchg mov mov or cmp mov inc int3 inc mov xchg pop add push mov add (bad) jo ss inc dec or dec jo pop shrb aam dec inc inc sub sbb outsl inc dec xor arpl pop (bad) in ljmp add push cmp lea enter push (bad) hlt push mov testl insb xlat loop cmpsb dec mul subl jge int3 into dec jg sbb add or aaa jnp fldl arpl subb jae mov dec xor lret adc or or imul mov xor leave sbb add mov imul xchg adc push xorps inc int3 ja,pt in outsl icebp punpckhwd loope sbb outsl mov dec in nop pop dec scas in aaa jecxz add ret sbb xchg inc mov cs mov ret sub dec add cmp ss sbb lea push jecxz jo sub in xorl (bad) xchg cmp xor and push enter sysexit popf pop sub hlt call sbb xor sbb push push ja ljmp (bad) push aas adc dec mov ds (bad) add cli xchg or cmp leave add in inc clc jnp fsts sbb xor add lahf inc mov enter jae in or popf loope imul or jle xchg jecxz sub int icebp outsl clc repz xor loope popa daa xchg inc mov rorl sbb push cmpsl xchg ja sbbl lea push xchg cmpsl sbbl daa push push push les add insl in aaa in inc (bad) xor lea and imul es repnz mov dec and cmp dec inc inc (bad) or mov sbb orb pop repnz sbb cli mov inc das ljmp add jecxz dec adc js adc rcrb cwtl fs mov xor (bad) and sbb mov dec pop xchg add sti test mov mov fsubrs ret mov push outsl pop jp push lahf push push mov ds (bad) test dec sbb dec mov push ljmp or inc mov adc xor lds xlat ret adcl popf addl pop mov xadd mov int3 scas (bad) mov je (bad) cs call cmp repnz fistpll jp inc mov hlt addr16 pop lcall xchg pop push pop cli (bad) add popa loope sub rol sti dec fstpt rorl mov sub inc pop mov je jae jno adc cltd add imul pushf movl adc loop in push dec mov fs mov shrb dec inc leave inc jmp inc insl int3 adcl push pop movsb clc mov adc add aam jecxz add lock jp mov nopl pop xchg fmuls push sub dec add xlat into cmp inc (bad) adc addl xchg add test scas dec out in cmp jae sbb push jae mov push mov call and add adc mov xor jnp ret fcmovu mov push fsub decb jnp pop or fstpt fs loopne dec push jne ffreep add pop cs loopne xchg insb cli fiaddl in sbb or fdivrl add sbb test push push add ja addl cmp aas mov cmp popf mov mov push nop push lock adc mov cwtl (bad) in sbb bound adc mov (bad) subl ffreep aad mov ljmp lret jp test and out add call mov mov in jb jns scas cmpsl repnz mov xchg sbb int sub and rorl ss outsl out pop adc imul (bad) cmp rolb jnp aaa mov mov fs test cmpl and pop xor and adc dec dec inc inc xchg in sub xchg shll aaa pop fwait jns and icebp inc xchg or popa sbb ffree add fwait out subl add in dec (bad) repnz add scas push mov call cwtl cmp jp sahf mov push cltd mov sbb ret jbe cmp mov les call jbe mov push popa repz (bad) ficomp (bad) (bad) push jge andl xor bound fadds pusha adc mov and int mov jle jle mov addb ret ljmp hlt jo mov jnp fistl mov cmpsl lods and pop mov and add mov movsb daa mov lock roll mov sub je je loop push roll add js add (bad) lcall add pop fwait inc add add mov mov pop mov or xchg mov out je nop cmp jbe push mov add enter pop sbb in es punpckldq repz cmp cltd in inc xor in outsb jno mov inc jno,pn bound fbld mov icebp xchg inc add inc into cmp mov xorb jae call pushf pop jmp add sbb dec or inc lods outsb nop in enterw jne sub pusha jae insl in inc out xchg pop int call insl xor nop adc mov add (bad) call sbbb shrb fadds mov fld xchg inc inc xchg out loopne std fs sbb jp inc mov and lods rcr or cwtl cwtl rcrl ja int out add jp js fisttpll add dec push (bad) mov inc xchg sarl pop dec mov push push jmp andl add mov (bad) xor add add dec mov adc nop arpl es loope loope add xor push jns xor ja or cmp test push sbb pop add sbbl pushf bound add mov mov sub xchg dec mov jle push mov pop mov cmp test lods aaa lahf aam fimull add loopne adc mov sti mov push es mov ret inc out add and pop scas loopne add std jo,pn add mov push push sbb in push std mov mov outsl or gs dec ds insb mov add lahf mov mov arpl clc pop outsb leave leave pop pushf fs jne pushf (bad) bound mov jno xorl mov aam fcomps test mov add push jmp sub lea fildl or cmp and call fiaddl cld popf in pcmpgtb lods daa arpl rolb mov mov xor mov dec test faddl or add cld cmpsb dec xor push cltd adc (bad) flds push popl enter (bad) lcall pop mov push test adc push jne,pn and test mov dec mov cmp mov pop shl add jmp imul jo aas clc test stos (bad) fmul lcall mov (bad) mov push mov out repz inc test or lahf flds test fbstp fiadd add pop xor je pop xor jge mov iret addr16 inc mov sbb push pushf push out or and aam aas loop je (bad) mov adc push imul movsl subl cld inc adc inc cmp or scas mov or loopne sahf or idiv pop mov mov in sub shrw (bad) jb jo mov fs sub es repz icebp push lret (bad) hlt adc push (bad) xor movb inc adc movsl popa cld add mov mov icebp inc cs or (bad) popl in jmp lea movsl sarl sti jae js fldt inc lds jl inc dec les lret cmc jp insl test pop lods mov rdmsr lahf repz cwtl (bad) out lahf push sbb ljmp dec adc nop jo (bad) stos push cli in inc das mov dec sub adc test loopne loopne and out pop (bad) leave cs sbb out jmp gs sub rcrb inc pop imul cmp fdivl mov lock pop ficompl inc xchg mov cmp cmp cs pushf xchg mov fnop adc push xchg pop dec aaa lret jb inc mov mov add jns ret test sub (bad) sbb enter add (bad) shr mov lds jne sub sbb mov add in std test fidivrl or subb repnz mov ret pop add sbb adc pop mov add sub dec dec test subl fbld push es lcall mov lea xchg fisttpl nop add ja pop fisubl testb and leave add pop outsb (bad) popf pop pop inc stc mov ja push jo add sub push das jmp mov fldl xchg pop daa mov pop xchg cmpsb xor jb inc daa mov addr16 push test or ja fisubrl inc jle nop add xchg clc inc jmp lret push sahf loope inc push xchg push sbb nop lds sub mov cmp cmp fcmovnb lock xor sahf fidivrl shl jbe sbb push jae aas je mov inc xchg fiadd sub add idiv enter frstors insb mov adcl xchg push fiaddl mov std mov (bad) rcr pop fnstcw pop inc inc call xchg xor xchg in xchg pop inc ds insl cmpsl shlb sub cmpl fisubl rolb jp jmp out sub ja lds mov lcall xor cli nop xor mov loope aam dec sar sbb addr16 push mov scas mov jl insl andl fmuls add in cmpl out push call and push jmp movsb outsl fiaddl repz sub jp out mov (bad) sub xchg pop std enter cmpsl int3 pop ds lods lea sbbb sub pusha cld sub and int3 lcall cmpsb adc and ret imul insl cli outsb xorl es xor ds out cmpl inc sbb push xor pop fnstsw sbb rol call testl mov stos mov jle mov jb push inc xor or call fisub sub aam fidivrl mov dec (bad) std mov dec in push mov push lods out and add js push adcl jge cmp test jnp aaa xor sbb and add and sub push dec mov sub out std shlb adc mov jmp movsb or jae push xchg jp or vpaddd mov (bad) mov add flds push fadds jne das xor mov es xor and arpl push out inc out adc or insl (bad) mov add orl loop incl xchg or or psraw in inc lcall pop push gs out or pop mov jnp jbe mov pop cld insl push fiadd or (bad) (bad) lcall mov cmpl add and jb adc or push mov inc out sbb cltd lock cmp xchg add push loop add and nop gs nop imul loope add in inc xchg in jecxz push lods aad add jbe scas mov cmc fiaddl repnz cwtl imul enter out je and int sbb sbb arpl sti mov sub dec jo js loope cwtl js addb push orl daa dec ds and xchg pop mov mov xor addr16 add inc or inc (bad) pusha popf int inc xor add subl (bad) jb inc adc pop adcl aad nop dec imul fcoml ret leave add bound push xor push loop add clc cmpsl mov sub add mov loopne rorb mov adc mov mov mov mov insl jno jbe inc or mov es adc test adc xchg (bad) xor fstpt aad adc insl mov ret xchg inc mov inc sbb mov add scas adc push stos loope popf repz cmc inc xor in xor mov pop lds arpl add aas push sub xor inc in push fmuls mov repnz inc fiaddl and jns das lods shrb mov adc cmp fdivr dec mov lcall cmp jne sub pop insb subl sahf in jae (bad) pop lods jg add mov ja or mov imul mov sub mov add cmp incl leave mov insb in xchg add fs icebp out xorb (bad) jl or mov nop pop jecxz pop pextrw add push push call jmp add popa sbb sbb fisttpl sub push in inc sub mov mov jg cmc inc int3 jnp inc mov mov loope mov xchg push push js cmpl lods or dec mov push mov inc test sbb ret testb mov inc cmp push ret mulb or inc pop pop push add mov or incl or xchg pop xor jb je pop pop push jno out arpl mov dec fmul jo adc add aaa popa ss inc mov insb push hlt add sbb js call sbb (bad) inc ljmp adc incl add inc (bad) movsb mov lret test mov inc iret sub incl sub roll push (bad) rorl cmova fnop sub push mov inc ds test fcmovb mov pop fnstenv xchg pusha adcl sbb imul imul xchg sub mov mov push inc xor imul or cmp mov leave jne jns fiaddl adc adc out outsl in cmp popf jo and lods adcb mov cmp testb xchg test mov fldcw dec pop cmp push or cwtl jno pop das sub addl (bad) ss incl gs daa inc pop mov jmp push in fs xlat sbb and test jmp add int adcl xchg mov ja mov inc mov iret sub incl sbb sarb (bad) inc mov mov subl (bad) pop bound roll pop cmp iret fs hlt inc mov or loop in out add inc es loop fstpt xor cmpsl pop inc stos loope pushf add add sub lret or add imul sahf loopne shr sbbb shlb mov xor or (bad) dec push sbb dec in pop in addr16 jae and mov mov jbe idivb add test jp mov arpl (bad) push adc jne scas out dec inc mov fnop popf push and jo push fisttp jne or rolb es sbb cltd icebp xchg push jmp (bad) mov mov inc ja or rorb mov mov call cmp incl flds popf or add add sub testb xchg add add dec adc jbe cmp cmpsb mov pop xchg stos out cltd xchg jmp (bad) jge dec mov pusha xchg or lcall cmp push in sbb add push imul sub outsl inc lahf insl psraw ja (bad) pcmpgtb loopne mov mov inc out lret inc imul test xchg jecxz adc popa sahf or dec xchg jl (bad) push jns push jp in cmp or pop cmp dec popf mov push imul rdpmc inc test fwait imul loop add aaa cmp adc mov movsb mov pop cmp aad cs inc es mov cwtl lock cmp movsb (bad) lcall jbe icebp int3 mov cs xchg test addr16 out push ss mov cld cmp popl ficom mov sarb dec es xor cmpsb stc (bad) add xchg add je cmp test mov inc pushf insb mov xor xor fwait pop or lods or mov xor xor sar and pop jno jne jl roll je mov jp outsb or (bad) jae xchg sbb leave add xorb cmp jge xor insl cmp testl jbe and (bad) rol incl dec jg in dec in dec fwait leave add (bad) jno and adc inc jbe popa cwtl mov shrb dec xchg jg cmovno adc pop mov cmp aam mov bound or andl cmp or rcrb dec (bad) int or je (bad) mov je adc push adc movsl push mov xchg pop sti cmp aam mov adc std enter cmp pop push aam push mov (bad) in (bad) jae pop and insb push lea (bad) push push test ss add inc fcomps xor sbb xor or push addr16 cmp add add sbb jg add fisttpll sub cmpsb sbb faddl add jecxz adc loop cmp cmp or out cld nop push divb push push bound adcl mov xorb out inc fstpl paddusw jp ret or mov adc jb incl add inc jp dec lea (bad) pop cmp cmp add and les push (bad) rolb daa sub shrb int3 inc aas mov fwait add loopne xchg adc cmp push ret movsl add jl rcll jo pop lahf sub es adc je jno in xor xchg jmp in mov sub outsb les iret mov mov insl and inc jbe dec sbb jle cmp xor bound ret rcrl les cmp add jbe (bad) push or push mov or adc andl mov push xorl add and add aas adc cmp push incl xchg add cmp rorb cwtl adc outsl xchg and lea inc jns mov add lods in xchg mov sbb add es xchg push popw cmp outsb flds add mov rcr leave nop jl cmp jmp bndstx popf movsb xchg aas lahf mov int add in sbb insl mov inc and add fsts sub mov test imul xchg cmp incl or mov mov test add pop sbb lret adc mov insl jno jbe inc or movsb lcall cwtl adc or jo push ds adc xchg test aas jmp push sar movsl add jbe in cmpsb and sbb sbb sbb fwait jl insb ljmp sbbl fs xor mov add subb or addb stos adc sbbl inc push lods jne or repz add ljmp add jmp and inc fnstcw lds xor add movsb inc idiv rorb cli inc in inc lret out inc cmp add (bad) add enter pop add jo mov ds jge sub pop cmp jmp add cmpl add mov test or mov (bad) mov inc cmp jae push ret mov in inc loop addr16 xor mov sbb sub dec ss mov fild in or mov and in ds mov movl or add jnp and or push test sti dec dec in cmpsb jne xor pop pop or sub incl push cltd inc sarb inc jbe sbb lea stos rclb pop repz dec lret jmp or movsb (bad) (bad) fs add xor cmpsl and rolb sbbl or int3 adc mov or inc insl push mov pop inc aam jae pop xchg pop add aaa fimul ret mov sar (bad) or iret dec into jl leave add fidivl mov inc popf pop mov dec and stos test xlat add add add sbb hlt inc cmp lds xor add pop pop loope fsubrs lcall xor or and cmpsb faddl ss xchg xchg pop jmp add fstpl popa inc out xor pop int and fisub sbb mov ja adc pop dec popa adc adc ss enter or rcl xor jge inc inc inc fstp mov or mov fstpt dec push mov cltd push mov ljmp (bad) (bad) call sbb push mull xlat gs add or sti nop sub mov jp xor lret or cmpsb lock mov test pop testl push (bad) enter inc test loope mov cmp inc imul cmp mov mov push repz fs jne sbb pop loop rcrl std jecxz (bad) icebp xor pop mov mov (bad) cmpsl repnz shrb push xchg mov inc sbb xor enter outsb jne push pop mov clc cwtl xlat in lds icebp sub les bound dec movsl xchg movlps repnz cmp xchg aam les and sub sbb inc lods rcr dec pushf xor test mov xchg push test aam mov push sub cmp adc lods xor movsl xchg jnp inc test lock shl adc out lock jb cs ret adc in and dec (bad) add adc push punpckhwd addl cmpsl out bound test outsl jo outsb xor and xchg fsubl xor push jbe xor insl call and loopne adc adc test push pushf add stc scas or mov mov adc shll xor xor sub inc pop add (bad) jbe incl les dec jno shl lods jno pop sbb inc lcall pop push jno add inc cmpsl leave pop test incl or insb adc (bad) push (bad) pop test cli enter sahf xchg add lea and movsl or push movsl pop (bad) lea add dec in sti jmp fdiv test (bad) (bad) and pop adc or rorl or int3 data16 rorl mov sahf movsb sbb aam sbb sub lea mov subb mov inc xchg pop idivb cmp sbb pop repz cmp pop inc xchg dec jecxz mov sub pop add add push (bad) fldenv mov (bad) mov adc das mov pop push jmp jge add mov fcmovb adc jb inc lcall jo adc add fstl int add in rolb push in add add cwtl sbb out pop roll insl dec daa pop pop adc xchg adc pop divb (bad) push lret mov xor sbb mov cwtl (bad) jno sbb xor psubusw movsb inc test sbb test jns lds in mov in or mov iret jp jnp jg stc fcoml dec pop in hlt lcall pusha in rcl pop cmc inc add mov push jae idivb ret mov adc mov out (bad) push (bad) jge pop cmp xor mov es je loop ret incl test push pusha fwait addr16 add fs mov (bad) fldenv enter push jno mov nop cs xor imul ud2 cwtl divl push pop mov cmp and jmp mov or fisubrl inc in push incl loope cwtl jg push jnp icebp or add and test or push pop movsb fbld mov cmpb idivb xchg fwait mov sbb dec subl and pop mov push push stos mov pop bound add pop cmp add insl adc mov ja jb sbb out mov xchg mov jmp and pop cmpl popa cld aaa in mov cs add sub cmp and in (bad) xchg pushf xchg adc adc out addb sbb (bad) mov sbb outsb xchg daa adc sbb fisttpll sub ljmp lahf dec or movl test sub stos nop sub lods cmc int xor jb add data16 mov sub pop test inc repz orb xchg imul sbb into (bad) dec and cmp in or (bad) movsb xor sbb mov mov lds stc inc lods sbbl popf bound push (bad) jae inc pop nop jp jge add movsl data16 xor std outsl fldl fidivrl xchg enter push (bad) push mov push mov sarl rolb or sbb cltd inc pushf inc int add inc push stos push shrl imul pop push sti (bad) (bad) std loop mov inc adc xchg ja nop sbbb dec in mov fcompp cmp cli and lock cmc out sbb punpckldq ret xchg call jle xor inc mov ljmp enter push es incl in jp xchg mov out push cmpsb loop cmpsb outsl int orl sbb xor lret dec fcmovnbe mov or or xlat jae mov push pusha add dec adc jo,pt into insb mov nop dec mov or incl dec add int push cmpsl jbe push (bad) ret jmp mov ja fiadd mov add sbb sbb fcoml sbb dec fildl cltd adc cmp adc push cmp fild pop jo cmc mov cmpsl insl (bad) cld push sub cmp add cltd lahf and mov push cld rcrl pop daa adc dec cmpsl jge out pop andps mov lea cli mov adc fiadd adc push ja js mov mov push das adc inc push jmp mov and dec sub add push jmp jmp std jmp jno mov out rclb cmp mov mov xor jl push cmpsb inc enter faddl mov jb je enter fs inc js subl add xor movsb aaa mov push popa inc jecxz mov addl mov or push inc xchg push mov in stos cmovp enter jle sarl pop repz dec pushf jl clc mov pop dec jmp scas mov mov pop pop sub data16 pop lds or icebp test jle add or sbb add insb lret cwtl sub mov mov subl fwait gs inc xchg add and ret push mov and push xorl sbbl push jnp sbb and outsb push pushf loopne jno jb pop xchg push or push mov sar jge pop pop nop jae cmp inc xchg fadds jp fdivl sti mov shl or sub (bad) outsl mov ds aad fwait pop loop jmp add sbb add add nop sub sbb xor sbb xchg jb iret insb add xchg loopne arpl xor test movsb adc sahf inc jmp add sbb inc add xor and in xchg or and loopne popf cld shrb mov aam push ss (bad) flds (bad) jne rcr andl push mov inc cli les enter pushf je bound int mov cltd mov test dec jmp sahf stc stc and nop dec int3 dec push cmp adc pushf and mov addl jns ret (bad) andl out mov cmp add orb push or or dec popf les and out fimul fcomps sub xchg add or out out aas mov aaa jecxz aaa in xor mov inc fmulp (bad) pop lcall ljmp and add movsb mov cmc inc cmp mov jno addr16 roll sbb cmp mov mov lcall mov call add or cmp inc arpl sub scas mov push ds push cmp leave adc mov inc push arpl adc subl stc inc jne rcr rolb dec fisubr loope and jg iret lods icebp outsb ret pop sar (bad) jle add js mov nop outsb lods in xchg or cmp jo xor add add or mov mov sbb es verr inc mov jmp add pop add cs outsl adc cmc push jne out jge push inc hlt add pop arpl icebp jg or and (bad) dec or insl sti nop inc dec and or je add test cmpsb rcll nop push sti jge add push add negl jne ss and rcrl push lcall dec sub adc and mov mov nop jp mov lods dec test or or or movsb inc imul cmp adc les mov mov nop push testb stc xchg (bad) bound push fistpl xorb mov xor sub clc xchg test call daa mov fiadd pusha popf mov pop mov les movups cmp push adc dec pop push inc out insb jne pop rcl ret mov in imul bound cmpb push push push inc in or movsl mov aam sar jbe fcmovbe jge xor or (bad) fwait in jmp (bad) adc push hlt ret add add mov roll pop and mov jp ss testl out repz movsb divb cmp arpl add mov pop push popa xlat icebp inc mov mov int mov and mov daa lds enter aaa and je xchg iret sbb jne cmp sbb addr16 out inc int3 adc cli dec sahf xor sub xor pop mov icebp (bad) cmp jg cmp pop sbb xor push (bad) es imul psubb cmp and jge jle nop jne lods jae lds dec fldl2t cltd aas shld das mov mov imul imul jbe push or inc mov mov xchg mov pushf cmp cmp incl mov xor jle fldl fwait in jbe sub divb jmp into iret hlt cld shrb dec ss fwait jge inc arpl mov mov jle mov or mov jno cmp add and push push inc xchg add outsb adc mov jo int3 add and jmp add pop pushf in inc mov in jb mov mov adc ljmp enter jp mov push jns fwait xor jno test push es or mov cld jp inc cltd ret pop lret addr16 sbb pushf sub dec jge aaa inc or push xchg mov call jns flds gs push mov loopne ds outsb sub fbstp mov aas ljmp pop jnp fcomi inc xchg xchg ret out hlt pop jne cmp and dec mov inc push mov mov sbb test in fcmovbe inc out leave add les xor testl jl xlat adc fadd out paddd mov pop mov aaa sbb jp xchg dec imul sarl pushf and rcrl dec fidivrl jge sbb push mov push popa add jo xor cld pop in jge push pop mov xor inc (bad) mov inc rcrl pop dec add mov xlat lahf mov (bad) pop out inc in or xchg and add push imul pop add mov inc inc add mov xor push leave (bad) nop dec inc inc cwtl pop cmp jmp aas std lods (bad) jns imulb (bad) fimul rorb sbb xchg arpl push sub cltd incl notl fdivrs rolb sti aam mov je xor cwtl sar pop pop or and rol movsb (bad) fimull sar fsubs mov outsl rolb ret or adc cmp pop or sti mov sub rclb pop out (bad) cltd cld pop ffree out xchg lock inc push push pop inc out xchg push repz or in rcrb fistpll push sti test les movsl mov cmpsb xor mov push clc sbb pop pop rclb fiadd push jo adc mov lea and sbb in pop mov ja mov add movsb dec or add imul dec inc fildll pop pushf mov cmpsb stc jg int das aas adc imul ss add rcrl add dec wrmsr sbbl stos inc pusha pushf clc (bad) flds imul push (bad) lock jp mov std mov (bad) mov insl lods lock scas or out dec icebp push mov gs adc testb leave repnz (bad) in (bad) sarb stos pop je fxch into iret xor pop sti out test sarb adc inc idivl sbb test adc insb and sub cmp add jo cmp push mov sbb ds iret loope js lahf fnstenv cmovo dec es jl hlt or mov fldl pop jbe push jne lcall xor xlat bound push mov (bad) mov lret or mov fnstsw cmp clc arpl add idivb adc andb sbbl xor out or cmp mov jp push xor push adc mov xchg or sbb imul addr16 inc inc arpl arpl mov xchg jne outsb xchg fs sti push dec (bad) pop push out (bad) scas dec sbb (bad) sbb jmp pop push insb xor jns popl stos mov mov push daa xchg (bad) xor les scas aam dec push inc jecxz add push sti dec bound adc jbe scas popf dec mov cmp add gs cld nop and test add (bad) icebp mov subl lea pop push push adc mov cmp negl scas insl ret dec aaa sahf rolb and xchg push fistpll and xor daa aas scas or mov lcall gs nop sbb ret or pushf data16 subb jno jo lcall push test subb into popf lds imul jb insl fiadd xor mov aam cmp into incl push orl icebp mov ja aaa xchg ljmp jge sbb das fadds stos and mov ljmp scas add and in inc (bad) push outsl aas push push sbb push inc add cli test push loope pop dec mov xchg stos push cmp sti scas sbb inc push sti mov std enter xchg inc jle xlat adc imul test aam shrl aam outsl push cmpsb cmp xor subl mov adc repnz fbstp test cmp mov pop lcall inc or movsb push add insl add and cmpsb lret mov js jae mov or add mov into xor ja lcall add cmp mov les add and icebp fiadd mov and mov add pop mov jae cld inc add call call fidivl je cmp add in cmp stc and pop adc inc mov cmpsb jmp dec jecxz add subl scas inc mov shrb int cli inc mov icebp or or loop push fisubrl sub scas jbe add or insl xor fyl2x inc (bad) adc push adc mov ja pop jg sbb xchg and out aad ljmp cltd lock jne sti or repnz inc push pop and (bad) pop jmp cmpsl mov add out mov and push inc insb pop add mov std rcrb lcall mov jecxz jo dec (bad) imul sbb popa out inc call daa pusha mov les xor sbb inc xchg and mov add (bad) test cmp fdivrl (bad) mov mov xor pop pop adc push add sbb jp aaa sub mov xor adc add mov adc inc (bad) rcrl enter fidivr xor rcl pop jge pop inc or outsb int3 fcmovnu sbbl and cmc sub shr in push mov pop ja dec push push cmp jae sub rorb mov mov cwtl jecxz push test mov (bad) mov cwtl add mov test cmpsb ds push push stos cmp fldcw cld nop push mov mov out push jo add inc push mov and push pop add add fldl sub cmp loopne out ret fidivl testl jnp out pop mov mov out sub clc mov arpl cmp (bad) push cld pusha dec mov xor adc negb cmpsb fistp and sub jg inc call jo (bad) jmp (bad) loopne ljmp and push pop ljmp enter add loope (bad) or ljmp mov add pop divb mov subl dec mov pop mov inc int ret sbb in xchg adc cmp cli mov sub mov addr16 (bad) int3 or mov dec mov add rolb xor sbb fnstcw mov sub ret std inc addb mov nop push push inc daa pusha mov push pop jmp and notb fistpl pop sub jmp mov arpl test cmpsl cld rcrb repz pop imul mov inc (bad) mov fadds adc xor jno repnz mov push (bad) mov bound aaa inc imul xchg add ss js inc xchg mov inc jge outsb outsb inc push fldt int3 sbb lock xchg leave add clc outsl loop sbb dec ror sub sbb aaa inc int (bad) sbb ds sub je mov xchg ljmp dec stos sahf add clc add jnp cmp and call inc loop fs outsb mov push xor fwait sbb cmp push pop cmp insl fiaddl or aas mov sti mov xor dec int pop fs or divb cmp mov and scas (bad) popf and dec add neg pop popf movsl out shll xor mov pop dec popf mull shll out aaa sbb pop repnz pop mov shrb fisttpl aam rcrl test mov inc testl les into sub or rorl add pop push mov negb fldenv xor sbb cmp cmp test inc test stos mov popl xchg mov sbb inc scas cmp or ret adc lock add loop fwait xchg cli inc pop cmc inc shlb pop in imul and cmp loop sbb bound sub out fadds cld mov pop cld cmp frstor add xchg sahf out (bad) sub mov mov enter pinsrw fisubl push aam fstpl adc vxorps add je sbb xchg or pop data16 call (bad) xor sub (bad) jbe add (bad) jo xchg push icebp xchg or sub (bad) aaa add loop sbb iret jp push int stos push aad ja jg cld mov scas fstpl shlb xchg jp adc int xchg and or mov jle pop jnp add rolb jne mov loop nop insl imul lahf jmp and push test xchg rorb in sbb push lods fldl aas stc lret xor sbb les dec or mov or (bad) xor pop jecxz mov mov xor fcmovu pop inc out add iret (bad) and and push jae lds push loop jge outsb push aaa int3 xor inc (bad) fs lock push jae jp xor xchg fiaddl dec adc mov sub testb dec mov jmp int pop (bad) or dec icebp mov (bad) lcall jge rcrb or outsb (bad) jbe add jnp mov mov mov mov das cmp cmp nop cmp jne sbb or int lods jmp adc add mov lcall inc jnp or push sub fild fmuls iret gs add pushf repnz jb int hlt jb stos dec (bad) (bad) xlat (bad) out add data16 pop push orl shrb push mov aad out ret jle (bad) mov pop fisubr push aad adc (bad) jmp movsb or mov inc outsb das jne into jle es adc pop bound rorl imulb mov hlt insb add rorb mov and rcl ljmp mov loop mov and rol add xor inc dec lahf mov insb or fmull push add adcl lret lods (bad) sub inc movsl add mov aaa push cltd jecxz (bad) lahf cmc or sti and adc inc clc popa add in cmc sub imul les das stos pop cmp sbb adc mov ja arpl (bad) xor cltd mov roll xchg out ss push mov lcall notl dec out jbe js cmp in imul out out cmp jbe jbe int push mov mov adc cmp adc jno lret sub add push sub incl stos add movsb push (bad) icebp popa or jo sbb aad loop cmp pop cmp mov dec pop movsb pop jno nop and icebp sub lods jecxz fucomp and and add inc mov fiadd and cmc inc int in in mov stos jne mov (bad) (bad) (bad) in jmp mov inc stos in push (bad) ds adc pop inc out add xchg (bad) xor repnz (bad) xchg add xor shlb (bad) cltd repz lcall es fcoml inc sbb xchg dec fmull add out or and out test ja or adc (bad) jae sbb aad and movsb in xorb push inc mov addb (bad) mov setp pop fbld in inc pop pop (bad) cmp outsb stc inc int jecxz pop adc jbe jae cmp lock and roll rolb ja arpl pop inc lods and add adc lods shlb xor sbb dec daa rorb inc clc (bad) fidivr cmp add ja add inc or xchg cmp cs pop pop popf mov push ds mov pushf pop mov (bad) xor jae mov jmp aam enter dec fisttpl jecxz inc xchg add ret and ljmp and loop dec aad pop xor add xorl lods lcall and pop adc adc dec clc dec and push add inc xor xor mov push dec jbe lcall jno inc sub mov fadds sub aaa push or fldenv hlt pushf out jbe mov (bad) ss (bad) inc jne xchg inc outsl imul cmp movsl xchg test jo jmp push cmp and sub inc adc sbb arpl mov bound jle mov cmpsl mov cmp add aam (bad) repz cmpsb je sbbl (bad) (bad) ss inc aas frstor jb pop rcl aas je xor jecxz pop and push jae test or loop sbb add and mulb sbb orl andl aas loope sub sbb ret add inc mov add sub dec clc cmpsb stc fs loopne outsl push dec mov adc imul adc jne mov inc pop lds insl mov push cmp pop fstpt mov or mov jge xchg inc and xchg cmp scas cmp mov pop dec sbb jae (bad) jp stos and mov push (bad) subl push dec dec sahf out cs pop imul and ret sbb jb int hlt out stos mov xor dec iret (bad) sbb xchg mov mov sbb ss dec fmull add orl (bad) mov push mov dec popl int3 fisub sbb ljmp incl mov jne popa adc mov rcr (bad) pop out sbb sarb dec mov into pusha shll jbe mov pop movsb and xchg sbb aam jbe and push sbb or mov lods ja inc iret push and loopew mov jge jnp popf cld xor aam insl icebp and or ljmp push arpl ds mov sbb adc arpl jg adc mov nop push in insl xor jge popl (bad) aam inc pop andl inc sbb icebp inc jp mov sbb adc enter (bad) andps movsb (bad) aas aas inc sbb insl and add and mov popa int xchg push addr16 dec xchg push dec in popl xchg icebp sarb loope mov into or (bad) lods mov add (bad) (bad) xchg loopne das add (bad) loope jg add cmp xor in jns mov roll bound push sahf xchg mov in mov jno mov add add push lods enter jle cmpl adc jle repz cli inc xor repz or adc sbb (bad) xor dec push mov cli test ljmp insb add outsb incl sub in icebp inc out add mov test jmp addr16 mov mov cmp mov movsb jl or rcl inc jne add mov dec loop xchg rorb pop mov bound push xchg std orb mov je cld nop xor int andl cmp cmp xchg fild sub xchg lods loopne fdivrs push cmp push jecxz mov jns adc les loopne push scas inc out orb dec cmp aas es mov and in cs loopne and adc in sbb inc pop mov lcall in pop lahf mov divl cli fwait aaa or mov push or inc sahf fldenv movsl ss and pop mov mov (bad) push push sbb sub idivb data16 insb test sarl push jmp and addr16 incl nop (bad) add cwtl cmp int cmc pop loop dec push push pop (bad) (bad) mov push lods inc dec sub pop add outsb mov dec inc js push sub xchg mov pop (bad) xchg push imul in inc mov fldcw mov daa roll mov sahf sbb inc sub push and sarw call sahf aam lods dec ficompl add lcall jae inc jne call xchg mov icebp sbb mov lock sbb jbe (bad) fdivp or and xor rol bound and sbb cmp inc pop add adc (bad) mov stos sbbl ja js adc loope xchg cmovns (bad) shlb loope or adc movsl cmp fwait std call cwtl loope add shrl or mov (bad) or pop ljmp jb mov test push jo roll lahf sti and cmp cmpl imul js cld and subl test hlt out jo (bad) add or sub repnz mov add mov xchg fidivrl inc das mov push test mov xchg lds cmc imul mov cmpl mov pop mov int add insl push push lock add jno pop imul (bad) mov imul in jb add ljmp dec bound push mov cld nop add addr16 sub dec jns dec popf aad push insb inc push mov sbb add (bad) add jmp jno sbb cwtl (bad) mov jmp inc clc lock mov mov add ds addr16 fsubs xor inc outsb inc popa fnsave xchg mov std loope adc incl adc imul jne fsubl pop sahf int3 mov mov mov dec jnp in add cmp inc add inc xor cld and jae daa divb ret mov in inc jmp clc jb inc aam xlat ss test idiv roll clc mov addb cmp (bad) fdivl add mov add into repz push or test adc test out fsubrs enter pop iret aad and cmp add jbe rolb sub fiaddl arpl out cmc inc out push mov sbb mov add stc xchg mov cmpl sbb stc inc lock and mov sarl mov mov adc mov arpl push fild mov les je cmpsb pop in stos mov dec add aas or in pop mov sbb fidivr punpckldq mov (bad) nop and and push xlat incl stos push push ret test aam (bad) fldl cmp push loopne jg (bad) inc sbb out jno (bad) mull loope or sti movsb cld rcrb push sub add and gs jo,pn (bad) test and cwtl sbb push mov outsb aad pop mov call rcrl mov adc and icebp xor dec clc insb xor in inc xor xor inc test out xor sbb and ljmp push mov aam push push mov push std insl inc mov leave mov dec pop mov fiadd inc lods daa add inc mov cmp add (bad) add cmp and jns pusha sbb enter mov sbb mov push jb sbb cwtl inc lret pop add mov xchg add dec fstps push mov (bad) enter jmp iret xchg or dec jb inc mov xor push adc repnz sbb xorb aas dec inc lea scas adc call lcall mov into jg adcl outsb es jbe cmpsb sbb or adc ljmp adc mov mov or add mov sub mov aas fwait out sahf bound sub addl test inc ret mov mov inc jp jno or (bad) loop add leave jmp movsb dec cmpsb into push loopne mov sarb addr16 faddl flds and loopne lcall push push push mov inc aad mov mov inc sbb adc jno pop les out push aaa jbe push adc adc jnp sarl mov jo call cwtl mov mov cmp data16 faddl or push lret jns lods sbb mov in add cmp fiaddl mov inc cmp xchg nop jno loop iret jo xor sbb push fdivrs add sbb out int3 nop out icebp adc pop mov rorb aas xor adc call jo lcall xchg pop dec and mov inc mov (bad) jle fneni(8087 fdivrl and mov lea fwait insb (bad) dec ds jns mov cmp fs sbbb mov pop and xchg mov add out incl sub aam out stos movsb ja inc int ljmp inc sub sbb (bad) testb mov sub jge xor pop cmp xor icebp faddl ficom push xchg rcl iret push fistpll dec pop (bad) jne add inc std dec shr or dec xor test (bad) jno jbe,pn jbe ret xchg xchg bound iret adcb add and xchg aaa sbb jmp push test push xlat stc adc cmp lahf lcall shl and xlat cmp (bad) mov lea inc ss add sti and sbb sub (bad) divb nop or mov outsb cli repnz in sbb cmc (bad) and aas jb cli fiadd fidiv jb push jle bound in daa mov inc iret shl out inc cmp lods out mov push jnp cmp sub sbb bound and sbb cmp pop test jne aas mov jae xor mov loop out out mov sbb xor pop xchg jge daa shrb outsb jns pop push adc adc push push jle in push shr xchg ret fistpl inc in fwait push cmpsl lret and fildl push cli inc jo out inc mov cmp addr16 pop xor (bad) flds sti adc std mov or ja (bad) fnsave inc xchg call jae arpl sub jmp jbe adc xchg lea jbe add ljmp add ss add cmp sbb dec flds daa lds out icebp mov adc pop fnsave xchg clc mov dec in lret push outsb xchg jge mov adc ret incl push sbb add adc xchg (bad) inc cmp mov cmpsb (bad) mov fsubrs or shlb xchg or jns frstor and inc cwtl scas (bad) add jmp pop out adc (bad) push push sbb inc in (bad) mov and (bad) lods jle cmp movsl rcll (bad) mov stos fistpl inc fsubp incl ljmp xor fcomip jle and jnp imul fldt dec adc fwait xor outsl aad jns jnp (bad) icebp jg jp aad push and icebp push pop add push xchg cld sarb int popa cmpsb jnp mov push mov pop out xlat sahf mov inc ds rorl and jmp mov gs mov dec sub mov jmp adc jnp mov rclb dec testl push mov aam or cld mov mov add sub add or add sbb jmp add pop xchg in mov xor mov fisubr xor dec les fnop and sub repnz inc inc fidivrl je push ja push int outsl lcall cmpsb std fwait nop sbb jge push jp outsb sub mov fdivrl xor test scas adc movsb and xchg mov fimull fnstenv inc inc sub adc mov xchg mov sahf arpl mov pop int3 outsb cmp inc js ret and push jmp iret fsubs lock incl movsl mov (bad) lock push movsb adc inc jb test mov fxch sarl jl jne call loopne dec add movl arpl (bad) mov xor or (bad) jl mov enter lret xchg cmp out sub clc jge xorl cmp add out xor inc or ss ljmp lock jle fidivrl inc jb inc mov lea sub adc sub jns mov or aam les mov (bad) jl adc fild dec mov cmp add testb xchg push scas (bad) repz push sub cmp cmp or mov fcomip inc adc push (bad) jno bound fdivrl sbb jecxz mov inc pop cmp xor ja mov movsl add xor imul aam ds std sbb pop fadds xor mov cmp mov outsl fstps push mov and imul les push aaa movsb loope or sub xchg pop mov sahf out mov cwtl in mov xor es jp add inc dec dec call test arpl aad das scas and mov leave add daa jmp add xchg in call cmc fstps ja sbb call and gs in add addl repnz xor mov push jns dec inc inc add popa and ss xor adc sbbl out pusha dec addr16 inc aam pop into enter xor push sar mull sbbl adc sbb lret xor subl dec xor loopne mov aas or call (bad) cmp sbb sbb add jae dec xchg in lret nop inc sub and mov fsubr stos shr std arpl inc xchg sbb adc xor dec inc outsb clc inc push sar inc hlt test sti aas scas adc call sbbl lock dec adc (bad) jp sbb (bad) loopne add es loop popa push jbe ffree adc clc dec adc inc sbb ljmp add js popl call (bad) cmpsb into push lret (bad) ja fwait out sahf bound push mov dec add mov inc xchg enter push stos add fwait and xchg mov mov mov popa mov or mov jo xor test sbb jno ss roll adc inc and mulb ljmp cmp mov or loopne pop push outsl pop sarl or fwait cpuid or inc aad sbb or enter add subb push adc jae sbb mov notl lahf je mov or add cmpsl add andl push dec mulb es dec enter cmpl out dec rorl insb adc outsl fadds aaa inc (bad) mov sar push fldenv add addb pop sahf pop fcmovnb mov cmp adc fist jge sbb aas loop xchg dec popa pushf mov rorb fdivs scas les pop cwtl and or aad lret fs adc ljmp xchg dec or or pop movsb loop sbb or adc mov aaa popf call test mul imul cmpsb sbb jno sub ficompl push outsb or shlb push gs push nop (bad) add repz cmp (bad) lods shlb aad (bad) or push fimul stc inc sub mov ljmp add cld mov mov dec mov jne (bad) and mov push addb sbb pop sbb addl mov inc iret jno cmpsl aas push inc iret xchg push jg pusha inc cli gs imul hlt and pushf incl fs adc movaps add push aam idivb (bad) divl insb mov cmpsl roll fsubrs subb and mov add dec mull gs mov std shlb sti inc iret out mov mov sub mov js xorl inc sub lcall lret cmpsl ds mov sti and insb add and or pop mov xor sbb xor xchg cmp std popf xchg or xor insl or in mov pushf inc aam jecxz cmc fadds out or js mov arpl out enter push loope jne push mov mov inc (bad) lock dec inc xchg inc mov jne inc inc hlt inc sbb xorl push and sbb rolb stos push out incl or hlt insl divb sbb jbe shlb test dec std mov test lock jne inc cmp jb mov xor sub cmp lcall add outsb jecxz js add imul and mov xchg xor or inc jecxz mov push aaa inc jno and lds loop cltd add and icebp or cmpsl incl and pop add xchg loope stc and sub push mov xchg cmp adc xchg faddl fdivrl arpl outsb mov jl cmp sbb sbb xchg iret xchg add test jo outsl fcoms jbe pop lret das lcall fs cmp hlt jnp in mov outsl xchg in lcall lret test push mov sahf lret sahf call daa ror (bad) rdmsr xchg insl lret mov dec jo out pop jnp add mov aam dec cmp hlt mov sti push fstl xchg sbb les jnp in pop jnp xchg or lock movsl out mov stc sub cmp call shlb mov fwait lcall ds stc mov adc xorl repz adc xor test add mov pop mov in icebp cmp imul incl fs jns add insl mov fbstp pop test sub ret (bad) cmove inc scas xor popa sarl out mov adc xor sarb addl inc or and ret push xchg xchg popf inc (bad) inc je jnp cmp movsl (bad) mov pop imul hlt jecxz leave (bad) call out nop jg mov mov popa lahf adc addr16 lock jae pop xchg inc (bad) and adc cmp or and pop and jle cmp push push sbb lret inc add imul bound sub into cltd xchg sbb lods sbb rolb mov mov inc pop xor stos fdivrl lea jnp sbb fs (bad) jbe add mov cwtl add je add xor cmpl or inc out xchg icebp out out sbb outsl incl fs push mov out inc lret inc dec loop mov shrb jecxz enter cmp sbb mov arpl inc insl and fadds movsl sbb pop aas js (bad) mov cmp sub arpl sub (bad) enter xlat mov sub or icebp inc shl stos mov jmp mov pop nop or mov xor fidivr push fmull push stos (bad) je cli aad mov popf mov lea sub lods (bad) push lfs cmp mov mov int3 ja stos dec adc repz sbb pop std pop dec and jbe push mov jg push js jne cmp stos mov rol fmuls fsub adc loope pop push inc enter lret add push arpl into pop out std rolb incl mov arpl mov sub pop sarb sub aam cmp lahf xor push iret cmp in xchg pop movsb mov stc int3 push insb (bad) das flds shll add inc std push cmp lfs xchg jns (bad) pop or sub int popl mov cwtl les push push xor addl or cmp jne mov adc sub mov aaa inc cmpsb xchg xor mov pushf xor mov xlat vmovaps dec fs popf lret mov out jmp mov xor cmpsb jl xor lods cmpsb pop call add inc adc xchg mov add jne xchg pop outsl mov fiadd out test xorl inc (bad) mov jg add ficompl or loope add notl sbb faddl mov in pop and inc and inc pop fbld ja and mov push add add xchg in fistl cmp aaa jnp js fldl xchg cld pushf sub addb pop push nop inc enter add inc inc adc jnp (bad) shlb xchg sbb sub cmc xchg (bad) adc (bad) and add sbb inc pop mov (bad) add cli (bad) cmp or xchg (bad) inc dec je lahf adc loopne cmp and xorb (bad) xchg add and xor stos (bad) sub or outsb (bad) repnz jmp or and or mov test dec in sbb pop fs js pop jmp add mov (bad) (bad) jle das inc or xlat popa mov fisub je es in popf enter lret mov (bad) clc mov outsl loopne xchg sub nop outsb stos dec or inc leave add add mov mov cmp xor pop in pop cmovs jae xor mov mov icebp inc push add in and pop mov mov (bad) popa in pop popf push loope mov lods cmc inc out jno clc arpl call adc add or dec dec and aad les rcr (bad) fidivl flds push xchg adc add ss inc cmp mov sub imul mov adc add sbb push ret add in push dec jb or mov inc xchg jle add fdivrs roll mov bound imul jl add fwait inc cld inc roll cmp insb std pop pop cmp jge inc (bad) adc mov mov orb out add jnp sub mov ss adcl jle or ret data16 scas icebp mov cmpsl jno rcr jo negl jne pop repz dec ret test pop mov cmp in mov jae push popf scas xchg test out incl push inc popf xor mov ret mov fildll popa iret roll pusha leave (bad) xchg or out pop in inc dec mov fildll xchg add inc lret mov push dec push aam jge shlb lcall mov ja cmp add jo out dec or or push xor add mov push leave add cli mov in inc mov in push inc mov adc and sti jp outsb nop int add addl and or inc sub add or inc fdivr test out daa test or insl cmp and inc lea dec fiaddl add dec adc ret xor mov mov and adc xchg pop cmp sbb push aas rcll in lods cmpl dec pop aad xor fs mov arpl in int3 mov xor add movsl fbld pop (bad) lock in inc scas addr16 dec and xchg and or (bad) ja adc mov aam lret push cmp push sbb in in outsb imul in sbb dec lret mov jae cmp add loop xor fsubs in or add movsb dec dec fisubrl rolb add mov loopne arpl sub sbb movsl incl sub aam divb icebp ret sti mov cmp orb push sti cmp xchg fwait cmc loopne out (bad) (bad) aaa popa and add cmp add jmp add (bad) mov xchg gs outsb repnz dec and pop sub sahf iret lock pop mov push pop inc outsl notl mov xor nop arpl lods inc or (bad) mov push add loope imul imul or call sbb in sarl add and int add mov dec es out xchg mov fnstsw sub mov jb mov into imul cli les jne xor jg add push xchg out jo sbb xchg movsl add call dec inc test cmp mov cmp cmc inc push fldt push mov rcl add add push xor rcll mov adc (bad) pop add or sbb add je sbb out mov (bad) inc sbb adc sub push adc add dec and in or dec fdivr add cmp les mov push add ss imul inc cmp xor jl dec or jns inc adc mov (bad) subb push out ret sub (bad) jecxz mov add mov ja (bad) pop gs rol flds pop mov ss sbb adc xor pushf mov adc fst mov mov pop jo cld mov testb push pusha push dec lea dec mov aas or inc arpl push into add jbe jb add dec or ss pop clc fs xlat mov sarb push ja ljmp sub and jnp outsb and adc pop pop cmp xlat call int3 popa inc xchg sbb into (bad) add cmp incl mov cld xor xor jl cli and hlt data16 es push and mov lahf call adc or aad ss jo adc sub push mov inc push sbb fs bswap movsl push incl bound aaa dec sbb xchg add add and push cs mov dec sub out cmc xor add fimul or mov pop mov mov clc and std mov fwait in je sbb ljmp dec imul enter stc jp in (bad) inc das sti cmp adc in and xor or cmp xchg inc (bad) rcl fwait jno cmp aas out inc std xor push pushf pushf or incl (bad) sbb or push add push pop mov mov jle clc inc and popf shl adc dec xor std push adc shrb in lcall mov cmp or daa sbb incl or movsb pop (bad) xchg fs testb add icebp add mov inc push xchg jge cmp inc mov insb nop dec pop rclb inc xchg fiadd lcall pop push pop add mov jns fsubl push jmp loop (bad) or inc (bad) mov mov call xchg lock test mov aam rorl xor ret sahf loope ficom fwait jo imul dec jno aaa hlt cmp add incl fistpl (bad) outsl arpl je rclb jp xchg or push add fcoml imul in mov add call jg pop subb and fstl shrb jmp cli push rcr fmull sti mov mov rolb lcall mov and pop mov adc ja enter sbb or shlb pop mov dec rolb cmp cmpsl add loop push loope cmpsb jp leave add ja (bad) in inc aaa mov push jno sti mov out outsl xor sbb mov pop jge xchg leave int lock negl fnstsw ljmp sbb insl jno mov mov cmp loopne incl push pop testb jl push dec xchg push bound mov and sub (bad) xor mov sbb lds cmp push leave ja or add rol xor jo inc mov cmp sub stos std lock jns aas push and add pop mov insl xchg imul pop xor out cmpsl xor mov xchg movsb push add cltd cmpl jo lcall in gs das push jo repz nop and add (bad) sub mov push jle adc test sbbl test add mov rcll mov addb push jp jo cmp shlb push push das jge ss push push (bad) inc adc mov es insl cmp and xchg cwtl mov add add jno or nop sbb push aam fiadd pop addr16 and movsl mov bound inc push mov inc neg fiaddl inc mov mov xor and or xchg and and das jbe lock mov frstor fiaddl (bad) call fdivl rcr inc ret or jnp xchg xor std roll cmpb xor mov adc scas pop sbb mov sahf bound arpl fcmovnb leave add mov int jnp gs stos (bad) arpl push jmp jecxz incl mov dec xor jb sbbl fadds mov mull cltd mov dec fstp addb lock aas in inc sub lahf add push test (bad) aaa mov xchg xchg adc adc imul add or inc ds gs fiaddl lcall mov sbb test pop mov adc jne rcll lcall jbe sbb gs fdivs repz mov rolb inc lea cwtl fiaddl inc mov inc insb mov xchg add dec adc nop sbbl and xor ja push (bad) scas das ret out or rolb sbb add pop (bad) jbe or mov sahf and adc dec enter aam sub loop repnz xchg sbb movsl add mov or jb pusha int xlat outsl mov subb les push or pushf xor sahf test pop rorb pop (bad) adcl subl out cmpsb cmp mov cli push daa inc ffreep add in inc scas mov sbb fadds nop sub or sbb dec add pop imul adc sbbl arpl mov aas je shll adc into inc fcoml pop mov xor jmp mov jbe inc cs adc shrl les sbb cmp into ret lcall jns fstps fistl int3 cmp adc rolb nop jb sub xchg (bad) and ret test jns inc mov loope loop jl xlat (bad) rolb adcl (bad) inc (bad) dec adc or push sbb adc adc shrb dec daa cmp add pop cmp xor sub sub or dec rorb sub divl jo fsubl lds popl xorl add in sbb int fisubrl ret cwtl push inc in stc daa jno or mov faddl int inc add cmp out jb mov orl mov icebp mov mov fdivrs jbe repnz pop pop adc sub sbb jmp cli pop mov and int3 inc adc imul aam or rorb sub cli test pop jnp push repz lods addb fildl inc inc jb push cwtl (bad) sub rorb xchg xchg stc push push mov je (bad) xor lods stos and dec mov xor inc mov xor mov (bad) add sbb outsl inc push add (bad) push dec movsb push xchg jl sub cmpsl repz cli add test dec or push cwtl mov add and pop mov mov sbb mov adc inc out push je cmpl lea sbb mov sahf fdivrs fadds add imul stos int3 pop pop mov clc cmp pop incl icebp aas xor lahf jp std loope dec add pop inc pop insb jno fldt add push pushf in (bad) add jne xorb push (bad) cmpsl and pop repnz ss sti mov inc xor stc adc dec (bad) dec out fiadd and sbb push rorl insl lods add sti mov or xor sub add adc repnz fs sbb jecxz inc lea stc push or mov ror mov js sbb outsb pusha dec rcrb rorl jne mov das dec (bad) lock push popa sarb push es mov pop popa movsb xor sub jmp push pop fsin adc add int3 jb ss nop outsb scas movsl iret out push stos mov data16 mov ret mov jg add fistl idiv out xorl push lret mov xchg mov jae or mov add fdivrs jbe or sti and insb and test jae jg sub ror imul or scas fiaddl mov divl mov lcall dec xor inc out in mov sub in xchg sbbl cmc dec ja js incl mov pop rol jle push test xchg gs or mov jge lahf push in (bad) in (bad) popf daa movsl insl cmp sbb dec int nop sub shl add adc cmp aas out mov mov dec push pop mov jg mov cmp incl mov incl xchg xor clc dec pushf and je xchg mov sbb mov sbb xlat jnp jg sbb subl imul mov orb in fadds stos or addr16 add sub mov loope (bad) pop mov inc out push dec inc dec jge inc lahf aas xchg add movsl xor cmp cs leave add aad mov jns das mov or rorb adc or nop aaa into aam data16 test test addb pop (bad) xor lahf ret jnp and inc movsl cltd addr16 (bad) inc (bad) pop cwtl mov mov cmpsl inc mov rep std push push ret mov cmc fiaddl stos jns mov and adc mov fimul cmpsb mov inc rcl xor (bad) out add pop xor jmp inc pop or (bad) nop dec in pop jne popf insb pop jbe mov (bad) jo or push cmp loop inc push add inc jo subl ljmp pop add sar out mov (bad) ja or (bad) push loope das jmp add inc out push ret xor sbb push mov incl test pop mov jae in je mov mov mov jp movsl stos dec mov xchg add mov cmp cld and movsl lods shr (bad) (bad) and xchg shll jnp cmp into jbe fildl nop xor insl cmp bound xor jg incl jp int3 adc jo (bad) cltd mov xchg push incl test or sub scas or mov mov dec in test cmovne xlat inc jo movsb pop fiadd and xor mov test cli scas out dec lea xchg dec xchg pop inc cmpsb sti mov cmp int cmp xchg (bad) cs icebp out add push std es adc xor jno mov mov pushf cmp repz cmp mov or dec pop ret je sti lea repnz outsb mov sub and jmp adc rcrb add into mov jg push push cmp cmp sbb jnp je pushf movsb mov popa inc sti jge test ds rcrb insl mov bound dec dec jecxz shrb ret fsubr mov or mov loope out hlt push sub out mov sahf int3 nop outsb xchg cld lods xor movsb add mov inc jo call rorb or sub fld add sbb nop outsl stc inc lcall and sahf (bad) mov mov daa sub test scas lret cwtl inc ljmp incl adc je iret mov pop nop or fxch mov jnp sub pop cmp call jns inc ficompl stc and cmp mov stos jmp scas test adc clc cmpl dec push test sub daa sti mov xchg cmp fisub fdivs xchg faddl dec pop pop les dec xchg lock ret leave add pop stos sbb pop test loope sbb ds push push mov mov mov ret sbb pop mov push xor add popa fs in xchg andl ljmp adc push in lds fdivl mov add pop stc scas negl jmp and sarb push push jle mov (bad) pop aas stos dec add push sahf mov dec dec xchg or or and dec sbb cli ja mov dec jae fstpl push pop inc in lcall add out fwait xchg push jle,pt fst lret sahf push lret lds stos arpl and std inc add sub push stos xlat jge daa mov pop lret fisttpll out inc mov inc lea sub (bad) lret inc jb cmp jnp (bad) add lret ret scas and loope and xchg cmp in stc jl sub ficoml lcall stos int out (bad) repz mov sub outsb or lods adc fsubs push jb loop pop in je or or repz inc cmp xor ss adc pop test inc in adc push ret (bad) lcall jns push mov xor add sbb lret aad dec cmp inc or int3 jns ret sub leave add push sbb jne out shrb inc sub je and add mov adc sbb cmp fimul pop push fnstsw shr addl insb pop pop mov jno insl es xor idivl or leave add stos js gs leave add ljmp dec fxch aad xchg lods outsl bound mov sahf sbb int sti shll inc pop add shlb add xor push xor sbb mov mov dec jl xor sub (bad) int add popf icebp jecxz mov sbb je ss stos add pusha insb xchg sbb jno adc lods lea inc or frstor and sub and nop and sahf hlt or cmp fwait xchg or in adc sbb (bad) or and jnp inc arpl mov imul sahf cltd mov sbb mov jecxz push aaa add lcall dec xchg out pop adc incl sub iret or cwtl inc ljmp mov cmpsb jnp push rorb add lret out mov push adc xorb sbb ret mov mov add or add hlt sub xor mov xchg gs dec daa or push mov in shrl xchg jge in push mov in (bad) or push popf pop (bad) mov (bad) lock fiaddl mov in mov insl sub mov jnp and xchg or fnop jbe flds inc mov mov mov add mov insl xor xor (bad) mov lock loopne roll divl jge add and loopne rorl xchg xlat (bad) mov or into sbb adc test inc push jp jae aaa inc (bad) iret clc inc cmpsl mov cld inc ds out inc adcl fstps out add clc add mov mov (bad) push ds adc dec decb dec mov push aaa inc xchg push mov ret nop inc push jnp loopne jbe or xor jo rclb (bad) push mov mov inc mov push mov xor mov jno jne adc cmpsl pop imul sub nop pop dec cmpsl mov xor out push adc fdivrs mov mov sub cmp flds inc mov xchg bound xor icebp fdivrs ret nop out pop push inc insl pop mov inc ret sub pop lods rclb nop cmp int3 (bad) jl out adc aam mov mov in fwait or push mov pop or (bad) mov xchg fwait mov orl loopne push pop xor fcoms insl jbe adc int3 jae sahf push in mov fwait jle pop insl int3 mov push xchg jp xlat (bad) cld push push xchg cld out cld add or xchg repnz out jns,pn das stos xchg movd (bad) pop add push mov movsb xchg and adc push dec inc ljmp mov rorb mov xor bound sahf rolb lret call push fsub out (bad) cld mov jne popa fmul and shrb mov or pop lahf aaa and and cmp lret and arpl cmp mov dec fist in cmp cmp (bad) jno mov addr16 fdivs (bad) mov mov adc push incl js (bad) lods mov jnp dec loop stos idivb adc cmc sub leave ja push xor pop (bad) sbb jmp mov mov (bad) mov hlt pop cwtl jno out das add xchg or fiaddl push in mov pop push mov mov lret mov push pop (bad) out jne fimull mov add jne jae adc adc (bad) mov pop shr xchg loop jecxz aaa mov cmp fs adc mov incl lret mov xchg outsb popa pop lahf in push loop inc (bad) test inc in push fwait bound cmp les sbb mov adc sti fimull fmuls adc cmp fistl fidivl add and mov mov fcmovbe pop xchg push (bad) pop nop mov ljmp adc notl add inc sub jae (bad) mov xchg add mov and xchg ds es ljmp and stos (bad) dec (bad) lods movsb xor frstpm(287 cmc lcall je pop sbb inc add pop ds push outsb push fnop jns int rcr sarl sbbb inc (bad) fmul out ficompl fiaddl (bad) icebp mov das mov fs (bad) push mov mov int3 adc fadds push test cs ja lds mov and jle push xchg aaa dec mul inc fidivrl imul ret xchg pop mov jl cmp loopne (bad) outsb loopne sbb call push fmul or dec shrl fldenv jbe sbb loope fsubp pushf sbb inc daa mov repz lret xor mov movb inc (bad) dec (bad) xor dec nop jns shlb bound dec or in imul ret mov loope imul idivl cmp inc jge add mov fcomps out add and (bad) xor jb mov add xor movsb sbb adc pop imulb adc jle dec fxch sub inc gs or fnstenv pop inc jbe fnstcw add add mov push js and xor jns add jnp lds sbb xchg push scas cltd test inc lods test mov std jmp cmp shl xor dec lret cmp pop cmp inc mov adc push nop pop aaa inc test adc push jge dec push popa les mov sbb mov sarl jae aaa (bad) (bad) iret movsl nop and rcr faddl stos push mov in loopne sub testb jmp push das inc (bad) pop mov in (bad) call stos lahf and and mov and add and inc in push dec bound fxch pop imul sbb out rolb int3 mov add jno mov mov adc sti mov push outsb or out add call int push ror call sbb xor (bad) ficoml aad std (bad) xorl rol call mov mov sub adc cmp dec mov sahf push cli jb inc out jns push les jbe dec out or cmpsl (bad) mov ret sub (bad) jmp xchg or cli aam gs xor pusha psrld jne mov pop xor rcrb xchg cmp aad mov xchg test jo cmp fldenv (bad) ljmp pusha push xchg test aaa and push gs sbb ret outsb gs push cmpsl push sbb dec pop cmp (bad) cld and or xlat inc dec out dec sbb and sbb push (bad) int3 xchg jb inc sbb inc jg andl fsubs out push psrlw pop (bad) or into xchg cmp insb pop mov insb jnp subb mov roll add lahf xor subl cmpsb fisttp mov call lds lods sub testb incl add cmpsb lods ss (bad) xchg or add sbb mov int3 nop push (bad) jge movsb adc xor aaa and inc cmp addr16 mov repnz adc jns gs mov adc sbb jns out sub push mov jle cmc or test sub mov mov and (bad) call fnop adc adc mov es sbb xor movsb out jecxz and je fs add outsb mov adc add sbb ret lods adc mov mov xchg inc inc mov daa push xchg adc imul ffree cld nop pop xor (bad) rorb out test enter hlt int mov dec push enter and sub and aaa inc daa pop bts or jae xchg or ret ret movsb ret sbb push mov jge mov inc jle mov inc adc nop and outsl mov cmp add inc cltd test in test test or fcoml jno mov jae repnz push add pop (bad) enter out xor xchg cmp xchg orl icebp inc nop jp inc leave add xor mov add mov loopne xor or jg mov inc addr16 int ret ja mov inc xor pop push rcrb fstps (bad) push fs sbb sbb cmp iret jns cmp adc cmp test mov sar or adc jb test enter outsl mov xchg cmpsl cmp push cmp dec bound xor paddsb pop inc iret cmp stos inc mov aaa jg add add cmpl mov add and jbe push aaa movsb sbb scas mov test ret jp mov push insl sbb ds scas mov incl out and int ret jmp or ja or in dec push cmc scas xchg aam dec ftst sub fsubrs cmc xchg push mov xchg xor inc in xchg adc movsl add shrb dec clc add iret push inc lea mov push adcl cli inc out sbb sbb lock push mov call mov inc sub stos call xchg add dec mov out loope mov push ljmp faddl mov (bad) mov push loop je sbb mov pop adc cmp lahf jno mov mov jge fisubl dec jl xchg loopne jno jmp (bad) dec add inc into pop inc add sbb cld and jge (bad) jmp push or test add iret sbb aas test and iret dec call adc inc sbb ret push in sbb and mov jns or mov inc pusha xorl mov lods call inc push push imul inc jbe inc mov add (bad) sub insb mov pop movsb dec inc in shl xor jb mov or sti (bad) out addl or (bad) or add mov nop pop in adc enter cmp aam ficomp mov mov push (bad) arpl mov enter add jne xor jmp (bad) and imul daa adc push je or push push inc (bad) jmp movl mull pop adc test xor loop fcompl cmp iret addr16 in mov out mov sub ds sbb imul stos pop frstor mov jge lds pop test push arpl shll mov mov (bad) int addr16 in cmp mov dec mov push and mov mov or fdecstp adc pop shr hlt icebp xor jle and mov cld shll stos stc cld xor mov push mov bound (bad) add push dec insb pop sub icebp cmp push loop xor cmpsl dec add jae mov fistpll jg dec outsl xchg sti and adc xchg fwait mov clc xchg cmpl mov js inc incl mov sub fnsave sbb int incb pop fdivrl scas outsb ljmp shlb jnp out lret sub loopne or or xor das aas rorb push push movsl jl fmuls sub push cmp outsl or shlb popw sbb xorl inc insb push in mov sbb mov scas pop test (bad) cltd and dec (bad) in mov jne lahf sbb xor inc push adcb test sbb pop pop stos addl xor and push cs in or xor and lahf and pop push lret push aam in lahf (bad) fsubrp enter and jge loopne xor push cmp and je out lret cmp lret mov mov roll mov add jne mov mov insb xchg cmp fwait mov shll sub sbb mov pop push jo int aaa or pop fwait cmpsb inc mov and imul out nop push movsb ss out and sbb pop or and jno sbb shlb arpl jae (bad) lods lea dec fbld adc sbb push sbb inc inc pop popf call jmp pop jmp add lret test rclb jp and adc sbb mov pop cmp in push imul add (bad) int mov fldt lods mov faddl fsubs ret push insl mov pop cmpsb adc cmp sub push stos lcall push rorl pop repz lahf lret dec int sub sbb and (bad) (bad) flds test mov out (bad) push adc jo scas push jmp lret in inc cld sub push dec incl xchg pop sbb cwtl jae into mov adc dec ret push pop dec jbe inc push pushf add add divl mov dec loopne insl sbb nop xor mov outsb sbb scas adc subl bound test push cmp add mov nop xor dec jb mov cmp xlat jno cli jle sub stc popa pop lea add dec fdivs outsb and mov outsb test lcall lods insl adc pop mov ja rcll imul xchg dec xchg repz and push rol lahf push or xor test loope cmp aam xchg inc mov test adc push mov lahf sti (bad) call outsb ss add into sar inc in adc subl call add inc mov data16 popf sbb jae adc jmp into rol lcall test inc outsl lock xchg stc sub mov mov xor cld sbb or push push mov add cmpsl dec sahf adc mov pop movsb iret fldcw mov or jle sti mov int3 or jge adc imul imul mov (bad) jg or sub cs pop and cmpsl mov sub (bad) push jns add add (bad) push dec int3 push out jg aaa out lcall jns daa adc data16 add mov jbe popa add inc clc dec inc outsb cmp xor adc and and movsb int3 out cltd (bad) movsb add mov sbb sahf into les mov cld sbb rclb (bad) and pop jge or xchg loop lods cwtl out inc jae xor sbb mov xor rclb call jbe mov cmc inc mov xor jge nop dec cmpsb jne fiadd dec xchg sbb cmpsl aas add adc add sbb imul and dec fwait int insb mov add mov aaa out xor xchg insl sti add test ljmp push adc dec insb les jl mov xchg adc jne (bad) xchg or xor insb loope mov int3 jle lcall dec das stos aad sbb and add mov jbe test mov roll push movsb jecxz or pop inc add adc pushf pop mov in mov sbb outsb fpatan leave add pop jno xchg adc test (bad) int3 nop dec add xor ret out push fwait cs dec push sarl out repz test int xchg in mov pop ret (bad) and and jmp adc (bad) mov jg or sbb mov mov ss (bad) out stc mov ljmp pop std add adc incl push mov adcl xor sahf sbbl sub pop fstpt sbb mov fiaddl cld mov or jl jb daa test (bad) sbb mov orl push dec mov xchg push jecxz subb or (bad) jae arpl popf cmpsl xor push into mov or shll repz out imul dec movsb jle sti adc mov fdivs and and push jmp (bad) nop inc inc mov out (bad) jp and pop sub xor mov sub lods pop outsb hlt sbb mov mov push mov shrl inc xchg adc jl xor pop fucomip cmc inc dec clc addr16 int mov add and mov hlt lahf (bad) out addr16 aam cli fiadd bound cs popa outsl mov and push sahf mov mov or jbe adcl ljmp or ds (bad) lahf (bad) inc push pop adc inc bound push gs sub fs dec cmp enter push adc mov ja in in je push cmp fiadd pop jge dec or pushf jl mov add (bad) adc sahf xchg ja packsswb inc nop sub mov mov lds je mov inc xor push dec fwait jge add add enter xchg mov dec sbb pushf jns andl sbb jo jmp add mov mov imul movsb jo (bad) jae (bad) mov pop mov loope cmpsl loope pop test add adcl gs testb add inc hlt ja mov ret scas lock jmp add aaa lods fstpl repz dec xor jbe push jb repz mov jmp ss xchg outsl fucomp orl add xor in inc je mov ljmp inc xor lds add js lahf cwtl incl fldt add xor int xor push out xchg add lock (bad) (bad) push pop ret dec (bad) pop jecxz lahf lcall push xchg push arpl mov inc xchg xchg push dec sbb nop in incl push xor faddl xor subb mov mov aaa cs xchg in jle sbb fimull stc mov dec into test dec psrlw jg sbb ja out jl loop (bad) repnz push fstpt pop push pop jbe repz out sti add inc mov jo sbb prefetcht2 cmp (bad) popa cmp (bad) pop mov repz sub imul mov rcrb xor (bad) stos or inc mov mov repz stc insl adc daa popa or hlt addb ljmp pusha mov rolb pop pop in fwait mov mov xor sbb jno pop pop mov shrl loop jbe add xor sti dec inc pop out mov incl dec xchg push into mov ds pop add jbe pop orb and xor or das fldt or adcl and mov inc pop jne mov jnp push mov aaa sbbb stc stc mov mov cmp push mov mov cmpsb inc ret fiadd xchg or sbb out (bad) push ss insb (bad) mov inc xor jo lret (bad) add xor add push jg adc dec sbb incl (bad) cmp mov inc xor mov xchg inc incl jb mov (bad) pop out sbb in add add (bad) xchg jmp cmpl and and call fucom or fcomip stos inc mov jge test call or sbb jne jg inc sahf aam imul push xor add add xchg iret jnp xor pop out jnp or int movsb push (bad) mov adcl repnz lret dec cmp sub out (bad) ret push and mov xor sub and push add mov shrl and daa dec pusha sub icebp inc jp cs loope pop mov shl push fbld faddl xchg or adc or stc mov dec test xor outsl mov lea or addl lret lret sub repz xorb (bad) jb je pop inc in cmp data16 or jnp mov mov outsl stc inc jmp mov imulb pop mov push (bad) add push pop cmpsl aas mov ror or mov xor jge inc fisttpl loope xor (bad) daa jno out fiaddl es add pop cltd movsl adc nop jecxz mov sbb mov jne aas or insb ret mov out xchg push sahf push mov test mov mov (bad) mov lods jl adc subl loop ljmp andl int lock jmp cmp ret mov nop inc adc inc fsubs push imul dec fs sbb fistp mov frstor mov pop repnz push mov pop push sub xlat mov ja cld (bad) xor hlt outsb mov idivb aad clc inc mov inc (bad) sti cmpsb adc ret pop std sub mov and int3 mov and push adc dec imul lret call jo push es lock mov (bad) int mov imul sahf mov stos and nop jne rorl pop pop jl fidivl xlat dec jge fwait idivl gs movb out and xor cmp sub hlt xor add mov lods xor test push push inc adc mov imul cld in add outsl push push imul frstor xchg add insl mov mov jecxz,pn lcall mov fisubrl sarb (bad) ret nop inc gs mov fwait jle inc inc addr16 lods daa and push (bad) or mulb fstpt mov push xor adc stos lods (bad) fdivrl dec push es jb and add cmpsl in mov imul mov or sbb cmp ljmp ja adc aas mov (bad) mov add adc mov mov adc add out jo sbb popa insl mov arpl pop xchg or loop pop faddl fldl test jbe mov mov mov stc fmull jge out lea xor insl adc pop into xchg sbb and or push mov (bad) (bad) mov adc (bad) mov pop inc enter push cltd cwtl loope mov fcmovb adc mov ljmp inc lcall inc push mov sbb scas or mov loopne pop sarl mov insl push cld cmp jmp ss mov mov arpl mov push loopne std jae loope sbb ret leave pop cmp and bound push loop fist cmpsl mov xor mov (bad) xchg adc push (bad) lods nop pop call mov pop ljmp push mov or mov mov movsl add int push nop add add and and lods cmp add std dec daa lds push movsb pop jle inc jp incl stos arpl daa mov mov out pop push cmp mov sbb lcall mov and in lret mov sbbb es mull ljmp jmp jno adc push in leave add or out lret ds cmp fmuls or sarl cli enter xchg int3 mov add dec sti enter push push dec loopne or dec cmc push loope in insb and cmp push ds and sbb jae sub pop sub xor dec mov sbb roll imul xchg mov push add mov stc dec add addr16 out dec xchg add add jno fadds fldenv pop les popl daa and cmp add adc add sub inc mov jg push rolb add rcl out inc pop mov cmpl je and sbb adc sbb bound sarl mov scas subb inc loope cmp pusha jecxz test jg mov movsb or ficoml (bad) fisub jb test inc sbb jno cmp adc xchg cmp (bad) jge addr16 aam xor es jle sbb ret cmpsl lds pop sub mov fwait mov dec xor loope adc sub out inc stos fwait js std jbe out ror clc mov iret roll hlt jl mov cld push jnp cmovb adc inc mov jecxz sahf daa roll mov sti mov lcall add inc add idiv mov mov lock mov dec and add adc fwait and fidivrl and rorb (bad) rcrl add adcl xor pop inc popa das lret int stos clc cli test sarl mov ljmp subl faddl push test jg roll adc ds (bad) jae mov add fwait (bad) lret out andl movsl pop push ss or (bad) dec stos xor and imul add and out adc cmpsl jl repnz out clc xor jnp dec adc (bad) ret ror fiadd (bad) jnp imul jnp,pt xor mov push adc fs rolb jle mov call lret mov insb mov enter mov xchg ds push push cmp sbb add testb aam inc loop cmp in push mov add push cmp mov in sbb jle adc dec pop mov adc sbb dec rolb std (bad) ss faddl outsl lahf hlt mov loop into ret inc mov add adc sub pop push mov mov jmp repnz test push mov incl je roll fidiv dec andl mov subl cmpsb popa (bad) repnz bound ret add dec incl ja push cmp mov iret sub add lods mov test imul (bad) dec sti outsl add and or leave add outsb leave fdiv jg xorl nop jnp push (bad) je push bound arpl divl jle imul into pusha int3 or push add lds xchg dec inc call pop and xor sub loopne add add sub scas fimull imul jo cmp out inc orl fsubrl push ja jmp or jp cmp minps imul xchg xor pop scas rorb mov jp int addl subb mov sbb cmpsb sti adc add or inc inc adc mov mov add in add cmp jge sub jbe mov xchg loop or or dec nop loop mov cmpsb dec adc inc (bad) or inc add out or outsb mov outsl pop cwtl faddp (bad) and and add (bad) das bound pop lds rclb dec mov sbb adc stos lret ds push pop mov in adc bound lret insb sbb xchg sbb pop scas orl data16 push scas (bad) shlb out insl push jecxz mov jecxz mov js jp jmp mov mov adc outsl push movsb out xor mov out inc lea pop push cwtl mov lar sbb imul push jne xor pop mov sbb ret std roll in cwtl rorl repnz push adc out pop leave push jmp lea ljmp add sbbl fwait mov fsubrs cmp data16 and int push (bad) enter js imul insl nop dec movsb ss sbb daa jbe xor inc or popf jg call sub push stos ja (bad) sub adc jecxz xchg je mov pop aaa testb je cmp lahf rolb or test cmp mulb xor icebp inc aaa mov xor mov jnp ficoml sbb rcl nop dec mov sbb push int ret and inc lea loop aas out inc jbe std push std in inc arpl push mov sbb ljmp cwtl in ss call ret xor mov mov cmp adc aad addr16 mov adc dec lds sahf pop inc fcoms (bad) cmp push sub lods fcom les call adc rcll jae pop xchg int3 mov xorl fisttpl fsubl add enter fdivr nop jnp inc sbb fsubrp inc jae lret adc mov or fisttp sbb rol or mov int3 (bad) fwait xor xchg jl inc lock (bad) xchg cmp push rcr push adc inc lret xchg cmp (bad) lods das movsl push dec sub inc inc (bad) cmp imul inc inc pop hlt iret addr16 subl push sbb or add jle mov cs loopne mov je mov jp and daa leave pop mov incl mov mov xchg cmp push icebp (bad) rorb cmc mov (bad) xor sbbl lcall sbb psrad mov dec rcrb xchg or imul js cmp or add cmc test nop xor rorb in fwait inc add dec ds addr16 (bad) out in faddl fadd mov cmp cmp cmp sahf bound (bad) adc fistpl adc xor scas add imul mov add mov fiadd ret test and repz xchg or leave sti cmp cmpsl cmp cld arpl pushf inc jo add mov push sbb mov repnz add testl mov or and cmp pop adc movnti or movb nop fldenv mov cwtl add mulb (bad) data16 or cltd popf sbb pop lahf mov (bad) rcl lods dec and mov sub or int3 add pop xchg mov decb mov mov js gs inc sub xorl jle pop cmp (bad) sub nop enter imul dec (bad) pop aaa inc call fs add mov pop mov aaa mov sbbb push les shr cltd jne setge cmp dec dec stos into inc pop mov inc sbb and pop daa inc out dec and fildl mov mov dec add cmp mov pop mov data16 jmp add pop pop mov inc push add in mov sbb movsb outsb add mov jae icebp or mov mov push jo insl aas daa std insb inc ds push and push pop inc xchg mov aam jecxz mov roll and dec inc pop and xchg incl mov aas aam imul daa inc leave mov icebp xlat mov cmp push lret fdivr loope cmc or add push adc outsb pop imul adc pop fmuls jl adc pop cmpsb iret inc jl stc mov mov int3 xor pop mov push sbb sbb inc clc and ljmp mov arpl add loope sbb outsb push sti sub adc jmp push xor push inc lds imul cld cld xor dec pushf mov in or test in fs roll xchg push jecxz push and push daa inc int3 dec or addl push call fildl pop test lods mov xor leave inc in cmpsl addb inc lret xchg std jae sahf (bad) xor repnz push cmp sbb lock mov add outsb mov xorl xorl jae lds mov cmpsl cld push loope adcl and jl cmp fxrstor add fist lahf and ja sub mov cltd mov sbb das outsl (bad) add xor sbb xor outsl and (bad) mulb incl mov (bad) sbb add jp sbb leave fs and and inc loopne sarl insb mov mov mov mull add xor ficomp push sbbl shlb push movsb dec adc sbbl ret cmc notl cmp push mov outsl adc cmpsl sbb sub test popa cmp fidivrl xchg pop push loop lret lock adcl pop pop push orl xor push hlt push test cmp adc mov aaa pop ja pop or jmp pusha xor cmpsb in push add adc rol mov xchg icebp jle mov lock shr sbb jns es cmp icebp inc dec jbe mov add add outsl clc test sbb mov inc xchg pop and out push loope push imul mulb scas in lret (bad) adc or addr16 push sub popf and (bad) push jbe subl fadds jno into shll add movsb jp sbb out xchg outsb mov daa mov loope (bad) shll pusha fsts inc gs js mov xlat out in inc fcomi iret add shlb jle and (bad) (bad) cmp gs sti daa xor add repz popa add push in dec cmc add iret in jb mov loop fisubl add jno in mov xor insl jecxz push outsb mov movsl daa inc aad mov xor mov xchg sbb jbe mov stc and xor cmp outsl aad add aas imul push cs jge test pop fcomp jecxz and pop outsb fcompl repz mov out je jo aam rorb ds (bad) xchg push test inc add sub mov adc loop fadds arpl xor arpl jmp scas arpl fwait mov frstor lock flds jmp (bad) dec popf test sub mov out or push sarl nop ds je xchg sbb pushf (bad) sbb push jbe fldt rolb outsb push adc sbb cwtl sub add repnz call or xor hlt test adc int inc lds jecxz dec xor jno lock or popf cld adc add jno xorl sbb test neg mov or inc fisubrl iret (bad) sub cmpsb iret fldt daa enter je dec cld and orb test xchg adc mov or fldenv push push push mov mov mov sub mov jae push adc push add pop repnz jg cmp xor int xchg xchg outsl in sbb pop sbb mov arpl pop sub scas in ret xor bound jo cmp push dec pop mov andl inc xchg out mov hlt popa test fisubl or mov or movsl into mov pop (bad) xor fcomps shl push dec (bad) bound mov cmp ds add les in incl or fs jnp push fiadd adc adc int3 int add pop movsl ds lret leave mov sbb push push ss test jno arpl xchg add adc fcmovb mov into push add cmp sbb pop xchg fcom fsubr ret jmp add push stc out mov lahf fldt cmc popa movsb jbe sbb sti sub cmc out in inc ss (bad) idivb inc fdivs popa test (bad) sub fldenv sahf repnz add je lea add test loope outsb fdivr mov xchg divl getsec flds sub packssdw mov mov inc lret shll pop or aam push daa sbb mov dec loopne mov inc mov in insb xchg fistl (bad) pop xchg dec sarl push imul in mov popf lahf rolb movsl mov jns fisttp xor add and mov or movsl push stc xchg mov sub aam cmp emms sbb mov cmp push outsb xchg or mov (bad) int push lcall int pop add mov fldenv lcall sbb cmp adc push xor and mov fiaddl mov lods loopne sub jle enter call mov push push push sahf sbb sarb sub ds fldenv data16 push or (bad) addr16 call cmp fwait repz pop xchg push mov int sbb dec mov mov cmc data16 inc mov add orl dec jno mov pop iret test mov add ret sbb mov xchg dec ja aas xor lea out pushf jns or rcrl loope cmp dec mov std dec outsl stos add (bad) lods loop clc scas push push ds mov outsb out out nop adc orl xor push push cli pusha push and les fstpt scas subb fistpl dec pop mov or mov inc and or mov mov mov das rcl push adc push inc push (bad) in (bad) push jns rcll cmc fadds jns and jns cmp add dec dec movb lea fisttpll add fcmovnb inc or cmp inc mov push push stos out adc mov inc dec scas aam sbb rol jmp sbb cmp cwtl inc xchg nop dec (bad) dec sub jbe pop shrb (bad) neg dec lds loope cli (bad) add xchg dec test fmull xor sbb sbb mov subl xor jbe inc cwtl jmp inc in incl or mov outsl xchg std enter es sbb mov fadds pop xor movb add mov out add sbb in adc and dec in adcl or sub fwait adc cmp mov adc aaa and enter add mov hlt add nop add and xor add (bad) mov pop out fnstenv movsb jge les rol ret inc pop xor or cmpsl cld fwait dec pop ret jl and mov push fisttp inc je cld sbb subl mov dec pop insl sti nop inc clc jmp cmpl iret mov mov in xorb cmpsl test add xor mov push stos pop inc xorl pushf popf jnp jno es (bad) sahf in mov sbb pop test loop cmc and sahf loopne sbb cld nop and xchg push lret popa test push int sbb pop mov add pop (bad) jbe flds cltd sub cmp and aaa cmp mov jae fbld push cltd cmp int loopne pop ss roll pop pusha (bad) in adc and inc or movsb adc insl faddp roll movsb cmp out (bad) insl add test loop adc data16 pop js sarl pop fucom and xor js add (bad) mov xor stc and (bad) and and fbstp sti mov fildll cmpsb imul pop mov pop mov add mov loope cmp xchg fsubl mov pop adc cmp mov rorl mov cmp addr16 and or bound inc xlat into and stc insl loop jp adc (bad) lcall cmp dec in pop cs scas add lret lock (bad) jp loop sbbl sub jge add jecxz adc ss hlt pop loop jbe sub and loop sbb sbb daa out je xor cmpsb jmp adc test out loopne inc loop aaa sbb sbb cmp cmc mov mov movsl jno out loop rep push sub xor or push fsubrs in inc mov mov add dec lea add call pop cmp mov cmp sub push stos out sbb sbb xor mov out inc insl xchg inc outsb daa jp push push mov les insb shrb rolb lret pusha inc mov sub mov cmp mov dec adc cmp push add push lcall int sub aad call int imul adc outsl out sbb jno mov inc add inc inc aaa insl cmp push fs icebp inc sbb xchg cmc loop test add adc and and sbbl mov sbb jle call (bad) fsubrp and fbld push adc xorb xchg jmp test aad xor insb leave add xor fldenv jmp pop push adc mov jno dec out mov push jno lods (bad) jo pusha fdivrs add jp xchg or enter jp xor enter inc cmp sbb (bad) mov (bad) daa lret lods hlt (bad) loop xchg inc rolb pop adc imul fiaddl lods mov (bad) roll mov mov mov fsubp lcall add sub ret mov push inc sub lret stos mov push in cmp ss xchg adcl cmpsb pop xlat jg sahf hlt punpcklwd dec fidivl sbbb inc mov orl pop push enter add add mov fsin adc push sbb mov lahf pop addr16 pusha fwait ja repz call xor adc testl mov cmp (bad) add mov or push xchg cmpsb notl fiaddl add lret jle pcmpeqb negb mov xlat insl imul mov enter jp rolb test mov inc int sahf pop push inc aad jle inc inc dec cli repnz ja cwtl push xor into dec daa rol push push or dec mov push adc dec mov add movsl jl arpl add sbb lock jg inc movsb addl inc fiaddl hlt push bswap and leave pop popf cs (bad) or pop aad inc xor push ret (bad) lds dec jp lods mov cmpsb in xchg add jmp xchg or adc sub xchg loop lea mov cmp cmp push dec in jno cmp das inc insb mov sti mov (bad) mov test sub popa mov es rcl pushf mov sbb pop iret adc or int3 and ljmp loope xor dec sbb inc or rcrb cmp or psrld cmp add cwtl push sbb sbb sub sbb std push inc pop fdivs (bad) mov subb dec lods sbb jnp mov gs aas dec movsb inc mov ljmp cmpsb cmp mov cwtl and enter sbb pop mov gs test jp outsl xor mov push jle or out pusha inc lods push mov cs and xchg mov insl fnsave xchg (bad) lea (bad) adc ss mov fcoml adc aaa inc pushf es enter add push rcrb (bad) dec ret mov inc sbb push in xchg stc mov pop leave sbb xorl loopne stc push stos sbb mov mov push lahf shl punpckldq loope add stc and fistpl out test xor loope repz mov je movsl pop mov scas fsubl clc cmp inc (bad) psrad xchg inc mov testl or pusha adc mov and test rcr push pop mov mov (bad) xor mov mov aas or push dec inc lcall xchg xchg call cmp out inc mov pop push es jl cmp sub xor mov (bad) jno or cmp mov leave pop cltd in inc popa call outsb popa adc inc fidivl sbb add cmp push xchg push push cld and jbe adc adc std and adc inc mov sti jle adc hlt lcall dec or testl or or dec jnp leave add unpckhps je jg in sbb sti mov add incl aad fiaddl dec xchg pop mov pop xchg lret mov out inc out inc cmp cwtl fistpl nop pusha mov push loop adc (bad) jg jg push mov mov in les es inc xchg mov mov cwtl ffree lods cmp (bad) pop mov xor flds pop push xchg mov mov test sub mov (bad) out int3 cs mov fistpl divl cmp jp call adc fidivrl or cs push incl adc xchg les scas sbb mov sub in loope add cmp in sbb or xchg cmpb bound inc lds lods (bad) pop pusha je and inc jmp (bad) dec or mov inc push jp sbb dec popf mov mov mov movsb push cs cmp xchg pop jno cmpsb js (bad) xchg loop jp dec iret imul xor sub push arpl shrl out inc lods mov dec dec outsb dec sbb insl push int3 fistpl movnti and outsb sbb mov mov std fidiv cli test mov fwait mov add enter (bad) pop flds pop imul std cltd in mov incl ret (bad) sbb lcall dec sahf in jae mov mov and mov cmp cs push insl std pop clc mov mov mov or xorb insb leave fidivl mov sbb or or sbb jne sarb fdiv jp rol xor mov xchg jne inc xchg pop outsl (bad) in movsb cmp popl pop xor std add inc xor cwtl mov es and les jecxz faddl fidivl adc cltd outsb jns fiadd es mov das loopne outsb (bad) add mov xor (bad) loope push loop sbbb jle pop imul and in push jmp fidivrl push scas push mov mov bound rcrb insb nop or (bad) aas and inc sub cmp dec cmp fiadd out in sbb insb shl adc ffreep testb bound fucomi (bad) xchg mov lds xor test cmp dec push push popf xchg clc (bad) or lods or or inc adc push repz lods movb and and add fdivs js push outsb sub and xor insb inc adc or mov inc ljmp loopne ja or cmp and mov or scas rorb or aas push mov mov and mov jle push out mov pushf pop fldenv cwtl jecxz mov out (bad) shrl push inc aas jmp add out fwait in inc xor outsl stos add fdivl jne scas pop xchg add and addl nopl inc aas mov sbb ret inc push mov add (bad) sbbl xchg lcall psrad rorl leave add lods pusha or add adc shll jp cmp ja adcl jl mov sub pushf icebp pop scas adc dec cltd push sti xchg outsb les jmp dec add loopne call pop mov inc or pusha pop lahf popa mov es sub jne fbld push push push and test gs inc sub push cmp adc outsb les adc adc lods subl xlat jne int3 fbstp xchg push add add fisub and and ja jle fprem1 out inc lcall daa xchg pop dec imul inc jno enter sub sbb add cmp (bad) pop loop mov popf stos push icebp les pop mov add and adc mov fbld inc sub call mov popa cli leave add mov ljmp inc mov push pop divb pop xor inc jg or mov xchg mov insl ja push fidivr fimul mov stos push add and fwait pop adc insb imul stos mov sahf push jae mov (bad) dec (bad) sbbl jns loope cmp and mov les sub in sub sbb or and test dec adc add ss sub add cmp addl test mov aam sbb mov sub bound sbbb adc add sbb adc loope sbb inc int into cmp clc ret popf push mov adc jbe sahf fist jmp and das loope roll scas cmc xchg or mov (bad) lea inc leave add or fadds mov xchg xchg jg inc ret lods out add iret outsl mov mov mov cmp (bad) dec cmp addr16 cli lock lcall xor cmp adc add inc xchg loop enter and or subb popf scas aaa loopne or add cmc in pop mov cmp cmp xor aas scas aad sbb inc js orl inc mov aam mov cmp adc leave add and and xrelease pop enter cltd lock cli leave push jnp (bad) (bad) xchg adc pop xor shr sbb sub add mov in (bad) nop inc cmpsb jecxz mov aad in mov inc xchg cmp adc sub lea rclb fisttpll inc adc jb lahf sbb aas push or jns add stos xor outsb inc aad in aas rcrb mov sub cld nop xor pusha mov pusha adc fiadd out inc out fcoms pop lods sbb or imul cltd es hlt or mov lods repnz fstl mov xorl inc int add dec in jp imul push adc call xor xchg sahf mov inc lock xchg mov push add incl sti xor sbbb ror mull jbe jle jge cmp sahf adc sbbl adc sbb pop roll adc lahf mov int3 xchg pop and adc mov into sub je xor (bad) cld mov cmp je add push test int scas outsb fldl xchg sahf stos pop ljmp insb jo cld xor int3 shll add aas mov dec or fcmovb (bad) gs and es out out mov xor into jmp xchg test add shrl fcomi inc jb xor rorl inc jmp mov sbb sub (bad) xor and add repnz in fadds jmp pop and arpl xor (bad) xor mov or lret loop inc ficompl (bad) popf sbb mov cmp (bad) fdivl adc and (bad) or xchg pop add xchg jbe mov mov cmp and cli xchg mov in xor xor cmp xor jg add fcomps lret add mov cmc loop pop addr16 arpl movsb cmp iret jp mov adc lock testl ss adc adc mov xor and mov xchg xor adc movsb cmp jo dec sub xor mov (bad) push add fmuls dec test inc int stos push and jbe insb negb add or pop loope jno ffree add cli mov adc (bad) add test test pushf add insl mov sar dec cmp shrb imul sbb jge ror (bad) or fisubr sbb das add add nop jg jo (bad) mov idivl sub jae mov mov lods outsl loope jb mov inc into and push (bad) mov pop lahf and push jae and and push iret mov cmp or cmp or stos arpl add xchg dec jmp movl (bad) notb (bad) sbb into pop stos mov aad push (bad) sub popa push mov inc stc push jns (bad) and adc push sbb cmp adc fwait insl insl mov inc mov in and push adc insb addr16 rol xor hlt (bad) (bad) sti fisttpl pop push rep and daa in test outsb inc adc into pop and rorb jl sarb in or pushf inc test lock iret les fdivrl xchg sbb sbb ss inc sti adc dec pop pop pop pop repnz int3 lahf xchg add es jecxz mov push xchg push xchg lods (bad) (bad) movsl add mov fcomip adc fcmove popf add add fsubrs add adc mov cmpsb adc negl mov in jae aaa xchg add das adc xchg cmovae movsl and xor xlat popa ja stos inc cmp mov lods cwtl ret push ss iret jbe sbb inc push mov incl flds mov incl out adc sbbb es inc das xchg cmp add les fmull js cmpl push fwait inc jb test dec (bad) inc jmp fidivl or add jmp cpuid (bad) fisubl inc push adc sti mov pop jg cmovb jg,pt add jne dec into push fs popl rcrb je loopne in mov fdivs jno mov add pop sub push int aad mov sub push pop push pusha push shrl xorb test mov pop push cwtl stos mov push int3 lret cld popa sahf stos popf adc mov insl lahf lret jmp enter les mov sbb out incl sub in movb imul pop ss icebp sub rcrb cpuid or movsb dec mov and sbb frstor inc xor in cmpl fs xor lret lcall insb call test mov add or jmp push in pop jg push dec das xchg jns cmovb incl in stos add inc xor push and push (bad) in cmpsb std mov or jo adc fisubl xchg mov inc push mov jno repnz fadds fstps outsl inc cmp mov divb sbb (bad) xor call mov bound aam dec movsb mov imul dec xchg stc pop fist out xchg pushf mov and pusha int3 (bad) test imul sbb dec jno push les loop incl lcall roll mov sub push shr inc es aas cmp and call mov ficompl fildll pop pop fidivl jnp data16 imul orl and arpl leave push pop add cmp and je jno and jg call and repnz std fmul mov stc pop orb loop jl lahf fiaddl in incl xchg inc movsl cmp mov push (bad) add mov pop jmp pushf scas js jbe xor add adc decb or adc negl cmpsl jge mov rolb adc and mov or mov xor jp or (bad) sub add into dec js push imul psubsw inc rcr (bad) aas xchg add cmp push loope (bad) lcall adc xchg adc or shlb enter js push ficomp rolb clc ret cmp push in icebp inc into pushf pusha std pop adc xchg lock lea fs mov and lea (bad) lea adc inc sahf pop adc imul push sub into jnp je sub inc out sbb cmp daa popa and pop popf test mov popa add xchg sbb xor pop push (bad) sbb js int dec movsl add cmc iret and xlat data16 and cmp (bad) andb test sbb divb sbb cltd ljmp int or dec and and sbbl mov test jb or dec fildll jns addl jnp fcmovbe mov push add jbe jge inc pop js push xor xchg or inc insb insb loop mov rclb lea xlat or imul xor inc pop dec ret cmp jbe cmp adc inc xor inc std xchg fisttp ljmp sbbb add into jno adc push ret fnop sbb inc cmp mov lcall jmp cmpsb push sbb jl sub push inc es adc xor je and xchg add xor or adc ret mov jo imul sbb fisub xlat jmp xor out scas arpl inc enter (bad) mov sbb sbb xor cs and xchg inc test xchg pop push mov or pop mov cmp xchg add gs add xchg sub bswap add adc and test or subl int3 clc outsb daa cmp roll in mov mov repnz lods adc adc xor push dec sub push add int in push incl pop xchg cmp sar add cmpb hlt mov lock adc dec je js and les shlb add mov repz mov (bad) movsb je ficoml push jp add mov cmp inc mov sbb cld rcrb sbb sbb fcoms xorl bound sbb push fwait ja lret mov mov scas in sarl ljmp cmp inc jns and mov cmp rol aaa (bad) inc mov pop cmp arpl push (bad) imul add cmp jne mov into (bad) mov test arpl int3 jle outsb arpl inc (bad) (bad) jb arpl xchg rolb repnz inc jo dec loopne inc cs sarb inc ret out cmp push bound out or negb movntps mov (bad) mov fmul add lods pop xor scas add cmpl out lcall pop and test mov push push jnp insl popf popa cmpl or out rolb jmp jo mov or mov cmp push nop pop movsl (bad) jo pop outsb or jp or les jno rcl push pop icebp add xchg lods int dec add pop push (bad) adc cli and arpl les add shrl xchg out pop (bad) mov add divb pop out negb push roll shr inc add (bad) push sbb mov push push xchg out incl cmc nop das adc push cmp mov push adc sbb add dec push into fdivr int push mov cmp (bad) adc mov imul mov add xor faddp and or in adc mov (bad) fs gs inc inc (bad) enter adc pop out roll aad and ret (bad) cmp iret jb inc (bad) jb push sbb sahf and push and movl fwait ss cwtl and and imull fwait jl dec in cmpsb incl sbb dec or fwait arpl inc inc mov loop lods mov inc cmp pop cld push xor dec jmp mov shlb daa bsf (bad) or or or cmp xchg xor push (bad) xor sbb push mov sarb fisubrl subl in subb idiv enter (bad) fsubr ljmp inc imul imull cmp es push (bad) ljmp adc sbb sub add or mov fnstcw idivl jae imul fwait cmc or pop and mov loop xchg cltd mov flds scas cli or cmp lods stc and push mov fildll mov dec scas cmp fs sub data16 cmovns sbb cwtl (bad) sahf or je hlt dec sbb and add cld mov pop mov mov (bad) mov mov sbb cmp or inc stos mov mov mov and and fmull inc call xchg xor mov add stos imul out stc and jmp add and mov popf dec sub insb cmp mov rcrb xor mov inc add add stc test jge add sub notl pop or rcl (bad) push out cmpl jae (bad) ss lea adc rol lret mov pop mov pop mov inc jecxz add xor pushf daa adc inc out call fs fidivr or xor mull das data16 call mov cmp in mulb lahf push std sbb testb ss jo imull xorl inc push dec cli cmpsb cld dec mov sub xchg fdivl sbb bnd les popa cwtl lock jae jo mulb and push push inc popa or int adc stos add sbb (bad) bound and sarb divl rcr js ret jg fstpl jl mov das int pop mov pushf pop mov (bad) dec in movsb nop xor andl sbb xchg adc in stos add in adc mov pop dec fisttpl mov xchg cmpsl jl pop sub or es inc mov pop xchg loope (bad) cld or imul out incl mov scas push les pusha ss cmp shrl cmp test xor xor cli lods std movsb fstpt mov loop das fdivs jg inc lahf push push js xor (bad) xchg out mov fnstsw mov push shlb shll rorl popf popf or into mov inc sbb jne mov xchg shlb pop pop sub and jg ja sbb mov mov mov sbb enter and cmp mulb jnp xor sbb xchg mov add dec cmp add data16 in loope dec sbb mov mov mov in mov adc jns xor adc push push es addr16 cmovle xchg add pushf mov push aas or (bad) xchg add repnz push jo std in inc mull enter sub lcall mov int3 test mov xor cs inc fcmovb fucomp cmc xchg xor mov and or add cmp jecxz mov out mov outsb mov or pusha xchg jo push jp and pushf insl mov push inc sbb dec nop insl push rorb mov jmp add scas lods int test pop add fldl jb je icebp inc std sbb cmp fwait (bad) adc mov std nop sub sbb and lock add add or add in lcall stos or repnz std popf lock sub push in dec pop inc mov outsl (bad) jmp test push push cs inc icebp pop mov fwait dec fiadd cmp rorb hlt mov push les mov int repnz xchg adc mov add loop cmp sub inc inc cmp cli adc xor sub icebp mov sbb add sarl out repnz push (bad) aad or ss bound in lock mov xchg sbb push aas out aad fisttp ljmp inc mov xor add and sbb lret testl cmp mov lcall dec push jnp sub lret insl (bad) and sarb inc and mov hlt inc dec mov test jmp xor or fstp pusha andl or cmp enter push mov (bad) mov sbb stos dec cs mov pop outsl push inc aam pop add movsb or add and sbb or mov call lods pop add mov sbbl or mov and cmp call pop mov subl xor xchg and in (bad) add inc subl scas cltd xlat test jge adcl imul dec dec and add fwait xchg insl push adc add inc cmp leave repz je mov popf test test sub bound ds jb xorl jae sub xchg mov (bad) sbb jp pop cmp daa mov or mov push (bad) cwtl iret push imul mov cmpsb (bad) add sub xor (bad) cld ds js sbb xchg jns xchg adc cwtl add inc outsl push popa fnstcw push xorb hlt adc (bad) inc pop call lcall xchg dec int fistl dec push aaa sbb call or loope ljmp push add shr jg stc and icebp pop xchg ret xorb aaa in ljmp xchg xchg fstpt mov or push sub push shr mov or dec cs loopne inc lret inc xchg push pusha in leave add outsl add xchg xchg aaa mov insb jp pushf cmp sti repnz mov jno mov xlat test xchg or lret xorl cli xchg insl push xor stos sahf and xchg sbb ss ficoml lcall negb lock jnp rcrb inc push aas mov inc call test stos pop test jmp je or cmp jns mov fdivr mov aas xor mov push jecxz xor nop xor push (bad) orl fdivl sbb xor mov inc outsl das cmp pop arpl incl imul (bad) push xor das mov std mov mov pusha inc (bad) dec test movb mov xchg push push daa add loope rclb xor adc sar jg sbbb xor aad aam pop xlat mov or lods mov daa mov add lds add movsl lods inc aas jmp push sbb mov jne dec popl cmpl fs call cld and add adc rorb pop mov push and mov mov xchg lods mov mov add shrl out cmp movsb or daa mov and sub or (bad) (bad) adc lcall testb mov adc add test push mov mov (bad) jo stos mov lcall xchg ja jb push aad sarl fstl or ret fimull scas add test sbb mov dec lods test aad in inc lahf fildll mov cmc fwait orb pop cmp adc pop scas sbb int3 and mov mov xlat mov push push sub add xchg ret sbb add lret xchg test daa sbb mov mov add and cmp cmc push add mov cmp add pop mov dec fwait add int sub add xor xchg fcmovnbe es lcall xchg (bad) in cmpsl outsb hlt adc sub inc dec adc adc inc in xchg loope stos or in sbb hlt in (bad) sub mov pop inc pop loope cmp jbe mov daa lods out push mov add fldl gs fisubrl add dec sbb mov pop int inc mov repz inc out (bad) and outsl sbb fiadd (bad) insl stos ret add popf lea aad popf dec sahf cs xchg mov in lahf and rcrb xlat es in mov inc repz cmpsl push sahf inc mov nop xor inc mov das (bad) add into std daa (bad) sub or icebp aaa roll mov out stos incl cmpsl sets or shrl popf mov inc jmp inc mov in mov jnp mov push jnp pop movsb xor xchg imul fsts sub dec sbb repnz xchg lea pop test pushaw pop push cmpsb jmp fdivrl movsl lods cmp pop test fs add mov out mov add jne mov outsl (bad) jle cmp xor mov cltd movsb loop mov sbb jg stc and pushf xor inc sub inc rorb (bad) ds pop insl mov pop fsub pop leave ljmp outsl fimull jno loope sub inc pop popa in popf enter pop loopne inc or (bad) outsb push adc lock pop xchg or out (bad) or and fiaddl mov je mov lods daa loop rorb jecxz enter xchg int3 out push test jg lods xchg fnsave or imul push cmp js dec push aam xor daa push jg add pop push xor lods cmp adc mov add bnd pop iret js and push out adc push ds pop roll outsl mov insl inc in daa xor cmp push cmp inc in mov cmp ret (bad) (bad) test insl cli inc mov pop lock insl nop lods (bad) fdivrl mov mov lods bound sbb jecxz outsb std (bad) jo cmpsl movsb mov add stc mov mov aaa ja hlt ljmp sub fisttpll test sbb fcmove add sub imul cmp shrb fsubs add xchg adc sbb out fs cmpl sarl mov sub jmp jnp mov imul popf and mov int3 ret stc sub and pop xor inc or adc mov or jge,pn out jp lds xorl push lahf and mov popf mov aam pop mov add insl sub inc shl ss lret sahf xchg adc ficoml pop mov or dec mulb test mov in xchg mov dec (bad) adc imul loopne mov fimull push sbb js pop and lcall mull cmp rcrl sti lods (bad) rcl mov add cltd inc push sub pop push shlb mov fs jo jbe add xchg clc inc fwait int3 data16 dec leave add adc xlat fwait jp repnz cmpl data16 or inc sahf leave faddl inc mov mov adc push arpl pop and push (bad) mov inc and jbe mov inc in sbb mov in pushf push das dec ret negb repz sub aas push subb iret bound mov cmpsl aad sbb shrl push icebp inc in sbb mov lds out ss mov mov inc adc (bad) adc or adc or xchg inc lcall sarb sbb adc sbbl pop adc mov cmp insb pop cmp testl ljmp cld nop push inc pop insb mov dec outsb adc fiaddl adc or ljmp out cmp int (bad) loope int fidivrl outsb in inc ds rol cmp cmc faddl (bad) add push (bad) xor in sub inc push add xor stos loope fiadd adc sbb adc negb xchg fnstsw inc ss xor cmp repz sbb (bad) out stc inc adc dec or out orl xchg adc cmpsl psraw mov mov xchg jg and lea adc and push add mov cmp bnd push imul cmp dec addr16 xor xchg pop outsb push repnz pop in sub fcom sbbl lahf add adc dec test mov push adc push adc lcall jge nop dec mov push cmp and xchg fistl dec push or int imul int ds inc mov xor push inc add push add mov jl ss inc lea inc aam arpl mov lea gs inc outsb adc mov xorl mov aaa xchg stos add push mov (bad) negl push insl pop int mov pop mov movsl push sbbl bound repz bound jge add cld inc mulb je mov adc mov mov std les fstpl rcrl cs test imull sbb xor mov aad push ret das std cmp pop push sub faddl jmp sbb sbb cli fdivrs je movsl jg (bad) (bad) dec sbb int inc inc sbb es sbb lret gs xor pop jns xchg or jnp js sub mov xor mov lds push mov cmp fadds cld and or mov inc dec loopne push dec cli lods and leave mov ss dec or push dec repnz hlt adc jb cli push mov enter fadds sub outsb mov ss jp sahf lock push jne mov add sub mov int dec mov cwtl inc inc push push sarl sub jae shr leave push rolb or xchg or ljmp pop adc cwtl xchg imul add and jnp pop mov pop data16 push je outsb (bad) jg push outsb andl rorb inc cmp popa and add cmc sub into (bad) push movsb out or xorl in adc mov in mov inc or pop ret dec add out int iret lock add leave inc pop inc ret fnstcw das (bad) push sub bnd push mov or pushf roll adc mov push out jmp jns add sbb enter or hlt test sbb add xchg outsl ja notb loop in add bound fcomp inc xchg add sbb pusha jbe and inc fmuls cmpb xchg movsb mov hlt mov cs or cmp (bad) lcall jge je push jg rcr subb in sub dec (bad) mov xor adc ds mov aam movsl and cmp pop rclb popa (bad) pop or fs enter inc (bad) (bad) inc lcall pop or add test inc sti jae xor sbb or jge mov xchg roll push loop jmp sets sub inc xchg xchg sub mov push cmp or xor pusha cmpb iret cmpsb in push gs xor mov lea xor pop jle jge and cmp pop sti jne sub xor jno into pop cmp pop jg sbb add mov dec ja out in inc imul mov and nop in (bad) jp push mov push lret into sub mov cmp enter loope push mov pop das sbb sbb es rolb cmp out sub rcr xchg inc ljmp call xor or data16 mov xor data16 out xor mov pop mov divb idivl enter stc loop negl lcall rcrb add pop stc pop popa adc cmp sbb dec pop jbe (bad) sub cmp dec notb mov jle sbb inc testb mulb pop add mov inc out add xchg (bad) int repz inc out (bad) popaw xor inc jne mov test ds das mov int3 mov mov sahf cs test insl popa mov mov xchg or and push imul dec je jmp add add test and jns (bad) cmpsl add orl pop insb ss sbb add movsl popf cmp out inc sbb (bad) aaa xor rorb mov sti pop stc cmp and (bad) in imul mov (bad) push pop pop fdivrs adc bound jbe xor xor dec imul aaa fxch jae frstor mov push cs add add ficompl jno cmpl imul jecxz js push (bad) adc jb sbb rcrl and jle inc scas pop xor inc sti mov call push jmp out jbe (bad) dec cld mov out and pop call cmp jge in ds and add orl push jbe fs mov sti pop cmpxchg push js lret cmpl cmp sbb sbb rcrb arpl push (bad) or fnsave ret lcall out insl xor add add mov mov hlt or push xchg push lock les jo mov xor sbb cs jo out outsb clc mov add ret leave add fs adc lock mov (bad) dec cmp sbb test xchg push sub movsb loope insb inc sub ret push push pop call or mov je jnp mov cmp int3 xor jb incl lock ret imul jo fadds mov int xlat sahf flds xor fimull or add pop nop addr16 cs pop jle rcrl push lret shrb and dec bound stc and popf push (bad) iret sub movsl add aam fcmovbe psubw sub add and cmp es push scas into add in mov rcll (bad) testl adc in (bad) or xorl and inc frstor nop ret mov icebp cmp xchg pop clc and mov call cmp jns bswap add into nop jno test mov es pop mov push pop leave add pop enter (bad) mov or inc add std sbb iret jne es xchg sbbb pop mov mov cmp pop inc pop insb (bad) jne cmp mov mov sbb nop mov faddl sahf shrb and and out push mov add (bad) jae mov (bad) push das fisubl xchg push test (bad) xchg push rcr enter push xchg dec pop adc repz jp jae dec fbstp inc std sbb jmp imul fldt adc daa inc mov es sti ror (bad) in inc je pusha pop cmp cli inc add divb popf enter pusha mov cmp push lock sbb xor inc sti jae add sbb or jne lods jge sbb and pop xchg pop xchg mov test xchg xchg add sbb inc adc movsl addl sbb outsb (bad) mov cmp add sti jae in sbb lods in mov out inc xchg add inc mov (bad) xchg xchg in lock clc mov mov ja add push push fimull inc add arpl movsl dec cwtl into sub pusha push adc add mov cmp cmp or add ss pusha (bad) (bad) jmp adc inc push scas daa cmp mov xorl sbb push jmp jl int pop push mull mov insb (bad) xor pop setns and daa pusha mov jp jae sti mov leave mov (bad) (bad) xor adc call cmc inc aas mov or in icebp stos (bad) xchg loope (bad) or fdivs lcall and mov call leave adc subb jmp popf lods aam nop cmc inc ret in cli out inc out rolb das std sub mov push push mov pop adc xor loop pop lahf flds shrl inc mov sti mov incl and call pop outsb sbb iret addl cmpsb pop ror cmp dec mov xchg push push adc scas and push loopne xor inc add lret add cmovbe jg (bad) adc enter hlt sbb pop dec cli mov push and add cmpl fadds mov xchg add inc dec adc and add scas fisttpll ja xorl fldcw sbb cmp pop push add adc push xor and lahf sub add cmp adc mov xchg or adc (bad) fistl (bad) or push lock std xlat mov cmc inc cwtl mov dec (bad) mov xor cli mov push daa adc jb cmp and adc mov sub adc addl adc aam add out inc add out xchg mov xchg (bad) ss dec arpl (bad) (bad) aam cmp movsb xchg or xor inc leave push cmp pop out sar add cltd sbb pop pop test jp je out inc fisubl fistp dec mov mov outsb jno inc mov arpl pop cmc stc mov dec loope test ret xor push mov test xchg loope mov in (bad) loopne jp add adc jae add jo test ss mov sbb inc jbe imul pop das xchg add push in cmpsl push lahf pop adc xchg lock (bad) pop sbb jne mov nop push mov mov mov pop mov mov outsb andl adcl add mov sbb lds xchg mov aas cwtl js jnp mov test mov xor subb jns ret mov call popf leave add push and xchg fdivrs mov icebp aas sbb xor outsb sbb dec jbe mov ljmp jmp or sbb test mov nop cmp cmp xor imul cmp mov xor add add jne adcl iret (bad) pop jmp xchg or mov pusha outsb add fdivrl lcall shlb mov mov pop sbb adc loop sahf dec divl sbb scas cmp or addl notb mov mov dec (bad) pushf neg add push mov xor and and or roll mov popa push add (bad) push pushf mov ds and fs fiadd into incb out ficom lfs cmp (bad) bound sbb sbb (bad) xor cmp icebp clc inc mov adc data16 push repz push adc (bad) cmp sub xor inc fldl cmp and or insb or pop fwait test adc pop lock push insb cmp lret ret insl enter call cli in inc push es in pop ja adc add lods inc movsb ficompl pop pop rclb mov paddsb js or adc aas in pop lret sarl pop pusha repz arpl dec data16 (bad) (bad) iret lcall (bad) jbe xchg jbe fsubl mov add cs jns mov push imul cmp or xor hlt jne xor mov dec roll sahf test sbb testl xor adcb shlb mov cmpsl mov pushf and xchg xor xchg lcall dec mov call outsb sub inc arpl push xor movsl sbb jno test (bad) or inc out cmp les pop (bad) xor bound inc and inc jo ficompl mov and nop gs mov adc or xor add stc mov dec stc ss add cs fadds fcmovu addr16 dec cmp sbb cmp negl inc add xor (bad) add cmp pop in and mov mov loopne mov mov or fcmovnbe sub les repz cmpb dec mov jmp rcl imul sbb lods jge mov dec and mov push xlat adc jbe inc push inc cmp dec les cmp adc and mov push push sub test ret es orl subl test outsb leave mov add xchg sti out inc mov iret jle clc insl inc fisubrl sub imul fsub repz fcmovbe mov mov sti mov jle and add jl popa (bad) aam aaa mov cmp push int3 xchg sti lea or push mov ret jmp cwtl inc inc pop scas sahf test cld in sbb inc hlt lret mov xor cwtl fs xor add sbbl (bad) cmp and hlt lock mov gs adc lods jno mov (bad) add addr16 xchg je ret mov cmpsl push shll xlat sbb enter test loop sbb les call nop cmp dec out mov sarl pop ljmp add ja stc and mov fist rcl sub dec cmp xor xchg aaa xchg mov (bad) jae mulb mov xchg add js and lods jns lea mov cwtl or insb xor cs mov jbe and pusha addb andl out inc ja lahf rolb aaa xchg push push shlb pushf iret jns jno fbld imul cmpl pop ss repz dec jbe mov addr16 mov and fdivl or shll lods sbb push stc and cmp xchg dec pop (bad) enter scas dec push movsl (bad) jae ret push sub imul add push or mov sub movsb push arpl cwtl sbb add mov lods es das imul cmp or (bad) lods and iret mov fidiv int3 xchg or rolb mov inc mov mov hlt push xchg stos mov ret mov add lds push daa fldenv add (bad) mov (bad) aas or or push xlat std paddsw and (bad) cmovg sbb gs fisttpll mov add pop and fadds into shl loope nop push xchg test mov je or je jnp rcl insb fcompl or dec cmp mov mov add add out pop test sbb jae insl mull jb dec incl mov mov mov (bad) loopne mov mov or test inc loope and xchg jo adc (bad) fiaddl mov shll cmp pop push (bad) cmp sbbl adc mov ret dec lea orl cmp ret test or out pushf fmull imul push push mov ret push and mov cmc int mov adc mov pop mov cmpl cld test popf sbb jbe xor xor add ljmp cmp dec sbb jecxz push sub add pop adc fiaddl pop and adc or in call sub rorb iret mov testb add (bad) pop inc pop inc add mov cmpsl in cli sub inc add pop pushf je insl arpl fisttpll sub inc test add lret iret in cmp lea and cmp mov sbb mov call mov sub xchg movl add popf fistp inc inc pusha jecxz push pop push cwtl mov and xchg xor mul cmp int3 jbe inc outsl daa mov jle add sbb fisub and (bad) mov mov mov fs (bad) notb rorl dec addr16 or inc push add mov enter dec fsubp push push sbb in add sub add imul lea inc xor add and ss leave jno add dec push loop cmp or sti mov (bad) in test gs mov int3 and jne fldenv cmp cli faddl inc popa mov dec fistpl movl insl stc mov cmp push push lds sub push insb bound ja inc or dec cmpsl cmp mov cmp pop pop test inc jae lock add jp stc jl sub sbb repnz and cmp ret jb push mov cli cmp mov (bad) loope sub sub int3 in inc mov lcall stc mov add sbb mov clc and xor dec sbb and adc adc lds mov ss push in inc lcall mov popa inc inc mov jbe xchg mov (bad) mov test add adc stos inc out loope push bound out inc sub mov jl jae mov lret (bad) out inc dec mov sub nop lcall cmpsb cld xchg adc or jb adc inc add xor xor lods (bad) aad push add sbbb xchg jbe sub jae jle mull and xchg inc xchg paddb subl jb pop cmp pop lcall pop repnz dec mov ret push out xor xor mov push mov add push int add mov or fild int3 add stc and cmp hlt or insb xchg sbb mov sub mov fistp stos stc cld ds adc cmp or dec xchg add or fimull outsb sbb dec mov sbb inc mov mov cmpl add shrl pop or fiaddl lea pop inc (bad) push mov (bad) cmp add add mov in mov in xorl (bad) add or bound pop cmp out sub xchg add mov pop sahf or out jl jnp xchg fxch adc test out inc inc and in mov and sbbl incl and test ja xor push mov imul jmp mov add xchg xor cmpsb dec xor stos jb sub test lahf fld xchg and aad pop (bad) fstpt ds mov or iret jg add cltd pop pushf mov sub push jg inc pop ds das sub insl sbb jg jp sbb jns inc adc (bad) lea mov (bad) out mov sbb stc cmp mov mov (bad) js jle sub mov xchg ja ljmp mov add aas test loop push insl imul push mov test andl hlt inc ds (bad) sbb wbinvd inc sub inc outsb jl jle pop inc inc popw lret in or jmp inc push int (bad) adc jg push jae sub sub mov and mov jecxz adc (bad) es arpl dec cld nop pop mov mov comiss call sub fld pop movsl inc popa roll pop lea pusha rolb fisttpll repnz add pop hlt and fscale nop aaa dec jo pop xchg shlb nop push stos push mov dec sahf jno inc or and inc or push test outsl inc int3 xchg movsb incl jmp sbb shll lea push outsl aam (bad) in divl dec mov int push xchg imul cmp push push inc mov jecxz mov lds cltd mov insb and mov add mov add push pop mov or pusha xor cmp loope sbb xor sub call sbb fsubrl lds fild and test out jge fs cmp sub enter icebp inc inc inc push xchg mov pop sub add fbstp jl mov int3 rolb fs loope xchg sbb mov pop pop sbb (bad) add out and xchg mov add cmpsl jns jbe rorb add or xor push sub jle sbb addr16 add xchg (bad) cmpl pop das std dec sub mov dec out xor sub imul add add xchg push (bad) xor jbe cmp int3 mov push jne lods in sbb nop push add cli mov loope std xlat imul add js inc mov jbe cmp lcall xor (bad) jns lret notb pusha jg (bad) xchg sbb insl add sbbl (bad) fcos add out leave fadds std sarb (bad) sti xor and iret push or mov ja add add or cmovbe mull cmc test (bad) cmpsl incl push or ficoml cmp xlat jbe ss (bad) idivl leave insl sub pop sarb adc inc adc sahf push mov add inc mov ss adc orl mulb lods sbb lahf lcall pushf push mov test mov out sub ljmp push (bad) mov mov mov adc clc jge pop mov mov adc xchg xlat adc mov call pop sbb lods repnz (bad) ss mov packssdw pop lret jb push sbb ret xchg dec out push and imul jb push xchg lret int3 mov adc sub movsl mov movsb outsl loop (bad) jae pop (bad) sti rcrl stc mov inc cmp rcrl fst ljmp pusha js and push inc (bad) neg inc pop add lahf enter jnp fimul test loope rcr xchg add aaa ret pop adc jp sub inc jo sbb mov mov mov add sub test insl cmp inc sbb jg or push ret (bad) pop push stos ds cmp cld loopne mov jne mov mov xor fbstp dec push popa into popa mov iret sub push (bad) or pop es jle and push jnp cli loopne push or add in inc scas addr16 das cmc leave add cltd popf inc gs ret negb cmp les mov lea inc push mov mov mov push fs repz push pop dec mov and inc fcoml sub ljmp cmc mov cmpsb loope es xor add outsb mov nop xchg add lock clc mull call movsb daa cmp inc mov dec fdivs pop out out pop add dec daa cmpsl mov out cmp xchg in add cld fwait stc pop push push push test jnp push bnd or call add push push xchg dec sbbl push jno sub hlt inc ss test psrad adc inc outsb jl jle adc das xchg push sub insb mov std shrb inc cmp popa add mov adc popf sbb (bad) imul loopne inc cmp es arpl dec cld nop das fisubl push jae jns das ret mov sub add add or mov idivl and and xchg push cmp rcrb lock mov loope dec insb jecxz enter fiaddl xchg xchg jnp pusha xchg pop jle repz imul and je test lahf aam mov ffree insl ss out daa or out inc fdivrs mov add dec push xchg adc hlt xchg jns adc jo mov sbb xor adc push inc into jo push test mov mov (bad) adc sub add mov movsl add dec inc (bad) popf jb sbb shlb sub adc push aad mov in add les add jo in cmp and fistl mulb mov scas std sub pop push inc sub push mov out and or push ficompl jg xor subl (bad) cmp sub je mov and cwtl ret incl pop sub fldl rcl add stc mov out pop or out mov sub cmpsl jg cmc mov out mov rorl ja icebp inc ret mov adc sbb xor or rorb add xor xor mov add pusha pop das repz popf push xor adc ss mov sbb jle mov ja fisttpl xor mov add dec (bad) push add and sbb inc or inc xor (bad) or and (bad) outsl or or push or mov add mov pop and add push or and push cvtps2pi mov push pop aam sbbb push repnz popf pop lods aam cmp sub popf push sbbl dec jae adc imul add xchg (bad) roll xor arpl insl daa movsl jbe daa roll push aas mov cmp cltd mov insl xor cmp push dec jecxz mov mov stos add cmpl pop ds mov (bad) or xchg aam and and cmp sbbb fnstsw push addl fmull insb cmpl aam int3 jmp inc (bad) int mov test and mov push mov arpl test inc mov sbb push rol push lret cpuid add jns pop inc out mov xchg inc lock and jmp xchg sub jb push out imul pusha jg or xor add push pop dec ja sbbb test int stos out dec and std adc nop add ret add enter es add lret outsb scas pop add jl cmp fstl or sti push push (bad) cmp add sbb inc sbb and roll nop inc mov mov (bad) add push popa pop mov mov jbe pop es in hlt sbb mov and inc cli divl out lret cltd inc inc and psrad lods xchg or add jbe mov mov push add mov xor cs or adc imul mov loop cltd fsts rep add popf call shl in dec popf test js stos mov cmp rorl fbstp mov jno dec out mov mov shrb adc xchg push mov xchg mov jno pusha popf std imul hlt (bad) enter xchg imul testl repnz int fmuls lds incl dec add sbb aaa and call in adc mov mov mov xchg mov stos cli pop aas faddl sbb inc aad lods cmp pop roll test addr16 jle cmovae pop into pop nop (bad) pop xchg (bad) ljmp dec movsb cmpsb jmp pushf xor sbb cmp dec jl daa (bad) aad aas fs out dec movsl mov adc cld wrmsr cmp add or loopne and cmp adc xor push xor shl jge pop mov xchg lods cli push jns and (bad) pusha (bad) mov or mov mov imul push jmp adc inc test adc sti adc cltd mov fs push ficoml (bad) or (bad) mov push xchg loop add negl jmp jns sub cmpsl xor (bad) or hlt sbb cltd flds lds stos jl aas xchg mov mov push loope,pt cmp sub movsb adc (bad) mov or jae jns and mov imul fstpt call and cmp hlt inc out test dec sbb xor rcrl mov insl nop xor dec inc popa adc and andl push xor pop pop sub add add std in fcomi int jne xchg push xor mov pop or inc and les roll sbb push sbb ss cmp mov outsb lods push popf push dec add inc jmp in arpl jle jg inc out add rcrb aas sub push mov loopne mov cltd cmp inc xor push mov fsubl push repz (bad) divl jge adc mov or rcrl lret outsl mov (bad) cmp aam aam scas jp jbe or push pop push aas rol add sub sahf pusha pop addr16 add jae in addr16 ret fidivl insl movb add bound xorb mov inc rcrb orl aad push imul mov in orb data16 add pop fcomp jp into loope add imul pop mov push stos or inc mov mov push and or jo ret xchg rolb ss cwtl inc xor cmp aad adc push lahf adc push jnp sarl xchg mul loope repnz mov and leave pop push (bad) frstor mov pop (bad) ja inc mov or inc mov subb jl cmp sub fnstcw test jnp cmpsb loop or pushf cmp and cmp idivb fiaddl insl cmpsl push add leave jbe jns xor mov push es mov mov cs das cmpsb decb dec or cmp rcrl jae add dec adc jle xorl (bad) and pusha imul outsl sub push in andl ror cmp in enter (bad) xor push mov aaa xor xchg cmpsb fisttpl divl nop jle and pop (bad) mov push add aad adc (bad) in outsb ret jns ret mov cmpsb fs jne cltd mov bound inc jnp mov xor out mov push sub in in (bad) adc or cli mov or sbb push xor popa sub cmp mov sbb jno,pn push shlb mov sub mov ss xchg sub sbb cmc add aad xor pop dec add (bad) or push push das inc popa add cmp push (bad) mov mov mov mov xor add inc in pop call mov jle in mov test fadds push and fidiv jo lock cmp out std nop push popf jge mov shlb je mov and pop add and jnp in lods jns add cwtl mov (bad) aaa and pushf mov sub stc mov inc cld daa xchg and xorl xor add lahf cld mov mov in pop adc lods (bad) (bad) cmp pop adc ficoml pop mov mov xchg mov (bad) idivl cs push cmpsb xchg xchg scas enter ljmp arpl fstpl push cmp pop call inc mov mov movsb js lcall lret pushf fcompl popa jns add je add sbbl daa bound mov dec and or adc sbb lock xchg pop mov dec mov push je popf test add fcmove mov int3 add pop inc or movsb std sahf scas jmp inc mov add xor pop roll jbe xor cmp pusha daa call addr16 les cmp pushf iret xchg pop push nop cli fwait xorl adc mov imul daa sbb imul xor sbb push addr16 push xor sbb sti nop jns xor lock sahf incl xchg push (bad) adc fbld cmpl (bad) sbb dec xchg and jbe je mov pushf jmp adc jnp mov pop add inc push dec mov scas cmp loop cmp jbe jge push xchg and rol add test jge gs fmulp hlt inc xor and nop or out and sub test cmp es fstpt inc add push loope and inc pop loopne,pt mull flds jp and (bad) loop fiaddl fimul sbbl shrb les fs add jg pop sti push insl dec or xor add js mov mov sti adc add add push sbb mov add xchg or sub mov or push incl (bad) aas loop jge rclb loop fidivrl fldenv inc xor lcall xchg or mov or adc gs adc jae aam sbb mov or inc popf arpl inc add and inc sub xchg rcrb loope push sub xchg bound rcll cld loope sub popa lods roll ljmp ljmp jp push out pop inc or jp sti nop push ffree xor fistpll lds je and jge add inc leave add or add jae cmp mov pop testb jle inc out add loop fisubl inc pop addr16 ss test call dec inc push pop (bad) (bad) jbe inc pop mov inc lret mulb sbbl out rcr add and test or fstps sub subb arpl push jo push ret add xor sub negl nop jae in mov adc fiadd testb push dec leave inc push das ficompl xorl mov push jbe fsubl shrl add std (bad) xor xor leave outsb lock sbbb pop aam cmpsl aad xor xchg mov aas pop enter adc lock or sbb icebp repnz pop add cmp add add xorl inc in sbb scas out icebp inc sbb test inc lea jg sub jb rcl xchg xchg gs xchg sub movsl movsb mov jecxz mov push xor cmp and cmp lahf and xor dec add cltd idivb test mov fmuls in ffree add jle inc pusha sti ret in (bad) push cbtw jmp inc mov sarb push pusha xchg jns mov fmuls lahf and dec pop pop adc sub call fs stos insl mov or sbb xor mov mov cmpsb xchg jbe dec lcall adc shrb sbb fldt dec imul loopne sbb scas das xchg push jmp inc inc scas repnz push cltd cld fwait stc lahf and call (bad) mov clc and add pushf sarb pushf (bad) (bad) adc subb lds sub int3 lea lea fisubrl out mov in leave add dec dec fwait cltd mov popa add add (bad) lcall repz cmpsb cmp ja arpl sbb sbb pop daa or mov xchg fsubp sbb aas in or daa inc enter inc dec sti pop lcall enter add add jnp call add aas in adc mov or dec inc in cmp mov sub or mov add xchg sbb adc push xor sbb inc jns push shrl (bad) add test or xor mov and mov adc aad xor pop dec lahf add mov ss rolb xchg test int lea jae inc in loope ss xchg imul (bad) fsubrl and fisubrl in xchg mov shrb mov stc out and xchg inc xor mov add jge sbb in ficom adc iret js (bad) ljmp and lret stos or add imul lock in inc fmuls and cmp sbbw xchg fnstenv fimul fisttpll out cmpsb aas sub push mov out popa mov roll outsb fcmovnu and cmp inc add jge (bad) rclb sbb adc call pop inc ret pushf (bad) lcall push fnstsw ficompl clc pop out xchg scas fisubl fmull arpl push pop xchg add xor sti enter adc dec jl or pop insb (bad) or sub (bad) ja fldcw ja add xlat ds add test sbb adc mov clc or std and xchg rcll mov cltd mov inc out push aaa cmp mov addr16 add fadds data16 jns and or sub mov ret or adc dec insl cmp (bad) jne fstpl xor pop dec dec popa mov mov inc shrl sbb pop cmc pop push jnp das adc imul outsl mov insl mov shrl cmp dec xchg push (bad) mov add in (bad) (bad) shr fadds popf int3 daa std mov inc push jle or sahf sbb pop cwtl movsl add aam fs (bad) xlat add push loope add dec loope sarl and pop inc fldcw aas subl dec sub loopne jo push hlt or daa incl mov and lcall (bad) rolb mov cmc sbb or daa out jg fistp cmpsl push int fistp push pop imul (bad) mov or and or fwait icebp call push jns lds and popf and jp adc ffreep pop adc call xchg popa outsb jg adc sbb push inc repnz push jecxz lods jmp mov push iret or jg dec or stos jnp scas (bad) in or (bad) repnz jb cltd in inc lods sub rcrb inc sbb sub mov mov sub push or push push push aad bswap add jg je les sbb hlt out cmp or mov scas insb mov or jbe repz arpl dec xchg mov inc outsl jle sbb outsb push mov popl sarl or (bad) push or mov cmp cmp push (bad) adc fcoms add pushf arpl add cli add je cmp cmp fmull (bad) xchg daa (bad) mulb (bad) jo rcrl imul (bad) mov sbb jge jmp xchg push rcrl xchg mov (bad) aam push lods imul enter int adc jg inc out dec dec stos int3 stc and std mov mov lahf lret scas dec inc fdivrs enter adc cmp inc sbb mov rolb inc add out jno int pop inc movsl adc sub inc popa outsl dec xor mov addl push popf cltd data16 dec test mov mov inc into inc imul xchg mov pop cwtl (bad) sbb jge imul (bad) sub clc push sub movsl add cmp pop into pushf scas jg or test jb idivb loope pop push sarl repz stos mov xor sub pop loopne and cmpsb push pop inc scas leave mov jmp cli sbb aad ret mov cltd sahf sbb dec add ret pop in adc inc les lcall aas jl out aas in fidivl adc out or pop test xor cmp or out fnstsw cmpl mov xor scas es (bad) or xchg push inc fwait inc jmp cmp dec ret jnp jle add popf (bad) fstpt ss xchg sbb mov add lret test sbbl insl incl push inc lret push test sbb gs jb mov stc outsl inc mov mov sub nop pop dec xor add and lret incl push out sub adc inc inc popa xchg ss les lcall rol pop mov addb shll bound lock sbb mov adc inc test fldt inc xchg inc add pop and (bad) adc add push xchg rcl xchg push (bad) loope fsts (bad) lea mov xchg adc insl fadds cs out fmull add mov and aas inc and fs aad jge jge bound jge inc and daa mov and je fcmovbe jbe repnz lock or movsb ja pop mov jb mov dec lods icebp cmp outsb les dec mov and mov xlat and push popf sarl xchg add call sbb mov stos lods sbb aaa stc and in ljmp into xchg popa aas xchg inc lret bswap stos fimul or jno dec mov stc and inc add cmpb enter (bad) cs (bad) sbb add pop push dec mov push add inc movb sarb js cmp das inc fidivl pop leave add mov cmp in stc mov loopne jge (bad) movsl add inc lret jb jne mov or mov push nop ja loop push xchg jle in add xor xor out inc sti dec lcall in cmc inc and scas dec dec rorb xchg cmp je adc mov sbb sub popa cmp add and sbb lcall jo js jnp fcomip inc pusha inc add mov out push lret push roll pushf nop and xor hlt or gs add push dec daa (bad) repz addr16 mov int inc ret imull fldl xor inc add rcrb cmp xchg into push jne jecxz add jno or test jne pop incl pop push fiaddl rolb xlat inc and xchg lahf xor movsb (bad) xor mov repnz inc dec push xchg insb (bad) mull roll or cmp loopne aam cwtl jo pushf cmpl adc mov xor xor or adc ljmp cmp cmp push out flds test or and inc nop loop mov cmp stos or js mov pop push xchg mov push pushf pusha xchg imul (bad) mov ds xor addb cmp inc xlat cltd mov and and imul jae inc dec mov sub jle adc pop jnp js ss outsb push push xchg or add and cmp fbstp (bad) fdivrl push mov int pop add sub push and or arpl cmp ja aas xor ret out sub insl rcrb js sbb push sti les call sub sbb inc fist inc sahf iret cmp sbb or insl sahf jno adcl sub movsl sbb sbb mov (bad) jmp or repnz les (bad) xor jns add and add insb popl loope lods pop int3 jl imul insl mov (bad) orl les mov enter rclb rorb aas rolb dec mov add mov push movsl cmpsb xor add cmc mov push adc lock ficomp in or xchg loope sub fisubl std xchg mov repz loop mov fisubrl jnp pop push or fistpl test push mov incl icebp fnop cmp test and rcll aaa mov pop lea push or push (bad) xor stc pop clc in or out sbb dec xor adc mov cmp adc mov add xchg out insb mov mov dec or in push loopne sub (bad) (bad) inc enter pop and dec sub mov mov fldl push (bad) cli cwtl dec les add test inc out sbb loop add add dec lahf lcall mov outsl jmp cmp xchg xchg adc push addr16 imul icebp ja (bad) or test jecxz push dec jb test jo sub add incl les inc in add popf sbb add int adc lock sbb adc adc faddl add and mov inc lods jnp push sub in inc (bad) xor and orl inc add test sahf and int3 mov cld ret pop ss jbe jnp push cmp incl jl or cmp icebp fs mov pop push int loop fwait adc jns das mov mov sbb xor cmc adc or push push mov cld inc aam lahf fildl xchg in dec divl outsl mov sbb aas xchg pop incb inc out insl inc enter sub sub icebp repz pop fwait pop mov inc lcall in int3 dec lods cld inc pop sbb pushf in pop jg repz addb fsubp or inc addr16 pop nop es popl sarl jno cmp into sbb sbb jns and lret ret dec paddusw push arpl in ficoml mov imul cmp adc movsb inc mov xchg mov addl aam lcall xor insl mov xchg in cmp arpl pop pop in inc jmp mov leave arpl adc sbb (bad) loopne nop in fwait ss int or or hlt dec xor mov xor icebp fdivrs push cli pop cwtl inc mov push int xchg xchg mov mov testb popf xchg jbe xchg add and xchg int3 inc xchg inc (bad) jae push mov jo mov stos lea or sbb xchg inc and xchg jno inc add cltd mov or repnz mov cmovb enter in movl aad mov ss mov call insb pop clc jbe add (bad) lock into aad ja cld loop push cmpsl xor jp enter fidivl push mov jle call mov mov sahf fs fldl jp fwait (bad) lret cli adc push icebp pop adc pushf push inc sbb sub jge lock xor test jnp movsl jmp lret rcr dec scas cmp (bad) dec push leave cmpsl data16 ss mov lret andl xor cmp std jbe repz adcl frstor pushf rolb inc int mov push and mov rcrl push mov xor fidivl popf sti nop dec dec push imul sahf dec and pop fstpl mov push ret xor jl mov mov adc iret lea ljmp ret into das insl sbb cmp incl jl (bad) pop call dec outsl in sub test cmp or in xchg mov or sub scas fcompl lds sbb and push out or cmpsl cmp jl sub testb jg adc lret add push mov adc es scas pop xchg xchg push inc cmpsl mov imul xor fucomp sub movsb xor int mov stos (bad) mov jo inc jne jbe dec sbb adc pop inc fisubl (bad) (bad) cmp dec cmp mov mov insb or sbb ret mov sub mov push xor push test sar mov push adc subl sub mov cs and push clc mov inc pop sti fdivl dec rorb mov sbb popw data16 and add inc mov dec into enter bound lods jno jle adc add cmp jl cmp repz pushf cmp int fsubrs outsl icebp inc xchg mov lret and icebp inc jae push push dec sarb lahf sbb movb dec push incl flds push hlt push ret arpl or push jae movsl cmp stos dec mov shrl push stos jle inc out pop or push lock inc bnd outsl in loopne enter dec scas sub sbb push lods add in mov dec test ljmp stc std sarb mov aam enter add push movsb call (bad) jmp outsb test mov and ds add xchg adc shrb add clc push cld inc xlat inc in mov outsb inc bound pop int leave (bad) add sbb jns hlt xor add xor adc jl jg (bad) jl or and test mov icebp cmp fs xlat jnp lds cmp xchg jle mov and mov or sub (bad) pop (bad) outsl out inc cli xchg pushf mov rdpmc jns repnz test lods push insl xor cmp test mov jnp icebp repz scas push inc mov sarb decb repz mov data16 je inc ret xchg das push leave in data16 inc pop sbb mov in cmpsl clc xchg sbb xchg pushf outsb fimul push repz ljmp aaa and pop enter loop lods push pop mov push popf fs (bad) mov and mov ljmp sbb dec lcall nop dec mov aad jo into fs out out inc inc sbb mov subl loop push out add pop or add test bound jge or inc mov inc and aas je out cmpsl insb mov (bad) cmp cmp cmp orl push jo adc mov sbb inc notl lods and pop xor gs loope xor dec mov insl push mov lods test adc jg or inc jmp sbb inc and xchg inc ljmp outsb sbbb (bad) pop mov aaa loop in sub dec ljmp cltd aam popa add cmc mov pushf notl dec mov aaa cltd inc mov arpl outsl jmp hlt sbb lods ret mov sti popa add dec cmp push push je clc mov fimul rorl outsb fimul dec (bad) mov int sbb out and movsl cld xor add hlt adc shlb stos addr16 ja movsl in (bad) imul sar sub inc and cmp add in mov adc lahf lcall sbb cmp jns aam shr pop int3 pop push cmp ss inc lods jg aaa mov mov loop call inc lcall inc cmp js push pop xor dec xor (bad) ficompl test aad push pop les incl dec xchg push adc movsb or inc nop loopne pop roll jno pop sbb inc icebp inc out mov sub lret test fstpt in into cld pop test dec ljmp sbb push (bad) mov mov add mov andl jl je outsl push aaa dec sbb add aaa std insb inc mov add push sbb lcall cmp mov pop inc adc mov sbbb sarl inc aas mov or add notl fwait dec mov xor mov ja add push mov xchg xchg cmp cmp push fist (bad) icebp test loope jno or xchg or mov sbb and addr16 je push or dec pusha dec add inc inc fcomi jb mov sbb xor xor jo insl inc movhlps arpl cmp fxch mov cmc mov cmp ja fs test outsl cmpsb lock add or jb fldl cmp int3 repnz cmpsb les test mov xchg mull jne loope loope (bad) dec pop xchg jae icebp inc add and data16 add jecxz jae insl leave push sbb and subb mov fidivrl enter push std mov bnd add fwait cmpsl inc cmp rdpmc inc cmp ja mov push mov insl push mov stos ret sub jge fmull inc imul pop imul add lahf jp add or cs movsb adc icebp inc lret or fwait inc lods leave ss clc pop xor scas push adc rdpmc mov lahf call fisub add jmp dec loop clc and and out and add push stc addr16 mov cmc sbb push mov add inc pop stos push sti cmp lock test stos test mov xor loope xor cmpl and add dec mov inc mov push jle sahf insl xor add je mov add jo adc imul and jae mov roll in pop mov (bad) fs mov outsl dec cmp sub inc cltd pusha ja (bad) add andb outsb pop and mov mov mov mov (bad) loopne inc aas cwtl jae (bad) mov push test lods imul cmp or lret js and repnz cmc mov jae cmp cltd (bad) aaa (bad) mulb cmpl adc jns fs loope psubb stc sbbl inc xlat je sti mov sti push cmpsb push xchg sbb enter hlt not xor (bad) jle xchg mov add outsb xchg das xor sub (bad) adc sbb es addb (bad) sbbl stos comiss roll imulb call aaa mov inc movsl jne cmpsb inc cmpl xor loopne dec ss in orps mov jno add imul cmpsb adc adc pop cmpl sbb add leave add pop jp and mov ja inc mov sahf mov imul mov inc dec jns in push imul jno adc loopne imul je and push test add mov divl push jo jne popf ret imul add test scas cld incl loope sbb sbb xchg rsm fimul je jmp mov mov dec rcrb iret loopne cmpl insb das mov (bad) mov nop cmpsb or or daa cli rolb arpl add push aaa ja push sbb insb fwait cmp stc (bad) js pop cmp adc and pushf and dec xchg (bad) lret clc pusha out mov orl scas pop cld mov lret clc mov add lcall outsb insl cmp das fldl lods dec popf inc (bad) jnp add cltd inc je push ret and pusha mull in rclb dec sahf push je add push lods cs rolb cmp (bad) xchg pop pushf jle or enter js sub inc add mov cmp add mov mov aam xor dec loopne icebp (bad) jg add cltd out inc fisubrl mov roll movsb push hlt mov out sbb imul add (bad) dec fstp in std mov fsubr dec in nop jns clc je fwait out adc sbb fsubrs cmp js dec sub out (bad) popf or or pushf mov jl inc enter aaa cmp jb push test shrl (bad) icebp loop in xchg xlat push in add push inc aaa lcall in es cld lock cmp std ficom or sub pop test or in aaa mov arpl mov clc and mov lret and (bad) jge inc insl mov dec xor mov shr or insb or (bad) lea or or mov int xor int3 rcrl push sub mov cwtl mov cmp push cs xor jg or jl adc lock jbe add rcr fsubl bound mov outsb (bad) adc loop or out data16 sbb or and nop rcrl ljmp jmp mov imul (bad) insl sbb stos out lds loop xchg sbb push js int mov push mov sbb movsb push push aad lea imul imul lods mov jmp xor xor push jno dec cmc and or xor movb xchg add notl incl jmp pop mov inc pop lahf call fisub add out out lds sbb fistp dec add lahf lret mov xor gs mov loop daa lock jmp in hlt pop mov js (bad) push mov jno loopne push call cltd ret jecxz testl add popf jle std nop sbbl jl or sub xor rolb mov add testl pop mov sub adc mov movsb popf clc movsl add rolb pop and cmovb sar ret sahf hlt adc dec jae push js sub (bad) or fist arpl call dec rorb leave inc int3 xchg push icebp xchg add icebp or xor fsubp fstl cmp fs or dec sbb xorl mov sbb and adc inc sti fwait insb cmpl popl adc mov mov dec ja or out lret fcomps xchg addr16 inc lcall ds xchg psllw adc and cmp loopne stos aaa mov push jns lahf in or in pop bound sbbl add out insb inc ror push mov in mov jno pop nop push test rorb push pop xor and int3 jo orl add cld mov rol icebp outsb fisttpll hlt inc (bad) lock xor addr16 ljmp insb push sbb in lds adcl inc cmpsb pop jne xlat sub cmp andl sti xor aad and push lea inc jb sub mov in xorl and jns ja inc xlat jge inc aam sbb sub pop lcall push in jb dec push movsb jne jge dec (bad) mov dec or movsb cmc or popf pusha (bad) lods scas daa push add lea sbb fnstsw pop adc jno ja mov add mov push call data16 std xchg mov fnop (bad) inc cmp and xchg nop xor fiaddl and sbb aaa mov ss sbb or (bad) or add and sub stos cmpsl sub leave cmp or add inc cs mov mov sub add into sar adc and cmp sbb adc and and push sbb popf (bad) push aam inc xor cld dec mov movsb push ja inc outsb daa mov adc mov mov popa push fimull in add add dec scas (bad) push jo mov cld popa push cmp lea sarb xchg mov mov (bad) imul add or mov mov popa fistp arpl or jbe inc js aam aas lret js subl ss mov lret pop dec inc adc lea testl adc xchg jmp pop into mov scas sub clc jae cmp xchg js int cmpsb cltd imul insl sbb push imul push (bad) xor push xor jp (bad) mov add test cli test dec sti xchg out (bad) (bad) shlb inc fnstenv xorl aaa pop movsb dec out push dec stos push insl repnz outsl or push push xchg pop stc mov dec fnstsw xchg jo push sbbl adc and dec adc testb sbb jbe adcl je mov and fldl stos enter cmpsl dec lret notb inc (bad) sbb mov nop pop movsb mov or (bad) xor add jg,pt or (bad) insb in (bad) mov dec pop aaa (bad) and xorb js dec lcall push or roll pop sbb fiaddl push outsb xchg fnstcw mov inc (bad) mov mov lock xor push pop xchg dec fstps sbb jb sub xor int (bad) jo test sbb cmp dec sbb sbb pushf sarb pop cwtl pop xor xor mov dec pusha ja stos push push xor lds imul mov in daa pop mov mov inc out mov inc mov jnp jmp (bad) lea imul or fstl cmp xchg sbb cltd cld lds mov dec and cld pop out je dec ret int sub ss mov mov lcall lret pop mov jge mov add or incl push push pop orl out xchg sbb add arpl or sub lret (bad) inc (bad) inc ret rcl pushf mov pop mov (bad) sbb aas dec imul hlt test enter or pop xor mov cmp xor mov push dec add std frstor mov push es lods cmpl inc inc dec jnp mov into mov lcall mov sahf fnop cmp lcall daa int push daa sbb fimul push push (bad) xor jns or mov cltd outsb lock push lock push cwtl and push roll aas xchg loopne jge jns ret dec or in inc in mov inc push bound mov cli push and inc rcrb mov sbb adc cmp je mov pop cs xchg (bad) cmp inc cmp neg fcmovnu cltd lret daa outsb inc push cmp mov mov test and fiaddl imul in fwait icebp xor out inc dec mov in adc imulb fiadd or arpl mov gs push scas push jp adc mov add and ds (bad) add popw mov add pusha (bad) loope bnd mov pop ret fiadd pop xlat adc pop dec sbb dec imul xchg jns push test incl cltd push sub push rsm pop fstl movsb sub push cmp imul inc out jo notl (bad) push push cs ficompl inc push adc xchg add push mov cmc jo (bad) mov inc (bad) jns or dec inc xchg (bad) in sbb and add inc push pop out fnstsw mov cmp lods and int3 (bad) jmp cmp std lcall std xchg sbb cmp mov nop imul (bad) mov sbb (bad) in inc jle imul jg,pn dec sbb dec xchg push loope ss sahf iret push push js ret les inc xor mov (bad) dec dec push (bad) jmp cmp insl enter sub xchg jmp (bad) xchg jle cmp inc xor mov mov cmp incl stos (bad) mov imul fmull jae and or loop outsl push sbb lret add out je gs jbe inc hlt pop inc outsb sbb sub sbb and jecxz and adc dec pop icebp mov sbb jns cmp mov popa ret add mov xchg push je or icebp aaa aas mov cmp ljmp inc cmp test arpl sbb jb dec inc test lock inc lret pop cmovs inc adc adc cmpsb loop addb cmp shrb mov int ret adc int inc sub pop cmp cli mov ret push incl movsb push adcl or jnp (bad) jns (bad) sub cwtl out fadds movsl sub cltd jbe rcr pop cs adc fcmovne aas push (bad) jp std xor xlat in cltd icebp inc jne jmp jae fildll xor mov xchg hlt out mov jp iret dec push test sahf inc pop mov sbb (bad) (bad) and pusha xor ja leave add mov cmp loop ja mov jno add test incl mov xor mov enter push fdivrl mov inc cmpsb mov add (bad) pop sub cmp out in push fcoms mov cmp fsts nop inc enter sbb notl aas out push mov mov jg or out loope inc outsb lock ss adc into sahf out mov cmp adc movl out sbb jns stos jg in mov es jno mov mov push rol setp pop rcrb leave daa xor cmpsl aad push xor rorb cwtl fsubs in push (bad) jno xor shrb int mov inc sbb fimull movsb in inc frstor xchg lds ja sbb push sub test sbb pusha cmp loop insl sarb loope ljmp or push outsl neg lcall dec adc movsb fld mov or stc mov std rcrb and mov push ss pop jmp nop jno popa testl enter inc lods and insb (bad) dec push xor or aas push inc (bad) iret mov leave mov ret push clc push fistpll rolb jae sub xor sbb gs sub cmp sub in cmc subl ret xor subb sub push cmp out inc xor clc cmp sub lds je imul or pop pop movsl add iret mov mov pop mov fidivr dec push imul fistp js mov (bad) mov inc mov mov add or add in pmaxub cmp pop xor out push xchg dec testb (bad) neg ds fiaddl cmp les pop fwait test cmp adc xor bnd loope bound jae maxps inc ja mov call mov dec push in daa mov push loop push fsubrp cs inc ffreep cmp push std or mov and inc sub icebp fiaddl (bad) xor mov lock pop sub xor fbstp js sbb imul mov rcr (bad) mov aaa fiaddl mov pop aam pop arpl pop adc cmp dec mov xchg xor sbbl sbb cmp mov or repnz mov jl outsl push inc mov nop subb leave add dec (bad) and mov cmc inc imul ja inc adc aad in xchg or inc into jo mov add add adc test add dec or or xor cmp cmp push hlt adc imul (bad) (bad) enter jbe inc mov cltd and cmp xorl fcmovbe and (bad) cmc lahf mov cmp sbb std adc lahf push mov add jecxz subb inc xor xchg fnsave xorl add push dec mov pop in lcall cmc inc and pop lock sbbl dec mov into fwait stc and mov mov jns sub add je inc xchg inc in mov shlb (bad) aad sbbl lahf mov leave sbb add add les push movsl add cli mov ficomp adc das dec cmp dec imul xor add sub rcrb jp push rcrb push cmc inc (bad) push sbb sub adc inc dec mov gs mov cmp lcall cwtl popl loope and push stos sbb movsl mov add pop (bad) and push jo cmp jp pop jp outsb ret fcomip or xchg and insb bound insl jae arpl add jg add les mov pop and pop sub sbb call inc cli xchg rcrb icebp mov adc (bad) push repnz aaa mov xor push mov ret lock add mov insb fistpl mov mov lea (bad) and loopne and xor push inc push insl clc adc mov mov add add mov add mov andps mov in in jmp adc cmp out nop jle andl cmp add sbb leave mov and in dec cmpb int fwait mov lods xor daa mov imul sub lods cmp adc dec ds add inc mov sbb inc adc mov pop or pushf jge sbbb insb cmp adcl push push in jnp (bad) xchg ja inc xchg mov arpl in mov or inc cs dec cmpsl incl sub add and es ret arpl in xchg pop imul lea lods xlat xor iret and popa sti sub int3 pop jg add inc stos lcall and (bad) cwtl loop roll push sub (bad) adc adc cs lcall fwait inc loop inc jne imul fsts sbb jbe std loope sbb add mov cli mov cmpsl and cmpl inc add xor mov iret or dec xchg push mov cmp mov aad xor or xchg or call pop movsl add pushf and mov lcall je (bad) push imul or jecxz outsl call lret pop push sub mov ficompl adc inc js incl roll cli int3 xor adc xorl and aad push js inc sbb cmc pop cmp dec hlt lea cmc inc negl xor add pop fcmovbe jmp neg add push mov rolb rcrl jmp jmp push xor test enter xchg push xchg gs pop ja outsl and cmpsl jp iret fldl pop jo sub rcl stos push rclb push inc and imul and inc fbld movsl xor dec ja outsb xor cmp pop fcompl (bad) jne jbe add mov clc in inc clc ret dec mov cli inc add mov xchg push hlt stc adc std jl aad cmp arpl stc cmc inc adc mov xor vmwrite add cmp add add dec incl push cs adc stc divl clc addr16 movntps sub lret testb lea aaa pop leave pop cmp pop adc jg or lock and jp lret mov and roll repnz sub cwtl ret pop xchg add scas or pop stc jns and outsl and (bad) outsl push std cwtl sub fs lods cmp cmp push (bad) mov mov push ljmp dec ljmp mov or (bad) sbb pushf out std pushf adc and lds ss mov faddl inc mov adc adc xchg sti inc add mov out arpl sub xor pushf aas ret mov sti mov mov test fwait sarl (bad) out test stos pop mov mov sbb xrelease push rcll incl push push shl (bad) fwait popf pushf push jnp lret stos rol in sarl mov pusha and loopne mov cld sub push repnz out scas adc inc xlat iret mov jnp mov inc mov mov or xor xor xlat and out mov (bad) pop cmp arpl jg add bound addb mov and ljmp mov and sbb mov or stos sbb clc mov xor aas jmp out pop std mov lahf in pop push push cltd push or add lods pop adc dec (bad) add (bad) repnz scas gs ss arpl add cmp dec sub push jle,pn push adc jbe inc sahf roll cltd jle movsl push push cmp inc jnp xor add (bad) or and cmp test stos xlat pop out (bad) lret (bad) rclb mov ja inc and in and xchg sbb rolb xchg jle adc jg,pn inc sbb (bad) in add push iret data16 adc aas fs push xlat movsb loop stos dec jns sub pop xchg adc ret (bad) lret inc jbe int popa out call ret pop sbb sbb pop xchg jge lea sub (bad) mov or jl xor call xor pop fimull aad push cmp mov or imul pop dec cmp dec cwtl fisub pop repz lahf cld stos pop stc and jbe hlt add cmp jbe or lcall into mov xchg je les push mov dec sar and aas lret xchg dec cmpsl test out mov fwait xor lret bound fwait mov mov pop inc fs mov add sub (bad) xor ja nop sbb add int3 popa sub incl mov pop jnp add faddl xchg test (bad) add sbbb in inc sbb xchg (bad) mov aam nop jmp loope inc subl lea inc mov mov scas dec pop dec mov cli dec sbb stos out into mov nop adc cmpsb lods inc inc push lcall int xchg fsubl xor inc mov mov pop add repz scas pop cmp dec xchg jp pushf and jmp adc push mov adc inc mov jg (bad) sarb add loop ja add cmp inc je fisubrl test jae in inc mov inc int3 (bad) loope repnz shrl lcall or int lods mov or adc add dec test pop add add push hlt inc fsubr mov mov pop lret sbb cmc sbbb push jno xchg stc mov comiss add sbb xchg or lahf es or rcrb leave sbb sub jp adc movsb cmp rolb fucomi adcl ret mov movsl lcall popf test mov xlat fbstp add jle adc sub fstpt add adc add inc dec mov or push xchg mov lock inc (bad) repnz in rolb inc add push jae inc add fwait or push insl daa addb adc push jne les and outsl daa push fucomi mov aaa sbb mov cli fadds cmpl pop lea pushf scas adcl out in mov into ret add imul adc inc lcall enter sbb aad aad add dec cld pop int sbbl ja nop jne mov (bad) xchg or xchg fadds jns fwait inc je call in gs call insl push push ss scas imul mov adc push inc idiv and rolb or dec cmp pushf and inc in inc or adc pop loop addr16 pop adc add add pop inc out pop leave add cmp (bad) fs mov push pop xor jle or inc lahf cmc pop aas pop and adc push daa push adc jmp arpl movl push cltd shl add or incl test push mov insb pop mov sti xor add cmp xchg js add into ja in sub test cwtl lds and (bad) stos xchg xchg cmp add testb or xchg and or inc ljmp fisubl faddp jecxz sbb aad insl mov add xor mov sbb mov mov pop xchg (bad) sbb subw pusha jecxz sbb inc mov adc push and pusha mov cltd sti scas je mov mov sbb push or adc mov mov jns pusha loope out adc jno mov sbb test out outsl (bad) sub fistl ja cld rolb mov out push or shl mov mov add inc jecxz cmp add sbb aaa or sub test dec jno jmp shlb out (bad) lea std push out xchg rclb push dec mov inc fistpl sub rolb loop push dec lret mov push xchg ss add stos js add xchg in or push mov aam sbb movsl add mov outsl mov cmp inc cmp xchg pop aad ljmp jge fs arpl mov cmp cmp jo or inc inc pop inc pusha gs sub push fdivs (bad) incl lcall cmp lods jne cwtl inc cmp jns adc ja push xor movsb fsincos int xchg in subb je pop or movb cli test mov cmp cmp sahf sbb sbb insl in std inc mov push jge cmp in daa mov imull mov clc outsb inc xchg dec rorb sahf fcom jmp mov bound cmp jns and je in add jae mov jle push inc sbb and outsl jge (bad) add cmp mov stos mov insb cmpl sub inc (bad) adc jae jbe inc aad mov cs cmp pop cli jecxz daa add movsl arpl jnp add enter and movsb rcrl insl mov lea xchg add stos mov dec mov ljmp inc sti push aaa in jbe out (bad) pushf nop inc in mov mov out repnz sti push bound mov dec popa ret imul sahf xchg xlat xchg ficomp (bad) adc sbb fwait pop loop in hlt sub imul xchg inc jae dec hlt frstor dec in out inc lea rorb fisttpll loope hlt xchg aaa mov mov (bad) decb insl pop je cli (bad) (bad) xor mov cmc cmp dec mov es hlt out inc data16 add ds or cwtl je lock cmp xlat or clc dec comiss add aam ret lcall imul jle pop (bad) xchg adc jne loop iret leave add pop aam jnp ds and mov popf shrl aaa clc ja cli xchg push es iret mov icebp sti cmp or addb cmp (bad) mov in (bad) popa rcl es or fbstp insl arpl inc nop push mov jl and mov push xor (bad) inc fstps add aad ja jns xchg dec imul bound mov xor mov scas mov pushf idivb cmp popa inc fimull push mov sbb cmp mov insl xor lret jns xchg adc push or and xchg inc xor jmp loope or cmp mov sub push fwait jl and mov bound std lea addr16 insl cli dec or jbe xor movsb andb fimull add inc inc sbb cwtl mov cmp (bad) mov cmp fdivl and ret data16 xor push pcmpgtw jae jecxz add lds cwtl loope cmp xor lock insl into call sub push (bad) adc (bad) cmpl or cmpb (bad) push ja sub les (bad) push cmovbe mov aaa fisttpl push mov mov push sbb mov xor dec jo dec incl mov rcrb jo inc cld dec mov push outsl cmp lock mov (bad) dec test ret sbb int push btc in pop in dec pop add out cld inc dec jecxz inc out jne divb and ds and sbb sbb sub add test scas or les mov shrl ss push shlb xchg pop negl jno pop pop sbb sbb fstl adc repnz jne pop push adc (bad) cli test cwtl loopne jns add je int3 sbb inc mov add push (bad) ret push dec (bad) stc mov mov in std nop sbb cli mov lret sbb jg and (bad) mov fsubr or push idivb call or mov xlat add pusha cld and jno cli int3 imul pop dec std jmp mov xor xchg fiaddl pop fldcw push sarb es jns sub lods (bad) or cltd mov fiadd fsubrp sahf adc loopne jbe xchg or mov mov add insb mov and idiv out btc xor aas stos iret aad cmp mov and add adc repz leave add outsl and xor in movsb push push aad lods mov adc inc (bad) mov cmp fmul sti pop xor cwtl stos repz pop outsb push (bad) mov push fsts stc lcall dec push (bad) ds fstps popf cs jg adc push fwait pop and dec or (bad) fcmovnu mov out xor iret xor iret xchg or lds push sahf xchg push jb xorb mov imul call adc or add ss mov push into sbbl sbb sub sbb scas adc and sbb jg mov inc xchg icebp dec sbb cmp mov or enter (bad) and inc pop test jecxz (bad) dec push mov or bnd lock pop sti push and add xchg outsb hlt add stc (bad) mov sbb jl push mov mov pop xor inc xor in inc inc sbb (bad) add fdivs iret stos add sarl repz nop not jae in mov and dec sbb rcl xor mov push add inc jbe ss sbb jbe push cltd xor aad add cmp das stos ljmp roll add adc and es outsb push andl enter lea popa fisttp ret cwtl (bad) andl mov shrb add pop (bad) int stos (bad) jns inc or or loope sbbb shll nop daa std inc xor or fs or test inc lods hlt or cmp mov adc loopne scas pushf addl sub sti loop enter mov test (bad) notb aaa loopne and (bad) jno sbbl jbe mov imul inc xor add jo ds bound rolb bound push add jnp mov stc and sbb icebp nop push xchg xchg add xlat and loopne sub xchg or mov out xor mov test add outsb les nop mov xor add or xchg outsl and sub push and xor insb out jne out fwait ja adc sbb dec sbb adc stc jns mov xchg outsb aam ret sub inc shlb adc inc sub aas aas inc adc hlt iret addr16 inc or and inc mov or push js push popa mov clc mov dec lahf mov aas or enter add loopne test call mov icebp in push insb iret push add fwait mov mov inc and loope sub dec (bad) mov push bnd out mov inc pop mov jno sub sti aam xor mov sub jo loopne add mov dec movsl add inc sub fsubrs orps add jle sbb push sub jge or sbb jl sbb push movsl mov incl in popa xchg mov (bad) jae data16 imul add popf push jg push jmp jbe dec ret mov pop inc adc aad sbb out in mov adc cmp je push (bad) pop jb inc sahf lret add mov insb (bad) into fadds mov out sub or (bad) aam hlt lret pushf xor ficoml jle xchg jmp sti dec add push mulb inc jmp popa mov out xorl and sbb mov adc lock cmp fistpll mov iret or shrb rol adc cmc cmp lock pop sar push inc out subl shrb sub xor and push aad cltd sarb jp sbb lahf inc push call addr16 mov mov dec push (bad) pop ja mov dec out (bad) clc mov cmp clc icebp xchg sbb insb incl cmc (bad) or sub addr16 sbbb mov incl and xor out imul scas pop idivb or cmp dec xchg inc in cmp push dec mov inc push lahf push add rolb bound sub mov inc mov xchg push adc push fldcw sbb push xchg add ds shlb enter push push insb sbb fadds mov cmp pusha ss aas cmp mov sub ja pop cmp stos pop mov nop or xor cmp sbb out push lret lods mov std mov sti mov mov int3 mov or cmpsb fdivl inc adcl mov mov adc mov mov push das imul sti inc dec rcrb out sbb insl je adc add adc mov mov mov imul mov and test shrl dec arpl add inc out cmpsb adc dec (bad) data16 and xlat inc mov pop cmp add jle pop outsl jbe cmp dec sub jne inc sti mov into pop in jnp in sub idiv add jbe imul mov gs aad jnp popa ret pop sub lahf jp imul in adcb es or cmp out je outsb cmpl add push sti dec fimul xchg or sub fildll aam cmpsb loopne xlat (bad) test mov pop testb fcoml int3 fsubl cmpsl mov or dec xor xor mov push or push xchg pushf xor jp movsb xor lea mov pop test inc (bad) jno std gs ds das jmpw push sti insl mov mov nop mov pusha out jb ja test movsl insl and xchg ja add pushf je icebp dec imul push and mov jl adc xchg jge insl mov pop cmpsl dec pop mov mov cmp pop pop mov nop/reserved add cmp xor cmpsl popf popl ja dec dec aaa push es loope sbb je jae lds incl mov xorb je jmp sub cmc push sbb popf mov jae xchg clc jle xlat sbb movsb lock jg cmpl xchg pushf xchg in or sub addr16 les iret mov ficoml add and xchg outsb cmp adc inc movsb and movsb push sub je or add repnz aam mov shrb pop orl and pusha addr16 daa add jno or add fistpll std fistpl cmp mov stos ja cmp adc pop add mov (bad) add sti cwtl inc out pusha jno,pn outsl pop push jnp in (bad) lea aaa mov (bad) add pop push push inc icebp inc out or push shrb ror pop shrl pop inc sub or mov call lods push fwait pop lock sub icebp inc mov test cld push ja out cmc popa add pop pushf and sbb (bad) lcall push lcall xchg mov les fiaddl fsubr xchg lret add clc sbb sahf lea mov inc sahf dec jo pop int push mov push (bad) jmp rorb pop nop pop loopne sub (bad) loopne loop pop add jg push jle cld and dec out inc mov or inc jmp dec mov loop fildl mov cmpsb insl into push dec or or inc add dec imul loop (bad) cmpsb jg push dec mov fimul je push sbb jnp dec push int push mov pusha adcb or add add lea and call lds mov adc mov and pusha ja inc pmaddwd out fnsave stc push and hlt adc nop out test and sbb outsb inc add and insl push stc pushf pop int sub int stc hlt inc data16 mov xor sub sarb adc je ret test fisubrl popf rcr stos push xor fistp xor in lahf (bad) mov push inc lds into adc std nop add push jbe incl in pop (bad) mov rorb jle cs and mov push adc mov imul addl or arpl hlt jbe orl pop push jecxz out nop (bad) lret cmp inc jo outsb hlt add mov xchg je and cmp scas fdivrs lods mov (bad) mov out insl rolb ja and inc add mov inc (bad) dec push lock (bad) push xor lahf test pop fadds insb dec add mov or test add pusha mov (bad) das les and add pop cmp imul cmpsl iret dec push fnstenv test mov aad sbb std rorb and data16 subl xchg cli mov loope mov lods subb mov imul adc pop or sub inc out movsb dec loope mov ret leave push push scas hlt or xchg push repnz inc aaa mov cmp pop movsb pop lods pop aaa pop lock stos out mov jbe mov xor mov jno add inc cmp sbb nop fcmovnb ss out inc cmpsb nop call mov int3 mov mulb les in inc jo outsl xorl pushf ret adc dec std nop add xor jmp cmp enter rcrb push sub shlb mov nop xor dec inc lcall inc push das dec idivb xlat fs jl inc and jo inc dec lea cli and nop jecxz arpl loopne add scas in fwait mov push cmpps pop push loope adc lods pop pop into sbb xchg or jmp dec lods rorb adc adc out mov lea adc ss (bad) lea insb jecxz push sbb divl cmp loop movhps push inc cmp outsb faddl inc jne test pop add sub sbb inc aad pop fmulp adc daa sub inc or ret ret lds inc subl push outsb push int push xor sub dec enter add inc sbb imul inc sti loope and sub add fisubr (bad) mov punpckhwd (bad) test cmpsb sbb addl xor nop fdiv jl cmp aas das in or (bad) pop sub les mov jb mov outsl ljmp inc es aad imul jns enter es arpl enter jo mov ds dec mov sbb (bad) xchg iret ret pop mov xor andl out push insb push aas das xchg add xor mov push jnp push push mov in loop das (bad) sbb std test mov lcall or outsb les cmp ss sub push inc cmp mov inc faddl and loop lea cmp mov pop test aad arpl and or xor cmp sbb dec loope jbe (bad) cld daa and xor test mov pop roll (bad) lock xorl imul adc test lock cmc inc cmpsb mov arpl inc ret xor xchg jnp push (bad) std int3 mov dec cmpb or sub mov ljmp iret pop mov lret adc rcrb addr16 (bad) jge insb cwtl lret aam pop mov out (bad) cmp stc and pop jnp in adc fcompl cli jns out add imul movnti testb or jns jne mov cmp mov cld xor or loope mov pop stos ret jb out cmp loop add pop jg add add insl push mov pop and addr16 lock jbe xchg lods sbb insl mov mov fs mov rclb aaa inc clc xchg lahf repnz rdpmc inc ljmp lds rorl call or les dec outsb pop in push jns scas fxch lds lahf in (bad) ja frstor out push inc dec adc add mov sti inc push bound cld push cmp popa jno out lahf in sub scas repnz add out inc jle pop sub or add adcl icebp jb shl push lds jne in adc lds pop dec movsl pop lock call hlt sub ret mov mov jp inc je mov fsubl das daa stos repnz and mov je sarl mov cmp fwait pusha add inc add xor dec add xlat sbb mov ljmp add jmp xchg insb outsb incl mov jno mov sub dec mov addl movsl add dec movsb adc cmp cmp pop aam outsb and cmpb cmp add cmc mov push push (bad) xchg (bad) insb dec and outsl pop and xlat mov fidivrl push imul jb add aas (bad) or xor mov push sbb rcrb aaa mov mov in adc lock mov rcr add mov inc or xor jbe dec mov add adc cmpsb mov cmp test xor add sub das (bad) stos (bad) incl mov ror imul mov incl xchg (bad) xor nop stc and mov cmpsb loopne lods xchg leave repnz lods add adc cwtl sub mov push test push cmpsb dec pop (bad) cmp mov xor cmovno jbe aad mov (bad) scas addr16 pop loope hlt adc int ljmp and int jo ret out in inc mov pop out imulb inc mov sub rcr iret jp test std xor jbe dec lret out xor and mov dec cmc jno cmp inc add stos addr16 insb jns or in mov adc in inc adc sarb imul xchg pop mov adc jmp into loope push jnp jp inc mov pop outsl cmpsl mov dec or dec (bad) repz mov pop xor mov iret or push push adc adc push js loope adc ret ffree sub xchg ss test pop scas sbb adc adc adc sub xchg inc push xchg sbb pop cmp fldt add fs lods repz xchg in mov shrb mov fldl das fisubrl dec xchg push push in inc mov sti xor cmc std xchg (bad) and mov push push ret out aad in movsl add shr addr16 pop xchg and addl dec adc xchg fwait mov xor cmpsl mov push imul pop test imul ss mov xor sbbl sbb sub testl insb mov cmp add repz frstor leave daa or sub lods push fidivl mov insb pop or out xchg adc jmp mov jp mov outsb leave (bad) cmpl cmpsl imul mov add cli push xchg (bad) mov fistpl mov pop and jo pop ret je bound inc sub xor in sub cmp sbb enter pop xchg inc into rcrl int mov mov cmp jp mov imul addb sub daa adc mov ja pop push imul cmpsb xlat jo bound incl fldenv aas xor adc pop fs push (bad) mov hlt dec sti jno inc out daa in adc sbb xchg add into (bad) scas and incl xchg push or and cmp mov imul add and nop (bad) jbe shll ds imul rolb lods dec decb stc and cmp xor nop push dec or js cld nop jns ret fdiv (bad) jns (bad) stos mov sub fcmovnu cmp and jbe and out jge outsb fucomp and push and aam and pop jb lahf imul out push xor test in jg pop lret roll (bad) mov push dec sub test cwtl ja clc cmp fs outsb jae push into stos fistl inc push mov mov scas ja les jl pop lahf dec adc add mov (bad) mov ret (bad) sub fsubrl aas popf repz movsl add incl and mov push fistpll add (bad) inc lods push jp int3 mov jbe sar int3 (bad) (bad) dec sub inc mov mov adc pop ss sub fsubr adc inc add fwait mov and sub rorl inc testl mov mov (bad) int daa cli mov jg pop add ficoml inc shrb mov jno inc cmp leave add xchg cmp sbb fiaddl (bad) hlt adc je cwtl pop cmp add fwait mov mov dec cmp dec cmpsl and push out cmp jno and mov push sahf stos or lods ret sbb pop andb movsl fmull cld pop xor sbb cmp jmp jp insb fiadd xor mov dec xchg mov test sbb push or or dec cmp mov test mov (bad) std movsl add scas (bad) aas and mov add notb pushf loopne xchg push imul cs jmp mov cmpsl gs bound mov inc push incl add rorl adc or cmpsb inc dec pop sahf and inc and jge and popf pop lret mulb pop mov mov sahf rclb mov jbe stos add or and inc push (bad) aam loop shrb stos je movsb push adc xor lcall inc stc xlat shrd adc jne in loope and xchg or andl jg pop jg inc push stc and cmp inc fistpl sbb test dec inc pop dec rorl adc out pop cmp add lods and popa or sarl add sub leave cmp sbbb (bad) cmpsb add xchg pop dec loopne and push adc inc std adc xchg inc subl loop add cwtl out repnz inc mov mov push dec cmpsb adc sbb cld shlb sub (bad) repz inc add xor push lcall xchg xor (bad) rclb rol popl mov xchg mov sbbl mulb jge bound daa mov xor cli and cmp or nop push xchg xchg inc xor mov movsb fucomi push cmp inc or cwtl outsb fdivrs add push jl popf in push or add add addb (bad) lods lahf mov inc mov or movsb repnz push mov cmp xor shrl dec cmc inc mov or push mov push adcb add imul xchg cmp sub jg jg in ror mov and xchg (bad) adc shlb adc inc rolb (bad) call fsubs nop add and mov xchg or mov jmp je adc cmc lcall push jbe pop or sbb push mov mov jbe dec gs icebp mov mov push imul ficoml sbb inc ret pop test cltd inc sub sbb cltd in aas pop sub mov ja inc mov clc mov lock leave add mov xchg mov shlb push idiv mov dec mov adc xchg add outsb lret jge mov clc lods sub jg inc xchg sub (bad) shlb add mov xchg xor iret test push cmp sub xlat les movsb push add add notl inc or pop addr16 fstpt add lds loope cmp ret fistp fcompl ja xorl sbb sbbl mov push xchg push subl push ss das xchg cli mov dec sahf push or dec and ret (bad) xchg aas js or push aam test or cld lret int3 popf scas ret out jge addr16 cmp jns and and adc and ret mov mov rolb inc pushf jg ja cmpsb cwtl clc xchg add popa add cmp pop rolb mov jp dec mov mov cmp fiaddl (bad) cli movl mov imul in push outsb push sbb sub push adc and sub push sbb mov outsl push mov in or xchg push add mov int3 push inc pop in adc sbb dec sbb and mov mov adc xor mov dec ja mov push ret fimull or das mov mov scas pop sbb in (bad) and pop sub sbb popf push cmp and adc cld aaa in push shll sbb cwtl and jge adc dec and add fmulp jmp cmp mov fistp jecxz jo inc xchg int3 push cmpsl hlt mov mov mov fs jmp xor out add aam xor insl cmc std enter lea mov cmpsl mov test dec aaa cmp or inc idivb dec dec mov xor jp mov sti and push adc jb inc int jecxz bound adc cltd inc mov sub pop push clc fiaddl xchg push dec cmp cld (bad) mov mov mov jg mov jp jns pop loop lods arpl int3 out leave add push daa jle xchg lds jnp aas add jmp mov mov nop testl add cmp xlat adc leave sbb cmp lahf daa add imul js jle sbb push ret insb lock outsb jbe push divb rorb fist div (bad) hlt fdivrl insl fiadd mov fcomi mov movsb out push sbb mov daa add aaa mov mov emms cmpsb push mov imul xchg cmove mov jmp xor in nop pop pop cmpsl mov xchg mov int3 and in jg pusha and insl ficompl and push je insb pop bound dec movsb or sub shrb (bad) push and push mov (bad) call jp jle xchg mov rcrl shr fstpl or push outsb mov stc and inc outsb test imul pop pusha jae rorb add jg mov lahf rcll mov jbe pop (bad) in orb jg arpl aad and out inc int icebp add loope sbb dec pop imul sbb dec cmpsb push mov cltd cmp insl inc outsb xchg dec mov in test push xchg xlat stos inc fidivr and push imul add shrl inc lea in lea mov fiadd push je out adcl xchg hlt or pusha dec nop loope ljmp xchg icebp fildl aad cmp pop test clc push jae out push mov fildl or dec push imul les mov nop inc jo in sbb dec pop xlat push fs scas ljmp pop jo nop push xchg xchg mov ret push mov call mull pusha outsb mov lret cmp (bad) loop xchg sub ret jno pop nop fisubl xor add mov mov hlt adc cmp pop lods out repnz inc and aad (bad) cld aaa loope adc xchg incl xchg push fbld sti cmp shll mov mov pop loopne sbb fdivp xor or or push lods pop push cmp mov inc rcl pop rcrl jl jne mov stos mov add addr16 out jbe push and les cmp incl js cmp or iret cmp aas out inc push (bad) mov out add mov loopne pop xchg adc mov arpl dec sbb (bad) adcl pop rorb cld nop pop mov call popf add push sbb push (bad) loop add fwait dec lret test xor outsl mov ror xchg nop push dec jl incl mov add lahf add dec idivl aaa repz andl (bad) orb mov sbb mov inc mov mov testl pop aam xor mov pushf movsb mov xor push inc add push pop clc mov pop push jecxz call jns and mov dec scas std sub les nop daa lock ljmp iret bound sub imul ds and mov mov pop mov xorb inc xor loope fadds mov xor cmp inc fmuls cmp js lret jp arpl (bad) int3 rcrl adc push pop jns lock sub cmpsl and push cmp mov push jmp push sub sbb sbb mov outsb iret scas push (bad) mov pop inc jg or loop inc adc add sub jno xchg cld push idivb jnp sub sub hlt xchg (bad) in pop push and xor leave push push jecxz lods cmpl sub mov jae out inc cs mov jo xor push (bad) insb push pop inc adc jg or and pop dec (bad) aam sbb std insb std rcrb mov add aad hlt sahf lock xor push fucomi add popa xchg mov imul hlt adc roll add popa je ss mov dec loop pop mov inc stc out insb or mov and inc mov dec push cmp out inc cs dec mov mov aam add mov lret sbb adc xorl xor pop (bad) loope inc fmuls fst nop orb sub mov or jnp push inc mov imul or (bad) cmpsl jg out flds addr16 cltd adc cmp stc mov pop lods nop arpl add jle and sub or sub mov pop pop test xchg sarb test mov adc je dec mov std insl inc mov fwait int push push fwait addr16 nop pop rcr lahf pop test stos dec cmpsb jmp dec outsb mov add aad add outsl stc mov out bound into mov popf dec aam cmp xor jp inc add mov inc insb pop cmp adc add sub stos es sbb cs shl adcl pop test jl lahf int orb or adc inc mov inc js mov xchg sbb sbb lret mov test roll adc xchg aam jge sarl pop lds test rcr adc popf addb test subl jge add cwtl jae xor add movsb jbe pop lock inc sbb adc fldenv cmp ret sbb pop popf shlb (bad) jo ds add xor xchg adc pushf push inc gs sbb (bad) rol testl ja shlb push rclb jbe sub and subl jns aaa (bad) outsl push sbb andl movsb bnd dec add adc (bad) lret jae loop pop or inc popa fimull add and push mov cmp shlb ss leave add (bad) sti sub xor pusha std nop xor mov or xor dec mov jne push push xor mov xlat mov lds orl gs push cmp xor push jmp inc gs inc cmp inc rolb hlt in jb mov fldl ss jle sub or pop scas sti push and imul add or cmpsl test out inc mov imul call fimul mov inc adc add or xchg sbb test xor test cltd enter pusha out and jl xor icebp sbb push jmp ja mov dec add push in mov ja int push inc push aam push mov call dec (bad) pop cld inc popl jge mov sub inc add push movsl add jg xchg or pop icebp incl mov jne outsb in pop or pop xor insl shr mov mov push push inc repz pop loop cmp insb ss jge inc out mov outsb adc sub lahf cld (bad) pop loop movsb fsubl ss nop daa push mov test icebp out sub and lea add mov pop cmp mov cwtl fistl mov dec cmp add add popf mov out lret sbb jbe,pn loop mov mov notb loope bnd jle or (bad) cwtl inc (bad) cmc pop (bad) (bad) (bad) mov xchg roll clc je xor pop out scas in jmp mov out sub add pop or ret out cmpsb xor subl adc cld incl fs pop sub add cmp (bad) xor imul and addr16 push sbb sbb dec push adc stc stos jne jo in inc cmp leave adc in xchg mov mov push arpl pop ds push pop popf rclb and popf call jmp enter std rorb loope mov into dec adc lcall sahf jnp dec or sub int (bad) cmp loop ret pop push add fiaddl add cli imul xchg pop and mov cmp pop inc fcomps inc das mov push jg push aas mov pop sbb push into sbb adcl fiaddl and inc mov xlat fiaddl ret js adc in push sbb loop loopne inc xchg icebp inc lea scas (bad) push xor sub xorl cltd sbb pop push jbe push mov pop and sbb sbb sti pop enter jno add xchg xor ret outsl inc daa sub aad xor sbb cmpsb shr mov nop xlat data16 add mov in cmp xor push in aam pushf idivb adc add cli (bad) imul cmp dec sbb inc or inc out hlt sbb loop cmp add fwait mov jae push sahf fmull and (bad) jmp inc es fldcw add je inc (bad) or push sub loop push imul inc cmp daa push add mov lret or mov sbb jg add rep push mov jmp adc mov sti rolb aaa push sbb call mov rcrb fistp add mov cs inc sbb fwait mov sahf or xchg addr16 popf mov popa js xchg mov nop sbb jp mov (bad) out bound sbbl mov adc arpl stos out ljmp shrb outsb js jnp stos cmovle cs mov inc mov cld rorb xor cmp push incl aad and lock xor daa mov add push mov adc out inc clc loopne ret push jae mov mov mov add inc fistpll out add enter adc in lahf and dec pushf xchg pusha add xor not mov mov add and cli adc fimull orl mov push cmp pop mov std pop xor outsb daa into int inc mov adc push sbb sub cmp cmp mov pushf rcrb mov pop pop repz es pop movsb sbb lcall jl repz and xchg les sbb push outsb cmp and rclb push loop stc pop jg add inc or jns dec les andl sub or popa pop lahf movsl iret (bad) pop push cmpl addr16 movsl cmp cmpsl pop cmp outsb stos inc out fcmovne pop je loopne daa add and mov jo push cmpsl mov out and and dec lea nop push data16 push sti cmp scas push aaa aam and push stos fucomip cmp stc pushf (bad) pop test dec cmp sub (bad) lahf ja cltd sahf and mov call mov pop ljmp pusha pushf repz imul jb stc mov xchg shl (bad) popf push int clc aam repz ds aas arpl inc out cmp inc mov sub movsl popf orb or cld push movsl add pop mull loop lcall jl xor insb cmp dec movsb push or jg add jecxz dec ds (bad) mull ss jbe jae pop mov inc cwtl dec fsubrs inc repnz es adc (bad) xchg xchg popf incl push push icebp out sub and dec mov clc gs pop cmp xchg sbb out mov fstpt flds sbb aas addr16 repnz rcrl cmp aaa xor inc push ja mov andl or (bad) stos mov ficoml ja or scas sbbb sbb daa scas dec mov into pop lcall or inc mov cli leave pop xor imul cmc sbb subb pop sar mov insl inc mov or rorl popf nop and (bad) aaa sbb (bad) cmp and and push popa sub xor movsb push cmp lret andb fiadd lea sbb loop jo rcrb cs in sub mov lds out mov inc popl int3 adc mov fldl ss jno inc cltd test cwtl ja push add cmp push add into shl xorl mov out outsl imul mov leave jno mov inc stos inc fcomps sbb add iret aas xor dec lret pop enter sahf mov push loopne orb subb movsb or add subl loopne icebp inc pop dec xor sub sbb cmp arpl add or aas mov inc out and sub incl dec aad pop pop cmova xor add rcrl in add cmp dec rcrl ja jge add mov inc dec jb pop sbb adcl add rcrl fcmovb fisttpll push mov xorb dec mov push mov in test jno (bad) or movlps mov adc mov and mov stos or daa jmp or mov inc inc push add popa imul cmpl inc push or dec xchg add mov add adc xchg data16 shr lret ret cld aas mov mov mov dec inc mov stc and nop cmp jp xchg pop cli outsl iret or inc push (bad) dec xor into mov jge inc cmpsl push sbb jns inc outsl (bad) insl mov inc pusha mov sub jb mov nop div negl sub dec add cmp mov leave inc fildl xchg xchg or js in mov push adc test ds jl xor je mov or mov adcl insb loop ret outsb sbb xor push adc fucompp cld mov or pop push xor or lds test mov loope add outsl mov mov jl sub sub imulb push push mov pop imul sub in stc and mov pop adc jb sub je xor or mov (bad) jp js add inc mov pushf jmp mov (bad) movl inc xchg out jle and cld inc aas sub inc pop sbb loopne loop incl dec add (bad) subb fwait dec adc sbb cmp adc mov push lock push test xor and fsts adc or ljmp sub arpl (bad) cmpsl ljmp mov jl rorb mov aaa (bad) js jne sbb add out sbbl add mov fnstcw pop ret mov sbb mov mov jne xchg jg adc mov or imul pop inc mov mov inc aad sbb outsb ja outsl clc mov (bad) movsb testl mov dec loope jae jg testl ds sbb or xchg incl movsb xchg pop movsb xchg roll xchg stc xchg add hlt test pop mov adcl mov addl inc lea mov cmp adc adc icebp outsl jnp out test add mov (bad) xor scas and mull ja inc push sti cmpsl (bad) mov dec push shr lcall adcl add mov rol mov pop pop nop push push pop mov stc xchg (bad) and outsl (bad) pop dec dec push dec add in and rol mov mov jne push jae inc imul cmp jnp mov add fwait and fisttpll getsec inc and xor mov test adc iret cld dec or add stos jb (bad) popf rolb ja xchg push shrl (bad) lock lea shrl loop jbe repz cwtl imul (bad) push (bad) jbe mov pusha mov mov jp jbe (bad) dec jg test dec inc pop or or insb xor inc push and pop out mov jge sub sti mov imul test outsb inc (bad) xchg imul mov shl push jge sub sbb jno lahf aad add xor and cltd xchg out stos and xlat cmp stos (bad) inc fimul inc loopne loopne lea sbb lcall repz xchg adc int3 mov cmp sbb dec mov ja and gs out (bad) fldl cmp cmp enter xor inc sub jne or push cmp (bad) or arpl add inc inc and adc jg mov js int3 jno aas sub in inc out push jo pop aad addr16 xor xor push sti mov fs mov es in and (bad) sub inc (bad) xor and add fldl sbb or add mov scas mov inc add aaa xchg inc lock int xor jno inc xor dec cs arpl push dec inc fdiv out adcl stos pop (bad) mov hlt adc or fsts les xchg ficoml cmp outsl in cmp out fiaddl jns cli mov xor rcl jge xor or inc cmp clc and xchg rcrl add cmp mov cmp fisubr add add and push pop ficomp xchg sub (bad) (bad) shr (bad) cmp int mov or in test mov (bad) mov dec insb xchg pushf outsb sbb mov out ret iret leave add mov insl mov test jecxz (bad) aas mov fwait push ss sbb pop outsl mov xchg add popa or call push and nop and push insb xor mov and pop push inc push push sub mov ret pop (bad) sub xchg xchg repnz and sub fisttpll mov pop add std nop sub pop pusha je out inc ljmp scas pop daa cmp fdivl xor imul mov insb inc nop cmp test insl incl xor (bad) movsb pop pop movsb or cmp pop or mov not decb stos (bad) incl push in enter pushf (bad) lods jnp and adc in (bad) icebp add lret test mov daa in jne xchg push sbb daa in mov sub inc mov int aad mov mov je incl push mov and and sub loope lahf mov push pop inc test ds cwtl enter and cmp test inc inc sub dec and cmp or add or rorb add pop adc xchg clc mov xlat push cmc adc mov pop jle jns hlt test (bad) jmp sbbb rorb (bad) xor push xchg faddl xchg stos push lods or in mov sub dec rcrb cli mov subl mov jle sti and dec fsubrs sbb lahf jmp rolb mov lret adc cmp repz lock lods and and mov sbb (bad) jg jl add mov mov leave lock add (bad) mov or andl add shrb (bad) pop ret jns or lcall add lcall xor loopne stos jge dec clc xchg nop imul hlt or scas inc dec jmp mov shl daa std rolb ret mov pop pop nop push add mov out std nop insb mov add cmpsl jb xchg add mov jecxz cmp adc nop jmp (bad) push push push jl mov dec js fimul andb enter bound data16 or push imul fptan sub in mov or sbb add adc leave push mov xor out add bound push aas inc add sbb mov mov dec lahf jmp mov or mov es movsb mov mov das push sub add mov dec cli in inc popf xor sub jns addl sbb mov addb mov bound or (bad) imul add jmp bound int add (bad) cltd popf cwtl mov shr cltd insb ja hlt inc cwtd jp (bad) fwait sarb jp stos (bad) sub in push pop mov insl fldenv mov mov cmp add cmp jns pop adc or movsl aad or test mov (bad) call out enter jnp mov pop shrl addr16 xchg mov mov aas jbe jno insl (bad) or add pop xor pop or jno add pop insb and out push add popa out mov dec inc jg sbb add push jns ret jp jne jge rcrb call cmp adc (bad) outsl aad test xor inc fildl add mov xor lret inc jae mov aas faddl ds adc pop add dec adc cmpsl xchg or fcoml sbb cmp ret sub xor mov ficom sub jge or dec xor push (bad) dec ss sbb push nop or xchg outsl mov sub cmp ds sahf mov xchg jle or testb cmpl sub loop jmp jp inc popf adc push dec or mov xchg mov enter mov dec pop lds or add cmp mov scas add pushf movsl pop pop mov (bad) sbb jge std rorb inc and push clc hlt mov cmp mov or adc mov inc push sub xchg fstl cpuid or push cmpsb jo add scas mov jp add repz bswap sti decb xchg xchg push fs add mov jle inc lcall push sub mov dec push loope faddl popa mov or loope test cltd sbb inc sar xchg mov aas in (bad) sbb movsb adc lea loop push sub sbb or jecxz sti and ret (bad) add or cmpsb mov cltd inc add flds outsl mov and adc push add add sbb fucomi sbbb push push std loopne sbb int3 and aam (bad) cmpsb inc cmc and xor push adc xchg fnstcw test cltd les add in mov cwtl (bad) push sbb inc xor sbb shlb lock fwait mov stos and cmp or sbb fwait les cmp out lret pushf repnz or mov or mov inc mov inc sbb ret cmp outsb in sbb sbb xchg repnz dec sbb (bad) or adc repz stos (bad) cli cmpb or in in mov lea std mov and push sbb out mov xchg pop mov adc adc orl call add clc mov pop cmp push call jo fsub out lcall inc jns inc adc sub loop sbb incl je movsb or inc mov call aas xchg or push mov (bad) clc xchg or or pop rcll test push test mov inc mov push inc (bad) adc or add mov xorb sete mov sbb jge push shrb in movsb push lea mov (bad) out les adc pop jl sbb pusha out lahf inc call xchg incl jmp mov aad movnti (bad) aam stc les repz loope or ljmp push sub roll push cmp xor nop jnp lock mov es testl mov sbbl inc dec daa pusha roll ret mov cmpsl aam call cltd add les push or int3 mov and lds cmp lcall add inc xor mov roll pop cmpsl pop adc (bad) or dec imul in outsb add faddl cmp scas imul inc clc aam cmp inc or cmp adc mov cmc add sbbl in cld lods xchg or xchg out inc or and sub outsl inc push mov mov shll pop lds imul sbb mov push sbb fwait (bad) std loopne add test stc and push data16 pop adc mov jo sbb push sub incl les (bad) fldz add (bad) or and push dec cmp sbb inc addr16 and inc adc loop imul bnd sbb mov lcall pop dec xchg mov test fst mov pop or int3 lahf inc adc test decb cmp dec lea (bad) lret and aad jmp push aaa inc mov fwait bound hlt inc fsubl mov and dec pop in push (bad) imul pop bound push and jae sbb add int3 and jg or sbb or fucomip pop roll je xor pop sub fisubrl sbb push push ret stc pop ds mov sbb sub sbb (bad) rolb add mov inc es sbb aad and ret mov inc jne repz pop sbb pop pop mov adc sub push fimul jp lahf mov adcw add lods add (bad) dec in mov shlb mov (bad) jg sbb loopne mov xor push sbb call cmpsl fldln2 push fimull push adcl mov jns cmpsb xor fiadd push lods adc add add pop jnp (bad) cltd push add mov outsb les mov (bad) ss movsb or inc femms mov test xor popf pushf push sub and mov dec cwtl loopne sarb int3 xchg push les dec adc inc xor in add imul adc nop insl cmp mov xlat (bad) xchg pop nop insl pop push hlt dec int out xchg add stos call clc jo popa mov ret insb cmp push fild (bad) sarb cmpsb pop cli mov lock sbb pop in (bad) jae mov push sbb xor ds mov movsb data16 stc std ret xchg mov inc push pusha mov lahf inc pop push jne cmp add pusha pop js jg adc repnz insb aas sub and add cmp ljmp adc and sbb std es repnz push sub pcmpeqw pop mov lds and sub scas pop rcrb je daa cmp (bad) jbe outsl adc add jl ss lods xor flds insb pcmpeqb jmp jne xchg fs xchg arpl pushf and loopne je inc ret and jo aas pop mov xchg jg pop push lds incl mov adc movsb (bad) mov int3 jnp (bad) add pop lahf fistp icebp sub movsl cmp xor stos cmp xchg mov inc cmp jbe incl mov xchg jo push iret js mov mov pop repnz faddl ss rclb dec mov cld insb ds lahf xor xchg mov adc lock xorl addr16 cwtl out inc mov cmp stos aam xor sbb inc rcl adc dec fnsave pop mov cmpsb xlat or jp nop push sbb (bad) sahf sub or inc xor loopne out aam push dec sbb inc xor loop lds js adc xor imul push xlat adc loope pop dec lret cmp lods or fnstcw and incl adc jg sub dec fdivs insb ret mov divl (bad) xor or sub sbb push lods push and bound psrld adc mov or mov pop jae and es pop testb lret jo add outsb mov (bad) dec in and fsub and in dec adcl aad push (bad) icebp sub insb sbb data16 xchg call cwtl inc cmp xor addl punpckhbw enter jnp cmp xor jns inc or xor xchg mov jno push xchg enter rolb dec mov out add push paddusb xor inc stos xchg jp int3 mov aam repnz mov (bad) call (bad) jg in in sub dec sub or int dec ret out sbbl inc jmp xchg mov sub imul push aas and cli and aaa repz or ss pop movsb in aas and inc int movsb mov push sub insb xor fsincos and jbe incl adc (bad) rep xor (bad) idivb mov jbe mov inc iret imul mov sub mov sar mov xor and add xchg add jo xchg daa out iret addb cmpsl pushf cmp jle push into mov sbb dec out out or cmpsb mov xchg sub (bad) jns decb in inc and roll add mov push fcmovnb and push sub mov and pop add pop rolb mov add and mov pop in dec fmuls add jns (bad) cwtl test movsb cmc sbb cmp (bad) fcomps push inc dec xor mov (bad) jo mov or mov cli jbe test test push cmp inc cwtl add jns mov cmp pop int push mov ss leave add ss push mov mov mov adc sbb jnp cmpsl popa inc dec insl cmpsl mov push xor lcall data16 cmp and aad lock imul xor sbb test pop rclb push jg popf incl mov sub lds mov fisttpll sbbl lcall adc in sbb adc fdivl outsb ss mov lret push fdivrs stc and inc mov jnp fcoml xor push xchg stos dec pop rolb jo loop outsl mov inc fstl out prefetch cwtl clc and (bad) dec jg pop mov aam outsl add orl push lcall stos push jp nop rolb subl xor jno call and cmp pop in xor insb cmp mov cltd xlat xor or push jno fnop arpl les mov xorb pop out popf (bad) inc nop pop ror mov jge sbb push jbe test cmpsl jl and inc jmp mov xor mov mov sub insb mov inc inc sbb sub (bad) sbb out out pop clc call xchg pop fs jns repnz mov scas cmp or mov cltd (bad) mov push cmc movsb (bad) fprem mov inc int call xchg jnp xor sbb lret shlb movb cld lods pop lods mov and repnz inc jne add mov fbstp in push imul push or or fld pop xchg js cmova pop xlat fs iret out add clc mov divb movsb lahf jbe sbb rcr push sbb inc inc sbb add push sub sbb cmp fcomps stc inc cmp xchg mov add loope inc in sbb adc sbb inc lods adc popf pop push in rcr jp insb jo or into stos int jecxz,pt (bad) adc cmpsb scas xchg (bad) clc (bad) xchg add mov lret out je dec adc adc repnz and out cmp inc lods test push imul in in cmpsb aas adc pop push popf shl aas pop gs cmp pop vpminsw jo push jge jo out inc mov lea xor repz mov fcompp inc in jg mov jns aad in jb jmp add cwtl cltd test jge cmc dec loopne mov sti mov push lea and lock js (bad) sbb inc adc out fidiv pop lahf adc mov fsub mov nop leave push cmp lret mov rcrb jno (bad) mulb dec mov or dec movsb out testl cmp mov xor cmpsb sub mov ja lcall mov test mulb adc and inc inc mov adc dec int or lahf ficom outsb lahf sub cmp (bad) jp jae ret shrl sbb popf sub popa push push xor ja jae inc pop or sbb mov jbe xor lea xor xlat mov or sub sahf pop cmpsl testl mov cmp adc ret and mov or adc jae and add inc std adc inc incl jne jle aad jle and pop xchg pop xchg mov (bad) add cmp adc int faddl std scas (bad) aas fstpt test xchg mov fidiv xchg (bad) (bad) pop lods sbb movb fcoml push mov sbb addr16 lock int3 jno jo,pn add imul roll bnd rol movsb cli jg movsb adc call in push or shrl sbb iret jbe push enter les loop (bad) cmp insl cmp roll cltd lahf lcall pusha or push mov call fiaddl xor shl loopne repnz mov mov (bad) jge (bad) frstor push adc push xor fs xchg in into jbe cmp push jmp push xor idivb rcrb add cmc mov popf in push addl idivb cmpsb addr16 mov xchg pop loop imul xchg sbbl pop inc ja jae or mov roll jbe rorb push jg and test repnz aas mov shrl add fbstp adc dec (bad) pop xchg xchg inc hlt hlt mov inc cmp imul sub pop bound sarw push lcall adc (bad) jge pop mov mov aaa or out imul adc movsb enter mov dec cmpb enter cmc hlt cmp mov jno sti mov dec mov lea push xor jb sub mov movsb mov mov sub pop push jmp into lret jns inc ficompl es leave xorb add cld movsl pop lods mov pusha xchg xchg dec lds dec movsl rcrb and add lcall push mov scas sbb dec push je (bad) lret xchg inc inc mov test cmp push sub cmp mov cmp jns and mov pop scas (bad) fucomip sub hlt and jae or xor mov (bad) stos test ss inc inc add daa dec lods add xchg inc jp pushf imul cmp dec cwtl inc out pop std mov or mov call jp xchg dec cmpsl add jge cs icebp add mov and cwtl sahf add push xor pop js jg inc or flds aas jns out sub inc adc insb outsl iret outsl push pop dec push (bad) mov push pop lock pop mov daa add rcr out and cmp jbe push and insl sbb and or in (bad) and xchg add or lret pusha jae in jnp mov dec (bad) inc (bad) push aaa loope inc std sbb xchg (bad) adc test (bad) negl lret fisubrl inc insl mov roll jne push sahf popa add lret je divb test sti cmp repz sbb or xchg mov dec and lock jno ljmp stos or inc std popf xchg (bad) loop lods ljmp movsb xchg popf fistp mov icebp cmc sub pop dec pop jge jo out inc shl dec mov cld aas xor (bad) (bad) call pop cltd mov mov aad mov sub cwtl cltd test jge pop cmpsl popa and out (bad) cmpsb xchg je xor dec or xchg ljmp test mov std js sbb (bad) shrl adc fs add sbb dec mov push jp mov cmp testl divb dec push das jmp lods ficom ficompl jns les pop popf sbb inc out sub sarb (bad) insl mov and out cmp add jno imul imul js mov cmpl pop inc out jl push cmpsb fsts inc and ds (bad) les jg inc adc nop sub sbb mov inc imul nop inc (bad) adc jne and sub stos jle sti clc jle add add jbe pop push xor mov xor lock lods push loopne pop xor (bad) dec push or subb or mov lds mov (bad) jp add jbe and mov iret int jmp or cmp mov adc sbbb mov out xchg sbb cmp add cmp ja (bad) push dec sub xor pop inc fistl pop push push adc push insl icebp mov (bad) push call aas xor inc mov sub or mov outsl into jl push cwtl xchg adc xchg or add ja xorl push jmp ja xchg mov cmpsl pop jmp add stos cmp pop or push shll add cmpsl bound sbb leave add pop inc sbbl (bad) aaa or les adc xchg faddl inc sbb data16 inc and or into sbb lret mov cmp lock test add and jns lcall sbbl push sti test adc sbb sbb in incl push push cmp mulb xor and test insb sbb imul xor addr16 push aad movsb jno cmpb sub cmp movsl add xor add bound cmp sbb inc inc xchg stos mov nop arpl mov mov add repnz sbb movsl outsl (bad) in and and dec in xchg fiadd hlt push ss mov add repnz mov mov dec daa push dec pop (bad) (bad) mov orl mov inc jo inc jmp pop lret mov adc xor andb popa mov push inc sub mov cmp out iret mov jmp push aas cmp incl push repz aam arpl mov or push pusha mov je jecxz sti push dec out js int das and loope adc dec ds xorl add pop movsl push ret js ljmp icebp xchg mov sbb sbb push subb imul inc push fwait mov lea mov faddl and nop add xor xor add int imul sub adc subb roll imul imul lret cmp incl sub bound bound rolb roll ja ds dec cmp and imul jl sub mov xor js fstl sbb ss (bad) lock add packssdw add add ret inc mov jle fwait loop addl mov dec cmp incl test sar sbbl adc cmp sti mov xchg (bad) jb sbb loope xchg rcr push rol xlat popa fsubs enter xor jg or rorb jg inc mov fldcw ret mov sbb inc stc and lea xor inc push lcall add cwtl push pop mov out jb mov or dec or out cld mov cltd xor mov mov fild (bad) xchg imul in outsb popa test ficompl lret mov les iret testb mov imul dec lods test push cmp or into test lret push hlt sbb push mov add push fs jbe fsubl roll (bad) imul add daa fist or ljmp (bad) ja les imul (bad) iret sub jge sub popf push and jecxz nop sbb insb repnz rolb movsb lds and add or xchg fiaddl (bad) cmp inc int cmp push jp and dec mov inc hlt xor mov jb std ret jp imul sub imul fwait sahf jmp rclb mov les outsl cwtl inc cmpsl or les gs mov adc (bad) (bad) enter push stc (bad) js adc push adc push and fistl sbb or incl dec and fsubrs or dec std or fidivr stc mov xor dec ds xchg inc sbb iret cld and mov sti mov std push mov add pop daa outsb pop outsl push test cmp mov jae dec movb pop push shll incl cld and div in roll adc jnp jne (bad) cmpsb (bad) lock je les imul mov nop adc lcall out int bound and pop add int fnstcw or pop mov shld adc cmp cwtl repnz jne outsb arpl or and mov dec fs sbb pop lods (bad) jl fldenv lds pop mov into mov or dec jecxz and sbb (bad) xor inc test outsl sarb sbb insl mov xor aam call inc mov pop dec mov sub sbbb add (bad) outsl insb mov mov lock cwtl sub into ficomp xor mov je add mov lds push add nop inc fcompl push cltd and push jmp and jns,pt dec cmp sbb jbe inc das mov and sub in mov mov inc mov flds aam sbb xchg insb enter pop imul ror jns int pop pop (bad) mov pop testb addr16 jno pop adc pop push cmp inc and mov dec aaa paddw out test incl repnz sahf and and mov aam adc pop call imul and bound (bad) xor (bad) sbb sbb popa jnp fldz xchg and int aad xor fimul not (bad) adc sub int cmp add mov pop adc jb js mov xchg sbb pop jmp (bad) inc xchg cmp ret cmpl out add jecxz jmp aaa int nop shll pop repnz imul aaa inc mov mov jg mov jbe mov call and fdivs inc int3 or xor roll dec jmp add (bad) xchg lods mov stos and (bad) jnp jbe lock xor (bad) scas inc sbb mov stc xchg push dec jns add je incl add jnp dec cmp mov int scas dec mov adc aas imul adc es and mov push xlat cltd fwait sbb cmpsl mov cmp jb shlb outsb es xchg add aam jg cld lods orl (bad) lock sub iret outsl mov bound inc sahf inc fisttpll add sarl adc fisttp mov sub js sti mov xchg (bad) jb outsl push negb lret ljmp sbb and bound jle fwait and add sbb jae loop pushf sti lcall mov incl fiaddl sbb clc addl imul dec push sbb xchg mov push pop mov cwtl in int3 and adc data16 fbstp in push push das push jecxz pusha ja jge sbb out mov xor clc mov loopne xchg imul xchg inc out push imul ret mov dec mov movsl or cmp jns fimul xor mov mov xchg aaa and xor fisttpl dec mov leave push xor imul daa rolb repnz pop mov fisubr pop les and dec shll bound push je jecxz ds sub or xchg dec mov jns cmp cmpsl add pop and in lahf fdivl mov paddusw push inc or or aaa pop movsl outsb and jge cmp rcrl imul pop jle pop and incl mov ds ss les aad xchg jl incl jo fcmovb push or hlt lods jge mov and lock inc (bad) jl pop lock mov dec es out adc xor rolb or inc (bad) into (bad) (bad) incl pusha inc ds push sbb or test jp cmpsl xchg popf rolb xor dec sbb in cmp bound fcmovbe lods loope xor or loop mov adc in mov jp or lods rclb fidivr jp xchg inc sbb mov jbe sub sbb cwtl nop dec mov fbld test int (bad) adc in sub xor sbb jp imul insl lods sub inc test in inc add int stos add out out and jb loop add subl add cli movsb mov push mov and push rcrl adc sbb rorb lahf adc nop pop cli test push add and and andps lods mov je or (bad) cli and (bad) inc xlat sbb jl das dec ljmp add push lods jge cmp or popf xor inc push adc and add aas out sbb fidivrl addb sbb fnstsw mov cmpsl aad out inc insb je in inc lea aaa jb stos pop jne mov inc lds flds adc sub push cmp ljmp imul xor and cmc subl nop xor add mov repnz mov jne in lods sub adc cld inc std call jno or or subl daa cmpsb in add rclb dec sahf mov (bad) or enter push xchg push mov fsubp mov add add sbb xor and fs push sub sbb mov add aas push cmp push mov add fwait jb mov sbb xor inc in inc jp jmp mov push adc repz jp or xchg cmpsl ja or rclb loope repnz xchg or and repz mov xor ja push mov inc out out inc push push jg inc rorl or or cmp mov or inc insb mov xchg (bad) xor nop aaa and lock sbb add mov push outsl out (bad) stos out pop (bad) and sub adc adc dec lret xor cmp bound call sbb (bad) xchg (bad) add loopne push inc push (bad) jp or nop push (bad) es and and cmp cmp inc out stc inc repnz inc lods add movsb push jb pop insb sar mov bound rorl pop lret push lcall into push in (bad) xorl jno fucomp sbbb sbb or aas arpl lret inc mov cs sbb (bad) dec fldl dec mov sub rolb inc ds jle hlt mov push fdivs dec or add sti dec in xchg mov inc das mov popa (bad) testl sbb fstpl outsb jno add push mov mov inc inc jo std js int push movsb outsl jo inc add xchg xchg push jae lods add nop jbe loope cmpb xchg jbe sub (bad) cmp xchg stc adc addr16 out push xchg fidivrl push test sbb sbb fstps test dec adc jl sbb insl mov cmp pop pop and xchg bound pop xchg jmp push outsl mov sub mov dec divps mov cltd or or imul test pop rolb add lret pop dec (bad) gs pop fwait addr16 push arpl xchg aas aam imul mov add add adc test xchg sbb add push push mov lods jmp inc and addb xor mov (bad) rcrl xor cmp sbb pop (bad) add (bad) in jmp scas jbe mov lcall in inc out call xor inc iret cmc or inc in cmp mov mov sahf rolb lds dec or and jo jecxz or jp insb fwait mov push dec mov mov xchg aad sbb push (bad) in push add lea or or lea push cmp (bad) add mov cmp sbb push (bad) je lock fcom aad mov inc std sbb or inc inc pop (bad) mov push adc sub sahf xchg (bad) push push jg scas lret add mov push sbb scas jns hlt inc inc mov sti dec pop ljmp sbb arpl hlt je movl and movsb mov int stc mov mov mov mov xor stc loop arpl mov push or and cmpsl fidiv xor push mov push enter inc dec clc cmp clc and sub jo dec mov sbb cwtl ljmp outsb mov and add nop jns shrl js jbe inc in jmp mov xchg mov fnstsw push cwtl mov loop fildl jge mov sub outsb sub iret popa inc jmp xchg dec lahf dec inc jmp negb andl pop (bad) (bad) pop mov cmpsb test nop pop shl into push fnstcw cmpsb imul aaa (bad) aaa and xchg add idivb jge jnp (bad) divb stos push mov repz adc sbbl add jae lds push (bad) xchg out sub dec (bad) rolb or mov xchg loopne pcmpgtb adc sbb dec test inc mov lea (bad) ret or mov add mov mov subl in (bad) jl leave xchg xchg push out push xor inc popf in std enter lods testb inc (bad) hlt jp inc pop insl mov loop in inc lcall push in movsl mov sahf outsb faddl out addr16 xor inc insb jp fiaddl cmpsb sar mov mov push lret sub push sbb stos xor dec (bad) lret pushf std add ret pop mov out xchg adc ret out out inc jl jnp cmpsb push leave jnp sub aaa outsl inc in cmp pop xchg and outsb lea cmc sbb in mov aam sbb and xchg or sarb push jp hlt xchg mov ss incl mov cmp fiaddl mov adc inc in inc in lea or cmp mov repnz jecxz aas push pop mov mov push mov sbb (bad) cld stos lods or mulb mov incl cs lds cmp pop xor jp mov jecxz mov jle ds mov jbe repz sbb out sbb or lret add dec sbb stos subps cwtl fldt out xor and sbb lods sub add pop (bad) into clc jo inc lods (bad) (bad) push adc outsl fldl fldt and mov add es jle std sub dec mov push xchg outsb xor es add mov push nop jp iret and sti sub (bad) sbb icebp inc inc jecxz subl cmc (bad) xor push subl rorl or and aas inc mov imul ror into je rclb push push xchg loope cmpb nop mov (bad) mov xchg inc (bad) cmc dec lock jge xlat push aaa jmp (bad) cmp inc stos add adc leave add call out inc lcall sbb mov mov in or pop sub jecxz andnps xchg push xor push mov rolb jbe loope pop cld sub (bad) lret arpl out pop pop test mov sahf leave in push push xchg jno jnp cmpl sbbl or sbb push movsl push lods cmp adc aaa pop mov add outsb ret sub or shr push sahf in mov (bad) rcr sbb mov (bad) mov insl and test mov dec jp xchg jecxz mov aaa imul movsb cmp and jl add cmp (bad) adc fildl xor (bad) jb in das jmp loope and cld mov (bad) je and jbe sub dec loopne mov in inc cs decb (bad) mov xor push cmpsl sbb incl or movsl cld ja lea xor mov subl dec inc pop inc insb aaa xchg jbe sbb lock xlat cmc ret mov adc dec (bad) ds inc roll mov sahf mov pop pop mov fisttpl inc into cmp mov nop sub add insl or mov pop lods dec and addl fadd int inc call faddl inc mov cs push xor insb lock cmp out jno cmp loopne or test mov add and out adc imul repnz inc inc xor addl push inc jns inc xchg lock add adc int sub sub in xchg arpl or popa mov push cmp out jp xchg stc mov push adc mov cmpsl lock stc jl add inc lods jo daa mov or pop xchg nop adc add hlt aas or jl adcl sbb adc dec fwait mov add ljmp add push ds inc iret cmp iret add mov xchg scas xchg and inc fdivl push xchg in inc mov lahf push jo inc clc outsb cmp popf imul pop pop push sbb out aas inc add sbb movsb std outsl inc cmpsb (bad) sahf in rclb sub sbb sub ds and jecxz cmp or xlat and sub cmpsb and aam sbb jl add pop lock int3 sbb mov arpl repz and call psrad xchg or adc or (bad) test ds and arpl jbe lock sbb in add cmp adc iret imul xchg sbbl xchg (bad) sub xchg mov ss jne adc sub insl into and inc mov mov pop adc sbb pushf out pop and xor xchg fadds and adc mov cmp xor jne cmp xchg into loop loop xor idivl or dec fisttpl repz xor pop push inc je rol add std inc cmpl sub pop je movsl dec imul cwtl inc pop cwtl cmp xor pusha xor into data16 testl fsubrl sbb arpl out pop pop mov sar dec into loopne dec mov sbb std jb push mov jl sbb enter dec mov int3 daa clc push jb popf push jne call jnp loopne mov (bad) jl add cwtl fiadd add mov dec inc xor and jle push pusha call xor or repz insl pop repnz jecxz jecxz cmp inc lret pop pop adc fs in add jle adc inc (bad) je mov bound cwtl push je sti add leave add iret adc pusha ja stos lods cmp and repz xchg xor out aas and push and loopne pop int mov push aam pop mov inc (bad) nop dec jmp roll stos pushf push sbb aad ds ss lods inc icebp inc xchg loope aaa cmp lods nop and loopne push or jno addb addr16 stc cld rorb mov sti or aad scas pop mov add push jne cwtl (bad) mov sub in pop (bad) mov add mov mov stos (bad) mov cmp dec lock adc pop test lods es lret mov inc xlat dec push (bad) repz sbb ljmp cltd jmp lret xorl and stos xor jge jge gs xor hlt ja fldcw aas or mov rcll clc mov jp fcmovu push inc (bad) (bad) notl xchg or add ret out mov loop pop push jle in inc dec and cmp sub notb aad popf in lahf mov adc sbb push mov add sarb dec add cmp (bad) jnp into mov dec push or loopne mov adc addr16 or or aas mov inc jmp rol mov dec jb add fidivrl cmp repz cmp mov incl ljmp adc dec add xchg pop fsts cmp jg stc and loope (bad) ficompl out pop add adc jl adc aad shr push inc in imul popf add (bad) (bad) inc inc jmp into (bad) push shrl push testb (bad) testb xor pushf test pop repz out cmpl cmp out cmp adc add push jae mov xchg mov mov pop xor movsl loopne call mov cmp (bad) pushf mov cwtl add test test arpl add push dec ljmp pop in mov call (bad) and ret cmp out inc imul xchg fwait dec in mov (bad) jae stos xor xchg push xchg leave cmpsl inc loop jmp out inc in lahf std dec add lea push ret imul (bad) jg adc adc imul cmpl pop sbb xor or insb ja fiadd pop cwtl ret rcl out mov pushf and jge sbb sarb xor (bad) sbb mov daa mov xchg mov cmovbe mov and pop and insb into les dec mov ds out imul mov bound mov mov (bad) cs ror sbb (bad) mov add addr16 mov jns pop imul jmp mov inc sbb pop fptan inc push lcall (bad) int out cmp out jae inc std or mov jb std add mov into stc in pop and (bad) repz in nop cmpl aam inc fldl push mov adc andl rep push push push jbe or mov repz aaa (bad) pop clc add ret jp test fs addr16 popf push out or (bad) ds shrl loope mov jo inc fiadd lcall mov mov (bad) lcall cwtl adc bound add cmp mov addr16 clc mov popf out (bad) addr16 jg push or dec jae loope je mov and in fist fldl lock fiaddl sub xor add out mov push sub incl dec test daa leave add enter jbe sbb cmpsl push icebp and cmpsb divl pop pop jp pop fs mov popf into mov pop sbb in xchg dec sbb or dec mov add outsb sbb inc xor xorl addr16 and xchg or or fucomip adc fisubrl popf daa pop pop cld add xchg jae rolb lock in std nop cmp in in (bad) sub sarb (bad) rcl add shlb xor mov push daa aaa inc sbb mov es or xor push push push xchg adc mov sub fisubrl addr16 rcrb cld dec xor inc cmp and test push test ds es (bad) and add xchg xor mov ret fimul push xor (bad) jecxz add push into mov mov sti or aad scas insb rol fidiv mov sbb fistpl (bad) mov fmull aaa inc mov mov cmovns fisttp mov sub xor mov rolb xor sub cmp mov hlt (bad) outsb push dec in add decb cmp lods jae imull pop lea and leave clc addr16 inc mov pusha out mov and arpl push sbb inc mov pop jge adc (bad) (bad) or xor in ljmp sub cmovbe (bad) les xchg xor jle xchg (bad) aam mov jl adc pop out cmc fiadd mov incl dec out mov js mov nop push imul xorl scas in orl xchg fsubp subl sahf ret xor inc lret lds mov out ds ds xchg inc adc clc pusha out sub pop or xor (bad) lods or fdiv mov add xorb mov rolb es out mov aad sub clc pop ljmp dec flds std fst sub (bad) fimul jl addr16 in andl bound push xchg cmp mov fnop cs lahf icebp inc lea test mov xchg mov loope js rolb dec add out mov xchg mov mov and inc dec inc add fiadd fldl cwtl ret iret add add call les xorl and subl ficomp and jmp push and (bad) mov mov ljmp pop mov movsl daa mov lahf aam adc or (bad) repnz push mov notl sbbb stos mov xchg cwtl sbb pop cmp fadds add mov in out imul push pop test clc (bad) in movsl mov shrb cmpl jae mov push inc mov loopne scas daa push fdivrl jb adc test mov sbb roll sbb dec in scas aam add leave add movl arpl jnp jo mov mov adc mov push rorl push xchg test mov jo test mov mov or mov mov loope cmp sbb and push ja push xor inc pop and adc jae xchg inc mov aad ret insl ljmp aas rolb movsb clc mov pop jle sub (bad) and adc (bad) sub jno mov bound push pop push mov mov xor fs (bad) js faddl nop es mov cwtl mov add mov loopne xor fimull out incl sub jb int (bad) pop inc sbb mov and adc imul pop ja orl test xchg inc divl adc and cmp and pop xchg cli fiadd out sahf in jmp dec cmp sub loopne insl fiadd les mov adc or pusha cmp dec sbb out mov fcmovbe inc outsl jbe push fist xor push jbe test mov xorl dec mov sbb add and int out jns adc and fsts std test lret add mov js mov in inc cwtl cwtl aaa in inc in in and divb fdivs int mov repnz add xchg sbb add fucomip xchg add cmp mov outsl mov sar (bad) notb (bad) ffreep add add mov add ljmp push sbb scas inc outsb cmp jge cmc add scas cmpl pop aam push push mov cmpsb mov adc mulb add add push stos sbb out cwtl pop xor add push je into and (bad) sbb pop pop push repnz add hlt pop adc mov push or sti out adc pop and mov pop fist push inc ljmp test xchg pop loope jo adc js cltd (bad) arpl add inc in repnz lea jp mov or mov fisubl cmp add or adc cmc jno jecxz add adc lds subl test xchg xchg push test into and (bad) mov lock mov sub jg sti rcrb mov je mov hlt stos cltd ss pop je js jl pop xor sub cltd repnz ljmp sub dec daa in xor xchg inc or fnstenv leave add fwait jb fadds mov adc movsb mov inc pop mov imul dec add nop cmp sbb out movsl xchg pop push add xor aad sbb and pop out inc mov insl xor sub int cmpl and imul loopne xor cmp jns test pop (bad) xor les fild add sbb es sbb ficoml sbb jecxz test and mov or dec inc loope in inc lgs push push mov call push mov ss daa xor and mov and fiadd jno or or jmp xchg adc mov xor sbb mov mov inc divl cmp arpl nop gs push adcl inc cmpsl mov scas sub cmp xor scas inc dec loope andl adc mov xor aas push adc (bad) add cli and mov cmp into daa and repz aas fiaddl rcrl mov rcl arpl mov add dec add push add sub push mov push jmp xorl clc fs roll mov incl insb fcomip dec or lea aad mov sti in lahf flds aam xor push add or fsubrs call cli mov out in inc jle sbb sub inc add push mov ds sub inc sbb adc stc lcall loop daa movsl aas insb jno icebp xor xchg in xchg mov add into fs add lds into cmp les rcrl push add xchg (bad) out xor hlt dec movsb in cmp cmp daa fldlg2 jae (bad) cld scas jno push push sbb ljmp jmp mov daa pop inc fsts (bad) loop jae xchg xor test imul xchg mov inc adc mov mov enter and push (bad) es ja add pop pop (bad) mov (bad) sar or imul adc fistl add incl loope adc mov div fcmovnbe push jbe sbbl outsb cmpl xor sub mov or int and add sbb add cmp sbb insb es (bad) notb mov lock (bad) repnz jg push mov or push icebp inc dec sub (bad) aaa dec mov adc loope add xchg sub and cmp repnz sub es fisubrl and jle and ficoml lret xor lods insl fimul push lods pop stc jae mov adc add jae imul in inc popf inc sbb mov mov in dec fwait test mov cmp mov (bad) mov mov mov cld div and sbb fdivs (bad) daa pop jge cmpsl repz mov (bad) xchg inc fcomps lea xor and mov and out (bad) dec fimul push jecxz lock (bad) fnstcw dec adc lods or call lret out or push xor push cmc or js or testb mov add in dec daa mov jp je inc mov push pop aad inc inc nop inc inc pusha sbb loop push (bad) je scas daa lock mov aam xchg lock gs cld cmp repnz adc mov scas sbbb or cmpl inc ret pop fist sbb push incl lods mov test xchg pop loope jo daa sub adc pop push adc enter daa rorl pop mov or mov inc jl mov sbb push movsl and dec mov mov pop cmc jno mov sub ja jne push pusha iret insb adc xor sbb pop cmp dec pop (bad) negl les imull in sbb insb jg call (bad) stos stos inc cmp dec mov or add xor inc mov enter inc lret ja repnz push xchg cmp inc test stos and jl sub pushf nop dec mov push cmpsb mov stc fs jl xorb in inc push xor mov mov jge or push push sub sbb enter cmp cmp incl int3 inc mov hlt out xchg xor xchg sbb add int inc xchg add inc fldl sbb jno and cmp addl loope sub sarl (bad) dec sub sbb jns pop mov cmp mov mov add hlt daa pop nop stc mov sub xchg sbb jl jbe out insl jae lock arpl jo sbb add xchg neg add mov flds cmp xchg (bad) xlat inc lods add sub pop sub pushf lods and dec outsl mov mov clc pop add repz xor jmp aas rolb xchg clc mov mov xchg pop mov and cmpsb or aam lock fadds wrmsr add push push push dec (bad) and movsb cmp popa add mov sub popa in add mov xchg cwtl mov mov jmp mov int lcall and lods ret and jo add ja add jo aam movsl pop test call add iret push sbb es mov mov inc sbb (bad) ss push jne mov add jl call cmpb inc adc mov mov mov add popa ljmp push add sarb add adc add jg fadds inc flds imul and nop cmp push push (bad) cmp jbe out (bad) mov mov adc mov adcl xor mov or iret int push into mov sub push pop push xor addr16 xchg leave push or add imul mov push pusha jge jae and mov or push xchg (bad) in xchg enter iret jb aam sub jo inc insl xchg out ret xor and stos adc mov hlt inc xor cmp mov cwtl aas pop or inc sub and sahf into pop nop push xchg cmp dec pop out sbb nop arpl call jo sti and pushf or pop popa aas and cmp (bad) push cwtl and test movsb dec arpl jge add sti ss jno adc rcll jae xchg push insl fs jns jbe leave add mov mov mov mov in or cmpsb mov add call pop sbb inc push ja test ss aas fstpt adc add fwait sbb out insb and mov and push (bad) xor popa pusha shlb mov xchg jg cmp adc mov sbb jae test jl or shll fisubl je push int3 adc fs jo test das je aam push (bad) mov dec inc xchg jne dec popf mov add xlat jae ret adc jmp jle insb (bad) in adc mov stc mov xor test lods cmp scas mov xchg sbbb push clc nop (bad) sbb clc dec xchg pop and idivb cltd xchg mov cs xchg pop jg cltd or mov insl mov rcrl insb subl jecxz push pop jmp fwait outsb in (bad) pop mov lret push or mov mov imul push movsb divb shrl cltd les jmp movsb inc addr16 das ljmp xor inc sub das xor add inc ljmp sbb popf lahf pop nop jp cmp jp fwait adc mov outsb data16 sbb faddl out enter or fwait lcall int3 out es add fnstenv lret xorl push in inc out stos lods push inc (bad) push or cltd ja pop inc loop and pushf jo xorl adc orl pop pop adc adc cld adc inc jo test inc mov orl xchg subl je inc loopne mov dec movsb loopne dec daa jmp push jg push push (bad) fld adc push jnp cmp popa fxam nop or cmpsl cmp ret pop repz pop inc pop jae mov shrb xor xchg ds add inc sbb fdivs lret add xchg (bad) sbb (bad) sub aaa dec cs sbb nop sub iret push xchg dec xchg mov inc mov call mov add sbb out in pop hlt inc stos rcr loopne jne add outsl dec fs mov pop pop ss pop mov or dec fdivp ret mov fsin push faddl sub xor cwtl add test push rol sub adc sbb cwtl lret push cmp inc jbe sub ret cmp insl aas jge push cmp popl iret std sub inc and addl inc cmpsb cmp xor les add (bad) sbb out je push cmp aaa or faddl mov mov xchg xor fstpt pop in mov inc pop or insb (bad) jp aas dec dec out test jbe repz pusha inc aas mov push dec or fcmovu inc jmp iret divl pop jecxz lea (bad) pop daa or cmpsb jbe lahf repnz adc outsl add (bad) (bad) pop xchg cmp xor nop jne mov fnstcw sarb lret mov dec outsl add inc mov test sarl enter or xor cld nop adc rcll jecxz cwtl add sub sbbl mov lret push dec inc out insl ja int3 (bad) js das scas into xchg mov mov mov xor (bad) loop les push xchg pop out push rolb (bad) ficoml das xor incl push sti cmp repnz out sti ds push mov cmp add subb popa mov leave add cs push dec sub fcomi cmp pcmpgtb mov clc jae mov cmp mov dec nop add adcb pusha inc mov mov pop jo test xchg fcompl pop inc jecxz and mov cmp push mov aad and push scas outsb mov cmpb cmp jle sub ret add mov inc out jbe ret incl mov sbb inc dec mov push push rolb cmp or pop mov leave sbb arpl dec mov jge out hlt (bad) sub or mov cltd roll cs incl and sbb leave and aad add mov mov mov adc leave mov scas mov fs addb in sti push les popa xchg and (bad) (bad) pop in and test adc test inc pop mov cmp push cmp add fwait inc scas jecxz push mov fcomps cmpb setg add xor cltd dec jb stc ret pop and scas lods inc aaa rorl add aad idivl lret jl add mov mov iret (bad) cli fmuls or pusha ret mov call adc xchg mov xor xchg int jne add pop das cmpsb aas xor icebp sbb push lcall icebp push mov into inc or movsb dec inc dec mov pop ds mov sbb mov or (bad) arpl (bad) jg or pop pop xor int3 push xor leave in adc pop sbb xorb cmp push movsl adc fwait std rorb inc mov out sbb stc inc imul in es insb mov adc push jo sub popa aam je inc in adc or out cmp xchg stos xor (bad) ret mov loop jge sbbl push mov jmp std inc call sub add icebp or xor repnz push mov hlt push out imul (bad) or out inc addl out dec js out int3 repz inc loope rcr insb daa ja sbb or push jge lcall shrl rolb and outsb inc mov push ds pop pop dec pop adc nop idivb insb dec cld adc pop cmp add pop mov pop int xor cmp cmp (bad) adc or jno mov push xchg sbb inc int (bad) push pop jle js and cmp subb cltd testb inc dec xchg inc leave fist jo je cli fiadd or pop in sbb sbb add mov fiaddl repnz mov cmp roll push mov lock mov jle add inc ds lock or sub mov fiadd mov xchg aas xchg ds punpcklwd pop loop ror add cmp mov cmp (bad) mov in imul jne in xchg pop aam sbb mov mov sub cltd mov rclb and jb and dec add xchg es loope fadds fild icebp xchg or dec fcmove data16 jg add test int3 test scas in push lcall cld shl push pusha into xor jns adc andl adc pop add scas cmp push cmp pop in sbbb jae pop lret xchg xor xor popa and mov sbb add outsl add adc (bad) pop ss xchg adc mov fimull add sub rcrl (bad) int mov rolb sbb adc sarb and jbe mov xor clc outsb lds out dec push jo pop jp cmp cwtl (bad) daa outsb into inc add cltd imul lahf xchg int3 and push ja lcall and out inc loop inc cli mov cwtl xchg cmp inc and (bad) mov lcall and jecxz fistpll jl outsb dec (bad) loopne sbb cmpsb (bad) sub xchg mov xchg cmp add cmpl cwtl (bad) and pcmpeqw xorl push vmwrite inc je and nop sub jle subl cmpsb imul xor mov inc (bad) xchg out (bad) ljmp xchg iret leave add inc mov jge test inc cmpsl cmp mov rclb mov or adc jbe push mov push xchg pop jg roll mov or inc sbb das xor mov repz ljmp or scas adc out ret or (bad) xor mov add sbb loopne and clc outsb jnp mov mov out add fidivrl mov mov (bad) pop scas daa outsl enter cmp icebp inc dec add aaa xchg add pop mov mov lock cmc int das mov push (bad) mov es xchg pop xchg cmp mov sbb push ja jp rorl in inc add outsl mov mov push xor push jo mov orl out std nop sbb add mov mov adc inc (bad) clc push sar add cmp pusha cwtl xor test or cmc loopne mov negl lcall (bad) sti add dec aas ret and in iret mov test xchg sbb loop inc add fcmovbe mov inc lret fcmovu pop rcrb adc xchg mov push incl push add faddl idivl push (bad) push sahf mov inc into fs jb mulb mov push mov rolb fidivl adc cli and sbb lahf int outsb or cmp in pop mov xor mov adc mov pop inc mov jns inc (bad) pop loop dec ret xchg shrb mov iret pushf cli mov mov inc inc pop mov (bad) popf pop les lret cmp push aad cmp and xchg aas xor jge orl inc lcall mov and ret pop in mov fisubrl inc mov (bad) mov add xchg cs sbb inc ljmp das fldl mov enter cmpl lret add std jns mov jbe (bad) (bad) flds test xchg cmp sbb ds or imul cmpsb inc fdivs iret jb pop add and dec stc inc aam (bad) je (bad) stos getsec dec xchg xlat cmp jg flds test aam sbb push push jne out add jmp mov (bad) inc fadds push iret lcall sarb dec pop or dec icebp add jo mov or loop inc das mov sbb inc in rorl jp leave das js rcrb fwait jnp push in xor daa lods leave xchg das adc push repz jmp (bad) xor pop and xchg mov (bad) mov jo out repnz lods aas movb bound jle adc sti movsl sarb loopne push inc adc mov and inc sahf int3 sub jo mov popf push sahf enter pop pusha pop xor add lret ja add pop xor jb sub out pop nop pop mov sbb sub pop add popa mov xchg sbb mov ret add jmp add cld rcrb mov (bad) dec popa insl pop and call clc inc out in inc push test mov pop lahf mov cmc or in fsub add jo push lahf dec outsl sub mov idivb pop push xlat cmp (bad) repnz inc subl pop or and xor outsl fistpll inc shlb or ret lahf jb cmpsb es dec lret repz stos xor (bad) adc or dec popa jmp mov hlt je sti inc xchg pop pusha sbb fs stos xchg scas push int3 imulb stos pop cmp arpl cmp dec sarb aas jnp cmp push dec loopne (bad) jae lahf fs fnstcw ret fwait pop cmp jp hlt out lea dec sahf (bad) jg enter sbb mov xchg sahf testl data16 fiaddl cmp les cli popf adc in jecxz cmpsb jg add test and jno dec mov popa (bad) fprem1 sub xchg cmp fdivrs bnd test or pop push mov mov pop stos mov add ret fcoml add push shll jle pop mov adc bound fdivs out sbb cmp (bad) imul jns inc mov idivb jmp aad sbb sub aad loope fwait jg nop sbbl fcomps popf push mov (bad) pop jns xchg mov xchg push aad out adc and mov pop sbb fidivr push xor (bad) adc pop nop jns or cmp cmpl mov push sbb inc daa mov xchg mov add fadds xchg add je mov mov fdivrs (bad) mov and mov movsb cmp mov jbe fs mov add inc push or add in mov data16 rol into or and stos (bad) xor (bad) inc js sbb ret jecxz repnz sub loopne jle lock or test sub push cmpsb ss daa pop rcrl mov daa insb cmp incl push and (bad) cmp xchg (bad) push pop in rcr addl hlt divl xchg push mulb aad (bad) sub aaa je and mov jmp push imul inc out test inc (bad) aam insl ja jl int lahf test inc fs ja hlt hlt inc sbb (bad) int3 xorl mov js dec add mov mov jo jno aas fldl2e (bad) lods push cmovb imul inc aaa xor stc hlt inc lcall or push mov gs inc xor pop fwait in push or push or sbb aaa xor adc xchg aam repz pop jns jo insl mulb dec fistp jne sbb addr16 lahf push sbb xchg sub add stos fcoms or push int3 cmp jo adcl mov es mov inc push mov mov or addr16 jg adc or ds rcl jl jno mov rol jns jb rolb jp mov int hlt mull push fist inc mov jae repnz push pop pusha sbb jns pushf or push and xchg cmp adc jl push sarl sub inc dec sub in push orl stos (bad) nop out mov lock (bad) in xchg out add pop push jecxz dec adc push fwait mov xchg ss leave in stc mov mov add jne out cmp xor push icebp fiaddl mov xchg shlb add xlat (bad) pop imul in jns cmp and push shrl test xor xchg sbb sbb dec nop pusha ja jbe sbb iret outsl xchg push imul cld rclb or aas and mov addr16 add add jmp int cmp sbb and ja imul sbb out (bad) add inc test jae jl mov xor inc fiaddl fnop pop test insl xor sbb repnz cli push mov inc or jg inc dec int3 mov pusha jg,pt mov xor loope pop mov push rolb cltd cmpsl dec icebp mov ljmp in mov outsl push fisubr and ret lahf nop inc ds shlb adc movsb out test jae mov inc jl adc vpaddusb add sbb test add inc or std rolb push aad fldcw or icebp inc faddl pop push ljmp xor jno or repz mov pop push mov enter xchg inc mov pop int3 ret and jp cmp add int3 add (bad) xorl xchg (bad) jge lahf stos adc lret mov adc aaa xchg jo outsb (bad) cs call out clc pusha outsb or add mov xorl adc (bad) cmp adc jnp push add aaa xchg lcall and adc cmp mov insb mov adc pop push js add pop xlat lcall sub (bad) ss xchg add mov and aad inc mov mov dec clc push roll aas pop enter xchg pop xor xchg adc pusha repz jecxz xchg leave add cmpb ret cltd or sbb fisubrl in ja xchg fadds fimul sbb (bad) add (bad) jae mov xor cmp ret or and out inc out xchg xor out push sub dec and insb int movsb sti shl adc cmp push pushf (bad) sbb or sub jno xor popa pop addr16 or sub lret fist sbb xor sbb es call test mov add mov sbb add jns (bad) loop aam xor mov repnz inc sub pushf xorl popa ljmp (bad) xchg lret inc out lea roll mov nop sub stc mov or inc insl mov stos aaa (bad) shlb dec je (bad) je in xchg data16 xchg mov or jp repz and data16 mull (bad) rcr icebp mov inc in lea mov cmp adc mov pusha xor inc cwtl add or cmpsb push push test sbb (bad) data16 test sarb loope icebp inc jecxz ds pop inc mov leave add nop cmp loop inc lcall push sub mov or xchg cmc and int stos cmp mulb es or jmp mov incl mov fidivl sbb nop inc sahf out or ja orl (bad) mov fldlg2 loop loop imul ss or fstenv and lret mov inc sub sub ds cs incl fdivrl sbb dec lods cmp mov adc mov push and pop xchg inc subb or inc sbb pop xor add out mov fnstenv out mov and lds push mov addr16 add mov mov xchg xchg pop push mov inc lods shlb or je lds inc mov or or mov push xchg jae jae scas test lret insl cltd test shr les cli mov and add addr16 push test aam test fcompl mov or inc xchg std push dec movsl adc or push leave push push movl jl je mov xchg iret jl inc imul add add mov les cmc or iret and (bad) push mov adc cmc or sbb pop inc int3 sbb mov or stc movsl push (bad) jo mov jle daa cmpsl movsb daa cmp inc in shrl (bad) ss enter (bad) lea (bad) lods adc jmp mov adc mov mov sbb pop dec mov push lcall in popf mov pop dec cmpsb pop push sbb test lea inc scas insl test xor arpl incl ret insl inc cld insl cmp mov mov lret bound arpl and sahf inc add add xor nop push sub in shr dec push add or ss flds mov adc loopne outsl mov xchg in incl mov pusha outsb std shl add mov and out scas out and push pop pop pop jne and xlat cmp pop cmp push mov out pop (bad) and and add fstpl fwait in inc orl dec xchg mov (bad) xor paddusw outsb dec sbb sbb fiaddl mov hlt (bad) outsb cs repnz pop insl (bad) fldcw aad roll in or xchg xchg inc push xchg cmpsb sbb push mov push jl jns mov and sahf xor inc jne adc lea xchg sti fsubs (bad) push mov fimull loopne add push dec fidivl jecxz mov nop jns sarb lret xchg inc daa mov (bad) mov mov or cmp nop leave sub push iret add push js or ret std out cwtl out inc xor sti mov stos push and cmp int test mov lcall fbstp mov daa dec mov push mov (bad) repnz nop and aad pushf outsl ret cmc sub jbe inc xchg push (bad) in and outsl add cmpsl (bad) jnp push ret inc mov dec inc sahf std mov les xchg dec push xchg pop (bad) mov enter stc mov dec lock shl repnz sub fldt and mov xchg lret sub or pop push xor xor push in sub cmp add ficomp and adc lock addb and sbb lock icebp mov xchg or push push mov xchg sbb loope jg push test ss add lods push popf push xchg adc repz int cwtl lods pop int3 push mov cs xchg xorps rcrb ja jnp jnp jb hlt ss scas sbb mov outsb inc or inc inc mov arpl out or shrb jg inc stos or leavew add xor fwait add incl xchg (bad) mov dec stc mov pop stc cmp in push sub fsubrs (bad) mov incl rol mov or jb stos test incl cmp lds iret ds repnz sub in cltd or sarb ds fadds cmp mov xor add push sub jae or les inc daa sub or xchg ret ja inc call add pop dec imul and push (bad) add inc jnp leave xchg push mov testl mov jg add and mov inc clc cmp jmp rcrl sub push ljmp (bad) data16 mov mov lods cld dec vmovups pop adcl lahf mov imul inc adc lret repnz ljmp mov lods mov sbb sbb jge adc inc mov (bad) pop xor fidiv int (bad) pusha sbb inc inc xchg rcrl sbb sbb jnp (bad) cli inc xchg cmp push mov adc mov pop testl test in int push and push scas jp imul (bad) (bad) pop or fimul sub je xchg sub adc jl push inc mov sbbb or adc fidivr es in jl mov ret insl test jno xor xchg in push mov xchg rorb xchg rorl cwtl test mov cmpsb daa fildll mov or or hlt or pop int3 (bad) and (bad) mov and andl sbb mov or lret sbb mov mov xor pushf in and push aaa dec push int cvtps2pi imull es or mov arpl fadds mov cli fs and ret (bad) aas and incl out pop xchg add add pop sub (bad) mov leave mov push fisub insb sub fidivrl test adcl mov gs mov mov sub pop out push cmc insl aad add insl add or scas sub (bad) adc out popf xchg adc or and ror cmp push fidiv push aaa and movsl mov cmp push mov adc mov jl dec cld dec jbe mov or push dec fwait mov inc xchg inc loop and push xchg out mov sub cmp push sahf (bad) sbb or sub cmp mov test or cmp nop sbb mov cmp or dec push loope xorb (bad) popf lea adc add out adc ret jle rcll mov jp movb ss fdivrs cmp pusha xchg push lds aaa ret xor in mov or sbbl iret (bad) pop mov sub cmp adc or adc aaa out inc inc add mov ljmp jnp or or jle xor inc out data16 or sbb fldenv int push sub adcl in std dec xor or mov cmp icebp mov out rolb xorl and xchg mov loop jbe jge cmp dec cmp sti std push adc jg cmp adc jge dec adc test mov xorb xchg adc mov sbb test es inc insl cmc inc inc incl mov fisubrl push inc mov cmp inc inc sub fwait mov adc (bad) pop in xchg leave add (bad) aaa sysenter sbb mov add ja repnz jecxz or testb add jb or movsb mov arpl shrb push les inc andl push (bad) sti rcrl push jmp mov sbb push mov lea mov pop push mov cld shlb jae loope cmp das lahf in or fwait dec adcl mov add loop bound sti cmp adc loop xchg ja xchg or inc in sbb cltd cmp sub fild in inc sub rolb jnp push shrl scas arpl inc and lret hlt leave out or fwait jo add insl lock push popa jbe fldt jns or xchg jo inc fadds (bad) mov test lds call sbb or and sbb mov jge add lret sti lret into fldln2 pop and shrl ja or dec mov test call aad inc dec or outsl add les out (bad) loopne push adc xor sbb add push mov add roll mov popa sbb mov cltd xchg add xchg adc inc arpl mov mov mov mov test dec gs jecxz gs pop out pop fcomp or push test scas mov movl cltd fbld adc scas pusha loop andl hlt inc cmp or cmp ss test adc pmaxsw sbb mov adc jg leave add dec notb sbb add popf mov loopne cmp add rcrl je cmp adc inc add mov sbb in movsl xor sbb cmp fcomps fsubrp movsb negb push ds shr sub frstor and (bad) add call daa rolb sub adc add jno lret dec mov jae or imul or xchg orl pop mov or add das xorl mov or dec (bad) add imul adc std push inc pop mov loopne jecxz (bad) add movsb jbe aaa roll mov imul sbb inc in imul and popw adc push xchg out pop sub add or xor jbe clc mov jae add jg insb in pusha mov push cmp sbb (bad) xor into jmp rorb sahf sbb ret sti inc push xor insl insb pop mov push in mov mov sub jo mov sub ret adc sub fiadd andl push addr16 adc mov movsb push lods dec cmp xchg mov or xor mov movsb (bad) jbe addr16 mov xor adc hlt push outsl leave add push lds pop dec and push sbb in push pop mov pop cwtl mov add xchg fwait aad (bad) or jo xchg mov cmp or dec insb ljmp push fdivl dec sub mov and ljmp daa jno push dec in out in out (bad) inc out push jp push incl lock jge push out incl push jne cmpsb sbb jmp inc jg cli cmp cmpsl mov pop (bad) mov xchg cmp imul dec outsb cmpsl gs cmc pop push in push xchg sub (bad) pop mov popf cmpsb mov in (bad) scas sub (bad) into push xchg mov jo jno jnp or lods outsb mov js xchg mov sarb mov rcr and xor adc fwait mov in push add sbb mov sbb sbb mov xchg loope fistl or mov jbe (bad) or das fsub mov or and jnp insl xor scas fwait dec cmp xlat (bad) sbb add xchg jo (bad) push and sbb push pop xchg fs push adc jae mov scas rsm add cmp iret sub in fadds xchg idivl test cmp nop adc (bad) push cmp or outsb mov fldenv pop dec (bad) testb xorb xor cmp adc inc xchg or mulb lock lcall inc jmp or mov rolb sarb fldt cmp add jle adc jg jecxz xchg dec lods mov popl sbb or shrl add sbb fstps sbb xor xor sub icebp (bad) call shrb in cmp and add addb cltd loop int shll adc or pop mov (bad) stos (bad) mov add sbb xchg (bad) adc mov pop and mov cwtl jo aas mov pop xor add xlat repz fnop mov adc jp push loopne jecxz out mov xchg dec out clc mov fdivl (bad) pop hlt inc adc mov addr16 or pop insl mov scas inc aad xor ret push jno roll inc stos aas or dec mov lret pop jns jno and cmpl mov or adc enter lods lcallw fsts fldt lahf xor jg,pt testb xchg add jns mov ja rorb jno push sbb xorb stos cltd ret add lret aam lods insb inc (bad) repnz jecxz outsb sbb shr dec mov mul sub insl add mov cs pusha loop lea mov push xchg pop mov shll clc jno push push push mov cmp std rolb mov pop push pop lret xchg jb mov (bad) lahf xchg or dec notb push pop fiaddl jo and ss daa sub sub xchg mov xorl aam inc test sub ljmp jmp daa mov les dec adc les fwait test (bad) (bad) push or mov fsts inc mov cs pop add jnp cltd mov jmp adc push push and xor pop arpl cli mov out (bad) mov or cmpsb shlb or sub cmpsb dec in mov add fs adc (bad) push ret mov shrb mov add cmc ret mov icebp sub cmpl lret add cltd mov mov sbb je and ja lret xchg loope sbb push jmp gs enter cmpl jg popa add mov cltd pop add adc sbb lods xchg sbb (bad) int (bad) leave fdivrl pop fadds outsl ljmp jle adc loope sbb fsubr std rorb jg mov rcrb mov test pop loop sbb je push cwtl aaa (bad) insb mov movsb in inc mov or adc inc adc add add pop or mov insb subl loop into call stc xchg adc jne insl clc push stc xchg lret arpl or inc shll (bad) ss jbe sub sub fisttpll leave ficompl in dec and fwait sbb push loope subl add add sub dec mov mov mov testb add jb or movsb mov cmpsb aaa and add xor push mov pop mov fdivrl repz mov loop inc or push and es pop pop push push sahf nop repz xchg shl xor adc movsl add dec sti shlb dec pop or and dec (bad) bound incl pop popf enter inc fidivl test lret xchg mov mov or inc je cmpsl pushf ja pop arpl dec or mov fstpt or jns xchg ret sbb mov and mov repz lods sub (bad) jp add ljmp ds jp jge xchg add dec lahf cli push sbb out aaa out fadds out and or je rcrb sbb lea push dec mov sbb or (bad) jbe in push movsl add rcrb push ja aad mov cmp sub xchg mov xor xchg adc stos repz adc iret mov xchg sarl and push jo ret lcall jl inc sbb push out fiadd mov stos push dec pop in jb mov shr iret push mov roll push in stos dec ror mov outsb andl cmp cmp movsb inc mov mov or sbb or shlb lcall add je loop cmc cli mov mov cmpl out push in mov add mov rcrb xchg or mov (bad) jp add scas xorl dec aad addr16 in inc mov ss lcall xorl push inc push rcr fbld jmp inc pop loopne into js js mov adc sbb daa testb fsubs fistl push sub xor xor inc call out lret gs inc enter sub jo ja xor mov and sahf mov mov icebp into lock pop inc mov ja mov xorb add fildll pop leave add fistpll adc movsb push std andb shlb mov fadd in test pusha clc and and mov das fadds sbb push xchg adc hlt outsb aad mov (bad) push adc inc jbe pop out stc xor out sub incl (bad) cmpsl mov sahf xchg imul and pop xor aad in ret or lods or mov add mov stos or fcoms fs std pop add (bad) imul (bad) (bad) cmp or push pushf nop jp dec lock push cwtl mov push push movsl mov pop push mov cmp add jg imul adcl jbe call add ss nop cmp rolb incl or (bad) jecxz inc adc sti cmp or stc (bad) or jmp sbb inc dec push cmp scas lea pop in sub test sahf aam aam pop push into or inc xor mov nop push movsb aas clc sbb cmp insb pop mov mov data16 inc or mov or jp dec incl push or mov adc pushf out nop dec fwait lahf cmp aam add inc jnp aas sbb mov pop push or testb lea sbb jmp mov add pop arpl or lea cltd and dec loop xchg test dec dec cltd jl aas mov push adc mov cli insl xor popf repnz movzwl xchg mov inc add cmpsl test int3 popa jae jns or daa addr16 clc fwait and xor push cmpl and or inc adc sbb xchg popf mov mov fnsave pop aam mov aaa jge add mov out jns cmp or fidivrl shlb add int fs (bad) sbb js dec jae push cwtl lcall push or sbb dec mov adc cmc inc arpl pushf sbb jns shrb push cmp bound push push and mov add ret clc sub inc out push pop mov add lcall or or mov add xchg jne xor or das imul mov add push mov xchg daa cwtl sub (bad) push add push and adc and loopne (bad) mov and jb jae cmpsb mov (bad) and mov mov mov sbb stos cmp push xchg mov insb xor pushf mov rorl sub mov jp lahf (bad) xor pop push xchg push mov test mov imul negb push jnp sbb incl loope or popa mov mov imul lods jnp imul fdivrp dec push push pop les push fwait pop add faddl jl mov clc or dec push fbld inc hlt fstpl add sbb mov pushf data16 movsb out push dec and insb adc jnp mov mov sarl insl jp sti dec je out jnp jbe inc push mov sbb mov loopne fstl inc pop into and negl cmp movsb pop cmp (bad) movsl add fnstsw sarl fcmovnu (bad) aas cld cmp mov cmp faddl and and sbb and cmp (bad) aaa std nop push mov cltd mov push fwait loope cs or call sbb clc nop pop inc nop rcrl iret sub test xlat push adc push adc jl faddl fstps icebp jmp add dec inc jl xor (bad) sbb das and mov push int3 sub add lcall jb push pop xor jp push adc or mov add cmp je outsb or inc pop add (bad) pop add inc sbb push xchg sub mov in cmpl (bad) call push mov mov out insb inc or repz jne sub pcmpgtb mov rol xor mov loopne mov inc push dec popf movsb sbb xor xor dec mov jmp notb faddp test rol (bad) jno mov xchg xor mov mov cmp add mov stos (bad) mov incl sbb (bad) pop mov adc xor or cmp push adc add adc mov lahf add jmp ret pop ljmp test addl inc sub loopne mov add out repnz jg xchg add stos loope mov add jae push and aad and xchg and cmp pop stos push push mov incl jle add adc pop mov jbe int roll les daa mov inc jne ficompl jae xchg ret add mov xor cmp fcoms loopne add scas (bad) rol insl inc cmpsb xor fstpl das xchg mov aam imul inc fcmove decb jo iret jb jnp loope xor push jp fadds push push push mov adc dec mov jns fstpl test sub jle sub and int jmp jo subl xchg cmpb dec into cltd cmp in adc pop bound into and pusha inc lods es lahf (bad) lock (bad) stc adc insl ljmp xor push dec in sbb cmp push mov ret incl lret int xor out pop int sbb fsubl in les cmp addr16 add jmp repz xchg sub mov fwait addr16 imul lock movsb adc bsr (bad) in fadds adc sub and test ljmp rorb cmc inc mov call incl dec or jnp lea xor addr16 jecxz dec frstor scas xchg add or shlb lock out xor (bad) mull mov inc xchg cmp lods subl push mov push mov sbb push xor and mov and adc out pop icebp and dec lods mov flds cmp cmp xchg ret sbb and lea add mov dec fildl cmc mov fdivrl loop jp ret inc mov pop push add or push xor sub mov (bad) lcall add popf pop outsl stc and cmp and ljmp ret mov push push dec mov dec mov sub fwait ss sti jge ss push pushf or out xchg sbb in ret cmp or rorb loop or and jl out cli sub cwtl xor or enter dec icebp sahf sbb inc xor popa push push iret inc incb sub jne jg xorb push jae jp (bad) cmp or fs add jo pusha sbb push push dec frstor (bad) repz int3 (bad) xor flds sub xor add jbe in mov add add add in mov inc mov mov xorb push push sbbb arpl and xor sbb int3 mov add ja loope inc bound cs mov testb pop pop jae add outsl fiaddl xchg push xor lcall adc loope fbstp jp ret mov mov mov or imul leave pop popf push scas in rolb in or sub jb sbb pop inc mov cli and add add xor jns icebp repnz in sub int and jns loop cmp nop cmp mov mov and and pop push arpl jo lret or scas inc jecxz incl push (bad) push adc pop fistpl roll cmp pop pop lock pop lods cmp xorb add sub mov mov repnz imul dec jo flds sub cmp cltd js sbbb push or push aas push mov adc mov cmp and and jne sbb mov inc push lcall push clc stc mov jle (bad) int fwait lock mov jge rorb jmp pop mov fdivr add (bad) repz inc xor addl sbb pop and pop adcl adc pusha cld ss add inc pusha (bad) inc iret mov cmp leave add mov sub and (bad) sbb add jne xchg loope cwtl sbb adc jne dec mov pusha jo (bad) or add and push pop fstpl mov sbb imul lret mov dec out mov addr16 mov and sub rcrl or jo js push push xlat sahf mov push xchg clc jno cmp out mov not ja jmp push jo sbb (bad) ja add fcmovb jle (bad) int mov mov xchg or inc jnp and cmp add or adc sbb push std sub data16 cmp mov pop lea adc rcrl pop push rcl sbb jnp aaa mull sub femms mov push mov inc mov (bad) shrb pop add or add fild nop fisubl mov cmp jmp xor cmp loop mov jno outsb std rclb dec push cltd sti vpaddd insl aaa bound mov mov sub jg icebp inc out pop push cltd in fisttpll mov mov pop mov fstpt add mov leave adc xlat mov sbb fistpll mov jno mov mov nop inc test xchg sbb cmp nop fist push xchg inc ret push cltd mov hlt std addr16 aaa mov hlt xchg jmp mov xor mov iret insl nop es (bad) mov (bad) lea adc lea pop mov pop mov je lret or aas repnz lods fcoms hlt out mov xchg mov repz fbld dec xor jmp rol cltd jl xchg (bad) roll push and faddl and ljmp sbb or call pop pop nop jns push in cmp loopne es pusha loop or sub divb push in cmp xchg push int3 clc and fwait dec inc (bad) fstpt repz dec test es pushf add pop incl pop push and insl inc clc pop jnp and cmpsb loopne jno loope and cmp scas dec fstpl xchg jge sbb adc jecxz les cs cmp sub insl pusha cmp inc divb add test cmp fwait push clc and xchg in loopne addr16 hlt pusha sarl mov loope stos nop or jb push xor mov adc out pop push inc (bad) aaa mov mov stos test mov mov fnsave rcrb and add mov fisub loope cmp xchg jne ljmp cld adc loop or xchg je cs and mov mov incl lock es jne test lods sbb cmp js cltd fadds mov loop pop movsl jle push lahf and rcrl mov mov data16 xor sbb inc sbb sbb out (bad) popf sbb pop add into (bad) jns push push imul mov push xor rorb ss out inc loopne fsubrs xchg insb jae call pop or int3 jl xor adcl dec and ss nop jl inc incl shrl mov loope cmp pop mov sbb fistl mov pop push pop sbb aam mov lahf pop dec mov or mov mov jle,pn (bad) outsl xor mov fadds in mov (bad) notl popf (bad) lods fs push cmpl daa lods loop sub or rorl (bad) aaa mov sbb out imul (bad) jbe xchg sbb cmp nop pop arpl dec popa jge xchg push ja push jp sbb pusha pop mov jecxz cmp cmpsb fcoml or adc sbb aaa jbe mov push xchg imul cmp sub inc xor addl sbb subl mov das xchg or inc sub mov xor push faddl enter push mov xor lahf xchg add pushf pop mov add adc cmpl ret int pushf int3 add cmpl add xchg loopew hlt call addr16 loopne sbb dec cmpl xorb cmp in inc popf xchg test dec push in xor sbbb mov inc xchg xor andl push pop lock lcall arpl or jge sub in push out add outsl je xor or addr16 push add notb mov mov xchg cvtps2pd in mov jo call inc in sahf nop (bad) mov lock incl inc adc sbb jnp inc lods jnp (bad) mov call inc int stc mov adc insb push sti into cli lock scas imul nop addr16 lret xchg inc es inc out js mov mov dec outsl stc sub shrl (bad) push test mov insb lret pop or inc loope mov call mov pop loop daa imul int3 fmulp loop or cmp xor mov and ja or push xor mov add pop fistpl cld adc add mov ds pop out inc cs in cmp outsb fcomps outsl popa inc jnp or xor mulb mov loope pushf sbb sbb mov js cmpsl leave add push in enter mov rol dec loop xor jmp mov or or xor testb cmp jne cwtl in inc adc lcall xchg push insb push jbe or push dec scas sub (bad) ss jnp xor int3 test stos jge in lret sub cwtl or fbstp inc mov in cmp lcall xor popf push int3 and inc hlt adc in sub cmpl xchg push (bad) cmpsb mov pushf lds rorb cli (bad) lcall rol iret testb je adc sub out icebp or cltd (bad) sbb int aaa jp xchg pop push pop or (bad) and fwait mov fnstsw and cwtl out or mov sub xchg xlat insb in fadds dec xor sub or aam adc xchg mov lds jmp ds mov push jno lods cli faddl into rclb sub sbb mov push sar popa add add adc outsb hlt adc xchg adc xchg add std test inc (bad) and pop xchg or inc sti mov cld lret (bad) loopne mov (bad) lcall mov xchg mov or cmp pop mov out adc inc pop push push add cmp push cltd and ret xchg adc add fadds mov add dec cmp cs fsubs sbbb mov nop add cmp cmp add mov test rclb sarb insb addl jg sbb mov (bad) mov or adc jle mov pop add outsl or fadds jns clc inc cs rcl into hlt pop mov sub xor les push cmp xor mov mov imul push stos pop subb cmp cmp or cmp sbb adc adc fadds mov std cmp out adc (bad) push cmpsl add inc xor fadds dec jo inc add and inc ljmp lcall jecxz add lods (bad) xor outsb pop jg sbb mov xor xor cmpsb mov stos lret int3 mov push cs mov mov add lods inc lea or pushf iret mov mov cwtl mov mov sbb pop lods ret movsb hlt inc js cld mov add push jnp call negb insb rclb pop and add or sbb cmp push loopne cmp jp sbb stos push push insl xor aaa jbe les push inc movsb or push fdivr xor xorl cmp mov out faddl cmp je roll adc xchg sub and or aam push out repnz adc sbb xor test popf sbb daa and jbe push add call mov inc ds jo outsb pop add into and or sbb out xchg sbb mov jns adc mov add test les dec xor fs inc push xchg repnz idivl data16 mov mov cmp add addr16 jns out imul sbb sub push mov sbb push and sbb cld and cmp jp adc push in and std pop mov mov jmp ficoml sar ss inc mov inc pop mov mov mov jns lcall and xor and jo push pushf in outsb imul pushf das cmp cmp repnz push xchg pop or mov roll popf push push aad icebp cmp mov das addr16 movsl pop push les sti push jnp mov mov cmpsb ja emms inc test (bad) aaa popa jecxz push sub jne adc inc int test inc fdivs sub call enter std (bad) xchg or pop (bad) aas dec mov xor and push arpl inc sub lds xor mov add int3 inc xorl push push lds or sbb repnz mov jecxz sbb (bad) and mov jo in or pop mov xorl lods int aad fs push sub cmp mov mov jno sbb fcmovu push jo fstpl add pop mov mov in test inc cmpsb adc xchg mov mov ffreep fisttpl les mov mov cli cmp sub xor test iret push adc addr16 xor aad xor mov mov and ret cli adc in ja sahf pop rclb push and imul lods or xchg testb or leave add dec add add sbb xor adc ljmp incl nop lods icebp clc jle adc mov mov aam add jecxz inc lock pop push mov xor add sbb addr16 ss std pop jb out inc mov mov sub loop insl faddl mov frstor mov xor cmpl mov int je scas cmpsl pop mov cmp rcrb aad lcall in sahf pop jns packssdw mov mov arpl xchg adc jle push xchg add add test and (bad) loop flds xor mov imul dec fisubr int test mov sub repz fldl popa cwtl jmp std sarb inc mov jb pop gs gs cmp mov (bad) (bad) aas aaa les jne and inc mov fwait aaa add lods xlat je sti into xchg jg add add jo out ret mov push cmp (bad) imul nop (bad) int3 inc mov jo inc adc data16 incl rorb xor setle jo leave add iret xor je xchg push (bad) mov mov aam stos dec dec fisub lea lock inc jecxz and ja add (bad) jge in outsl dec or data16 sbb test jbe (bad) repz pop nop pop imul insl mov sbb divb mov adc xor (bad) cmpsb incl mov push pop incl mov sarl lahf dec mov rcl in rcl incl lret pop aaa lret mov mov (bad) stos cvtpi2ps (bad) adc in bound cmp push imul sbb leave add add sub shrb out jo loope inc cmp in inc push in push inc cmp dec imul pop (bad) out mov dec sbb imul add insb jae sub fdivs jge cmp push fdivl imul loope add test mov imul add out xor add fcoml dec mov pop scas mov push add aaa sbb nop push movsl imul insl iret xor dec fisubl sbb add outsb pop add and ljmp mov sbb aaa push cmp xchg cmp adc pushf and rorl jno lds pushf popf fwait or fs loop sbb xchg mov cmpl loopne es out les sbb inc popf cmp cmp rolb andb rorl fidivl xchg and imul xchg or cwtl ftst (bad) xchg cmp add and addr16 ljmp cmp clc add pop sbb fs fdivs inc incl in push inc daa xor loope push cmp ret fwait scas fiadd jae bound mov popa (bad) loopne shlb add test imul incl xchg fiaddl lea fbstp test pop jle inc aad sub mov dec mov or and lret mov ss xor pop out xchg fldl push clc dec in xor xchg ljmp (bad) ja push (bad) repnz and sbbl loope nop dec loopne inc sbb xchg pop cltd add mov ds js mov lret outsl popa inc es xor and or xchg int incl xor and cmp push in rcr outsb jo pop aas pop jns and (bad) jp xor (bad) (bad) xorl loop adc push jmp rclb mov inc add or push pop test scas and sbb sbb and xchg test mov push (bad) sub xchg mov je mov push enter sub dec cltd sahf in jle adc in out das dec ljmp bound inc mov js inc lcall cmc lcall mov push shrl nop cmp jae inc ljmp jg add cmp sbb fimull inc scas mov test xchg ja subb inc or (bad) call jnp sbb adc xor call js flds inc add loop and cs mov inc xchg push repz roll mov cmpsl lock cmc mov ss cld enter repz pop lds rolb lret mov fmuls or std push sbb in push add jle and addr16 inc inc sbb sbb pop xchg xchg dec fldenv xor mov out lea jo mov xchg jae leave add inc jge or enter cli and xor leave add into add add sarl fdivs mov shr cmp xor test repz daa sub roll pop or mov lds xchg dec jno aaa out into sti test dec lret fs incl mov jmp lods je or add inc add mov jp sarl inc mov xchg push inc (bad) outsb xor jb bound sbb dec lds jl pop inc sub insl mov xchg outsl sub (bad) pushf das jno mov push and cmp jle and cmp mov incl sub lods popf xor or mov push sub jg setl and cmp and idivl and fwait iret cs or sbb (bad) sbb test pushf sbb aam or push xchg or adc (bad) mov xchg jb incl mov or rcl pop xor cld popf cltd lret sbb imul cmp xchg int push sti sub add out sbb jb pop pop popa jo es insb ret insl sub scas fcoml push cmp in adc dec daa dec imul sbb add add push inc or repnz mov dec js addl loop punpckldq daa or xorl sbbl pop jae fidivrl pushf loop sbb mov mov xor je mov inc out jge fsts fdivrl push insb test mov push andl and sbb nop cmpl in aad scas (bad) xor in sahf nop sarl insb out mov add into stos pop shl cmp scas sbb imul sbb mov jns (bad) insl and dec sahf sarl mov pop mov mov enter outsb stc pop mov or push cwtl in ds das rorl jg or or shrb fiaddl std (bad) or enter outsl xor imul add outsl nop mov xor ss push xor popf mov and pop in lods jbe ret mov dec or mov loop pop adc lea pop sub rcrb pop imul retw mov movsb out xorb and fs fcoml fidivl out arpl pop mov mov test adc (bad) sbb inc jnp pop pop std inc (bad) leave inc lcall nop and lods (bad) sbb js or addr16 mov out pop test in pop fldl fldt pop pop fwait bound cmp addr16 adc outsl xchg lahf lret push inc jle pop inc fs out inc cmp rolb std call sbb sbb jno sub imul cmp adc inc popf xor out (bad) inc pop je insl cmp pop les lock out mov mov lcall mull mov inc mov or xor jnp js dec or (bad) fs out fs sbb push clc addl cs and and fiaddl (bad) int3 mov mov cmp ja add lahf cld (bad) mov sbb rolb hlt icebp jle push lret add push dec cwtl in xchg adc push (bad) dec out mov testb pop incl lcall repnz adc scas jnp iret dec fstpl out lahf lcall jo inc sbb iret mov xchg pushf xchg out or fnstcw push add data16 cmp ss das push cmpl push push (bad) int3 or xchg sbb roll cli dec addr16 adc mov sbb ja add pop xchg fisubrl in int sahf into jne mov cs mov ja push in jbe call iret test fwait sub and mov pushf cmp sbb xchg adc int3 stos into (bad) jp and and pop pusha and cltd in sbb (bad) or push outsl fbld insl cmp sahf in ds sbb add inc dec popa sbb push les push push (bad) inc in scas or std cmp or lds inc dec sub test jne dec mov call punpckldq jp inc je les rolb aaa testl fistl jbe hlt inc mov push sbb mov movb mov popa mov add push mov dec test sbb outsl pop mov xor dec jo loop sbb mov jge push xchg lcall mov loop jge out pushf nop fcoms inc in pop jp daa pop adc lret bound mov ljmp out jno mov pop xor sarb jg insl outsb addr16 add lret loop jle push mov popa loop push adc arpl mov mov jne add sbb (bad) mov pusha mov xor jns sbbl add fiadd add mov incl rorl (bad) xchg movsl sbb mov addr16 pop lret inc mov xorl mov pop xor mov sub lret add arpl and xor mov sbb fimull xor inc inc dec movsb jp cmp jb scas bound lods xor cmp add mov jecxz mov cld sbb sub xchg fst int3 testl outsl sbb dec pop fadd mov hlt sbb pushf in add stc and dec ficompl aad xor mov jno in cld mov mov xor or imul and jnp in nop fwait and push lcall mov mov fadds (bad) adc xchg xchg mov sub jbe out outsl adc or fidivl nop/reserved rcl imul icebp inc fiaddl and xchg xlat dec inc cmp sti xchg jl in subb add push xlat into pop (bad) sub mov xchg cs in in mov inc pop or add and inc push sbb test out adc mov out xchg mov fiadd or scas mov cmp mov add inc cmp mov out mov mov in inc pop inc xor fisubr mov (bad) add adc jbe or and mov and fs and int3 add inc mov sub lahf lcall mov clc popf mov push int xor xor sub in xchg adc loopne or movsl push jb mov and add out in outsl adc push inc or enter testb sbb or xchg or or add add cs test mov mov lcall sbbb xor adc xrelease jo inc enter sub push test or nop jl cmpl or lret or add dec pop mov ss icebp faddl (bad) dec daa gs bound aas lds movsb out mov add push adc jmp test xchg repz cmpsl aad ficompl ljmp jl sbb inc mov add int3 pusha cmp add sbb insb xorl and hlt mov push sub adc test or mov out into sti test inc xlat pop sbb lds imul sbb aaa (bad) xchg add pop (bad) aam sub xor push inc sbb cld shrb xchg fcoms dec sbb jae adc rolb xchg mov nop adc aad inc dec ljmp mov push dec push adc out xchg sbb pop xor xor xor sahf hlt add arpl mov into cmc inc aam cmp xchg out lret jp cmp pushf and cmpsl (bad) (bad) icebp inc je scas pop ret cld rclb jl icebp inc aam mov jmp push dec adc xor aas loop insl test push stc adc inc xlat xor add jmp (bad) and or nop sbb lret push int imul dec xchg add sbb push dec add and mov and out push push rolb jle ds xor insb cld shrb dec adc aaa data16 adc mov sbb add sbb inc pop inc push pushf repnz cmp (bad) add ss mov test mov inc mov mov and mov enter or test lds insb in sub mov xchg mov jp (bad) push inc outsl loope cwtl sub hlt out add xchg add ss inc mov fbstp pop imul jl jne ljmp or ret push pop mov mov mov fwait cmp sub or or enter out xchg jo mov mov adc mov pop cmpsl (bad) les rorl ja hlt inc jmp fisttp or imul sbb fwait mull (bad) stc incl xchg sbb rcrb push or iret and clc ret jle mov sbb inc subl inc xor dec mov nop or call pop in inc (bad) pop jo lahf hlt ret out into jge add outsb les sub and pop cmp xchg or inc mov mov dec fxch add fstps mov dec push mov (bad) add sbb les or or mov or es repnz ss (bad) mov push and adc jl inc movsl jl jnp stos add mov (bad) pop stos fadd xor cmp sahf ja les jl sbb fyl2x fistpll inc es shl jl sbb and cmp (bad) out les ret lock sub sub enter nop xor mov xchg jne cmp push inc xchg add inc leave cld test jmp fwait dec enter subl xor inc mov in and push mov (bad) pusha jge mov imul movsb dec mov in or add call jp or shr into pop scas inc sbb jp sti xor adc test pop sahf cmpsl stos inc sbb aaa inc inc int3 lret fwait adc ret mov push add popf mov repnz pop pusha sbb add dec fnsave aas rolb daa cmp dec adc xchg sub pusha xor mov clc and cmp mov inc out in sub and xchg ljmp lods outsb and out inc idivl sub dec dec sti cld adc mov inc xchg popf mov out jbe ss imul or jae (bad) jp dec mov in outsl std sub mov jo nop jp ljmp sarb test xor int js shr jns and push pop incl arpl inc cmp mov (bad) jo roll mov leave lds add jne xchg jg adc sbb sbbl aas repz stos and (bad) sub adc mov (bad) sahf ror mov add pop xor xlat into xor add sbb (bad) push ret fsub clts xchg adc adc push jbe mov test add out adc dec jge and jo jbe (bad) adc cwtl adc icebp aas lret sahf js jle and (bad) loopne push fistpl inc push mov in cld les movsb ret dec in int imul nop jnp jns inc add dec je sub rolb pushf pop fisubrl adc ljmp add hlt adc or add mov jae push fisttpl lahf in inc push xchg (bad) xchg dec jle loopne sti rolb jp les mov dec and test mov fnop and inc mov iret outsb hlt push (bad) mov push sbb aad (bad) decb adc bound or stos (bad) mov pushf out mov xchg stc ret fidivl dec mov call jo jae cmp nop outsb lcall cmp dec (bad) push mov dec or add stos fld xor outsb ds jp pop dec out jbe cmc cmp sbb sub dec mov xchg in inc out cwtl imul loope add or lds imul test aam dec cmpsl jmp xor pusha ja iret fldl mov imul je,pn inc lods xor jno mov rcrl cwtl iret xchg repnz xor fistpl xor lret cwtl cmp push in cmp sub in int xor rorb cmpl and pop xchg or xorb out inc mov mov and popf push pop inc sbb mov push loope enter fldt sti mov sarb out loopne stos bound or sahf iret flds iret aam inc mov cmp in or or (bad) sub lcall xchg sbb mov (bad) and xchg push icebp mov (bad) jle cmp cmp xchg flds jmp mov pop jg jae add fidivr rorb nop stc insl xor mov add cmp dec pushf pop test loopne,pt aas jmp test rolb out aam pop rolb pop lods push outsb in mov mov mov in push fsub cmp dec in jg mov cmp insl adc xor call and loope loope jno movsb fcoml clc enter insl inc roll jg call ss aaa es add loope cmp jl jnp stos or xor pop push pop lods fsubr rcr out or and sbbl rcrb ss (bad) (bad) sub stc add adc sahf push mov sarb pop lcall fcoml push jp gs arpl cmpsb lret add int3 sysenter or sbb leave cld test stos sbb sarl add push sub lcall mov xlat add out jmp cwtl adc xorb (bad) flds stos xor fadds (bad) sbb inc push or xchg add (bad) mov movsbl sbb ss pop adc sarl cltd mov inc les mov (bad) pop fsubl rolb dec pusha unpcklps lods inc push cmpsl out pushf inc jg add push ret movsl enter mov out push rcrb mov (bad) iret int push test xchg add out lret lcall andl push in popa cmp int pop icebp popa (bad) mov dec mov pushf shrb push dec pop lods invd sub pushf hlt (bad) cmp push das dec clc daa xchg or cmc add pop fldcw or mov cwtl mov cmp out inc in sbb cmpl jmp add mov jns lock shrl out int3 xchg and mov ret test mov sar mov inc push pop inc nop push push and mov xor leave add ret inc sub cmpb inc cmpsb aam stos jo jl mov xchg mov dec icebp inc out adc (bad) mov out ss mov push xchg rorb xchg adc andl notl fcoml and out push push rolb (bad) pusha ds aam fadd push rclb dec adc aaa data16 sbb insb inc sub andb sub add dec jns js xchg dec jbe add (bad) push or push int lds in xchg push (bad) mov sahf les inc data16 lea je mov sub inc dec fmull inc add xchg or (bad) adc jae in and add cmp push xor inc pop mov pop xor mov mov jns fdivl mov pop xchg push add cli movsb sbb (bad) bound mov push and xlat sub dec clc jge daa movsl xchg pop mov adc push sbb add xchg mov push jne lds ret ljmp push and scas cmp inc xchg inc stos int or xchg push fiaddl sbb bound or or movsl cmc cmp inc ljmp cmpsb (bad) inc inc leave shr (bad) je fucomip push sbb add lods and push imul lock adc adc mov lds jae lahf mulb lahf xchg pop mov fildll jbe sbb cmp sub inc cmp popf movsl add jne and xor les lahf lock (bad) mov adc lods (bad) add stos sbb and (bad) push xchg insl nop inc scas cmp and loop in mov push mov push jne lret and icebp jns add jp adcl or adc lods pop in mov pop jns inc xchg and push push dec xor mov (bad) lds jg xlat dec jb sarl loopne outsb mov aas jg adc (bad) jl cmp imul rorl into add push pop jp cmp std test push jg incb xchg out in and adc lods mov sbb inc scas adc ljmp cmp xorb mov cmp push stos loopne rcll iret xchg inc adc mov xor push mov test out ss test mov inc sub or (bad) xor cmove movsb xchg out fwait (bad) dec add or sbb cmp sbb or mov insl adc outsb xchg dec dec inc fildl mov mov cmp sub mov and mov jge adc pop insb and lds mov adc aad pop inc dec jg add mov out iret movsb pop fstpl in xchg dec sbb inc scas int3 adc sbb inc jl mov cmc mov arpl push hlt adc cmp inc lea stos pmulhw rcr lods (bad) out adc add add icebp aaa pop mov subb imul add std shrb mov fstpt adc es inc jbe stos inc (bad) hlt inc out bound adc arpl lret add cmp add divl cmp cmp mov mov pusha in repz dec fsqrt xor lahf sbb xchg in and add add das cmp sti dec push adcl aas inc mov cmp cld pushf sbb testl push sub (bad) mov mov and dec shrl popa adc aas push popa add jne jecxz jle cmp or enter aam dec mov pop fwait pop js jae add lods daa and jecxz mov std daa testb jge mov add mov adc ret lds pop inc lret mov mov adc orl push arpl cmp and ror call mov cmovle inc ss fiadd insl mov inc ljmp int3 outsb (bad) or cmp addr16 stos sahf dec sti mov fisttpll sbbl lods rol clc mov mov or leave jne dec or arpl cmp arpl das inc adc ret inc pushf inc ds enter inc mov fs repz std pop test mov or gs cmp push call sti lods mov add not popf sbb inc or inc out adc es cli (bad) (bad) std and mov xor ret pushf insl or mov dec mov scas or push shrb or mov dec lock sub fs fs xorl subl mov xchg cmpsb push (bad) (bad) mov std ret roll call std ljmp sub xor test inc lods push pop mov aaa popa lahf test mov inc sbb hlt fidivr aas jge (bad) jbe sahf sub in imul cld sti outsb jl dec mov xchg sbb mov pop inc test and test and out fcoms pop imul sti mov mov setp in sbb sub notb mov repnz dec sbb imul sub cmp jb mov mov loop or fadds shrl aad add add outsb sbb mov subl jge cmp push pop sub pop xlat mov push fimull push mov repnz jmp int fmull push sbb in and xchg fbld xchg mov adc inc sysexit mov ds cmp aaa dec les push sub xchg mov dec jnp clc inc cli inc push mov inc nop jbe data16 outsb xchg sahf push jge xor jle rcl jg in mov sub xchg push dec lock je test sub xor jns cmp stos dec sahf mov leave rcrl out sub pop jg push aaa sbb push in outsl data16 push dec fld1 adc inc ljmp ss lock cs out xchg enter mov dec or adc xchg xchg xlat jo scas jns mov add xor faddl mov adc inc or pop mov mov inc popf mov testb and fwait lahf jp mov cwtl jbe jg add mov clc mov sub cld (bad) jae lock arpl cmpl leave add mov inc lss inc mov flds ja cmp or mov mov insl mov or rcl call mov imul or and leave pushf push mov inc movsl mov test inc ljmp inc addr16 xor sahf popf fxtract (bad) sti mov add lcall pushf faddl xchg aad inc push in ret ds fimul scas and fisttpl sahf push sti out (bad) jge stos cmp cmp pop out loop and popa jno and dec (bad) jecxz nop add xor aam out in outsl fldl push in inc xchg push xor inc out sub enter imul orb mov bound jge dec cwtl movsb cmc push aaa dec test dec call shlb jns fiadd mov mov mov jmp add in adc stos cmp shlb xchg sahf dec sbb sahf jmp (bad) and dec fldl2t (bad) mov fisub add in loop das flds mov sti (bad) sti fiaddl mov ss (bad) call aam enter mov adc mov jg add insb outsb push push sub jbe jb push aaa loop lcall hlt outsb test mov ret push orl add sbb call cmc inc fidivl sbb into js lds xor dec pop and sub push out lahf inc adc sbb popf test pop popf cmp lahf jno je mov sbbl pop push push daa bnd in or sub inc lods cmp mov jne gs add push mov fadds jne rorb mov or add popa add inc xchg scas lahf or inc sbb aam mov pop push mov cmp inc lock push cmp mov adc sbb sbb xchg aad (bad) std or adc or push iret aas xchg add xor push cmpl mov or fsubl pop add mov and movsb sbb add ljmp pop push adc fadds xor mov and mov jge shlb sbb and rclb adc jge add xor xchg movsl push jo xchg scas add and push lock rolb (bad) push inc daa insb inc nop insb cmp imul xorl or scas add add fiaddl in imul bound subl pop cmc outsb addl enter (bad) leave add mov or flds arpl xchg push dec pop inc popf insl (bad) xchg add daa inc inc inc pop pop call sbbb aas mov std daa int sbb xlat lret xchg or inc (bad) pop and cmp shrb fidiv cs imul roll test add cld add mov cmpsb inc fwait pop and (bad) (bad) outsb test ret nop inc call cmp rclb cs je pop mov pop inc push imul in aaa inc lret leave cld jle fidivl and ss stos and push push test fcomps cmp out xor je test inc mov cli int dec pop flds sbb jb rolb or imul pushf movsl add outsl mov add sbb dec cs ljmp movnti mov loop jae mov aas xor xchg imul gs aam cmpsb ds fwait mov sub add sbb out lcall mov push fild fdivrl in inc jmp push pop push jo cmp sub mov mov push out flds push push pop call loop mov sbb jae xchg mov inc dec orl inc add lods hlt adc out add int3 dec sarl add xor pop fsubrp rcrb mov push sub mov lcall and push xchg inc pop xlat and and sbb push aaa dec push cld (bad) fdivrl mov outsb and js dec (bad) scas push aas cmp cmp cld adc imul push test mov adc sahf jb dec sbb pop add sbb sbb or ljmp xchg cs sbb push arpl mov fwait mov fcmovnbe dec adc negl (bad) aas stc and (bad) mov cmp int sub fiaddl mov rolb lret inc in inc sahf out xchg or adc cld movsb iret and out cmp fild aam rcrb adc sbb add mov sbb jae pop inc jle icebp mulb in sbbl (bad) cmp pusha loop fldt add int3 or add dec mov push in (bad) outsl push (bad) or fsubrl jle push out add hlt dec or xchg xchg mov adc mov outsb (bad) and jb cmp cmc sub ficomp aam push movsb pop notb mov pushf fs or add and push xor pop fldl push jns or fcmovbe sbb insl inc rcl and add incb adc lcall mov arpl outsl cltd inc call cmp xorl add mov and ret insl insb sarb pop sbb ret mulb inc mov inc outsb shrb flds add mov xor loope inc pop mov outsb mov (bad) adc inc jnp cmpsb imul (bad) push mov sbb call enter cld inc and incl dec inc out xchg cmpsl xor lock inc (bad) sti lods jnp aaa xchg mov and out call jl jp shrb adc loope je loop sti fisttpl add mov mov out mov jnp fidivl lods idivl push inc in and jp mov and cs pop arpl and dec fwait inc pop and sti push pop movsb xor inc fisttpl fsubrs cmp and stc stos lods add xchg lds inc (bad) sti lods jo in sub movsb jno insl popf mov fdivl aad mov leave shll lds push add test sahf aam rol sbb outsl dec (bad) ficom add sbb (bad) loopne sbb scas stos aas xchg push pop cmp rorb mov xchg or add add fwait mov test inc (bad) add shl jl ret and dec mov cmp hlt jle jno pop mov in (bad) stc and sar fs in mov (bad) push push mov add call xor mov inc in jne mull mov lods sbb pushf pusha cmp adc test rclb xchg cmp mov pop jae mov lcall out jmp lahf stos or iret gs out mov sbb mov incl or insl inc lea jp outsb popf mov icebp add jo and push daa fcmovu leave push in push ret add sbb xchg sbb mov cmp aad jmp mov (bad) sub jbe mov pusha inc in cmc sub mov pop jp int sbb and pop insl fcmovu nop ja and jmp xchg mov mov subb adc mov jecxz adc adc rolb xchg xor decb pop cmp daa and mov jbe mov pop movsb popf inc pop bound jge cmp mov (bad) mov adc popf sbb ss jnp and aaa out xor fwait into jge adc add xor popa ja out add cmpsl sti dec hlt inc cmp mov and and imul xchg xorl xchg imul mov adcb or fxch ret ss xor jne aas mov xor cmp add sub or xchg pop push outsb sbb xchg insl add rcrb xor or jns add stos pop outsl stos add sub lods or jge cmp pop mov sbb add push mov sbb insl push and aaa dec push cld icebp lret lds add xchg int3 adc inc inc push sbbl jns ds mov (bad) sar (bad) in sub movsl lret stos push jae (bad) push or dec or dec cmp (bad) mov add xchg sbb sbb (bad) adc lods fistpll inc das sbb inc sbb mov and ret sbb and shrl andl xchg push (bad) mov pop mov repz dec jl movsl inc mov ret cmp (bad) sahf xchg je (bad) lock idivb out (bad) add jl or dec xor add aam lcall add mov sbb xchg ror mov xor popa add jbe add or adc je int3 push insl aas in popl cmp roll jg call (bad) jge cli cmp dec mov push pop mov mov hlt lret add (bad) in cwtl std adc dec imul fcom adc xor mov fnsave cmp test mov dec jbe loop out and and gs lock adc arpl add loopne xchg xchg jns sub sbb stos or pop or ficompl or repnz push (bad) aad sub add cmp sbb mov mov add je lods dec sti mov and cs inc stos rcll out aas icebp inc adc (bad) and adc pusha insb add add mov and outsb notl cmp push orl ss das inc adc inc and (bad) mov sub test les jge daa cli dec ja popf xchg mulb push inc mov or mov pop pop inc (bad) out flds jmp shlb adc xor test out insl (bad) stos add dec pop shlb (bad) mov dec mov add inc fiaddl jecxz es add mov insl cli out je leave sbb je roll mov xchg xchg fnstcw mov add xor mov fnstenv dec cmp iret bswap add fdivrl add lods adc cmc mov sbb aaa ret sub (bad) xor add xchg (bad) mov fwait mov stos jo add add mov cmpsl pop cmp fs push test dec jne fist es add subl mov repnz cmpsb jb fs xor insb test add ds mov das mov mov lahf add dec or lock cmpsb into ds adc sbb mov test adc cmpsl xor mov pop cmpsb jne jmp xor cmp jg add outsl ret sbb or xchg mov mov ror inc cli out inc (bad) xchg fiaddl push fiaddl insb mull insl push cmpsb xor fistl sti aaa and pop cmp sbb fcompl icebp cli or and xor nop inc sub sbb (bad) lret sub nop xorb and push cmp aam xchg adc in mov jmp shlb test cmp add rdtsc (bad) in jecxz (bad) daa xchg fimul dec (bad) jne loope stc and pop test in mov pop imul sbb std jb inc in push cmp adc lods in in fiadd mov call sub pop inc ficom faddl xor jge call cmpsb fs test xor mov fwait loop xorl add xorps in push adc jg jg or repnz bound inc push idivl movb arpl jo daa push add mov fdivr lret adc xor push jp add and mov mov xor and dec push or aaa pushf inc cmp rcrb cmp cltd mov sbb stos stos cmp jb popl (bad) sbb in and daa adc cwtl jns punpckhbw pop outsl test sti sub fiadd add mov cmpsl sti nop aaa dec mov cld mov ror xor mov jecxz sub insb std rcrb clc push sahf gs push add sbb fidivr and dec mov add adc mov lock mov stos inc sbb test pop insl push xor sbb cwtl mov mov jae psubusw mov and in add or sbb push outsb mov movsl jae inc jmp ret sar cld nop pop imul cwtl std mov adc jno jns lea data16 cltd fiadd add adc xor sti out (bad) adc out or test sbb ljmp inc (bad) xor inc ss dec (bad) popf xor mov add or icebp repz repz cmpsb mov std outsl sahf hlt pop mov sub mov sub push add jle inc ss and leave add sbb jbe add mov and into out xchg inc jbe push rcrl jnp out push sub dec cmpl les jp jle or ss jae (bad) fistpl idivb daa insl xorl and mov (bad) add std call (bad) in and (bad) jp rcl rcrb dec cmp (bad) and inc sbb adc or sub push mov mov loopne mov dec (bad) cmp jp sub mov aad mov cmp push cmp movsl add inc (bad) (bad) cmc dec jnp push xor xchg fst outsl jns add jecxz cmp roll cmp fwait mov (bad) cld mov idivl gs and out cwtl addb pop pop arpl popa add fwait xchg in pop add sbb or rorb insb in in or mov fsubs fiadd dec mov and add (bad) loope call mov push ja int les pop shrl rcrl test sarl lcall fimull imul jo inc in repz pushf bound or inc jbe push mov pop (bad) popf xchg outsl fldl adc imul (bad) mov (bad) call into and mulb fstpl mov test cwtl rcrl (bad) les sub lret test es push pop mov out inc cmp arpl lock in inc repz sbbl pop xor xor cmpl or les inc mov popf cmp divb (bad) out or cmp out orb dec lahf sbb gs xor inc add jo cmp popf decb xor cwtl jo sahf jbe int fsubp orb mov jp jo inc out (bad) fmul int sbb inc jbe fnstcw inc (bad) out iret insb (bad) xchg repnz enter aad adc loope push js fdivr addr16 test cwtl cmc mov int sar mov adc mov (bad) push fstps les divb adc push fisubrl mov sarb push inc arpl xchg movsl aad lods imul fidivrl xor aam mov fistpl push xchg xor mov push dec mov inc mov cmpb cmc mov pop mov popl (bad) sbb fstps xchg adc in jae int lds jecxz push inc lea fistp notb or inc dec push dec js out div in sbb mov (bad) or pop rcl mov inc je push mov sub inc ljmp xchg push aad add dec mov dec pop jg inc push mov dec jae aad cltd fnsave (bad) addr16 frstor fnstenv jno push push lahf mov scas aaa xchg outsb iret flds hlt and int cmp push pop repz and xor mov pushf inc movlps sbb call (bad) mov or aad into jge or push mov (bad) sbb cmp jne loopne jle pop or inc int mov loope cmpxchg mov mov add mov mov aaa dec mov aas sub inc mov lret jae sbb out sbb push mov mov mov loope mov sbb pop and jnp (bad) js flds push and xchg mov lcall ss mov mov jae pop jmp inc scas sbb testb getsec inc push movsl inc mov cmp xor pop fwait inc leave add xchg rol xchg and sbb jecxz fwait inc fstps push mov testl jge add sub or inc rcrl add fs or aas pop mov pushf daa cmp fbstp or jns lret pop inc in cli out subl jno pushf icebp iret roll in stos sub mov movsl pop inc jp xor test cmpsb rolb in or mov inc mov das and dec jge adc fistpl xor fisubr adc pop or lahf add imul xchg cmpl into aas (bad) mov pop jbe roll mov mov pop (bad) outsl mov imul sub (bad) enter xor ja aas push adc ljmp cmp push xchg test fwait and pop add stc mov (bad) adc cmpsl icebp jmp or xor mov sbb xor mov stc popl insb hlt mov or mov inc shrb pop addl jo cli nop jbe push or xor inc cld push dec mov mov sub imul adc and aas (bad) iret mov aas out jno pop inc jecxz popa cmp out fidivl fsts imul push xchg icebp add fistl add insl test mov jb pop cmp adc mov fs inc mov ficoml nop inc xor addl add inc add fidiv insb shlb and mov stc mov inc dec cmp add and xor mov adc mov sbb rorb add loop sbb pop loope or mov (bad) xor test outsb add inc xor into inc dec pop push xchg mov and inc push cmp sub pop sbb xor push cmp xchg xchg loop adc add cmp pop xor add outsl bound fsts clc insl inc pop xchg sbb or xchg or mov fiadd sbb sbb vpcmpgtb bsf and jmp push cmp push loopne ja out mov pop push insb xor push dec cmpsb sbb mov lahf inc adc hlt push lea ja add aaa (bad) shl (bad) lcall or and orl adc jae fwait add ret into add xchg dec push cld mov cmp scas xor movsl es (bad) adc ret popa iret mov aam xor jae inc adc jge xorb add cli orl push adc mov dec add mov out inc lods orl call int3 lret cltd xchg (bad) scas pop nop inc pop fstpl mov xor mov shlb xor stc push cs inc lcall adc leave add out mov add lahf and testl mov xchg xchg pushf jl jg push loop cmpsl add incl xchg add adc cltd add (bad) xchg inc mulb ficomp into mov test mov jae std nop inc dec mov jnp aam push imul sbb jne push repz inc lcall lods lods loopne inc jl aaa shr push loope cmpsb jae add js inc negl inc stos (bad) pop sbb dec adc xchg adc jle pop pop loopne fnclex jae xchg iret xchg je in sub xchg and ds cmp fbstp nop xor mov mov add shlb and mov rcl mov mov clc outsl fwait pop pop add lret xchg testb sub shlb nop mov add dec out inc inc xchg mov fucom sub iret aam enter dec mov push cltd mov cmp or push dec les xchg dec or cmp pop and jnp inc pop push mov std shrb jp mov lahf idiv nop sbb (bad) xchg out xlat ret jo lret mov cmpsb nop (bad) data16 cmpsl test loopne pop mov mov fincstp imul inc jbe (bad) lret mov imul pushf and or and aas pop enter lea adc inc jo sub loop nop push loope pop adc popf test cld aas push insb sbbl ret adc rcr push push pusha in push loop int aad dec bound aam push sahf mov push or sbb fucomp cmp pop insb in xor push stos jno bound daa notb inc out push inc sbb xorl je xor popf incl add push aas ret cmp xorb adc iret lcall or imul lahf cmp pop stos mov sub dec push stc mov jo movsb in mov sbb mov push adc mov jo or lret into enter mov cmp (bad) sbb inc mov ss cmpsl fst jne mov shld lahf cmp fistl push push mov jae rolb sbb add jle movsb adc ret jp pusha jno cwtl mov mov imul insl scas dec stc sbbl xchg imul push sub sbb adc sbb daa jge and mov arpl std xor inc xchg push arpl jl mov xor push mov cmp pop jbe dec mov pop sbbl or sahf mov (bad) (bad) or incl xchg inc push mov sub incl insl xchg push cli or aaa fcoms fsub pop dec pop cltd xor cmp add bound loope dec cmp xchg or call xor in sub inc inc xchg inc mov xor fcompl sub jbe test movsb clc mov mov inc outsb aaa or mov sar inc ficompl in pop pop inc mov jnp adc call sbb and jl jns cmp nop or xchg jno ja jns je mov pop stos or xor mov sbb pop push movsl xchg notb aam push fiaddl add movsb aas adc inc jmp in mov and jnp rclb push inc (bad) mov out dec mov jmp negb sbb mov out xor jae lods and lds (bad) xorl sahf data16 lods lret sbbl loopne popf or mov sbb mov jge or sbb stc and jno cmp lcall push stos sbb jb inc or mov inc or sbb data16 inc in pop mov mov fsubrs mov add aam rcll dec leave shl jle mov comiss je outsb adc jle cmp inc je pcmpeqd addl ficompl jns out ss stos or std inc mov popa movl lret leave add inc cmpsl in loopne popa sti and dec cmp outsb xor mov fadds arpl push adc adc loopne ret scas cld lods push sar xchg inc clc dec in inc jmp int nop loopne movsl add ds arpl xchg mov push jb scas dec mov cwtl xor and (bad) and inc mov sbb std (bad) mov sti adc (bad) out iret dec or out in sub inc les pop jl add cmpsl mov mov jg or in fs pop (bad) xor jmp and insl mov push jae call cli jp pop mov rclb dec in jns stos dec lods xchg or adc fwait cld inc (bad) hlt adc imul add loop mov cmp or xor dec xor jmp mov addb nop rcrb faddl dec sub imul inc xor incl je jno xchg pop xor add add sub and cmp (bad) sbb mov rclb xchg push ret add testb cmpl push mov imul add xchg loop xor xor into dec xlat aas pop enter mov in push pop sbb jg push jo jbe out mov sbb rorl insb adc dec (bad) outsl js adc call ja jns ljmp inc add test lret ljmp sbb rorl and sbb mov repnz call std sbb fdivrl ror loope adc std and daa adc push repz inc arpl mov fldt stos add adc mov inc scas mov stc popa inc mov into in das mov add jmp mov and (bad) push sbb mov sub ficoml addr16 xor jmp ja inc adc fnstsw test mov fiadd lods xlat outsl fisttp add repnz push mov jg hlt push incl dec or dec or sti bound mov into mov inc sbb inc push pavgb and fldl and inc pop sbb insl cmp aaa mov mov or mov stos xor or std inc mov adc les fs out xor jl mov orl sbb cmpsb cmp xor pop cli (bad) or cld inc sbb nop sbb mov sub out testl mov test xor or cmp in jp push aaa mov inc add push and je repnz mull mov das sbb cmp rolb ss inc pop fmuls bound movsl mov mov sub add arpl or sbb loop xor xchg inc mov ficom push inc cmp repnz and jp lock aad (bad) cmc inc cmp mov std dec add push xchg rorl sbb out clc inc xor addl xchg add mov leave xchg cmp jp xor int and add ljmp jge add scas in and push xor fistpll add sbbl pop jbe call and mov sub cmp mov jns pop mov icebp repz iret push repnz mov add pop add imul and outsl aas lcall and add push lret stc mov pop je lcall xor add ja mov sbb jno lcall add (bad) scas inc or ja mov mov xor hlt sbb out in loopne cwtl push cmp push sti nop daa inc adc aaa jp subl leave hlt inc aam stos leave pop xor in mov cmpsl or je dec xchg add subb (bad) sarb cmp sbb add sbb sub mov sbb je outsb inc fucomip fwait in inc mov mov mov inc ror outsb inc lods pavgb xchg pop insb sub sbbl sbb mov mov test call and dec imul dec pusha inc insl aad inc faddl aas fs (bad) rorb in cli or mov sbb sub push outsb rolb and and adc les pop ret outsl add icebp mov mov cltd aad cmp lahf add stos adc fsubs jge and inc mov in add les mov adc mov inc stos (bad) or in out xchg mov arpl ret jnp fld (bad) test dec cmp mov xor jl mov clc mov jbe pop inc push mov lret mov mov aas sbb dec movsl mov les (bad) enter mov cmp sbb jnp mov xchg bound lcall incl adc in (bad) cmp out xchg loop call push fwait fwait cmp and sub mov mov or fs add mov inc ds dec dec and incl lods mov and jl imul subl aaa mov xchg mov dec icebp dec and add enter loop ds repnz mov sarl pusha std and movsl mov stos ja and add or andl inc hlt and imul sbb sbb test shrl xchg sub mov nop rclb movsl cmp (bad) inc mov pop and loope cmp mov pop hlt and or icebp ljmp shlb push push popa roll add movsb int std mov loope daa inc lock push adc movsb fmull jns cmp dec mov push mov insb mov jg cli pop sbb xchg dec jecxz test test cmp xor aaa mov lret fwait inc cmpsl mov lds jle ret jns ret inc adc mov cmc inc cmpsl lret pop xchg pop call or pop mov shr pushf enter testb add lods (bad) pop sbb mov mov mov mov mov push sbb lea mov pusha cltd iret decb test xchg dec (bad) repz in xchg rcl sahf or xor mov ds pop lret add and push mov mov int3 and fcoms mov out repnz inc mov or add adc jg push shll jnp and add pushf xchg enter icebp jne out enter lcall cltd jge in pop faddl (bad) adc out and rcrb cmp lret push inc xchg lea lcall inc xchg (bad) fisttpl mov xchg push jg sbb enter dec jo inc scas adc add ljmp jno or sahf cld add outsb mov aaa fldl xchg mov adc sahf enter and nop fdivrs jmp cwtl and int3 and jae or in inc push lcall lret popl adc outsb (bad) out (bad) lea ret mov cmp dec (bad) lea fs lcall cmc inc lret lcall cmpsl pop xor xor pusha cwtl sbb je jnp fidivrl nop inc mov jns sbb push jne insb jp testb lds sub pop adc xor mov pop incl cli enter rorl and jbe lods mov (bad) jns shlb dec das adc in jecxz (bad) and enter pushw mov xorl leave jbe lea (bad) cpuid loopne ret lods (bad) jne adc dec js jnp es push cmpsb sub mov inc ljmp jo pop div inc dec sub cmp jp lahf fisubrl rcrb add sbb jge jg and dec mov mov fmull jb cmpsb iret jae pop sbb inc pop arpl sub inc out xor inc repnz loop xlat mov ret xor pop ja pop test out in je imul push sbb ror cli or dec call sbb and nop pop mov call pop inc jns inc out xchg mov inc and mov pop addl dec in dec xor sbb ja jnp popa mov test xor inc add pop ret sbb jo push bound loopne inc mov gs mov ss cmpsb xlat inc adc xchg and fldt daa shrb adc sub test (bad) adc mov adc lcall mov inc fildll bound imul fs mov loop xor lods xor mov (bad) mov cwtl outsb sub jl icebp inc push pushf jmp pop into in cmp xorb cli test rorl (bad) dec insl cmp (bad) lea fadd pop dec mov cli push std call mov mov loop cli pop ja xchg shl xor int3 sahf ret sbb fsubs xchg mov or enter lods ret fmull je jp sbb incl pop inc fstl add int xor adc negl sbb not test mov cld shlb inc ret mov sub arpl pop or mov fwait jno pop jbe jno shrb ficoml out dec and imul inc mov repnz inc push sahf fimul inc xor dec inc hlt fs imul aaa inc movsb pop xchg mull dec (bad) jbe rcll push push dec dec mov mov push inc adc jmp mov sbb mov adc test jp movsb sbb imul inc dec (bad) loop loopne sbb ror sahf jge mov xor ret cmp (bad) aaa loop pop sub (bad) push gs push (bad) aam outsl lcall sbb inc pop mov mov push rolb lea bound pushf xor jnp popa jbe sub cmpsl and jge jo dec sbb jle,pn pop jmp push push ret xor cmp xchg mov push dec push (bad) lea roll jnp sbb or jp cli fiaddl faddl mov (bad) push add stos mov xchg cmp adc lcall movsb loop popa add push jb outsl out in inc adc or test push cmp add add cli xorl lods fldcw or mov aas mov call lea insb (bad) adc push mov enter ffreep inc or testl rorb push pop out rcr (bad) sub cmpsl fwait pop mov add fbstp cltd ja sbb les and fsubs dec loope jo pop xor xlat adc sbb sub incl loop sub jo stos enter inc pop add jno divb push cmp stc push cmp push xor mov mov and push pop cmp leave push aaa test lret lahf scas hlt add inc add leave add mov (bad) rolb lock add mov cmp cs inc (bad) mov jle add and ret push jp pop push arpl mov add mov xor mov or int3 cmp jns sub jl sbb outsb repz mov adc add out add xlat pop popf mov inc aad aaa dec adc popf push ja mov add pushf lret imul lret test insl mov add in inc notb push jno mov sub jb push pop adc jp lret mov or in add inc (bad) lock movsl jge lods mov mov cs add and out mov loopne add add cltd mov inc sub jmp or adc jbe or in cs fiaddl cmp arpl mov sub pop xor mov jns (bad) sbb fcoml sub mov and mov adc push sub mov mov test shrb (bad) add cmp xor inc call or and pop test lods shrb dec clc push inc popf or pushf testb xchg outsl or xchg test rorb lock insl stc mov ffreep and add mov mov bound daa clc ja enter add mov add jno sbb movsl mov fs cmp dec sbb (bad) les sbb or add mov clc fcmovu inc push jne adc add sbb mov pusha test lret add daa nop or ljmp sub pop cmp add daa mov icebp inc cli outsl push sti and add xor sbb inc test xchg lcall add in push sbb ja or jae xchg fwait adc sahf int3 or rorl outsl ljmp in aas adc ret and lret xchg xor divb push jmp push in mov idivb (bad) cmp fs dec rcrb inc pop in or and sub add mov adc inc cmp (bad) aam mov sbb hlt adc mov test jnp leave cld fsubs jecxz or push psubb nop dec cmpsl pop dec mov cld pop xorl mov imul add or (bad) pop aas or in movsb popa (bad) push incl movsb sahf (bad) push add mov sbb push aas dec cs (bad) pop in jge jl mov out rolb add adcb cmp cs fistpll (bad) dec sub jge (bad) jb sub andl push popa adc cmp or aas loop sbb or mov add and (bad) aas imul fwait mov push push ret fxch cmp jg and mov out mov mov ret and xchg pop ss enter inc jne jp pusha fisub shrb mov stc out or dec aaa jge mov jmp adc outsl mov popf call aaa add xor mov dec xor (bad) cld rolb inc and inc cwtl outsb out (bad) rcr (bad) dec add int3 xor push data16 fldt xchg mov sti nop push in jbe shr jle cmc inc loop xor fnstsw rorl imul cmpsb jno cld fisubr and cli ds cmp (bad) leave push cmp xchg imul pop setb add dec popf jo sarl lret mov les adc mov push mov dec inc popa sbb faddl insl fwait mov cwtl data16 xor cmp mov cltd and add cmp jle ja sub pop test inc adcb sar mov mov add idivb adc (bad) pop fs cmp les divl xor aas xchg adc mov add (bad) jns pop push in stos sar add shrl rol fadds xchg mov xchg add cmpsb pop in sub jno ror add dec and or scas cltd movsb push mov out (bad) in test or outsl xchg or lock (bad) cmpsl sbb mov popa shl popa lret pop mov gs faddl fildl xor push test xchg out cwtl cmp mov (bad) cmp out fwait inc mov and out adc roll pop pop in and dec and loop pop insl jo mov flds push jns lds aam jae cmp inc jg iret sbb aaa inc es out iret adc rcrb mov mov mov mov ss or pop sbbb add stos pop dec xchg inc imul mov cltd lahf sbb adc dec andb (bad) mov jnp andb xchg leave sub (bad) pop push (bad) or lods popf push addr16 xor fcomip sbb dec and lock or shlb nop das dec ja xor adc sbb insb js cmp inc xor out jnp sub insb data16 testl andb roll (bad) ss aad pop aas aam inc mov xchg popf xchg rclb push movsl mov nop adc push inc (bad) sti xchg les nop das sahf pop dec push (bad) fsincos sbb incl mov and out ret push jno sbbl pop lea mov cmovb roll out rcrb daa cmpsb (bad) dec fisubrl dec (bad) push push test imul mov inc (bad) sbb in pop imul sub cmp mov xlat add push in insl mul sub movsl push lea xor inc mov mov imul or fnop add sbb mov mov sbb sbb cmpsb daa fwait inc fild mov (bad) add mov adc add outsl pop and loop add cmp and jmp loope cmp test cld mov fldenv roll sub aam xor mov and add ss jmp ja xchg mov inc mulb xor and add inc dec dec gs iret adc rclb pop jo mov pop cld jle daa shrl fisubl (bad) cs je sub hlt mov inc ds cld je jbe adc int push (bad) mov jae xchg and mov pop xchg neg add xchg sub adc pop sbb inc mov jecxz xchg lock mov pop mov test jnp pop xor (bad) shll cmp dec add mov push fs mov mov and xchg jmp (bad) dec cmp sbbl sti add push inc outsb mov nop cmp sbb and test hlt cwtl jbe mov (bad) lcall fcoml add out adc mov rolb nop jno push xchg or inc rcrb (bad) mov add sti mov add loopne and sti push mov mov sbb jae inc in cmp jb out push in movsl add inc (bad) add fidivr enter or pop leave add loopne daa cmc and fisttpl inc cmp setp sbb subl ss and push xor jno add jo dec pop cmp xor or cmc add cmp roll jmp pop addr16 fadds das lods pop divb inc repnz mov aaa lcall add inc xchg rcrb ds and cltd loop adc sbb push sbb cmp push in sub stos inc jmp and cs fiaddl cmp arpl mov sub jns and add shrl add xor add pop mov push jae scas push push dec jb stos jne inc stos add xchg andl cwtl inc fadds mov and lock sbb inc sub daa pop add dec inc lods sbb mov pusha decb inc scas and aam mov js jne aam or and and dec loop inc xchg int3 add cmp cmp lea adc insb loop fwait jnp adc mov push jmp (bad) dec pop inc or test fcomi adc dec and cmpsl cmp faddl jl mov and pop sbb sbb arpl and cmp push dec cmp xchg dec cld nop or icebp std dec xor inc cli inc fnstsw mov pop adc mov pop mov adc and fdivl jne push hlt out bound xchg pushf sub add add inc xor push popa add mov les leave add (bad) xor mov adc xchg jo push jmp shll into add push fsubl int aam xlat pop (bad) fist xchg adcl cmp ds out sbb pop push pop or push popa (bad) xor mov repz adc push inc and push mov das je mov xchg mov sahf hlt or xor inc lods call addb push movsb jne lea add std inc enter xchg xor fs test inc roll xchg dec add sub inc and rolb and das jbe es sub pop rcrl fisubrl andb outsb lret add in push dec or jae and shrl mov or and mov pop test pop pop and push jge and xor iret int3 cmp dec std pop add jle in nop push repz test add push sbbl add dec das loopne out cmp icebp push lahf icebp sub sahf stos out loop lock sbb pop inc xchg int3 push les insb jmp fnstsw inc mov pop aam movsb mov mov pop inc cmpsb dec dec push loope hlt cpuid divl inc jbe jno jb or fnstsw js fstpt cltd jo fwait (bad) adc jo popa enter mov aas inc (bad) cmp or ljmp mov mov sarb dec aad mov pop bound negb mov std movsl mov repnz pop cwtl (bad) jmp iret adc adc rolb repnz jo pminsw or push lcall cmpsl or shll sbb mov push aam inc cmp jno push push xchg push daa fcmovb mov sbb adcl rcrl and push xchg cmovbe ret jbe out and jmp sbb push and out jnp (bad) ss scas loope or mov test lods push jnp (bad) adc or adc es lds jnp scas aas data16 cmp (bad) fldcw dec mov and loop push push mov xchg dec adc cwtl fwait push fisttpl jbe std or cmp pop mov call or mov rcr or jmp sarb popa cmc or push mov and cltd out and mov rcrl xchg loop cmc pop (bad) xchg fwait cmpsb sbb push adc pop cmp push shll add aam push mov sbb cmp jne dec mov mov sbb and and cmpsb icebp test dec cmp lahf and enter and dec xchg mov mov icebp sarb jp ret xor rorb stos push sarl arpl sub fsubs inc jno nop dec movhps mov pop ret popa clc dec movsb insl jecxz sub and sti and (bad) outsl mov mov xor inc aam lods pop je mov es (bad) movsb sbb out cltd xor and test xchg roll push jb add add mov test push rcl add les inc xor jp pop mov mov inc mov pop add xorl cmp pop movsb xchg in int lcall or mov std test incl data16 add (bad) mull cli dec and xchg lret int jmp lds mov insb ss mov inc mov mov pop ds jmp cli lcall je push incl aam mov sbb push pop popa rorb (bad) aam push js jnp add outsb sub or popf nop inc mov xor or xchg shll xor loop push fstl sbb nop sub iret jl push enter mov add lcall cmc inc pop mov sub pop incl loop mov fimul cmp sub jbe adc push sbb or in sub add std mov sbb mov sbb jmp mov loopne mov cmpl (bad) aas andnps push movsl push aam (bad) js loopne lret pop or xchg and xor movsl push addl xchg int3 gs mov pusha pop outsb and adc call ja add out addr16 adc jg stos outsb and clc je jg inc fstpt rcl sbbb mov addr16 and jne lds std mov popa shrb adc stos popa or out cmp sub ret add lods fcoml mov adc rcl fwait mov dec adc cmp xor dec fs ja mov ds sub pusha je dec pusha mov fnop and in movlps fwait and test pop cmovs add fidivr mov imulb bndstx push sarb pop jl or inc jbe (bad) sbb mov out popa add and jbe add push nop ljmp dec cmpsl loop dec notl subl pushf sarb push les sbb ja fwait mov ret jp jo ljmp add imul mov (bad) icebp lret sub mov adc aas mov stos aam ret imul in loop or xchg js cltd cmp mov inc std or push inc cwtl jb std cmpsb data16 xchg iret (bad) mov inc adc pop aad push xchg faddl and push cli inc sbb dec mov sbb popa mov adc adc mov aad sub push mov (bad) aas and mov cmpsl jecxz push and add pop lds or inc push adc nop fistpl sbb addl jae inc push xorl (bad) imul mov sbb mov pop incl and jne xchg loopne and repnz mov ror (bad) dec addr16 addl das mov xor xchg les and sbb hlt and dec add fiadd sbb xchg (bad) jae pop xchg push and add push test sbb (bad) pushf pop xor (bad) jge aas clc jb f2xm1 xchg or jb mov cwtl cmp jbe cmpl js add call mov sbb call push out out inc add cvtdq2ps or xorb or sub jo fcoml and mov sbb lds push je xor or cltd cwtl in push stos or andl fwait mov faddl in cs adcl xor adc subl es aaa add mov cld sarb fisubl mov jae pop popf mov push imul les xchg and dec loope (bad) adc movsb lcall nop pop jae and or pusha push add int (bad) out mov sbb (bad) or sbb iret xchg or and or push fwait mov pop pop psubusw adc imul jae cmc mov jno or jmp pop loop faddl inc pusha (bad) pop jg push out add cmp xor or adc mov out push les push adc push repnz lret (bad) call add pusha outsb fwait mov mov ret adc cmp lret pop inc lods or js fnstcw icebp rcrl lds push pop or push imul xor sbb inc aad or mov mov mov push xchg adc push mov cltd in mov and mov test scas test nop or jb add and and mov ljmp int inc hlt ja aaa stc and mov xchg inc pusha mov inc mov shrb sbb fist (bad) push imul insb and pop into pop cltd pop push mov call in repz mov js notl sbbl notl mov (bad) sbb cmp test mov inc mov ss inc inc cmp adc imul test test jb ret jb push lods fbstp fdivrs and sbb hlt mov and mov or subl xlat fistl dec sbb push xor sbb ja fiaddl (bad) test or dec mov inc lea add es jae subb or arpl and cmp rcrb in cmp mov push movl pop les sti adc mov ja cmp add sbb cmp xor sbb arpl cs cmp sub sarb hlt imul push mov lods loop lahf aam sarb mov fidivl push lcall or (bad) inc pop outsb inc fistpll adc push lock dec mov or cmpb or stos dec pop push hlt add dec mov jb cld mov jmp in in mov push insl pop test das inc pushf sub pusha in inc je push loopne cmpsb nop push cmp dec cmpsb jmp iret and and pushf das std xor jb mov je mov cmp subl jg xor sbbl (bad) loopne in cltd mov mov (bad) pop and lcall fadds mov mov dec out adc add call cs subb adc (bad) dec dec fiaddl mov inc push repnz sti dec clc lcall push jg inc and and sub push sahf pop fnstcw or cmp lods ror nop (bad) fidiv jp fcomp dec je xor inc xor pop cmpb add sub lret pop sbb pop fwait pop push push movl sar ret jb std xchg inc xor (bad) xor icebp and xor popa sub inc cmp pop push or xchg call cwtl dec xchg nop in fist aaa fldl dec inc xor (bad) fnstsw cwtl mov test cmc xchg xchg or fstl cmp shlb inc addl add xor inc mov mov adc lahf lds add sub adc cmp dec mov xchg adc push fsubrp test repz sbb bswap adc or hlt mov fcmovne pop pop and mov add or sub (bad) lds cltd dec mov enter inc lret pop and pop daa nop (bad) push mov push insl push (bad) xchg ja rol (bad) enter xchg enter add int sahf ja sbb or cmp dec inc pop sub sub fwait popf rcrb mov add sbb cmp or adc mov pusha adc adc fwait pop xor or or xchg pushf lea (bad) xor cli nop fdivrp sub inc sbb enter jecxz pop sbb idivb add dec cwtl dec pop dec icebp les add out frstor mov (bad) (bad) arpl (bad) cmp xor jle push les jae fldt sub jbe add xchg dec lea dec stc pop flds xor xchg cmp insb add push inc xor aaa mov sarb dec cld adc add ficompl fldln2 xchg adc inc add sahf jnp arpl adc mov push cmpsb xor lahf adc aam xor inc push mov (bad) jbe (bad) jle sbb stos addr16 nop out (bad) adc icebp add or dec dec add cmpl shrb mov pop outsb xchg ds jae fadd mov adc test adc push adc shll dec jno repz ljmp lods lret xchg and and xor loope in imul lock or mov dec in sti push sbb jns clc js dec cmp jmp fsincos mov sbb cmp adc add lret insl test sub addr16 xlat dec xor sbb je pop scas adc mov mov fiadd jbe jo lcall lods (bad) jp pop lods pushf addr16 dec cmp insl push inc inc xchg push push add inc out mov mov insb cld nop jp (bad) imul cmp (bad) sub push dec push sbb out push imul loopne (bad) out cltd inc pop mov dec test sbb dec in xchg mov (bad) dec jnp rcrl mov ljmp into push jg adc sbb incl (bad) outsl js rolb aaa adc cmp mov xchg jmp ret cltd push fiadd xchg xchg (bad) cmp xor popa lret mov xchg push cmpsl jnp mov mov stc ficom iret stos roll repnz lret out xchg mov (bad) jb xor loopne xor call repnz xchg call sbb adc movsl pop mov inc cmpl lods movsb sbb sbb call fiaddl popf mov lds cltd out daa xchg add push movsb sarb jle sti and jno insb xorl addr16 and out mov jo jbe mov je xor call mov dec inc (bad) or in aas mov ljmp xor popf loop mov and into jnp push mov mov in addb int jle ljmp jns or (bad) js mov mov subw mov repz dec sahf and lea fsub jo mov push clc lcall and test xor mov or dec or add or cmp lods ror nop (bad) outsb mov mov data16 jecxz mov or sub xchg mov adc fwait jl mov dec scas stos (bad) arpl jnp loopne out inc pop mov add inc lahf mov rclb dec inc loope and jg add xchg pop out outsb xchg and mov cmp push add xchg rsm push sbb int and jle aaa movsl and or or sbb sub xchg mov rcrl adc jbe lods inc sbb imul mov pop or test inc ljmp push push dec cmpsl mov sbb adc shlb sub jne mov incl fdivrl pushf popf sbb js cmp dec notl push stc notb (bad) into (bad) and lea sahf dec sbb ss jne (bad) xchg ja add mov out cmp add imul xchg lock xchg sbb jno into and (bad) outsb aas sub inc mov pusha adc divb arpl push jns cmp adc add negb mov add (bad) cli test stc (bad) call std pop adcb pop push pushf inc ds mov xor inc int3 jmp fiadd xchg push ret pusha pushf stc and into push xorl fisttp lods mov div inc dec cmp sbb inc movsl out jmp or in pop xor addl mov ret testl and stos mov push ss add mov sbb hlt mov and xchg mov pop adc jae sbb adc add add fldcw push repnz shr jnp insl (bad) jne sbb aad roll mov sbb and sarb inc mov jnp sbb cltd inc sbb mov enter cmp mov test dec imul push add add sbb pushf es add fadds pop add cwtl out inc jno inc in cmpsb bound mov push test xchg inc lcall fimull or addb stos add mov xor repnz shrl ret xchg add sbb sbb lods sub pop outsl bound imul xchg inc leave add mov fisub ss dec sahf out leave add cmp outsl aam arpl in (bad) jo xlat sbb fidiv jl mull sub lret testb and or jl jae pop xchg roll add lret fwait dec movsl test push sahf add mov roll or mov cmpsb clc xor inc xchg or xor jnp loop add xor cs dec loop aad lock stc and pop and mov pop cmp mov dec fwait cmp lcall sbb inc push add fadds popl subl fucom xorl mov flds xchg or fwait mov loopne mov ss dec data16 sbb or sub add das adc rcrl add idivb add out test mov leave add jb lret fcomps loope adc jo xor xchg in addl mov jbe add incl adc int3 adc adc (bad) mov xchg mov je fnstsw in sbbb mov out mov push jo repnz out add test inc mov adcw inc jno cmpsl jns repnz xchg pop push repnz xor jle aaa mov ja inc cwtl jge loop fsubs and arpl add pusha sbb xchg hlt add xor or fistl rorl sbb push insb or sub inc sub jl sbb mov lcall (bad) int pop xchg ljmp sahf scas int test in push mov mov pop das flds iret clc outsl daa sub push adc push dec adcl sti sbb out mov int push add sbb testb mov popl pop lea (bad) jo sahf fsub pop push std (bad) or push aaa dec adc cltd call mov (bad) jo jo mov push xchg jne mov or nop out adc negb mov add clc in inc ljmp jg ja pusha jae inc call adc dec cmc test rclb nop pop and mov pop dec repnz inc out push xor inc and outsb pop enter mov mov loop (bad) js roll xor or fld sti adc or cmp les inc push mov in cmpl lds lods sbb adc inc aaa (bad) sbb adc fidivrl pshufw subl cmp rcrl mov cmp pop aad xor push test add bound movl bound pop pop test sbb add iret cmp fisttpl insb and lahf stos movsl push pusha sti mov jb lret jp sub imul push jg or inc ljmp and mov sbb mov or (bad) mov and add push (bad) inc imul and mov sar aas je push adc jb jbe leave add mov mov iret inc mov adcl mov cmpsl inc mov inc add stos push (bad) push add push js dec or cltd xor scas add (bad) int3 in int xor ljmp mov pop push and or mov inc add jp fistpll lcall addl or inc scas jne jb or sti jp sub je and mov jmp pop dec mov and xorl mov fistpll sbbl (bad) xor loopne inc push test je pop or cli add inc dec and enter dec popf mov adc lods dec sbb loope (bad) jge popf cmp cmp imul adc inc add fdivrp and ffreep add jl mov or aaa pushf or rolb clc (bad) mov push cs nop add shrb xchg dec popa inc jne stos shrl adc (bad) or sbb pop dec in std rolb nop sbb cmc sub fist xor xor roll add (bad) pop add inc ret (bad) shrb sub jge cmp sub (bad) mov inc mov lret fucomip fadd jne rcr rcrl and imul push mov fistl xor lds adc out aas addr16 pusha imul enter push sub pop pop movsl movsl push mov sbb les or pop or ret add xor clc and test test testb test dec pop add adc xchg adc movsb icebp and in push push jae xchg je movsl push sarl mov push (bad) fpatan inc outsb xchg push movsl (bad) and lret mov movl jge mov xor cmp mov pop rclb addr16 aam add shlb jbe add aas movsl add aaa push cwtl xchg sbb ds dec cmpsb fs insb xor lods sbb jns jl (bad) shrl sub jl jg or xchg fdivrl push daa fnstcw je xchg test enter add addr16 pushf (bad) mov pop push (bad) and in dec add sahf mov xchg daa mov mov add jns mov or andb repnz lcall mov xchg pop lods pop xor (bad) fs test (bad) mov adc dec and add inc mov shrl in imul inc mov cmp (bad) dec jge push mov ss ds imul scas lret mov lret daa sub mov dec sarb imul sbb cltd addl mov loopne cmpsb (bad) mov push sar add mov int sbb fs cmpsl push stos cmp mov popl rcrb (bad) cmp in into adc fistpll incl jno imulb int dec daa (bad) addr16 mov inc xchg jp xchg push mov cmp mov addl lret or inc out and xor cmpsb sbb aas jmp add jle sbb aaa (bad) cmpsl xchg push pop repz fiaddl loop cmc das rolb fdivrs jnp xor sub mov jns push jnp out sbb push popf xor cmp add and lret insl lret aam sbb push std add push push lret roll push sbb dec jl aad sar pop or (bad) (bad) pop cmp sbb cmp pop test sbb aas mov fsubrp int3 pop xchg cmp mov pusha lock push push sub cltd jns daa mov mov int3 jp ljmp and pop aaa push int std mov sub rorl enter ss (bad) jno cmp movb inc mov mov jbe add jnp push roll jle push jle jbe imul inc (bad) fldl sub mov or and clc push cmp test jbe cmp lock in (bad) adc stos adc mov mov mov push fnsave jb into fisttpl leave add rolb ja xor push push cmpsb sbb xor inc cs out aam and pop cmpsl dec xchg inc add shl xorl nop sbb ss and outsb jg push add jg jl sub clc test testb jnp mov arpl lods pop add sahf arpl inc pop imul and movsb jmp push shr mov lock sub and dec pushf and int xor push inc inc dec mov enter call (bad) and push cltd sahf or xchg xchg ljmp jnp jle inc xorl cmpsl cmp xchg and and adc mov fildll sbb xor jg adc dec sbb sbb push or stos mov adc mov insl jbe das xor adc cmp sub sbb enter mov xchg xorl mov daa or testb push sahf fs hlt inc les push rcrl loop addb add sub in daa and outsb daa sub mov iret push sar dec je push sub mov xor pop and adc fwait out mov xor adc push out dec pop xor subl xor repz push sub adc and jbe addb add pop mov and jb push add call jg mov sub movsl lock or mov imul xor cld push das flds xor (bad) xchg add mov jbe inc sbb in mov mov inc lea enter pop sbb ss aam jb lods push and (bad) dec bound adc mov or xor mov inc in es ret mov jae add rol (bad) ss inc mov and add or jne mov mov push xchg in adc lods cmp mov mov xlat movsl push jne nop sub (bad) xlat and and aaa add jnp fs insb addl and add xor cld nop aaa or inc cmp and and das sahf and (bad) insb shlb (bad) inc or out or cmp cmp or popa arpl jmp xchg push push nop pop inc jnp push xchg fsubrl aaa add int stos sbbl jl sbb fstps repz fiaddl and or cmpsb (bad) sub imul push adc xor cwtl adcl push or movsb xor xorb popa inc inc (bad) pop repnz cli sub inc sub sbb aas ja inc fidivr arpl add cmp adc aaa popf outsb xor std mov or inc xor test xor inc fmuls insb mov aaa mov hlt mov out jl or or fadd cmp pop rcrl dec mov add inc mov (bad) outsb xchg add out add mov mov xor pop xor or sub sbb js insb divb cmp fs aaa or push xor insb es or xchg test mov mov mov test movsl daa pushf push adcb add push lcall stos arpl movsb aas dec sbbl add mov (bad) and stos xchg mov mov sarl les add test add sub xlat call sti (bad) push cmp mov cmp dec mov nop insl pop cmc mov pop inc inc mov xchg testb and inc out and push out cmp jno mov add xlat xchg cwtl and inc cmp or or out dec aam xor or sahf clc cmp in imul lods imul pop loope lcall xor (bad) (bad) cmpsl mov dec pop mov xor test mov ss cli push dec sbb sbb adc jb das ret or mov fcmovne add outsb push mov incl lds mov push aas mov (bad) xor adc push (bad) mov movsl inc or or xchg jno testb stos adc (bad) daa cli mov ds es jl lds jo insb xor and cltd fmull add xor out xchg (bad) insb add sbb pop cmp aas in fisttp xchg pushf mov inc in iret in imul inc shl mov pop mov aas je cs pop sub mov mov and pop cmp (bad) or dec sbb dec mov fcmovnb xor movzbl cmp xor add cmp pop mov push rorl ret (bad) sub inc mov ret push mov dec mov iret mov stos or dec (bad) imul into (bad) scas les xchg pmulhw jns repz or stos out cltd add dec add out dec sbb fimull incl ljmp adc mov dec add hlt xchg pop push pop add sbb add adc jb incl jp push test imul pop dec outsb adc dec dec jl and push dec xchg mov ja mov pusha and (bad) mov adc adc push (bad) dec jo cmp add pop push aaa cwtl lea daa push lods (bad) incl je inc dec mov xor int3 ret lcall insl push mov fiaddl mov aam std lahf push xlat adc mull test mov pop jns stos inc add add jle jb xor cmp cmp sub mov mov pushf (bad) dec and xor mov rcrl and jnp stc push jnp push daa incl movups aaa dec mov push add jo in aas pop movsl add pop pop cmp imul inc fstpl lock inc imul neg faddl xor (bad) mov (bad) lcall mov (bad) add dec and inc fcos add loopne fldt sar or ret push adc xchg inc xchg push inc clc and arpl fmull push roll xor add fbstp mov add inc sti cmp adc mulb rorl adc fs sub jge call std add push (bad) sub jne jne dec pushf adc js xchg dec push dec ret inc adc mov mov sbb jp test imul vmovhps imul or mov xchg add outsb or std adc mov cmp js push das dec sti (bad) sahf inc (bad) cmp add add cli and push mov leave (bad) fldl lahf in pusha jo test inc popf add rcr inc jmp fs mov sub (bad) sahf flds sbb cmp fcoml cmpsb dec shrb sbbl push mov mov mov sbb xor ficom orl in in fldl xor sbb xor inc les adc or push sbb ds fiaddl add xchg cs xor cmp cmp adc cmp mov pop or push in inc mov mov test test sbb mov ljmp xchg mov inc xchg and fisubr ja dec subl (bad) out stos xor dec outsb rorb cmp adc push fimull add (bad) cmp add ss push rcrl cmp (bad) hlt cmc pushf push jo cmp sbb inc mov aad imul or (bad) mov xchg jp popl xor cld mov xor add ds push mov faddl mov enter cmp test sbb popa mov imul out cmpsb mov ret add xor je sub and pop int3 or inc aam adc jnp (bad) push ss adc mov add loope out push imul cli xchg into adc shlb xor loope and daa mov xchg out add scas xchg xor test loope pusha sbb or and add pop mov xchg test cmp aas pop adc add add leave lret jl loopne jb shlb push iret cwtl inc cmp cmp add std test roll (bad) jbe pusha and mov bound add mov (bad) xchg test sarb xbegin test sbb pusha repz lods imul and add lret out sub xchg test hlt inc jb jle or mov test xor push and and jb push dec pop jp sbb call push sub push xor lock daa ja or fsubr jecxz fwait and cld nop xor pop push sbb nop and out lods mov dec nop enter jp push push sbb inc add sbb in fs add test in inc outsl sbb sbb push add and adc or test mov or arpl cli mov aaa jb push jnp roll xor pop outsl fsubr inc sbbb roll cmp inc in pop loopne fiadd push add (bad) fs mov sbb (bad) sbbl test cmp popa push pop pushf or adc aas mov out pop mov xor cmp or sbb add scas push inc add imul stc mov out mov pop pop and dec sbb leave add dec aam cmp jge push icebp out in jbe stc and loop (bad) daa repnz dec rcrl pusha and out (bad) fucom cmpl inc popf or cwtl inc dec es xor sub inc rcrl xchg and iret jb movsb sbb sub cmpsb int in imul add inc out or sub mov xor orl fiadd jns or or xor ret mov aas fwait aas or inc push (bad) pop xchg adc sbb test add aaa cmpl fwait pop js cmc fiaddl mov dec lahf mov jbe or fcmovnb add scas rcrl xorb mov aaa jge add nop xor (bad) cmpsb mov enter sbb xchg hlt inc in clc daa mov add inc xor or sbb jge mov pop subb adc ret jb loop push mov imul shr mov or ret and mov aam dec xchg lahf or push es jg push sbb out xor adc or jecxz push mov xor add xor cmp mov ss repnz sbb cs outsl out adc imul mov cmpb test cmp insb inc cmpsl mov stos mov cmpsl lret xchg call nop push dec fsubrs jns into mov push jbe les mov out dec daa stos push das xor movsb mov inc pop and repnz out add sbb xor rolb imul imul js or add add pop dec scas cmp add inc mov popf movsb dec or inc push fisubr adc daa cmpsb je stos loope cmp sbb mov add sbb incl mov mov sti dec cmc inc popf or insl add repnz (bad) imul pop movsb xchg or push dec fdivl sbb enter dec jl adc ret pop and adc in fisubl add int ror das mov adcl xchg push or sbb pop pop pop mov loopne cs fidivr fisubrl lds loop mov ret leave pop mov bound (bad) push push js add inc dec adc (bad) cmc pop inc or push hlt js adc jnp push shlb into movsl xor imul imul inc popf and ret pusha add loop aaa jbe xor push xchg sbb and (bad) push sbb jno or add inc loop and adc in call adc (bad) sub jg inc loop sbb lock mov cmp mov daa mov ficoml sub rclb in aaa cmp inc push mov in inc mov lods inc repnz add inc bound ss xchg add mov pop in mov ret lahf mov inc pop ds mov adc fdiv out jmp test aad push loop sti inc inc cmpsl mov add inc mov iret mov sahf sbbl subb adc inc xor sbb test inc popf add mov mov es xchg subl out add repz dec out (bad) cs xor mov les iret fldl mov cmc insb xlat inc in xchg sbb push lods dec push outsb les aas ret stos comiss xlat jns bound out lock sbb and scas fbstp or sbb inc out mov inc repnz aam sbb mov add iret lea push pop jl cmpl mov jno or mov xchg and mov arpl cmp jp xor sub mov stc and loop fdivr flds into jecxz xchg or pop arpl test in loop cmp push fldt sbb in cs pop rclb pop enter popf xchg push test mov repz jp cmpsl inc test pop mov movsb rcr push daa add mov mov mov mov daa daa push or adc pop dec shrb jecxz es lock repnz sbbl pop xor sahf les incl ret out ret mov sbb mov ret add lock push fs inc hlt ret sarl mov fidivrl (bad) fdivr push outsb inc fildll arpl jbe pop adc out cmpsb (bad) gs jb inc xor fnsave data16 push push daa in xchg divl or movsb dec mov jl xor push rcrb testb adc movsb ljmp add ja test addr16 dec and mov ja lods cli dec nop inc loopne jg aas mov add ds incl les xchg add xchg mov loopne xchg int3 add rol pop sarb (bad) add lds sbbl ficom mov inc je icebp cli ret inc hlt jge dec cmp xlat in mov jmp or jge or imul push mov js aaa lea mov int mov js aad adc jae (bad) mov mov cli popa cmpsl icebp inc mov cmp xor and push icebp inc call push int3 push hlt sbb in pop popa add push and rcl mov adc addb push fdivl in inc xor call adc inc sub sbb or loop iret xchg inc ljmp in cli mov mov jo outsl std mov add data16 imul add popf movsb dec or adc cmp shlb cmpsb je stos loope cmp leave jne out enter (bad) incl mov mov ds mov (bad) out scas ljmp dec adc xchg inc push fwait jmp inc or adc jns data16 addl mov mov push inc jecxz pop inc xlat (bad) or les mov mov mov dec mov jno rcrl xor (bad) jae and outsb adc adc push stos (bad) add ret mov push lods add jb daa (bad) or and xor daa xchg fldl jmp cmp sbb xor aad cwtl enter xor cmp push and mov in imul iret testl inc pop (bad) add (bad) bswap jl add fcomip sub clc adc sbb sbb cmp out inc mov test or movsb push xchg jbe rorl or mov (bad) cli test jle add jbe mov pop cmp xchg js add mov mov aas mov popf sarb cs sbb and es and call add sbbl xchg jbe mov jl dec mov sbb cs enter test loopne dec and xchg adc cmc inc dec inc out in jbe fbstp cli inc mov les repnz dec rcrl pusha and gs mov jae ja cmpl shlb inc and push dec mov adc push mov int3 and and cmp inc aam push (bad) pop push addr16 xchg or xchg (bad) and add imul icebp test fistpl sbb inc aam rorb mov out xchg add or inc int xor push loope dec stos add xor sbb or cmp arpl cmp sub add pushf in arpl mov adc data16 aaa inc mov cmp inc jle jmp dec and mov in lret push (bad) bound insb daa sub popf test mov daa repnz inc mov sub je outsl pop divb xor out je daa push sub and popf xor push jge inc into mov imul imull je sbb imul ja outsb and dec dec lock add arpl inc in repnz fisubl fnstsw lahf cwtl inc lret mov or dec pop sti (bad) jb cmp and xchg xchg inc sub pop xor cmpsl cltd in adc movsl xlat in repz je and add inc out xor repz test and call push loopne sub jbe push adc mov ljmp xor push fdivl jecxz cli and jne test mov xor xorb xchg mov nop inc add shlb call push imul repnz call (bad) sbb (bad) adc mov loope xor data16 or decb imul mov add iret pusha inc outsl outsb mov cli outsl cli fwait sti and arpl incl inc (bad) and push out lahf mov inc dec js popa std rolb movsl mov or xor lret scas jbe push xor jp mov outsl (bad) out aam mov out xchg push xor or enter loop mov adc xchg xchg and inc pop sbb stc dec daa scas daa inc insb (bad) ss xlat xchg lret jno sub xor rolb dec rcl ss jge test sbb leave mov pop xchg mov add and daa push pop repz aam push dec jmp sbb aaa mov pop push out fsub (bad) push or decb faddl mov int lret lcall lea pop outsl mov fistl addr16 jp rcr inc fucomp fadds push mov cwtl fldt adc jecxz popl xorl xor mov (bad) pop lahf and cltd xchg or ret lcall push add jg add ljmp sub and out enter dec push sarb popf mov mov mov cwtl gs (bad) mov and inc push (bad) jae and stos popa mov adc rcrl test push stos cltd push adc sbbb jecxz and roll faddl or lahf lcall pushf shr ds dec das mov int3 loope std xor adc fistpll push cmc mov cltd add outsb and dec or cmp xchg cmp or fwait sbb add and data16 add jnp scas mov sbb das in pop push cmpsb pusha nop popa fucom jle add mov dec cmp mov mov outsl loop in imul sbb (bad) out and dec mov nop jne leave jnp mov lahf cld push add adc mov ss dec leave loope ja or inc enter idivb adc scas and jb cmpsl and adc scas cli icebp inc ret jbe push mov xlat (bad) in subl inc scas cli jle cmp bound idivb imul push jmp sbb add push aad out adc or scas add daa push jne insb cs out and jno dec int3 sarb mov adc mov add jge push inc jmp xchg mov push lock nop mov jle es add adc test mov inc in inc fidivl aaa cmp (bad) in addl subb fcmovb xor xchg pop sarb xchg or incl adc lock add lahf inc add sbbb mov jo dec push cwtl or mov xor out movsb adc mov push ljmp fadds add roll xlat sbb cmp push inc scas mov mov xlat test dec inc mov inc test xchg lock andl mov sbb push mov mov orl or pop rcrb incl fs mov xor add cmp sbb push sti pop and mov cmp lahf xchg dec in loop mov lahf add cmp lods cmpsl je stos pop dec mov insl ret mov mov loope mov mov clc mov sbb aaa dec adc stc jae adc mov shlb lret dec test jne xchg ss std ss sbb xchg pop inc sbb incl stos or pop jl xchg popf test mov jae test add jnp cmp cmpl popf pop jns and nop inc pop shlb pop add (bad) hlt loopne inc lret mov pusha push mov jge popa repnz out imul pop fist in arpl jl jns,pt cli and jb sbb loop,pn inc mov xchg cmp mov push shrb sbb (bad) and inc in imul cmp repz incl aad xor icebp push enter das push or jl daa mov mov jo mov sbb dec sub push xlat cwtl imul jecxz leave cmpsl jg lcall leave outsl mov pop (bad) and faddl jg xchg add xor inc jb inc adc mov inc or (bad) and jbe movsb and in (bad) aas cmpsb jl pop add inc aaa out and fs (bad) cmp add or (bad) aam hlt (bad) push sub lds mov mov push int3 je lods and lock insb mov movsb insb push rcrl les in sub insl cmpsb dec sub inc std sbb mov xchg stos paddb (bad) rclb pushf sahf pushf pushw or inc cmp les rolb lods inc pushf pushf shl inc or inc ds ljmp incl leave add jbe fnstcw jno cmpsb push push pop in jge outsb popa mov sbb out add ljmp dec loop push mov cwtl fimull add xchg dec aaa sbb sub lods lock jl cmp jbe cmp das and cmp cmc fs call push pop loope push pushf and mov xchg cltd sti and icebp in dec add cmpl add lret push or inc fcomps or jg adc je loop push into jg push (bad) xor jno add (bad) (bad) jge ret mov adc cli mov and iret leave add dec add pop mov xor push fisubl fnstcw movsb movl pusha jg dec or sti sti mov xor jmp pop fwait movsb dec and xlat sbb sbbl adc and stos fild mov testb or subl sub testl incl inc push (bad) mov incl push (bad) nop bound mov add push jns add xor insb subl pusha inc sbb push js bound inc bound mov sub adc addr16 int hlt dec adc hlt or out pop repnz mov fdivl mov gs insl inc dec rcrb (bad) mov or into pop (bad) in inc or rolb inc jecxz repnz popa add dec clc ret jmp addl fdivs fstps add jl ljmp xchg nop xor and push and inc mov cmp pop in fsub pop shrl and xchg jnp sbb inc frstor repz add jmp push mov jbe mov sti shlb inc aas lds fbld mov aad adc fwait dec sub sbb adc mov or fnsave in inc repz flds jecxz lcall or insb jmp imull add (bad) push push call add push imul jle sbb orl inc lods jbe icebp cli repnz mov mov sbb cmp std rcrb leave and push imulb fiaddl inc lcall inc adc adc pop enter or lret xchg add pusha loope iret inc sbb xor in loope push pop and xor iret jmp je mov pusha add adc add mov xor clc mov addr16 xchg pop push adc leave add add test adc add cltd leave push mov subl jae add xchg lcall icebp or push sbb cmp sbb push mov adc fwait outsl xor out jo inc outsb mov pusha fwait push fldl mov call inc subl add shl sub (bad) clc mov sti mov in inc inc test aad push mov and arpl aaa hlt and and sarl ja jge mov add xchg mov xor push das fiaddl imul pop jne push out dec icebp ss mov add add in inc mov arpl add push cs push mov cmpsl mov add add dec dec loopne lods pop adc subb out sub lods dec lcall add jno hlt adc add cmp push mov jns or push clc fs jle sub inc lea sbb movsb fnsetpm(287 sub aaa pop loope jb je aad ret and mov fiaddl add insl jns mov sbb repnz xchg fs cmp icebp inc xchg pop movl xor mov stos and stos jg out aam rol mov dec xchg or add pop sbb movsl orb int3 addl stos pop xor rcll lcall repnz fstl test xorb add inc fistpl sarb mov lods or into push in push jmp stos or push iret pop leave add cmpsb lods mov sbb test in cmpsb cwtl outsb repnz aas xchg sub (bad) xor or outsb sub inc mov add jmp pop test push push cli lea cmp shll jg (bad) cmp push sbb mov inc pop mov push add rolb imul add mov adcl gs adc adc in orl in mov cmpsl fs sub scas pusha xor inc push rcrl jns sbb xchg push scas dec add and push jo jnp cltd icebp inc popf pop stos adc clc addr16 xchg or add and pop loope out arpl (bad) mov xor adc out mov inc mov mov cmp flds out repnz jmp mov fnstsw xor inc xchg and sbb jmp cmp xchg cmova xor cmp inc (bad) sbb adc imul orb aam fadd cmp add mov ret sbb xor je mov xchg ret add jmp xorb inc xchg sub (bad) imul mov movsl mov or out loop (bad) or ficoml cmp (bad) test ds dec les push pop lds je dec loop pop or inc mov lahf jb insb insl out adc ffreep scas mov mov dec lahf aas push push xchg mov jmp shrb incl adc scas loopne out or arpl addr16 pop mov into hlt sarb and and adc xor cmpsl or addr16 (bad) rolb call lret adc jg (bad) push jno add cmp loopne add sub xchg cli scas lds shr aam adc cmp insl aad push inc lcall add lods idivl inc xchg es in inc int in test es add aas mov rcll jmp mov in cmpl mov sbb mov mov popf ret out paddb (bad) xchg arpl repnz lea mov xor idivl out mov ja movsl jecxz arpl inc lcall mov stc mov (bad) and sub in inc sbb sbb lods insl pop nop push mov subl popf push or fbstp xorl adc jp scas xor and fistpll xchg push or and inc pop popl icebp jb test mov shlb and jmp js in cmp fwait incl adc push (bad) jo xchg dec cmp add fiaddl rclb sbb call pop int add jne (bad) or pusha jb xorl lret jns cmp pop adc loope mov jge or and roll (bad) insl and fisubrl or inc cmp cmp test pop insl (bad) push adc push cmp sub insl and inc les jns pop dec sub cmp cmp in rcl sub xchg into fisttpl sub in imul add sar iret leave pop lods cmpsb cmp mov pop ljmp and push stos mov xor popf mov jecxz add jmp cmp int sarl js je mov orb cmp dec and test xchg add lahf pop adc rorb xlat out inc out pop ss jae mov add out enter dec std out cmp dec dec out jbe imul sarb call icebp inc loopne (bad) push cmpsl push std cwtl es hlt pop and aad cli push push es cmp ja lret add insl inc xor mov dec jp jg adc mov mov sarb outsb es pop bound mov and mov (bad) pop and rcr mov sarl inc push (bad) les inc mov jnp xor jae cmpsb daa lretw clc mov mov imul push xlat cwtl and mov sub inc cmp jo mov inc (bad) popa outsb repnz test ja pop stos negb mov pushf das fadds xlat sbb and xor push dec sub lods add fwait jb (bad) xchg aam mov out and mov mov cmc and or push adc enter dec xor mov xchg inc fnop mov insb cmp (bad) jg jp ret movsb and dec jb adc adc in jae mov rcll flds les pop repnz fiadd insl pop test mov mov int sub sbb lcall xor jge das lock push xor (bad) sub cld inc aam bnd sbb dec outsb sbb movsb dec sub mov aam and push hlt mov adc jo stc loope daa in fstpl fdivp out pop mov into sti mov ret lods pop test leave clc mov clc dec jno jl bound les es aaa in and and out or mov and bound xor mov in adc mov in push add jl int3 mov int3 fnop fldl mov (bad) fildll pop pop popf mov and push adc cmpsl out inc mov enter shrb and lret and xor mov shll fidivr adc lods push int3 dec rcrb cli addr16 push jnp and xchg add jno cmpsb sti arpl mov cmp xor mov addl stos sbbl int3 test push or mov lea int push cmp inc adc loop sti addr16 sar insl rol clc and inc cld push adc je fldenv push push sub inc rorb cmp sub sti mov outsb in cmpsl pop mov add xchg adc in and inc fidivr mov popf mov mov jmp test inc sub add andl je jbe sub je shrl sub shl xor and xchg xor cmp fisubr int test jp dec sub mov cmp cltd jo hlt or push jbe fstl mov sti ret fcoms arpl mov cmp add jle outsl loop push out inc adc (bad) popa mov cmp mov jp movb add xchg ficompl mov add out test ljmp xchg mov inc or movsl lock inc (bad) jmp adc adc inc xor ja and sti test cwtl ja or popa (bad) lock adc repz or sub movsl call imul add dec cmp cli in inc or popf movl repnz push or cld push mov fimull jg out cwtl xor (bad) xchg xor cmp or into mov add pop dec dec cmp sub fwait fwait xchg mov ret jp mov push lret fldl orl push mov inc mov or cli nop pusha mov adc lods sahf dec les mov ljmp stos push xor jge and std sbb dec aaa dec ds jb idivb jp sub mov out mov and mov add mov int jne mov (bad) enter xor popa add js fldl push clc jne sbb and jmp adc sbb cmp inc and xlat js mov jns (bad) dec arpl jns pop jmp cmp addr16 packuswb and adc adc faddl cs push (bad) fimul sbb shlb jae cmp xchg mov in dec mov arpl (bad) int ds push adc sbb xor mov les jl jmp add pop cmp movsl cmpsl adc xor roll sbb daa xchg (bad) xor push sub mov add pop cs test pop push sbb loope push xchg adc mov mov inc cld push ror incl loope inc push (bad) out imul and leave inc push inc adc pop push push cmp (bad) imul jnp out add add adc incl pcmpgtw or inc jne sbb mov xchg sti idiv rorb icebp pusha outsb sub or mov cld cmp sbb ljmp outsl int3 mov inc dec or mov subl inc lods and cmpb pop adc ss inc pop loope inc jmpw or shrb add push adc mov adcl pop mov jp cwtl loop aaa inc pop call lods and push int sbb adc std sarb jnp cmp iret cbtw jae in mov dec (bad) mov push inc in fwait mov imul cmpb ds adc fmul shrl cmc push pop mov sbb xor (bad) xchg push insl pop sub popf (bad) mov add (bad) cmp push sbb cli dec lock xchg and inc adc pop ja cmp insb addb movsl into bound or lret lcall sbb dec lret loop loope in add ds cmp lcall inc imul jle cmp pusha xchg add xchg sbb es xchg subb sarl cwtl mov and shll insb movsb rorb or daa btr lahf unpcklps mov imul stos push jns mov xlat mov xor jle in in inc fisubl mov jl or and in (bad) bound jge cwtl pop test jge mov (bad) into aam push pushw xor xor pop out jae aam fsub adc mov pop sub or push pop push pop mov insb fadds and adc divl icebp std lahf data16 pushf test inc dec xchg cmp add and cltd repz lcall frstor add shr cmp mov sbb divb add int3 mov jge xchg or (bad) aam repz aas mov ret or sbbb or mov xchg movntps jne pop iret sub clc and add inc mov les inc mov loopne,pn cmpsl cltd and mov sbb fistl or cltd in bound fwait aas adc fcoml jnp push test dec lock xchg sbb sbb add adc sub jo (bad) sbb lcall in xchg push push js ret mov loope mov pop ljmp outsb push xchg xor jle cmp repz jmp adc sbb adc push xchg push scas cmp dec pop sahf jo or push sub pop mov cmpsl out int3 roll or mov mov into mov das faddl sti (bad) xchg rcpps cmp incl or and fwait cmpsl inc jecxz sti scas sbb xor xchg scas data16 dec jnp sbb pop pop push aaa dec lds mov add (bad) xor pminsw mov and mov repz js mov (bad) xchg test out jno clc mov inc and daa jo pop lahf movsl xchg or into (bad) jno rorb inc (bad) jl jb push push pop or and (bad) lea ds push fisttpl sub inc loopne aas rcll divb add sbb add jae cs roll movb pusha inc iret cs cmp mov daa mov ss xor or jl cmp (bad) xor inc xlat aaa adc xor inc push call add and adc insl icebp push aas inc add jmp fistpl movsb in insb xor scas (bad) insl or push popa lahf lds je in std movsb repnz aas mov (bad) mov sbb cs les std mov and mov inc pop mov sbb aas or aaa inc mov sti mov pusha sar adc fucomp sbb pop sarb cmc add mov sbb add pop sbb and (bad) mov xor xchg adc aad jecxz or adc pop sbb mov ficompl aam jg fnstenv xchg movsl (bad) push enter mov jle inc aad mov add aas push push loop sub or xchg mov divb inc jbe and test sbb xor dec sbb xor (bad) nop loopw pop dec subl in lea sbb push adc imul pop jbe mov mov dec hlt jne pop dec pop inc int mov push int sbb push pop ja pop cltd cmpsb aaa or es cmp out in stc xor adc cmp pusha pop roll mov dec ds xor dec add xor adc dec add fsubl ja stos xchg sub mov cmc inc dec push (bad) jle pop in adc cmp pop ds adc daa jl add push jle cli adc jno imul mov adc push leave in inc jle jge sbb (bad) pop inc jecxz inc pop mov les lret out adc or in inc (bad) pushf push push pop add inc std sbb mov adc imul cmp rorb adc adc popa mov mov inc xchg or mov (bad) loope or cmpsb sbb lcall scas cs mov adc jno sub rcrl and push push push pinsrw (bad) cmc fadds inc jecxz (bad) cmpb mov cmp lret mov add xchg dec clc aad add sbbl sar int es mov jmp (bad) dec and (bad) sbb sbb pushfw jne add insb pop cmp mov fs pusha sbbb out inc movsb mov and xchg sbb add push adcl pop mov in mov xchg fistpll jne sbb insb inc mov jne jb or shrd dec dec cmp (bad) add (bad) das mov cli pop popa add stc lahf inc or push dec fld fiadd lods push and and sarb pop clc cmpsl jo iret add subb and mov popa add test daa popa mov xor xchg and xor ret add addr16 sub fldt push adc imul cwtl repnz call loop stos inc pop add cmp mov jmp emms repnz jbe pusha ds jecxz insl sbb fsubrp dec cmp pop sar pcmpgtb mov or fdivl mov mov test jo mov jmp inc jmp ret lcall (bad) or sub pop add adc sub and mov push popa ljmp cmp cmp into ss ja je mov push stc or push dec sub sbb cmp outsb xchg cmp in fild (bad) shrl jp fwait dec arpl xchg or fldl mov cld shrb pop cmpsl jne adc mov sbb les fsubs add icebp pop cmp icebp inc insb add xor push stos add (bad) call inc xchg or inc int ficompl pop imul sbb mov adc xchg adc stc out inc ljmp or fsubrs cmp jge cmp and mov insl rolb or sub fwait rolb and xor dec orl cmp (bad) icebp incl or movsl in jl fstl mov (bad) mov push pushf xor repnz sub pop dec mov mov enter mov mov lret jno mov je pop lds cmp (bad) in jle pop jmp fsub sbb cmpsl inc jns pop repz and inc nop lret sub push test and add test xor add xchg xorl orl mov es aaa push mov jmp mov divb int sti adc xor mov add and sbb or nop cmp pcmpgtw (bad) mov sbb cmp jnp out insb mov add cwtl loope jbe add sti and xor ss jecxz mov sbb xorl imul mov fwait nop and mov roll mov or add dec mov mov (bad) adc loop mov add test repz and outsb insl add cmp cmp mov push xchg push adc cmpl sahf psubusw push insl into cmp sti sub lahf sarb jnp jg push pop dec xlat push incl aad aad aam (bad) xor pop faddl add pop dec add pop push fucomi subb push cmp loopne rcl popf out ret mov fimul dec imul pop and (bad) adc add xor in pop jae mov add jne push ds and mov into fdivrs sbb cs js,pt inc out push adc loopne neg add add (bad) mov sbb and lock jl jns add jp pop and icebp pop mov mov repz push fcmovbe xlat popa ljmp or mov (bad) xchg push rol push loope mov and jns mov add push lods daa or loop js xor mov inc incl or jne jle inc scas (bad) xor cmp add jmp pop sbb xor inc roll cmp push sbb scas imul cmp cwtl inc push mov inc dec cmp push movsl cmp push and mov (bad) mulb mov lret out or jp inc pop dec arpl loop pop fsubp pop movsb push cmc data16 mov outsl mov stos xor jmp inc cmp and or (bad) aad fcmovbe adc push pop incl in xor add (bad) fxch jecxz js call dec xchg and jae cli and and or xchg sbb inc ljmp dec pop (bad) or mov test mov aaa inc push mov jp inc je inc ss jno in out or std jmp or bound jae js divl jmp mov fisubr loop (bad) int3 inc mov adc xlat pop stos mov sti jb pop data16 in mov pop int imul jns mov sbbb mov ljmp push jae cmp mov lds insl outsb aaa inc popf xor aad and leave add int fucomi push aas and sbb pop mov jno ficompl adc mov rcll out inc pop clc jg ja ja addps sub xor push inc cmpsl push test pusha fwait xchg shl or sub into lock movb dec or fildl inc inc (bad) push pop cmpsb and jg unpcklps repz mov call and cmp addl sbb mov scas sbb push and int fcmovnb add sbb mov xlat xor stc dec sti outsb (bad) nop rcrb stc xchg mov (bad) rorb femms test add aad aas inc or daa pop mov adc (bad) fidivl pop push pop sbb scas push pushf int sbb sbb movsb add inc loope inc popa mov call pop adc push in js and shlb mov orb inc lret push imul xor jne dec ss add stc and sbb xor sub fldt cmp (bad) xchg add testw cmp mov add sbb clc enter sti push popf dec stos repnz xchg adc addl popf loop mov jl mov mov arpl sub out into or mov push mov or out setp xor add (bad) push sub or xchg fadds push or fisubrl cwtl in inc inc fist scas in jg adc xor xchg in cmp or and fstps jp jo inc scas sbb dec mov js cmc fnstcw arpl push cmp xchg mov add (bad) xchg (bad) into pop mov loopne sub (bad) adc test lods and fnstenv je jb ds and add loop push lret inc sbb (bad) adc loop inc and out test gs repz and cmp xor les jns add xor xor das cmp push imul ss arpl lock mov cmpsb loop iret frstor jg add ficomp add setp jns pop ja add into sub scas fsubs mov fmull (bad) loop mov mov pop push mov push aas js inc es adc adc pushf daa cli scas orb or out rorb inc or cltd push lods xor nop xor stc lret or push sbbb fs mov fiaddl fiadd mull jo (bad) sti (bad) scas sbbb xorl loop,pt xor add dec repz xchg into sbb jl pop pop xchg imul mov sub mov fimul je (bad) sub jns hlt lods (bad) xchg sub mov jmp rcl mov mov sub and pop cmp pusha xor inc icebp inc nop and mov mov and jb ret shll loop jnp in les lods mov or mov aaa mov mov mov add adc dec bound add in sbb mov subb subl lsl inc daa stos jnp nop add les adc mov add add aaa jno push mov div ds sub cmp pop fistp adc or inc dec xor ss cs movsl pop push jne inc lret mov mov mov push mov (bad) rolb popa repz (bad) or inc adc mov mov hlt fisubr xor or push test dec fpatan inc dec and xor push je add mov mov stos mov sub dec dec and jb push xorl mulb xlat inc inc rcrl dec sti push adc fimul mov add es (bad) push pop fisub ljmp jg inc andb fbstp stc jb inc add mov (bad) lcall insb imul sub adc adc ds inc adc ja dec dec mov push (bad) negb aas mov jmp xchg or jp inc or pushf dec mov add mov add arpl fadds push mov inc sub dec inc ljmp out push lret mov push (bad) mov in and icebp or mov jnp test inc mov faddl add jbe xchg inc dec pushf pop mov add (bad) int mov fs insl imul pop add mov mov push outsb call adc pushf in jne cwtl ja xchg push call inc inc rolb pop and jbe mov mov (bad) mov fadds pop or add adc enter cmp add ficomp cmp cmp cmpb insl inc mov imul je and das mov enter enter cmp or inc out arpl push xor pop stc orl lcall movsb in out add jo cmp repz (bad) aam cmp arpl jg inc movsb ss negl dec and dec aaa inc (bad) out adc int (bad) repz aas sub xor inc pusha clc sub ret test je loop or fmulp lds mov add and fiadd js stc and xchg (bad) repz push xorl pop sti loope test cmp (bad) (bad) pop mov mov imul xchg les and adc fcomps pop mov mov clc pop sbb fisubl add les fiaddl popa push add subb aas test out inc jge jle inc in inc cmp mov sti mov ss mov bound jnp into negl test incl je dec out sbb or mov add xchg mov lea jge mov incl cmp jmp mov mov es push out and jnp stc jp mov notb ja fidivl incl inc mov gs and xor arpl mov fisubrl jae cmp mov add jge dec inc mov pop mov (bad) arpl fwait xchg repz sbb aas je fldl jae,pt (bad) fsub and dec stos sbb add jle sub lcall dec and popa fcmovnbe jns or ds xchg out inc sub popa imul pushf nop dec dec pop into (bad) stc test leave pop stos mov jbe cltd out dec outsb xchg je xchg jle inc pop (bad) sbb call push int cwtl icebp test out push mov ror gs aad (bad) popa jo jmp cmovnp in int enter ss add mov add inc push fisttp in mov jp or jecxz cld nop aas inc push jle fcoml movsb and fsincos and pop xlat or int adcl dec adc in sub scas btr sbb fucomi jbe jne out jbe arpl movsl (bad) shr stos fwait add push pusha cmp hlt adc psubusw jg mov bndstx les cmp sarl add jg jnp pop (bad) jae and das dec fnop and push pop lods lods cmp or pavgb ret adc inc in js pop sbb pop rclb or add and push popf or ja mov push mov mov jecxz das std mov cmpsb mov adc sti arpl sbb pusha mov xor (bad) jg inc cli push mov lea ret mov inc lcall sub (bad) or cmp xchg fmul or mov inc and mulb popf cmp inc xchg adc ret sbb (bad) adc cmp and ret dec cld out hlt mov rorb and cmp inc test add out std shlb xchg lret jbe fisttpll inc aaa dec xchg xchg fiaddl sub xchg ja jg add cmpsl xchg sti xor scas dec loope imul inc push mov xchg jle or add adc divl sbb sbb je out push pop loope fwait pop jno add das adc inc fwait sbb sbb inc mov ss cld shrb xlat or call mov stc mov inc xlat js and dec stc add fs push dec pop mov insl inc mov arpl dec cmovle insl fiadd sbb dec mov or adc mov (bad) inc add frstor push outsl mov sbb jns jnp js xchg add add or test jae lret std push push rolb stos aaa mov jb shr pop test jg cmovb scas cmp imul das lcall loopne fdiv adc inc xchg sbb outsl or inc pshufw rclb loopne sub pop cmp insb subb push ret loop fstps ljmp mov sbb ss mov push sub in add idivb pop pop xchg mov nop adc add roll sbb adc or mov lods xchg mov mov jecxz mov sub xor testl andl sbb scas jge out pop hlt cmp (bad) (bad) cmp mov add out sbb add (bad) jge push mov cmc jb movsl flds cs cmp in mov push inc push test stos or test stc lcall inc sbb add mov flds sahf mov cltd iret mov jnp inc or add push cmp add int3 and aam pop stos cmp dec insb and (bad) push dec testb stc mov and xchg pop mov stos int out sub adc enter sar fistpll (bad) sbb dec cld mov lcall xchg push jae mov xorb xlat mov sbb (bad) mov pop pop jbe or imul pop popf add daa adc insl (bad) arpl inc je imul lcall loop loopne xchg pop inc mov mov shrb mov data16 inc stc sahf and jbe fldl cmp add cmpsb cmp or or inc mov cmpb mov int3 jbe int3 mov push add jmp lret imul jb add es out lock ds sbb (bad) or mov pop fild outsb test subl fbstp xchg incl sub in sub popf ret mov (bad) jo loopne mov jo mov call aad aaa (bad) in xor mov add sbb sub mov sbb cmp fs scas mov sub sarl (bad) out pop cltd adc xchg sarl orl std adc lret roll enter add jecxz xchg inc push jae jae dec ss push out xchg or adc push imul adc int3 jge mov ficom add push das lods orl nop sbb xor mov pop popa add cs or test outsb hlt inc sub inc mov inc push or mov mov test xchg ret gs mov cmp cs jecxz or test shlb add rcrb mov xchg pop push mov rolb xchg add test neg mov pop and icebp xchg or (bad) cmc inc int call aaa inc add scas inc test in inc inc mov inc inc adc popa mov add xor push and mov add flds mov rorl pop mov cmp and sti and push mull mov and or sub add lds xor call cmp inc stc sbb push mov add add xor ret add inc fisubrl jb je jecxz out sbbb jle bound sbb mov inc inc in sub in int3 popf mov inc (bad) faddl flds popf pusha xlat gs xor and movsb mov push aam pop pop add les mov add pop inc dec sbb out cmpsl aaa jp pop clc dec jbe pop and (bad) je xorl adc mov and push jnp sbb frstor movb aam in aas in and arpl push ds pushf dec in pushf and push push cld clc or pop or sub (bad) stos (bad) enter mov push and cwtl repz inc test icebp and insb fwait icebp les outsb (bad) add jb xchg add xchg xchg adc jb pop xor leave add jo jge repz aad push out sbb and lods adc je adc lea adc je sbb outsl inc into cs sub in inc mov mov push mov ret outsb sub push pop add mov sti sar aaa or push aad call bound enter (bad) xchg push cmp add orl dec lds push or jbe std shrb dec clc dec in pop add jne pop in clc and mov (bad) repz fimull rcrb aaa mov hlt sbb push aas xchg addr16 ljmp jbe mov jnp pop add aam mov fwait js or jno mov pushf xlat xor sub inc pop popa mov scas inc imul and repnz inc test hlt movsb mov out xor enter js in sahf rclb or insl mov mov fsubl incl xchg psadbw loope and aas lds and or cmp dec ret dec idivb xchg and push or sbb cmp sti push adc jns insl movsb jb and bound ret xor ljmp rolb ret cmp add (bad) xlat data16 push out or xorb in inc fisubl imul mov jp push cmpsb inc xchg rorb adc popa and xor add sub movsb jne insb int lods mov frstor les repz mov cmp faddl lcall fsubl adc iret mov fwait fwait xor pop popa aad (bad) pop movsl mov and out xchg adc mov push mov push aad pop std pop lock cmp pop mov sbb (bad) fdivr adc scas sbb test sbb jp es fidivrl sbb popa jae xchg mov add cmp dec es cmp xchg inc add sbb int3 and (bad) adcl or xor push or movsb sbb sbb push fistpll mov stc and test lods test cmp fiaddl jmp push in call jl cmpsl push dec call mov cwtl incl ss out pop add xchg ror jmp push shl xor xchg shlb cwtl add pop idivl add dec cwtl dec add mov adc loope jnp inc pop sahf call sub fdivs repnz push das je xchg push xchg in fsubs aam cwtl outsb xchg pop ds mov push rcrb xor fldenv daa mov adc pop xchg in xchg dec movsb in stc and sbb ret repz cmpsb push lea adc aaa mov xchg iret (bad) repnz test jecxz nop sbbb mov in movsb cmp add mov mov adc xchg popa lret cmc ss pop inc add sbb adc cmp (bad) lods sbb enter sbb xor stos jne ss mov or ja jecxz adc (bad) mov lods gs icebp int3 mov xor adc push repz aas clc jae aas icebp adc add mov (bad) notb xor insb inc rcrb adc cmpsb dec mov outsl or dec jge cmp xor ja push sbbl adc mov mov repnz xchg pop call lcall ja cmpsb loope xor call out pop cmp popa mov pop dec ret dec and out mov cmp sbb in mov and jmp pop jnp stc xor popa pop mov fnstsw pusha dec es imul adc dec repnz lea loope xchg and lret add jne jle sbb mov fisttpl and nop xchg sbb jecxz xchg cmp inc xchg hlt or ficomp roll loop push mov cmp dec inc cmp outsb fyl2xp1 and lods sub cmp sti popa add pop pop cmp mov mov insb out xor mov jmp pop and mov pop push pop (bad) loopne faddl insb sbb push call (bad) mov adc add imul add subl pslld insb or loop adc jne cli xlat sub push xor clc lcall insl push push mov repnz push fs xor xchg push cmp add orl and mov mov mov fldenv iret testl mov pop mov jbe pop and jg stc mov cs cltd fwait jno,pt add inc (bad) in pop out dec and sbb add roll fimul push cli sub insb in and lds xor dec int dec stc in inc mov and cmpsl inc imul imul cmp nop xchg mov add and mov and incl or insl mov cmp dec or icebp add pop and mov inc rorb idivb cmp sub mov jecxz push rcll ficom or sbb sub inc rol or mov or pop or outsb fiaddl arpl scas add cmp in sub mov sbb sbb lds roll (bad) jg cmc fiaddl popa ja add int inc xchg outsb and and out inc lcall jnp rcr addl sbb je movsb cmovo int pop mov sbb adc (bad) in ret bound pop cmp pop xchg int fldenv mov or mov xchg mov and (bad) cmc inc int call daa inc pop jno mov mov mov add rolb add sbb push sub push jbe,pn ja or jb inc sub mull jae dec push leave inc xchg add test jbe mov cld nop dec mov sbb mov sbb sbb addl xor (bad) cli and out xor adc loop mov xchg inc shlb ret outsl out addb fildl sarl adc adc nop jne pop push inc js push sub adc (bad) jae inc ss xchg pop mov push (bad) xor cli cli or xchg pusha mov ljmp and mov xchg ret or inc roll jne inc push pop adc adc (bad) push adc sub mov push je (bad) les push add fidivrl mov inc inc push adc adcb pusha aaa out sbbl mov push add stos cmp fiadd leave inc int inc cs jle or or sti mov push pop dec popf pop loope test xchg mov and hlt mov jp ljmp mov enter sbb mov fwait popa je jnp mov mov or test xor incl pop nop cmp mov lods (bad) aam pop ficomp jmp cmp call mov inc adc xor loop jno and enter mov adc arpl arpl mov xor xchg or subb cmp lcall dec add or sbb popa lret mov sub movsl mov in faddl cs push (bad) in push aad jge xor sbb push add iret lds cmp test fiadd adc jae or jno jp,pt jl aas inc jo lods xchg aas xor jno pusha insb adc push icebp mov inc cltd jns and mov cmp and mov jmp incl test in aaa push test push jne in xor pop mov and mov pop sbb push xor dec fsubp fisttpll sub xorl xchg jle (bad) call xor jne dec pop sbb scas insl std dec sub stos mov nop adc out movsb bsf (bad) push adc daa mov bound out das cmp repnz push jmp arpl (bad) add mov dec pop out out sub sbb imul nop daa fimull pushf in lock mov xchg add outsb lock sub jmp mulb mov sbb jno popa outsb flds jo inc shrb mov (bad) popa pop ret lcall (bad) movsb or or outsb sbb lods adcl jae inc xchg xchg pop lcall out lock inc fcmovu mov inc lea imul je popf pusha data16 hlt inc lods cmp jbe inc orb add mov sar mov int test jne xor movl aaa decb shlb push les movsb cltd out jge gs sbb arpl mov lcall sbb leave add test jae jb faddl jmp jle add jbe xchg add outsb sub push pop insb (bad) sbb mov aas fcoml aas fisubrl xor std and (bad) aas xchg and fimull or mov add testb bound leave (bad) sbb jle add dec inc xor inc daa sub push (bad) out push (bad) test les mov adc mov enter adc loope cmp mov jns cmpl inc adc sbbl repnz xor in imul mov stos or dec shr popf cld rolb add and xchg cwtl jo outsb lock adcl add call incl lds cmpsl mov xchg xchg sbb jne add inc xabort or rolb mov jns fildl ret push jp mov mov mov and xor add adcl jb push cs inc fisubrl xchg mov incl jne popa int3 cmpsl and subl (bad) adc and notl add popa sbb dec in inc xchg jge,pn imul jp xor cmp or mov cmpsl sbb ja push shrl cmp outsl sub aad xchg jne inc mov or aaa pop mov cmc sbb mov pusha gs rolb fcoml add adc mov clc sets pop or pusha cwtl insl add mov insl ja adc push mov (bad) or sbb lahf flds test iret sub outsl inc ss and sub test ja add (bad) pop push adc pusha fiadd jbe sub lock mov pop int xor pusha call nopl or mov es or add mov or xor loop mov iret adc inc sbbl loopne (bad) ja or sbb xchg pop adc sub and mov mov loope xchg xchg dec cmp add fxch add orb fwait shrb push mov leave add (bad) in mov (bad) or or push push mov pop xchg or es xchg jo (bad) rolb xchg (bad) adc xchg orl stos aad dec (bad) and add aam mov mov lahf int3 add push stos mov rcrb pop (bad) jno or and mov mov jns cwtl xchg mov mov (bad) lea nop js pushf and and rcrl andl pop mov jle and daa dec incl in mov cs lahf pusha out rolb popf mov add ret sarl (bad) xor (bad) lea or mov push lea mov ss mov sub ljmp push push insb dec es jb mov mov incl mov mov push mov add nop out lea dec repnz mov bound sub jmp nop cs adc xchg shrl in xchg or lods lock cmp movb pop dec mov ficompl mov or or push mov push je xor push sbb out and lsl adc inc mov pop (bad) int3 cmp mov push sbb sub sub std nop adc ljmp lret mov lcall jns cmove lods mov jmp (bad) push dec movsb or or xchg (bad) push addr16 add mov mov punpckhbw or cli aas je (bad) lret lret repz mov mov mov aam ffree jg add sbb mov jle adc push arpl mov mov add dec jb cli popa ret jmp xchg in push cmpsb add jp add lock adc and push insb mov inc lret insl nop dec mov inc cmp out fidiv mov lahf adc dec stos or setg xorl sbb or jne fbstp inc jnp jno cmp jno lock repnz push add unpcklps fcompl sahf mov lds jmp aas lret mov bswap add inc cmpsl and movsl mov add add loope in je test jg add cmp out and jb mov mov icebp pop int3 and adc push pop lea outsl daa leave add dec inc addr16 repnz adc incl or ret and pop ror push fldenv arpl mov mov in (bad) mov and pusha cmp fiaddl loop sbbl sahf in rorb and cli fs into adc sarb push cmp bound test pop leave add add cmp or xchg inc cltd sbb fidivr and adc rolb xor movsl add into mov xchg outsb mov add mov add add cld cmp js inc jge subb fldl add mov out adc cmp in movb sub cmp mov mov xor add mov add scas (bad) les mov scas cmc jns inc frstor mov mov inc scas jo daa orb sub lret mov inc lret mov add test or add pop and lods pop cmp outsl ret or xor jnp scas hlt mov push test nop cmp popa cmp out jmp push mov js push sbb add jb mov push xlat and lahf scas in inc mov int3 stc and int3 or data16 fsubs repnz xchg add dec add rolb adc mov adc pushf (bad) add outsb sub mov out andl rcr sbbl inc xchg sbb jmp sarb xor or je push int test xorl pushf cmp aam (bad) (bad) pop lock inc cmp stos sbb lret or inc stos (bad) mov jp pusha jnp lds push mov hlt inc xor inc lods (bad) je addr16 lods loope mov fwait (bad) push inc inc xchg es std jb stos dec divl popw ljmp sarb pop cmpsb fnstsw and (bad) mov inc iret pop sar push push shrb pusha rcl jbe push sub push mov cmp fucomp sbb aam mov xchg xchg aas cmpsl leave pop push xchg daa pmaddwd mov xor ss add sbbb pop ja loop mov xor negb enter lcall xchg cld mov data16 cmp push push loope aaa incl aad test jp add jl inc (bad) ret lahf jb fwait repnz push xor (bad) dec add xor call bound and sbb arpl or mov or mov and add push (bad) and mov sbb (bad) sti (bad) out (bad) ja loope pop cwtl loop xor (bad) les bound je movsb jo adc enter adc xchg or fiaddl pop enter or or imul or inc rcrb in dec mull and cmp mov jns push aam xor mov sbb mov jmp stos push aaa pop xchg pop mov aas out inc ss or popf pop inc add rolb mov sub sub aas xchg add or mov add in ret call and sysenter sbb sbb jae push and testb aaa mov mov enter scas imul clc pop jmp cli aaa or cmp das dec jbe sbb xor (bad) divb pop dec popf inc add mov inc lcall or push stc ret fiaddl in ja push add movsb (bad) xor out mov cwtl push scas or fcmovu or fsubrl xor in push nopl mov push dec lret outsb cld dec add mov mov pop test fisub test fldl movsl int loop xchg test sbb push call adc (bad) orl cltd inc fstl inc or push sbb fnsave pop fs sbb push insb arpl scas out inc call aas jbe aas cld inc xchg out or incl ret les das push dec nop sub arpl ret clc jae lahf adc push inc int sbb (bad) xchg push rorb inc push es xor sub mov or nop pop int3 cmp cli out inc out and in sub inc lods into xchg les jbe loopne adc scas adc sahf pop push push jle popa cmp cwtl pop call cld arpl or cld outsb pop mov sbb mov pop in push or pop adc sti xor xchg loope and xor and mov addr16 call jne and inc scas and or mov fsub jnp inc dec mov pop adc jbe xchg roll adc cwtl mov lock fcoml and pop pop cmp shr imul pop mov inc out sarl xchg loop (bad) xchg mov lahf push push jbe xlat stos in cmc pusha outsb fcoms jp sbb out and cmp xor push xchg arpl xor test stc lods outsl in inc ss cld jle stos jmp roll cltd mov (bad) sbb out inc add and imul adc pop adc adcl mov aam (bad) pop xor mov ficompl insb cli and daa stos inc in cmp push mov (bad) out and jl cmp xchg scas clc inc dec jno dec popf push and ja adc cmc aas test fbstp xorb jae fisttpll ret iret outsl xchg or adc cmpsb xlat mov mov mov inc iret insb dec mov das cld xor lahf enter testl mov jge lods or fstpt cmpsb out cwtl adc pop rolb push (bad) mov jmp into les inc dec outsb mov push int sub sub add (bad) loop int3 rorb add pop mov ja mov xor stos repnz mov jle dec in push push sub into xorl mov idivb fimull in (bad) outsl bound and imul call (bad) in addl jg add jnp pushf (bad) clc (bad) add dec adc sbb fdivrl mov sub nop addr16 and daa push cs pop roll sbb loop mov mov data16 or xchg fnstcw mov incl je pop (bad) mov push xlat ss testl lods (bad) lahf adc aam ret ljmp in xchg pop pop arpl and mov push lret jmp mov inc sub fs lret sub mov ret andb cs ja mov les enter test inc cmp (bad) jl fimul dec data16 enterw pop fisttpl cmp add inc push xchg inc iret cmc ljmp ljmp add mull fwait dec adc in cmp sbb (bad) jae aas fs pop mov xor repnz inc ljmp daa sti jo and shlb xlat add add xorl mov push rcl mov aaa cmp es cmp notb and mov inc in pop sbb ret mov imul add inc ljmp mov es mov mov push in fimull sbb (bad) add add cmp cmpl adc pminub or push in push dec in fstpt xchg push test xor jecxz add mov shlb mov (bad) les imul mov enter iret mov je rolb fcmovnb call je push sbb les xor out lahf xor inc aam jle push or pop inc lea jmp or jmp and iret push add add int3 xor fadds hlt or movsb jecxz adc hlt push or inc mov add loop jbe outsb dec out sbb mov inc pop sbb add sub lods mov mov repnz mov es jno or or cltd test in inc xchg popa cmpsb ss cmpl cmp sbb push mov dec insl into inc push movsl jp cmc pop and cltd cmp loop or mov mov sub xchg mov mov loop mov push fs arpl jmp add cmp mov out (bad) pop pop mov es cmp xorl aas aas lock jp add cmp sbb in jmp sub inc or jae subl sub cmpsl cwtl inc lods fnop adc lahf scas in fild out xor arpl sub sbb scas jmp push inc mov cmpb or inc mov adc and cmp in iret mov lret mulb arpl (bad) dec and mov int3 jbe cmpsl inc mov call xor insb inc xor enter repz cli arpl or mov mov pop cs sti and lods hlt inc fbstp mov je jecxz push jne (bad) or push fsub sub cmp in cltd inc cs cmp mov jnp je aaa and orl mov xchg sar pop mov js loop test add sbb or lcall in imul sbb or pop orl add cmp mov sbb sbb fiadd mov sub outsl ret sbb xchg push push mov push sub ret and adc add xchg xor xchg dec add and mov out xorl iret pop test mov lret std pop adc adc dec addl and in cs push inc and mov mov mov popa sarl adc neg add cmpsb in in mov or jno or sbb aam jns sbb pop inc jbe ja pushf add jnp and xchg push rclb xchg cmp lahf in push rcr insb std mov jg aaa adc push inc loopne add or (bad) cmp (bad) (bad) mov cmpsb out int3 movq inc ss data16 inc repnz es pop fs sti aaa les adc das aaa jmp mov mov sti and inc sbb sub in jne push sub sub adc out fdivrl or loop pop jl int jp fisttpl and in sub mov jp (bad) ja dec xor cmp cmp gs pop fdiv aas in inc ljmp xchg mov lahf lods js out push sbb idivb mov push adc lret adc mov inc outsl fsubrl iret xchg stc inc dec pop sbb mov lods outsb lock je jge dec jae add roll (bad) scas std inc and mov in push fmuls inc cli lea testl dec mov jl pop jl inc out xchg or jle fstpl add push or sbbl adc sub pop lods jg sub mov lcall in xor inc sbb mov call sbb sbb inc mov dec mov pop jl bound pop ljmp and in loopne (bad) int mov jb inc mov mov mov dec mov je pop jnp int3 (bad) jecxz add hlt in loop and mov in jns dec icebp or popa inc mov popf nop insb (bad) dec arpl jmp inc out push xchg (bad) adc movl pushf cli lods stc mov sub jbe fnstsw jae cmp rcrl out jg or push lock sbb push pusha push pop mov movsb mov clc mov cli fldl (bad) cmp imul insl ljmp je add repz jle sub mov notl xchg jb hlt std rolb sbb sti push jp je dec push add int repnz cmp adc cmpsb inc cmp pop push pop in jno idiv enter inc movsl mov sahf sarl sub inc cmpsb inc sub loop and cmpl mov sarb ret mov stc mulb mov cmp jmp jbe in bound imul lods nop jne mov scas subl xchg sbb dec and outsb ja or push jge mov int3 and cmovno jle and es lahf clc inc jle mov (bad) rcr outsb sbbl cmp in (bad) cmpsb jo mov and iret push sbb mov imul loope enter hlt pop adc sahf (bad) mov xchg stc and jnp add jecxz repz and enter sbb lcall rcr testl insl faddl ds xor jp loope,pt imul pop sti ret movsb cwtl mov leave stc jb (bad) loopne fimul mov adc enter push (bad) mov inc in loope mov mov xchg xchg cmp addr16 inc ds aaa in lret lahf adc aaa out xor jb mov cmp inc mov jmp mov call mull (bad) dec or in loopne nop hlt xor out add fldl call and jl add ret xor ret stos loop cmp cli mov xlat or rcr add or add push jnp xchg inc mov ja sbb jo jmp mov adc into cmp or in adc mov or imul dec ret mov push and inc (bad) cld jb push pop cmp jg or call add (bad) and movsb outsb sub shrl ret stc in inc and pushf adc pushf mov inc insb popf mov dec clc jp mov xchg adc inc pop add test dec cmp xor repnz mov dec les (bad) xchg es sbb in data16 cmc cwtl ret fisttpl (bad) pop mov repnz int adc xchg xchg cmpsl cli pop jg and adc sbb inc push daa jnp push dec (bad) ss and push fwait repnz xor sbb sti push and in cmp loopne test inc in push test aaa inc adc dec sub inc and jmp les movsb mov (bad) fwait cmc dec sti outsb adc les (bad) inc (bad) pop push fucomip or sahf aam add jle ljmp xchg mov sbb xor rolb adc mov mov in clc mov inc push xchg and add inc dec test push cmpsl xor adcl incl aam dec inc push popf sub add cmp cmp mov cwtl je mov jns add cs ja add pop jo inc js xorl mov andl popf sbb cmpl push fwait mov sbb mov lcall fstl (bad) rcl les lcall fstpl out imul loope repz movups mov loopne mov push hlt mov xchg mov mov test sub sti fcomp addr16 inc add mov ret (bad) adc ss jns adc ds adc xorl adc jp,pt outsb mov push lock cmc sbb xchg iret std inc jle inc pop js and push hlt adc adc push xchg jns (bad) fwait hlt fcmovbe adc mov mov mov pop jle push test fisttp sbb test or pop test aad (bad) stos inc shrb xchg ficoml adc cmp stos cmp in sbbl sbb xorl push mov adc stc inc aam jnp sbb (bad) ret jb xor xor out movb adc adc and jno and or lock int3 push movb int test add xor xor loopne shlb inc faddl (bad) and mov jae add shll mov cmp jns sbb shlb add xchg pusha (bad) xor adc cmp jge add xor nop xor add movsl shlb mov lds stos dec icebp inc dec ret (bad) adc xlat inc mov jo inc pop mov roll stc add add xor push jle fimul sahf ja mov add jne or vmwrite mov pushf jne (bad) lds (bad) je adc enter icebp cmp jle inc mov nop push loopne in jg add cmp cmpsl cmp inc xorb leave pop ds in add mov sbb dec fistpl popf mov mov push dec ret add rclb sub lcall mov mov int3 jl dec movsl cmc mov and out add std pop add mov xor orl and push mov xchg push out mov fldl adc xchg push insb or jl add mov mov pop inc mov nop or add ljmp inc loopne cmp (bad) (bad) xchg dec loopne sbbl js adc lret adc inc add loop in mov sbb into push xlat incl xchg or icebp or in sbb pop and call ja test ror aaa mov jae inc lcall stos jne mov repnz mov xchg or mov or call push adc mov push and add cmc lds sub stos push pop cmp sbb rcrb in subl loop les fsts roll push inc pop or gs lock ja sbb or mov add movsl xchg sbb jle nop and mov aas je pop scas push xchg jnp imul mov xchg hlt push outsb and and mov mov add mov adc rorl jno inc gs test add leave call inc sub push inc pop incl or mov adc mov fiaddl arpl (bad) (bad) lcall fnstenv or add dec add cmpsl cmp mov mov add and or lahf nop inc pop sbbl ds (bad) xor call inc fisubrl ficom mov dec ds mov mov and mov test pop xlat data16 sahf in (bad) mov add js cmpsb stos jno mov adc or add sub call nop xor pop adc (bad) and mov push gs push movsb sbb add out mov add xchg imull fld1 mov jb inc out fsub add rcr iret cld mov fbstp cmp insb leave enter (bad) fldl roll sti dec push rcrb loope hlt and xchg aas lods mov test stos adc cltd outsb aaa loope dec int xchg push roll pop push push arpl or dec sub inc adc sbb cvtps2pd cmpl push fidivl jge or push and (bad) pop jecxz inc and add divb pop mov mov nop inc pop stos notl inc adc cmc test cmp arpl sub mov mov dec and cmp jnp pcmpeqd adc pop mov push sbb pop jg sti and movsb fbstp mov sub shll (bad) lea pop dec mov fbld push dec nop (bad) popf stc mov inc inc lcall mov push aam cwtl aam in (bad) call adc xor inc mov adc scas jle and ret aad push adc xchg lcall or add out les mov mov call mov adc loopne push inc pusha les in jo lock mulb sti lods jo adc mov mov aad pop mov pop xor mov mov cmp cli xor enter xchg mov jp pop (bad) xchg inc sbb add ret bound loop ret clc add cwtl mov test xor or push mov pop cmpsb fs pop int3 enter movl jge dec cmpsl pop inc xorl cltd fadds mov inc loop jp orb mov outsb fstpt mov cwtl loopne loop or mov xor stc and xor add xchg add mov and xchg mov (bad) (bad) push test lea test lahf dec shll clc or (bad) movb jbe (bad) sbb push mov fwait mov xor jne sbb ljmp and push cmp (bad) fisubl inc mov fnstcw std mov mov mov pop in rcr inc or push mov bound xlat xor (bad) or (bad) dec incl mov pop movsl or ret flds mov jge lea jecxz cmp out stos or sub xchg or into icebp aad inc jecxz js test sbbl lods adc out push pusha sbb call inc xor in mov jnp dec xchg inc aas clc jbe push out lds jmp (bad) sbb mov adc nop ret dec mov imul mov adc lahf xchg incl (bad) inc mov popf cs adc lcall into in cmpsb cmp cmp pushf flds sub dec loopne (bad) cmp push outsb sub js mov sub jbe leave add xor mov inc in dec ja push (bad) cli mov mov inc nop lahf mov xor pop jae dec mov aas dec aas sarb bound adc adc jmp jecxz add push and inc mov sub out sarl xor sbb das jne subb ret mov adc sub xchg pop cwtl out and jne fidivrl inc inc sbb popa pushf sti (bad) or or and cwtl daa dec imul incl loope push dec insl xchg outsb pop out stos sbb sbb mov (bad) sub sarl insb inc add cli jns lcall mov mulb inc dec enter jecxz fdivs and inc mov iret push pop test or adc add cmp fistl mov test gs push lods sbb add out mov add dec sti (bad) cmp sub adc adc cmp and outsb jo fldt sbb iret cld mov cmpsb fbstp inc sarb fiadd xor call dec fimull enter or movsl jl (bad) xchg adc mov incl or gs pop insb cld and imul roll add and loop cmp cmp aam fwait sub dec fnstsw ss add mov (bad) jno fistpl mov lods xor cmp (bad) sbb ja and add mov jp mov mov mov (bad) jbe mov dec push loopne add push xor pop lods dec out mov adc (bad) xor jne cmp dec add mov fwait (bad) call fcmove sbb mov push jae jae jmp gs aam inc mov mov adc push jne add ljmp (bad) xor sar dec sub cwtl (bad) adc std mov in out mov or mov push fisubr pusha outsl mov add and sub inc mov xchg sbb sbb inc mov sahf scas jle sub popa pusha push popa mov shrb push cs arpl daa insb pop adc jo and movsb insl add in xor daa dec mov inc add or dec js adc dec ret dec inc add mov rolb out and mulb and out fnop xorb (bad) (bad) cltd or add push dec fisttp jo mov and mov ret out repnz repnz in adcl add cltd inc lea and mov add fistl inc or add (bad) aaa mov leave cmp outsb aam push scas fs or inc mov fsts (bad) add sbb mov mov mov jbe jnp shrb fdivs lret notl (bad) cwtl loope mov mov rcrb xchg inc cmpsb icebp push and add adc and ljmp icebp in lcall rorb nop pop loope repnz out fucom sbbl pop mov pop xor lods nop and and lahf ja push xor aam fwait out sub jmp jl in add push mov push fimull and jmp (bad) aaa insl inc sbb add andb sbbb shlb mov pop outsl and dec ret xor (bad) pushf push jo mov push push xor mov test in add es mov cmp (bad) inc outsb ret shl ret std enter stc adc mov jb (bad) xor add and bound or scas xorl pop loop stc loop jp push mov push in add push xor repz (bad) (bad) add xlat adc jmp popa xchg (bad) sahf push dec xor (bad) jbe add subl xchg (bad) sbb test cmp or movsb sbb add mov xor out out sarb xor popf dec xor loop cmp jns pop inc ljmp push repz into mov pop outsb sbbl sbb and stos sbb adc rorl rolb iret aas flds dec sub mov add dec (bad) fwait iret add push (bad) push repz sbb fucom (bad) (bad) into sub sub or (bad) or shr in xchg push shrl dec cs out inc adc (bad) mov adcl jae adc pusha mov int push jp enter push dec dec jns (bad) sti adc cmp outsb adc jno mov xchg sahf inc testl out int cmp dec xchg and jnp jnp loopne inc mov jnp add add push jb (bad) or sar add fwait and inc mov ret pop jl sbbb adc pop pusha test cli xchg (bad) push xchg add sahf loopne xchg aas js (bad) adc cmp rolb pop loope and shrb cmpl cmp les mov cmpl add xor hlt ljmp pop or mov xorl jge,pt xorl (bad) sbb push xor std mov cmp leave insl mov inc jmp cmp or sub js bound inc ds (bad) xchg jo hlt inc es jle sbb jl jp add mov rolb inc cmpsl test xor xchg cwtl (bad) jae xorps pop and xlat adc inc mov (bad) cld push das dec pop ret or add jle call mov push push iret movsb incl mov add aas mov xchg movsl add cmpsb sub daa mov dec icebp out inc cld pop ret lcall je (bad) mov adc and xchg pop mov dec xor mov add cmp cld xor and icebp push ret dec out inc lret in xlat push add in out xchg sbb pop dec inc and in inc sahf hlt adc leave cmpsl cli std pop leave add int test ja inc lahf mov adc iret outsl jmp push sub popf insb outsb insl xorb or pop lss mov inc std adc push sbb jmp cs cmpsl testl bound dec sbb cmp mov dec or rcll mov xchg jge lcall test lea inc inc aad pop daa jl mov stc fidivr (bad) mov push add inc adcl in mov mov or popa mov mov mov sbb insb gs dec ret lea aaa sub (bad) xchg adc shl outsb rorl scas dec rorl sub outsb (bad) cli adcb dec or sahf inc jecxz (bad) lret fs popa mov pop pop pop movsb pop shrl jno push insl (bad) push fmull aas cmc inc dec xchg call mov jbe enter inc cmp insb icebp inc pop dec sti xor xor xlat jge fwait mov mov fcmovbe xorl in mov fisttpll jns out xor or ljmp pop cld iret and sbb loopne add jae xor lock xor jl mov fmuls add mov incl mov cmpsb jmp (bad) cmp outsb pushf (bad) xor mov push (bad) jno jle cmp insl and out lret outsb add mov (bad) fistp cmp push jo popf test stos or add inc cmp cmpsb incl and fdivs and sub testl data16 xor (bad) sbb jp jmp pop dec lret push sbb pop xchg inc lret pop icebp mov les pop xchg jl aaa movsb jo add xor arpl mov outsl inc push sub jbe in inc ret mov cmp mov jp adc xchg mov or ljmp cli xor std daa stc pop jae dec adc fldenv hlt fwait cmp incl dec addb dec out push call mov fsubs add sbb std nop and ss inc jne inc pop (bad) mov adc cmp sub push jae jecxz and push fwait inc je sahf test or push push movsl adc cmpsb mov cs (bad) xor jae inc daa nop std rclb lea jne mov loopne add aas test adcl fcomps dec xchg add and adc sahf xchg addl outsl push gs xchg xchg dec arpl xor xor xor mov or add push (bad) cltd mov rcr (bad) adc dec je movl scas ss jns pop adc into inc jg inc mov mov and add add or xchg cmovbe adc incl push inc pusha xor ss lahf dec and sub sbb in inc lods xor pop sahf addr16 roll clc or fnstenv add mov rcll xchg jno or inc jle dec inc rorl jne xor fldl add adc loop xor adc mov ja mov (bad) cmp or pop mov add add pop lods and adc iret mov or add and dec push pop sahf es sbb xchg addr16 inc outsl and mov inc sbb or add outsb sbb mov sti push sub add and push jbe inc adc gs sahf add xor cs and gs jmp rorl mov add jb or add cmp (bad) mov add cmp cmp test and insb xor mov lahf in sti mov mov add add aaa movsl fadds adc rolb or js sub jmp inc mov add mov inc fisttpll cld cmp (bad) pop adcl push das push (bad) imul add sbb cmpsb fmuls adc sbb sbb adc iret adc sar lcall and orb lcall jb cmpsb out (bad) scas sub neg or leave imul sbb cmpl push sub xchg fadds sbb sbb and add cmpsl pop mov sbb jns sbb fsubrl stc mov repz movhps xor dec in or ja sub push rcll sbb jne cmpsl jb xor xchg add sbb cmp (bad) hlt add fxch add jg add fstp sbbl mov movsl add mov sbb mov dec in sbb xchg fcoms xchg jae add mov lods jl sub js xor xchg mov test stc int adc sbb out dec incl cmpxchg pop mov mov gs sbbl call jg shrb mov cmpsl and out inc pop and fiadd fdivrl push in sub and adc mov les inc sub outsb nop cmp adc hlt inc iret and loop jbe add les add lcall add fs adc (bad) hlt pop adc (bad) and pop idiv sahf push sbb fnop adc call add mov fist movsb adc pop aas push ret aad bound dec cli repz sub enter inc dec mov call cmp test mov xchg cmovb incl and mov inc mov es and or pop xchg int je aaa stos inc fiadd push xor (bad) inc aad mov cld (bad) or lcall sti (bad) mov nop adc xor dec aad arpl sub js addr16 lock push iret adc adc lds iret roll in sub sbbl or xchg cmp (bad) incl int lcall iret lcall mov hlt sub mov rcr loopne std call fcoms mov inc pop jae xor jle sbb xor repz fiaddl imul (bad) std sub rolb cwtl sbb dec add mov pusha repnz in and test inc mov adc (bad) mov (bad) fiadd mov std pop push dec divl jge nop mov shl (bad) lods ss sub cmp inc in xor notl xchg sbb add inc adc orl (bad) stc add shlb dec inc loope jmp orps (bad) les pop data16 and hlt outsl es testl imul and sbb rcrb pop and (bad) jbe or mov imul sub pushf out jo in or shr bound test pop or xchg cmp sahf dec lahf push push jbe loope mov cs je push in mov repnz inc mov mov ret sub add jl jns push dec in pop rclb test insl icebp adc ss sub adc dec fldenv push lret adc dec xchg mov (bad) pusha insb mov mov outsb sbb loop pusha psraw loopne je test data16 inc fstpl mov mov add arpl dec mov daa or mov mov loope sub bound in les jbe push into cltd fwait mov repz ss pop xchg and pop and pop movsb push add mov mov mov mov ret hlt mov push stc popf (bad) adc pusha jae adc nopl jbe jecxz or addr16 add scas jmp sbb aam sub xor ds push nop pop jle inc jp popa imul bound sbb add fistpl enter or das ss and sti sub ss and out pop stos (bad) imul mov nop jno nop fmuls xor (bad) mov movsl sarb add mov cmpsb mov xchg sub inc add nop inc cmp fwait jb pop lock inc ret test js mov mov add dec mov shrl xchg call daa cmp jp and (bad) ret cld mov lret mov push popf mov add idivl scas mov loope adc pusha inc cmp and add fldcw cmp or scas jmp push xchg push inc orl sbb mov or mov inc mov mov (bad) cltd xchg sub call in imul scas shr mov adc imul rcrb xor jmp punpckhbw mov push mulb mov imul fistp das mov fstl adc into adc push mov mov or adc or fadds cs fmuls test fstpl icebp cwtl out (bad) sbb (bad) push sub adc add insb mov loop xor ss add (bad) sbb mov push jbe (bad) iret mov (bad) enter in cmp push add xorl repnz add or inc out fbstp xchg cmp pop jl add in xchg in jmp lods sbbb push jecxz pop popf push pop mov lahf int3 jl add mov pop push xor std test cmpsb pop add mov insb rcl inc mov outsb adc xchg mov fcomip sbb fldl jp out sbb outsb adc mov push or mov mov imul cmp push jne fsubs xor jns push mov pop cmp jnp jl cmp mov xchg lcall xchg (bad) packuswb dec (bad) add js adc push cmp or sub xor pop xchg and push jp movsb in xor or jecxz add sub data16 inc out ds ret out aam jbe in lods cmp fidivrl leave out mov mov adc (bad) hlt inc pop decb movsl lahf ja inc xchg or inc das mov (bad) std mov data16 pop aas or jbe push and or push (bad) in xchg cmp ss fimul adc cltd jnp insl pushf enter cmpsl out add or rorl loope and nop xor leave pop out add dec cmpsb inc mov pop loop jo cmp cwtl (bad) xor testl out or or dec cmp call pop pop adc in and test jecxz repnz jno mov inc xor cmp pop adc and leave add ret lcall inc rolb add outsl add movsb cmp cmp mov cmp fadds insb mov inc xor sub outsb out xor data16 iret leave add cmc aas mov add rcrb push mov or pushf fstpl or dec mov subb inc fidivrl jp shll and icebp sbb inc fdivrl (bad) sbb add (bad) (bad) fidivrl dec sub iret roll in add cmp and movsb or inc dec pusha imul and sbb and and and adc add inc lcall or test jbe and hlt decb inc jmp ljmp inc cmpsl mov ds sbb loopne fsubp (bad) addr16 ss sub dec jmp push out and test aas add inc mov mov mov dec adc pop jbe test sub inc push mov mov or int aam jno sbb addl push push add mov add dec or shld les mov ss cltd aas fwait int sbb push ret add sbb adc daa outsb hlt push or jge in lahf jo lods mov or jmp and or mov ret mov add int xor dec out inc pop arpl jo jno addl xor add aaa out lock ljmp sbb dec stos add inc shlb or inc adc xchg pop (bad) fwait aaa loop in daa test incl cmpxchg pop xchg and inc mov sti nop cmp adc repnz xchg fisttp enter mov sahf inc xchg or subb push popf out or mov add mov repnz dec and jno inc (bad) xor movsb sbb jg push pop add mov mov inc or sarb xorl faddl push nop enter lcall jbe (bad) lock pop xor sbbl dec popa add and mov aaa xor mov stc and aas or xor lcall mov sub subl arpl push aas xchg jecxz and or cmp mov test je,pn nop or and insl mov pop cmp cwtl mov les jbe subl xchg and cmpsl add hlt push roll and xchg jge rcrl push loopne ja lcall push mov push dec loope and add lret stos clc js lcall cmc fs ret cmp push test sbb je outsl out mulb xchg push (bad) lea pop adc mov add xchg or clc jo imul adc hlt jne in cmp stc test aas push xchg xchg (bad) jmp fisttpl xor stc and push dec mov dec (bad) jns xor repz test pop adc das mov inc dec insl sbb les mov or std jmp mov (bad) addr16 xchg mov jl pop xor add jmp sub jp push popf sub cmpl repnz repnz sbb push push dec adc sbbl incb divl inc inc loopne jmp addps or icebp mov pop lods or stos mov jno aas dec add sbb mov jg (bad) jp xchg test nop adc jg fmuls xorb incl test jae fmull push push pushf mov dec mov mov hlt outsl adc cmpsb pop test cli push or xchg dec sbb popf call test sbb dec popa mov mov fnstenv (bad) xor movd pop aad jmp mov add pop fdivl ret mov mov out adc out int3 jno loop sub int adc jb xlat lret push pushfw inc and xchg pop divb sub sbb jae ret fisttpl or paddsw nop sub addr16 push repz (bad) imul mov movsl mov push out adc jno aaa loopne sub test mov jg dec push adc stos packuswb into push je inc (bad) adcb in inc cli movsb jge sbb jne add arpl xchg mov inc mov in int std dec add sbb xchg lea fwait insl enter sbb mov test in dec (bad) jno lods or jbe mov fsubl cmp mov neg fildl imul daa fcoml pop movsb mov jp mov sbb pushf cmp sti inc ds aam sti or pop std pop and mov push push push lcall pop outsb ds pop pop fidivrl test or sub and data16 je xor fadds fdivs and inc push out gs pop push popa cwtl and in incl or lods incl loopne (bad) xlat or jl popl and in and pop jp pop insl adc pusha push rcrl add pop dec stc insl lods roll mov aad add repnz cld cmp or ret add adc fs sub jecxz pushf pop (bad) jb out mov mov fstpt lahf mull outsl mov mov push into dec sbb faddl adc and pop sbb daa add xorl cmp mov jl push xchg popf xor and movsl push adc sub sub jg test cli in cli sbb rcrb dec loop rorb push or testb dec notb (bad) leave add lea fucom daa roll mov btr push int3 adc aam pop push cmp je aaa adc add inc add cltd loope lcall or cwtl pushf sub xorl adc in popf and mov xor jg or ja outsb inc std or nop aad ja jnp xor ja in pushf inc pop push js jnp or imul mov xchg or stos mov pop jg pop repz or (bad) dec xchg fdivrl jp jbe push fnstcw adc jne (bad) std inc and dec jo fdivs psadbw add dec fbstp idiv add add (bad) lods adc movsb cmc dec mov mov mov rolb (bad) sbb and gs nop loopne xchg inc push sbb mov movsb push xor pop mov imul int std rolb fisubrl inc js add fldl daa clc jno dec or lcall mov loope stos loop inc pop dec out inc jno in ret mull imul add roll sub js or shlb les or nop push xchg incl jp inc fsubs cltd dec repz push mov inc loop xchg fcoms push movsl aas clc cmp call or add or mov add and clc or subl (bad) dec pop or fbld ljmp mov push pop push imul and (bad) ficom loop jp (bad) cmpsl sbb subl rcrb push adc insl rcr add add adc hlt cwtl aad rcrb aam cmp and sbb adc inc ret cld push sbb movsb push sbb push dec and push sti ds and out pcmpgtd in adc js xchg ss inc xor push sub mov aaa inc (bad) xchg jecxz or xor or inc sub lock mov adc push call ficomp mov mov or mov push in (bad) imul jne jb ds testb xchg inc xor cld test rorb andl ficom icebp rolb mov or inc or and dec in xor adcl in and xchg add jns stc pop add mov in inc and daa push add lock lcall ds shl add jmp sbbl adc les in pusha loop mov ret lahf (bad) and movsb mov pop orl mov insl (bad) add inc push popf out sbb add lret jg clc add or outsl adc cmp xchg mov mov add lods push nop sbb das aaa push xchg cmc sbb rcrb test cmpsl and xchg icebp mov js mov ret aad jmp mov test out or arpl mov mov inc sub enter pop adc mov (bad) sbb incl lret mov sbb fnsave cli mov jmp mov popf outsb aam daa or inc inc jnp in into inc lret fistp and lcall add pop rcrl cmpsl mov sub pop mov sbb into enter test inc cmp into pusha stc add imul std mov shrl xor lret (bad) ja sbb jg inc (bad) dec sbbl or je inc stos add lods jecxz sbb cmp adc add (bad) out outsl jb push ds repnz lods sbb push jb jne out js inc out scas cmp call xor mulb insb push jmp ja nop push xchg frstor imul sahf or push gs inc dec jecxz add fnstcw rcrl mov mov inc mov rorl sti call movsl add adcl jbe and or pushf nop sub aaa es lcall jecxz add ljmp mov jnp add sbb test icebp cmc xchg or sbb add pushw clc mov inc add mov cmp dec jae subb jle,pn and insl sbb pop out addl mov add xor dec mov test mov inc sub insl mov lea fadds jo and imul sahf sub cmc sbb int3 mov inc sbb inc arpl and and push insl push xor out loope sbb and xchg mov inc fadds cs pop xor cmp adc lea sub inc movsb pop cli dec pop push popa call (bad) incl sub div inc shrl ret ret sbb mov ja loope out inc shrb mov (bad) jno jo stos add out (bad) mov (bad) xor fisubr and incl aaa pop add cld xor addl mov daa dec rolb xchg adc xchg bound (bad) cmp push pushf fildl jb adc mov jle cmova jge imul pop out sbb lret lcall cmp roll rcl pusha loop jo leave add or cs out inc pop xor rorb and and cltd fsts aad movb ret loopne sbbl ds dec inc mov fldln2 out inc jnp test out int3 jae inc outsb das ja and scas int bound adc jecxz insb insl push jp sub scas sbb stc and sbb lods jo mov cmpsb loop cmp inc loope or add and xor insb or addr16 sti and mov cmp cltd sbb dec movsl shlb pusha imul mul adc (bad) mov cmp jbe xrstor dec jns inc test add rorb sti adc (bad) and cmp sbb fidiv jbe std test mov pop inc in inc push xchg mov fdivrs faddl lods cmp aas inc insb push adc sarb adc dec and push and dec push lods xor pop sbbl xor fnstsw fiaddl (bad) mov or sti xchg jmp xchg inc adc ret push or push xchg xor js imul stos addr16 jnp xchg push jbe cmp jmp (bad) mov testb sub push cmp mov stc mov (bad) popf jecxz cmpsl int call xchg add cltd push stos loope sbb mov (bad) (bad) mov test sbb jle aam mov push fwait jno loope push inc add into or xchg or push sbb bound pop or jg cmpsb loope or push jmp mov adc je incb sub inc in push pop mov out add or lods mov or mov jbe sahf push jnp negl dec inc es jecxz test adcl and xor gs jecxz or notl lds sub sub hlt lahf (bad) sbb push test jne sub adc popa dec cmp inc jge ds (bad) (bad) stos pushf pop fdivs xchg loopne xchg adc push add aam mov mov jnp add or dec call repnz jo std mov push adc in cmp in mov stos mov fisttpll je ljmp daa int xor maxps iret (bad) xlat aas out push adc js cmp sbb pop jbe or popa mov mov pop nop sbb push dec jnp inc lret int (bad) push sti mov dec cld xor pop enter out dec mov enter inc cmpsl push jno (bad) subb jg push icebp pop sub ret loopne or std fadds add fcmovb in rclb jbe fwait dec xchg (bad) pop and in sub and and mov sti cmp notb xor dec (bad) mov pop cmc or ret sub add mov je mov bound dec and or insl ss jmp in inc int andl xchg mov xor sbb or popa std nop cmp imul cmp rcrb jno xchg es mov insl ja lret sub mull adc mov dec and in clc mov mov sarl (bad) jo adc dec cmpsb shr push fs mov mov jecxz jl mov jne jbe lcall xchg jg inc std push cltd call ret mov jg sbb js out std lret js or test ja lahf push or xchg popf nop inc inc adc dec sbb dec pop test pop (bad) xor aas mov pop jne out ss imul lods (bad) insl cmp add aas dec mov adcl dec fwait mov jnp cmp push xchg (bad) cmp pop mov and js mov sahf jmp inc iret roll call dec push clc and mov push push mov push (bad) pusha loop jo leave add or cs out sbb inc aas aam sub mov xlat imul or notb pop xor aaa in xchg adc out mov jnp pop xlat ljmp rcrb fucom enter repz test stc ret lea fwait pop outsl or add xor mov je repnz pop or add loop pusha arpl jge pop mov (bad) pop mov (bad) insl sub sti mov inc mov shll iret xor rolb fimull dec push pusha cmp inc cmp cld rolb in cmp jp or jbe call pop inc les aam jmp mov in inc mov push xor loop add sub insb xchg adcl (bad) rcr repnz or call cmp and rdpmc or aaa add xchg or stos add mov pop mov into add sub or mov sub inc mov dec (bad) jno add lret mov inc cmp aas je icebp sbb jbe fiaddl mull ss mov and sub xor pop movsl cmp enter sar and je xor lret pusha loope shl adc or push sbb jno sahf addl sbb pop push dec lock fistpl cmpl push xchg frstor imul cmp popa repnz int3 mov dec jecxz add fnstcw rcrl mov subb das mov mov mov rolb ror or and lods es add fwait enter outsb cltd aad aas lock daa jne jb fimul xor mov adc sbb adc pop jp or pusha repnz add mov jge daa cmp or cmp mov jns and sub rol jmp add (bad) aam incl (bad) (bad) ja inc pop xor pop pop cmp dec fimull nop xor pop and mov and add fisubr fadds inc cmp ljmp mov pop xor popa xchg dec (bad) or insl jl lret popa (bad) (bad) movsb add inc and (bad) jmp rclb sub xorl mov aad xor mov pop incl push subb adc pop mov mov lods aad pop xor in adc cmp jae pop push ds sbb insb dec add jnp outsb xchg mov push in inc mov pop fwait inc cmp out ret int xor xchg fadds ret out push fld jge jbe add in ja repz cmpsb cmp in lds xor add ds fbstp or inc xor mov fidivr lea dec jl pop push enter fldl mov sbb popf cmp sbb cmp add mov inc xor mov add test (bad) mov inc jbe sbbb inc mov mov cmp jo inc xchg in push xchg dec add xor or and les and xorb xchg subb mov add lret mov orl jnp inc insb dec cmp xor xchg adc inc and sbb jmp cwtd add add cmp push imul and lds ret jp fucomip dec mov rolb inc push leave lds inc add mov add mov and pop sbb cmp push xlat inc pop push mov sbb jl cmp and clc out add aaa xchg call inc cmp sbb sbbb fsqrt lods jmp cmp mov sti sbb and adc sbb (bad) repnz or test adc pop out and pushf out cmp jne cmp lea sbb mull or cld mov jecxz or test pop sarl dec roll adc (bad) sub push les movsb clc stos push jge xchg out mov (bad) xor fisub inc sub cmpsb mov xor cmpl mov repz fidivrl or (bad) cmc mov les cmpsb add sbb lods or ja and xchg mov mov inc cmp cmp and enter or (bad) and inc imul aaa mov push popf cwtl sub dec sub xor mov arpl fcompl cmp popfw icebp lahf add adc dec pusha cmp push fmul or mov push aaa (bad) data16 inc push pushf in xor outsl mov cmp lods adc dec rcl insl cmp push (bad) jge (bad) ljmp adc lods pop sbb dec push mov rcrb (bad) cmc push mov out aad stos subl cmp lods xchg add pop out fwait mov or pusha push (bad) push test or popf and (bad) or (bad) in sahf sarb dec loopne cmp push dec pop inc ret rsm or cld xchg aas xchg pop cltd in shr test fcmovbe mov dec imul lcall xor roll lock add out mov pop inc jbe nop jo mov mov jae or js add ret clc mov pop imul nop sub or sbb dec stc incl test je (bad) dec fidiv roll addr16 loopne sub out flds (bad) int3 imul ljmp and aas subl xchg sbb hlt jl lahf ret mov aaa loope fs push imul push rcl push (bad) addr16 jecxz and call (bad) pop xor (bad) adcl push mov xchg sbb pop add mov dec inc inc dec scas sbb sub sahf popa pop push adc jg sahf pop inc pop mov mov or mov mov jbe imul repnz sbb xchg or mov popf inc jge (bad) mov test mov jecxz xchg bound aaa fstps jno xchg push sahf mov (bad) pusha adc mov add push dec arpl cmpsl jbe sbb mov in incl push nop push movsl les fs (bad) sbb inc mov and mov rcl in (bad) int xchg xor ljmp mov jge xor sar int aad aad push mov addr16 mov cmp fsubp ret and dec add add (bad) mov adc insl fiaddl sbb mov push nop aas sub loopne dec push fidivrl fs cmp pop test and imul push nop movb stos jl xor cmp jae inc popf push dec adc sar push push inc bound pop mov cmp sub cmp adc imul mov lods push out fwait adc imul imul or mov pop pop lds lret inc dec ret pushf mov faddl jns loope push jbe sbb push and es inc push shll mov or incl sarb sahf call inc inc outsb xchg out ljmp fs adc pop int3 je mov push jno das add and cs stos rolb shr inc std sbb js cmp sbb adc fiadd mov mov test push lods dec popa out cmp mov bound shl inc out pop jb (bad) jno insb pop stos mov jnp cmc inc or rcl pop jge inc (bad) and mov sahf xor aad pusha les (bad) into jl sub and (bad) loopne jb imul test cwtl cmp (bad) xor je pop test shll and int imul sbb ljmp (bad) mov pop lahf xlat push je loope (bad) lret adc inc fisubrl mov negl jbe sar pop sub addr16 subl jne jle cmp out xchg mov out push inc mov or repnz jbe and inc pop jbe ret sarl push push movsb fdivl jbe adc inc fsubp sti adcl dec fxrstor imul (bad) add in test jmp xor cmc cmp faddl sbb sub or fs or pop or jbe sahf sahf sub dec int3 xchg lahf adc mov outsl lcall and mov mov iret pop lock add xchg jge add push and fmuls add or inc xor subb outsb aam movsl addr16 stc and cmpsb out inc mov lock sbbb jecxz ftst sub rcr aas xor mov lods fcoml sub inc (bad) pusha sub iret xchg leave add add or cmp jle adc push lock call (bad) clc test mov inc push nop insb out flds jmp mov sarl mov andl and xor and movsb clc cmpsl sbb jo sub jbe push or insb popa mov (bad) fcomi and add mov aas scas ret popa icebp inc insl leave mov jne out iret nop test lods lock cmp xchg (bad) push sub sbb arpl or movsb leave rcrb rcrl mov nop cs mov (bad) jbe js add mov sbb arpl push into hlt adc lret or or sarb in inc mov stc mov (bad) fbstp sbb jns sahf xchg add or lret fist adcl aaa lahf xor std test cli int3 cmp mov mov subl test dec pop push sub xchg push xchg les pop insw bound add sub mov repnz mov in inc negb xor sbb mov add js jns inc xor or movsl push jno inc test mov faddl (bad) xor arpl je int (bad) les or and adc dec cmp insl inc push nop jne arpl add mov adc jne xor loop inc inc int3 in push arpl (bad) shl xor flds test (bad) subl xchg aaa pop add hlt or jl and cmpsl ret cmpl sub cmpb mov xchg aaa insb les cmp add sbbb or out dec sub inc mov rcl cmpl dec sub dec add adc push lea inc aaa imul aaa cwtl test movsb in aam rorl (bad) jb mov xor fstpl rcll pop lds fs or and push sti pop addl xchg out cmp sub xor out nop arpl inc das adc (bad) sbb out adc in and push sti into (bad) sub movsb jnp jecxz push push xchg notl dec fadd sbb sbb xor lea mov dec int mov das fadds jno loope (bad) xor cmp sub jb jmp shld inc add inc lods and ja into sbb jl sub rorb aad push movsb lahf jp jo inc mov (bad) jecxz sub repnz jb add imul ja xchg add roll and xor push mov fcomps pop leave add push fmuls push movsb xchg sbb jnp sub jecxz add jge movsl mov cmpsb das sbb repnz sub dec xchg pop adc pop cmpsl adc lret add or adc cmp push jns or roll inc pop xor push inc fisubr hlt or sub mov add mov or (bad) cmp arpl push mov add call pushf std adc (bad) pop and jmp cwtl dec cmp inc rcl negl fisub mov lcall in cmp dec push xor sbb ret (bad) insl pop out mov or ret inc loopne pop push sbb aaa sub jecxz cltd pushf dec out add push mov add mov adc enter imul fmull rcll xchg loope dec jp arpl flds push (bad) dec clc add (bad) (bad) mov mov fwait js fiaddl push push repz add cmp ss and xchg test or and shr mov cwtl xlat into mov add mov mov push cmpsl sbb dec inc cmp imul pop dec (bad) sbb addb icebp cwtl add mov cltd sub dec jecxz repnz cmc inc (bad) sbb cltd jle addl jae in subl pusha pop sub or rorb dec (bad) push mov dec inc mov inc inc mov xchg mov imul jb std scas xor cmp add roll sub push (bad) je insb sbb adc pop dec and mov and cmpsb sbb sbb or pop inc fnstcw jl add icebp cmp hlt mov test loope test test mov push xchg popf xchg pop fcoml pop nop pop testl lcall aad rol sub (bad) and enter add jbe jecxz pusha insb andl test in jl add (bad) shll mov add incl xchg scas mov sbb pcmpgtd mov pop and imul iret xchg or push mov add incl aam pop xchg mov and adc (bad) sarw adc imul cwtl loope addl enter inc push xchg test inc adc jle mov addl test and xor pop mov into aaa and hlt adc pop add add roll add shrb sti in xchg arpl es add fidivrl mov flds inc lock cmp cld jecxz fmull (bad) xorb mov push xchg (bad) leave adc out push imul pop mov or arpl xor leave pop sahf rcll pop out aam leave add hlt dec xchg mov (bad) xlat and cs mov sbb subl pop inc sarl mov je in inc incl xchg pop cmp ss lods rorb ss das push sub pop push mov incl je rorb (bad) js inc sub inc or aaa in sub jbe cmp pop std div mov xor and rorb add mov fsubp aam and data16 stc mov nop and roll sbb outsb lret pop and ja subl pop fisubr add dec push mov mov cwtl fdiv sbb mov xlat xor test cmpsl aam outsl jecxz xchg adc and or xor mov mov sbb shll sub iret mov daa ret pusha mov iret hlt lret loope and lret ja add push mov orl scas cmp aaa inc aad mov incl mov sbb pop adc out push (bad) cmpl add (bad) xchg or mov jecxz add cltd fcmovne pop add das sbb or push fstl jnp and fnstcw mov xor cmp adc mov and cwtl add pop or ret roll loope push cmp sarl test insb nop jbe sbb xchg out or mov lea adc xor inc ljmp rclb cmp mov xchg inc sbb adc addr16 add fstps dec es dec mov mov sbb mov lods incb outsl or inc int3 pop pushf sub mov outsl cmp xchg jo leave enter jo sbb nop or mov jb sub cltd fwait mov mov pop xchg or (bad) xor jb and jge test test push in jae loopne rcll das xchg or inc mov (bad) popa fwait inc ljmp dec jnp in cmp add xor call mov popf bound mov inc pop xor push sti cld (bad) xchg add dec incl hlt data16 (bad) sti mov cwtl jae outsb and cmpl xor ss addl lahf xchg subl imul adc xchg mov and and ljmp ljmp mov in sub push jno (bad) bound insb inc sahf mov inc xchg jae fsubs js jns sbb xchg pushf inc mov sbb imul mov mov push push xchg mov outsb (bad) dec pop cmpsl (bad) movsb or arpl inc loopne and xchg sub jns fistpl fnstsw or push push clc das out and fucomip and inc imul (bad) mov pop (bad) into flds roll xor or addr16 inc add mov and popa nop sbb nop push pop hlt lcall ret add (bad) adcl icebp sbb movsb dec inc mov add in test push mov cmp inc inc xchg dec pop fs or pop cmp dec cmp adc pop and cmp fsubrs sbb inc les xchg add push xor inc stos fldl mov fidivl add add ds pop and roll stos (bad) insb test fistl pusha sbb xchg add push int3 push lock fwait pop jno jb inc les sti mov enter aas movsl add jge (bad) jns push add inc mov sbb aas pop mov sub inc cmpsl pop lahf es mov pop rclb lods mov outsb stc inc mov jns push or jns jp je xchg cmp mov faddl and stos or mov testl add and sarb and jg sbb sahf in fs in or lods mov enter jge outsb les push cmc pop std pop or mov mov js sbb push inc inc out repnz inc pop ljmp sbb jmp cmp sarb scas in inc mov ret xchg or jp popf (bad) cmc inc je (bad) (bad) cmc in fwait cmp push fdivrl nop jo inc (bad) cltd pop mov sbb into xchg push xor inc mov test outsb in arpl (bad) push popf mov push mov leave add in loope xor pop bound jmp and lock and mov add push icebp inc out mov jo mov mov addl adc mov fnop inc stc mov cld ret push cmp adc sahf xchg fdivl add je fild mov scas xorl into jae js add cmp or imul xchg cld mov cmp inc (bad) ret dec or dec add fmuls jne (bad) mov cmp cli out inc aad sbb bound xor lahf ret arpl ds sub fiaddl icebp mov out mov int push and clc mov sarl (bad) int3 lret movsl add pop jae inc out sub jge in adc cld mov add test sarl mov testl inc (bad) sub je jae sub aas fst outsl pop add mov mov push je or jo mov push imul in leave add adc jns pop in je cmpsl imul imul and dec dec dec hlt popl add jno and push pop les jle inc mov and cmp mov add cltd repz dec and dec add dec out std lds mov add fadds push add js stc mov aas jns rorb sub mov dec or adc shlb dec jae xor enter mov out pop sub js jae xchg outsl jg inc in inc in in mov nop imul mov push frstor push inc das mov adc or push mov fcmovnbe sbb push xor mov orl cmp xor lods add notb sarl (bad) adc imul cmpsb (bad) clc push or out cmpsb add pusha pop es adc and mov ljmp pop dec outsl mov ficom and popf (bad) mov sarb shl and mov inc lgs daa incl outsb cmp or mov call sub or adc scas mov arpl mov or movsb cmp sahf sar fs mov enter dec sbb jns xor add mov inc (bad) lret clc mov scas stos and inc stos sarl jno mov inc cli sahf dec mov inc (bad) cmp push dec shrl or lahf aaa push dec sbb in mov iret lahf stos or loope push xchg fstpl jnp fsubp jle sti add in inc test popf ss sub mov aad jnp xchg adc imul fisubl rclb mov cwtl inc loope inc (bad) aam push pop add sbb add out or jne jb adc pop (bad) (bad) lret jne sub mov test push mov repnz xor xchg mov inc aad jo les test mov sub (bad) (bad) insb (bad) (bad) jmp or jg dec add std mov aad lahf in shr test jp push mov (bad) divl cmc lcall xor add outsl loop jno and xor lahf mov jle (bad) test jo scas mov bound jecxz clc mov dec int3 push test sub sbb xchg mov imul sarl call cmp sub sub pop sub jle mov jno mov out test mov jne ret aad sahf rolb push imulb inc adc gs imul push push jno xchg pop xchg bound add andl int cwtl sbb mov add cmp mov mov jne ja into mov dec sbb pop pop movlps add mov pop ja push outsb (bad) popa ja jl pop mov into dec je cltd add shrb add lea push lahf ret or aas nop jns or in xchg fisubr xor movsl cmp adc push add (bad) xor mov sbb sub push gs xchg xchg or fisttpl sub lds cld ds and icebp add movsl lret dec inc push sbb (bad) push xchg andl nop outsb xchg aad leave cltd je push push sbb fmuls rclb or (bad) push ret pusha cs adc adc xchg testl mov inc pusha or add addb jnp mov mov or fdivl in icebp inc sbb lahf lds in leave add add sahf pop cmp fcmovu flds dec frstor and cmp dec daa add loop add std test test fsubs (bad) add mov or jno pushf test adc int3 push out pop dec fidivrl adc shrb sub jmp pusha lock aas inc add loop jbe inc ljmp stos and fwait into in rcrb stc and dec push addr16 jne add sbb add or pop dec push rclb rorl ss inc ds mov jmp outsl addr16 (bad) jne push or iret jl das jo imul std xor mov jae int dec dec mov out sub adc out int3 inc and mov (bad) push in repnz test pop mov mov lcall loop inc or jnp or dec mov mov hlt cwtl jmp jb fcompl insl imul and push jbe andps dec rcrl lcall cs cmpb gs dec xchg int pop inc (bad) fbld cmc pop jbe fadds dec add mov pop add fbstp and mov mov add leave cmpsb out push sbb nop dec inc ja or sarl add push inc mull imul or add enter or lds in add inc ss mov jo in and and (bad) mov pop outsl popa fisttp (bad) bound sarb scas inc mov push dec sub mov lods fimul dec and out stos mov sub push unpcklps jo iret aam push leave sar xor jno (bad) in inc (bad) mov ret or or outsb and and mov mov and jb out or push stos push adc arpl add fwait jl insl push das mov xor ss fdivr and or inc int3 mov loop mov push xor (bad) or inc adc jns and inc insl int xchg add clc inc add insl mov add dec xor fsub add cmpsl mov lds inc adc outsb subl mov or fxch out sbb cmp sbb popa lahf int xor mov add int cmp add in sub inc pop aaa inc and mov das (bad) test or cwtl mov shrl sbb inc pop lcall inc mov push std cld shrb mov lds push pop sbb mov out and dec dec add cmp pop push ljmp dec pushw rclb iret lock inc int (bad) mov sar and inc or inc fsubs (bad) lea rsm add dec mov and dec outsb jnp roll imul sbbb dec sbb mov addl mov in add (bad) push xor inc pop orl push pusha jb sar sbb inc addb jbe or mov out mov mov pusha sbb mov adc push imul fdiv inc mov mov jnp lret adc ficom lahf jbe push arpl sahf dec adc mov inc jnp jne out pop faddl stc cli add in out scas bound scas jp in daa leave pop add cmpsb outsl enter inc mov or mov mov push add fcomps bound mov sarb cmc pop mov sbb dec shlb popa add (bad) push mov or sub loopne mov insl mov mov ljmp es in scas es adc cmc push push pop insl rorb stos add (bad) test aaa add adcb fisubrl or int inc ds fldt mov inc lcall adc out mov xchg mov js dec or arpl outsb adc test in sub push aaa pop lock xchg xor pop dec add add arpl loop and inc je add sbb cmpb xchg inc push sbb inc out inc lahf mull jne lahf fimul inc cmp cmc sbb and imul sub out inc flds lcall bnd add mov scas ljmp inc add test sub cmp loop hlt add scas insl pushf add push pop and add mov mov loope pop cs xchg outsl jmp add pop insb mov out push adc mov mov inc mov fsubs negb enter add adc xor adc std jno dec cli pop pusha in rcrb sbb gs subl push inc test mov push or jns xlat insl add xchg out adc lahf and sti dec jle sti in hlt or mov cmp pop inc push mov out xor enter pop addl imul pop add rcrl mov sar lods fisubr add mov dec ss adc add int incl cmovg movsb sbb mov jecxz in sbb xlat mov jl loop inc lcall ds sbb sbb insb bound lret pop pushf cwtl aad dec add iret and rcrl roll loope xor rcr lahf in cmpl adc dec bound aaa (bad) or push push push mov clc loope xorl test xchg push xchg push add mov and (bad) daa sti mov stos mov xor sbb sub push pushf add push mov pushf in (bad) pop and cmp mov jae jo clc and dec (bad) (bad) and mov das inc sub push cmp in (bad) scas out je xor fidivrl sbb xor mov aas in inc es jno aad in daa mov sbb (bad) push sbb pop inc enter push andl mov ret mov mov mov push popl ficoml out push sbb and mov lock ret stos pop shlb pop adc xchg sbb sarb icebp inc inc js popa push inc xchg mov fnop das mov mov sbb ret xchg push rcr adc jecxz fcomps adc cmovno test adc test (bad) imul fs or loop jne jae push sub mov aad mov push sbb inc mov outsb es adc sti inc mov jg sti (bad) jae sti xor (bad) and mov cmp or inc test inc inc repnz pusha inc cmp bound insl scas or rcrl inc sbb mov or xchg cmc cmp mov orl clc inc hlt mov dec ljmp dec (bad) cmp mov pop sub test or mov mov jo lahf ljmp fistpl xchg add shr sbb add imul dec (bad) dec and and popa add push jb sub cmp nop das dec mov (bad) test pop scas inc adc je xchg jb adc push pop pop cmp cli aad inc loopne rolb pop fisttpl in inc int3 adc cmp push push roll adc sbb push stc inc scas clc notl test mov js dec or xor sub enter inc and sbb pop test inc ds aas loope aam mov dec add cld xor add arpl or adcl lret and insl call cmpb aam push push sahf mull jg adcl push sub pop and inc mov test insl cs and rcrb (bad) lret inc add mov in int mov fistpl or jb cmp mov lods pop clc adc gs mov push loopne insl adc ficompl loope push mov sbbb fdivr mov sub rol add in xor mov xor subl sbb ret inc add out sub insb inc ds add cs fstpt jb jnp sbb out lret shlb mov jb loop xor orl and (bad) aad faddl xchg add pop repnz leave add (bad) mov jns and push or insl aad cmp add xor clc pop sbb add lret xchg ja push pmaddwd lret jle mull cmp (bad) pop sti mov jbe addr16 jp orl or loopne mov jbe out stos aaa xchg mov sbb pop shrl hlt inc mov iret xchg or mov andb pop test sub jle adc mov fbstp insl mov ret ret xchg inc mov pop sbb lcall pop sbb mov jnp sbb inc and out inc gs test leave repnz mov jnp inc mov test lods gs sbbl sbb enter xchg or loop rsm add jne ds dec cwtl cld lds pop aad movsl add mov ss andl outsl lock and and push mov subl pop subb pop cmp xchg adc or mov leave mov push cmp faddl outsb incl flds std ret mov sbb std (bad) jne mov pop ljmp repnz in dec nop daa jp outsb fst inc (bad) out popa add sbbl push and mov hlt fcmovnb pop adc mov sbb ret xor rcll aas and cmpsl sub out sub jnp rolb cmpsb push dec rcl out subb sahf dec add pop inc dec sbb adc add xchg je push sti mov inc mov and inc (bad) loop arpl add mov fnop daa inc (bad) push sbb les push cmc jo arpl xlat outsl gs dec inc lcall xchg mov cmp add add mov sub jecxz or fildll add shll and xchg faddl push pop xor nop push (bad) data16 ret xchg or int push mov pop jne pushf (bad) adcl push ljmp aam jg jno push gs inc dec sbb or mov adc out fcmovne add fdivl ljmp xorb inc repnz cli mov mov rclb lret pop iret push jae mov call das imul les push sub xor ja subl push mov mov and xchg xor (bad) jae lret adc arpl push mov (bad) add push cli fiadd add add jnp jle addr16 add push out addr16 pop bound push leave pushf pop push adc ja or pop mov xchg jge mov ss pop test adc sbb push hlt (bad) (bad) and adc jno or ret loop icebp xchg or fld fidivrl mov add std pop shrb dec push clc or push mov adc add mov sub std pusha or or inc mov dec add daa push mov inc lea int3 inc dec inc push lea pop test inc call fwait ja (bad) xchg (bad) dec sub inc into add int in cmp bound xchg loopne outsl ljmp pop ffree pop (bad) or dec in enter es jbe dec push sarl mov clc mov inc sahf callw lcall xchg inc cs sbb push or add imul adc insl lret mov jbe gs inc in xchg cmp ss dec sbb ss pop sub int xchg icebp mov sub cmp outsl iret jp imul (bad) mov cld shlb repz inc and in sub addl adc sbb jns (bad) fmuls add movsl fstpt incl xchg adc mov bound mov call sub fcomi mov or outsl push lods leave shrb loope sub dec pop (bad) notb xchg loop ret incl aad stos mov div add jbe inc push dec jle cltd fs in into jge jne ja incl inc addb je cmp or notl daa mov fcompl cmp out (bad) mov not xchg push stc push mov cmp fisubl inc das mov mov pop leave add push mov inc stos mov ret ror out inc mov lret dec mov (bad) mov xchg (bad) mov xchg xchg aaa incl arpl lcall xor jb cltd ja iret xor (bad) test je cmp sbb dec and fcomi lea lock aad jae and outsb add movsb leave mov jno lea fsubrs inc mov push jmp leave mov out loope mov test rcr cmp nop ja jg add add inc in add cmc hlt push insl lret rclb int3 dec sub jbe mov addr16 (bad) fs mov cmp mov out jno or ljmp leave add push negb mov movsb mov cmp cmp je mov jbe imul mov cmp scas enter lods out push add (bad) mov sbbb add subl or out add push mov loopne xor movsl in ljmp call mov push mov push (bad) ja pcmpgtd fs movsl pop adc xchg pushf push (bad) mov add pusha jo and icebp rcr flds lea xorl jge cmc je shll inc adc push sti out jno mulb sbb push lock shrb pop leave cs mov test loopne gs mov mov lahf out (bad) sbb (bad) inc scas gs test ljmp bound out je ljmp push int3 pop jnp sbb test jne insb scas dec jb sub and and loop,pn and incl push add mov adc lds jge push ficom addl jne iret addr16 testl and jge inc repz addr16 add and jl add fildll incl in test dec stos pusha mov flds addr16 xchg push das mov xchg jg addr16 inc std mov jnp bnd add sub adc sbb pusha cld nop fs fwait pop and inc es lds pop test jns std add inc jb setl pop int3 seta ja addr16 das popa cmp xchg nop in lods iret jo cmp jno hlt or (bad) mov xor and fs negl cmp cmpsb repz js lock add ljmp mov clc xchg adc mov and adc call inc mov hlt pop dec inc sarl xchg (bad) dec das mull movl popa shrb pop cmp push outsl ljmp mov inc cltd fsts xchg in add jb (bad) sahf stos xorl jns popa je int out icebp inc xchg stos fcoms dec adc cltd inc xor pusha (bad) dec in mov sub cwtl add pop fdivl add in sub fild fsubl xor int push cmp add addl xor and push imul cmp pop (bad) xor rcr (bad) jo fnstenv cmp std dec sub in sbb jecxz sub dec ja mov (bad) sub cmc mov inc insb jo sbb orb or mov iret bound push adc iret cmpsl int3 pop mov bound inc fstps jnp adc in (bad) jecxz add jnp sub pop pushf xlat jbe add ret testb jge adc rcrl pop and cmp mov or addr16 mov mov hlt sbb jmp sarl std aas je cmpsb dec mov stos push push shrl add inc (bad) addr16 in repnz cli fnstenv mov adc inc jns into daa mov xor add jg pop mov adc jae (bad) mov or fsubl lea or mov lock cs add lds inc les mov (bad) int (bad) clc into popf fcomip inc sub adc or and shr mov dec mov inc into push lock and sub push out sbb cmp fsubrs outsb push fsub daa je daa jne fnstcw adcl jno dec cmc inc test fdivrs lods roll je jge xorb and pop or or add mov nop lret or imul inc xchg outsl sub cmpsl (bad) outsl inc lcall (bad) jne or sahf cmpsl and fs adc std jb gs inc inc aam fs xchg add mov sti test roll adc xorb xorl xor out mov xchg andl testb out xor mov xchg or jg mov add push pop push inc insb pop mov test sarb add add stc mov test adc lea out sbb imul lea xrelease sub lcall (bad) jae sbbl andl sbb adc jle or int3 nop sub mov jmp daa add mull jge mov sarl cltd xchg (bad) enter stc (bad) stc and xor jg xchg or fxch sub scas lds fiadd xchg push jbe dec cmpsl push mov enter addb push or mov cmp clc jge add dec lcall adc mov fstl mov mov add or flds fstpl push data16 or movsb push and xorb sbb mov shlb dec jmp aas pop dec adc out sbb ret push rol and dec jo jne inc push adc dec push xchg dec mov sbb inc (bad) mov mov insl rclb loope (bad) push adc mov adc pop cs jbe imul je dec mov loope cld movb rcll dec add add pop inc in add cmp fnstenv inc shll or nop cmp xor lock push pop and popw ja ljmp aam adc fs in sub mov push mov (bad) jecxz inc mov notl out cs in subb sbb fisub std movsl add cs (bad) jp loop fdivl inc fistpll int3 mov xor loop inc mov scas mov add fs jge inc mov fs or jnp mov push fidivrl mov adc faddl jge push rclb inc mov add out call inc ret stc dec pop adc out mov pop (bad) add fldcw push shl dec mov xor int3 dec pop jle mov stos or mov daa mov mov jb bound sbb sbb mov loopne jge bound sbb add push aam cmpsl inc insb shll ret xor lret xor movsb xor cmp inc outsl cmp jmp mov dec ss fnstenv cmp lock fiaddl xchg (bad) cmp pusha fisttpll mov mov cli mov test mov xor or pop adc push xchg outsb mov fadd jg data16 outsb xchg call outsl and push insb aaa out inc ljmp in or jae push ret cmp jns push xlat es fwait mov sub mov (bad) pop push mov cmp sbb pusha inc int3 mov cwtl mov sub jb or cmc add fistpll test cmp dec ss shlb inc cmp flds (bad) dec pop xchg (bad) std nop push inc mov adc mov cmpsl cmp lods aas arpl mov repnz pop pop mov mov mov inc and sti shlb mov mov add push movsb insl and pop aam or leave into fldenv add (bad) push fistp dec and popl std sbb enter mov ret ret movsb xor dec xchg add cmpsb jno fcomps and dec pop jnp clc mov dec mov xor inc leave add lret scas sahf pop xor dec pop lea cmpsb (bad) loopne fbstp loop nop jns int3 je jno sbb aas addr16 xor incl cmpsl das adc dec push imul ljmp (bad) out or (bad) inc pop mov sti xorl jmp (bad) (bad) mov mov arpl and dec cmp pusha mov xchg sub jg leave add ret mov (bad) cs lret mov pusha sbbl repnz ljmp in fiadd outsb pop iret sub cmp push cmpl pop outsl outsl lcall mov push xchg dec pusha aam mov dec mov jge shr cmp add add (bad) add loope mov or jbe sub pop insb iret cmp mov sbb daa add popa ret sub fwait inc mov sub jno (bad) mov incl aad xor outsb and out jp dec cmp call jle enter scas ret sbb rcr pop mov and jo xchg dec push cmpl ret scas jo adc fisubl push aaa (bad) pushf rcrb sub mov and das adc jnp inc or (bad) dec mov in lods ja les add in inc inc sbb dec add scas add and insb mov outsl sti mov fucomip xchg add pushf fisttpll xor jno jbe pop xor fwait (bad) repz repz add sbb pop shl inc or subl jns fsubs or rol add cld nop cmp mov jns adc xchg pop mov add and notw add jne (bad) idivb mov xchg xchg adc xchg loopne lret pop mov adc addl pop adc lret xor push add adc aas fs and pop and hlt mov sub lea cld leave sub mulb mov inc pop nop shrb insl ljmp sti fcomps inc loope mov mov mov mov cwtl hlt insb add cwtl sub test push jne mov inc cmpsb inc adc loopne mov sub add mov jbe pusha and mov imul faddl in outsl xor mov mov add adc cmpsl sbb dec mov add pop push aam mov loopne xor pand repz scas aad lods cmp (bad) enter nop sbb and add pusha jne (bad) das pop xor sarb xor mov test jne pushf (bad) test rcrb rorl push test jae or or stos push and fadds ret (bad) jp inc fwait imul dec pop aas mov popf (bad) pushf dec enter mov int3 fcoml test sub and aam aaa inc mov sbb pushf cld pop push outsl les cmp sbb push and popa fsts lock mov stc mov mov adc sub cmp flds jg in inc aas mov sbb push push cmp ss sarl add inc jns test and pop mov std mov (bad) negl jge adc mov fsubrs mov (bad) stc adc imul cmp lds xchg mov out call test lods fwait repnz dec leave mov in (bad) dec or arpl sub xchg fsts add inc insb repnz push fs inc add lahf int loop cmp and xor clc jg jl dec sbb push cmp jp ss xchg push jbe dec cmpsl pop jle orl push ljmp inc (bad) push cld mov lcall xchg mov or pop and push inc iret add jp pop call mov jnp add sbb sbb (bad) mov rcll inc and (bad) pop and dec inc test jp shl or cmp pop out cmp or daa or scas repz cmpsl stos mov fs dec out hlt or and jmp add sbb into scas xlat adc outsl pop mov xchg sti fwait rolb clc addr16 push jle lds (bad) jmp lret pop add mov mov loope add fstl jle jl es push lds and icebp outsb hlt or fstpl cmp xchg add jg inc cs mov or inc mov cmp mov (bad) call les (bad) arpl pushf rcr fiadd insl int3 test dec dec dec into ds fucomp sbbl (bad) jno xchg cltd in or inc out jge inc inc xchg dec mov inc imul enter aam add fadds mov into push jnp popa sahf xchg jb jae daa pop data16 out inc sbb sub dec adc add add (bad) or nop add sbb inc sub pop dec mov into ss or and jnp mov push clc cs pop sub or pusha lret hlt or lock stc inc je call repnz test add inc addl mov (bad) cld jo nop push add incl in sbbl imull rorl (bad) lcall call je cld xor mov flds mov je inc sti xchg xor subl ss iret jp sbb (bad) and xchg andl add cs out in int mov js pop fmuls sbb mov loopne clc add xchg mov mov adc inc lock jl daa andl ss sub mov ret mov mov out mov jge add jmp inc inc push shr pop and push scas add add clc je (bad) enter sbb xor in aaa inc iret xchg mov lods inc add push jnp add imul std popf lea sbb movsl inc xchg mov movsb mov in sub adc inc jbe or xor mov and sbb xor insl cmp xor xor movsb (bad) sti arpl jo sub pop pusha fisttpl out repnz xor cmp push push test rolb adc xchg btc aad and jmp dec (bad) mov cmp add psubsw and hlt mov jno mov mov imul mov pop insl cli dec (bad) dec adc repz (bad) mov inc jmp (bad) rolb mov or jo pop push mov jle dec or lods push and stc mov inc mov mov lret or repnz push mov jle ja popa push stc mov je push pushf and loop cwtl xor mov ss andb add outsb (bad) bts inc cli pop or int3 neg enter addr16 std scas jg in push sbb adc cmp loop add imul std inc add mov lods jb ret stc loop or jne sbb and jo inc pop arpl fiaddl (bad) dec mov push cmp es gs dec jle sub sarl cmpsl arpl jno dec fwait mov sub jae inc jae and popa sbb mov push fdivrl and cmpsl fidiv mov add adc sub sbb jl inc in xor nop inc jno out inc mov xchg pop push out jnp add pushf fs mull mov mov out dec adc (bad) (bad) (bad) and pop adc add xchg pop adc roll xlat inc mov je jo jo addr16 mov add iret fidivr jns jae cld sbb cmp jno fldt push mov or mov popf fcompl xchg mov sub test movsb lea out enter inc mov xchg jo add jo push pop and xchg std ss call dec and add je xchg pop in loopne mov (bad) cli xchg popf pop fwait repnz inc sub cmpsb loopne xchg adc jle (bad) cmp loope test mov out addl adc jnp cmpl add jo jno in xchg pop xchg gs xchg jecxz and test inc in sbb cmpsb pop cwtl push mov xchg push push (bad) shrb bswap add jo push mov pop mov xor (bad) push lea add aaa dec mov push (bad) sbb aad fstp (bad) xchg psrad sbb stos or sbb sub (bad) fsub adc xor or cwtl (bad) push pop adc jg inc mov fcmovne jnp and outsl aaa inc sbb imul jp insl lahf outsl mov sub add xchg nop pop dec pop fstpl cltd inc fidivl fstps dec (bad) sti mov push std nop das fadds sub or pop push ja aad inc bound arpl cwtl leave repz sbb (bad) test arpl cwtl jae add mov shrl mov (bad) loopne mov fist test ljmp inc or jge loopne and int cmp daa lods sbb pop jb pop in mov insb jmp xor add pop (bad) loopne sbb adc sbb push mov imul mov (bad) (bad) cmp cmp push pop mov jae jno repnz es cmovge (bad) xor dec movsb add dec btr ds xor inc pop push mov and fnop je sbb or mov jle jae lcall and cmp add dec or scas es and add std popf lea lcall mov out fimull push les xchg mov into pop mov in inc ds xor and scas jnp pop xor arpl sti pop ss bound jae jno insb xor roll inc es inc je mov sbb fnsave subb dec add ss mov sbbl and out or cmpsl add inc inc out and int3 xchg mov in inc insb add jmp imul cmp or sbb andb test jns adc insb xor inc jne sarl jbe inc (bad) insl inc mov or repz jno std insb xchg and testl xchg insb or mov loope lcall sbb insl mov jbe push std mov lahf fyl2xp1 jbe mov add mull fs pusha mov inc sbb or lea add add xor pushf mov shlb out cltd or movsb ss xor ret or cmc dec fcoml and pushf loop repnz add cmp inc data16 repz (bad) mov rolb and pop xlat ljmp cmp clc inc repnz fwait lea (bad) jge stc sahf ret sti cmpsl xor mull insl int3 test dec dec pop into or push xor cmc inc mov inc mov rolb setb jae add adcl sub cmp je add insb inc inc dec cmp movsl cmp orl sbbb addl sbb jecxz cmp adc mov inc std sbb inc add mov insl cmp imul mov push aaa mov sbb sbb and mov mov mov add jbe (bad) addl mov sbb fs shll cmp mov cmc jl push cmp xchg lock daa jo or out mov addr16 jno (bad) push add dec mov push sbb inc mov mov subl jno mov mov popa add jg jge paddusb test subb leave add jb inc pop xor ret mov cmp add inc andl mov scas mov repnz or mov jle add insl mov sbb jecxz adc xlat ja je incl cmpsl and testb pop fisubr std imul pop or ja jnp push push and cmp loope push mov fiaddl or xor cmc sbb inc aam icebp mov jbe or cs mov adc inc jae sbbb cs das fiadd out cmp push mov xchg mov pushf lret add mov add adc sub sbb pop mov mov xor jbe sbb jge setp mov outsb les fcoms lcall ret jg mov jbe and jno enter icebp and add and xchg pop test xchg sbb jmp rdmsr cmpsl repnz cmp addr16 je inc out cmpsb in and int3 mov repnz cmpsl pop js and popa clc ja punpcklwd (bad) adc or sti (bad) insb jno inc divb fwait push out repz xchg bound adc enter loopne adc xchg mov jl xor decb sbb push add add (bad) mov js aas aam (bad) in cmpl dec mov cmp push les jmp push pusha mov mov popa call pushw test subl aad mov xchg in inc cs stc fistl mov loope or lock (bad) sar mov (bad) adc cmp insb test sbb adc push mov daa int imul (bad) xor push (bad) mov jmp push lock jecxz mov push les add xor xchg mov shlb fdivs and ret adc jo sbb movsb fistp pop inc sbb xor add cmp jo (bad) add repz ss adc dec mov or data16 sbb sbb or inc gs out mov cvtdq2ps or imul inc xor (bad) aad xchg push mov mov jg or push sbb dec cld (bad) add jnp push cmp push or xchg push mov xchg push and xchg nop add inc or lods insl ds xchg daa xor jmp fadd adc mov outsb imul inc xchg mov xchg addr16 jb repz jbe insl sbb cs mov ret ja inc cmpsl loopne xor (bad) setb imul sbb mov inc int3 andl adc rorl fcoml dec jmp popf in inc pop mov xchg daa cwtl out nop (bad) dec bound jmp test int push sahf clc inc mov mov xchg add (bad) add aam inc or js mov lods movsb add dec stos add sbb pop push loopne imul ret out add cltd (bad) jo sbb push ret sbb adc or and lds add lahf dec int3 ss aaa mov add xchg mov add int aam jno scas add mov sbb and push mov adc dec incb add dec and add xor lds mov inc js ret ret or dec mov pop aam outsl nop and pop mov or popf mov addr16 in push add inc mov push lret mov dec int3 (bad) icebp mov adc addr16 push and xchg or jg popa divl loope mov jno imul shrl (bad) add adc into cmp jmp cltd add jbe add jp jg addr16 test (bad) (bad) repnz or inc in jmp in (bad) in inc jae cmpsb mov stc jo xchg (bad) sbb dec add inc fist cmpsl dec dec out add add and js lea or in add sub mov (bad) jbe mov ljmp mov sbb jp int arpl out add inc es dec mov add outsl movsb fsubrl xchg (bad) jp or pop push fist cmpsl push mov jne lock mov ss and cmp inc in sbbb jp cs mov test scas xchg or out fldl dec (bad) or or (bad) ja mov sbbl pusha lds dec and mov mov je call and movsb pop je sti mov add imul je mov ss inc jnp or outsb xorl (bad) cli adc loop inc add sti dec incl ret aas xchg mov add jg inc push ret dec push movsl jecxz int add push outsb mov add dec (bad) cmp cs sbb sub fiaddl in mov aas std xor cmpsl movsb add mov mov in outsb sub add dec outsb cmc mov fsub xchg and add out push test outsb add out push incl or (bad) xchg mov pop add icebp incl adc ret addr16 test mov jno (bad) in sbbl pop and adc sub jle sbb push fsubrs jecxz outsb aam xor push insb fdivrl ds add sbb xor cmpsl adc jb mov rcrb cmp or dec mov add inc xchg xchg mov iret cld and push xchg fsin push xor ret roll cmp data16 ja dec popa xor jns or pop jmp (bad) adc bound hlt push add and push hlt push push sub lahf pusha faddl jg inc inc pop or sbb out (bad) inc dec nop inc sbb pop cmp insb and nop or sub mov adc test jo fnop subl xlat push cmp (bad) stos test popf fdivrs pop fisttpll lcall mov stos or push mov icebp xor pop and (bad) and (bad) in inc out mov loope cmova adc movlps nop pop mov cmp mov cmp cmp mov xchg or js lahf jp mov inc pop cmp xor add push aas or push add xchg sbb sub rcr mov add adc cli mov std lahf call pop pushf fcmovb lds lcall (bad) add xchg testb or jle lahf test stos arpl fiadd and push xor or lods sarl inc inc test icebp ljmp sbbl scas mov push test inc pop jmp ljmp jb push inc insl xor scas and or mov inc andl out inc cwtl pop push adc add and pop or (bad) jl sub sbb cwtl inc dec push jae jo and inc inc cli jb incl add sbb or outsl jmp ret jp rcr cmc mov fwait cmp and push incl or cmc xchg aam xor jg sahf in ret sbb bound sub mov sarb test stos cmp pushf cli mov dec iret mov js je mov mov sbb pop popa test or out rolb or cmp leave add sbb jno les pop mov add mov or (bad) repz out sub ds adc outsb out inc push jp outsl add in popf call fstpt inc popf and mull inc push or inc mov aam sub rolb cld xchg pop aam stos inc jg add ljmp in enter cli leave add fbstp fidivl xchg or lcall jo jb xor xor (bad) inc leave add adc daa or popf adc iret out inc movl imul movsb adc in inc xor adc jo fiadd outsb popa add xchg scas xor cmp jb or je insl lahf inc or incl add sub and mov inc lods adc mov or adc inc inc lods ret imul call pop pop push sub xchg add les mov and ret aad int push addl rcll imul sbb inc or xchg ljmp adc dec or cmp test enter gs (bad) dec fidivl add test sbb add cmpsl cmc add push push in cmpl inc nop or sbb sbb adc sub mov repnz js push mov mov movsb and jae add popa xchg outsb scas pusha icebp std nop cs call push test sbb mov push in nop and jae sub call mov fildl sbb bnd inc adc inc int3 js psrlw andb loope xor enter in jno scas loopne ja inc (bad) sbb mov call lock insl or dec loope adcl xor in xchg adc testb mov rolb addr16 repz push mov xchg das sti fistl es mov fsubp lahf rcrl movsl mov cwtl mov dec push sbb mov inc (bad) xor movsl dec mov (bad) lcall std mov rcrb xor hlt inc inc pusha jo lock cmp xor std test mov sub fnstenv or xor mov les iret add mov xor loop inc mov jg testb (bad) mov xor cmpl test mov movsb fwait sbb bound shr imul mov add lcall dec out mov cs lods ljmp jmp outsb pop push sahf cmp jbe nop jns shrl and xor pop pop in roll daa mov sahf cmp jo scas call pop dec inc rolb mov pop and add xchg mov xor inc lret test inc repnz fdivs pop dec pop inc aaa mov dec adc stos shrl call lods outsb push aaa iret stos xorl xor add adc sbb pop aad cmova and sbb nop ret inc pop mov push and inc and lock cmp test in inc inc aad and jb ret mov pushf decb lds imul mov add je sbb push add jge fmulp inc fildll push pop xor push push into (bad) mov jno out mov adc (bad) xchg cmp xorl daa scas in mov test push daa (bad) mov cmpsl mov mov jge mov fnstenv pusha jns out xor pop mov sub decb push mov hlt mov rolb ret and mov test negl sti pop lahf xchg or jg dec mulb mov aaa cmp outsl xchg adc add inc mov insl mov out mov mov (bad) jo adc jmp enter cmpsb loop add cmp add std and (bad) xlat sbb or stos sqrtps je ss and pop xchg add les adc incl or sahf leave sbb adc sbb xchg rcrb mov (bad) dec adc sbbb mov int3 or mov rcll jae dec adc cli aas or addr16 xor mov sub fisttp leave pop scas mov leave ret shlb mov aad or or in rorb lds cltd movsb push xchg aad pop out inc push pop or push popa add loop fs cmc roll stos add and cmp cmp cmp xor dec sbb cmp mov loope jae sub mov pop adc push scas jae in daa adcl xchg or mov mov push jno mov test add xor lds movsl (bad) mov (bad) push or pusha sbb subl inc mov or call mov movsb aam mov jns int clc call leave pop cltd pop inc mov xchg add shr (bad) divl std nop mov stos inc fistpl mov lds icebp incl adc outsl daa xchg and and cltd inc inc sub sub testl or inc cwtl into mov in jae in sub imul cld sarb cltd mov scas dec pop call addr16 insl or xchg jge repz or stos mov sbb mov incl lods call (bad) wrmsr xorl mov pop jecxz sbb nop ja pop flds push sahf xor or into and stc incl sub xchg imul fiaddl pop scas adc cli and or cwtl mov mov ljmp mov dec push (bad) out mov xor fstpt jl dec push stos dec insb sarl roll jmp inc cwtl fnstcw add outsb lcall jo mov enter sub in mov daa mov pop imul arpl pop and outsl outsb sub fimul les inc orl xor les cltd int3 ja out xchg arpl (bad) (bad) add add cmpsb push outsb xchg pop fisubrl cmp sahf pop sub fdivrs mov sbb ja pop fwait inc cwtl inc dec pop push mov mov and popa jg flds xor or sarl gs and lock js test xchg mov mov ljmp lds movsl fwait xchg lds xor loopne sbb xchg out and mov andl inc or push sarl arpl sub sub shlb jl push pop mov dec aad int mov add jge pushf rclb sarl inc lea add jno dec or dec loope jae push test mov xchg or js (bad) dec adc popf cld shrb or mov out add (bad) enter out stos mov mov dec lahf mov inc int jp into les movswl dec stc and push push adc or into aad faddl add mov fiaddl sbb out inc pop scas add mov push cmp outsl fiadd outsb popa add pop dec or les bound popf mov mov inc push fxtract inc mov xor mov popf and aas lcall call mov roll jae jecxz,pn and pop lods stc and xlat xchg add les scas orl adc popa cmp mov subl rol ss mov stos out aad add adc in cltd inc shll enter cwtl inc aad or jmp adc sbb hlt inc dec jmp and nop jg pop mov mov xlat adc mov fisubl xchg or mov ds or movsl cld ds adc push shl std sbbl mov jb push jle mov shlb add xchg push mov sub int loopne add out loopne pop add or lea xchg adc xlat mov les ror mov cmp roll pop ja stos add cmpl inc icebp jp into enter gs orl add adc mov add inc pop ljmp lret int int3 (bad) subl mov xor popf lds je mov mov fwait mov call push mov (bad) jb outsl lcall sub nop add add xchg mov mov jg add push enter or (bad) mov stc sbbl push lock insb ljmp sub nop push adc nop xor add xorl add in xor stos mov mov push sub ja add lds test jne (bad) lock (bad) loop stc mov mov popa ficoml mov or pop mov pop clc addr16 (bad) shlb pop mov fistl ffree dec jo dec into stc popa and mov jno mov mov pop out jo mov testl aaa mov aam negb dec add out imul mov dec ret mov (bad) mov loopne sbb cmp orl or mov fstps pop pop rolb xchg cld mov leave mov ret push xchg mov sbb shrl or sarb pop aas cmp sar add dec mov (bad) jne adc gs sub test jb jae (bad) cmpsl imul loop push stos test pop loopne leave inc (bad) aam add outsb outsb inc stos mov ja int setl in cmp mov or xor fsubs xor (bad) push cmp loopne fbld mov int call and xchg sub xor add or lds rorb xor mov clc ja and push push xor out cmp inc push popf sub mov insb jp mov cmp adc dec inc into sbb mov enter dec xor push in push mov mov pop out in sbb pop ja loope inc push inc ret dec ficomp fs add pushf cmpsl std cmp pushf pop inc mov cmc iret mov repnz shrb mov sahf and imul pusha (bad) xchg cmp test test repnz lahf and or cmp push insb sbb pop mov int (bad) iret lock mov xchg xor mov cmp mov lret cmpsb jno jne xor fist lahf mov je pop mov mov mov insl xor pop cwtl jb fistp jle lahf scas in jnp fiadd and inc jne sbb jns int out xchg repnz nop push inc adc cmp inc lea mov int hlt inc mov mov and or adc les fstpt int lods pop imul outsb adc (bad) lods sbb cmp aas fldl (bad) (bad) int3 jbe pop out sub mulb (bad) mov sub xchg push add mov pop inc cmp push fs jns fldl inc test (bad) adc (bad) divb bound popa aas and rol test out into mov add xchg (bad) mov dec aad jne in sub xor aas shlb add cmp inc in aas in jae daa mov push dec (bad) je mov xchg mov loope inc sub add insb push les adc int3 mov outsb and in int cmc scas out sbb subl shl push or push je push mov data16 loope lea xchg (bad) pop and cmc jg push push nop imul mov mov (bad) xchg daa or and mov sarl lret mov inc idiv mov inc pop (bad) clc xor add sarl push andl pushf je aas or in lods add (bad) pop nop push cwtl fnstcw jae aaa fldt mov jg out jno or std js cltd loopne xor xchg jp mov and pop mov jne pop insb inc or rorb mov cs into ja aas pop adc mov adc clc (bad) fsubl gs and das mov cmpsb pop loopne or (bad) popa mov push or jo rclb and scas adc or into or inc stc and xor pop jbe insl inc mov mov and push neg in pushf dec adc xchg dec jo jno or pop dec jns (bad) xchg dec sbbl sbb rol pop mov (bad) mov loope arpl push push ret xchg add mov loopne add data16 out push in je push sti sbb in jb pop push das dec (bad) pop repz in repz jne insl dec dec loopne sbb adc (bad) enter xor sarb ds sbb dec mov frstor pop mov aad pop jbe add nop add ss insl fadds jge mov ja loop or sbb xchg sub cmp jmp int3 mov add int setge out mov int3 jl push add jbe mov insb push xor inc jp lcall jnp or test leave inc lcall pop mov in inc jnp shrb mov sbb dec pop pop pop inc lock std xchg fiadd imul pop jnp les push push mov data16 enter mov mov add adc adc adc jo,pn jge add add ret sub mov roll push inc add push mov inc sbb les mov xor adcl mov repnz int3 ficoml add pop outsl clc jbe inc cmpsl out mov ret push xor pop xor call push jge sbb sarb xor push jo addr16 inc add adc add inc mov xchg mov adc or movsb add xchg or push icebp mov andl jbe mov push jno xchg dec sub xchg ret xchg mov jb leave add orl jns popl jbe lods mov inc jns (bad) pop push xor cmpsl dec or mov dec cmp add call mov or mov push sub int3 adc mov pop clc jo pop add cmpsl adc mov das xor xor call xor push out popf lds je mov mov inc pop ret xchg test scas jecxz or sbb jge inc mov ret pop mov je cs cmpsl inc clc jl out push push mov mov popf int outsb jns sbbl sbb and in mov lcall add cmp int3 and jecxz (bad) pop and adc mov pop sbb mov (bad) fisubr sbbl sahf sub fiadd inc dec sub bound pop or and faddl push flds jmp sbbl fdivrl or loop lods enter in adc incl or xlat test lds mov adc dec mov cld and imul mov loop xor dec (bad) add in (bad) loope pop push inc xchg or sbb mov and sub inc adc into enter sbb dec pop or outsb in shlb inc add sbb repnz or inc cli jge jae paddb dec clc addr16 jae daa or dec jne pusha inc ret iret add dec rcrb sbb incl test js pop pushf mov in mov dec out outsb (bad) fs sbb mov inc scas adc mov push sub sub js or xchg inc sbb inc mul ret and (bad) pop inc ds imul call out mov mov xor outsb out repnz out scas dec pushf movsb jns out xchg stc pushf xorl icebp inc (bad) mov or movsl add stc mov insl add ds ja or incl das push lahf mov into loopne cmc fidivl imul jo inc push dec stos int and jl add or sbb or push cli mov nop loopne xor out cmp (bad) call sbbb sti rolb (bad) (bad) lea or fsubrp icebp mov push adc mov and lahf scas xor ret jecxz adc push insl push lret pop push push inc push and fiaddl and lds call jbe mov mov pop bswap xor jl sbb subl sub insl jecxz inc mov sub loope and ds or outsl xchg repnz gs sbb lcall je in sbb int sbb dec cmpsb dec mov add mov mov push stos faddl cli and xor inc lea pop dec or or xlat push fcoml push arpl xor push pop ret iret sbb or add jns inc adc ret popf mov jno test outsl roll xor rclb bound jns sub mov gs cmpsb dec int jnp pusha ret inc pop mov mov hlt negl xchg push aad dec cwtl xorb or sbb mov xchg (bad) aam gs outsb (bad) sbb xor orl flds xchg fildll ss ficompl or inc inc lret std test popa and cs fldl fsubl movsb lahf (bad) call lcall ds add in rcl lods out sub xchg stos iret enter xchg inc imul enter cmpsl sub mov hlt push fwait in sub push add sbb push jns nop xor or (bad) (bad) nop dec fiaddl leave xchg adc testb adc or mov cwtl pop pop or fcoml jno cmp je mov ja mov subl cld nop aaa inc aam cmp and fistl lock sete xchg dec dec inc fldl ret lahf incl outsl jge call xor test and fsubp fstpl xchg mov and adc xlat or inc inc dec ljmp outsl addr16 xchg lock push loope push test xchg ljmp mov scas int3 sub add sub mov out dec dec xchg insb in push inc arpl mov std popa xchg (bad) insb cmp add imul push rol fstpt mov xchg and (bad) jbe insl sbbb aas ret inc das mov push (bad) lahf sti and sub fnstsw js fldl dec pusha je lods pop enter loopne (bad) jns sub (bad) add xor incb sbb test clc xchg out add xorps das (bad) int3 add lcall (bad) sti lret dec jmp or or jno add fwait adc add mov mov xor mov mov cwtl ds and add ds adc cmpsl cmp inc insb in jb movb jmp test (bad) jg or inc xor pop mov cmp fsubl cmp out orl into pusha data16 je imul mov sub pop mull imul inc sbb sbb (bad) or test shrb in sbb xchg xor lahf je pop in outsb xor in xchg add fbstp arpl inc add sbb lret test js sbbb xchg add push out inc push push xchg pop arpl daa fdivs ja adc insl xor xchg push lea stos push xlat mov rcl fs push pop mov mov mov cmp arpl jbe aad add add xchg sti mov test outsl push rorl imul dec daa jmp add fisubl fcompl mov sub lahf pop leave push push xchg dec mov mov add cmp dec in loope mov pop in mov dec and and scas xor sub add out sub stos lods or mov xchg jecxz cmp adc pop icebp and push adc cmp outsl mov and aas xor loope inc jne shrl nop jae mov dec ret outsl pop lcall inc loopne xchg (bad) or cltd lock inc mov addr16 pop mov sbb lcall jno mov dec insb imul dec add mov aad mov inc jp lahf push mov (bad) jae inc adcl dec mov ljmp sub notl (bad) lahf leave add mov and sbb inc cmpsb cmc xor and mov loopne sahf in jmp jne inc inc inc or cmp mov sub rcrl add xchg jb (bad) (bad) mov cmpl xchg addr16 addl mov leave out inc mov inc cmp add addb popa cmp insb (bad) xor ja lahf (bad) xor mov add add push dec cmpsl cld pop repz xchg daa ljmp and inc add pop mov sahf push adc push sbb dec clc mov incl mov les (bad) ds or xchg add into and stos or and loope jp jne out aaa cli out inc je dec mov ds fdivrl inc enter repnz xchg or sub mov jmp push cmp jbe incl mov sbbl add je lds inc sbb test sbb inc sbb cmpl mov (bad) sub sub dec dec mov jno push in (bad) pop mov add popl mov dec pop pop push xchg roll mov or dec lock mov fdivrs (bad) adc sub add sahf sub ror mov adcl lods out aad sbbl insl cmc jbe sbb popf rolb sub nop (bad) (bad) jae orl ljmp faddl dec fadds adc jns je cmc leave push bound movq leave pop cmp xchg or add cmp sub outsl enter (bad) std outsl inc inc and xchg lock les imul and popa add ret out scas sbb sbb lods mov add sbb ret popf sti scas subl icebp in inc mov and fdivrs imul into mov scas cld mov je adc test xor sti mov pop jno test inc clc std test in stc xchg sbb adcl enter or in loop and inc adc xchg insb (bad) mov mov rolb inc dec clc dec sbb push outsb jecxz mov xchg mov bswap add sub faddp push enter add aaa inc roll icebp sbb loope sbb xorl jle xor sbb test inc daa adc pop lcall test or adc or imul xchg lcall or xor xorb sbb sub push inc sub into daa mov mov mov loopne add or fwait adcl mov test add mov rclb push and orb xor aad inc daa insl xchg xchg adc push (bad) jmp xor fiaddl cmp or mov iret mov push (bad) sub mov sub dec mov pop loop mov stos ret imul punpckhdq push les in sbb sub cld (bad) jae mov ja cli movsl push or adc iret aad mov add mov inc push les lock cli jg or movsb (bad) popa add out dec daa (bad) jb inc into ljmp mov mov mov lods jecxz mov and sbb outsb dec add xor jns cmp loopne xor add dec dec aam loopne or inc movsb mov fdivrs and mov push xorb outsb jo add inc mov jb fmulp les daa jmp add push cs lahf xchg or rolb mov fwait adc (bad) xor mov mov insb fldt or xlat cmpsb jg xor sbb faddl xchg add or pop dec (bad) fxch mov inc add adc mov movsl pop sub xor rclb push mov je jno jmp sbb icebp pop fimul js imul cmc inc pop insl in lcall inc nop dec in daa loop push in into ror mov fdivrl jp ret dec cmp cmc inc std sbb sbb stos push push add pop pop push sub sub popf cmp push stc inc dec mov xchg inc sbb mov rorl mov add rorb leave add sarl pop clc mov sbb repz sahf adc inc (bad) aam rcrl cmp in adc xor inc pop mov xchg ja push jns iret xchg dec outsl ret call add leave test mov xor or xorl outsl fiaddl xchg cmp stos jo test ja mov mov in nop add or imul mov pop add inc sub clc aad imul inc ljmp lahf pop jge arpl add int3 addr16 rcl movsl sbb add enter mov mov ret (bad) std lcall aad jmp lahf mov xchg popa xchg jmp (bad) mov mulb dec add cmc insl inc aas mov icebp mov enter (bad) push mov xchg inc prefetch add cmp repnz xor push test dec xor in repz lea pop negl sub xchg iret xor push ret rol ret bound rolb inc (bad) out std rclb daa in aad icebp dec in mov push (bad) mov sbb inc enter in push incl or or ret cmp and add out pushw push adc adc sbb testb dec ret arpl loopne and (bad) mov or inc sbb mov inc sub dec xchg nop insl lods mov fiadd pop dec ss jne add lds imul (bad) movsb sbb rolb and test (bad) enter mov add out jb stos dec daa into pop andb lahf fldl mov sti and fs lock push fstpt idivl add mov jne aam mov sbb or or xor and pop pop popa add pop ja jbe adc notl dec push pop xor ret adc mov je xor adc sbb sbb push mov sbb mov repz in ja (bad) outsl arpl enter mov nop ss push or xor or push lods (bad) popa (bad) mov pop cltd sub int3 mov inc or push cwtl fmuls inc fstpl jecxz fidiv sub frstor out sub push and sub inc cmp inc jle insb dec cld movl (bad) (bad) aad add mov out out cwtl jno mov adc dec (bad) xor mov fwait shrl add sarb jnp cmc cmp jae movsb jb inc inc add push notb cmp and outsb negl test xor pusha int inc mov aas lahf leave add pop cltd cwtl add fadds add dec push ret push mov sbb and mov aaa cmp and mov and lret popf (bad) or rcrl inc push pushf add incl push inc dec dec (bad) out inc dec sub test loop fwait insl mov pop cltd cld and shlb bound add dec mov and and mov or push sub lcall jg push xchg fwait cmp xor add psrad nop dec loope sarl sub cmp lea and test mov xchg or fsubr in les out lods loopne inc int jns inc mov arpl loope inc test push (bad) pop and mov (bad) xchg add jno xor inc movsb push (bad) in nop add sahf daa mov dec ror mov add mov fisubr cmp jp hlt xor xor jns add jecxz je faddl jo inc outsb outsl mov push icebp sbb mov data16 cmpsl sbb in lds scas push push std xlat inc cmp daa pop shll (bad) mov cmp test daa jmp xor int inc std shl xorb jbe bound xlat sub dec (bad) push add ds dec sub add repz out mov (bad) cltd mov ja pop cmp fldenv xchg lret push cmpsb (bad) ja rorb jp or in loop and sub inc and cli icebp inc cli pusha popa loopne in or mov lock mov call pop in jp ret inc mov dec mov aaa mov push mov cmp nop sub push pop repz mov push push mov daa out stos mov sti rolb (bad) or (bad) xor leave add test popf loop bound mov sbb divb enter dec (bad) dec adc or xor inc cltd ss sbb les pusha mov clc and enter sub cmp sar (bad) in inc lods das loope dec mov subl add pop cmp (bad) cltd ja mov dec in inc lret repnz push lock inc cmpsb es lock (bad) xchg sub nop das jle add bound mov and jbe add insl leave pop push xor or adc inc sub ljmp push add mov lods sbb push sbb cmp ss mulb jne adc (bad) dec clc jl arpl mov mov nop icebp cmc mov and add lock mov cmpsb add or pop xchg aad pop mov and or orb jmp inc ret or fwait jge dec push pusha jle inc sbb mov xor inc fld test ret data16 mov out mov inc inc lcall cmpsb sbb jge fadds add sarl movsb pusha jecxz inc jb mov and das jle jnp (bad) xor into mov dec in mov (bad) and dec jmp inc loop mov cmp push (bad) mov sub push shlb movsb and dec out inc rcl faddl mov inc outsb mov popf test lods idivl cld xchg in hlt inc aas mov fildl in hlt inc mov fbstp mov mov dec decb cwtl lret scas adc mov inc ljmp popf mov push mov dec popf aad int3 icebp cli sub pop fiaddl adc push sbb scas and inc shr mov fs jo pop pop or flds je cmp push adc test (bad) xor movsb jmp jnp inc in add iret and mov sbb or sahf fcomip xorl mov add adc in xor push jle mov stc xor arpl popf loopne inc xor cmova mov mov gs outsb mov sar xchg or stc call xchg dec jge inc imul adc sahf sbb loop sub add mov shll cmp orl mov inc (bad) (bad) ficompl mov stos or pop outsl cmpsl xor je adc cld nop jp incl xchg sub and mov ljmp push (bad) ds cmp cltd push and sub (bad) pop test inc cmp int stos push int imul sub dec jp xchg cli xchg inc jns mov fist cmp push or out daa jno xor cmp xor add adc (bad) shl adc add loope int3 jmp std leave push sub ljmp mov or lcall and xlat (bad) push aas sub sti cmp aas sub push fisubrl aad and xchg nop dec dec push mov (bad) add jno inc mov pop push outsl lock in shll dec sbb xchg cwtl fadd flds out movsb push outsb inc pushf inc sbb pop outsl stos daa jle adc outsl mov insb loopne jg inc stos lcall inc (bad) ljmp fidiv mov rolb add inc mov in xor sub nop negl lahf incl fistpl adc iret mov pop scas pop sahf call icebp jg push jmp pop mov aam ss js fldl into jnp lcall fs xchg adc ret imul add jne lahf cmc pop aad sub xchg fwait rcl xor (bad) pop and loop (bad) je add subb ss dec mov ljmp sbb jle incl sbb mov fidivl mov push test jb shrb out loop je int3 push arpl in sti dec loopne push xchg xor cmp ffreep pop and or sbb mov pop mov xor lret testl fcoms cmp dec or jle add test repz lcall (bad) aam inc ja or jae loop pushf das pop xor data16 push mov (bad) es push mov out nop addr16 push mov pop jmp mov push xchg cld mov lahf fnstenv inc dec jnp cmp jbe mov lea jge xchg jns call pop in imul push rcrl dec mov push fcoml dec in mov sbb icebp mov sub jbe incl mov xor mov repz lods data16 xchg enter xor dec mov mov and dec je fldcw aaa inc outsl mov add mull scas dec mov (bad) dec incl in into out nop dec in popa and mov mov ds and test mov adc das mov xor rol shrb jno sub inc adc fdivl (bad) xchg mov xorl push (bad) sarl ljmp lods in es clc xchg (bad) sub mov orl fistpl and cs pushf mov (bad) or stos pop mov inc popf sub mov inc push mov lret insb pop jmp sarb test out add addr16 daa testb lcall push pop cmp inc in sbb jns sbb inc daa jl andps stc adc jge inc lret sti sar add mov push sbb mov aam adc cmp jp jno mov rcrl inc push lahf lock add ds fadds sbb leave fstp (bad) lods xor xchg xchg mov push stc outsl in inc mov jecxz or pop or andl imul ljmp pop (bad) in xor cmp nop jp clc add enter lahf jp outsb mov aad xor xor (bad) dec std ja gs xchg aam ret jno pop popa inc es lock mov push mov rcll sbb sub mov incl mov mov in popa ss jne dec out xor inc push cmp sti xor lahf fldl add ss inc pop popa ret adc add xlat pop sahf jl and dec loop mov test sub sbbl add sub (bad) in xor add fimull or cs mulb (bad) pop push or add (bad) xchg stc mov mov imul std ss xchg or mov and (bad) call sahf push inc enter addr16 pop sahf scas fcoml xor or popf insb inc xchg or mov pop aas push mov mov test pusha and mov jb add movsb or cmp and cld rorb and pop repnz mov cs inc cs inc jb cs inc call mov pop pop push xor lock xor add or pop xchg aad adc xchg pop cmp popa add and add lea out ljmp adc out push insb mov push jno mov jecxz inc cmpsl xor sub fisubl jge add xor and sbb ret movb jge popa inc mov mov or cmc iret das xor js repz lahf pop adc mov inc mov xchg jae xchg addr16 adcl cmp cmp addr16 add xor inc ljmp fwait mov push pop cli inc jmp push cmp push xor add iret jl and cmp mov adc fdiv xor and push jo js arpl jb xchg add cmp mull mov pop dec mov int insb in mov inc sub pop push stos in fprem test and imul daa dec cli loop xchg jle repnz cli out inc cs add mov subb sar cmp addl push push add sti rclb inc clc ret sub xchg and addr16 hlt repz adc add xor movsb stc and (bad) inc aam roll and and sbb insl dec cld mov (bad) rcl push push fwait out (bad) pop cmp rep in int pop mov arpl (bad) mov addr16 cmp adc pop decb mov push mov sbb and mov insl mov inc bound dec pop and (bad) cmc mov outsb hlt or out in push inc jno test xlat mov ja xchg or adc cltd insl sti push insl inc lds adc cmp jmp push pop push and push xchg adc xchg pop sbb nop sub mov call or cld and and mov int xchg (bad) sti and add call out sub mov shll mov inc lret out mov sub outsl dec fdiv dec mov push pop sti mov hlt outsb cmp add inc lods sub ja test add sbb (bad) jae xlat (bad) or mov pop addr16 movsl add aas push jle push cmp sbb ja push cmp lcall mov xchg push icebp lods dec je test daa push stos jg lock nop xchg dec xor xor mov or (bad) shl and mov adc cmp add fsubl cltd (bad) rolb out stc xchg add out cltd cli dec stc mov mov push inc les ds sbb cld push pop mov mov mov scas pop stos bound mov jmp (bad) out enter call jnp inc sub or xor rolb pusha xor das jb fisttpll data16 adc ja cmovle sub ret mov das lock sbb pop adc bound push repz mov rorl das mov pop lret mov or in rcll inc popa movsb mov inc testb push in xchg or sbb lock cmp movsl push ret sbb xor add sbb outsl iret cld mov push (bad) and pop and or addb imul adc mov push jne pushf sub es idiv nop jne xor subb and jae xchg fistpll pusha imul movsb or into add mov rorl pushf add cmp mov fs sbb out pop cmpsl pop je mov jp enter jb in inc inc ds mov imul mov and pop pop in pop lods jae loopne fisttpl xor dec xchg mov mov pop (bad) shrl inc push fildl popf sbb sbbl add sbb adc or mov mov xchg (bad) iret mov icebp cwtl ja mov and inc rcr jmp nop jo mov aaa fstl add cmpsl jne push jns iret clc push ss add pop mov jl fwait mov add and das add cmp sbb inc lea mov and ret aam scas in add push (bad) push lahf in out enter sub ja inc ret mov into hlt add loope in mov xchg inc or or fcmovb pop add mov (bad) daa out lret sarl (bad) or loopne push cmpsb xor mov sbb incl scas push loop xchg mov and sti inc rcr jo add leave adc fsubl add arpl loop xor mov aad nopl mov ja xor dec daa pop add out mov imul add push inc pop and jg mov lods push xor stos dec fstpt mov mov or rol pop mov inc xchg xor xor in and mov mov mulb insl sub test lahf fsts xchg or loope ret arpl call sbb (bad) das shlb inc add cwtl fadds fsubr or lcall ds add cmp test icebp ret stos dec (bad) and and jns int jbe push aad push sub or (bad) xchg cwtl int sub fnsave (bad) lea xlat sbb pop pop cmp mov mov fidivr adc in or enter sbb andb xchg or sahf push push mov aas xor inc or movsb jae jg hlt (bad) add daa mov xor into pop pop mov aaa dec xlat mov push outsb xchg sub push xorl and data16 (bad) ss dec pop fisttpl add add shrb cmp mov mov les out sbb clc pop mov add (bad) jb je outsl and adc dec (bad) mov rolb dec sub stos pop push mov dec adc std ds insb (bad) push adc cli test mov ja in xorl cltd pop imul sub incl insl shrb sbb les jnp mov jle (bad) xchg inc dec xor sbb cmpsb jg mov cmp add out xchg ds arpl lds and (bad) sub pop xor push push xlat adc mov lds je outsl arpl in outsb aaa out fnstenv and test and or xchg js pop loope jno mov dec loop jb fnstsw dec add int mov or jl (bad) adc xchg das adc leave jmp int imul pop rcrb insl dec sbb mov fs and (bad) xor pop (bad) sbb xor xor inc add add bswap test push scas xchg cmpl sbbl stos or push pop jae shrb mov scas stc mov and xchg xchg incl test xor jbe push mov pop jp xor mov inc dec xchg dec add or int setp dec call and test stos mov xchg inc adcb pop fiadd nop data16 lock imul push sarl push push xor xchg test das rorl arpl mov psrad stc pop add roll or fwait mull (bad) stc inc adc stc jbe and icebp or out (bad) ds leave pop cmp mov pop xor sub outsb inc jmp and mov jle add rcr pop aad (bad) jo inc cld add pop add out mov andl rclb and sbb arpl mov push repz adc add jl xor jmp ljmp and imul out ja jg mov and jmp adc cmp loop or and (bad) cmp add pushf bound mov ljmp nop je add dec bound mov sarl addr16 sbb pushf mov xor and push mov push sub repnz enter push jno mov in inc sbb in inc xor jne dec adc (bad) call test out cmp in sub lahf jle cld rclb pushf bound jp (bad) jl ret push lods jnp xor les push xor adc jne mov (bad) sbb push sbb movsb dec fnstcw mov insb inc inc cli and pop mov lods mov push jbe cld les sub push mov xor and ja aad gs pusha aaa (bad) testl or jnp adc jecxz loopne pusha nop add (bad) pop cli mov inc cmp inc pusha sub imul cmp adc stos mov (bad) cli sub test xor mov cmc inc mov mov cli mov mov jecxz or nop sbb sbb mull cmp out faddl nop push mov outsl xor mov dec pop and and jno xchg add and add push sbb pop mov sarb fwait mov pop cmp in cwtl loopne int3 xor int (bad) (bad) in dec cmp cmpsl roll xor add jns lods jns and rcrb lock mov xchg inc ss das add pop ja les mov call in repz rcrb push mov xchg (bad) pop push rcr mov rcrl addr16 stos pop mov addl or inc add sbb or lods sbb lods pop pop call jbe cmpsl pop sub sub or add addl lahf mov cld mov mov and or xor mull mov mov and add sahf cmp test mov (bad) rcl fnstcw ret mov ficomp add push sbb xor addr16 int3 jbe jnp jbe inc sarb in subl (bad) pop bound add movsb loope (bad) das fldl xor mov xor loop adc and inc ret mov inc ljmp (bad) mov addr16 js pusha ret mov inc in cmp addl add xchg inc add test movb pop fldl les jbe xor jl inc shr pop xor stos gs mov inc adc push js mov shrl ja pop insl in aaa add sahf and fstps push and pop adc es dec jecxz xchg stc and mov mov add jae daa mov xor loope xor dec mov dec jne dec hlt add movsl mov mov (bad) fildll test cmp mov test testb stc ds notl or jo pop pop incl repnz iret add inc cmp frstor fwait jbe cwtl mov xchg dec rorb hlt push loop ret mov and mov cmpsl hlt mov sbbb dec push jmp mov mov xchg xchg mov subl sbb jo dec and sub dec jge jnp add je push mov pushf inc idivb push loop pop movsl nop xor pop shll push xchg stos mov inc cwtl out fidivr add cli nop push ljmp pop insl mov data16 (bad) loop fdiv adc jmp xlat icebp xchg or mov sar and inc xor es incl push inc pop in mov xor sub sbb sbb cltd xorl nop out js loopne btr add icebp inc inc ds cmpsl push hlt dec fwait cmp js icebp inc mov movsb sub pop movaps jbe inc adc cmc sbb imul adc andl cmp pop mov dec fnstenv leave pop nop xlat or jle das jbe push test iret roll out sarl test clc das sbb rolb int3 sbb adc adcl or faddl adc add out sbb mov ja add fimul push sbb push mov stc and add daa mov fldl sub push je pop jg add mov fstps dec cmovae ja out adc repnz push jbe (bad) (bad) fcmovnbe push aas adc xchg movsb jno mov cmp add fadds lahf movsl add cmp jp loopne and out shlb mov dec ret stc outsl into inc add push insb mov pop inc sub insl sbb jl dec movsl xor jmp mov and and push push out addr16 mov push fstps mov mov fisttpll or mov imul cmp clc inc xor or inc js adc pusha or out push test or outsl push cmp dec (bad) bound mov or and mov out repz pop cltd push add mov mov cmpb cmp mov pop mov add mov sub sahf inc in cmc lret ficomp les fidivl inc mov jo cmpb adc imul out stos xor mov inc xor imul pop jo push mov andl jae popa aas xchg add adc pop and add bound sbb sbb fadds mov jo (bad) dec addl jns dec or xor and mov loopne fsubrp mov sub sbb push mov xchg punpckhbw nop gs xor dec aas icebp inc ljmp in mov mov roll sbb jle adc or ljmp js sbb add cmc fwait dec shrl add mov hlt or aaa fimul cmpsl push sbb adc rcrb outsl (bad) pop testl sub inc pop sbb lods (bad) enter jmp (bad) scas stc and sbb jl sbb dec jmp add dec cmc mov arpl push push inc fiaddl leave xlat fnsave outsb pop pop adc push sti mov jns and repz inc pop jp dec jmp inc sub jae push mov add imul dec loopne xlat jae mov mov add jbe nop xor (bad) in ds or add out subl shrb lock sbb or int3 shr inc push mov inc pop jae jne cmpsl pop (bad) or insl xchg incl mov repnz (bad) addl jg imul frstor sub push sti xchg jne or and inc divl movsb add pop add cmp dec sbb cmp dec outsb mov jb je sbb inc ds dec lock dec cli adc ret mov (bad) and add out add lcall mov push movl push aaa jo push inc xor into sbb mov or push sbb and or or (bad) push or mov dec lcall ss sbb lcall shll push and arpl jecxz (bad) lcall mov jnp rorb xor addl sbb jne or xorl aad rclb aam or cmpsl xlat sbb push popl fidivrl sbb push lahf stos mov push sbb cmp inc lock (bad) xchg (bad) aaa jle ja shlb lret adc orl ss push imul jne bound sarb or add dec mulb push aad xchg inc data16 pop icebp sbb mov fiaddl test loope and mov inc call xchg pop xor sbb cmp fldl jmp (bad) cwtl sahf dec push jp jl pusha ljmp int xor insb cmp adc sbb insl je push mov (bad) jle mov ret jne rclb fwait cld cmp lahf push push mov roll aam fwait push fldl insb (bad) int3 (bad) cmpsb cmc addr16 and adc in cmp aas icebp inc in sbbl sbb cmp and inc xchg mov in or loop or sub lret mulb xorl add lods cs popf adc test inc mov sbb jns (bad) cltd mov dec adc repz (bad) pop stos cmp enter pop int xchg imull dec jns inc cmpb or lahf adc pop pop les cld dec js ret fwait mov xchg xor jae adc pushf hlt pusha out popa add cmp cmp std enter and pop sbb btc sbb xor xchg (bad) call mov add pop inc inc lea cs sub clc jo mov repnz inc aam call lea dec xchg (bad) pushf jecxz mov adc and xchg sub aaa in or dec push loop shlb jae cmp in add sub test xor add repz cmp hlt out testb pop ja mov add lock test cmpsb pop jo rolb and pop and inc int loop fimull or add sarb push inc test es xor in sub test adcl in bound cmp pop sti mov loopne lcall or les push or in add lock nop sbb cli xchg sahf clc inc es push mov or push push insb and add push or or jno lret mov jp xchg jmp add vcvtdq2pd xor inc mov add fs insl sti and outsl mov dec jo enter call adc (bad) je pop and cld mov lcall pop icebp jg add cmp xor add inc mov arpl std test xchg inc out mov cmovne cmc jbe inc dec nop repnz pop and push call dec sbb mov add add loope jmp adc mov cmp fsubl sbb jle and push iret or push sbb sbb mov mov or xchg xorl inc mov adc jno push push sub dec jno cmp adc jg cmpl int std stos cld mov push jns iret mov daa push jns cmc mov pop sbb aaa fld add mov in push add mov leave add mov dec sub pop and dec incl adc into or movsb cmp xorb or xor fsubs out add shrl out add mov mov int3 add arpl rcr jecxz jno cmp scas sbb pop jno adc add aad fidivl lods mov lock xchg out lds jle and mov psubsw mov popa xchg iret hlt and mov pop push ret sbb sub sbb cmp jno stc pop add inc mov add inc inc jle faddl xchg fiaddl aaa nop daa cli nop dec and xchg stc and (bad) mov sub les xor xchg cmovbe icebp or popf xchg pop sbb sub movsb call pop enter sbb or icebp rcl sbb shlb ficompl add pop mov sti movsl mov pop inc cmp xor xorb insb les ret xchg hlt dec sbb mov icebp xor push xchg mov es xor mov stc mov push mov jae out incl data16 add popa jmp push mov fildll sbb sti mov out in xlat bound or dec xor mov pop fs and cmp jnp loope popf mov mov jecxz subb imul call (bad) pop lea add aam shr jb sbbl (bad) pop les (bad) and dec das mov ljmp inc dec nop ds hlt inc fabs rcrl test jmp jle add push pop jecxz add push cwtl sbb add ljmp push push add jno lock mov mov push cwtl incl lret dec fstpl inc out inc pop addr16 ds and arpl push jp das cmpsl and inc push sbb jns out pop in stc js lret add imul bswap or mov sbb push jl and (bad) push jle (bad) pop mov push es dec add jno cld lcall xor add sbb loop cltd or (bad) lds cmp lock aam scas cmp outsb hlt add cmp cmpsl pop loope cli push and cmpsb push pop dec xor sbbl mov or xchg mov lret mov pop add cmp ljmp push mov pushf (bad) add subl dec mov loop adc cltd (bad) mov imul lret notb add mov push jecxz out incl aam test sti inc lret addr16 insb and add push or or mov test rorl repnz mov nop cmp setp mov push cmp int mov sbb dec push test and or test hlt fsubs inc jne or incl sub mov push dec dec mov cli and inc cli arpl mov in faddl lahf lods rolb mov (bad) pop mov jp xlat jno imul push push dec xchg aaa fwait outsl std nop sub jg adc mov xor or push ror out mov cmp push lods stos pop dec inc lahf mull popf mov and adc daa sub add and xor pop test jmp shr and mov fiaddl push ljmp fimull inc movsb and mov adc mov mov in xorl cmp push cmc add orl faddl out (bad) xchg orb mov mov popa mov andl fiadd rorl adc fdivrs (bad) pop jecxz xchg and aas test mov xor je mov sbb popf call jae in inc scas mov adc xor push dec mov jbe leave mov push mov icebp insl rorb jmp sbb shr pop and push mov test sub (bad) mov insl (bad) jne cmp roll outsl (bad) add fsqrt nop or xchg pop add adc test add test cmc mov adc jl xor jg cmp xor out addb mov sar jae mov dec ffree cli mov cmp add sbb sarl ret (bad) pop mov add inc push sub jp mov sub push jbe or and dec pop insb add push push movhps jmp inc out or gs gs (bad) sub pop ret outsl push push outsl push into jnp or mov inc repnz lret push add mov subl lock push inc lcall inc cli out inc fistpll lret ljmp je sbb loop xchg aaa pop xor daa mov adcl xchg arpl ret aas cwtl and (bad) ss (bad) arpl mov jmp test loope and jbe push (bad) aad inc mov (bad) sbb fstps data16 xor inc nop or movb add (bad) cmp add sbb shll sub adc outsb fisub dec or and xor ds mov test sbb xchg inc jecxz xorl dec ret push pop push aaa or incl fs jae nop aaa inc popa adc call mov push dec dec bound (bad) mov sub jbe sub cmc pop fcmovbe in lahf jl in sub mov pop sub add popa jne icebp sbb or cmp jge mov and imul push sub sar and (bad) mov (bad) fsts lret push gs iret in sub in inc xchg loope loope sbb xorl add xchg flds adc add (bad) sahf loope and stos sarb idiv enter dec setb mov out dec adc xchg loop inc mov inc inc cli out inc ljmp test sarl xchg sbb and jle inc movsb add adc cmp adc add lods fiadd or mov hlt cltd adc sub dec ret je jecxz adc (bad) mov rolb fdivl dec ret lods ja outsl cld nop push pop dec (bad) int3 sti data16 or test xor sub addr16 pop aad ss data16 mov xor cmp ljmp aas mov in rcl call dec out xchg push scas (bad) or (bad) popf sub rorl push fstpl into (bad) pop jb bound mov jmp (bad) fidivl orl f2xm1 mov sbb xor cmp push cmc pop stc mov push rolb pop jecxz add icebp push aam cmp clc ja jp xchg les fisttpl mov jl outsb sub rclb mov neg (bad) imulb mov enter adc mov inc jno lock mov movsb pop fstpt sub mov jp xor inc push cmpsb negb jne in inc mov rcl xor inc fsubp subl repz lods nop aas std mov push in stos and add test fbstp jp add in (bad) lcall lret setp push incl push out ljmp je jb adc and mov popa mov sub adc or adc mov int3 sbb xchg cmp push pop (bad) movsb mov sti mov jne cmpsl mov xchg testl in int3 bnd jmp adc mov mov call popa out xchg (bad) aaa cmp cmp pop sbb pop xchg jp call or out jmp jnp mov sbb mov mov push mov sbb add js icebp cmp (bad) mov ficompl pushf shrb (bad) mov cmc sub testb pop test subb mov sbb adc mov (bad) mov test add pop ret xor sbb fistpll jns popa daa in (bad) sbb imul mov iret xchg xchg add or data16 into dec add mov mov mov loop stc mov mov jnp add jge insl daa inc pop out xchg sbb dec in cltd mov sbb jmp (bad) adc aas loopne xchg or loopne fimull fistl ss and and aaa mov add fnstcw sub inc out jmp pop insl loopne mov lods jb cli push inc pop (bad) mov incl movsb push test test inc rolb ss bound jge fldenvs int mov push mov (bad) mov sbb pcmpeqw and cli inc sbb pop pop cmp mov xor int lea inc inc leave lret xlat scas sbb xlat ret xchg sbb xchg (bad) xor sbb sbb lret and xor jbe fisub fiaddl popf rorl xorb (bad) ljmp jle jnp int (bad) add push xchg push mov mov add loop mov gs jno mov data16 xchg xchg int3 ret mov ret ja stos ss fildll pop movsb lahf addl frstor stc add (bad) outsl adc jp cmp jno dec and cmpl cltd and stos ret test mov mov jnp sahf movsl test xor xorl mov imul mov jmp mov inc adc pop pusha inc mov pusha std nop and icebp sub subl or xor test (bad) sarb add sbb jno scas mov inc enter xchg cmp rcll add inc and push push nop (bad) dec jp call sub add lds inc inc mov mov cli int (bad) cmp push daa dec adcl shrb fwait subl es jmp aad incl xor push (bad) adc dec (bad) sbb cmp data16 ja loopne push push xorb mov (bad) sbb inc ds xchg cmp hlt jne sub dec notb mov mov sub mov pop outsb mov cmp mov push pop adc cmc lods imul mov xchg xorl daa add mov dec cmp cli pop adc stc mov mov cmp or inc cs (bad) fmull fs les inc ss xor jae inc insb mov outsb jg add inc mov test sbb sbb pop out push fucomi (bad) std fpatan inc xor ljmp scas outsb mov push dec xchg pop push aad cmp jne jl sub outsb pop (bad) orl aaa les imul mov int hlt out test dec mov addb aaa sahf in aad out subl popa add sub adc add push int cmp cltd in ds addr16 mov add xor add or inc cmp dec shr adc popa fimul fadds fcom out pushf lds mov add jno xchg pop add stos jle and nop push loopne je mov mov sqrtps mov add stos add sub mov sub mov dec aas push sbb mov cmp imul testl push les mov jl or int3 jns arpl sbb inc shrb jg or jg or jge add movsb loop cmp mov into rolb jae mov and inc lods mov aad nop push lea adc xor (bad) fstpt mov test inc cmpsl sbb add ret mov sbb in repnz cmpsb outsb cmp faddl sbb iret adc leave add fcomi inc pop ja jp mov mov or inc mov jecxz xchg add pop mulb pop push push outsb mov incl adc nop sbb sbb mull push add adc pop mov xchg or inc (bad) cmc or in mov inc nop sub sbb bound jbe (bad) roll jmp or and add test stc arpl add mov xor imul xor cmp or test inc popf in rorb popa fnop push shrl call xor cmpsb or mov mov into jecxz and ret mov scas lock add lds push imul jbe sbb inc mov cmp pop rclb (bad) clc data16 dec loope test dec dec jp jo and xor mov sbb add stos arpl add xchg mov leave xor ss icebp inc lods fwait bts add push call push sbb sahf sub and add add lock mov dec xor push cs jmp add aad mov sub jge add cmp mull insl dec ret push (bad) loope add arpl xchg jge cmp adc jecxz xchg cmc sub jae insl cli nop cmp fstpt (bad) lcall je leave add dec lock sbb jo mov call mov stos lret mov inc pop movsb fcoms ja lock sti or push inc out inc arpl mov and outsl add hlt inc idiv inc (bad) mov xor rcl stos dec call aad jns cmp xor mov jle adc cmpsl fdivl dec test push (bad) mov flds aad loope add sub mov test mov ss in sti adc mov idiv and popf push (bad) add inc adc hlt inc adc adc addb pusha adc push test lock inc fbld xor add orl test int mov orl pop std mov imul or ja sbb jae pop sbb iret ljmp mov jl inc lcall jle mov pop out iret or adc mov inc test cmp (bad) es fcmovu (bad) mov (bad) mov push jp pop cld push (bad) cmpsl bound jne lahf mov popa mov inc mov mov or adc add xchg dec ljmp jbe xchg into in lds pop call hlt adc jo mov pxor nop jne movb addb out out inc pushf stos aad enter cmc or xchg sbb out mov xor repnz (bad) clc mov pop testb and testl xchg cld inc or dec int adc (bad) mov lahf out inc fldl xor xchg add sbb inc in xchg loop dec icebp lods aam movsl pop mov out imul cld pusha mov fwait sbb push push fdivrs add mov xor loope out inc fisubl pop sbb mov add in popa ljmp test jecxz sbb repz mov in inc arpl js pop mov adcl sbb clc inc ljmp sahf (bad) inc lock cmc inc out and lds cli lcall imul pop pop loopne pmulhuw orl cwtl push daa inc jae add add jno inc arpl inc insb jo ljmp cmp jbe stc jle add movsb sarb inc cmp sti in int3 jg ret jno inc je mov push incl xor insl nop sub sbb cmpsb inc test test imul cmpsb sub cmp hlt sbb push add and dec push push imul shrb mov cmpb out ds xchg pop push mov cmp movsb xor push push mov push cld ret pop inc lahf mov and or popf popa dec (bad) fcompl sub mov and into push loope mov cmc add stos pop dec cmp (bad) mov fs inc inc lock xor in arpl mov cmp insl sahf aam lods cmp jno (bad) (bad) sti inc mov lea sub cmp add xchg out into loope push inc jne mov scas sarb notb ja dec mov dec sbb mov mov ja or ror fisub sti push aaa dec ds cmp testb push xor insb mov arpl in into std mov push mov lods mov mov xchg jno pop mov cmc pop jle and mov cmp out daa (bad) fbld sti cmp jmp test push in cmp sub shlb mov push cs sbbl pop xchg jge sbb aas je mov or cmp iret pop leave add jno adc add dec add adc in mov or out push in fadd pop xchg mov dec xchg pop cli scas mov jmp hlt inc aam adc mov xor mov arpl inc lret test xchg icebp sub inc js and xor xchg push insl sub xchg inc cli mov pop jo ds in dec popf out add dec sbb mov cmc incl flds stos cmp ret out push xor sbb loopne sub (bad) xor aas in or mov add cld inc add fiadd inc movsl jl jg or jl fadds jmp xor (bad) aaa adc out mov out jl xchg push fdiv inc lcall jle mov fistpll pop add ror add xor (bad) adc jle out mov mov dec int3 xchg sub jg mov pop div (bad) das push or cmc fiadd sarl sub leave lds or adc dec mov mov xor pop cmp jne cld and imul add pop flds jb push mov nop dec fistpl iret jp push in pop or (bad) mov clc mulb sub adc inc xchg mov das insl nop gs addb sti pop lcall ds cmp mov cmp add or sbb push inc xor sbb mov mov jle adc outsb rcll (bad) orl dec or in cltd inc xchg sbb adc sbb cmc mov xor ds inc mul push inc mov lods xchg les sub push incl xchg in xor out mov xor pop ss push push add js (bad) pop cmpsl adc dec cmp add imul je insl in push push test mov or loopne xchg pop mov ljmp pop loop sub lods push das mov mov pop (bad) add int leave mov or jb pushf cmp subl out inc cs incl jp call inc into ss imul sbb clc pop add cmpsl sub cli mov push jbe call cs pop aas xchg push popa xchg push inc cmp add pop add sub mov mov jno jnp and sbb xchg out jge inc jne repz mov mov imul add iret paddusw (bad) fisubr or rorb outsb inc mov mov push ret bound dec sbb (bad) ffree test dec push in cs or jno lock fist or roll xchg jmp push aaa in inc and mov mov or mov sub lahf inc xor cmpsb mov outsb lahf and inc xor sahf adc sub ficom (bad) roll push movsl mov push mov cmp adc xor nop insl das mov mov mov lret (bad) jne (bad) cld (bad) or std sarb xchg mov and ret test and out and mov and subl inc jbe sbb mov nop cmp push test mov jle nop insl sub pop push pushf sub das loopne dec fdivs roll loope incl mov out inc stos xchg xchg mov cmp add stos mov push aaa inc jne lods divb out imul in inc mov sbb out pop sbb add and jge cmp out andl add xor push cmp add xchg add fscale loope jb mov mov cltd add cld mov cmp mov inc and imul inc fwait jb insl inc adc mov add push push pushf push fistpl or test int3 pop dec lcall push std and mov inc sub pop cld inc dec aas aad adc sub cmp dec inc lods push clc setp (bad) fidivrl aaa pop xor sbb aas cltd add sarl cltd lock lods ljmp daa cli mov out dec mov inc inc xchg xor xchg jge outsb mov lret push push pop rcll mov pushf sbb dec in test pop jg and mov mov jnp mov movsb ljmp (bad) adc fnstcw loopne cmc pop stos rcrl (bad) arpl sbb addl in and addb inc lods jbe nop gs cs xlat pop ret popf fadds add mov mov sbbl ret mov or pop xchg sub popf in rolb repnz mov ror add dec arpl jb xchg xor negb loopne mov cmc faddl and pop or or adc cmp push adcl inc jmp and add mov frstor into lret idiv add lds ss xchg mov rcrl iret push adc sbb adc xchg add sub test ja (bad) mov test mov fcomip mov or or push sbb lcall inc push push or or imul loope mov sbb aaa xor mov jmp xchg ja (bad) jp (bad) mov add pushf inc xor fwait inc push dec and inc andl mov mov in jo fwait cmc mov movsl cmpsb incl xor and adc imul mov xchg int3 adc xchg sub mov pop xchg (bad) jne lods fadds outsb mov sub xor ja sahf add aaa jmp or pushf seta add push xchg shrl (bad) mov jg aam pop sbb fnstenv mov or fsubrl lret testl shrl push ja lahf push fwait sbb inc jmp rolb mov mov loop aad sahf (bad) cld nop cmp scas adc je sti cmp in push ret shrl dec or sti and inc fimull les mov stos and add cmpsb dec pcmpgtd jecxz or test je int3 sbb (bad) jecxz lret loop sub les push jbe jnp mov pop and (bad) fldenv or pop test shrb sahf dec mov test pusha cli iret mov scas mov sahf test int fwait (bad) rcrl jns shr inc add cli (bad) popa push pop test stos aad jecxz add js dec scas xor dec pop pop enter pop insb inc push add les pop add push (bad) pop clc adc loopne sbb adc (bad) or loopne (bad) into addr16 adc xchg cmp aad cmp shlb dec outsl lock and inc lods add call add fstps inc sbb add mov gs inc dec shrb sub pop adc lret cmp notb pop les sub movsb aam lret xchg test inc cld and mov pop popa add add sbb lahf xchg add ss sub stos repz mov jle fldl test cmp mov cmp add push fisttpll testb add inc jmp and stos sbb push adc in add sub mov and outsb jbe adc or cs stos mov subb sbb sbbl outsb add test mov cmc or adc inc ret jmp add pop sarb gs les add adc or xorw push aad cli jo sbb sbb inc std xor mov lds adc stos rcrl fisttpll insb and ret clc jns lea mov inc xor pop mov inc adc cmpsl mov push sub jns sub push mov out inc dec js das ss xor enter sti and lea (bad) inc xor lahf stos or jo dec repnz lods adc addr16 rcrl pop cmp cmp js xorl addr16 jo in out je jnp mov fstpl xor push loope (bad) aas pop enter and xlat (bad) add fbstp data16 dec aad clc dec xchg cmovb sbb jmp dec aad sahf jge adc popf in mov cmp push and ret mov mov imul leave cmpsl int sbb in jg and xchg rorl sbb nop and out in inc xchg (bad) jle aaa adc loop cs out nop adc outsb aam ja xchg clc les ficompl sbbl jnp mov sub adc mov dec mov (bad) div adc (bad) jge (bad) pop and push and push insl andl and loopne imul adc movsb push imul adc (bad) xor cli mov (bad) lcall dec std ja dec pop (bad) jmp (bad) cmc leave add sahf aam sbb sub in pop jb inc movsb sbb dec fimul dec pop ret jge inc cs call pop or add lret out (bad) lock mov jp pop mov inc dec inc popf add shrb sarb jp or xchg dec ficoml das mov mov cmp sti scas jno inc add mov testl movsl add xor ret adcl push ja push sub pushf fist call fs push adc (bad) jb sub sahf into les inc jmp xor ret in dec mov pop fsubl push dec mov push inc int3 pop inc xor dec ljmp xor cltd insl add insb sbbb or cmc inc adc repnz mov push out jmp sahf popa add sti into shrl or mov arpl aam inc lods jmp xorb or sub aas pop and cltd sahf pop dec sbb cmp incl repnz or sti xchg popf test adc enter add out cmp and scas cmp jne inc in pop and sbb cwtl inc lods mov cmpsl aad cltd cwtl ficom dec clc aas pop nop dec mov cmpsb test add leave add xlat je xor xorb dec mov adc lds add mov sbb iret (bad) inc pop xor outsb loop aam sbb cmp xchg or mov leave add jo,pn xor add cmp fldl2e add or lahf push add out adc mov adc cld push or jns mov add enter (bad) enter mov enter ss mov pop dec and push mov sbb shrb adcl roll call xchg aad xor pop cmovp fcmovbe cmpb loopne in subl out mov pushf pop cmp push icebp xor (bad) (bad) push lcall inc divl test push sahf lea scas pop pop cmp or dec xchg push js mov enter (bad) mov mov (bad) ret sbb loopne inc xchg je push mov call (bad) aam dec loop (bad) or jmp in mov pop lcall inc insl mov add fldl pop loopne mov inc insb add shll jg add leave scas rcll add cs and pop cmp xlat incl xchg add iret mov cmpl rolb push mov add mov mov mov mov les fs stos jg pop xchg jle cmp sub scas fsubr inc sub dec cmp fs mov dec out jae cmp jbe cmp mov fist mov out mov cltd pop and push lods outsl cmp xor sti and and jl push inc movsb add mov pushf sbb dec mul (bad) ljmp cmp push jg inc ficompl pushf scas xchg dec clc inc jp (bad) (bad) gs loopne aaa repnz inc xchg icebp sarb sbb push in subb xor ffreep enter je xchg mov (bad) arpl cmp jp scas mov bound or cwtl inc adc repnz mov mov mov and push cmp push pop mov out les mov mov add add inc sub sarb jge test outsl pop les xchg enter and sarb cmpsb mov sti xchg fs xorb dec sub test out xchg jp imul pop cli fwait je shlb cli push sub stos jmp and orb xchg roll push add sti pusha cmc clc (bad) push dec in inc dec lcall (bad) shll insl (bad) dec iret (bad) add cs xchg pop inc popl out inc push dec imul mov pop incl lahf movsb push add sub mov cmp cwtl jmp push arpl mov cmp or loopne adc inc in in inc arpl xor das fcoms pushf mov daa aaa in push les inc add pushf fs (bad) in addl mov enter mov ja adc pop add in add mov or (bad) jp jmp dec (bad) aam rorb sbb aas inc push lea xor dec incl push mov fistpl and cltd push movsb pop ss add fwait adc pop ja dec push mov out sub mov (bad) mov add sbb daa xor gs or aas and sbb scas add push mov bound fldenv int pop dec das mov pushf xor sbb mov mov int3 mov out sbb mov add test pop lcall pop fwait rcrb ret mov cli out inc in jne data16 and shr (bad) (bad) cmp and (bad) stc cld cld push pop mov jnp enter xchg xor push mov mov push adc pop cld mov test mov hlt and mov dec lcall push repnz pop data16 je and push (bad) xchg mov and popa jo jbe outsl inc xor ret dec insl ja pop lcall fidivrl add jno aad xor sbb jns pop imul mov (bad) rcr dec mov out pushf sti push xor loope incl push mov enter pop outsl lods xchg jnp or mov pop mov sbb sbb fwait jg or adc insl or nop push add je add push sahf (bad) fwait lds jmp pmullw sbb pop pop jge pop cmpsl cmp lods cmpsb in ret xor pop (bad) mov daa arpl movl jmp cmp inc xchg jb repz data16 push xchg xor mov hlt (bad) push imul or lods aam dec push mov cmpsb inc incl mov ljmp insb jae push add cwtl adc push and sub mov scas rorb add push push mov mul mov or xchg std xchg add iret sbb mov int3 mov leave fwait mov inc movlps dec or mov cld std adc cmp clts push insl insl mov (bad) dec push mov sbb aam inc fwait in sbb push arpl add je push cld mov mov fs adc movsl in or lea mov mov sti cmp int mov movsb icebp mov add xchg xor mov mov sbb sbb jns mov jbe into sbb mov movsl mov push and outsl sbb dec adc pusha aaa leave add insb pop xchg scas jbe cmc or add mov pop mov cmp jge and xorl addl push sub roll test push mov and cmp ret or add inc (bad) jae xchg inc add fwait insl sbb jnp neg add les adc orl dec ljmp and movsl jne ret aam scas cmp ret rolb mov stc push jbe (bad) jl and cmp adc push fcomip (bad) lods aaa scas cmp add and sbb cli addr16 mov cmp inc pop (bad) push popa roll jl fsubp or orl addl scas sub or in jl pushf sbb mov adc add fiadd (bad) shl (bad) xchg or sbb xor mov xor pop mov addr16 ja push adc sbb popa sbb pushf leave lahf add shll xor push mov add and jle push jae daa repz mov mov jns fwait imul xchg xchg out push aas popa cmp adc movsb hlt jo je test sahf inc push push cltd leave add out adc loope cmp push loop push std push or jno or test (bad) aas and add inc mov fdiv mov or sbb or sbb pop mov xor dec cmp jmp pop cmc sbb jne sbb or daa xchg add xchg sbb movsl add test inc add popf stc js dec dec mov dec je or iret scas hlt push cwtl mov sbb add sbb in and inc jae xor and push je ja pusha aaa popa std ds aam stos lahf adc sti flds fadds mov sbb jmp enter int sub xor int sar ret fs incl outsl mov idiv and sub popa (bad) xor mov cmc bound les enter xor dec pop in lods push daa bound (bad) in hlt inc dec add (bad) std push cmp ljmp push in subl and stos mov inc mov imul bound push daa xor or sub mov cmc outsb (bad) outsb lret mov rolb xorl call (bad) cld nop sbb test out addr16 test add jp je movsb cmc punpckhdq lea sahf scas push mov inc inc xor lcall subb jnp xchg subb loopne xor ja fisubrl inc jns add jne jns ds inc (bad) pop test rep fcoms shrb add push pop dec and ja fldenv dec sub push pop inc push push xchg das ficoml mov adc push scas mov jge (bad) push aaa fxch or adc mov lods cmp mov lret lds push jbe (bad) fstpl dec insb mov jns insl push les mov jb push (bad) call cmp (bad) jb test js icebp adc sub aaa dec adc jle (bad) add sahf and dec ret pushf mov stc mov cmpsb in faddl inc mov nop push push loope cmp ret je aam mov mov scas sub jb nop adc test xor ret mov add (bad) jb mulb es sub or sahf sub (bad) jo fldl (bad) pop adc mov call mov hlt cltd adc mov fst xchg push call in insb cmp add scas mov aad popf sbb push add imul out sub fstpt int jmp push out inc xchg and test or int3 fcmovnu sub rolb jecxz adc mov xchg cmovns xor add pusha lcall push lods aad out cli or mov sbb or mov cmp popf push mov rolb outsb sbb jp xor data16 add lret into jo jl xor inc incl sbb mov iret cmp mov add push xor push xchg ret lahf push lea jae rorb jae mov fwait add xor mov sub fwait imul and mov movsl nop mov sub pop inc sbb or mov aad dec js lahf pusha mov ljmp xor lds mov inc (bad) roll idivb mov push fbld jl jnp lods inc pushf mov incl decb repz dec xchg jnp lock cmpsb inc roll rolb dec insl cmp or test mov pusha push jle adc fisubl push xor adc movsb cmp fidivrl dec or add sub notb daa mov outsl mov lock sbb in mov pop rcr add test out int jle adc rcrl icebp dec (bad) in aad mov adcl jno lret pop sti cmp setp movsb std push jecxz ds push jns add adc mov inc mov fadds sahf psadbw mov inc push add bnd inc dec (bad) (bad) mov fwait inc or cmovbe es (bad) flds push xchg mov nop cmove pushf jns xchg dec add out mov add lret sub in lret push jae adc xorb push js or subb imul add sub repz push cmp pop (bad) or scas cmp cmp insl fistl je call cs loopne sub ret lea insl faddl lret test lahf push or push fiadd xor mov jnp int idiv xchg adc xor sub movsl imul movsb cmp or popa les sub lcall lods movsl inc clc lcall xchg push hlt bound jg push shrb mov imul hlt addr16 cwtl je out push inc mov movsl add pop sbb and mov shrl iret or nop gs cmp push call fcomi jno mov cwtl or rcr adc lahf ret mov es pop jnp mov jnp push in adc jnp or inc jecxz sbb add pop (bad) stos aaa inc adc sub popf fwait daa icebp aaa int stos ss (bad) xchg arpl rcrb inc in add ret loopne out jmp (bad) aam shrb pusha ja or and (bad) adc and jle xor imul xor orl icebp mov mov sti aaa mull popl pop ja or xor call pusha (bad) mov mov inc fiaddl xor sbb mov and add ljmp xor int (bad) aas fiaddl push daa cli inc pop aam jge sti ret mov ss and inc add outsb repnz (bad) jge adc out inc mov or mov mov push push jno and pop mov js mov add addl add pop fistpl xor pop fcomps add pop cld xchg daa pop mov sbb shrb in lods mov fimul push mov adc adc (bad) mov aam stos ja rolb sbb mov or inc cmp jecxz insb jmp (bad) add and hlt test ret dec (bad) xor lock cmp mov jl sbb pop (bad) (bad) sub jo jbe add add int3 mov lods rorb sub jae (bad) cmp jp jno (bad) add xor addr16 mulb pop jno inc xchg ljmp pop push clc mov add jg inc mov shr mov das popa out dec push in jge inc push pop nopl push hlt jns je sbb adc sbb xor nop sub ret mov bound add outsb leave enter xchg or popa cmpl inc out adcl pop popa add in sub (bad) ficomp add out inc or sbbl cmpsl inc xor cmc mov xor popf mov fs in hlt inc lods add repz sti push xor inc cld push dec shll outsl fxch add cmp inc mov xchg mov pop cmc mov inc lcall xor adc pop out sbb loopne pushf adc mov rolb mov nop sbbl add add (bad) or lea pop stos push andb xchg imul jmp and (bad) cmp repz mov inc aad dec jo or inc and and pop xor orl shlb inc scas adc sbbl aaa lods jns dec or js mov add mov pop cld push xor or adc scas cmp jae mov xor add enter (bad) notb push and pop dec sar dec add fsubp inc or in call (bad) mov push pop xor jns add shlb decb in sarl call sbb or sub js js and (bad) ret jmp adc out xchg das fcmovbe adc xor push push inc loopne cmpsb inc call xor sbb or and push adc inc hlt inc out (bad) fsubrs push les push les add sbb adc out fstps pop icebp sub daa mov mov inc mov call cmp sarl mov or (bad) mov cmpl dec add (bad) sbb das mov int sbbl pushf stc mov and xor add sahf push xorl xchg sbb add xor or imul mov cwtl in stc mov and int3 mov div or ret out xchg fiadd adc lret jmp adc dec insb cmp or sbb cs jae loope sbb and cmp insl leave add sbb sbb push fs add push movsb mov fisub cmp push pusha addr16 inc nop sbb xor sub pop xor mov or mov int3 and jae fistpll sub mov call pop fwait int call incl xchg add lahf lret mull or jmp outsb (bad) pop sbb loop mov inc mov movsb jns outsl add outsl ret mov pop mov cmp pop inc cmp popa inc mov inc lret imul insl pop movsl test movsb lahf and pop adc fs daa mov add loopne outsb std pusha cmp addr16 dec inc jbe and xor adc lock lds das ret pop cmpsb enter lea mov nop inc in push mov int daa pusha cmp and pop loopne fidiv cltd dec rclb outsl adc andl jbe add xor cld fisub je xchg insl out inc sub mov in and push add lods rol fsubs xchg fsub sbb sub lcall inc jno or sti cli mov outsl in iret (bad) jae pop mov cmp cltd (bad) repz mov jne xchg movsb cmp sub xor movl or fmull stos jbe incl xor pop jmp jbe (bad) aam imul xchg or mov xchg jp mov or insb sti lret jns adc add dec add push and or sahf scas hlt cli and out pop mov std mov daa icebp push sbb cmovb jo cld enter inc call repnz int3 mov mov incl imul jno mov xchg sbb stc lahf fwait adc and pcmpeqb pop or and pop push mov sbb fisttpl arpl clc adc adc (bad) daa jne mov sahf ds outsl cmpsb jnp testb test ret xor mov cmp lret leave pop cltd in jno sbb xchg ss mov addr16 (bad) add pmaxub add into aaa sbb outsl in out inc lea incl mov sahf int or pop int3 and push cmp and add mov das mov fadd mov es sub fisubrl int clc push pop mov lds insl (bad) pop xor push fidivrl cmpsl jg inc add test jbe adc cmp jg xor sbb and mov popa mov mov pop movsb addb (bad) pop dec orb inc jbe pop pusha and sub push jmp mov out shrb cmp mov aaa and jnp jns lds icebp cmp or add cld rcr aam cmpsl std ffree data16 lret (bad) push jne push push and js xchg or stos push xor fiadd fs rdtsc loopne sub dec in push and push (bad) mov ds test mov pop cmp xor xchg pop lcall adc sbb adc loopne add hlt std (bad) ss das lds add dec nop sub je dec inc cli fbld iret js sti mov cmp dec mov dec jo cmp adc pop pop mov inc flds jne andl lret (bad) loop mov repnz push pushf (bad) loope std movsb pop ja repz sub add inc mov jp add imul mov mov push int jb mov lds je xor outsl and mov inc mov pop cmpsb jg add push mulb popa jo cmpsb mov stc pop or xor mov add outsb loope lods inc add subb rcrl out (bad) test fisub shrb xlat popf scas (bad) stc and jge mov add push jmp sbb rolb xor or ret adc or lds imul jbe or (bad) mov rol test xchg repnz dec je adc add mov gs xlat jg sbb outsb in dec cmp fiaddl aaa shr and or inc ds aam cmpsb enter or xchg loopne ss xchg jns nop daa pusha (bad) nopl dec sub sbb (bad) or (bad) fidivrl aam push test jp mov inc pop dec ss repz mov movsl mov jge mov bound aad pusha mulb sahf fsub sbb xor push mov pop addr16 jge push and mov (bad) sub sbbl stos mov out sub cli push cmp mov int3 jecxz add push in cli cmc inc mov je popl pop adc push dec sti scas fiadd int3 cld shrb mov in push jo xor les sbb mov inc sbb fwait pop add notb mov stos pop lea fidivrl dec call cmp push mov int and mov mov dec sbb pop sbb xchg or pop xchg mov xor push jne jo cli mov jle out sub mov rclb sbb dec push testb mov je pop loop shrb repnz add movsb insl outsl mov dec incl fs mov lahf jo cmc inc or mov neg mov pop ljmp sbb out xchg add mov mov cmp jl and adc lcall loope div inc popf and push cmpl or and push xor adc int3 inc jns dec (bad) inc rclb xor int mov cld lret int call or adc mov inc cmp jb movsb ja or push add (bad) mov sbb pop lcall lods cmp jno mov test fucom dec add out fldl and dec inc (bad) ljmp repz mov movsl add iret lods enter orl jo in inc lcall sbbb aas mov pop push pushf icebp jp adc or adc iret int mov pushf adc data16 (bad) add pop lcall stc inc lea rcl xor repz dec ffree mov in popf xchg xorl fiadd out pop xchg lds cld push scas inc outsl ret xor movsb and push add sti push popa ljmp jg mov xchg mov and add xor sbb push dec mov push adc out adc inc xchg push add sti mov mov or mov or or pop xchg mov lods outsb add push sbb stos jge (bad) stc xchg add xor rclb sbb sarb add mov orb ds call adc xchg idivl sbb ds pop fadd nop popa ds lods lods addl int mov scas repnz cwtl (bad) lea setp jbe pop pop sub jecxz cmp xlat std aaa out dec pop push pop ret aaa lahf iret out xchg (bad) dec mov inc adc out add sub sub xchg imul dec xchg ret sbb ljmp int3 pop unpcklps addl in mov sub sbb mov lret je addr16 cld rclb popa femms into (bad) (bad) in sti mov add cmp std mov outsl mov xlat pusha fcomps cmp push in inc repz std lds push xchg loop lcall aas sub cmova jne inc lods rorb incl cs add cmp (bad) lcall add jge or and out ficoml push test pop lcall push dec nop or add call sbb dec sbb and jmp adc in in aas xchg jns push pop pop inc cli pop iret push test inc bound ss xchg sahf mov stos xchg dec pop xor cltd and lock lahf inc pushf add or inc movsl fbld add into popa add les out pop pop push xor mov add mov fnstsw test inc cltd cmp push gs (bad) xor add inc lea push cltd add scas mov dec mov movsb stos test jmp cmp dec fimull out mov mov dec push adc aaa mov xlat (bad) nop or insb pop mov mov jne sbb decb iret lcall sub inc je adc outsb daa dec lock inc stos and inc jnp sub jmp imul jnp inc scas cs cmp int lock (bad) cltd inc mov sub cltd inc mov or psrlw and add inc sub add popa sbb cmp mov add out outsl outsb add mov ret inc push fadds jbe adcl ret sub rclb pop sub nop add enter adc inc test lods test xchg int rcr adcl ret ret icebp push incl mov mov jnp imul clc xorb insb dec inc inc inc in xchg and dec aam fimull js jnp popf pop dec iret push aas mov sbb outsl push int3 cmp out add (bad) adc sti nop inc in arpl (bad) adc mov (bad) call adcl inc dec add leave mov lock cmpsl cltd loopne push mov inc pop mov sub dec mov adc jp leave pushf mov (bad) xchg inc out sub rorb jmp xchg mov push in cld pop adc je cmpsl xor jge mov mov adc add xchg ja add icebp mov sbbl outsb cmp adc rcl push lahf push push mov sbb sub xor call int xchg jnp jbe,pn les sbb cmp (bad) mov (bad) dec incl inc shll jbe sbbb inc mov xor xorb xlat jb call cwtl subl mov xor ficomp out js pop mov xchg mov repz lea test in popf cltd cmp adcb ficompl incl sub insl inc jmp insl pop shll and imul popa jl and sbbb sbb and inc add mov je add lock mov clc cmp out push pop cwtl stos imul aas test icebp mov sub adc jmp out (bad) jmp andl mov dec fs outsl lret mov inc lfs inc sarb adc in iret inc cmp or xchg lods fildl loop mov roll rol inc cmp (bad) jo imul in leave mov jbe sbb mov rcrb sub push mov lret mov xor mov movsb in jge xor (bad) sti pop repnz aam xor xorl push xchg icebp sub or in jno jno xor mov mov add scas sub inc mov cmp (bad) pop (bad) sbbl pop call pop mov inc and cli xchg pop push ret imull sub mov out int popf stos sbb pop xor lock div inc xor add das out or imul fadds repnz test pop inc mov outsl cmp mov jle mov test cmp mov dec sahf xchg inc in xor call int3 and loop das push sbb sub mov pushf sbb jae sahf hlt add inc fsts popf cwtl mov ljmp pop pop rclb lret pusha mov roll popf cld and enter or movsl dec aas jnp leave add stos jb dec mov sub jg add in xchg aam xchg mov adc dec mov leave add ds cmp lock push aad scas lcall leave lahf adc cmpsb pop test jno and fadd xor (bad) xor inc lret sbbl cltd int bound push lea shrb dec mov push in cmp sub add mov mov loope push mov dec fmuls lcall dec mov and mov sbb subb faddl or aaa cmp ficoml or pusha pop fs gs push popa out sbbb inc mov push lahf int add sbbl int inc ret fstl popa out push cmp xchg daa pop ret mov in mov mov inc ds lahf test mov std shlb loope pop adc sbb and int enter rorb (bad) mov (bad) mov dec add jp testl xor inc xchg aas in cwtl lock inc dec push mov sbb adc (bad) or or (bad) jno or ja repnz push arpl scas cmp shll adc pop add subl popa mov int3 lret inc mov jns insl (bad) cs push jo repz mov dec adc dec test add enter outsl or cs sub sbb ret mov push and lret testb mov pop dec mov adc gs imul inc inc dec aaa pop sub xchg sbb add sbb pop iret out cltd mov inc stos add movsb xor mov mov or aaa mov push shr lock fwait call leave add in loopne inc loop jbe sarl jmp leave add push int3 jge sub adc or cmpsl xchg idivb cli and cmc fs lods mov stc mov xor cmp subl rolb lcall xchg out sar add add dec pusha cld mov lahf lret push sarl hlt repnz (bad) cwtl popa and incl flds adc add in push lret push xor lea js add imul pop popa sahf push in out inc and push pop test je push dec mov lret sbb adc out inc pop xor cmp mov std push cmp cmpsb ja (bad) addr16 int cmp jg add push cmp sbbb subb inc jae xchg or ret cltd xchg sbb int pop adc mov add jle add mov dec fcomp fs jp dec jmp inc cmpsl add fnstenv aad cwtl lock (bad) add out mov aas mov iret sub (bad) adc lahf ret add cmp jg push scas fsubrs enter add lret adc ret sbb mov in lret dec movsl in pop ret push loopne add mov (bad) sahf xor out subb jae lds push pop mov sarl outsw fstps dec ss or mov cs push push mov cmp ds fsubrl subb in push push xchg xlat ret mov mov movsb (bad) xlat jno mov je mov and aaa in inc negb lds pop ret mov add insb in sub or cli mov xor cmp inc jne mov incl xchg add clc adc and mov or dec xchg mov or pusha inc xor add mov add sub mov aam push and fisttpl jecxz and imul adc or imul jb inc jmp add mov pop adc mov dec and shrb mov fstpt aaa push mov add int3 cmp pop xor int cli inc leave add popf cld dec push xorb fcomp dec incl movsb and fldl jbe add mov sarl sub dec pop adc enter fwait xor add (bad) loopne mov call pop enter outsb mov punpckhwd mov mov subb stos (bad) xor sarl (bad) scas or mov inc push sub stc lcall pushf add popa std shlb jnp xor mov mov nop or xchg (bad) fldl xor mov fdivrl and and pop cmp loope pusha push (bad) cwtl lock jp lcall daa (bad) imul or mov pop add repz lods data16 and or push sti mov sbb adc cmpsb sti enter cmp rcrl (bad) xor and out lret (bad) incl or xchg aas fldl push es int push add mov pop leave lds fsubl out or mov popa add add xor jp sub add jp jnp mov xchg getsec fldenv in fdivrp add (bad) jne cmp sub testb mov addr16 add inc xchg std clc jl (bad) xchg pushf loope test push mov cmpsb ja (bad) cmp ret negl movsb xor icebp xor or fwait xchg pop pop aad inc out cltd ret inc insl mov mov aad mov inc push ja lods sbb or mov xchg or inc aas mov mov add (bad) pop data16 adc xor cld sar nop inc mov xor (bad) mov inc inc mov es xchg mov fisttp lock mov xor jg les cmpsb pop loop add mov psrad incl dec inc lgs psraw fisttpll inc loope insb insb inc mov and mov icebp inc int cli idiv rolb and cmpsl cmc push jecxz daa negb add mov (bad) sub sbb cltd repnz inc sub test or cmp lods push test xor icebp mov sub iret daa adc xorb mov loopne and (bad) (bad) loop inc out jnp adc cmp inc pop imul pusha and adc pop and adc add fisubl add pop sbb in popf add lahf push push gs sahf cmpl adc jno cld (bad) into stc xor subb aas inc push push jno pop lahf fstpl jbe add mov add cmpsb std xchg in mov rcrb jnp ficom xor pop or insl inc jnp xchg fdivrl cmp cmc addr16 or jecxz les mov das loop (bad) lahf xor imul pop fdivp inc mov or sbb mov mov mov outsb lea and fwait inc and cmp stos in popf roll sub adc rolb mov test clc nop dec movsb pop test or push sub loope add and jbe add cwtl cmpsl xchg or mov enter inc mov rcrb add xor cwtl add stc and fisttpl jecxz jno fiadd fmul mulb lahf adc pop ss repnz mov pusha sbb jp mov jp fstps sbb and pusha testb cmp mov pop fstpt xor idiv add fdivrl jle xorl sbb push (bad) repnz mov clc addb pop jbe xchg jg or cmpsb aas test movsl mov and or insl mov (bad) bound push sarl inc adc repz nop inc mov fs cmp jl je rcr subb push scas insb xchg jmp push mov out push sub aas mov cmp pop mov test lea dec cli repz pop dec arpl lods cmp dec test add add add aad fs sub adc mov sbbl popa mov mov xchg sbb sbb mov xor icebp movntps daa popa sbb fstpt hlt sbb jb push xorl jge es push xor sub loop jecxz jg,pt or pop sub mov shlb xlat popa iret out xor loope push lret mov pop sub push std insb inc xchg or xchg out in sbb stc dec out inc stos daa fistpll jl arpl loope add pop jl add (bad) fistpl cvtpi2ps hlt dec call outsb push int fsubs sbb int xchg lods stc loope sbb push dec mov lret sbb sbb outsl xor ss loop and and mov leave add ds in shrl add fbstp in sbb adc add xchg out cld jl adc push mov stos sbb pop jle inc hlt sbb scas jmp mov lods mov or ret test mov lods mov dec incl lock inc mov mov inc xchg stos and inc mov mov fildll add lcall pop jp jns outsb cs lods ds (bad) in inc mov mov rcrb jbe add mov and enter cmc movsb out stc and or mov rolb sbb and aam mov mov mov push jno pushf xor subl mov arpl dec mov incl ja,pn test dec mov fsubl leave pop push and mov push jo sub fdivs jns outsb mov cmp add aad mov and or ljmp inc js iret int test test rorl or imul push xor (bad) mov loope scas leave mov jne stc lahf add push sti jecxz mov sbb adc add scas hlt sbb jecxz and xchg add mov ret in sub mulb aaa inc call lret in imul mov repnz std rclb adc (bad) sbb (bad) dec inc js add or push push mov call mov sbb in aaa mov xor fbld adc adc jns xchg push cmpsb jne jge or shr or and adc push clc push inc sbb mov mull mov cmp jle inc push sbb out push adc test imul test (bad) rolb pushf iret stc ds mov xor jle hlt stc and sbb nop pop and movsl jne outsl mov add aaa pop ret adc aam movsb pop mov dec adc add adc test push jno mov fadds arpl add pop add pop mov jp cmp mov orl pop dec lcall nop cmp sbb aas and xchg rcrb add add cmpsl sub shl sub call mov jbe jp ss jmp jl stc add out cmp jl xorb mov mov adc rcrb pop lods mov dec add stc mov adc cvttps2pi lahf mov test inc jno cmp adc sub jge xor dec mov and sub sti and lcall leave into pop in pop mov dec cld (bad) add inc sub scas cmp je xchg sbb sti inc adcl rclb lea sahf or mov add pop xor pop loopne adc mov out inc int3 popa push inc mov mov xor mov inc mov add pusha dec aas mov push andl in aaa aaa mov sbb sbb inc pop push enter ret es cmp jl sub out stos fs je aas ljmp and push mov rcrl mov ret movsl mov lods lods pushf out mov bound nop jae test out add ret pop and addr16 mov dec shlb ljmp outsl out sub ljmp add clc sahf inc mov (bad) cmc inc mov fidivr es jle sbb loop jnp in hlt xchg push pushf out adc dec dec loope jno mov loop rclb inc das mov cmp adc cwtl int3 repz enter (bad) iret stc test mov add jp sbbl push dec xor (bad) out loopne das inc jae xchg push mov lcall (bad) sub int3 inc add shll ret pop rorl mov push loop add test mov or pop mov incl lock (bad) data16 ja jecxz xchg (bad) dec ret push outsl std push sub in faddl (bad) lock aam pop adc sti mov sub sbb jbe adc cmp js imul push push xchg mov add cs sub dec pop adc orb inc (bad) bound out or popf outsl repz push stos cmp jle jns or aam insb out push xor mov inc jle repnz mov mov or shlb sahf call out mov ss dec aaa es nop and mov cmp lcall stos push testb sbbb enter xor adc leave int adc mov mov mov xor inc jb mov mov loope call lock outsb in mov (bad) or (bad) pop jns cmp add int3 jns mov aam iret test pusha pop and jmp dec mov cltd cmp adc dec imul repz incl lods mov mov negl movsl mov (bad) xor into jae loopne bound popa je lods (bad) in (bad) push jae inc leave ss push xchg jmp testb cltd push (bad) jecxz addl jb mov (bad) hlt stc and mov imul and cmpsb vmread jge mov xchg test fidivrl cmp int add repz inc dec loope jl adc fsubp push call stc mov jo inc pop iret sbb (bad) cmp mov lahf add push addl pop dec lcall push mov pop and or jb rorl adc mov fiadd or sbb insb add mov add sarb ds and add sbb jne loop or mov push fnstenv fdivp cmp mov repz mov fnsave adc cmc xor cmp cmp inc mov push fimull arpl aad sti ja cmc inc lcall test aad out add fiaddl pushf bound sub fistpll jbe pushf mov mov add mov add mov in push jnp or or sub sbb sub sbb (bad) xlat movsl pop test push add out stos cmp iret loop decb lods ret fdivl out add test repz arpl scas clc int3 pop lcall mov push je in mov add sub in push xchg (bad) jae or sahf test ret jmp push push clc mov rcrb mov mov sub pop push fidivl cmp push mov push pop js fmul fcompl cmp adc out pop leave push cmp xchg jp ror sbb inc mov and sbb popf push dec sub xchg jne cmp dec push cwtl add add sbb or (bad) xor lock mov push stc (bad) push or mov add cmp xchg ficom cmpsl or lahf and dec mov add push sbbb push stos inc arpl and jo sub aaa or dec push loope dec adc xor push push jecxz sbb das daa imul mov add lahf lcall push or arpl psrad les sbb add xchg or inc cmp inc xor inc mov inc ret out clc mov add lods fadds jg cmpl push fsub in push jp fiaddl inc mov pop ja loope cmp or aaa dec push add inc mov aad orl jb jno inc xchg bound fstps jo (bad) add pusha xorb inc sub aad add icebp and addl aas jl mov ret (bad) (bad) lods test fwait fs and push les mov outsb call push repnz ret mov add roll mov cli daa pop mov xchg add or cwtl jnp xchg stos cmc add and mov ja mull xor (bad) dec ss dec loope and roll cmp pop cmp xor fmull (bad) push jo or dec add fcmovb jecxz jp sbb add sub and pop mov mov or icebp or inc add xor nop xor aam int3 (bad) push sbb mov jne mov loop or (bad) popf sbb out inc inc sbb inc dec xor ja add (bad) int3 and or dec out and das xchg mov sarl in les push mov fwait and popa xchg ja in test or and pop dec rorb sbb inc je sbb in push mov inc mov add aaa ja (bad) cmpsl shlb add sbb xchg or les lods lds hlt inc popf adc lcall fcoml dec test jmp and jmp call dec lret sahf push cmpb test add iret les inc inc jp cmp int3 mov ljmp ja or or mov cs int (bad) hlt xchg sbb lret ljmp movsb testl mov jb sbb and or xchg outsb and push (bad) icebp mov mov scas mov test xlat jne shrl jbe nop subl sbb int inc mov xchg and add xchg stos (bad) or xor mov push fdivrs in dec jo inc dec add cld rclb add sub insb (bad) ds jmp mov popf sbb or sarl lods inc ljmp cld shrb push sbbl repz ds mov ds stos (bad) fldl mov nop or mov dec addl push cmp lahf adc cmpsb mov and rolb pushf pop dec push jo lods jae repnz data16 shll mov into mov inc divb or pusha std fsubl (bad) sbb and hlt jb dec jb fildll push cld daa decb dec nop jecxz sarb mov pop sbb repnz mov xchg sbbb fstl inc mov mov add das cmp rcll movsl add outsb mov fwait push nop and inc sbb or push jg dec imul push mov hlt or scas ret js or fwait xor and push jg test call test jmp pop push cmp fsts fdivrl jnp jle stc inc or (bad) jne jp jno (bad) aaa inc jmp aas pop or je fiaddl pop or or repnz mov sbb lds cltd icebp pop push aad mov aaa arpl add int3 stc iret out sbbl inc out sub (bad) popa pop test dec mov mov std shrb inc adc ljmp xor rcll mov enter aam lret scas mov inc popa aad mov ret std jecxz andl add in xchg pushf inc and xor sbb mov shlb cmpl out shlb jo cmp sbb push sbbl int aam (bad) mov xchg repz sbb setp xchg out incl sub rorb daa data16 punpckhwd iret mov ret sub inc nop in into push pop push test roll inc aaa stos jmp jnp add ds (bad) roll inc xchg sub inc aam mov out inc lcall in sub rcrl inc sbb inc xchg inc push pushf sbb outsl aas inc add pop (bad) ja push je test cmp ret sti daa mov std mov xchg fldcw inc out push mov adc cmpsb pushf das arpl inc sbb fcompl xor mov and xor mov cmp je mov inc inc rcr ret add xorl jae nop xor jmp jmp frstor xchg sbb or fcmovnb and sbb lcall outsl jb hlt icebp or cmp mov rolb nop jp xor add add stos add sti fcmovu pop mov icebp adc mov ret repz cmp out push lock cmp es insl repz jmp stc xchg or dec outsl adc lcall pop inc sbb inc cmp mov enter add xchg mov pushf (bad) hlt xchg sbb icebp dec or or lea nop (bad) jb cmp out sbbl (bad) push lret int xor xor arpl mov jne jp insb je sahf mov or inc mov cmp pop into sub mov mov pop imul jo add xchg or sub inc dec pop cmp add mov cs xchg mov jbe push sbb pop pop add addl mov jmp mov mov cmp out jle out subl xor outsl cmp sub mov shl (bad) int push jne mov fild jno repnz adc mov sbb cmp push mov cmp je sbb in mov aam js mov movsl cmp je jge push adc dec into cmp jo cmpsb sti cmp nop jns arpl and (bad) xchg incl and movsb dec cmp pop mov mov incl mov fidivrl add jmp into inc add push pop pop mov adc cli push or mov icebp out inc nop cmp andb gs rcrb push les shr pop jge inc mov sub sbb stos cmp cli out inc mov push (bad) fs push dec sbb loop ljmp fsubrl call jle mov fisttpll push (bad) or sbb outsb mov and into aam sarb and dec or movb jp sub xor (bad) pop (bad) mov int lods sub inc mov ds mov inc ret dec xlat cmp orl or (bad) fcomip inc mov push dec loope and pusha xor cmp inc loop jns pop inc es xor pop leave add pop jae xchg cmp dec inc rcr (bad) loopne adc roll rolb jne or enter sbb pop andl lcall and inc sbb or js lods xor xor add mov adc mov inc stos add inc jae pop addb out in andl adc (bad) js flds mov mov movb xchg dec inc dec mov out les out mov cmpsb jp cmp push add or and aam outsb rolb and pop adc or xchg mov fs aam arpl cmp pop cmp adc or (bad) xorl stc xchg push jl sub jae dec rcrb jae js hlt inc lcall pop sbb push or movsb jle out insl adc cwtl repz fldenv lods sbb out jnp (bad) iret leave add and add cmp aaa jne (bad) push jo out cmp push fiadd mov loop sbb inc insl xor js cmp push add cmc out aaa les and mov into jmp add or mov daa daa and pushf nop jp outsb and hlt sub imul addl push iret mov sub stos jo mov add mov mov inc ljmp inc adc push ja mov xchg add or lods loope sbbl bound jae add add std sbbw or fcoml inc bound lahf lds pusha xor cmp add adc dec aaa or imul xchg sbb icebp sbb adc add loop cmp dec scas dec add out xor jle sbb loopne inc add fstp (bad) pop lahf lret je fstpt mov faddl add dec mov add jge insb lahf scas push sbb pop inc jp stos fnstenv mov popf mov add mov cmp in mov adc in sub adc sub cli sub dec push dec and sbb mov adc and sbb (bad) pop mov dec out jl das ficoml rclb pop (bad) test scas inc inc sbb (bad) or (bad) mov inc adc adc sbb mov xor cmc inc or and mov mov pop push std shrl addl jg push ss int3 lret sbb jl adc into loopne (bad) push pop fwait loopne (bad) out add mov pop sbbl sar mov pop inc outsb sub jb inc xchg sbb pop or sbb test mov cmp xor inc outsb jo addr16 bound mov jno or insb mov cmp in ret aam (bad) jbe incl and xchg xchg call xchg stos push rclb pop (bad) lea jge loopne in out inc and nop ss leave add insb jno imul sbb jns cmp cmpsb inc xchg push shll mov cld push push nop push pop inc mov hlt arpl fwait xor (bad) loop cwtl cmp sbb lods xor add dec or xchg sbb mov or xchg bsr jbe (bad) xchg outsb and push cmpl mov xchg mov insb std nop push mov mov outsb lcall inc and js mov mov pop jmp and mov les fistl xor ret imulb cmp cmpsl dec pop les fisubl xor (bad) jbe inc roll cmp add lods jecxz mov sbb ret ret pop test das jl xor fadds dec nop jns fnsave (bad) testl jb inc imul or sar and outsl mov lcall jnp,pn inc mov add sbb dec and popa add xchg jl cmp jmp inc stc sbb lods cmp rorl mov or add ss popa scas xor and push ss sbbl jo adc rcrl push lods daa out jp call out or outsb sarl repz xor mov inc aaa ret xchg push (bad) (bad) cmpsb xor leave add adc mov (bad) enter cmp pusha push popa ret push and inc xor adc dec mov call mov test and add fwait jbe adcl adc pop pop stos ss push add sbb test movsl adc pop fdiv mov rclb cli out iret sub mov add fs push add sbb jle cld mov push test daa pop bound pop mov cli sub cmpsb (bad) jae cmpl push daa cmp stc mov lahf mov popa cmpsb fwait mov (bad) aaa inc mov aaa adc or cwtl enter aad clc mov insl nop das dec mov sbb pop fadds clc fwait mov adc loop add (bad) hlt adc and negl add fnstsw nop daa dec xchg inc xchg (bad) ret lods out iret fldl les jnp lods int roll rcrb and in bound leave add incl push xor insb popf cld aas lret jo inc int3 adc adc test imul inc pop aas fbld or stc and out add and mov lds fcoms inc aad mov xchg (bad) popf sarb test xor adcl mov aas mov xchg lods and mov sub lea adc loopne rorl (bad) test scas inc inc sbb sub test mov iret js sbb add dec mov adc sbb and inc push hlt push shll fwait jbe sbb iret testl sbb sbb pusha jbe jp cmp sub fsub add mov pop leave add jo fdivrl adc fisttpl (bad) sub sbb pop or push lret imul (bad) ja mov sbb cmp int3 leave daa lds push adc sbb addl jbe pop xchg mov pop xchg push shlb sahf sbb inc fild mov adc pop hlt mov or arpl xchg or test loopne or lea sbb adc pop pop (bad) enter add out mov add out rorb loope sbb bound xchg push mov mov nop ret jecxz push push mov les repz sub imul lret pop jae inc or push cli xchg mov stos (bad) mov push daa dec cmp inc fmuls jae loop addb xor push (bad) push mov sbb les faddl incl leave push dec adc pushf jp jge scas push jns xchg or jae add pop push je (bad) nop dec push lods jns adc jecxz unpcklps fwait ja addr16 call adc pop pushf (bad) lcall inc int3 ds adc cli and int3 and mov (bad) or nop inc lret fs and add push push push ret cwtl inc xor add std call shlb mov jg lcall out cmc xchg push ja and (bad) sbb pop mov cmp sub in shrl xor adc inc cmp flds enter pop push jno sbb std inc xchg adc mov mov mov push mov cmp aad aad push or cmp or jo lods and cmpl cmp inc jne rcl add in add lods ja,pt iret mov mov push sbb or ret mov pop xor inc xor push add inc stos jge inc mov into mov fcmovnbe and xchg or divb pop mull mov add jmp sbb cmp push aaa mull lret je mull das daa xchg fldt sub xchg or movsl lods push jl adc pop pushf pop pop jnp loope pop je push cmp push push rolb test in xchg add into daa aad fmull stos jecxz fldl aad adc add add or push clc mov mov iret hlt cltd out sub adc sti cmpsl push pop cmpsl xchg mov mov hlt sub lods xor sahf les les mull or push lock ss xchg test and cmc fiaddl subl into mov sub inc arpl lret loope out xorl loop mov and loop dec int3 test sarb (bad) xlat xor xchg das add xor xchg and rcrl (bad) stos aaa or lret cld mov sub hlt inc xchg out xchg cld nop insb ljmp sbb (bad) xchg dec bound add dec (bad) jb inc inc pop cmpl mov fidivr or lahf lret xchg or xor (bad) fistpll mov dec xor in add xchg psrld add adc jbe lahf mov push iret les add int3 and fwait sbb jb mov test inc add cli lret or pop rorb out outsl ljmp mov pop lds mov or cmpsb ficomp adc dec cmp push out cmc inc push jbe dec xchg out je mov movsl pop mov push mov test imul mov loopne mov xor or and inc dec xor mov and test in xor std mulb sti mov push loop or sub jnp,pn xor test arpl mov popa jno test sarb xchg (bad) xchg adc inc jo cmp inc jmp mov push add js and fdivrs push sub (bad) jecxz lock cmp int mov sbbl mov stos fmuls call dec push cmp loope bound and adc pop ret cmpsl (bad) in mov sbbb into pusha jl or stos pop mov add cs and ljmp sub and push xor xorb jle or dec sbb mulb inc adcl add cld lret pop loop mov pop sub mov xor out jnp jbe sbb push movsb addr16 xor and mov jmp mov in adc mov insl in fiaddl jmp outsl push fwait in jno arpl rorb adc mov sbb inc out stc mov cmp in add xor xchg repz std cmp mov mov inc lds push jno test (bad) int3 xor pslld push xor cmp mov repz cmp gs movsl mov xlat add cmp sarb xor add inc add jmp in inc sahf (bad) cmp cmp gs and aad test push mov rorb imul bound inc or mov aaa push jg jg push push xchg (bad) movsl (bad) (bad) lcall sahf mov mov jp inc fcoms js (bad) and scas sbb or cmp or (bad) lods pop stc (bad) int3 shlb addb es gs incl mov jns mov xor sub jp pusha xchg (bad) insl ds daa push push insl or fwait sub sbb sub pop sub xor mov ret lcall inc in push bound (bad) jne mov rolb mov ret dec in dec pop aas jp fadds cmp mov mov mov push iret testl inc xchg loopne insb (bad) inc sub pop loope xchg iret dec les sbb rcll popf mov rcr dec and pop call sbb stos out mov and je cld adc mov and mov cmpsb out push add pop mov faddl cmpsl aaa imul xchg mov loope roll icebp aad call in mov cmp les add or aas xchg (bad) sub flds loop mov lock mov (bad) jb mov mov cmc mov insl push inc cmpsl sbb cmova xchg divl sub movsb push pushf mov inc add inc fnstcw sbb inc jbe add pop clc lahf jmp fcmovne mov jnp inc xor test mov cwtl cwtl inc push or in les out fcoml ja jp push xor pop (bad) mov mov push and (bad) jnp sbb push and mov fiadd jae sarb dec cmp cmovne (bad) mov adc dec jno pop aaa inc cmpsb faddp adc jbe les mov dec pop andb adcb cmp jbe add mov (bad) pop inc push sbb flds xchg (bad) cmp push test jo ret add add jne mov icebp mov adc sub shrb rcl dec adc jb outsb pop (bad) stos add ret clc stos inc outsb cmp xorl adc inc loop jge inc cli arpl lods dec xor psubusw sub mov add int xor adc incl (bad) adc aad xor mov pop inc and pop mov fisttpl adc dec jp sbb cmpsb cmp add cmp jp shrb pop int xlat sbb leave add dec (bad) mov mulb xor add outsl mov push fs testb mov aas add push fistl cmc mov stos addr16 mov push and add je mov inc aas (bad) fsubrs ss cmp or xor or mov (bad) xor repnz adc loope sub inc cs cmp dec inc frstor push add xchg cmp mov cmp and js dec fiaddl outsb test mov fprem1 inc adc mov or xchg xor lds cmp int3 jno pop je in cmp es mov push out adc dec bound mov dec es cmp jl adc je scas xor jnp mov push add mov sbb push xor mov iret hlt cltd out sub sub out popf (bad) roll mov test mov in shlb cmp jb popf xchg sbb mov sbb xchg cmc fiaddl sub pop cmp insl imul and push push bound test enter add cltd insb xchg add add push loopne lret dec xor sbb xchg sbb xchg push xor nop sbbl je (bad) jne mov jnp pop or pop dec adc jecxz mov xor dec fiaddl push add stos sbb adc or hlt repnz lea cmpsl insb nop gs popf stos push (bad) pop push addl dec daa inc imul mov adc cli inc or sbbb xor xlat inc loope mov xor jno in (bad) xor fadds sub cld dec pop jae or dec cmp mov (bad) jbe ja adc sahf xchg cmc pop xchg add mov mov mov add add dec loopne jp pop sahf mov mov jo test sbb and jne fiaddl in sbb cmp dec xor (bad) push (bad) or (bad) pop cmp inc mov aas xchg add mov pop adc in mov or fistl out mov sbbl bnd in mov cmp sub mov xor xchg inc lret jbe inc mov in ds (bad) sbb in hlt inc xor loop andl cmp dec jo out mov xorl stc inc int loope jmp or mov push (bad) pop enter inc imul arpl (bad) subb mov pop cltd fidivl notb add adc and push sbb mov cmp dec daa push jno push sbb sti mov pop mov aad xor js and sarl hlt jmp sub rcrb lea inc outsb popa add movsb dec jo mov dec in pop repz add or adc rorb dec adc or add mov (bad) aas cli test mov loope hlt inc sub inc inc jae idivl stos inc and lret out sub push fsub ret std pop cmp gs lahf lods jae (bad) and push movsl pop mov push dec cwtl xor iret xor stos push xchg out inc add jns addr16 les rorb loop in in pop sbb mov cmp jae in mov add mov pop imul std mov movsb icebp rclb pop insb cli leave add lcall ss cltd and mov mov insl mov imul cli and mov addl inc pop test enter push xor incl clc mov incl rcrl push das mov pop inc dec add sub jb add shlb shll push xchg mov nop outsb daa bound add sbb aam dec push jg add cmp flds call out add ss mov cmp push mov rcr push dec in push stos decb shl mov arpl in xor adc push mov or sbb inc xchg test mov mov or jmp insl lcall fidivl iret mov and mov jae sub ja adc dec pop dec loopne bnd jp xor sub push scas cmp xchg loop jp xchg or leave add add test lret dec int3 xor mov add outsb inc inc call xchg cmp imul mov repnz add cmpsb jg jecxz mov ss sbb dec pop dec imul mov mov xorb mull dec or test xchg incl jo sub addr16 sbb sub mov jge (bad) (bad) inc mov ret incl pop and loope (bad) pop (bad) lcall sbb aaa mov shlb testb pop test inc insb xchg cmp mov loop dec je scas fwait mov add sub mov sbb and mov xchg inc inc shrl arpl mov dec in or cmp clc gs mov or out xor bound jl or or add mov out inc loopne incl clc and mov mov stos test and ja in shrb stc pop ja xchg push inc mov xor mulb pushf dec test mov jo ret lcall insl jecxz and aas aam lods es push mov aad jo repnz test repz jg test mov pop sbb mov jbe and mov fnstcw adc inc int aam (bad) fmulp cmp cmp arpl (bad) cmp clc push mov js hlt pop incl jb inc dec imul out or inc ret mov (bad) mov sub dec outsb sub leave mov jo arpl clc adc mov add or lods cld rclb outsl fxch loop imul adc int idivl sbb and mov inc outsb pop nop sub jne je inc daa add inc ss (bad) iret or (bad) and stos jno cmc mov movsb lock scas les fwait leave pusha mov rcrb fsub (bad) dec adc or jp jb push pusha xlat mov sub inc cmp push (bad) fisubr rorl xchg jns xchg int push adcl in pop mov inc cmp (bad) mov adc mov ja xchg stos (bad) dec rorl push xchg fisttpl std mov push (bad) imul (bad) jno out adc xchg out and push xchg insb and aad jae in mov add ret and loop mov inc aaa mov nop or push mov aad ret mov inc int stos cmp fiaddl jg add out cld add mov sub fs out stos add aas test add subl inc add push shlb mov pop dec jecxz repz or pop pop sub idivb pop sub pop push inc ljmp and add cmpsb fs mov push in inc ljmp jmp (bad) aam xor push (bad) mov lds push xor pop out add mov subl lock (bad) jg or inc rclb fnstsw sbb pop fsubl jnp ds or iret lcall adc ds movl addl dec mov sbbl add mov mov or or inc rolb adc jle adc aaa mov shrb mov js push cmp cmp popf lcall cli mov inc adc jne adc sub arpl repnz push sbb mov xchg jle mov xor add add enter inc inc rdmsr (bad) jp mulb push inc cs fbld cmp rolb or push out mov bound and sub vpsubd xorb or div sub test xchg xchg add push loope push and into std sub mov cmpl cwtl add jg add lods adcl mov dec push ja inc sub mov inc iret mov mov (bad) xor rolb ficom xor and cmp out add insl mov (bad) jnp ss ret repz xor dec gs gs jle inc or jmp (bad) add adc dec ret cmp fiadd xchg insl push push mov or dec js and add je les push ret xchg adcl xor or and push (bad) js and push mov testl faddl dec sub repnz xlat add pop cmc sbb (bad) and or or xchg mov in inc mov add xorl orl fildll les daa sub sahf sub xchg cs cltd cltd insl sti nop es jb push sarb cmp push mov imul sub (bad) sbbl xor je and mov je in out inc jne push mov push (bad) xor mov insb fiadd sbb mov and xchg lcall (bad) mov mov xor lret push insl push shll out (bad) lds pop push test fild (bad) adc xorl in and lds test or test cmp inc xor mov je aad adc test or les or cli in inc pop cmp outsl cmp lea sub je jno je xor push pop lret outsb fnstcw fildll add dec js push mov and sbb or sub (bad) lock lods repnz xchg add lock push ds int rolb cmp mov mov mov (bad) adc (bad) xor int roll clc jl add dec std xor cmpsl lds (bad) stos pop push testb aas jmp and xchg pop out shr (bad) and repnz test mov add ds mov xchg sbbl cmp pusha iret (bad) or xchg jp and outsl cmp sbb gs push adc repz insl fildl lret mov jbe fisubrl mov adc adc inc stos lods sbb xchg or push pop insl pop aam movsl fisubr dec mov jge lock cmp push test pop add dec lods xor fdivrl jp sbb daa mov mov xor call lds stos mov push aaa lahf flds imul cli out (bad) jp dec cmp int3 mov movsb or icebp cmp ret adc and mov (bad) mov incl xor pop mov add incl pop add fdivrl pushf pop dec cld push aas dec jno xor imul inc xor mov incl dec add jge inc enter cmp jmp pop mov ret mulb (bad) dec add out sbb push movl add xlat and (bad) xor push and test loopne xor adc cmpsb jne or xchg adc push rcrb icebp sub pop xchg pop int push jle in cmp aas dec jbe daa xor and fimull add add adc out js add mov sub jne rclb lret pop stos push (bad) shll or std mov jnp inc rcrb mov repnz cmp and mov test rcpps add lcall loope push mov loopne (bad) loop or out int jle adc lahf cmp das fnstcw inc ljmp dec (bad) dec cmp test or lds lcall dec push bound sbb in and orb jecxz stos (bad) pop imul or shrl jecxz sbb or add scas fdivl popa xor xor sbb push push xchg ss lds test ror mov mov movsb (bad) lcall add mov sbb push call int cmp sbbl mov fs inc dec push mov cmp dec aaa add popa add mov (bad) (bad) cld nop dec in or jge adc (bad) arpl inc ljmp jb lcall imul gs lahf inc test xchg je xchg xchg mov cmovs or or dec jae mov inc sbb sarl movb push scas testl sbbb xor fidivl dec cmc push fdivs pop jb xchg or mov adc clc inc push fwait sbb mov (bad) cli fadds (bad) dec sub je lret leave sbb cld nop imul and jle and imul mov fldl aas std and or in aaa add loope xchg (bad) test mov adc out cmp or and jno adc mov jg je pop incl or test add add popf adc push xchg loopne sbb jno scas addr16 and xor icebp inc xchg popa pushf insl push sub dec iret adc movsb mov out xchg adc mov cwtl inc call ret loop sub cmp mov push sarb xchg dec jg jl sub test jne adc mov (bad) cmp push movsb js or rcrl pop nop nop arpl (bad) adc enter mov jmp insb (bad) push sub xor add aas ret or pushf movsl scas loop xchg dec dec dec daa sub jbe push sbb jbe or mov nop loope and push popa jbe pushf mov mov jbe ja dec cmp lcall xor cmpsb cld (bad) add xor mov sbb pop add cmp in test dec movsb mov sarb fwait aad das push adc ret cmovbe lds jmp lahf test jmp inc outsb jle jo in sub fwait mov ds inc inc das mov add loop mov pusha mov push cmpsb fs pop rolb (bad) and pop push cmp outsb (bad) pop imul jo dec adc lea or test or push (bad) and or pusha outsl and mulb jne test add loope sbb (bad) mov add push mov insb outsl (bad) adc (bad) lock sbb fldl sahf mov subb repz scas ja dec addr16 cmp das dec js cmp sbb add and add xor or scas ds push incl mov aam pop jmp mov dec pop cli daa (bad) sti nop sub lret nop cmp mov sti mov xchg sbb adc add test lock mov and nop aad sub add fnop subl fld1 andb adc pop je stos (bad) sbb add addb lods xor mov adc (bad) jbe and mov xor add push push mov inc (bad) lcall arpl into sub xor cmp cld push dec add or fwait and lahf jbe js sub cmpsl fnstsw inc push mov inc in (bad) sbb jbe add xor mov add fnstenv jb je jle inc pusha cltd sbb mov add push jne fwait insb inc subb ljmp psrad repz lods int3 dec out scas mov inc aam and sub aam mov push in inc mov sub add inc fidivr adc mov ret mov lods mov popf push cmpsb daa jbe daa jl jno add inc or in out mov or and fbstp inc stc insb push or jae (bad) push mov xchg push mov fidivl xchg hlt inc sub sbb cmp add cs inc int pop pop jno les imul fdivl inc dec add lahf mov out push jne scas push incl flds xchg out jecxz push movsb popa rol add shll inc popf sub lret roll call imul pushf rcrb ja jnp out (bad) out dec stos pop xchg loope sar mov dec pushf cmp rorl enter outsl and mov out aaa insl out push repnz dec ret cmp popa cmp xchg xorl es scas insb ja mov incl xchg jb push addb xor xor out mov lahf mov sub push loop jl or pop mov fsub cmp popa int cwtl or mov xor (bad) popa xchg jp movsb push add xchg xor into rolb in sbb pop mov inc sbb lock push das inc lds adc or cmp rol jns or cmp sbb in (bad) or xchg outsb aam popf mov inc dec push mov es pop fiaddl jae nop inc push add outsl aas adc push pop mov dec jno push push lcall and or int3 cltd inc movsb push mov popf jo pop xor sbbl cmpl cmova jp out jo xorl ficompl dec dec neg aas pop mov push (bad) out jae sbb jbe sbb lods cmpsl nop les and lret push stc xor mov mov in sarl movsb adc out push mov insl cmc (bad) in add (bad) and sarb inc and sbb sbb push xchg sarl mov cmp out imul repnz pop imul mov sahf out imul in push sahf (bad) lahf lcall in and jge push cmpsb dec push adc or leave inc das test scas mov das mov inc ss mov out hlt mov loopne flds push mov daa gs insb icebp sbb adc fwait cltd mov call mov out mov (bad) enter mov cli int3 and add aaa adc nop adc cmpl imul (bad) jmp adc bswap add (bad) lea adc mov negb pusha hlt cmc sbb clc dec jecxz les adc mov or pop cmp (bad) repnz xchg or sub (bad) pop clc test xor and sbb xchg jle negb inc insl ds js mov xchg pop andl sti push sbb jg adc mov mov fildl fsubrl cs movsl je sbb and aas push and mov daa cmp mov jne mov stos adc sti fsubr inc lods add adc fistpl stos in lcall push (bad) ss popa lock inc outsb ss scas sub out mov movsl mov push shlb iret pop testl push in jge jp outsl mov adc dec sub into and or pop (bad) add ret clc inc mov shl xor imul ss (bad) shrl out and pop mov sub cmp dec cmp jg or cmp fiadd or xorl cmpsb into aas and out adc lds sbb jb lcall outsl fcoms dec in push mov in mov hlt fistl jge cli fbstp or rolb cmp jns je cli aas and jne data16 out aad dec push cmp mov xchg mov out mov fmuls fiadd xchg incl mov dec movsl ror andl (bad) jns add mov clc adc xor add popf out add in das lret mov push lret xlat std fdivrs xchg inc movsl cmp mov stc push mov mov xchg repnz insl push add cmp push push loope sar (bad) ja gs fwait enter hlt push (bad) xchg stc sti loopne (bad) and mov (bad) (bad) in or cmpsb inc pop or push je xor out hlt roll jne ret xchg xor and mov fstl les out add sbb cmpl loop and sub mov mov jge in mov push lods in push fmul in (bad) add or fldt adc std adc mov cmp movsl add adc int push push test jns add (bad) icebp inc jne fidivrl incl imul cmpsl enter add das mov inc ret push mov nop dec shrl cli push dec fistpl or rcr cmp test test mov mov push sub test and test add outsb and int shrb ror dec fadds in inc mov xor mov icebp dec adc or mov out inc pop lock cli xlat lret bound jl and adc ss add incl xchg cld mov rcr loop or je test mov sub pop fnsave lahf stc and cmp add push sahf sarb or inc lret and inc loope push insl pop arpl jae movsl fisubl adc outsb cmpsl mov lcall ds std nop dec pusha xor clc jmp push push shll cmpsb adc mov je data16 leave xchg (bad) and push stos pop in js cmp sbb (bad) lcall ja push and mov cmp adc shr sbb setb mov cmp push mov daa lahf jp mov mov js outsl pop out xchg adc pop ret sahf push outsb fs js mov testb stc mov sahf jno aaa ret mov add xor popf fldenv cltd sti daa js adc stos adc mov sbb push ret roll adc mov inc xor inc xor cmp push pop mov out add movsb and aaa add add or xlat imul xchg pop jbe adc push jne mov incl fs movsb jo mov in inc jae fdivr mov imul roll inc fsubp int inc inc push jno push cmp jo or (bad) dec ss loop adc dec sub cmp imul (bad) or inc add loope outsl (bad) or jno in roll mov cmp sti jnp xor inc js sub shlb punpckhbw dec or btc sbb sbb xor xchg insl fiadd adc add pop mov mov idiv mov fiaddl movl add or jne and dec xor inc loope jg add lods ret bound hlt and insb sbb cmp dec loopne lahf xor sub xchg pop and push xor pop aad xor push and and mov repz lods mov sbb clc test jnp gs je es gs push cs push cltd inc data16 xlat ror (bad) cmp je mov iret adc jo mov sbb sub pop xor orl out out sbb icebp jle or fbstp sbbl lahf jbe and cmp inc or movsl jne adc mov xchg ss inc pop (bad) faddl aaa adc adc xchg push mov xchg inc js inc jmp sbbl push in sbb sbb mov test adc push push imul (bad) lea int sbb cmp pusha add psubusw stos pop jo xor or adc jns adc ja pop xchg pusha cmp mov and and push xor (bad) mov std push loop std push cld loopne add xor xchg ds adc sbbl sbb orb xchg pop pop xchg xorl or inc push xchg mov and aas jns push cpuid or loope mov sbbl xor (bad) mov fldenv shll in mov sub ret mov sub mov pop movsl mov in out mov out pop loope sbb les sbb sbb mov add aam adc add adc jle lds idivb jnp push xor push leave inc popf and jbe or mov adc mov sub cmp sbb fimull data16 pop push push cmp lahf jb hlt jbe (bad) xchg or addr16 jno inc xor xorl cmp jge pop movsl xor mov nop (bad) popf sbb arpl ds out dec jbe jno and orl xchg add outsb shrb inc jp pop sbb mov jbe sbb jp sbb insl xchg lock mull mov sbb xlat cmp mov push mov in inc push popf cmp clc inc negl fcomi mov (bad) mov sbb in int loopne pop imul aas out std shlb mov pop int (bad) push cmp cmc loopne xchg add outsl add sahf sahf jnp adc fildl subb (bad) mov ret and mov cmp and sbb inc lods ljmp xor or dec test or cmp (bad) xor mov sub push jno imul xchg loopne mov roll ret aam popf mov dec (bad) cmp xchg sbb cmp push fnop dec sbb aam and inc push lcall notl mov hlt jb mov push (bad) imul mov in mov inc cmp cli movsl push or outsl (bad) push sbbl add lods cwtl daa in shll jne (bad) aam in cmp syscall xchg and jbe pushf lahf mov jae pusha repz or mov add adc adc loopne push dec movsl mov repz arpl pushf imull and fisttpll adc mov and push cmpsl mov pop push add cmp dec add lods add adc cmp in into loope ss inc (bad) or and or stos xchg incl dec stos or sbb aad orl sub outsb sbb (bad) xor dec add cmpsb dec addr16 repnz imul sbb lods jo mov sti mov incl xchg add cmp (bad) nop arpl loopne mul xor jns and add popf push int mov cmpsb out adc rolb test add clc std nop adc and jle add push test test sbb fdivrs and aas mov rolb pop jno outsb popa rol (bad) mov xor sub into pop mov pop in inc ljmp xchg pushw add xchg jg or incl sub cmp pop in or sarb bound push xor push cmp push mov hlt das xchg mov or mov pop in incl imul les mov call loope fiaddl lods dec mov xor call lock loope xor rolb std shrb sahf mov ja and sbbl rclb (bad) clc xchg add or sbb dec (bad) push in test in sub iret aad cli add rorb mov fldenv call add out fnstenv out mov mov lock xor ss mov pop cmpsb xor in out jmp pop pushf in push xor or sar sub nop sbb add mov add aam les test out sbb and addr16 shlb pushf dec adc add adc arpl cmc pop inc int3 jne cmpsl mov push data16 pop push push mov and inc inc jnp es cmp push dec push loope js test add ja sbb gs mov mov cmp and inc enter lds pop or push in push mov push int3 fs mov inc add sub nop xor push nop out (bad) jecxz jp imul in push xor stos popa sub cltd cltd fdivl xlat bound aas loop in add add inc adc lcall adc mov out inc nop xor xor adc jae adc ja push push sti push inc inc mov pop push cmp outsb clc nop sbbl roll lret lcall rorb jp mov outsl cmc daa jg orl cli and add popa cld xlat sbb add sbb add mov mov xchg adc adc out inc insl mov push lds pop dec out stc mov test and loope push xchg adc add cmp inc jmp mov ror ja jno fisttp mov test push sbb jge add fnsave cli fiadd sub stos inc jno adcl push sub jbe mov add rcll add xor sbb repz mov jecxz push push jae jbe and mov mov test (bad) xor inc lcall jmp inc movsb sti mov test lock rclb outsb adc popf xchg ffreep pop xor popl xor faddl sbb inc arpl cwtl cwtl inc shrb mov xor or packuswb (bad) or adc inc sub push jle lcall sub xchg add add shrb or push sbb push dec fwait in ljmp pop push lods add mov mov and sbbl loope shr test push imul sbb sub call xor iret adc (bad) jne inc mov add cmp out jle adc ljmp into push sub sbbl cmp jo js mov ja fiaddl and shrb addb mov in sbb add clc and bound ret sbb ret mov or sbb jno jno out or add or pushf inc inc stos out cld movl jbe adc inc scas addb or jl xor test inc out cmp push add jnp scas (bad) int3 cmp lcall mov out (bad) inc push (bad) push push xchg outsl fiadd mov mov daa outsl push and out xor enter ds inc insl mov jno jno inc push sti dec add stc mov mov xor jns sbb jl cmp and pusha add add cs push adc add mov subl add push dec push into insl negl add call loope inc stos int hlt fstl push adc dec into pop roll nop pop push cmp push popa int3 sbb mov in and jnp mov mov loop sbb pop mov ds jnp push dec mov mov js dec sub test (bad) (bad) push xchg (bad) ja mov les mov test popaw pop movsb jecxz jl push jmp (bad) insl and mov add sbb inc into aas ret or test add in mov mov fsubrs cmp mov push data16 insl adc sarb mov pusha data16 fs sbb arpl out (bad) sub ljmp stos xchg je dec ret stos add mov and add ljmp movsb outsl aad mov lret shld scas sub push inc mov cs leave iret adc fdivrl nop jp sub rcrl sbb incl ret mov sbb js push push test andl add xchg and or in into mov repnz es jmp mov into pop xor mov mov push lods into nop mov or clc cs cmp pop outsb ret (bad) gs push mov add or adc mov add push test jb aas movsb mov addr16 jae std fs ficoml lods js loop sahf fcoml popa xor (bad) xchg inc jns sbb je mov add fcoms push or lock int3 push in push add mov leave add xchg mov xchg fcom or mov adc jne outsb (bad) add sbb addr16 scas or outsb inc xor loop inc int jmp dec inc outsl faddl xchg into das stc and pop dec fs sbb adc cmpsb jge cmpsl cmp pop mov push push cmc mov (bad) xchg push xor lods ficomp nop dec in enter repnz out pop loop daa and test sub fisttpl hlt scas nop mov fyl2x je loop cmp aaa push movsl push lds dec addr16 and pushw cmp and xor inc push pushf shrb inc push pop cltd push mov aad xchg sbb xor mov out aas xor mov pusha lock test or imul and adc sbb movsb fildl cltd cmpb xor aaa and jnp (bad) cmpsl (bad) push rorl (bad) inc lret dec xchg jns aas test dec shrl push adc or jle add inc pop orl popa lds push hlt mov add push fdivrs mov mov lock les outsb decb mov bound je imul leave mov sahf ret aaa test mov mov out jmp xchg and cmp or add inc gs dec mov mov xchg popf dec inc fnstenv and xor mov push andl les pusha and fdivrl insl mov lcall pushf xor (bad) hlt xchg or sti dec jmp add ret sbb popa add jle adc mov inc xchg idiv mov xchg or mov adc mov out pop xchg add mov mov cmp call add scas pop sbb in push jge gs and jno mov sahf dec mov jg add (bad) pop push imul or call les shrb cltd cmp in out aad sahf iret fadds mov add (bad) ljmp jne pop dec sti fistpll add loop fbstp das cmp int test xchg int3 mov pop cmpl add push push es adc add cwtl cmp out loope push mov or out xchg mov or jo jb sbb inc fisttpll or dec mov push or sbb mov outsb inc push mov jecxz cli out stos xchg rclb push add notb fxch add adc cmp jae rclb dec push adc and test insb out dec insb outsb inc jle adc or incl or fstl in inc cmp jge push push mov (bad) dec pop imul dec mov call jg mov mov pop out pop add jne lret aad test jl std test mov aam fs subl ljmp cmc sbb pop jnp add and imul xchg lods jg add shr sahf aam subl sub test dec inc ds out adc push xchg sbb push repnz pop cmp (bad) or and dec nop jbe in (bad) in je jg or or in ljmp int (bad) aaa subl dec insl adc push add outsl pop out (bad) xchg push cmpsb xor xchg push outsl add push mov or inc jmp add fs lahf xchg add div mov pushf mulb dec dec jo (bad) mov mov fistpll inc stos out add ds fdivs (bad) xor (bad) fisub jmp mov pop add add (bad) (bad) ss out inc mov bound fwait sbb add sub mov push mov mov adc cld rolb jbe in jne cmp (bad) xor addb inc lahf lods enter imulb fcmovb add sahf dec cmp and sbbb (bad) cmp inc cli das lcall negl add les sbb outsl ret adc push shrb mov inc mov jo dec jbe adc pusha ljmp adcl xorb addr16 add push mov xor dec fcmove in lock (bad) jno loope sbbb dec sbb or test jecxz adc pop cltd fadds mov out (bad) mov adc fisttpll sahf lock mov add or or and leave add ss orl stos movsl add xor xcrypt-cfb cmpsl mov subl or les out pop icebp pop addl and pop inc mov or mov es jecxz or sub inc adc test movsl xchg or adc imul add add gs and dec sbb push paddq incl mov imul sbb push jge pop add lds pop xor xorb ret loope mov and sub cltd mov out add mov push sub arpl pop mov enter loopne inc adc mov gs sbb pop (bad) add add sbb mov hlt push mov fcmovnu orl and shrb loop pop xor inc jne (bad) cltd lret xchg and add dec mov orl add out push pop dec adc loopne (bad) push outsw fidivrl dec xor adc adc movsb insb push inc ss xlat add cli push push mov and jecxz daa insb mov adc xlat jle divb cmp and sub ljmp inc jmp push jmp rcrb fmull mov daa lcall adc pop adc push add inc jge or adc imul daa rclb addb mov adc lcall or xchg or mov mov (bad) jg jg or shlb and lret mov push int mov inc insl or sub xchg dec mov push in add lods and pop dec lods pop adc add (bad) dec arpl mov push dec or xlat inc das daa in js xor cli scas (bad) lea jp out cmp mov (bad) cs push or dec mov xor bound add (bad) dec fcoms lods sahf pop nop pop inc sbb mov pushf or roll bound imul (bad) popa insl or mov adc scas (bad) das push push xchg push inc mov push jp pop dec es (bad) xchg clc fidivrl or enter fildll xchg adc adcl and pushf lret lcall andl repnz mov adc xorl push scas loope dec jno mov test cmp mov mov adc lds ss incl pop add adc (bad) inc jb out clc cmp fmul lret out stos cld inc insw lahf ja add sbb fcmovnb and cmp (bad) in inc (bad) imul mov (bad) mov mov test and sub sbb imul mov jns cwtl (bad) shrl adc lds daa push push push add or push out ljmp fisubl je add shlb addr16 push push lahf in (bad) incl adc stos add stos cld inc adcb aas out inc inc aas or psadbw pop sahf fsubrl shrb push inc call add push mov inc pop sbb inc cmpsl cmp mov sbb flds data16 xor cmp adc int3 js add shrb push sbb mov pop ss es insl loopne push jae mov (bad) incl pop inc insb addb jge or push scas add rcrb or dec aad test jecxz incl je arpl popa lods push or push sbb imul xchg jg lock xchg (bad) fsubr push incl pop test cmpsl mov faddl jbe mov mov xchg push mov mov and pop pop dec fpatan inc xor push jae mov sub or pusha aad dec adc adc outsl push fs sub shl or notb in cmp test cmp push push test jns fidivrl mov in flds mov pop and jne (bad) nop sbb insl jecxz js inc mov insb xor daa popf mov rcrb daa mov psrlw jnp arpl in adc sbbl add lcall imul or call (bad) stc and cmp aaa repz lea loope loopne ror xchg sbb mov das mov repnz mov fsubr add sbb add insl (bad) bound xor mov loope xor (bad) mov daa roll into adc xchg pop (bad) add ror xlat jle divb daa and mov inc cmpsb ljmp shr and inc ficoml xor jg inc ja enter movnti rorb jg out aam push fimul xchg xchg or fsubl outsl test js adc imul subb jo lock cs (bad) xor and sub adc or into ds sbb aam out in ljmp fs in or imul test addb es dec lds dec popa loopne add ss out inc out xchg sbb arpl sbb and rcrl or cmp popa cld push (bad) je mov lret push imul mov or fiaddl mov scas mov pop inc pop mov (bad) roll add fadds aaa (bad) adc and (bad) cmp mov ret fcmovnb and test cwtl and cld pop cld loopne and push movsl addr16 xlat ret add push add jle sbb popf ret and dec icebp sarb or lds aad pop scas sahf jge add daa pop mov push cmp push sbbl and push test aam loopne push jne mov pop jmp mov and cmp jo inc das pop lds fadds (bad) fldl (bad) xor repz mov inc in insl fadds cmp inc adc dec cmp loopne fistl bnd lcall cld adc stc pop add aas fidivr pop lock sbb add or and int mov pop mov push icebp add sahf dec dec arpl lock push xchg add sbbl addb aam (bad) fadds pop into fcoms inc ds push xor add dec or mov mov rcr or push mov and incl dec ret jno push imul nop pusha popf call and cltd sbb sbb pop into and push lds mov fimull add ss daa dec fistpll and mov roll adc movsl push sub xlat orb and pop adc fucomip sbbl and mov or in or test pusha in inc xor or cwtd jbe add xor fisttpl cmp add jo add aaa xor and dec lods cmp inc dec mov incl push xchg enter stos aaa inc subl cmpb adc mov mov ja and cwtl fnsave cmp and jae xor push sbb clc and ja (bad) lret mov cld mov outsb cmp or push sbb addl js lret insb mov mov aas push add jge mov lcall push dec stos jmp inc fwait sbb fmulp add or mov loop fiadd sbb enter sbb ja xchg or adc arpl sbb sbb or ja cmp aad shrb dec enter (bad) in inc jbe cmp xchg or and stos cmp sub add and and ss inc rorb in les fmull mov outsb sub mov pop push add cmp dec lods sbb xor incl test xlat sti shrl and mov cmp mov pushf cmp subb sarb imul jg,pt push rcrb adc inc les popf push hlt push sarb leave stc mov mov add imul push rolb mov xor and leave jns sbb push imul sbb pop pop push sub (bad) jns,pn jp lahf dec daa in test mov imul subl mov mov jle pop adc sbb insl cli mov add hlt or inc negl add dec insb mov push xor inc testl movsb push mov mov push popa mov fwait push imul xchg jno jo and inc call test (bad) (bad) into mov and aas push mov jo rorl inc xlat cwtl movsb jae pop fsts mov inc mov into icebp sbb jno (bad) and adc adc mov cmp int3 outsb fcmovne bound cmp push adc mov data16 les pop cli movsb ja inc push dec push aas inc add aam aas js mov add adc lods and cmp mov xor gs test xlat pop pop outsb jg inc aam js fldl ss pop push insl or popf in dec jno sbb xor inc pop mov xchg negl out fist (bad) (bad) out and fwait (bad) mov push popa lahf andps xchg add lods lcall outsb sarb hlt jne sbb pushf pop aaa (bad) aam enter adc inc xchg out outsb add xor cmpsb xor adc repnz fs ja (bad) push push sbb pusha jl (bad) call push fucomi add (bad) jae pop repz mov mov icebp or cld subl pop mov les mov inc inc aad or in push jmp leave cmpsb dec sub pop xor in bound aaa (bad) xchg adc daa out outsb fiaddl and pop roll enter imul jbe mov jle mov mov jp mov mov add dec ja xchg les scas adc jns add pop popf in add fs data16 fistpl test xor rcll adc out lret repnz popa outsl incl movsb repnz shll mov stos dec data16 jmp cmp cli and mov lock xlat push mov xchg aam mov add std mov js inc xor out jbe inc push iret flds hlt mov roll lds add lcall sbb and mov nop outsb addl inc fidivl inc lods adc in rcrb (bad) loopne fiadd jl fadds mov push mov daa dec out aam adc (bad) (bad) dec cs xchg pusha xchg andl lds shrb xchg adc jne jnp cmp shl insl (bad) cmp movsl mov add mov hlt int3 xor adc popa add pop and xorl lock popa in sbb xor mov inc ljmp ret mov adc imul fiaddl std nop cmp pop je mov hlt mov pop or (bad) cmc test pop movsb ja repz shll lock mov inc push shl jle xor adc popa add push insb imul mov inc sub or inc jp daa xor push insb jge add jns out pop sub mov mov mov addr16 mov idivl jbe in inc adc lods or sbb arpl pop js punpckhwd aas mov dec mov test xchg fwait ret push xor dec js (bad) mov ss cmp mov inc stc cld shlb mov push or cmp dec cmp std inc les mov and cmp push (bad) mov in push call pop sbb xchg or cmp inc mov cmp les mov daa and adc mov stc and insl out and ds mov add add pushf mov adc cld xor ficompl cmp pop jle push addl jmp pop mov aam cmp out test pop popa cmp xchg lods dec out push gs dec (bad) lods test fistl mov out sub pop jne stc dec lcall mov inc add mov inc insl mov jnp cmp or in sahf or addr16 add and add and jle push fmul xor sbbb out imul and lret mov aas clc xchg sbb jg addb (bad) mov cmp push adc jno adc pop xorb add cmp dec jns and mov aam jg cmp nop fnstenv mov mov add stos or sar dec inc mov jns adc jmp in test cld dec rolb add dec fisubl add dec xchg inc scas insb scas jle or cs les add push imul and or pusha subb cmp imul add popa xor cmp jne cltd add ret nop inc xor pop iret aad aad mov add mov inc push or jl xor push daa adc int3 or or mov inc das and adc enter leave pop xor xor add mov cmp sahf push xor push arpl dec mov mov and or and push pushf pop and xor int (bad) or push fs enter adc jns and xchg inc add sar adc and adc addl jp or dec sbb insl mov inc sbb cwtl inc dec cli das scas or fldl push or popf in fadds and mov adc test nop inc cmp jnp les lcall inc push pushf shll jp (bad) cltd sub dec dec jns pusha imul mov es add lods and es inc gs and dec add (bad) rcrb push out das repnz xor or pop setp xchg cmpsb invd repz sub pop test xor push mov mov push and jns mov fs mov cli loopne mov fldenv and dec jmp mov add dec stos push out imul sbb in std rorb pop xor das and pop pop shrb fisttpll add xchg pop insl mov insb inc out and addr16 inc in fiadd pop cmove (bad) mov loop push incl sub or xor add sub cli in inc xor or ret pop inc mov out cmp jl add lahf adc cs sbbl in add add int3 mov pop addr16 jg add push jae and or sub push jne xchg push stos sbb in or or sub sbb cmpsb mov dec xor out mov pop jb inc out xchg mov popa mov fwait jb fs add pop jecxz inc or pop push loope (bad) xchg negl xor rol jb roll outsb ret ss rolb sbb or pop ljmp lahf dec outsb sbb int dec mov inc lea push cli popa xchg (bad) js sti push orps xor out fstpl inc adc jnp movsl adc in jns jecxz jo mov negb push sub pop push lods fmull cs pop dec jg adc lcall pop cmp ficoml xchg cmp iret pushf and daa or add flds xchg pop outsl inc sbb inc pop mov lahf leave add sub lea imul in inc (bad) pushf inc pushf sarb adc nop ljmp les mov popa sbb fsubl sub outsl dec arpl inc cld pop lock fsubrs mov addr16 xchg loop sbb mov adc dec and add pop push pop mov fiadd pop lahf push inc out or xor mov push negb inc in ds and mov ss push scas jecxz adc mov cwtl mov mov push cwtl fs push lea in imul ror or push loop pushf nop mov mov loop (bad) loope mov movsb add psubw add lahf int sbbl insb lret lds incl scas aaa mov cs (bad) jnp or data16 cmpb je notb rol flds movsl daa in ret loope mov loop mov or fwait or cli inc inc int aas push addb or inc in ud2 hlt jbe adc xlat or adc imul sbb mov es imul xchg pusha cmp pop mov movsb jg pop sub (bad) cmp setp scas int3 add add arpl push mull fwait dec sbb ffree (bad) cmc fiadd popf lds lods inc xchg dec push mov icebp lret inc imul les push sbb pop iret xor sub mov jo xchg das pusha loope adc cmp icebp daa leave add insb push jecxz push in add in ja mov cltd fnstsw add inc shll add jl add repz lea xor mov inc int cltd subl cmpl or xchg xlat add sub and jmp xchg imul adc iret roll inc out mov les mov inc outsb mov je arpl xchg mov rolb pop and inc movsb loope sbb aam mov mov and in and or adc sub hlt mov jecxz iret lcall mov cmpsl pop pop adc add sub push pop mov stos stos ss lods and xchg imul loop std dec mov loope je inc xor pop jl add dec inc pushf rcrl xchg in int dec in fabs es loop or or out xchg add fiadd mov aam cmp pop mov test mov insb cs lods out sub stos dec test mov mov xchg in cmp push fdiv inc mov dec sub inc sub jl cmp pop xchg or and push orl or xchg sbb insl sub cli inc add sbb pop push inc pop int jg adc popa dec xor dec mov ret pop pop enter sbb mov cmpsb xlat pusha js mov cmp cltd arpl test rcrb je call shll xor fiadd cmp js mov adc add int3 std roll xchg dec ret nop sub sub sbb adc subl add popf out inc cld push sbb add enter pop push mov cmp loope mov inc ja stos or ret movsb jb adc out leave add aas pop mov and test sbb xor inc fcompl and out shlb cmp inc jno daa aaa movsl mov cmp dec shrl xor xchg in jb jg push push adc ds cltd movsb das cltd insb in mov jbe fisttpll inc push popf out sub clc cmp or xchg pushf fs (bad) mov outsb cmp push arpl or cmp mov mov jae push cmp pop jb leave pop push xor cmp jo sub add inc add pushf cmp jbe das cmc inc push rcrb pop mov jp lahf dec cmp in mov pop mov add and enter add sub pop add jp and fistp inc int sbb sbb out pop test cmpsl je push pushf sarl les loope outsl add dec dec jns pusha imul cmpsb push adc jns adcl add xor sbb into into dec or outsb xorl stc and xchg lock add sbb sub (bad) sbbb cmp sbbl xor enter inc mov add xor test mov lea out xchg xchg push addr16 in mov sahf mov cmpsb adc mov test cmp and outsb jmp outsb dec test sbb adc cmp nop cmp nop in inc (bad) in jl or inc jp ret in inc adc or push push clc mov mov or nop jno push aas pop push jo addr16 and mov nop jbe and fadd and mov push cmpsl lock inc xor out scas cmp into mov lcall add push cld inc (bad) rorb pop aaa fnstenv push mov pop xchg inc or adc imul inc sbb (bad) int ss enter mov mov rol scas xor cld inc or cmp push adc and and mov push pop mov leave add inc int dec faddl add xchg or or js jae xor stc lods sbbb push repz fcoml xchg in fadds push xlat xor jns pop xchg xchg nop push adcl inc call mov dec cmp inc repnz repnz lods cmp popa xor pop ss leave cmp and mov pushf cld into push addr16 test (bad) adc outsb das and lahf leave add xor xchg sbb and push stos pusha adc sub or mov mov dec incl xchg ja or push jle inc loop add ds int3 pop add pop jl dec push mov fcomi fistl cmp daa aad mov sbb inc push jno cmp mov cmc stos inc jge sbb mov xchg inc aam or mov cmp fs or int addr16 shlb inc daa mov sti cmp pusha dec inc push xchg add inc mov push fistl xchg or or shl sbbl sbb jmp out roll cmpsb test sti movsl add push jae push cmp repz push mov adc (bad) xchg loop sbb mov sbb enter (bad) cs movsl gs ret lahf lock pop test jp sub xor sub lods and mov fucomi loopne dec clc xor xor or inc (bad) cmp fs stos add cmp or pop outsl inc (bad) jae jno lds dec mov pop cmpsl mov ret jg sbb mov ds test dec and jp push sub insl pop mov call flds mov add popf (bad) cmp lret pop mov rcrb stc xchg sbb (bad) or jo in pushf mov cli (bad) add mov and gs mov cmp add push xor sti and fwait pop enter dec xor pop das test cli inc pop (bad) jg inc lcall test xchg inc in xor xchg push xchg sub fistp arpl iret pusha mov or bound inc dec je imul jae (bad) shll mov (bad) push xor std push sahf jg add ficom push pop iret jmp mov rcll mov scas cmpsb dec loope jle testl ret outsb sarl and or rolb out outsl jp cmp or bound (bad) dec ljmp shrb (bad) mov popf xor int3 in stos enter xchg xor xchg add jmp push sub pop rol pop je rcrl fchs gs push or mull and mov in roll dec jno jp popa lods cmp std shlb and pop (bad) xor imul jo push pop dec into mov jno adc out out add xchg inc jmp outsl imul out inc in or jnp repnz push into inc xor or dec into hlt or (bad) xchg movsb popa push cld lds mov inc mov sbb imul (bad) dec adc dec out imul mov push xor loop sahf iret jbe cmp and cmp xor ficom dec inc lret jmp dec lcall mov sbbl roll roll push mov inc cmp (bad) out jnp mov je cmp add mov imul outsl mov (bad) (bad) aaa or jbe mull adc std mov add dec cmp add jae out mov loopne jb jno rolb sbb jb sbb pop mov out aaa inc out ds lret pavgb sub test and mov or mov pop mov hlt addr16 inc fdivrs mov sti pop sbb std sahf xchg into push mov stos or stos and repnz out mov (bad) out call push pop xchg sbb mov sti push jne jo in roll push jne enter testb xor cmc and fs pushf daa inc and cmc inc pop int3 adc test mov insl mov xor push mov jbe pop inc cmp add div mov cld nop or arpl fldl sbb sahf jns nop call fiadd and cli mov out dec repnz (bad) fsubs (bad) jge ret sbb (bad) inc add cmpsl (bad) mov movsl pop imul inc inc ljmp adc data16 push dec mov repnz xchg lock mov push movsb cmp add jnp movb mov cmp inc (bad) lock xchg push sub adc (bad) jge les repnz adc jl arpl sbb cmpb add xor add imul mov cmc sub sbb out xor add lds jle xchg or scas rcrb mov popa xor test aas adc cs adc cli repz cld nop sub out cli leave push aas stos inc aam push in in ds clc call mov addl mov outsb fsubp fiadd mov jbe inc insl aaa add (bad) and cmp adc mov stos insl ss insb sbb jne,pn mov test test (bad) aaa mov add sti mov cmp xor fnstcw insl inc movsb inc popa mov push test mov mov push push inc push enter (bad) enter inc lea adc fcmovnu adc jae fadds std test mov arpl dec cld fistl roll mov push inc adc inc mov mov (bad) lods mov jo sub mov sbb or mov cmc push pop inc (bad) (bad) in xor movsb out and btc cmpsb fucom mov subl inc rolb jg or daa xchg sbb ljmp jmp add sbb add mov sub add call mov or xor dec adc into int3 in roll mov inc shll cltd inc and adc imul add mov ljmp pop movsb cld and rcr sub rolb aam rcrl jmp push test (bad) mov fiadd mov jge jmp sbb les addr16 push jo jecxz push in dec or jns and es fsubrl mov inc mov xor mov adc jl add push in cmpsb dec inc daa jg nop adc add orl insb sbbl rcr sbb push insl push cmpsl popl mov cmp xchg insb and jecxz xchg movl mov and (bad) icebp adc test or add jne mov inc push cmp adc push or movsl add imul enter jle adc dec hlt or xorl movsb outsb inc stos and cwtl repnz push leave xor or dec mov frstor mov pop icebp adc cmpsb mov jo push dec dec mull mov adc pop fnsave je adc imul add out xchg mov pop dec ret push adc lahf stc inc aad sbb cmp dec faddl mov and rcrl (bad) les (bad) mov mov push or outsl and push add inc iret cmp mov sbb fldl aad cltd xor nop push fsubl xchg jg push push sbb les sbb (bad) add out cltd mov or jbe or xchg int sub push push nop sub sub xchg popa outsl add subl cmp mov imulb lock std and repz sub xchg dec sbb xor sbb scas cld pop testb out int3 leave (bad) into add shll popa cmp or dec nop jne pop imul ljmp pop leave add or cmc into (bad) lds popa xchg enter (bad) add dec iret movsb and loope cmpl cmovae add jno pop mov mov outsl adc ret (bad) jne bound adc arpl jae jne cmp enter xchg or fwait push scas popa sti mov jp pop sarl add pop aaa fdivr enter mov std push loope and popa inc fimull in inc lcall (bad) or jae pop add fcomps scas fdiv and dec cli fiadd out push jnp sub xorl movsb jbe sbb nop ds in mov cmpsl dec dec or outsl pop fadds int3 fadds sub ror int3 popa mov or movsl movsl out sbb adc sub inc int int sbb push pop pop cwtl aas xor jmp inc (bad) pop and nop push (bad) nop push call or (bad) and push loop mov aam dec mov dec sub pushf or fwait insl inc outsb imul out push push insl (bad) out add xor lea xorl (bad) in sbb dec fisubr in sbb aam clc inc int pushf std in inc jb jo push mov or cmc sub mov scas out and jnp sub stos push int3 ss fwait rcl lods dec cmc cwtl in incl cmpsl testb cwtl test jp sbb xor jno sub xchg add mov testl in jl movsl add xchg cld nop jp ret test aas mov and into fisubr adc out lods ds shl sub add jae inc ret jno mov hlt insl imul mov xor jnp or inc popf mov jp lods and hlt test inc les inc add jbe sbb mov cmp lock xchg or inc mov fnsave add sub and sarl mov popa sbb adc mov mull pop iret pop les jno pop and std faddl jle sub arpl sti nop jns jbe or rcl into frstor cmp inc inc pop jo loope inc cmp (bad) fisub (bad) cmp inc int mov adcb dec in repz (bad) loope (bad) xchg insl fadds fisttp cmpsb iret jp push and cmp out inc call add (bad) pop imul inc or sbb cwtl sub aaa adc mov cltd inc inc aaa push and add (bad) xor and add cmp daa pop popa ret xchg les sarl xor test insb int3 icebp inc out clc outsl pushf roll leave cmp pop fucom (bad) idivb sbb sahf push pop and cmp inc add and or xlat aas aam cmp aaa fldl out aas sarl mov ljmp lcall adc mov xorl data16 xorl pop movsb inc notb xchg and mov mov pushf ret cwtl mov mov inc std sub repz sub inc (bad) insl ret and loope les aaa int3 push ficomp add sarb xchg clc xchg cmpsl pusha sti out pop imul and stos fs cmp sti mov cmp mov roll jecxz insb cmp dec cmpsb cltd jl xchg outsb rolb pop out adc fsubrs or popf add jbe aad pop xor cmp xor insb cmpl mov push lea int push jg outsb sub push jns or pop push scas imul into nop xchg aaa hlt mov cs jo insl inc outsb (bad) (bad) dec clc sbb pop clc xchg sbb lahf adc shlb fiadd mov mov jmp inc adc pop mov test cmp arpl enter aam popa icebp sub mov (bad) mov int3 ss std mov daa adc jecxz dec flds in int cmp and or xor dec pop lods xor xchg in adc call jle popf icebp loop hlt iret adcb out mov data16 add dec jge mov mov jecxz subl out mov incl jb sbb and add mov inc inc jl and pop pop mov jo jne cmp cmpsl lock adc les dec mov jns add (bad) dec in ror cmp rolb insb xchg add dec add jl add push in mov cmpsl daa icebp push jmp sub pusha mov pop dec bound sahf xchg lds jo mov push adc shr std outsb inc out pushf ja lcall push cmpsb dec mov ret mov xchg or push sbb addl dec or xor fimull lcall push xor dec or push les ss cmpsb call scas stos ja fs lret mov xor sbb add xorb add orb ficom xchg fistpll and int3 and jle mov arpl pop inc add test mov sbb (bad) stos (bad) movsb loop xor inc jbe and lret cmpsl (bad) in inc pop dec mull je or imul pop fcmovnbe imul sbb addl add and add (bad) and in xchg mov stos sbb test out inc into sti incl cmpsb enter out inc (bad) or sahf push cmp push cwtl fdivs incl inc cmpl repnz subl shlb jns mov icebp add dec jae adc pop and cld cmp add sbb inc int out add inc mov (bad) xor js inc push inc adc jecxz jmp add outsb ja (bad) (bad) xorl out adcl push push dec loope add xorl js cmpsl jne loopne dec movsb cmp movsb out int mov mov ret dec ljmp inc std sbb dec mov sbb and and inc add push mov roll imul push mov jge cmp (bad) xchg or out js and out stos jp iret imul push jnp or out data16 mov xchg sbb cmp xorl aam movsb andl xor or jg sub mov cmpsl or push adc (bad) add and popa std dec adc (bad) loop or xchg push add push push push addl popa lods pop in pusha mov add stos daa mov jmp (bad) pop psraw xchg add cltd repnz xor jge sbb dec aaa rcll or xchg ret icebp in cmp and add sbb je xchg imul (bad) clc jl inc mov test xchg mov pop inc or xchg cld mov into call push test fiadd fnstcw mov dec sbb outsb mov jg daa int add jno pop or in jmp insb mov inc push xchg testl xor mov or mov ljmp jns sbbb and dec sub mov or add cmpsb inc inc frndint and pop cmp sbb inc sbb sub adc push adcb and xchg or add inc cltd or jle pop cwtl pop mov xor rorb ret jmp (bad) sbb jg inc jmp adc addr16 std add (bad) pop dec std rorl dec adc andps push daa movsl push dec mov or ror rolb sbb aas fs mov std pop push das daa mov sub mov (bad) subb xchg inc test incl fiaddl and ss mov orl jle sub add test or out popf into repnz jle aas ret mov mov mov enter sbbb or pop add sarb push or lret add add xor aaa mov popa and or lods repz je pop aad push js pop inc cmp jb jge pop fdivs add xchg dec test pop fistl dec out mov out cltd jo lcall xchg add inc aas mov inc stos cmp mov lods les push jae inc in lods mov mov shll cltd pusha loope add popa xlat stos ja ja cli and mov stc or push stos insl iret outsl mov mov mov fcompl stos sbbb call mov or xor add sbb add jo inc stos jecxz (bad) sbb sarb stos enter fild sti and (bad) inc fstpl ret cwtl mov (bad) inc push xchg stos (bad) xor into call arpl test les mov out lahf int mov dec outsb dec in and imul incl xchg sarl lcall addl out or inc add xchg stc adc push mov add sub and lock aas test sbb add mov push aam inc aad jmp add mov dec mov cmc push inc (bad) into pusha js sbb jae addr16 jnp bound add push mov jne insl dec divb sbb arpl jae imul andb stc and push push bound test imul cmp (bad) fadds fldcw pop movsl lds insl fdivrl je dec ret lcall je jae nop dec movsb jg in push mov mov pop fiadd fcmovb das andps jle add cmc mov js add cwtl cwtl mov into add mov imul stos or or add push cli int3 and lods pop in and fldenv mov mov lods jb or (bad) das inc add dec jo adc jge sbb dec aaa roll xor jl btr lfs insl add lds push sbb and loope dec js xor aad jb incl enter out mov lret outsl jo mov cmp insl pusha (bad) sub mov sbb or mov xchg cmp or add insb add sarl push les and add leave add and or gs loopne xor mov mov and dec iret cli push sbb dec movsb lret pop cmp stos or vmovsd popf out nop das push mov and fisub and cmp iret loope add aam push dec add inc pop push mov pop push pusha add and jno lds insb lret cli cmp dec faddl outsb les sar sbb (bad) dec and adc (bad) lret jbe xor test (bad) jp fiadd xor mov mov jne fdivl arpl cmp in add repz mov adc subb jbe iret outsl jb adc xor fiaddl movd push call sahf sub dec ds popa cmp in (bad) in mov insl aas mov push (bad) cwtl inc outsl xor clc inc cli out inc and jae sete pop (bad) push mov ljmp cltd sbb jnp arpl push imul sbb mov or es nop sbb movsl inc ret xor rcrl add call inc xor mov ficoml dec and clc jl or fidiv flds xchg loope adc push jbe mov (bad) add add inc mov sbb shrb add cmc inc (bad) xchg daa jae lock or movsb or cmp in mov outsb in shrb mov push dec loope pop push mov loope popf xlat in inc cmp call fiaddl lret subl fadds pop bound pusha insb inc jns sbb adc fucomp mov inc cmp out jle call bound ljmp mov xorl cmp and or addr16 cmp icebp inc dec cmp pop xchg xchg add pop (bad) push jb jno lret and std cmpl or xor xor mov adc xchg sbb sub fmuls fadds jae mov or xor push sahf out pop inc xor lcall outsl (bad) sti and mov push aaa ja add fucomi lods roll jne (bad) mov (bad) cmpsl jne nop jo dec cmp mov xchg pop test cltd psrld arpl inc sub jmp cmp adc sbbl imul add ja or push fistpll (bad) les aam lret nop fcoms nop and mov pop lock imul rclb mov in inc lea fadds pop mov (bad) and inc jecxz adc push cmc pop fadds jp or ret sbb ds xchg and adc (bad) dec cmpsb fist ljmp mov add pop inc fildll and sbb ret roll push aaa int3 add add xchg or mov jge push cs cmp adc jle or repnz pop adc rcrl cmc add das faddl pop mov es stc mov daa aad sbb fwait inc push aam test lcall mov (bad) add xchg nop fs sbbl int3 popl mov xorb sbb test ljmp and adc xchg dec dec inc jmp fstpl push fcoms pop push icebp nop fld1 subb and mov in jo adc pop sti mov insl xchg (bad) mov imul loope inc jg icebp mov dec int out adc sbbl jns (bad) mov or sub scas pusha out sub cmp sahf pusha mov loopne mov pop pushf jle jbe popf enter cmc mov inc adc pop and push pop cmpsb pop andl dec or data16 insl push jp mov sbb cwtl pushf pmulhw aaa sbb or cs icebp inc and cmp mov push les pop pop std js sub or and std add push cmpsl push mov stos push sbb push sahf mov xchg negb inc test adc push rcrl add inc (bad) aaa or pop mov andl inc cmp imul (bad) popl jbe xchg or push repz jno cmpsl sbb jb test add inc push or nop xlat (bad) lods shrb iret mov in adc into out inc pop xor int3 movsb xlat or addr16 jp jmp xor sub and pop pop shrl (bad) dec popa xchg loop add leave inc popf sub inc push inc (bad) mov sahf mov repz inc mov and pop xor sti nop push test outsl inc xchg xor xor add inc jmp sub mov rcrl mov mov jecxz add inc pop mov push add adc ret roll sbb ljmp xor or pop adc lret and stos sbb dec sbb or aaa mov sub lods xor push mov inc mov sub rolb mov test xchg aas xchg jmp pushf fmull and rorb mov inc add test int3 fistl xor shr negl add xor getsec mov inc lcall pop incl faddl mov inc push xchg push fstpt push inc insl mov cmp and push cmpsb jecxz fcmovnb inc adcw lds ss popa sub push int mov xchg lret es or or push lahf pop fldl push mov xlat jp imul pusha packuswb mov inc pop in or dec mov push jmp mov daa mov or mov das cwtl inc jmp pop push loope addl jno lret sub xor pop inc in in xchg sbb mov sbb push out jmp and add add loope cwtl in cld nop push jb mov jmp call int fiaddl popf call fucomi adc shlb ret out cmp add test nop sbb gs jp shll inc outsl leave add nop dec sbb test sbb mov add push dec iret (bad) or xor fadds add inc andl xor dec pop (bad) mov fild jnp add int3 mov popa (bad) in pop aam cld mov out push aaa push mov lea cmp inc lcall in sbb push mov mov enter pop test enter add adc movsb fucomp popf scas adc add ljmp lds imul aas lea outsb rolb jnp daa push xor cmp in pop clc jno fwait mov fcmovne add call out pop push insb push jl xchg cmp andl faddl pop mov sub shr inc mov jmp ss add add cmp rcll adc repnz mov in cmp inc fnstsw outsl adc pop dec push xorl xor jbe sub inc ds aam xor push hlt inc call mov jecxz xlat (bad) push xor js inc scas mov xor mov and inc cmp push addb cmpsl ficom (bad) jb repz pop (bad) add or jno outsl ja or add inc repnz adc mov mov data16 rcl add inc mov add negl (bad) cmp mov sub pop inc movsl add aas xchg inc add outsb sbbl mull add (bad) adc data16 cmp add imul fwait inc sbb cmp lret mov jge sbb outsl faddl popf enter sahf dec cmp sarl push stos push cmp in inc int3 enter adc fiaddl fnstsw mov data16 adc add and std arpl add mov inc inc fwait cli mov cli fadds sbb adc nop and or inc std sbb or in inc outsb cmp lock jne lea movsl ljmp add jo xchg or xor ret adc lock pop add dec nop push dec scas sbb lds mov ret ficompl aaa mov adc mov and cmpsb ret jmp pop jge fucom subb lds jmp add inc add mov mov cli inc nop adc outsb and inc int3 mov add or mov mov mov or xchg test xor pop xchg out test cmpsb fs jle adc stos dec push popf call enter sbb push ss lods mov ds add out hlt add cmp jno aam sub and mov push sbb sbb mov sub shrl in jo inc cmp fiadd sahf aaa cmp sub and inc ret adc test dec fnsave faddl imul mov sub imul outsb mov cmp imul ror mov push das pop (bad) dec pop movsl fs roll loopne xchg mov rcrb iret mov (bad) hlt push xor cmp mov add jl adc xor inc lock int movsl imul ret neg ss and inc dec ljmp add fldenv inc dec (bad) push sub add ss pop add cmp movsb jle jnp sbb push fcoml mov lds sub mov ljmp icebp push nop adc cld and nop push inc pop cli addr16 and adc jmp pop mov push sarl aaa fbstp mov mov addr16 jno les lds xor inc inc shlb add mov fisttp cmc shr (bad) iret sbb (bad) sub cmp aaa inc je or and into notb inc sub and xor or cmp and orl xchg sbbl add call mov incl dec out (bad) mov dec into xlat xchg adcl subb jle push (bad) and js xor dec mov xor jns sub aaa imul adc (bad) shlb and ret (bad) xor (bad) repnz adc or (bad) cmp adc aad xorl movb inc cs lock roll aas push (bad) xchg in shlb int bound lock stos stos jbe mov push mov fdivrs or out iret lcall add rorb xor sahf (bad) add icebp inc push ja push fidivl push xor jns hlt inc jno,pn in push shl xor cmp mov cmp std adc rol sti popa add icebp mov cltd push fisttpll cmp pop sub (bad) or (bad) jo lods xorl or jmp jb jns add pop mov pop inc push xchg pop mov push ret mov test inc mov adcl cmp adc inc xchg sahf mov inc fisubl push sbb or jnp push subl aam push inc push xchg and in in pop stos inc aad sub in pop xor das mov mov dec mov dec (bad) jb shrl mov rorl sbb cmpsb and sbb dec out jmp cwtl inc ljmp mov lcall pop sti nop adc cmp and or xor xorl out inc xor (bad) push scas es ss add jl or dec jp fadds push add ss xchg sbbl or inc and (bad) mov shlb aad mov jns imul or sub aaa mov sub cmpl dec out imul movsb btc pop inc add rcll lahf push cs bound cmp sub (bad) fdiv inc cmp mul into sarl dec xor mov and xchg shlb inc adc lret aad mov hlt push aaa dec ret adc dec imul jbe repz jbe mov loop or adc lahf mov mov cli (bad) icebp add xor add fdivrs xor or lret add and imul mov loopne loopne dec fdivrs pop xchg push fcoml dec mov jmp aaa aaa and faddl and pop icebp or faddl cmp lret sub jbe mov sbb pop xchg push stos lock mov aam cmp inc or in in push inc push hlt into push int3 pop enter (bad) xchg and dec cmp and or stos xor mull ljmp adc and data16 cmpsl lods aas mov subb ret or js adc mov jle or pop mov sbb (bad) sbb icebp sub mov pop mov add in es mov imul clc test ret pusha xor and cmp mov xlat pop xor add mov adc cmp pop xor out lret or sbb dec outsl in subl leave fimul inc mov mov inc xlat sbb sbb add mov movsl cmpl jp cmp ret icebp jne cmp (bad) aaa dec sbb lret cmp mov xor repz ds aam aas inc adc repnz imul adc mov mov insl fcoms inc fcmovne sub mov push cmpsl mov (bad) hlt push or add out mov or repnz loop inc cwtl int sbb insb xorl sub mov push mov mov and test fadd push shlb pop (bad) rcr sbbl sbb loop (bad) inc xchg jecxz xchg sub test inc add fdivs sti stc adc fldcw fsubs fstl sarl and pusha jp adc mov pop sbb jmp add aas lods adc fadds mov js push and push add rcrb repz mov xchg dec mov adc or mov pop aaa xor mov cmpsb (bad) ja addl pop inc out inc cmp inc iret sbb pushf mov lods test rolb or or push stos push push mov adc xor or mov cmp rorb scas fsubp loopne sub mov ds mov add push push dec mov pop push cmp inc add mov inc add shr add inc dec and adc xchg lock int lea mov out mov mov mov sarb dec sub adc flds sbb or push pop outsl jmp out test dec (bad) push push xor push shlb cld mov jb mov or sbb sbb xor pop add fmull xor mov cmc roll ja loope iret jp push xor mov jno sub push jae push sbb sbb int3 loop mov inc test shlb (bad) add loop mov mov xchg out mov popa mov es fs pop inc ficompl mov and mov push mov in add add je mov mov or mov fnstcw mov test jo xchg xor mov xorl sub push xchg notl lods add mov and loop mov or dec mov enter mov orl jae pop cmc mov inc sub mov mov aaa ss push push ljmp cmpl test push xchg sbb add sbb or jne cmp jb shr test pop lret jne pusha and outsb adc inc flds sbb jae cmp inc out and aam cld arpl lods xchg jbe add stos fldl and fdivr xchg add loop jbe xchg or push pop pop insb add push aad cmp cwtl lahf mov loope sbb xchg and lock inc lods add add adc mov xorl xchg or xchg sbb add add incl stos repnz fnsave inc pop cmp adc pop je push icebp inc fisubl jmp arpl mov and push push mov imul and push sbb pop je mov imul ljmp add jne (bad) out je cld and add (bad) cmpsl aad scas aad (bad) mov out xchg add mov pop popa ret aas push adc aas cmp sub fstl outsb rorb cmpl cmp ss out test hlt fwait test test fstpl sub pop andl bnd roll fisubr sarl sbb inc inc cs mov push jecxz xchg mov call xchg loop push out aad sbb popa add insb js xchg fimul or xor jns enter sbb cs mov sub lahf jbe xor repz fwait mov stc dec adc sbb in sub ljmp cmp (bad) mov or rcrl aam jmp mov movsb loope adc mov jnp lret cmp int3 fldl ljmp add inc sub xchg in push popf mov add add jecxz add movsl (bad) mov rolb cld cmpsb enter loopne aad mov inc jbe je ror add jo psrad inc (bad) imul mov std (bad) icebp sbb and mov sbb std test mov dec int3 incl jge cmp loopne (bad) pushf hlt (bad) (bad) adc jae call mov mov pop data16 repz int fstpl adc push hlt or or mov xchg push ret xchg aaa js flds pop insl pop xor fprem1 cltd inc sbb and mov cmpsb jl subl and push fwait mov and movsb icebp pop hlt inc xchg mov push jnp test inc dec push pop push lods call sar jbe push roll stc mov aad out inc frstor out jo mov pushf cmp mov cmp testl aaa test adcl add sbb out sbb mov pop jmp push mov lods jo orl push inc or ds add dec outsl inc (bad) mov repnz sub inc jo mov cltd lahf pop inc or cmp jne insb push sub jg hlt adc jg fxch repz sti add or inc insl stc pop dec add mov mov or (bad) in in pop xor inc mov or iret inc jbe jmp incl test aas ret incl sti inc iret jb cmpsl icebp pop (bad) xor test mov iret sbb mov mov jo cmpl mov cmp sub and lock cmp xchg aam cmpsl out adc je stos jnp inc call pop rolb and rorl pop push (bad) fs sbb pop jecxz lahf mov rcr sbb push adc mov fwait push jmp (bad) dec jno cmp aas icebp inc dec sbb cmp fs sbb (bad) dec adc mov jb jno hlt add add (bad) push sub movsl jg std sub in jecxz in jmp cmp outsl std enter xchg shlb into sub fdivl cmp bound out inc (bad) enter add cmpl pop je adc sub inc push mov aaa shlb fnstsw mov imul and inc shl nop ds mov xor adc xchg and add loope (bad) xchg adc test repz adc dec jno sbb add add aas cmp xorl leave add mov daa mov cmp and test push pop arpl xchg pop push fcmovne sub cmp sub or pusha adc or and cli and fnsave inc into (bad) pop jle mov test push mov or add xorl ret cli gs hlt xchg add and aam lcall push sub enter hlt inc inc and xchg lahf and dec (bad) xchg and sbb push xor xlat mov or nop or out xchg and ret pop mov out std and lahf mov cmpsb jo mov out fadds mov adc aas icebp sub shlb lea dec mov repnz add cmpsb jnp dec dec ret data16 and testb xlat push jmp cmp dec add inc jg add sbb loop mov ret or cmp cmp add adc mov push or push aas aam je mov inc xchg sbb ret adc inc cltd xchg jg inc ficoml enter sub aaa xchg add jne mov add jb add and loop push jne sbb or add orl add cltd jo (bad) int push dec shl sub pop je and xchg xchg inc cmp or ja pop or mov jb push mov sbb xorl (bad) mov ja fadds ljmp push or add mov push xor sarb push add sbb inc push inc mov and and mov fdivrl jno subb movl dec stos negb mov adc scas shrl sbb and in addl dec (bad) out sub cmpsl insl repnz ss sbb pop push mov test icebp inc ljmp mov mov imul jb xchg das cmpsb jbe repz push dec jae dec add orl jbe dec cmp popf xchg lahf and push fs xorl fadds sbb into push sub inc jbe add cmp push jno mov inc (bad) jmp mov ret sbb cmp inc arpl fstps mov jno repz sbb inc mov add xorl popa cmpl xor fiadd out (bad) xor in mov mov stos unpcklps mov out bound hlt mov and sbb jl js or fsts inc addr16 mull lahf xchg add mov roll lock jp push (bad) sar cmp pop popa add andl mov xchg clc fwait mov ret ss arpl pop inc add cli repz (bad) out cmpsl xor lret fmuls or push clc mov addb das inc sbb inc pop mov adc insl enter out mov aad test movsl jl jb add es inc push xchg xor add fisubl fistp pop fs fiaddl repnz mov sub pop add and jae lahf cmc and fidivrl adc push mov mov repnz jecxz fs and inc push test mov outsb cwtl and ret inc dec (bad) sbb movsb or dec sub sti fwait or call and jbe rclb idiv loop scas adc mov sub aaa push adc fsubs mov pop incl add mov loope rcll cmp pop mov and adcl loopne add adc in in cmp cltd mov call mov mov pop test cmp sti outsl incl mov adc jl ret inc aad cmp mov movsl jg stc xchg adc sbb es jg add imul test mov mov rcll enter push cs and stc cmp mov ret cltd add je (bad) add and mov mov sub in das test push mov pop lods and ficoml shrl push pop adc push test and jb arpl call outsl xor lret xor and dec int jmp dec pop sti sti adc cwtl je sbb aaa inc sub aaa sahf (bad) sub aad mov sbb add (bad) inc loop cs inc sbb and mov xchg (bad) mov fdivl pop add enter jp push dec mov inc mov sub in (bad) lcall jbe sysenter sbb clc test cmp in add aaa dec cwtl imul push or out dec and lret outsl std inc add inc jno outsb in push or das aas fldl imul (bad) scas dec adc lock in mov or cmp dec and or add or and mov jbe push rorb add cmp xor cmp sbb jmp pop and and roll jo fdivrs or mov mov xor je and fiaddl mov pop lea scas hlt xchg outsl flds xchg call mov or xor lcall lcall sub lret cld mov sarb pop mov inc inc inc pop aaa adc rcrb out xchg sbb pop mov jae into clc std rcrb xchg gs cmp popf mov adc enter jecxz adc ret (bad) add ror cmp into and dec adc shr sbb rcrl test loope and imul adc xor (bad) pushf mulb inc fidivrl js dec and jne repz dec push les xor out (bad) lcall repnz fcmovb popf (bad) cmc lret xor push cmp cmp add ret jmp adc imul (bad) sbb xor call or nop sub into push jnp leave test test lods out js jle fsubl lahf les cs lock aas xchg push dec sbb int lods adc add fsubrl xchg out and lret push push push adc pop notl aaa and jmp jg or inc jns mov int3 mov flds mov daa pushf test mov mov movsb stos mov popf aad jge xorl ret stos leave add movsb or dec sub jmp or add enter adc adc incl pop call mov stos mov or addl push dec sub fdiv cmp mov add push imul int3 pop mov inc ljmp and inc jbe xchg mov (bad) cli pop adc nop sbb cmp jne jg jns std sub fs in and xorl pop les in fcoml sbb addb mov dec loop and xchg mov jp push xor xor cmpsl bound imul jno xchg or test pusha mov stos pop inc push test mov inc push insb in adc fiadd mov xor inc cmpsl data16 sbb push aaa inc aam stos or mov push adc and lret mov in cli cmc inc dec push inc ja or xchg repnz ss mov stos adcl add or pop incl rolb vpcmov mov lods sbbb (bad) int3 and xor pop add lcall push push fadds mov xor sub inc fwait sbb pop and inc cmp push xor fs mov or or mov add jne mov ret sbb adc dec add mov jno repnz push push add (bad) shlb mov or sti mov sbb jp ljmp mov subl jns icebp inc jmp addr16 sbb in lods aas aam fidivr aaa popf enter or add dec mov sub mov out loope enter and mov sbb dec (bad) mov sbb (bad) or add jecxz sbb or ficoml arpl das clc dec inc xchg and lret and inc adc out inc ss pop int jne test iret lock fnstcw pop push (bad) adc cmp hlt inc dec out pop cmc mov imul jge pushf inc es adc out jns lret sub xchg (bad) test cld push andl fmull xchg dec xor push xor push insb mov mulb inc pop mov lahf lret cltd aad mov inc int mov inc pop stos mov jb test out rcr push fs mov push mov popa push xor sbb andl jl mov pop div mov or cmpsb sub aaa adc lock jg sub test inc sub or (bad) adc out mov sub sbb xchg bnd mov out inc xor add and pop jecxz popa mov cmp fs sub cltd or lods jne cltd mov aam ret sahf fbld shr add aaa nop in inc lcall push dec das insl mov mov aam or pop and daa or xor sub sub mov shrl add xor std sarb xchg ret cmp pusha js lahf dec fmuls and push push push and add clc outsl in rorl mov push mov xor sub call je cmp sahf ret dec jmp adc sbb xchg add add mov (bad) cmp pop jbe call aas pop and inc add (bad) dec jp cmp jmp enter (bad) mov sbb ficom xor test add cmp call and shl push pop push loopne cltd cwtl fs mov adc ss bnd (bad) jbe cmove add inc hlt les lret mov mov add add lods (bad) adc das scas adc and out xchg aaa pusha push dec sbb or and jne bound xchg cmp mov push sub fsubrl jmp mov push mov jno mov adc cmc xor enter popf inc add lds cmpsl adc mov (bad) sub outsl and cmp imul xor mov loope jbe jg stos inc cmp cmp xorb pop ljmp jle jae sbb pop fnsave sahf fstpl push popa sbbl fwait xchg pop push or pop out mov (bad) mov test in pop jnp leave pop fwait inc loope pop stos dec adc fcmovne add sbb fstps sub movsl add sbb notb mov jl xchg add fwait xchg mov xlat arpl dec (bad) dec mov mov stc movsb pop lds push xchg mov icebp ss (bad) setp call pop adc xorl scas and add adc mov dec adc orl dec adc (bad) pcmpgtb scas inc cwtl inc ljmp sti mov sbb mov cld pushf adc negl (bad) (bad) repz add imul les fcmovnbe out insl cld push push inc mov jae cmpsl test nop dec push lahf mov mov push das mov xor daa cmp xor push sbb out xchg xorl or or mov adc movsb test call or push aam jno aas pop enter ljmp push ds mov jecxz add clc mov pop mov sbb mov sti xchg xor ret aas loope sbb rcl fldl inc pop inc sub insl nop jbe clc lods shlb incl adc enter call inc clc or dec sbbl cmp pushf sbb adc enter punpckhbw inc jmp fs xchg add (bad) or addb and xor pushf test mov (bad) in and in in jo popa or pop or mov rcr fsubrl pop mov clc inc adc cld nop ds and loopne cmp add and adc mov inc push insb push jo sub mov sub out fbld sar insl inc jmp adc mov mov insb mov pop fwait jbe pop dec lds in add repnz enter ret outsb pop mov test and test aad jb inc mov mov lods push adc in in mov std pop add pushf or sbb dec movsb std sarb xchg mov ret inc in xor and or iret ret in inc pop ja mov xchg inc lcall pop mov cmp push cmp addr16 add int3 and (bad) xchg push int3 pop jnp pop cmp lahf xchg (bad) cmp pop jbe mov std xorl out inc xlat bound mov or sti ret xor sbb push sahf and cmpl gs jge enter movl test data16 mov inc ret push mov push cmp in in cmp arpl nop cmp push adc inc cmc mov xchg aaa popa push dec sbb add xor fdivl ljmp lea (bad) mov addr16 sbbl push mov push nop jno and xor ror mov dec fisttpl or mov mov mov xor sub adc cmp (bad) pop mov and lea jo xchg inc sbb ret jl and jl aaa insl vpshaq popa mov cmp push mov jp mull or enter add push aas pop push cmp sub ljmp loope test xchg imul (bad) imul subl or (bad) call mov dec push jno mov fdivs mov sbb mov es rorb cwtl stos into push jbe test mov clc adc test daa jae and loop in (bad) xchg fdivrl imul push cmpsl adc add subb mov test mov push add (bad) push loope sbb lods push sub sbbl xor push in inc mov ja add ds and cmp sbb stos push lret lahf scas hlt add and dec out popf enter js arpl (bad) lock test sub sbb sub std adc in je cmp es pop jle or aad or pusha mov push imul pop sti mov stos adc xchg in push insb mull imul xor addl (bad) push or subl arpl (bad) out inc xchg xor sti mov lahf pop rcrb xchg cmp adc rcl jb jmp pop push icebp add jns sarl xor inc test add ret call test pop mov push mov adcl cmp out or test pop sbb test add addr16 cmpsl ljmp (bad) stos test xor push inc addb jecxz (bad) lods nop es incl inc add adc ja push (bad) sbb jl or mov loop jb push xchg jbe out inc xchg pop daa mov inc or push iret adc jae or dec xor ja xorl idiv test mov jmp sbb inc xor ljmp subl inc das and push mov xor cmp ret loop add push rcrb sbbl mov push and pop test rcr clc (bad) pop or sbb pop nop pop rclb jne js and in inc or and jbe jns movsl loope pop and or mov and imul mov mov mov subb loope xor lret dec inc dec leave add jb sub imul mov fmull gs (bad) (bad) rcl sbb jo and inc cli add mov push clc and cli out dec mov daa int xor inc dec push add dec pop ficom movsb sahf cmp std mov push mov aam int xor jmp mov dec add sbb inc add (bad) or out pop inc sbb push mov mov out push mov inc sbb ror (bad) aam movsb add pop jno inc stos xchg in xchg and push and push inc lods pop stos aaa mov xor test nop xchg int test bound lahf jno insl mov in adc inc inc arpl mov mov pop add xor dec sbb jle xorb jl sbb (bad) mov xor pusha loopne es sbbl lock push shl mov in lahf push sbb sti and roll sub (bad) push arpl popf push out in xor lds push (bad) sbb add inc mov pop add es and (bad) xor bound (bad) jbe jg cwtl popf adc jo dec inc ljmp add fs inc cli mov mov pop xor dec sbb in sbb mov sub pop movsb jbe sbb incl or stc and cmp sbb inc icebp inc int3 add mov cmp and movsl pop cltd inc stos les movsl pop loope jecxz or jnp lret testl fnstsw add jno push outsl setb jp outsl int test ror or mov or adc cmp gs fidivl and mov popf orb (bad) call mov in inc mov adc (bad) or ret cmp add mov aam nop inc in ret adc nop pop negb loope sbb add push and int cld adc loop mov push popf push stc mov pop movsl push outsb out push adc call mov psrld testl sbbl (bad) jle sarb inc cmp rolb imul inc sub inc sti push sbb sbb hlt inc lods cmp call and mov sahf push aas xor ss sbb or inc xchg fnstcw or les pop jb xchg cmc xchg inc in and xchg jne add push inc aam xchg lcall mov clc (bad) push sbb sub addb or push les scas lods rorb jne jge inc ds movsb aas push or dec data16 insl bound mov pop cld xchg xchg iret stc inc push (bad) cmp adc cmpsb cmpsl insl insb add push fiadd shrb mov rcrb js pop nop je inc push pop pop sbb mov cmp add or cmp cltd xchg and add inc cs and fimull add gs jp inc call in adc or jg mov cmp jae sti nop imul outsb fnstsw add les gs jo rolb cmc cmp push mov out std nop sub pop xlat adc fs data16 push adc xor sbb mov lds mov int3 daa lahf or insl pop jg rcll or and push ret lods int fisubrl je push pop mov orb adc pop xchg (bad) xor inc scas sub aam inc sbb (bad) add cmp mov (bad) xor inc enter inc sbb nop jae aas mov sub cmp ds mov push ss fldenv inc xor aad dec test push jnp push sub (bad) call fs push push adc mov xchg fcoms das dec jbe outsb cmp (bad) mov gs mov data16 cmpl or jp (bad) (bad) (bad) enter loopne scas push loopne es xorl imul inc push or in lahf push sbb jo iret or xchg out mov sbbl (bad) cmp rolb mov and pop mov test mov fiadd mov aam and lret fwait lock jo jp cmp popf fldenv dec mov int repz int3 sti int repnz push ret jp jg push test das dec cli jl popa sbb push mov adc sub repz pop pusha mull hlt mov insl aaa popa imul push out jle and dec fsubp add sahf adc xchg loop jns dec adc imul sbb cmp and rolb das xor xchg insb jb xor mov ja and popf arpl (bad) cmpsb push mov inc adc (bad) test and jne call add sbbb imul mov inc lcall cmp shrb and pushf inc fiadd or and jbe sbb popf fiadd test test sbbb mov movsl aam adc popf les out je add sbb orl aam inc jne test mov ja push popa xchg loop ss or push outsl jp incl inc fstpl clc and (bad) push sub push mov xchg cli cmpsl mov test incl das xor sbb and repnz xor fwait cmp ja push or push hlt sbb outsb cmp cmp cmp es addl mov cmpl xchg cmp lahf mov out inc lret lcall nop inc sbb mulb (bad) xor mov push dec stos push pop push sarl subl ss sbbb mov jge mov into scas ljmp and lret outsl jno inc outsl mov outsb fadds push fisub mov add pop clc test mov adc push in sub cwtl and lcall insl fpatan sub daa mov inc sbb adc cmp inc (bad) int je inc sbb inc push insb bound xchg pop push push mov xchg subb cli scas sbb lea xor repz add pop mov jno push pop jne jg nop add add inc cltd cwtl (bad) and aad adc (bad) aam jp in addb add add adc inc fmull add arpl pop jnp inc bound jl into inc aad fidivl add insb subl int3 adc push fsubr mov dec add enter adc cmpsl jge push dec fmuls add adc mov or sahf mov test push pop sti cmp inc cmp mov inc scas jmp mov jbe in xor or dec xor xchg test mov jbe lret cmp (bad) add jecxz or cli out lods jns or dec add int cmp sbb loope dec out sub or mov inc push dec and mov lock das push adc rcr sbb loope or adc xor clc leave xchg les pop sbb sbb (bad) roll xor adc jge or pusha inc mov fstpl mov mull dec (bad) sub test mov (bad) aam push sti insb inc cmp mov jge or adc add mov sub test add sti mov jmp iret sti nop adc std nop data16 mov add add subl scas add jo mov cltd cmp sbb sub sbb and inc loope loopne jnp cmpl push jp cmp aas mov hlt iret cmpb (bad) or mov in push nop and lock fadd push xchg pop gs jo idivl enter mov xor jbe fiaddl adc sbbl test aaa push add nop dec idiv (bad) jbe jecxz clc jae iret and lahf and movsb jg cs adc and loope shlb mov addl insl adc (bad) push add flds sti inc adc loopne test lahf mov test adc call adc roll inc push xor repnz addb aaa fidivrl or dec pop insb adc mov pop push arpl aam idivl lret nop dec dec and daa cmpsb dec inc addr16 arpl lret dec scas rorb mov rcrb imul or mov and inc roll aaa sarb pop incl mov cmp jp mov (bad) fldenv sbb lods lret fnsave dec push test or cmp cmc push xor inc stc xor lret push (bad) xor sbb cltd and adc fdivl jmp scas ja mov sbb loope aas mov lods sbb mov push cmp push jnp aad cli inc lods cmp (bad) rolb (bad) push cmpsl xchg mov and xchg popa jo sbb leave pop xchg sbbl mov push arpl add push sbb out xorl adc sbb loope mov adc mov mov add adc add mov inc mov cmp jmp or fs mov mov sti and cmpsl fldl add loop pop ss push sti add push and add (bad) sub ret xchg loopne and or test push and jnp inc fisubrl add fmul popa mov in xchg or add roll xchg and mov jmp ret mov cs icebp add imul std dec iret inc adc xchg sbb jmp jge inc pusha in es inc (bad) fildl faddl dec nop dec adc movsl and add xchg call push sbb popf enter push sarb add sub (bad) repnz (bad) mov lcall push dec divl out call shlb sbb adc add pop push mov adc into add inc push pop and mov addr16 stos or popa fcmovnb mov fistl push pop test mov xchg fs or out aad sbb std bnd push dec push daa (bad) rolb or mov imul push fbstp adc shlb add xorb gs and ror adc sbb mov push rclb add (bad) in push fldt mov sbb aas cmc sbb or rol outsb sbb rol mov daa jo add lret lds mov incl sbb or fiadd popl cmp (bad) cwtl push push in out inc cs lock mov test mov ja and out jbe xchg pop jbe or push pop leave push aam sbb pop pop cmp fisubr daa or mov popf mov sbb sub adc and insb sbb (bad) or out and jb mov push incl scas cmp int imul inc mull subl out inc lret cmpl (bad) add and mov mov sarb mov fsts loope orl cmpsb ja and prefetch jns enter cmp lahf dec into scas ljmp test test mov push mov fcoms in push fistl in xchg mov clc inc je pextrw mov (bad) cmpsl cmp mov hlt sbb idivb repnz aaa xchg nop xor and je mov push sbb add arpl adc popa int inc (bad) xor ljmp add and adcl or pop rolb inc mov ss dec adc stos aam mov addb mov sti mov cltd loop pop inc push mov sub (bad) dec add sbb mov lcall inc mov orl jns jae stos sbbb sub mov loope fisttpl cmp xorb sub inc xorl mov jbe jne (bad) push mov outsb fbstp xor add fist xor pop mov pop xchg mov pop add push sub jge xorl push sahf movsb sbb inc scas pop sub cli aad push mov and and dec xor push mov into aam mov cmc mov xchg adcl mov push icebp out js dec outsl adc pop pop in les fiadd xchg inc cmp push addr16 xchg (bad) lcall or sub jge arpl mov push and pop mov xor mov ret aam cmp adc mov sbbb add adc fisttpll clc and cmp imul popa mov push and sub pop pop adc sti shrb out mov inc add inc jns out arpl push adc add mov push cmp mov int pop (bad) outsb addl pushf outsl jae sub scas ja push loopne adc ljmp fcomps inc mov push xor insb adcl jnp dec inc pusha and push (bad) aaa xor lahf add test nop pop cmp push mov mov or xor inc das mov imul hlt inc sub js mov push stc call add pusha inc jp mov or push adcl mov xlat mov add daa jns add cmp iret icebp adc out stos aas adc ja mov inc icebp sub icebp inc in imul jne insl mov inc push data16 cmc fiadd (bad) leave add jl mov pop push lea jl mov push and sub dec leave (bad) cmp shr in push mov orl mov mov sahf popa add daa push in shrb pop dec movsb out lahf push mov aaa sbb lret movsb mov or or mov flds rcrb lods loopne push ret loop inc dec pop (bad) sbb rolb push inc mov mov jecxz sbb add cmp jb in (bad) mov jnp xor dec adc xor mov jns idivb aas push inc xor or inc push or sbbl stc and sti mov cmp shl ret mov jecxz inc int3 jae into jecxz or adc cmpsl cmp xor jmp pop add dec rcr test ljmp in add sbb push (bad) or add addl jge jecxz jae andl insb btc pop enter fistpl lahf insb mov sti sarb (bad) leave add rorb mov ss push jbe or push xchg orb adc mov icebp mov test jae cmp push inc (bad) aaa cld nop dec in dec mov sar cmc inc out push jae xor cmc sub sbb mov subb and cmp bound sbb cmp mov and pop jne push dec pop mov add push add push and mov ja rolb xor cmpb add lea mov test xor fiaddl loope and dec jnp imul cmpsb xlat cmp jb adc fisubl mov mov adc sub (bad) sub inc ds push dec sbb imul pushf test imul lret call adc dec mov adc jae push dec jb lds insl cmc mov popf sbb fldenv ss push sub fimul adc pop ror ds xor and jns inc push lcall mov imul sub out hlt inc nop xor adc mov (bad) push add dec fadds shll iret das mov sub fmul jnp inc xchg or push xchg adc repz scas dec icebp fiaddl xor adc dec mov jbe movsb push jno pop sbb lods pop sub es push push lahf aad adc mov sti dec or and or inc inc loop sbb push bnd fcomps xchg or jp ss ds inc mov push data16 dec (bad) ja stc mov test enter jle addl lahf mov add hlt cmpsb adcl sub ficom push repnz push (bad) ja push xchg fiaddl jmp mov inc inc loope pop cli out inc adc inc jb mov fidivl jns inc mov inc stos mov mov mov insl cmp xchg bound aas pop call (bad) xchg add mov ja iret lret or (bad) pop push fcoms push dec xchg adc cld push push push rcl fcmove xor jl and push (bad) gs sub jge jbe (bad) enter ss jae adc mov inc jl jg add shl push add sahf test hlt lahf test jg xchg pop aad cmp addl jmp inc sub cmp mov push add dec imul mov push inc xchg add and inc mov sbb fmull stc inc cmpsl sbb mov bound cwtl out daa cmp (bad) add jo out add mov or dec ds fistl push enter sbb jl stos in pusha hlt sub mov aad jne xor or enter clc mov jbe test xchg push outsb inc cmpsb jp aaa xchg add sub dec int xor mov aad (bad) dec pop lods cmp mov test int3 cli and jno in ds data16 cltd mov aas aam pop stos push mov xor cmpb jo pop cmp sub or fistpll jno fisubr add (bad) mov inc movsb inc mov (bad) jne leave (bad) int mov xorb add pop fistpl out mov mov push sbb in cmp lods faddl push inc xor dec loope call rclb jno addr16 mov and nop ds loopne loopne and fiaddl push pop lret dec add or incl dec stos add add pop xor (bad) xor or inc or lret xchg stos push xor in mov out fsubl lock or jne mov fwait repnz scas mov cmc inc lods clc addl and es inc insb mov ss jge mov mov lahf shl push add jp ss cltd inc cmpsl std inc mov push nop sbb push xor (bad) mov xchg adc sahf xchg cmp sbb adc (bad) pop sbb sbb sub scas sbb jl xor addb jnp aas and rolb rcrl int loop add movsb push sbb add sub jno cmp and add sbbl mov je mov inc add cmp add cmp dec jmp sbb and les fidivr add mov outsb or mov or mov push fiaddl test inc push stos or insl xchg rolb ret mov push inc fidivrl mov sub xor add push lea icebp inc and pop das and sub repnz adc ljmp shr sbb loope cmp mov (bad) (bad) je ficoml add lret jbe mov dec mov add sub push mov cli fadds int3 mov clc jmp (bad) je das push push ds pop pop test jo fimull or mov adc cmp cmp popl inc dec xor xor dec int mov mulb outsl fisub in je jnp (bad) mov fcmovbe repnz inc lcall or jmp das dec jae cmp xchg mov (bad) mov adc in mov mov inc movsl jnp lock outsb mov push sub add mov aaa pusha ret call jle cmovp icebp xchg mov dec and adc xchg lahf adc fstps push ja clc adc pop fadds andb mov inc mov aaa mov jae xchg cmc loop cltd jno mov xchg movsb jne cmp addb int3 pop rcr push push (bad) and inc roll mov mov out inc sbb cmp add dec out push push xchg popa (bad) mov inc cmc inc cmpsb xor sbbl sqrtps mull les aaa clc and and arpl sub push add or aam imul push dec cmp mov mov sub cmp or outsb pushf cmp add loope jae add sub mov sahf in or ret andl add fs outsl (bad) les shrl popf (bad) jae out mov popa test fwait addr16 jp fs clc jl xor outsl pop mov popa add popa mov ficoml inc out inc push mov push dec push lods and sbb sub jns jnp xor (bad) or mov clc cs (bad) or sarl cmp inc push and dec leave add sub adc (bad) jo lea cmpsl std popa (bad) dec add pop mov sub fimull repz lcall rolb sbb pop mov xor jg pop popf in fcompl aam pop inc lods fucomip add xor repz test loopne dec iret addb or (bad) clc add xchg in or inc and in or mov xor sbb lcall pop add jg fidivrl sbb sahf loopne mulb and leave add jecxz flds mov negl in cmpsb insb (bad) add loopne mov mov test mov inc incl mov sbb xchg inc and les jg cmp (bad) mov pop add add jbe ss les lods xor dec outsl inc pop inc imul or xor pop pop or fidivrl leave inc arpl xchg in sbb mov pop fimul pop push dec or mov lahf fnstsw sbbl cmc stos adc orl in repz mov fdiv fwait mov mov loope bound add mov dec push insl iret cmp sbb out pop int3 cmp insb ret dec sbb (bad) jb arpl das insb cmp mov push cmp int sub and xor ret mov and fadds jl ds and xchg add outsb fwait mov mov xchg or test cld cmp or in repz or push pop scas xchg sub push mov pop push mov sub imul mov pop push mov and mov imul or dec (bad) je mov jge and test icebp inc mov lea mov sub or mov aam xchg or xchg ds or jbe and add pop (bad) inc add sti inc repz lcall push add fldl incl daa paddusw imul (bad) or ja xchg orb lds ss or setl adc insb add mov pop pop mulb stos jae fcmovnbe add xchg sbb shlb cltd mov js pop mov ja inc je inc pop inc add add addr16 ret fnsave ficom add fbstp shrb pop sub insb insb mov push xchg cwtl cmp and and and pinsrw mov lock iret push hlt mov call das popf inc lahf lret add sbb mov and adcl enter fcompl test stos bound and fldl mov xchg ss inc (bad) jecxz add rcrl stc test dec orb mov push jno inc fistpll int3 mov jns add std shll ret ret aas cmpsl enter mov inc test (bad) xchg nop xor int3 mov and dec or push push push dec add subl hlt xchg ret roll sti inc loopne scas bnd dec mov sbb ds or (bad) ret mov repz mov cmpsb cs into jle sub pop push and mov rcrl mov pop jmp and cmp dec (bad) repnz cmp xor pop insl fdivrl inc add lods push lds (bad) sbb jne in fwait nop xor popl rorb nop sbb inc adc pop or push rolb and and jo insb and jmp test sub dec pop stos in mov cmp popl dec adcl mov push das xor leave add sbb inc push mov and adc adc xor out inc dec push in mov fldl adc fbld add mov mov rolb cwtl xor sbb inc sub stos dec (bad) jb orb sbbb in clc or aam dec insb fisub add mov add ja arpl cli mov xor sbb pop mov loope xchg jae pushf nop add addr16 mov add inc xchg bound jge insl dec mov cmc incl test out je sub cwtl andb adc add and xor pop inc mov clc scas sbbl stos or les mov in and cmp sub test sarb jbe stos mov mov subl or xor push out out inc dec cmp mov pop pop mov push movsb or nop imul loopne pop mov adc or std nop mov cltd and stos mov cmp hlt inc mov jnp mov ficompl mov and popf rclb adc sub sbb lcall xchg add call ret ds jl add and es mov popa out add xorb jno or dec mov sub insb mov fwait push and pop mov mov inc shll dec inc sbb insl les xchg pop pushf mov mov adc dec icebp inc int pop or in add notl es je popa iret outsb icebp mov xor clc incl fs add stos add jp hlt cmpb icebp adc add jnp ja mov call mov or leave cs and push loopne out and mov xchg call inc int3 xor mov (bad) push sub popl jne out add push stos inc mov mov push mov cmc iret cld nop inc ret ss inc int push cmpl push mov cmpsl cld pop and adc add cwtl cmp or pop xor fistp inc dec shlb push loope (bad) cmp insl add stc mov in xchg inc call jno movb mov lods xorb push mov test pop cld and notl aad scas inc jae out adc xorl or mov sar and mov aas sarb jb sbb outsl (bad) mov jge push xchg lock aas lret (bad) jae shr sti dec leave add and insb ss dec xchg add fwait ljmp cmp xor movsl insb andl sahf push and or xchg rcll test mov add cmpsl insb mov dec aaa lods imul stc and mov adc sbb pop add cmpsb das push movb add movsb jmp call fwait xchg adc in imul or sbb sub sbb sub inc or add cwtl add loope add testl repnz int cmc jbe enter jo cmp mov popf aas stos mov adc sbb sub add and push enter sbb add lds mov lods cs push frstor (bad) dec push jp mov mov lret inc mov flds mov xchg jbe jbe inc ds inc shr out imul sub pop mov movsb loope jns sarb and sbb jb mov jne mov in mov and sbb insb insl sbb adc adc movsl add add hlt mov cmp flds adc (bad) mov inc xor loope or cmp inc mov mov sbb arpl dec adc xchg or pop push sub or mov testl add adc ficoml popa cmp nop dec pop lods inc jae push ficoml enter push repnz std sbb dec push xchg dec mov mov int scas push pop push in pop enter add sbb in or sub in inc les dec sti jg adc mov pop mov or out sbb sub and (bad) mov arpl dec and (bad) xchg or loop fsubr out stc mov jbe clc and in imull pop movsl rol adc xchg scas in inc es fsubs and int in icebp inc xchg inc jne or xlat jb push outsb mov inc out fldl2t cltd adc call roll add popa cmp popa call adc mov sarb gs xor xchg xchg mov icebp or add adc mov add and nop jae adc jge ds dec (bad) lock adc incl mov xchg iret or mov push or and mov cwtl dec or inc je sub pop clc mov add shl sbbl or insl (bad) imul test dec out add pop stos inc loop and jp xor push mov mov pop push inc dec (bad) call push mov incl test aam shl imul xor sbb mov adc (bad) xor mov jl std inc cmp jne add jae xchg or cmp mov les or stos add xchg addr16 flds sbb jne mov inc jae push xor inc fisttpll scas and testb shlb xor stos mov (bad) or incl xchg add leave hlt inc mov add out pushf cmpb mov push es in enter mov cli mov popa add arpl xchg or jecxz add sahf rcll dec aaa inc mov jb mov adc push pushf xor mov daa sub or addl in add aam addr16 fnsave mov js adc fcoml movsb outsb faddl fs and pushf ffree mov (bad) ja bound rorl sbb sarl mov clc mov inc lds js hlt add insb subb fiadd aad aam clc fstpt or lods clc outsl out push lods mov sbb cs or daa pop cli nop xor imul adc mov mov add in out adc and add sub sbbb jbe lret (bad) mov sbb out inc dec cmp sbbb inc test xor or sbbl lret testb sbb add iret jmp les jb cmpsl nop outsb aam ret adc add sbb push adc or jnp fiaddl sbb xor js adc sti ja dec cmp mov sbb push outsl bound roll add mov cmp dec xor sahf inc add mov sub dec loopne ja add (bad) add or push subl xchg out jge inc mov inc jl adc loop dec or std pop mov hlt mov bound cmp push add jmp add inc scas fiadd nop push shrl movsb cs lods nop cmp aad xor fistpl loop cmp mov inc jb sub xchg into int or jae adc mov pop outsl mov add inc add sbb nop arpl mov (bad) or rcl sbbl jbe xchg and data16 cmp out repz cmpsl cmc jns jne push jns adc scas push mov fsubrp dec negb das xor inc sub cmp pop and or adcl mov (bad) testl clc add stos xor push add and (bad) mov jg nop aas inc cmp div mov lods and cmc dec out adc arpl mov fidivl nop jns test sti daa leave add adc les loope orl pop std adc std inc add negl rol (bad) xor add dec mov mov cmp sbb or sbb outsb repnz lcall or popf and inc loope adc out inc (bad) adc adc mov push mov jno jge sub out pop cli dec push xor mov xor mov sar and jecxz add push loope in ds add inc fild mov pop sbb adc cmp rcl mov mov (bad) ret std xlat inc mull jbe jbe xor in mov sti roll out inc adc sbb std xchg mov jmp data16 test cltd cmp fsubr xorl or dec fcomps in sub scas fistl mov addl pop or dec cmpsb and inc sbb lods push (bad) fnop and into mov jp jno stc int3 idivl enter xchg popa cmp inc pop arpl mov xchg flds mov mov add js or and imul in add add push cmp addr16 in cmpsl mov pop lea and dec test push jg xchg inc xlat or sbb ret mov aad inc push test mov mov addb xchg xor jl xor or mov icebp sub xchg stos outsb adc mov mov pop jecxz and adc insl cmp or sub lds mov jae inc hlt sbb add imul (bad) push ja inc adc jae aaa fsubs xchg ficoml inc outsb ja add mov mov lea fs inc out arpl inc aad dec lds sbb sbb add mov sub pop sbb or rol ret addr16 push aas ret lea mov lahf clc inc mov call insl loopne cmp mov pop xchg fistp xor in cld push and enter sub xchg addr16 ss int jge inc mov aas imul push xor dec dec and push pmulhw or pop pop cwtl inc dec xchg jl addr16 jae mov lahf xchg or fistp pop bound sarl (bad) cmp sub mul lods jmp test dec stc ret sbb sbb inc pop xchg mov mov imul out pushf ss add aad inc addr16 xor xchg push push mov lret insb imul subl lds mov andl orl cmpsb jbe inc inc (bad) jle fstp xor scas xor aam xlat push loop jbe mov add xor mov movsb mov xor nop cmpl in imul hlt inc sub imul dec or add mov arpl add cld or je int jp dec aad cmp inc int3 cmp push mov cmp je sbb add adc sbbb rcll sbb cmp jns fsubrl jp sub pop bound and aaa jns test sti scas adcl inc xchg jne fldl call lods add cmp arpl arpl add sub dec loop sti pop pop push push dec inc (bad) sbb xchg js cmc fadds push add outsb mov jne cld or dec or inc adc imul dec fsts (bad) xor rorb sbb jns outsb (bad) pop add pop adc leave cwtl aad cld nop cmp and ds and inc pop mov and (bad) fldl sbb (bad) inc int3 jg mov and stos push clc inc mov std nop cmp rcrb push sub push mov mov jge and outsl lds outsb pusha mov cmp jmp pop mov addr16 pushf cmp mov je loop or pop add les xchg fwait lods loop hlt nop fsubl push sub jae mov cmp mov push out out add sarl mov cmp test and imul or idivl xor movsl mov or and cmpsl or xchg inc adc setb jno push pop roll dec test dec add sbb clc inc adc sti (bad) add cwtl inc testb adc lock inc fidivl adc repnz mov lds cmp cld fistpll (bad) xchg add pop loopne adc dec int loop je sbb pop push sub out adc ficomp mov mov xchg mov inc pop fistp insl das test dec push int arpl dec inc or and je cli (bad) add xchg add mov fdivrl std mov sbb loop (bad) jp mov push and into push add cmp push or inc push arpl mov jno test insl push sbbl jns dec or mov push (bad) mov xorl inc adc pop repnz scas xor push clc jg mov inc ret sbb sti mov fadds pop cmp sub movsb outsb mov jl sub pop in dec add ret fdivrl or pop xchg bound (bad) in sbb (bad) xchg in xchg cmpl add subl jl push and or jae adc xchg dec add cmp jns imul int in daa xchg add add es ja push imul repnz fwait mov and roll stos cmp js popa les std rcrb jo in adc cli nop ds aad iret roll push pop subl cmp mov divb pop add add jns jnp testl mov test dec clc cmp add xchg hlt pop test xchg fwait insl fimul pop xchg xor adc bound jae jl or outsb dec jb jbe subl into pop mov fldl cmp inc xchg addr16 mov rolb mov leave fiadd mov ja or and push inc mov scas cmp or sbb xor push movsl inc (bad) int incl test jp icebp inc shrb xor cmp mov mov jl rcrb or jge add sub add xor and call jmp or dec xchg add bound outsb leave inc push xchg lea daa inc xchg clc addl jle sbb adc adc add adc add cmc bound mov inc in push sbb in cs stos sbb shlb mov inc and inc popf xor inc adc adc lods dec push push and pop out xchg dec lods mov mov inc cmpsb cmp loop jp fsts fdivrs push das and loop cmp (bad) cmp push push incl mov into lods popf mov lahf les xor sahf in sar or fstpt add mov (bad) xchg mov insb bound dec mov xlat adc cltd inc scas jns xor pmaxsw int repz xor rorb fisubrl xchg adc (bad) mov enter fimull or loop and cmp loop jle and xorw sub lcall popa stos in repnz dec shrd rsqrtps mov je ljmp sub pushw in aaa icebp stc mov jg (bad) xor mov jmp lock mov repz mov aam sti and mov mull int xor cmp pusha rorb jno mov sbb inc lret mov and imull je mov popf sub fwait mov out inc iret hlt fiadd in mov cmp fldl sub sarb push lret mov nop and (bad) fs cli mov mov andl repz ljmp je cmp faddl adc call (bad) or inc cmpsl adc (bad) fldl aas xchg jl dec in jbe pop mov (bad) jge jnp les mov sub setb cmp lds dec fdivr mov in leave add xor mov cmc jns sbb int3 (bad) adc jb xor lfs xchg and sbb add adc outsl adc mov mov aaa int jne pop xchg and mov repz sub inc sbb jl pusha jnp das dec (bad) push out test jnp mov arpl outsl adc mov pop mov push inc inc inc (bad) jmp add mov insb es call mov or loop pusha lret iret roll aam imul pop inc cmpsl mov xchg xchg add sbb xor sub and sbb cmc mov mov inc imul add cmp dec cmp iret das lahf xchg add push aad fiaddl leave add cs icebp inc xchg adc mov push and andl addb mov push push jg cmp xor adc js popa std shlb mov push (bad) popa movsb dec push push ds xchg or mov mov or movsb add (bad) fnstenv push (bad) adc cmpsl mov in (bad) jno add push and repnz or dec mov scas ret insb cmp enter mov and inc movsl inc pushf mov (bad) lret xor add or push fidivr adc imul pop xchg bound pop push mov repz xchg stos std (bad) xchg add lahf dec insb dec mov and add (bad) pop scas inc sbb pop lds push mov or out je jne inc xchg push jmp push push push cwtl loop jae movntps xchg stos xchg js cmp xchg add nop jbe sarb addr16 incl flds daa push dec shlb sti mov out cmp pop cmc insl cmp pop outsb test call adc fiadd xchg sbb push inc mov lock mov in out repz or mov imul sbb pop insb (bad) (bad) xor push fstpl and mov in mov (bad) dec flds mov dec inc and pushf lret mov fldenv inc lcall mov stc inc ss (bad) in inc call mov rorb sahf es mov mov ret mov je scas inc jo rorl ss div cld and loope loope mov add jg push jbe xchg mov addr16 call cmp fldl mov jg and xchg push lret cmp xchg nop outsl mov mulb rclb ljmp lock aaa inc ss fisttpll dec mov pop cmp jbe add fstpt sub ret or adc xchg int sub arpl (bad) xor faddl lock dec mov ret sub jnp add dec ret adc sbbl ret repnz stos cmp pop lret adc mov jne push push cmp aam mov test pusha (bad) push sti fsub andl sahf xchg mov insl pushf (bad) xor jle add outsb addr16 mov test dec clc cmp mulb mov or and roll mov or xchg andl sbbl fisubl into pop mov fldl adc ret stc mov shrb cmpsb int sbb or je push ljmp outsl das inc subl sbb push add popf add call jb mov (bad) add mov nop aam outsl (bad) add call orb inc mov push cmp cmp inc adcl fs shlb mov and fs sbb popf fs push ja adc mov mov and cmpl outsl mov and dec sbb outsl push inc shrb loop faddl stc and stc and cmp xlat daa lahf stos add dec add cli (bad) sbbb sahf sbb arpl cmpsl lcall inc push and or adc inc stos addr16 xchg cmc inc dec push xor jecxz jecxz jb push in pop int sbbl hlt push push jecxz add and jbe add push add cmp cmc and inc iret jmp orl or faddl add ss inc inc daa push lea mov aad inc lcall in dec out stos add xor jbe jne pop mov nop push test jp xor fnstenv jp adc mov cli jno outsl xor push mov inc ljmp ss (bad) push add xchg adc (bad) xchg or or mov aaa and or (bad) sub pop loopne insl ret inc rcl cmpl cmc inc mov mov fadds mov add pop xlat cmp and sbb push mov and mov addl xorb test jne and push push lea inc sbb rol add clc mov xchg cmc add xchg mov mov idivl pop (bad) adc mov outsl push ja fbld sbb jns into incl xchg add jmp inc adc scas aas xchg push ss mov (bad) adc (bad) mov mov mov fwait scas pop faddl mov sub and add outsb jo (bad) dec or adc push xchg or adc ds aad and mov (bad) mov scas sbbb sub add push das dec pop mov mov decb mov add (bad) pop shrd hlt jmp mov (bad) pop xchg add jns les (bad) jp imul and pop mov dec repnz std nop adc ret push in (bad) pop push aaa xor adc (bad) fbstp cmp jg xchg add dec pop dec loope out xor cmp (bad) enter icebp test cmpsb insb jg inc rcl sbb adc or mov mov add clc arpl cld nop sub sarl push adc lahf (bad) or out jno xor (bad) dec pop lds fwait pop outsl inc mov inc icebp inc mov insb inc mov je add add xor insb hlt and jae pop pop rorb pushf pop dec out cmp dec mov insb dec fdivr add lods (bad) jno mov adcl push imul mull pop mov call les jnp frstor dec xchg inc jle push adc cmp adc dec xor jmp (bad) push jg aas test and mov insl and popf test push test inc fist lods movl xchg and inc int3 and imul fdivs mov std fdivl aad jae cld nop pop movsb push ret loopne ds in lea mov cmp je sbb xchg or dec sub cmp jns mov mov mov mov jp xlat jge sbb sbb cmpsl cs mov inc dec cld jg dec daa subl xchg push (bad) pop push adcl and aam pop jnp repnz pop mov and and inc sbb icebp in int out out test lahf dec add and cmp movsb xchg adc out out (bad) lcall sbb xchg jb push xor mov cmc inc ds mov jno pop insl xchg jb enter cmp push arpl sti and dec test incl mov fldl push mov dec daa jne push ror or add pop jmp cmp sub jle adc xor dec add fiadd aaa cli and xchg inc sbb les and pusha hlt outsb mov xor push mov and shlb and push sbbb jmp mov pop push xchg (bad) in insb inc or mov inc int out jb stc and repnz add jl mov add inc adc test add nop and mov or pop mov fsubs pop add insl cmpsl (bad) or out dec or and inc push push js lahf sbb popa fiaddl add inc fisub cmc test dec imul add or addr16 add pop inc and sub dec mov arpl sahf and adc testb andl sub std enter adc ss in test cmpsl jbe mov jno das rorl adc push in data16 push add sarl xchg pop loope push aam and (bad) fucomp sbb jo cmpsl mov and add mov or jne cmp mov mov and mov das and stos call xor push dec in inc mov imul jge mov nop xor jl add roll dec cmp popf lret idivl out sbb test popa mov inc ret lahf xor cmpsb outsb fchs cmpl inc ljmp mov inc add or data16 inc inc (bad) sahf cmp sahf sahf cs push call mov pop add aaa inc lea ret push cltd jb arpl jmp push add fbld dec ss jecxz js add xchg dec scas repnz dec mov adc jmp arpl faddl sti lret out daa lahf stos add mov sbb nop or add mov test mov fisubrl mov or cmp into cmp push jecxz xorl fs jnp sahf sbb fiadd add ret xchg add out inc push sar adc cmpsl adc ss sbb or (bad) cmpl xor adc fwait lods in lods cmp das inc inc insl bound call fcoms and push push dec sbb jl outsb dec ja mull inc dec pushf add enter js je pop std cmp ljmp or fadd (bad) aam in cmove call cmp in shll sbb inc (bad) pop je adc insl lahf xor (bad) mov dec test ret or dec mov xor icebp incl or icebp mov pusha xchg dec or leave add loop adc xchg (bad) mov je push (bad) enter (bad) xchg and mov adc sbb call sbb pop jle inc dec mov stos loope mov jbe lahf dec clc (bad) lcall insb adc adcl aas aaa insb inc xchg call xor adc pop int add shrl pop push inc add add mov or push cmp movsb or cwtl inc (bad) mov cmp cmp enter mov add jno ja rorb inc push shr adc add lods pushf out pop and ror xchg xor mov test push mov or cmp mov sahf and out push rcrb inc push xlat sbb rol in imul rcr das fiaddl xor push cld or rorb loopne cli and adc pushf dec jo in inc mov lock cli inc clc and sub cmpsl add add mov pop inc add (bad) lea cmpsl (bad) testl out pusha adc jg xorl sub xchg pop adc mulb or inc enter test stos mov sbb xorb adc xor mov lahf fldl sbb std add mov (bad) iret jb imul add add or dec add pop adcl mov lods clc mov bound dec (bad) xorb insb inc xchg sarl cmp (bad) mov insb cmp incl push hlt or or push mov xor stos mov ret sub mov ret mov imul fmuls add mov fadds pop pop mov arpl sub fdivrs mov nop cmp jle imul and movsb lahf loope incl fsubs hlt mov cli mov pushf cmp pop mov pop push les (bad) jne mov push xlat cld inc cmp insl cmp inc pop mov xor (bad) push sub loope cmp repnz pop out inc int3 aad (bad) cld (bad) arpl and mov fcompl inc pop mov int3 and mov aad pop or add ss dec js ja subb pushw dec sbb cld sbb incl push sub divb cwtl fwait ds pop mov mov add push test push sti ret mov dec add mov dec ds or fstpl out xchg jno inc (bad) pop fsub add aaa add jnp jle push xor stc adc pop fs test sti popa sarb wrmsr or cmp rolb mov (bad) (bad) roll jp xorl or sub cmp pop and outsl je insl test pop dec lds mov and jg je rsm add rorb bound mov rolb push (bad) lcall or xchg jp fnstcw xor ror cmpsb adc leave mov inc lea movsl fist lods cmp push jae push lods enter xchg mov bound cltd lcall (bad) xor add andl push jno adc push movsl stos popf (bad) mov test jo xchg orl push ss mov loopne jns arpl sar mulb orl cltd mov push mov and rorl inc mov push repz inc ds fs in jne bound jns pop or ja gs cmp rcrl cmp lahf mov lcall ljmp shlb cltd jl jg inc pop imul adc (bad) pop xor rorb mov test lret push int call (bad) jp repnz rolb inc or bnd pop aaa into push xor sbb jo add and lret rcrl sub test and and and fadds inc fiaddl add dec imul dec popl ss and imul add int (bad) lahf jb rorb jae inc push add fs fiaddl aaa add (bad) cmp dec sbb insb sub pop pusha les incl inc add addl lahf fldl sub fwait (bad) in lds push clc inc popf in repnz ds xor nop xor sbb mov jg add ret add push imul inc inc cmp dec in dec push and lds sbbl dec test cmp stos cltd jge and mov xlat jno or mov pop mov add sub jbe test push imul sbb adcb gs mov cmp or mov orl push std rolb incl flds aaa pop mov aad push out add dec (bad) outsl lcall mov (bad) push adc xor popa cld ds jmp mov mov xchg jg mov jo enter or add mov cmp mov and push sbb or push cwtl xchg mov imul shrl cmp inc por popa (bad) and or jecxz add sub lahf xchg or inc adc pop aaa je aaa mov sbbb mov into dec adc add jecxz leave add jge push adc mov push incl lcall inc mov in pop add lahf fldl push mov push sahf sbb xor orb lcall push outsb (bad) mov icebp clc gs push mov xlat and addb enter and popf test pop fcompp and jne nop adc pusha cwtl fiadd ss and push adcl add into in pop mov lock xor inc gs sti xchg add xor mov or ret lock jmp fcoml iret push mov mov sub adc fdivrl and lcall jmp fidivl aam incl dec faddl sbb addr16 std insl inc adc xlat aas mov inc iret jmp out mov sbb sahf les jo inc std fpatan inc cmpsb loop push cmp mov aam sbbb cli push pop jb es mov sti add sbb push inc mov insb (bad) (bad) adc loopne mov add jl xorb add (bad) rolb or popf jbe add adc imul mov jb pop xor pop jecxz fs sub add jae mov pushf insl mov lds shr addb and int3 pop add mov jb lods divl fldl sarb jb inc jo mov sub scas push subb mov jp (bad) xor iret xchg mov mov enter ret mov dec and in inc popf enter (bad) les inc cmp mov inc shrl push (bad) (bad) fcomp add or ds orl cmpl lea psraw sub scas cld mov (bad) lds xchg in and andb pop and dec in fbstp mov mov mov jns xlat xchg xchg loopne sarl or dec or pusha ja xchg sbb xchg bound pop dec xor repz lcall pop rcrl ss out mov mov or (bad) sbb dec mov push js and out mov ret jl insb leave add cltd mov dec mov ret mov mov popf mov ret andb and mov incl aam cwtl inc and push bswap jl push add fs or call lock jns shrl xchg adc lea in out add mov push xor jne or shrb push lahf adc ds sub rorb jp add repz jl push addl call rorb dec and inc mov shlb neg call outsl jmp lods cmp mov incl push adc arpl mov ret ss fmull ret jo out push pop push fildl inc cli push testl lea and xor das imul mov inc ss and add dec popf fcmovne fcmovnb push push lods popf push aas and roll cs roll jnp sti xchg leave add pop push icebp mov arpl aas jbe orl call sahf aam movsb cmove enter mov mov jo push test jbe mov pop xor dec cmc test sahf or mov cmp movl mov xor sub dec mov jg mov fstl and sbb jle fstl ja sub out mov fcomps push push mov out and loopne out sbb xchg or sub mull icebp pop add jl mov xchg aam movsb bound jns jge xchg ret clc lcall (bad) std inc add call out pop aaa mov mull in cmp jle test rol xor fbstp sahf push jno adc xchg mov jmp cmp dec out fidivr or es inc mov in push sahf pop mov mov addl fldt add je (bad) or push mov pop (bad) loop jp and fbstp mov cmp in icebp bound and push xor sub add mov jo cmp in arpl and cmp xchg (bad) sbb fildl (bad) sub mov fcomps sbbl xlat outsb xchg adc data16 and mov fnstcw push adcl and int3 push pop test xchg sti fbld test test dec xor jle je inc jo insb xor ds sub sub sarb add and xor xchg pop mov dec daa push pop or hlt js push pop mov icebp stc xchg sbbb outsl cmp add adc inc clc and jo inc adc sbbl fbstp jbe pop rorb cmp in movsb pop cmp push rorb mov (bad) push sbb addr16 cld mov mov and xchg data16 jp jns mov popa movsl lret lods sbb add outsb js and xor pop in repz inc ja push clc outsb fsts fild sbb mov sahf jbe inc jo in cmp push push lret and dec push imul or push cmpsl xchg add inc mov jbe or inc xchg roll sbb xchg xlat add cmp push sub cmp pop cmp out mov jge aaa gs inc sbb out or ficom mov lock (bad) push stc push push mov hlt xchg sbb inc sti mov mov push mov cmp mov push cmp sbb stos push jns mov add ficoml jne inc fisubl pop sahf pop and push aad mov cmp and fiaddl ret roll cmp sub in xlat inc cmp lret addl fprem1 mov sti dec sti mov add es add mov jmp add push shrl cmp mov push push mov jae add xchg add add xor add popf mov push lock add (bad) ljmp pop test xchg dec imul pop clc xor mulb xchg sbb add shlb xlat and aaa inc in xor mov mov push outsl push mov sub addr16 mov pop inc stc mov and stc mov or sbb out mov lcall test adc movsl add cmp outsb (bad) repz inc scas mov sub popa sbb faddl mov xor adc add mov push ljmp popf jae push pop cmpsl push jo sub pop fstpt push daa push sbb mov out daa je and push mov add mov aaa inc (bad) pop xor jge mov ret (bad) shlb or ss or jp nop inc lea add sbb test add jne mov sbb inc stos add movsb mov addb ret ljmp cmp out pop enter insl inc lods subb xchg add in in xor mov (bad) cmp add pop inc push and add jg or xchg (bad) loope loopne imul (bad) aam std pushf rcrb dec inc pop jmp mov add (bad) inc imul inc xor icebp inc int3 mov xchg cmpl add scas sub cmc sbbb adc and xor iret and and push daa roll sbb repnz aaa (bad) inc loopne push loop add and nop jne repz mov sbb mov add nop pop sbb cli in inc push imul nop jae xchg int3 js loopne pop xor xor outsb (bad) xor pusha clc and xchg and inc cmp (bad) imul and sub arpl or adc rcrb sub nop sub movsl les add and or out pop pop pop fmull mov gs add lds mov push (bad) xor sub dec push mov adc mov or or mull (bad) push pop push dec adc adc jae and sbb add popf aam push mov add pop pop nop cmp cld arpl add (bad) jecxz add js rcrl testl mov add sub idiv cmpsl jns add sbb mov xchg jl insl xor dec xchg nop push lcall jae call ds add test das adc int nop jbe call ds add add fdivrs jle outsb leave inc adc mov loopne sbb pusha adc in addb mov adc add test add (bad) out aam call inc jbe inc and (bad) jg add shrb xchg cmc je jae fisubrl inc or dec xor push call adc and xchg in inc popf mov mov mulb cltd cltd xor sub dec sahf xchg mov and add js and or fsubs add pop sahf test sbb loope int xchg push bound rcr sbb pop imul mov addb mov sbb std rorb out xor mulb or fimull mov adc jno jg or std jnp dec or mov mov xchg inc js add xchg dec inc add test stos sbb inc out lods pushf testb fnstcw ljmp das fldt sbb xchg inc cld nop dec add cmp mov cli cmp sbb push test dec adc sbb xorl or je add xor outsl std enter lret cmc cmp xchg cwtl push inc adc and cli mov enter nop push lahf xchg cmp daa inc mov (bad) ljmp adc jo rclb inc dec aad ja inc cmp push in mov (bad) add adc in pop cs add repz and jecxz movsb insl addr16 or jae mov push aam ror adc push mov addr16 pop inc xchg or js out shrb mov push mov cltd pop push inc lcall inc scas adc dec subl fwait cltd mov dec xor cmpsl les add fdivs inc jne adc xor dec add aam shl cwtl out inc or fstpt add push pop in aas pop or and mov (bad) std fs sbb outsb inc popf add mov mov movsl mov jne and inc or ja out inc imul adc cmp repz mov movsb jbe inc enter int3 jns or xchg sub clc add push push adc push nop orb inc sub cmp push lods mov sbb dec addr16 mov add cmp or std inc jo add add fldl push clc pop incb mov (bad) (bad) cmp popl pop and roll jg and cmp inc sub scas jae dec repz dec aad sub push sarb in in cmpsb jne (bad) cmp mov sub movsb dec push add (bad) lret arpl add xor and push rolb sub loope jnp add mov add shlb test and (bad) push mov movsb outsb sbb xchg inc mov push push xor inc mov fisubl sbb add (bad) add cltd cmpsb sarl adc sbb mov sbb or andb xor cs js daa fist nop xor cli and sbb aam les or mov push xor xchg sbb jbe mov sub adc or jecxz bound mov add mov lds je jle inc (bad) push add aam and ja jb cmp mov mov push cmp sub sbb in xor ret sbb or cli dec loopne mov add inc aaa mov and add mulb jl add fnop sbb inc pop ljmp inc arpl or pop idivl sbb jae push enter repnz xorl push mov shr in outsl lods add pop jno cld ds cmp xor sbb subl mov add add gs pop dec add leave pop adc or push adc or cmp jecxz xchg out (bad) and or insl mov mov or xchg sub cmc fiaddl (bad) mov add cmpsl popa or xor addr16 add pusha and pop stos or (bad) inc mov cwtl push mov mov cwtl ficoml sbb xor inc xchg jo push and cmpsb les repnz and and push in sub movsl ror inc add ljmp add sysenter add enter add mov lcall xor adc cmpsb adc xor cmp pop (bad) push adc sub xorb lods sbb movsl add les sbb testb aas adc cmp mov sbb je and ret std inc ret aad push jbe fldl add inc jp insl popf pop xchg push lods jne inc ficoml arpl loope outsl lock rcrl xor sbb insb fiadd insl nop jae ljmp inc mov cld rorb cli and inc lret cmp and add push fldl mov fiaddl cli stc mov jno adc (bad) pop repz mov (bad) enter mov stc lret push fisttp (bad) call jo pop or ror nop/reserved sbb mov dec mov jp outsb and mov mov outsb dec roll pop pop xor imul outsl inc sbb adc outsb in mov andl insb jge idiv and add out mov stos xchg or jae mov mov xor pusha nop in lcall lds lods push popa in faddl mov push add dec icebp add mov lahf out xorb adc aaa mov enter jg add js js xor inc into and or pop js sub lock sub out jmp add or add mov jo sbb fist mov test sub sbb sbbb sbb addl insl adc push mov pop cmp call inc xorb adc leave cmp cmp popa mov or icebp and imul and mov add imul push xor lock mov push pop pop xchg inc loopne (bad) loopne xor dec and imul jbe and add pop add add or mov sub sbb xor inc adc and mov adc outsl xchg pop add dec mov push pop inc sbb add jb cli test movsb mov ret pop stos add enter and das push xorl add scas imul das push jmp pop inc lock test jmp bndstx popf movsb mov imul fcomps pop cmp inc jb aaa inc and pop dec cmovne or cld xor add and push mov in and sbb insl and add (bad) leave imul testb xor insb add mov mov pop fistpl jp mov test mov popa pop xor movsb shl (bad) mov cmpsl cmp andl lret addr16 pop aaa push mov inc sbb mov xchg xchg sub loop or (bad) xor popf movsl push aad (bad) sbb incl xchg adc outsl push hlt push pop stos sbb (bad) mov sbb jmp add pop add loop mov ss mov pop add mov xchg add inc xor pop pop mov jns jbe pop adc in inc xor scas or push imul mulb jns adc ret dec inc aaa mov ds adc cmp subl inc outsl xchg ljmp mov call push lds pop mov adc orl incl sbb test inc hlt int3 in ja pop add (bad) xor mov xchg or jae jmp scas aam jmp outsb adc insl popa cld sbb push das fyl2xp1 test jo cmpsl push loop repz sbb mov cmp sub lcall fs add pop mov add adc mov sub fbstp lcall xor in inc lods les push int lods incl mov xor rclb jb or inc das sti scas mov and adc push or ficompl jp and adc mov ss cmpl and or mov int push add jg add ret xchg out lods adc or cmp mov sub cmp push in fs or add adc arpl fldl jmp (bad) mov adc lret push xor mov sbb jnp cli incl xchg adc push cs inc push mov or jnp cmp xor sbbl cmc pop and pop adc and pop sbb adc and or sbb or dec es les xor dec xchg rorb adc adc sti (bad) in sbbl push scas enter inc dec jbe es (bad) js inc mov inc scas push push push xor je add and push dec das dec cmp (bad) jbe popf mov test lods mov out sub xchg sbb inc inc pop cli loopne sbb inc add sub dec pop dec shr mov fstpt dec sub or add xorb rorb fist mov add pop xchg add andl aaa add iret adc xchg int dec pop nop jbe adc leave add dec xchg cmp ret pop adc or add (bad) xlat jno aad mov jle mov xchg rclb sarb add xchg push out inc add dec and sub pop dec popf mov inc or xor inc xchg push leave out inc dec mov shrd (bad) mov and xor push mov or imul clc mov push xor fsubr and dec jb xor cmp push cmp mov push jae jae mov sbb cmp push stos insb inc push (bad) xor in push inc movb sub jo add arpl mulb sbb data16 or jne sbb xor out inc inc inc mov repz pop jmp cmc das mov add mov adc lcall push and mov add push mov (bad) hlt sbb xlat jnp add mov cmp loope add adc or fdivl ja and jne mov sbb inc ret sbb inc lret mov or xor insl daa addb aaa inc push cmp adc jl stc mov add sub test add mov repz cmpsl adc and out sbb cmp addr16 repz inc icebp jo sbbl xlat or dec clc add jne and push imul add sbb out je cwtl inc (bad) sbb loop push pop and leave sbb andl pusha mov insl sub nop orl or (bad) mov ret dec dec into jl dec fstp in subl and int3 mov mov push adc mov sbb sub adc aas or adc jle sbb sbb or and jge lahf xor (bad) loop mov cmp sbb lahf mov dec and jp popa add and loope cmp mov mov andl jge and push cltd mov bound xor and mov adc or imul fiadd push mov sub and pop and call xchg cltd mov sub pop dec add leave aad adc jo ss mov aaa fldl xchg xor das sbb nop aas inc adc xchg or add mov sti mov nop imul in std rclb imul and xchg jbe icebp or fistp cmpsl xchg pop cmp cmpsl fisub inc cmp jb je mov popa incl (bad) out adcl mov out inc cmp repz cmp nop (bad) sbb fidivl inc ret popf mov addr16 shll xlat cld popa leave add test in mov in sbbl xchg imul ret xchg dec inc popf sbb add inc andl lea daa inc jmp fildll inc das xchg mov sbb (bad) loop pop inc xchg mov add add enter xor cmpsb pop sub jmp mov pop mov idiv xor dec or add mov add sbb daa in test add inc in dec lds cmpsl adc fs mov gs sbb cmc adc and mov jno notl push jg jnp pop cmp adc push cmc or movsb (bad) jl cs (bad) push or mov push outsb lods jecxz inc shr lahf pop mov hlt test popa cli mov sbb pop jae and imul push rorl loopne lret mov and (bad) roll or mov inc fucom inc inc fidivrl fdivl inc inc mov xchg mov mov sti push push and es and sbb lock fwait inc jecxz enter jnp call aad adc jns loopne divb call cmp jns lods loop ss sbb dec dec std andw xorb add and sbb cmovp fucomi mov jge mov inc inc cmp aas xor movsb or stc and xor (bad) dec dec (bad) rolb push push add jmp jge and mov (bad) cmp pop loope add lahf and shrb inc out lock ja sbb ss int3 adc cmpsb out addr16 ss inc icebp sbb jge or pmullw inc sub adc or fldl call cmp jnp add or fstps xor or data16 inc mov jmp or xchg add sbb and mov fadds call test adc pop bound push xchg xchg lods arpl jb pop call loop sub mov xor push or fs and or mov add jnp hlt sarb adc imul xchg jle subl enter push pushf mov roll icebp sbb mull pop mov out movsb fcoms dec dec mov add cmp push fsubr (bad) sti mov dec add inc std sbb xor jle and aad dec and dec adc movb add dec mov fldl incl mov mov dec icebp or int mov iret jp rorb mov add inc jne push pop cmpsl testl fwait in popa adcl pop call iret out push (bad) push popa mov dec loopne push dec jo nop push imul in pusha adc cwtl sub in sbbl mov xor cmp mov and and pop jo inc or pushf addr16 cld nop xchg sub cmp je out inc or add inc sbb push into jno adc imul popl jns and addr16 push push add pushf push inc ds dec push hlt or jp sub orl loop and jo mov mov xor and out dec fadds (bad) mov jb fadds (bad) std test jmp outsb dec xor into cmp add cmp lahf add lds jmp inc and mov or mov sbb andl roll in sub insl adc and adc sub jo faddl and sbb cmpsl imul push mov cmp (bad) enter adc mov test adc mov mov cld rolb cs enter push in movsb fldenv je pop cmp xor push xor push (bad) or or mov inc fisubl arpl out repz cmpl iret push addl mov jno push and inc xchg inc les inc loope adc jae cmp mov push xor shlb dec leave add jne (bad) mov sub ljmp loop mov (bad) adc adc fcmovnu andl xor fiaddl pop dec or cmp jp scas addl mov imul add lret mov jo adc adc lds pushf mov inc aam fnop cmp js mov mov es nop sub insl sub add in push stos icebp pop insl nop subl fmull mov sub mov roll out inc xchg xor int push mov or les pop leave add add push popf dec xor or adc xchg jbe (bad) push add daa jmp add das lods nop adc pushf dec in sub push ret inc and std in call ja int jecxz push (bad) jae stc mov movsl add and orl lea mov cmp sahf or xchg (bad) stos and adcb pop cmc jp gs cmpsl pusha inc mov xor jge or pop out jmp cmp inc push stc pop inc sbb pop aam insl cmc add (bad) ljmp inc arpl sbb xchg popf out hlt inc inc add inc scas fs jg out popa mov jne pop pop fs and pusha dec cmp jl cmp mov mov pop add mov inc sahf rcll add adc or pop aaa loope insl sub pop lcall test divb inc sti mov xchg xchg add fisubr adc add mov or ja sub fnstsw add xchg dec leave mov fiadd sbb mov or mov pusha mov aas fistpl mov test hlt dec or inc adc jbe sub jae pop or inc insb mov lea jp imul cltd inc (bad) or add (bad) daa xchg into jbe and xchg mov mov out mov in imul add popf xchg pop xor jo adc data16 shl sbbl add fmuls lcall notb xchg (bad) add and sbb mov xchg fist adc addr16 fadds pushf insl loopne mov pop inc mov (bad) jmp sbb add xor movq or mov pop lcall or fiadd add jg ja push xchg insl push (bad) lret cli push es mov jbe jmp push xor fdivrl loop repnz and incw xor xchg (bad) incl leave add xchg fs sti gs cmpsb sbb mov repz jbe mov dec pop xchg cmp and mov ja out test adc loope cltd test jmp add mov enter adc mov cmp inc loopne inc mov mov outsb or inc aam out ljmp cmp (bad) jnp push dec dec mov mov pop push mov ret push mov or add mov jb fs xor mov ss pop push loope adc int mov hlt xor inc xchg lds insb aam mov leave add xchg (bad) adc xchg mov sbb or scas fldcw or push push push faddp sbb pushf cmp cmp jbe or push inc mov in lock mov add xchg inc jp into clc insb andl dec inc sti mov or mov lcall or pop dec fcomp xorb push sbb push into inc (bad) int3 mov sbb push add push xchg out xchg adc mov inc dec stos lea aaa ret jns addl sbb aaa inc mov call aaa inc clc jl and add xchg pop add sbb adc insb imul cmp out addr16 push dec repnz daa inc xchg adc mov cmc or adc cli cmc inc jne xor push adc clc (bad) loop out pop mov aas lret mov sbb and jbe je cli js aam dec mov sub xchg ficom imul dec fisttpl (bad) xor mov pop cmpl sti dec dec or outsb movsb outsl or ljmp ss jmp repnz xor mov push bound ret ds and inc fisubr adc out sbb xchg sub leave into mov or jg sub fnstsw add dec leave mov fiadd sbb lahf adc stos jp cmp dec inc jo mov lahf in popl lods call jl add aam bound or fldcw pop pop pop mov out push push insl fistpl (bad) or sbb mov cmpsl lds and mov mov in sub aaa xchg jecxz add jnp xor cmp cmpl roll stc inc push or mov push add jb add (bad) add pop and mov push es or push xor stos add mov xor jg stos add lods loope mov imul add add mov mov pop inc ds xchg add (bad) mov cmp push add popf sub pop xor repnz inc out loop jmp add sbb nop cmp sbb jbe mov cltd inc mov pop bound jnp adc (bad) cmc jno pop push cmc dec aas xor insb dec pop jns scas aam lret or addb aaa add adc and sub dec sbb shlb push js adc cmc or mov ss adc jp adcl mov out inc mov cs jae hlt or inc lock xor cmp cmp subb inc stos cmp pcmpgtw nop sbb push daa push mov sbb pop dec pop and imull int (bad) mov inc xor enter or cs es push (bad) lock push loopne aaa and push push lock stc jb ficoml stos or sahf push int3 in pop lea jne push mov (bad) fidiv adc js and jae ljmp idiv mov add xchg fwait out inc (bad) flds (bad) push push adc or sbb add incl mov or push imul add add je add fdivr loopne adc dec inc add add add add add (bad) fildl test add add push pop push pop push push add pop push push push push push pop pop pop pop pop pop pop pop or or or or pop or adc adc pop or sbb adc adc adc add pop add or adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc adc rolb or pop addb and add add adc inc add add add add add add inc add add add adc push add add add add add and inc push pop adc popa bound adc jb (bad) mov (bad) lock mov shl push pop and aaa inc push jae jne xchg mov rcl loope repnz ss inc arpl in and mov movsl es inc add add add add les adc add add add fiaddl or add add add add add nop xor cmp outsl mov adc jnp xchg int3 idiv and jle mov sbb outsl mov add jnp xchg int3 idiv and outsb addr16 sbb outsl mov adc jnp xchg int3 idiv and jle mov sbb outsl mov add cmp (bad) sub lock dec fldcw mov jnp cld pusha cmp jb in lret lret dec jb push incl dec xchg imulb xchg sub in lahf jmp jmp push aaa jnp std rorb out incl dec sbb je aaa sti aas shlb jp sub addl enter cwtl in testb in addl enter cltd in testb in addl fs iret int3 jbe and or (bad) push xor aas xor in mov flds add cmp mov and and aas xor in mov flds add mov mov pop aas fs iret int3 jbe and or leave push cs lahf cwtl in testb in addl enter leave pop stos and and test mov ds sbb scas arpl fisub dec push arpl repz add jl js (bad) fnstcw testb cld (bad) outsl mov mov fs iret int3 jbe and or (bad) outsl mov mov fs iret int3 jbe and or (bad) outsl mov mov fs int idiv and jle mov or fucomi addl enter cwtl in testb in addl enter cwtl in testb in addl enter cwtl in testb in addl enter cwtl in testb in addl enter cwtl in testb in addl enter cwtl in testb in addl enter cwtl in testb in addl enter loop mov in subl std and aas rolb push push inc sub repz iret jecxz jne dec lcall sahf and mov ja jbe movsb or jne lahf jmp pop aam stos clc (bad) jno in xchg daa pop frndint bound xchg scas pop frndint pusha cmp jb addr16 pop in mull dec mov xchg inc pop pop (bad) dec icebp pop fild lahf jnp (bad) xchg loop out fs jnp push daa (bad) imul nop xor out addr16 inc mov lahf jmp and and (bad) nop xor mov in clc aas movsb or ja aas mov dec popf das addr16 inc roll fisttp cmp push imul jle jmp idivb or jnp cld bound mov sbb icebp push divl add std pop jg or mov dec jnp and lahf pop aad cmpsl ja inc rolb and mov dec cmp test jecxz enter jbe outsb out (bad) dec gs pop push hlt scas ja inc jecxz int3 sub xchg outsl icebp mov xchg mov jmp mov cmc sti ss sbb jge (bad) xor and lret (bad) jae xchg xor movsl xchg (bad) lods jle sahf repz inc loop lret lods into daa xchg (bad) (bad) xchg adc push jmp add sbbl jl out std icebp mov push stc iret idivb pop sbb push jmp cmp inc aas dec dec jnp and in xchg sub jg test add push ret lods (bad) xchg ds jo sti aas jmp hlt mov fmulp hlt cltd popa fdiv mov mov adc adc pop jae jecxz mov aad adc aaa (bad) test mov fwait std xor push lret push jae stos push test popa enter fnsave and mov (bad) xor cmp sti aas (bad) sub mov jmp jecxz leave and (bad) outsl icebp mov lods dec flds addr16 (bad) jo out pusha stos arpl mov arpl rorb mov cltd dec push mov jg pop xchg adc pop mov addl incb iret outsb mov jl repnz (bad) incl sbb add push sub (bad) xor lock sti ror jle pop cmp mov incl addr16 scas xor stos dec jae ljmp sub sub mov xor cli inc aad jle mov sbb outsl mov add cmp int3 jbe and jle mov sbb outsl mov add jnp xchg int3 idiv and jle mov sbb outsl mov add jnp xchg int3 idiv and jle mov sbb outsl mov add jnp xchg int3 idiv and jle mov sbb outsl mov add jnp xchg int3 idiv and jle mov cmp lahf cwtl in testb in addl enter cwtl out jnp cltd in testb cld iret outsl mov sahf fbld fdiv jne in (bad) pop pop ds icebp jle fs outsl mov mov fstps sub push fisttp mov xor pop popf in incl dec data16 into and add repnz pop or idivb sbb sub mov jne (bad) idivl (bad) pop dec xchg cmc inc scas fwait clc (bad) jno in xchg cmp fcoml out movsl push hlt cmc jg push sub fldcw mov (bad) jmp hlt andl aam add cmp mov and or inc and add pop push add add add add push orb jb or scas pop jecxz pop rorb mov push mov xchg out pop lods pop jb rorb jae adc iret stos loopne js in sarl push mov jno pop push mov insl (bad) and inc add aam loop dec jne movsl fnop push push pop push add ror add and sub js xchg sub (bad) sub mov push iret push lds mov inc pusha and add bound popa leave pop (bad) aam push fldl leave movl xor jl stos mov or add addb mov add add add je add sbb nop add add cltd nop cltd adc xor jno cmpsb sub cwtl fnsave and sbb pop hlt fsubl jno fdivp enter sub es daa jecxz lea repz xchg repnz dec sub pop sbb xor loope ja adc xchg mov stos stos test ljmp push push mov jecxz adc adc sub and sub cmp loop push xchg (bad) jo or xchg push cmp add push in and and dec outsl pop lret (bad) aaa subl (bad) rclb loopne jp mov mov jb adcb jne or sub or mov lods push or pushf ja in out loopne loopne fwait repnz ja and in outsl push xor pop jo icebp dec mov ja xor xor sahf ljmp pushf fs cmp lret and push sbb cmp cltd xlat cs fsubrl jg or (bad) addr16 xchg or cltd adc inc sub or popa stos lods xor stos pusha mov mov out iret pop jmp imul push inc lds add inc pop stos mov int3 (bad) loope fs jo fdivrl jecxz or loope lods aad lock out ret fsts movsl inc in sbb and push pop idiv frstor aas sbb mov or pop mov rorl and int in std pop lods outsb leave mov jo (bad) loopne frstors xor shlb push js mov xlat cmp and je jnp add test adc mov scas dec xchg mov xchg sub xlat leave sub adc xchg jp ret ficoml scas jne xor pop jo ja mov ret movsl dec jmp popf jecxz and mov stos cmp lea mov jecxz sub lahf add pushf mov jge push pop mov adc xchg (bad) push rorl stos cmpl cmp clc cmp jno sub lods push xchg loope xchg hlt and fnstsw jnp push sti mov mov dec fs (bad) mov movsl ret aad popa into cwtl push xor cs jne insb xorl adc lea mov mov scas mov inc push dec shll test inc sub mov mov es popa mov dec sub pop test xor sbb xchg inc sub jp mov xchg mov bound dec mov stos rcll outsb mov xchg cmp movsb in push cmp xchg dec ja shrb mov mov push inc pop jmp test lods sub inc bound aaa cmp test pop or jl loope in pop inc push dec sbb (bad) cmp mov mov cmp movsl jnp ja adcl add add add xchg subl add add movb add inc in sub push and or outsl and nop or (bad) (bad) xchg ss lods sub adc int aam (bad) test and nop (bad) repnz call or test dec adc hlt mov push imul dec push inc pop clc pop xor stos popa in add dec int adc stos and fmull xchg stos jecxz sub cwtl (bad) push ljmp insl inc jge lcall ljmp pop xchg cmpsl push pop pop add ja in sbb pop sub jne push lods in data16 je mov adc pushf aam jns (bad) lcall and rcrl mov outsl pushf popa mov add add add loop test inc add adc jle scas fs add xor das and test or mov sub stc hlt mov scas dec cs dec popf push sti and movsl or jae addl push inc lds stos cmp cltd mov movsl adc jo,pt mov mov mov addl inc add add push or gs xchg or mov add push mov into addb dec adc add aam add add add add inc and add xor adc xor shrl mov xor jl jmp add fistp aaa add sub lods xor push add push icebp inc mov push idiv add mov pop mov cmpsl dec out stos imul mov mov jns (bad) add (bad) in cmp hlt or notb (bad) dec enter push mov mov movsl push xchg scas add push enter mov jnp adc push push mov sbb jmp xchg and or out sarl and mov testb xchg adc adc (bad) ja (bad) pop aam (bad) adc dec sub jp add out scas popa push jge scas bound inc daa clc (bad) (bad) fmuls in add bound mov mov mov fisttp pop es push xchg (bad) out sub mov sub movsl jae cwtl es fisubl fisub pop in add iret pop int out pop roll fcompl es xor mov mov sub add pop dec fs push or jne lds xor fimull into mov fbstp sub pop int je mov xchg (bad) fisubl mov lret mov xchg (bad) movsl jbe pop in nop fcoms and jnp dec ljmp push or popa jp jmp scas xor es cmpsb dec cmpps test ljmp jb cmp inc lret mov pop icebp lds (bad) mov je dec mov sub cmp ret loopne gs lods jne dec stos sub call xor xchg int mov lret push ja ret fstpl fwait mov mov and iret mov jbe stos pop decb mov xor aad shll aad mov dec mov scas cld push imul out mov push fsts shll ljmp jbe rorb outsb scas push inc mov inc into jmp xchg sub cs mov mov push push hlt iret ja shlb pop mov cmc adc insb fiadd xor pop stos mov push mulb cmp inc mov jno cmp push jae insl sbb adc stos pop sub sub dec sub dec flds pushf cmp int push adc les xchg ret (bad) pop aad stos mov jge pop mov mov push faddl fsubl dec aaa pop aad sub pop push sub xchg dec push cmp fldenv icebp pop insb stos mov and ja subl mov ljmp and adc and daa rcll (bad) jmp sbb push popl fidiv cmpsb les loopne mov sbb insb mov dec cs xor cltd cmpsb ds lret rcrl and mov imul push (bad) into push outsb (bad) scas repnz adc add push push cwtl popa mov leave adc fidiv pop mov aad inc scas adc push stc shlb adc jmp (bad) mov cmp sub (bad) mov cmpsb cli imull mov pop pop cmpsl pop rorb scas mov aas jno lea jne outsl sbbl sets aam adc cmp mov (bad) and pop sarb bound movsl imul and nop add add xor adc add add add push rclb add add dec add jo pop sub scas icebp xchg add and adc call inc popf (bad) mov inc sbb xchg push hlt add inc lea cltd and (bad) dec in mov mov mov push jo ss int3 mov add fldl xchg fs pop xchg das sub popf xchg outsl and aad test push test sarb sub ljmp push (bad) adc mov int cmpsl into cs mov sub (bad) stos mov ljmp mov jb in dec jmp adc aad push mov add cmp or dec dec and leave pop mov lcall cld sarb nop add add add add inc inc inc inc adc adc add adc push nop add sbb or mov out push sbb gs bound fs lock push mov inc lock out stc or sbb enter add sub inc sbb fsubs push push mov sub mov push mov add push push push push add and test add mov mov or icebp bound xchg outsb movsl adc push xor bound sub mov or add add inc adc sub (bad) mov add add add adc add add add add sbb add add add sbb sub and add les and xor inc es mov push adc add jno in lock add aas sub scas je stos adc test sbb dec sti mov ret mov in repz dec xchg inc inc inc xor imul adc mov test enter add add xor lods push inc sbb stos xchg (bad) push pop xchg dec mov mov push cmp mov rcll pop loopne fldl fmul outsb sbb movsb jae repnz hlt (bad) das mov jnp arpl and stos push int3 push pop and lcall dec negl adc lcall pop jns pop ficomp jb stos imul stos out mov test lea pop lret jle push mov in (bad) lods sbb out sub js lret ret hlt sbb xchg mov gs lods popf push pop and into jo hlt scas cmp push mov mov mov add lret les jno aad stos fs aaa mov test pop loope pop pop lret (bad) aas push mov mov bound sbb test hlt aad cmp sub or push mov stos addr16 xor aad fwait mov add or xchg mov (bad) push mov mov out out xchg scas mov mov ds das movsl (bad) jg or mov push iret gs adc mov stos jne inc imul popa test push stos bound in or test ljmp out jne insl xor mov mov repz push xchg pop cmp cmp inc fisubrl repz pusha mov das jnp icebp inc stos loopne inc dec jecxz xchg jae cmpsb cmp fstl js jmpw movsl adc fiadd lea mov es dec fldz pop out rclb pop popf shrl push push mov xor int in jne bound je int mov dec xor ja cli int addl (bad) sub push pop lea jnp outsl test pop lahf ss fucomp push leave sbb js xchg push imul outsb in mov cmp out mov shrl xchg je sub (bad) xor movsl jno iret fild (bad) int ret aaa mov cmp outsb ds adc xorb (bad) ljmp push es fnsave sub jnp into xor jns pushf inc mov in repz test fsts jo xchg test lods ret jb (bad) movsb push mov cmp cs imul cmpsb pushf (bad) inc mov mov out lods jnp dec nop sbb scas aaa push jne ljmp dec fstl mov popa (bad) jne stos dec mov xchg not sbb lret rclb adc push in bound in insl push and loopne test pop sub pop outsl scas ljmp fcompl pop rolb repnz pop out adc mov jmp sub inc fiaddl lcall xchg (bad) dec adc fdivr jbe xor push rcr lcall push mov sub gs enter sub imul sub in mov mov sbb mov (bad) jo leave pop mull dec jne mov sub dec cli cmpsb xor push icebp je shrl outsb xlat add mov inc and mov jp push pop cs jne mov adc or mov je testl sub sub hlt jl cmp cs mov pop cs push out xor pop push lods mov fs pusha mov in fldl inc mov mov jb stos push loop mov call xor cmp cltd scas pop add movsb sub add outsb sti inc imul clc dec lea sub outsb add push and inc frstor add add add adc nop sub mov inc add pop jo ja sub icebp xor push mov loop pop adc xor std lret pop aad subb pop gs cmp xchg into in or int3 (bad) pop rcll pop fs pop jl inc addr16 ret aad xchg cld jo out sbb adc push int (bad) sti mov cmp inc jb mov mov and mov std xchg pop sub loopne push pop mov mov push mov pop push add pop add dec nop dec addl pusha and dec push mov sbb cmp push jo mov pop fs xchg xor sbb xor mov jecxz lods inc movl jne ret adc bound sub mov jne imul test test or inc andb mov fmull add mov and gs shrb test nop cmp add test dec add or nop and push inc aad jae mov sbb outsl xor enter cmp icebp mov pop stos dec or add rcrb and add inc inc add adc movsl xor or dec or ret adc push test rcrb sub inc pop cwtl cld nop das (bad) cmpsl cmpl jnp adc ret (bad) cmp pop or fisubl mull rcrb (bad) adc mov clc ret cmp mov inc add xchg inc lret jne adc inc loop pop xor data16 stos std nop xor imul mov mov cmp (bad) pushf push mov and sub pop movsl xchg pushf jno fsubs andl sbb cmp inc inc loopne stos cltd in das inc stos sub fdiv xchg stos push cltd add mov (bad) jl sarl scas (bad) lods rcll push repnz mov inc repz jnp sbb push ja xor adc jmp jbe push mov (bad) lock sub (bad) mov pusha inc mov outsl mov (bad) mov out inc shrb or xor cmp out jmp push or fbstp or sahf sbb sbb ror in std adc push inc pop ja pop lods push (bad) pop sbb jns adc pop mov mov rcrl mov jmp push inc cmpsl fistp adc dec orl cwtl movsl xor aaa flds fwait xlat pop push lret add cmp dec (bad) jno mov loope inc cmp stos pusha mov not or (bad) into stos pushf fisubr jecxz dec mov mov cmp sub lods (bad) pop lods xor lret mov push lods or rcll sub test mov ljmp inc out aad add pop xchg iret xor dec test dec mov daa or rolb adc mov ljmp call clc test mov testb fwait mov shlb mov add mov mov mov es sbb fbld insb mov stos loopne xlat fwait out dec dec sub cmc pushf sub xor pop stos mov jb adc into xor (bad) pop cmpsb dec aad push fmuls pop je int push imul dec enter mov cmpsl jbe jp add iret arpl les aad pop xlat popa fidiv popf jno mov jge in mov cmpsl insb sub popf setle fnstenv repz in rcl jne lods xchg jmp (bad) mov cmc push lahf pop gs sub mov pop jmp mov test std daa cmp mov or (bad) pop fcompl aaa sbb pop sub xor cmp pop jnp jp xor ja ficomp mov adc sarl cmp mov xor iret addr16 mov cs aad cmp or cmp sti test push das imul bound and sti es pop fildl mov xchg sub shrl mov jmp sbb cmp das bound stos scas xchg mov xchg scas sub ss fcomps mov pop stos cmpsb add jne lea xor pop or jae xor push imul lods ljmp mov push aam jbe push dec leave je sub and jb xchg (bad) cmc or dec imul pop lods sub mov in jge push stos inc scas pop mov je mov cmpsb insl push rorl xchg xor lods mov dec jbe vpsubb imul lock mov rclb pop stos shrb jne,pn test mov enter dec cmp cltd cmpsl pop (bad) mov fstpl xlat xchg push call imull outsb scas test lods ja js or cmc mov mov int inc sub add cs (bad) mov xchg insb fidiv rcll mov lds out or mov (bad) sbbl jp xchg push push imul mov in sub add lock stos loopne test bound test cmpsb scas out test or pop das push push pop imul cmp jecxz lahf xchg lret mov ret push ljmp sbb xor cmc push out dec out adc iret stos add pop xchg jb jbe push cmp (bad) xor aaa mov aad adc loopne flds bound arpl (bad) stos lcall stos add faddl push add mov add add add inc pop les or dec aam dec xchg mov out test movaps repnz js lds add xlat mov stos rclb enter mov or cs insb ret pop movsl dec and dec pop (bad) mov xchg mov adc stos dec idivl push jle roll pop imul loopne das fisubr fcmovb mov mov dec push cli lds push int sbb add add add add mov add push sub dec add addb dec icebp add push jb jb popa in cwtl push push lret out (bad) mov stos mov or dec xor out aad sarl xor sbb ljmp xor outsl push and push and add ret jne push sub int3 aad xor pop lret scas mov or xchg gs cli or add nop add dec dec sub add xchg sub and call add add add add mov or xor insb cmp vpmovsxwd push xor in inc roll xor shrl push lcall xor mov mov mov fwait push sub outsl mov xchg mov sub js lret fsubrs inc pushf mov out inc nop scas cmp (bad) jb test jle mov mov arpl mov aaa imul pop (bad) push icebp cmp xor xchg js inc push mov pop imul dec enter pusha (bad) jae pop into lods es cltd pop jne imul add add add add sti movsb addb add add push repnz loopne lret stos sub inc jo movsl jae mov mov jno fwait clc adc mov outsb imul mov pop sbb dec mov orl jo out sbbl cwtl xchg lods aas mov push xchg pop scas dec cmpsl add cmp push mov ret or pop sbb mov loop lods jae sub jno movsb dec push test cmpsb adc loopne dec jp push sbb mov out sbb push mov mov push mov imul sbb jp fistpll add (bad) mov inc (bad) (bad) jbe test inc enter sub test (bad) cmpsl js xchg dec movb pop or sbb call stos mov in ja push cmp add mov lock push leave mov jbe mov dec push insb fdivrp (bad) lret and bound add mov (bad) (bad) push out fwait cmp mov fnstenv push shrb xchg in jno pop mov mov jns es mov jb movsl push loope inc insl cmp jbe mov (bad) repz (bad) bound jns pop adc mov ficomp pop mov sub addl jmp sbb and sbb movsb lods jns and into add mov mov clc pop mov mov lea (bad) ret in aad stos push leave jp insb ret mov in xor mov lods ja shrb aam adc and out das or xor cmpsl push call and sub push mov lcall inc lods adc cmc mov sub xchg pop cmp stos inc cmpsb sub out mov xchg and int push aad lock lock push mov imull in pop mov (bad) cmpsb mov push sarl push stos rolb sub movsl jp inc int jmp sti shrb jmp jmp jmp jnp add mov and cmpsl pop ja in push sub (bad) (bad) ss sub xor into sub icebp mov xchg push adc mov xor sbb in xchg push out pop xchg adc inc fldl push pop clc fmull outsb js jmp je and dec cmp scas int sar or dec imul je jae xor (bad) lea scas mov or jmp ljmp dec xchg push xchg and divl and test mov inc arpl mov lret and mov and popf sti dec ret dec jno aaa or out es popa xor rcrl (bad) loope dec mov (bad) lock ds fwait push cli insl es dec ficoml es (bad) jle adc jmp xchg dec push jns push and pop sub mov dec dec mov out dec mov popa jnp and jno inc imul mov pop in pop sbb jns test jae inc cltd arpl jp mov test xlat imul test push inc fistpll push (bad) mov pop sbb gs ss pushf fdivl aad xor xchg push nop test cmpsb cmp dec outsl xchg outsl mov scas jne inc mov jne sarl fcmovu xor arpl les in jo lcall icebp outsl inc mov stos gs dec aad sub dec movsl aam jle mov imul arpl imul mov jp adc (bad) cs jbe in insl pusha sub mov leave (bad) mov cmpsb cld je mov mov insb or aad pop cmp lcall loop loop shlb ja loopne sub out (bad) mov aad fwait (bad) xor cli fcomi mov movsl cmp out out pop xlat int (bad) push lds (bad) dec and mov aad incl push add jbe lcall cmc lods aad mov xor stos in imul mull test dec sub iret cs out jp xor sub mov out nop xchg xor adc iret mov inc dec mov mov and dec mov pop js daa leave pop shrb (bad) ljmp fidiv shrb movsb fisubr sub push mov popa iret push mov imul aad pusha mov fidivl out mov aad add outsb call movsl in adc rcll mov add flds add mov xchg idivl lds jns hlt les mov jnp jbe test jl and xchg (bad) in add jl adc add add ja add mov cmc enter or (bad) sub fiadd cltd push das bound and mov (bad) imul (bad) mov aam pop negl stos stos popf push pop (bad) jecxz jnp test lods imul icebp pop sub repz (bad) in aam out sbb negb scas mov add addb add and add and push jbe ds popa adc push imul or dec xor ja cmpsb or aad mov push push into lcall iret mov je sbb inc mov add or xor loopne mov sahf clc into (bad) shlb fsubrp sti fstl adc jecxz (bad) ss xchg push mov shrl aad sarl out xor gs push popa fiaddl add add inc inc and test add adc inc add and and add adc add add sbb ljmp push push lcall lods mov fstpl sub jmp ljmp leave popf stos cmpsb push mov out aad fwait mov ss inc pop pop bound jne inc stc or push lret es push outsb xlat jl xchg push movsb les movsb js (bad) fisttpl and push (bad) fisubrl mov cmp mov jns push xchg jo mov inc dec addr16 jne inc pop out jbe dec xor cmp enter sub (bad) xor (bad) jmp cmpsb cmc push cmp add imul mov movsb dec imul and adc in jne hlt (bad) int inc jb aam pop cwtl out jl icebp loop cwtl lea sub jae idivl cmpsl (bad) repnz sbb cltd imul mov ja add mov or data16 add add adc adc addr16 fs add jmp adc sub aaa sub mov fs or mov sbb inc xor cld inc mov mov sub cmp xor fisubrl (bad) out pop sub adcl xchg fwait repz cmpl xchg int3 ljmp out lods data16 cltd pop mov fst out add fldcw and lods jo dec push adc push adc push adc lods fidiv xchg ljmp xchg mov inc inc call (bad) enter fnstsw dec shlb adc out mov pop jle out xor xor mov call lds push scas or scas cld rorb xor mov test sahf fwait mov push jo or ja dec adc sbb fidivr xchg mov int3 pop pop sub mov xchg xchg dec out imul das xchg movsb jmp in sbb out fidivl ret dec out (bad) cli pop inc inc (bad) push outsb jnp jae push and mov jno (bad) push mov push adc sbb sarl jb pusha ficomp addr16 sub stos push cmp xor adc pop pop push or je es xchg ss push jmp mov push push stos xchg sub fsubrp stos adc lret dec cwtl in mov test aad mov adc or cmpsl adc pop add loopne fwait mov fidivl push jmp dec lods lds je int3 (bad) cs pop movsb mov sbb out nop scas stos mov push aad xor fwait dec fnsave and sbb lods lods mov aas jb pop stos popf bound test mov aaa jne dec jp inc lds jnp mov cmc test out outsl ljmp push and lods push lods cmc jnp imul push pop cmp divb cmp xor mov sbb pop inc shrl mov dec stos cmp push jb pop and pop mov push lret mov movsb (bad) mov loopne jne fidiv add stos lods int add imul push and test mov (bad) push fisubrl inc dec out pop std addr16 out orl in mov inc (bad) mov (bad) stos ja call dec jno orl shrb mov stos inc inc lds pop push movsb arpl xor mov and out xchg push js in jb xchg jnp mov fdivrs fidivl insl lret pop imulb les jae and inc mov fs cmpsl in rorb push (bad) movsb mov and cld mov imul lea push dec rorb cwtl xor jns in leave sar ds aad dec xchg and movsl jmp xchg cli fcompl aaa mov pop jns mov xor ljmp out out lea push push and call test adc xor mov clc jno (bad) arpl in ror jbe push adc outsb aaa and ljmp outsb pop jl popa dec jae sahf xchg sub js inc rorb pop repz or xchg cmpsl data16 mov and rorl sbb aaa xor in pop jae (bad) xor add mov cmpsl sbb pop test jecxz aad sbb mov addr16 flds lea jae sub push dec fimul push adc inc pop mov repz hlt inc out adc or xchg jp or sbb mov mov cwtl arpl lods add mov fs lea push mov mov (bad) mov fs push fimull lods cmp adc popa out mov sbb dec jp aas les lds add ljmp daa sbb (bad) pushf adc and in sti rorl lret sub aaa pop xchg (bad) mov cmpsb pushf mov mov cmp xor scas push mov in pop fdivp push sub lods (bad) mov jb cmp jno sub cmpsl adc gs jecxz sbb xlat jle rolb loope (bad) and cmp das push sbb inc mov adc mov jbe out lea jno mov cli and stos cwtl sub and jno and push xchg (bad) imul repnz sahf push mov lods fwait cld cmpsb xor jne lret ljmp in mov jae mov xchg jp and imul sub cmp push into xchg pop push fnstenv rorb mov iret aas mov pushf jbe stos sub loopne push mov test sti movsb add pop aad les dec dec inc (bad) in cwtl push in cmc sub and push pop add or inc adcl test add adc and push add and add or stc in xchg add sbb push add mov inc xchg mov push imul bound inc sub imul incl or jae aad fstl js push add addb add add add jbe pusha inc add aaa cltd outsl arpl je xorl mov pop mov push cmp pop cmc jp arpl sbb and imul loopne (bad) push inc inc push add push dec outsl movsl loope,pt xor xor sub cmc dec dec dec dec lock ljmp jbe push sub scas not fsubr fwait int jo lods jae mov jecxz imul dec fimul add mov add add pop inc and subb add or rclb add sub sub push xor icebp pop fcoms lret ret jl icebp pop in xchg inc test stos loop jp jge and pop imul sub sbb shl fisub daa loopne mov out scas ss frstor enter nop pop inc lods mov and jno xor imul shlb mov aam cmpsl lock push xchg int sbb sbb ret andl pop push inc int bound dec inc fistpll cmp adc les lea add inc fsubl push sarb mov dec lods jne jmp sub xchg fsts in lods cmp cmp insl inc test aad mov inc xchg das enter cmp push mov dec push dec icebp pusha les push in jae insb les mov pop ja lock shlb add add add mov dec nop mov loopne cmp add sub sbb dec jb inc ret dec cmp adc hlt stos pusha xchg pop xlat stos fnsave stos push cwtl push add mov push sbb adcb imul xchg sbb pop jne inc fild adc fsubrl stos pop cld mov jmp pop push mov jge in push pop jo fucomp xchg scas ret mov sub push jbe test cwtl jecxz or cmc mov fwait sti mov xchg in mov (bad) jb lds (bad) into cmc dec and mov jp or (bad) mov jl adc push xor xchg scas jle sub data16 out fnsave dec adc push pushf or cmpsb push jl (bad) mov add or jno and push (bad) sbb jmp dec dec lods xchg inc (bad) mov push movsl push cmc dec fdivs pop sbb fsubrp lds cs stos mov in (bad) pop mov inc lcall bound imul insb movsb sbb mov xchg dec mov push int hlt add xchg pop imul mov inc outsl mov mov (bad) push shrb ljmp sbb cmp push pop sub dec clc jp aam adc push mov (bad) in lock mov or jp cmp jl mov dec cmpsl pop ja or cmc mov popa push jb sbb mov mov pop push or cmc mov push jae les push mov sub mov js jp fistl push push mov icebp mov cld pop nop cmp jno in sub test dec sbb xlat dec push bnd mov or mov mull or fcmovne mov mov xor dec ds mov xor lock sub sbb add jb ja jmp pop inc pop jmp inc fstps into xor adc sub or repnz jne cmp inc stos push or mov xchg js aaa sbb mov pop xchg push push lret shrb or push mov dec outsl dec jp fisubl (bad) push fstl cmp dec cs push dec dec sub or pop mov dec icebp dec mov cli rcrl pop or stos mov imul fldenv xlat fnstsw enter xchg aam fucom cmp pop aad xor int cwtl fmuls push xchg leave push pop push outsl add xchg dec les pusha mov jle xchg pop jno adc xchg aad stos mov aad xor push (bad) fisttp push ljmp fstpl adc dec sub adc in cltd or sahf int3 sub mov sbb ja repz scas dec dec inc insb push xor into mov or (bad) sti mov jecxz in sahf ret lods cmc cli (bad) int3 ss dec dec aaa or icebp imul sub xchg pop cmp nop lods dec pop cbtw mov daa movsl imul xor out and pusha bswap out pop stc push mov cmp cmp xchg xchg movsb aaa jae xlat mov mov xchg push mov xchg mov fstpl cmpsl ljmp push pop enter xor mov jnp xlat data16 xor repnz mov cmp int int mov and sbb stos mov jecxz lods push or and stos stos test lcall xor movsl das push dec push mov shlb insb sbb pop jecxz,pn sub sub (bad) mov rcl dec (bad) jno hlt dec insl mov out je push shrl xchg out stos lcall push dec (bad) repnz imul sarl mov pop stos out sbb cmp adc imulb xchg aam cmp jbe push sub out mov pop lahf push or insl cmp mov stos jb and cmp cmpsl sbb mov mov add jns dec in test jbe sbb es fstpl aad jo dec es and mov int3 jne dec negl icebp adc dec push stos mov xchg push inc iret pop xor cmp pop loop add sub test and cltd scas in mov iret unpcklps movsl js lcall movsl ja xor loope sub cmp mov xor (bad) push fldl fsubrl gs and adc das inc push aas out nop int3 pop mov movsl push mov sahf mov inc (bad) mov pop out lret mov push mov lahf jne push xor jne mov aaa xor and sbb mov je push int mov mov fs jecxz mov rol ficomp dec outsl push bound push add add add add rolb or push push or test inc add add sub out iret mov aam xor cltd add inc out add push jo push inc mov push and andb sub and sub add add add adc add add mov push or add xchg mov lock and sbb or sub dec pop xchg hlt iret push push cs imul pop hlt jnp push adc int mov push test add inc stos adc mov mov imul int3 push cmpl cmpsb sub mov ja xor cmp sahf push scas ret (bad) xor frstor mov push outsl lods jmp xchg pop test shrb dec das xchg movb add int3 adc add push int3 vprotw popa in test add aaa inc mov (bad) push out jg mov fisttpll (bad) mov jmp inc (bad) mov aaa aas pop mov rcrb ffreep pop or inc mov lds sub push lods mov sub imul test fs bound test mov mov inc mov xchg and sbb (bad) call sub (bad) xchg test sub ss loop scas movsl sbb inc mov add mov lahf xchg sub ror fwait bound clc lods dec pop xchg xchg jae jp,pt in ja add jbe ret jb pop push mov loopne jl push mov jnp mov ret cwtl mov or insl mov mov lods mov xlat dec push pop cli je insl jnp jno (bad) jne cwtl imul jbe cmp jae pop (bad) aaa mov (bad) out dec adc add outsb sub dec add add add add inc or add add add dec add xor xchg add inc fcoml in jbe in dec cltd xchg cmpsl add and mov cltd xchg mov in movsb bound or es sbb imul outsl dec or mov dec cmp push lret out inc lds mov aad mov jmp jle sti shrb pop sub rcrl mov add rorb es push push add mov hlt push mov cltd sbb sbb jb adc jle add sub cltd imul fwait mov mov fldln2 cmp stos gs pop lock ljmp scas add imul mov mov cmp dec pop imul test stos mov jge adc ljmp mov mov mov push or out push lcall and dec adc out test push es dec dec aaa fiaddl xor xlat jne sbb fstpt jl cwtl mov mov mov inc lods add jecxz ss popf lahf mov cs or movsl sbb inc lret fwait jb shrl movsl loope insl push rolb cmp xchg sbb in adc dec out mov mov (bad) out push cmp push and dec pop push jo jns adc pop cli and add imul pop push sub cmp pop fdivl mov dec jb lds (bad) jge mov (bad) ljmp xlat mov push jp enter negb mov cmp loop (bad) lock jo mov inc iret imul mov (bad) scas stos sub xor stos push pop mov imul xchg dec out push scas cmp jno adc mov jnp fsts mov sub out sub dec push lret jne pop cmp dec (bad) arpl cmp ficom mulb inc push and or and (bad) pushf inc xor mov (bad) jo inc (bad) out jl adc addr16 lock push (bad) push adc jne dec and dec mov cwtl rcrb xchg mov movsl aad mov out loop fsubrp in xorl jno outsl add (bad) (bad) (bad) int3 sub mov pop into mov in bound cmp imul and iret mov lods push jp pop add es pop clc (bad) push aaa fsubrp imul lds jne xchg mov pop push mov ficomp push sbb pusha and jp push dec outsl mov lds mov stos es fnstsw lahf lret xchg mov mov cmpsl adc lods xchg lcall call addr16 pop lds dec adc pop lods int3 jp test stos sub mov push push jb out clc sbb imul xor jecxz pop mov in xchg jl mov xchg arpl sbb inc add ficom cmp in jns inc mov cmp lahf xchg jae lods call pop fidivl loop pop stc add xchg inc pop jbe pop imull rclb mov je jmp shlb scas push adc mov es jmp dec lods gs xlat mov push loopne stos shrl shl stos pop fsub push inc mov std outsl scas ret gs xchg outsb pop movsl sbb or rcl jmp shl arpl mov addr16 cltd outsb mov mov fildl mov fcmovbe out test imul mov push jno std popf mov mov lods ja jle fstpl (bad) movsb inc sub movb xchg imul out dec mov mov out dec jae (bad) icebp mov push and (bad) mov imul in in jo imul pop and jmp scas sub lret inc pop push adc mov fwait xchg mov test jo jns lret inc cmpsl lcall pop icebp mov xchg and fwait ror daa pop mov cmpsb sub jo je out mov jbe imul test loope iret or push push roll jbe mov nop push inc mov out je jge mov cmp popa inc movsl js push lods shll or mov ja stos js mov stos push dec shll sbb movsl je pop and stos ror mov orl inc inc rcrl ja xor out jo inc test and scas push cs xchg pop (bad) mov loope mov jo in xchg repz lock cmpsb push adc stos cwtl adc add add add test or add dec inc test dec mov pusha or or sub sub add add add movsl or mov or add add add faddl sbb add add repnz add add add and add add add add add add lds enter inc pop cs dec lods jecxz jge lcall sbbb mov push xchg xor sbb sbb jbe popa push mov cltd mov add incl adc jne or scas add dec and and fyl2x clc cmpsb in pop push aaa (bad) sahf push test fistl jp lods imul xor imul push in xor gs xor aaa pop andb or xchg or dec and mov stos jb gs scas pop stos jge enter sub inc push pop mov cmp mov add add push hlt cmpsl adc cld in mov pop and lods cmp insl es insb mov sub enter fwait xchg decb insl xor pop sub mov (bad) dec xor push hlt mov leave lods jnp nop fiadd popf or ja mov outsl mov loope mov adc movsl pop jge mov xchg mov mov test adc inc insl in pop out sahf stos mov sub sub add push popf lock in lcall lods lret inc mov in clc outsb jb popa sub mov cli pushf cmp je xchg sub fdivrp or xlat fistl mov in jmp push aam dec push popf arpl or clc icebp lahf sbb fist sub mov out mov mov pop cmp mov cmp mov sub dec (bad) fwait popf cwtl jg push add push scas lods sbbl xlat add rcl lods call and inc cwtl cltd (bad) adc xchg mov lds pop (bad) aaa imul or imul xchg sbb jbe lods mov repnz test fwait mov lahf xchg fs mov dec shll insb in out aaa cmp in pusha enter sub pop fwait (bad) mov mov push sbbl scas pushf lcall test bound pushf stos (bad) test mov add adc xchg inc stc testl outsb inc inc sub mov xor sahf andb ja rcl or adc arpl loopne data16 xchg push fimull push sbb dec arpl add (bad) mov xchg mov scas in jne xchg mov lret subl lret fisubrl dec cmp test mov lcall mov mov jl xchg fistpll ljmp jae fucomp arpl lcall xchg lret push icebp jl test inc fld push fnop lds idivl jns push stos stos inc les hlt fwait je cmpsb out aad push add mov imul and push sub movsl loopne adc push inc rol jb fisub (bad) jne dec mov push cmp xorb jnp mov les push pop or sbb push xor fidivl add mov lret pop outsb mov cltd outsl jmp xchg pop stos lcall inc hlt (bad) (bad) mov mov jnp dec and outsl add push mov stos lods push sbb pop add ficomp dec mov scas in jmp dec push push cltd sti out lods jecxz aas sbb dec std (bad) aaa pusha xor sub in push and popf sbb cmpsb fsubl mov sub mov lahf movsl or sarb test sub mov or fstps jnp push mov pop (bad) xor mov cmp cltd mov jno fisubl jp push and adc out pop repz or mov cli stos cs out or dec inc fstl test rclb mov sub pop das js negl and push mov test xlat mov stos pop push or xchg jb out (bad) fwait mov insl add scas sub fcmovnu and fdivl jae movsl adc push mov andb pop sbb sbb outsb push stos cmpsb stos jne dec inc inc pop icebp dec rcrb ret (bad) xor fstl fstpl loope mov dec xchg rcl add movsl push mov loop cli loopne fwait pop sbb int mov lds ucomiss call push adc dec jno jbe scas dec jb pop into and or mov rcr scas stos dec imul leave lods jns jno (bad) cmpsb scas mov pop pusha sahf stos mov fist and ror rcll mov mov stos ljmp repnz jb jb mov push aaa fucomp ss hlt jecxz stos (bad) movsb pop sti xor scas mov mov scas sbb mov in movsl sub mov in mov scas push aad mov test pop push xor shr inc inc scas jnp mov fldt cli push jbe pusha imul jmp rorb push adc adc push aam cmp ret lret loop mov cmp loopne add add or dec mov aaa sub jb mov clc push sbb mov aad mov mov mov xor (bad) sub dec iret push mov dec mov movsl xchg mov jbe leave scas fsub into push adcl pop (bad) arpl out int pop xlat inc jnp jne jae ret jns mov inc sub xchg pop mov mov or cmp push int push xchg mov inc aas cmp call aad lcall sub sub fstpt and test daa sub inc xchg mov (bad) data16 jne pop or xchg pop pop std xchg sbb js incl sub sbb mul add push xor mov jmp dec push scas sbb cmp xor popf (bad) xor in mov mov pop xor push or pop mov mov les in stos push mov popf jmp and sbb stos outsb dec test and sti cmpsb push popf push jl add int ljmp adc cmpsb lret test mov lret jbe aaa and (bad) cwtl push pop pop out jp out push fisubr mov mov jecxz cs jp mov pop sub stos stos (bad) (bad) jb xchg dec sub pusha stos xchg dec push push lock or dec lods adc add mov inc push push add add add add test sub push lcall xchg push mov inc test pop sub (bad) stos pop (bad) jns add int3 xchg adc and and add addb add and sub sub mov add add add push addb faddl lds add jge inc adc inc enter (bad) jmp add cmp cmp or std fisubrl xor les int dec ficompl sub and aaa pop (bad) not mov inc push enter stos cld decb add test add inc cmpsl loop mov in mov xor add mov ficomp dec js dec xlat cmp fistpl push bound cmp lret lea xor movsl push xor (bad) mov mov push mov inc xchg stos pop push inc mov push mov (bad) xchg out fadds lcall mov fldt dec dec jne sahf pop push mov fcoml dec push xchg push mov push orl jmp mov pop jmp xchg leave aaa mov pop inc in sub test push or popf push shrl and imul push in call test jo jnp mov pop nop outsb inc in insl xor enter dec (bad) mov aaa jge lods fisubl jg inc fnstsw mov xchg fimul lods push mov and ss push (bad) popf popf mov leave mov nop push test jge gs shrl or adc insl fwait adc cmpsl out enter rorb add add stos in push pop adc push push cmp sbb push sub dec (bad) je mov jo daa dec and lods arpl dec int3 cs hlt bnd hlt mov mov sbb stos int add int3 xchg xchg test jae lods ja lods mov pop xchg ficompl xchg fisttpl fnstenv pusha fnstenv les in mov int jmp pop std es jle add pop imul es xchg lcall lea pop loop adc ljmp aad (bad) incl jl jno lahf push les and xorb push and jg xor mov ljmp addr16 mov lods daa ret mov push sbb (bad) test test pop mov into (bad) imul push push xchg gs bound out rcrb cli and stos inc sar push into mov xor sub call sahf sbb and mov rorb gs shrl mov mov jns out pop inc lods or pop mov pushf sahf jl xchg fildl xchg and xor outsl inc jne out imul pushf sbb outsl mov ss sahf call mov insb in push mov int adc xchg lcall in mov rcrl jno fbstp movsl orb aas test (bad) sti jle (bad) jbe cmpsb mov in sti das stc fsqrt pop add sar lcall in mov rcrl jno fbstp movsl orb aas test (bad) sti jle (bad) jbe cmpsb mov in sti das stc fsqrt pop add sar lcall in mov rcrl jno fbstp movsl orb aas test (bad) sti jle (bad) jbe sbb xchg push (bad) mov dec pop repnz cmp in xchg mov popa iret (bad) cwtl and xchg push ljmp push data16 mov sarl fcompl jle sbb imul fwait sub test cmp (bad) insb int3 test mov mov jp xchg ds mov leave cmpsb lea adc repnz (bad) incl xor or (bad) push aas fcomi pop repz xor incl outsl fnstcw iret rol pop out aam cmpsb mov incl cmp push pop lcall cld in std sub jle std dec jp (bad) push aas fcomi pop repz xor incl outsl fnstcw iret rol pop out aam cmpsb mov incl cmp ljmp std ds jle cmpb adc mov aas addr16 sub fnstcw mov pop hlt sti sub add ss sarl jle (bad) jbe js imul cmp dec add pushf sub jb sub add mov sahf cltd outsl mov cmpsl cli jge cld call sub in ss mov mov arpl (bad) outsb add and pop push add (bad) rorl pop fnstenv xchg rorb mov outsl imul xchg cmpsb cmp (bad) push cwtl sahf lcall mov fldcw xor pop cmp adc and subb xchg pop lods mov mov cmp outsl lea sbb adc push fwait push mov ret dec lret jg out xchg cs mov movsl fucomip xchg mov cmp push leave popf shrb push lahf jnp jmp pushf lods dec scas mov mov add cmp out cld push xor push aas xor xlat stc dec pop movsl jmp pop add mov jns cltd dec cld mov call mov leave and in repnz insl xor add enter pop in mov push rcrl and lret mov sbb icebp pop enter jno jbe test dec and sti daa jmp pop insl jnp (bad) and xchg ja fsubrs stc insl lret jge shrb enter daa push out into xchg imul cmp mov out aad jge cs pop lret xchg arpl gs and mov push fldl inc sbbl pushf insl xor pop push (bad) shrl push cs pop call into dec inc (bad) jmp adc iret mov daa adc fnstsw icebp cmpsb dec dec fdivs data16 ds aaa or nop mov jnp bswap inc lock sub icebp fldt stc rorb dec xor icebp (bad) div mov insb add int rcl push shld lahf fildl jle fisubl lods mov lahf into (bad) roll out xchg jb movsb ss mov dec dec inc out push xor bound arpl mov loop xor ds cmp mov test das jb push sbb xlat (bad) xor (bad) loope jp repz (bad) repnz push out das lods shr xchg pop and ret fcompl push push push push jecxz lea stos aad mov push push stc push mov es xchg addr16 enter inc dec cmp imul dec push clc sbb xor dec stos jecxz xchg jae and lret cmp int3 arpl insb mov push ljmp rcrw inc std adc xchg (bad) in scas mov mov pop (bad) in scas mov mov sbb mov xlat sti pop inc call sti pop gs sub enter jge das repnz ljmp fcmovnbe adc sarl cs xchg stc pop inc js call gs xchg xchg xchg xchg jp xor je mov push jnp sub fstl test ret sbb jns dec sub cld loop xchg dec or push shll stos popa xchg mov stos les adc movsl xor push jge in aaa push xchg add loope ljmp das sysenter (bad) stos mov movsb add je xchg pop jle mov push movsb fdiv shrl ret or arpl imul sbb clc imul (bad) mov repz stos sbb loopne cld pop fstps mov popf cli pop out mov mov std in cltd dec loope xor pop movsl mov in sti xor sar and cld out dec pop lea push (bad) repz push icebp (bad) stc rcll daa stc push xor out int ja mov out enter (bad) clc icebp lods mov test xchg and in out fs mov push fs mov push mov jp xor lds inc mov push iret arpl out sbbl pop mov test mov flds pop jg dec fistpl jg mov mov out mov xchg (bad) dec fxtract scas je ret cs je adc push xor cmp cwtl (bad) dec add iret sbb mov insl pop test lods mov into fs cmp das addr16 mov inc xchg mov mov mov pop leave mov dec (bad) fsubrs push int fimul mov stos cs cmpsb pop pop sarb mov xchg adc stos sti mov dec addr16 (bad) mov dec fcmovnbe scas add outsl pushf pop cmp xchg mov push test pop cmc (bad) jb dec inc xchg test xor ret test test ret arpl (bad) rcll into pop xchg insb das add sub cmp cmp sbb push addr16 sub sub in cltd xchg dec scas int3 rolb mov push sub mov (bad) dec aas fnop lds sarl aad ret mov xlat jnp pop cmp and pop pushf in (bad) mov ljmp mov xor repnz out in jne mov faddl aaa mov popf jmp test add out jl hlt mov clc adc (bad) lock cwtl mov xor je push cwtl out mull pop or and stos inc lods adc sub xor sbb mov push mov xor imul push outsb dec jmp (bad) icebp jecxz mov int3 jg add cld sbb push (bad) mov sbb inc mov mov sub mov in (bad) dec mov push mov mov je jbe outsl les push fs push les fcmovne push pusha add add add jne das lods rcrb cmp addl bound iret pop xor outsb push jle mov lods push bound jno or xchg jg add mov sub cmp mov stos out loope inc jl int3 cmp inc arpl lds arpl das (bad) fmull mov sahf shll xor push rcrl dec les mov pop out stos lret mov popf mov mov cmp xchg fbstp add repz icebp test jbe mov inc bound inc xchg pop call inc xor lret insl and fldcw movsl das xor int3 inc jae jne jae lock mov jb dec mov rcrl dec movsb mov ret push pop adc ljmp jne std (bad) sti xchg dec push lret dec ret arpl mov lret xchg incl loop mov repz jle jmp testl pop xchg je js aad xor mov jmp xor push mov push jmp fisttpll mov pop inc (bad) mov cltd loope sbb into mov lods shlb sbb pop nop xor cs push lds cmp xor xor jmp jle adc dec or ficomp arpl pop add cmc mov adc adc inc addr16 and movsb push and mov jne jle (bad) aad adc sub cmp gs popa (bad) scas sbb xchg push sub jne shrl push dec mov add add add add mov sub add and dec add add add add and mov test mov add jns and and add or daa adc aaa adcl add inc push add add add add in or and pop ljmp lret adc int3 lods stos es mov xchg and push or pop out stos jecxz shrb cwtl jp jno cmp lock mov out lret rclb push mov mov and pop adc dec push mov jb lret push iret stos jecxz nop (bad) inc loop xchg int jo (bad) out hlt or scas cli cmpsb stos nop aam sbbl mov insl push divb mov xchg push cmpsb push hlt seta scas cmp jnp out and dec inc (bad) fcmovu outsb rol int3 xor fs out jl mov pushf test lds cmp sbb sti addr16 mov hlt jbe xor cmp fldl sbb mov dec int stos jno idivb inc imul mov lea aad divl mov ljmp push pop add sbb ss mov pop mulb dec add int fwait std rcrl out jmp loope mov bound adc pushf sbb adc int subl jnp sub xor pop pop incl add stos cmpsb test rcll mov imul incl jmp aam scas cmp insl pop xchg mov daa xor xor xor mov jno fwait lret mov ficomp pop inc push shl insl dec js dec jne xchg mov aaa int hlt mov (bad) cmc aad jbe mov inc test push pop enter sbb jo (bad) xor push mov mov stos out and stos in adc sbb xchg je sbb in aad adc xchg pop enter lods jno in cmp addr16 mov pop fistpl sahf popl neg mov mov mov popa mov sarb mov pop push jbe xchg (bad) xor pop je xchg stc mov scas insb or dec dec hlt fidivr xchg pop fisttp into cwtl mov test add incl cmpsb push adc out es rolb pop xlat repz adc es adc push fidivl cmp out mov cli gs leavew inc lret jmp loop xchg add inc xchg push fcmovbe inc arpl or arpl jne imul push pusha add int3 mov and push mov mov (bad) jbe mov aas or cmp mov jae and hlt outsb cmp lret scas dec dec dec stos xchg scas fwait popf jnp mov (bad) fisttpl lahf cwtl fimull dec fistl xchg int aas adc mov lret adc mov pop (bad) sbbb jnp add in ja out jb bound cld sbb cltd jae lods sub jb es push push adc cmp das gs mov xchg push mov mov cmpsb dec call cs mov into rorl sbb or sbb lods je int3 pop loop pop jg pusha jb sbb xchg das gs xor in gs int test fidivrl xor cmp mov jae add bswap prefetch (bad) jns mov rcll jg xchg test (bad) repz xchg mov mov pop into (bad) lds dec cltd mov pop sti xor xchg cmp mov jmp aam (bad) push cmp incl or adc pop shlb insb cmpsl daa xor stc xchg sub decb mov add add add ucomiss adc mov rcrl mov push shr nop into mov sbb mov lods out dec adc jp adc and ret or xchg insb mov lretw and sub cmpsl in xchg sub pop cmp adc pop fidivrl pop scas xor adc jo es fs inc sbb add out push std cmp push push inc gs sti inc (bad) cmp ss push incl pop xchg mull retw xchg adc push out (bad) xor cmp in repz imul adc xor pop cli faddl test push mov icebp lock pop push pop fsubrs cmp mov pop imulb adc imul jae shrl push ja mov jmp jge jmp icebp lret outsb imul std (bad) int loop scas jge mov aaa int3 xchg (bad) adc lods je ret andl push push mov andl push lds add add add ret jp xchg cmp shll fcoms lahf or pushf fwait dec pushf xchg ja lds in xchg call or mov lret mov sar add pop cs in or push imul push xchg dec xchg lods fldt xchg xor ljmp movsb mov int out pop jno sub jle or jbe ret (bad) dec mov iret insb push sub adc xchg not ds inc movsl jg dec push (bad) add add add dec dec insl xchg pushf pop cmp leave (bad) (bad) inc (bad) mov lock gs dec insl les movsb aaa jnp cwtl pop (bad) push or fimull xchg jnp popa std xchg and adc in adc out mov scas xor sbb js outsb pop ja inc adc adcb mov bound and mov sub ficomp negl (bad) cmp mov jecxz push dec fxch incl push push insl ds rcpps add add mov ds sub fwait outsb add out push outsb pop (bad) jae cld cmp push adc cli xchg std lahf push mov out loop jge lods adc scas mov jnp add push push xor je add push imul sbb dec pop fdivs int3 das pop scas mov scas push scas js cld sarl xchg push repnz stos ja cmpsb cwtl pop test inc lods push xchg push add incl orb ficoml xor mov dec lock (bad) stos push jl fwait sbb push pop mov int insb add add add leave in iret icebp insl sub sub push clc aam inc aad dec shll mov jb outsl xor pop into ss mov loopne mov outsl insl pop xor pop imul pop adc stos mov add dec cmc imul out xlat sbb fidiv out jmp (bad) mov fcmovbe cmp aam mov popf xor and pop push shll xlat mov add inc push pop or sub mov pop jnp loope data16 pop cli arpl aaa popa ljmp insl test lods xchg dec inc xor pop data16 add add add add stc test mov in jmp (bad) xor pop lods out cmpsb incl (bad) aas dec iret push js pop lea mov cmp into mov (bad) lret in sbb inc stos push xchg lods pop push cs jle repnz rcl jnp jno jp dec and das stc fcoms or mov pop cltd lret addr16 imul mov in pop add lahf xchg jb jae (bad) mov mov mov add add add sbb push xchg pop sub xchg xor hlt in push inc ret mov mov adc cmc icebp cmp mov scas push (bad) jl fstps jae loope xchg cwtl test js arpl lods mov sub stc pop add sub movsb jae xor idivb mov pop enter cld das into loop push sti aas or mov test les lahf xor imul shr jp (bad) pop jmp int jnp imull sti rcrl or inc jmp sbb lods push movsl adc imul out cmpl popf push xchg sahf mov (bad) mov pop jle sub stos push pop scas ret mov js sbb cmp imul out int cmp pushf cltd call dec fcom mov sbb stc mov mov and pop xchg inc daa cmp ljmp xchg pop sbb xor sbb nop lods or mov dec mov jecxz in ds inc adcl loop outsl xor mov mov out sub sbb lock push repz mov pop movl test imul pop mov pusha cmp outsb (bad) sarl imul sbb out aaa daa and int3 jnp cmp dec icebp (bad) leave mov mov cmc je jnp pushf pushf cs insb mov mov mov push push xchg scas mov sbb out arpl push stos xchg push and aad xor xlat (bad) add mov cmpsb dec push add nop cwtl dec movsl fisub mov (bad) in mov mov push ja mov nop adc ret and rcrl je test push cwtl aad loopne push or dec xor jg stos push adc sub in xchg jle push or add rclb out xchg add adc or inc inc (bad) dec inc inc xchg addb inc adc sbb add add add add add add add adc add dec add add add push inc movb bound and fsubrs cltd lods mov cmp mov adc and push pop in lds sti cmpsb out bound cmc adc inc daa mov mov sub cs xor lret inc int data16 xchg inc mov enter or jb insl pop movsb jecxz sub cmp fstl ss sbb shld mov mov cmp sbb xchg shrl mov popf pop cwtl push add ds std out jmp cmpsb cmp outsb lahf outsl aas sub push xor test push or dec out ret adc fisttpl add sub adc and mov jb inc outsb mov mov add sbb xchg xchg xchg lahf ficoml mov aam mov xor loop stos mov sbb scas xor xchg ret in callw daa leavew inc xchg push out mov scas xor call loope neg jns mov push je dec adc fdiv pop into xor pop sub pop xchg pop sbb dec test orb in xchg sbb insb mov int3 pop adc (bad) in push cmp in icebp (bad) es pop frstor mov lods fwait sub aas cmp rcll cli pop push aaa pop sub gs lcall mov lods fdiv sarl into into mov sbb pop shrl hlt pop pop mov sub pop das and popa mov mov adc xchg pop cmp cmp mov daa lds nop fdivr mov sbb fidiv fadds push pop push jo push aas xor cli dec adc lret cs pushf xchg mov fstpl leave (bad) mov (bad) popf push jmp out sbb (bad) mull insb (bad) fdivs out int3 dec daa aaa jno and in cs outsb push cld (bad) sahf or jno push rcl sub inc xchg mov pop fs jae pop cmpsb loopne fs xor fwait out mov ja,pt xchg rcl dec fisttp fdivs push int pop fcmovb cwtl mov mov jle pop stc xor pop bnd movsb mov xchg adc dec ret inc inc orl inc mov outsb dec addr16 (bad) enter adc sbb mov mov (bad) xor xor add add mov addr16 pop sub shll jae hlt cld mov and pop idivl out xlat pushf out cmpsl sahf adc mov mov popf ja mov enter lahf jae sbb int pop cmpsl fimul (bad) arpl ror dec dec mov aam repz jmp lahf cwtl jo scas push imul push lods (bad) jae in xchg cmc iret inc and dec (bad) nop xchg push insb mov movsb mov add std call add xchg lods xlat inc xchg jo fimull scas or dec cmp push push lods xchg icebp sub imul jnp mov (bad) and pop std arpl xchg js das aad incl lods addr16 (bad) mov test lods pop cmc mov push jecxz mov lahf lret cmpb mov jg xor dec or fwait push es iret xchg push shl insb cmp (bad) pop xlat lcall test int xlat or cmc pop nop dec js cltd fcoms sub fs jae fisttpl xlat mov mov jg xor dec (bad) ljmp ljmp mov push psubd jg clc clc test scas dec mov jnp mov in or dec clc push leave sub and call pop mov aaa cmp add add xor (bad) sub fadd stos in enter (bad) and pop std arpl xchg icebp mov sbb pop dec inc and dec aam dec xlat (bad) lret push in imul inc std ja mov in (bad) push jecxz mov cld cmpsl in movsb dec dec push stos mov sti dec stos mov xchg ja (bad) clc pop jmp mov sub (bad) arpl adc scas xchg dec rcll lods stc data16 dec mov outsb dec dec popf (bad) and ljmp adc dec divl scas mov (bad) jae insb (bad) lahf movsb cld test ja addr16 in jmp call outsb jne rcrb leave sbbl ret (bad) fimul jp hlt incl dec mov das incl sbb adcl sbb cli push scas cmp cs adc add add add repz fmuls insl call jae jl mov push cmp rcll lods ds add inc or and xlat xor imul push cmpsl fnstcw call mov sbb jl in or (bad) xchg or add dec imul pop mov iret fmul mov xor stc ljmp pop fwait scas daa adc outsb jmp dec push mov dec insb pop stos shll xor fnstenv cmp rcrb sbb (bad) mov lock cld pop xchg lcall push mov add cmpps hlt push fisttpl repz sahf push fs pop mov movd incl (bad) xbegin xor sbb ds inc xchg and inc sarl xor mov hlt lods imul jge sub mov push mov sbb mov sarb pop cmp int3 outsl cs jnp adc lret inc and mov dec lahf sbb addb add mov aaa mov mov pop push ror pop sub loopne and jae lahf jmp lret (bad) pop std push fdivrs and stc cs xor sarl mov cltd cmpsl lods popf bound mov cmp inc dec or dec lret ret imul lock or frstor or fidivl push mov (bad) icebp lea scas std enter add iret lret arpl lea cmc mov outsl ret cmp loopne ss jns xchg arpl inc pop adc (bad) ja add add cmp loope daa int3 repnz and mov jbe scas mov in cmp loope addr16 pop sub mov and pop mov pop out add add cmovp imul dec and inc sbb pop (bad) insb push inc std bound scas cmp jmp lds push add sahf in lock roll and fisttpl pop and incl popf leave mov out jg inc cmp test aam test rcll jb jo add add add mov push or loopne cmpsl xchg std sbb mov mov cmp add mov mov cmp or lds sbb fmull nop xchg lock shll stos and push int out clc push (bad) mov sbb fiadd dec testb adc sbb or sub or daa mov push adc divb dec mov fcompl and aad cmc cmpsl sub ds pop int3 push stos and pop lcall add adc add (bad) ja jecxz sahf add mov cmp push adcl int3 inc mov ffreep cwtl jns pop sbb data16 shlb or mov inc insl cmp pop adc sti push mov mov add add pop mov bound iret push imul or and mov sub repnz aam jbe sub xchg jns popf or xor call mov bound test mov pop lcall mov icebp sbb mov or mov lret pop xchg je lea xor ss jae div bound push inc out add jp daa movsb (bad) sub xchg push lods enter dec inc outsl out adc xor out in cld lock inc es pop ficompl pushf (bad) mov imul fsubp jae adc outsl cmpsl inc std xor rol add cmp push sbb pop push xchg and rorl dec push and push and xor repz mov push inc leave outsb (bad) out xlat stos jb lds and push shll inc popl xor lds mov (bad) mov push addr16 pop cmp mov cmp jl jmp sbb jp adc fsubs inc push and mov xchg fnsave lds push adc insb mov mov pop and pop test xchg je fs jge sub lods out dec scas dec frstor push pop cs jmp jno repnz sub pushf lret ja adc mov test in mov es in in jno orl push (bad) popf bound hlt mov adc ja ja inc add cwtl push aad dec cmp inc add (bad) in test add or adc add jns andb adc add add add add or inc inc and adc lahf mov adc inc inc inc inc inc and add push add add rolb orb and add jbe or imul pop sbb adc scas cmc jne mov mov scas sbb imul mov (bad) leave adc inc pop cmpsl bound das outsl sbb js hlt cmpsb dec inc xor push xor stos sbb mov cmpsb (bad) mov adc dec mov out cmp negl push in sbb cmp in add pop xor push cwtl div mov out ret fistp cmovge rcr repz in pop je push int lahf arpl or and popf lahf inc fild repz sahf in scas mov movsb cmc ret and lret jo movsl aad aad scas iret mov test stos dec or test mov mov push ds scas xchg sbb xor clc mov mov mov lea adc cmp lods test jp outsl inc inc pushf mov idivb jbe lret fucomip clc lods pop cwtl iret imul push cmp rcrl pop pop fs repz std and mov xor and fstpl (bad) mov ljmp pop imul jb push imul cmp dec les sbb pusha dec (bad) addr16 inc lret sbb push in test adc nop nop add add add pop sahf mov in and and mov or mov sti cmp gs sbb data16 gs insl or (bad) dec addl dec sbb jle sub sbb push or pop mov cmpsb (bad) (bad) jae or mov je xchg iret shrb bswap or repnz ficomp pop ljmp mov sti jle cld mov push fdivrs inc aas outsl das adc mov xchg sub das add mov (bad) lea sbb sub popa mov (bad) xor inc out dec lret outsl pop imul stc inc sarl out popa push negb cld imul cli xchg add sti in nop fnsave mov (bad) (bad) add popf lea (bad) into fxch into dec repz insb mov mov (bad) xchg and repz ljmp outsb fnstcw (bad) aam cmpsb lahf pusha out fnsave movsl mov mov ds mov pop push outsb lcall (bad) jbe xchg cmpb mov pop xor in xchg cld in jge mov in fldt stc fsqrt pop add xchg rcr or mov shlb xor scas je pop xchg popa mov movsl sahf mulb dec fidivr jle adc pop xchg enter icebp imul xchg pop jmp enter out or xor aas inc jns in inc sub add (bad) xchg fwait xchg mov fwait xor xor cmp (bad) jle push cmp mov jmp in shrl std inc popa std mov sub das das adc in shrl std inc popa std mov xchg or ficomp enter inc icebp mov lock lcall inc bnd mov cli sbb mov ljmp pop pop mov divl mov add lock rorl pop mov xor inc push std xchg xor jo sahf pop enter mov cld mov imul mov pop (bad) imul fsubrp ljmp lods xchg jbe sbb pop push push ja outsb ret jne mov mov xchg movsl je lock inc ljmp xor imul imul ja lock (bad) lock mov imul shll mov add test ss sbb dec dec aas jle out mov cmp gs xchg std ss cmpsb scas stos mov cmp push inc stos lods das bound sub mov pop xchg cli jnp rorl addl mov mov hlt aaa sub ja push cmp add xchg jecxz outsl mov aaa (bad) sub (bad) pop lcall mov scas lea xchg sub insb lods cmp in aam jge pop stos dec jb test lds and fcompl add cs pop repnz push or add dec xlat mov ret add fsubr sbb pop mov pminub aad (bad) xor out xor sar push push and mov mov pop in mov lea xor outsb bound pop pop int3 jae out outsb cmp mov mov xchg stc loope cs lea pop jp stos jns cmpsb out mov scas mov inc fisttp pop jp and push ds dec int3 fidivl data16 mov sbb scas jnp (bad) jne fsubrp pop imul mov add jb and popf pop jp rcrb jnp repnz shr mov fldt sub cmpsb push in iret mov js adc mov flds jno xchg in pop inc stos fistl bound mov sub roll xchg mov bound sub loop sbb bswap test mov and movb add xchg mov setge add inc sti adc imul idiv xor outsb pop adc lahf dec out faddp jb or lcall and cwtl in lds fimul lds out (bad) enter mov push pop dec js inc sti xchg sub repnz inc cwtl mov xchg xchg jne aaa cs mov lds outsb cmp mov les pop cmp sarb into pop aas insl mov mov inc mov pop mov (bad) movsl lahf aaa xor jnp push push cmp jb mov mov (bad) pop pushf dec push push push inc jg stos ja addl push mov dec int aad js sbb data16 push iret add imul les push hlt lods push ss mov stos es rorb pop dec push stos mov push lret mov pushf sbb add pop cs (bad) mov jns outsb into (bad) je addb pop and stos addr16 xchg xchg (bad) call fs scas mov ret sub jbe jnp add push and push pop or adc sub and fdivr xchg push cmp sub or (bad) stos (bad) sub pop xor stos push pop mov js pop adc push sahf fdiv repz dec dec rorb in jo leave int3 ret mov pop in mov outsl mov lahf pushf (bad) aam iret in xchg arpl lret push push mov movsb sub push mov jmp cld mov pop in in (bad) mul bswap imulb icebp pop mov stos cmp adc pop pop call incl insb jg sbb xchg aas push jbe or movsb inc inc xchg (bad) or jne jno inc insl out mov xor push push sbb out inc fs dec inc in mov fsts sbb dec ret insl add iret js,pn fincstp movsl in sbb scas movsb dec inc dec jg insb mov incl ret jns add xchg dec (bad) call adc incl xor lret ds or sbb push out mov divl mov sub addr16 mov retw xchg xchg subl push nop and ljmp lods in into mov cli cs (bad) jge shrl fisttpl dec dec les int call cmp imul stos lea cmc jbe push js dec cmp imul lods aaa ja dec mov ljmp xchg pop push in (bad) int3 dec dec dec ficoml inc movsb sub nop and sub ret xchg int push jbe in xacquire ss sub clc mov imull lcall sub cmp (bad) (bad) jae scas int mov mov pop xchg fisubrl sar aas push sub jmp push xor mov push fcmovnbe lahf jp fmul jl add loope (bad) cmp lret cmp push push adc addr16 movsb in aaa fistpll stos mov jmp leave jnp and xchg leave xor push mov or jbe lods lea (bad) (bad) pop in in cmpsl jns mov insb sub or into (bad) int3 sub or loop cmp xchg jge push cmc jno int sbb jbe imull mov jl mov xor in fisubr mov jb bound fs (bad) dec cmp pop fxch push pusha xor scas push fwait mov push in pop ja insl cmp in fs dec (bad) pop stos (bad) icebp fistl std aas push cmp adc inc outsb sub (bad) and jl cs das stc and fistl imul mov (bad) xchg lahf lcall jp sub sub mov sbb jno xchg xor scas lds xchg testl jp mov std mov stos and stos pusha cmp rcl mov jmp imul out lahf mov push stos bound xchg mov xchg movsb push ds test rcrl rclb (bad) adc shl jno inc outsl leave fsts stos aaa imul mov mov mov ficompl mov (bad) pop dec movsb mov mov mov shrb fmull xchg mov xchg popa mov imul jb mov xor insb int shll dec (bad) cld fsubl stos shr mov push dec call fidiv test lcall lods dec jbe mov sbb xor fdivs sbb aad mov sub xor mov mov jb jae stos mov test scas nop mov rorl ja add push jb jb cwtl and stos fnsave (bad) xlat ret pop clc (bad) xor (bad) xor bound lods or pop mov sbb jmp xor mov fprem cmpsb dec pop dec ss jp imul push stos in int stos adc ja sbb jg out push jmpw gs cwtl idivl inc loop xor mov arpl popl ja push lret xor push stos imul push sbb jecxz add fstpt hlt mov push jp mov (bad) mov add mov inc repnz add inc pop ficoml add push in testl lcall add xor add mov add add adc and je add inc cmc dec add sahf push xor or add add dec and sub mov add add add add or add add add and imul mov test xor rcrl lahf inc movsb inc xlat fucompp pop xchg sahf mov adc sub push or mov hlt nop pop fsubs xchg jno scas dec inc cwtl dec mov jb push or sbb mov jno pop jnp movsl mov push inc stos push jb out icebp mov imul cmpsb sub dec sbb xor (bad) mov push adc lret (bad) es pop das outsb inc stos pop sahf mov (bad) mov push pop push xor jge dec push cli cmp in loop in xor xor add push dec push jo and pop adc jmp mov call xor inc dec xchg (bad) imul jb mov jmp or hlt js jl and fsubrl ret repz lea test loope sti inc stc shr inc stc das xchg shrb xchg stos inc popf mov mov (bad) aaa push or sbb sbb js sarl pop cmp stc dec or ret lea inc cmp adc cltd int aad (bad) push push scas inc fcmovne sub mov aam and push adc leave adc add xchg imul fstps mov inc mov ret xchg xchg sub adc scas mov stc out lret xchg inc incl cmc push (bad) jle lret into incl inc jp jae inc sub scas mov dec xchg out mov pop push sub stos jmp fdivrp cmovne (bad) fldt xor cmp pop mov pop repnz and int (bad) jl dec mov stc js in or (bad) aas into or rcr test mov in or (bad) ja stos mov fs dec mov in cltd pop out std dec mov in cltd pop out jmp ljmp insb enter pop push scas lcall pop out jmp or mov (bad) or push int3 pushf test xchg movsl push les jecxz test insb sub out nop add add add sbb mov in pop sbb mov daa and sbb pop outsb rolb pop in mov inc outsb stos xchg dec mov sub sbb mov ljmp (bad) in mov add add cmp in dec std inc mov sub lret popl cmc push (bad) jle lret repnz push outsl das adc test mov imul outsb pop xor int3 lret (bad) fcoms adc sbb add push and jnp jae mov mov fucomip xchg cmp pop mov dec es cltd fwait nop mov shrb out mov push jle arpl and in or (bad) aas into pcmpeqb dec clc mov pop cmp dec pop mov xor pop test and add cmp int3 scas test into jge and loopne dec mov in cltd pop out jmp ljmp insb enter cmp std cmpsl mov fstl imul mov xchg lock pop in jnp sahf test jl xchg imul into pop mov (bad) cltd dec ret stc fwait pushf out aaa into mov pop cmp aas cs pop aas sti jmp jge sbb jecxz xor adc outsl sahf stc push daa lds jns mov sarb imul dec jbe cwtl xorl int dec rcrb pop or testl fdiv repnz push test dec add jb mov std or jnp dec xor push and jne mov sub jl cmp inc mov test aam lret mov jecxz ds in neg lock xor out push mov incl movsb add push js jmp lcall leave enter sbbl jo mov or pusha mov push test push xchg mov mov jg jle add cmp nop dec cs (bad) mov stos fimul and lret jle xlat cwtl mov (bad) and jo int dec mov scas cmp add scas xchg jge out fsts sub xchg mov sbb orl cmp in adc das xorl fidivl rcr mov and adc repz ja push xchg test ds cmp and dec xchg arpl mov jno mov mov imul mov int3 mov dec (bad) mov shrb popf imul (bad) jp add add outsl dec hlt ljmp mov fstpt cmp jl and adc fdivrp push ss push sub nop repnz lea push in ss int3 mov xchg jns inc mov jle cmp incl test pandn xchg push xor xor insl jmp and lret cmp sub icebp sbb xlat pop (bad) mov stc xchg push and jb sbb sub cmp gs or pop stos insl cmpsb in (bad) push jge push movsb out cmpsl xor jb lret push inc (bad) push pushf fs outsl lret mov fildll daa jbe scas and fstpt inc xor stos mov and scas jnp pop fldt setb int3 (bad) lahf stos dec (bad) adc mov pop in fcos add cmpsl insb and xchg cld xchg pop add pop pop lock mov sbb mov gs lret stos jne test outsl ficomp es sub mov bnd pop xchg adc pop hlt mov mov and mov dec lret sahf inc cld cmpsb hlt xchg aas leave xor sub add (bad) hlt lahf inc insl pop push or sub (bad) (bad) icebp js mov adc mov jl inc lods rcpps cmpsl incl (bad) sub loope aaa clc sub in (bad) inc jecxz cmpsb ds mov sub arpl dec and rcl popf cmp mov cmc lods mov xor flds push pop lea fnstcw stos sti jp imul jp xor xchg (bad) jmp mov outsl rcr data16 dec pop (bad) fincstp cmpb add add in (bad) int3 xchg jl mov lds bound popa inc arpl out (bad) mov test cmp adc stos insl mov and dec cmp add cld sub cmpsl jl xor lret mov sbb push leave mov daa sahf fisttpl jno and push popa pop or int push mov pop es gs mov dec adc xchg bound fildll gs mov cwtl cmpsb adc imul ret mov ljmp mov mov fcomps sub pop mov sub cmp mov sar sub aam ret jl pusha ret cmp sub cmpsb pop mov imul bnd add mov dec mov (bad) jmp (bad) mov add (bad) enter jg jp mov mov xchg xor lea cmc popa cmp mov addl xor and jne test (bad) int mov inc jl repnz dec inc addl cwtl xlat ds jb,pt mov dec and cmpb push cli pop mov ja cld xor jp mov add and pop mov or mov xor gs lahf cmpsb pop cltd cmp fs insl xchg dec push out movl lcall mov pop cmp enter sub xor lret and out jne xchg push rcrl testb test cmp bound lods cltd pop mov xor xchg pop or popf das or pop incl lods cmp rorl lock mov mov jp jbe outsl lahf int imul add add add imul cltd push (bad) pushf xchg xchg adcl adc fsts sub adc jmp pop jmp pop pop inc data16 pop js ret imul lds pop mov jmp jmp jne pop or jae inc imul jnp frstor repnz (bad) lret sbb push mov sbb rorb outsl mov push mov xor (bad) mov inc lods jge int mov xchg mov xchg (bad) xor dec jo fdivp or push (bad) jnp pop aaa scas push cmp out into sub ja add jl jb popa mov (bad) inc mov ror es lret int3 dec shlb add arpl out mov hlt push call (bad) lods push sbb pop xor clc xchg bound mov scas sar jp push sub sahf lret movsb in test lods add cmpsb ja add jnp cmpsb cmp test lods mov sbb stos jne mov dec mov loope leave pop (bad) nop int xchg popf xchg jmp enter call jae iret ja hlt dec sbb test (bad) hlt addb mov and imul push in sbb push adc lcall sub mov pop xor push movsb pushf pop cmp mov (bad) (bad) stos fadd ret rcrb mov xchg sbb je cmp imul jmp in cmp fsts cmc cmp jbe mov push xchg stos imul leave (bad) sbb stos hlt lcall (bad) fdivr add in dec (bad) mov sbb fdiv jg pop xchg push xchg cmpsb sub and dec bnd aas inc rcrb sbb mov xor lods sti push add pop mov imul mov mov fdivl scas cmp push cmp push sbb outsb dec (bad) je repnz mov cmc push mov jecxz xchg test sub mov adc fsts sbb mov in insl add cmp faddp mov sahf inc enter pop inc loopne adc es jno,pt and push leave adc lcall mov lds imul push sbb adc gs xor insl iret mov out jecxz mov pop and test push int3 jle sub scas aad sbb (bad) or pop xchg xor cwtl sub and pop adcb add dec les ds (bad) (bad) mov add pop je add add push nop add outsl inc movsb andb adc adc add imul add add add sub sub add rcrb jg je add add sub mov sub add bound add add repnz test add add addb add nop add and adc rclb (bad) add dec jns sbb cmp lods js pusha push xchg movsl push ret int3 call mov mov es (bad) ja xlat push sub xchg sub and push loop in in hlt jb adc mov mov pop jb jo hlt (bad) mov jle fs dec mov mov idivb jmp (bad) (bad) aad adc icebp pop pop pop fistl cmc fisttpll ja jno adc inc rcr lock push stc mov (bad) xor mov dec add orb add inc inc test mov nop lcall imul sub cmp push nop cltd stc and cmp mov mov push jbe cmp loope dec mov sbb push jnp fistl push sub xlat daa (bad) into sub pop sarb addb add lahf pushf test das push popaw in test or (bad) mov sub push cmp adc in xchg sti loop push xchg adc fimull sti dec mov out stos push and (bad) (bad) jb sub lret xchg sub sub xchg popa xor in mov mov jb adc mov in mov pop mov mov pop es jmp testb add sbb lea imull xor jmp mov adc repnz cmpsl jb aad imul xchg int3 rcrb clc lret int3 xor out cwtl (bad) cmp (bad) into cmc fildll js clc dec js arpl incb cmp cmp cwtl clc std pop ret fwait pusha icebp lea mov xchg xchg push popf jmp bound aaa vpmaddwd and inc add add js call lret pop aad and loope push bound ja lods je into xchg push fimull (bad) imul fidivr push xor pop pop movsl mov hlt fidivrl mov out mov xor fbld push fisub incb dec lods xor mov lahf lods xor incl or rolb add add lahf or jbe (bad) cmp lret and cltd js icebp push adc push out ret orl repz repnz lahf mov out mov pop ljmp or jle (bad) stc inc repnz lahf mov out mov pop ljmp or jle (bad) stc inc repnz lahf mov out mov pop ljmp inc push hlt pop xchg cli imul aad fstps outsb lret fwait push data16 mov scas jmp mov push cli popa pop fidiv add push arpl inc movsl pop mov pushf pop ljmp push (bad) popa fnstenv push cmp dec sub pop xor sub mov xor and add push sbb and ja sahf lds sbb cmpsl jmp dec outsl cld mov mov cld mov or sahf jg sahf ja sub xchg sub xchg in jns pop mov xlat data16 lods dec inc cli in in enter pop cli jbe aas push fs das add push mov add aaa data16 dec mov cmp hlt je,pt popa lret pop sbb int3 arpl (bad) adc xchg push ret mov xlat and add add ss jge rcrb mov mov fistpl adc movsl or mov jle js inc sub lret (bad) gs pop lods int mov cmp in push cmpsl and dec push lahf addl fcmovu out xor sub mov inc stc and mov in fidivrl xor sub dec and or sbb pop dec je fcoml nop mov mov push mov (bad) jbe dec mov pop in push sbb inc fimul add scas push insb pop xor xor cltd test lods fyl2x push mov xchg ret pop in outsb inc xor movsl xchg mov js push ds out sbb xchg sbb scas sarl mov (bad) mov outsl dec sub push hlt sbb pop rcll lahf pushf pop mov adc rorb incl loop mov pop (bad) dec xlat inc in incl jnp incl adc rolb add cmp sbb (bad) xor sti jae clc sbb in pop stos cltd ljmp pop aad inc mov cmp outsb sbb ljmp push rcl cwtl rorl pop loopne std mov subb (bad) mov jmp fimull xlat jp testl outsl add push jbe data16 out fwait outsl fistp insb jp (bad) jne jp rcrb stos popa popf imul cmc jmp cltd ja add rolb add les or subl aas aad out hlt sti jae cmp dec lods adc mov movsl or dec lds xor outsl mov push or mov stos mov inc fsubl stos push mov addr16 mov mov dec push xchg dec movsl scas cmpsl xchg imul mov dec mov popa inc pop scas jnp imul mov (bad) ds loop inc sar push sub push divl xor mov mov addr16 in push mov fcompp aad in (bad) jmp add mov (bad) mov sub mov pop push test in out out jne test jb push fiaddl pusha dec inc jae mov js xchg jnp jmp lcall les jp mov jg cmp jmp pop imulb stos lods pop push dec lret push add das js out andl and jnp dec enter (bad) mov pop xchg imul scas pop sysenter incl dec sbb add xchg fs adcl sub scas imul cmc leave je adc in mov imul or push rcrl mov mov sysenter inc rorl jge rorl addr16 nop sbb push sub test (bad) mov scas pop imul adc insb dec pop int3 dec iret inc xchg outsl (bad) and lcall mov add push imul inc pop dec jnp mov scas arpl sti int aaa xor pop xlat xor ret cmpsb iret pushf push es pop clc mov jge jbe (bad) iret inc into xor jae jp (bad) mov adc test pop mov mov frstor jae dec inc xor ja cmp xchg xchg push mov mov mov jno (bad) ret add fadds aas xchg sub pop mov mov mov mov mov jl cmpsb sbb sar in rcrl or pop cs or mov ds sub arpl mov mov xor loope je add mov dec (bad) jbe hlt sahf enter or ficoml add push adc lods jmp sub push adc cmpb sbb push xchg mov mov lock loop push push and xlat popa mov mov out outsl cld fdivrl cmpsl push call fistpl cmp aas and sub mov or push and jne pushf fs enter lods (bad) pushf pop sbb cli dec xor das leave aaa and cltd jge int xchg in jle push mov sbb arpl aad stc jae mov nop pop bound lods pop push cmp sbb adc add and and jns add mov push test mov add add or sbb add rolb pop cmp add daa lret add add aam add inc inc pop rolb faddl add dec cmp loopne mov add add push add xor mov addb add add add sub add dec add out xchg add add arpl jae add dec add xchg sbb inc xor sub jp lea add pop aad or jle cmc dec push mov popf das pop or cltd jnp sbb add xlat cli dec xchg cmpsb loop gs jge cmpsb jle (bad) negl cmp adc popa into push stos mov push and in adc sahf jno and xlat jne enter pop add push cs (bad) into mov jae push mov insl sbb stos icebp (bad) ds xorl lds jno and adc fisubrl fnop sbb mov mov pushf arpl dec mov (bad) xlat jle (bad) notl push enter nop xchg mov outsl js stos xchg push mov xchg jmp aas dec xor ret xchg mov fstps into test adc pop das add ss (bad) outsl push jmp aad in mov aam push sbb mov pop aam adc aaa sbb add repz pop jae int adc lods lods sub mov bound lods sub xchg jbe cmp sbb repz inc xchg xchg mov mov inc xchg nop data16 movsb mov jbe cld push mov loop fwait scas pop fwait repz (bad) adc and jnp mov bound out vxorps jge sub jae movsl mov sub shld jae or xchg mov dec push stos jge inc leave xorl in push add push adc in call arpl jnp lcall hlt addl push or nop xchg fwait push loope jno (bad) out sub cmp in incl add and mov leave test mov adc rcll ds cwtl lods adc insl push xor sbb test jmp push roll jb sbb js (bad) sbb fisttpl adc dec dec into jl mov js clc inc (bad) (bad) je bound mov and xorl lock cmc sub shr lahf cmp and dec mov shr xor rcll mov scas in cmp leave popf in push mov xor and mov daa cmpsl loopne mov pop fsts cld rcrl push aas push and inc test dec push (bad) xor mov ret les fnsaves mov fwait lretw mov into jmp push out mov pshufw add add lds sbb mov enter push mov in sbb sub xor sub aas sub inc fdivl imul aam pop mov out add pop rcrb dec pop dec jl lcall jg jae insl decb adc das add cltd call jb xchg mov into incl push push sbb ss xchg push popf mov flds fbld out add stos mov lods pop mov fmuls mov movsb lods or mov test jae cltd push jmp jge hlt push mov aas sub mov repnz mov mov cmc push ficomp mov add fstpl std jmp stc and cltd sarl std cmp fbld lret pop mov pop jp das push jge cli xchg stc dec call incl fidivr popf adc add mov repnz cld mov stos data16 jnp ret std push mov cmp xchg sahf pop (bad) jl or lock push jb pop out lea mov add sbb daa repnz mov insb mov iret mov mov ja cmp cmp jl (bad) push pop test leave or add add bswap outsl push sbb (bad) lea popf fwait sub sub popf test in dec pop ret das cmc adc nop mov xchg enter imul mov sbb push adc push jne int3 cmp jecxz inc rcrb rorl pop repz xchg mov jge lods jne pop push insl jae imul xlat (bad) call into mov ror sbb into movsb and dec stos out mov sbb ss mov scas jp dec mov add push jge or xchg mov mov pop jle mov insb or dec push outsl cmp jle mov (bad) fsts mov xchg out lods out pop lods ret gs incl fmul add fistpll xchg insl leave inc push stos and adc cmp scas nop cwtl mov in xor popa inc cmpsb sub insb jmp mov cmpsl aas sub push ja pop mov add sti cmp sub out clc push mov incl mov les add add dec clc pop mov push mov in fsubrs push fdivl ret in push rolb arpl stos lods mov stos cmpsl into jle mov std pop mov rolb imull dec mov add outsb (bad) push stc push call std pop mov data16 imul push xchg repnz clc cld test push cli dec addr16 cmc mov mov fsubrs psllq inc jle lds jp adc movsl mov ja (bad) mov cmc es adc mov movsb mov pop adc and inc xorl aad xor fnstsw mov sti pop inc jge push lret add add xor (bad) (bad) addr16 ret int3 ret pushf sarl fmuls mov bswap movsb outsb mov test stos shrl inc call incl popa sub cmc outsb stc inc (bad) push jp notb int add xchg pop out lds std cmpsl pop movsl adc xchg mov xchg int inc stos pop mov jle incl xchg pop repnz rorl mov mov (bad) cwtl out inc outsb sub call pop popa insb fcomip outsb stc inc enter jne daa mov cltd daa sub mov inc jb sbb jae mov mov popa gs int3 xor push or adc imul jp jmp es cmc xchg cmpsl out mov lock dec hlt dec popa and (bad) jl pop movsb pop or repz jo mov icebp jl lret (bad) jmp xchg (bad) lahf jnp fcoml or mov xchg cltd cmp test add fmuls icebp cmp in jmp mov movsl repz (bad) mov mov dec mov cltd arpl inc mov test cmp cli fldcw or out lods (bad) lock sarl je orl jmp jmp lahf or dec lret or jp movsl (bad) mov mov add add add out stos inc in jnp imul adc lcall sbb inc sti cmpsl pop pop ds test test sti mov xchg jl addb inc lock mov cmc jb fldt outsl pop je lods cmp enter les jb jbe lahf stc mov outsl jg push popf rolb dec sbb pop xlat fdecstp push fwait add push ljmp xlat (bad) aad add cmc dec xchg enter jl lods (bad) mov mov xchg sub ja lds in (bad) adc int xchg leave xor jp add push pop mov outsl js cmpsl int push mov jg xchg add fild pop dec push or lea int3 jg insb pop (bad) add pop add cmc xchg sarl mov mov sub cmp popa sti sub add add push xchg (bad) mov fldl xor mov arpl ljmp js and mov stc test xchg outsl out pop in push movsl (bad) xor adc ds hlt and lods dec (bad) pop sti imul scas leave int mov xchg mov repz rorb pop enter ljmp lret into push ficoml or pop stos mov (bad) js jmp jno ds movsl shrl add aad or mov and push addr16 fiadd int3 mov rcrl out mov loope push push add xchg or adc dec cmp and add fsubs push sub xchg in inc sub add add nop dec out add add add add mov add cmpsb adc push push add and inc jg nop add sub add add add add add add shrb or add add and test push mov mov cs mov xor cld movsb add loop (bad) jb xchg sub aad push cwtl scas dec inc cmpsb pop inc ret dec mov push or lock jb or push push sti sahf jo jnp int bound sarl push int3 mov push (bad) int add jb aad inc xor sub (bad) mov stc jnp push adc test fnstsw popf out fnstsw gs add add and add xchg fsts cld fmul out ss jnp cmp pop outsb or mov mov dec dec inc xchg xchg xchg xchg jecxz xchg or mov fcmovb xor adc or push test in fidivl sub sahf mov sub in xor mov outsl scas jmp jge and add mov mov lcall in js jno mov add add mov cmp iret ud2 ficomp dec in iret movsl (bad) je mov sbb cmp push sub mov (bad) xchg repnz xchg insb fwait hlt inc (bad) mov shrl pop push dec dec lds mov jno mov out adc add cli aad les push lds or fs xchg ds xchg imul in es imul fs cmc fld pop outsb sub add fimul cli and pop in int3 xchg xchg es push cmp lcall pop add leave je data16 test or imul mov dec xchg lea inc and add add cmpsl jl lods gs in fsts sbb pop ljmp pop jmp mov lret xchg arpl pop mov sub out mov cmp stos pop sbb inc mov into jbe push mov cli jle in aad xor ret xchg imul mov ret mov sbb int mov inc (bad) nop xchg bound mov movsb mov add ds in add add pop inc sbb pop sbb sub icebp mov enter cld data16 sbb aas mov in sbb outsb rcrl add incl sarb add add mov test popa inc popf fwait jp pop or out mov sbb add cmc dec repz xor into xchg cmp addb add add xchg push adc fidiv lret inc inc stos jge mov and (bad) mov pop repnz cld (bad) xchg fistl push jb mov xlat iret sahf mov out and pushf js push fptan jno mov repz cli insl aas stos (bad) aaa cmp mov fwait test inc std int3 icebp pop (bad) xchg test lods mov cmpsl push lret jns aaa xor dec jns inc dec stos mov add add add hlt (bad) faddl mov rolb xchg int3 hlt dec (bad) rolb jbe adcl (bad) dec aad jns sub sti out cli push bswap xor add in (bad) fcomps jge pop pop cli mov in cli sbb or push loope movsb jae pop arpl fcmovbe movsb pop addr16 ficoml xor push inc sbb fcompl imul add add setl xor outsb call add mov in lods movsl pop push and jae dec lock aas daa cmpsb and sbb ret mov jnp fldt imul ret lock mov mov imul pop add imul test cwtl sbb test mov in jmp jp pop xlat pop lds inc inc movsl inc std sbb xor adc jb jge jae and lcall dec notl pop cwtl jl mov sub mov dec push imul lahf addr16 fistpll das xchg sub fdivs scas pushf enter stos cld push mov (bad) std push xchg lock jecxz out add or add cld lods lret mov sbb out push mov or addr16 ret xchg cltd test adc sub cmc into (bad) leave cli or mov push jmp mov inc imul lock jp cmpsl rcrl sbb gs ret aas mov add or mov pop in lcall rcrb (bad) mov adc inc int jbe xchg pop insl lret lds shrl pop push cmp ss cs fdivp repz lret inc ret push or xor pop jb lea mov jne adc rcr jl jb sub push cmpl sbb fldenv das dec lahf stos dec mov addr16 and hlt jo cmp push roll das xor lea push fsubl aas inc add cld mov iret and cmp imul adc adc outsl pop xchg jnp mov out pop cmp popf mov add pop js pop stos cmp pop and xor iret imulb sahf adc sar sbb jmp jmp sub ss in mov and in mov (bad) fisubrl and (bad) mov in jecxz sub ficomp lret sbb out cmpsl sbb mov or fdivrs lds cltd adc inc scas arpl lock add push xchg cld mov out mov cmp sbb int3 rclb add and outsl cmp data16 pop mov scas inc cmpsl jne pop lock mov fstpl inc xchg lret jle call xor lods cmovl shlb loope lret xor adc mov mov scas imul lea lea mov pop pop jae inc xchg cwtl cli in pushf jg xchg mov test push xchg mov movsl mulb mov push lds loopne mov push add jmp and lods mov dec mov jl sbb inc inc int3 mov repnz fdivrl pop negb cmp xor mov mov sub lods mov int3 jnp fimul scas xchg cmp loope enter push fidiv add add (bad) cld repnz es insb in push cmp or xor adc xor push scas push cmp ret ret icebp sub les add rclb push adcb add adc add rcl es or mov les mov push pop test or adcb ret inc adc popf cltd add out xchg loopne mov jo xorl adc push movsb add mov inc inc test dec in xor push xor das or xchg push mov dec inc xor inc inc nop add add add add mov xor xlat lret stos jecxz adc mov dec fildll mov xchg mov mov add call push fcmove or jl (bad) dec int3 (bad) mov outsl mov mov adc mov imul jae cli movsb jb push (bad) xor sti push test es mov cmp stc and dec sub (bad) stc xchg or in cmpsl jg loope mov sarb aas and mov and fwait jp xchg mov imul dec imul into xlat cmp mov addb cmp ret sbb ror xchg lret jb cmpsl xor (bad) cmp mov incl pop xchg jno sbb lret pop imulb push nop and out mov ss inc jmp xor dec je (bad) aam pop nop in stc sahf inc push out imul ljmp jbe mov dec pop xor cltd fwait cltd lea data16 (bad) lds mov add or jge std adc lods imul aaa push dec add popa inc dec dec pop mov out cmp (bad) and fwait js call fldt pop and dec int cli jno mov (bad) jle jmp arpl shlb lahf mov add add pop mov mov test mov or cmp out fbstp out cli sub insb push cld jmp cmp insb in sub mov mov imul mov mov cmp lea outsb rorb jecxz outsb incl pop call loopne movsl push dec mov lds xchg insl xchg xor add test aas cmp xor pop addr16 arpl pop mov dec inc dec sar jg add xchg sarb lahf cld add movsb mov in fcompl mov incl add test pop in sub add add sub stos dec inc dec sar jg add xchg sarb lahf cld add movsb mov in fcompl mov incl add test pop in sub add add sub stos dec inc dec sar jg add xchg sarb lahf cld add movsb mov in fcompl mov incl add test pop in sub add add mov rcrb or pop add aad test repz push cmp std sub fs imul mov ret or xor mov mov add add jg sahf inc pop movsl ss loop pop add ljmp out (bad) xchg cmovs adc bound imul dec xor loope mov xchg lock inc cld loope mov fild ljmp sar jg add xchg sarb lahf cld add movsb mov in fcompl mov incl add test pop in sub add add xchg mov in outsl jge (bad) aam lahf stos dec inc dec sar jg push lea mov fildl flds movsb pushf repnz pop or (bad) jmp fsubp aas cmp lea in mov out inc jnp out mov sbb mov int3 ficoml push dec sub or imul clc mov aad cmp jle popw mov insb jge jge xor mov in int3 xor negl mov push mov lretw rcrb cmp jb les pusha ret fs repnz sub sbb (bad) addr16 mov pop fnstcw add faddl push std push pop pop imulb ficoml add std fwait xor incl loopne in (bad) jne aad mov movsl aas clc add dec call imul cli sar add ret not jecxz divb inc in js cmp std (bad) lock sub or cwtl mov fnstenv push nop fs hlt fstps ss jae incl pop cmp mov inc test add dec xchg cltd test add sbb aaa jne or jnp out lcall dec leave xchg mov mov push jns outsb sub dec inc fs lods jge repnz jb add divb imul les enter loop sbb out ret lods pop cltd push cmp movsb mov in fcompl mov incl add test pop in sub add add sub stos dec inc dec sar jg add xchg sarb lahf cld add mov vpsubq fild in imul data16 popf in cmc dec push imul ficom dec dec xor inc iret mov out cmp dec inc dec sbb dec xor mov mull mov jl inc mov js add mov std mov inc mov leave (bad) fcomps ret cltd in add pop mov inc je pop lret mov cmp in popf mov ds cmpsb mov iret arpl mov inc inc pop sub ficoml add or and sti adc es clc inc call scas cli and loopne in and jb mov adc add in mov incl mov cld adc mov cmp not lahf (bad) pop xchg sahf mov xchg xchg mov loopne in nop jne in mov lods aaa clc and pop je jb popa std lods cmp and and mov pop jg dec jle lahf lret ret inc dec inc sti pop outsl lock jl xchg cmp jbe cli mov data16 mov ja sbb jns mov mov jmp loope lret movsb push adc mov lock es cmp and mov and xchg xor mov jae xchg repz scas imul (bad) xor rcl xchg jbe std xchg xchg mov loopne in mov jge cmp and sbb mov push sti pop jae inc jle pop das notb fidivl add incl xchg xchg mov xchg xchg lods out mov mov aas mov aas add subl sti sub in pop iret rorl lret inc dec ret sti push jae inc jbe cmp repnz mov aad cld adc xchg sahf mov test movsb out sub mov jns aad push enter jg sbb in imul inc mov jae inc js dec gs aam nop cmpsl es mov out jmp mov loopne mov xor lock mov pop ja popa in xor or mov lret cmp mov pop mov imul xor pop pop out jmp mov pop xor (bad) les push sub lret xlat mov jp sbb mov push sti pop jae inc push xchg insl adc in push add lret pop pop jle sbb pop jge xchg xchg lahf andl mov (bad) aam cld or mov aas mov aas add jbe inc lret mulb test mov inc mov cwtl movsb int3 sub mov lods gs inc clc rorb mov fcmovu adc inc fstpt (bad) mov sbb add insb or cmp mov in cmp adc dec mov sub mov add lds mov mov cmc dec jmp ret ret lret in xchg mov lea lea clc dec stc scas mov cmp mov xchg lret jle pop mov push nop ret dec inc mov dec iret xchg jg cmpsb loope xlat cmp xor and dec int imul mov clc push sbb mov (bad) imul imul mov mov rcll mov (bad) jno xchg insb shrl adc jge cmp (bad) (bad) jmp cmp or stos push into and fs sbb pop ss les jns mov cmc push out mov mov inc insl call sub and fnstenv addb add mov dec imul movsl ficompl test jne inc ss aam sub push mov rorl cmp loop pop adc pop or xor imul inc insb (bad) mov and test je out into ja pop shl outsb push insl test (bad) xchg dec fidivl outsb cmp pop lret int jmp jo int pop xor popf xchg pop and mov call inc cmp pop cli lods sub incl imul add cmp sub into xchg pushf popf xchg ja fimul sbb flds add add pop xchg in sbb jne xchg xchg mov scas popl psrlq je outsl cmp fs mov idivb jge inc mov aad xchg lods jb push pop jp pop lcall test pop cmpsb dec fsubrp cmc pushf test out shrb mov ljmp aas div jle add xchg fdivrs (bad) xor (bad) xchg sahf pop in or in mov mov in imul clc mov incl je push es mov mov int3 cmp xchg loopne test ja cld hlt movsl jae sbb cltd mov pop mov dec dec mov push (bad) jmp mov push and in mov out dec jl and and dec popa jne aas add fidivr lods mov fdivs cmp inc insb pop das fs dec push xchg and cmp add adc nop pop test adc mov cmp js xchg sub ret push xor sbb call out aad (bad) ljmp xchg (bad) or cmp in sub out mov mov mov pop or fnstsw push enter (bad) insb (bad) jne jnp pop sub add and mov xchg loopne das fst or and jle pop jbe push fs jg inc adc add add pop add mov out sub add adcl push or add mov mov jo add mov hlt xchg dec rcrb add mov add iret rorb ffree jns mov dec cmp adc add bound adcb push inc into addb and iret enter add inc (bad) movsb out test or or adc add add pusha sub add add add js test cwtl mov pop outsb pop lea mov xchg mov sub scas cmp sbb mov sub pop dec test cmp push lds xor enter mov sub xchg jb mov adc cmp jle push sub jp movsb stos sbb jle sub lret jno in outsl pop ds mov jno gs jcxz push int test aad lock test adc lods sub insb subl or adc cmp stc dec sbb scas dec xor (bad) mov pushf hlt int3 ja jnp sbb (bad) loopne shld add sub cmp gs stc sbb mov and ret jge mov popf adc fwait or fst add pop jbe jbe fnstenv pop jmp aaa sbb test inc imul or shrl jp pop andb xchg adc add negb cltd fsts cmp dec cltd aad and std jle mov lods sub cmc dec sbb lea adc aam mov and rorl std push int out lods insl and test adc std cmp (bad) shrl aas je cmpsb add add add scas dec movsb insb sub sub xchg xchg (bad) xchg jl xchg mov sbb pop int push lock pushf cmc cltd (bad) fbstp or test out outsb xor test mov push in lock xchg sarl subl sbb xor je cld (bad) xor ljmp push mov sub cmpsb mov (bad) mov push mov jecxz push faddl inc inc add and dec add add add sti movsb addb add add add and test or add add add add cmpl add or add add add mov bound cwtl mov popf adc ja push imul mov mov xchg enter push lods adc jne mov out (bad) jb loop sti and sub sbb scas pop jb outsl push neg sub lcall push mov mov lods lds idivb dec pop jo leave lock jb das mov in fcompl pop lahf xchg jne,pn push jg mov jle ror xchg pop cmp inc in es bound push cmpsb pop and xchg adc sub ss dec loopne sbb (bad) cs bound push sti and inc in js dec lcall mov cwtl mulb test insl jb push xchg scas sbb dec jmp loop adc scas je cmc iret (bad) subl lds push mov leave or push jo mov inc pop mov imull and repnz dec dec pop or push lret popa aaa sub pushf inc out dec cli test pusha fcoml mov pop movsb cmp xor mov and adc sbb push mov adc or test lret dec mov adc mov ja push push in iret inc mov jmp pop mov mov sbb imul imul xor push pop or stos xchg rcl jecxz mov or sahf nop rcr outsb pop xlat mov jb xor outsl mov insb cmp enter pop jae xchg int outsb push mov out mov into in dec pop (bad) fcmovbe mov adc add stc or fdivrl rorl lods pop pop aad clc cld lret pop out sbb inc test jl mov adc mov dec pop fadds xor popf cwtl cltd push popf mov push int3 in xchg clc mov in out cltd cwtl lea aas push sub je outsb sub into mov xor jp daa loop cli or and jp xor mov jns and repz jae test mov cmpsl xchg sbb pop popf pop nop adc mov push jmp std dec xor dec (bad) dec pop call or and adc fdiv sarl mov ja hlt and add cmp loope mov insb mov jb or shrb into test incl stos cmp insl js push sahf imul push lods mov push jne jne mov jne xchg lds stos mov mov aam pushf mov (bad) in cmp inc and sub xchg out (bad) movsl in xchg stos addr16 arpl arpl jmp fcmovnbe sahf call mov ds lea or xchg rorl mov xor jl lcall inc adcl out cmpsb adc dec enter dec dec dec pop hlt sti mov jb lret xchg or cmpsl das into mov in out fwait xchg jae cltd inc ret pushf outsb fistpl dec mov ficoml dec inc and int fs or cmp dec xchg cmp and cmpsb (bad) leave imul aam pushf in in cld decb mov ret jp pop push daa sub sbb mov imul inc fnsave dec lret mov jmp cs xor mov pop (bad) cmp mov cmp in mov mov mov clc rclb movsb out ds or fldt mov or loopne stos jo ret jg adc test add movsl lock push andb adc pop push mov adc out push or out (bad) and hlt inc add in push xchg adc dec dec push movsb mov test fstpl and mov jl scas ret add mov xorl aad movsb xchg mov add js sub adc lahf gs pop orl push push push push mov test mov dec adc lock nop dec (bad) lahf addl nop add addb add out xor add inc sbb sub push rorb dec push push sub and int or jmp sarl fmull sub test or adc dec xchg and aad push or dec addr16 notl leave inc xchg xchg mov mov aaa ret push pop test xor lods sbb data16 adc data16 js lock jns arpl lret xchg bound js jb sub xor rcll mov pop adc sbb adc xchg cmpsl in inc xor fadds sarl and imul cmp hlt dec add add movsb mov subl sbb and jmp loope test jae imull inc adc stc cs cmp rcr sbb scas jnp cltd xchg xchg push fdivrl inc mov push cs xchg cld (bad) rorl lcall mov dec into (bad) je ja mov jnp lods arpl fcmovb mov outsb in jbe test sub push cmp mov cmp jnp add mov xlat mov daa pop jmp push adc dec and enter orb sub add fdiv dec fwait jle sub and aaa jge and scas ljmp add add popa roll mov lea (bad) xchg cli imul cmpsl (bad) mov cmp push test dec and add xchg and je scas cmp fist mov sbb mov call shll mov movsb push pop fmuls or enter and sub add fnstcw push testb adc imul dec cld cmp rclb pushf adc mov fbstp xor push fisttp (bad) mov je lds icebp sbb xchg mov mov aaa imul xlat jle xchg cmpl dec ljmp xlat fnstcw sbb add addb add adc add je add add add add add add add add or mov add add add pop popa and and outsb mov jo fadds clc mov mov push stos (bad) setp push cmp or push jne enter test dec xchg xchg pop or jno sub xchg test arpl xchg dec negl (bad) mov hlt lock outsb in ficoml or mov shrb ljmp bound dec cmp sbb aam lods cmp cmp roll or xchg aam fs pop dec xor and push lret xchg lods in fldcw (bad) push sub loop ret jne push push in mov fnop sti jecxz mov inc add movsl ja shrb cmp mov add and fiaddl sahf inc xor fwait jmp pop fwait sti mov out js jle ss xchg inc and push popf cld inc popa xchg test add je add inc push sbb mov jl movsb ret mov mov pop ffree push inc and aam repnz out sti cmpsb (bad) mov sub fwait repz mov jbe,pn dec movb cmpsb adc push inc iret xchg sbb fdiv sub inc loope fnop xor imul cwtl fmulp cli (bad) int dec mov xor pop jge sub movsbl lods outsb adc sub add sub jb add (bad) test and test hlt sbb movsl push xchg add insb clc xchg pop mov sbb xorl jmp or hlt add ds stc inc xchg sarb mov test jecxz outsl jne mov xchg out jns addr16 insb sbb int3 fwait xchg and and mov inc test pop fnsave xor push enter cli inc add lods jbe pop or aam push sub add mov sbb ret imul cmp xor mov imul aas cmp xchg lcall xlat loopne rorl int3 cmp loop out jns push (bad) aam xchg je push inc loope dec in aad lret or add shr pushf adc xlat mov jb mov lods pop (bad) mov xchg int3 imul pop sub sub push xor jno xor stos scas fsubl clc add cwtl rorl clc sbb mov mov das sarb xchg bound testb mov push cltd aas push xchg (bad) ss pop xor xorl xchg inc out add (bad) push incl and dec sarb dec and mov mov fdivrp shrl cmp fistl mov add inc mov xchg dec bound xchg pop xchg cmc mov mov outsl xlat sub jecxz arpl lcall imul push sub ret das xchg aas movsb push jno cmpsb (bad) gs enter js mov mov bound dec insl fbstp push mov jge,pt jae add pop out iret lods add mov repz nop stos inc pop adc test test jge add or mov xor sub shrb loope js imul xchg loop add bound inc push loop call add push pushf nop data16 (bad) les add sub adc sub lahf inc mov sub add add mov nop dec lcall add add add add add add lds adc add or add loopne add sbb pop mov pop sbb cmpsb pop fwait jb jge sbb rolb inc inc lods adc mov mov and scas pop lock add mov jnp sahf xor mull aad inc movsb push and xchg insl pop cmp mov xchg in lret mov (bad) dec jbe sti mov jbe adc cld sbb jle pop (bad) aaa aaa jge sbb dec outsb fwait jp out (bad) (bad) insl xlat ss adc fwait mov xchg mov mov (bad) enter jo xor arpl mov mov aam xor dec lock inc mov loope push aad or mov lods fstps fildll cmc mov lock in lcall mov xor ss pop dec pop xor xlat cs leave mov jae popf sbb mov out jl sub and fidivl dec push sub stos cs mov repz mov loope jo jmp adc aad push jl cmp sub add test cmp inc sbb lods stos inc imul sub pushf ja lahf adc enter test push cmp stc sbb sub into jnp dec mov cmp js mul mov fadd in push push xor lock mov dec mov lret and (bad) fucom ror je sahf imull sub cmp lahf test imul pop addr16 lret mov push xchg lock shll push jno push xchg sbbb pop (bad) cmp xorb stos in jmp mov int dec les xchg mov repz pop std shr xchg int out insl sbb push (bad) mov mov sbb into mov adc sbb dec sahf test js adc out nop or add add add add inc add and add add push inc inc add add inc add add add add and mov outsb sub gs hlt jbe loop dec jne clc stc or enter jle,pn loop,pt push jae xlat (bad) jecxz cmp mov cmp or jb mov mov je pop dec rcl out cmp into and push or xchg and outsl pop inc push in mov xlat jbe rorl sbb inc data16 (bad) fnstsw aaa sbb cmpsl sbb shr cltd cwtl mov movsl or popa or sub les fimul add dec andl dec hlt testl outsb and imul std mov fucomp cltd movsl xchg test pop inc push mov add and xor int3 dec mov xchg clc or loope inc rorb inc rcr pop and loope mov fs outsl orb mov push (bad) sahf in inc add xor imul test ds or jo mov outsb xchg mov cs dec mov cmpsb sbb sub ret or fmul out stc and jle xor mov mov mov mov outsb xchg int add mov (bad) mov cmp or pop out cmp sub sub adc jo mov push stos xchg test rcll test jne (bad) icebp pop add (bad) jae les idivb adc xor (bad) mov stos xlat and add pushf lea push shrb fisttpl sbb dec mov lods jle jae out aas loopne mov dec stc popf in enter ret popa pop jbe inc sub pop push daa loop call cmp std pusha cmp dec xor inc out (bad) fimul (bad) mov jno push mov mov sbb and push stos push push scas hlt sub add mov call jb cmpb out mov (bad) xor scas ss jecxz jns mov arpl xor fs push je aam fs fistp lods or popf arpl adc outsb inc xor pop mov mov mov xchg pop xor gs add test jno iret pop mov inc call out or stos mov push or shrb stos or xchg mov call data16 push int3 jnp push faddp cmp rcr inc hlt cli push dec xor pop xlat xchg jae out bound mov xchg jmp mov jae jnp xor test test mov inc enter pop xchg scas xchg cli popf or pop scas imul push psrld enter xchg test testb or jmp mov and jnp fwait xchg adc add add mov dec leave (bad) xchg pushf test bound or push sub bound push and mov xchg les cltd xor xlat pop mov cmp call (bad) pop out jmp push push ss fcmovb mov jae xchg sub ljmp ffree pop add sub push lret into push fimull js mov ret jg push adc jle out subl mov adc pop sti mov xchg sub mov xchg pop nop (bad) xor in ljmp pop jecxz testb add ret int sub (bad) aam add inc mov enter pusha dec cmp test int3 xchg idivl sbb data16 test push push addl push loope dec adc adc mov arpl lcall out add nop dec aad (bad) dec cmpsl or pop loopne xchg (bad) repnz mov cmp add inc and dec dec pop lret jo or movsb xor pusha inc xor push and fsubl add add add add sbb add push loopne xor add add add adc sbb enter mov add sbb rorl out pop jnp xor add lret adc or sub mov push in lds lcall mov dec pop jge loop cli push xchg into jmp jne xor sub lods loopne stos pop xchg divb xchg stc int mov fnstenv fcom mov fildll pop divl mov icebp repz daa popa dec pop push pushf mov addr16 out daa and or pop aaa popf jbe pushf out popa mov jnp fistl xchg cltd pop or adc xor aaa jbe fwait lcall sub add push popl jb (bad) mov lods stos sbb dec ret out aam jnp jl mov pop out push lcall mov pop xor mov push mov cwtl lret test push sahf cli xor mov scas jb pop aam cmp pop xor push cld in lock xorl inc in mov popa aas xor jb jae roll clc jge rcrl stos push jb imul jne dec inc mov pop jmp xor pop pop loopne cmp dec inc mov mov push sub sbb sub sti rorl mov cmp popf sbb xor push cmp mov pop jne add movsl adc sub in into xor addl scas add jae pop leave es fdiv imul xchg dec mov dec ljmp sub arpl je dec insl jmp push lret cmp and cltd jnp inc xchg icebp jae add or test (bad) mov xchg mov xor idivl cli pop pop push loopne push imul cmp push pop stc dec ds into insb movsb movsl in push mov dec push sub loope xor or imul mov and (bad) mov test mov xchg cmp jnp xchg fdivp jb mov adc sub and add rorb daa out xchg inc repnz add add mov arpl cwtl adc add and add scas outsl add addb add add add les add mov mov jge pop jno jbe jb jae xlat cmp lods push outsb dec push inc into (bad) (bad) repz xchg test cltd jno dec inc pop ds (bad) cmc push mov dec xchg pop push mov and cmpsl sbb sub mov jecxz cli cmpsl (bad) cmc jnp insl jae jecxz out scas loop test sbb dec mov lods stos jmp outsb mov lods sbb sbb push stos das jp cs (bad) or cmp inc sbb es jns repz in mov push xchg ror lods cmp cmovge fdivrl sub pop push xchg sub xchg xor stos movsl sub add clc dec inc loopne inc data16 mov movsb jae mov aaa shrl add out xchg push cld fcomps push cmp pop sbb inc mov mov (bad) mov mov pop push rcl cmp gs in add hlt xor adc sub outsb add xchg loop sub mov das jge pop push or cmp sub cltd sbb cltd adc sbb fiadd repz pusha test push jo jno pushf adc (bad) dec scas inc push sbb add xchg and push mov mov add fnstsw aas out push mov ss fiadd es mov outsb insb xchg addr16 add xor lds mov adc nop and add daa sub push test mov inc into sbb or inc mov or scas pop and jns in sub (bad) sub xchg push mov fisttpl aad cmpsb idivb push aam fs sbb push (bad) xchg mov les loop frstor mov sbb pop cmpsl cmp pop sub mov dec fsts and pop mov mov stos stc int3 ret (bad) add xchg sarb dec pop sbb aam out sub jecxz pop popa mov mov pop mov mov jns dec mov lea mov xor jae fistl (bad) cmp out inc data16 ss stos lods ja addr16 jecxz push jge xor lods push lret dec push int mov push icebp xor inc ret sbb cmp sarl mov (bad) jnp fwait dec aad stos aad dec sub cwtl pop mov ds mov outsl test icebp pop lods mov cmp (bad) sbb insb daa scas mov fcmovnu push xlat jl neg aad xchg push repnz pop popa lock sub ds outsl insb push inc test xor mov cwtl idivb test hlt shll imul fs lret sub rcrb loopne jg sbb add andl es lea kunpckbw fistl mov cld fnsave in mov daa lret dec lret inc mov push or fnstsw popf jne jno hlt jns ret daa xchg (bad) (bad) in gs jp pop mov push shrl cmpsb mov push inc lock add sub xchg add add xchg mov enter mov sub mov clc pop movsb push (bad) loop rcr dec insl xor inc cmp xchg jo push lahf adcb outsb in fimul mov mov xor stc ljmp mov dec add jp outsb movsl js in cmc push cmp rcrb xor loopne inc lods cmp mov lcall loopne jecxz inc mov jno pusha dec cmp add xor or add inc (bad) xor xchg mov or mov notl (bad) mov das ja imul fcoml cmpsb pop add aad aaa gs xchg xchg or sahf lahf jl adc in loop xchg pop sbb cs mov in and loopne nop add faddl add add add or push or add add add dec and sub mov ja popf mov hlt rcrl into test into dec inc insb mov into fidivl out aam (bad) mov mov push mov int mov mov sub in nop or imul pop divb movsb cmp mov idiv outsb add pushf adc push mov fldl in stc mov pop jo adc imul (bad) mov mov out iret jae mov imul jbe jmp stc jge mov jnp jl (bad) lret inc movsb mov dec mov sbb and xor mov xor outsb stos cmp add xchg pop pop push xchg es daa mov cmp ss mov push jae in xchg mov stos lods adc push add pop mov fcompl inc addr16 push inc inc icebp and lahf test add mov lcall dec pop bound mov test dec repnz ficoml dec sar cmc inc imul mov repnz ficoml test xchg mov fmul xor jae sbb pop insb xchg scas int3 dec lods (bad) cli loope test outsl fistl mov outsb cmp in (bad) lcall scas mov repz add mov pusha stos lock xchg pop sbb pop xlat mov cltd in push call aam mov cmpsb sub icebp xor pop or jmp dec mov das jo int add ficoml push imul fimul test pop in pop imul sbbl push or adc push and and push push or add dec add loope nop sub xchg inc lock add pop je add add ret push mov and add add inc jb cwtl aam add adc and add inc fs add jne adc cs outsl add mov push stos dec push ficomp pop (bad) int3 sub das sub rcl aad lds jns lods dec mov dec lret adc gs jb jmp jns outsb jae xchg dec xchg mov test xchg insl sbb lds outsb jecxz push jge ds mov call loope inc clc jmp jnp aaa and jns (bad) mov adc adc ret lds jb cmp adc scas pusha jb push mov jb jecxz mov add mov popa in xchg inc sub out add adc pop sbb push mov mov out and movsl or or in xchg mov int jmp push test (bad) loope shrl mov inc mov addr16 cmp jo out out mov cld pusha xor bound push popa jp int das push adc cmpsb fs or jno pop mov xor pushf leave inc sub inc popa (bad) cltd pop cli stc dec inc (bad) out inc push imul dec and xor inc lods jb shrb sub enter and jbe (bad) xchg push sub sti test (bad) mov mov loope push mov cmp pusha inc xor jbe inc popa pop inc sub sub dec and sahf fcmovbe adc mov inc popa push mov mov mov sub cmp jmp imul jecxz jns push jecxz mov dec pop aad lds in pop das cmp stos inc inc stos pop lds ja adc mov les push dec sub ds push sbb xlat pop stos adc lahf pop adc enter jmp jbe and loop lods push loope adc or xor xchg xor icebp inc mov sbb xor ja mov sbb (bad) mov push push ljmp rcrb pop push push lods push pushf out popf xchg jge jle sub lds jl mov xchg lret mov insb pop mov and fsubrl in dec movsl clc dec dec pop mov mov bound cmc push popa iret lahf sahf pop or incb mov sub pop xchg push jle mov push jmp dec pop std dec pop jno cmp das inc std or int xor adc add js ret aas xchg pop pop xor mov test rcll out mov lds fdiv pop fsubr pop das push cli dec xlat mov cmpl mov xchg popl xor mov arpl in cmpsb stos pop popf adc int xchg out dec into jb iret (bad) sbb xchg jmp and mov in sbb insb (bad) cmp je pop jle mov pop movsb xor stc cmp add sub cmp arpl neg jae xlat pop jae xlat insb mov or stc dec mov out ficom lret sub push ret xor mov push stos (bad) es pushf inc sub shlb xor dec data16 push jge mov mov add inc hlt in faddl push test pop cmp mov (bad) loopne (bad) lds das mov jns mov imulb jl adc repnz mov (bad) in xor aaa stc mov and stc rclb fistpl mov test mov sub adc ret pop jne loope gs int3 mov mov ljmp test outsb xchg mov hlt ret xorl xchg push push cmpsl adc cwtl jnp stos popa mov fwait shrb sbb mov sub ljmp rclb cmc mov (bad) dec mov in xchg cmpsb push inc sub and movl cmp mov pop dec inc mov adc mov scas or xor loopne jp inc enter inc aad mov push (bad) xor mov lods cmp mov scas jecxz cwtl bound fucom cmp out jnp push outsl xor js sahf clc push cmp add add inc sub add add add add loopne add add sub xchg clc dec add inc add add shr mov inc addr16 fsubr nop icebp mov imul or pushf enter aaa jns das jno fdivrs mov fidiv push stos (bad) add cli aas loope cmpsb (bad) movsb cld mov data16 xor mov sub jb aam dec insl call push mov test insw xor sub icebp je sub jmp sub pop and fwait cmp (bad) jnp jp xchg jle aaa fnstenv lahf or add add lods sti es xor daa dec (bad) dec adc dec lds sbb fcom sbb nop ljmp cmc das push sti fcmovu into mov add push sarb repnz imul jp daa int call cwtl mov in sub fnstenv pop jecxz mov push adc aam mov int3 pop push mov jae mov data16 test dec mov out loope jp inc jp cli hlt cmp in mov enter jbe mov scas xchg js sarl shrb inc mov xor (bad) in xchg mov and mov (bad) stos scas push call push negl cmp sub loop lcall lahf dec loop loopne test hlt mov sbb xlat outsl and addr16 cmp mov fwait push jo push test aad aad test or add xchg add add xor int3 dec cltd pop into cmp cltd cwtl mov aad pop lock xchg je jbe xchg stos test ret xchg stos push test mov or test xchg mov add or add add push push push or add add add dec sbb inc nop or test or mov add add and add add or add pop mov sbb das jl add xchg movsl outsl adc call movsl es push mov stos mov mov inc outsb mov stos lcall popl lahf add pop and ljmp test pop xchg jo jl push out fs fiadd jecxz mov xor pop xlat mov adc clc jne mov xor mov inc xchg mov ret cmpsl inc or test mov jae sbb jns scas outsl (bad) loop mov jne cmp outsl or lds pop lret rcrb lock movsb pop push iret add mov inc lret or movsl or mov pop push add cmp jbe mov rolb sbb pop jp lea sub push mov (bad) lods add add loope sub cld push or adc cmp out test dec popa inc stos imul insl mov fs pop xor imul je call test loop xor jl sahf test cs mov mov ret inc and cltd shll and rcl aad cmpsb loopne imul push xchg in pop pushf (bad) jnp cmp (bad) in push mov loope add fidivl mov rcrl xchg and (bad) cmpsb fwait xlat pop inc push ja popa scas jle les js adc mov pop sbb jnp push mov loope ds pop xor (bad) dec inc popfw loop inc dec xor test add mov (bad) mov add sbb mov inc gs mov fwait mov not cmpl xor test push mov sub push repz fwait jns stos imull xlat and pop in pmaddwd lret cmp rcr imul jge xor or push iret mov mov out mov jbe mov or push repz enter mov add add push push mov xor rorl jb lret pop xchg pop pop inc outsl mov (bad) es insb or and mov mov sti lods fidivrl jae lahf inc in (bad) pusha aas inc out cmpsl add cmpsl loope enter mov enter lret scas aaa add outsb aam and shll mov lret jmp mov loop lock mov pop jmp fcoml outsb stos cmp sahf jne mov pop aaa inc dec (bad) xor push mov cmp dec xchg int mov movsl mov aad push adc jne and rorb add test dec jl ljmp mov lcall xchg push movsl sub stc mov xchg popf aaa lock daa leave mov push mov out and rorb fwait icebp ret mov dec jmp mov mov inc aam sbb fisub mov inc cmpsb pop pop (bad) add dec add push mull sub mov add xlat outsb out mov rcll and push xor ret adc dec jbe ret cmp rcll sub out jne outsb test mov mov in je scas out aad mov dec loopne pop jo stos adc inc inc movsl jo fldenv cli fwait pop sbb in sub jno cmc dec movsl adc jecxz mov (bad) popa mov adc stos inc insl xor daa add sub xor das je movsl ror out mov std in loopne cmp fnstcw mov (bad) jo push loop push adc int andl mov xchg adc cmp addb add add and add (bad) sahf add loopne test fdivs data16 pop pop inc lock jne cmpsl pop clc sub sub sahf lahf inc data16 pop icebp cwtl mov fistpll sbb dec in dec iret sbb pop rorl imul mov sbb insb xchg lods arpl fldt inc add add add dec popl pop in push push pop mov inc int dec sahf push lock xchg jmp (bad) mov aaa mov push fisubr aas cmp xchg jecxz jmp jg (bad) ficompl insb inc mov dec ja lds iret pop std dec imul testl stos dec daa ret jns repz pop or mov mov or ret icebp inc push ret into ja cmpsb and xor test movsl aam pop out mov xor les add mov ljmp mov cltd stos mov outsb push scas mov push adc add pop push movsb jno adc cmpsb cltd push lods push jle popf fidivr jns push imul or dec add (bad) loopne aaa adc xor xor dec mov dec aam xchg push daa or outsl sub imul outsb mov stc jne cmp jp inc insb ret jecxz icebp insl in imul sbb (bad) jno leave inc inc and mov rcr (bad) sub mov test dec inc movsl pop mov mov out push sbb scas inc loopne pusha pop jb xor fwait mov add add add inc and add dec sub adc or add add add inc or pop mov arpl mov mov pop loop mov jne int xor cmc pop cmpsl ror inc lods aaa mov sub fs mov out stos (bad) xchg sbb pushf pop sub enter add jne (bad) mov push push mov pop mov int3 enter test cmp arpl frstor ret out or loop lea mov loop sub add inc mov xor mov adc mov jnp (bad) mov xchg imul sbb jae jmp sarl jns mov out das adc cmpsb push mov test mov lock or sbb push imul jecxz out inc stc cmc dec enter fcomps lret sub pop jl repz or (bad) mov popa xor mov and or mov mov push sahf loopne xchg sub lret sbb pop jns inc fsubrl mov push mov push int3 int3 xchg adc push dec pushf dec daa sbb mov mov sahf mov fidivrl add rcrl icebp inc loop pop ficom mov dec sti pop sarb mov cmp pop call mov or dec loop dec sub lds adc xor mov pop fild (bad) in inc rorl scas or loopne ret mov mov mov arpl mov and fimul lods ljmp nop scas mov sbb les dec push pushf add push push inc lods aam xor scas in add rorl test mov mov pop or cwtl clc outsl arpl imul loopne lret rol dec xor inc cmpl fcoms push pop dec cmp cli mov inc xor push fidivl scas or sbb push jb ret jnp movsl mov adc push inc repz xchg pop jb int jmp rcll fnsave cmp sub xchg mov and stos mov add sub imul push xorl iret dec dec xor test lea cs aam aas sub sarb adc ds (bad) fldl lcall jge jge daa lret aas dec cld and or push insb mov int3 lcall push les pop pushf push aad xor (bad) mov mov lea push xor fisubrl out or cmp mov sub faddl stos cwtl hlt fs icebp mov (bad) add mov xor mov xchg fiadd lcall jge push jb scas mov sub popa dec nop adc test movsb cli sbb je gs add jne lcall lea shrl stos mov push mov pop or pop jl mov js push arpl mov outsl fistpll lock pushf sahf outsl inc sahf (bad) faddl adc sub repz push scas mov xchg popf ds lods loopne stos inc movsl aam push outsl data16 xchg cmp jno aad fisubr in fsubrl jmp inc push mov cwtl mov xor stos push pop jno dec aaa mov es add cltd stos stos push jnp adc scas xchg dec and xchg ljmp push jge pop mov icebp (bad) movsl jne stos (bad) pop jmp in pop cs fsubrl sub pop rorl aaa sti and sbb jno insl push add jmp cmc jmp les mov (bad) popf sub mov adc mov stos lods (bad) loope jp push jg mov cmpsl popf mov push xchg xchg stos pop sub ss mov jmp fildll stos popa (bad) outsl outsb and stos sub stos test jmp sub jne clc xlat inc stos es jnp mov in pop xchg inc mov inc shrl stos out fstpl lcall sbb mov add xchg dec int rcrb ss mov lea cmp push xor cmp stos loope cmp fidivr pop mov sub cmp fsubl test xchg cmc pushf idivl into faddl cltd lret pop mov push mov lahf jbe cld out (bad) mov out in push in mov xchg add cmp pop mov insb mov or push fcom (bad) jb ds jle adc stos pushf in push out add add les mov push lods movsl adc mov mov push jmp cwtl mov stos pop (bad) clc inc jb das mov push scas mov outsl dec pop jb (bad) popf lcall das or outsb aas xor mov push and fmul push (bad) jl mov jns jno jl jb xor push lods dec jb stc sahf inc push into insl fldcw cmp mov mov mov sub and clc aaa and cwtl fs sub adc push in xor pop mov jnp ja sbb xchg mov pop leave xchg (bad) test xchg xchg mov mov mov xlat popa aad jle in push hlt scas mov xor jmp outsb adc fildll les mov inc arpl popa int stos pop mov xor daa dec hlt mov lret mov movsl cs (bad) stos in xor fstps mov int3 cs pop int push data16 mov int pop xlat mov add scas lahf cwtl inc jne out ja mov stos jge test pushf (bad) xchg movsb imul xchg cmp sub mov into mov cmc cmp ss sub inc fs scas out imull xchg add and pop cmp sub shl mov aaa xchg push push lods mov xchg pop into mov and iret dec push fisub mov and cmp xor sbb mov sbb nop xchg mov cltd mov es addl jo adc iret mov push add inc inc push data16 sub gs out dec mov mov dec jmp push repz and daa popa lret jae in frstor mov out mov out loopne stc mov add test push push jmp and adc lds (bad) jne fdivrl jns mov pushf nop movsl push xchg push jp repz adc in push xchg cmc outsb ljmp (bad) aad sub inc loop add adc add add add or push mov pop add add push push push or add test add or inc or add add dec add add add push addl ret icebp mov jl push cmp jmp fisubr adc aad push pop and jge xchg xor test and mov dec mov jmp fstpl add cld fnsave mov out ds pop or ja sbb jno adc jno rsm stos mov or dec push shlb xor jno ds fwait repnz adc lret cmp int3 cmp add aad cmpsb mov and mov add xor inc test (bad) xor cmp or mov in fistpll enter fild jp sub sbb sbb push mov push cmp xor lcall jp sub cmp rcr in mull movsl push add or cmc dec xlat ficomp xor sbb push outsb or push or or add xor outsb dec inc mov aam fmulp mov lahf xchg jge push insl and dec sub dec pop pop xchg dec iret mov xchg pop and aad xchg push fwait (bad) mov adc pop add sub test sub mov cmp insl push mov jp test xor in xor push std nop cmp mov lods mull xlat push xor data16 xchg int cwtl cmpsb mov flds mov or adc xchg movsl shrb dec (bad) mov mov mov xchg mov loope adcb push dec xor jno lea out add or sub xchg pop stc mov mov das push dec sub cmp xor out xor hlt xor repnz lret mov mov and push dec lret fninit (bad) dec lods add ss jns push xor jns dec sti mov sbb ds movsb and sbb cmp lds (bad) iret (bad) push sub out jne pop jp push sbb in scas faddl sub fildll inc je aas (bad) in incl int push imul mov cmc (bad) mov xchg dec add inc or test mov inc sub and pushf pop insb fwait push mov jb repz or fadd hlt mov ss in inc xor jb mov in test aas mov mov mov in lods aas cld push sub mov scas xchg jb push movsl pop lds add add int sbb rcrb adc popf dec sar add push mov mov mov cwtl mov add lods cmp xchg dec xor pushf jp ret aaa xchg xor mov std test dec push mov add pop daa push insl adc sub fcomip ja inc repnz fmulp fs sbb ja in push bound push sbb sub lock xchg xchg in jmp adc jo and rcl sub sub jecxz xchg pop or dec daa xchg jns push fdivrl cld scas mov jp test mov add push aad push cltd negl push adc fnsave pop push xor mov (bad) (bad) xchg push test fiadd pop into (bad) (bad) pop xchg iret sub push out push push jne aad shrb lret in test mov test addr16 fstl loope inc out or mov adc pop rclb xlat mov cmp enter push int (bad) add jp dec inc mov sub (bad) mov out repz mov pop mov incb cmpsb jmp daa jp ds into push push mov fidivr sub imul nop or mov mov adc aad mov sub dec jge xor mov decb jbe aaa outsb in cltd sub fist push addr16 insl jns adc adc icebp jecxz leave ja mov fldcw rcrb (bad) test mov pop adc sbb mov pop inc dec imul inc fcmovu jbe pop fistpll pop daa iret into sub mov insl and or add add movsb mov addb add adc push xor jl lods test (bad) adc adc cmp arpl (bad) loop sub push xchg push rcl jbe xlat mov adc jg bound jbe adc int je pop sarl pop jp fs mov xor push popa pop jne lretw ds addr16 das push sbb cmpsl jp push add add add pop xchg dec sub sub xchg pop mov jecxz and mov scas aam and jmp imul scas mov imul rcll adc in lret ds out jmp pushf adc mov repnz and imul movsb in (bad) call addr16 pop pop in lods dec mov mov arpl loop stos (bad) pop pop (bad) and fdivrp in lret jmp ficompl and xchg dec leave mov pop outsb jno pop mov aad mov out bnd mov incl je pop stos jp (bad) mov insb fstps xchg adc rclb add and aam adc mov fcompl push mov inc lds lods xlat pop mov fidivl sahf popf shrb dec lods insl sbb push dec sub xor mov cli mov and xor mov mov inc lea push imul mov jno pop pusha jb lret mov rcll xchg xchg and jbe in fisttpll sbb scas or repnz std stos cmpsb repz push idivl push int jae push pop notb fstl vminps inc dec hlt cmpsb jp mov pop jbe int3 imul jo fsubl ret dec int3 dec push sbb mov stos push mov push push jne fwait mov imul test clc adc add jne push pop inc es push (bad) fnstcw push sbb add jg mov pop ljmp push dec shrl into pop (bad) out ret mov (bad) cmp ljmp mov xchg (bad) xor fwait std orb (bad) hlt and or inc sbbl ds shll fsubl idivb pop stos xchg stos jl pop xchg jmp clc sti sbb mov inc iret pop xlat lea add ror lcall inc sbb push sub jecxz lret aad leave dec pop es fnsave sub push sub setbe imul and add stos jge in lret xchg xchg cmp dec pop adc out in shrl (bad) xchg push lods pop xor mov sub add inc mov addb addb add and add add add push mov or and add sub push push and add inc add add add add add pop sbb pop push (bad) out jno gs sub lods pop enter into lret cmp jl aad push sahf hlt cli fwait shrl mov cli stc push jb loop jl movsb fisubl cwtl imul cmp adc scas cmp or adc cmpsb mov lock jmp rcrb mov xchg jg push and popf stc and icebp adc mov icebp out icebp push scas push fisttpl ret mov cs pop in pop (bad) sarb mov in addr16 lahf inc dec xlat cmp int cmpsb daa push push lods pop xor into fimul lock push jae and sub outsb out dec mov int jne and imul ficompl push stos aad sbb pop xlat clc ljmp inc jmp pusha stos stos (bad) addr16 bts cmp cs aaa jne add pop jo out dec jae outsb outsb aaa mov movsl out sbb push sub fbstp jl in test (bad) rcll ljmp or lahf jge dec jp mov dec or sub cmp cwtl cmpsb and pop sub sub scas add mov inc inc dec daa aam les dec push in xor mov stos jle movsl das or sti cmpsl and jo fimull or cli daa mov push sarb test stos xchg push shrl lcall push mov mov sub aad jo aad jo cli shlb test pop sub push stos cmpsl add arpl pop cs sub insl lret dec clc xchg push imul mov hlt rcll push push ljmp push or fnstsw xor shrl std icebp gs xchg pop adc int inc mov (bad) fidivl lods sbb data16 in pop xchg pop xlat pop fsubrp lcall xchg push lea mov bound sbb mov lods jnp and fcmovne xchg ss (bad) enter fisubr jge mov mov jno push sbb add mov ja xor dec sti fsub lods aad mov jae lret (bad) aad pop mov aas aaa loope push mov sbb int pop loopne loope adc in cmp lcall shll cs add push or pusha mov lds inc cmp daa pop aam stos lahf and sub fsubrl cmp xchg sbb in jge scas repnz scas rclb nop cmpsb in dec lret inc xchg pop xor push adc das imul xchg mov int in inc in ret shrb pop bound and das aas or scas (bad) out push and mov jmp in jmp pop das xor or jne or pop arpl in dec lret in or sbb cmp enter or xchg lcall adc sbb cmp movsl mov imul dec dec dec dec imul daa xor dec fmuls hlt imul xchg sub outsl mov lret push push in test stos mov (bad) mov popf adc mov and mov (bad) and gs iret aas sub mov lods xchg fnsave jle call pop jb lods popf adc leave dec inc xchg inc jp mov xlat es mov add (bad) mov mov lcall xchg lea xor mov arpl in cmpsb stos pop sahf push adc shrb pop xchg or loop nop mov iret icebp ja pop repnz test lea fcmovbe pop mov mov int3 fdiv xchg jb,pt popa xchg push jae and insb les test in scas adc mov cli cmp in cmp sbb adc das sub imul cwtl test gs mov das dec lods add push dec aad mov push push gs iret in add mov bound push lods out dec scas data16 lret adc aaa mov outsb jmp hlt push sbb dec (bad) push pop loop pop out push (bad) pop adc inc scas cmp xchg jg lahf push mov ret mov (bad) cmp jne mov pop aaa int lcall movsl sub shlb in jno call fcoml adc dec lods das jp xchg sub inc (bad) (bad) add fidivr loop imul pushf popf inc repz fist inc mov xchg inc ret inc sti sub push mov in mov xchg int3 push sub mov daa dec jo negb jp pushf fs fcompl dec popa cld outsb out orl mov in insl add leave add pushf sbb sub scas mov arpl xchg daa insl fisubl loopne inc xchg push mov xchg cwtl and mov sub sarl mov stos mov (bad) mov xchg mov outsl dec outsb aad inc call ljmp lahf pop lcall repnz xchg pop in add push addl call fdivp dec mov mov mov lods fcmovnb xchg mov jno mov stos cmpsb jle sbb (bad) cmp sbb push cmpsb cmp inc and mov xlat sbb push adc push jp testl add add or inc add add fcoml leave push sub pop jb xchg imul aad or inc mov mov add pop xchg fwait inc jmp mov rclw out scas out lods std xor jne rorb insb inc xor and xor cmp je popf addr16 cmp in inc xchg ss insl mov inc add add or ror (bad) and inc mov fisubr cwtl sub push mov jle lods dec or mov add sbb jbe aam jne jne pop xorl xor xchg cmp (bad) or int3 ret xchg (bad) clc rcr enter shll mov mov fadd aad jnp adcl dec je into rorl dec ret xchg xchg data16 pop (bad) sub mov nop mov push stos rol adc lds cmp or out xchg test jmp insl imul jbe imul (bad) add sbb adc loope je fwait imul loope jns (bad) test icebp pop adc mov mov cmp jae cmp jae pushf cmpsb xor adc mov mov adc xorl mov adc cld aam nop push sub mov sub scas stc hlt mov push pop add leave lds add jns scas je fcmovbe mov pop push int (bad) imul push dec cs mov lahf push in stos cmp lcall push mov scas jl pushf inc fldt mov movsl push movsl je out push mov scas add dec and add or xor or fcoms mov xchg xchg pushw inc lods sub test pop jns (bad) stc mov mov dec fs sub and mov jbe pop jecxz inc cld mov jl cs dec bound negb cmpsb xor xor cmp dec test jbe dec (bad) xor mov test out pushf cmp out mov sbb mov fstpl xchg push in sub sub add sub xor addr16 aas je pop jo add add jmp lods dec xor insl cmp insl xchg (bad) (bad) sub xchg test xor or pop fcmove cmp ljmp pop fbld cld and xchg clc xor faddl pop or inc sbb jg push scas out xchg incb sahf sbb fs mov cmp into int3 int (bad) jecxz cs insl enter xchg outsl and jno jae jg cmp mov clc adc icebp push add jle out sahf mov push xor imul pushf mov aad xchg inc insl clc mov notl cmc pushf jb push dec xchg mov in int mov mov clc cmp xchg add std dec aad bnd cmp lret push (bad) lret fcomps insb fsts or leave leave dec lds out jbe div (bad) aad repnz ret dec rcrb js add or or fldenv ficoml addr16 ss cmp lahf sahf dec repz shrl loop pop push lods pop loope mov push pop icebp jecxz or jae lds fcomp test jnp mov repnz adc push xchg nop in stc dec push cmpsb jg lock out inc jmp incl push mov jl repnz aam mov mov jle cmp loope enter cli aas and adc pop xlat pop and jecxz cs jle daa aaa scas or out xchg lea mov add mov test mov outsb jmp inc fisubrl xlat aas xor add pop fdivrp ds aad (bad) fimull jmp mov js aam mov out mov cli cmp cwtl jnp ljmp pop fbld cld or pop incl mov cmp pop cmpsb add xchg mov mov ljmp pop fbld cld cmpl inc sarl lods push ret jne add cwtl ds aaa mov pop daa movsb push add sarb leave imul mov pop pushf pop movsb js imul mov jns sbb jae (bad) imul jl ficoml pop nop aad push mov scas push jmp out xor mov mov jl sar dec testb mov fdivs imul sahf (bad) add aaa movsb lods insl aam mov repnz pop out lods fwait xor jb loopne lret inc mov push or fnstsw popf jne fucom jno pop data16 xor pop mov imul inc xchg popf mov xchg (bad) int3 inc mov scas insl jp mov movsb popf paddw std bnd cmp loopne cli sub ret mov (bad) mov (bad) movsb popf paddw std bnd das cmc es popf js xor push mov mov stos movsb out mov rcl push stos out (bad) (bad) (bad) mov push sbb pop jae ss jge das sbb jmp mov fdivrs xchg ficompl (bad) test dec push imul xchg sbb push and pop lods fidivl mov xchg pop iret mov mov inc pop dec lods cli in pop mov pop lods push and stos js ret cmp dec adc arpl in cmpsl daa xlat in mov rcrl mov stos mov and add test mov push push xor popf push push mov imul cmp cmp inc mov aam std ja jge scas popa inc push scas or jbe sub cmp pushf decb int3 stc push xchg push pop pop fldcw xchg pop mov jmp lds xor aad arpl loopne xchg dec sbb push arpl xlat mov (bad) cmc push test cmp loopne cmpsb hlt mov push push fidiv pushf outsb lcall pop pop movsl dec xchg xor jp and ljmp jp roll cld cmp jmp push lahf sbb mov das iret mov cs (bad) pop in dec push mov mov out enter dec es loopne sbb int repnz cwtl and add into mov bound cmp sub mov in adc mov xor arpl fiadd jmp out mov xor es lods sub scas mov mov (bad) mov cwtl mov ljmp lahf das sub push loop lock test cwtl (bad) jb test push icebp cli cmpsb sub xor push sub icebp enter push mov jmp outsl dec das pusha sbb mov pushf mov cmc mov sub sub and lcall popa jl aam and lret scas aaa (bad) jecxz sub xor xchg lret (bad) cwtl stos sub test jb jo out mov int mov pop in jmp jp ds mov inc pushf aaa in cwtl dec scas sub adc pop adc xchg mov push ljmp cld ja xchg jno and sub mov fbstp adc dec and js or cwtl jmp popa dec sti mov jecxz jmp sbb ja out cli push xor loopne int inc jne test add xchg push mov xchg cs dec (bad) jbe add sbb ficompl sbb mov sbb jnp and push inc out (bad) out jnp outsb ret sti stos lods jnp add cmpsb int3 movsl (bad) int3 mov add xchg lea xorl and in cmc sbb jmp fwait insl sbb repnz mov divl xor mov pop stos sbb popf lods sub dec dec push push jbe jmp xor jp inc cmp nop pop pop in int adcb xchg into mov add adc rol and xlat dec call in rorl lahf pop xchg cmp xor lret pop xchg mov cmpsl sub cmp pop in mov fdivs packssdw mov cmp pop repz fnstenv mov loop or and pop sbb inc insb inc stos pop mov mov lcall mov and test mov add add (bad) mov cmpsb (bad) adc dec mov int jae hlt sub outsb xor in cld pop and stos fwait dec into dec jle cwtl mov mov lret into dec inc jl js pop jne mov insb ljmp lods cmpsl lahf cmp cmp cld xchg dec sub cmpsl xchg push jle add loope jae mov call inc sar scas aas sbb and cmp xchg scas (bad) and mov adc jp mov ljmp mov leave js pop das or push mov pop lret push enter inc fs inc sub mov or xchg pop jp shrb or cs mov movsb xlat sbb or jp movsb jmp cmpsl push sub mov push sbb xchg mov xchg mov jnp dec in sub je jno imul (bad) (bad) add pop jecxz gs dec lock or or stos adcl je (bad) mov push jge jecxz es mov sub mov and loope int outsb icebp or repnz test repz je inc mov push jne dec push stos call mov adc aad add cmpsb dec sarl adc aad stos stos lcall mov imull dec shrl pop xchg stos dec mov cltd rcll jg jne fdivrp inc (bad) (bad) in mov fucomp xchg inc push push adc in adc xchg jbe aaa add inc pop gs xchg jb xlat pop jbe idivl mov jmp adc cmp icebp inc movsl jo insl push lcall mov lahf sub jp push pop xchg jle inc jo aaa xchg ljmpw insb push add mov ret arpl stos dec cmp dec mov outsl cmpsb or mov int add add and add add add add inc add add add add mov pop shll inc jl cltd mov fcmovne lea sub pop pop xor mov mov xchg sub les jmp pop xchg adc popf cltd mov mov aaa adc std xor sbb imulb jmp mov aas cmp data16 pop outsb rcll jae test popl sbb inc cwtl out fcmovnbe int3 fs inc popa mov lods leave sub iret cltd gs fwait cmc mov add add add adc add sub mov mov cmp mov das adc sub jecxz (bad) idivl sbb cmp enter mov test push sub pushf cld mov aam jge pop cmp stos js fdivs daa arpl lcall inc je mov out xchg fsubrp mov push sub (bad) mov repz scas sbb scas xor adc mov out push pop es add and ret pop mov stc sarb jle test add mov loopne addr16 cld push stos mov test out addl sbb sbbl cmp cmc push mov in mov insb cmc inc in inc fist mov xor test xchg adc pop push sbb add inc pop jno scas jecxz pushf xchg mov mov adc sub test mov push add pop dec dec mov mov xchg xchg pop mov ljmp cmpsl adc cli into aaa in jae dec mov stos and pop jbe mov out xor xchg pop push ret sarl fwait imul jne jns iret jae ret xor inc outsb cli push mov sbb jb push jo and xor aam pop sbb pop mov loopne xchg push push mov lahf cmp fnstsw ds cmpsb sbb (bad) dec mov jl fcompl mov dec ss sarl inc jmp adc test int3 sarb dec pop jno cmp rorl cmp (bad) std push dec lock fdivr mov ljmp mull aas lock mov xchg hlt dec aas mov sar add add jae fucomip adc cld push sbb sbb xchg add iret fcmovu pavgb into pop add jns aaa cli and jg (bad) cmc or mov hlt xchg neg aas lds jo inc test mov sbb jnp iret sub add lcall mov xchg mov out jae mov push (bad) or push fstpl icebp popf sub nop mov leave xor sahf mov fisubr incl jmp jae add scas cmp mov and xor xchg and and xchg insl pop push pop dec fist pop fldt sub fwait mov pop iret into aas or lret push cmpsl (bad) in cmp popa mov imul mov jp call in lahf add add pop inc mov jmp (bad) roll repz sar hlt push shr xlat out cli leave jecxz rolb cmp inc xchg xchg pop (bad) inc bound fstl and pushf in cmpsb push loope jg push hlt lahf incl mov pop shl cmc xor inc lcall push pop out pop in or sbb imulb cwtl idivb scas arpl jmp imul xchg push ret in jp sar mov dec fwait out mov jmp dec mov jb pushf dec stos mov or mov jb jnp push add lods in mov jns dec lods sub cmp jae mov push cmp mov lahf movsl (bad) pop push sub cwtl pop lea mov push mov lock fsubrs cld rolb mov or fdivs lock pop mov xlat call sar or hlt pusha add ret push dec daa mov mov data16 jb sub lods insl out mov pop jbe iret outsb dec mov cltd arpl cmc jnp (bad) dec inc xchg jns fnstenv xor loop aad ror pushf pop cli push arpl lods cwtl mov jnp fistl xchg cwtl addr16 cwtl add lea xor daa mov test jns adc sub mov pop test xor arpl jle popf xor dec pop xchg push imul rcr mov sbb (bad) cmpsl call mov hlt push push sbb sbb sbb mov or sbb mov xchg xrelease add inc dec lods mov mov in cmpsb icebp lds cmpsb cld cmp jmp jne nop loop cli outsl jne out addr16 (bad) jns xor push jl sti lds fucomp add mov xlat jnp mov pop mov test imull mulb push mov add push push test add pop pop mov sub std shrl jecxz sbb aam xchg inc sarl jp rorl push pop loope lds dec enter cmc rcrb imulb jl xor in test inc push cmpsl gs loope stos inc pop pushf mov mov scas testl adc lods std jb mov xchg fldl fwait pushf jb repz xchg out add out mov dec sti into adc clc cmpsb hlt add add jno (bad) clc jno xchg cmp dec ja lret inc mov ja add into add push aam aas xor stc fildl (bad) loop push repz jp repz outsl cmp repz test in mov push sbb inc aad aad outsb adcl sub repz and add notl jmp stos dec mov mov mov xor adc lea mov mov loopne mov outsb sub lods adc mov sub lret sub sbb mov push mov in push data16 xlat ret roll xchg jp sti jecxz fisubrl inc (bad) adc mov std fildl adc adc jne xchg (bad) jnp xchg add cmp and stos xorb or lret cwtl jbe xchg sub and inc aad jmp insl mov icebp bound pop aad jns jbe ja kmovb movsl es dec lds clc jno arpl add dec outsb lret fsts jns imul cld pop (bad) shl mov cli mov jbe lods fcomi pop leave (bad) movsl adc mov test movsb lods sub incl les das dec xchg sub out xchg jg pop call test inc lds jns shl je inc pop push enter pop push add or test iret fldcw dec shr cli fwait xlat or add add add out pop xor cmc mov addr16 aam push lahf push sub les nop pushf mov int lds es test pusha mov sub pop loop mov prefetch or mov repz sub js lcall lcall or adc jp cltd rorl xchg loop cmpsl rcrl mov cmp mov inc mov mov call jne mov outsl jmp cs mov ffreep int stc popf aaa mov (bad) je imulb cmp jno dec (bad) mov sbb loop cmp mov jp pop push sub push pop in jp jns cmp mov cmp sub inc aad lods cmp mov movsl cmp fwait scas cmp movsb lcall push cmpsl movsb mov or pop inc aad mov fcmove mov out enter inc adc test jne push push lods dec cmp jp outsb lods loop (bad) ja xlat dec addr16 call in in stos push jb in (bad) mov nop mov rcrl cmc cmpsb or sti (bad) inc and test or orb cs sub icebp mov mov sbb mov data16 pop scas fidivl bound push stos cmpsb sbb call mov jo aam add outsb jae ja dec pop sbb pop pop xor push cs loope ja pushf call pop fisubrl mov push xchg ja stos sub addr16 mov inc and adc cmc mov jne sub and mov aam jle pop xchg or jne jl lret push jae pop jge or jo push call fsubrs xlat or jmp aad xorl adc mov mov pop fildl cwtl aad push outsl sub ljmp pop lea push pop in push outsb (bad) negl popf mov pop pop lea lret push mov or icebp sub push push dec rol adc into sub shrl outsb (bad) loop sub ficom aad into stc fiadd in add add add mov ds sbb and in enter int3 sub (bad) repz mov ds sub fcmovb popa fwait pushf jne cmpl sarb xchg mov pop sub xor jnp push sbb xchg (bad) (bad) idivl add add add jns in lret cmp js iret cmp add loope fcoms mov mov je fsts fidivl loopne dec shlb push data16 adc cmpsl pop cmp push pop lock lock lcall mov xor xor dec mov out mov mov ret xchg dec push dec addr16 sub mov dec fnstenv sub jge ret (bad) sub (bad) rorb nop add add add aas jae data16 push xchg push sbbb js sub pop push add int mov cmpsl nop or ffree and adc ror mov mov cmp insl push and pop and lret outsb inc mov jl test jae out roll pop push movsb (bad) ss add dec rorb lret sbb loop sub lret jl inc aas aas xor add add setg add jge mov xchg gs or (bad) out ja leave inc ret jb xlat movsl repz or jne cmp dec lods (bad) cmp push mov shrb sbb daa aad cmp scas inc xlat mov or std into xchg (bad) xorl outsl sbb stos ja dec int3 jecxz mov inc das insl or jbe jo mov adcl jne,pn dec aad cmp cs xchg mov loope push or mov in xchg js hlt imul mov iret adc push jecxz popf sub sub dec sbb cld mov mov pop sub or addl add add adc mov xor faddl pop or inc in mov lahf mov jg ret add pop shll (bad) hlt push incb (bad) xchg (bad) mov fildl adc inc test cmp lods mov and cmp pop add repz add cmp lret inc pop incl mov repnz movsb in push je dec sub jae jmp pop jmp js iret fcmovu pavgb into pop loop dec sbb mov jnp stc sub rcrl cmp out lret nop in pop xchg sahf adc pop xchg (bad) fildl lods aas push iret lret iret or insl mov and inc inc icebp cmp mov push aad mov mov mov insl out xchg xlat popa dec push lea cmp mov inc mov lods mov mov fadds dec mov cmpsl dec xchg les adc sub inc xchg incl fdiv cmpsl fildl hlt jle mov insl mov jb fisttpll in insb aam outsb into bound icebp sar sbb cmp popa sbb xchg sbb mov push les aas xor lock adc out (bad) mov std xor xor push std jle incl lods sahf aas dec inc pop bswap incl call outsb fdivr pop sbb and jg push hlt mov aas shlb pop jbe (bad) repz push je popa in sub cmp iret cmp hlt inc andb mov fsts mov mov xor inc mov mov inc cmpl mov cltd jae jmp cli add add cld and stc pop imul cmpsl in cli pop loope insl ss (bad) fdivrl cmpsb movsl loope dec dec cs (bad) push add aas xor pop js or mov das loopne aas inc bswap jg scas roll negb call and std movsl fwait clc cmpsl bound sbb aaa in sub lds repnz out fild mov cwtl lret leave inc mov mov mov out lods inc lcall mov mov and aad imul xlat mov out mov push push inc mov insl in push mov ja popf pushf mov mov xchg sub fs jne ds and mov lcall in sub xor pop (bad) movsl (bad) enter lock repz stc xchg std stc pop arpl aas pop dec iret aas movntps mov movsb les xchg and pop aad adc imul add add or and sub xchg add add mov test add inc add and dec xchg sbb fisub (bad) ss cmp push stos xchg mov jo xchg mov pop sti and clc mov mov in fistl pushf je ljmp enter in mov stc push adc scas pop mov push xchg stc mov pop lcall loopne div sbb out in aam pushf mov adc sub adc test pop mov int mov idivb movsl pop mov push into cmp fisubrl or (bad) xor mov out outsl push (bad) sub arpl mov and fidiv sbb outsl push cmp inc mov dec mov sbb mov xor lret push inc loopne cwtl mov fucomp xchg pop sub pop es cmpsb into pop jge xchg in push mov or ljmp xchg inc push inc xlat jb inc mov pop mov mov mov push adc inc ja into (bad) addr16 ja push loopne jecxz fild addr16 pop adc sbb je dec adc js mov dec pusha add stc push add les dec js js (bad) mov stos and sbb inc mov mov fs fstpl repz mov fidivl push adc pushf push mov sbb out insb pop xor outsb push inc repnz dec aam sub fcmove dec je mov (bad) imul (bad) rcrl dec pop jp cmp mov mov fsubrs in mov pop fsubrs in mov cmpsl xchg mov mov data16 xor push mov push int3 dec repnz mov clc pusha fdiv popaw inc cltd mov cmp mov inc (bad) into lret inc out out je inc (bad) fbstp lcall push test push cmpsl lods clc lock jecxz mov (bad) xchg jnp inc mov (bad) xor add ret setno mov xor lds lods mov inc outsb sub pop and aad xchg stos imul sub push sbb imul ret scas arpl in cmpsb stos add cmp fcompl enter loopne sub jb dec dec bound stos jecxz lock rolb into pop jecxz pop cmp mov add xchg out in gs xchg inc stos sarb leave jmp lock inc (bad) repnz (bad) mov add and cmpsb incl cld sub cmp xor and sahf mov (bad) loope mov scas pop movsl insl (bad) jo pop das jl dec call jg push fs fwait dec pop ret mov lods mov push mov inc es cmp (bad) loopne in dec lods cmp xchg int sahf aas mov xor iret jg movsb out push scas in jnp loope adc dec mov mov rolb lret xchg cmp repz scas ljmp test mov xchg inc push scas ja repz (bad) fnstcw jns adc cmc sbbb inc out mov jp (bad) imul mov mov rolb dec pop cmp xchg arpl aad out addb cmp add push cmp iret push xchg ret add jmp dec mov negb jb imul iret jo fcoml mov and mov jmp xchg fcmovnb outsb mov outsl mov test sbb sarl lds adc es cmpsb hlt iret sti inc push add add out push inc dec push mov scas sbb test sub jp push push xor add sarl xchg fisubrl cmp incl jmpw (bad) notl mov ljmp jae push jl jbe jecxz dec sub xor ret pop mov mov cmp fwait aad mov push adc popa mov sarb add fdivrl or mov sarl hlt lret arpl and or xor aas cmc cmpsb je imul cmp iret imul mov xor andl xlat jge bound (bad) jbe jmp and lea mov out popf (bad) sbb out inc jnp push add xor xchg xchg xchg test pop add or inc addl outsb xor sbb xchg mov add add push sbb rcrl rcrl adc lcall popf sbbl ret cltd arpl cmp enter xor push icebp pop cwtl cmp scas iret cmp cmc cmp jbe test push mov sub inc dec adc pop scas jp mov addr16 mov jno cwtl sahf or dec sub test pushf (bad) mov xor inc arpl add loop and sub inc mov out jnp out out (bad) jae out out mov add test add add inc add push in xor or xchg addr16 addr16 out outsb inc xchg jbe (bad) add mov mov mov mov sbb xor or dec push xor pop icebp xor loopne ljmp xchg sub jmp mov jnp jmp xchg mov push add jbe cwtl std aam inc (bad) imul dec cmp test cmp ds negl insl xchg dec (bad) iret inc inc ret pop mov ds shld rcll arpl jo mov xchg in jp cmp frstor in movsl lds adc stos fldcw fldcw cmpsb aas movsl out dec (bad) jno scas sbb lods imull out (bad) mov add dec (bad) xor pusha cmpsb hlt or stos lods cwtl pop leave mov inc mov push cmp push sub add dec test cld pop push cmp mov pusha push add in push adc rcrb lret scas les ret dec push int and pusha add dec mov aad xchg shll negb rolb dec mov pushf out cmp hlt hlt cld push xor pop push sub (bad) daa popf (bad) jne cmpsb cmp lock push das fwait inc mov aas sub mov adc jnp shrl xchg or leave dec jns sets int lret out mov push ret adc lods cmp mov sub sub iret lret inc iret jbe mov (bad) push adc and stos jl mov add add add (bad) negb lahf pushf popf xchg pop cmp sub js outsl rep pop mov enter popf imul loopne out jle gs inc jb inc push jb in daa pop jmp in test push pop int xor add add add push stos shrl or push mov jecxz lahf xchg jnp xor mov hlt fs nop fwait adc pop in inc mov aas aas mov lods ss imul lds dec les je dec mov (bad) outsl movsl shld mov (bad) dec xchg incl pop sub sbb test scas mov lret cmp gs repz jp lea jae negl sahf (bad) mov or arpl adc push popf push cmp xor xlat cmp call popf or inc pusha and addr16 mov shr pop cwtl iret push test cbtw mov inc push adc adc adc xchg in xchg sbb inc and iret fcmovnbe setbe dec fs movsl je inc mov in enter push adc ds incl rcrl mov mov cmp gs insl or mov cmp pusha inc test mov mov xchg mov and xchg in cltd sbb in test mov minps jle mov xchg fsubrs repz into nop lock cld jg sub jge,pn mov in cwtl hlt scas mov insb pop sbb out xor dec jmp add sahf (bad) cmp (bad) fwait cmp (bad) jne cmp push and cmp xor jne popf jle lcall xchg and dec idivl sub ds stos cli loopne sbb mov inc mov jae divb fisubrl jmp jp movsl xchg pop mov adc ss and inc test xor or mov sarl shrl loop jmp dec cmp sub push rorb jp (bad) mov and mov fs aas popf adcl and lds rorl sbb cmp les mov inc xorl mov mov and xor incb mov cmpsl in mov add dec mov arpl or cmp adc lea push insb sub enter and pop mov ljmp stos pushf rolb jne sub fimul jae xchg popf pop adc xchg adc sub stos nop mov xchg test mov lods pop sub das jl fsqrt or mov aad (bad) ss mov sti mov and pop cmc sbb lahf call sub aad mov sbb dec cwtl icebp pop movsb div pop fimul jb add sbb cli pop sub sbb mov sbb xchg mov fisubr adc cmp imul mov stc adc or cmpsb push xorl xor pop mov mov mov cmc gs mov (bad) lock std adc (bad) add pop scas mov mov dec loopne mov xchg movsl xor add lock or and or popf jns mov or cmp add in and frstor and mov push sbb mov inc mov arpl pop ljmp scas ret in lods or lea jbe int xchg xchg xchg xor pop sbb push mov cmp lfs pop shlb jge cmovae das jb addr16 into iret dec lret mov movsb cmp inc jae or loopne imul mov cmc bound cli sbb pop enter leave imul scas xchg (bad) clc mov or inc xor pop rcll adc cmp push pop xchg sub mov jnp sbb lret inc mov and jno mov int3 sarb stos loop jne mov icebp inc xchg xchg cs fidivl mov gs stc dec cltd push inc jae mov fwait stc movsl lea ds jg sbb out fisttp icebp xor add add inc add sbb mov cmp pusha cmpsb in aam movl xor jl sub mov mov arpl add loop push insl xor aad cmp stos in jno cmp arpl push cmp int adc cmpsl adc lods push jae or cs pop jns insl xor sbb rcrb lea adc mov out sbb add and imul xchg pop cmp clc cmpsb dec dec xlat mov pop mov (bad) push ss loopne cmp cmc cmpsb or scas or cltd adc adc ja push mov dec adc pop mov jp add scas sbb add push fimull in jp push adc aam cmpsl and and (bad) jno mov insb mov or mov das sub and les push and aad mov (bad) mov and xor sub and inc divl adc jae sahf out (bad) mov rclb sti sbbb rolb fsubl mov dec add dec cmp pop adc stos jl mov pushf adc incb xchg inc movsl adc push or sub mov aad sbb test mov inc (bad) mov mov mov and stos xchg sbb xchg outsb rorb (bad) in xchg lret dec inc out adc xor jnp xor inc jae jecxz scas int3 cld pop arpl cmc in xchg jnp dec in in mov push in imul sbb es call hlt aad (bad) out push mov (bad) xchg in subl (bad) mov jne clc dec aad sbb adc lods fcoml add inc sbb lret in mov sub inc dec outsb fcompl jmp mov fcomp stos in cmc ficompl pop leave mov add add add mov inc and fldt lretw ss aam test mov arpl scas fsubrl push pop cmp fwait rorl jp fwait ss jl sub leave fnstenv cmp bound mov idivb cmpsl (bad) pop inc stos outsl fldcw xchg xchg into dec movsl je rorl ja and out mov xchg add dec mov push mov insb mov xchg (bad) loop cwtl in xchg mov mov (bad) call test cli jmp js xor mov movsl fisubl xor mov cmpsb jne xor push inc inc pop sub push ljmp sbb inc mov and dec sub jne aaa sbb loopne adc sub cmpsb scas iret pop mov dec shrb pop xlat or jp adc xor outsb mov test push hlt stos hlt jno das xor sub dec frstor lea sub mov mov sub push mov fidivl out push (bad) cwtl pop fidivrl (bad) insl adc stos mov or jmp cmp shrb push push sub push add xchg dec pop jmp testl data16 xchg in push sub or lcall les fnstsw sub aad lret pop mov cmpsb cmp popa inc scas js jge xor dec jne scas or scas stos bound push push (bad) jae lods push push jb dec call ljmp dec out inc iret addr16 mov repnz in ss sarl testl add and adc add add add pop icebp addb je lds cmp adcl jb xor pop adc notb pop mov cmpsb mov dec jae (bad) and lods mov mov add aas in repnz mov inc outsl sar clc pop mov mov leave xchg mov mov repz out repnz fbld lcall push aam dec jno cmp cmpsb mov jbe adc out cmp fildll out mov add add add mov dec sub sbb int3 cmp js mov stos popa inc test mov scas pop cmp mov push int3 mov pushf mov or adc cmpsl arpl mov jmp jle jb lret cmpsb push stos fidivl int3 jle in inc inc xchg orl sub shlb mov ds adc or rcrl xchg xchg dec mov (bad) enter ret fnstenv mov stc jecxz (bad) xor mov jmp sub pop icebp and mov push add rolb add add das sbb xor sub aam mov (bad) cmp push adc pop aad fiaddl jne out (bad) stc jge fidivr test lock xor jne push movsl popf in sbb je (bad) (bad) add cmc fwait mov fsts jne mov sbb sub xor ja out pop jb cmpsl ja fiaddl mov mov and cltd testb dec mov stos fsts out pop dec notb push xor adc out leave sahf (bad) stos scas lret repz jns dec push sub inc pop cmp fisubr aad push cwtl dec jne test (bad) loope in dec jmp push ljmp aaa add jne inc xchg sub jp loope cmpsb hlt lods jne aad scas loop xor js cs repnz xchg rcll mov cs (bad) jmp lret subl push scas mov push out mov outsb add cmp dec stos outsl inc hlt xchg inc out test rclb and les stos outsb clc cmp adc pop sub inc lds dec push and sbb jne ja and mov (bad) loope push in lds flds sbb xchg push xor push bound imul cmp jnp inc jb (bad) dec push loopne popf test ja pop xchg pop lds xchg inc das adc mov jp,pt push pop mov cld movsl ljmp mov movb int3 jns int3 dec dec rcll jp xchg (bad) test cmpsb and stos push andb add rcrb incl cmp outsl ds fs or iret mov sub push rolb repz jbe mov cltd mov pusha dec inc (bad) sbb mov and mov xlat pop in pop sub jge ja sti xor inc stc pop push jge jg ds std mov ret lahf jle jp idivb not jle not cmp xchg sahf xchg mov repnz push and lea bound in imul insl jp xlat push cld (bad) test call cld outsb (bad) add mov add fwait loope cli sub pop in cltd das (bad) mov cld das jg pop and xchg and popf push pop mov xchg in mov push icebp gs pop mov test fnstsw cmp je jmp hlt inc mov jecxz ret aad es inc jae push notl ja add jg push aad (bad) lahf lret leave and sbb lea les sub pop icebp fucomip cmp out ret repz ret insl (bad) imul (bad) rorb mov ss add ss pop xor dec rolb push rcl lcall ret insl pop xchg rorb and inc lea push (bad) (bad) fsts pop cs cmpsl test rol movsl mov push (bad) push fsubl xchg repnz mov inc cwtl cmpl dec (bad) (bad) je dec scas jmp dec cli and into pop mov mov pop lret int fnstenv outsb mov outsb dec xor pop push popf dec loope mov xor xchg int and (bad) icebp cmp nop aas xor enter adc (bad) pop les aam mov pop sar add outsb lea inc incl xchg aas push addb cltd mov xor ret arpl bound mov dec call lret (bad) lds inc (bad) mov incl and pop fimull mov dec cmpsl push xlat outsl js (bad) (bad) and dec fldl in adcl cwtl out mov out repz xor xchg mov mov (bad) xchg mov es sbb cmp imul cs lods aaa inc jae lods dec adc pusha jl ljmp outsl dec jmp insl cmp and divb outsl (bad) pushf std negl in pop push and mov incl scas fwait cmp or call (bad) mov add pop lret mov add outsb (bad) add stos aas push jns std lfs pop shlb inc pcmpeqd fldenv inc ror push gs jae xor sbb std xor jp jns cmp cmpsb or jmp xchg dec adc movsb imul arpl scas hlt (bad) clc sub add call push xor and inc xchg xchg test and (bad) jmp push pop sub int clc in (bad) add cmp add add fucom addb push add add add add add add (bad) and inc push inc xchg test lret mov cmpsb sub jmp enter sbb mov test push pop mov push das sbb mov or mov hlt dec and sub flds push out lods movsl fmul movsl push jnp mov xchg dec test or ljmp inc pop enter jne scas sbb push ja hlt jnp add sahf test (bad) das push dec push scas dec aad xchg jecxz (bad) adc and fsubrl mov sub and pop adc xor rol ds and adc inc jg mov icebp mov xchg fstl test mov (bad) push call mov fist cmpsb cmp mov add xor cs mov sbb mov stos push or jno push push outsl cmp ret jmp into sub fwait rolb imul sbb fistp push mov dec fstl mov push cmpsb sub jnp mov push fwait inc xchg lret out mov test mov (bad) out scas enter test mov and pop xchg pop jl nop push xchg mov dec fs cmp cmp int aaa xor imul clc cmp ss les jge and sbb push xor mov out mov xchg ret mov outsl sub push or add jle cmp inc insb pop dec fs outsl push popl lds aaa pop xor jle repnz popf mov xlat cmp outsb jp xchg jl shll lock shr das jne (bad) jb pop xchg enter push (bad) mov and lret xor ret adc imul add add inc movsb cmp mov popf imul test xchg outsb mov pop in icebp adc xlat jle and cwtl xchg je mov push mov je mov scas imul xchg jnp inc in sahf mov ret in adc or mov hlt pop (bad) aas or add mov mov orl xchg dec sbb and jl cltd movsl sub jb jge adc aad jne push jle cltd jge sbb sub push mov xchg fisttp mov negl lret cs mov testl inc jbe test mov (bad) mov fwait lods clc movsl test roll adc pop fidivr sbb addr16 shlb aad popf and adc cmpsb jl ljmp push dec aam aad imul jmp ret stos out dec pop xchg pop jg hlt push xchg push and and aaa push fwait mov sti mov and ja inc sub jle mov inc es xchg sbb jne cmpsb push dec loope ret insl or (bad) test in xor test hlt leave aad fidivr scas pop xlat scas scas inc leave inc fimull out xchg dec cmp mov fcoml out lods pop pop out ljmp cmp mov fsubrl (bad) xlat ja (bad) mov xchg ret push jl stos scas cli movsl xchg push (bad) int clc movsb pop fisubr mov add aaa add movsb push out lahf add inc loop jge fisttpl arpl mov fidivrl fwait and cld faddp les dec (bad) enter push cltd pop shrb or pushw lods pop lods pop pop dec and pop cli std inc ficoml lret shll or popa mov dec lods arpl xchg pop (bad) mov add add (bad) mov mov dec sub mov push sub rcll das insb cmp fsub add incl test xchg push mov cmp mov lahf shrl aam jnp ja,pn push ljmp lods and insb jge pop repnz sub inc lahf mov lcall int es dec sub dec pop xor cltd fwait cwtl mov shll mov out xchg fsubrp mov addb add rclb push rolb add and xchg add mov rorb push inc add mov pop dec movsl ss adc in sub jb iret stos push mov (bad) sub pop (bad) xor push and mov push sbb sarl dec pop lds cmpsb push pop aaa ja clc fmul jb mov imul call scas xchg mov mov inc fsubl or scas sbb fldt push or sbb jae sbb cs repnz cmp rclb add (bad) enter inc lcall rcll adc cmp lret cltd sbb loope inc push add adc xchg bound fs lods push jge or insl sub rorb fdivr ja and pop aam xchg adc mov or rcrl mov adc insb cwtl push dec scas jge sbbl mov leave js scas cwtl rcll incl cmpsb imul mov dec pushf dec xor aaa gs stos nop sbb (bad) mov iret and xlat and pop xchg sbb push mov push adc and dec roll leave pop cs mov hlt hlt dec dec push push fdivrl jns (bad) pop pop loop inc push mov stos arpl mov pop adc push or loope jecxz or enter int3 xor push inc clc cmp in out add lahf aaa cmp xchg inc dec jp cmpsl pop adc push pop (bad) out fidivrl push aam mov mov aad fcompl outsb outsb push mov pop pop dec mov movsb xchg je and add dec rcr cld jmp mov push ss add shrb xbegin add xchg decb (bad) fbstp clc or loope fstpl inc pop cld cmpxchg add cld push insb lock cmc dec nop aas (bad) repz incl clc fisttpll pop jle jb cli push push mov add in rolb data16 pop decb dec incl scas xchg cmp lret xchg mov aaa das daa cs mov test mov out imul jl mov das jg pop and xchg and cwtl cld adc jnp (bad) sub pop inc out lret int (bad) (bad) aad lret adc fs cmp cmp lret mov daa sub xor dec inc mull push add add mov fnstenv sub push sub xor sub sarl mov xor out cmp pop in xchg pop outsl mov dec fstpt xor sub in lahf adc outsb fidivr inc jle xchg xchg clc das decb pop (bad) sbb popf lock shr movsl pop cmpsb pop outsb push inc mov sub aas mov fiaddl (bad) lock std adc (bad) paddb cmpb add mov cld pop mov push pavgb sub dec inc and jno lcall gs (bad) repz adc dec aas sar imulb cld mov ret dec bound xchg pop xchg in stos movsb daa popa dec cmp mov cmpsb fcoml lds cmpb pop iret fwait xchg xchg lock xchg or leave lock sub clc dec call lods dec sub das pop jmp scas icebp leave push mov fmulp jbe out xchg and push mov das mov mov divb in push cmpsl mov mov mov hlt jo shr jg aas rcll jg int add shll sbb sub out in cltd mov cltd add clc mov in daa incl jecxz xlat lock in cli stos lret xchg adc imul insl xchg push xchg popl test xorl fcoms jge cmp outsb push fistp sub mov aam mov testb nop lods add arpl sub loop push in aad lods jmp push outsb int jmp fistl xchg pop mov inc test push fimull (bad) mov mov jne sahf subl dec and lods xlat ss xlat sub pop fadds mov push mov add lcall mov sub dec les outsb repz xchg test cld std lock dec mov (bad) mov and push movb enter fs cld aam cltd mov (bad) mov bound fbstp out jnp scas jno add add add dec andl add add dec pop mov dec aam xchg inc scas pusha gs ss or insb mov jecxz inc cmp and test cmp and sti lahf jp and inc mov aaa jmp jmp in sbb sub add mov icebp (bad) cld pop arpl push jb jge shl sub push pop sub mov add in dec and popa andb test aaa scas popa je cmp adc data16 (bad) icebp inc aaa out faddl push es dec or (bad) jno into in sbb (bad) daa jg lods aad nop imull push xchg outsl add cmp mov outsb push ret (bad) in xchg mov stc hlt mov mov xchg test adcl stos loopne lea push movsl jnp xor pop stos out repz jg xchg add mov fs pop sub cmpsb push loope mov mov pop imul pop mov (bad) pop lcall cmc cs pop mov adc mov mov mov add mov mov jmp mov inc push ret push fcmove popf insl pop fwait rcrb arpl test ja jge es notb jne inc adcl xor ret test (bad) stos xchg sub movsb pop call pop lcall mov push cld int sbb aam pop jne (bad) gs xchg pop xchg imul leave inc mov aaa add in sub bound xchg loopne mov das popw mov pop cld and or enter xchg mov out rcrb pop xchg call jp ja cmova sub xor xchg mov mov cmp jae add adc (bad) mov in mov fnsave decb jle movsl pop (bad) insl jg pop push mov lods es lods mov (bad) int3 mov and dec test adcl inc pop push push and mov cmpsb pop shll rorb pop sti ficomp cmp lahf push cld dec dec mov mov movl data16 xor mov jns cmpsl ret arpl push testb scas sbb aam xor jmp cltd push ds cmp push add dec outsb jmp add jae push ljmp stos sbb movsb add stos (bad) mov mov sub js dec jns mov aad ret cmp pop sbb les fidiv cmp faddl mov lret stos add mov sub lcall dec xor pop mov sbb cmc inc xlat mov pop (bad) mov das jp add cmp pop jo and mov pop jae cld addr16 xchg pop push andl stos addr16 pusha xor inc scas adc push ret cmpl arpl stos adc lds (bad) mov push push push jl ds add pushf shrb popf shrb bound mov sub leave test test insb mov fidivrl (bad) fwait (bad) (bad) loop add faddl cli inc push int mov mov lods mov jmp negb arpl scas cmp push dec pop ss push dec enter sbb (bad) imul adc popf push cmp mov es mov push in jns into outsl fwait jl loop (bad) mov dec lcall add test adc sbb or inc dec out pop dec or iret dec and mov cwtl fisttpll cmp xchg mov mov jp lea inc clc lods xchg add mov pop scas or jb lret xor stc xlat clc mov add push and fdivrs (bad) stc lds xor or and les enter adc popa inc arpl add jo sub add add add add inc add push sub push add add add xor (bad) pop sbb hlt pop mov push xchg scas mov push addr16 (bad) in test add popfw push mov inc dec mov mov inc cmp jnp jae iret inc push cmp out push mov cwtl pop sub inc mov test mov push test sub insl ret xor pop sarl daa or (bad) xor inc sbb inc cmp mov mov sbb push add inc (bad) mulb popa jnp cmc pushf jb and ret (bad) sbb (bad) mov sbb inc push adc ss les arpl cwtl imull adc loope pop fwait mov imul jbe (bad) mov movsb sub mov jnp cmc loop lcall lods inc ret sub fidivr mov adc ret sbb sub inc mov pop iret fild enter mov loopne arpl loop jne push jecxz cmp ljmp cld bound lret loope jecxz loope mov sub push std fmulp mov pop adc imul scas outsb lock xchg xor xchg ficomp dec scas mov ret stc aam ds cmpsl mov inc aaa mov inc lods aaa (bad) xor bound loop ret jns cmc push out mov push int3 (bad) push cmp mov data16 add mov push outsb incl fs cmp mov mov scas in xchg hlt add (bad) lea pop push sbbb inc sbb scas pop iret fidivl pop pop and jl pop ja stos xchg movsl adc pop leave sbb in out idivl mov xchg int push pop dec add mov xchg out dec out incl push js mov stc (bad) xchg jns aas lds cmp hlt inc incl sar idiv mov push jmp loopne (bad) sti jl loopne test pop cmp add in pop loopne bswap (bad) cmc dec nop aas (bad) repz incl clc fisttpll outsb add repz ret push shrb fnstenv pop std je fcmovu inc mov fidivl xchg or or pop out repz mov (bad) sbb sub pop in cltd das (bad) mov data16 and sbb xchg sub pop in mov dec adc in jo inc addb (bad) jecxz adc inc xchg lcall sahf pop mov pop add ds int sbb movsb repz movsl outsb jge mov hlt out dec pop inc cmp icebp lea mov mov fdecstp dec mov outsl jle push jl push pmullw jge xlat loope push js jb adc pop fistpl dec repz loopne cmp test and ja mov jecxz cs mov xchg jmp aad das cmp imul stos jbe adc push xchg std jo pop add icebp xlat rcrl shr out add imul stos xor call (bad) aaa inc mov ret mov ret aas inc jle repnz mov stos repz cwtl jb mov loopne cli es clc jno std inc add ret imul aad pop shll cmc aas pop xor cld pop mov push pavgb inc cmp mov jmp mov leave jp in pop daa dec jbe cli mov std sbb xchg repz imul sub jne cld scas mov adc jnp call jo lret das inc mov lcall mov cmp aaa cwtl jnp ljmp push pop cmp rcrb mov iret leave inc xchg mov in pop push imul jmp enter fcmovu or scas mov leave fwait incb ss mov inc nop sahf cltd xchg cltd insl leave mov repnz fsqrt pushf jns mov (bad) popf xchg loopne cli sub out in cltd mov cltd addb push add (bad) aaa xor add (bad) mov inc orl popa ret fwait sahf mull sbbl imul sub xchg lods stos xor call sbb sub (bad) lods ds ret jno adc in or and adc loopne into pop cs xor arpl or test and or add mov xchg dec add (bad) loopne stos subl stos adc test or jno pop mov adc and (bad) (bad) movsl rolb adc and loop push or test mov loopne test pop lods loopne jno fwait (bad) push inc lds xor ret inc inc dec lret aad sbb out imul xchg push push fdivrp push jp jecxz xchg add gs daa sbb fisubr mov pop add dec (bad) iret or rclb cli fs in imul sub push sbb xchg sarb outsl stos shll mov dec lods fldpi add lret dec xchg jg inc inc inc inc lds repz jp imul xlat xchg cmp jge adc jle sbb hlt dec fisttpll mov ja adc mov xlat aas out mov add mov jbe sub lds and lods push sbb sarl stos aaa push push push mov popf jne and adc out test ja stos repnz mov arpl jne inc dec in fcmovnu mov mov cs sub je sarb adc jno repz xorl cmovb loope xor mov (bad) shll push data16 popf mov mov sbb cmpsb jmp daa mov pop push pop rcll or movsb jbe dec push in xlat ret ljmp jo in pop inc mov insl pop es jecxz je (bad) js dec pushf aaa arpl sarl pop mov cmp je into insb in xchg push scas push (bad) and push sbb adc push push (bad) cmpsb or ds xchg std add cltd xor imul cmp leave int mov jmp push movsb int imul rcr xlat push movsb enter or cmp push xchg dec pop pop data16 fwait sbb mov jmp jbe (bad) dec in jae lock xlat pop out ret lods jne mov sbb imul sbb add lock pop jae (bad) (bad) fmuls xor mov aad mov mov int mov test fiaddl aaa push fnsave gs push sysenter enter loope mov imul leave fstl sub lret cltd jns,pn and pop fistl jge sub pop ja pop gs jne shrb push ljmp imul jo movsl pop xchg cmp scas lods xor cmp adc enter inc dec push pop popf out or mov scas mov sub fwait mov sub adc push adc or push scas push ret test xchg mov in mov push jo stos (bad) push or jnp fimul mov push (bad) sub adcl test pop cmp rcll mov outsl mov or orl add add add add push push mov xor inc arpl inc mov jo ret orl pop arpl (bad) loop mov adc std push lock in push test or cmp sub loop jmp (bad) push in int dec mov xor jb mov mov adc sbb push push xor jns movq jl mov inc hlt sbb add add xor nop popa cmp xor xor xor jb aam test mov int3 mov adc in and (bad) cmc mov sbb sbb out imul inc clc inc ficompl imul lods xchg fs mov jp jge idivb xchg aas pop dec inc out cs movsl loope loope mov sbb sarb or (bad) loopne jbe in push iret scas test sbb bound and sub idivl iret jae jmp jae in pop in adc dec add add add add jo add add add push mov xorb add add or loopne inc incl fmul or jecxz add dec stos movsl sub push cmp lahf lcall arpl outsl inc dec and cli or pop lret icebp dec (bad) cmp fisttpl mov inc dec sti push outsb fst add dec mov add push mov icebp mov mov out (bad) inc loope in cmpsl sbb adc lret or xlat aaa xchg push xabort mov add sbb dec cmp fnsave lea push xor adc ss adc lods repz pushf push incl pop jnp iret dec xchg push in in mov add daa iret push leave or push je push pop mov pop sub pop xor dec push fistpll mov xlat stos cwtl cmpsl mov add dec push stos stos mov sub pop lds out (bad) push iret rcl aaa and bnd dec push hlt insl push or (bad) and mov aad mov jno push xorl cmp das jo add stos popf push and inc add sub sbb enter inc lret lret test inc xor mov push and cli xlat inc (bad) nop xchg test lods pop je sarl push mov je clc cmp fs adc add pop sbb fwait mov fisubr lret ret into aaa push push leave fidivl insl outsl push sub enter jg in push (bad) mov jne in adc sarb aam leave outsb lahf jnp fnstcw mov adc test push aad mov out repz sahf lock push (bad) rcrl repnz xor das cmp outsl pushf mov popa out lock cmp push pop jmp hlt fucomi adc mov mov xchg mov add movl sub push (bad) repz pop mov inc and sub jmp dec pop out bound inc and pop call push aas and insl dec rcrb mov insb jnp mov sub push sahf inc cmp outsl fsincos aas fmulp decb jge cmp idivb divl inc sbb dec pop cmp pop push xchg cltd sbb lahf das push adc and mov aas xchg (bad) pop xor ret shrl enter jp int3 xchg xchg jle jge int3 (bad) fidiv popa outsl jge rep add jae inc call fmulp decb jge cmp idivb divl inc sbb push mov dec insl stos pop push daa aas daa push imul adc sbb jae cmp xchg add mov sub int3 movsb popf fwait cmp leave inc mov xlat inc popl iret mov inc std jo xor cmp mov lahf out data16 ds or fstps psrld in inc insl dec es (bad) outsb pop scas cmpl xor adc xor rclb test push mov lods jle insb dec jmp cmp xor fwait (bad) (bad) cltd jne inc insb es pop mov hlt out adc mov mov lahf out data16 jle out sub jmp mov or jb icebp (bad) fpatan mov mov (bad) pop (bad) add sbb cli (bad) cmc push repz adc icebp and and bound adc pop mov mov popf call sbb mov cmp fcoms add lods jbe out cmpsb push (bad) mov movsl out repnz cmpsl out and std push cmp idivb divl push xchg lahf mov in iret loopne int3 push pop outsl js int repz insl push (bad) ror fldcw cmp sbb bound out mov mov fisubrl incl fstpl jo or lret imul push gs out fidivr test cmp push jbe les call inc call fmulp decb jge cmp idivb divl rcrb dec lock rcl movsl push ficom pop (bad) adc pop sahf adc sbb jns push sbb jno das arpl ret imul pause nop cmp push int3 arpl bound cmp adc aad xor pop sahf dec int (bad) (bad) sub (bad) xchg mov fs mov dec icebp pop cmp arpl mov ljmp add mov repz jecxz or add add inc push push inc and add add add xorl add add add add mov sub inc das (bad) shrb (bad) shrb sbb xor inc (bad) test rclb add mov dec rorb dec jl (bad) imul mov sbb nop mov movsb dec aas lret cmp lcall add inc pop push enter pusha stos insb push adc xchg adc mov or (bad) mov push sti jecxz xor xchg test loope cmpsb xor pop jb sbbb sub stos mov push add (bad) imul pop cmc outsb in mov repnz xor aad lret lret rorl aam (bad) jp imul push xor xor and int pop fidivrl scas imul pop push lock fisttp lret inc fstl iret imul popf fstpl add (bad) out mov lcall cmp arpl or sub push cmp jmp das jb push dec rcrl cmc (bad) mov imul cmp fstp jno aaa sbb mov ret dec pop mov dec adc jne xor push jae adc scas sub leave ja add xchg inc pop sub scas cmp stos mov pusha test push aad pushf fbstp ja aam ja sbb fisubr pop sub popa (bad) out js push inc stos scas jnp jae and (bad) mov and dec sarl jns mov jp in jle mov push movsb sub shl mov fcomp addr16 cmp sub pop xchg addr16 stos movsl jbe (bad) icebp fisttpll in mov idivb in jne mov dec and or (bad) js fmull inc xchg lds (bad) pop pop push ret lahf imul mov jmp test mov rcr adc cltd adc rcrl xlat ret jb (bad) (bad) pop add jns,pn pop xchg inc sarb es mov mov outsl imull hlt (bad) mov aaa cmpsb cmp mov mulb aad sub sub stc and (bad) iret lods mov inc ja cmp lcall jle (bad) jbe std push sbb js cltd test mov push sub (bad) mul mov (bad) ljmp xchg push out mov mov (bad) adc jnp fnstsw jns sub test fisttp sub arpl cmpsl stos push cmp dec adc push in rclb push test xchg in loope sub in xor fcmovb xor xchg jbe jo notb xchg or cld pusha xor jmp cmpsb std in cs push push push pushf mov cmp push xchg cmp pop xor and jb fs dec push or gs in out sub insl js je cmpsl imul movsb loope adc jmp stos pop adc addr16 add pop xchg loop fcmovbe xor sub ficomp mov in out adc movsl clc popa aad push outsl into mov add mov add add cmp cmp inc insb ret xor (bad) mov sub (bad) mov jp mov xchg mov outsl jae push mov jns lcall insb mov lea pop fadds incl mov dec jg hlt mov leave sbb inc adc jns pop sub xchg addl jmp (bad) aaa sbb push pop xchg inc rcll inc cs mov xchg push or es xchg lret loope xchg mov loop mov pop stos xor mov imul push lods cmp cmp movsl in push (bad) arpl loopne pop in jnp out jmp dec iret sbb mov inc ja,pn cs and jp hlt hlt push sbb mov jnp pop (bad) jb lret cmpsb ss sbb mov sub pusha stos aad dec ret scas mull aam ljmp add add outsb sbb add add add add push add add add add es pop stc cmp add shrl sbb mov cmpsb lods pop pop push cmc roll xchg push mov xchg sahf xchg pop rcrl scas lods js out push repz mov jbe imul xchg push rcll inc cwtl pop imul lret mov fimul rcll loop mov dec in xchg leave pop cmp add mov inc push pop scas rcrb es adc sub cmp loope loopne cltd adc mov jne cmpsb mov arpl lahf inc lods pop push (bad) popa lea jno jne out add sbb jp fisubl (bad) gs xor or cmpsl imul push (bad) lock lods jno aaa push mov mov or sub xchg lret xor xor adc aam jl inc fwait cmpsl popf repz and cmp insl repz inc fcomip subl jb pop fidivrl inc outsb idivl sub int3 push subl jge adc fisubrl jle xchg add loop pop xor or adc loope sub mov fcoml or cwtl adc aam aaa mov jno dec push stos push fstp add and push xchg jp sub xlat xor or repnz lods mov sub push aaa jp jne mov stos push loopne in pop cs out sbb sbb lds jo lea adc sub mov int3 sub cmc dec ja mov fstpl out mov jno xor iret pop push and push int3 clc push pop jo stos js push add cmp xchg rolb add and sti addb add push mov and add add add add add sub sub add add mov add or add add add add add add add subl cmpsb adc adc lds pop dec add add inc in dec dec push jl or lahf sub mov xor lods pop adc adc inc lods jae xor imul repz mov (bad) ja inc sub dec fldcw lret ja repnz das adc pop loope mov and addr16 fs and push xor ss mov pop adc cmc mov sub testl xor mov cwtl pop inc stos stos cs add or cmp ror test aad in pop mov or mov cmpsb dec loop test pop mov aam jmp pop jno mov or into (bad) roll insb stc mov cmp fst es pop push cwtl out (bad) mov inc dec jmp mov lds push ljmp scas cmp cwtl arpl push mov sbbl mov adc out or sub pop ret xor fidiv ljmp out sbb push into mov pop cmpsb ljmp ljmp push or sub scas out out loop and inc scas jle pop insl bound jne fcompl or inc mov push mov into pushf ss inc xor call rcrl aad lahf fldenv cltd and sub repz andb daa xchg or lcall adc inc and cmpsb inc dec stos xchg and sub cld arpl jg mov cmp inc les out jne cli faddp notl ljmp adc cmpsb loopne dec je dec and sti cmp les (bad) xchg sub cmpsl ss repnz dec sub xlat das mov cwtl xchg lea data16 test test fiadd pop mov mov pop aad cmp ss mov popa shr clc nop sbb jbe gs fcomi dec mov jp and int3 ret rcrb ja pushf addb ret xchg push dec cmpsb xor fidivl sub sub adc dec lret mov mov repz xor or movsl adc (bad) aas dec jns shrb sub inc push cli in mov mov push dec imul inc repz dec mov outsl inc in imul in xchg pop in mov lahf cli fs aaa adc push cmp sub popf das xor rcll movsl xchg xor dec pop push or dec jmp pop into xchg fstl loope ud1 mov jmp push adc mov xorl cmp outsb mov testl push add push mov fist notl es cmpsl js ret cli dec inc (bad) cltd scas repnz cmc sbb adc dec nop adc jne mov imulb jp dec xchg fucomp adc js fstl test ret mov xor add push mov xor imul outsb add cmp lods mov pop push popa cli icebp sbb sub imul flds adc sbb mov pop xor cwtl fwait cwtl lea pop add sub mov xchg shll and sub rcrb fldenv add imull cmp and gs loope cmp cmp (bad) cmp cli jae xor mov adc inc jmp icebp cmp repnz gs mov push xchg addl inc push (bad) loopne stos jp mov mov jns xor cmc mov mov xor sbb insb outsl dec into jno lahf or or popf and inc mov or pop adc scas into cmpsl in inc insb out (bad) push push aad xlat jge xchg lods stc jb mov je mov xchg mov mov scas adc jge xchg imul rcrb add add add add pusha add add add add test enter xor xlat pop (bad) cmp cmp lahf mov cmc inc push dec iret mov clc add into (bad) jmp adc mov jo popa pop pop in fsubrp cltd pop ficoml fldl data16 (bad) inc inc pop sbb sarl je insl inc dec adc xorl outsb push ss or scas or test cltd or repnz jnp fadds sbb fisttpll clc (bad) out dec push cmpsb cmp push sbb xchg (bad) in sub cltd jne loope,pt lods xor mov cmpsb push mov popa mov sbb fstpl jp fildl push cmp (bad) ret xchg (bad) mov push adc es (bad) or outsl inc loope je ret and adc dec adc loopne out inc mov lea and inc sub idivl and iret rorb rol (bad) lret in dec mov jnp mov cs loopne (bad) mov add fwait roll mov pop ljmp mov sahf rolb or test xor lea mov sahf loopne sub lret (bad) inc mov scas es loope sbb mov dec arpl mov out pusha mov mov shlb lock jne pushf rcrl in in cmp jle sbb fild dec std cltd imul aaa push jne mov outsl push shrl ja push push mov test push inc mov adc dec movsb in xchg clc cli pop sbb (bad) int3 sbb das or rcrb jmp aas inc dec xchg int3 mov arpl stc les xchg mov add add add cmpb int in imull pop dec xor mov adc out in in pop cmp sub pusha cmp inc stc push popf rcl pop push xchg lcall je mov cwtl out jno xlat push mov std jo incl test aam xor ja adcl into cltd pop fbstp ljmp push ja push and stos push adc pop dec mov das pop jb xchg lcall lea push and mov out arpl cmpsb lahf mov in test fiaddl (bad) aad imul test lods mov cmpb fdivl lret dec inc cld imulb add cmp cmp ret fisttpl sahf rorl in xchg pop movsb call push aad cmp std scas arpl sbb mov es mov ficoml and mov ficoml rcll mov push sbb in stc xchg dec inc (bad) xlat xor mov mov out std popa popf cltd insb or arpl inc jp fs jle fimull inc leave inc dec dec int push inc imul lcall xchg xchg lock mov inc xchg and jno sbb mov fist stos imulb sti push push ret sub es pusha js ljmp push push push dec mov gs jnp inc mov out mov in lds ljmp cmp incl xchg dec incl leave sub or cli dec movsb push push sbb mov jecxz (bad) icebp inc mov ds pop jae cmp mov fstl decb pop mov jg mov and sti aaa gs xor mov xchg mulb mov cmpsb mov add out xchg lahf and test shlb into das lcall add and fdivs xchg add inc lods xabort mov xor mov mov int jecxz mov andl (bad) mov outsb push sub and fs sbb mov mov dec js xor imul les mov call sti xor jne push pop fistpl adc dec add push leave push xchg and mov data16 mov shll jns (bad) test adc sub push sbb sub jmp incl std fs cli pusha pop mov fstl mov ficoml and mov ficoml jle fstps dec push fldl jle repnz loopne cmp ficomp rorb inc fs cmp popa xor mov sar push iret dec mov add pop movsl xor shll mov sub fadds pop xor xchg fwait and cwtl jae xor bound xchg stc int3 jge ss fnstcw aam cmpl (bad) in pop loopne (bad) add insb lock cmp xor imul xchg mov mov repz bswap lods sub arpl or push and and addr16 jne mov stc jns xor cmpsb and ds outsb mov (bad) outsb sar add jns in (bad) rorb cmpsb fisttpl xor inc cltd and xchg inc cld sahf sub add daa (bad) mov inc mov inc mov push imul fwait stc mov nop fisttpl push cmc data16 xchg sbb add add push and nop mov mov add add add inc test push adcb nop stos add out or (bad) stc stc (bad) fwait rolb mov inc dec sub es aas jae push xor int outsl (bad) imul add loop out fnstcw xor jge sbb sub mov push lods pop pushf outsb cmc mov daa pop sub scas iret or outsl iret ja sarl xchg imul pop add loope,pt dec cmpsb or stos das mov cs inc inc lds sub repnz fnstsw test out lcall push loopne std stos sub loop sarl in test sbb xchg mov imull jno pop scas stos push dec mov (bad) clc rorl or push imul ret xchg pop lods cmp jbe sub rcl xor test loop pop mov xor fisubrl xchg scas mov push imulb push push xchg jbe mov movsl jne jns imul mov push in jmp repz stos cmp sub cmp sbb incb cmp lods lods sbb mov stos (bad) jbe dec and shr addl pop out inc stos stc ja push fsubs cmp data16 fbstp xor sahf stc lods xor push and mov es mov cmpsb sub shrb out mov rep add dec test sar inc cmpsb sub into ds and dec aad add jne pop scas push lcall sub push dec push repnz and les test pop and imul dec push mov loop out add pop inc cld and rolb xchg mov incl pop cmpl lcall xchg cwtl pop js lret call (bad) mov mov movsbl sub xchg (bad) (bad) jmp inc arpl insb push inc mov arpl jle and hlt xor (bad) sahf dec loope jne into lret and ficoml gs repz addr16 rcrl hlt sahf push dec pop xor test push cmc mov mov inc imul into mov xor pop xchg pushf xchg mov ret call add insb in lods dec js and mov icebp sbb fnsave popf jne jnp enter jo in cmpsl mov je xchg insl sub xchg sbb pop insl (bad) lock or ficoml lahf jno inc mov ss shrl xchg adc dec cmc imul lea (bad) ss in stc iret jbe xchg xchg pop push enter mov push bound inc int es (bad) repz push mov mov (bad) mov pushf femms jmp mov lds xchg rcrl fisttpll lcall mov scas mov lea (bad) cld push ret out jnp adc add sub mov xor popf and cwtl movsl in push adc mov adc lret int cmp (bad) add rcrb dec push pushf jp adc rcl dec xchg jno sbb movsl adc add ret add jnp shlb cmp adc adc mov subb dec and fildl out push push adc clc add add add add js or or loopne enter xor mov (bad) lahf dec gs mov mov inc ja arpl out icebp js fldpi mov (bad) loopne enter jo mov cmpsl and xchg mov scas mov mov fstps sbb sbb bound idivl (bad) lds push mov push clc inc clc push fisubr inc mov lods cmpsb mov xor scas call dec mov loope and jb mov xchg xchg adc jp into jae push sub cwtl mov xor jne popl jmp sbb out dec dec inc ror in pop insb dec mov fstpl pop jnp and int3 (bad) jl (bad) mov je mov out jne cmp jbe jb jp addb add or inc add sbb add add add add enter sbb test and add add xchg cmp nop rcr pop cmp (bad) pop scas aad pop mov and cmpsl lret aad jb adc lahf inc lds leave aaa sub xor dec push adc mov sbb sti cmc mov stos aam out cmp pop pop xor inc push jno mov push mov mov cltd (bad) and les outsb sbb sbbl pop fsubs pusha push stos ficoml push inc xor push sub popa mov gs test nop xor repz aaa push adc pop stc mov iret aaa dec mov add inc mov repz mov xor (bad) fldenv (bad) mov lods fistp sbb mov mov lea xor mov dec adc adc out mov xor fs mov rcrl scas pusha pop inc push push arpl push mov adc movsb cmpl sub ret (bad) mov movsl xor mov or push push xchg push scas lock insl xor sbb mov jo out xor inc jne mov insb ret mov adc nop mov add addr16 loop stos mov outsb scas dec cmp fistl (bad) lock (bad) (bad) shr xor iret ret add arpl xor out bound test push xor cmpsl lcall adc or jmp test int3 leave int3 lret fsubr daa xor sar mov push or jae notb mov lea and pop adc cmp dec jae pop jns bound ror sub lea dec cltd stc imul std (bad) pop add pop xchg pop pop dec xor leave xchg jb pop push into xchg out mov pop fstpt cmpsl sub mov mov sub lock mov pop jge movsb cmp es ljmp add js je aad or lods popf (bad) cmp das xor push pop bound lock les lods jae or syscall inc cmpl jb adc jns ss ret lods cmp mov sub lods insl fstpl (bad) daa sbb rorb xor sub push mov ds inc dec and int3 pop cmc addr16 push das movl mov and sub daa mov and cs pushf sub iret lret fmull sahf cwtl rcr cmp lret xchg pushf pushf mov push jl cmp dec repz insb lods pushf sub (bad) repnz out push rclb repz mov mov push mov scas arpl mov dec pop scas xchg das (bad) or in push lcall push cmpb jns incl push mov incl xchg pop mov mov mov dec addr16 data16 jle cwtl icebp cmpsl fpatan or sbb xchg cmp add (bad) mov jle jg mov lahf cwtl pop or mov cmpsb pop repnz insl xor inc xchg pop mov lret ss sbb mov js or shrl mov push xorb aas aaa out pusha in (bad) mov dec inc pop lea imul mov lcall dec dec dec js js cs inc jne insl ret addl int3 sbb adc cs xor stos adc push out enter add (bad) push sahf dec popa fcoms sbb cmp fidivrl fs subl das jmp jno (bad) fwait dec rorl or int sub lret ss pop sbb mov enter jnp jae ret cmc inc repz ror inc into arpl push jp mov and frstor popf in mov movq push std jle incl lods sahf aas dec bswap lsl rcrl mov jmp (bad) (bad) lock fwait pop adc (bad) mov in cmp cmp dec or je dec mov (bad) cmp (bad) and fwait pop xchg in lahf or mov push jmp jne cmp push mov cwtl frstor leave and mov cli jne jle jmp (bad) (bad) mov imulb cld xor stc sarb xchg aas or ds clc mov lea xor pop dec mov insb pop mov mov mov mov (bad) add and add sysenter pop incl (bad) fdivrs add in xchg mov (bad) mov mov daa push adc cmp lods pop dec inc (bad) adc mov cmp jp pop bswap das sub inc lcall sub mov push push xor aas and fldcw pop push mov mov mov les call out sub xor movl mov sbb xlat and lret addr16 (bad) xor insb lret jo dec test pop sbb and bound xchg jl inc cmpsb mov movsb inc das inc and inc mov mov cmp mov sub sub xor (bad) je or gs inc jae xor sub lods out int iret mov pusha add add or mov add or add adc nop or mov push pusha pop add add mov sbb add stc xor inc icebp rorl imul and (bad) inc out xchg dec push mov daa sub (bad) jl inc sub and mov xchg pop mov sub mov mov or vandnps mov stos scas adc mov mov aad xor incl xchg add lahf aaa push imul push fildl sub pop cmp pop xchg push loopne inc les adc and push and and lods sub lret push test adc mov fwait mov lock fidivrl jns out jge mov fidivr fst jb gs mov xor pop mov inc popa mov stos sarl lds sub mov cmp mov push test mov movsl stos (bad) add in ljmp jmp pop xchg dec cs arpl push mov xor aaa push sub cmp imul mov imul push lcall add dec out xchg aaa jp mull jb pushf pop lret ljmp push pmulhuw mov mov xor in rcll sub fidivl and pop lock aad pop shrb int3 adc imul lea (bad) leave (bad) mov or fwait test jl mov mov mov scas fistpll or mov push sbb sbb (bad) xchg dec mov int jne repz xor scas ret mov lods cmp outsl adc fs add sub mov xchg dec or leave sbb aad loopne pop xor je dec or add mov jbe rclb adc jle xor scas nop or in cltd fdivs je xchg mov push mov inc jne aaa mov pop cld adc inc and data16 xor mov sbb scas sub test stos push sbb jb imul cmpsl and addr16 xor sub adc mov mov bound ja ficom out xchg out lea jnp dec and mov mov addr16 movb xor xchg xor pusha xor inc inc adcl xor mov jae jb stc xchg or jnp mov (bad) mov pop (bad) mov jne xor (bad) ds stos ret jne,pt imul stos cs loopne aaa cld jle aaa movsb mov out cmp mov mov sub mov mov adc inc loope mov stos inc imul dec xor ret xor cmp loopne cwtl hlt mov push fsubrl popf jno inc fdivrl jle inc inc dec stos repnz ffree movsl xchg sbb cmpsb cli imul enter aas jp lret inc push dec fisubr push pop pop mov lret add mov dec mov out push movsb sub (bad) add add add add add bnd cmpsb jp add mov jne lods lea xor std inc dec scas xlat (bad) adc mov arpl mov int3 dec cmp xchg cmp int3 icebp cwtl mov insb test mov ss out (bad) rcrb (bad) icebp mov gs shrl outsb ljmp and adc stos and mov fwait jmp mov mov in jg jbe mov sub int3 inc jl addr16 jb pop adc jb lret cmpsb ss les aam and movsb mov shrl inc sti fisttp (bad) dec loop mov push push dec scas movsb (bad) out or mov push sti (bad) dec push dec test add sub add add add add insl dec inc xor adc fistpll ja sub stos (bad) addr16 fiaddl out add rorb inc mov pop and xchg push pop push imul push fisubl or pop mov xor rolb outsl inc mov mov repnz xchg jmp insl xor xor movsl mov push pop mov mov fmull push fsubs xchg mov mov mov insl outsb int3 ret adc add xor cmp (bad) and mov mov in push push jnp cmp xlat sub mov outsb insl ja,pt repz out jae mov addl mov dec ss inc shl mov cld fisubrl sub divb push xchg imul fistp xor xchg xor adc xlat and add pop xchg mov fnsave adc push and xchg test fist sbb jmp dec add xor push fiadd loopne cwtl add mov aas mov aaa outsb sub xchg dec push lret aaa sbb push mov or ret xor ljmp hlt in cltd arpl test cmp pop loope adc clc push out push and notl pushf add test push xor inc je mov pop scas bound out repz in popf fnop cmpsl sub (bad) out xchg enter mov gs cmp cltd adc push or mov arpl out adc push dec sub gs mov pop test cmp cmp push pop lds pop les data16 out test xchg adc mov mov dec int outsb pop lods push das mov dec divb fnstcw mov outsb add adcl (bad) fmull jle jb xor sbb push movb mov cmc xor js and adc nop pop popf push ret jl cmp ficoml xorl pop adc es adc sbb insb es or xor jbe icebp cmp fnstcw mov imul scas into cmp lods jg fadds xor xchg cmc cli loop je cmp insb add incl or (bad) jmp pop jp movsb loop fbstp xchg cwtl pop xchg sub iret mov bound push mov sbb xor or inc mov ret or pop fidivrl movsl lods push imul out mov and inc mov insl (bad) das dec sbb mull test mov ret sub ss mov mov xchg lret add mov push enter stos insl jge rcr data16 and in pop (bad) fstpl inc lcall fcomps inc lods fwait inc test in pop imul xchg fildll inc push xchg fcmovb int sar or xchg push dec lods push lcall clc xor mov inc inc popa in mov js rdtsc push xchg jmp sar add out outsl hlt xor pop fidivrl mov or imul fstpl mov lods jnp pop (bad) mov mov hlt mov daa fnstsw fiadd inc mov cmpsb ss fistp in xchg dec movsb push cwtl jne into fucom pop (bad) adc iret or mov jmp (bad) mov notb rdtsc jge jg xor incl in incl orb shrl outsb lds lret dec lret sub out jae out jmp aad pop mull mov xchg inc incl and mov in (bad) mov xchg mov jecxz mov dec dec bound test pop xor mov mov stos (bad) and push jge mov dec fnsave xor push lret xchg push xchg fbstp (bad) cltd jae in cmpsb (bad) cmp stc popa sahf mov mov sarl push daa dec mov cwtl mov jl lret popf icebp sqrtps mov popf pop scas lds xchg sbb mov mov pop push sub addr16 and cwtl arpl (bad) je cmp (bad) mov rcll jbe xchg pop push int3 lds mov inc fs jae lahf add jb xor out out in iret mov incl insl and push addb lahf rcrl pop fistpl loopne mov lock std mov decb js or pop mov sarb lea shrl jne xchg mov lret sub sub ret and push lods addr16 cmpsl call scas cli daa call mov jmp paddb mov add das loopne dec js jns incl push lods (bad) fidivrl clc sub aas sub mov imul mov pop sbb (bad) test push and loopne iret sbb inc clc xor inc (bad) je pop int3 shrb xor js and dec jne stc lcall fsubrp insl aad push mov jno (bad) lock lret pop idivb mov add add mov test ret pushf xlat (bad) cltd nop test pop jmp dec (bad) mov sbb dec mov inc jp cwtl idivb jb jb xchg cld mov mov jae in mov adc subl incl jae adc mov fdivrs cmpsl push mov push sbb (bad) mov sub sub bsr xchg mov or add test add add add and mov or adc add inc sub and sub add add mov xor add sbb or and stos add sub mov dec outsb (bad) scas inc mov xchg cmpsl push imul cmp sti icebp dec dec xchg mov idivl dec sarl aam sbb push xchg dec (bad) cwtl and push mov push mov push dec lods bound test dec js dec pusha mov cwtl aad mov pop adc push mov movsl fidivr pop xor jmp sub mov mov adc sub fstl pop outsb mov (bad) pop xchg pop add mov out out (bad) out sti loop lock popa pop push data16 mov jo mov sbb xchg sbb push mov cmpsb gs mov mov cmp das cmp aam mov mov xchg je push sbb movsl fcomp fs scas sub cmp xchg push cltd out jmp sbb mov dec jecxz add inc dec and test scas mov push adc iret pop imul enter mov (bad) outsb xor xor jecxz faddl ljmp dec pop popa xchg push mov xchg mov icebp mov test or lods aam lret fiadd les lret lea dec aad daa pushf sub loop insb mov xor leave inc (bad) or mov jo (bad) ret push jp push test sbb aaa mov add scas lcall jae push out loop stos mov je mov push and jle stos mov dec es or movsl pop lods loopne cmp jno xchg scas insb xchg ret lea aad inc mov shlb aad add cmp add mov out test out call mov xchg jge xlat jle outsb mov dec dec adc pop xchg jno ret pop lods push pop stc jbe hlt mov inc jmp imul jbe and mov sbb jbe lds mov fidivr mov bound sahf lock psrld dec insb aam mov inc cltd xchg ja mov push test mov ja repnz test and sarl adc and mov lahf (bad) mov mov test hlt lret lret inc mov inc ja mov cwtl dec jne push daa popa adc sti test xchg mov in cwtl testb popf lea jae les popa mov loope mov jnp cwtl pop xchg pop push hlt cmpl negl sub lds xor jbe popf xchg cmp aam jge cmp pop mov enter push scas jmp into test out mov jle jp mov loop mov dec push or add rcr mov popf push int3 dec jo imulb test push out jns je lods fildll mov jo stos mov sub test shlb jle mov add add add add jb sub pushf lods xchg addr16 jl in push imul ret imul inc mov in lret in inc mov add fbld dec pop jno jne movsl testl cltd mov sahf lea fstl jae jecxz ret icebp pop repz out mov jg xchg sbbl (bad) pop insl mov adc imul xchg xor mov daa cmp xor imul add add add add add add or add push sub push addl add add mov add lahf mov ucomiss push aam sub (bad) xor in dec fstpl mov sbb (bad) cltd pop aad outsb dec imul jae sub gs mov lahf cmp adc inc and push iret pop mov dec fdivrs in cmpsb out and outsb pop pop pop mov push push pushf lods xchg out sbb hlt inc out mov mov dec and mov in testl push or and add xchg gs and pop mov xchg mov push jb push sbb xchg push pop daa cmpsl aad inc mov inc and xlat sbb inc jae test add cli or mov sarb sahf pop jl push adc loope pop test enter jbe push das jnp sahf rcrb cmp pop into mov test (bad) lret loopne sub xchg ljmp ss cmpsb std flds lcall cld pop cli or jecxz fcoml mov add push fimul hlt inc scas xchg or fstl sub mov push dec shrb dec mov cmp inc lock sbb std ret or out xchg inc out out inc in cmp add dec jl (bad) leave imul push xchg pop push jbe push inc cmp faddl (bad) mov mov push repnz jbe dec dec stc hlt or pusha xchg inc sub cmp movsl cmp sub inc out push jb jecxz imul loopne cmc out sahf mov mov sbb inc mov pop lret mov mov and outsb pop in es jge cmp arpl jg push pop jl cld int3 mov pop out lds mov pusha sub mov sub mov imul clc push pop cld and stc rcr pop mov mov dec outsb mov daa or mov sbb cs jns inc insb or loopne sub push loope push popa mov jle pushf add (bad) and cmp sbb inc push cmc cmpsb pop xor incl add addr16 push mov lea repnz stos mull fidivl push int3 insb pop dec inc outsl lcall add mov inc sbb pop fdivs sbb test fwait inc mov scas mov into mov jae sub pop pop push insl pushf nop cltd xchg jb mov shl pushf mov sub xor iret aas js (bad) adc rcrb hlt pop out je jp cmpsb add loopne sbb movsb mov mov adc dec nop popf jecxz sub movsb or push pushf xchg inc cs outsb out push stos lock mov rcll inc lcall mov xchg pop out test bound out nop test pop add pushf movsb dec mov (bad) testl adc leave lahf mov xlat std push in xor pop js incb xor cmpsl bound fcompl data16 bswap stos mov jnp ss mov xchg loop sub imul dec jnp fdivrs rolb fadd add push ret cmp je inc into mov push lahf xchg mov aas adc mov lret aad pop in imul je cmpl shll and in lods jae gs xchg xchg adc and stc (bad) add dec or test mov test xchg xchg xchg xchg inc xchg push cmp mov adc sahf scas jae mov bswap scas or cmpsl shll jbe push fsubr push cmp and mov (bad) jno sar (bad) cmp sub or inc shrb clc dec fs push stos push les sub xchg mov in mov into mov icebp bound out mov mov out mov mov imul outsl call movsb pop mov pop rcrl sbb fimul jg into dec clc xor mov inc xchg dec daa dec movsl in call inc jl push inc cltd (bad) sub push fdivl rcrb in jae in je out mov add dec out add stos mov jge incl or jmp jns push stc mov pop test cmp stos dec xlat jae cmp ret not sar adc push std adc outsl (bad) lret incb hlt cld ret std adc outsl (bad) lret incb hlt add repnz or lahf lock cmpsl cmp cmp jg push (bad) in cmp pop xchg addb cmc hlt lods xchg adc fwait incl leave not int3 push imul or cld inc (bad) cmp jo sub jp add jns inc mov mov pop shll mov das mov pop xchg cs aad xchg pop incl or scas iret sub in les mov xor mull add xor or nop add add or in insl adc jb clc push add add or add mov sbb xchg lods adc sub out and aam in mov repnz out mov mov dec insb cmp or hlt add mov sub aad (bad) repz aaa cmpsb scas pop stos push sbb ljmp (bad) repnz mov out adc mov sub popf aad (bad) jae jmp test movsb mov and sub or jle cltd mov sub outsb int pop out xlat fwait js rcll jg add imul xchg dec test mov scas add mov aad (bad) jecxz hlt mov mov in je fstpt jp outsl movsl push sub jnp rcrb dec push fisubrl test stos lds push test mov jmp push fimul push sbb (bad) xchg mov mov es cltd xor clc fstpl pop mov int jne adc mov ja adc lock add sbb and rcrb in aam in daa jne les mov inc fldl cli sub cs or aad insl push fwait stos push push mov (bad) mov jg out adc (bad) mov xchg in mov in sbb (bad) stos icebp ja xchg xor dec (bad) push push sub mov pop jo sbb xchg roll mov sarl mov fstpl addb adc pop jmp stos xchg mov add sti enter push pop mov push (bad) inc mov (bad) shrl push aad scas sbb outsb cli mov or sub jbe iret clc nop push lahf mov dec sub jmp jmp mov mov fimul sub orl fst mov dec and sti mov fistp test cmp xlat jno pop (bad) mov loopne adc lret or push mov fwait cwtl mov inc push test mov pop lret rcr sub mov and hlt inc (bad) lcall lret les in lea adc mov jnp mov ja ret xchg loope cmpsb cmp push loopne adc jmp cmpsb dec xchg neg (bad) mov addr16 mov jmp leave jp in cmp dec je outsb les xor cmpsb xor aas hlt enter push xchg mov push xchg mov xchg iret xchg xchg fwait jb xchg mov lcall mov sbb pop loopne cli int ret fildll test ja cmc inc in xchg in inc sub scas pop push enter push fcompl mov rclb mov test sbb mov leave sub jbe fcmovnb push out sbb icebp dec scas xor pop out sbb in lock dec fidiv push das sub in aad mov out dec mov mov add add add jg add add pushf enter add push push pusha add add sub sbb cmpsb and jns lods lods cmp ss out test push lods xor fldln2 xor sbbl dec test inc mov scas mov pushf in mov xchg mov aaa inc cli cltd push jo mov mov adc sbb mov or loop inc outsb iret mov dec daa movb (bad) sarl xor or pop lods inc sub (bad) xor or xor pop and rcrl fwait sub push insl pop pshufw push cmpsb data16 mov sbbl add popf cmpsb aad mov outsb fisubrl xor lds jne xchg test (bad) stos dec xchg mov or pop add movsb push xchg add cld xchg popf rorl cmpsb inc das outsl js fucomi pop cmpsb lcall out pop sub repnz add ja xchg dec add add icebp sahf es mov loopne adc cmpsb sbb int test mov fisub arpl push loop mov stos cmpsb hlt fiadd aaa scas jns fist (bad) mov ljmp in rorl iret add jp inc xor mov adc dec imul mov js inc clc sbb pop cmp cld negb hlt ss jnp inc jae xlat ret js shrl outsl inc imul mov ret fldenv scas jmp mov aad fisttp jns ljmp pop sbb and pop lods pop mov push andl fmuls lcall add mov out stos and jns push (bad) xchg loop popf incl xlat and or mov cmp jns rorb mull and dec mov pop adc jns iret xor adc sub enter fisub or incl cmp cmc xchg (bad) test xlat popf outsl enter jl xchg inc dec xchg dec arpl adc xor inc cmpsl and bound pop out add pop push add faddl movsb inc mov push xchg jnp adc loope imul lods xchg xchg scas inc insb push incl mov rep loop sbb inc cltd ror dec (bad) in imul cmp xlat scas lds jecxz jp divb inc rcrl jne sti adc fcomps leave cmp loopne (bad) sbb das (bad) sarb adc nop pop ret jb lret fiaddl cmp dec mov leave sub add cmp fwait jbe movsl mov cltd shrb das inc mov pop pop inc inc inc (bad) xchg lret das mov sarb jmp cld imul addb pop add cmpsb xchg lods subl push mov std and push xor pushf shll or movl push xchg mov pop in (bad) rclb adc sub lea dec test cli repnz test inc mov addr16 (bad) leave popf mov adc mov movsb jns int add xor pop add ja lods mov mov cmp adc mov sub scas lds or rcll shl jb pop bound in mov sub mov adc gs mov mov mov xchg ret movsb pop mov jg pushf js neg shl (bad) lock lock loopne add ret jnp in jge mov jns push jbe mov inc pop xor test pop fimull cmpsl xchg mov cmp cld fmull rcll cmp incl in cmpsl in lods mov lahf push push lcall (bad) outsb jne in lret out les adc (bad) jbe dec mov jns aad scas add inc std sbb mov add xor sbb mov add jo mov in cmp iret sbb sub dec imul in sbb dec add pop inc xchg es dec out jge and mov pop popf add xchg lock pushf xlat mov movsl mov push push xor out mov hlt add lahf mov bound jnp cwtl scas dec push dec sub cmc xor jg inc push inc dec mov daa pushf popf sub movsl and add inc arpl nop int3 push inc xor inc inc out add add popf stos inc or add add add xchg sub popa les leave (bad) mov mov mov test je mov pushf pop sbb push rcll shrl movsl rorb push icebp mov dec es sti loopne stos stos mov push adc movsl imul jecxz mov hlt pop lcall add mov adc xor pop jnp adc mov ljmp mov xchg pop sub test push adcl lods pop xchg dec fisttp into or dec sub jne mov popf data16 pop je cs mov sub inc mov mov mov mov push push adc sub mov adc pushf push inc jge scas hlt aad imul lds ret mov sbb repz pusha cwtl jne aad das cmp jne lods xchg or cmp lods jp push xchg aaa jne sarb test dec das jnp sub pop leave sarl mov pop ljmp mov cmp add sub imul ffree push push loop cltd adc push sub dec (bad) mov idivl fnsave cmp add daa stos test xor mov aas mov faddp adc loop lods (bad) adc mov lcall xchg stos xchg adc and iret adc xchg sbb pop mov stos (bad) (bad) xchg stos icebp (bad) aad sub out aad loop (bad) out lcall xchg and inc dec aad pop icebp jne and adc adc mov (bad) sbb pop incl sbb stc mov (bad) jns aad je dec (bad) rorl xor and dec repnz cli rcrb add mov in loopne cwtl cld out sbbl dec in sbb icebp (bad) mov (bad) test mov pushf dec leave js addb inc sub das and pop sub pop jno dec fldt daa sub loop out add test fildll sahf xchg adc mov add test stc jbe je fidivr rorl mov int in bound rolb lcall mov aad mov stos fistp push adc shrb mov fsubp dec out jmp push xor jp insb int3 into or mov or or mov and into movsl push stos dec mov scas ss outsb mov add add add mov add add and add sbb pusha add mov js popa jge (bad) cltd mov movsl xor sti jecxz and push cmp lods push cwtl out add loope sti les pop outsb inc xor jae xlat push dec sarb push adc (bad) jl cmp pop icebp aad loop pop std out js sub push pop test sti mov and mov bnd movsb (bad) imul dec and mov jno xchg or adc or scas dec sti jecxz sbb cmpsb jle lret adc movsb les push and outsl sub xchg jno and je into push lods push push stos mov ss xor jb mov xor (bad) popf roll jb add jl jmp stos cld movsl mov sbb imull (bad) push cmp sbb sbbl stos cltd adc insb ret ja sti cmpsb dec jmp scas hlt add and or fdivrl ja lds rclb xchg imul and (bad) lods mov add lods fimul dec mov icebp dec clc (bad) in fst fidiv std ret in push xlat clc cli add enter xor mov and push daa inc scas cli adcl mov cmovp dec cmp test jo adc sub test sbb repnz pop repnz adc lcall mov push dec inc cmpsl ds fcmovbe xor sub scas rorb fbstp fimul enter pop dec iret mov xor (bad) (bad) lahf rorl test mov jg test push mov xor cld xor jb adc fmuls add (bad) imul into and stos mov push call pop dec cmc in add popl sub push fxch pop adc enter adc mov shr add lods sbbl je sub xchg add mov add jns mov xchg push and cmp cmp mov push mov lahf push je test and cmp clc adc popa into div loope in pop and stos adc (bad) pop shll mov xchg mov cmp pop jne out aas divb jle jnp add mov fimull add pop sbb cld cs scas (bad) mull hlt inc andl gs imul push xor insl and sahf gs icebp cmpsl xor add xor pop mov pop fldt (bad) mov xor jns shlb pop into mov push arpl insb sub cmpsb sbb clc data16 xor in ret jg int3 lahf cmp imul sub cs ja in out (bad) hlt mov jle dec mov mov add in and jecxz or mov scas cmp iret (bad) jmp int fstpt push call daa mov adc mov cmc mov lret adc je jp into dec rorb push xchg mov (bad) sbb ficomp das loopne cmp push pop popf fs pusha jnp call movsb or add xchg lahf rcr stos add jns call (bad) pop in lods iret lock les mov mov clc cmp xor adc or add daa call mov jmp scas xchg in inc jmp jae lock repnz or lahf lock cmpsl cmp cmp das incl (bad) insl (bad) fidivrl clc sub aas and dec mov xchg mov pop into dec dec int3 ret les lea mov mov push faddl inc sub loop jnp xor fsubrp lods arpl fisubrl jnp shl js (bad) add mov add mov cmp imul out out out fstl cltd loop and pop pop pusha (bad) mov dec or pop ds and int or insl dec add out xchg sub fdiv cmp out outsl inc mov outsl dec inc mov std insb neg nop pop mov lret cmp pushf jp xchg xchg xchg lea push and lea fstl out negl jle imul jmp xlat cwtl push out out iret cmp (bad) arpl (bad) pop addr16 pusha jo add add adc in xor sub int3 add fwait adc push (bad) in mov cld nop sbb pop jp mov insb movsl cmp and aaa or push jmp cmp fimul mov xor cwtl arpl outsb ljmp (bad) mov pop push jne jnp idivl dec das adc adc dec cmp fucom adc loope jne pop es xrelease pop imul stc and stos mov xor and test dec icebp aad (bad) clc movsl xchg sbb pop mov incl sub (bad) insl (bad) xor mov test sbb loopne jmp adc mov pop inc push pop push cs xchg fstl cmp mov mov jp mov push jae scas sub adc outsb neg hlt mov lods sub jb mov jne cmp ja shlb arpl cs lods push fwait mov dec xchg jo shr adc add mov cwtl inc movsl cmp mov jns cmp xchg lret test xchg loopne xchg dec out push sarl lock xchg pop mov (bad) (bad) out adc sub cmp outsb loopne mov mov xlat lret ficom inc dec jmp idivb inc inc dec mov lcall adc (bad) loope sub mov lock ret out push mov and addr16 lods push push test jl xor push or mov hlt insl cmp inc xor mov pop (bad) xor sahf out mov (bad) pop addr16 push ljmp mov bound add addl mov jnp (bad) xor fdivrs adc stos pop jmp sahf or pushf inc and push jb mov xchg fsubrl inc jmp lods xor mov lcall lcall aad (bad) jbe push (bad) or dec pop cmp add aad testl stos sbbl jbe rcrl pop divl scas ret cs cwtl pop sub dec and cs mov sub dec ds sub mov stos (bad) xor sub add int3 lds mov inc jecxz or repnz mov mov decb fiadd lock call movsl adc iret popf rcll mov push aad jns mov repz jle push dec fadd push jno jl xchg mov inc jmp jb sub cwtl scas in js jmp sbb mov stos adc fwait lock lods push sahf lods pop inc sbb sbb inc mov adc add adc push rolb add add cwtl push mov int3 mov imul pop add jecxz or xchg push push push stos push fldl add sbb cmpsb pop mov dec ret jge rcrl lret push xchg in mov ds xorl scas add adc pop movsl pop jae and fisttpl in popf mov dec xchg outsb and btc inc cs mov repnz dec inc mov sete or dec dec and dec pusha dec shrl jno xchg push cmpsl adc pop push mov or mov pop adc cmp add notw inc jo sbb enter cmp fs mov mov or nopl mov sub dec xchg movsb addr16 xchg xor pop outsl pop test stos jae movsb add enter xor sbb hlt pop mov adc lahf movsb or adc jb cmp sub pushf mov jnp scas repz ljmp mov dec loope popa sahf cmp push stos dec out jne xor jmp mov ds loope jp mov test xchg dec push or int scas pop movsb mov outsb mov push mov aad mov xor and insb cmp pop or fs dec mov outsb inc jg jbe cwtl mov xor jbe sub xchg in sub imul push sti pop jns dec mov out aad int xchg xchg subl jp xchg mov int3 sahf mov leave lea outsb iret sbbl xor sub mov sbb fidivr ret imul mov int3 jbe scas fs sub fist psubsw insb xchg ss xchg fs int3 sub pushf out sbb dec jae jbe push mov sub push xchg scas (bad) (bad) fcomp xor imul scas dec (bad) sub stos lahf sbb push pop pop test push lods scas daa addr16 jecxz xchg dec shll (bad) mov jo stos jno push fcomps xchg jmp cmp sub fiadd std add adc adc xor cmpsl add fldt sub add adc in mov loope mov addr16 fnstenv mov pop jmp rcrl mov jmp pop aam sbb jecxz cmp in dec sbb int3 mov jg inc out in lds xor es aaa inc lods clc jbe loopne gs movl fidivr cmp rclb nop pop mov dec cmp sub cmpsb push xor sbb push dec sti or into in and sbb addr16 int3 sub pusha ficoml xchg fs movsb pop push mov call cmpb xchg mov cmp lods stc js adc mov outsl inc mov dec push mov and mov call les outsl vpaddd rcrl in push out cld daa push sbb push cmp notb pop cmpsl xor dec inc xchg stc push xchg xchg ljmp je frstor cmp repz mov push std bound and jmp sarl outsb add jnp pop xchg push popa inc icebp xchg sub xor mov lahf xchg mov int3 sarb xchg pop (bad) xor dec (bad) mov inc mov leave lds mov addr16 aaa loope lret fisubrl sub incl loop incl lock stc (bad) js inc push and pop jae pop jmp sar sub add jbe test rclb adc movsl out fdivrl cmp pop data16 decb inc hlt lret inc mov pop (bad) cli pop out hlt push mov mov aad out pusha jbe fimull test push scas fnop outsb mov push sbb je cld sub rorb pop pop hlt add popf push sbb sub imul ljmp xor inc rclb pop fstps sub dec gs xor stos ja xchg and bound icebp sbb shrl int cli inc in repnz out out jle jns outsb popf sarl xchg or jmp mov repz push xor int test xchg ds fwait andl sets int mov sahf or push in xchg cmp push rcrl sbb and sub or jmp insl jne lahf daa cmc cmp outsl fsubrs aas cmc mov test dec add lahf push into xchg (bad) xchg incl pop xor call cmc mov test dec add invd stos ss in dec xor fdivs sar cmp sub (bad) mov pop cmpsl ds (bad) fnstenv loope add xchg mov fdivs ret iret mov adc out or icebp pop inc xchg out jg in dec clc mov inc js jle cli xor sar xor push shll lock bound jae fisubl add je xchg pop push rorb daa sbb pop fwait mov lock pop add add rclb or and adc or negl dec inc mov xor int mov inc and lret outsb dec sub fldcw enter lcall fadds js jb and call adc nop sbb sbb or jnp stc shll dec pop push test xor cmp push icebp and xor jecxz add and data16 xchg popf ficoml or lret mov inc lds pushf push adc scas inc iret or jne mov mov and ficom inc xor cmp mov data16 imul dec mov lods sbb leave cmp and arpl dec data16 mov mov loopne nop test (bad) pop nop adc cmpsb sbb ja test sbb dec and mov imul (bad) ret fistpll mov imul (bad) (bad) mov cmp jne pop xchg (bad) or rcrb fmull jg (bad) stc stos fs xlat mov dec push (bad) xor xchg pop push int aad mov xchg inc (bad) out stos and dec mov fidivl push lcall outsb or push xchg enter addb (bad) addl xor push mov jo sub jns outsl addr16 ja repz test mov jmp mov les daa pop stos mov push push sub sub jne ja cs pop repz jbe sbb mov jnp stc push fwait mov (bad) lret imul (bad) sub aaa (bad) mov stos aad xchg stos aad pop nop or add pop and mov xchg fs cmp xor mov sub inc mov jl fstpl push imul cwtl daa mov cmc test push inc stos notb test stos stc add stos test in add cmp mov cltd addr16 sbb rcll adc mov mov cld bound cmp inc fstp dec cmp push mov pop jb shll jge jl call push cwtl out lods fiaddl adc push jne mov adc add (bad) in mov sub cltd or or in loop mov es (bad) loop mov or in movsb cld add iret int fildl pop mov jb and in and sub in nop int3 push cmp adc mov push mov aaa add and test addr16 ja mov jb cmp fnsave jecxz fwait lcall mov push orb ja fst or mov movl stos bound mov aas jle mov movsl push (bad) fnstsw push out pop mov and sarb add sub inc adc add mov add add aaa addb add add add add dec (bad) cbtw push jno mov bound lods push xchg mov (bad) repnz or push mov (bad) and sbb inc xor andl sub add in sub sbb cmpsl outsb leave divl movsl jns imul test inc lahf mov cmpsl xor (bad) xchg dec lods inc push scas dec push fisub fdivrp mov mov rcrl stc add loop sub mov xchg adc enter sub test mov stos ljmp add outsb and mov add test aam mov jbe mov (bad) movb fwait jmp loop xchg or jmp sub push test test jp xchg loop pop loop xchg data16 insb stos push aas mov cmpsl mov (bad) mov gs inc (bad) jb cmpsb sbb mov xchg (bad) and pushf xchg add jge sbb dec xchg jge ficompl mov add movb mov call sti ljmp push and mov cmpsl xchg fidivl xor fwait mov xchg xchg cmpsl pop jecxz (bad) insb movsb outsb cmp cs fs out cs and mov test je mov or mull (bad) lea inc cmc jae out xor cwtl xlat jle call ja dec scas inc xor sub xlat xor mov (bad) call incl sub shrb imul movb sub mov faddl xchg pushf lds (bad) (bad) mov jns xchg pop lea enter in imul push (bad) popf dec lret cmpsl add incl sbb pop and dec call mov imull gs cli cli popa push and das cmp lea sub xor mov push pop loopne inc push and arpl lea scas arpl add shlb js add fcomip mov mov mov cmpb cmp int3 in int3 rcrb mov scas jmp sbb push jbe dec sub enter push (bad) dec imul cld push fs adc xchg dec lret or idivb fwait jnp sarb inc push js pop jp aas aas cltd incl pop incl xchg insb clc hlt (bad) jl jp mov mov pop (bad) rorl imul add movl push shll imul test push popf xorb mov pop nop incl mov jp bnd rorb adc gs jp addr16 sub repnz push ljmp dec incl icebp pop pop lock xor xor jmp stc inc addr16 les jnp jmp clc mov jp add jo dec (bad) lock xchg imul roll bound imulb daa faddl in aad mov sbb stos sub xlat aaa movsb pop mov negb add xchg push insl or add incl xchg pop mov insb pop (bad) mov mov mov mov mov popf sahf stc pop test rcll dec lds sub cmp pop inc cmp (bad) add rorl mov popf jp popf (bad) jo xor dec inc mov cld repnz clc mov mov cmp lcall and jmp (bad) mov call bnd repz push gs ja repnz adc std jle mov icebp jle pop mov leave lds int xchg cmpsb push push jmp jg loop mov sub icebp jle sbb jp (bad) mov lret incl mov je adcl jo push jecxz addr16 inc push pop mov lods push stos jns sbb mov int imul int cmc jp jno jns mov ljmp int3 pop scas jl les addr16 cmc mov jno push jbe xchg xchg push data16 add dec dec inc test hlt mov lahf popf lds data16 addr16 cmpsb das lret negl lods out xlat pushf jmp jmp psrld xor adc in mov lods push xor outsl mov mov je ror sbb clc pop iret ficoml fildll mov mov and imul ja pop ljmp fiadd aaa sbb dec dec inc pop icebp arpl js sahf out fwait loop lret in push pop mov adc adc push nop add add dec adc add add mov mov mov or (bad) mov add add mov cmp adcb jo and push push dec int mov out cmp adc and (bad) cmp adc rorb es inc shrl cmp push mov pop pop loop test push pop or icebp dec and push cwtl cmpsl dec push test ss ja jnp ss mov pushf int3 dec dec outsb outsl xchg out rorl test xor jae fist cmp inc adc stos push cmp test imul lea mov xor les mov mov fdivrl or dec aaa gs (bad) push push imul inc dec mov jbe mov inc loope das jbe jne mov adc jle icebp add jecxz fldenv ljmp dec push aad jno imul int3 enter movsl fisubrl js sub dec sub and ja pop xor (bad) aaa rol mov dec cmpsl push xchg push xchg fnstsw loope lods sub call cmpsb out inc sub dec shrb xor into xchg inc faddl push leave (bad) push pop jbe enter dec movsb call out je movsb roll push pop jno mov (bad) cs cmpsb sub lret mov rclb pop mov mov inc push mov clc rclb mov jo jb xor pop ret ljmp lds fucom or xchg mov xchg jae lock inc movsl cmp jl sub es outsb sti loopne mov add lds loopne fldl movsl pop xchg ret jb push (bad) mov aas xor mov mov scas push ja mov rcrb les mov test add push push mov popf push add ret jno pop clc and sub outsl lds inc push adcb mov jns mov and js inc mov icebp int3 cs leave inc daa iret into add mov sahf lahf cmp div stc mov mov pop xchg mov cmp stos (bad) xor mov inc mov aad mov mov sbb lods imul stos push jnp cmpsb mov rcr add lret cmp js and adc xor out movsl jmp fstpl adc (bad) push add mov mov int ss fidivrl push icebp fisubrl lcall push mov jp es scas sbb mov push ja mov lahf fidivr inc mov add or add push add push inc add dec add movsb mov sbb shlb xchg stos test xchg mov dec scas and inc xor mov mov add mov shll sub daa push adc (bad) aas addr16 push cs nop dec jo push into xchg rolb cmpsl and dec fsub movsl push test sbb out sub flds xlat mov in negb jne out sbb fimull mov xor pop push push in sub imul ficoml lret mov jb push mov mov fisubl test add cwtl xchg repnz push cmpsl add imul sbb or cltd rcl add imul xor dec mov cmpsl push mov data16 repz popf jge loop in cmp dec test add sub inc dec (bad) xor setbe xchg pop push (bad) cltd ja fidivr mov cs pusha push cmp mov mov xchg xor cs ret dec (bad) (bad) mov add jnp das mov cli push int jns mov test les les loop jo xchg test test dec mov lock cs pop mov hlt subl mov ljmp sahf popf pop rolb jle in and sahf es gs inc ret or mov cltd scas mov push fdivl and jbe addr16 push pop inc movsl jge dec aad jnp addr16 xchg negb arpl jo jnp and roll and add outsl xor jo scas or cmpsl adc (bad) movsb sub mov push test xor add sub stc jae jae xchg push sub int sbb mov out fmull ret add test shrl mov (bad) inc push lods ficom xor aas cmp cwtl fdivrp add and std ds cs loope mov add (bad) scas inc cli xchg ja and pop fcmovnb fisubrl pop in rorb adc iret dec jl stos ljmp int mov sub jo out orl adc mov iret inc xchg fs sahf adcl push add xlat dec aad adc xchg mov cmpsb xor mov imul xor lods pusha jns fisubl icebp adc push jg loop in (bad) and mov int mov xor xchg dec mov mov (bad) jno dec jnp pusha int3 fsts xchg sub fs jecxz fwait mov inc dec repz xchg sbb xor xchg pop cmp push mov shrl insb les push push stc add mov push push mov and and inc add adc mov push cmp call out push aad jne jmp sbb std xlat inc shrb cwtl xchg add add add loopne addb dec lock jmp out loop inc outsb adc add pop nop push fs clc cli pop ds cwtl scas mul repz push rcll fldpi push div add xchg test pop clc lds push scas inc and push ljmp pop je push push nop roll cmp cltd cmp jno in pop cmp test (bad) fdiv lea jnp rolb lret lods jnp movb mov inc repnz outsl sub mov lcall jg (bad) ds sub loopne jae jge gs out pusha cmp jg int jmp in nop (bad) ja rclb sub pop (bad) arpl pop aam shufps pop fildl inc aam push mov xchg in fnstsw mov push adc mov popf lahf cmp mov inc xlat imul inc movsl sub loopne dec (bad) push mov stc jae push mov insl pop pop dec adc sub and jno cmp les mov repz mov sub test sub es popa movsl in push test out xchg pop and cmp lds je cmpsb or lock mov (bad) popa xchg shll mov hlt add cmp dec pop cmpsb jl mov lds adc ljmp es sarl mov rorl push cmp adc jae loopne ret adc jnp pop sub push xchg push add ret or inc pop scas das mov out clc int roll dec inc push add jecxz rorb lea leave inc movsl cmp cmp test jl or fdivrs sub sahf (bad) fwait mov adc loop dec mov push mov sub push sbb pop push mov inc leave dec or pop and fstl push movaps clc je push imul in rolb adc outsb mov mov fisttp mov dec mov add cmp inc loope jmp mov out orl arpl stos out jnp sbb and stos xchg dec pop mov push stos in mov ljmp push movsl xchg popf sub lcall sbb fisubr dec test lahf fs lods adc mov dec sti inc mov xchg lds insb fiadd mov pop mov mov nop in push inc push mov movsl sbb jbe fs rcll icebp dec inc cmpsb sbb push inc stc rolb add mov sbb cmp or enter add add jbe mov add add add add adc and sub mov sbb sub mov dec aas mov push sub movb add test lret fadds fiaddl xor popf push sti cmp jnp mov mov cmc dec popf scas xchg mov fdivrl loope pop loop fucomp mov xor rcl cld arpl dec push push push popf (bad) dec push test xor mov das in mov dec mov xlat sub js jnp fistp lods ficom pop es loopne dec xor xchg mov mov push inc adc jp in add mov cli (bad) xchg dec sub adc pop sbb int3 int3 fcomi pop pop fstpl sbb inc jne repnz fwait stos js and stos lahf and xchg mov mov pop pop sub pop xchg movsl jle int3 leave ficompl jg jne cmp imul stos adc stos cwtl sbb outsb inc cltd test sub sub cmp jno add das mov jns loop dec mov mov arpl loop jp in pop dec xchg inc mov push sahf ret shrb xchg mov pop shrl xchg aaa cmpb out xor and lret syscall stos xchg push cmpsb sbb jmp outsl push xor mov sub mov pop test add scas in das or loope or pop adc jbe fidiv fisubr xchg lods lahf ds jle pop out movl mov sbb dec js mov or push add inc cmpsl xchg int mov imul xchg jge gs test mov adc ljmp add in and sub test idiv add fs clc or subb dec mov loop addr16 in aam xor loope mov push in add dec jae les mov push cmp lea iret (bad) fidivrl mov call mov pusha gs sub push or mov scas pop (bad) jbe test push add jbe inc rorl mov inc mov xchg inc test push mov in add arpl cmc fsubrl fmuls movsl sub movsl jecxz pop or rorb cltd mov out pop fsubrp movl pop cmp fdiv adc lea divb lret jb (bad) push cmp daa fistp jns push out push mov insb lods push test xor inc pop mov inc push mov push cltd cmpsb cmp sub dec mov mov sub push outsb into push aad cmp sahf push rclb stos stos sahf loope clc pop xchg inc xor jbe ja xor (bad) scas mov lahf gs (bad) add ret add dec leave lods dec jbe dec inc popa and lods aam out repz rcrl or mov in pop aas jge dec ss dec inc fisubr and pop stc push mov add add inc jbe mov pop stc mov nop xchg adc lds pusha inc mov xor push inc and sub stos std pop mov lret inc scas pop mov push leave jae in outsb mov and cmp xchg ds repnz xchg cmpsb pop push or adc ljmp rcr xchg xor call in sbb rclb mov cmp test pop or or cmp cli daa and mov cmpsb (bad) inc jo nop in and cmp and xorb mov mov xchg inc inc dec mov push cs dec rorb in std sarb cmp push adc jns inc xchg (bad) ret jb xor push enter (bad) and xlat or stc or ljmp out mov dec repnz xchg mov cmpsb or inc loopne mov xchg jnp addr16 push shrl punpckhbw mov push outsl jnp sub movsl js das inc mov or adc adc call mov shll jmp mov xor xchg pop jmp (bad) fisubl pop jne stos mov push out pushf dec xor cwtl mov clc fistpll mov das xor and xchg sub rolb dec cs add cwtl cmp out cltd adc mov lret rcrb xor rorl je mov scas rolb clc dec roll push cmp rol add cmp bound rcrb icebp cpuid (bad) aaa cs test test add mov cwtl and mov daa adc gs stos mov sub cmp out xlat sub mov sahf mov inc lret jp (bad) cmp cs addr16 add cmp fdivl fcompl jne (bad) mov mov cmp es dec adc sbb dec or lods dec jbe mov dec push loopne ja mov adc repnz sub lret orl push loop adc and mov ret jb jl push adc adc pop out in popa mov jmp leave jp ss inc pop jne and mov stos mov inc (bad) repz aad je outsl jecxz mov jo jns push adc cs ret in in cmc jne mov ficom cmp mov outsb scas jnp mov stos shr add hlt lret mov pop mov fidivr push mov sub subb pop dec pop cmpsb sbb lahf mov pop lds mov add add push mov sbb add add outsl mov add add or add adc sub sub add add imul cmc ret shlb ret mov add pop adc adc add add add add sbb scas mov sbb inc int adc pushf dec push aaa fcomps jnp nop test xor lea xor xchg xchg dec out aad dec xchg jb xor fsubl adc imul mov jno and (bad) fwait shll add sti movsl dec (bad) rcrb jo cs xchg push (bad) jno das cmp (bad) scas adc mov dec imul sub je fsubrs mov test mov stos stos xlat or adc cmp fisubr sub pop mov jmp cltd xchg (bad) mov xchg mov pop out add mov xor jl or cld fsub xor imul jecxz leave jae pop cmp notl push jecxz adc mov fcmovnbe fdivl scas sbb fisubl pop icebp in push jp (bad) pop pop js rcll xchg movsl imul mov and lret sbb repnz test mov mov leave add scas (bad) mov test nop mov test sbb and inc dec call xor int3 aaa and (bad) stc jp mov jnp testb enter inc inc pop sbb gs sarb xchg andb popa out mov divb mov aam mov add pop hlt testl push jbe scas (bad) cs jo push lahf xor mov stos sarl inc adc jbe mov in in (bad) shll nop mov mov stos adc mov cltd aad adcl dec mov jecxz mov jb fs mov adc lea cwtl insb dec and and xchg add das mov cli movsl cltd sub cld and cmpsl add movsl xchg xor cltd pcmpgtw out ficomp (bad) jo push pop jne fcomps hlt sbb addr16 pop sbb sub push data16 cltd notl push pushf les cwtl mov stos test outsb mov lods mov and xor mov idivl nop mov jl hlt iret push jmp inc ret int3 inc mov dec outsb pop pop mov sahf scas je xchg mov push push outsb scas jns dec push and loopne lds insl push fidivr stc mov sub setg cmpsl xchg add mov (bad) mov mov clc je cmpsb and adc imul add or inc aaa sbb dec ret mov dec add push leave push rcll fs mov add pushf test dec jge push push inc lret or jecxz pop pop push adc int jmp sahf repz xchg xchg stos stc jle or push icebp mov push xchg ret out pop push sub fnstcw pop or or sbb cmp dec and push or pop and and addr16 or sub loopne outsl and mov adc out pop adc add inc jp and ljmp sub add (bad) dec insl mov mov lahf jp add mov inc inc and xchg imul sub push rclb roll loop adc aaa lret (bad) (bad) mov popf adc bound test lret pop jo sti (bad) leave pusha mov pop sarl leave mov stos cmpsb sub lcall mov adc push mov cli or xor sub nop pop stos test jno fisubl push stos pop jl sub sub dec lcall add mov fldz xor adc enter xchg jbe call test cwtl bound out add xor cmp lods jnp push sub (bad) dec mov outsb xlat xor pop fistl adc rolb sub icebp dec ffreep subl stc rolb outsl cmpsb jge inc inc loop mov cmp subl scas jg pushf push mov adc mov jl testl (bad) and inc in and mov cltd sub shrb aaa repz popf repz mov daa jp ja stos arpl mov dec adc jg add loope sub scas js jnp pop fisttpl test dec mov jp adc add mov test cmp mov xor jl popf leave fsts js pop jecxz xlat mov jmp out add add test int3 sub mov xchg (bad) mov jb lods adc imul cwtl stc dec rcll jo jmp cmp push jmp stos mov jle in xor dec push mov outsb test lret out mov in into push cld pusha std sahf sub aad mov push push xchg pop outsb push je mov fldcw (bad) loopne pop imulb lret mov out mov (bad) lock out dec push pop fstps sub movsl jmp mov push std pop push xor outsb orl push push mov test mov pushf adc add add repnz add jg pavgw add mov cltd and dec add pop data16 cmpsb push lea add xchg mov add and add add sti test cltd xchg dec test faddp and sub fildl sbb leave mov fs jecxz adc adc cli dec iret jecxz in xor rolb and and add add add jbe push cmp add mov pop (bad) and push mov xchg push mov ljmp (bad) daa push push jmp jecxz dec push push mov (bad) mov movsl jge nop pop pop or cmpsb in mov sub add movsb jecxz dec aad mov sbb mov into push xor sub out inc scas addr16 int3 mov mov mov pop sbb dec icebp xor sub (bad) cli scas xchg jno mov add fisttpl dec lahf inc (bad) int xor cmpsl adc sub add jl or es out (bad) cs out push es in bound sbb sbb xor add inc inc pop adc inc xor or or mov ljmp or or push and xor enter inc mov and xchg dec xchg xor sbb cmpsb push jo jp cld add mov and add cmp xchg dec repnz dec out jle addr16 (bad) outsb jb pop push mov test xor ja movb jb imul stc fnsave subb stos ret imul push jg xor jno lods shlb push test mov sbb enter les inc jmp or add xchg mov faddl fldcw fsubrs mov dec clc loopne sub mov inc ret out xor jmp rcrl lock push outsb cmpsb ljmp cmp fidivl push cmp popa cld jmp add sarl and sarb ja mov sub adc out xor push push push cmpsl xchg or test loop add push jb inc subb clc mov test (bad) pop or fcompl pop or sub push fisttpll jo hlt dec xor iret setg leave xor mov outsb (bad) scas adc push ss jb outsb cmpsb pop mov es icebp les test icebp in mov push test not mov out inc fldpi sbb fstl xor cwtl fsubrl mov in scas (bad) cmp mov xchg push mov pop and inc mov ljmp pop (bad) movsl in out pop push leave xor pushf xchg pushf (bad) mov rcrb cld push xor cmp xor mov lahf dec and shrb mov stc fidivr jns adc out lds mov pop fistpl lea fiadd out mov les test imul xchg xchg test sbb mov cltd addl cltd dec lock ja out in fiaddl cmp push push xor fisubl xchg lods in mov mov sbb mov xor mov test xchg xor int3 mov ja mov mov cmpsb in es loope test push cld mov dec cmp cmpsb or xor sbb in cltd andl cltd nop lods jo dec push xchg inc stos push cli lds jb and pop xor pushf mov jecxz scas (bad) ljmp in or and xchg not push mov inc lret stos push adc push (bad) insl lds adc pusha xor add mov mull inc inc dec sbb int out xchg cmp jp sahf mov mov ret pop adc cmc out test sub pop out push adc and mov lahf xchg mov mov mov out cmpsl push aad sbb and stos loopne scas or push mov in xchg cltd lock lret sbb xchg cmp test push or mov jp pop mov mov add push xchg insl sbb push fistl pusha mov ds push jno adc shrl fstl and inc stos out mov cmc pop sub test repz ljmp sub mov cmpsl push out sbb out cmc out popa ja in (bad) mov aaa adc dec rcll in push inc fucomp xchg mov push test xchg fiadd enter mov adc rclb and mov cltd lcall test lret rorl ret jae mov stos mov std mov push sbb stos jmp mov cmp imulb jns fstl repz sbb pop loopne and loope add outsb pop lock (bad) stos sub loope (bad) testb addr16 xchg jp dec imul lods cmp (bad) jmp fistp xlat adc sar sub mov ljmp adc ja scas (bad) fcoml imul sti stos lods aad jbe inc rcll mov sahf shll mov push add cmp pop test dec inc add pop sub mov bound sub sub add add push addl add add add push inc xor jae mov incl pop lcall push mov ret test test fs frndint xchg and cmp jmp adc leave ret loope aad js sti test test daa mov fisubrl adc stos sbb add add sti movsb addb pusha or and and hlt lea or scas int stc inc sub xor int3 inc jp mov and inc sti or out ljmp cmpsb push inc in out dec fnsave inc fwait stos aad mov aaa cld std push sub outsb (bad) push adc nop loop pop sub inc jbe imul in mov or fstpl in jle leave sub mov sbb mov stos sahf pop or mov in xor jne outsb add movsl push mov xchg sbb clc or xchg mov repz outsb sbb pop jnp pop dec sar (bad) dec ja xor scas loop cwtl jns mov cltd sub pop inc and add fadds aas out js aam push in push int3 jbe sbb ret stos jbe mov or adc pop xchg dec jo out dec inc add ret add stos push outsb ja add adc call ljmp cmp push imul push popf mov xor aad out inc les xchg mov dec (bad) jae das or fdivrl je adc jb jo push or jbe or mov inc jbe fsubl push or cmpsb cmp xor test jne sbb sbb mov call test dec mov test fcoms adc xor mov inc gs mov hlt sbb lock mov repz mov fwait lock pop cmp repz or ljmp push pop mov push sub les adc xor fnsave sbb inc aam pop fwait xor sbb in add dec xchg sti daa sbb xchg call add or loop and addr16 (bad) mov in add out hlt pop mov (bad) pop push int jno ja mov bound jb xlat icebp xor int xor jecxz in fs push leave xchg je in (bad) mov mov sub xchg lock add mov nop orl pop mov sub mov popa and shl push and lds xor mov mov or cmp sarl imul imul xor and data16 mov and cmp arpl imul lret pop xchg xchg out aaa popa rolb out adc cwtl ficomp xchg push jo or bound jle ljmp mov hlt addb push inc push push test fs xchg add or arpl cs adc andb xchg aad icebp ss sbb lret leave jno sbb or clc add sbb cmp pop push cmp lock cmp pop mov push jle,pt mov test jge jge rorl jno inc mov loop dec push in jmp dec fwait jg fcmovu (bad) jne dec sbb push test cmp mov leave int jle dec test imul jne dec outsb bound jge mov fbstp sub sub dec lcall mov cli imul pop fstpt xor cmp jbe pop les xlat or rcll mov dec and imul xchg xor roll stos lock int3 mov xchg push mov loope stos pop jns aaa lcall cmpsb sub and sub cmpsb cli ficomp incl mov cli es ja and or sub jmp stc jecxz mov movsl sub scas rclb inc adc popa dec out sbb inc lods xor leave lahf mov xchg mov pop mov loope andb sbb jb push push inc sbb enter aad in repz xchg push xor movsl push push jo aad cmpsl pop push jmp adc ss sbb pop icebp leave cmp (bad) mov push dec stos dec in call adc xchg (bad) iret mov and fidiv inc xchg rorl mov imul pop and adc dec mov (bad) xor scas ja fwait icebp mov mov adc aam lods inc insl push aad fnstsw icebp neg sbb stos xchg lret cmpsb les push movsl shr cwtl sbb (bad) dec lret rol out scas mov push sub cmp incl cmp push xor cs sbb loopne add dec lods push xor xrelease mov in xchg jl addl xor cmp add sti cmp cmp mov add xor std sahf shl mov (bad) fldln2 push jnp fiaddl xor repz mov fldln2 push jnp fiaddl xor repz mov fldln2 push jnp fiaddl xor repz mov fldln2 push jnp fiaddl xor repz mov fldln2 push jnp fiaddl xor repz mov fldln2 push jg fiaddl xor repz mov fldln2 push jnp fiaddl xor repz sbbl popa out cmp inc data16 xchg fldln2 add iret push rol jbe inc sahf in testb addr16 out iret push std sahf shl sti cmp iret idivb lahf in testb js mov (bad) cmp jmp outsl mov xor xorb popa icebp sahf iret push add ficompl add push (bad) xor jae sahf rcrb add out cmp inc data16 push jg ficompl addr16 jp cwtl cmp iret push sbb xlat out cmp inc insb add in testb or sbb add push jne call addr16 (bad) jnp mov mov ja std add idivb imul (bad) and add js xor ds (bad) mov call xchg mov pop daa sti mov hlt iret xchg add stos pop mov adc xlat hlt add ja std add or addr16 dec push idivb lahf in testb jae sahf shl sti cmp iret jbe inc sahf in testb in push jnp fiaddl cmp xchg sbb repz sahf shl sti cmp xlat push or dec push push aam stos lods (bad) (bad) (bad) fwait icebp into iret imul ret mov mov sti pop jns movsl sbb mov jne mov push loop adc mov cmpsb (bad) xor pop test ret cli out loop not mov (bad) (bad) mov xchg sub mov das scas (bad) and clc stos push jg incl push pop fiadd in sti int3 mov xchg push pop cmpsb popf mov fcomip or sahf stos addr16 sti aad rcl pop adc pop xchg in push repz sti iret loop shl inc scas mov add fcomps adc push int3 jmp xacquire hlt lahf ljmp in in mov or enter xlat sub (bad) sti mov cld mov incl and sbb push fdivrl shr cmc in incl gs idiv push pop xchg push incl in in lahf ljmp fdivrl adc stos push les (bad) pop lret incl xchg dec mov lock jge sub repnz pop (bad) pop mov dec negl jne jle lret incl jae push sbb xor xor sub xchg cld les pop jns push incl adc add test leave mov ljmp pop or add test pop or add test iret addr16 icebp jbe or scas cld mov incl and sub xchg aas fcompl out incl stos add inc lods jg lahf std cmpl movsb test popa jg or fldpi sbb pop lret pop mov pop xchg scas inc test sbb daa pushf inc stos aas sub pop fnstcw sbb lret les jg jg add cwtl fwait push repnz aaa cld popf push std fwait std dec popf pushf mov incl cmpsl (bad) add sbb sub mov fisttpl addr16 incl cmc add pop jmp aaa std incl cli nop cmp test push stc cmp push jns jne mov aam (bad) movsl or cld mov idiv xchg push xchg cmpsl outsl mov jg jg add cmpsb daa push scas sub std fild leave inc mov fist and fisubrl stos repnz mov add mov imul sbb adc mov outsl lret jnp lahf pop hlt aad or mov jg fucomip stos clc adc and or cmpsb pop sub jg xlat lock in cltd pop lahf out incl aam fisubrl sbb fmul idiv add jno jp std pop jle incl cmpsl add das adc and (bad) pop imul mov aas das and (bad) add sbb lret leave fbld in incl ljmp jge std dec sbb inc movsl xchg xchg inc sti push lahf mov xchg test push lahf mov xor lret mov mov add lret stos mov popa incl dec pop jo jo scas cld mov (bad) std mov in pop mov div cmc and inc loopne xchg dec push enter aad cmpsl rcr idiv add or in stos pop movsl leave imul cmc and loopne ljmp loopne jb jp clc jge incl mov stos push adc (bad) test shl enter lea popf pusha pushf test jmp cmp dec scas cli outsl cmc and mov ret push dec jl jecxz gs dec out jg out cmc es fnstenv xor push in jo and sub jmp xchg cli pop lahf outsl incl rcrl push std aas (bad) pushf push in std add xchg dec jno jae negl mov incl std cmp leave mov add xchg (bad) out insl or mov stos xchg stos addr16 incl push inc jns inc incl xlat std aas (bad) pushf push aam outsb jb xor loope stos popf dec setbe outsl stc xor out in lahf in idiv add jo jb mov and cmp idiv add mov jg pushf das cs imulb cmpsl add adc outsb cmp add jg incl rcll incl mov loopne in les inc mov jle (bad) mov sub shr xchg loopne sarl push lret add mov scas ror incl pusha out rolb stos mov imul pop jle jg xchg dec pop xlat in pop jle jg sbb insb xor aam call jle cmpsl out xchg cmp mov fist mov jecxz jecxz xchg xchg xchg sti pop incl in aas jmp enter (bad) adc xor sahf xchg sub leave loope in negb cld (bad) std cmp jb xchg xchg test pop mov mov outsb lock lret stc psubd in out mov std icebp pop out ja (bad) stc ficomp imul lds leave dec or test pop mov pop out pop dec jge or sub dec jle ja sti rorb jmp dec out push xchg xchg (bad) sahf jg loope ja mov fildll cli jb add les out xchg std cmp cmpb pop ss in rclb incl cmpsl xor (bad) mov incl and add jae cmp jb and ds pop stos stos xchg test sbb mov int ret decb incl xchg incl cmpsl add xchg mov xor aam loope mov incl dec push jl sub incl dec pop push mov xchg cmpsb push mov xchg xlat push pcmpgtb daa clc inc fdivrp add add psubd stc jp cwtl fstps ret (bad) pushf btc cmp jl outsb pop sar add lret pminsw xchg dec jle jg incl push pop rorl scas pop lods xor (bad) push movl test incl aam jae scas xor mov in dec stos push mov dec cmp imulb (bad) or cmpsb inc pop in incl idivl mov cmpsl cli dec cmc inc jae lds inc and xchg out imul std es mov outsl jbe loop cmc insb push js js sub bnd xor mov xchg incl in add (bad) and popa sahf pop scas adc das popf js pop leave lahf (bad) fimul stos cmpsb adc add cmpb (bad) jno ds xor jg incl outsl clc test dec xchg incl das (bad) fcomip add push xchg sub ficoml adc icebp jl iret (bad) and push pop out jg incl mov fdivs add dec aad inc xor sbb mov jmp add cmp incl mov aam jle repz clc scas stos loopne inc fldl2e pushf or mov jo dec fnstsw mov inc (bad) push push ja sub push pop mov aas int3 incl mov push mov sahf pop incl mov aas jbe stc lret ja mov popf arpl jg cld push pop dec mov jmp cmp loop lret mov mov jp sub test mov jg or int jns lds hlt sti cld xlat mov mov movsl dec scas mov push mov ds stos jno dec sub stos ljmp mov sti sarb fcoml (bad) and decb std cmp push and (bad) repz cld push (bad) cli shrb xchg daa loop into mov adc adc push subl adc dec dec outsb xchg cli (bad) dec lds call sbb sub jae aad lahf ds jge aas cmp (bad) cld push push fisubr loop ret add (bad) flds aaa adc adc or sbb add incl and add or arpl xor add mov or sbb add incl sub add or add je outsl outsb xor push add add je outsl outsb xor add mov or incl sbb add or add gs add pop push or add call add add or add jbe xor adc or or pop add add add or add jbe xor adc or or push add add add add or inc outsl insl insl popa outsb xor add or inc outsl insl insl popa outsb xor add or or add add add or inc outsl insl insl popa outsb xor add or inc outsl insl insl popa outsb xor add or or add incl sub add push or inc outsl insl insl popa outsb xor add or inc outsl insl insl popa outsb xor add or or add incl push add add arpl insb insb xor or xor pop incl mov incl sbb add add add xor adc or or add incl sbb add add add gs add pop push or add call add add add push add gs add pop push or add call add add add add jbe xor adc or or add incl add mov or push add xchg push add xchg push add add add xchg push add xchg push add add add xchg push add add add add std push (bad) incl add add add nop push add xor or stc push (bad) incl add add add add pusha adcb add xor add stc push (bad) incl add add add add nop push add adc xor add add add add add nop push add add add add (bad) incl add add add add pusha jl push add cmp push add add add (bad) incl add add xchg push add add add add add add add add add add add loopne inc add (bad) (bad) incl add add add add add add add add add xchg push add add add add add add add inc add (bad) (bad) incl add add add add add add add add add add add add cld or (bad) (bad) (bad) incl add add push add add add add add add add add add cwtl xchg push add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) lcall xchg push add push add (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) (bad) fcoms add les add add add mov add add xchg push add nop push add add add imul (bad) (bad) incl add add push add (bad) (bad) incl add add inc add jg add push add inc add inc add add inc add inc add add add iret push add inc add jns add jge add ja add inc add xchg nop iret push add inc add xchg xchg iret push add inc add xchg cwtl iret push add inc imul inc imul add add inc add inc add insl add inc add xchg inc add popa imul push dec inc dec inc inc jae push jbe jo jae push jae inc dec js je dec ja inc imul js pop inc insb inc inc dec push add idiv cli repz xlat cli repz cmc cli cli xlat cli clc div cli clc cmc cmc cli repz cli div repnz div div xlat idiv xlat cli repnz repz div lock xlat repz (bad) in add add inc add cmp iret push add inc add cmp iret push add inc add inc add jge add add inc add add jmp int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push mov sub push push push mov movl mov mov and mov and push mov mov call mov xor push mov mov mov call cmp fnclex jge push push push push call cmp jne push push call mov lea push push mov call push push call test fnclex jge push push push push call lea call mov lea lea movl movl call call lea lea call mov lea lea push push movl movl call test je movl jmp lea lea push push movl movl call test je mov mov mov jmp lea lea push push movl movl call test je movl jmp lea lea push push movl movl call test je movl movl lea lea call movl push jmp lea call ret lea call ret mov push mov call mov mov pop pop mov pop mov pop ret sub mov lea movl movl lea call xor add ret nop push mov sub push mov push mov mov call push push push mov movl movl movl mov mov mov push call movl movl push call movl call push lea push call mov mov mov mov push call lea call movl mov mov push call movl call push lea push call mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl xor cmpl sete neg mov lea call push jmp lea call ret ret mov mov mov push call mov mov mov mov mov mov pop pop pop mov pop ret push mov sub push mov push mov sub push push push mov movl mov mov and mov and push mov mov call mov lea xor push push mov mov mov mov mov mov mov call cmp fnclex jge mov push push push push call jmp mov cmp jne push push call mov lea push push mov call cmp fnclex jge push push push push call mov lea push push mov mov call cmp fnclex jge push push push push call mov mov push lea push push call push lea push push call push lea push push call push lea push push call mov push push call call lea lea push lea push lea push lea push push push call add lea call mov push jmp lea lea push lea push lea push lea push push push call add lea call ret ret mov push mov call mov mov pop pop mov pop mov pop ret nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov mov and mov and push mov mov call mov xor push mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov call mov push lea push call mov push push mov call cmp fnclex jge mov push push push push call mov lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov lea call mov lea lea push push push call test jge push push push push call mov lea not mov call cmpw je mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge push push push push call lea call mov mov mov mov lea lea mov mov movl movl call mov push push call mov lea call push push call mov lea call push push call mov lea call push push call mov lea lea push lea push push lea push push movl call mov call lea mov lea push lea push push push call lea lea push lea push lea push push push call add cmpw jne mov push call push lea push call mov push push mov call test fnclex jge push push push push call mov lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call lea call mov mov mov mov mov mov lea lea mov mov movl mov call movl jmp push call cmp je mov push call lea push push call mov push push mov call test fnclex jge push push push push call mov lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call lea call mov mov mov mov mov mov lea lea mov mov movl mov call movl lea lea mov call lea lea push lea push push push jmp push call cmp je mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge push push push push call lea call mov mov mov mov mov mov lea lea mov mov movl mov call lea lea movl mov call lea lea push lea push push lea push push call lea lea push lea push lea push push jmp mov mov test jne push push call mov lea push push mov mov call test fnclex jge mov push push push push call mov lea push push mov mov call test fnclex jge mov push push push push call mov push call push lea push call mov lea push push mov call test fnclex jge mov push push push push call mov test jne push push call mov lea push push mov mov call test fnclex jge mov push push push push call mov lea push push mov mov call test fnclex jge mov push push push push call mov push call push lea push call mov lea push push mov call test fnclex jge mov push push push push call mov push push call mov lea call push mov push push call mov lea call push call mov lea call mov push push push call mov lea call mov push push call mov lea call push call lea lea push lea push lea push lea push lea push lea push lea push lea push push push call lea lea push lea push lea push push push call add lea movl movl push call lea mov call mov mov movl mov movl mov call mov mov mov call mov push mov mov push push push call movl movw mov mov cmp jg movswl cmp mov jb call movswl cmp jb call mov mov mov push mov mov add jo add push push push call mov add jo mov jmp mov push call mov push call push lea push call mov push push mov call test fnclex jge push push push push call mov lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call lea call mov mov mov mov mov mov lea lea mov mov movl mov call lea lea movl mov call lea lea push lea push push push lea push call lea lea push lea push lea push push push call add movl push jmp lea lea push lea push lea push lea push lea push lea push lea push lea push push push call lea lea push lea push lea push push push call lea lea push lea push lea push push push call add ret ret mov push mov call mov mov pop pop mov pop mov pop ret call nop nop nop nop push mov sub push mov push mov sub push push push mov movl xor mov mov push mov call mov mov mov mov mov mov cmp mov jne push push call lea mov push mov sub mov mov mov sub mov mov mov mov mov mov mov mov push mov mov mov mov mov mov mov mov mov mov call test fnclex jge push push push push call lea lea push push call lea lea push push call lea call mov mov push push push push call lea push push push call push call lea push push call push jmp testb je lea call lea call lea push push call ret lea push push call ret mov push mov call mov mov mov mov mov mov mov mov mov mov mov pop pop mov pop mov pop ret nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov mov and mov and push mov mov call mov xor push mov mov mov mov mov mov mov mov mov mov mov call mov push lea push call mov push push mov call cmp fnclex jge mov push push push push call mov lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov lea call mov lea lea push push push call test jge push push push push call mov lea not mov call cmpw je mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov mov mov mov lea lea mov mov movl movl call push push call mov lea call push push call mov lea call push push call mov lea call push push call mov lea lea push lea push push lea push push movl call mov call mov lea lea push lea push push push call lea lea push lea push lea push push push call mov add push call lea push push call mov push push mov call fnclex test jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge push push push push call lea call mov mov mov mov mov mov lea lea mov mov movl mov call movl jmp push call cmp je mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge push push push push call lea call mov mov mov mov mov mov lea lea mov mov movl mov call lea lea movl mov call lea lea push lea push push push jmp push call cmp je mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge push push push push call lea call mov mov mov mov mov mov lea lea mov mov movl mov call movl lea lea mov call lea lea push lea push push push jmp lea movl push movl call lea mov call mov movl mov movl mov call mov mov mov call mov push mov mov push push push call movw mov mov cmp jg movswl cmp mov jb call movswl cmp mov jb call mov mov mov push mov mov mov add jo add push push push call mov mov add jo mov jmp mov push call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge push push push push call lea call mov mov mov mov mov mov lea lea mov mov movl mov call lea lea movl mov call lea lea push lea push push push lea push call lea lea push lea push lea push push push call add movl push jmp lea lea push lea push push push call add lea call lea lea push lea push lea push push push call add ret ret mov push mov call mov mov pop pop mov pop mov pop ret call nop nop nop push mov sub push mov push mov sub push push push mov movl mov mov and mov and push mov mov call call movl mov push mov call mov mov pop pop mov pop mov pop ret nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov mov and mov and push mov mov call mov push movl call mov push lea push call mov push push mov call test fnclex jge push push push push call mov lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge push push push push call lea call movl push jmp lea call ret ret mov push mov call mov mov pop pop mov pop mov pop ret push mov sub push mov push mov sub push push push mov movl mov movl push mov call lea push push call mov push push mov call test fnclex jge push push push push call lea call push jmp lea call ret ret mov pop pop xor mov pop mov pop ret nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov mov and mov and push mov mov call mov push movl call mov push lea push call mov push push mov call test fnclex jge push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call mov lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call lea call movl push jmp lea call ret ret mov push mov call mov mov pop pop mov pop mov pop ret nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov mov and mov and push mov mov call mov push movl call mov push lea push call mov push push mov call test fnclex jge push push push push call mov lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge push push push push call lea call movl push jmp lea call ret ret mov push mov call mov mov pop pop mov pop mov pop ret push mov sub push mov push mov sub push push push mov movl mov mov and mov and push mov mov call mov push movl call mov push lea push call mov push push mov call test fnclex jge push push push push call mov lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call lea call movl push jmp lea call ret ret mov push mov call mov mov pop pop mov pop mov pop ret nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov mov and mov and push mov mov call mov movl test jne push push call mov push push mov call test fnclex jge mov push push push push call jmp mov mov test jne push push call mov push push mov call test fnclex jge push push push push call mov test jne push push call mov push push mov call test fnclex jge push push push push call mov push call mov push lea push call mov push push mov call test fnclex jge push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call lea call movl fwait push jmp lea call ret ret mov push mov call mov mov pop pop mov pop mov pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov mov and mov and push mov mov call mov push movl call mov push lea push call mov push push mov call test fnclex jge push push push push call mov lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge mov push push push push call lea call mov push call lea push push call mov push push mov call test fnclex jge push push push push call lea call movl push jmp lea call ret ret mov push mov call mov mov pop pop mov pop mov pop ret push mov sub push mov push mov sub push push push mov movl mov mov and mov and push mov mov call mov push movl call mov push lea push call mov push push mov call test fnclex jge push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call mov lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call lea call movl push jmp lea call ret ret mov push mov call mov mov pop pop mov pop mov pop ret nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov mov and mov and push mov mov call mov push movl call mov push lea push call mov push push mov call test fnclex jge push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call mov lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call lea call movl push jmp lea call ret ret mov push mov call mov mov pop pop mov pop mov pop ret nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov xor cmp mov mov mov mov mov mov mov mov mov mov mov jne push push call mov lea push push mov call cmp fnclex jge push push push push call mov lea push push mov mov call cmp fnclex jge push push push push call xor cmpw lea sete neg mov call cmp je mov mov mov mov mov mov lea lea mov mov movl mov call lea lea movl mov call lea lea push lea push push lea push push call lea lea push lea push lea push push push call add call mov push mov call mov push lea push call mov push push mov call test fnclex jge push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call lea call mov push movl movl call push lea push call mov lea push push mov call test fnclex jge push push push push call mov mov sub mov push mov mov mov mov mov mov mov push call lea lea push push push call add lea push call mov lea call mov mov call mov lea call mov push call mov push lea push push call push call mov call mov push push call mov mov lea call mov lea push lea push push mov movl call lea push call mov lea call mov lea call lea call lea call push call mov lea call mov mov call lea call mov lea push push call mov push push call push call mov call mov push push call mov mov lea call mov lea push lea push push mov movl call lea lea push call mov lea call mov mov call lea call lea call mov push push call mov lea call mov lea push lea lea push push push movl call test jge push push push push call lea call lea call mov push push call mov lea call mov lea push lea lea push push push movl call test jge push push push push call lea call lea call push push push call mov call mov push push push push push call mov lea call lea push push call push push call call lea lea push push push call add call call fwait push jmp lea lea push push push call lea lea push push push call lea lea push lea push lea push push push call add ret ret mov pop pop xor mov pop mov pop ret nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl xor mov mov call call mov call call call mov mov mov push push call lea push push mov movl call mov lea call push push call mov lea neg sbb neg neg call lea call test je mov push push call mov lea push movl call lea call push jmp lea call lea call ret ret mov pop pop xor mov pop mov pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov mov and mov and push mov mov call mov push movl call mov push lea push call mov push push mov call test fnclex jge push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call mov lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call lea call movl push jmp lea call ret ret mov push mov call mov mov pop pop mov pop mov pop ret nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov mov and mov and push mov mov call mov push movl call mov push lea push call mov push push mov call test fnclex jge push push push push call mov lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call lea call mov push call movl push jmp lea call ret ret mov push mov call mov mov pop pop mov pop mov pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov xor mov xor mov mov mov push mov mov mov mov mov mov mov mov mov mov mov call lea push push call mov lea push push mov call cmp fnclex jge push push push push call lea push push push lea push push call mov push push call mov call lea call mov lea call test jne mov mov mov mov mov lea lea mov mov mov movl movl call lea lea push lea push push lea push push call lea lea push lea push lea push push push call add movw jmp mov push call lea push push call mov lea push push mov call test fnclex jge push push push push call flds call lea mov call mov push movl call push lea push call mov lea push push mov call test fnclex jge push push push push call flds call lea mov call mov mov push mov call lea push push call mov lea push push mov call test fnclex jge push push push push call fildl fstpl flds faddl fnstsw test jne call lea mov call cmpw jne call mov call mov mov sub jo cmp jle mov push call lea push push call mov push mov call test fnclex jge push push push push call lea call mov push call lea push push call mov lea push push mov call test fnclex jge push push push push call lea push push push lea push push call push mov push call call lea call lea call mov mov mov sub jo sub mov jo neg cmp mov jge mov push call lea push push call mov lea push push mov call test fnclex jge push push push push call flds call lea mov call mov push call lea push push call mov lea push push mov call test fnclex jge push push push push call flds fildl fstpl faddl fnstsw test jne call lea mov call mov push call push lea push call mov push mov call test fnclex jge push push push push call lea call call mov call mov mov call jmp mov test jne push push call mov lea push push mov mov call mov push push call test fnclex jge push push push push call lea call push push call push push call fwait push jmp lea call lea call lea lea push lea push lea push push push call add ret ret mov pop pop xor mov pop mov pop ret jmp call nop nop nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov mov and mov and push mov mov call mov movl test jne push push call mov push push mov call test fnclex jge mov push push push push call jmp mov mov test jne push push call mov push push mov call test fnclex jge push push push push call mov test jne push push call mov push push mov call test fnclex jge push push push push call mov push call mov push lea push call mov push push mov call test fnclex jge push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call lea call mov push call push lea push call mov push push mov call test fnclex jge push push push push call lea call movl fwait push jmp lea call ret ret mov push mov call mov mov pop pop mov pop mov pop ret nop nop push mov sub push mov push mov sub push push push mov movl mov mov and mov and push mov mov call mov xor push mov call push lea push call mov push push mov call cmp fnclex jge push push push push call lea call mov push jmp lea call ret ret mov push mov call mov mov pop pop mov pop mov pop ret nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl xor mov mov push mov call mov lea mov mov mov mov push push mov call cmp fnclex jge mov push push push push call jmp mov mov mov test jne push push call mov lea push push mov call test fnclex jge push push push push call mov lea push push mov mov call test fnclex jge push push push push call flds cmpl jne fdivs jmp pushl call mov push flds cmpl jne fdivs jmp pushl call fsubrp fnstsw test jne fstps push call test fnclex jge push push push push call lea call mov lea push mov push mov call test fnclex jge push push push push call mov mov test jne push push call mov lea push push mov call test fnclex jge push push push push call mov lea push push mov mov call test fnclex jge push push push push call flds cmpl jne fdivs jmp pushl call mov push flds cmpl jne fdivs jmp pushl call fsubrp fnstsw test jne fstps push call test fnclex jge push push push push call lea call fwait push jmp lea call ret ret mov push mov call mov mov pop pop mov pop mov pop ret jmp nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov mov and mov and push mov mov call mov xor push mov call push lea push call mov push push mov call cmp fnclex jge push push push push call lea call mov push jmp lea call ret ret mov push mov call mov mov pop pop mov pop mov pop ret nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov mov and mov and push mov mov call movl mov push mov call mov mov pop pop mov pop mov pop ret nop nop nop nop nop nop nop nop nop nop nop push push mov mov call add jo cmp jl pop xor pop ret call nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov movl mov cmp jge call add jo jmp mov lea call push lea call ret mov pop pop xor mov pop mov pop ret call nop nop nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov movl mov cmp jge call add jo jmp mov lea call push call push lea call ret mov pop pop xor mov pop mov pop ret call nop nop push mov sub push mov push mov sub push push push mov movl mov movl mov cmp jge call add jo jmp mov lea call push call push push call test jne call push lea call ret mov pop pop xor mov pop mov pop ret call nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov mov xor mov mov mov mov cmp jge call add jo jmp mov lea call push call push push call test jne call mov cmp jge call add jo jmp push jmp lea call ret lea call ret mov mov mov pop mov mov pop pop mov mov mov xor mov mov mov mov pop ret call nop nop nop push mov sub push mov push mov sub push push push mov movl mov xor mov mov mov cmp jge call add jo jmp mov mov lea call push call push push call test jne call mov cmp jge call add jo jmp mov lea call push mov lea call lea call ret mov pop pop xor mov pop mov pop ret call nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov xor mov mov mov cmp jge call add jo jmp mov mov lea call push call push push call test jne call mov cmp jge call add jo jmp mov lea call push mov lea call lea call ret mov pop pop xor mov pop mov pop ret call nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov xor mov mov mov mov cmp jge call add jo jmp mov mov lea call push call push push call test jne call mov cmp jge call add jo jmp mov lea call mov lea call push mov lea call lea call lea call ret mov pop pop xor mov pop mov pop ret call nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov mov xor mov mov mov mov mov mov cmp jge call add jo jmp mov mov lea call push call push push call test jne call mov cmp jge call add jo jmp mov lea call mov lea call push call push jmp lea call ret mov lea call lea call lea call ret mov mov mov pop mov mov pop pop mov mov mov xor mov mov mov mov pop ret call push mov sub push mov push mov sub push push push mov movl mov mov xor mov mov mov mov mov mov cmp jge call add jo jmp mov mov lea call push call push push call test jne call mov cmp jge call add jo jmp mov lea call mov lea call push call push jmp lea call ret mov lea call lea call lea call ret mov mov mov pop mov mov pop pop mov mov mov xor mov mov mov mov pop ret call push mov sub push mov push mov sub push push push mov movl mov mov xor mov mov mov mov mov mov cmp jge call add jo jmp mov mov lea call push call push push call test jne call mov cmp jge call add jo jmp mov lea call mov lea call mov push call push call push jmp lea call ret mov lea call lea call lea call ret mov mov mov pop mov mov pop pop mov mov mov xor mov mov mov mov pop ret call nop nop nop push mov sub push mov push mov sub push push push mov movl mov xor mov mov mov mov cmp jge call add jo jmp mov mov lea call push call push push call test jne call mov cmp jge call add jo jmp mov lea call mov lea call mov push call push call push push call test jne call push mov lea call lea call lea call ret mov pop pop xor mov pop mov pop ret call nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov xor mov mov mov mov cmp jge call add jo jmp mov mov lea call push call push push call test jne call mov cmp jge call add jo jmp mov lea call mov lea call mov push call push call push push call test jne call push mov lea call lea call lea call ret mov pop pop xor mov pop mov pop ret call nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov xor mov mov mov mov cmp jge call add jo jmp mov mov lea call push call push push call test jne call mov cmp jge call add jo jmp mov lea call mov lea call mov push call push call push push call test jne call push mov lea call lea call lea call ret mov pop pop xor mov pop mov pop ret call nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov xor mov mov mov mov cmp jge call add jo jmp mov mov lea call push call push push call test jne call mov cmp jge call add jo jmp mov lea call mov lea call mov push call push call mov push push call test jne call push push call test jne call push mov lea call lea call lea call ret mov pop pop xor mov pop mov pop ret call nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov xor mov lea lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call movl mov lea lea call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call movl mov lea lea call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea mov movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call movl mov lea lea call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call movl mov lea lea call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call mov cmp jge call add jo jmp push mov lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call ret mov pop pop xor mov pop mov pop ret call nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov lea movl call push lea call ret mov pop pop xor mov pop mov pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov xor mov lea mov mov call mov lea call push mov lea call lea call ret mov pop pop xor mov pop mov pop ret nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov xor mov lea mov mov call mov lea call push push call test jne call push mov lea call lea call ret mov pop pop xor mov pop mov pop ret push mov sub push mov push mov sub push push push mov movl mov xor mov lea mov mov mov call mov lea call push push call test jne call mov lea call push mov lea call lea call lea call ret mov pop pop xor mov pop mov pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov mov xor mov mov lea mov mov mov mov call mov lea call push push call test jne call mov lea call mov mov cmp jge call add jo jmp push jmp lea call ret mov lea call lea call lea call ret mov mov mov pop mov mov pop pop mov mov mov xor mov mov mov mov pop ret call nop nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov xor mov lea mov mov mov call mov lea call push push call test jne call mov lea call mov mov cmp jge call add jo jmp mov cmp jge call add jo jmp push mov lea call lea call lea call ret mov pop pop xor mov pop mov pop ret call nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov xor mov lea mov mov mov call mov lea call push push call test jne call mov lea call mov mov cmp jge call add jo jmp mov cmp jge call add jo jmp mov cmp jge call add jo jmp push mov lea call lea call lea call ret mov pop pop xor mov pop mov pop ret call nop nop nop push mov sub push mov push mov sub push push push mov movl mov mov xor mov mov lea mov mov mov mov call mov lea call mov push push call test jne call mov lea call mov mov cmp jge call add jo jmp mov cmp jge call add jo jmp mov cmp jge call add jo jmp push push call test jne call push jmp lea call ret mov lea call lea call lea call ret mov mov mov pop mov mov pop pop mov mov mov xor mov mov mov mov pop ret call nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov mov xor mov mov lea mov mov mov mov call mov lea call mov push push call test jne call mov lea call mov mov cmp jge call add jo jmp mov cmp jge call add jo jmp mov cmp jge call add jo jmp push push call test jne call push jmp lea call ret mov lea call lea call lea call ret mov mov mov pop mov mov pop pop mov mov mov xor mov mov mov mov pop ret call nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov xor mov lea mov mov mov call mov lea call mov push push call test jne call mov lea call mov mov cmp jge call add jo jmp mov cmp jge call add jo jmp mov cmp jge call add jo jmp push push call test jne call push call push mov lea call lea call lea call ret mov pop pop xor mov pop mov pop ret call push mov sub push mov push mov sub push push push mov movl mov xor mov lea mov mov mov call mov lea call mov push push call test jne call mov lea call mov mov cmp jge call add jo jmp mov cmp jge call add jo jmp mov cmp jge call add jo jmp push push call test jne call push call push mov lea call lea call lea call ret mov pop pop xor mov pop mov pop ret call push mov sub push mov push mov sub push push push mov movl mov xor mov lea mov mov mov call mov lea call mov push push call test jne call mov lea call mov mov cmp jge call add jo jmp mov cmp jge call add jo jmp mov cmp jge call add jo jmp push push call test jne call push call push call push mov lea call lea call lea call ret mov pop pop xor mov pop mov pop ret call nop push mov sub push mov push mov sub push push push mov movl mov mov xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jge call add jo jmp mov mov lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call movl mov lea lea call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call push call mov mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push call lea lea push lea push lea push lea push lea push lea push push push call add lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call movl mov lea lea call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call movl mov lea lea call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call push jmp testb je lea call lea lea push lea push lea push lea push lea push lea push push push call add ret mov lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call ret mov mov mov pop mov mov pop pop mov mov mov mov mov xor mov mov pop ret call nop nop nop nop push call xor ret push call push push call test jne call xor ret nop nop nop nop nop nop push call push push call test jne call push call xor ret nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov push movl movl call push push call test jne call push call push jmp lea call ret ret mov mov mov pop mov mov pop pop mov mov mov mov mov xor mov mov pop ret nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov mov push movl movl call push push call test jne call push call push call push jmp lea call ret ret mov mov mov pop mov mov pop pop mov mov mov mov mov xor mov mov pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov mov push movl movl call push push call test jne call push call push call push jmp lea call ret ret mov mov mov pop mov mov pop pop mov mov mov mov mov xor mov mov pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop push mov push push call push push call test jne call push call push call mov xor call add jo cmp jl pop xor pop ret call nop nop push mov push push call push push call test jne call push call push call mov xor call add jo cmp jl push call pop xor pop ret call nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov mov push movl movl call push push call test jne call mov push call push call mov xor cmp jge call add jo jmp push call push call push jmp lea call ret ret mov mov mov pop mov mov pop pop mov mov mov mov mov xor mov mov pop ret call nop nop nop nop nop nop nop nop nop nop nop push mov push push push push call push push call test jne call mov push call push call mov xor call add jo cmp jl push call push call push call pop pop pop xor pop ret call nop nop nop push mov push push push push call push push call test jne call mov push call push call mov xor call add jo cmp jl push call push call push call mov call add jo cmp jle pop pop pop xor pop ret call push mov sub push mov push mov sub push push push mov movl mov xor push mov call push push call test jne call mov push call push call cmp jge call add jo jmp push call push call push call mov mov mov cmp jg call mov add jo mov jmp mov lea call push lea call ret mov pop pop xor mov pop mov pop ret call nop nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov mov xor push mov mov mov call push push call test jne call push call push call mov cmp jge call add jo jmp push call push call push call mov mov mov cmp jg call mov add jo mov jmp mov lea call mov cmp jge call add jo jmp push jmp lea call ret lea call ret mov mov mov pop mov mov pop pop mov mov mov xor mov mov mov mov pop ret call nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov xor push mov call push push call test jne call push call push call mov cmp jge call add jo jmp push call push call push call mov mov mov cmp jg call mov add jo mov jmp mov lea call mov cmp jge call add jo jmp push lea call ret mov pop pop xor mov pop mov pop ret call nop nop nop push mov sub push mov push mov sub push push push mov movl xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jge call add jo jmp mov push call mov mov lea call push push call mov lea call mov push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push call lea lea push lea push lea push lea push lea push lea push push push call mov mov add lea lea movl mov call lea lea movl mov call lea lea movl mov call movl mov lea lea call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea mov movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call cmp jge call add jo jmp push jmp lea lea push lea push lea push lea push lea push lea push push push call add ret mov lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call ret mov pop pop xor mov pop mov pop ret call nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov push push movl movl call test jne call push jmp lea call ret ret mov mov mov pop mov mov pop pop mov mov mov mov mov xor mov mov pop ret nop nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov mov push push movl movl call test jne call push push call test jne call push jmp lea call ret ret mov mov mov pop mov mov pop pop mov mov mov mov mov xor mov mov pop ret nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov mov push push movl movl call test jne call push push call test jne call push jmp lea call ret ret mov mov mov pop mov mov pop pop mov mov mov mov mov xor mov mov pop ret nop nop nop nop push mov push push push call mov test jne call push push call test jne call mov xor call add jo cmp jl pop xor pop ret call nop nop nop nop nop nop nop nop nop nop nop push mov push push push push push call mov test jne call push push call test jne call mov xor call add jo cmp jl push push call test jne call pop pop pop xor pop ret call nop nop nop nop nop push mov push push push push push call mov test jne call push push call test jne call mov xor call add jo cmp jl push push call test jne call push call pop pop pop xor pop ret call nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jge call add jo jmp mov push call mov mov lea call push push call mov lea call mov push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push call lea lea push lea push lea push lea push lea push lea push push push call add mov cmp jge call add jo jmp mov mov lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call mov lea lea mov mov call lea lea mov mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call push jmp lea lea push lea push lea push lea push lea push lea push push push call add ret mov lea call lea call lea call lea call lea call ret mov pop pop xor mov pop mov pop ret call nop nop nop nop nop nop nop nop nop push call xor ret push call push call xor ret nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov push movl movl call push call push push call test jne call push jmp lea call ret ret mov mov mov pop mov mov pop pop mov mov mov mov mov xor mov mov pop ret nop nop nop nop nop nop push call push call push push call test jne call push push mov mov call add jo cmp jl pop xor pop ret call nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov push movl movl call push call push push call test jne call mov mov cmp jge call add jo jmp push call push jmp lea call ret ret mov mov mov pop mov mov pop pop mov mov mov mov mov xor mov mov pop ret call nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov push movl movl call push call mov push push call test jne call mov mov cmp jge call add jo jmp push call push push call test jne call push jmp lea call ret ret mov mov mov pop mov mov pop pop mov mov mov mov mov xor mov mov pop ret call nop nop push push push push push call push call mov push push call mov test jne call mov mov call add jo cmp jl push call push push call test jne call mov call add jo cmp jle pop pop pop xor pop ret call push mov sub push mov push mov sub push push push mov movl mov push movl movl call push call mov push push call test jne call mov cmp jge call add jo jmp push call push push call test jne call mov mov mov cmp jg call mov add jo mov jmp push jmp lea call ret ret mov mov mov pop mov mov pop pop mov mov mov xor mov mov mov mov pop ret call nop nop nop nop nop nop nop nop nop nop push push push push push call push call mov push push call mov test jne call mov mov call add jo cmp jl push call push push call test jne call mov call add jo cmp jle xor call add jo cmp jl pop pop pop xor pop ret call push push push push push call push call mov push push call mov test jne call mov mov call add jo cmp jl push call push push call test jne call mov call add jo cmp jle xor call add jo cmp jl push push call test jne call pop pop pop xor pop ret call nop nop nop nop nop nop nop nop nop nop nop nop nop nop push push push push push call push call mov push push call mov test jne call mov mov call add jo cmp jl push call push push call test jne call mov call add jo cmp jle xor call add jo cmp jl push push call test jne call push call pop pop pop xor pop ret call nop nop nop push push mov push push push call push call mov push push call test jne call mov mov call add jo cmp jl push call push push call test jne call mov call add jo cmp jle xor call add jo cmp jl push push call test jne call push call push call pop pop pop xor pop ret call nop nop nop nop push mov sub push mov push mov sub push push push mov movl xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jge call add jo jmp mov push call mov mov lea call push push call mov lea call mov push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push call lea lea push lea push lea push lea push lea push lea push push push call add mov cmp jge call add jo jmp mov mov mov lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea mov mov call jmp lea lea push lea push lea push lea push lea push lea push push push call add ret mov lea call lea call lea call lea call lea call ret mov pop pop xor mov pop mov pop ret call nop nop nop nop nop nop nop nop nop nop nop nop push push mov mov call add jo cmp jl pop xor pop ret call nop nop nop nop nop nop nop nop push push mov mov call add jo cmp jl mov call add jo cmp jl pop xor pop ret call nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov mov movl mov movl cmp jge call add jo jmp mov cmp jge call add jo jmp push jmp lea call ret ret mov mov mov pop mov mov pop pop mov mov mov mov mov xor mov mov pop ret call push push mov mov call add jo cmp jl mov call add jo cmp jl push call pop xor pop ret call nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov mov movl mov movl cmp jge call add jo jmp mov cmp jge call add jo jmp push call push push call test jne call push jmp lea call ret ret mov mov mov pop mov mov pop pop mov mov mov mov mov xor mov mov pop ret call nop nop nop nop nop nop nop nop nop nop nop push push mov mov call add jo cmp jl mov call add jo cmp jl push call push push call test jne call mov call add jo cmp jl pop xor pop ret call nop nop nop nop nop nop nop nop nop nop nop nop nop push push push push mov mov call add jo cmp jl mov call add jo cmp jl push call mov push push call mov test jne call mov call add jo cmp jl push push call test jne call pop pop pop xor pop ret call nop nop nop push mov sub push mov push mov sub push push push mov movl mov mov movl mov movl cmp jge call add jo jmp mov cmp jge call add jo jmp push call push push call mov test jne call mov cmp jge call add jo jmp mov push push call test jne call push push call test jne call push jmp lea call ret ret mov mov mov pop mov mov pop pop mov mov mov mov mov xor mov mov pop ret call nop nop push mov sub push mov push mov sub push push push mov movl xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jge call add jo jmp mov push call mov mov lea call push push call mov lea call mov push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push call lea lea push lea push lea push lea push lea push lea push push push call add mov cmp jge call add jo jmp mov mov lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call mov lea lea mov mov call lea lea mov mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call lea lea movl mov call push jmp lea lea push lea push lea push lea push lea push lea push push push call add ret mov lea call lea call lea call lea call lea call ret mov pop pop xor mov pop mov pop ret call nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov movl push movl jmp lea call ret ret mov mov mov pop mov mov pop pop mov mov mov mov mov xor mov mov pop ret nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov push push movl movl call test jne call push jmp lea call ret ret mov mov mov pop mov mov pop pop mov mov mov mov mov xor mov mov pop ret nop nop nop nop nop nop nop nop nop nop nop nop push mov push push push call mov test jne call push push call test jne call pop xor pop ret nop nop nop nop nop nop nop push mov push push push call mov test jne call push push call test jne call push call pop xor pop ret nop nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov mov push push movl movl call test jne call push push call test jne call push call push call push jmp lea call ret ret mov mov mov pop mov mov pop pop mov mov mov mov mov xor mov mov pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov push push push call mov test jne call push push call test jne call push call push call push call pop xor pop ret nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov mov push push movl movl call test jne call push push call test jne call mov push call push call push call push call push jmp lea call ret ret mov mov mov pop mov mov pop pop mov mov mov mov mov xor mov mov pop ret nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov cmp jge call add jo jmp mov push call mov mov lea call push push call mov lea call mov push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push call lea lea push lea push lea push lea push lea push lea push push push call add movl cmpw jge call mov add jo mov jmp lea lea movl movl call lea lea movl movl call lea lea movl movl call lea lea movl movl call lea lea movl movl call lea lea movl movl call lea lea movl movl call lea lea movl movl call lea lea movl movl call lea lea movl movl call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push push call mov lea call push call mov lea call push call mov lea lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push neg lea push lea push sbb lea push lea inc push lea push neg push lea lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push push lea lea push lea push lea push lea push lea push lea push lea push push push call add test je call push jmp lea lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push push lea lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push push push call add ret mov lea call lea call lea call lea call lea call ret mov pop pop xor mov pop mov pop ret call nop nop nop nop push call xor ret push mov sub push mov push mov sub push push push mov movl mov push movl movl call push push call test jne call push jmp lea call ret ret mov mov mov pop mov mov pop pop mov mov mov mov mov xor mov mov pop ret nop push mov sub push mov push mov sub push push push mov movl mov push movl movl call push push call test jne call push jmp lea call ret ret mov mov mov pop mov mov pop pop mov mov mov mov mov xor mov mov pop ret nop push mov sub push mov push mov sub push push push mov movl push movl call push push call test jne call mov lea call push lea call ret mov pop pop xor mov pop mov pop ret nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov xor push mov mov mov call push push call test jne call mov lea call push jmp lea call ret lea call ret mov mov mov pop mov mov pop pop mov mov mov xor mov mov mov mov pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov mov call push push push mov movl movl movl mov mov mov push call movl mov lea call mov movl push push lea push call movl push call movl xor test je movl call jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp movl lea mov movl push push lea push lea push call lea push lea push call lea push lea push call lea call jmp movl movl movl lea lea call movl movl movl lea lea call movl movl movl lea lea call jmp movl mov mov movl push push lea push lea push call lea push lea push call lea push lea push call lea call jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp jmp movl movl movl lea lea call jmp movl movl movl movl movl movl movl lea push lea push lea push lea push lea push lea push call mov jmp movl xor test je movl call jmp movl lea push call mov cmpl jae movl jmp call mov lea push call mov mov mov jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp jmp movl lea push lea push lea push call mov cmpl jne movl movl movl movl movl movl movl lea push lea push lea push lea push lea push lea push call mov jmp movl xor test je movl call movl movl movl lea lea call jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp jmp movl movl movl lea lea call jmp movl lea push call mov cmpl jae movl jmp call mov mov mov mov mov movl cmpl je mov cmpw jne mov mov push call mov movl lea push lea push lea push call push call mov sub mov mov mov cmp jae movl jmp call mov mov mov jmp call mov mov mov mov mov mov movl movl movl lea push lea push lea push call push lea push lea push call push lea push lea push call push call mov cmpl jae movl jmp call mov movzbw mov mov mov lea push lea push push call add jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp movl lea push call mov cmpl jae movl jmp call mov mov mov mov call mov jmp movl movl movl lea lea call jmp movl lea push lea push lea push call mov cmpl jne movl xor test je movl call jmp movl movl movl lea lea call jmp movl xor test je movl call movl movl movl lea lea call jmp jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp movl movl movl lea lea call movl xor test je movl call jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp movl xor test je movl call movl movl movl lea lea call jmp movl movl movl mov push push call mov movl movl movl lea push lea push lea push lea push lea push lea push call mov jmp movl xor test je movl call jmp jmp movl movl movl lea lea call movl xor test je movl call jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp movl movl movl lea lea call movl xor test je movl call jmp movl movl movl movl movl lea push lea push lea push call push lea push lea push call push call mov cmpl jae movl jmp call mov mov mov movswl mov add jo and jns dec or inc mov lea call movl mov mov cmpl jae movl jmp call mov movl movl movl movl lea push lea push lea push call push lea push lea push call push call mov cmpl jae movl jmp call mov mov mov mov mov mov mov lea call movl movl movl movl movl lea push lea push lea push call push lea push lea push call push call mov cmpl jae movl jmp call mov mov mov cmpl jae movl jmp call mov mov mov mov mov mov mov lea call jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp movl cmpl je mov cmpw jne lea push call mov sub mov mov mov cmp jae movl jmp call mov mov mov jmp call mov movl movl movl movl lea push lea push lea push call push lea push lea push call push call mov cmpl jae movl jmp call mov mov mov cmpl jae movl jmp call mov mov mov mov mov mov add jo and jns dec or inc movswl mov cmpl jae movl jmp call mov cmpl je mov cmpw jne lea push call mov sub mov mov mov cmp jae movl jmp call mov mov mov jmp call mov mov mov mov movzbw mov mov xor call mov mov mov mov lea call jmp movl movl movl lea lea call jmp movl lea push lea push lea push call mov cmpl jne movl xor test je movl call jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp movl movl movl lea lea call movl lea mov movl push push lea push lea push call lea push call mov lea call lea call jmp movl movl movl lea lea call jmp movl movl movl lea lea call jmp jmp movl movl movl lea lea call jmp push jmp mov and test je lea call lea push lea push lea push lea push push call add lea push push call ret lea push lea push lea push lea push lea push lea push push call add lea call lea call lea call lea call lea call lea call lea push push call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea push push call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea call lea mov lea push push call ret mov mov mov push call mov mov mov mov mov mov pop pop pop mov pop ret call int3 int3 int3 int3 int3 int3 int3 int3 int3 int3 push mov sub push mov push mov mov call push push push mov movl movl movl movl movl mov lea call movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov push push call mov lea call push mov push call mov lea call push push call mov lea call lea push lea push lea push lea push push call add lea push lea push push call add movl mov push push push push call movl push call push lea push call lea push call mov lea call lea call movl push lea push push call movl push call movl lea mov movl push push lea push mov push lea push call lea push push call mov lea push lea push call lea call movl cmpl jne lea push push call lea mov jmp lea mov mov mov mov mov push lea push call cmpl je mov cmpw jne mov mov sub mov mov mov cmp jae movl jmp call mov mov shl mov jmp call mov cmpl je mov cmpw jne mov mov sub mov mov mov cmp jae movl jmp call mov mov shl mov jmp call mov lea push mov mov add push mov mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea push call cmpl je mov cmpw jne mov mov sub mov mov mov cmp jae movl jmp call mov mov shl mov jmp call mov mov mov mov add call lea call movl cmpl je mov cmpw jne mov mov sub mov mov mov cmp jae movl jmp call mov mov shl mov jmp call mov mov mov mov mov push push call test je movl cmpl je mov cmpw jne mov mov sub mov mov mov cmp jae movl jmp call mov mov shl mov jmp call mov mov mov mov mov push call movswl mov fildl fstps lea push call movl cmpl je mov cmpw jne mov mov sub mov mov mov cmp jae movl jmp call mov mov shl mov jmp call mov mov mov mov mov push push call movl cmpl je mov cmpw jne mov mov sub mov mov mov cmp jae movl jmp call mov mov shl mov jmp call mov mov mov mov mov push call cmp jne movl push push lea push call lea push lea push call movl movl movl movl movl mov call mov mov mov mov mov mov mov mov mov push push lea push lea push call add push lea push lea push call mov mov call mov mov mov mov mov mov mov mov mov push push lea push lea push call add push lea push call lea push lea push push call add movl mov mov movl mov call mov mov mov mov mov mov mov mov mov push lea push call movl push push lea push call push call add movl push lea push call movl push lea push call movl cmpl je mov cmpw jne mov mov sub mov mov mov cmp jae movl jmp call mov mov shl mov jmp call mov mov mov mov mov push call cmp jne movl mov push call movl cmpl je mov cmpw jne mov mov sub mov mov mov cmp jae movl jmp call mov mov shl mov jmp call mov mov mov mov mov push call fcompl fnstsw test je movl push call movl push push lea push call lea push lea push call movl call push lea push call mov mov mov mov push call lea call movl movl movl movl movl movl movl mov call mov mov mov mov mov mov mov mov mov mov call mov mov mov mov mov mov mov mov mov mov call mov mov mov mov mov mov mov mov mov push push lea push call push call add movl call push lea push call mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl xor cmpl setne neg mov lea call movswl test jne movl call mov call cmpl jne movl cmpl je mov cmpw jne mov mov sub mov mov mov cmp jae movl jmp call mov mov shl mov jmp call mov mov mov mov mov push call fcompl fnstsw test je movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl cmpl jne push push call movl jmp movl mov mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl mov mov lea push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl push mov push lea push call push push lea push call push mov push push call mov lea call push mov push call mov lea call push push call mov lea call push lea push call push push lea push call push lea push call push call mov call mov mov lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push push call add lea push lea push lea push push call add movl cmpl je movl call movl cmpl je mov cmpw jne mov mov sub mov mov mov cmp jae movl jmp call mov mov shl mov jmp call mov mov mov mov mov push push call test jne movl cmpl je mov cmpw jne mov mov sub mov mov mov cmp jae movl jmp call mov mov shl mov jmp call mov push mov mov mov mov push push call mov lea call push call lea call movl cmpl je mov cmpw jne mov mov sub mov mov mov cmp jae movl jmp call mov mov shl mov jmp call mov mov mov mov mov push push call test jne movl lea push call lea call movl cmpl je mov cmpw jne mov mov sub mov mov mov cmp jae movl jmp call mov mov shl mov jmp call mov mov mov mov mov push push call test jne movl cmpl jne lea push push call lea mov jmp lea mov mov mov mov mov push lea push call cmpl je mov cmpw jne mov mov sub mov mov mov cmp jae movl jmp call mov mov shl mov jmp call mov cmpl je mov cmpw jne mov mov sub mov mov mov cmp jae movl jmp call mov mov shl mov jmp call mov lea push mov mov add push mov mov mov mov push mov mov mov push call fnclex mov cmpl jge push push mov push mov push call mov jmp movl lea push call cmpl je mov cmpw jne mov mov sub mov mov mov cmp jae movl jmp call mov mov shl mov jmp call mov mov mov mov add call lea call movl mov push lea push call cmpl je mov cmpw jne mov mov sub mov mov mov cmp jae movl jmp call mov mov shl mov jmp call mov mov mov add mov movl push push lea push lea push call lea push call lea push lea push call lea push mov push call lea push push call lea call movl cmpl je mov cmpw jne mov mov sub mov mov mov cmp jae movl jmp call mov mov shl mov jmp call mov mov mov mov mov push push call test jne movl push push call mov lea call movl movl movl lea lea call lea push lea push call mov mov movl cmpl je mov cmpw jne mov mov sub mov mov mov cmp jae movl jmp call mov mov shl mov jmp call mov mov mov mov mov mov movl lea push lea push lea push call push lea push lea push call push call mov lea call push fldl call push push push call lea call lea push lea push lea push lea push push call add movl cmpl je mov cmpw jne mov mov sub mov mov mov cmp jae movl jmp call mov mov shl mov jmp call mov fldl call push mov mov add push push call movl fldl call push call movl push call movl movl movl lea lea call lea push lea push call mov mov movl cmpl je mov cmpw jne mov mov sub mov mov mov cmp jae movl jmp call mov mov shl mov jmp call mov mov mov mov mov mov movl push push lea push call push push lea push call push lea push lea push lea push call push lea push lea push call push lea push call push lea push call push push lea push call push push call call lea push lea push lea push lea push lea push push call add lea push lea push lea push lea push push call add movl mov push lea push call cmpl je mov cmpw jne mov mov sub mov mov mov cmp jae movl jmp call mov mov shl mov jmp call mov mov mov add mov movl push push lea push lea push call lea push call lea push lea push call lea push mov push call lea push push call lea call fwait push jmp lea push call lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push push call add lea push lea push lea push push call add lea push lea push lea push lea push push call add lea push push call ret lea call lea call lea call lea push push call lea call lea call lea call lea call lea call lea call ret mov mov pop pop pop mov pop ret int3 int3 int3 int3 int3 int3 int3 int3 push push mov push mov call add jo cmp jl call fstps mov call add jo cmp jl mov flds fadds fstps fnstsw test jne flds fcomps fnstsw test je push mov mov call add jo cmp jl push call call mov call add jo cmp jl call call call fcomps fnstsw test je flds fsubl fstps fnstsw test jne mov call add jo cmp jl call fstps mov call add jo cmp jl flds fcomps fnstsw test jne pop pop pop pop ret jmp call nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov xor mov lea mov mov mov mov mov mov call lea push call xor cmp sete lea neg call cmp je mov push call mov lea mov call mov lea call lea lea push lea push lea push lea push push movl call mov lea lea push push push call add lea call push call mov lea mov call mov lea call lea lea push lea push lea push lea push push movl call lea lea push push push call add lea call push jmp testb je lea call lea lea push push push call add lea call ret ret mov mov mov pop pop pop mov mov mov mov mov mov mov mov mov mov pop ret nop nop push mov sub push mov push mov sub push push push mov movl xor xor mov mov mov mov xor mov mov xor mov mov mov mov mov mov mov mov call mov mov call lea push push push call mov call cmp je mov lea push lea mov push push call push push call mov call mov push push call lea call test je lea lea push push push movl movl call lea lea push mov push lea push push push push call mov call xor test setne neg mov push jmp lea call ret ret mov mov pop pop mov pop mov pop ret nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov lea xor push mov mov mov mov mov call mov lea mov push mov push push lea push push call mov push mov push call mov mov call mov mov push push call mov lea lea mov movl call mov xor cmp sete neg mov lea call cmp je mov mov push push mov push push lea push push call push lea push call push call mov call mov mov push push call mov xor cmp lea sete neg mov call cmp je lea push call push call call push jmp testb je lea call lea call ret lea call ret mov mov mov pop pop pop mov mov mov mov mov mov mov mov mov mov pop ret nop nop nop push mov sub push mov push mov sub push push push mov movl xor mov lea mov mov mov mov mov call lea movl push movl call lea call mov mov mov lea movl push movl call fmull lea movl push fstpl fnstsw test jne lea push call lea push call mov lea call lea lea push lea push push push call add mov push call cmp jge mov push push call mov lea call jmp mov mov push push call mov lea call mov push call add cmp ja xor mov jmp mov push push call mov lea call jmp mov push push call mov lea call fwait push jmp testb je lea call lea lea push lea push push push call add ret lea call ret mov mov pop pop mov pop mov pop ret mov sbb push add mov stc mov add add add add add add add add add add add add add add add add add push xchg out call sub push mov push mov sub push push push mov movl mov xor lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov call push call mov call mov lea push push push lea push push call push push call mov call mov xor cmp lea setne neg mov call cmp jne lea push push call lea push call mov mov lea call lea call lea push push call lea push call mov lea call lea call movl mov lea push push push lea push push lea push push movl call mov push mov push push call mov call mov lea push push call mov xor cmp lea setne neg mov call cmpw je mov mov push push call mov lea call mov lea push push push lea push push movl call push mov push call mov call mov lea push push call mov xor test sete neg lea mov call cmpw je mov lea push lea push push movl call lea push push push lea push push call push mov push call mov call mov lea push push call lea lea push push push call mov add xor test sete neg test je mov mov sub jo push push call mov lea call mov mov push call mov lea call push mov push call mov lea call push call mov lea neg sbb lea push inc push push neg call add test jne mov mov push call call mov lea add push jo push mov call lea push call mov lea call lea call lea push push call lea push call mov lea call lea call movl call jmp mov push push call mov lea call push mov push call mov lea call lea call mov mov push call call mov push call call mov push push call test jne push push call mov lea call push call mov lea call push call mov lea call lea lea push push push call add mov lea lea push push push push push push push lea push push movl call push push call mov call mov lea push push call mov xor test sete neg lea mov call cmpw je mov lea push push mov movl call lea lea push lea push push call push call mov lea call lea lea push push push call mov add push call push mov lea push push call push push push lea push push call push mov push call mov call mov lea push push call mov xor test lea lea sete push push neg push mov call add test je movl mov push call call push jmp mov lea push push push lea push push call push push call mov call mov mov lea push push call mov xor test sete neg lea mov call cmpw je mov push call call mov lea push push call push push call mov call mov lea push push call mov xor test sete neg lea mov call test je mov movl push call call push jmp mov push push push lea push push call push lea push push call push push call call mov lea push push call lea lea push push push call add call push jmp lea lea push push push call lea lea push push push call add ret mov lea call lea call lea call lea call ret mov mov pop pop mov pop mov pop ret call nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov lea call push call mov mov cmp jge call add jo jmp mov cmp jge call add jo jmp call mov lea call mov cmp jge call add jo jmp mov push push mov call mov neg sbb neg mov push push call neg sbb neg and neg sbb neg mov push push call neg sbb neg test jne mov cmp jge call add jo jmp movl movl lea lea call lea push call mov lea mov call push push jmp mov push push call mov neg sbb neg mov push push call neg sbb neg and neg sbb neg mov push push call neg sbb neg test jne mov cmp jge call add jo jmp movl movl lea lea call lea push call mov lea mov call push push call mov lea call lea call lea call mov cmp jge call add jo jmp mov cmp jge call add jo jmp mov test jne push push call mov mov lea push push call fnclex test jge push push push push mov call jmp mov mov mov mov lea push push call fnclex test jge push push push push call mov test jne push push call mov mov lea push push call fnclex test jge push push push push call mov mov mov lea push push call fnclex test jge push push push push call mov push mov push mov call mov lea mov call push mov push push call mov lea call push mov push call mov lea call push push call mov lea call push call lea push lea push lea push lea push lea push lea push push call lea push lea push push call add mov cmp jge call add jo jmp mov cmp jge call add jo jmp mov push mov push call mov lea call push call mov mov lea call test je mov cmp jge call add jo jmp mov test je push mov push mov push call mov lea call push call lea call mov cmp jge call add jo jmp mov cmp jge call add jo jmp call push jmp lea push lea push lea push lea push lea push lea push push call lea push lea push push call add lea call ret lea mov call lea call lea call ret mov mov mov pop pop pop mov pop ret call nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov xor lea mov mov mov call mov mov cmp jge call add jo jmp lea lea push push mov movl call mov lea call push push call neg sbb lea neg neg mov call push jmp lea call ret lea call ret mov mov pop pop mov pop mov pop ret call nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl xor push mov mov mov mov mov mov mov mov mov lea push push call mov mov cmp jge call add jo jmp mov cmp jge call add jo jmp mov mov movl cmp jge call add jo jmp mov push call call mov cmp jge call add jo jmp mov cmp jge call add jo jmp mov mov push call mov mov lea call mov push push call mov lea call mov push mov push call mov lea call push call mov lea call push push call mov lea call mov push mov push call mov lea call push call mov lea call lea lea push lea push lea push lea push lea push push push call mov mov add push push call test jne mov lea call mov cmp jge call add jo jmp mov push push call test jne mov lea call mov cmp jge call add jo jmp mov push push call test jne mov lea call mov cmp jge call add jo jmp mov push push call test jne mov lea call mov cmp jge call add jo jmp mov push push call test jne mov lea call mov cmp jge call add jo jmp mov push push call test jne mov lea call mov cmp jge call add jo jmp mov lea call mov cmp jge call add jo jmp push jmp testb je lea call lea lea push lea push lea push lea push lea push push push call add ret lea call lea lea push push mov call ret mov mov pop pop mov pop mov pop ret call nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov xor lea mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov call push call mov mov mov call lea push push call mov lea push call mov lea call lea push call mov lea call lea push push call lea push call mov lea call lea push call mov lea call push call mov mov lea mov call lea lea push lea push push call lea lea push push call push call mov lea call lea push push call lea push call mov lea call mov mov call lea lea push lea push lea push lea push lea push lea push lea push push push call lea lea push lea push lea push push push call add lea push push call lea push call mov lea call lea push call mov lea call lea push push call lea push call mov lea call lea push call mov lea call push call mov lea mov mov call lea lea push lea push push call lea lea push push call push call mov lea call push lea push call lea push call mov lea call mov mov lea call lea lea push lea push lea push lea push lea push lea push lea push push push call lea lea push lea push lea push push push call add push lea push call lea push call mov lea call lea push call mov lea call lea push push call lea push call mov lea call lea push call mov lea call lea push call mov lea call push call mov lea mov mov call lea lea push lea push push call lea lea push push call push call mov lea call lea push push call lea push call mov lea call mov mov lea call lea lea push lea push push lea lea push lea push lea push lea push lea push push push call lea lea push lea push lea push push push call add lea push push call lea push call mov lea call lea push call mov lea call lea push push call lea push call mov lea call lea push call mov lea call lea push call mov lea call push call mov lea mov mov call lea lea push lea push push call lea lea push push call push call mov lea call lea push push call lea push call mov lea call mov mov add call lea lea push lea push lea push lea push lea push lea push lea push lea push push push call lea lea push lea push lea push push push call add lea push push call lea push call mov lea call lea push call mov lea call lea push push call lea push call mov lea call lea push call mov lea call lea push call mov lea call push call mov lea mov mov call lea lea push lea push push call lea lea push push call push call mov lea call push lea push call lea push call mov lea call mov mov lea call lea lea push lea push lea push lea push lea push lea push lea push lea push push push call lea lea push lea push lea push push push call add lea push push call lea push call mov lea call lea push call mov lea call lea push push call lea push call mov lea call lea push call mov lea call lea push call mov lea call push call mov lea mov mov call lea lea push lea push push call lea lea push push call push call mov lea call lea push push call lea push call mov lea call mov mov add call lea lea push lea push lea push push lea lea push lea push lea push lea push push push call lea lea push lea push lea push push push call add lea push push call lea push call mov lea call lea push call mov lea call lea push push call lea push call mov lea call lea push call mov lea call lea push call mov lea call push call mov lea mov mov call lea lea push lea push push call lea lea push push call push call mov lea call push lea push call lea push call mov lea call mov mov lea call lea lea push lea push lea push lea push lea push lea push lea push lea push push push call lea lea push lea push lea push push push call add lea push push call lea push call mov lea call lea push call mov lea call lea push push call lea push call mov lea call lea push call mov lea call lea push call mov lea call push call mov lea mov mov call lea lea push lea push push call lea lea push push call push call mov lea call lea push push call lea push call mov lea call mov mov add call lea lea push lea push lea push lea push lea push lea push lea push lea push push push call lea lea push lea push lea push push push call add xor mov mov cmp jg mov push call mov mov mov mov cmp jg lea push push call lea push call mov lea call lea push call mov lea call lea push push call lea push call mov lea call lea push call mov lea call lea push push call lea push call mov lea call lea push call mov lea call push call mov lea mov mov call lea lea push lea push push call lea push push call lea push call mov lea call lea push call mov lea call push call mov mov lea mov call lea lea push lea push push call lea lea push push call push call mov lea call push lea lea push push call push call mov lea call push call mov mov mov mov mov movl cmp mov jb call mov mov lea push lea lea mov mov lea push push push movl call mov cmp mov jb call lea lea push lea push push call push call mov mov mov lea lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push push push call lea lea push lea push lea push lea push lea push lea push lea push lea push lea push push push call mov mov add add mov jo add mov jo jmp mov mov add jo jmp mov push push push call mov mov call mov push call mov mov lea mov push push call mov cmp je cmpw jne mov mov neg cmp jb call mov mov jmp call mov mov push add push push call mov call lea push call mov mov push push push push push call call push jmp lea push call lea lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push lea push push push call lea lea push lea push lea push lea push lea push lea push lea push lea push lea push push push call add ret lea call ret mov pop pop mov pop mov pop ret call nop nop nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl mov xor mov mov mov mov mov mov mov mov push call mov call mov mov cmp jg movswl lea lea push push lea push push movl movl mov movl call lea lea push push call push call mov sub jo movswl lea push push call push push lea push push call mov lea call push push call lea lea push push push call lea lea push lea push push push call mov add add jo mov jmp mov lea mov lea movl call push jmp testb je lea call lea lea push push push call lea lea push lea push push push call add ret ret mov mov mov pop pop pop mov mov mov mov mov mov mov mov mov mov pop ret call nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov sub push push push mov movl xor mov mov mov mov mov mov mov mov mov mov mov mov mov mov mov push call mov lea lea push lea push lea push lea push lea push push movl movl mov call mov mov test je mov lea lea push push mov mov mov movl call push lea lea push push call mov lea push lea push push call push call mov lea call push call mov lea call lea lea push push push call lea lea push push push call add call lea lea push lea push push call jmp push jmp testb je lea call lea lea push mov push push call lea lea push push push call add ret lea lea push push push call add lea call ret mov mov pop pop mov pop mov pop ret nop nop nop nop nop nop nop nop nop nop nop nop nop nop push mov sub push mov push mov mov call push push push mov movl movl movl movl mov lea call movl push call movl mov push call mov movl movl jmp mov add jo mov mov cmp jg movl movl movl mov push push lea push mov push mov push call mov lea call push call mov lea call push call call push call mov lea call push call mov lea call lea push lea push lea push push call add lea call movl jmp movl mov mov movl lea lea call fwait push jmp mov and test je lea call lea push lea push lea push push call add lea call ret lea call lea call lea call ret mov mov mov mov mov mov mov mov mov mov mov mov pop pop pop mov pop ret call int3 int3 int3 push mov sub push mov push mov sub push push push mov movl mov xor lea mov mov mov mov mov call mov lea push push call lea push push call mov mov push push call mov sub jo mov xor cmp jl mov cmp je cmpw jne sub mov mov cmp jb call mov mov xor jmp call mov mov movzbw sub lea jo movswl push push call lea lea push lea push push call mov lea call lea call mov add jo mov jmp push jmp testb je lea call lea lea push push push call add lea push push call ret lea call ret mov mov mov pop pop pop mov mov mov mov mov mov mov mov mov mov pop ret call nop nop nop nop nop nop nop nop sahf sahf sahf sahf insl add add add add inc push inc dec push pop push dec dec dec pop inc gs inc jae dec popa insl gs add jbe popa push popa jb jne add pop pop jbe popa push popa jb jae inc je pushl jbe popa push je dec xor add dec arpl add pop popa fs data16 popa outsb add pop pop jbe popa push je dec xor add jbe popa push popa jb outsl jbe add pop pop jbe popa push popa jb popa jb dec outsl data16 add pop pop jbe popa inc jb gs popa jb add jbe popa inc jb dec outsl jbe add dec add pop pop jbe popa dec outsb inc jae jb add jbe popa push je push popa jb outsl jbe add pop pop jbe popa push jne xor add jbe popa inc jb gs popa jb imul jbe popa inc outsb add pop popa fs imul xor add jbe popa push jne xor add inc dec push pop push dec dec dec pop dec outsb jbe imul pop pop jbe popa inc jb gs bound imul add jbe popa inc gs js je xor incl fs data16 gs xor add jbe popa inc outsl jo inc jns gs add jbe popa push gs insl add pop pop jbe popa push je inc popa je add jbe popa dec jae je imul pop pop jbe popa push arpl je jne je add jbe popa push gs jns je insl inc jb outsl jb add jbe popa dec jb jae insb je push bound add jbe popa dec outsb push popa jb add fs imul xor lcall jbe popa inc jb push popa jb lcall insl bound pop inc gs jns gs outsb outsw add pop pop jbe popa push popa jb insl jo add pop pop jbe popa inc jb inc gs jb arpl pop pop jbe popa dec popa je dec gs push je add jbe popa inc outsl outsl insb push je add pop pop jbe popa push popa jb outsl jb outsb imul pop jbe popa inc js je jb arpl call add jbe popa dec outsb inc jb outsl jb add jbe popa dec bound gs call add fs imul imul bound bound gs fs data16 pop popa fs imul xor imul pop pop jbe popa inc jo xor add jbe popa inc jns je add pop pop jbe popa push je inc imul pop pop jbe popa inc outsl outsl insb push popa jb decl add pop pop jbe popa push popa jb jae dec je add jbe popa inc outsl outsl insb push popa jb jne insb add pop inc dec jae outsb add ja inc add pop pop jbe popa inc jb jae add js add jbe popa push popa jb push popa jb outsl jbe add or jbe popa inc push add push add pop pop jbe popa inc imul add inc push inc dec push pop push dec dec dec pop inc fs gs adc add jbe popa inc outsb gs je inc outsl jne fs jb outsl jb add jbe popa inc gs add pop pop jbe popa push je inc insl jo call add pop pop jbe popa inc gs add pop pop jbe popa inc jb inc outsl outsb jae jb arpl add jbe popa push popa jb jae inc jno add jbe popa push jne dec ja gs add pop pop jbe popa push jne dec ja gs add xor add jbe popa dec bound popa jb add jbe popa dec xor add inc insb insb inc jne arpl outsb inc popa insb insb add pop pop jbe popa push popa jb jb add jbe popa push popa jb popa je dec gs push je add fs data16 je outsb add pop pop jbe popa dec popa je dec fs popa insb insb dec add pop outsl insl bound pop inc gs jns gs outsb outsw inc outsl jne je add jbe popa push je push cmp add inc dec push pop push dec dec dec pop push gs gs jae add pop pop jbe popa push dec xor add pop inc dec jae jb add pop pop jbe popa push popa jb outsb add inc push inc dec push pop push dec dec dec pop push jne jb dec outsb je jb popa arpl add jbe popa push je xor arpl add jbe popa push dec xor add pop pop jbe popa inc js gs dec popa outsb fs gs inc add enter pop jbe popa push je push outsl push outsb imul leave add pop add pop pop jbe popa inc popa je push je add pop popa fs data16 gs add pop popa fs imul ss add jbe popa dec xor jb lcall jmp dec add pop pop jbe popa push popa jb insl jo add pop pop jbe popa inc push inc js gs imul jbe popa dec outsb push je push popa jb dec add pop pop jbe popa push bound outsb add pop pop jbe popa push je push popa jb popa insb add pop pop jbe popa inc gs ja gs add pop pop jbe popa push popa jb popa je call add pop pop jbe popa inc popa je push popa jb add jbe popa dec xor jb incl test add dec insb outsl add pop pop jbe popa inc jb outsl jb jbe jb insb outsl ja add jbe popa inc imul (bad) cmp add jbe popa push cmp jb add jbe popa push popa jb popa je dec gs inc popa insb insb dec fs data16 pop pop jbe popa dec gs add mov add jbe popa push popa jb push arpl add fs imul xor add fs imul xor imul pop pop jbe popa push je inc outsl jo add pop pop jbe popa dec xor je add pop pop jbe popa push popa jb outsl je add jbe popa inc jb gs je dec imul add fs imul xor add pop popa fs imul ljmp jmp inc add pop pop jbe popa push popa jb gs popa jb add jbe popa dec xor popa jb pushl jbe popa push popa jb insl jo jno add jbe popa inc jb dec outsl arpl add jbe popa push popa jb fs pop pop jbe popa dec popa je dec gs inc popa insb insb add pop pop jbe popa push je push outsl inc outsb jae add pop pop jbe popa push popa jb jne add pop pop jbe popa inc jo xor add jbe popa push popa jb outsl fs push jbe popa push popa jb jae inc add pop pop jbe popa push popa jb popa je dec gs inc popa insb insb dec add pop pop jbe popa push popa jb outsl jo add pop pop jbe popa inc jo xor add jbe popa push cmp je xor add jbe popa dec popa je dec gs inc popa insb insb dec add pop pop jbe popa push popa jb gs bound fs data16 imul popa je outsb add pop pop jbe popa inc jb inc outsl jo add pop pop jbe popa push je dec outsl jbe add pop pop jbe popa inc popa jae dec bound ljmp add jbe popa push jne inc js je xor decl insb insb insl jne add pop pop jbe popa dec popa je dec fs je add dec je outsb add and add jbe popa push dec xor jb add jbe popa inc jb push outsb insb outsl arpl add jbe popa push popa jb outsl jb gs add pop inc dec gs add pop pop jbe popa dec imul je add inc add pop pop jbe popa inc jb gs bound add jbe popa inc jb gs je add inc add add add push inc add dec add add (bad) xor loopne sidtl add add mov add inc add add add add add adc add rclb add inc add adc add adc add add add add add adc add add jle adc add add add adc add add add adc add add add add adc add push mov add add add lock add add sub add and add add add clc add add je js add add add add add and add fs je add add add add adc add add add adc inc add shrb jae arpl add add add add adc add add add adc inc add inc add adc je adc add out clc adc mov (bad) fsubrs loopne and xor pop xchg ret push imull pop mov insb mov (bad) cmp mov xlat mov jle sub adc inc jae pop les shlb hlt ss imul imul or add inc mov nop dec push and push mov jge daa inc pop pop mov jae test stos mov (bad) in loope pop cmp arpl mov mov dec mov adc xor (bad) ja sub xchg fs in das test mov dec pop sbb cmp leave sub xor sbb sbb mov int3 fs push call fisttpl cmpsb and scas add dec pop jp mov jmp (bad) mov push push push sub lods test or add cltd lods mov push rcll inc pop andl mov dec mov xor imul mov or std adc push int3 ds dec sbb idivl lcall jle push fcomps sbb fidivrl add jg xchg call lcall int3 enter xor ss daa addb mov pop push fld add or sub sub inc insb div jecxz loope jae aam insb dec add enter xchg xchg enter push push (bad) iret push sti fwait in add cmp je (bad) sbb mov or push push mov or pop pusha adc stc cmp xor divl mov lods (bad) push mov cmp pushf mov neg inc lods lods push jbe push push push jns pop sub leave shrl jo adc mov lds cltd push ljmp stos (bad) push nop pop mov rcrb lods (bad) jecxz mov lahf ss push rol mov orl jo gs pop lods out out fmull les cld push movsb push fstpl (bad) enter mov fwait mov scas imul dec mov test (bad) stos sub clc add pop loopne ficom pop mov addr16 inc popa pushf mov in icebp mov lods leave add and clc mov xor in lods ret xor jnp pop aas jbe addr16 push add and add loopne rcr inc ret sbb fldl gs repz lcall mov fsubl add or pop add add dec pop popa fisubrl jo push or mov repnz jne inc lcall (bad) xor add movsb xchg nop mov dec enter pop pextrw sub enter in stos sbb (bad) push test sub es popf or or xor lea loopne bound lds outsb imul xor jno push jp and aam int3 or xchg je popf jge (bad) icebp push pusha repz ret jns cmp sub fs jo stos cs dec stos xor mov xchg xlat or test ss push loope xchg lret xlat add divl rcr pop and push dec jecxz fst and jl sbb fnstenv stos call shll andb mov xor sbb push int3 inc lcall aam es or push rolb sbb es call adc (bad) call mov cmp outsb mov les dec leave clc sbb fistp decl inc pop test sub sbb sbb enter mov popa hlt jo in pop mov xor push fadds call xchg xchg mov push xchg dec mov addl adc adc jno nop scas sub add add push addr16 fcomps push int3 push adc cwtl inc dec jns mov cmp sbb mov inc jl mov aad jae ret nop lcall in cs or push inc pop adc jb mov sarl fsubl pushf stos xchg or in xchg test xor jle push mov test pop movsb lock pop and jle jo mov es sub and add or pop insb jl push subl divb fistl fcomps push push pop call (bad) int3 addr16 and push dec add xor mov fs cmpsl nop pusha inc push testb mov outsb bound or je mov les jecxz xchg dec lods cld les fdivrl lea stos loope sub cmp or sub mov xor rolb fdiv mov rcrb mov clc iret rcrb rolb mov mov jno add add inc mov (bad) xchg inc mov shlb xor andb adc dec test jle (bad) xor cmp xor repnz mov rclb add sub cmp sarb jmp clc pop xor mov pushf in mov mov mov and push clc jne push dec repnz dec mov add pop dec dec cwtl rol inc sbb je daa dec prefetch or sbb jmp insb push test roll mov mov dec add int3 or and jl mov pop push aas mov leave xor jo or or or mov mov sub dec or push inc or cltd push xor push sbb adc dec and inc dec out roll push pop aam fwait (bad) aad iret push mov push into push or sub cmpsl mov adc mov push cmp push sahf and mov adc sub cmp out inc nopl sub push test pusha cmp movsl mov test add aaa xchg dec xchg add xor or sti sub pop lock mov es push adc xlat add xor mov (bad) mov rcll xor popf or xchg mov pop mov aas and sub (bad) pop xor mov or inc inc test pushf adcb push or sub add test add test fs and fcomp and (bad) or pop add ret mov test rol push dec test inc xor push or stos inc faddl push pop aad jg cmp or call xor push imul adc mov dec add addr16 repz adc in test movsb or push shrb (bad) fsts adc dec or inc (bad) adc add or xlat sbb or adc xor inc add inc push push and xchg fstl push inc testb mov imul sbbl jo cwtl add mov je push fmulp inc add pop sahf imul popa cmp dec and push test push inc cmc insl call or xor mov or add sub jnp push ja or lds push leave mov iret ret data16 sbb clc fimull iret pop jns jns jns leave data16 add mov adc or int add cmp adc dec sbb mov inc push or addr16 cmpsb std or xlat push jl inc cltd ss lret mulb nop add fwait and int3 cmp mov and pop into divl movsl int mov push lds pushf out aad ds das lods orb mov test nop les cwtl dec and push clc add sbb ljmp inc inc int mov xor add mov in pop fisttp pusha push inc lret in mov mov (bad) outsb lea icebp dec lcall ret dec mov push xor in inc push hlt cmp int3 leave jb xchg pusha nop push lea movsb loopne jae inc cmp mov or test loopne test gs or subb sub push and adc pop or xchg mov jmpw or popf xchg leave arpl mov jo roll nop mov cld add adc push lret lods xor (bad) sbb add or xor data16 adc sbb sub faddl ret xchg lds push xchg pop (bad) loope pop lea and enter pop addr16 addl push inc aam fcomps add add outsl cmp inc jb cmp and loope inc add je leave and mov push mov sbb xor in imul sub mov sbb push mov cmp push jne test nop xchg xor sbb loopne fdivrl add dec test inc ror sub add dec add sub das insb ret push dec rorl cmp mov push dec mov loopne jg mov inc xchg xchg push xor sbb pop dec sub xchg fwait xlat fcom xor xchg int3 xchg adc xchg and adc lock add adc xchg mov rcll ljmp sbb adc add cmp sarb mov jg dec and sbb pop mov jle mov cs pop mov aaa push dec (bad) ds lret and rol (bad) mov leave inc enter mov xchg (bad) add pusha adc mov test push pusha int3 outsl fstps lods xor (bad) jno stos push mov mov enter mov pop adc mov inc cli xor adc rorl (bad) push imul inc mov add dec add jb mov sbb xor or lea sub adc add dec test add jge mov jge shlb mov mov pop shrb mov (bad) jne mov xchg sbb fwait lcall in xor xchg pop add and adc adc xor jo jae popf mov lock push jo pop cwtl add mov subl sarl adc pusha jle mov or inc popa add stc insb inc pop add add mov or jns es pop hlt popa pushf pusha dec mov pop xchg cs cli out mov mov mov neg nop (bad) fcomp mov gs std popa mov push jmp add cld movsl mov rcl push (bad) call daa push xchg repz push push push inc add push ss mov push mov sub xchg dec jl lds xor adc inc scas adc sub sbb mov sbb fcomps imul sub pop das rclb stos add or movsb imul mov jecxz sbb addr16 mov cmp ss ficompl mov push test or add mov pop adc push movsb xchg jg lcall mov jp popf rorb mov xchg roll mov sbb lea and pop pop in test out or fs fadd insb arpl fwait outsb mov insb lock jo dec and and aaa or xchg outsl roll movl outsb in xchg pop cld or fdivs or lds test inc lcall jo xchg lret xor dec pop or loop and sti and push xor xchg jo mov mov je test sarb pop inc sub movsl or in add (bad) pop mov adc xor jno inc pusha inc in sbb add cmp push inc mov mov repz and movsl and cld call int3 jmp insb xchg ljmp adcl test jb push mov imul mov lcall cmp adcl push movsl cmp mov hlt lcall in inc sti dec cld andb cmp mov js inc add cmpl sub add dec adc popa shl adcl mov jle add jmp lcall push fs aad negb push bound xchg jl stos int in fild or in in jne push push pusha push xbegin jb and leave in movsb fnop or nop adc sub xor mov aad push (bad) mov xchg data16 lahf xor or lea cld fwait push pop lock test je xchg inc xor movsb push aam sbb add ret lds (bad) adc adc dec scas mov dec push aam xor sub inc inc pop dec pop push (bad) repz cwtl add fmuls fsubs (bad) ret ret sti sub test clc iret mov mov (bad) aam sub outsl push dec and or pop fmuls sbb fmuls mov je iret push fisttpl lock lock cmp dec or sub add sub subb ret push or fdivrl icebp cmp or jns add daa cmpsb mov add imul mov mov or xor sahf add mov adc xor inc push inc dec push xchg add lcall dec dec dec pop inc gs inc jae dec push roll and add pushl add fwait push aaa in jg inc dec arpl popa fs data16 popa outsb add xor xor add xor mov add or xor jmp imul ss and mov and mov inc adc and (bad) xadd cmp insl ss xor (bad) pusha or jbe imul push add push and add and or xor and sbb lds and inc popa sub add sub push pop jg xchg add or jnp scas mov lcall cmpsb fnstsw fwait pop outsl insl bound loope hlt es out adc dec test cmpl or and inc cmp push dec pop dec or and or mov call jno imul popa inc and rcr jb test loopne andl (bad) jns dec aas and inc rcrl add dec lahf mulb jae outsb push arpl inc pop cmc mov xchg xor js or or sub mov push dec adc adc arpl lds mov xor push xchg andl jno stos or pop push arpl nop xor fildl nop mov inc adc roll gs mov mov dec in das cmpsb add or loope pop inc arpl push cmp sbb push dec jl add xor jno imul xchg jbe sbb jns outsb sbb icebp xchg add push outsb xchg cmpsb mov fdivs (bad) enter inc pop xor fwait push xor pop xchg mov mov add (bad) mov fadd (bad) dec jbe pusha add pop add int3 add dec rcll sbb add cs shl int jmp add dec shrl call pop add mov push sbb adc add mov cmpl es cmp sti dec adc nop (bad) (bad) mov mov lcall cwtl or insl and adc xchg jp fdivs not pusha repz lahf (bad) xor sbb xlat lock push sub les xor xor cs mov cmp or xchg cmp sub aad add xchg subb xchg cmp push push sub cmpsb mov sub mov stc ss mov pop pop jge ljmp push lcall cli dec sub imul stos lahf mov insl jne std aad jge xor add and jp jmp dec rol xor repz insb push js mov incl xchg or cmp icebp outsl push dec sub add int xor and xchg xor sahf ja pop push adc and adc add cli out sub adc fistpl lgdtl das jle push ret popf not pop sbb movlps push mov xor lock add cmp div mov call lahf lock mov adc mov dec and cs loope (bad) lock testl add jb,pn jb xchg ja and je das out clc adc xchg test add add add pusha mov lea push or jmp nop nop nop nop nop nop mov inc mov inc add jne mov sub adc jb mov add jne mov sub adc adc add jae jne mov sub adc jb dec add jne mov sub adc adc jmp add jne mov sub adc adc jmp xor sub jb shl mov inc xor je sar mov jmp add jne mov sub adc jb inc add jne mov sub adc jb add jne mov sub adc adc add jae jne mov sub adc jae add cmp adc lea cmp jbe mov inc mov inc dec jne jmp mov add mov add sub ja add jmp pop mov mov mov inc sub cmp ja mov mov xchg rol xchg sub sub add mov add mov loop lea mov or je mov lea add push add call xchg mov inc or je mov jns movzwl inc push inc mov push call or je mov add jmp call mov lea mov push push push push push call lea andb andb pop push push push push push call pop popa lea push cmp jne sub jmp 