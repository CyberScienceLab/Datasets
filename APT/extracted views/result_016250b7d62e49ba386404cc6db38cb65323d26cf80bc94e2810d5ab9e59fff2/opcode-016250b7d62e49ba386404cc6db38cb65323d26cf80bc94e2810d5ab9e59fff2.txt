pop mov lea jns add push xchg jno push dec rolb inc mov or sti xchg pop add and test les jnp mov (bad) popf outsb add cmp and lods xchg add jno cmp and jne xor pop sub dec dec ja push jne cmpsb mov aad or loop es mov or xchg and sbb leave test push jbe mov fisubrl stc lret cmpsl iret jb mov int mov test mov imul pop sbb pop xor imul adc repnz sub loopne mov into push out (bad) xor or push addr16 pop test cld fld jbe cmp lds mov mov xor inc bsf bt mov cmp and bt call lea movsbl lea pushf call pushf pusha pushf lea jb push shld rol mov add btc mov test clc shl push movb pushf pusha lea call adc mov stc bt bt cmpb call mov pushf ror bt mov clc test bt repnz push jmp bsr pushf bsf mov call jmp add mov add loopne add mov add mov add icebp mov add or adc add stc mov add int3 or sbb add add add add add xchg xchg or and add or add add add pop (bad) add loopne add mov add or xor add sbb add add add cmpsl xchg or cmp add and add add add cmpsl xchg or inc loopne add add rcr pop add push lea jb jmp mov pushl popl pushf push pusha push pushl ret lea jae mov lea call adc call stc add call not pushl call add pushf pushf call add inc ds movsl movsl popa xor inc dec inc fdivs mov mov icebp mov cmp (bad) fnstenv imul loop out and adc movsb pop cmp mov mov rcr jmp sbb je loope sbb add inc lods mov pop hlt jae xor rol push cmpsb ljmp mov add cmp (bad) repnz mov lock ret jmp push (bad) mov or int cmc ss cltd push sarl arpl arpl pop xor adc xchg sbb daa mov xor and (bad) adc jl sti pusha call call push lea call pusha pushf movb lea jb (bad) hlt shl movzbl lea shr mov movsbw btr call lea jb adc push movzbw shl mov shld shl bts setle mov cmc shr lea jae push adc pushf test cmc sub pushf bt jmp not pusha mov lahf push pushf bswap lea pusha lea call pusha pop movzbw mov mov push movl push xchg pusha lea jae not push movb call adc pushf movb jmp add or bt stc mov rol call clc stc cmp call pushf jmp lea xchg rolb inc add jle dec je outsl adc xchg ret push and ret scas insb mov push mov jns lods jle data16 push repz clc xchg shl mov in mov mov pusha imul fwait sarb in test pop rcrl jnp je cmp ja xor pop push lcall or adc mov imul jnp pop fidivl roll mov popa cmp ret mov aam mov sub ret daa pop sahf adc (bad) xor rcrb popf xor mov rclb fcmovu pop cmpsl mov pop aaa in in loop xchg fsub in and sbb enter and mov or cld push sahf add xor mov jl sbb testl sub loopne mov inc xchg into std push int3 jns mov stc pusha xor add or js lods push xchg inc xchg jno fs mov push push adc jnp mov xor xor mov jmp (bad) je loopne fwait mov sbb mov push cmc xchg movsl push lods cmpsb push mov sbb stc pop cmp clc mov mov cmp clc nop (bad) out aas adc mov lea mov or xor dec pusha hlt pop cmpsb jge pop jp or jne adc dec cs mov stos fimul mov test lahf cmp cmp sarl xchg add add or jge ljmp movsb les dec ret pusha lds inc (bad) insl pop jmp push scas jne xchg push fnsave out and dec ret add imul cwtl jno mov add out out scas xor rcrb sahf sub aad cmp sub push mov insl iret push or shl mov loope (bad) xchg cmp cmpsw ret das inc mov call adc aad xchg push insl aam fbld movsl sbb daa fsubs cmp push mov insl fsubs cmp add bt mov clc call push pushf lea jbe btr sub pusha mov lea mov sub jmp cs adc roll inc aad mov pusha insb mov inc inc push mov adcb mov scas jno (bad) dec fwait andl xor cmpl dec fldenv xor xchg (bad) jbe rclb std inc je ja push andb cmp mov imul outsb lods pop mov lret rorb (bad) lret icebp das cmp dec jmp loope aam push in mov int cmpsb and (bad) cmp es int3 add lds push mov dec lods add pushf test jmp dec mov call fsubl rolb faddl inc adc in adc dec (bad) pxor xor sbb les loopne push rcr int add inc or push jp arpl sub loopne aaa add stc mov or fnstcw mov adc loopne int3 inc lret push cs in call dec jmp loop add ss xchg jl jl out cmp mov cmp mov sub fsubrl sbb lock mov lret push cmp adcl aad dec mov push cld faddl iret ss mov fcom ss fdivs and daa sbb addl push std sarl push inc loope xchg dec xor sbb push add test les jbe xor mov insb xchg jg test mov lock imul lock enter mov xor stos sbb xor sub xchg ds popf das sahf sub mov jns sbbl enter (bad) cmp fsubrp xlat dec mov pop adc imul imul fs push push fnstcw dec mov add push inc lds ds bound sahf pusha and (bad) fldl add jb ja pop icebp dec xor movsl fnstenv jp,pn mov inc and jg rep jmp push mov call sub push cmp jmp pusha shl pushl pushf pushf stc add call lea jb shl mov clc movsbw shld bswap mov bt cmc shl pusha mov movb jmp clc cmp pushf call push pusha call lea pushf movb mov call int add rcl (bad) into sub mov cs mov and in hlt xor into decb out pop push jecxz mov sbb ja adc inc cmc inc popa shl arpl ljmp add push pusha hlt scas pop cmpsl pushl leave jo punpckldq push adc aam dec andl je push pop mov add inc jl mov iret or sbb add inc xchg ret daa xlat dec repz aam aad xor jecxz cmp adcl shr xchg out xor leave aad fdivs sbb xchg test (bad) lods sbb in test cltd mul out jne xchg adc pop lret pop add loopne neg push xor cmc jmp adc ficompl push inc add xchg test pusha mov cwtl bound sbb mov sahf mov movl cld lock adc je dec mov pushf push pop xlat sahf adc inc int3 dec adc sete sbb mov xor insl pop push xor lcall mov adc jne (bad) fsubs rolb ds cmp lret inc loopne xchg xchg or xor ss push adcl lods inc sub xor pop (bad) xor loop fsts mull pop loop jnp or adc dec mov jle shlb mov add add add sbb add add add add add add mov add add test add add add add add or add add pop sbb add mov push add call mov add (bad) mov add fdivl and rcl repnz or (bad) push lds add add mov or test std add inc add movsb sub mov (bad) out adc loop push mov mov push xchg fisttpll xor loopne shll scas mov mov xchg (bad) sub push stos push mov das clc bound adc push outsb pop rcl inc aaa and push in pop inc jmp pop dec lahf nop (bad) mov or cli stc js adc out mov je inc ljmp mov mov movsb sbb and aam iret mov xchg iret aad sub add and test stos inc out mov das inc subl fdivl inc push rclb pop aaa (bad) inc nop adcl roll js mov mov push pushf je imul mov rol xchg outsb xor leave sub test cmpsb test shl pop mov xor mov outsb mov imul mov pop in jp ror aas adc push jp pusha cli ffree cmp sub jp sarb pop push sub mov call xlat test mov jns pop dec lret or jae fcompl enter dec and (bad) iret sub loope out leave push mov sbb inc gs (bad) adc fwait hlt push ljmp lcall or dec sub fisubr mov dec (bad) or mov lret jno xor xor jle icebp and xorl adc rorb mov js pushf or sbb dec psrad xchg mov mov jmp out insl ret jecxz gs out je ret cmp mov int3 dec jne dec lods and (bad) iret push int orb mov and out cmp or pop add mov jae pop (bad) jg and mov test jnp inc cli leave clc push insl mov stos and cli cmp and idiv inc jg and scas add aas adc bound sbb stc dec orl xor add cmpsl cmc cmc jge jns xlat cmp add scas and push jecxz in add dec aad cltd in mov jae pop jmp les leave in cmp pusha loop fmul addr16 std mov fdivrl icebp and push stc inc and sbb push scas insl ds jge in jns jmp lcall cli int mov inc clc pop pop pop aam cmp add or into xlat shll xor inc mov lret xchg shll inc sub das test mov rcr push mov or mov scas pop ljmp sub cmpsl ficompl int3 fwait in leave clc shrb call mov loope jge xor add push xchg dec mov add mov add in sbb mov cmc mov mov add sub xor stc pop push mov jo insb pop popa sub fisubr pop sbb inc addb inc sbb lret or test add je sbb fwait sbb in cmp mov ljmp push ss sbb fs lahf mov mov clc mov adc fwait stos popf fidivl divl mov cwtl scas sub mov inc inc xlat test or mov aam sub repz push mov xchg movsl fist (bad) pop daa jns jp inc or pop in cmpl in (bad) gs mov jle mov push xor leave jns lcall mov adc dec in inc push inc push hlt jmp fs mov inc mov sub lret loop mov pushf repz pop es mov popf lock mov mov add out adc jnp ret push stc enter cmp cmp es jg mov mov mov mov add sahf push into outsl lret mov push dec insb jb call sub xor js out sub or push xor push gs push lea test cld cmpsl adc add mov push rcrl les mov cmp or mov cmp mov nop popl inc dec cwtl inc or jp (bad) xor jmp mov jp shr xchg js xchg neg xchg sbb fs es mov and jp rcll (bad) (bad) xchg or bound jb into divl insl dec sub cli arpl pop adc or jnp push ds cmpsl lret shrl fimull hlt out (bad) lock and cmp jmp mov cmpsb mov lret inc cs sbb sbb mov pop ljmp sub rcrb fwait pop pop mov or lds clc and ret push xchg daa popf data16 lods pop daa fwait (bad) es outsl mov adc pop mov xchg movsb (bad) or sbb dec inc in add lahf adc pop xor jb rorl fldt subl sub fsub pop hlt inc jae mov xchg jecxz or sarb int fwait ret or ret (bad) aaa stos sub aas or adc inc push (bad) jo shl aad popa inc mov mov push sbb pusha aas test inc out nop fisubr push sbb jbe bound and lret push xchg cmp out jle outsl mov sbb pop sbb sbb mov arpl into sub mov ds mov adc fs iret sbb out cmp outsb call dec fwait add flds hlt (bad) lods nop scas cmp icebp das into pop xor push pop loop sub fadds test and xlat das ja xchg fcompl and subl jle and fwait dec ja adc fstps mov mov cli cwtl mov push xchg adcl flds data16 push ja arpl fldenv mov mov adc xchg adcl hlt dec mov test add scas (bad) cmc int mov lods sbb (bad) adc (bad) jnp fnsave mov xchg mov aaa mov test xor mov push sbb xchg into adc stc jle (bad) movsb mov aam stc adc mov sti cmpsb mov cmc (bad) shrb jnp jmp lret mov aad das push push jno cltd aas je (bad) sbb inc mov into and divb xchg and mov popfw (bad) push movsl gs stos das in xor enter pushf inc test repz sbb push jle add imul mov add and sbb adc or mov jb or xor cli xor nop add inc (bad) mov test call dec mov or sbb and or sbbb sbb aas and fistl sbb push movsl fisubr add jae adc ss rcll rcll push jns ljmp jbe mov xor mov push pop jge call shll sub push mov sbb aad lret or repnz (bad) xchg mov xchg add setle jmp sahf idivb ret cwtl pop pop pop pop out sbb or xchg pop mov mov xchg repnz xchg pop pop push arpl loopne xor (bad) incl imull das rcll ja adc mov pop sub addl test loopne add dec mov ss or imul out adc out mov inc xor jge xchg nop aas push sub sub jge pop rcrb push dec lea outsl xchg mov jne iret pop (bad) cmpsl xor test cmpsb xor dec icebp and jb daa in cwtl std lods dec jg (bad) jecxz bound sub xor aaa imul mov hlt inc jmp dec inc add lds (bad) push dec icebp cwtl mov mov movsl push sbbl xchg pop inc mov sub add jl enter in sub in cmp xchg xchg cmpb add inc mov cltd (bad) push inc jecxz ljmp pop int pop jg sbbl mov imul lock mov repnz into in push sub mov and int3 mov and outsb sbbl and add popf js or push hlt insb incl dec cmpsb lea scas fistp or sbbb fisubrl jge lds dec dec mov mov inc ds jo xor scas nop out pop (bad) xchg inc out mov mov dec sbb xchg inc jo cmp lock repnz (bad) jle add ret cld jle push cwtl repnz or ror sar mov mov push push add and bound push inc js leave rolb lods in lods jo mov mov (bad) mull bound cli out jo mov es and out jb stos mov insb scas cmp dec sub mov push (bad) inc daa repnz inc (bad) test adc lods std sub jmp in in pop cwtl cmp into pop cli out xor sbb xchg xor sub adc jns mov inc mov jbe dec bound scas push mov fstl jl js cmc sbb cmpsb push mov adc loop adc pop clc add pop dec or in xchg leave es mov lea cmp sbb and pop jo dec add repz out mov rorl imul ficom aad cld push jne mov push adc jecxz mov dec pop xor add push add clc ror inc cmpsl leave aad aas jb xor fadds std dec inc mov cmp jmp test add add mov (bad) bts mov (bad) cs adc stos pop loopne xchg adc inc jae repz sbb mov fsub int3 ds push push shll push loop cmpsl rorb pop shlb mov daa pop fidivr push scas mov in cmc sbb mov mov test loopne mov jp cmpsl lea fsubrl cmc les sbb pop push in daa xchg rclb aas lods push mov lahf or mov and and fadd fsub fisttpll fisubr ret dec adc pop into sbb or mov xor stc or js clc xchg jle ss sbb roll pop push out jecxz (bad) or cmpsl insb movsb inc sbb cmpsb push sub leave xor pusha int3 cmp imul xchg test push sub popa lods dec dec call dec ja jb iret fsin fimull sub daa test push test lahf push pop mov (bad) bound nop lods cmpsb sbb out (bad) adc adc lds pop hlt jg loope adc lea pop xor xchg or aaa add int and cmc dec xor scas ds mov out repz pop push xor mov cwtl (bad) jne scas cmc lea (bad) out mov pop or es test jne testb inc add mov fdiv pop sub lcall insb lock push mov inc test inc ret mov inc jnp xchg cmc clc scas dec or dec (bad) cld outsl and and loope fwait out inc pop mov in test inc or mov sub enter xor test nop popf or xor cmp xchg sub (bad) fisub popf mov jmp adc xchg imul sub imul xchg add pop mov cmp xchg sbb sub add mov lea movb movw jmp mov push inc movsb cmp cmpsl dec inc gs push inc mov push adc bound fs mov lods mov mov push nop (bad) xor mov jl cmp dec (bad) mov sbb sbb das cli add negl mov xchg div std xchg into sub push addr16 jle fsubl sar pop xor add cltd stc sbb dec jbe cld mov test ret mov ficompl mov jge mov stos icebp dec xchg imul shld xor bsr lea cmc cmc adc btc push add push bt bswap shr clc mov pushf mov pusha stc clc jmp stos add jo push inc out movsl add insl or cmp adc mov or int3 xor rclb icebp adc push pop lock fsubrl loopne mov sbb mov jg and (bad) push ja shll push add cmp stos pusha ss in ss fs fs cmp or cmp scas mov cmp and adc (bad) mov sub xchg scas xor loopne mov bound xchg aad pop fnsave xchg dec sahf in inc mov xchg dec mov shlb popa lcall scas xor clc lcall cmpsl lea xchg or in fwait adc outsb ja cmpsl iret (bad) movd xchg jmp add int stos (bad) dec mov call mov sbb rcrl sbb and js adc nop or aad push fstps jno jmp mov xchg push stos sub push inc je repz fninit pop outsl lahf jnp mov dec lcall test jns fstl sahf pop push out cmpsb out pop adc fistl ss pop fwait arpl imul jmp jno add xor jb jl jg push out sbb push loopne lret sbb test and or loop push imul cmp icebp push (bad) in sub (bad) shl or je and aad imul mov jbe xor pushl stc cmp lea pusha pushf push pushf lea ja clc pusha call les inc negl test rcl cmp pop mov inc sbbl mov or fstps dec mov dec and mov sbb pop shrb out adc rclb nop pop cmp dec pop addl aam mov fdiv (bad) cltd xchg lahf shr jbe mov pop dec cli cmp stc movl lahf jp add pop in nop push repnz mov es imul cmc (bad) int3 sbb mov fsubr imul xor popa lods jmp mov into sbb stc pop loope mov mov pusha pushl pushf stos call cbtw addl in dec mov mov and xchg lret nop shrl pushf jl pop mov loop into adc dec loop cmp pusha stos lock je hlt add js dec bound rclb sbb movsb jg jecxz je push stc sub mov mov cltd xchg dec push outsb mov inc ds jecxz and cmp cmp or or sbb and cli xchg imul fisttpll test add push pusha xchg mov pop mov cwtl movzbw movzbw mov lahf setae movb setne lea jmp lea je pusha pushf pusha lea jmp sub not lea pushf lea call pusha add add sub dec and daa pop movsbw pusha mov pushl test clc cmp mov call pusha stos pushf movb pushf lea jmp mov call add clc cmc cmp jmp aaa shll sub xor cwtl cmpsb insb arpl and (bad) dec in sbb imul cli xor mov inc dec lds ja stc sub pop pusha leave or lret dec xchg test loopne into jb push imul sbb or and mov lret out in xor xchg adc add adc inc out push and or mov (bad) loop mov lods and mov arpl dec imul mov mov out pop lods movsbl mov arpl cmp mov (bad) ss mov xlat aad adcl cmp nop inc push jbe and xchg rcll pushf outsb int3 dec pop pusha les (bad) xchg outsb push lods pop lret pop (bad) (bad) lahf mov faddl or aam cmp lds pop push sbb int cld mov fstpl and dec lahf icebp mov sub and mov xor out mov sub adc addr16 xorl ret pop stc clc xchg imul fdivr (bad) add pop jp loope fwait adc sbb pop pop (bad) frstor pop pop aam ret dec add out add test jae ljmp push pop inc imul jle xor test sahf mov sbb aam cmp (bad) xlat and test push in loop jo inc test (bad) movsb aam sarb xchg jl data16 or adc lock mov cmpsl xchg xor pop and clc aaa inc adc jbe inc xchg jns mov mov movsl fwait pop nop imul xchg pop sub les pop mov push hlt aad adc push sub pop int xor pop ficom ljmp cmp in and stos jmp xchg repz jb inc scas fmull inc aaa sahf xor fisubrl cld cmp repz jge in lcall lock adc xor out dec fistpll sbb mov jnp mov xchg test jl pop in ret stc lock cwtl jg cli into out cmp das pop xor xlat xchg icebp pusha mov mov push dec cmc jne std imul fnsave jne xchg adc add pop push into adc jle lret sub pop test dec rcll (bad) jnp insl xchg add jns leave cmp xor pop lcall jo xor lahf out fwait lea ljmp mov dec mov adc or mov push pop rolb outsb je gs dec outsl movb pop push mov pop pop lods mov and out in fucomp cmp sbb fbld scas je outsb mov push jbe jecxz and adc aad data16 stc xor shlb jg js dec jg dec aaa imul imul test sbb outsb jp,pn out push push sub adc orl in add xchg out xor pushf jb jp roll imul (bad) dec push jbe repz or mov iret repz js xor imul xor pop cli sbb sysenter push es (bad) adc sbb bound or xchg inc add inc push in out pop lahf xchg cmpsl pop cmp in test xchg popf mov mov loop arpl lahf arpl cmp jle push in jmp jg or js enter sub mov jmp sahf push mov dec jmp or fisubl not dec mov push (bad) sub push aad or jmp push iret fstl pushl ret xor xchg cmp add xchg out popa stos xor xlat es sbb outsb cmp (bad) mov or cmp mov es dec lods dec cmpsb into jns data16 fbld adc sbb sbb push xlat shr mov in push call and pop inc pop push push mov xor xchg dec bound add push pop insl xor pop cltd out push cmp add call out nop mov cs stos test int3 inc jbe nop orl push cmp xchg iret into insl rclb or (bad) jne lahf sbb dec fdivs xchg cmp hlt add ficoml int ret or dec mov mov faddp dec mov js xchg mov pop inc out (bad) pusha and push lock lods or add mov and jmp push in addb jg push and xor mov ljmp lods jne jne adc jb lret or xor pushf inc int3 fidiv sbb test imul cmc adcl mov sbb aaa push lds inc ljmp stos je (bad) popa and orl outsl punpckldq dec inc js (bad) out and push cmpsb into cmp mov dec lock jge cmp pop or (bad) xor pushf (bad) mov mov or push setb mov push pop cwtl lea movb jmp pusha pushf pushf mov jmp mov pop inc scas ljmp ja add (bad) fnsave movsl fwait mov dec dec pop and shrb setp jb fisub sbb xor cmp mov stos roll es insb imul xchg repz daa cwtl dec sub dec in cmc icebp dec mov or jl mov test adc fwait imul ss jbe pop (bad) xor xor push dec add xor mov imul lock int xchg or loope inc ds pusha sub arpl sub xor add call lea jne lea movzbw pusha movb cwtl lea mov not mov setle call jmp lea jb shl lahf bsf cwtl cmp movsbw sbb setle movzbw movzbw lea lea lahf lea mov call movl pushf pusha jmp push xchg mov push xchg call lea call jmp cld mov inc push jne push and xor dec fidiv mov cmp pusha scas scas inc popa inc jge (bad) mov dec into femms lods (bad) mov jno cmp xor dec inc out cwtl out popf pop adc test movsl xor arpl (bad) decl fdivrs popa (bad) ror sub je movsb mov or xchg rol call sub in out dec dec push xlat jne sbb push repnz jle jbe scas sub test mov add dec cli das inc mov ja fnstcw jp cli add jecxz xchg nop out leavew inc divb cmp sub call cmc (bad) decl and bt pusha pushf test pushl jmp jmp shld bt mov pushf pusha cmpb movb jmp call xor pop mov pop inc (bad) mov and nop push xor sti jnp cmp aam (bad) clc aaa cmp sysret ja pushf jmp sarl dec push pop or cmp jno loope lods sbb inc sti or rcpps push enter sub push dec add lock xor mov dec enter mov arpl test dec (bad) xor push sbb sbb insl mov sti mov jb inc xor and sbb sbb mov mov push ficoml and cwtl cld outsl jae and jne xor call xor movl pusha call mov shl lea call pop ret add push push lea jmp dec mov sar rcl add push mov stc xor cmc cmp pushf repnz mov lea jne bt bsf mov call push push push call pushf pusha mov mov push push stos pushf pushf mov pushf lea jmp call push bt test movb pushf lea je clc add pushf cmp clc pushf cmp pusha movb lea jb jmp xchg pop xor sysret inc mov cmp aad gs pop ja cmpsb lcall ret jecxz out ficompl test xchg jne aaa inc mov dec jnp lret cmp xor popf fldt xchg mov inc inc xchg lods sti std pop rolb ror pop push cmc push cli push fldenv jae call movb cwtl movsbl push jmp mov movl pusha mov push pushl pushl ret icebp cmc cli jp pop inc in ja pop xlat out in xor cmp pop iret ja jns in sub and les nop jno aam jb xor mov adc jmp das pop cmp movsb adc int3 (bad) sbb mov les pop and in loop pop jae jnp loop cld cmp leave mov sub xor push fisubrl mov jae lea xor mov fldl dec popa mov cmc and lea test dec fistpl xlat sbb inc and mov pop insb iret outsb popf jmp inc out cmpsb mov adc jp or sar xor jmp mov lea jae stc pushf call movb lea ja ja setne rcr sub and add inc rcl rol jmp (bad) inc pop aaa fisttpl repz pop adc repz arpl jbe cmpsb pop cmp pop jmp add icebp (bad) sub mov sbbl imul mov pusha or mov fnstenv xor pop pop cltd jno (bad) iret mov mov sbb fimull popa bound movsl sbb cmpsl sub loopne pop lock fs fisubr inc push cld cli clc pop and xchg sub cmp stos sbb insb nop sbb scas cmp jb ds dec mov sahf xacquire pop inc dec nop hlt sub cld add scas (bad) dec fwait xchg cmp popa mov pop shr xchg dec add pop push mov decb sub pop test icebp mov out (bad) lret jecxz shrl mov nop sub pusha mov outsl xor cmp aad (bad) mov fbld and cmp mov and dec inc cmpb test jmp adc sbb loop xor bnd in mov lahf add in dec mov in shl ss mov aaa jge or enter push add out cmp push clc add push sub pushf push push lea jne (bad) repnz sub inc mov lea mov rcr cmc sub movsbl mov shrd (bad) icebp clc mov stc mov sbb test mov cmc push clc call push movb lea jb btc movzbl rol clc shr rol not jmp mov pushl push pushf stos pusha movb lea jmp bt sub bswap cmc test neg lea cmc sub cmc pushl popl jmp pushf jp push or inc mov push and scas sub fadd ljmp daa outsl pop lods popa rorl push icebp cmp scas jmp bound sbb adcl loopne,pt fwait push pop xor pop sahf sbb loopne dec jg add inc adc out jne int je insb adc and adc push repz inc test (bad) adc lea sub cmp movsb and jns repz lea stos popa mov mov inc jmp jle sbb xor sub pop popa rolb cmp push inc and adc inc sbb push iret addr16 jg cmp xor lret nop adc ja push fidiv cwtl out (bad) nop (bad) xor shrb test out sbb jb sub ja stos push jb jns xchg testb in icebp sbb mov movsb cmpsb test mov movsl jle pop (bad) sbb icebp add push xchg xor or (bad) clc mov push out (bad) notb dec test pop inc and stos mov (bad) push adc sbbl (bad) aad cmc push mov (bad) (bad) pcmpeqw dec (bad) gs hlt adc jno dec inc add jecxz ljmp add lock xchg adc je into pop cwtl and cmpsl (bad) in leave ljmp jno cld or ljmp sub xchg jge dec sbb xchg fdivrs es in mov push mov inc ficom nop push and push icebp mov jbe mov cmc mov ljmp in ret and dec push xor daa test pop stos xlat cld jns cld inc insl sahf ja xchg mov jb test cmp xchg test dec std cmp negl mov sub mov mov or jb dec shll cmp jbe pop clc shr pusha call push lea movl jmp lea je clc jmp (bad) fidivr ljmp jg sbb xor mov mov into pop mov ds pop (bad) pop jecxz xor add out sbb xchg lret jae fldenv sub pop pop fdivrs iret and imul push mov lock cmpsl in inc and call jmp mov push (bad) mov mov adc shlb or mov (bad) xor fldl sub pop cwtl mov mov (bad) dec in jg stos ljmp stos imul cltd mov inc in or or sbb jecxz inc test cmpl fs inc and fxam jno pop inc out mov dec out int3 cld dec aam cli jo test cmc std xchg ja jno sbb xchg cmpsb (bad) jmp add or ja push in or and push add stos push jo lret pop rcrl pop mov dec addb das adc sbb addl or mov lock out cmp mov fadds popa lea inc pop mov popf das mov lea repz getsec arpl mov mov add cmpl add mov pop not pop btc or shr mov sub cmp mov pusha call mov mov adc inc aas les movb vmovups fist push outsb cmpsl jmp insl push mov cs lahf mov and stos stc xor test sub cmc push inc cmp pushf ret and pop jns and addr16 (bad) cmc mov push inc inc and dec imul mov lahf stos cld push test clc add into sbb pop inc lea lock imull movsl and dec sbb xor mov out mov inc inc mov call pop push jbe sub xchg test shl stos clc push dec inc std or je adc push inc fcoml add jge sub (bad) xor ret cmp jge loopne xchg xor jnp xor clc mov rcl lock loop lods rolb jmp pop stos cld push mov xlat push or repnz adc inc js fild or fstpt dec imul sarb push sbb imul daa clc jp ds or repz add mov movsl jge cmp lcall leave sbb jo and adcl xor aas sub add adcl rsm mov cmp cmc dec out xor (bad) lret scas adc pop scas adc outsb enter lahf bound dec icebp inc cli js (bad) pop je inc adc lret (bad) insl js dec dec jns push push or rol fwait pop stc and cmp scas in push cmpsb (bad) mov fwait arpl daa cmp mov push xor cwtl jle xor or jmp mov negl add ja dec lods mov cmpsb adc inc xor lret jns or stos or cs mov (bad) xchg pop (bad) push clc divb mov incl popf add push in mov sbb scas daa sub jne fsubr arpl xor (bad) xchg cmpsb rcrl xchg xor push ss push sbb out aam (bad) ret data16 test pop xchg xor jbe rcll pop inc mov xor mov jmp pop stos daa mov cmp mov pop mov cmp sbb or lahf dec xor mov add cmovge xor fcoml jle pusha addr16 jnp negl and fidivl cltd add and add ret add ja or repnz xchg jae xlat incb jmp push inc add rcr sbb inc (bad) (bad) xor loope shll lret int or lock or xor ds mov mov cmp push stc js in cwtl imulb gs aam dec sub pop dec (bad) or loopne daa fidiv or mov inc in and jecxz and test jge loope es and lret adc inc pop (bad) sub cld push je outsb push sbb fcompl mov mov nop jp pop ljmp sarb das inc lret pop stc jb xchg les jno loop imul pop mov xor les fisttpll out inc adc push or in push fdiv sub idivl dec inc imul mov jno or sbb cld jns xlat pop mov pop mov xor popa fistpll (bad) mov pop push movsl dec (bad) pop fidiv xlat test sti movsb negb inc cwtl xor shld (bad) imul aad pop add cs loop pop inc mov rcll cmp and cmpsl subl mov jno mov mov dec xchg loop jns jbe movl pop mov rcr dec ret xchg test and fild daa sti lods lahf pop pusha sub push jp and outsb bound add rclb insb into clc (bad) rolb js and inc movsl enter stc cmp outsl cmp pop stos sub sbb mov es in sub loope sbb mov xchg jo sub add ss cmp jmp js sti mov push idiv push dec inc mov inc inc sarl and push stc xor leave push xchg dec (bad) jge in bound push or add cmp lahf xor pop mov into int3 outsb add xorl inc inc add imul rolb addr16 xchg popf bound stos arpl imul sbb addr16 adc xlat xor repz sti adc sbb pusha movb pushl call push jmp lea jb push cmc cmp call lea lea and clc sar mov rol ror mov adc not sar jmp jno xchg xchg mov mull pusha lea jb ror pushf sbb btc mov bt cmp pusha pushf sub call not mov not pushf pushf lods data16 testl add lea jp push bt jmp lea je not lahf cwtl lea call pusha call pusha or push jmp mov movb lea pushf jmp mov pusha lea jb shrd jmp xchg push lds pop inc lcall jge xor jge jne outsl mov mov adc (bad) pop (bad) cmpsb push imul icebp or fwait sarb push mov ret adc mov lcall adc stos xlat push xor shrl push add rcrb push xchg add jge xor cs stc jnp lcall pop cwtl lods fs imul dec in lahf mov test dec mov scas insl mov xchg mov mov xchg fldt pushf mov mov ror movb test not call push pusha movl movw lea jmp movsbw ror sar setns mov bt cmpb call add inc gs gs popa addr16 add test xor aaa mov jmp inc rcl or test sbb ror adc loope add add aad xchg mov xor sbb cld jecxz fcompl sub jecxz jg jmp out popf jge pop int3 inc (bad) jno and cmpsl sub out add (bad) pop sub xlat das inc jne fwait arpl sarb rorb xchg sti xchg insb shrb jae iret dec push pusha fwait cli adc xchg xor call mov xchg pop out clc (bad) movsl pusha mov mov test lahf push add neg rol mov cmp cmp movb cmc add call add (bad) tzcnt rcl add sub sub shr bts rol mov pusha jmp movb pushf movb lea je stc sub call not call jmp mov not bswap lea mov call add inc gs outsl fs gs imul add mov imul dec fcompl in inc enter mov push pusha mulb sahf mov sub cmp aad xchg pop into out jns adc incb mov push xor xor pop or adc mov mov push jae fimull pop adc inc xchg fwait add xor push shr mov xor loopne ss ret dec mov sub mov addr16 enter sbb sub outsb cmc adc test jno pop popf and and js mov pop ficoml stos add fdivrs ds dec jge jne shr gs mov (bad) mov add ffreep dec inc daa mov insb out cmc cmp push lea jb cmp daa stc mov mov stc clc xor stc not xadd mov btr adc add bswap xchg setno setb not pusha pop lea mov lea call pushf pushf adc push movb pushl lea jb pusha clc call call call adc pusha lea jb pushf stc xor pushl test test setns lea jae mov call movb mov pushf mov movb lea jmp add inc gs outsl fs gs imul add push sbb inc pcmpgtb add mov lret sub push mov cmp mov jbe xchg outsb scas sub repz int3 clc jg out mov ret mov sub stos jae mov mov add fwait subb les cltd sub lret fnsave or or and pop pop mov push stos push fnsave jl xlat fwait mov imul fucomp cmp mov xchg push mov adc cmc mov jg push pop and jmp fwait mov je cmp stc test bt sub jmp lea call jmp jmp jl push xlat and inc ret mov call mov dec sub mov add sbb addr16 std cmp call fs adc mov add push insb lock jnp mulb dec cmp stc int3 xor cmc mov loopne mov pop out cmp adc lahf (bad) jae insl sbb lds imul mov cmp push (bad) xchg push stos pop dec outsb mov xor pop cld cmp or sbb xor cld sub xchg mov add lea call pushf stc add pusha jmp lea call pusha jmp lea ja jmp cmp movw push lea jmp call lahf mov inc ljmp shrb add dec rol das mov xlat daa pop gs or fcomps push push push mov sub insb mov shrl and (bad) jmp push movsl dec test mov push cmovg sub mov add adc jmp cwtl arpl add sub lcall icebp add ss insb xchg jecxz mov fiadd loop dec sbb mov std adc push rcl pop xchg push sbb cmp pop and sbb mov pop neg jle rolb scas xor sbb jmp test pushf call movb push jmp rcl not test pop not pop pusha (bad) idivl int out mov setg rcl movzbw not mov shld bsf not mov cmc bsr bsr add movzbl call cmc bt sub pusha cmp lea jae pusha pushf lea jae pushf pushf pushf lea jmp jb lret dec es inc fldl cmpsb repnz xor mov cmp adc mov out inc enter cld mov push in push adc xchg cld es jg test (bad) xor jae sbb or mov out lret add inc icebp mov mov dec leave jl lock mov clc in sbb loopne out sbb mov dec and xchg adc imul mov push mov fmull daa pop inc ret cmp and (bad) lcall and sub into mov fcompl adc (bad) iret fstps flds mov adc inc mov aaa lahf shr jmp lcall mov mov iret (bad) and and lret adc rolb lds cmpl hlt add add and lods sbb xor (bad) ss pop gs out dec cmpsl cmp jno adc push in shrl int pop push loopne ret jne out add mov popa (bad) or adcl in cmc pusha cmpl jmp lea mov pushf pushl lea call jmp test neg test cmp pushl lahf call sbb (bad) jg pop inc and dec vmwrite pushl (bad) cmc lods ljmp popa xchg popa dec inc rcrb mov pop and jl lock add xor push rcrb movb sbb dec mov subb scas fisub push neg inc jle out sahf jg pop mov adc add sub sub sbb xchg sbb ds lret pop aad jae pop in sub arpl dec adc inc in mov cmpsb cld cli aad popf lret in inc xor dec ret sbb xchg frstor and add aaa pop fisub pop xchg cwtl hlt push fild imul pusha push lea jl push jmp not or sub xchg jmp je dec lcall movsb jle sahf fsubrl call adc ret and or push pop aas dec movl outsb in inc xchg push xchg and cltd fldl in int3 xchg enter mov imul cwtl test repnz notb xor cmpsb jns inc lock push test adc insb test aam or fisubr ds inc mov xchg xchg inc insl mov dec jnp int3 mov (bad) push cmpsb lret cmp sub mov sub push adc mov dec jl xchg in and mov jne xchg jge sub fwait repz test inc imul or iret (bad) xor and mov cli lcall pop fisub and cmc insb sbbb jo inc push cmpsb pop std idivb dec stos loope mov stos push movb mov movw pushf pushf push lea jmp lea lea jne pusha not mov call call jle test pop inc btl mov mov sbbl scas mov lret in add pushf mov push mov sti push xlat push clc out mov or mov jb decl lcall inc xchg leave jno sti or in add int3 fdivs pop pop xor jno inc fcmovu enter sbb xchg mov std push insb mov add mov leave adc outsb hlt cltd lds insb adc imul cmpsl fnstsw jne cmp pushf notl (bad) inc pop rcrl mov stos incb sti shrd xor setl pusha lea add btr shr mov shl mov bt cmp repnz jmp cmp pushf call jmp pushf stos call test stc call clc mov btr add test call xor sbb and inc ficoml jg movsl inc lds cmpl sub cmp flds xor test push xor mov and mov xchg fwait paddusb mov scas iret push push or cmp sbb pop push sub xlat addl ljmp aaa les icebp cmp rorb int jns cli xchg lcall subl (bad) stc cmp push aam and xchg push cmp inc push (bad) jae push loopne mov cmp pushf lea jae clc sub movsbw sets lahf lea lea call pushf test bt mov test pushl clc test pushf pushf jmp std sbb inc je fnstcw fnsave cmpsl scas in scas fbstp mov cmp push out push jl rcrl xchg aad cmp lock sbb les xchg out pop std daa cmpsb hlt push out aas fisttpl cmc dec incb jle mov xchg enter out out rcrl ljmp (bad) lcall popa and sarl jo (bad) sti push xor push iret inc test loopne in in fsubs into gs popa aam (bad) ja andl jo sbb mov fwait adc int3 sarb lret out cwtl push or aam or pop sarl sti push pushf scas idivb test lea dec bound inc fmul xor add mov xchg lea push xchg push xor shrl imul bound push add jle pop loop sarl mov inc imul imul and xchg mov xor and cltd call andl xchg ds in lret out or mov clc cli ficom imul fcmovb repnz arpl push xchg jg push movsl pop inc (bad) xchg lret pushf xchg loope push aas psrlq out shrl int xor push iret sbb adc cmp mov sub jmp shrb adc loop xchg popa adc std pop out loop pusha mov mov aam andb dec das movsl adc test jg mov fwait data16 ja (bad) sub cwtl mov fldcw in jno sub in jo jle repnz jb dec add ret ret push inc bnd pop inc sub push pusha insb jb movsb jp jb and push adc scas mov and pop bound (bad) mov lea mov jbe mov cld mov (bad) das (bad) rorb mov loope mov or jae jmp js xor adc xlat xchg in insb lahf lods insl pop cmpsb sbb ljmp mov fwait std dec scas pop mov adc pop test sbb dec and rep and (bad) push cwtl shrb xchg mov adcl ds sti ds cmp jp fistpll out fs xchg popf jecxz lea mov pop fisubr pop inc lret fistpll inc (bad) in push adc mulb enter into cld fsubs jle sub mov mov ja cmp xchg dec stos sub xor mov scas lods inc stc mov dec or jg jns mov add pop push data16 sbb xchg lcall jbe fisub aad cld pop ret jle cmp mov xchg insb pop mov mov bound inc sbb in insl sub mov nop add mov cmp jne mov mov mov nop test or stos jb cmp mov jo aaa lea movsl shrl lods in loopne mov inc mov out sbb lods in dec aad repz std js dec aad aam inc mov and jo fbstp icebp dec cmp iret loope mov (bad) divl cli cmp add divb popl (bad) cmc jbe cmpsl fs mov and push and mov mov ja xchg aam shr (bad) icebp cmc or in jno adc cmpsb into jns xchg and xchg fdivs and adc cli aad lods repnz mov mov mov mov mov mov jae rcll js jge sub pop inc je icebp popa test aas aaa dec fxch xor aaa addr16 (bad) std mov jb scas imul mov rorb fs xchg aam add jbe pop and xchg mov xor cmpsb out jge pop fbstp dec arpl push pmuludq sbb stc jp sub adc stos stos mov mov inc pop loope cmc jbe push mov sti sbb mov mov sub insb mov leave lock lea pop or mov lds dec mov push mov add pushf mov dec pushf jmp ss xlat add pop inc pop cmpsb cli or or or lret cmp cs bound add mov and (bad) js add ss mov pop mov cmp push cld xor dec xor cmp je mov cs fstps test adc jg xchg sbb in add fist xchg test (bad) adc test pop cmp mov int push mov shlb stc or (bad) sarl sub dec xchg sub lock pop movsl daa xchg xor inc cmp jmp xchg adc inc mov push xchg inc arpl add sub inc inc dec inc fldl sbb sbb in xchg pop leave inc sbb dec sbb in loope xchg insb dec jbe lock into cmp mov adc scas jl shr pop pop mov les lods xor stos cmpl sbb mov sbbb pop repz mov pop cmp stos jp push xchg mov push ret lods loop mov daa add jl loop sbbl fdivp or add xor dec popa mov mov fmuls xor (bad) lea je pushf clc call pushf lea jne rcl sar bt and sub btc sbb lahf mov test (bad) lock rcr add (bad) lock mov cmp test call call lea jb xor aas lahf mov cmc bt call cmp sub mov pushf seto mov pushf pushf stos pusha pushf movb pushf lea jmp push (bad) mov pushl daa pop cmp lahf lret fbstp ja ljmp ljmp rcrb ret fisubl cs push test mov in fild rcrb xchg pop adc xchg sbb fdivrs sub pop xchg daa fdivrp dec hlt les mov (bad) into pop mov xor sub pop icebp lock sbb loopne addb loope cltd push ss mov in inc out insl les and mov mov mov sub test cld rclb mov sbb add and xor inc test xor movl cmpsl leave leave (bad) in sub mov push adc imul daa clc pop aaa iret aaa pop mov push pop mov fs lock add sbb je mov sti pop rcll (bad) mov out or ret adc scas fcoms lods cmc or inc popa mov xor xlat inc inc imul xor mov mov push call test lcall sbb divb mov jb mov fiaddl stos sti push lcall cld cli setae inc sub sub lods xchg pop add jecxz xorb stos pop or leave push jo ljmp jbe adcl sbb popf iret bound movsl cmp sub int sbb or mov (bad) pop push push test mov add mov fwait stos pop fisttpll mov mov loope dec movsl mov mov mov mov lret les mov pop xchg xchg std nop xchg daa cmp adc push jle pushf aaa mov (bad) inc arpl push and hlt dec sahf cmp pop jne aas into and insl cmpsb mov test push pop hlt arpl mov ss inc aas push xchg xor test lcall subl pop sbb sbb cmp mov xorb ja and or test xor stc jnp std xchg jg sahf pusha fdivrs xchg inc in mov lret sbb dec push push (bad) mov imul jb or mov inc inc mov in and mov inc mov pushf (bad) jo push xlat add pop inc pop fmull adc rolb popa mov in xor test fdivs int3 cmp sub mov (bad) out adc cmp xchg insl das push repnz or loop xor fstl sub pop or fnstenv push adc push popf adc and repnz vcmpss hlt xchg je add pushf test imul std xchg out (bad) js dec mov mov sbb lea fidivl sub jge call pushl push mov push mov pushf pushl ret cmp pushf mov clc bt cmp pusha call cmpb pusha push lea jne mov shl mov cmp add cmc stc movzwl neg mov clc add jns cmp mov cmc stc test push push push lea je test call movsbw not ror bswap not not bsr xor bswap mov xchg mov lea not push pushf lods clc cmp pusha not call xchg jmp ds xchg xor inc enter jnp sub or sub and shr push sbb xor jp ficomp ja,pn nop rcrl pop stc cmp lods xchg cmpsl data16 into sbb jle push and pushw sahf rolb es mov ja gs int3 pop into outsl xchg or sahf (bad) int3 xchg mov jge andl cmp mov lock xchg sbb push in xchg insb jmp dec jmp cmp inc lea xchg pop mov push mov mov adc insb (bad) jne mov mov out das hlt mov loope not call xchg outsl inc (bad) xor inc lahf hlt and xchg hlt push jl jl xchg test bound mov scas inc imul pop out xor sbb inc cwtl add push xchg sub pop mov jl push push out mov or negl addr16 aam lahf out cwtl pop (bad) pop out cmpsb nop inc mov ret out xchg repnz idivl adc xor and add jb (bad) arpl gs dec (bad) cmp cmpsl icebp repnz xchg ss add cmp add mov popa fistpl xchg mov jo rorb pop fsubs scas les movsb push pop mov js and adcb test push lret mov cmp dec fistpl add adcl test adc cld lods pop sub shl and mov (bad) clc cmpsl push adc push pop in shlb insl scas jecxz ja cmp (bad) xor xchg mov inc sub pop push shrl hlt dec lcall push jne jnp adc mov addr16 dec stc js in test lret cltd sbb (bad) or sbb pushf stc bt lea sub push cmc stc test xchg test push cmc rol ror push lea adc mov add not shr mov stc add push jmp pushl popl mov cmp movb call aam adc inc lds push pop jmp mov add leave (bad) psubq mov adc pop mov pop repnz je xchg call arpl pop arpl jbe aam rcrb fimull mov addb cmp jns sbb ret xchg test (bad) sub xchg xchg cmpsl mov or xchg xor mov adc jl push loope nop (bad) leave notl sbb and in cmp pushf in movsl insl mov sbb inc mov inc cwtl mov js call cmpsb (bad) xor (bad) pop xor xor xchg mov stc (bad) mov inc lock pusha movb pushl lea jae bswap bts rol jmp pushf pusha stc cmp or movw jmp push mov push lea push movl call cmp dec mov shl shr mov and sub mov pusha jmp repz outsl cmp inc stc repnz clc push in into sub bound lret lds iret ud2 dec scas mov arpl inc aas cmp mov in and (bad) repnz xor mov dec jl and popa mov jns mov scas push mov sub xor cmp mov out adc stos aaa cltd mov pop xlat push pusha sub inc lea arpl mov sti and scas xlat sbb jo or pop icebp cltd xor lahf stos push inc adc rcrb pop pop adc sbbb (bad) (bad) mov out jae xchg rcrb je mov outsl xchg mov add les add rol movsbw bswap setae mov (bad) lock mov bt repnz pushf pusha lea jne pushf pushf lahf movzbw movb setp bswap mov setl pusha pop movzbl lea call pushf lea jne add bts movsbw xor cmc mov stc seto rol add and sar neg mov pusha test pusha push pushl lea je pushf call pushf add pusha pushf push movb lea jmp (bad) out xor cmp fs mov les mov clc sahf jl inc push lret in add mov adc mov fdiv (bad) sbb dec mov js (bad) sbb xor in and xchg jno push repz mov pop and sbb fimul xchg mov sarb icebp push adc pushl in dec pusha lea jne cmc bsf jmp outsb test cwtl ds inc (bad) lods outsb cmp mov mov call loop xchg push out bound push cmp int3 sub push lods sbb icebp mov loopne xlat sub sbb dec int add add mov jae nop cmp mov fidivl inc stos test mov or je adc out or push loop jmp (bad) sbb adc clc dec test jae (bad) mov cmp into mov mov sbb pop mov mov cmpsb das mov (bad) xor xchg shll push jl lds ds inc add leave cltd pop pushl xor sarb push orl push jnp js loopne movsl pushf mov test ss testl insl movb stos repz sbb pop loopne mov arpl adc lods arpl adc mov mov sbb pop test fwait loope scas into dec inc mov (bad) xor data16 dec in daa ficoml pop shrb push lcall jmp push jmp xchg pop jg inc mov fsubl mov sub mov cmp scas jmp and pop jb (bad) in or pop lret cmp das mov mov or mov mov test cmc adc ss lea add inc pop add call scas adc push in andl pop add or add adc ljmp push add pop ret push mov pushf pusha mov lea jmp movw pushl lea jae aas movzbw pop dec lea lahf ror pop movsbl aad pushf stc mov stc bts neg shld cmp pop bswap mov pushf lea jb and dec bt cmp lea lahf push jmp mov movb mov pushf lea call pusha lea jg pushf mov pushf pusha lea jmp lea call test add rcr cmp pop movzbw stc cmp sar pop cmc cmp pushf push sbb mov jmp mov popa mov icebp mov ficoml in fadds clc sbb pop mov xor hlt inc pop mov jae ja inc pop test sbb xlat adc sarl out jo inc mov mov in and cltd mov test ret sbb stos mov push mov bound pop (bad) xchg in leave sub add push inc daa dec orb std decl sbb xchg cmp dec fnstsw movsb cmp (bad) psraw js dec cmp cmpsl mov pop int aam loope insl cld mov sahf sti lea test fldl and cmpsb mov jnp lcall mov ror cmp or xchg add aam call add sbb cmp and mov sub pop push sbb jmp mov out test or pop shrb ret rol jne adc or mov xor push xchg dec aaa push and popa add xor cltd repnz dec xor dec or lahf pop or cli stos mov sbb pop lock stos push sub cs movb lods push lods lret adc repz rcrb add ret adc xlat inc or je pop inc or imul add mov or sarl ss fwait jp das cli cmp inc out cmpsl addr16 jmp and out xchg jae pop pop into cmp jle and push rorb rorl dec rolb inc in or inc and push mov add sbb clc outsb xchg and mov aaa ja mov mov pop gs push adcl xor and ret inc sub mov loope lret cltd cmpsl pop jp pop xor jp push call mov lret vpmadd52huq je push jb jnp xorl jbe fmuls add add pusha jmp pusha pushf pushf lea ja bt sub rol movsbw add sete sub sub btr mov jmp dec call pusha push push lea jae push mov mov lea jmp mov pushl btc mov shl rcl btc sub pusha mov lea shrd shl ror push mov bt test inc sub adc cmc shr and lea mov mov shl mov cmp call pushf push pushl mov pushl stos movl pushf mov movl pusha pushf lea jmp dec shl inc pop inc gs add cwtl scas je insb mov cs mov push test jp dec push xchg pop sbb bound mov jae pop push jns xor or and movsl add or mov int mov pop sub sti outsl pushf lea pushl jmp mov lea jne pushf pushf pushf lea jb adc jmp mov not cmc shr jmp clc shl clc mov cmp cmc cmp mov call pusha movb lea jg jae xchg bsf inc or mov or push mov adc mov call lea jb cmc aaa cmp setge mov jmp pusha push movl jmp pusha movl pushf jmp sub lea jl repnz pusha pusha lea jne sar cmp mov shrd shr add sub stc inc bts test mov bt sub stc cmp cmc pushl test cmp push call not jmp inc push cld jl pop inc xchg push adc loopne lock push mov cmp push lret fs add sbb pop push add jne sahf xchg add test popa outsb stos test aam jmp xor mov outsl fistl out iret sbb xchg fsts imul pop stos xor leave cmp mov xchg stc cmc (bad) inc push fidivl jae es mov jl arpl cmp jo push sahf adc daa mov xchg repnz mov in pop sbbb inc pop inc repz mov rcrb (bad) test cmp add cmp cmpsb je push outsb mov mov inc dec inc mov in cmpsl jo push sbb fildl sbb cltd roll test outsl rorb sub enter fxch xchg pop jne frstor add dec scas movsb in sbb mov and jno push dec pushf sbb or xchg add xchg xor or mov (bad) mov xor xchg into push jns sbb test jbe repz and dec sub fiadd dec mov cld inc neg mov bt bt sub jmp test es add (bad) out adc pop pop imul inc add (bad) dec sahf adc inc add add sahf jge lcall add (bad) out jns nop xor inc add add cs fist xor add jecxz mov cmp xor inc add add inc add inc add add mov xchg xchg add inc add add ret cwtl out add inc add out cmpsl xor subl add rcr dec lret aaa sub add and push sub add add mov and jne inc add (bad) mov inc inc pusha das es add add mov sub add (bad) push hlt add mov xor add push cmp lahf scas mov add xchg int xorl das inc add lcall add inc add add cmpsb arpl cmpl sub add jg adc xor add cld lret xchg mov xor add xor or xor sub add call mov add mov fildll push jns xor add insl test cmp inc add idiv popa loop out add inc add add gs sub add imul cmp inc add mulb pusha lods lods lods jmp call aam add inc add add loop jb inc jp inc add add push sbb xchg mov inc add in ljmp inc add hlt pop mov outsl fdivl jmp inc add cld adc clc xor inc add (bad) pop lods sub sub add sub jbe sub add dec fistp xor add stc je pop out ret xor add dec hlt jb inc add mov xor add inc add add mov push sub add out mov xor add push shlb push add outsl aad (bad) mov pusha ljmp inc add (bad) lods lahf xor inc add add fidivrl arpl add add (bad) fisubr xchg inc pop inc lret xor scas push ret mov pop push movsl jbe jp adc jle xor xchg mov arpl mov imul test es mov cmp outsl cltd shlw arpl mov fnstcw dec jno (bad) xchg mov inc adc sti adc mov aaa jnp popa sbb (bad) jg jg sbb hlt push loopne xchg lods xchg add mov add loope ret and scas or call (bad) mov call pushf jmp cmc sub clc pushl popl bt cmc pushf cmp movb call pusha xchg pushl call mov jmp int out inc pop inc ficom or or div repz inc lret lret jmp fstpt dec ret fsts dec dec sbb xchg add rol push sahf mov leave or repz sub ss (bad) xchg lret xchg push xor and mov sub stos rolb fisubr and or sbb test arpl mov loop std xchg sbb pop jne xchg out push mov mov (bad) aaa and pop inc pop mov dec sub je (bad) (bad) popa push popf movsl enter repz fnstenv inc cltd dec in ss jb and dec inc popl mov cltd (bad) out pushf fistp aam push (bad) cmc je inc test and jbe cmpl int3 pop mov mov push xchg xchg mov xchg out sub jg and xchg in cmp nop ret xor pop mov fwait cmpsb jnp jp enter xchg mov add in js sarb xor pop jle and fildl adc cmpsb jne cs stos xlat lds std push jb stc sub (bad) xor or sbb or pop adc fldt jl cltd pop rolb jg les shrl insl (bad) ss popa loopne int3 mov pop sbb inc ficomp iret xor cmp cli test cs popf xchg repz mov adc ret outsl mov pop lahf cmpsl leave push aaa aad in imul jne loope out mov (bad) pop and (bad) psubsb pop inc aaa pop mov ljmp dec xor adc xchg xchg das pop cltd and fs mov mul ds lret loope add jg and nop lea lods out or imul xchg movsl jo xchg inc sub (bad) or sar ljmp jg paddq inc ljmp jns push mov idivb ss rorl cmp bound inc push aam ljmp dec inc fisub hlt jp,pn rcrb lods test stc test push xor pusha jmp push or les inc rcrb popf add ja push daa jno int push stos mov leave sub shrl xchg jns addr16 fs into dec cmpsl mov or adc jno cwtl ret adc adc fsubp lret sbb test fldcw and inc hlt mov mov xor push sbb push mov lods pop mov pop test enter dec pop outsb lea cwtl mov pop lods cmp xor dec arpl rcr mov mov jmp xadd lea bsr aam ror rcl sub lahf bswap push bswap setl push lahf push movzbw movzbw pushf pushf mov cwtl pop lahf push bswap movzbw mov call call add mov call add pop ret jmp jmp mov pushf push pusha movb pushl ret xchg push movl jmp pushl pushf lea ja adc cmp or sub rcr sete add cmc sub mov jmp push movw pushf movl pushf jmp mov not bt shrd call bsf data16 repz jmp call push movb movl pusha pushf push mov lea jmp pusha call movzwl add pushf bts mov pusha call cmc cmp pusha add pushf lea jmp movl jmp cmp shl cmc add pushf jmp call je mov dec pop inc mov sbb xchg xor cmc icebp add inc ja addr16 shlb sub icebp sbb jmp arpl fsubl xor fcomps mov mov cs scas cld rorb xorl pop xor ret into std rorb jb xchg in dec arpl mov pop push lahf pop outsl int3 (bad) cmpsb lds mov mov push fnsave sti mov (bad) test push dec fisubrl jl out pop repnz ss xor pop dec xor mov iret sub cmpsl stc sahf (bad) dec data16 sbb outsb int3 jg data16 sahf xchg test xchg sub xor es outsl ljmp dec pushf aad cmpsl mov and push movw lea jb bt cmp cmc stc cmp jmp pushf jmp pushl call negb sub in movsl popa mov stc cltd out movsl aad jmp mov mov test nop or loopne out dec ret mov ja xor inc mov jg movl sti fdivrs fnstsw mov add jg les jmp dec (bad) shrb dec je pop out ret loope mov jecxz xchg orps jno loopne,pn fstps pop or pop xor jmp mov push add mov and jo arpl jno push sub imul and adc sbb inc test lcall inc jb cmp add ficomp pop inc dec (bad) icebp pop mov test es push dec fs dec push cmpsb pop int3 aas js cmc dec push xchg cmp inc mov bound nop add pop test push aas or push gs fcomps jne mov xchg jbe mov mov std outsb fldt fucom addl pop jbe mov out lcall or push push mov cmp mov dec ja icebp push pusha mov int adc addb int3 call push and fxrstor rorl sbb scas (bad) cmp or jg push cmp pop (bad) test jmp lea call cmp stc mov cmc clc cmp clc cmp push movw pushf lea jb xadd bsr stc mov sar data16 repnz ret add add jmp add jg add je or test outsb push add shrd bsf mov test bt clc add call bswap lea pushf lea call cmc cmp pusha push call add dec outsl arpl inc insb insb outsl arpl lahf pop mov jecxz cwtl rcrb xchg mov shll sub push mov cli test push ficom sbb testb addl sti shlb push sub imul inc out repz aas stc pop mov (bad) aas xlat jl or rcrl push in jae (bad) push insb cltd loopne lods pop sub (bad) int3 movsb mov arpl rcrb mov pop stc and lock push test stos loop adc sbb inc inc sub and and mov mov sbb mov int3 movsb mov std rcrb hlt xchg inc enter push bound and mov inc insl fisttpll cmp dec or fisubl jb jo inc pusha mov or jb lret pop mov adc mov negb repnz jne push imul jae clc addr16 xchg adc or adc movsb lret inc mov add inc daa popfw hlt sbb pop sbb adc mov mov pusha lea jb mov shld mov bt jmp jae lea sub mov lea call test fildl js mov into in es out hlt repnz test and lea pushf sarl pusha loopne nop fwait mov push pop out push inc dec xor push jae lock scas pusha test adc popf dec (bad) test pop jno and cmp out dec (bad) out xor test test lahf adc arpl cld aad ficom in jo test sbb inc lcall or arpl sub dec cmc pop stos or les xchg jo hlt and rorl cmp fnstcw xor rcr loope xchg mov jmp aad sub inc (bad) push and sbb clc push add int3 inc lea mov add fsubs add push jo cmp in mov (bad) inc cli dec fmul mov sahf out sarb ret gs scas (bad) add mov inc jae sub lock inc frstor push pusha dec cmpsb aas and lods xchg call jg (bad) pop aaa mov xlat repnz popa cltd jno aaa jbe lret jb gs outsl out or cmpb or cli push push test out pop lea je test bt push jmp rol sub pushf lea mov movw pushf movsbl mov movw movzbw mov not pushf call lea jb jmp call add dec jo outsb push inc dec popa outsb popa addr16 add xor pusha call test cmp push pop inc jnp adc jo inc mov cmp fs push in bound add or push jno fcoms push shrl cmp in fchs and cmpsb push fs aas push mov jle xchg aad push sbb mov jne leave cmp mov add jo jne sub test inc cwtl mov jmp stos mov lcall cmp in mov aam xlat dec test imul mov (bad) cmpsb and mov scas fimull test es std test xor inc jbe push pop mov jns roll das adc dec mov mov pop inc aaa cmpsl push mov pop (bad) xor mov lods push add mov xor jnp fsubl in subb mov fiaddl or lods ds in cld push ret aas lcall inc pop loopne xchg mov (bad) aam cli scas push push cmp ljmp std hlt fimull pop and sub jno data16 dec push or insl mov push sub jae adc ljmp hlt sti push dec xor cmp mov out cltd testl jne hlt loopne and data16 mov lcall iret xchg mov xchg rol mov lret aas movsl add adc mov lods sbb data16 insl fwait out dec (bad) xchg mov push cmpsl lret out das jmp push movsl das mov xor pop cmpsl fidivrl inc scas xor sbb test aas jmp pop lret stos push push dec lea jne sbb dec shrd xor mov mov add rol and add neg mov push clc test jmp fldt adc movsb inc les test push pop push pusha add outsb hlt sbb adc fsubrl and dec adc mov movb mov jne lods repnz iret inc (bad) in jbe push mov movsl push jp insl or jns and cli mov notb inc loop push mov std sbb jl dec in mov pushf scas and pcmpeqw pop cld sub sbb std aad xor leave jp add sbb dec inc dec inc add sbb xchg sahf into jno cmp pop jmp ja mov lock outsb pop (bad) push push mov xlat ds lcall push pop inc pop sbb cmpl ss pop pop push bound scas ja inc (bad) aas sbb ja popf inc or scas add cmp (bad) and mov pop dec xchg ficom push cmpsb and xor and sbb mov call xchg inc fxch pusha stos pusha sbb cmpsb adc mov dec lods repz pop cli and in xchg lods insb lods test loopne add prefetch ds sub les jl shll fiaddl push add mov or inc push scas rcrl xor jle xchg sbb inc ret mov cmc stos fldt subl pop xor mov jae sub cmp and xchg mov in xor (bad) sarb xor je fidivl inc mov jp inc gs (bad) fisttpl repz mov xor in jle inc adc out insl jl sub cwtl lahf loope cs dec mov and stc pushf jecxz dec lds shlb (bad) lock sub ret inc dec lcall push popa (bad) jmp dec or inc push dec sbb and mov popa cli add out enter lea not xor xor lea jmp not pushf mov push movb mov push pushl call in pop fcoml inc sub fadd push fdivs dec dec push stos sbb dec mov xor stc int rclb jl push sub pop add insb pop mov lret push xchg pushf in xchg lds aad jbe roll sub sahf sbb mov movsb adc inc test sbb popa cld ds inc inc (bad) test add movsl inc push orl cmc pop negl ljmp xor lock stos or repz mulb icebp sub cwtl test cmp mov pusha lea je cmp sub pusha clc call push call add dec outsl popa fs imul add pushf lea jb shrd pusha add dec mov neg sar not not pusha adc (bad) icebp add (bad) adc pushf add jmp das iret mov push outsl jnp das aaa pop mov (bad) cmpsl xlat aaa xchg jg jno mov cmpsb pop jmp jp push inc ja aas test xchg sbb and pop mov sti cmp icebp rcll test jecxz xchg xor movsb mov sub or lock repnz mov mov int negb out ficomp clc inc jmp clc femms inc push (bad) jp cmpsl cs (bad) mov sbb sbb or adc test pop inc lfs lret int pop xchg xor mov and lahf pop lret repz mov inc adc fistl fdivs mov cmp push orl xchg and lahf push push push jl adc arpl pop (bad) mov leave xlat mov inc fnop aaa xchg jns daa insl fsubs into jns pop movl imul mov push fs (bad) imul cld inc das xor fs and cmpsl jle cwtl mov mov mov orl or push scas cmp dec es pop inc lods (bad) aaa mov das subl negl mov shl sbb jo fwait addr16 xlat and mov mov or jns cmc cmc add lea cmpsl pop wbinvd or xor popf divb pop pop adc stos jl bound cmp aad or cli jo pop mov push sub pop aam jo (bad) out mov fimul aad enter insb js mov adc mov inc cltd lahf (bad) inc movl mov jg js push cmpsb cwtl adc and mov or les push aas add gs sahf je fwait test pushf rcrl leave call mov test (bad) call daa or xchg jae sub jl adc js testb and and lea inc inc dec test cli jno dec loop add loope (bad) stc sarl push dec mov xchg mov xchg mov dec push pop out xor repnz pop push inc dec orb cmp out pusha sub dec fsubs int sar inc inc jg fnstenv sbb inc lret pop int3 cmp sbb out movsl jb push push cs cmpsb mov cld jl ja mov cwtl fisttp push or or in ss dec das cmp (bad) clc movsb into jne popa or stos inc divps imul cmp pop lcall and cltd std and xor sub cmp lahf mov dec and fwait bnd pmulhw in inc add les add dec mov cmp push pop aaa shl and jno cmc fimull ficompl outsl inc loopne scas test and dec push (bad) arpl popa pop pop testl loope,pn push mov movsl aad pop aam jae mov or cmp dec ss pop repnz adc lar mov inc pushf test in call ss mov (bad) test cli aad push inc insb sbb wrmsr mov insl mov je mov aaa mov fldt out add out sbb rolb mov mov push scas int xchg mov les push sbb scas mov stos adc sar ja fst or and pop (bad) mov loope jmp cmpsb fdivs inc test ret orb fs nop cmpsl cmpsl fsubl test lods popa mov adc jmp test dec sti cwtl cmc lods xchg out sub ss cmpsl bound push lods and sbb aam push cmp bound pop shrb mov xchg xor mov out mov xchg out adc jp mov add and pop sub cmpsl andb pushf ret movsl (bad) fild test jmp mov inc in arpl dec jbe enter mov and (bad) out cmp (bad) mov not pop lds mov add jp sbb call xchg dec inc or call lods (bad) xor rolb jge gs push mov mov (bad) jnp movsb stos stos scas jg inc or das pop jb push mov ss push add push jns xor or in inc dec clc stc dec repz pop adc pop cs add xor lock pushf insl mov decb stc inc adc or into add dec mov ss clc aam mov mov cmp (bad) jmp mov push test (bad) adc imul (bad) jb xor (bad) (bad) fsubrs pop sahf (bad) jo (bad) mov subl adc inc mov scas in stc add cli jbe and adc clc outsb mov sbb lahf test imul cltd or in or nop js xchg pushw repz fmull sub xor popf scas outsb ds je push pop std sbb dec loope sub mov int3 fwait mov pop cwtl mov outsb test add (bad) cmc in mov outsb fistl jns sub xchg aad ret pusha jge xor loope sar sahf rorb (bad) adc iret outsb fstpl rol fcoml test dec outsb or xchg add add adc pop std stc scas mov mov popa sbb sbb or lods push movsb mov cwtl test mov aaa test jae jns mov mov fucomp loope popa ss stos jmp push inc sub loopne jns aas cmp add mov es add cli or enter (bad) repnz dec in aam xchg je mov int lock (bad) aam and pop fldl mov outsl inc mov dec add sbb subl nop xchg mov add rclb rcll test pushf or loope pop scas jae mov lods aas into ljmp cmp mov mov cmp inc pop int sub xor fcoms aas loop add loopne imul mov mov aad lds or pop pop ljmp pusha sub fadd (bad) or inc movsl inc data16 pop xor pop xor sbb dec jl in dec mov pop das out and fstpt shll inc test jp cmp cmpsb inc mov mov enter enter mov insb lcall push paddusw xchg shlb scas xchg dec cwtl inc jl outsb mov mov outsb xor xchg pop xor lds dec fwait cmp mov shrl dec cmp and pop mov test sub dec lret es pop pop pop jl lods cmp aad sbb mov xchg xchg (bad) sub loope or lcall scas dec cmp lret jnp mul lea cmp pop into cli scas movsb test (bad) jne pop int3 push xchg (bad) xor shr cmc dec jge and jmp (bad) jl dec cld push sbb pusha fmulp shlb xchg inc push push fsub movb inc inc jns mov push incl sti daa mov pop lahf jecxz push pop sbb xor aam (bad) loopne push and adc adc xchg mov mov pusha pop aaa xchg addr16 xchg rorl push jnp test iret cmp xor fbld jl sbb dec push jecxz add push xchg inc pop xor loopne movsb sbb mov xchg mov mov mov xchg into call lea or stos fildll out and mov ja mov inc hlt mov xor lret inc adc pushf sub in push fdivs mov jne inc xchg mov mov xor cli lahf daa mov repnz fldl (bad) xlat nop imul call div int mov test mov mov les pop add iret dec out inc pop pop mov scas inc ljmp pop sarl repz add imul inc push ret in dec mov call mov adc mov es repnz xor or imul cmpsb insl ret into bound movsl sub flds jnp lods sbbl std xor xchg ret pop push (bad) jb mov int cmc pop push insb push sahf or pop jo adc inc mov push mov push mov (bad) sbb popf xchg xor lret lock jg dec and inc scas fs stc lret inc fmull xor iret inc push push add lret push inc cli add enter loopne fidivrl aaa xchg push enter addr16 aas adc push icebp iret jmp mov add push aaa inc jmp repnz outsb push lcall adc popa pop aad outsl add sub xchg mov lock mov hlt push pop sbb lods ljmp icebp mov and out shrl movsb test sub push jnp stc lret in pop dec lds push psllw out and cwtl iret xchg ret lds ja andl push ficompl sbb fldcw mov sarb push (bad) pop mov jle xchg inc xor add cld add sub mov (bad) push add test lods sub out sub sub je inc push or push pop mov test in fmuls stos adc dec idivl out sub ljmp mov subl test xchg inc insl aaa bound ljmpw mov ret rol out mov push mov mov cmc test push inc jnp mov fisubr insb popa lahf in fstpt leave enter inc or inc lahf push dec mov push cmp xchg xor jge outsl xchg lret das dec out push cltd out in test popa lods pop jae cltd dec aad movsl hlt jg lods push (bad) out mov outsl rcll jecxz ret aas sbb inc cmp pop ret lods sbb adc inc add mov lcall adc insb inc nop jge (bad) ficom sahf test into test pop (bad) test and push add dec imul dec andl push cwtl shll inc xlat stc sarb xchg popa add and imul js movsl push movsl mov jnp push pusha or xchg fldenv lcall leave push mov or in scas and inc xorl cs pop xchg jge mov inc dec xchg mov jne push scas (bad) shrb and (bad) mov cmpsl inc mov sarb movsl or xchg or xor or cmp into jo sub inc ret cmp out stc hlt cld daa push mov repz push xor clc mov jb xchg push mov dec inc jp push inc pop out lahf mov cld add scas inc dec and in (bad) xor xchg loope xchg arpl xchg sbb icebp addl jo rcrl insl push adcb out mov cmp add daa mov sub repnz das (bad) mov sbb mov outsb or dec fwait ret mov gs add mov xchg enterw pop push ljmp lock adc jae subb lahf cmc test push pop pop lahf scas lods aas mov xor jl push jns xchg mov (bad) lret fstpl push daa mov adc out or jg lcall popa call xchg shl mov mov mov bound jl xchg lods jo mov or inc roll dec nop shrb addr16 xchg sub addr16 (bad) jne (bad) fcoms jae xchg mov xor int3 pop or andl cmp (bad) outsb mov dec jg imul and ja adc aas jnp mov or (bad) repz cli jle ljmp sbb dec in cmp loop push jg adc xor scas push enter pop out outsb mov sbb push fiadd or lret jmp stos imul lods aaa sbb xchg adc ret leave out add mov inc push aam cli mov stos xor and dec repnz inc mov and jge imul sub mov pop adc sbb addl incb clc stos addr16 (bad) ffree (bad) and cmc push icebp xor mov inc xor notl pop lret adc push or aad lcall movsl (bad) xchg sbb jae xchg lods mov cmpxchg xchg or sti dec or lcall fs jl dec cli mov out pop je pop fisttpll jl pop mov cmpsl cmpsb pop xlat shrb insl xchg mov mov out std dec cmp xchg (bad) (bad) mov cmp mov jge lcall fcmovb nop fwait jp xchg loopne fnop or inc in test pushf mov (bad) lret lahf pop mov sarb outsl mov cmpsl mov push mov stos in mov fcomps fldenv or cwtl add dec bound into lcall pop xchg mov (bad) out lahf stc jp inc and dec jle jne sub pop cmp pop icebp mov cmp clc xchg fs push popf dec divb dec test mov mov std in test inc (bad) xor loop lahf ficoml and jg mov adc pop (bad) clc idivb mov push rol test jg (bad) mov add adc cmp xchg int pop rorl rcrl cmp xchg clc subl sbb pop stos pop mov adc mov fucomip mov test inc iret mov jge (bad) mov jo xlat pop inc sbb (bad) xor push fcmovbe or imul push sbb loop loope cmp stc push cmc test fucomp ret ss push mov add movsb cmpsb and add loop push inc jmp or jge pop adc push rcr push lret or mov xor mov jno pop sbb es push popf pop xchg cmpsb mov nop xchg fwait xchg sub sub test pop jle fisubl mov add inc imulb jo xchg mov scas cwtl jg push gs in leave xchg pusha sub jb lcall repz push xorl mov mov rcll xchg mov lret fwait add cltd out dec lret xor xor cmp sbb mov mov add adc int3 adc push inc ret and or repz mov dec addl jae jbe test dec cmp jle jp sub sti scas jno call ret or sahf or outsl xchg sarb cmpsb stos loop cmpsl push (bad) mov pop jmp push dec inc adc xor jnp xchg lret inc jbe int es into or mov or loopne stos int adc lock dec lods mov sbb xchg lock enter loope cmpsl lcall gs rep or or xchg cmp jne leave adc pop xchg xor int lret je jl jle loope dec in pusha mov mov jl add test add std dec inc mov cmpsb lretw adc scas outsl popa mov and movsl adc mov loope js dec push jg pushf adc xchg adc push jmp iret movb cmc jo add dec and in bound dec jne ds and mov dec xchg mov bound cmp push (bad) xchg or cmp jmp int3 iret cmp adc lret je mov test add das mov dec cmp bound dec fnstenv or (bad) adc cmp cmpsl xchg dec cmp push cmpsl pop sbb mov (bad) scas add lea inc outsl les pop leave pop je mov push lret imul movsb int test pcmpgtd scas xlat push sub fwait hlt setnp mov add push dec mov sub adc jno xchg jnp mov stos cmp fdivrs leave cld xchg (bad) xor xor xor loop mov push ficompl fwait add and ret cli jle sbb pushf push and push aam cld ret js gs cmp idivl insb xlat fnstsw lock jo jmp shlb (bad) insl push xchg ja rcrb into cmp popf psubusw sub and jb stc mov inc sub ja js mov add (bad) hlt pop rcr lcall stc js test mov or les sbb ja sub test imul sbb div xchg push repnz (bad) mov add adc add imul or mov fisttp mov adcb or cli loopne aad push sbb aad pop fcompl in (bad) xor dec shrl xchg (bad) iret or sub rorb stc les xor popf sahf aad cmp sub cmpsb mov adc jns arpl mov pop je inc inc cli mov or pop mov mov jo lock pop dec jo sbb scas jg pop nop je adc jnp mov lret ds adc sbb inc sub sbb adc add xor mov add pop jl icebp dec ret adc das sub cld jns mov sbb test sti cld add (bad) or lret test enter out or fdivrs out enter je push jmp leave sub outsl stos xor std aam mov and mov (bad) int3 ret fucomi (bad) repz mov cmc cs data16 (bad) lret sub inc outsl notb enter push aaa (bad) test mov push mov adc xchg ret cmp push outsb add push sbb dec pop xchg notl in outsl test inc ficom push and (bad) jae fadd mov popf jg cmpsl mov lcall dec push clc dec es dec pushf push mov (bad) lahf jnp adc aas iret (bad) xor and cmp pop cmp inc ret sub ja or push (bad) stos jg outsb in (bad) lret lret pop ljmp jne or xchg lret orb mov push cwtl jns insl xorb in lcall adc mov xchg sbb shrl push mov mov in and rcr mov out (bad) mov or sub cmp jns dec push pop daa subl pop jne pop sbb cs ret addl loop and mov push mov les or add call iret enter (bad) sbb (bad) movsl dec pop mov mov movsl mulb jp add adc push cwtl cmc dec insl test aas mov pop sbb inc ror fwait sbb pop adc mov cmp mov sub je outsb cld test dec loop nop sbb lret cs jno add and dec das pop inc xor fdivrl loopne pop adc xchg clc sub das pop aas lcall stc xchg ss mov lea addr16 xor rol mov test add icebp or jae notl jmp adc push xchg mov (bad) fsubs and test or push mov xor lcall insl je mov cmp (bad) aam scas mov xor scas ja sub cli cmp lock xchg sub mov aad out xor es aad les int mov mov bound xchg aad inc jns arpl mov lods xlat xchg sub mov and and cmp dec aad and loopne pcmpeqd stc jne sahf adc dec icebp subl adc je das jmp sub jecxz fadd cld dec mov cmp in jmp or mov cmp adc in lahf ss hlt fwait test fstl lcall mov push or cmp insl add mov into lods and decb or std (bad) (bad) mov test jg (bad) cmp fisub stos cwtl or jne inc rcll imul out vmovshdup in mov mov inc movsb mov iret pop mov cmc pop jnp call lret dec push push pop mov stos loope pop in jle (bad) (bad) jecxz mov dec arpl test mov sub into sbb push add mov imull int3 pop (bad) lcall jle imul scas jg rcrl sbb xor or cltd mov cmp sar dec adc xor aam jecxz ret clc jg cmp sub dec iret dec jno push ss insb mov imul xchg out rclb (bad) rorl mov add cmp push mov adc pop call xor cs xchg mov insl and scas adc mov aam in repnz mov test xchg imul cltd xchg mov xor leave out xchg pop sbb js loopne int3 cltd xchg fnstenv cmovb mov outsl cmp push sbb mov cmc jmp int jnp pop inc mov inc mov jno pop add pop test dec cmpsl js jmp sub in pop jg js out rcr push ficompl and dec in inc inc cli xor ja xchg fiadd push add clc and cs test mov in mov std xor push push lods jl pop pop rol ds call mov repz jae cmp xchg xor fucomp mov adc sti sub lret rorl or and xor jl shrb btr int test xor fbstp sarl cmp xchg add mov mov jbe in cmpsb xchg sbb inc cmpsl xor int lds js sti arpl jne or cltd push mov sbb ds gs clc icebp (bad) sub addr16 (bad) mov mov outsl cmpsb dec inc pop jns xor in in add cmp pusha push call cmp nop jo lcall imul and cmpsb dec mov addr16 xor xor insb or adc xor mov cmp lea pusha xchg enter add rorb push cmp lret push clc push fdivl pop sbb pop xor loop (bad) jmp cmp rcrl repnz xchg xor scas int3 sbb mov popf xor mov stos adc mov and in lret inc inc aam jmp add mov lcall adcl stos test rorb mov xchg xchg sub push mov xchg inc xor sbbb pusha in jne jno lods fstl pop cmp push sarl inc fadds mov inc out push bound pop sbb bound daa xchg pop and dec mov jne dec mov sub xor jmp pop adc movsl or dec sub outsb data16 outsb (bad) inc xor loopne mov lahf (bad) mov in mov xlat int3 (bad) adc daa adc into and adc inc mov and jbe clc out xlat fisttpll or sbb adc aad (bad) push (bad) pop sbb ficom dec mov xor scas test loope or pop sub arpl push mov xchg xchg add cltd push inc popa and and or cmp cmpsl popa mov cmc int3 or push lods and push hlt xchg rorb xor mov dec (bad) jo icebp mov hlt mov in push add jnp cmp lods fistl push xor inc addr16 bnd push adc push inc push push xor dec pusha xchg int3 lcall rolb (bad) jecxz dec (bad) cwtl icebp fwait fwait push rorb les push adc aas sub jecxz leave pop fwait mov ja ret std jne jnp pop and mov sub push xlat cmp mov arpl mov jmp jne (bad) sbb lock inc in xor cmp sbb repnz sub aad lret das mov lea in mov sub adc cs adc cmp jmp jle push nop fs cwtl (bad) xchg push jmp sti frstor aam gs jge or and pusha in lods xor aam cli dec mov jmp jg divb push pusha ja ds pop ret ja ss std inc jnp ja jmp in call jae xchg int push add ss scas ljmp mov pushf test jbe rorb cmp mov outsb push addr16 ja sbb pop mov fistl fnsave das lahf (bad) lcall cmp mov add jecxz or xor cmpsb mov xchg (bad) push push mov test cld mov adc pop xor inc sbb pushf insb pop ret push out dec aam testl sub rcll xor lds stos push sbb sbb loop inc mov adc cltd ds sahf adc outsl es lock xchg add lds dec rorb rcrb out jnp add mov dec daa fmuls mov adc jb mov mov add in lock cltd icebp andl js arpl scas add and mov and jb mov fldcw fcomps or jg loope mov inc dec repnz lret cmpsb stos add add scas or mov and mull cmp out xchg jge lahf mov inc cmp adc cwtl repz fsubrs jp add pop outsb push clc ds arpl xor and (bad) or ja xor outsl lret mov mov pushf add imul outsl xor xchg adcb mov xlat sub es or jae es push mov out imul int fwait mov mov repz clc in in add inc pop (bad) mov pop xchg lret aaa mov pop pop out sarl inc ret pop mov jae push lds sbb stos mov cmp fildl mov xor xlat xor sub or loopne leave fucomp sbb dec gs je (bad) call mov sub pop or cli add mov scas push dec insb xchg stos and (bad) push das repz inc push sub arpl adc add mov cs jns scas push mov add pop xchg mov aad or cmp cmp sub or adc jle jge lods in mov or js or push inc pop add stc enter adc sbb push imull je mov in xor push fidivr dec xor dec mov sbb mov push ja pop xchg push sub pushf push and (bad) insb add adc mov mov nop cmpsl sti pop cmp arpl cs jp push cmp xor push idivb mov ret in and push pop gs mov xchg push test cmp scas and in mov push cs xchg push insl pop push test adc (bad) leave push stos xor and sub jge sub adc mov jnp add mov add add leave shll outsl jl mov xor (bad) and outsl test sbb ds in cmpsb and sbb jae loope cmc add movb sbb dec push inc insb cltd orl push icebp lcall mov cmp cli pop fs cmp int3 inc dec (bad) aaa jnp jmp das lret pop dec hlt mov lcall cltd push pop nop or fwait (bad) jmp mov pop das pushf or rorl or aad ficomp bound add lret insl mov mov fnstsw or fnstcw in mov sti jo sbb and xchg jno mov lock fstps cmc jge push int3 int3 mov mov cmpsl pop shll call mov jp push ljmpw loope in enter sub cmp mov mov imul mov mov inc cmc pusha mov lds fs sub push test push cmpb sbb cli add mov rcll inc xchg fdivrs jecxz adc or or aas loope inc pop add fwait (bad) aam mov out jecxz gs popf cmp add rorb scas dec aas repz push popa lahf out rcl mov in or stos mov hlt xchg test insb gs lret fldln2 jno xchg sahf dec push push movl out push ret pop push mov inc cmpsb ja inc loopne test ds dec xor cmp das add add and cwtl popf (bad) and dec decl lods dec fdivrp cmp pop (bad) pop cmp adc cmp pushf iret sub cmc push gs leave addr16 faddl jge movsl outsl repz mov sub clc cmp xor add ljmp sbb push loopne lret push push pop pop push xchg cwtl int3 (bad) pop adc or mov add inc push adc add add daa xor adc cmpsb push lods aam xlat xor (bad) push and mov sub ret push cmp fdivrs push scas es rorl xor scas mov shll test js xchg daa cld ljmp (bad) loop xchg mov mov dec imul adc xor mov or aas push cmp loope jge insb inc popf (bad) icebp pop push push fistl fadds jmp add cmc push or in scas sub sub push cmc and and jno push mov aas out into loop and xchg inc cltd jecxz leave lods jno adc and xchg mov test sti call mov fwait mov enter cs daa xor xchg sbb jne les push (bad) (bad) (bad) mov and mov fdivrs movq test sbb mov jmp push cltd and orl add mov mov push int3 ret jl dec jmp rcl js notl pop pop sbb addr16 inc cli add hlt jne (bad) or test inc daa jbe sbb hlt add jl mov scas adc hlt std pop insl data16 mov push inc loope jnp mov fildl out (bad) mov xchg sbb std dec cmpsl add mov lcall mov sbb dec nop pop test cmc push push cmpsb add adc stos enter fsub nop in sub cld mov pop push movl mov inc rorb es loop call (bad) push inc and push hlt or stc das push fsubrl pop call test add out mov inc adcb jns jbe jno dec ljmp push insl cli push stc pusha dec xchg and sahf mov mov lcall bound imul rclb and jmp mov and sahf or mov mov push test sbb and mov jge jns mov mov dec mov push mov je sub and inc pop cli pop out ljmp inc sub cmp rorl addr16 sub mov jmp cltd sub mov inc aaa int3 adc sbb or ret sti mov ja xorl cmp clc jne inc and aam adc lods mov lret sub pushf inc lds incl xor sarl mov mov dec ret xchg jecxz mov ds sub mov ret lret mov inc movsb pop mov lods and or jmp aad xor loop jns jp cli sti jle pop mov xchg and cmp mov mov sahf mov inc stos out out push inc hlt (bad) and sbb lods or and stos cs les add and dec lea inc lret loope jecxz lcall cmp (bad) and pushf or fsubl cmp mov in adc ss shr lds add sub daa fstl jae lahf loop aas je or lods shll add dec ficompl bound cmp adcb or pop icebp cmpsb idiv add inc or mov or mov and push inc stc mov xor sarb push sbb xlat and or popf testb fmul sub lock xchg in mov fxsave sbb cli aaa (bad) test adc jge aam test and jge adc push inc (bad) cmc ror mov pop aam loope or popa pop leave mov ljmp addr16 lds pop ficoml or out add subl popa lret paddd repz xlat mov enter sbb mov fcom mov dec jle push (bad) hlt iret aam fsubs fwait xchg mov pusha cmp xor stos mov jl mov and aam add cmp and jne push pop (bad) outsb add xchg sbb xor xor inc es hlt gs jne out add inc or sbb mov jle jg fnstenv outsl pop sub mov dec jnp pop jbe mov jae add test xor and mov jb jp sbb and inc lock lahf pop outsb add stc mov mov sub outsl pop jno iret push (bad) nop ret (bad) fbstp mov adc (bad) enter fldcw add add not mov sub xchg or adc cmpsb test mov add push jmp and adc cmp inc je sub outsb into out ret dec stos lahf js pop dec rorb mov jb ljmp sub xor cld sub leave or and mov cmp mov cmp fbstp fwait inc mov push mov adc ret pop movsl (bad) inc push xchg (bad) mov push adc std pop loope mov sahf pop into cli adc dec int3 out or sbb adcl xor icebp shr xchg mov in fs or leave and js mov in fsubr mov xor subb adc inc fwait adc cmp aas inc sub stc imul dec inc push dec loope fisttp fldt and mov ret push adc add jns mov int (bad) hlt inc lret enter out fcmovbe mov xlat in je (bad) push add xchg das xchg jne ss movsb xor insl pop push mov pop fdivs ds stc mov repz jno or rolb in idivl fs scas cli xor lods out xor test andl jle inc mov xor or adcl cmpsl ja add push arpl aaa movsl cmp cmpsl push mov cmp ret (bad) sbb stc clc dec call add mov (bad) dec cmp cmp pop lcall push adc xchg addr16 cmp cwtl push pop cmc es fild mov push add push in (bad) call test mov fsts hlt add dec mov push cmp add fnstsw inc neg daa and cmpsl outsl push out or mov into jnp (bad) push inc ret xchg cmp pop cltd cmp inc (bad) incb inc jmp mov sub lods sahf out mov jp mov cmp push rcrl loop bound ret insl enter mov inc sti popf push mov mov ret mov dec xchg jecxz das mov outsb mov ror lret movl mov or push add mov stos shrl and lret mov inc (bad) and mov xchg xchg jb add sbb movsl and cwtl sbb inc xor shlb and xchg ret bound lds push or dec test jns mov je pop jae push dec xchg test fsubrp sbb add sbb fldt xor or inc mov jg push int hlt int pop jg (bad) fsubrp mov icebp test adc dec repz addr16 fidivr (bad) imul daa and add je jle out add sbbb sbb jnp sti xor aaa mov cld ret jno mov push movb pop inc and sub mov repnz inc lods dec jle aaa push fdivl xchg out cmp out lret add mov push add lods cli fildll inc sbb jne and in inc test xchg outsb in mov inc ss shr rorb push int3 jbe jne push and sub mov dec ja outsb mov jl,pt lods bswap rorl enter lods repz xchg (bad) mov inc pop rclb add mov pop push mov (bad) loopne pop xor xchg mov das ret rorb cmpsb hlt xchg dec jp (bad) mov rclb std and in loope xchg test pop push push fwait inc int (bad) cmp jno fs sub pop cld sub scas cmp lods fisttpll xchg movsb lds push and rorl push (bad) fwait push cmp jo cmc xchg mov pop sti push dec xor push dec sub push cmp pop pop push and ret mov (bad) mov mov sahf cld (bad) xor arpl jecxz xchg out stos data16 in inc insb (bad) outsb sbb push or sub mov imul mov mov jo push lret push movsl addr16 cs leavew pop clc aam loop stos bound lods std (bad) lock adc dec js pop clc mov imul xor cmp xchg jp out jo outsb shl scas mov sub and and xor (bad) fiadd addr16 xlat cmpsb mov jmp in sbb adc push arpl lods pop push cli sub aaa add mov fcomps jmp imul mov add xor cmovae xlat repnz hlt mov xor js repnz xor (bad) and lds mov xor test xchg sub es lods add sar leave test xor cmc pop mov enter (bad) jmp lods mov insl (bad) mov stc in jp inc lret inc push bound and (bad) icebp pop push sbb inc movsb adc pop jbe xlat or jb mov xor fdivrs ljmp push setl xlat or in mov mov xor add xchg shlb out mov pop mov pop repz movsl jo movsb dec inc bnd (bad) mov jns push fcomps xchg les inc (bad) mov (bad) or cmp inc add xchg cwtl ds stos cmp lods repz (bad) je lcall repnz sbb cmp mov cmpsb dec push outsl ret xlat aaa jg mov imul (bad) push push jecxz (bad) icebp popa imul inc pop icebp sti mov arpl les xor mov jp inc or push mov in mov das test mov lret loop add pop adc mov mov inc movsb mov hlt mov xor (bad) cmp test mov (bad) bound inc or iret movsb lret and sahf (bad) imul add stos cmc dec sub xchg cmp (bad) iret mov push adc adc fist pushf jl mov and adc jmp (bad) xor enter push test lahf fcom add es xchg jae (bad) push iret inc addr16 jg push add lahf cmc bound cmpsb into std lea pop xchg xor in mov jmp mull adc mov shll sub dec mov mov lds add in sub xchg inc subb dec in icebp jb pop imul outsl je push adc adc dec pop cmpsb fucomip dec jae pop test jge lods adc mov gs jae jmp and jae lret jnp js in xchg xchg idiv push dec xor imul and xor add inc sbb jno daa mov shll mov push sub lods mov xor lods sbb adc leave (bad) repnz (bad) ret and cmp ja out pop insb aad (bad) stc outsl loopne daa push mov punpcklbw sbbl cmp xchg dec dec and fcmovnb xchg push imul inc in mov xchg pop adc pusha test add mov call fs push (bad) push aam sbb in fdivl push cmp (bad) in jmp mov pusha pop xchg xor rorl mov dec out js or stos sub mov cmp dec sti iret ss je adc dec stc call cmp (bad) fs mov push stos repnz repz add xchg scas jns sar out fcoms les insl xor jl dec fcoms sarb cmp jge bound jmp int3 cmp outsb movsl cmpsl hlt imulb sub pop jle cmpsb fnstenv jo push pop gs and push sub clc dec pop xor jnp gs pushf divb (bad) dec mov xlat inc addb jp rorb loope jb dec sub subl mov adc mov jb pusha les lret xor dec shll adc xchg dec out cmc lret (bad) jns mov cmp sbb pop mov dec inc sub dec add ret push lods sahf sbb and (bad) or ds leave icebp dec in add rcr lret and pop push es jae movsl mov push sbb gs xchg loope fucomip mov jmp (bad) rcr push or adc or ret out jmp cld pop cwtl rcrb (bad) fsubrl mov mov arpl out push xlat movsb pop adc iret or aaa mov pop test nop arpl push mov ja aaa sbb mov lea addr16 adc add pop dec lea inc or inc jl rep sbb ja mov cmc add pop pop push (bad) aam outsb scas addl cmc mov xchg inc in add faddp (bad) ja dec mov js aad or movsl mov and cmp andl or stc cbtw sub mov add lods cli mov leave rorl push test jmp mov std movsb (bad) mov xlat enter ss ljmp add ss mov mov mov dec push pop int3 stos mov cwtl sbb aad xchg (bad) imull inc push ss xchg rep out and lods cs inc popl leave lods in mov aas in (bad) and xchg ds push sub das push fcompl mov mov ljmp sbb push inc icebp ret cmp add fimul inc imul mov push sbb cmp add jno jns sbb inc mov push mov mov bound or out nop aas add or cltd (bad) lret aam cmp pushf fdiv and scas repz mov jecxz xchg adc bsr xor out mov mov repnz inc lret mov dec dec mov push cltd (bad) leave stos add lcall andl and mov mov inc ss adc sti push xchg xchg in test stc lahf sub lret pop ja push dec cmp jae inc sub mov push inc sbb stc lea xchg adc pop mov pop shrb xchg pushf inc mov adc repnz cmpsl imul dec sbb insb (bad) sbb mov pop (bad) dec push xchg sub orl xor aam add in push xchg loop inc movsl xor (bad) and imul dec mov xchg rorb push bound negb lret dec rcrl and lods movsb mov test scas dec push dec inc lret out jge pop or pop (bad) cltd mov scas es pop in pushf test aad int3 mov sahf push fist sub imul lret lret pop cmp inc cmc lcall std imul or jbe setl loope fwait out push inc inc ss cs push push mov test fld stc fcoml call mov dec cmp int or cmp fnstenv push orl jl push or je and cmpsl mov or push and or fdivrs andl mov divb sbb lcall inc (bad) lcall mov sub in scas sub push lea xor daa push jns mov mov sbb insb stos sub sbb movsb leave push pop pop inc es or pop push icebp xchg inc or fcoml in and jnp repz mov pop cmp cmp adc insb lcall cmp aad and aad mov in iret or sti ficom sub add xchg icebp adc jno lcall mov add jp lock lods mov lods aas popa arpl push and dec push adc mov mov sub mov repz sub add or rcrl ss (bad) lahf movsl mov or add jo das push cwtl lds pop enter lahf cmpsl fcmovbe sbb add push bound enter stc fsubrs sbb jl outsb jb xchg hlt lods xchg lea outsl aas add mov push xor jle mov test cltd (bad) ja and (bad) loope mov aas push inc pop pop in hlt scas cmp mov ss xchg movsl js inc icebp lods xor dec test mov mov adc dec into (bad) outsl shrb (bad) imul loopne dec ficoml mov xor mov mov xor gs cmpsl fs notl ljmp mov jmp mov js sub dec inc sub lods outsl pop mov out inc jbe fldt mov pop adc imul sub mov xlat cld sub pop and lahf push hlt pop adc xlat ljmp stc jg mov (bad) mov (bad) mov jmp sub xadd (bad) mov mov push (bad) into loope mov loop add dec stc xor pop in cmp ror lret call xchg add fs fcompl xchg inc jmp fs inc mov jbe and outsl es xor leave nop mov popa pop sbb cmpsb pop cltd in and (bad) sbb (bad) (bad) xchg cli push pop mov into mov arpl xchg mov aam xlat jmp sbb add iret scas jecxz add pop cmp xchg mov (bad) fdivl hlt jbe hlt lcall pop dec testb xchg je fwait and or mov inc sbb push mov or (bad) mov mov inc out and xor data16 xchg insb hlt jb sub jo mov mov ret sahf aaa icebp xchg push imul mov ret jnp mov xor mov inc hlt or movsl pop xchg test mov lods jo mov sbb mov adc sar pop sbb mov mov ret mov jl inc xchg and fcmovnbe aam xchg (bad) arpl hlt aad enter sub push mov dec out dec pop sub xchg pop add movsb pop add cld jae shrb and (bad) dec ja mov (bad) pop out mov mov mov cmc push jl pusha pop jns mov jae jge sub jno decl add sbb in and (bad) mov cmp push mov push mov cltd js pop loope add insb xor sub pushf rcl adc adc cmpsb push jmp adc push rsqrtps jecxz mov (bad) rorl or inc fildl mov cmpsb xor push out jecxz or ret repz stos aas (bad) mull lret scas jnp xorl loopne and or push xor cmpsl pop push leave addr16 cmp cwtl addr16 push or adc pop sub pop (bad) out push mov imul jns xchg mov jg shrl ret push fidivr add cmp outsb icebp (bad) and loope adc cld and jecxz inc pop ljmp mov pop or inc pop mov add or push push inc jo push popf push fs outsb inc rol das (bad) hlt adc jns cwtl jne stos push lods lods pop mov sub stos clc adc pop call cwtl xor fsubs push mov lods add xor pop call or xchg add mov or mov aad pop (bad) jp xchg test or xchg mov xchg pop movsb mov push rclb mov jmp add sti pop dec mov add data16 hlt xchg and xchg and sbbb push mov sub xchg rclb push pop xchg rcll inc dec xchg aas xchg sahf inc popf cs mov bound (bad) arpl or mov push or pop nop sahf js xchg out mov loopne mov aad sub lods dec dec aam mov enter adc push fildll push xor scas int jns inc insl dec fdivrs movb adc jg mov sbb pop lret outsb ret iret inc jge xor xchg js inc add and sub arpl mov (bad) in ds int3 in aam das jmp jg cwtl mov push sarb inc je ds enter movsl sub repz sbb aad pop lods aam add push xorb out dec out xchg test fisttpl mov jae mov enter cs pop push test dec push fnop out cmp shr cld cmp lods push xor jl mov cmpsb cld dec cmp jbe mov cmp jb mov das xchg inc jge pop leave add lea lds push daa fldl fs fmulp dec lea sbb rol push call xchg and movsl pop xlat ss dec enter lock leave mov xor in adc push inc (bad) jl lock lcall mov psubusw pop cmp sbb mov test ljmp repnz inc lret aaa add inc rorb xor fist or repz add cmp cmc lea (bad) fwait adc out fidivr pop int3 popa or nop (bad) mov ret inc mov mov ljmp outsl xchg vphaddbw inc (bad) mov in cmp mov mov jle push dec pop sub nop and loop add test lds pop leave rcr iret xor pop out sarl movsb int mov int int aad mov loop add (bad) pop push and je or push lods sbb sbb and jnp xchg je jle in push test sub cmp mov ret push mov mov inc subb cmp jb dec fidivrl (bad) es xor outsl xchg rorl cld call push lock push cmp inc jo or lahf lcall ffreep in jge lret mov icebp cmp aas (bad) out adc lahf dec sbb in inc xchg outsl xchg sbb lods iret cmp aad mov fildll popa lret push mov pop popa ret add ljmp cmp mov sub fldl ds das in (bad) cmp fcomp hlt and fsubr inc out fnstsw loopne in mov test dec add (bad) gs push neg sbb out jns jle pop shll imul arpl jno mov js mov push push adc add jg and sar loope jg xchg gs dec jmp inc enter js push mov adc xor or test (bad) adc out jle sbb lahf fsts iret les (bad) sub jbe repz outsl mov xchg inc push add add jne,pt lds outsl push jmp pusha mov lret out jge outsl pop lret cmp lea mov adcl ds repnz fstpl pop mov test mov sub mov or les xchg popa mov mov jno leave (bad) outsb xchg sbb push mov mov movsb dec add nop movl aas outsb dec push out and aam test adc inc lahf jne or pop iret fsubl cmp mov adc (bad) rolb adc ret xchg dec jno (bad) out lock push push cli xlat cmpsl insl dec call loop or pushf mov cmp sbb mov (bad) call mov cmp and (bad) test faddl (bad) rclb ret push in int3 push mov mov and inc adc push out sub in xor cld loopne cmp cltd lock dec sbb call loopne (bad) insb push in sub pushf lcall cltd (bad) jae fnsave mov pop mov sub cmp stos ljmp push inc xchg or rcrl rolb imul dec jnp rcr (bad) repnz add (bad) shlb push call aaa lds lods in fs shll es xchg (bad) mov mov shll adc pop mov ds cmp test cmp or pushf mov mov dec test mov sub ret jne push cvtpi2ps inc fildl xchg ret movsl stos pop inc mov js mov jecxz aaa repz mov sub lods push fs decl mov icebp xor sbb mov ds les push (bad) int3 fiaddl (bad) (bad) jmp jl pop mov mov sarb ret jecxz mov pop adc fwait lea dec incl (bad) test sbb dec decb lds test pop mov adc sub lea pop pop mov mov outsb movsl xchg xchg mov fstl rclb lea push mov pop jg stc and inc xchg jnp imul inc (bad) jge dec mov jbe dec mov add mov lahf out fidivrl sbb repnz xchg in jnp inc cmp sar jle mov and fldenv pop enter inc bnd in fndisi(8087 bound out in inc pop jecxz jb pop enter cmp das mov jecxz jne jecxz jae mov adcb or lret inc xor stos push mov sub jne pop jecxz test gs outsb lea or test jl pop push or pop loope negl jp xchg cmp or js xorl mov sbb jle adc mov mul ret cli push (bad) int rcll (bad) xchg or (bad) jge pop inc mov test repz jae cltd xchg pushf insl ja ljmp jge mov pmaxub xchg out das in loop idivl xor cmpsb mov dec xchg jno lret movsb sub push push adc adc xchg hlt movsl stos jmp (bad) gs push int inc dec mov sti popl inc adc rol mov mov jne shr xchg lret xchg pop add ds add int3 push int3 repz (bad) mov test sub insb push incb icebp mov repz in xchg rcrl adc mov std pop (bad) xor cmp enter cmp movsb stc xor sbb stos mov pop mov cs cmpl fmulp pop nop mov cmp fwait enter (bad) call fwait push cmp out dec sub add aaa pop inc mov dec enter jle mov call mov cmp pop leave fwait add int3 scas loopne push daa pop and cwtl dec ljmp cmpsl fdivrs add jge aam push out imul push leave es inc gs pop sbb stos sahf mov lea dec imul sbb lret fstpl cmc push jge loope mov fmul icebp or mov fimul leave je imul fildll shrb mov loopne decb aas sbb loopne push add loop lret cmpsl jge xchg jmp int inc cmp pop fs pop pop xor gs adc loop mov cltd test xchg mov pusha add xlat (bad) mov test aas (bad) outsb sub jg ficompl enter cwtl add icebp xchg das pop in push out xchg xchg imul inc dec mov jmp jmp jl push fildll inc enter mov hlt push rorb and loope loop jb pushf mov jecxz mov fstl add aam jnp in xchg packsswb lret pop pushf js xchg mov and cli adc inc je ficompl loop jl xor push pmaxsw adc adc push inc insl aad xor inc aad jg push xor jno mov and stos hlt and negb mov mov fstpt outsb add ss out arpl andnps lds (bad) ret inc sub leave fcomip mov clc (bad) insb mov rclb into adc jge sub cld mov fadd jns ret shrb jp loopne xchg pushf dec in and sub pop clc lods clc testb cld test mov dec (bad) push mov repnz fsubs cltd aam fsts lret inc mov ret lock dec mov dec jge sub mov sbb jae ss or mov mov pop adc jne and leave lret (bad) divl adc lret push pop push cmp data16 daa mov jl (bad) aas rorl add xor lods iret loope,pt aam jo jne es popa mov repnz sbb adc push mov repnz sar loope mov lods xchg (bad) dec iret lret jbe xchg jo add sub sbb ja fcmovu jge pop and (bad) ret inc pop push lods mov fadd (bad) sbb mov adc add push inc dec popf imull inc or adc lods add repnz cmp pushf inc arpl call push rorb lock or jge fsubl xchg mov sub pop cli in push scas and jge decl repnz jbe inc and into sarl imul arpl scas mov movsl scas in popf push aaa clc jle das movsl call sbb push dec ret stos fisttp inc jbe mov pusha xor mov mov mov cwtl shll pop loope or jae dec jb in pop mov jno stos xor sub pop and ja xchg ljmp (bad) int3 and sub (bad) jle shrl fwait mov (bad) xor loope cmc leave pop je faddl inc (bad) pushaw sub call inc addr16 or mov sbb jae pop in mov fmull and inc dec jmp lahf sbb outsb pushf jle adc ret cmp outsl xor xor inc iret test fsubs bound aas pusha ljmp sub sub add push ret dec imul es mov mov insl out xchg xlat int3 scas jge mov mov mov adc lea int3 mov adc mov mov lea mov cmc mul in dec dec push jg outsb daa dec fldcw xchg mov arpl push or outsl add std sar and mov mov imul mov jb push cwtl test jae test xor scas insl in int sub jl adc imull sbb jl cmpsb clc aaa loope add or mov mov mov or push movsl insl and sub jbe dec cmp pusha sub aas in mov pop xchg out (bad) ja fist push pop dec push sbb jae cmc ss mov or pop inc xchg pushf insl or sub mov inc add mov or movsb lcall ds mov andl popa in subl mov stc popa mov pop pop xor sub in add outsl fs vmovd pop mov aad mov iret inc lahf outsl xchg test dec orl mov js mov push pop sub mov aad xchg mov push add data16 fcompl push sbb sbbl loopne or add push bound outsb into mov sbbb outsl cmp and repz aad cmp popa mov sbb adc lret icebp test mov stc mov or mov push pushf mov imul inc push lcall jno lret push orl and outsl aad dec (bad) push gs adc jo nop popa iret pop repz daa pop inc fimul add lock push adc lea mov mov xor pop or mov jl in cli fdivs xchg or add adc mov cmp dec dec mov lea (bad) push test fs aad adc push rorl and imul dec dec adc cmp dec div pop jne xor mov loop push arpl push or sti inc ja cld cmp jle jno mov mov mov divl push pop das and (bad) push cmp adc lahf or out mov jbe jge jae aam xor pop mov into push mov sub loope and dec adc outsl or or popa in pop xchg dec inc out je push (bad) sbb pusha mov test fwait adc cmpsl mov and out mov out pop aas or jmp and or mov mov lcall mov ljmp movsb dec out pop mov inc loopne,pn push and fwait dec mov add inc push dec arpl dec das inc fildll stc lahf (bad) sbb push div inc inc daa ret jbe fcmovnu jnp loop test jae and xor or push dec sarb and fs and mov push inc imul lret adc dec std xchg lcall enter hlt xor cmp lods ja sti jmp ret (bad) icebp insb (bad) jo movsl xlat inc (bad) out jmp in inc cmp and in push sbb sub xor (bad) push pop fs dec sbb sahf xor stc fldenv fs dec push cli sub sbb sub ds call (bad) ja inc xor dec ljmp scas mov cwtl jmp cmpsl adc aam inc adc ret push mov std rorl adc sub adc aad lods mov (bad) les mov dec jle jbe insl in sbb cmp clc int3 cld or rol or cmpsb sahf stos inc fsts xchg sub in cmpsb bound (bad) mov cmpsl xor or subl xor dec sub lods (bad) xchg in sub dec pop fidivr arpl and insl clc mov sub loop mov cmp push inc pop cld dec jne jae insb rol test nop/reserved xor dec loopne jo repz or aad push inc pop ret jg lret and loope stos js push xor mov jnp incl push repnz ret push mov pop in int add lret nop das push and mov xchg sbb popf mov inc mov (bad) je jle mov cwtl adc lea jmp push adc lock inc xchg pop lret (bad) cmp xchg scas push xchg push shlb xchg xor push lock push idivl inc loop std sub sub cmp lea pusha dec icebp nopl and mov xor repz in inc pop or mov rcr dec in jne fcoms sub stos cmpsb cmp push repz jmp xor ss cmc mov insl bound fisttpl mov ss push sub sbb mov pop inc sbb mov cld dec (bad) fisubrl fisubl nop sub ds int3 fwait scas das cmp scas mov dec push orl jns lock fist lret push scas out xchg outsb int3 push pop pop xchg xor pusha push movsb push call popa push mov mov cmp push ret ljmp fstpl insl cmc insb mov mov loop loope jmp push lahf aam mov xchg xor mov movsl shll repnz push ja mov sub mov cmp in movsb mov ret loopne push adc mov xchg sub test pushl in out sbbl scas or jnp fucomip imul inc ret std ret in jo cmp pop pop (bad) cmp stos (bad) mov lret stos pop outsl fidivr std loopne xor iret mov sub scas aas fcoms xchg cmp shl pusha sub pop jecxz in sarl lock popa pop gs adc ds push popf pop cwtl mov fidivrl sbb xor adc add pop mov out xchg dec jmp js jp mov xlat movsb popa stos push pop das jmp inc outsl jg pop lock outsb popa adc pop out stc int3 mov xchg jbe cmp push xor (bad) mov scas or in shrb repnz lcall loop mov je (bad) pop and mov sbb lret dec mov fisttpll jb cmpl pusha daa add (bad) loopne or pop mov pop pop sbb add (bad) loop and sbbl pop sbb popf sti mov cld repnz adc jge cmp inc nop or sbb mov inc xchg xor mov adc xor xchg or in dec xchg jb xorl inc mov adc sti pop jge push pop mov jo sub in loope cmc jae,pt sbb insb sub or xchg adc mov jo mov sbb sbb in lahf mov push in lret lods push push jbe mov push lahf jmp jmp faddl (bad) in cmpsl adc mov es imul fs jge cmp je std mov bound test clc lock lret sarb or hlt cmp lods mov adc jns mov sbb hlt mov popf cmp hlt (bad) lea cmp or lods mov mov (bad) (bad) cmp inc push pushf and lods in stos dec xchg xchg stos mov lods or (bad) cmc iret sub cmpsl or jmp mov loope gs (bad) cwtl fdivrs xor mov int push cmp mov xchg and xor jp pop orl mov mov les inc ja adc ret jecxz lret lds mov push (bad) fnsave arpl aaa out jb cmpsb stos rcr pop test pop enter dec (bad) mov into dec ljmp xor adc adcb push mov lret adc mov or inc dec mov mov push fdivrl or clc nop inc fsts ret test xchg in outsl bnd movsl sti cli jge xor repz xlat out lods lods jbe lret or mov insl (bad) cs (bad) (bad) test or mov movsl test sahf inc (bad) cmpsl pushf lret mov xor jle jg push scas rolb sub adcl leave fldcw aad fadds repnz inc ds addr16 add sub mov sbb scas or movsb js mov sub ret mov dec push mov mov pop pop movsb xchg inc xchg in mov sbb loopne pop popa mov pop mov pushf cld sub and push cwtl dec sbb mov test pushf test sbb loop pusha nop cmp and cmpsb ljmp jns inc adc int lock push adc cmp fs push insb cld data16 xor ljmp ja pop adc cwtl xchg inc cli mov cs ret or jnp inc inc jne fyl2xp1 mov xchg jb movsb xor jle or ljmp lret adc add stc (bad) out (bad) dec cltd or or pushf mov loopne loopne mov xor movzwl fistp fs cs and push and stc in fwait jecxz (bad) xor ffree and dec xor mov test adc xor fadd dec inc aam pop lret xchg xor sti dec jg lcall push jne push and adc mov jb cmc push inc aad inc test movsl loope sub cld sub movsb inc nop cmpsl dec mov jge test mov lods cwtl stc adc rclb mov pop (bad) outsb ret jne aaa cmp repz sub hlt dec inc lret jg add mov or xlat popf (bad) push xor inc inc outsb inc inc lea in cmpsl xlat mov push shrl test jle push aam sbb imul mov lret xchg mov xchg popa cmp xchg adc inc pop ret bound lods imul negl loope push sub in mov mov idivb xor mov js popf cltd test or cmpsl gs and ret dec jns inc or push insl sub loope sbb add cmc mov adc je test cmp add xchg call xchg int inc mov inc into scas gs pop push mov (bad) popa call iret mov inc les aaa mov ds xchg cmc shrl lea add dec mov cmp jnp rcll ret add dec add (bad) fidivl outsl cs jmp cmp icebp aad iret shr fdivs scas and (bad) ljmp cmpsl in inc and (bad) lock insb scas leave adc add sbb sti ret and xor cmc lea inc pop add mov repnz mov cmpsl cmpsb les paddusw das dec and or repnz in sar fsubs int3 les fmuls inc stos cmp jmp stos scas cmp xlat sti dec adc sub pop mov and loope lahf or xor aas iret push rorb mov gs push mov (bad) popa xchg fistp mov mov mov sbb push mov (bad) or and sub add mov aad rcll imul push add pop in call inc lea or inc xchg xchg adc inc icebp add or pushf sub imul add (bad) icebp hlt mov pop inc pop fwait mov mov fldenv imul mov stos lret fwait sub mov aad loop sub ss lea dec out xchg mov call and and aas push sub sbb clc sarl push jle rcll ljmp add stc lea push mov mov insl pop sti outsb int3 sbb loope or add sbb pop sbb mov mov mov les xor (bad) push xchg icebp lret xor test mov ds in sub out icebp cmp push enter jle arpl jecxz mov imul mov pop fdivr sti cld mov call xor fist jb jno and (bad) mov imul (bad) adc jne pop cmp and mov stc mov mov fwait shll mov mov test outsl in sub rcl in pop pop inc jns sbb test popa xchg or sub aam mov cmc es ret ret repz fsubrl dec pop lret orl dec pop jecxz cli lea inc jo into sbb lds lds aad (bad) ds inc xchg add pop lea pop adc push cmp jne dec stos mov sti aam pop adc out adc daa add mov (bad) mov sbb jmp push jmp xor push mov enter daa js arpl mov pop dec lock and cld mov aaa sub jne ret stos push (bad) push add cmp mov jmp add rorb mov jecxz xchg sub fucomp fcoml add bound inc push push jl pop mov and cli stos pop cmp call fnop mov std cmp icebp icebp push pop rcrl cmp out test jnp jecxz jno jg jge hlt xchg fildl jns mov push or adc call push pop dec into xor adc test sub and daa (bad) std xlat aad es test cmp xlat sbb and lea or (bad) icebp mov int3 adcl cmovo ljmp fildll test bound xor push lock int sub sbb gs mov push jmp imul mov jns fildll or loope jae mov mov mov and mov call mov mov in mov mov and lgs push hlt testl outsl nop stc scas daa cltd inc push mov mov mov in xlat xor insl (bad) xchg fidivl push das out mov push ds shlb xor lods mov std loopne jae arpl push xchg daa test iret gs jl or leave (bad) cmp xchg cs cmp test insl add mov sub push bound or adc add mov xorb mov push jle jb jo jp outsb imul push popa scas jbe push lea cmp loope pop dec lea out and mov sbb xchg and (bad) gs jge mov daa in mov or sbb aad add xor push push pop jmp insb sbb shll fsubrl add adc sub imull (bad) out mov xchg push mov pop sub iret pop sahf call stos push cmp out fwait mov aaa ret loopne (bad) out mov mov cli mov cli pop push out cmp mov push sbb push lods pop imul jl negl movsl cld and mov jmp cwtl dec mov push mov and dec or xchg or push nop je ds push xchg sbb ret shl push cmp jne push jnp push into mov lret xchg loope xchg pop push outsb sahf inc cltd adc and mov xchg pop repnz xlat pop mov shrl daa js mov ficomp jmp call call xor jmp cmp cmp mov jge aad mov mov ljmp dec stos (bad) (bad) xor test push ret dec sub mov mov daa jge pushf hlt lods push std je out ret es (bad) xor jp daa (bad) enter test scas cmp mov push movsl sbb cli pop dec adc lods arpl test inc inc mov insb into cld mov adc sbb fnstcw xchg sub lret jmp cwtl inc test mov test or arpl cltd or xchg aam xchg imul mov aas aad mov jecxz inc and popa daa imull ja push in push lret hlt lahf push add data16 repz call leave sbb (bad) sti xchg rorb (bad) cwtl add inc dec pop push mov push out lret int lret je mov fbld dec pop push lahf mov dec push aad or xlat test pop ljmp inc in stc mov ss mov stos leave cli jmp js mov mov neg ss and (bad) repnz mov cmc inc push mov jmp pop in adc ss xor sub imul xor add xor mov roll lock fistpl mov das cmp and fwait mov xchg mov nop sbb movsb dec test aaa mov pop insl mov push pop adc sbb xchg cmpsb push pop dec gs lret pop lcall add mov xchg test (bad) arpl xchg xchg or inc mov inc cmpsl les sub cmp sub xchg inc loop mov add cmp iret dec rorl es inc adc jbe or dec (bad) inc cmp xor fwait push sarl outsb loop loopne inc adc je (bad) inc mov ss push add inc mov sub sbb cli ds dec in ret and clc insb sub add jns hlt loop cli lret mov fs repz lods out jl fst fildll mov pop inc sbb (bad) mov mov sbb cmpsl xchg mov pop pushf aad add and loope jne xchg jne inc sbb shr jb daa jl ret cmpsb mov fwait (bad) mov and sbb sahf xchg iret cmp iret mov sbb int fwait addr16 push jle pop and lea xchg in je mov insl pop dec outsb mov lret pop dec loopne and xchg shrb jae xchg sbb cmpsb lock mov out jecxz lsl dec push out xchg sbb out jbe xchg inc (bad) xor shll popa adc xchg xchg add mov ret pop pop lret push jmp ds jnp inc inc mov cmp aaa dec test add (bad) xchg and cld sbb mov daa mov add fdivl movb mov int3 jnp mov int cmp push mov jns dec push mov adc xor fdivrl insb push je shrb mov loop cmp mov aas aam push outsb pop pop lock int3 pop rolb adc push test shrl je or das adc fisubrl sub lahf popf push ja push nop pop in add insb out jmp mov fisttpll mov mov rolb adc mov sub pop lret lods dec mov int in pop fistpll jo fs adc push push cmp icebp dec cs js popf inc mov aas aas lcall fbstp mov mov and mov jb adc xchg jo ret sbb xor iret lods xor pop sti mov test sahf pop int3 mov adc push cmpsl xchg pop sub hlt fmul cmp push and adc enter mov xchg and cmc test or jge mov inc sub in orb mov or and adc sub aam lret sti xor icebp add iret mov std iret push cltd cltd inc mov (bad) lret (bad) lret mov xchg mov pop or xor aaa mov insb sbb pop jns pusha dec mov ljmp mov adcl ljmp sti or scas mov int sbb scas repz test iret adc lock jb sti jl and inc add cli cmpsb roll cmp xorl nop jmp cld push and inc jp add push xchg loop pop fsubl orb mov cmpsl lods adc xor loopne cmc movsb xchg ret into pop mov inc cwtl outsb in push stc mov push ret movsb pop loope pop jmp repnz push iret xchg (bad) stc inc mov repnz push jle push push in mov dec cmpsb das jmp dec mov sti mov call or add xchg jle out rolb mov sub es ret jno push mov add cmpsb sbb pop fs and mov (bad) or ror jge test mov mov call test insb inc ror into sub pop lock pop outsl fiaddl fildll (bad) mov mov mov insb cmp cmp jno cld adc push gs mov xor roll loope xchg bound dec push push adc ja pop cmp jb orb add cmp loope mov pop (bad) or sbb cmpsl cli fnstcw dec (bad) jne outsb pop pop xor mov shrl scas mov cmp popf jl push jecxz icebp mov and stc xchg add in notb cmp loope loope push movsb cmpsb cltd add xchg push mov shlb loope lahf outsb push imul adc dec dec mov pop mov xor sbb mov mov cmp mov iret inc insl jo xor cmc jbe scas sbb test mov popf mov ds xor test test pop fsub (bad) out stos ret xchg loopne sub pop jno adc mov jmp xlat aaa (bad) sahf pop (bad) add mov mov lods jb inc dec lret mov xchg mov jb xchg jecxz nop imul aad fld cmp xchg xor add jns add call pop dec fwait mov mov aaa lret ljmp pop adc (bad) rolb sahf dec pop int3 mov aaa outsl mov dec test je dec mov loopne test add sarl xchg mov aas mov xchg bound adc pop jb jae mov fdivl inc aas mov stos push or jne mov enter cmp std daa out imul push xchg (bad) jbe xor xor nop or or mov movsl push cmc jmp cmc xor rcrb push jmp xchg jnp sub mov xchg (bad) pop jb sbb cmp inc hlt lock adc xor push xchg cmc push jle fstl std scas repz ret in mov cmp xor dec sbb mov dec push mov inc (bad) insb sti aam adc sahf incb add jae lret or sub jl push pop idiv mov pop push or xchg gs sti sbb test mov in mov das and mov add inc fild add test daa fdivrl int3 xor cmp loopne (bad) jbe push mov pusha (bad) cs cltd xlat jno xor adc ret inc mov sbb cmp xor test sub add aaa (bad) add cmp or ljmp in pusha or iret mov jnp or scas ljmp add outsb xchg jbe push mov jl pop adc or lcall outsl xchg addps pop add (bad) out push mov mov popa sub jo sti cmp mov cmp out fstpt xor loop or sbb out (bad) outsl arpl daa xor xlat inc push adc fidivrl sbb mov cmp mov outsl shlb lcall daa push xchg aad or out rcll stos pop (bad) cwtl imul stos idivb data16 (bad) push push dec and xchg (bad) mov call inc or mov and jmp jnp push pop aam scas or fstpt out cmp loope rorb ja out loop lcall adcl cmpsb rcl jg jbe jmp cmp lock fldt pop sbb cs aas dec stos sti xchg cwtl rorb jg and test push add pop rcl cli inc (bad) sub out xchg mov in gs ljmp in fmuls dec sub sub lret pop (bad) mov call out pop jg (bad) sub xchg mov push mov out cmovb clc popf rorb nop inc adc mov dec add inc jl call stos adc (bad) pop inc das lods clc (bad) pop jne movsl (bad) cmp in mov pop xchg pop mov mov inc dec mov out cmp mov xor xchg and cltd xor or sub and push push dec sub and mov cmpsb repz push mov push mov popa test test bound ja pop jecxz lock xchg fbstp sub pop cmp ret mov mov fnsave std ljmp push pop (bad) mov rorl in cmp or lea insb mov mov or push or cmp inc xor clc stos mov arpl jnp xor (bad) or jmp sti fdivp push inc popa test xchg hlt fs mov sub fwait cwtl or js test in fisub adcl mov mov mov sub lcall xchg mov mov mov dec arpl push jae nop call (bad) jns nop add or bound mov out cmp and mov push ret hlt pop ret xchg cmp das out sub cwtl pusha hlt pop fstl xchg xchg fldpi aam lods jmp add fs fs jecxz sub dec in movups dec pop ss lcall js inc pop flds mov in inc push mov shr nop std and jp add fwait sahf adc cmp aam add inc (bad) nop sarb insb outsl adc jmp repz lods sub adc inc aad push test mov shlb jbe push jge sbb movsb jg mov xchg dec push cmp push mov frstor push stc dec mov in ljmp mov addr16 push sti xchg ss cltd lea outsb call aam sarb mov rclb into push mov loopne (bad) push imulw stc loope mov mov (bad) mov addr16 inc stos pop sub inc push sub repnz xchg dec insb push pop shrb cmp cmpsl cmpsl inc mov cmp xor pop (bad) add fadd or enter outsl movb sub fcomip mov adc add and mov and (bad) loopne ss pop (bad) (bad) int loop add jl aaa and cmp test ja mov call mov mov push sbb arpl adc daa xor sbb or insb xor ljmp push push mov int3 (bad) mov lahf xor (bad) mov in dec out and (bad) lret leave das js dec clc jmp hlt sbb test xchg add scas loopne stc jmp out xor cs xor mov cmp mov dec sub sub jb adc cli sbb mov fildll movsl addl jle sub std pop daa into out mov shll xor cmc (bad) notl rolb adc sahf loop rcl mov shrb sbb jmp clc xchg fistpl or popf mov mov adc imul adc outsb inc dec out outsl aaa mov jmp aaa xchg pop movsl movsl insb inc aaa sbb dec cltd dec fimull pop adc jmp dec sbb loope xchg arpl sbb in adc xchg xchg push and inc sub adc popf cld dec mov aaa pop repz sub push sub outsb ja cld mov arpl psraw mov (bad) rorb scas dec jg sbb jno dec sub mov inc lock out aas dec shrl push lret aam cmp jecxz pushf nop mov or ja xchg xchg mov loop inc inc js mov mov mov mov adc scas out pop stos sbb dec xor sbb jne bnd rorb or add pushf rorb mov lods sbbl jb inc into add sbb das cmpsb lods pop or lock sub jnp daa out cld lods xor sub lret push xor jge xor insl mov add stc (bad) mov inc movsb nop mov fsts and jne enter xor add fs push stos xchg inc in or lret sbb insl hlt jge ss rorl outsl std push and lcall mov orb jb (bad) cmc add xchg subl je mov cld push and pop popf loop fxch adc fildll push xchg mov cmp inc jne pop xor xor mov adc adc pop inc and pusha stc inc faddl pop cwtl sub aaa pop xchg dec cwtl fwait jbe dec ss sub sub sarb cs fcomps mov dec je in les cmp das adc stc repz inc lods nop jle sub inc into add imul cmp outsb clc sbb inc popf pop (bad) mov pop ret shl popa xor int jge pop xchg mov cmp (bad) and jle pop xor mov lods es pushf and jle jp or xor lea rcll lea or dec popf sub gs movb in mov or jl mov adc repz sbb mov add push loop cmp cmp add inc rcrb aas or aaa pop js adc dec psllw jb imul push lods cmp sub pop ret push sbb lahf mov jmp ss xchg scas rcrl int cmp (bad) loop push add loopne or xor nop xchg rcrl sub shll mov je push mov jbe gs inc cmp push xchg notb imull mov lods jne and push add pop dec insb cmp dec sub mov imul mov dec cltd push sti sbb mov iret roll insl pop push scas mov (bad) cld xor dec rcl adc mov add in in mov xchg pop or pusha (bad) inc jle inc insl fwait mov arpl int3 push fld1 inc es jmp jns int3 stos xchg pop ja pop fsub aad xor xchg mov ret inc rcrl mov test sbb lds xchg in negb bsr sub inc push mov adc nop and into repz int xchg shlb xor test lcall lahf cmp push cld sub push dec lds fsubs stos sub xchg mov mov mov jp lods inc push jp cmpsl imul mov or sbb fsubrs sub aam mov cltd pop push dec sub int push mov mov sbb popa jecxz lcall cmpsl sbb cmc cmp mov push mov fwait (bad) mov mov scas push std aaa ffreep sahf popf leave xchg dec test cmp or test fs mov and mov xchg fmul xchg jno shrb das dec push xor test sub (bad) idivl jmp cli (bad) sub (bad) push (bad) push push mov lea jmp out xor aam cmp ja mov inc jge mov adc and leave adc jecxz mov jecxz push sub sub or ds into or xchg aam mov cmp dec add nop test fdiv stc xor xor fdivrs jnp fmul loope add add dec push cmpsb sbb mov push gs or xor add jl dec sub adc mov data16 adc in xchg jno ja push pushf aam push (bad) xor xor out sbb sarb cwtl add fs adc add jl mov hlt shl iret js mov push out popf and mov aas test into dec mov iret adc xor and mov and outsl push aam ret mov into das mov and xlat aam repnz nop mulb popa sbbl imul jmp fistpll pop add movsb xchg xchg pop daa daa leave add pop xchg cmp shll je mov into scas aaa sbb jne pushf or imul ss (bad) xor inc xor or sahf neg mov inc call (bad) mov (bad) adc mov push lods sbb rorb push lcall sbb hlt mov cltd mov rorl test rcl das xchg adc or cmp sbb adc loopne xchg jecxz dec xchg pop (bad) repnz lcall aaa lcall or or dec pushf inc pop or mov sbb dec push pop fsubp jg (bad) nop push pop shrb jge fisubr (bad) inc sbb out xchg xor ljmp pusha inc repz test cwtl out cmp cmc and xchg js cltd cld je call repnz dec fsubrl or in hlt cli jl inc and xchg mov jp mov lea pop subb imul lcall sub leave mov lds mov add int xchg mov or pop mov xchg push add add pop rclb mov and inc popf in shlb pop sub sbb (bad) popa xor or xchg scas (bad) mov cld jno or inc pop or push jle mov popf jae pop pop push inc adc push and mov js ret and push cmp xchg ret mov jns xor jno mov dec inc loopne push pop and mov scas in imul jg bnd aaa mov std and jl mov add push push jno cltd sub sub xchg das pop add int3 (bad) popa ret and or ret stos jae popa xchg push fwait shrb adc clc sbb ljmp stos out daa arpl mov (bad) cmp hlt and add inc scas std cmp mov xor cmp ret mov or js mov mov dec psubd cs popa fst mov lret xor cmp rclb xchg jg adc imul inc cmc mov loop lea dec mov mov cltd (bad) not jb aad in sti mov cmpb repz cmp in jge fwait leave inc sbb test outsl fs scas insb mov (bad) ja rclb jl loope cld mov insb dec movsl outsb cmp jae mov and cmp aam imul in mov clc ljmp pop iret cwtl cmp test cmpsl add imul loopne mov xchg dec sub inc out sbb and jecxz push jo cmp xchg call shrl clc mov pop enter sbb inc cli cmp inc fcoms shrb int xchg fldenv push mov inc add sarb add ss ljmp ds dec sbb les pop fsubl inc nop inc sub hlt sar movsl clc fimull jge jae dec and dec mov fbstp mov mov stc pusha or push mov add sbb lret std daa loop rclb add popa insl mov xor push aad les mov loopne xor xor sbb dec popf mov gs pop xchg mov popa cmp adc fldl mov pop xchg mov repz or xchg imul mov add repz pusha std ljmp or test (bad) pop shll jb fdivrs vphadddq ret lods mov mov out shrl bound mov imul or lret sahf in cmpsl push cli into (bad) lret movsb mov cld xor jp push or sbb sbb sbb bound xor push nop xchg (bad) inc xor loop pop xchg jae sti jno pop out fistl xor pop cmp xor mov mov aam xor mov mov rcrl or cld push mov pop (bad) (bad) fistpll and dec popa rorl lea scas cmpsb fdivrs lods in dec adc cs mov cmp xchg fist or cmp or inc lcall stos inc lea dec sbb stc xchg aaa adc pop sub cwtl jge pusha dec inc xchg adc hlt jae mov dec rcrb pop pop int3 xor mov push or movb jmp into test mov sbb push aaa sbb dec mov pop loop push (bad) pop pushf mov jb and cmpsl fistpl leave test push push pop sbb push or add add lods call sbb sub fistpl xchg cld pusha leave xchg cmp std lods jbe test (bad) ficompl mov out jae xor adc test jecxz (bad) (bad) out cmp int3 adc popf ss xor sub dec ror cmp call or mov aaa cmpsl jne loop or adc xchg scas and jno cmp sub push andb jle push dec jp mov adc aas mov imul in (bad) imul or enter test repnz pop pop popf stos in or and (bad) mov or adc dec icebp je adc cmp imul imul ss push mov test outsb test mov (bad) mov dec or mov (bad) pop and prefetch pop ss adc fiadd nop cmc inc mov js movsb jns hlt jp and daa shlb mov pop pop push inc lret into into mov xchg dec pop stos notl mov or fsubr inc cmpl or mov dec data16 mov cmp cmp shll mov push imul jl xbegin lahf push repz mov sbb jae and out (bad) stos hlt jo jns int3 and mov (bad) lds rcl aad add test push cltd mov repz nop or inc (bad) (bad) frstor cmp mov in and pop lods inc push push imul sub ljmp in xchg fstpl test sbb add ds sbb mov mov mov daa xor push (bad) pop add aaa jge inc fwait cmp or add xor jecxz dec cltd jp out add mov (bad) xlat mov out mov cld (bad) mov neg popf adc jle dec adc hlt test or sar dec aam mov call mov test adcl stos inc mov psrad call and jnp arpl ror (bad) fildll sub xchg pop inc imul jns (bad) out test add adc cmp and xchg dec addr16 jl ja in popf cmp jne adc xor gs add aam pop xchg add dec lods mov roll daa cs fnstsw and outsl or xor stc lcall pop subl add xor lret cmp mov or inc fistpll push cmp in mov insb xlat test stos inc imul les mov in mov mov dec xlat out in data16 pop mov cmp fadd idivb mov into movsb fmulp jbe and jb mov jp into cmp adc inc arpl xchg xchg push mov jl outsl mov add push test sbb pop jg lcall repz js cld push push dec or cmpsb int pop push fdiv inc (bad) sub jo js sbb nop stos popa iret push and fidivl pop add (bad) clc sarl push sbb jns dec rolb leave mov stc shlb and and add push clc out cld xor jle pop mov mov adc mov enter fcoml mov stos mov add xchg push test inc test and lods jae mov sub mov loope sub orl or cmp popa pop (bad) leave pop andb push jbe jge inc jns enter mov ret call pop cmpsb rorb xchg jg mov jne ror pop in mov out outsb lahf xor pop jl cmp and sub adc test xor mov xorl xor or (bad) cmp xchg into aas jp mov jmp jb pop movsl fdivr data16 out push ficom pop sub or push gs adc mov pop scas dec inc mov cmpsl scas outsb out (bad) jo les dec add push insb loop sahf test loopne xchg stos jp sub dec andl lods rclb pop in data16 mov hlt loopne scas js adc aad (bad) imul int3 cmc mov mov repnz inc mov sti adcb xchg jg jnp les test jbe xor cmp cwtl stos inc rcrl mov ds scas lods cmp jbe jge mov cld nop inc mov std xor mov cmpb pushf and icebp xchg push sub mov sbb out push mov js push dec mov out mov sub test cmp cmp dec mov andl or cmp call pop xlat sub fwait mov lds dec mov mov sub out scas (bad) into mov adc jl adc mov je sub fadds in jl aam or mov jbe mov mov fistl dec cmp mov mov lds add frstor jge inc pushf mov mov mov nop cmp dec and add push xchg jne dec pop outsb or and push movsb push add aam bndstx lahf fs or jmp mov cmp cmp ja or lods outsb pop pushl xor jmp jmp outsb popf mov push sahf add pop fisubr dec mov xchg inc mov fdivrs xchg das stc mov cltd mov ljmp or dec add gs aaa mov std or sbb xchg mov pop sub jns sub jns (bad) mov mov sarl mov push mov sbb out lahf ret loop pop scas inc xor and int xchg cmc (bad) ret xor sub int3 and mov inc add sub mov sub pop shll je lret mov fdivr jae lret mov inc mov pop mov xchg add into in mov inc test push xor scas test adc movsl ret jl in pop pop int dec add int (bad) mov pop out fs movsl adc (bad) or mov xchg sbb je mov cmp cmp divb inc sahf jmp jecxz jg lds std push mov pop push pusha dec push push arpl sbb mov and dec push fdivl lret dec cmp (bad) stos inc add repz sub pop pop jmp jns mov insl (bad) pop imul into incl loopne (bad) push jmp jo movsb pop out out mov div jecxz test cwtl test stc cmpl ret mov sbb sahf dec std push push dec imul lds mov imul pop (bad) (bad) jmp mov or mov orl cmp push and adc imul sbb sbb xchg jo (bad) idiv mov int3 jle adcl imull enter mov (bad) sub jp mov mov push fdivrs and mov dec cmp add mov aad pop xor cmpsl dec popf sub xor adcl push xchg (bad) cs loopne pop data16 (bad) stos adc fidivl push test cmp mov bound inc xor int3 add int3 sbb xchg inc scas push pop shll out mov inc cmp mov mov cwtl pop pop or push xor jbe dec notb fisubrl or mov mov adc sbb and ss mov xor xchg push jbe mov (bad) std outsb inc sub shrl lahf or jmp je out das ror fst sub in loopne outsb cs mov mov stc rclb aad gs inc nop lods fyl2x inc sub xor push or ss outsb movsb xor in je sbb dec adc sbb ja,pn sub test dec jl xchg xor shrl scas pop or or bound mov pop jp xor pop push nopl mov pop hlt and cmp push xor jnp mov xor cmp les xchg popa fnstsw dec push mov jmp lock sbb (bad) fidivrl lds sti jnp mov pop adc ds mov adc lock mov lar and adc (bad) add sahf or in xchg ret mov sbb jle mov mov jnp add inc xchg es int3 dec and xor push fdivl sbb xor add loop inc mov mov mov xor test cwtl cmpl cmc jo ljmp int stc mov sub out sbb cmp cmp jl jp push (bad) gs hlt je fist das cmp sub ret in std out jge insb add adc cs sbb stc in (bad) mov ja cmp shrl push enter enter sti adc dec addr16 in lcall adc cmp push int3 adc xchg cs inc adc (bad) xchg int adc stos int3 jne cltd adc add mov inc sahf movsb imul xchg addr16 repnz xlat jae jbe add (bad) nop and xor jmp leave sbb mov cmc enter xchg fnsave xor mov xchg inc std pop repz mov jne add mov repz jmp mov das pushf fcomps and mov cmp mov ja xor and mov (bad) (bad) cwtl sub ret scas push push sarl outsl aam lods bound sahf sub dec shrb cmc das mov (bad) add mov xchg sbb lds lods leave lret xchg xor and xor ja loope es stos push mov dec fs push cmpsl aam fnstenv jl jns lods pop sbbl cmp sbb xchg mov sub push adc cmp bound das push sahf pop jl popa fcmovb mov sbb outsl fsubr mov test push fsubs xchg js push mov mov daa fcompl dec sub idivl jg std imul mov repz dec cmp lret push jp fisttpll out mov int3 dec pop dec push loopne fldenv shll (bad) shrl pop movsl in scas push fistpll dec ja iret inc mov in movsl push ljmp je repnz call jg xor arpl push adc mov test xor (bad) xor pop fsubp pop call mov jecxz fwait or in cmp (bad) sbb ret sti insb mov out xchg ret movsb pop lcall inc ret stos bnd dec sub mov push daa movsb dec xchg cmpsb fnstcw repnz arpl lds pop in mov mov jns dec mov imul lds lock decb adc lret cltd mov ret or stos lret mov shlb bound ret add call outsl lcall push pop std mov xor repnz rorb push mov ljmp push andl xchg dec push hlt into sub push enter xlat adc cmp cmp pop rorb mov ljmp jae cltd aad push mov mov cs mov and pop pop in sti movsl es hlt je jbe loope push add xchg jns push scas xorl (bad) aam jge into xchg push lahf lock cs pushf xor lods addl fimull dec xchg mov sbb add jne lret mov movsb sub sub ss jle sub mov inc rcl cwtl lods mov dec popa cmp and test (bad) out dec aas jg hlt popa cwtl aas movsl jns subl sbb mov popa repz mov jp in add push jne jbe mov push pop xchg cmpsb rcrl fldt sbb daa inc sbb aaa xchg push jne bound sub cmp push jns cs inc jae hlt lahf fsts aad dec in fdivl lahf inc pop pop lods aas popa stos nop add mov test mov inc mov jg mov aas mov or mov xchg into mov lods loop out test pop mov jns mov jb jnp,pn mov xor fstpl hlt aam aam into jl aam sub loopne dec (bad) aaa mov arpl lret ja (bad) cs ss mov ret xchg xchg cmp pusha loope dec inc jle dec rol aam and sub stos sbb int3 pop pop add ret mov or insl lahf mov fsubp sub mov fs and mov div test jge xchg pop out test inc mov out icebp xchg les leave xchg (bad) or pop lock cmp adc pop popf mov mov cmpsl rolb sbb andb add push adc vmovq dec xchg pop es and ljmp adc sub dec fadds xor mov enter dec inc (bad) int3 in in sti mov xor and mov pop pop push mov test or mov cmp jecxz jo xchg pop stos popf dec addb or push cmp negb push rcll jmp mov push and aaa imul xchg cmp into pusha jl out movsb add (bad) xor dec dec mov adc sub cmpsl lahf xchg insl out jl and es jb mov das xchg loop in sbb (bad) ret dec mov fs out mov mov dec jb jno and movsb lret mov cmp mov push add in push movsl (bad) jno mov int3 push cmp adc jg mov es ljmp aad mov repnz (bad) jbe nop jecxz xchg mov sahf push push daa cli arpl imul jl push inc jl sar addl pop dec aas xchg lcall movsl mov inc adc add lcall pop jle jge popl ja popa xor mov or in pop push push lret ret rcll data16 hlt loop test pop les mov jne mov pop dec xchg sub and daa sbb cwtl pop cs push movsl xor adc push xor jp ret addr16 add inc mov popa arpl add mov enter sub dec or jle and int in int pop (bad) mov bnd jmp inc arpl push sub stc inc jns xor jmp jge clc xchg stos jo xchg stos mov mov insb mov dec mov bound aam and out test add xor fimul in and pusha jae push push jp add push cld imul jmp lds sbb popf adc cmpsl rolb (bad) cmpsb mov in sub (bad) enter lods pushf cmp dec jmp ja sub mov push jns js pop mov shl daa push sub je rcr repnz mov in jnp lods cmpsb cmp pop movsb add (bad) push xor pushf out adc xchg test cmpsl jns enter in mov mov daa out lds and jg cmp addr16 imul dec xlat lods mov rorb mov lret cmpb sub push sti (bad) xor dec add mov shlb std fcompl fisttp test add test mov (bad) and and adc out fs pop stc mov (bad) out xchg dec mov std pop jmp push leave pop cltd push (bad) xor xor cmc icebp popa inc mov imul lret mov pop in iret lahf mov adc pop or fisubr cmp xchg stc popf mov mov inc lret loope movsb loop sub cmp xchg ja ret outsl sti inc push mov sub sbb (bad) lea push test sarl nop xchg push test je rorb add test jbe aaa seta (bad) scas cmp xchg jb mov sub xchg test xor dec xchg stos add ss jb int3 ret sub out rclb adc scas push clc push mov cmpsb cmp mov lods jae lret enter xchg aaa cs jg inc mov aaa xor es adc test mov inc mov sbb xor jge push jno repnz (bad) notb xor dec fwait push stc add enter mov mov sub insb sti cmp and stc sbb xchg test imul jae add mov sbb cmpsl movsb loopne sbb push jmp test fisttpl or lret and imul mov pushf push jl pop pusha adc rcll icebp sti sbb sbb cwtl scas mov out inc mov push sbb (bad) sbb std fdivl pop fsubr and scas and imul (bad) xchg insl sarl cmp rcll sbb fadd cltd sbb dec (bad) push mov fdivp pusha int (bad) sahf dec xor lea (bad) enter jmp out sbb mov sbb sub add in or sbb aas xor sbb movsl fwait ljmp imul (bad) in lret lods cltd mov jecxz lds jbe into dec add sbb mov add or iret push hlt ja dec lods js cmpsl hlt subl in pop xchg push scas insl pusha mov test push scas push adc jge mull push jns dec out inc js or inc out mov ja (bad) fidivrl sub aad jecxz in ds jns outsb xlat cmp adc (bad) inc inc adc bound shr por xchg call sub lock rcll mov push xor mov mov subb bound add inc push mov (bad) ja stc adc in stc ficompl lcall js and loop pop cmp out out (bad) dec pop pop frstpm(287 (bad) (bad) pushf ror (bad) stos pop xchg add sbb cs cld cli sbb ljmp jmp call push push mov arpl jge push add out and pushf test cli mov inc shrb jle (bad) int3 jbe dec scas popl repnz dec shrl rcl xor ret daa hlt sub adc sub xor sti mov in pusha (bad) sub and push test ret cmc (bad) mov or dec inc popa jnp mov cmpsb cmp inc aaa int js dec aad cmp add popf cmpl xchg sub and push sub in cmp lds gs movsl ficoml pop add or jle lahf loop sahf lcall movsb ljmp mov xor adc sub outsb jmp jo out lahf insl mov scas insl dec xchg xchg into mov sqrtps mov lds mov sahf mov or (bad) push or jge fnsave loop arpl fildl in mov or inc fnsave push adc inc push mov (bad) out aam shll in adc loope fninit add scas fcoms iret imul jno sti insb adc hlt cli cmc in push rclb rorl fstl jno xor es push aam xor imul insl pushf inc stos aad xchg (bad) daa jne lcall pop mov inc inc cmp fsubp adc lock cmp call bound leave dec mov ret or pop pop fadd xor sub shlb pusha push andl push jo jg cli pop sbb add das pop lock (bad) inc scas or sub inc jo and out mov mov mov xchg shrl in xchg lods lock and pusha and cld mov add push cli pusha pop lret test dec inc push add sub ret out sub mov loope sub cmc cmp pop sar orl aas (bad) std mov movsb and sbb in pop mov ss cmp (bad) clc dec cli jno and fcmovnu fbstp pop sahf inc jl sti scas dec fsts loope cltd jle stos (bad) mov repz push xor xchg jp jmp push aaa xor std push xchg mov pop movd mov fcompl aas fistl (bad) jns xchg mov in cmp jns push fistp add test aam sub inc jne icebp jl (bad) fisubr inc jle sbb and stos push outsl adc xor in imul rcr push call mov icebp nop loop inc pop sbb and (bad) dec cld jnp fs and sbb (bad) cmpsb mov fstpl xlat pop inc mov xor xor mov dec mov ret ljmp into jle jae pusha das lcall sbb inc popf shlb lds fiadd push icebp cltd dec fsub sahf iret sbb out rolb ja in cmp cmpsl push mov scas pushf mov int3 sti cli adc into je or outsl (bad) mov mov mov jecxz xchg cmp arpl jmp arpl sbb in sub aam xchg cmp jno jg fisub sub out push jae cmp push inc push mov xchg sub and clc and repz outsl dec repnz sub sub repz jae cwtl or mov adc add dec mov addr16 cs ret or adc cmpsb xor mov add sbb jbe add mov ror push sub (bad) jne lcall (bad) mov cs daa cmp mov enter movsl rorb fwait aas push and dec in out push sbb or push pushf rorb dec adc outsb dec in adc mov push stc fsubrp stc sbb leave std in dec inc pop mov cmp xor (bad) ss lock out rcl mov lock jl andl test dec mov and xor or dec fiadd and and aam xchg push inc and lret fbld inc xlat (bad) nop addr16 insb cmp into fisubl (bad) out and icebp pusha repz push mov cmp in rcr test jo aad daa je mov inc out mov jb out adc cltd repnz mov mov nop fnstenv pop push add cmpsb jge (bad) sbb mov dec inc fidivl cmp xchg lds and lret xchg out jo cmp in stos sbb sub pop and xchg xor mov jbe xchg mov mov pusha jo movsl (bad) or inc rcll pop popf mov int xchg push push or cwtl out lahf xchg in add into push jbe xor dec loopne lods pop cld hlt push inc mov jl add fwait mov ja out mov xlat mov xor add int xchg loope pushf rolb ret mov inc repnz adc mov or sub mov xor out push ja xor out sub sbb mov add int3 mov cmp dec mov push cmp gs and andl lahf outsl in adc and or gs cli ljmp cwtl lds popf adc dec inc movsl mov mov push mov nop pop stos aas insb jl int sbb pop xor push hlt aam inc push pandn jle mov sbb mov (bad) leave into jno outsb clc loopne inc mov arpl mov test pop sbb xchg or das test cmpsl arpl jecxz sbb out jbe dec xchg lret stc mov jae rcrl inc cmp mov lods mov repz jle inc rcrl (bad) je push in add pop stc inc (bad) mov les incl sub js je lret ficompl xchg in aam pushf imul or pop xchg sub hlt push cs sarb pushf mov mov movsl cwtl bound xchg adc (bad) dec fist or sbb popa push mov enter test sub jecxz das fcompp mov lods mov (bad) test pop jns lret dec jge ljmp inc dec movsl sbb (bad) xor add mov gs mov xchg jmp in sub inc mov push push test sub cmp or xor jo orl add std jnp mov ja mov sbb pusha mov mov dec push ret and mov lds cmpsb cld div std push and shrl or push mov mov ds add aad sbb iret mov das idivb hlt test in sub inc xor adc push int3 mov mov inc inc ss sub sbb xor cld bound mov cmp inc pusha dec scas push int3 xorl stos orb add push dec sbb aas aam inc sahf in xor (bad) pop sub jl mov lock mov inc push mov sbb (bad) int dec fbld jmp dec pop (bad) xchg adc mov jp test (bad) cmp cwtl out (bad) dec dec dec jecxz and in or cmp push xor dec push xchg mov jbe in dec bound idiv lea into push mov loopne sub xchg cs test gs (bad) ja cmpsl aaa out xchg (bad) popa ficompl xchg push or cmpsb nop cmpsb pop cld dec das es or or adc mov sbb cltd dec jmp lds inc sarb push pop jge into rcrb fsubrl and adc ss cmpsb jecxz addr16 bound pop sub xor pop stos mov dec xchg aad or push push ljmp push mov hlt mov mov cmpsb mov xchg and sub rclb sbb jp pop outsb mov mov popa sbb movsl pusha adc mov in or cwtl and jbe in orl loopne cld cmp in es mov xor lcall insl insb int jnp xor test les je leave je sub pop mov inc gs aam mov cmpsb mov arpl adc out icebp xlat fsubrl mov inc mov inc adc adc ret jo lcall push or push aad icebp dec jno xchg and scas lds in inc lahf mov xchg movsb fidiv xchg sbb pop dec fidivrl stos pop sti xchg jb cmp (bad) divl sub mov or rolb pop mov aaa sbb (bad) mov jp arpl pop in push les mov js pop lret or in jbe sbb jne sti cltd push mov std adc aam cld adc push notl test movsl jmp fisubr js jp inc sbbl cmpsb int3 imul addr16 (bad) push inc sbb jl (bad) hlt xchg add mov leave imul xchg sub mov jg fucomi inc inc int3 dec in mov push rcrl jns add jge insb add cs in cbtw mov mov add (bad) cli adc cmpsb jge nop pop push xor fistp xchg std and adc insb cmp test push (bad) or mov in push daa lret cs adcb icebp lret inc push cld ret fisubrl pusha (bad) call dec fstpl fcmovu add faddl mov mov add jo faddp popa imul repnz jns jp std mov loopne addl cmpsl (bad) scas xor test dec push jmp xor fisubrl lock into call dec jo shrb imul jnp mov and lcall and movsb or jo ficoml inc cmp hlt hlt mov or and das inc stos ss movsl pusha ficom xlat aam lcall and mov push out push popf or das fs xor out jge aaa sahf data16 (bad) fidivr pop es inc in repz jge push cli jg and sbb mov aas (bad) dec lret and hlt cltd rol cmpsl and mov rorl cmp adc push stos mov les notl jb fdivr sarl aas mov aam test xchg cld inc and xchg or push xor dec cmp test add roll dec mov test popf out mov fstps fsub jp push mov in andl in call lahf mov es addr16 jmp dec mov shlb aam popf pop adc dec cld popf aaa mov cmp mov scas pop fsubrs pop push arpl and add jle adc or xor leave and mov lcall cmp lods in aas push adcb imul mov or aam enter jge and rolb pop sub dec je adc sbb sbb ja (bad) mov pop or das xor movsl sti nop stos (bad) mov pop xchg in lods sub icebp or adc arpl cmp lea mov and movsl adc jecxz dec ja cwtl aas fisubl adc dec popa notl inc ret jne pavgw (bad) cltd xchg ss (bad) rcr in and fpatan mov mov pop daa and pop fcom inc mov (bad) mov scas dec sbb sub jmp and (bad) lea lret and jp xor add pop xor xchg iret jnp jbe and dec xchg push lea fs add jecxz int popf aad mov mov mov dec rol out cltd jbe lds jp stc adc cmc loopne (bad) mov dec add or cmpsl ret dec adc dec sbb repnz imul ljmp dec dec in mov mov aaa mov jno inc sbbl bound pop loopne pushf aad loopne movsb mov stos loopne xchg (bad) sbb fimul sub outsb (bad) xor insl xchg cmp xchg add repnz leave insb imul xchg jg inc cmp enter data16 loopne lock jmp sub pop mov push imul cld push cltd push rolb sarl scas fdiv sbb push add stc mov out jne push cmp mov or das sbb pop cmp lea inc loopne mov adc mov add ljmp (bad) xchg and xchg fwait loope imul pusha loopne pushf inc das lcall mov dec ja aad mov ror jp jg inc or and in jne jecxz dec and mov adc cmpsb cmp cs fsts pusha iret lahf lcall scas sbb or scas xchg or data16 fistpl daa std mov push fidivl lea mov jo mov in sbb xor and push dec rcrl addl in (bad) negl dec cs sub cltd lods ja and mov xor inc push sbb push xor push cmp jae xchg push pop xor (bad) outsl jbe pop mov addr16 hlt ss bound push and mov addl aas icebp mov in mov les dec cmpsb imul ret into adc mov and fild ds sbb jecxz ljmp xor push and mov mov inc movsb xor mov mov movb cli adc out inc mov cmpsb pop sti in inc enter add adc mov add cmpsl into out popf xlat xor push (bad) sbb sahf int3 sbbl push loop scas pop add add movsb outsb leave pop add and js dec sub adcb push cmpsb adc pop push mov pop outsl rcrb or aad or insb inc stc mov jbe (bad) push (bad) hlt fimul or push mov xchg ret adc sub pop xchg daa sahf mov and jb ret jns cmpsb xor nop pop rcrl push sub pop ljmp dec mov push xchg leave pop popa inc (bad) mov adc xchg sti cmc xchg movsl or dec adc xchg xchg test pop jae popa jno mov scas push and push cmc pop xor push movaps add add sahf fs inc cs cmpsb sbb mov addl mov or cmp or push mov dec lahf mov (bad) call pushf mov fidiv jns test jl cmp call iret nop das (bad) lahf lcall dec pop (bad) adc push ja arpl aas fildl mov pusha scas push push std cmp hlt xchg or mulb inc jl movsl sub inc repz insl xor add push mov adc or mov dec push or icebp cmpsl or and mov xor loope popf jecxz (bad) and lcall (bad) std jmp cmp pop xchg jecxz cmp mov dec movsl in mov jmp ror cld inc std fmull inc push icebp or movsl and dec mov adc insl add inc cmp les repz int jmp add xor daa lret scas cmp mov sti aaa cmpl or push mov aam push fidivr or out push pop gs jmp xlat (bad) sub mov fisttpll out xchg adc rclb lahf jnp inc dec pop arpl xchg mov stos aam jne int cmpsl fs aaa loopne repz fsubs ljmp add xor xor mov cld pop testl fsubs lcall xor sub pop dec mov std in test shrb jo push xchg test xor jae out test adc insl and sbb pushaw pop add sbb and setne or push mov cmp hlt incb lret inc enter or mov xchg adc nop out es jge jns mov xchg scas or cmp dec xchg aas inc js mov push lods test pop (bad) xchg fdivrs int insl negb out mov adc mov mov leave inc in inc les sbb lret inc mov xor lahf test enter jecxz and lds mov cmp mov adc std push jnp push sub cmpsl mov ja jecxz cltd mov ffree jno ret mov xlat lods test call pop in mov cmp ja lods (bad) (bad) xor xchg cmpsb pop mov push fistp outsb lds cmpl notl mov (bad) jb inc aaa cmc pop js js xchg fcmovne mov jnp dec xlat jl jmp mov out repnz fdiv iret mov mov lods inc pop mov aam mov sub dec mov add xor adc lcall push in inc mov dec mov cli inc pop xchg shrl popa je loope sti jl mov dec sub ljmp das cmp mov push or notb outsl push xor mov xchg cmp icebp pop pop mov movsb inc fidivl lods push mov arpl scas stc mov nop call iret inc sbb jmp sub leave (bad) in adc dec es into push mov push add int3 mov adc repnz dec sbb leave inc jno and mov jns pop cmp pop push pusha xlat lret add out xchg loope push into sub stc insb and push add xchg adc inc dec mov imul push dec mov repnz in pop inc in jnp or inc sti (bad) fldt dec mov cs ficomp lock jbe (bad) hlt jp out push lock adc push dec xlat mov add iret xor imulb (bad) repz test pop jne mov mov pop xor mov pop pop cmpsb icebp sbb sahf in repz xor adc mov fimul repz add xor sarb and lret into fs pop and sub dec out aam xchg aam jae mov popf sbb xchg mov dec int cmp mov inc repz mov jae mov in popa mov arpl mov lods and ss negb fucomp cmovno jb into dec mov ret sbb shll repnz psrad xlat pushf fwait insl insl jbe movsb stc mov fildll push mov adc out add jbe addl bswap scas outsb mov loopne and jle ss mov inc loope mov pop jae adc int3 fwait scas and and aad ja xchg int3 in jbe test sbb xchg sbb mov jl sbbb and mov fneni(8087 inc aad rcrb ja xchg adc shrl test mov popf xor cwtl enter sbb sub or sbb mov stos pop arpl icebp jp xor jbe xchg lea mov push sbb xor cvtdq2ps scas cltd imul cli cmp jbe push stc ds dec les les inc in sbb xchg fwait idivb jnp test inc or in cmpl pop push cli xor jns pop mov popf cmp mov sbb inc or jno mov insb movsl xor stos arpl push mov add cli clc cmp pop loope mov rcl and jecxz data16 out lcall mov push pop movsb cs stos xchg stc mov inc bound es dec loope pop (bad) jmp or mov test mov fs mov jno mov xor mov jge mov or fstpt cltd ret movhps pop lret adc cmp mov push scas into mov inc es inc cmpsb mov fist dec in loopne in pop stc push dec lret dec movsb inc dec adc pop sahf push push mov mov push mov jne lret test and inc lds (bad) loope ret pop inc mov cmp push adc add xchg push mov out adc mov (bad) fldcw mov adc cmp lods lods adc mov (bad) push jns (bad) pop inc xchg dec sbb fistpll or mov adc push pop add pop leave out mov cld add jecxz jge (bad) cltd push cmp push mov daa cmp cmpsb xor call mov shll shll cld jno sub push pop fmull adc xor mov mov jmp pop fucomp test mov and shll lret incb cmp outsl dec repz inc mov fisttp and push ds cmpsb jmp out pushf mov pop pushl jle or stos repnz mov fnstcw and aam mov jnp (bad) pop push sbb outsl pop inc fdivl cs jmp ds pop sbb and adc dec into fildll jl cmp inc stc add inc sbb in push movsl xlat aas pop (bad) or outsb mov pop je pop dec cltd outsb ss outsl mov cld dec xor cmp pusha sub es pop sub inc cmp ja mov adc fisttp add inc pop jmp mov ss pop sub xchg add jae push cmp mov data16 clflush adc (bad) pop xor loopne add lret pminsw ljmp mov inc data16 xor cmp sub jno dec cmp push pop (bad) imul lock xabort ficoml addr16 not add mov add sub scas insb push nop push mov imul push data16 scas fistpll sbb jae adc (bad) cmp out cmp fildl inc cs lods sbb test lret scas mov das xchg xchg add xor fldcw xor inc xor or adc xor push das stc jl icebp push icebp pop xchg out pusha fnstcw pop sti jns pop into jb pop call push and jne in gs pop hlt js fwait int mov and dec push jne mov shrd (bad) mov ja cmp in test mov lcall imul xor stc xchg mov dec test outsl push jo (bad) xlat dec push ficompl insb sub push adc mov add stc dec nop fnsave dec dec lock repnz inc sub in in dec je fistp dec or cmp xchg iret fmuls mov scas outsl popa out xlat pusha mov (bad) xor sub pop aad rep scas aam dec add ljmp sub xor addr16 shr outsb mov and jo push xor cmp add add rorl adc xchg aam push lods repnz push jne lcall cli push flds (bad) sbb pop cli adc aam mov mov mov (bad) fisubr mov add adc sbb (bad) cmc pop push xor in pop mov int3 cmpsl mov dec dec negl rcl xor push pop or aas mov mov sub mov mov lret cwtl fwait jecxz mov sti cmp push cmp iret stos div jp jl lods fnstenv popf in imulb popf rcrl movsb mov bound adc clc sbb mov icebp ss out insb ds inc (bad) pushf inc and arpl push and iret sub fs mov mov xor adc adc aad sbb orb cmpsb addl js fild or sub push and lods stc and inc push mov sbb mov mov and (bad) sbb cmp inc jmp add ljmp sub cmp repz jmp mov fs data16 clc orb ret outsb inc push cli shrl int mov jecxz test in inc push out jo rcrl push add ljmp xlat test inc add and fcoms lret cmc in cmp clc fsubrs fiaddl das inc sub xlat aas adc dec adc in and divl fsubr lret popa scas fsubrp add or cmpsl into inc add lahf mov loope lahf or ljmp mov jmp dec fcmovnu push jmp insl mov imul scas fwait push dec pop pop fadd xchg inc lret sbb or (bad) push mov xor mov fnstcw inc adc add mov adc jp mov mov xchg xchg mov jg fwait fwait xor xchg out nop inc (bad) xor mov pop in cmp stos inc clc ljmp loope outsl in add mov or scas lea jns xchg fnstenv inc or sbb cmpsl jno movsb xchg clc fwait mov xchg inc dec dec xlat mov push pop cltd dec mov aam cwtl mov out xor xchg loop inc enter (bad) mov xchg test cli push (bad) hlt jnp out jbe (bad) andl mov mov fdivl dec mov sub add rclb add loope xchg jno lret outsb pop xchg inc fsubrl mov fbld inc jle sbb fstp jne mov gs cltd gs push insl (bad) cmp mov bound push mov outsl (bad) jmp push add or pop dec push mov (bad) pop fadd pushf jbe and leave dec popf out stc pop inc adc mov cmp in push cmp mov pop mov jae jge adc pop inc dec inc jo mov mov jb cmpsl add xchg jb (bad) movsl (bad) pusha pusha mov into push out fcompl inc pop jmp int and xor cmpsb pop lea es sar aaa lahf adc cmp pop sti jns push adc jge sub cmpsb xor mov and sub mov or outsb mov ljmp push xchg icebp add popa movsl int movsb sub lods or enter add add and sub cmc dec movsl shlb ja pusha rorl stos sbb in int xchg inc or and sbb inc repz int and insb mov cmp gs mov mov cmpsb xchg pop sbb dec jg mov out sub cs imul or push test test lahf cmp and clc jne test jge pop mov fstl and (bad) adc clc out (bad) xlat or pop repz in or jle (bad) in dec jg sub inc insl je lsl jp enter je leave lahf mov jle sbb ret cmc mov push pop jmp lret sbb mov les mov pop aaa mov sbb inc outsl sbb cli ljmp jecxz fs mulb add jb sub jecxz dec andb test or jp push in insl lods xchg iret mov or (bad) fisubr cmp or xor arpl adc mov mov fs jbe (bad) ja ficomp ja sub imul movsb dec xor imul jp js ljmp mov sti mov std jl nop pushf or mov lds mov pop add lea fs in out outsb lds arpl xchg call jge jno mov cs or out mov mov pop imul mov xor std push sti repnz or ret imul out push dec pop sbb pop pop xchg push lock (bad) and pop xor jno mov enter fcompl fcompl sub loop adc mov pop sub in aad mov rcrb and sbbl cmpsl cmp push icebp cs out xchg out mov inc xor ljmp (bad) xchg gs pop dec xchg pop xor addr16 xchg push and xor sbb fwait pop dec test xchg data16 sbb movsl call add icebp cs and in aas jmp data16 jbe push das sbb mov push (bad) loopne add jb push add jp push xor sti les pop pop mov iret in addr16 jb mov insl mov and out fsubrp adc or mov aaa ret out call das and push or cmp in mov pop out push or ss imul scas sbb pop and lahf in ret mov lcall (bad) rolb cmc sub cmp mov fwait scas pop inc insl in sub jns add jl,pn mov push dec xor sti mov inc jb add sbb cmp inc xchg mov popf xor push stc adc push mov inc sbbl pop mov jle lds icebp cwtl (bad) pop bound xor rcrl xchg repz popf (bad) dec fsubl bndstx mov andb or lock mov addr16 adc out mov js mov stc mov notl xor push dec fildl xchg xchg adc sbb xor or popf sub pop arpl xchg mov ffreep dec js lret push sub inc insl adc lock ss mov mov pop (bad) mov mov mov xchg das sti mov (bad) mov or arpl mov mov jnp mov push mov fistpl and in or and (bad) idivb js mov mov sbb cmpsb jno or adc mov mov xchg in mov xchg cs leave jg movsl popf xor lret ds stos (bad) lock push aas das adc xor (bad) mov adc xchg iret dec dec sub addr16 mov cs sub jbe ljmp adc cmp cltd jmp dec mov fcmovne repz jno push shll xlat push loope mov jmp roll sti (bad) rcr add sub mov popa xlat (bad) incb push pop pusha dec adc jne mov pop ja mov mov sahf sub test (bad) adc fs pop mov mov lret push push inc or bnd adc push adc dec nop add andb sahf push mov xlat incb xor push popf rclb mov jmp sub mov jge test fdivs mov aad outsb mov loope dec mov dec and xchg jb imul (bad) (bad) std mov (bad) cmp (bad) mov push mov ret cmpsl jae scas jbe sbb jl je,pt out (bad) ret mov or or mov mov test (bad) imul xchg sub ja or ret lret xor ss scas add and mov ljmp ja sub sbb fdivl jnp mov mov ret sahf sub (bad) ja iret adc (bad) test sbb insl jle pop je inc push movb xchg (bad) ljmp add pop mov adc je adc testb dec in jp jae test sub push outsl jecxz dec push adc dec or jae mov std decl dec loop lods mov mov sahf lcall inc popf pop pop loop xchg add jp out pop jae adc repnz test out pop inc jno das mov cmp mov lds xor je aaa sbb xchg lret pop jle push je in lds fnstsw les jae jmp into ret jbe and repz jl xchg pop and cli or in (bad) dec or and ret into (bad) insl push cli imul test icebp xor fisttpll pop jmp push xchg nop sub fcomi movsb pop jg xchg pop xchg jnp inc repnz cmp xchg inc pop and bound je cli adc lret xlat mov loop ja (bad) int3 ljmp ds fwait inc sarb jmp pop xchg fldl2e rcrl xor stos (bad) cwtl int pop std out jmp hlt (bad) rorb push pushf out mov pop pop mov or jo movsl sar pop dec ljmp adc aaa jg in adc push pop aad shll int cmp ss (bad) add subl pop das mov xchg xchg clc loop and and repz arpl call mov cmp pop fistpl dec std inc mov imul xchg sbb mov adc std xchg add enter pushf repz movsl mov add fst jns push fs test xchg jbe xchg mov xorl out xor sbb out leave les lea inc sub fidivrl call adc pop sub pop js (bad) sub cs cwtl pop adc lea scas pop fwait or js xor mov sarb fisub scas jae adc test js jge sbb in sub insl (bad) add imul sbb movsb lds (bad) pop jle les out imul enter aas push adc fstpl scas or repz mov insb fist fdivrl jmp fmul jecxz sub outsl sbb ficompl mov cmc mov pop (bad) and sbb (bad) push push gs cmp out movsb sbb dec mov fsubr (bad) mov jno mov push inc arpl adc mov dec aad jl inc (bad) lret dec neg inc xor lods fnstenv cltd fsubrl fsubrs rclb pop rorl out push jp gs push add push cld mov and jl leave aas out out add data16 loopne push or push rcrb fwait aad cmpsl sub insl inc call xchg push sarb cmpsb pop sbb jge fmull movsl aas cld clc (bad) in fs sbb sbb xchg jl push cmp repnz ds je push add mov jns mov add sub xchg push mov loope add xchg sub (bad) xchg ljmp mov add (bad) in in mov cmpsl loope fistl adc sti push lahf and out ja div dec xor lods loope and mov cmpsb fstl or mov leave in ljmp not arpl cmpsl out sbb sbb imul push out (bad) ja push mov mov shr xchg push jecxz cmp xlat repz addr16 fdivrp sbb cmp repz xchg jl inc gs inc push in cmp and push leave pushf icebp mov icebp int3 sub mov mov and addr16 jb test fldt (bad) push sbb or jmp (bad) not test rcrl lea jmp pop loopne push pop push or and testl stos popf inc cli outsl out movb xor sub mov xchg add push (bad) out insl lea xchg fcoml sub push into pop push fdivl adc xor sarl (bad) push dec notl xor scas les xchg jo xor loope sub mov add outsb cmp inc loop cmp add mov xor fwait hlt mov test adc cmp and (bad) loope ret mov pop repz cmp test sub out mov mov outsl aaa cld arpl lock stc inc div and xchg in xchg rorl addr16 rolb push cs dec sbb push imul dec cmp add cmp sbb cmp fwait dec xchg dec or push jge in idivl and lret and popa fucomi dec adc aaa repz outsl adc ss pop fiadd jo sbb dec or ss imul insb into xor test fprem1 (bad) dec fimul mov cmp cmpsl imul js js out jb xor popf sub sarl inc outsl or cmpsb sti notb mov sbb add cmp inc jmp lds cmp or addr16 mov or or cmp fs xor idivl (bad) cmpsb mov ret cltd adcb push mov pop push jle insl sbb xchg iret pop rcr cmp inc cwtl lock push aas xchg xor mov dec dec dec mov andl inc mov outsl stos and ljmp add pop xchg daa outsb add pop sub sbb int rolb pop cmp add cmp mov insb sbb add xor movsb (bad) xchg push and push adc jg xor mov xchg cwtl test test (bad) bound lds cli fisubrl dec mov push inc pop adc std add and xlat call add mov add jmp cmp int3 push pop or add jmp jb pushf lret inc cmp sub imul into sti xchg cmpsl test mov fcoms lea push xchg pop fistpl push call imul rcr out adc lock mov test push add lods dec jb jno xor icebp dec es sbb inc add xor lock pop inc in mov aam clc xor lods mov test sub popf pop dec pop fildl cmp mov repnz fwait cmp xchg pushf inc (bad) inc sub adc sti mov jae fbld (bad) dec inc adc imul xor roll daa xchg dec jb xchg pop jle pop por test pushf mov xchg sub arpl mov sarl push arpl adc ror mov fmul fimul arpl adc cmpsb jne pop lock out sub and fldt sti jmp push fist (bad) cld mov lret insb and add and mov cmp adc or cld loope sbb mov int push es scas push out xor mov out xor popa xor sbb das (bad) cmc xor pop adc imul loopne mov stc aas inc add mov or js adcl pop pop lret dec adc dec (bad) sbb data16 push cmp jb lcall (bad) xor cli stos pushf sbb icebp out mov adc clc jns sbb jno sub push xchg arpl movsb dec dec int sarb jle loop popf sbb sbb out fistl fwait gs imul and and mov cmp cs pop xlat (bad) shrb sub arpl pop mov xor cmc fmuls lret sarl ss fwait sub stos movsl sahf cmp adc push push arpl ja popa mov inc aad push imul push cmp mov je aaa inc ror pop dec inc aaa data16 sub and and (bad) bound adc jecxz xchg lods sub inc int js ret jmp leave inc mov mov movsl ss adc jno loop mov iret or dec mov sub and adcb icebp push ja pusha and std xor movsb jl sub bound add fildl mov and pop add jae and dec jne mov or dec adc fsubrl sahf pop jge jmp push mov fstl out add jmp mov popf mov les fiaddl lods ljmp push xor sbb int mov (bad) mov imul test iret sub push out cmpsb mov push dec inc add sbb divl lcall sub in mov sub dec pop and lcall in mov pop and mov loopne lock test js push fmuls enter lret push fcompl mov int3 jmp jne inc loope cltd mov inc inc pop cmpsl mov fs jbe sbb rorl adc das xlat jne push inc ds std hlt aad cmp and stos test sbb jle daa sbb stc clc (bad) pop cmpsl mov lods fsubs adc jnp or push inc idivl shlb pcmpgtb (bad) and (bad) pop int3 jns push (bad) mov adc jmp cld ret xchg ret inc iret and dec daa mov in ret dec xchg idivb das pushf sbb imul mov outsl dec cmpsl out outsl movsl lods push cltd mov adc sarl sbb xchg test xchg jl movsl sbb outsb mov imul cmp adc ss dec jae mov inc out push pop data16 out jb inc push out (bad) (bad) in sub int3 xchg mov push pop incb fisttp mov fwait lea fsubr (bad) and cmpsl xchg xchg push pop adc movsl je and fs push fsubrl in mov bound lret mov stos lds mov push mov dec mov xlat ss data16 leave mov pop int3 jo cmp (bad) pop pop or pop adc out test inc mov pop pop es or lcall dec cmpsl jo xchg sbb fwait jmp jl dec imul in pop dec std sbb call sub sbb fidivl int dec xchg loop mov sub push in pusha insb addr16 cmc repz xchg (bad) in push sbb dec rclb add fsubr mov (bad) cmc add fstpl pop stos adc sub jae loop sbb push icebp xor xchg pushf idivb mov pop xor sbb imul cmp jne test mov arpl lret (bad) call push sbb and repnz sub fildll push outsb int3 pop jno jmp push push test xchg jae fisub add mov jno es fidivrl push xchg clc mov rcr mov push sar dec add mov js repnz add loope jnp push das xor xchg jae cmc sub pop or (bad) jb in adc inc mov xchg push insb or mov jecxz push call push std xchg js cltd daa cli adcl lods repz xchg out jns jbe (bad) shll test inc (bad) push inc mov push and cmp mov cmpsl in sub xor arpl fs aas movsl aam mov cwtl jmp push jae add icebp aam cs push add xchg xor xchg xchg push shrl push pop mov cmpsl pop (bad) pushl nop (bad) push xchg loopne fldt js mov sbb (bad) loop push in jnp sub cltd lds imul cmc dec sahf cmp arpl pop xchg xor stc jae scas xchg (bad) xor test mov sub cmc sbb adc add cwtl mov flds sub lret mov or pop sti mov (bad) mov add in add sbb jnp imul xor sub int sub loopne adc sub and shl hlt pushf ret cmp sub nop add mov in and fdivp xor jmp push sub cmpsb insl xor outsb idivb mov xchg pushf test sbb mov cmp sub test jo fistl jle xchg nop ret popf pop pusha push push (bad) bound or and repz dec int adc cltd xor or jp mov sti fnop jbe xchg int out adc dec push cmp adc add lods xor in mov fldenv imul jg cmp push and mov mov xchg mov sbb fiadd mov clc loop mov sets mov mov dec mov mov xchg dec and add cmpsb jno xor add push roll xor nop push mov push sub lock (bad) lcall and in es aam mov dec inc (bad) fcomi mov shll xor mov clc lock inc sub inc ds cwtl (bad) push (bad) mov and cwtl rcr sbbl push fildll bnd lock (bad) aaa scas push adcl cmp xchg sub adc xchg jae cmp mov mov pusha mov cmpsl insl bound xor pop ret push les stos sub pop pushf add (bad) push add jmp sub dec nop and shrb pop repnz popa dec rcrl mov test add sbb and (bad) cmp adc xchg inc xchg dec jno test (bad) sub push or arpl mov arpl sub mov push or shlb push jno leave mov loope pop xor gs pop and out insb (bad) repnz iret arpl fcomi cmpl or inc adc pushf repz rorb adc jmp jo repnz mov add (bad) hlt lds (bad) jb dec push (bad) or xchg (bad) lret dec (bad) cmpsb inc mov mov movsl and daa mov mov std imul dec jmp xor inc xchg icebp push push push addr16 push inc inc gs lds push loopne dec insl xor xor push cs lods cs xchg inc jmp leave aad sbb cmp aad push out bound inc and and scas push (bad) xchg jp cmp push rcll (bad) sub dec ja lret mov pmuludq cli fidiv mov jne iret mov rolb cld lods into repz fisubr fwait ror cmpsl add rcr loopne insb in int stos xor mov cltd push hlt aas lret or arpl (bad) sbb dec insl ss pop fistpll sbb mov add lds xchg or movsl or cmp inc adc xchg outsl subb adc lock cmp xchg mov ds fs cmc push jg sub sub stc test enter mov cmp or cmp incl (bad) dec mov push jno lcall xchg cltd sbb inc push dec call and cmp in cltd inc lods dec shrb mov out pushf or cmp lcall pop hlt push jge adc rolb lock cmp imul arpl push std stos sub mov rcrb cmp ljmp sbb out push movsb cmp xchg inc mull fwait rcll pop inc mov xchg xchg fbstp xor sub and and mov incb push mov cld in add jge and and les test adc sub sbb out pop and adc jp fs pop cmp fs dec cli les fidivr lods or mov andl test sbb (bad) dec insb (bad) aam cmc mov mov movsb in jmp jbe sub loope fimul loopne cmp sub push outsb rol in jl fwait pop fsubs cmp pop inc pop push and ljmp push and and dec out in mov pop les das dec outsl data16 and dec (bad) lock xor jge movsl cmp cltd and jl fnstcw mov sub imul push lret stc insb gs fistp loope lods jle dec lret or or adc dec mov js movsb inc cwtl cmp push nop pop fdivrs inc or (bad) addr16 push and mov push mov xchg push adc cmc xor les mov insl in call inc (bad) mov xchg dec stos cmc mov pusha (bad) pusha pop jmp push adc out (bad) ss pop lcall xchg bound in pop mov scas push sbb lea add hlt xchg mov mov xchg loopne repnz repnz xor fs fwait or sbb pop inc dec mov xor xchg movsl outsb fidiv add (bad) mov dec lock xchg push ljmp rcll sbb fldt sub and mov add ret sub rorl cmp push imul decl push mov cltd add (bad) jmp push (bad) dec push mov clc es mov sahf insl test pop cmp into mov loop and xor pmulhw mov pop sub and ja iret sti (bad) adc test push inc push gs cmc lcall push cltd jb jno cwtl xchg loop jns xor jl pushf daa imul (bad) lret xchg sbb cmp pop (bad) ja xchg mov int out mov cmp mov xorb in pop (bad) push sub leave mov mov add jmp dec xchg push rorb pop bound test xlat gs enter pop sbb push cmp push aas add iret (bad) fild in pop xor in push xchg (bad) out popf in or int cmp mov mov add jne pop mov sahf (bad) xor jp pop jp div push scas mov pop iret mov mov jbe sbb out push cmp lock add cmp jge lret mov int3 cmp shl fisubr sub es inc sbb hlt dec fidivr add inc (bad) pop mov fstl stc ds sbb or sub nop in sarl and lods repnz xchg out mov cli sarb ds fs inc add sub jo fnstsw and cmc jmp mov nop addr16 add push inc out pop sbb les inc cld sar mov push sbb fcompl push pushf xor mov sbb cmovbe fmulp loopne mov in arpl (bad) mov in aaa sbb mov nop outsb iret xor inc cmpsl push into and xchg sub punpckhdq mov or test loopne jne dec pop push dec lea mov (bad) xchg jns mov rolb pop adc das imul or repnz push push aad xor popa mov push in ret fstp out sub sarl dec cs test sub pop pop call arpl cs fcoml add stos jmp sub lock or addr16 in stc lock xor (bad) push cwtl outsb enter push ret adc mov xchg jge scas sbb xchg pop push push imul ss cltd sti push cld daa sub mov pop ljmp push inc lret hlt sub xchg out jp push push div insl repnz ret add xchg test and sbb add inc cmp movsb sti jnp mov and and int3 inc dec and xor mov xor lods ss adc outsb mov scas outsl int3 popa fs fisubr sbb xor loopne jge imul fs (bad) xor sbb cmpsl dec cmpb dec mov sub jge fcomp fcomps jo sbb ret cmp int3 inc mov push ret test aam in xor imul mov mov lahf test js sahf rcrl adc xlat xor rcrb jo cmpsl cmc pop shll mov test mov cmp movsb fldt pop lods lods (bad) xlat call cmp xor aas imul cs jge xchg mov jnp mov ljmp pop lods mov cmc aam mov push outsl xor out shrb paddd rolb rcl pop out mov jno cmc xor fcoms in xchg movsb mov mov lock push inc clc mov pop adc ror pushl mov ljmp mov ljmp ja xor jae shll mov or pop jns push mov clc push mov sub mov cmpsl inc lds jl pop fisttp jnp mov xchg xor push pop sti data16 adc sbb adc frstor and cmpsl pop ljmp cmpsl push daa sub es mov sub lcall add loope push jmp out xchg pop add or adc ja mov pushf mov inc add sub aad fidiv scas aas inc sbb pop add push mov lret push test jecxz xchg in mov pusha scas xchg inc cld lods in or xchg imul ljmp sbb ret fstp (bad) jnp (bad) mov xor mov cmp insb xchg and push mov push les faddl test addl xchg insb jbe outsb push cmc lea inc mov fidiv or imul stos sbb icebp jg cmp mov jecxz cmp mov lds lock mov std push mov sub fisttpll or adc or add jp inc mov push imul sbb ljmp xchg jp push (bad) inc mov push cld nop xchg lea je push rcll aam es xorl pop movsl sbb jge mov cli popa cmp sahf jb sbb pop mov popa push dec mov mov les inc test jbe mov je daa sti pop loop pop ret cmp jae inc xchg out dec xlat faddl jle push or mov inc stc jo cld push jge sub out inc jnp lds jge mov int and stos fmuls sub rcrl jmp stos push mov scas or jl ljmp adc xlat push flds icebp inc fsubr dec jl cmp test inc scas icebp test xchg push add arpl mov test dec adc das mov mov xor aad imul ja inc fadds out test rorl lds mov into arpl out into mov and scas jecxz cs cmp lahf pop jne and inc loopne jmp shll fiaddl mov lea (bad) imul int jl fnsave sub repz idiv xor xchg cltd sub clc in sbb bound fidiv xor pop (bad) push cmp cli add sarb pusha mov rol mov cwtl sbb cmp cmpsb pop mov xchg and adc das inc push pop jmp lods icebp jns push iret jge cli jle ret push lods cs and mov insb hlt add cmpsl cmpl call sub jae mov push xlat int cmpsb lcall lret ja es mov inc aam daa mov sbb lret movsl adc out jl lods xchg aas sbb mov sub pop inc pusha xchg nop mov xor ljmp add push loop mov out add adc sahf jle int3 mov push hlt pusha push fsubs (bad) mov dec cltd sbb in xchg aad ljmp pop xor cmpl stos ficom lds xor dec sub mov insb fs in xor cmp fs mov jmp test out jecxz lock mov scas inc push icebp mov xchg push xchg add jnp jl add sub leave bound dec add arpl mov push fldenv pop test dec push ss in dec xor std and or push in push dec mov data16 jo mov gs out fwait clc (bad) mov mov cs or es in call dec (bad) les loop ficomp jp in mov scas xor sub insb ljmp mov nop jecxz aaa popa rol cmpsb ret stos pop dec push aas and or xor or dec dec xor imul lds movsl cmp sbb out call xchg test mov cmp fnop sbb sahf stos jp ret roll ficoml xchg jg inc js sub jmp cmp in stc in sbb xchg mov inc push call cmp cmp or xchg dec jle inc call in mov call inc jo inc or stos and in add ljmp lea fmulp xor movsl jl inc dec xchg outsl pop xor ret and iret jb inc fistl fwait rolb mov in das inc (bad) dec xor sbb or aam mov (bad) in xlat fnstsw dec into pop mov sub push stos push pushf mov pop push cmp cli in inc aaa fucomi jecxz fstpt scas mov lods add je push in mov popf fist mov nop stos jmp insl cmpsl lcall les shl dec mov inc repz pusha dec lret adc aaa rol ljmp inc test xchg imul or push repnz rolb loop adc or adc or jl mov sahf sbb sbb inc lret mov mov iret mov insl jns loopne mov ss ds roll icebp inc or sbb enter inc inc or push or inc out out jl cs push inc adc and adc and inc xor jl mov cld cltd ficom fs sub cmpsl cmp icebp dec in xchg xchg cld push jge push xchg or stos jo leave pop (bad) ja in mov in inc adc es pand adc cmp andb pop out mov mov add imul mov pusha mov fs rcll mov xlat jne fistpl pop enter xchg jnp movsl data16 int3 inc pop or add int mov lea (bad) imul int3 mov mov test and jb popa incb mov in icebp push sahf arpl sub push xchg sbb (bad) sub or mov pop xchg xchg dec es std pop sar addr16 test sti lret push jo jle fistl pop ret mov (bad) push jns cltd fbstp push ja es scas sbb or sub pop decb js push push enter in mov rorl call mov out in cld xchg (bad) dec jecxz mov shlb ficom adc arpl sbb ja inc and nop loope in push imul sbb call aas ss xchg movsl mov fs xor daa xor rcrl jle xchg sarl ja mov (bad) xor mov mov insb xchg jl fwait cmp xor push mov pop and into cld pusha add std inc (bad) ret sub pop pop shlb mov fild adc fnstsw or daa mov loopne sbb xchg xor jmp jbe cmp cmp loope imul insl incb jl pushf cwtl sbb xchg popf xchg sbb jnp or lock or sbb inc xchg push sub mov int3 xor fnstenv test scas push xor pop pop pop xchg cmpsl aam jbe outsb cmp mov add test or lret jl push lods mov loopne sub dec and aaa pusha test test icebp test cmp fdivr (bad) mov sub dec inc xchg dec inc (bad) call sub (bad) iret dec ffree mov dec mov jns aad out sbb faddl mov cmp hlt test (bad) mov xor push mov sub adc jecxz mov inc in vmwrite dec mov fdivp mov test sbb es sbb adc jp add add jns (bad) or mov test xor bound fistpl jle push mov insb fcmovne jnp inc sbb adc stc add pop mov xchg hlt jns add or cmp loope adc scas jle and cs adc sahf mov loop ret inc sarl push xor push aaa or les ret lods in xor jle jne mov lcall int3 mov lcall xchg data16 cmp data16 out mov lods insl lock inc sub cld or (bad) aaa fnstsw sarl dec and cli jmp out dec popf movsl push stos xchg shrl mov scas xchg test inc push sbb mov mov mov sbb lods xchg lea and test mov fcompl stos add lds inc mov dec test das pop lcall sbb sbb test mov sub jbe test xchg fiaddl enter ficoml xorb repnz (bad) dec leave mov pop or jmp xchg mov inc push ret (bad) clc clts mov in aam movsb ficoml dec rcr jecxz (bad) roll out pop les push cmp (bad) mov fwait and stos push loop xchg test (bad) fiadd mov adc loop shlb fnsave lods lret int xor jecxz lods and dec cmp push sbb popf int xchg stos or outsb or lods dec xchg jb ret jns add jo mov sub xchg adc testb in sbb loopne adc addr16 jge adc jno gs mov (bad) fbstp in jbe clc test dec leave les fsubrl xchg xchg jbe adc and mov pushf mov xchg lods sbb cmp dec sbb dec and adc sub sbb mov add ret pusha ja (bad) mov ret mov lcall cmc outsb dec xor cmp adc pop out cmp rcl push push cmp lret mov jo xchg sbb sbb mov inc sub repz iret or mov xchg mov jecxz sub xor mov insl or sbb add xor jnp xor test dec clc out mov mov push push fwait scas push fsubrs nop xor and cmpsb mov jle inc int3 dec jl leave jg nop ror mov push outsl sti push into and and fcoml lcall and das out adc orl es aam lods (bad) fisub xor out pop js out in mov sub push inc jnp jl xchg rcll pop popa sub push adc fstpl cmc lock fsubr xchg jge dec push ret inc lea push jns mov xor pusha mov nop mov lcall jg ja fisttpl repz mov mov dec push repz cmp push pop pop inc push hlt push jae cmp aaa (bad) and and adc outsb ljmp sbb outsl xchg cld pop jne adc (bad) cltd add sarb dec pusha cmp loop mov bound mov mov add push cmpsb std lock inc pop mov sub sub (bad) jmp test add push mov stos and adc dec adc int adcl cwtl sahf cmpl xor add mov scas jnp (bad) lods jle imul mov fildl insl lahf and sub mov jp jmp mulb jae pop dec stc lahf nop js adc out adc xlat test cmc pop call xlat insl dec (bad) orb adc gs test adc push and cmpsb in and jno repz or push loopne mov cmp aad lods xchg xor cmp insl arpl xchg (bad) cltd adc pop sbb insb nop xor inc aas cmc xchg inc (bad) adc sub loop pop shlb and into syscall fwait jl jnp ss sub punpckhbw icebp icebp nop push push sti (bad) pushf cmc mov and iret sub (bad) push movsl (bad) mov int3 subb fisubr fwait (bad) cmp mov mov push rcll daa mov pop outsb adc pop arpl stos adc ret or jl sub icebp pop hlt bswap (bad) fildll sbb dec dec mov or mov push into jle popa add jae (bad) (bad) fnstenv sbb aad push jnp sbb push mov mov lods jmp sbb pop xor lds cmp test pop cmp push ficomp jge rorb sub push xchg xchg (bad) call mov mov cmp (bad) fsub pop sbb ret pop adc dec ret fisttpll test test lods mov outsl xchg sub scas stos loope xchg loope or in je insl leave adc xchg sarb clc jmp aam jge aaa adc xchg inc ror sti mov sbb imul test stc xchg dec ja ljmp cld mov mov jno jecxz inc add jl and addr16 inc jecxz imul mov mov mov or stos push push push (bad) sahf inc ds xchg adc pop mov mov dec cmp cmp pop ficompl and sbb jno insl pop sbb push or or xor mov sbb mov sbb pop cmp inc dec ret jl (bad) sbb out jb cli rolb cmp nop (bad) addl sub xor test out mov stc mov mov pop push pop call loop jnp mov enter ret sub add fcom fwait popf push lahf sub mov add lods lock loop inc dec mov in mov mov jge dec cmp jmp (bad) enter in (bad) cmp pop mov lret sub push inc addl add je lret cli mov cs inc jnp stc aam add cmp sarb lea popf repz adc icebp fnstsw cld lods iret aas ljmp adc xor arpl iret (bad) push loope (bad) sub fcoms divb sbb mov outsl dec cmpsl xchg adc insb sarl movsl mov and jae hlt (bad) fmul cmp and mov int in std scas (bad) mov jge (bad) aaa xchg jmp pop and and (bad) aam sbb push mov pcmpgtw or ljmp jecxz lcall mov and dec jb jno das mov movsl xlat fmul fwait push in cmp pop mov pop mov pop lret adc inc sahf lahf mov ret or fidivl xchg aas fdivrl xchg add sub adc cmp ja ljmp popa cmp push and and ss fstl jmp ret idiv mov or cmp xchg in mov push in repnz out dec orl mov mov mov dec hlt das mov jne jecxz les incb pop jl dec test decl and cmp loope das cmc pusha cmp xor pop push pop rorb xchg cmp sbb test stos leave es cmp rcrb lcall or push sub (bad) pop out or imul dec dec sbb jp out cld xchg push cld (bad) lcall (bad) xchg lcall out xchg lods push jnp push (bad) cmp and cltd cmp push pop std icebp stc mov add out rcl ljmp js pop int aad xlat jno sub push xlat adc std pop in in sbb outsl add aam add pop dec (bad) out push aaa (bad) int jl inc add and xor and jno jecxz push inc pop cwtl or sahf and popa sub fwait int jmp lret cli rorl scas jo aam insb out lock jne out pop cmpsb fidivr xchg lods inc adc xchg mov insl mov pop fs scas scas sub or jmp pop mov scas lahf fwait sub mov or lret repnz aaa std cs pop (bad) pop insb push cmp mov popa mov outsl cli add cwtl xchg out xchg nop std fmulp (bad) mov stos insb jp fs outsb cmpsl fmulp jnp repnz pushf clc sahf mov sbb push inc das loop jmp adc sbb dec push inc cmpsl adc push (bad) push lds int cmp sub test loope sub daa std ljmp (bad) add sub pop or inc incl push mov mov popa lds mov imul fbld outsb les mov cltd and jb popa (bad) gs cmp ret jp inc xor lods lock or (bad) rclb rol cs sbb cmc pop mov fsts jmp or cmp cmp adc mov stos insb lds jnp add sbb cld fildl jnp mov cld les add mov xor cwtl cmpsl jne xor cld int3 insl xor (bad) xor pushf dec mov push mov cld ret mov mov mov and lods jmp rorb roll jb es mov test mov and fiadd and sub lcall sub dec inc lcall popa pop insl push leave adc hlt das xchg fidivrl mov dec shr cmp daa mov sti hlt js aaa sbb mov push xchg sub loop int3 fidivrl mov fidivl pop mov inc sbbl movsb int3 mov sbb stos das cmp push push jp add mov inc pop js std daa cmp xchg out je wbinvd mov sub imul scas lahf adcb mov cmp pop jp pop sbb push aam mov inc and push sti lods xor fistp or xor test mov mov sub fwait push and add rcr mov adc or dec test mov push into xchg inc push shlb inc mov adc fwait ljmp pop iret cltd jne jns out popa cs fdivrl jbe outsb fsubrp and cmp dec sti scas dec cmpsl jbe aaa mov nop or or addr16 shr jns xorl mov add scas mov mov mov movsb dec insl outsb push enter mov fsub jbe sbb fcompl rol adc inc out inc loop cmpsb aad es outsl push add std mov aas mov repz ret jmp sarb add (bad) in stc call adc test enter (bad) scas and pop sub sub sub movsl jbe es outsb pop jle shlb pop sub sbb movsl adc cmp rorb mov nop repz push aaa icebp scas dec mov shr sbb push mov push adc (bad) ljmp add loopne cld sti sbb xchg lcall mov das int or inc fs outsl mull icebp lods cwtl pop stos jge ss dec data16 js outsl lds push out cmp call lea ljmp clc sbb fsubp clc cmp repz nop cmpsl cmp mov pop jbe fidivl test sub push dec sar fnsave push lcall push adc popf (bad) inc imul pop outsl sbb test dec mov and in fldl push xchg movsl jb mov jg push pop divl add jp push xor rep add imul xor imul sbb mov out add ljmp fs leave data16 and loop push ja imul add repz or int3 ret or mov pop push roll mov es (bad) xor dec adc mov jg mov or (bad) aad inc mov test and xchg sbb xchg sbb jbe lcall add es mov nop mov push rcrl lcall loopne mov jge cld sar mov jl or icebp out dec mov rcl mov cwtl lret lahf jno insl repz aad insb pop rclb std jecxz mov das fsubl adc push ljmp inc ficompl mov daa push repnz xchg push mov cmp xor test add clc into xchg (bad) add scas pop fsubrs addr16 mov fst inc sahf cmp (bad) insb mov add (bad) fsts and xor sbb std pop mov mov mov loopne inc nop pop adc ss push mov pop (bad) sarb lds jbe jbe bound int3 dec mov shrb aam cmp jo push xor shlb pusha adc into bound dec mov mov test lahf loop (bad) pop outsl mov clc xchg pop iret ss dec incl lods in ja scas cmpb enter loopne and xor mov addb (bad) movsl inc push insl and or push xchg xchg call jmp push and jne mov adc fsubs cld mov push adcb orb add mov fisubl or or fwait pusha in or scas das inc (bad) and add cmpsb push add mov xor dec mov sbb frstor ret xor adc test call nop pop adc inc insl add mov lahf mov dec cmp nop or (bad) pop testl add mov rorl ja arpl mov fistp ja dec dec sub aad mov stos cld imul xor inc sub inc ja cmp dec mov out shl repz xchg mov pusha data16 cmc mov insl dec push add loop in mov in jg mov pusha adc vsqrtps or sbb mov (bad) cli push out sbbl cwtl imul iret jno std loop jle or scas dec sub sub leave or add ja mov icebp in mov test repz and das lret (bad) mov pop cmp xchg push mov push roll dec mov hlt mov int3 xchg xor mov outsl aad lahf and push ret cmpsl add fwait shlb into mov xchg out mov cwtl aam and sbb and fwait jl push out sub je outsb stc sahf add adc in mov inc sub sub lret imul pop xchg mov movsb sbb jnp jo and (bad) xchg sub gs lea pop sbb out pop mov jmp mov rep xor adc xor iret sbb dec xor jp mov cwtl pop xor scas lock movsl mov bound jg xor sbb jns add outsl lds xor mov cmc stos mov (bad) rcl mov xchg xor fimull xchg dec push ret inc cli push outsb pop (bad) je adc mov jg cmp les sub arpl inc insb rdpmc xchg add cmpsb dec (bad) cld dec je aam inc (bad) fstps jmp (bad) test daa or cmp cs (bad) add gs push push push pop jp push hlt iret lock mov dec outsl subb push jb stc push pop or setnp and pop and out push cltd add add xor xchg or mov dec test jns xor or scas rol loopne insl jp fnstsw xor cmpsl jb xor inc sub mov pop push mov fsubrs ljmp mov push ret pop mov add imul inc imul movsl sti jb lock pop iret or mov xchg lock push cmp es pushf inc ret mov stos movsl mov xchg rcrb mov push cwtl or rorb push pop int3 xor daa stc or stc movsb pop push mov stc xor test (bad) lea es inc mov aas sbb dec movsl stos fisub add and addr16 scas sub mov push mov sbb (bad) jo insl test mov mov adc insb in xchg sbb ret imul pop jo (bad) xor pop inc aad sarb mov jne xchg js lahf dec stos mov mov xchg lahf test daa jge fs sbb aaa mov lods add (bad) lcall data16 dec cs mov and cmp popa inc fwait and dec jne rclb movl cmp sbb enter fistp test nop aas xlat imul ret repnz inc repnz xchg aaa inc repz push hlt bound sbb and pop xor cmp idivb fiadd sbb mov pop add xchg pop add xor add sbb sub mov stos push push stos mov adc (bad) ja sbb movb fs adc (bad) fmull or ss or and icebp push nop enter adc inc fwait jb add adc push cli (bad) and cmp jmp sbb out dec scas das mov aam dec xchg push push cmp lahf sbb lcall ret adc adc or jmp cmpsb adc xor xor jbe mov mov pop sub xchg (bad) test fs inc iret dec mov adc int or cmpsl sub jle shrl jmp jne jl mov xchg pop call mov lock adc push mov fistpl add lods and ret mov aas fwait mov sbb jnp jns mov pop out mov mov xlat js neg mov lret adc stos and adc mov cmp js (bad) notb xchg add aaa movsb adc mov adc adc jmp mov cmp imul push pop jl hlt ret xor jno xchg addr16 ret rolb icebp cmp cmpsl inc sub inc inc pop mov (bad) andl pusha mov leave mov mov lcall push insb adc and inc lods clc mov adc pop and sarb xchg jg cltd movsb cmp jbe push in out in jno mov add pop sbb lret test and xchg (bad) fadds and jg adc pushfw sbb xorb pusha sub test sub ret fs out sbb fistp pop xlat fs test aaa cwtl mov and add repnz and ljmp sub sub lock adc adc shl cmp adc fidivrl dec dec sbb stc push popf scas std or push inc xchg cmp ficom loope nop cmp imul xor jecxz cmp insl std mov js jle xchg (bad) das jae aam dec xor mov les test lock or mov and lods ja lods xchg or xchg cli je test aad daa inc add inc mov add (bad) inc pop loope rclb pushf or jl jno pop inc or cmp push sahf push or sub fmull mov or jp add decl dec jle pop out cmpsl sub lcall pop mov insl mov add or fdivp (bad) sbb out lods jns mov xlat gs rolb rorl mov mov out fldt push mov iret or ljmp push test mov jae xchg dec pop stos pop mov scas data16 mov ss (bad) mov cmc js andl icebp dec lret jl (bad) pop jae pop iret sub outsl fwait aas add add scas lret out mov daa pop mov mov iret fistpl push data16 jb clc sbb add push (bad) push pop jecxz pop repz xor scas out aad test (bad) dec pushf fmulp sti adc inc xchg fwait pop pop ficompl push mov push (bad) movl cmp xchg into inc mov sub push enter stos sarb lea xchg or dec xchg lods andb xchg fs xchg hlt jnp and fld1 ljmp xchg ds (bad) push inc dec (bad) inc push xor mov mov mov (bad) mov xor cs lods je,pt adcb mov xor xchg dec arpl fidivl std fidivrl mov lahf lcall arpl nop stos sub idivl cld scas and inc into add outsl mov shlb rol mov sarb movsl fld1 jae inc hlt mov xor and loop loope inc mov daa jle int3 inc loopne xchg rcll sub pop sbb cmp push aam mov mov andl or addr16 cmp push cmpsl mov xchg cwtl and js insb dec repnz (bad) mov or shll cmp jl add inc lahf inc rcll popf cmpsb and mov mov stos scas pop pop pop inc mov popf mov mov or daa mov mov mov arpl and test in int3 lods add xor add cmp (bad) int std and dec jmp sub (bad) cmp lahf in (bad) jo mov dec fnstenv addl mov outsb push std std ja mov push add mov pop adc outsl jl mov jecxz lret inc jl lods cld or stos sarl lock push sbb xor or call lret push mov movsl out nop dec xor pop inc adc (bad) cli jo pop mov cmpsl and int cmp stos out push sbb mul jg mov mov mov cmp pop iret mov mov mov fwait mov or clc and call movsb insb scas jecxz pop xor xor rcll arpl mov repnz and mov je push cli mov and adc mov push pusha inc pop add data16 mov adc fidivr cli mov push nop mov or inc je ljmp ja adc adc out add pop xor fninit mov xchg jl in mov mov jge mov sub xchg ret cmp and push sbb popf mov test xor push sub pop pop fildll jl xor push nop outsb adc insb outsb cmc sti pop xchg pop mov jnp cli pop loop bound clc and cwtl adc adc jp in add adc or adc lcall mov subl (bad) xor flds pop mov leave dec cmc (bad) testl cmp sub and lret adc fstpt adc stos mov repz stos pop jo imul loope adc scas aaa mov mov or push lock lea punpcklbw loopne into (bad) shrl lods gs arpl (bad) jg mov fsubrp subl or mov sub arpl sbb arpl sub lods mov xchg and enter xchg jp aad xor xchg sub popa pop out loopne dec daa sub insl aam es pop push xchg dec pop scas imul ficompl data16 sub push xor (bad) adc (bad) sub enter sbb mov std inc sub or xchg inc dec sub dec out cmpsl (bad) sbb cmp xchg cmp nop add loopne (bad) push xchg roll cmc lcall push ret out push pop movsb sbb imul hlt or jae pop push or cld mov pop dec les bound or jmp or test fldcw cmp push mov dec imul popa nop insb lock xor mov pop dec cmpl push xor out mov pop cmp out std xchg xchg or ljmp jb jbe out dec fstl sahf clc das or mov add mov pop add inc mov dec loope dec call push int3 jb jmp test add jae loopne clc into jl mov mov lea push fistl xchg rclb pop jg cmpsl lds adc pop lea mov sub dec mov fistpll aam fldcw int cmp aaa ljmp popf inc mov jb jns shll xchg push jmp push adc ret (bad) jecxz mov in stos (bad) ret inc out (bad) jecxz,pn add aaa xchg and jge jns (bad) jns xorl jae jmp push push xchg rcll pushf cmp scas and hlt mov push mov imul movsb mov push repnz sahf xor jle aas ret xorl data16 out sbb xchg jmp xor sahf lds fmull xor xlat sbb das xchg push mov fwait add cmp mov and (bad) pop decl mov scas fistpll cmp and out hlt hlt inc ret repnz cltd dec ljmp xor fwait sbb je jns mov fadds mov xchg mov pop cmp loope adc inc ds push mov mov iret je pop pop (bad) repnz jno sbb xchg cwtl ds add rclb in aam addr16 sti imulb ficoml jl mov lcall int3 inc pop ljmp xchg arpl dec push out dec test addr16 push sahf mov xor jae and xor int3 rolb cmp or cmp aaa push jnp aad mov sbb inc fcoml out scas or loop out cmpsl in imul sbb aam inc pop call sub fwait pop lods (bad) daa aas jl (bad) push xchg scas xchg xorl imul inc pop jle add int3 jge and jae xchg out enter retw sbb lcall in sub push out mov call jl mov in dec pushf lcall sub sub dec jmpw (bad) pop clc outsl pop pop notb cmp dec dec inc inc and cltd or push and jmp addr16 and test xchg dec sar push fs jmp dec mov and ror xor ss aas xor js or and outsl stos xchg push test ret fstl clc loope jge or aad pop xorl cmc popa dec push int3 call (bad) std (bad) ss sbb add ljmp ret std push and xor test mov test or or and clc jo icebp push push xchg stc outsl (bad) out into addr16 sbb mov lcall jg (bad) cmc rolb jnp mov clc push test (bad) int mov pop jmp loope xchg inc push (bad) adc lret mov (bad) sti and ss shlb out out in dec pop je outsb pop lret push aam (bad) rcrb cltd push mov hlt bound gs popf inc dec mov rcr loop cmp dec imul test sub push jnp cmp test mov rclb movb clc fsubrl rcrl pop push push cmpsb clc rcrl dec je cs imul hlt sti xorl in mov je inc jns incl ds push fldcw (bad) cwtl lret jmp pop jle mov test and mov sbb data16 jne pop dec int dec jno sahf pop repnz xchg xchg push or xchg cmpsl (bad) dec ficoml ss int icebp dec aam clc push mov jl push nop xchg or cmpsb mov pop nop int3 imul fwait mov das jl xchg xchg xor push insl jp or aas xchg cwtl clc mov outsl or cmp xchg leave mov jno hlt mov sub add and mov nop adc and adc jae xor es mov enter test hlt mov je lret jmp mov mov sbb pop cmp xchg bound lret sub mov imul (bad) dec ss enter lret mov jne inc xchg xchg fucomp and les out and jle add dec popf test lods mov lahf loope imul insl inc cmc fnstsw ret ja les daa lods stc xor leave addr16 out (bad) xor gs lahf mov popf cmpsl (bad) aad push and dec cmc mov mov rorl hlt and xacquire cmp mov mov jp test mov xchg dec adc stos or loop lahf xlat push insl movsl rcll (bad) fisttp or pushf enter shr repz mov xor cmpsb and or pop dec cmp pop das leave and mov push repz fldln2 std mov dec addr16 arpl mov add enter push dec mov mov (bad) pop mov mov in inc lret sbb (bad) xor and pop addl lcall sahf xchg push (bad) cmpsb push jns push and add sbb sub outsl push cmp pop gs inc incb add cmc pop push loopne push jmp je test jmp or pop mov push popf (bad) call mov sub cwtl dec or mov dec jo imul mov stos mov push ljmp add je inc cmc cld jnp xchg pop and lcall xor (bad) cmpsb std jmp aas dec adc out (bad) xor out mov jb dec daa mov sar popf xchg lret lods mov mov pop mov jp (bad) cwtl fsubrl xchg mov or push gs aad sub dec movsb das movsb imul inc lds pop popa (bad) lret or addb adc push call cmp cmpsb call push shll inc inc mov inc ret lods mov into ja pushf das fsts in or jne cmp mov call cltd rcrl adc and pop cltd andl sbb lret push mov out mov jo inc inc (bad) out jnp bound insl bound pop (bad) inc fnstcw enter scas jnp pop ss mov sub add leave js sbb imul dec (bad) dec jo push adcl mov pop insb pop mov das push cmp jle dec inc cmp cmpsl insl mov (bad) (bad) push pop push cmp es clc xchg rolb jecxz jb mov adc in pushf in incb clc push popf (bad) xchg sbb mov insl jmp inc pop cmpsb jg push mov negb sahf pop (bad) mov aas ret mov int push rcl cmp sub add cmp jne decb sbb ja out pop pop push and xor adc xchg pop test adc ret sbb out and and cwtl (bad) cli cmc inc loop adc out mov sbb xlat jecxz and jb aad (bad) or je xor add cld push pop rorb push jl pushf cli and inc mov adc sbb popa dec mov lock loopne pop lds ret pop and jae jp mov popf push dec sbb mov xchg scas push (bad) inc inc lea iret fcompl mov cmpsl cmp pop mov lret mov imul (bad) das sub (bad) out cld repz scas sbb sbb addl gs mov aam std lret hlt mov sub (bad) ja insb jne jl out mov and adc and mov pop lret fcmovne jp ret jnp out into pop push rcll pusha or xchg nop movsl rcrb loopne mov mov pop xor push mov adc cmp mov inc add clc shrb push fsubrl and and sbb pop push add xchg js pop inc or loopne fwait sbb mov sub test out cmp xchg push cmp inc stos stos subb lahf push testl fldt out fildll jle sti push jns or mov sbb mov (bad) int3 and adc pop ss sub jmp jg xor stos mov je sahf mov add push pop mov mov cmp sub pusha das lds push mov outsb push js jge xchg cltd jmp xor stos adc mov scas dec sub insl aam mov add mov lock ret xchg popa and mov (bad) das insb sbb sub adc fwait pop jns cmp sub or push sub cmp ss mov xchg adc je inc popf repnz jno (bad) xor fcompl js mov sbb insb stc stos stos mov mov push out or std flds cltd mov xor sub add pop jl das fwait fs ja xlat dec jb mov clc nop out xchg mov mov jns scas es rolb and cld aad mov aad rorb sbb repnz popa adc cmp jle aad mov leave shlb loop adc call adc scas pushf push dec dec lods push mov push cli cmp jecxz loope (bad) call mov popf scas inc push mov cmp fistp (bad) sbb sub add bound mov push insb dec clc jp push jl lret out loope je out hlt enter xor add pop pushf aaa test add test lods inc in ret rorb cmp cmpsl inc cmpsl dec enter cltd xchg jo stos push jle push dec add dec mov daa xor fisub mov mov cwtl mov pop fisubl insl inc lock mov scas and (bad) or leave cli in fbstp adc push sbb mov push mov ss sub xchg jp jge push imul movl notl int add outsl jl es fildll mov je mov das daa jp test add mov sbb pop in pop cli ss dec sub out xchg and mov andl add push sub xchg test jo push xchg and mov jp stc mov xchg or push pop fiadd (bad) mov xor iret ds imul mov mov mov mov inc add out mov idiv test popf (bad) and insb push sahf out imul and mov sbb inc pop negb add (bad) push dec push dec test mov in (bad) pop (bad) lods rorl xor bound out outsb mov ja stos pop mov xchg inc jle mov loop cltd adc pop call xchg lret in mov ror fdivl mov add (bad) sbb stos jno mov lahf mov sbb jcxz cwtl lea (bad) fisubl pushf std xor adc adc aad adc jno stos lcall push dec jmp inc add xlat xchg xchg bound push push sbb jo jle mov pop dec jae jge repz loopne pop not adc pusha jp inc popf mov pop sub mov dec mul add pop sbb repnz bound es jae jge xor push adc xchg pop movsl fimull xor mov hlt xchg sub mov lea jmp hlt adc pop addr16 cmp push cld adc push lea pop adc pop lock cmpsl xor adc lds ja or std jo pusha xchg sbb icebp (bad) imulb in sbb (bad) push mov jo and sbb (bad) push mov mov out xchg das (bad) hlt jle cmpsb jno ret pusha mov adc arpl cmp inc xchg jne mov jmp sti jg orl sahf inc add fldenv push pusha pop pushf insb ljmp mov lret cmc jns fistpl leave paddsw push inc test int mov arpl cmp push stos cs fnstsw negl xchg inc inc push popf and sbb mov pop inc repnz bound push pop jo xchg (bad) pushf or int sub mov loope push (bad) shr lcall pop dec pop and (bad) push aam add into (bad) xor cmp sarl inc push push cmp jmp adc imul add imul and mov nop push mov lret mov xor sbb popa daa jo in popa inc (bad) rorb ljmp inc pop dec or mov icebp pop aad pushf movsb jns jno push ret or mov push cmp popa mov mov subb adc lds lahf mov jl and or (bad) push push mov cli pop iret xor push mov cld adc and adc mov cwtl popf insl dec dec inc or jmp xor xchg pop popf or leave repnz out adc in bound xchg movsl insl xchg mov xchg imulb js lods call sub xchg cli adc jg (bad) lret xchg lcall sbb js imul inc jbe mov mov in aam (bad) and lods subl loopne add jne stc icebp data16 xor arpl repnz and arpl xchg add xor mov mov out bnd lcall xchg fisttpl adc sbb js cmpsl cmp mov scas jmp pop dec ret sub sub and sub out mov (bad) clc add xchg (bad) push loop jns out mov ds lock daa jge loop ja xchg jecxz jnp pop add (bad) mov loope jns (bad) mov (bad) cli mov dec xor add clc adc jae and jae mov jmp mov sbbb inc xor mov lcall push aad cmc test pop int3 cmpsb pop arpl iret mov adc dec mov push push sarl dec xor out pop push add ljmp aam mov (bad) mov mov test popa cmp mov jno inc ret das lret ffree mov cli popa lods (bad) jg lret cmpsb stos loope es movsl add ljmp lods xchg iret test ja cmpsb push enter data16 shll jae jne (bad) dec cmp mov es bound out imul cmpsl repz mov out fsub sub push int3 dec lds arpl pop xchg lret xor ss rcll or jle xor rorb pushf stos out xor cmc mov sbbl pop jp data16 (bad) jmp stos or pop inc mov mov cmp mov test sbb mov lock (bad) pusha rcrb inc ret stos addb test push out dec mov movsl mov mov inc mov mov cmp scas mov orl popa and out lods inc out aaa sbb dec xchg inc pop mov inc es mov daa test jns lds nop cmc push ret xchg pop shrb leave in sub jl dec mov mov cmp xchg repz data16 sbb inc sti aaa pop cmp gs sarl cmp lds xchg rcrb insl popf and out jp insb add cmp daa xor adc lods cmp sbb repnz pusha aas mov and push xor mov xor mov loop shll pop aam adc aas aad stos mov adc xor push sub fistp in or dec roll ss xor sub sub mov or add jae mov mov pop popf sbb fs cld aaa push addb vandnps cmp inc iret push bound lcall mov cwtl js mov fs lcall lcall inc gs mov pop xchg xchg out adc ljmp sub out push ds mov mov stos xlat sbb inc lret or or or sbb adc and mov mov pop xor in sub aaa scas lock outsb dec mov push pop and xor sub jg das test mov je into push daa fdiv pop adc ja xchg gs out mov and test sarl push fdivr mov mov iret aas sub icebp stos adc mov data16 cmc je jmp xchg add push push out add ja adc sti sbb mov push ret fucomip cmp iret pop mov push movsb mov and stos fcmovb (bad) adc inc aam mov mov xchg push mov mov xor xchg inc and xlat mov or mov xor negl cmp das mov adc es int sbb and ss (bad) pop and outsb sbb repz adc cmpsb cmp lret mov adc imul loop add movsl xlat mov sbb call sti pop fildl rcll cs push jg jnp mov ds pop movsb imul into ljmp mov add cmp call ljmp insl int3 daa aaa adc imul adc or (bad) loope add ret out mov in stos push test dec jmp inc pop add (bad) ja or and dec shrb movsl dec ret mov (bad) dec icebp xchg pop pop xchg adc inc (bad) aas add movsl aam xchg push decl (bad) push cmp insb pop add add push into outsl loop in (bad) ljmp sub divb adc xchg (bad) shrl insl mov shlb and lret cli sti and push addr16 sub enter dec data16 std pop jns or cltd mov pushf or mov dec fdivrl mov ss adc sbb insb repnz addr16 add xchg or jl mov sub or xor add (bad) call mov into xchg gs lock and jae lret jns hlt sti sahf pop les in int mov dec int or fwait jge mov mov mulb (bad) pop push (bad) shl sub mov iret (bad) iret scas (bad) test xor dec jb and and ficoml mov out xor fiaddl push cmc mov stos xor pushf dec sub fadds imul cmp rcll push mov pop call or cltd or shr in cmp mov lds shrb adc fsubr mov or push repz pop xchg fnsave mov or dec pop std fwait or test mov ret xor jnp aam adc jp inc imul mov lret jmp pusha mov test ljmp hlt sub sub in fwait repnz add and (bad) hlt xchg or bound xchg in test aam daa outsb fisttpll lods and cmpsb sub cmp or (bad) and (bad) mov shrb push adc xor sub adc in or test jb insb and sbb jl sub push mov out sub (bad) lahf or in inc (bad) dec adc rorb loopne shrb std fsts and pushf dec push cmp in into mov xchg ret lcall lret aas pop adc adc test rcll in or xchg addr16 clc fcompl nop mov arpl jle bound xor add xor add push push sub into sub push setns inc add mov cmc jge push ret in inc out scas enter enter adc repnz out mov cs das cs lods fdiv dec jecxz lock add inc sub pushf mov inc pop lock sbb int3 imul test (bad) dec dec insl push in (bad) inc ljmp adc jb mov fild push (bad) and les push sarb enter inc cld sbb nop hlt enter (bad) pop jle jns push jg outsb sub orl add jp jns xlat lret rclb lret fstpt adc addr16 inc imul in mov pop (bad) cmp or or cmpsl adc or in push or jl jns mov push fmul cmp (bad) call sub xor pop into sbb pop daa sbb adc or adc loope insl (bad) test ds mov mov push mov xchg mov inc addr16 stc xchg loope movsb mov xchg dec or and xor mov repnz cmc enter mov mov push out xor clc (bad) pop mov and inc jno test pusha idivb adc fwait out push jo frstor test dec cmpsl dec mov pop xchg (bad) test call clc iret and cmp push mov aas sbbb jnp pusha jno outsb jno jno inc outsl das and ds in mov outsb daa cmp out mov pop addl adc test xchg xor inc into push mov and pop and icebp cmp (bad) mov loop and aaa dec leave (bad) icebp dec popa sbb andl test jg fsubl inc mov jmp cmp ss mov cmpsl cmp cmc cmp add fucomip inc les movsl push ja movsl mov fdivrs add jbe sbb sub in mov pop leave mov cmpsb repz (bad) fisubrl sub out loopne cs cmp xchg sbb push jg dec dec and or adc in imul pushf and aas push cld test pop (bad) add sub xor dec jg insl je push inc out inc scas xchg and int3 insl fs jb data16 push ficomp pop sub or xor enter call lods repz repz mov cmc outsl inc cld jecxz cmpsb aam ja movsb call in scas in in xlat jl and sahf repz adc test fcompl out add add imul dec fmuls (bad) push cmc (bad) push mov inc add loopne lock xchg test mov sub mov mov loopne and rol popa add xor (bad) pop inc mov icebp jbe xchg mov or cmp xchg mov cmc mov xchg inc in (bad) std js jmp dec addr16 sbb adc lods repz insl inc lock adc rcrl (bad) clc ret xchg (bad) lret sahf int ret adc inc pop into adc hlt add hlt push jecxz push stc pop in daa inc sub fcompl mov dec je pop pop iret outsb popl imul push je adc ficomp xchg dec rcrl ljmp dec xchg xchg loope inc idivl and or fcomp cwtl pop movsb push cmp std lods mov popf jg xlat inc jne xor adc push sub sub ret in fstpt mov lea and sbb cmp dec fdivl sti icebp add sbb aad lea cmpsl lock pushf inc fsubr mov adc jb mov aaa sbb in mov and lret out outsb xor jno and movsl sar fwait out popa enter mov or std out mov nopl pop enter insl fs jbe rolb mov cmp clc icebp decl fwait in mov aad data16 call test push ds sbb sub jb add mov push mov (bad) lock stos xchg jge ror dec xchg arpl pop or mov or outsb leave mov xor std and fsubp imul je mov icebp and mov sub in fisubrl (bad) aaa js push stos rcll sbb stc jmp ret (bad) sub push jecxz ja nop (bad) mov and hlt gs lcall add sbb inc dec push mov push in cmovne xlat fadds ljmp push rorb pushf test push pop dec popf sbb insl cmpsb mov mov inc sub aas pop scas sbb lods sahf mov mov std jbe add inc subb sbb je jge dec mov fdivl pop dec fwait ret push cs outsl imul add ss int3 push inc push jnp pop (bad) leave int jg loop and pop push shld pop xchg lcall mov mov jno and hlt loop inc arpl (bad) cmc inc sub and push (bad) xor int or add lds sbb imulb shr outsl in sbb std cwtl inc cmpl sbb xchg adc outsl fcmovnb cltd nop jl xchg cli ja addr16 sub pop xlat ja daa inc jne cmp mov or imulb sub js sub mov sub sub daa fs loope out scas add sbb test into sbb mov dec out push jle sub mov andb fist dec lods sbb cld xchg xor sbb inc aas icebp ror fsub cmp xlat in push in rorb sub cltd dec addl popa (bad) aam adc iret push sbb add fildl push shl jg push call rol scas pop shrb push lret dec ror jmp in int aaa fldt adc mov cli mov xor test cwtl pop mov fist cmp in dec imul js mov fcomp mov mov repnz pop xchg fcoml and cmpsl xchg push rcrl inc adc and (bad) stos pop je xchg add push out ret cmpsb pusha loope mov pop xchg rcl pop icebp mov jbe add aam add int3 push std cmp iret bound scas cmp push mov and xchg outsb inc sbb mov pop sbb jl ret xchg xor mov imul mov inc jmp pop adc jno test add test mov imul mov push dec sahf cs dec sub push dec test (bad) pop iret ss xchg imul jg xchg scas mov lock fsubrl fdivrp lea pop (bad) pop fs sbb aam jge leave movb in cmpsb inc jg call mov mov ss arpl ja mov fcmovb pop into (bad) notl and lods sbb movsl xchg xchg sbb cmc bound mov mov jo insl or stc cmp fstpl xchg hlt cld push fiaddl sbb int3 incb imul sub pop jg cmp pop mov lods adc xchg xor and aam xor cwtl xchg cmp xor repz or test orb jbe jno les jge and insl cmpsb mov insb xor inc pusha mov pop shl jp xchg rcr (bad) sbb sbb in clc repz cs hlt jg xlat mov xchg dec mov dec add pop xchg jbe and outsb int cmp inc fwait scas lods push inc arpl sub push (bad) rorl pop adc jl and mov xchg pop repnz stos dec cmp xchg xchg xchg add xor out decl sbb dec mov je (bad) icebp push cmp ret sti dec jne imul jae xor divb add int pop hlt imulb mov pop inc in ret ficoml xchg xchg fs xchg ss jbe pop movsb sub adc je sub jae cmp add repz repz dec imulb jle and push iret out mov (bad) lods arpl imul ds add cmp cltd jb lahf ja dec mov sbb push jbe in in mov mov or inc xor sahf sbb in ja imul pop test inc adc lcall cld aaa loopne bound mov fisttpl outsl fldt stos xchg cs or jnp call xor inc cmpsl pop mov pushf scas or jg jmp mov in adc push push cwtl inc or cmp sbb sub cli push or pop or mov in pop sbb xchg scas notl ljmp pop sub nop movsb lds lods dec xor push cmpsl fnstcw int sahf je arpl mov fidivl pop adc dec pop dec push cs mov jg fwait into push out outsb push sbb add out arpl dec movsb cld sub inc out std xlat and lret into push daa or push adc or xor ss xchg out mov sub xor cwtl or movsl adc lods iret dec mov pop repz xor mov in xchg insb pop inc repnz add jecxz (bad) test gs dec pop inc arpl sub fs sub sub rorb (bad) sbb inc jb xchg scas movsl dec in in dec mov pop arpl cld lods nop xor adc add add rorb push mov dec scas sbb or in add les mov lea lea clc fistpll push test jno push xchg xor repnz add xor insb pop mov iret arpl cmp push jae ret jmp mov jmp sub mov (bad) mov cmp push fs sbb loop jp es or dec fisubrl cmp jl adc sbb mov or jecxz sbb xorl aas stc popa movsl (bad) lret js fidivl (bad) fldcw inc or sarl mov cwtl popa lock stos push sbb jne out sti and push (bad) cmc sbb insl pop add sub stos push adc in add insb test mov pushf insl inc pop mov mov xchg test popf adc test dec pop sub jbe (bad) sub fwait incl push xlat aad in xor jns das mov lret sub sbb icebp das ljmp cmc orl xor mov jns mov out sbb and stos dec or gs movsl sbb push or movsb js insb mov popa je outsl mov add ja gs jbe mov jl addr16 cmp and jg lahf mov in mov clc arpl and mov and out cmpsb scas dec cmpsl xor xlat push mov cmc mov push cmpsb pop push loopne jae inc (bad) bswap push and fcomp pop dec std push sbbl movsb jmp insl rcll (bad) xor std pop icebp out (bad) xor cmp sub incl enter jl or cmp aaa arpl adc lcall roll (bad) push mov cmp cmp pushf repz rcrb add aaa push aad or or xchg pushl mov movsb stos out mov fsubrs xchg outsl (bad) sti jecxz pop cmp sub xchg fld sub enter xor lret cld in jbe push stos xor mov mov (bad) or imull push mov aad pop sub cmc enter imul and add loope mov jns adc ljmp fs adc in pushf jns divl mov hlt aas out jmp mov je push and mov test loop test sbb add adc lods lods or aas inc outsl fs and ss or test repz xchg jmp push sub outsl mov or dec jp inc nop push gs sub inc fdivs arpl outsl imul pop or nop sub pop lods push add or int3 pop adc mov and inc lret add lret cwtl xchg xor mov pop les xchg int rorb jmp inc add js setb insl (bad) push xchg xor xchg imull sbb inc xchg sbb iret jae loop push dec arpl fisubr fwait aad cmpsl stc pop sub out loop push pop aas cmpsb repz jbe inc addr16 mov pop mov imul sub ljmp ljmp pop mov pop inc stos adc xor lret js add xchg dec inc mov jge xchg dec cmp nop dec and mov nop loopne (bad) mov repz dec xor daa or rep subb xchg pop mov nop in (bad) repz xor xchg sbb and sbb outsl xor clc rcrl or cmp xchg iret test mov mov std cmpsb cld fldenv (bad) cmp and rorl test sbb mov jge add pop inc dec ret push fsts jmp cmp movl jb cmp loopne dec dec push cmp add inc dec inc inc les bnd sbb lea stc sbb jns data16 add sbb push fld1 add xor aam adc jae mov mov incl inc and and mov push lods sub jp pushf pop adc (bad) push mov xchg pop inc xor jecxz sbb cmp inc ja icebp rep es inc shlb fdivp xor inc sub mov subb scas mov sub clc outsl out jl inc pop sub mov add dec (bad) movsb in dec shrb sub lcall cld fimul lds dec scas or xchg push push ret out ret mov (bad) mov insb mov imul mov outsl iret in push cmpl mov pop lcall fisubrl mov mov cld stc out fstps pop loope jns or xlat daa adc sub stos jmp cs inc cmpsl (bad) mov fldl inc (bad) lret addl rolb add and xchg ret xor ficompl xchg lods xchg mov cmp or lahf out and fwait mov xor stos push add repnz lcall jmp pop xchg dec movsb and pushl pop sahf cmp jle cmp inc cwtl jns pop repz aaa cltd lods adcl in arpl jg in push mov outsb inc inc push outsb movsb xor (bad) (bad) cmc mov pop fnsave ret mov (bad) (bad) popa xchg addl xor cli (bad) mov adc lahf dec sahf jecxz mov sub jbe out adc push or jp fsts xchg add push fsubrp (bad) push mov sbb mov add add lods cmp xorl mov repz cmc mov pop adcl inc mov adc inc scas ss cmp or xlat cmc int3 xlat mov push popa ffree push sbb or ret push ret enter mov rcr mov or scas mov mov call or int3 mov lea push lods add sub jo sbb sbb aad scas mov mov pop fcoms (bad) mov inc pop jecxz rcr dec jmp stos loopne test jg adc stos cmpsl xlat mov sub jns fwait jp fistl push xchg and push jecxz dec jl and push push scas push sub clc push rol (bad) jbe push leave xchg mov fldt lods xor pop push pop push nop adc push (bad) push jge push mov ds dec scas inc pop (bad) adc pop cld cmc adc test pop gs cmp nop add xchg lea inc mov sub js cmp fnsave sbb sub cmpsb lea sti and sbb sub arpl mov cmp jmp js lea (bad) push ret (bad) nop pushf (bad) mov or out xchg cld push in rol mov cmp and fdiv jecxz loopne adc mov rcl jns or xchg les xor cmp imul add sub sahf ret sar add decb or sub xchg sahf lock mov out pop mov dec mov xor imul lds adc out sbb out inc popa addl (bad) jns dec js sub mov xor xchg mov out es xchg stos stos test pop enter add fadd xor fcoml enter lea enter add push adc enter xchg dec stos mov pushl cltd jge jge aam paddsb xchg pop in mov pusha cwtl repnz pop in shll imul (bad) push (bad) in xchg aad dec xchg clc bound push (bad) (bad) fisubl dec loop fcompl mov in sbb not mov sub jecxz pop jbe pusha popa jmp adc lahf push inc out fcomi push lret (bad) fwait push cmp dec xchg cmpsb pop or cwtl fnstenv es xchg sub add pop and adc mov sub cmp and adc iret (bad) int3 test cmp and bound add xchg je daa sub jp dec add pop push push data16 add xor cmp push stos ds addb cmp popa mov mov push xchg sbb push lods xchg lret lret add jbe push loope adc or add add stc cmpsb gs daa jae add and mov rolb cmpsl or xchg push test xchg je dec sub jne mov in insb jb xor or std jg stos test cmp mov push in mov sub mov add and (bad) jbe leave das leave fwait xchg or push pop arpl inc sbb xor jb imul pusha divb enter xorl popa adc push dec cli cmp mov mov mov jp dec jb fs in sarl sub mov test mov push sbb es lock (bad) xchg inc mov mov mov scas cmp mov cmp pop imul sub dec lcall icebp cmp scas mov sbb bound fistl push (bad) jmp enter lds orl dec dec aad add mov xchg jg das cld push cld sbb jo lods aad push or push aas movsb xchg aam adc mulb mov sbb in push pop pop lcall rep xchg mov and adc pop add in jl pushf add xchg outsl pop lcall insb adc (bad) add jge lds sub popf inc cmpsl sub lahf xchg fcmovbe aas add stos mov cld cli fcomps jne rclb bound ret cld aaa (bad) into gs arpl jmp mov pop sbb ret mov (bad) push popw int3 popa sar cmp pop pop out stc pop xchg out lods inc dec xor mov test jno sub mov push xor arpl sub xchg add mov or jl adc push repz jp cmp scas push or mov and fldenv inc xor xor lea dec ret or dec add dec jmp fwait xchg jns sarl xchg or test repz scas sbb cmp std in out nop xlat jns scas adc mov or add arpl sub xchg or xchg add call mov fisttp add fwait xor lret add nop jnp and movsb xchg push clc cmp push jl (bad) and mov xchg sbb xor outsl out xlat es cmc rcrb jp lret fistpl ds pop mov fs loop mov maskmovq notl pop rol inc cmp jb pop adc cmp inc andl in xor mov es (bad) and fcmovbe mov insl mov inc adc or mov aas push ret ss addr16 pop loopne fsts sub loope clc nop fcoms addr16 sub add xchg inc aas dec mov ret (bad) ljmp cmpsb fdivrl xor (bad) in into jmp fildl dec xor push in dec add cltd and jne shll mov and jne inc negl faddl adc mov int3 nop cmp mov ret scas adc mov daa sub inc mov lahf xchg rcrb mov gs mov pop pop shll (bad) jge adc dec out cmp out pop jbe,pt pop and xor push out or arpl popa or fisubl jmp ljmp lods aam push add dec push xchg push mov jbe mov lods aad outsl add ss cwtl pop adc insb push repz adc xchg idivl ret cmp mov pop cmp ret scas mov sub rorl imul mov scas outsb es pop sub lock mov sahf out mov bound pushf mov add inc clc pop insb jno loop jmp into jbe xchg fdivrl icebp xchg in or scas adc pop xchg sub and jno (bad) arpl push cmp push jnp pop pop ljmp out pop in scas cli adc test data16 bound aam test xchg adc jmp push idivl movb loopne pop sar lcall stc fs push imul cmp dec jg jo xchg ret add cld dec scas dec out mov mov cwtl xor cwtl insl addl add movsl icebp fcomip jne ficoml push test xor ljmpw xor mov aas add push lods sub adc jg sbb or mov adc adc out mov push and icebp icebp cmp lock call lock sbb xor sub and push push mov stc loop lret scas gs leave add je dec fwait or ss sub mov push dec aaa aad mov adc xor sbb faddp mov int mov mov sbbl xor add mov jno pop fcoms push mov pminub icebp js sarb stos sbb add inc cmp mov or rolb xchg adc jb sub xchg mov sbb das clc daa (bad) repnz sub jle push es dec or mov jbe add mov inc cmp or cmpsb mov pusha and cmp add or sub ret pop cmp roll in xchg jmp push add fs out mul inc mov mov sbb dec sbb push sub pop inc push sahf pop push xlat hlt jns rcr (bad) xor (bad) in into aas sub fidivrl sbb push sbb fstpt out xor pop dec mov push xchg inc add inc sub push into dec cmp mov pushf xchg inc insl sahf add daa xchg (bad) xor xchg sbb and into and test repnz pushf mov mov aad push xchg or ficom push cmpsl push mov fmul lret hlt push repnz sub loopne pop das cld or lahf xchg loop loopne lds mov mov push stos jbe or or push jo dec cmp xchg and dec pushf cmp in pop push fisttpl mov jmp scas lret stos dec cmpsb fstl into ljmp fcmovnbe fimul push scas jp mov fiaddl sti int3 lea push jmp mov jae inc mov sub inc ljmp xor sbb mov bound push cwtl or add push cltd xlat inc es sbb (bad) adc sub in sbb adc xor sbb sbb clc imul enter cs jmp in jno fs mov int cli push mov xor bound add cmp das mov jno pop inc inc out stos js gs gs mov je faddl xor lods xor sbb cld sbb inc or (bad) mov and leave jae fs dec inc xchg (bad) sbbl cmp leave pusha daa lods adc loope adc orl cmp loope sbb out loope testb out addr16 out inc mov movsb out daa xchg mov xchg aaa jbe pusha stos out sbb mov (bad) xor in repz fs das je mov inc inc pop jbe xor add mull xchg mov mov jne aas push cmpsl in rcr popa push js dec mul xchg and add mov (bad) xchg inc addl jecxz and adc add int inc xchg xor aam push dec xchg sbb test retw dec (bad) je xchg cwtl xchg addr16 sbb dec pop test dec pushw out add mov xor sub push fdivrp repz mov in adc inc pushl jg add iret mov mov xor lea sub nop frstor std pop xor (bad) nop loop pop gs or fnstsw add scas cmc (bad) into out into (bad) mov or jb adc pop push es mov mov sbb jmp push ja (bad) fsubr and hlt addr16 rcrb aad lahf (bad) jg inc or xor xor pop loope jo jp xchg popa fyl2x mov dec mov push sti ret stos pop cli fucom jl outsl daa pop test test mov mov in out adc popl push loopne sti or jns andl and mov and cmpl aaa mov push shlb loop jle adc dec aad xchg outsl loop xlat out in push je call les pop cwtl jns mov push or jb negb lcall cld fild insb insb (bad) nop pop inc ret das lea mov lea add xchg mov test push negl out lods hlt mov sub cli rclb mov dec mov loopne sbb jg out jne repz adc mov idivb adc aaa mov cmp lea pop out mov lea cwtl fwait cmp mov mov lock fidivr pop inc cmp cmp add hlt es nop dec inc test cwtl cmp lret mov icebp iret pop nop or ds xor pop fisubrl mov fsubs xchg out int lahf jae int pop in pop dec std std sbb push pop xchg adc shlb ret pushf arpl adc (bad) in pop sub gs cmp stos cmp int ja pop pushf cld cmp loop fisttpl cmp mov and aad push nop sarb jbe insb mov pop mov dec mov pop pop jo pop (bad) push inc xor xchg jo jecxz or xchg add pop mov lret movsb dec jb mov lahf cmpsl stos cmp or subl psubd pop ja imul sub mov dec pop scas mov pop xlat data16 (bad) mov shlb add andl mov in sbb push push jo cmc xor popa (bad) cli lods ss (bad) test ret sbb sbb movsl lret dec fnsave leave inc push inc inc push push pop jnp or mov push in xor cmp clc adc mov int3 dec out cmp mov shrb out out jecxz clc mov mov mov inc data16 arpl cwtl mov sti in int jg ljmp dec (bad) push add push pushl sti add icebp add dec push lret inc repnz xchg in lahf dec mov push fs push dec pop and push push pop and ja inc andb fildl mov mov (bad) lods vmwrite xchg push jmp outsb shrb es aas in adc (bad) jno inc lahf int and repz push stos ret mov (bad) jae dec loope aad lea cwtl xchg inc outsl ss push sub add mov fisubrl sub lret inc push sahf cltd jmp mov inc sbb sbb js and fldenv mov mov les pushl les lods lds mov es lahf scas adc clc les movl sbb mov push pop lds sbb mov fdivp xlat clc loopne bound (bad) dec sbb add insl mov inc push in push out push pop cmpsb push jge pop outsl cmp dec ret mov jmp xor xor mov icebp movsl jp jb adc sub mov cmp stos fwait jmp or and pop mov stos negl es xchg cmpsb push fdivrs adc in push clc lock inc xor aad push sarb add cmp ret jno fsubl jb mov fnstenv pop stc sbb stos loope push push ljmp js fld1 inc pop mov or xchg fsts or jo and int sarb mov in leave and sbb lret mov push mov jmp inc call dec mov mov xchg push jmp sub pop pop imull je movsl cld (bad) pi2fd enter (bad) xor jo (bad) sbb or mov mov scas das xchg mov lcall or stc xor ja jne lea flds pop add and movsl jp ljmp std fist xchg or rcrb push lahf punpckhwd pop inc sub cmpl (bad) testl mov subl ret xchg xchg cltd pushf inc jmp addb faddp dec out (bad) adc les mov cmp in loope aaa lcall mov lahf add int3 adc mov fimull push xchg lock or dec ret mov mov nop mov mov dec inc mov mov jo cmpsb adc stos xchg mov push jnp or or or or inc add push roll pop js aad (bad) repz sub pop and push lret inc mov lcall lods lret jp movsl jno xor js pop dec push (bad) mov push leave imul cmp xchg adc (bad) sbb mov adc ss push loop out xchg xchg in push mov fidivl jp xor jp imul fcoml xchg sti icebp xor std dec call adc dec xor test jle fnstenv sub dec add cmp leave xchg lret adc pop imul and lea push dec out fcmovbe xor pop and imull inc dec mov adc and cmp jge movd popa cmp pop push in (bad) jne jno lods jl leave lahf lcall dec or in aad (bad) push mov sbb pop popl cmpsb dec xchg and adc sbb sub scas pop cli lods pop call dec sbb enter outsb ljmp (bad) or negl adc hlt xchg cmp sub dec sub out add addr16 out (bad) jo jp jnp cmp in xchg std pop adc call ja inc xor mov sub mov in add ret push pop outsl arpl int3 jbe test out call imul dec shrl sub cld jb mov js jbe mov mov test xchg inc faddl in inc scas push out ss repnz and ret leave test sbb popa sbb into xchg add aam cmc push jg stc jg loopne adc pushf add mov iret (bad) mov repz repz mov dec call xor add add movb sub sti xchg sbb mov ror sub sub dec stos cmp or add add and fs add and jp (bad) push xor popa out outsb cmp mov push push ret fildll xchg int3 push push popa xor and cmp push sbb push add pop ss rcrl dec dec aas xor mov call lahf pop and dec sbb std cmp inc cmp inc icebp lock jno test clc (bad) std pop jne test jno fisttpll sbb push call mov or ds cmpsb std int leave enter pop push jbe ret arpl xchg sbb pusha fisubr test sub adcl test sbb jg mov ljmp clc adc or stos and mov xchg push repnz add cmp flds in or les jmp xor mov popa mov mov sub jno mov mov ds cld jecxz pushf mov pop jbe pop push dec push test xor cld pop fcomp and aam pop inc shrb xor add sub (bad) popf aaa aad push cmpsb and (bad) mov fwait cmpsl mov cmpsl xor fmuls leave popa dec push cmp lcall inc mov cmp dec enter lods dec (bad) or imul mov je popf inc mov cld rcll loop jl out xchg icebp fist cmpsl call lret lea lea lret add into jg lcall pop daa and push pop movsb std xchg push ja sti (bad) loop add jo adc pop push jmp fiaddl xchg or les test call stc mov mov stc pusha xor stos cwtl in mov sub ret out push xorl js lea scas es xor push sbb subl pop leave dec sbb adc dec iret cmp dec jnp lods je mov cwtl adc xchg mov xchg jo and dec movsb sbb ljmp dec mov inc mov ja adc cmp fdivl fsub push cmp jo jle ficomp or mov ds inc mov iret es cwtl (bad) iret mov and lret mov cld insl in ret and (bad) add sub inc js out into in fnstsw jae mov stc add fucomip sbb test inc and cmp ss outsl jg mov pop bound loopne add movsl adc sub mov or das or pop push mov and les sti cmp mov das xchg (bad) xor mov or xchg cmp or pop or push mov ss fdivrs rclb sub xor leave jnp mov cmp popf movsl pop pop mov (bad) cmc jb mov cld sbb jbe cmc mov or push dec push loope insb sbb repnz leave divl xor push in loopne out pop adc add adc and into out lahf enter or dec jno das dec popf pop daa jns test out lret adc pop cltd adc rorl xchg jnp mov jb mov jo dec lahf mov sub push mov pop mov mov xchg (bad) xchg cmpsl jb outsl inc pop add pop xchg xchg push fistl sbb shr aam scas cwtl dec xorl cs and andb out xchg pop sahf js xchg daa lcall fild and seto lea iret je sti mov je fs outsl mov push ret int3 sub imul test out mov (bad) jne aas leave xchg out sahf xor dec jae mul dec and push push dec fldcw lods push loop push int3 sub cwtl arpl push repz push mull stc insb out sub cmp mov inc xchg mov mov pop lock mov cmpl jl adc movsl mov stos cld add stc add dec outsl (bad) push cmp inc jnp mov pushf adc mov js iret mov sar fs mov enter int cld ss cmpsl into cmp mov xor (bad) fdivr outsl add ret xchg mov mov jnp das leave jae xchg jne dec insl je fmuls daa and std jge inc mov xor mov push dec mov cmp sbb cmpsl int sub mov fsts clc jl arpl out or pop jbe mov cmp stc lds dec xor cmpsb adc dec sbb inc pop dec cs ret and mov cld xor cmp cmc (bad) lock lods pop (bad) es stc (bad) fwait outsl sub mov fsts (bad) outsb xor mov into fnstcw cli pop sub inc sti loopne xchg mov pushf or cld cltd jno mov out mov movsb sbb dec neg outsb out (bad) je or fstpt jno jmp xor out scas mov add je xor adc and arpl jl sbb cs scas enter mov sub hlt aam mov movsl dec jecxz jns jb or add pop lds and pushf std daa jp push ja lret aad rcl dec xor pop or inc pop cmc fidiv sbb dec inc iret push outsb and sbb dec fsubrl fldcw add lock sbb xchg sbb lods lods ja push mov fwait add add ljmp xchg repnz and sbb add mov xchg gs imul aam lock loopne inc cmp aas and mov stos mov cmp mov lds je (bad) lcall mov outsb mov test pop jmp adc fnstsw and stc cmc ds push jne push xor decb ljmp in cmp stos mov lock negl mov ja fistpll adc sbb mov rorb mov divl push jne pop mov sbb test xchg popf dec xchg lock push xchg into push cmp push ss mov in jae sbb shrl push fs scas popf (bad) push xor push ljmp imul and mov cmp pop jnp jnp dec cmpsb rorl test stos mov iret clc (bad) sbb test int test mov jno or lahf insl dec mov inc stc sti lds xor sub pop mov data16 and add sbb jle push sub div xor ret (bad) adc inc sbb xchg sbb popa pop inc jp sbb daa repnz mov xchg inc test inc sub adc jl ja lret pop mov js adc rclb lahf xor adc xlat cmp xchg pop dec (bad) sbb cmp mov je mov inc ret xor cmp push les ret sbb xchg xorb sarb imul enter add sub xor lds insb fwait mov mov (bad) push dec jg or dec scas mov sub (bad) mov lret dec mov mov xchg jp add inc (bad) pushf mov aad cmp jl mov adc sahf adc lock dec setae in pop (bad) sti and fwait jg inc and shl pop sub loopne pop cli sahf add pop sub mov jmp inc ja out repz imul sbb pushf mov or (bad) bound cwtl cmp arpl pop lcall push and cmp loop mov gs adc js hlt cmp inc sub test nop testl ss inc mov in fstl leave popf lods in fmuls mov adc inc mov ret adc mov mov sub xlat pop outsb dec jnp lock xchg hlt das or movsb andb inc sub pop aam xchg cmp test insl sbb xchg jae fsubrs jbe mov mov jge jecxz test dec and jae dec stc fcoms sub or mov mov fldt dec loop out imul sbb xchg push cmp mov adc shrb popa (bad) mov lahf and mov lret stos sub or jne imul jae sbb or add xor loope mov and cld jle push pop ljmp mov (bad) jp inc aas mov push lret and xchg jo dec inc mov shll aam into pop sbb fnsave jno dec or rcr pop xlat mov lret aad pop cmp push fimull mov and push shrl jo add mov push xchg adc pop mov test movb daa in in xlat faddl fiaddl movsb add (bad) jne or jp iret add jne cwtl sub inc ret mov pushf and xor inc (bad) mov xchg or push lock test or aaa jns fadd and outsl scas in pop or insb xchg push cltd jne je sub mov xor js dec shlb inc jp adc mov push mov (bad) push sbb jo mov out push ja (bad) fisubl ja sub adc lahf dec cmc mov sub into dec xor aaa les (bad) ljmp insl dec loope push pop rcrl stos jmp cmp lds movsl ljmp fwait jmp push pop jae mov xor push lahf dec fldcw inc lods or cltd mov mov lods unpcklps push movsb push pushf push cmp lret mov inc aam xlat insb inc in inc gs xchg fldcw mov rcl (bad) mov pop adc adc push fwait lods mov out xor ja jecxz loope (bad) add and mov xor lret outsb cmp mov (bad) scas nop in lods cmpsl or gs sbb rcll inc es cltd dec insl fldcw aas push jo aam dec inc lods mov mov or (bad) inc xor in rol ror pop xor fisttpll and icebp lret enter clc xchg and sub pop mov jge jge jecxz inc rol mov mov sub fwait sbb dec clc mov push jle inc or fs (bad) or or jmp or mov and sar loope (bad) add scas aas xchg pop jmp add cmpl push mov into insb aaa push add jns dec adc mov sub ja xlat subps and sub lods jp fbstp add mov (bad) or int3 nop and loopne inc jnp,pt and sub dec mov push xchg fcoms sbb sub and xlat xchg jnp jns cmp mov aad adc pop mov call rcr int fucomi pop pop inc jbe addr16 (bad) mov repnz mov and js leave dec mov jmp inc xchg mov imull fisttpl cmp (bad) and dec ss (bad) jo aam fistpl out loop jbe xor movsb jg cmp clc jns int3 sbb fsubrs addl loope adc lock mov sub or mov add or or popf xor dec inc mov push ret adc adc sub or cmp push adc cmp das arpl add out pop xor jle cmp in add add int sti ret jle lahf loope scas je sbb pop (bad) fcmove mov clc outsl xchg std pop into pop call dec mov vpcmpeqb push add cmc in and jne mov ja leave out dec (bad) xchg gs cli xchg or inc (bad) repnz inc addr16 js (bad) iret dec test loope jge subb adc and in mov (bad) xchg cmp jo data16 popf or test test xor adc imul xchg out jns enter mov mov push pusha jns sub (bad) fisubr pop mov pop and xor lahf jo adc inc imul push sub add push mov out push ljmp stos int3 push sbb std dec inc mov mov xor (bad) add xor lret jp lods sub int cmpsb clc push cld scas inc clc inc push jne cmp shr (bad) xor das es sub push stos ss xchg sub ficompl imul jle sbb sti sbb enter ret jge rclb sub inc pop inc mov adc es push imul ds dec jmp fucom pop mov xlat mov mov mov cmp mov push scas scas sub mov clc push push or and pop std mov push lock imul push in in test xchg jno dec mov xlat (bad) cmp pop orl mov cld sub sub sub mov adc mov jmp (bad) mov xor add adc (bad) pop lds sub (bad) test aaa stos inc les test or lcall cli rcl bound insb jne mov setp mov test adc stos dec dec outsl std mov jg push sti push scas (bad) (bad) cli xchg dec pushl notb inc stc push pop xchg rclb sub test addr16 push divb (bad) xchg dec pop rcrb inc sbb js xor loope cmp in cmp sti mov xchg lock add cmp jne lret xchg arpl cltd sub push insl cmp cmp cmp fcmovnbe push jb std and mov andl mov rorb fdivrs jno cmpsb sub ret stc out mov jns (bad) frstor seta popf subl and xchg mov add cmp sub (bad) iret insb sbb arpl inc cmp or mov es (bad) and inc mov popf push imul imul repz repnz ljmp sbb daa sub cmp jnp daa cld out cmp bnd and in cmp add in aam andl pop lods xchg jns clc adc push call cmp cs jns stos adc dec cmp xlat std stos ret push lcall (bad) outsb nop cmp pop sti adc repz or pop push cmp (bad) adc xor (bad) (bad) test pop cmpsb ret das (bad) xchg jg inc sub fld1 sbb mov test addr16 je mov sbb jmp fidivl nop fucom mov sub std mulb cmp xor push xchg les sbb push jne cld jp (bad) pop jmp movl sbbl call aas xchg repnz jno mov sub xchg and stos mov xchg cmp test pop push jmp mov cld add and sub mov mov pop mov xlat loop lcall or mov popf push out lea lret add pop push adc xchg sbb add jp push rcr inc cmp push sbb pop loope,pn sub adc cwtl pop and xor dec ret aas cwtl je dec inc pop mov mov and xchg dec jo pushf add xor std or cld mov adc decl adc inc cltd lcall clc ljmp cli or out jge push daa ljmp dec cmp push pop into add jp lret gs test mov xchg or popa sbb xchg and icebp enter gs addl and or (bad) sub and cmp push adc dec imul repnz rcrb jns iret pop xor dec sahf out pop aad xchg mov push pop jle mov jbe (bad) (bad) lods js mov (bad) stc (bad) ss scas cmp add popf mov ret aam push push movsl mov fnstcw push ret stc cs fcomps sub xor inc pop aaa movsl pop jmp xchg or (bad) repz adc roll xchg and insl mov cwtl aad cmp pop mov not dec cmp inc lret pop mov mov add (bad) out mov mov sti stc imul xchg sbb and cmp pop ss mov pusha enter movsb cmp and call pop add stc jb pop inc mov icebp call scas (bad) enter (bad) mov stc xor popa into mov in out lds dec pop in nop es (bad) pop jb clc mov adc push adc (bad) cltd or (bad) mov pushl mov pusha cli lea sub into jg dec inc xchg lcall jl mov dec jp imul std sarb enter and mov popa inc push dec pop sti add lods xchg sbb lock (bad) mov (bad) imul (bad) adc inc mov decb (bad) arpl mov push jecxz dec out jle inc ljmp movsl inc or das push mov xor dec add (bad) sbb jl mov lahf jo inc and pushf outsl pop icebp adc inc or out cmp mov scas inc sti cs and mov inc push cltd pop cmp and stos mov push push and ret loopne pop (bad) stos pop inc xchg pop imul addr16 fcoml dec leave xchg sbb outsl fldl rorl sbb sub shrl push mov pop mov int3 fldl mov adc push les cmp push cmp icebp std dec les orb sarl das sbb cltd aam mov mov faddl jle jp lea push inc inc push js inc in dec jne sbb inc out jle push mov push (bad) add ret enter shrb (bad) xchg in xchg or push rorb and mov xorl mov sub xchg out mov jnp add cmp pop insb shll jecxz xor mov pop outsl mov sbb pop sti fimul or (bad) call repnz mov mov in sti mov fbld mov push inc xor lock das (bad) icebp fcompl jb in jg fnstsw subb pop cmp sub push and adc add lds lods push xor andb loope aam sti fs xor push test insb incl inc pushw scas bnd jg stos sbb mov pushf sub jb mov bound ret push push les loop jae and dec data16 dec es std fldenv jbe repnz ret xchg jne mov lods out push pop mov jae stc jne xchg xlat pop xchg jo dec mov sub aam push sahf jmp and mov inc mov mov dec jg pop add lret cld jge movsl pop add xor sub or lahf xchg int3 adc and xor arpl add sti movsb stc sahf jg sub call xchg je jg pop mov inc test scas mov or jge adcl pusha iret xchg out cmp (bad) movsl je rcrl pushf inc mov cmc shrl out cld lock loopne adc xchg dec sub xchg mov fdivrs (bad) ss lods jmp (bad) pop mov rcpps sub in rclb mov fs jmp mov pushf in mov stos (bad) cmp in mov scas hlt in popa dec jg or add push clc jbe cmp jno insb xor pop jne test jle mov xchg int3 cmpl cmpsl sarl stos cmp cld in push je lods push push xlat mov mov adc mov ret (bad) call inc aad sbb mov fcom imul clc inc inc mov test jl dec int3 sub push mov and xchg ficoml inc jecxz xor rol imulb push sbb mov nop sub jg das jle push jmp sub insl dec (bad) js hlt leave bswap popf dec and jg es (bad) hlt leave xchg inc mov test or push and (bad) mov lods fs pushf imul ljmp lret jmp lock addr16 mov into aam test add rcrb ficompl adc push jno stos stc jle sub movsl inc mov mov and (bad) or cmp pop pop ret push jae mov lahf pop movsb inc mov lea inc push xor mov push or xchg sahf push arpl adc in ret bound inc insb fcomip loopne add pusha pop popa jmp jno sbb pop xchg xor cmpsb inc outsl loopne pop push mov nop (bad) xor enter dec jp or cmp shrl popf or adc iret push dec aaa fdivp loopne insb cwtl leave incb mov push push add adc sub in inc movsl scas das pop out xchg inc mov jbe test test adc jb div adc rcrb lods sbb aam xor bound push push mov sbb mov mov add jmp and stos imul dec mov lock jbe cld (bad) repnz pop inc (bad) int3 js cmp and mov jno cmp sbb or mov fsubs mov popl inc pop popa lahf or insl mov add dec subl push test cli outsl jge mov mov insl jg mov (bad) and sub inc push jbe movsl cli cmp jg nop xor ror rcl loope fnop js jae add dec cmp add add popf ds jns sahf cwtl adc in or int3 aas adc push in popfw sbb cwtl arpl (bad) outsb fimul lcall or popa mov dec dec inc or jnp test imul movsb add jmp insl mov scas pop cltd (bad) icebp pop int mov add jge push inc ds push inc and dec ljmp mov out add dec jns xor mov clc scas lea or sbb hlt cmp leave cmp push mov (bad) mov or lock xchg scas test mov lcall jno jae adc jle into inc aas lahf mov bound hlt mov cmpsl add jae loopne push mov cmp mov xor lret mov cmc movsb adc sahf mov sysexit mov or dec xor mov out cmpsb pusha inc fs pop aaa shrb push jno insb add out cltd mov or and insb (bad) xchg or sub xchg adc dec and push mov mov out loopne push movsl xchg jg dec pop lock mov or xchg rorl and dec (bad) pop pushf stos fwait lods in lret sub das outsl lea gs (bad) push xorb roll jl jge mov int lds into push (bad) nop or pop sub xlat mov dec das xchg jae rcrl pop mov mov push mov int3 dec aam pop cmp out into ljmp pop dec xor xor adc push lock aad mov push shrb or adc lcall in subl push xchg xor arpl aaa dec int3 leave orl dec xchg lret push fdivrl mov sbb mov outsl cwtl xchg mov (bad) stos lret push enterw imul xor sti aas cmp aaa pop and pop mov xchg pop dec repz and sbb jb iret adc cltd xchg pop loope mov js jg fwait (bad) jg in push pop cmpsl scas mov sub xchg outsl fistpll inc subl sub push aas out cmpsl sbb push aaa movsb cld xchg cmp xchg fstpt test ja sub test fstps (bad) xor jbe add mov mov cmpsl sub mov lcall pushf xor pop mov pop inc imul sub push jmp add scas jge (bad) fnstenv daa lods mov (bad) (bad) insl cmc cwtl repnz jne jae mov loope shrb jo mov push mov rcrb mov add pop je aam enter fs fs rcl cmp adc sti insb mov xchg aaa xor cmpb cld es lahf add and sub lahf lods decb xor fstpt inc and mov imul movsl mov push dec jg or mov cltd push and (bad) int push push or or js shrb inc (bad) sarb (bad) mov pop (bad) lods mov jo ret mov mov int3 sti pop ja sub mov push sub nop mov add push mov rorl fxch pop popf mov mov aam iret testb cli jle sahf mov mov pop ljmp imul aad dec jge xchg xchg leave test xchg inc fistl in mull popf loop cld pop jp jno or push hlt out (bad) dec pop mov je pop cltd fstpt nop dec push inc out or mov mov xchg sbb and (bad) cmp adc insb icebp sub sahf xor stos inc jns cmp xchg add cmpsl adc or outsl ret stc mov ja lahf cld daa lahf mov ror xor cmp stos mulb cmpsl in inc sbb and daa dec fidivrl push jne pop insl mov loope push fmulp dec dec scas mov push xor lcall jmp cwtl movsl into mov push fiadd sub cmp (bad) jb sti cmp out dec xor add jo add xchg test fcom cli iret out sub rcl push in inc outsb adc mov (bad) add pop push lock loopne mov in jns (bad) repz dec xchg aaa in aaa xor stc xchg test pushw mov gs mov mov mov rcrl mov jae xor push pop ljmp nop mov dec adc aam rcrb sbb adc repz enter frstor sbb psrld mov (bad) enter pusha inc xor cmc stos or push mov jmp sub ja sub jp or inc pop cmp adc imul add pop pop outsb outsl pop push xchg repnz mov sbb imul insl adc sbb mov repnz mov pop lods add pop in push aaa adc icebp jns and hlt inc ljmp add mov xchg fptan dec std mov xlat add cmc and into mov (bad) xor pop adc neg xchg inc adc sahf mov sbb xor jae cli or test mov mov das sbb mov mov das lods jo (bad) inc jle push loopne pop xchg mulb jb add in (bad) xor stos iret (bad) es or dec mov lods or cmp popa lcall dec inc push push movb sub and cli loop insl inc and dec movsb xchg xor ret (bad) add lret pop loop sbb cmc add fild ret mov push push icebp xchg outsb cld mov test ljmp addb out bound mov mov in inc test in jnp adcl and insl ret mov test and sbb insb lods jl xchg or repnz xchg mov loope ret and aas std xchg repnz pop adc pop rcll mov cmp xor clc ficoml ret sbb push jmp sub xchg sbb arpl scas mov movsl xor pusha sbb ja cwtl pop add mov stc push mov shrl mov repz and ret sti mov pop dec sub and pop cmpsl int3 scas iret cmp mov repnz outsb jne inc mov and sbb cltd push xchg or jb cmp aam inc rclb cmc sbb ss out ret cmp ja push cmpsl out or test into test int addr16 xchg sbb push out clc pop out mov mov adc push pushf sbb imul mov mov adc jmp xchg mov les mov insb pop leave (bad) xchg call mov pop dec bound lods test std pop push sbb jns popa das lahf (bad) shlb fistpll xlat pushf adc sti fcmovnb pop fistpl push subl faddp sub dec in (bad) (bad) mov je jns iret popa mov cmc pop data16 cmpsb jmp fstpt pop (bad) pop lret sbb subl cld push cmp cltd push data16 and loope lahf inc or and mov fs lcall xchg jbe inc (bad) jae leave stc rclb xchg mov test loopne fnsave int3 out cmc mov andl fstpl fwait xor out je jnp inc xchg dec cmpsb fldt fs lret out or mov retw cmp add pop fdiv jge cmp pushf mov lret inc add sbb adc xor push movsl aaa dec lods fdivrp pop sbb fwait dec sbb imul inc test sub pop push push mov sub lret push sbb pop out mov xor mov push sahf (bad) mov cwtl dec push cli and cmp push aam jle xchg mov pop jg iret mov sub mov inc jmp call jg adc enter or xor incb fdivrs imul adc popl xchg adc mov push movsl cmpsb xor mov xlat sub addb inc rorl (bad) pop mov divl or jp ss ja arpl mov into movsb aaa jg mov addb cld xchg (bad) cmp nop int3 sub jle pop push cmp ja das ljmp mov test or (bad) ja cmp xchg mov and cmpsl adcl sub xchg xor out adc ficom xor inc repnz cld stc dec loop and repnz lods push and mov decb (bad) into xchg stos loopne dec xchg cmp sbb pop lcall jg int hlt and (bad) push cmc (bad) enter mov das fildl xor mov enter cmc out mov mov sbb or mov sbb ds rorl iret mov sub xchg ret jp jne repz dec pop add (bad) jbe mov call xor jnp sub roll push mov jecxz insl adc sbbl jae add xor xor xor ret jns daa rcr sub cmp cltd or sub pushf aam (bad) sbb cltd orl push std xchg pop fistpl xchg cmp fstpt lods mov fwait psllw inc lcall xchg clc cmp fs test aam adc mov jb stos mov and inc cmpsb cmp jnp fcomps test jp in mov imul mov inc mov cmp cld (bad) sbbl pop or cs push sahf and dec mov icebp insb mull ljmp clc in andl (bad) push or or xor popf js mov push add outsl outsl cmp sub movsl dec test sahf out subb gs push movsl aam fst sub pop ja dec inc ret call das xlat push cwtl iret jl nop ds xor mov xchg mov sar stos jp dec stc mov test enter ja rcrb mov shlb test (bad) sbb pop mov mov fcompl loopne mov fstpt fdivrs sub aam jb cltd jmp pop and jo jbe mov movsb push out xchg xor push or sti add enter out nop push sub pop (bad) cmc xchg and fwait adc (bad) std das fistp push lock jns lock test in jmp ficomp stc test jns push cmp inc inc int3 in jbe xor fidiv imul mov sub xlat mov sbb xchg insl mov data16 imul sahf or (bad) xchg (bad) loop cmc dec mov mov stc cmp or lods push loop pusha jnp popf sub xor das or inc pop add mov mov out ja lret mov (bad) sub sub jmp movsb inc sbb jno insb inc negw pop xor mov xchg inc sub js xchg sbb or adc jns jl test fdivrp enter ficom pop andl jmp rcr add mov leavew mov stc adc aaa aaa lods cs aad outsb and hlt ss cmp push (bad) cmp sbb enter inc into xor adc jl mov mov shrb pop mov aaa push jb jb (bad) push and test mov outsb pop enter int3 aad push inc mov (bad) lock xchg sbb test outsb pavgb pop (bad) mov fistl push lcall test mov sub add lods xorl int3 loope mov or push jle adc mov inc (bad) fsubp aad mov ljmp imul cmp popf (bad) mov push mov sbb mov push dec fwait roll aad add mov xor adc sti jnp cmp mov sysexit fldl push cli mov lods imul mov mov xchg and decb rcrl js sarb test sub outsb pop stc adc pushf jp subl fwait int xor add stos jb xor in mov mov and jne xor add mov repz lret gs mov clc pop xchg sbb mov cld inc call jnp jecxz jecxz sub bound lock (bad) jp pop iret gs out test jg pop mov ljmp shlb ja dec into inc lods lahf push sbb test lret movb pop jl ret mov inc rorb mov inc mov incl ss push mov daa hlt sbb aaa xchg xchg iret jle aad loope jo (bad) cmp pop xchg mov scas sub mov arpl inc push imul add in arpl (bad) xor inc rclb mov gs stos mov addr16 xor loop mov pop push scas add xchg outsl imull sub cwtl pop or loopne ja movsb in in fcompl (bad) adc imul xchg mov (bad) mov jne and lods fisttpl mov insb test mov lods dec and add xchg aaa ljmp push lahf jmp popl test jp sbb sbb in insb sub fild or jb and xor push lods fwait or xchg mov movsl fdivs and xchg vzeroall push cmpl ja jl xchg xchg shlb jmp ja pop adc ret mov mov fiaddl jb scas inc and mov sub inc push (bad) ja cmp das pusha jns pop mov scas mov stos pusha (bad) icebp dec jecxz (bad) mov aas add adc mov mov roll jae outsl pusha out xor pushf fcompl cs clc div xchg mov sbb lret jne (bad) repz push cld sub mov pop sub in pop or adc (bad) mov in in pop dec jl js shrb and mov cmpsl je nop movsl fs xor insb lds out jp mov push lret idivb xor cmpl jp lock scas push jnp in out cmpsb clc nop in jp pop shr adc cli and inc sub pop pop push xlat sbb cmp loop es add jmp dec int outsl das jae scas mov push rcrl ficomp arpl mov arpl je scas (bad) sub and mov (bad) in mov jl pushl sarl mov outsb ja out mov sub mov xchg sub call or imul jmp outsb ljmp in jnp jp push and nop xor clc loopne sbb inc add lds test loopne fisttpll or fdiv cmp adc xchg pop sbb pop mov jo mov in push hlt fnstcw push cltd cmp mov adc aam jg xor mov mov push out ret mov xchg inc dec lcall cli das jmp or je xor xchg clc fsubrl (bad) lock lds rorb mov pop sub mov je pushf xchg enter in outsb cmpl add xchg int3 cmpb (bad) cltd out (bad) (bad) and call scas mov adc mov fnsave mov push jecxz popa repnz decl pop lret sub stos sbb popf jbe rol sbb jae loop lods or icebp or iret test push ficomp je ljmp mov stos std pop shrl jmp lods cmp dec stos push push sahf ret lret pop pop mov inc in aaa (bad) ja imul orl mov pop test push adc insl aad out js ret js jmp fistl ljmp mov rolb add in test fidivl adc outsb psubq push mov std cli stc cmp das fldcw push rclb cmp and inc add xchg add in adc imul push nop lcall stc ret fmuls sub adc lea cmp (bad) sub mov pusha add cmc adc nop negb cmp push stos pop lcall adc or inc pop push sbb imul jo mov shr adc mov push cs jg cmpsb frstor incl imul ror mov push das movb cmp sbb stc jecxz imul fsubrs dec loopne jne sub lret xor cmp xor mov pop lock adc (bad) jae pop mov outsl jg arpl roll dec mov fs imul ror xchg pop fs cltd adc jns les repnz scas adc test jnp inc subl or (bad) (bad) inc xchg ret sub jnp divl cmp sub movsb jmp add pop cltd push cld adc xchg xor inc or outsb or leave and mov xchg mulb mov push insb clc movsl test ja push leave out fidiv int test adc cltd inc add shrb cld mov ja inc cli pop pop test mov lock pop lock clc cmpsl (bad) lahf mov incl push in push and in jns sbb jg lock ret xchg lcall mov out repz les jmp mov add jae sub push mov ljmp xor push push mov addr16 mov test xlat in push pop rorb push or (bad) jmp ret out dec gs ljmp iret push rcll mov push stos adc jno add xchg push repz pop lds fcoms mov jne mov in sub arpl lahf inc push cs shlb sbb cltd xor insl mov lock outsl jp ret movq aas pop lret dec call push mov adc sar xchg pop pop sub jge pushf mov fs jno iret push fldenv aaa mov enter pop mov iret std fisttp mov jl or or pop es mov sahf ret jecxz (bad) mov loop ffree test fsts scas inc sarl stc sub push lock aam mov sbb dec outsl xchg pop inc scas dec fyl2xp1 repz cmc dec fisubrl stos jmp pop and fisubr mov xchg jne lcall pop xor xchg mov mov pop outsl gs xor fmuls outsl das inc daa fisttpll outsl sub jg ss jl dec jle dec add lds arpl jmp add rcll and js lea lret mov addr16 push loopne push adc lea jae (bad) enter loop pushf fildl pop sub jecxz idivb std mov test out popa aam test inc push cwtl call in jb out inc cld jg (bad) mov cmc jbe pop cmpsb es popa push jecxz rcrl cli mov jae add push sbb pop stc pop inc jp insl mov lods test lods popf lret jo sbb imul mov pop inc add pop or mov (bad) mov adc mov push (bad) or adc adc popa pop lret push ret bound jae cld je jle sbb addr16 jmp repz imul in xor flds dec xor sub adc jl add (bad) movsl stos jo cmpsl (bad) pop mov stos insl sub cwtl xchg inc bound dec ret ret mov (bad) je push mov push and or jne jecxz or xchg js out push imul pop mov mov jnp lods das or bound add ds movsl sub movsl loopne (bad) dec sbb sbb cmp stos inc nop mov jecxz xchg (bad) das mov ds pop pop out push add dec gs lods push jp fmull and push insb inc mov or je push insl popa outsl vphsubwd push inc les inc sbb xor daa pop ja in or xchg inc and cs cs cmp sub aas jno pmaxsw xchg mov mov out sti pop test jge add sbb mov xchg or pusha out mov jmp test clc aam adc outsb fcompl pop mov iret inc push mov imul cmpl mov or mov xor xchg rolb pop jmp sbb js mov add sbb adcl dec pop scas sti mov pop cmpsl pop iret mov or jb imul in ret out inc in in push adc and les xor and paddsw test lds dec adc fwait (bad) (bad) (bad) adc inc add mov xchg pop jg (bad) mov orl push imul (bad) insb inc adc popf shr cld and popa jle sbbl dec xor (bad) cli enter cmc inc pop dec stos inc adc lock int3 sbb xchg loop pop out xor js mov add or rcrl je sti fisttpll sbb or fcmovne movsb (bad) push (bad) in xor sbb lahf pop sarl xchg popf outsb jo pop mov sbb cmc shll fdiv cmp ss jg out sub adc out popa inc and lret adc int ss jns sub in dec mov int push push insb jecxz xchg lods pop lcall stc pop rcrb arpl negl push inc lods repz popa pop inc sub xchg fwait adc aaa xor stos pop ja,pn xchg lret call or xchg mulb out cmp leave daa jle cmp push scas scas jl lds mov sub clc sub inc fildll xchg in adc inc sub ror add pop mov mov je dec rorl daa subb and inc or out inc mov in jmp xor ljmp ljmp (bad) sub in dec movl icebp jmp sub aaa inc xor mov fldcw adc lret cltd aas cmpsl rcrb mov je icebp sbb fiaddl xchg mov (bad) xor mov cwtl clc mov dec cmpl mov cmc push jle dec loopne (bad) hlt in scas mov mov stc mov ficoml and and or sbb lahf test adc cmp fsubrs jmp dec jg lahf js (bad) out push dec sub mov pop fnstcw (bad) or add sarb aaa (bad) xor loop adc roll push std insb (bad) sub loopne mov call jo add fs pop xchg jg inc int3 test cmp cwtl jg xchg dec std (bad) jo jge mov fistp push cltd aad pop or aad push in mov cmpsb cld mov aaa gs and push test lds push and push mov scas out jbe dec shlb and jae fs sbb repnz imul jp adc xor in sbbb inc and add sbb mov inc mov push cmpsb mov cli rclb dec in or add ret dec jp loop adc dec in xchg add imul add inc (bad) mov (bad) mov push or dec push daa xlat cmp fcmovne outsb enter rcr fwait or jl daa mov andb xchg fs dec xchg mov mov lds xor stos or loop xor mov cmc jno popf add mov xchg lods pop xchg scas jmp popf fnsave xor jno push ja xor push mov ljmp pop in out and inc push arpl movsl fnstenv aaa into test punpcklbw test cwtl sub fcomps pop dec mov int3 jl sar lds aam addl scas std pop pop lret pop push lock cli fsts sarb jle jecxz lods (bad) loope movsl jb fcoms xor movsl lds rclb popa cmp inc mov (bad) mov push mov cmpsl xchg js pop gs cmp aaa clc sub push jmp mov pop mov pop jg (bad) lret (bad) lret xor sub arpl vcvtdq2pd cli test pop sub xchg (bad) inc in arpl mov lcall mov mov lock iret add je cmpsl aad sub and mov mov es adc and sbb repnz jne mov mov jl ret jbe repz fiadd xor jne cmp jbe mov test addr16 das push in push (bad) inc xor lret pop xchg cmp cmp add ss jns repnz outsb rcl das cmp out jns fmuls ss inc daa or xchg ja das adc into test mov pop jo jmp pop aas jle hlt xor es lret mov sbb push arpl xor inc dec callw or add fnstcw fsub pop cmp lea in das dec xchg pusha pop jecxz popa mov fmuls fsts dec pop xor inc into cmpsl pop test mov adc les xchg aas lods idivb test jle xchg cmpsl (bad) (bad) mov or xor xchg cli shlb das dec or sbb mov test sub test ds dec daa enter sbb jp ljmp sub dec enter sti lret jp xlat sbb jge cmc movsb outsb stc inc mov subl jnp in sti imul lds sbb push or or cmc push stos add repz sub push xor cltd add orl adc ljmp ret push jmp inc pop xor xchg out pop cmp inc sub sub or cmpsb adc pop jmp in shrb rorl mov pop mov daa cmp sub mov adc jne push fcoms adc push cwtl inc out sub jbe dec xchg inc push test data16 adc icebp (bad) pop push cmp in loope lahf leave mov addr16 cltd inc cmp or inc jl xchg fisubl mov faddl dec pop dec cmp arpl popa hlt mov iret into cltd dec ret pop daa dec repz repnz or out subl bound fcoml push into scas inc test cltd ret icebp (bad) in jl daa xchg mov mov mov or sbb std pop pop insl mov add sbb jecxz fwait lret icebp ret ljmp jb adc (bad) mov rclb add xchg inc inc xor lcall std shr jno fsubp pop roll xlat pop jbe or movsl mov imul lahf cmp (bad) cmpsl aas mov cmp out sub popf pop push mov in xchg xchg sub lret addr16 iret sub xlat add insb fwait jmp or push push xlat inc dec or inc popf call lcall out or and popl nop fnsave inc enter sub negb push xchg push fisttp in xchg or mov push mov pop push loope sbb imul and xor jge sahf add fucomip nop or pop scas jmp jmp jl cs loopne movsb (bad) aad cmp adc (bad) push aas lds sub stos push popaw mov sub icebp imul xchg fcmovnbe mov xchg xor sbb insl mov cmc sbb data16 fs addl mov lock mov sub test popa xor (bad) repnz jl loope pop shrb fistl and mov (bad) sub xchg nop cmc dec int mov fstpt lods lea aam mov sub (bad) cli cld out fwait int lds sub ret xchg (bad) mov mov arpl inc push or and out sub aam popf gs jp or movsl insb cwtl sbb adc scas pop mov mov xor loop enter divl aas ljmp adc mov mov fsubs xchg mov xchg ja jle aas jne stos add xor cmp loop or pop int3 sbb (bad) xchg arpl cmp jbe cld push inc stos mov scas mov adc leave sbb inc jle outsb and jno push outsl loop jbe xchg test enter cmpsb dec repz dec mov daa fbstp push rcl xor inc mov mov fwait cmp cltd loop int3 sarl fadds in aad cmpsb daa jo fbld mov sub sbb test cmp iret mov imul jle std fsts add pop inc pop int lcall dec mov ja xchg mov sub or std lret xchg push cmp icebp and mov enter mov fsub cmp fcomp imul pop push divl movl das inc jae pop push push adc (bad) fs mov fcos sar scas mov push jb inc push shr lret push mov xor rcrl xchg (bad) and sub dec jnp jae bound dec loope push sahf add jne or mov cmp jbe jge cmpsl xchg add jo aad adc idiv fiaddl test jns xchg loope lods mov rorl scas in pop popl lcall inc loopne push or gs push test mov adc mov adc lret and cmp (bad) ret xor jmp xor (bad) mov jge sub xchg adc add mov imul aaa daa cmp jge mov pop aad xor popf xchg insl pop sub lret push in cmpl movsl (bad) fadd pop cmp out jg adc lcall (bad) xor int mov mov in negb into sbb lahf stc push add pushf mov pushf mov push imul adc add test jnp mov (bad) sbb mov sub add divb push push test push mov arpl in rolb aas cmc out push dec xchg add mov jbe mov or jnp mov ds xor test jp or call dec popa aas hlt jmp insl hlt mov stos pop pop pop (bad) rorl jp add es jp mov pop mov outsb xor sub xchg mov jo xor jg sbb dec mov loopne pop out (bad) bound cmc das lcall mov pop leave aam jecxz (bad) sti xchg cmp mov pop test int sbb xor xchg pmulhw pop gs mov shll mov gs stc es mov push clc jnp xchg or fs insl bound jecxz ljmp xchg mov mov push adc cmp lods and (bad) push shll into lods lods push andb sub (bad) dec add fcoml sub sete arpl or pop ljmp fcmovnb cmp cwtl fnstcw movsb add pop and lds test sbb jp sahf in sbb lea xchg fwait shlb mov loop inc ss mov outsb (bad) iret sti test gs stos movsl add adc arpl inc lahf jae (bad) or cmp rep out movsl push sbb cmp inc dec xchg mov sub (bad) mov cld or daa mov pop and stos cmc xor mov pop into and push pop mov fwait jle daa movsl pop imul dec and loop mov mov insl stc ljmp push inc fildl cmp (bad) jnp icebp imul fisubrl push inc sub xchg fs xchg xor (bad) stc pop pop sbb push jge mov push mov shrl mov jno xor xor adc push mov cmpsb repz xor movsb xchg sbb add mov rclb mov mov ret pop sahf pop stc (bad) pushf sub xchg mov inc psubq out pop cmc inc sub mov icebp fsubrs jb jmp add xchg pop inc xor xchg je repz lock cmp pop mov jl gs xchg scas cwtl arpl std dec icebp fstps and xchg add movb mov stos cli out sbbb jge out mov push pop nop addr16 gs in pop insb (bad) outsb push mov repz xor sub mov fadd rorl dec sahf inc fldz aaa xchg fisub inc add ja xor pop (bad) pop rolb jl sub xchg and push ja rorl jl or dec icebp out inc sti rcrb adc add movsl out cmpsb testb call sahf test inc xchg outsl dec and add mov cli or sbb (bad) loopne or rol or sub repz orb inc lcall dec push push dec js adcl roll rcrb stc imul mov imul test jae jle xchg call lds movsb or jo frndint int3 loopne ret mov cmp xor mov sahf ficoml aad ss iret (bad) xor mov mov mov sub loop cmp ror jb push pop aam jb lcall sbb mov dec mov sub and rcrl pop jg or xchg out jmp pop xor (bad) dec mov or cltd cltd xor sbb andl das and and push dec sahf arpl sbb xchg das jno mov fildl push hlt lds sbb test (bad) and cmp adc jl inc outsl dec push aas sarl add sub dec dec (bad) push cmp iret jecxz hlt mov push push adc pop idivl add enter mov int3 test sbb es (bad) adc xchg adc mov push or icebp test jo mov mov xchg xor cmp adc jae mov cwtl mov gs pop bound dec inc push mov (bad) cli xchg mov pop out push push xor je dec cltd dec add pop in dec fwait test jb mov das sarl in mov pop lcall je push loop ret cli das push lahf sbb hlt clc outsb xor xor mov xchg inc nop ret shll (bad) xor int3 cmc clc ljmp ja xor ss popa stos lea scas sbb cmp xor sti (bad) jnp push mov and rorl xor lea pop and jbe sahf xchg enter cwtl fadd fnstenv int3 inc addr16 call jno mov adc test fisubrl iret insl addr16 loop inc shr dec (bad) mov mov je jp jns fidivrl std fidivr lret mov push mov lds pop pop (bad) hlt mov dec lods aad cld dec out cmpsl jae dec adc lret pop xlat js or movsb lahf push mov stos notl aad mov lahf loopne jo stc ret arpl jp (bad) mov fimull mov movsb mov insl cmc xchg out frstor xchg dec sbb push sbb sub pop int mov jg pop clc add jecxz lret outsb sub scas loope addr16 les cltd jae inc sbb int sub push cmp mov int jl sbb push fidiv arpl jb mov pushf and out test stos outsl sarb out sub mov xsha256 xchg dec sahf dec fwait stos dec xchg popf dec xchg mov loop clc xor inc mov mov mov movups (bad) mov loopne push imul jbe xchg xor and mov (bad) sahf pop sbb pop lret rcrb pop pop push xchg adc inc into sub mov ja or shrb sub lods pop inc rcll lcall (bad) mov or negl js add cmp dec jmp xchg in or mov pop nop std stos mov jg xchg cmpsl xchg mov inc insb imul je mov cld sub outsl mov cmp mov mov xchg and xor cwtl in jge insl jmp shll cmp aaa scas xchg scas push stc or dec in idiv mov sub adc cs icebp cmp dec dec inc push movsw xchg into call test jle andl or fsubr push mov js push jecxz ds cmpb push outsl cmp pop inc femms inc jb call in mov scas fnsave mov and add cmp ja (bad) popf enter fwait cmpsl jp imul inc or (bad) aaa inc jne xchg push sbb aad dec cld or cmp or mov mov movsl cmp ss xchg (bad) lcall icebp mov inc jne rolb lods cmp mov loopne mull sbb add and push fsubs mov addr16 pop cmp je mov imul ss fsts pop add xchg sti lcall jg sbb ljmp sub mov dec clc nop or dec mov imul dec push mov push xchg push mov das movsl sub das popf mov pop clc mov imul inc sub mov add daa jno or stos pop stos fdivl mov push jl (bad) sbb (bad) mov sti cmp xlat jl push jbe out shlb shr mov add clc push sahf xor lea adc or mov and or iret pop sbb inc jmp and push push clc sti push mov sub aaa xchg inc loop stos int3 cltd sbb lock and imul movsb sahf sub jle inc mov lret loope pop add pop int3 outsb subl es push push adc sbb xor insl mov sbb inc pop xor aas cwtl mov jle lret add sbb or sub xchg movb std scas or movsl cli push fbld rorl repz loopne sarb xchg insb sbb mov mov inc inc mov mov mov push add dec sub or pop jp push lret jmp popf aas mov push lcall or sahf paddw and or mov sbb xchg out fiaddl add xchg je divb addr16 xor cmp mov sbb lds or aaa push sub mov and gs cli ret inc add aad popa dec push add adc std faddl shrl in ja mov or sub adc mov leave and dec sub out pop jno dec addr16 cld rcr xor in out inc push push jmp (bad) mov testb mov lret and lds clc mov mov adc jb jne pop mov cmp push fst cld gs adc adc es movsl jnp addr16 cmp jge or les xchg push lret mov test xor ret mov test or add mov fildll dec jo lods xlat xor es hlt jg xor or iret addb ja xchg loope mov adc push xchg mov inc pop sbb jb cmp les add sub sbb jge or aam (bad) mov lods and push mov cwtl cmp jae std mov xchg outsb xchg jmp popa xor xchg outsl loope pop das aad repnz popf std push in cmp dec pop push lret sub xor xor cmova movsl aam sbb leave outsl mov rolb push bound adc sub add std sti loopne jns push aad fisub mov sub sub dec push insb jle pop cmp inc test mov pop mov cmpsb pop cli sub (bad) leave mov ja std (bad) and sub pop call jb xchg test push adc test js in cmpsb movsl fcmovb jne int3 into lods andl push jmp cmp cmp dec xchg push push insb enter ljmp dec addr16 hlt pop xchg (bad) xchg sub jae pop dec adcl enter inc cli movl inc std add mov imul sub frstor loope push jo (bad) or (bad) fs sub sahf repz aaa cli scas out dec aam add add mov and xor addl or imul sub (bad) and pop lahf cmp mov es push ds push stos push movsl cmp aas ljmp push arpl into mov std rcll mov jge scas out xchg or mov gs pop fsubrs (bad) sub push repz lcall mov adc mov aaa mov call adc arpl dec in xchg xchg inc ret xlat rclb jb pop mov sub pop inc xchg cwtl aas inc test outsl movsl fcmovnu rorl add aad imul ret jb push mov in push (bad) or cmpb mov sbb lods push xchg mov mov mov movsl or jnp sbb loop repnz mov pop inc inc pop outsl and lret fsubl aad jnp cmp out call imul mov push pop lret xor adc daa fcomps cmp call mov stc je arpl nop aas push mov cmc and shrl add adc add jmp flds mov fs mov mov push and das ficompl push mov push dec jae pop popa dec inc clc xor jae ficompl cwtl sti mov aaa das dec push and out mov mov jge push inc xor dec stos lock fstpl mov sub xlat je jnp rcl dec push mov leave or mov push add lahf lahf ret sti xchg (bad) in bound out mov dec push pop or push push aad xchg gs lea scas repz push cmpsl add mov imul iret lea cmp mov sub fwait push jbe xor fwait hlt mov test (bad) jp into lahf in pop push mov imul sub xchg mov xchg outsb inc pusha sub fdivrl out sbb adc test and push mov cmp (bad) adc mov ja inc repnz sub fcomp pusha cmc sbb or sub (bad) cmpsl mov insb push js sub sahf xor stos insl mov push push aas adc mov mov inc rorb iret lcall sub (bad) cmp xchg jl xchg das leave jecxz std adc pusha dec jmp adc xchg gs test out fdivl adc cmp xchg adc cltd or das push cmp pop es ds aad or mov xchg mov sbb mov test push pusha push inc mov sub insl sub jmp movsb sub (bad) sbb mov xchg xchg jne lret int mov xchg loopne ret cmp test daa sbb ret cmc xor outsb lods jb sub xchg inc cmc and pushf mov pushf jl loop xor addl xor mov pop sti push fstps or sub xor (bad) stc ds in aas loop jmp cs lds mov test loopne dec xlat mov test mov sub int and jge inc fcoms (bad) in add adc sbb aad test loopne cmp clc dec lret xchg out test and mov nop mov pop or mov cs pop in inc xchg test sbb dec jecxz push dec jp aas iret sub add inc and loope test inc cmpsl imul sti mov stc rcrb pusha imul popa fsts (bad) adc xchg divl push xchg pusha (bad) outsl in sbb adc jnp mov cltd test push xchg adc (bad) hlt jne lea out cmp aas fimul daa sti imul movsb aad ljmp xor xchg pop bound stc add inc sbb and mov and mov es mov mov lds daa xlat in or les push add xchg lods out xchg mov sub lods out and les ljmp das out fsubl mov or pop lea mov push xor out fiaddl adc xchg mov jns sub mov inc pop pop mov icebp (bad) adc sti pop sarl std dec mov sbb enter dec sbb call into fsubrl lods out daa in lds aas fnsave mov fisttp stos xlat out test imul divl add fsts fcoml pop push insl pop or pusha or jge dec lret sub (bad) hlt mov (bad) xchg xchg sub adcl cmp add jb mov jno jne addr16 add mov ficoml mov jmp push or mov loop iret outsl ja test sbb loopne lock je xchg arpl sbb pop jl stc ljmp pop push aad repz enter pop fwait rcll test movsb mov mov stos in dec mov or pop icebp or stc or inc in sarb aad je sbb movsl mov cmp stc lret sub mov jns xor dec mov enter cmp jbe shlb and lret scas jmp cmc insb mov pop push sub xor adc inc sbb lock push (bad) fldcw jg mov mov cmpsb (bad) jbe push sbb and stos sub add mov es gs and mov sbb xchg icebp pop inc into pop cmp mov repnz pop dec iret dec insl mov adc lcall jmp or loopne mov push fwait adc (bad) int pop xchg js cld xor movsb dec sub dec cmc arpl sbb sti push int sbb pop (bad) sbb or xor pushf dec xchg cmp outsb push outsl lahf das es xchg test std jae adc lds cmpsl lds pop push mov inc test jecxz enter (bad) cmp (bad) call xchg cmp fimull push mov test les leave andl in pop cmpsb sbb insl nop push sub mov out fisttpl mov imul mov push mov pop (bad) adc dec lock sbb jno push cli and (bad) push data16 mov push pop push push jle arpl cs ficom loop xchg pop push test jo adc movsb jge lret sbb mov mov or xor addr16 jmp shrl (bad) ret jg push jbe into jno push fdivrs cmp dec dec lea sub call mov cld stos xchg xchg ljmp mov ljmp fistpll pop insb mov aad popa or xchg (bad) or jl cmp fstpl add out jmp xor loope jae pop mov dec mov bound xchg xchg enter mov repnz inc lret lahf adc mov lock sbb daa jno xchg mov sbb shrb mov inc loopne mov adc call push (bad) push xor sub jo psubusw inc mov or adc int3 popa outsb loop fwait in add icebp cmpsb cmp inc divb (bad) popa test dec add add outsl mov int3 xor in fisubrl repnz sbb xchg lahf xlat idivl sbb xchg shrl adc sbb xchg add outsl adc inc ret ja sub adc push (bad) xchg lahf js and pushf add nop jne dec sahf imul rcrl outsl push addr16 insb jno cwtl cmp cmpsl mov sub sub pushf repz xchg add mov add mov xchg es (bad) add or dec mov fnstenv inc shrl mov int scas adc int jecxz shrl aas and xor out lock cmp inc test mov stc (bad) mov inc and xor ret ror arpl cmc (bad) movsl jp cltd imul les inc mov (bad) and mov jne in psraw gs movsb ficom ficoml jo aas fs sahf or push (bad) cmp jo mov je outsl adc pop mov push adc call cld stc inc push cld pop imul into jp mov (bad) pop and pop movsl xor es call incl dec cli dec fdecstp cmp pop sub xor mov sub inc mov mov cmovnp sbb lods popa push dec mov sbb push or sub sub int3 sbb daa mov stos xchg jle xchg xchg cmp sbb jle loope adc dec xchg cmp xchg pop jo hlt ret xchg mov or adc inc jne cmp push sbb fwait push inc pop jo sub jle sbb sti out push leave dec push stos cmp sub sub cmp mov add enter cld push dec in ds add sub icebp ljmp in in idivb push ja test mov pop xchg rorl jge xor sti pop pushf adc mov fadds sbb sub jmp scas sub (bad) xor mov ds dec inc xchg sahf repz and jbe subl daa and nop mov (bad) sti jmp and push cmp jb mov lea test xchg push cmpsb mov fldl inc xlat adc (bad) jae lcall sbb loope jae mov jge das and inc call cmc (bad) jle mov adc pop and aas pop lods fisttpll mov xchg or pop add add cmp cwtl mov rcll sbbl loop dec and aam sub shll out es xchg push jp dec xchg das arpl das out sti out mov enter jne cmp ja inc xchg mov xlat lret aam inc mov clc (bad) fsubr mov pop inc cmpsl test in insl lret scas in or (bad) jb dec and inc xchg pop xlat sbb and inc cs add (bad) mov stos addr16 pop jne dec imul rcr and testb adc mov jl (bad) mulb cmp fstpt xor push cmovns aam es insl mov scas insb cmp daa or cmpsl inc push stos sbb sahf (bad) movsb push dec lret ja ret fimull (bad) or adc outsl jmp jb sub inc jl test das cmp stos add xchg lock pop jbe sahf scas in dec mov shrb data16 xchg or aaa pop (bad) popf add mov lea lret adc icebp xor xchg mov js notl pop lock (bad) scas dec dec dec out mov notl sahf pop mov ret xchg data16 sbb xchg shlb mov jns nop cmc pop mov sbb cmc xchg sbb sub jg sbb mov xor loope pop ret cmpsl inc iret loop mov jg mov push test negl add cmpsl push add xor out and leave lea insb out fs inc aas aaa rorl sbb dec scas popa push or (bad) lret dec xlat push cvttps2pi sub xchg cmp cwtl adc popf jl cwtl aad pop xchg iret inc dec in or das dec sub dec (bad) mov pop in sub fdivrl pusha leave push stos mov (bad) rcll or push cld cmpsl rcrl xor int3 popa sbb cli imul imulb push fnstcw jmp aaa cld adcb outsl cmp pop xor das or adc js jo mov inc mov negb sbb frstor in mov mov mov fldcw movsb fbstp aaa cmc inc ret out mov cltd divb jge inc daa test mov pop lcall dec jge push and (bad) daa adc test movsb cmc or jae fcomi iret add dec cmpsb rorl push js arpl cltd dec xchg loop xchg rcll push cmpsb dec mov loope (bad) push fimul fdivl nop pop jmp pop mov es pushf push and add std mov test in dec jbe adc hlt push pop jne movsb cmp xlat (bad) xor jae mov jecxz fild jnp mov sub cmp jns (bad) jb push mov or out out (bad) push cld mov pop push cmp loopne adc mov aad fcmovnu mov adc xchg mov je in sbb mov std in lcall dec add push mov sub fistpl or pop repz iret xchg adc movsb mov push jmp cli xorl (bad) stos mov mov cmpsl dec mov lret pop pop push jb xor xchg xchg enter push push movsb rcrb jno xor xor fcomps jb test test (bad) jns leave lret pop outsl sbb xlat into sub xor push mov icebp (bad) mov fnstcw repnz push push or sahf out add popa ret jecxz ja jae dec (bad) and fs ror rcr ror fs add xchg inc (bad) cmp insb stc cmp mov scas push repz mov fistpll hlt bound add mov mov nop dec jecxz imul jbe sub scas sub sub lds fs pop out addr16 jge mov pop mov (bad) mov pop add daa dec js xchg lds sbb outsb or mov insl mov dec xchg adc mov aas pop outsl dec int mov sbb in xchg inc arpl cmp mov pop mov mov ljmp in add dec jns xchg ret sbb pop sub xor inc xor jg in jg pop pop cmp jg inc cmpsl pop or mov idiv jae pop push imul dec jbe insb imull out or mov dec fild mov cs test movsl add and dec and mov sbb xchg push push das (bad) repnz dec mov xor jmp xchg cmpb aam mov leave imul mov ds xor iret push mov das jle adc movsb push mov (bad) xor sbb loope pop mov in xor mov jo (bad) push out adc jne xchg or push jge test cltd fbstp (bad) divl jle mov lea dec je bound dec inc mov push call mov xor ret push icebp add push sub inc sbb and sub mov xor fimul inc lods pushl or mov pusha inc pop jl jae xchg mov adc fldcw shrl dec orb mov ss mov and jne es (bad) ror mov mov sbb cmc mov sub mov mov adcb cli sahf scas lcall xlat mov sub subl les cmp add add xchg gs add mov or aam ljmp outsl push or (bad) popa xor mov cmp push lret sti mov js mov ja or sbb insb cmpsl ljmp add lods imul hlt adcb mov adc inc insb pop arpl xchg or sbb cld jns mov mov push into addr16 daa mov and mov in (bad) adc push ret aaa dec or jp rcll inc dec test pop mov ja loopne stc (bad) cmp jbe xchg pop stos mov xchg jle mov out movsb repz mov sbb cmpsb movsb into lock sub xor xlat scas mov jmp jmp aaa xor fistpll dec inc jmp dec out adc mov cltd xor or gs jg and mov mov fcmove mov les jo daa cwtl stos xor xor cmp data16 mov mov jg jmp push out pop mov (bad) fistpl stc aas pop mov insb mov out inc pop inc enter pop imul nop sub xchg jb addr16 lods sti mov in xor fcoml int jmp dec fwait dec jne scas sbb stc dec in lahf fstpl incl mov pop or dec xor stc sbb mov movsl sbb das popa xchg sbbl ja stos (bad) mov and lret out adc icebp and test and xchg and fsubrp cmp das mov dec mov mov das cs dec jle fldz xor jno jbe xlat out mov out push mov dec cltd stos mov xor push jp push inc and bound inc mov dec rclb sbb adc (bad) loop mov or aad cld pop (bad) add sbb push ret fisub cld xorl insb repnz jnp mov repnz or les leavew loope icebp arpl test pop xchg push push std imul jne dec adc aam jae sti jae jnp mov mov dec in mov push int3 out adc mov push or push jae adc std ss and into xchg insl mov cs sahf pop and pop aaa sbb repnz mov xchg nop inc mov xor mov sbb in mov jg roll aaa lods mov scas xchg inc dec imul sbb pop adc jno dec stc push repz push mov pop sub mov pushf daa repz cmp jge in out jae dec xchg sbb sub cmp sbb rep adc pop mov add (bad) mov jno test out mov outsl popl lods push rcl sbb imul sub jo das cmp mov mov fwait daa and xchg stos jecxz or xor push xor xchg mov test or mov inc jnp mov int3 movl iret shll loop jecxz cmp stc outsb in xchg in mov dec in loop push mov pop push sub pushf mov jne (bad) jae test add jmp outsl pop adc dec imull je cmp subl jae decb xchg push cmpl cmp mov cmp dec cmp (bad) repnz rolb int3 lret push roll jbe cltd jp iret lret xchg into icebp sub std push push cmc decl pop push repnz xchg (bad) out icebp imulb loope adc bound xor push loopne (bad) faddp xchg pop jbe (bad) dec iretw (bad) divl movl xchg inc stos cmp jno sub mov in ljmp fwait jb and adc mov adc dec cmp test mov dec lea jl aad xchg imul test cmc jg sar cmpsb test fiaddl mov push and add loop cld mov bound push jno or or jb mov pop loopne xor pop int3 outsb imul jle cmp nop mov in and jae fistl jmp stos sub prefetch lret addr16 aad push cmp bound fcmovnb or das mov in out je,pn ret mov and pop mov mov outsb adc test out xchg jg jmp or arpl xchg mov shll divl nop mov sub popa pusha push fsts lret adc aad cld xchg xchg fsubr jg push mov dec pop ret mov adc cmp test mov xchg push pop adc push adc cmp arpl jns test daa pop sub into xor and out adc stos sub xchg stos les sbb ret subl mov icebp and sbb jle push repz xchg test out adc adc lahf mov add lret je add inc xchg sub sahf out push or mov push jg in and out ss jnp iret push cli add inc scas inc rcll inc jle imul sub mov sub adc (bad) int sub ds mov leave adcl test mov push cltd pop mov int3 inc movsl nop jl call dec pusha mulb stc lock movsl mov sahf pusha out lds pop sti jae push xchg dec dec imul xchg mov nopl mov xor aaa xchg jle mov cli mov or hlt aaa out push inc pop daa aaa movsl jp pop movb popa and pop rcll scas dec pop xlat popf cmp cmp or arpl sarb jmp int sbb or ja in or (bad) adc stos mov pop push mov jo loope cmpsb cmp cmp jae loop pop fistpll pop add mov inc xchg rcr lcallw and imul mov test push mov out icebp add pop mov sub sub mov and outsb repz mov push xchg outsl sub popf push cmp or ret pop dec or adc rcrl rorb jl jmp lea mov dec ficom int3 into mov cmpsl xchg out sar adc mov ja jnp aas repz dec xor and pop cmp int movsb cmp and cs pop inc rcl lahf and daa out inc sub rcrb jns orl movb dec gs test ror fnstsw pusha adc jge lea sti add loope xchg fs mov pop add insl js adc outsb sbb pop das movsb sub inc xchg mov jmp cwtl fs cmpsl mov add mov lret mov sbbl sub ljmp sbb leave or pop mov push es mov es insl xor push sti push xchg sti mov scas mov fisub push sbb lahf jb lret icebp add mov daa dec lock sub jns fistpl sub aam and mov (bad) mov fadd adc sub mov loopne ljmp mov popf jp inc dec int movsb cmp shr jnp push mov pop rcll scas add nop fimull ret in mov mov push mov addr16 mov xchg iret xor mov jo add or adc ret add dec dec dec lcall cmpsl data16 loope es pop jno in nop fbstp mul nop xchg rcl sub sbb or or jp and movsl fidivl stc and mov mov sbb push xor inc pushf popf or xchg dec mov add ret cmp push add fldenv rcll pop scas arpl jo das sub and in enter mov stc repz js imul pop fsqrt movsb mov sbb mov sub add jb and mov test leave call (bad) mov daa xlat pop xor dec mov jno sti jno int push push mov gs aad adc pop (bad) cltd jp lods cmpsb idivb (bad) (bad) je gs push andl (bad) xor dec sbbl push mov bound daa inc pop push dec mov clc in cmp inc dec pop xor js imul mov (bad) push repnz ds inc out inc gs imul ficomp and addr16 pushf inc mov xor mov test adc fild inc iret jl mov mov pop xor xchg in not sub aad fist cmp pop cmp loop jecxz aad int3 ror xor scas in jbe lcall add push mov std icebp je xchg decb dec jmp insl das fstpt fldt adc ds xchg jae stos stos push out inc aam int3 xchg push int cmpsb fistpl shrl aad mov jbe imul orl in mov lods mov dec push movsb shrb adcl jg jmp fcomps nop add mov add push xchg mov cmp fs ja dec inc lds out sub (bad) cmp sbb push xor (bad) mov fldenv add and adc xorb leave fs jge dec pop cmp ljmp mov push xor icebp mov push popa dec call loop mov xchg push inc fld rolb (bad) mov jbe (bad) xor ss cmpsl mov pushf test xchg enter call rolb scas sahf aas push sti mov xchg jno fstps add (bad) sti lock and dec adc fstl dec sbb cmpsl xlat aad (bad) int3 mov stos andl xchg fldln2 fmull and adc (bad) sbb or pop cmp jle out mov int outsb outsl pop hlt xor cwtl sub dec movsb adcb mov (bad) mov xor sbb bt popf enter pop aad stc mov das pop mul cmc aaa repnz sbb test jae xchg push test movsb mov or jno push dec (bad) pop add add flds test adc loopne push repnz ret insb pop and sbb jecxz fstpl ret sub and sub gs ja pop mov pop xor or imul inc adc cmpl lods jo cmpsb mov test divb ret nop mov js mov mov dec add cmp add push cmc jle lods inc outsb sub push add (bad) out bound pop xchg xchg pushf jne sub (bad) inc dec dec add add sub push movsl mov mov bound dec pop push jno sub mov addr16 negb jns repnz xor iret (bad) lcall addr16 xchg leave int3 movsb mov and inc sub xor pop je jb addr16 jg sti mull cmp cli (bad) xchg sbb mov pop mov jae insl xchg fldt out mov mov cmp pop (bad) lods inc xchg fnsave adc imul add sub (bad) jno mov pop cli lods xor fsubl sub xor dec push mov adc es cltd in jge push cmp inc aad dec mov cmp dec xor test inc sti popl out jp shr out test pusha dec (bad) aas cli cmp idiv inc sbb push pop mov call or out sti add sub fidiv mov fstpt sbb (bad) push mov mov or movsb setne aas lret xor in cli (bad) sbb push stos xor mov ret fcoms xchg aad scas cld outsb mov insl lods rorb push xor push mov pop dec xlat mov std mov xchg xlat (bad) js mov cwtl (bad) es popf (bad) or cltd xor pusha push inc test mov jb cmp mov or and (bad) hlt and test das xchg test dec push push mov mov shrl push cmpsb push testb inc lods dec call int stos jo repz lds ljmp push aas mov jge outsb push mov inc xchg imul xor add (bad) push lret add add loop scas inc dec adcb or xor sbb mov adc jg repz outsb clc or pop mov and and out clc aam xor cli pushf mov fdecstp dec and jo imul scas imul xchg cmp dec daa hlt stc idivb jle cmp loopne add je sub xchg test cmp das pop jl adc es cmp dec pop and aad (bad) xor aam xchg pop test push movsl js sbb outsl push dec in jne push fs gs sub xchg mov fs jle cmp xor add mov lea mov test jno or ss jb movsl addb pop (bad) addl push test jo jbe jb icebp dec (bad) jnp ljmp movsl out outsb inc jg cmpsb push cwtl jne lods jno imul (bad) jno xchg pop pop lret xchg in rcr ds bound mov push push jmp popf pop scas lea xchg mov fisub aas xchg insb in sbb pop (bad) jno sbb sbb stos loop mov sbb push mov daa add cwtl cmpsb andl mov rcrl nop into push mov pop jmp ja lods mov pop scas cmp clc sbb sbb push cmpsb testl pop (bad) xor xchg pop ror xor mov idivb ret adc clc pop sub push add sub push (bad) or arpl scas in outsb pop movsl mov inc xor jnp data16 pop pushf lret repnz aaa rolb faddl add and sub aam adc fnstenv cmp int and dec xchg (bad) or stc lds mov mov mov repnz dec jne jmp cli test std bound pop jnp and outsl cmp xlat (bad) (bad) or outsb aas rcrb mov inc and pop subl fisttp mov gs jno xor pop mov sub into cltd aad and popf pop and jl adc outsb repnz mov in mov add outsl test push mov add inc jae mov or lock or je or incl lret jle xlat dec call pop frstor mov cmp bound test enter ja (bad) mov addr16 aad mov sbb cmp lret es out js cmp xlat xchg mov ja lea sahf movb repnz sub sub gs jae cmp insl fidivl in enter cmp lods dec lcall std cmp mov imull loope push inc xor push or push push jae,pn mov hlt faddl adc add mov sarb fwait roll and jmp stos sar push dec into cmp sub jno sbb add jmp in push pop repz fstps sub ror dec sbb test fidivrl jle pop pushf and movsl xor sub cli leave dec push fidiv jo test cmp mov xchg (bad) movsl cmp and movsl fmull jl sarl icebp dec mov out roll stos fisttpl jnp sahf mov push dec pop and pusha mov jecxz outsb test or pop xlat outsb dec pop or pusha sbb sbb jl nop repnz jg fpatan jo jg mov pop cld insl packsswb sub negb inc aaa xor sbb sti or dec push jne das lds dec xlat mov mov (bad) cwtl lods adc loopnew jge cli inc repz test xchg mov iret xor cmp fsubr mov inc adc cltd xchg push xor xor mov dec cmp cwtl xchg jl movsl jbe jmp sub sbb mov cli jge rolb movsl aad stos sbb adc fiaddl test mov js out stc and xchg mov cli inc adc iret jmp dec dec push fist cli cmc xor popf (bad) aad int sbb mov scas inc rol stos or push and inc jbe jne out aam pop push in adc mov xchg adc dec mov cmp sbb insb int3 sub clc adc gs pop xsaves cmp inc jb loop pop mov ret push cmpsb sub je and notl xchg imul outsb push lahf (bad) das cmp dec push dec pop cmp jns out rcr je lret jmp into xor test mov popa data16 imul cld je and pop out sub cmp mov rorb pop adc or and adc cmpsl mov ja test or cmp mov pop fidiv (bad) push divl mov jl sarl imul insl inc test lret jnp lock decb xor outsb bnd scas leave in out ror imul aas cmc pop jl aaa dec fs cmp mov lods mov sub inc outsb mov xor xchg push add inc (bad) data16 mov dec ret insb xchg test cs pop cmp pop hlt adc jbe push lock test jle xor or push pop or mov mov lret bound popf sbb pop mov sub les mov mov jnp orl sub cmpsb cmp adc or sbb (bad) jg mov fistl push cmpsl aad hlt pop insl cmpsl loop rcrl sub stos jae pop cmp xorb xor push into sti (bad) pop mov js,pt push test or insb cmpsb inc aad cmp mov pop mov stos sbb push cmp cwtl test jmp mov mov mov mov sbb add gs cwtl mov xchg lods add cmovle call lods mov push stos mov sbb sub inc decb (bad) icebp addr16 jmp mov gs add jl rcrb jmp into and movsb mov push test (bad) pushf adcl or inc cmp adc push push lds or mov ja mov hlt jnp mov int shlb dec sub pop (bad) enter andl sbb pop mov (bad) jo cli dec pop ret fdivrl mov enter sub (bad) sahf test lods bound jno insl (bad) in mull jb cmp push in push fistpll mov add push inc and andb pop mov jb cmp notl in jno (bad) push leave lods xchg mov jbe jo mov mov es pop lock addr16 insb sahf push xrelease adc and hlt cmp inc mov ss lret imul das sub cltd mov adc and add pop int3 push jb cmp inc mov jbe stos insb lret movsb dec dec je lahf out stc jns test adc mov dec pop mov int fnsave push frstor repz cmpsl adcb pop mov adcl push cld adc out jbe inc aas mov divb in add adc cld insb scas cmp fcmovnb push cmc jp and data16 popf das push shrl dec ss inc and adc out sbb fwait pusha adc shrb jb in insb sbb fldpi jo enter or icebp cmpb mov jl mov sbb loope (bad) into add movsb hlt xor xor jge les cmp jge xchg push popa push sbb add (bad) add lret jnp push jbe sub xchg push mov jb push dec and mov fwait xchg dec push inc inc lock (bad) inc pop in sbbb add add push inc jmp imul pop add or mov popf out dec stos pop xor lcall mov xchg adc add mov insb jb mov mov test aas shrl xor inc call lods xor adc adc clc sub dec lods (bad) std or lret mov movsl cltd das lret jae cmp dec cli xchg cmpsb xchg xchg fldcw jne and inc in mov inc xor fldcw pop bound test xor push jno pop out or sbb cld fsubrl sub fdivrs mov out (bad) in nop mov (bad) btr xchg jmp out xor fisttpll outsl mov adc iret pop in mov adc push lcall negb lock jmp xlat (bad) call lret lods lea ret mov sbb test and jns (bad) pop cmp xchg repz shrl faddp mov lcall les loop mov (bad) loope cltd cs and xor add imul push cld and rclb cs adc lcall mov mov xor das cmpsb xlat (bad) push push iret cmpsl or inc mov hlt and into mov cwtl add fidivl mov sub adc sahf je insl adc movsb mov cwtl jnp lahf add out sbb loop or pop sarl orl (bad) loopne mov cmp xchg jg je lods mov xor (bad) stc (bad) inc test sahf cmpsl xchg push lret test psraw sbb xchg or imul call cli sub in dec loopne std movsb push je movsl aas pushf lock (bad) inc andb out inc pop push or adc stos stos lret popf inc in mov or inc rcrl jp stc xor lret pop jmp and sub cmp in jns hlt or xchg cli mov or dec daa aas inc rcrb test pusha add out push adc mov movsb jns inc in (bad) mov enter loop dec clc mov inc adc jne (bad) xchg call mov mov push or sub push push xchg cli into mov adc aaa jge jne pop ss push jmp ret (bad) lret enter lock pcmpgtd pop push mov std jecxz fs sti jmp test inc mov iret pop adc nop cmp push jge insl test and and inc pop mov outsl cmc out dec mov inc stc es jno pop pop int3 in dec loope out mov xor pop xor dec sbb iret sub xor push push insb jl pushf sub cmp in bnd pop repnz out xchg pop xor (bad) cs shrl mov icebp pusha fnstenv push add (bad) dec xlat (bad) movsb push add jge mov scas mov fwait pushf inc in and xchg mov cmc xchg inc out (bad) aas aas xor push jle or pusha pop mov (bad) and outsb dec cltd rcrl fs sbb dec pop push adc repnz ja pop into mov fsubr lods fistpll adc push mov cmpsb cmp out aaa faddp js push mov mov addr16 aam lds jmp lahf (bad) imulb adc es or pop xchg mov aam aas call (bad) mov mov inc out push jp inc dec mov scas incb mov (bad) fiadd aam in ret stos sti movsl inc lods lret cli sub lock push subl loope and dec out mov arpl dec cwtl sub pop lods es xor sub cs ljmp fcmovb cmp mov (bad) pusha scas add sub adc lahf mov cmp sbb lods mov ds adc sbb push mov sti pop sbb xchg popf ds and mov lea movsl xchg or mov pop mov mov inc mov (bad) sbb arpl lret dec adc add rcrb dec push in push push mov sbb loopne push out dec add cmp or inc (bad) (bad) scas jle test jge dec sub xchg cs xlat and fisub mov lret or add mov ss out or pop insb aaa pop inc cld iret es mov aad xchg and jge sbb mov and xorl sbb in lcall add dec cmp ljmp sub or adc ret mov mov mov xor aad add (bad) push jbe push inc lcall or pop je sub popl sbb test add or ss mov es pusha lods js push sub cmp lods test outsb addr16 arpl stc in sub mov or sbb sahf aas mov out test popa lcall adc and scas rcrl xchg sub stos int3 shl mov (bad) mov add cmp stos mov movsb pop push pop or enter sbb es jne jae es xchg gs (bad) imul mov lock int3 outsl adc icebp and push pusha sbb dec stc jae mov jge jbe xchg mov outsb push push xchg sub inc test std insl mov jecxz out imul inc int xor lret pop popa and subb xor jbe fmul jo (bad) in outsl adc mov pop jae (bad) and inc dec dec ljmp (bad) or xor cltd arpl out xchg test lods sbb or fwait pop mov sbb cmpsl xchg push mov in popa ja test leave mov xchg xchg sub fiadd mov mov push (bad) mov pop push outsl insb cmpsb idivl ds (bad) in scas jge sbb dec adc pop mov jae mov sbb cld (bad) addr16 fdivp fsubrl xchg leave adc xor js xchg in jmp out jns push popf add fimul lock jne or and xor mov mov fucom cmp add push out pop sbb movsl (bad) lret xor fsub mov pop mov dec mov inc pop ja fisttpll mov inc sbb loope stos shl iret inc in cmp pmaddwd add pop sub mov arpl xlat inc cwtl pusha jg inc das push inc aad (bad) mov lock test xor mov test out icebp and and mov das push pop pushf add xchg pop inc inc in scas addr16 popa imul les pop and int xchg jnp inc and out clc mov das in lock test xlat push (bad) and and mov xchg imul dec add jb leave out in sub xchg push add dec jl and pop popa test mov mov test (bad) incl xchg shll add (bad) sub cli stc cmc xor mov (bad) shrl add mov jnp adc das inc mov mov movsb icebp mov fadd fiaddl lcall cltd and (bad) sti rorl mov or insl scas ds adc rcl test and addr16 cwtl lds sbb push sbb pushl arpl mov jp sub popa mov sarb test push mulb push add pop adc cmp xchg jmp test imul mov adc imul in inc jne hlt mov rcrb repz push mov jmp outsb clc (bad) fidiv adc pop icebp sub cmp mov xchg cmp mov push enter cmpsb insb xor mov fnstcw shl sbb ljmp adc push pop lcall sub rol cli pop stos andb sub test pop jae mov adc test pop mov and (bad) enter (bad) rorl rol (bad) push lock xchg mov jnp in imul fsubs push inc faddl jbe (bad) mov xlat aam punpckhwd fbstp lea mov dec faddl (bad) repz idivb repz and loop sub aaa hlt mov push das dec cli insb stc inc lods movsl dec dec mov out mov cmp jecxz das add push push (bad) decl fcom lock or ret jecxz jmp das popa jne and adc mov ja lods xchg stc (bad) pop pop dec fbstp test sbb into (bad) or jne inc or lret lret (bad) jge cmp pop test inc xchg (bad) rclb xchg and test add adc cmp pop sbb sub pop ret jmp lods cld xor dec popf mov xor mov pop jl out cmp xor or gs sarb or test sub sub sbb stos and inc add dec xor rorb outsl jo sbb or (bad) dec shlb or dec pop jmp push cmpsb das cmp and dec xchg dec addb cmp mov adc cmc daa (bad) or fisub std test add pop mov es out mov mov cmp je dec sbb dec mov jb stos cmpsl dec loop sub mov xor out cld andl push sbb push mov mov cli push ss pop xchg inc adc push pop dec jns mov dec mov inc int loope push xor bswap and pop fidivl xchg lcall aaa imull out andb int3 mov sbb jecxz xor fsubl xchg mov mov ror sti push cmp lahf pushf in mov subl and in int3 repz incl mov (bad) xchg mov movsl push clc or lds jnp mov push adc in fwait and out into fldl lret fistp enter imul lret inc or in cld (bad) pop push (bad) jmp scas loop cmc stc xchg jno sbb sbb sub in mov adc push xchg sbbl je fnstsw push cmpsl dec pop or ret cmp jb xchg cmpsl fisub and push inc scas cmp inc mov out jl jae,pt inc aaa pushf mov fs pop xor cmp out jno rcr loope in inc add mov sub mov cmp rcll jg jnp aas and cmpsl lret ret sahf sbb (bad) jmp subl jnp jge rclb inc xor adc les mul in cmp mov mov mov xrelease orb push (bad) jbe jmp loopne cmp dec test inc xor lahf mov std outsl push jae xchg xchg mov mov jmp xchg sub mov mov test mov dec out and rep notl sub xor imul or mov mov clc inc mull xchg aad mov dec sarl lret pop or sub movsl jnp push mov shlb lcall jns ret xchg push push cmp aaa in pushf push or cmp inc cmp dec dec ret rclb xor mov push test jecxz mov xchg mov std push in pusha (bad) fsubrs enter (bad) jo mov cmc rcl and mov sbb ds int3 es pushf in out lret shr ss in arpl sbb sbb cs inc inc enter int3 or sbb jge ss push or (bad) ficoml out das sub cmpsb cwtl push cs es test lods jmp (bad) arpl sahf adc out pop ret mov mov jbe sbb lret cwtl das xchg mov inc enter lret jg movl and adc xchg aaa pushl or adc mov ficoml fwait mov mov (bad) ds lods cmp sbb jl push iret pop sub les outsl cs mov in pop pop roll cmp sub cmp into or es iret or push (bad) jbe xor test and leave pop aas inc add daa int jl cmc mov bound inc fcmovne jmp (bad) lret (bad) repz xchg mov sbb add pop cmp orb bnd lcall jo jb int sbb xor push outsb test ja outsl xchg out mov mov in mov lret lahf out pop mov (bad) jae gs mov in adc rcrb lds cmp test mov mov inc push inc mov jb fnstsw cli adc adc xchg jl sbb shrl cmp xor scas add in and jmp fdivl popa in in sahf sub fdivrl adc loopne cltd insl lea add xor sub dec pop jbe popf jo cwtl xor pusha jg mov hlt and jns cmc pop fs inc lcall lock mov sti and shrl push test xchg bound mov add in insl pop pop inc xor repnz push imul cltd aam js call adc (bad) fnstenv out push push rolb push sub or dec lds (bad) mov sbb gs push out and into pushf aas (bad) ret add std scas jg cmpsb add out mov cld cld adc imul imul lods xchg add out in jb jb insb pop jo aam pushf mov ss jno mov mov cltd cmp push mov xor and data16 (bad) ds pop shrl negl in mov fstl xor popa (bad) lock movsl lock pop dec mov adcl lret int3 jne push pop (bad) into mov mov push repnz adcb jmp movsb ret cmp bound add mov insl jns movb mov add (bad) mov xchg ljmp adc jb sub or cmp es push js sub or xchg xchg adc loope sarl rcrb std (bad) lods cmp xlat (bad) xor rcrb add fs fdivp cmp inc int scas add stos fsubrp in daa xchg ret outsl mov fnsave ret xlat xor pop mov call mov and scas lods and adc (bad) in clc push in mov mov sbb repnz shl jb xor pusha xchg push jbe fistp aaa xchg fistpl fstl addb lea xor ljmp movsl pop rcrl inc adc jge push mov cmc xchg xchg push jmp dec xchg mov sub adc jae mov and and sub mov jmp sub dec fildl and out mov dec inc int3 aam xchg rcrb sub cmp add jbe mov lahf (bad) sarb sub mov cmpsl mov lret mov test js (bad) repnz pusha xchg mov cmp push sub xchg test pop xor sub sbbb scas (bad) push into pushf fwait or mov xor movsl mov cmp mov stos adc out jb,pn adc popa xchg adc data16 or sbb dec mov scas sub pop cmp dec dec test test aad or imul pop cmp outsb dec (bad) add and imul and inc sub xlat es jno repnz mov (bad) iret das mov and fbstp push stos out xchg jecxz (bad) mov fild ljmp out clc sub push xor daa es and (bad) in gs add jb adc add pop add decb sahf mov clc popf pushf insl stc out fimul add push inc imul adc xchg lahf ret imul cmpsb cld add inc loope pop inc push (bad) xor pop inc cs inc mov sahf push in adc lock hlt or movw xor add pop jp pop int3 mov pop xor mov outsl pop aas mov xor jmp push and das mov jmp aad xchg jg adc push pop out sti aas ss data16 pop cmp loopne lock ret loop sarl std sub lret dec mov aaa (bad) (bad) (bad) mov outsl lods and lock cmp bound loop lock sbb in popf push in ficomp ret jp push in hlt add fmull sbb rclb mov outsb aaa fcoms mov pop call push pop dec mov mov stos lods xchg scas mov psubq int stc lds sbb dec imul (bad) mov outsl and scas int mov or (bad) jnp push pop stc xchg mov js stos and pop push adc jbe dec lahf rcll pop jge or lods arpl out sub dec inc jp lea mov pop xchg lret sub inc adcb aad test mov xchg dec sbb pop or rep push test repnz test stc in in das pop jo mov hlt dec cmc rorb dec cwtl sbb nop push pusha xchg in xchg test mov push sub jecxz dec sbb mov sub (bad) daa lods sbb adc xor pop dec (bad) fistpl mov mov lods fsubrs (bad) les xor (bad) mov sub sub xchg cmp mov movsl fidivr iret sbb push mov adc ss call rorl lea pop out dec loop nop xchg ds cmpsb push xor xchg xor sbb mov and adc push enter push jmp (bad) fistpl (bad) rorl cwtl push pop xchg mov daa or xchg inc shl fbstp xor lods ret insl out jge pop cld iret pusha xor mov sahf lods sub or ret mov inc push call push mov cmpsl orb lds add call (bad) jb fldt push and or daa rcrl ss push jnp icebp pop sahf loop push (bad) stos adc cmc ret scas cs notl outsb mov adc push roll cmp pop pop lcall in and jg mov iret jo cld das popf lock (bad) cmpsl mov jecxz adc jne stos dec adc xchg sub fdivl es pop ja out shll int3 inc nop xchg imul inc jl leave mov sar in and es outsl jbe movsl mov jmp pop add push sbb dec pop jnp and das sub add dec addb pop aas push shlb add popa lds mulb jecxz nop cmpl cmp call outsl mov in mov push add cld ds mov fstpt mov push sbb pop fsub in mov sub popf movsb jl xchg add lea jp dec add ljmp (bad) jnp mov lods push dec aas adc sbb jb push in sub xchg mov xchg dec xor pop inc mov mov cmp das push loopne add mov mov and jbe call movsl nop or stc rclb (bad) adc (bad) cmpl hlt loope dec icebp clc pop fiadd sarb outsl lds mov xor fs and inc cmp arpl mov testb imul inc in insl (bad) mov cld out enter aaa mov sbb das xchg icebp jb mov movsl mov xchg mov or (bad) sbb and and dec hlt cwtl orl pop cli addb sbb lods cmp cmpsl in mov mov insl jne cmp jg sbb inc sbb imul orl jno adc pop pop mov mov cmpb cmp inc rorl sub bound sarl outsl sub pop mov icebp push ss popf mov push pop inc mov test popa cmpsl bound std fmull (bad) fldt pop cwtl hlt or xchg mov mov dec xor mull lods clc outsb pop jnp shll call xorl sub cmp aaa es xchg jmp fwait pushf add mov pinsrw mov ss popf dec adc (bad) xor lock add stos inc mov cmp stos push pop jg xor inc adc sbb cmc add ja sbb gs mov pop sbb outsl pop jmp jmp popl xchg mov sub ds mov mov and data16 aam loop fistpl imul test (bad) xlat or dec add pop xor jle jnp into fs pop movsl ljmp arpl or push mov mov xchg mov xchg test test lock xor adc mov xor dec cmp (bad) sarl mov push push xlat aad mov pop sahf adc jmp shll mov (bad) aam mov xchg sahf nop das adc pop ret rorb cmpsb jmp pusha mov aad daa outsl cld test sub mov fsubl mov leave sti mov mov inc jge pop pop dec clc das stos xchg mov sbb loop inc cmp mov jp lock sbb xchg incl shll xchg or mov jle mov int add xchg cmc test dec sbb jbe mov jge cwtl test jne or sbb dec enter sbb push je clc (bad) sub das pop inc push das xor aam pop pop in sub xchg scas cld setg add lods outsb scas into push stos add or sarb sub jmp jo or sbb lods xor push mov dec xchg adc cmp loop ret jle fimul mov (bad) xchg jb cmc ss jae xchg jmp mov and (bad) jbe xchg push add les mov mov dec fwait clc mov mov sub nop sub scas xor jle insl daa push dec repnz or lods inc mov mov jae inc lds sub adcb and std out lea xchg fcmove xchg cmc push mov cmpsb das enter ret jnp decl (bad) sub pop repz and push mov adc fsub or je or sbb sbb adc and jns roll jle adc xor mov fistpl fs dec adc cmp out (bad) rcr les (bad) fidivr xchg mov (bad) mov push rdmsr lahf jbe imul (bad) leave push insl push mov insb lcall mov into push xchg rclb fdivs push stos incl push nop push mov and aaa loop loopne pop sahf push cmp data16 ja add pop push out decb xor add enter mov mov push lods xchg in loop or dec sti jl xchg sti fcom pop adc test cltd dec fcomps cltd lahf mov fistpl adc loop jo xor (bad) std xor push and int3 or sahf mov jecxz sbb lahf outsb mov push adc push rorb adc dec loope jp add test and popf jb or insl scas jg icebp jg add in jns xlat aas mov pop pop xorl cli dec data16 jmp (bad) ds in pusha (bad) shl mov or imul add ret mov (bad) mov addr16 (bad) xor or xchg in cmp in cmp push js fcoml mov jmp out add sub push cmpl mov cmpsb push mov icebp je cs xchg pusha clc (bad) push cmp jns adc mov add cli out fwait jns imul in push sub ret daa mov pop imul arpl jp addr16 pop pop cmp xor int3 jecxz je fsubl negl or xchg stos sub xor repz (bad) xlat nop stos push or test push js cmc dec mov (bad) xchg int and mov lret pop inc inc push movsl dec dec bound xchg outsb repnz add stos stos popa add daa jecxz ret int3 lcall xor pop mov dec jne mov jmp lods shlb cli add sub fcoms jmp stos cmpsl int3 sub jg push add jl fstps pop xor lods loope ljmp mov or ljmp ret and push stos sub jne enter push xor pop adc loope adc out push push in push lret xchg (bad) enter lret jne fcoml lds pop das insl dec adc enter outsb (bad) fiadd std enter movsl push mov outsb lods jg hlt fstl and inc add adc sub add or ds cli push pop adcl cmp pop aaa and fidivrl mov sbb mov jg xchg and mov std jnp jns dec pop dec outsb imul pop jnp arpl cltd fs idivl rolb jo repz and lea je (bad) (bad) add popf mov rcrl insb xor pop or dec inc pop scas cld or (bad) daa add dec xor push nop mov mov fistpl dec xor pop stos sahf pop and pop mov das jp lods mov mov ljmp out test sbb imul lea xor xchg lock jbe or (bad) aaa cmp insb test shlb scas insb jmp sti xchg mov adc gs ja xchg or mov addr16 ljmp ret call je cmovb cmp pop sbb addr16 sbb xorl pushf inc and mov dec lods lods test cmpb adc mov adc mov inc lcall pop sub push lret adc jns (bad) mov xor push mov loop aam push mov push cmp jne push test sbb and mov js push dec loopne cmp adc aas add mov addr16 daa mov dec mov movb add popf add xchg and fwait cltd popf cmp and and adc clc push mov jbe popf popf inc lock pushf icebp pop and xchg xchg jb push push insl mov pcmpeqb push fstps and rcrb lcall addl iret out xchg lret cmc (bad) lds orb pop test in adc fsubrl incb push aaa adcb enter out fcomps test movlps (bad) xor cs aam xor fcompl jno add dec (bad) push adc in pop sub ret js js mov pop push test mov dec hlt inc add or mov fbstp add pop fs jge insb out ds or fdivrs cmp and fidivr jl ss push fldcw sbb cmp sub rcrl in sbb popl clc jg scas xchg mov mov or call sbb add push mov test xchg mov push imulb inc xchg lods jg sbb xor inc in loop (bad) pop (bad) clc roll add add mov add jo lods pop push enter jo adc mov inc cltd mov imul sub dec pop pop sub ret jb test push jnp mov nop test mov gs jle xchg pop icebp ret pushf dec loop dec pop xchg loopne sbb pop sbb pushf rcl ficom pushf lods jmp cmpsb outsl jnp inc ja or sub ret push xor mov sub hlt int3 push pushf jp ret xchg imul lret sti add jmp jne jnp outsb int and divb inc push (bad) (bad) cmp js iret jne sub jbe es bound xchg add mov aam stc mov fnstcw fmul dec popf sti ret int dec jp dec mov xor mov (bad) int3 inc xchg or ret (bad) sti jp pusha out fcoms adc mov xor repnz int3 cmp sub inc jg popa (bad) cltd dec fs int mov mov jmp outsl divb sub movsb ret cli scas das cli (bad) repz in jo sub lret pusha cli push aad and sub test push jl aas adc ss pop mov mov mov stos push adc push pop cld mov shl outsb sub outsb enter cmp push (bad) out cmpsl (bad) mov out jo push fidivl stos add cmp loope xlat xchg lds xchg insl ja jp push pop jb (bad) in mov call mov mov xor sub repz jns dec inc scas cmp jbe lods xor inc scas (bad) jno mov js mov stc sti cmp mov test dec jg jb inc push in jo push xchg es lret jle pop cmc lahf cli mov notl in lods adc hlt sarb mov mov mov mov repnz push aas js sbb lret pop xchg (bad) ds xchg lcall add xlat movsl pop jno xor mov jg pop pop loop or stc adc or jge cmpsl sahf jge test (bad) mov mov test gs xchg (bad) lahf push xchg adc mov loopne add adc popa loop mov call mov fwait cmp daa push outsb popf add mov cmpsl xor push es mov cmp sub (bad) xor popf push fcomi push imul fmuls jp jne sahf sub mov pop and cwtl loop sbb dec adcl cltd mul or cmp popf test jno xchg jp xor lock sahf popa out dec loop add sub adc jl pop sti sbb xchg lods pop or std mov rcr sbb ror cmpsl js cld or fiaddl (bad) mov sbb cmp scas mov adc gs adc adc jb cmp mov adc aaa int3 mov pop (bad) cmc pushf stos cmp popa scas xlat mov lcall or inc in in int3 and cli push adc jle loope (bad) xor ss xchg mov test (bad) test shrb xor ds inc jae pop outsb jmp fist lea and mov std fadds pusha dec mov jp sarl addr16 rcll je scas fsubs or rcrl ljmp lret mov (bad) sahf (bad) data16 mov outsb pop dec arpl (bad) call push sbb scas loop insl data16 mov sarb pop pop sbb or repnz movsl sub inc stc enter cld out dec mov inc cmpsl xchg sbb xchg test mov mov sbb lcall outsl pop bound cwtl out add test pop adc mov jl cmovge lods mov xor jge adc dec pop mov pusha mov jns gs into jg (bad) call and in inc (bad) pop pop fistpl test dec or stc pop mov or push xor add outsb test pop daa out xchg add sub out in (bad) outsb hlt push lods sbb cmpsl mov push (bad) loope or add (bad) rclb cmp cmp pop dec xchg mov fistpl add cwtl xchg bound jecxz or outsl pop in je push jns xor cmp and loope enter std or push inc sub jb stc mov mov push (bad) hlt mov in inc push or or push into mov jg cmp adc mov lea pop mov jecxz bound jmp push add inc xor and repnz popf adc (bad) mov mov data16 add popf pushf push cmc mov xchg mov movb cmpsb dec nop popf flds daa xlat loop jge (bad) mov es pop enter out cmp (bad) cld aas and and xchg lds fmull mov dec push lock mov cltd gs outsl out fld inc cmp (bad) sbb cmp xor xchg xchg and leave jmp mov stos stos cmc sub xor jnp sbb es mov xor jp pusha mov and sbb jecxz or subb dec xchg (bad) pushf loope pop xor out dec pop (bad) cmp aaa cmc insb mov add cwtl sub and mov mov jno jb fsubs out mov cltd jb sbb pop pop fadd arpl cli inc mov adc addr16 int3 jg pushf (bad) idiv cs pop and mov (bad) insb (bad) xor jo mov cmp into fst and loopne dec mov xchg incb addr16 dec mov mov insb sub addr16 (bad) ret je and lea add cli sub xchg sub icebp jl aas add test stc movsl jo xchg pop inc mov cmp movsl push mov aas lret push (bad) mov outsl mov scas dec loopne dec or inc shll clc lcall dec scas fsubl and jl addr16 ds std lods stos ss call and xchg mov fisubr pop pop add xchg cmp mov aas ds sbb or mov mov push jmp mov lds and repz mov jne xor movb into jecxz lds push jge cmpsb xchg and shufps nop pop inc ds push enter mov fnsave add pop xchg add and test roll loope hlt pop jne outsl leave jne sub jno and dec xchg jl xchg push mov mov adc outsl mov sub repnz call inc into inc pop push or in out stc pop push das mov adc jg sbb xchg call jns xchg andl jae addr16 js mov lret loopne add add rcrb push lods sub push rcr ljmp cltd (bad) test jge jg enter cld ja jl repz pop lock out dec cmp iret sbb imul push adc lcall mov push scas ja xchg lods data16 (bad) addr16 (bad) sbb lock sbb jnp xchg add jmp cld arpl rcll enter insb xchg movsb lret iret push mov cli outsl cmpsl jl adc mov pushf adc sbb lods or mov mov jg push aam pop adc cld sub cmp sub adc pop jge mov movsl adc adc gs adc xchg and cmpsl fdivr sbb outsb jns leave mov xor addr16 out int3 fist mov add push jge xchg dec clc adc mov jno scas xchg xor jo jbe inc add out data16 adc adc pop aaa mov sbb mov int3 aaa fnstenv push cmc inc orl test arpl mov mov adc dec xlat sbb test les in jbe sbb into sub adc add push out pusha and and xor jg das movsb fsub xchg (bad) jge rcrb stos aam mov xchg xchg lods das lret jno and sarl push xlat xor hlt cmp out imul ficoml sub jge (bad) adc sarb push jne mov lret inc and push loop xchg cmp xchg gs in repz and (bad) jnp dec mov clc jmp test insb adc insl popf pop je jno out lret push jno pop pop aas sub insl jns ret std xchg lea pop mov (bad) jg jb mov xchg cs je pop data16 dec bound push fcom fsubrp dec fmuls cmp sbb hlt mov xchg sub dec sti int mov dec outsb (bad) (bad) xchg call iret and cmp mov or cmpsb xor lea in in dec push mov pushf and mov ret fstpl inc sbb jmp out in in popf in mov cmp ret pop clc jl fs aam leave fcoms add enter and sahf pop out call js lret pop pop push pushaw lahf adc lcall jge jb push push shlb or insl push dec leave (bad) mov dec push jbe sbb xor lock adc dec add fnstsw in cmc in add repz loop mov cmp push mov outsb es lcall push shrb outsl mov jecxz mov or dec movsl repz lahf inc add imul aam imul dec lods in fs roll cld rol cmp cmpsb and imul xor push lock std mov mov jae push mov adc test loopne and mov scas mov push (bad) jmp lock rorb mov adc adc add shr les shr idivb stos mov nop xchg sbb nop sti and fsub (bad) cmp (bad) add les cld test arpl inc push insl movnti stc je (bad) xchg mov aas jae mov hlt dec xchg enter lea gs (bad) mov sub add fistpll addr16 test mov inc mov aas pushf jnp or cmp cld mov aaa testl xchg ss aad jmp repz cmp int3 imul addl ss iret add in iret es jbe test (bad) sub push fwait lods into (bad) mov enter leave imul pusha jp xor je jg or jmp shrb (bad) or (bad) out jge xchg and mov adc pop mov les sbb sahf imul ja mov pop mov pop (bad) (bad) test or dec dec pop xchg push popa lcall out clc sbb push dec sti mov lock sbb push aas incb cmpb ja jge jnp,pt cwtl jb in in clc loop test dec imul (bad) mov sbb lret mov sahf cs add jae adc adc (bad) incl ja mov aas jno mov lock repz sbb sub pop and repnz out mov or cwtl xchg push fsts sti pop loop lods scas or scas fidiv outsl push popa and mov test out fstpl push lret xchg cmp cmpsl inc mov lods imul sbb sbb popa lods pop xchg inc mov mov or loop,pt shrb iret and ja or xchg shl cs adc std push das sahf ficomp lods mov mov add out divb (bad) cmp aam orb pusha enter jb inc or push je xchg or imul push sar sbb ss cmp mov mov call xor mov mov and popa mov mov mov sub mov stos mov stc pop mov movsb add lahf add jnp mov jb push xchg pushl jle int3 imull lcall mov mov in lods ret mov lahf xchg mov lds stos xchg jmp xchg dec loope int3 xor push loop ja popf or nop mov or call jmp adc mov sbb push sub mov inc ret subl (bad) push xchg cwtl outsl jbe (bad) push mov adc stc clc gs shl orl and scas aam push ljmp gs xor sub cmp inc scas adc repnz lahf js and arpl xchg push sbb jmp orb insb pop lds inc (bad) mov popf addr16 hlt stc int3 aaa xchg pop push pop ficomp pop dec inc repnz cmp and out mov pusha fdivrs mov mov lods sub pushf sarb jg push pop xchg pushf sti pop outsl jb insb jae jp out int3 inc mov push push or mov mov test out xor push scas test and or lahf movsl adc bound (bad) lcall dec push jle mov sub (bad) xchg jne xor sbb enter cmp test or pop ret test mov cmc lods mov or xchg mov cmpsl fdivs push js mov mov xor dec ret cmp test daa and pop adc mov call test mov mov in jno jmp mov xchg cld daa push mov and pushw bound scas pop out aad stos ret inc add jge mov xor sbb mov push cmp aad xor add bound dec jmp mov jns fimul das mov jns rcrl xor je xchg jo adc (bad) sbb std dec lods mov pop push pop mov pop xor add push stc and sbb sub mov push add dec mov or or and and add dec pop jp lods lods arpl jecxz enter popl mov jmp mov les test mov test pop xor dec fmuls (bad) jo cmpsb test cmp cmpsl in movsb les lahf xchg icebp fwait push or mov adc mov test adc or ljmp decb or les fildl sub cld cmpsb cmc adc decl sbb imul aaa sarb jb sbb or mov mov ss emms (bad) daa mov add je add mov and or mov add add cmp inc adc lods pop mov mov icebp sbb scas enter jns push mov pop test mov fistl jmp push pop push rorl cmp rcll sub clc mov scas (bad) mov outsb mov (bad) mov sub xor fs inc out mov cli add loop dec inc int3 cld daa fisubr in stc sahf icebp inc (bad) incb ds out jno or push cmp in out adc lods sbb add cli pusha fstpl or and test lock add mov mov movsb sub clc add jecxz jg imul and and out add js pop dec mov addl mov push pop inc es mov (bad) xchg mov mov mov pop test push hlt sub cmp inc inc mov sbb out out inc and loopne (bad) jmp jmp push stos outsb std cs jmp popf mov dec mov jp ret cmp and add mov insl xchg sub std test stos repz pop xchg cmp adc dec add jp popa out mov gs cmp icebp ds popa pop pop lret in pusha sub sbb inc or mov jle mov jnp sub movsl dec jmp stos fxsave lret pop pop pop and icebp outsb out mov mov sub frstor sub jno mov notb fs and sub mov dec mov inc pushl repz or (bad) cltd (bad) xchg je xor into cli xor bound xchg (bad) aaa popf sub pushf jge mov (bad) pop cmp rorl push jae inc ror rcrl xchg call hlt jo push mov shrb or pop jg push pop lcall out enter push ficoml in sbb aaa les push neg and (bad) cli mov mov jge pop cld xchg dec sbb in loopne mov sbb mov xlat jmp in shrl dec mov cmp inc jecxz mov mov in xchg (bad) sahf (bad) das sahf nop push mov cs xchg fnop mov adc (bad) and arpl xlat sbb jg aam mov popf aad js or sub push xchg rcl cmp xor sub out out sub jl pop jmp sbbl out movsb insl xor or and stos cmc inc cltd div push push adc inc cmpsl mov jne fcmovb gs xorb fs jge dec mov xchg jle adc movsl inc dec into insl jmp push mov and mov adc ljmp js push cmpsl adc loopne (bad) xchg pop mov inc jg outsl scas cli jnp insl dec jl xchg call scas lods pop jne (bad) ja popa pop sub mov bound or enter xchg arpl test data16 stos imulb cmp lcall xor push ds cli xchg dec mov lds int mov mov xchg push imul fs lahf jp inc jecxz xchg call scas or lock sti add adc push push jle js aaa out xor xor pop mov pop fwait lods mov (bad) imul ds cmp cltd mov inc shrb inc mov mov xchg pop mov jg sti in jge popf rclb push adc or or jl add (bad) fnsave and sub or (bad) bnd mov sbb push jp int3 and xor stos pop mov popa xlat dec xchg sub xor call push mov in addb (bad) int add xchg adc jmp out rclb ja ret cmp pop push notb imulb cmp pop push stos add cmpsb mov out sbb and sub scas mov sub jmp pop jae jo jmp addl and dec and js xor es inc ret jg (bad) jae add mov nop push xor mov cld es popf cld scas dec or outsl jb push dec cmp scas (bad) imul jmp pop (bad) fdivp mov add rolb mov and jmp enter sbb dec (bad) int sahf cmpsb push mov cmpsb sti test fmull dec push and test test imul add fnop mov push push fnstcw in sbb mov mov push call pop fbld ljmp test lcall imulb lds ret push jp inc jno jnp fmull (bad) loop fcompl rorb or (bad) pop mov mov (bad) imull dec and out xchg dec push push adc enter push mov inc lret pop adc negb mov xchg popa movsl sti repz aas icebp push les movsl lea jne push mov aaa pop das in cmp push xor stos mov and lods jg les out insb or mov or addr16 mov sbb mov out xor into cwtl jnp or mov mov or std lret outsb daa cmp mov fwait and cmp jge mov arpl popa bound test jecxz dec mov and cmp dec insb cmc test pop int pop sub dec or lret pushf hlt je push (bad) gs or sbb fprem pop pop scas xor fbstp cmpsb lock pop mov lea outsl mov iret xor out mov dec test push ds jae addl cli lret outsl pop or (bad) lret push imul pop or sub pop cmc sub test mov add inc xor repz jo push (bad) pop es ja sub lret test test cmpsl and xchg pop or cli or cltd iret fldl pop in xchg jbe ljmp xor or push jb cmp out shrl (bad) icebp or sbb popf sub loop shrb pusha jecxz jl ja jne dec aam mov mov pusha in xchg or cmp repz mov pop jnp ret ljmp repz jge pop pusha fsubl mov inc push and repz pop mov imul or in inc (bad) cmp pop add fistp mov js dec inc cld sahf (bad) jmp ss rcrl jbe scas stc nop sub or cmpsb out xchg in out fsubrl lret jp ret and sti sub push jmp dec dec sbbl in add and add out add mov addb fcmovne push insb clc (bad) mov test fs jbe cmc mov or stc jbe sub jne sub sbb add mov ret mov or push iret sbb jmp rcrl out jg loope leave sbb in out cltd sub lds in outsb xchg imul das shlb test lret movsl cli loop mov test dec pop cmp sbb jo dec movl rorl and inc xchg jo stc and sbb or outsb jnp popl daa fcomip xchg and mov adc lods ret jmp or test mov fs xchg jecxz mov outsl loopne divl scas lods stc xchg scas arpl adc (bad) imul inc dec push and jae lahf pop mov icebp insb mov cld (bad) cmpsl xor gs cwtl fcomps outsl cmpsb xor fldenv test sahf mov pushw cmc inc loope xor mov (bad) aas ret cmp rorb idivb jbe xchg adc cwtl scas mov jno cmp and or inc dec lret xor arpl cmc push shlb xor loopne push mov cs add jne out lret in lahf adc fisttpl int3 insl inc sbb lret negl aas mov xchg ret cmp test xor or das fdivrs xor xor addr16 or (bad) mov out dec mov arpl jle (bad) jb imul xchg or pop mov loope clc dec ja lcall inc iret sub fstpl xchg lahf loop les jb sub xorl mov mov push sub xchg lods mov fimull push lahf xor adc cmp inc jb mov mov sub icebp aas push (bad) adc popa cltd sub in add xor jno mov clc fdivr jecxz divb jno xchg sub push push dec sbbl in pop ret out mov and mov or fwait xor fcomp adc icebp cld and inc jecxz and pusha fbstp std rcr jle out xchg lods fnsave divb loope fbstp jg call movsl cmp jbe pop fnsave repnz push nop sbb lods clc inc js and adc test inc push mov mov mov xchg insl jbe jo xchg (bad) aad pop (bad) test adc inc cmpsl aam es out (bad) pusha mov add cmp and sub je adc add lds jle loopne inc jnp xor mov cli pop popa ja into loopne push mov dec dec inc add lock ss roll (bad) jle scas in cli mov push cmp es repz in and adcl sti inc pop and mov out adc xchg int3 into repz (bad) ljmp xchg inc add or aam add stos js jg sub outsl enter test sbb (bad) int xor dec enter ret cltd mov xchg mov insb pop cmc xchg subl sbb xor fidivrl jle jo sub cmp push xorb push repnz ss ret inc sub addb inc mov imul pop jp cmp (bad) mov inc movsl mov pop push sbb insl jp pusha lods je insl adc add pop in es sbb adc aam loop push icebp cwtl scas in int adc test add inc ljmp sbb xchg and jo lahf scas xor xor fmull xor es rorl sbb clc cwtl mov push mov out mov test sub xor pop push movsb mov sahf dec pop cmpsb mov idivb fildll imul sarl mov out jae adc fiadd pop addr16 loop cli insl pop pop into cli and arpl sbb fisttp mov xchg lock nop jmp mov movsb mov adc stc out or movsb daa pop mull mov add inc cmp push stos push fsubr inc pop or jl dec and out add adc or fidivl cmpsb cld push xchg gs rorb jmp data16 shlb inc dec lock xor fstps dec push mov add mov cwtl cmp leave pop dec or cmp pop mov scas popa jae jae mov xor and or push into iret mov lds mov fisttpl cmp movsb sub repz jno fiaddl call add aad sub inc js jne or (bad) imul dec stc insb ss add jo adc dec fmull enter jb sahf movsl aad mov notl push xchg mov cltd jo mov sub or fldenv (bad) ja sbb hlt scas inc pop test xchg ror mov push dec push testb repnz jb fmuls (bad) (bad) mov sbb xor addr16 dec pop cmpsb repz mov pop jo xchg ljmp sub fs scas dec pop xchg jmp mov push or inc adc arpl push scas dec shrb call sarb jbe call imul and imul fidivrl int dec mov sarl into mov mov into jge (bad) mov popf mov sub pop je (bad) ljmp and loopne mov push mov mov inc xor insb mov stc fsubr add les jno test mov inc lcall ret leave pop aad shl int3 (bad) pop inc jno adc inc cli mov adc sbb ljmp repnz sub es ljmp repz loopne sbb and pop push push and push mov notb push ficom mov repnz stc jge (bad) enter fidiv cmp add into out sarb lock in test xor inc jmp js pushf cmp cmpsl insl cmp adc out aas dec clc adc inc dec nop fstps push repz iret mov shll adc or sub cmc notl xchg rcll sbb mov int jbe cltd (bad) insb cwtl pop mov movsb popa mov pop sarl sub push mov dec popf ljmp dec mov lcall pavgb hlt sti sbb pop mov dec sbb sub xor xor push cs (bad) negb enter inc mov les aaa and mov inc call rcrl gs fisubr xor push adc dec lret adc imul or mov out jg pop jno fmull popa hlt and mov xor sub insl cld adcl cmpsb sub (bad) jo rcll cmp hlt dec stos lock movsl out aaa sti push pop fbstp xor lds movsl sbb out mov xchg movsb hlt sub mov lret inc jmp mov push loope in ficom rcll mov jns sti pop push push sub pop call jge scas xchg icebp mov aaa (bad) pop cltd lods push int fsts or jle push dec lea jo xlat and repnz cmp push jp rolb pop (bad) mov inc adc adc push push dec sarl (bad) addr16 in pop jge sub scas xor fs and push sub inc mul loopne ror clc xchg test stos ret inc pop jl popf lods adc cmp dec nop inc lret lret add and test ret dec add sub cmp sbb jmp shlb pop js push jg lock js or cltd icebp repz cmp sti or test push push clc pop jae fnstsw cltd ficomp (bad) popf push jns test std cmp adc out xor push xchg jmp test gs aas movsb stos dec mov imulb mov (bad) out dec out sbb or rorl add or ret rsqrtps pop pop mov push xchg out xor push mov shr shll pushf add mov sbb pusha loop fsts and jno push imul fs adc pop data16 mov incb inc sti pop test cmp outsb fsubr adc sbb (bad) push fs adc cltd pushf pop sub loop iret xor sbb sbb dec test sbb cmpsl xchg cmp sbb andl mov sub pop xchg mov cmp cmp scas mov popl addl insb imul xchg and push test fdivl mov jnp mov mov je mov dec sub aad and xlat cmp lret icebp cwtl jmp dec sbb sub inc push dec xor pop dec and mov subb ds and sbb andnps dec push pop cmc repnz push cld fldenv lahf jbe pop add mov fs adc pop inc hlt call stos popa outsb sbb or cmp mov stos mov mov sbb fiadd mov fcompl inc push rcrb lcall stos fidivl (bad) or fldenv aam pop pop addl push stc sbb movsb bnd fs insl movsl add pushf roll test adc dec psllq insb pop subl ljmp psubd mov stos or aam and sbb push outsl sub stos add cmp push mov dec mov push out xor insl notl xor movsb sub jl in lret xlat add adc dec scas fsubs loop je fistpll (bad) ficoml les cld push jbe addr16 sub jno mov pop sub or repz pop xor dec popa sbb dec add inc (bad) cmp arpl aaa ds or dec jp,pn ss inc (bad) cmp (bad) push adc mov pop sub inc lods test jp test and stos aad stos sbb inc pop shll mov addr16 test lods xchg bnd or out push popf jne insl shrb pushf adc cmc cld mov inc mov les mov push sbb pop daa test mov mov mov shlb add lock xor sbb mov add rcrb push dec pop inc andnps lock xchg out and jae arpl mov lret cli icebp iret and jns,pt add mov xchg pop psllw jge mov pusha gs shll sub lret int3 xor or dec sub pop push ss jecxz inc dec jns xchg mov mov cld cltd sbb addr16 in add inc imul pop ret mov sbb ror or push outsb pop cld push icebp (bad) jle sahf ljmp ret hlt popf xor push addr16 mov or or mov inc jb mov arpl mov mov dec pop fistl adc data16 cmp lds lods jecxz rcrb pop call lcall xchg shl scas cmpsb in add dec inc and sub mov les mov jg cmp mov dec aam or xchg dec fimul sbb mov lock push push xor cmp lds (bad) imul xchg (bad) rol rep add lock jne loope mov fsubp pushf push test adc and push mov mov lods pop xchg mov fs (bad) xchg cmp mov mov add inc xor inc fsubs pop aad or pusha adc jg frndint or inc pop mov rclb push mov in jo aad std lods inc inc sti movsl stos xchg addr16 mov inc bound ret push pusha pop sbb cli xor jns lods fwait shrb and pop icebp jl sub enter cltd leave enter fisubl push mov stc (bad) out fdivrp outsb push outsl push pop cmc or ret mov sub add cmpsb cmpsb loopne (bad) mov adc xchg push imul dec xorb enter lods push cmp int3 hlt xor dec mov mov (bad) cmp (bad) rcrb inc movsb dec xchg (bad) mov cltd mov sahf aaa jmp dec lock dec in fwait pop enter push xchg add pop loope daa jl (bad) sbb sbb hlt in mov scas (bad) push xchg cmpsl ds xor lret lods das sub cli fidivl cltd (bad) cltd or out add adc mov in xchg call out xchg add cmp arpl pushf pusha scas pop movsl mov shrl into mov inc add mov dec (bad) call and sbb das xchg lds stos xor jle add lea aam fstps xchg push ss push inc push pop jp push xor das dec pop mov pop sbb aad test or push mov lret loop (bad) inc (bad) adc xchg jmp lahf lahf pop adc cmp clc adc mov repnz sti cmp xchg jg jmp lcall lds or mov add loop lods cmpsl fdivrl xchg xchg mov mov jo lahf pop pop fcompl xor cmpsb xchg mov mov je popa int3 arpl (bad) fisubr mov jp mov (bad) or sbb sti xor ja aas icebp outsb dec jg inc scas adc push or sbb hlt mov mov jg aam test aaa ss adc mov mov push and adc xor mov test push pop sub inc sbb movsb test jo xor jbe mov lods scas pop mov inc into mov dec cmp pop ret or sub jp stos js js cmpsl incl lds sahf aam mov jbe mov divps ja xlat mov inc cwtl insl sbb lcall jnp add fwait jecxz lods mov shlb popf lds xor jp in add add xchg ret add mov or mov aam aas sub push (bad) loop or cli and sub jb dec xchg nop xchg adc and cld std test pusha cmp hlt add sbb aaa cmp test rclb ljmp mov mov aas lock vcvttpd2dq fs outsb dec (bad) pop aam mov cmp push mov sbb out bnd iret jl or in push xchg data16 mov push jl out ficoml gs jmp (bad) lock insb hlt je mov outsb and jns mov jno rcll adc pop enter daa ret idiv mov repnz or sub daa mov scas push leave cmp jnp xor mov mov fstps mov inc xchg xor lds lcall xchg or (bad) leave ret cmpsl test lret push mov pop imul xchg int out (bad) jbe stc in ds dec out pop adc arpl ljmp je and data16 lcall (bad) addr16 (bad) lods popa and scas lock cs (bad) sbb xor xor pusha jg aam xor repnz pop inc inc loope loop inc push rcrl pop mov movsb inc fiaddl into lods cmp dec int mov sbb in sub or adc xchg add push mov mov xchg sub mov outsb daa out mov mov xchg mov jle mov jg rorb mov fidiv inc sub aam push xor dec cs icebp dec pop xchg pushf ja xchg loope leave xor insb mov sbb mov aaa in xor xchg and and fstl (bad) ljmp jl mov ss dec mov test sub sbb add push jmp out pop add (bad) sbb aam int3 dec pop iret mov xor fsubr rorl pop js pop idivl (bad) out movsb push push test lds xchg (bad) popf dec out jns xchg and out (bad) fimul out outsb mov mov cmp test sub fisttpl popa mov inc movsl dec outsl test and shll je push mov or jl test andl lea xlat sti mov or fidivr xchg je sti push aam mov xor xchg inc mov sti testl jl pusha xor lcall iret push in insb inc cmp rol cmc dec xchg cmpsl mov aam mov dec mov mov adc loopne mov add and imulb pushf and cmp mov lods out out out pop inc test inc pop xor pop sahf lret mov leave xor xchg jne pop pop addr16 cwtl add lret fistl cs mov sub getsec inc cmpsb pop repz and adc mov dec push lods scas xor fist cmp push jmp mov xlat mov pushf xor jns pop lret and call or shrb mov push xor mov sbb lret and jmp aad out mov dec xor and xor (bad) (bad) pop push mov mov fucomip push pop mov or jge call mov mov inc lcall mov cmpsl lods mov mov xor test fninit mov mov xchg fdivl lret inc mov sbb adcl inc or daa jl lock inc aas bound sub kandw or imul mov popf and scas dec and sub mov and test (bad) xchg push lea fisub mov outsb sub aaa shl fcompl and pop ror xchg push push push lret cmp fwait dec inc push leave inc xor inc mov add dec loopnew xlat movsb adc test call in fidivr fimul cmp lahf rcrl lods aaa fmull mov out and hlt cmc aad push cmp push cld into fidiv push ss xor fsts popa shlb ljmp pop fcoml aas mov xor in aam inc adc sub cmpsb sbb mov lock inc push or outsb dec pop jle mov aad pop call jmp sub mov bsf cwtl adc or (bad) xor mov jb insl out aam adc xchg xlat mov cmpsl lret push dec xor es cmp inc sbb dec stc jl aaa push push mov stos jmp mov aaa mov rcrb insl ss (bad) sbb dec sub (bad) insl sub mov test loope and pop cmp inc lods mov inc xchg repz shl nop jmp sbb mov mov rol shl adc jmp aad inc cmp or or mov mov mov mov jb iret cmp decl ljmp add pusha leave and out rolb mov mov in fs in jg (bad) inc ljmp int3 and popf pop in stc fs cmp mov xchg mov fs std scas mov fs leave aad popa inc in jnp cmp xor mov add cld xchg test mov sahf sti sbb sub dec xchg jb jns,pn jae sarb pop push mov cmpb jmp pop jg aam cmc pop jmp sbb jbe sub pop push and imul loope push adc outsl sti stos mov cmc rcrl (bad) incb bound push cli lret xor lcall scas sub ljmp dec (bad) fcomip inc pop inc inc ds pusha arpl lret icebp xchg mov and push pop je sbbl ljmp xor icebp jno and mov int push mov in sub stos lret mov outsl mov sarb adc jg in sbb sahf dec popa int shrl in jmp and mov pop ljmp mov push push movsl nop inc inc lea into pushf mov dec and fisttpll cmp (bad) cld outsl pop mov jnp js bound sbb xchg movsl dec je adc fcom call ficomp mov xchg (bad) divl popa mov imulb jl sub pop aam int3 mov xchg xor mov repnz pop or add inc dec xchg fdivs shl in cmp pop ljmp xor adc xor lods aaa cmp scas xor fidivr lea adc fs (bad) jo outsl aas fwait push lods cmp pop cmp ret jb movsb popf pop in fs rclb jo or out stos rolb out dec iret mov call rcll loopne pop adc inc movsb adc cmp mov inc sbb stos add pop dec pushf mov add xor push loop (bad) fidiv xchg jbe adc push jle push cmpsl fmull hlt jns sarl cmp lahf fdiv jo fdivs inc push adc mov clc dec or cmp xor nop push hlt push rcll push or xchg cmp mov push adc imul insl push adc dec mov shrl jnp inc int3 pop pop rol cmpl xchg push push scas push push jp inc ljmp scas add pop pop mov dec stos add mov pop mov add xchg xor push jns xlat lret es push mov sub leave shl (bad) jle divl mov or aas and or call lock fimull xchg cwtl xchg jo loopne hlt nop jb lret ret sti dec inc mov add fmull popf (bad) scas nop cmpsl int3 push mov add pop cmp mov (bad) setl jmp mov ficoml xor push jb out add pop mov add nop lret bound bound inc push xchg fwait inc ret jge out stos ret mov sub push loopne push les push loopne int dec xor andb aam (bad) mov out mov cmc pop loop in cmp cmc xor mov jae jb or xchg and jl inc mov xchg test sarb fisttp and nop lock aas sti lock mov jmp cltd mov and jg stc outsb mov cmp inc add mov sbb popf mov mov dec scas incb (bad) ss sub (bad) pop xorb popf mov scas mov and call cmp jle daa push inc cmp cmp dec lahf out imul ss push sub fsts jle in adc inc imul jne push add jle pusha (bad) jbe lahf scas xchg test les sbb and mov testb add aas pop sbb cmp inc pop in mov or loop sbb fcompp adc inc adc lcall mov cmp loope and sbb addl push sub test mov pop add xchg mov pop (bad) inc jp fisttpl repz mov mov mov adc enter mov inc inc (bad) stos sub jmp bound add jge dec aam ficompl mov fildl xor sub out xor or mov cld cld sar mov jle mov jp call mov jg mov je bound mov ss js push mov fwait iret daa or movsb and mov sub mov fsubl push fbld insb mov xchg cwtl add stos imul inc aam iret test popl test pop int pop pushf aas sbb mov mov jb xchg lock imul xchg movsb pop cli cs aas or out fstpl cwtl dec push cs leave mov xchg ficomp outsb imul daa adc jno and adc stos xchg sbb cmpsb insl icebp and xchg (bad) ja in scas xchg ljmp scas xchg ja rolb repz push leave dec inc dec sub cmc sub in repnz jb xorb mov into xor sbb (bad) fadds lcall sbb sub and mov mov pushf (bad) cmp imul bound sbb out inc xlat xor jle xchg fsubrl or pop push popa mov cltd push sub xchg pop movsb inc aad imul mov sbb mov mov pop jnp andl pop repz bnd jnp in or pushf rorl imul lret rol aas xchg push (bad) xor cwtl ljmp ret out scas fcomip and dec fdivr xchg sub pop cmp (bad) jmp and sbb dec lea fisttpll jge int3 (bad) ljmp and test imul sub mov mov jne mov mov es inc shrb mov loope repnz fldenv jno pop (bad) sbb divb out xlat ja jae (bad) je into mov cmp mov in leave loopne jb adc stos pop insl jecxz clc iret xlat mov out test lret fs jmp xchg pop fsubr add adc movsl inc inc aam loope (bad) sub mov xor jbe daa mov cmp or pop fistpll and add pushf adc dec popf jae mov xor roll xchg test pop loop ss xor roll mov fsubrs xchg pushf int3 inc mov cli les mov sub ret repnz sbb stc jb (bad) aaa test jg mov std loopne jg pop pusha or daa or jnp orl or icebp iret and clc push mov fstps adc nop inc cmp mov xchg sub ja adc movsl sub sbb xlat pusha pop push cmc dec inc je loop cmp test or in push rcrl sub imul push cmp lods jbe inc fs or hlt push les (bad) mov (bad) mov sarb adc les (bad) jg sub xchg or rorb imul mov imul call bound lahf sub sbb arpl js xorl jle popf or push addr16 lret cmp (bad) movsb faddl test xor push push (bad) cmpsl test nop les add insl push push clc out pop fwait into call incb ds (bad) (bad) jne mov cmp fildll mov adc arpl push loopne pop dec push dec xchg pop ret mov sbb aam fidiv notl aam cmp addr16 icebp xor rorb xchg inc leave xchg in push sub jmp inc xchg adc jns,pt mov (bad) mov cmpsl pop mov sub (bad) jl push and orb rcrb cmp add nop test sub stos fildl push lahf jbe fsubrl xchg xchg pusha jo addl arpl js push (bad) popf arpl pop jmp imulb cli movsb dec mov loop mov jae call dec test jns mov aad sbb daa push mov dec push add rorb insl loop das cmp loop mov ret (bad) cmp lods sbb xchg notb mov mov cli rcl adc fsts test mov in rcrb sahf lcall jae mov test cmpsl pop rolb dec in fnstsw lcall bound (bad) push repz sbb push mov or shr cmp add inc xchg xchg jge out (bad) xor or ror mov rcrb jbe test pop dec pop add popf roll dec add stos and inc daa inc xchg inc nop ljmp in in sahf inc mov (bad) loope sbb popf mov mov push push shll sarb and sub enter sbb inc push (bad) xchg adc bound sub sub fild push xor in xor scas cmp movsl ret cltd psllq xchg (bad) dec and mov out inc xchg into mov cld inc insl shr xchg (bad) dec in mov mov xor pop outsb cmp das insl sub xlat mull cmp push in add iret mov es dec test repz mov int3 jmp xchg sbbb das mov lret fcomi xor mov cmpsl (bad) ljmp iret cmp ret lock (bad) jp mov jl in jle dec dec xchg aam enter int jge push shrl pop sarb cmpsb jno inc sarb in lret cmp jge ret test rcrl mov xchg (bad) jmp and sbb negb and gs add test call mov movsb xlat (bad) orb (bad) dec shlb pop lret daa flds dec data16 xor xchg dec lock bound shrb xchg mov out daa fisubr xchg mov xchg les push mov xlat test jmp mov and popf std (bad) push imul lea daa push lea sub std add rorl cwtl xchg push sub xchg adc imul mov mov mov xor pop mov addl sub dec inc test jbe xchg bound (bad) mov out inc cmp leave add ds insb dec and adc jbe sbb (bad) loop dec add test inc imul pusha mov cmp fcoms xor stc jns jge xlat cmp sub push pop xchg pop frstor test rorl cmc inc imull xor aad mov dec xchg adc clc fild jo out lret ret sub mov insb lea xchg jae inc jbe int pcmpeqb dec fsubl rorl push jb outsl (bad) in push (bad) pop jbe loop jns sbb push sub ss cltd add cmp (bad) fcoml lret jbe jne test nop add fadd xchg mov or loope imul push dec ror lret in fildl cli cwtl fbld adc sub adc int3 mulb cmp push inc mov sub dec fwait sub jnp cmp ja int3 dec pop mov fsubrl scas pop dec inc mov mov sbb cli add (bad) in into jmp sub jmp popa fcoms dec ret mov ret sub xchg jp in jo lea cmp cmpsl in outsb or mov cmc in jle pop iret aam mov sbb inc inc je jo cmp lods add push xor jno lds movsl cmp fcomip sbb mov add icebp inc sti std sub cli xchg fbld hlt cmc mov and fcomps cmovo gs test aas mov ret gs push test ret add sti sbb ret or adc in jb inc cld (bad) adc std inc test and aas aaa popa outsb repnz mov dec test ljmp push sub sub and in pop push push pop and jle adc inc push ret in into or sub aaa jns test movsb add cs (bad) jl mov inc dec sar (bad) push (bad) addr16 outsb inc test mov fisubr sar ss pop jne inc cmpsl stc je xchg or outsl jo iret test xor popa and mov pop out lahf or mov mov lods (bad) add or jle dec aad cmp xor roll out imul cltd leave int shr in jmp sahf aad lret xor mov xchg leave pushf test shll mov popf jbe dec sbb (bad) jne xor gs xor mov cld dec push mov mov inc test addr16 push in xchg pop dec adc mov inc inc ret sub mov scas gs rorl and movsb sbb data16 inc or push and jbe js rclb out jne in leave stos cld incl jmp call call mov lret in or fdivrl mov data16 sub or mov into clc jnp add movsb push cs aaa (bad) sub arpl cmp jns adc aas decl jno ret cmp (bad) loop sbbb adc adc xlat adc jecxz lcall stos aad not das lahf mov adc inc xor out int sahf stc mov adc popf repz call stos cmp ret add imul mov dec inc cmpsl adc pop xchg js pop mov in addr16 lock or ja fistpl out and fldt mov xor pop cmp inc stc adc mov xor std scas fdiv jns sbb cs sbb pop adc nop ja aas (bad) rolb out pop fwait out int3 dec call pop scas adc fidiv fsubrs inc mov js add sub or insl xor dec cld dec testl test aam xchg (bad) int3 test (bad) int and push imul daa repnz (bad) pop std bound sub (bad) rorl ja jae popf fimul decb pop imul enter popf pop and imul sbb jns mov cmpsb mov mov jge or movsl lods les in inc dec mov mov out cs add das and sbb pop add rcl add and in dec push push (bad) fstpl add jge fucomip mov leave idiv int3 es mov xchg sub clc mov punpckhwd cli inc adc rcrl rcr or dec xchg (bad) pop cli je daa xor stc std repz jnp dec push fidivl aaa pop sub in sbb dec andl cmpl nop cwtl pop lahf xor test sahf lea aad mov jae or in scas jne and das shr inc icebp fisttpll dec in mov push mov aaa mov mov sbb or popf mov outsb lea push mov inc scas into fdivrs ret sub (bad) ss push cmc outsl repnz icebp pop sbb lods test cmpsl (bad) out test mov (bad) imul jl push xchg adc aad ret js stos (bad) mov mov dec arpl ds xchg push leave mov fldcw pop or (bad) jecxz mov imul pop sub pop (bad) dec push ds push ds mov leave (bad) aam pop pusha (bad) lods lods pop je pop stos mov mov mov sub jl imul push dec arpl pop rclb fidivl fstpt enter jns loopne inc add pop ja xchg (bad) insb mov dec icebp inc jle (bad) mov sub pop dec sub aad lahf into inc in stos aas push das jg sti es rcll int3 jle gs scas unpcklps sub sub out es fbstp lods sbb xor jb pop das rcll mov sub (bad) mov mov aam iret xchg dec jno ret sub xchg or mov xchg imul aam insb out cmpsb mov stc add lods in test pop mov std mov xor xor icebp notl pop inc int3 (bad) sub ja enter pop stc cmp jno xor les mov ja mov push lods ret jecxz jmp xor out stc mov into movsl fs mov xchg mov test cmpsb rcr test and in lret push add aaa (bad) hlt divl lea sbb cmc pop cmpsl test (bad) inc arpl mov push out sbb cli xchg and jecxz scas ja mov pop ja inc jg jle cld daa mov cmp mov rclb cld fsubrl (bad) fcmovbe stos ret inc outsb fildl popf aad pusha sub dec or add aad mull test cmp stos xchg push pop out (bad) push inc and xor xlat ja and or jecxz popa cs loope div and xchg imul sbb enter mov inc in xchg xor enter pop scas stc test rep lods lds inc stos xor mov pop xor jno push xor inc adc jns dec xor inc push adc dec in cmp add xchg jmp jp pop xor jne mov add or mov nop inc xor pusha sub xor or pop pushf pusha fs mov ljmpw aam adc int3 stos inc (bad) mov in xchg clc and sahf pop insb pop daa dec icebp cmpsb orl rsqrtss (bad) pop mov into loopne push stos sahf outsb arpl js mov jo (bad) adc jg push popf cld aaa adc mov push nop sub stos outsb in imul repnz das mov popf add xchg sbb mov add sub or in adc sbb xchg pusha stc call scas pop sarb sub sub jno ja pop xchg jg cs fcompl stos add mov stc subl lods lret xchg (bad) lahf (bad) repnz imul push dec jb jle mov dec js jle dec (bad) fistl adc fwait jle insl ds jbe add sbb (bad) ljmp lret fidivl pop sub dec out adc fxch jne lds sbb xchg pop mov icebp mov jnp ret or cmp mov iret fisttpl sbb and pop lds lock inc add sub popl test mov or test or pop xor lahf and sbb (bad) int or jecxz aaa jae push inc mov sub jg jge xor and jg rcll jae (bad) mov jecxz and enter adc stc cmp inc push xchg subb xchg stos arpl js sbb pop repz ljmp cmp mov mov and sub jecxz pop je push (bad) xor shr flds das and or fst jmp movsl xchg leave in lcall and (bad) xor in jecxz ficoml xlat fnstcw or cmp cmp out mov push and push ss enter in push pop btr jne (bad) jae adc xor mov movsb repnz dec xlat out inc test jnp sbb test inc iret movsb cli movsb mov movsb push rorl in push add sub shlb mov add pop mov xor (bad) bnd mov sub rcr andb adc into pop cmpsb jae push or mov mov sbb pop xchg inc inc cltd subl jmp nop cmp mov in pusha fwait out inc mov jle sti stos and call (bad) push mov movsl sub (bad) mov sub push loop pusha aaa add xchg lds outsb movsl inc (bad) cmpsb or aas cmp iret leave out addl call popf cmp hlt add out mov push inc push adc ss std xor jmp cmpsb mov clc pop mov fidivl cmp nop in aas test test pop inc faddl leave sbb dec xor mov daa data16 jae inc out jl jl dec cmp sub sub fwait in push push cmp idivb popa nop int3 (bad) cltd cmp stos fisttpll in pop out pop clc pop loopne loopw outsl icebp jne mov sbb loop mov test iret test loope vminsd out shll popa (bad) xor cmp mov inc sbb fbld out lods addr16 inc inc push ret scas ds clc out adc sbb sbb (bad) int3 cmp mov lret pop imulb (bad) addl cmp mov sub or dec adcl in fnstsw loop cld adc inc and fadds mov sbb data16 gs pop pop xlat pop pop mov or cmp push shrb addr16 cs mov test push inc mov xchg pop fwait xlat cs mov insl aam push pop push repnz rorb outsb enter (bad) mov cmpsl shrb jb xor nop sbb push imul adc push lods pop sub inc xor and push push pop sub add adc sti and pop (bad) shr pushf sub insl sbb xchg (bad) jbe xlat (bad) cmpb in leave test dec das push or (bad) repnz inc fdivrl rcll loope in lret lods pushf push in mov or push jle mov xchg sub cmc cmp xchg pop imul add ds fcmove or mov ljmp push jge xor ds and xchg push pop jg ss jne sub add xchg fiadd mov xor cmp jp pop jbe fs mov mov scas adc lods cmp enter clc in pushf inc mov jge (bad) out sub in sbb and pop sti jg or dec icebp arpl notl rorb mov (bad) shlb sahf fcomp or and shrb stos inc test xor pop stc test mov imul ja pop add cli jge adc int3 lds and dec mov repnz jle popf nop je mov leave fiaddl add add mov lcall in inc mov movsb cmp jg pop mov add je idivb inc iret rorb jp mov data16 rolb in clc clc repnz cltd push push mov stc rorb cmpsb test fbstp push repz insl cmp fldenv mov and sbb cmpsb xor dec cmp jg cmpsb or dec ja push or cli fcomps push sbb daa int dec insl inc push jb imul lcall jns stos mov int (bad) mov mov pop ffreep mov in jne (bad) jp and mov js call fild imul mov andb mov repz aas xchg mov inc jae xchg movsl sahf inc outsb ror dec mov sub mov int3 mov mov push pop (bad) repz lods sub je lret jg fildll imul mov push jo or aas in sti cltd cmp mov push dec jno inc pusha mov fistpl xchg xor aaa dec outsl cmpsl les pop push cmovno std xchg dec xor into sbb je sahf fs jmp xchg xor push xchg sbb test test (bad) push repz sub or inc pushf pop mov dec sub sti sub dec loop sub pop test ljmp mov ret das jo sub pop pusha mov adc push repnz lret sbb in xchg lcall movsb xchg push in mov lods jnp stos xchg xchg mov sbb mov in mov cltd sub sbb sub and outsl dec data16 jnp sbb mov or leave inc (bad) (bad) je push (bad) insb mov or jge cmpsb inc cld inc jne mov dec fdivrl mov xchg cmp lret popaw adc jne negb in and ss sub cli cli xchg push lcall insl dec das shll test fistpl push jno dec bound sbb cltd pop lea fcmovb pop mov adc adc dec lds lahf xchg add int3 adc mov (bad) mov mov jb xor dec xlat cwtl repnz popa cwtl xor xor inc lods adc (bad) adc outsb (bad) fsub cmp sahf or cmp dec adc xchg daa inc (bad) mov mov cmp xorl push cmpsb mov dec push push aas add or daa adc clc stos jl xchg mov test xor insl data16 pop fs fdivs dec cmp or add lds xchg mov ret aas push add hlt sbbl pop mov loope aad add lods jnp push sub push int3 mov loopne xchg adc push sahf clc inc sbb xchg stos pop dec jmp stos mov addr16 into (bad) daa loop mov push cltd lahf inc push push cld mov xor fucom (bad) addr16 cli (bad) ficoml push lea repz xchg (bad) icebp or sub pusha loopne or sub rolb sbb das icebp inc mov sbb sbb xor xchg xor repnz ret pop jmp sub add mov lds dec (bad) in jo mov loopne jmp cmp pushf std sub inc lahf loop shr dec or lss xchg fildll jb es mov mov shr inc mov mov inc inc sub xchg mov jae push mov fild pop xchg add jge outsb mov test js decb out add pop fsubl lods jmp dec cmp sub test pop cmp movsb mov adc sahf repnz addr16 cmp imul mov (bad) js push ret test mov sub dec test inc jl loope mov mov cmp xchg clc and movsl xchg lcall popf jl xchg dec outsb mov jbe aas test (bad) je mov cmp push mov inc daa popf mov (bad) into pop push add mulb adc fnop je pop adc inc aam jge (bad) sbb fcmovbe aam out stos jbe mov add ds test jb loope and fmuls pop cltd or test mov (bad) jmp stos (bad) insl ja and cltd gs dec jmp xchg idivb hlt adc inc es in lock (bad) rclb and call bound push xlat out insb mov loop inc dec aad or in and push push and jg sbb sbb jge sbb jp xor sbb (bad) call das fbstp jecxz daa lret test sbb ds mov insb or std lock mov stos cli fwait push sub sbb mov pop mov and and adc js ljmp movb loope jle dec ja mov enter dec rolb std pop mov call aaa fist jbe or in leave push push in cmp add and imull test jns and outsl insb scas mov jg test in cld (bad) xor std mov xchg adc sub fbld inc and jmp gs sub sbb into sti scas (bad) xor mov sub fld and inc repz (bad) stos insl mov fabs dec mov mov mov and test mov stos leave pop pop mov pop adc and shlb (bad) xchg into loope xor mov test pop mov (bad) rol xorl mov xchg mov jne out pop add jbe fwait dec stos gs lcall xor xchg mov or jnp pop ljmp mov sbb xchg add ret (bad) movsb insb adc xchg cmp je xchg scas subl (bad) bound add faddl push in add call mov push add imul sti xor adc addr16 addr16 ret mov xor or cmp jns (bad) mov sub lret mov mov mov mov imul xor inc (bad) out mov stc rorl fadds jg add icebp sbb mov push adc test sbb push mov sbb clc mov mov or inc daa dec sub (bad) data16 sbb sub lock inc iret dec mov shll add int3 jmp dec iret mov push cmp movsb testb xchg pop ret mov ss sbb ja dec cmp sbb hlt inc mov dec test rorl in lcall sbb jne test cwtl adc jo stos adc push xchg xlat cltd iret pop inc mov push into mov inc mov add mov (bad) js dec pushf out js outsl mov pop ds cs aaa (bad) mov add mov outsl dec jge movsl or push mov int3 cltd adc sbb push movsb (bad) in cmp outsb ja loopne jae push and in xor sbb xor sub std insb add mov add (bad) inc pop cmp lods loope push xor mov (bad) aam inc cmpl dec std or lods and scas inc pop push add dec xor adcl and (bad) xlat jbe fadds cs or rcrl out mov adc mov rorb in or fdivl rorl sahf mov in mov sub not lds andb es dec cmp call lahf mov icebp fnop mov cmc std inc push fsubs dec push or mov out mov sub mov cmp cmpsl sbb popa (bad) mov cvtps2pi adc nop xor jne mov (bad) out int cld outsb pop pop outsl je add mov mov dec arpl inc outsl jmp xor popf mov pop dec clc rcrb cs xchg sbb add dec jp (bad) jne mov sbb mov or mov inc xchg or gs cld aad push pop sub addr16 jp or pop addr16 cmp sbbl cmp xchg mov and test aaa jle add daa push mov mov sbb insb out push mov test xor jns dec cmpsb mov leave mov out pop les dec (bad) cmc mov fs jg ss add cld bswap ja pop (bad) xor pop pop into in inc jecxz sarb mov shlb in push shll stc out in cmp pusha (bad) cs fs lds es repnz scas adc xorl jb add stos xchg rclb ja je pop test icebp mov adc push sar xchg es and call cmp dec lcall data16 mov inc push inc push fimull dec adc (bad) pop scas (bad) (bad) xlat xor or sbb cmp xchg gs lods mov arpl mov sbb (bad) dec xchg and (bad) jecxz fist sbbl push jbe scas fcoms jno jo jge xor testb fistp xchg std pop xchg push pop sub xor mov mov adc hlt or out loope xchg lock xchg daa mov stos jp je hlt scas imul lret xchg jnp cmp pop add jg sub xchg in in push lcall scas (bad) int3 mov pop pop pop fidiv fisttp mov popf imull xorl mov (bad) pop xchg in cli nop mov (bad) in int3 sbb ljmp sahf jns xchg cmp inc adc mov rcrl adcb pop xchg dec aam push push das jmp cmp aaa add xor xor xchg pop popf enter jne imul inc ret fldcw fbstp call adc jg movsb mov loop loop (bad) sbb jge push leave jle cmp nop jecxz dec cmp xor jbe (bad) in mov (bad) push movd ljmp flds adc mov (bad) (bad) in out loopne mov bound (bad) or lods ret xor fs mov push sbb cmp iret (bad) leave sahf pop dec add lea xor aad ret fisttpl hlt fsubs sub and inc mov xlat dec inc sub sbb cli loop mov outsb data16 (bad) negl mov or (bad) push gs test mov xor dec aaa adc xchg xor mov in out fnstcw lods and lret sub (bad) fstl xchg inc push mov inc xchg ret mov addr16 dec repz dec push adc jecxz or cmp inc aas cmp fnstcw dec lahf decb xor (bad) jb or mov (bad) mov mov jmp and dec rcr lock mov pcmpgtb adc test pop insl add sub xor (bad) mov fidivr rorb mov jo dec adc aaa sahf fisttpl repnz and inc jge xchg data16 loope pushl test das sub shrb and pop xor repz cmp (bad) out (bad) push push push adc push and push jl cmpb pushf mov (bad) mov inc xchg pop pop add (bad) sbb sbb shlb pusha aaa imul stos lret aaa test insl pusha call cwtl orl sub push pop inc leave jns pop daa repz or mov addb psrlw pusha sub dec and shrb es lods push sub into mov bound fs out xor mov lahf (bad) mov mov sbb cmp mov fdivs sbb andps (bad) add or and mov mov jle pop mov and adc out lods add mov mov mov xor popa cmp adc (bad) jae push xchg jmp std loope inc lret movsb rcll jns cmp mov inc aad out lahf imul mov push (bad) and and jns mov popa push adc mov adc cmp andb stos cmp pop mov sahf notl mov or pop xchg xchg jl push cmc mov in sbb jbe or mov xor sti cmp mov xchg sarl imul cmpsl in movsb sub std repnz into adc xor scas loope mov lea xor push (bad) push jecxz mov fist pushf cld test jb or jbe add imul jne in or dec incl jp sub scas insl mov rcl (bad) mov xchg stos movsl fcomps cmpsl mov imul mov cmp dec dec mov sti jmp out dec xchg sub jnp pop insb sub and add aad lea cmp jns inc jl scas (bad) (bad) call dec dec outsb js loop push dec loop sbb insb xchg das addr16 pop mov pop ja cmp stos je mov cmp ja xchg pop or shrb imul xchg jbe movsl jns adc pop iret and js dec adc mov popa jecxz adc dec jb insl cltd (bad) xor sub sub xchg adc test dec inc scas xchg test xchg sbb ror loop jg shr outsb or in sarb rcrl mov jp xchg adc xlat cs test pop loope shrl adc pop test xor jo out stos mov (bad) sahf (bad) sbb (bad) ret aam hlt cmp es and imul popa adc mov (bad) mov xor push add mov sbb sbb cmc mov (bad) add lods cmpsl cmp sub jb shl jmp pushf cmp insl repz or aad insb mov into xor sub push imul jo fdivrl mov xor in mov stos call and pop and xchg or lcall popa push scas rcrb mov fs push imul mov aam dec pop (bad) std in fwait jo adc ja mull or scas lret int3 (bad) leave jg mulb inc jecxz xchg adc mov lea repz or mov fistpl adc mov fwait pop sbb test outsb mov add lods sar test mov pop push stos jne cs xchg push pop ja clc pop das xchg pop push mov xlat or std pop das fwait xchg adc dec jp movsb sub out push mov pop mov cli scas inc scas pushf dec or mov jb xchg imul pop cmp sti and jnp scas push jle xchg pop ficoml fisub addl inc and (bad) xor or and mov dec movsl pop outsl bound xchg outsb (bad) mov popl repnz jbe js mov adc dec xchg mov sub dec pop mov in add lahf xor lret and dec push mov rcll lods mov push or or mov stos es inc into push inc shll mov and mov movsl fsubrl pop adc sarl mov fsubp outsb add sahf push mov push jmp adc gs in xor ss clc adc mov push mov imul mov and call mov adc popf mov adc dec add loope call mov lds ret out xchg dec or iret mov or jns adc movsl int in jmp add movsl add adc xor fcoml inc imul lret les cwtl push sarb add inc js fimul add mov psrlq cmp sbb adc lret push adc not dec jg ja movsb pop cmp (bad) xor pop mov sbb test fwait mov adc sbb sub iret mov sub inc dec adc ret push test mov mov int enter lock shrl test sti lret pop add xchg inc and mov xchg cwtl (bad) and pushl call std pop mov push stos add iret popa or push xor cmp push push pop sub push je jnp jge repnz xlat jb sbb imul imul orl pop in std lds scas or movsl jle or aaa pop shr stos mov mov jmp (bad) jae std mov mov mov shl testb divb in in sbb xchg dec in jo inc (bad) jne dec test adc mov fild imul add inc mov popa test daa into fs push adcb in jge cli dec push insb fdivs test jb add jne popf push cltd fist enter stos lret pop movsb fsubrp dec lds cmp pushf mov ret cli inc sub sbb jmp xchg cmpsl sbb repnz inc or mov insl or or mov test repnz pop adc xor xchg fadds lods test and (bad) push idivl sbb pop clc push cmpb int3 inc outsl inc mov inc or iret hlt ljmp dec sarb ja,pn mov les adc shr lret (bad) cld inc int inc (bad) decl mov cmc out mov scas jl sub mov lock xor stc rolb xchg dec mov ljmp mov lea (bad) or mov adc shrl sahf (bad) aas adc (bad) mov arpl cmp stc insb sub jne cmp sbb push test enter call fiadd in (bad) idivb insl clc push sub cmovb cs lret push cmpsl call fldcw pop dec mov aam pop addl or pop in xchg movsl mov outsl cmpsl mov fnop cmpsb jbe mov je mov sbb nop cs push or aam cmp mov loop dec xchg cmc (bad) jmp pop mov xchg pop mov repz int mov xor jecxz cwtl imul test pop lcall mov das push lret inc in mov inc pop (bad) sbb fsubrl bound repnz adcl add push push jmp mov xchg (bad) and mov ja ss mov adc ficomp sbb fistpll jecxz notb inc fidivrl cld rol lds cs push push ljmp movsl in test popw add out outsl add js mov (bad) ljmp jle imul arpl push repz pop fisttpll mov je mov or hlt fsubs loopne ret pushf mov (bad) pop dec test mov addr16 insb xchg dec jmp xchg (bad) je addl mov fnstsw nop fidiv dec and sub mov icebp pop jno sbb mov push dec add enter dec bound pushf gs mov lods stos sub (bad) push push sbb (bad) (bad) mov sub sahf pop xor leave icebp push movsl push cltd (bad) aaa out or repnz (bad) loope jbe (bad) std and repz sahf add shlb push mull aad or gs stos jg outsb dec or inc adc cmp lret popa jge sub jne and jno loopne test mov ljmp inc sbb test dec jmp adc mov cmpsb jbe jge pop (bad) fwait cltd push in sbb getsec adc mul in add push add repz and je inc or mov jnp xchg sub out and mov dec call mov ss nop (bad) out push in sub ficomp and cmp jg push fsubrp (bad) push les jg xchg in stos cld jmp jge cmpsl mov add shll (bad) jg xor ja mov or out pop xorl mov jb dec xor jbe aas mov sub pop sbb movsl jne xor arpl out cmp dec inc adc mov xor jno inc jb repz mov movsb cmp mov mov xlat insb ror mov outsl mov rorb jmp jbe mov xchg insl icebp cld aam clc jecxz sarl lock ds mov out dec loop mov or std xor arpl xor mov aas jo xchg jns,pt int inc mov xchg icebp in (bad) jmp sub mov mov out or cltd mov cmp pop cltd sbb mov mov movsl push xchg inc outsb dec sbb mov ds int out repz xlat mov pop ljmp popf adc popf (bad) int3 jne sub cmpsl mov xlat test adc sysexit jg lret je bound pop cmpsb mov sub lods aad push aas jno cltd lahf cld in sahf int3 cmc pop out jecxz pop js xchg jns movl mulb movsl out dec sti mov dec mov repz mov sub test in daa rcrb mov int3 lds mov fwait lahf mov aas pop cmp (bad) jae inc or rorb int bound out mov push stos lods pop mov mov (bad) (bad) sub sbb aas xor and ret pop xchg popa movsl dec out fist insl and jge cltd xchg jne test not push sbb sub sbb popl mov enter cmc push (bad) aas addr16 int3 mov fimull push and cwtl or iret mov (bad) cmc inc mov pop push les shll cmovae cmp das inc xor fiadd nop pop pop inc pop push inc and mov dec cmp lcall dec sbb in mov pusha push or sbb sub pop sub lods movsl lea mov xchg aaa daa cltd (bad) mov fdivrs dec test dec push xchg cwtl push repz add sarb push cmpsl in jne add call push sbb jns sarl cmpsl test inc add addr16 mov push xchg sub aaa push lahf jo test jnp outsb fild xchg sbb repz pop mov sub xlat aaa add (bad) dec outsl dec cltd popf dec roll jbe add dec sarl movsb xchg insl cmc aas mov call pop pop xlat rolb mov xchg jae and jno,pn test pushf das ss cltd movsb push subl loope adc insb add xor xchg and inc inc xchg pop fsubr push daa jmp xchg lahf (bad) push or mov mov gs les je rol dec add pop sub stc xlat jge mov rol mov jg das imul xchg out (bad) cmp or aad jne leave fistpll dec inc and (bad) mov ja cmpsb cmp xchg dec lods out cwtl or adc mov adc out loop popa insl (bad) popa adc fsubs leave inc aad mov xchg jbe enter icebp adc or mov icebp lahf mov inc aad mov and add popa lock popa (bad) jle ret dec sar nop leave dec add xlat mov pop pop out enter sbb mov popf cld mov dec imul cmpsl pusha data16 sub cli sub es jle and dec add sub addr16 sbb adc pop movsb (bad) pushf mov lret sahf and lods push adc cmp mov addl loope sti push test lea mov mov xchg inc mov imul popa xor push (bad) cld jno mov test adc dec jle mov movsb fisttp sub mov push je adc sub sbb or push ret mov insb js xchg push cltd out fnstenv jae mov enter jecxz aas ficoml pusha mov and mov cld dec cmp add ret aam add jne hlt jb cld aas ljmp stos jbe sbb imul imul xor loop dec inc (bad) ds pop leave sub mov mov les ret enter aam mov lods dec mov push jns loop aas jo cltd add mov push sub mov jmp out inc add inc jo xor sbb fidiv fidivl jl cmpb mov jo jae mov add das movb push std dec push ljmp mov (bad) mov or imul mov adc add nop pushf add dec insb add jb pusha or stos push pop pop dec call out in ror addr16 hlt jbe sbb push or cmp jae repz stos mov leave stos pusha subl xor jg stos push data16 dec (bad) ss dec out int and cmpsl dec lret (bad) push mov (bad) mov insl jnp je idiv sbb mov jo and add cmpsl rolb xchg les jb aaa lcall (bad) sub test jne stc xchg pop scas and outsb push repnz mov (bad) les dec aam out test sbb out lret mov adc les gs aad popf mov shrb aad cmp push inc add add out mov sti adcl imul xchg or popa xor inc push fmull lcall jno jecxz imul aas (bad) mov push cmp roll (bad) sub out mov add ret outsl (bad) mov popf js mov aaa add cmpsb imul iret fidivrl xchg dec jno and fcompl mov cwtl adc push push add stos cli cmp mov sbb out cmp pop andl mov or mov stos or fidivl js cmp cld cmp js test sar mov mov sbb std push sahf and scas ret adc sbb mov ljmp lock adc lds inc dec leave mov jecxz xor (bad) cwtl or dec mov int3 ljmp adc jecxz dec push mov addr16 inc xchg loopne xor adc push jmp scas cmpsl je mov jns jge fcompl adc and cmc or pop arpl add mov mov in lea push pop mov lock popf stos ss sbb adc ja nop sbb push hlt das jp cs xor (bad) cmp sbb mov sahf and into cmp mov mov lock sbb inc andb (bad) aam into xchg dec jb push (bad) pop inc cld xor ljmp jmp loopne pop aas jbe pop inc lret sbb pop mov add insl push ja lcall push (bad) shlb jae ret scas enter test xor dec jmp mov xchg add mov add (bad) push mov adc cmpsb imul dec mov adc or or mov and hlt jmp dec jns pop sahf mov adc and adc jno jns pop icebp mov mov bnd push sub inc cmp (bad) mov xor inc or pop mov pop or xchg out test (bad) leave orl roll pop outsb roll inc (bad) movsl stos jno aam mov cmpsl (bad) das push push sbb xchg stc push mov movsl loope icebp pop pushl adc pinsrw adc (bad) idiv push lock jmp mov nop add ds push pop mov mov pop inc mov push iret xchg fidivl add xlat adcl fdivl aam mov data16 xor icebp mov inc dec dec outsb push sbb int out mov mov test xchg daa pop mov loopne sbb push or inc sahf and lahf (bad) ja mov or rol gs mov aaa lahf stos pop xchg pop ljmp mov cmp mov mov mov scas pop ret sub xchg add in add scas out ret or (bad) js mov dec mov pop popl mov pop dec loop xchg xchg rcl in imul dec xchg xchg mov subb divb xchg (bad) test cld fdivp js sub out sahf jae mov inc inc mov jbe fnstenv xor ret sbb and repnz pop jle inc fildll mov in adc mov push ds (bad) mov xor daa fisttpl xor push mov inc mov aas dec mov xchg (bad) adc scas icebp not popa push or or pop ss dec ret test pusha cmp fs inc cmp gs cltd pushf movsb aad lds les das in call adc dec lret jno repz stos (bad) (bad) xlat mov fwait cwtl ds and dec cmp fwait pop (bad) in sbb lods jmp add or imul sub dec xor popa clc ss push jno lcall mov inc mov ret push lods je adc test (bad) lret into icebp jbe jmp jns nop cld xchg pop jl mov pop enter divb test fistl ja leave pop loop mov sti mov insl div mov fsubl jno pushf repnz lcall clc popa das or pop mov cmc sti andb mov inc in mov cwtl fld1 lret cs add mov data16 push loope dec dec fnstenv pop int xor test std jp mov ret jmp rorb push cmp (bad) adc sub sub xlat (bad) addr16 mov palignr bound stos jle mov (bad) sbb lret repz mov dec (bad) (bad) inc mov data16 jg pop sti or lcall or mov decl in mov adc daa jo xchg std dec idivb or cmpb push mov cltd call pop pop lret xor pop (bad) push cmpsl shrl xchg fdivs xchg mov add jns adc or mov mov mov dec adcl mov repnz sub push xor sarb loope mov xchg or mov cmpl push (bad) adc (bad) mov cmc mov test popa pop jbe popa sub cmp inc mov lock adc inc iret xchg les mov push mov rclb add popfw (bad) pop jnp mov pop imul inc adc dec sbb aad insl inc iret and mov or pusha dec inc call lods jle (bad) aaa jne push fwait ljmp dec pushf cmpl aaa pcmpeqb push inc add outsl jnp sbb lea fwait dec sbb sub lcall xchg sahf hlt push mov sti pushf ljmp dec inc das xor clc push lret leave gs pop lahf and jae rcll scas in pushf insl mov mov nop clc and sbb fstps dec push out add xor mov and fistpll lea std sbb cmpsl adc cmpsb adc or repnz and scas jmp loope inc cwtl push dec jo into (bad) push cmp icebp pop les outsb imul pusha insb mov push jno add popa cmpsb enter rcr sbb push call pop sbb push inc popa cmpsl add ss les add jb nop pop xchg mov push and (bad) (bad) mov jge xchg in add push shll pop cld call lcall cmp jb jns pop inc lret mov jbe pop xchg in mov outsl push js push int3 (bad) push mov movsb push js push (bad) pop hlt loop loopne addr16 push sbb push jae dec push cmpsb mov fsubrl fistpl test and in cmc pop nop repnz mov jno sub inc lods pop cwtl push pop cmp enter jecxz adc iret jae push inc and in lret repnz lret xor out mov mov or arpl lahf test mov loop mov inc pop jne jecxz sbb ficoml cli stc fdivr jne insb push out cmp sbb sti add xchg loope fildll aad mov push (bad) cmp cli lahf mov pop jbe mov push or gs dec sbb stos fst cmp insb lcall pop push ljmp scas jmp sub arpl in inc (bad) jne (bad) or cmp out mov gs add pop push jp xchg dec mov add idivl scas out decb movsb lock inc hlt mov lret popa addr16 or mov pop gs dec sbb jp pop inc dec push shl jb pop in cmpsb and inc add lods mov xchg arpl jne loopne xor mov cmpl mov and dec (bad) pop pusha sub pop mov rcrl sbb or xor push xchg adc push ret fwait pop and repnz pushf xchg aam and mov mov mov mov bswap outsl divb arpl sub sub jecxz mov cltd add popf sbb lods pop lret mov outsl pop dec test jecxz imulb inc mov pop mov push nop push mov xchg add aas add cli mov enter data16 push sub sbb mov addr16 ja cli lock xorb mov and push rcrl sub mov cmp xor test test out movsb jbe sub rorb lcall out pop rol xchg repnz pop push mov pop pop inc cmc lods jmp add ret mov mov mov out in test sub shl loope cmp add mov mov sbb movsb loope push inc push push fdivp xchg dec loope aam xchg divb repz push fmulp enter test aam sbb pop add xor inc jp mov mov push mov aaa (bad) fcoms mov cmpsl pop ret cltd stos hlt push fcmovne bound jo insl adc jbe ljmp (bad) fisttp dec out sbb and pusha in push push fisubrl adc leave add cmp in in mov jae jg loope push lods mov test aad xchg cmp cmpsb int3 mov les fstp pop add pop lret inc mov in in add les (bad) and cli fidivrl call add mov out aam cmp lds and dec mov aaa cmp inc push in push notl fiaddl xchg add add cmp xchg sbb fldt fildll inc sbb les sbb aam jl loopne stc sub fs je mov jb pop mov xor (bad) mov dec iret jp inc or inc stos push adc test fwait jb cltd (bad) cmp and imul mov or pop sbb cmpsb std jge xorb mov icebp sbbl xlat sahf pop jbe es sub push icebp mov (bad) sti jcxz sbb xchg add sub jge,pt mov mov mov dec adc adc aas xor je push lcall jmp jl dec pop ss subl xor cmp mov stc jge pushf cmp and xchg popf in lahf pop adcl mov jb and test dec in fdivs cli lods repz mov loopne adc test fistp push mov and xchg mov cmp cli or imul mov inc push in add call in lret cmp movsb push sub pop pop inc xchg push fisttpll (bad) imull test push dec arpl test gs add cltd sahf test lock les mov or or ljmp pop pop mov jb (bad) mov inc mov mov or adc icebp into jle rcll lea test lods ficom pop mov mov ss mov in out push fnstenv cmpsl mov sbb fisubr fmulp push sub jp fistpll add ds mov pop scas and jbe dec cmc or scas pop pusha ds cmpsl int3 clc and sti sti push or hlt mov mov data16 imul (bad) and ret (bad) div (bad) add ljmp fimul inc stos in push mov xor mov xchg mov xchg mov (bad) repz sbb jp xchg xchg mov xchg enter jns and imul xchg or jl adc and xchg lock popl (bad) lods mov fld xor out stc inc cs dec cmp sbb pushf ret mov fwait push push and or cmp jg jle lret in or sbb mov jp adc sub mov sub std adc cmp sub (bad) out inc insb fwait mov hlt and cmp mov rorl push (bad) out xor clc fnstenv lds jb rorl fisttp mov cmp xor mov inc push (bad) mov xor sub dec in jbe test inc rclb rol (bad) aas aaa dec cmpl jle adc jmp imul dec jb mov loope jae jp push jb lret sahf out mov lods lret repz mov xor and rcrb repnz xchg cld loopne jnp mov js pop dec mov pop ljmp push mov loop lock xor pop dec xchg out aaa cmp cvtdq2ps sbb xchg pop mov cmp xchg push imul hlt je fiadd lock hlt out dec sti cmp push add xor fstp mov mov or test loope mov (bad) mov add sbb out jnp inc loope sbb inc call int3 (bad) adc cld mov or jns fildl es cmp inc shll push or pop xor sub mov fcmovbe cmc lea pop neg ljmp shlb (bad) ror mov cwtl sub xchg (bad) fmuls cs les sbb fdivl mov insb insl dec cmp pop inc pop and bound mov xchg adc cs in in sbb iret or clc and inc sbb and cmp lcall std or dec and scas mov sub aas cmp cs cmp xor adc lret adc adc push iret mov xchg dec rclb cltd stc xchg mov (bad) int xchg jo sbbl inc adc pop xchg leave mov mov add rcr dec or cs pusha test add inc adc xchg xchg cmp xor pop push mov dec xchg sti andl jge ret dec sarb std xchg movsb jle (bad) pop (bad) imul adc fiaddl inc stc incl fcoml aaa mov stos addl mov enter jae jl clc notb or addl stc (bad) mov cs cmp push jns mov mov sub sarl sub dec push movsl inc cmp cltd mov xor test mull movsl pop test sub loope dec aam adc cli fisubl fsubl outsb adc pop pop adc notl sub (bad) ljmp dec mov sahf cs cmpsl jle mov or and push scas pop (bad) repnz add jbe in (bad) xchg xchg fwait xchg outsb push rorl xor in call les dec mov lahf lods jbe in mov orl and fwait add stc aad (bad) add pop cmp ljmp icebp xchg orl xorb ret sbb lods sub jg lds scas aam js inc adc mov xchg dec hlt dec pop cmpsl clc and mov cmpb jae push push push test out test icebp sahf (bad) or out pop add cmp hlt xor (bad) push xor mov sub push es jb jge clc and sub fsubrl (bad) xlat push cmp inc lods inc sbb or inc dec movsb fcmovnb js xchg sti cs insb popf nop inc dec xchg (bad) adc test int3 loope lret pop cmp sub (bad) stos sbb adcb pop ljmp pushf cmovb pop adc add insl lock (bad) movsl mov and fldcw clc push jmp lcall cmp sbb (bad) mov adcb sar out scas jnp and mov jg sbb aaa pop inc cmp mov js adc push jmp cltd mov andb popf icebp inc dec in jne xor lcall pop inc sbb cmpsb int3 test adc dec jl adc sub lcall cltd inc push mov (bad) imul xchg cmpsl ljmp fiadd out add cli scas mov xchg cmpsl icebp es sysenter jae mov and mov movsb pop int3 iret xor mov leave cmp dec push fstpl arpl mov jmp sbb dec or add into or lahf xchg faddl imul xor xchg das fimull aad dec and mov mov xor fcomip mov lods scas (bad) push gs or or insl movsl xchg dec xchg rcr out sbbl cmc dec out clc insb ljmp insb pop bound aaa cmc pop jg lock loope mov push cmp (bad) fildll sub sbb and dec aam sub add xorl lods sarl sub push inc dec cmc (bad) leave mov xchg int cli inc adc pop jo nop mov cmp xchg adc stos sbb mov aaa fnop popa loop enter ljmp leave cs jne pop pop xchg frstor aad cltd cld xor ret jbe and inc xor jge nop cmp fsubrp sbb inc aad push loop xchg movsb dec loope sbb mov mov cmp imulb pop inc jmp aad sub sub fsubl xor mov dec pop jae loop xchg hlt imul adc mov paddsw xor enter jnp xor rorl mov fidivr mov mov mov call mov in sub jno ja or inc js daa ja mov ds lcall in ljmp sub stc cli orl adcl outsb ss add imul stos (bad) out mov add test insl or mov std xchg call (bad) inc adc mov test cltd fild push sti xor loopne addb roll mov jl scas sub mov std pop int cmp xchg scas push jnp dec dec sub aas xorl jecxz cmpsb or pushf out or inc gs mov or rclb xor sarl mov cli or inc into cmp pop inc adc out fcompl addr16 mov bts xchg stc and and push inc mov pop mov push pusha nop std push cmp (bad) pop jge repz dec sti or mov faddp or pop (bad) loopne and add cmc outsb mov adc (bad) mov notl call pop cltd fcomip les sub add lock mov pop mov sub fistpll scas push (bad) mov or out lods loop mov (bad) xor inc outsb xchg cs jne pop repz cmp sub les out insb mov pop xchg arpl popa loope sub mov push pop mov lock mov pop in cld aam xchg fcoml enter and push bound negb cmc insl lahf addr16 and test out ljmp decb test push add mov jb loop cmp cmc imul dec jmp pop xchg add (bad) jb lds pushf subl inc loop flds dec mov inc xor divb sbb (bad) mov cmp icebp fidivr xchg cmp and inc lahf clc push xchg addr16 aaa adc adc les push mov int3 jns in pop bnd outsl cmp mov ds js popa mov fwait mov inc ja mov xor mov cmp lcall gs mov lret sbb mov imul jb std dec inc push loopne adc ds dec xor shr adc jge mov cwtl mov dec jae inc lret shrb inc rclb (bad) push das inc mov dec or loope aaa sub pushf ret mov fs xlat mov or jle mov out lret fsubrl push adc sub cmpb and xchg js icebp sub sar lock ficoml sahf call push adc sahf inc scas icebp leave mov outsb mov fwait mov insl outsb aad nop frstor pushf push cmpsb sti cmpl mov cmp jmp mov inc mov mov fisubr inc and dec or sub add and dec and ja mov lods lock shrb xorb xchg push in mov adc or or push fmull mov pushf test fimul fldcw xor jge (bad) mov and mov ffreep fs cmp les in leave clc fsubrs in in fcompl mov cmc push jmp out push push fiaddl jno jne inc jl es xchg lds adc cmp or mov push cmp and and pop push in adc (bad) iret lods pusha add cld lahf pop xor or inc mov call sub jle pop (bad) cli push lcall inc mov scas adc jo mov pop inc pop lahf pop and sbb inc sti scas div movsb mov push jae cltd mov adc imul movsl das scas scas ret in xor jbe cld mov xlat cmp cs sub cmp fild pop lds xchg dec das aam or aas jbe xchg shr mov insb cmp xchg mov sbb ja and jmp push bound inc fs lret lahf ret cmp dec add (bad) xchg outsl mov cmp push jg lea in cmp xchg mov dec iret jb mov fildll pop xchg addr16 fs dec mov adc adc mov clc mov out sub fild and pushf stc popl fildl sbb cs ljmp in sahf adc cmp shl cltd mov aaa jg fwait pop sbb dec daa shl xchg ret jmp cmc and or lcall jb lcall xchg push outsl sbb jne ljmp xchg gs in cmp xchg jae mov iret xchg dec push iret mov push std cmc in jecxz cmp pusha mov mov cmpb enter xor in nop loope and pop fildl inc movsb test xchg nop and addr16 mov jge mulb into cmpsb std shrl (bad) mov mov int3 push (bad) loopne mov mov shr lret ret test call in icebp ret loope jge xlat jno jg int test ljmp (bad) pop pop jle push out bound cmp xor mov lret push sbb or jbe xchg out add fiaddl add mov sbb jecxz in movq into sbb dec mov jae jmp out fbld pop outsl mov stc jo cmp mov mov lahf pop shlb add fadds mov dec add mov pop jmp inc std dec dec dec arpl scas pop hlt xchg fdivrp insb cwtl xchg adc mov cli xor sbb inc mov test and outsl (bad) mov test out (bad) out and fmulp das dec cs stc ret jg fs jle ljmp insl je adc cmp rorl add sbb or shr mov dec jg (bad) adc mov bound arpl xchg adc (bad) (bad) xchg push or xchg or cs sub jb movsb les es leave sub jne cltd mov popa jnp,pn inc sbb (bad) cs and inc sub jl push arpl out cmpsl xor pushf arpl incb mov test in pop push cmpsl shrl jmp shl xchg inc (bad) fucomip jae js das fcmovnu xchg jmp mov into jecxz test dec xchg ret jg iret sbb add sbb push fidivrl push pop cmp lock in and rorl mov xor aam pop xchg and or xor lret inc and lea sti or lahf sbb lods out out mov pop jae cs dec insb and xchg jle lcall sbb (bad) loopne bound mov mov mov in gs pop mov mov aad mov out jae pop pop sub cmc pop mov xchg sub push cltd insl mov pusha inc shlb dec xchg push vcvtps2pd mov insb cmc fldenv std test lret lds es inc std mov xchg in mov push divl inc in inc loope or mov test inc mov or push fnstcw fwait aam dec into stc les and mov cmp cmp pop arpl sahf lock mov lret cli sbb in mov pop sub shl jp gs xchg xchg lds add mov sahf lods xchg pop (bad) pop push sub stc push pop lock mov or imul cltd sbb push scas mov cmpsl jmp jge pop scas rolb push adc data16 pop push sub shll repnz stos inc in insb in addr16 lea hlt push std push xchg fs mov jmp and xchg imul fdivrp bound test add add xor icebp ljmp sbb mov hlt sahf iret gs aaa imul (bad) outsb xchg stos sbb in popa (bad) int lret sbb popf and sbb dec add xor test lahf (bad) aam jmp sahf jecxz inc sti call in fabs add mov adc xorl mov inc mov dec imul jle xor test and add fwait ja sub and je icebp repnz adc pop or xor clc (bad) lock lcall fldt and or xchg loopne inc popa inc decl in jg jns or or adc sahf outsb mov pop pop push inc sbb adc out xor or fidiv add dec xchg push jbe scas adc mov mov je (bad) add clc mov add xchg lds int stc out enter neg xchg xor mov loopne add mov loop (bad) iret sbb sub sub add js lock pop cmpsl or lods cmp inc es fwait ja gs js ja push jnp or es xchg fcmovb leave fldenv out (bad) jne fwait pop int mov adc and sub enter add mov mov int3 ds in lcall pop daa das or mov mov pop cltd sbb aaa inc dec leave add xchg push notl nop adc pusha das pusha jge xlat inc in sub ds pop and or cmp addr16 adc or mov iret jo into mov aad and loope mov lret outsl dec sahf adc (bad) push es (bad) in pusha fs mov xor movsl out imul sub pop mov and mov push into pop cmp inc popa stc sbb outsb insl sub xor outsl leave subb fxch cmp xlat cmp or fcomps fisub inc aam adc das mov mulb (bad) popf lds or repnz xchg inc dec push pushl leave movsb jge cld dec sub add add push hlt out repz (bad) pusha (bad) jns or xor scas inc adc es andb ja push (bad) and in inc xor out test jno add int3 sbb dec inc ret dec sarb push mov adc insl loopne adc mov loope insl fdivl outsb sahf lods or fimull inc (bad) aas stc imulb sub lea jg sbb in cwtl pusha in cmpsb dec jge sbb scas ficomp (bad) and rcr or dec rcrl lods or cld inc mov mov jbe mov pop jecxz cmp aas inc or mov cltd fiaddl in jmp jg bound xor fisttpll sbb ret and push and cmc inc (bad) push jmp test lahf or xchg (bad) xor insb sahf xchg inc (bad) fcmovnb stos dec enter sbb or je sets xor dec push push xlat xchg test sub inc jb gs cwtl pop sbb xchg sub sub je xchg push dec mov ret xchg sub (bad) mov rclb pop or js js mov sub insl xchg pushf popf and adcl rclb mov loopne cmc es sbb bound addr16 sbb mov jbe lods xor xor out fwait push leave mov jmp inc outsl mov loop jns movsl test push jp adc or xchg lea mov cmp mov xchg std sarl cmpsl and jnp lahf xchg cli popf lds ret (bad) (bad) jne and in scas adc adc repnz push push ljmp (bad) jp int3 mov daa aad nop jae,pn jp mov jecxz jmp rol jl lahf lahf fisubl iret jp sbb int sarb (bad) div add mov ficomp push xchg fdiv jmp iret add call repnz adc dec jns iret mov insl cmp testl pop clc aad cltd pop sti ds cmp pop add push cli enter mov mov cmp add and mov cmpsl adc mov hlt mov fild inc aas or jo or xchg adc mov aaa es out repz add adc lock test sbb mov inc (bad) jbe sub das jle mov scas mov mov cli mov cmp ss xchg jns imul enter movsl pop inc ret dec aam rcrl sti (bad) mov pushf (bad) repz lods sahf jnp ja mov lret je xchg push dec and mov orl fistp cmp sub xlat outsb insl jb ja sbb mov xor mov addl mov (bad) fimul add push xchg inc (bad) (bad) sub (bad) jecxz xorb in add pop orb adc sbb add dec inc mov push add or mov mov push add stc xchg jle push xchg fmull sbb sarl sub fstpt (bad) jbe dec shrb adc sbb or mov pop push enter xor dec mov pop lods jmp jb mov sub test nop inc (bad) aaa pop add (bad) lock cmovg cmpsl aam std push xor imul xchg inc push adc push mov fidiv jmp lret push mov mov rcrl outsl inc cs roll mov fldl jne insl pop sub mov jno jg adc aaa lods lret jle push mov nop sub movsl pop inc push fs cld pop icebp dec mov xor ja lock mov lea popf lock add xchg or out nop xchg dec mov sbb mov cmpl repz lcall push fldenv rolb sarb cmp repnz jp lds inc pop add shll cmpsb leave popa aaa and out mov sbb movsb and jne xor jno mov sub cltd mov (bad) daa ficom dec shr aam inc jl ffree rolb in sbb or inc aas dec subb push mov pop rorl jmp hlt int3 insl dec fldt loope popa les cmp stc xor pop sahf adc xchg testl into icebp jp pushf jbe outsl add loope aad ljmp mov negb in xchg mov mov push dec add mov pop stos movsb add xor cmp aaa cmp cmpsl push je cmp cs adc mov push push stc ret xor mov mov into and push popf les test cmovle push lret adc mov jecxz rorb xchg adc xchg jmp mov push push in cmp push mov iret (bad) cmpsl lods jns fisttpll mov cli mov xchg adc xchg cltd add pop into mov lret mov jmp add dec imull and sbb addr16 sub std mov outsb ljmp dec popa push ret lods fcompl loope sti rcl mov in xlat push xchg je pop aad arpl cmp and dec notb addr16 fwait into fdivs xchg and push xchg (bad) outsb dec movb sbb mov dec test sbb pop xor (bad) imul mov cwtl sbb pop push pop in cmc fnstenv sar xchg pop push pop xor je mov jecxz xchg outsl mov out push dec xchg cmpsb dec gs xor xor in sub xchg test sub out xor xchg xorl jg push add push sub add or jmp std or add inc mov jbe cmp xchg test cli add dec jp sub xchg fwait cmp fcmove inc push mov ficoml bswap sub mov pop shlb mov (bad) cmp xchg dec cmp sbb sti bnd jb mov call pusha (bad) scas gs inc xlat xor pop cmc and (bad) stos mov mov cmpsb and jge mov and or cli add or (bad) jmp xlat xchg ret sub fild xchg cmp cmp inc in add jno mov mov jle popa (bad) cmp fildll mov add sbb jge mov adc pop or ret in xchg mov (bad) jb mov push add cmp pop cmp sbb adc out cmpsb mov inc lds scas pop push cs loope sub fwait jl lret mov std jg call or mov scas sub cmp adc fdiv pop or int mov xchg jb cmp lods xor lret nop stc clc gs mov decb nop icebp lods push sub repz in dec hlt insl aam cmc pushf es xchg and xchg ret dec test jmp inc loopne pop dec (bad) inc lret out repnz adc cmpsl dec or pop and sbb mov adc mov push loope ljmp jno repnz lds shll sbb mov mov loopne mov jmp mov int3 (bad) mov sbb jb imul jo loop fbstp xchg add xor inc inc add test test lret pusha test (bad) pop inc cmc sbb imul sub and add loope mov movsl mov inc iret add loop std mov push (bad) cmpsb movsb and es (bad) (bad) lods cmc adc roll xor xor jo mov fwait sbb push mov cmp or push leave pushf ret or lret or inc push gs lahf mov sbb mov mov cltd xchg dec xchg push lret arpl jbe dec adc les xchg push sarb sbb test test fnop iret mov and pop inc xlat ja pop pop lods stc icebp sbb add mov or sbb enter pushf mov mov popf xchg inc inc jne dec test stos xchg ret or sbb dec addr16 in das push into xchg add sbb and div jl stos icebp inc inc test mov shrl stc xchg mov or cmp push nop jp (bad) je (bad) adc pop xor jge sub jns jp mov sti mov adc and jmp iret lahf (bad) cmp cmc clc and arpl test into mov fimull pop sarl roll jb pusha in dec outsl mov leave push data16 pusha mov jbe inc add and sub dec (bad) adc movsb sbb (bad) jge cmpsb add xchg out push sbb dec inc andl aam das das mov es cli fs jae sbb roll and add outsl sub bnd and hlt inc add loopne jp cmpl sbb lock shr leave pmulhuw dec jno sub fsubl mov push inc stos inc lret loope push loop nop imul push mov push outsl fs cli ret les mov xlat jge add (bad) and xor push (bad) loopne cmp imul dec cmpsl aam in add outsb popa out pop test push sub xchg jo mov fmul push call and fildll stc cmp fs dec (bad) mov jecxz cld mov mov mov mov jb aas fs fbld movsb push fwait push push lcall mov lcall xor or popf cmp cmp jb test xchg dec jno mov insl mov adc dec sub ret dec or inc pusha js movsb in and jns sbb mov jp ret mov (bad) xor mov dec stc or shrb jp bound push adc ret add xchg mov push out sahf movsb (bad) push (bad) hlt shll jo cmp dec fmull imul in fstps lret hlt clc mov jmp add (bad) outsl jae loope push mov hlt add jbe dec (bad) dec jp dec xchg stos and test nop std push scas push insb jmp inc test pop lods fistpl jb cmp adc or mov sbb add das dec mov insb test insb adc out sbb jl (bad) sbb add adc es push sbb jo mov inc scas jno push mov cmp rorb inc jl fwait fwait adc outsb pop test adc (bad) mov adc scas stos repz xor insb outsb leave mov mov fisttpl jmp push lock mov pop out sbb arpl mov or mov or les sub ds dec fs xor cmp test fcos std les rolb pop (bad) dec jne sub xor and scas add insb xor icebp addr16 repz dec sub jnp leave cmpsl movsb dec cs loope dec sub bound jp scas insl mov enter inc lods lods jge lret mov ret fs jnp xchg das mov xlat das and adc jb xchg jle adcb fistp (bad) xor dec sbb cmp pusha loop xor je les mov pop loop and ds sub mov xor fcmovne fcom out fs dec jns pusha cltd xchg cmp xor leave lret push fisubr push das dec xor or icebp mov aad push popf pop sbb pop stos or cmp cmp adc xchg mov push inc xor shlb jmp or pop sub jg fs mov dec add loopne je,pt add mov insb sbb adc pop push mov popf cmp in cmp repz insb les fimul in (bad) xchg int3 inc ds lret repz in dec push adc flds scas addr16 add inc test xchg inc inc dec xchg mov cmc int3 adc mov cmp adc inc dec mov cli cld mov mov lret mov in stc repnz and mov mov mov mov movsb pop lcall sbb test loopne push out mov mov add xchg xor gs mov mov or add mov fptan dec loopne inc pop jmp xor (bad) iret jnp dec add and xor jns out jnp mov call inc (bad) fnstenv mov lea jns,pt sub frstor loop,pt push sub xchg icebp dec mov xor cmp mov aas adc fsubrl sub mov cmpl mov aad mov xchg (bad) fs aaa gs and lds loopne daa lock dec sub movsl push dec pop lahf fadd aam inc popa add push ja mov pop dec sbb fs add add jle sub inc push xchg imul loopne (bad) shrl cmp shlb xor mov push and cmp fadds lahf mov xchg or adc cmp mov sub dec and pop fbstp jae jnp pop dec (bad) adc inc rcll sbbl pop xchg jmp out das cld addr16 dec scas mov lods sub cmpsl (bad) in fs cmp shl sub mov in stos fbstp in or mov sarl adc cmp call fmuls inc inc in (bad) cmp rcrb mov dec icebp add jae test sbb jecxz cmp or loope les enter dec cmp inc dec and popl adc movsl push lods subl adc dec loop jmp jle js inc imul jne xchg clc or jmp sbb mov jnp,pt mov andl mov in stc movsb (bad) dec cmpsl xchg test jno repnz subl jge fcmovnbe jns andl or dec lret pop push xchg xchg jbe mov adc rcrb fildl roll into mov mov xchg cwtl and mov sub ficomp pop loop jns ljmp and outsb xchg push dec pop cwtl sahf xor jmp fstps movsb dec leave movsl mov push add ss cld popa pop popf lret sti mov popf lret jns scas xchg add fchs xlat xchg adc dec push in loopne sub add xchg data16 dec jne subl pop shlb xor mov cmc adc lret mov xchg pop int3 lret pusha sub pop rolb cmp (bad) or sbb mov pop leave rorb insb rcl lret mov shl xlat and pop arpl sub xor mov ret xor or inc stos leave icebp dec adcl ja es aas sbb aas jae testb es (bad) dec repz or sub inc mov int3 outsl inc mov push dec es cltd fdivs arpl mov rorl and call shrl fidiv shll sbb mov mov mov jp loope stos insb (bad) jmp push js mov sub test lahf mov and decb or test or leave dec ds adc shl mov mov in stos popl rcll aad pop cmp or sbb in in jbe mov xchg push mov (bad) loopne aam loope adc mov dec popa and imul cltd call jbe insb inc and adc mov or lret sub pop incl mov dec pop xchg shrd adcl outsl sbb repnz sub (bad) xchg clc shll imul outsb repz lods sub xchg inc out fbstp adc cmovl in push mov mov (bad) jmp xlat jns stc sub (bad) xlat aam gs push add inc js mov out xchg inc mov push lret leave in clc or je in lret out mov shll inc shrl mov ret addr16 push mov xchg idiv sbb ja push xchg push sarl loope mov sbb jmp inc jns ljmp pop shrb mov lods mov lods in popf xor dec adc mov rcrl mov mov lea in sbb sub jecxz mov push mov cwtl mov bswap sub or imul ds xchg fcompl mov xor fcmovb push inc test call jge rcl out test cmp dec movsb fdivs or jb test jle mov stos stos aad out or gs xchg push sub push movsb cmp push sub fidivr movsl stos es cmp imul xchg push scas data16 xor popa ljmp xchg inc int outsb pushf aam jmp notb push js jmp adc xor stos inc es sub xor enter sbb lcall daa mov inc sub cmp pop mov or dec xor cli loopne jge fbstp cmp popa test rorl push cmp jae (bad) in rclb es jge or or sbb nop fs sahf lcall enter sub mov sub dec in xor pop iret add and jnp and inc jno das (bad) mov call adc xlat sub orl sahf push jle push cmpsl sbb mov int sub adc push sub cs pop mov mov lods sub bound fldcw test xor insl or jmp xor mov pop je je jno jp pop mov xchg mov xchg sub imul and test outsl cmp sbb mov inc push imul or sub ret jg int fstpt sub sub clc rolb push push sub sub mov popf jp xchg mov movsl push lods aas hlt cmp xchg stos test shrl inc ja int3 cmp dec rcll incb xor adc lds das cmpsl mov sbb mov pop int jecxz and xlat mov fdiv adc mov scas in fs cmp push xor xor in mov test mov pop dec inc fs scas stc stos sbb fildl in arpl test jle nop mov or adc push and jl mov jns iret jne popf push pop cmp add dec dec cmpsb sbb dec test dec cmp inc xchg sbb push pop add test sarl sbb cmp pusha add (bad) cmp (bad) dec mov sub cs repz push sub sub add in loope iret movsb xchg popa lret imul dec icebp (bad) pop popf pop mov int jnp mov xlat xchg sbb lods sarl hlt (bad) mov ret movsb xchg cmpb (bad) add mov mov jecxz or insb in cmpsb pop xchg jecxz ljmp dec jecxz mov imul sbb (bad) bound inc cmpsl movsb aam je fs pop adc ja xchg insl (bad) or imul jle aad pop mov add in stos (bad) mov pop addw lea lock or ficoml aam fs xor inc jbe rolb ret or int3 test arpl jl rclb inc inc cmp shlb or sub inc push pop mulb in fisub out sub stc cltd dec (bad) cltd (bad) jo mov jmp mov and outsb insl hlt insb (bad) cltd mov add sub aaa xchg add adcl push inc out mov ds lock adc sub lock sub add dec mov rol andl cmp out out dec inc jmp pop std jno cmp orl movsb es sbb pusha push cld add sub inc nop addr16 cltd push and lahf jmp xchg mov cmp jo es or imul insb xlat cmp popa stos add sti or and stc sbb in sbb pop lret jp mov add mov mov jp rcrl repz iret mov push movsl pop adc push xchg insl mov mov mov movsb adc divb or fimull mov clc clc fcmovb lret mov mov mov bound cmp sub leave sbb cmp pop cwtl lods push sarl jmp in pop out push dec es cld outsb lock add fcoml jae adc scas xchg rcrl push push mov jg in and push scas jbe int lcall inc or icebp jecxz or in aaa dec test lods aaa xchg xor dec mov dec gs into inc add or push pop cli jecxz pop (bad) mov lret insl scas fisttpll pop mov (bad) repz addr16 gs lcall fcoms pop and inc (bad) jne xchg inc or pop jo lock adc dec sbb push xor xchg sbb jo outsl call mov mov lods test pop and lahf and push lcall add mov xchg push ja mov jp mov or pop push jo inc cmp das adc loop rolb (bad) mov pop mov jns pop int lret mov les fisttpl enter das ja shl mov adc lret js pop xor aam hlt loop ljmp mov jb cmp jne add pop mov dec or cmp sbb rclb fiaddl test adc in lds push jbe xchg push jg (bad) mov outsb negb scas mov faddp icebp pop cli sub leave clc pushf and in (bad) jl (bad) (bad) push test pop inc xchg push popf pop ficompl xchg dec push (bad) loope aam sti ds mov (bad) xchg sub add jbe xor (bad) cltd sti nop out ror call mov ss repz adc dec xchg ficoml arpl sub xchg jle push add dec pop adc incl jp ss adc daa jo (bad) mov sar push push sarl cmp stos enter mov lahf popf fisubrl inc nop shl bound xor add or xor and pop push push out idivl sbb push xchg iret mov or pop outsl inc sub inc pusha test rorl xchg adc ret mov add jbe inc and adc pop xchg out stos pop xor or mov add jb ds fdivrl ret fnstsw jge adc out dec lods lea lret fcmovne sbb montmul cmpsb add inc cli jmp sarl incl or stc dec sub in mov dec (bad) pop out or popa mov iret outsb (bad) repnz add mov je cmp or jecxz jbe mov mov xor add mov iret test fistp dec cli sbb pop sbb jg cmc lock xor movsb dec data16 mov mov xor adc sbb int3 cmpsb jp push gs leave ret mov pop ljmp push scas adc cwtl (bad) negb popf addr16 and xchg xlat les sbb mov mov fnop lret cmpsb pusha fnstsw subb (bad) test std mov inc cmc je insb add test rcll inc lcall cltd jno mov mov cltd sub sub ret out cmp (bad) cmp popf rcrl js lea loope (bad) xchg jbe mov lahf xor sub sub sub mov jecxz mov mov daa sarl aas inc add push flds mov xchg cmpsb inc das cwtl leave push inc lahf cmp out push mov mov cmp ljmp adc mov cs js dec xor push adc clc mov imul cmp jl roll pop xor in enter repnz dec or loop lret jnp pop addr16 pop sbb or mov jbe test mov sub cmpsb mov jmp cmp xchg dec pop (bad) add dec inc rolb mov mov xchg stc pusha xchg dec sub stc cltd inc xor test stos xor int xchg xchg mov pusha jno rorb xchg cmc push cmp sbb xor xor bound push cmp sbb (bad) dec push jg cmpsb je (bad) mov mov fucom xor cmp iret ds in add jmp push inc jo mov or jno pushf mov das stos repnz dec (bad) push and mov jecxz (bad) imul (bad) in pop jge loope loope stos popa cltd fcomi stc pop loop nop xor adc sarl lock pop mov aas ds adc lret inc mov xor cmp mov in cwtl jmp popa aam (bad) cs aam xchg gs fldt lahf jns cmpl out sbb icebp icebp mov adc inc leave sarb ja xchg mov call fbld cltd sub sub cli stos rcrb push bound stos les sub inc ja test add pop imul loop adc pop pop xchg mov sub inc mov mov or clc xor ret std mov adc dec adc jle pushl cmp push pop cmp sbb mov (bad) pop jecxz inc in inc popf (bad) jecxz lret add cmpsb mov gs mov xor xchg push cli scas mov imulb dec and imul jo adc pop pop mov fwait push lods cli pusha pusha adc add clc xchg (bad) or data16 or jg insb adc pop std cmpsl mov in addr16 adc mov les loope cltd jae xor pop movsb into inc test inc ret rolb xchg sbb dec inc sbb pop jge fnstenv sti inc adc mov push sbb sbb lea sub adc daa mov lock jg test mov adc cwtl clc add fs inc ret adc cli mov test addr16 xlat jl sub out add push pop pop mov out inc mov loopne xchg js jns push imul shll enter xor pop pusha divw mov inc mov mov enter pushf insl sbb jno dec xchg or in lods jl aam push fidiv xchg les subl push pop popa cmp jge loop push dec js nop inc push aad mov jne cmp pushf add fcmovnb jmp addr16 shlb xchg lcall paddb inc jge fcoml aad and mov lahf pop cmp sar pop scas (bad) loopne cmp roll stc das xchg mov fimul xchg stos xor fcmovnb cmc jmp test mov jnp fwait cmpsl cmp int and (bad) lds test mov and mov fiadd mov test cmp add shlb sbb push ret mov (bad) jns imull dec iret scas pop jg mull leave pop add and dec mov sub (bad) hlt ja cmpsl xchg flds mov sub mov and xchg mov mov fiaddl dec lret fwait (bad) ss cli cmpsl dec or outsb jns addr16 and sub mov sub cmp xor dec sbb mov inc inc cmp dec or xchg pop (bad) mov and in leave jge xchg sub adc nop (bad) dec fimul xchg addb in inc sbbl inc rcrl push femms lea out jae pop mov mov pop jl aaa (bad) fidivrl add sti rcrl jmp jg inc adc emms insb add mov sbb jbe (bad) cmp push loop mov mov sbb fcomps mov into test xorl imul xchg or mov sub pop nop xor xchg into inc cld lcall mov adc jnp sbb inc ret (bad) (bad) xchg sbb cli das push pushf (bad) ud2 sub jns pop dec inc cmp dec sub pop sub inc mov xchg cld pushf outsl sahf xor rcll jp es loopne mov mov pop out dec and mov xchg rcrl lds xor and into dec outsl or rcll xor mov xchg negl ja inc jb jmp and adc rorb mov les or cmp cmp xchg jg jne ja (bad) and call add sahf dec les sbb xchg ret jl and mov sub cs cltd xchg js mov in popf shlb mov sub fldl push sub inc and sbb xchg sbb mov adc sub jl cmp mov addr16 cmpsb idivb cmc mov call test ja lea dec lock in in cmp je jp call mov xor addr16 cs mov jecxz pushf out cmp xor mov jg rcll cmp jo mov mov lods and movsb lcall xchg dec push or pop in test inc push ret mov in fwait cwtl push aaa fistpll xchg clc ja insl or out xor sbb adc sbb inc (bad) scas mov nop (bad) mov loop push pop out das push jmp jnp xchg inc mov negl das sub lcall sub jg or ja mov rcrb inc popa stos mov stos mov dec stos test jb sbb fcoml add jns fbstp jecxz pop mov push jle fmul cs cmp and insb jge or repz mul xchg dec jp ss jge arpl sbb jmp xor adc sub mov sbb hlt iret in xchg test mov mov mov lock jnp out cmp push jp fstpt call scas adc imul sbb pop jns push or and shr or repnz ss mov idivb fidiv push xorl jae loop cmpsb pop push jecxz pop aad fdiv fcmovne dec xor cli jae sub mov adc sti icebp repz (bad) mov arpl out stos pop mov pop xchg adc aaa xor mov add repnz sub pop cmp jmp clc (bad) xor sahf jle,pn push and sub jg int3 xchg dec out rcrb ret mov sahf xchg jl xchg lds test pop xor push lock jge dec lahf pop es repz cmp shll leave cmpsb imul mov mov mov std cli xchg fcoml push arpl fdivr pop ret dec inc loop pop inc jmp jg sbb loope inc dec xchg test and rol add sbb mov div call (bad) (bad) in jecxz push lock sub sbb dec push pop inc jo jo fidiv sbb push testl jge stc sbbb mov xchg inc (bad) jg fbstp xchg lcall mov add out dec mov adc mov ljmp gs sbb sub les jno push cmp add sbb mov or cmp subb orl bnd lret arpl jno push mov and repz jno fsubrl aad sub loopne or push jae push imul jnp in imul xchg sub sbb xchg inc jne jae pop shrl rcll mov xchg mov (bad) ja (bad) jae xor add dec pop lock (bad) jne jns out dec pop and lds ret xor fdivl adc mov add sbb imul xchg mov rol adc std push inc and cmp add call mov mov xchg push sub jns iret jne pop insl fimul jle sub pop aas sbb adc sub mov lods mov loope aaa push (bad) repnz jecxz stos push lods dec mov lock ja (bad) dec stc mov sbb push fisubrl or stos xor pop cwtl push lods loopne dec pop jnp add test cltd mov sbb cmpsb pusha fistpll outsl dec icebp mov add adc call cmpsb and sbb sub cmc hlt inc aaa test push pop mov cwtl add xchg sub dec popf das ficom or imul outsl jecxz cmp jl fstps lret test (bad) rorl jbe dec pop out mov popf pop mov addr16 push data16 jb imul test push scas push (bad) dec add lock dec jecxz (bad) push into sarb inc adcl movsb lret (bad) js adc push rcrl adc sti popf mov mov inc cmp jae jne jno inc xor dec xchg (bad) dec dec xor dec push sub hlt pop (bad) cs cmp dec mov movsl adc push aam pop mov xchg les clc jmp insl jle inc loope mov pop imul out out div jnp div mov push dec aad addb mov mov xchg loopne pop add xchg mov fstpl sbb cltd lock ja (bad) fisubr mull sarb sub jnp jns cmp jno xchg push gs inc add in loopne mov dec outsl cmp xor jbe pop mov test push push jg scas dec xor jns aas out shrb js (bad) xor dec cmp adc dec adc sbb mov inc pop movsl xchg mov std test test fs push or adcl outsb adc adc pop xor popa sub jecxz xor pop dec ja cmpsb shlb sbb mov rcrb inc inc pusha xchg push je insl xor pop dec xchg mov scas mov or out inc jmp and (bad) jle iret into sbb push adc bound insb pop idivb mov test or enter inc pop icebp or or fcoms sti pop pop xchg xor xchg mov out mov pop das mov jg (bad) cmc pop outsb push add mov jb ss mov xor mov mov clc enter cmc mov mov pop dec mov mov gs push cmc std jle jnp xor rorb (bad) mov mov or ficom adc aam sub xchg in dec ss push pop stos jno cmpsb shrl sbb fistpl cmp mov pop push loopne mov (bad) add inc ja inc in inc lock outsl icebp testl mov push cs mov xchg daa repnz mov sbb mov mov add xor xor inc scas cli mov icebp pop dec scas xchg pop add pop rcrb pop xor sbb rcll orl xchg xor out dec push int3 adc hlt repnz cwtl sub lods sub mov test out xor push nop push ret repnz push inc cli and imul lcall or dec cltd cmp idiv inc in scas cmp pop popf xor push out mov jo fcmovu clc ds push lcall daa sbb xchg out out mov movsl cmpsl cs std or cmp nop stos xchg fild (bad) int3 mov mov cmp insl mov push jo push call cmp nop int mov and push mov xchg or pushf xchg arpl jg mov sub (bad) xor ljmp xor pop inc dec xchg mov mov lret or and pop loop xor add mov stos jp sub dec aas (bad) ljmp mov mov mov stos mov pop fistpll imul cld (bad) jge sahf jecxz mov int cli pop popa lret push xchg lods jle insb jp fwait and mov sbb sahf (bad) push movsl bnd sbb sti repz mov mov aam (bad) rcrb sbb cld or scas jg cmp mov in rolb pop (bad) xor in and push mov adc xlat xchg (bad) test add rcl xchg xor loopne inc sahf pop jnp (bad) jb cmp or jno add call popa add pop in pop xchg cwtl and xchg inc sub das divl pop adc dec (bad) mov pop jbe mulb mov outsl imull add adc test (bad) xor (bad) (bad) mov mov cltd jmp incl jae xchg cwtl je pop mov sbb mov daa test into cli cwtl push pop inc sub or hlt (bad) icebp jp or sub or and pop lds inc lods mov push sbb adc imul mov sub inc lds in xchg mov push iret pop (bad) dec outsb rcl add jo arpl lret cmp dec sbb cmp lea pop cmp fdivrl js or xchg push pop mov mov and cld jns aaa lods cmp (bad) jmp ret xchg cmpsb outsb sbb lahf cmp cli lods pop adc repz add inc fist cmp and scas (bad) xor shll in aam test mov (bad) clc xchg dec inc movsl leave pop adc imul popf mov xchg sbb in ficom lret mov cmc lds cmpsl and sbb push repz nop jge lret xchg aaa or popa mov pop imul outsb dec dec xchg or sbbl daa mov mov je roll xchg dec mov xchg cmp and mov adc jae add sbb sub mov fist outsb cmp inc jecxz aas lcall push mov mov and pop lcall bound push testb div adc fwait pushf sub mov movsl sub push adc fucom lret and pusha xchg sub cmp mov (bad) dec or js jne mov bnd pop pop push repz movsl cs xor clts into xor aad in mov dec int sub sbb push pop aas pop int jnp rcrb cli mov xchg xlat stos push clc sbb cmc imul adc or nop cwtl mov sarb jge mov pop test addl inc sbb sub or lea icebp jle sub mov call adc jo mov dec and mov jne cmpsl or int pushf aas into mov xor aas js jmp (bad) xchg fs add in xchg push sti in ja (bad) xor xlat or ret mov call sbb daa jo mov cs push dec jbe xchg mov sbb adcb adc sbb cmpsl sbb subb insb mov sub sub flds xchg xor stos sarb mov cmp jae xchg ret sbb push ret add int sahf and inc dec add ss cmp in push xor daa xchg push mov mov or dec cmpsl mov mov repnz loopne insl xchg call fcmovnbe outsb or mov popa fbld je jno mov das cwtl xchg cmp dec in push lret sub (bad) int3 add sbb popf dec and scas nop push stos sub leave mov pop push js cmc sbb daa nop in aad pop and adc push ds push lahf in aad xor in shl fwait mov lods sti outsl sahf adc test ljmp fidivr sarl ljmp fcomip push add sub push ffreep dec fwait push gs mov lahf cmp dec xor lahf xchg ds int3 dec outsb xchg jne ss rorb stos lea fistpll adc out rcll sbb add push sbb mov repz sub jp cmp push jnp mov cmp sbb icebp mov mov movsb sbb pop mov pop ret dec or add mov rcl out xor pusha push cmpsl mov xor pop (bad) (bad) stc lea dec xchg or mov or insb cmp mov in arpl into leave cmp aad scas int3 (bad) call jmp cwtl lahf jo stc push enter loop imul sti test dec popa movsl push cmp scas in mov xchg adc sub mov and aas cmp adc out sub push std mov test (bad) push or mov inc das xlat jae inc decl pop jne mov movsb sbb lcall xchg cwtl adc cmp (bad) jae fsubl test xor dec lods or iret push insl pop cmp repnz cwtl cmp loope aaa andl mov push add movsl mov xchg mov mov cmp shl (bad) shll mov test xchg push lcall cltd out xor mov adc into jecxz mov imul pop fnop mov iret sbb pop jns shrb aas mov pop ljmp ds sub sbb mov in add in clc or daa aad (bad) rolb mov mov fidivl out daa push mov (bad) insb jno out push push inc jl hlt pop inc push dec inc pop push add je dec xchg enter pop sahf push xchg int3 jg jno aam dec out in fisubrl jl lods adc pop and mov jno aad push loope loope dec out add lods mov mov cmc fsincos push inc cmp out outsl and loop int3 sub dec xchg push gs jno fwait jne and mov cs push and mov mov stos cwtl lahf pop aad dec loope (bad) add add in insb aam mov arpl sbb outsl (bad) stc adc andl sub lcall lods test xchg mov mov nop mov fisttp cmp adc cli (bad) loop and mov divl arpl ds sbb gs mov mov scas mov ja or ja and ror repz cltd cltd add add add inc mov pushf inc jl (bad) push vcvttpd2dq movsl aaa add inc and sbb fnsave cmp mov pop jmp sub sbb sub sub sti xor shrb popf leave cmp xor cmp adc adc push inc cmc aam and fidivr inc cmp hlt int3 mov int3 and or in iret pusha pop and dec push jge mov push jb jp mov or sbb mov negb jge cmp out jecxz,pn mov push lcall ljmp push jo or stc out mov cli sub je aaa xchg push xchg stc pop push inc cmp rorl dec je push mov adc push rcl out inc jmp or adc adc andb std xor jle repnz (bad) jo shrb or mov push sub xchg popf xchg cmpsb jecxz jnp push inc inc notl imul xchg adc mov fisttpll xchg stos xor pop add sbb xor mov cmp dec ret mov movsl mov roll loopne cmp sub sbb push push xchg cli pushl pop or lods mov iret push (bad) out push ds jle ja push push fisttpl (bad) nop subl in dec popf push xor mov aam scas jmp pop and jecxz adc jae and cmp jg in ret ja xor xorl push pop pop cmpsl mov nop outsl iret clc adc xchg into push sbb xor mov jb sarl popf adc out jmp mov pop loopne add sti and push es cwtl or lret push fistp cmp mov int3 mov push sbb xor pop jnp repnz and ljmp mov js fcoms adc lods sbb fmull pusha mov pushl sahf or inc or mov sbb out or pop sti fistpll insb cltd clc and xor pop inc pop fs scas jnp inc (bad) sbb add js xor sub pop arpl add int3 push mov mov push cs pop mov sub cltd push fsubrs mov jbe movsb or push dec sbb or jge pop add lea test inc dec xor push inc in mov or sub inc jp inc and xor mov sarb in pop mov pop push scas test not xchg xor and sbb (bad) mov inc jg xor subb dec dec pop xchg das xor nop and sbb xor and sbb add mov xchg xor jge jae lret cld jl xchg jo nop pop cs lock jl xchg xchg mov or jle push gs sti daa out sbb test popf push pop js movsb ficom pop pop lret sub dec fimull outsl or cmp and cmp push lock push dec pop dec cli jge add lahf sbb int3 sbb out (bad) repz insb in pop clc dec pop mov xchg ret aad pop dec cmp ds inc xchg ret std std fwait add iret push push or enter jnp pushf cmp cwtl push mov nop sub aaa or mov cmp sbb inc adc imul das mov dec popf jl add es icebp in insb hlt jmp sbb inc pop roll lahf insl (bad) inc rorl hlt imul mov pop cmp cld aam sbb xchg jle in sub cli sbb sub xchg aaa xlat lahf rcl dec or sbb and xchg xlat cmp outsb scas lcall or cmp pusha xchg jmp (bad) enter sbb fsubrs cmpsl cmc push ret pop inc or test enter mov mov xchg sbb sub pop adcb jnp mov sahf mov aam sarb jnp stos or mov test inc fidivrl inc (bad) repz cli std enter add sbb addr16 rcrl fdivrs or sti xchg cmp ret cwtl pop (bad) dec mov testl clc sbb (bad) neg ret cltd scas vpmacssdd sub mov adc xchg pop inc jmp or or imulb cmp pop loopne ljmp shll adc aad out push push nop or mov les jp sub adc or jecxz pop xor inc or dec mov nop test and or mov cmp nop out fbstp arpl xchg fdivrl in inc add mov mov add inc inc int3 fisub es add shlb outsl jg mov ja,pt aam xor popa push mov rcll push rcl sbb (bad) push mov mov pop je jo pop mull mov dec mov stos dec loop test jl (bad) stos pop cmp mov out add daa cmp scas inc in and leave and loope shr std cmp aam loope lds mov mov ja ja aaa or or mov test jnp lods adc sub pop dec inc xchg repnz fnstcw scas mov inc adc mov loop and loopne scas mov sbb icebp enter dec iret adc fidivr xchg hlt ret loope iret (bad) pop push inc shll (bad) aam imul in and movsl (bad) sarl (bad) cmp pop stc cld shlb sub mov dec add aas cmp mov pop mov (bad) int pop ror mov hlt scas push xchg adc hlt push cmp (bad) sarb dec jmp pop das pop jno cmp mov inc cmp icebp outsb dec pop mov sub jns jecxz test adc (bad) icebp sub add push ja pop cmpsb (bad) mov jmp sub setnp xchg cwtl shlb gs fildl (bad) dec js (bad) subl dec aam xchg (bad) sbb jbe fsubrl shll cltd pop add fs pop mov pop xor mov sahf (bad) xor pop sarb pop mov decb lcall insw lret pop addr16 sbb pop pop movsl jnp insb and pushf xchg repz cs jo mov pop pop fs out scas negb adc xlat scas cmpsl mov push push call inc shlb adc out cli in cmpsl in or pop js lea jbe jmp out loope fsubrl es out (bad) pop adc dec jno jne (bad) fiaddl outsb sub clc inc aas nop fisttpl fnstenv adc scas mov mov mov std scas sub jmp jp int3 push loope xchg or xor sarl out out jno dec (bad) lret push stc mov mov dec cli scas icebp cwtl mov xchg notb addr16 sbb gs lret push stos dec int add arpl or mov inc scas test inc or enter sub les add add scas scas movsb dec sbb fmuls xor (bad) mov sarl mov pop push sub mov push sub outsl outsl pushf repnz jne adc pushf iret sbb cmp jl ss (bad) imul addr16 or push or adc jne cmp inc or push les mov in stos push inc daa lret pushf mov insl and jbe add mov dec aad pop int3 mull xor scas sbb arpl les fidivrl or jle pop mov cwtl dec push gs fisubrl cwtl inc popa mov or xor cld iret rorb aam ret inc mov stos or add jb enter push loope mov mov sbb cmpsb cmp in aad pop test (bad) push add xor jp mov sbb hlt fbld aad and pusha int pop data16 jbe aad xor mov push cltd mov pop pop insl ss das jno xchg in cmpsb mov pop add pop in mov scas sbb pop inc add jno out movsb adc fwait rcll and lcall mov jmp lahf pop xor (bad) insb fs add jle xchg cmpsl mov test inc and out push fsubrs mov push jbe test dec fsts cmp inc je inc adc out or dec pusha test mov mov hlt test pop cmp xchg popl ficom std xor sbb shrb or xlat mov ds (bad) pusha iret sub inc or out insb or daa jle mov mov or mov das inc das cmc fcoms ja imul or xchg mov lahf ja outsl inc ror jnp scas pop pop mov dec mov lock pop and xchg dec pop sbb (bad) mov inc dec ss mov das and scas rcrb inc iret addr16 inc stc xchg rcr call cltd adc addr16 dec cmp stos ds xchg sub cmc push cmp pop adc and xor jnp inc aad mov fidivrl ja adc or gs rcr or lcall icebp js add repz jb test outsl fsubrs aaa aad sub and xor jno add mov rclb xor xor ror jnp push or jmp sti mov dec adc stc js inc push mull lahf mov lea loopne test movsl push ror fidivl xchg scas xor fistl (bad) dec mov xchg inc add lods test (bad) sbb rorl adc cld iret push ss adc popf xchg mov adc dec (bad) sbb popa (bad) pop jl cmpsl sti sahf cmp push xchg pop clc add in lods adc mov sbb mov jne loopne jne push das mov sub js lods and shr push mov out xlat nop jo jb imul xor popa arpl xlat sbb cmp mov (bad) or in mov adc hlt (bad) mov mov pop mov sub lahf sbb (bad) cmpsl mov adcb mov inc rorb xor les or lsl mov jp es dec (bad) or enter lea outsl sub sub adc adc fstpt (bad) (bad) xor jbe and mov popf or popf xor mov stc xor sub push push pop insb cwtl cmp outsl shlb sub mov lods mov loop scas or push lret pop cmp mov push sbb pusha aad dec jle popa sub dec movl xchg sbb push das js xlat xor push cmpsb push push cmp cld jecxz dec dec orb jo xor in (bad) popf (bad) dec lret and push movntps pop call pop jecxz mov jne sbbl adc repnz mov xchg pop shll inc or pop push jo fistpll pushf mov inc sbb movsl sbb dec sub cmp stos cwtl icebp (bad) in adc and pop fs jns cld icebp push outsb inc sbb addr16 aam push xchg mov or push lods (bad) cmp repz shl out add adc inc dec fidivrl lock movsb repnz cltd xor (bad) dec (bad) push adc add out push cwtl lods (bad) sbb cmp int3 pop ret mov or (bad) pop mov jecxz xor pop hlt push mov or dec fcoml add fadds out jle and packsswb test bound arpl xchg in lea adc push mov pusha lock incl dec insl pushf dec cwtl pusha add bound sub movsl cmc imul and pop jo mov dec sbb pop push cltd stc (bad) dec iret lock stc xor cs push mov aas sub or out scas push ljmp das dec (bad) mov movsl cmp (bad) sub dec xorb or out mov jge ret lcall add imul hlt push iret fcmovne les sbbl call mov aad xor mov add xor cmc jmp into push cmpsl jmp pop into repnz inc popa pop mov add lds xchg mov add pop out or ss das in sbb adc adc mov xchg push pop cmc xor fs add out add jno rolb pushf add pop popa js add add sub popf xchg sbb pop shlb push xor mov push into cmpsl inc lret test fadd je inc cli pusha xor pop sti pusha and push push add (bad) ss ja inc mov adc jge sub outsl fnstsw push push inc or add (bad) xor jne fcompl xor xor add adc jnp sbb lahf ss fnstenv dec fwait mov pop repnz insl in in test test outsb loop mov jmp repnz mov dec js fidiv sub fwait mov dec pop ret mov inc and out imul jne jo out xor mov xor fistp xor outsl imul lcall sub mov pop stc push jmp sahf rcll pop int sbb adc sbb mov out mov outsb inc mov mov movsb add cmp nop mov mov jbe lcall in icebp adc bound outsl xor dec rorb or mov aad or xor xchg sti movsl pop push mov es xchg lods test mov adc (bad) xor scas stos sbb or out lret fs ret add mov std repnz mov inc push ret sbb mov ljmp jns aaa dec jl orb push leave push cmp xchg xor push scas mov pop jbe out or into sti jg or xor pop adc fildl int jbe aam and call lods in cmp in cmpsl gs push div adc sbb lock orps rclb dec lds cmp jle lods push dec insb cld push mov int3 sbb jne (bad) mov sub scas arpl inc aas sarb pushf dec pusha popl loopne aas nop mov dec fcompl add jmp cli sti addr16 js imull sub andl std cmp enter lods jmp les inc mov sbb loop in repnz xor pop or (bad) xchg adc in mov inc xchg jl mov loope mov add mov dec call pop stc imul adc adc inc int and dec and sub bound sub xor mov ffreep cli xchg mov add fdivl ljmp ljmp aam cs repz and jno out movsl mov cld mov and jl loopne mov fdivrl push fmull test cwtl xchg scas push clc stos call imul in movsl imull xor sub push rorb jnp loope lock mov fwait (bad) mov loope js into sub lds xor xchg (bad) insb fxch push xchg jle add scas test sub (bad) pop cltd aas jle sahf xchg addr16 ja cmp (bad) pop addr16 or inc lahf xchg jns fsubs fucomp aad (bad) jge push or sub std jmp mov js call stos cmp stos dec nop ret jle lds xchg cwtl mov dec ret sub in leave aas (bad) incb jo test (bad) repnz es stc push ja jge int3 (bad) je std call inc lods mov into mov inc movsl sahf das push (bad) jg insb jmp jecxz pop jae add int3 cmp fwait mov add in (bad) sub xchg scas pop dec je add xor or in mov arpl lcall cltd nop jp cmp (bad) sbb aas ret lret sub adc insb scas dec insl pop (bad) jne jne adc cmp inc push jmp jmp pop ret out mov (bad) cmpsl fmull (bad) call pop jle sub xor lock mov scas inc (bad) xor or outsl movsb adc jp dec jecxz sbb sti addr16 mov mov mov mov lock pop xchg out fwait in ret cld test pop das pop js js jmp icebp and (bad) (bad) sbbb (bad) inc jae out popa cmovge mov xlat pop insb les leave pop insl cmp (bad) adc test cmp push loop fcmovnb enter inc cs cpuid jo (bad) push movsb nop adc sarl fisubl cltd cmp sbb lods hlt shrl ror push mov stos mov cmpsl mov popf shrb and jnp mov mov int jbe popf sub and cwtl outsl cmp add int3 cli (bad) hlt (bad) jle lods fcmovne mov xchg out add inc cmp xchg fildll inc test or addw xor cmp pusha xorb jnp sahf sub sbb xor pop ret or ljmp icebp aam or cmp aaa and push jne mov stos es pop lahf push jge inc test pushf (bad) rorb fist inc xor push or test xrelease sbb push pusha or mov xchg sti and adc (bad) mov fistl mov stos sub jns jne xchg inc jp xor push mov sub push inc ljmp inc cmp arpl adcl mov lahf or dec mov mov xchg stos icebp rcrl in pusha ds pop data16 mov mov js lret arpl jge,pn and or cs stos dec lret jle cmpsl mov aas movsl jg sbb outsb dec imul pushf and test inc fistpll add xor les shl jo dec mov jns scas dec cmc in data16 push inc (bad) xor jecxz test push (bad) fldt (bad) push fistl out pop sbb adc and inc (bad) xchg xor fadds rcll test mov pop or icebp jl xchg inc inc push pop cmp mov sub stos jnp adc xchg cmpsb dec push nop push jne jge ficoml sbb add int3 pop (bad) jle sub popa mov sub (bad) pop xor sub xchg pop add dec sub fmulp aam dec jp outsl mov xchg mov lret xchg in shlb gs idivb daa aas sub fldl std sbb dec jp jmp mov repnz mov cmp adc xor xlat movsb xchg ljmp fadds pop push movsb ljmp orl mov std mov lods popa push int3 loop jecxz mov jo xor xchg fcoml inc pop lds icebp xchg mov pop jp or aam cli repz jne test cmp xchg data16 jae jmp test jp sbb out popf repnz out add popa rorb je mov scas (bad) xor or outsl cmp aas cmpsb movsb and mov test fistl movsb scas inc (bad) not cmp pop repz sub mov pop push rcll add inc stos repz jo jb ret fwait push icebp mov cwtl fcoms and sub mov out pop fcoml cmp insl xchg and iret and mov mov xor popf and gs ljmp xchg aam xor (bad) pop xor jecxz pop (bad) or mov inc xchg mov push (bad) fsubrl cmp mov inc pushf mov push xchg cmp pop fcom fidivrl push jl jmp aas mov jg push icebp inc loop xchg fbstp insl mov pop xor or sub or jl fsub mov loop xor mov xchg imul lret push dec mov mov add mov test jle sahf cmpsl pop jno pop add fs mov push lcall jle xor push xchg xor inc es testb xchg insb or mov push enter push sub pop movsl loop xor das loope mov out stc ret cmp fcmovnu pop sub popf sbb inc push loopne mov (bad) pop aam enter pop into xchg add test add inc mov push stc ljmp (bad) cmp cmpsb add pop fist fist lock xchg xchg ror mov (bad) mov lcall mov mov mov shll jle repz jno and mov adc (bad) into ret push pop adc mov aam outsb jns add scas cld dec xchg jbe xchg int3 adc mov mov dec pop into push adc push bound jnp gs inc fstpl jmp xor push lea pop notl subl aam xor jmp push xchg mov push hlt sub movsl jp jne mov lret dec (bad) aad (bad) (bad) pop pop cltd cmpsl and inc inc dec icebp dec xor xchg and cmp fnsave mov mov mov pusha in pop das lahf mov jns pop and xchg and iret xchg pop int3 loope inc cltd add loop mov lods adc mov rolb and mov sbb pop fisubr mov cmp push jle fs adc mov sbb in or movsb std out fs lods dec jnp or inc int3 aaa push sub test int3 lock loop adc cmp insb mov xor xorl lds dec repnz xchg xchg mul ds (bad) bound loop push and mov in push and cltd and dec pop scas or test pop in subl fisubr sbb imul test es mov cmp jbe fs mov push ljmp aad lock push sub fs repnz in aas stc adc or loope xchg lcall gs aam mov lds data16 icebp mov mov push dec xor inc imul or test lods icebp dec sub xor rol mov mov dec and clc push or jbe pop movsb dec xchg dec push jb imul test or mov adc andl cmp (bad) mov inc push jle sbb js ljmp test mov cmp cmp sahf test je pop repz out cmp and lods sbb fisubr in insb sbb xchg pop (bad) aaa sub aam cli inc xor rclb lds cld fmuls or and out pop pop add mov xchg mov xor mov jne mov aaa inc pop nop outsb pop fist xchg lret ret stos lock xchg mov jne movl loopne pop xchg sbb stc fsubrp es std (bad) jae ja aaa mov test adc fidiv inc dec mov in mov scas jne daa inc adc add cmp repnz incl add int3 clc push cmp aam daa dec xchg jb lahf inc mov xchg push cli fbld leave mov jmp insl popf divb les and stc cltd mull ret dec sbb sub sub adc in imul test int3 orl push lds xchg xor fsub ret arpl inc cmpl and test mov mov rol inc push push cltd pop lret xor push int3 mov sub sub xor adc out int mov dec shll mov (bad) xlat cmc xor aas xor outsl stc push pop pop adc or (bad) push mov test (bad) scas lea imul cmc mov jmp mov xor add jecxz mov scas fdivrs out aaa fistl jmp adc adc jnp cmp mov cwtl fwait add cmp cmp pushf dec pop xor je pop inc frstor and cmpsb movsb test clc push in sub xrelease ja insb in xchg punpckhbw push pop mov dec mov inc push push in pop fstps jmp out push insl xchg icebp dec jecxz lods das jecxz push xchg and mov dec stos push addl mov out cmp pop push add push mov push lahf test sbb push and xchg test rorb fsubl xlat adc dec pop jo out pusha ljmp mov mov fisubl adc add or mov mov inc movb jge in shrb clc inc (bad) mov ret aad ds mov mov jno loope and jbe jno sub add leave add jo xlat fnstsw call pop cld (bad) jp push sbb sub xor and test jmp repnz xor inc pop jne jbe iret mov je ret fwait loop xchg sbb sahf into push dec jle mov cmp arpl mov push call gs incb out js loope aas insl repnz pop imul adc cmp xor xor dec insl dec leave dec inc cmp std jae je pop int xor xor mov xchg js cmc dec int adc jmp jo pop arpl and (bad) lock pop sbb (bad) inc adc test jnp in loop cli bound cmp sbb jns nop fnstsw mov sub pusha dec (bad) ljmp mov scas jae sbb int3 aad pop lret jnp lcall adc dec ja lods fs adc hlt test lea pop outsb jb mov insb iret xor fldl mov mov dec jecxz int3 fwait inc mov mov cmp in shlb cmpsb std pop lret and leave mov cs loopne cmc mov dec or lods mov xorl icebp cmp bound iret or popa xchg in cmp ja negb xchg insl add push dec aam imull rcrl rcrl adc std xchg xchg int ljmp leave mov and push pop xor sub jo repz pusha mov lret in dec (bad) leave push mov jge inc mov pushf lods xchg stos sbb pusha dec mov add push incl mov xchg adc or lea xor push or repz das lds arpl ss shl into mov mov in (bad) cmpsb loopne sub into es pop subl test jmp shrl es inc pop jnp jnp insl push cwtl ja mov pusha push fwait out popl xorl mov mov push mov outsb insl sahf mull mov sbb xchg jnp es dec scas imul orl jne mov xchg test lods cmc popa inc sti sbb xchg cmp cmp cmp lret scas jne dec mov jmp fcoml pshufw cmp pusha mov movsb sbb push push sahf sahf popa scas cmp mov lods divb in push sti dec dec in mov cmpsl sub test add inc int3 test jmp iret ss or outsl add test ret mov je pop data16 popf mov jp pop inc xchg ret and roll adc push push mov add mov out inc test mov jmp dec xchg cmp ret lahf adc sbb ja vhaddpd inc ja jae cli sub outsb or lahf fs inc mov cmc pop push xor push mov ljmp or dec rclb mov add cmp (bad) repnz push ret jb add std adc pop imul sub cmpl push mov sub in mov (bad) fbld or (bad) out push pop pop test arpl mov inc push loope sbb ja icebp mov xchg xchg fcomi cmp cmc sub shr scas xor xchg jecxz in mov rcll jns add sbb movsb pop sbb adc mov jns stos xchg pop daa cmp or add dec adc in xor mov sahf dec jmp data16 ret or pop cltd ja mov nop push in mov add out mov in push sti mov ds int3 ja cltd mov nop sub dec std cmpl mov mov xor pop cmc fdivl ss (bad) rep jle or sbb js push jae or add or sti lds mov adc mov sub cli cmp movsl inc push or jg cwtl jno jmp push test jno xlat adc fisttpl pushf ja push add outsb (bad) data16 call cmp dec imul out push push inc rcll push cmp mov xchg adc inc test lods lahf movsl and mov addr16 add cmp cmp adc cmp loop sbb cmc fwait aam jecxz adc lret icebp add jge fwait jecxz mov and and mov mov scas cli sub sub jne inc push popf pushf mov mov mov mov mov mov mov inc (bad) outsb loopne mov (bad) loop popf sbb jmp pushl std sbb push mov jne std push xor cltd mov fnstenv repz xor iret mov sub mov pop cmp add xlat inc inc cmp pop add mov repz add lgdtl (bad) iret fdivrp ljmp sbb ss pop jnp std in stc xchg hlt bnd jmp push inc es lea bound add (bad) sbb out aas pop dec sbb jno bound push adc push repnz xor popf mov out roll in push bound es sarb (bad) cmc enter or fs pop adc pop xor inc inc insb pusha jmp xor inc mov jno sub cs xor std ret (bad) push loope mov and mov (bad) jne adc pop pop sub add xchg and mov mov jg (bad) jae adc mov movsb push jmp incl data16 aad in add mov (bad) dec test jl stc mov movsl scas push dec dec movsl es xchg shl test mov idivl lea mov add fldcw movsl pusha clc mov incb ret pop jno loope out or jns inc cmp mov cld in aas fsubl xchg aam push jp sti adc xchg sub adc hlt mov outsl icebp int repz ds sub ficoml das mov hlt mov add pop and or mov pop out pop sbb loop mov loope inc dec lock (bad) mov aaa shl mov and nop popf and dec mov (bad) arpl jae push outsb ss (bad) icebp jns mov jg ja outsl outsb dec mov ret push outsb stos scas xchg pop jnp cmp dec cmp fs cwtl jno xchg adc add inc call push push div (bad) out sahf xchg ja adcl xchg inc into lahf ficoml pop jne nop cmc inc jb jp out mov int3 mov xor xor imul pop ljmp mov in fs jbe add repnz daa fistl pop cmc xchg iret jmp ds movb push fadds scas mov test sbb xor adc test outsb fbld flds stos adc (bad) (bad) into dec sub jbe rclb ret imul outsl js addl cmp outsb xchg or sub sub das fistp nop pop jns out mov mov jnp sbb pop dec insb xor mov in inc scas lods cltd inc mov and pop pop je (bad) mov in sub test cmc mov inc cmpsl inc enter or mov adc cmp das adc cmpsb leave or std mov sbb jge fwait jo sub pop loop xor dec mov xchg movsl pop insl cmp gs sub mov scas xor popa out sub mov sub loopne rcr mov fs mov push and inc (bad) mov mov mov sbb psrlq out pop imul inc out mov test int3 int cmpl pop fisttp xor add call sahf cld test inc push add sub les imul or cmp inc adc mov scas add mov lods aam sub sahf arpl jecxz out jle jns inc mov outsl cmpsb outsl push cmp hlt out cwtl pop loope cmp add push pop and mov js xchg aas xchg pop rolb scas mov or (bad) (bad) (bad) repz push arpl movsb push pop pop adcw stc mov leave cmp cmc pop cltd popa je mov mull les cwtl ret push test outsb sahf mov hlt fsubp cld or ret jae sub cwtl test pop pop data16 scas inc int3 fdivrl in insl mov jmp int3 push inc pop xor int sub dec inc loop cmpsl pop mov jnp sbb js rcrl jge adc test xchg iret loopne out dec and jno or jl push lahf adc movsl add push cmp js mov loope push mov xlat rorb lods inc jge inc inc les adcb xor pop fwait aas sub pop decl gs xchg imul xchg add mov pop pop aas jno inc cmp mov mov scas mov mov inc mov imul idivb jp push fistl adc sub pop pop outsb jnp (bad) jae outsl mov inc push cmpsl push push fsubl fistp movsb (bad) mov inc jnp sub adc xchg jge inc pop inc dec sub mov and outsb dec adc push and and scas in push (bad) notb cmp sti sbb mov jle cmp aad setbe and mov scas sub add pop sub stc inc ret mov mov imul xchg repz pop testl in rcll sub hlt push sub notl and cltd and leave push fnstenv or jae cltd sub pop push pop xor adc (bad) dec or arpl mov iret mov cmc hlt pusha mov sub lods cld fcoml in dec cmp sti mov mov adc (bad) (bad) cmc or aad xchg movb mov int3 mov inc and push dec cmp push outsl push (bad) inc sub pop scas cmovo jp push je inc cwtl mov mov and insb xchg ret scas data16 les pop out outsl xorb bound mov out sub lock pop pop pop lods adc xor bound lcall sbb push pop adc xchg loopne icebp mov push loope and popf sub in pop faddl mov push bound rcl cwtl pop dec cmp sbb cmp xchg negb lea movups jmp cmpsl xchg adc or (bad) mov jae ds addr16 cmpsl push xchg sbb insb std test xor lock mov ds cmp mov loop je popf repnz (bad) or fcmove sarb addr16 inc xor adc test xchg lods and mov cmp test daa lods xlat jg pop mov or pop (bad) je loope fisttp or pop dec mov outsl jo ror jle inc loop pop lock mov mov sbb movsb mov cmp dec dec or test xchg sub dec sbb add rcrl faddl push movsb popf mov push (bad) fnclex add push es push frstor or jl inc cmp lea xor xchg leave sub push stc dec mov aam test inc sub mov cmpsb sub adc clc popa jge stc dec fildl cmp ret out adc movsl pop dec mov mov or into jmp mov mov push mov push repz insl push mov xor mov pusha inc stc outsl in fsts sbb xorl or push push outsl push mov xchg out push sub adc add mov mov add mov dec mov mov stc imul (bad) imulb add cmpsl or sub (bad) xchg or idiv je loopne jecxz push arpl int mov fmull pop or out jae pop dec adc and popf mov std mov addr16 fstpl in fcmovu addl (bad) ljmp movsb loop mov mov adc sti fsubrp cmp dec aaa in jg test sahf add cmp (bad) fidivr lea adc into or xchg fs and movsl xchg jle and mov jp movsl lcall mov pop mov and pop cmp sbb std in popl push or or cwtl sbb pop (bad) jo cld dec mov or pusha int out out or fstpt mulb jle data16 jnp dec jo mov push xchg xchg (bad) xor pop fidivrl add cmp xor in pop sahf or (bad) pusha inc xor dec popa push xchg mov pop dec loope mov pop mov ds inc js lcall inc xor cmp cltd and test ret mov mov xor jl repz cmp mov cmp addr16 in stc xchg repnz cwtl clc fwait shrb iret xor xchg cld xor push adc movsb mov jno rcrb pop mov jmp outsl int scas or leave inc pop scas iret jo mov dec push les ds popl inc adc inc add xor aaa and mov xrstor daa outsl (bad) repnz (bad) xor scas xchg es and into lods push lods aad sti mov loope fist sbb sbb fisubr mov jne lahf xor lds rcll add jae add cmpsl and xor mov pop add mov nop popf cmpl or xlat icebp repz push jbe int3 in adc add ret xlat adc or mov adc sub and imul pop rolb mov lret into sbb jb cmp lret pusha popa daa inc cmp stos push xor iret js out pop or sub xor test popf jecxz je mov inc cli inc lods inc mov sbb xchg into cmc jae cmp fs adc xchg outsb (bad) jmp sub and adc out xorl jno rcr in and dec iret sti add dec mov push jge jmp xchg add test sub mov mov fs xchg jp fdivp lock or fldl2e pop aas fdivrp jo cmp movsl mov pop fwait (bad) jl inc aas (bad) mov jae outsl xchg fldt loop inc push out lret push and push xor xor inc stc mov and mov in testb and mov sbb mov in push cmp out mulb in cmp pop outsb xchg add xor (bad) sub lock sbbb cmpl test lret (bad) test add lods xor pop cmp (bad) fimul and sub add cmp sbb lods mov movsl in jmp (bad) sti ss scas lock jb jmp xchg sbb xchg movsb jl insl sti ret out or push data16 pop (bad) shll cmp out pop test mov jge mov push cmpl sahf scas jge iret add mov shll xor add pop xor test sub lea (bad) or push push cwtl rcll lods scas mov int3 or mov mov mov mov push mov out xor sbb jecxz adc nop fidiv addl daa loop cmpsl sti sbb dec jne lret xlat cs ja arpl dec mov (bad) mov pop push pop aad jg mov mov sbb add inc xchg cmp or pop insb mov stos repnz xor and scas fldcw push xor add sbb fisubr shl in mov arpl and push push dec and cmp mov mov inc xchg inc mov gs arpl mov jge movsb (bad) fiadd fs jmp push sub xchg and inc aas xchg and data16 ja addr16 jbe into scas xchg xchg mov mov xchg mov or mov mov dec xchg mov mov in mov adc sahf faddp pop ja mov stc fistp sub and jp mov xor xor (bad) mov gs mov sub movsb ficom arpl xor add inc mov fucomip adc cmc subl gs sbb pop pop adc lret aaa (bad) (bad) in sti out hlt lret push repz sub jge nop lods imul push pop or push lock xchg lods (bad) repnz pop lds sbb mov dec add add cs addr16 mov and adc rorl ret jno push test je dec mov subb mov rolb inc daa leave inc call out xlat repnz loopne mov cmp add jnp sbb and rcll repnz cltd adc mov inc rorl fisub mov or adc mov (bad) pop scas inc pop jp mov (bad) divl and mov push cmpsl daa lock shlb aaa inc xchg cwtl pop aaa fdivrl hlt out cwtl inc fcmovbe jns in and pop divl mov mov xor ret lods ds pop or js adc push in mov mov mov je cmp fcompl sbb push test mov push jl adc pop push mov mov mov (bad) fbstp lahf xor jns in xchg rcll cmpb subb pushf int push inc ret mov mov mov jo xchg in call cltd sub decb int test mov rcrb push in pop pop aaa jmp add bound cmp lret mov leave mov inc add sub sbb xorl xchg ret imull lcall jle lahf xor mov mov sti pop lret ds imul fdivrs out inc arpl aam jno mov mov jle loopne test ror aas mov or push and dec add mov fcomps test dec add popa push cmc push push push cmp out (bad) adc jbe je sti xorl in mov push add es mov fld mov sahf sbb jecxz xchg pop pop jg in and inc cmp sub (bad) adc scas mov and sub inc int adc cmp mov pop imul in aam mov into sarb mov or bound imul xchg add fwait or sub mov lods rcl lea test dec add cmc mov iret pop adc push dec inc out and pushw movsl dec fldcw cmp sbb data16 mov (bad) push and lea nop pop jo sarl mov cli dec fiadd pop ret add jl fmull (bad) push daa mov ss or fsub popf xchg mov test xor movsb mov je rclb shlb add xchg popf repz out push outsl sbb dec movsl movsl ja daa lcall dec orl or mov call dec add or cmp sub loope,pt cmp lahf xchg dec data16 cli enter add xor inc add mov nop xchg popa cmp jno sbb mov std jmp sarb cmp stos mov inc adc and (bad) adcb mov mov inc push inc sbb icebp inc jb mov dec fidiv add call lret xchg or jo inc fisub icebp pushf ljmp rorl mov jecxz dec addr16 cmp pushf adc test nop or ljmp xchg (bad) xor xchg rorl sti cmp jns cmpsl les fsubrl cltd push es adc out jae inc mov loop fnstsw sub es sub negl loopne pop pop cmc sub cmp jnp aas int pop popa imul push pop mov loopne loope mov push out sub (bad) (bad) stc jno dec mov jo push inc adc add pop xchg mov aas pop xor push jo add scas push mov push enter pop sbb lcall push pushf ficomp sarb cld arpl mov testb xor cmc loopne out adc clc repnz mov push sub ret and mov fsubl ds out aam xchg loope dec xor mov cli stos in repz out pop sbb cltd das mov (bad) adc jg,pt icebp imull lcall jno cmpsb sti push icebp mov enter movsl bound pop and mov inc les push jecxz,pt lods cltd aad decl int3 and jnp xchg push (bad) dec cmpsl xchg (bad) aaa out sub aad fwait popa cmp frstor cmp into pop jo outsl xor add sbbl pop or and jbe inc imulb sbb cs push mov pop not xor pop push ret rorb fsts mov iret lret movsl (bad) xor inc pop xchg cmp (bad) cmc or dec mov in aaa stc sub pop adc lahf cmc inc xor les mov cld arpl mov mov pop lret fidivrl fsubl cmc arpl hlt shlb sbb fidivr adc aad lds xor dec xlat and pop xor push out test ret jnp data16 sahf mov in and out pop orb add dec and mov nop mov push pop pop add inc cmp dec or loope pop in insb js lcall mov and sbb adc in jno pop daa cld add lahf mov ret push jl adc ljmp and mov (bad) dec loope (bad) pop lret fdivrl or dec add sub push push adc xchg rol adc xor xchg mov adc stc and dec out sbb (bad) ja add mov lea xor pop or pusha xor cmpsl dec dec bound sub lea or lods lret arpl jns pop or aad lods lods mov leave repnz in jno test je lahf sub (bad) jae pusha out shrl jne in idivb and jmp cs (bad) or xchg xor pop (bad) adc test sti jne repnz fsubr aam sbb dec add ret mov pop and insl out sbb adc xchg rcrl xchg sub sti inc aas cmc xor fbld lods mov mov push xchg mov sub jo mov lods push jns xchg jg cs addr16 ror jns inc sbb hlt push jo and test add push iret movsl sub pop mov xor imulb pop pop add xor lock sti xchg push sbb loop jae cwtl push push add rcrb mov lods pop dec xor arpl add mov out (bad) and pushf dec fs mov add (bad) dec mov push loope mov or jnp sahf mov hlt pop dec dec scas ljmp ret dec mov decl scas xor out jle add sub sbb int mov jo mov iret mov cmp jecxz xor (bad) leave addr16 mov out add mov push xor pop imul mov test repnz (bad) iret in mov jl and mov jp dec loopne shl sub sbb or out lock hlt jno sub fbld xchg xchg cmp or insl ret or mov int3 fstl dec sub sti addr16 data16 fisttpll mov leave mov out mov outsl pop cmpsl mov into in loopne mov add mov ficomp movsb mov mov jmp (bad) and ret jo ja (bad) xor push lcall js insl xor or adc sub cmpsb aam xor sub arpl push adcl sub (bad) icebp nop sbb pop bound int3 das inc fs daa out cmc imul cmp jno je pcmpgtd lock rorl ja inc jne flds call jbe jae and mov dec cmp cmp mov nop sbb std scas mov in stos arpl cmp ss leave mov jle add out sbb and mov fildll or mov lahf xchg push into loope xor popa adc xchg push in pop inc mov sbb inc dec xor push pop pop cmp mov mov (bad) mov mov jmp out xchg mov ss cmp ret sti bound jp mov push mov sarl xchg daa addr16 cmp mov xchg fisttpl test mov mov mov lds push stos loope sub ss dec xchg sahf repz movsb mov imul frstor mov xchg xchg in inc je push in xchg dec jge and push pop (bad) sbb rolb ljmp dec lahf add int3 pop bound xor mov mov xor jno mov mov mov iret stos adc xchg movsb mov mov ficom fs loope push jnp (bad) hlt sbb fwait push adc insl push inc xchg dec aad or mov mov hlt cmp into xchg inc dec jle lgs clc jne sub in adc mov fiaddl cmp cwtl lret mov adcl push fcomps mov ret adc cmp push dec mov repnz stc or jno jo test (bad) mov scas (bad) pop adc mov cwtl jge push fadd inc cmp mov pop xchg std rcrb ss fidivr mov jmp or popa push sub cmp insb rcr fsubl out insb pop imul faddp cli lea test pop gs (bad) shlb outsb xchg orl outsl xor sbb mov jbe test cmp add push je xor inc js or into push push int3 out repnz adc shll jmp or (bad) adc push mov test loope cmp and fldt out inc sbb pushf in mov popa leave loopne lret and xlat mov adc int3 lods (bad) xlat adc mov or sbb (bad) out loop adc (bad) cmp shrl aas pop pop and out pop cmp addb dec xchg sarl aaa movsl sbb pop dec pop mov shll test inc scas rcll movsb imul aas icebp test and insb mulb dec mov mov xchg push push and loopne cmc aas adc jo dec add push push mov inc xor xor scas nop mov dec negl jne insb cmc pusha les idivl pop sahf jb pop push lods enter js jnp aam ja push cmp mov jge ljmp (bad) call push jmp pop adc dec movsb mull gs scas or mov sarb pop dec sar hlt push inc xchg es mov je pop adc popf aam ret xor mov mov aaa test push mov je inc rcrl adc es mov js jle xor mov movsb inc xor cmova xchg xchg dec out jle imul jmp push inc add aas jbe lcall jnp in scas popf sub cmp (bad) mov jb aad ss adc sbb std mov jns aam stos push dec pop xchg mov (bad) and pushf outsb jmp push (bad) int sbb adc test add pop inc out fsub ljmp enter pop (bad) cmp inc data16 sub or pop xor fldenv pop ss sbbb int3 test jmp add push adc xchg push push xchg inc out pop iret out stos cmpsl aam sbb pop inc loope rorl push pop outsl test fldenv pop sub xor aad jns jecxz xor inc dec and add dec cmp jno mov pushf lock addr16 fdivr imul aad mov push jb ljmp dec xchg out pop mov sub addl mov sbb int lods repz imul sub pushf xorl push mov xlat fcmovnbe repnz mov ja lds daa jo jle adc pop xor fs in (bad) sbb aad out rcrb repnz pop add xchg enter inc nop inc test repz outsl leave mov sub psrad loopne inc inc movsl sbb loope push mov nop nop call mov add ficompl sbb inc pushf or mov std addr16 call dec aas and outsl scas test mulb je aam rcr xchg fsubrl in ret xor cs shl mov adc mov (bad) jb push loope (bad) mov aam movnti lcall or add test mov sti jne shlb leave xor inc mov ffree mov (bad) pop sar pop lods cwtl fcmovnu inc (bad) mov xor sub cmp (bad) aas scas lds cmp (bad) inc out fs insl sbb loop fistl daa cmpsl fwait rcrb inc movsb mov mov sbb pusha pop hlt pop sub leave loope es push mov ret lods push (bad) ja add push faddl mov cmp pop mov test xchg mov push xor inc ss pop xchg and leave or loopne sub movsb xor lods adc xchg ljmp sbb xchg xor aam mov push hlt cmpsl data16 push lock cmp (bad) sbb addr16 cmp and push adc sbb out scas cmp ljmp dec cmpsb inc inc (bad) icebp jae and shr jmp sbb mov or dec dec xor jo xchg xchg pop out clc push addr16 stc pop mov ficompl jg lret push jae dec ss sub loopne xchg mov fs mov repnz movsl pop in pop leavew sbb xchg int3 mov cmp imul xchg in pop (bad) xor adc (bad) cmpsb xor push mov xchg and cmpsl push movsl rcr or xchg fistpl push and les (bad) orl sub xchg test iret (bad) es pop (bad) ljmp mov mov fistp xor dec call jg jo push ds or in and (bad) into out imul scas test sti adc sbb gs jne not (bad) in adc (bad) hlt call test scas jo gs jbe pop or cmp int mov addl aad gs sub ss data16 movb adc sub dec lret int3 sub arpl mov pop leave add lods andb fmull xchg push aas mov mov fs inc dec inc sub arpl xchg xor stos add lret lock xchg (bad) mov in ljmp adc xchg sbb mov flds in js mov xor push mov adc push nop repz (bad) hlt cmp mov repz loope lret dec sbb sti cmp mov int3 flds test test in xor inc jne or mov loope adc inc mov movsl arpl scas lret jnp mov xchg packuswb pushf dec sub mov addr16 cmpsb pop call fistpll adc push push into (bad) enter lods dec mov call fsub into test fildl loope outsl (bad) (bad) aam je xor and js adcl jbe sbb jp sbb mov dec mov jno sub xchg pusha into punpckhdq mov cmpsb dec or push lods push xlat out sarb mov xchg inc loopne inc das scas sub lret mov sti xor fs adc mov lock dec fcoml push fcmovnu mov sti fs ficompl ss notl dec xor repz jo and mov adc adc mov je and jo fs push inc mov add setl es std jecxz or xchg mov mov lods sbb in xor addr16 icebp xchg cwtl cmc sti fidivl mov push mov jbe into cld imul push shrb hlt adcl or xchg jno,pt mov imul iret sbb cmp mov xchg out cltd mov aas insl jne mov adc pop les addr16 movsl jmp rorb mov (bad) sbb (bad) nop jb pop clc lock out push cmc xor subb test out sub jle test iret inc sbb push cmp push js push xchg mov repnz in leave into cmp mov scas inc pop xor or inc sbb les xchg cmp xchg mov and inc add push int3 ret js sub jo or loopne popa mov dec push gs nop sar sahf pop pop mov sub popa test rclb mov js lds rcrl or ror flds cmp inc mov xchg into mov pop push out mov pop dec inc cs mov and mov repnz sub cltd sbb sub cmp add sbb xor xor je sbb sahf (bad) imul aad movl xor in lods cmc and sbb jle pop and jge add mov scas loope outsb ret ret arpl mov push int cmp out pop std rorl lds sbb xchg jle repnz cwtl outsb outsb mov call (bad) push dec xadd fdivrp clc imul lock fstl and mov in lea add and hlt movsl inc mov out ss xor xchg stc jae jne push sub jo cmp inc negl cmc jg adc push loop dec and jne (bad) cld sahf jecxz and leave popf jbe sub addr16 enter mov cmp inc mov daa lcall pop mov ror dec jl pop outsl or xchg arpl outsl stos pop mov sbb or jb,pt mov or std adcl sub addr16 jge pop jae or lods int xchg dec lahf inc and lret or (bad) sbb pop jp sbb outsl sub and lea mov mov xor xchg loop pop xor xchg insl bound jecxz aaa add jl ss cmp jb cmpsl call ja lock pop das pop and adc pop mov aaa xor cli inc scas sti xor test jbe cmp dec test inc xor or dec sahf int3 imul dec or in xchg pop mov int3 xor out cmp repz mov fwait jge cmp in aaa cltd insb lahf xor adc hlt (bad) cld fimull arpl in push das iret notb dec lods js sahf in out scas sub and movsb mov xchg and fnstenv push add and pop pop std xor dec fs fisubr iret xchg fidivl push cltd and cltd loop movsb (bad) mov fbstp xchg inc shlb jns (bad) sbb pop out jecxz ljmp insl jo addr16 adc cltd stos inc xchg inc test fnsave cmp jne xor repz test out adc inc and or loop jae loopne insl pushf iret push inc leave enter nop xchg sub cmpsb add sbb pop (bad) popa and pop incb adc jns pop push stc jp jno aam dec xchg jecxz fcos aas (bad) insl push push orl fiadd mov mov jo fidivrl pop or gs in push dec xchg jne sahf rolb imul xor call and fdivrp and mov int mov (bad) sarb nop mov xchg dec test add test dec mov pusha sub and cltd mov mov mov call test push add mov or dec enter rclb rol pop xchg leave arpl pop mov aaa sbb lea adc popa mov and dec push je rorl jns xchg cli sub push xchg mov insl cmpsl lock iret data16 mov pop xchg xchg das xchg mov shrl cmp mov fisttpll jns push inc adc inc repz pop imul mov push add xlat fcmovu stos mov in out cmp daa subl add out dec add jp (bad) enter pop out xor xor or loope mov es mov xchg push jae push mov lock push in pop (bad) cpuid test inc test pop or lret push ja push imul xor dec dec addr16 into and in sbb mov sub push jmp push ja int3 push xchg imul rorl ret arpl xchg ja cmpsl aad jno inc test inc or iret mov insb mov add loop movsl inc xor rcr pop stos jo andb and mov fiadd les fadds incb leave cld testl cmp xchg xchg sbb fs ja cmp xlat into enter add xorl pop pusha xchg icebp mov fcomps pop adc insl lcall xlat pop push pop mov outsb mov nop or outsl fldl dec push repnz clc aad outsl cmpsl cmp push xchg js fdiv jle jmp sahf and popf sbb mov jge js inc addr16 cs ss repz xor cltd cli cli sub pop xchg adc loopne xlat fiadd adc dec scas notl or je ja mov jp or imul arpl jno (bad) sub pop push or fisttpll cmp enter fmuls pop shrl and sub pop lods out xchg inc pop xchg adc inc adc sub addr16 cli out push movsl jno addr16 cs fdivp mov mov mov cld xchg insl mov xchg call cs or dec in mov inc in ja inc jns jns dec dec icebp dec xchg push subl mov sti fisubl and push mov mov lret adc lea mov xorl mov xchg cmp rolb repz movsb xor in insl add shrb cmp inc sahf xchg ret (bad) hlt mov fisttpll dec (bad) mov ljmp cmp mov push jbe dec jecxz shll hlt push push xor sarb adc lret mov and inc and push cltd jge mull pop cld inc inc fcompl in js push lret pop mov push rolb stos out mov (bad) xor mov mov loopne add jne jbe jmp es mov cmp outsb pop hlt aas pop loope cmp pusha push lods sub ja sub ret push jbe xlat sbbl jecxz aaa insb out test enter xchg enter shrb jle out adc aaa pop xchg adc outsl lahf (bad) lahf dec movsb in mov or xchg xchg out push pop jp insb jp iret iret push es jle insb dec adc mov jmp clc mov jle jecxz lock lahf fxrstor aam sub and inc pop cmp imul loopne push xchg mov add push mov pop xor sti pop add cmc popa pop mov or test shll mov call jg mov call xchg fwait lock and jae mov mov sub xor add jecxz (bad) pop xchg jnp sub jnp rorl stos mov xor or mov aas scas lock add adc iret dec fwait popa xchg (bad) shrl test into lret (bad) stc mov add aas ss enter jl scas cmp insl sbb sbb (bad) jbe dec mov adc imul mov repz lret or pop or xchg dec sub or dec fidivl push hlt clc mov stos sub mov mov mov out (bad) cmpsl mov stos fldcw cs xor (bad) jg xchg add insb mov mov movsb sub inc lahf cmp shr mov and pop gs (bad) mov push cld icebp push mov sub push fcmovb cld add lcall es repnz or nop outsb les dec cmp sbb fsubl adc mov addr16 cltd test scas (bad) mov xchg fidivrl ss fmul pop push sub sbb push mov fwait scas sub dec lret mov imul push call lods jns repnz cmp adc add push jmp scas inc push ja mov loopne leave xorb jbe cmp or xor pop xchg mov (bad) xor push cmp test movsb mov (bad) loope (bad) (bad) ja (bad) xor jo and mov stc out xchg mov jge sbb (bad) es pop shll mov in mov mov sub out cmp mov cmp subl idiv lods ja or pop pop test rcrb push jmp fldt inc mov mov out les movsb mov jbe test dec xor lods fnstsw dec (bad) rcrb push jl or mov jecxz mov lahf loopne push shl mov jl xchg push pushf scas sbb cmc repz iret (bad) int mov pop adc add scas mov loopne xchg add dec lea inc adc pop push dec push int test jmp push icebp and xchg pop mov xlat mov jle fs xchg ljmp adc inc mov mov popa fs repz in pop shlb (bad) lcall mov cmc clts xlat mov mov lods jae cmp aam daa push (bad) lock shrb jnp mov mov enter std xchg arpl cltd mov cmpl gs xchg pop fbld push (bad) divb mov fdivs and jp cltd adc ficomp hlt mov fildll in sub into es push sbb iret mov (bad) daa jecxz fwait dec cld in pop ret js imull xorb mov into mov std jae test ret cld daa mov lods jnp add cmpsl aas pop lahf insl sbb mov aaa push mov mov or outsl in add mov fsubp sub add inc mov and fwait jbe sbb mov out dec inc fcomi mov dec jp insb add mov xor cmp inc sti push jle stc andl ret xor cmpsl sbb add mov iret and or fsub pushf sahf out pusha pop ja fdivs insb add (bad) cld neg jge out call inc aas test mov ljmp cmp leave add add in test pusha sub push push (bad) lret int3 notb and adc int sub insl mov sahf xor sbb mov xlat in pushl inc imul push add jmp lock les dec xor pop xchg inc jno (bad) aaa cmp cmp (bad) jbe and sbb mov fistpll xor scas jbe push inc push jmp sahf inc movsl (bad) fucomp and lahf incl xchg adc rcrl mov add test pop outsb jle pop cltd and inc jno xorb xlat sahf imul sbb aaa inc add inc inc out xor repnz in adc mov nop incb call mov push int mov pop sub xor je cmc dec push fmull mov lret jb jmp arpl push test fisubl xchg push mov jp (bad) or ljmp xchg xchg in xchg fimull jne psrlw aad add arpl movq xchg xorl cld out xchg pop mov dec je in xchg rorb xlat lret add and outsb xchg mov or data16 jno test popa imul or jmp int3 ret xor addr16 es call popa fs fcompl iret std xchg pop sbb iret enter in mov sbb out mov adc nop in mov dec or sarb xor es test inc mov lcall dec fildll push mov sub adc (bad) in xor sub adc test clc imul mov push xchg inc cmpsb cmp lods mov out popa add inc (bad) and xor push cmc cld lods scas std ds cmc mov inc inc aas movsb inc sbb (bad) scas pop sti loop mov lods ror lock movsb rcll mov xor aas (bad) cmpsl cld cli jmp and push sub sub xchg pop jno jge push pop mov dec aad imul xchg mov push mov adc mov sub popa mov mov aad jo add lods sarb cmp stc pop xchg hlt je inc in mov js cld icebp ss into popf cmpl hlt cmpl into (bad) mov sti notb cmp pop movb push mov jp nop push pop xchg inc inc cltd or sahf cli in cmpsl sahf fimul inc sub scas adc vcmpps mov cmp ljmp (bad) mov test inc (bad) jmp test xchg xor xchg push clc rolb decb inc push mov lea rol pop cld mov ucomiss push add xchg adc push adc in cmc sub ret push pop cld lret inc mov int mov fisttp repnz test dec sahf in mov jmp xor and (bad) xchg xchg loope (bad) push dec mov jg and add and int3 cs mov sahf fdivl mov jmp insb xor jnp lret and cmp in mov cmpl sub push int3 mov or xchg in enter test call stos out into fisubrl adc (bad) fisttpll xor lea cld push adc inc (bad) in push mov mov lods ret (bad) xor dec inc add nop (bad) xor mov adc popf dec mov and jmp pushf aad (bad) push or sbb xchg cwtl (bad) std mov arpl fmul orl pop mov in popa into les outsb push (bad) jmp xor xchg jge sti popf dec and sub std dec jbe inc int3 rcr aam call rcl mov push mov fcomps mov mov inc push nop inc mov push dec daa push fxch icebp scas test push out mull (bad) in lds sahf enter rorb ficomp int3 push icebp and in icebp add xor cli cltd and jmp sbb mov xor pop mov jmp cld cmpsl mov test es xchg faddl xlat add pusha popa push jge xor adc sbb pop notl or js mov push mov loope push and sub cli sub in insb pop sub push fwait scas inc sarl jno xchg mov dec sbb pop repz fs xchg jnp fnsetpm(287 out shll addr16 mov push fsubrl insl sbbb bound mov test stc test aam fnstsw push test clc int cmpsl or faddp aad stos jle (bad) mov push mov int3 jne icebp pop xchg add repnz xor repnz test (bad) into pop jns ja fisttpll lret fnstenv scas pop cli out nop inc sub inc test jge mov pop jg lret mov rcl or sbb loopne cmpsl (bad) pop mov in push ds mov das push jnp adc push push jbe push es adc stc add adc mov (bad) xchg out lock pusha xor cmp sub js jecxz ja xchg (bad) out test xchg xchg jo cmp lds loope inc fwait pop ss call enter adc repz cmp data16 mov or xor mov dec mov sbb push lret mov xchg sub test jb imul push sbb in cmp and aad adc xor out int int3 movsb cmp fwait imul fisubr push cmp sbb fdivl into jg xor inc out xor mov push pushf stos cmp jge call leave je sub mov enter mov fidivl push lods adc ljmp mov and push jo lds int3 jmp sub cwtl (bad) lock push pop mov in push pop xchg sub sbb xor ret inc pop pop ss xor hlt mov xchg fwait iret in xchg addr16 jbe add test xchg in cmp pop adc fistpll das inc into dec pushf xchg lods iret loop dec popa or push pop inc jb aas xor sbb shrb cwtl ljmp adc adc fmuls push push clc jo cmp mov test (bad) aaa push jb xchg imul sbbl cmc pop xchg adc jl (bad) pop inc std or shll mul test or adc jp mov mov ja push jge sub push push pop aad (bad) das mov sbb jecxz test dec out rorb das push ret popf dec xchg les push push jno je ljmp subl xchg shrb fmull push test or fadd or pop push push xchg jmp test aas (bad) adc icebp aaa stc in pop adc mov popa sub xlat ret clc fsubs movsb rolb orl imul mov popa jno jne ficom in test adc cmpsl (bad) icebp sbb ja inc jp push je popa sar xchg les orl (bad) popa mov push fmul cmp push cmp mov hlt pop shlb dec inc push sub xchg imul pop pop cs jge dec pop fbld arpl cwtl push xor insl pop movsl outsb jbe,pt jecxz xor mov fld add inc in xchg imul and clc out sub sub data16 das and mov or pop and arpl sub mov movsb lods repnz je stc fdivr push push cmp ds and and xor lea mov mov push in xchg lea mulb scas mov xor jne add jg insl xor arpl adc aam inc mov cs (bad) jle or sub ficompl stos inc cmp jmp or mov lea or leave add icebp lea in repnz call cmp nop add cmp out outsl mov xchg or imul cmp mov or aaa pop into (bad) not and lds in ja pop test jbe xchg pop clc xlat jmp or into adc xlat sbb out stos insl (bad) or nop in scas xchg mov push and push add mov movsl or and xorb (bad) jge lods (bad) sti ret mov and aaa push and scas pop push mov fs xor sbb fwait popf dec mov cmpsb ss ja in aaa mov push jp (bad) mov lcall cs add fnstcw mov push xchg pop adc mov fwait jo imul repz ss xor (bad) sub test xor xchg (bad) fisttpl movsl icebp sbb jle int sub dec mov or add fs outsb std cmp jns movsb cmp out out push (bad) mov adc pop (bad) pop (bad) arpl mov adc fmul ds jmp mov movsl int push ret push int in inc inc scas into addb popf dec inc cmpsb jne fcmovne sub in push jnp mov testl in or mov lret or fnsave pop add adc int (bad) fldenv stos adc aas add out (bad) sahf out stos lcall adc pop imul mov sbb xlat sahf lods and cwtl lahf jb movsb pop cmp push (bad) jbe jl into enter cmp mov ss test gs adc popa inc rcll xor pop push mov test dec enter fwait ret add xchg dec jg les jno or stos and out dec jbe dec ss test cli mov sub mov cmp shll and or push jg fistpll ljmp and jle or lahf pop push mov cld stc jno sbb cmp and adc shrd cld and cwtl push fdivl daa or jne insl (bad) cmc push test xchg js sub iret xchg lock xchg rclb pop aas or cltd mov lcall jp inc mov xchg roll test xrelease roll push jae mov and and mov lds fsubrp rcr inc xchg repnz jl sbb call dec mov mov faddp mov and sub shrl mov pop lret adc enter push pop sub out repz nop or xchg dec mov mov sub pop bound and addr16 movsb (bad) jo push (bad) pop xchg sub sub imul mov jmp movsb jg lods fcompl push pop gs call xchg sbb cltd insl clc xchg rcrl je mov dec cmp xor inc pop in sub shrb in push lds cmpsl outsl daa push in into mov push sbb dec ljmp pop (bad) dec mov mov adc lcall fcmovu daa mov inc inc movsl push and pop repnz mov jecxz pop test add and dec outsb popa xchg mov xchg scas test nop loopne (bad) jmp (bad) popa out mov pop ljmp push rclb scas dec int add popa cld or adc and sahf inc mov fwait xor lcall enter cmp incl push hlt jmp ret dec orl sbb or mov push in cltd mov jmp in xchg clc (bad) aas jmp in cmpsb test movsb jne add (bad) jbe fisttp int add sbb into lods mov mov and scas pop mov sub cmpsl mov dec aad loope divb cmp iret (bad) dec jno push loopne sub js fsts xchg ds imul sbb hlt mulb mov dec clc push and push jmp js and movsl (bad) cmp add mov pushf mov xchg or push dec xor out sbb jbe cmpl mov stos push insw fbstp rcr jnp jecxz (bad) jge out jg imul xchg ffreep ljmp (bad) ss gs push mov es in loope hlt xchg pusha sub repz test ljmp shl cvtps2pi xor (bad) cmp (bad) je xor inc adcl aad and loopne mov lahf int and stos or lods xchg mov jne sbb and and jnp arpl test mov sbb pushf mov lods ljmpw popf or sbb loopne push or mov shlb test xchg sbb jne xor sub fisubl cli call sbb fmul jge sub sti pop sbb repz in mov sbb mov adc (bad) insl bswap stc push jno pop adc mov mov ds mov and push jae push sarb cwtl insl pop jle,pt sub fdiv movsb xlat (bad) or adc add in push mov cmp mov clc sbbb rcrl mov dec jp sub repnz jl in mov repnz imul fistp lods sbb decl fdivr adc mov js ret lret sbb mov push dec int or inc sar scas mov aad cmp nop mov fldcw rolb (bad) sbb push loop rclb add cmp ljmp adc shrl je jne lahf int jl adc mov inc mov and pop insb mov mov cmp dec mov jle and pusha jmp inc imul push ret adc clc mov fs mov cmp lods enter fwait push sbb shlb ficoml (bad) popf adc stos inc adc xchg int3 xchg and jmp mov loope jecxz (bad) repz mov xlat mov xchg xor mov jg and add gs adc orb xor pushf or cmp ficomp stos popf int3 adc addr16 xor pop add pop adc (bad) pusha cmp cmp push adc stos (bad) sub imul in pop mov mov jb sbb xchg (bad) lock xchg outsb sbb and xchg inc cmpsl cwtl sub pushf add sub dec cmp xor mov imul xor stos hlt cmp xchg jle sub xor adc clc add fmuls xchg cmp pop icebp daa shrb lock add inc pop pop pusha cmpsl push idivb mov add mov dec bound xchg notb xchg jne lahf push jl inc lods adc mov addb mov sti in je sub out cmp pop mov jmp fimull and pusha mov pop ret jae push scas repz dec adc ljmp insb dec adc xor sbb mov jo push mov mov out scas cmc add jne addr16 nop cmp cs jp mov and adc lret iret movsl cld jne adc xchg flds daa xor les fstps mov mov daa mov lea iret pop xor int testb mov sbbb fnsave cmp pop (bad) or lcall imul add jge fadds leave ret outsb jo popa push aad jae inc jb fmull popa int jg pusha sbb mov int3 (bad) inc icebp in in cmp cmp aaa test imul inc insb sub int mov (bad) xchg pop cmp sbb pop xchg rcrb rorb sub std aaa adc push push fistpll (bad) lock test pop and std sub or in in mov (bad) mov mov test aaa pop jns fldl jae and push (bad) mov fs in jne das and scas add pushf adc sbb inc or (bad) fcmovb or imul pop call or cwtl xchg jmp mov sub mov scas scas mov popf jnp mov xchg adc and adc jmp js pop ficom sub jmp adc jle jge in sbb loop sub add xchg xchg test adc stc lods in ror dec movsb fidivr xchg mov in sahf push dec loopne in mov pop mov bound lods xchg cmp dec gs xchg sbbl sbb std shll and incb ja push and push mov ret in pop mov fldl mov mov sbb inc xchg push js fidivrl sbb hlt cmp xchg jmp clc int fimul jnp sbb push push add dec jnp push adc lss push push sti sub dec je mov ja cs xchg add out xor mov xchg mov or jp fmull out and ret mov shrl jp pop pop sahf loopne (bad) push sbb pusha js cli dec mov cmp pop in fisubr enter mov dec sub mov mov scas ds jp push pushf enter push (bad) fistl std and inc (bad) ljmp cmp mov push outsb gs rcrb imul or or test xchg out dec xchg or cmp jg mov fadd (bad) cmp insb jne inc ljmp dec int3 scas test jg mov jge adc pop pop sbb or adc push push outsb inc sbb xchg mov dec nop lods inc shrb push ja imul ds pop push mov cmp (bad) sahf cmp test xchg test and jae or adc and cmp bound rorb in mov aad and sti aad arpl cmc jae mov test inc push sbb cmp ds fisttpl lret mov push dec xor ja cs mov adc (bad) sub pop (bad) fadd cmp mov insb je xchg sub test hlt shlb into sbb fwait mov movsb push inc call sbb in jle sbb pushf push xor test xor pop jns das mov push and jnp mov xchg inc (bad) call fildl xchg add cmp mov mov rorl push sub aam pushf inc push xor sub aas (bad) pop fcoms lahf jp pop leave dec xor sub cld je fmuls movsl ja mov in xor shll jbe push pop inc push pop sbb pop fsubs stc add mov jp imul mov in loop adc xor xchg pop out and inc out jns fdiv je lret add lahf cli push push sub add decl mov (bad) pop cmp cwtl fbstp mov repz aad inc inc leave push jbe xor jo pusha jp fs insb lret push scas mov sbb dec xor rsqrtps pop (bad) jle add int3 dec or or xor xor push add out cmp push fs cli into clc cmp stos xchg push insb jns (bad) aad iret aas into jbe ret push push sub pop lock cs out aad cmp cmpsb inc js sub test pop sbb std leave push cmp add cmp inc int lods ret mov mov adc cmp jno and repnz xor pop imul int3 cmp sbb pop fldcw mov fbstp cltd push lds (bad) dec iret lahf insb repz (bad) inc arpl sarb xor into sub jmp jl mov adc dec jle pop pop pushf aaa into ljmp add cmp mov (bad) cltd cmp dec cmp cld mov loopne dec and mov (bad) ja add cld lea inc jl adc push stc movsb inc sbbb scas mov mov aaa nop xor inc pop in cwtl mov and int leave pop bswap mov push cmp jns mov pushl movsb xlat or xchg movsb stos shl outsl cmpsl enter cmp fiadd mov aad (bad) stc mov jmp call dec sbb xlat add lock inc movsb in fidivr insl xchg bswap loop test pop in cmc add je adc cmp and fsubr gs mov inc in hlt add mov sub sub loopne jmp pop pop push push xchg out pop sahf pop pop xlat lret lods int jecxz in mov in jb test fisubrl xorl or outsl pusha lods mov sar cmp sarb xchg mov ret rcrl sbb cmpsb notl push popa sbb jmp inc xchg repnz adc pop fldcw jecxz enter nop adc and sti test xor fildll push cmp lock pop pop ljmp mov ret testl lret repz pop inc inc pusha rorl cwtl sbb in adc mov icebp icebp fwait inc pushf adc push dec lcall popf (bad) or mov cmp (bad) ret or stos mov adc sarb add jo loope jecxz sub dec ret mov pop sub mov popa (bad) or scas iret jne sar jbe jmp nop sbbl subl pop xchg (bad) push (bad) inc test clc outsl das and jnp mov mov scas or (bad) out xor xchg (bad) dec sub jb ljmp pop je ret cmp mov or adc mov das or ret mov inc mov outsl mov mov jae cmp sbb cmp aaa fs pop mov scas mov addr16 xchg jl and xlat rcl xor xchg mov or cmp adc xor push mov cld push pop pop mov rol dec inc mov xor xor xor sub cwtl cld mov (bad) pop push mov imul push out popf mov fidivrl repz gs int3 fadd adc xor mov imul push mov add aaa test xor xchg cmc (bad) mov ss push cli aas xchg test repnz add fdivrs add imul or mul xlat pop cs popf pop sbb cmp jno stos nop aam push pop (bad) (bad) loop sub aam add dec jb loopne add mov sub pop jno dec or cmpsl mov lods mov adc fdivl subl adc inc adc add jle shll jb dec push push jmp clc cmpsl loopne mov (bad) aaa and or call repz adc push pop (bad) je mov pop loopne dec cmp push lret in jae push or xor enter pop adc insb add cmpsl ds aad mov leave add pop inc dec lds xchg scas fidivr (bad) shrb pop insb mov xchg int xchg divb push xchg sbb xchg jp sti mov sub in xchg sti pop add adc imul cmp push aaa outsb movsb xchg dec lahf jae fstpt lret (bad) ss push shrl cmp or pop leave aaa pop mov jp pop arpl add mov idiv aas loopne pusha cmp (bad) in rorl aad mov aam pop out mov lret mov jo jle inc sub dec dec adc mov jle mov ret push cmp das test pop aad test or or test pop hlt outsb in and adc shrl mov jg inc gs add sbb int3 les das hlt loope leave das imul or sbb pop addb imul jmp xchg fwait test push bound pop sub mov dec fiaddl scas xor pop jbe and idivb cmp ja push sbb ret mov push dec or xchg inc pop sub ja adc je cwtl jnp aam mov leave inc imul or stos lds dec push in popf cmovnp out sti pop pop jno mov test inc cmpsb movsl outsb mov cli (bad) stc cltd cld xchg push in pop loop adc setae dec sub mov push or pushl incl popf sub data16 jmp jg pop adc (bad) int imul ret xchg aad adc call scas xchg or leave out out inc and mov lret mov mov ror or insl mov xorb pushf test push adcl push inc push inc sub cmp sbb mov insb shl sysenter scas cltd adc jnp or rcll dec mov out outsb mov mov push sti xchg mov mov xor jle push out sub popa cmp adc xrelease fsubs xchg addr16 lock mov push add daa out push jb cltd outsl adc push mov js idivl loopne ret cltd les dec push and and rcr insb pop fildl jb xor (bad) sahf jl jae inc push or sar loopne jno push xor cmp add ljmp xchg mov xor popa test lret inc xchg jmp sub stc popa cmp cmp ds lret pop sti jae mov and pop sub lea sbb dec push and stos inc or sti and mov push std frstor int3 repnz or gs sub cli in sub pushf (bad) mov jnp popa or ret xor out pop stos xlat scas out xor or inc xchg jg,pt scas mov and xchg out in pop lret dec ljmp ljmp and adc push clc xor xchg and sbb test mov jns mov and leave insl cmp jne mov and iret (bad) xor mov sbb int3 pop mov adc test add dec sbb xchg cmp (bad) ja ret rolb add mov jle les call ffree lods mov in sbb or jmp repz xchg negl cmp fistp mov ljmp out or adc jge popl shrl jns iret pop pop sarl sbb gs addr16 movsl imul std lock mov nop in aad mov jne mov ljmp cmp cltd adc (bad) stc repz add addr16 xor das in out repnz idivb jnp loope les xor xor sbb lods inc dec rcll cli outsl repz leave or mov xor jge,pt jnp cmpsl sub push inc mov or cli mov xchg test stos or ja shrl push fisub mov cmp adc lret sub orb jle lahf cli adc or dec iret and out jb push lahf mov mov in sbb mov push fwait push out sbb add daa sbb pop repnz jnp aas (bad) (bad) (bad) wbinvd dec jae cmc movsb aaa daa mov pop cli jae cwtl push sbb movsb jge std push add sti std pmaxsw mov fidiv sub loope jmp fbstp (bad) mov or nop mov (bad) xor inc aam imul pusha popl push adc push lods add push rclb and imul arpl aaa push repz aas clc dec pop pop push mov push add jb push nop test std add ja xchg adc lret push insl cli push loope adc loope lret repz pusha cltd sbb mov popf sbb adc mov lods mov adc mov jnp lret or push fdivrp dec out mov (bad) xlat imul in test mov cmpsl xor xchg xor mov adc lahf (bad) outsb push jo int3 cmp add test jns iret xchg mov pop mov push mov daa sbb (bad) inc add imul rcrb pushf mov and add xlat mov pop or sub sbb lcall push mov fnstsw in xchg lods jmp (bad) into mov adc mov inc xchg lock pcmpeqd cmp sbb mov pop jecxz outsl arpl push xor mov pop stos and adc xchg mov fnop mov lret movsb mov add out mov pop fistpl stos std sahf iret pop cld jbe ret mov repnz cltd sbb add dec push dec push cmp xchg dec pusha loope cmpsb in icebp push jns imulb mov js lods divl sub pop not pop outsl dec in jne and mov ret sbb push in and mov faddl nop sbb xor clc sbb cmp jg arpl adc jmp mov jae out push loopne arpl hlt insb sbb das dec jno sub push (bad) popf ja adc jp insb and xchg test mov or (bad) pushf mov xchg iret fildl sbb aad adc xor setge adc sbb (bad) insb mov push or mov imul or gs orl stos pop out out imul inc mov jnp iret push mov add cmp xlat xlat dec rep push jnp xor pushf stos hlt ss pop outsb add dec mov add sbb pop ja test imull jb or cmp lock cmp dec pop jge pop ret into push loop cltd jb out adc in mov call push roll ljmp testl mov ja push cmc jecxz mov cwtl dec pop lds add cmc dec pop inc cmc inc stc inc push sbb cmp inc (bad) sub test pusha das sbb inc cmp jo rol pushf or add in mov inc xchg xchg (bad) neg leave fnstcw sti data16 pop push js sahf ret stc out mov or inc cmp fsubrl jne sub sbb in adc dec and int fidivr iret outsb imull aad sub push lcall inc popf mov dec inc xor (bad) pop xchg add das sub (bad) (bad) bnd bsr stos mov mov mov mov mov outsl clc mov jmp mov mov pop cmp xchg imul sbb inc adc pushf (bad) lahf xor pop xor arpl mov inc mov xchg (bad) mov cli nop mov std adc mov and popa dec sbb push mov adc sar push sbb sarb das mov and dec data16 mov push cs bound add dec jns rcrl in mov jg sbb sbbl mov sarl enter pop push or lcall scas jo adcb mov cmp fmuls sub aaa sti push fiaddl test mov clc insl dec inc pushf and dec lahf mov loop repnz adc in fcmovbe mov cmp icebp jp jle cmp jge push dec mov cmp lahf or or movsl (bad) gs iret xchg int das adc in adc pop jb push test out (bad) idivb xor pushf pop lock sub xchg repz pop pop jmp mov aaa xor in mov cmp lahf adc and int into sub add jg or add jle sbb adcl (bad) jbe hlt divl mov hlt xchg push out andb xor (bad) sbb mov repz jp sub (bad) movups mov aas pop jp sti xor jae aas mov inc rcr ffreep daa xchg out dec jge,pt arpl dec jbe lods out or je decl sbb cmp adc dec lret ja jno xchg jle dec popa add cld out fsubrl fadd cmp jmp sbb imul jns ds (bad) sub xor add add cmpl and dec fistp pop jne jnp in sub int mov test cmp sub adc cld (bad) nop rcrb add scas cmp test pop jo cmp rcll gs push jge xlat dec lret jbe push sub sub mov push xchg fucomp mov int3 push add fidivr inc xchg and leave dec xchg mov and push scas addr16 adcb lea lods adc push (bad) mov jo,pn mov inc push jge sarb es xchg cmp push fisttpll sbb mov iret jmp test mov dec fsts fbld add lea push and aam mov out in xchg mov mov jge push in out lahf (bad) cli xor out in push jns int inc sbb inc dec mov jl mov ljmp sub push stc or xor fnstsw sub lods xchg dec bound add push (bad) out test cmp in das fdivr adcl das mov outsb jecxz jmp push inc mov xchg xor add xor mov add jmp ja out mov in cmp xchg cmc push pop leave cmp in and add or scas jle pop sub mov cli xor (bad) out loope loopne movsb fldenv dec test push jecxz sub inc not loop push das dec cwtl push cmpsl or movb xor in fnstcw in not fstpt clc mov adcb push jp mov stos adc loop aam cld ss mov adc sub (bad) jne imul fstpl mov lods shl inc mov loop shr sub sbb paddsw inc add xor xor mov popa in mov lret repz push or inc mov daa (bad) enter push mov dec into loop jge jns jg in mov sbb mov popl mov jbe loop aad dec adc adc fdiv mov pop xor fs js bound outsl aas test andl cmpsb lahf sbb stos mov out test push daa lods data16 cmp and pop clc ret mov pusha addl out adc pop popa inc stc ret push popa inc jnp (bad) mov scas pop dec sub roll popa jg int3 jno inc mov pop dec mov cmp clc dec mov loop xchg mov jno fxch xor dec imul push mov jl sub adc push jno sbb je mov test bound jg push test cli lods (bad) mov (bad) sub (bad) jmp ficomp and fwait xor dec push adc gs mov mov (bad) jle push or insl and xchg shll inc xchg adc pop add pop call mov xlat fildl xchg mov fnstcw insl mov pop or repnz adc bound xor mov mov je js cmp rcl mov jbe mov stos push fnstenv xor rclb scas movups cmp int3 (bad) pushf mov test div push jae lcall (bad) sbb (bad) mov ret rol sub sbb in cwtl into cmp fwait pushf repz fbstp loope rorl push push lret stc ds (bad) jo cmp adc push sahf pop dec cltd sbb sub add pop aaa pop fimull add inc scas xchg fmuls inc dec sub dec pop mov mov mov (bad) jbe jle je stos mov popa and jg adc jecxz hlt push scas dec dec jl repnz subb push cmpsb mov aad jp dec pop insl xor enter cmp push lock adc inc jl xchg movsb in arpl int sbb sbb xchg subl xchg xor loopne (bad) push mov js xor mov ja jmp mov add mov (bad) aaa popa mov jg es in push cmc push cltd jmp lret dec cmp jecxz and or scas and out xor add inc lret repz rcrb sahf enter jge aad shl ret stos mov in and (bad) sub mov call enter push int3 xor mov stos mov push or mov imul or test or push xchg xchg outsb inc das fcomps mov sub pop jge ja adc jg fwait mov adc push xchg dec xor mov mov mov pop push in mov push fbld fistpll push das push std rclb repz or in and push jo test stos pushw (bad) jl ss cs mov aad xor rorl fistp inc jmp dec (bad) cld loop cmp cmp scas aad mov pop mov es mov adc call insl add inc pop scas push mov fstps in ss cmpsl fcompl mov lcall call arpl xchg cld mov mov pop rorl inc xlat cmc shlb xor mov scas ds movsl adc imul pusha mov (bad) cmp pop fildl loope inc cmc int mov jns mov stos cmp iret push jmp sbb sahf int3 xchg push and pop xchg out mov mov incl call ret add out or imul je xor xor and fdivrs jb inc cmp pop in adc jp icebp push leave movsb pusha xlat out popf xchg and sar (bad) sti pop mov leave in sub xor push cmp lods addr16 ror cmc xchg adc (bad) xor mov add add sahf int3 cmp cwtl push mov mov mov push leave sbb pop in ja jle mov xchg or lahf push xchg sub pushfw in cmc loope mov test mov jge pop add fisttpl cs faddp cwtl pop dec out out xor out aam sahf ds addr16 sub sti push xor inc mov je test rorl leave xchg arpl imul sbb inc fsts sbb es fmulp pushf loope jge js mov push push lea mull lock push jo sub mov lret imul add xor jp pop dec push movsl jne repz popf mov push insb incl push mov mov pop test hlt sbb test int3 imul bound xchg jns les mov lods mov mov jg dec sub test rcr fild pushf mov sbb scas add adc push or outsb jg je insl or sub dec fstp mov arpl mov imul lock je cltd adc cmp jl xchg sbb jae inc jbe mov mov xchg data16 adc mov pop jo lds lcall sbb (bad) sbb in xchg add fs inc xchg push xchg xchg enter cmp cltd mov pop mov bnd push lret add pop and into daa cmp fwait subb clc pop pop mov imul ds hlt cld lods repz mov cmp sbb mov jg xor cmpsb adc leave push jbe ret push lds jmp xchg aaa push repnz xchg pushf int rcrb adc inc adc sbb mov scas pop das movsl mov pop repz mov rcr ljmp and push jp inc imul scas hlt (bad) daa sub pop mov inc insb aaa mov xchg lahf dec xor (bad) push mov jmp cmp add cmp push fstps adc sbb fisubl mov jp mov pop shrl clc adc dec sbb pop cmp or and push jmp pop clc cmpl popf imul leave and stos mov test mull dec mov aaa test btc sbb lods test push test add imul insb divb out cmp mov outsb and cmpsb sbb xlat jmp arpl and adc jp cwtl xor mov test js (bad) push int jb sarl test xorb shlb push push mov (bad) push int3 mov jmp ds jmp inc xchg mov daa jg mov jne int shlb jg push (bad) cmp es and popf xchg and stc inc arpl dec dec cmp cmp sbb ret mov aad mov jo test cs push pushf pop cmp loopne insl push mov pop mov xchg ret fdivrs outsb cmc lahf ljmp xor loopne (bad) pop sahf cwtl jle push jae insl dec divl stos test jne arpl or mov arpl inc add inc lea lret sar add (bad) icebp bound xchg xchg pop mov xor inc and dec pop ljmp test stc cmp js sbb lret cmp int addr16 mov dec cli push lret push clc repz mov out test adc add out imul mov or insb movsl jns jg (bad) je xchg in cmc dec out jbe push mov mov cmp pop aas add andl pop adc loopne jnp push arpl clc pop loopne or addr16 lods pop inc lcall dec sbb testb xchg test gs mov mov pushf mov xchg pop repnz out verr adc lea inc cmp test inc loop push push push mov push or repnz stos add leave shrb mov mov lods adc mov (bad) and idiv cld fwait scas jns push mov imul jo xchg push sub cs jp sbb lret push mov out mov dec int movsb mov xchg xchg fldl add cmp adc xorps sub scas divb popa loopne (bad) rcrb (bad) enter mull test insl lret sbb sbb pop xor and push (bad) pusha xchg (bad) into and push mov mov je fcmovbe jecxz repz js push daa and mov adc sbb fmulp clc (bad) pop cmp int3 rcrb movsb adc mov sahf inc loopne outsb xor cmp scas add pusha icebp sub fwait mov ss ljmp stos mov mov jle (bad) adc rorb push mov shrl pop nop fs js int repnz jmp jecxz loopne push adc mov dec xor icebp pushf outsl dec add xor inc cmp stos (bad) pop jnp jne nop cld jp cmpsl sub cmpsb arpl xchg and xor or push mov cli int cltd cmp mov scas xchg ficompl fstp jb and push cmpsl lahf or push dec xchg cmp mov fwait cli jecxz ja inc mov aam cld in sbb mov cmp adc inc les sahf mov inc add xchg mul sti fs (bad) cmp push xchg (bad) jmp jo test push cs aam cli pop pop sti mov jge cli pop dec jg sbb add inc pop hlt pop push das sbb outsl xchg lret cld cltd cltd test xchg bound cmp in adc cmc jg mov sahf (bad) idiv fcoms and ds lcall add jbe pop sahf sub movsl xchg dec push and xor jo fcoms lahf (bad) pop cmpsl jmp aaa jne pop out jns cmpb addr16 mul fdivs lret stos adc pop xor lock dec pop ja inc mov and sbb loop mov sub aas mov cs nop ss shrb and xchg inc or mov sbb push jge and pop sahf stc in icebp je sbb repnz test jbe push inc imul add gs or dec xchg lods sub pop cltd pop push js mov lock outsb sti icebp push sarb cmp pop iret dec out jno push cmp (bad) jne sub fsub mov and enter mov fmuls mov (bad) pop (bad) cmc mov pop in fadds and ret jmp lret (bad) pop loope pop jl sbb xchg or rclb jmp cmp pop insb js int movsl sbb mov pop aam stos data16 test jns and push cmc das jmp push xchg mov push add dec fs mov test stc fnop into (bad) leave in xchg pop pop movsw (bad) add lods mov aas xchg cmp push mov and push push (bad) cmp pop sbb jecxz mov sbb push loope xchg xchg sub hlt mov cwtl repnz mov out icebp (bad) div movsl popf pop xchg mov adc mov mov rcl out loop hlt add xor ret mov xchg mov fsubrs mov mov dec rclb xchg ljmp dec inc jecxz in loopne sub mov cli sub cmp sub and in test sbb and rolb adc inc mov enter pop cmp mov popa jecxz jle (bad) and popa icebp leave mov dec jae lods aad cmpsb sub and inc jne mov jp aad daa lcall std cwtl insb js arpl mov mov and mov fmul test leave jl jne dec add inc mov sub das test and pop aad mov push pop cmp in ret sbb nop aaa pushaw inc in rorb mov xchg jge sub xchg pushf or xlat stos push int3 sub test pop and and fwait nop xor xchg pop add shl mov pop jle mov (bad) mov xchg aaa lret lds fwait jns dec rcl and jmp ret rolb xor mov repnz adc aam pusha cli xchg cmp pop ret xchg mov es fs jg or push sub mov stc ror cltd or out push mov xchg fistl out sbb mov cmp clc ljmp pop repnz inc push daa lods fcomps lea (bad) sbb push bound mov jl pop test pop mov (bad) lock mov loope cli test xchg sub inc dec mov mov dec adc xchg sbbl popw and notb adc xor (bad) lea cli (bad) dec lock jns mov test sbb mov inc jl movsb out das test les push mov add (bad) jne cmp dec dec sbb cmpl cmpl out mov dec inc pop push ja stos cltd sbb mov (bad) in ret jnp in shll jns mov stos ret popa xchg int aas lock xlat (bad) (bad) xchg mov sub pushf addr16 outsb push aas add bnd sbb out roll inc fwait pop into outsl push mov jge inc lds ret pop sub fstps adc cmp fwait pop insl ret pop xor mov out jmp cmpsb pop mov cmpsb into les das cmp test inc or loop jg cmpsl mov pop pop (bad) sbb pop in test stos mov test test loopne and fldenv cmp xchg fistpl add mov push ja mov icebp jle inc (bad) lret (bad) push adc je scas cmp pop daa dec push lcall push cmp jmp int3 fldenv add cli and sbbl add pop inc mov mov and popa cld arpl push sbb mov sub fimull (bad) lahf dec xor xor pusha push mov aas nop jle jp lods cmp jle push in aad sbb div mov pop mov push out sarl lret (bad) loope cmp paddd or arpl xchg sbb push xchg outsl cmpl test roll lcall scas mov insb jl push aaa inc pop push and mov sub test stos push mov push repnz mov out movsl stc jnp cmc stos repz xchg imul inc push fs fildll add mov or (bad) add sbb inc dec xlat inc repz sub sti xor movsb dec cwtl push rcl jl pusha lock mov pop dec popa scas inc scas and jecxz pop adc pushf loope sub mov jnp int pop (bad) or ss fisub pop js inc xchg jge (bad) pop and cmpsb inc mov out xchg cmc sbb sbb insb insb roll sub mov ret sti aas incb ja clc rcll adc pop addr16 mov in popf dec (bad) out cmp out insb idiv xchg mov std out cmp jbe push pop jne (bad) aad adc repz icebp cmpsb xor in push sub mov and jns mov dec push jmp popf fstpt data16 es cmp mov add inc dec jno push in (bad) fcmovnb xor ss adc jb mov jb xchg inc out popf gs mov jmp cmp jae adc sub mov xchg adc std cmp idivb mov inc pop cmpsl (bad) (bad) pusha (bad) jbe je bound (bad) sub mov jge fsubrp xlat cli mov imul pop mov insb aaa sbb sbb jmp push sbb mov pop jne adcb daa mov sbb out ljmp cmp mov dec into lods dec jb and adcb mov pop ds cmovge shl cmpsb lsl imul sub ret jnp or mov fadd nop in cmp stos xchg sbb xlat push sbb xor inc int push insb jmp inc aaa sbbl scas xchg cmp (bad) mov jns fst mov lods cmpsb push (bad) (bad) shrl cmpsw lds out lret push movsl fnstcw mov dec arpl dec pop ret (bad) mov jae,pn adc dec pop in aad dec mov mov (bad) xor dec outsb loope mov (bad) bswap addr16 movsl push mov je,pt sub data16 mov cmpsb lods adc pop inc and arpl jecxz dec iret lahf push xchg jle mov inc lcall repz mov adcl add cmc inc jecxz lcall in mov int xor call or sbb mov push jb pop and mov sbb xchg ljmp negb nop mov xor orl ds mov add or pop ror mov sub jp fwait mov mov xchg sbbl push rcll insl dec cmp imul sti and insb sbb jge cmp dec fucomp and inc imul xlat lret xor mov je icebp mov and repz sub call xor div or jae sbb mov addr16 xor dec (bad) sbb and mov mov lods movsw cmpb push daa sub xor in in aas inc jbe imul in aad in inc shrl cs leave pop ljmp lret aam iret lods test xor test inc popf and jge bound xor hlt (bad) enter stc pop pop and popf in push cmpsl push outsb and lcall jmp jg inc mov inc cli pop mov pop movsb sbb loop mov sub push enter xchg sbb ljmp jg imulb add aam js push or pusha mov ret or mov scas sbb in ja jno call push xchg out or push pop xchg xchg jle and movl jmp rorl les push push ret fcoms lods cli fnstcw sahf loop sbb mov (bad) xchg xor pop inc fisttp movsb mov js inc (bad) xchg jge jp scas mov decl mov jl inc mov xchg (bad) ret add jmp xchg cmpsl fnstenv add mov push lahf shl jge cwtl aaa mov xor sbb inc jecxz push mov lcall clc lcall (bad) dec jmp ds cmp lods shlb out mov add adc xchg ja lock jno cwtl xchg mov sub or es sbb cmpsb sbb push pop iret test idivb adc fmull scas and imul test push arpl jb add add (bad) lret push pop out into shrb xor push loope (bad) fild cmc rcr loopne rcl jb cmp mov pavgw fsubl js aad push pop popf mov xchg adc inc jns lods cmp std setns lea out or and sub mov dec lret sbb inc dec adc adc rclb loop push lahf imul sub (bad) cmp dec mov adc dec xchg inc mov push aad dec cli push std xchg mov pushf nop xchg add adc shl xor lahf mov xorb aam xchg in dec cld xor inc sahf pusha scas pop sub shrl pushf pop shlb xchg int3 mov mov pop out mov mov xchg pop enter sub loope dec xor xor mov aas inc inc aas shrl inc xchg movsb ret mov (bad) push mov cld outsb pop shrb push fdivs (bad) popf sub bound jl ja mov mov lcall xor data16 adc dec rorl sarb and std fildl arpl sarl or adc pop dec loope xchg pushf fs mov roll sub addr16 ljmp mov push pop add test pop jae jno dec das (bad) push dec stos int3 loope mov imul xor insb fidivl push lods jno cli pop in inc dec aaa rorl sbb dec xor roll ss or jb bound dec and dec jae test loop xchg lods or and call inc xchg jbe mov xchg int aas xor loopne fsubrs stos sub into imul (bad) jne mov sub pshufw and pop mov outsl inc sub rcl inc mov cmp xor inc (bad) and bt or cmpsb fs cmp sub movsb and (bad) punpckldq aam subl inc js pop leave fistl add insb data16 popf loope cmpl mov xor mov sub xor imul sbb jno stos fptan pop pop lea sbb and pop pop js jo scas or fimul push jns imul stos rorl ret test or dec pop roll xor jne sti pop imul mov stc lret hlt sub outsl inc pop adc rclb rorl jge add inc mov sahf dec into pusha ret and push (bad) push mov xchg sbb pop jne aaa mov aad push stos fdivrp stos push xchg (bad) aas dec ret pushf sbb push icebp out lea lds mov jp (bad) jecxz sti les adc sar test or shlb in out jb fmulp lcall aaa sbb jle mov repz std fstl cmp add pop mov xchg jecxz inc push xor lds jle mov outsb aad (bad) dec pop test in push mov push fidivl mov sbb loopne and insl lds aas imulb (bad) pop imul add add jne mov push mov sti imul dec pop sbb inc fcompl inc sti xor mov sbb sub dec and mov inc imul ds push and leave cmp xor jo fwait sbb xor outsb into (bad) xchg dec pop and sub push loop nop adc ljmp daa sub cltd roll push mov push mov orl or add std dec xchg fsubrs push rcrb mov mov popf icebp (bad) rclb inc into mov das iret dec das jle lods xchg mov push mov icebp daa hlt rclb sbb stos push leave (bad) pop pop pop loop daa mov sub addr16 pop lds and sub cmp arpl sbb dec out mov dec setne outsl hlt pop addl sub andl jecxz cmp pusha or and cltd mov mov loop jo add aad arpl jmp je test hlt cmc lods iret push xor ljmp stos mov (bad) and xchg lret mov daa aaa insl add arpl xor nop mov xchg aaa inc ds or out or orl inc mov rcrb lret mov xor pusha push jg inc gs jns popa loope mov notl add cwtl loope sbb pop pop mov xlat leave shrl push test mov data16 (bad) lret mov mov cmp outsb push js idiv je insl nop dec inc and out pop mov lock int dec (bad) jmp pop push scas inc jge aam imul inc mov jbe adc inc (bad) fsubrp daa jno pop bnd imulb out inc mov adc fnstsw sti int out mov cmp rcrb clc stos pop arpl je jge or pop mov xchg aaa pop add mov cld mov lret dec jle int sarl adcl sub int sub pop subb aam xchg xor mov inc adc loop xor sbb inc mov out movsb out insl std mov cmpsl repz add movsb or rolb ret shr sbb ds (bad) mov popf shr fstp aam iret dec pop insb push fs adc push sahf popa fisubr inc loop xchg or xchg add cmpsl pop mov movsb das cmp mov (bad) or sbb dec shlb loope ret outsb xchg mov mov inc mov jmp adc push adc rcrb mov jns into adc mov mov mov pop stos mov (bad) dec shr enter push (bad) mov pushf mov pop lock adc mov ds call inc icebp data16 hlt pop mov mov xor xchg cmpsb dec pop mov dec in sti add and xor push sub mov push or mov mov lods hlt sub int lahf sbb div or sahf push sub fdivl inc or outsb push push push sub (bad) movsb and sahf lret push mov sbb fs pop dec hlt enter pop (bad) mov aas xchg mov add shlb xor mov pop pop cld sbb test inc adc ja dec sbb out and xchg sub sub fsubrl leave adcb stos ret cwtl cwtl jns imul lods sub call das mov pop int3 jl in xor movb push or fisttpll mov sbbl fdivrl popa dec cmp fldt jno lcall stc rcrb out jbe repnz sub mov mov lods sub add dec jbe insl inc fwait xchg in add pop push adc xor pop mov in xchg dec dec (bad) ficom xor mov into sbb cmpsb mov jnp inc mov xlat (bad) cmpsb movb imul das lret add cmp pop ljmp bound (bad) lock jbe sub pop loope dec jle lret pop cmp cld pop xchg lahf pop or push test daa call jge dec sub lock jp aaa mov in mov cmp int3 jns gs stos xchg jnp push and in and stc cmp jnp stc lcall decb mov mov gs push es pop daa pusha cmp inc les stos xchg leave addr16 insb add sbb dec in mov setle sub mov leave or mov pushf (bad) cld and in jo test sbb mov outsb adc xchg fmuls insl add mov sahf pop cmp mov nop dec jns mov das mov mov pushf cmpsb mov add jno add pop dec mov js sbb and les (bad) repnz push ljmp addr16 jne xor ds xchg push sub or sbb xchg or ficoml packsswb rorb in sub es fstps xorl jae ds stos call push push rcr xchg sub jns add mov aam cwtl mov mov je jp movsb pop fistpll lods sub cli xor roll rcrl dec mov adc pop sbb push dec jmp clc mov mov pop les rorb mov hlt mov ret (bad) mov aad sti jge or gs fmul jo daa pop sbb (bad) aas push enter insb hlt inc ds mov inc jge lret sub mov lcall sbb jl and lahf push cmp mov outsb xor push and push call sbb aad cltd pushf je mov setge mov adc sbb or jmp mov ds in push ret lods js stos xor push cltd test inc mov ret mov mov in jnp daa cli and cmp inc pop incl rcrl int3 lock jns test ss xchg loope sbb jne jo mov adc mulb pop shrb mov mov pop dec loopne add mov cli pop bound adc iret ljmp ret xchg add dec sbb push pop in push xchg out mov jno cli mov mov rorb and inc pop pop cltd pop mov jae sub test push push fmulp decb or push es push cmpsb xor ss sub inc mov adc jge lods pop xchg leave lret daa mov mov fadds dec dec sub inc add imul add pop push xchg and mull sub jns sub xchg mov jne ret cwtl or out pop sub push divb sbb mov add or stc aaa dec fistpl and adc jnp jp imul adc xor mov and or pusha adc dec nop xor sbbl nop adc mov icebp pop lods test dec xor nop lea nop (bad) mov rol fidivr bound mov push lock js sahf xor clc rol cltd inc scas pop pop mov xor test insl test pop or and or push sti adc or mov test inc mov in imul mov shll xor hlt cmp adc or in out mov std sarl hlt popf int3 enter movsb iret jb and mov cltd lret lods call mov and adc psllw xor cmp aam pop repnz lret aaa xor inc insl enter test adc xchg (bad) and ljmp jo jge jns ja add repz loopne test jle (bad) js cmp push push arpl add jge mov movsl mov jge fdivp adc sub dec hlt lds push jl inc mov add mov iret fcmovbe push shrl push gs scas ljmp mov cmc out cli mov (bad) mov enter sub arpl cmpsb leave idivl test xchg push test and jle cltd xchg mov xor jne pop dec pop mov cmp inc mov push mov sub pushf cmp mov and xchg mov mov adc jo or or outsl aaa es sbb sub jne loopne mov cmp stos dec inc addr16 jno addr16 or outsl repz (bad) add mov and rcrl inc fucompp pusha sbb jae jbe sub sbb mov xor out stos inc fcoml mov jl adc (bad) jp mov mov and and inc jmp xor or xor movsb dec adc ret out inc add fs decl imul or (bad) mov mov in add in push lahf xchg xchg xchg icebp dec adc jo ret jno sbb test mov mov adc mov aaa imul outsl jge push sub sub lds ftst cmp ja add leave dec dec add add mov outsl cwtl jecxz xor inc push fucomi mov mov shrb sbb cmp dec sti cmp sub idivb repnz mov mov hlt sub insb scas pop add les iret js xor inc jae scas pop inc mov push jo mov mov enter fidivrl adc jmp pop dec push sbb push adc lcall push adc add cmp lahf jnp insb push shrb sahf pushf test inc test add add add popa repnz push pushf xor test xor mov es add stos mov into enter and bswap mov cmp cmp sahf adc mov in xchg and outsb movsl movsb sub mov into dec stos (bad) xor jbe xchg and mov popa xor mov dec cmpsb xchg sahf pop xchg push (bad) xchg out call sbb pop adc jge inc lcall (bad) in hlt cmpsb jmp test fadd sbb je ficomp mov das mov and leave icebp pop fnsetpm(287 stc add mov cmp hlt addr16 adc es inc roll in (bad) cmp jmp lcall nop or icebp cmp and aaa push les call icebp jno and clc mov (bad) fisubr imul cmpsb jo add push sbb inc jg dec ja push cmpsb jle cwtl xlat popf imul xchg cli addr16 add arpl fidivr popa pop inc iret dec xor xor pop mov xor es xor mov outsb push inc lock repz imul out push inc scas jns fstl shlb jo sbb mov rorl xor mov scas push and iret ret scas push xor xchg or mov mov mov jo ja mov mov xchg incl mov add push inc jmp call dec jecxz imul les push jp dec lret mov loope into push and (bad) enter jnp push mov nop adc mov mov cs jb pusha stos ret imul mov xchg out jmp inc aaa or mov out inc (bad) dec mov out ret push lahf lods push or adc xorl and sub mov out icebp daa in mov (bad) and bound cs add daa in jns or xchg (bad) mov push (bad) insl xor xchg fstps loopne test sub push xor mov dec jbe insl fs xor mov lahf dec sbb cwtl cmp jne sbb mov fistpll pop mov dec cwtl lds xor pushf push bnd in xchg in lock add and xchg mov mov cli nop jmp xchg pcmpgtd dec jns addr16 xor dec (bad) sti cmpsb mov sbb pop out dec in add mov and mov loopne out dec pop push loope fcmovb cmp cmp jmp popf sub fiadd mov addr16 xchg scas push mov jmp data16 ljmp loop movsl mov xor mov push sbb jmp in cli adc ret scas es out leave cmpsb push (bad) sbb data16 std fnstenv repnz in mov ja add popf mov xchg decb jmp add iret fs xor out xor call xor sub xor mov xchg mov rcrb loope or ss xchg xchg enter ret aaa and jp aam mov aas mov mov js mov fldenv jmp cmpl xchg adc inc inc repnz xlat int fs push mov addr16 out cltd mov pop inc sti data16 xlat inc mov sbb dec scas xchg fsubr jno out into movsl pop test or cmp in pop mov jb rcl rolb stc in pop or loopne xchg add sub aad cs rolb xchg pop aad xor movsb add add mov pop mov mov xchg sbb mov push rorb lret iret sbb pushf mov aad fnstenv jmp hlt xor jge out in mov and dec mov leave lcall xchg js fsin xor sahf sub xor adcl mov lret jns jns test jne ja rolb cli xchg cmp nop adc (bad) cmp movsb shrl data16 in pop cmpsb and aaa push xor xor mov xchg mov adc jbe dec jae fwait add pop nop or sub icebp das push (bad) lods test sub repz mov stos in pop and (bad) fs dec push push sub outsb je aaa jecxz jmp and scas cmp mov jne ljmp (bad) sub icebp out add sahf divb push mov out jmp repz jecxz mov insb push pop pop adc imul mov das negl andl mov dec jmp test cmp mov test cltd fimull mov jns fwait lods mov cmp jecxz das jne sbb mov daa mov mov add cmc scas push cmp iret lahf jbe mov fistpl adc sbb stc mov xchg enter fdivrs add rclb daa les std movaps das popf cmp sub cmp scas (bad) xchg jg aaa mov ss mov loope arpl or or pop pop (bad) lahf cli dec les dec cmc jae or inc or pop loope test fs push or fsubs dec cld fsubrs bnd mov adc lret adc cmp mov cmpsb outsb adc in inc xchg into clc mov stc ret rorl adc sub aas ja pop lret xor out dec dec pop mov fwait js adc jne pop out aas jne push xchg jns into ds pop lcall pop mov mov jl sub bound push mov test lds into fidivrl stc fs sbb sub gs dec xchg dec jne outsb pop pop (bad) iret fstps pop or push inc sub insb mov and inc (bad) scas add sub mov mov gs arpl xor bswap cmp (bad) in pop insl cmp inc push daa repnz jnp sub push adc xchg sbb and dec mov sub repz test pop lcall push rorb addr16 divl xor movsl pushf cmp push mov pavgw dec (bad) aad sub out je cmp out xorl dec aam adc jmp hlt lock mov and loope mov sub or pusha cmpsl (bad) pop (bad) in (bad) and incb add sub xor (bad) lcall mov inc cmp push add data16 add and sbb jmp jno dec cld aas fwait push jmp xchg push jns xchg sub mov cs imul in in xchg mov xor icebp ja and mov fwait or pop dec and nop (bad) mov stc push lods pop mov cmp repnz rcll sub inc stos movl mov scas jb xor dec mov int xor out js sub jb jns test push shrb xlat (bad) out sbb or sub sbb imul (bad) movsl into mov inc sarl mov sub dec xor jg into pushf pop dec or lods add xor cmp es or add push dec pop cmpsb loope jle popf int3 leave mov insb add cli in sub dec pop mov xor lret repnz mov pop pop sbb adc jge imul mov pop (bad) outsl xor pop test call pop jge mov mov (bad) loop ja cld mov aam add and aam fimul psubq fwait mov dec pop xor (bad) push imul xchg sub insb les adc xor sarl or (bad) and push outsl js outsl dec leave dec ret daa icebp lods repnz in and pop sub mov inc pop adc mov out sbb or aas mov push inc clc repnz scas xchg add out insb fstpt je (bad) lahf js enter rorl mov push xchg fs mov out rcr adc test js (bad) jns (bad) hlt stc fbld inc in dec cli (bad) dec mov clc rorl (bad) xchg repnz repnz mov jl inc inc loope lea cmp or jae sti cmpsb xchg ds cwtl ds and pushf mov mov (bad) jne add (bad) mov lahf fdivr in xor push enter xchg (bad) xchg dec jno into test jo and (bad) loope je andb pop pop insl xchg mov test push mov lods movsl xchg mov fwait cmc stos cmc add out lock or es mov int scas inc mov jo sub add (bad) push cmp subb fnstsw dec popf or jmp ljmp xchg push jbe repz cmp test xor inc jge loop (bad) sti sub dec push scas cs xchg pop mov push sub je pop push lods push sbb lods pop and mov pop insl xor loop add push mov jno add ret push out ds add pop lea or adc mov mov mov sbb jle aaa cwtl jg push xchg sbb push in add mov pushf or cmp dec adc sbb in lret (bad) ljmp bound jns dec in jle add mov push xchg loope push addr16 sbb mov paddsb ficom out or and outsl or in (bad) scas ret sub cmp xchg aam xor movb sbb js,pt and scas enter xchg ljmp jp imull jecxz lcall inc add movsl jge rol sub dec out out jns sbb inc ret sub repnz je mov inc arpl sbb push leave jp orl jne stos aas fwait lock fs xchg out loop jae jae sbb lods dec aam jo jl lahf lahf pop push repz cmp dec sbb loopne jo leave jae into xlat dec xchg cmp xor jg pop sub jbe pop inc jns arpl or out sbb xchg mov and mov push ja mov pop jle fisubl sub and (bad) and les or sbb jb mov fnstcw mov or pop stos jnp fstl pop adcb (bad) popf mov xor out into adc mov cmp xchg leave lea dec xchg (bad) mull jbe ja add rorb ja push outsl ds sbb mov push fcomip jp mov mov inc sbb and or loope adc xchg scas xor idivl sbb fsubrp pop in lret jbe popa jae xchg jmp mov pop inc shrl lock add sbb jns and aad push call mov sbb js xlat fldl popf jge inc inc dec aaa and scas rorl sub add xor dec push (bad) dec fldcw xchg sbb or in and xchg mov aas cmp inc shlb xor push inc adc lret mov jmp mov leave or cmp dec ljmp loopne mov push xchg repz enter dec and popf sbb rcrl js cli test outsb leave sub imul aad xchg das mov pop in (bad) and mov dec adc adc sbb and inc in sub jl,pn mov dec mov pop cmp imul xlat call lock sub xor jp fsubs sti xchg xor iret (bad) xor jge adc shrb repnz stos mov xlat xchg push and cmp aam hlt push rorl lea ds jp (bad) pusha jmp scas mov aam lret add out mov lea lcall test xor es sbb stos out shrb mov ficomp repz cmc add or sbb xchg mov adc jns mov inc add or fs call out pcmpgtw dec sub es mov not aaa sub adc xor or aam adc in les pop xor (bad) nop std (bad) pop jl and push mov lret (bad) je mov inc jns xlat pop and pushf int fisubr shll adc sub xchg pop mov mov sahf adc das inc jmp rcrb jbe test (bad) enter std pop pushf fldcw pop leave inc in mov das xor imul loopne hlt push cwtl sub ds mov mov add cmp cmp rcr ret test leave and or jno and movsb dec mov (bad) fucomp dec out dec mov cmp mov push mov mov push inc xchg data16 loope lods lods into adc enter stos js aad (bad) xchg jmp fstpt (bad) adc mov (bad) repz mov xor fcomip jne jle out push (bad) mov sbb or adc mov scas or outsb and mov out jno int outsb cmp or xor cld ss jl pushf xchg lret adc outsl loope ret ljmp lods sbb dec das push mov adc je or je fcompl ret cld cmp mov dec mov add add icebp icebp xchg mov and in outsl xor dec xchg scas or adc jno fistp fdiv negl cmpsl adcl loope sub xchg xchg pop inc inc nop les enter lahf es jo (bad) push data16 sbb mov sti fs mov shr lods xchg (bad) je mov ret jmp push cmp aam (bad) mov mov and jo sub push inc jnp xor gs inc leave mov movsb xchg gs scas add mov jl pop clc push or les or xchg pop pushf adc cld mov lret ret jecxz rclb arpl xchg out in adc pop aas adc into hlt mov dec xchg out push xchg or xor dec cmc sahf lret jecxz sub fcoml js int3 xchg mov leave rclb push (bad) stc dec movzwl fsubl push inc jb push fcoml sbb into mov add or dec add iret xchg icebp outsb dec mov inc lods rcrl pop cmpl insb mov xchg or ljmp outsl cmp dec cmc pop cmp in sub cmp fidiv imul test push mov mov adc out (bad) testl or test xlat mov xchg addr16 mov cli lods pusha pusha adc pop pusha fsts cs sbb call and (bad) xlat mov jle sub int3 mov popa or fnstenv push pop pop jle fdivrs (bad) (bad) incl push insb loopne xchg xor mov mov sbb lret mov (bad) xor mov add xor xor jbe cli rclb push ret scas or mov cmp clc ja lahf out gs mov pop mov dec les dec push lea lds dec leave lret addr16 test xchg out scas sbb stos subl decl dec pop sbb mov push mov lret ret into mov movsl sbb (bad) sub mov cmp jno add mov add mov jae loopne jmp mov loop icebp ficomp loopne sbb loopne jbe inc aam stos movsl (bad) iret out jno add sbb ret mov mov inc cmpsl mov cli (bad) xor add and dec cmp outsb outsl xchg push sti movsl add adc xor adc aam jne mov dec sub cld into push adc shr mov psraw int fidivrl xchg pop adc dec movsl add cltd scas inc and adc test jb adc popf int3 mov push cmp xor pop mov jg adc inc pop (bad) insl mov xor push scas idiv mov mov clc cmpsb nop sub fdivrl sbb (bad) lds icebp adc adc ret push adc (bad) jae rorb fsubrp scas sarl lret outsl lods jecxz scas and data16 dec inc icebp les pop dec cli sub imul or push lcall xor adc push jne insl js,pt cmp ss lods insl stc push xor jl sub xor bound ljmp test (bad) loop fwait (bad) jbe daa mov inc sbb lods sarb inc imul pop jae add (bad) out pushf jle sub sbb ficomp insb popa add add cmpsb mov imul or test les and and jne nop xchg test scas mov xchg xor pop jne push sti fldcw pop mov hlt sbb jnp adc dec sbb fsubl and pop xchg xor mov xor mov lret jbe adc rcrb cmp xchg out add leave xchg push (bad) cmp adc iret jle fwait aad das rolb dec mov mov jp (bad) repnz sub stos jge (bad) in ja lret adc call test stos mov jbe inc add adc and cmc ret mov cs mov mov scas lods xor out mov and sbb ret or ljmp dec push test jnp sub das fisubrl into lahf push xor mov test pop lods imulb or add test add sbb jecxz push inc sub in mov mov lods sbb xor test and (bad) mov not or out (bad) sub cmp cmp mov lock cmpb paddsb in fcomip fs add and sub jae fadd ds daa bnd in mov lea mov fcoms into hlt lahf push lret cmp jecxz lods dec fwait jmp in (bad) jae and jbe ret sbb xchg push and loop insb xor push xor rol push xor lea mov stos mov fdivrp popa stc dec scas test (bad) pop dec xchg adc imul test jb lahf lahf and iret mov sub int3 adc pop lods sbb stos pop sahf enter pop test push aas out into pop mov std out in clc in mov cmpsb add mov (bad) mov inc inc sbb pop add fimul cli in call ficompl out jbe mov lock in mov out dec int3 xor fsubp aaa imul cli mov inc call sar inc fldenv ss sti jmp pop fistpl ljmp mov inc pop jns pop mov fsubl mov cmpsb jge mov push adc inc js add lret test sbb jns sub sbb imul push (bad) leave push jb mov mov jbe sub pop cs pusha push cmp sub sbb pop aas shrb leave mov stc insb stos xchg in jle xchg shr cmp arpl mov mov pop xchg in jecxz jecxz xor xchg jnp sahf mov and and lds lret inc (bad) ss movsl in decb test pop mov inc enter or imul and jmp cmpl gs jle add loope aaa or xchg insl add int3 pop xor inc xchg loop pop stc lock jle add add ljmp jb rolb loope push jmp out xchg mov sub sub xor leave mov pop add fstp jo pop mov push sbb sbb aam pop jle sub adc push jnp mov add adc orps lea sub cld addr16 jns (bad) leave dec (bad) enter mov arpl xchg pushf sub fstpl push shrl xchg adc or push pop and push pop jl divl or test pushf popf adc ja push test xlat sbb push or xor mov mov pop push xlat add in mov outsb jp mov out scas jmp and (bad) out repz test lea nop arpl xchg sbb ss js lea push out sub xchg xchg daa sub jae dec nop jmp xchg fimull mov dec mov sub sub cmp ret out sarb jge cmp dec movsb imul rolb mov scas rclb mov pop xchg popa pushf push or ljmp imul mov sahf scas adc jnp mov or xchg mov mov lahf dec int xor dec adcb cltd sub or movl test mov sub pop xchg dec call xor sub add adc sbb jge jg aaa stos cmp (bad) fcmovne add and inc (bad) sbb push and in and mov icebp (bad) iret push divb sbb loop mov test sub imul leave adc add fsubrs insl and or dec ds jge lea sub in ja cmp aas je addl push xchg pop inc xor stos push push push push pop inc and test xchg cmpsl fucomi cltd push (bad) int rcrb fstps jl (bad) mov (bad) mov repz inc mov out jg xor pop mov js jg inc fs mov jecxz loop scas nop cli sbb sub mov dec cli test test lock dec adc adc mov int3 icebp leave test or jbe mov mov shll add dec scas out rcl call xor dec mov sub inc sbb inc and pop incw les or arpl add push mov fs mov fnop (bad) in sbb dec faddp das in rol sbb mov xchg xchg mov add test popa stos ja fdivs incb inc pop cli dec ja xchg cmp jle imul adc sbb lods enter dec int3 mov jnp sub or push pop dec (bad) jecxz cmpsl adc int and clc and bnd pop adc in push das push xor les je ret ja mov ss mov add or mov push add clc jbe sbb or xchg sub mov push insl or (bad) int3 pop int3 cmpsb iret lea jb mov jne dec idivl cwtl mov or sbb cwtl cwtl and sbb adc mov xor jns pop push add push jmp push idivl sub lcall leave (bad) aaa fldcw insl pop pushl movsb cmpsl sahf xchg adc sub das loope outsl aad mov int fimul gs add mov cmp adc xchg pop dec xor dec ss incl xor fadds fmuls pop and push xchg in inc cmc dec push aaa inc fs ja test sub sub stc xchg sub (bad) xor push lea sub push adc push nop xchg mov cmp push cmp adc jnp mov fist sub pop sub push mov inc loopne inc cmp ds inc imul test in mov mov and mov push in mov mov fwait je sbb cmp sbbb pop jne push aad push jne fwait jl ficom jns add pop xor insb push lock aam mov push stc mov pop aad xchg cwtl add mov xchg add cmp mov xorl push mov cmc insb push mov negl insb or cmp outsl enter movsb and aas vpslld pop out out lea add mov lods push sub xchg add sub push rcrb pusha shrb je and mov out adc sarb mov pop bound sarb push push or inc mov jns (bad) jae pusha incb sbb (bad) jmp scas lret cmova push orl push pop lock xor cmp ja pop pop mov out inc jp mov test inc je mov inc xor add xchg cmp inc mov nop pusha xchg faddp sti daa fidivl jbe ret ja ja repz out and (bad) pop push lcall stc nop mov shrl movsb jle inc cmpsb and shrl in ret sbb dec pop mov gs dec scas cld mov arpl jl xchg (bad) mov in jnp lahf addr16 adc nop je mov mov hlt inc test sub data16 xor push fild xor mov popf mov je jbe fildll jo or incl pop pop (bad) inc popa ss enter repnz test fstpl imul lea stc js ret bound mov jns dec sbb dec sbb cld repz jp es aaa movb mov or xor jns arpl mull andl xor stos cld sbb sbb add mov jl lret cmp and test (bad) cmp stos es or adc mov arpl push mov and in mov add outsb loope cmp mov insb jne sti (bad) arpl stc iret jno push push dec gs push adc dec pop loope (bad) int nop cmp sbb popf xor sbb lahf pop cmp imul adcl int3 inc int3 leave jge pop sbb jmp pop scas imulb xlat movsl pop cwtl sbb adc cmpsb out xor mov movsl jge ret cmp jl test sti jle jmp std pop cmp das ds cmp mov out shl sahf mov mov popa pop inc or push xchg jns insb fucomi sbb pop out add xchg outsb iret adc xor lcall inc dec pop xor data16 nop pop ret movsl sbb mov in lret jecxz jno cmpsb and (bad) cmp dec adc jbe inc repnz push cs testl sub jl sti cmp dec push bound lods repnz inc jb mov ja cmp jo pop xor xor mov mov je mov call push imul iret mov test test push aad push daa and sub dec xor addr16 (bad) jno or aad popf push adc mov rol inc gs add jmp push or xor mov push test xchg (bad) dec sbb in mov mov or imul and mov sbb mov jo sti mov dec sub xchg lret xor xor cli je jb jb fwait push sarl incl dec adc scas lcall mov or inc pop in pop int3 loope or or lcall mov nop sub jns jmp stos stos test push mov sub rcll or sub inc repz (bad) or pusha and pop in mov addr16 sbb out aaa jbe aad add or mov outsb (bad) sub ljmp or loop mov aam inc test inc add ljmp inc inc sub pop (bad) lret (bad) or xchg mov sub lds sahf pusha movsb aas (bad) lods std int3 enter (bad) es ret sbb stc and or mov sub in lret insb nop add mov pop in inc jmp shlb sub (bad) jne fldlg2 xchg subb pop fidivl xchg sub loope inc lret repz cwtl dec mov fbstp in sbb repnz jae mov negb xchg mov or outsb jne inc or inc cmpsb leave adc or and ljmp mov pop loop or aas xor test lods pop push cmc sub adc pop xor jnp add movsb sbb pop cmp enter lds ret add sub ret sbb mov xchg in ss pop sar sub repz loopne xchg sbb sub in lret stc les pop in cmp call jecxz fistl test adc fstpl nop dec (bad) (bad) xchg das jnp and adc mull cmp out mov adc into dec mov in xor lret mov aaa inc xchg jmp push inc mov stc mov pop xchg mov dec pop jmp sbb mov inc add movsb test ret sub and leave bound dec sub stc arpl sarb adc loopne aaa outsl and arpl stos fs sahf mov outsb decl lock cld mov in mov (bad) mov ss pop (bad) mov lahf adc mov mov mov (bad) ss jne mov (bad) enter jmp mov add pop pop push jne cltd mov mov rorl mov inc cmp ds pusha test dec push imul dec in lcall xchg fdivrp mov imul and cmp jnp enter dec or (bad) shlb imul xchg in mov aad or xor dec and adc xor xchg outsl divb xor stos xor sub mov cmp jl xchg mov or arpl int push sbb mov inc mov (bad) mov imul fidivrl mov hlt mov and sbb stos hlt mov ror (bad) mov imul xor sub sub push mov push in add dec mov cmpsl jg jns addr16 aam jbe xor fisubr inc xor scas mov sbb pop (bad) fucomi mov sbb fcoml movsb inc xchg fdivrs aam iret sub lret push (bad) fwait jno imul mov xor jle push test sub push out test sub dec nop jbe mov jmp cmp mov cmp (bad) aas adc lret adc sbb andl lea and cltd test sub mov mov in lods add xchg mov addr16 rclb mov test add pop add addr16 fsubrl lret pusha pop and (bad) std repz test mov repz push cmp nop out mov dec sbb jne pop jno (bad) xchg mov cmp cmp cmp xchg (bad) sti or jnp fidiv decb frstpm(287 mov loope movsb into and lcall mov dec mov addr16 ja sub dec aaa out hlt pop mov xor ret sbb adc into insb leave or or inc mov mov xlat jmp int3 mov inc jae mov sti xor ss sahf push in icebp (bad) mov std sub xlat pop cltd inc dec mov xor mov mov popf dec repnz pop push fs cld lds gs outsl ds xchg hlt and cmp pop dec aam pop outsb mov test mov in fcom lahf out cmp aad clc dec mov cli add or dec daa inc out rclb fadds test sbb xor aaa fidivrl ljmp js xor xor xchg jg test iret fnclex pushw inc movsb je bound adc mov fnstenv xlat ret fs mov cmp add mov enter mov je xor pop xchg rcll add push cmp shrb adc nop out addr16 addr16 shll add out orl pop jns cmp mov adc cmpsl cmp mov cli inc and pop inc mov and pop jmp es leave psrlw adc cld push es mov loopne lcall cmpsb gs push mov fs test and clc js xchg lds push insl jo mov and and iret cmp sbb out daa (bad) fisttpll xchg clc push jne shl push lds sbb pop and aas iret lahf loope dec ret dec fwait mov mov cmc or push and movsl push sarl gs sbb out cwtl sarl mov mov imul lds sbb inc ds sbb cmp lahf jle sbb dec imul cli cltd push aam in mov add (bad) gs setae add cld jnp hlt dec mov xchg cmp sbb inc xchg pop in (bad) push inc popf adc mov test xchg (bad) push out dec stos es and and ss rcll cmp lcall cmp lods (bad) iret cld inc and xchg mov (bad) cmp adc dec (bad) movsl mov add push outsb scas or pop iret gs pop movsb lcall mov aaa sub hlt ret (bad) xlat adc xor push daa insb mov mov and push repz push xchg stos and shlb in pop scas cmp pop arpl movsb mov leave sti pop pop push add (bad) lock andl cs loope and (bad) cmp popa cmp mov sti js sbb out dec data16 push xchg fisttpl lods or xor and mov and sbb push in xchg adc cmpsb lock and sysexit fidiv addr16 dec cmpsl or inc jns jg jne push loopne dec insl pop test sub imulb cmp xchg outsb mov lods hlt stc dec cwtl mov dec shll or mov push pop outsl xor push fcoms push aam push scas loop mov pushf mov insl (bad) mov stos in sbb aaa jmp rclb repz lret aaa repnz pop (bad) js xchg jns xor pusha (bad) repz and rcrb cs jne test movsl fnsave fsubl rorb dec outsl and cwtl jp pop mov inc cmp or mov xchg aas mov mov stc push mov pop fs cmc dec movsb ss in adc lods jp mov das ret ja les rcrb cli repnz ja adc sahf xor lret inc repnz in ret sahf cltd nop mov push ljmp inc push mov (bad) ljmp andl cwtl loopne daa dec es sub cmp or rcrl repnz loope nop push mov push inc cmp pop sbb out (bad) jmp pop xorl sbb aam jp inc add (bad) testb arpl push pop jmp adc jns push out push jno les mov aam inc push cmp push (bad) aam push in fbstp cmp es sub sub in mov push pop adc sbb xor push pop push jns xor jge scas mov ja push pop cmc fisubr out loopne insb jle or enter into inc negb dec pop sbb mov stos jnp (bad) jp mov (bad) mov arpl push in mov cmp add xchg inc mov iret lahf in (bad) or jo,pn fbstp ds roll (bad) xor adc idivl inc sub std js and and test cwtl xor mov int3 push (bad) dec add xchg (bad) jle xchg push xchg xor dec mov and xor lcall push xlat ss mov repnz repnz jae xchg pop (bad) aaa repnz rorb mov les inc inc nop movsb xchg xor iret lods imul jecxz lcall mov test sbb lret cs inc lcall jmp mov jmp mov (bad) mov ret xor sub sti jg aad push ret pop jl cmpsl imul sbb out mov cmpsb pop ljmp insb push popf aas popl mov jecxz mov fstpt dec jge pop add push jne in mov jns fsubrp cmp mov push fwait pop xchg hlt lcall (bad) jp push sbb push xchg cmpsl mov xor pop loopne sarb sti push xchg mov dec imul sub and jae sbb stos jbe (bad) push jecxz test int jmp divb ss xor jmp rcrl es xchg je or lea lds insb in inc aad jecxz xchg scas pop and push mov or int3 lea hlt or mov mov pop lahf std mov add xchg test jg enter or in mov push ljmp frstor (bad) add je cld test addr16 cld (bad) imull (bad) pop xchg mov (bad) fs dec xlat loopne cmp wbinvd mov pop das popa jb inc sbb fnop push test push sahf and push lahf mov mov pop lea lahf sbb test dec adc add test lcall xor mov icebp in mov dec mov mov jmp lock sbb xlat das test xor movsb jmp sbb into repz adc xor add pop pop cmp mov andb pop call clc (bad) in jb cs (bad) hlt pop mov enter mov jbe jno outsb lock imul mov rcl nop sub pop dec fnstenv lret or andl push (bad) shl int3 add adc and dec pop loopne int3 scas mov xchg arpl jns das fistpl jns xor xchg xchg shll scas addl notl xor xchg in cs sti jmp in dec xchg rcrl sti repnz shufps rcrl (bad) sub cmp jnp repnz sti and add (bad) xchg push lcall loope (bad) jmp scas sub scas xchg xchg jo adc mov bound add jle mov fwait iret sbb pusha and outsl jo std mov cs xor gs and push icebp xor ss jmp lods daa aas cmp outsb adc out cmp xchg sti iret push hlt xor jmp mov adc xor or xchg mov jno rorb mov push jno aad jbe inc repz xor out je add sub and and stos testb scas pusha (bad) in push jne sbb push scas pop ja and jbe inc xchg add xlat add sarl adc (bad) bound inc jns call xor cli jnp jnp push jo cmpsl pop test add out jno jnp (bad) xor xor je jb push and mul inc hlt jns adc outsb lcall inc inc sbb dec push jmp add std jle mov mov push outsl mov nop dec lods add or inc cmc sbb and imul aam cli mov push mov push movsw ror xchg jbe sub fnstenv shlb push arpl and fist fbld push jle dec rol mov jge data16 jns bound je (bad) jle adc mov test push or mov loope mov int mov sbb ret push jg mov sub sbb lret sub and jge lcall ret push mov dec into dec popf int3 fistpll push mov sub cmp ret ds ror push sub (bad) je,pt sbb insl push fadds dec mov xchg fisttp mov or jne jge loopne dec and test (bad) push in xchg in pop test fist dec cmp mov ljmp xchg mov jle imul jo fnop xchg mov into push adc jp inc bound out inc xchg in inc add in cmpsb sti ret push inc add add mov out xchg push or cmp push xor test pop mov cmp sbb pop lret loopne adc idivl add mov push cmp mov mov add sub fcoms fist dec jmp push xchg es jnp xor imul ss data16 jns popa sub sub sub pusha push push icebp cs decl fstpt loop test xchg add mov movsl (bad) hlt dec pavgw jl and dec inc stos dec test (bad) ja xor call adc subl out jge mov test fisttpl mov dec xchg popf push push (bad) and rcll (bad) or inc fmuls and push inc in outsb xchg and movsb and pusha imul outsl xchg mov cmp mov cmpsb cmc ds mov and out sbb mov lret push aas outsl popf push xlat xchg xchg in or xchg push xor mulb (bad) xchg je push pop xchg div inc adc inc mov and jp mov out aad inc adc scas leave cmpsb addl lret stc push ss mov jl cmpb je xchg push sub xchg xchg bound repnz or fwait push mov in ljmp dec hlt jne cld (bad) or stos jae rcrb gs xchg cmp inc (bad) rcrl out adc push (bad) imul inc mov adc pop inc addl cmp out pop jae fcomp hlt push dec pop and ja rorl iret dec mov cld call std or movsb dec cmpsb xchg mov jbe sub aam je test xchg mov and push cmpsl in (bad) (bad) enter pop pop out ja jns (bad) cmp and jmp pop lea leave lds aas cwtl sub in aad cmp ljmp cs xlat mov imul push cld call insb fiaddl daa fisubl fucomip or pop sub sbb inc xchg jle sbb (bad) xor cmp push stos mov jo mov xchg das cld add sub outsb add clc test pop and add fadds popf rcll leave mov mov adc adc lock mov push loop cmp shlb cmp add jo or rol or mov sarb imul jmp loope sub xor cmpsl push in pop in aas (bad) lret xchg imul stos xchg cmp mov add push test adc lock int3 aas xchg cmp pop jno and std stos testb stc fcmovnb mov mov ret xor loope call imul rcrb test adc ja mov arpl jmp jmp xchg pop cmp into mov rcll push cmp push cmp mov mov lods sbb out mov pop push lea pop mov dec scas mov stos sbb enter mov or jmp mov xor push lods or scas mov mov stc inc in cmp dec jns mov int3 ficom adc icebp and negb (bad) mov shl push ret mov and jle hlt sbb sbb add outsb loopne and clc push iret adc popf lods dec inc cld inc jl mov push mov cld arpl fwait sbb dec cmpsl iret pushf pop fcoml je (bad) pop lds ja inc mov cmp jge adc int out dec pop popa or iret divl mov sbb push cmpsl in scas addr16 pop sub xlat mov mov insl imul dec cld jb ss xchg (bad) sbb mov fdivrp jnp ja stc xchg call cmp bound scas pop xchg out (bad) ljmp rclb shrl mov or cmp mov popa sbb jo pop xor dec cmc jb aam lret cmp mov push cltd or out dec lods inc stos push call mov jp mov xchg or push call push mov jmp lret mov fwait insb ret call fstpt addl sbb add (bad) not push pop sub sub jp push dec in faddp add movl das popa outsb inc mov imul and sbb jle out pop or je (bad) test loopne test pop shrb jb loopne mov out inc mov mov jne repz pop (bad) iret and push or in stc leave lods es jne lock lret scas and mov dec clc push jns xor push inc dec or push lea mov sub mov pop sar jge mov out inc mov fistp sbb pop int3 pushf mov imul int3 leave lcall jbe sub not pop je inc jg xchg mov mov xchg mov xor call jp ljmp push leave adc sub or mov lret call adc or cmpsb jne adc popa popa xchg out cltd xor mov idivl ljmp test jo bswap push mov adc fcomp hlt and add push pushf pop mov push adc mov cmp sub adc mov es fistpll test leave or or inc ret sbb shl sbb and lea mov or xchg sahf jl xchg jle dec nop aam lock dec add (bad) inc int dec xor test cltd sbb iret out stos adc jno xchg add bnd sub lret push ror sti lds pop cmp mov mov cmpb mov (bad) in outsb rcll mov or lret lods xor xchg mov aad jno push fs push addr16 sbb adc scas (bad) mov inc fadds icebp shlb incl mov adc inc lahf or adc int3 sbb lods cmp idivl jl inc push pop cmp (bad) push dec iret add add pushf cmpsb das sub add mov and mov push push fdivl xchg push pop jb dec pop out add pop mov cltd popa mov sbb jns jl sbb push push pop and xlat mov out mov hlt inc cwtl cmp imul mov movsl lods imul js ljmp push pop xchg add test (bad) xor xorps add lods lods inc lock inc aam mov xchg fisttp dec and addr16 pop or or mov ja lahf and dec lock xchg push jg in or cmc jmp stc lods popf adc out (bad) stos mov clc mov mov movsl jo xlat (bad) pop pusha mov decl in xor outsl fdivl aad mov xchg or stos mov sub pushf mov imul cmp (bad) movsl ljmp lock cmp xor inc lock pop cmp fisttpll (bad) ja pop jnp pushf fcomi jl dec lret dec aas sbb sub sahf push mov sbb fsubr lods and out lods movsl enter shlb (bad) repnz push sbb dec push xor repnz sbb push ficompl imull jp xchg pop psubq cmpsl js and cmpsb bound mov clc pop leave fs jno cwtl mov mov pusha add je cmp call lea mov imul push repnz sahf inc (bad) idivb pop in sbb fs lret fchs lock adc and lock sbb repz pushf jge pushf vcvtss2sd test pushf aaa rorb xor cmpsl callw mov inc xlat stc rclb loope mov cltd add jne sbb fdivrl add es or sbb movsb insl mov mov fimul jl xlat pop push or out (bad) lret mov lds gs push mov movsb je sub (bad) aas (bad) jp adcl insl (bad) push pushf sbb add dec sub jo subb mov and stc lret mov aam pop dec push fldl cmp nop inc fldt mov adcl mov push mov mov rcrb cmp sbbb mov iret xor xor scas push sub push icebp pop mov sub out (bad) mov (bad) mov fdivr lds xchg (bad) and mov (bad) call xor out xor inc cmp sub pop lock je inc (bad) movsb mov push mov inc in gs sbb adc cmc jmp and jecxz loop mov mov orl out sbb pushf sbb rol jnp rolb and clc jbe mov xor subb mov sti pushf push push sub adc mov sbb clc xchg addr16 int3 fidivr mov push rolb or cmpsb les cmp push pop out dec add mov dec or cmp jle inc cli stos popa add sbb jne jo (bad) cli sahf sub and js fwait fwait pusha movsl mov mov pop outsl jle xchg dec or mov dec and cli xor cmp xor test in outsb or cltd jae (bad) jne scas cmpb repnz jge data16 sbb pop ret popa insb pop aas cmp pop inc mov pop pop jbe push dec jmp mov or cmp sbb dec loope scas fisttpll mov arpl jecxz hlt popl (bad) or or ja inc test mov insl ss xchg or divl cmp sub dec mov daa and daa test adc mov cwtl and mov xchg lods sub adc or sahf sbb push inc jns test cmp stos pop jb xor mov xlat xor iret or sbb push sahf popa inc sub stos daa (bad) mov pop movsb cmp mov mov test mov add addr16 sbb add cli aam mov fisttpl in push enter movsb dec lahf pop add das dec push ret test mov test mov mov cmpsl xchg aaa add mov arpl scas test xchg pop loope xor mov jbe aad dec mov (bad) jb movsl dec sub pushf ljmp sub add or scas mov je cli cmpsl and pop je es dec adc or push pop sahf xchg jbe pop sub outsl in cli sbb je or push inc addr16 sbb fildll test sahf lods (bad) cwtl lret out rolb cs lock sbb das jnp out int sti pop xchg inc push test sbb movsb pop daa pop fcos fmul fs sbb xchg flds imul insb (bad) xor loope ja push sub scas xchg jmp xchg inc imul insb adc lahf lret aad jbe xchg xchg stc push and mov mov pusha je hlt cmp insb pop data16 sub andl call jne mov dec cmp test and test mov and aas sbb dec jl jbe std push addr16 push les cmp movsb jp dec xchg jl cmp mov fidivl hlt sbb (bad) mov sbb mov xor push sub loopne mov xchg inc aad jge cmp popa push jb stos out mov push addr16 aas xlat addr16 xor dec out mov aaa sarl sbb xchg xor data16 and js sub mov xchg xchg dec das pop fwait or sti xchg jno cmp outsl test cmp in stos pxor arpl shld dec sub rorb dec push sahf ret dec push xchg fildll xor insl call sarb mov out push fldt insb test mov mov scas cmpsl mov les jle cmc jmp (bad) xlat loope,pn enter push sub outsb sti imul call mov gs adc push jnp repz push and stos or lea adc mov mov add mov pop lcall mov mov stc inc sbb xlat or xchg push jg sbb lcall inc fistl cmpsb mov and lret adc dec fisubl imul stos ss fcomi cmpl xor repnz mov leave insb pop push lcall pusha xor aaa imulb inc mov js es pop lock sub mov sti (bad) dec hlt jne lret sbb into jno into loope sbb ficomp mov jge mov lahf xchg aam inc inc cmp mov mov movb push ret nop jg jae fs in cmp cmp out movb into lret fildll cltd ljmp and jno pop adc cli fbld xchg pop mov loope mov add lds and mov cmp mov (bad) aam popa xor push add pushf mov xchg incl mov push mov movsb subl mov ljmp sub daa bound add inc ds mov jge mov sub inc aad pop das add lea jecxz clc mov clc xor (bad) adc add mov xor cld sub mov (bad) repz pop or aam imul fimul fcmovnb inc fldt xchg dec pop add js mov jbe cmp sbb dec xor mov lds jns add sub in cmp pop adc (bad) jae xor mov xchg dec dec and movsl sbb mov (bad) adc pop ja insl xchg and add sbb xchg stos mov cmpsl and mov cmp neg ficoml and negl adc loope popf ret xchg ss or pusha test adc rorl pop out test in xchg pop in cli jbe aas mov aas pop jp cmpsl add xchg inc add xor push jns aam mov or fdivr nop xchg lods sub lahf mov and jp sub and add and mov sub ror mov mov and ficoml jmp jge lret lock jo fs lret mov push jmp push cmc or dec ret sub rcl call lods out adc mov lret xchg scas sub or xchg lods sahf xlat outsb dec stos out pop out xor int3 es cmpb and and xlat test cli cmp xchg shrl jae cmp mov mov cmpsl dec iret pop cld lcall sub sub mov lahf movsl push mov ss mov insw jecxz jg int fnstenv cmpsl and adc fwait xor mov xchg add lds inc push mov mov cltd nop ss or jno mov mov lods insl inc cmp or (bad) mov out loope test jb mov lods arpl jmp add (bad) mov xchg daa int cmc xor adc mov (bad) jle les jmp pusha (bad) mov xchg xchg fimull in psubusb and fmuls js add cs jnp xchg jo (bad) push scas outsb pop stc packsswb inc mov mov fidiv mov push mov push push sti lret fildll repz push lcall outsb scas ror cld and nop push xchg mov jno pop or lcall arpl repz or popa inc push xor push (bad) clc sub (bad) out sub mov cmovnp fsubr andb mov lcall adc notl out pop lea ficompl xchg jno (bad) mov ficom pop call jmp mov movlps cmc inc adcl sbb in mov (bad) cltd xor push adc gs aam mov sbb popa call sub mov xor pusha in outsb mov inc fs repnz jle,pt and sbb es ds pop test sbbl xchg pop repnz or sub lcall imul pop (bad) outsl sub rcll shlb (bad) movsl xor dec inc add dec dec out pop lret mov ret cli jge or les jecxz loop xchg sbb sub (bad) out add dec push ret mov or pop fs hlt or repnz add (bad) jae dec mov arpl cs cmp sahf call lods (bad) xor je sub pop fcoml pop sbb jp xor sub or push push clc mov pop test mov in les push sub out enter divl not sub xor adcb dec mov data16 pop test out das fwait lock test or pop stc pop cmp adc cmp xchg jns loopne sti and mov sub sahf sbb ja scas out fdivr lds adc movzwl mov mov mov aaa sub fsub cmp xchg xchg sub dec scas push xor lret lds sti inc push lahf mov pop sbb push add outsl push jbe push aad mov add std push mov andl push pop (bad) (bad) or push sbb stos push adc lods sub fcoml cli add icebp ret dec divl loop aad xor jle jb push mov int ja enter xor out imul rorl fadd int3 aas loope movups cli fldcw adc rcll dec aad fucomip insb lods bound int add fdivrs pop out sbb xor lahf jne xor (bad) mov adc mov imul push (bad) pop jne xor push jle mov mov jb add cmp pop loope bound xlat xchg stc and arpl gs xor or popa std imul adc in out and xchg fdiv decl dec cmp cld pushf pop jg pushf inc in fcomip jb imul xchg jge insb jmp mov xchg (bad) sub cltd test sarb cmc lods lock mov adcl ss hlt xchg adc (bad) pusha rcll xchg mov test cmp inc jp xor sub enter loop mov inc cmp sti or repnz cmp jb cld push fcoms inc outsb mov lds push cmpsb sbb test and scas mov mov repnz iret and jecxz mov inc popf test mov xchg hlt ret cmpsb fwait pop mov sbb pop (bad) cmpsl pop sub aad enter dec fwait inc pop adc mov ss mov mov mov and add xlat adc push lcall rcrb dec jg dec sahf push push ret pop rorb daa les mov cmp sbb xchg imul roll gs rolb loope shlb mov mov inc iret dec adc rcrl add in pop mov repz cmp rcrl mov cmp push icebp pop scas sub in sbb xor js push dec xchg add push adcb inc sbb lret push fdivrl xchg sbb ljmp jp mov test pop jae adc xchg pop xor adc in pop cmc mov lds jns popf cmpsb xlat leave inc xor addb mov repnz jecxz ret mov (bad) fwait adc int3 mov push (bad) loopne xchg in jecxz or push lea jecxz jl test cs aaa into or push int3 ret cltd into cmc xor jns addl daa scas pop add push int and add adc test in cmp push and sbb fild stos (bad) sbb jns dec pop cwtl imul lret stos pushf cmp or adcl (bad) cld addl pop in (bad) jne pop inc icebp pop mov mov inc push outsb call cmp jecxz arpl pop fwait cltd inc cmp fldenv or test cwtl (bad) out icebp dec pop stos adc fldcw arpl inc xor inc add push stos mov fcmove popa sti push in mov jno push mov scas pop outsb cmpb mov pop (bad) (bad) adc push mov add dec pusha sub in loopne repnz push mov (bad) clc test push push cmpsl cli add and clc aas mov jnp insl loopne sub or push iret jmp jge leave sub push lods (bad) mov jae ljmp mov std inc adc inc dec lret jge,pt xchg inc jmp dec cld sarl cwtl roll dec sbb test lahf lret scas ror sbbb das stc movsl sbb inc push (bad) cmc dec aaa xchg or sbb xchg lock aas mov shrl mov add sbb adc dec out jmp std pop and mov test rorl ljmp inc rcl popa sbbb addr16 mov push sahf popf cmp test dec stos pop xor pop sub dec repz fsubrs fidiv aad lea fsubp push jno cs pop fdivl dec jb inc push lret shrl das mov popa stos bound cwtl jl adc imul cmp add push loopne (bad) adc pop or mov add pop cmc gs cld leave (bad) adc (bad) xor inc mov xchg sub loopne sub dec mov repz mov xorl jl lods push push (bad) in xchg xchg das bound in aas sbb inc lcall pop mov or testl addr16 xchg pop aaa call jns in sbb call ljmp xor test xabort dec mov push xor idivb mov (bad) mov mov cmc xchg sub and sub pop js sub std mov pop pop push mov insb lods iret call sahf in mov add push cmp mov clc pextrw insb push pop jne add mov xchg xchg pop jle adc cld jmp cmp or mov mov cmc and out pop or xor xor out mov or inc fwait hlt dec or or lcall loopne dec xor add adc adc movb sbb jae cli inc mov pop (bad) icebp not out pushl movsb cs and ja mov (bad) jle xor jns and xor pusha daa cmp push and dec push mov push rcrb xor insl rclb mov pushf imul cld rorb sub (bad) repz imul subb pop (bad) lahf mov xor xchg inc fs repz xor mov repz cltd pushf outsb clc int pushf jne adc lea pop aas loop clc sub xchg jbe imul insl lock lret stos pop cmp and repz imul sbbb fwait (bad) fisubrl imul mov inc inc cmp jns sbb adc xchg in test mov (bad) out mov or fcompl addr16 add (bad) jge fsub stc xor pusha lock popf push orb rol inc enter pop mov lret sub mov popf pushf mov adc jmp adc (bad) cmc insl int3 insb mov js lret sbb pop xchg mov jb sbb pop cmc into cmpsl mov out in sbb pop and cltd (bad) mov xor cmp js lea push dec dec popf pop push icebp xor mov inc movsl mov cld cld mov xor leave cmp cmp fnstsw jecxz in xchg imul push outsb mov inc xchg fldl pop aad pop outsl pusha rolb fdivrl push imul mov (bad) pop rolb push outsl stos (bad) arpl mov sub pop ja mov mov cwtl cli je pop test dec and movsb ret scas fstpt ds fidiv test dec mov mov dec fwait add push xchg adc xor mov push les mov or and or outsl or xchg add dec pop movsb inc (bad) fcomps in jbe fiaddl add push mov inc (bad) xchg sarb frstpm(287 pop popa push mov imul inc repz iret fcompp imul inc outsb xor scas divb shl into xor dec shrb imul mov inc cltd push stc jl shrl sbb jl cld mov adc in icebp xor xor mov mov jns xchg inc orl lret pop xor ret inc inc adc flds fistl das stc push rolb mov (bad) xchg mov outsl xchg xchg inc push nop mov loope nop (bad) inc hlt aas lea test add dec xlat repz jecxz movsl ljmp (bad) xor ljmp dec lds test cmpsl (bad) or es jmp stos in addb andl outsl icebp mov cmp mov pop sbb in mov dec xchg mov insl jb cmp and and loope divb pushf out sbb dec xchg mov mov mov cmp ret loopne movsl dec xlat pop mov xchg dec aas jb dec lods add push xchg pop sub add les and adcl inc cwtl xchg sahf leave or jno movsl dec subl cmp or stc add adc xor add outsb sub mov movl inc mov jbe mov inc and lret and ret inc cld adc mov or in out push mov fs std add pop push in das dec xor stos leave (bad) cmc ljmp test push pop fistpll mov inc lock call data16 ja ds or fidiv push es xchg xchg xor adc pusha mov and test ljmp imul aam push out sub outsl and xor outsl inc jnp cld jle push leave mov jb mov push or mov mov jo mov mov jne mov scas cli dec jg sub add push pop aaa movnti pusha scas cld mov pop popf imul (bad) fiadd aam sti jae (bad) xorl test xor jns sarb pop sahf mov jns es pop mov cmp ror mov add dec cld cmp fidiv push fwait xor bound sbb mov ljmp sahf fnstenv dec mov pop push mov mov in pop dec cmc mov jge pop push fs and mov or sarb movsb icebp dec je dec push lods cmc mov aas imul dec pop dec sub flds xchg dec clc xchg rcrb dec ja mov data16 inc cltd mov rcrl xchg popf mov dec and sub jo mov rclb outsb add push aam cmpsl or dec lret in gs gs ret mov sbb adc push ret sarl nop dec lds and and ja (bad) orl inc outsl add pop add ds add inc mov pop popf test inc (bad) repz sub adc mov nop adc xchg mov call je divb aam jmp push (bad) movb stos and lret fsubrl xchg loop jbe push lea rorl mov jb pusha xor mov xor test pop or mov pop adc mov ss inc fcmovb in je jae xchg ret imul call ja or jp jmp sub xor push sarb jmp popl popf jg addr16 adc add xchg xor addr16 enter inc mov jne or mov int (bad) rorl mov xchg movups xchg jnp sahf mov lcall cmp dec (bad) xchg bound test out outsb jg fnstenv push sahf data16 icebp xor andl pop idivl lods mov imul pop inc cli aaa int inc mov sub in sub pop repz push jns mov in mov push sub adc imul fnsave jnp sbb sbb aaa mov jb mov clc dec in mov test mov insb in arpl dec hlt out cmc in mov sub mov andl xchg lock sub bound inc ret pop pop mov dec xchg cmp scas sub jo mov inc addr16 ja add hlt jl mov enter xchg scas lods aaa pop imul in inc aad ror adc repnz adc push inc addr16 outsb mov pushf scas stos shlb enter orb xor cmpsl push pop loop outsl rcll into lea adc insb ljmp in dec jne dec or add fsubrs pushf clc (bad) pop (bad) xor int (bad) ficom icebp test jp orb sbb cmpsl mov jge dec inc mov data16 mov arpl insb iret jae ljmp fmull xor fmull mov popa jne mov dec push stos cmp sbbl aad dec stc or cmpl sbb mov out mov dec jl cmp or cmpsb xchg xchg inc negl pop loopne insb inc xorb js mov and sub jle sub pushl dec negl sbb lock repnz stc sub jo or pop sti in dec jp int xchg or test sbb sub cmp dec inc sub mov pop pop xchg mov adc inc and push or adc and cmp dec sub xor sti pop (bad) nop repnz loop insb (bad) repnz in pusha repz cmc cld or mov dec les test jmp clc mov nop cltd cmp or subb jg in cmp fdivrl xchg cmc hlt sahf push jp mov xchg and dec mov nop (bad) adc rorl cmc ret xor shl fdivs movsb and shlb in cld xor ficoml xor pop out add lahf xchg cmc pop and push and xor mov stos pop mov jg jp cmp inc in inc push push lret sbb jno adc clc add jge (bad) popa fist (bad) sbb je xor xchg (bad) (bad) xchg pushf mov pop stc mov call rorb stc xchg nop lahf out pop fcoml fidivrl pcmpeqd incb jge (bad) ror das mov pop loopne out gs test imul repnz xchg mov inc sub sti xor dec lea das or adc aam and aad icebp bound shrb pop dec test mov out jl stos les adc ds sub mov lds ds adc test cmpl sbb (bad) iret sub sub leave mov sub add xlat push int3 or loope cmpsb enter adc (bad) icebp sbbl cmp notb jnp loopne pop or jmp push mov cld inc leave imulb fucomip and es sbb pop test fdivp shlb pusha push xor das or lods xrelease imulb cmpsl mov popf clc sbb cmp dec pusha xor imul dec xorl xchg xchg cld jle push mov pushf sbb data16 rorb push xor fimul and pop push incl sbb sbb scas jl dec lahf stos mov sub jmp pop js ss sti pop mov cwtl push or adc (bad) xorl popf (bad) stc jg cli push push dec inc rcr in push ja cld xorb mov jbe in or sbb in add repz sbb xor push add nop nop xchg lcall movsl sbb shll mov out mov or imul xchg (bad) test cmp inc movsl in hlt mov sbb pop push movsl mov cmp rcl test mov addl sub mov ds movsl movsl jle bound popa leave mov cli fidivl add insb enter jo subl es (bad) fcomip xchg (bad) dec cmp jb popfw ret cli call cmpsl cmc mov stos sbb adc sbbb mov push mov idivb mov sub dec inc popa or nop aas fldcw cmc out scas loope sbb les xchg adc sub inc cli dec mov mov pop jb scas mov aaa std fs mov je ss (bad) mov mov add jne cmp xor adc adc loopne insl jg (bad) (bad) pop push add xlat roll dec adc push mov jge dec stos imul cmp lahf hlt call mov aas push or jge pop rorl popf mov xchg or lds adc mov andb outsl add and and in push lods sub stos fwait loop jae lods mov sbb mov in popf push cld push jae imul mov add and pop movsl inc adc cmp int3 jnp enter fnstenv xchg lea repnz push repz pop push sub iret jecxz std in inc std out push push jle sti and sbb sahf mov mov pop xchg into fcoml int mov imul cmpsl imul or bound sbb push repnz rorl pushf jbe clc xlat daa lcall adc mov or rorl push and dec push mov and mov movsl xchg inc loopne sub cs std bound out fs aam sub mov inc imul arpl rcl pop lahf mov (bad) enter push lds ljmp repnz jb adc jne fisttp pop jo cs mov push js adc lods adc into add adc sub lret sahf (bad) pop push inc movsb ja mov sub xor add xchg clc jno hlt dec (bad) mov les in xchg adc mov mov pop loopne shrb (bad) clc andl adc mov mov lea mov jge xchg adc push inc mov imul aas or jge bound cmp mov (bad) loop mov push rcrb fmuls mov int3 mov push arpl (bad) ss push aaa popa sarb dec test mov jle (bad) add out push ds dec cmpsl enter mov decl xor aas stos sbb lcall cmpsb dec sub xor lret cmpsl jno out sbb loopne stc adc or push movsl mov stos sbbl (bad) mov or push jecxz test inc push lds mov and lods xor jp js pushf sbb iret mov and repz ds inc jbe rorl inc out or cltd add jnp push or sub ss out insb dec mov das in inc decb lods cs inc (bad) mov inc data16 mov mov ja and jno mov sub lcall and mov cs mov xchg mov push stos push adc adc or and cltd xchg cwtl loopne clc cmpsb (bad) ljmp mov imul adc repz ss lret xlat fwait test adc cmpsl dec sbb sub outsb loope das fist repz xor les jge pop jbe mov pop int push sbb inc in mov lahf pusha jp xchg jae mulb cli insb add in adc xchg sbb les and nop mov movsb inc and lock dec or repz jecxz loop jbe inc ja (bad) mov (bad) aam push xor aad popa imul lods shll shrb sub insl pop push repnz add mov mov cmp and subl mov in (bad) jo inc xor pop or pop (bad) and fsub add imul sbb addr16 ss sti lds sar mov loop scas inc dec fs fst fs sub je les mov add movsl pop or divb dec js stos js int3 jns dec (bad) pushf mov jmp jg,pt pop adc fnsave mov (bad) (bad) cmp jnp (bad) cld sbb into fs (bad) cmpsb mov fldenv mov or test mov mov mov or pop in mov mov out and popa xchg jno push adc cmp pop cs out aad fnop mov jb scas inc push mov lret mov and mov sub lcall (bad) xor mov in sahf (bad) ss and adc pop xchg in mov mov clc dec scas ljmp imul or mov xchg xchg jnp mov mov ret (bad) jns mov lahf mov repz call mov clc imul decl in sbb adc jo loop (bad) insl popf push mov popf (bad) data16 or ljmp push inc pop add xor xor out fwait jg cwtl inc rcrb sti cmp dec pop shl adcb xchg (bad) or mov (bad) std in xor rclb test cmc add cmp ljmp or iret sbb jmp xor mov jns cmp repnz mulb xchg ss imul imul dec sbb aad cmp (bad) stos inc div (bad) aaa mov fnstsw das push fnstenv mov push mov push mov jb mov ror popf ja xor pushf aaa sub jo push fwait pop dec xchg push sub cmp sub in scas pop pop je int3 adc iret lcall and inc fldl repz sbbb or mov and mov test mov or fcomps or loope,pn push std mov jmp lahf fbld sub xchg sbb bound ret loope add (bad) xchg lods in xchg mov xchg jp scas lcall jnp lea in mov aas push inc ja add add js xor in (bad) push ljmp mov js cmpb cmp push dec lods or xor cltd and scas xchg push icebp sub or jg jbe xor aam mov js out iret lock push jecxz ljmp outsl sub inc push loopne mov dec push sub ror push pop xor xor dec icebp daa mov xchg or (bad) iret jns js jmp (bad) push loope xchg jnp loopne nop rcrl mov mov dec out xchg pop stc addr16 xchg push cmpsb ss xor add or add sub dec mov and arpl adc psrlq jp (bad) rcr fisttpl cmp insl mov jp cmp adc pop adc xchg out rcll out sbb jmp xchg pop insb xchg rcll push fs (bad) add loopne icebp out (bad) mov out pop jp,pt or pop xchg cmc jl sbb out xchg lods inc and test push xchg lcall (bad) mov pop push arpl mov push adc push or rolb popf dec hlt adc test test adc jg inc jg scas cltd xor mov adc aaa popl shll outsl mov loop popa push call lea out and ret sbb sahf dec test adc xor push div sub sti jo les pushf mov jp cli mov add xchg push fs and outsl sbb adc push jmp pop out cmp (bad) cmp xchg cmp fsubrs mov cli mov orb xchg ret inc mov lret ret xor in daa jnp in pop cmp lods jl mov test xchg aam cli iret repnz adc push push iret pop shll (bad) push daa gs sbb in (bad) aam jo mov sub nop and pushf outsl add in xor jo hlt mov bnd mov xchg js,pt xchg and cwtl sahf xchg add jo add xor pop add cwtl ficoml mov leave (bad) jmp out pushf sti lahf mov xor xor (bad) js sbb test xor (bad) sbb mov push sub in test test push (bad) push ss rorl scas ljmp icebp xor in mov imul push (bad) mov push mov jg add rcr bound jne adc outsb xor xlat and mov lret mov lods leave and hlt loop inc pop xlat jne jno xorl in mov popa in mov sbb push rcrb and jg aaa aaa mov into adc rcrw aaa pop ja sbb iret and cmp stc push adc (bad) cmc lds adc push and unpcklps scas push xorb mov movsl cmp cmpsb push addr16 xchg fwait pop in cmp int3 aas bound sub cmp or lret pop ja fwait jns adc jns aam std mov fdivl fnop inc add mov jns ljmp mulb push add pop sub fstpl jns stc push mov push hlt dec jecxz adc pmullw jmp cld mov add shrb dec fnop cli or popf jnp sti popf ss mov sub loopne scas jns adc out mov ret or cmpsl clc sbb push inc (bad) paddusb sub outsl leave out add movl pop sbb ds sub and add sub sbb push jl shrl aad pop dec rcll jo cmpsl mov push cltd push add and jg dec int inc mov repnz jmp call in pop push bound add inc dec in dec inc in in lods outsl sub pushf dec popf aas or and cmpl nop ljmp clc xchg xchg mov dec ds scas xchg fcoms sarb xlat lcall out adc xor add add aas mov jno loopne mov (bad) lahf and push pusha jge mov jl or (bad) (bad) cmp sti mov outsl sarb aas (bad) jno jno jecxz test xlat and sub mov int jae sahf faddp cmpsl lock push int3 ret out mov or xchg ljmp cld xchg xor call out hlt jle repnz fidiv or das mov adc movsb jp push push (bad) mov imulb cmp (bad) incl mov imul jno xor mov push and xor push sub mov (bad) xchg xchg test dec enter shrb (bad) adc dec mov out xchg and lods mov cmp in stos data16 mov shlb std (bad) xor shlb xor jo cmp xchg add inc mov inc dec jo jmp inc js (bad) arpl add inc rcrb shlb jg in fnstsw xchg movsb je mov inc fldenv adc imul add or fldcw cmp mov jmp movsl lods inc jmp adc sbb ret lods (bad) xor jge sbb insb sbb cmc mov push pop (bad) leave inc je imul sarb rcll and fs xchg cli jns outsb or clc fdiv xor add mov or inc xor mov mov mov mov xor bound scas sbb test in mov test std out arpl pop mov mul push sbb mov inc xor jns scas lea cmp pop add sti cmp outsl rcl daa jne pop and arpl or cs inc mov lock pop xor aam sub fistl pop dec jno rorb jp sub adc mov inc (bad) sub mov cmp sbbl inc bound fldenv test add xor dec inc aaa ss xchg mov push cmc xchg mov add mov clc sub sub lods jno (bad) lock xor mov push stc mov and mov cmp push dec into imul cli or sub mov push cmp xor nop sbb test out sbb inc js cli xor (bad) cli pop shlb dec sahf mov fwait repz stc add pop jae out dec (bad) xor fmuls ss cmp sub and fs dec jmp mov sbb mov aas pusha lcall and fwait (bad) js xlat sub sbb test jno add movzbl stc insb xor or (bad) test stc sub xor mov insl xorl icebp mov jmp jae adc push xor dec and mov mov lahf hlt add xchg int xchg cltd mov push cmpl push out outsl into mov dec inc fstps arpl jmp and xchg dec jge lret xchg (bad) push mov jmp xchg outsl push adc mov pop cmpsl push (bad) adc mov xor mov lcall xor or jle add pop sub cli outsb addl shr adc mov icebp ds inc ss repz jle loop dec leave adc data16 jp fwait cmp mov jge inc sbb fmuls aaa dec jb out iret pop test imul or (bad) jns xor cmp rclb inc dec hlt dec xchg mov sub test sbb push out enter shlb dec shlb add inc add push mov ret mov jno inc (bad) adc in in sub imul imul fs push cld lahf popf inc sub stc outsl fstpl or fiadd lods scas add push ss sub and mov loop adc loop xor mov adc xlat in adc add pop mov iret jae (bad) test mov sbb or sbb mov clc and lds aam pop fsub sbb aaa fisttpll sub in sbb xor cld or stos int daa cmp shrl (bad) cmp inc subl dec or push lret cmp inc pop leave sbb out jmp (bad) adc test mov es jns and xor stos loopw xchg (bad) mov fwait or pop and inc sub sub rcrl dec loop mov mov mov fldz fmuls imul imul stos imul add xor cmp addl xor arpl xor ror mov sar daa imul pop andnps pop push add cmp outsl dec jnp sbb push lcall mov test cmpsl inc repz enter sub outsl mov movsl lcall add mov sbb push cmp mov add icebp repnz jb lret leave lret or loope push out orl mov and adc aaa loopne mov xlat mull adc ficoml ljmp jl xchg cs and pop scas stos xor sub cltd dec jge jno xlat or repz xchg jbe pusha mov pop add mov or pop add sub sarb sahf cmovae rcrl mov call ljmp das inc jo xorl pop cmp xor push arpl push xlat xchg lcall orb and adc jns hlt lret sub aaa mov dec mov loope fldcw mov adc add ret arpl inc addr16 lahf das push cli loop pause sarl mov cld lahf add pop jl mov enter ret (bad) in push bound les stos push cmc mov cmp pop inc cmp dec lret pop imul (bad) leave sarl xor dec outsl sub addr16 mov lret fsts and in mov and or les lahf pop xor xchg mov push mov int3 into mov sub sti test loope lea (bad) in or cmc jnp add jmp mov pushf fs mov inc push dec cmpl or push arpl shlb sub insb leave shlb push dec xor mov push sub add ja fiadd cltd std (bad) mov push mov scas dec jo pop js pop hlt ret and push lcall jle rcrl dec mov je ds je adc cmc or in sbb aas mov aad jne rclb ss add insl push jns xor add out dec bnd mov inc jecxz scas (bad) iret push imul insb mov ja mov mov je and lahf lods adc jnp sbb out in sbb pusha xchg push icebp pop and or scas push ss xor sub dec movsb imul pop cs and cmpsb sbb cmp leave cmp inc stos cmp inc fidiv loopne mov dec push nop stos lret ja sbb arpl loop mov arpl adc repnz jp jge dec outsb mov das jmp push int fwait movsb (bad) cld mov or xor rorl popf cmpsl dec cli out fiadd test xchg pop insl jb gs mov stos add movsb aad ds adc jl sub out mov dec mulb or jne adc das push xchg mov mov or nop jp lret jbe rorl loop movsl (bad) xor jmp mov pop cmp cmpsb enter leave hlt stc test xor or dec repnz xor xlat xchg popl mov cmp add gs pop aaa aad mov aam (bad) mov lods nop xchg cmp xor xchg mov test xchg in cli mov jbe push loopne ret add pop pop movsb loope adc out fcomps xor mov or arpl inc ffreep out and adc xchg rcrb test lods test aaa dec jg,pt sbb mov movl cmp fnsave sbb mov mov sbb push in inc sti jb mov inc pop lahf out lahf fmuls sbb (bad) daa outsb push std pop add mov sbb hlt pop lods fsubs adc es (bad) push and stc cmp sub inc sahf out jo adc lret in mov dec cmp cli es xor std mov addr16 outsb inc cmc mov popf pop add lock cmp andl adc scas and adc cmc je mov inc out inc jb out jno xchg and gs js cmp in jnp fistpl dec push or inc aad fnstcw push (bad) aaa loop jo das mov mov adc sub sub xchg mov sub or sbb ret push or cmp mov push sbb mov or sub lock push push pop cwtl mov bound mov xchg sub adc jbe mov inc and dec mov cld repnz dec clc outsl clc fs (bad) out jg inc xor cltd icebp inc or subl lea andl xchg sahf mov pop lcall push inc pushf mov fwait jmp pusha mov ljmp sub std xor jp jb lahf fucom cmp push cltd repnz ficoml sahf mov mov ljmp cmpsl popa sub mov repz cmp or push outsl lea (bad) or and xor inc repz out xor mov xlat pop insb inc jae arpl rclb cmp inc cmpsl cltd and xchg (bad) mov mov int3 or or lea test insb cmp mov lret inc cld mov mov xor cmp lcall inc cmp adc jno or clc testb cmpl ljmp sarl xchg jae data16 sub outsl mov adc std cmp inc outsl mov mov hlt stos inc inc inc lret and cwtl jbe dec add mov cmpl or jmp push jl aam mov rcrb jge cmp je (bad) fild ds jbe inc andl gs fisubl test lods pushf or push lretw sbb cmp int3 pop jg roll inc pusha movsb or jo pop inc dec adc xor rcl das jmp aaa xchg dec rcrb pop sub xor cmp add mov jmp cmp and mov cmp cmp loop lahf dec mov lods mov jmp fldl inc pop mov icebp leave cs pop xor adc cltd clc push mov scas jbe mov adc aam int3 rorl inc push cli jb dec mov add jne and push mov adc sbb arpl cld push les cltd loopne rolb cmp and hlt sbb add cltd add hlt xchg jmp jns mov mov out sub rclb stc (bad) pop daa mov ret mov ljmp mov push fnstenv xchg cmp rcl outsl leave dec nop adc jge int3 (bad) enter ljmp xchg leave stc sbb lea inc cmp sarl push sti mov pusha mov xor je lods cmp pop bound mov repz or mov xchg sahf decb dec add push popa addr16 add pushf outsl sbb jno mov pop fmull sbb repnz xchg xchg leave jnp xor xchg std jns gs fisubrl cltd mov cld andl jmp dec pushf (bad) jle rcrl jg out mov mov (bad) cmpsb push sbb ror xor mov test imul repz popa cltd pushl imul inc push ljmp and js adc jl mov inc out das cmovae mov (bad) cmp jg test or jbe cmp push in or add mov mov and add jno outsl push (bad) and shll xchg mov in loope sbb sub cmpsb mov insl add push sub jb (bad) xchg nop xor out loopne push ss add xchg mov adc loope and add xorl cmp jecxz add fnstenv jnp jp dec stos fildl shlb aas sbb lock aad xchg jbe call xchg xor add negb (bad) inc inc shrb cmpsb push sahf mov sub pop insb jecxz xchg push xchg test jge insb jecxz stos inc and push push lret jae,pt aas ficom rcll cmp adc xbegin jl loopne jno test jg pop push daa cmp mov push popa mov adc add inc sti sub icebp xchg jns fwait sub addr16 jge popl fstpl dec shl in fnstenv imul cmp pop (bad) std lret lahf sahf sbb int3 pop scas dec ficom mov push loop pop iret call inc adc movsb js push fmuls mov sbb or sahf xor and inc loop pusha mov and sub scas arpl mov adc mov imul imul mov sub xor mov sbb cmc adc scas cmp or jnp jae or sub adc repnz mov jnp stc fcmovu inc out xchg les mov fisubrl xchg xchg cmp jg dec pop pusha adc data16 cmp pop sub add jo jns into xchg pop push adc pop fs test xchg pop (bad) pop cmpsb ret pop jno sbb mov mov and out and jle sub push aas and jle push and outsb inc stc or cmpsb js cmp push sbb popf sbb xchg inc xor xchg ret aaa addr16 ret sub mov and jnp iret pop inc adc jl dec inc inc or aas scas mov jp fwait sbb sub (bad) jo cmc loope jnp mov mov and pop movsl inc popf mov out mov push jle mov pop mov sub scas lds hlt repz mov add and jge dec data16 xor inc into mov clc jb xchg mov mov push test in mov and pop push jg movsl lods cli icebp mov push sub in xor mov push insl movb movsb add in pusha sub mov daa out inc in mov inc fistp cmc mov jnp jge aaa cmp dec sub jp movb out sbb jecxz sbb mov cmc pop arpl loop lahf lret test sub and push sub mov js or pop notb adc dec mov cmpsl das adc adc test inc push dec int je jmp mov xor add lcall mov adc push stos push jo daa addr16 adc cmp stc sti fsubrs and imul mov xchg in add pop imul pushf sbb rolb dec (bad) cmc call test or int lea gs hlt adc loope in sub scas cmp xor arpl scas sbb and popa in hlt sbb (bad) cmpsb loope adc xor sub fcoms sub sbb aaa out xchg shrl sbb cltd and les sarb pop loopne mov lret into pop dec das mov je adc int icebp loopne mov nopl loope xchg and lea and repz out mov sub int3 sbb aam movsb jg jno sub scas les jl inc test in lock inc out int3 test rolb xor test dec and or dec fisttp int3 mov mov xlat push mov and xchg (bad) sahf js shlb xor jnp cmp dec jbe nop pop xchg (bad) repnz jnp cs mov mov incl inc (bad) cmpl cmp mov sub andb push adc insb test frstor dec mov or dec (bad) adc add xchg add lock or lods aas sti add dec sarl mov mov or fidiv cmp fs and (bad) lahf sti jp rclb adc stos (bad) mov inc push stos iret jge mov sbb xlat lock jae push out push mov inc cld pushf ljmp mov sbb mov push outsl rclb mov add jns scas daa in push fdivs std (bad) out jle lock inc out sub dec add or adcl cmp cs mov cmpsb movsl cmp pop movsb jg (bad) lret rolb push and mov mov jo fildll mov mov mov js call cmpl dec cmc (bad) xchg imul and cmp mov rcrb xchg mov jb sub jae cmp lods in push pop adc lock xchg add fldl imul jo cs mov outsb into inc fnsave mov leave out dec lret lock mov scas das cmc push popa stos push loopne enter mov repnz or test lcall cmp lds hlt adc cmp xor add cltd jns mov in xchg jmp adc addb imul cmp fild pop out sub dec and cmp pop sub sti fdivrs es push push push pop add stc add cmp cmp xor je jmp push ret (bad) enter mov pop rolb jo lock push push adc pop aad xchg cmpsl sbb aaa and sbb jmp ss incb icebp pop sub pop jbe sbb mov movsb insb and inc dec dec cmpsl in push jno sub das jbe (bad) xor aam and jnp lea or inc fdivl push negl xchg ja lcall pop adc mov call pop mov loop adc inc imul dec mov push ds (bad) mov mov aam dec or scas lock sub cmp roll xchg pop cltd ja rclb mov shrb lret sub les pop jo fld pop inc adc shl mov mov add fsubs xor in loopne adc bound cld jmp clc gs pop and stos inc das int3 jl cltd rcl mov lea xlat add (bad) mov xor repz or cmpsl xchg in aam stos popa rcr cmpsl lock dec and push mov (bad) jle mov pop jle lret cmp push or mov ss aaa negb in loope (bad) push jno and xchg (bad) mov outsl in mov xchg pop jecxz in pop (bad) pusha in ret and loop inc jbe mov pop mov adc stos jae imull sbb mov nop test add pop int (bad) fidiv decl and ljmp stos xor mov das test in pop clc iret cwtl in (bad) fcmovne jg in data16 test movsb mov popf (bad) lcall and inc xchg pushf xor cmp int gs pop or loop dec (bad) cli pushf in (bad) aas pop jp pop dec xchg lcall fwait cvtpi2ps jbe add inc aam test dec xchg push inc mov add ds cmp movsl cli mov mov or std mov add xor cmp cli arpl repz mov xchg pop ds jne sub mov cltd in xor pop (bad) leave and sbbl std jp mov jo scas cmpsb push jecxz cmpsl outsl insb mov jl inc and imul xchg movsb sub pop jge push mov lods pusha lret mov xchg mov mov gs call ficompl sbb xor fistpll or or lea sbb jb (bad) dec mov jecxz ss lret mov movsb cmp insb stos mov inc push jge sub test insb sbb and outsl mov fiadd sbb int3 and xor xchg xchg (bad) cmp xchg cmovp jb outsl test and dec dec ret dec roll ja pop cmp mov dec push adc dec roll lcall push (bad) in (bad) or je push mov mov push xchg mov stc (bad) icebp int3 addr16 cmp sti je or pop jae or mov xchg inc (bad) scas lret outsb push stc adc pop jno dec in or cwtl inc jnp (bad) fistp mov cltd mov stc pop push (bad) addr16 dec fistpll sub shrb sub das sbb pop (bad) (bad) mov mov xchg push cmp xor mov mov pop xor mov subl and and pushf mov xchg mov fs jecxz ds aam xchg out fdivrp loopne,pn and in inc add sub in lahf pop add cwtl adc mov daa sub xchg cli mov mov pop add sub cmpsb push pop js fcompl push call mov cs mov mov pop mov (bad) leave lea xor lret icebp dec out adc and ljmp aad in cmp (bad) rorb push jne mov psubw test mov push popf jle vpsrld sub subl push adc call pop dec sbb dec xchg insb xorl dec mov sar pusha (bad) jecxz (bad) sar mov test inc mov sbb lods sbb mov or xchg jmp outsb sahf jecxz movsl lret insb adc lcall andb or out dec xchg mov aaa lcall jge je sub (bad) mov mov out out and fnstcw inc call mov ja xor fldt scas fcmovb int fisttp clc repnz movlps pop aas add movb cmp pop repnz inc inc lahf imul loop loope xor std mov icebp push sub dec and push pop gs mov decl iret xchg out repz rolb popf ljmp adc clc addr16 mov push rcll jmp jmp or adc in lret bswap js lea es mov sub cmp push ret xchg imul dec pop lods adc pop fisttp mov adc or aad sub in mov rcrb dec mov jo ja mov iret mov fnop dec push rolb cs call fmulp pop jnp add adc aas cld (bad) repnz mov icebp pop sub lea cld sub and mov add (bad) imul jl sub icebp mov mov in mov or xor imul adc and mov mov push cmp fadd test (bad) dec jle addr16 or repnz inc in lret pop mov add stc cmc push sbb std ret xchg shlb shrb (bad) mov mov or pop fildll mov adc mov insb ret rorb into notl cli jg mov and clc dec pop clc jmp dec loop mov mov in mov pushf push repz iret pop pop inc cmp add aam mov in jns push jle dec sbb cmp in cld rorb jo sbb (bad) or xchg cltd push xchg cmpsl icebp xchg mov jle,pt xor cmp sub xchg pushf outsl add nop sub and fldenvs sti mov shrb pop fldt xor sti imul xor inc test es orl ds xor jp rcl cmp pop in inc xor cmp ja stc popa cmp (bad) movsb movsl xor adc sub mov lcall cmp pushf icebp and xor dec jo jbe std jmp in rcll inc incl cld mov xor mov pcmpeqd lahf or sbb cmp addl inc sub push pushf mov push jo and jle cmpsl or inc push imul in mov bound and out int sbb jmp push out inc mov test dec outsl or int3 pushf pop and sarl pop (bad) scas dec adc dec cmp inc test andb outsl ror pop pop addr16 push jp (bad) jbe (bad) push (bad) hlt jl xchg (bad) out nop (bad) xor dec mov or xchg jns mov std sbb gs das jnp loope xchg sbb mov xchg mov (bad) push mov and mov mov imul push mov jecxz jb dec daa inc (bad) or cmc movsl (bad) daa fsubrs ficoml mov or inc cld pop or mov adc mov ret mov push sahf push mov adc and test ja pop call shrl xor adc les mov mov sub fisubr enter inc or outsl sbb icebp cld addr16 inc sbb push mov mov mov push adc repnz or ret test (bad) push mov sbb sbbl sarl inc xchg push xor push (bad) inc adc cmp lahf pop sbb gs (bad) jl xchg inc xchg inc les mov xor inc dec addb pop jecxz mov mov inc (bad) lods sub sbb adc mov add mov es lock cld pop out lahf mov xchg ret push fadd fisubr ret sub push push mov or cld idivb mov or inc testb rcr insb adc leave ret sbb dec inc stos movsb pop xchg ret push repz scas cmp or adc std test je nop adc or fidivrl cs cs inc jnp jle pop test jl add loop mov movsl out lret orl pop outsb mov cmp jp xor test outsl dec push int3 cmp leave fild into pop outsb mov cli pop cli or add mov jnp dec cs pop das mov les jo cwtl mov sub pusha aaa mov sbb mov sahf mov and add sbb mov push mov dec movsl push cltd jg push out iret push psubsb repz cmpl scas jns mov inc (bad) jg pop mov hlt dec outsb or das and sbb and mov pushf in je mov cwtl sbb add es fwait mov mov sbb dec nop push and and push xor mov pop rclb adc outsl adc inc mov inc (bad) in movsb (bad) mov imul xchg xlat push sbb push pop lds or mov cwtl jbe mov in sub imul leave das dec cwtl cmc les (bad) gs iret fimull pop imul mov sbb inc ljmp gs xor std fldcw movsl cmp pop ss sbb or fbld ret and fcompl push dec dec add xor sub jp outsb inc jne mov jnp rorl xor jl fild dec xor pop popa mov es nop mov std outsl dec push test mov (bad) adc clc dec test pop iret dec xor inc jp mov sub jns lods adc int3 aaa ss xor loop loop stos scas addr16 xchg pop mov rcll ljmp or adc xor stos jmp hlt mov jbe rorl repnz dec jp inc jnp xchg cltd xor es hlt (bad) and pop es lods sub cltd fdivl js fldl bound pushf push (bad) xchg mov sbb add dec outsl cld push fwait or mov push ja add mov mov test jne out sahf sbb out mov sub sub jle jge push jns test je add dec jmp aas or and push (bad) mov mov mov and lret mov inc repnz and repz fisubr test aam inc xchg sub push sub push jl push int int3 test test xchg sub cld xor sbb jns std push sub (bad) out bnd pusha lea adc xchg ret mov je inc scas shll ds outsb pop ds xchg dec das test or mov sub jbe cmp jl repnz call (bad) outsl std stc and pop mov ret rcl push rorl das loop es nop sbb stos movsb (bad) dec test mov xor push sbb add mov or dec (bad) movsb cwtl jmp roll clc mov in mov xchg push or lea sbb mov out clc xor fidiv iret xchg test imul call sbb add push adcb cmp mov into daa sub mov orl jge divb ljmp (bad) into pop (bad) sub xor loopne mov rcr push and push push mov pushf mov mov mov rorl sub jecxz cmp mov mov scas fucomip fcmovb (bad) fwait mov sbb jne sub add fidiv add pop inc adc iret icebp repz js pop adc pop and pop lock lcall and out inc je pop pop repz adc nop out cmp les stos lret dec lods (bad) jmp add mov cmp test cwtl inc cs movsl lret aad test mov inc into sbb (bad) adc xor add fucomi adc sbb insl jae jp test jae xor adc xchg inc popf jl xlat fstl xlat dec outsb and das cmp (bad) fucomp and add mov mov adc dec addr16 pop pushf shlb add sub movsb pop mov dec scas dec jge pushf jmp cwtl sub cmpsl lret in inc jns,pt pop cli xor cwtl push pushf (bad) iret xor rcrl xchg ss out inc xor sub stos sbb ss pop test rorl mov pop and lret jg jne inc ljmp je pop dec in ljmp adc add dec mov mov (bad) cmp lods mov outsl cmp lods mov test clc popa inc (bad) xor (bad) cmpsl xchg aad cmp leave cld adc cltd fcoml out fs push in cmp mov mulb inc mov repnz xchg push xlat xchg mov sub pmuludq icebp or mov mov std movsb popa lahf inc movsl and xor mov sbb and inc hlt jp rorb dec xlat out and (bad) pop shlb std fnstcw ss das ror jge jg sbb jbe pop ss enter adc mov inc cli xor and mov shll mov insb (bad) jns dec in lahf mov scas fisubl imulb cmp sahf adc xchg outsb pop stos daa clc xchg sbb add in aas ljmp inc jno cmpsl repz les lock decl mulb js pusha dec stc jp and xlat mov add lahf jo jecxz js xchg jg mov inc mov adc outsb push xchg push add pop repz fistp mov and dec loop xor loopne sub (bad) repnz mov sahf dec xchg dec (bad) dec dec inc sbb dec sbb enter mov movsb sbb popw stos stc lahf and or sub int inc lods jbe int popa xchg xchg inc sbb (bad) push fiadd outsl xlat jns gs mov loop dec popf mov int3 jbe (bad) xor lea imul inc movsl mov sarl test inc adc mov loop xchg out iret inc lcall inc dec jmp fs rep sbb std sbb scas scas movsl sbb rorb (bad) mov fwait cmp adc xchg sub push sbb xchg jae in and daa mov mov clc lret fisttpll pop and movl mov dec inc out mov push loop in mov or jmp test mov js cs cmp jg (bad) sub mov dec jg push movsb pop gs xchg xchg jmp test addb xchg test int3 into out ds pop jb rorb sbb ja push in in (bad) rol pop std dec daa lcall and scas ja add pop sarl ret add mov in mov inc sarb cli push inc cmc jp roll mov xchg outsb dec (bad) mov fdivrs adc pop cmp aad cmp lahf push sub dec xlat cmpsb push fimull mov lock jae xor cmp adc push push dec push iret and aam sbb aam dec mov fs sub jb (bad) ss in and clc pop xor leave adc cs jg dec sbb (bad) push jne enter imul push push jne cmp imul jae adc test loop xchg inc lcall mov clc stc or sbb scas into adc scas lret shrb test jg testb add and inc jg jge aad mov movsb and pop test dec sub icebp cmp aas pop add repz ss jl pop ss add aam insb aas jne ljmp mov jnp movsb sti packssdw loop mov shll mov out sbbl pop jg js adc int3 mov jnp test pop adc jg and pop scas xchg mov ss pop push xchg popa mov loope or xor into stc scas sub sbb je pop xchg mov test lock or sbb pop mov insb ror daa out dec adc pop cwtl xor xchg lahf sysret cwtl inc daa adc pop adc sbb push mov ret fisubrl and sub iret int3 fcoms ret inc aam je jmp int sbb or mov loop dec icebp in adc mov repnz loop inc rorb adc sbb hlt gs mov jne xchg jmp loop or inc inc push fstl (bad) out inc lods pop sbb fistpll scas out cld (bad) xor jbe adcl sub mov xchg popf sti (bad) loopne xchg cmp add mov std pop and adc gs adc cmp test and jo sahf mov jnp sbb mov popa leave add es out loop fidivrl mov push movsl push inc insb mov repnz fwait push push popf lods pop daa push aas and std ljmp je addr16 mov ret lahf cmp xor addb and mov js fsubrl leave enter or divl lret icebp xor push lahf add mov in or jb cs dec addr16 push out fs xor daa xlat jge mov mov cwtl ret lret xchg pop xor (bad) in test xchg lahf lods ret and sbb cmc ja scas ficompl fstpt lods je aam jb jno dec nop add mov cmp push mov lods or mov addl mov or iret fldt sahf data16 pusha add mov push dec ljmp cmpsb cmp push xchg out (bad) xor imull (bad) cmpsb test aad lods xor mov imul sti orl in ret bsr gs pop push pop orl out call js fs push add and popf sub mov dec xor (bad) (bad) xor mov popf pop leave inc (bad) sbb xchg mov loope mov xchg rcrl (bad) test cmp or mov fcmovnu neg fistpl js aad ror nop cmp nop jo lcall dec orb mov inc cmpsl daa or or mov push cld in push mov xchg ret mov sbb es aas dec pop repnz test fdivp inc mov xor dec loope cli add cmp add inc fimul inc add dec push das push xchg add mov cmpsl lcall divl mov sarl mov lcall not in (bad) (bad) fstps push jne scas ret shl pop xor imul push shrl imul push push push cmc mov mov scas insl cmp int sub sbb cmc push loope ret fcmovb gs mov fstl fldl int3 jmp add add unpcklps xchg in push jns in jne daa xchg test andb mov and test outsb movsb (bad) sbb dec inc ds test cs jl adc xchg int3 push ss mov out cmp lods jmp in mov pop loope das pop sbb (bad) repnz cmpsb jbe pop sbb es dec clc rolb jg call pushf nop aam mov (bad) pop fsubr pop pop insb add lock popa aas test pushf push mov add mov hlt outsl pop ret aaa les in and add out jp mov push or cmp in xchg lock aas mov sbb out dec iret jl mov int3 or data16 push clc cmp mov insb lret lahf lahf aam repnz sbb cmp pop adc in jmp add sahf pop sub mov ja (bad) adc inc adcl pop pop cmc mov pop or int pop push jb js ds adc mov push sub shlb inc push insl aam sbb xlat idiv jl das push mov cmpsb fstps sbb stc lahf fdivl movl pop add sbb cs into cmp cmp inc faddl jmp call cmp lahf out cmpsl mov jne adc jb fsub imul jnp mov jg add pop cmp xchg cmpsl mov xor fimull push scas mov push loopne dec lahf loopne,pn jo scas or das dec shrl cltd js loop push cmp jg fildll insb ja mov (bad) lahf sbb int ljmp enter aad lea int3 adcb mov adc test dec lods adc pop push lds daa out (bad) adc pop outsl sbb int mov rol cs pop fildl arpl lcall mov and pop das insl xor dec loopne jle out xchg leave (bad) cmpsl push sub adc imul sbb (bad) jae stc (bad) stos fnstsw pop in leave es test gs push and mov xchg stos sti fisttpll push push jno stc mov cld jg or scas mov ret adc fs mov (bad) mov clc std mov sbb lret pop and dec xor fstpl push sahf enter (bad) dec rcll mov pop dec das (bad) cmp lret std cmp cltd dec pusha and movsl in ret or xor xchg sbb mov icebp fnstsw rcr mov inc mov cmp lds pop arpl mov lahf ficompl push out xor sbbb fcomp xchg push xchg mov (bad) dec xchg adc sub lret lahf sbb repnz push sub xchg jle jns mov stos imul (bad) mov cwtl mov stos xchg adc lcall jge sbb pushf ss cmpb test cmp dec andb fbstp mov aaa sub lds fwait (bad) pop mov clc and adc sub sbb inc jno out xchg jne nop jbe sub mov data16 sbb les lods xor mov add or mov dec (bad) cmc xor das rclb sub jl (bad) lods cltd test (bad) mov cmp repz xchg adc cmp int cmp xor push fild ds adc aas jg repz mov dec fnstenv push out lock xor inc sub cmp rolb xchg stc pop lods add mov test cld mov cmc test mov stos popf add dec xchg xchg fs imul inc push in (bad) jge push or adc cmpsb lcall sti std mov pop repz jp test jmp xchg adc lods ret pop add sbb xchg jge jo or aad pop (bad) sbb jge aas (bad) adc cli mov sub insl aam ret test xor aas push int icebp loop jecxz jle mov sbb xor and inc inc incl dec outsb mov fucomp divb pop sub fcmovu jbe mov xor (bad) sbb mov cmp movsb and insl dec les jl adc stc sub hlt fwait mov rcrb (bad) sub ficompl mov adc data16 push inc arpl (bad) push cmp sub sbb mov wrmsr cmpsb into dec sub pop out (bad) cli adc sbb and imulb ret repnz in jne push testl xor scas xchg xor sub jl mov or push mov mov cmp pop (bad) int3 sbb int sbb gs or outsb mov pop jns sub jnp icebp cld and out or xchg mov aas leave in scas inc inc xchg (bad) mov sahf xchg mov scas das or (bad) push push mov cwtl enter test sub outsb inc sub mov ret je (bad) xor ss mov lcall pusha insb vmwrite push sbb aas sub movsb je call clc sbb lods pop (bad) in cmp and (bad) or fwait pop loop cmovne push push addr16 into jno sub push mov pop jmp dec (bad) mov cmp into into inc (bad) xor int3 xor (bad) adc movsb ss cs dec notl (bad) jge or pop inc xor dec in rclb push cld add js shlb inc das inc mov aas push ficomp push sub lret popa fcoms pop jmp mov rol adc or mov xchg std int3 (bad) lea mov and jbe,pn mov ja xchg sbb inc int bound adc fisubl lahf adc out movsb or push inc mov push ret pop (bad) out je pop gs push int3 pop scas mov fs jbe fidivr mov or or mov lahf and addb gs xchg adc mov popa faddp lock xor xor xor jne ret fdivrs addr16 lcall arpl dec pop push add loop in sub out adc jle imul test dec packuswb push jecxz iret jno inc (bad) rcr in xor inc shlb cmpb movzbl mov insl mov rcll testl cmp fs mov call cmp loope leave fs fisttpll push cmp aaa sbb ljmp lret fistpl xchg (bad) cmc outsl mov mov cld iret rcrb mov push pusha push push pop mov icebp xchg lds xchg (bad) leave call jae sti xchg lea inc and mov mov imul jbe inc add inc inc out mov push xchg lock mov jns lods lret pop lret ja mov (bad) xor pop and imul push push test in addr16 push loopne mov cmp shld cltd pop push cmpsb out add add mov gs mov (bad) shll cwtl popf scas and lahf fldenv xlat mov ss inc push popa addl sub test adc std xor mov push mov jae js ret test jl test iret icebp xchg xor adc cmp adc hlt pop pop cmpsb pushf jge xor sub xchg loopne cmp scas rorl inc push mov xor adc loopne jmp mov jno jmp je pop adc loop pop jle rorb xor push mov push int3 pop mov jno popa push push hlt (bad) jecxz mov stos and ret xchg repnz sbb jecxz sbb push and cmp mov test cmp stos add push pop ljmp addr16 leave repz jne aaa or jp pushf (bad) je aad test scas daa or stos pop int pop rolb add loope cmc jo gs (bad) mov xor dec sub pusha push out aad inc mov xchg cmc (bad) (bad) push nop pop loop xor gs stc lds push adc lods xchg fistl jo repnz cmpl dec lods (bad) jmp and dec pusha mov mov push mov cmp add imul insb sub dec cmp insl mov out pop push pop cmp out adc sbb mov (bad) call jle dec inc ds iret scas sbb xchg or mov dec or sbb ds add fmulp jb inc fs popa xchg push imul (bad) pop xor in (bad) hlt cli mulb mov or xor mov dec arpl faddl and scas bound sbbl lahf mov cmp push ficompl js (bad) out imul sub mov cwtl xor nop test sub cltd push loop inc ja icebp xor movsb lods sti cmpsl pop jno into mov pop mov mov push pop ret xchg sub (bad) js add xchg mov mov sbb loop pushf cmp and xor xchg mov adc iret and fs cmpsb loop punpckhbw jmp add xor test mov xchg fnsave push cmp cli and cmc insb mov push dec cmpsl cs int fwait iret ret iret scas dec jne test fdiv mov inc or (bad) mov inc inc inc push mov push int ljmp jb in mov dec jl ret sub pop dec push add iret test mov mov dec xchg add pop xchg mov adc (bad) jnp inc or mov repnz fmull inc xchg fs xor lahf add cld and insb ljmp inc or mov jns hlt pop cmpl call inc mov push test mov fmull icebp sub rclb cmp jnp (bad) sub stc mov jl ror out jmp pop push jecxz and xorl sbb adc or xchg jle xor pop push stc popf imul fdivs adc test add roll (bad) push fwait dec or fucomi jl int3 (bad) ljmp fs jecxz xchg stos mov pop mov imul repz (bad) sub jns lods lret notb jbe pusha pop jmp out dec ljmp arpl test (bad) in pop cs (bad) (bad) mov (bad) mul aam test cs mov lret pushf and jae or scas and jno dec pushaw aad dec cltd xor jo fisttp mov rorl test int3 or mov out pop push ret and call pop test dec insl movsb and pop mov lcall xor (bad) or push add cmc push cmc movsb fs jbe jmp scas pusha or gs inc hlt inc test xchg ret mov add mov punpcklbw xor adc addl sti cmc push add pusha mov push or pop jb xlat mov nop aas test insl cmc loopne sbb clc (bad) inc dec imul orl jecxz xor test dec push into cli mov sbb push pop cmc sti and xchg jl enter push cmp add cmp jp icebp das sbb in addr16 sub pushf in sub push mov loop push xor int3 xor shlb sub ljmp mov adc rolb jbe rol xchg shr nop fwait adc jae in je xchg cwtl mov cld outsl in das fucomi aam jle jno data16 mov aas jp sub lock js icebp cli lods sbb bound movsb loop cmp ljmp (bad) xor cwtl neg push je sbb ss fs mov imul outsl push mov mov jmp (bad) mov xor fsub rorb fdivs push inc cmp sub lock xor repnz imul je or fldenv xor adc dec xor xor ljmp xor nopl das add mov testb inc repz mov add pop cltd dec jne or lea adc dec xor popf sub leave test inc movsl push xor movsl jg pushf mov dec (bad) fidivr lock and icebp fwait mov xor movsb sub mov into xchg clc (bad) adc and jne or inc js imul adc bound je mov jb jge mov push out out dec pop idivl fcmovbe mov out sbb mov movsb popf outsb mov sub adc mov ficompl pop out ret out push pop stos xor out movsl xor (bad) addl insb leave and psubq outsb dec cli lret ss lods aaa cmc (bad) push dec int sub push xchg shl lods pop mov jmp xor sar fsts or sub lret sub scas fisttpl dec movsb push stos xor enter xchg test adc je or cwtl sub xchg pop or (bad) sub stos ret jno jmp mov add xchg sub inc addr16 mov pop adc jmp gs jb test pop pusha jns stos jb enter lahf pop mov js sub (bad) pop aam inc cmp mov mov xchg rorb push jge push mov sub mov or and repnz in inc mov mov fbld push pop add orb fmull (bad) aam (bad) push call (bad) xor mov or aaa sbb loopne inc das inc inc mov es cmpsl sub mov arpl rolb jmp test fucomi in add pop movsb push rorl and dec mov repnz push or dec (bad) scas lret jg mov xchg inc icebp lea daa xchg shl insl or cmp popf pop dec mov call xchg jg mov push push pop (bad) cmpsl xchg sarl jns dec pop enter adc mov xchg dec imul xlat stc mov add lock add pop push andb pop mov movsl rcr ret sub cmp outsb loopne (bad) (bad) out loope fdivrs popa adc fsubrl xor cmp or mov inc out jns fs sub into xchg pop in jae cltd out inc or mov jae call adc movsl xchg sub scas pop (bad) mov loop iret jb mov jb ret adc fprem lds clc rcll cmp inc scas mov sbb add sub addw addr16 jl cmovne (bad) mov push jp xrelease xor and ljmp adc or mov (bad) aaa cltd pop arpl fsubl jne adc mov sub and iret inc jo dec xlat pop jno pop jae vpaddd xchg sahf icebp iret test and test test fdiv dec movsl insb js icebp je (bad) xchg inc dec out mov hlt mov pop aam xchg pusha or ljmp adc mov jl dec mov cwtl enter loope add enter push xor inc cmpsb hlt aas mov mov sbb xchg js pusha (bad) lock roll mov movb cmp dec mov cwtl or cmp aam (bad) insl test arpl lods bnd test jp add jo outsl testb fistpll mov cmp xor rorb insl cltd lea lret ror cmc add aam add (bad) cld lret sub movsb mov or mov scas pop repz inc mov ss xor inc pop mov addr16 adc mov ret sbb mov data16 (bad) loop rcrb lods xor lahf dec aaa scas test sti push out shl mov andb jmp mov outsl adc cwtl paddd mov std jg jp movsl pop insl cmp sti lods pop cmp cmp int3 in mov loope or cmp mov jns mov mov mov fwait int xchg std cmp mov lcall mov inc mov cmpxchg jae and pop add in and bound iret pop adc xor xchg (bad) roll dec inc xchg dec mov mov xor in jbe sarl xor push push xchg std out mov out iret or repnz xor das test aad ror aad push adc add inc cmp xor cmp sbb pop jbe jle inc push mov popf mov (bad) ss in gs lahf mov (bad) decl jp and xor mov bswap pushf inc psubq addb sub test fisub pop xchg inc push xchg or scas std es enter or mov and pop jb fimul dec adc adc or bound inc jp push jbe mov enter pusha cld xchg rcrb (bad) push idiv jmp int ret or jmp add dec aam enter mov mov and les arpl jbe ss daa mov push cmpsl popf in cmp push arpl add or pop cmp iret pop mov add ret in push insl (bad) push (bad) mov cmp dec daa sub pushf mov mov mov push xchg pop cmp (bad) jne xor jns insl push and pusha test fdivs jne (bad) or repz mov xor jmp xchg mov xchg pop shrb nop fsubrs leave mov pusha stc add shrb jns sub mov (bad) inc out sub pop push push insb push push cmp xchg mov lret cmp lods addl add inc aad jp jl (bad) iret cmpsb push pop notb sarb out movsb bound cmp lea inc scas xchg mov iret push stc loop or cmp aas adc and fsincos jl cmp mov enter imul xor cmp push fdivl out outsl outsl (bad) push gs sub or sbbl (bad) pushf push mov cli pop cmpsl imul loope dec mov xchg xchg imul scas pop jle iret mov daa daa shll adc xor mov mov outsb jp stos hlt mov push arpl xchg (bad) jg sbbb mov rcrb jecxz push scas fisubrl rclb push inc push movsl popf mov iret ds sbb cmp scas jnp pand pop inc clc fistpll into cld adc mov sub pop or repnz fs push addr16 fcomi pop in mov mov xchg cmp faddl mov leave lcall out xchg js pushf mov jge xchg pop stc mov ljmp outsb shrb jmp pop xor int cltd xchg int mov mov daa out add call mov fiadd nop add (bad) dec aaa mov dec cltd jns stos fmul (bad) enter push lock rcrl enter mov es (bad) lea mov and sub das dec xchg jmp mov in inc stc jg pop mov mov inc inc xor (bad) inc inc rorb or add mov cmc sub int (bad) repnz in (bad) (bad) leave mov test addr16 (bad) sbb repnz pop in imul lret pop push or and push in adc call adc mov sbb cwtl cmc in jne stc inc mov mov ret outsl add xlat push es adc cmp clc and (bad) sbb movsl sbb fild decb ja ss imul enter jmp pop (bad) iret fdivs in ds rol add repnz pop cmp pop mov dec pop jae and sub pop push xchg lods (bad) int3 inc (bad) and stos jmp mov add ds arpl jge mov sub loope (bad) test fs pop pop sahf sbb mov das fcmovnbe andl popf cmp mov xor push cmp roll movb pop nop cli sub xchg pop aas mov pop (bad) out mov outsl mov ljmp seto inc dec mov or xchg mov cli jbe jnp aas rcr lahf imul lods mov or test push cli bound dec inc (bad) lea inc sub sub cmp repnz int3 xor push jb cmc jbe fnsave pop or dec jbe test jne xor out sub in mov jmp fs xchg xchg std (bad) fsubrl sub mov jne outsl xchg push shll es cmp jp int3 mov pop sbb cmp or fbstp mov and xor or cmpsl loope test mull pop pushf mov or sar dec fmulp outsb or fadd cld lods ret lock test dec sbb and pop and lret adc jne das push push jnp cwtl (bad) icebp and xor inc or ljmp mov add rcrb in lock daa insl sub loope fist lds pop leave in repz mov sbb pop fisubrl pop out xchg and lds (bad) adc arpl mov xchg sub xchg frstor cmc xor addr16 cld inc movsb mov and arpl mov xchg mov xchg pop inc jmp adc repnz add inc dec fmul rcrb lock mov outsb adc rcll pop mov adc cmpsl mov in fdivl (bad) cmpsb sahf hlt sbb pop das or ds fmulp sub loop mov jae jecxz stos in pop das dec inc in mov push sbb ficomp adc xor (bad) jno out mov push jno addr16 lock inc ja cmpsb cmp jae mov push sub nop xor (bad) stos aaa ror insl loope mov xchg (bad) rsqrtps pop lret jge and jo xlat lret inc adc sub mov outsb jo xchg mov pop sbb sbb pop mov fcmovbe arpl popa jbe mov inc add pop push push pop les lahf bound or test push add lods iret rcll lock fldenv into aaa cld ljmp rorl add xchg push aas ds mov imull aam iret push jb frstor jp test out adc mov push aad iret sbb sub xlat pop mov mov push xor sbb xor xchg push scas jae adcl sbb or xchg adc add inc and ret cwtl mov push jl or out inc invd xchg imul xchg jne lods ja cmc cmp jecxz stos mov or xchg mov cmp push sti ret std jno stc mov call push sbb ja mov enter stc fimull fisubrl adc (bad) sbb mov fmuls repnz andl adc push lcall fldt stos inc enter ljmp fwait aad scas xor mov cmc out rdmsr rcr add loope add or mov dec sbb mov cmp loope testb mov sti sbb les mov mov fiadd adc push sub jp inc lcall (bad) call pushf cmc repz loope and dec sbb add stc push jl stos sub loopne pop addr16 ljmp lods mov (bad) xor sbb dec jb sbb mov (bad) lret pop jns and movsl pushf stc (bad) pop rcrb scas mov cmp movb test (bad) adc mov cli imul out sbb lret cltd xchg les jnp cmp mov mov inc lea aam sahf xor pop sub jmp xlat jae rcll mov or ds les mov pop hlt loopne xchg lcall (bad) ss add aad in lret jl enter je movsb and outsl jb mov mov test fidiv out lds divl cs pop or repnz mov jns (bad) and inc insl cs cli popa lcall mov popf fiaddl sbb push add xchg in xchg popf push stos cld sbb imul cli repnz shr add in std loope rcr dec cmpsb mov loopne fndisi(8087 sub cwtl lahf aam out repnz push pop hlt cmp neg xor imul pop (bad) repnz pop (bad) xor arpl cmpsl js sub pusha test insl call sbb shrl jne sub adc pop or pop xchg or push push ja add jo,pn inc scas lods jns (bad) xor cmp jg push and icebp and or jnp jl test test loopne ds push push mov cmp lret fcomi rorl pop ss bnd add pop fs push mov (bad) push imul imul push jl insl out xlat pop fstpt and cmc lods adc xor or test inc das loope (bad) push scas xchg inc mov dec inc lcall mov test xor call cli mov (bad) test arpl xor inc fstl clc notb jae jbe fwait cmp (bad) cmp (bad) dec or shrl mov push scas loopne cwtl cmc icebp out les dec push lret rclb (bad) xor inc (bad) imul test lahf test (bad) sahf cli mov std movsb cmp or mov fcmovnu ja sbb (bad) insb mov jbe int add dec lret mov cmp fbstp insb test cmpsb push int3 adc or jns pop cmpsb xlat pop ljmp inc (bad) scas rcrb adc mov push xor and mov loope fldl xchg cmp movsl pop les cmp bound iret cli inc mov dec cs mov and pop test lds (bad) int3 mov sub push lods adc or push pop scas and adc xchg aaa lock test adc mov xchg inc popf js aaa test pop mov test out inc jno xchg pop xlat bnd lods dec repz stc iret in push jb push mov sbbl mov jae movsb or insl add nop mov je bound cs mov sbb adc movsl incb test test repnz and inc fimull rclb cltd jp pushf test add fstpt adc cmp push movsl dec ja jmp push shl add stos lods or mov adc or add push dec (bad) push sbb sub jns ror jb cmp add or dec iret les out xor sbb push and xchg mov push insl mov inc xchg add push sahf fucomp jl adc ret lret das sub mov pop iret imul xor push popf sub ds fwait lahf inc pop xlat adc into into data16 mov sbb push sbb push stos daa js lods iret out outsl push daa mov dec lods int dec les cmp into push xchg xor xchg xchg outsb fiaddl adc push lds insb stos rcrb lods push stc repnz addr16 stos in jo cmp cltd push push inc jmp xor rolb pop (bad) out push inc xor in in ror or jge in pop jae pop (bad) jae push stos pop movsb icebp mov mov or test lcall iret mov pop mov aam mov icebp jnp test mov pop rclb fsubs adc fisttp hlt cmpsb (bad) fimull ljmp jecxz inc jae hlt xchg sub das scas (bad) mov cmp cld outsl fwait push mov jmp fcomi sub scas je push jns loopne out push es sbb xorl in test pop das mov mov out sbb incl adc stos dec sub aas rclb repnz pop aad jb in int push cmp push cld ds xchg pop lahf mov pop pop fnop or ja jb inc hlt daa or dec xchg jb cli jo,pt int3 fldcw dec stc cli popf or xchg shrl fcom decb (bad) xchg ficomp mov repz cmp lea ret xchg sub inc ds push (bad) mov std movsl pusha movsb addl roll add clc push ja cmc mov nop lahf ror sbb aas sbb or rorl divl sub lahf xor lcall mov mov mov repnz mov jbe (bad) int fcoml es aam cmp ds lret outsb mov ret leave and repnz mov or imul sub aam test nop (bad) pop mov clc sti jmp mov mov dec rorl jl mov sub int push jge push adc ret lock and stc jmp push jp ret fwait ja test (bad) sbb inc orl xlat fdivrs in in (bad) std fs mov jo push mov cmp mov pop ljmp or pop lcall jp jo hlt pop inc cmpsl lock sbb cmp jg jg inc mov cs adc add mov out mov or mov inc mov mov jle (bad) aaa mov ret mov cltd adc movsb pop pop nop mov inc xor adc mov push push movsl lret fisubl popa or call inc jo pusha add test push in push add jle mov sbbl inc in cmp add pop ljmp pushl into pop mov mov xor mov addr16 push divl arpl mov inc fsubs xor test lcall (bad) ds pushf jne fsubl add push cmp and xor adc inc scas fmulp je inc out jg mov (bad) pop jno pop movaps ret aaa rol movsb outsl dec cmp inc aas out mov pop movsb lods xlat mov xor xchg inc aam xor (bad) repnz hlt mov test inc aas mov lret pop mov sbb push xchg out lret and push mov jbe fs das movsl mov pop xchg mov cmp adc rolb lds dec bound xor das lret push lahf test push (bad) jmp sub mov push and leave push sarb nop sbb bnd lahf push outsl push sbb jp jo xlat sbb mov push pop inc dec daa (bad) pop out lret sti nop out push cmp movsl aaa push daa rclb subb in lret test add add mov (bad) dec in mov inc (bad) mov mov pop insb icebp sub xor sub add mov jb fcompl out dec mov dec adc jae sub sbbl in or (bad) xor incl fcompp push adc (bad) jecxz pusha mov (bad) daa leave (bad) mov and xor cmp pop mov outsl push pop and mov sbb push (bad) cwtl jno test add sbb xchg cmp sub xchg idivb popf jecxz and xchg imulb dec loopne loope push jns dec out sub sbb lret push lret cmpsl aas push in sub lds iret inc sbb jbe inc push cmp out mov aas cmpsb mov push jo inc outsb nop pusha lret cmc icebp xchg and int and out xchg or push nop mov rolb cmp jns (bad) sbb dec push jne daa lods sbb ret push fisttpll mov jge enter (bad) or push andl popa xor test insl dec aam into mov jge cmc dec rorl or sarb pop or rclb mov pop out or mov or popf xchg and mov add mov out xor (bad) xor (bad) mov cs sbb sub cmp icebp xadd (bad) sub add out mov jns push cmp xor xchg loop addl sub lods fidiv aad repnz jp ljmp mov or add mov fdivrs add push lret dec xchg lcall popf out mov cs dec adc inc inc mul (bad) (bad) jbe push mov pusha cltd repz btc xlat not xchg or mov jo xchg dec es cmp jne xchg cld lds push int3 aas scas pusha sbb jle jnp add imul sbb jle adc xor pop test ss push cmc inc ja (bad) and into xchg or popf lcall dec (bad) es pop sbb dec mov inc adc mov sub inc push loopne pop and jmp in and outsl mov xchg in mov clc mov add mov jle rol loopne adc push loopew and enter pop fmul (bad) aaa in sub jmp movsl sbb lods mov xchg and add xchg mov mov xor pop popf fadd jmp cmp add xor rclb dec xchg mov push pop fisubr cmpsb mov fcomps pushf mov pop outsl cltd fs lea cmp cmpsb jno loope mov cmp adc repz outsb lcall jp dec and testl aam (bad) mull sub xor mov or out adc pop add jmp icebp loope xchg mov out out dec outsb ficoml adc or insb shrb rol lret dec dec fnsave jge cmp lea cmp (bad) rcrb sbb sbb mov inc mov inc sarl or pop hlt and inc (bad) xchg out enter pop mov add rol loopne mov fisub dec xor push xchg lds jns test orl stos int sub ret add push dec cmp inc (bad) mov jle aaa or push push or daa sbb repnz movsb rclb aam inc stos hlt repnz sub push aas (bad) lcall ds pushf mov push jmp xorb sub mov popf mov jmp fisubrl mov push or mov imul lcall (bad) fwait jge cmc inc (bad) outsl inc lock push rep icebp dec pop (bad) pop faddp test (bad) xchg loop leave in daa jns (bad) mov jg push rcrb imul mov and ljmp dec jmp jecxz popf or dec mov loop inc lret pushl or cwtl sub inc incb test mov stos pop cmp mov pop push (bad) fcmovnb aam lock push sti sbb mov movsb in dec outsb fsub outsl mov mov insl dec cmp in lods mov xor movntq jns repnz ja shlb push xchg lcall in into inc nop jbe inc por sub ja and sub lcall sbb pop dec mov or mov popa andl jo jb stc outsb and add adc pop mov mov je sti out mov push sub scas cmpsb fist pop (bad) xchg test in jbe inc popa fadd or data16 popf stc dec std iret aaa pop in sbb mov mov test xchg loopne les stos mov and jp bound out cltd insb mov xchg cltd movsl int (bad) add (bad) jno cli sub fisttp les jnp adc adc clc loopne mov jecxz nop cmp sub sbb icebp es jp mov sbb add push rcr in mov mov popf arpl push iret sbbl out mov into adc pop aam mov je xor out aas mov mov loope in mov xchg mov out mov push mov xor (bad) cld pop or xor xlat xor ljmp pop shrl movsb or jb and lds inc ja xchg push add fistpll jmp or xchg ljmp mov jecxz or ficoml xor (bad) fidivrl outsb xor or push push mov leave jno cmp aaa les mov outsl fwait sbbl rcrb lea or js mov movsb push cmpsl push inc push inc das xor xor cmp cmp je add fidivrl pusha inc mov mov pop xor cmp movsb push inc or je out rcll and xor lds mov ss mov xchg mov add daa cmp push rcll adc mov cmp cmp push pushf jbe cli mov xor sti in dec in lock stos shr scas adc test cs mov orl xchg cwtl sbb loop xchg cmpl aaa (bad) pop aas push mov xor add dec mov push popf sub lahf jg notl jne jge ja jmp push xorl pop sub rcll xor xlat fbld in push leave mov jl pop (bad) out sbb ret (bad) clc mov jae daa fdivs jns push out mov loopne add mov push movb popf enter mov inc mov lods push cmc cmp cmp or xorb dec loopne les (bad) or sbb jecxz loope inc ds jbe cwtl ja aad pop and mov in loop test inc fdivrp xchg shlb outsb movsl (bad) and or pop lret sarb cwtl inc lea xor mov mov sub pop cmp (bad) cmp test jmp xor jae addb push mov sbb cmp aam rcrl inc adc shlb xchg cmp int dec mov out movsl dec fidivl loope stos mov pop push dec in inc cmp mov adc jne loopne inc daa mov dec aaa mov fildll jl fistl dec sub jb add pop fwait sub int3 inc cmpsb add dec inc ds (bad) decl ljmp das cltd mov jns (bad) push xor inc mov sahf xchg test or fbld dec add push movsb imul lods daa push pop stc lods jae mov imul or xchg lock (bad) adc divl fwait mov loop sti cmp fdivs or push adc inc push push xor or fsubl iret inc jae sub movhps ret dec out mov fsubl add mov imul cmpsl mov cld mov fcmovb add jp xor in dec pop lea or dec xor sub icebp add ja pusha jmp (bad) loopne push push jne pop push lret mov cwtl fsts pop sub sahf dec sub sbb setns mov sbb icebp xor (bad) cmp jecxz test and push out daa (bad) jge stos std sbb jne js jp cli mov add dec mov mov inc cmp hlt ss (bad) mov adc fstpl daa and or fsubp stos (bad) adc and jo and jp xchg inc out or jge fscale enter (bad) push fwait xor mov pop gs mov or mov or sub aad aam push push mov nop jno pop cmp sub adc pop mov xchg push sbb int3 jbe ja push or (bad) addr16 movsl mov mov jno movsl pop popf imul in flds daa xor lods cltd jno and test lods lcall cmp inc test aaa lock mov lret mov cmpsl icebp and aam mov sbb pop mov arpl fninit xchg xchg gs cmp int3 movsl xor adc dec add sub mov ret or in test pop push mov rolb sub pop add jae xchg fdivrs stos mov push es les jecxz xchg xchg sub and inc or scas cmp cmp daa icebp cmpsb mov jecxz cmc aaa push mov lods pop mov jno jb mov divl lock das jg pop clc idiv mov ret stos divb iret sbb lods imul mov and xchg lods inc mov addr16 xor jg mov push adc in scas fnsave lods adc into mov lods es loop inc arpl inc sub mov adc (bad) call sub out mov js dec popa or inc or sub jo (bad) out mov sub add insb pop pop ucomiss pop (bad) or and adc push (bad) cmp lods repz stc imul mov cmp lods popf xchg test mov push sbb ret int3 sbb push pop jns dec pop sub adc sbb push rorb in or es test imul shll iret mov lret xor cmp jge xor mov (bad) fdivr adc push cltd dec out dec popa outsb mov loopne dec mov imul loope push cmc inc imul in in dec cmc cltd aad inc (bad) mov push mov push sahf ret adc dec adc mov vmread dec popa sub pop and mov std ret push (bad) xlat sub (bad) xor mov push and dec into insl sub push push jbe fldl das test push fbld (bad) mov pop add outsb fimull jne sub push jmp addr16 dec dec jno sahf rclb enter pop dec dec loop sarl leave in icebp insb adc mov adc jle (bad) outsl fwait and mov out es lods mov lret xor iret inc jbe jmp or hlt push fwait inc test ja pop mov mov clc arpl push jno imul xchg leave pusha xchg dec push je pop jno (bad) xor test sbb mov out jno pusha sbb inc push test scas pop (bad) mov xor add push jo xor test dec sbb xor jae ds loope into ret loope xor and addl sub jge pop mov cld out mov je in aad xlat and test mov lret cmpsb or jae inc repnz jle sub mov adc iret lret hlt dec jg push scas pop push mov cmp call aas xor cltd icebp arpl (bad) (bad) push xchg adc int mov jg sub cmp or mov xchg call and sarl pusha leave test ljmp aad insb jmp push or jmp fst add xor push outsl stc sbb mov les push dec fisubl mov loop bound push sub bound jnp and nop mov jnp les xor mov xchg inc mov test pop test mov in lea addr16 fild or call scas jne dec nop mulb inc out mov into mov shl cwtl sbbl adc and pop xor or push pop pop pop jg sahf sbb cmp dec movsl out add sbb mov daa js dec push imul and pop rcl enter add fldcw inc sbb cmpsb cmpsb xchg out and adc test pop xor adc ret pusha hlt repz add push popa pop fistpl sub sti mov sub aad ja rcrb dec sahf arpl stos (bad) mov rol mov loop addr16 push or pop sub pop pop popf dec cli in es xor std add loope mov and add addr16 popf orl mov adc sahf aaa prefetchwt1 jge ret je and imul add ss pop sub jg test or pop pop jmp inc sbb mov arpl xor popa mov jl inc dec dec repnz loop xor bound jg (bad) cmc cmc adc into and lret adc mov cmc dec sub jb pop and daa popa mov shr push fwait sbb xor push (bad) cmp xchg mov pusha fldcw mov inc push xchg out sbbb pop (bad) flds xchg stc dec or add pop push xor jne push add adc xchg add sbb mov aad inc aad sbb and out orb pop mov jl loopne xchg xchg sub pop jp rorl leave and out idiv push sar push jb mov data16 pusha mov sar and push mov jle or xchg pop pop lock mov mov sub mov ret ljmp aad and push popf pushf cmpb add test andl inc testb xchg xchg dec adc sbb mov out push push push mov std lds xor into add pop in fwait mov sbb rcr jb daa mov gs pop xchg xor int3 mov jmp ljmp dec hlt out sahf (bad) out mov leavew push inc jns notl testl fidivrl sbb push mov mov dec imul cmp inc sahf lock lcall pop fistpl aam cmp push adc sti xchg lea (bad) pop mov int rclb and mov insb inc fsubs mov xor jns push popf push repz push mov enter mov dec adc ret aas pop and cwtl sbb cmp jecxz pop push inc push jno mov bnd cwtl adc adc lcall xchg add ljmp xor cwtl add leave in lds jle or ret and or cmp fwait imul js mov (bad) jl sbb out xchg adc arpl out dec aas leave mov xchg fsubp lret out mov push rol aam jo cwtl fstpl push mov mov sub out mov cmp and adc (bad) cmp jg in mov int push mov push pop mov scas shr mov cmp arpl push lock adc ss mov ss mov adc fsub fcoms addr16 sbb mov adcl adcb add pop push repz stos mov imul dec and addl mov inc aaa std jnp mov lret in scas shll shrl add jb jge mov mov int3 ret aam push mov sub dec cmpsl cltd pusha fs call sahf out dec hlt call xlat mov out jge mov push out dec sbb dec lea rorl sub sub or mov xor ret test data16 mov hlt in fcomp bound bound xorl stos mov (bad) dec jbe pop sahf cld push dec clc jb jecxz xchg mov sbb pusha data16 xchg lock jbe pushf popf icebp xor ficompl (bad) jmp xchg add xchg sub adc addr16 mov daa mov mov xchg lods fidivl cmp negb and or jns inc pop pop jecxz pop mov shrb rcrb loopne out mov out iret xor out jg pop mov sbb mov popf cmp pop bound cld popf jae loopne xchg rcrb ret xlat lea sbb xchg sahf fiaddl mov addr16 push lods roll xlat pop push sarb pop pop adc inc push dec fs adc movsl push test pop ret test pop aad subl cmp xor test or jnp,pt inc mov js ficom lcall test adc fildll sbb lahf fisttpl inc jns mov inc ret jae lea enter testb lret sub or in push xor jae hlt inc mov inc out xor nop test mov cwtl (bad) jo sbb sub xchg or into outsb lahf jno pop cmp cmpsl xor les push repz push nop imul lds cmpl stc cmp aam mov xor mov xor and or push fdivrl iret lahf xchg dec jl xor (bad) mov xor scas aas movl or push xchg repz icebp and pop sbb (bad) mov (bad) rorb sub je push (bad) mov inc pushf repnz push add pop cld mov dec cmp lods stos es cmp sahf clc imul jno cwtl aaa js ret (bad) pop scas cmp jae ljmp and inc insb push icebp jb shl loopne xchg dec hlt mov (bad) lock movsb dec sahf jecxz adc inc sbb ret fstps sub cmp pop rolb jmp sub dec les xchg dec mov ret (bad) iret das dec adc cmpb in test sbb pop imul xor jmp or stos pop push dec and push fadd rclb arpl popf sbb push out cmp or jo add add mov sub ret leave cld ljmp xor repnz and aaa push xor sti (bad) pop adc push movsl jle dec movsl fldcw mov in jo nop cli add pop or push out dec imul jmp or pop outsl data16 and push pop sub jp mov aam in sbb fs xor stc ret cmp mov dec pop cld lret rcl xor call pop repnz lahf xor xor cs xchg lea fs repz mov cmc mov xor xlat negb lahf (bad) loopne in dec lea pop cwtl pop (bad) pop xor inc out add jp mov jge ljmp insb iret (bad) (bad) dec aaa pop ficomp cmpsl cmp inc dec outsl add adc push sbb cmpsl push xor mov mov jno pop movsl outsb sbb je fs std (bad) sti into stos lret mov cli cmp int3 jb ret andb xor jns subb adcl adc mov iret loopne xor cmpsb and dec outsb xchg inc fcoml inc jl pop int3 pop jle push mov pop xor cmpsb je push cwtl inc xchg cmp pushf mov adcl jmp ficomp icebp test lods psllq sub (bad) mov mov xchg call ljmp inc (bad) fstpt inc xchg mov adc cs pop push mov fbstp shl jg dec mov dec addl (bad) lea ret lock lahf fwait dec js scas lcall inc mov or das fldt in xchg push push lret and and inc mov push sbb mov xor jae mov jae sbb cmpsb mov and addr16 jp es test mov test or dec cli arpl andl test daa cmpl leave dec cwtl mov test mov imul js notl mov mov loopne cmp fwait in shrl (bad) xchg repnz jmp sbb push ja pop sbb mov popa or lods sub mov fildl mov push jg decb loop dec roll jp (bad) out lret lahf jecxz popf xchg (bad) sarb ss aas push outsb test mov gs push hlt pop out mov mov loop inc adc imul shrb jge (bad) mov repnz push ret jle repz fstpt xchg std icebp int jnp xchg test cwtl jne imul aas (bad) adc or mov fnstcw sub mov add addr16 mov into sbb sahf jg or lods jae stos or scas lahf pop out daa imul pop (bad) adc mov xchg adc aas inc push cli xor mov jne lds xchg out fwait sbb arpl or sub mov hlt insb pop sbb adc pop (bad) dec jbe,pt movsl popa lods outsl push pushl xor movsl xorl cwtl shrl push rolb cld xchg iret clc lahf pop lret mov pushl pop aaa and (bad) leave mov mov movb pop lods xchg adc outsl aad clc shrb jge sub sbb loope popf es inc adc test (bad) push or or ja jle adc popl sub mov cmp and cmc mov pusha adc (bad) mov cmp or pop xchg push or cmpsb inc mov xor scas or lock xchg int mov lds sub pusha push cmp cli imul lcall (bad) aaa xchg mov mov sub push mov mov adc adc mov xor and pop fdivrs mov inc (bad) outsb pushl jle adc xlat pusha mov iret and add nop jo pop cmpsl les mov xor pop sbb pop fidivl mov cmp mov jae mov or cmp aas push cmc jo dec (bad) jg mov or out fisttp mov push adc jo jmp jne sub in jle pop add andb movsl bnd mov pop or lcall mov or mov ret xor jb xchg mov shll push sahf push xchg (bad) cmp loope (bad) (bad) mov inc (bad) mov (bad) fst mov and aad push jo or pusha push ror mov mov xchg mov dec insl jb jmp inc inc push xlat leave pop cmp cmp stc in test shrl xorl sub jl shrl sahf loop cli cmp fmuls dec mov cli loopne mov adc push mov (bad) push inc stc xchg popa and mov rorb subl scas mov loopne mov fsubs loopne jb mov xor push pop mov mov pop cwtl pop sbb subl xchg xor mov cmc inc stc fdivs push (bad) sub inc fs mov or sub mov adc pop js or mov mov adc and jp and mov and xor cmpsl dec pusha xor call aad and pop xor xchg xor ja inc and xchg in sahf outsl leave and xadd in jne xor pusha sub (bad) idivb xchg add cld lcall push jle add popf leave sbb je insl dec jbe pop push xor jmp sarl iret xor pop xchg sbb and inc pushf jbe sti rcrl mov xchg addr16 dec push fild iret cwtl outsb int out cwtl mov cmpsb dec mov gs movsb fistpll jno or mov pushf movsb push pop test dec pop (bad) xchg js jmp jecxz or daa mov dec mov push hlt std xchg fst xchg xchg (bad) and mov js mov repz into dec mov dec or cmp cmp movsl add mov sti aad or cmpl pushf pop inc mov arpl adc lcall jge in cmp sbb mov mov testb outsb dec std (bad) sub mov addr16 stc loop sub and mov xchg lahf movsb cltd add pop xchg loop dec push in aam les xor pop xchg fisub mov aam cld sub insl push enter inc adc pop lods push pop out mov popf adc jl sub es negb pop cmp sbb stos out test cmp into pop inc incb insb push mov add cmp imul add loop pop fidivl pop sbb adc mov push add mov call cmp inc roll pop sbb call mov leave aad sub inc push pop adc test test jmpw sub dec or and sbb dec mov adc les jbe cmp mov mov lahf cmp ret repz xchg js iret int3 mov push and cmp sub imul push rcll xchg adc pushf fldl lret fsubr adcb fcmovnbe jecxz pop add add int lea insb cld or inc nop test fldenv inc in push in mov and mov rolb pop xchg loop nop inc adc push lahf inc push cmpsl jo cltd fbstp and add aas mov inc (bad) iret ja cmp xor jo sub insl lea loopne cmpsb push add and out mov nop and xor mov xchg pop pop cld cmc pop insl test and push test push es insl stos gs dec sub fimull fiadd (bad) popa jg cmp ret cmp inc inc dec add das sbb ret in call jge fldenv mov repnz in push adc pmaxsw push add pop popf push adc push idiv scas xchg mov scas fcompl or jo lahf sbb es mov loopne pusha mov xchg push or js pop negb ljmp aam cwtl push or and (bad) mov mov cltd fs rcrl sub mov xchg xchg test mov out jo adc (bad) push int3 addr16 sub inc pop push rcll push dec inc sbb repnz jnp pop fsincos or jecxz in mov cmc insb cld stos dec (bad) jne mov inc xor adc imulb dec lret in call (bad) repz sub adc mov sbb sbb adc imul inc out sbb jnp (bad) jp fmull je fiadd push push aam repnz adc repz imul mov sub cmp in cmp or adc lahf push adc dec jns xor lcall push xor push push cli mov sbb rol cmp in push lahf jbe idiv sbb xchg cmp inc ficompl (bad) inc adc fidivrl cmpsb ss loopne std ljmp or daa xor xor jmp mov decb aas fldl lcall jne mov xor jg,pn xchg (bad) les decl push pop dec dec incb sbb aas outsb adc pusha dec cmc loope inc stos mov push sarb pop popf rclb cmp cmpsl push jl int3 in push repz (bad) ja pop jge lea jno mov aam jnp inc pop cmp push lea fldl mov sbb je out push jnp stos jge insl aam jnp shlb pop repnz mov push mov fidivrl popa outsl (bad) or les cli xchg ss inc adc ficoml mov mov adc fs sbb inc lret data16 jnp add lret push pop lahf stos imul xchg xor push add nop dec add xchg push (bad) cmp xchg sti inc and test sti jle cmp lods sti and dec das adc push mov sub or in jg adc sub jns push fcoml cld js xor call lret push push adc mov mov outsb jno ss lock jmp flds sbb loop mov repnz insl add sbb xorl mov mov mov dec (bad) (bad) cwtl mov xorl (bad) cmp mov pop cltd sub mov (bad) int add negl sub jbe gs shl pmullw adc movsb mov adc xor cltd jnp lods lea jge lcall dec inc adc repnz and daa xor test push lds cmp adc inc lret mov scas loope xchg lds outsb lods pusha inc mov mov pop ret pop fstpl lret jg mov or scas ss lret inc adc sub cmc sub sub add ret mov xchg gs pop xorl xor lcall scas ljmp add cmp add fstl bound mov mov ds and push test movsl xor test pop lahf rorb dec pop test fadds adc xor imul repnz ja push rcll inc mov mov adc lods stos prefetchw add or sub add add sub fldl add out xchg lea xor add leave xor xor and sbb loop lea and shlb bnd sarb popf or cs adc push je adc inc sub inc pusha fiadd lret repz sbb mov inc hlt aad add in out out add inc nopl push out or popa cmpsb aam cmc cmpsl xchg lods insb mov jge cmp sub cmp jle enter pop mov dec jnp cwtl xlat stos inc into jp adc push scas int3 icebp sub sub stos (bad) mov adc lea das sbb (bad) cmp mov cmpsb aaa add inc cmp and pop out and aad aad inc xchg sbb cs or int xor outsl or ljmp jecxz mov push hlt (bad) mov sbbl adc (bad) mov sbb out add sbb lea sub and aad push mov leave jmp in rolb aaa xor adc adc int3 dec or dec sbb (bad) std inc ffree push xor push mov stos aam mov pop push inc cld repnz sbb movsb cmp jno mov cmp and iret cltd rcr mov mov fnstsw and imul or orl andl dec push cmpsl sbb xor into or mov mov jbe bnd jo scas mov or sti addr16 ja out xchg xor mov xor data16 (bad) mov ficompl cmp jle out sbb rcl xchg sbb jno adc leave fs gs movsb cld and sbb xor mov stc pop add jmp (bad) aam mov or cmp cmp dec aaa jl inc movsl sarl repz jae sarb mov pop leave cmpsl cmp push or sbb sub fildll lds sbb and std aam shr xchg int3 das (bad) pop imul adc cmp call sub movsl out pop mov je xchg ss mov daa adc popa lcall mov mov stos pop and xor dec mov sbb out popf dec sbb sbb xchg sbb push add aaa ret mov jno push mov xchg xor push sub and mov pop pop fwait xchg mov mov push inc xor mov call pop cwtl mov arpl (bad) out out cwtl dec cmpsb hlt sahf cmpsb push push xchg test jo sbb add ljmp xor or jno test out stos jns push lods jp sub out inc mov sub lock cltd fwait inc ret (bad) jne ss pop push shl ja add and mov adc mov sub cmp lods mov in and (bad) push mov lods rorl int nop mov sti pop test leave fsubrs xor push stc push sub mov cmc (bad) int3 test adc add sub cmp jmp movl sbb lea fwait mov push lret scas movsl mov icebp adc test icebp lea test push shll call movsl aas (bad) jb sbb call in mov jo pop fisubl lret jp stos js add insw out jno scas ja in push fwait imul js jne movsl in rclb mov cmp imul fmuls lock cmpsl jnp sbb jle and push pop add outsb daa test or mov jns xchg mov xor call adc cld pop movsl insb push jecxz,pt jp mov enter xor rcrb outsl faddl inc (bad) roll movsb int mov fsubrl pop mov push stos sahf enter xrstors add cmp (bad) adc inc mov mov lahf cmpsb jmp dec mov mov jmp fcoml lret xchg imull xchg dec repnz pop stc mov sti stos in adc nop sub cmp lods aad mov in mov mov push test mov xchg iret inc jnp sbb mov arpl and push push push xor cs mov outsb fidiv insb ljmp fdivl sub ss push sbb enter rorl ja mov xor xchg push push cs imul mov inc cmp adc pop std lods iret fwait out (bad) pop idivl sar ret in fdivrl sub js lcall inc ljmp pop in ret int push dec xchg test jae pop daa xchg xchg or cmp (bad) ds pop jl sbb into test and imul cld fucomip sbbl lret fildl mov mov stos cmp loopne cmpsb insb leave push (bad) cwtl cwtl jge gs outsl jno mov (bad) es jp leave fisubrl out (bad) scas mov mov cs sub orb js mov mov or push mov pushf mov popf jecxz pop int movsb inc xchg mov or sahf (bad) mov (bad) cmpsl or jp lret jbe (bad) out pop ljmp pop insb or dec cltd and push cmp je sbb lods mov aaa popf or imul xor push sarl aam mov in stos and int push mov bndstx out ret inc adc repnz (bad) addr16 shll push not mov adc int3 xor imul negl (bad) je inc mov aas xchg xchg loop push pop cmp hlt fwait arpl xor dec push mov fwait and adc sahf sub jmp push stos push sbb out cmp fadd cmp xor out mov add cltd (bad) dec lods mov dec sbb sub fs add sub or or nop cmpsl lcall cmp out mov mov fildll les jg lea xor xor dec adc hlt cwtl gs dec int3 lret dec dec mov jl outsb cmp pop jl sbb loop sub sbbl nop mov inc pop or lds (bad) aaa int3 lcall popa fcmovnbe push stc xchg mov jbe jl pushf pop jp scas or sub mov ret dec pop mov mov (bad) xor lea adc ss daa mov push or jbe push rolb popa insb ljmp hlt xor dec sbb add scas iret loopne inc sub test aas cli sbb pop and outsl dec js push fsubrp lea jne stos (bad) xchg les movsb subl ss mov mov (bad) shrl cmovle test or xchg pop rorb add push xchg push cmp pop bound imul outsl (bad) adc mov pop push enter pop xor (bad) mov cwtl out out lahf test push xchg xchg add sbb repnz sbb xlat push xchg fstps loop xchg shll test daa sub dec imul jae lret es out movsb xor jmp jo jmp andl sti lods mov rclb dec inc push int3 (bad) sbb xchg fdivrs sub inc cmpsl inc cs dec pop ret rcr outsl lret enter push lea xor dec lahf out mov or jg jp pop mov xchg cli mov lea test loopne lds mov jno loope pop jns mov enter or ljmp mov insl out leave fs sbb or xor adc adc loopne mov ret das push in sub imul dec push sbb push cmc jl and dec add cwtl pusha stos mov fadd inc mov pop mov mov stos and push test jo mov out rcl jecxz test mov pop jbe xchg pop repz push xchg pop or cld daa aas test js adc mov fwait scas (bad) mov in (bad) into mov xor addr16 xchg and (bad) mov fistl mov xchg push xor cmp sbb adc xchg ret mov sbb stos pop sub cmp imul xchg repz add push mov stos xor mov insb icebp arpl js ffreep out fsubl adc test and push sbb lods mov ss xchg jns mov and bound loopne movb int xchg sub cmpb jmp jb (bad) rdpmc test lock xchg mov sub xchg out fsubs call sti add arpl adc or mov and mov pop pcmpgtb mov mov dec pushf xchg inc xchg mov ret cwtl into fwait add and cltd rolb inc push shl aam adc add fimull into test adc jb fcomp mov cmp inc sbb inc xor nop lock (bad) loope out lods dec cld (bad) mov and clc bound push cmpsb push push jnp add jo mov add mov aam mov sbb add call sbb sub ljmp pop push cmp push push adc loopne lods cld ljmp inc pusha hlt pop popf pop cltd in add insb jbe adc pop dec jbe repz in ss ja pop ds orb in cld test mov cmp movsl out mov arpl mov jl xchg in ja mov or loope sub data16 lods loop mov inc (bad) int3 lret shr dec mov test sub fistl fwait jl shlb mov add pop stc aas stos popa aaa popa mov add add fs dec aas cmpsl das push sbb (bad) sbb stos ja leave mov adc dec inc (bad) (bad) sub test fistpl arpl mov dec loope sbb int rcll mov xor sub jnp pushw iret nop mov test out and cmpsl mov mov in pop iret cmp iret pop or mov stc inc jge addr16 shr (bad) mov imull push in cld mov (bad) xor bound ret xor int3 test out or sti and inc je fwait add repnz sbb xlat sbb xor daa outsb mov xor loope inc jns mov pop aam sub push aas icebp xor pop sbbl fs mov xchg lcall add add sub incl pop push mov adc les jb dec pop mov rol adc mov leave xchg sbb fist sbb mov mov (bad) push add adc sbb je (bad) mov aam mov push dec mov push popa mov cmpsb push js addr16 xor je mov pop sbb add sbbb pop lea fldenv cmpsl sbb call stc dec sub sub cmp add inc mov (bad) jo cmp inc cs adc and bound and cmp out dec cmp in aaa loopne imul imul insl xchg mov enter das push mov xor movsl jne lret and ja mov push rolb jg lcall xor mov cmp test adc xchg pusha jae mov add das jle push jnp fwait loopne adc das or fdivrs in add jp fstl xchg lcall dec adc stc loop (bad) jne cmc cmp ds dec bound rolb outsl xchg mov add xchg test cmp int dec fwait (bad) cmc mov xorl xchg lret lock pusha jbe and mov mov cmp js xor lods push adc adc xchg push mov (bad) in pop xor negb xchg sti jnp lcall (bad) mov ja push cmp mov xor repnz repz dec cmpsl jno call fucomip lret push out aam pop arpl fwait sahf pushf outsl xor dec cli jno out pop mov lahf add fwait (bad) (bad) in mov push xchg push pop subl jno pop (bad) scas cmp or stos loope sbb mov imul lods js and dec ja cmp jp inc dec clc push les cmp mov and sets mov jns pushf dec xchg hlt sub lods lret sbb enter insl jne push pop mov mov push lret (bad) sti mov push ss sbb sti imul mov pop jg sbb (bad) or mov sbb fnstcw sub add fnstsw mov mov pop gs xchg sub jp mov add jne cmp into enter aam pop push inc out and cs addr16 push or adc jle loope ret inc stos sub ljmp stos cmp test fwait (bad) xor lahf aad sbb mov and and jl cltd (bad) dec mov pop jns stos mov cltd adcl sbb push stos cli push dec xchg jnp xchg (bad) (bad) in sbb pop inc or xchg push lahf es test fidivr cltd xchg push dec cwtl pop popa hlt mov test (bad) ja stos pushf mov popf lds push je imul cmpsl imul and and fwait pop incb pop popa mov jno mov iret xchg mov xor sahf adc lea aad (bad) or mov mov imul jb sub mov outsl shrl test push xchg and iret rcll jae and test addr16 mov sbb (bad) int3 mov jnp pop adc popa mov out lds gs adc repnz iret aas pop adc cli movsb cmpsl ret psubsb cmpsb lock add sbb adc fbld in rclb mov and pop stc jbe sbb div movl dec outsb push pushf jb or mov pop inc mov adc jl insl mov inc push cmp mov mov fist arpl jb aad movsl push imul int3 push incb leave leave out repz mov (bad) push aam adc push hlt pop jb (bad) iret cmp xchg addl sub movups jecxz lods mov push push xlat cwtl rolb mov lret int3 push pusha cmc inc add add mov subl lret and sti scas and and jbe push out stc ss mov int3 cld jnp sub test sub mov lods stc in outsb rorl inc jns movsl test imul daa sub in sbb repnz in inc jns (bad) pop cld outsb mov xchg mov inc shlb pop add inc js and or sbb jge and xchg or in stc or pusha jbe data16 notl mov pextrw jo sbb jle fdiv cltd loope inc mov mov (bad) or push sarl jl data16 adc inc ret jmp sbb insl inc mov pop pop add jl sub js jns jecxz pop fwait pop adc ret xchg scas pop stos and xor lods and cmpsb xchg sarl mov mov dec lcall mov fsubrs jbe inc push dec es movl ja push pop in mov mov aam sahf xor mov add sub mov pop push cmp dec jne push jle push jns pop out fstl cmp mov js xor mov (bad) jnp mov scas das mov leave jns ficoml sahf hlt xchg mov dec jno pop add push or into and pop inc cmp sbb jle repnz mov out sti adc cwtl xor push bnd mov cld sub mov xchg add jle mov pop call fdivp inc aas xor cmp and test push and xor mov das je sub test loope pop rcr xor das cmpsb inc sbb mov lahf pop outsb lea jns fstl mov clc loopne repz push pop shrl (bad) hlt (bad) in pop sti call add add jecxz jmp or mov jno xchg cmp ljmp arpl aam stc sbb cmp outsl into outsl ret sub inc push enter mov jb adc mov dec dec bound jp inc mov negb add and sbb dec push mov or sbb adc push mov add xchg xor and nop jnp mov push dec cltd push aad nop sbb add jp imul lfs mov or std out lahf fcomps xor inc rcll and add push aad sub imul lret adc stos test inc fsub mov and push testb add dec (bad) dec ficom mov stc cmp mov insl adc jp outsb inc dec incb mov cmp xchg loopne mov icebp fildll lret adc cs push pushf jns bound mov (bad) inc sbb adc and push pop cmpxchg in push cmp insl imulb cld movsl lret xor in cmc in jmp inc sahf icebp mov insb mov outsb or out dec movsb ja jae dec mov mov ss lret mov xchg daa andl push push cli pop js adc and sbb lods inc int or mov cmpsl mov sbb int mov push cmp add xorb aam adc dec clc or outsl dec rorl xor popa xchg ret mov jne popa cmp pop jg lods mov arpl push mov mov inc adc cmp mov mov pop mov ret lds (bad) pop push scas xor and stos mov mov je mov dec push xchg aaa call insb jge dec pop jns xlat pop jmp (bad) inc fist inc or add xchg jns pop inc lods jb sahf xor ljmp or fnop cwtl and (bad) jmp ja loop xchg sub lahf or imul in mov mov ret lods sub movsl adc inc cmpsl lods out clc test hlt inc movsl cli push cld sbb nop add or loop mov in je bound sub mov aam jo mov and loope rorl lods shrl (bad) ret ret (bad) scas (bad) xchg inc inc pop push and imul jb or scas jg jne xor imul cltd push add cmp int3 ja and popf test xchg hlt iret ss sbb sbb jmp out push dec sub mov fidivr push mov and cltd adc (bad) cmc pop sar sbb sbb cmp jmp mov jmp rcrl insl (bad) arpl xor cmp popl fmuls (bad) cmp int3 xor repnz loope ja sbb add or sbb jl sbb push xchg lahf xor dec js repz iret push sub cmp jae (bad) lea rclb mov imul mov (bad) loopne jg sbb cmc lcall fidivr fnop sub and jbe inc mov mov push push enter idiv adc mov mov lock ljmp lds jg and movsb jb stos outsl mov ljmp shrb mov jecxz push inc test inc loope dec mov test pop test cmp mov push (bad) inc in mov xchg lret or mov aaa dec dec gs lret iret aam out xchg xchg inc sbb inc push xchg idivb xlat movsb or xor inc adc mov rorb push imul cmpsl mov mov pop push mov push lods movsl adc and pusha cmpsl addr16 rol mov jecxz aaa push mov xchg dec fist mov ret es fsubrs inc sub sub dec mov xchg pushaw jmp fdivs in (bad) aaa aas mov or pop mov sbb test lret scas adc jns adcl std adc or js lock (bad) sti pusha icebp pop xchg sbb jae outsb and pop mov dec faddp nop stos pop xchg jge pop in scas int in (bad) mov imulb popf clc nop push imul roll popa xchg stos lcall jno bound add xor cld aaa (bad) adc cmp and push push dec mov jl out ret sahf add ret lods dec pop sub sbb stos cmpb sbb or mov dec push jmp add test ror arpl maskmovq fs sbb cwtl ja and js mov or inc js dec mov and sarl (bad) dec stc (bad) int scas mov mov sbb xor fsubl inc fnstcw mov dec mov enter inc stos sbb cmp or and xor mov das loope mov sub ftst pop fiadd mov cltd lea les jno,pt sbb imul mov lds sbb xchg flds insb call es inc adc adc imul jo mov pop lahf (bad) mov leave sbb cmp lahf out nop pusha pop inc fs mov sbb in mov je popa fsubr xchg leave test xor out push sbb inc daa std pop or mov pop push xor hlt jmp or sbb push add jle (bad) fistp jae xlat aas jae inc and or cmc xlat xchg std loopne lcall test pop test mov ret lds rcl enter mov inc add inc fdivs cmpsb enter enter sub out sub pop cmpsl cmp sbb hlt addl add xor adc arpl xlat das fsubp iret ss push aad es jg lods pop (bad) in scas or mov nop jmp xchg pop aam cmpsb mov adc lgs outsb (bad) mov xchg jge and cli fnstcw mov rcll lods jecxz ficoml push jbe sbb sti jle divl cmp push test push and and sbb mov xchg popa fimull mov xor in mov insl sub int3 dec jmp xchg pop or push or adc incb out cmp add push int (bad) fisttpl in mov inc adc jae outsl popl mov cmp push movl xor int3 inc mov cmp sbb and popa scas pop adc sarb cmp jg stc adcl lcall repz je (bad) mov and pop stos sbb mov or sbb xor push sbb sub pusha lcall add leave mov cmp and mov test jge loope popa data16 popf fadds outsb mov mov gs mov and pop (bad) mov mov (bad) mov mov mov movsb repz add outsb jmp repz andb cwtl and fimull jo inc je lret jbe fs xlat subl cltd aam in cmp pop inc push pop xchg cs leave push dec fnstenv push cli in push lods xor mov ljmp aad sbb jb or or mov clc nop mov push sbb dec mov adc movsb jne fwait dec and adc mov sbb jge clc pop jecxz aas mov inc xchg inc add adc in aas arpl or outsb aam movsl clc cld mov stos cmp cltd jle inc sbb xchg aaa stc sub mov fadd mov in dec inc mov ret in jnp gs jg jmp sub cmpsl imul xor sbb cmp adc lods xor sarl mov inc xor (bad) xor pusha aam mov (bad) in and jg add sbb aad mov sbb mov jl test xchg and add mov shll inc bound hlt push movsb fisubl or leave sbb pusha dec sub cld pop mov rcrb inc int3 cmpsb in fcomi sub je push iret sbb pusha xor insb (bad) pop (bad) pop incb lahf cld lods int inc insb xchg out jb out loopne sbbb pop or jl fiaddl dec pop popf repnz push cmpsl mov insb xchg mov repnz dec pop popf pop scas xlat add das xchg (bad) hlt dec xor mov jbe ret repz mov sub add mov jle xor mov add stos mov out or loopne mov cwtl aam sbb rorl jns mov xlat out cld testl push lds loope stos jae jns jb adc test pop movb xchg mov cwtl test sbb pop test inc xor add add jmp ret popf fimull xor add mov dec push fildl mov aam mov in bound xor cmp repnz ljmp test cmp in jge,pn mov and add mov inc cmp test popf inc lods push push aaa out fwait and xor jmp push xor or cmp ret popf movswl push xchg pusha ds mov xor mov cmc add les add mov jns leave (bad) in sub dec and xchg pop add add mov mov inc adc fnstenv shrb loop mov call xor sbb outsl sub fwait (bad) bound xchg cmp mov jns ret and and inc subb cwtl int std inc aad aas dec lds test mov aam xor bound fcmovnb std jmp jae ret adc fbstp pop or dec mov rorl pop ds out hlt xchg cmp and sbb ja insb mov jae pop js (bad) sbb clc aaa es cmpsl cld mov std (bad) sub aas cltd repnz fist mov adc fs nop and cwtl cs cmp bound fmul pusha movsb adc leave and bound sub xchg add scas jmp mov int and scas hlt lods mov jmp pop dec je push popa dec xchg test or mov push fldcw sub les rolb jbe xchg mov or and xorl insb dec cltd icebp bound sbb jmp mov jle fcmovb pop ficoml pop dec (bad) mov nop add jns fwait sarb and dec pop lret out sub out or loopne (bad) sbb xchg stos ffreep add in mov adc mov stos or sub in mov xor icebp iret in push mov sbb aas xor ret xlat cld lahf mov js mov mov inc inc mov out mov add xchg frstor bound mov dec rorl js and jae fstpt aad add out jns iret add (bad) push imul sti notl xchg into xor stos je or jb outsb jne in xchg (bad) (bad) xlat or xor sub fnstcw out test shrb add inc pop scas dec bound scas fwait loopne int inc loope ljmp dec (bad) in xor and lret mov sbb jg adc sub negl sarb test cli push movsb lahf call scas sub pop out lods (bad) dec jno ret arpl mov pushf inc pusha cmp mov dec insl mov xor lods sub loope repnz dec adc mov jecxz imull sub fcmovbe nop sub cmc adc pop fildll aaa scas nop inc ja cmp mov sbb daa outsb jmp xchg cmp push push adcb insl nop adc jmp sbb ret push mov push gs or add arpl or add adc dec inc in mov sti mov xchg mov cltd push mov xor pop push pop mov jmp mov arpl push dec ds jp outsl xchg xor mov push leave jns test cmc call or and dec push out movswl testb pop xor pop incb mov fsubl jle (bad) sbb jmp xor xchg inc xchg enter movq adc pop rclb pusha in fmuls sub mov hlt and inc push pop in ljmp lock enter xchg sub add loop dec push repnz adc cs outsb push xor and (bad) xchg push out sbb imul aas sbb mov fs and add cs ljmp outsb sub and lds scas iret por adc stos adc pop outsb shrl roll dec call adc fisubrl shrb push fsubs sbb add sub cli sub out in adc xor sar jmp push leave sub leave es mov cli adc loopne lret (bad) pop mov fs or adc lock lahf add mov fs xor jno mov and leave mov les arpl adc cvtdq2ps movsl push jle lods inc xchg leave mov mov pop add or nop mov lock fdivrp (bad) fisttpl (bad) int3 std and sbb test lods cmp xor jno xchg push sub sub std pop fsubrp loop dec cmpsl inc mov add aaa and leave jo pop (bad) je mov sbb inc cmpsb pop mov xchg fs shlb stos sub adc pop pop lret push or test (bad) xchg mov sbb and movsl xlat fndisi(8087 sbb push xor inc jae loope mov lods jo les movsb imul outsb inc cmp mov ret ljmp inc (bad) fisttp or (bad) outsl test adc jmp (bad) cmp fwait les mov idivb mov mov mov andl out inc in jecxz (bad) mov scas inc pop test mov lods div in or add adc test rorb jl daa mov or outsl insl jmp lods jle mov xor xor push cli pop stc js inc lret inc sub mov je push arpl and clc test and pushf cmp fs out mov cmp fisubr cmp js cmp mov out xchg icebp sbb jmp dec adc es (bad) icebp sub mov mov mov adc inc test mov fstp add (bad) cmc insl out or (bad) stos pop and push mov xor jg cmp (bad) xchg movsl (bad) fcoml add ss jg sbb mov sbb (bad) sbb inc shr add repnz add pop daa sarb push or mov sub pop icebp scas andl mov mov jp mov pop or inc test stos mov cmp jp rcl dec (bad) pop (bad) (bad) mov jl pop fldl2t bts mov movsb inc js scas mov (bad) lcall repnz rolb or jae shrl dec cmpsb cmp (bad) out sbb ja ja mov sub mov icebp js fmuls lods stc mov popf xor jb mov lahf es aad xchg es dec or inc clc fldt sbb cld pusha idivl fcomp insl std lea stos leave adc les hlt or adc outsb mov and cltd fild inc cmp psubw lret popf mov mov sub xor lret out sbb scas lcall jno out outsb aas push mov xor aam mov push push aaa mov addr16 push dec rcl insb sbb shlb sbb pop cltd pop in push mov lcall ret (bad) sti and inc mov jne in jp divl insb in les outsl cwtl arpl adcl sub js mov push push cmp push pop xor mov out mov test hlt shlb sahf push gs in inc or and repz mov mov xchg clc mov pop sub jo cmpsl mov or add or cmp add mov or out shll pop cmp popa pop mov pushf sarl push jbe repz sysexit pushf inc xor sub mov sub popf cmp ljmp lds mov mov imul into lret and ret adc ljmpw imul das pushf xlat xchg gs jge lahf and sbb xchg mov lock jge pop stos nop push lahf fnsave sti ds or push xchg inc jbe lods push xor and xchg jge lret out xorps mov pop or mov add call pop mov fwait xor loopne adc pop pop add pushf subps mov cli inc jmp cmp leave fidivl lock dec pop jg sub fstpt jl stos cmpb mov jle repnz xor jns sbb aad and gs ljmp (bad) lods inc jo jo into inc dec mov inc inc dec ss sub inc clc in push rolb ja cmp leave xchg push mov test xchg aas inc in in mov mov mov sbb mov push shr icebp jecxz sub mov imul lret scas sub rcrl xchg push sti push (bad) cmp loope mov flds sbb sti in jmp sub sahf movsl std lea push ds mov insb jl scas pop test call repz outsl popf cmp (bad) fcoml dec enter adc inc sbb mov mov inc pop xor test sub ret scas mov add aad mov xchg mov scas xlat mov and aam pop in dec jg (bad) test sbb xchg inc icebp (bad) fmul mov or imul arpl cltd xchg or jl orl fstps sbb lods xlat lods push push mov mov std mov rorb add lcall (bad) and pop enter out int3 int3 jmp pop cli pop imul mull std push dec xor popa rcll jg cmp cli inc pop adc jno fdivrs pop push pop or daa das js in push and push orl shlb popf xchg pop lock dec pop add mov jmp mov push lahf jns pop leave pop aad arpl ret dec aad add sti or lcall adc sbb aaa xor (bad) mov popf mov sahf jle dec test mov out lret lahf cmp or dec lods movsl inc sbb imull sbbb xchg mov mov jbe inc rol les mov imul in sti mov cmp (bad) je out fldl lods adc fstpl dec mov cmpsb mov sbb or adc sub add xchg loopne mov xor (bad) xor jle test jae push jae orl shrb je sub adc rcrb inc stc mov mov pop outsb pop pop rorb cmp push inc arpl xchg sahf js aas in mov or icebp pop inc mov ret rclb pop sarb mov repz push and aad cmp clc pop imul adc dec inc rorl daa xchg in inc sbb jmp xchg dec es in fiaddl fs test pushf pop rcrl sub out fisubr or adc jno push xchg xor pop xor imul cmc mov shll adc xchg inc fs jo dec imul jg leave fisttpl repnz adc and (bad) cmp rep stos adc test test iret loop lea sub sbb jle fwait shll cmp lret add mov sbb int3 iret lcall scas lret cmp scas adc mov push mov xchg and pop dec fldl2e es dec xchg push cs pop xchg push mov mov mov xchg mov push adc pusha or (bad) sbb rclw push (bad) pop sbb in xchg mov ret es cmp sahf cmp jmp push jbe xchg mov pushf jg mov sbb test xchg and pop rorb addl adc fidiv idivl push pop sbb xchg or add cwtl call adc or sahf enter inc pop adc mov (bad) dec lea popf hlt pop push cmc dec cltd xchg pop sahf or dec fwait hlt xchg ffree cmp mov push cmc jnp inc jns fs lcall les pushl push inc and pop mov jl into in or stos dec pop repnz (bad) push mov scas sarl xorl lods rcll mov iret or adc xchg ficompl insl aad sub scas bound fistl dec add stos ss divb in (bad) push push xlat lcall and test subl repnz ss cmp mov sub push xor gs mov fistpl insl dec mov ja addr16 push sti sbb das xchg mov mov dec int3 loope out pop pop cmp xchg decl adc out pop jb add adc cld xchg cmp and xchg popf test mov fwait dec sub mov lods mov sub xchg mov sub or (bad) je fdivl and mov (bad) addr16 iret cmp insb xor sub cmp popa addr16 sub das aas fstps adc mov nop jb roll jge add cs out sti lds lret and push test inc loope ret out jae in call mov pusha mov xchg stos aas xchg mov push push test dec lods mov mov test jb popf fs and sub es adc out sbb or lret repnz or movsl xor mov cmpsb cmp (bad) (bad) enter js gs xor mov dec mov cmpsl aas aad loopne dec repz xor sbb loope push mov mov rorb xor movsb les inc adc cmp push daa test fxch rcrb jnp adc ds and and mov mov xchg das mov test arpl std clc xor xchg or sub xor mov lock dec movhlps (bad) jl or mov sti cli xchg adc test jg sarb xchg cmpl mov js cltd int3 jecxz cli jmp dec mov xchg cmp dec bound mov sbb pslld lret (bad) out in mov mov scas cmp add decb xor rorb cmp flds xlat scas clc push and fadds imul das sbb push push mov add leave outsb xor mov aam leave jnp sub mov out jne arpl cmp mov aas rcr iret add push out inc jge jns sbb outsl mov xchg cmp adc mov sbb loope or mov daa pushf sub xchg dec mov test sbb leave (bad) jb aaa mov pop notb ret mov pop aas jne,pn ss aam loop mov jns cwtl iret push add and enter pusha movsl xor pop mov lds sbb cmpsb stos enter jmp fs fwait jnp add jne add gs pusha push and inc cmpsb xchg jmp dec jp cmp cmp jae mov pop cmpsl mov mov push cld jb scas add hlt out xor aam jne sub cmp push or xlat ret xor cmp fstpt fidivl inc hlt (bad) push cmc dec popl movsb sbb or mov adc scas dec lods imul popf lea sti xor xor xchg sbb xchg xor pop (bad) icebp cmp iret push jecxz call sub adc mov (bad) cli in fidivr mov jle movd push sbb (bad) add add cmp fild and pop xor cwtl cmp (bad) adc imul data16 imul aad mov push xor popa sti clc xchg fidivr icebp push push outsl cmc dec inc jne sub (bad) popa mov (bad) (bad) icebp addr16 jmp push leave imul sahf add cmp xlat arpl xor pop ds xor xor out pop fimul std pop mov in dec lea pop push cwtl mov inc into add in ljmp movsl mov outsl in pop xor xchg cmpsl pop xor or popa inc adc pop mov and fistp cli jp or mov jne aas aad cmp adc pop xor addr16 and lea repz sbb sub pop lods popf mov and push cmp cmpsl dec popl cwtl mov js stos push mov mov pop data16 xor faddl clc jp fwait ljmp jp fisttpll into in lock sub push xchg aad xor shrb jns jnp push push add pusha xor add (bad) cmc mov pop sahf rcl fwait inc dec push les mov adc adc lcall and js (bad) loop jle push (bad) out and push add mov daa loop mov cmc push (bad) enter jmp mov repnz inc call xchg sarb inc add (bad) jg call (bad) adc push (bad) and inc mov (bad) lcall lea adc cmpsl lcall stos jl cmpsl xor mov mov je scas pushf jle adc lret jae aaa xor xchg mov cwtl xchg in loopne cmpsb inc mov or inc mov negl add addr16 cld jge add inc mov pop ret andb mov icebp sbb aad ljmp insl lock aam into xlat lahf add mov sbbl cwtl pusha mov sub jp xorl pop mov jmp in ror aaa mov popf cltd popf and mov les lret ja test jmp pop adc cli leave sbb out adc add xchg push or mov dec in cmpsl rcrl cmp mov sbb xchg cmp loopne lret test push nop das aaa dec jae xchg scas inc xchg mov mov lret aaa add nop push in int3 jno dec aam and loope jp hlt xor sub sbbl push push push loope je out std cmp cmp outsb fwait jge push cwtl pop sbb push aaa test test mov pop xor pop cltd fadd xchg or jb inc jno jl sub cmp fsubl dec ret add dec (bad) int sbb les mov loop and ljmp and push push mov hlt out mov gs mov ja imul popf hlt shl and xchg (bad) cmc hlt cmp mov scas fdivl and and lock cmp sti in and sahf leave int mov in add call jno into mov cmpsb idivb cld jnp mov mov ss jmp sahf (bad) (bad) lea loopne pop jnp jo or andl xchg inc xchg pop fsubrs es (bad) jae mov xor fs sbb mov lret es xchg pop inc loopnew cmpsb jno mov pop sbb aaa sbb mov mov jl mov push (bad) mov daa gs movsl or pop xchg cmpsl xchg adc mov arpl rorl enter popa or mov das adc mov js lret aad mov lea loopne cmpsl and mov mov sub repz js enter jp sub jmp and inc inc sbb out mov pusha fcoml lea push mov (bad) repz cld insl inc and test lahf dec movsb sar aam sbb (bad) fsubl xchg cltd addr16 (bad) fnstenv fwait sbb insb cmc cmc jp xor mov sbb sahf pushf or sbb (bad) gs leave iret daa jecxz push dec lds lahf cmp shl jp inc bound xor pop sub or mov movsl mov out dec arpl hlt dec out push xor mov lods je call mov imull jl dec pop mov ljmp sbb xchg mov mov cmp mov mov cmp je fistp lods in jno (bad) scas (bad) mov jmp aad (bad) cmp add roll scas cmp dec xchg loope out fs mov bound sti pop mov xor jl xchg dec mov sub push jae push imul mov fsubr jno jbe mov addr16 aam std inc pop js ret mov ja and jne les mov add xchg fiaddl push xor cwtl fisubrl loope sub in sub or cs scas notl loop sub inc (bad) pop sarl and inc je cmpsl int3 jl mov int test insb in xor mov (bad) out adc cmpsb test and lds jl (bad) fnstenv cmc add push cmpsb pop lds push inc lahf push pop and pop repnz repnz mov imul pop dec inc (bad) jbe jns aad mov push repz in stos pop into pop mov cmp inc pop mov (bad) mov icebp test pop jmp int3 rcrl (bad) jns das stos pop rcl ljmp inc mov pop mov push fiaddl mov outsb pop leave rcrb xchg daa in push fcomps test push mov mov mov add cmp and adc fistpl leave roll stos dec dec leave adc mov pop ss dec out jne and add jae jp pop shll lods test cmp loop insl das pop xchg lcall jbe sarb pop xchg loope sub cwtl adc mov (bad) jg push in fnstenv sbb stc pop das sahf dec fcomps cmp xchg hlt dec or mov popf js popa aas je or mov cmpsl int outsl jecxz out lcall pop sarl inc push into aas mov das mov addr16 or in fsubl call fcompl jle mov incb xchg mov sbb lock jl pusha js fs (bad) cmc mov add movl push addl scas mov int3 sahf sub inc gs cmp push gs daa lods lods sbb divl dec mov jo jnp lods sbb adc push mov movsb fwait out pop lods insl or push pop or or jp aaa lods cmp mov std pop sahf jle aad in mov cmp mov addl (bad) test adc cmp add pop and out and sti mov (bad) sbb sub sti sbb xchg mov in sahf fld xchg lock fisubl dec (bad) in mov dec mov pop xchg mov mov xchg xchg jb (bad) aam push aas call fwait ljmp sti cmp (bad) xor (bad) pop or push dec test cmp and mov xchg sub cld iret pop adc mov mov out stos push rorl clc mov jnp js sbb lret or test cmp cwtl mov imul cmp outsl inc xchg add ss inc adc push mov xchg xchg scas sub ss xor mov push cmpsl jae xor lods xor and jne or adc je mov and and mov outsl in popa daa out cld clc adc pushf mov jae lock sahf test in fs test xor pushf sbb iret cmp es loop lahf and rorl out mov cwtl sbb push push inc (bad) stos iret stos test adc (bad) cmpsl in inc call aas iret fstl imul xchg les (bad) sub pusha push add sub push push push leave ljmp sbb fidivl mov gs inc cmp leave sti pop xorl mov and xchg mov fwait dec inc mov (bad) jge adc outsb add pushf dec xchg xor pop test mov mov cmpsl pop xor jmp sub pop sbb dec lea push inc push (bad) hlt sbb push xchg in dec ljmp dec add loope lds dec push mov push adc in in rcll js push jne cmp jo mov mov adc xchg push mov xlat rorl mov pop mov sub enter and out fidivl mov xchg add push jge pop outsb jecxz mov inc jle stos push dec enter pop scas prefetchwt1 or leave pop add mov mov add add push mov adcl out adc add xchg mov cmc dec les sbb xor (bad) mov es test add fidivrl and fistl sahf add dec std cmp (bad) std lock call mov sbb gs dec (bad) lret mov xor je pop lahf (bad) repz and imul (bad) sbb sub movsl add (bad) and aaa sbbl mov stos stos loopne mov jl (bad) fcompl subl push fs push mov xor or or arpl or js dec sbb jno dec idiv push idivb cmp mov xchg hlt jge and pop xchg xor test pop out jne or adc push mov xorb lods lods in mov sub dec ljmp lret adc xor sub mov arpl jp std jnp mov mov pusha jo push idivb mov push mov add nop fisubl mov stos ja inc imul test nop sbb loop daa (bad) ljmp out xchg (bad) sarb xchg xchg inc call insb jecxz pusha add aaa sti out test inc or hlt in test lret data16 daa outsb adc (bad) hlt popa popa (bad) outsl xor in stc repz push jp or repz dec xchg (bad) jnp sbb or lds in fisttp and jno nop or pop push mov ficom add jge mov ja lea and push stc call mov pop jnp pop (bad) mov mov out sub sub sbb fstps cwtl pop xchg fild xchg mov dec cmp popa fisubr gs cmp std xor xchg xlat idivb pushl (bad) mov jnp lahf add (bad) fwait jns jle sub xor mov xor cmpsb push call icebp int3 mov sub fsts push je addr16 push das xor adc lods mov leave or sbb dec mov dec js jge orb xchg mov pop stc leave dec or aam adc mov fnsave ja mov fisttpl sub aad or jne cwtl in sub cmpsl mov inc sti jo xlat andl sub int (bad) in pop adc bound dec adc sbb sub lea jle aam push dec test faddl or add (bad) je lods mov loop cmp sbb cpuid in xlat xchg mov sub pop xchg out xor mov or xor inc mov lahf or dec inc comiss jo xor mov add daa add xchg test rcrb add fs add pusha adc scas jmp daa cmpsl pop js push mov daa sbb push fiaddl or sub sub cmp pop jle je stos xlat mov sbb xor roll rcll fcmovnu adc dec mov pop sti or xchg mov jge inc pushf fsts push andl mov bound sbb adc aas stos jno or aam dec lret movsb cmp test add fistp orl hlt popa cmc xor push popf dec sub and adc sub cmp fs andb mov outsl mov inc (bad) jo or xor jecxz dec icebp les mov cmpsb and cltd cmpsb xor pop sbb cmp mov and inc mov (bad) enter adc dec leave jp dec jno cmp pop pop out xor pop imul sahf xchg cwtl fsubrl xor (bad) dec jg sbb xchg mov ja dec fsts cmp mov xchg mov into sbb lahf pop pop jl and mov sub in xchg (bad) cmp inc imul mov jns rcrb mov mov out fbld les aas std in iret call adc cmp xchg bnd adc movsl icebp (bad) enter inc mov lahf popl lcall daa jecxz enter sbb data16 scas ss sti cmpsl pushf fistpl mov ffree xlat aas mov addr16 in mov cmp rorb xor (bad) xchg dec clc ja jp arpl or jg nop adc popf imul movl fcoms test setl xor cs je je repnz out xor or add mov stos mov test loop xchg xchg push adc decl jp (bad) mov or ficom dec das fist xor xor push lds xchg (bad) jb cmpsb jno mov xchg inc or (bad) xchg imul loopne leave mov sarl ficompl pop scas lret cmpsb pop sbb inc leave xchg adc jb mov leave cwtl cltd daa sbb or xchg inc mov xchg push jp mov popa and lods jl clc insb in addr16 adc fs pop jecxz,pt (bad) xchg lcall mov repnz scas sbb mov shr sub imul inc hlt pop xor (bad) mov adc mov cmp pop cmpsb out out test xor cltd popf adc add popa popa adc aas (bad) aaa call dec ljmp mov add and jecxz stos xchg xor inc loopne sbb or or ret inc adc outsl fmull inc shl ljmp sahf imul sub (bad) mov out inc push xor push std jg test mov xor jmp jmp xchg jle mov xchg pop add xchg cmpsl mov pop pop int3 jge mov push aaa insb mov pop test cli push push addr16 cmp sbb fistp or mov imul dec in inc cli adc mov lret xchg ja or adc subb movsb (bad) inc mov xchg jns mov xchg repnz daa leave sbb aad bound xchg mov pushf outsb sub enter or push pusha (bad) (bad) int3 jl loop das mov outsl imul sub mov mov and push push or movsl jge aad popa lcall xchg mov nop mov dec rclb adc lret mov xchg sysret push xchg fs mov xchg das inc cmp pop mov cmpsb fucomp outsb inc movsl daa xor dec mov and sub mov ret cmc adc movsb inc or sbb mov adc leave lret mov adc add loope ljmp xchg dec outsl push mov arpl fdivr and jle hlt adc repz sahf popa cmpsl (bad) jmp cli mov inc mov add ret or cmp adc xor loope mov cltd pop or lret enter inc insl mov inc xlat xchg mov or adc inc addl jp mov cmp (bad) dec mov fadds sti ljmp pop bound sub dec inc inc lods and scas xlat stc fcoml fwait pop mov enter push pop push xchg cmp dec repz stos jnp sub mov xor js jl leave nop out jl jge pop fcomi jp lret mov nop test test adc gs aaa mov xor xchg jg fsubl fild sbb int mov fistpll pop xchg mov out ja mov cmp dec movsb sbb aas mov inc mov sbbl in data16 mov enter in adc pop sti xchg fucomip dec xchg sub lods xchg cltd ds add leave insb mov mov les test xor insl fisttp sub jb,pt inc xchg std inc xchg ret stos sub push push in sub and mov push out xchg push cs mov ljmp pop inc inc dec repz rorb xor add push pop scas inc push dec xor pop in mov iret data16 loope ss subl arpl inc pop sub stos xor pop stos xor ljmp dec push (bad) mov inc (bad) fcomi sti mov mov push fcompl pop (bad) pop mov ret aas mov fbstp xlat in sub std imulb sbb repnz andl or inc leave iret int3 outsl sbb mov xor (bad) arpl fbld mov outsb or outsb sub enter jle xor and mov or jns (bad) jl fisttpll test adc std je,pt add test xchg add cmp insb adc fstpt out and js inc iret nop movsb cmp dec ror outsl ljmp dec leave push (bad) aad out mov inc pop lahf pusha jg test push mov jne mov pop out push (bad) daa mov inc das ljmp andb or outsl sbb mov sub ja fs mov movsb std mov movlps (bad) sti sub cltd sarb xchg flds mov stc xchg in jecxz lods fsts jne push jb std cltd inc jge add push ror push mov ret push jecxz aad or xchg pop push add aas mov mov out les sbb dec imul hlt xor cmp mov and ret cmpsl ret xchg nop ds lock pusha pop sub mov test jl aad sarl mov (bad) out movsb mov fstp popa push je sub mov mov mov and clc or stos movsl dec mov js pop movsl imul hlt sbb jo fild mov push aad cmp test test mov loopne dec fwait sub fdivrl in (bad) and subb cmp sbb cmpsl jecxz,pt hlt push or sbb sub fdivrl (bad) ja mov lea fs dec fwait xchg popa sub roll imul inc ret stos sub or inc js jmp das outsb insb pop sbb imul loop mov or mov jle pop sbbl cmc aad adc xchg mov add mov push dec cltd mov outsl push xchg movb cmp fild mov daa aas les xchg out mov push add jmp shrl push xor push lock mov daa fist hlt xor jbe inc xor aas out xchg shlb (bad) cmpl pop shrl (bad) lock scas (bad) fwait xchg (bad) movsl subb scas in sub cmp dec mov add inc sti lcall scas inc stc and addr16 pushf jecxz adc push xchg cmc cmp push jns imul cmp or cmp (bad) pop arpl icebp ds dec inc test pusha sbb adc dec sbb (bad) lods jmp sbb xor dec ljmp clc pop clc loop (bad) int3 dec pop lcall and mov add jp mov out in subps add xor test mov rcl dec pop mov les dec cltd int3 jae pop xor lcall jge cmp mov sbb mov add sarb mov stos dec scas in xor pop repnz mov rcr fldenv or lahf in or pop sbb lcall test repnz stos outsb (bad) dec mov push cmp rolb push push xor cmp and add jmp xor icebp inc inc dec sub inc xor std fwait (bad) jo pop inc out addl repnz dec pop pop push push leave dec jecxz mov mov cmp ffreep cmpsl hlt in mov sub iret dec call add push orb stc ja dec mov (bad) fcmovnb sbb addl lahf push and xchg (bad) or je scas pop mov fistpll sbb mov add in in pop lcall std sbb (bad) (bad) mov test xchg int aas adc cmp sbb outsl pushf mov cs sbb aad rcrb stos push jae (bad) iret stc adc inc mov xor add push adc mov fstps sub imul add ljmp int sarl xor rcrb repz fucomip or jg mov inc mov (bad) in sub and mov pusha mov mov mov in lods or adc cli sub add pop adc nop mov mov stos mov pop int (bad) dec insl lods adc jle dec adc loopne mov cmp xchg jmpw aas jmp sub or push jns ror sub in mov fildll xchg push fcoml cltd ss aam je and (bad) xor cmp inc sahf icebp mov test mov in adc adc xor cltd (bad) icebp dec xor push cmp xor jg shrl scas jecxz imull shr jns stos lea adc call data16 or mov jge arpl mov stos xor dec cmp mov aam out sti ret inc jnp popf xor mov mov adc push adc daa pusha mov daa imul pop mov jg lock dec inc adc repnz bnd scas mov xor fwait pop sbb push lods sbb out lcall in and orl mov push adc lods inc addl jno or adc dec mov subb out cwtl sbb ret pop and repnz imul in push mov outsl push mov adc rcrl lcall xor xor mov (bad) (bad) into dec fadds (bad) int push push add das cmp mov icebp loopne lods aam ljmp adc cmp sub pop out mov xlat sar call cmp scas (bad) pusha pop lcall ss mov iret jae sbb mov dec in cmc push jle lcall jae jae push mov mov adc shlb jmp ror xchg aas push rorb sbb jns mov sub divb lahf cs inc rol jge xchg repnz or and pushf jo mov ljmp lahf mov ja clc lea sub jl pop aad xor pop mov (bad) jnp call xchg jae (bad) (bad) mov sbb mov add test mov dec scas leave mov pop xchg dec jle pop or cmpsb mov and fidivrl xchg push or push ljmp xchg hlt cmc out lcall fs sbb aaa dec add mov pop jo mov xchg push adc xor fsts add test add sub sub pop adcl lea ret xchg mov popf inc inc stos and and lahf and add cmpsb xchg das out loop jg ljmp ret int push sahf cli pusha cli test icebp dec arpl push test sarl mov fsub aaa std icebp add cmp adc imul (bad) das mov inc and push pop std outsb push int3 adc xchg sub adc dec push inc fucomi imul push rol jmp push push mov roll push or inc shlb xchg out mov add cld xor call xchg rcll sbb adc hlt and push mov mov mov iret mov cmpsl in push and inc mov xor (bad) (bad) mov jne in (bad) imul dec ret in loopne cs cmp movsl pop jno mov out or mov and cmp jl jg sub cmp test jns jmp mov ret test xlat xor push mov push (bad) into iret mov in xchg lds imul add pop lds or inc (bad) mov into mov rorl push jae js subl pop pushf dec mov xchg cltd mov cld (bad) icebp iret stos dec mov jne (bad) push notl or ja (bad) or mov pop pop mov xchg loop notb xchg pop mov lods std and cmp lods sti xchg xor subl repz scas (bad) push pop test (bad) cmovp xor pop loopne jl and mov dec mov outsb add dec jnp xor adc in mov or xlat loop add jns xor movsb mov adc jp arpl sub and jno (bad) dec add adc jle dec ret jb sub pusha dec and mov push mov jnp stos std std jo fcompl jp and inc mov imul xchg cs pop jno pop js movsb pop nop sub out sbb push popf push lock (bad) adc or data16 popa insb mov lahf cmp sub inc xor test pop loope lea pop xor cmp xchg mov mov jne pop inc leave xlat insl mov add sub imul mov jmp xchg sbb jle sar aam adc and jne xor push ss arpl fisub lea mov aas imul dec imul mov dec test adc xor notl mov push push dec mov cmp add jns mov mov push xlat lcall mov jns or repz cmp jae inc xlat dec cmp adc int or into adc mov repz ret pop in xchg mov xchg jb and mov push (bad) jns,pt add shrl outsb mov data16 out sbb sub mov ret xor push jnp inc adc (bad) add add sbbl ret loopne sbb sub ss push test call sbb (bad) fsubl pop mov mov rol insl pop scas test sbb and cmc ds outsl enter jge cwtl mov or nop sbb fmulp sub insb jge xchg cmp mov clc xor and pop bound jecxz jp std pop mov mov mov sub cmp fidiv ds cs mov (bad) or pop xor or cltd lahf loop push in sub push les and jecxz jo pushl mov scas pop pop xor pop loope subl or push jge idivl clc imull dec orb cmp imul inc mov cld jo cmc repnz leave lea or notb mov xor inc cmpsb insl loope inc pop adc adc icebp push fldt push add fwait rcll mov lahf cmpsl fidivl xor lret lods dec mov dec cmpsl stc out and xor (bad) int (bad) sub ds jno mov out inc adc js and push jl insb or add push lcall ja,pt pop pop dec mov push inc xchg xor icebp cmp negl mov jne cmpsl popf jo out lahf aam xchg cmp or xor xor pop inc xchg push push xchg xchg xchg mov es sbb and or pop push arpl lods mov popa sbb mov rcrl inc cmp (bad) and arpl stos sub mov popa add cmp (bad) xchg mov mov sub test ja pop or cwtl test or pop push push adc jecxz or fwait int3 pop adc push pop xchg xchg or mov sbb cltd pop adc jl pop outsb inc scas rcll shr jb das outsb fbstp mov imul dec mov xor mov sbb mov dec std cltd rcrl mov pop add jmp dec mov movsb stos jo ret (bad) xchg rorb loopne xor cmp add sbbb adc (bad) popa lahf xchg or and int3 aam repnz dec out gs in lea mov ss jp cmp xchg xor mov mov pop test out dec add pop cmpsb adc add pop xlat orl lcall rorb pop xor inc dec fs xchg popf pop packuswb mul adc xchg outsl scas or cmp out mov pop sbb pop outsl push mov jl cmp jmp pop out fs popa ja enter mov lds in pop (bad) divb iret adc cpuid mov add dec xchg mov fsubrl hlt jbe and scas mov jnp xor loop sbb aam jns push mov rclb add test sub pushl movb test out sub aas xor insb lea cs js dec sub jg stc nop into cmp repz shl mov test movsl lods push jge cmp mov es (bad) xchg inc xor xorl call ljmp jecxz xor pushf xchg sub pop inc push test insl int ss xor xchg push push inc mov or sbb ss cltd stc scas decl ja das mov mov xchg cld cmc lods push cmp cmc xor mov das mov push les cmp test pop sbb aam xrelease ret jg sub daa pop enter mov inc inc loop scas cmp nop dec sar in push dec mov mov popf outsb popf cmp and mov add stos cmp xchg dec pop pop idivl cmp scas cmpsl nop xor push mov or and sub (bad) and bound fcomip mov cltd xchg xchg (bad) inc (bad) sbb adc fstps dec sbb lcall je adc js mov or adc idivb jns ds dec nop dec (bad) idivl pop mov lret stos push arpl je jp (bad) aas ret push and stc sub dec jae mov imul adc or pop mov inc sub iret out stos out ret inc pextrw adc (bad) rolb int3 adc sbb adc aad incb push xchg test jge jg subl lds in push aaa dec rorb mov aaa push test inc shl les xor dec imul jb inc pushl fs popf push inc addr16 ja dec cmp (bad) mov push mov mov pusha das mov and into insl dec (bad) outsb test mov ror test pop ds jmp popf je xchg mov jecxz mov orb test xor insb das rcll lret int3 lock scas add ss lods (bad) jmp lea jo enter out ret push outsl inc sbb dec popf adc rclb xor lret stos sbb mov leave mov pop scas xchg pop sub adc xchg (bad) (bad) (bad) test sbb mov jg sti jp rcll and or roll jle sbb mov fwait inc push cs push push daa rolb adc mov pop or scas cs pop insb cmp cmp out sub pushf xchg dec addr16 jmp push cwtl sub test ds imul inc inc int cmc mov add mov push fisttpl iret fimull mov or sbb dec push test inc add dec je arpl rcr sub mov mov lea or int3 loope sarb inc ret jo sbb fldt lahf sbb out push icebp xor hlt stos pushl call cmp enterw and jmp fldcw ret insb mov sub push xchg pusha or mov leave and test mov shl fwait cmp dec adc push fcmovnb cld push lcall (bad) inc add push or push xchg jae arpl push int pop sub xor gs jne sub in iret stos addr16 xchg arpl (bad) adc lock faddl int cmp jne pop imul into mov out adc jp cmp cmp imulb mov ret inc leave and cmp jb movntq bound arpl ret aad sub ss outsb cmpb fsubrl cwtl repz cmpsb adc push leave nop cmpsb jmp inc pop lret js add fidiv mov es lds insb jne fwait ja popa push test mov and and (bad) and leave test sbb outsb ss aad mov jnp mulb add faddl jle and pop and cmc outsl leave pusha or sbb movsl xchg fidivl into xchg jge fildll or adc push popf fidivrl inc xchg std inc or sbb pop push sbb add xchg fsubs or cli aam cmp or push and out faddl mov cmp cmc mov inc dec xchg ja fcomps inc stc xchg in xor outsb sbb jge push repnz lret cwtl mov jge popa int push movsb push stc mov in ret mov pusha mov cmp das std add stos xchg outsl popa cwtl fcmovnbe fsubs shll dec fbld and mov shlb add pop enter outsl daa xchg mov stos cmp push test int3 push rol negl (bad) jns fisubl aaa movsl mov and add fildll popa xchg scas loopne stos add push aas jb xor mov push (bad) scas test std pop cld loopne dec push fnop push mulb mov fnsave mov mov sbb jle movsb fdivrl and ffreep lahf cld test mov stos and cmp push iret add mov popf cmp xchg adc shrb shrl test xor je ljmp das pop push or sub add adc cwtl pop mov mov div in lcall pop mov pusha (bad) xchg jb push dec pop loop ja outsb rcrl and jne or pusha xor (bad) mov mov ret adcb imul jg pop mov and iret aad outsl push incl sarl xor push addr16 int3 les xchg sub adc jno cli inc sbb jnp pusha mov jo enter outsl (bad) or arpl xor add lea inc and loop fnstcw push add xchg daa leave jo push adc loopne jg and mov arpl jl aaa mov lcall test cs daa fistpll scas cmp or mov sub inc fs xor out repz incl mov adc push jno dec stos sti insb and xor mov mov shrl out pop test pusha fwait scas out push sub add add sub jno nop cwtl ret lcall add pop lret imul push jp sub pop mov (bad) fcmovu ret pop arpl xchg sbb inc int cmp sub fcmovnbe (bad) repz mov xor sub (bad) adc add adc inc lret das loop xchg jl ja icebp outsb jbe cli imul rolb sbb inc mov jo aas scas push cmp imul jle ss lods add (bad) es lock sti push push test icebp popa mov inc and jmp pop push jl lock mov popa inc std mov ret xor std pop lret sub add out gs std (bad) in into and jmp pushf push jp fcoml jle and or repz adc mov aaa push insb xchg xor cwtl imul push cld cmp adc push push mov mov jae out lods add test jl pusha stos lret lock cld mov lds fisttpl fmulp or jl int3 call gs ficompl fnstenv repnz xchg outsb dec into add inc fcmovne add dec pushf inc aas inc test push push add or sbb mov cs xchg lcall pop push inc cmp jb cmp negb lret out pop test sub stos fcoml fdivr enter cmp add cmp pop sub loope inc aaa flds push fwait sar and add popf inc (bad) sahf aad push pop xlat xlat ret fstps jne xor fwait adc outsb ficoml and sub cmc mov (bad) das cmp inc xchg scas sub (bad) mov outsb cmpsl pop mov pop popa jnp adc aaa xlat out fidiv xchg mov psubw pop cli xchg aas movsl fs add adc ret push ficom jge cld adc and test gs loope inc push push mov mov lods mov sbb orl or lcall adc ja ds in (bad) mov pop xchg mov xchg sub jmp dec adc repz incl or aaa sub in mov mov xchg push jb enter add cmp dec iret pushf jno aas push popa sbb xchg cli or pop add not out jl lret mov sub mov loope mov or pop jnp sub in jle int3 fs dec fistl mov not and xchg out xchg stos rolb lods jmp lcall xor adc lock fcmovbe lods adc fisub mov add (bad) xor inc subl adc mov lcall pushf jecxz mov sub ret ljmp or leave test mov pusha pop jo pop ret fwait push setae add sub adc aam (bad) leave popf xchg in sti fs jnp test repz fs xchg and imul pop stos xchg jmp jo popa add xchg pop les jecxz in mov pop in popf mov inc mov (bad) jg xchg cld mov fildll lock mov jle iret cmp stc or negl icebp or dec xor mov call add into jno cmpsb cltd mov jge rorl cmp push push ret or out scas ret xor pop insb outsb push shr imul fwait xchg test arpl gs pushf roll ret push orl in (bad) (bad) mov inc (bad) sub add mov inc idiv fstpl pop xor (bad) stos mov repnz lea xor daa iret xchg jle lahf lcall mov jbe mov add push test (bad) mov pop mov xchg push mov in pop dec arpl ret into xor or pushl jmp and dec es adc push pop cld mov mov pusha loop lret nop xchg pop mov das xor out jbe adc mov push in cmpsb es int3 mov nop add pop loopne push and shlb lock sub stos pop xchg adc mov insb add or xchg xor ljmp push stos stc (bad) xor push inc les test outsl sti push lea fnstcw (bad) movups mulb roll mov cmp fisubr pop jb dec dec cmpl pop push jg icebp or jecxz lret std mov lahf out fstps imul xor dec lcall adc inc ret mov jmp push aad lea push push push xchg xchg (bad) call roll adc add pop or lock jle xchg fisttp (bad) xchg push divl dec cmpsb adc repz in outsl ja in (bad) daa repz decb jae jg in push sub bound lock or fs (bad) in push dec xor (bad) mov pusha loopne scas (bad) std addb fwait in mov loop cmp push rcrl cli mov mov int xorl movsb push push out fidivrl push mov test pop gs jbe and xlat cmpsb call or lcall mov jl aad add push adc or std roll sbb add loopne mov mov cmp sarb (bad) popa sbb pop sbb popf mov mov sub test aas fs jp imul (bad) push in aaa cltd and push dec lahf xchg fist jae dec js test ss sbb movsb roll movl int js fsts dec pusha mov jno stos repz and movsl in js mull xor push ljmp mov adc dec adcb dec inc addr16 int sti jle fs pop push pop jle aaa js cmp cltd cmc repz xor (bad) push into sti cltd je adc pop push shll scas outsl addl adc in push or adc (bad) in xor or (bad) xor dec leave push push pop leave xchg popa mov pop lea jg test orl test push shrl jmp inc mov aaa sbb or sbb xor lods xchg ss mov mov fisubl insl out jg loop and cmp and push dec fidiv loope test mov loop,pt adc mov cwtl leave inc xchg hlt lret push ss sub inc (bad) sub xchg insb pop dec pop iret (bad) xor movsl les repnz (bad) push inc push sub push es daa mov int3 sar mov push xchg xchg xchg inc fistpll scas adc es mov popf ds push xchg sahf mov bound inc lods and inc mov (bad) pusha jl mov push and pop jp clc rorl mov adc in xor jnp pop imul xchg js cmp fucomip xor xor or outsb jae fidiv push sbb adc inc and sahf adc sbb pop outsb pop and pop add js (bad) xchg out pop jmp inc fs rcr add rcrb movsb inc jnp add cmp daa and adc xchg roll push dec sub adc ret and hlt sbb jae int adc sub jns xor add repnz dec push repz mov inc test or and adc xorl insb or (bad) sti mov pop push or cmp fistl mov push or xorl es stos or mov loopne dec push xchg xchg out pusha mov aas and test push xchg test int3 outsl sub fiadd roll dec insl ret arpl xchg pop cmp fldt jne xchg cmpsl adc mov push push or bound mov das push add aad loop xchg mov inc pop push mov out jbe add jnp add mov jns cmp mov bound das sbb cli shll push adc fadds or pop mov cli bound inc call mov push (bad) loop mov ljmp pop cmc jae sbb outsl iret mov or and leave jge add aad sbb mov or lods sti pop divb mov pop sub leave adc js add flds js fcomps fcompl (bad) mov lret in sahf popf mov sete aad pushf jmp and cmp ret push movsl push (bad) xor inc push inc (bad) aas jp jo pushf loop dec sub sub imul aam outsb std scas sar test mov and mov je ss push mov imulb mov ds shll mov ss mov xchg xor icebp mov cmpsb lcall xchg fisubr adc lret or jg mov outsb push mov xchg icebp aas jbe (bad) mov dec int3 decb jmp aam xor xor or mov test test and xor aaa bound lahf inc leave inc inc scas dec cmpsb popf push sub vmovaps imul cs negl ret das mov xchg add call dec imul jl add loopne sahf sub sahf mov sahf dec or popa cmp movsb adc cwtl mov call lcall push sbb gs cltd jg popa popf pop fcoml icebp jns pop mov lret subl adc and ljmp mov add cmpsl div fwait insl loope outsl movl bnd cmc (bad) (bad) fldenv imul lret outsl mov mov and or cmpsb push pop inc mov xchg stos xor xor inc cmp gs (bad) mov daa xor and stc in ret fbstp js sahf pop and push mov addr16 (bad) sarl jb lods mov lods push loop cmc sub push push push test or or outsb ss sub ljmp and jbe xchg jg dec lods xchg pop inc adc or nop push in xor das pushw ja xchg int je repnz ljmp and jle push test rorl lock imul xor push mov mov mov cmpsl adc cmp lock mov fcoms lret sub push daa add lret or in pop mov cltd pop xor and sbb xor or repnz pop gs cli dec (bad) loopne inc mov sbb (bad) sub cli sbb stos add movsb fadds xchg cmp gs test jnp push push mov orl hlt cli push sbb movsl imul andb hlt fcmove clc add mov cmp test or pop lea pop sbb ret fwait loopne aam and aam std inc dec es sbb aam mov xchg sbb mov nop roll gs ja out xchg (bad) fidiv push xor bound or int3 push adc cmpsl cmpsl cmpsb push insl cmpl fcoms ja lods daa pusha lret add sub aaa movsb mov inc sub xor sbb inc aas hlt idivb out stos or pop out idivl test jns jo and pop or xor jnp jecxz mov or or dec dec fwait push jns out arpl push mov (bad) jne push in insl movsb mov aaa lret adc gs cmp std scas test pop es (bad) xchg mov loop loopne cmpsb cmp adc gs cmpsb sub mov push or inc insb jmp aaa xchg adc mov adc pop dec aad cmp xchg iret mov mov or enter in adc mov mov movsl xchg test sbb mov es xchg add aas mov and mov push pop popa xor mov push push stc stos sbb (bad) cli (bad) xor push repnz insl add pop (bad) lods ficoml mov cmpsl or xor andl shrb daa pop or rorb fisub push call fnop or mov stos cmp test ret (bad) cs inc xchg mov dec inc pop (bad) add jnp movsl push lcall or incl xchg add add sub jbe cmp push cmp dec nop xor outsl in jns dec mov adc xchg mov mov testl mov sti popf mov jp icebp jo mov sbb xchg arpl mov ss jne fcoms jge iret scas inc push mov dec mov imul shr and stc rcll mov xor into xchg mov fdivl pushf adc xlat rsm mov mov test cmp and je bound sbb lret (bad) pop inc dec test push and mov sub add (bad) jge call inc sbb lcall cmp inc fs nop lea cmp (bad) ljmp mov cmp push pop daa fwait clc dec popa das fwait pop fs mov add cltd mov mov and (bad) push in repz bound outsb pop sahf and shlb inc std cmove adc mov ja jb out xor (bad) cli movsl sbb insl fistp mov xor lods div les mov jmp daa sbb insl cmp push cmp pop jle or push add call mov cmpl (bad) hlt lcall add or ss (bad) popf aaa fstpt outsl lahf add push insb lcall ret sbbl mov pop das mov popf lcall pop add (bad) sti stos outsb dec or pop jbe (bad) dec pop sub int in lea push mov lret sahf sub insl cmp hlt cmp push icebp sub jnp jl jae jmp hlt ret mov and int3 loopne ret inc jecxz nop cmp loopne notb adc mov sub aam pop mov add scas call xchg pop or (bad) sbb mov or outsl (bad) pop pop inc push sub add xchg inc cmp and ret jnp xchg jne imul mov dec jecxz (bad) mov and lock in stos out std popl or adc sbb negb fldenv das pop rclb setg cs cltd mov pusha daa push inc dec sti aas sbb pusha stc xorb add and cmp mov out sbb in pop mov xor movsl mov xchg xchg jne pop (bad) stos lds pop (bad) in xchg repz xor je out pop lcall sub cmc pop xchg jae ret pop es adc jne cltd mov pop cmp pop xchg cwtl jno xchg aam out mov pop push pop arpl xchg sbb test mov pop sahf mov and pushf bound push sub inc lcall or xchg outsb repz jp scas and cmp mov xor scas jb es sbbb fstps aad addr16 mov incl scas sahf jb push adc pop and add outsl rolb adc add mov add push adcb mov (bad) stc and mov ja (bad) sub xchg jne incl flds lret icebp mov push das adc (bad) fld std mov pushf xchg jnp ret ss dec mov les in adc stc adc shl (bad) push or inc je mov dec sub push jp xlat xor and gs xor lcall push adc jp xor jge cmp arpl jmp ret cmpl xchg call insb sbb loopne sbb test sub push or nop push int call cmp sarl mov pop popf mov aas aaa mov les jo mov xchg daa dec mov adc sbb (bad) pop add pushf dec add mov mov lea add push int3 inc xchg mov and or mov stc mov push pop xchg clc rolb clc lea cmp js loopne mov cmpsl sbb sub adc mov xchg popa pop dec test dec sub test rclb jge inc fimul sub dec mov leave stos sbb movsl int sbb mov sub push or xchg push jg add leave push adc or data16 cmp pop adc pushf (bad) rclb lret lcall xchg cmpsb pop push arpl sub sbb pushaw jmp repnz xor add cmp xchg inc inc aaa cmp rcl mov inc adc daa push xchg test insb mov xor dec sbb or pop (bad) out jecxz xchg adc popf out pop clc sub in cmp inc and mov or xor push sti gs les inc sub (bad) repz fildl dec and pop jns mov sbb repnz divb stos ret push add out sbb mov sbb push lods imul cwtl cmp sbbl jmp xor adc xor aaa cmc mov inc sbb cmpsb jmp push sbb lret mov int3 inc rorl mov lret push inc hlt mov sub repz jl or in imul cli lea aas push int lret leave pop sbb inc gs jl pop test pop sbb pop dec enter cli dec or cltd ss sub xor loop aad jno pushf or adc push cmp bnd push scas (bad) and adc sbb xchg imul xchg add loopne add cwtl or lret pop sbb xchg stos sub cmp mov dec sub int3 adc and (bad) xchg and scas xor cmc lds pushf lret inc jl dec push je loope push lds push xchg ret inc (bad) mov inc xchg xchg pop out popf lcall push sub mov test inc dec (bad) mov pop sbb cmp push bound push pop cmc daa cmpsl ret outsb or (bad) (bad) jo xor xor daa pop loope cmp push dec lods sbb and mov pop mov rclb xlat push xor xor xchg xchg and xchg xor dec push loope cmp daa pop lahf adc rcl ss lcall xchg xor stc insl push lret push f2xm1 insl jge jnp icebp fldenv aaa mov jnp jno inc in lahf hlt cwtl (bad) bound push jp repnz (bad) std push aas push imul loopne dec sub mov inc or int3 clc call jmp int ret xchg cmc and add xchg lret cmpsl rcl push out test dec je jp nop sti sbb mov in loopne addl xchg xor cmc pushf adc daa cmp scas rorl sahf incl mov xchg pusha cs lret outsl fstpl test pushf (bad) cmp and test in xchg leave out jp mov das sbb and (bad) movsl or mov cmpsl adc into iret mov flds aaa xorl (bad) scas jl cmpsb lock sub lcall xor sub sub and sub rclb fildl aad setns or push gs jne inc xor and roll jne test mov fsubrs test pop sbb hlt rcll outsb and stos test xchg sahf cmpsl fs outsb push jno leave or stos addr16 mov loope fwait jp pop mov add loope mov nop fnsave sbb mov pop popf rorl and inc dec push shlb scas xor mov in lret repnz loopne ror xor (bad) rcll mov outsl inc ror pop lods xor mov mov mov nop xchg jge stos or clc test adc stc pop (bad) fldcw outsb sbb int3 stos fdivp mov push pop and pop andl mov jp (bad) call xchg cs push and movsb inc shll imul sbb inc inc and or sub dec fisttpll out test mov jno stos mov aad cmp adc mov jnp or mov and mov mov int ret dec and notb mov or and fistpll xchg test ret add (bad) frndint xchg (bad) daa outsl mov into or out push sti sbb xchg ljmp imul lret pop pusha popf mov jp cltd mov jl mov push popl (bad) adc sarl out lods or or outsl call js mov cld cmp (bad) cmp lods xchg jb fisttp lcall movsl pop and push addr16 push jl pop dec cmp int jecxz (bad) rorl mov dec sbb or daa and inc pop rcrb fidiv sub lock mov repz fdivrl mov dec cld fistpll repnz cmp ret insb mov cmp mov or pop lock es or imul push sub jo cmpsb out imul inc sub (bad) pushf cmc mov fcmovbe push add xchg int3 push ljmp rorl mov test jb jb mov scas addl sti out fstps ljmp dec hlt js dec int lods das mov cmp push inc movsl addb mov or inc cli test int test inc jle jae dec lods and lds dec cmpsb divl sbb jmp sub mov dec sbb and addr16 push xor mov mov out jl int3 adc sarl in sbb jmp or push lea mov mov sbb add (bad) and in and bound int3 mov jb addr16 cmp div rcll xor imul mov mov pop sbb push movsb aam mov xlat xor xchg out mov ljmp mov jp (bad) xor stos iret test imul lea lods test xor lcall pop pop mov fs pop cmc pop (bad) push std mov cmpsb push mov sbb cmp je mov dec cmovl push inc fcoms cmp add test aas daa fidivr cmp and or hlt sub enter jge ret xor in rclb stc repz xor dec stos int3 sub (bad) jae xchg pop sarb cmp add pop sbb jecxz adc mov and xchg outsb pop outsl fmull mov loopne mov enter xchg test sahf dec in push faddl mov xchg paddw pusha cmc fbld xchg add xchg adc mov or in add fsts add jae inc pop jecxz add jge dec enter dec xchg bound cli leave fcompl add pop jb es push inc stc ficomp xchg mov or sbb add pop aam mov push mov dec jbe jne adc sbb jbe mov divb jo and mov xchg das mov mov outsb fidivrl pop adc lahf clc add jae inc in adc mov mov popa sbb pop push sub icebp cli std push les scas fisubrl jecxz cwtl mov inc je or aas popl mov jp xor cmp loop push jns mov testl scas xchg ljmp push push repz sub sbb scas xchg pop dec sub push (bad) pop adc xchg push fisttpl lds mov loopne or mov pop mov cmp pop lret je push test out lahf adc shll vpaddsb adc test ret test pop xchg out aad pop mov mov mov xlat push cmpsl test out mov jne push imul (bad) addr16 sub cs mov inc mov test sbb mov sub std mov push mov dec iret pop (bad) out (bad) mov and or xchg mov mov cmpsl addr16 cmp in cmp out cmp in lds gs sub pusha outsl mov add mov shrl pop or mov (bad) cmc mov add mov pushf push push sub mov and mov test cwtl cwtl xor imul repnz and test fs inc xchg jbe test jne das clc push gs inc cli mov out out mov test sbb icebp loope fadd sbb sub enter cmp into dec jns sub jno out xor in cs ds dec stc adc test movsb push into mov jl fisttpl dec add fmuls sub xchg ret xor cmp and cmp enter push gs sbb mov ret insl adc pop inc inc data16 mov hlt (bad) mov fs in test or daa fnop jb xchg dec nop jl xchg incl push sbbl movsb push cmpl mov push add jmp cwtl sub lds mov nop mov outsb mov negb xchg push mov clc or xchg insb xchg mov arpl fildl xlat das add outsl es ret jb pop cmp sub movsl sti lock ljmp fs (bad) aaa out cmp cmp pusha adc push stos inc adc in leave shrb and js out shlb or jecxz jno ret cmpsb mov popa inc ljmp iret push fsubs jp or or push push xchg inc in add je dec roll das xchg inc out xchg fsubl mov fcmovnbe xchg push add aad scas sar jae pop pop dec outsl xchg jle outsb mov and mov pop push mov mov xor inc cmp adc sub jnp stos jl pop pop mov inc lret ret lret xchg clc sub and imul xchg sbb xchg (bad) sub jl push sbb sete add xorb int3 adc jle and pusha (bad) jnp cmpsl push sub jnp jl or mov pop bswap cmpl out sub test int3 lds pop lock mov sar scas popl jmp pop sbb and xchg (bad) fs js popa lahf sbb xchg cs aaa mov ret dec scas lcall sbb hlt sub repnz mov mov repnz sti pop fimull sub cmp fimull ja push xor cmp lea lods dec scas adc lahf xchg cmpsb lods sbb jnp mov xchg push pop add loop sub leave mov nop out mov pop mov imul push into leave jmp daa xchg cmp daa and sub jno push stos psllw jno inc xor xchg shr outsl dec js xchg mov xchg push jp sub call hlt leave mov inc call pop mov cmp imul sub ffree clc rolb push pop lea push dec adc adc or sub cmp shll xor das or push loop dec dec rclb sub xor shrl push ficom cmp mov xchg xchg clc fsubs push frstor xchg test add xchg jle sar inc mov sbb or mov (bad) ss decl dec lods dec sub ljmp icebp cmp out pop ja (bad) mov sub out add mov shrb in push and mov mov xchg mov lea jae xor inc stos mov orl in repz pop cmp push push movsl test mov jecxz repnz xchg hlt mov iret idivb inc test test outsl adc (bad) scas lret in imul or fidivr in jmp mov mov xchg cwtl imul mov mov inc lcall xchg in in test rcrl imulb push loope adc sub xchg test sub or data16 rclb sbb popa and and test jge cmp sub adc and mov adc xchg lea aad stos adcl mov gs stos loopne lods push icebp mov mov or push xchg push fstl add or es and sti push inc push in mov stos cmpsl loope mov enter ss leave outsl cmp xor xlat pop adc loopne cld gs ds xor sub pop push xor xor sahf lret cmpsl push jno fcom jnp dec pop daa insb int xlat sahf popf xor icebp aaa jge push test jb push fldl xchg sub mov ficom into and divb in es push inc mov sbb add jbe movsl xchg (bad) daa xor sub insb (bad) inc xchg enter pop pop inc xchg xchg xor negb mov lock loopne ficoml rorb fisttpll jnp cmp pusha mov jp jge xor test xchg jle cli pop test mov jl fcomps mov jno sbb push scas in cwtl sub and imul out cmp jp and ffree xchg shrb shrb inc mov nop clc mov cmp ds mov add in js std pop fisub in adc pop fisubl bound loopne sub add loopne dec rcrb test stc pop insl and jle ss pop mov idivb mov in add fnsave stc xchg push into imul sub outsl insl mov (bad) and add lock into mov xor mov push sar push dec jo jae (bad) ficom clc jle mov cwtl xor enter gs das mov mov jl roll and mov scas pop jne jmp mov inc out in call mov xchg call or (bad) xchg and pop mov jne jns pop (bad) leave or ljmp (bad) scas or in dec mov test js outsb jecxz (bad) pop (bad) in jg mov in adc adc add outsb in rep cmp jae (bad) scas dec cmp out cmp or mov mov xor pop pop cmp lods xchg jno and imul mov pop mov pop sub negl lcall (bad) jb dec lods popf jnp out mov mov mov (bad) int lods mov adc lods aaa cmp fmuls pop bnd dec mov pop imul and out jae imul imul daa std negb (bad) mov (bad) mov and and jmp push mov ret sub push and pop cltd pop cmp arpl add push sub mov adc je inc std push sahf inc mov cwtl ret jle mov imul and es fcompl shll (bad) inc inc push fstps rol lea and dec push cmpsl mov mov push cmpb xor xlat pushf repnz mov and jge inc sbb pop add stc mov rol inc call ds loopne hlt jae shll stc jge fsubrs xor lret pusha (bad) mov es ret hlt jb push aam xchg iret out gs ss cmp or out imul or mov adc add fidivl mov mov mov fsubs shrb iret sub into rcrl aas jo cmpsb mov dec les cmpsl daa daa inc fildl jle pop pop jb or iret jmp push sbb in ja sbb jl mov enter mov mov cmp insb test in sub outsl cmp mov sarb mov inc stos cmp lods sub push hlt or pop imul jmp setl sub stos jo jnp lea sbb or add popf ss aas test addr16 daa and lret xchg push stos jne shrl fnop lret and and repz arpl mov ret out sub sbb sub (bad) setnp add cli int (bad) jmp out cmp add inc xchg imul mov sbb in xchg xor iret jle sar test dec push andl paddsb lret lret pop in iret daa or movsb cli aad test cli in add xor fs hlt fcomps pusha push inc jns mov adc daa lods ficompl mov (bad) imul dec repz in inc sub mov aad mov jg push sbb sarl in push push pop int3 mov rcr fldcw xchg mov jns (bad) repz (bad) pop ss xchg std or mov mov sbb popf mov mov in jge and in int cwtl addr16 or arpl xchg mov push or push sahf and inc nop scas and or xchg fstl jle adc stc jb mov cmp dec (bad) mov cmp pop mov pusha pop stc fldcw data16 xchg les pop jl int ds lock out jno (bad) imul rcl xor imul mov dec push cld push call enter stos aam call mov cli mov orb mov imul mov pop insl push pop mov xorl or hlt mov cmp out aam dec xor test out jecxz scas adc in js fstps in cld pop popa add jne (bad) js cltd mov ficoml inc insb push (bad) pop sub xchg jl orb mov xchg aam enter sbb out pop ret scas pop mov inc jmp setp pop ret mov test mov jmp sbb in pop or mov mov jno pop sub ja clc or test or adc fadds mov call data16 push sub add fmuls mov mov loopne lcall fwait jno flds gs sbb mov mov leave jne sahf sbb xor adc pushf imul sbb jge (bad) sub sub sub test outsl dec test mov cmc mov inc addr16 ljmp add push fwait push mulb cwtl mov cmp mov repnz imul pushf fwait dec mov (bad) sub pop cld shlb sbbl adc jl ds xchg ret cmpsl lret push inc dec cs push and jecxz mov jnp shll lods outsl rcll fdivs or ret mov inc nop or popf add aam shl ficomp pop repnz mov insb jp dec pop fidivrl int lret mov das xor mov mov jae adc adc fadds pop clc jae dec or inc sbb jne popf iret mov adc (bad) nop jb sub xor jo inc mov (bad) out cwtl movsl aaa sub add pop sbb (bad) sbb mov mov or in (bad) jbe sarb inc jl movsl mov or insb xor aad int icebp jo addr16 lea mov sub push lret mov ljmp es push inc xchg enter mov outsl xchg sub fisubl sbb sbb sub fdivr jno jb imul lock pop cmp sub push dec pop push cmp jo out or lods stos pop dec or sbb mov ss repnz cmpsl je fs cld daa mov push aaa pop mov les insl jle inc cmp push and popa lea mov (bad) mov dec bound add sbb pop mov stos int3 push int mov push xchg mov lods pop adc mov test aad sub xchg jns out sbb icebp mov sahf lods xchg jno mov scas sbb sbb dec inc insb addr16 bound or insb lods dec pop jae pop repnz sbb es push or add lods xchg inc (bad) icebp lahf sub stos rclb or mov hlt sub push (bad) push addb rcr mov push outsl or insb xchg insb fldt cmpsb sar (bad) jne push push movsb pop test pusha clc jg and test dec out testl out ja js jmp inc scas lcall shlb repz mov daa sub outsl dec pushf push mov ficomp jmp imul mov rep insl gs push out aam je aas or or mov jnp mov mov xchg data16 fnsave push sbb cmp sub test imul xchg cmp cwtl and aad push push loopne mov adcw emms pop push sbb fwait xor gs mov sti mov cli ficompl das clc mov sahf push jbe jmp pop out mov adc xor (bad) insl clc push (bad) outsl pop push (bad) testb data16 pushf lret push pop mov xlat clc lret outsb rorl stc fimull mov dec mov pop andl push mov adc outsb dec jl (bad) loop mov mov ja pop out stos sub push mov mov inc inc pop into dec loop xchg frstor adc adc inc (bad) pop std jo shlb mov xor aad mov add mov add nop add dec hlt adc imul and and jns ss insl dec lds sub pop sahf jle mov scas sub mov or or dec notb dec bound shrl jp add int3 jmp sahf mov mov pop push ds or fcomps ret (bad) loopne push pop xchg sbb outsb jg pop fimul push sti pop mov mov je push jecxz test inc mov (bad) cmc cmpsb mov and jae lret hlt add cmp or imul push xchg insl xchg dec repz adc popf movsb out mov dec out xchg pop movsb xor pop ja xchg fcomps loop fbstp sahf lahf xlat mov aad (bad) xor mov pop sub mov cli push fistpl out and (bad) fisttp adc jae fwait mov subl jge pop or nop dec inc out jae inc jmp cmp push decb jbe jmp push lods jle cmpsl inc fcomps outsl mov aaa (bad) sub (bad) (bad) cmpsl cmp and inc mov shll popf push and popl loop push xchg pop clc aad push pop pop lret jns push lea popa or xor add inc mov lods in push sub mov xor dec or loop pop into add cmpsl sbb mov fs lock lods cmp adc sbb (bad) (bad) jo dec (bad) sti or sbb mov cld mov popf lock fiadd outsb (bad) mov in mov dec adc pop loope cwtl hlt adc xlat sbb or mov inc fidivr insl mov ret scas mov xor dec pop jg rolb mov xchg cld add mov repnz jae cld mov aad jecxz push inc push std mov je mov aad jecxz cmp sahf out mov adc sub mov pop dec test or sti insl (bad) je lods mov movsl adc lahf aas mov mov ljmp dec fidivrl pop int3 (bad) int outsb adc mov stos cwtl cmpsb repnz push lret push sarb xor fdivl or rorb fcmovnb pop mov xor xchg sub xchg incb inc xchg mov ficoml sub sbb mov test push das xchg xor popf lock sub fsubrl stos xchg cld mov outsb jecxz mov mov or sub (bad) hlt inc sbb bound icebp insb push pop les or mov lret jmp fistl mov movsb sbb in (bad) js mov pop sbbb loope (bad) fucomp mov pop dec popf inc or cmc mov or mov pop add sub lahf fstl jnp dec (bad) and xchg aad jle mov mov fistp pop xchg lret imul mov mov mov jb lds inc push imul mov and sti (bad) (bad) dec in push mov mov mov xor loope nop push adc je inc jns cmp lahf adc pop sbb or (bad) addr16 mov lret cmp lahf sti adc sbb outsb push clc dec lcall les popf bound mov sub popf out (bad) or (bad) in adc pmuludq xchg popa nop sar ret ret inc out icebp iret insl pusha add hlt loopne es dec aam daa add leave ljmp xor push push insl loop adc ret aas mov nop adc cmc movl jae lret mov xchg mov lock hlt adc jo or mov push pop jb mov rorb or ljmp xchg fnstcw scas or jae cs dec sahf mov lret les (bad) push ret sbb pop adcl sub in inc cltd dec ss test or (bad) mull or sub dec idivl (bad) sbb mov xchg into push xor mov fidivrl inc int mov jno inc insl xchg or adc divl pop pop mov movsb xor test je (bad) ficomp das decl outsl jnp xor and mov lock sahf xchg add shl outsb dec dec addl jp jl (bad) stos call shr stos mov cmp shr xchg adc cwtl or xlat pop lret push add out pop lods cmp mov (bad) sub neg aaa sub sarb ja mov hlt idivb mov leave adc pop addr16 cmpsb jmp cmpsb or adc pop mov pop cmpsl int3 cmc sti xor jmp sbb add std out test xorl and in test test movsl in fstp dec sbb sub sub mov dec fidivr dec and hlt (bad) mov insl mov fidiv rcl mov dec sti dec inc cmpsl or ss sahf adc adc lods and fwait cmp dec sti clc pop in cmp out jb ficoml loop mov test fdivrp sbb (bad) shrb pushf xchg xchg or push mov lea fstps arpl lds xor std sub lcall xor push hlt lret repnz ret mov imul jl lods pushf test ds xchg ds mov xchg movsb jge cmp inc inc push out pop (bad) mov bound mov int3 in inc jecxz mov leave aaa add outsl jecxz in mov push cmpsl icebp mov out dec pusha scas xchg cmpsl mov bound xchg and jnp out aad or inc jg add lret dec inc cli mov sti decb lods in aam outsb mov into cmp test out xchg jg adc inc lock (bad) cmp jne scas inc bound sahf sub movsb repz push mov fptan scas data16 xchg imull jae and lods push mov pop fidivr lret xor mov cmp insb push andl outsl cmc cmpsb movsl dec push in push outsb push pop call int3 mov movsb and fadds mov and jns stc out stc fnsave xchg pop fs or insb (bad) mov cmpsl sahf repz lahf mov inc cmp stos mov push sub out jns jle or inc cmp dec cmpb shrl mov das sub sbb xor adc xchg fcoml imul jo aas and inc aam jg out jae lea insb sti add jmp xor xchg jb (bad) movsl adc repz fidivrl (bad) mov (bad) test rcrb scas or test dec and adcb loopne mov sbb ja (bad) in daa add xchg ficompl dec fadds inc mov aas out and push (bad) daa data16 aas clc sarb or loop mov dec inc or scas not fisub daa jecxz mov sar cmp test push outsl pop imul dec lret cmc clc or or inc jg movsb or adc xor jmp aaa out (bad) cmp imul cli shrl xor sub push int or jle jmp lahf in xchg out (bad) ja mov leave adc cmp mov push jg lahf ss jle push pop (bad) sub lahf pop push das popf std mov adc cld push mov jb fsubrl push subl outsb adc mov push addl clc pop adc mov (bad) (bad) push in rorb test and aas push mov (bad) jle cmpsl jl sbb addr16 jl push inc push xor jno pop xchg repz insl fs out mov (bad) and ds add or (bad) push adcb adc adc xchg (bad) xor pop cmpsb (bad) testb sti mov dec cltd (bad) mov lcall jge push push and in pop arpl push pop xchg sbb scas adc or xor pop out inc mov stos jmp ja sbb adc push (bad) fidiv cltd add xorb push (bad) mov push fnsave bound mov pop jl popf jbe xor js daa mov jp movsb in xchg mov fbld lds dec fiadd leave fwait jo mov or aaa jg sub cmpsb andl xchg sbb fdivs jl adcb pmaxsw mov addr16 pop call movl insl pop xchg movsl xlat leave pushf adc loope add aam cmp ficoml jb,pn jecxz movsl pusha xor push xor jb jno dec or xchg les scas cmc mov ss mov (bad) ror aad stos push aas pop inc cmp in repz ljmp xchg sub jbe insl movsl pop test mov (bad) jg pop push arpl push push orl test idivl mov cmc mov lret dec mov daa add sbb sti int3 sarl lea fildl out mov (bad) jbe mov nop (bad) das dec pop ret test add fiadd sub mov or mov aam dec jne clc mov ret jle mov insb dec xor in fsubrs leave rcl rcrl addr16 mov les pop xchg int3 inc pop incb arpl sbb push std push push rcl jge mov jae js sub stos (bad) cmp out rclb add add ret fucomp rorl cltd xchg mov or push or sub imul fnstcw and outsl cmp xchg mov dec ficomp push sbb das sub lretw outsl imul test popf (bad) (bad) mov ljmp mov cmpsl inc rclb mov movsb dec sarl cmp lcall dec cmpl sub inc out or mov shlb imul or div fnstcw push cli pusha test sti sbb mov and loop into jne pop cmp test lds popa mov in fdivl lret gs fsubrl jo insb jnp,pn sbb test sbb sbb mov sub outsl mov jne je xstore-rng cmpsl inc out arpl es pop jo or (bad) cmp cwtl ffreep jb mov xchg add adc pop fdivrs cmp or test es ja flds jg test cmpsb cmp dec xor cwtl rcrl mov inc adc cltd daa lds test mov pop lods fwait in loope mov and aam repnz leave mov outsl repnz mov and test dec push js aam subl aas out imul or ljmp pop jp xor ja in xor dec addr16 inc lods pop dec mov sbb pop inc mov ljmp (bad) cmp adc std repnz mov cmp pushf xchg insb repz rcll mov jae cmp mov sub push mov enter jge dec test outsl mov push xor test rorb push mov call int3 cmpsl cmp lods leave clc mov sbb and inc leave pop xor fdiv xor daa pop arpl jg in sbb push inc jae dec cltd enter dec fist dec mov in orl xchg mov call ja cmp jno or ss push mov (bad) mov (bad) sbb xchg enter mov mov adc jp push stos inc push sarb mov cmpsl fstpl mov or mov (bad) gs repz in or xor aam mov mov cmp mov xor xor movsl add inc pop in jae pop loopne mov mov jbe (bad) into pusha fs popl ja mov lahf repz aas or rcrl shr scas subl mov inc xor les add cmp pop cmp aas (bad) movsl sbb mov (bad) in pop dec dec (bad) dec xlat (bad) lock push jbe mov test sub jne ss das or adc inc ss sbb lods stos fs (bad) or adc xor fnstsw cltd out mov push lock dec pop ret ret cmpsl jns iret sbb sub dec mov and dec adc les out mov incb (bad) repnz sbb mov aaa test dec mov xor mov xchg pop enter mov lods fisub sarb jnp or popa shlb sbb pop movl mov jae or jns add outsb fsubrs adc ljmp fwait out out mov pop fstps loope sahf jp sbb stos fdiv bound mov insl ret push mov adc inc ja popa jmp pop sbb push inc lods lock add aas cmp sub aam and mov cmpsb pop push pop or pop push icebp xchg pop mov je mov arpl lock sbb (bad) xor into fwait jmp lds jle jg or sbbb adc lods ja fwait mov xlat addl sahf into stc iret pop into mov in dec iret dec popf mov xorl ret aam out insb or movsl and inc xchg call push add loop pop (bad) mov out hlt inc mov arpl push sahf adc adc dec notb out cwtl mov dec add cs ret mov lret and cltd loope cmc pop inc push rcll or (bad) daa (bad) pop imul or jne int3 iret scas mov add push divl (bad) hlt pop (bad) sbb push das rcll lret mov stos stos movsb xlat (bad) mov pop pop mov sub sbb cmp jl inc emms icebp mov xor push lds cltd and push mov scas sbb sbb jmp test and push shll jnp inc je adc cltd pop cmp xor jge cmp dec sbb xor test push jae jae push arpl lock sbb xlat or out xor pop push sub popa mov jl out cwtl push test mov pop sub xchg mov int lcall nop fsubr push mov xchg inc cmp loop pop sbb mov movsl mov call jae bnd mov mov data16 mov jb xchg pop nop test mov outsb cmc icebp std and xchg inc addr16 in xchg jp shlb (bad) sub and xchg adc push push or ljmp adc in or inc jb ds adc xor lods js int3 and lret lods loopne sbb push movsb pop jnp bound ja jmp popf jmp xchg out rclb jno cmp mov insb stc orl xchg mov aaa jl mov inc test icebp jno xor int3 mov sti push pop testl dec lds push mov cmc shl xchg adc pop insb add addl mov jg jo cmp in mov mov bound mov rolb pushf xchg into mov cmp bound movsl push mov push xor push or xchg test (bad) ds xchg and inc data16 je ss popa inc loop loop and ljmp adc xor dec enter mov xchg out dec mov addr16 scas and js repnz inc jecxz (bad) das out fistpl add insb mov mov mov stc sbb xchg and pop mov dec adc jns sbb in sbb (bad) mov mov jmp mov insl jge push push cs pop outsb dec jg mov mov loop scas push sbb inc xor mov test (bad) or adc lea aaa dec xor xchg hlt push mov stos xor mov cmp mov push pop lds xchg adc setp add push data16 xchg add fcomip jge cmp dec test imull ja cmp hlt xchg sub cmp ficoml sbb add mov outsb cld gs dec gs cli or test and loope mov inc mov xchg mov cmp das into mov xor test xchg mov dec pop out hlt (bad) cmp fs mov lahf mov add rclb lds negl leave fwait repnz mov lock dec xchg nop sub lock xor movsb mov jne loop mov xor into in jle adc inc enter lcall sub popa (bad) std dec lret mov call cmp cmpsb cli mov mov repz and and scas sub or aas pop test (bad) sub inc mov adc push mov (bad) jle mov lret fs sbb mov and jecxz add mov dec mov pop sub mov lea mov add inc inc rcrb xchg dec mov jle test sbb or rol imul inc sub push es xchg clc aaa or cmpsl mov stc dec mov iret xchg (bad) int3 ds and mov ds or sbb cmove (bad) dec and aad cld or mov and out loopne arpl ret pop aas push or cltd sbb inc jmp mov cmc cli popf (bad) ds jg or aad rcl jle add push mov repz push cli adc rcl fildll sub mov jno push popa popl mov mov jmp xchg shll pop mov cmp mov adc (bad) (bad) popa imul lea xor outsb mov mov push push pop fdivrl sbb mov inc inc std negl add das or cltd inc movsb jb mov adc push inc sub mov add xor mov mov push shr pop out (bad) mov mov ds subb loopne inc jle cmp pop pop scas adc or dec dec shrb sub xchg movsb in or (bad) mull faddl divb sub sbb movsl jp sub or cmp pop xchg mov pop push xchg bound xchg daa pop popf mov or adc and lret pop movsb or pop mov dec arpl mov jecxz push mov cmp in icebp push lods jmp fwait xchg inc adc das xor push cli pop xchg aam andl mov lahf jle fbstp shll scas loop push std cmp xchg repnz push push dec cld repz mov mov sbb add push pop sarl cmp data16 push test pushf inc (bad) je shr fisubl scas and push fisub repnz pop mov add stos sbb pop mov cmpsb mov call ja (bad) frstor jl fisttpl test je mov xor test mov addb push subl repz je xchg dec addr16 call (bad) pop mov loopne imul mov mov lea leave adc mov stos (bad) nop mov test sub das mov mov movsb idivl roll ja sub jno xor notl test in jne fistp fwait mov add or jno mov dec push pushl movb popa bound outsb cmc mov movsl fisttpll fsts lea jmp lret jg adc add and push sbb or lock ret cltd aas add sub lods je lods pop outsl mov pop inc pop jne out dec gs xor daa andl mov repz (bad) mov jg jb or dec adc stc scas xchg scas aaa mov (bad) dec sbb push (bad) test or sbb inc (bad) xlat mov ja add jp mov jbe xor ss mov dec leave mov pop out lds mov dec adc push nop jmp pop mov sub aam push ret push mov fildll sbb pop inc popa cld test sti sbb les or (bad) rorb mov xor mov std pop jb sub adc pushf shl cmp je jle lods mov nop xor inc dec push xor dec insb cltd mov aas pop mulb (bad) cwtl mov adc in call push mov sbb xor xlat push inc int sbb sti and xor movsl aaa fcmove lock mov lods mov sbb pop jno fcoms add mov mov cwtl mov lahf mov imul mov js or cwtl mov aam test xor xchg inc mov std icebp inc in and inc mov cmp (bad) scas push xchg dec inc daa pop jg (bad) jp cmc jo xchg pop das add inc xchg imul outsl fdivrs xor push rcrl out clc out lock nop mov mov sub inc pop pop xchg jbe shr or pop shlb test cmpsb push (bad) mov lahf ja scas out push cs mov into inc lret pop inc dec sbb dec cmp test xchg dec cmc fistpll inc daa lods pop cmp ret outsl stc sbb jmp fldcw jmp jl xchg jecxz scas pop (bad) enter addb mov or mov jns mov scas or mov sbb xor ret inc xchg in sbb ficompl adc jne cwtl lods cwtl rcrl xor sbb bound cmp and push movsb lock lock inc into sarb cmpsb cli adc pop in sub (bad) jae pushf cmp enter sahf aaa mov loopne in leave lock pop xor sbb addb mov into les loop mov sbb push imul icebp pop aad sub dec lods in in dec (bad) push (bad) lret je cltd cmp scas dec mov mov mov or scas (bad) aaa insb inc mov (bad) mov fimull in or in frstor scas jg (bad) mov push add in je xchg (bad) sub and mov les clc ret xchg mov push popa mov fstps mov scas sbb inc add adc test dec in mov loop mov and pop imul (bad) add inc add fnstsw ljmp jmp loop fisubr fldl gs jle out out std (bad) decl jb mov mov or cli push test sub pushf loop ficoml xchg mov imul pop sbb fwait cltd pusha cmp sbb (bad) adc sbb (bad) scas xchg icebp and lret and movsb inc (bad) lahf out or pop das addr16 cmp js jl hlt std jle xor mov mov frstor out inc jmp out cmpsl jp faddl sbb inc lea jp outsb inc cmp dec fimul mov es stc push sarb aas xchg sub into pop popf mov pop cmp cs idivb mov jo inc repnz pop std flds sub jnp rorl mov subl or in add xor lds jmp imul mov loope mov jbe ja ret mul or pop out out cs cmc mov js pop loope mov mov cmc (bad) fld pop stos pop jg mov cmp enter or inc loop leave xchg jae mov in dec sahf bound jecxz roll mov fdiv dec ret lea push xor and rcl bound in decl dec in inc mov push add mov push cmp int3 popf push test je cli loope outsb sti mov (bad) mov mov inc stc push fiadd div jbe int mov sti jle,pn fadd push dec mov dec fsts repz andl cwtl or mov mov mov push adc jae xor aas in cmp cwtl mov jge jl pop aad cld adc or ds and (bad) or fldenv sub popf mov jae mov pop clc push mov bnd push xor mov test pop cmp (bad) add pop loopne stos ja add mov int sub test jecxz inc add movsb shll xor lcall into rclb mov and cmc jp sti xchg ret pushf cwtl adc popa lods data16 jbe cli adc mov in cmc add movsl aam inc in lea in call in jge es bound nop or cld push in lcall lods (bad) ja add xor mov push dec adc out pop xlat inc dec jle (bad) xor mov lock ss ljmp outsl push nop stos out jb xchg shrl or cmpsl lahf repz mov dec insl movsb ljmp fidivr int out or test lods pop push xchg push iret pop or dec mov daa push push mov add mov fsubrs lea push mov js scas (bad) loope loop stos cmp mov or mov mov cmp repz loop cmp repz add jge scas push inc lods jbe aad mov jmp adcl and push mov loopne outsb int and scas rcl pop mov imul jmp (bad) dec lret test nop push adc in icebp aad je xchg sub and jne push lretw cmpsl pop mov lock dec (bad) movsb outsl xchg cmp sub ret movsb es add mov pop sbbb mov sub adc les idiv ret pop jnp push xchg (bad) sub mov in cld or shlb xchg lret dec jl pop arpl xor mov in mov stos sub push cli cmc sbb mov loope insl outsl fisttpl xor pop xchg xchg push and fadd leave (bad) cs jg mov sub (bad) aam pop mov mov in lock push xchg add shl mov hlt mov cmp cmpsb pop xchg push (bad) jmp xor sub sub in mov arpl int3 in push add fildl ss inc clc xor out rol out push xor mov pop and fldt add jno (bad) ds (bad) pop or push adc in push cmp jg in lea mov xchg lret xchg sbb aad inc rorl jae mov sub push and push push add adc xchg ficom jo cld out and sub add ficomp in lds jl mov cld stc inc sub lds std sub pop dec fdivl push mov repnz xor cmp fisub rorl imul xchg (bad) mov xor (bad) jmp (bad) jp popf sarl iret aad jmp lret cmp mov push and push js xor mov stc mov sahf sbbb mov cmp lods and push cmpsb push jl inc popa lret inc das (bad) enter mov aad sbb xor xor pop mov xchg add sbbl nop pop rol and mov dec in xchg sar dec inc pop loope ss movsl cs icebp fildl in in ljmp add push push and cwtl pop ljmp shrl pushf int3 adcl negl (bad) push (bad) insb loop mov flds out les push cwtl imul pop push and sub ds cmpsl inc lods add sahf xchg xor repz ja pusha mov iret dec jecxz popa cmpsb mov sub popf xchg loope xchg cmovb fnop jmp pusha jae out or or fidiv iret out loopne inc lea push inc movsb pop push mov push push adc test jmp fisubl fidivr inc ret sti inc fnstcw aaa sub mov sub pop aad unpcklps mov (bad) nop lahf or adc or test sbb xchg xchg cmp mov lret sub cmp mov adc xor mov enter push popf mov ljmp jns (bad) mov sub in mov pop xchg les add popa mov pop adc push dec push aas fst iret insl jmp inc std xor out inc inc and xchg push dec mov nop repnz xchg divb pop rorb in push xor add (bad) dec lea sub enter mov lock mov fldcw pusha jecxz pusha xor jo aaa dec stc pop mov pop sbb test sbb push lods out les hlt sbb sub push adc pushf and adc sbb fstpt mov sbb mov push sbb icebp lds fldenv rcrb or mov sbb daa iret xchg sub lock add adc dec popf mov mov jb lret fcom sahf out mov push and outsl adc xchg pop cmc test sub sbb push jp pop mov test xchg in and xchg or jne sub adc adc loopne mov ljmp inc cld adc dec xchg xlat rolb or dec xchg lcall cmpsl inc xor xchg push dec fiadd push loopne lds xchg add add repz clc out leave ljmp pop dec fldt inc rolb sub fcmovnu inc jne xchg aam (bad) (bad) std aas sbb and adc mov out add mov jmp sbb in inc sbb pop mov pop js and fmuls fnstsw loopne mov aam and shrl jne andl int3 dec add push jbe inc jecxz pop lretw mov (bad) pop clc pushf push out out xor in pop adc fsubl mov ret loopne push pop xor decb mov pop jge leave sub adc mov cltd sub xchg inc sahf (bad) in int sbb inc xchg das cmp (bad) nop (bad) mov out nop inc cmp aaa lcall mov andl cld inc mov cs popf leave out adc nop mov jmp push lock xor xchg sbb icebp cwtl xor pop cld sahf loop popf sbb push inc xlat xor xchg sti mov insl or mov icebp clc les std pop cmc jnp mov jb sub pop add and int data16 inc pop sub cmp lret into push imulb test ret mov sub lcall insb loope or xor adc push hlt into fstpl adc or mov cmp addr16 scas fcomps movb cmp or sub mov bound xchg sub sub dec es outsb je data16 aaa push mov push out xchg push insl cmp outsl lret out lea sbb ljmp adc rorl cmp movsl push xor fldl (bad) jmp fimull xor lods lcall pusha (bad) mov popf mulb fadd xchg inc jp lret js dec in fisttpll push divb sub mov xor cli sbb movsl (bad) jmp scas faddp mov push repnz ret ret imul jo inc mov (bad) pop sti sub and int popa outsb pop rep lahf lcall inc sbb mov clc lcall sbb std jne pusha sbb fisttpl cmp push mov (bad) rcll popf cld lods jo jae cmc xchg pop add insl and loopne mov xor or cmc push outsb xor pop popa mov (bad) hlt cltd cmp aaa xor and int sub xor pushf push mov adc add out xchg sbb cmpsb in pop jmp and jb out decl jae scas inc xor pop push fldt dec repz push pop pop in add addr16 push divl test imul insb sbb jg dec leave (bad) int3 imul jae lea xlat pop mov ret and xchg sbb (bad) std jmp lahf inc pop lcall mov jecxz int3 int3 lock rcl mov push cmp inc clc shr or adc lods push daa out xor sub cwtl addr16 inc sub (bad) test clc mov or rclb cs into and cmp ja aam test cmp mov int3 pop pop sbb sarl dec test sbb in sti jecxz insb (bad) dec iret imul and cmp cmp cmp lods test mov mov imul (bad) lock sbb ljmp paddusw and sbb movsb fst outsl push or ret and into movsl sbb mov test sar scas mov hlt iret xchg adc inc outsb jmp inc inc xor repnz xor aaa mov andb ljmp clc mov popa test jne push xchg or test add stos (bad) dec hlt sub and sarl jp enter fabs fistpll pushl cmp loop xor mov imul call pop in push dec add cmp add mov push mov pop and xchg add push in pmulhw mov cmpsb ss pop dec jmp xchg push or cmp pop cmpsl bound dec inc mov lahf jle mov stos fbld lahf mov dec js repnz mov dec iret std and add mov (bad) and ret repnz mov mov sub or popf out hlt lock xchg and les cmp mov popf ss push push xor stos xchg xlat je sbb mov push in fisttpl sub pop in shr stc adc out movsl dec push stos add shll add fimul outsl lods sbb mulb lods pusha or roll mov adc lock ret sub cmpsl fs in insl or xchg push aas pushf imul (bad) mov dec xchg es fs mov mov cmp push jmp xor (bad) lcall cmp push fadd lock push cltd or mov xor stos push push xor fildll pop pop repz mov insl add inc or shr mov iret inc mov inc xchg lcall nop movb add stc fisubr (bad) cli xor and sbb push or (bad) push jp (bad) (bad) and pop out adc or mov mov iret push pop inc sub andl addr16 lds ja or rolb lods aad pop insb cmp xchg mov mov add (bad) and jne (bad) mov mov addb movsb sbb jmp push and in out gs jmp xlat stos sub pop jb fdivl sub andb pop vphaddbd xchg fldl inc arpl jle xor out lahf jp and xchg lods push aad or clc call imul scas push lds dec aaa lock (bad) repnz dec test sbb push enter mov mov or inc sub popf jb es icebp mov sbb mov subb testb (bad) sbb aad imul xchg fcomi jo adc lahf mov data16 xchg mov lret je les aam mov sbbl stos sub test (bad) sub jmp ljmp jecxz jo arpl pusha addl inc inc jo insl in push in stos inc fwait mov jnp movsb dec ret fimull push test xchg and dec jnp into inc mov mov dec inc inc repz inc lods fisttpl xchg aad cwtl lods cli subl lahf insl xchg addr16 push inc mov pmaddwd and jle mov imul jecxz cmpsl and ror mov adc sbb insl pop ret xor adcl mov or js jle add aad in pop sbb pop inc cmp or nop ficom pop fsubrl cld push out fistpl jle lea (bad) fist test sbb cli es xchg xchg in jle dec (bad) fprem sysret sbb fmull adc shlb push loope stos sbb fisubr sub pop jo xor push push dec imul scas js cmp sbb stos sbb cmp (bad) fstpl loope cmc sub jno outsb sahf pop test fistl sbb insb into push mov push (bad) loope sub outsl test (bad) (bad) aaa adc insb ljmp bound jno adc sbb mov cmp cmpsl aad ds lcall (bad) fcoml rcll push mov rcrl xchg adc pop cmpsl popa jmp imul sub popf rolb cmp (bad) jno jg or mov inc jb test out arpl cmpsb rolb repz jmp cmpsb outsb jno adc mov cmp (bad) (bad) and cmp (bad) pusha nop lds add push lcall mov push test cmp xchg lods sub popf adc insl dec or popf mov jbe pusha xchg movsl roll test cltd mov xchg in shr call (bad) mov mov fstps sbb push add imul adc pop shlb ret je cmpsl jmp mov cwtl pop mov xor imul push je je or jg enter dec fsubs int3 mov xchg shrl xor paddw cmpsb adc mov fdivs adc xchg jg push (bad) dec and pop xchg (bad) jo mov adc inc adc adc xchg inc xchg sub jbe dec in add test push or push sahf pop add push mov adc scas insl movsl sahf sti add outsl add stos xor inc movsl popa popf push or push loope xchg out inc dec aaa xor add (bad) cmp sbb pop push sti cmpsl aam rcr jmp sbb xchg sbb sub icebp mov out and adc mov (bad) inc pop fiadd out sub (bad) call inc sub jle adc and das std fadds je cmc xchg lcall std sub add ds mov mov in push rclb out call mov adc push sub test outsl into sub xor lcall add xor test movsl (bad) repnz into sahf lds je dec test add sbb dec mov mov std sub test (bad) dec (bad) not and dec xchg rclb inc mov dec sbb push and shr mov xor push mov lret idivb rcrb (bad) xlat addb xor insb aas in mov loope add out sahf repnz (bad) lds mov mov add leave ret es push fisttpl sbb mov mov sahf les sbb (bad) fisttpll sub (bad) mov adcl notb cmc aam mov xorl mov cmp push sarb aas mov or js sub xor sub rcrl inc mov push sbb mov xchg stc mov push xchg mov loope ret fwait cltd or push imul loope push jo sbbl pop adc and imul (bad) sub push cmp push int rclb cmp pop bound ljmp fsts das int xor icebp sub push mov adc pop (bad) in push clc cs mov or cmp push add sbbl mov (bad) dec sub fs sub jl in outsb imul xlat (bad) xchg insl mov and push and jo ret int3 popf loopne in push nop mov sbb and loopne xchg clc jae jg xchg and mov push fldcw xchg xchg jns dec pop lods lret xchg addr16 (bad) lret sbb ret dec adc test cmp dec pusha stos add mov (bad) outsl (bad) pop enter xor enter pop (bad) push insl stos iret in ret or add cld adc cmp jae inc push adc adc pop in lret outsb sub pop xchg decl imul add push test movsb pop stos pushf iret add mov lret xchg xchg imul stc repnz insl push stos (bad) cltd add (bad) xchg pop dec dec jns xor ljmp xor pop imul aad cs sub add sbb xor xchg movsb lret adc pop addl add jmp imul xchg cmc (bad) je clc dec cmp icebp daa ret imul push or adc rcpps cltd (bad) icebp pop dec pop dec test dec and out js mov cmp cmp outsb pop xor jno jecxz ficompl push (bad) and or cwtl xor cmp push xchg roll jp xchg cli push cwtl lret shrb sbb out clc dec sahf mov cli repnz ja adc mov outsb aad dec lret into (bad) nop or jbe nop cld daa aaa mov cltd std roll lods sub jo cs or mov or data16 lret dec clc fisub push paddw pushf push ja fsubr mov adc adc dec out lds rclb insl xchg cli rcl stc adc adc inc cmp enter sahf iret in pop insb sbb pop pop and add add (bad) fisub sub jb dec dec fsts xlat mov and rcll aas xor sub sbb sub sbb or shrb mov mov or enter addr16 cmc scas lahf sub orl mov lret push out in lret mov dec mov stos and fstpt std or jmp cmp mov orl and out pop mov sbb mov pushf pop rorl mov (bad) fld lret push adc int jecxz or aas stc push nop loopne popa dec nop add mov cmp jno dec in pop stc sbb outsl mov (bad) jl fnstenv out adc mov nop pop das cwtl fxch sbb fild scas adc sbb aaa pop cmc pop cmpsb pop sub in jo xchg bound mov xlat pop inc stos fisubr add cmc cli mov and adcl lcall mov addr16 xor sub cs inc mov sbb ss test pushf jne arpl sbb ja push push aas mov cmp cmp and jae cmp fnstsw and test fisttpl clc push (bad) repnz out jmp xlat push or fwait subl pop outsb lahf adc jmp and dec xor xlat rolb jmp mov jne xchg add mov cmp sti mov lcall inc inc xchg mov fsubs insb mov pop iret pop bound imul mov mov add loope mov out or repz jne sahf pop xchg jb pusha jg (bad) pop (bad) adc mov aad std sub ret sub rcll fsubr pop mov fsubrl adc aam aam fstps scas pslld mov push mov adc inc lret pop or pop mov rcrl cld out add mov arpl divl popa ret insb or sub fcomps cmpsb cmp js inc mov fisttpl in hlt inc aad jne shrl std sbb adc sbb fiaddl pop xor add pusha arpl mov push mov mov adc jnp daa rcrl sbb fldt pop mov dec gs scas lods dec and outsb ret jp (bad) ds int3 test lahf push push pop jge ja cmp push movsb xor loop (bad) adc xor enter popa inc push (bad) mov popf mov leave aaa fiadd loop lock in test test aaa jbe or js xchg and repnz adc cmp and xchg aam iret loop aam (bad) push xchg xchg inc movsl pcmpgtw (bad) push sub ror sub xchg dec or addr16 ja mov adc (bad) fcoml or sub scas jl rcrl or mov jl xchg jbe inc mov imul mov negl icebp loop mov pop mov xor movsb pop push das push std (bad) je inc mov jmp add xor xchg stos fmulp dec (bad) xchg stc add xor push dec mov jle int3 test call push sbb rorb jae jns cmp or or mov lods and push in xor fldcw cmp inc in dec stc out popf insb (bad) mov cmc and mov test cs mov mov rcrl sbb adc mov xchg push mov aaa lahf (bad) out ret push ret data16 mov pop les stc sbb dec repz mov jnp ss jb push addl add mov mov out adc xor mov insl dec push sbb xor dec fwait jp xor aad dec sbb xchg push mov cmpsb xchg mov test test dec sbb lahf mov mov sub movsb in addr16 cld cs popf dec mov push scas xchg test xor ljmp fnstsw push sub hlt pop cmpsl xchg xchg pop sub mov jbe dec or gs data16 inc test push mov cmc aam test int3 mov and stc jb out xor pminsw leave sbb cli in js test andl pop jnp mov cltd mov fstps mov adc rcrl leave (bad) mov jne jl fistl (bad) int3 ds jae out pusha lea mov sub movsl sbb inc cs cmpsb jmp add in out lahf sub xor mov das add fs popa mov xchg mov push dec icebp mov loop stc nop leave adc cmp pop adc (bad) cmp push je cmp arpl inc fnstsw pop or mov jge sub inc mov xor das rcll jl xor fwait or xchg jmp add mov dec es cmc dec sub pop pop and and fistpll sbb in (bad) mov test pushf out shr fidivl xor fstpt pop test mov mov jb or xchg xchg lods xor call sbb enter rclb mov or xorb cmpl push sub faddl cmp sub stos jecxz scas pop pop (bad) out xor mov add test jmp dec cmp je mov mov inc in sub or dec xor and cmp adc push mov cli pop stc data16 cwtl andl mov movsl fs dec xchg xor add cli bound inc sbb fwait leave sbb cwtl es xor jne xor or sub ljmp je jno test mov fidiv shll lock lock inc shld sarb push add mov xchg cmp and sbb fbstp test xchg scas jmp negl mov mov cmpsl lods dec xchg jno adc jno rolb test int3 sbb lret ja enter xor pop inc push pop inc loopne sub or fistpl leave dec fidivr xorb mov cmp xor test mov push adc dec mov and addr16 mov sbb sub stos xchg dec sub sbb lods repz pop jmp sub add sbb or fdivrs lock fstl std scas pop cwtl stc addl dec enter idivl fisttp jp pop jb cmp or push and or mov or aam jge shlb push fs js pop ljmp sahf insb dec cs xor lcall testl jp xchg lcall and sbbl rcll jb loope outsl rcr mov and hlt and lahf clc mov js dec cltd or cmc or dec fs cmp jmp push lods dec mov cltd xor inc lods sub iret test mov je das push sbb lret subl aaa les pushf in mov ds shll cmpsb dec out push sbb xchg xchg adc bound cmpl jb sti (bad) cli fidivr xor insb dec loop jmp mov xchg pop xchg shr pop subl insl mov jnp jnp mov sbbl xchg mov lods pop insb loop cmpsb in add push mov ds dec fisttpl mov inc xor pop or insl imul add stos cmp gs aam js insl xchg lret aaa divl mov pop stos in cs shlb mov dec mov lods cs and ret xchg xor or divb lret repz pop adc scas push (bad) cmpsb xchg stos or and data16 pop cmp sar sbb jmp loope test cltd pop adc in cli repnz imul pushf sub cmp sbb push div mov fidivl iret scas loop dec inc stos mov leave pop stos jecxz inc jp stc or push insb xchg and mov outsb add xor out inc mov inc add xor jns inc outsl out mov pop in fwait cmp std adc fnstcw icebp fstp (bad) push cs push je adc adc push xchg aad push shlb lahf ljmp mov adc sub daa cmpl push jnp push xor ljmp push sbb xor pop xor adc insl or aaa sub xchg xchg fnsave push cld cmpsb mov add sub call sahf pusha repz pushf fmull pop testb mov loopne mov sbb (bad) fisubr mov leave mov lret pop mov xchg add add pop lcall callw mov inc out and jb cli jmp (bad) sub fist mov bound out push inc fdiv imul inc fldl xor cmp rcl mov jae scas sti into push xor push adc jmp addr16 fst push pop push outsb clc js inc push outsl test iret pop xchg sub jo lods pusha cltd lea in push mov adc aad xchg pop and (bad) sub jne jne imul cmp arpl fidivrl xchg pop ret iret (bad) int3 insl iret int cmpsb and clc adc lds xchg int3 popf lock fldz push pop cli cli out push (bad) and push xor cmp loopne mov loopne daa aad inc mov lahf lahf push movsl dec xchg mov outsb and mov jmp pop xor inc add jae adc (bad) or pushf leave mov jo xor repz push pop jl xchg cld popa in ret mov adc cwtl aaa les mov jns adc std sbb imul das repnz xchg out dec cmp fldl mov fcomps (bad) xchg mov xor iret leave jnp cmp jl push mov or inc clc push outsb adc imul cmp (bad) cli call adc push lret sbb fwait mov fucomip push pusha repz (bad) aaa lock dec jbe jno movsl push lahf leave cmp clc mov das sahf adc mov push ret sar adc movsl lret ljmp ret adc lahf popa adc stos or xor notl xchg lret out subl pop jge xor ljmp popa popa test ror cwtl dec aad frstor inc xlat and pop pop lods fstpl jmp sbb sub dec lods pop aas dec pushf or push xor sbb sub inc jp push dec ficomp lods sbb ja cmp xor data16 movsl test ljmp or pop and int stos fisubl xchg data16 mov decb cltd mov pop sub bound xorb push cmp repnz pop push in dec pop fs loopne data16 pop mov in xor (bad) mov imul repnz arpl push dec lcall popa mov push and bound sub fiaddl lret movsl ss sub rcr ret pop ret nop out stos scas faddp mov inc push xor cmpl xchg int3 (bad) push mov scas sbbb push mov lea shll jbe mov cmp pop jmp loop pop loopne adc icebp xchg pop sbb pop inc ljmp popa cld outsl rcll ret jle dec cmp mov sbb jnp inc inc mov addr16 movsb xor push jnp cmp sahf xchg adc cltd cmc mov sub call loop std mov inc dec xchg je mov inc dec sbb jg bound and adc jmp and fwait movq inc jle inc mov mov sub inc dec icebp push daa adc cld popf loope pop andl lret sahf mov mov push decl sahf or std (bad) fadds loope xlat andb (bad) nop mulb mov jne sub rcrl xor scas adcl movsl jo test inc pusha cltd int3 dec inc mov in pusha mov sbb out rcrl xor xchg jns in jl mov outsl cli dec mov sub sbbl dec xchg pop jb pop push int3 loope shr sub sbbl loopne repz mov std and lret shrl mov (bad) stos out adc jno xor add cmpsb pushw enter jno mov sbb popa xchg xor jb outsb sbb dec rorb mov sub movsb out test jno test in popa xlat mov add cmpsb jge xlat inc mov aaa inc bound push add mov sbb aas ret cmpsb mov adc jle sub xchg jge and popf pop mov ds jmp fimul jmp push clc in (bad) xor mov test js sti divb repnz mov sahf sub push mov std bt loopne test fisttpll scas add sti test aad add ja stc imul jb fs into cmp or sub xchg adc xor das push lds mov xchg (bad) xor mov dec sbb adc sbb jb push es mov add xchg fs vsubpd in test sbb lods dec xor xlat in jmp inc fsubr push rorb arpl adc sti sbb fisttpl push imul fwait (bad) or (bad) ds hlt pop pop movsb pop and imul int xchg inc inc adc loop stc mov inc into popa hlt cmpl cs pop mov ret fimull push aas rorb cmpsl pop push in pop into push ljmp (bad) mov pushf push test add sahf and and mov mulb mov mov pop xchg int iret inc mov addr16 jno mov ds inc fistp pop cmp aaa push jg js fadd sub xchg flds sbb in cli in imul ja jne jp,pn dec or daa cmp xchg lcall stos nop out xchg inc call xlat push jp pop adc jno lods cmpsb xor cmp leave lds jae xchg push or cmp jmp xchg (bad) dec add mov xor cld scas mov mov xchg push inc mov sbb into pushf mov and add movsb lret pop mov pmaxub lahf push test pushf lods jmp jne loopne shrb push mov push andl loope fsubrl mov inc mov jge sbb in test and mov cmpsl out adc ljmp sarb adc call rorl lods jmp jbe aaa xchg icebp push cwtl lahf test lahf xchg sbb push aaa cmp rclb and push ja xchg (bad) pop mov dec pop in lods insl test push inc push pushf js lahf lcall lahf or xor mov xchg jbe sub inc ror pop gs mov or inc repnz loop negb push mov call idivb or xchg push test mov xchg jne insb inc adc mov push mov jmp clc and sub mov enter ficom xchg fdivs mov jl aas in jne leave lret loope xor pop mov push push or (bad) xchg fcomps addr16 insb cmp mov inc push cmp jno fstps or scas mov nop sbb xlat (bad) aaa rorl inc repz mov scas fmull pop add call outsl or dec cmp ficoml or push je and xchg mov out ja fldl aas ret sarl add jg iret movsb imulb mov call ret or fs add pop mov imul push fs cmpsl add int ficom (bad) sbb dec cmp (bad) dec cld js out lods aam loop ds cmpsb push add dec je cs cmp (bad) loopne test stos push dec movsl pop sbb ljmp jae leave jl incl pop movsb shll sarl lock add test xchg test data16 mov jecxz jmp iret rcll outsl mov add xor and xchg cs scas in xchg cmp pusha inc pop in dec clc lea add jne int dec mov and jbe popf inc lret lret pop js cmpsl mov adc pop popf call cld in gs jae scas and sbb divl daa mov cld sub sub pop jmp pop arpl cmp dec sti pop push mov and xor mov sahf cli js insl adc insl mov push arpl or pop clc fidivl pop int mov jb push xor xor orl xchg aad iret out or fisttpll test ds mov lret aam int (bad) pop pop or mov mov es outsb mov push xchg cmp lahf lods ja xchg out stos mov push mov repnz adc cmp mov dec dec pop xchg adc mul in inc scas jb test in subl xorl mov jne js cmc clc out dec xor lods sbb popa sub idivl adc pop xchg insb jne pop jo imul dec xchg lret addr16 mov cmpsb sahf in cmp adc or imul push imul leave imul into push add sbb mov and dec jmp cli mov mov lret stc adc mov or hlt or fwait lods icebp inc jo pushf xor stos iret ret inc or icebp in sub sahf pushf mov adc fldt dec xchg jb pop dec mov push enter jecxz lods (bad) inc shll or call test (bad) adc xorl idivl push popa in and push xchg out cmpsl or xchg gs lock movsl xor pop out hlt adcl test iret mov mov adc repz lock enter or push push mov and sub rolb or jecxz (bad) sarl sti xor xor xchg xchg sbbl clc xchg push fdivp test insb xchg cmp jecxz sub xchg shrb push push jl xchg or jl pop jg (bad) je push cmp mov adc mov adc jecxz lds fnstenv push enter sub jge pop sbb iret and ficoml bound push adc sub aad pop push push andl inc js push fabs push test in mov sbb add pop inc adc scas sbb cmp add gs test bound sbb push sbbl fsubrl jmp iret or imul xor mov sub add cmp mov lret jle jbe insb popa xchg mov inc ljmp cmpsl sti mov fsub js imul mov outsb clc sbb xchg cmpsb push push repz inc sub lods movsl xchg jp or lcall jbe mov bt push push inc xor xchg popf stc push aas sbb lahf je or (bad) xchg push push cld jmp decb push xchg sub dec icebp dec cmp insl or das add mov pop jbe lret xchg pop je lahf test lods cmp push jb add xchg stos fwait sarl rcrl divb icebp pop ds xorl xchg mov fdivrs lock dec and xorl mov lods cmp scas addr16 fisubrl lret mov cmp (bad) jle push or cmpsl icebp jno inc mov or lock repz shlb inc xor rcl lcall rcl (bad) mov adc xchg lods mov sbb or cmpsl test stos into sbb cli jecxz push arpl xchg (bad) into xchg inc iret inc fisttpll aas pop push jno sbb pop mov test pop mov jmp cwtl call scas mov inc loop sub std jg mov mov repz jns jae cli in cs jecxz daa std xchg cmp clc mull push adc inc sub std xchg add mov push std dec fs imul sbb xchg inc call mov pop das repnz mov aaa cmp push and sub push mov mov dec mov pop sbb pop xlat adc enter sahf mov lea and mov mov cmp sbb and ret (bad) cwtl es cmp add xlat adc shrl les imul lahf fisubl xor cltd xor sub mov popaw cmp ret sub movsl test call movb xchg mov jo jnp add scas gs test jle xor mull out and shll pop rcr mov cmpsb hlt ret adc insl sbb movsl adc repnz ljmp cmp adc mov xlat pop dec mov dec sbb push sub (bad) push pop jns out out iret mov mov mov cmp mov in cld das add (bad) das push cltd rclb adc pop mov ja scas cli add std xor and bswap mov scas add ret inc mov ret sbb push xchg pop shlb inc cmpsb push dec jnp mov pop clc sub jmp loop out out popf jge jo fnsave js xchg dec in lds mov ja shr inc adc lcall daa fmull cmc inc arpl jge pop out in std sbb jmp sub adc outsl cmpsl popl lods cmpsl lahf inc ss or pop ja lahf popf pop jns xor add sub add (bad) int adc fldt sbb (bad) (bad) aas mov std (bad) mov (bad) jle xchg ja iret in adc scas call stos mov xor loope xor mov jne hlt shlb inc pop fwait xchg aaa aad lcall cmpsb lcall mov inc mov aam out sub jnp xlat pop clc mov cs les push lret dec hlt adc mov shrl xchg mov (bad) popf push mov dec pop dec call sti in jp jge ljmp mov and mov pop bound mov (bad) imul lods sub loopne inc les push dec cltd test mov mov cmpsb loopne js push enter inc outsb push cmpsl jno or cmp ja pop push aam lahf cmp dec test mov xchg pop xchg xor add bound mov mov push aas into divb mov lcall jb jnp fidivr mov nop sti cmpsb lret ret aaa out lds or sbb js fwait int lds popa or push arpl cmp insl out mov int3 (bad) cmc xchg adc mov pop repz jbe sub or lcall fwait xchg xchg and rcrl mov xor mov aaa mov in je xor dec das mov fdivl mov imul enter insl cmpsb jmp bound mov push insb loopne xchg inc icebp jne cli dec into notb inc and repz and mov jbe stc sbb adc adc stc and mov push imul imul push push pop fwait push mov insl (bad) mov dec mov lods and rorb cld es cwtl aaa jle mov int insl xor jb and mov sub push pop cmc stos jo aad scas jp mov (bad) fdivl js mov pushf outsb or popa adc dec and and cmpsb xor shll xchg daa jo sub xorb insl or sub sub dec mov adc in bswap aam xchg push jae hlt stos outsb cmp dec cmp pop lret je sub lcall xor ljmp ds mov cmp mov sbb mov cli dec or cli jl push sbb fs fdivrl inc flds push jns ss cmp fimul push sti dec cmp xor jb inc sahf jmp mov pop add and mov lods das cmp mov add aad xchg sbb inc cmpsl xor movsl cmp jmp mov jne stos sub dec shll pop fnstsw call (bad) and fwait adc out inc pop push outsb or cmpsl iret xchg leave into inc dec jne sub cmpsb xchg jmp lds pop out mov dec (bad) sbb cmp pop add push add xchg jmp call arpl lahf or pop faddl cmc inc lret insl cmpsl mov repnz mov aad lods fidivr cmpsb sub adc pop ficomp faddl int push popf les pop jno loopw mov rol inc notb or xchg add sbb xchg inc ficomp (bad) mov adc mov scas enter or pop mov jle or mov mov pop push pop stc jo fcoml mov shrl icebp outsb fucomp and mov test clc push je outsl dec aas adc sbb leave insl adc pop mov daa cli sbb or cltd push mov xchg and adc push sbb sbb outsl lods dec mov sbb call lds inc jmp pop mov add push stos (bad) mov iret aad je sar mov jns loope fild hlt call jo mov repnz (bad) mov idivl mov xor xchg sbb push xlat inc inc add inc addb sbb sub in dec std arpl das push addl mulb push inc push (bad) icebp test xor jle fiaddl jecxz push fwait dec cmp mov sbb mov xchg adc arpl or mov pop shrb or mov or fisttpll lret cmp dec jge ficom sbb rclb sub movsb xor mov movq repnz dec push imull dec repnz push sub mov roll ja iret les dec and xchg imul mov fimul pop add push call cmpsl add addl push leave (bad) aad xchg cltd pop shrb mov aam jge (bad) pop dec push (bad) repz arpl sub xchg outsb pop (bad) dec cmpl loop mov sarl xlat push dec and arpl incl insb sbb pop cld cwtl add dec (bad) fwait xor dec jge mov cli ja jne sbb fdivs gs sbb push incb sahf dec or repnz arpl aaa insb jbe rorb aaa fwait jg addr16 dec popl nop and mov mov cs and sub fdivl cmpsl pop cmpsb and mov push push sub add lahf mov fcmovnb sbb ficom cmc movsb jmp popa sub xchg mov pop push je jmp sahf hlt cli inc xchg lret ficom std inc xchg hlt jmp leave inc mov add and mov inc and or xchg xor (bad) iret mov mov daa dec pop push fdivs lret sub mov add lds test aaa xor pop dec mov insb lea outsl adc mov fcoms (bad) scas mov aas loopne movsb fstps arpl jg pop mov es mov ljmp push cmp cmp cmp or mov and jns scas (bad) sarb les repnz cmc shll loop scas pop pop add sbb and mov jg insb dec outsl xor mov jp sub and call imul mov and dec pushf mov mov sub and jno push loope cmp sbb push bound sub adc imul ret jle xor bnd pop add lcall sbb jg and (bad) or jb push ret fdivrl inc sub cwtl hlt lret adc pop sbb xchg pop xchg or mov pop (bad) ret (bad) and mov fild mov shrb int3 leave xor into jecxz inc mov or imull mov jae mov aam jmp out xchg and sbb sub shr mov xor ror in xlat ret push cli imul lret mov mov mov jle push sbb inc inc dec sbb lret lret sub dec mov call adc adc shrl fstl out and push inc add cmp adc in pop and iret lock mov adc pusha mov inc jp adc inc scas adc ja add jmp push xchg mov mov test sbb repnz nop int3 scas fcmovnb mov push pop jne xchg sub mov pop xor (bad) add les mov movsb jb lock popf jge sbb cmp (bad) iret jecxz ss lods sub cmp push jnp xor adc mov fs cmp stos xor push stos push mov rol and arpl xchg add (bad) scas mov mov dec push data16 imul jo sub loope push add dec sub adc xchg sub lods daa sub and jns stos jnp daa aas and insb lcall push dec push fucomi cmpsl fsubrs jge in rcl xchg fistp jnp add cmp inc sub in xchg xor out repz test sub (bad) xchg sti adc push into jnp inc and outsb hlt out roll dec adc out roll xor cmp inc pushf xchg clc daa fiadd sbb adc mov mov jp sub jo sar das xor stc in es jbe adc lahf outsl (bad) rcrl jbe popa inc aas shrl andb fcoml popf insb popf jnp add mov (bad) sar sbb adc icebp test imul cmp push bound pop sbb xor imul nop push fmul cmp icebp cmp out bnd push (bad) or pop bnd push xchg aaa and xchg sbb mov shlb jne jo,pn hlt sub lock ret push push out add xchg push pop test xchg pop outsl push cld mov mov unpckhps popf pop sub std jl in mov lahf sub (bad) mov add adc stos jmp push arpl inc popa push lahf xor stc dec jbe fs dec mov xor add mov scas lock and cwtl push adc sahf repz fdivs add fnstenv push dec aam rcrl out sub xchg (bad) fldcw xor push icebp mov (bad) int3 test fwait insb (bad) lods and sub push xlat call push fldl or popf test mov dec sbb les or pop outsb and and mov in cmp addr16 outsb xchg or xchg sbb adc sbb dec les mov sbb jae xchg inc (bad) sub cltd adc push xchg xor dec ja xchg xchg inc sbb push cmpsl hlt fistp mov or in adc sub int jno mov and and pop push dec sahf xchg sbb mov fcmovnb ficompl mov in jg mov ror out push subl mov cmp jnp dec mov xor arpl dec leave in jae mov inc mov adc xor sub nop xchg jae cmc ljmp jmp lds adc test shll (bad) mov imul sbb mov lock push mov push nop jae mov push outsb into push popf jmp repnz insl mov divb (bad) loop mov mov pop pop add daa inc repnz idivb test fwait test xlat sti cmpsb lods mov mov pushf lahf jmp enter sub or and jo push out das push push cli or jmp (bad) mov mov mov not pushf mov bswap movsbw lea push movl pusha lea call jmp movl jmp mov lea call cmp push push jmp mov clc sub pushf mov pusha mov lea jbe stos pushf lea jmp mov mull or cmc outsb mov push lock ljmp or fsubs mov aad loop movsl dec rorl or sbb mov mov mov decb or mov xor or imul mov lcall fbld stos mov scas inc dec pop lahf imul lahf bound in mov inc stc repz faddl add add mov test fmul push and jle,pt or cmc test mov btr shl neg mov pushf neg not jmp bt sub jmp fs cmpsl jb or data16 xlat inc scas aas fstpt (bad) das add lret jecxz fst out test inc dec inc and adc xchg add into cs mov push adc dec add psllq cwtl add xchg jae negb ljmp mov jg sti (bad) xlat in mov dec jno mov xor (bad) stos push pop sub xor xor lods sti ss mov or nop push mov (bad) adc inc inc in outsl fisubl xchg pop mov lds mov (bad) mov repnz loope stos je lods xchg or repnz fdivrs sbb (bad) stos mov jne pop mov mov aaa inc ss insl pop mov mov xor nop dec cmp mov dec sub pop jmp sbb cmp xchg adc lods mov stos dec inc pop daa out fs cmpsl mov dec mov add ss (bad) dec mov outsb jnp xor add add mov (bad) unpcklps and arpl leave or lock movl mov mov mov dec jge call pop out sarb sub lods pop (bad) jno,pt lret mov nop lods daa push test leave jecxz test loopne mov stc pop call enter xchg or gs lock cmpsb hlt push movsl push sub pop jo or mov ret ds outsl adc xor push in cmp sub aaa xor stos ja jae lcall jnp out pop pop pop je lcall xlat push (bad) aad loop ljmp inc rclb inc out push mov (bad) leave add push popf in push in in (bad) sub in lahf js mov jle adc jle sbb mov imul push inc fcoml fnstcw or mov test xor fnstsw jns aad xchg (bad) and inc mov jle pop dec sahf xchg mov lahf ja repz add jo pmaxub dec sbb ret pop loopne mov test cli in cmp out hlt cmp lahf or mov (bad) fnop pop popf xor inc mov mov xchg jge rcl sub add (bad) je mov pop insb movsb mov and clc mull (bad) in push insb xor mov int push sub dec scas hlt enter sbb lcall push mov cmp jns rcrl fmul repnz sub adc popf sub fisubrl jb mov pushf push adc dec cli (bad) cmp push pushf sub cwtl loope jno stc add xor mov xchg mov pop and lahf sub stos outsb test adc jmp nop lods sbb lds xchg insb cmp insb je push hlt fiadd hlt push jmp stc or push cwtl push add ficom mov movsb insl mov popf test xor out out jnp push xor mov popf adc lret xor mov add (bad) jo subl test jmp cmp jbe insl push sbb mov dec ret ljmp rorl cmpsl imul mov push mov or arpl imul mull aaa and scas fcoms push pop lods inc popf mov xchg sbb xor dec mov rcll (bad) testl incl mov inc push push not mov pushl stos pushf lea jmp rcrl roll popf or pop loop hlt hlt add test aad imul or scas mov mov mov pop imul and cmp stc fild pop orb inc movsb pop stos mov stc jmp (bad) xor jns jne (bad) dec mov repnz mov in dec jmp dec push les mov xchg mov or sahf adc es cmpps and stos ds mov pop (bad) iret mov aas (bad) lcall jmp dec cltd pop cmc adc adc inc xchg pop in loop enter fadds sahf jp mov stos sub push xchg test imul push sub (bad) inc mov xchg ret dec push lods (bad) aas xor loop ljmp mov xchg jae add lcall adc jp outsb aaa jmp popf cmp mov stc mov cmp adc in inc add pop lret push push jnp push cs stos sbb mov sbb mov clc sub call pushf lea call jmp sbb sahf or mov or or cwtl cs clc (bad) mov sub adc mov call popf test sti xchg jae jmp imul lret xor fidivrl add xchg lods cs jle test push or repnz xchg xchg mov jo mov (bad) iret loope mov movsb mov (bad) int dec mov shr jno pop and dec mov pop scas ljmp jo push cltd dec js popfw mov pusha mov cmp jmp test in cmc mov inc mov out bnd in insb lahf or cli popa mov sbb shll jecxz xchg lret pop pop jne and inc shll mov mov loope pusha or iret mov xor mov outsl lret sub push (bad) sbb fisttp mov pop rorl push aas (bad) or xor xchg xor xor hlt mov mov cmp into lret aad jno pop out aas push sahf addr16 out dec mov shr inc aam jge adc ljmp test or aam lahf addr16 xchg push pop push add sub fsubs sub ret popf xchg xchg mov cli decl xor pushf pushf lea jmp mov shr setno add mov test test stc test and test add pushf pusha call enter cwtl or in xchg dec xlat pop dec mov in and inc stos pop mov dec mov or test dec fs popf out sub jb sbb or lock test lods mov in pushf popa pop lock popf lcall loop (bad) lret scas xchg jo jle scas fildll fiaddl rcrl fwait xchg inc outsb in orl sub pop xor sbb cmpsb xor xor mov jnp fdivs fcomp (bad) dec shr inc leave xchg mov dec movsb aas xchg mov push cmp testl mov (bad) je mov mov rclb je or cmp aas dec inc jne dec in stos push cmp jns and inc fs outsl mov imul cmp js sbb and xor xchg inc loopne inc and in fistpll stos jne inc mov sahf in xchg out pop xchg mov jne jne dec xchg divl cs adc imul add clc and leave fld cld lret and inc push cli xorl dec pop testl dec imul shll (bad) shll push nop mov pop xor cltd shrl lods leave data16 mov xchg popa push dec rcrl jnp xor dec repnz aam pushf push sbb inc cmp es out inc in sbb jno push (bad) sbb shl iret add ret inc add addr16 or bound loopne jg adc not mov in pushf aaa push movsl mov and push ds pop nop andl inc push out or or and sub dec fwait pop xchg xor adc sub dec cmpsl mov xchg cld in push (bad) aad icebp bound inc cwtl cmp nop fs mov adc xchg jno jnp ret cmpsb mov lods xor frstor xlat pop or and mov or add adcb cmpsl mov jle and frstor jg jbe (bad) mov stc lcall sub (bad) mov inc clc or fcompl push rorb adc pop pop jp xlat adc fstpl popa and dec lock jp leave test mov subl push inc xor sti or or movsl in (bad) push cli inc push cmp add xchg cmp fiaddl (bad) cld popa sti dec test and sbb repnz mov push adcl add xlat fs cmc shl push sbb fsubl pop dec in pop pop mov arpl pop or pop inc popf cwtl mov xor fs aam xchg push adc mov inc stc cwtl xor cmp jnp in mov testl scas (bad) push cmc insl adc dec clc pop sub mov pop xchg mov movsb (bad) fsubr xchg and fwait pavgw mov jae pop jae xchg lea or mov std pop repz lods and lret mov stos (bad) inc cmp inc in cltd (bad) adc jne and in gs cmpl jo add jnp bound push jae popf test fcompl aas add into adc clc xor jbe add rolb push sub xor bound stos xchg test sahf push imul inc test push fwait (bad) push stc mov std mov jnp stc and dec (bad) mov imul fdivs jnp cmp jmp aam mov test pop stos js or mov inc fsubs or mov sarb jns dec and or inc call xchg and xchg popf mov call hlt hlt into jbe movsb pop mov xchg fwait nop push cwtl insb jo xchg mov out sub dec inc fwait loope cld ret scas jns (bad) xor addl insl cmp lcall data16 scas (bad) jp jge decb sbb xchg add (bad) and add and psubsb add mov inc hlt and (bad) pop dec and rcr adc js sbb mov xchg mov push cmpl into arpl jae addr16 jbe mov jb sbb stc xor inc (bad) cmpsl jp add and pop enter addr16 fcompl pop es sub xor or jb pop push add rolb repz and test mov xchg out cmpsb and test fsts jno mov pop jb add and inc in jnp cmc and std (bad) jae out mov gs lret dec push aad add xor push push jne mov push jp jmp pop loop or xlat mov xchg fs movsl out inc adc pop cmp xchg jmp daa lahf and popf cmc push pop ret rcrb jno popa test (bad) push aas test cltd (bad) jp hlt mov xchg test xchg das fmull icebp fldcw loopne add jge jb enter pop mov lret xlat xchg fdivs push imul dec addr16 inc or inc mov movsl xor xchg push aad xor sbb call outsl push test xor add xchg sbb xchg cmp cmc push mov mov sarb inc or mov and sub dec (bad) ds cmp xchg pop add inc inc xor jne call neg mov rcrl les les das sub or xchg sbb dec int cmp pop lock mov push lods xlat add mov push movsl les mov jp adc pusha lds add push push sahf mov mov mov pop jecxz push pop push (bad) xchg mov pop fdivrp jle xchg xor pop jle fucom jp push inc clc aad adc pop sahf cmp push stos out cmp xchg cmc aaa dec cli in pop js and pop lea inc stos jmp mov mov or inc adc adc push js mov icebp icebp pop sbbl mov gs inc into test inc jne jg xor in movsl nop fistpll fwait loope inc test jo cli add and mov outsl divb pop iret test fmul mov pusha dec lahf iret xchg ret (bad) mov in outsb lret inc mov scas loop fsin ret insb jge jl shrl sbb out out rorb lret dec adc stos std add (bad) gs add push loopne cmp in es leave leave pop test xchg mov and xor lods and cld sbb and push imul call (bad) dec xchg sub sub sahf sbb lret pusha jae xor lret mov mov flds sub fdivrl dec add mov fdivs and xor cs (bad) xchg inc lds (bad) lret stos call lret cmp movsb mov mov lods and push or pop aas jnp add push mov ja (bad) (bad) adc dec fbstp xchg mov movsb (bad) and test movsb in jg add xchg cmp push rorl in dec push or int3 adc jg ror mov and negl sbb and fcom mov mov inc jmp inc js mov loopne loopne pop xorb repz mov and lods pop jl xlat test mov mov cmp mov add dec jo loopne mov bound add cli outsb and out sbb test adc (bad) gs push lret ret pop inc jl xchg jmp mov sbb std jbe shr push fldt add insl push adc js fisttp or repnz sahf mov imul ror push jno mov nop or pop and aam test rcrl nop and cmp mov pop icebp pop or ss pop sti jb loope jecxz iret inc and push sub negb out ja xchg xchg nop (bad) mov pop in in inc push mul imul ret adc sub cli adc pop in sub pop in push sbb add (bad) stos or js cwtl mov in sub inc cmc loopne out xor loop xchg popa mov aam pushf push xchg mov insb jmp (bad) and sbb dec add pop cmp xor leave cld inc scas pop lcall lea xchg aad jp (bad) sbb fiaddl inc pushf nop or sub popf nop jno rcll mov out jle add (bad) repnz (bad) (bad) scas xorl cltd add cmp lds adc cld xor loope sbb in xchg cs fwait jp incl out scas shll inc xchg fwait in jg sub arpl mov sbb jae or dec (bad) mov xchg dec xor inc bound out mov lret (bad) or xorb mov mov xor in jb push in or (bad) pop jne xor (bad) sar push sub mov mov scas sbb jle xor sub sub add push loop or enter cld sbb les push repnz movsb or insl (bad) out or movsb test cli sbb push loope outsl jne ds push jns (bad) sbb adc scas add cltd iret sbb fscale xlat adc aas rolb jg cltd repnz data16 push fnstenv aam clc aas sbbl in mov nop into mov rol inc push incl push push das or sarl imul add xor (bad) sub mov or pop jl dec mov adc call pusha mov add sub xlat ficom stos in adc pop xor xor xor jl mov lahf insl divl out xchg test cs mov daa adc gs iret lea pop in sub push adc adc (bad) je pop pop mulb cmpsb loop scas outsl mov dec inc adc pop dec int3 mov (bad) cmp pushf mov (bad) and into inc pop test clc dec stos lds push mov stc push (bad) int3 push scas shll call leave nop adc sub push fisubl scas mov sbb ja bnd jb xchg fistl xchg cli mov test std adc mov stc mov sub and sub xor stc mov aam fildl test mov clc mov inc cmp push cmp js mov outsb xchg adc push cmp xor add lods cmp aam mov mov pop cmp mov lds scas stc int add cli aam js push jl fimul dec call cld repnz insb fwait (bad) bswap sub jo add popf imul (bad) or rolb lods imul scas adc imul mov rorb dec mov insb insb jmp xor loop in dec pop xor test ljmp add je mov inc ljmp scas inc pop test cs dec lock inc mov fidiv mov psrld movsl xchg push aad inc out insb mov mov mov ja dec (bad) add jmp xchg or mov jecxz jle (bad) out cmpsb jl cmp nop sbb push js int push pop out shrb ljmp jae jbe push adc xchg out movsl sbb fistp inc (bad) jmp mov jnp jecxz xor pop jae inc sbb add jae test and mov inc test mov pusha bound and cmc pop (bad) in ret mov int sarb or scas lea push mov mov repz adc jo cltd pop push aaa pop (bad) es rorl pop sbb adc add fidiv xor mov dec insb pop scas je jg and mov mov and mov jecxz orb negl movsl dec push push cmpsl sbb inc and mov (bad) addr16 test call push out ljmp scas cmp jp cmc adc call data16 daa fiaddl inc or (bad) pop pusha push loop nop stc dec je mov xlat and movsl dec inc cmp bound jmp or jmp pop repz dec mov loop je jo outsb dec pusha aas enter arpl or mov loope add mov std cltd dec dec test add mov xor repnz fmuls mov fcompl pop leave push mov std mov ficompl xchg fimul push xchg (bad) je lcall cmp mov adc xchg adc add cld imul aam jo roll loopne js cmp lret xor mov (bad) int3 sub ret cmp in ret loopne or push (bad) mov je jne bound insl mov shlb fistpl fistpl ss orl pushf xchg test rorl cltd add pand jno xor jecxz jl test out daa jbe sub jno fisttpl hlt sub scas cmpsl sbb push inc jo insl cmp lods sbb es or out aad mov in data16 out fwait jo ja cltd cltd imul movsb dec (bad) jns jo fcmove jne push out ja insl int3 (bad) and (bad) jl out lds pshufw jae (bad) out xlat pusha mov fdivp fsubrl lret mov jl cmpsb mov into and incl cmp ss mov jle and sbb loopne gs or dec or rol sbb adc outsl mov pop in lahf push cmp sub xchg data16 lods (bad) rclb das xlat imul xchg jno add incl rcr push or cmp push sbb push jae aaa and insl adc into das nop adc add mov xchg (bad) push sub pop push ret sub iret mov xor adc mov dec sub jmp xchg (bad) test inc push aas or cmpsb push (bad) cltd insb jecxz movsb jle sub mov fwait outsl nop push pop jge dec pop ret add sbb loop scas dec xchg xchg enter (bad) clc test stos aaa dec lret xlat push jmp rcll add aam nop das pop sub lods adc movl movsl ficoml mov push jne mov cmc or adcl hlt or mov std sti pop out nop push push mov gs sti inc or sub mov (bad) call mov mov inc sarl xor jecxz les pop xor sub adc shrl ficompl jle xchg xchg out jp les jno sbb push dec stos mov pop subl (bad) popf cmpsl mov enter xor mov dec mov xor cmp loopne mov mov popf aas fiaddl insl and inc dec fisubr insl loope cmp pop push lock cwtl ret icebp jo stos mov daa (bad) xchg mov test (bad) push outsb dec test add fsubrp adc and lea mov add ret pop rol adc inc cmc mov in xchg sbb std sbb es mov inc imul mov sarb mov mov mov movsb mov xchg in mov push psubd loope insl ss cwtl and mov mov out or jno jnp mov xchg repz (bad) fiadd fmul fdiv fnstenv movsb mov push les imul cmpsb cmp adc jno js xlat rcll dec mov mov outsl mov add xchg cmp xor popf rcrb sar jo outsl cmpsb test mov aaa or je nop cmpsb add icebp pop movsb stos cltd daa mov pusha fs stos fstl push xor mov fwait bound xchg flds xchg fild dec jmp lds jg dec lret sbb mov mov jmp stc arpl inc sbb pmaxub aad mov cwtl cmp cmp jp (bad) jbe fist aas xchg mov mov js mov push and addl pop dec fsubrl jns test and arpl aas adc rorl outsl xor mov ret sub add test cmpsb inc xor mov addr16 (bad) fcmovu pop xchg popf mov loop push inc fildl pop aam add aad adc outsb jecxz sarl fbld imull test bound or xchg idiv andl xor dec adc sbb pop sub (bad) popf dec imul aaa sub cltd push xlat xchg in cmp xchg pushf mov loop ficoml adc jecxz scas in lods adc or sub in jg int dec out lret es jle cmp mov jnp lcall adc sub and bound dec cltd (bad) push cmp add sub fnstenv inc cltd icebp mov dec loopne es stc jo nop aas aad cmpsb push mov orl or push pop cs les push cltd mov (bad) cltd leave into and pushf mov cmpsb cmpb push adc push rcr mov ficoml jmp clc clc fisubl pop aad cltd push mov mov test xchg mov jle sar clc jb outsl jp mov inc or (bad) punpckhdq popf push sub fcmovnbe cld pushf pop dec or (bad) icebp fs lret idiv outsl inc stc std (bad) and mov shll xchg scas int or add and mov lock addr16 loopne inc mov xchg cmp sbb cmp adc mov sub push pop sahf mov push jl sub mov sub sbb pop sbb jmp adcb nop mov mov dec jae fcomps je pop xlat xor es das lods (bad) icebp fimull call xchg fsubrp dec mov mov cwtl xlat push adc stc jo push cmp outsb jle add inc mov sub sub call sub push out mov pop and xor jmp out out sub notl and rorl add xchg or add std xchg mov andb push mov pushf add push hlt mov (bad) gs aam rcrb push add lcall (bad) sub fcoml or fidiv push jp adc sbb mov pop out fnsave out movsl xacquire lahf pusha (bad) mov sbb add mov adc mov sub cmp push inc sbb mov sbb cmp in adc daa fisttp mov push (bad) shlb movsb loop into cld add xchg push adc and out xchg ds es inc ret fs leave movsb (bad) aam sub leave in xlat xlat xchg xor mov std inc jp dec insl lret shrl rcl setl in push jo xchg xor mov mov int aaa rolb subl lods add into xor mov mov adc pop and dec mov lahf and ja jecxz das jge stc (bad) fcomps xor test adc into je xor xchg rcr (bad) pop jae xor push inc addl movsl repz sbb or push sub (bad) leave fsts lret mov mov xchg and mov mov lahf lret mov test mov sub in and lods sti std jge mov mov outsb enter loope cs int3 mov jo aad jmp cmp (bad) push push cmc in xchg mov inc lock push cwtl sbb movsb pop sub mov mov mov push dec push sbb lods cs push push add nop pushf adc push cmp movsb adc loop pop inc loopne push int out pop into mov xchg fs dec je mov lret cmc xchg aaa pop jbe shrl pop mov mov mov fldl js pop shl adc (bad) stos test cmc mov fimull and adc lcall push aaa mov movsb (bad) je dec mov (bad) in popa dec popa inc mov shl (bad) and lds add pop cmpsl iret jp cld cmp push stos iret push mov outsl jp pop mov jecxz scas into fsts stos dec sub cli push xlat push sub imul xor mov mov (bad) je inc popf les lods movsl add jg mov mov js sbb pop js lods test and sub and mov movl sarl xor cwtl push cmpsb cmp in leave mov xor cmp xlat test mov in lcall data16 xchg jb fwait cmp movsb notb xchg (bad) int3 push jle outsb pop and lcall jb (bad) xor push or dec add mov test cwtl ss rclb lock daa mov test dec ror jl and (bad) sub adc sub icebp popf pop outsl push scas sti push shll push fcoms cmp pushf sub mov or in cmc sti xchg imul (bad) (bad) xor add fwait push dec push dec lret jge sahf adc cmp jbe andnps movsl cli in fbstp jbe dec pop mov mov sbb in adc rcrb rclb pushf pop rorb fistp (bad) nop adc stos call aam in loopne repnz mov cs push cmp lock int lcall sub sub sbb cltd je dec dec mov xor ret push es shr adc into shl into cmp xor cmp xchg bnd call cmpsl nop dec addl out jp cltd adc scas loop sub mov adc and repnz and xchg cmp enter aam mov push jecxz notl adc ffreep xor sub jnp aas nop dec adc mov add xchg dec xor dec out inc fistpl sbb sub jecxz adc and mov mov shl sahf cmp and shrb pop mov arpl mov subb xlat jo fnstcw lods je inc stc lcall cmp and test push dec push aas in sbb jecxz or pop in js and mov int inc xor jnp lock pop dec sbb int dec and cmp (bad) jle or sbb mov jno ss pop gs pushf push gs push and mov lahf pop xor push insl test dec lret sbb movsb xor ss mov and mov je cltd popa (bad) ret push and lds into and stc mov xchg js sub int (bad) icebp mov xchg push push bswap xor xchg fstpl pop dec mov jle sbb sbb loopne (bad) in sbb push test incb ljmp daa std pop cmc inc rcr cmpb arpl fimull sbb loope inc mov inc adc xchg and push xchg adc xlat and rorb notl aam pop repz mov aad out rorb sub dec in or jne or das dec loope (bad) xchg dec mov inc dec movsb call (bad) mov stos int mov mov cmc fucom ds hlt and into push insb pop call lds movsl aad push ja (bad) lret push (bad) hlt bound adc sub xchg mov lods xchg sub daa mov pop int3 sahf into (bad) fsts or pop movsl hlt add fmul sub cmp pop and bound shll int pop sbb int push mov aam call and xchg dec mov pop lret inc je addr16 fwait mov int outsb imul inc lds and cwtl repnz hlt dec (bad) or jo and fs push push xchg pop pop mov mov insl fimul push sub push iret xchg add sub mov fistpl fdiv fcomps out popf scas out (bad) movsl lret and push dec pop idivl mov mov movsl das stos xor add stos (bad) in mov ja jae ja je repz sbb mov xchg mov inc add pop scas adc and push (bad) inc cmpsl sub movsl (bad) (bad) das push cltd (bad) lds xor dec rcrb lea (bad) aas dec sub mov push lea push and jmp sub push sub mov or xchg xchg cmp mov mov aas ret test int mov dec stc sub nop fcom add (bad) fs aaa ds arpl fs iret mov sub push mov or cmp adc and cmp loope inc sahf push loope (bad) xor dec mov mov mov daa xlat jle pop mov nop or pop out movb pop push orl dec and mov fstpl dec pop cmc mov mov in mov xor add incb in mov out cmp mov sub ds int3 inc push lret test aad (bad) cmc mov pop push cmp fldt lock loop roll push sti pushf test and mov inc shlb stc xchg (bad) das fldl2t test jp fistp dec pop scas or loopne fbld pop mov rorb sbb (bad) pop mov cwtl movups xchg push add adc popa addr16 test mov ds mov or jbe adc call (bad) out es adc push cld mov pop jl loope mov movsl jbe sbb lcall pusha or cld xor push lcall loop sbb mov ret pop ret push scas sub lret jae fnstsw xor ror sar add xor sarl (bad) aad cltd mov in pusha add push pusha add les ss fisubl adc daa inc sbb scas daa lods ljmp push dec xchg out sbb xchg icebp mov dec adc ja push mov push in cmp cmp xor pushf (bad) mov fadd mov sahf dec push adc inc jle adc inc mov pusha cmp (bad) push aas sub subb adc je outsb lahf movsb das jo add cwtl xchg dec sbb and scas jo inc push dec xor mov jno push addr16 lock rcll enter movsb ljmp jmp idivl xchg test cmp push and dec jb sti adc outsl pop and shl sub jbe (bad) (bad) dec inc cmp gs sbb sbb xchg lods or mov jp divb jne frstor xchg ret sbb aaa icebp scas fdivrs dec adc (bad) push fsubp jl je testl cmp xchg (bad) scas (bad) int3 dec mov loop dec or pushf sub dec xchg mov pop fnop test jo sbbl fwait shrl xor leave popf pop fisttpll in popf inc dec jne in pop jmp pop pushf fiaddl dec xor pusha dec jg sub aad add xor rcrl fcomps fisub mov lret mov jnp enter pop mov inc out xchg addr16 mov ja push fcoml sbb mov sub cmp or pop push sub mov daa stc sub pop sbb and lock fs xlat loope mov insb outsb cmpsb cmp fadds iret sbb pop add cltd inc (bad) jbe jge mov in dec push fsubrs xchg adc xchg mov fldenv enter push sub pop int3 (bad) lahf inc fs fildl push sub jns cmc jno fcoml fisttpll cltd adc das add jge in insb pop ret mov stos int3 inc xchg and sbb or adc test xor pushf dec and pushf movsb in leave mov mov mov movsb pop jg sbb or mov loopne add lods mov out sub adc (bad) repnz adc int3 jnp out pop adc jmp mov dec push xor scas sub fadds pop pop inc add xchg je pop out fwait cld pop pop cwtl shrd lret js pop jmp insb jg repz cmp adc push icebp iret adc adc je cwtl adc cmp mov daa or and push mov test mov int3 pop mov lcall push sbb mov cmp inc test cmp mov out mov (bad) pushf orb movl mov pop or ret mov sbb jns fisubr inc lcall cld lock cltd push sub sahf sbb dec cltd mov das or inc mov pop push test out xchg jne cwtl (bad) dec ret mov xlat jns pop mov pop mov mov lds dec xchg imul inc lret lahf aaa aaa mov in lcall aas (bad) leave pop fcoms push sbb push inc jns les mov cmpsl inc inc jns out in rolb xchg mov sti ds xchg push iret mov aaa ljmp in mov mov popf sbb fbld jnp aad xchg insb nop enter sub xlat cmp push cltd pop movsb xchg jge fmuls arpl sub inc lret mov xor push (bad) jl mov mov push inc jbe (bad) (bad) sub xor cmp aaa int3 adc sub push sub dec lds or pop clc std mul jmp inc xor inc jae mov rclb adc pop xor jns insl aad bound cmp out nop jg cmpsb add fcompl leave cmpsb sahf mov cmp dec mov shrb loopne xor xchg jg cwtl lea xchg jnp loop (bad) adc clc idiv in decb int mov movl jmp sbb insl mov paddsb repz adcl push xlat loop cld inc inc rorb mov out sbb test gs (bad) orl mov cli scas loopne sub and xor stos mov daa mov das sub fcoms jmp dec (bad) mov jmp pmaddwd jo std inc sub push dec pop mov testb movsb (bad) adc adc test (bad) shl jmp inc xlat mov je js ss ljmp mov sbb lret ret dec sbb inc test dec pusha std repz pop push aaa inc fcoms xchg jge jl sub in lea mov (bad) (bad) fmul push and mov push in sub xorl movsl cmc xchg mov inc in scas inc lahf or cld insb in cmpsl mov imul ret jp sub jnp sub cmc sbbl push dec or les in xchg fimul dec ss clc iret sub sahf enter mov psubb std call ret (bad) std pop jmp mov mov in adc jge lods pushf mov jp out xor (bad) and mov ljmp or outsl mov or insb pop xchg mov out pushf popa cs daa mov stos popf lods xchg stc lcall jae data16 cli dec mov mov mov cmp inc dec adc repz ficoml dec jb les push test (bad) push lcall inc stos nop inc lret int3 out sub ds or cld jmp xchg dec mov xchg inc or adc mov out pushf jno cs inc loopne (bad) psubd jnp decl iret sbb or cmpsb (bad) neg dec cmpsb aam add lock jecxz add sub push mov loop out pop mov lcall xchg cmp ljmp xchg stos push addr16 ret sahf (bad) repnz jne nop mov pop test add sbb mov stc lods (bad) xor inc sub jno xlat push cmpsl iret push push leave xor fldl sbb jb inc roll rorl loopne lods xor jne mov (bad) push test dec mov ret lret mov pop insb movsb int push stos (bad) or adc iret stos mov push loop push stc aam shll call dec ret scas lahf pop pop inc xlat aad insl aas fbld xchg shrl add adc (bad) sahf cmp xchg call roll push fmuls lock int3 (bad) cld jmp rorl test outsl bound mov test pop sub and mov mov sub xor xor fwait mov mov pusha rcll sub cltd xchg dec pop mov (bad) pop adc mov fcom lds out in and fsubl inc out jle xchg cmp movsb mov mov push popa xchg cmp std sub rol repz fs flds adc mov pop cmp mov sub addr16 or stos (bad) push push leave popa cld sub inc (bad) int mov fdivrs (bad) mov inc sbbl cmc nop jne pusha in jp adc pop sbb inc mov jno dec enter xchg push test (bad) out mov inc cli test dec popa push jl jo xchg data16 pop xchg mov mov popa in add decb sbb (bad) mov stc inc sarl push test in xchg outsl xor leave idivl scas push rcrl aad cmp (bad) mov sbb mov cld outsb jbe lods inc scas jno and jb pop mov fistl lock (bad) ret loop cli mov mov icebp and sti test dec or or xor ds test enter (bad) loope sbb dec fistpl fstl adc sub hlt cmp sbb pop scas mov es mov sub pusha sub stc lock popa pop sbb push (bad) xchg mov push jnp popf sbb ja insb data16 adc add pop jo insl pop add inc nop pop xchg or notl test ret outsb sub outsb call pop out cmp sahf rcrb jne sbb xorl movsl imul inc mov loope fs outsb arpl inc xchg and xor enter sbb mov repz mov mov push popf imul or scas inc xor test imul int3 sbb jmp inc jne xchg dec (bad) int3 data16 mov rclb jmp lcall xor insl add push jmp ror xor sub ror and cmpsl flds bound cmpsl ret je scas cmpsb push mov jle sub lock in xlat sbb imulb xchg add mov jns bound pop lcall nop jnp int3 push xchg sbb xor sbb (bad) or addr16 gs dec or or std movsb pop add fs arpl aas test cmp mov repnz push ficompl push sbb scas add jb xchg adc mov std xor xchg std jmp mov in dec cld mov popf scas sub jae lock and stos mov cmp mov out mov scas inc sbb add rol mov lea dec es cmp xor clc push jecxz in dec and mov idivb jge jl das and sub adc add mov mov insb outsl icebp mov pusha adcb lret es gs or insl add mov stos mov clc cmp xchg sub mov stc jmp mov sbb mov push cltd sbb jb dec xor mov fisttpl hlt adc outsb test pop and push outsl mov fistpl arpl or mov ror or icebp xor in xlat fild int sub jg jl pop rclb pusha testl addl outsl xor cmp mov pop lods les mov test xchg xchg and (bad) pop ret or lahf xor xchg iret push xchg inc popa fistl popl cs cmpsl cmp jae dec loop adc cmpl mov mov lods test sbb add push hlt mov je mov test leave sbb push mov roll add inc dec aad jo add cmp pop xor push pushf ficom pusha les ja sub imul std sbbl sbb aaa stc add aam je fdivp aaa insb xor pop outsb xor adc imul push test popf mov push movsl jg stos test int add aaa jbe add ljmp fcmovb fs lcall mov jbe pushf test scas mov push cltd dec and xchg mov cmpsl outsb inc movsl or or mov in jmp xchg test or or jge leave jo clc cmp aad mov shrb test jae cwtl jo cmp out arpl rcrl push jg cmp push jo,pn pop push xor shrb or leave and xor (bad) mov push es mov lahf and mov cmp xor dec lea mov push pop out or mov popa and repz pop into jno ljmp movsb jbe or jbe dec add mov scas fisubrl cltd cwtl insl daa dec mov (bad) gs arpl test cmc inc or repz sub jns lods dec imul jg pop dec adc lcall dec int test and in adc int3 cli and jmp (bad) and data16 push jno push jmp pop sbb or out xor xor in dec and or sub pop push sbb dec push pushf jle jns fcompl (bad) sahf negb xor (bad) jecxz pushf fs inc xchg fsubr jmp pop mov xchg in aaa cwtl imul div cli dec loopne inc lods mov sti jb mov sbb scas push outsb sub lcall and sub or lret and sbb outsl pushl rclb pop dec testb or scas test push in add mov xor jecxz push fs add cli test add inc test mov cmp in sub leave test sbb mov pop inc lret and std and es pop test repnz sbbl mov pop clc lods dec mov mov mov lods or pop cmp inc pop dec and mov cld arpl in sbb pushf push jne pop sub cwtl ret jno push cltd cmpsb ret mov xor insl repz cwtl xor fcmove jne mov pop mov inc loop popa roll xchg inc pushf ret pusha push into dec pop (bad) pop ror cwtl ss scas stc jae and cltd pop pop push pop ret cmp mov xchg xchg imul pop and cld ds jb dec iret jnp out mov add fbld xchg xchg jle sti sub repnz outsl sbb push (bad) sub (bad) pop inc adc pop dec imul push xchg (bad) mov and mov and divl mov cmpsb lret mov push (bad) aad int3 mov out jb mov mov jmp cmp test mov mov cli rcl pusha pop test aam adc lock jb inc pop dec jne pop add pusha out add push in daa rclb (bad) jp mov pop or ja cmp (bad) ret push mov push lock fwait or pusha jns ret dec push or insl mov adc cmpb das sub test icebp int out (bad) push jg inc xchg jno xchg pop js cmp and (bad) mov test jle xchg scas test stos aas inc adc fisttp cmpsl dec idivb cs testl (bad) cmp (bad) xor adc and pushf repz inc or mov lahf fmuls sub jp dec xchg xchg push mov mov sub shr mov imul push xchg xchg dec fidiv dec jecxz mov ds dec sbb popa xor dec sub out in scas popa jae out adc pause jno mov pushf (bad) adc jnp adc xlat xchg sti inc cmc movsl push test rorl ds cltd pop jp dec mov leave mov fcmovbe icebp or xor pop test mov lods xor lods inc or fwait (bad) loope test imul jg fbld lcall mov js inc xchg js mov adc inc cmp sbb ficomp pop ret lcall fisub add sbb testb mov (bad) pop push outsl sti mov outsb icebp cmp inc bound fwait ds mov lods jp cs mov roll cld in pop lods mov fstpt popf (bad) call push cs cltd sbb dec and popa cmp cli ljmp pop cmc pop sub push loope je jae pop fldenv insb jbe fidivl mov xorb mov jb out addl (bad) xchg popf or pop rcr xor xchg data16 cmp xchg add jns movsl into jae out sub std mov push aas (bad) stos and loopne in nop clc pushl gs cmpsb mov push and out sahf sbb mov std test (bad) sub js addr16 (bad) leave cmpb push stos xchg sbb pop mov mov sbb jge cwtl fs pop aad fs data16 popf jge and and sub xchg repnz popf cs or in nop xor push (bad) jge ds mull mov shlb xlat sahf in lds fcmovnu xchg push fist mov sub mov and add lds inc sbb iret test jae cltd loopne push fidiv cmpsl sbb lret ljmp mov inc mov mov xchg jge mov mov xor repnz mov shl pop les mov (bad) clc enter jecxz shl pop adc call les mov mov and jg inc call imul push mov pop push dec rcll mov sbb cmpl aaa out xor movd dec bound xchg xchg pop jbe add jp add stos adc and enter shrb mov sbb xchg inc inc jnp ljmp push cmp mov mov dec lods xchg sub mov xchg imull or popf mov cmc sarb push xor inc std (bad) or mov push idiv jle and or mov imul push push and fcomp add cmpsl adc mov andb cmp dec pop pop stc cmpsl xlat push (bad) mov lock call repz mov (bad) mov sub cmp (bad) out ljmpw jmp add and push pop xchg pushf push aam inc jne dec (bad) outsl pop out lock push add fcmovnu in inc adc lret enter jb repnz pop fisttpl jns mov pop stos das stc outsl cld mov adc pushf scas cmp xchg or sahf sub push mov xor inc aam hlt jbe lods add mov es sbb fs sbb dec flds and int3 les push xchg adc cmc test jmp xlat (bad) clc test push (bad) lods add ret into notb inc add xor js lcall add movsl cmpsl dec ljmp or or xor mov out fdivs mov xchg leave out sahf pop loope pushf iret inc in cmp xchg shrb mov and push repnz popa dec sbb mov xchg andl and cs outsl mov mov jnp cmc push sbb mov in movsb jne adc xchg push push xchg shr cmpsb xor je sub dec gs jecxz sub fisubrl or push int3 fldenv cmp loop cmp into mov vpmacsdd test sahf and xchg or lock mov aaa outsl sbb cltd add add iret xor adc lods out pop push mov fildll stc mov add jnp stos mov push jnp mov popa js jmp mov push enter (bad) mov xor inc shlb test lret dec dec dec mov into mov mov push je movsl enter xor inc and insl out push jb sbb cld and movsl iret sub pop pop jno test clc push mov mov rcrb mov repnz inc (bad) sbb push and das jecxz hlt sub add sbb lret inc les lahf pop lret in adc cmp addr16 pop ret insb and aaa fstps imul push adc add pop test jno push pushf sub jns cmc xlat ret push dec (bad) cmc jb pop in dec xor xor mov in addr16 sbb inc mov and out sar aad dec mov rcr push fstpt push push iret std push out xor and jecxz inc ficompl lahf xchg jns pop sub cmp pop sbb (bad) mov mov or cmp mov adc mov adc shrl xchg sbb jo pop in mov jmp imul dec fmulp (bad) ja sbb ret lcall mov repnz mov leave jo lods xor mov sub (bad) ss divb in movsl add mov mov ror scas cmpsb dec clc fstpt xchg and loope xchg mov xor mov loopne js xchg or adc loop pop push roll adc xchg adc jecxz mov push xchg cwtl imul xlat add inc pop inc fisubr sbb cmp ret cmp mov add pop int3 adc sub inc repz adc jmp (bad) adc pop inc add mov xrelease in insb daa mov add dec sub test movsl stos aad lock dec daa inc into sub pop push jb xchg mov mov lret sub mov jg repz fist (bad) das insb add push add jae jecxz jae jmp cmp frstor ret mov xchg test sub ret push negl add jecxz or mov add and pop cs imulb and or lret cmpsb leave xor or lahf inc mov dec iret cmpsl add cmp movsl aam lock pushf xchg pop pop xchg push scas das sbb stc nop cmpsl jmp cwtl pop aam ja fcmovb jl or cmp and pop lahf mov pop sub cmp arpl (bad) jno sbb sbb xor jnp mov jmp rcrb mov mov mov sub popf sbb pop mov roll xlat sub sahf mov rolb test (bad) in clc sbb lret mov and popf aaa xchg bswap outsb ficom and pop mov imul fsubp push (bad) in in push xorb jbe adc rol sub push jns cmp xor sbb cmp (bad) dec jbe sub push (bad) and dec fucomp sbb fisubrl jno push jl cmc addr16 mov cwtl imul adc mov xchg imul repz or in pop push fldt pop aas ror test int3 insl out loop mov inc xor (bad) and pop mov cmpsl mov enter js das jno add adc ret popf fwait push sub sbb dec or repz sub aaa jbe bsr aad mov mov jbe fs imul inc lock dec pop out push jl pop jl fwait xor (bad) jl cld fwait push lds int cs push adc inc dec in jo xor and pusha mov fstl jo dec cmp stos test mov icebp inc dec stos push add xorl sbb fidivr in in xor mov fwait pop adc push (bad) mov or jnp lods test ret cld psllw lds push mov xor rcl fnstcw leave adc data16 jmp cmpsb and ret or push test jbe xchg mov in mov js mov sub xchg sbb cmp mov and adc les in fwait lcall adc xchg das enter loopne cli sub mov je insl sbb push sub ja ljmp push fnstcw cmp cwtl add mov std lahf (bad) imulb push cmpsl js fstpt jne fistl mov xchg pop add scas aas ret adcl mov js ds rcl imul data16 mov fldenv (bad) loope inc push out cmpsl inc or or movsl mov jecxz push test push test sub pop xchg xchg sbb pop ja ds rcrl xchg inc add xor or repz add fs insb push into dec mov xchg mov push aaa pop adc pop mov jae push or icebp mov (bad) jno mov bound mov rclb inc (bad) mov pop rcr xchg cwtl inc dec outsb cmp cltd (bad) mov mov (bad) arpl mov nop or jnp mov dec pop add lret mov adc enter xchg jp mov ficoml pop insl or inc inc or rcll repz aaa xor pop (bad) lds adc add leave lds jnp sbb jecxz icebp in pop (bad) sbb add dec out pop pop adc add lret jl dec clc rcl roll sbb sbb mov sub push shrb inc lds rclb and lea popf xchg jne lds (bad) mov xor mov push inc sbb shlb or cmp fldl je aam fdivl xor fmuls pop mov sub adc adc pop ds pop pop xchg cmpsb jl sbbb sub xor xorl cmp adc movsb inc outsl icebp rcrl out int loop cli loopne mov sti sub and add stos mov or aad daa outsb out cmc pop jecxz aas xchg in js pop loopne sbb je leave xchg lds pop mull and inc imul hlt (bad) mov cmc mov xlat shrl cmc xor pop add pop pop push adc mov imul es xchg popf jmp add push adc lods mov or cmpsb cmpsb xchg bt (bad) adc push xchg jmp je lahf adc dec sub movsl gs jbe in sub daa xchg movsb add (bad) jb pop pop push fsubrl mov outsl imul sbb mov mov aad in call addr16 xor dec lret dec sub or and sbb inc push lahf inc mov jne dec xchg adc adc pop popf fwait adc lock sbb sarb fimull push dec lock xor es sbb jns loop cmp cmp jbe fstpl stos mov loop mov call jns,pn jo inc mov inc icebp jne ret mov insb daa mov sbb testb mov fst out out dec mov out lock in (bad) sbbl fs mov xchg dec addr16 and mov cmp ror mov jmp ret enter push add dec mov xor sbb cmp push iret stc push jp shrl fwait in lods mov fimul imul je dec imul test pushf jbe std jo je push sbb negb dec adc lret test loop mov movsl mov dec mov dec xor jmp jle fs rep jbe pop leave aaa (bad) lea lods outsb les cmpsl stos mov in inc icebp inc je lods mov xchg out pop clc mov int3 jp jae into push sbb pop loope jmp fsubrs sub dec int3 inc jl xchg cmpsl push push test mov mov ret or xchg add fstps rcrl pop aaa mov mov sahf sti xchg sub or inc mov notb jne insb jo mov cld dec cmp xchg sbbl iret rcl mov nop push xor rcrl cmc sub insb jge add faddl enter pushf xor mov sbbl dec mov repz mov aam jg sub iret cmpsb fisttp sbb idivl mov mov xchg loope cmpsl aaa push inc xor add je les xchg mov push xchg je js jnp enter test xchg push mov inc movsb jl push (bad) lret std lea mov sub sbb add in sub fnop out inc sub push mov push xchg mov cmp sub ret adc ja (bad) nop mov int3 inc push push and mov mov (bad) mov test icebp cli jl fsubs std stos into adc adc xlat jns cpuid mov push in dec mov cmpsb imul jmp in in sbb sbb pop mov andb sarl jne (bad) mov insl push ret sbb mov xor jae pusha pop call mov ds sub movsl rorb repnz repnz (bad) out adc or xor jl cmp std push fucomip out scas xchg clc cmc inc push sub and add idivb lahf subl sub mov (bad) stos pusha mov lock out push fadd insb loopne xchg sbb inc pop in cltd js push nop mov (bad) pop lret jo loopne test lea (bad) pop popa leave and xlat imul jl mov add push (bad) test or xchg xchg jae bound shlb data16 ja cmp cmp sbb adc mov mov mov imul or and xor dec sub outsl mov inc daa enter push (bad) push sahf icebp mov insl xchg in out xchg pushf in js addl stos inc push out mov cmpsb lcall or aad mov lds test adc (bad) pop stc shll (bad) mov clc pop adc add icebp xchg movb out inc mov xlat mov mov dec xchg xor pop lods jno out fbld test aas int3 pop ds int sub mov jge jno repnz dec mov jns push outsb ret or add sbb mov lds loop push mov pop pop jno fs push inc jo pop (bad) imul dec mov ss (bad) in gs outsb xchg imul (bad) sbb xchg xor daa stos or dec add dec out and pushf addr16 mov lea out mov rolb and adc xlat adc or aam push std xor mov push pop lds push mov mov adc insl pop lods pop mov cmpsl push outsl pop inc (bad) pop lods ret lahf ja adc mov xchg je add push bound xor jo pop cmc lea addr16 jecxz ja mov leave adc das aas pop jnp pop jmp inc in pusha pusha push cmc pop insb and mov xchg loope outsb xchg mov add xor cmp (bad) add (bad) jge xor add jecxz js cmp pop mov loopne cmp cltd xchg cwtl mov out fadds hlt sbb xor cwtl into fdivrl adc hlt sbb mov lret add or outsb fwait adc mov orl adc cltd fwait push imul lods pop push xor xlat cmp pop mov int3 sahf mov sub test sti adc push bound call mov call les jo mov nop movsb pop bound hlt incl add sahf cmpsl xor dec idivl loop loop cmp in js xchg push or into repnz mov jnp and xchg mov mov es sbb jo lcall std xchg pop push sub leave movsl (bad) jb jae ret cmp stc mov mov jo adc js pushf repnz inc out mov add jae xor adc push rorb rcl push xor mov andl and stos mov aaa add rclb divl lods das add (bad) dec inc inc xchg inc roll jo mov inc leave sbb pop cmpsl inc frstor jnp fldl into insb lods fwait sti mov divb gs pop xor es (bad) mov stos dec mov cmpsb push jp jle pop xor cli les out jae inc xor sub adc addl test outsl pop mov cs push xor cwtl push jmp sub mov andb inc divl jmp (bad) dec das mov xchg daa out mov fimull push pop pop sbb scas stos sti adc ljmp cli movsb lock pop mov lock aad or stos adc sbb insb xchg lds inc aaa popa mov and ss adc mov cmp stc mov sub push lds cmpsl mov dec jecxz jl in or xchg sbb fcmovne pop cmp (bad) mov sub mov pop xchg mov inc repnz cmp popf pop mov out pushf sarb aas scas std scas or or xchg shll insb jp add outsl xchg cs pop mov addl clc cli movsl or stos pop or fnstcw ss cs (bad) sbb sub push pop mov lret xor cmp pop xchg fwait gs fwait jnp lret add ds xor mov mov jo cmp (bad) mov and mov push cmp insb es pushf add bnd lret xor jg add jo call (bad) ss out (bad) loopne push sub loop dec jbe lea mov lock loopne mov lock cmp sub int3 or (bad) in sbb pop stos add lods add adc push pop pop xor out mov push and lret in (bad) mov xor popf sub xchg test std test or imul test imul stos and (bad) xor push jns fdivrs or enter pusha jbe ficomp mov test mov push jno (bad) popf xchg dec loop icebp inc mov xor ret int3 sub add push ds and xor pushf rcrl les mov dec lods in push rorb jle cmp mov lods mov jmp cmpsb mov adc insl loop add pop push lock enter cli push insb jns lock push jb sub ss mov mov cmppd lods xlat fiadd scas mov sbb cmp sbb in insb xchg jno adc mov push shrb cmp mov jns pop xchg addr16 hlt push mov xchg and cmp jp mov neg xor popf mov std jne sub sub xor pop fptan cmpsb xchg ja cmp adc mov sub psrad cs repnz lods incl loop lret xlat xchg lcall jge push xchg int or push fwait jmp xchg cmp push lea ja in and or mov sbb popl (bad) notl mov stos add aas sub pushf daa adc inc incl or iret sbb sub pop sbb sahf fs std mov or iret sbb jae xor mov lods fs xor pop cli xor xchg fwait sbb sbb insl (bad) lock push (bad) call test lret std pop stos mov push hlt adc jae adc pop (bad) lcall mov cmp mov sub sub clc aaa or pop push ret push je pop cmc sbb aad dec dec xor mov in and subl pop adc mov jmp rcr mov cltd imul hlt mov lods mov cli (bad) rcl imul adc out jl pop and fs fistpll lret adc ret add add repnz faddl out sbb push pusha test inc add arpl (bad) je lods mov mov inc push int3 test xor outsl add imul mov jle lea fstl loopne mov sbb xchg mov jae and mov popa or in negl xchg sub xchg sub loop fbstp dec repz pop sbb data16 loope and jb dec xchg add xchg cld jp out (bad) dec mov cld jg mov out and xor out clc aaa inc pand adc push fwait inc (bad) leave cmp arpl pop mov ljmp push add add jae adc sbb xchg mov jo dec addb out or out ficoml pushf mov outsb or pop and dec imul jmp lea or dec dec xchg add pushf add lods lods das xchg fs (bad) testb lcall mov inc repnz push jecxz gs push pop pop jnp mov aaa fnsave xchg adc movhlps xchg cmovno pop lret insb push inc std outsb jnp jnp lret xchg shr pop ret mov in pop dec xchg clc push xchg sbb dec shrl shl (bad) mov xor cmp cmp or jle cmp mov jge lods fistl fwait test repz xor fnstenv xchg mov aad out adc lcall or cltd adc inc add add and add sub or js out add sbb scas ja cld cmpsl fwait xchg shrl leave push pop or mov jns ret (bad) jge lret xchg cmc pop sub loope push popa popa mov mov dec dec dec mov xchg pop in add cmc xchg pop out fstpl inc jno jae sub inc xor sub fimull idiv sub mov nop sub sub test lods mov push push test ja fs daa lahf jmp (bad) xor sbb dec lcall cmpsl es push jnp cmp mov stos scas lret cmpsl test add sub xchg pop mov dec addr16 imul cmpl mov loope ret xchg icebp call xchg jnp xchg in daa sub loope enter bound jne sahf dec cmc sub and rcl enter sub adcl pop pop mov les mov cmp scas sbb mov inc icebp cmp in ljmp lret ljmp dec add sub cli pop push or nop mov pushf inc mov sahf loop gs ss push mov stos pop loop arpl fcmovnb push lret xchg ljmp into fwait cmc add into jg outsl mov mov insl inc daa pop insb and movl mov jl pop stos decl cmpsl and sub scas movsl sahf lret hlt (bad) add int3 aas ret insl add orl pop fsubr xchg lret push add pushl sub pop push push dec (bad) xor (bad) repz jg movsl adc aaa (bad) mov add adc insb aad enter stc cmpsb inc sub push dec cmpsb pop sub pop sar movsl and repnz clc inc xor pop sub push (bad) push inc sbb push pop mov mov xchg lret je push pop add jno (bad) clc jbe out mov bound rcrl pop inc push ss bound shll stos test js cmp cltd (bad) std rcl jnp ds add sub xlat or cli dec bound jb repz mov push cli sbb add (bad) ljmp mov xchg jbe jbe ret adc test xor (bad) fsubrs sbb adc add adc roll xor fdivp push jge cmp sti add push in lods mov (bad) sbb rep xor pop mov lea dec fmul fmul inc mov xchg cmp mov push mov ret lret lcall enter sbbl (bad) and aam movsl pop cmp stos lcall jg mov dec mov xchg rcrl arpl push and mov pop sub pop sub xchg xor push adc (bad) out dec xlat sahf jge pop mov out imulb mov xor add nop ret xchg mov fisttp sbb leave pop test xchg mov sbb sub add mov lods mov (bad) mov stc jne es popa or push ret sti lahf lea or in push les aam inc lret xchg sub or jae movsb sahf xchg inc mov pop lret adc xor in pop mov pop lret hlt jo ds ret (bad) out push inc mov popa in add mov add imul jge in mov (bad) shl push fisubr in sbb add icebp jg (bad) js or ror add mov mov mov lods ljmp cmp adc or xor loop xchg aas outsb push push loop stos nop sbb jecxz js push lds inc dec mov scas xor xor lcall jnp repnz push jge adc push mov stc test xor push aas sarb add mov outsb pop or adc and mov inc jl in iret fs ret adc fmuls mov ret mov (bad) cltd add (bad) ja (bad) divb xor jl in mov add andl out pop icebp xor mov dec fist add int3 inc (bad) sarl push sarb add scas jle (bad) repnz xor mov sti pop sbbl pop addr16 shlb adc sub mov mov test movsl mov push dec pop int and das sbb jl push xor popf fcoml xchg mov adc or lret sbb (bad) push xor aam orl out std lcall out lods dec enter lods and outsb ret sub cmpl hlt adc sub dec inc add dec (bad) xor inc adc in insb fs and outsl or sub mov add enter and or lret pop stos push in cmp testl adc mov daa sub repnz inc (bad) arpl (bad) popa mov jmp jg xchg mov lret (bad) out mov (bad) ja or sbbl dec sub loope call lock aaa dec xor fcmovu mov insb cmp dec subb push or dec dec sbb and mov adc aam fs or sbb push and jmp sti lret fld out inc std inc and or adc pop mov repz mov jbe pop insb (bad) sbb adc int3 ret repz fldcw mov mov mov pop sti pop xor mov jg call push sbb push add jae and test loope in bound dec and hlt pop push jmp cwtl sub adc ficoml out push and pop or (bad) push shll shlb pop sub stos add insl dec push rcrb (bad) in fbld mov ja cmc lahf sub rorb jbe mov push and daa das jl push lds xchg dec mov stos out fistp jbe lods sub or ret pop into adc stos sub icebp xor xchg or sub daa jnp roll or clc jp xor mov and dec or adc mov pusha pop mov jbe jle test add lcall dec mov xchg (bad) fistl out xor dec sahf xlat and adc addl insl pop popf pop je lock in std aas outsb lock (bad) mov dec xchg enter adc xchg rclb xchg sbb ret loopne push hlt dec push (bad) addr16 lods (bad) cmp xchg adc jge xchg push addr16 or jg mov jp adc xor es jb aam mov and in (bad) arpl sub dec mov out sbb jmp and les fist xchg mov adc mov mov cmc pop inc pop xchg inc stos (bad) ja push cli dec test out loop lret loope pusha jle pop outsl xchg call add test jbe xchg push push pop inc gs scas mov mov leave mov add or push sub and scas rolb lds (bad) cvttps2pi loop jns psubb imul and push insb lds xchg pop sti mov fnstsw call ds fdiv aas outsl adc pop pop fdiv sbb or ss dec xor add add xor daa (bad) adc stos dec das jecxz jae jns test cli jnp add mov dec mov xor (bad) out int mov mov cmp xor das aad dec push aas loopne cmp mov sti and outsb mov lods (bad) jbe lcall pop mov jne icebp pop or pop pop out sbb lds adc mov pop insl and adc cmp icebp dec and fiadd or fdiv stc or aad adc adc mov cmp test and sbb push fdivs push sti cmp movsb adc pop in movsb dec pop xchg fld1 xor fmull repnz adc pop jns sbb lods les jnp xor cmp mov inc loop xchg loopne outsl push addr16 shlb enter push adc pop test ss imul xor (bad) outsb mov loope adc jg data16 je dec mov mov std sbb jnp jne popa jae cs mov cs and icebp mov inc cltd imul cli cld sub mov lcall es sub lret dec cmp push jle cmp cmc repnz sub insl jno mov cmp xchg mov aaa cmp or cmp cwtl (bad) mov mov bound xchg sub pop mov stc test mov mov pop (bad) xor gs jb xor aaa cmp inc sbb mov repnz fwait (bad) sub dec pushf jecxz scas int fldenv pop adc push sbb shrl xor out ds in inc repnz (bad) inc not ss mov push push mov sti stos ret lock movsb mov int3 aam inc shl (bad) adc push xchg mov jge or pusha dec inc cld out mov dec cmp cmp pop enter and clc mov repz in pop jl or xchg fcmovnu aas lock cmp bound jne imul arpl and rcr adcl or ret leave cmp ljmp adc dec loopne popf addr16 push sub std add dec ds or add cmp mov add fisttpll movsb mov repz ljmp int3 pop cmpsl js push repnz push daa (bad) mov gs xchg (bad) lea std sar lahf xchg lahf dec jp sbb lahf in pusha loopne movsb jmp push fistpl out mov out adc mov mov mov xor in jae inc push mov stos insl jo mov adc (bad) mov mov cmp inc arpl insl mov (bad) mov ja inc dec and pop sbb inc mov jmp pop or scas loopne out pop inc xor arpl push mov outsb sub pop loope adcb xchg fisub cmc cmpsl xchg add mov je sub xchg mov ljmp mov les jp movsb (bad) nop shll jle test popf sbb push mov (bad) pop fsubrs test lret int3 sbb inc adc jns lock mov lret gs imul mov add pop cmpsb insl aad add shl lods addr16 nop xor cld mov repz fnstenv dec push pop lock and inc seta mov mov (bad) rcll adc inc fcomps jno inc outsb mov xor sti inc push clc dec hlt mov test out mov hlt rcll mov fucomi dec popf sbb mov mov inc ret outsb and mov dec push in fdivrl jp mov sub jp adc sbb jmp and mov push and aad add or int3 in lret in mov cld pop fdivs (bad) out icebp xchg or (bad) in pop mov push lods xchg outsl jb aaa dec scas dec add out lock push sbb or dec stos cmp mov stos iret call cwtl ja (bad) js scas jmp mov test pushf sub lea ret xor sahf unpckhps es or loopne cmp test dec xor jmp cmpsl test cmpsl push (bad) popf xchg (bad) arpl xchg inc push enter cmp fwait ljmp fwait (bad) fstl push dec (bad) mov adc iret std jl icebp add xchg add call fninit pop lds adc add mov movsb xor aam fisttpl stc xchg jae or test iret pop pop cmpsl pop orl add lahf inc or sbb pop fs loop repnz insb inc out sti mov je shrb push jns stos loope rolb int3 sti or push xchg inc fnstenv mov pop in xlat pop adc xor push push push jge out sbb dec dec jle clc push stc std adc into jno sahf xchg notl test lods sub xchg jg xor mov dec mov dec mov enter inc data16 mov je inc hlt jmp rol out aam lods mov stc jbe mov xlat test imul hlt in or pop jmp jb adc xlat cmpsl mov rorb push pop outsl pushf cmp pop jp fcmovu jo,pt sbb or int3 or fsubp out aaa push ficoml and push xchg es push stos scas movl stc roll into test and stos cli inc mov pop jge push imull loopne lcall shl jp and das sbb fistpll pushf inc dec push push negb ret jno cmpsb push add loopne fnop test mov push jne lret loop jge pop sahf mov cmp dec and add mov test imul pushf jb ret (bad) push xchg dec sbb int std in hlt xchg aaa and aam push push push fstpl ljmp nop xchg pushaw xchg sub dec test xor (bad) cmp jb imul aas sub bound dec (bad) or stos ret cmovns xchg pop jecxz or imul aad mov dec (bad) pop dec fnop sbb fiaddl (bad) jecxz jae mov mov mulb rcr xor dec xchg sbb rclb jmp pusha cmc fdivrs cmpsb call dec xor xchg jns jg sub mov stos dec xor call or (bad) loop hlt jae addr16 mov imul and mov cmp insl cmpsb js xchg imulb xchg insl or sub or icebp rcll add add push push mov movb (bad) mov dec shr push mov and clc cltd stc outsb das gs ljmp lahf push jl arpl fsubs lods adc sub pop hlt adc jg mov ss lret or mov shr js push adc cmp cmp or and sbb or mov sbbb sti lods call pop arpl cld and sub rclb fimul cmp pop nop in out lahf (bad) xchg addb xchg rcll dec das inc lret ret imul ret xchg and adc mov jno fwait int push popa cs bound xchg cltd mov bound cld (bad) aas fcmovu mov jo sub pop jl add cmp and (bad) add popf dec lods push cmc xchg test hlt clc (bad) jle rcll push mov adc mov adc clc add (bad) in mov std int3 inc xor inc cltd pop pop in jae xor inc popaw or dec mov push add dec or jle popf xchg cmp cli jl mov lods scas xor inc xchg mov (bad) jo xchg stos mov xchg lock cltd sub xchg shrb bound and xchg lahf cmpl fbstp mov fdivl sbb outsb dec out cmpsb mov fisttpl jl inc ss pop xchg fcomip mov pushf ljmp xchg inc cld cmp movl jl add push sub jo mov pusha inc xchg mov pop nop outsb int popa in loopne mov sbb cld xchg cmpb ret jbe xchg pop cmpsl and sub cmpsb xor mov xchg in pop insb xlat cmp mov cltd dec rorl out adc dec cli nop mov adc lock repz mov sbb push sub adc nop ror sbb xchg (bad) lock int3 cltd iret mov inc dec aad notb mov jnp or pop add or cmp push mov add (bad) lret cmpsl and pop pop cwtl test insb mov mov mov mov and mov daa test dec dec add sub add lcall or cmp pop sub mov cltd mov push in sbb cwtl bnd es mov test fldcw push pop ret sub in pop mov push mov sbb pushf scas stos pop xor repz jle gs mov js jbe jb mov sub cmp icebp cmpsb dec jo xlat or pop mul (bad) xlat pop movsl pushf cmc lds jbe std out cmp mov and aas mov in ss push dec add subb test (bad) lods sub jb lcall fidivr xlat out cmp add lods movaps jns in mov icebp ds cmc mov pop and xchg int fwait cs (bad) jle (bad) ljmp push or push dec pop iret outsl jmp nop leave fndisi(8087 nop or inc outsl or pop xchg sarl cmpsl iret xlat movsb rorb adc outsl jae roll sub push jle rol mov dec int cwtl out mov lcall call mull pushf pop mov repz out enter cmp push push pop and ljmp popa mov dec jnp hlt out push xchg push xor xchg rcrl dec inc loopne stc mov dec add mov push idivl adc fmuls pushf or pop orl (bad) fidiv pop scas mov addl test fstpt fcomps sbb int3 mov mov dec call stos pop popa inc out mov (bad) gs fwait enter inc push les aaa (bad) fisttp sahf (bad) jb lahf jnp cmpsb dec or roll cs aad stos mov rorl and mov adc sub mov sub pop jne jno xor push pop cld outsl sarl and pop sub daa sub xchg inc dec mov out fmull lds js ss fsubrs stc sbb mov cmpsb jmp iret fiaddl ss std lea (bad) dec mov dec nop sbb fmull dec xchg xlat or jg (bad) jbe and inc or dec adc js dec fdivrl lret mov jecxz and sub mov std mov jp (bad) xor arpl pop data16 imul sbb fsub adc inc test dec add fstps into push insb mov bound sbb jno jbe shld push lods sub mov xchg faddl cmp jle and mov insl loopne adc call add jmp (bad) ror inc push pop mov xchg es pusha and popa gs jmp pop call clc ljmp xchg pop mov outsb cs aam push jne jle in xchg mov pop inc and push jge mov movsb fsubrs jp loope movsb xor sahf lret push int in cmpsl sub xor mov (bad) std inc push jp or jbe xor push negl stos je imul cltd cmp push mov adc js out pop push ja jp dec xchg out xor gs orb or xchg sbb cld pusha ss cmp mov sub cmp sub xor imul add mov shlb mov adc adc (bad) std mov mov mov loope cmc or or vdivpd std stc jbe push lock or fdecstp mov cltd aaa jge shr cmp call pop cmp mov mov aaa sub dec jo sbb jae inc mov mov fs sti push mov ljmp cmp sub xchg (bad) in popa enter stos not xchg mov mov iret push mov mov ja sahf minps repnz sub mov push scas cmc (bad) xor repnz xchg addr16 cmp sub jo fiadd jmp mov testl repz push or jmp dec jno fsubrs mov pop pop pop sbb jne xlat jge inc ds fisttp stos mov pop mov push sahf cmp pop popf leave pop sub fstpl in into cmp lock dec loopne dec fwait sbb mov ret jo,pn mulb inc call jbe pushf fbstp xchg inc push inc lods xchg loopne sti cmp adc enter xor popa outsb sahf pop xchg dec (bad) inc xor repz daa (bad) mov xchg sbb mov cmpsl jg mov jns aam cwtl jg pop pop cmpb das mov cmpsl push (bad) in test gs jb mov xchg jnp add out out add push mov fucomp outsb push ljmp out push into mov fwait inc sbb jg add adc push jb jo jno in dec insl fs test inc mov rol cld dec (bad) lea int3 xor xor ss mov int (bad) cld in jnp loop lods push push fist imul test mov ret loopne sti jp mov movsl and mov lock jbe pop inc and pop dec test das cli es cltd dec movsb test dec aas cmc aaa or stos subl xor or lea jge out rolb out loopne jns dec outsl stos and adc mov dec out or cs fimul push hlt popa pop lods cmp enter push sbb les (bad) push push push jae xchg inc xchg loope jnp xor mov xchg int xor jno add loopne cmp mov push shrb outsb xchg in into (bad) cmc sub mov (bad) popl aam daa ss add ret nop jecxz xchg lods cmpsb push mov and punpckhbw into into (bad) jmp mov ds inc (bad) cmc enter dec jns mov cmpsl stc (bad) jbe cmpsb mov popf test sub adc sub mov xchg scas pop lcall mov xchg mov or callw (bad) repz out fldcw inc mov pop jmp or or xchg aaa jnp test pop xor adc push cmpsb mov fsubr adc stos inc lcall mov (bad) in push adc xchg scas es mov (bad) sub xchg hlt push mov pop (bad) hlt icebp sub mov push flds fwait xor pop xor or pop lret aad or jecxz stc or push (bad) lret enter jns xchg in or xlat sub rolb sbb jo mov or adc push push mov inc cmp repnz pushf mov mov push dec (bad) insb mov adc sti xchg jo add fmuls std jae in hlt loope insl stos scas fcmovbe or icebp ja push clc movsb fdivr inc adc aaa jns sub mov (bad) cmp or in addr16 mov les roll or jmp leave mov add les or or ljmp icebp push jns imul in xchg sbb pop inc dec push xor xchg mov mov mov sbb int adc inc pop cmp mov (bad) (bad) xchg add mov xchg fcmovbe lret dec fs sar in xor ja and jns popf xchg ja nop and in mov outsl lock mov inc or dec loop push pop inc mov lods mov sbb aad ret mov push pop imul pop push or lahf mov and fadds sub lock popf (bad) sbb aad scas cmp bound mov dec iret (bad) hlt jnp,pn mov jge,pn mov xchg add je xor dec imul call inc mov cmp mov cmp push xchg rolb xchg ret xchg lds movsl mov push popa bound test xchg jge in leave add scas lods add pop adc sbb lahf call (bad) out adc leave loope daa ret cmpsl and test (bad) pop sbb lret inc (bad) sarb loope stos xor ret rcrl call fsubrl int jg fist xor (bad) push mov push cmp xor cmp xchg mov stos loopne movsb adc inc insl push fcmovnu push xchg icebp orl and cmp sub outsb xor xchg imull xchg out rclb cltd in sub and xchg pop repz std xchg hlt jp cs jge cmp push inc mov and cld lods out cwtl cltd mov mov xchg inc push xor addr16 int3 mov push out and mov add lcall xchg jecxz aas imul mov out cs adc nop movsl or lret or cmpsb inc dec insl stos or jg movsl push and sbb sbb mov inc js loop das dec sub in scas fldz mov xchg icebp gs jl cli (bad) xor or fistpl dec xor cltd sbb ja insl pop stos or push pop in mov fadds inc cwtl dec cmpsl mov rclb lret clc xor jo pop mov outsb test jnp hlt sub std jmp sahf clc inc mov xor hlt nop andb cmp inc sti addl push mov mov sub testl mulb cli (bad) (bad) bound jecxz in mov dec jl jle and xchg lods pusha cmpsl mov ret aaa adc pop jnp jns mov fwait xchg out mov shrb sbb je push xchg test mov cmp (bad) xor into cwtl (bad) mov xchg cltd dec loop mov fs jae std mov imul jp dec cmp push sbb idivb (bad) xor adc cmp in insl jbe mov cmc lea dec jo or and pushf inc je faddp imul stc loopne push jl popf jne push repz push cmpsb int fnstenv dec fildll push imul mov js xchg in mov xchg test gs xchg ljmp xor in inc repnz aad fwait xchg shl xlat int mov js or xchg out push jnp roll cmp ds cmpsl lahf cs mov and and and adc into dec mov adc pop jge jmp aas xchg xor into jo mov inc iret dec push outsl mov cmp in mov iret mov popf push (bad) hlt xor cmp sahf idiv mull pop aas fs iret cs adc (bad) mov arpl pop mov pop stc xchg sub add scas cmp fbstp rcll jno push mov out cmpb cltd and aam lea movl gs push or sbb mul hlt mulb imul int3 dec test pusha mov pop ret add shlb pop mov (bad) mov and fildll jno add (bad) aas xchg add (bad) mov mov loop sbb jecxz jg sbb sbb mov inc (bad) out aad cmp mov inc leave mov dec mov je sbb cmpsl insb aaa mov ficompl push xor jecxz mov or and push pop pop xlat push in pop fsubr notl loop mov xchg dec daa cwtl sbb mov cmp pushf adc stos iret cli pop imul xchg mov sub imul insl inc jae pop movsb jmp and sbb inc and sub sbb rclb (bad) int in ret dec fwait push sbb cmp lock mov pop test adc or jo test cmp (bad) jg loop sub jnp notb pmaddwd jecxz push cmc push cmp jae xchg (bad) std clc mov xor fnstsw lods or add outsb sbb inc aaa jge adc loopne cli outsb adc (bad) push imul (bad) xchg push dec xchg fxch orl jp jp scas adc xor xchg inc mov and lea test cmp mov push cmpsl (bad) pop pop push push push xchg jae bound mov (bad) jge das leave jp sti mov lds out mov xchg (bad) into pop je xlat aas addr16 jp cmp test adc pop int3 ffreep jecxz xchg mov jmp mov xor sti lods push mov jne inc nop decb add movsl push inc pop sub sti dec test cli sahf aam mov sbb test xor addl and cli mov jecxz icebp loop bound cmp mov out xorl jge add add cmp sbb inc xchg jb insb lods cmpsl xor add push insl fcoml xor (bad) gs lds sbb ja (bad) pop jb pop fidiv (bad) push push bound xchg sbb mov fadds test dec inc outsl icebp jl mov sub mov sbb mov inc pop lds add test sti or xchg popa arpl icebp bound inc cmovle hlt add add xchg arpl push mov adc xor dec or scas enter or (bad) enter mov adc mov repnz mov setae pushf jp out rcll clc addr16 dec push pop lahf cld mov pushf scas cli inc int3 inc sbb sbb sub or jb shlb popf ljmp cmpsl das ljmp rcrb aad sbb sub or mov pop (bad) cmp lea pop lret aaa test fimull cmpsl dec mov stos pop push xlat leave xor xor movsl push pop inc and (bad) negb movsl iret xor out xor cmpsb adc push movsb lret outsb add xchg lock or incb push mov mov es mov push dec ret stc out scas cmpsb mov cmp and xor mov push lret jb dec int (bad) add sub mov jl jge mov adc addb pop (bad) cld xor add mov push dec jae xchg sbb dec dec push int3 push mov les cmc dec push xor cmp inc ja xchg mov es pusha pop inc (bad) mov imul mov scas xor jl cmp add imul sbb adc enter not scas inc sti das imul pop test xchg (bad) and test dec les arpl xchg icebp add icebp inc out mov mov cwtl out aaa dec (bad) xor cmp ja lret sti lods mov mov sbb ljmp pop call mov aam add test jge out (bad) std xor sbb mov jae fs jb in xchg nop shr xchg je sbb repnz mov in cmpsb sub repz loopne das sub (bad) ficompl fidivr (bad) outsl cmp scas and sbb orl nop sbb push push mov push xchg push pushf sub pop xchg ret xlat imul repz mov lock fistp push cmp xor mov (bad) xor stc (bad) pop mov testl (bad) fisttpll (bad) aam mov pop stos into jge leave sarl ss mov sub mov pop pop bnd mov add sub stos stc sahf jge xor ffreep mov jecxz inc lahf repz addr16 (bad) shl dec int3 in lds and lds push sbb sarb aam in rcrb jns jg mov outsb mov test hlt in int mov hlt cwtl (bad) movsb jno (bad) xor and jle and pop icebp pusha jl cmp sbb sub mov cmpsb xor (bad) and xor fadds push idivl scas cmp repz in add cltd aaa fwait xor ret inc sub lock int3 push sbb and lods and rorb (bad) xor mov lahf jno (bad) bound jno ljmp sub sub pop cltd xor inc scas scas clc mov (bad) mov rorb (bad) int pop mov aam cltd mov (bad) xchg pusha cmp pop cld jb fwait scas jle mov iret sub cmp xor nop icebp add xchg adc stos movsb cld and ds icebp inc xchg stos mov push mov and fsubrs popa lods xlat jnp xchg mov xor ss mov mov xor fmull mov mov cld aam (bad) lret adc jnp dec ss flds xchg sub xor (bad) cmp imul and jmp imul xchg out jl jp cmp lods pop loope insl mov imul xchg aad movsl cmpsl xchg lret mov test imul add int3 dec inc push fstps in ja dec mov dec push xor (bad) cmp mov aas jle hlt and clc nop mov mov (bad) lea stc xchg in push out arpl mov xchg adc and test fisubrl sti sub mov xlat pushf inc add int3 scas (bad) pop and enter sub insl xor sub fucom pop daa popf add incb testb cwtl mov bound xchg mov (bad) or xchg push cmpsb dec adcl in sub stc sbb into add push imul dec lock pop jl gs out inc mov decb das inc scas imull mov push mov sub xchg sub imul loopne fcomip mov outsb movsl repz lea (bad) mov lret (bad) adc inc mov stc imul mov inc push push jge lock dec sub mov rcr fsubrl fucomp movsl xchg mov lret push push inc lds and lock or push mov pop or fabs cs and cmpps ss aaa sub inc test cmpsl imul and sub inc mov pop or js and mov ja leave mov pusha pop xchg in lea stos test daa push pop push mov fmull std fs sub mov jmp addr16 mov roll inc ljmp leave icebp ds xor loope aam mov pop mov push cltd insl out ror push cmp inc cmpsb xor sbb pop (bad) call addr16 movsl jno sbb inc and dec out mov pop sbb add lds xor sahf dec pushf or cmp into add xlat aas or aad outsb mov mov cli pushf movl dec ljmp (bad) push pusha jns fldcw push inc add jle pop cmp js popa push push or (bad) xchg (bad) fcmovu mov mov nopl push iret add bound xchg in jge mov cmp std enter outsb jecxz fnstsw xchg mov xchg cwtl cmp sub push push and aaa cmp push add xor lret pop cmp xchg cs rcll cs xchg aam test popa ds inc lahf dec cs jnp cmpsl loope xor dec fwait insb stos adc mov fs xor lret mov xchg xor mov pop fldt jns imul les inc ss fistpll push pop lds cmp call (bad) jecxz add xor fcompl fidivr add pop data16 aas cltd popf int3 mov orb (bad) xor (bad) movsb jmp add outsb lret das push or sbb adc mov hlt pop mov jnp inc jnp jle xchg (bad) icebp or pop and jnp std mov or cmp (bad) in and adc shrl aaa cli mov push popa or dec lret ljmp sbb xchg mov push mulb jl cmp inc sbb xor dec movsb mov mov lds icebp mov sahf lret (bad) ret test jno and mov pop push cmc repnz iret cmpsb push jg dec inc adc in sub mov mov sbb add jae loop leave insb (bad) xor stos jno sbb mov sbb test mov xor test mov cwtl cmove mov sbb xchg pop in dec pop jmp popa es lds and outsb test sbb idivl pop in mov arpl xchg xorl mov xchg pop mov out dec rol cs pop xchg (bad) int sbb outsl pop push rol jnp sahf iret lods pop int3 xchg rcll pop leave dec inc jo dec jp dec sti xchg shll mov pop cmp adc pop (bad) fldcw clc aad adc data16 and pop sub dec sbb xchg imul in push adc dec xor (bad) mulb or fiaddl mov push push add jecxz xor lods and cmp sub lea sub cmpsb inc add push sub xchg lcall xchg pop xchg js cmp sub ljmp das mov sub lahf jmp pushl hlt lock mov cmp mov or ljmp xchg les push (bad) push jo int3 dec fwait mov adc mov (bad) mov arpl shrb in sbb pop cmp mov movsb pop (bad) jbe leave scas pop inc inc wbinvd jmp sub (bad) push push repnz ja sbb xchg dec or fmuls not cltd xchg mov jb fistpl xlat ror fdiv push repnz pop in cld sub ret mov aas jno xchg mov aad mov hlt jg push stc insb clc pushf mov jmp loopne mov mov dec ja sbb fsts cmp notl pushf mov push sub lahf cmpsb int jbe cli jle pop xchg dec xor fcomps fimull adc pop fldl xchg aas mov dec pop lcall pop mov adc cwtl xor jge add aaa shlb add xchg jno outsl ds mov in push outsl jbe pushf jne lods cld andl pop movsb add xor bound enter jl pop jecxz fs cmc fwait aam in sti iret jmp push or clc adc data16 pusha lcall (bad) cltd cmp push jg int3 mov sti push fcomip adc movsl sub andps pop push lret and cs and add stos aas out notl add (bad) loopne loope adc push sbb pop inc rcrb cmpsb add mov lds jg xchg push cwtl (bad) fmuls mov mov loop push imul sbb jp xor bound (bad) push pextrw sbb hlt pop add pop stc push arpl push in pop jge stos inc inc inc cmp add cltd pop aad out and popf mov repz jl add (bad) in dec ficom cmp sti das insb mov stc mov stc push jg xchg shrb (bad) in push cmpsb dec shl aam jb sahf jns in movl ret mov pusha cmp sub lods xor pop push cmp or js jl lcall mov pop lock xchg jns fs mulb cmp loope dec mov mov inc xchg mov dec inc aas add add loope pop outsl arpl cmp int scas imul fwait jle shrb int3 cs or insl negl xor sub mov js test dec (bad) ljmp daa mov jo stos int mov ret pop mov xlat xor ja mov loop jle sahf stc pop cmp arpl push (bad) mov pop (bad) ja and xlat cwtl push loopne fs xor or test (bad) int3 sbb mov mov movnti mov bound cmp jg xor ret loop cld psubw jl fxch es jmp push aam (bad) (bad) lock xchg mov xor mov ds and lret in sar ret xor mov ss mov jle out pop hlt cmc xchg sbb xor daa stos ds xchg inc or out stos dec repnz jo jmp lock sbb mov pushl inc shll cmc in inc fcoms jp (bad) insb jns pop push insb aad dec inc push or push jns sti push seto loope das (bad) hlt cmpl mov sbb sbb in jb sbb xchg rcrb push dec movsb add pushf mov mov movsl mov fsubl ljmp outsb (bad) adc out cwtl cltd and (bad) in pop xchg loopne daa es push enter cmp or (bad) jne jbe sti mov jnp icebp cmp cmp pop nop stos mov jbe jmp data16 movsb sbbb lret cmc sub pop mov stc neg adc dec lcall sub outsl (bad) sbb cmp int or repz sub sub inc lock mov cwtl lock clc sbb pusha mov clc (bad) addr16 roll js inc sbb out sbb inc adc cmp pcmpeqd add (bad) ljmp mov dec (bad) into rcll call xchg mov in fisubl andb and push (bad) sub out and mov inc inc push test cmp sub cltd cli (bad) je add popa call add push push movsb jle ds (bad) hlt outsl sub dec xor jle add mov push jnp pushf sbb dec push pop or aam inc sub in out dec out adc in xchg fmulp in fildll push ret out jb ret and test xor xchg dec xor cltd sbb notb or loop ret sbb add mov sahf lcall outsb aas nop push mov xchg mov test fdivl xor fcmovnbe cs cmc mov (bad) pop aaa mov fwait sub jo call popa cmp jg adc xor or jp mov jp sub outsl aaa lock xchg cmp xor lcall push xor add inc aam in mov insl gs loopne aam das les pushf dec jb subl mov call mov adc stc xchg aam loop,pt test cmp pushf cmpsl xchg lds out sbb lcall (bad) add push (bad) push push fistl cmp jb xor out mov xchg repz adc fstpl rcrb xor push jmp dec stc mov ss cmp sbb fisub pop mov xchg fdivrs cs pop dec aas push iret in movsl push inc dec ficoml lret sarb mov push mov popf jle cmpsl ret and (bad) out shl scas in sub xchg js (bad) jp push jae push mov in cwtl or mov pop jae addr16 pop jl in sbb int push scas fildl sub daa popa enter scas fcomps cwtl dec push pop jae in jo (bad) bound add aas cli sub push shrb add (bad) jecxz jge in or or jb or pushf mov lret sub adc icebp out sub in pop popa mov push inc dec xor (bad) sub das pusha movsl jnp les jbe sbb push stos sbb mov mov xor pop loope xchg cli lods cmpb cmp cwtl add xchg jmp out or gs js stc data16 outsl repz fcoml insl (bad) inc jb add mov loop das ljmp fwait (bad) outsl xchg (bad) cmp inc xchg push aam xlat xor push dec (bad) or pop jns ds push inc mov adc icebp xchg sbb pop adc mov int testb fs (bad) lods inc out mov lock push std jmp pop shll (bad) imul insb mov sbb imul stos pop iret and mov out imul scas mov sbb xor sbb cmp jmp addl xlat fbld outsl mov ret fwait jmp jb fs xor jecxz lea fisubl lock cmp sub or outsl (bad) mov pop xor add xchg and es cmp xor push fwait ret dec imul pop and clc xor xor gs push sub arpl xchg iret mov mov xlat push mov lods add fsubrp sub add adc psrad sbb push mov mov cmp xor sbb sahf sub fadds outsb cli mov loope mov push sbb popa jns lods das and add mov jg mov (bad) fldl2t xor rolb mov clc idivb lcall mov push pop jle icebp fnsave lods sbb dec adc push aam stc movsb outsb push stos dec xor mov and das xchg insb sbb pusha ss or jp fsub add fwait adc scas pop mov imul ss enter iret or lret (bad) test mov mov sbb cwtl stc jmp push sub popf jbe (bad) imulb mov out mov mov lds mov cmp sbb jp xor pop mov sbb xchg fwait and repnz xchg notb jmp cltd push cmp sarl js xor dec sub lods sahf hlt push imul iret mov cs xchg xor (bad) or inc cmp out pop or repnz dec inc xchg fwait mov and cld jle or jp arpl lods lret mov fistp cmp arpl push stc push xchg mov mov cltd mov adc pop loopne mov sarl dec rcr sbb jae adc jp xchg xchg mov (bad) test popa xchg out ret xchg shrb divl jne mov test fdivp dec in mov mov decb repz jecxz xchg imul push dec mov dec scas cmpsl dec jno jmpw mov and in (bad) mov sbb ss mov js sbb mov xor mov xor cmpsw leave scas xor adc mov fdivrp inc pop push mov mov scas cmp popa int adc rcrb fidivl or jp outsl ror ds jge dec scas rcl jb lcall sub popf xchg popa cmpsl enter cmp or movsl cwtl mov lock call daa and ret jb inc pop mov add mov sti outsb out out stos call pop dec cli mov loopne sbb fbstp jns mov push xor in pop std sarl cltd cltd int3 mov daa adc cmpsl jecxz push xor inc fs int3 imul es loope jmp inc shrl mov add ja daa pop les pop clc scas sbb sub sub out xchg popa add sti cltd out rcrl add (bad) xor les iret mov push xlat dec pop dec cwtl adc icebp shlb adc add xchg daa sarb sbb in ja int sbb cmpsl mov xchg pcmpgtb add pop mov mov jae mov pop inc and int xor push movsb jnp imul mov sarb movsl cld xchg xchg ffreep xor mov push lahf aad push ud1 mov shl movl jae rcrl sub mov shlb ja jg dec push xchg cmp add rolb pop add jo add push orb mov xchg roll add add pop mov inc aaa sub shrb xchg ret mov leave lret add popf mov jmp lahf iret into mov dec int and lret inc pop ret push cmp push sar pusha push or lahf inc pop mov fistp xchg push mov jo mov aad xchg or pop push psllw out gs fisttpll xchg or sarl lret ret shlb sub in inc (bad) mulb leave push mov pushf call in or cmpsb push pop cmp mov cmpsl or inc lock xchg dec xchg js imul les hlt cli jge sub in les lret cmp scas jbe test cmp fcomps and (bad) jb lods sbb in std gs lods popf xchg pop mov fisubr outsb loope adc movsl jnp dec lods cld fsub test repnz jp push adcl push fcom addr16 pusha and mov jnp or jo xlat incl ds adc sbb mov rcl aam sahf lret dec cmp je shlb lcall addr16 out xchg fsubrp push push push pushl cld or stos loopne scas adc cmpsl xchg xor jns aad stos mov inc cmp push fs fdivrl inc cltd xchg inc adc fdivrp (bad) mov incb inc and sahf bound add pop jbe adc mov add mov xchg mov jecxz dec sbb mov je and hlt mov inc pop (bad) mov jmp mov subl mov sub sbb (bad) sub in inc into frstor in push mov std fiadd dec mov or pop dec imul and mov jl lods or push fild outsl xor push std popf and scas push inc xchg test mov pop sub ret sbb arpl sub ret gs pop addr16 gs popa mov mov icebp xchg cmp cwtl rcl fild xchg (bad) js and stc (bad) cmp inc inc in dec rolb sbbl sbb mov loopne xor (bad) push je in mov hlt mov mov in addr16 sbb fldenv loopne lret add dec loopne fidivr mov leave mov scas jnp adc icebp jp jae lock lcall out push add lahf je push mov and dec adc and je enter cwtl inc xor sbb mov fwait ss (bad) mov (bad) (bad) sub xor pop mov test out fcomps jmp int3 cli sbb xchg fisttpl andl push mov jp adc ja add mov ret or lret fwait sar pop push pushf rclb pop (bad) (bad) imul pop push dec add sahf add loope (bad) lds push sub out jnp jmp adc add sub lds fs jmp lods mov mov fprem1 and adc jmp sub rcr popf insl mov fmuls es jb rorb dec stos xor mov lret sub insl leave push cmc xlat orb loopne,pt lret sub mov cmp jecxz rolb sub jp pop test scas (bad) mov std pop add mov sbbl aam (bad) ja push jno pop ret insl mov dec mulb rcr std cmp test add mov xor data16 push dec not mov push dec sub mov xchg pop sub sbb fwait insb mov testl xchg (bad) inc xor imul jg sarl in pop mov std mov sarb adc xor insb pop fisub inc cs enter mov sub and cli and sub xchg pushf in jg xor dec lret repz iret mov (bad) call psrld push data16 pop or imul insb xchg into ret jl test in xor cmpsl jle and pop icebp inc pop sub xchg in sub movsb loopne je ljmp mov push jmp jo (bad) movsb cwtl cmc add into jl pop ljmp jecxz jmp push (bad) xor xor cs inc inc add scas jno inc dec jb xchg add pop mov rorb xchg fimul mov push or ljmp sub xchg arpl xor hlt inc test test dec push jle add ret xlat bound bound xchg xchg inc dec fcmovnbe insb imul or inc in stos push loopne cs mov mov push jle adc sbb arpl pop icebp dec lods inc loop repnz add jp inc push jmp mov jae lahf rol inc cwtl adc and ds jno dec pusha jecxz lcall sbb mov push add jecxz pop idivb lret xlat jmp dec cmp xor adc jb xchg jb mov adc sub inc fcoms mov (bad) lcall push cmpsb push mov xchg jl popa fxam stos pop pop decl and arpl push nop scas mov idivl xchg iret sub aaa jl mov pop aad xor test call mov ljmp xchg test mov iret ja inc dec decb and adc cmp fadds inc clc push lret adc mov cli fstps aas sub sbb xchg mov adc stos xlat clc push jmp dec xor push stos das adc aam leave dec jle add in lret daa push push scas fwait jge xchg rolb jp rolb sarb xor push scas jo mov xchg add mov insb ficomp inc fs aam mov mov and sbb addr16 fldcw jb or pop or jnp mov imul mov clc sub dec add inc pusha jbe ds mov xor int3 gs and ret fnstcw dec dec pop and jge xchg (bad) push mov addr16 loope xchg lret adc push jne jle xchg pop fsubs mov dec es fcmovnbe shrl sub jno mov fadds add lea push ret adc adc loope dec adc jne mov mov sub fdivrl xor sbb dec fadd fnsave mov ljmp addr16 (bad) sub in push cmpsb push jle test sbb jno rcrb sbb inc dec bound push bound (bad) adc in lret ljmp jnp add sbb push mov enter inc jp mulb sahf lds pop and out sbb inc mov test (bad) pop cmpsl xchg (bad) movsb jne movsl cmp xor push insl outsl loopne psubsb or and dec adc dec scas lods sub cmpsb ret jns xor insl mov mov int dec sub cmpsl aaa and jns adc lcall dec push cmp or xchg xlat cmc (bad) (bad) or mov test jmp pop cmp scas (bad) mov mov xor stos movsb dec in outsb cmp mov stos sub out cmp mov sbb add pop add les pop fildll mov jge mov je inc push ljmp or pop gs pop daa xchg mov repnz int aas xor push mov xor push dec lock jecxz nop mov push arpl dec adc mov cmpsb lods jg inc test je jns jb add addr16 sti add dec arpl pushf stos (bad) divb or dec or jne pop in insb push (bad) sbb lods (bad) mov insb jmp mov cmc mov sbb fwait pop das (bad) aam int3 jmp (bad) sbb mov arpl aaa ss test lahf (bad) out imul cmp jmp mov divl push (bad) rol bound push or mov mov pop and xchg sarb es scas pop jecxz (bad) roll stos pop jnp push pop das (bad) cmp add sahf stos jns mov sahf fwait std loop call cmpsb xorl fstps push jecxz loopne pop inc cmp dec push outsl pushf mov mov cwtl jae movsl mov notb aas out jo cmp loope mov les cmp data16 and push adc push stc push push push or and in jle mov jnp into (bad) mov mov iret sahf mov jbe cmpsl movsb mov iret xchg pop into mov mov push add jo sti cli sar lcall incb stos cmpb lock sbb jo aaa and iret pop add sbb xchg add mov pop mov push enter je lds shl cmp mov cmpsb roll mov xlat dec push or sarb inc and pusha push push add xchg adc mov jbe out xchg jle fsubs clc inc xchg push inc xor adc rol and push mov int xor jecxz leave das xor push sbb cmp mov jmp push sub mull ror (bad) jns xchg mov mov xchg xchg push jb cmp das sub fwait std inc add and dec fsub dec pop mov adc xchg xor and arpl outsb and push (bad) aad shrb mov call pop add push cmp adc cmp xchg adc sbb pop pop jns mov push sbb pushf fs out jp aad sub out sahf loopne push dec aas or ret sub cmpsb in movsl mov stos movsl and inc in inc or add cwtl mov pop jle push xchg lret insl and test out push sub into pop sbb lds push enter push push cmp mov xchg add cmpsl icebp and into pop imul jmp cmp mov and jp and popa mov and pop push fidivl imul jb (bad) in ss enter lods nop aad push or adc jg mov xlat cltd shl and fldt outsb xchg adc jne dec gs int dec aam stos add and aas inc cli fidiv aaa or cmp fisubl fisubl cltd fsubs or sti cmp rorb insb fldenv mov jns inc xchg adc mov sbb sti sbb es ficompl addr16 add negb push je imul popf aaa repnz nop in nop jmp je xchg sbb mov or push adc xchg lods jmp jp push push in clc aad (bad) sub stos adc mov sub hlt les cmp insl mov (bad) mov loopne jo push daa inc (bad) cmp cmpsb loope or jnp mov xlat xor push cmp adc xchg scas jo popa sub inc sbb sti and pushw jecxz pusha inc cmp jge sbb xchg mov stos dec lds or jl call xchg xor jle int ds cmpsb movsb push dec in out and test cmpsb and dec or (bad) scas and std inc outsl mov ljmp sbb xchg sbb mov ret sbb (bad) or inc xor jp push mov js jmp xbegin xchg mov cmp mov (bad) outsb jae repnz movsl movsb push jmp stos mov addl dec and pop cmp mov cmp add stc stc sbb or xchg push outsb jg pop fadd or jae (bad) mov push push lahf sbb adc adc insb pusha pmaxsw cmp add mov scas movsl aad and gs outsl enter dec scas xchg dec cltd push insl xchg enter inc cs pop push loope or inc scas outsb jno (bad) xor dec jae lret mov or aas adc pop (bad) mov in cmp in sahf mov push adc and dec xor pop jle mov lret push mov ret test addr16 fdivl ret inc pop push int3 mov or push and jne mov pop scas xchg xor aas lods (bad) stc xchg fild add int3 cwtl lds (bad) mov ret cmp and and shrl addl fstpt dec push pushf rcll push xchg ss add push mov hlt adc mov stos cmp dec mov loop outsl mov dec cltd cmp fimul sub adc stc cmc mov pop xlat inc lret test stos add jle (bad) mov xchg xchg push lea xchg mov mov js (bad) push hlt push jmp test ds dec mov in daa int3 inc and in loopne icebp ljmp sub aas aam mov sub xchg ljmp incb nop inc jae mov push roll icebp aaa cmp call je or sub mov call fisttpl mov addr16 mov sub rorl ljmp jb xchg sbb out xlat repz add imul and adc jbe out jo ret gs daa inc cld fwait mov or dec cltd popf and addr16 fisubr push fdivp js and repz jge into lods fildll jmp jge sbb xor pop sub divl pop inc mov dec in cmpsb add and push sahf cmp mov push jp lods or jle jno cltd lahf enter fs xchg xchg dec lcall jbe jmp hlt movsb push push or les lahf out add ja jmp loopne dec sub into jns cmc adc dec or pusha mov fwait add push mov xchg gs adc inc jno mov imul fisubr fnstsw fwait or mov pop leave cmp push and inc mov dec add mov jne imul or mov scas xor aas in inc xchg mov movsb and add (bad) xchg bound (bad) lret mov shrb gs je inc test cmp in jae int leave mov lods aad repnz ljmp dec sbb jae jnp fimull mov loop hlt mov inc mov jne dec rcrl divb dec jno into les mov jb lea enter dec fwait aas jae scas pop addr16 pop cs das lret aad mov cmp (bad) bound sbbl mov repz mov pushf adc sbb sbb into cs shrl loopw and mov out mov bound in adcl mov shll loop lock and mov insb arpl xchg outsb push or mov mov and addr16 stc (bad) mov pop add in out xor xor scas (bad) mov out sarb nop or push sbb jl pushf cmc enter lret insl mov pusha stc lahf xor pop mov pop xor int3 dec in jle scas push test imul int3 adc sti cs xor dec dec cs jb sub mov xchg jo cmc out rcrb xor sbbl and test popa xor mov and jno and dec mov les inc mov xchg cmpsl jb mov mov pop sbb jne or sub inc test popf push mov add jp iret inc mov and mov jmp push shll pop mov xor cltd jg stos xor push push mov xlat inc adcl (bad) dec push cwtl or mov lock lcall jns testb xchg jecxz jg (bad) or popf inc xlat push cmp aam stos mov mov or pop enter nop clc xlat mov test mov xor add lret or mov cmp into jp push or les push popf and inc inc pop aam data16 push pop enter ds pop inc idivl mov cwtl inc push insb ficoml push ja pop push pop pop outsl scas movb (bad) in lea add jg xchg add popa adc int (bad) test repnz cmpsb repnz in add inc (bad) cli add insb xor sub cmp mov sahf mov push lret stos jno cmpsb ret jno scas pop mov lret cmp inc push in pop pop add lret mov sti jnp adc inc sti jbe repnz pop fbstp in mov sbb dec cmp lea mov pop sbb aas adc push rorb cmp ss pop test mov mov dec data16 leave sti dec dec adc sbb mov dec inc lock test inc mov aad mov movsl xor inc test (bad) fld cltd repz pop sbb xor (bad) mov shrb cwtl mov sub movsl mov jge scas (bad) icebp or dec aas xchg cmc in mov xchg fadds jo movsl cs stc pop out add int3 xorb xchg jge daa lods inc and mov adc icebp bnd inc stos (bad) push push inc in mov mov and fisub aad jo ja andl ret mov dec movsl adc cmp push add or dec roll stc push insb insl dec or push mov inc push or sub mov loop js into ljmp dec ret cmp mov cltd fcoms and add lock fnstsw jae (bad) xor pop fisub loope jmp sub add cmp les daa dec or movsb and add scas jb jecxz or xchg arpl pop mov pop jmp mov adc inc dec mov dec lock xchg les and in mov gs je jmp rolb pop xchg outsl shll pop test (bad) test sbb cmp jnp test or jp test fcompl movsb outsb mov pushw cwtl aam scas sub xchg or sbb mov xor add xchg xchg inc movsb lret test mov xlat cmp sub je test into pop cltd cmpsl mov out and xor and fcomps adc mov jmp dec pushf loopne lahf add push add push loope insb outsb jp jp add rolb fisub sbb loop lret sub push shr fldt (bad) scas (bad) xchg scas (bad) icebp aas lcall (bad) push sarb jecxz pop sbb inc or int3 shrb inc adc iret outsb divb xchg sub or cld jae pusha sbb clc clc mov fnstcw adc jmp dec mov or aad in ss test or loopne xchg xchg pop sub je pop (bad) iret pop mov pop dec (bad) sarl jo das rorb (bad) mov jnp push sbb negb (bad) out xorb (bad) les imull icebp fisub add and int3 or push je cmp or leavew movsl fstpt pop jno enter or roll fldz cmp mov movsb mov or std add jnp and loope popf xchg sbb push lret mov in inc fnstenv fcoml push (bad) (bad) aad cmp pop or jae idiv pop pop aaa loopne icebp ds mov add lahf cmpsb adc inc shrb push rorb pop inc sahf xor mov cmp xchg mov sbb adc xchg outsl pop ljmp push arpl das fs (bad) rorb addr16 cmc pop fidivl xchg loop orl ljmp add cld add xorl repnz and mov aaa and jo roll inc mov out ljmp mov ss in test adc xor xor inc xchg fistl movsb sbb inc push inc push jle or mov lahf pop jnp pop js jb and and into inc insb stc repz mov fwait loopne jl pop std call fwait jl mov ja (bad) pop push daa fwait test xchg out movsl pop int fdivl outsb call stos or dec mov ret mov mov lcall sub imul mov push lret jbe inc mov ret sbbb sub push fcoms xchg stos mov cmp stos pop jmp call or aam sbbb bnd adc or std xchg mov cld aam (bad) int3 push xor push js rorb sbb test sub insb pop incl mov test nop repnz dec inc mov test rorl pop push jns pushf mov cld std rol mov xchg pop cmp out je inc fcomps imul xor fucomi push jle leave mov push pop rorb inc aad or push pop mov or je inc (bad) mov addr16 mov mov out xlat loope outsb fldt inc jb arpl add sbb and push and adc mov in mov jne jmp and ret jmp jne sbb jne jns leave dec sbb add xor and sbb out inc mov jmp dec (bad) in mov mov mulb jb cmp sbb push mov cmc pusha push xchg addr16 mov xor bound lods push or cmp mov jmp sti stc and sbb or push in jns je inc orl insb xor mov xchg cld pop mov inc fs dec lds inc scas cwtl bound iret outsb inc lret push pop into and jmp xchg push or pop or or xchg jno (bad) (bad) dec mov test (bad) ljmp sub cld lds xchg pop fsubrl loop sub pop pop pop sub and mov add cmp jle sti push dec gs clc push pop sub jae mov (bad) xor ljmp push jg cmpsb jecxz jl mov mov in les xchg inc adc sbb mov adcb rorb mov cmp bound ret mov bound pop (bad) jne sbb add stc ror in xchg sbb sti cmp call cmp hlt adc into mov dec adc or or mov mov pop sbb scas push mov xchg loop movsb frstor insl xchg xor outsb dec or test nop ret leave pop cmpb adc sub mov shlb outsl loop in popf fnstenv jno out push or push icebp xchg sbb daa or fisub jb xchg addl sbb ret lret adc lea cmpsl xor lahf adc push cmpsb and xchg pop pop int3 inc dec addr16 ss pop dec ret sahf andl or addr16 cmp push cmpsb cmp cli fist xor or cli hlt push test jo and ds test rclb les int iret out mov push (bad) (bad) hlt out loopne mov loop nop (bad) mov and mov movsl int3 cmp sub cmp movsb cwtl push mov hlt mov push movsl mov cmp out jno (bad) mov in pusha es jno jnp clc aam out jno sarb pusha push (bad) sub jp (bad) loopne dec (bad) int3 xor xchg xchg shll out adc push lret repz ljmp mov pushf repnz pop mov mov out popa js push pop push clc sub (bad) loopne imul push mov add xor or es fwait pop adc leave adc jp pop add and movsb mov imul cld add pop cwtl dec clc movsb ficoml fstl mov (bad) divb or dec push (bad) xor out and dec repnz jecxz mov lcall jecxz sub mov movd loopne imul sbb push pop dec les jecxz repz cmp pop imul mov sbb (bad) icebp jb xor loop mov int loopne iret incl out js adc push (bad) xorl lahf push imul mov jae pushf adc mov repnz xchg jo in aad push das ret loope pop (bad) aad das mov ret mov ja pop mov inc push nop (bad) orl and or enter test lds push jl mov adc scas adc mov sbb out imul (bad) sub addr16 mov ret in repnz pop push jl inc int add add mov cmp fwait ljmp push dec mov cld mov push int3 jnp adc push push lahf nop mov hlt nop mov or xor loope bound (bad) idivl mov jbe pop cmc mov lret icebp sub jmp ret ret pop xchg out cmp int3 add (bad) divb adc mov xlat push insb pop and push stos cmpsl not adc das les pop repz jg fidiv mov imul bound jmp rcl (bad) rep pusha dec arpl in sub icebp rorl mov lods xchg rcll imul sbb sti pop andl xchg (bad) xor jg int3 enter dec das icebp dec jne inc or lcall data16 sahf mov repz mulb outsb ret pop or (bad) push pop pop mov lret out in adc jmp mov inc out pop inc gs jo les data16 xchg sar xor leave subb pop fsubrp outsb aas test inc rcl repnz test dec and xor arpl sub (bad) push xchg and loopne add sub xchg pop fcomp add xor das ud1 mov sarb xor cmpsb leave int cmp xchg sbb mov call jb or adc sub rcrl nop loop jns sbb sub lock push fistp mov jae mov inc scas out xchg push push cmpsl divb jge lahf pop xchg enter nop and and ficomp dec xchg push in std mov or push and insb or push mulb sbb pushf cmpsb jmp jno mov adc or dec jle int dec ret pop pop push sbbl ljmp movsl and xchg cli popf jecxz js test lret aas cli adc in pusha pop ss (bad) sbb xchg jns out sub mov inc jmp jnp (bad) cmp icebp lret lea rorb xlat dec xor mov push pop fstp scas pop xchg mov sbb add push ret add lea adc stc clc pop lret pop sbb inc push push ljmp aas mov and js addr16 shll cli add push es sub test (bad) ror mov ss xchg mov (bad) lret cmp leave lock add push xor push cmp sarb les jmp jle jge pop rorl xor cmp jmp fist pop xchg test or pop push add in loope cmpsb pop cmpsl test jo and push movsb adcl test sbb imul int adc pushf (bad) mov xchg and fidiv and dec mov loope jae call pop fbld icebp dec jp inc icebp sub lds push mov into jbe pop sahf cmp push dec idiv out inc gs (bad) out cmp sub inc into pop (bad) lock xchg test adc je jb or xchg jge lret xor fimull ljmp lods adc xchg push xlat repnz mov mov pop push cmpsl out mov xchg pop push testb ljmp pop cmp push xchg cwtl mov iret loop (bad) pop loope xor addr16 cs xor aas or push xor xor cld xchg and pop dec movsl and stos xchg lahf out pop mov dec pop out sti div jno es stos jl loop (bad) cmc ljmp int mov ss insl (bad) repnz fimull pop sbb mov int3 or mov mov add in inc push repnz jb sub lds pop fldt in pop sahf xchg pusha sbb sbb daa mov loopne jbe,pn lds sub xchg pop ss or je xchg xchg and push sub and xchg nop daa repz iret (bad) (bad) aas sar mov sarb lahf push or aaa out mov jae and mov incb popf inc mov shrb sub inc sbb hlt imul push nop cmp xlat dec xchg push stos out ret lea mov jmp outsl js stos xchg ja aas test in jmp inc cltd cs test mov outsl loopne xor faddl repnz enter sub pop mov xor or (bad) cmpsl movsl or cmpsl arpl jnp imul inc jle pop push pop movsb adc jmp mov les pop aam cmc xchg mov ficom les and into cmp (bad) jmp jg or push aas xor add lret out cmp lea aas or push pop sub mov aaa jns jns inc jae nop addr16 icebp pop shrb sti sbb add mov test std hlt jns or push popa dec stos repz xchg cmp aam and xchg cmp jbe fdivp inc stc mull add insb or mov (bad) sbbb int rorl jle or pop insb lods push sbb psubb mov cmp lods and cmpsb dec rorl out stos dec or mov repz into test idivb pop inc sub hlt stc das push (bad) icebp lods inc test sar into mov or add mov or (bad) cmp and mov lock and add ds xchg cmc enter jo adc outsb and mov int adc sti cmc or stc (bad) rcr (bad) lret and mov (bad) inc out xchg cmpsb xor mov fcompl or je stos addr16 dec mov das xor test jne int3 pop jnp jge (bad) add sub xor (bad) ja jmp je jne sbb pop pop sub pop call cmpl std and sbbl jo pop xor gs push cmovns aam stos ffree loopne inc aas pop lea xchg out or addr16 insl into inc pop inc fcmovbe mov jmp in idivl mov ret repz sub jp into add pop jb pop mov cli cs ja dec fldt pop dec pop rolb mov dec xor push fxch bound adc repz adcb inc orl arpl sti ljmp and test lods incl cwtl fbld into or push xor jp adc push add rclb in mov jne insb pop popf cmp push not jge mov (bad) ja dec jo ret test fmul pop push rcrb movsb cld mov xor mov inc cmp enter inc cmp xchg mov ret push and movsb xor mov pop sub sub (bad) fisttp add sbb repz push test divb scas cltd movsl outsl inc adc or mov xchg mov mov xchg jne insb lds les or mov mov sub int3 addb mov jle cld iret push jmp cmp jl xchg in lret cmpsb loop mov popa in subl int sub pop xchg daa mov pusha enter xor iret les mov pop out pop fsubl ss inc leave jo push or cmpsl mov push aad nop mul mov in test dec xchg jle cmp dec cmp lds mov test or fwait mov enter jge iret jge mov add or dec mov (bad) push pusha aam lock jno mov jp repnz fcmovnb mov lret dec lret mov xchg mov fisub (bad) (bad) int cs xor lea ja dec lds fimull outsl mov fnop push movntq adc mov mov dec add (bad) xchg jns xchg adc insl mov scas jne cld add push popf jp pop test cmpsb scas in mov repnz scas xlat and xchg pop fidivrl push cmc mov sub dec inc or rcll into sub push jl push inc std push ror adc (bad) mov aam mov mov and jl dec (bad) std lret push jl or fstpt cld mov xor inc fincstp lock enter jns dec aam xlat bound into (bad) jnp pop arpl sub daa xlat (bad) xchg (bad) cmpsl hlt xchg (bad) dec ljmp mov mov inc jae loope insl xlat add cs push sbb ret test data16 (bad) mov xchg pop rcrb mov ja sub or and cmpsb sbb arpl daa inc mov sbb pop jno repnz mov cmp mov mov (bad) enter daa push xchg or out int fwait iret (bad) jae icebp xor pop xchg adc pop jl jns sub dec pusha lcall test mov insl push loop test and aaa rorb out adc inc sub lods xchg (bad) pusha dec stos and pop xchg imul ficomp mov cmc aam orl insb and and in nop inc test nop mov fstps shl lret cmp cli xorb rcll mov sub int mov pop add xchg jecxz push cli fcompl push mov pop lods iret aaa mov hlt adc sbb pop adc mov xchg pushf lret gs push xchg add pop loopne fcomps and xchg or orb clc jae mov shl mov mov xchg inc loope inc cmpsb mov jge inc pop pusha cmp leave insb out jecxz push mov xor inc push inc mov les subb out push sbb ss (bad) cmp ret cli mov repz int3 movsb enter and and (bad) fiaddl in push scas fs sti push pop cmp (bad) shlb add hlt fidiv mov les mov pusha or push push (bad) aaa xchg add out std out cmc cmpsb lret push mov mov cwtl movsl insl mov sub jno mov jecxz pop mov mov xorb (bad) push inc and xor ja xlat nop loopne (bad) in xchg push int3 jle add mov xchg xchg pop pop cli (bad) test xlat cli inc cltd (bad) cmp sbb fisttpl and dec or jbe xchg in push push add cs xchg aas cmpsl jmp push jnp mov push gs cld sbb jecxz push push xchg mov daa mov out lea lcall jl dec and jb pop movsl jo popa mov (bad) pop lcall (bad) lds pop jb cmp xlat mov pop jmp or inc push in in cwtl icebp negb xchg adc test push cmp fnop and bound sbb out mov stos arpl aam jae xchg push bound scas test imul insb scas cltd lahf das out and adc push cli divb aad decb push rcr xchg push adc adc pushw imul insb cmpsb pop stos jmp sahf fs mov test add (bad) rol pop dec lcall inc pop push lock mov in jmp add (bad) dec mov cmc jle pusha push ja mov add ss push jg pop push jbe lock mov mov div inc outsb adc cmpsl scas lods jg fwait (bad) pop sub sub sti mov (bad) mov inc pop xlat shlb mov cli xchg (bad) in add dec lds sbb (bad) mov cld shlb dec or pop push in and aaa and sub pop jge sub xchg rorl xchg xchg lahf cmp pop insb or or push lret rcrb adc shrb dec aad mov loope mov sub cs lds pop adcb fmuls and negl add sub repnz push xlat out mov movsb nop xor shrb sbb adc fneni(8087 adc mov and insb (bad) sar inc sub xchg mov fldt fs or pop fst leave xor (bad) jbe (bad) hlt push push sbb sub inc mov add movsl or mov es aas shlb sbb lcall or ffreep jbe loop es out (bad) cld cmc repnz pop imul loope mov fstl xor mov inc data16 fxch jae or sahf and repz out sub iret fimull les sbb mov fs xor (bad) gs pop mov outsl roll xchg xchg cld lret cltd cs cmp fsub cmp fist outsl sbb sub mov inc mov mov push mov shrb ss pop fs pushf (bad) daa xchg rol orb xchg pushf dec lods frstor mov in adc jbe int xor and cltd mov adc int3 pop aam fisttpl xchg and in dec lret sbb mov pop pop lret arpl pop lock add push iret (bad) lcall push andl mov mov pop daa xor movsl sbb bound cli insl insb dec (bad) out dec arpl jne cmp enter pand mov imul push pop cli xchg add enter (bad) jp sbb jo cmp and inc xchg sbb or jno insl xchg pop aaa xchg xchg or xor xor xor mov (bad) mov das and sbbb or push inc idivb xchg jb psllq into inc jecxz cmp mov xchg xor mov iret int mov (bad) mov xchg xor or movaps je (bad) fisubr jo cmp add repz inc scas in pop dec punpckhwd ffreep inc add test or shrl aaa add adc into add aas fsts and sbb pop loop adc divl push rolb cwtl adc or pop mov adc or rcrl sub fucom jge bound dec stos repnz ficompl mov xor push or cmp aas insl jno push xor aad mov cld push (bad) test mov (bad) jmp fnstenv scas bound fdiv mov sub adc shlb xchg xchg lock inc cs sbb jne (bad) mov jg xor push outsb jl roll fisubrl loop rcrl cmp dec mov push test push xchg xor in into and fiaddl incb cmpsb adc xchg data16 dec iret or xchg out lret push orl pop test cmp imul jns ret mov out popl in out push mov fsubrl lods (bad) fs mov int3 in cli fcmovnb and xorb jno aad addl mov push repz cs stos std xchg (bad) jb inc mov pop js mov in lds cmpsb (bad) fiaddl pop aam cmp pop in (bad) fidivrl mov fwait cmp xchg jne aaa or push push inc loop es mov (bad) iret int3 push and cmpsl jns mov ljmp push aad stc mov (bad) icebp decl xor or push gs mov les scas pop or rcr cmp cmp scas sbb jns and out cmpsl push jecxz pop popf xor xor or iret rorl mov (bad) nop sub xchg cwtl and dec out lea test cmp xlat insb lods pusha or mov pslld mov pusha jecxz inc push jno mov mov inc into cmp push sbb aas sbb adc out add ja out pop push adc repnz xchg pop bound pusha jne mov adc shrl pop loop pop fstps sbb pusha rol sub or pop adcl sub loope in sub cwtl (bad) dec mov and outsl add mov mov mov in mov and leave push mov popf ljmp lds cmpsl cmpsl addr16 shlb pushf jo loop icebp dec cli scas or insl xchg lods xor fcmovu aad jg out mov push xor mov insb jne je mov loop mov cli mov jo (bad) mov add sahf push xchg ret adc fstp bound inc dec dec dec xchg and pop jno inc add in dec mov arpl pop mov mov incl hlt xlat movsl notl iret push inc fiadd mov cmpsb add sahf xor clc pusha bound add adc add imul out xchg add mov xor mov data16 ljmp mov (bad) cwtl pushf push push imul lea cmp loope mov sub adc std insb and pusha cli xor inc sub (bad) lock jae mov inc test test adc aaa jge imul cmp in (bad) rcl call push pushf in mov std ja pop add lcall adc out imul lods cltd jo and cmpsb leave pop lcall xor push sbb ficom jl outsl push sbb inc in jmp mov xchg or cwtl lahf sti cmpsb movsb pop cmp arpl aam cmp sar push sbb imul mov sbbl add mov push adc mov jb les ljmp cmpsl dec dec lret mov sbb adc mov push mov jge cltd sbb add popa adc idivl test jae pop mov add lock xchg hlt sub js cli in cmpsl dec fsubl cli inc or pop (bad) repz jnp inc (bad) test xchg clc mov push push inc jecxz mov adcl out lods push shll ss pop test lret clc loopne pop jl fisubl pop mov xchg dec jge scas lock lcall fwait jno ret cmp (bad) cli and add cmp xor adc inc mov adc loope pop jae idivb jo outsb sub cwtl mov inc movsl out xor pop cs outsb sub test jo xchg fnstenv lahf mov iret ljmp jle ds mov jle sahf sbb pop leave insl outsb or push out les bound jle sti pop push add (bad) xchg pop xchg adc sub jb xchg cmp mov nop outsb js cmpsl xchg sti sbb jecxz add cs or inc out (bad) (bad) push cmp jl (bad) std or int3 push in imul dec xchg mov stos std cmp jg mov jecxz (bad) in out sub shl out pop ss (bad) jle into (bad) mov mov pop fcompl stos ss mov sub jp pop je jecxz jmp jbe sti mov push mov je fmull hlt or xchg dec arpl sbb aad jg mov ficompl mov (bad) pop adc sahf inc adc lods jne cmpsb popa dec das add je es xchg lock popa adc andl inc divb arpl xchg das jle dec xchg inc sbb push into push and int (bad) jl mov nop inc mov scas cmc adc jp jne ds sbb addr16 xchg xchg xchg call pop cmp fbstp (bad) mov mov cld les jbe jae outsl push stos dec mov lea jge outsb dec jb adc pop jge repz sahf xor mov xor daa add icebp lcall out mov (bad) stc fsubl and push mov add cltd cs mov or stc popa in adc imul jmp mov mov inc (bad) mov leave lods or outsl xlat mov jnp (bad) mov and adc int3 pop pop push mov dec adc ds jnp mov aam sub movsb cld imulb or daa (bad) mov mov xchg mov pop push dec sub ds cmp fstps fidivl (bad) and or mov dec cld mov insl adc (bad) push xchg xor xor cmpsl dec sub inc jbe or iret add sub pusha jmp (bad) frstor sahf cmc sahf cld sub dec imul rcrb int push lcall mov je lahf (bad) jle int3 adc sbb fsubrl loope sub fidiv xchg sbb test test or daa lret inc popf imul push popl out push mov xchg subl push jo mov test mov jb mov xchg mov imul insl mov pop mov adc lods push mov adc inc or loop aad dec (bad) lret sub in jbe xor sbb ror pusha fstpt repnz jmp mov js jae push push mov in mov fst or xchg dec dec fcomps dec loop outsl arpl fisttpll inc push jb scas push push sbb pop test or xlat (bad) addr16 dec imull mov jbe inc cmpsl or and pop sub rcr mov cmp xchg in adc mov popf push pushf pop and out mov mov rol pop xchg enter lahf add sbb int or fidivr mov jo push sbb sbb and es mov test je dec fs mov inc xchg icebp and ret mov dec adc pop mov cli imul pop add xchg or mov movsl cmp lcall add adc movsb dec push insb xchg pop push push adc xchg sbb sar push pushf push or jl inc imul sbb mov xor pop mov arpl push stc sbb jle jle (bad) mov jne shrb inc je xchg lock ret mov add lods movb jmp mov adc cmp outsl xor data16 mov cwtl loop adc lds rcrl insb push (bad) cmovg imul sbb sahf and icebp into cli shll jge leave in shll dec or addr16 fisub mov cmp jae xor fistl jns pop pop int3 mov cmp xor addr16 in call pop sub imul ljmp loop dec roll mov sbb in sub (bad) clc cmpsl fwait mov ja mov and outsl jmp jae adc daa imul int jnp xchg pop jo rcrb ror imul ret cmc rorb insb mov push mov stos add int3 dec dec outsb hlt data16 mov movsl mov adc out lret xor push sbb dec add sbb roll clc xchg repz test cmp inc out push insb pop lret jle xchg sub pop pop pop mov (bad) mulb and dec je xchg mov mov dec movsl sub imul or shlb xlat fcomi sti scas mov (bad) int3 jne mov adc (bad) adc es pop cmp into ret iret popa pop (bad) mov addr16 push scas (bad) sub xchg jg pop in aaa inc jle loop adc mov and dec pop or fcmovnb mov dec jo outsl adc jl adc out lcall xchg hlt jmp lret out (bad) xchg pop xchg leave aas int flds jbe out inc test aaa sbb push mov stos jecxz adc repz call nop bsf pop xor mov fldenv aad rorb jg cmpsl inc fwait aam mov add jmp sub iret dec cmpsb iret push pop iret sahf or call loop push jmp out jo nop inc dec pop mov arpl ficompl push leave mov pop icebp fsub pusha and cmp xchg mov or cmp add pop stc dec rorb into push std xor xchg movsb pop pop xchg dec dec (bad) jp dec fimul mov or push xor xchg (bad) in call cmp cmc adc dec fcoms shl adc sub nop test (bad) stos dec cmc jmp aaa lods lods adc push imul or jae fwait jge jb mov je sbb adc sub incl sub les dec hlt mov in xor loope or ds into mov sbb in std mov call and push pop ljmp xchg dec nop pop xor and ljmp jno add pop adc rcrb insb sbb out sub addr16 mov fstl fbld and outsb mov cs rcll push adc notl add dec pop es cmc ss dec (bad) mov sub jg rol subl ror adc dec notb push ret je fstps add enter dec and push sub imul sarl lds adc bound add lahf jecxz es mov pop and mov cmpsl mov add rolb cmp arpl cld jbe lods push pop fstpl scas jg pop jo sti cmpsl test cmp cs rorb (bad) push (bad) rcrb sbb dec push sahf push clc push decl sbb adc lret icebp push cmp inc insl iret fmuls (bad) mov and and inc aad xchg sub cli xor repnz mov fldcw sub pop mov cli (bad) xor cmp fstps cmp js subb and ror sub subl mov dec loopne jno push loop dec fs sarb (bad) lock out dec clc mov dec xor cmpsl aam mov push jnp popa jmp jno stos push xchg scas push cwtl mov add pop sbb (bad) xor jecxz sbb lret adc cmp lahf cmpb pop cmp sub adc mov test outsl (bad) int3 inc int3 cmp xchg dec push add ja sbb cli pop das add jmp ss jmp stos sbb test outsl test ljmp adc inc and (bad) cmp (bad) mov out scas dec cltd js cltd (bad) cli push inc sbb sbb scas sti into mov and into pushf and js ja sbb imull lods dec push insl xchg repnz and lret lock sahf flds leave stos push fxam fmuls or arpl rcl sub sbb jle inc and stos cmc mov loop (bad) sarb xchg inc fisttpll adc (bad) jne repnz inc and loope push xor fisubr mov pushf mov fild out add jne inc sbb rcrb mov mov jae push adc ja cmp dec in hlt push push jmp (bad) ss or dec scas push ljmp mov dec cltd jmp push and push (bad) outsl cld sbb pslld adc and lock clc daa es sub mov gs adc dec lds lods (bad) mov adc test clc mov cli pop pushf xchg push dec stos fbld jge icebp cmp scas jnp or ss int sub sbb push ds ljmp hlt push xchg adc out aas fwait repz leave pop jo adc call jae sbb cwtl cld adc dec mov push shlb cwtl xor xor jg add cmp add iret loope mov dec repnz cwtl xchg inc and mov (bad) rcrl sub popf mov inc inc fwait rolb ret or pop push inc xchg (bad) cmp lretw cltd popa pop push push fnstenv add cmp fs fwait lods out jae pop mov lahf fsubrl xchg aad mov pop or push inc mov loopne stc mov jne jl imul pop leave repz xchg mov pop daa in xor mov pusha jmp mov repz outsl pusha mov pop stos xchg sahf jnp pop aad ja push add aaa or push popf xchg jge lds mulb ljmp sbb mov fwait or mov js outsb pop xchg orl push add stos fbld loop orl scas jmp fcmovnbe popa sbb outsb xchg addr16 imul pushf hlt xor push negb push cmpsb xchg mov imul ret xchg sub cltd mov mov sbb addr16 out lret fldl mov ret xchg and or pop daa nop das push adc pop mov movsl stos and fst aaa aad pop sub or imul dec pop negb adc int3 (bad) lret mov hlt lods cld jp ret cli rorb call (bad) mov inc mov push jne outsl mov movsb popf mov stos icebp mov fnstcw or mov pop jo mov insb je shl dec ds (bad) leave jmp insb mov das test movsb sti cmp add pushf xor sahf inc pop inc inc push mov mov xchg ficompl mov xlat pop mov push add sbb iret out out dec loop mov and adc cltd incl push testl in ret xlat mov lods lods loope mov ds push lret fistl xchg mov sbb jecxz push sub sbb mov fadds xchg jne fsubrl dec sti ret lods xor js cli or fdivrl (bad) movsl xorl icebp pop mov xor cwtl popa and test sbb test sub ss or aam push mov daa aad mov sbb or jl pop das in mov sbb adc (bad) sti cli xor std adc aas aam rclb fs shr mov xchg adc cmp sub mov int3 (bad) cmp and fs call (bad) dec jle cmpsl inc test dec test js pop mov adc jo fwait cli in push cmp xor dec xchg push xchg int3 adc adc jbe jp and inc cmovnp add mov adc sub scas jmp xor std sti aam mov rorl push fcmovnbe dec pushf sbb bound adcb inc jg out add stc repz mov mov aas loopne mov pop mov sbb repz pop sti clc xchg dec mov xchg xchg sti ljmp xchg jb (bad) sub adc cmp stos cltd push inc mov (bad) xor nop mov dec fadd jg lahf (bad) imul dec jns test and inc adc push adcl cmp inc xor aaa nop push cmp out clc push mov clc mov add out xor jae mov decb aas or lods loope call jns pushf lock add jne fldl insl jmp cmp clc les stos stos pop lods add cmp xor jg dec and mov sub push (bad) sbb jle leave adcb fisubr jg mov dec sub out sbb data16 and fadds xor (bad) test out xor aam popf mov add jbe ret sub enter scas fidiv sahf cmp aas cmp mov mov (bad) jns mov sbb dec popf pop cld jmp xor pusha dec mov xor mov push movsl out sub inc out imul sbb mov leave out aaa into std fstp cmp cmp or xor or jnp (bad) mov popf mov loop xchg call inc cmp and xchg scas repnz and pop xor out cmp hlt cmp aam imul push lret cmpsl test xchg enter nop popf cmp jl stos movsb insb push pusha dec mov adc jmp jmp mov fcoml mov gs lret and fisttpll les mov xchg sbb data16 jp jae js roll cmp jnp or mov xchg shlb jns ret sahf bound adc lods or lock loop sbb xlat adc mov push push pusha cltd sbb xor cmpsl inc rcrl mov fildl ja pop mov jae mov cltd test pop jb je jbe dec loope popf mov aas push mov hlt pop push pop mov sbb xchg popa jb xchg dec loopne cld or push arpl jnp (bad) xor rolb pop pop mov fmuls insl js pushf jl pop xor js adc or mov (bad) int sub in mov icebp call cmpsl fs das sub mov dec leave xchg mov sbb adc sub in add int stos test icebp fimul scas cmp ret push push std inc push in fidivrl fadds test jns mov scas fbstp (bad) in loop mov sbb fcmovu adc and mov add mov lcall xor fsqrt jne (bad) ds ja lahf movb scas xchg mov sbb ret aad (bad) cwtl test adc je or adc push (bad) push xor insb inc fs xchg xlat nop xor xchg mov push stc imulb adc adc scas dec test or jnp push xchg sbb sub inc add sarl and out (bad) mov xor mov clc imul ret push aaa pop mov push fistpl stc pop fldcw data16 sbb adc addr16 std nop cmp insb pop mov pop pop es inc enter sub enter and xchg pop xor sbbb mov aaa test (bad) popf das inc dec jp enter loop sub sti adc iret mov mov (bad) rcrb ss sub scas pushf xor (bad) jg nop ret push les pop hlt sbb cmpsb in mov loopne (bad) mov xchg inc icebp inc mov add jne fdivs test nop dec test and repnz stc xchg into dec pop (bad) aam cs sbb cmp pop jbe pop push lea mov cmp stos lret cmpsl sub out insb add je popa xor jge les xchg mov (bad) subb lret pop sbb xchg orb (bad) (bad) cltd push int cwtl jb leave loop (bad) repnz pop sub je imul mov fadd std popf jns inc inc out fxch pop cmpsl out fstpl movsl adc mov jmp stos cwtl push enter hlt test (bad) push aas dec bound mov sub rcrl int3 mov adc lret popf test out xor xchg add push inc imulb (bad) mov stos adc cmp mov ja in dec inc and cmp stc (bad) in mov fidiv push bound xor inc sub adc (bad) mov leave inc jno pusha aam or aam mov cli pop lea push daa xor inc sub movsl jae jmp cmpsl les or or push pop arpl stos cltd and jns dec inc push cmp icebp pop dec pop jle cmp xor sub jbe test clc inc int pop out xchg test jmp cltd push loope mov std iret loope adc inc xor jne mov sub and jnp mov adc ja rcrb ja jl mov daa dec inc pop nop mov adc push out add push mov inc jp int3 jb xor outsl push push stc (bad) icebp sbb xlat (bad) mov rcrl jne pushf xchg das pop add or pop pop cmp (bad) mov sbb inc insl sbb cmp jge mov push orb xor jb jae,pn jecxz mov xor and jl jl mov cltd pop mov sub js fimul nop sbb insl loopne ljmp enter mov ds pop dec or cltd mov dec mov adc ds popa test pop fmull fs mov out insl out addr16 fistp mov and mov xor int add mov mov enter arpl std pop push xor dec movsb mov clc (bad) clc inc add cmpsb mov imul xorb lahf cmp in scas mov sub push xor sbb sub shlb mov out cmp adc mov mov sbb or dec mov pop fcoml mov cmpsl jmp push cld imul lret out and sbbb imul mov jp push test jl sbb or pop pop popf sahf mov lret jns mov xchg rolb loopne leave cmpsb cmp xor add arpl scas adc add (bad) dec or mov rcl mov lcall cmpsl jo clc sbb out dec inc inc cmp pushf add or stos mov jl fild cmp inc out pop pop push mov and inc (bad) pushf into iret mov nop mov movsb sub les (bad) mov pop out pushf push dec inc cmp mov push fwait jge or negl cmp push dec lret sub faddl inc mov pop je test mov or fwait mov aas mov (bad) jp mov std std pop jle fst movsb add dec loope adcl xor adc mov test and push inc jmp js ja pop ds test dec xchg jecxz push adc mov fadd push xchg jge loop jg or cmp sub dec mov push sub popf test in mov dec jnp push popa aas loope ret adc pusha xchg xchg sbb pop shrl fs (bad) (bad) jo dec imul mov cwtl mov insl inc lret or xchg adc dec dec adc ss (bad) xchg push pop push pop mov movsb shrb xchg (bad) in jecxz mov mov mov dec (bad) mov shlb pop mov mov test pusha dec push clc cmpsb inc sub pusha into xchg xchg clc inc out leave xchg jb push push test hlt aam mov test insb in push in jle mov (bad) jge rorb repnz out pop xor scas cmp mov or sahf mov and cltd xchg xor test adc or repz mov lret (bad) lock hlt lock in xor mov xor cmp push mov mov push movsl xchg (bad) or mov push test xchg (bad) sub cmp call add or jge push and repz xor js into stc loope inc adc inc inc cmp adc test add (bad) push sbb call mov std cltd gs push pop negb pop popf into in out mov cmpsb sbb xchg mov sub cli sub mov movsb imul test test xchg repnz pop pop cmpsb mov push cmp cmp jb inc ljmp (bad) cmc cmp xor xchg (bad) or (bad) jbe (bad) data16 or pop lds js push nop pop and stc lods adc je (bad) in ret sets jge push or jns add fwait sbb sub (bad) stc jg movsl inc cmc jbe stc inc push jno sub popa andb shrb adc mov popf loope push daa adc inc inc adc xor jbe int3 jecxz sub push xor and rcrb jecxz sub mov dec sbb out add scas mov pop or fs adc pop xlat or mov or mov xlat das imul mov ret andnps jp xlat imul push daa mov mov or fildll dec xor arpl fnsave and lret gs mov jb hlt cmp jle mov insb rcrl adc pop xor popf movsb inc mov push repnz lods addr16 xchg fs push mov test inc (bad) jge lcall scas pusha fildll cwtl jae fbstp into sbb dec xlat (bad) cmp fldenv mov hlt mov and jmp sub pop rcll jg cmc outsl stos bound and scas xchg jb imul pop cwtl mov je ret scas and push jp out add lahf push push not dec imul xchg mov sub aas sahf pop icebp cmc aaa rcrb add das (bad) repz xchg icebp adc rol insb loope popa xor mov subl mov jp,pt (bad) rclb or dec xor das sbb dec cld cmp lods je sti les pop lea pop shll insb insl or rorl clc cmpsl negb int3 test push test enter dec fninit (bad) lar mov jns xchg jge dec gs dec push fdivr gs inc ja jmp stos inc mov stos and xchg lahf pop xchg (bad) cli test xchg outsb mov std or xchg inc sub sub and fdivl sbb mov call cmp das lret imul pop inc and jmp fucomp movsb fnsave jmp mov test lret (bad) (bad) out mov or fdiv add sub gs sti xchg (bad) outsl fisubrl mov in mov inc arpl push xor jle mov stc cmc add fnstcw clc out push bound push lcall fstpt push mov add cmp lcallw iret movsb dec add inc sbb test leave sti xor gs jae push icebp pop cmpsl nop popa adc pop mov sbb sahf mov cltd add adc ss pop out (bad) minps cmp sub ficompl or sbbl cmp jl jnp sub ret add inc es out dec cwtl adcl sarb mov add mov out imul and shrl mov push cmp mov sbb jb dec jl push mov add jp mov xchg out sub sub lods das mov mov repz jge ja hlt xchg icebp fdivrl enter ret pop cmpsb clc lcall test pop imul repnz cmc nop fdivl push pushf pop inc pushf push dec and out (bad) test pop mov jmp jb mov shlb mov movsb (bad) or jnp test arpl pop loope cmp out out psubusw outsb mov inc out std pop in dec pushw es xchg and (bad) in int in jecxz inc jbe lds pop ljmp inc es sbb fdivs or xor sarb ret jmp movsl jle sbb insb sti cmpsb js pop lock xchg jge and adc in jnp cmp enter in adc insb mov fwait cmp mulb rclb push push mov dec in pop (bad) lret insl rolb inc cmp mov lcall sti data16 std jns insl shrb jecxz xor popa sti ret cmp jno cmp sub jbe andl fisttpll or and mov add bound ficompl xlat cmp xor dec push push insb ljmp xchg jmp in inc push ror pop mov xor lret adcb fisub or test adc iret add push movl xchg mov dec adc xor repz movsb mov ds lods test jae or and mov mov mov cwtl out xor insb aam jl mov pop es into dec mov inc enter dec pop push mov sub jae jp adc nop add adc test xchg mov mov push lahf sti test hlt jmp rorl jge fs mov popf out jmp aaa push mov out js push jns push push popa (bad) pop jge push rcll shr pop je cli pop dec stos push loop xchg lcall in into ljmp (bad) add push in addr16 jne or mov subl test dec and mov scas mov test mov popf and cmp rcrl jl leave jp iret sbb rorl mov cld jb sti push and dec clc mov lods aam and test loopne mov adc test pop stos jl mov or cs jae add pop xor cmp lods (bad) dec mov jecxz hlt int3 mov sbb inc pop ds dec roll mov icebp (bad) rorb jmp cmc mov xchg mov pop sub mov sarb pop or repnz xlat std movsb ja addr16 into fidivr adc xchg or jne stos sbb adc inc and mov imul scas mov pop cs xchg (bad) mov push or pushf cmp mov nop sub mov adc pop cmp xor mov repz mov and icebp mov pop gs xor lods sub or in popa rsqrtps push in es push add movsb mov cmp pusha inc (bad) stos jno jnp mov (bad) inc xor sbb adc xchg pop dec jbe and scas adc jno pop rcr push pushl fisubr aam adc fisub aas ffree std add pop push dec mov ret mov or or movsb adc scas insl je fistl mov adc jnp repz inc sub mov add in and push add frstor mov (bad) iret repz daa fimull bound fcom jecxz mov data16 pop test fadd cmp xchg addl and push lret xor (bad) jnp xor mov (bad) jmp dec pop xchg sub and fdivrs enter sbb inc sbb repz in lods test xchg mov lea (bad) aas out ror insl test mov inc arpl jno lret insb jno lret fwait rorb xchg sub mov imul pusha mov ret xor fucom inc (bad) mov jge inc jae ret bound push clc push lds jns mul inc jnp adcl outsl nop (bad) mov sti xchg sbb lock push clc std or in dec fidivl pop pusha cltd cmp add or ret fsubs fnstcw add mov mov mov arpl aaa aad jmp pop xchg mov add jmp add sbb push sub mov push lret nop out jg iret lret jb rcll pop sbb jg rep or adc mov push pmulhuw repnz inc xchg dec sub stc idivl mov scas dec and fisubl jnp xor xchg push les jbe push sub ret aas pushl shlb xor inc xchg mov xor clc jecxz mov in addr16 mov xchg push fldenv inc dec (bad) outsb jo les push jmp decl pop cmp loopne add (bad) sub pop add sub sbb mov (bad) xor outsl or test push or andb push (bad) stos lock xor mov sub jbe jns (bad) pusha cltd cwtl lret int cmp cmpsl lret leave jl scas xchg pop shl in and pop (bad) lea push push mov fisub pop cs adc lret mov mov lret or jl movsl or scas add jns xorl lock push hlt stos xor sbb cmp dec call aas call sub mov test pop shll or loop sbb shr jae jp dec jge nop lods mov loopne sub adc add sub add aas (bad) mov lret xlat test add les sbb adc sub outsb int3 push sub lods adc cmp and push xchg xlat jmp sahf adc add sbb int das test jecxz cmpsl push in test std dec inc js aas aas sbb inc jg xor hlt or popf sti lcall dec jmp test into aad mov cmp dec mov push mov xlat sbb pop jnp std int mov std fxch inc test jns pop fs gs ss mov rolb add call push cs xchg sar sbb xor inc push fsts cmp jae mov add clc lcall aam cmp add lret jl jnp xchg ljmp pop cmc nop iret aad push repz sbb pop icebp les aam popa xor out std pminsw pop inc xchg jmp jbe adc pop dec (bad) pop ret test imul mov data16 sub daa jp or call pop callw add or push dec push outsl sbb pop push les mov jl cmpsb mov jno mov sub and int3 pushf out rcrl into orb test loope test sbb push cmp mov test inc bnd mov mov mov or cmp loopne pop int3 ja aad jne cmpl (bad) sub jmp lahf fs push cmpsl xchg test jge jmp sub fbstp lahf mov mov pop movsb sarl dec call or (bad) pop sub pop pop xchg and in xlat ljmp dec jle mov mov test insl icebp mov loopne cmp test or ss stos mov es dec leave adc cmpsb (bad) aaa cmp xlat jp sub mov xrelease (bad) or movsb or fistl das das dec addl repnz xchg lahf or (bad) int sbb or mov sub imul test push push mov mov mov ljmp in jle icebp or popf and add cmpl sbb mov sti mov pop push lods push lret mov mov push test fimul adc lret scas call xchg or jns sub sbb inc cmp cli cli sbb stc test test movsb pop lret pop push sti fwait lea sbb xchg jne aam mov je test inc fcompp mov push mov push lds stos cld jmp xor enter mov push fstpt out loope loope mov sub ljmp nop dec xchg (bad) std xchg sub mov aas (bad) (bad) cli inc pop sbb and mulb andnps inc jmp out cmpsb sub mov xlat test cmpsb pop mov pusha and psraw push xchg xchg andl or jge sub es xchg loop icebp sbb icebp frstor jmp mov pop mov cltd add cmp fsubl pop ficomp or repnz leave jmp stos jbe pop jae cld jo adc mov dec add inc pop xor pusha mov jae pop jnp cld sbb in cs adc xchg and mov jnp pusha mov push daa or clc cmp jg lahf push sub push aam jmp fucomp lcall das ja pop cli mov cli cld pop inc loope in cld cmp pop into mov int3 sbb testl lahf insl add (bad) mov sete mov push or imul jge inc or stos lods mov lea fucomp jns dec loop jmp scas data16 jp pushf mov lods inc mov jmp xchg mov out or ret aad cmc mov jl mov decb xchg push repz add mov jg aas or rcll insl mov pop cltd mov imul call pop mov dec sar push cld loop or insb int3 cmp mov pop sub mov pop sub mov and outsl dec in sub and sbb repz push adc nop inc xchg sub dec jl daa mov adc or mov test add aad rorl outsb and mov sbb stc xchg int3 mov xor jge push xor pop lret mov xor jg inc push outsb out push ret mov dec pop fisub mov push adc out rorl mov jmp cmc cmpsb sbb jb es or bound sub testb xor incl cld pop in jae (bad) (bad) (bad) jne ret lock addr16 push in adc daa push dec mov cmp xchg lret enter sbb repz mov shl fs pop stos push (bad) jl,pn movl xchg mov in push pop inc dec scas movsl dec (bad) cmpsb ss mov push and jl jb xchg mov test scas lcall lahf lret iret sbb push sbb adc div movl fcoms outsb xchg stos das and cmpsl mov jl sub int push out mov inc cmp pop sbb push push xchg dec dec and stc add data16 rcrl (bad) inc cwtl add clc sbb divl pop int3 jbe js test jecxz xor pop mov sub aaa pusha jne xor xor cli lods mov out jbe int3 xchg pusha jmp cmc dec data16 rcrb nop sub inc stos ljmp inc fiaddl cmc jg fnstsw scas pop in into add stc mov mov mov lcall js cmp ret incb xor icebp xchg adc shlb dec jne sbb push push xor mov lods inc fwait repz pop popa stos add ds out push cmpsb and adc cmp movsl xchg pop std pop enter loopew outsl into xchg clc cmp mulb push xchg jg out adc lret popf mov aad cmp sub dec and ja arpl mov push cmp stos xchg arpl xchg aam (bad) aam ror dec xor mov push frstor sti inc loop test inc mov or sbb mov lcall and sub pop cmpb mov aas mov notb mov add add push icebp in mov pushf fcmovb (bad) add mov fistl shl inc xor rcr pop insl mov stc mov pop daa jmp pop cwtl (bad) jne add (bad) mov pusha cmp cmp xchg ret add add jns pushf lahf fistl out pop jne dec insl loop jno pop xor jl out shl and insb js rcr (bad) imull psllq xchg arpl push orl out imul rcrb xchg in ret int3 adc dec mov addr16 lods ds fwait orb stc mov test jle scas in add add shll push je enter and mov sbb xchg ret sub xor in push and fisubr sbbl cmpsb jle push in and pop xchg adc popa xor lcall test clc into xor bound roll lods inc sarl pop dec insb mov mov leave cmpsl sbb xor cli jae xchg mov inc push xchg push imul mov scas mov stos imul mov sahf and icebp push pop out lea shlb xchg push push and out (bad) xor push pop scas xchg je cmp sbb ret xchg pop test xchg xor mov (bad) movsl adc mov in add fimul movsl stos test sahf mov shll mov xchg mov movsl dec xor fdivl pusha cmc rorb pop mov popl cmp add loope inc mov add pop lret push or inc xchg test adc (bad) fstpt cltd jae cmp and ret or inc xchg mov (bad) inc push mov sub pop fwait enter imul in arpl nop xchg xlat and sub fistp mov lret insb subb xchg adc sarl loop fadds inc test test mov ret das add sbb aaa push jp aaa push ljmp and xor (bad) in pop test push fst pop push mov xrelease add adc pop add cmp mov andl xor rclb std jecxz add mov test or xor pusha js insl popa addr16 insb insb add mov xchg or cmp sbbb in cmc mov and punpckhwd into add cmp pop push imul jne push xchg mov mov xchg (bad) (bad) lods push movsbl out sbbl add rcrb call jbe dec and lods mov jle push fucomi stos mov mov adc test das mov popa sarb (bad) xchg adc jmp in xchg dec sub or icebp add fucomp int3 and push jle xlat inc sbb inc fild mov movsl cmc cwtl jbe xor out or jl clc or sbb and and xorb pop shrl mov jno inc push mov pushf or movsb mov sbb mov notl int3 loopne mov mov scas sub inc add addr16 insl sbb fild adc sbb fist repz loopne outsb push mov inc add ret or jnp stos sbb or or xchg fucom aad xchg xchg aaa jp add sbb and push jg ljmp insb lds fdivs ret push les xchg jecxz arpl adc mov mov xchg cmpsl es arpl mov adc xor inc push dec adc bound cmpsl xchg imul ror mov stc lret mov out adc ficompl fxch daa shrb mov jle out and xchg or aas addr16 jns gs ficoml adc dec cld aaa sbb or inc dec lods (bad) and lcall xchg jae push push nop or jno lret lds scas outsl adc xchg or push ja jle hlt ss xchg fwait popl lret divl fs popa pop emms mov jns adc cltd lahf jmp (bad) adc sub test xor lret inc (bad) pop stos test ret jbe int rcll das and (bad) cwtl add sub mov and jbe cltd xor das xchg sbb sti lods push rcl ljmp or pop push cmp add pusha fucomip add add pusha lea je lea lea pushf lea call lea call pushf pushf mov pusha xchg push push lea jle jae movzbw lahf movzbw xchg pushf lea pusha movzbw mov setnp push mov lea bswap call pushf push lea ja jb xor pusha ror add jp cmp dec movzbw call cmc sub pushl pushf mov lea lea jmp and or inc pop insl lods jge lahf xchg mov pop sub jae iret aas mov mov push or data16 outsb scas inc fcoms out lea test test popf xchg jo xchg jl inc sub je pop addr16 ficomp lock mov jns xchg outsb imul xlat loopne mov adc push scas ss dec mov or fidivl lea adc sbb call lret arpl dec ss jne mov mov mov mov mov ret jb inc add shr mov cmc call jmp jl daa std xchg or xor cmpsl pop cmp inc pop dec insl (bad) icebp adc xchg xlat fistpll cmc loope mov or bound imul mov aam sub inc mov repnz push inc stos stos int fcmovnu push fst mov jge test mov xlat sbb jbe cmp add add mov inc aam sub sbb push cli or adc aam push imul stc mov call sbb pop fcmovb dec push repz cmc or in out dec dec xchg mov cmovns push lock std std test xchg fs mov ret jae aaa ljmp xchg pushf mov pop fidivl xor and sbb add dec push and aam pop int3 add in sub movl mov xor es in xchg push mulb out add dec add pusha enter rorl lods outsb mov pop jne rcrl add xor popa xchg jge fwait mov pop sahf xchg sub jle add fwait mov jae xchg jns daa fwait lea jecxz push mov xchg add push enter jg fnsave test (bad) push push xchg jno,pt lea add mov out test test adc and pop mov fidivr out add lret jne xchg out mov nop lock pop jno mov mov ficompl out add add or das jns arpl sbb or das inc mov scas (bad) int add pop lcall dec movsb bound xchg push jmp jmp out adc mov inc jno std sub and xorl add fildll sbb aaa jb and outsb inc and rolb (bad) jo jp sarb mov (bad) dec and in pop (bad) push lds fnsave lods test xchg (bad) jns idiv and mov mov in pop std hlt jnp (bad) and pushl lea pusha lea call pushf cmc mov push bt call mov pushf xchg mov setae push mov movb pushl jmp pushf lea jne pushf neg mov pop shr clc call jmp call pusha movsbw rep jmp push push lea jne setge lahf movb setg movsbw ja push mov jmp mov pushf cmp pushf jmp mov or push pop pop mov std pop lods or inc jle pop sub pop dec xor lods testb loopne jge dec sti jecxz int pop lcall jmp adc sub sahf push jp and hlt outsb outsl fldcw and adc and inc dec dec aas pop fsubs pop mov pop mov aas mov ds sbb icebp pop scas and lock or mov (bad) or outsb inc pop dec bound lcall sbb hlt pop mov mov outsb icebp sti sub dec mul add jge inc xchg lahf or fbstp subl jne or addr16 lret push sti repz stos icebp scas cmp aas jnp popf test jle leave movsb cmp lods (bad) mulb outsl mov orb mov out sub jmp or fisttpll mov pop push or fcoml fiaddl outsb push adc adc mov sbb in inc mov lods jmp pop dec movsl xor lods subl inc pop cwtl sub sub cmp jnp mov rcrl push cmp (bad) inc jne arpl pop mov (bad) pop fwait ss scas test mov dec xorl or dec xchg inc inc lahf imul xchg cld push iret out and imull cmp insl movsl sbb fs xchg inc je adc push mov hlt cwtl mov adc xlat push jmp aaa repnz push pop jno pop fwait cld xor pop cwtl dec fidivr add sbb adc (bad) fstl ret pop sub cwtl pop into adc enter push xchg pop ret outsl adc jo cwtl or mov mov je jl js cmp pushf inc cs lods jp dec sti pop popf int3 mov cmp mov jns sbb das xlat dec add jge out int jo mulb mov mov out xchg add cmp lret fidivrl xchg and adc inc push cmp jp xchg jl jns arpl xlat enter je cwtl adc xor pop cld stos aam mov or (bad) jns and pop pop leave imul push lods mov mov sub jl cmp testl fdivr (bad) mov dec push inc mov mov inc lock insl push add ret test mov xor pop test call les push cmp out inc sub insb int movsl pop das mov mov loop or sbb addr16 movsb mov aad pop lret or cltd or mov and cmpsb les insb repnz or mov test hlt nop hlt cmp movsl lret xchg lock jle ja xchg (bad) push pop daa lods xor sub ljmp jmp xchg inc jg lock pop mov dec incl mov test mov shll fstl and and push cmp fistp and lcall push lods dec pop push data16 aad fisttp pop (bad) out adc ret jmp and xor mov xchg jp movb push pushf data16 gs dec clc push in jmp popf dec scas pop test cltd pop int3 popa cltd mov test pop stos or rcrl pop xchg jp iret sti (bad) imul test adc imul ror jnp cmp cs test mov sbb push out lcall pop scas inc push mov negl adc jns flds (bad) fsubs pop scas hlt in push cmpsl pop or xchg inc cwtl pop test xor cmp leave out (bad) clc push subl and cmp inc and add add jmp inc sarl or add add cmc or mov insl test and loopne hlt pop out rclb les test pushf mov das push adc jae mov fldt sub cmpsl sti pop inc sbb cld fldenv cld int3 pop fldt or aad mov inc (bad) xor jbe cmp sub clc lret js and adc or fcoml (bad) iret lret stos cmp push and xor mov dec cwtl and jnp sub inc mov aas xchg cmp and pop add jo daa pop mov lea sahf pusha pushf lea jb jb stc cmp cmp inc mov lea sbb movzbw lea lea mov push call lea je ror dec setge push add movsbw inc adc sub inc bswap lea shr and bsf ror pusha mov stc inc jmp pop repz movsb or push mov and mov jecxz jecxz adc cmp adc (bad) aas inc fidivl in or and sbb xchg mov sbb cwtl push xchg fnop push pop dec push fnstcw pop (bad) ljmp imul fmuls cmpsl ja or adc dec mov dec xor orb faddl sub push xor aam mov jb or xchg jnp add sbb adc js mov outsl outsb add lods ret pusha pushf lea jne pusha jmp cwtl call ds andb pushf push inc cli jbe cli enter jle push sub jl mov or addl arpl mov leave pop xchg add mov lcall push aam mov push cmp sbb add or andb push mov jb add popf loop mov aad test xchg movb mov call data16 movsl or xchg add or pop mov mov fnop push fs dec stc add cmp aam add xor pop mov scas mov js adc cmpsb or cmc xor sbb int3 xor sbb call insb lods out pusha lods cs fwait add mov sti adc or (bad) hlt arpl add lock pop ja add popf add xor push pusha outsl jae push rorl mov xchg cs in lret and scas mov das mov mov js outsl icebp stc divb or adc into xchg rcrb clc xor cmpsl (bad) in icebp lahf push adc mov cmp clc lods jne icebp or xor ficompl (bad) repnz pmaxub inc (bad) adc dec mov bound scas movl xlat out sbb mov lret (bad) int nop movsb pop jns pcmpeqw mov lods hlt adc es jo daa mov ja push notl mov and jo jmp inc mov fisubr clc push fs xor and mov jmp add (bad) jne cmp (bad) lcall jne lea ja push jmp jmp mov xor lds (bad) jno scas in fadds lock testb stos inc mov into sarb enter xchg sti loop cwtl push (bad) je pusha lods out dec adc call ljmp (bad) arpl sbb test sbb ret pop loope dec dec inc push mov adc negb push (bad) inc test push inc daa dec and jp aas scas std pop pop sbb test xor test dec shl cmp add mov inc cmp mov out int (bad) fcmovnbe pop lods cld mov out cmp pop loopne mov xor ffree fisub cmpsb mov in (bad) sbb in mov rol in dec pushf xchg fwait xor and je bsr add bt pusha sub ror sub bt shr btr sub call (bad) mov mov inc test xor out jle sbb xchg out push inc or pop fildll popa loop shrl push mov in mov and int3 mov (bad) dec xor push call inc lret adc push xchg sub sbb (bad) mov mov jmp add jg xor mov ret and jbe popa (bad) mov jne cltd cmovle mov movl pop iret out imul fstps add sbb cmpsl gs (bad) faddl pop xchg stos fldcw pop cmpsl pop push sub or jnp ret xchg mov push es sub inc push add mov push pushf stc mov call in cmp inc pop xor xchg fistpll ss push sub jmp push fs mov mov xor pushf pop cld add notb cmpsb cld movsb cwtl push adc fidivl push int3 ret cmp add iret cmp xchg dec movsl cmp add sbb push inc sti rorl add sbb lret pushf mov pushf movb push lea jmp cmpb jne shll shll push lods not sub ror not mov pop ret dec mov mov or insb xchg add sub fdivrs cmpsl xchg pop movsl xchg (bad) scas adc mull jle gs add mov push clc (bad) cmpsb add mov hlt xchg mov sti push rorl aas jle and pushf xchg jnp inc lods mov sarb icebp push or addr16 rcr jnp js dec push and sub and cmp mov les xchg or scas xchg out or mov out in pop fwait cmp cmp pop cld icebp outsl (bad) (bad) mov test add mov mov test pushf mov pusha test mov pop cmpsb out ret sbb mov js push je adc pop stos stc bound or cwtl test mov incl jbe,pt push cltd nop mov mov sub data16 xorl ret adc (bad) dec data16 mov add stos call loopne xchg inc movl push js add cmc icebp mov adc (bad) xchg mov jge jns sahf sub in jecxz gs push mov sub repz cwtl sub pop pop jno inc and outsl imul pop cltd loope das jecxz (bad) sbb mov sub adcb jb lea stos addl mov sub mov andl jnp cmc or or add fwait pop sub push sbb dec test repnz jb inc pop pop pop sub inc lret insb cltd shr and mov add lcall sbb dec xchg sbb fsubrs xor imul jns and inc jge and mov andl icebp (bad) pop faddl fcomps movb pushf lea jb lea mov stc neg not mov mov xadd cmp mov dec add sete xchg movzbw setl setb pushf push lea pushf jmp pusha adc jmp test or inc fstpt (bad) xor and pop xchg cmp jns pop adc jle mov mov xlat mov add mov clc mov std test pop ljmp sbb fsubrl popf (bad) jb sub dec loop cmc mov hlt xchg jge xchg addr16 jnp das inc icebp mov jmp jne (bad) aas xor lds clc pop fisubl call sahf xlat dec adc cmp (bad) rolb cmpl xor pop jb cmpsb loopne adc lods rclb xchg sbb imul andl int3 xchg mov std adc push std cmp lea ja push lea call jmp pop loopne push lods or and cmpsb out fidivrl hlt fiaddl cmp int3 lods dec pop (bad) inc mov mov sti lock pop cwtl xchg rcrl sti jnp jp inc mov jbe fwait add sub pop push adc push push mov cmp pop jno mov xchg add lods or cmp mov fnstenv mov movsb aas jne sub sbb loopne lret add xchg movsb gs and into hlt cltd in or push cltd mov daa inc idivl sub jl add iret jle cmp sub cwtl (bad) je mov test in sbb push call jae add call jb mov shl lea call add pop ret push mov push sbb pushf pushl jmp push lea jne cmp cmc stc bswap mov rol pusha sub not lea cmp call push movl pusha movb pushf movb lea jmp lea jae add btr pop sbb movzbw pop sub mov mov shld cmp pushf mov pusha jmp lea call btc add xadd aam pop sbb btc shrd pop pushf stc cmp pushf call pushf cmc test mov mov call lea ja clc imul test bt bt add pusha pushl lea jmp dec push fmull scas or cmpsl leave pop mov add out (bad) aad sbb mov flds (bad) aam adc addl xor adc pop mov adc sahf and jnp or ret (bad) cltd jae push incl mov loop push popa dec loopne xchg or sub ds call push movsl sarl xor or cmpsl cltd jb mov or adcl inc rol or lea sub lock xchg icebp add xor xor aas or (bad) and in in sub loope in mov lock xchg mov jbe lock jg (bad) outsl jae daa pop lahf aas out cmc xor loope frstor stos inc mov repnz fidivrl into movsb lods loopne (bad) xor ret push adc and cmp mov (bad) push ret cs shrb (bad) xor push shll jecxz pop sti pop jp xchg xchg xchg cmp dec jmp jg movsb xor (bad) dec cs xchg shrb movsl es mov or cld inc push mov mov add sti jns pop rolb ss mov int sub and push popf cmp mov call cmp mov test adc inc mov adc xlat add ret push xchg je dec enter stos push lods loopne sbbl xchg repz outsb xchg cs adc andb add hlt push push push mov sbb loopne int3 shrl jnp adc stos mov add cs lcall push sarl imul inc mov jp pop push jecxz xchg lret cmpsb dec or int out dec cwtl xor into inc arpl add mov mov dec mov pop pop mov seta movb pusha lea call in popa loope or cld test xor in or dec adc xchg push pop mov dec or lods gs fs jns outsl mov pop inc mov mov inc sub shrl test xchg xor test sarl dec mov push pushf or ds mov mov mov decl push fildll xor push jge jnp and data16 and pop mov mov js adc jnp cmp ret push xor mov push xor sbb sti pusha adc fstpt jns iret sbb data16 push ljmp insl sbb xor stc cmp jno adc inc xor fidivrl popa push test aam mov jg push jnp dec fsts jnp arpl cmpsb adc daa mov (bad) jno fldenv inc sub cmp pop cli adc test sub hlt pop or enter loopne sbb mov sbb dec dec jl call pop movsl mov xlat cli add into push inc das mov dec add dec movups adc push int3 cs and ret pop xor pop pop dec cs dec sti aad xor and pop push inc insb mov mov fsubl js mov sbb addb dec popa mov xchg push loope push pusha mov lret pusha sbb or adc sti ss or aas lcall push xchg shrl imul xor sbb out insb lret jl mov xor lock push sar dec aam dec cld xchg and sub and pop push fstl in mov fidivrl ljmp mov aam pop xchg push imul lock push adc call sahf popa jge imul mov mov jns jbe sbb js pop rcr xor cmc xor sarb adc roll sti lea lret mov in push (bad) mov mov mov repnz sub shrl nop push imul je or mov iret dec dec adc je and pop inc sbb sti push fcoms iret icebp out fadd jg push in popf xchg xchg cli (bad) mov mov ret inc mov add call pop (bad) cmp out cld pop call mov or (bad) xchg xchg push add test inc mov inc aam les sahf mov outsb mov cs mov xor mov aad sub mov (bad) xor inc mov lds pop in mov or or pop test cmpsb jge addr16 mov mov mov sbb out xchg cmovs mov icebp gs push mov daa insl insl outsl mov lahf and scas adc mov xchg jb adc stc loope lret inc cmpsl int3 xchg jp jns sbb fcom inc lahf aam add in pusha leave int3 sub add inc gs outsl insb fs popa je inc add bswap pushf pop mov pushl jmp outsb (bad) adc fucomi lea push sbb (bad) sti fwait mov jne xor jg sti movsb mov sub clc js int3 adc test mov lret cmc cmc (bad) das or imul mov pop cli cmc in sbb fisttpl sbb sbbl shrb inc clc out jbe cmc test cmc mov mov insl lods xor or cmp sbb lea dec test mov dec pop loopne and sti jns cmp imul scas call mov or insb and push pushl ret push lea jb lea mov cmc mov test push stc shr pusha adc test cmc bt stc sub stc shl pushf call and lods mov inc repz push cmp mov and cmp jo push add adc je jb mov mov fwait cmp adc push xchg test cwtd test pop push push jb pop or in push dec inc cld jg fdivs inc cli jae in (bad) fstpt data16 ret icebp adcl out out xor jo xchg arpl pop mov xchg arpl inc lock adc push sub fidivr inc cmpsb insl cld push push mov rcl mov mov roll hlt idiv xchg push push loopne (bad) ja out jecxz push mov sub out mov out or stos jno or pop cwtl scas sarb mov int mov jnp jmp push (bad) cmp ja std dec push test pop xchg jns inc or pop gs sub adc push (bad) jl into fidivl sarl repz pop dec jge mov lret pop sub leave dec adc (bad) xlat (bad) jg out inc popf inc das js cmp sub loopne xlat sub stos (bad) dec and cmp aam scas adc mov mov (bad) nop mov sub das inc mov (bad) push test push iret push mov and outsl mov daa jno dec and and jnp repnz and lods mov (bad) and fwait mov mov push mov hlt dec int3 add or aad scas adc jbe mov mov cmp ficomp ret sub xor scas jo dec mov jg push call inc xorl stc mov jle js fnstsw test lock push sti adc jp jle outsb push mov cs inc jno negb out add jbe jge sbb xchg imul jg lea or iret loope repz mov xor inc mov fistp int3 das in cmpsl xlat dec (bad) jg test mov cmp gs popf mov or insl xor mov (bad) hlt stos test loop or and xor mov xor lods frstor jp push js scas sbb cmp mov jns xchg mov jg cmp pop jecxz mov or (bad) jbe or sub jne in jae lret adc icebp xchg (bad) je aas frstor jae inc jmp push aam pop loop jnp ss jb popa rorb test push ret orl fs jne pusha movb setae jmp push jbe (bad) mov inc mov stc or adcl stos leave lahf mov jbe jl je jo jo mov and push inc xlat dec inc lret sub add prefetch or push add mov (bad) cmp stos loopne mov adc mov scas outsl movsl xor test mov or mov rorb lods (bad) int pop movsb enter inc (bad) push stos mov das rclb (bad) loopne pop cmp xor jecxz bound fdivrs cmp in rsm or sub lret inc movsb pushl rcr daa pop lock es insb push adc cmpsl mov inc mov sbb xorb dec rolb push sub rol pusha call inc mov mov lods sbb or mov shrl mov hlt cli xchg cld push insb (bad) hlt push dec fiaddl dec mov sbb lock xchg decb call pop pushl sub js push sbb (bad) sbb cmp int3 and pop aaa out pop jecxz int3 add push jmp cmp iret xchg das repnz ret daa outsb sub fildll push jmp stc out (bad) call call lea sub lcall mov sbb (bad) imul test mov jg (bad) sub jg popa sub xlat and in in jno andb xchg dec into call mov sub jns mov inc mov imul daa jo cmp ja mov std cmp cmp movsl jmp add sub int sbb std adc aad sbb icebp add sarb lret dec cwtl pop (bad) ljmp jo mov ds mov pop jb jecxz movsl inc mov push lock fsub mov lret push mov pop out jnp orl pop test sub or mov (bad) cmp movsb push data16 out cmc outsb mov xchg icebp and jecxz repnz xor push adc leave mov mov das call cmp mov roll lret test lods sbb aam push ret pop mov add (bad) hlt daa sbb mov or (bad) dec push movb lret sahf push sbb xor in xor dec andnps outsl xchg imul add test test pushf sub clc pushf bt cmp pushl popl clc cmp pushf pushl lea ja sub sbb neg call pushl lea jae stc bswap mov inc mov pusha mov cmc test pusha mov sub jmp cwtl bswap sbb lahf lea mov lea lea pop bswap not setge mov pushf pushf pusha jmp push pushf jmp adc mov or jg cmc jnp stos imul dec cmc std insl lods in inc loope lret aaa fcmovnb scas loope fidiv inc cmpb lret sahf mov mov and jbe mov jle lds mov lahf cmp and mov mov jmp dec int3 add shll inc pop int3 mov je mov sub loopne mov add call jbe cmp loope in pusha xor push sbb lock out shrl xor les pop (bad) ja clc stos orl mov dec jae orl lea jne rorb bound cmpsb lods sti xor movl pusha mov mov pushl pushl ret pusha sbb stc lea cmp xchg shld xchg call rcll sarl (bad) pusha or test addb jne inc mov xchg std sub add cmp int pop xchg stc adc decl pop loopne sbb ja mov add xchg enter xchg push cli inc andl sahf popf in jb (bad) mov jns and and orb fcom call pusha jmp sub inc setb sub add pusha bts mov clc neg mov pushf push pushf cmp repnz pushl jmp imul sbb pushf shl cmc lea bts lea shrd bsr mov clc xchg cmc btc mov jmp mov mov push bt pusha and pushf pushf add push mov pushf lea jmp call push jmp call lret lret inc pop push sub scas fimull mov pushf mov mov bound inc inc insl out mov jnp les jae jmp fwait subl sbb and scas in ret add cmp clc jnp int3 mov pop addl fisttpl loope fwait add push pop pop clc es lahf sub mov mov cmpsl cmp mov xor mov std (bad) xor (bad) push push mov cmc fldenv inc aas enter xor rcrb test push adc jg (bad) pop mov or mov in ja out sti data16 cmp and popf dec jbe jge lods lret cmp dec lahf jae cwtl movsb pop lea push in cmc dec fmull jbe enter hlt inc test adc outsb movb (bad) call add gs jp push push pusha pushf lea jmp mov lea pusha pushl call add dec outsl arpl inc jb add add shr and (bad) ljmp rolb mov push mov adc popa sub push cmpsl pusha cmpsb insb mov push fisub (bad) sti mov push shr mov js dec nop fs push cli ljmp (bad) add mov leave sub xlat mov sub daa (bad) push hlt rcrb ss mov mov int3 imul push popf outsb loopne or sub fistpll clc xchg adc lahf mov in mov in adc dec jl call ljmp add das pop cltd test jae sbb shrb dec out rcrl lds and and sbb cmp test in jo movsl pushl popl pushf pusha pushl ret add inc js je jb arpl jae mov or daa popa mov push adc sbb dec inc mov jbe pusha loopne sub les inc jns push dec mov push ret sub fwait pop repz sub xchg xor xchg fimull mov cmp push push cmpsl mov cmc sub xchg add (bad) jl aad notb ffreep sbb pop dec dec subb dec (bad) int subb cltd add jo xchg in xchg movsl dec ljmp mov daa lcall popa shlb insl jae das aam (bad) jne lahf mov and xor cpuid push push sti xchg out or cmp (bad) addr16 icebp movsl call pushf mov pushf adc pusha bt sub movb shl pushl jmp lods (bad) daa cmpsl mov test pop out xchg xchg jmp out iret pop mov adc or mov leave push dec imul mov pop push sti xor inc aas mov mov jbe push sub leave ret push inc push xorb mov xchg adc out mov xchg rcrb pop movsb jbe js stc scas inc sub mov outsb fbstp sbb cmp or (bad) push pop cmpsb dec jle and data16 push (bad) mov test je daa push mov fsubs xlat add (bad) cs fstpl mov es dec push jns jb out jp xchg js push xchg sub aas xchg cmpsb push popa or ja (bad) cltd loopne fs jne cmc bsr rol mov pushf cmc cmp pushf pushf lea ja mov pop jmp jne jo mov insb pop dec pusha mov inc and loopne push addr16 jp xchg shrb pusha lds dec sbb (bad) cmpsl and and adc fstps addl mov leave enter scas add push ss sub (bad) in sarb xchg jmp adc negb pop imul mov loopne in jno mov lods jno ljmp ss push inc mov subl lea cmp scas mov lcall pushf inc arpl lods enter and push xchg js (bad) lea divb (bad) out lret roll ficompl lods stc xchg popa add adc and bt pushf shl pushf call pusha lea jb movzbl add adc btc cmp not pusha bswap lea sbb pop pop not lea mov mov pushf pushf call imul pushf test add movb pushf lea jmp mov cmp pushf jmp jne gs xor fs insb add mov cmp cmpb pusha pushf lea jne pushf push lea jmp push mov push pushl pushf lea jmp pushf lea je clc add pushf push cmp pushl pusha lea jb pushf push bt cmc cmp pusha push push lea jae setno jmp fcoms out lds pop sti dec ret or fildll jge pushw jmp imul or sub aam sub fs jg xchg jge inc shll fwait subl lret jb sbb push push pop push adc into jmp mov clc dec push repz mov jl push in leave sbb jno shl jge roll lcall sub sub ljmp adc movsb leave pop repnz std mov fistpl icebp stc sub in loope dec lods jne mov sbbb enter or cmp into inc fisttpll mov lds orl fisttpll mov sub stos mov pop push push xchg dec adc adc and add popa xchg aam or mov js mov jnp sbb addr16 or (bad) or in cmp jns int mov pop addr16 pop jns mov mov adc xlat inc jl mov aas cs mov ds lret adc jp jo rclb jge mov in popa add inc jle cltd jo std xchg add sub lods inc sub dec and insl (bad) incb scas inc nop jb mov int3 and outsb mov pop sbb jo dec jp sub xor bound xchg repnz adc pushl mov lea call jmp out imul or mov dec jno js (bad) mov mov outsl inc mov pop xchg xchg pop adc mov pop pop lahf cmp stos pop jne popa outsb test pop or sahf imul shrb xchg xor imull insb (bad) sbb push loop jmp xchg push xor leave icebp insb dec xchg aaa mov clc (bad) fdivs lods test push push rol imul cld mov add cltd or lahf mov outsl xchg sbb or sub subl loop andl loopne fadd or jo push xor or stos stos (bad) xchg (bad) sub jns sbb das xchg scas cmp and adc or (bad) cli add xchg es (bad) rclb xchg repz dec dec sahf adc push or cmp jnp push cli xchg popa shrl gs xor inc and push xor jge jns cltd add sbbl xchg notb in and sarb loop loop mov add icebp inc cmpsl nop or fs push aas scas mov or int stc mov or out push jle xlat es lea mov insb shrl aam adc addr16 mov ja bound rcrl in or or add nop call mov js popa and cmpsl pop iret or mov int3 pop mov pop dec inc mov lock xchg out shrb jp in iret out out (bad) pop push mov aaa (bad) sub in test int in cmpsb xchg sbb jecxz mov fbstp push imul aad or push test dec andl pop bound xchg dec testb pusha mov adc xchg pop incb xchg fldenv inc jmp gs dec int3 rorl data16 faddp mov clc outsb test inc aad xor jne (bad) jae lahf pushw cmc popf sbb lcall ss test and push inc negl lds dec fmull mov imull dec adc ds push pop push ret outsl sti inc pop pushf xor mov mov mov inc add pop add add dec and mov (bad) lcall pop aam or mov jo xor jmp (bad) jbe jno sbb push and pushf jle lret adc xchg (bad) mov lea jo push pushl lods pushf cmc pusha clc xor jmp pusha mov btc btc add inc lea clc mov neg add movzbl movl btr btc shr mov add pusha mov cmp jmp movl pusha mov pushl pushf push push pushl ret xchg inc pop insb mov dec cmp sarb aam fiaddl repnz fcmovb adc ljmp jl lock sub inc fsubl sbbl mov outsl sub ret add addr16 outsl sti loopne lret ficompl sub dec mul out pop andb out mov (bad) hlt dec jg imul out scas push repz mov es and mov inc inc rorl or sbb out rcr int3 sarl jge out (bad) sbb sub sub (bad) xchg (bad) out cmc (bad) cwtl cmc and or dec into xchg loopne int3 or notb jo jb subb dec mov mov sub xorl stos imul sub pop outsb mov dec adc std mov mov jg in in mov inc mov insl testb cmp sbb jp sbb test shrb dec mov std cmpsl pmullw xchg pop and push les addr16 fwait stc cmp jmp add loope xchg adc (bad) lods pop addl ret or sahf je cmp iret int dec nop int3 or push sahf aam ret hlt stos (bad) fdivrl mov and mov mov pop or (bad) cmpsb mov (bad) push xchg lea outsb data16 add push jge pop out sub push mov and loope arpl mov sbb rclb loopne pusha mov insb arpl mov mov mov mov push sub mov clc pop sbb roll push int3 dec les aad fcomp lcall leave sub mov mov ret mov js add (bad) mov mov cltd inc pop push lahf jle xor pop xchg xchg je jne xchg scas cltd jb mov add inc gs imul outsl outsb dec outsb outsw push imul (bad) mov pushl pusha pushf lea jmp bswap call push push mov pop lea cwtl lahf mov lea xchg bswap pop mov mov call pushf jmp test cmp pushf lea je pushf cmp push jmp cmc xchg test into or out ja jae pop sub jnp stc aad int and sahf or add (bad) enter ret test ret fisubl push (bad) xor (bad) jl adc (bad) jne and fwait pop mov cmp push sarb inc and ss jno sbb loop test (bad) jecxz test (bad) sbb cmp mov sub mov pusha fbstp xor dec repz (bad) dec divb imull dec (bad) fbstp mov xchg jecxz mov cmp test dec sub pop roll enter rclb mov mov and mov mov stc arpl sbb xchg or pop mov (bad) mov movsl add shrl int xchg int jns xor sahf mov cmp or lods fdivs xor inc pop (bad) (bad) int3 push stos lret or fwait sub sub pop dec popf lret mov inc mov pop scas cmp lea mov aas ret pop fadds jecxz pop inc jl dec ret (bad) push out jbe cltd hlt or or loope push mov in sbb add out flds mov push ret bound outsl xchg dec mov pshufw shrb inc mov cmp cli push movsbl mov sub jb cmp jmp sub movl repnz movl movl movb lea jne shl rcr test mov pushf sub shrd mov lea lea clc push mov push sub call jmp and or mov push test xor movsb mov into movsb int3 pop cwtl pop insb xchg mov inc (bad) add cs insb mov data16 cltd int sarl push aam pop xor (bad) sbb add mov add ds push mov jle inc inc push jbe xchg mov jb in cmpl sbb adc mov adc mov fucomi pop cmp loope push ja mov add dec sub stos jge sub leave mov adc inc inc (bad) lret ds xor mov outsb lret xchg cmpsb and dec dec xor cs insb add pop mov and jmp arpl inc test enter cwtl mov outsb jb inc fisubl es rorb dec gs pop aam sbbb loopne cmp ljmp jb shlb and ret and fdivs inc mov cmp push mov fnsave cli aas mov leave (bad) outsb inc out push movsb or rcl rcr mov mov (bad) aas out inc rcl in lds mov cmp int in addr16 jmp ss mov pop jl pop sbb sub sbb (bad) imul bnd aam rcrl pusha cmp pushf cmpsb cmpsl sbb or lods sbb adc inc pop xor push and mov pop jecxz jg bswap lea call repz leave or mov cmpsb insb mov (bad) int3 bnd mov data16 mov lods jbe mov dec mov cmp dec int3 or cmpsb (bad) fs jb mov cmp adc test xchg bound cmp out push mov shrl dec sti pop (bad) mov jo inc adc mov fsubl ds xlat cld repnz pop mov jmp or mov stos shll push mov test push jp andl (bad) ss bound aas enter (bad) cmpsb into xor and imul loop mov mov out mov xchg add push stc daa inc test jno add mov lea jae je lea bswap lea jmp call call add add pop add add xor xor adc mov jmp xor xor xor xor push ss cmp cmp cmp sbb cmp xor ss cmp cmp cmp into cmp cmp repnz add add pop add add xor popa xor stos xor mov sbb xor daa ss ss cmp cmp cmp cmp cmp (bad) cmp cmp cmp cmp int imul ds aas xlat aas add add adc add mov xor xor xor xor xor xor outsb xor js (bad) xor xor xor xor xor xor xor xor xor xor xor xor xor xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor pop xor sub aas xor push xor addr16 jnp xorb xor test mov mov mov xor js stc ss aaa jle xchg aaa or push cmp cmp cmp cmp cmp cmp cmp cmp cmp mov sbb cmp cmp idivb add add add add xor xor xor mov xor xor xor xor xor xor bound das ss ss ss ss ss bound imul jle xchg mov xchg mov ss (bad) ss ss in cli ss aaa das aaa ds fdivl in divl add pop cmp cmp cmp cmp cmp cmp cmp push cmp xor dec cmp cmp cmp inc cmp cmp cmp cmp cmp cmp cmp insl cmp cmp cmp cmp cmp cmp cmp aam add daa ds movsb ds add popa aas add add add xor xor xor xor ss cmp and cmp lea cltd cmp add mov aas loopne out out aas sti aas add add add add add xor xor xor xor xor xor push movsl xor xor xor xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sub das xor xor xor xor pop xor jl xorl xchg xor xor jmp pop xor xor xor xor dec xor jno js xchg les stc xor je (bad) ss cmpsb cmp cmp cmp cmp mov xchg cmp cmp cmp adc cmp mov cmp cmp cmp daa cmp cmp cmp cmp cmp inc mov xchg ds out ds ds jle add add fs xor xor xor xchg xor xor aad ljmp xor cmp (bad) aaa (bad) aaa or and xor cmp ja (bad) cmp cmp cmp cmp cmp mov xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp scas ds aas inc aas push aas mov loopne add add add mov xor xor aaa mov cmp cmp cmp nop add in add add xor xor lret xor sbb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sbb lea mov mov xor inc ss ss ss ss ss ss ss cmpsb lods ss mov mov aaa data16 outsl aaa mov (bad) aaa stc aaa add inc cmp pop cmp jne xor cmp pop cmp cmp cmp cmp cmp cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp pop cmp dec ds ds jno,pt jbe xchg mov ret or (bad) dec aas dec aas push aas pop aas popa aas data16 aad fidivr in add add add insb xor mov xchg xor dec xor jge xchg xor xor xor xor xor xor xor push xor xor xor xor xor pop xor xor xor jl repnz dec aaa je (bad) aaa bound test xchg cmp cmp cmp cmp cmp cmp cmp cmp test mov add add lahf xor xor xor ss aaa insl aaa in pushl or aaa cmp pop cmp cmp cmpl adc dec cmp mov cmp (bad) cmp cmp cmp cmp cmp cmp add add inc add add xor xor xor outsb xor xor xor xor xor xor xor inc xor ss ss imul push cmp mov add add add and add add pop add add xor xor xor xor mov xor cmp cmp cmp movsb cmp les int3 cmp cmp cmp cmp cmp cmp cmp enter sarb add lock int3 add add cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp or add add js mov mov nop ss ss mov int3 fdivl loopne hlt ss or or adc sub cmp inc aaa je jl test mov nop aaa movsb aaa lods aaa (bad) aaa loopne add and inc cmp cmp cmp cmp cmp cmp cmp cmp jo jl cwtl cmp cmp cmp cmp cmp xchg cmp cmp cmp cmp cmp cmp cmp add sbb add add sbb inc xor xor xor xor xor cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp sbb cmp cmp cmp cmp cmp ds ds ds ds ds je,pt cwtl ds mov lods ds mov mov ds sarb aam fdivrs fdivrl loopne in call add add add add (bad) adc add add add mov aaa push cmp add add add mov outsb xor test (bad) aaa fidiv movsl cmp cmp hlt cmp cmp adc cmp mov ja,pt add nop add inc add add xor cwtl xor xor xor xor push aaa inc aaa xchg aaa add and leave cmp imul sub dec cmp je add add add repnz xor xor xor xor out ss mov cmp cmp cmp cmp cmp inc ds outsl aas add add add adc xor xor fdivs fnsave test cmp pusha cmp cmp cmp cmp cmpl ds add add add dec add add xor xor xor xor xor xor jle ja scas xor xor stc xor out adc dec aaa xchg aaa repz push cmp fnstcw or push cmp cmp push jg,pt add add add cmp add push xor xor xor xor xor xor dec cmp cmp mov add cmp cmp cmp test sti ds aas add add inc add add xor xor xor xor xor xor xor xorl cmp cmp cmp cmp cmp cmp (bad) cmp scas aas add add push add add or sub dec xor xor xor xor xor xor (bad) lods aaa xor jg add cmp cmp cmp cmp ds mov aas insl aas test mov jmp add add dec add add add mov xor xor xor xor xor xor and ljmp cmp cmp jecxz scas cmp cmp cmp cmp dec aas arpl add add dec add add xor xor xor (bad) xor xor xor xor xor xor xor divl jl inc cmp inc cmp cmp cmp cmp xor sarl stc aas add add add inc add add xor cltd xor xor xor xor xor xor xor mov ss ss aaa call cmp cmp cmp cmp ds jp sarb add add add inc add add (bad) xor dec xor xor xor xor xor ss inc aaa leave aaa jecxz jge test (bad) cmp cmp mov cmp cmp cmp idivb push aas add add add add mov addb adc add mov aas add add add cmp fnsave cmp mov xor add xor xor xor xchg mov out ss cmp cmp pop cmp cmp cmp cmp cmp cmp enter ja add add adc xor imul (bad) xor xor mov sub nop cmp cmp cmp cmp cld cmp cmp outsl ds ds aas nop aas scas aas add add add pop xor xor xor nop xor xor fdivs fwait xor xor xor xchg add jp xchg aaa in (bad) cmp cmp cmp cmc cmp cmp cmp cmp cmp idivb sub jbe sahf aas sti aas add add adc add lcall xor add pushf xchg xchg rcr call mov or jecxz push fdivl sti enter push add mov push lods popf das jmp js into aam movsb ss jb cmp enter and imul mov jl dec jb daa jae arpl mov in xchg mov or popa sub xor (bad) mov xchg stos pop shrb cld cmp roll jl adc pop ficom cld loope fild dec xchg test fstpl lock ds out lock or call push cld mov push frstor sbb push jnp add in or scas int3 cmpsl jmp xor popf pusha push jno in push push fwait js pop dec sub (bad) dec outsb pusha jecxz test dec push adc int3 mov aas lods mov incl outsb and adc add adc sbb repnz mov leave hlt adc mov jno mov push xchg push inc sub push faddp pop push inc push int3 inc (bad) pop push push jp inc push les aaa mov pop aas cli dec xchg adc mov pop popa mov fadd xchg jb cltd sahf sub fwait mov inc sbb test in fdivrl sbbl mov lods scas ja cmp pop loop aad shlb mov aaa push int3 sbb mov insb icebp pop push xor adc pop shrl jmp mov lock jb cmpsl mov fsubrl sti stos in or jae jecxz stc mov mov or (bad) int3 jmp sbb (bad) mov mov inc jecxz nop pop jp inc in or ja adc mov out fistp lahf lock mov (bad) insl jns mov pop (bad) mov call int lret dec and sub (bad) pushf or aas mov loope lcall inc pop (bad) gs dec movsb mov call and scas imul nop push dec cmp cmovge jbe aaa jg xchg pmulhuw pop jecxz movsb imul out (bad) push mov shrl jecxz push subl lods jo xchg mov rcl sbb jle mov call (bad) imulb pop sub and (bad) rol insl fimul inc and xchg jmp lcallw dec pop rol repnz adc inc jns push dec sub je sbb mov cmp fwait dec push cwtl mov add mov sub push repz leave mov out cs out cmp or loope adc pop xor outsl lahf xchg movsl dec fnstcw cmpsl xor push daa mov ja add imulb adc cs stos pop fldt xor jns mov mov dec mov js or mov cmc add repz add and push mov xchg scas xor clc mov scas inc jns or lret loopne jg mov inc sbb dec into hlt mov push mov xor ret scas push xchg mov inc mov addl imul pop clc arpl inc iret rcrb popf xor sub shrl add dec pop xor dec cltd push inc and in inc arpl and ss cwtl jle sub mov sbb mov xor enter stc shrl mov mov lods ss inc loope clc jbe xor cmp shll jle popa stos lcall adc xchg xor pushf rcrl test add je push ds call arpl cli pushf arpl adc sbb xor xor std std pop fidivrl lods (bad) aaa fmull mov pop or xlat or push popf push xor push cmc and and stos add mov outsl fimull push lods cmp ja call sti imul pop xlat inc hlt movsl cmpb mov pop in sbb lret mov jmp jbe adcb xchg lods or (bad) stos pop sbb jb and insl mov cmp xchg hlt iret data16 mov jo popa and jl mov adc imul lret pop notl add dec cltd cwtl icebp xor mov repz lret push and in rcll and or lahf xchg inc loop push test mov jae aam (bad) popf mov or mov cs test add and fcoms or pop pop les mulb hlt mov (bad) dec sbb out push pop cs pop push and incl mov aaa cmpsl dec cmp mov xchg inc es cld cld (bad) es rorl sbbl and out dec push or call mov clc inc mov or push cmpsl push xchg (bad) cmp fmull jmp xchg bound mov pop mov adc js xchg in mov sbb std int add mov xchg out ds mov and push into jne sub cmp imul xchg cbtw sbb jl nop test in sbbb xchg adc push call fdivrs icebp jo push mov cmpsb mov iret mov pop xor add bswap lea pushf lea call pushf jmp mul mov jge lock shr and (bad) enter cmp aas jmp pop push mov dec movb jbe sub outsb (bad) lret sarl fcompl insl xchg adc mov cmpl dec push addr16 sub push adc flds mov mov mov pop mov das shrb inc bound mov xor test (bad) mov and test lahf jmp jno ja cmp xor insb cltd dec and xchg popfw pop dec lock repnz nop das lea push mov push pushf movsb ret and fmuls jns mov sti outsl loopne inc jnp mov cmp mov imul xchg jmp inc (bad) orl (bad) movsl cmp xor xlat mov sub cmp sub or sarl test sarl fs (bad) (bad) cmp push xchg mov add or and cmc cmc cltd mov imul jb mov sub pop popf cmp daa jne je les cmpsl (bad) sub sbb (bad) outsb (bad) adc or cli pop notl inc xor xor gs jl xor mov pop scas or jg (bad) sbb push or and sub mov add xor xor xchg mov xor mov mov jle mov cltd out jmp and lret cli loopne lods popf ds sbb hlt lcall ljmp mov inc das xchg loope lret test nop das repnz outsl adc das cli loope inc pop cld fimull sbb dec mov loopne or loop and xchg lret jnp xor mov jp movsb fidiv (bad) mov lods sub mov sbb out rcrl mov fsubl les scas pusha adc add push lahf mov xchg cmpsl adc push add stos loope movsl fadds mov and jb bswap mov jmp xor push jmp mov lea jb shr clc adc cmp not cwtl bswap mov push push lea jb btc (bad) lock clc sub not setp mov call shl adc loop inc cltd repnz in test and int3 xor adc sub cmp and xor imul repz and xor dec jne dec mov push lret movsb in xchg out pusha test adc sub sub sub sbbb push dec adc xor add push dec push orl hlt repz and add dec stos aaa stos jp outsb push sti stos fimull std hlt in xchg pop dec xchg mov add mov (bad) repnz sbb sub pusha xlat or push ret pop shrl xor insb ja daa mov mov mov ror in icebp (bad) mov jne aas lret fs gs xchg mov lods sbb sub (bad) insb add pop push (bad) adc jecxz lods repz cmp push dec sti and cmp sbb or inc stos test ss aam aam adc cli popa xchg and mov pushf lods sbb iret outsb test add popf jb sub jae dec rol sub iret test test adc inc and cltd iret add mull adc pop das push pop pop pop add dec ret or and and (bad) xor ret pop les xchg lret lcall test ljmp mov (bad) lock cltd hlt push jbe aas sahf jecxz (bad) jne mov cs add or inc mov cmpsl inc rol cmp dec int3 add jbe call fnstsw dec imul ficom mov xchg movsl sahf inc inc add into jae movsl enter ss fisttp add imul mov inc dec lea nop test cmp cwtl xchg or xchg (bad) insb shl and mov push repnz call jmp mov or sub inc icebp mov (bad) lock out and inc xchg popl lods push push sub mov movsl sbb sub push (bad) imul cltd pop push cmp aad mov mov clc push test (bad) daa xchg sub sbb cmp mov or test pushf adc mov xchg fsub mov add mov lods and addr16 leave stos mov mov cwtl sub jnp arpl push mov frstor cmc sarb or sbb loop or xor mov js (bad) dec (bad) jp pop mov out adc daa ret push scas scas push push out (bad) movl xchg (bad) fistpl xchg imul lea je mov bound and lods sub (bad) imul mov jle ret (bad) or xlat repz ror xor jns js enter insb cwtl cs dec xchg sti es dec sub out push stc mov push push pop jne mov lock mov out (bad) in mov xchg sub inc sarb add dec movsb mov jo je popa mov jnp mov sbb pusha sbb inc insl insb xchg rcll loope (bad) jo cwtl into test (bad) xor sbb loop (bad) push imul inc mov mov nop xor fsubl mov add push sbb jo (bad) mov add lods sub sbb call insl sub test ret loopne std arpl mov fisttp xchg scas mov pop fsubl (bad) pop inc inc cmpl mov stos (bad) cmpsb mov push icebp movsl add gs lahf mov lret mov mov stos lods gs sahf cs cwtl imul inc in lods sub xor jae mov out scas cmp mov loopne inc (bad) lock xor or push aad pop jmp je pushf insl pop cld mov push dec sub (bad) dec cld ficom loope inc sub jmp dec xchg mov aaa movsl push inc fcompl add xor mov mov jo pop sbb test aaa jmp jo sub outsb sub add and shl jae stos inc pop enter cmp lods pop je test aam rorb aaa ds xor jae in lret xchg sahf dec aam (bad) adc and lea pop mov or clc test mov sbb call test add adcb dec cmp xor xlat cli ss and xchg rcll (bad) icebp lea pmuludq mov pop fstl mov adc xchg jno jns or jnp int pusha fwait loope or jne jne dec sbb loop mov es xlat inc inc jp (bad) cmp fwait xchg fsubrp gs fstpt mov cmpsl out pusha test pop lock push dec lahf sub jg dec nop or insb xor jp test pushf fistl jne daa xlat cmp mov sar mov mov loop push sbb in xor xchg push outsl test imul ret les scas out xlat or js push jmp mov sarl adc test add call dec mov xor push jbe std (bad) shll sbb dec inc in cmp stos mov push lea aad mov or pushf sbb mov or mov inc pop pop mov mov mov mov paddsw or or mov pop outsb sti sbb in loopne fidivrl xchg xchg xchg and ret testb push add pop push popf mov pushf mov xor add dec lcall out scas adc imull test scas or imulb test sbb push test mov icebp ljmp cwtl push mov inc jns je sbb inc test imul lods push dec adc mov jp out out inc cmpsl mov icebp int3 push or inc or sbb enter sub fsubrl inc inc xorps fs lea aad js cmpsl xor faddl and ss es xor insb dec lcall jnp cmp push xor cmp (bad) mov mov into inc fidivr imul inc enter iret add mov ret fsubrl push aaa push or sbb jl mov in xchg jnp mov fcoml int dec movsb xchg jg cli stc jmp test outsb je je dec outsb lahf cmp jo cmovbe jmp sbb stc mov mov cmp fsts imul loopne cli in sub repz cwtl mov mov pmullw in dec push lods dec mov push ret pushf mov push incl mov mov mov rcll data16 pop movsb inc dec push cmp xlat int3 push mov dec xchg testb sbb xor and mov sub outsl adc pop jp mov cmp in adc sub mov jb in mov and add push inc int push cwtl rclb xor jmp cwtl or sub (bad) push adc jecxz inc dec mov sbb clc sbb fnstenv xchg pop stos jne jmp rclb sbb aas add and cld inc js xor add lret cmpl fst dec xchg lods subl or lret jge test jo lcall jmp pop cmp fisubl pop fistl aas in sub ret adc adc (bad) inc or xchg gs sub push sarl xchg mov xchg and jmp aam js pop mov mov daa nop test movsb testb jecxz test jae mov and xchg push jnp jnp mov dec or movsb pop jge push pusha cmp shrb fwait cwtl mov xor pop push cmp pop add sahf cltd ret xlat dec aam aam pop adc inc mov imul sahf (bad) shll and test test dec and iret jg xor out adc clc repz jb out push sbb add mov je jns jp subl pop sub stos icebp sarb popa xor lock inc pushf adc adc inc cld xchg aaa outsb aam xchg mov ret icebp push add ljmp icebp dec hlt and push inc jle movsb mov and jb mov xchg lods out add scas cltd mov imul inc sbb fiadd adc inc ret add gs add cmp hlt repz gs fisub addr16 (bad) xor icebp mov xor or inc icebp popf mov mov lahf cmp jnp mov js jns ret sbb fsubl out mov jecxz jnp icebp repnz ja dec fmul sbb xchg push adc push xchg pop pop pushf lahf sbb scas (bad) fbstp mov enter cmpsb lock ret clc pop ja (bad) in dec dec out mov sub arpl (bad) sub adc mov jg mov imul push in imul and das fstps data16 enter (bad) arpl adc pop jbe (bad) ja je stos push fnstcw xlat xchg dec push mov loop out into (bad) shr aam and sbb shlb outsl push mov mov out pop jns dec repnz sub data16 popf arpl dec pop sbbb sti sarb daa popf scas mov sbb adc jnp and loop adc les pop mov sbb pop mov dec in (bad) sub loopne js add notl sbb xchg lods sbb pop dec rcrb lret insl cmpsb dec pusha jle inc sbb cmpsl scas mov push ss les sahf movsb fs sub push mov je mov mov add ficom mov rcl (bad) out mov fadds stc mov inc fnstenv dec pop (bad) out and push js ja loopne imul mov test outsb jb imul jge ret mov in cld popf bound div push jp dec sub inc jmp sbb dec mov lods add (bad) jbe nop decl in push sahf fistpl addr16 push ret rol movsl cmc ss jbe pop dec fwait sub sub pop xchg lahf inc insl or adc pop jbe in fidivrl ja mov sub ret hlt inc pop (bad) cmp repz and enter stc call loope xchg clc inc or iret lret pop (bad) scas mov lret push jbe jl jmp aad lods (bad) fdivp jp inc cs cli imul push lcall leave test jle and ret cmpsl pop scas incl fs jecxz inc adc mov in xor pushf add test sbb fwait mov mov stc gs int popf jp xchg sti ds scas mov (bad) mov pop sarb xchg cmp movsb int sbb shl pusha dec dec sbb insb inc mov cmp daa mov sahf adc repnz mov (bad) push sbb pop test xchg lret ja imul lods pop pushf adc bound and pushf or xchg adc jp add and jp scas xor pop repz jne xchg xchg sub orl mov lret xlat dec outsb add push lods adc pop sub daa pop cmp loope xor insl pop sbb in or movsb or cs movsl push rcl xor enter jge lods cmpsb das cmp push jge or add pushl add mov mov mov (bad) mov movb insb repnz ss dec fwait repnz sub jg or or sahf add xchg sbb sub mov xchg out adc shrw mov xor sub pop stc cs out pop int3 ficompl hlt out push xchg or mov scas cmp fdivs fsts xor dec sbb rcr les pop cmpsl cwtl fistl xchg push sahf aad xor jno jge gs sub in adc cmp loopne sarb sti jecxz jno sub push adc fsubl int3 in ret inc outsl rcrl push adc sbb dec fadd jo lea sarl int jl sub aas push mov cmp out movb xor mov inc pop bound mov das inc inc (bad) popa adc adc jge leave xchg jne pop push mov lds xchg pushf jae dec imulb or xor (bad) pusha jns and pop xchg cmp jle incb xchg dec out sbbl add xchg lea jne push (bad) call inc es mov (bad) push xchg lea mov inc ss test outsb push ss mov pop push movsl ljmp and push test inc dec stos idivb fs div sbb pop stos dec inc jg (bad) aam or dec (bad) mulb rol leave jmp ds cmp int3 mov add ret add sub ret rcrl out sbb jbe ss jo mov test sub out fcomps push (bad) jg insb sahf pushf (bad) mov push inc ss (bad) mov pop sbb enter ret and adc mov pop adcl inc je lock jbe fnstsw cmp sbb fwait stc insb (bad) inc pop call notb fsubp pop cmp or pop scas mov and decb ja dec pop mov pushf mov fistp out popa outsb bound test mov (bad) or testl or into jae add ret jge xor enter out xchg test mov lods ret repz insb test mov cmp lret out jle and xorl pop jle lahf pop lods (bad) cmovae lock insb xchg add movsl stc lds fsubrl dec outsb lahf clc jge icebp pop pop (bad) cmp xor inc xor loopne jne insb pop lods sub cmp sbb lods test lods in xor xchg adc dec ja sbb adc mov (bad) inc pop rolb (bad) inc stc xor and test inc inc nop jg enter pushf fisubr push mull popf dec inc pop (bad) mov cltd js test and push and adcl aas cltd out outsl imul xor loop sti leave push pusha popa mov xor das push add sub cltd inc xor mov pop or rorb lahf mov jl jl mov mov cmp jmp mov cmpsl push test lea (bad) stos cmp push mov adc push lcall out and dec push and idivl ficoml mov sub inc (bad) in mov mov loop outsb xchg cmp push nop and outsb cmp ds push adc int movsb push shlb jmp push into ss pop leave or mov lcall out sbb les fs push mov stc cli dec out or mov mov jae jnp test dec xchg lcall aam in and nop test xchg dec lods adc inc (bad) jle jle pop fcoms inc stos outsb dec stos xor loopne xchg (bad) mov test pop xor pop in gs fadd or das jnp xchg pop sbb sub (bad) add jb mov pop testb sarl push dec sarl xchg inc and cmc sub and lea sub push imul mov cltd insb and mov insl and add xor das mov jnp out bswap mov (bad) out fcompl ret cltd pop mov imul mov pslld lahf dec test mov dec pop inc pushf aad std mov jmp loop out adc (bad) push rcl add adc push fwait out push bound dec rolb popa mov iret inc pop mov xchg or (bad) adc add push or jle add adc xchg loop sub out fadds imul scas mov fadds mov sbb dec (bad) inc cwtl ss (bad) mov jmp fs (bad) (bad) sti loope pusha shrl mov adc mov push dec add and adc aad aad std xchg push sub cmp jae imul insb sbb int3 xchg sub dec mov lret pop xchg sbb fstps test mov movsb fisttpl mov adc lods aaa (bad) dec (bad) notb dec xor (bad) pop jnp arpl (bad) stos or aas push mov loop mov out push xchg xor inc dec xor lret mov sbb dec dec stos shrl mov pop lock jmp push lcall mov jmp mov add add push les add fdivrl cmp push outsl sub dec cs (bad) sub adc add push dec stos sbb sbb fnstsw hlt out mov iret push mov iret test shrb in push or fwait notl adc inc xor adc mov pop xor mov mov push push leave int3 test inc sahf sub scas adc add lock sub aad inc pop adc jle sub leave hlt mulb mov dec dec adc jno adc xchg cs dec (bad) jae mov fistpll inc xor cld pusha divb mov pop fwait gs xchg sbb pop sbb (bad) dec xor dec mov cwtl inc hlt fidivl dec mov sub fdivp outsl mov lret dec xchg inc je lret mov cwtl push jne and push movb mov fsts mov int pop dec lea dec or out inc pop je and adc (bad) push enter loopne enter pop (bad) mov iret jmp jns (bad) cmp xchg decb roll mov pop pop sbb in mov out outsb mov imul outsb push xor inc ljmp and pop push imul jmp leave push inc leave inc sbb cmp add pop scas push iret jbe xor sahf iret jg ds loop xchg jae mov xlat ss insb xchg outsl rorb loopne mov jle and cmp fwait in scas and int push (bad) or sub aas push mov mov inc aaa es scas mov jmp pop inc add xchg les rorb test inc icebp fadd mov ss adc mov and (bad) jmp mov xchg sbb pop push or inc int3 insl loopne mov cwtl out int3 call mov mov sahf loopne jmp adc mov mov sbb notl pop mov aas dec xchg mul cmc xchg jl loop sbb cmp xchg stos lds pop or les cmp shrl movsb or jp rol dec sub (bad) icebp add inc adc mov test add jae movsb lods sub push fwait and and jno push xor inc cmpsb push ror jbe imul cltd flds pop dec clc mov shlb mov jne xchg test xchg xor cmp xlat pop addr16 push pop xchg enter or rorl ja jl shrl imul in icebp fmul add and mov in or or test or (bad) les leave sub inc and xchg cmp popa cmpsl repnz sahf push insb dec enter mov (bad) pop push gs xchg mov mov je adc push lcall mov sbb (bad) xor in je ficoml insl push cmp xchg clc cmpsb adc in xchg fidivr aad out push and push stos jno lods and sbb or mov cmp movsl das int3 in cs inc pusha lea fmull std in and or and notl lods mov push fnstcw push or shlb aad pop movsb dec es stos jg sti jg out (bad) loop out push xchg add cld fs mov mov lret or hlt sbb xchg (bad) xor inc shr test cmpsl mov test or imul push fnstcw test mov or xchg mov xor ret cwtl movsl test add dec int3 fiadd and ret js aas in neg inc mov xchg lret mov cmc jp xchg aaa repnz add ljmp mov pop push addr16 stos xchg sub lcall pop xchg fdivl dec adc mov xor cmp and imul push out mov jo ret int3 sub cld cltd stos inc lcall icebp pop mov inc add jne outsl lds push adc cmp adc cmc mov cmp ret or popf stos incl cmp call or popf mov jecxz xor jmp andl repz mov push and push enter push movsb push stos dec mov pop lcall xor sub clc nop jno or cmp icebp pop pop push xchg jl inc aaa or aad and stos bound mov add sub test pop sub (bad) jl push pop adc add icebp hlt cltd mov and pushl xchg dec stc int movsl inc xor cli push push repz pop imul pop sub mov inc es lea pop data16 inc mov icebp jmp inc and push cmc fadd inc cltd cmp and or xchg add roll inc pop xor xor std into addr16 les (bad) xor xchg loopne sarb mov dec ret add mov sarl sub push sub mov out repnz test mov mov and cld sub dec ss dec inc mov insb aad jb in lahf out push mov jbe,pn jb mov loop xchg xchg inc add jnp enter lahf xchg fdivrl xchg or mov jae jae sbb rorb or loope sbb imulb push rolb mov fnsave jae ss insl (bad) pop loopne test jno jne pop jp sbb pop add pop and jmp daa add call js in cmpsb pop ret or out fwait xchg js mov lea in xor int pop jmp xchg aas fildll dec daa rol and test (bad) lods xchg push mov adc mov aaa push and add add mov repz xchg mov mov mov jmp lcall sub cmpsb sub sub test dec jb out leave loope iret (bad) push out in imul push mov push popf repnz stos aam fisttpl mov push gs mov add sub and jne lea lea shr cwtl sub aas mov jns inc pusha stc add or or mov cmc push pushf test call mov mov mov pusha push lea jmp mov bt pusha add cmp test pushf jmp lea call clc test bt pushf mov pushf clc call jmp movl pushf pushf movl push lea jmp jmp add push gs outsb push gs js gs imul gs pop dec add mov cltd gs pop outsl andl std decb jno fisub fisub in inc test sahf xchg xor add pop sahf xor add pushf shrb pushf pop sub idivl mov sub dec push xlat out rorb dec xor dec test cmpsl pop mov popa xor arpl pop cmp (bad) push pop adc push insb repnz cmp pop sbb daa les push das out notl imul iret push int cmpsl xchg psubsb setnp outsb jo repz mov popf scas lds cmp xchg xchg scas add mov call cmp fildl sub add aaa ljmp push dec jl (bad) popf out (bad) icebp or dec rcrl or outsb in cmpsw and inc dec dec add scas xor dec jbe inc fbstp xchg aas pop in fs outsb int or loope cltd bnd mov and test adc dec and and pop ret out adc mov mov or xchg adc jge push dec dec aad jle stos movb lods sbbl test xor mov push xchg pop xchg xor stos arpl push mov add cwtl aam faddp mov or int3 jg jmp dec or test cwtl jae push fwait cmpsb ficom dec dec rcrl pop jne add ja popa jge or mov pop xorb cwtl jbe xor ret test add cmp inc lock push adc and je jb or ret ds mov xlat add inc aad fs (bad) lea fnsave jo lahf sahf and push inc and xor loope int3 das (bad) call out (bad) test or in add mov sti shll lock pusha cmc sahf fs dec jbe lea cs add inc stos movsb rclb test clc push or mov cld cmp and and pop mov ljmp test add stos push push push rol adc arpl out insl xchg pop shr cld xchg dec (bad) jmp mov xchg mov jb pushf cmp js int3 jg or repnz jle lret orl fnstcw test or aad mov and sbb ret fisttp sub adc sub je sub cmp and hlt imul mov rcrl (bad) scas add inc mov dec mov ficoml pushf adc shlb out pop mov cmpsl inc jl xchg ljmp inc and push mov icebp scas mov adc cmp or jae lret add dec scas mov inc cmc movsb cli xchg pop daa dec addr16 ljmp insl sub and test sbb jle imul xchg in js fs dec sbb jns sarl inc test mov pop incl xor jmp rol xchg decb es mov lea je clc pushf push cmp movb lea je call mov movb mov pushf pushl ret pushf call leave fnstenv mov mov push fdivl push and mov push cmp aaa les (bad) lock fmuls add rcll cmp ds xor jo sub in sub and jmp xchg roll or and cli sub fidiv cli (bad) mov lock mov dec cmp sub and sbb push xor bound pop movsl lret adc ror jp in (bad) pop rcll ss and adc daa cmpsb push mov dec gs or or (bad) dec jecxz cmc sub sbbl jl bound (bad) nop (bad) sbb mov mov sbb mov shrl cli cmp jnp ljmp push jns ja cmc fstpt insb pop inc inc cmp xlat xchg movsb mov rcrl decl mov test test pop xchg mov ljmp xor mov xor insb push and ja (bad) mov int3 call pushf dec dec xchg fstpt addr16 ja inc leave and or xchg bound imul (bad) fdivrl xchg jae fs mov lcall cld dec mov fs je push pusha lea jmp push lock std std xchg jo sub sub sub pushf mov pop xorb lret shrb cltd in sub bound aam pop leave add out sub test cmc jge and out xchg or aam xchg fist in xchg push push stos les mov mov enter flds xor push push inc cwtl (bad) xor inc aad sbb icebp dec jno xor push pushf pop xor mov std mov pop or jle sbb jae (bad) push stc mov cld push movsl and (bad) test lahf dec dec pop and fcomi dec jmp shrb pop test js and fs pop mov cmp and je lret sbb inc lds sub dec pop into push bound stos xchg sti sahf int adc fmul jno leave jmp pop sarl or in xlat enter enter (bad) jo in cmpl or (bad) aam or movsb jmp mov pop mov and xlat or lea call call movl lea jb test call cwtl seta cwtl lea call mov push inc (bad) pop les mov or xchg inc (bad) adc jo hlt push fs add nopl xlat into xchg iret aaa xor daa cmpsl loope dec mov pop imul adc inc fisttpl sahf adc lret inc je mov lret dec xor cmp mov mov xchg push (bad) or popf pushf xchg jg (bad) push in pusha fwait adc loopne scas push es jle dec pop push (bad) icebp icebp rcrl jle call popa imul mov xor sbb int xchg mov test stc cmp aad insb and pushl pusha pushl ret sub push cmp push lea jmp push push push mov mov xor lea call lahf adc sahf rcr sub jne mov pop rol pop pop ret push push lea jne pushf pushl jmp pushf pop mov sub mov insl dec add rol or aam cli inc js sub pop push fimul mov aaa fcmovnu aad repnz imul imul mov or hlt pop cmp mov inc mov xchg push pop inc pop jnp mov (bad) or movsb cwtl or or sub sbb scas popa sbbl cmpl sahf mov jle xchg dec push add mov or loop repz popf dec and js fildl pop lods pop pop ds cld pop xchg xor pushl pop aaa adc push dec xor or inc inc add xor mov xchg dec xor inc gs mov pop movsb out xor and jae fild ljmp cli pop das and push xchg push fwait mov cli pop aam cld pop push push stc lret lcall loope cmp adc test jecxz or jnp lock movsl and mov in mov cmpsb fildl rcl js loop outsb jecxz xor cmpsl insl cltd cmp scas mov adc stos neg jne (bad) stos add sahf notb or cld outsl xchg dec int fistp fs outsb mov pop or or inc imul in dec int3 rorb and lock in cwtl push or lods add inc mull push inc divb les lret dec adc (bad) fmull lods xor jmp or jmp lock cmp pop pop js andb out push mov mov push pushf ror jmp arpl (bad) cmc sub dec outsb fcom int and inc das jmp or in jb jb pop je xchg or sti in xor xchg cmp arpl mov ret mov insl mov aas int mov (bad) fpatan adc xchg and popf inc push inc and adc jmp lea jb stc cmp call push inc push push dec dec dec cs insb add shr clc jmp mov aas lea add push inc pop rclb or dec pop popf insl pop and dec add ret in stos pop lret in arpl cmp mov (bad) mov push xlat je sti test xor gs (bad) mov outsb inc hlt pusha nop mov mov sbb in push daa fcmovbe adc push test push sbb in cmp scas test mov fstps xor leave adc xor sti mov xchg xchg mov fmul out fwait mov jl dec (bad) aam outsl sub mov clc fcmovu roll add fcoml dec xchg mov dec mov das fisttpll cld stos subb pop lea pushf push scas dec cltd adc inc (bad) cmp popa pop adc aad repnz imul mov push cmp mov inc dec jae push lods fadds push add icebp xchg jge loope loope decl add mov mov hlt jl in (bad) add rcr (bad) stos jae nop imul out pop aaa scas xchg fdivrl xchg and jns enter int3 fmuls xlat daa dec shl sub sub and inc and push scas dec inc loop in lret or push aas sbb or dec mov clc jne test bt or call xor shrl add mov sub jb mov add call sub jne ret not mov jmp pop stos in js push inc xchg lret mov cli cmp mov mov xchg popa lcall jae push add xchg push xor scas xor data16 and cwtl loopne,pt rcrb nop jmp push in xor dec les pop cli inc inc subl cli xchg ja ret push jae adc push cmp lds jl mov repz push fcomps cmp mov push xchg mov fidivl aaa lcall sbb pushf lea movb pushf push lea jmp call mov daa adc (bad) fnstcw (bad) mov fnop faddl jae or mov lahf pop sbb pop es std jmp jmp sbb fcmovbe test enter test out cmpsl subl imul aaa sub pop push xor mov xor and (bad) xor mov push mov int insl add xchg xor hlt stos xor js pop lock jo fcoms ja std aaa roll sub pop xor xchg xchg mov inc cmpsl or push or stos ja inc sbb fcoms inc inc test arpl aaa fs test or dec dec hlt hlt enter adc adc out cmpsl sub pop ss add dec jne and (bad) xor adcl xchg push arpl outsb dec scas cmpsb aad xor pop rclb ljmp pusha ds push sbb xchg rclb mov out or fwait stc lret jbe mov dec out cld (bad) sbb mov jbe jg (bad) int3 (bad) mov xchg cs or into lcall dec sbb cmp and mov add sub mov jne subb pop cmc sub xchg mov dec adc adc shlb icebp mov mov psrld xchg xchg ret jge pop in mov jns fcmovnu gs pusha sub test xor int3 bnd pop or incb (bad) sbb ds idivl sbbl stos jge rol je jecxz mov fsubl and iret xchg pop ffree dec pop adc aad dec imul ja int3 dec shlb (bad) (bad) mov (bad) icebp xor inc mov ljmp fnstsw push inc imulb jmp es xor sarl es arpl daa mov out and call jnp mov lret in movsl pop mov jmp xor jge aas clc mov jo cmp mov aad mul inc test (bad) push mov mov arpl xor pop outsb sub pop in aad es pop xchg sbb mov or mov adc addr16 cwtl jns call lret cmp sub cmpsl das and or inc rolb inc dec push insb inc xchg aam and mov rorb js sub pop jge inc lret pushf test xchg outsl call lcall mov negl sub test das jecxz mov hlt mov icebp iret es mov (bad) cld loope push add sbb mov cmp mov pop jecxz aam insb xchg pop cmpsl push cltd inc mov mov fcmovu jle or ja sbb xchg out ja push test sub or sahf ret cmp sbb loope inc mov xchg jmp ficompl cmp (bad) popa movsb dec pop xchg sub mov dec jo scas inc adc sarl fnstcw repz popf pushf mov loopne loope mov dec inc cld push (bad) adc adc inc cmp cmp hlt outsl sbb sbb bound bound lds xor mov out stos cli xchg add stos lods mov xchg jg pop inc lret sbb xchg cwtl or inc dec aaa push push dec inc mov xor sub fs and dec popa ja mov cmp add enter in cmp push push sbb cs add xchg ds pushf cmp xchg push and xchg mov mov out jb enter test js loope xchg in jecxz cmp inc mov outsb dec lds rsm lods in and loop or cmp xchg cmpsl and cs add ret push xchg loope mov popa add lcall jle cmp xchg xchg xchg loopne push jp out cmpsl push sti movsl adc cwtl or movsl int3 repnz mov daa insb xchg or jle and jns rcrl mov mov inc inc and xor pusha sbb aad pop mov pop pop outsb sahf dec insb insl fs jmp mov inc add (bad) sub adc mov out idiv movsl dec divb out lahf push mov cmp ds adc dec aam shr imul sbbb adc in mov and nop enter xchg push xor insl sbb arpl jnp xchg out cli push push push mov flds push push sbb insb mov pop cmc bound cmovge jmp loop and sti cwtl out inc sbb push cmpsl push mov es add xchg aaa pop push mov xor rorb mov movsb add nop and jb push xor mov inc adc xlat or cmp jge mov fwait test xor xor mov iret jns ds pop adc inc sub adc jge push (bad) pushf iret test hlt lahf mov push sbb push gs dec push adc sub push mov fdivrl enter lods lret call cmp popf fsts xchg ss push pop pop lret add and sbb sti aaa mov jo jl mov jecxz enter dec xor dec call adc cmpsl jg jnp pop aas mov cmpsb test rol pop jecxz pop mov dec xchg mov dec ja adc js sbb and push sbb cmp test adc pop adc inc lret (bad) jg test fistpl dec dec lea and pop into mov sbbl mov mov pop sarb xor mov cmp xchg in xchg cmp aam fsubrs sub adc sahf fwait mov mov pop popl clts repz insb test xor add xchg mov push iret out sbb dec insl add mov xor mov cld ud1 or movsb and inc jnp adc jo daa fisubl jp cmp popa push sub arpl cmpsb mov xchg dec cmp js mov mov or (bad) stos fnstenv cmc jmp into xchg sub sbb adc jle cmpsl ja pop cmc xchg add lahf mov xor shrb sahf jns in mov imul pop adc xchg xchg push in mov push cvtpi2ps pop lds add clc cli xor mov or sets into push adcl add jns mov and rcrb or clc lods mov dec jno add xor in jo inc aam lahf es dec push cmp inc pushl inc lret dec popl pop dec sub leave push cld andl and or rclb adc stos add push ss mov in inc pop xchg fist clc xchg cmp out ret jp mov push into mov aam jbe lahf push cltd pop sbb push mov sub mov dec xchg xchg mov push arpl xchg push add push loop mov add cwtl lods cmpsb out addr16 jmp cmp cmp rcrl mov adc repz sbb bound or jge sbbl push int3 loope ret pusha sbb mov pop mov ret je push sarl push fcmovnbe mov xchg imul xor sbb inc xor jmp iret mov sahf fcmovne sub cmp or mov inc lea push sbb rclb and xor lds cwtl mov push mov add xchg ret mov fcoml (bad) stos pop icebp mov mov enter xlat pop icebp divb mov or dec stos mov shlb add dec and jo dec mov (bad) int push jb ficompl pop adcl imul stos je loop or push outsb in mov mov adc push add out pop (bad) (bad) xchg fidivrl ja into cmp std mov (bad) not cmpsl pop push rcrb fldcw pop dec ss jnp daa popa sti jecxz cmp push mov dec add sti lcall jg pusha rorb xor movsb jl lods push push mov dec jns into cmc pop (bad) jmp je add xor inc add jno adcl lret decb pop ja loop call jmp lahf pop sub pop inc dec cmp or test inc ds out (bad) repz cld data16 ret cmp push imul mov sbb loopne pusha mov inc mov decl jbe mov (bad) pusha lahf in mov or xlat cltd and sub andb insb sub repz fstl cs sub inc jge mov stos jae inc out inc insl orl outsb push sbb cmp bound test lret jmp xor loope or ljmp hlt test push push leave cmp and jg std repz inc int3 adc lret jp and cmpl sbb jne nop jnp sbb jnp mov les or xchg (bad) ja jmp mov or adc jmp popa fs dec in imull push jmp sahf test push xor xchg lea jo and mov jecxz aad cld (bad) fldl pop mov sahf popa fimull cwtl arpl (bad) push dec push daa ret pop pop outsl sbb xchg mov fidivr pushf mov fidivl leave add or and dec mull aas lods jge incb push je mov int3 cmpsb jl mov inc (bad) fcoms adc enter repz push mov jae cs mov out adc add adc xor or mov push clc cmp inc add xchg pop lods cmp sub subb loope cmp pop pop sub test inc push mov cli pushf sub es das mov icebp sub xchg dec and imul test out movsb ljmp aam jb push mov dec nop jae xor std je mov xchg inc dec xorl sahf lret mov inc add sub jb aam in pop dec jmp xor (bad) mov pop xor lea aaa mov and adc mov add mov rclb sub daa add leave fildl in mov inc mov gs or sub xlat adc les fdivl rcrb lea cmc add cmp mov dec mov fidivl mov ret stos jns imul push or imul xlat xchg pop pushl outsb nop icebp mov aam adc mov inc incl sbb fstps push push pop mov ljmp stc xor sub add add cld mov fnstenv and adc cmp cli sti int3 int3 mov sub (bad) sub sub cmpsb lcall out and pop jnp loope gs ror inc xor mov pop mov xchg mov (bad) mov pusha cs mov rolb jno sub mull cwtl adc (bad) cmp adc iret loope (bad) mov adc and clc dec mov mov and sub aas mov pop iret das push (bad) lret mov pop dec mov jmp lret es add pop xor gs sahf adc or jg pop (bad) scas fsubrp popf mov push dec sbb (bad) fisubl iret dec mov adc clc (bad) sub les or xor in push shll dec pusha inc push aaa jecxz in or bound lods (bad) fadd pop dec or and repnz dec imul mov mov std rolb cmpb aaa rolb out xchg fwait (bad) push adc in movsb (bad) (bad) pop stos jne test popa xor mov icebp inc dec aas int3 mov or xchg out in push mov jle ja lret dec pop cmp (bad) xchg jge out sbb adc xor cltd add cmp shrl andl in aaa lds or movsb mov push insl das add mov cli mov (bad) std xor (bad) mov jge sub xchg inc inc push pop das sub jmp cmp hlt and lods or call add ret dec xor push sbb out sub div stos mov xchg hlt cs cmp (bad) enter mov mov sti jmp sbb sbb leave int3 js adc mull cmc dec cmp das jo stos jne (bad) sbb lret push fimul cmovb imul (bad) cmpsl (bad) std inc push xchg push fnstenv add xor cmp stos sub lods lods push and push js cltd lock shll adc mov out push das inc mov xchg mov icebp nop jnp (bad) mov fwait dec mov xchg or imulb out shlb push outsb push jl jl insl adc jae cmp sub sub iret or popa sbb out jnp push inc subb adc lret ud1 adc inc aas pop jbe mov rolb fimul inc fwait pop or xlat gs into std sbbl aam jmp inc in out jo ret inc xchg sub or in pop jb icebp push jle (bad) fs xchg cmp xchg out pop int3 loope pop or dec push stc inc cld aad fs xchg pop dec lock jbe pop add leave mov je loope inc add xchg mov pop cmpsb fs and mov jno icebp and stos cmp sahf and rol xor (bad) scas ficomp inc es and out or inc pop jno subl mov (bad) fs imul sahf push lcall and jmp push jbe pop or xchg mov and push int3 or adc in addl (bad) xor neg mov inc push test pop push mov insb lea fcmovbe push mov xchg pop jp jl int push adc xchg mov das sbb jg ljmp add iret adc xor jecxz add push fistpll and add cmp mov or bound mov cmp adc clc push in and gs push adc ror sub ror int3 pusha xchg nop lret mov aam test mov stos loopne push (bad) xor mov xchg mov mov pop mov neg stos cmp test repz pop push jecxz sbb and sub scas xor in pop add ret lea test pop mov scas cltd or add aaa fldcw lret rcl ret gs daa pop xorb xor or mov lods sub lods lods jo inc (bad) ja ret dec andb aas mov inc pop (bad) loop xchg mov int xchg inc push lock jo xchg inc or push shr xchg jb add xor mov paddq or xor movsb xchg pushf rcll push out fnstcw les xorl in pop cmpsb mov jbe das or pop mov pushf insb or or popf pop mov add push aam lret adc jnp or in add lcall mov mov dec xchg mov popa das pop movsb and sbb and call cmp mov or add jb cmp add sbb mov jg ss xor xor movsl cmp add mov cmp and jp lods cs insl into push sbb loop in xor or add pop fbstp shr jns (bad) (bad) lea and xchg mov icebp cmpsb sub loop bound cli lahf mov mov ljmp or std fistpl inc jne mov mov jno mov jg cmpsb (bad) and sahf sti (bad) xor and add popf xchg and lea fucomip shlb add pop push shrl mov lods xchg imul mov mov in pop (bad) xor lds ja mov jno ja insb leave ficoml or (bad) push clc fcoml adc mov fwait das push iret adc rep insl sbb lods enter nop scas jmp bound jl popf or xchg mov scas gs or das lahf lret mov (bad) js jmp stc lock orl mov jg push ja mov insb sub mull out cmp adc xchg push cmp (bad) hlt or std lock xor xchg or mov cld add aaa in pop dec inc jb mov cmp imul cmc decl divl out sbb xor les lds jp mov pop mov xlat fcmovne xchg addr16 inc sbb daa sub psrlw mov and xchg lds jge out or xchg jecxz in lods add loopne lds lods mov mov dec pop fiadd movsb jbe cmp or outsb and shr adc adc mov jg lcall xor sbb (bad) xchg test (bad) lea shrb push sub les xchg test inc scas push xchg std (bad) mov aaa daa jl and and sub sbb sbb add mov cltd mov sub mov sbb dec pop jmp pusha rep fsubrl mov hlt sarl push jp adc jecxz sub scas pop mov outsb je into pop fmulp xor adc scas hlt cmp dec (bad) cmp cwtl fs arpl pusha sub inc sub movsl push shrb call mov into ret mov mov into inc cmp andl pop sbb outsb sti clc dec adc mov sub inc push mov dec dec or pop cmc out jns cwtl jo jp sahf ljmp ljmp or adc pop mov cmp push or stc lds test mov jl mov int3 cmp test mov inc mov in cmpb test cmc push jg inc std push in xor and pusha pop int iret mov loopne mov or shrb sbb add in mov popf or mov fcompp and inc iret mov add popa jmp push mov sbb dec ja out fbld add sub and aam or adc xor clc cld cltd cltd cmpsl lods sub jl jge adc mov jns shrl xchg inc loope lret mov fisttpl xchg xlat fcoms cmp xlat dec pop push dec push out test adc jo mov hlt hlt insb lods call sahf dec cmp mov inc mov fs push lea adc daa and mov fisubl sahf and sbbl inc mov sbbl mov sbb xor rcrb push lea pop mov xlat setb inc xchg xchg jae mov dec mov push bound daa add mov or (bad) and sbb mov pop pop cmp pop repz scas mov cmp test enter sbb sar mov xor jne cmpsb stos rcr int3 jge mov les arpl xor popa adc add ja imul pop adc divl out mov xchg lock (bad) in out fidivl dec mov dec push xchg mov jp dec adc mov scas jne int3 pop cmp (bad) mov es mov insl cs xlat sub jo jns lock push and js rclb or jl sub xchg sahf mov (bad) into push push xchg lahf mov mov hlt xchg nop incb testb movsl cmp into mov sahf inc fsubs inc in pop outsb out cmp not pop rol idivl or aam and dec mov jl and xchg cs lcall lods dec test mov xchg cmp sahf push mov jg sub movsl jle das xor sbb cmc mov cld lret jno mov fwait cmp mov dec push int lahf fwait jno lahf and cmp das rorl bound jnp in hlt and adc out push cmpsl or aas push js sti sub enter jne sub inc test jb arpl add daa add loopne nop clc xor push pop scas sbbl mov adc inc and testl mov sbbl dec xchg sbb xchg stos mov inc (bad) sahf fsubs inc fidiv or ja or sbb cmp jo push xlat mov dec push out test outsl pop xchg hlt cs jno mov fsubs mov popf xchg (bad) imulb cli outsl adc mov insl and mov (bad) push dec inc shr fidivr add lea jbe repz xchg cmp inc cmp leave cmp dec jo mov insl std repz or cmp clc xchg inc adc push cmp (bad) lds dec jle or (bad) dec shrb js enter daa movsl nop or inc or fdiv push dec mov jecxz icebp shll jmp push cmpsl mov add sub xor rcr int push call and and add das (bad) or inc add (bad) aas push cmp cmpsb push dec dec mov (bad) nop (bad) add cltd cmpsb ror scas out aas scas dec cltd arpl adc in je in jo dec das stos sub rcll add insl mov sub outsl adc nop adc icebp cli stos or scas sub adc jg jmp xor loope xchg idiv sbb and xchg es jecxz and pop jl enter dec scas mov ret lret ss lods pop sbb call dec ret fildll cwtl gs sti lods out pop push (bad) in mov mov repnz bound pop ss insl pop hlt arpl into subl enter xchg roll (bad) cmp lret jge and add or or insl or lds adc out cmp push movb xchg cmp push mov mulb daa mov (bad) (bad) mov jo push xlat mov pop cmp inc loopne mov add leave arpl or mov inc or (bad) mov fldcw sbb pop (bad) cmp ss mov (bad) fistpl stos sbb inc cltd out mov mov or mov push push hlt mov mov stos rclb jp mov jbe inc mov add mov popa loop xchg inc pop test mov stos (bad) jns xchg jg cli repz aam out jno jecxz sub in mov out fnstcw mov mov rol (bad) xchg dec and pop stos gs out dec dec pop pushf fwait and mov dec pop pop add pop mov cmc push cmp lods mov push fcomps xacquire cli (bad) cmp dec mov insb mov movsb and ljmp ret jns cmp pop movsb jo push xchg mov cmp mov (bad) data16 pushf mov outsb xor lods (bad) mov sub jmp lock mov repnz xchg in es pusha jle dec repz lock xchg addl cld add fstps mov fildll sbb mov lcall push xor and add xchg clc loope push xor enter xor mov sbb mov cld clts test sub out jne xchg adc xor adc call (bad) add jne adc xlat insb sbb adc jno insl (bad) clc mov xor inc push inc mov sub xor leave mul mov mov rcll mov jno fwait pop and jp lahf js rcrb fidivr mov inc test add mov pop push loope xchg or mov xor stos in sti sbb pop and dec or les xor fsubl aas dec sub clc jge movsb cmc popa clc out sbb inc into mov cmp loope out fldt hlt cmpsb xchg mov call sar stos and cwtl movsb xchg xchg insl outsb test (bad) cmp (bad) in xor pop mov and cs outsb mov sbb cs cmp pop scas mov in and test clc mov jb int3 push fcmovb dec ror lea sbb and cmp lcall push pushf add mov lds push daa adcl ja ret in mov hlt xchg cmpsb dec dec cmp inc dec push fsubr jle mov pop lock rcr fs or pop repz sub test gs pop jle push dec insl dec and ret inc cld mov jae sub push adc inc das mov or aad sti lds daa sub fisubrl out mov das dec loop mov xchg push pop lret imul xor (bad) lock mov lods xchg cmpsl test mov movsb mov aas and mov sbb pop jp push in roll fimull sub add cmp test lret pop or js (bad) xor add ja sub dec and mov xlat cmp movsb negb jo dec test cmp pop mov (bad) stc roll std push cltd fdivrl mov shr add iret call adcl xchg xchg decl sbb add fdiv out test adc in sub lret lea ljmp loop dec add (bad) arpl (bad) or mov test mov fdivrs jno or cli xchg sti and pop and inc mov lock je mov inc into cmp sub inc outsb lods xchg scas sti fildll movsb pop xor lea pop jle push inc add lock test xchg mov movsb mov in cltd clc sub inc aad stc push fwait insb cmpsl adc mov sbb es ret sub and shlb jb pop dec roll les out cmp jae jl aam jl xor add cld imul jle test fnsave mov pop movsb jns jle dec iret stc or cmp xor pushf sarl daa jns mov pusha or mov fdivs sub hlt push sub jmp pop mov pop cmpsl xchg movsl (bad) insb inc (bad) rolb mov cmp jbe out (bad) ljmp jle xor scas (bad) cltd add je (bad) mov xchg ret mov daa adc aad mov adc inc imul fistp out lret shll (bad) pusha push mov pop push repz add (bad) mov jbe clc call and add cmp enter mov test ds popa outsb adc testl leave test cmp ret movsl and out push xchg pop xchg mov or sbb cli in test and push dec jns addr16 jns lods jl cmpb sbb push mov out loopne mov mov push fldt cmpsl andl pop mov jecxz cwtl aam jb mov gs roll xor out (bad) (bad) sub lods or shll cmc idiv mov inc outsl jle loope adc add fsts pop je inc mov cwtl sbb xchg movsl cwtl inc jl daa loop cld pushf mov add (bad) mov insb repz or js pop in jae into popf sti inc mov cmp ds jae stos ret mov into (bad) inc mov dec je movsb lods mov jecxz rcr mov adc sbbb imul stos (bad) sbb mov test jmp and (bad) std lcall adc or in iret mov iret sarb pop aas mov pop out imull lret in add mov hlt cwtl push sti dec and dec (bad) mov cs mov jecxz testb ret sub in sub insb idivb stos notl sub sub sbb push dec lock fcoml xchg sub rorl ljmp xor xchg in or outsl fwait cmp and and cmpsl std xor in sbb fwait jecxz loope das and xchg rcrl xor pop outsl cwtl cmpb pusha fbld popa push shr add sbb into sub mov test jae xor pop pushf jmp pop ret out push pop mov jae cli cmpl ficompl mov cmp (bad) mov shlb pop (bad) xor mov inc sub pusha push leave mov mov mov sub mov dec test adc (bad) iret sub andl push push adc ret out jle ja ret mov mov in add cmp push ds xchg nop xor push inc icebp mov (bad) mov dec fnstenv push pushl mov xchg and dec lahf (bad) ja dec cmp lret mov (bad) cmp jns jbe or (bad) mov jbe,pt xchg xchg and enter xor lods scas lret cmp mov (bad) jb jae js bound bound or mov stc (bad) pop nop addr16 jp dec mov cmp add push jo cs aas loopne lcall adc xchg pop shlb lahf sbb push into (bad) (bad) sbb jmp add pop inc lods push cmp push in pop (bad) int3 stos sahf nop repz and and xchg xchg mov popf orb xor cmp out pop pushf in mov ss test pop (bad) ja inc aaa fdivrs lods sub iret ret jge hlt xchg push in decb mov cmp lahf ds int stc lods inc int3 jb jo jg aaa dec push sbb lret lock ret movsb mov adc test loope ja enter les add sub icebp or adc jae mov push jmp xor loop lcall dec xchg dec push les push jbe adc mov jbe lds mov dec pop sti pop sub sub popa mov bound repz pop fdivrs (bad) std scas xor jp js icebp rcr andl into mov cmc scas cmp out lods fcomps sub push je pop xchg and call push add and jg adc adc cwtl dec sub mov adc lea leave pop ret add or out adc dec dec popf mov sbb xchg jge lcall cmp sti add xor ljmp push (bad) cmc jns daa xchg or mov lods int xor fprem1 (bad) adc lahf push test aaa xor and popf xor movsb push xlat and mov js ljmp or cmp ja rolb les jl ficomp pop cmp jecxz in and xchg add dec inc mov cltd add js inc adc hlt fs jge out mov sarl xchg sub xchg inc movsb mov adc xor xchg lea lret mov add rorl pop mov pop loopne inc push sti pop sub pop pop and mov test xchg cmpsl cs imul cwtl adc sbb add ja pop sbb hlt and pop xchg in test ja roll out add sarl inc aad inc inc jecxz insl mov mov ss lock imul mov jnp mov adc inc fwait mov jbe test push (bad) or lfs cmp clc mov dec xor sar popf stc insb (bad) jmp mov insb sub cs es push aad inc mov rcll fbstp sbb aas pop jmp jle mov dec hlt test les add f2xm1 in push out sbb mov pop mov insb pop or imulb push inc hlt andl mov adc lcall int imul mov arpl mov jns jge enter push aaa xchg in and mov dec mov sbb jmp mov lret jns sarb push dec pop push and ljmp int3 xchg jmp adc push bound data16 ds sbb sarb push popa ficomp mov stos pop test mov mov mov fidivr stc jns cmpl shlb pop adc (bad) mov imul inc push sub mov (bad) cwtl or bound mov push push ds lods in adcl mov xchg ja push adc scas rcl popf inc or mov icebp daa stos push enter loopne mov sbb mov dec fcomi push push lret xor stos in cltd imul addr16 dec inc outsb add fsubrl xor icebp aam int3 (bad) jge push ss pop call fmull mov and or mov int dec clc sub stc sub adc (bad) ja adc addr16 rorb add pop push clc or sbb inc arpl (bad) pop rcll lret mov pop or movsb add rep sbbl mov fdivrl xchg jecxz dec div push cmp or scas xor ljmp sarl cmp jmp out cmpb jno sub cmp incb lods mov mov fsubs add jle inc scas pop arpl jl lods xchg xor ss stc xor jl insl add repnz cmp adc mov pop cwtl in push test repnz int3 icebp test (bad) cmp sbb addr16 mov mov aaa test loope dec je add sub jle je pop pop lds mov pop jg lcall imul fcompl lods adc mov call dec pop mov ret xor mov out mov test dec jecxz mov insl ds or sub fs jle pop repz adc sub aas lock cld loop inc lret test outsl int pop xchg nop cli imul push cmpsb shl fnstenv imul push jo stc mov cwtl mov xor clc push jp rcrl (bad) in xchg movsb scas sti mov lahf mov push mov pop xor and imul mov jmp sub inc repnz jl cs (bad) stos jl mov imull js jae outsl iret outsb clc inc dec aas adc bound sbb jnp sahf test (bad) mov xchg out add xchg das ds xchg jp mov xchg mov mov pop lcall jge (bad) lds fnstenv push dec gs sbb cli fnop lcall mov cld sub arpl add in push push fs xor out in pushf xor loope mov test push or movsl and pusha sub cwtl ror xchg jp (bad) cs arpl movsl sbb iret test std lret es push cmp adc icebp mov outsb jl lret loope lahf pusha sti dec or jl pop xchg xorl dec and loopne (bad) pop loopne bound pop jne push popfw lcall sarb adc jg cmp insb nop lahf cmp add fadd cmp popa adc js dec mov cmp test pop jns adcl out xlat outsb mov iret inc in ljmp (bad) sahf fist cmp dec sbb (bad) xor mov xor fcomps (bad) idivb ljmp mov pop inc add lcall fistl fsubl xchg mov lcall dec xlat cmp or cmc enter xchg cli push lahf pop xor cmp jecxz cmpsb jle and cmp scas inc jnp jl mov push push (bad) clc insb push shr clc mov inc fwait add pop outsl sar dec mov jp sub sub cltd int3 add pop add lea pop push add mov ret cmp ljmp push cmp test push or xchg sub xor sub psrlw and iret shll jo es fsubrl shrl push imul out out mov imul add add xor sub jmp lea movsl push mov inc or cli mov jbe outsb mov inc add fs repz push sbb push mov jbe mov mov cmp leave xchg inc sub mov and ja sbb xchg xlat jge cmpsl mov xchg push pop incb jmp gs decb loop or mov (bad) mov inc fdiv mov inc mov pslld in ss mov insl (bad) pop (bad) and jmp push ror repnz in imul cmpsb cmp add xor loope mov outsb cwtl out push add outsl rorl inc add adc movsb call das loop ja loope outsb push movsb pop (bad) xchg mov in xchg jp (bad) inc xchg push mov (bad) out cli mov mov push or sbb cmp push aad jb out orb test repz jbe lea xchg and and xor sbb repnz dec pop divb push add lcall mov jle inc xor cmp cltd divl xor xchg cwtl stos js inc test push (bad) mov xor jo jmp idiv sbb pop pop adc daa sub push xchg pusha cmp inc adc out stc frstor int hlt scas sub sub mov mov push jbe sbbl add inc out or dec in out cmp popa gs and or inc push or inc (bad) mov in add sub inc test dec jg int xor and dec cmp sub mov (bad) in out ret dec mov stc das jmp sti sub dec sbb xchg sub pop dec dec or daa enter xchg shl sti out dec xor add bound sbb adc jp push xor mov mov pop mov iret scas xor sbb jle push add xor faddl mov push or pop and xchg lea popa gs fcmovnb (bad) fsubrs sbb ret pop xchg icebp push (bad) sub sarb inc ret loopne addr16 jecxz pop push jbe xchg sbb mov add cmpsl cmp push and sbb (bad) sti ret aas pop ret push cwtl shrb js push cmp clc add mov pop out add pop movsl mov insl pop xor lds test add test add cwtl and or sbb mov add xor xchg pop lods cmpsl xor in jge rep inc repnz (bad) arpl push addb adc leave sbb sbb inc xor xor mov je stc cmp jl or jmp dec cmp mov add fs movsl imul add pop bound mov dec mov dec push das push push lock cmp mov unpckhps or cli xchg add insb push mov dec pop bound xchg shrb xchg xchg inc cmp inc jae add sbb xchg cmp push das jno mov cltd mov popa (bad) jb push pusha mov movsl pushf add and call dec test and fnstenv sbb push shrl loop pop pop mov jno je scas insb mov pop inc dec enter pop gs mov jbe dec mov push mov dec sahf xchg std mov xor add imul fistpll jmp mov add pusha jecxz daa mov xchg outsl dec imul sub dec (bad) (bad) daa pop push icebp movsb cltd or mov xchg sub pop mov pop bound jbe call les pop pop or xchg loop cmp scas jno enter testb push into inc xor ja cmp lods lahf xchg pop fcompl xchg ja xchg in scas push movl (bad) (bad) pop loop or xchg out ret nop out push mov icebp (bad) ja adc daa mov push or into cmpsl and (bad) pop jl in fnsave add sbb push outsb inc scas aaa mov ljmp (bad) (bad) xor flds pop or rcrb mov and fisubrl bound mov cmp pop fwait mov fldt repz mov popf out stos mov leave leave pop imul inc (bad) xor cmp mov sbb jns sbbl fisubl sub sahf xchg fiaddl xor ficom nop testb lea testl push pop les stc rol mov addl mov pop cmp out adc cmp xchg mov sub xor jg xchg imulb in and push pop and imull incb mov sbb mov es jg ja es push cmp cwtl (bad) lock js into inc lock jle nop lret scas xor adc mov in leave enter call pop add or insl ds xchg out (bad) js mov mov or fsubr mov nop add cltd pop (bad) data16 jge popa icebp aam stos cmc (bad) push je mov jne lret aad pop ret mov popf cmpsb add icebp pop lcall aaa sti jle xchg cld fist and and inc ret ret mov dec xorl mov test mov in in sbb insb ljmp jb mov imul xchg xchg mov insb or jp jbe jno inc inc ljmp (bad) mull adc (bad) sbb out jo clc lret mov ljmp xchg dec or mov inc inc jb imul pop inc out cmpsl loop xchg dec push jg das pushf mov imul mov jle out add arpl shll rorb fstpt fildll roll insb movb pop mov push mov (bad) mov sub str mov ljmp das shlb repz neg sub ror xchg cmpsb jb bound lret flds popa icebp cmp xchg dec push push pop sti lret mov mov cwtl dec jl and jecxz xchg pop mov scas pop pusha and sbb jo fdiv xor xchg cs cmc cs mov dec gs fs push add lahf cmp cmp imul push push adc fnstsw movsl imul (bad) jmp cld lahf pushf pop pop xchg push enter sbb mov jnp mov imul mov and lahf arpl pushf pop stos test inc insb cmp rcll mul or xchg and loop cmp jbe js mov repz jb (bad) jo fs data16 mov mov dec lea inc fwait inc es shrl (bad) xchg fs or mov ret inc es and mov repz pop dec (bad) pushf add enter xchg fidiv (bad) mov loop in mov mov sbb mov lods mov mov lods ficompl mov fmuls cmp push out int3 mov cli push lret mov sbbl pop push rorb sbb push in addr16 or add fcoml movsb nop cmpsb sbb mov cld lcall mov and mov imul adc icebp mov out or adc push into (bad) in mov mov dec and out cld shrb scas adc push ja and insl call dec fildll sub jne mov aad (bad) pushf sub jno (bad) sub mov aam mov cwtl add and sub gs add mov mov mov fbld mov fisubr adc jl mov lahf mov mov lret pusha lahf and jns mov jnp pop loopne,pn in mov (bad) int3 xchg fild enter inc (bad) mov pop mov int psrlq imul cmp pushf inc or inc pop xchg sbb mov movsb push or push pusha ret insl cmpl jne,pn and xor add cld insl fldcw pop stos shrb iret and ljmp sub jl and out addr16 push pop lods enter mov pushf insl (bad) fimull loop repnz int (bad) pop aad adc or xchg sub addr16 sbb dec popa mov mov and aas pop loopne fistp scas or fsubl and les pop adc push cmp divl fwait xchg in lods arpl jmp lods lods pop fldenv pop and (bad) jecxz pop cmpsl cs add jns xchg jo sbb ds loopne pop adc into loop and push or and test enter push inc mov mov ret cmp cmp fnstenv stos jo dec sub sahf lret fadds fsubrl out xor sbb call jnp in aas lock dec rolb xchg inc jp,pn popa cmp mov pop nop mul outsl shrl aam lds sbb pop pop or mov dec inc xchg adc stc ss pop idivl adc push lock jbe sub subb jecxz (bad) cmp pop pusha (bad) adc div loope (bad) and or inc lds xchg dec loop pop push loopne push pop es loop es xchg loopne adc add push mov (bad) fcmovnbe dec frndint pop mov sub mov cmp mov repz or lcall mov sub les pop aam jmp aad jae mov out mov sub and mov aaa in mov or outsb scas dec es cmp mov adc outsb jp out inc (bad) fcmove sbb or (bad) (bad) xor nop or loope xchg dec lods sub fdivrl push xchg je movb mov ror push cli and fisttp push adc loope jge pop les cmpsl dec insb jmp xchg mov jecxz das cmpsl mov popf lcall xchg xchg incl arpl jle testl nop aam loop mov dec lahf movsb movsb pushf rclb adc (bad) push sbb loopne sahf and notb xor addr16 std sub int3 addr16 out dec adc fiaddl lods push inc add sbb or sub loop xchg out mov loopne sbb das jl mov cmc push mov repz movsb push push inc ror jp out ret cmpsl sub dec push sub imul fwait js add inc mov cmp repz cmp cwtl pop enter hlt xor decl pcmpgtb (bad) cmp sub lods hlt adc inc or inc cli (bad) bound pop push jnp mov in jb or fnstsw jnp popf cmp je leave (bad) mov sub rorb lods push fwait lea repz jge jmp sti jae,pt lock out (bad) arpl cs cmpsb imul xor cmp push jns or loop dec inc in into icebp pop outsb lret bound addr16 decb pop sub sub add js mov (bad) jnp (bad) jne call sbb imul inc fnstsw mov xchg mov lods cmpsb xchg mov jnp imul rcll sub imul jmp clc (bad) pop arpl mov jno jb sbb popl mov cld addb in adc aam xchg (bad) push fisttp push cmpsl outsl rolb mov shrl gs mov mov xorl (bad) fsub daa add sub push xor hlt aas and repz jg std sub inc testl or adc aas jns push cmpsl cld scas push push push int3 cmpsl push sbb roll and or sub das lods dec xlat js aaa xchg sbb cmp sub mov les sti leave iret loope hlt roll xchg and or jl dec mov ljmp push xor repz rorl add mov jne push mov xlat mov lahf push mov aaa aad adc mov mov (bad) and imul inc sarb popf cmc inc (bad) and sub dec jl push out sti test jp and mov mov scas lcall addr16 add arpl dec sbb push daa sbb (bad) mov or ret shrb pop test jo sahf sub out bound add pop or lcall mov push data16 fsubrs xchg mov cwtl insl sub imul inc bound sbb mov xchg xchg and mov loopne test out int3 add and dec outsl mov push mov fidivr aam fiaddl lods ja lods xchg mov scas sbb adc sub lahf (bad) xchg repnz cmp cmp int3 test jle cltd andl lcall aas and xchg ret xlat xchg jne push push inc out sbb loope fistpll (bad) mov (bad) sahf out jo imul cli mov jno lcall repnz shrb inc adc cld pop iret sahf pop push cmp andb sub add xchg ljmp les add pop or dec pop pop scas aam ret aaa pusha sbb ss ja mov pop repnz jmp repnz dec mov sbb std and mov outsb mov pushf imul in sub pop sub cltd sbb jl (bad) cmp shlb or bound int3 cmp mov mov push fsubl scas push push or stos lret xchg pop fcomps sbb push push dec push adc mov stc (bad) in inc stc adc and mov call loopne fwait xor loop xor cmp rorl cmpsl pop fild lcall xchg in test cs call mov lods push rcl mov dec mov enter pusha ds push loop xchg mov xchg out push or or das mov out mov dec jns xlat mov (bad) (bad) loopne lds sbb and sbb sbb fadds jle shll outsb int3 leave adc xor xchg push insb push (bad) pop inc loope sbb ds add js pop adcl (bad) stos stos xchg and clc ret (bad) cmp or sbb adc xor xchg sbb xor pop xchg add aas xor dec cmp xor fnstenv and in mov pop outsl mov dec mov mov mov movsl in cmp mov mov (bad) pop test shlb shrb pop push jmp push inc jae fsub or push inc or adc sub cwtl fwait push pop (bad) jno cmpb adc pop cmp jne popa cmp sbb xor out jecxz std mov arpl int push xlat jae mov cltd sub pushl out and cmc pop int3 jle sub ret nop ret jp mov dec xchg dec cmp inc push fcmovnbe add push mov scas sti (bad) jae jle les mov push add aas and jp addr16 xchg popa ret jo movl jg xor repz pop cmc mov int mov fwait in xlat popf leave pusha jae add idivl xor fcmove xchg fsubr ficom int lahf cltd and mov or push pop xchg ror mov leave fwait gs stc (bad) pop sti clc orl loopne (bad) shll dec test dec out cmp mov and cltd fcmovnbe and or jne pop push fs aaa push lret mov fs push punpcklbw lods pop dec jne sahf data16 dec lock or fcoms add gs mov aaa icebp xlat push pop push rcrl pusha pop cmpsb sar mov je sub outsb cld hlt ljmp xor add (bad) cmp into push xchg cs mov mov mov add pop mov sar stos xchg cmc pusha fwait inc cmp add mov test cli xorb push adc arpl jnp je adc cli cmp cld fs xchg test lret movsl inc push out in jmp push bound enter inc std or cld repz push sub icebp pop hlt js or pop and mov mov sbb dec fs es mov mov push test and hlt fldt je punpcklwd dec pushf adc push test (bad) push out sbb pop lods repnz mov cld xchg jl in in adc inc pop test fs lret mov pop inc rorb popf (bad) add lods mov mov push lods lods stc stos mov push jno xchg mov popf push out sbb add insl (bad) jns add ljmp pop stos inc adc xor icebp test xor lock dec xlat les push mov loopne ret leave xchg call loope and inc aaa lods pop aas mov insl test loope and (bad) leave clc mov xchg xchg lret mov pop cltd insl push jl ds cmp mov mov adc decb nop jge mov dec mov jg cpuid out push jge lcall and xchg fistpll push (bad) outsl rorl push pop int3 lea sbb sub mov sahf es fisub das cmpsl std (bad) ret mov push mov push xor xor jb cmp xchg call pop ret adc movsl or mov ss jb dec (bad) and push ret ja or jns std scas dec xchg (bad) fmuls add xchg sbb hlt mov pop (bad) daa push dec outsb push lret dec pop push fwait jmp inc xchg pusha aaa mov jl or xor or pop xor mov cmp fidiv cmc sbb lods das fcmovnbe mov mov xor loop shlb lar add mov adc fdivrs xor and xchg xor dec insl stos sub cltd mov lahf in jns adc jmp add ja rorb into dec jecxz inc fidivl mov jno mov xchg scas cmc or or or aaa js jo out ret push test sub inc jmp iret push or cld or loopne xor je adcl lods outsb cmp (bad) cld push aas mov cs inc pop aaa jle mov imul loopne add and xchg cmp nop sub mov hlt les mov popf push sbb mov push or mov jbe nop cmp mov mov inc leave mov mov jmp repnz int push mov xor into out int3 push cltd add add cmpsb fisttp mov dec inc ret aad int3 lods jo adc fidiv jne push mov pop mov sbbb icebp out (bad) fadds lea rorl js xor sbb gs add aam cld (bad) hlt rolb mov cmp pop dec or pop loop add jb out sbb test mov cmp (bad) pushf imul mov bound xor and les adc or cmp movsl or insl jg pop mov arpl pop (bad) jmp lods sbb lock lods insb or aad idiv enter pusha arpl add dec dec sbb in fadds jg xchg pop pop jle mov imul addb sbb jle or out lcall push mov dec adc sbb dec and push push sub add cwtl push call clc test aad rorb sub cmp test (bad) pop ds ljmp repnz cmp lods or inc loop popf lea cmp nop les add adc test push arpl sbb add sbb inc xchg pushf leave xchg sub push push bound repz fmulp cmp cwtl out (bad) cmpsb cmp (bad) mov es xchg xlat dec iret push or adc ds jecxz mov pmaddwd xchg jge mov adc test cmp sub xchg mov cs outsb or jecxz popf sbb addl add jbe add call mov push es push jae cmp sbb mov push int xor or ret mov sbb in add push mov adc ss xor pusha ds mov and and rcr fwait lods add or or jl push add movsb nop push and cmp push inc pop lahf call lahf or mov sub mov dec or out and in mov mov (bad) mov lock push mov xor rcrl xchg int pop inc dec sbb sti adc ret ds out je stos cmp daa in cmp mov lea jp (bad) or push mov fstpl loopne lcall mov orl (bad) stc sbbb sbb lds test fistpll rcr and lods fsubr adc jg push data16 (bad) jo jg icebp cltd mulb in outsl pop orl out xchg dec mov (bad) aaa in mov bound add cmp lret add mov adc add test mov xchg cs mov iret cmp pop jmp fiaddl mov hlt ret cmp and loope cmc cmp fcompl gs fistpl push cmp stos xchg insb aaa sbbl adc mov frstor and mov push push shll sub xchg testb mov mov pop jne add testb fs push dec dec hlt push and fisttpll xor cmc push out adc test mov jecxz das or sbb imul daa mov pushf inc or add cmpsb push fnsave cmp xor pushf sbb scas mov xlat or xchg clc cmc nop push and jb mov stos jecxz push push sbb push (bad) mov jg addr16 in xchg sbb test clc or movsl add les not jmp orl ret arpl xchg xchg pop cmpsl xor jo pop mov mov mov andl lahf cmp out sub push adc testb pop xor pop or xchg pusha gs addr16 in flds mov mov jnp inc popf data16 std in mov mov xchg mov (bad) outsl fmulp adc loop pop loopne push pushf xchg divl mov push call push data16 jo mov jle pop mov pop mov iret popf sub sub inc mov popw movsb mov adc push ret lods or add pop add data16 jle fwait jp pop in out push test jmp into mov mov (bad) and stos or ja mov int lds and scas dec (bad) in push popf jno push jns sub loopne add les push lock fyl2xp1 add icebp sbb mov cmp xor cmp es fcoml inc gs call int inc stos repnz pop sub pop loop pop cmp add stos shr pop or push pop cmp mov mul and lds stc rolb daa in in jnp xor je ja dec mov mov xor (bad) hlt mov push movsb mov daa cmp aam and lea adc pusha lods movsl popf cmp pop adc cmc xchg or xor ljmp clc (bad) pusha sbb mov (bad) push or xor lock daa sar mov insl pusha cmp lahf jbe push and test sahf orb daa popa scas (bad) int3 fdivrp mov and cmp mov rcrl mov cmp fistpll pop mov in (bad) js mov jg dec cmpsl pop push jmp test xor hlt scas inc cmp jmp add sub jl int3 sarb dec jp xchg add test das inc fiaddl sub imul and xor iret lods or fcoml pop pop inc mov dec popa test xchg add stos inc mov vphsubbw sti mov (bad) mov dec jmp pop dec push mov push scas mov pop pop cmp add ret mov inc jb xor and icebp xorb sbb mov add fsts pop xchg mov sbb cltd mov loopne loop test std (bad) out sarb mov dec mov jge mov push jae cmp push out xor fist or (bad) xlat xchg pop faddl inc mov and testl scas sahf shlb rclb pop call jecxz notl aaa aas mov pop jl and cmpsl jg lds lea loop hlt shrb push loopne fwait and fimull dec lret fdivs test jmp icebp lret jp imul sub xlat or hlt and outsb mov fidivrl adc adc mov or leave xor pop jp out mov rolb lret lea inc mov sar mov xchg test inc in cmp sub mov add mov popf push add lds jmp push inc insb hlt in xchg jge test or push ss shl (bad) sar inc lret add mov fcmovu push out test mov push arpl cmp repnz cmp mov cld into outsl jno pop mov int es imul fstpl jno sub sub dec (bad) jl dec (bad) pop (bad) leave or lret (bad) out icebp jbe ja adc test cmp fwait loop mov or sub insl mov mov cmpsb test enter adc popf push dec mov out shrb out outsl pop mov call inc push lock adc cmp xchg cmp dec stc jg int3 (bad) mov data16 fildl pop (bad) (bad) xchg sbb jo movsl fwait push aad jae pusha mov pop imul das mov in lods xchg test cmp push mov push mov dec cld cmp dec jae ret test repz push and pop jecxz jmp jmp push xor or xchg leave (bad) push cmpsb fidivrl in jle in add jge repnz sub xchg bound arpl arpl push pop xchg pushf enter out bound jge bound aas lahf loop xchg xor lahf pop jmp loop mov imul mov inc cmp xchg aam lret iret mov inc xchg cld lods lcall clc and mov pop pop jnp fildll and leave in (bad) std ret mov push out outsb mov adc dec (bad) shrb addr16 cmp add sub enter test das xchg shl mov mov lods push and adc mov loopne lods xor fcompl lret push push fldcw repnz mov mov add jns dec mov dec cmp lock or cmp outsl sub les (bad) jmp andl outsl fidivl and mov xchg jge push sbb mov pcmpgtw jb mov movsl js xor jecxz adc sub loope adcl es inc rcll shlb jae push jno fistl xor repz pop sbb sub xchg mov or data16 popf insl mov movsl xchg xchg mov dec push cmc mov mov xor mov mov rcl in enter call outsl jg pop into push lds fdivl and lds pop (bad) xor mov in push xchg xchg jp mov cmp shlb enter cmpsl add fwait add insl cs daa xchg repz lcall stos cli les mov scas addr16 ret xor ljmp xlat inc dec movsl sarb in sub (bad) dec push inc or lock rcr sub enter (bad) mov inc xchg jne into je xchg sahf leave (bad) mov jle fisub fmull and fcoms pop adc inc (bad) pop mov data16 mov adc push lods movsb (bad) aaa xor sub adc pop lods iret xor mov test rcrl sbb sarb or das fcom add mov push cmp icebp ljmp xor (bad) or inc adc rcrl mov gs bound stos mov daa sub or or imul pop push xchg inc cwtl add (bad) mov jo xlat push jl xor fmuls xor cmp or mov (bad) xor xchg inc cmp call push dec add es dec lahf out pop movsb in fild test jecxz clc dec mov xchg fcomps aad mov (bad) mov movsb test lock scas cmc mov repz xor addr16 lds add out cld push lret xor jg or pcmpgtw cmp ret push andb imul and dec pop popa lea repz and or add dec cmp or test fadd dec cltd jno mov je aad cmpsl push popa cmp jb lea fwait imul inc mov int inc nop negb mov and ja dec fistl mov xchg out mov stos mov aad mov testb xor or rclb xchg call daa outsl sbb cmc in cmp mov aad xchg mov mov fst lret cmc xlat cs add sub adc aad pusha aas adc cld xor push leave lss in je rcrl pop mov add aaa or jmp sub jae cmpsl je cmp in or add cmp fs jge push xchg aam xchg jne test pushf dec mov adc dec fadd cld push cmc bound repz test dec aad jecxz push lock rcrb sub lds sti xchg or rcll pop lcall aas mov pusha add jmp lret inc aaa cmc enter push push and nop (bad) xlat cltd jns add pop add cmp movsb inc es adc pop mov jae sbb data16 xchg cmp push or pop ljmp and xor (bad) jnp push clc xor sarb pop mov cmovns fdiv push push dec mov aaa (bad) iret stc push (bad) push push and lret stc ficoml push dec sbb adc push push xor sub fisub insl divl inc popf inc mov cmp cmpb in (bad) xchg (bad) loopne (bad) in (bad) lock popa adc rorb xlat clc dec xor xor std jecxz xchg mov das inc icebp rep cli data16 push ret fnstcw addr16 fnop cld mov and sub hlt sbbl jb mov lea mov xchg mov sub xchg mov incb out stos adc popa mov push in fdivrl sub stos scas push pop add mov lea (bad) movsl cmp inc sub cwtl or incl xor adc inc fldlg2 adc xchg mov sahf sub jo xchg fist dec mov orl aas (bad) jno and out sbb int3 lcall aad repnz cmp jl jge pusha inc sub add and dec pop pusha mov inc mov addr16 xchg mov add mov ret int in mov ds scas jle scas push xchg int3 fstpl mov push cmp xlat sti mov sbb xor mov mov adcb fisttpl inc lods mov sub xchg and decl jns imul cwtl arpl fidiv out mov pop aad mov arpl fidivrl jnp sub gs push adc bound pop into inc pop outsb push std sbb ret sbb push push xchg push cli jecxz xchg pop adc push fildll pop test mov mov mov inc pop movsb mov js cwtl pop xlat sahf sti lahf inc lock repnz sub daa sub mov push mul xchg mov daa pop cld adc dec mov mov cmpsl js js cs push ljmp mov in enter mov ds inc adc pop iret (bad) mov xor int insl jg and icebp js inc pop dec sub movsb sub movsl lret call xchg cmp or cmp adc inc mov push inc add jl mov in lds jno (bad) mov lahf leave stos (bad) rcrl fidiv (bad) adc (bad) mov inc lock dec cmc es mov fldt adc repz mov fdivrp fwait aaa cmpl mov das and jo pop leave push movsb xchg int3 xchg mov mov xor jp insb pop and pop (bad) mov aam das fidivr nop pop (bad) ja cmpsb jnp les scas cld mov aam loop movlps imul jle movsb dec ret imul pop inc xchg repnz sub jl xor mov sbb adc mov cli mov pop lods imul sbb mov cmp mov imull push mov adc jbe jnp adc xchg add cmp sbb push add inc sbb inc enter xor shr imul insl pop mov cs adc mov pop push pop pushf ret sti out push xchg push mov pop or cmpsl add pop push lods (bad) test lret jg test mov push inc add repz push push mov aaa out mull shrl mov mov pusha or jg pop call push sub aaa xchg loopne lock xor nop sahf dec lcall mov jbe xchg rorl xor aam mov sbb inc jge cwtl mov sbb lods test por cmp test mov aam cmpsl imul inc enter inc cld xchg sbb (bad) (bad) out scas inc pop cmp mov sub jge rcrl and cld cmovs mov xor std pop and push xchg mov fstps outsb xor ss (bad) shll inc jle rolb pop sbb add xchg push push movsb aaa js rolb stos aas rolb dec mov cli sub xor out or xchg and dec fnstsw jp xor fstpl pop lret sbb outsb xchg push rcr daa mov pop sbb cmpsb lods mov enter push dec pusha or cmp imul adc (bad) jbe (bad) cmc dec mov cmpsb pop orb inc push xor les dec add mov data16 xchg ljmp bnd mov cltd mov fdivrl mov sub gs adc push adc add pop bound lea add (bad) (bad) mov jae xchg into mov add test imulb sahf mov rcr adc pop or (bad) push subl lock dec (bad) in ror stos dec into mov cld lea xor push xchg std cmp ss in jl lret or ja jnp xchg jmp insb dec adcb mov (bad) ja and int add jns cmp push pop sahf stc sahf xlat jge cwtl inc (bad) xor fcmovu jl push (bad) dec sahf pop repz movl out pop je addl popf cmp xor or xchg loop mov bound das fnop popa cmp dec add inc adc adc xor fsts xor das in imul or sub lcall nop out mov jmp (bad) testl stos inc sarb mov mov jns push loopne xchg sub xchg mov pop xchg mov in jmp mov sub outsl cmp pushf shll adc in stc push ss push dec pop and (bad) out leave xor fmul in repnz cltd sub sbb adc gs (bad) or mov (bad) inc insb movsb xlat cwtl sbb cs sbb or les stos sbb or add mov pop push pop xchg mov cmpsb in (bad) push sbb and sbb dec sbb fildll pop pusha mov fldt mov incl es cli shll pop test dec loop int popf je mov push sub or dec aam insl movsb cmpsb loope sub lock mov lcall ljmp mov jo roll mov rcrb enter shlb mov (bad) sti sub into stos cmpsl mov xchg adc xchg nop popf push imul popa arpl ret es inc push jle (bad) jo add mov addr16 lret push out sbb pop cli jg sti rcll jbe ret fstpt lods shr out dec jecxz push bound mov hlt aas sub in arpl mov push ds frstor das (bad) mov loopne inc dec adc xchg mov aas pusha cs or mov xor js sbbl rcll or mov xchg sub stos out jg pop fldl arpl iret cld sub loop inc outsb inc mov (bad) jecxz push arpl (bad) and cmp mov and jmp push ljmp dec rorb dec jle sbb in mov ret mov dec fist jb push mov popa or cs (bad) faddl dec test pop or aas sub fwait cmp inc stos aas stos dec pop add cmpsb and push ljmp jmp (bad) mov mov adc add xchg popa sbb jns push scas jae movsl dec fisubr sahf sahf std test addb and mov rcll adc mov incb int jl lods xchg jnp dec jl lods nop mov push (bad) sti jns aad inc fild fildll std jnp pop nop movsb ret cmp push sbb sahf movsb adc and pop ja cmpsl int3 pop xor movsb dec outsl mov outsb inc subb repnz cmpl imul (bad) add pop inc xor mov or pop je mov movsb or lea shl add mov pusha fisubr xor jecxz cmpsl leave test mov and aam mov (bad) mov mov jno push subl push (bad) fs sbb loop mov imul cs (bad) mov lea imul sbb pusha bswap cmp ljmp cmpsl je out jmp adc lods mov cltd repz sbb dec cmpsb xor stc sbb inc aad hlt test ja mov leave push push into mov test sub (bad) dec push (bad) je or mov movsb stos clc jno sbb pop pop lret xchg (bad) jb cmpsl outsb push adc stos add sub adc fadds and pop and sbb mov jb mov xor dec mov out test dec mov stos fyl2xp1 mov fmull xchg mov (bad) int3 into sbb mov add or nop push jmp adc pop sub adc nop inc xchg lcall popa (bad) xchg cmp mov cltd cli inc dec in dec push and lahf add mov cld and rclb gs out pop lcall add xorl imul push jge outsl test push mov (bad) xor push adc outsb or add lahf xchg repz xchg sbb iret imul popf push insl adc fidivrl pop xor imul pop mov fnop ds sub xchg xlat push gs sbb std in clc dec mov xchg movsl xor ret mov xchg mov daa sbb pop lods aaa rcrb (bad) lret out mov pop scas pop jb cmp dec mov sub (bad) fisttpl arpl mov inc pop adc fldt (bad) dec pop in add jne hlt data16 sub mov mov cmpsb jecxz pop (bad) mov outsb arpl xchg imulb test lods cmpsl roll popa les sbb mov lahf sbb sub das mov stos xchg mov andl das sbb fcomp ds ljmp add sbb into pusha scas xor call push push and jne cmpl sbb adc push xchg add adc (bad) xchg add sbb lahf fisub lock xchg cmp inc mov push dec hlt pop jge pusha mov fldenv pop outsb out mov sbb and addr16 add leave ret inc add fisubl aaa pusha sbb lods data16 lods lock xor into mov sub cmpsl add inc shrl gs scas pusha mov pop pushf push push fidivrl push (bad) push stos inc iret enter cmp and pop lret icebp add adc mov inc pop lods sub xchg jns lock jge in in pop mov fcmovnbe jbe dec pusha aam ficom cmp cmp inc mov mov xchg xchg sarl icebp (bad) divb cwtl (bad) sbb daa push dec pop jb (bad) clc dec mov imul cltd push mov add insl mov (bad) pop into (bad) inc popa inc adc inc mov das xchg inc mov xor divl sti add cs sub and sysenter pop mov sub pushf and lcall lock and (bad) and pop cmpsb push fdivrs xchg inc cmpsl pop and testb jne and mov adc fsubs xchg outsl clc ret pop aam lds adc cmp imul sbb test push (bad) mov test and pop test stc xchg cld or call rcrl xchg mov mov mov (bad) lods mull (bad) shr or (bad) loope inc mov stc pop fiadd mov loopne lods gs jle stos cwtl xchg sub andb add cmpsb lods push pop dec std mov dec jl cwtl sahf dec sarl sar loop mov cmpsl cmpsb xchg out ret js shrl pop adc xchg daa pop mov dec dec outsb and cwtl xor imul jp push imul dec lret push lock or pop lahf sub jno dec jo adc mov sahf push lods xor jbe cltd outsb clc lret mov push imul bound js dec into adc push mov out push push mov rcrb cmp push jp sub or or (bad) data16 inc push pop in and call scas add loopne mov sub push xchg pop pop mov or cmp mov or outsl fidivl and sti mov mov mov shrb rclb ljmp pop mov add adc xchg sbb pop or addr16 push mov mov xchg sahf cmpsl lret (bad) ljmp loope xchg flds lret jb sub cmc pop mov mov jge lods lock pop pop jo test mov rcr and inc cmp xchg jbe pop jb fcmovnb dec ss sti les jmp mov fmuls nop stos mov js pusha sbb adc je jo add fist insb mov fstps mov mov pop xlat fs pop int3 test pop or mov loopne (bad) (bad) sub xchg inc test jmp (bad) cmpsb and icebp in xor aaa ss (bad) mov rorb pop and test add in push mov cmpl ret imul xchg mov je (bad) ss xchg orl (bad) mov clc xor cmpsb xorl stos fst dec loope fldenv push sahf enter sbb mov es cmp pop mov push cmp cltd divb fidivrl out cmp mov push inc mov xor push dec jge popa xchg mov cmp repz repz push sbb popa les out ja or mov jo dec xlat xchg jns sub xchg adc mov sub cmp mov or lds imul stos insb or mov mov orb test jge stc pop and scas jae outsl lahf add mov fwait aas cmp lcall mov jl mov lret int xchg mov leave dec inc xchg js (bad) leave insb sbb adc std cmpb call xor movsb adc and mov ljmp cmp adc pop in pusha insl push adc inc mov addr16 popf mov push xchg jle mov adc lock scas push in inc xlat jnp popa mov cmp fs sub pop aaa jmp pop std sub mov arpl jg pop jp mov push pop je (bad) leave jp movd cld fbld or cmp stos and xchg js insl fstps cli mov or jae push mov fcmovbe das inc push movsl outsb xlat (bad) or jmp popf add addb xchg add add and or dec jo mov enterw push xchg int3 push mov mov aad scas ficom mov inc ficomp stos or mov pop pop sub pop clc repnz push fidivl cs mov sub leave inc jge (bad) mov dec adc cmp fbld sbb stos or mov subb ja sti xor sbb mov add adc and gs xor and repnz push inc pushf fstl pop cli loope sbb lret jo fiadd push mov xchg push mov cmp dec cli push dec push cmp or test daa mov push in and jl or xor (bad) push mov lods add enter ljmp test inc cmpsl insb repnz adc add xadd jo mov rorl (bad) (bad) cltd (bad) int3 sub mov adc jbe sbb insl push sub jne mov pop cmp mov mov repz fs mov rorb mov mov add push ret push adc pop out sub dec decl (bad) push xchg pop xor stos or lea leave je incl adc lds iret cmp mov aas xchg repnz inc and jnp cs mov or push xor push outsl sub cltd fsts sub roll fmuls addr16 adc into aad xor enter ljmp dec out cmp inc arpl outsl (bad) lods sbb stc call mov (bad) xchg mov lock and mov xor cmc push jno push ljmp cli fistp mov sbb sub add in push dec mov lods lods es pop out insl int3 out out sbb iret cli repz mov cmp and mov mov fdiv mov aad inc sti sub jmp xlat aas push call mov les outsl adc fwait lock dec rolb inc psrld add les sbb lods xor dec xchg popa mov jg stos repnz push pop mov xorl inc ja lods dec (bad) ret sbb mov jge mov sub lock hlt or add push test out push mov popf xor lcall into pop mov ljmp ret jb mov lahf nop imul les fdivrs push push orl add and (bad) mov push xchg push fnop xchg call insl adc scas inc push mov mov push sub or lods sahf cmp into iret cmp add cmc mov push xchg push mov push ficomp sub stos out loope mov gs iret adc (bad) insl clc dec test dec and sub jmp dec aad xchg xchg cmp nop add pop sarl xor mov push es xchg fs (bad) cmpsl cmc pop mov adc push or push mov or push rcrb outsb push mov inc pushf adc rcll je mov fmuls (bad) pop xchg inc dec sbbb loop xlat dec push pushf and sahf inc icebp cs push dec vmovaps or push mov cmp dec hlt ss sti dec cld scas inc jl rol sbb jae aas add inc xor inc pop or in adc divl dec mov xor pop pop xlat xor or outsb sahf mov dec mov add adc mov aas add repz fstpt adc inc stos rorl pop mov mov cmc cmp call lea je bt stc cmp pusha pushf call pushl push mov call cltd pop (bad) jnp inc mov call mov movsb mov cmpsl or xchg sbb lret cmp mov push add mov sub loope push and jae dec jae add sarl inc lret pop cmp pop test (bad) ss push cs jmp jne clc out sbb js pop xor cmp insl iret mov sbb sahf or jbe sbb jl cmp xor sub dec arpl cltd xor decb fnop aas cmc push in xor push iret sub test inc test pop outsl (bad) div xchg xchg js out enter in sbb adc add outsb imulb sbb pop sub hlt mov inc pop inc test repnz inc sbb in sbb ljmp fildll ret sbb pop push lods stos dec inc sbb iret je into lds dec push sar int3 lock sbb mov aas ret adc incb mov dec nop inc lret shr scas cld jmp mov mov out push (bad) xor mov (bad) jnp xchg cmpsb pop and out mov mov jp stos out add pop mov xchg sbb test cmp dec aam xchg push fisttpll and adc inc add loop add adc push lea jae daa adc cwtl dec pop aam bt pop btr mov stc cmc push cmp pop lahf lea mov jmp movzbw mov cwtl mov movzbw lea call xchg js and add aam and sahf sbb jae sti adc pop (bad) outsl mov lods lret stos xchg pushf leave mov mov cs incb loop mov inc mov or ret rcrb jl push lods andl inc push jle dec dec sbb mov repnz sub sarl in ljmp pop or sbb dec rcrl divl push psubusw pop pushl dec es fcmovbe inc add pop in loop (bad) xor dec (bad) leave xlat push in jnp adc movsl sub ja cmc adcl les mov fsubr mov add shl pushl cmc test mov clc cmp movb lea jae test bt cmc bt sub pushf mov lea call jmp add mov cltd xchg push sahf je insl mov sub mov mov cld addr16 cltd ljmp xlat add mov outsl (bad) (bad) sub or jge std and aas jmp fnstcw outsb cli jnp jg enter mov dec (bad) mov jmp bound pop rep dec movsb std xchg mov push loopne sbb push mov pop call jl je lock pop xlat inc mov sub push fs loopne cltd (bad) (bad) sub jmp hlt cmc pop icebp and cmp into jge cmpsb repnz fsubr cmp stc fstpt add sbb inc push jb fwait mov dec test push nop lahf outsb out pop xchg lea je pusha bt jmp stc mov cmp cmp test pushf lea je clc add call add mov (bad) mov add jmp xor int divl sbb inc lahf fnstsw lock and fs addr16 pop add push in mov in push shrb popa test adc xor fdivrs test (bad) jo scas pop dec out jg test lds xor dec pop jecxz dec mov loop fnsave lahf repnz pop pop shrb in lods (bad) repnz mov pop lea pop xlat pop sti xchg in sub cwtl fdivrl sbb lea add fstpt mov push sbbl adc dec dec or or pop and pushf lea jmp jmp mov jmp orb popa or mov jbe push xchg test movsb inc adc push sbb sti jmp lods cmp adc mov or icebp push sub daa movsb jecxz or xor cmc popf adc jmp cmp mov jge pusha xchg fnstsw sti loope je push out rcll clc sbb fildll ret decl cmp loop (bad) jmp jno das adcl pushl jecxz jecxz arpl or test add outsb (bad) xor push pushf adcl or cli push pushf lea je push lea jmp call pusha stos push push pushf pushl lea jmp mov test clc cmc call add dec popa imul jb inc imul jns popa je inc js jae jae jo icebp lods adc push mov popf add xor cwtl jae cmp lods adc outsl adc pushf add bsf mov clc pushf pushf stc cmpb push movb push mov lea jne push pushf pusha lea jmp pusha dec clc movb rol clc neg bt movb push mov cmp lea bswap lahf sets lea setb lea mov pushf lea ja pushf lea jb cmc call mov pushl movb push mov stos pushl pushf mov mov push movb push mov lea jmp mov jmp push inc mov inc imul jp (bad) or lods mov push stos mov punpckldq (bad) icebp inc mov pushf adc movsb pop hlt and cmpsl fnstsw iret data16 (bad) push (bad) js ljmp lahf or cwtl mov or dec dec ljmp stos add push popa je inc imul jae add push inc cld xchg arpl dec enter mov jbe push shlb pusha data16 mov cmp jp jp pop mulb jne bound dec psubq test sub jmp mov ss in xchg push adc adc jno (bad) fcoms fcoms or cs xchg je (bad) mov sbb or sub cmp hlt lds or inc mov call je inc mov dec adc adc test test movsb aas ret pop fmull pop js arpl mov inc mov test and outsb pushf stos pusha (bad) sbb pop insl movsl adc popf mov (bad) dec lret pop inc cmpsb xor sti add xchg loope out out stos push jg push (bad) push add sbb test roll cmp mov test (bad) icebp mov stc das setb push sbb inc jecxz jle nop lock xor in pop adc (bad) ficompl xchg mov sub or in or subl int3 jns divl mov xchg cmp jecxz adc lahf xor fsubl (bad) mov gs inc mov or add add or add add add add add add mov add add test add add add add add or add add pop sbb add mov push add call mov add (bad) mov add jmp jmp lea jb cmp test cmpb pushf pushf jmp not lea pop push pusha pusha pushl ret push movl jmp lea ja clc imul call mov lea jae pushf pushf jmp fistl cmc lea inc stos push sbb mov out xchg pop in hlt dec jecxz xor mov mov jmp sub dec or sbb loopne cmp mov inc push jno hlt push push ds fisubr loop sub add jl stc push xchg mov mov out sub dec adc cltd add mov or stos xchg add push jg mov stos fstps ss adc std das xchg int lret adc ds mov mov orb adc or lea jp xor rorb sub push pusha sarl xor xor inc test dec mov inc fsubs inc and jne and rcrl shrb xchg push cli xor xor adc cmpl in les mov pop mov fidivr addr16 pop int3 loop cmpsl jg mov movsl and mov sbb cmp sbb xchg xor xchg xchg pushl ss stos shlb adc mov rorl mov es cwtl (bad) repz cmp loopne (bad) test jae adc into and lcall loopne push adcl ljmp sar xor push int3 lahf int3 cmpsl push icebp add push aaa loop push inc mov pop pop notb pop xchg or pop cmpsb cs dec aam and lcall mov loopne out movsl in adcb pop sub (bad) and dec outsl (bad) cmp mov (bad) cmp and mov test mov push pop (bad) dec jo sarl cmp das cmp insl aad jb push cmp mov jo mov rdtsc imul fnstsw cmpb lahf inc mov int3 mov int3 data16 test in and sbb dec mov jmp outsb inc xor push rorl sbb mov jns imul and jne fstpl lret jp dec cltd int3 data16 nop les and (bad) mov and mov out cmc add dec xlat subl pop mov sub jg sbb js cmp cmp mov mov rorb mov hlt mov xchg cmp mov jns out sbb xchg in adc or or dec jb (bad) or rclb or (bad) stos mov cld add (bad) aad loop data16 popf pop into int scas push mov push mov cmp test mov mov sub sub mov shr sub call stc pop ret add push inc cltd rorb and cmp cmp fadds (bad) into sub enter outsb mov push pop xor mov das dec mov nop mov ret push fist movsl xlat (bad) fcoms push (bad) cmp cld fisubrl cs (bad) adc incb into gs add in xchg ss xchg mov movsl and dec mov dec (bad) ja pop jno fadd out out aad xor adc les xchg jmp sbb lret inc add (bad) dec (bad) rep mov fdivrs mov fwait cltd sbb loope sbb out push int pusha push pusha mov lea jae mov push pushf pushf xchg jmp sahf pusha cmp mov inc mov pop pop adc push xchg out clc mov imul (bad) int xchg xlat xchg (bad) adc ret pop or add jl push out lods or fnstcw pop fisttpll inc mov lock hlt lods (bad) sti mov das xchg dec cmp xchg jge popa mov mov (bad) sbb insl cmp notb dec loope fist mov loop sbb hlt sbb cs jecxz adc icebp jle cmp fadds or push dec cmpsb lret dec mov sbb push push cmp pop or push cmpsb out insl mov bound fimull daa mov inc cmp mov xchg (bad) or jg rcrb push inc push scas leave cltd scas (bad) or cs fadds mov sbb mov inc cmp movsl and iret push jb inc jo movsl inc lds stos ss (bad) pusha and test sti scas xlat push sti iret mov imul cmpsb pusha cmp fistpll sti mov sbb popa sti icebp cmpsl sahf test cli loopne inc fisttpl fistl js xor lods icebp fmuls das adc pusha test adc ljmp loop sbb and sbb cmp rcrl std aaa mov push call in or js adc and pushf cmpb call jmp mov lea mov pushf movb pusha cmp pushl mov lea jbe jmp lea ja push stc imul bt add push pusha pushf lea jmp mov push inc lret xchg out iret mov mov dec pop pop setns xor mov mov int3 mov orb test scas aad lea push mov or pop sub jo lds dec mov test cwtl fcos in cmp test sbb sub pop test idiv lcall (bad) ds inc dec and sbbl cwtl clc adc push iret lahf sbb (bad) jnp int3 in mov sub xchg jns mov sahf push aas pop int in push (bad) rclb adc adc pop jmp inc mov pop ret imul daa xchg xchg mov push inc iret (bad) repnz jmp adc xlat aas testl fisttpll sbb add in cmp inc and cmp push nop push inc pushf addr16 xor mov leave push mov enter mov int aas scas adc fisttpl gs pop xor cld fildl sarb jae into pop xchg xorl jnp jg aam cltd in stos sbb jno shrb push xor pop stc pop cld pop les ja and out lock jmp xchg rcl dec pop lods daa sahf jnp jle sbb jge icebp aam outsb xchg rcrl sbb cmp mov and xchg push inc stos rcll std adc add shl popf scas pop jecxz jae sub dec nop imul inc push repnz fisttp cltd or mov sub out js mov and xor cli xchg (bad) jp dec push fdivl jno push mov or jp dec hlt pop pop mov xchg dec (bad) push push dec or lea aas xchg inc lahf movsb xor clc pop mov fcoms push mov and or mov jg push gs sub cs ficom push mov inc enter lods jmp dec sub inc mov add and daa add cmp je adc jmp inc push inc push dec xor cs insb add add jmp (bad) sbb hlt xchg push inc stos shlb jb push repnz rcl repz loope mov in inc push cmpsb mov adc test mov add xchg sub jp outsb add adcl mov test cmpl mov das cld sbb sarl pop call xor cmp outsb jp mov push jb stc (bad) lahf or inc inc ret mov or pop pop pop in or ret xor mov mov rorl movsb and xor (bad) xor insb xchg into sbb cmp jmp bswap shr dec or test mov bsf or inc add jmp (bad) stc and xchg push inc jecxz dec fs (bad) cmp mov loopne or push and movb inc pop dec bound or or pminub lret and in or pop mov or bound mov fmuls xor (bad) hlt into xchg or in in ja mov ds pop std sbb mov jp rclb jl subl enter jno sub jg lret scas nop cld sub mov pop xlat inc add mov mov push mov out jns andl jnp add jne movl mov mov mov pushl mov movw pushl ret lea jne cmp setg xor lea shl jmp lea je push pushf bsr add shrd clc mov mov add jmp rolb nop push inc dec rcrb xor push hlt pushf jns das daa dec dec dec sbb pop pop lea scas jg mov outsl cld pushl outsl xchg lock and into in rcrl pop bound js jnp repz frstor (bad) jg jbe mov test add ja mov cmpsb pop xchg sbb mov mov sarl adc mov cs fidivrl dec adc in jl xor arpl adc jns cmp into sub inc pop ret push mov clc call or push inc (bad) adcl push pushf push pop xchg jp pop aam lods test es and leave arpl and fwait and mov xchg push cmpl mov mov pop or data16 sarb sbb popa or out scas out cmpsl cs jb push arpl in mov fsubrl insb add (bad) jmp jl lret pop lahf test cmp repnz stos add or stc fistpll and fidivrl mov repz jne lcall xchg fisubl jae lahf in divb xchg inc xchg push inc rcr lret jecxz addr16 stos pop or mov adc jne test shrl mov sub xchg insb cli aad fcom push xlat mov pop dec inc cld xchg arpl mov lods sub (bad) mov in fisubl xchg push iret test add xchg xchg js jo jmp out mov mov adc popf and shrl push aas inc pop (bad) je pop data16 inc ret arpl pop lods add jo add fs sbb adc loope mov popf xor fsubrs outsb push cmp lods cmp jae jae stos dec xchg sarl add xor dec lret xchg push inc xchg das and push xchg fcmovnu inc mov popa loope test mov sbb lods inc addb jne inc push rorl jo mov add insb pop push sbb imul cltd jl push repz nop mov sub cli xchg insl or and cmpsl popf dec inc cmp dec mov jb out add scas mov fiaddl dec negb add jg cmpsl pop jo mov jb and daa dec mov sbb lret dec lds jecxz sbb xor inc and movsl lret jmp aam mov rol pop sub dec inc dec xor cs insb add cmp pushf push push lea jb btc xchg shr xadd mov bts shld bsr mov jmp or mov neg setbe shld cmp sub shld sar push movzbw rol bt push aad btr (bad) hlt pop push aas lea pushf mov adc test bsf sar mov test push push pushf test pusha push lea je lea dec mov xor (bad) testb (bad) shr cmp call movb movb pushl popl push pushf movb pushl ret push push mov push mov pushf lea jmp inc push arpl sbb fistl out mov cmp push jb push mov inc pop inc pop and add jns (bad) popa test mov aad je mov add mov add shll cmp xor dec cli das data16 lcall cmp pop mov and ja pushf imul cmc cmp add pushf lea jmp xor cmc or mov sar cmc pushf sar add shl adc mov pushl jmp sbb sub popf push inc mov aaa inc mov push push xor scas fs pop jecxz rclb adc (bad) pop mov outsl daa sbb fild xlat jg ja push push xor sub (bad) loopne pop test add rolb add xlat (bad) aas cs mov cli mov adc dec insl or fmull push ljmp jg push mov mov push test rcll xor or jmp jmp push sub pop inc ds icebp push fidivl cmpsl jb push inc in cmpsl (bad) movq popa imul mov aaa mov sub pop stos mov dec cmp push arpl push push push fidiv inc sub dec mov or repnz dec ror push mov bnd ret pop push aam (bad) mov or mov jg mov loope pushf jl frstor fild faddl push xchg mov (bad) jne add fisttp mov sbb xlat daa xchg xorl xchg xchg icebp jg (bad) repnz (bad) sahf sub cs cwtl test ret in (bad) jle mov inc mov in push mov add xor pop rorb leave std xchg lret mov aaa (bad) es and inc xchg lahf push inc enter imul bound jg adc sbb lods (bad) xlat xabort dec fisub in sbbb push cld mov (bad) pop lret (bad) (bad) in push test push adc xor sub sub and fstpl xor (bad) shll fnop add repz xor dec pop mov stos stos or pop mov cli mov cld test sarl clc pop (bad) loopne xchg ljmp cmpsl mov gs xchg (bad) push (bad) jmp add mov and xor dec inc dec test xchg push test add xchg xchg clc lcall addr16 fcomps rcll aas cmp inc imul cwtl adc call rcll pop jne repnz shrb fbstp in test cmpsb or call aam sub sub xor mov pop lret lcall js lret cmp rorb dec lds pop push xor jle fwait pop push push das push mov cmpsl xor adc clc dec out test scas loope lods cmpsb test inc inc adc inc (bad) push pushl mov cmp xchg gs cltd mov adc cmp pop scas mov add je outsl fs gs popa outsb fs gs add scas push call jmp shl call cmp jmp cmc sub test stc mov cmp cmp jmp pop rcl cwtl push inc push scas in std out (bad) icebp popa mov inc sti xchg stc stc xchg pop adc lods push daa push mov stos fwait sbb mov or xorl pushf dec lret push out pop mov cmp dec (bad) aam cmp cmp jb dec dec out adc mov in jbe dec mov dec dec aaa xchg xchg cmp cmp inc out xchg cmp cmp mov in sbb and (bad) mov fcmovb addl movsb jle out idiv sub mov mov sub lods aaa inc test mov push sub ret dec or dec pusha int cltd push inc or leave sbb mov cmpsl (bad) add addl push es iret mov mov sbb inc popa test or xchg push fs jb xor incl cmpsb jno out (bad) fiadd mov sti lods ficomp popa sub call clc outsl mov lret stc ja ss mov pop aad in jmp mov dec mov pop jno mov stc aad or lret xor or pop adc cltd xor dec vcvtdq2ps out jle cmp fwait movsl dec xchg test inc out faddl adc lea mov bswap sub push movzbw mov adc adc btc push cmc add push dec inc push mov add setb xor push not (bad) icebp mov cmp mov movsbw mov call push stos push mov pushl lea jmp sbb seta pushl lea mov lahf mov lea jge not jmp cmp movsbw mov sar sub (bad) idivb mov pushf bt sub jmp lea jo lea pusha pusha lea call call and push inc mov sub inc pop inc dec xchg pop ret clc loopne cmc stos (bad) (bad) cmpsl mov repz mov leave jo and sub (bad) pop (bad) in sub xor repz fstl jo push push and (bad) inc nop aaa inc mov push leave mov dec xlat mov out adc mov jno pop fcmovbe cmc outsb sarb add cld test sbb test and mov cld cmp mov test cli adc or jp nop jns popa movsl hlt mov inc inc ljmp es mov and ret xchg jle push out dec jmp cmp in out mov jns cwtl popa loope push inc mov aad adc bound insl mov test sbbb add hlt ds xor (bad) dec lcall add adc add aad mov bound push cltd mov test popa aaa xchg repnz fisubr xor shl insb xchg sti push sbb imul sbb inc push jle push ds hlt mov fcoml cmpsb in jno cmp imul (bad) sbb mov test push iret sub cmp outsb test mov stos das popl mov rclb fnstenv mov lret or adc mov sbb add je push cmc pop jno jno or xchg fstpt mov (bad) call stc test pushl popl test cmp pushf push jmp loopne mov cltd (bad) push pop into in or sbb ja dec inc mov sub jg div int3 mov scas in and pop inc mov mov mov push dec sub outsb cwtl fisttpl pusha roll add or pop dec cmp xor push adc mov adc ficomp or mov xchg add push pop xchg imul inc dec aas (bad) sub lds sahf sbb and push cwtl inc in xchg mov sbb xchg inc push push inc push xor cs insb add push inc orb ja fbld and jge fcoms addb mov pop mov leavew bound int push loop push fdivl into sub data16 (bad) (bad) (bad) push insl and push sbb scas mov sbb clc dec enter das lock jecxz dec es out ss cmp js and ret add sbb ret xor lock lret sbb decl jbe jne mov leave adc jmp dec mov pop popa jnp jno (bad) jne,pt fdivl dec and movsl popf mov sbb mov mov nop dec pop dec stos movsl inc sarl leave xor cs bound popf pop scas aad push fsubl out xchg dec loop ds scas dec leave aaa dec jp fcomi repz fnstsw jb pop xor xor push fcmovb sahf jmp push jne fisttpl sub adc scas lahf dec cmpsl push inc adc dec rolb sbb out sub cwtl push or mov (bad) fadd push lock mov mov (bad) sahf add addr16 (bad) out mov lods es das xchg mov adc (bad) mov inc add cltd sbb add (bad) or ss dec sub fsubrs mov dec fidivrl sbb orb or xor mov push and or xchg or xchg pop adc mov mov inc hlt inc pop lock xchg cmc cmp push adc lahf ja (bad) fs sbb (bad) call jmp push jmp movb movl pushf movw mov pushl movl push movb pushf push lea jmp movzwl add bsf data16 mull jp clc clc add test jmp pushf movb mov pushf call sti fsts dec and lcall clc ds call cmpsb or call inc ret push out sbb adc das fwait cmovae pop mov xor push add xor ljmp int push rcrb mov cmp jmp sbb inc sub xchg arpl cmp add nop fwait mov mov cmp sbb mov inc xlat dec fidivl mov jg cs jle testb popf dec cmp dec and sub into cmp jl decl lea clc decl fs jmp xor mov movb repnz call cmp call jmp jmp and push lods push lret mov sbb jmp inc cltd pop hlt lcall adc mov or pop popw data16 call pop popf icebp inc and stos (bad) jl add and mov and jmp int lods mov iret sbb adc push in jmp dec jp cmpsb or dec dec fwait dec mov mov xchg roll in push and das mov clc call cli loope insb xchg std inc cmc ljmp sub xchg leave loop jg or or cmpsb adc int dec push int3 xchg sub xchg (bad) aam xor ja cmp lea jb adc cmp call mov push inc leave ss push lcall pop push hlt sub pop push enter jnp dec sarl fwait lods pop jl jo daa or gs iret fisub (bad) mov jo push js bound test aaa mov stos sbb into push jae inc and int or and push pusha adc push mov addr16 out movsl clc loope ds iret movsb dec mov or pusha or lea lret mov inc mov inc lahf add loopne sti aam in adc pop movsb pusha lea ja xor sub rcl sbb xor clc add stc sub add rcl mov xor mov cmc push pushl test repnz call mov mov pusha lea jb xchg pusha jmp pop cwtl clc cmp bswap pusha inc sbb not not movsbw lea push setge mov push mov not jmp shr mov pusha cmc test cmpb call movzbl mov clc add shrd rol or add movzbw mov movb shr cmc test cmp call cmpb pushf jmp es jecxz mov mov add gs outsl cmp and sub inc jne cmp adc push (bad) out jne das adc (bad) nop movsb dec std es int or popf or inc mov sbb scas (bad) sub or pop mov test push xlat add cmc mov adc push inc dec cwtl pop inc sbb inc pop lret and in fs repnz test cmp ja mov ss jb xlat jb (bad) mov (bad) in dec or test cmpsl iret xchg ret mov and jmp dec jmp add lods push inc out pop mov mov adc pushf and sbb dec into push stos jl and std add fldt cmpl lea pop pop mov lds mov adc xchg add out and mov pop andl jno xor jno sarl add jns xchg push in mov pop es xor add sbb dec call sbb mov ret push in fimull or inc ret fcoms adc dec int mov adc fsubrp pop jecxz outsl inc inc mov sub call fstpt xchg sbb cltd xor dec mov lock jmp push pop shlb cmp add add inc pushf xor jmp push dec dec push inc push dec cs insb add and dec lods push inc push mov sub test popf mov popa test xor mov cmp dec mov into push in push rolb dec pop or cmpsl or xor mov sub jg xor push pop lahf xchg into les clc xlat sbb je adc push fstpl nop add push inc inc xchg dec std test push (bad) cmpsb push and add sarb mov shlb lret mov out sub stc fisubl jno and movsl enterw (bad) mov push or push mov mov jb aas mov rclb fcoml scas and rorb or mov add xchg mov mov jmp lea ja not rol sar sub lea dec jmp xor push inc dec mov sbb dec rorb and sbb jb dec push pop mov push and ficomp mov cmp sub outsb (bad) xchg les mov push jnp lret fimull fsubrl or jp repz loopne fs stos push mov xchg xchg mov decl es icebp call push push jmp mov jl mov lcall inc dec xchg pop call sahf in cld mov add add cmpsb ss dec mov fnsave jp sbb mov mov cmp (bad) pop mov adc mov mov cmpsb ljmp mov pusha mov jmp push lea jne setno setge jmp mov pusha pushl pushf pushl ret mov pushf movl push call pushl mov movb lea call jmp pushl pusha jmp mov movb lea je movzbl movzbw lea push lea call pusha adc call pusha lea call pusha movw mov adc mov pushf jmp insb push xor xchg push lret jb jp inc cwtl (bad) test mov push test (bad) clc mov sbb (bad) jecxz and mov mov sub dec inc and test pop jnp ret pushf (bad) lock icebp xchg pop fiaddl gs lods daa mov stc lds es inc ret ja insb adc imul leave mov pop mov (bad) xor cmp pop jmp and sub dec daa jmp in mov adc test test inc arpl ljmp into xor mov and push and sbb xchg jnp xchg pop movsb js and or out inc mov jg and push pop xchg mov es pop xor cmp aam push fldl call sahf fs inc idivl enter or out xor jnp xchg std jg sub mov mov mov mov test mov fdivr decl add sti sbb (bad) inc rcl cmp mov bt cmp test cmc repnz push call sub fs push inc out test adc jns cmp dec aad sbb fldl (bad) jb shll sbb dec fistpl (bad) repnz add jnp push bound mov pusha mov (bad) or pop imul addr16 and jno inc add repz lods data16 or enter pop dec inc fcmovnb pop push xchg xchg add gs or mov stos mov ret in sbb adc pop in (bad) and test inc leave mov push hlt pusha pusha pushf mov call pusha movb lea jne bswap mov cwtl not movb movsbw movsbw movsbl jmp inc int3 aad stos push inc push in fcom push sbb adc int3 dec mov mov inc lock out jp and clc xchg subl xchg dec fdivrl push popf dec mov and cld mov sbb aam mov fsubp push cmp sbb inc mov ficomp enter popa cmc inc bound or fisubrl addl imul push jle pop push sti shlb ljmp adc shlb imull mov add stc add or out fisttp pop add out push jecxz repnz jmp mov fidiv ja sbb stos adc inc sbb jnp sub mov mov cmpsl (bad) flds test out xor mov pusha mov jmp dec rcrl stos push inc cltd rclb mov sbb adc (bad) repz and sub bound es in imul mov mov jle ret jg xor cmc insb jecxz out cmpsb jl lret mov push mov popa xchg cmpl imull mov stc and pop or das (bad) aas (bad) mull out fcomps xchg (bad) push insb xchg add mov lahf imul mov or movsb sbb mov or adc mov fidivl mov ljmp das ret cld mov jbe push lcall in or dec fidiv xchg mov xchg in xchg lret outsb xchg (bad) je lods ret jmp pop jecxz sbb mov lea mov ja insb adc pop out push je test xlat cli ret mov int push xor sbb movsb mov (bad) dec je mov lret lods (bad) adc cmp add sbb test fsubrl dec aad clc cld repnz cmpsb xchg pop push cmp jle shrb push cmpsl mov sub enter cli pop sub mov out jg hlt frstor cmp sahf inc test arpl mov pop push push jb pop pop jne xchg cwtl add mov test jp scas push inc enter daa aas test and ret cmc adc jb outsb mov mov push out adc push das fistpl adc add cwtl insl les ss into jp and or inc inc or insl out xor das cmpsl mov (bad) push addr16 adc outsl out pop inc pop pop mov (bad) in decb jnp sub pop jns inc push push mov mov mov shl lea call adc sub jne mov sub pop pop ret repnz push pushl lea jne ror jmp mov push lea ja call cmc jmp jmp mov lea jmp shl clc cmp add not pushl pop cwtl lea call scas mov cmp pushf xor fsubs bound (bad) pop mov xor stos jl adc mov std cmc cmc xlat mov sub inc popf and leave xor gs inc ds jp fsub insl xlat mov jge (bad) jmp (bad) inc xchg or negl jno mov pop repz or jns xor ret lret mov orb pushf insb mov ds dec sub outsb fs or xchg stos xchg mov lret std cmp aam rcll clc sbb mov and lahf xor inc mov fstl (bad) lock mov push into cmp or (bad) rorb dec dec or inc and fs lea jmp fist in mov inc add xchg cmp cmpsl lds mov pop jge pop sarb outsl (bad) lock scas mov scas adc jo shlb test cmp jg (bad) dec in mov out mov scas add or push lea inc fidivr outsb sarl stos push push sbb inc mov adc xchg pusha call adc repz pop out jb cmp int3 cmp rorl xchg mov dec push je js push dec popa pushf in fsubrl jbe push mov mov out xchg mov shr and aaa jmp js jp xchg push and adc adc sbb inc xor or incl mov ror sbb jo mov sub jp insb push adc lret mov sub jge push ficoml (bad) pop arpl mov inc or xor cltd push ljmp out mov stos lods aas out scas cmc sub (bad) es dec dec pop loopne or stc xor imul fsubrl mov and cltd mov or faddl add not mov bswap pop mov call lea mov pushf pushl movw mov jmp dec dec mov push inc int mov int3 pop adc fsubr int3 clc jbe incb push sahf dec xor inc divl (bad) jae rorl repnz xchg lss add jg mov mov xchg nopl flds mov sbb andl push je dec les xlat mov and bound push das push mov iret jl imul dec dec call dec pop xlat jo lock cmc push shrb add fsubrs movsl scas cmpsl sbb pop iret push (bad) cwtl (bad) mov sbb add pop std daa xchg xor cmp push aad repnz inc push ljmp into out dec lds mov inc (bad) (bad) pushl negl dec mov div pop xchg inc xor std repnz inc xchg and test clc cmp jge andb sbbb stos push dec scas (bad) pop mov xchg loope mov fsubrs inc cs std fcmovnu scas sbb jg mov in lea enter push gs add outsl push movsl inc iret sub subb push cmp test push or xor movsl jl sub xor pop cli (bad) rolb mov cmp jns sub cmp cmc aaa jp imul mov loopne and or inc add (bad) and xorb pushf data16 push in add dec in jl inc sbb rcrl jae imul push add stos push fisub stos aas into lods add (bad) and jmp ljmp inc fdivrl loopne test push ja (bad) xor pop gs push fs jne clc xor scas xor insb sti movsl pop aad mov mov popf ss sub mov dec mov aad push movsl mov xor aas xchg lea call shrd rol cmp stc add cmc pop adc lahf aam lea pop cmc cmp jo sbb push lea push pushf lea jmp test inc cmpl rcrb hlt adc mov and pop mov cmp lea addr16 add ficomp scas cld add dec xchg xchg repnz popf pop xchg aaa stc or and nop pop into aam push ja pop aas or sub and (bad) cmp inc mov imul fsubr pop movsl mov cld add (bad) shrl rorb add mov loop data16 pop in xchg pusha push inc loop push popf cmp and and call pusha jmp fidivl inc fwait mov inc les mov iret das scas jae inc mov arpl xchg insl adc xchg dec das (bad) dec jo xchg cmp rol lods push pop ret outsb jno pop xchg fs pushf sub sub jnp (bad) jns loop inc lea gs leave mov in lret adc lods in out (bad) jge mov pop push push mov cmp sub int3 inc pop inc adc ret int ljmp int3 mov out lea call jmp stc mov pusha call inc setno neg pushf pusha ror call bt clc test xchg cmp mov call bsf bts rol mov jmp call shld aam call movw movw mov call pushf popl jmp neg sub movzbl and sbb xadd mov sbb not dec bt mov bsf bts add lea cmc movsbw mov setp clc xor not push setno rol dec shld not bswap or pop shld xor bswap jp sar bt xor pushf shl shrd rcr movzbl add cmc bts sbb lea add btc call mov pushf jmp push pushf pushf push mov pushl ret cmp bt sub push push jmp xchg cld pop mov pushf cld lea call jmp jmp cmp sub call push push pusha pusha call push rol mov cmp cmc mov pushl call mov pushl mov mov pushf mov pushf lea jmp pushf pushf popl pushf jmp call movsbw bswap mov lea mov js pusha lea jmp mov mov lea jge pushf push movb pusha lea ja popl pusha lea jmp mov mov pushf mov pusha mov pushf pushf jmp daa mov dec mov pusha jmp mov shr setle xor mov lea jg pushf pushf sub stc shr mov mov pushf mov pushf pushf call add pusha movb pushf lea jmp call mov movw pushf lea jmp pusha pusha lea movl jmp push xchg lea mov mov jmp bsr inc mov test add pusha pushf pusha lea jmp bt clc and push pushf popl pushf pushl pushl popl push pushf mov lea jmp sub jmp mov pushf jmp push call jmp or mov push pusha lea je call call adc push jmp neg bt bt test cmp add push lea jo pusha push mov push pusha pushf pushf pushl ret mov push mov pushf lea jmp shrd inc mov jmp bt xor push jmp jmp jmp lea shr xor rcr shld movzbl cmc inc cmc sbb lea jmp pusha sub jmp ror mov movsbw pushf mov movb pushf mov movb pushf call jmp pusha pushf pusha pushf popl call push lea jp pushf pushf pushf pusha jmp shld mov movzbl mov bt stc pushf call push mov jmp pusha mov call pushf pushf lea ja clc mov clc bsr aad lea shl sub sub aad not lea rcl and rol bswap xor add sub mov bswap mov mov bswap pusha movsbw push pushf popl mov pusha call daa push bts mov clc stc pusha xor pusha test pushf stc neg pushf pushf dec test jmp pushf pushl pusha mov jmp call push push movb movb mov pushl mov push jmp mov pushl mov push pushf mov push pusha lea jmp pusha mov movb mov mov pushf lea jmp mov push push mov movb lea jmp bts shr pusha mov cmc bt sub mov test clc call call mov pusha jmp mov pushf popl lea jns pushf push pushl pushl popl pushf mov movl pushf lea jmp pushl popl pushf pusha push pushf lea jmp test pushf sub pushf pushl mov pusha pushf mov mov pushf pushf lea jmp pusha pusha pushl popl push movw movw lea jmp movw jmp btc mov call mov stc call call push push mov push pushf lea jmp or movl stc xor lea jae pushf inc call movw mov pushl mov pushl lea jmp pushf lea jnp push pusha pushl push pushl ret bt shl sub mov add shr add mov cmc call call call call mov jmp push pusha mov pushl mov pusha mov jmp jmp call pushl popl pushf pushf lea jmp mov jmp xchg jmp cmp neg neg add sets xor rcr add rol dec add jmp add clc clc pusha shrd pushl mov call mov call mov movb push pushl pusha lea jmp movb call movb mov pusha pushl mov pushf call cmc movb rol push call add pushf mov mov pushl lea jmp jmp mov call mov pushf pushf push lea jmp mov push pushl mov pusha mov push jmp and btc shl mov rcr bswap inc sub shrd movsbw add inc mov inc bswap rol cmc rol inc inc adc call call push pushf mov pusha pushf mov jmp pushf popl pushf pushl popl pushl lea jmp inc pushf clc bt add jmp mov call pushf pushl call mov call bsr neg adc notl dec mov cmc call add pushf stc shld pushl mov pushf mov mov pushf push movb pushf popl pushl call pushf mov call mov bt or movb lea je stc push pusha pusha xor pushf jmp sar add xor bswap rol movzbw mov call divl push mov push mov push jmp mov push mov lea jmp jmp movb mov pusha push lea jmp lea jns pushf mov call clc pushf clc add jmp cmp sub call mov not mov pusha mov jmp pusha mov mov mov pushf movb lea jo push pushf mov pusha pushf pushf pushf lea jmp add cmp cmc std pushl popf push lea jmp jne push mov pushf lea jnp pusha movb mov mov jmp pusha mov jmp pushf pushf inc pusha decl movw pushf pushl jmp mov call mov mov pushf pushf mov mov mov mov push mov push mov pushl pushl movw lea jmp pushf sub pushf cwtl test pushf sub push pushf mov pushf lea jmp mov call movw mov pushf pushf pushf popl jmp call mov pushl lea jmp bswap mov neg adc sbb mov pusha shr dec call pushf pushf mov pushf lea jmp lea jne stc push stc sub pushf call call lea pushf movb pushl push mov pushl mov lea jmp mov pushf jmp jmp push pushl mov pushl pushl pusha pushl ret cmc cmp shr jmp movsbw btr ror mov adc dec cmp mov bt sub cmc test shl pushf jmp shl pusha mov push mov mov call jmp mov mov ror (bad) repnz call add add call jmp not pop cmc neg pusha or pushf add not cmp add sar lea not mov clc movw sub push call jmp sub push inc mov mov xor mov push pusha push inc bt ror cmp jmp mov pusha call mov push pushl ret call push mov pusha mov push jmp cmp sub call pushf mov movb pushl pushf lea jmp pushf neg cmc call mov call pusha push movl call add pusha pushf mov movl call movl jmp cmc cmp add call push push inc jmp jmp mov push push jmp push push push pusha mov movb pusha lea jmp mov pushf jmp mov push call movl jmp mov movb push lea jmp pusha mov call pushl mov pushf mov mov jmp push mov call mov inc clc pushf neg call pushf popl jmp mov pushf mov mov jmp call movb pusha jmp xor neg movzbl cmc call pushf mov pusha pusha mov lea jmp ror aad xadd ror mov adc bts jmp movb jmp stc cmp mov sub jmp pusha push pushf mov mov push call call mov pushf pushl pusha pushl lea jmp jmp jmp pushl popl mov pushf pushf lea jmp mov jmp pushf popl pusha mov pushl popl push push push pushf lea jmp call pushf jmp lahf aaa xchg mov btr sub mov clc clc bt add pushf mov mov pusha lea jmp push and pusha pushf pushf popl lea jns push pushf pushl popl pushf mov lea jmp mov pushl pushl jmp mov pushf lea jmp movb mov jmp mov call call mov call mov pushf lea jmp mov movb push push pushf lea jmp push mov pushf push push mov call movzbw mov cmc (bad) icebp add loope dec add mov or lds lea jno mov pushf lea jmp push push movb pushf mov lea ja pushf mov pushf push jmp inc neg mov cmp clc add push pushf pusha jmp pushf movb mov movb pushl lea jmp pushl popl push pusha push movw lea jmp call lea jbe mov pushf lea jmp pushf mov push lea jmp stos cmp lcall mov jnp mov cmc inc mov test sub pushl inc mov (bad) sub pushl inc mov pop sub lcall and call sub (bad) in cmp pushl mov push inc mov dec inc mov cmp ljmp sub decl sub jmp sub incl sub pushl sub call mov lahf inc mov push inc mov in cmp ljmp cmp decl mov mov mov (bad) sub ljmp mov push inc mov mov sub call inc mov lock decl xor pushl sub lcall and ljmp mov hlt es mov inc mov push xor decl xor ljmp mov pop sub jmp cmp call xor dec cmp ljmp mov jnp mov insl inc mov push inc mov lahf inc mov enter and mov enter mov mov pusha es mov mov mov mov mov cmp lcall mov xchg sub lcall and inc inc mov pusha es cmc inc mov wrmsr mov mov mov push xor dec cmp decl mov adc mov lret push xor jmp mov insl inc mov pusha es je mov mov mov dec xor dec cmp lcall mov ret ljmp mov lret lcall mov mov mov and mov sub cmp pushl mov mov mov rolb aaa cmp (bad) jnp mov enter rolb rolb test inc mov mov mov lds (bad) jmp and pushl incl inc mov hlt es jne mov and mov sub sub pushl inc mov in cmp call inc mov lock decl mov mov mov in cmp ljmp mov lock lcall mov or mov (bad) sub ljmp inc mov and mov (bad) sub call mov push das mov cmp decl xor pushl and mov mov mov wrmsr mov push inc mov sbb mov mov cmp ljmp cmp pushl cmp jmp sub ljmp mov pop sub lcall mov outsb cmp inc inc mov or es jmp inc mov jnp mov or aas mov or sub pushl inc mov sbb mov ret push xor lcall mov pusha es mov mov ret ljmp mov pop sub lcall and pushl inc mov dec inc mov and mov test cmp inc inc mov in cmp ljmp sub call inc mov mov mov pusha mov push mov mov pushf mov call push shr lea jle mov jge push pushf popl push pushl popl movb push lea jmp jmp decl pusha movb lea jne pusha pusha lea jge mov pusha lea jmp pushf jmp movw movb movl pusha jmp pushf push pushl jmp push mov ror btr sar bsf add add xor lea bswap cmp sub bt mov cmp pushf jmp pusha mov pushl jmp aam mov pushf seto sub mov clc cmp pusha cmp add push pushf mov call mov pusha lea cpuid cmp sub push stc cmpl pushl pushf mov pushl pushf mov jmp xadd ror bsr rcr mov sar cmp add neg not xor xor jl lea neg not sub adc btc add cmc (bad) testb bts add pusha ror mov btc add shrd jmp pushf mov pushl pushf popl pusha jmp pushf stc sub call mov pushf lea jmp btc btr cltd mov btc pop inc jmp xchg stc clc cmp mov bt movw pushf sub pushf mov jmp pushf pusha mov movl push movw lea jmp call jmp pushf lea jmp push jmp ror movb jmp pusha mov call call pusha mov call push pushl popl movb pushf movl push lea jmp inc clc shr mov sbb call call mov push movb push lea jmp push call mov pushf mov lea jmp jmp pushf mov jmp pushl popl movw lea jmp jmp mov cld call lea jge push mov mov jmp clc test btr rdtsc call push movsbw pop lea push jmp cmp sub pushl cmp push cmc sub call add movw pushf pushf pushf popl pushf movw call call mov push push lea jmp and lea jno push movb pushf mov call sub stc sub jo push mov shr pusha call call pushf xchg jmp dec btc or mov push add mov clc add jmp jmp call mov pusha jmp pushf pusha mov mov pushf pushf lea jmp mov pushf pusha pushf pushf popl movb jmp call jmp pushl push movw pushl popl mov movb lea jmp pushf popl call call jmp mov call mov movzbw setbe not mov bswap movsbw bswap mov seto pusha xchg lea xchg lea setae setge mov xchg lea lea push push repz popl xchg pushl mov bswap xchg push mov movsbl mov push inc rcl rol movsbw push call push mov push mov lea jmp rep ror cmc btc mov sar ror lea mov std stc std bt pushl popf mov mov lea jmp call inc push push mov pushf lea jmp movl push mov push mov mov pushf mov movb mov push pushf movb lea jmp mov jmp clc lea jno add pusha jmp lea jo push pushf mov jmp movb jmp mov mov push pushl movb lea jmp mov mov push pushf lea jmp stc clc ror stc sub jae sub test pusha stc xor mov sub jmp mov pushf lea jmp push mov mov mov pushf mov pushf mov call movl pushl popl pusha pushf push lea jmp stc call sub cmc add jmp cmp mov cmp add stc clc stc movl mov movb sub call lea jne push push mov pushl push pushf lea jmp call pushl popl push pushf lea jmp lea jne or jmp test stc bt sub call push mov pushf pushl mov pushf pushf movb lea jmp push pushf push pushf pushl popl pusha pushf pushf lea jmp bt xor mov push bt cmp bt sub jmp bt bswap lea jae stc xor bt pushf sub jmp pushl popl push pushl lea jmp jmp pushf popl push jmp jmp btr daa mov sub shr rcl mov call bswap add lea push pusha cmp jmp push movb call call pusha mov mov call push pushf pusha jmp btr dec shl bt mov stc test add call push pushf popl pusha mov mov pushl popl push lea jmp call mov pushl call call test pushf cmc jmp inc dec movsbw lea xor movzbl stc bt pusha call stc bt sub jmp jmp stc sub cmp jmp mov call movsbw mov pusha pushf mov jmp pushf mov mov mov pusha mov call rol movzbl push add pusha pushl inc call jmp call movl mov call pushf pushl popl pusha pushf push lea jmp call mov call sub pushf xor stc cbtw movw cwtl cmc push clc cmc add call mov pusha mov jmp jmp push mov pushf mov call mov pusha push lea jmp cmc jl daa not notl aas mov push stc test sub jmp clc pushf ror push mov lea mov call call pusha pushl mov jmp pusha clc mov bt clc clc push add movb call bt add mov push pushl movl mov push pushf mov lea jmp call movw pusha pushl popl push movw lea jmp bt sub mov mov mov mov mov push pushf lea jmp pushf push pushl popl pushf mov movb lea jmp rcl rol or mov bt pusha add mov pushf sub cmc pusha call push mov pushf pushl mov mov pusha pushf mov mov push jmp mov mov pusha pushf pushl ret bswap call or call mov pusha movb mov pushf pushf mov call bt ror bt clc cmp sub cmp test cmc mov bt sub jmp shrd not mov stc bt stc add pushf mov jmp movl mov jp pushf mov pusha jmp pop pushf rdtsc shl pushl popf pusha mov setl pop call cmc pushl popl test call mov mov pushf mov pushl push pushl lea jmp pushf jmp jmp pusha mov push mov lea jmp pushf mov pusha lea jmp not clc bt not test pusha cmp and pushf movl jmp lea jne call cmc cmc add call call ror clc clc call mov push call push jmp add push push pushf call jmp test movzbl call mov pushf lea jmp movw pusha mov pushl movw movb lea jmp test xor test sub movb mov pushl movb lea jmp pusha xchg call pusha mov pusha mov pushl mov pushf mov movw push lea jmp pusha aam add mov pusha call call jmp pushl pushf mov pushf movb mov pushf mov movw lea jmp not bsf mov bt inc add pushf push mov lea jp pushf mov mov lea jmp mov push push movb lea jmp jmp push mov pushf call cmc xor stc stc mov bt test stc add pusha jmp xor cmp xor call cmp stc add pusha jmp jmp sub call push pushf mov pushf pushl ret call pushl add pushf lea jo push pushf mov mov lea jmp cwtl mov pushf mov mov pusha pusha mov push push lea jmp mov push movb lea jmp mov jmp mov pushf lea jns push jmp mov pushf pushf mov pushf pushf mov lea jmp mov clc pushl cmc cmp add pushf pushf pusha lea jmp ror add pusha mov mov call bt xor movl jmp mov pushf pushl mov movb mov lea pop lea lahf mov pushf mov lea xchg movsbl not mov not mov movl pushl ret mov movb stc pushf test and stc stc mov stc cmp pushf push pushf lea jne (bad) repz jbe xchg movl lret setp mov pusha movw lea jmp pushf pushf mov pushf push push lea jmp pushl lea jge push mov call mov pusha push push pushf mov call cbtw or sar lahf mov neg not mov push clc stc stc sub stc shl movl mov pusha mov mov pusha pushf popl pushf pushl popl pushl push movb movl lea jmp pushf pusha movw mov push mov jmp pushf mov jmp pushf call bts sar rcl movzbl add btc pusha movsbw add bsr add movsbw add jmp clc add push pushf clc neg call mov pusha pushf movw pushf lea jmp movzbl push inc setge ror rcr cmp or sub btc btr test xor lea jnp lea inc bswap inc rol add cmc lea movzbl push pushl mov bt pushf call das mov cmp pushf lea stc cmc clc sub movl bt add pushf stc clc mov neg stc pusha jmp pushf lea jo popl pushf pusha movw lea jmp pushf jmp jmp neg shrd movzbl shrd sub jmp dec stc rcr ror btr lea jmp shld mov jmp pushf popl call movzbl lahf lahf mov call call pushf jmp pushf jmp shl bt shr pushf pushf bt call pushf mov pusha jmp add call mov jmp movb call pushf mov jmp jmp mov mov movb pushf jmp cmp shr pushf movb mov push pushf popl call not pusha cmp not push cmc sub jmp pushf pushl popl movl pushf movw pushl lea jmp pushl popl pushf push lea jmp add dec add add add add add add imul and add mov 