push ljmp pop inc push mov mov inc push and push push (bad) icebp push push je adc es loopne sbb (bad) xor call out dec jecxz movl push adc or (bad) pop pop enter add ret inc push call jo or je decl inc stc aaa add push pop cmp mov add lea inc adc jbe (bad) mov xchg pop or or ret nop inc add pop push push call push mov fadd adc sub (bad) jae (bad) fucomp xor test adc int or repnz mov inc les das jecxz addl jae adc cmp mov fwait mov int3 and pop nop pop out mov loopne inc sbb test call adc cmc and imul jo mov gs push iret outsl sub and mov pop cmp adc adc add xor push or adc inc and push loopne push inc pop inc ret mov cltd adc lret mov jae push bound dec (bad) movl call test pop stos insb dec shlb mov fmuls mov lods xchg movb test add call sbb add jo call and add add jo test sub mov insl inc adc inc push mov repz (bad) jno add and lret imul fwait in daa into and lret adc movsb adc (bad) sub adc inc ret cld mov adc xor mov mov loopne xor mov and lock mov and cmp or stos push mov cmp mov in or push adc mov add fwait adc mov daa adcl inc and push mov je mov insl mov rclb sbb sub (bad) jne mov add pop adc je mov push or js adc sub add and call mov mov push mov inc xor or (bad) sub push mov sub push into cmp cmp das mov push lds or add push xor xor xor das (bad) rcll movsb sub push jb adc cmp adc jge cmp cmpb shrb rclb jl mov sub xchg push push sub sub or sahf lods rcll add adc and sbb adc roll adc jp cmp or push lea mov adc dec and adc push inc push xchg or jmp scas not push dec outsl add je outsl mov fidivl inc push inc inc inc mov mov inc lock jb pop cwtl dec dec pop aam sub dec nop jmp mov dec or push push push push inc adc aaa and mov xor mov lea loope mov push data16 sub and sarl sbb (bad) inc cmp jne mov push push mov ret add iret or push push call or jecxz push jbe adc aas add push push es call xchg fstpl inc push mov push movsb or mov pop push lods rolb in add or fs mov mov ret je mov mov sub leave or mov aas push bound jmp rcrb rolb push xor mov sbb add adc jmp mov mov xchg sbb jne add call inc push jp mov call xlat dec push jp add pop pusha call pop inc daa adc bound and sub push jb lock (bad) imul pop and adc push bound test (bad) cmp adc mov (bad) mov sti hlt or pop mov mov nop sub jmp ds cwtl mov test mov inc adc js dec gs cmp xchg push pusha and fs enter pushf xor and sahf rclb adc sub push mov push ret push and lret adc test mov push pop mov add xchg ljmp lea adc xchg mov cmp mov in push mov jmp or adc pop test call (bad) xchg adc adc adc (bad) stc push std mov mov pop shll mov or mov xchg subl cmp adc and fwait cmp fcoms int3 and xchg adc xlat cmp add aam and call jnp fwait pop or add imul dec lock movsb mov adc pop adc jg nop in push mov sbb in xor aaa push cmp cmc inc mov dec ja and jne inc add adc mov mov jl mov cs push add or les and scas or add push dec lods fs in cmp adc jecxz sbb (bad) dec pop loop adc add movsb mov mov mov dec (bad) adc call xchg push jns xor push test and movsl sbb sbbw sbb mov mov jecxz and and mov and push daa mov push lods adc xor movsl (bad) jb or sbb inc or lahf xor mov adc adc cmpb imul add push cwtl jae pushl and add data16 push call test pop xchg sbb pop outsl mov sub inc xor (bad) sub stos arpl psubsb dec push mov sub daa (bad) push cmp enter or mov and cmpsb dec fs push loopne push sub iret sub inc sub sub dec loopne sub das adc or cmpsb and mov mov dec sbb mov or sbb dec mov call sbb daa das and push mov cltd push and cmp imul ret mov dec and jb push xchg xor and dec dec dec jb adc cmp lret adc push pop xchg rorl adc aaa xor and pusha push loope call dec push dec add or mov dec testb add pusha add mov inc jecxz jecxz xchg sbb cltd (bad) or and pop mov push push jbe das loopne call fadds test je cmp rorl add mov icebp popa sbb xor mov xor jns fcoml cmc jae cs and xor sub loope repz sbb sub lods bound aas add adc ror jno into adc xchg movsl push dec push mov rcll mov xchg push xchg imul lss inc mov pop xchg pop or cmp mov pop or inc cld movl (bad) cs js push adc jge mov or fnsave push or inc pusha jns adc jl cmp jge xchg call jge dec xor mov cmp add inc and pop dec or aam adc ja aam xor jae dec repz inc or inc fstpt pop xchg gs dec dec cmp dec pusha xor cwtl mov cmp int mov call or push mov mov nop pop call or xchg or push pop popf es push sub fs inc or cli inc in sbb movsl add adc notb pop xor das and es jle and push insl or out inc mov addl add std jl in jge inc jns dec lea mov or mov hlt add fwait push lods push adc (bad) or mov sbb mov adc sbb jnp xchg xor in xchg cmp pushf (bad) lock test sub xchg jle xchg push sbb xchg les mov sbb push inc addl jl mov test sbb pop dec dec repnz (bad) push stos pop mov stos decl jp push notb and mov xor pop pusha mov sbb std enter xchg sbb je aas sbb (bad) test iret adc push test inc fwait adc enter xor xchg ja bound inc or inc mov adc jns sub dec push or in or push and fistl sbb shll dec mov jmp popf mov sbb cmp jbe in bound cmp adc inc into test popa cwtl dec push call mov xchg (bad) xor leave push and out jae adc push sahf pop dec shl and inc sub mov push cwtl test mov inc (bad) out mov call je or fstpt sbbb test call mov push mov push jle les jne sub sbb pop and adc and insb mov xchg in daa enter insl and mov xor test hlt dec out rorl xchg mov stos jae sbb inc sub xchg push and and pop push mov mov (bad) cmp (bad) ret jno and js xchg dec fstl test inc mov movsb adc in and sbb test xchg mov jne cli int3 hlt mov sub and inc jae pop mov test dec push test sbb call dec imul imul inc movsb fldcw call fucomip les push sbb add cmp mov je sub fs loopne insb jge mov adc das int3 fs inc jle and add add push daa push inc imul mov shr add cmp mov and jne pop sub lret xor jmp mov js pop mov jmp xchg lock loop (bad) fbld dec sub pop sub mov adc jge dec sub sub jns jmp xor js add shlb pop inc mov add xor and test je cmpb cmp sbb push xchg lods jge sub les cmp sbb pop adc enter jne (bad) mov nop loopne loopne sarb mov lcall int adc scas inc add mov scas inc stos push xchg sahf mov out popa or je sbb and sub push jbe test icebp aam dec mov cld or inc mov idivb and jl ja movsb int into sbb jae ss jo lods insl and popf call mov stos or test ss popa je dec cmp gs mov enter std test je mov xchg xor push mov inc inc push mov mov std push daa (bad) sub cmp add jmp inc cmp loopne sub mov pop sub jne in fldt jnp add dec shr rep mov lds push mov and add lock cltd stos loop xor shrb cli das pop pop ret ret inc add pop outsb mov sub in std sbb inc cmpl adcb pop mov sub add inc inc xor xchg sbb sbb push (bad) push (bad) push das call mov push lock mov and ret cltd push lods xchg jno es scas push and sbb and sbb pop mov and mov push mov dec mov inc mov jb inc and dec sub sub or add xchg sub mov xchg or and inc xor mov adc inc jnp pop or adc sbb xchg or inc les inc push addl xor inc adc lahf or and adc mov rorb jbe sbb dec add dec push je int3 xor inc or flds push dec cltd dec push or outsb and lods dec cmp adc mov mov xor mov or call mov pop dec or cltd fstps pusha adc xchg adc arpl dec mov xchg push adc imul dec or adc adc push jb inc jae push je jne inc jbe ja js jns jp jnp jl jge jg xor inc push (bad) mov and pop mov adc mov xchg mov cs mov lcall add mov xchg popl nop mov xchg cltd sbb adc mov sub enter dec pop adc cltd aas mov mov stos xchg movsb bound jae cltd movsl sbb xor test mov cmpsl add lea loopne cmp jae and arpl sarb adc add mov lea mov in and daa lret xor xchg ret mov push push add jp sbb sbb inc pop cmp pop inc insl inc push dec inc add cmc jo sub inc push push push call lds cmc mov mov outsb inc addb dec nop pop cmpsl pusha imul mov push pushf lds enter xor add ljmp (bad) sbb and and dec mov and js shrb inc xor mov and lods sub cmpsb inc mov xchg or aam mov add (bad) cltd sub add fcom sar or push pop jns dec hlt lret inc nop dec lcall (bad) sbb sbb sbb jb cltd or adc sub aam and aas or out daa ja mull dec sub sub negb or push dec inc cmp mov and adc data16 inc or mov inc and inc inc jns dec or out inc mov xor dec dec push dec xor inc or dec and dec sbb dec push leave mov imul mov pushf pop pop jb into push test xor das jb xchg mov ss stos mov movsl xchg movsb and shlb pop inc cmc push fdivrs pusha or lods aad inc adc ret nop hlt adc adc dec cmp and inc lea enter xorl and adc sbb fimull jmp aas push xchg cmp je jl pop pushl cmp add or mov inc or sti cli fisub jp adc xchg mov sub xor aad repnz add call call xor add imul cmp xor dec cmp push psubusw or xor adc ss dec jno sub and xor fadds js movsb test mov scas and xchg rcrl fs (bad) jl or sbb sbb or mov pop (bad) aaa and add mov cwtl sub lods mov mov jb sbb call mov add roll dec das sbb push divb xchg sub mov sti or lcall jno sbb sbb ret add (bad) leave push add dec icebp xchg xor je clc mov xchg add mov lcall cltd data16 cltd out push adc mov fdivp fbstp xor cmp jnp adc sub mov sbb inc ror xor push or iret cmp test mov push push (bad) mov mov insl dec and les and out pop xor pop jl cmp pop add lock add lock xor sarb mov mov xor les xor icebp mov inc xor (bad) mov fwait or jns js in dec adc jns pop popf test xor je xor xor test pop mov adc add aad dec adc divb xchg sub call das xchg adc lcall add call or sub jl add test les jb int3 mov fmuls sub mov pop push aas arpl xor (bad) sub push fnstsw sub jo pop repnz xor sbb sbb fidivr mov lock jmp ret and dec cmp sbb sub aaa clc ret lcall adc std bound scas xor cmp js leave xchg cmp xor test pop push sbb adc adc xor enter inc mov xor dec pop dec lds xor out push push flds cmp (bad) mov ja fs loopne add imul cltd loop add xor cltd daa dec xor push xor inc in inc mov xor mov add lret sbb sub rcll mov sbb lret push cmp movb or pop add mov call lahf xchg jne addl test je push call cmp (bad) jo sub jne xchg and jb add xchg jmp pop sub add mov js adc adc and pop and (bad) (bad) cmp lods bound jl popa jl cltd adc sbb enter pop in in sub in (bad) push xchg (bad) stos ret movl xchg cltd jge sbb dec sbb test cltd sub fs bound adc sbb xchg std push daa leave dec cli hlt loopne push repz xchg or dec add push or outsl jns inc push xorb xchg mov roll or mov lea pop sbb xor sbb push dec add test or push dec cmp add dec or inc mov lea inc enter xchg xor inc shll xchg ret or sbb xchg hlt or pop out das inc aaa push movl es scas sbb test pushf xor jmp flds sbb (bad) mov dec jp jmp adc push adc (bad) cltd dec pop add mov sub inc push push xchg or mov mov sub inc adc sbb xchg gs mov jne mov adc (bad) jae inc ljmp sub movsl shlb popf js inc imul das sbb cmp loope scas mov ret fdivl out clc pop adc jno call mov out mov lods fadds (bad) mov add and aaa cmp movsb fs sub and lahf mov lret inc movl mov std nop sub sub adc sub testl cmpsb imul sahf push or and sub or xchg adc ds lahf int3 cmpsb popa pop or mov adc ror push cmp push pop xor faddl dec push or mov out adc adc cmp std (bad) pop arpl and bound fwait jbe je adc and jle sbb pop ficoml dec push mov sbb mov sbb add call pushf pushf lret inc aad push inc sbb inc push mov add sbb lret sbb sbb or pop sbb or sahf enter (bad) cli or sbb mov mov mov test or or sbb xchg adc and daa adc mov push adc and jne add or inc add xchg (bad) shll rclb int3 sub (bad) hlt jp insl xchg gs aad rclb or push inc sub push (bad) je push or cmp add inc ret (bad) in dec adc inc xchg fcomps adc xchg fbstp jnp mov clc sbb test and mov out sbb mov inc lock xor mov fs or xchg and and (bad) enter out or mov mov rolb aad insl jns push dec sbb cmp mov push (bad) adc mov mov adc push and fs mov scas call test pop xchg pop (bad) xlat mov inc ss or or push and nop ret jo xchg aaa adc adc or repnz sub and cmp inc or xor lods ja pop sbb inc cmovo out and xchg cs add sub inc add lea add add lret or cs repnz cmp inc push mov jo aaa add or or mov sub pop mov inc and gs mov in fs stos pop xchg loop adc xchg ficom mov sub fstpt dec sbb popf add (bad) and adc rorb dec or fmuls imul mov mov pop cwtl xor sbb call clc push xor sbb adc sub jno sbb fcoms pop pop pop mov daa fisubr sbb mov movl add add inc std inc inc call rorl dec push xor add nop mov push and js mov rolb adc jae push mov add icebp cmpsb fwait or call fwait cmp mulb cmp dec aad dec push push xor jnp stc shl xchg cmp movsb test jmp fwait sbb (bad) call test sbb iret loop clc loopne ret jae pop popf mov (bad) sub clc cmp jle xchg push mov es mov add ljmp je (bad) or inc dec cmp add cmpb jne inc testl and jnp inc pop daa fimull rolb sub incb lahf jle cmpb jl push aad inc cmp jl (bad) adc call adc adc adc or daa push mov rolb sub and push xchg cs mov sub sub or pop and inc (bad) nop xor xchg mov loop mov and sbb lods add pop inc stos xchg insb and sub lret or xchg movsl jecxz and and ds inc and xchg pushf cld sub mov test mov xor call lahf leave daa in push movsb jecxz leave or inc push jmp ljmp mov or lahf or test sbb inc or xor xchg repnz push add dec leave and mov daa ds (bad) or push adc xchg mov and sub enter enter imul shrl push jne dec sub push push daa fiaddl xchg mov mov mov les pop adc jne fbstp rorl adc imul sar push mov push shr add sub cwtl push movsl (bad) jbe and shlb xchg inc ljmp call sbb mov mov xor inc fsubs jbe fbstp outsb scas fwait push iret or insb rolb mov sbb xchg (bad) xor sub push or pushf jbe inc jp push inc inc push les enter jg or clc ds lock aad cmp add sub cltd push arpl cmp rolb loopne shlb mov imul push push daa pop sbb mov mov pop dec pop push and ret and pusha mov in jne or inc pop push push push push (bad) cmovb sbb pop inc push inc lret xlat (bad) jo je jno scas jno and adc push mov push aam iret hlt (bad) xchg xchg or push call add arpl cmc mov sbb dec adc rol xorb sub sub inc cmp jle mov outsb or and jle jl cwtl adc mov imul add push add add adc jg mov (bad) adc or push call sub addb insl sub inc add push mov add cmp add fildll cli pop movsl fsub lds insb dec xchg and mov mov orb xchg cmp xchg mov push (bad) sbb inc ret jle fs jb ret or cmpsl add mov xor or popa add pusha ficom bound jns xchg mov dec dec mov cli mov sub pop mov mov mov mov xor adc inc inc or push add inc xchg dec adc add andl dec and imul pop push call adc dec pop hlt icebp test pop pushf leave push out andl push pop push sbb adc enter sub sbb aaa cmp cmp sub jle mov in stc xchg ljmp scas push xchg xchg dec xchg dec lock inc ds shll sbb inc mov sub mov adc iret mov mov movsb or sub lahf repz mov cmp pop inc lea pop std mov dec push addl hlt inc dec push xchg ja adc pop hlt adc sub adc sbb int3 lret daa stc or jne lret call scas pop inc sbb sbb or mov js add jg sbb and xor in outsb sbb cmp add mov fildl (bad) hlt and inc mov outsb shl mov inc mov sub lcall xor xor sbb add or jp test pop stc inc add mov dec adc adc bnd fs xchg inc push or or (bad) in ljmp jnp xor push push movsl push adc pop add call out adcl test fnsave mov sahf jmp stos adc sahf mov pushf aas and dec jge mov sbb mov or les lock mov js or adc test call test or shl push ss and or jp mov pop push add and rolb lods pop dec mov adc dec mov movsb xchg pushf or gs push jmp fcomps push jge adc pop cmp sbb test sbbl negb out and and adc xlat es or push test fsts bnd push fs (bad) repnz cmp popa push xor test dec mov jg cltd adc or call pop jb push js sbb mov sbb and or push scas daa xor push push push int inc mov and inc and mov jns pop lcall pop call mov shrb and loop sbb cmpsl xchg test or push push call mov xchg rclb or or adc mov add jecxz test adcl test mov gs mov add int3 and add push aad call and add lock push push adc and sbb sbb (bad) xchg or ret scas adc in sbb adc addl sub mov test push mov (bad) lods and xor mov sti or and or and or cs or fs fidiv pusha sahf inc mov movsl cli insl add cmp jo enter clc mov pop rclb cmp jmp mov mov inc jge shrb jne or ja (bad) push push inc cmp cwtl push add ret mov sbb push adc xchg mov clc adc jo push test test dec clc dec repz (bad) lahf mov (bad) hlt jne mov fwait cwtl ret ljmp xor (bad) int ss jb sbb sbb mov insb std cmc inc repnz push push or push (bad) sub push dec sbb mov shll sahf aam lods xchg lock add dec movl xor dec lds lods arpl nop push es push push inc sub mov lods stos push popa inc dec (bad) int3 cmp das push test mov mov push test mov loopne add push adcb xor mov (bad) mov (bad) arpl (bad) nop inc add lods adc xchg xor dec xchg xchg dec insl daa (bad) scas hlt dec push mov mov cmp push pop ret pop sbb lcall ss stc test xor in jp xor add outsb subl enter movsl call xor add decb stc xor call dec push pushf ficoml mov pop adc repnz out daa push pushf mov adc ss sub xor movsl or inc je xchg cmpsl jo add mov (bad) lds push mov dec (bad) sbb es cmp lret ficomp mov push decl fcmovnb sub adc aas add fs cld inc mov dec jmp pop dec adc mov add cmp jne aam pop adc push pop dec ja dec addr16 ret push inc add push adc and cld xchg xchg xchg or icebp and jns xor les or adcl pop cmp jae mov xchg bnd adc das shll (bad) sti je jbe xor das add (bad) cmp mov pop push mov adc fdivl inc enter sub mov and add push or pop cmc dec cltd jmp xor mov mov xchg sub arpl pop sub in pop mov dec push mov adc lret jmp add mov pop or icebp inc or mov int outsl pop xchg ret adc jl inc sbb add mov mov in adc dec pop push (bad) jne push or inc cld add je sub testl adc mov jmp xchg push lock mov call sub leave imul clc sub outsl jo outsb cmpl mov (bad) idivb ficomp sub (bad) cwtl sub dec pop inc inc rcrl add push or mov sub xchg mov lock data16 es int3 sub dec and pop jb add push push das test push xchg lahf aas movsl and sbb jno cmp mov lds lods pop lahf add push xor inc repnz dec xchg jmp xor or pop test pop out data16 pusha lock push test les (bad) mov adc adc fwait and push sbb cltd adc add sub dec adc cld rorb rolb stos jo inc popa lahf inc call sbb bound adc (bad) jp sub hlt test or adc outsl stc and mov add add mov stc adc xchg and inc sbb adcl and adc sbb and add mov or mov (bad) or mov add adc jns mov or inc leave xchg in add pop in dec das mov dec stc mov dec dec dec stc movups mov mov in ret cwtl into (bad) and icebp in push and lret jbe mov int3 lock mov mov mov int3 std cwtl daa enter adc enter add lea or mov cmpl sbb pop dec pop and test or movsb mov jo (bad) out xchg dec and jle jnp fidiv mov lea jmp xchg (bad) push mov push inc dec outsb das adc nop lods or push cmp dec or sub clc lea pop adc sbb clc ss ret xor sbbl pop mov insb insl clc loope imul test lea jmp push inc sub pushf push cmp repz outsb je push fnstcw adc mov push dec inc scas call pop xchg dec xchg test test lcall xchg xchg inc jo or aam pop cmp in add mov lret fdiv arpl in and pop pop addl rcrb rolb inc cmp mov lods ss outsb cwtl dec adc fnstenv xchg inc bound lds xor push jae mov push cld mov push fiaddl mov or xchg jns sbb ds lods outsb (bad) in ret scas ss (bad) (bad) gs push lock sbb inc ss lcall xchg in loope jo push mov push pop daa aad push push clc (bad) or mov jo xor xchg xor leave repnz inc test loopne and inc sbb (bad) sub fs hlt lret or lcall mov gs clc sub mov xor adc aam xor push and xor (bad) push int3 mov inc mov (bad) jmp pusha std and mov sub push dec xchg push xchg and pushf and les cmc jmp fimull and adc int pop add and js or mov ret mov shr sbb lahf jmp or cmp inc pop lcall jl xor dec xchg xchg dec adc add sbb push pop pop add pop pop adc clc mov cmpsb inc imul mov adc mov or je cmp inc or add lock notl mov lock lock add pusha addr16 test roll pop fs xchg inc xchg and test mov inc adc add jg pusha outsb push jno ret andl sub inc or pusha sbb stos je cmp decl jbe mov mov cmp adc lods inc fwait pop out mov (bad) call jmp popl xchg ss or or inc imul fnstsw xchg or and inc sub (bad) or dec push inc add imul pop push hlt or adc cmp adc lods bndstx sub mov sub xorl call shrb movsb xorb imul push sub cmp push sbb mov add dec mov add xor pop jns xchg jns (bad) jmp dec ret jle add fiadd mov add push call mov xchg or test push or push xchg jmp pop aam inc daa pushf or and mov aas mov inc xor mov sub movb xor mulb mov dec jmp mov push call data16 xchg int3 add xchg sbb push cmpl neg ret test pop adc mov jmp mov inc mov inc dec sbb cmpsb sub jne jmp push pop push and je xchg and enter pop pop ret test add je adc out cmp cli push xor pop mov xorl add scas mov jle push scas sysexit lock xor xchg push xchg leave test je cmp or test mov (bad) je sbb adc push adc inc jo lods or lds add mov test dec jle movsb pop adc ss push push mov loopne push cmp adc fsts push adc in or mov push ret shl push adc or mov repnz push xor add inc stc xor dec ror (bad) cmc xor or and pop in lahf cmp ret xchg xor inc cld cmp je and out lock daa lock out outsl xor adc xchg jmp pop mov pop and adc xchg push lods push aaa mov xchg sti jg pop dec bound sbb je sub or add xchg jmp xchg out adc ror or cmp cwtl xor jmp cmp mov add cmp jmp add and leave and pop loop dec addl adc push cmp je adc inc sub fsubp xchg movb xor push ja push mov lret sbb sbb fwait lds shrb sbb add push pop cwtl add and adc test adc xchg fwait dec (bad) sahf or (bad) movl (bad) jmp cmpsb scas sbb xor leave movsb jg add push xor rol or fs and adc pop call lcall ds add push std dec rcrl shr cmp jb and mov push aaa push or call sub mov adc cmp add je xlat push adc lret and or pop (bad) pop lea add adc mov mov sub sbb (bad) rclb or (bad) push add mov jecxz and fistl cmp sub and add sub mov cmp dec mov cmp jb jmp add movsl push push push push nop test cmc lods mov ret dec mov or jp into call (bad) adc cmpsb mov andl adc or sbb or xor aam testb xorb dec stos jno pop cli add loopne mov das jmp mov adc cmp xchg in pop or cmp je dec and es inc dec or xchg cmp and dec push test and mov cmp xchg mov and dec xor ret je mov sub leave or xor mov gs cmpsb icebp jg mov stos (bad) mov inc cld dec pop enter mov mov dec pusha push sub add or scas push and jne repz aad push inc mov pop (bad) push and xor or add cmpsl and adc mov rorb and push xor mov add pop adc adc js mov (bad) adc add xor cmp int3 mov or add and mov adcl jle hlt popa dec add xor and mov repnz add sbb xor shll fucomip mov inc lcall ret mov lret cmpsb sbb bound xor das xchg push test or push je testl xor gs xchg sbb cs das jns adc jne iret jne loopne inc scas sub pop decb sbbl aam mov mov and mov add pushf and adc pop aas test ds ret pop into leave xor or adc imul inc sbb lods adc ljmp xchg test (bad) or jne,pn fwait pop movsb (bad) cmc dec push call adc push push movzwl or cmp pushf push xor ss add mov insb in mov cwtl xchg pusha inc mov xchg movsl dec cmc ficoml jne or out mov or inc and push sub aad and mov es mov (bad) sbb push js push call jbe pop xchg test push dec popf (bad) dec jnp push adc pop int3 adc fsubl loope int3 (bad) jle dec inc pushf test pop inc pushf jl pop daa cmp jb neg mov aas xchg sub roll cli and push pop adc or xor ja and cltd sub call in pop or call lea push xchg cmp and adc cmp sbb sub int inc inc xchg push roll testb std nop cld xchg in nop rcrl or icebp and mov and sub inc daa adc sbb dec pop dec je ds inc idiv enter cmp mov rcll mov cmp sub sbb and dec (bad) cmp dec stc xchg in ret (bad) mov jge loopne movsl mov jl (bad) cld ficom dec adc push in loopne mov and leave (bad) xchg imul (bad) test jp repnz or cmp in cwtl mov jne inc inc dec negb cmp xlat inc orl push sahf adc add jecxz mov cwtl jbe repz jle cmp mov inc cmc xchg cs int jmp sbb adc push pop sbb push std les lret into enter mov pop les cmp popf mov sub xchg and sub mov mov lea gs inc (bad) jo pop movsb jle lcall inc mov or (bad) add adc push add rolb mov aas adc xor xor sub arpl mov add loope jo push orb repnz (bad) cmp fcompl sbb push or dec jb add cmp sti or or pop arpl lret cmp push jne push inc push and add push push test inc adc (bad) and outsl push xchg mov sbb jle pop push cmp jmp mov jo inc or movsbl (bad) jmp and cmp data16 push dec dec ret add in push cmpsl jmp cmp clc out or hlt jb mov lret add fs sbb in jle inc adc decl mov jmp adc dec sti cmp or push and jmp test mov sbb adc push lods add cmpl int hlt sub (bad) cwtl jbe call (bad) mov (bad) loopne int3 aaa je clc sbb jmp mov add xorl add xor repz fstl xchg dec and xor rorb mov (bad) cmp loope mov jecxz adc push adc cmpsb inc out sub or (bad) mov sub jbe add add je adc mov cmc popa stc or pusha aaa decl and mov leave sub mov outsb or fyl2x enter mov cwtl int3 aas nop adc data16 fmull loope sbb rorl add add mov pop and bound es dec (bad) repz cmpsb push push nop and inc inc inc test mov inc jg (bad) or adc dec inc xchg cmp fmull mov mov pop dec xchg in je lock dec xchg hlt je clc pop dec xchg cld pop sub xchg (bad) test inc or icebp xor push repz or sahf dec or xor sbb sub rorl cmp sub icebp and neg xchg sub js test sub sub and jns cmp pop or xchg faddl sbb loopne dec sub ficompl fs push out mov movsl sub lods push out test and (bad) inc pop push xor push aam fmul or xchg in and inc cld add aas pop xchg xor sbb adc xchg and jmp and jmp in and xor pop push mov rcll push test sub cmp push inc emms or mov inc aas addb adc clc dec lcall in out add jbe cwtl adc push pop enter outsb fldt out outsb sbb push sbb movzwl cs xorb enter ja jmp and ret arpl sbb fcmovnb and xor inc mov adc dec cld pop addl pusha je shlb movb and test cs inc in or xchg sub fs pushf outsb ss sub adc call sbb adc stos nop pop or in hlt insl mov pop pop daa icebp je movsl ret adc adc enter movsb lahf cld sbbl pop jne mov xchg jl inc sub adc lret test sbb mov cmp cld cmp aas jb sub popf and pop add fs add mov lcall adc adc mov xor imul je xchg hlt repz mov mov fsubs or dec add (bad) xor outsb ror adc movb cmp jo dec adc jle jb sub or in add jbe mov dec push test (bad) call hlt pop gs and adc lods aad cltd add push xor mov push pop loopne sahf and sti xor pop mov sbb push xlat (bad) pop jmp push in adc enter push push cltd sbb mov clc out imul fstl lahf sbb dec (bad) mov jnp inc mov and xor mov jl in jge dec mov or xor pop xor jge and scas cltd setl xchg adc je insb xchg xor mov rclb xchg xor bound push loope xor push jg push mov lcall push jg nop pop int3 add or or sbb and sub mov mov xor push mov xor xchg or (bad) mov adc pop cmp mov xor jmp test adc sarb cmp je add and jl lea push jle mov cmpsb repnz cmp test pop fadds and enter jbe insl jne rep stos push mov sub jge adc mov mov rcl and scas in mov inc decl sarl ret xchg inc mov add subl rorl add stos sub cmp mov ja imul and ja add mov push (bad) cmc inc sbb cmp jne add add cwtl cmp rcrl movl movsl sub into lcall mov movsl adc xchg rol jmp mov test pop (bad) pop mov popa arpl push and adc mov or addb add push cmpl psubsb or mov and mov adc sub (bad) push and sub test and clc std push cld jne mov and sub cmpl pop iret or add fnstsw mov adc jl or adc jb mov mov inc rcrb push sbb mov aam adc and xchg roll push mov add add jb mov flds add push push lea inc mov cmp ja movl inc mov push add cli int3 movsb stos jno jae pusha ljmp rcrb insb push mov addl inc jnp push lea mov or int xor add push mov call inc cld in leave mov inc mov lea adc ret je pusha add mov rorb je xor or mov or test inc es repz or and jl and test popa jb or cltd cmp aam loopne dec lret xchg mov and ja jne push call std or ja sbbl and push aas push out mov mov test out addr16 jmp adc mov jl ret testb insb inc and adc cli ror sub add addr16 inc add push or lds sarl cli jbe jns cltd or mov mov int rolb push in stc adc and cld push (bad) loope inc pop pop ret aad add or mov ret cmp adc or or or sbb sbb add and jbe daa call or inc add jmp jbe outsl sbb sbb or mov push rolb call fmuls movsb pop je push cmpl cs js add or jns add push and das mov push xchg (bad) sbb (bad) je mov mov sbb and leave jns bound add push mov int3 pop mov jl lods xor cmp adc das aam or popa mov dec sbbb mov inc dec add ljmp pop pop push and pop adc es arpl pop mov test invd inc cmp fisubr adc or xchg es lds push stc adc loope or cmp sbb mov adc mov adc and or call sbb adc jb int3 sub cmp stc ljmp jnp stos ja jmp inc jns or push or hlt jle imulb js dec add clc jle ss xor xor out iret sbb dec clc mov jg sahf push hlt repnz adc mov and push out sub xchg (bad) mov add stos movsl push add icebp orb sub jno,pt add sbb lock inc push mov jmp jmp mov push into lock sbb cwtl and nop fs fimul mov xchg jae ja and es fistp lock jl,pt cltd xchg cmp in inc sub lcall test adc dec popa and outsl adc add shr add or jl les lea cmpb je repnz mov cmp neg adc pusha sub dec das or and push loope add sarl add iret or cmp movsb sbb add mov xchg enter or clc into jae jae jne in jmp scas pop (bad) jle movsb ja (bad) icebp movsl push mov mov dec movsl or push arpl cmp jle mov adc push xor push aaa xor mov jmp jmp cld jnp mov pop add mov jmp imul sbb lea add sahf movsb aas inc mov shlb in push push call mov je cltd outsl inc testb push sub xchg jae push push adc loope sub into pop push mov dec add mov sbb fwait aam xchg fsubrl adc or adc mov and nop pop cwtl in imul mov dec dec jo dec cmpsl test mov movsb rorb fistpl and mov ss mov fwait aam adc fisttpll pop xor jmp jecxz bound (bad) popf call adc cmpl cmpl and mov pop and orl mov mov add test ret push aas jno jbe imul aam mov lock and dec sysenter test mov xchg adc outsl sub pusha mov jl xchg and idiv ret push pusha (bad) (bad) adc xchg xchg ss push sub push mov ret cmp xchg cmpsb ror jmp xor sub lock mov push jo mov int and adc icebp lods jle fistpll add test and mov lret or push jmp xor loope push jne cmp out xor pop clc cwtl adc test loope push addr16 lock pusha jmp jmp mov dec cli pop shrb lds pop les (bad) mov inc mov xchg jmp pop sbb cltd in and shll add dec pop cmc and xchg push jmp (bad) into push xor and jno adc adc lcall sbb stos adc jae in repz push add add or sahf and sti lret pop push cmpsl pop rclb push mov push mov and insl cwtl loopne xor inc (bad) rcl mov sub pop jmp stc adc jne sub adc push pop add or fmull mov add (bad) xor push fcoms lock pop sub push hlt jne pushf xor sbb mov enter orl bound or sbb movl push adc fisubl nop xchg data16 test mov int jo mov aas test es les test das (bad) jmp ljmp adc adc lret stc sbb adc pop in dec pop and fbld cmp or aas or jge xchg pop inc sub add mov inc push lret shr pop push pop insl dec in lods cs inc jp test jne dec (bad) fnop mov in mov xor pop jmp lock sbb xchg xorl mov mov ret bound nop inc push mov jmp jl sub outsl (bad) jle add pushf add rclb mov and out dec cmpl data16 inc and mov out cmp movsb inc mov xor daa adc push test push jne orl mull mov or xchg add xlat sahf and xchg clc decb and mov push movsl push jne pop mov push xchg andl jle push jne es sub xchg sbb add call leave mov add ret int fdivrl jl cmp shl or fwait mov (bad) push pop lea scas imul repz inc cmp rorl fmull test addl add (bad) jb cmp adc scas clc add mov ret mov inc das test adc or add lods and jo mov adc mov pop mov pusha xorb into nop push sub stc (bad) mov (bad) inc dec cld and pop xor or ja dec test dec repz jns or aaa xlat imul adc push cmp ffree inc add out ret dec lds add cmp inc sbb pop mov dec push clc (bad) aad or dec cmp rclb push pop test test mov pushf aam lcall popa rcrb sarb jmp jbe call jb sbb sti inc popa push push enter push add insb (bad) and sbb testb inc cmpsl psrld (bad) neg pop pop and pop sbb mov cmp (bad) aaa dec test es sub push push cmp xor jecxz out xchg jns popf pop xchg dec jmp jp push retw pop ja adc xchg call in sbb enter call push adc xor jle mov pop mov or inc hlt mov mov sbb sbbl sub adc push jne push out and inc jmp sbb (bad) jne lret mov popf or mov mov test jl xchg mov int into jne cli ret movsl mov adc js inc (bad) sub frstor out jmp xchg or sbb outsb mov add movsl sub dec imul mov or (bad) or ja andl pop sahf scas rcl cltd loope mov leave out (bad) xchg mov dec add pop and xchg into hlt js jle,pn xor adc push or decb lds inc xor inc sub add jno test mov adc mov mov rorl and inc jecxz psrad rclb dec out repnz js hlt xchg push std jnp mov out je call jns clc inc and rclb mov (bad) adc pusha mov dec and scas inc sahf cmpl or sbb (bad) mov xchg ficoml icebp jnp push adc addb cmp test cli jmp push call lret xchg ret pop loop in dec sub popa mov cwtl sub xchg out add and addb rcrl mov and into mov add mov inc cltd add or hlt out test push adcl testb adc call cmpb pop or inc adc repnz push pop cld add push shr je jp imul mov lea pop hlt outsl (bad) mov clc jne,pn mov xchg sbb dec pop sbb iret jbe add dec cmp or test int stc and nop xchg adc out lea not and jl inc decb jne mov and shl pop mov mov daa enter jns ja hlt jl lods mov mov outsb clc sbb lea sti xchg push add orl inc pusha mov pusha push mov mov sar pop cmp push cmpsl jbe repnz hlt pop test sti addl cmp jbe push movsl push (bad) je pop pop clc push sbb fs adc pop sarb mov rep mov mov sahf pusha incl and xchg cmpl lock cmp mov stc sub or dec int mov cmp push jne mov inc lock (bad) jo jae cmpb mov mov shll out or mov mov sbb loop loopne sbb inc pop add and xchg test dec push inc lock cld decl inc dec cli adc cmpsl and or cmp shl add or push and or pop cmp mov mov and dec inc xchg or mov jns nop adc pusha add (bad) adc lods call ret inc mov xchg adc mov mov xor cmp xchg push int3 enter cmp push test xchg xlat jecxz dec add or and push sub add cmp jmp push sub jbe fnstsw jl sub addr16 xor rcll incb dec pop test sbb imul mov stc and mov jmp push pop mov cmpsl pop inc into mov cmp andl loop and iret lock ds adc fwait arpl jb pop adc mov cmc fmuls daa adc out xor pop dec jae stc jnp sbb imulb push sub in cmp mov out push pop call sbb pop je push (bad) pop pop lahf mov test pop push add sbb cs mov pop das mov aam mov jo and (bad) fdivp adc dec hlt or outsl mov into pop cmpsb xchg test popf or jg incb cmp xlat je mov cwtl lret jbe pop pop movsl ljmp jne mov lret pop add loope jmp (bad) mov stc mov icebp sarl hlt dec sub pop jle or testl and sub cmc clc mov popf cmp and clc or (bad) jne push shrb sub xor shrb sub and insb and push outsl inc cltd xor and dec sarl xchg dec mov pop or stos jl xchg xchg imul push inc decb sub sub es int3 mov or or nop jle jl jmp das sub or wbinvd jnp mov mov xchg out or push imul pop add cld mov jp jne mov inc add mov lea ds sbb dec sbb cltd fisttpll insb cwtl and pop add shll or mov jo mov jae ret out subb push sahf imul mov rorb sbb ds loope xor xor xor xchg in insb push je push dec and jmp mov test fdivl sbb std xchg mov mov jle flds andl mov push enter jno (bad) and xchg push loopne adc popa cmp fs pop pop cld xor inc or add test dec xchg pop sti (bad) xchg out loopne or push mov jmp xchg adc cmp ja cmpsb inc lock dec repz mov maxps mov inc f2xm1 adc jecxz rorb xor call push es (bad) mov lock pop pop jae mov or rolb xor mov mov inc inc cmpsb enter shlb add and mov and push or ret out and dec push leave fdiv xlat lea pop sub inc mov ljmp dec push cld dec cmp adc mov sbb mov add stos rcll inc adc pop pop icebp sub mov pop adc mov cmp dec pushf cmp pop sub clc pushf sbb nop jno inc sbb and orl lret push jg gs xor sub add mov pop repz adc sub lret xor (bad) sbb jecxz int3 push pop inc mov or mov int3 dec cmp jne pop sub mov out adc lods data16 iret jmp jo loop repnz adc adc mov js mov cwtl je add iret out and sub jmp mov cmp sub outsb pop xor mov es cmp adc adc icebp repnz mov clc inc jne dec add cmp pop jae push mov je xchg jp push jne sbb lea cmp ja out jp ja jno xor push popl out mov out inc jnp xorl jno lcall out pushf mov sbb mov jecxz or sbb inc into and push dec lret sbb inc jns bound dec jmp popa adc add fidivrl daa pop leave addb adc negb mov and fidivr mov pop mov pop sti and in test (bad) fdivrs dec mov adc mov or sub jle imul sub add addr16 jns (bad) xor mov dec test out leave add push mov sub cmp pushl lods xchg ret pop in sti and das stos dec lock add sbb sub add aam es adc push and inc inc pop and sub jmp aad jmp adc pop in add or (bad) xor mov adc fcmovnbe (bad) aaa in imul push sbb rcr jo xchg adc cmp or fdivl orb jl or jg clc xchg jle sti adc in test movb clc das or pop mov rorb xchg mov test rcll push fadds in cld add jmp sub in popf or push sub dec jg adc (bad) je or push xchg or sub or repnz adc xchg sub sti sub and cmc dec pushf (bad) icebp or push adc pop jmp and add jmp mov add and add lret push cmp jmp je or and insb mov and sub mov adc or mov ss push jg xor sti inc jecxz push leave js jmp shrb mov andb xchg in scas xchg out stos and jg dec mov in inc inc imul jmp cmp addr16 (bad) sbb outsb in inc ret xchg test pop and test loop js call pop test insb and dec (bad) pop push das xor test pushf sub icebp fsubrl lahf pushf sub cmp mov add test sub mov es sbb xchg and dec test enter cmpw addr16 adc out insb sbb add inc adc lea ret xchg jge pushf insb iret xor lock push jmp and xchg or xor cmp xchg lret add loopne xor sbb inc jmp pop aam je or ljmp jmp fcoms push hlt test out sbb jmp je mov shlb testb jmp rorl mov jecxz mov gs xchg sub pop mov pushf push int inc popa test adc (bad) add int3 loope mov lock cld lret adc and lret mov fcomi fiaddl je and lock inc lods sub adc test pop mov sbb or push mov pop call adc add add pop adc mov push sbbl xor leave shrb adc daa adc cmp push adc mov inc xor xor dec add xor dec jmp or movsb ds push (bad) mov adc iret sub sub and add dec and or inc ret add xor add dec and xchg or add imul and jnp push pusha adc in xor je,pt leave or call mov and stc in repnz and sub cmpsl cmp push lahf or push rcrb je sbb jg pop jl and jl mov adc cli jmp ficompl or js mov cmp sbb (bad) mov or jne adc je dec or bound push out and hlt cltd push push push push cs (bad) call mov xor mov cmp jle es aam outsb clc (bad) popa mov jmp fwait mov addb cmpsb xchg bound xor mov inc and add (bad) aaa cltd daa fcomps out jle sub sub ret (bad) jne pop (bad) mov push mov or add or lahf xchg add sbb sub pushw hlt xor pop test push push call adcl or sub dec in sub push xor (bad) aas or xor xor in xor inc inc mov cld orb dec add xchg enter jmp push cwtl (bad) jle dec (bad) ljmp enter (bad) dec mov dec pop nop push hlt or call mov cmpsb (bad) jno ss or cli adc movsl adc cld sub mov and and jo mov cmp decl add push mov mov jl bnd popa add call scas cmp lahf adc insl or xchg inc imul sbb adcb lods stc pop mov movsl and push mov insb dec jb es jnp insl adc inc insl fmull jne enter nop outsl loop pop out loope mov addr16 add popf test sub int3 std cld xor daa xchg or or clc push cld mov pop cmp je inc jb jns cmpl into out out or or (bad) adc push pop mov and ret loope jecxz cmp jg test add jle xchg push inc or inc ss (bad) sbb dec lcall mov mov mov and (bad) or adc rcrb mov cld mov nop push jmp mov enter test jb adc and or call inc test sbb ds jmp clc lods cs jne sbb pop fs sub popf mov das ja es ds test loope adc movsl dec push add inc enter cmp jge stc das sbb sub mov or pop add sbb or push sbb dec adc stos jmp and mov decl mov jne and mov inc or sbb stos xor jmp mov cmp out call xchg adc add push enter mov and push mov fs sti nop cmp decl xchg lds push rcrb or je pop jmp pushl or roll lcall sub push jne add push xor inc ror inc xor les aaa loopne jmp lea mov ret adc sub test pop xchg mov push cmp xchg les arpl or mov rol (bad) sub pop and adc in (bad) icebp in xchg mov mov inc bnd or addl aas cmc pop cltd adc es dec or adc mov jl add and mov push and out je jo call or jne dec call inc adc in cli es add xchg sbb mov scas les in inc cmp testl fucomp faddl loop mov push mov pop out mov loope push sahf test popf es lods or cmp jge lea or shl mov nop (bad) ret cwtl fs sub sub fistpll lret jle cmp or jp pusha sbbl adc or xchg push test and cs (bad) push cmp or cmp mov (bad) dec (bad) jbe repnz pop jmp enter mov inc mov dec repnz push pusha in mov mov (bad) cmp loope ret and dec leave push mov and cmc sbb and mov roll in or aam jecxz hlt (bad) pop mov and stos mov adc and out lock adc or jbe std sbb ja fldcw add and in ja mov es mov in push cmp je cmp cmp or cld adc xor out mov mov std mov fild lea inc or cmc ret sahf inc add pop je push push call cmpb aas (bad) xchg and pop imul nop or push (bad) ss or add jo adc pop incl or jl stc adc inc push jne jecxz sbb std enter roll mov enter sub sub mov cmp (bad) jo clc mov mov clc das inc fiadd add mov sbb fsubrl stc mov add (bad) mov call (bad) inc lods add mov sbb adc daa xor sub movsl (bad) mov cwtl test mov cmpb pushf inc mov inc repnz nop mov jne testb add adc or xchg jmp or ds inc mov jmp adc inc mov inc sbbl inc int fimull cs adc add mov dec data16 clc add cmp inc mov sub inc sbb mov sahf add xchg inc pop mov or xchg and or jge outsb or lea das jmp push or cmpsl dec rclb rorb mov dec mov mov push pop inc mov or add or add push sbb push xchg and sbb (bad) inc add sub fist xor bswap add andl (bad) mov and xor bound inc mov mov jmp or mov or and or (bad) jmp popa pop clc cmpsl dec jl test inc ljmp imul or dec push ret cmp je in inc jecxz adc jne and repnz mov divl rorl js push sbb jge bound pop xlat ss xorl sub fldenv cmp cmc dec out imul sub sbb je pop mov mov or adc (bad) ret jmp pop fsubr push dec cmpsb add cmp js (bad) cmp inc out clc mov pop imulb mov pop mov jl push js push cmp and (bad) call pop lea adc mov cmp pop pop or mov inc sbb mov push lock daa push or adc or cmc inc and fisubr xor scas xchg pop stos addl fsubr mov movb pop cmp jo bound movsl clc jl sarl cmp xor fs popa xchg in mov adc sub or jae loope adc push icebp and mov test and (bad) xor dec jl mov mov pop test dec pop icebp rorb mov add xorb mov jne xchg dec and sbbl mov mov inc inc cmp jl xor push or cmp (bad) js push jne test sysexit pusha or negb jmp ret dec dec repnz jb cmc push and mov je push jno or sbb in sub movhps mov dec or or add jl pushl mov sbb inc push inc xor pop rcrl pop xchg cld test testl (bad) sub (bad) call inc inc jae jnp jne bound hlt jbe jl (bad) lock inc ds push push imul push sbb pop pop test adcl mov cmp add push sbb xor outsl mov sbb shll add lods outsl or (bad) xchg jnp jbe xor jmp mov divb imul int das cmp adc sub inc sbb push or add ret mov xchg xor sub or aas mov push mov cld xchg inc dec jbe leave icebp pop sbb add loopne or or stc aas and jl push loopne shl add xchg sbb jg and insl das adc jno and mov push stos add test xchg mov mov sbb xchg scas loopne adc or push cmc or add sbb adc sub jno cli push or data16 pop pusha dec rep push xchg loope shll adc jno test mov mov pop insb and mov sub add adc loope stos and pop jmp mov mov stos ss call adc mov mov pop leave mov shr xchg sti mov add adcl adc jne mov sbb inc adc lods mov into inc sarl sub or nop add loopne fbld mov jecxz sbb inc mov inc int loopne notb test fidivl dec lret dec rcll imul shr jecxz aad mov mov adc push lcall (bad) push ljmp mov dec (bad) lock jmp mov jg jge or cli and ja sub in jl mov pusha sub xchg repz imul xchg fildl and push fistpl cltd or (bad) das mov imul nop je jo push jne cli inc mov scas and push repz jmp or sub out or add bound inc pop add jmp (bad) ss sar movzbl pop movb daa or or pop or jl fwait sbb adc rcll lea out or or or popa jo test pop sub lods mov lcall std or cmc jbe sarl xchg push ret jl xor xor mov inc jmp loop fdivr orb stc test adc mov xchg std mov lock aaa or out inc aas mov test jne popa fsubrs or movsb cltd sti push cmp (bad) or call addb bts sub aaa mov and inc bt jae sub sbb test (bad) popa push mov imul rol adc int3 xor jne inc jmp push xor and decb and lds mov push inc inc movsb add mov popa inc cs int or outsl cmp sub mov sahf pop lods addr16 aad adc xchg adc enter fsubrp cmpsb push roll xlat xor test mov int3 or (bad) in pop out dec mov fild addb rolb lock fistp mov test outsb enter in ret inc dec adc outsl jb inc je push jbe movsb (bad) cmc xor repnz cmpsb and mov cmp cmp je xor inc or fs mov cmp or fcmovne xor scas and adc shlb enter negb and sub mov adc or je push lret in push mov or push lea push lret adc inc divl les jmp xchg inc sti inc dec push lea je imul mov dec inc aaa repz sbb jg aas add daa pop movsl nop xor mull ljmp cmp es pop mov inc daa inc repz pop push movsl or in mov loope js testb inc push (bad) jns pop or add jecxz dec or sbb fs pop push xchg out jmp stos and pop push adc xor notb daa stos insl or data16 push or movb or or scas sub cli fisubr dec push incl cmp sbb sub icebp (bad) push push out cmc fimull xlat jmp xorl fildll pop enter (bad) dec mov lds loopne stos cmp js dec clc push loopne push adc xor enter movsb and dec loope and push or fcomps push xchg fs sub or loope rcrl imul sbb mov cwtl pop or inc pop push int sub fwait xchg pop add mov fdivs mov xchg push pop mov and ficomp cwtl xor push push xor jmp test pop sbb cmp sub and sbb inc cld scas je arpl inc (bad) int3 push loopne fcoml (bad) cmp or xchg les outsl jl xor xchg loopne dec pusha mov and mov test int3 jge xor dec sub inc neg dec mov inc or adc cmp pop je pop jg insb cld pop jns leave cltd pusha push jp hlt lea add cmpsb xchg cmp out popf js out iret jp inc repnz cmp loop sub loope and cmp hlt jmp and add cmp jmp test add sub add mov inc or aam adc out and mov nop shll test fadds adc cltd pop add pop sub adc nop add imul xchg out dec or mov dec jmp or mov leave inc rclb nop inc pop lds pop (bad) jb mov sub into int3 xor lret dec adc es fnstcw jle in add (bad) (bad) xchg or cmpsb mov add cmp ja nop nop jno xor (bad) jbe mov into lods mov aam daa mulb ss loopne jp pop pop dec xor push call push faddl add mov shlb add add push mov cmp mov mov pop or push in ret add mov insb js inc mov xor push lods xlat cmp andl jl pop (bad) ficom jo int3 and (bad) icebp dec adc push sbb addr16 xor adc xchg mov or je inc in jne inc cmpl and das jno or inc or adc jne pop lea mov je cmp je fisubrl mov push (bad) sub sub and pop cltd idiv add add mov mov sbb lock and adc cmp jmp mov (bad) xchg ds or adc pop dec clc push or jae jae in inc add jmp sarl sti adc dec aad push or mov les mov push cmp lds push xchg mov pop pop ds xor adc pop test ss xor push mov repz repz fwait or hlt js into or test adc dec stos mov outsb mov cwtl (bad) es jmp sbb inc mov jl pop sbb add lds inc pop aaa cmpl jl sub pop adc mov mov mov sub mov cmp cmp inc adc xor pop icebp enter dec lea rcrb outsb push mov sbb add call cmc out adc inc push pop cmp mov cmp cmp shl mov in lods sub mov or popa mov cmp or inc pop sbb jb ret popl xchg pop push in sub pop xchg adc add (bad) sub dec adc and dec testb mov xor and shll pop loopne push mov test sub pop std fwait mov xor sti sti fstl mov out ja aad ja mov mov (bad) xor sub dec xchg stc (bad) (bad) ss push dec lock add sbb sbb add and sub pop ds mov mov bound jbe cld or jbe in sti dec sbbl or dec dec sub or adc jo push or enter sub lret dec mov push int3 rorl cmp les inc hlt mov push imul (bad) jne xor hlt add or lret adc jb fidivrl adc test and or push pop sub dec mov pop mov nop mov or push push cmp or (bad) mov clc jmp movsl sub movsl mov mov je jb popa xor and stos popf and clc mov neg inc cmp rolb lock push std movups insl test mov daa inc sti push push add mov in xor mov lods ds mov sub prefetch pop cmpsl adc inc add incl mov pop adc mov cli or cs push xchg mov cmp inc (bad) cmp rclb out movsl test pusha adc and push call test pop and ficomp mov test bound rcrb pusha inc add in outsl and sti mov mov or enter pop mov mov xchg mov movl jmp cmp inc inc nop lods (bad) xchg push adcl add pop movb inc mov ss adc rcl or xchg adc je ds dec pop or pop pop add inc xor mov jne cmpb enter jmp pushf in cmp mov mov js shlb jb and je hlt push test inc in js sub fist shr out cltd lret outsb jmp daa call daa (bad) ljmp add (bad) lret sbb adc (bad) adc xor xchg cmpsb mov add sti popl test iret or adc std or or or icebp popf add sub sub lods gs mov inc add cmp xor inc lahf into std sub stos and loopne std stos scas or add mov addr16 jecxz mov je das repz sbb and mov cmp sbb jne inc or xchg incl ja pop cwtl hlt xor or ficompl jo xchg mov ret push mov lahf sar bound mov or call inc inc pop pop frstor add dec hlt sbb je jmp insl repnz add icebp test mov sarl jl repnz adcb in call or jne div mov xchg or je iret xor (bad) jb arpl push ja ret pop (bad) pop sbb dec lcall fs sub push inc outsl sub or mov jmp outsl xchg adc or or enter or cmpsb insb inc or cs jbe sub adc mov pushf and mov push jo orb daa repnz or (bad) jg mov mov pushf mov or test dec or (bad) xor pusha sbb call push mov sub pop sbb and movsb cltd insb hlt or or pop mov daa dec mov or stos sbb xchg or mov jmp inc (bad) les or outsb js add inc jle add lret add cmp jg je fxch scas mov dec sbb jecxz jecxz and add jne jbe cmpsb inc dec adc aaa inc mov int3 ds add push adc cmp and and movsl pop mov push sub add xchg mov incl (bad) jecxz loope xchg outsb add not and xchg cmp add or dec les add notl loopne stos adc sub or call lock fbstp xchg and and call out push in mov inc sub (bad) (bad) aam jbe outsl jmp xor pusha lret mov test and jns mov fcomp daa test mov daa mov or fwait and stos dec or or mov mov fdivrs movsb add xor inc jmp jae pop pop add push jmp mov mov mov jg dec lds ror into sbbl jmp mov pop push lock (bad) sub sub pop add out (bad) add clc and pop pop je mov xor or cmp cmc inc mov lea dec arpl and in and movzbl test outsb inc jne pop mov xchg hlt aam or pop dec pop and pop adc jne (bad) and cld arpl inc aad mov push inc mov mov aad push mov sub mov sbb pop push or imul sarb enter add test cmp dec dec popf push imul mov stos enter mov adc ret pop jge cmp adc dec jecxz push pop ret adc mov push sahf popa sub mov fstpl sub inc pop stos (bad) ficomp ficoml xor cld ljmp cmp jno rcr sahf les push cmp (bad) addr16 inc inc jmp mov cmp or pop push sbb fist xchg inc cmp dec sub add or lods and inc sub (bad) mov adc clc dec cmp aaa jmp push mov sub ret pop dec sti cld lds aam add xor inc jmp leave cmp add (bad) bound sbb jnp sarl xor lds pusha adc mov adc dec sbb mov and pop xor adc stc mov mov mov lea cli inc fist mov push cld std (bad) enter add add jl pusha xchg mov movsb fwait xchg sbb lcall adc or ds or mov mov in add loope das mov add dec jge rolb hlt mov mov adc push enter xchg sbb aam adc negl test ret icebp test insb adc adc sub mov adc (bad) jne enter cld push out dec pusha ret lds pop add ret jbe fs jo ret jl adc sub sbb dec sbb call cmp adc jns xor add inc push dec adc inc xor dec adc neg xor (bad) or repz xchg adc jno call cmp cld mov stos mov jg pusha xchg js lahf adc or test jmp dec mov dec mov mov mov lahf and or rolb je and push cmp jb sbb add adc les dec imul in pop xchg xchg and sbb lds dec mov lret adc mov or rcrb je and (bad) mov dec push or addr16 pop loop pop ret sub iret adc sbb in (bad) rorl push pusha repz fnstcw sub fist sbbl fsubrl adc xorl jl cli pop (bad) fist fmul lods push and add pushf test and or mov jo insb xchg sub xchg gs aam mov jmp or or cmpb and sbb aad fld xchg xor jl pop test jl mov adc fist aad test xchg mov pop inc lret dec movsl cmp adc daa ljmp and xchg xor hlt pop dec and sbbb int3 dec scas arpl testb gs loope push mov pop data16 incl je push or or push jne push jne sbb cmp cmp mov and push inc or idivl cmp xlat pop lret jmp lret adc push pop pop lahf inc test div push and rcrl mov movsb into xlat xchg mov notl push stc inc ss pop das call push jl mov xor dec push insb rolb inc dec popf popa aas call push jne enter mov adc pusha mov push fs push adc xor lods or xchg and mov jl js je data16 push enter xchg jp rclb xor lret js pop pop push adc es fisttp xor aam cltd aaa jp je imul sub out pop cmp sbb xchg mov sbb lret and je sbb insb pop jne sub pop push test adc inc xchg and xorb sub adc mov adc cwtl sbb cmp cmp mov add push mov fisttpl push popl add push xchg inc lods mov movsl out dec in sub leave add add dec or adc or push fs arpl fs jo push pop jne and dec jo ja mov xor cmp add push mov outsb (bad) mov js mov mov dec cmpb mov pop xor mov add and mov stos jl movsb sub sbb cmp in sbb sbb nop sbb mov push sub dec dec ret mov xor mov and xchg cmp ds nop lods sti xor icebp shll fisttp add fstps outsl or vmptrld or and cmp in push sbb cmp sub mov cmpsb pop movl ret mov xor int3 jbe popa dec or pop sbb in xor je mov adc lea add push adc lock xlat push aaa push imul xor inc in xchg adc inc adc lds mov and into push ljmp inc jb nop pop adc xor xor stc sub test sbb add adc xor sbb xor les les add cmp push insl cmpsl pop add xor adc lea sbb lock jns add and aad out ret jp mov (bad) fildl adc push and addr16 add pop push inc xlat jge adcl stos or inc pop xor sub les test push stos mov mov loope adc dec ljmp jmp push sbb stos mov or das push cmp dec mov xor mov add stc es sti inc movsl sub in push je cmp sbb jmp inc pushf xchg or or dec jno mov inc inc mov test adc mov call in rorl adc jne mov push lock mov dec jns mov push add std lds jne les cmp (bad) cmp jne mov pop mov mov cs sub lcall addr16 mov xor jbe adc fdivs cmp outsl lea subb into xor jne mov mov je or icebp pusha mov jne ss or dec jge lea and inc adc mov inc rep stos clc nop sbb or jmp mov lahf and dec sti push mov or bound xchg xchg cmpsb sbb movb jg test cld sahf clc enter and sbb xchg adc out in ds mov cmp jl in push mov test sub add (bad) mov inc and push roll add push and loope and push loopne (bad) enter sti mov or out movsl cmp pop sub mov cmpsb xor dec inc jmp xchg and out sub jle lods in dec add inc jmp lock retw push jbe inc pop inc arpl inc ss xor adc out test xchg ja xchg cld inc add jmp push call push mov inc push xor push cli ret ret leave jmp std orb sub lret mov push fisub adc shll rorb inc cmp push jl jne cmp push jmp shrl int cmp imulb fdivs mov fnstenv imul fsubrs inc add adc out outsl loop adc jne mov pop mov (bad) out inc and dec insb addl add cmc mov iret aad les popf xor pop out fxch stos jns mov xchg and adc pop lods data16 jg or inc dec test xchg cmc xchg push sahf mov cltd loope jne pushf pusha mov (bad) ja (bad) aas out inc fcoms or mov xchg jne lea mov lcall sbb adc jne adc addr16 xchg dec push mov dec sbb push push call push movsl jmp xchg and ja dec sub cmp xchg cld pop mov cmp xchg push loopne call add adc push mov cmp pop adcb andl inc push fsubrs movsl pextrw mov and jne push and repz push je in cmc xor push cmp aaa pcmpeqb push jne js mov and incl dec cmp and jb sub pop or popf dec mov mov (bad) imull adc repz xlat mov jo xchg call push scas mov cs ljmp cmp js xchg xor pop push push inc push scas repnz or pop scas or rclb pop push adc jmp sbb pop push push mov jg mov cmp ret push sub xchg xchg pop in sbb bound das out test push gs sub aad stos push outsl (bad) push push mov cmp sub push sbb test sub cmpsb clc and inc push fnop std icebp fcomip inc sub leave mov lret sbb pop and mov enter sub leave push mov leave and mov ja and aas mov scas inc hlt cmp sub les lcall dec push push nop inc mov inc rorl adc or inc and mov or js mov add cmp call lea sub push xchg jp xchg push daa mov sbb dec inc in adc xor daa ljmp call test je enter push push imul sbb or mov cmp mov jb mov dec out mov std call adc jno xchg sub adc push jns push add outsb cmp xchg xchg and xor das sub sbb and enter dec iret nop and mov or (bad) inc icebp movsl fs xor mov xchg push push inc add pop and sub mov pop cs inc lds pop xor xor push dec das dec push cmc mov or pop pop sti (bad) lcall push cmp adc xchg cmc push je vmread leave add fdivs xor mov (bad) xor jne push or pop add test or mov or mov xchg and cmp pop shrl push pushw lahf vpunpckhbw jl dec sar adc sub mov cltd stc cmp xor adc cli xor or test fwait mov sub push dec pushf sub adc dec sbb xor or xor mov std inc and push lea mov and sbb (bad) and sub (bad) sbb add dec in jb cli mov roll insb loop sbb fimull jno (bad) shll pminub bound xor jo mov (bad) je (bad) scas sub in jo jb call mov adc push aam and push adc jmp or pushf jno ja movlps mov adc or adc mov adc or adc xor xor les xor data16 div cmp mov sbb cmpsl jmp xchg iret rcll mov fsqrt roll and sti xchg out in xor or cmp push inc addr16 add cmp jp and push mov sbb out inc hlt repz jne imul cmp sbb sbb cs and cmp mov loop (bad) repnz pop and mov push or movb inc imul adc mov sarb dec jge push je inc inc cmp testl out mov hlt mov orb dec xchg mov dec pop (bad) (bad) push fadd rcr scas daa mov test lea adc (bad) in mov dec jg jb mov lret dec jno xchg nop dec sbb cmp cltd inc mov push push nop fildl mov push or es sbb push sub sbb sub jne push dec insl inc icebp mov inc inc cltd fadds adc add cmp cmp add adc cmpl xchg sbb push je jmp adc jb jb adc xchg jmp jmp mov sub jmp inc inc out aas testl inc jmp test popf xchg loope push adc roll int3 mov sbb push sub sahf mov repnz in inc addl and or or or cmp xchg (bad) dec movsb pop mov dec repz add cwtl xor mov je and rorl push xchg adc stos scas jb stos and popf adc aad sub inc mov xorl fadds xorb xchg jno ja sarl sbb jne jl xchg mov or test jb pusha and mov and sahf jne push cmp (bad) cmp hlt les (bad) jb je cwtl movsb lahf pushf lahf in sub mov adc mov popa jle ret mov or mov je sti or adc or fwait test test jecxz (bad) mov sub add cltd cmp in mov pop fninit inc sub mov cmpl jle in sahf and pop call decl jmp loop push cmc push outsb and push call jb push adc lods and mov jmp push (bad) lret testb mov lret jnp (bad) jge and cmpsb cmp out cwtl notl and xchg cmpsl loop data16 push call daa clc insb push in cs enter push int3 (bad) pushf idivb push loopne pop cmp jg rol mov test in adc xor fsubl sub test push push bound (bad) daa test ja cltd arpl inc fwait sub in andl xor and lock add (bad) pushf xchg popf xor inc inc jbe jb ret mov sbb jne andl fisubr push xlat leave jg pop pushf cmp or push adc test call mov push fwait pop inc xor imul nop jp (bad) and add enter lock and sbb jle or jmp and popa or jle sub mov jae xor adc mov lods bound xor out inc jecxz sahf in imul call in push mov ret mov cmpsl sub cmp pop mov push sub push add sti and mov movsl mov push sub sub mov push xchg test mov add fldl sub lock lret inc fimul sbb mov and xchg jecxz dec mov mov movsl data16 pushf cld gs dec dec adc dec mov sbb sarl decl jge inc add imul daa and mov jnp dec bsf and sub or enter push mov fdivs push push mov jmp lcall push adc (bad) leave ljmp inc cmp xchg mov push gs push mov daa sbb dec ss cwtl test push in add mov push sbb pop xor push mov pop or leave inc fcmovbe and inc push pop push rcr pop pop imul inc inc xor xchg or and sbb dec dec add cli mov push mov insl push push inc dec pop fnsave dec adc (bad) jne dec pop inc sbb lcall sbb push imul fwait mov notl sub add mov adcl dec mov push push dec mov cli and xor push lea push pop xlat inc inc imul cmpsb push and insl push or imul jle inc call xor test into push sbb cmp and cvtps2pd jo cmp fnstsw mov pushl or fnop push lods mov push fs mov cmp push jb fisttpl daa push lock popf adc cmp xor cltd clc ret clc add ds xchg xchg xor pop sbb and les xor inc mov sub inc fldt mov cmp and mov xchg mov mov inc (bad) adc and jmp negl cmp cmp pop je mov sub cmp pop scas aas (bad) movnti mov pop daa push cmp hlt enter push data16 sub inc add mov mov imul jae xor pop bnd popf mov insb and and dec pop iret mov sahf xor (bad) decl jl xchg inc js xor dec push imul pushf outsb insb mov mov inc mov sub cmpsb add push sbb push adc loopne xor jmp sbb popf mov inc cmp sub adc sbb dec add mov or pop push adc sub inc xchg pop aas (bad) dec push pop cltd mov repnz push or in popf jno add pop stc mov dec leave cmp add pop push xor or add mov inc adc jne movsb shr arpl pop fstp dec in add and and cmp adc (bad) clc inc pop popf xchg mov les incb adc dec jbe nop add movsb icebp push push call sbb adc cmpsb and cli inc or stc aad mov xor sti lret mov jb fdivr leave call (bad) push mov push imul leave xchg sub add es inc inc xchg sub lds xlat push add mov add xchg push mov jae pushl push xor and fdivs jne cmpsb pop popa push ss ds fwait pop sbb xor (bad) xor fist pop rcl push (bad) jae cmp mov and inc xchg cwtl pop cmp aaa cmp mov pop rorb mov (bad) mov pop ret lcall stc xor adc mov push movsb sbb leave sbb push or push push fisub adc add and lds pusha decl xchg pop cwtl xor fldenv adc enter int3 jle movb daa add sub adc cmp mov sub xchg insb sbbl jmp dec xchg mov subb cs aaa jno or and jmp sbb test or or cmp push les mov adc leave int cmp lds lea inc inc (bad) lock mov jmp pop (bad) xor mov mov bound and xor jns jb xchg and or add (bad) xchg inc cltd (bad) and repz dec mov pusha fldcw fs lock leave jbe je jno or pop pop sub jne xor or fcoml nop int or fdiv inc mov ja and inc add pop es or and icebp hlt call pop cmp jnp popf adc imul data16 push (bad) pop repnz and cmp jne adc pop enter or in jmp push xor inc arpl pop jne mov push push je mov adc test jne stos push sbb int lods push adcl out cltd iret push jge adc stc xchg cld add jne xor outsl arpl enter leave inc jle push test dec loop cmpsb xor je cli rorl out push push pop lods sub push and mov adc sbb or jmp repz (bad) sbb cmp fimul inc xor daa test xchg inc ror add push push jecxz push or imul test mov pop hlt and adc scas xor push faddl dec mov das mov into or inc push push inc flds nop push or pop xchg cmp xchg cld jb push (bad) loop sbb ljmp out add xchg mov fucomip into mov fidivr sub das mov sti shll mov and addr16 pop or and rolb ljmp stos jmp (bad) sub cmp mov jno xchg lcall and sbb and das ficoml adc cmp sbb sbb jae in movsl mov xlat sbb mov fstl fwait pop pusha das push mov or lret cmc das (bad) aad lock pop pop rorl test sbb xor push (bad) stc enter or mov xor sub movsl adc call mov daa dec cmp jmp mov dec push je (bad) or push xchg lret dec mov inc xor std inc mov and push gs mov int3 inc or push sbb jge xor pop xchg inc sub lock sbb movsb and push fsubrs xlat test adc xor add mov loop sbb add (bad) xor mov cmp mov dec nop pop mov (bad) xor pop mov movsl cmpsb pop sbb inc inc and inc xor mov stos insl inc inc mov ficom xor mov scas xchg cmp pop and dec fwait pusha xor icebp cmpsb and and popa test push mov shr aad and add sub mov repnz mov insl mov jo and mov call out in (bad) xchg pop pop xchg leave dec enter xchg inc mov sbb aam es int3 and je int3 roll add or mov lret push ja rol xor push jae mov loop push inc and out mov sahf pop loop xchg push iret sub out pop ja rolb out lahf fs leave js inc adc call ret sahf das push andb rolb lahf inc inc loop rcll andb cmpsb cmpsb fs and jb push hlt dec jb aaa xchg cmp push les rcrl dec incb xor inc adc cmp inc ja or outsb jp sub retw jmp lods add inc push and push loopne rolb cmp sub arpl insl pushl add cmp mov sub inc xor dec and sub push and sub add jmp inc bnd sbb lahf imul mov pop out xchg jns mov scas xor pop cmp ret or jge lods in push mov sub push inc sarb sbb push negb ljmp fs pusha mov push and or adc sbb push push dec push and call (bad) sbb jns cmp pusha sahf sub and adc mov (bad) fld inc push dec cmc stos fs mov push mov fmuls pusha and cld call pop gs and sbb pop inc mov push movsb movb loop shr and das cmp fcomps pandn jecxz add lret push add (bad) mov je adc xchg jns imul cld shl push fs decl fsubr add into sub ds andl gs ja js nop fs and fdivrs add cmpsb sbb aaa rcll pop add xchg out xor mov jmp pop sub dec push mov sub mov (bad) inc jmp mov aam and mov jne lods imul std inc jb mov outsb decb xlat pop (bad) jecxz fs mov mov push dec (bad) add sub push ror and je mov cmp cld mov loop add or pop dec jle inc xor sbb cmp or or fs or outsb in pop add add add add push jg pop push and test pop push pop scas and add outsl (bad) iret inc pop adc inc mov daa xchg pop and add aas int3 sub inc aas sub ja je ljmp pop adc adc mov (bad) lret push (bad) fnstcw add rcl scas adc std or int add je sbb outsl sbb insb inc rorb mov inc adc in xchg inc je loope sub xor xor push mov pop mov pop cmpsl sbb pop mov cli jns add (bad) mov xor adc loop das data16 jp (bad) xor or aam or bound adcb or xchg movl cmpsb or and push jge iret push dec leave or jp inc clc jns push push cld or jp ret (bad) dec jbe xchg ret cld inc hlt cli fs les inc adc mov jne add and and sbb fadds jo jnp and push push xchg xor xchg jecxz cltd cmc and add add add rorb sub loop lret sub arpl mov sub daa insl jp imul xor lea inc dec cs push and pop dec and aad push inc inc xor mov sarb fs push lods add xor cld push push repz adc leave push adc and or push pop fs lock movsb pop sub sbb jne std call inc inc pop lcall mov call push mov mov push mov lods (bad) rcr pop test pop fs mov icebp popf fcompl lods jbe sbb rorl push push mov xchg nop mov jecxz jnp enter push or ret push ret mov into mov repnz cmp adcb or push dec mov stc push (bad) pop mov subb push iret ljmp xchg movl mov hlt test dec cmpsb xchg ret sub lahf mov enter mov fmul jge xchg mov sbb mov lahf push jle pop sti cwtl sbb loopne popf cld jle std xchg shl xchg or stos dec cmp xor xchg sbb loopne push hlt lea push jno mov adc inc push movsb mov gs xchg jl sub stc push call (bad) mov lret scas daa xor scas enter fcoms das add fsubrs push ret call fdivs adc sub dec std inc nop je jle aam mov inc (bad) adc mov test in adcb adc mov loop mov and xchg in lods or je pop addr16 mov sub lock dec mov push push lea xchg adc (bad) and xlat call adc push mulb cli shlb dec stos mov les mov mov dec pusha mov imul mov cmp roll les jb sbb imul mov jbe cmp or mov push push push inc decb int mov adc pop mov xchg add dec mov dec in push add sub push push and dec pop outsb pop fstpt cmp mov pushf or or push inc sbb pusha mov jge pop and (bad) mov adc dec popa sub sbb lea mov idivl std in scas adc popa and mov (bad) lods mov sarl shll pop in add int pop adc mov dec repz sarl ret fcomps add ja ret push mov jl pop and push push daa int mov in cmp pop sub or sbb sub jp cltd jle aas mov cmp sub add fcmovbe adc test push cmp lret add dec test enter push fist cli in mov jnp mov push add mov add cmp xchg sbb sub xchg outsb push dec aad sbb mov (bad) fwait adc push or adc insb xor or dec inc inc mov push xchg pop pop mov js insl jo test sub fild andw jmp popa mov mov rcrb lret imul adc mov dec mov add and dec js xor call mov insl (bad) xor std jmp sahf loop mov mov out add or pop sub ss adc test test cmp jb fs nop push and fsubrl jg fdivs sahf sti das test test imul ds mov into pop adc lock or adc sub fdivs cmp pop mov sbb inc sbb movsb outsl jne das push insl xchg sbb dec xor clc out jno jbe add adc pop fild sbb repnz jae or dec adc pop lods fwait or or jecxz daa movb (bad) push leave inc adc stos fisttpll xchg xchg shll push and push repz jno notb push popa xchg jo (bad) cmpsb cmp (bad) cmp jl adc adc imul dec dec inc call ficompl or push scas shll sub add xchg arpl or out or lea pop stc sti sub xor movsl xchg lea mov sbb js rclb and mov xor cld mov pop xchg adc xchg xor or or adc jne inc inc arpl cli sti (bad) xor fcomps push adc pusha and inc cmp (bad) jae push (bad) icebp nop fnstcw mov or adc and mov mov pop push repnz adc adc cmp pop sub test push nop out push adc dec dec inc cmpsl jp add mov pusha dec cs mov dec sub inc or repnz push insl cmpl loopne andl sbb add push pushl out sub and mov pop mov sub int3 decb xchg gs xchg pop mov push or sbb and dec fmul movsl frstor inc lcall mov icebp adc rclb cmpsb cmpsb dec pop adc test push test call (bad) sbb jae dec mov or xchg mov mov sbb sub inc sbb sbb pop xchg fsubs push adc jae mov dec mov push xor dec adc fs inc adc push out nop xorl pop adc fsubrl inc jle and push inc or push or jecxz and call mov nop mov bound lea push lcall (bad) xor sub imul and sahf (bad) (bad) scas (bad) xchg js outsl push adc mov arpl pop cmp and xchg rorl push mov dec movsl xchg rorl ret push in daa mov cwtl lods es jns adc sbb mov dec mov cltd cmp or or call ficoml daa mov repz dec inc push pop lahf mov adc lahf fiaddl orl mov int orl or and pop mov aas add push in adc rcll sahf inc in dec mov adc adc sbb xor add faddl mov das push mov test je push sbb movsb pop sbb dec call and mov mov add adc inc mov xchg out in mov mov adc fs dec je fs sub loop rcll in fadd add cmpsb dec push xchg adc cmp mov shr push aas and inc push adc ds adc ljmp leave pop sub jbe sti call pop jg leave add ret ja inc push xchg (bad) cmp shll pop rorl or mov push fdivl (bad) mov andl xchg popa pop push bound and push or pushf inc inc push adc aas call (bad) dec adc pop xchg pop and cmp js or push cli adc mov addr16 mov das leave push or or push dec iret test and adc jmp xor pop push mov xlat dec test loopne stos jo sbbl mov push dec adcl outsl jb pop adc xor add (bad) je push mov add das rclb (bad) adc dec and sub cmpsb repz xchg sub outsb dec jmp sbb cmp and sbb push xchg inc cltd mov loopne inc test or cmpsl cmpl or rcrb xchg scas jo rolb aaa and mov jae push decl pop rorb shrb inc jns push daa mov ds push mov or push mov fnstenv mov nop int3 xchg call mov ret mov and pop cmp xchg dec out das cmp add push sbb adc ljmp mov push out adc (bad) dec int3 xor mov mov pop mov sbb int3 sub or imulb (bad) rorb xchg jo fucomp jo and push bound (bad) rorl cmp insb adc je,pn mov mov and push insl and push nop jo imul es dec es and es mov mov xchg cmp and lret incb mov pusha sub les cmpsb ficompl jno mov and frstor dec sub jo fwait add and push dec adc stc cmpl ja cld inc dec inc lcall out and pop inc inc fnstenv negb je cmpw push inc movsl mov sbb or xor or pop roll jne sti xchg xchg cmp aad mov or inc cmpsl and out ret lods fisttpll test cmp sub adc mov cs aam xlat dec inc xchg mov and and loop daa or and inc stc mov add das sbb adc and pop cs mov add add or or lret or mov loop adc inc ds push inc add lea pusha (bad) mov or test enter inc daa jmp and loope into inc jno or daa jmp cmp and movl loop (bad) mov cwtl pop out sahf data16 xor jg lea out xchg aas and xchg jne (bad) pop popa cmpsb ja jl jno mov add pop mov in inc sar mov adcl out or push aas pop xor sub cmp mov add cmp jne xor (bad) aaa push movsl sbb inc add or sub fs jecxz and inc and jns addr16 call je inc bound xor or mov icebp iret icebp daa sahf sbb dec je incl loope clc xor jmp inc (bad) push loop jp and inc jae adc jne push xlat adcl and and inc jne in or call push dec jo push mov jae sub and xchg in cmp je dec sahf sbb outsl push cld fs push sub pop (bad) in mov pop dec pusha (bad) push mov inc fldt jecxz xor imul (bad) out shlb mov cmpsl into mov clc lds dec or (bad) lock (bad) incb push inc cmp jle and mov jnp mov fdivrs add jo pop cmp in mov (bad) out mov mov push adc test cltd xor mov in fidiv or ja jmp out int insl subl add cmc nop daa sub mov pop (bad) and aam adc sub mov jne stos pushf (bad) repnz inc aad fcompl jmp lock inc adc icebp dec mov sub dec xor (bad) aaa mov sub xchg mov pop xor cmp cmp mov mov add add sbb pop mov test sbb dec mov or shrl stc ds test test lock test mov insl dec cmp pusha ljmp and ret adc pop cmpsl ds push xor lea push push movsb stc mov stos scas leave mov dec jle sbb inc jbe in and imul jecxz orl sbb test lods rcl (bad) shr push loope dec es enter int3 lods ret int3 inc dec mov movsl lahf gs daa loop icebp mov in xchg (bad) cmp test sbb clc pusha bound imul adc push xor xor cli add mov xorl (bad) (bad) ficoml fdivs in and jno ss mov dec call lods sbb aam bound inc cld pushf inc jmp out or adc jmp adc xor jl adc sub ret and int and or lcall mov and mov out push adc gs xor jbe insl call and daa pop movsl les cld pop and in sub scas lock stos pop lods sbb adc or mov enter or xor jne js mov mov fs ret out bound adc in imul std mov je addr16 add adc sub cmp ret push rclb es lods pusha and mov inc mov mov clc cmp cmp lahf inc and loop imul pop inc test dec push out xchg out sbb xor inc inc mov inc sub (bad) into adc adc dec ud1 lret jle das mov inc lds push xlat cmp sbb adc mov les xchg andb add jge ret mov mov and sub jg add dec ljmp rclb cli mov pop lock cwtl mov fs sbb mov push mov aam xchg inc or pop push dec dec jo jmp call and mov (bad) or sbb push jne jl (bad) jmp aaa jle sub xor push fmull jnp dec pop lods lea xor dec jne cmp mov or mov push jbe leave stos stos jmp pop test icebp pusha cmp adc mov jmp js gs and jle adc sub popf jnp sub cmp sub stos loopne inc sub cld call icebp pop cmp rorb pop sbb cmpb aas js dec fnstcw dec mov adc adc cmpl cmpsl sub mov and in pop inc inc scas inc cmp test fsubrl (bad) repz fsubr and test ret push xor sub jns cwtl or and push pop call lcall dec lods test nop push aam fcomps popf lahf (bad) in fxtract in (bad) fsub clc lret push cld sarl pop mov adc (bad) pop xchg test push sub cmp pop mov movl in jmp les pop pop or sbb and push lahf push ficom push or sub jnp inc push adc xchg mov aam mov sbb or popf add cmp cmp inc rorl and ret sbb adc or ja jp dec frstor (bad) or push xchg and sbb jbe cmp in jecxz cmp cli shlb pop int3 sub jbe inc mov fstpt sbb es cmp rcrl xlat fcoml or push push hlt insl pushf roll mov push dec and xor dec lret sub leave jg pop insl jmp fwait out pop push sub ja test rclb pop (bad) int3 dec sbb mov inc sbb cs aaa sbb mov inc push pop rorb sub pop xor and fldl fdiv (bad) dec test pop inc aad and xchg rcll dec xchg dec mov push push sbb xchg leave xchg outsb hlt sbb nop xorl push imul sbb (bad) cmp push dec (bad) leave mov cmp les or jne pop xchg in jmp xor adc xchg pop enter fbld lcall sbb fnstenv inc adc adc push mov roll inc ficomp adc xchg pop pop push enter pop insl cmpsb xor xchg pop cwtl sub pop call push dec add out into xchg sbb pushf sbb es pusha aad dec es adc in add xchg push xchg ja fsts addb les (bad) pop mov out shr xlat xchg push lret jmp sub mov rorl add or (bad) jle leave fwait push push pusha insb jle lods test test add mov mov pop mov mov dec sarb ds jne pop adc dec xor xchg sbb jmp mov add (bad) fiaddl push out sahf cwtl xchg (bad) test or mov int3 (bad) leave and adc mov inc xchg es call adc mov dec adc dec mov mov (bad) inc (bad) ds push adc mov lahf xor lds movsl push in mov pop add es cld mov xchg add add cltd pop push call pop fadd push adc mov xor cld lret add and sbb inc xor push inc pusha loope dec (bad) test std popf movsb mov lcall cli pop pop dec out dec push jne sbbb lcall lds sub sbb test mov or adc movsb fldl cmp push xchg mov push pusha enter imul loope xchg pop inc insb cwtl mov inc inc call mov mov xchg pop bound sub cmp mov xor aad aaa or push inc push mov pop or mov stc jnp add sub outsb bound pop push ds push xchg pop and sub mov scas leave cld (bad) xchg js push sub sbb mov push dec mov sbb cld sarl mov or ja fiaddl dec dec add mov fdivl loop fmuls pop clc movsl inc leave lcall or lock mov out or in loope,pt mov leave mov out lahf xchg mov inc cmpsl (bad) xor hlt call cmpsb cmp mov push sahf inc push xchg pushf test dec lea lods imul cld and enter outsl les add lock pop or add adc sub jo mov mov insb xchg jne lock push je push or inc xchg mov negl or mov inc or lock and in aaa mov xchg mov push xor inc xorl sbb mov insb push dec cmp leave pop repnz push das dec inc inc mov mov xchg testl mov xor adc cmpl or cmp mov ret push sbb icebp inc push add div dec or adc or rorb cltd fwait arpl pop repz and xchg xchg lock (bad) dec out or mov adc test adc mov mov sahf and les addr16 mov or inc mov cmp ret aas pop add push push mov sbb dec and xchg jbe adc sub lock test push jl xor add and sbb xor push or or in cwtl repnz push arpl jmp ds rol movswl shll sub shrb jo (bad) or xchg and or pop xor call insb addb or mov pop pop add jne cmp ljmp xor pop jg dec sbb and test test jge (bad) (bad) je mov lret cmp fwait jmp jns cmpsl mov jae ficomp dec or jmp (bad) xor shrb inc lcall cmp push xor push or addr16 es jle imul pop adc mov test inc clc pop call ljmp xor xchg ljmp and jns sbb inc mov repz pusha sub sbb xor aam pop pusha push xor adc or cmp push or loope std xor sti mov adc rorl notl sbb test xor inc shll pop push pop mov jmp mov jnp lods and mov xor sbb inc pop xor pop xorb dec or call dec add mov inc lret rcll loopne lods push fs out mov (bad) jmp (bad) jbe xor loop jns or push je rcr xchg jo inc ficompl add jmp dec aam add out add daa cwtl (bad) movzwl adc jb dec push inc cmp daa call dec and mov or and jmp mov lret dec int jecxz icebp and add mov jmp fs enter stc sub mov push in xor fucomi rsm iret and insl or icebp out push or push sub mov jl enter push jmp mov xchg imul inc push dec mov ja fldl mov lret push mov inc std xlat test jae jmp inc push bound cmpsb pop jno cmc and sbb push sahf inc and mov repz out dec iret jne inc inc mov xor test addr16 sub push push cmp or fnsave adc xlat sbb or adc ret dec sti mov aaa adc sbb and cmp enter cmp push adc add adc (bad) xchg popf xor dec rcll decl inc cmp pop inc test pop inc sub push adc dec push roll test xor adc movsl xchg xchg xor pusha and push xchg shl pop add push and sbb (bad) xchg sub inc add loope add mov xchg sub out pushf add xor rolb loopne cmp aam mov adc and jge and or dec cld je pop xor xor xor mov cmp data16 jle push je out mov pop mov int int3 aam add (bad) dec push sub lods xlat push stos (bad) jne jb and or in xchg dec push xchg mov push push and das dec pop add or leave int3 xor jno and pushf iret not clc dec scas dec xchg xchg adc inc sbb cmp into test ljmp mov shrb fisttp push fucom push and or insb or das daa add jmp std mov push inc je mov push cli (bad) jle mov add mov push movsb insb jl add int pop roll icebp movsb nop push test mov lcall mov adc push and (bad) xchg pop test (bad) test leave push push out call std lock mov cs mov xor sarb lret aas fildll (bad) ffree pop call xor mov or cmp rorl sub popf cmp jo cmp and jb push push dec aas sub jo sbb outsl out aad sar jno jge xchg push push dec (bad) mov xchg cld adc cltd test mov dec mov sub and stos mov lods push pop out sub dec adc xchg add dec (bad) cmc sbb cs xor nop popa push or sub ffreep lock jne cmp test and xchg push push push and and test ja pop xor push stc rorb adc insb pop or bound pop sub push daa lcall pop pop push push xchg adc xor push dec mov test cmp pushf call aam mov mov out dec addr16 and call mov cmp cmp stos lods cmc mov fadd dec push mov in jb or shrl xchg mov xlat cld sti push sbb inc add iret jns insl push add ret insb je add (bad) in xchg das jbe or or jge add stos mov das xor roll sub stos and dec adc adc cmp push or fs xor sub push (bad) (bad) into pop dec push cmp jbe (bad) jbe adc add iret adc daa push bound lock jmp cmp loopne sub loop push jge mov loop push stc pop loop imul sub pop enter lcall add mov sti push in mov mov or pushf imulb sbb pop popf inc out notl lahf dec mov (bad) shrb jb dec repz stc clc (bad) jne imul jp and adc sub push call inc inc sbb sub rolb lret pop adc xchg popa test cld bnd add xor mov adc push mov adc dec dec je repnz test pusha cwtl inc push and add fnstcw sub cli jmp dec rorb xor sbb fwait (bad) sbb dec lret jo daa jo push add daa pushf or hlt lods push inc das iret inc test jl pusha push xlat dec xlat roll sub adc sbb mov shrb nop out shr dec int cmp cmp xchg ja shlb cmpsb rorb xchg mov cli dec mov xchg movl mov rclb test or cltd sti xchg xor fmuls sbb (bad) nop (bad) mov iret push jmp cmpsl (bad) cmp in insb (bad) and push arpl inc sbb push jmp fisttpll in adc call clc (bad) loop xchg push popf jl fsts sub in dec loope dec add adc jbe pop pop mov repz sub mov popf (bad) xchg adc aam jns xor or adc mov cltd push iret push xchg adc dec or jbe,pn cmp in pop adc lods cmp lret pop (bad) les or out gs out adc lods or xchg mov and imul mov in jmp push aad outsb xchg jae push mov icebp jb jge test xchg cld dec sbb or test mov or mov popa push xor inc push ja shll jae jns push lods movsl ret mov stos aaa pop rcr pop inc jne jle mov adc jecxz popf mov cbtw (bad) cld popa xchg or bound mov jmp (bad) iret incl or pusha push jmp pop sbb (bad) rcl sbb or xchg jns in decb enter subl test cmp or sbb test and call mov push decl mov or sbb pop mov jmp cli (bad) xchg or adc push inc adc pop repnz mov push imul cmp pop pop pushf mov lahf fdivs imul mov pop jge add sub loop in arpl sub fstl stc xchg clc into sbb inc int3 add ret psrlw jnp dec cmp das jge cmp mov ds add psubb sub xchg out jl ss aaa or jmp mov jle sbb sub ds push adc push jo xchg (bad) sbb outsb xor test in (bad) je call aaa adc out pop sahf lods mov divl jo sbb dec sub push inc pushf push sub ftst sub jne movsb ret insb jmp and mov jmp andb sbb push (bad) or xchg cwtl mov push (bad) je adc mov jne xor inc add sbb orl decl nop enter stos (bad) insl loopne jle jmp arpl je bound jne lock push rorl xchg xlat and lods repnz push das or inc test iret adc inc outsb and mov leave ret inc sub and xchg pop mov or push sbb mov xor test ja push ret pop sbb dec popa mov lahf lods fidivrl dec rcrb jl sub imul lods mov orl data16 test xchg xchg jb dec xor push add adc fxch sub mov mov sub dec fucomp push sbb mov jl pusha adc push push xchg sub pop gs add cwtl or push xchg jp xor mov call out dec mov dec ja or or jne les imul imul or lea out xor push lahf xlat loopne jmp push pop dec ja cmpsb data16 sub adc inc and loopne pop push push mov sub test nop adc out jns xchg lds mov js push iret cmpsl std xchg mov ljmp or push std mov mov mov or jg pop incl sub push or and push negl dec das cwtl clc fimul push push xor clc je ret jecxz mov and jp xor xor pop imul sbb ljmp or data16 mov aam scas dec loopne call outsb loope not and adc xor add lret (bad) cmc sahf int3 sbb call lods jecxz mov or mov pop imulb add fsubl pop pop in mov mov (bad) lret push or add adc push movsb sahf call cltd rcrb in sbbb int3 mov and into inc and repnz cmp mov ljmp add pushf jp js data16 dec push dec imul data16 pusha es pop mov adc push dec pushf in cmpsb arpl push cmp movsl inc out sbb push popa sub mov pop inc or inc push or rolb je cmp and lods inc fadds xorb out pop stc clc push add fisttp mov clc call les ss inc and out mov bound cmp (bad) in popf mov mov jge push or inc lods cmp add (bad) cltd sbb adc inc stos fnstcw pop cltd sbb sbb and aam call jl mov or adc jno sbb push clc and cmp xor mov shlb or scas sub or les sub add mov add std outsb imul das mov movsl mov mov cmp lods roll shlb push xchg in inc fnsave dec mov pop loopne ret rcrl add pop add xor xlat and inc xor lea mov xor or add and hlt in jl das setb (bad) std fsts pop insb xchg inc xor pop jg sub jae push popa lret jbe call fbstp add call inc cmp pop sahf (bad) enter dec and insb inc inc mov sarb inc or lock pop shrl ret pop sub sbb in test mov int clc mov jmp sub xchg xchg arpl pop xchg or sub mov add inc js push adc mov adc out adc out mov adc xchg mov mov loop sbb movsb push inc adc loop xor adc in bound or (bad) dec cmpsl inc ret cmp pop cmc in xchg js enter adc (bad) mov cmpsb cs xchg xchg mov push dec adc sarb push or out pop repnz ret das mov and lcall sbb popa stos sbb iret push dec mov dec mov pop das je push cld mov loopne xchg clc add ja je dec popl mov or inc and jge,pt or fdivrp dec jne inc sbb insl pushl test jmp inc xchg push jecxz adc inc adc sub sbb mov sbb loopne nop push adc add repz sub cmp imul pusha push pop xor cmp test ret cli inc sub out addr16 loope jg mov test fidivrl (bad) clc cmpsb add and pop mov push and xlat mov push std sub gs (bad) iret in das vpaddsw pop push sub push pop xor ljmp dec mov testb push daa cmp add xor data16 pop gs cli mov popf push mov iret call pop sbb xchg jno pop inc ljmp aas mov gs inc fdivs mov mov push in xchg sbb rcrl adc sbb loope loop inc (bad) ss in inc jo push mov xor push call lods ds mul lret dec dec add rolb xchg mov cs adc sbb adc push mov or fadds cmp out sub repz xor mov mov cmp (bad) pop daa add cmpsb xor scas inc or scas fcmovu jo imul push pop or call daa stc negb pop sbb es and fnstcw fabs std mov add or push test mov and push pop adc push sub or mov bound lahf imul push xchg rcll lods xchg or stc ret sub or jge adc mov add add or and or and sbb push adc cmp mov xlat jl or out sub sbb pop mov add (bad) push setne push xchg inc mov xor xor add cmp mov lds push push and pop pop clc test inc faddl lret xchg loopne hlt add sti (bad) or xor push rcrl mov dec dec lret and vmwrite repnz jo mov jnp or mov xor push mov adc xor rcll jne lds jge cmp or cmpl jl mov js dec push out and lds out xor push cli xor es jmp adc inc nop push mov test outsl push insb gs adc popa dec stos sub inc dec push or push bound push and bound adc dec addb adc push mov adc push test mov mov and pop mov movsl icebp dec movsl dec in jne lods out add push cmp jg aam loopne add mov pop mov roll adc mov add lea rcr decb jg cmp andb mov scas (bad) jbe lds or test push and vmresume cmp push xchg imul lahf fsub ds call add lea cmp dec pop rorl mov call int popa cmpl in je in lods dec sti les fcoml stc (bad) aaa cwtl mov hlt add and cmc test and pop and icebp lcall jg cmp cld xor popf bound jb imul in pop cmpsb sbb test mov ret test jg jo aad out jmp push sub test pop xor leave mov shrl dec xchg dec jns xor sub loope dec cmpb sub cmp je sbbl pop jge adc mov and push jp mov mov push bound jmp dec fcoms mov mov sbb adc adc push icebp lea pop aam add mov sub sbb fldenv loop adc iret sbb adc dec popa mov decb clc pop adc cmp mov push add mov mov lcall push cmp xchg or push (bad) lods (bad) (bad) testb bound pushf adcl iret jge out rcll arpl cld and push inc les push push and je mov cmp and les xchg nop xchg ss xchg mov pop jp rcl or iret mov jg or push into out pop adcl dec add add cltd repnz or in mov mov aaa xor push enter add dec lock adcl push mov sbb sbb push pop mov adc into inc je sbb lods es xor daa nop inc out enter ret or adc push or imul dec popf out lea sub cld push gs std mov inc out dec cmp jno int ja int3 mov lea push push mov test jmp jecxz add cltd movsb sbb pop fstpl setl pop cli popf outsb sub scas sbb sbb test outsb enter xchg and add add jo inc cwtl dec dec or call fs js aaa movsb push sarl cmp lcall push jg add mov mov pop ror adc gs pop sub mov jnp xchg and negb test mov enter cmc sbb pop mov gs xor cltd pop xor or xchg popf lahf push xchg test in es cmp and ret push sti push and aam scas add sub outsb xor add sarb and pusha movsl sub imul xlat shl xchg pop ss push jae push pcmpgtb adc lods dec add xor jp dec ret stc nop mov cmp sbb mov dec xchg sbb inc lret rorl clc cmp cwtl outsl ljmp jno je adc sbb daa pusha jp das inc fs mov lods lock jne cmp push jg jns mov std lcall mov arpl lret jbe jbe push ja les pusha div push push push rcrl loopne sbb and std push or xchg xor jge or outsb sbb ret xchg mov cmp xchg or call xchg inc arpl sbb xlat push xor dec rclb (bad) stos (bad) ja mov xchg mov mov xor jmp (bad) jmp sub in dec cmp inc or xchg mov clc and fs stos sbb lods iret adc and adc cmp sbb lret ja push inc add out jae push loop mov and ss popa in xor (bad) add call mov mov or add mov jmp decl test or mov adc stos loope cmc mov (bad) pop je mov lret inc test rclb pop cli movsl shl cltd and jnp enter fstl popa data16 pop lret stc shrb pop inc loop jno adc cltd adc lods rolb mov mov sub sub enter leave mov andb call push mov (bad) xor and xor sbb jo mov add jmp js inc jns aaa sbbl xchg std mov cltd adc mov mov adc (bad) les and test sub ret je xchg add push inc jmp or (bad) sbb xor mov mov fsubr cwtl iret inc cmp pop push mov jbe xchg cli pop cwtl sahf dec xor sti mov xchg pop out sbb jno sbb mov or lahf jg das cmp in clc xor int inc dec ljmp xor jmp les pop or js lock push and inc neg and pop push push xor fadds (bad) jne pop add orl inc xchg add push imul xchg pop nop dec push mov cmpsb or adc adc js or stos imul imul insb push lea xchg jmp pop pushf mov cmpl dec popa inc arpl jne inc mov jmp push ret mov call inc cmp push jb sbb std repnz or hlt std inc adc xchg stc ja mov and call (bad) std repnz into sub incl scas insl shr nop jb pop inc mov js sbb xchg dec ljmp in imul mov push mov jg test lea mov mov xchg sarl and push test ficompl sbb test fistl mov xchg cmp push xchg je cld fnsave ficoml jg push pop mov sub pop mov and xor jmp addr16 dec cmpsl inc dec mov or imul sahf (bad) mov push sbb (bad) (bad) out xchg test cld lea jle lods jl push stos daa sbb pop andl sahf gs cmp mov cwtl cld cmp nop push mov and push shlb and mov int3 or mov pop push jmp out pop mov icebp rorl inc push cmp push insl clc jb (bad) cmc push pop (bad) cmp jae mov cmpw out cmp add ss adc xlat xchg push mov sbb in push daa push repz sbb jo pushf imul jmp dec or xchg or push sub (bad) sub fsubl add das push lods adc and add xchg cmp sub add jne popf push or outsb jnp mov loope imul xchg push inc adc pop scas inc dec add xchg pusha into push cmp adc inc lea cmp popa mov inc rcrl jmp test pop test mov mov movzwl ljmp insb scas adc gs or and movsl and xchg pop fisttpl loopne mov sub push mov push bound push daa test jns cmpsl pop and sbb arpl test or push leave sub sbb and or les dec push es scas adc push cmp das or and in or test sub clc popf push xor std and out pop xor stos inc mov cmp sbb push cld push pushf inc adc jle out inc and dec sbb out add add jge cli adc pop and lret popf or inc mov cltd test out jne (bad) pop lea stc gs add andl jge cmp push je xor fcoms jns imul inc lret mov cmp mov pop out sbb data16 sbb dec sarb jbe sarb pop add add call imul lock push call sub adc push pushl sbb dec or movsl icebp data16 mov dec pop stos fmull stos mov cmp or test (bad) icebp jns das dec pop xor or pop dec pop push or jl insb and sti rorb xchg clc mulb sar lahf push lret push mov or dec aas loop dec mov aam xchg fsubr xor in pop pop les insb mov pop decb clc inc adc push push pop popf notb (bad) mov adc xor cmp cmp hlt repnz or add xchg or call scas adc or and mov mov mov dec ret and js add and dec sub pusha daa popa (bad) mov jbe ret pop nop ss jae dec cmpl stc dec xor add push or or clc inc or daa rolb cmp cltd adc lea cmp mov ftst inc daa mov cmp movsl sub xchg add dec add inc push scas and or add add imul adc mov stos clc inc xchg movsl sub cmp xlat outsl fs daa movl enter (bad) or xor xchg dec jne xor in push addl xor sbb inc cwtl outsb push or inc mov add ffree out shlb pushf mov cwtl xor cmp inc aaa sub stc rcrb scas ret dec add movq or push xor inc popf sar push dec jns scas (bad) (bad) jmp xchg adc out fdivs pop or (bad) mov inc sub movsb mov aas mov and hlt lahf pusha mov pop add pop mov xlat repnz ljmp cltd test std cmp icebp push cmc or cltd sub adc sub adc xor push test adc and or sarl or mov push clc call add jb sbb and cwtl dec jmp push sbb fucomip arpl inc sub push jge fisttpll or (bad) ds xchg pop rol call clc hlt or (bad) (bad) int3 or ljmp in mov push jmp push mov aaa jne int3 jle aaa dec out ljmp and sub adc adc push cmp sub pop enter call mov or and add push mov lret lds fstpl xor outsb (bad) pop xor dec dec sub out mov sbb cmpsl push (bad) dec daa mov pop movsl leave lcall dec or or lods cltd dec test mov and or enter add jecxz mov lds push cs sbb mov lods add jl pop cmp (bad) mov jl ret fnstcw jns adc and lods lock cmc push ret dec jns push adc mov push inc mov push lahf push js mov sahf call mov or (bad) jmp out cltd leave mov push ret fisttp mov fldt mov xchg sbb mov dec mov ljmp push inc cmpsb jecxz inc mov push inc cs push mov test insl jbe sbb push repz mov xchg icebp xchg out push inc inc fs cmp fsubs xchg je push jbe push rolb jmp lret test pop cmp xor (bad) loopne adc cmp pop insb mov push and lods sub adc sbb mov lods pop push movsb ljmp lods jae or fiaddl and pop std xlat mov xor xchg movsl or mov pop mov leave pop les push adc or inc pop repnz push movsb out and and mov mov add or adc fs push movl dec out pop or adc stos into call add cmp sub dec cld shrb or or cwtl (bad) sbb xchg xor mov push insb arpl div sub mov mov cmp pop (bad) je lds xchg adc sbb mov mov adc insb mov pop push loop out xor mov jns outsb or ret cmp lahf push lods cmp pop ret mov mov jle push jne add or inc mov mov or sub addr16 and push pop mov fcmovne daa add loopne lods sub sub push lds push and (bad) mov xchg (bad) repz push push andb negl sub or das mov jl jp xchg dec mov sbb xor add mov mov and xchg not lds ja push lea outsb jecxz dec out sbb xor cmc outsb sub ss and push inc or sub pop aam sub aam (bad) add inc cmovo jo push xchg sbb dec jne negb mov adc fsubr cmp or lret mov ja js add fs (bad) aam add pop jmp sub repz add mov push gs jno popf clc sbb lods push int ljmp add loop aam dec push (bad) hlt xchg add call leave sbb lcall enter pop cmp push inc pop das leave or pop pop adc pop push pop inc pop adc js jmp scas mov xor das test sbb jae call jmp mov push inc inc pusha jmp mov mov popf jno and xchg push sbb and dec sti sub jbe xchg into xor push and lds inc daa adc cmpsb (bad) data16 mov mov out or or pop and fprem das inc aad dec (bad) in pop loope xor mov and mov and inc test xchg and aas adc popl popf xor jne sbb bound mov out mov call in mov add nop js xor (bad) jg add (bad) xor mov mov sub lea sbb sub adc add je push out xor push mov push push data16 mov sbb and (bad) xor test nop scas dec std rcl sbb std fsubs (bad) xchg add push lea xchg imul sub or adc cmp jl cmp jle mov cmp push icebp sub outsl and inc inc push mov (bad) pop jle xchg test leave loop jmp pop decb lea sub mov cld or ss pop dec in sbb adc sti (bad) mov lcall cmp push jmp mov lock test mov imul mov lret cmp in xor cltd (bad) icebp cmpl aaa cmpl xor (bad) call rcrl out xor les mov mov add movsl inc popa scas inc lds add xchg das add pushl addr16 (bad) lahf inc jle addl jne mov adc andl pop push jecxz and mov pusha and xchg sub dec dec xlat push jne rclb arpl sub jne (bad) push jmp jmp xor pushf pop push or sub mov inc push jb lock and inc mov push das push jl jmp das adc or das out fsts hlt out add scas or adcl iret fldt call jmp negl jne stos pop hlt je clc mov add movsb push insl cs push mov jmp js adc lea call shl dec (bad) jne pop roll pop xor add lock cmp loope jp push xor or jl sub mov jmp (bad) hlt in mov stc pop repnz ljmp repnz fimul jmp data16 cmpsl mov push cwtl inc cmp sbb call cmpsl jle pop call inc pop loope bnd adc or xor adc lcall jbe xchg push push out jbe aas pop cmpl xor rcrb add pop pop in pop iret xor (bad) mov repnz mov sbb insb mov in lock jne call cmp mov (bad) adc dec and call push mov notl or jne or out mull cmp clc sti mov sub dec out push and scas lods je lahf add nop (bad) in and and les inc ret push repnz repz outsl xor xor mov push jno nop lcall or rorl out orb scas and ljmp mov lds les rcrl clc push imul mov inc mov (bad) bound cli sub and mov pushl lea pop lahf ds adc xor bound inc icebp daa sbb dec dec adc mov and mov push imul inc pop jmp mov out stc aad or pusha dec nop mov jecxz jl xor dec adc inc sub push fdivrl inc les call or mov call mov dec sub mov fbstp leave push and div jmp bound es add mov iret std xchg mov xchg or mov testl inc rorb adc and daa fmuls jnp mov data16 cmp xor add sub and or clc fstps inc xchg or pop inc test pop andb mov mov movsb add je push and push xor mov adc pushf fiadd outsl pop scas adc mov add mov cmp pop (bad) sti mov add mov jo cmp push jl push scas xor mov out push push test add pop ret pop xchg pop push inc push or out dec push jmp lahf jb dec ret cmpsb mov dec lea jge test sti inc jp inc (bad) fnstenv or in and hlt adcb ret or mov xchg fsts push lock xor adc js pop xor pop (bad) push aas shrl call js or nop ret mov mov enter rcl jle push pop lea inc cld movsl jae add sar aas inc jmp out in sti jns outsb or mov pop mov sti adc ret add call xor cli subb xchg add clc imul add ds mov xor mov loopne push (bad) dec not cmc shr add or pop (bad) dec loopne push push sub lods xchg and mov inc je jecxz jg jge test adc inc es es lock xchg adc push clc pop adc loope inc jmp inc jg jnp mov pop dec push mov sbb and movsb cmp pop xor shlb push lods adc aam leave push sub dec movsb or mov push push int rorl or (bad) and dec mov xor out jecxz pop xchg or xchg xchg pop (bad) and dec ja jmp mov xchg mov cmp push or sahf shlb loope cwtl int3 and cmp inc loop xor and repnz push mov jge mov loop (bad) inc adc shl adc mov mov or inc ret lret lds ljmp daa (bad) lock mov (bad) fildl es or inc inc icebp sub imul add xchg bound mov movsb jbe outsl clc jecxz inc js popa loope (bad) mov enter das rcrl mov and xor sub jae push in mov push std jl adc inc andb mov mov and lods enter or pop in or xchg and mov imul push pushf adc pusha inc sbb rolb and sbb sbb or mov pop pop jecxz and dec inc stc out cmp fsubrl loope lret scas adc sub mov adc xchg push cli mov sbb sbb xchg cmp sbb push test xor dec jmp mov and psubusw add sbb sub or loopne call hlt cmp jle adc or or or fisttpll cli sub jl aad adc dec or mov in rol aas cmpb cmp loopne leave adc loop lds or test xchg inc push jo lcall int3 inc lods mov (bad) dec call lds out pushf movsb xchg and or mov push aaa js test adc pop adc adc mov out cmp jb mov mov insb push pop cmpb xchg mov in (bad) push loope lret sahf or add push leave les dec push cmpsl sbb sub jg lea add cltd or push sub sub xor fs stos xor pop or push movl sub mov mov mov leave jo or popf mov inc mov cmp xor mov lea mov adc mov inc lea and mov out and (bad) loope je leave sub repnz jecxz scas test pop push and or xchg jno daa cld xchg inc je and lcall inc or cmp mov adc inc aaa push xorb loop adc rolb sbb in and and call or mov add popa xchg movsb mov mov and mov movsw bound adc sub add rcrl mov aas (bad) push (bad) daa mov dec sub add mov mov imul cmp adc push paddd test cli adc dec ljmp xor push cmp ret push pushf xchg cmp dec xchg outsb loope inc inc pop jno gs xor fisttpl mov push and and push pop adc dec adc and nop push sbb and int sub mov and insb sbb les xor pop fiadd out popf ficomp adc add lea push int subl cltd adc insb adc and clc xchg movsb popf popf dec or inc mov stos and lret sub or add push xor push push xchg rcl inc dec scas and mov dec adc iret jg xchg inc add inc sbb sbb and xchg jns movsb or call mov jmp leave or xor push xor jge xor mov jp mov mov jb sbb add or sub jno punpckhbw inc pop and mov les mov dec and aad inc dec or call jge and push shr jb adc cs orb jge pop test mov pop mov sub and mov (bad) sub int3 int mov in test mov mov cmpsl (bad) loop int adc dec test inc mov fstpl dec test and xchg daa or xchg and and or adc mov js inc arpl cmp jge and pop mov dec mov xor push sbb (bad) jae sub adc (bad) (bad) or push xchg xor dec pop dec lahf push leave cmp shr nop imul repz or adc out sbb jns movsb pop cwtl stos cmpsb mov add cmp les or repnz arpl push sbb or inc out imul mov pop fidivr sub sbb mov pusha cmpsl inc jns cmp sti dec sahf loop or push rorl add cltd inc (bad) jne add es push push or clc mov roll ljmp pop insb and jno xchg outsb add jle cmp jge or add push dec incb pop cmp jle scas sub idivb cmp adc jl or mov lds clc push aas (bad) call push aas push int3 inc jmp and inc mov or and minps fimul jne push cmp xor jb jne aaa loope sbb xor dec shll imul int push ret shl push push nop add (bad) mov adc or jl mov mov roll pop adc sub adc push adc inc cld cmp ja icebp in sub out jge pop fcoml popa and jbe cmpsl or sti xor and std testb outsl rorb pop sbb dec add aad jb test dec inc rcrl cmp das into pushl xlat cmp insl mov test add call inc fsubs inc movsl push adc out andl fdivs or add fsts lock xor push xchg jnp addl cmp call dec pop fisubl sbbl sub add and xor dec mov out dec nop push out movsl xchg or lret jp mov cmp shr xchg (bad) hlt inc sbb add inc stc add cmovno mov xchg dec jmp lahf jecxz ds bound jle (bad) (bad) mov cmp or push out es pop test or in adc pop movsb sub jmp mov and hlt ljmp sub (bad) ret hlt stos dec mov test jmp push xchg jp mov push mov outsb add adc orl (bad) rorb dec fxch mov mov or aaa in xor or inc mov xor scas mov dec mov movsb push in lock mov xor mov push and mov jmp dec repnz adc jne,pt les popa xchg xchg bound rolb aad out enter cmpsb stos mov fnstenv push (bad) jno repnz in or add ss or jbe popa mov js xlat xor call frstor cltd test sub movsb push or sub dec mov mov jo inc and loope sbb or ljmp fcomps push xchg jnp and add loop out pop inc xchg mov xorb dec outsb cmp mov vminps fucom ds aad es inc xlat mov add and mov adc push lods enter add es fstpl (bad) jne sub mov add mov ret daa pop cmp lea dec sbb cs and leave inc xchg mov sbb mov push rol loop mov mov add adc sbb pop inc or fldt enter lock pop pop push xor jnp dec movsb add dec inc cs push ds rcl adc pop add pop xlat (bad) or xor jge or sahf ss push or xchg inc sbb push adc es enter neg jl adc in ret (bad) cmp (bad) neg (bad) cld int3 enter pop test frstor push jne (bad) dec or std call pop pop sbbb jmp or or xchg daa test cmc xor inc xor inc ret bound or adc jne ds mov xor xor movsl or push add loope aas mov adc pop mov pop sub enter push pushl insl loop mov nop outsb lea or mov mov add push push lds or mov pop dec sbb (bad) jno mov stc xchg cmp cmpsl or pop movsb pop mov ret mov iret stos fisttpl cmpb jge hlt sti imul mov dec mov xor push pop or pushl mov and inc sbb hlt call and mov fstps test cmp mov clc inc or pop hlt aad mov int push mov pop (bad) mov cmpsb mov push push pop xchg add inc jl fnstcw lods pop cmpsl fdivs pop jno dec xchg mov inc (bad) jge pusha test out mov fcomps or adcb loopne (bad) in jge jo mov push rorl inc lahf jno lods js into es outsl adc jno adc je sbb mov jmp fistpl mov enter daa rorl pop clc lea push ss or or pusha ret adcl xor and push push mov xchg (bad) nop andb repnz addr16 sub fisubl and xor mov sahf mov sub jp sub sbb xor add mov fs add xchg adc sbb adc inc js xchg loopne adc add jne mov and mov pusha mov pop andb mov push push and iret sbb lcall and nop xor cmp (bad) call cmp in push pop sub adc jno xchg or adc addr16 mov and fistl mov roll das repnz enter rclb lret clts jns pop rorb mov fidivrl push push inc leave and xchg pop scas mov icebp and jo xlat sbb cld jno std mov addl insb outsl imul cmp push lds shlb cmp nop movaps cli and mov insl dec dec das or push aam inc mov or add fisubrl pop call sub int aas or test out leave xor sarl out lahf test push add nop mov mov in lock movsb enter movsb cld lea inc push sub dec mov mov pop jmp mov dec int3 mov add and rorb test add iret adc clc and lea and xor mov rorb (bad) aad clc mov mov jns adc cmp (bad) sub ja push enter xchg int3 into mov shl lret adc lahf aam adc mov jae lds xchg orl sub jge movsb push and sub mov jg jbe inc movsb adc enter sub nop andb jb les lock sti lret inc push sti and enter cld mov and les aam dec out dec daa lcall inc and fwait or fs mov pushf and dec pusha xchg inc xchg cwtl or jl mov mov xchg addr16 xor jecxz mov nop (bad) int3 movsb (bad) and xor cmp and mov or adc imul or mov ret jle int sbb adc mov cmp mov sbb test (bad) enter add out xchg popa test in je or inc mov mov push lock leave daa jo dec fsubr cmp add fsubrs loope or or loope sbb mov adc mov mov mov and and pop enter inc dec cmp push in jb adc shlb in push xchg in inc or or inc lock mov je sub inc inc push cmp adc xchg inc inc cmp (bad) cli inc (bad) xchg lock sbb fidiv jns test pop mov pop cltd or mov sbb lahf daa js jb add mov inc (bad) lds sbb and aaa lds fsubs ds orl sub or push push push adc cmpsb inc orl xchg je call xor dec ljmp adc or pop mov and mov jmp and mov sti inc or sbb inc rol jl mov in sub lods cmpsb lods push dec adc fdivs es imul or test sub inc push (bad) faddl or (bad) adc and mov adc mov (bad) sbb jns adc push cmp test push pusha adc inc lds ficomp add jle mov enter andb adc adc adc inc mov cmp adc js adc push and testl inc es mov lea fmuls scas mov adc in scas and adc mov mov push adc or bound mov jge fwait or int3 mov sub jp js xlat inc les jmp test ret push push fistl test push xor dec mov clc push adc mov and mov jmp dec mov sub pop pop mov sbb sub cwtl and pop sub inc enter (bad) lret lock push adc sub mov sbb mov or test sub xchg jns dec sti mov imul enter or mov inc or and push js push adc adc mov pusha or nop mov rolb orl adc cs scas cwtl 