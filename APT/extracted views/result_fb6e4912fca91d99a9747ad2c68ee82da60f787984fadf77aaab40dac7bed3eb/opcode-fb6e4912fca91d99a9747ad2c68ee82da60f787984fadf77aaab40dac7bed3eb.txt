push add pop add pop mov push pushf push push inc sbb popa mov mov ljmp push mov jle jle or mov jmp sub xor mov and or pop ss movsb xor or scas sub cmpsb push add xor cli lods ret xlat cmp add das scas dec (bad) dec mov xchg xor adc jmp hlt (bad) push xor add rcrl xchg dec int3 pop das and xor xchg jge fbld mov sub pop xchg std lods mov roll loope icebp cld jp (bad) xor (bad) dec shll in or jge in icebp pop and dec push pop pop (bad) call clc jl jns push rclb insl icebp push int mov inc es pop and imul bound out cmp fs cmp ret pusha jl xor and stos outsb xchg dec pop stos inc das in push int xchg inc js je xor test test xchg xor cmp jge dec jo inc jp into lahf ficom mov jns xor inc add adc push ret out daa enter inc pop mov mov ljmp xlat lods jmp iret fisubl cltd stos shll add fimul mov lods shrl (bad) cwtl pop test xchg insb mov jno xorl cmpsl loop add xor mov nop fstl pushl ret push call stc lahf pop adc add mov das iret test xchg adc insl lds ds scas lods xchg cmpsb out test loop jo test incl jecxz mov rclb out inc les or adc pop (bad) sub movsl enter pop pop pusha repnz and push popa mov mov out mov cmp jge cmp ret es fdivr rorb dec shlb and aas mov jecxz xor cmp dec jns bound inc das outsl jb mov pop (bad) cmp movsl jno sbbb out cmp dec sbb mov test fs pop pop ret rep mov test loopne cld lret xor popa jb sahf scas inc jns mov rclb insb mov je jo xchg cmp movsl cmpsb push test dec les xchg dec xchg ljmp adc or adc inc push mov sub push (bad) (bad) push cs (bad) and lea adcl mov popa jle ret inc repnz test (bad) lock fldl dec pop cmp insl jno push jae ljmp xor jno jg mov xchg verw mov push orl xchg add pop fldenv push jno and sbb imull mov inc rcl xor push out mov pop jo and add fs mov movsb fwait into fiaddl repnz stc pop push mov mov mov cmp out (bad) pop xchg aas cmp movsl jmp mov cmpsb mov mov xchg idivb in xor loopne cltd (bad) cmpsl outsl xchg dec push loopne clc inc mov jmp ljmp jecxz pop in dec mov (bad) xor dec outsb push sub jl sbbl pxor mov fnsave jle pop cmpsl ja pushf pushf pushl ret mov pop inc push stc data16 mov les je insb ja (bad) pop mov sub cmp push outsl xor js xchg mov outsl and out jo mov inc std jo,pt and outsb (bad) mov xor mov push sub cmp call add inc outsb add imul fiadd or mov or and rcl leave cmp cs add and dec xchg sub inc ja add das cmp add iret fdivrs ret rorb out dec cmp (bad) xor pop adcb int (bad) mov or or and nop xor test jno jle mov fucomp sbb aam or xchg jo iret jns inc dec je sbb and mov jbe xor test push mov pop mov inc dec imul push ljmp or pusha movsl mov and adc addr16 repz dec lods adc mov stos (bad) mulb sub sub arpl push in xor fistpll push dec mov call push jge jg sub dec lret adc jg inc js pop jge mull insb jge jg sbb push das rorb jmp imul mulb jno inc (bad) inc sbbl repnz cltd jno jl sub call pushf pusha pushf lea jae push mov pusha sete inc setne pusha mov jmp pusha clc cmp call pushf bswap call loope sti sub rorb or mov lods push in cltd movsl mov test inc mov (bad) pushf lods and divb hlt loopne imul inc fldt jle (bad) inc fcoml movsb cmp jo xor lret dec imul sbb divb popa jge lea aam mov or push sub and push mov loope push pusha inc push and mov xor roll shl roll or pop and add dec push dec or (bad) adc adc adcb push and gs call push jmp mov loope icebp push sub pop fs std movsl mov xor xchg insb faddp mov dec mov stos aam sbb sub dec test add xchg add shl sbb divb mov and in push push mov lcall mov (bad) dec mov outsb xor or sbb enter xchg mov pop sbb and ljmp inc jns clc pushf movb adc arpl insb mov out inc jns les adc sar and push loopne aaa out add je jae jb gs add inc pop sbb add and ret aas mov mov cmp gs hlt sub mov (bad) xlat sub repz pop jo cld inc popa into jno aam dec mov pushf lods sti repnz push lods adc mov les xor inc mov aaa aam (bad) mov jne pop lcall lret lea push movb repnz mov sbb imull jb mov lcall decl cmp adc sbb adc imul mov std rcrl lcall adc dec call imul mov adc add add call leave test pop jno jp cltd jno mov int3 inc cld or xchg hlt push out cmp gs scas xor push pushf (bad) aad jnp cmp pop imul dec aaa popf and xor mov iret cmp inc xchg push mov sbb outsl iret loopne clc or xor fcoms clc xchg lods dec shrl mov xlat call pop ret cmp inc adc (bad) pshufw lock adc dec pop sbb dec xor lea imul nop enter jl jl sub addl fwait and sub jno jns mov add jo cs or xchg ret pop sbb push inc cmp icebp sbb mov sbbl mov scas ja sub pop pushf bound dec xchg dec mov out enter or loope lahf pop pusha adc call push bound jmp fldcw in cltd inc cmp sbb pminub test jmp inc aad test ljmp rorb movsb cmp lds (bad) sbb rorl push in sahf push xchg adcb push shl mov sbb sub xchg loop fdivrp addr16 in cmc push mov ss scas pop xorl xchg cs (bad) or and push sbb jbe test xchg sbb adc ljmp jp mov push inc dec addl jmp gs fs nop push nop jp mov add bnd dec sub and dec adc sub mov int3 xchg add imul out and shl push cmp adc cld dec adc (bad) outsl adcb dec mov and push loope das pop or jmp das inc (bad) mov jno pop add sub dec jecxz stos jno js cmp and je clc jno test sub stc cmp pushf pushl pushf mov lea ja bt imul jmp lea ja push dec mov call push (bad) pop inc rcr adc and jae and inc repnz xchg jbe arpl jno jge or xlat add repnz loope mov or mov mov mov lds push xchg aam adc dec or insb push test daa jg inc outsl dec nop sar push out ficompl inc mov imul stos int mov (bad) or jne in sbb jnp xchg sbb dec add dec cld fsub pop mov xor and cmp lods xor push dec imul cmp pop shrd and sti and addb mov fsubs mov out lock int3 (bad) sahf stc cmpsb mov cmp inc addl pop mov mov out and and js rorl add mov dec call inc leave xor ret stos aad pop or sub jp fsts sahf loope int3 push cwtl xchg cmp xchg dec stos pop ror leave cmc sbb add dec jno jbe (bad) addr16 mov sete mov not movl movzbl lea call bt or call lea je lahf clc clc xor clc adc not setle mov stc inc xadd inc mov btr btr not shr shld movsbw cmc dec mov bt call pop mov pop jg je pop mov push cmp jmp cmpsb stc mov leave adc pop mov pop pop pop aam mov movsb fwait dec xchg movsb fwait test lahf fs test lret je daa mov mov cld fmuls dec imul jbe dec aam les cld dec or mov ljmp das inc add add into push int3 (bad) cltd mov inc ss pop pusha jg mov lsl cmp dec (bad) pop ret aam push sarl leave ss fisubl fsubs (bad) out scas cmpsl cwtl pop test sbb jne xchg xor pushl pusha movl pusha mov pushf pushl ret mov rorb jo adc lret push outsl dec (bad) scas adc daa ja iret int3 mov mov add or push mov cltd and jle inc sbbb cmc hlt push and in leave je inc fwait lock lahf xor lea and pop lahf lds sub out inc mov ss or mov or mov add mov cmp or das adc xchg mov and sbb add jmp pop cltd movsl lea or xlat call jp adc (bad) psubb mov clc int3 xchg in pop inc or lret aam fadd sbb mov loope mov adc sarb cmpsb stc add sbbb jae push int3 shll cmp aaa xor pop add sbb (bad) and cmp pusha mov lods jbe mov cld or xchg mov mov (bad) jo cmpsl (bad) dec push mov push sbb adc paddusb rorb xchg dec push inc pop sbb pop scas jno stos sbb xor pop xbegin or shr inc jno jae rorb mov lea jne cwtl mov pusha push lea jmp lea jne shrd xor mov dec test sub jmp xor sub jbe adc sub add iret das xchg sub shrb call sub ja aad aam out jle cmp xchg cmc lahf rcl das popa pop push inc lahf inc mov sahf dec (bad) fs ret sub mov cmpsl mov mov lock jo and push loop sbb xchg jmp imul mov js xchg jne lds adc mov and sbbl xchg fiadd mov pushl shlb (bad) jno jb jns push cmpsl pop out push sub pop xchg xchg jbe into nop dec lock add xor mov popa or in xor jnp xor cmc out test dec push outsl fsubrs mov add data16 scas popa loop lret xchg sti movsl scas es pop adc mov lds cltd ret inc scas push fwait push mov (bad) imul pop int rclb (bad) mov lods xchg (bad) imull arpl sbb fwait ret aas pop movsl pusha mov test xchg stos mov push or cmp push or add adc jno movsl dec push dec insl jno xor outsl xchg mov repnz out inc cli adc test pop cmp xlat out fbstp sbb dec pusha mull adc es xor stos clc inc pushf loop inc push cwtl lods das scas jecxz inc cmp shl jns xchg mov stos jne test sbb pop mov xchg roll xchg jnp stos leave pop inc push clc imul imulb mov jge mov sti jge je push faddl and add je cld nop iret mov std sbb adc xchg imul ljmp xchg xchg iret lock stc into adc push cwtl jno jno adc das inc test jnp clc fild test or jp cli movsb icebp insl movsl mov jge pop popa cmp sub das mov lcall mov jmp inc adc dec das dec xor jns lcall cs lock dec (bad) lock push int3 adc cmp dec xor dec aas lahf add jno jo sub xlat pushf mov lea jb jmp pusha mov push pushf push pushf lea jmp popf xlat (bad) lret adc rcl and fwait and sub and push xchg je mov in mov test add ljmp bound mov cltd dec mov stc or arpl fs (bad) sub jne addb imul inc sub fiaddl push ljmp cltd aad (bad) aad dec std inc xchg ss fbld lods adc cmp repz mov fldl test lods mov xchg out ss lret rcll lods (bad) call (bad) push out mov mov cmpsb push dec push arpl xchg or push push and jo int3 jnp das jno push repnz adc inc cltd push (bad) pop fwait inc ret mov subl mov sbb jge je nop or movups js test mov js jl je pop sahf pop test shr aam sbb daa inc sub jecxz or or hlt sub push outsb xchg stos sub loope rcrl sahf mov cmp fisttpll cwtl inc mov xchg xchg mov pop mov sahf addr16 insb addr16 xor in pop (bad) fcmovb (bad) sti testl cli sub push dec add jne jno outsb xor xchg movb call call bts shr push lea not adc mov clc mov push stc rol push not push movsbw mov neg shl bsf push pusha btc xchg xor bswap ror mov xchg pop mov bsr pushf btc shr mov cmp cmp pusha cmc or pushf lea je cmc jmp imul xchg and xchg hlt sbb push repnz sub nop push loopne enter sub (bad) lea jno imul fstpl push and cmp mov mov (bad) adc jb lret and icebp out shlb mov push cmp test incb gs (bad) push mov (bad) shll stos aas adc shrl adc mov ja cmp movsl pushf adc cmpsl xchg fwait mov inc inc pop push push sub xchg inc pushf xchg mov (bad) cwtl push out pop and mov push enter jno insl negl cmp loope xor and sbb out nop cs adc fstl pusha imul xchg push dec mov mov jle mov push outsb jmp (bad) mov cld ret jb or jle jbe aas cmpsb push pop mov (bad) push test rorb sub loop mov out dec jae ss and fsubr sub adc popf lods mov repz xchg int jno insl ss jmp cmp and outsb (bad) push lods adc ret cld ret fdivl sbb xor jbe scas xor inc push ss and mov imul (bad) xchg test loopne lock sub cmp jns sub or stos pushf lods xchg cmpsb jns jns lds loop dec xchg pop xchg inc idivl mov jecxz sbb stos je push mov js (bad) icebp mov int pushf jecxz pmovmskb fucom xor ret inc mov insb inc dec jo call in sbb popf add push loope lds jno ret push fiadd xchg movsl sbb imul and xchg mov in pusha idiv cmpsb aaa hlt mov cmp or cmp mov jns (bad) (bad) aas sub insl jb dec sahf mov popa incl (bad) ja repz and cmp repz inc stc or aad dec movsl sahf mov bound mov cs jmp sub sbbb out push faddl insl stos xor cmpsb pop sub inc fisubrl adc mov in fstpt (bad) sbb push into mov adc push imul lcall movsl mov lods xchg xor cmp push addr16 sub imul hlt stos movl mov jmp call pushf call pushf lea je call pushl cmp pushf jmp mov push pusha pushl inc inc seta jmp call rol fisubl fiaddl les decl add subl idivl aas sbbb hlt dec rorl arpl xor add lcall mov adc or adc inc aas movsb jb std and mov out iret repz inc sbb int push data16 sub sysenter sub outsl add mov stos sub fistpll addr16 pop dec rclb add hlt fistpll and or jge in aam adc dec mov lahf movsl lcall test daa pop frstor push les insb cltd loope mov jno push fisttp push xchg dec pop js xor test call inc fnstsw jae inc fdivr subl mov adc cpuid cld or or and daa sarl or loope in dec xor pushf in and xor mov mov lret cmp xor pop sbb mov push imull xchg mov int3 xor mov lods lea int3 ret out and push int inc outsb push shr sbb jp jecxz pop sbb call adc adc adc add (bad) and adc aas inc sbb cmp push cltd (bad) or hlt leave jmp out or adc sbb int3 shr (bad) jbe jle sahf test sub sahf push mov mov cmpsl xlat sbb xlat out dec sahf data16 aaa out (bad) rolb sahf inc cmp or adc pop pop sub mov stos adc sub (bad) sti scas or loope fs inc add lret fiadd fs xchg jge jo xchg (bad) pop pushf imul stos mov sbb push cmp sbb aam inc fistl sub pop inc add sbb sub ss push mov jge dec jb xchg test mov cmpsb jecxz,pn push out xchg mov jb inc sbb sbb inc or sub js stc dec popa mov imul dec lret (bad) jmp push sub pop shl and push gs (bad) out iret adc in pop inc pop bound inc sahf scas data16 inc jg rcl xchg jb icebp lods xor xchg movsb shr cltd mov ljmp fbld push daa inc cmp gs and jno push bound xchg test pop and adc pop and dec push loopne and sub dec insb push xchg popa pop mov stos mov sti arpl dec lea pop cmpsb out and mov aam push out or out pop xchg pop mov test (bad) sub adc ds pop and fiadd xor mov add xchg lret sbb je jns shr mov fadds test stos mov mov pop pop iret (bad) cmp es fs lcall mov add (bad) jno addr16 inc adc add pushf call adc pushf call add cmc cmp push lea jb clc pusha jmp push cmp jp (bad) jbe ret mov and mov cwtl sub test xchg insl or arpl shl clc (bad) xor imul fwait add inc shrl sahf and in sbb rorl stc (bad) dec inc xor fwait push mov lock stc push sbb xor in xabort add mov and jae fs into mov adc mov ljmp pop push sub push cmp fldenv fsubr and out clc (bad) adc je push sbb loope lahf jno data16 sbb mov rcr mov fild sbb sub mov cltd cltd movsl mov and sub popa popf mov sbbl cltd cmp (bad) lds js sbb xchg dec jo dec push xchg hlt mov mov cmpsb bound pop ljmp pop adc xor aad popa (bad) call std bound dec shll xor loop lds inc pop sbb idivb insl jo mov rep rep imulb inc lea or pop mov mov lret push sub dec jl inc lcall sub gs int3 xor daa mov fwait and dec push cs sub add in and inc push das or cmpsb adc lahf mov les adc push xchg test imul iret adc into lds jno inc push rorb sbb dec pusha mov (bad) movsb lahf dec (bad) fimull divb mov pushf jbe repz outsb xor dec aam cs xchg adc cmp inc pop sub push mov dec lcall push rcll jg jbe mov or in ror or fiadd cmp cmp push jo jbe jmp test popl sti add test add pushf stc push cmp pushl jmp cwtl jo jl pop es inc scas test push incl jb cmpl jge sub test aaa out pushf xchg test mov pop and arpl popf out clc es in sbb rcr outsb mov cltd push pop je push push in in imul loope loopne push xchg mov xchg ss mov mov faddl out cmpsb pop sub inc dec insl loop insl in mov xchg jmp pop cld ret clc mov test xlat cmp inc into dec arpl jp mov (bad) aaa test xchg (bad) call iret outsl or jg sbb fs cs cmp add (bad) roll adc xchg int xchg sbb dec fsubs push xlat (bad) xlat ss fadds hlt dec push das inc inc fs jp mov out out repz pop jecxz jmp into dec ds sbb in or sub aaa push push xor adc cli dec lret dec aad jp aaa imulb xchg ss int3 jae jno arpl je xchg in cmp push pop xorb push scas cmp mov mov mov push cmpsb mov adc cltd add xchg jl inc (bad) xchg dec flds jnp (bad) cwtl fild and push or adc enter mov (bad) lock mov xchg lret and pop adc stc push or imul fadds add mov in leave xchg in inc dec cmpsb xchg jl stos aam jmp add enter mov in add out mov pop lods icebp lods cmc lret xlat enter decb xlat daa jl push loop orb inc sbb jmp pop insb sar and cmc sbb pop daa popf push lahf lahf hlt jno bound outsl cld (bad) jmp (bad) ret mov sub imul dec mov cmp std es xchg inc flds or push cmp xor mov lcall gs fdivp xor lods mov ret mov (bad) testl popa (bad) mov loopne (bad) (bad) adc mov in push rclb add pop mov lods mov add sti xchg scas aas aas add add sti or das push xchg jecxz insb dec nop scas test lods outsl jno cltd inc cmpb pop push mov fdivl mov je dec push shlb mov outsl adc cli sbb or jo popf bnd bound test xchg test mov fild pop arpl inc jmp or popf ret pusha mov jmp mov push (bad) repnz adc push out inc inc pop jns sub jb sub or test movsb das (bad) push jae dec pushf inc or fsubl pop test daa cli insb rcll ds dec in mov std cmp pop jmp push shl or add loope jecxz out psadbw dec hlt mov scas xchg sbb icebp out jbe flds jae movsb imul test popa nop incl push jbe xchg push enter jg sbb fldl2e pop hlt mov inc sbb dec mov (bad) int3 repnz aad std loop gs mov aaa jecxz or rorl lcall mov jg and cltd outsl lods lahf xchg test jbe fdivp cmp mov aad inc cwtl inc fwait xchg (bad) (bad) iret xchg movsb mov and lds test add push shrb mov xor push adc add xchg xor stos xchg das jo push rcrb dec jo mov sbb aam push inc dec das lock sub stc test pushf cmp cmp pushf pushf movb lea ja bt imul stc add push pushf pushf lea jmp stc call jne mov call xor sbb mov push adc sub mov rcrl jp adc daa cmp xchg mov lret cmpsb mov jbe (bad) adc incb pop and insl (bad) hlt or xor scas loope into loopne push pop and xchg xchg scas out nop rcl xor dec xor cwtl pop mov sbb in shl mov jmp dec jne dec jg push mov int3 mov (bad) jb jl call xchg jmp (bad) fdiv sub jo mov pop imul sahf cli les imul jne outsb in sub lods jae subl jg outsl lahf jg jg jnp mov sub in in cld subl mov (bad) out xor push das xchg and inc and stos push test movsl pop scas daa cwtl in lret sbb mull out cld inc dec (bad) div js outsb mov stos dec mov mov cmp lock xchg movsl ret fwait mov (bad) arpl aad lahf inc jnp outsl push or das push imul ret mov (bad) int lret push cmp les dec sbb xchg jmp mov nop mov pop pop cwtl push push push frstor mov mov dec mov pop lret (bad) enter push gs jne jb push popa insb jne inc js add arpl push cs pop in mov in repnz mov rcl jecxz push pop ja xchg mov xor dec push pusha lahf lods outsl mov leave das cld inc aaa inc push inc push sub scas xchg dec mov push sbb stos jmp pop sub das mov mov jmp dec cmp jmp loop cmc ret cmc leave sbb pop pushf arpl xchg or scas sbb int int3 mov xor and inc dec push popa lret mov stos jns sahf (bad) popf fldl test ja insb pop sbb mov int3 mov push jno pop push mov lea in mov mov jno inc lds xchg jl gs xor pop test repz outsb xor hlt push xchg mov adc add fisubrl out popa dec xor inc push inc and pop fs inc push aas xor or push movsb fstl enter scas dec mov popf sbb je xor and test lods cs jmp insb addr16 out std xor fcomps lret xor mov aam popf jbe daa das lods xor sarb dec mov sub iret adc stos dec (bad) std push xor cs xor fst das inc mov je js or lcall pop jne test mov scas xchg add add loope fcomp mov mov lock (bad) mov enter sub bound pop dec je cmc in mov jecxz out scas sbb and out cltd pop xchg jne hlt lock push xchg or or pushl xor xchg add loope jecxz jl xor je xlat xchg sbb xchg movsl (bad) xor js sub dec sbb pop mov xor pop lret in adc adc mov inc xor add cs ss scas repz in int3 xor (bad) mov jae cmc mov fiadd inc in test dec xor mov mov popf fisttp sbb mov pop jg je pop add rcrb jne sbb cmp jmp in xor fwait sahf cmp sbb xchg inc sbb inc hlt cld mov cmp cmp loopne test adc dec adc divb fdiv (bad) loop jbe hlt (bad) mov ret bound sbbl (bad) mov je lahf ljmp fcomip rorb fisttpl jns jle je stc cwtl push dec loop mov (bad) je cmp cmp sub mov loopne sbb popf sarl out dec mov cmp xor mov rcrl mov xor stc lcall scas inc sti ja,pn mov cli es mov iret xchg pop add hlt push (bad) ljmp out cmp clc inc push leave inc jbe and xchg in pop imulb inc jg xor sub es add fs mov idiv or mov xor add xor in scas inc clc jp,pt stos ret mov hlt mov cmpsl adc push in adc enter xor dec lret mov cwtl (bad) cmp sbb xor sahf fnop jnp (bad) rclb hlt xor idivl (bad) ljmp xor sbb lock hlt add gs and repz xchg jmp mov stc xor cwtl adc test repz jno test in mov xor push data16 xor adc xchg mov jl mov cmp add xchg test add (bad) incb jb jle jns xchg enter xchg dec xor add jecxz xor dec xchg mov js inc loopne xor xchg xor addr16 (bad) ret rcrl popw sub jo xchg or shr call jp js mov jae xchg cmc dec push or mov lcall lahf and jb mov std xor adc test mov mov pop inc or mov fidivrl addl jl cld jge xor (bad) js xor adc lret ror (bad) leave stc or xor scas lret (bad) sysexit and out push sub sahf mov into cld cmp cmp arpl mov int in lods (bad) es dec (bad) hlt jmp push jns fcomi adc sbb or inc fsubrl xor test sub and and cli sar xor arpl add sub mov sub and adc jne bound and pop addr16 aaa jae aaa imul sub add jae add pop adc hlt mov and inc sbb sbb bndldx fimull cltd cmpsl pop fsubrl push loope xor out cltd pop cmc pop pop fs sbb xchg stc xchg sub jecxz in sbb rcl adc sub fildll pop sub xchg mov je mov pushf je aas negb xor mov xor sbb and jmp daa jae mov sub lods sub paddw sbb enter je jecxz stc sub jno repz (bad) repz xchg (bad) repz xor mov sbb mov seto loope int mov fidiv mov adc loope in daa and sbb pop repnz xor mov cmp loope in pop fwait pusha lock sub pop and lods pop add mov test fidiv cmp sbb (bad) das push nop fwait mov fbstp imulb adc cltd mov sbb ljmp adc sbb sbb lods sbb mov test test test jno (bad) int3 fist out sbb xchg mov xor loopne mov pop rolb jl mov and xor jmp xor sbb adc adc adc fcomp jnp (bad) cmc pop sbb sub repnz inc imul and aas in and (bad) cmc fstps lahf xor pop sbb jb mov fistp pop (bad) stos mov xor cwtl lods ficompl loope,pn lock sbb fistpl mov xchg sbb and mov and and fild out and mov sbb fistpl jle icebp and and lock fisttp in xor xor sub sub les ljmp data16 sbb cltd (bad) sbb in arpl sub frndint hlt cmp je sub xor pop fisubrl and xchg xor sbb dec stc repz sbb and mov fs loop jecxz xor out mov in out xor in xchg movsb jo cmp pop in mov dec sbb cmpsb aaa and pop je and jae repz fdivr mov das das popa repnz ss mov out pop jge hlt mov inc bound jb xor lock xor divb mov sub xor ljmp imul xor out scas outsb cs in fs jecxz arpl loop bound xor loopne pusha and out es gs xor ficompl cltd pop sbb roll pop ficomp popf pop hlt gs sbb repnz and aam push nop fldenv sub and xor pop inc and pusha mov sub stos mov loop jg arpl sbb mov lods int3 sub les les icebp mov loop daa sbb std xorb ret adc js lret xor push sbb out xor mov ret sub add enter sbb xor mov lahf movsb and sub mov xor aam and sbb xor fistpl (bad) add sub lahf xor subl out adcl je pop arpl push jecxz xor popf jmp lcall xchg sbb fsubrp xor cmpb das sub jmp lods add fistpl dec and xchg stos (bad) cltd or ljmp mov scas pusha and mov test (bad) cs pop subl sbb ficomp jo pop or in mov fldln2 mov daa jge clc add push sbb pop addr16 mov pushf sbb or mov sbb mov jecxz fldenv and mov fldt mov or mov pop add dec sbb sbb pop subb jmp std lahf sahf fcoml scas or (bad) sub cmpsl sub mov cmc mov add imul xor push adc sub fistpl insb das sbb andl stc int3 and pop test adc cwtl xor pop sbb rcrl ljmp and das nop and shlb (bad) push mov xor leave or add fxch xor or das lcall arpl mov mov cwtl pusha stos or xor sbb mov xchg add and push xor hlt outsb in sbb stos in cwtl lock setl lods jbe lock aaa (bad) lock fsubrl aaa ja adc sbb and cli and mov sub and jne sub mov lods add pop and rcr lods adc sbb std mov sub and xchg loope ss xchg test fwait (bad) push cmpsl sub xchg sub repz divl adcl cs cmpsb and fsts push rcr stos sub mov lods push rcrb es das pop add jmp ja scas and xor and mov mov jb push cmc insb divb xchg js sub cwtl xchg mov push add fnop jno nop sti push or iret sahf xchg mov xor (bad) xchg jmp xchg inc xor negb mov (bad) mov push sub and adc lahf sub mov mov jbe sub mov mov adc sbb mov xor hlt mov sub dec cli addr16 and xor adc cli lods rcl mov hlt popf push and mov cli cs (bad) mov add mov jb sti push mov lret mov mov and arpl sti cs dec hlt sahf sub mov dec adc pop xor adc xchg xor push adc xchg xor push adc xchg xor push push aad xor dec or mov dec or mov dec or (bad) xor dec push int xor inc add xorl add xorl xor inc push lds jl sti mov mov jns cmp mov jg aas (bad) mov jge cmp pop lock movsl call mov enter mov fs fstps sbb sbb popa pushf lcall cmp inc das sbb fcmovu mov and inc inc mov (bad) cwtl xchg and imul xor dec mov (bad) fistpl jecxz int shrb cmp sbb pop or lahf inc cs adc sub jecxz xor cmpsb neg lock dec mov sub pushf mov push xchg sbb (bad) out push xchg sub cmp repnz sub lods ds mov xchg sahf (bad) mov sub xlat xor ds cld jp cmpsl push and test cltd sub adc lcall icebp rcll jb adc icebp mov pop mov (bad) fsubrs sub lahf and fsts loop sub in mov push jecxz jbe fistp sbb inc and mov lcall mov and popa (bad) sbb pop ss cmp sti inc adc clc mov psrld push mov loop das pop fistpl shrb mov push and ficomp or cmp fwait and arpl stc rcrb cwtl xor repnz jo xchg mov lods add jmp imul lods stos fcomps push loop (bad) pushf popf repnz mov lock sub and imul xchg jno dec lock jo aaa xorb lods and lods rorb repnz adc add sbb ss fisttp xchg pop mov nop negb aaa pop sbb scas sub lock xor fcompl rcrl repnz or add pop xor sbb dec fstps sub add sti add pop rolb lods add or and pop lock repnz lock repnz sbb and and dec das add sub sub sub sub jecxz jg xor xor fdivr lods sub bnd clc sar lods cli and cld rolb mov sub and and adc sbb xor (bad) fdiv add and std sbb lods push and or pop mov sub and (bad) xor pop mov pop and sub std cltd mov loop adc lock repnz rcrb lods sbb stos sbb cli mov xor pop xor cmp std movsl lods ss inc pop mov ficomp fistpll add adc xchg sub and sbb or xchg jmp push lahf sbb subl sahf xor push jmp stc test sbb cmp cmp xor pushf adc sbb xchg stos aaa pop lcall lods mov fistp xor lods adc popf fimull inc xor or mov and icebp mov cwtl mov sahf or sub rorl pop out in push xor sub fild push out xor pusha ljmp fstps int mov loope fbstp mov pop dec daa out (bad) mov mov lcall xor pop fucomip xor pop sub daa ret sbb sub pushl cmp daa sbb fisttpll stos sbb es xor and arpl xchg loop pop jbe incb adc je sahf sbb and xchg lcall pop pop dec xor sub idivb jmp cwtl jl mov lock ret stc cwtl fldl2t jne xor fistp inc or lret sbb jae cmp (bad) mov icebp shrl lods and xor and gs sub adc sbb sbb xor fcomps and ss sbb sahf adc loope pushf sbb out andb pushf xchg lahf cmp cmc cs mov repz loope adc xorb pop or and inc das fistp pop xor out gs sbb or stos clc loop cmp jg out mov pop push movsb in push mov sub xor jecxz out add xor ss sbb jecxz std and les lock and sub loop sub mov aaa pushf (bad) fnop xor jl sub xchg add ljmp xor and adc add sbb (bad) adc xor (bad) cmpsb adc mov xor arpl and cld adc xor add dec xor adc movsb adc sbb stos and and adc into sub mov stc outsl mov xor and movsb scas lock (bad) and xor or cld xor and cli xor mov cld xor mov sub dec sbb xor loope jecxz smsw xor adc lahf and mov push xor xor add mov ud2 xor (bad) or das out adc pop mov push xchg pop inc pop shr sub jl sbb xor push jg and arpl or clc and aaa adc xor sub dec aam sub lock aaa xchg adc xor xor fnop xor lock lock pop ret lock in pop add jle and and or cmp or jecxz xor sbb mov jae scas clc xor jmp std in cmc mov and in mov mov adc fisttpl fcompl pop pusha cmp call fsubr shl cltd and fdecstp addr16 cmpsb and mov lahf mov pop sbb out movsb xor mov or bound mov jge add cvttps2pi adc data16 daa jecxz sub ss adc out jae pop xor es lret (bad) repnz jg rol les and add or add sub ds roll jne pop fisubr sub cmpsb and jle aam cmp and xor rcrb jb push sub sub xor xor (bad) jo mov scas and adc (bad) icebp cs out mov jmp test lock cli inc daa lods addr16 lods (bad) mov ss sub (bad) pop mov (bad) and and sub and adc aaa (bad) mov fisubr sub sbb pop es mov sbb xor ss (bad) adc movsb das aas (bad) and movsb outsb movsb xor pop mov repz push or mov out fldcw aas popa mov (bad) out (bad) xor repz mov loopne xor test ror xor (bad) mull push adc cmp mov mov lea or mov xlat mov cmpsb xchg pop xor push jae push xlat mov into (bad) lock in jae fdivs lods xor xor xor clc divl rorb mov ja ret xchg cltd mov into or pmulhuw jo std jmp sub fstpt jne ss pop fs fiadd lahf scas popa sbb or loop lahf cs pop das pusha popa push (bad) cmc fsts jl lahf jg movsl fbld and popa arpl sbb loope loopne orl shrb jmp test js xchg mov pop fwait lahf or and jle cli scas lahf xchg shrb jo fmull mov mov ficompl mov fwait iret xchg test stc pushf inc (bad) and fwait shll (bad) push lret xor adc punpcklbw int3 jmp nop cmpsb pop imul fidivr jg (bad) fwait test add and dec int3 (bad) clc mov pop mov fstps in insb mov jbe xchg repz mov pusha add in sbb insl sbb sbb (bad) mov loope xor popa mov shlb push iret sbb and icebp mov or ficompl loop add pop je sub daa cmc mov sbb push out pushf imul mov and iret xchg lock xchg test add das push adc mov mov dec nop popa xor mov sub jnp adc faddp pop dec scas lock lods xor mov in and jns or sbb jecxz repnz mov scas pop outsl dec outsl iret sub cld adc adc dec fimull add loop or pop jae sbb shll xchg mov xchg mov xchg adc lahf pop fisttpl scas mov cmc adc add xor and adc cmpsb mov out push jmp dec lea sub ljmp loope mov negb shll icebp push sub cwtl dec das or scas andl sahf test loopne icebp mov cmp and shrl mov imul sub xor jmp sub (bad) (bad) out lods xor inc jle in iret rcrb adc cmpsl mov fwait movsb pusha mov lds sahf and lret out ja sbb ljmp sub pop and xchg insb push cmp out or sub data16 mov xchg jae fistl mov (bad) dec and fwait daa addr16 add mov and ss xor and pop mov lcall adc inc sbb jmp sbb ss jmp sub push pusha pop jne scas mov into sub xor loop addr16 sub push lods fldl2e popa push test or pop xchg sbb dec leave adc inc fs xor flds inc lahf or jl and mov mov pop sbb scas pushf pop icebp test jmp out jl xchg jle popl lret divb and hlt fstpl and iret and call fwait xchg pop push xor mov int3 mov mov notb cmc lret jp test popf sbb cmpsl mov mov cli mov loopne dec mov sub cwtl mov aaa dec in adc cli add or push jmp mov popf jae pop lahf sbb adc outsl popf (bad) and mov pop lcall mov fadds dec xlat mov jecxz lods add mov loop xchg push and sub or out mov icebp (bad) lcall jb mov cltd mov mov mov sbb out inc jb xlat inc sbb shl loop out nop loop xor gs jne push fcompl and push in push mov rcll xchg add test adc daa loopne leave aaa lods pop sub xchg cltd sbb or mov jl repnz sub mov movsb pop jmp mov mov imull mov jb and mov mov dec push iret inc cmpsb clc mov fsubrp or cmpsb lret pop lods leave (bad) pop adc enter addr16 loopne ficoml movsl inc mov add mov cltd push sbb mov aas inc js pop inc fwait imul adc movsl ret jecxz push adc lock or and inc fistpll jne cmp push xchg or jo fistpl loop loope inc (bad) mov dec loopne int3 ss cwtl dec pop fwait stc pop int adc inc sbb xchg mov lods sbb dec mov movsl test adc push into es or fisubrl or jle jmp add jecxz cmpsl and mov call and shr push adc mov loopne and mov loopne xor and and int3 aaa add mov loopne out testb add mov dec sbb push or pop push sub sub call je xchg loope testl pop shr incl movsb mov xchg subl (bad) push pushf sub sbbb (bad) fxch fiaddl and popl add into xor mov jp fimul rcrb scas pushf and (bad) fwait cmp pop jnp xchg sbb ret outsl lods mov cltd or mov and mov subb lret stos push fwait and stos ljmp xchg push mov js imull xor loopne mov push adc dec dec outsl es orb xchg or cmp fimull cmp jb ss pop xchg out loop ret jnp or sbb add add sbb lret mov sbb xchg sub in testb bound cmpsb sub and or lahf call pop (bad) jbe aam (bad) fisubl mov sub xlat xchg dec push mov adc inc push jns fsubp in jg push popa stc pusha xor out bound xor outsb sub popa xchg outsb or pop xchg and arpl insb sbb sub in and inc scas pop ljmp xchg fadd push mov iret xchg cmpsl or xlat addr16 adc adc lods aaa sub add or sub add mov sub and (bad) xor and sub and adc add add sbb daa mov sub and push xor or das (bad) ss xchg mov sub and shlb lods sub out repnz and lea and mov sub lods sub push rcrb das sub and xchg xor rorb lods or sub cli rorb sbb and sub aam mov sub and shrb jbe push call adc shlb mov sub and xchg xor rorb sub xor call mov sub and shlb lods ss sti adc repnz jns and adc push lock adc std xchg aam mov ljmp call lods sub adcl ljmp sbb inc xlat cmpsl aaa or xor sub pop pop push je enter sub sbb xor repz push jmp pop sbb lods sub bound pop adc mov jae sbb ss enter pushf sub test add dec pushf or jno ja mov adc pop or sub shrb imul int xor mov push clc ret outsl int xchg insl xor lcall movsb bound lods or std pop sub jbe popf aaa das mov in and scas mov and xorl daa xor xor and and xor icebp sub sbb and ss jbe xchg repnz or sbb inc jnp xor and and call loope mov (bad) clc mov cmp outsb dec dec jno fisubrl xor sahf loopne,pn xor out rclb add xor adc jl pop xor cmpsl js push xor aaa xchg fistpl pop dec lret and cltd fisttp nop repz cmp cli push mov mov addr16 sub jl sub in mov ljmp lret mov pop or das repnz inc bswap movsl adc sub jmp push and jmp out movsl loop (bad) jmp pop or xchg jmp cs pushf push jno pushl xchg add mov cmp cltd (bad) gs push movsb out xor enter mov ret or cmpl mov mov sbb sbb test jge fidivl pop sbb sbb cmpb dec std imul andl imul pop lret xor test adc sti loop scas xor (bad) aas jmp lcall std loope (bad) push imul or lret fsub movsb fmul mov call cltd scas lea mov pop sbb push and sub cld cld in xor pusha daa (bad) sti pop sbb outsb add iret jecxz das xor pop (bad) jmp out int3 adc adc and loop or (bad) cmp xchg (bad) push adc fs ret mov mov sbb sbb sbb xor das sub test dec mov fidivl adc fsubrs adc aam insb loopne in push xor push mov pusha mov push repz test sub fdivl sub fwait jns aaa cmp es test add mov (bad) xor out mov fbld jns pop sub in jmp lret out ss sbb pusha add push loopne cmp cmpsl addr16 add dec sbb fs test ljmp mov mov and js sahf xchg clc adc sbb sub (bad) retw jmp arpl and jb and mov loope mov es (bad) or loope out aas loope icebp xor (bad) mov mov mov pop and add das in xor ss popf fstps cmp fsubp or and dec mov cmpsl xor mov daa mov loop pop loop or mov and mov daa loope and pusha decl scas and jecxz (bad) popa cmp aam scas push xlat cld xlat cmp gs or fistpl sub fsubl fstps add and popa movsl cmc into or mov std cmpsb inc adc jecxz fisttp mov ret insb mov fsubrp in (bad) outsl fcompl andnps add inc xor (bad) int3 das mov adc xchg fwait icebp mov pop and or jns adc sbb aad pop xor shrl fnstenv div aam sbb xchg xlat add add loope jb (bad) mov sub mov pop mov movsl mov mov shl mov scas lahf push stos out sbb jnp add shl inc test xchg jmp out imulb dec hlt je and mov (bad) jae negl (bad) out xchg push pusha gs std cmpsl stos mov lret outsl dec mov sub insb insl insb scas xor mov and out xorb cmp movsl mov jne ljmp movsb mov fiaddl ljmp mov jb sbb bswap insl insb sbb lret mov push mov lahf ljmp scas dec push jae movsl gs fucomp cs cwtl or daa ljmp insl repz and pop jecxz jmp stos and (bad) sbb sub ret mov in loopne pop sbb das out ret jo cltd jne rcrb cmpsl fcomps push and (bad) mov add mov jae or out scas xor (bad) (bad) sbb fs and stos std lods mov dec push xor sti and popf loope sbb imull add push push jo movsb mov adc out fldl loope rclb or negb inc repnz push in adc test pop test sub and xor sti popa pop fisttpl dec push fwait xor xor fist ds xchg out out test inc adc or aaa pop add sub mov aaa arpl fwait cmp hlt movsb fs ficomp sbb pop bound movsl pusha xor ss mov xchg lea ljmp lahf adc fcomp pop lods adc push outsb push stos pusha sbb mov fs push sub addr16 cmpsl loope jg pop sub dec cs mov and adc pop dec sub xor cs movsl faddl fstp loop aaa popf movsb jmp and in pop fdiv cwtl repz jmp pop loop push push add jo,pt mov mov or gs fidivl loope sub xor aaa test call or or push pop rcr insl gs loop loop and fimull and fistp lods or loopne cmp out push sbb shll add sbb repnz lock lock repz adc inc mov out xor or sbb outsb repz xor daa lods sbb sub cwtl sbb adc adc adc xor psubsb out hlt cmp outsl or lock and clc push repnz insb and adc (bad) xor add add scas cld pushf (bad) nop test adc lock and mov and push mov sbb xchg add push icebp add subb repnz pop mov outsl or dec mov enter aas lods repnz pusha test push rorl movsl sbb aaa int int3 test jecxz xchg mov in cmpsl (bad) and jbe repz icebp popa pop hlt xchg xor cmpsb insb icebp mov mov push shr add jl inc fcomip inc lock jne ljmp imul sub pop repnz xor sub test cmpsb divb mov cmpsb sub mov xchg and xchg fisttp ficom push ljmp adc sub (bad) jb icebp inc xor xor xor cltd testb (bad) xor mov sub and cmpsb and lret imul aaa popa ss das jecxz and xor pop adc aad sbb sub or xor sub xor out add sbb shr psllw cmp fsubs repnz jne stos je and pop add in imul shll sub sub int3 sub imul loope jb and or adc add ljmp nop sbb movsb rolb pusha ret sub movsl xor lea inc lret gs stos xor cmp xor sub xor lcall lcall xchg or push jno xor in adc shrb lcall fwait adc rcll lea aaa pop add cwtl test arpl add in or lods mov jmp sub (bad) hlt mov out into icebp push mov ss cmp sub lods and (bad) sub loop int3 or sbb pop sbb or xchg sbb sbb xor push jnp mov and or sub and mov xor in stos xor cmp repnz jg xor jmp sub das mov and cmp out test xor shlb xchg ss and sbb mov notl int3 adc sub ljmp inc xor test xor popf and lods xor call out or shr sbb cs and ficoml adc daa jl sbb lahf sub das (bad) jl push sbb pop adc sbb and adc mov roll push xor xor pop scas ljmp sub mov cs xor sbb sub sub jne or cli sub xlat fadd adc adc add sti lahf and jmp sbb lret or aaa icebp xor sub xor loope jno mov cs loop,pn push in loope xor hlt sbb xor int push lock out hlt ja push jecxz in cmpsl stos push (bad) lock hlt ja push jecxz fildl or push and (bad) mov ret jge cmp stos int3 add in repnz in mov jge mov ds inc in pushf (bad) xor imul lock push push sti gs std sbb lds fadd lock xor movsl lods mov js adc shrb test lock std lods into int mov (bad) in ret jge lock vpunpckhbw repz push jnp mov sub xor movsl lods mov js xchg push lods xor dec xor mov pop xor repnz jl jb (bad) and jecxz repnz (bad) xorl shll in push sti test aam lods mov hlt mov mov repnz mov in ja push jecxz imul aam ja push jecxz imul lods mov js rcrb push sti cmpsb xor mov inc ja inc xlat jp sub add imul gs jne jae std inc pusha jnp mov in push push std lods cmp ret hlt shl scas out stos xor pop push lock outsl pop loope cmp lock jnp mov imul and (bad) mov sbb push jnp mov test stos jmp cmpsb dec call in imul mov and out push lock mov mov push lock mov jmp rep pop inc shll mov push xchg loopne adc lock jnp (bad) lock lock lods mov js rcrb lods mov adc lds xlat and mov test xor shrb repnz pop jbe jge mov jbe sbb push repnz fidiv jge inc and js (bad) xor and repz lods adc ret jg enter gs ja,pt (bad) jecxz imul lods mov jg enter les xchg sub repnz div sub inc jbe xor sub imul int3 orb (bad) jecxz imul lods dec cwtl dec cmp mov loope shrl repnz idivb repnz imulb js repnz aam js rcrb push sti lods mov jmp sub test adc in xor cli mov fldl2e in subb xchg ljmp (bad) jecxz imul jg mov push jecxz stos insl dec insb scas jecxz cli lods (bad) mov mov xlat lock sub rcrb push sti loopne mov outsl lods in and jecxz jmp mov lods mov pop cwtl sub lea add sbb in pop fdivr push jnp (bad) xchg and int adc in bound out and loope outsb aad mov iret mov xor push jmp jle aad inc in dec mov shll fwait sbb and cmp push jecxz jle adc add and jle xor dec add cmp fisubr fisub imul pop xchg fistp loop lcall push repz pop lods and pop imul fstl test call hlt in jecxz leave xor je jmp loop,pn sbb aam fwait idiv testl xchg jp jno (bad) cli loope adc pop jb ljmp push enter jecxz cmp dec faddp mov int mov xorl sub ficomp int loope pop out fdivl sub loop mulb int push push out movsb or sarb sub push das pop inc inc dec xchg pusha pop cs orl pop jg fwait fwait repnz mov xor lods xchg xor xchg pop std jno and pop sbb push repz enter insb jge jmp lods fldenv mov pop fdivs and loope pop jmp pop movsb loop int3 push and addr16 mov mov adc icebp lea out pop mov fsubrl xor or cltd pop and pusha sbb enter adc ljmp xor icebp push pop push mov fildll (bad) addr16 xor dec (bad) dec and mov fimul xor (bad) mov pop repnz mov push mov xor sub sbb sub or and xor xor into scas out xor cld xchg in mov ljmp std adc ljmp nop gs or mov jl fcomps int fs (bad) xor rcrb ss es cwtl or gs out xchg sbb xchg or (bad) add fistpll lods notl popf movsb cmp pop xlat and xchg mov ret xchg push movsb adc lret in adc pop mov popl push iret mov push aas stc out cmc xor call ffreep ljmp mov mov test js xor cmc pop lret scas mov mov xor lcall or push adc dec and sub loop mov and push test lahf arpl jmp mov and sbb push imul adc lret mov mov pop adcl sahf pop (bad) (bad) cmp movsb xacquire or sbb pop or sbb pop sbb push sub xchg and and xor mov push pop or loope cmp loop cmp jbe sub lret pop pop popf jle pop xor cltd jecxz sbb in mov xor xchg mov ret cmpsb out cmc (bad) pop sbb mov in sbb imul jmp ret mov iret sbb loope scas daa lret loopne add and xorb les mov or adc sbb shr jmp pusha pop movsb pop cmp pop mov fildll call push test push daa hlt push cltd in sub pop fldl2t pop pop call pop xchg inc test dec sahf (bad) push fdivrp sub flds adc sub pop rcrb pop sbb pop imul or mov or mov or popa cmpsl (bad) pop xorb add rclb adc sub and lock loope int3 sbb ficompl add xlat push mov and or pop add cli jecxz int3 lock or or xchg popa bound fiaddl adc hlt and enterw cmp cmp sub mov mov test fdivrl xor inc dec sbb lock loopne int3 sbb imul push enter or cmp lods push cmp xlat add aam ljmp sub add push push add push das in test xchg inc int3 lahf add pusha jmp in ljmp jno cmpsl stos movsb sub movsl mov lods fsts cltd (bad) idivl iret fsts and leave popf mov fdivrs and scas jmp or cmp xchg imull mov iret int3 loop outsb adc or in push aas mov xchg mov in adc or push lahf insb outsl cltd push sbb stos das sbb outsl sahf popa sub push mov and out or cs push xor loope add ficompl xor loop xor sub loopne lret or fmulp int3 sub cs mov mov or sub and xor adc dec mov cs adc xor lods js sub pusha (bad) mov or and jl aaa sbb ss or pop in ficom cld loope leave dec lods jmp mov es (bad) aam and pop cmp or pushf je mov push xchg and fisub clc fwait push sbb shl rclb inc dec or xchg and popa (bad) lock cld xor pusha adc arpl mov ljmp sub aad jo in (bad) and ljmp dec xlat pop loope xor cmp jge (bad) imul repnz (bad) mov lret sbb xor rcr mov push pop and (bad) ljmp sbb pop repnz push fstpt into imul push ret inc das out fmuls cs xchg dec lahf pop repz (bad) ja xchg mov sbb test sahf cli mov fcmovnbe in loope mov xchg jle cmpsl test xor ret arpl pop sub int cld jbe lock sub test fisttp movsl fmul add sub push fmuls push data16 push mov xor icebp dec out sub ss jo or dec (bad) mov sbb dec movsb jmp sub sub out and movsb cmp pop and lret in push cli shrl or push pop sub in repnz add jg mov test (bad) neg sbb in jbe push inc add add (bad) or dec mov lret ljmp sub lods mov and sub pop adc orb jg loop inc pop sbb out xchg fs fs sti fdivs pop cltd jno push sub jecxz dec fadds ljmp repnz inc (bad) xor fmuls xchg in int pop and dec daa lods dec xor push test mov in imull adc leave daa adc aas fisub ss sbb sub das insl test cmp fwait (bad) ficom and inc sbb lret (bad) and sbbb pop enter xchg mov stos mov cmovns sbb mov cmc jns movsl mov lock in (bad) sbb mov push xor shrl xchg add jge dec (bad) cli sub inc cmp or mov in push call data16 test fstl cmp outsl xchg ljmp mull in xadd or cltd mov call adc bound adc inc xchg loopne,pt lret cmp pop leave ljmp daa mov fisub sub mov out mov clc rcrl mov mov mov lds lea fistpll push pop mov mov push dec rcrb iret and leave jle cmpsl dec pop icebp mov push sub mov xor or rcl fiaddl fdivr cs outsb and (bad) lahf and in mov and cs adc inc jecxz bound fidivl xchg gs ss loope xor or lahf data16 cwtl out sub or fnstenv and push outsb inc movsl push add out outsb sbb out xor cmpb and stos mov roll or loop je jmp lock adc lret shlw (bad) into pop (bad) test jmp fsubrl cmp push dec inc inc lret cmpl ss push and ret jo or jae test jo out dec push sub dec insl mov das xor push inc movsb mov pop xorl popa sbb movsl lods out into popf js push in cmp sub (bad) mov jecxz sbb push add lock jmp ret pop jbe movsl test int3 pop imul ja xor and push mov push mov sub cwtl mov das outsl loop xchg dec xchg cmp (bad) es mov cmp loopne and pusha in mov mov clc mov add mov jge dec test int3 jmp out adc enter mov sarl xor mov jnp aad icebp mov jmp adc daa out sub mov inc mov cmpsb dec adc in ljmp aam sbb shr pusha loop push nop lea xchg cmp insb lods mov and and add dec xchg add sti loop fisttpl jmp xchg dec stos sub ret xchg and cmp imul test xchg insl cmpsb and and cmp mov ds lods hlt sbb push mov cmpsb bound (bad) dec cmp mov cmpsl or leave and mov (bad) jne int3 ljmp mov lcall or movsb jmp in mov sbb mov test and mov in mov outsl stos cwtl xor xor test dec xchg es dec jle cwtl adc sbb (bad) and jno adc into xor fsubrs stos lds mov dec and pop cmpsb imul or ljmp loope push sbb sub xlat mov xchg jmp mov and dec cmp data16 aad cwtl mov icebp push mov insl in sbb sbb pop sbb inc rcrl sub ja movsl mov xchg shrb movsb lock (bad) out jmp cmc outsl inc mov jmp xchg mov pop push jb sahf es loope xchg in aaa mov iret test (bad) push stos mov adc rcll mov dec adc xor xorl loope and and pop mov mov cmc bound and imul ljmp loop jecxz lods mov out test int push scas adc loop sub popf loope jbe imul arpl xor sbb fs stos popa loope shrl or sub mov or inc fcmovb xchg fcmovne mov icebp pop fwait mov rclb and dec sbb push (bad) sbb hlt movsl cmpsl hlt xor mov je insb xor repz hlt jp adc xor xor xor mov arpl (bad) mov push adc repz mov jb xor mov mov cmp repnz add sub stc (bad) lods push and push shrb mov sub loop jg cltd xor lods sub and nop mov sub and and mov sub and and cmpsb rolb and and mov sub and and cmpsl rolb and and mov sub and and movsl rolb and and in les fnop mov loopne (bad) mov sub and sarb loop ret sub and sarb out (bad) mov sub and sarb jecxz ret mov sub and sarb out (bad) mov sub and sarb loope (bad) mov sub and sarb in lds fst mov hlt xorl pusha in jecxz subb lods jecxz subb lods jecxz subb lods jecxz subb lods jecxz subb lods jecxz subb lods jecxz subb lods jecxz subb lods jecxz subb lods jecxz subb lods jecxz subb lods jecxz subb lods jecxz subb lods jecxz subb lods jecxz subb lods jecxz subb lods jecxz subb lods jecxz subb lods jecxz subb lods jecxz subb lods jecxz subb lods jecxz subb lods jecxz subb sub in jecxz subb sub in jecxz subb and sbb sub and sub das mov sub and sub sbb xor shrb mov stos je sbb repnz lods dec and cmp (bad) push jmp xor xor mov mov mov mov (bad) mov mov hlt and (bad) repnz not mov (bad) repnz lods cmc and jo jb jbe jae ja or je sub cwtl repnz mov insb jb xor icebp mov insl mov jl add mov ja aaa push notb mov jbe sti ss add cmp adc stc jb lods or mov (bad) hlt lock arpl xor negl mov (bad) ja aaa insl (bad) idivb adc or je or mov pop imul push xor pusha adc sbb enter repnz (bad) or shrb ss pusha mov ljmp (bad) xchg and and in js in loop sbb insl sub pusha dec cmp mov jmp aam cwtl pop insl mov data16 arpl and jo ja jbe jne insb shrb push pusha mov sub and lods inc data16 jle hlt int cli cmp ss cwtl xor mov jmp ds push (bad) cmp or stos push mov mov xor xor outsl sub aaa dec fistpll pop xchg sbb push add mov rorb cs arpl je mov sub cltd xor mov sbb pop stos repnz fidivr mov hlt jge mov jl xchg sub xor ficom in xor call int3 fildll xchg adc in xor mov mov xor mulb jae sub mov mov (bad) testb push lcall pop mov xchg test inc mov clts insl fidiv movb repnz enter sysexit cmp cmc dec adc dec stc js sub into cmp fldl xchg fchs iret adc inc roll push cmpsl pop sbb or sbb mov (bad) xor sbb jno mov xor xor and xor fcomps sarb arpl xor mov pop iret mov jle add sbb ret and cmp pop test es xor push out (bad) je or (bad) stos scas adc inc xor dec iret decl xor cmpsl (bad) xlat mov lret int xchg adc gs xor enter imul dec cmc fadd in xor in lahf mov fadds push sub xor cmp ror clc jne (bad) xor push push mov jae sub or xchg aaa pop mov dec xor in fnstenv push xor es jnp das loopne push pushf fsubl shll lods xlat mov pop lret hlt jbe pushl xor mov (bad) mov lea std inc cmc lds jmp inc adc xor fmull das scas sbb dec add je inc mov add rorb xchg lcall sub add sbb xor mov and lds fdiv and in imul jb xor jmp sbb dec rcrl repnz faddl pop ret ljmp inc inc je in dec out icebp add dec leave sbb ud1 vpmacswd dec dec xchg xor jp xor (bad) jp pop js xor push mov pop xor adc sbb je lcall incb sti mov cmp add jae and jno orb sbb mov test pushf aas inc pop fistl idivb clc pop cltd lahf jbe add push shlb add das into mov fs or and add xor inc popa mov addr16 iret insl bound push pop and mov jg je sbb inc cmp inc out pop or xchg cltd call mov mov xor pop jmp jl sbb je xor mov imul std int xor xor dec es call push xchg (bad) sub mov sbb stos js stc push dec xor fnstenv insl scas mov rcrl cwtl sub fnsave xor push pop das jbe (bad) xor adcb dec cmp push in inc jne jb inc inc xchg movsb jl mov sbb mov (bad) aam stos into jg pop out or arpl jnp sbb jno (bad) outsb mov es hlt lock mov fadd xor mov xor and xor fsubrl mov add arpl loop inc pop cltd lods mov push cmpsb xchg fwait jb and outsl pusha cld push lret xor mov cmp js xor push xor or scas fldl jg xor test dec pop xor fwait dec cpuid xor sbb adc pop stos outsl lea int3 xchg insl xor repz sarl mov xchg xorb sbb les adc pop adc dec or jae punpcklbw popa arpl insl add je and cld aaa push clc cli cs adc inc daa xor (bad) popf pop push xor xchg cs xor jo loope jae mov negl test inc and fist jns xor ds (bad) adc (bad) sbb daa mov xor inc xor test xor pushf xchg mov xor push (bad) xchg hlt call or les dec and push xor test mov fdivs cmpsb cltd pop add push cld inc aad push jae mov (bad) adc cli or pusha clc dec xor mov clc xchg hlt push adc dec sbb sbb jno xor adc pop mov lret xor mov (bad) adc call xor and mov lock mov push pop sbb sbb jno push xor inc clc push push gs pusha sbb dec clc dec je dec xor push xchg pop notb clc or or repnz xor pop sub jbe jno je cmp inc xor xor pusha sub outsb adc insb add jno push add adc add push mov jbe xor cld cmp adc inc popa arpl dec adc jae adc int3 mov call inc sub xor xchg dec xor adc stos jno adc mov test pop lock hlt and lods jb loop sub push es cmp insl sbb pop xor add xor rorb insb movsl add mov in lcall lods inc repnz scas shrb pop xor stos and cmp sub pop dec xchg in pop idivb jmp xor dec xor (bad) xor cmp xor sub jne sbb or sbb xor xor sbb aam pop inc mov pop push push push sbb sbb imul mov xor adcl dec xchg adc jo xor cwtl sbb je cmp fldl hlt jp mov mov xor out and adc add jp arpl popa pop dec add xchg hlt pop gs add ss ja mov xchg fbstp xor mov mov xor push and sbb add outsb xor xor cmp cmp je push fwait ds push or jb in mov (bad) adc sub popa cs and fwait data16 movsb or notl add dec pop mov cld sub ficomp xor sbb xor pop add mov jns sbb xor cmc clc (bad) jo jge sbb jns dec or push sbb push push add cltd push add fiadd daa dec lods ss adc cmp roll test scas jne outsb add repnz sbb dec push sbb in pop cmp scas mov adc pop push (bad) dec xlat pop fist paddq xor mov mov push pop nop xor mov xorl sub mov xor xor fwait jne xor pop cmp daa mov add mov cmp sbb jae add mov xor outsb adc cltd cli sbb jae (bad) xchg clc movsl adc xor test pusha shlb jmp xor xor xchg pusha mov daa test add cld adc sub xor fildl jge (bad) mov push adc (bad) sbb mov into add repz push cmp aam cmpsb dec mov je sti jl int cld insb pushl xchg pop mov lods stos pop clc xor push push and fwait inc inc xor adc push xor sbb and mov xor cmp insb orl mov ja xor pop jmp fdivr lahf pop xor arpl inc push das in xor pop imul lock xor sub mov sti insl xor lds bound and add jae jbe popf add sub hlt ss push pop xor and jno inc ja and adc das lods insb dec aam sbb test fcompl xor dec mov xor xor rcll dec aad and lahf mov (bad) hlt dec pop enter inc pop imul add inc push sahf or pop sbb sbb add mov or push cld (bad) jne adc inc jae sbb test xor inc pop lahf or addb xor mov push and or jg scas adc fdivs xor out cmp dec rolb or xor add jecxz jge mov dec sbb jne mov scas clc jno jbe xor push jmp insl data16 rcr arpl lods stc imul push cmp (bad) sub fs jae insl mov or insb add or out aas xchg aad bound lret pop jns scas sbb adc das add add xor gs push test ret jns xor xor push xor (bad) and stos cmp adc jbe cmc lods and mov cmp fsubrl mov sub or mov insl stos jg pop cmp daa lcall sbb test jbe gs mov stc sbb dec cmp dec outsb movsw subb xor popa jp inc arpl repz mov adc cmp and mov (bad) arpl cmpsl dec xor sub repz pop mov (bad) hlt xor add insl jae gs test imul (bad) lcall inc pop inc adc fs std mov dec fidivr xor xchg jo pop fdivr or dec cli jne xor setbe nop dec daa pop xor sub bound pop data16 test dec mov xor daa stos imul mov ja and cld hlt ljmp xchg gs push dec pop xor ljmp mov (bad) hlt jo mov mov ds sub and inc daa andl xor xor hlt push cmc cmpsl mov xchg add xor inc icebp scas leave xor mov dec sub cmc gs pushf sub xor out cmp sti das adc (bad) or pop jno scas sub xchg cld push les fs ret mov test fbstp xchg (bad) outsl clc sbb jbe lods nop push (bad) push jno insl adc add inc xor dec dec pop mov push sub xor cmp dec subb hlt dec (bad) add bound ret pop or adc mov inc into xor jnp les xor (bad) or jae ljmp sti ds mov jne mov pop mov sbb clc sub aad push outsb push cmp cmp sbb ds xor or mov sbb scas dec scas jmp sub es sub data16 xor insb or jae dec xchg xor xor xchg fistpl inc sahf xor inc sti adc sbb dec lds call inc mov inc xor pop lcall xor aam xor pop mov pop add mov jno jae inc les and mov add push mov (bad) rorb mov dec adc push mov push adc aaa add cs lds mov adc enter add adc jbe sbb arpl lcall ret movsl sub gs bound test adc xor dec jb xor repz popa mov push fwait and jecxz sbb xchg sbb in inc inc dec sub cmpl outsb sahf lret dec insb xor adc gs add adc jno popa mov xor pop jne and enter das add outsb aaa lods fadds xor paddw add sbb mov inc xor pusha sbb sub (bad) dec pop xor pop add cli jb cld jbe push das out arpl adc jns jg adc sub sub add xor jp rcll or or push unpcklps adc jae jb sub insl mov sub jecxz clc aaa pop pop cld lods cli jecxz pop adc fwait daa xor lock jne sbb push pop (bad) and sbb insl xor push cli and mov jae daa jne sub js add xor fidiv shl xor out and mov pop mov in jno adc scas push xor cld call test or lret or xor inc mov mov (bad) xor dec dec popf lds mov mov xor pop mov and aaa jbe jno cmp hlt outsb rsm adc inc adc adc jae loope xor and xor and pusha aaa xor jne sub ljmp loop (bad) ficompl jmp inc xorb xor (bad) xor xor xor mov sub insb out mov lret cmpsl xor scas xchg sub cld xchg xor roll push xor inc cmc jnp cli in jns xor inc les cmp inc mov cld add cwtl inc repnz xor mov mov push mov push sbb push loope outsl adc (bad) fbld sub mov xor cs hlt mov jbe add jl stc ficom insb je ficompl xor ret (bad) add mov add sti movb in (bad) daa xor xchg xor sub gs out (bad) in mov mov out xchg movsl cmpsl sub mov sbb mov scas lahf mov jge dec xchg lret xor mov clc or jp jl push or dec jns sub das xor xor int3 inc push xor mov clc insb insl and fs inc mov dec mov cmpl sti xor xor lahf test (bad) call push cmp imul ret out loope xor stos lcall popa (bad) xor cmp xor jmp jb,pn bnd xor imull dec lock bound jno pushf xor int3 repz add je jnp xor push cli mov or ret aas ror inc lret jp inc mov xor ficomp and scas and and xor pop test push (bad) mov (bad) and or or sti and xor xor mov stc xorl jnp mov cmpsl sub xor insb adc jl xchg hlt jbe mov cld pop (bad) xor add call and jp mov dec adc and sub pop aaa rcll xchg pushf adc or sahf or enter adc xor sbb pop loop and fnsave push aaa and (bad) cli xor out popf pop movsl pop mov and sbb sbb xchg pop push and and (bad) in sbb les insb xor or or and daa sub ret xor sub adc das mov xchg inc sub stos dec loop and mov fbstp push es sbb xor add sahf pop mov loop data16 cmpsl fidivl jge xor add xor mov les jl pop sti and daa subl rolb add jg pop xchg jae or mov popa adc adc repz adc or xor shlb out xor xor mov clc daa adc pop adc fisubr pop and lods sbb push stc pop mov repz jb ss cs in xor jae xor xor (bad) or xor xchg aaa (bad) mov shrl push pop inc pushf aam das leave les xchg ret sub xor cmpsl add sbb and xor sbb and add icebp add clc jb cli jns stc push aas xor mov add scas clc sub ret inc cld adc ds dec and dec sub sub ds std adc adc or rcrb xor xchg ret lods or arpl mov add mov cli sbb pop pop fwait xor and sbb sbb sbb sar xor sub cmc pushf sbb xlat xor xor xchg xor xchg or (bad) and cmp cmp sub sub pop xor xor sub sub clc (bad) (bad) xor sbb xor shrb adc mov btc cmp inc adc clc inc adc cmp fisubr fsubrs repnz cwtl pop sbb pop je enter or int stc faddl fidivrl or (bad) in xor lcall pop cmp lahf sbb js je mov nop and dec gs movsb cld lret xor sarl ret xor aad shrl (bad) scas fldcw repz paddsw mov je pop mov test hlt scas xorl push ja push jno jae out and dec je push cmp inc dec cmp dec xor testb jne mov xor lock in mov ret mov push mov aad dec lret mov rcll add cmc jecxz sub ficomp je add out inc adc imul loopne (bad) fcompl je pop and push out arpl jp test xor inc sbb and dec imul pop push pop push adc or dec ret jno dec xchg xor loopne xlat (bad) or (bad) fcomi xor fs jne ret adc mov lcall xor insb stc aaa mov inc pop sbb adc push pop mov ljmp mov cmp insl xor push pop mov lds pop xor out inc lcall mov cmpsb add jnp push int pop adc xor xor cmp push xchg inc (bad) push push rclb xor pop ret lods push je int dec lea push iret incb hlt push add std das mov and sub xor gs aam and bound insb loope cwtd push push in sub sti stc xor nop cmc pop sub loopne jb hlt mov loope movsb loop stc shll das dec adc (bad) cli fstl push xchg fcoms shr sub pop scas adc repz lea jbe dec fs xor xor loop adc dec fistpll xchg shrl popa xor jecxz sahf pop xor movsl cld sub xor mov jnp rcl adc jle cld push jne je dec flds sarb test pop ljmp xchg and xchg call les xor adc mov rcrl insb cld shrl cmc xchg and add scas xor mov sbb cmc inc push (bad) jp mov subb pushw pop aad cmc add sub cmp stc or sub popf hlt in sub ljmp xlat jg mov jp leave or in mov add loop aas or fildll or jp sbb xorl lods xchg pop (bad) xor ljmp stc pop mov clc addl enter mov outsb pop add lahf std subb jne xor les sbbl movb loop repz jge add lcall xor jbe or sahf or push xor lds das mov or repnz lret push xchg pop mov pusha pop call xor mov mov xor jge sbb xor rorl sub (bad) jne cmc je sub mov scas add je jno jmp mov mov mov xor pop or popa or cmpsl push xor out lock xor pop mov or aaa push mov xor add leave mov xchg or push movsb outsb mov dec cld xor push jo and pop scas pop daa clc popa push fstpt push inc in xor out pusha (bad) hlt loop or pop xchg sbb das fwait xor test mov xor xchg push add xor xchg jno std in cli test or popf mov and hlt mov or mov push pop repnz push es inc mov (bad) int3 xor out push jne lret mov mov je popf adc cs adc xor cmp cmpsl cwtl xor dec not (bad) je into mov add addr16 lds push xor test lods inc push mul das and or xor (bad) es fsts bsf pop add cmpl movsb aam imul ret hlt mov dec mov mov sub es mov pop int3 jge jb adc push push jmp add repnz jg mov push icebp mov push in cli fstpt xor push xchg inc and out ds test outsb aad pop add dec jle (bad) jnp xor shrl push js mov push add cs sahf rcrl inc inc cmp mov je xlat pop aas fldl (bad) lock insb and xor cs test enter int3 xor out sbb xor push fwait push cmpsb xor inc retw and stos imull pop and xor jnp mov (bad) mov mov pop dec ss adc and cs loope fdivs addr16 pop xchg add xor das cmpsl scas movsb xor divl jb es icebp mov xor stos fdivl cs stos jno sub into les sbb inc daa sub sub (bad) fs mov xchg adc pop cmp jne add ret or xor sbbl jmp xor movsb and xor test out inc hlt jle stc sahf mov xor mov ss xor jbe xlat pop sti aaa hlt enter mov mov xor mull xor inc out xchg mov push mov subb ja and inc xor (bad) pusha mov xor cwtl scas pop ss jnp loopne inc jno dec xor addb lea sbb or stos and je sbb (bad) sahf test mov rol clc adc adc add mov xor gs enter cmpsl outsl cmp push mov repz cltd xor movb fnsave subl or popa add xchg xor rcrb scas push and in xchg jmp dec adcl xchg push sti (bad) jae adc push fdivr cmp sbb enter aam adcl jnp enter adc add sub mov and andl ds pop out sbb pop and adc hlt and dec lcall jo imulb outsb mov les jge int3 xor or inc mov sahf shrl dec (bad) je jns sbb aaa call popl and dec xor xchg fs cs out xor dec out dec sbb and mov cltd xor pop out imul xor pop adc adc leave cmp pop jno mov xlat insb vpunpckhqdq push jno xchg lret aad xor mov loop xor cmc cmp dec rorb push xchg xor adc push xor es mov call push adc pop hlt sub ljmp push lods imulb enter pusha dec dec repnz xor lods popa pop jbe inc cmp in insb xor jl mov xor sbb lea movq mov push jg dec pop add dec adc jl add out pop pop mov cmp fnstsw (bad) mov (bad) (bad) xchg and xor insl or je inc xlat nop xor stc or mov in and xor cltd mov test les ror ljmp pop enter out and mov inc mov adc mov stos and add pop push fdiv push (bad) ljmp pop jl and or movsl lods xor int movb (bad) std into sahf stc cld jp xchg pop mov std adc mov inc js hlt xchg xor mov pop adc xor imul mov ret insb xorb push fs fcompl xor sbb int3 cmpsb add cmpsl mov push (bad) fmull push shrb adc jae xchg rorl push mov xor (bad) xorw (bad) jb cmpsl mov mov xor imul repnz xorb imul loopne mov add add sbb insl std out pop (bad) xor lahf mov cli mov mov jle,pn adc push sarb cld dec and lock mov scas push in xchg push addb cld orl cli fdivl xor adc jg inc cmc jo xor popa les sbb (bad) xor add rcll push xchg xor loopne scas rcrb xor pushf jbe push xor xbegin icebp dec mov stos int3 sub sbb popa in add shr jo xor add outsl xor repz insl xor fwait push in dec sbb mov fdivrl add (bad) int dec xor xlat and xor ss fidiv call std fnstcw jb in aas fidiv pop in adc pop pop sahf addr16 jno outsb (bad) jno inc fdivrs imul pop mov enter int3 cwtl jb xor xchg cli adc inc add iret data16 mov sub (bad) push aad aam jae inc jge in out jmp das push adc xchg adc mov jae and aas sbb xor push es cli jle xchg xchg mov in out mov dec sub (bad) xor mov jmp and int3 mov or pop jae aas hlt adcl not mov adc mov jne inc daa sub cli mov mov xor jne pop ds mov mov nop inc jae fcomps fiaddl hlt push sbb dec jae mov xchg mov sub jmp push ss xor pop mov adc lcall inc push add xor ja out xchg mov adc (bad) lock cld (bad) int3 test repz fisubr jno pop xor push cmpsl scas loop add rorl and lods scas jne sbb sub inc faddl roll adc mov fwait jecxz xlat xor sub add mov inc cli mov or adc mov add inc in sbb adc imul push dec je enter sub sub pop jb push jo or cld (bad) xor cmpsb insb cmpsl jno jecxz ja,pn xor (bad) pusha nop inc push in push stos add inc xor xlat push aad nop leave bound repnz jge pop sub mov push repz xorl ja push arpl popa mull repz add (bad) and repz lods jmp testl ret sahf inc sbb aad or xchg mov les je jno xor mov push mov inc (bad) xor cld insb inc lahf xor add rorl mov rclb sub popf add xor pop add cmp cmp cwtl (bad) scas rcr movsl xorb fwait pop imul xor es jno repz add sbb or popf pop outsb in scas jg push insl loope dec push mov out imul mov push je std push cld lret int3 push shlb in pop add adc lods push sub popf repnz xor (bad) and rcrl (bad) xor nop jno ljmp pusha divl push xor insl dec fsubl push cli xor add mov ljmp fs loop jnp push hlt and sub xor mov pushl sbb jb sub xor insl sahf stc xor xchg mov jb arpl in or in nop mov stos andl inc or test stos cmpsb jge adc call leave jle (bad) add ss pop pop xor and and xor mov bound hlt cld int stos xchg sahf (bad) sbb es and jb adc daa ja mov fwait xor inc test mov (bad) mov inc pop jae hlt clc sub push xchg xchg sar add inc adc xlat cmp cld xlat jne xor pop sti fwait jg lods xor xor fist out pop xor in ret outsb into adc sub sahf (bad) jmp es sbb xor xchg pop xchg cli jp jae mov outsb clc xor xor test js xor xchg (bad) leave xor dec test imul ror (bad) mov adc add jecxz sti push outsb movsl inc adc clc push sbb or test mov sbbl and js xor (bad) xchg adc mov adc sti outsb jno stos pop aaa xor (bad) xor cmpsl cmp aam in and popa mov xor mov shl xchg xor mulb fs xor (bad) jno das nop mov leave push xchg xchg lock lret and cli aad mov mov icebp hlt ss (bad) fs ljmp out je mov loope hlt loop loopne movsl pop sbb out or push xor mov jmp das xor insl stos insb xor lret icebp int3 sub (bad) xor jge jo inc decl mov xor pop adcl inc mov outsb shll or ss xchg incb repnz jns add cld ja ret icebp or out (bad) nop hlt (bad) mov add shrl insl imul adc bound xor imull xor pop lods jg xor pop mov mov out and mov xor fdivrs pop and inc and jg sbb or push push xor cli fucomi sarl xor iret or movsb mov pop fisubr ljmp scas sbb mov or xor xor cmp ds xchg scas dec adc sub jp xor dec or push jle mov adc cwtl hlt push lds or cmc push es pop gs insb push aad xor mov xor cwtl pop pop clc hlt sbb adc xor pusha mov inc stos repnz stos bound cmp ja rcrb xor xchg push mov jns xor jns lcall pop outsl xchg or pop sub push mov gs nop jl,pn xor jb fxch xor and ss popl pop hlt xchg mov sub pop push xor mov add sub hlt or jecxz xchg xacquire or xor sub lods mov lods push xor xor pop xor push incl jb ljmp sub cld xor sbb or ds xor stos mov push xor icebp rcrb mov add fsubl lahf or inc adc jle mov add mov cmpb dec jg xor inc js stc jne inc jbe sub push inc scas sar scas cmp cld push cs jo xchg daa xor stos pushf xor mov lods cmc (bad) cld repz inc mov sub int dec bound addb lock cltd pop jg xor xchg loope push movsb rcrl adc imul mov (bad) dec xor or jae insb mov ss mov in es push jae dec fnstenv push or out sub sahf mov xor mov or cmc lret ficom ss test aaa push xchg mov aam (bad) icebp in jnp cmp movsb sbb pop xor jle mov ss xor xchg insl fcoms mov je jo and daa test fwait int stos adc adc test add pusha or sub int3 lcall push xchg test gs sarb adc adc mov jg dec cld lsl clc pop (bad) test int jno xor sbb and mov adc dec jg pop xlat decl shlb cwtl nop mov dec sbb mov in mov cmp sbb mov je mov orl add xor out sub xor aaa in jl adc mov fnsave add clc out sbb ds mov gs jbe stc faddl iret adc mov pop (bad) repz add repnz dec jle imul adc sub stc xor mov inc in xor xchg scas xlat xor bound into jno (bad) lds push sahf mov test lahf mov lret loop push cltd lock repz mov mov xor push movb fwait ljmp aas sub insl sbb ja jecxz jno bswap sbb mov popf mov sbb lcall je push jno jmp scas jg push mov adc test xor dec (bad) xor pop lea mov mov fistpl fsubrl out std outsl mov mov imul jb jno or inc scas mov out pop jae cmpsl dec data16 adc mov and lock xor call in cli je jg xchg mov adc push xor rclb cld hlt jl fisttp add cs stos adc add stc jg sbbl push push xor add (bad) jge inc lods inc mov popa (bad) cltd test dec (bad) xchg mov or xor scas inc xor loopne pushf jmp sub fwait and sbb insl jg mov mov insb sbb mov gs movsb sbb lcall mov ret fsubrl daa lods fwait es sahf jns xchg pop push repz sarl rcll cmp lds xor enter xor pop je stos lods out loope loop fcomps fisttp push push push xchg push popa jmp pop hlt in insb lcall popf mov inc pop cmp jo and sbb ljmp loopne xor cld push nop inc (bad) or jbe mov or pop jg leave dec cmp rcr lods lds jo out xor push pop add in cmp or adc rcl pop in xor loop out pop outsb mov adc test dec jne adc xor mov pop pop pop and in hlt cmp add arpl jnp loop mov xlat mov divl jae sub loope sti je repnz inc sbb adc insl stos rclb jl out push mov xor pop jmp movlps or or mov les mov clc popa xor pusha insb lock push xchg cmpsl add push movsl movsb mov adc sti and ja jno jb jnp rcll xor insl incl push arpl sbb pop clc add xor jnp mov push dec punpcklwd push xor movb mov pop movsb sbb xor and popf mov addr16 xor divb jge push cmp fldt pop stos xchg sub ret outsb mov lods dec lret mov pmaxsw fs pop fcmovnu jo push (bad) or cmp lahf std jmp je jno icebp sub xor and minps dec mov inc (bad) xor mov inc cs push pop (bad) outsl mov or xor and sub into ljmp add pusha dec idivl sub jnp jp ja fwait jno test fnstenv test xlat pushf cwtl inc xor cmp (bad) (bad) cmc add ret (bad) das mov add loopne daa cld xor or mov adc xor imul xchg jno repz add xor or rcl jae xchg lea add hlt push addr16 daa inc icebp stos fcoml mov gs lods es mov push daa out cmp repz jge sbb xor mov mov mov dec cwtl ss es mov imulb lock mov (bad) jb fstl push (bad) sti mov dec push iret sysexit adc nop lock push sub das and xor push push sbb shrb arpl jmp in loopne and daa mov mov (bad) cmpsl sar call cltd outsb data16 shrb hlt jae in les pop xor xchg mov inc pop (bad) je mov jne aas out mov and dec (bad) xor cmpl shrl push push xor mov xor add mov ljmp inc push ret (bad) xor loop arpl sbb and or xor xor aaa add into add (bad) sbb test xchg dec add lods out and mov sub rorb mov pop out sub (bad) dec xor sbb xor cs fdivs push sub fdivl aad stos pop das (bad) pop pop push pop pop mov xor icebp mov pop aam and std lods xor and mov mov outsb cmp mov arpl mov xor adc addl sbb mov sbb rcll jbe gs sti inc fisubr in adc cli int jle xor dec out stos xor mov xchg (bad) hlt inc sahf mov decb mov pop add jne add mov cs orl test inc testl je (bad) and and lds lret sahf jo mov mov lods xor mov in sbb xor les mov jbe out cli sbb jno into out stc sub pop xor test push les xor std xor repz stos fnsave ss ficomp lcall mov sub mov xor inc cmc jle lret add jge xor lock fs jp aas and xlat cmc aam cwtl (bad) jno leave push adc movsb dec lret es xchg mov jns push adc js inc jnp mov pusha add adc inc lret dec push jle sbb mov adc inc icebp or push or xchg je push add movsb ret pop into loop xor out cli pop jae jne repnz dec (bad) or sub sub int mov fwait pop mov shlb push jp (bad) mov sbb lcall adc push xor mov jge add cmpsb es xor into in xorl sbb adc xor mov or (bad) hlt clc mov push clc inc cli xor xchg ljmp mov sbb inc push test lods shrb repnz scas push (bad) or cmp jle incb add cmp push jne xor push movsb inc pop xor cltd mov (bad) or xchg test in inc lds ja loopne mov popa sub fwait mov scas mov test shrl fwait pop jo jnp dec bnd cld clc das xchg jg inc ljmp xor enter jae rcr xor cld jb fstps stc jle nop ss lods mov mov pusha fidiv xor and fidivrl and jg hlt lea das xchg imul and xor cmpsb ret je (bad) cmp jae push adcb out push das mov sbb mov lret adc or dec ret adc iret inc push xor dec mov mov xor push fdivl jl pop and lret fcoms xor imul (bad) mov jmp pop (bad) into les incb or xorl ljmp jge clc dec hlt jl adc mov jnp push cmp inc int3 mov push jns adc xor sahf sbbl rclb mov das pop add xor jo sbb cmc xor inc mov adc loopne cmp push in sbb xor fsts sbbb mov jg and loopne out pop mov out fdivrp jae and lea mov stos bnd repz sbb xchg cwtl dec sbb adc das and aad sarb mov jg jno mov ss daa xor lret sti cli fidivl or push enter pop mov fnstenv insl xor hlt jne or xor push push push je mov and xor aaa stc jecxz xor aad adc mov popf pop pushl xor js jbe xor outsl (bad) cmc enter int3 jg and xor inc xor call int3 mov (bad) xor mov out out xor lea mov xor pop pop sahf dec mov inc scas xor jle ffree push xor mov push jmp mov test rcrb xor push xchg fs or mov jge (bad) cltd pop jg stos pusha cmc and ds lret adc inc and xor push sbb (bad) mov sub xor ja xchg push repz repnz cs xor test sub lcall call mov pop adc fisubrl es ds jmp lahf fnsave aam sbb xor push test fsubs mov pop or or add jecxz or fstpl add sahf pop mov sub and pop addr16 cwtl sub addr16 jmp xor shrb scas dec mov push xchg loop lds push mov out (bad) inc repnz cli (bad) (bad) cmc pop mov jns aad inc push mov push movsl cmpsl leave sahf ficoml mov pushf inc ss sahf mov adc add lods fcmovnbe subl cmpl scas cltd fisub mov mov jle fldl inc call and sub mov rep xor test (bad) insl out sbb xor (bad) ss out mov (bad) push push xor fisttp jle sbb fmuls or sbb in test dec (bad) test xchg push cmp loop (bad) lea cwtl loope push fsubrl and shrb pushf xchg sbb scas aas rorl mov push sbb or rcrl xor loope push pop sub lock pop cmp rcr pop push pop mov (bad) (bad) int dec jg or cmpb mov (bad) dec or dec cmpsb or push movsb xor loopne aaa dec sub and call (bad) push mov sti add mov (bad) pop sbb sub xchg and repnz in iret dec test in push pusha and outsl pop mov jmp pop xor and lahf push outsl int or sbb es in lret pop sahf mov inc jo cmp icebp fisubl cmp pop xor (bad) and sbb pusha int pop xor xchg cmp jns rclb imul in out insl mov pop and stc mov jg pop add sbb in pop in inc mov push inc mov or test pop mov mov inc clc cmp cmp adc push adc xchg push sti push bound mov sub mov (bad) movsb shrb xor roll xor gs movsb js cmp mov dec loopne dec incl dec (bad) ds jne pop sub push mov dec enter arpl fsts ss add sahf flds jle nop (bad) mov les das loopne in lret loope add push fisttpl jle inc sub push insl mov sub ljmp loopne mov lods cltd aad xor mov push pop movsb lods scas jecxz or or mov mov cli incl data16 pop push sub xchg rcll stos xor jb imul mov mov in sub cmpsb (bad) leavew stos popa cli jmp mov xor add or leave lcall jmp call sub pop add shll int sbb mov in xor imul popa mov dec push xor mov sub enter xor mov mov dec xchg adc add sbb roll mov sub (bad) xor xor stc lock sbb fchs pushf adc daa mov mov jp movsw xor in pusha imul sbb sbb dec (bad) xor out jp sbbb and sbb pop cmp fwait ljmp sbb gs pushl mov daa pop in jo adc adc dec out int sbb pushf cmp movl inc cmpsb cltd mov gs int3 sub scas and mov in sub jne mov and push mov mov adc adc imul lahf xchg imul cmpsl pushf ficompl push mov sbb scas int3 lods dec inc scas popa mov data16 std (bad) cmc (bad) cld in mov fstl mov mov inc dec sbb xchg (bad) add jno (bad) mov lret xlat mov call mov xchg loope adc push insl xchg adc xchg ljmp and xor push shlb hlt mov push inc push jl xor loopne mov mov xchg (bad) push pop sub arpl daa sub hlt add mov cmp aam xchg hlt sub adc scas adc xor add sub xor mov add ss out xchg hlt sub test sbb aam and mov and xlat and and lea and or cld xchg push arpl push xor cld sti je clc punpckhdq and sub mov or push shrb and sbb insl lock jl sub cs rclb jo mov mov add push fildl in sti sub sbb hlt jb add mov sub sub sub adc xor push (bad) je sbb adc sub xor mov push mov or sub adc or adc xor aaa andb adc stc std push adc xor outsl mov pop adc inc xor jne xor outsl mov and sti xchg adc pusha add and xor adc sub (bad) xor push xor add sbb and add clc out dec stc sub mov or sub add out mov ja or incl xor in sub es xor add and and das daa (bad) hlt jb in cli hlt aaa pop loopne out push xor push sub pop push adc insb adc adc sub add adc pusha and call mov pop in and outsb (bad) out repnz cli mov daa data16 or clc loopne scas or adc adc repnz imulb or das (bad) xor loope sbb add xchg incl (bad) xor and cmp divb and (bad) fdivs in adc (bad) lcall cld mov outsb clc pop pusha and mov adc clc lea sbb sub xor (bad) idiv adc das adc cmp rcrl add (bad) in and inc adc fcom adc mov sbb or xchg incb push ret or cli jne (bad) cld in adc sbb xor push cmp add push jl xorb xchg in xor sub mov inc xor cld jne repz (bad) xor lcall jnp into icebp cmp cs das arpl fimull shrb xor xor cltd sar xor add mov mov cmpsb iret (bad) cld stos jne sub add (bad) mov ret lods dec mov roll mov jnp xor jnp out je adc js sub jmp in xor xlat push inc sti cld lods xor adc and scas arpl jnp xor push mov pop outsb jae popf jg pop mov adc pushf orl in in inc pavgb negl mov mov mov daa jae push arpl enter mov ss sub xchg addr16 lahf xor cwtl (bad) pop push stc cmp pop int3 mov and inc dec cmp jae cmc adc lods div mov and add xor and xor xor es insb ds add push lock pop sbb (bad) aaa fwait imul xchg sbbb push lret popf adc adc aam int3 xchg xchg push push cmp add inc bound push sub es std in sbb inc sbb fadds jne push mov adc cmpsb shrb add pop cmp sub xor xchg sub inc xor and clc clc sub xor sub push lret cwtl mov and mov mov mov stos add in sub rolb bnd lods fisubl mov js lods xchg cmpsb (bad) ss xor mov call jecxz jmp inc jl fs sub je sub add mul and fsubrs add xor pusha or lods mov sbb out cmp hlt aaa aad (bad) (bad) adc and int3 sub cmp adc lods stc aam std dec lock xor pop mov add sbb test pushl and and add (bad) ss pop mov ds pop movsb sahf scas in xchg dec xor or xor loope or or and movsl mov and jecxz push shrb cld gs sbb sbb lods and clc sbb stc mov sbb aam repnz adc push mov loope adc js paddw mov push add and loope push add mov lea lock cmpsl hlt mov (bad) sub pop cld ss and inc adc or mov fisttpll xor and sub pop adc fisub movsl sub add pop push loop push cmp movsb push out jns adc mov adc adc inc scas (bad) ss add out mov psubq nop or sub mov xchg push sub sbb and add push adc pushf xor and mov xor fdivs stos pushf fmull popa xor xchg sbb adc ret and loop and inc sbb es daa mov sub test sub mov pop notb or std ljmp sub adc xor js insl adc js outsl dec out sub adc popa clc mov ljmp sub push adc bound jle sub js push sub ret add aaa ljmp mov push jl in adc arpl call xor movsb pop dec xor sbb mov sbb int or xor int3 sti and and jo and jl and or sar and adc xor fldt (bad) or dec (bad) xchg sub out jbe xor lods enter push or sub or mov insl sar add or sub sub insb jmp ja and inc sub inc sbb push in and pop insl xor adc aas adc lods cld push adc jl int adc and sbb xor adc push in hlt dec loop add out push or pop or sub inc add mov sbb xor and xor call daa sbb scas adc push xor add add push sti push insl mov in xor add or xor (bad) sbb pop xor push ss and in xor movsb adc jge sub push jge sbb das pushl arpl sub arpl mov dec in daa or push jne insb mov in mov lahf std ljmp mov dec push rcrb cmp mov rol (bad) ret movsl and mull push xor push in sbb int adc cmpsl pop add jecxz jne sub inc pop adc pusha and mov adc mov and ja rclb xor adc mov cli sbb and adc add aaa ja and and mov and aad xor scas in jge xor xor adc (bad) out or and (bad) popa out xor sti mov sub xorl push and and or mov jle pop add add jnp fistpl pop and sub push cs sbb cs adc clc std or sub ss xor mov pop push adc ljmp (bad) int iret nop mov and xor imul scas lret nop jb xor jge inc cmp xor jecxz or mov out jmp pop or sahf xor jl fsts sbb inc arpl test mov and pop sub enter hlt dec mov jns hlt add jns jge xor jge insl out xor ret inc mov xor (bad) jmp xor push daa outsl icebp das test xor inc cmp popa xor loope sub mov nop cmp push add xor sbb adc sub std xor sahf aad mov and (bad) mov lret cmc xchg inc mov xor movsl and test xchg adc pop pop mov mov js das adc fdivrl mov xor (bad) mov xor test cmp out mov push ss xor add xor add cmpsb or xchg cmc sbb das sbb fwait lods xor and xchg jp test mov sub and fidivl jns test push mov sub and fwait js xchg and mov or and shlb (bad) and mov sub and rcrb lods sbb and sub adc int3 clc sbb and add mov fwait pushl sbb sub and (bad) aaa lods xor adc mov sub and lahf loopne test (bad) negl (bad) rolb xchg mov sub and and stos (bad) xor and xchg mov sub and shlb lods mov xor cld pop mov sub and and fwait rcrb mov sub and adc lock add xchg stos cli enter sbb and cmpsl shrb and sbb lods lea adc adc sbb and shrb test adc xor (bad) mov cmpsb mov sub and shrb xor pop rolb and cmp and and pushf xor jg xor and rolb lods or adc cwtl mov sub and (bad) mov mov jge fmulp and add add add or cli fdivs int out add add pop xchg rcrb xor bound push lods repnz and mov sbb and pushf xacquire jnp jb or idivb jo lods repnz pop loop sbb movsb lods repnz repnz or adc jecxz inc test adc divb repnz push test or add adc mov and xor cltd in (bad) lods repnz (bad) mov loopne and sbb xor int push lock repnz movsb sarl dec sbb xchg lods repnz repnz xor adc repnz jo hlt and xor repnz sub and (bad) jno pop and sub ja mov sbb repz jb out and xchg mov fwait add lock out ja mov xor cltd rcrb (bad) mov or adc push inc mov test cld push sbb xchg jmp dec hlt fcomps mov jmp jnp arpl xor pop mov xor push jge lods jg cmc or mov fisub dec popa sahf adc leave mov jae xor jb xor adc ds dec aaa test cwtl cmc cmp add xchg cmp adc and sbb or jo xor mov sub push xchg cli push sti adc jbe shr rcrb daa inc sbb fucomip icebp mov sbb adc je mov int mov pop popf xor int3 jb xchg hlt dec push pop imul cmp mov push jge cwtl xchg nop mov cmpsl sbb pop adc add iret xor push scas leave test lods rol es sbb push xchg sub lods jp xor lock pop xor test adc lret loop fmuls xchg scas ss bound and nop adc popa jl jae lock in sbb jno sub ljmp xor fwait (bad) mov jno in (bad) cld lods add xchg ja sbb jle popa add jl int3 fistp push cli stos je sub jmp and xor mov in add add jns (bad) divb cmpsb mov movsl cld mov mov mov or aas mov mov push aad in jg outsb inc lods xor sbb jne sbb out in push rolb js scas mov test pop aam flds xor push aaa mov push xchg jno sbb pop xor sub push pop ja mov cmp mov loope out inc lret (bad) hlt dec dec notl aad pop or ss aam jp pushf sub outsb adc testb cld decl sti lods push or sub mov xor add pop dec cmpb pop mov mov hlt sub hlt jbe (bad) cmp mov popa sbb es test shrl (bad) lods xor es sub and pop sysexit mov jno xor (bad) pusha dec je lock adc sbb xchg adc xor fwait pop sbb xor xchg lods (bad) lcall fsubrl and xor cli push jge xor jecxz adc hlt sub or cmp adc xor fbld aam scas pop pop xor xor leave stc push jae out ret xchg xor divb out jecxz adc sub xor nop inc dec mov xchg in cmc dec in adc mov pushf push in les pop fistp fwait mov cmc clc xor (bad) pop out dec fbld push mov mov inc arpl (bad) and ljmp fidiv ret push into mov dec sarl leave mov cltd xor mov les je push ja xor sbb sub and pusha jne arpl icebp mov lock hlt cwtl jbe push cmp cmpsb in daa mov pop jg in scas (bad) sbb xor push xor sbb fidivl xor aaa push call mov js push add push movsl xchg push popf inc hlt mov mov inc out xor push push sbb insl js sbb add jne mov pop xor mov xorb cld pop outsb sbb pop mov dec (bad) jb add decb or nop or inc movsb adc and lcall aas popa dec or inc sub mov mov nop popa xor mov bound movsb mov rcll idivb cmp add push mov or jge (bad) cli mov in in jo cmc (bad) fidiv fcomps cmp xor xchg jns push les mov xor cmc aaa push nop jns mov adc jae push jge in xor xor mov cvtps2pd jbe xchg add popf out inc cmp lret cs fdivrl pop jp popf mov mov movsl mov dec hlt mov out fcomi xchg sti in add xchg dec leave call add ss adc insb or fldl xor inc mov push sbb xchg or jb push mov xlat xor adc fcompl mov mov ret xor xor push sbb cld xor cwtl fimul (bad) in ret add adc orb mov push sbb push fwait jae mov je jne int3 aam cmpsb add xorb cwtl rcl dec cmp (bad) or or (bad) xor cmpsl jecxz icebp mov leave (bad) xor rep das push gs jne sub scas jecxz loopne in test and popa adc xor divb insb hlt mov or repz sub loope add xor mov push or iret xor pusha lea cmp xchg cmc inc fidivrl mov divl push dec pop adc out shll cld xchg xor mov (bad) out adcl xor scas push jmp shll push xchg mov or out dec push mov mov adc in inc cld dec sbb cld pop mov shrl adc mov or push xor sbb jne adc pop cmpb stos cld and mov aam daa and add fdivrl outsb sub mov and pop into xchg pop imul daa clc out and xor xchg pop les mov leave mov or ja xor popa pop and xor mov pop out inc mov (bad) jb sarb fstl jne popf loopne pushw aam lods inc fs neg sub cmpsb xor cltd sti cvtpi2ps xchg inc inc cwtl lods je push mov sub fidivr scas jno push (bad) mov xchg jle xchg in cld sbb mov bound flds or xor dec dec outsb (bad) sbb rcr xor stc out xor lock push cld (bad) xor stc scas shl xor subl sub xor mov mov hlt cmpsl adc aad dec add (bad) jg shr and in xor (bad) ljmp cmc enter inc and jne loope (bad) das sub xor pop lds sub rolb aam add daa mov xchg xor adc jnp add jp xor jne add ja xor sbb or out inc pop sub movsb jg sahf xor cmp fstpt imul jae lds imul xor adc out stc mov dec jb sbb sbb xchg imul je cmc test add or cwtl sbb les add mov xchg ss mov cld sbb sbb sub inc add push xor in xor mov out jo test sbb jae outsl (bad) mov ja jno popa lods xchg and xchg call divl je cmp xchg outsb dec xor sub ret stos pusha xor jl pop jae or push pop mov jne push test sub jecxz int3 xor aam icebp inc sbb pop mov negb xlat and pushf aaa (bad) punpckhbw or add mov sbb test lds xor xchg dec dec xor test dec cmpsl sti call and loop popa lds mov mov test xor sbb aam xor inc inc push xor data16 adc int ret inc std add repnz nop dec pop xor push je and push push xor imul xor mov xor jbe into scas hlt aam mov xchg (bad) std sub mov add add pop xor ja pop dec pop lods jno in push add jns ss cmp mov mov xor int (bad) fwait xor das sub cmpb addps mov jge sbb jmp lahf adc push inc pop xor push jbe inc or mov cwtl and jecxz push xor mov out xor mov sbb sub hlt sahf or xlat in xchg push dec push mov nop leave fiadd stos ficoml hlt jbe mov sub sub mov pop outsb (bad) ss jle enter cli jae inc xor ret rcrl dec hlt cli fisttpl fcomps jecxz pop pop mov aaa leave je mov repnz sbb je adc mov sbb pop push and mov xor out pop adc mov mov sub pop ds xor fucomp je xor add xchg and adc mov ds xor cmc sub sahf in jno pop hlt fild incb push xor pop jne rcrl call push inc leave xor pop xor add mov mov xchg (bad) mov pusha inc pop push push mov das pop hlt and push inc dec cmc jno sbb nop das and out arpl xchg sub sub and mov rcl cmpsl (bad) mov mov pop xchg lods dec divl call inc shrb out jmp repz mov lret divb sub mov sbb xor xor jbe std fwait outsb pop int pusha add xor (bad) xor xchg jae or and ret into mov xchg int xor (bad) hlt add loope xor adc adc xor lret (bad) xor or sub push jo hlt icebp imul mov ret push idivb out xchg xor es sbb ljmp sbb bound out mov lods div inc adc hlt (bad) stc mov jp sub sti jno loopne mov lcall push addr16 out cmp xor inc nop ss dec pop mov mov in sbb fnsave xor jne ret scas mov add repz mov xchg dec adc jae push or in in and xchg adc pop lds insl adc xor push add xor or xchg xor dec mov dec shrb int repnz pop (bad) popf stos xor cmp dec sahf jmp (bad) rol sbb xor ds pop xchg mov rorl pop add aam jmp xchg add fnsave adc andb jns xor jmp fist jae jmp inc out arpl xor fwait lret mov scas jae incl jle mov cmpsb int mov lcall cli stc (bad) jae inc xor mov xor add cs xor mov lcall xor jecxz sbb pop jmp lret add cltd call (bad) sub xor cld ret shr adc jle xlat jne js or je pop and inc sbb outsl arpl inc sahf lds or cmp sub sub ja andl fisttpl push jb (bad) sbb jge xor lods xchg xchg std (bad) int3 (bad) into inc push sar (bad) adc sbb (bad) test dec adc (bad) hlt movsb int3 lods xor ficomp ss and mov and std (bad) divb lods (bad) cmp xchg stos arpl out push popf and cmpsb pop sub xor jb xor push jmp inc xor packssdw jae in ficom xor in push sbb (bad) jne xor leave sbb pop xor lahf call xor pop rol xor cmp mov les xchg call fldt cmp xor dec cmp shrl jg push out or push repnz int xor daa xor inc test add xor mov adc dec enter or pop or pop iret (bad) adc (bad) je (bad) call mov nop cld lock mov xor push je test push push xor mov xchg and jecxz mov repnz sub in test imul jge iret cmc test add add inc xor sub sbb push sbb sbb jl jno scas lcall idiv jecxz rcrl mov xchg gs mov inc in cmp sbb stos int dec add scas mov adc jmp test lods cmc cld pop xor xor add xor inc mov out adc dec imul shlb sub in shll je push cli (bad) xor rolb mov push xor in add mov adc das inc jne aas mov inc jecxz mov mov bndstx in lahf in imul inc mov cmpsl push lret pusha jae in mov lods mov fsub xlat mov (bad) xor lods jnp sbb aam dec cltd insb sub push cwtl bound inc mov inc test int lock lcall js add stos mov push pushf notb cli aam sbb enter clc cmp ret pop xor daa scas repz lahf mov aas inc add (bad) inc pop dec xor xor (bad) fisttpll and xor nop insb cli xchg xor mov push lcall sbb in pminub sub dec pop xor push (bad) jne das jl xor xor aas xor sbb push mov pop push aaa and xor inc mov aam jmp hlt in inc jmp lock add clc push pop push and dec push les sbb stc or aad leave xor sub or enter xchg xor sbb or mov cmp cmpxchg jle lret jecxz xor aas mov or clc icebp mov push jnp cmp inc and mov mov ficompl adc xor cmp pop dec call je outsl (bad) xchg divb lret pop xor mov ret jle push in loope mov sbb insb inc xlat xor push int3 sbb mov test pop sbb and call les (bad) pop add jae popa sarl pusha in ss push xchg je iret shlb or inc fnstcw xor adc test jne movsb cmp dec pushf aam imul mov xchg add sub aas adc pop cld jl jnp js adc fmuls sub add add xor cmp sub cmp cwtl xor outsl pop push jns negb icebp fsubs lods das out push xor inc fisub sarb cli dec call ffreep je jns aaa out sub jle dec jb dec and out std xor mov (bad) xor sti popa sbb pop add jnp xor movsl mov mov call sti jecxz xchg mov gs inc mov (bad) aaa loop jg hlt fmul ds out cmp mov sub push xor iret int3 push cmp jb lret xor xchg and mov push xor pop insb adc push adc fcmovnu mov mov add sub aad test lahf lcall scas call adc repnz outsl lods adc les jg mov das stos test into arpl hlt mov movsl and xor mov mov dec cmp das xor btc xor imul out lods hlt push jne inc into xchg xchg jnp cmp xor mov xchg cmp mov shrb and add xor (bad) cs mov pop xor mov pushf xor mov adc pusha xor pop jns xchg jl jmp sub adc sub aad or int3 andb scas xor shl adc inc bnd jne cmp push dec sub xor pop call mov add jb xchg xor bound fmuls or adc scas movsl push add inc rcll dec mov imul xor negb xor add cmp jae in notl lret mov mov xlat inc cmc sbb xor sbb (bad) xor adc insl arpl les xor lock ljmp pop cli out xor aas mov jmp ret mov ror mov jmp fdivs fldl hlt push xchg mov test dec pop cmp sbb cli or xor sbb adc loopne xor jns lock dec outsl imul stos and out or fsubp pop pop lahf sbb dec mov js arpl negb jns xor jg mov or jne iret sub test daa movsb (bad) sub xchg add or adc xor xor and test arpl xor inc enter aaa pop mov test das mov xor imul in xchg je imul jno xor and sarl fwait popf adc hlt out xor pushf pushf pushl popl stc cmp push mov lea ja sbb and ror stc sub call dec frstor jb jbe fsubp out adc sbb inc cmp cwtl daa js mov mov hlt into lock rol jge bound gs cmp ljmp or rcrl mov test cmp fucomp mov fistpl rorb jge mov in sahf adc test push rcl jp mov bnd cmpsl divl or pop xor dec hlt inc std xor push mov int3 push cmp inc cmp mov addl jns jne jno insl repnz mov loopne push jp mov int3 adc mov push pusha call push dec inc dec dec xor cs insb add add je jns je insl push popa insb gs gs outsb je imul bound jmp popf popa jb scas out repnz xor ret dec das (bad) pop out xor movsl xchg mov add xchg insl fimul rolb out push inc pop xor or shr pop push adc cmp xlat cmpsl mov inc cmp pop addr16 movsl std xlat jo sbb xlat cs lcall addr16 jmp hlt idivl mov and mov mov push das addb aas fucomip xor insl push sub scas mov pusha mov sbbb bound inc ja push popf mov imul sub adcl add (bad) stos mull (bad) mov or xchg bswap rcr mov sar bsr btc bsf mov test sub pushf repnz jmp mov pop pushf mov movsbl seta bswap mov setno mov jmp (bad) mov popf fsubp inc sbb ds and (bad) test cld (bad) cmp dec sub xor popa mov mov jo dec imul imul xlat xchg adc pop popf push push or stc cmp (bad) ret jg loope inc movsb mov aaa xlat cs bound les push mov cmp mov jle in fwait cmp jmp push mov lret cmp loope xchg sub into aaa and add dec and add repz pushf ret mov dec pop adc xchg lock lds jns xchg outsb (bad) rol cli sbb call cwtl cmpsl (bad) fucomip xchg inc mov xchg pop incl imul movsbl jmp jmp push dec dec push inc push dec cs insb add xchg mov add insb jae out scas shl ss xchg mov ret mov sub push xchg (bad) roll inc pushf add mov out nop loopne,pn mov or push dec push add mov sub clc inc int or ret mov popf scas jne cmp ss xchg out lods sarb jo and mov xor incb pop fidiv stos popa jecxz loopne xchg mov jge push sahf lea mov dec pop imul jnp pop mov in sub xchg dec fsubl scas sbbl sar in mov imull add adc and cld or insl loop and in leave frstor pushf fstl ret jg outsb (bad) cmc test nop fwait pop fs push scas add pop xchg dec and xchg lods int sub adc es stos pcmpeqb push xchg pop ljmp adc inc push jae xor ljmp push movsb sbb (bad) movsb (bad) loopne (bad) faddp add and mov pop cmp sub out das push std dec adc or cs pop lcall mov cmpsb cwtl add stc push dec xchg push xchg dec pop mov push mov mov inc lds dec add jmp xchg mov pop fs push sub jge lcall push cmp mov xor cmp add hlt ljmp xor leave mov mov fsubl jmp and adc jp (bad) outsl ret adc pop cmc dec mov adc push pop adc sub push inc push inc add cmp (bad) popf mov outsl pushf and cwtl mov add sbb cmp ljmp inc scas xchg faddl lahf cmp mov (bad) js pop repnz icebp (bad) ss in or cmp cmp sub mov mov xor clc mul sbb and das iret into cli addr16 jle push bound pop sub js xlat jbe push inc rorb in stc sub dec lcall push jbe in mov jnp (bad) xor dec push sub inc fsubr adc (bad) sub mov stos push xchg jno mov daa fadds jge add or mov pusha lea jne cmc mov cmc jp push or jmp pusha jmp xor pop mov cli or and jecxz das adc pop aas inc sub shrb sar and cld jb jbe lds dec pushf bound repnz test out pop lods out fwait les ja pop rorb dec das nop jno xor jno jno push outsb jg bound cltd lods add out lret xchg or pushf inc jl lret dec inc sbb stos adc adc cld push mov jl lcall cld jge in outsl ret mov sub fwait pop inc gs xchg push inc lahf nop xchg cmp lret aam cli das mov jl push (bad) pop inc mov scas jecxz bound push fwait add ljmp fildl pusha pop lahf xchg xchg jnp rolb sbb and std inc mov imul sarb inc repnz pop add mov pop je mov loope mov inc push popa out clc add aam call rorb test mov mov stc or pop jg mov sbb pop mov push inc push mov and jno orl int3 xor icebp enter push add in jg mov loopne push (bad) and xchg sbb adc jne pop (bad) ljmp fstpl and adc pop enter and xchg dec inc cs dec pusha xchg adc lods pusha nop pop cmp (bad) stc clc and or add je lods xor (bad) stc push sbb push dec ret sbb (bad) ret push mov (bad) dec sbb jmp push mov dec inc pop xchg push ret movsb adc fcmovbe in jae jge and imul clc cmp ret pushf lods cmc ljmp imul iret sub add cmp inc xlat (bad) cmp xchg push pop mov lret jl mov popa test pop push enter aaa mov and ror sub pop mov in xchg mov xchg repnz or pusha dec mov adc je and pop cmpsl js jns xchg xchg jg fiaddl dec mov cmc sti push add fisub mov mov sub push (bad) mov mov and add imul add dec jmp and pusha push cmp loope and inc fbstp int3 adc inc rcl and adc lds fisubr pusha movsb imul nop xchg dec jge xor orl daa sub testl fstpl xor sti test ds fdivr cmpsb cmp mov pop add call dec push lods repz dec cmp ljmp mov cmp xchg push or (bad) sbb jge pop or fbld xchg jmp (bad) and adc sub inc pop es pop out pushf imul sbbl mov int lods push fld mov or icebp cmp pop bound cmp and push (bad) fcmovb xchg lods pop (bad) sbb pop inc lcall mov clc pusha out addr16 push pop arpl (bad) leave out loopne xchg test cmp fs jno scas jp cmp add je dec or mov push call lea call jmp inc call movb call insb pop stos mov push inc add repz ror hlt stos cmp pusha mov in ja (bad) aas sbb movsl adc pop lea ret mov lret add jne pop fdiv incb clc out mov push xchg lods push popa pop mov sarl fldenv and insl mov push cwtl dec mov inc cmp push ds pop test scas jnp scas add fnsetpm(287 mov jp shlb cmp and inc dec xchg mov lcall int3 jae push xchg jno scas orl mov push movb pushf mov pushl ret daa mov in (bad) adc sbb mov jo out int push imul and mov inc aam xchg adc insb outsl mov test test les cld xabort inc pop inc lret xchg movsb inc fcomps orl cs xchg dec stos je mov (bad) xchg xchg lods test pop xchg notl pop sub ja inc test cld iret (bad) aas es jae push popa vmovaps sbb inc enter push mov pop scas or loopne adc push lds scas pop mov loopne xchg test mov mov imul and jae call pusha lea jae jmp cmc mov cwtl test repnz imul cltd test jae or pop fistpll mov push sarb (bad) enter cwtl xchg adc sbb mov (bad) mov (bad) cli in loop rorb loopne jecxz or cs aaa int3 into lock into and pop fwait adc pop cld rcrl xchg add or inc std mov jnp lcall outsl fimul test xchg jns xor loop popa sbb out lock enter xor fsubrs popl aam add (bad) sub dec pusha ret lock pusha enter mov mov aam loopne jmp xor pop sbb and mov mov bound pop aaa daa or mov out mov cmpsb xchg jb,pt mov sub enter jmp aaa mov jmp push inc xchg sbb jbe jmp push insb lods jl pop push mov shll mov sbb pop or cmpsl mov (bad) sarb ret faddp sub dec jbe (bad) aad imul test mov fs jae jmp cmc or push lea je bswap mov lahf movzbw lea call pop pushf pushl pusha pushl ret ljmp jne lret insb jae mov xchg xchg dec (bad) repnz rorb push dec js jmp mov test push mov lea je dec mov or adc add (bad) adc cs movl xor mov sarb cmp cmp jle add call and sub xchg nop test call mov dec jg xor add sub call loop aam mov iret cmpb pop test adc pop insl shl mov movsb cmp lret fildll movsb popa test aas fwait inc int jno,pn dec xor xchg pop cmpsl out rolb pop add imul inc iret (bad) rclb inc cmp push jne sbb imul (bad) shrl ret dec rorb loopne mov xchg xor and xor cmpsb cmp inc sbbl pop mov push fidiv xor inc out push dec mov jmp fwait mov sbb inc pop lock xor sbb inc fisubl inc mov sbb rcl mov out (bad) jae adc or leave outsb mov mov mov les fsubr in sub jns ret mov (bad) mov cld loope popa jae hlt adc inc cld add jl mov mov push leave cld ret out cmpsl fdivs (bad) jno stos push jns xchg mov jno sub pop mov inc lcall xchg pop out mov and lahf movsl jp mov mov sub (bad) pop pop pop cmp dec mov pusha mov cmpl in icebp add repnz pop sub rorb pop pop arpl adc dec push popa jno stos pushf repz push mov jmp mov pop orb rorl hlt add inc and js xchg jne xchg aad xchg jge xor in dec cld inc adc cmp mov or je fsubl lds mov sti arpl mov pcmpgtw stos adc sarb xchg movsl stc adc cs pop xor xor fs sahf mov dec xor sbb inc cmp test xchg mov cwtl pop movl movzbl pop movzbw lea pusha movl movb pushf pushl popl pushl movb pushl ret lea call jmp mov jmp sbbl and addr16 lret mov test fiaddl gs out and dec push inc sahf arpl sub fs pop pop cmp cmp mov pop sub lret lods aaa test addb dec jmp stc mov es dec enter or addr16 sub loope stc xchg fisubr jg or stos inc cmc xor out dec (bad) sti push (bad) (bad) cmp pop fcmovnbe ret mov (bad) imul mov pop add add push xor inc jle (bad) pshufw pop data16 xchg insb mov cli in rcll imul scas sub incl xor add stc (bad) pop movsb adc clc data16 das (bad) xor jl addr16 out pop inc jl push or sbb adc jo inc push repz sbb mov cmp push ret call fldenv adc inc xchg mov dec (bad) out xor push sub or inc repz push shll add and push movsl sub daa xchg in mov mov adc adc jo pop aas mov add iret jo nop rorl in iret and push (bad) mov aad cmpsl hlt mov cmp xorl out or or dec mov xchg lods mov dec jmp mov jne and mov dec clc inc in xor (bad) xchg (bad) out mov inc gs pop hlt lret bound mov pop fabs pop test rclb js add ljmp mov dec clc dec cli pop or pop or push mov jae imul xchg dec call or rol xor cwtl es lock or (bad) faddl fiadd or (bad) push push into jno cmpsb das pusha repnz iret inc sbb enter mov ja dec hlt adc shrb and xor add pop lods lock fninit icebp into (bad) testb pusha outsl mov insl or add pop popf mov enter insl rclb adc shll xchg xchg leave or call mov xchg jnp fnstsw cli in out dec xor pusha mov test add sub lods push je cwtl clc lcall cmova add xor mov push jno cmpsb stos in add fildl xor ret bound cmp cld arpl loopw pop inc cmp or mov xchg ds (bad) or xor mov cmpsb in cwtl mov js lds outsb xchg lea pop fs sub iret or cwtl pop push sub movsb inc (bad) jo push dec mov into int lahf push mov xor insl mov adc cmp decl dec adc jle (bad) jmp cmp movsl call xchg ss incl push dec cli cmp out mov (bad) lret hlt sbb int3 cli add xor or in xchg in sub in xchg pop mov (bad) or dec and and jmp pop and or (bad) jl sarb int movsb mov fld xchg lret jae mov cmpl aad (bad) jno movsl sub bt clc or call repnz inc in (bad) mov jecxz fbstp (bad) mov push or pop inc cmp inc pop inc lahf and gs inc push notb fldt les rorb sub sbb fsubrp or jle xchg mov test cmpsl xchg mov sbb lcall push cmp aad stc cld inc sub or dec (bad) sbb mov dec push rolb mov scas into mov push clc push repnz jo push sub xor pop test fistpll es movsb lods loop rorl xchg push add mov bsr cmp shrd neg mov or call call push call int3 test movsb cli int3 xor mov movsl mov mov mov stos jae pop mov (bad) lea or pop outsl cmpb mov or xchg cmp jmp iret outsl or fs imul or mov sbb lret shl testl cld shl andl cmpsl pop xor dec hlt arpl shl (bad) mov lcall or sbb sbb je movsb adc mov xchg or pushf repz add (bad) pop pop push add mov cmpsb push add cwtl pushl popl jmp add inc gs outsl fs gs popa outsb fs gs add mov add sahf lcall lea push pusha movl pusha pushl popl movl pushl ret ss push fildl pop sbb jecxz cmpsb (bad) dec jae or jnp xlat sbbl loopne and mov (bad) jae int3 dec xchg rorb test mov dec push add mov sub int3 jnp stos cmp push sub xchg mov lcall xchg dec aam pop pushf and fistl (bad) addr16 add mov out (bad) in scas sub inc cld leave sbb mov push push nop mov pop and cltd and es pusha ds out scas (bad) mov adc sahf dec mov xor sub mov sbb cwtl out fsubr xchg movsb jno mov xor ds and push arpl movsl rcrl (bad) jg imulb sub lea test jns inc jge pop push outsb jg scas movups pop ret pop pusha mov popa push insb lods push lret fs out mov push jo std cmp rcll (bad) cld aas or sbb pop das push bound push sbb cld dec test push ret jnp pushf mov or (bad) add data16 cmpsb fsub ja inc pop and mov movsl lea ret test inc dec sahf loope das push imul jl xchg lea xchg dec div sub inc push sub (bad) bound adcb mov insl andb push das nop push insb mov fs stc xor lods imul (bad) enter test add addr16 insl jmp mov cld pop test pop cmpsb mov adc jo aam iret inc push in or out cltd test rolb sub pop loop fist mov add pusha pop cmpl sbbl imul cld (bad) decl mov loope pop and outsl repnz lret pop cmp cmp mov int cmp push cmp mov xor (bad) (bad) jae outsl (bad) mov xchg sti push xlat je pop mov das push or ret outsl (bad) ffree xchg movsb in iret xor push fisttpll cmc adc fxch es scas xor jecxz je dec mov outsl in pop inc fistpll nop das nop cmpxchg inc fsubr pusha pop imul inc fwait aas mov sub or std pop and inc push jno mov pushf call push clc arpl or lret es mov inc push push loopne out cmpsb sbb pop ret popa inc scas and mov adc fucom popa ljmp mov inc fstpt movsl (bad) leave xchg or popf popa repnz push mov (bad) mov push out pushf and dec sub mov imul push push in xchg stos mov arpl ja mov mov mov inc cmp (bad) mov (bad) mov lahf sub mov and fbld push cwtl inc dec push sbb leave push daa push sub std loop jno lahf (bad) enter fwait ret ror jmp fildl fucom mov or aaa push sub push lock lret loope adc aas mov push out lock loope inc pop fisubr into or jnp inc push xchg js dec jbe mov jbe jp mov mov insl ret lds dec and or imul adc or das and pop cltd jecxz push inc out adc mov jno stos or mov pushf mov dec imul sbb add xchg (bad) mov or pop addr16 and test sahf nop pushl pop push add inc and out inc dec add pusha pusha movb mov pushf push mov lea jmp push lea jae stc dec stc mov rcr mov sbb neg shl mov jmp test (bad) or xchg addr16 adc jns clc push lock and dec mov cmp in xor dec pusha xchg sub aad mov add out push loope xchg imul pop adc inc dec or repnz xor jge cmp lods rclb push dec jg loopne in int bound adc lret in lret add or insl cmpsl (bad) xor lock mov adc mov inc lock push idivl in repnz mov cs adc fs xchg mov dec call sbb inc lahf and adc arpl push sub adcl mov test sub adc adc mov scas inc add cmp cs mov hlt fwait add push xor sbb xchg movsl fsts into cmp jbe xchg incb jl push pop mov sub faddl test lods dec lods inc test outsb cmpb repnz cmp dec out inc push mov add clc addr16 mov test fild and sub mov inc push je leave cmp dec les mov jo mov stc test or pushf enter movl push pushl push push lea jmp add dec iret xor jb or xor sbb or inc addb mov sub aaa inc sub jmp mov cmp push daa adc xor mov je jnp mov xor pop shrb mov sti arpl jno pushf xor pusha bound inc push in xchg dec nop out (bad) das ret cmp addr16 lahf loopne ljmp jmp xchg sub push jae jbe mov les cmp fnop add sbb ss fisttpl popa outsb mov mov out cmp adc stos sbb jb pop mov sbb enter push xchg push sbb (bad) jg out cmp jle cmp pop push jbe rorl imul scas shl jno fwait sbb fwait add in movsbw jmp btr (bad) repz mov bt cmpb pusha movb lea jne btr cmc sub rcr mov sar setl xor add shr sub mov pushf mov test pusha lea je call clc stc sub pushf cmp pushl pushf pushf call call jae jne rorl sub push pop cmpsb sbb rorl xchg push insl (bad) in mov (bad) push jno push popa xchg mov shll fwait mov xlat inc enter stc data16 jb fidivl imulb push pop mull cwtl test xchg cmc (bad) ljmp std add mov adc (bad) repnz stos jp jbe aam loopne and int3 sbb in xor cwtl clc daa int dec sbb cld cmp fs and adc add movl stos fcompl in roll jno mov mov in xlat or aas mov in dec push sbb nop or mov cmp arpl mov not call pushf mov lea ja pusha pusha lea jb jmp jmp stc jmp sets inc inc mov not pusha mov mov pushf mov lea call pusha jmp pushf lea jne lea mov push lahf movb push movzbw mov jmp repnz jmp cmp mov cmc test test and test cmp pusha add movb mov lea jmp dec xchg mov test add mov subb (bad) nop into aam sbb push or fistp (bad) pop mull xor jmp cmpsl jmp fsubrp xor mov xor movups and add imul aaa test lock inc pop adcl jb mov movsb jg xor pusha (bad) test std inc push push mov pop jl jne cmc xor cmc xor loop lock jecxz iret adc pop add adc cmp adc ljmp aam sbb loop mov ljmp ljmp inc in jle cmpsb fiadd xchg shr das xor and test or jle sbb push fnsetpm(287 call cmp mull add int aas and dec call inc int scas xchg lahf adc mov push xchg mov sub or (bad) dec pusha cmp aam mov sub jecxz xchg aad and push sbb adc insb xchg mov ds jp add pop cltd or push pop out mov dec mov iret cmp dec mov (bad) (bad) dec pop dec mov stos or pop rcrb cmp int3 hlt (bad) stc jp mov or sub fsubl popa push or lret dec adc and jae movsb outsl (bad) cmc leave sbb cmc lcall push jmp push jmp pusha lea jae cmp cmp push pusha pushl push lea ja pushf call aam fidivl mov aaa test push dec jge mov leave xchg xor stc movsl stc lret sbb mov stos mov mov jns push test pop jl test fbstp dec push das arpl inc push mov inc jne mov sbb or arpl test pop into cmc push scas pop call mov ljmp fs or and xchg dec sbb aas inc pushf jecxz imul idiv or sub shrb call rclb xchg add and data16 pop imul sbb sarl ds jmp sub out adc incl xchg push std cmp out pop movsb (bad) mov pop popa or pop inc rcrl out hlt lret and arpl push xchg dec mov jg lock insb sub je movsl jne push jne lret das bound ss je popa repz repnz in repnz xor mov cmpsl xchg stos mov rorl xor mov test insb pop cmpl mov imul xchg xchg ljmp sahf stos jbe sbb nop outsb ret sub mov sbb xor pop and inc xchg roll mov xchg out scas jbe adc cmp in psubsw add shl inc mov (bad) mov addr16 pop mov adc rcr and dec sahf sub scas lock add enter out sbb (bad) mov sbb jnp push (bad) out nop cmp fldenv (bad) enter loop iret ret fcompl mov xchg imul inc cmp push jp mov lret xor inc in xor (bad) out add insl cmpsb pop insb cmp movsb outsl (bad) out mov or inc mov push lahf imul pop pop shlb cmp test or dec popf data16 or push das iret movsl cmp xchg fldenv push lcall push dec or fnsave repz pop add and scas dec movsl pusha mov notb mov jl popf scas pop mov and cmp lods cmp jbe push sub inc hlt dec xor inc jno xchg mov pushl lea jmp add add mov adc add add jmp add add sub add add add add add add add add outsl add addb add imul add add add into and add add pop jle add add add int3 adc add add mov add add add add add add add xchg adc add add mov adc add add inc icebp adc add add mov scas and std jo add nop adc aad adc dec fcoms add add add adc push xchg sahf xor mov aas fstpl ss (bad) mov mov xchg xchg adc int ja mov insb jmp movsb pop test xlat loop inc dec inc mov jg dec and adc push and movl sub mov and mov clc test scas and mov jb mull repz adc movsb les push dec xchg insl test and adc ffreep ret fxch pop adc cmpsl xchg ret fstl pusha jl ds sub hlt aam es int lods nop mov xchg es jnp int3 jb ds pop call pusha push aas loop cmp adcl pop jo pop dec nop sub fnop mov in clc mov xchg push mov mov std xor aad mov pop mov mov fbstp lods int or xchg pop sub stos jo sbb xor movb stos inc mov pop cld je shl sbb (bad) aad mov idiv inc outsl sub (bad) into data16 mov jmp xchg (bad) lock sbb jp dec dec mov dec fcomip in stos mov mov fs data16 inc and daa jmp inc les sti add cld imul mov push fisttpl push in ljmp dec test into push ss (bad) xor repnz xor movsl jns fiadd jl lcall dec mov rolb mov pop push test pusha jns adc mul je sub fstl cmpsb insl push jo hlt jp jp jmp dec or and mov xchg mov or xor sbb sbb stos mov inc xchg mov dec pop fwait cwtl popf cmpsl data16 sahf enter lcall cmc cmc pop xor inc or mov and popa xlat scas xor lgdtl push push mov jns pop and lahf pop jl push dec mov xlat mov push outsb pop aas aam sub push leave xchg xchg or push dec inc inc out add imul cli pop pop dec push xor add xchg jno movsb pushf inc inc sbb idivb adc cwtl inc inc push cmc pusha ja shrb mov cltd jecxz pushf addl ss lahf out pop sbb outsl movsb push or outsl inc pop dec cwtl xchg push xchg mov jb push repz push or sbb inc cmp xchg ss lods or aas imul rcll push xor mov pop gs aas sub dec cmp jl sarl test dec jmp push mov cwtl sbb sbb fcmovbe scas xchg xchg fsubs inc push adc xor ret and cmp mov addr16 sbb leave dec adc adc sbb dec popa sbb jmp roll mov and loope push jg lods in pop loope jo movsb push dec mov push ret bound dec inc inc loopne repnz sti iret scas pop mov pop cmp ja mov xchg cmp divl fdiv jl mov out mov push in cmpsl ret or mov cmc repz addr16 loope adc rcr lret and mov pushf mov or xchg xor add and cld or mov lret add adc pop (bad) xor in loopne adc pop sbb inc xor pop xor pop add cmp insl aaa sbb jnp lods mov push pop popa sub out in add mov mov dec push pop bound ret sub out call lret ds dec cmp jge xchg into ljmp sbb das clc pop fsubrs pop sbb rolb rorl cmpsb enter xor xchg push test shr jle mov int3 lods push iret push insb inc test adc mov sbb rclb xlat daa cmp xor cmpl movsb ja jecxz jmp and int3 cmp pop cmpsb out pop push push fdivs pop sti or adc in sub in aad pop es fcmovnb adc and ret push mov lret mov lods mov loop mov std inc faddl data16 in add push pop add pop test sub ret push push les pop jge scas adc adc test jne cmp mov adc sub arpl mov dec adc mov scas das movsb enter and jo xor mov xchg dec aad movsl loopne or test iret add daa pop call (bad) (bad) mov loope sub in mov lcall or pop cmp out popf repz (bad) sub imul push std add pusha andl add jmp (bad) sbb shlb cmp aaa sbb pusha push adc xchg fnstenv ja cmp mov inc orl out stos jecxz xchg imul testl sub mov addr16 lods lods call sar mov in xor cmp and add cld jbe push ja sub mov mov mull add jmp cmpl xchg and and mov loop aam insb mov jae movsl fcoms out or stos push adc fwait jp and iret push mov and inc orb push (bad) pop push jno dec out fidivr cmpsl jbe xor push lcall movsl ret into mov (bad) fdivrp (bad) jae (bad) pop pop ds iret dec cmpsb push jmp test jmp out jne jns push mov sbb xchg mov cmpxchg sub rcl repz jp test test jns rol add push add dec push frstor add popa int3 push cs and add ror out add lock popf mov (bad) push adc arpl dec mov js add xor sbb js mov fwait push jl adc test add fisub xor mov xchg lahf or or mov rolb jnp and cltd or mov or adc push xchg mov mov test push in ret xor mov sbb cwtl sub js add and call jge mov mov ja int3 sahf ret imul adc pop (bad) and cltd stc sti sahf mov xor adc aam xor pusha mov cmp pop jp sbb popf sbb aad mov and push cli mov iret xor inc push lods lds add and cld mov cmp bound adc or dec sbb test xor sti xchg jae fstpt lret xlat rcr sub loopne aaa xor xlat (bad) mov ret jnp push movsl sbb and mov dec imul out cmp into mov imul jno sbb nop ljmp repz jne cmpsl ds cltd and jbe xchg and int3 test sub int ret push cmp dec cli repz subl pop push pusha inc inc jl daa imul add lods xor sub in mov mov push fcoml add jne dec cmp (bad) out jmp das dec cmpsl scas pop push aas add cmp call pushf lcall daa jge push and enter inc rcrl sbb ljmp sahf add dec mov pop std mov call dec ja outsl addr16 sub add mov mov push xchg mov into imul xchg cli scas mov sbb dec cmc inc sub (bad) mov mov adcl pop push arpl (bad) adc into mov sbbb in pop inc cmp jno bound pop cmp out (bad) ficom in sub popa mov leave stc mov cmpsb fimul leave mov into sub or movsb enter mov popa cld ret les mov dec push ret imul add ds jbe ja cmp xor push cld jbe add and lds xchg sub enter int3 dec xchg cwtl pand cltd sahf xor das imul inc sarl mov imul xchg lcall xchg push test push pop movsb and dec cmp jns leave pushf adc aaa push push cltd pop sub inc inc push cmpl (bad) fs aam imul lret lock jp loopne push (bad) mov into shrb jl mov cmp rcrl pushl (bad) scas cmc xchg pusha xor out sbb xchg sbb push idivb mov rcrl loopne rolb jne scas rolb data16 dec mov movsl sub (bad) or pop je enter cwtl push sbb (bad) or insl pop cwtl push jle pop call and sbb or and mov dec or lds jle cmp cs inc lcall ds add mov fwait icebp xchg mov das les inc (bad) and fistpll in cmp and push push dec adc mov sub pushf sbb ret outsl fstl jb jo shr push mov jmp jno jp popf adc xlat dec call xor xor mov leave push inc and imul fisttp xor adc cmp insb cmp notb xchg addl int3 sbb sbb rcrb and cmp jno dec incb mov mov xor dec shrb jbe pusha out popa bound scas (bad) negb jle (bad) ficompl les clc sub add push imul movsb sub cmpsb xor fcmovnbe lcall mov sbbb lods mov jp imul xor push cmp inc sub mov fistl gs cwtl mov lds dec in pop push fs mov jae push adc arpl mov arpl jg loope add scas pop push pop xlat xor fcompl xorl ds jb es in fisubr mov cmp (bad) aad jo (bad) lcall jecxz xchg jnp pop adcl pop cmp push or pop pop xorl inc cmp mov add mov aas sub mov shrl jecxz aaa aam and test pop mov pushf inc cmp or sbbl sub dec daa js pop push inc sarb adc or pmaxub or add movsl jl mov divb js xchg arpl jne sbb mov jmp fisubl mov imul jne add scas (bad) fdivs sbb lret mov push (bad) mov ret scas xor insb lret std popf jbe jbe jg push cmp pop icebp pop sub xor dec jg aas and inc push jmp fs out call scas insl movups insl dec insb jb lea xchg cmpsl mov pusha mov push rorl je inc (bad) jns cwtl pop sbb pusha js jmp add sub out mov xor imul (bad) xchg sub sub push and add daa sbb aas adc aad in sbb imul (bad) fstl lods mov sahf into clc push cmp fdivrp sbb cmp sahf outsl imul dec dec imul test test or addr16 sub mov fiaddl xor pop or pop cs int3 sub dec (bad) sub xor mov adc jle xchg shrb push nop pop xor push jns lds int3 leave cmp lods xchg mov jae scas xor jbe sub cmc in mov dec cmp (bad) insl (bad) stc test js sbb sti jmp lea pusha call movl pushf pusha push mov lea jmp jmp lea jne rcl stc clc mov test cmc pushf add clc movzwl add rol sar mov cmc call cmc push pushf cmp jmp mov mov adc stc dec cmc dec jne sti jecxz out mul add sub nop das xchg sub sahf addr16 scas sahf loopne das out add bound lahf leave xchg mov dec rcrb mov cmpsb nop out (bad) out fadds sbb push movsb mov dec xor pop mov xchg add idiv or mov mov cmpsb jp out inc and fldcw pop push je or mov inc mov mov adc scas fiadd int xchg loope test sbb lahf push insl inc pop stos xchg lock pop data16 jae jmp sbb xchg into dec scas jp ljmp imul aas push arpl mov mov test jge xchg fwait cmpl jae push mov fadds fisubrl pop das cli insb aas jnp inc dec lods outsb je ret mov mov cmpsb sbb cmp inc jg mov and movsl lea jnp push sub pop mov adc lret je dec pop dec mov rclb repz jae lcall and je lods adc jne dec pop inc sarl add or (bad) aad xchg push mov movsl sub popa and (bad) shlb or push sub dec sbb push sub imul xchg fcmovb fcmovb xchg or pop jg or jno jb into adc stc cmpb pushf call push test pushl lea je pusha pusha push pushf lea jmp push pushl popl movb pushf pushl ret clc ror pushf lea call clc push cmp pushf jmp lea ja jmp call jmp add dec outsl arpl inc insb insb outsl arpl lea jne pusha stos pusha movb mov push lea jmp lea je pusha pusha adc pushl pushf lea jmp cwtl lea pusha push movl pushf jmp outsb outsl jo pop (bad) push outsl (bad) fcompl inc adc cmp lods cltd inc scas push push outsl into stos jb cli cmp gs mov and or shrb mov mov add dec fistpll out inc xchg dec rcrb sbb stos iret outsl mov xchg adc cmp add mov cmpsb dec mov enter imulb jno mov pusha dec xchg dec lcall mov imul outsl (bad) push imul imull pop mov or push incl xchg mov lds pop adc lret out fucompp (bad) dec scas xchg xchg jae outsb scas mov es inc cmp sbb mov cmpb mov ja jns shll loope in dec mov mov fsubl xchg clc ss jp push cmpsl (bad) or xchg std shll scas mov sbb mov sbb adc shrl (bad) sub or pusha (bad) mov sahf jnp jne mov push jno and psadbw adc rorl (bad) (bad) jle push jmp jae sti inc cwtl sbb lret div sub dec cmp dec mov sub sub xchg jno outsl insl and mov aas loop add mov ror shrb fs mov dec jnp,pt fisub lahf andb je xchg lcall inc fisubrl mov jge mov or lcall push (bad) leave xchg in and int lret xor xchg mov in icebp mov fsubrl insl xchg sahf push mov jbe jns add xor sub mov push or iret aas loop in push dec push mov dec nop rcr mov mov insl cwtl jno jne mov lods rorl adc stc cmp dec loop test cmp mov nop mov test xor ds cli pop pop das xor mov sbb and jb leave fisubr sub jae orb imul out pshufw inc dec out movsl mov repz ljmp cmp shrb inc movsl jp pop lea mov insl jno jp (bad) into pop or iret inc aaa dec mov ljmp (bad) mov xchg mov cmpsb popf insb sti mov sub mov outsl sarb inc cmpsl cwtl repnz mov mov lret or popf insl xchg lods dec mov pushf out mov mov lock scas in xchg xchg cmp or jbe mov mov or mov pop inc jns movsl cmp test loope mov lock push jno outsb test push sub add or insl jmp fnstenv xor cli cmp loop out inc in push fs aaa inc cmp wrmsr inc xor xchg roll mov clc cmpsl cmp mov and cmp daa rcl scas add out fsubrs xor xor insl jg jecxz ja cmp addr16 mov xabort dec jne xchg call adc movsl cmpsl mov push out sbb lcall lds adc add mov je call sub and and test stc movsl cli ja fldt push test and mov sbb add bound add push test add jnp cmpb pusha call mov fadd sub sbb lock out outsl push dec pop add cld xchg dec das xor jnp wrmsr cmp cltd stos loop lods outsl pop std loop adc mov xchg aam inc push das mov lea cmp dec cmc and daa test stc sbb cmp sbb jmp sbb gs sub add popa jge dec sbb inc mov int3 adc pusha jg mov pop lods ja xchg push cltd sub imul lcall sub sbb pop dec xchg test or adc jmp shl add sbb lret sar fwait push sbb mov or push in mov add (bad) or mov push out enter or and das lcall mov adc out lcall and sbb cwtl aas xorb and sub cmp (bad) (bad) mov test nop mov push sbbb sbb pop (bad) adc imul sub jge nop xchg (bad) into push lret faddl ljmp (bad) (bad) js cmp dec cld add cmp mov mov xor out bound js xchg aas aas addb mov cmc cmp test cmp jl adc sbb arpl nop mov sahf es clc sbb jbe cltd jno imul lds test sbb add enter add push push movzbw setae cwtl lea jmp rcll inc fstps cmp cmp sti sar repz out sbb mov sti jecxz jecxz out lret ror inc sti pop out cmp (bad) flds popf lret xchg movsl adc or inc in jno jns aas (bad) lods fldl sbb mov dec insl sub jbe (bad) pop push out lret xchg arpl xchg fs ficompl mov loope mov mov out pop xchg mov inc (bad) xchg int3 pop jg lret or dec mov test and nop aad cmp dec imul mov dec adc xchg adc cmovle push mov lea xchg sub int (bad) rol cltd test andl test icebp adc cmp dec jne fwait and push fild mov push nop (bad) cwtl test repnz pop fwait mov movmskps xor test push add inc fucomi nop das inc mov fiadd sbb in cmp ja dec enter aas add xchg nop mov dec test hlt out xor pop pop and xor xchg jp fsubrs out or adc cmp adc lsl xor jns ja aad adc pop mov loope aad nop mov fisttpll sub aad fcomp sub lret jae push xchg pop int3 mov or push xchg dec (bad) cmp outsb adc packssdw in xor ret cmc xor adc xchg mov mov cmp arpl inc lahf aas push adc mov ret arpl scas aas jmp fsubr or (bad) (bad) addr16 lret or mov aas push sbbl aad inc loope push cmc dec pop repz clc lods rol mov fdivrl jmp adc sub adc fsubrl mov jae lods repz out inc cmp dec rcrl inc push mov das xor pop add mov mov inc into xor and jmp inc insb sbb mov loopne fnstenv scas mul enter scas mov (bad) mov and or imul add add leave mov add leave call call cltd inc mov out (bad) shl inc mov cmp sti fs pusha pop fimul int3 fcoml sbb cmp or mov or insl clc (bad) int int3 xchg dec aaa push adc adc and cmc lret mov inc mov aam icebp out addb popl popa jb pop xchg fwait push pop jmp xor xor lock dec nop mov push dec inc outsb out push mov add jp inc aaa push inc cld fldl push (bad) lret mov fldl stos pop cmp test cmpsl push es pop aaa dec adc addr16 fwait test movzbw call pushf jmp push pushl movl jmp pushf jmp fnstsw add dec or out pop leave jne pop push mov sbb clc (bad) nop into mov test pusha push pop inc mov xchg outsl xchg cmpsl sub loop out xor or dec ljmp push dec sahf leave mov popa stc movsl mov cmp stc or call push lods les daa seta pop pop pop mov jmp nop pop les in push push push add or xor push inc mov sub dec xor push sub mov sub repz (bad) in (bad) sub sub sub adc add dec xchg or in sbb cmp inc shrl cltd insb xlat je std outsb sub push cs (bad) in rclb scas test call mov xchg aam into push outsb jo push and (bad) enter sub jecxz push dec pop pop jle (bad) pop jnp and in jle push or xchg jo popf scas js mov jno lahf out movsl cmp cmpsb cli je pop jge xchg jmp movsb xchg lods jl mov push sbb es add jbe cmp jno data16 in fdivr jmp (bad) das pop ja mov sti pusha call clc cmpsl rorb mov lock mov lds pop scas jno out xor mov xor loope (bad) sbbl data16 jmp pop jmp jnp mov aas aaa inc pop sub mov add aas mov cld rol jle sub aas ds push dec stos xchg movsl mov fimul adc sbb push push (bad) ss test lret dec mov sahf mov not dec pop pop pusha and movups dec xor mov insl scas or pop lcall aam fsubrp loop clc lds xor jl imul xchg jb enter and mov rcr int3 sbb out xor imul sbb or aas fcomps push loop xor xor lcall cmp push daa push das jmp fucomp (bad) jne outsl aaa pop xor cmp fucomp lock and stos push jo sub mov sbb push pusha pop aaa or sbb cltd insb lods mov ja inc cmp sbb pop sub push add cmpsb cmp cmpsl ja movsb imul mov sub fwait call push mov movl pusha pushl movl mov pushf pusha movb lea jmp add dec jae inc gs outsl outsl outsb push gs imul add dec add jl or fimull div push rcrb sti andl cmp push dec (bad) and ss int3 cmp and fcoml sub icebp sbb push loop test cmp adc fucomip pop stc inc dec movsl das and add rol inc push pop sbb call pop pop xchg sbb leave stos pop lcall popf inc add sub xchg fnstenv outsb lock out mov test arpl mov mov cmp hlt cmpsb sbb int in adc aaa add mov pop data16 js push jne pop (bad) fcmovnb xor popa frstor jno arpl mov mov stos adc and aaa mov pop cmp in fcoms add cmp js enter pop fldenv js ja cmp pop mov popa (bad) movsl stc and sub cmp sub inc bound xor lahf push jbe mov testl and fwait movsb and sub inc mov jg scas xor dec in sub aas xor imulb stos push fs mov jg test and mov arpl adc and repnz movb pusha pushl lea jne mov lea movb movzbw call movw call outsl mov mov xchg or sub pop in jle jle pop aad js xor dec xor (bad) aam ficoml push cmc xor leave popa push push (bad) or nop jg lea xchg cmpsb test ljmp in or les fistl nop cld or pop ss pop dec mov (bad) idiv push push in decb stos jns cmpsb imul cltd cmp push or (bad) out pop mov mov push pop out push sub insl xchg xchg das (bad) mov inc loopne pop ret xchg sub dec out mov jb jno bound xchg dec push bswap lahf pushl mov lahf bswap movzbw push bswap movsbw setnp movsbw push pushf pusha pop pushf lea push call pop xchg pop cwtl (bad) push xchg xchg movb fisubrl add cmpb xor mov ret aam cmpsb sti inc fldenv push test mov jnp mov or imulb push jb sub enterw add mov sar mov add or lea je (bad) lock and sub sti or jns test fnstsw sub out xor mov jmp out add and andl xor cmp jmp xchg mov mov jns ret fprem1 sub pushf addr16 dec movsl push test add stos stos xchg ffree frstor in lret pusha xor cmp xor mov cltd jne (bad) icebp xchg dec adc movsl lcall movsb pop inc cmp (bad) jecxz and ja inc push arpl imul mov xchg jno,pn (bad) outsl xchg sub sub or push scas shlb cs cmp push and xchg pop mov imul cld nop out repnz push dec mov and or mov jno outsl jno insl shlb daa pop imul ret cmp es dec pop push jns fs (bad) pusha mov imul ffree add arpl cmp mulb or xchg das fidivr jno dec pop add int and repz cmp cmp sbb jns push xor les insl jle les or push addr16 pop mov cmc test push ret inc (bad) leave in xchg cmpsl mov push pop jb push adc addr16 test in sbb movl xchg dec shrl inc enter and cmc pop mov cli int3 xor mov imul inc sahf mov pop fbld test aas rcl je arpl lahf loopne packsswb cwtl mov add (bad) dec rolb mov mov push cld inc add adc xchg dec jno movsl (bad) or decb ja stc scas xchg cmp adc aas movsl push (bad) jnp inc movsb cmp push ret push ja or fs jae inc clc inc enter ljmp xor mov lods lds loop and jno pop push cmp push xor movl call sub sbb mov sbb das arpl imul out out sbb test hlt sub icebp outsb push dec sti add or cld dec xor or jp lods shl sub jbe int mov mov push adc loope outsl cmp cmpsl (bad) out imul xchg mov icebp mov pop popf inc stos stc mov fisub inc repnz mov jae dec add repnz (bad) sub dec aaa mov push push pop inc lods xchg jo mov xchg xchg sub and test inc push outsb out mov es shrb cmp push daa push outsl jo imul sub (bad) mov outsb aas (bad) lock bound scas push imul insb xor imul das lock and pop imul stos leave cmc pop mov ljmp or ljmp dec push sbb incb shll sub dec cmp ja jno sbb ret push lods je xor hlt adc (bad) or aam stos aad cmpsl xchg pop data16 pop dec (bad) jbe inc dec mov lods loop loop mov gs ficompl arpl and push cmp jo test cltd pushf mov leave jne jno pop mov aas (bad) mov pushf mov lea jmp test push sub pop insl mov inc pop sbb test cwtl cmpsb mov lods repnz add mov mov jo test loope lea mov movsl dec test (bad) xchg mov adc fcmovnbe add cmpsl cs in dec mov xchg call mov in enter xchg pusha out nop (bad) lock pop fnstsw xor popf jns es mov dec add nop dec pusha fst sbb out lret scas cmp mov or push cmp shrb push outsl jp sahf xorl aam dec adc jno pop fdivs inc pop cmpb jno movsl out shl fdivrl ss push or test push xor and insb scas xor xchg jl mov jnp dec dec hlt push lods fmulp push out ret in mov push mov mov mov fmull cmp dec pusha int3 cli shlb mov dec adc xchg pop out push ds xor mov lock cmc push xor je (bad) fwait arpl movsl addr16 sub jmp cmpsl lret or test dec and lret mov mov xchg jp or mov lods lods mov mov shrl in jno pop adc xchg call cmc cmc xor pushf lea call push push jmp pushl mov pushf mov not setno movl jmp movw movb lea je movzbw pushf xchg lea lea lea jg lea movzwl jb not pusha pusha lea pop pushl mov pushf jmp (bad) ret mov sub pop sbb xchg pop pop or mov adc mov scas ret in mov xor les std cmp adc mov cmpsb pop mov test jecxz add orl ljmp inc cmp mov daa jge lods adc or add sub out xchg cli ret sub movsb aad popf pop push outsl movd sbb pop lods mov sub pop js int ljmp pop gs mov cli movsb xchg in mov scas icebp movsl pusha gs mov addr16 pop out lahf mov mov imul movl cmc call xchg mov icebp inc std in les inc (bad) cmp ret adc sub jmp loopne cld loopne pusha fbstp dec xlat in repz cmp test aas aas cmpsl aaa mov mov (bad) or fdivp or inc mov enter das or jb cltd dec sbb js aad into cmp adc inc add or lods subb or fbstp push cmp stos je mov pusha movsl mov add inc pop jo mov int fdivp cs cmp (bad) leave ljmp pushf inc sub pop xor jge pop (bad) cld push mov push das xchg aad stos and mov xchg xchg in insb cmpsb xchg out mov mov testb mov adc sbb or jmp jnp and xor repnz mov dec or ljmp sbb mov ja pop aas mov push das out clc push inc scas jp lret in cmp pop repnz lret (bad) cmp lods push mov jmp push jo lret push xor lahf inc fsub mov faddp jne sub xor or imul fs jne pushf lea jmp mov lea call jmp outsl cltd movsl mov fxam pop in or xorb loop or pop (bad) pop push inc ja pop add fst call jne imul mov scas sub jle dec mov xor loop push cmp and data16 (bad) xor xchg test pusha daa mov scas sbb addr16 jns aam xchg xchg mov loop adc add jae mov (bad) das inc aad sahf adc repnz leave add push dec in push arpl fcompl pop mov add lods cmc test (bad) mov add dec mov mov add push adc movsl jp lret add mov jmp jmp call sub lret xor pop movsb movsb scas rclb enter aam shlb and mov jecxz loop fwait les gs aad fisub jl aaa sbb sub aaa pop inc xchg cmp inc call pop fsubrs sbbl sub into pop xchg cli imul or loopne mov push shlb sbb dec adc cmpsl aas lahf and call cmp repz cld and pop imul rclb push clc (bad) sbb int (bad) addl sbb push clc lret stc inc cmp imul sar cmc ror cmc call cmc jmp mov loopne mov test pop push rep out cmp cwtl out aas cmpl imul out xor and sti inc cltd pop mov mov adc cmp pop push jno lods pushf ss xor daa cmc or popa call sarb push sub xor pop and push loopne jmp sbb sti pop in or and imul shrb and xchg aas leave movl cmp pop add std mov mov ds cmc push inc jle xchg cmp dec insl adc xor rclb imul stc daa not dec jg stc add pusha pop adc push xchg imul sbb push repnz inc xor fwait and sbb jns push movsb cmp mov push test mov lods cmp mov es jo jmp test addl (bad) pop stos pop repnz addr16 pusha pop xorb mov sub cmpsl aaa dec jno push int3 ret mov out jle outsb shlb mov insl pop pusha xchg lods repnz cmp mov insl xchg lods test movsl mov stos pop cwtl sub sub andb sub dec pusha push dec call cmpsl push mov mov add imul cmp sahf (bad) jae dec iret mov in dec cmp or jg cmp imul ret xor mov pop sub rclb mov dec xor and scas mov jmp aam pop (bad) xor and repz in (bad) sti or popa out adc mov jnp sahf (bad) mulb and sahf faddl in mov jno push cmp pop mov (bad) dec push sub (bad) jle leave mov inc std jge cs xor adc icebp dec mov mov cmp fwait out mov stos push in jg inc pop imul mov stc sti adc fcmovb mov adc in (bad) pop inc xchg mov mov jmp cmpsb popf (bad) pushf inc mov cmp adc fadds popa and popf and inc pop mov scas nop jp push mov ret mov cmp js sti or inc add daa xor sub js pop jle xchg xor std or push mov dec and cmp inc cmp das add test fisubrl insb inc push cwtl sti or movl stos in repz adc push and pop add jp popf mov lods scas sarl cmpsb cmp cmp aas mov mov sub mov cmc fs dec addl ss push jecxz je dec mov pop jae outsb lock sub cmp data16 push scas loope call add add mov daa push add pushf add cmp bt mov call pushl popl mov pushl pushf pushl ret jbe bt sub jmp movl pushf movb push movb lea jmp pusha pushl ret addr16 rcl dec push push xor ss sbbl jbe add mov xchg (bad) (bad) out cltd inc push pop inc push addr16 dec stos cwtl xchg jmp sub aaa (bad) jo arpl out int sub jmp jp shrb push push sub jecxz sub xchg mov xchg aas or mov or movups push adc mov cmc mov orb jp,pt popa cli test xchg adc lea cld ret mov add (bad) aam addr16 push and xor push adc ja stc sbb or inc pop frstor jno push pop xor aaa add dec outsl arpl inc jb add sbbl push add lret add not xadd mov btr ror mov btc sub mov stc cmc pushf sub movb test mov repnz call lea jne sar shr movzbw rcl mov lea adc clc bt sub rcl dec mov call push inc jge dec jne cmp push jp jge test dec adc scas out scas jecxz dec xchg push enter mov fdivrs shlb prefetchnta nop das jo fbld movsl mov add xchg mov pop inc sbb pop test cmp outsb arpl in dec add dec enter stos xchg xor sysenter aas jns gs incl xor (bad) mov loope rcll lods rorb pop push (bad) pop bound adc sbb in aam aas lahf ror mov sbb lret mov xor dec test cmpb pusha pusha lea jne aam jmp test cmp pushf lea jnp push mov lea jae cmp movsbl xchg bts mov shrd bsf not inc mov add mov jmp movsl and mov push pop out jecxz jb xor cmp cmp pusha jle or sub jmp push cld jae clc (bad) cld or cmp dec pshufw sub dec dec adc xchg stos mov inc imul stc push sbb repz decl repz jne das mov adc xchg dec jmp arpl dec into inc mov xor loopne aam movsl cltd fnstenv cmp repnz rcrb mov pop mov xor imulb loopne sarb jno dec inc dec (bad) imulb dec adc mov (bad) lcall cmp pushf lea jae push pushf pusha lea jmp movw jmp jmp sub mov clc call ror cmp neg jmp pushf pushl popl stc cmp push lea ja pushf pushf sar adc sub stc (bad) lock btc btc mov dec jmp setp pusha cwtl pop mov push cwtl movsbl mov lea movb call call mov and xor pop and pusha pop and adc inc addr16 jo lock shr add (bad) ja mov sbb mov ss adc xor sbb push movl std push add loopne jb inc push xor fcoml imul cmpsl (bad) in fcomip ljmp stc push fs arpl push aaa test add pop push dec (bad) mov mov notb insb lea mov js pop (bad) aad lock sub adc stos xor inc cmp popa fs add push insl cwtl in jno dec adc sbb xor inc pop subl data16 mov jmp cltd inc jne mov jg push scas xchg mov adc pop jb jae std mov push test dec jbe cwtl insb rolb aas dec lret mov lret cmp aam push (bad) mov jno jne test jle add inc or stos in sbb sbb sub stos mov mov mov xchg sub xchg leave xchg or (bad) push bound jns scas push stos je mov cld push rcrl (bad) xlat jno dec es push mov lret test nop push insb dec adc pop inc cltd out and sub inc pop rorl test das mov mov mov jl mov fs jp push movsb add inc push popa lret subl aas sub pop lods nop mov sub xchg iret mov pusha mov ss movsl das lcall jecxz test loope sbb mov xor push sbb adc stos xor pop xchg sub pop cltd insb (bad) jbe jns,pn dec xchg sub push xchg clc stos or pusha rcrb les nop adc stos aam fnstcw enter repnz dec loope add outsb xor jl stos loop loope dec xor fadd adc cs cmp ds imul add fcompl test cmp imul jecxz xchg insl scas cmpl int mov cmp or jno dec testb jo out into adc lahf xchg lret mov out test cmpsb dec jo nop inc fdivrs push test xor push pusha loopne or ds xor push nop pop loop push (bad) jbe ds sbb movups push dec xchg xchg (bad) or dec xlat sub imul js adc cmpsb rorl (bad) ja fildll dec jb jae mov xor (bad) mov mov mov ss inc sub sti push mov ret cld push push js add std push cmp xchg lret movsl mov adc pop movsl mov mov adc xor ljmp and data16 jno mov test mov jp in sbb inc push test add les repnz or test std mov addr16 mov push mov mov mov pop push mov xor xchg sub sahf inc fcmovnb fsubr lock xor sbb in imul push sub dec jae insl push popf fs jecxz adc daa das das add rorl sub bound je mov movsb mov lahf loopne imul xchg add loopne arpl mov xor and ds push fldenv aad fwait sbb jle jb jg popf mov wrmsr inc sbbl cmp arpl mov sarb sbb fildl xchg inc sahf pop mov in cmp add out clc test das loop imulb push sub imul lea jb pusha pusha movw pushl ret pusha test shr jp or jp add add imul push scas sbbb add adc push stos adc roll pop ret (bad) xchg aas pusha jno mov imul adc into loop rcr pop pop jp (bad) mov and cwtl pop movq jnp jl adc stos add sbb test mov lahf loopne adc lds in add insb (bad) xor test dec and jg call add or add jg sahf pusha in pop xchg pop or mov scas push mov inc cmp pop cmc mov pop add push jno dec test lock add push push push inc jb gs gs outsl jb add jo inc sahf and add jno fcmovbe jbe jle mov xlat (bad) and cmpl mov xchg xchg jmp in sub lds mov (bad) pusha xchg cmp xor les (bad) xor ficompl jno inc dec jae fnsave push (bad) (bad) ja mov add jo rorl add das ljmp int sub scas les popa gs fwait adc or mov push cmp out mov addr16 mov inc aaa mov push fildl sub and cmp shrl dec or push ror mov cmc stc cmp mov push pushf lea jb stc cmp pusha jmp sub push jp rcr dec adc out icebp push and xor test imul in dec shl int3 mov hlt ljmp push push and es rorl xchg xlat bound inc (bad) and sahf mov sub (bad) sarl xor push xchg movsb cli push into shl or dec sbb outsl add out scas inc and push mov and das loope or inc fbld inc lods pop inc pop sbb out imul inc lds mov dec sarl pop int xor aam (bad) inc and insb daa dec xor push ret mov mov push nop das add xor adc cltd mov divb and (bad) xor cmc or xchg xchg push cmp push in add (bad) xor mov push call stos push outsl xor jnp add daa dec movsb fwait mov adc sub push repz repnz ss jno jns mov sbb loop adc adc insl loop test xchg outsb scas mov fldenv sbb ds mov (bad) data16 mov ljmp and ror push into popa mov test or cltd and sbb push xchg sub cli add fldenv cmc dec mov dec inc pop scas mov std push xor test or push push mov outsb rcrl aam movsb jp aas ds push mov xlat inc repz in int3 mov seto or stos jecxz lods and pushf adc fsub dec testb adcl out jge mov push fiaddl pop pop imul imul sub ret jp fs pop mov xchg push jns inc push imul icebp dec arpl dec xor xor loop add clc or (bad) (bad) (bad) cmpsb cwtl test cmp push ja jmp lea jne bts mov test sub cwtl btc clc mov bt add sar stc mov pusha push test pusha lea je cmc jmp xor ljmp pop rcr push adc dec push lods xor iret cmp sbb je fldcw xor cmp adc aam jmp or xchg or xchg pop test lock loop mov cmpsb pop mov popf es lods in or and mov sbb cmpsl jbe adc mov mov sti inc scas mov fs pop insb ss mov not xor gs (bad) xchg mov repnz movb sarb cmp scas xchg xchg stos mov dec xchg dec add add mov mov pop ret cmp push fisub cmp pop (bad) pusha (bad) xor and mov push jp sahf or add fs je add jmp jo loopne inc mov xor adc rcll xor sti push jo les inc fcomip add outsl test (bad) movsl sarl hlt aas add mov test pop rclb mov in pop xchg mov sahf loop addl sub stc add sarb xchg lods cmp xchg test stos jno inc push inc sbb arpl ret rorb sub cmp out sti adc nop out pop inc pop arpl sbb js (bad) xlat test in cld imul loopne dec aad mov adc jnp (bad) aaa call sbb mov cwtl test ss imul jg jb (bad) pop jae adc out nop loopnew sub data16 ja fimull mov xchg repnz inc ljmp lock cmp outsl mov mov std inc call or cwtl scas jle std in ljmp (bad) cmp je (bad) or dec jg repz inc and lcall lret dec push add std add sets inc setl pusha pusha jmp lea jne or or mov jmp or inc lods pop cmp inc mov dec (bad) int3 repnz repnz es mov mov rclb adc jle sub test dec sbbb outsl fadds (bad) (bad) jns mov repnz cwtl inc lcall daa cmp rorl cmpsb jno inc (bad) aas add nop js xchg push mov (bad) and adc aam imul movsb sbb pop lret xchg lret add sbb or jno inc cli xchg dec mov mov movzwl movzbw lea bswap call shr pusha neg mov pusha clc test shl push call mov lea jne jmp lods aaa out mov and decl dec jp adc xchg insb xor cmp loopne rorb rcll fadds add cmp rolb gs xorl inc or lret (bad) cli add movsb and jl je jne cltd push mov sbb mov aam or (bad) xor (bad) xor xor sub loop jle mov addr16 bound xor outsb xor bndldx add cld (bad) dec (bad) lock sbbl dec inc test aad mov sbb lea std and lcall fidivrl cmp in jmp int3 cs repz pop fiaddl xor popf push sub push hlt lret outsl mov adc mov ret mov pop (bad) pop jmp xor out test xchg mov mov addr16 (bad) mov rcrl xor cwtl mov xlat adc dec (bad) mov dec cmpb jns mov (bad) sti adc and mov jbe stos lods xchg or (bad) js enter xor sbb dec push push fcompl scas pop inc push lea jae pushf clc mov cmp sar sub mov movsbw mov jmp mov movl push pushf lea call call seto bswap shr mov test shl call mov mov in es adc gs jo pop mov xor and cld out xor cmp fldenv cltd in (bad) push push xchg or xchg out pushl dec and cmp addr16 in inc notb mov dec jb push jns cld ret dec xchg enter dec xchg pop mov aaa cmp lock and inc jl jne test lock mul shrl int3 mov sub cmp into push icebp pop mov jle cmc dec daa ja js mov jl jno aas jo lahf aas add pusha push lea jmp lea je stc add pusha clc pushf cmp mov call lods jge rorl mov stc ret mov xchg bound xorb cltd and cmpsb cltd je fwait push add jnp push dec add sub xor ds pop mov mov dec ja lahf outsb mov or or add movsb push stos xchg (bad) sbb arpl clc dec push xor hlt imul jns mov out mov das fadds popf icebp aaa pop mov pop xchg mov in push sbbl sub aas and je pusha mov jae mov and repnz add xor jg push mov cs adc adc shrl lds outsb shl pushf or in shr (bad) enter aad fisubr iret ret fdivl lret fdivl cmp outsb sbb cs jnp in xor jle sbb cmp xchg or mov lods or xor sbb pop sahf dec shrb sub sbb pop xlat sub sub xchg jnp sti outsb lock push outsl or xchg stc push call fsubr push leave (bad) dec mov xor les imulb repz std in mov xlat cmp int jl cld mov and jmp (bad) (bad) jge jp leave jbe pop mov cltd sbb dec nop dec xchg sub inc push xlat rcrb or dec mul sbb es outsb ret cmp lea jle push lea jne pusha pusha inc call pushf mov mov fbstp mov and icebp aad xor push shr aad (bad) aas lahf nop (bad) push imul lahf and addr16 outsb adc mov or sub fsubrl xchg (bad) (bad) xor outsl adcb les je sbb scas lock std inc movsb jo imul jo push loop cmp dec or inc mov nop xchg sbb sbb mov popf fld fld fadd add dec dec icebp mov add jnp fwait in in sbb sbb and insb push push sub sbb scas bound ds add std add mov shr (bad) call xor data16 inc jle jno (bad) cltd es mov jg adc icebp jno ds inc test sbb imul mov cld adcl xchg (bad) in push inc fildl or push sbb imul out cld inc jae sub pop aam out xchg adc (bad) test dec das mov sub fwait jl inc clc sub imull pop sbb jbe lds jns and fbld push pop push jne inc cmp and push rcrb icebp and shrl aaa rorl inc xor jp push fs cmp fnop out jmp sub cmp cmp mov mov mov push int aad mov push inc cmpb es aaa js mov fwait cmp adc pop sub mov insl xchg outsl (bad) subl pop call ss or repnz (bad) das outsl orb int3 xor js and call mov iret js and aam jp idivb pop inc push aas or das iret sub adc cmp fldenv jg adc scas cmc mov aam iret rep sbb das nop dec xchg mov repz dec aad push dec jno cmp mov fbld stos je cmpsl xlat jmp pop mov test ja mov outsl jle pop movsb mov jns bound in and dec adc sub push pusha call repz cmpsl pop aas pop pop pop arpl inc lret je mov (bad) add add out in fldcw mov pop xchg or cmp mov jb clc xchg and daa push push in dec addr16 xchg push mov push or or jns iret dec out out or dec jl das outsl push dec sarl imul jno cmp outsl xor repz pop scas push stos leave xchg (bad) test das ret fwait lods (bad) mov scas and sbb inc incl push les inc dec fiadd xchg pop clc test sub lcall cmp es popf mov sahf pusha sbb push mov push stos xchg and ffree stc cmp cwtl pop movsb cmpsl clc xchg and aas rclb nop out add ljmp sub pusha das lahf das data16 adc (bad) in in (bad) leave mov sti and call dec das xor sbb repz sbbl imul setae seta pusha lea pusha pushl pushf movl jmp inc lahf jg fwait push iret loopne and loope adc or cmp and test clc inc xchg pop ret pop xlat dec mov pop mov or and movsbl sbb pop test and dec popf mov sbb jne jp xchg xchg arpl ret mov jae push dec xor jge add jne lcall das pop and push mov push in pushf mov sbb jno mov ret repnz imulb imul lea jae xadd mov not rol mov ror call movsbw mov jmp stc or push pushf jmp movl lea call pushf jmp imul adc mov out pop pop insl test js aad outsb sub jp into xor inc mov (bad) or (bad) iret fisub cwtl pop ljmp fwait test mov in (bad) push shll scas lock cwtl leave addr16 sbb (bad) xor aam stc jmp aad add rolb jbe sbb pop mov ds adc leave mov mov jbe jle xor xchg jo cwtl daa cmp pop add (bad) ja pusha addr16 lods repnz fs pop add jno cmp xchg dec imul cmp pop and imul in sbb sub add movsl std loope sahf add xor cmp pop push les mov cmc ss fwait dec mov shl and xchg (bad) cmp jmp mov mov jo mov jmp push sbb insb inc cmp loopne inc fst xor iret and pop fwait push mov mov sub pop adc fnstsw mov adc clc xchg push adc pop sahf inc leave push jl dec push xor jmp das sub jno aaa push cmp add neg call hlt enter scas push xchg mov push inc (bad) aaa pop in or adc hlt add adc pop inc cmp js insl jle fs cmp ja adcb mov je enter cmp push cltd jl pushf aam shl fisttpl mov sub (bad) cmp xchg ja ja fidiv (bad) fistpl pop leave push scas pminub fst movsb xor add xchg jae jg mov adc mov jmp cmp addr16 mov mov jno ss leave lahf rorb add in repz ljmp movsb fucomi aam loop xor cltd sbb fs push popf push sbb or in jb xchg (bad) xchg push cmpsl fcomps cmc add jbe pop and dec mov fcomip repnz adc ret aam inc push or (bad) jno pop push imul mull in jecxz and pop testb or xchg mov jl xor dec xlat dec inc out cmp jne inc ja test adc or pop mov in mov (bad) enter mov shrl jb dec call jmp clc loop jno,pt xor cmc add pushf pusha movw lea jmp push lea jae push pusha pushl lea jne call mov lods shr mov cs (bad) (bad) ja mov mov pop pop or mov aas pop cmpb (bad) cmpsl xlat push cwtl or les dec ja test outsb jno xchg adc pop add loope cmc loope in jns pop (bad) xchg divl frstor repnz dec adc clc daa push (bad) sbb ficomp push push bound sub into loop loop das lock lret push bound cwtl mov stos xor inc mov add pop pop lahf mov mov (bad) jb (bad) dec rcrl (bad) outsl iret pop test push iret das jo jle mov stos ret ds je sbb les sub sub pop outsb mov xchg in xchg test sbb xchg in std jno xor js pushf mov in push iret aas cmpsl mov outsb xor pop mov mov mov jbe mov cmp adc push test (bad) adc sbb push mov repnz rorl imul xor jmp push mov sub sub lock ss mov add push lcall jg mov jp adc pop aaa dec jno xor ret imul add insl insl popa outsb fs imul addr16 add pushf cmp jmp movzwl movsbw mov jmp mov lea pusha lea call pushf lea jae stc cmp stc pushf sub jmp pushl cmp call lea call pushf pushf adc push jmp pushf jmp mov call pushf jmp not xor into mov cwtl xor cltd push push dec les push and lods xor xlat mov mov aad movsl sbb sub fs in add daa imul adc mov sbb and lods mov and out sub jg add pop repnz push mov pop adcl out aam jbe mov (bad) jl inc inc xchg bound push shlb test test xor addb jge movsl cmp lds lods out xlat aaa xor loope fucomp (bad) out sub les cmpsl cmp xor add dec stos xchg cmp push add xlat daa (bad) xor jge mov imul movb cmpb movw pushf push lea jne daa ror bsr dec sub aaa bts mov and stc add (bad) lock push mov movb bt pusha test pushf movb pushf call add add push adc adc adc sbb adc add add add repz adc add add sbb adc add mov jb pop test fadd fsubr hlt push inc (bad) cmp subb sahf adcb and mov rcrl cmpsl dec mov sbb andl pop in fistpl nop ljmp xchg jmp les sub mov loop adc push mov or cmc fisttp mov or fsubl and fs jmp cmp sbb jns pop pop (bad) push mov sbb mov jno xor mov ret lea jae pusha push push lea jne push stos pusha movb movb lea jmp stc rol push pushf clc pushf cmp movzbl pop bswap lea bswap push setle bswap mov pushf lea ja pushf mov push lea jb jmp push lea ja pushf imul push bt add pushf lea jmp mov jge xchg enter xchg jbe sub xchg in hlt sub outsl ja pop arpl imul jae (bad) lock shl stos aam pop fcomip adc dec pusha mov mov cli inc mov test or popa sbb ficom sub data16 (bad) xchg xchg scas jns dec xchg or es in test xor dec imul dec das dec xor in repz cmp pop loope mov mov jb dec xor lret inc (bad) daa mov xor jmp push add cmp cmp insb jge jg (bad) jae lock mov in test out sub mov aas sbbl imul xor popf scas iret aas mov cmp sub (bad) jb xchg cli lds pop in jge das nop rcll sub inc sub dec xchg rcrb adc jb pop xchg mov movb mov mov cmp sbb xor daa js pop popf and jmp sub nop jp cmp dec aad mov cld (bad) fstps adc jg inc stc rcrb aaa dec cld inc subl xor push cwtl das sub and test or jns aas movb jno das scas loopne xrelease inc sub jg add sub mov pusha cmp pusha lea jbe xchg test jmp push lea call push pusha lea jne pushf jmp inc dec jmp jmp rep jmp call cmpb fmull scas aaa cmpsl dec mov mov nop iret sti and sub pop movq (bad) xor mov adc pop insl stc or push dec pusha mov dec aam leave xor and or mov std push xchg insl icebp add mov dec cltd mov ss and sub aas inc daa cmp loopne loopne add jns cltd gs (bad) ja sti push into js shl cmc stos xor (bad) fldl cli push and pop mov sbb mull and fs pushf mov insb fcoml pop mov addr16 sub mov je les aas int3 ja cmp push mov sbb xor xlat mov lahf pop out and or mov (bad) test cld ret stos aam sbb fimull xchg lret call cmp jmp sbb pop pop nop mov adc outsl adc lods repnz imul fiadd rcr jno sub hlt dec jb xchg dec addr16 and (bad) notl iret pop (bad) sbb mov sahf scas or xchg pushf push push jmp cmp or es maskmovq sub cmp adc and push dec stos pop mov mov frstor pop mov iret nop cltd (bad) out iret loopne imul add out or cmp jp jbe jp mov ret std ds lahf movsb cmpsl push mov into sub (bad) fsubrl pop cmp stos das mov daa clc cmp xor jns lods xor sub jno (bad) push dec xchg addr16 movsl cmp pop pusha adc xchg mov insb mov fisub pop xlat ljmp out daa arpl ret pop ret or jl mov jb pop jo stc repz rorb sbb and pop (bad) ljmp sub lahf je in push dec push das jo cwtl sub jno sub sbb (bad) jmp cld pop mov inc xor cmc clc repnz movb mov lea jne cmc xor btr shr mov not cmc shl add sub mov sub rcl sbb mov call or push popa inc pusha jnp stos sarl movsl int3 jb pop repz sbb das fadds push dec fwait inc pop jg int push out das push push mov jnp cmp or movsl les add and les add in mov repz lret push and imul or inc or loop cmp push mov rcrl jns pop and inc (bad) fcomps mov mov dec in mov pop mov into mov pop ret jb adc dec push dec das xor dec dec jb mov addr16 sub mov adcl mov loope xchg jno insl lcall dec or gs sbb imul int or sti idiv or dec je push imul push adc out mov add out rcr scas mov out insb xor cmp sub (bad) cli sti int3 jmp or fsubp repnz sub fcomp and (bad) loope loopne adc sbb rclb loopne mov pop jp rorl je enter imul xor imul push lods jmp pushf cmp movb lea jae call inc ja pop mov pusha mov fidivl (bad) das sbb clc pop add clc adc mov and jle or (bad) dec sahf inc cs xlat (bad) test mov xchg aas dec xor into xchg (bad) xor aaa outsl xchg mov fcomip xchg les mov cmp ja cmp aaa cmpsl mov sub cmp sbb out pop inc das jo adcb xor icebp cld jno xorl aaa test sub iret sarb lret xor popf sub add out jo aas fbld dec push inc sahf gs inc shr mov xor mov lret sarl les in pop daa jmp sbb popaw jle in jno sub xchg jbe lret test jns leave jg scas lret mov out hlt lret inc fucomi idivl add movl or mov pop cmp outsl mov jg mov les out jecxz fistp sub loopne xchg iret sub cltd mov stos mov je call call or pusha inc sbbl cmp repz sbbb gs mov fsts (bad) mov stos push test mov test nop fmull roll jb add xor push pop es ljmp jecxz mov lds (bad) stc gs push inc push rcrb sahf add dec (bad) stos mov cs pusha pushf das lock addr16 and popf (bad) xchg adc cld pop dec mov aam in jb (bad) popf scas fs rorb mov push push push test mov xor xor (bad) xchg test jle mov cmp (bad) cli xchg (bad) mov dec sub xor push push push xchg or xor es mov cmc dec pop movsl out mov sbb int3 loopne mov popa (bad) insl repnz test mov subl and cmp stc and test sbb cmp cmp imul sub sub ret pop fisubrl stos mov fstpt mov and cmc dec loopne adc mov cld loop movsl mov (bad) mov pop inc pop sbb add and sub or ffree in sbb cmp cmp mov mov cmp jo push loopne pop lods jb jge add cli cmp push add xor incb js dec lcall pop inc cmp pop mov or sbb in nop add out jns cmp aas add cli lds cmpb arpl cmpsb cmp test push dec push sub jno daa ret int3 add test add pusha setg pop bswap movb jmp lret int cmc jmp es or mov shrb in mov cmp inc xchg leave adc icebp dec jns cmp in inc push scas movsb pop movsb or push xchg insb jecxz jecxz (bad) mov out push daa into icebp jmp cld mov push xchg mov cmpl int3 pop test (bad) cli add xchg mov mov rcl sub xor xchg jmp lret xor ljmp mov pop movsb xchg test add dec fbld shll rolb std jle (bad) sbb or and testb notb add mov mov cwtl out daa jecxz leave cmc mov mov mov inc dec ljmp dec xor cs insb add push test ljmp inc movsb fistl insb ss movsb imul lock dec out jle scas jo pop mov inc sub fcoml mov in (bad) enter jl daa jecxz insb scas ret and repnz adc shrl pop lret lret movsb stos mov in rclb ljmp sahf addr16 in mov add cs ror adc sbb test cmpsl (bad) mov (bad) push push (bad) movsb lahf cmp pop mov mov daa pop inc pop repz or jae aad and push lods pop mov pop pop cltd es call and xchg ret and (bad) hlt lret and or insl (bad) popa rorb dec (bad) aad enter and cmp push bound sub (bad) cmp pop and sub pop in loope insl cmp dec ret in xor (bad) repnz pop frstor outsb inc ret push mov popf mov (bad) sti movsb cli test and add loopne push fsub ficomp scas enter cmpsl cwtl adc lock movsl and pop gs insb push xchg std rcl clc jae in push es and push adc repnz mov or or sub incb jmp mov gs jmp pop push pushw andl and or imul movlps mov mov xchg pop add mov cmc ljmp (bad) sti cmp ss movsl mov call into fcomip add jmp lcallw (bad) fisttpll aad xchg js (bad) rcrb xchg push inc cmp andb pop outsl pushf adcl popa or loop sti enter mov xor push mov mov nop out (bad) enter and imul add rorl adc mov pop jb (bad) mov lock cld (bad) cmp (bad) cltd movb js sbb mov (bad) ds and or test xor popa mov sub test (bad) sub mov test xorb sbb icebp xorb mov in in mov mov push sub dec inc ret jmp xor xchg lret xchg mov fnstsw pop fadds aam adc push fs mov pop fsubs jae push xchg dec or xor and cs daa cmp and mov jecxz dec cld pop add movzbl bsf shr pushf or inc shl mov rcl mov not stc add movw pop not movzbl mov pusha mov mov push jmp lea jecxz int3 push ret inc in sti dec arpl pop leave adc cltd add enter stos mov mov je dec push ret and inc roll in sub scas hlt xor cs and icebp insl fcoml mov push dec pop sbb shl and mov xchg mov and mov adc push in int ljmp sub (bad) sbb and pop push inc out jo xchg mul or out add test sbb push or jo add and imul xor enter inc mov lods ret mov outsb mov xchg insb xor aas cmp pop pop xchg push enter mov (bad) jle loop loope loop xor (bad) into mov push (bad) (bad) inc mov jecxz adc jmp pop ja pop mov mov test insl xchg (bad) jo cwtl (bad) adc pop les push int3 cmp sbb inc mov fist xor adc cli dec mov adc incb pop sahf or arpl movsb sti xor popl pop rcll mov sub and daa mov pop out and call jno stos or pop out jno and dec push inc push dec cs insb add rcll cmp pushf movb lea jae pusha clc pushf cmp mov jmp add or test push sbb ret and xor scas push add pushf mov (bad) enter push rcl daa sbb mov and pop jae add pop mov addl jmp or rorb xor dec mov mov jbe and mov movsl cmp cmp fdivl fildl push (bad) xor xor inc or xchg leave inc (bad) jne inc sbb pop and scas scas (bad) xor xor rolb sahf (bad) jb dec adc push es mov roll aas mov aas jg mov and cli in jno and jo xchg cmp xchg in jne sbb insb push sub pop or dec inc jnp addr16 aas or pop idivl jmp jb dec xor xchg sbb fisttp jmp jecxz into dec add insl enter dec dec scas imul jmp xlat pop inc imul sub stos adc xchg loop fidivl push testl or div in (bad) leave inc mov (bad) mov imul mov fild xlat sub insb ss call or int3 mov inc cmp nop push insb xor pop or xor shll fwait cmp ja stc jg stos dec mov and xor cli or mov sbb xor dec push arpl or lahf mov jae jp psubsw or mov daa inc pop dec scas inc fs mov clc jns aad cmp popl mov ficoml test stos adc xchg xlat mov adc stos push sahf mov xchg sub xor xchg std rcrl xchg rolb add add lea jmp pop outsl xchg in mov cwtl mov lea jno test fsub pusha jg xchg outsl sub mov jecxz or (bad) pop lods adc test lret aaa icebp out adc stc inc decl pop pop ljmp ljmp inc push adc inc sub and cmp and fcomps loope scas jno (bad) mov scas mov aad (bad) iret out (bad) sbb cmp inc sub push xchg dec pop jno push mov imul pop lods jg mov jb inc cli movsl sbb js or sub xlat daa mov popf jl je nop lods xchg int3 (bad) iret sub jecxz pusha aam dec xchg jb lahf mov or xor mov pop mov inc pop inc cmp sar cmp pop jae jge je adc lds jo lods cltd ffree push dec mov mov (bad) loop adc cmpsw jno push push cmp push rcr not stc stc jmp mov dec call sete movzbl mov mov mov not pop pushf pushl ret adc sub push or sti bound popa (bad) cmp call popa push test push xor push or xchg jmp sbb xchg clc (bad) push xorl adc out (bad) fcomip test or pusha das push (bad) mov and psraw cmpsb mov xor xchg sub into xchg mov hlt adc pushf push or add sub leave mov inc imul subl out (bad) mov hlt stos stos xchg jns sbb xlat xchg (bad) hlt jmp in std jno sbb lea jne push pushf lea jmp mov adc js fwait mov pop jmp ds mov push adc push dec jne dec pop pusha pop jo jl mov push jb dec mov cmpsb or sti dec incb jns nop bound jmp jge int push fwait mov ss lret cli repnz jns in pop fisubrl fisubl fucomp es lret xchg add fs fwait sbb jo mov xchg movsl test int3 repz jp out or mov jl insb mov mov jae mov imull jno (bad) inc lcall dec mov out push shr cld loop jno sbb fcoms push clc es incl iret push into fbld xor push dec pushf inc lds lock fadds cltd es and lods xchg out in fistpll push cmp loope pop aam xlat jnp adc inc xor jg in push xchg out xor sbb jbe iret aaa or xorb jnp mov out sub cmpsb dec xchg pop in sub mov sub stc mov cmp push mov sub sbb lock in negb or pop pop sub sbb mov sbb stos jmp push std dec stc inc jns insb jb jb mov imulb bound mov aaa inc cmp enter jae ja imul cmp cmp idiv push sbb lea sub add adc stos dec or jl loopne mov pop adc jb (bad) (bad) jae dec mov popf jno push inc cmp sti xlat enter mov add rorl (bad) sti or ss xor mov cwtl out cmp stc movsl aad or ja pop adcl mov mov jp imul inc pushf pushf pushl inc pusha adc bt rcr xchg adc das xchg mov rcr shl mov movw mov cmp btr shl xor mov cmp test sub push movw mov rep movl mov push pushf lea jmp pusha mov movl movw pushf jmp xchg mov out inc pop mov hlt sti lds mov ss jo int3 pop add clc sub nop push insb push jo jne sahf pop lock lock jo and pop xor pop int3 xor push add mov icebp dec (bad) lea stos pushf jecxz cmpsl les cli push jle outsb test add mov and jg iret lock das in fsubl lods adc pop push mov or int jne (bad) dec pop mov pop rorb int3 mov mov jb stos int3 rorb add pushf inc push mov incl inc jp xchg jle or pop out movsl inc jle pop sbb sub inc jno sbb ret sub pop (bad) dec out jns (bad) adc movl repnz aaa mov in add in addr16 sub sub jo out stos pop into jns fsubrp mov cltd cltd movsl insl icebp inc fsubrp adc inc mov rcll cmp xchg lret fdivrl push push cmc jnp clc cli pop dec mov jmp push and mov xlat dec js hlt (bad) pop (bad) aad movq dec pop aad sbb movl lock mov lods sbb incb aaa outsb jo inc cmp imul push imul les sbb in push sbb jp inc (bad) mov sbb aaa shrl pop aaa out lock enter movsl adc push fldl pop ret pop xchg outsl push dec mov mov pop mov inc and xchg push mov dec adc clc mov inc push or inc pop mov add xlat mov adc pop pop lea or addr16 sub sbb mov ret mov call mov sbb sub inc sbb std jno das outsl mov sub ja out rolb popf ret dec nop push jno jle es stos daa js pusha or mov and xlat call dec sbb push pop pop adc shrl jno sbb mov sarl xchg cmp inc (bad) (bad) or push rorl data16 cwtl cmpsl mov push pop es hlt sub cmp push scas inc add and ljmp fildll pop sub push mov jns fsubrp ror icebp rorb and cmp (bad) cmp jns dec adc add popf pop mov ror cmc push or push inc push dec in dec and (bad) jno sahf mov js jbe mov xor or outsl xchg xlat push push push dec out nop xchg call jnp mov jno jbe sahf insb jae jl xlat push clc mov sub inc cltd fidivl pop and mov lea ja sub add not pushf mov cmc call out add pusha rorb test je je pusha cmp add xor push lea mov sbb daa jnp fcomps (bad) cmp negl lret inc push push inc or add sub sti cli add cld lret inc push dec scas mov push nop cmp cmc push mov inc add pusha jno faddp add add (bad) idivl in ds stos dec sub sarl les pop cltd or inc pop xchg dec pop dec (bad) mov or cmp movsb xchg int3 and mov lcall or int3 sbb mov call loope outsb jno push cmpsb jmp scas (bad) decl pop or bt rol call pushl add jg shl not not mov jmp add inc gs outsl fs gs popa jae dec popa insl gs add add add bts cmp dec push xadd mov rcl sub sub call or ds mov fs out jns mov push mov repnz cmpsl push mov mov dec imul add pop sbb dec pop std out mov shll mov inc push (bad) out sub sbb int3 jb mov push imul loope shrl data16 nop clc inc sarl mov lds mov mov rdmsr (bad) sti jmp sub mov cltd dec jne inc fildl or add pop outsl push xchg mov push xor (bad) cmp aas push xorb jae icebp jno push or sti and sbb xchg int3 inc cld cmp add insb xchg push outsb or sub cwtl xor mov cmpl out call jo xchg dec pop lea aam sbb lds xchg or sbb into daa push insb cmp push cmpsl aaa mov in in xor jl and push scas push jmp cmp fsts cld add movsl flds cltd push push xchg inc push dec pusha fst in outsl (bad) iret iret cmc adc push je into adc leave push pop pop repnz jno adc mov fs call push movb pushl lea jmp and inc cmpb dec mov jmp in and test out out lods roll (bad) aaa (bad) lret mov mov mov fdivl lock mov jns dec stos cmpsb and scas jg stc stc xor xor jb (bad) fwait cmp push sti mov mov mov push icebp jae std cwtl dec cmp inc pop cmpsl rorb or adc inc ja jg mov cmp std cmp cmp sti hlt sub xor jle ret add jle push cmpsl mov xor loopne sub jmp neg mov mov movb inc cmc bt pushf rol movb pushf cmp cmp movsbw lea push pushf mov jmp dec lcall nop dec pop subl pusha jle scas sbb insl ror cmp dec push loope nop mov (bad) mov js (bad) fucomi (bad) fisubrl mov xor or inc pop inc sbb pop jmp push out sbb pop sbb lods xor mov (bad) jno movsb das rcrb jae dec mov adc outsb cltd sar add leave xor cmpxchg mov jne lcall push and scas push movsb popa xchg lods test cli test jno adc push pusha movl call lcall in mov cmp pop decb jmp ror shll inc jl jb (bad) call push test rcll dec and aas add aas xor stos pop add fs (bad) mov cmp or inc fldl xchg imul lods adc jno push cmc fs pop cltd stos xchg lahf lahf hlt loope dec sbb pop mov sub xor test push adc xchg pop dec fsts shrb andl enter xchg sub cmp ja push dec mov mov call movb lea jne pushf pushl stos push pusha mov movw lea jmp jmp (bad) cmp inc sbb cmp int3 sti lds lret dec insl repnz xchg push ljmp or out sbb cs int out hlt adc sbb clc pusha jb outsb xchg outsl and mov je (bad) cmp jl into sub dec sbb adc add pop nop push loope cmpsl in lea xchg pop inc or mov push inc das movsb jp inc xchg xchg or ljmp test pushf subl nop mov add ljmp push xor inc cwtl insl rcl into jg adc adc movsb mov xchg xchg mov xchg mov xchg pop stos test outsb dec xor aas or aas and adc pop and xchg adc add mov sbb aaa dec pop fildll out jle sbb outsl call loop out push in mov mov dec xor in mov sbb out push mov cwtl stos jne leave movsl xchg mov jb in xlat mov icebp cld push in inc mov push mov mov push cmpsl sub leave lea or mov jecxz in std loope mov jno cmovge jp sbb pushf jmp std lret sub addr16 mov out cwtl mov fmul adc hlt (bad) cld or ss aad mov mov mov lds jo out jl cmc xchg call push add cs mov cmpsl fsubs (bad) xor or and pop add push or outsb jns data16 and mull xchg add fwait dec jb repnz pop cmpsl mov popa icebp lea jno (bad) xchg int3 imul fiaddl inc lret test mov or inc cmp pushf jmp leave pop out ret (bad) mov push sbb sub jl cmp push data16 int dec xchg adc jnp or in sbb cmpsl ficomp adc test cmpb pop and dec xlat (bad) xlat cmp jnp jg addr16 mov sbb sbb sbb cmc in sbb add std sbb jg icebp sub sahf inc push dec sub jl cs sub je adc sub adc adc cmpsb aad cmc stos sbb cld mov mov jmp xor and aaa inc cmp inc lds sti arpl dec adc sbb and lcall add sbb imul in (bad) fcmovb and and cmc mov out inc dec outsb mov aad lods push ljmp sub jo sub lds jge cmp iret out and inc pop (bad) sbb push aaa call das xor gs dec pushf in jb repz sbb pop (bad) repnz inc sbb add in cmpsb incb adcl jnp dec out mov addr16 pop mov mov ds sbb out (bad) fdivrl rcrl lds adc mov jno or mov mov (bad) (bad) outsl out (bad) aaa inc cmp imul sub dec je dec ret lret xchg (bad) pushf push adc (bad) xor nop mov call sbb sub dec mov xchg and jle insb xchg add in sub dec lods or xor in dec pop test leave xchg pop cmpsb mov sbb pop inc push aam add push mov loop cmp (bad) cmpsl sbbl stos push loope fidivl lret push rclb (bad) repnz imul add movl lea jmp movl pushf mov mov lea jmp push fildl andl mov mov xor xor sub pushf cmpsl movsb imul mov scas mov add cmp adc sub inc (bad) es mov lcall std adc call les sub js pop xchg fsubr or ljmp or push xchg sub jp jno push mov add (bad) leave sbb mov dec (bad) dec push xor jo cwtl js dec xchg inc cwtl in loope add movsl cmp push xlat test cld leave cmc popf add cvtpi2ps cltd movsl push test jno or push jge lea je pushf mov cwtl lea lea jle push jne lea movsbw not lea pushf mov movl pushf pushl jmp call pusha mov pushf push pusha lea jmp movsbl mov push movsbw lea mov push call rol cmp add bt cmc call movzbl mov movsbw movsbl push call push pushl pusha jmp push stos mov sarl gs lock pop mov sbbl scas xchg mov rorb aaa js mov ds movsl fldcw idivb out testl cmp dec sarb ja or cmpsb jns ficompl pop incl jns test loopne dec and push mov int3 repnz xor mov sub dec or inc jno or add imul jae push mov pop stos push fs loope test ror and sbb and sbb (bad) mov std jmp sub xor jl cwtl push (bad) into test or adc sub shr inc and ss and sti test fstpt and or pop pop sbb dec es popa (bad) adc mov ss icebp out icebp inc mov mov pop adc ret add pop sub mov lea bswap movsbw push mov pusha call pusha jmp stc pushf add cmp (bad) rorb push pop pop mov test push inc add and jmp ljmp mov sahf fsubl inc ja into mov mov out pushf mov or jl xor pop (bad) push fnstenv enter push imul xchg push out sbb dec stc fwait xchg ror insb (bad) sub cmpl int rorb cmpsb fnstcw or sbb jmp iret fstpt sub cmova sbb pop add adc pop lcall pop popf jno or int3 xor push cmp lods adc cmp push mov insl push imul sbb lcall sbbl out inc push es dec xchg ljmp push xchg (bad) fsubr std push lea popf jo lea (bad) ss mov cmp sarb add mov mov push xchg test mov add subl mov xchg gs std ds mov inc adc sbb (bad) fmul adc pushf ret pusha (bad) jl sub mov jmp pop or jno or fs jae cmc sub jmp mov pushf inc call neg sbb mov push pushl bt clc xor clc pushf clc repnz lea jle push pusha lea jne pusha lea jmp sub inc pop inc int mov sbb aas jns pop add cmp scas xor add sbb rorl jbe rorl push lea outsb jnp bound xchg jns mov ficomp pop cld lock insb xchg mov or or fcmovnb sti movsb inc repnz popa push out call imul cmpb jmp mov fsubr adc cld or pop push cmp and idivb insb mov jecxz sti arpl dec mov enter mov mov jae jl ja xlat (bad) xlat jg (bad) mov fcompl push jbe sbb xor lock pop pop gs popa lods ficompl addl in or test arpl lcall dec jnp pop jne push cmp sbb loopne or adc xor sbb pop aas xor js fsubs imul outsb mov loopne push pop inc notl insl lcall push cmp test aad in xchg or dec or mov lret ret out stos xor cli and or pop in jle lret aas bound mov jbe fwait or pop xchg or and pop and loopne lahf and int3 cmp inc cli xor sbbl loop hlt ljmp pop xchg lods out insb xor and mov into jp mov push mov jmp adc ds rorl (bad) fs mov ljmp inc imul (bad) or mov popf popa jb mov aam lcall adc cmp sub jp fidivl sbb leave push xchg sub cmpsb in call stos mov insl dec xor adc cmp ds cmc inc cmp mov lds nop push lds sub popf std (bad) sub and xchg lods mov sub pushf jle xor dec push xchg test sub sub lds orl je jnp xchg enter rcl aad lods mov enter imul inc daa cmp repz and scas push fldcw push push data16 adc push bound fucomi movsl cli push sub sub mov div imul fistl roll fldenv icebp out incl gs (bad) xchg or in jb (bad) mov pop in jb into lcall jae rcl adc sbb cltd xchg or lcall xchg pop loope std adc pop jno add icebp mov in adc enter aas fs jmp ljmp clc (bad) imul movq dec sbb testl lods mov mov pop mov ss fs ja jnp addr16 fild pop div add lret or sbb adc pusha mov shrl dec inc cmp popa jb fistp sub mov icebp notb lds bound adc and fs jne xchg insl sub int3 inc mov enter jge out lret decb imul stos mov data16 pusha shrb scas or mov pop jecxz lock stc mov inc sbb loope insb jb addl movsl cmp and cmp imul add loop (bad) sbb fmuls sub xor cmp push sbb repnz mov loope mov jg adcl bound mov or (bad) (bad) clc dec icebp xor xchg mov cmp sub scas lods stos pop sbbl shrb in aaa es sub insb icebp int aad les mov sbb jl jnp fcmovne test out add xor cmp cs jmp jns ret outsl mov cmp jae dec pop mov sub jecxz fiadd mov inc fucomp mov movsl gs scas stos mov jno add pop inc inc mov lea jmp lea call pusha pusha pushf mov adc mov lea call jmp mov or jne movsl stos mov add inc pop and ljmp popa repnz call mov cmp fadd es arpl jae jmp adc adc rorl sbb sub or scas loopne loopne faddp dec rcll inc and push rorl adc cmp insb (bad) repz pop xchg xchg mov nop mov sbbb std xlat or call movsl (bad) mov jne pop addr16 lea mov cltd test lahf fcomi test add pop mov fwait lods push (bad) fucomi mov sub lods repz xchg test inc cltd stos clc enter test sarl stc sti repz nop stc paddq adc add jmp jge je push cmpsb enter cwtl sub xchg mov xchg or (bad) mov xchg enter xor fcompl in (bad) jno add nop outsl scas cmp sub cmc pushl popl bt clc stc cmp pushf mov movl pushf lea ja stc pusha xor sub cmp and mov pushf sub add dec mov rcr mov pusha stc call jle mov lock sbb push pop pusha js jnp sbb mov out mov (bad) mov call das push xchg mov (bad) xor xchg mov xchg leave inc leave pushf imul outsb in cld bound inc fldl aas mov (bad) fist iret lock or inc movl cli arpl cwtl cmpsl jge hlt aas pop (bad) cwtl inc mov adc sbb or hlt or jecxz repz push bound loope shr adc mov insb inc (bad) mov sub in mov stc dec jno add enter mov cmp lcall outsl insb mov add xchg inc jmp add mov cmp pop movsb stc in adc jb cmp fwait lods das nop lret popa mov mov sbb es mov in or cmp add aad lret ret cmp int3 ja rorb imul imul jns ret (bad) hlt std popa loop xor aaa or jae jb xchg cmp lret fs ljmp popa cltd jle jge insl in jb jnp or add in push loopne adc sbb xchg lods ror daa fisubr mov roll ljmp pushf jmp dec and cmp cmp lret mov inc sbb data16 mov in jno push sub dec adc test jns jmp fnsave xchg or adc cmc dec push cwtl rcll rorb add cld or sbb rolb pop mov inc push dec mov (bad) and out jno out scas add xor inc mov fwait or sub mov xor arpl push push lock scas pop mov leave out sbb push sub jg dec cmpsb pop stos xor pop std inc clc xchg (bad) movsb mov push imul jl mov sub adc dec scas sbbb jl jo push pop js enter test mov dec int3 mov inc ds jbe push bound cmp pusha aas xchg xchg into fisub xor xor push int3 cmpsb popf jbe repz rolb pop jmp add imul or or pop mov sub cmp insl inc xchg mov mov ret (bad) enter lret rcrl aad lret fdivl (bad) cmp adc dec fadds rcrb sub movsb fldt iret into aaa mov cld and mov outsb and jbe outsb scas inc shlb fbld lock iret mov leave nop into shrb push jg (bad) push into adc cmp add push sbb push jp (bad) cmp cli add icebp ror fistp jno std sbb test fdivrl hlt pushf call jmp (bad) push add adc (bad) mov fldcw or adc xor xor mov sub sbb scas push popa push or push mov js daa sub lock add (bad) out adc push or and pusha in xchg mov fimull push mov inc incl inc clc in or and xor and jno sbb xor rorl sbb xchg pop mov enter inc push push lret xor push pop jns mov cli sbb and test and push cmc int inc push icebp dec or out ret lods xor adc loope xlat addr16 push lea jno cld cmp cmp push clc ror mov lea call stc cmc cmp call pushf movl push lea jmp lea je pushf pushf lea jmp cmc pusha neg call cmp or pushf jmp mov pushf push or jmp mov pushf movl mov not call push lea call call xor jmp pusha mov mov rep pushf movsbw movsbw mov pushf mov push pushf lea jmp push push push inc push dec xor cs insb add pushl popl push cmp jmp jmp pushf mov cmp rep fsubrl sbbl jae adc push popf push sub or lret sbb inc cmpsb js loope mov push lcall psubb and mov cmp divl push fwait inc test lahf mov and xor sub xor mov movups sbb sub inc stos dec push lea push rcll fldl2e lret jne jle xor cs (bad) mov notl test outsb mov pop cltd repz (bad) sti add dec test mov repz inc cld mov xchg lea stos sbb lahf mov mov adc ss pushf clc jmp add inc gs outsl fs gs imul add xor stc out ds ffreep xor cmp dec sbbb dec nop or inc pop stos (bad) xchg in push adc pop mov push mov sbb stos pusha sahf mov lret (bad) mov mov or cmpsb mov pop push push push jg xchg mov pop or dec xchg or test mov (bad) cld repz xor (bad) cmc ljmp and imulb mov faddp ss mov test out pop movsl mov mull pop bound mov enter pop jno cli mov inc and or ds pushf lea jmp cwtl lea jmp movl movw jmp xchg xchg sete push mov lea call jmp seto pushl inc dec dec mov inc bt neg xchg sub movsbw mov sbb cmc mov test cmc stc cmc mov ror cmc rol lea mov pushl test pusha clc sub call jmp rol rcr sbb (bad) repz rcr jmp pushl popl push pushf pushl movl pushl ret call cmp dec icebp adc lret jge jo dec movsl pusha scas jo pop (bad) pusha imulb sub ficomp js or gs daa cmp push push ret push iret sbb sti ret aam xor loop cmc sbb std gs xor fcoml scas ret sbb mov hlt or icebp inc cmp and je push xchg (bad) pop imul pop lock call (bad) je pop rcrb xor aas bound push xchg push push mov clc mov mov out faddl aaa js mov iret mov cmpsb push mov test mov fnstenv scas test jno out jno clc and roll rol roll xchg clc pushf mov and xor neg mov cmp pushf xchg btr sar cmc mov stc stc cmc movb sub pushl pusha mov rep lea pop pop mov movb pushf lea jmp pusha pushf lea call pushf lea jae test call push inc pop mov gs cmpsl jl rcll adc jno stos (bad) xor pop cmpsl addr16 lret loop in push mov ja adc out jo enter xchg out scas rcrb negl lock add jb mov je and or inc test imulb push sbb out hlt out jg imul xor inc cmp mov xor ret popa inc jle arpl sarb ret xor adc cmpsl pop (bad) sbb add add scas lcall adc dec adc mov inc jg iret dec sub fsubs dec mov jmp cli cmp stos push lret jne mov arpl es dec jne (bad) adc shll adc mov (bad) testb add jbe and ret (bad) jno dec (bad) xchg aaa jne add inc dec (bad) mov and sbb sub jmp out rcrb or das mov and shr test sbb scas (bad) out nop (bad) jns mov (bad) pop test movsl jp fwait mov or lahf pop xchg stos iret scas adc pop les jg jle sub out sarb loop ds (bad) mov incl fsubp flds inc mov mov shrb sbb or (bad) lock adc push push lods aaa mov rcr (bad) dec lock rcll repnz pop sbb xchg xor lahf jecxz sbb icebp add fisubl fild (bad) mov lcall adc pop xchg shl mov rcl cmp and sbb or xor mov mov jno (bad) dec inc xchg imul cmpl add sbb jne cs sub pop pop mov jmp in jns add sbb pop xchg add push enter mov jg and push cwtl in push mov pop js xchg out int3 fucom pop iret test js data16 jae adc cmpsl les and out jae jg gs flds data16 mov rcll mov xor iret aas push inc rcrb add mov movsb mov add (bad) aas pusha jle test pop js ja jae adc jmp xor sub mov cmp aas cltd movsl loope adc test mov jecxz and push (bad) pop lods iret test (bad) or inc movsb cmp push adc sub sub out xchg mov out mov cs (bad) imul cmp cli cmp cmc ret fs ret fcmovnb and or pop pusha push test lods adc add inc stos xchg and es pop bound add adc pop popf popa leave out nop rcl sub cmp pop lret dec push imul clc cmpsb out ja adc mov neg push add ret fimull sbb iret jecxz adc mov push mov popa pop mov mov mov xchg mov pop mov loope cmp lret fist gs push repz rorw aad push sbb aad cmp test xlat or pop jecxz mov test mov ljmp inc lock mov mov stos jecxz pop out cwtl jo cmpsb rorl sbb sbb cli mov jle mov sub nop dec hlt fwait lcall lock push adc stos xchg fidiv clc push cli mov xor fistp mov movsl jb xchg sar ljmp xchg dec cmp sbb lret mov int3 pop and imul cmp cmpsl sub dec popa xchg push add pop mov jo push icebp add inc outsl inc jb popa je dec outsb jae popa outsb arpl inc jne fldl xor dec fs push mov sarl dec or push fldl outsb adc cmpl pop pop test jl pop jmp mull add mov push pusha (bad) jle adc test (bad) and sbb int3 (bad) mov loopne pop and mov push das adc clc fidivr ss in xor cld (bad) adc scas jnp sub adc repnz dec inc push dec inc dec xor cs insb add push pushl cmp mov movl lea jae call mov jmp ss push jbe push sub scas jne sbbl (bad) sbb jge (bad) mov sbb inc test sbb sub (bad) fbld cmp das inc dec mov cli ficompl pop mov add fbstp rorb movsb (bad) cs aam xchg lods pop sahf mov adc jns push mov hlt popf lods aaa les inc int xchg dec xchg test dec push xchg mov mov inc sub inc push das or pop in iret scas ror popf ret dec cmp jae icebp mov fmul cmp and mov jns,pn mov dec push mov pop inc cwtl cmp sub icebp inc sbb mov setae pop mov dec mov push or jno icebp in push scas add inc gs outsl fs gs imul add jmp lcall lods add jae imul pop insl test ja mov movsl push test hlt inc cmpsb mov lods push jno or xchg or mov shr mov fwait lods mov mov lea mov enter adc cmp stos js adc mov sub mov push xor sub fdivs ljmp cmp cmp mov xchg mov and ljmp xchg lods mov cmpb scas adc mov test mov push (bad) jae lods mov loope jno lock mov xor pushf lea jae cmc pusha cmp push lea jae pusha call lea jb call shl (bad) add ret lret push mov jno insl dec mov add dec xor cmp outsb jg call pop test or xor stos inc jo add push add cli aaa scas outsl mov movsb cwtl xchg inc cltd fadd ss sub and ss jl mov les add fistl call xchg ljmp lods shlb cmc or mov xchg jl jecxz daa pop scas mov (bad) sub cmc lcall outsb jnp bound flds xchg jno out call decl bt add clc mov pushf test mov pusha lea je call pusha jmp call (bad) mov push xchg lock or (bad) (bad) loop (bad) mov scas adc dec mov cltd aad sbb inc popa jge mov aas xor cmp pusha or jnp and add xchg dec (bad) sub and push and pop and pop adc pop or push jo es lods jb mov arpl pop (bad) xlat mov inc or out push cmpsl mov scas jmp shlb (bad) mov ja fmuls pop inc pop lret mov or inc std push and sbb or add and push sub popf push inc dec mov lea add bswap btc movsbw inc mov rcr mov jmp lea ja call rcl and loopne lahf sbb ss mov xchg jl and pop pop ja lahf aas adc add aas push dec aad xchg (bad) nop (bad) cwtl cli inc pop inc pop inc jp mov popf xor lods mov addl push test outsb xchg push out add xor sarl mov or sub imul pop lahf pushf (bad) fs sti inc pop inc pushf (bad) clc xchg repz rolb jno out jmp int3 push cmp push loopne stc xchg imul adc xlat cmp adc mov pop cli (bad) jmp sub adc mov jns cltd pop jne adc add inc mov mov dec stos dec je out mov nop dec mov out push rorl mov pushf cmp mov loope adc lock mov int3 mov stos inc mov mov iret psubq and or inc add xor imull pop sbb (bad) push inc mov sbb and repz mov stos xchg push mov fnsave into scas iret jno,pt in mov out sub pop je or cltd inc imul dec and sahf addr16 cmpl mov arpl pop imul ss ss xchg enter repnz mov fs aam sub add in (bad) dec test jg mov lods repnz jns addl pusha jno inc std pushf addr16 dec insl adc cmp js cmc sbb das jl xchg scas sar dec xchg mov fwait adc cltd pop test pusha or in add xor add arpl xor jno in push jno je je daa mov lret or pop ret test inc lds xchg ds loope in xor mov jbe (bad) iret (bad) mov shll sbb mov stc clc sub shrl xchg mov stos shrl mov mov add aam push arpl scas rcrb inc sarb mov arpl mov or fistl xor jo mov shl inc sbb mov jne icebp scas enter or in (bad) leave sbb pop jnp dec xchg sti movsb lret mov xor (bad) push push dec in cli inc adc push xchg jp xchg ret lods in arpl xor and aad fstl or push jmp push mov mov pop lods or iret mov sbb (bad) out add pop insb push stos mov pop add (bad) (bad) cmp inc mov mov popf repnz cltd call mov in xchg mov and aaa or or aad mov pushf ret mov (bad) sbb sub push into fisttp push (bad) daa mov ljmp cmpsl fsubr mov mov mov fsubl sub stos jae nop jge or int aad lock in or flds jp ret loope ret xlat out ret dec shrl sbb mov add dec mov rcll jb out and loopne arpl mov movsb mov dec pop mov pusha ficom dec in push cmp add jb push xchg sub or out ds dec push (bad) hlt push cmp idivl mov or test mov aaa xchg out push sub rcrb inc sbb pop pop stos into call mov mov inc pop dec xchg arpl jb mov sbb jmp sub ljmp and fs jb test pusha cmc pushf cmp pusha call lds xor aad lea xchg or fld fstps xchg jge jb mov test add dec push mov sub mov push out adc xor pop in leave sbb int3 scas sar add ja sbb cltd popf loope jae scas push mov mov cmp inc mov jl sub sub movsl cmp lock arpl call (bad) jg outsl into rcll (bad) mov lods mov mov rorl (bad) push out loopne std loopne das jno jmp jmp pusha push add stc clc not call cmp pusha lea jbe test rcl sub bsr bswap pushf mov stc or rcr mov mov shld sar add movsbl xchg clc shld shr bt btc mov cmc cmp bsr shl add call mov in xor int mov cli test shll jge add dec xor popf xchg test pop xlat call dec push push bound cmp rcr mov or inc jl mov jnp in inc pop cmp jmp or test fadds mov push out nop sti inc (bad) (bad) or and stos jae je jge jbe stos push call ljmp aas mov sbb test mov and xor mov ds adc (bad) mov pop sbb pop js push xchg jmp push rcll push es dec xchg mov cmc adc ficomp gs pop test and leave cmp cmpsb pop movsl dec dec test xchg cmp (bad) mov and push push movsl pop lock mov xor and por leave negb xor sahf pop jle jne leave inc sahf add incl sub sbb imul insb (bad) repnz fnsave out pop jg jmp dec (bad) mov push jle or sbb pop bound leave jno outsb jbe jnp fildl int daa adc jp in mov aad movsb cmpsb clc ds fwait test jo jne lods mov aaa xor and and jo lods call cmpsb jns imul add pop pop jae imul pop loopne or (bad) in (bad) cmp (bad) sbb adc pop or mov xor xchg mov add add ss push mov push cmc dec xchg imul lret out pop or and cld push cmp dec divb push out xor mov or aad mov xor cli les dec (bad) mov in xchg dec popf push sub jp sbb inc lods pop in cli sbb stos popf or and xchg xlat push push out fbld orl xchg rol rcrb ljmp (bad) and ds jne or pop fwait cs test mov xor out jecxz cwtl inc hlt (bad) ficoml cmp int3 cs or pop fnop mov enter xlat and stos aad mov or ljmp adc pop pushf imul mov fcmovnb inc and ds push pushf lea je movzbw pushf mov seta movzbw mov movzbw lahf lea pushf call lea jb bt pushf cmp push lea jae shr mov dec mov pushf and mov call clc stc pusha sub call or pushf lea je movzbw movsbw not lea pushf jmp push bswap bswap lea pushf pusha lea jo push xchg jmp movsbw mov mov mov call pushf cmp test call jb mov jo sub stos sahf mov fwait mov (bad) sub push dec mov jg xchg inc out xor add and sbb and pop popf xchg in cltd mov popa sub xlat daa fldenv fldenv mov out into fbld rcrb pop ret mov mov (bad) pop loop iret loopne xor jle (bad) imul adc push mov movsb push andl mov cmp addr16 in mov inc and stos xchg and push movl mov pushf pushf movb mov pushl ret jecxz sbb mov cwtl out (bad) or sub shll ret sti mov (bad) sbb jns (bad) mov mov adc jns (bad) mov adcb fsts sub sub sub mov add xor xchg (bad) and pusha xchg push push mov popf push sbb fcoms xor lret fiaddl (bad) fbld sub jge pop fadds sbb (bad) mov pop sbb cmpsl call arpl clc repnz movb pushl call js xchg inc adc shr cmp fldl gs dec out mov mov push jb push incb adc jle mov cmp scas push cmp nop pop loopne cmp dec xchg jno push inc pop inc bound out shll fisubl outsl (bad) pop aas pop es inc mov push mov lods jnp shrb add pusha inc jo pushf mov dec adc and lcall repnz mov fisub sub outsl fwait inc out xor out dec or (bad) mov lods jae jno jecxz (bad) fadds or stc mov stc test cmc cmc and pushf clc cmc pushf add add jmp lea jae push call hlt mov mov je xor aaa (bad) repz sub and (bad) jae xor insb repnz mov cs jno daa xor xor (bad) mov xor aaa in out out and in arpl sub mov (bad) sbb and (bad) sub mov test adc xor adc rcl lods ljmp adc add dec cwtl or ss nop mull xor clc push out sbb adc sbb sbb fidivl cs xor repz movsb rorl mov sbb fdivl and pop in xor mov enter push lret adc sub lods hlt js out pcmpgtb adc stc fdivl fwait pop sbb xor cltd pop sbb xor lahf pop pop ficomp sahf xchg xor jecxz arpl xor loope popa and out addr16 das out mov mov jb js cld and xor in sbb pop ja inc or insb int3 lret mov push cld std xor or les stos ror jge and sub in and inc out mov das mov mov cmpsb repz mov out xchg lcall test mov scas dec cmp adc xor adc repnz adc adc sbb and and sub sub jecxz jg xor xor std and mov sub testb add repnz push mov sub and rcrb lods sbb add in cmp repnz sub adc addr16 add or push lods adc adc push mov sub and lods and sub sub aaa (bad) sub ja adc cmpsl testb add push rclb lods adc lock push push xor or movsb daa pop loop pop hlt sbb ficom adc lods and jb xor xor dec loopne push xchg mov pop sub hlt dec shll fimull adc rorb add aaa adc lods sub hlt insl (bad) mov je adc pop mov mov or push and cs push xor addr16 xor sbb pop ss pop sbb cltd pop sbb cld pop fistp sbb fwait test fsubl out jno pop fcompl sub fimul arpl jmp pop les mov pusha fidiv adc sub mov mov pop je fcmovu sbb ljmp test fs sub fiadd pop sbb sub call jmp lods pushf ficom mov fsubl fildll loopne je pop sbbb and and fmull sub or lahf in sti mov and jecxz inc inc cmpsl lret movsl adc aaa pop xchg sbb neg pop cltd push sbb das mov aad (bad) push add push rolb lods or and shlb sub (bad) and mov sub and rclb lods adc sbb daa mov sub es sub or or and or lods and jbe (bad) mov ret loopne mov out (bad) jb imul je fimul aaa (bad) xor xor or ljmp mov push movsb xor sub mov adc aam push (bad) divb xor dec ret sub xorl clc xchg iret sbb or ret aad add hlt mov cmp xchg xor repz dec push xchg xor mov xchg push into jg hlt (bad) mov loop pop lea adc mov in rcrl out out sarl sbb push push movsb xor aad cmp int3 jnp cmp xor aam and jae ja decb jle cmp or inc xor (bad) mov mov cmp mov fucomip aam adc daa movsb sti xor out js mov jge push xchg nop cmpsb cmp xor adc (bad) ss jmp sarb xlat (bad) cmp mov add ret sub sbb rcrl xor and mov inc dec sbb jne xor popa (bad) jae cltd mov mov fcomi idivb dec sarb adc jbe or dec jns and sbb int xchg push cmp sahf mov xchg mov mov lock jne dec sti xor loope jae adc jnp inc nop adc insl (bad) xor dec xor out jecxz leave mov inc cmp jl std outsb call scas xor enter mov gs mov mov (bad) idivl and std lret out mov pop or xor mov lods pop pop mov insb and push cmp jle negb call hlt rol das xchg arpl add push adc xor cli jno xchg mov adc movsb jae (bad) (bad) fildll test subb loop cmpsb xor add xchg xor sbb push and dec add xor pusha mov out or test mov cmp cmpsb addr16 push lods aaa mov mov adc sbb addl sub cmp mov jne cmpsl out xor sub scas outsl mov out push and psubsb xor push pop fwait sub aaa repnz (bad) and xor sub xchg mov push push push daa mov or push jno adc xor jo jae or je or dec add hlt sti push outsl add push (bad) repnz loop pop add jae loopne xor mov and jne aaa sbb xor repnz push add mov sbb push xor test adc cld mov (bad) aaa add (bad) pusha in ss xchg arpl lods add lock arpl insb sub or push mov and xor and xor out lock add sbb icebp xchg arpl sub or sbb test cli into adc pusha ss pusha xchg arpl insb cs pop cwtl or sub xor rclb (bad) and je mov rorb sti cwtl cwtl test add jb arpl mov xchg cwtl movsb out sti cmc sub arpl insb rcrb cwtl jo lcall mov xchg add out cmpsl ss add in out lahf ss mov jno fwait cwtl stos out or mov arpl test movsl add out popf lods xchg arpl insb jbe cltd add out xchg mov xor push xor fcomps insb fnop in add in jl shl add sti nop push ficom sti ficompl jns (bad) ss arpl out mull and mov mov arpl cwtl mov repz sti in cmc out xchg jne fst in add xchg arpl add sti jle aaa sbb xor pop xchg arpl cmp cwtl insb out mov aaa sbb sub data16 arpl cwtl xchg rorb cwtl (bad) out jg insb adc pop xchg arpl cmp mov jae arpl arpl jns gs jne xchg push rcrb insl sti test pop xchg arpl (bad) (bad) jno push sti popa cwtl jge push xor int3 push sti mov (bad) jne enter std ret lret mov (bad) jge into js insl sti ret pop insb lret mov jge (bad) js insl sarb leave jne mov lds int mov add cmp push insl rolb dec push sti cmp inc jge dec js insl rclb inc push sti dec pop insb jge,pt inc js insl sarb std push push sti inc pop insb dec mov insl rorb cmp push pop insb inc mov push and call jo pusha dec and xor sub lods xor out in in and daa and xor shr in xor cmpsb adc mov add and ss lock adc mov (bad) in and je call icebp mov call loope push sahf pop mov cmp sbb pop push aas xor xor sbb xor xor pop xchg scas sbb inc or xor and mov sub pusha sub je ficompl pusha into fistp int mov ljmp loop xor ljmp adc sbb and mov test ljmp daa sub ficomp inc inc daa es and cltd mov and sub cltd mov out cwtl fldenv sub movsl pusha adc outsb pop in sub mov es clc dec sub pop xlat jmp hlt sub (bad) (bad) pop mov das mov into scas jecxz js ss movsb pop sbb sub or sbb addb mov hlt movsb fildll push loop aam push lods mov rcr pop ljmp mov jno sub stos fs xchg xor sub xor and xor and pop stc bound mov pusha or nop fnstenv repz sbb loop and es jmp jae loop mov out inc sbb xor xor sub pop fcoms xor sub in mov mov jno fistp movsl mov pop ljmp sbb adc or lock sub xchg scas sbb mov xchg sbb cmpsb cld mov int repnz (bad) jmp pop pop (bad) sub (bad) pop faddl xor fs sti sbb mov sub mov stos sbb lret sub ret sub fisub addl adc movsb repnz fsubl sub and or pushf xchg fcmovnbe iret mov sub movsb arpl adc ljmp int mov and rclb pusha sbb push sub jne sub cmp mov sub loope loopne dec lods and sub pop sbb imul cs fistpll jge mov sub fs or mov insb and mov sub and daa mov lret sub and out mov sbb pushf sbb mov insl mov sub cmpsl movsl cs fisttp adc sub (bad) sbb pushf sub mov sub adc fist fnsetpm(287 xchg cmpsb push dec sbb shl pop repnz jb xlat outsl mov sub inc dec sbb push aas (bad) and jno out fistpl ficomp and push and mov and std pop bound and or outsl lea mov sub push daa sbb pop test xor cmp lea or inc les jb sub cmpsb test sub inc cltd pinsrw xor sbb andb push sub add xor xor sub push mov fistpl sbb movsb and cltd pop and jno loop pop dec outsb fiaddl mov mov pop (bad) ficompl sub lods (bad) out lock adc mov bound popl and mov mov fistp sahf inc sbb xor cmpsb inc push divb shlb pop sub or imul xor cltd fimul mov pop leave jmp not and push mov sbbl xor sahf fimull (bad) mov fisubrl lds aaa shlb aas into (bad) mul sub pop or movaps push sbb out jmp pushf jle and and mov sub fs jmp xor (bad) pusha sbb sub cmp mov in pushf pop jg cmc sub (bad) cmc xor in fcomi sub push mov shlb adc fcmove sub jne sub xchg pop data16 in loop orl out sbb insb loop lret jp fbld or and (bad) or adc pop sub pop and jecxz mov and and fist fsubrp adc mov lcall fistpl push iret sub repnz adc add scas in in pop fcoml das loope sub dec sub ret pop cmp xchg xor aam xor adc or popf dec xor sbb push xor pushf stos ljmp cli push jne xor inc rorl xor jp pushf jb mov pop mov or sbb add xor xchg mov mov push mov hlt jb adc or std dec adc fstps push divl and xorl xor sbb xor jg jae lock sahf gs and cmp sbb push cmp fdecstp popa imul xor xor insb mov (bad) xor cwtl (bad) xor mov aas or fmull jae xor lret and mov adc xor in scas fnstenv push insl mov (bad) ja sub add pop sbb outsl mov loop cmp xor dec mov fstpl cmc xor lods add mov xor dec xchg in xor adc enter or inc test cmp aam cmp jle xor add push inc xor sbb push jne or jbe xor arpl out je add jns sub hlt mov xor stos pop push (bad) cmc pop pushf mov xlat movsb or hlt es mov inc outsl and imull xor arpl in add push cmp inc shlb cmp in sub stos xor sarb outsl fadd cmp shrb lahf dec (bad) leave in sub clc xor sbb adc mov sub cmpsl jecxz pop xor and mov cwtl and das jne lret pop xor pop jae jg iret mov inc xor xchg adc sbb cmc les push jae mov rclb cmpsb cmp jae or jae fs add xlat cmp and add mov add xchg cmpsl lods adc sti mov lds clc clc sub test cmp push pop jns xor decl pop je js xor lds inc mov pushf or ja mov int jg scas popa sti sub mov pop xor icebp mov cmp pop xchg hlt ret fisttp push js hlt jmp and lock shrb ss sbb add jg movsb xchg or pop pop sar xor lods mov jbe push xor iret inc call clc dec imul jbe stc arpl add lret sahf loope mov inc pop add or mov pop js xor arpl mov addl mov inc stos mov jl gs (bad) cmc inc jge je mov nop aad adc test sub adc int sub clc sbb jae popa xor out les xor (bad) mov outsl xor push xchg shll lahf incl jl and pop stc cmp fdivrs or lods loopne dec mov hlt mov cmp fdivrl sub aam lea shrl xor fisubl cmp xor scas cli sbb (bad) pop imul mov out lret push jne add xchg sysexit (bad) xchg jmp leave jg outsb rcrb pop fucom aas je sub adc jge das xor jecxz js outsb orb (bad) sub ljmp cmc lods mov (bad) push rclb dec xor dec ljmp pop pop adc into mov clc adc add data16 dec jns scas dec lret fldcw dec mov aaa xchg and dec pop fwait mov bound fildl sbb outsl test fs lock cmc sbb xor jbe xor push mov xor or inc xor xchg rcrl std xchg jl test mov mov stos xor and test lods inc cld add bound pop mov std pushf mov mov nop push stc iret sub xor pusha jle sbb scas push mov or xor push mov xor subb sub nop rorl sbb in fdivs adc add jmp xor cltd pop mov retw xchg xchg mull xor pusha push fbld jae mov bound mov ja sub loope jecxz inc repz or out sub push imul dec lret les rolb push push adc out cmc jne leave add and cmc cmp adc (bad) outsl xor cli dec aad pop push repnz insl jbe xor (bad) xor test inc jae stos dec data16 lahf or cmp pop adc test pop fdivs add xchg mov mov dec adc jecxz arpl push mov aam into add dec inc pushf in dec mov inc or (bad) jae and sub xor xchg popa xor movd dec cmp cmp and xor out push push xor mov (bad) xor xchg sbb sbb xor mov loope fstl shll test dec movsb add lds sub outsb ljmp add sub adc xor xchg pop into pop adc xor rcrb cmpsb lahf bnd (bad) stc jmp je xlat cmpsl push mov adc lcall or hlt xchg jne roll adc insl adc mov jnp pop or dec or inc lods das mov push sbb jl rcr dec cltd imulb cli aas push ljmp mov pop add jae mov mov jge xor mov aam xor jo sbb add mov mov push jae sbb arpl repz xor sub rcll addl fidivl in dec add (bad) jecxz fxtract scas and aaa pop out es cs mov and fstpt push mov scas pop inc inc jge stos xor jns push inc xor pop sbb call sbb inc sub test mov pushf stos lods or leave push pop sbb adc pop in mov jmp add lods xor in out xor xor push mov lods sub dec xor xlat rorb popa pop mov es xchg enter push xchg jae sbb (bad) dec mov xor (bad) adc jo aad adc pop sahf lea lcall js pop or mov pushf mov pop leave adc ja out xor inc in inc xor (bad) adc xor jno dec mov cltd sub mov icebp push dec or xor jecxz adc xor (bad) rolb xor inc dec mov insl jo add xor jb xchg pop xor mov in std xor call mov enter inc lret test cmc cmp ret inc in scas das loopne imul adc xor xchg add data16 cli lods pop mov pop loop int3 xor cmp les mov xchg and (bad) xlat hlt mov mov mov mov (bad) not jne xor add ret das jb ja in dec test dec ret out push popa ljmp out outsb xor sarb fcompl jmp xor hlt addr16 xor pop fimul cmp add or inc sti lods xor pop nop sti adc out lahf aam sbb shrb cmp std rcrl and hlt add pop lods add loope push out sub scas imul (bad) pop jns sbb mov repz inc xor sub ficoml jae mov pop xchg cmovns sub loop sbb push jge xor pop xchg inc jne jbe add jg cmc and in add jae ret sbb out xor sub (bad) int test test out jnp sti (bad) xor add lods sub roll push mov xchg mov enter dec cmp cwtl out and outsb aas push gs movsl int out into arpl test mov mov clc lds js or push subb aam mov add into repz add xchg xor scas sub cs popa outsb cmp sub mov insl stos jns mov or xor mov xchg mov jns push adc stos xor push ret fwait jl push (bad) cmp daa aaa add test nop rcr insb in icebp cld mov enter or xor and lret cs cmc fnop jae fnstsw pop adc add je mov outsl jo add add std test jae adc shrl jns xor inc and pop xor or mov mov xor test mov hlt das jl cmp adc ss cmpsl hlt push rcr ljmp xor inc and out xor mov lcall aam inc sbb xchg dec pop xor test adc rcr pop jo in fs mov loope and aaa mov push movsb mov orl cs jo test ds std jb (bad) jae adc mov mov stos mov loopne sbb fimul push mov shll insl mov hlt jp adc outsb sbb sub push inc mov ss popf ret and cld gs es adc pop out push ret pop (bad) popf cmp xor idiv jmp xor out cmp clc lods jns scas push hlt int dec xlat sbb sbb inc leave xor mov in pop add add jne faddp xor sbb imul insl loop push push or out cli ljmp out stos dec xor mov (bad) jae adc nop and mov out mov mov and (bad) aaa xor jmp xchg or (bad) hlt inc xor (bad) mov pop mov mov hlt faddp orb mov xor stos inc outsl in je (bad) cmp add sbb insb xor mov lahf dec xor dec sub jnp cli jecxz pop and aam inc xor inc adc pushf je arpl and xor jp js je dec jae (bad) xor push mov jae xor aaa xor fistpl mov and mov clc xchg mov push hlt insl fs jnp adc sub push (bad) xor add adc test lds xor sahf add push add sti mov xor jae mov xor pop leave jg xor js push push sub arpl je std test add mov jno out mov or sub ret into in xchg pushf (bad) adc xor repz bound xor andl cmpsb hlt enter inc ja sub push sub pop imul mov (bad) xor insl ds jg push xor aas jb dec mov cmc stc mov jg pop insl je repnz jmp dec mov pop mov fisub fildll inc or les sbb std adc mov jb mov (bad) repz sub inc pop mov push lcall xor lods aad dec jno add cmp test frstor sarl mov es xor clc mov pop cltd pusha js xor jo iret mov push jmp add mov mov outsb loop xor sub lds mov xchg and jae shlb je stos push xor pop xchg mov dec or xchg xchg loope push movlps adc mov out xor stc std inc mov dec inc mov nop lea dec cs loopne repz (bad) mov or insb xor icebp sbb sub mov and mov jg xchg int3 jmp dec sbb mov rcrb cmp xor push sahf add ds out xor out sarb loopne sbb xor sahf xor or adc xor lods fisttp mov jno mov notb fmull xor (bad) int3 loopne xor dec clc pop lds mov data16 and jno jbe mov xor add (bad) fisttpl bound adc std dec stc jae aam pop (bad) add xor fimull out je pop rcr adc cmp movsl or jno push ds xor push xor popa push ss xor push sbb jae mov cmc sti sbb dec addr16 cs in fstl push xchg xor sbb movsb mov bound xor xor or out mov (bad) repnz popa mov cmpsl scas inc rcrl sub std xchg cld inc inc pusha sbb ljmp insl outsb (bad) mov dec sub adc add fwait mov das inc inc adc mov test mov inc movsl cmp sbb jmp scas sahf xor (bad) fcomi repnz jne lcall push clc outsb cmp sub sub lret sbb arpl imull test pusha mov scas out or pop aas ret or ljmp cmp lret lock loop jmp sahf or cmp les pop pop insl dec popa xor inc or int ss ss push sub fbstp sbb shll mov jbe and jne fistp dec inc pop mov sbb aas aad inc push pop loop mov int3 jbe (bad) pop icebp inc cmp test pop cmp pop fistpl dec pop cltd insb sbb push mov fmull test dec int3 daa sahf mov or and dec or insb adc int3 add xchg jle pop xchg and (bad) push ss (bad) cmc jmp (bad) jmp ficompl fild and orl pop add sbb cwtl sbb movsb fs xchg xchg shlb sbb pusha scas popa sbb and add xor mov or xor mov push sbb add or pop insl ret clc sbb xchg inc fldl cs icebp insl scas mov or hlt dec out xchg jmp adc sbb jp push mov aas or mov cmp adc sbb leave push and xor out xor jecxz cmp shl mov sbb movsb lcall inc popl ljmp and jge sub stc into adc dec stos pop xchg or sbb mov or pusha pushf push lea je neg add not rol sub lea cmc sbb shr btr shr mov rcr movzbw rol sar add movzbw adc add add stc data16 repz mov mov clc call jo jb jle mov and aam scas iret test dec outsl mov cwtl push cwtl dec nop jp aas mov les mov outsb inc xchg inc jle mov push sub je flds jge pop cwtl and pop mov pop fsubr sub stos stc out mov jo test leave es xchg fwait lods dec jbe mov mov push cli and out rdmsr jno jg call mov aam jge das loop out cmp push jbe pop mov addr16 push (bad) cltd stc cmpsb mov dec adc xor sbb mov sahf xor mov jno mov add arpl inc gs jb jbe jb gs jb jo imul xchg pop (bad) dec idivl fiaddl orb mov scas xor xchg dec push insb mov or outsl lahf lahf mov (bad) pop shrl in push lret fdivr das mov (bad) sbb mov add sub imul push dec mov std jle inc jle jle icebp adc and fist mov setb add adc cmp xorl mov cli sahf and push dec pop sub lcall sbb add cld jle out sbbl cmpsl cmp icebp xor sub aas jns and push push cwtl xor loope mov adc jo das pop mov scas mov adc loop repz repz je xchg test push data16 (bad) ds les mov xchg (bad) sbb mov cmp (bad) mov aad sub jns mov scas xchg (bad) popa pop mov jmp gs mov in dec repnz xor jno mov stos xor mov mov mov lock or aas fbld pop adc loop pushf add ljmp push pop lahf imul (bad) int3 jle leave or cmp pop cmpsl pop (bad) jmp insb cmpsb mov adc cmp jo movsb push cli cmc jmp inc pushf add std push mov test popa aaa jg out push dec cwtl jle dec sub clc sahf imull test out sbb aam ss mov add bound lret mov dec movsb cmpsl push mov mov inc outsb xchg jp popa inc jl xchg (bad) mov js push adc pushf pusha lea je push lea jmp aas push push loope mov scas xor nop push or mov or jg movsl lcall insl jb pop int3 repz ja xchg int inc fdivl jg movsb (bad) sbb cld cmp pop test mov (bad) mov inc (bad) das mov rcrb test jae mov stc addr16 xor imul mov mov jmp cs das adc pop sbb xchg dec mov add jno jmp stc stos aam xor insb fwait mov xchg outsl (bad) iret and mov jns jmp inc ret sbb or push daa cmc push xchg jns in xor cmp push (bad) je or adc imul sub adc (bad) call lret xor pusha movb lea jge pushf lea call pusha pushf call call add push in adc push arpl iret sub mov loopnew cltd ljmp lds dec pop push (bad) stos rep jp stos je mov in clc jmp cmpxchg in shl xchg ljmp mov (bad) or mov dec lret xor lds adc (bad) out add ret mov mov xchg lret sbb add aad (bad) jb out nop das sbb std and iret sub test movsb fcmovb mov out aad mul cltd cltd xchg adcl xor packssdw cmc jmp pushf add adc mov fsubrl imul add cmpsb cmp aas aaa addr16 ret add (bad) das mov xor das sbb sub and adc wrmsr mov scas lock dec cmp xor jg flds jbe fisttpll roll les out adc pusha jno fwait out sarl xchg xlat fcos add or mov push lea sbb xor aaa sti and pop insl lock xorl aam cld mov or in push push lcall xchg das mov test in sbb aaa daa ja xor push movl jbe cli inc cwtl (bad) pop (bad) pop and test push xchg hlt mov mov sub mov lock sti std push sub call into adc sarb sar dec js jge sbb jle ror add mov mov leave jae mov test xchg iret loopne push movsb xchg cmp js cmc mov adc fdivrl cmp pop xor mov cs imulb jns mov cmpsb mov cmpsb cwtl std rcll ljmp mov jno mov lea jne call je stos fs int3 mov adc or dec sti fs bound push or jne dec push adc cmp das sbb pop (bad) test insb frstor ret xor adc and cmp dec xor push ficoml sbb push push pushf rep mov mov test rolb sbb scas adc adc jno or and inc sbb sub sarl inc icebp cs cmp sub xchg ret mov push or bt xchg pushf mov call jmp add push outsl jae dec gs popa addr16 add cmpsl mov cld int push repnz mov fldl mov pop and insl (bad) out push rorl adc dec adc (bad) sub mov data16 fsubr sbb scas (bad) mov mov outsl fdivrs push push adc (bad) push jmp (bad) xor pusha adc mov or scas das pop mov ds mov mov push dec lock jmp cmp ret mov daa dec les dec pop es xchg dec shrl pop inc mov jae daa jns add or shrl cmpsb clc aad xor (bad) aas das push or ss jno mov fldcw icebp pop lods jb mov insb sahf (bad) fistp lcall xor sahf jo cltd out into mov stos xchg aam shrb sbb ja mov jb,pt outsb jo pop jo jno iret mov or inc cli data16 xchg std and jp imul sub push pop jmp xlat sub and outsl inc dec push mov push jg jb push xchg dec mov iret test test xchg ret fwait inc mov test (bad) mov xor fninit sub sub mov mov add movb bt not movb call lea movzbw mov movb pushl ret pushf bt clc ror mov push call negb pop fs push xchg pusha (bad) rcl add cmp iret lock sbb xor sahf loope loope mov adc js xchg xchg outsb je or out inc push jo inc pop insb push enter pop push inc lret pop ljmp aaa movl mov xchg or dec rorl loope test in pop lahf push mov rcr fisubrl lret mov repnz fwait (bad) mov (bad) xlat cs pop out xor mov dec mov dec xor daa and arpl dec mov pop cmpsl js jns es imul xor fistpl adc lock add pusha (bad) dec arpl pop mov mov push jg clc push jmp repnz add inc mov pop mov dec mov in xor (bad) icebp dec gs fs insl mov mov push mov pusha xlat iret mov push arpl inc cltd sbb inc sbb pop loop mull lret jno mov pop fwait inc lea call pusha pusha movb pushf adc jmp sub clc jmp mov lods pushl push push push ror pushl call cmp pushf lea jae cmp add jmp fcoms and cld (bad) xlat (bad) (bad) lock es cmp leave fstpl cmpsb mov or push cmpsb sbb mov jge push or cld mov iret not loopne in sbb (bad) popl xchg lret jb push and mov outsb cltd inc les clc inc (bad) dec push faddl push add aam lods insl jb adc or cmc jmp push sub push cmpsw int movsl mov lea jecxz scas out jmp (bad) cmp or cmp or or xchg in pop xorb xor push sbb push imul test mov adc inc inc push dec inc inc push xor cs insb add add mov push lea jmp xor test add push mov push jo cwtl out into sbb dec (bad) (bad) movsl sbb push call cmp lcall outsl fcmovnb fcmovnb fwait add inc xor adc cmc imul lods jb cmc or dec pop je push test ja bound cltd or pop cmovg lods push test fidivrl or cli jae push out mov mov repz add xchg cmp push insl jb cmpsl inc pushf dec jne mov loop es bound les out test cmp jmp mov movl pusha jmp push inc pop mov pop push inc pop fldt sub mov sbb insl push add and jp fsubl dec (bad) mov in add mov movsl push mov add xchg fisub loope stos (bad) and xchg rolb cmp push xchg (bad) jecxz ret mov dec icebp mov cmpsb fsub sub aad mov nop iret adc divb jb lock cmp je movsb xor and hlt xor popa xchg ret push fdivrs mov int dec push xchg push pop (bad) out xchg leave xchg cmpsl hlt sbb in cmp sub jbe jae push gs xchg jg nop loope into jno mov dec xlat dec jmp push mov xchg sub push xchg xorl add push outsb xor inc pop andl sbb push into cwtl cmpsl mov arpl jno inc ret sub jmp mov inc add enter mov cmpsl imul out push int3 and pop scas push outsl sbb aaa dec std dec jl xchg xchg stos mov stos rclb outsl rorb test pop cmp loop outsl inc fbld add fnstsw cld jle mov test jge mov mov xor shlb inc and leave mov movw lea jmp mov stos pop cmpsl rorb stos xor sub adc (bad) imul (bad) push movsb sbb inc push addr16 aam push mov fiadd notb movsb sbb mov pop ficomp movsl rclb mov lcall dec mov adc cmp adc push out push pop pop (bad) xor mov fstps add inc mov fbld adc push sarb pop test xchg lods pop mov jle sub mov (bad) dec jno mov (bad) add add cmp add bound je xchg xor xor xchg mov cwtl xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor or sbb es cmp inc ss mov ss aaa dec aaa pop aaa popa aaa insl aaa js jge mov xchg aaa cltd aaa sahf aaa stos aaa mov aaa into aaa hlt aaa pop cmp cmp lcall cmp cmp cmp cmp cmp cmp cmp cmp jne xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp fwait cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp dec cmp test xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp stos cmp sbb lret or ds dec aas ja lret aas sarl add add add test add add pop xor xor xor xor xor xor mov mov loopne or xor jnp xlat xor xor hlt xor xor xor xor jb xlat xor inc ss ss sbb aaa xchg aaa cmpsl aaa inc cmp arpl jne add cmp cmp cmp cmp fstpt lock pop cmp cmp cmp cmp cmp fnstcw xchg ds ds adc inc aas data16 jl mov (bad) aas stc aas add add add add cmp inc xor mov fdivl add xor xor xor xor jnp mov (bad) xor xor xor xor gs xor xor xor xor xor test (bad) xor lret (bad) or aaa das aaa cmp inc aaa push aaa push aaa outsl aaa jns mov aaa aas cmp test cwtl cmp cmp insl cmp cmp pop cmp jp cmpl xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp test inc ds ds ds jnp cmpb ds mov ds pop aas das aas jns cmpsb aas lret aas add add sbb sub push xor outsb xor xor xor xor xor xor or sbb pop xor xor xor pop xor xor xor pop xor xor add mov dec cmp (bad) cmp cmp cmp cmp or and cmp cmp cmp cmp cmp cmp cmp cmp ds and (bad) aas add add add xor insl xor xor xor dec xor (bad) xor xor pop xor xor xor xor sbb xor xchg xor xor xor xor xor xor xor xor xor xor push ss aaa xor xorl aaa stos aaa push cmp mov nop cmp cmp cmp and sub cmp pop cmpl ds out ds xor inc aas out aas add add add xor xor xor xor xor repnz js lcall ss cmc add adc xor mov lret cmp js sarb lock out lock cmp js jg mov cmp movsl ds mov ds ds ds adc sbb and sub push aas pop aas popa aas jb (bad) aas xchg aas popf aas mov aas add add add add or adc sbb and push xor into xor xor xor xor xor xor xor xor xor aaa xor push xor pusha xor jl xorl mov int3 xor xor xor xor xor xor xor xor xor jb js jge xorl xor mov mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor dec xor mov xor inc mov divb or sbb push aaa insb aaa je xorb aaa std aaa add outsb cmp mov movsb cmp cmp cmp cmp cmp cmp cmp cmp cmp leave cmp cmp cmp cmp cmp cmp cmp je mov cmp daa ds ds aas ds ds ds jp test lea into ds ds aas jecxz repnz add add add add jno (bad) xor xor xor xor xor xor xor xor xor xor xor xor xor out clc xor xor xor lods cmp cmp cmp cmp data16 cmp cmp cmp push cmp es sub repnz clc aas add add dec xor stos xor xor xor xor xchg xor xor xor xor xor xor add adc and xorl aaa or sbb cmp cmpl pop cmp cmp cmp cmp cmp jge adc aas add add mov lods xor lock xor xor xor xor arpl jae lea imul clc xor xor xorl cmpsl or cmp cmp add add or xor xor xor xor push sarl icebp cmp scas cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp add add add add adc and dec xor push xor mov fnsave jmp add xor xor xor xor xor xor xor xor test divl inc xor xor xor xor xor mov ss mov ret fidiv divl or adc xor insb aaa mov popf aaa mov aaa mov fnstenv cmp cmp cmp cmp dec cmp xchg cmp cmp cmp cmp cmp pop cmp outsb cmp cmp cmp cmp cmp cmp cmp push cmp arpl imul (bad) cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp lret cmp pushf ds dec aas push aas push aas nop aas sahf aas mov aas idivb add add fadds add add or aaa xor xorl pop xor xor xor lcall xor xor xor xor xor insl xor jle mov mov (bad) xor xor xor xor xor xor xor xor xor xor xor cmp cmp cmp mov xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp push cmp outsl cmp mov mov cmp std cmp sub ja,pt pushf fstpt loope add pop aas jae test xchg aas add add add adc add sbb inc xor popf xor xor xor xor xor xor xor xor inc xor push xor mov xchg xor xor xor xor xor xor xor xor inc xor xor xor pushf xor xor xor xor xor xor xor xor xor gs (bad) xor mov ss ss jnp xchg xchg ss ss sub sub xor xor cmp cmp inc aaa inc aaa dec aaa dec aaa push aaa arpl jne xchg pop cmp jp mov out cmp cmp push cmp mov cmp cmp pop cmp xchg sarl in idivb xchg mov cmp cmp cmp cmp cmp cmp jae test popa xchg aad fistpll call aas outsb aas pushf aas sarl aas add add int3 add add xor xor xor xor jns ret xor xor xor data16 xor xor xorl xor xor xor xor xor xor xor xchg xorl ss ss ss aaa inc aaa push aaa addr16 fidiv add adc cmp cmp cmp cmp jne xchg add cmp cmp fistpll adc and cmp cmp dec cmp cmp cmp cmp cmp cmp mov loop cs mov lods ds mov mov sarl in idivl jne sahf aas fdivrl out out aas add add add int3 add add inc xor mov mov fidivl add and inc xor mov cmpsb xor xor xor xor xor xor xor (bad) xor xor xor xor xor xor xor jle (bad) xor das ss pushl inc aaa jne mov pop cmp cmp cmp mov cmp cmp (bad) cmp cmp cmp cmp cmp insb cmp jp popf cmp cmp sarl fnstsw out sub cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmpsb cmp jno xchg xor inc aas push aas (bad) aas in aas add add mov xor xor mov ret xor xor xor jle mov xor xor xor xor mov xor xor xor xor xor xor xor xor xor ss ss ss xor pop aaa xchg aaa movsb aaa ret aaa fnsave adc inc cmp cmp cmp cmpb cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp inc cmp js int3 cmp inc ds ds imul sarb in jmp add push aas ja fistpll ljmp and add add xor inc xor xor nop xor xor xor dec xor xchg xor xor dec xor lea mov (bad) xor xor xor push xor xchg xor xor xor xor xor xor xor xor xor xor xor xor and dec ss ss push aaa pop aaa xorl aaa or xor push cmp cmp cmp cmp mov cmp cmp cmp cmp cmp cmp inc cmp cmp cmp fstpt loop jmp cmp cmp aas cmp push cmp pusha cmp test (bad) cmp cmp cmp cmp adc sbb cmp cmp cmp cmp cmp cmp cmp sub xchg cmp xlat cmp and xor inc ds ds arpl jne xchg add add add pusha add add sbb xor xor xor xor xor xor xor xor fdivs and and jbe mov test cmp cmp cmp cmp cmp cmp cmp and push jo,pt cmpl inc add jo add sbb xor xor xor xor xor xor xor xor xor xor mov cmp cmp cmp dec cmp cmp cmp cmp cmp cmp fstpt inc ds jo,pt mov ds ds ds aas dec aas push aas xchg xchg aas idivb add add add add add xor xor pop xor ja mov xor xor pop xor jnp xchg xor xor xor xor xor xor mov fdivl loop xor xor mov xor xor xor xor xor xor xor xor xor xor xor xor xor inc xor mov xor adc push imul xchg ss aaa pop aaa xor js jle jecxz divb cmp cmp cmp cmp cmp cmp cmp cmp cmp dec cmp (bad) cmp cmp cmp cmp cmp cmp cmp cmp cmp mov xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp and dec cmp xchg cmp test mov fidivrl icebp cmp sbb dec imul jp,pt movsl xlat ds aas insb aas into aas add add add add add xor push xor xor xor xor xor xor xor xor xor xor dec xor xor xchg lods xor (bad) xor xor xor xor xor xor xor xor xor xor xorl xor and and sub sub xor inc ss ss ss ss ss jl (bad) ss lods ss mov fbstp jmp aaa aaa aaa inc aaa arpl jp xorb aaa mov aaa dec cmp cmp cmp cmp cmp cmp cmp sub inc cmp cmp cmp cmp cmp inc cmp cmp cltd cmp cmp cmp cmp inc cmp pop cmp stos cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp and cmp jge add add add add xor xor xor xor xor xor xor xor xor mov (bad) xor add push ss ss xchg nop ss out add sub xor cmp aaa jns (bad) aaa mov xchg aaa cltd aaa out divb sbb and cmp imul cmpsb cmp cmp cmp cmp cmp cmp cmp push cmp cmp jae jp cmpl cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sub cmp repnz add add add jge test lahf xor xor xor xor xor xor xor xor xor cmc and insb aaa jg (bad) aaa (bad) ljmp cmp cmp cmp pop cmp push xchg cmpsb aas stos aas mov nop add xor add inc xor pop xor mov or pop xor push xor add xor clc cmp ja add add add aam or jne mov xchg xor ss (bad) ss (bad) aaa mov cltd aaa mov aaa add cmp cmp cmp cmp cmp bound jo jp mov mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp jbe sbb push cmp sub cmp cmp cmp inc cmp mov sarb cmp cmp jp mov leave aas cmc aas add add and mov xor xor imul xor xor xor xor xor push xor xchg lcall xor xor scas xor aam hlt cmp test lods cmp cmp push cmp movsb cmp cmp sarb cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp bound leave cmp cmp ds ds ds aas dec aas pusha aas addr16 movsb aas ret add rolb lock add xor xor pop xor lea xchg xor xor or xor xor xor xor xor xor xor xor xor xor pop xor xlat xor add pop ss adc push and sub ds ss lret fbstp pop aaa inc aaa push aaa jp mov aaa xor dec cmp stos cmp cmp cmp cmp push cmp je jg xchg cwtl cmp cmp cmp cmp cmp cmp in cmc cmp cmp cmp cmp cmp adc sub cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp inc cmp ja mov and pop ds mov aas xlat aas add add add pop add add xor xor xor mov (bad) xor xor imul divl cmp xor xor xor mov xor jo jecxz repnz cmp cmp cmp cmp cmp in cmp add and add mov (bad) ljmp aaa lret cmp cmp cmp cmp ds aas clc aas add add add pusha add add xor xor jl xorb xor cwtl xor movsb xor ret cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp lods cmp jb sarb add add push add add xor xor xor xor xor dec xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor cmp cmp cmp cmp jo (bad) cmp cmp add add sbb add mov xchg cmp cmp cmp ds add add add add xor xor xor jg adc xor aam jecxz xor dec cmp cmp cmp cmp cmp fidivrl add pop cmp js mov in cmp cmp inc cmp cmp cmp cmp cmp cmp cmp sub push ja,pt loop cwtl aas test add add add pusha add add loop xlat xor xorl or mov aaa dec cmp cmp cmp cmp jle mov cltd cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp pushf aas mov call add add add xor xor xor (bad) xor xor xor xor xor xor xor xor xor xor xor xorb xor xor xor xor xor xor xor xor inc xor mov xor xor xor cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp xchg cmp sub inc ds ds ds ds ds mov scas ds aam fdivrs fdivrl loopne in call cmp inc aas inc aas dec aas dec aas mov mov aas in call add push add pusha add add xor je js jl xorb xor xor xor xor xor xor pop xor adc push xor xor cwtl mov dec cmp icebp cmp cmp push cmp cmp cmp cmp cmp mov aas add add add xor xor xor xor (bad) cmp inc aaa jns xchg aaa cltd aaa mov cmp cmp cmp xchg cmp mov mov mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp pop cmp cmp cmp cmp add add add xor insl xor aaa into aaa (bad) aaa (bad) aaa fidivl fidiv loop out repz add cmp cmp cmp cmp cmp fs sarb dec add sbb aas hlt aas add add add jne lcall xor xor xor xor xor xor xor xor xor xor insb xor xor xor xor xor xor sub dec xor push xor pop ss ss sub push aaa mov xchg aaa loop repnz clc aaa add or sbb and xor cmp outsb cmp jl cmpl cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sub xor cmp cmp dec cmp cmp lea xchg cmp cmp cmp sarl mov cltd aas int add add add and sub aaa xor ja xorl xor xor xor xor xor xor jb xorl daa xor xor dec xor xor xchg xchg xor xor xor xor xor xor xor outsl xor nop xor xor xor xor xor xlat xor push cmp push jno ja xchg cmp cmp cmp cmp cmp cmp cmp cmp push cmp ret cmp cmp jae clc cmp cmp cmp cmp or sub test mov mov aas add add add add mov xor xor xor xor sbb mov ret add movsb cmp cmp cmp cmp cmp cmp cmp cmp aas test (bad) aas in aas add add xlat ss inc aas pop aas mov aas fnstsw in stc aas add add enter sub xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xchg lea mov cld add sbb pop aaa imul cmpl daa cmp cmp cmp cmp cmp mov movsb cmp cmp (bad) sub cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp aas cmp dec cmp leave cmp fdivrs in call ds inc ds ds ds ds ds aas jne add add dec add add xor cmp pusha fidivl add and fs mov mov aaa add cmp pop cmp jle mov cmp cmp cmp jl pop aas sti aas add add push xor xchg xor jnp mov mov xor dec xor push xor xor xor xor xor xor xor xor movsl xor mov mov cmp cmp xchg cmp cmp cmp cmp cmp cmp cmp sbb aas ds add sub add push xor and xor xor ss cmp cmp cmp cmp cmp cmp cmp add add add add ss mov mov aaa (bad) aaa fdivs cmp mov popf cmp cmp cmp cmp cmp cmp cmp cmp add jl add sbb xor xor xor xor xor pop xor lcall xor xor xor xor xor dec xor iret xor and xor inc ss cmp je lahf cmp cmp cmp cmp cmp stos ds add add add sbb add jl mov xor xor lahf xor xor add add test add fwait cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp je jmp cmp outsb cmp jo jne mov movsb cmp mov cmp cmc cmp fs add add add insl xor xor sbb xor xor xor xor aaa cmp data16 jge mov cmp mov cmp ja mov push ds sarl idivb push aas mov mov aas add add add add xor xor xor xor xor xor xor xor fidivr idivl add or sbb cwtl cmp cmp cmp cmp cmp cmp cmp aas ds ds ds jne,pt test lea in ds aas call add add and cmp dec xor sahf xor xor xor xor push xor xor xor xor sub cmp inc ss ss ss arpl jbe mov sarl cmp cmp cmp dec cmp mov cmp test cld cmp or or adc add add add add push xor xor xor xor xor xor xor xor add add cltd xor xor xor xor xor xor xor xor xor xor xor cmp cmp cmp sbb add mov xor test movsb cmp add sub add pop xor push jno jmp cmpl cmp cmp cmp idivl lahf aas xlat aas add add add push xor xor pop xor jbe mov xchg xor loopne call xor xor xor xchg xor xor cmp mov mov sarb cmp cmp rolb xor add adc sub cmp js jg jmp cmp cmp push (bad) cmpsb ds pop aas push aas das aas xchg aas popf aas add add add sub add and sub jno jl xorb xor xor mov cmp add add xor add js bound insl xorl jmp idivb scas cmp cmp cmp cmp cmp cmp cmp cmp scas cmp add pop add add xor xor aaa gs outsl aaa jp xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp test add cmp cmp cmp add add add sbb add aaa xor cmp cmp cmp add add pop add add xor xor add or adc and push xor jb jle (bad) pop xor xor xor xor and cmp pop cmp cmp inc cmp cmp cmp cmp xchg ds ds ds aas pop aas xchg aas add add add xor add sbb xlat xor xor ss ss ss ss ss ss ss ss bound data16 xor aaa mov (bad) pushl add add add add xor pop imul ss aaa js xchg aaa (bad) aaa or cmp cmpb cmp cmp xchg lds add inc cmp cmp cmp lcall cmp cmp cmp cmp lea daa ds ds ds ds aas popf aas int add add add add add xor mov xor xor xor xor xor (bad) xor xor mov lock je lods xor xor adc jo lods ss aaa jno cmpsl aaa loopne icebp aaa cld aaa adc and sub xor cmp inc cmp insb cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp pop cmp jno jl mov mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp add push add js add fdivl xor xor xor xor xor xor xor xor xor or adc sbb and xor cmp dec xor js mov lods xor mov xor jo je js jl cmpb cmp cmp mov cmp add xor add int3 xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor xor xor xor xor xor xor jo add add add xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor or adc sbb and sub xor cmp inc xor dec xor pop xor fs jo je js mov nop cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp dec cmp pop cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sbb xor add or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc ds ds ds ds ds ds ds cmpb mov mov nop ds ds movsb ds lods ds mov mov ds call add nop add or add cmp inc xor push xor pop xor push xor jl xorb xor cwtl xor movsb xor mov mov mov xor int3 xor fdivs in call xor cld xor or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc ss ss ss ss ss ss ss ss ss ss js jl xorb mov mov nop ss ss ss mov lods ss mov mov les enter (bad) ss fdivs fdivl loopne in call ss ss ss add add or or adc adc sbb sbb and and sarb cmp cmp cmp cmp add movsb add add ss mov lods ss mov mov les enter (bad) ss fdivs fdivl loopne in call ss ss ss add add or or adc adc sbb sbb and and sub sub cmp cmp inc aaa inc aaa dec aaa dec aaa push aaa push aaa pop aaa pop aaa pusha aaa fs push aaa je js jl xorb aaa mov mov nop aaa xchg aaa cwtl aaa pushf aaa mov aaa lods aaa mov mov mov aaa les enter add add sbb add jo jl mov xchg cmp cmp cmp cmp cmp and add aas call add add add push xor xor xor xor xor adc xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sub cmp inc xor push xor jl mov mov (bad) xor fdivs cld xor and and sub xor dec ss ss ss ss je js xorb ss lods ss ss ss hlt ss or or adc sbb xor inc aaa inc aaa push aaa pop aaa pop aaa fs jl mov nop aaa cwtl aaa mov (bad) aaa les aam fdivs fdivl in cld aaa or adc and and sub xor dec cmp pop cmp cmp cmp cmp sarb cmp cmp cmp cmp cmp cmp cmp cmp sbb sbb and cmp dec cmp push cmp cmp pushf cmp sarb loopne in call cmp cmp sub xor xor cmp cmp inc cmp pusha cmp je test mov mov xchg cmp sarb aam fdivrs fdivrl loopne call cmp and cmp cmp push cmp cmp jl test pushf cmp les enter aam in cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cwtl ds sbb and inc aas pop aas pusha aas cmpb aas sarb aas in aas add add add add xor xor push xor jl cwtl xor lock xor xor jo nop xor (bad) xor xor adc xor push xor nop xor (bad) xor xor xor xor xor xor xor xor or adc adc sbb xor cmp inc xor xor mov mov xor xor xor sbb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sub xor dec xor pop xor xorb xor mov xor in call xor sbb and sub xor cmp inc ss ss mov test mov mov ss xor cmp pop aaa push aaa cwtl aaa mov aaa aam fdivl in lock adc sbb push cmp pusha cmp cmp cmp cmp cmp cmp push cmp test nop cmp cmp cmp cmp cmp cmp cmp cmp cmp push cmp cmpb cmp cmp cmp cmp cmp xor inc cmp push cmp sarb fdivrl and xor dec cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp pusha cmp xchg cmp enter hlt cmp adc pop ds ds movsb ds ds ds and inc aas dec aas push aas je jl mov mov enter call push add add xor xor dec xor xorb xor xor xor xor xor xor xor dec xor xor mov xchg xor in xor adc and inc xor xor mov les (bad) xor xor xor xor xor xor xor inc xor push xor les aam call xor sbb and cmp dec xor xor xor xor xor xor xor xor xor xor xor xor xor inc xor pop xor mov (bad) xor hlt xor or adc and inc ss ss ss jl test mov cwtl ss ss hlt add and sub add add add jo cwtl xor test lods xor xor (bad) xor xor xor xor xor xor xor xor xor sub sub xor xor cmp cmp inc aaa inc aaa dec aaa dec aaa push aaa push aaa pop aaa pop aaa pusha aaa fs push aaa je js jl xorb aaa mov mov nop aaa xchg aaa cwtl aaa pushf aaa mov aaa lods aaa mov mov mov aaa les enter (bad) aaa loopne in call aaa hlt aaa clc aaa cld aaa add add or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp clc cmp cmp cmp cmp cmp cmp cmp cmp cmp je,pt js jl cmpb mov mov nop ds mov add and inc aas fs nop aas mov aas lock hlt aas clc aas cld aas add add add or xchg xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc xor xor xor xor xor xor xor xor xor xor xor xor xor or adc sub pushf xor sbb add mov cmp cmp cmp cmp cmp cmp cmp or rolb movsb cmp cmp cmp cmp js cwtl cmp cmp jl mov cmp cmp cmp cmp cmp cmp cmp or and add add jnp sub dec xor xorl jle int3 xor xor xor xor inc cmp cmp add add push add add add xor xor inc push add add fnsave cmpsb xor and das cmp cmp cmp cmp cmp cmp idivb dec aas movsb aas les clc aas add add add insb xor into xor pop xor xor xor sahf xor xor xor xor xor jge stos cmp cmp cmp cmc cmp add add add add xor xor xor push aaa stos aaa cmpsl cmp push cmp mov ds ds add add add add mov aaa in aaa pop cmp add add pop xor xor xor xor (bad) dec cmp cmp cmp cmp cmp mov and add add (bad) xor xor xor sub push ss cmp cmp test sbb cmpl aas cli aas add add inc xor add int xor xor aam mov xor sarl test rolb and add ret cmp cmp cmp inc ds ds add push add add add xor arpl xchg xor (bad) xor adc cmp cmp cmp cmp aas add push add add xor xor xor xor xor xor loope cli aaa daa cmp data16 cmpl cmp cmp cmp cmp cmp mov aas add push add add add and cmp dec xor xor xor xor and and dec xor xchg xor xor mov mov (bad) xor or xor xor xor xor xor xor xor xor xor xor xor xor cmp inc xor dec xor mov xor cmp jo mov nop ss fdivl loop sub aaa mov loope inc cmp cmpsl cmp cmp cmp cmp pop cmp jae mov mov cmp cmp cmp cmp loopne (bad) cmp sarb sarb out add sbb and aas dec aas outsl aas cwtl aas test add add add add add xor xor data16 mov loope out repnz xor xor xor xor jns mov test xor xor xor xor adc xor xor xor xor xor xor xor xor xor xor xor xor mov ss movsb ss push aaa adc sbb sub cs inc aaa push aaa pop aaa xorl aaa xchg aaa cwtl aaa sahf aaa movsl aaa stos aaa mov mov aaa (bad) aaa fdivl loope out in aaa lock divb sti aaa push cmp cmp cmp dec cmp pop cmp jbe jl mov test cmp cmp inc cmp test mov sti cmp cmp test xchg ds aas add pop add add xor xor xor xor ja (bad) xor xor xor sub push xor mov xor xor xor adc xor xor xor xor xor xor popf xor sbb imul (bad) xlat ss xor gs movsb cmp cmp cmp cmp ds aas add pop add divl sbb xor cmp inc xor push cmp cmp cmp cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp mov cmp cmp xchg ds fstpt in es addr16 sti aas add add pop add add add xor mov (bad) xor xor xor xor cmc xor xor xor xor xor xor xor xor xor xor xor xor dec xor imul lods xor in pop arpl jl (bad) ss aaa push ret cmp sub inc cmp sarl cmp cmp cmp cmp sub dec cmp imul cmp cmp mov lea sarb add adc sbb sub xor inc ds arpl imul jge lcall ds ds jecxz,pt ljmp aas adc and es push aas push aas push add xor test into xor xor xor sub xor jo (bad) fdivl hlt ss aaa push aaa enter lea lahf cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp adc pushf cmp lods cmp sti cmp cmp cmp inc ds ds ds ds ds lods fnstcw add add add xor (bad) xor xor sub pop xor mov mov cli xor xor xor xor xor xor xor cmp xor xor xor xor xor xor xor xor xor xor xor xor cltd xor loope in xor pop aaa popf aaa sub dec cmp cmp cmp pusha pop add xor xor xor fnsave or sbb xor xor jne jl mov xchg xor call xor js or sub xor xor xor pop ss cmp xchg int3 cmp cmp cmp cmp sahf cmp cmp cmp mov loope repz cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp into ds fidivrl loopne out out ds ds add or adc sbb and sub xor aas dec aas push aas pop aas addr16 js lea cltd aas clc aas add add add imul add xor popa xor xor xor xor xor xor xor xor xor xor jno mov xor xor xor xor xor xor xor sahf xor pusha cmp jno mov pop cmp cmp cmp cmp cmp ds movsb js,pt jge (bad) aas add add xor aas xor mov les int3 xor xor xor xor xor xor xor xor xor xor jge mov xchg xor xor xor xor xor xor xor xor xor xor xor xor xor xor nop pop add add add xor xor xor xor xor xor xor xor xor or les enter add add call cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp xor cmp inc cmp dec cmp pop ds ds sarb aam fdivrs fdivrl loopne in call aas hlt aas clc aas cld aas add add add add add or or adc adc sbb sbb and and aam fdivs fdivl lods xor xor xor xor xor xor xor adc sbb xor xor dec xor xor xor xor xor xor xor xor xor xor xor sbb and xor xor cmp inc xor push xor mov mov mov xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sbb xor dec xor pusha xor test mov xor pop ss ss enter add or sub inc aaa dec aaa push aaa enter or sub inc cmp cmp test mov test enter hlt cmp cmp cmp pop cmp insb cmp js jl xchg cmp rolb add add add add sbb and cmp mov xor or sbb sub dec ss ss ss ss ss aaa add or adc sbb and sub xor cmp inc cmp cmp cmp cmp cmp movsb cmp les dec cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp sbb sbb and and sub sub xor xor inc cmp pop cmp cmp fdivrl call cmp cld cmp cmp pop aas jl movsb aas les enter add pop add add sub dec xor xor or sbb add ret aaa mov cmp cmp cmp ds or sbb add (bad) xor xchg out js mov cmp aas add add add add int3 xor xor xor dec xor xor aaa repnz cmp add cmp add add jle fbstp or sub lret push add add inc xor and jg leave cmp cmp cmp cmp jle add add push ss ss xlat ss aaa fidivr add add (bad) xor add or sub add pushl push xor cmp out aaa dec cmp loop pop cmp cmp cmp push rorb add add in push xor xor xor cmp cmp cmp loopne add add add cmp sbb dec aaa jge xchg aaa insb cmp cmp cmp add lock adc add pop cmp mov aas add or and add xor mov hlt xor mov xor xor ss aaa addr16 test int3 cmp add adc add add imul xchg xor sub cli cmp cmp add or and add add xor jne adc cmp cmp add or sbb add push xor push add pop lea inc cmp add inc or adc add or sub add add add add cmp cmp pop cmp pusha or sbb add xor mov pop xor es or sbb add pop xor xor xor xor cmp cmp add add lds imul add add xor dec xor xor xor xor xor xor add add out xor xor xor cmc aaa sarl cmpl sarb or xor add jle mov xor xor leave or sub xor cmp cmp xor mov aas ret aas add add or sbb add inc xor xor aaa (bad) aaa jnp xchg cmp push cmp and add mov ret xor xor aaa mov cmp test adc sarb add add or and add sub iret xor xor xor cmp cmp popf cmp cmp and add or and add wrmsr jbe xor xchg xor xor cmp cmp add or adc add test int3 aaa ret add or and add pop xor xor xor xor stos aaa int xor aas dec aas add and add add add sahf cmp add or adc add (bad) xor xor aaa xlat aaa aas cmp add add add hlt aaa jp fdivrl cmpb push or adc add jbe inc cmp ds aas outsb aas les add add add add cmp cmp ds aas add add add add dec xor xor xor cmp add orb adc add cmc xor ss loopne add add xchg xor xor xor xor xor xor cmp test fwait cmp and cmp cmp cmp cmp fwait or cmp inc aas mov add add jp popa xor xor or hlt fidivrl popf aas add add add inc xor jg out xor xor cmp sarl dec cmp cmp cmp cmp sbb sarb add rorb sub add inc xor xor xor xor cmp cmp scas cmp push cmp cmp imul add or sbb add add xchg xor xor aaa pushf cmp cmp loopne add add add xor cmp cmp (bad) cmp test aas add or sbb add cmp arpl pop xor gs jecxz loope pop cmp aas add or and add xor xor inc xor aaa pop cmp cmp iret aas add or sbb add push xor xor xor xor int3 add add or sbb add arpl push ss aaa stc cmp cmp add sbb add lret xor xor xor xor ds aas mov inc or sbb add xorl xor mov cmp add add add je add add add add add movsb xor aaa fidivl in aaa add pusha cmp aas jne int3 aas add add add add xor xor add into mov cmp cmp cmp orb adc add xorl sahf add add pop xor and ds cmp inc aas jb add add and jne mov xor xor xor mov xor xor aaa mov fdivrs sub cmp (bad) cmp cmp aas add add add pop xor cmp ds ds ds jne,pt add add or adc add add lret xor rorb add add add cmp cmp loopne add add add xor dec cmp cmp mov jmp aas xchg aas add or sbb add loop test xchg aaa repz sarl jecxz repnz add add or and add les loope xor xor xor mov add add or or add dec xor cmp and or add fnstsw add add or sbb add (bad) xor clc aaa jnp int3 cmp cmp cmp or and add (bad) xor xor xor cltd ss ss ss cmp (bad) cmp add add add repnz aaa sahf aaa mov cmp cmp mov add pusha or sbb add lea jle jnp mov add adc add popa xor xor cmp add orb add add xor xor xor enter jo popf ds ds nop or sbb add repnz mov ss cmp cmp sub add mov xor iret xor lds out cmp xlat cmp cmp enter or and add nop xor xor xor cmp cmp cmp cmp cmp adc add fnsave dec ss aaa pushf aaa fidivl mov add add add test fdivl dec movsb cmp cmp sbb push ds aas add or and add add pop xor aaa dec aaa insb aaa test int fidiv cmpl (bad) cmp add lock sbb add or pop xor xor xor loopne mov add add xor xor aaa jae (bad) push cmp add or add xor inc ss cmp adc add mov mov cmpsl aaa add add or add xor cmp cmp cmp inc or add xor xor pop ss cmp push aaa xor push or add xor inc xor xchg cmp add pusha or add xor xor inc ss aaa dec cmp add add add add add xor xor xor cmp cmp add add add fdivs adc mov xor cmp hlt cmp add add add jmp sbb or idivb pop cmp cmp ds loope,pt das aas lea add add add and inc xor ss ss ss aaa cmpsl cmp cmp leave outsl aas add add add repnz xchg inc xor movsb xor push cmp xchg ds add or add xor sub cmp leave aaa fnstenv adc add or add xor cmp ds aas jo stc aas add add or add xor xor xor ss aaa jns mov cmp add or add xor (bad) and addr16 mov cmp mov add add add add add ss jae jmp cmp adc add add mov xor xor xor inc xor xor cmp call cmp push add add add xor aaa push cmp cmp ds add xor add add test or (bad) xor aaa fs xchg repnz sbb xchg cmp add add pop xor xchg xor xor xor xor cmp xchg cmp add push push add add add xor xor or aaa xlat aaa in push add add add add xor xor xor cmp jo add add adc mov xor cmp xlat cmp sarb add add add (bad) xor xor xor xor xor xor cmp nop cmp idivb mov aas add add cmp push outsb aaa cmp add add xchg xor xor in add cmp cmp aas add add add stos xor xor xor xor inc ss aaa popa cmp test sarl sarl adc sahf or add push add add add or lods ss (bad) divl fstpt bound enter add push add add mov cmp cmp cmp cmp cmp cmp mov loopne add add add xor xor jnp fnstsw cld aas add add push add add add xor cmpl add add xchg xor sbb cmp cmp cmp stos aas lret aas add add verr add add ljmp xor dec xor xor cmp stos cmp ltr add inc xor xor xor xor push cmp cmp aas add add verr add add inc xor xor cmp cmp cmp cmp cmp cmp lldt add push xor add add add add divb xor cmp out and pop cmp leave ds pusha aas cmpsl aas add add add add cmp cmp jo add add add xor inc cmp ds add add add sub aaa jne mov nop (bad) xor add lock dec xor xor aas cmpl cli cmp cmp (bad) cltd cmp cmp add add pop cmp cmp cmp cmp cmp add add add sub xlat xor xor xor xor mov add verw add dec xor xchg xor push ss xchg mov fidivrl out cmp cmp cmp cmp cmp rorb add add pop xor xor xor ss aaa lods aaa push ds cmp lldt add lods xor push cmp add (bad) xor add or xor (bad) ss aaa jp push cmp cmp cmp or adc dec ds sarl add adc adc add das xor cmp cmp cmp cmp adc sbb add adc push ss cmp cmp cmp aas add adc and add push xor xor xor xor push cmp (bad) cmp aas add adc and add push xor xor xor cs cmp cmp cmp add add add insl xor xor xor aaa mov aas add add add add inc xor aaa test cmpsl cmp cmp xchg cmp adc and add adc xchg xor xor xor xor xor cmp aas loope clc aas add add add aaa xor xor xor cs iret cmp add adcb adc add outsb xor cmp cmp adc and add cmp lret xor xor clc cmp cmpl cmp add add add mov movsb xor xor repz aas add add add inc xor les mov out aaa inc cmp cmp add add adc sbb add fdivl adc mov out aaa enter push cmp add rclb add add and (bad) xor sahf cmp add adc or add divl adc and add inc xor jne lcall aaa fnstenv and bound lds pop cmp add add add add xor ss push cmp cmp cmp cmp add add adc adc add out xor xor aam add add adc sbb add dec xor xor jnp,pt lret mov add adc and add push xor jno fdivl or sub sahf ss adc cmp cmp cmp loopne mov not push rcr ror shl pusha xchg bsr sbb shld pusha xchg ror ror mov and btr stc not mov bswap lea mov mov neg adc mov not sub jae xor xchg pushf lods cmc cmc call (bad) out popf shrl lea sahf mov hlt lret push dec pop cmpsl shrl lret ror packuswb pusha mov and movups mov stos lret sbb clc or xchg dec mov pop mov std aam rcll rorl add dec enter push fistpl xor addl mov mov pop mov sahf adc sbb shrb fadd add mov mov daa aaa test fisubl add add xor int adc les cmpb call adc and mov inc aaa rorb mov incb sub out inc push mov mov xor es sbb mov cmpsl ja arpl jmp cmpsb inc fidivl loopne pop inc inc (bad) dec shll pop xchg rcll (bad) pop mov in or (bad) fucom lea adc pop test cli xchg je out out mov xchg in insl adc and cld adc imul pop inc aaa sub push test xchg adc inc pushf test dec cld add cmpsl pop sti arpl lahf int3 ror mov ret dec repz cmp ja movsb mov adc fsubrl cmp fwait repz lods ficompl (bad) repnz lcall jmp sub (bad) mov ljmp mov pushf (bad) faddl add mov and fwait or (bad) aaa dec in sub fnop mov add cmp flds gs push adc mov lea adc and jmp in nop inc jl xchg push inc jl (bad) cltd fiadd mov (bad) and lahf loopne and ss push das std cmpsb adc movsb jp inc mov addr16 add inc push das mov dec jg sub sti shrb jp test pop or cld dec xor sub lds data16 dec mov shrb adc lock push stos inc inc add mov sub mov mov aam sti in adc outsl (bad) mov xor inc jmp mov loope mov push sub inc mov pushf daa mov push cltd cltd movsl std loope leave in in xor ss fs mov (bad) sbb ds fld add mov dec imul or (bad) push test cmpl mov out jg push (bad) ja jl daa into (bad) rorl addr16 test insb jle sahf and adc sarl push push fldenv xchg and sbb or xlat pop loopne scas mov (bad) xor lret push mov mov mull mov lea call pushf jmp add push push xor dec gs add cmp mov (bad) push lea pop stos xchg push mov rclb sti hlt dec mov push mov xchg sub mov xchg outsb shll mov mov fiaddl and pusha lret in xlat sub xor jno push sub xchg dec pop cmp adc ficompl hlt stos aad inc pop cld mov mov nop repnz xchg inc jge mov frstor or push add and (bad) popl divb fs mov xchg outsl pop lods lods icebp mov dec pusha mov mov mov cmp hlt sub enter cmp shr out or mov mov loope enter sbb inc lods sbb sub or adc mov push xchg shrl cmpsl mov xchg mov jg xchg and mov inc sbb (bad) stc inc or jmp mov imul loope pop adc and mov lods pop leave mov mov ror jl xor and pop pop aad add pop jno bound out rclb or clc jle loope cwtl xchg push fldl inc xor inc xor lahf je imul dec and test sbbb insl flds jmp cmovg lock mov sub push (bad) jge push lea lea pop xchg push out clc xor test repnz mov add in clc (bad) dec ljmp mov shrl inc arpl fsubl imul cmp inc dec sti inc xorl cmp sbb and pop (bad) pop insl xchg xor popf loope sbb cltd xor (bad) leave insb rclb mov jnp sub lods ss pop mov scas imul push es mov mov cmc fimul addr16 pop (bad) mov stc pop out jge stos int3 cmc adc imul xchg pop cmp or (bad) xchg aam (bad) enter jg cmpsb mov int inc pop sti test mov mov inc cwtl pop test data16 pop mov jno popa push cmp idiv jecxz jb mov ss (bad) xor loopne cmp lret cmp call movsb fldt push mov je inc loope jae cld cmp iret sub inc jle (bad) fsubp mov (bad) xchg (bad) and sbb xchg int3 inc sbb sub daa xor (bad) test sbb sbb pop jo pop jno in pop push shlb push test je das xchg dec cmc (bad) fstp out or decl lock xchg mov movsl jg sahf test jb enter fwait cmp outsb shl jno pusha sbb lods jb das xor add dec mov mov ljmp int3 repnz ljmp cmpb es push (bad) jnp mov add mov rcl and add push dec lock leave pop cmc pop jecxz or cs pop mov in out inc cmp icebp cmp add xchg sub dec jne das das daa sbb pop in jb push mov jno pusha mov fiadd cmc (bad) sti sbbb sub xchg imul clc cmpsb clc pop in hlt xor repnz mov or test shrb jle mov lcall int inc mov add cmp pop jbe pop xor jmp int3 outsl fcoms mov addr16 lock outsb cmp lods push in adc ljmp lret call divb aam inc xchg lods dec insb mov push test and fwait lock sbbl insb xchg mov jp pop xchg xchg add cmp inc popa pop xchg mov jae insb push push cmpsb jno pop outsb and and movsb movzbl mov mov lea jmp mov movl movb jmp jnp xchg cli lds mov xor mov cmp (bad) pop adc mov pusha lcall lret les test push leave or sahf lods test and jbe popf inc xchg adc lods stos mov xchg (bad) xor add scas pop testb aam mov lock dec sbb push and xchg push aam psrlq adc bound cltd jne cmpb sti xchg mov xchg lods mov inc pop repnz pop stos sub (bad) fstp cmp (bad) xlat pop lahf mov shl clc inc rcrl clc outsb mov mov jns ss cs lods daa cwtl fldenv mov (bad) xlat mov add cmc adc cmp outsb daa xchg jae ljmp and sub jg jno pop insl and gs cmp pop mov sbb mov mov mov and push and in pop add and or inc fsubl es adc lahf rorl sub lods lahf mov out mov das dec (bad) cwtl jns stc aad adc push fisub mov push sub pop nop dec es xor dec test es push xchg hlt xor imul loopne and add pop sti xchg aam in lods adc pop faddl add jp ret and mov out sarl sub mov stos adc js js mov fs sub loope mov inc lahf pop pusha in xor pop cltd jns (bad) (bad) ja std sbb push int jmp pop scas ret andb or push dec push xor mov mov outsl mov ret test mov aam sbb fcmovb xchg push mov pushf jne aas bound arpl mov test mov mov inc xlat xor push push or in fnstenv jno jle jno pop outsb and inc cmp call dec add leave inc mov xor pop loop fldenv cmpsb clc cmpsb popa jle bound xchg fsubp mov xor jg and mov xchg fs insb inc sbb call jecxz fadd sbb pop fadds xor call (bad) mov outsb (bad) in lock iret loopne cmp pusha xchg mov dec inc pop adc dec lock out scas adc pusha fwait ret aam push sbb insl int adc push mov pushl pushl ret or or adc jl fbld test push dec push fiaddl push mov mov movsl insl icebp and in jl repz pop cld mov test or jae jbe jle ja insl inc mov pop pop mov sub fidiv lcall jo in mov int sahf sub lret mov imul in add js inc sahf add pop sbb mov scas scas pop xchg push mov cwtl inc lret push pop test leave pusha (bad) jl inc cld xchg or push out pushf lea je cmc cmp cmc add pushf cmp jmp mov jmp pusha jmp jae mov and outsb pop mov xchg out inc cli in repnz dec (bad) cmp loopne pop and xor jbe dec jno mov sbb fucomp aad mov (bad) test test cmp sti pusha aas push mov push or mov pop xchg in test jecxz incb mov push sbb bound inc addl or xchg and push mov cmpsb cmc mov mov test push repnz xor pop (bad) dec out jno mov rol frstor or jno pop mov mov mov and push bts sub lea cmc (bad) hlt sub lea aam push aam ror btr add push adc push ror bts shrd push bsf adc mov push pusha test mov jmp add push gs jne jb push popa insb jne inc add inc and xchg lret pushf call mov lods bt jmp jmp xor ljmp sub mov lea sub pop and movsl mov lds mov pop cmp and dec stos imul fcomps clc inc fbld pushf lock rcrb mov xlat dec (bad) out push lods fldl push out add add cmpsl push movsl jno jle inc ret dec push mov mov jne jbe xchg fs xchg movsb mov push pop enter pop adcl fs imul arpl mov xchg jo dec jns ja push adc sub mov divl add push test add and cmp sahf lods dec repz pop adcb and mov lcall or jns dec (bad) (bad) lods cmp push inc mov fcmovb xchg in inc stc push rol sbb push out decl and cltd dec insb pop sub dec jbe lahf xor mov add rorb rclb icebp xchg adc jp add jg icebp mov sub push pop sbb push data16 addr16 nop iret iret mov mov rorb push into mov xor pop mov xor add pop lods and lods push pop dec rorl sub inc adc pop mov jbe mov mov push jo inc cmpsb pop imul pop into jp or rorl sbb mov cmp std nop out dec xchg or jo xor inc push or pop cmp adc jg mov out pop scas insl fidivrl xchg cmpsl mov in clc inc daa pop sub scas rep pop in mov push jno pop add xchg mov (bad) (bad) call call mov mov cmpsb enter hlt sub mov push (bad) jno jp lcall test insl flds inc pop lcall enter mov test pusha pop stos jae add jl loopne cld adcl and cltd repz inc pop jle xor adc push (bad) int adc movl adc mov and movsb push inc cmpsb in andl sti xorl les add scas push mov add xchg jo cltd inc rcrl and (bad) lock inc sti push sub add sahf and cmp jae mov push into rorl decl mov or test mov dec adc cmp and xor mov pusha add pushf test cmc pushf mov pushf call jmp pop mov pop lret xchg out lcall sub movsl sbb gs insb xor nop insl loop popa lds sbb cs lret mov pusha bound fadds cwtl xchg mov clc push (bad) sbb cli or pop (bad) sbb pop pushf clc pop test iret mov dec or fbld ljmp and je lret fs inc xchg pop loope mov mov mov mov jno push scas loopne sbb mov fs call pusha jmp lea call cmc call movsbw lea mov lea call jmp push movl pusha lea jp pusha push movl pushl lea jmp xor data16 imul (bad) out jo dec jecxz into xor and adc or aaa loop lds loop int xchg lods add lahf aaa mov int3 cmp imul cmpsl dec adc jecxz or fldt xor push mulb mov adc stc mov stos outsb mov push mov mov mov cs pop popa push aaa imul stos into push ds sub aas ljmp std add lods adc movsb fldenv push inc cmc cmp jmp push pushf lea ja pushf call mov mov mov mov insb bound mov outsb pop ret jae (bad) xor ja push int3 xchg in push mov call xchg (bad) fnop jnp mov push xor jnp pop fcompl (bad) sti push hlt in rcrb les fsubrl js or sub lods aaa mov hlt divl (bad) xor push mov test xor xchg sbb out jo dec adc stos (bad) jno push push jns sbb push mov jmp mov ss std imul push movsb adc into cmp shlb push pop mov cltd insl adc pop cmpsl mov pop xchg mov lods shr and cli ss shr imul and jnp fs inc xchg sti test mov xor jo inc sbb xlat int test and push pop pop mov jp dec adc dec xor bound clc rol or mov mov movups pop cmpl sbb dec mov push mov dec xor mov ret outsl push sub push inc cmp xchg sub insl rcrb push les negl daa xchg mov pop rorl or jecxz mov xor lock dec pop inc and (bad) cld (bad) dec pushf sbb aad inc push fwait inc push adc xor pop in cmovg cmp and push jl xchg repnz dec jae outsb mov mov and scas nop mov in jmp sbb xor into dec out pop pop gs pop inc cwtl test clc cmpsb fstps add pop pop xor xchg push nop mov push sub jl mov sbb xchg arpl bound lods pop fnstenv xlat (bad) xor stos xor aas shrb jae fwait notl jmp jmp lret fs xchg jo les or std enter xchg jge cltd fimull add jb sbb shrb jge fldcw and xchg lods mov sbb loopne cmp push mov jp mov pop xor and mov scas xabort xor (bad) out push lcall into mov push cmp inc and jno push outsb and pop pushf mov pusha pusha pushl ret adc das (bad) jecxz fisub xchg xor sub repnz jg pop and inc mov add in dec mov pop xchg push je mov or ja (bad) jg fcompl sub xchg adc cmp daa clc or cmp inc xchg add mov daa push mov arpl push outsb jg lock stc int js cmpsl push lods (bad) xor inc sbb and and roll nop movsl cmp fs mov xchg test lock lret jno push test and mov jo iret push lds xor cmp cmp scas lock push repnz fs fsubr mov fwait in sbb push addr16 jp add jnp pop add xchg xchg repnz and xor push mov je sbb adc hlt dec lods adc lret adc cli in and dec sbb adc pop push dec push nop mov les mov or push rclb push cwtl cmpsl nop pop (bad) push pop cmpsl fidivl cmp push or jge jnp xchg xchg dec mov nop out daa aaa pop and popf popa push push rcll adc bound push fwait hlt add mov into sar and out mov sub cmp repnz pop mov push or cli and jbe dec nop mov sbb mov (bad) rcll ja (bad) call mov cmc adc mov and adc xchg cmp push in add cs sti mov xlat pop pushf pop pop int dec xchg (bad) fsubr push pop inc cmp bound insl jb inc sub adc xor jmp das (bad) movsb mov ror inc fidivrl add and push inc push xlat push inc mov out in xor scas rorl inc add or pop mov pop stos jns test sub mov cmpsl ja cmp sbb dec in test pop daa push dec jmp sarb cmp ss fwait cmp rcll jmp aaa js (bad) sbb inc stos sub and push movsl in loop outsl push mov jge in ljmp and popf mov nop ljmp mov icebp sub cli or xlat or adc jb sbb dec xchg std in xchg pusha jmp pushf push push mov pusha lea jmp mov (bad) pop push fucom imul mov out jmp out outsl jo js inc cli jg stc lahf daa arpl ret pushf jne push jmp les dec incb lret sub inc push popa cmpsb jns test add or xchg and movsb popa jb push iret mov push loop (bad) sti sahf push (bad) dec repnz jae xor rcrb (bad) out jo pusha inc jge repnz in pop daa flds in adc int mov scas lock sbb fisubrl adc and inc or xchg insl int add dec dec mov fsubl or lahf and in fucomp addr16 jnp int3 loopne scas sub sub mov lea xor (bad) leave pop loop and stos mov jle lds lock psrad or nop or adc loopne mov adc sbb or jns push arpl lods in jno dec adc sahf out lret ret mov or inc xchg inc pop inc push cmp pushf add mov sarl dec ret lea sbbb sbb lcall into jl adc add arpl stos pusha pop movsl jl (bad) pop loop fs daa jno and fistpl adc pop js xchg or js push icebp outsb scas mov lds jge inc sarl dec sub fldl or test fs mov cmp push ljmp (bad) adcl add adc jae inc fcmovnb fcoms mov xor cmpsl jno dec insl and cmp gs je inc outsb jbe jb outsb insl outsb je insb outsl arpl pusha call sar shr mov stc mov neg ror mov cmp call jmp push inc jge int rcll iret push fistpl std dec add inc xchg js xchg or pop jmp mov xor mov dec jae xor je jo pop jne subb sbb sub mov repnz push jo inc pop inc pop imul adc aaa or sbb popa arpl aas jg and jle mov mov pop xor cmpsl pop pop mov mov push add jecxz mov pop mov jb loope or test (bad) cmpsb pop out lods in insl xor jle (bad) mov and dec and push xor shrb inc jbe fs je movzbw movzbw movzbl mov lahf lea jmp imul daa cmp xlat mov cmp sti ret inc mov pop mov fildl xchg jmp sbb and lea adc out lds ret jle mov rcrl push pop push dec mov mov cmpsb inc ficompl cmp push pop jle pusha fbld cltd cmp push mov repz lods adc push cmp cmpsb xchg ljmp into dec ss aad shlb xchg dec sti mov sahf adc sub jge push mov or fs test loopne xor inc (bad) pop mov push mov inc jns dec popf jno dec ja das das mov (bad) mov jge repnz sarb js mov pushf mov pop xchg add ds xchg cld and jp push idivl fsubs fistpl pusha in fcmovbe leave or pusha jle (bad) leave mov (bad) in pusha mov lahf mov mov xchg xor sbb arpl loopne ja inc pushf xor xchg in mov and dec repnz push test add sbb test (bad) decl cwtl ret cmpsb clc ss lea not movzwl jmp push pushl movl pusha pushf push lea jmp imul nop mov cmp add je aaa daa out mov jg jg mov dec xchg je jl xor jnp icebp sub add pop scas icebp mov cmp sbb outsb sarl fidivl scas rolb jnp roll cli (bad) jb dec enter faddl fcompl and mov popf (bad) out xor pop inc (bad) xor push mov dec xchg movsb or sahf dec rorb add bound cli inc (bad) dec call loop push cmp in xchg ljmp (bad) sbb lods sub cli lds mov or cmc aaa dec flds push arpl test imul jmp ljmp xchg test jnp mov inc std (bad) jb push insb sahf inc hlt dec pop jmp fwait and push pop ds rclb or pop push add div sub ret xchg lods sahf shrl xor and push gs jmp les (bad) mov das outsl cmc gs je push pop cmp test dec jb ror shrb ficom lret jnp cmp test clc adc add fnstenv imul cmpsl push in cs sbb mov pop or dec stc (bad) mov dec push xchg dec pop cmp scas das inc fsubl daa xlat daa js ss sub movsb test incb sbb or fidivr inc dec pop mov aaa push je inc cmp inc popa jle xchg cmpsb inc (bad) loopne addl cli imul lods clc xchg sbb loope add (bad) daa aaa fmull mov (bad) sti xor cmpsw cltd and mov les pop pop sbb mov and pusha movsl mov mulb cmp insb (bad) iret ror mov push jg xor or xor add mov inc mov sbb or out push xchg jno inc orl call push lock std std xchg xchg insl lods mov ret je or rol cmp mov pop fidiv xor stos (bad) fnstsw imul xor pop rolb fisubl adc test jge icebp icebp (bad) cmp inc ss es add add lock rorb xchg call or adc out dec xchg mov fs mov aas mov xchg call movsb cmp sarl cmp ljmp cltd xor inc pop push push xor loop testl enter stc fadd fmuls ja mov clc mov mov add mov cmp push jns inc xchg loopne enter roll cli insl ja loopne nop cs push and fadd inc out inc cmp dec push (bad) fbld stos repz popa mov sbb lods (bad) pushl mov xor inc cmc push in sbb add adc loopne andl inc cmp dec push cmpsb test xchg cmpsb in mov (bad) dec push xor dec icebp mov dec hlt xchg dec aaa jnp jmp out clc inc jmp mov and insb (bad) mov movsl mov sarb xor pop jno orl (bad) mov (bad) lahf jg push ret je pop shrl ss cmpsl pop pop inc push mov cmpsl xlat out adc add rcrb (bad) mov pop sti arpl std mov sbb call sub pushf pusha cmp repnz call bsf call loop add inc lods pop lods jmp ja mov in xchg add xchg pushf ret ds inc pushf mov aaa push jp dec mov imul lea jecxz loope xchg js ljmp sbb adc add mov push repnz loope sbb add mov je jno inc xor cmpsl pop mov inc hlt fimull cmp (bad) push arpl in add inc pop aad add stc vminss pop mov jle out jl hlt dec mov push scas test jo jae lret dec mov add jp pop push aas pop push push sbb xchg mov movsb (bad) call xchg enter wrmsr shld fbld mov imul fidivrl mov mov add std push jno inc ret int3 lahf fild insl cs jne lret or out pop mov lea (bad) pop mov (bad) jne,pn movsb jb dec aas (bad) and jl sahf cmpsb push xor jae out fisubl dec push in inc ds jle cmpsl mov mov cmp test mov pop and dec adc cld jnp (bad) int jo cli sbb cmp pop lods and imul sahf push repnz mov jg cmpsb flds mov mov leave out ljmp jp xlat arpl mov ret push or dec mov xchg and jno inc imul adc cmpl xor lcall jns adc push inc shrb gs fistp xor or mov inc imul arpl hlt adc jle push cli mov inc or (bad) jbe lea (bad) sub (bad) frstor jle mov fld xchg out inc ficom pusha jg,pt cs adc adc mov sbb dec push jecxz and pop pushf inc movsb cmp (bad) (bad) cltd fdivp adc cmp (bad) jecxz push mov cltd ja cli test test out mov cmp jecxz pop cs je cwtl (bad) test call jp popa mov loop loop into cmovp xor scas xor gs dec scas fwait add push scas sti and sahf xor jl xchg lods mov adc fcomip mov add (bad) pop jb js add enter jno in shrb mov mov lahf popf mov mov jl test pop pop sbb mov shll scas rcrb lret cmp push mov mov (bad) inc add or sub mov sub adc icebp outsb or outsb jg hlt push jae lahf fistpll cmp cld mov aas ds sbb rorl jno inc mov imul pop fldenv jne loopne jmp pop sbbl xchg scas pop xchg stos aam pop decb ja rorb movsl mov jl fsincos xchg or add loop rcr mov lcall xchg dec hlt out push mov sub mov add rolb sbb bound sbb sub jge push arpl stos sbb lods adc insb adc shr add and inc mov xchg inc cltd sub jo cmpsl cwtl loop faddl jb mov sbb out movsbl mov setl bswap bt add cmp rol mov not bts stc add inc movsbl inc movl clc shrd and sbb mov cmc test call pushf lea ja rcl and push pushf sub shr add add bswap xor mov sbb cmp call add inc gs gs imul call pushf movl pusha mov movl pushl movb lea jmp sub clc clc cmp pushl popl push bt cmp mov cmp pushf pusha movb lea ja rcl ror shl sub rcr cmp add test shl movsbw mov rol cmc sbb pusha mov pushf call sbb wrmsr mov icebp xor adc jne mov rorl dec lcall (bad) icebp out mov lods repnz dec out scas (bad) mov xor dec hlt xchg movsl in movl xor inc (bad) dec mov loope mov mov mov sub and jmp mov movsl lcall fnstcw int3 mov out cli in mov jbe (bad) (bad) imul or (bad) sbb jno aas jmp lock sbb pop aad or cmpsb insl shrl int3 adc ret repnz sub daa jno (bad) jge insl pop lods pop jl (bad) sbb mov push mov xchg mov (bad) (bad) enter les jnp inc fwait adc add inc js push mov fs mov je mov xchg push int3 pop test push (bad) xor rcll mov int3 fisttpll sbb and daa stc es loopne mov cld nop jne lock lds jbe outsl das push sub push test fs add mull jnp push push mov mov repnz mov push and (bad) mov jno sbb scas mov jmp testl sub adcl xor (bad) jae and clc hlt xor lock out stos test popf out jmp mov pop mov push movsl mov lret dec mov outsl cltd lds (bad) dec shll icebp outsb mov mov (bad) and repnz jle hlt adc dec sarl loopne stc adc mov xorb arpl repz push stc aam xor sbb cmpsl rcrl xor std fdivrs and mov hlt push add inc jecxz adc xchg je and add std push test adc insb push cli push out cmpsl xor movsl je in add mov xor scas adc addr16 cmp lods or stc sbb dec jae fwait std inc mov dec roll sub arpl (bad) gs hlt movsl inc mov add (bad) addr16 (bad) (bad) jno hlt stc and add lock outsl xor mov adc std or test adc add cli adc movsl or mov xor and dec pop insb xor push jp mov adcl das loop sahf repz sbb test cli sti ret hlt cmp sbb ljmp xor fucomp sahf repnz sti mov push adc out sbb or sbb rcl dec fisubr stos addr16 or lret push and sbb and pop arpl push or std out cli in dec xor sti inc cli sub push fcomps frstor jno xor movsl fwait xor sub xchg xor adc repz inc rcrl push inc cmp call cld cmpb ret repz mov push jae jecxz hlt enter inc jg xor pop sbb push xor sbb pop loope xor jno (bad) jecxz adc aas dec mov loope jge xchg test shlb xor push or xor and xchg insl loope mov inc pusha aaa push xor jno loope sbb loopw or jbe sbb ljmp push or movsb jnp aam cmp out aad and enter hlt and lds pop push mov sub xor je adc xor xor cli out adc push hlt dec in and enter clc loopne into pop mov mov leave push jae movsl xor push aaa sub sub sub popf xor scas mov and icebp lods inc inc or shll pop not mov andl repz jg xor push pop mov sbb jl push add test or or add (bad) lock rcl add div les (bad) sti cli xor sbb das shl sub fistpll push je hlt les (bad) sub in xchg add gs jne mov clc cmp and dec jp inc out lods lahf in stos pusha push inc mov mov ss andb ret (bad) hlt and std outsb lods cwtl cmp sub nop ret dec mov sbb (bad) mov adc mov ror daa mov and pslld sbb das dec sub xchg jg pop adc (bad) repnz adc pushl xlat xor lock mov scas hlt pop xlat hlt mov jp repnz cmp xchg mov push xor inc add (bad) ja repnz xor pop int3 in inc and out or xor cwtl and push addr16 lea or cmpsl sbb xor ja pusha ds sbb xor cmovp sarb (bad) jb xor push je cmovb dec shrb rolb mov pop jg dec add sbb mov lea std js cmpsl shll mov or add sbb loop or mov adc repnz cmp into sbb inc fbld jb (bad) and mov pusha mov movsl sub mov push sub fwait sub (bad) (bad) cmc cld ss ss movsb push insb (bad) xchg imulb xor jb stc add jae cli das pop popa and add sti adc (bad) and popf or xor xor push sti test sub test lods ds lock mov idiv mov insb sarl xor lcall (bad) mov out mov adc das shr push scas jae imul fmuls adc mov rclb mov and icebp daa std xlat aaa xchg rol push push aam out in pop mov and fisub mov sbb sub xor xor test (bad) push xlat or sub pop in adc or lock lahf lret or pushf in in sbb sub mov pop lock test dec push in jo sbb stc out mov fwait cmpsl sub lahf cmc fucomip mov ljmp sub and cmpsl mov (bad) xor and aam (bad) mov mov loopne stos sti leave jecxz idivb or adc mov adc push mov sbb and arpl test call and inc mov aad push (bad) hlt test jo sti sbb je aam cmp cmp push (bad) movsb xor cmpsb sub lahf xor xor adc sub push jo repz bnd icebp jmp and sbb inc mov sub lock sbb xor mov adcl adc sbbb push and lcall mov les cmp fcompl std jae and movsl testl sub in lods add jg je lcall out xor and cltd insl push in mov jae out popa insb loopne hlt (bad) stc cmc (bad) mov je test sbb add xor adc xchg or add repnz lods idivb sub mov mov fidiv mov insb push mov jo mov xor sbb hlt sbb and xor stos scas xor in std popa hlt pop bound mov and xor xor cmp and and mov xor mov movsb mov int3 ja hlt add add mov fwait aas add (bad) sub push call inc lods jae pop cmp mov jecxz test hlt xor loopne fwait inc and mov (bad) lds sbb jno push push mov dec hlt pop test or aam push aas jp adc les cmc fwait out pop add jl cli mov cmp cld jae das push je fwait jno jle mov (bad) mov jae hlt mov repz cmp into xor scas jb fwait mov mov (bad) xor (bad) or inc aaa xor sub and (bad) jno mov shrb in fsqrt popa or add cmp sub fidiv mov and cmpsb pushf jmp xchg and mov push jb jno add add fwait push mov mov xor pop adc and sub out mov fcomps sub lret pusha loop out ficompl pop lods mov sbb bound jno repnz pop xor insl mov jb and xor nop imul daa mov mov mov add add sub ss addr16 and in cli (bad) dec fwait push jne divl adc dec xchg cltd inc inc mov adc adc cli sbb mov lea inc rol sbb add push (bad) adcl sbb sub mov das pusha push divl and mov das jg jae jl repz leave dec xchg fs notl ret xchg xor and cld mov and addr16 sub push jl das cs aaa push add adc hlt xor fs or in sub jp cli sbb ss jg sub pushf adc and cli test mov jl xor mov jae sti lds jne mov icebp dec mov mov int mov adc xor bound mov xor cmp nop rcl mov adc loopne dec icebp das mov sub sbb enter add mov pop push xacquire add push mov sub xchg popa xor leave jb scas sub cld push repz dec push adc pushf lock sub mov loop sbb in inc pop mov adc test xchg xor nop jmp test nopl jle cli aad push jo adc push or fisubrl lret in mov inc cld mov in and inc mov mov jb cld call pusha mov mov mov pop mov xchg and xchg aas and sub insl shlb sub cmp xor mov cmp mov inc or (bad) or mov (bad) clc insl adc aam stos mov jne xchg aam dec adc or (bad) sub jnp or jo in dec xchg add and jno aaa mov loop xor mov sbb (bad) push cmpl sub cli aaa nop (bad) stos jge mov clc repz inc sbb mov dec sub mov dec and inc jae popa lcall xor ret push cmpsb mov sbb jmp and sahf std mull and (bad) xchg and jmp cmpsb mov mov adc mov jg popa cwtl decb xchg push pushf cmpb pop in mov mov (bad) cli mov aas repz sbb pusha jmp pusha or rcll cli dec rcrb xor je mov pop mov jae push rclb sub sbb push stos mov push sbb dec bound mov mov adc sbb mov aad push jne (bad) pop mov xor fdivl test or aam mov mov rol mov sub movl mov cli gs divl sbb ljmp mov mov push int fst adc pop pop shr dec ljmp mov adc es jb loopne nop xchg rol mov fmul lods push and sub aaa push fs mov stos les ret mov outsb inc adcl pusha stos rol xor sbb out or cs in imul sbb jg mov test (bad) (bad) mov movsb cmp cli and mov ret int pusha mov ror jnp sub sarb sbb stc sub popf inc lcall jae es (bad) cs das stos out mov (bad) lahf test repz inc and sbb sbb xchg loop jo mov jno inc rclb sub cwtl js sub inc adc (bad) icebp mov mov aam cmp pop loopne (bad) jno fcomps xchg sbb push es neg repnz icebp sub call movsb sarl add sbb sub cmp xor xchg xchg test (bad) repnz xlat popf adc hlt or stc pop sub add jno call pop adc jge inc mov and pop ret aaa in xchg xchg sub (bad) push push add loop xor adc nop push sarb adc xor mov js std cltd xor scas or inc push dec push (bad) adc add sbb add jb outsb and mov push or or sti mov mov and pop xchg mov sbb mov rolb je mov clc daa adc cmp out int (bad) or fwait pop jns sbb pop std ss jbe inc cmc fisubl adc or js sbb (bad) or add add sti je test cmp leave repnz sbb and dec addr16 cli test int3 (bad) in (bad) sbb xor or inc xchg xchg and pop ret lods sub xchg add icebp and xor xor jns stos jp inc pop je in xchg cmpl inc divl mov mov pusha add xor lret icebp sub xor and arpl xor loope mov inc sarl or adc (bad) cmc cmp mov cmp ret mov rcrb mov ret mov add mov leave adc xchg sub (bad) outsb pusha xor inc ret in enter cmpb or icebp in in dec mov or mov fisubr mov ljmp pop xlat int3 sbb aaa add or je mov or loope test loope mov jl pop or inc cmp jp jge mov jle lcall cli dec xor pop mov xchg mov pop es les icebp push push dec ret adc outsb sbb pop xchg adc mov pop pushf or sub inc andb mov add push cli and scas mov push scas xor adc nop out ja and cli lahf fldcw or mov pand dec sbb (bad) xor repnz mov js (bad) mov jbe das mov rcl fwait mov cmpsl ret fnsetpm(287 cs xor mov add mov sbb xchg adc jno adc mov pop dec cmp bnd adc je sbb or in ret shrl (bad) xor leave je leave repnz in cli test aaa and sbb lods (bad) insl popa loop repz adc sbb cmp cmpsb (bad) mov mov rclb lds movsl fidiv rcrb or ficom sbb decl mov and mov (bad) mov or push inc add cli loope lcall (bad) nop jmp adc sbbl ds sti sub push fcomi xor jno ds and es mov xorb pop mov xor cli sbb notb xor mov ss sub in mov addr16 (bad) add daa mov mov add (bad) xor push (bad) xor inc cmp xchg inc into xor mov mov pinsrw fbld push add mov (bad) fbstp and xor je xorl jmp sbb rorl xchg inc or es in xchg sub cli popf inc ja les sub adc jb loop mov popa sbb push lock data16 or add (bad) loop testb mov or push jne and in in push repz push das lods lret cwtl and rcll mov dec sub sub (bad) jl mov jg push xchg inc cli cmp push lods test mov shrb push jg and js pusha mov aam test in sub divl push fisubl test rolb sub mov add ja add shll sub mov loopne pop out dec lahf imul ds std and aam clc sbb out stos sbb add ljmp aaa add cmp adc jecxz cs aas mov pushf adc daa xchg cwtl mov das aas cmpsb fcoml or jb add aam pop jne mov jae push xor andb dec mov je or push and adc or loop cmpsl sbb (bad) hlt sahf sbb mulb pop popa data16 xchg or xchg pushl test mov ljmp cli dec clc and fs icebp or xor cmc mov clc aaa (bad) insl xor inc push outsb push (bad) mov inc sbb or sub mov inc lods sub les mov xchg xor cmp push push (bad) adc addr16 mov add adc xchg cmp mov mov and mov ret loopne inc inc xor addb popa pop jbe ret fidivrl adc or (bad) and pop adc push xor das cli and cmp inc sbb (bad) hlt icebp fwait mov pop das adc xlat subb repz and nop out mov add inc jecxz popa test pop xor mov add cmp mov sbb std push push and xchg jns and cmp insl call (bad) lods insb cli mov jmp in loope mov pop sbb std cmp fildll pop inc mov add add decl push int3 in and inc push (bad) cld lret adc mov shll xchg add stos call dec sub adc mov jb popa and dec or stos pushf push lret sub mov fldl scas (bad) out add mov (bad) scas inc cmpsb adc xchg inc sbb in jp js fsubrl subl repnz add (bad) xor mov mov xor push push inc jbe jne loope stos ret jp inc jb cwtl addr16 pop pop adc je test cmpsl mov xor push int pop aaa pop push push mov adc adc push cmp adc pushf lds push stc xchg repnz or xchg fidivl xchg mov mov xorl imul or pop addr16 xchg ds mov fsubr push ds jecxz adc xchg xchg inc es mov inc sbb insl xchg loopne push and bound in sub hlt inc mov nop test iret sbb fcompl jg (bad) mov arpl movsl in and push pusha adc mov push (bad) cmc sub into mov int3 outsb pop clc ret sti inc sub and mov jo or test and pop mov jb push out test int3 xlat xchg mov jl sar sub inc inc and adc push ja cmp xchg in call movsb xor push push sub sbb andl loop push loopne sbb pop cmp pusha jl ja int3 imul stc pusha inc in add test xor mov sbb int3 sbb inc xor dec ss jbe cwtl je andl cmp fld sbb enter arpl enter ja ret xchg (bad) sub add xor movsl scas push hlt (bad) out adcl mov push mov mov mov mov inc mov mov mov imul sbb xchg gs or test sar psubb push adc loopne sahf jge mov sahf inc xchg adc loop mov xor shl cmp shrl in popa outsb and ja (bad) jb jno jmp and add pop inc lea inc xchg sbb jno jb movb repz icebp sbb addr16 cmp sarb inc roll ret inc jp cmp mov pop lret (bad) mov movaps inc (bad) xlat jnp dec xor xchg cmpsl sbb and cli or push shll adc popa sub pop out mov inc push add out and rolb out pop or loopne movsb xchg out shrb jl lcall loopne pop push pop stos push not push js scas adc xor mov int or mov jecxz and cwtl sbb xchg mov inc (bad) xor inc (bad) sub repnz sub adc jp lret fcomps cmp fnsave xchg adc jmp push mov (bad) jbe scas test mov cmp xchg fisubrl inc fiadd xchg mov cmpsb sbb nop rclb dec (bad) mov cmpsl xchg jg xor ret (bad) aas ffreep testl and mov push lret loope push loop add insl je dec aam arpl add bnd (bad) lock sarb sub adc iret inc inc xor xor pop aam dec mov jle push aaa push xor add xor cmp xor mov shr add ret and das mov sub dec mov mov mov icebp andl push jp fstl and dec cmpsl andb (bad) mov loop cmpsb inc add xchg mov daa fisubl idiv sub inc xor inc mov jnp cmpsl sbb decb lcall rcrl cmpsb push add ret pop cltd (bad) loope loope push cli adc scas push pop out sbb pushf bound (bad) jecxz mov mov sar mov stos popa es mov adc sarl jae negl lret mov and sub adc or daa out xor xor and sahf dec insl loop mov clc pop push hlt add shrb out push fisub js aam stos mov add cmp xor xchg das push ss imul xor pop test mov adc loopne nop popa in fwait sub loopne data16 lods in and mov or xor adc or mov mov incl xchg mov cmp add ja xchg (bad) and out mov or aas jp roll and lds les adc jg adc and roll comiss arpl stos mov outsb and lahf adc jle adc pop push push inc rolb xchg out jg mov adc adc push and mov mov ss xor mov pop sbb mov mov sub pushf inc cmp push int3 lds in pop sbb arpl insl fadd adc sbb push or sub aam mov out scas sub cli mov imul lods es jmp sbbb xor mov scas mov hlt test je xchg xor add mov das ja aam mov xor mov test inc push xor jb das stos xor loope mov ljmp adc outsb push cmpsl loopne sub xor xor and out xor adcl divl mov or pop add mov xor sbb inc divl mov sahf xor xorb jp sbb imul push dec jl or adc mov push mov orl xor push rcll outsl popa push dec cwtl sbb fwait popa adc (bad) or mov (bad) push xor cmp and cmp xchg add cli aam mov mov (bad) mov sub jne loopne cmp add repz xor xchg mov mov add ja,pn inc ja push adc xor (bad) mov inc mov xchg mov mov stc pop inc xchg test mov imul mov dec sub xchg mov push jo inc push and xor cli les mov insl je popl test push cli loop push and jl add mov or popl push inc adc ret faddl mov movsb cmp ret (bad) xor mov add mov mov andb dec hlt cwtl (bad) sahf mov push and xor idiv fwait mov xor rcll dec mov test add sar and jmp adc push or sbb xchg loopne push sbb jno rcll test hlt leave pusha add cmp jp mov mov mov sub pop shrb pop push jp icebp add adc xor aaa cltd push mov daa je ja mov adc adc jae cli xlat pop mov sbb pop adc or call js sti and dec push loopne mov push push call roll pop add push inc test arpl push leave xor stc stc scas fdivl mov je mov jno inc data16 std shlb or sub movsb or xor jmp test das adc mov loope xchg push int hlt mov and movsb out jb pop rcl addr16 arpl stos out lret lret or lret push lods push mov roll mov or gs adcl inc pushl cmc int inc xor mov pop cmc sbb icebp cs outsb inc lret icebp (bad) sub gs push inc das push das add repz shll jmp inc loop xor int adc xor sub mov test shrb repnz mov mov ret pushl push fdivrs xor add mov mov iret test pop dec mov outsb push sub stos mov push xor stos pop add xor test insl cmp int3 jle stos jne add mov xor mov scas pop out mov addr16 aam test scas loopne in and movsb sbb nop adc aaa popa push outsl jmp xor xchg (bad) cmp mov scas pushf loopne call push dec jo sbb ss jno xor xchg mov inc jmp (bad) rcrb mov xor sbb hlt xor push leave mov sahf mov shl mov cmpsl sbb sub stos andl mov and adc xor add mov cmc adc fst call xor nop roll sbb (bad) ljmp fdivs call and test push sti sbb jbe adc xchg pop sub xchg pop and adc and inc push mov aam mov sub dec pushl mov jmp icebp mov loope sbb cld aas sbb dec adc xlat imul in pop fcoms mov je lahf faddl and xor adc stos jb xchg fdivr ds call jbe (bad) mov daa hlt xor mov leave scas stc pop pop mov imul sar xor cwtl mov mov add mov sub add stos (bad) je fdivs repz ret (bad) and sub jb mov pop mov jg int fisubr xor xor dec mov xchg and or xor fwait jmp inc cli mov xor (bad) out aad in test push sub (bad) jle dec nop pop mov pop ficoml xor nop xchg lret insb mov mov sub xchg dec loop xor sub xor push adc aam sbb es xchg mov test push test cli fisubrl (bad) jne std fs clc rorb mov xor sub loop inc (bad) pusha sbb mov ds rcll pop adc add cld aam data16 cmp push pop ljmp sbb inc cld test pop jns mov rorl adc sarl push adc push shrb jecxz int xchg imul xchg xchg adc inc xchg out dec xchg sbb loop jmp (bad) inc xor and adc push xchg lahf aaa ja jg and jae or repnz mov jmp popa push sub pop inc daa pop mov xor mov bound cmp xchg jo daa mov enter dec sub (bad) sub fidivl sbb icebp stos cli pop or mov mov popl pop mov adc (bad) loop mov cmp jg mov shrb adc jl xor adc ja push les lds mov sub ret mov outsl lret scas jb push pop dec mov jne ds dec pusha mov stos (bad) dec or jo (bad) mov or add jne and xchg rolb lcall push ret icebp push mov je xor mov adc mov and clc ret scas insb xor daa jle dec mov jae and out cmp imulb push daa xor pop sub (bad) mov jb dec and mov xor gs or and lea dec scas push imul loop cli sub ja (bad) fmuls mov cmpsb rcll lcall mov xor sbb xor iret jb scas pop xchg mov and rcrl mov adc pop mov mov adc pusha sub leave aaa icebp add rcl mov sbb inc ret adc xor nop add je mov mov fdivl aad shll add cli and enter and cmpsb xor repnz leave icebp mov mov mov add inc leave jnp or repnz cmpsl sub orl and je (bad) aad gs inc xor mov inc add cli fcmovnbe insl test hlt jne jmp sub jmp jo jmp push mov mov in mov cmpsl fcoms out push loopne adc jb (bad) sub dec aaa imul pop sub jl shrb mov sub add leave and pop push sbb and adc mov test mov xchg add sbb mov adc test dec imul jae inc in adc mov scas jae stc and (bad) jmp xor rol xor les xor sbb roll push push xor insb gs mov cmp das (bad) pop inc out je rol push dec lahf dec inc and iret sti xor mov cmpsl je push loope fcom xorb mov or dec fildll stc rcr lods das cli fmull mov adc jg adc mov roll mov pop sub cmp dec into outsl xor popa sti xor lahf mov (bad) mov mov inc sub int3 or repnz in cli cmp cmp repz xor jae jb add pop dec xor lcall xchg rep es mov aad out adc push cld sub fist sub xchg xchg add adc mov cli (bad) out xchg bound adc sbb bound nop jp pop xor imul jbe jo mov jmp ss lcall outsb cmp orb xor repnz adc nop jge mov adc andb add xor xor out test dec leave add repnz pop and clc test mov cmp fmul xchg lret sub fidivl loop test push test (bad) jecxz push insb xchg adc aad test xor jb adc in (bad) sbb and fwait xor ret test lahf cmpsl nop and xchg push in mov jbe mov adc data16 js sbb bound repnz sbb lret pop xor xor daa mov xor cmp add icebp jo sub dec lods jmp gs mov cmp loope adc fildll add xor mov cmpsl aad cli xor (bad) mov outsb mov mov sub sti xor mov notb lret sti inc sahf sub movsl roll repz enter push test nop xchg imul add adc daa pop sub jae xchg xchg xor mov imul inc or es sbb push sbb sbb sbb lock rorb daa xchg notl jmp test sbb mov std hlt lods stos pop repz add or sbb cwtl fsub (bad) mov adc mov add push push in (bad) jg sub lods xor mov mov mov (bad) repz call push xchg sbb test mov add arpl sti jae and mov inc or jns add pop push xchg (bad) mov ret cmpsl bound es movsl xchg jno xchg enter xchg add rorb pusha insb sub push repz repnz pop cli adc shrl adc aas (bad) rclb xor push aas xchg push xchg xor nop sub xchg and mov sub ja (bad) mov scas jb ret je sub dec mov ja test xor and xor loop (bad) adc ja xor xor sub divl ss adc and jge add xor or test inc push aad add int xor cli aas jge cmpsl and add mov hlt test mov out sbb sbb sbb cmpsl andb mov insl cli xlat mov pushf les and push out mov insb cmp daa push push decb (bad) xor pusha xor pop cmp call into insb sbb jecxz dec or adc or into mov cli inc lds or repz pop mov and sbbl test ss jmp push mov xor cmpsl xor jbe mov stc in testb pop add out dec xchg sbb aad insb sub xchg xchg in sbb push imul fcompl jmp repz stos loope hlt test int3 adc and rclb testb jge jb pop lds push mov sbb dec nop push mov (bad) xor out pop cmp sub add jp push lea repnz push int3 sbb inc jne in out sarb jl mov ja push sub stc fisttpll cmc sbb push push test xor inc cs mov inc mov pop fiaddl adc push (bad) (bad) aaa jbe xor xor enter shrl sub push push loope sbb mov dec daa cmc int3 popf and loope sub inc xchg dec sbb jae mov outsl xor push mov or and mov pop stos xor push xor fs and lret and fs add adc jp jmp sahf jecxz enter and mov and mov inc pusha push xchg or lret inc test andb jno outsl imul or pusha leave les xor and pusha adc and xor fs ss jg shrb leave test fwait xor inc in xor xchg push repnz jmp and mov shlb cwtl adc loop mov (bad) mov subl xor repz pusha imul loopne scas ret sub and rcrl cmpsl pusha adc sub and jo ret hlt int3 add adc es sti les xor lea jnp jnp and fucom mov iret push das out cmpsb aaa xchg adc sar incl push push shr sub scas xchg sbb jbe popf and xor mov in mov icebp mov test xchg ljmp add jb gs or (bad) mov and jo mov add add xor and ds je mov xor sti pop pushf push xor sar mov mov int clc mov mov xlat push push loope xor mov xor aam leave lea jbe pop lds mov dec int das (bad) pinsrw out dec jae adc scas pop push push cmp inc add xor ret (bad) lds cld mov xor in rolb dec pop or mov inc add or jb xor xor inc int3 int sub cltd call in xor (bad) mov arpl bound pop or mov push insb sub fbstp ret rclb inc cli inc subb and repnz jmp jae scas and sbb in sbb mov (bad) xor mov into icebp mov jb aaa lcall daa mov les scas xchg cld inc (bad) adc lahf rcll adc adc test pop das pop push xor or out push leave sub jae push jne xor mov jo movsl out xchg mov cli push inc loopne pop aaa xchg sbb cmpsl and test sahf add and jg test cmc jp add jecxz mov sub xchg test aaa fsubl push loope imul xchg ret mov repz mov mov jae imulb leave adc and add inc adc inc (bad) mov or xchg pop negl out add insl mul push sbb adc cmp aam push sub xor ss push xchg ja jmp cld sar add push mov inc xor fdivp pop or ja les sbb add enter cmp adc and stos (bad) clc xchg mov adc mov xchg aaa cli inc push adc dec pop inc push clc mov cwtl sbb into movsl push cli pop pop xor and stc decb sbb mov popf or mov dec sbb ja loopne repnz jae je push xor lret sub and mov mov jmp mov ljmp out daa add add enter push jmp (bad) cli ja add popf cmpsb fucomp push stc (bad) pop adc ja sub in ud2 (bad) pushl mov jg sub out dec adc adc js stos aas push fldt sti mov stos pop push sbb sbb pop or sbb js inc jb (bad) pop sub sub inc into inc and mov xchg and ss mov xor push nop push mov fdivs xor int clc int3 xchg leave shlb add pop add psubusw je push xchg sub mov out and in mov ljmp ss data16 inc and sbb lods insb sbb xchg je nop out das xchg push xor push test jb push mov mov xlat movsb jmp cmpsb jae jno (bad) xor push cmc gs dec jae mov addr16 xlat or lcall loopne xor mov mov movsb xor inc adc inc cli mov jle test jno cltd cs popf mov int3 gs js je stos mov test movb mov insb cmpsl add and mov movsl inc inc mov in fidivrl and rep xor bound repnz test lds jns mov mov faddl out xor outsl sarb divb pop dec hlt jo add je cld cmpsl pop mov aam loope test sub leave addr16 loop and in imul mov xlat mov lret jnp push mov mov sub in aam xchg xor pop clc cld jne,pn jo icebp std pop cmp adc loop in hlt dec nop shl cld xchg sbb push je xor push sbb pop xchg xor xchg sbb pop je mov xor jae icebp test fnstcw add xchg cmp mov cmc fs out mov jns pushf inc enter cs mov pop imul push cmc in xor leave sub add mov pushl aas cli mov xor cld popf nop xor mov and imul adc dec jle xchg push in int sub xchg xor dec lea mov divb jno mov test arpl xor dec addr16 lock mov or and jo mov mov aaa jg dec jecxz push sbb and cmp sub or js mov fistp mov xor rcl jae pop add jns xor lods addr16 jae pop cld fidivrl pop lods add xor sub (bad) xor call and or repnz adc jno push in mov loope enter fstpl loopne icebp or mov scas insb outsb xor je add jmp insb pop adc fild mov dec dec rcl sar sbb and cmpb mov cmc addr16 push test xor dec and sub adc dec je icebp pushf xor jle push jge sbb and stos orl adc cmp xor pop sahf adc adc in mov jbe movsb jg std mov cs jle mov icebp ret jg in movzbl out je dec push xlat fs in adc aam mov cli jo repz or xor (bad) add inc xchg adc add je mov sbb fdivs jb and sbb (bad) jb sbb or sub cwtl lods jmp push loop xor inc sahf push mov mov xchg adc addr16 xchg mov and repz fwait ret imull cmp mov adc xor std pop pusha lock ja out call cmpsl imul cmp iret mov xor sub sbb xor test jb jae or mov lahf fisubl xor xchg add test xchg push stc sbb mov cmpsl std adc jmp inc pop adcl out movsb jb sbb inc dec repz sbb mov adc fsts incl mov movsl adc les sub mov push dec je xchg adc aad loopne mov dec test bound or mov les inc ss call sbb lock mov jmp xchg push adc mov jmp (bad) xor inc stos sub loop pop repnz mov outsb repnz or push daa jo insl pop adc sti mov or xchg mov out and in sub das mov sub mov mov mov ret repnz add arpl push jo cmpsl lods ljmp jno push and ljmp sbb mov pop js imul and xor push sbb or repnz mov cmpsl mov adc clc xor ret lea and cwtl cli jo fidiv ds in mov or mov mov xchg clc aam addr16 nop push jle pop ret pop stos push jecxz sarb push rorl sub adc mov repnz jp in std mov push adc repnz xor shl addsubps lods out push xchg call push mov jno cmp imul and outsb dec cld js es call jmp push imul divb and (bad) sbb or inc dec out in mov jns add cmp jle lret cmp sbb cmp inc xor repnz adc test rcll dec mov popf add fsubl addr16 outsl pop mov aam les dec repnz adc or pusha sub mov stc leave push or popa mov xor bound mov add fcom xor js xor icebp mov insl push dec sub jne or iret inc je std inc ljmp push jno push ret sbb imul mov jns cmp movsb xchg or pop mov sbb test push repnz mov push xchg jno in sub adc (bad) push nop inc xor popa cmc testb les scas jb mov push jb sar jmp fnstenv cmpsl mov mov xchg mov mov rcrb stos push push sub loope jno out inc jno ja hlt ss fwait fs fbstp stos popa xor xchg add dec outsb popa in stos mov push push insb aad outsb je sbb arpl aas enter pop insb pop sub sbb dec mov sbb popf add mov lcall xor jmp adc add repz adc mov xor push andb je inc imul pop cli hlt and inc int3 jp pushl adc xor dec aam cli aas jo (bad) push and aam push adc mov add sahf insb and int and lds cld add test pop sub inc lods xor adc adc xor sub ljmp call imul repnz jle insl outsl adc fildll sbb xor imul hlt cmc pop pop dec mov xor scas sbb sub repz xchg pop mov sbb movsb repnz repnz or sbb fwait xor clc mov push sbb mov repz (bad) adc les in aas inc and loopne pop sbb or nop call mov mov in or lods (bad) or mov sub cltd mov push (bad) (bad) jmp adc jo dec xor and xor pusha jae loope fnstenv dec jno jo sub xchg in mov sahf cmp pop in imul xor test fs sbb pop cmc lods mov xor and sub in loope ffreep cmpsl xchg aaa fisubl jno mov xor inc loopne sahf xor cwtl pop jge lods outsl fstl jo ljmp sub mov cmp pop xor gs mov sub push and shufps mov mov cmp fwait gs mov nop mov outsl test insb clc fimull push pop hlt jo frstor fdivs (bad) imul mov pop add add std xlat test jle fs sub lahf imul and ret mov cmpsl mov cli cmp je lea xor (bad) divb stos add and inc imul or addr16 mov sub add loopne lds addr16 psubsb gs inc jno xor loopne movsl sub pop in cli add xor cwtl out (bad) jge jno mov cli test mov test or pop or cmpsl adc rcrl test jno out ja mov shr and xor lahf mov add fucomp sub mov aad cmpsl clc repz adcl xor inc xor push xor je fidiv aaa cmpsb sub xor lods pop jae sbb sub in call jg push outsl fdivrp sbb mov ljmp movsb in int3 fisubl aaa hlt sbb and jb or and loopne adc cmpsb sbb les xor mov nop xor pop jl or shr testl add add (bad) mov sahf lock cmpsb adc adc cmpsl push or pop roll nop and daa add xor mov mov shrb xchg jl or testb sbb or loop and sbb push cmc movhlps test hlt or xchg ljmp inc push pop adc or pop add or push daa in testb sub divl pushf jecxz xchg mov jb rolb enter decl adc adc dec add icebp lods lret xor sub and adc jecxz stos xor loop xor lock push std movsb loop push push adc or xor or sub add xchg add adcb stos fldcw push push nop mov jecxz (bad) fcoms adc mov sbb add push add nop mov fwait or push push or sbb mov or mov stos push pop pop adc clc adcb adc add and adc cli and es sbb clc sub ret or or lsl lods das xchg xor xchg add repnz jbe addr16 xor and push std mov jno sahf adc sbb aam xor sub xor mov adc lahf into jae ret mov hlt adc mov aad clc cmp jp xor std icebp pop addr16 and daa je inc pop xchg dec aaa adc push or test cmpl jp insl int3 push mov jge dec cld cld repz xor mov push add push mov gs fisubr mov ds fwait mov mov in movsl add loope pop mov fwait dec je jecxz pop mov sub sbb and pop xor mov cmp decl repnz ds push (bad) pop xorl ret repz add adc xchg adc dec ds jno,pn sarb sub xor cltd pop dec outsb clc mov xchg fistp mov push insb jno inc push mov inc push rorb cmpsl mov out or and shll movsl and xchg sub fbld sbb imul cmp es sub dec add mov sbb (bad) repz mov hlt push xor mov jo jg mov lret nop cmp xlat (bad) cli ss xor jle js jmp mov jno (bad) sub out mov iret inc mov jb hlt inc repnz std pop push mov adc jmp (bad) jle fidiv mov xor mov add cld jge sarl repz test sub sbb mov pop je push inc cmp (bad) (bad) bound sbb adc pop adc push dec and xchg fcmovu xlat (bad) es (bad) in add mov dec push in xor lea or adc or inc jbe adc sub enter cli mov roll clc fsubs push push cmp repz or pushf arpl insl ret push inc add es repz add adc lds (bad) in sbb inc loopne sub push imul jb jnp sub cmp aad and rcll jne (bad) mov dec scas stos xchg or adc sbb mov push leave hlt cmc mov sbb hlt shlb je (bad) and daa adc das ret fwait pop (bad) jb xor xchg lahf out rcrl test and jmp xrelease (bad) jle mov adc cmc negl dec popf cmp xlat addr16 pusha dec je imul loop add xchg jae hlt movsl pop xor mov add mov cltd mov pop pop xchg sub dec sbb and das mov xchg or repz dec cli ret add je adc xchg xchg push add (bad) inc inc push and lahf (bad) push jae loopne jns clc or inc xor xchg adc xor push or xor lods lret mov xor ficom aaa pop and adc je cltd insl sbbl setnp lahf add jmp fs out push arpl xor cmpb mov jge push xchg sti jle je lahf adc pop and ja,pt dec addr16 (bad) xor insl cmp pop xor xchg and cmpl jle packssdw popa adc fldcw push xor daa inc and loop sub xor out out mov mov insl xor (bad) popf or fistpl xor or inc mov lds mov xor mov mov push sbb xor fs push adc (bad) mov push das popl xchg xor inc insb std cwtl je sbb pop inc xor dec push pop cmp call inc dec sarb adc xor cld pop add or test rcll sbb iret adcl push (bad) je sub jmp xor loop sbb hlt xchg hlt mov pop or xchg psllw lock in sub jnp roll xor (bad) (bad) int3 pmuludq dec int daa sbb pop inc cmp jb cs loope scas adc cmc pushf xor adc (bad) stc adc add cmp xor ds dec xor jnp cmp and push pop insl push cmp sub nop jmp sub xor popa adc mov loop int push pushf adc pop popf push sbb repnz adc mov push or or xor add mov jae xor (bad) hlt test lret mov cltd fistpl xor hlt push repnz mov cmpl cli mov dec push out cmc pop and pusha mov jno mov adc sarb pop fwait sub cmp mov js or push inc inc pop push enter test repz leave into sub js mov dec in dec divb mov iret lods arpl and repz ja icebp add and xor xor xchg and gs xchg push sbb (bad) repnz std cli cs adc jmp add jmp mov addr16 adc xchg or xor in cmp sub orl cltd xor scas imul in and stc (bad) repnz adc hlt mov (bad) (bad) xchg insl imul les mov aad push ret jo ss je pop clc (bad) mov ja (bad) test les pop lods push xor cmpsl adc cwtl clc xor rcl or aas mov cmpsl sbb and cs and stc mov xor (bad) mov (bad) test xor jle ret sbb divb (bad) or mov push push in lea outsl or jecxz xchg (bad) add adc xor test mov adc shll imul mov (bad) mov sub push dec mov in xor in xor data16 mov inc jp (bad) mov sbb jno xor cs and pop add fcomps pop xor sbb test ljmp adc pushl push mov mov lea cmp adc sub push xor pop stc sbb xor add adc xor pop jbe addr16 mov add xor lds adc cld jge xor pusha rolb das jno hlt lock cld push xor out push mov xor lahf dec mov dec (bad) mov movsb push adc jb adc jmp (bad) xor and push lret out and clc sbb bound faddl popf xor stos pop test xchg jae pop or xor gs test jae js mov add repnz xor jae ja xor fs stc jmp push pushf sbb jge insl daa inc scas xor int3 je xor loope sarl out pop xor test xorb je fcompl cwtl in lahf push into repz dec sub es imul fsub mov xor cmp jmp inc ss pop dec nop cmpl xor mov dec pop cmp pop pop dec ja adc mov mov psraw push (bad) adc in cmp ss lds sub aaa dec mov push popl hlt sub mov arpl js xchg pop push pop add xchg sub stc cli or mov mov arpl aas outsl inc scas divb push dec stc je subl mov dec jle or and cmp imul mov or jge addr16 xchg rcll add sbb mov (bad) mov gs mov adc test lret notb cmp mov gs outsb lret fstpl dec xor jl add inc dec sbb jmp hlt int jne out movsb sti cli cld inc test xor dec xchg and cmp mov jmp sar or das jnp pop push fisub jno mov sbb (bad) sbb mov fidivr fs jb psadbw sub dec and cmp pop mov sbb sbb popf out sbb xchg add xchg iret push cmp xchg jae lea and cld fidivrl imul pop jne sub adc mov add jg rcl ljmp push pop mov jno sbb repnz mov cmpsl ret pushf adc add and (bad) xor mov fstl outsl les cli loope pop adc sub or mov sbb (bad) and xchg add adc push cmpsl (bad) mov es push add adc mov mov mov adc out movsl fmull jecxz mov loope stc nop js enter pop outsl add jl scas and ljmp cld jle jo add jmp out dec arpl push pop xor push insl pop jne xorl jb mov push xchg into (bad) or xor or repnz insb outsb xor xor sbb mov xorl cmp lcall std icebp xlat mov ffree inc ja inc xor pop xchg ss xor xor xor repz mov xchg mov mov (bad) inc in adc pop xor mov cmp fwait sbb inc (bad) mov call cmp bound mov pop push push push inc (bad) arpl repnz in xor and xchg sbb test test inc repnz add and adcl dec cmp sbb jb mov cli cmp add arpl sahf hlt sti test sbb (bad) and jb std mov sbb mov adc pushf jns xor jp ss or dec xor mov loopne pop stc cld test mov inc adc dec es arpl mov mov out nop mov lods and lcall jne movsb mov push mov pop xor and popf je loopne mov add mov jns daa xor dec int3 mov jae inc mov in add stc mov subb push add outsb ffreep adc (bad) out xchg repnz sub mov jp adc imul ret in xor pusha stos mov int rcl aam hlt pop sets test sbb xchg sub je push or rcll sti insb and lods pop xor fldl xor hlt int and pusha jecxz xchg stos lcall xchg add jg inc jp loop fcoml xor mov out xor inc lods jno xor cltd mov pop pop lock mov jge jmp adc ja sbb cltd xor popa cwtl inc push and repz mov adc and test nop mov jl pop fs push lahf lret xor push pop stos cmp mov stos push insb sbb pusha xor sub xor repnz in jnp out mov xchg gs stos and hlt das loop fbld inc add rorl dec xor dec pushf push mov outsb jmp loopne leave cltd and pop mov push push pop imull rolb dec or cwtl icebp sub push ret cli jmp scas and sbb xor jecxz adc dec repz cli inc cmc cmpsl mov or test (bad) cmp aaa add ja jb or data16 test int jmp movsl hlt sub jmp nop add mov repz arpl and addr16 (bad) sbb test xchg out pusha cli sub in jmp rcl std ret jnp test outsb dec cli insb sub inc cli xor dec add rol in push fldenv mov add and cmp xor sbb aam adc mov inc ret lret push sub jae icebp mov jnp mov hlt lea lret sub xchg jle add cli add xor push push jne in pop adc hlt lock mov mov push clc pop jb (bad) mov cld xor movb sbb mov cltd adc (bad) nop bnd daa pop pusha add xchg enter xor mov jge repz aas sub data16 jne cli (bad) sbb xchg fwait add xor pop ljmp inc test inc push iret rol movsl pop inc add inc cld scas dec ljmp push (bad) insl adc push push mov fs mov sub xor test cli std ljmp sub mov sbb cmp je or stos gs aam xor xlat pop mov dec bound push push xor and addr16 add sub and cmp fist aaa xor test mov adc push andl shrb bnd mov mov cltd push push das cmpsl mov popa xlat add mov and and aam sub and ds scas jmp and mov xor xor mov xor mov or xor mov xchg mov shlb pop in lods imul std out (bad) mov je mov xor add and and xor notb xchg ljmp add movsl cli rep xchg mov mov bound push jg pop mov inc adc push and mov push data16 stc and xor pop or (bad) jg repz negl add add repnz mov sub push inc mov mov mov daa aas dec in xchg sbb mov sbb jne int3 mov lods mov iret add sbb jnp mov lahf cmc int sub mov jmp es sub int3 push cmpsb repz test fwait inc xor jecxz sbb add xchg aad out cs hlt sub repnz fs sub stos jge repnz pop arpl xor inc fimul and mov or loope adc inc add inc lds and and mov xchg xor nop inc mov std push jmp insb and aaa sbb stc mov (bad) mov jmp sbb call pop (bad) sbb sbb mov fisubr jns ss sub mov movsl pop sub jo jno,pt sbb adc repz mov sub mov (bad) movsl add sub rorl sbb add mov pop mov mov sbb xchg push insb rep sti cmovno clc rcll lret sub add lret xor std add mov mov lret sbb and cmp and and push movsl adc push je cli in sub adc ror lcall fsubrl sbb mov dec repnz push call jne mov cld jno sbbl jmp cmp xchg loop arpl fist mov mov mov cmpsb popa mov imul repnz inc dec jb mov aad jmp out sbb inc xchg push inc adc add imul adc push and clc fdivs andl mov adc xchg mov sbb cmp push movsl hlt push add jae pop (bad) scas sub xchg adc xor mov bound xorl js xor mov adc mov movsl push je cmp dec push test cli mov out dec les jle or sub xchg cli out insb xor scas call arpl into xor push pop fcoml mov cs popf icebp stc std das pop sub sub jnp jmp daa jg pushf push aad adc xchg sbb xor pusha fs and rorb mov repz xor add or je adc lods sbb adc xchg movsb sub mov iret sbb or jno bound cmpb xchg (bad) sub mov pop jmp xor jp test pusha pop xchg mov push stc mov add jmp bound mov sbb adc xor sub sbb fwait xchg jnp stos jp outsl cmp rorl pop loop divl add imul rcr sub xor test in mov adc pop lea and call lds push jle je (bad) cmp scas pop setae fsubr mov fidiv inc jo ljmp xlat int (bad) lds enter cld into rep pop flds mov jg cmpsb xor push gs arpl cli iret xor adc sahf adc add pop xor sub out gs loope jl pop imul aad sbb mov into icebp xor mov adc cvtdq2ps pop mov cli xchg jecxz mov out sbb dec fcomp pusha in jne in (bad) movsl hlt in ret dec sub insl and cmp sbb loope mov xlat stos mov repz pop xor push and das out movsl inc data16 mov orl cld int push imul adc aaa ja push dec push daa push xchg dec popf mov (bad) (bad) test adc out jno ret scas nopl dec adc mov jl hlt jge mov jns lahf push xor or stos pop and hlt add pop xor xchg pushl adc inc xchg mov push cmc xor xchg pop loope jg divl adc adc je cmp imul std bound nop les push int mov stos xlat mov aam test mov xor dec inc sbb inc inc push cmc ret repz rorl pop xor je (bad) out sbbl inc push xor mov xor cld jnp sbb cmp icebp add shll xor call pushf (bad) fstl std mov dec xchg mov jle and inc sti adc out sahf fwait (bad) pop hlt stos aas inc (bad) sarb xlat out mov adc sub lcall sub jle movsl sub adc out mulb jno or jmp ss mov add inc jge adc adc movsl push pop out sub gs jb jg into mov fstpt and xor hlt jl insb and mov jno sbb js,pt scas (bad) jb scas mov jmp aam test xor out mov mov and xchg (bad) mov and or sbb xor pop int3 mov pop xchg xor (bad) lock jle sbb frstor cli int3 mov clc mov aaa mov lods lea mov mov or insl int3 div mov ss aas inc sub lods jno mov hlt ds and cli fwait push je insb fildll insl hlt mov cli cltd es push add jp pop or push pop sbb and push xor xor mov ja dec jae addr16 cld inc mov jno ffreep hlt (bad) jb loopne cmp dec lret xchg pushf and outsb gs fimul and mov movsl daa jmp add inc leave push xor ret xor inc adc hlt arpl int rcll les xor fsubl cmpsl dec mov jae mov adc mov ds fbstp scas mov adc push call and push cmp daa lds cld movsl mov sbb loopne mov movl leave mov test sbb rolb sbb loopne cmpsb lea cmpl in sarl mov lcall outsb icebp into pop (bad) mov in dec lods push cmp pop outsl push push (bad) lea mov jbe fstpl dec pop call and jmp out sbb repnz mov ja xchg leave bnd and jo loope cs xor mov mov push add sbb add in mov mov jg imul pop aas les adc subl movsl push xor jle xor dec imul pop test xor ljmp sahf sbb mov daa fidivl loopne push cmp (bad) int mov jbe push popf and (bad) xchg xor xchg out xor shl mov dec mov mov add adc sbb xor sbb push lret push inc push or pop xor cmc push fs repz mov push adc jne subb and jl adc scas sub xchg mov push xor sahf dec cmp inc cld dec xor test push pushf adc mov add jb xchg ja pop mov lret stc loopne pushf lea add inc and pop xchg lret cmp sbb sbb mov push xor push sbb insb push lret das lcall stc das adc call sbb cmpsl dec jp pop and les dec pushl hlt pop js repnz jecxz es dec andl imul and adc jo (bad) sub lods or mov leave inc aam aas cld jmp and (bad) mov imul inc movsl push dec inc stc jne lods rclb pop xor pop imul and push in jb adc out xor aam pop out idivb pop mov or pop cli rcrb enter jecxz xor shrb fmul dec add sub dec mov sahf jne test xor in je cmp add or xchg cmp imul mov cmp ds pop push sub xor inc cs xchg xor lock or in pop adc jns shr xlat ljmp adc push mov adc jbe ret sbb cld cmpsl out je jge test sub xor and in (bad) push or push les gs add je pop ljmp hlt xchg adc jnp in cmc sbb mov adc cltd jp stc add test sbb xlat ss fwait stos jl clc mov xor mov int aam xor in out xor inc inc or stos pusha sbb hlt bound inc (bad) jnp daa jmp lcall jp xor sbb mov lods dec aaa and emms cld outsl cli ret sub pop lea fsubl or loope pop (bad) sbb push das push ja ret popa mov cli push pop es clc jo xor mov hlt cwtl call xchg jecxz scas pushf js cmpsb mov xor clc out sarl cmc inc fcompl lock fiaddl pop or mov pop jmp aam sub mov sti les inc xor sysexit push or add sarb mov fistpl cmp scas xor sub in adc jae pop xor (bad) lret cs sbb clc xor iret ljmp pusha shrb (bad) fsubr xor mov mov and or add jno jb mov push xor xor mov popf mov sbb jge jae xchg add mov clc ds mov ja fist push pop or icebp aad (bad) sbb xor pop push mov cmp add leave xor popf imul out js or rclb and cld fidivr call std sub pop adc sbb data16 add data16 add loopne push fdivp mov shlb lods mov mov cli sub xchg test aad xlat mov es cmpsb outsb mov mov xlat adc aad dec jae sti jmp jno cld or repnz mov or hlt add lret divb je rorb sub popa adc xor fidiv mov rorb mov icebp nop jge xor in test hlt jp jle mov pushl mov xchg pop aam sti rcll pop sbb lods xor in pushf adc (bad) lahf or int mov jmp outsb loop cmpsb stc dec sti ja sarl stc sbb xor decl pop out outsb and cwtl sbb sbb mov clc popf int3 mov push fcoms jmp sbb and jl mov (bad) icebp mov enter xor js mov xor imulb je sub push hlt lods push mov jns out sub add ret js or push mov or pop push popa sbb sbb xor mov lcall mov jl daa and out cmpsl je xchg push lcall pusha cmp push imul and dec sbb iret insl mov in jno cmp jmp pop bound fldcw lahf je push mov (bad) outsb adc xchg cmp call and xor add pop mov nop sub sbb jle mov xor xor in mov cli loopne push (bad) gs add mov jno sarb fwait rdtsc xlat adc in xor pop fisubrl and ss and xor xchg xor jno lods mov cmp xor dec and cli adc push jo into and test out mov adcb sub and mov add pop rolb inc jno sbb xchg sub lcall cli dec out adc jmp test shrl (bad) ss outsl or push mov sbb fldt mov leave mov (bad) cli ja mov mov sub sbb xchg das add sbb sbb mov jle fildl jns jge call daa jb js cmpsb xor leave cli jb (bad) inc sbb ret icebp cmp es pop add mov aas inc jl dec lcall sbb and cltd and sub in mov and push sbb cmpsl leave pop rol xor lea mov idivl xor pop jge push daa outsl iret stos xchg (bad) repnz inc adc xchg call or lret mov adc or adc les sbb jo cmp xor fsubr mov mov mov aaa mov pop jle ss loopne shrl mov inc lea push dec cmpsb push nop xchg repnz ss xor jp xor (bad) jae push mov int jne adc xor add rcrb repz lea mov cmpsl cld xchg sub sub data16 or or push pop rcll movsl ja outsb adc (bad) popa popf jo stos mov aad jge or sar popf lret incl mov rcrl repz inc pop adc xor sub adc repz mov outsb jecxz lds idivb ljmp xchg xor and sahf dec adc add xchg and xor test icebp insb mov and xor mov cmpsb jle sub mov pop push adc push popl inc int jmp adc enter cmp insb repnz cmp bound add or mov or (bad) aaa mov xor subb xor xchg mov push gs xor rcrl jno mov xchg dec mov cli cwtl lret mov repnz sub cmpsb add cmpsb mov cmpsb xchg outsl xor inc mov ss push adc (bad) out icebp cli mov aam mov in cmp push mov mov cld sbb cli fwait data16 lock lods dec pusha xor ds mov dec repz mov sbb xor arpl repz cwtl sub and imul ror and and push dec imul mov pop insb les sbb jbe adc cvtdq2ps ja (bad) mov jno xor loope fcoms or xchg aad int mov mov push divl mov lret fcoml sbb jno out rcll jo bound sbb cmc repz dec sbb aad out xor mov mov popa mov pushf sub sub sub in pop and in sarl movsl (bad) std xchg xchg mov sub dec sbb (bad) push pop stos adc bound mov data16 jecxz aam mov test or rcrb aam fst xchg popa mov xchg jp sub and adc push xchg sbb cmc fiaddl xor jecxz mov or std mov mov repnz xchg jle stos inc push (bad) hlt pop jle fadds pop test and dec cld jmp pop sub loope incb and cs push test (bad) and adc js xchg in xor mov int clc sbb cmp jecxz pop repnz mov or repnz mov mov pop into mov movsb cmp pusha sub push add mov sbb and xor xchg repz sti xor mov repz sub sbb int cmpsb dec sub mov fdivs dec push add inc adc mov mov gs and jae int fcmove sbb pshufw dec fwait push into mov pop lods iret test adc cmp push ret daa insl pop lods std inc fiaddl std and add xchg pop outsl mov pop add cmpsb pop and andb popa or test xchg nop shll mov fdivl add lods popf sub stos fiadd fidiv insb mov jmp int3 jb and mov add daa sbb mov bnd insl cli push imul xor (bad) mulb das adc das in sub cmp sbb lret xor push in sub mov xchg dec add and xor jge adc bound paddd xchg repz jl xchg add cmp dec lock or jbe jmp sub cmp xor cwtl jge movsb test xchg out jno pop push xchg repz push out leave std cs jae push adc jb and pop incw or jmp xchg lods (bad) jb and push loop dec test (bad) out jg (bad) fsts jmp and shll insb outsb add jmp dec loopne call sub je pop jp and xor fs cli inc test jbe and mov add outsl and sbb (bad) pop in sbb mov dec in mov dec outsb xor fwait jo and mov aaa outsb push cmpsl jno ret (bad) (bad) int inc or fs mov mov inc enter and lods jecxz cmpsl jl sbb sub add daa lret paddq mov jbe (bad) into or movsl xchg cli or jno std add pop out mov das cmpsb xchg sub scas mov and fistpll lret int ja xchg sub pop idiv mov cmp mov pushf jns xor aaa mov xor dec or or lds xor popf sbb xor nop mov scas loope jmp push repnz mov xor repnz jae sub sub aaa xor or push push push mov movsb mov jb push mov push mov xor jmp out stos cmp jnp and (bad) pop ljmp xor repnz push test mov stc scas hlt adc inc add aaa je sbb or inc sahf pop aaa and xor jnp lret hlt movsl pop pushf cld test push movsb jbe push daa pop fstps nop mov cs push sbb mov dec dec hlt push mov (bad) pop insb sbb mov push ja je cmp (bad) mov jl sbb jno push test jge in addr16 cld inc cli data16 xor and aaa data16 aaa and mov cmovne movsl fwait cmpsl pop mov jns (bad) jo in mov (bad) daa sub hlt shl (bad) addr16 sahf mov inc mov mov roll dec aam xchg les dec mov fldcw lret cwtl (bad) pop ss loopne inc (bad) divb (bad) xor mov cmpsl xor frstor and cmp jecxz lret in movsl insl subl or pop inc jb or xor push push or inc mov stos popf es sub aam dec mov inc xor pop jae rsqrtps je mov dec cld test outsb adc push (bad) int3 jg hlt (bad) pop and sbb outsb push push sbb mov jnp xor cltd jne (bad) xor mov enter ja or push sub cwtl jno pop or dec cld mov cld jnp das shlb (bad) lock cmc fdivl ss add rcl hlt loop xchg clc and jo lret (bad) into jmp sbb push mov sbb push insb push adc or mov add ret cmpsb mov mov mov ja xor insb pop (bad) mov rolb push push xor insl sub or sbb cs pop out cmpsl out fwait ret sahf subl lods lods adc js mov idivl subl into sub mov and and and clc (bad) xor iret ljmp jae aas mov mov js adc (bad) mov xor in mov dec pusha mov xor dec pop enter adc in popf pop cmc push push leave mov inc dec cmp mov or xchg pop sbbb xor push lock sub ss fisttpll mov dec sub jnp hlt in sub inc out xorl jle cmp sub mov jb fsts pop sub int sbb lea loopne push mov aam fnsave test lods mov lahf bound (bad) loope sub adc mov pushf push lds xchg cmp add dec clc test inc pop in adc repnz inc ror mov sbbl xchg adc cmp sbb lods xlat jae xor fiaddl mov mov popf imul je xchg addr16 mov imul mov fs jmp sahf adc xchg bnd or mov sbb sub sti mov mov rolb sub dec lea mov mov shlb in add jne jnp jbe sbb mov xor mov pop pusha pusha stos cld xor dec and insb ljmp (bad) stos xlat fmulp cmc int3 xor loop push pushf xor pop mov xor loop cmc es ljmp shlb ret xor outsl cmp mov mov adc mov in xchg push sub xor mov iret repnz push pop in lret push ds nop push mov push outsb xor lea into (bad) int3 subl lret cld xchg inc push dec cmp arpl hlt gs mov iret jae (bad) jle cltd pop shlb fistp adc clc hlt lods call aad pusha cmpsb fcomi mov add or aaa inc adc add pop push xor inc push lret push xor mov int3 (bad) fisttp xchg loop pop pop xchg cmp jne xchg cwtl rorb xchg jo inc pop daa or loope enter arpl (bad) lds and pop mov adc cmp in inc xor sub mov popf repz mov stos pop sub popf fbld xor hlt sub mov mov xor push js outsl or in mov mov aas jae fs out mov adc mov mov fwait in aad lock mov popa clc gs xacquire add jb fcompl pop pop sbb xchg xor mov inc (bad) lret ljmp jp mov adc sub in add cmpsb pop leave pop push movsl xor outsl sbb adc cmp mov jno adc in mov jg inc cli imul out mov inc das hlt jnp insb inc std lret mov dec clc jg and out sub mov lods push push icebp dec mov rorb addb popa aaa addr16 out xor xchg jl jae test sbb jl fbld mov test stc xor mov mov or xor xor and loop movsl cs fs repnz mov enter cmc daa test xor xor mov cmp push sub pop pop cld hlt add inc adc in scas jg add jle adc sbb sahf adc xor imul ja (bad) xor xorl sub lcall loopne mov cmp leave push movsb pusha xor mov or mov mov ret cs jno rcrb sub icebp and and or jp shl loop xchg hlt pop and sbb mov cmp xchg xchg sbb in mov loope out and xor mov daa mov push adc xor sbb sbb push mov inc ficom xor jecxz bound stc pop mov (bad) push mov aad dec sti or ret dec inc mov nop repnz rclb sar arpl pop das add mov xor cmp or sbb in xor loope cmp xor jle add pop or and (bad) and push lret jne sbb mov xor pop ret sbb std push loopne das ljmp int3 enter int lock hlt out adc add into adc jmp mov xchg fwait xor int out (bad) jbe sbb mov add inc (bad) mov xchg fwait pop xor mov and sub aam lea xor ret mov sub hlt pusha repz lret mov mov cwtl cmp sub (bad) jb xchg fcmovb fistpll or loope xor pop sbb push jno sub adc and lret cwtl dec scas mov push cltd in fdiv inc sub out das xor sbb adc pop sbb push fs fwait dec jmp jmp enter add sub xor xchg (bad) hlt cmp mov add hlt and mov add pop fisttpll nop ds sbb mov lods push cmp xchg movsl sbb (bad) jl ja xor imul cmpsb inc insl and ljmp mov xor cmpsl add and push scas test mov out add stos psubsb mov add aaa mov aad lds addl add jbe xor cwtl (bad) fcomps (bad) xor testb je outsb sbb repz aam cmc lds jbe es xor int3 mov fcomip lds bound mov mov (bad) mov push stc xor out push jne xor div fstpl or cmc push bound in cwtl pop mov xchg adc or popa test rolb push cs xchg sub mov fsubrl mov popa pop xor shl lret mov int3 adc mov jg adc call add cld adc add lods pop or int3 jo je popa and (bad) mov xor dec push mov pop dec adc push dec ss aaa adc je stos pop stc adc repz jle fsts jae mov mov add or xor inc xor xor test imul popf xchg mov mov popf adc mov das rol or jp ret xor lahf repnz jge int3 xor mov sub dec xor sub iret lea push sahf add push adc inc dec add testb push mov xor hlt cmp cli cmc sbb or pop xor test hlt jae sbb sub sbb xor js xor inc xor and (bad) gs mov mov mov outsl (bad) in mov fs in mov mov add sub cltd dec xchg not (bad) cmp cmc xor int3 int jmp cmc sub scas arpl xor ret jecxz xor ljmp jp jno (bad) jmp mov sub (bad) repnz xor push jl mov inc lcallw sub dec cld cmp roll je and xor clc add push adc out iret mov xchg ret or mov mov cwtl lret int dec movsb mov cltd insl fwait and leave mov jns and xchg hlt shrb adc sbb xor push nop sarl outsb repz or loope in fwait jnp test mov movsl inc sub jbe out rcrb dec push leave loop fwait or cmc sbb outsb cld cmp hlt pushf mov lods lea sub das nop adc (bad) lret jns stos or sti data16 xlat mov aam xor pop jbe sbb clc add add stc and cmpsb pop adc test pop scas sbb ds add inc pop pop jne fadds jno pop lcall inc insb data16 lret sahf pushl popf (bad) jmp jns xor sahf mov mov call dec pop add (bad) out (bad) xor iret pop or clc lahf jae aaa rorb aas adc stos repnz ret inc lds (bad) adc xchg jg (bad) sub cs je iret inc adc sbbl lods shl or (bad) xor sub xor icebp cmp and sbb stos sbb xor test mov and mov and call dec std inc xchg outsb xchg ss daa inc and and mov adc jecxz and mov push jae popf cld dec adc mov scas in adc (bad) in aaa xor ret jl insb dec data16 (bad) cld hlt jae adc jne arpl je push mov add out not (bad) sub jo in mov dec outsb push cld dec jp jo fldcw repz xchg push je or cmpsl pop push add mov aam adc jae sub rcrb adc add stos xor dec andl mov (bad) shrl jno dec outsb dec xchg mov stos sbb je adc cmpsl (bad) xor cmc incl (bad) int3 mov mov cmc xor adc (bad) cltd hlt repnz sti stos insb add (bad) xchg je ss inc roll addr16 adc je clc push jge mov into mov adc hlt movsb fadds mov fcmovnu aad lahf popf subb lds andl mov clc cmpsl lret out daa xchg push xor pop xchg inc out hlt sbb jecxz push cmp pop dec and jbe mov mov inc fs inc cmp inc sub push inc sti mov xor test popf idivl test pop xchg jp clc mov fcomi fstps jge pop mov popf pop or cmp pop push pop imul jnp xor add xchg or jl ret add pop jne xor ljmp lahf cld cmp pop inc sub (bad) adc js xor mov mov jmp test xor int3 sbb mov lods cmp mov add xor mov jl mov (bad) ror das or ss sbb mov nop cmp and movsl push int3 pop imul or add mov push mov scas push (bad) je and nop in repnz mov adc subb add insl (bad) repnz lods jo sahf iret xor outsb (bad) push cmp icebp mov fwait inc push cmp out out fidivl in bound stos xor popa push push inc cmc aaa and lret (bad) mov repnz ss cmpsl mov out push movsl adc add sbb movsb jno push adc adc inc sub cmp (bad) out call xorl nop push dec xorl push inc in push pop ss jb xchg sbb push push je inc inc push loope in sarb ja jecxz bound push mov je shr xor leave ret xor fwait jno test sub mov (bad) outsl addl sbb mov ss sbb popf jno mov mov pop loop cmp pusha dec dec cmp (bad) sti clc jns imul sub and mov ret shrl xor mov (bad) scas repnz add or dec adc test mov sbb mov cmp dec or fnop insl andl nop in xor push leave xor cmpsl test xlat and lock adc mov pop cwtl sub push cmc adc dec mov jb clc vunpcklps xor repnz jp pop dec ss push push xor jns xor inc sbb and and mov or xor xor lods dec push jp hlt es xor stos xchg (bad) pop xor inc inc data16 repz hlt cmp xchg xor imul nop and and leave inc xor fwait push mov xor mov push cwtl (bad) data16 pop xor lret push pop xor or mov stc hlt stos cmpsl lret and out inc xor call mov stc push mov mov sub repnz (bad) mov xor movsl jb add mov jo sbb or push jne xor aad jo aaa push fdivs loop int3 test pusha sbb scas pop xor mov enter fstpl ret into xor mov dec adc xor lock pop insb mov into les jns xchg inc ret and cmpsb mov pop xor out aad out dec pop adc (bad) lcall adc and xor xor adc xor add imul pop xor aad ljmp pusha pop and es push jae mov cmp lods icebp xor mov data16 out push je fwait or cwtl or push and sub fwait mov fmuls lods sbbb fdivrl cmp add push xor xor mov add fcomps dec jg ss inc inc xor push sub sub arpl and sub xor mov sahf or push xor jae lods and sbb outsb lock into xor in fwait mov push mov push cmp fidiv inc sub or mov add mov pop outsb outsl cli sub or clc pop push and icebp cmpb adc pop xor test sbb sub clc push (bad) xor xor lea xor test sti mov sbb mov insl movsl sbb int3 sarl xor push cmpsb xchg loope fsubr add pop jns xor js leave jns enter gs jnp imul psrld pop cmp mov jne mov mov pushf cwtl leave mov mov adc movsl mov bound mov ret ror jnp lds mov adc jo inc ss (bad) adc test adcb dec or xchg mov pop into jno fnsave add sahf scas fiaddl sbb mov add fptan das cmpl adc scas jae mov ret psubw (bad) dec push clc out lahf dec fistpll pop xor (bad) xor lret into xor push push dec jb mov rcrb adc adc fcmovb (bad) ljmp cwtl rcll inc test push lcall out (bad) push pop imul add xor call lret leave or or fadd jns sub jb or cld lods (bad) lcall add in dec adc dec push pusha insl jb adc outsb push xorl (bad) stos outsl cwtl (bad) xor iret and rorb sti xor push jmp movsl cld mov mov dec cmp mov pushl pop jae lods mov fnstenv push xor push iret jmp mov xor mov xor mov aaa mov loopne nop jb out mov and mov mov outsb xor dec test fdivl add xor and mov mov inc and or mov cmpsl inc mov cmp adc add add xlat leave lret push loop stc mov mov xor movsb std icebp int cmp popf idiv sub sbb cmpsl je sbb pop arpl cmc pop daa sub add inc mov iret dec sub (bad) xor mov shl xchg and lock pop hlt and push mov cmp rorl adc fidivl ret or pop out insb scas jno call fldl xlat jp xor mov xor mov mov add bound movsl pop repz xor bound daa push sub lret std hlt out xor outsl dec mov pop stc cwtl dec xor ljmp fs nop adc pusha and mov stc sarb adc ret stos out mov pop push adc push imul xor push pusha xor lret adc je fdivl xor or loope xor sarb push xchg and bound pop repz test int xchg mov cmp and imul hlt call xor xchg dec icebp inc xor notb mov in push leave adc mov add jle jbe xor xorb pop adc cwtl (bad) sar jnp and xchg jns aaa fs daa jg inc mov xchg cmp int3 jl jmp out xor sti jmp cwtl xor inc and int3 or repz das lret xlat adc inc sub aad adc adc jns and fucomp cwtl xor mov mov xor enter sbb je in pop adc xor scas mov push gs cmp and mov xor out js loop mov pop enter mov pop jae jnp test bound outsl xor jp int sub fwait dec jno lods dec adc stos out fisubrl pop fadds ja mov xor xor mov add sahf fisubl sbb jl jg or push push sub movb sbb jmp mov jno aas das rcr jne add pusha cmp cmpsl mov je jl fstps int3 in mov imul mov xor stc mov out cld jno outsb mov adc push adc xor gs movsb (bad) popl jmp repz hlt hlt jg xor add popf mov xor xorl or sbb adc and add popa sbb add hlt cld xchg shrb movsb xor mov jne sbb daa pop xor add jno xor mov push lds cmpsb sbb mov xchg out sbb adc push pop mov ljmp test lods pop out xor cwtl into (bad) mov adc xor cmp enter stos jmp fcoml out xor mov repz in dec mov xor pop xor fist fstl jo bound (bad) and flds hlt jbe jae push ljmp push push jae mov and adc mov mov sahf add push xor cmc movsb fisubr xor cs hlt sbb enter pop in mov mov push adc sbb stos fimul test out pop xor ror je fwait loope daa arpl bound sub mov xchg mov mov iret xor les mov ret repnz adc mov aam insl and cmp push cltd out movsb in mov dec xor cltd fnstcw add roll jb sub pushl test xor lcall fdivs dec int xlat jo xchg xor and (bad) xor inc add scas push sbb pop out xor jge stos cld xor mov scas xchg mov cmp xor sbb stos sahf cmpsb or xor dec insb mov xor cmpsl push jae xor adc out scas xor sbb (bad) aam lds cmp ds mov adc fmuls push sub aam sub mov inc bound (bad) xor enter cmp rcl jecxz xor sub cs hlt cmc cli mov mov inc mov sub incb xor jb insl and rclb std cmp xor lahf sbb aas movsb cmp repz pop xor jmp div xor fist mov xchg inc cmp mov aaa sbbb push addr16 cmpsl jne adc push pusha repnz sbb pop sbb push ja xor sub adc aas rclb enter xchg imul test ds mov push push rorb pop mov push aam mov mov xor add xchg shr xchg push adc lea testl or fldenv cmp mov jns mov mov stc pop or cmp dec cmpsb sbb dec adc mov jno (bad) mov xor ret xor pop xchg mov call (bad) adc lcall xchg sahf jecxz fmuls hlt mov ja pop cmp or push add ljmp add or or jg push incb cmpsb mov int3 clc xor mov ja and shr es xor xchg ds mov addr16 movsb and and mov (bad) lahf pop mov adc decl adc and and jo je adc test xlat repz mov pop in cmpsb xchg cmp jb,pn aas mov sub insb xor sahf push leave xor sbb jg jno jmp fwait pop into sysexit cmp loopne mov repnz xchg adc lret and rcll xor jge mov mov add push cs stc xor mov push xor (bad) add mov iret (bad) hlt arpl inc xor into pusha xor xchg push mov add addb das jl test adc push mov xor (bad) rclb xor jge cmc mov mov inc insb fistp push clc cmpsb jne or add arpl xor test orl dec repnz jno jl or lret das cmp add lcall (bad) mov mov and adc add in or inc mov lods fcompl ds xor sub out jmp shll mov fs mov fcomps and int stos outsb or (bad) inc xor pop jl bound int3 pop xor sbbl imul std push movsb pop push stos in dec xor cltd push dec cli sbb inc ret jb pop insb xchg sbb sti mov mov mov jae mov lods xchg adc xor clc hlt pop test ss mov aas je add mov fwait (bad) adc add repnz push aaa je inc dec out in hlt hlt mov push dec dec add and mov les push mov add cmp sub decl test and xor adc mov xchg xor aad mov push sbb xchg cmpsl and add xor xor jo je ljmp dec xchg push hlt dec push or movsb imul (bad) negb icebp pop call pop and (bad) jne sub xchg and xchg xchg or ljmp adc xor (bad) or pop sub push dec test jns sub xor add mov xor jns xchg fwait xor xlat mov jle test jb lret fldenv cmp subl push popf insb and sbb iret in les das je insl adc sub push or (bad) repz push jmp dec sub pop aam scas ja jg cmpsl dec xor pop lea sahf xor ds jbe xor mov daa fwait xor jne rorl mov jl mov lods mov loope cmpsl gs xor idiv hlt idivb aas clc jne mov ljmp pop push cmpsl (bad) inc xlat nop repnz (bad) aam mov cmpsb in movsl add fsubrp inc pop jg xor push shrb jbe lret xor inc cli mov dec sub hlt mov or mov inc add sti xor mov aam mov inc sbb sub mov lods cli cmpsl in dec xor adc jne test ja cmp push ror jo jno sub and mov cli aam adc and mov lcall cld insl cmc mov push mov sti cli (bad) adc inc pop sbb sbb outsl and sbb or in pop test popa mov xor push cmp das xor test mov jae insb out mov jge daa dec cmp nop xor push pusha insl stc jmp inc pop test enter or xor lahf push aam adc test add dec stos addb mov cltd pop jne pushf xor and in xor add xchg xor rolb (bad) fistl adc push (bad) mov jo sbb int3 sub jnp jmp repnz rclb in fsubs adc mov std and in vcvtss2sd mov repz out inc or es dec in jo fs test xchg inc stos or xor faddp dec (bad) xor sahf mov lcall pop jmp mov imul ret out jo adc mov jmp cld jecxz inc sbb mov inc jo dec mov pop lahf xor push mov sbb mov out enter inc sbb test dec xor push sub test xor mov mov out adc fdivrl or call das sahf adc test fwait jae ret mov (bad) fstpl fbld mov xchg pop xchg xchg mov cmp mov out mov or push xor dec loopne xchg and push mov dec and iret cmp (bad) hlt test sub clc ds adc aad (bad) clc jb xor pop push xchg mov sub data16 dec add xor repnz and (bad) xor or xchg sub adc xor cmp jb pop bound les dec sti cwtl stc mov repnz mov call out pop inc xor jge mov xor (bad) mov push pop into lds mov repz add (bad) sarl inc xchg pop jmp daa mov push popf xor cld xor adc arpl mov xchg es mov pop sbb cltd je aaa push aam jbe shl pop (bad) jp xor in mov vmwrite out cmpsb jns jmp cmp xchg push adc dec (bad) xor mov xor mov sbb jge dec aam arpl cli dec fisttp adc sbb adc add insl das (bad) cmpsl dec inc fisubr sub aad cmp mov adc dec pop jo sub imul or leave sbb iret mov (bad) (bad) ja or xor je dec test fs sahf repnz (bad) scas jno std mov aam stc cmp jno cmp sbb jae xchg sub jl inc in (bad) cli mov dec sbb xor or outsb repnz mov gs mov rcrl scas ss outsl jns cmpsb or cli (bad) push mov nop jno inc jns fisttpl push mov js scas out gs xor sbb xchg je fcmovu cmp (bad) sbb add (bad) dec lods jecxz dec mov sbb mov xor aad je cmpsb repz pop sub inc mov addr16 adc ret out int bound rorb and cmp mov fbstp (bad) movsl sbb (bad) or pushf (bad) sahf bound aas arpl adc sbb (bad) repz enter mov ds jg sbb mov push hlt sbb or test ss xor dec add mov sbb mov cli lods cld mov pushf jne stc (bad) idivl cmc sub mov mov inc mov or aaa cli and mov les adc inc xor mov stos mov sub mov pusha pop sub inc loop les adc inc in aaa inc lods adc mov fstpl or sub cmp push cli (bad) lcall xchg cmpsl jle gs adc jno inc push lds imul jmp dec ds pushl lea adc cmpb push jp sub mov gs dec in pop jg cli cmp unpckhps push sub into add mov inc mov addr16 stc sbb stos sub fstpl and push test mov jo lea adc mov xchg test cmp jo fcoms jnp faddl scas (bad) mov stos int push je jmp jb bnd hlt lds adc pop hlt lods dec scas pop in adc (bad) cmovae nop pushl jp pop (bad) adc sub sahf dec cld jno adc lods (bad) sub sbb or jbe enter cmp movsl add xchg add sbb mov ficoml (bad) jmp (bad) mov add sub hlt sub inc mov decb sub mov xchg xchg sub mov je add mov sub sub jb cli shrb fmul test adc fidiv inc push test out add (bad) push jo test in (bad) aas add add add (bad) mov xchg roll (bad) mov mov and lahf and outsb ret aaa cmp mov hlt dec (bad) and xor adc pop sbb mov popa push jnp popa lret cmp adc in int pushf call daa lods xlat (bad) sub mov dec out cmp push mov shrb in sbb mov sbb clc cli loop jns adc ljmp mov dec sub mov test pusha xchg cmp xor sbb mov pcmpgtw jb repnz push pop jecxz mov push lahf cmp push or mov and or adc sub das and inc mov lcall xor es movb cld dec fbstp iret fsubrl outsb pop adc xor sbb pop pusha mov xorl sahf xor xor in push fnstenv clc loop imul adc pop pop xor cmp fisubr loope adc cwtl mov xor dec push sbb jge xor ds es xor popf rorb adc stos mov xor pop sahf push arpl frstor test jp sub pop xorl int cmc and lds dec adc into insb push sub sbb in xchg mov or jne mov imul mov pop js mov xchg (bad) jl mov loopw outsb aam nop mov sbb push hlt xor js imul nop call stos sub sbb fbld xor jecxz pop cwtl cmc push xchg mov add sbb movsb jb jo je jno and xor fnstcw (bad) xor int3 add jo jnp clc sbbl dec and les mov jle in pop xchg jecxz dec (bad) xor movsbl fdivl lahf pop sahf insb jns xor jl mov xor enter xor into (bad) and cltd adc jne mull inc aas shrl xor push or outsl xor pop mov enter add popa inc push outsl jb cmc mov cltd inc push cwtl or xchg add fbstp sti mov mov dec add bound lods es ret int3 je insb push mov lock push or xchg cwtl loopne inc jae jae pop adc add mov jg in aad adc push popa test inc xor ja ss xor jmp jne jle xor fcomps loop mov jmp fincstp xor jg out jno jecxz or (bad) xor push outsl sbb hlt fimul outsb mov xor stos sbb jge mov mov push cmp pop out ja jns jns jno sahf and xchg repz loope (bad) mov pop add fisub mov pop adc xchg test lret pushf fnstsw adc xlat out (bad) add imul mov jbe aas xor push and mov popl mov (bad) jnp jno imul pop insb dec cld pop push sub jmp xor gs loop fist jl js jae out cmpsl shr pop imul inc insl push outsl and jne adc mov xor mov add sbb int3 mov pop push push cli inc cmp test test fs inc clc ret int3 mov push cmp in fs jno ficompl mov add pop (bad) lret jnp xor fcompl push inc add call xor lock aas popf popf jecxz in lods pusha sub push push int ret or push hlt jl sbb (bad) mov and fsubs push mov xor adc jge nop xor pushf xchg loop xor jnp jle sbb or and xlat jmp push daa push xor push adc aaa xor test sbb cmpsb shr add sbb xor cld push lcall mov imul add xchg cmp xor and jno jo mov push pushf ja pop (bad) repnz or adc mov xchg adc jmp mov sbb scas jne push mov lret mov cld sub xchg sub sbb pop lcall or sahf repz cmp or sub in sbb xor inc sbb adc inc rcll push je sbb fwait mov xchg sbb loop inc pop and sbb pop cmovge test mov lds orl jmp les repz rcrl fisubrl out pop ror cmpsl icebp jl inc push mov das ret shrb xchg daa (bad) je into jge xor or or adc into stos push movsb in or (bad) push dec fmuls xchg pop add nop xchg movsb je sbb mov cmp pusha scas fild les aaa ret mov xchg dec bound ljmp ss push inc cmpsl mov sbb and xchg or jmp xchg lds sti aam mov popa and lea sbb inc pop repz and gs test stos movsl push push cmp xor dec aaa aad push pop ja les and or adc cmp in shrb push pusha stc sbb int ror jae in ret out sub pop mov ds psrad xor test int3 adc dec push cmp sbb sti fcomip psrlq dec mov dec mov inc xchg and xchg cli xchg mov or pop sahf fdivrl dec sub sbb dec dec test je mov nop (bad) (bad) or mov xchg pop mov repnz leave lahf adc or xchg cmpsb stos mov dec ret cmp (bad) lret bnd mov lret gs mov loopne shlb sub hlt mov loopne sbb xchg shlb out movsb adc rcrb hlt mov adc dec mov je jl jae and and push bnd (bad) push pop pop jne aam jnp test inc or das sbb jge call shl std mov and out idiv (bad) mov inc sub aaa call push pop (bad) inc sbb push out daa xor cmp lods jmp cs push mov inc adc (bad) (bad) ja stc mov lods sbb or or aam jmp scas std stos sbb (bad) lock sbb in push aad movsl xor cmpsb lea cli mov mov xor add or loope pop (bad) mov jmp or mov enter es cli sub (bad) pusha adc shrb imul sbb rcr incb dec inc nop ljmp pop (bad) jo idiv dec add out les ljmp lock ss jg repz fs xor out sbb and and (bad) loopne sub xor in mov mov and mov aaa cli or sbb mov repz mov movsl stos (bad) mov cwtl inc mov add mov lock cmp push icebp nop sub mov mov push es xorb jg sub and dec lods push stc jnp pop or test in mov or negb xlat push inc adc mov and xor ret lret jns sti mov cmpsl mov out pushf mov nop repnz push aam in cs into mov (bad) sub loopne inc jb inc (bad) stc cmp dec mov cli test adc jmp das bound and je sbb or or ds dec sti int3 nop popa jmp cmpsl mov arpl and pop adc add and and std das sbb nop mov dec push mov push jne dec cmpsl repnz sub stc sbb mov inc insb xlat pop mov cmp jno inc cltd xchg pop mov push jle add or in push or and sahf aad dec mov cmp mov sbb mov adc cli shrb shrl push push (bad) data16 xchg jmp mov sub std pop mov dec mov (bad) nop mov jno xchg cltd lods repz loop sub adc sub add fsubp pop jge and mov pop jae or pop push dec scas push xchg mov mov ja cmp lahf and cld int imul xor fdivr (bad) lock sarl push xchg xchg stos out mov jno dec das in xchg jae push popa js pusha pop outsb imul push push bound orl xchg out add sbb jmp ja test loop xor loope mov mov lods xor dec jb add or and sbb rcll adc aas push pop aas xor dec dec das imul bound sub jnp outsb adc xor outsl mov jb sbb std push xor shrl mov ficomp pop jne mov mov sbb mov ds fdivrl loopne dec push and xor inc and data16 pop into aad divl (bad) xchg nop hlt rorl outsb inc shll scas jp mov js popf cmp fs sbb enter cmpsl cli mov repz xchg dec xchg adc scas loop and inc mov aaa sbbl jno cwtl inc arpl cli dec lods (bad) xor dec mov jl jmp loop xor sub outsb insb push xchg xor test mov (bad) lret (bad) mov mov xchg dec ds xor mov jecxz xor repz sub fnstcw aam xchg add daa xor adc aas xor imul hlt mov dec sarb ds fcoml add or cmpsl dec (bad) and mov xor pushf inc repz jae mov or sbb mov insb jl inc mov dec add imul into dec xor imull jbe push arpl not test mov lds out outsl cmp inc jge mov and decl inc or pop jp addl mov and inc xor imul push das ja outsl aas bnd in lods xor pop xor divb mov bound mov insb xor (bad) jmp adc jmp xor push mov in fldl nop fisttpl add dec in (bad) xor addb cvtsd2si sbb jb pop mov add fmull (bad) or (bad) fcomi sbb and push xchg imul lea xlat sarb or adc xchg or popa and xchg ss cld movsl leave mov ret mov lret dec in jmp xchg pop (bad) and adc enter (bad) mov mov xor lea sbb lret mov mov mov clc bswap mov pop cmpsl cs lds sarl and xchg adc shrb cmpsl loopne repnz punpckhwd jmp lret and jno xchg sbb xor repz jmp sbb aam pop lahf or inc ss mov jo mov mov adc push lea cmpsl test (bad) test xor mov xor iret mov add cld data16 xor xchg les mov mov test mov jo jp cmp adc (bad) lods cmp xlat subb das mov push pop add jno jo sbb outsl imul (bad) js aam xcrypt-cfb cmpsl and xor cmp stos mov shlb in sub pop lds lcall mov imul pop lahf fdivl repnz add xchg xor das cli shll xor movsb pop lret adc mov and stc adc xlat fs repnz dec test ret push push inc sbb jle sub mov adc cli stos sub insl pop enter jmp jno out lock ret xchg outsb push sbb or ss mov and aam bound test stos sub subl ret mov sbb xchg xchg out jg imul mov mov xorb test push or sbb jb xchg and movsl lds clc mov repnz int out enter add mov cmp (bad) stc mov mov dec scas sbb popa push cli inc sarl adc cmp iret mov in add dec dec std xor ret out dec gs mov and in (bad) lods imul pop mov sub mov test xor jae out jle fdivl mov xor fwait mov cli insb xchg or adc fwait or movsl or imul aam lea loop xchg push xor subl xchg imull and rol mov mov ss xchg call mov hlt loopne (bad) cld adc ss sub imul mov fidivrl nop outsb lret add cmp int repz cmpsl mov xchg push add xor and xor jg lret push iret andl and es adc or out cli aas (bad) btrl mov bound jp jge mov call scas (bad) aaa movsl pause inc sbb mov sbb push mov mov movsb cli push push xchg inc sub pop shr sub xor xchg sub jb pop mov test mov inc xchg xchg rcll or xchg (bad) imul sub sub mov jle xchg stc in mov aam movsb cmp dec sub push aad cmp (bad) cld adc aas test sbb xchg mov push cs inc push inc adc mov mull repz inc les leave mov mov dec cmp fidiv push mov inc push inc inc jnp cwtl ss mov fbstp jmp xor inc popa cmp rcll gs push movsb scas std scas push sbb mov mov jne je (bad) cli xor adc cmp xchg or jae call add xor cmpsl mov andl pop cli push mov fwait mov pop sbb mov icebp je jae sbb jae shll sbb mov loopne or add adc cli out mov add mov sub inc hlt cmp and test notb add pusha or jae xor loope negb fisttpll sub in lea pop and notl jge hlt popf xor in lcall mov jae xor icebp push aam jae jno xor js hlt push sbbl lods add (bad) xor mov (bad) mov jae hlt clc push sbb call pop mov rolb (bad) fnstsw adcb jmp inc out aad xchg mov lcall mov stos cmp icebp out scas sbb push mov (bad) hlt cmp (bad) cld je and ret arpl jle cltd mov dec sub push popf ljmp aad jp pushf repnz mov dec dec pushl fdivl (bad) in sub outsb pop or and mov negb int3 add mov sbb push dec loop dec add hlt xor fs and cmpsl outsb inc int pop xor fcmovbe hlt lcall hlt js sub push xor inc add in adc mov pop mov mov mov fistpll (bad) cwtl scas test mov out mov mov movsb mov (bad) adc je in cs in das mov mov pop mov xchg mov mov fs xchg aaa cli and out push sti adc mov mov add fdivp mov xor cmp rolb add mov cmp sub popf (bad) xor std loop xchg dec cmpsl icebp xchg sbb add bound in cli mov nop dec jbe inc and repnz cli jg loopne xor xorb andb les fs in or and pop mov je repz cld cmc fwait hlt lea icebp fcomip push and mov testl sti or out pop sbb and xor fild imulb add fisttpl mov out fnsave loope aas xor lahf and inc adc insb mov into stos xor (bad) outsb jae sbb jno push inc push out xchg inc mov inc push sub adc and outsb inc sbb in or js jnp test loope mov scas outsl mov jno sbb in loope lcall daa mov cli arpl es and cmpsl inc in mov ss dec test xchg jle iret jne cmp aad push out sbb jg pop or xorl inc mov data16 sub in clc cli fcmove in mov les mov cli ss add cmp jecxz xor sbb test fisubr push in jecxz movsb xchg jno (bad) mov cld aam je lahf fwait repnz sti jo pop cmp imulb fbstp jg cld xor mov xor adc mov pop repnz movsb xor push shll lock or and push cltd pop repz jae cmc add sub test xor jno ds mov arpl popf jge aad and gs adc cmpsl push repz cli or and imul jge mov xor cli xchg sub movsb cmp mov jnp and xchg push in inc sbb fst xor jno jo fbstp lods and cli push insb gs push lcall xchg and scas push cmpsl cld jle push and mov hlt aas (bad) dec cmp xchg jecxz mov das jae add std loopne cmp push push sub lds lret cltd xchg mov push cmp test mov xchg push pop jae mov (bad) adc inc lret pop jmp jno mov jb movsb or mov cmp pop jno jg jbe adc mov push nop std push xorl jno es xor pop or adc outsl sti mov lock xor mov pop cli test and fcmovb mov aam inc xchg mov (bad) mov push xchg imul das adc and sti aas jecxz xor jp es mov shrb push xchg push dec jne mov test fsubrl in das in xor mov ret sbb and push (bad) (bad) icebp sub add sbb in jo xor ja cmp inc (bad) xor cs pop pop fwait outsb jge lods mov loope and stos test (bad) push mov xor xor jae,pn mov pop sbb xor jo cmpb mov cwtl jmp jg or movsb mov mov and xor out push pop test shrb ljmp pop or daa cmpsb xchg xor mov call scas je cli sub outsb cld pop mov dec xor mov cwtl ljmp lods sub xchg dec xor fsubs or or ret movsb dec in clc jo dec js je (bad) mov xchg cmp aam mov hlt dec hlt or mov aam frstor out les push lods xchg lahf stos cli ret pop aaa hlt dec sub std mov jno and add and mov stc aas push xchg repz imul hlt mov sbb mov inc mov or mov sahf es inc adc gs add fdivs cmpsl scas xlat pop lock popa mov inc inc pop sub cli sbb jl jne xor (bad) test cltd xchg movsb pop in frstor sub aad pusha xchg sub rcrb jge jmp stc and popl in into loop sbb clc rol sbb test pop movsb xor adc xchg jne iret inc adc repz iret sbb xor mov movsb repnz push out lret push mov jo jae mov icebp push cs xchg js sbbb mov stos xor mov enter mov (bad) inc hlt xor bound jno cmp or insl call fcoml or xor xor in notb jecxz imul dec mov mov sub mov and dec xor jbe and popa shlx aaa sub sub loop (bad) aaa and ret (bad) (bad) hlt xor dec inc ret (bad) pop push jo jae add ficompl jg xor xor mov test out sub mov mov js mov jle aam outsb jge cmp notb mov add pop mov jg popf jno jnp mov xor sub aas inc or mov jl pop mov cmp cmp mov xor mov cmp sub in test aaa cmp mov xor lock add add repnz shrb scas jae mov xor aam mov adc sub stos dec in jno adc or int3 insl inc and ds rolb lods add add and iret and sbb lock mov push or clc mov push or decb lret xchg je shrl mov shrb mul dec movsl les xor or mov jno sub or loop shrl xor mov or (bad) lcall adc pushl or testb inc sbb push je insl cld ret imulb data16 fldt or out lods inc (bad) adc pushaw bound adc cmp adc adc jno add sbb sbb push mull sbb mov aaa in jecxz subb lods jecxz subb lods jecxz andb sub or (bad) repnz xchg (bad) xchg adc xor fimull xlat xor fistp cmovp mov and mov lock jae,pn sub cmp mov mov push pop int fwait in sub notl stos xor lock icebp outsb inc adc xor sub ja mov out or xor repz fidivrl mov fsubl arpl call popf aam icebp aaa xor push sti adc subl dec pusha ret lret push jecxz cmp (bad) mov insb sbb or xchg lods aaa mov fsub xor aas jno scas xlat dec repz out pop xchg idiv fidivl xchg push in cmp scas arpl and loopne lcall cmp sub hlt ja jle and je ds ret insb mov and adc iret push mov and cli sbb sarl dec ljmp enter cmp and jmp jae lahf xor pusha adc push test xchg sub cli sbb inc push and and jecxz sub test sub push pusha sub and mov stos in jbe in pop mov lock inc loop repnz cmp and repnz mov nop hlt cmpsl push mov lret inc aam insl sbb fnsave hlt nop push jp xchg cmpsl xchg mov out test popa out mulb lods adc std sub adc xor or dec xor pushf lock jne repnz mov std jb pop and xor outsl ret mov add push mov in or push adc hlt fbstp inc clc adc xchg sbb xor jno int3 aam jmp insl lods push sub cmp icebp (bad) xor mov paddw (bad) push lock inc aaa repz hlt nop std adc shll loope not hlt dec add rcrb in xor xor rol daa dec mov sbb xorb jb xor fbstp aas rcll mov mov in and aam ss sahf push pusha addr16 cli stos rorl mov lahf xor xchg inc adc mov ds (bad) divb call addl imul aad insb jle and pop xor and adc or mov mull je fild nop movsb lahf rorl push dec pop lds jecxz loop sbb fs mov call addr16 sbbb adc mov and cltd call mov imulb scas xor jecxz xor mov and repz addr16 xor sub mov xor cmp andb stos rclb movsb ret xor aam rcll in je sti cmpsb sub pop xor pop test cmp jle lods int3 lods and cmp andl outsb inc imul cli rolb cld in loop jae pop mov mov pop arpl jae cmc push pop sbb sbb xor popa adc in scas mov jbe test mov cmp (bad) jb sti outsb out loopne jo and mov adc adc jno jge ljmp int3 jmp shlb push leave test mov cmp sbb inc inc popa lods xchg (bad) push mov pusha and cli push in divb xor inc cmp jb pop jbe push in add in sub jecxz cmpsb (bad) (bad) xor adc mov aaa pop test std ja inc or cmc sarl add test inc push addl mov repz (bad) (bad) push mov mov inc cli dec std into call mov xor out movups loop (bad) mov cli xchg add ja cmp int3 cli mov out mov outsl inc pop and xor inc sub sbb push fs andb outsb pop sub pop repz decb lret dec inc add xchg mov ret test (bad) mov mov arpl stos test sti push pop ret add push push repnz sub lods mov mov adc and cmc xchg aad arpl jp mov loop pop adc je cwtl mov movsb xor pop push mov add clc xor lds aam cmpsb fwait push call dec and mov arpl dec je mov pop jg popf jle repnz sub cwtl mov into jge ss and std xor fnstenv xor jnp xor lds mov pop mov or out and rcll push or add (bad) lods repz hlt push loope sub repnz push mov gs clc cmp sub jecxz out sti xor addr16 repz push xor and into sbb add pushf ds push insb pop push lods pop cpuid out cmp sub fbld push test cwtl test addb lock frstor push aaa dec mov sbb (bad) int lods xchg mov mov cltd jp daa repz adc mov xchg sbb and dec xor dec xor test divb mov add sub mov xor imul (bad) xchg and adc xor adc pushf outsl das sub in jnp pop mov cli push mov (bad) sbb daa jge adc cmc xor mov sub adc outsb xchg inc inc jmp mov ljmp add xor xor cld xchg xchg sub std add fldl adc test lcall leave mov dec sub call dec int3 scas pop in xor dec sbb or insb movsl xor aaa fbld ja xchg cmp cmp (bad) scas pop imul sub or adc mov xor int pop add ss jmp jp cmp dec adc stos fs ljmp add inc pop roll cmc push jae and fsubs fbstp cmpsl sub loop outsl repz popf and outsl aam (bad) adc shl fwait mov jb adc cwtl jmp imul lret ja push push inc xor loope cmp push jno ficomp or mov jle cli cmp cmp xor xadd mov push mov gs out aaa repnz push lret or ret inc scas adc repz pusha fs shrl inc sub add (bad) mov sbb and mov shrb stos cli les sub push lods inc decl cmp mov rcrb movsl inc rorb sbb adc je clc aaa mov popf ss divl jns fdivs and test sub xor lret das xchg hlt shll xchg dec fstps pop les outsl xchg jl xchg add inc in jmp lods add in int3 dec mov mov ja cmc out test jo incb xchg imul xor daa or scas aaa sbb adc and setnp out push (bad) lahf mov movsl (bad) pusha adc mov xor clc out dec das (bad) cmp clc push inc xchg test pop sub icebp dec mov pop sub call aas out call hlt cli fnclex aad sub adc push enter lods mov movsb stos outsb jo lea push ljmp imull in (bad) js lods and into scas pop jle rcrl stos push mov mov lods push popf xor cli in xor xchg sub aam sti movsb xor sub stos or (bad) hlt ret mov scas push xor lods pusha add lods lods nop mov sbb lods mov int3 cli xchg sbb inc negb cli hlt ficoml mov push loope (bad) push mov dec lods daa out rcrb mull movsl and mov mov push (bad) aam outsb add pushf nop mov sub loop scas data16 imul (bad) pop mov hlt dec xchg sub jmp adc xor gs lea or and (bad) pushf nop sub xorl sub sbb sahf adc call sub int mov (bad) insb lock loop cs outsb call mov and lock in movsb inc loopne pavgb mov adc sbb cli ja insl mov xor xchg jp mov mov sub pop sbb insb mov pop mov aaa out push sbb imul mov mov pop daa lods mov sub lcall push xor mov sbb fnsave push daa imul ror loop push xchg pop das movsl lcall out cmp pop jge jne repnz and outsl jno mov xlat sub jno and outsb mov hlt hlt cli adc out sbb popa inc jl sti mov dec and push fimul adc sbb sub inc lods and dec pushf dec and sbb and icebp mov and xor sub loop ja dec xor xorl add cs stos das addr16 bound in jmp and repz out xor push movsb in fs cli xlat xor and and rcrl lods and fcomip push add (bad) (bad) call mov repz inc out test pushf and in sub push xor jle jbe fisub in mov and cli sub call mov push cli ret aam (bad) out div movsb cmp push mov mov mov insl fildll mov sbb in (bad) mov sub ret shr mov cli (bad) notb test popf xor fbstp xlat nop stc sahf jae lods push loope (bad) std loop sbb inc fbld sub jns xor hlt and sbb mov cltd or dec outsb inc xor fdivrl in jmp mov popa mov adc mov repz push je xor (bad) xor and xchg inc sub xor push xor push les insl xor aas daa xorl push sbb ss repnz in out imul in sub add push movsl scas in xchg mov xlat fwait adc lcall mov push jae jb in in jmp pop push aam inc stos test aas aas fsub xor ljmp loope push dec push fisub sbb popf cmpsl jecxz in mov adc cli jo jmp aam lcall xor mov xor lret push (bad) pusha in mov cmpsl sbb add or nop call mov (bad) jae cli jmp loop mov movsl ss rcr dec xorb mov fwait pushl xchg adc in loop or lcall mov sbb scas mov inc ret adc loopne loope psubd lret addr16 add std ss imul xchg ja adc scas push jg dec sbb in mov cld pop das mov jecxz std sbb lds (bad) mov aaa fidivl cmp aam cli and mov lods mov and mov loop xor cli inc fs clc fst cmp (bad) aas test jg pop cli shr sub push dec sbb mov int fcoml inc sub xchg xor bound mov adc cld clc jo xor jne repnz fcoms lods icebp xchg pop xor sub rcrl add sub mov mov cwtl mov push adc in mov shll mov mov icebp daa or das adc aaa mov and lcall add stos mov js adc mov bsr stc ljmp xor mov cli jl (bad) ss sarb inc push pop lock movsl in js xor or outsl aaa sub jns shl jmp and inc andb into jns push (bad) xlat (bad) pop add xlat add fs fs push sbbb mov out adc (bad) inc mov pop mov sbb xor cwtl dec cmp outsb push mov std and out xor divb xchg scas push adc das jecxz sarb xor insb or (bad) das xchg dec mov adc imul lret pop nop (bad) pop mov lcall mov add aaa outsb shrb sub aaa sub mov adc cld adc push in xlat pop xor movsb add iret add xlat (bad) loopne sar xor add roll lret add push push shll clc cmp mov lcall test in push loop (bad) mov ljmp add shlb sub push pop aam xchg mov into bound push mov inc pop or mov lods movsb loopne movsb stc mov cld in and int3 jns mov imul ret mov sub out in sarb stos addr16 inc inc in cld in pop stos in inc jle popa mov clc dec xchg hlt cmpsl sbb mov cli mov stc and push daa lods in sub adc (bad) int bound mov add and loop push clc jl out xor scas cwtl xchg inc add loop nop (bad) loope jecxz sub and popa jno lcall orb ljmp insb jg ffreep mov jb (bad) icebp sub xchg pop loopne pusha shl cmpsl fdivrs and mov sbb jbe aam cwtl jns jb mov das ljmp lock (bad) popa ss lods add rcl js,pt add in sbb pop sub xor xchg pusha dec sbb adc test mov sbb gs fsubp pop hlt xor xor gs sbbb sbb sarb movsl mov mov movsb mov hlt xor mov das mov nop lods adc lahf sbb mov movsl test je aam into sbb pop aam push push pushf loopne xchg push lock push mov sbb loopne push loope or insb inc xor ret ret inc and sub mov sub xlat and xchg in sbb test lcall mov outsb test sub fistpll data16 mov xor icebp out mov mov jo jo push xlat pop mov movsb fcompl sbb adc xlat ja jne cmp sbb pop cli out jno cmp push fsubrp push sti jmp add xor in mov lea mov je ret int3 adc pusha mov lock mov sub fadd mov sti dec inc jne cmp push fwait xchg ja push mov dec push leave sti add ret adc imul (bad) (bad) pop decl cs mov scas pop pop mov stos xchg fdivl cmpsb cmc or imulb jno insl rcll dec jbe scas rolb adc sar inc hlt adcl xchg popf mov xor dec mov movsb mov or push push and adc mov adc jo daa mov inc loop xchg fnsave push sbb popf or popa iret or fs sbb call test and popf mov aaa scas cmp xorb repnz jne je out loop insw rol push ficom imul aam leave cmp xor in fbstp pop mov mov mov clc test mov pop jns fsts lcall stos pop cmc xchg int mov dec mov fistpl movsb stos into in lds jle (bad) dec jo add jno fstl insl mull shll adc and mov mov arpl mov std xchg and (bad) mov push xorl sbb fs in jnp and pop xor xchg cmp repnz push clc jecxz mov test lcall stos outsl sbb ror or push in nop sbb or sbb jo xacquire xor (bad) mov (bad) xor dec fs and das pushf xor and in mov outsb out and xchg sub lods push stos (bad) mov or mov in and insb sub sub cld jno push int3 loop xor decb pop pop dec lret jnp cli in inc sub int3 enter xchg int3 sbb addr16 mov jg mov inc outsb and ss rcl xchg mov cmp mov (bad) clc stos inc jne inc inc lret test repz cmp das arpl sahf int jb out jg push mov inc data16 lods sub ljmp out sub adc jmp aaa cmp jno mov repz dec and sub sub lcall rcr ja cmp xchg loope call movsl push fisttpl sub sbb mov (bad) hlt leave fcomps clc mov out mov ret pop jo lret or in push lahf std push mov fbstp sbb push mov xor hlt hlt or mov cmp and mov movsl xor std adc push daa xchg push cld ss mov mov pop fnstenv lret aad aaa jge (bad) enter clc arpl ret js xor in jge mov adc jb pop sahf and addr16 adc lods shll sbb add (bad) loop ds repz cmc add rep jne ds fs cmp stc sub fiadd mov mov mov push and stc jle repz mov je xlat adc jb pop hlt jg std sub mov in loopne adc xchg insb test mov dec loop mov or popa pop or mov jl test (bad) (bad) jl data16 sub xor stos dec jmp jbe sub mov popa fwait sub (bad) jno mov cli outsl scas mov cld mov pop outsl pop popa nop daa das movsl xor push push lods call pshufw in jg arpl pusha out (bad) xor outsl push pop pandn cmp mov dec je jb je cli popf das pop fs (bad) xor aad shrb stos test pop shl outsb jecxz pop add sub (bad) mov and in loopne jb addr16 std rcll iret add xor cli movsb rorl idiv xor xchg fs in push adc add or inc mov in xlat xor dec push mov xor into cs push jo cmp sahf xor out xlat sbb mov mov xchg cmp dec stc xlat xor mov add or xor (bad) cmpsb je mov or imul pop popf pop adcl add data16 lret mov sub call cli xor subl jmp in scas aam sub scas and push rcl xor hlt nop add jo rcl mov clc dec push or push js cli test xchg inc jbe rcll imul fidivl inc hlt adc aam imul sbb and sub cmp push je inc rcr xor xor scas loopne aas aad idivl sub xlat ret and add sarl jmp cmpl add jl xor out orb add sbb les and or xor in jecxz or lock lahf mov push xor mull scas sub mov jne mov xor sbb mov push lret mov cmc jne sbb xor adc lock cmp mov add xor incb loopne (bad) sbb mov cli lret and mov mov notb popl sbb xor out repnz in sub test aas adc push std rorb inc and je clc xor sbb xchg inc sub inc sahf pop xchg aas (bad) adc lods imul sbb jae aaa out pushf aas daa mov sub stos mov stos sub std or repz jmp lds mov sub fs xlat cmpsb aam xchg cmc xchg loop mov add addr16 push icebp movsl xor and hlt mov out int mov add mov idiv xlat mov shrl push popf jecxz dec pop xchg mov mov into mov push sbb shll pop and push jae adc fisttpl dec shl sub sub rolb jne sbb stos cmp lods xchg mov movsb adc jbe imul push movsb jno mov mov and xchg jne movsl push adc pushl or mov push insb repnz sbb jg outsb test jno xadd (bad) aaa pop adc xlat ljmp mov mov rorl adc fdivl out push mov cmpsl jle shld and loop xor jb xor xor and gs jecxz pop push je push fs pop pusha std mov lahf imul pop add sub cmp or popf mov insb jo test dec popf xchg loop fst inc sbb pop repnz lret cmp (bad) sub inc sub insl mov mov adc xor std mov pop jle nop iret or jge test (bad) fldt jmp aaa cmpsl ss clc nop push mov adc js xor (bad) nop mov ss mov sahf jl aaa xchg pusha push mov and dec cli int mov stos movsb (bad) in test fdivrs add cmpsl mov aad inc lock cmp xor cli pop aam lcall arpl sbb pop stos and out (bad) adc xor loope dec lods add push push or add orb push mov jecxz push dec dec sbb or push lods repnz pop (bad) or sbb ss ljmp sbb pop jmp push and aas pop push das fbld js pop add mov xchg imul mov push lods lret cmp sub push fbld iret xchg mov push xor lods cmc sbb or (bad) mov cbtw xor out lret inc js xor adc dec xor mov mov sbb or adcl or and repz incl repnz push cmc das mov jl test cmp jne (bad) nop fdivl (bad) mov lret cld xor jmp cs mov mov iret sub push cwtl push fadds and inc push imul xor ja iret add sti cld jo and inc popa insb aam in stos call cmp or sub out in mov xor ret addr16 sub ljmp pop das fist nop into aaa sar cltd adc add lret faddl xchg scas jmp loop adc enter xchg push bnd sti sub mov int in (bad) repnz mov insl fsubp jo xchg cmpsl push jnp pop out adc push sub std xchg adc mov or std dec cmpsb sub (bad) imul jo or subl rorl cmp std out sbb xor jae into and insl inc or mov imul mov stos jbe aam rcl call xrelease add jae es inc jbe mov mov into xor xchg mov push adc out sbb nop rclb (bad) negb gs adc pop inc cwtl mov aaa data16 ret fsubs enter push sub jo aam sbb pusha bound lret and das xor in jnp inc cs in dec sti lock and mov rcrl push mov sub iret test into and mov leave (bad) into cld ja adc xlat mov mov repz (bad) popa lahf lods shrl fstpl jle fwait out movsb cmp inc inc push inc mov add adc sarb xchg les xchg je xor lret push mov mov stc cli or insl pushf lcall jmp ss lea lea iret std xor xor add mov (bad) mov adc mov aaa enter pop xor xor cmpsl sub pop jae popa fisubr addr16 and lock sbb pop mov ds sbbb add rorl and fsts incl mov call or pop int es push push mov lods (bad) insl jle int int3 mov (bad) fbld andl ret cmpsl pusha repz imul sbb pop or inc push sarb jns jns roll sbb lahf jle cmp xor fucomip aas (bad) adc xchg mov inc out push sub lods clc xor xor clc and pushf add mov outsl bound (bad) lret cmpsl out pusha std cmp ljmp ja xor movsb mov std cmpsb xchg sub inc push adc insb mov outsb out xor lret mov outsb vpavgw out mov cltd adc lcall add mov mov rclb daa jb sbb sub cmpsb jns sbb call mov cli and repz clc pcmpeqd (bad) data16 lahf je xor mov mov in lods mov cli (bad) imul stos cltd mov mov adc adc aam lahf jne scas aaa jl xchg pop xchg (bad) fidiv outsb notl clc or movsl in jecxz lcall mov and js lods xchg mov out push sub jno cli mov jno addr16 insb lahf inc sbb lret push loopne mov push pop jp xor roll cli ret and mov jnp out add sub mov sbb mov xor xor outsl add aam stc xor and lret imul rep lods mov add jnp jge add mov mov push jb mov mov add aaa outsb pushf cwtl clc (bad) neg fiadd cmp and mov (bad) aaa xor in adc adc cli sub mov push loopne jo movsb repnz insb mov pop (bad) mov add jb int3 lret fbld jle mov or push sbb push in mov imul sbb repnz lcall (bad) mov sbb dec adc lods inc movsb mov mov push imul xchg sbb lock aam aad call xchg nop pop pop fcomip jns cmovnp (bad) testb sti push xor push jns repnz cwtl mov or xor mov mov mov jne push pop xchg jno mov inc mov cmp mov loope stos add out adc repz cmpsb daa cld sub and sbb cmp cli lret cmp jb adc stc and jmp sti add mov sub cmp (bad) adc icebp lret add std jae sbb push sub mov mov lds insb in mov add inc bound jb xbegin inc cmc pushf gs rolb jl in out movsb mov mov mov lock jmp out bound sub nop ret mov sbb dec lods sbb jb psllq jecxz jp mov rcll fadds movsl inc xchg stos dec in mov inc in dec imul icebp das rcll sbb and and pop sub jns stos jne das sub mov push icebp xchg das aam push test fcompl outsb jb mov jb add shll xor pop dec shr lea push adc and cli jmp ds mov cld (bad) xor push test push repz sub stos push dec loop adc push subl ret cmp and mov mov cmpsb sbb fnstenv sbb les stos or sub mov imul ljmp jnp xchg rcll out sahf xchg pop pushf xor mov roll int mov cmp fs lock xor mov push push sbb movsb out addr16 cmpsb lret mov cli adc cmp aam repz and mov inc push adc adc insl addr16 pop aas test sub lods pop jmp cmp hlt mov xor adc xchg jl das sbb nop and mov adc je,pt adc not mov test sub movsl dec cmp cwtl jae sub lods int3 shr rcll push jmp pop cmp pop outsl fneni(8087 je lock inc and cwtl jl mov cmp or jge adc push lea movsl js aam cli mov sub push gs or push cmp in sbb arpl or mov inc shll mov lcall ret shr out xchg and inc or mulb movsb pushf test clc pop fs jmp jg push and jae mov push in adc lds (bad) movsl mov cmp and mov jb lds mov (bad) out inc sbb adc stos popf mov cli or daa pusha outsl and roll hlt das sbb pop pop xchg repnz jo jge xchg dec push jno inc mov cmp and scas rcrb sbb and xchg xchg jo jp clc or das jae jecxz adc mov inc sbb test std hlt dec lret sub repnz xor andl push mov and mov and add mov jecxz xor push ret mov sbb cmc inc and imul sbb stos xor add dec ret jecxz inc xor and sarb fnsave fbld sbb and lret jae arpl aam jno in rclb outsb mov inc push pop add mov insb fnstenv push mov popf cmp adc jb mov xor sub in and dec adc and xchg add sti in adc add and cli insl std repnz int3 fcoml loop out or push mov aaa fbstp cmp int mov call jge sbb insl pop mov test mov jmp xor scas les jg popa clc out adc ljmp in ret repz xor ljmp add adc dec and mov mov test sub xor mov cli sub xor push lcall mov pusha aam bound pop lock (bad) lea inc fwait out jne mov cmp mov mov cli mov das sub sti push inc mov (bad) and xchg imul sbb repnz mov cmc mov sar dec loope ja jnp std cli test inc lods cmp sub mov dec lock les mov clc adc adc das and repz jg cmp (bad) cli sub xor pushf cmp rcll sbb ja mov sti pushf test cltd in aam add daa ucomiss repz pop jno and inc jge cwtl mov mov jbe ret das lcall and repz add in jle xlat pop dec xor jge addr16 or jne sub in decl popf in cmp and push cmpl adc insb xor inc add xchg ret xor out push pop movsl jge test and or adc or adc dec lahf cvtpi2ps inc iret jnp int (bad) jmp (bad) xchg bound out adc pop jae inc xor je outsb inc lods cwtl jns add pop xor (bad) rol mov loop iret sahf and add aad gs adc cli mov addl adc inc or mov mov dec jecxz rorl mov icebp xor push jle xor outsb inc jb sub ret popf aam sbb or test jne in je and outsb inc push mov icebp popf sbb xchg xchg and call cmp aam xor xor shl test xchg xor in push sub nop adc xchg loopne push lcall js in shl mov sarb addr16 pop frndint test and adc int or outsl inc sbb xchg inc dec dec add inc rcrl xor jmp cld pop xchg dec rorb and xorb data16 jl xor push (bad) icebp daa mov (bad) (bad) loopne call ds cmp test dec testb mov icebp push xor das cli vpunpckhwd mov stc ljmp mov dec lods mov loopne lret shlb pusha push jmp sbb inc mov cmpl xchg lea jno xchg xor or shll jno xor inc cmp pop arpl test fild xor arpl sti cmpsl sub (bad) jl inc into mov xor aam adc fbld ljmp sbb cli push stos mov mov stos mov insb mov clc out pop daa mov mov (bad) stos push ja and shlb add inc arpl dec jno repz and and into cmc repnz aad pusha xor xchg inc cli shrb ss push jo (bad) adc pusha je dec mov add dec rcrb aas add arpl sbb scas xor adc add pop jb cmp mov clc jns es sub lock push je inc xchg mov pop or cmp (bad) repz iret cmp cmp xor aas xchg repz xor dec pop or sub fbstp imul shrb adc aaa cli mov sbb insl xor orb lret cmp mov fsubs es jo popf sub pop fsubrl jnp xor xlat sarb and xchg xor scas cmpsb pop xor lods pushf adc sbb movsl mov frstor add clc call movsl xchg (bad) repz call add fistpl mov and cmp stc jg out fildl sbb mov mov ja aaa imul scas nop and cmc fsubs divb push ds loope fildl jns jle xchg cli inc push push pushf and sbb push dec lock push aad scas mov js ret sbb icebp nop mov pop ret repnz or aam jle push mov xor add push cmp mov movsl stos (bad) sbb fdivrl fiadd daa cmp inc fcmovb fild hlt and lea xchg xor adc inc jp xor call out aas idiv xor dec andl les mov scas je jno push bound movsb push jge adc notb inc cmp and es jge (bad) insb aam idivb mov shll (bad) mov xor xor lret mov icebp dec data16 xchg je add cmpsb (bad) mov push mov in (bad) cmp adc decl push shrb cmp xor rorb outsb test decb sbbl jmp pop xchg in xor loopne or jb,pt mov inc jns jbe sbb or je xor adc call cld mov mov xchg mov shlb cld pop sub cmp leave and aas ds cld jnp and shrl shrb xor cmp icebp shrb sub sbb loope scas jge jp jecxz jmp fnstsw sub mov ljmp mulb xor dec aaa mov jmp xor stos inc add in mov ret ror test sbb cmp repnz sub jp xor pop in icebp es xchg jo jmp je xor sahf mov loopne xchg (bad) repnz arpl and or dec xchg sub jge fs mov and jle stos xor mov cmp or xor add xchg cmp sbb stos push in jae stc loopne and addr16 out dec mov lods push repz lahf adc enter and xchg insl pop or dec xchg xchg fs daa popa divl in dec cmpsl movsl sar fildll xchg sub test mov lahf cmp cwtl outsb or pop sub cmp dec enter and sbb in cmp int psrld mov mov xor int3 mov (bad) push push push (bad) repnz sub xor cmp and xchg jp,pn jecxz repz sub cmove loopne rol scas mov popl sbb add mov addl push jecxz cmpsb fs add call jmp les adc (bad) ljmp pushf pop mov rcll sbb jle pop fs push les in and stc inc mov adc mov (bad) xor add inc and and adc xor sbb fild mov jne call insl inc mov mov outsl jo sub and imul rclb sub add dec adc pop and inc and in and push (bad) sub xchg loopne xorb xor fstpl or mov jne xor inc aaa jno out jg mov pushf jecxz je (bad) loopne push xchg inc and adc outsb push pop sub push gs dec push jb enter mov sbb (bad) xchg test lods stos sub jecxz mov ja adc sti popa mov pop mov inc push sahf out push hlt jns cmp sahf sub popa xor cmp test test (bad) sti ss stos and xor bound mov push mov addr16 jae jo sub lock mov in in lea sub pop in (bad) adc fldcw in jl test cltd test and cli xchg cld mov movsb lods inc stos (bad) mov lds xchg jno shrl lar pop bound mov jge cmp push mov movsl jg jns aam cmc sahf fisttp outsb out fneni(8087 xor adc bound and sbb or je push cli xor sahf and mov sbbb push shlb mov aad xor (bad) ss in orl xorl mov and mov jecxz sub in aaa std movsb loope mov fstps repz ja mov xchg pusha loop adc outsb fnsave cmpl inc pop cmp or jns sbb clc aaa pusha or sub jge loope ja inc xor (bad) mov pop cwtl cli xor pop sub out sub (bad) in mov cmp pop push ljmp repnz push jmp mull mov mov cli scas pop add cmpsb bound out jno das dec sbb cmp stos sub and lods lds loope adc ljmp and ljmp js,pn and or cmp imul insb sbb dec lcall arpl fcomps and cwtl mov pop (bad) loope jno loop popf nop mov mov push mov and fcmovnu xchg mov xchg cli jae insb adc bnd jno push in mov cmp and sub mov jbe fbstp pop addr16 movsl push ljmp rcrb imul (bad) xor out mov movsb loopne xor pop ret xchg jb adc insb dec ds add pop mov inc lret insl std sub lret ljmp pushf cmp dec push notb test outsl jp incb xor insl clc jns enter test inc push fs fidiv pop lods mov cwtl sbb pop pop xchg xor push sbb jmp in daa out repnz add xor repz fimull lea xor cmp (bad) repz mov push and call je xor ficoml push lds mov add cmp jae adc mov dec (bad) dec mov and stos inc test inc icebp xor pusha dec mov lret (bad) push mov ljmp imul cli push or fisub inc xor sub push sub test push ret das xor cmp test inc jmp mov cmp jae add sub push xor dec dec adc cs cld sbbl sub pop mov lret outsl mov stc pushf pushf mov fistpll and pop mov mov lock test int3 adc enter pop add mov push (bad) flds dec ret add stos sbb sub gs inc fs dec (bad) mov ror ds jns push (bad) leave bound aaa add dec test inc rcr stc pop xchg inc das and mov xchg dec fildl jecxz test ss lods and mov mov loopne xorb out xor in loope adc dec xor adc push repz jno scas jp jno sub sub popa xor xor push repnz shrl jns xor xor cs and outsl and jo and inc xor and inc xchg and dec add fs cs in dec push lock cs xor sbb push pop sbb push sbb xchg pop push addr16 mov jae iret adc jb sbb lods outsl notb xor xchg movsb adc in adc adc notb repnz or in or jp or inc jnp or jle repnz repz pop and leave xchg inc sti xor mov mov or outsb out aaa mov sub mov jecxz popf sbb mov out lahf icebp sbb repz xor sub mov cwtl and out test ss adc sub mov push fbstp hlt dec lret xchg adc xor cmp lcall shll xorl xor jns les sbb aas dec xor cmp std and loope pop cmp repnz pusha cmp test xor jae mov lods pop and add add xlat xor add ss xor xchg test xor pop bnd push pop xor and jae add repnz sbb adc push popa push xor stos icebp sbb repnz push dec test dec mov aas les ficomp sub lret lock jns mov mov pop jmp pop test pop sub xor std fildll sub ds jno xor cmp shl jle mov les in push mov mov (bad) cmc and xor mov jns movsl jl inc inc jae lcall dec push int addr16 cmp sahf movsb cld aas cmp adc xchg (bad) fcom rorl mov loop push jmp fiaddl adc jae aas push cmpsl sub push pusha lret cmp mov cld add add repz xchg ficoml adc loope loopne bound bound sti sbb fbld cmp sbb js stos bound jecxz push fild add xor js sub dec cmp outsb aas popf data16 and and imul sbb ss push pop test inc iret scas pop mov mov pop ret or add fidivl out mov pop pop pop outsl scas and cmp (bad) imulb int3 mulb leave xchg pop push in (bad) cmc in ss mov cli jp xchg push insl je shl cld cmp scas adc xchg cmc or fildll xor sbb sbb test add rclb adc jmp sub xor mov out jb in adc push popf add dec push fildl daa pushf rolb shl rcl loope add cmp ret out mov mov mov add jmp and pushf jle cmp in (bad) das movsb repz test jge xchg cmpsl out and xchg hlt mov sub outsb add stc incb pop xor pop repz or sarl clc or aaa xchg lcall xchg loop xchg pop cli imul jno and mull and js add xor sbb fbld rorb popf dec fadd xor hlt xor xor es inc or xchg xchg push adc mov cmpsb push adc mov push cmpsl and mov xor test mov repz mov jmp repz and cmp add dec out adc es mov fbstp mov testl jmp pop xor mov (bad) mov clc lds popa or mov ss add pop mov mov mov pop and jno call idivb gs sub shrb pop hlt cmp adc rolb dec push adc sbb xor mov sbb adc outsl push mov mov sarl push loopne (bad) jl movsb xchg xchg sbb mov mov lea push xor jmp inc add dec xchg fstpt sub fcoml test hlt mov stos jb es mov addr16 xor pop jo sets dec aaa lret jbe scas insb stos cmpsb lods fs and jecxz decl out daa inc sub push out adc aaa add adc repz popa out cmc push imul scas lahf xchg movsb (bad) repnz jne adc imul pop sahf jmp inc mov stc test imul mov aam xor adc out int3 and sbb or jmp cmpsb neg std jo int3 and cmc jo repnz pop jg std sub cli mov loopne shll push mov pop lea je push mov mov xor int3 std cld adcb int3 icebp jbe pop fstpt dec out inc js pop jmp rorl dec and jmp pusha aaa out and loopne sbb cmpsl or lret add sbb and out mov push jp stos sub negb jg add outsb inc shrb sub xor js lahf test es or and pop xor fild sbb cli push movsb aaa icebp lods add cmp sbb add xlat xor test adc in mov jmp sub sbb push xchg std mov cli mov sbb test xor lods iret mov xor mov push xchg roll push lods ljmp and js ljmp pusha jmp jp push cli adcb jl popa data16 test (bad) repz jne xchg mov ret popa jnp cmp je jge (bad) jbe movsb outsb js fwait sub add xchg lock test mov dec repz in cld or inc out adc mov clts es movsl mov hlt cli pop shrd pusha dec cwtl xor addr16 (bad) movsb std pusha jl jl stc jg jb pop xor jns jge fnstenv (bad) sub xchg pop repnz repz cli fwait mov in call mov aam inc pop pushf enter adc dec xor jecxz rclb jl and cli ret push inc xchg cmp iret dec pop jmp cmp fsubl dec cli movsl xchg pusha jo repnz mov pop out fidivl inc jle xor xor sub cmp jo and cmp ja out lret adc and mov andl and (bad) jge and popa inc dec ret sub sti xchg mov inc push xor sub fimull jecxz rep xchg fucomip pop cmpsb or call lock push push jl mov and and xor mov lcall (bad) popa add and jmp idivb bound repnz mov fwait hlt mov out cmp adc movsb cli cld aas lods (bad) adc or subb mov jecxz pushf mulb mov mov loopne stos cmp insb shrl mov mov sub out xchg insl imul add aad subl std jg iret xchg mov jl sub lret jo mov mov adc sub testb lea xor aad inc icebp adc or mov shrb icebp outsb sub mov xchg add mov aam lock and jnp popf mov fidivl add bnd aad sub mov out pop sub mov aaa cli scas dec and daa sbb out and lahf (bad) ss jno les push and rcl sub pop repz jg sub and push and test (bad) cs sub test mov imul std pop in jle fwait jbe icebp cmpsb adc pop addr16 divl pop das mov adc pop ljmp mov xchg sub mov into scas sub sbb ljmp lret hlt xor sarl pop call aad pop aad insl xor xor fs in jmp and xchg sub mov loope pop fimul sub shrl lods cli (bad) fldl xchg es rcr shr jns cmpsl and mov xlat insl xchg inc dec mov xlat popa push in and les imul adc push int es and das out add icebp dec cli ss movsl je stos push add out and inc jbe dec jne jp test push xlat cs xchg cmp mov jns leave push cmp fs xchg rcrl test and pop mov sub aad mov enter out mov jo ljmp sub jl adc jmp out movsb sbb mov (bad) in mov jo sub aaa and shlb mov lret lods je inc and xchg xchg shll cwtl dec (bad) std subb stos cmp ja push lret pop cld push or and push xlat mov jb adc or and xor xchg aam mov out jo mov jl xchg movsb sub pusha mov stos add and cmp xor inc xchg xor sbb xchg fsubl into mov push and (bad) lods rclb and shlb mov mov pop xor shrb aaa and scas jae in xor mov jge and stos push cli xchg push std xor adc hlt test or cld insl adc and arpl mov movsb and cs ret hlt iret xchg bnd (bad) inc mov add adc movsb mov test xor mov dec mov out and sbb addr16 ss ret ss pusha cli shlb std ret sub int3 cmp cmp adc mov fld xor mov xchg iret ljmp cli clc lret scas jle jmp fidivrl shlb insl ret loopne test dec insb jl sbb or or int3 mov repnz pop test clc or pop fldenv lods sub jmp enter nop bnd (bad) mov jl sub into lea jne push call and les out sub inc and and ja sub push mov and ret ret push movsl cli out ljmp push leave push inc imul jbe push or pop push shr pop mov cltd or and adc sbb add pop ss js add (bad) imul sti cmp mov mov test lea jno lock repz add dec sub aad pop shlb aas sub xor jg or jbe roll mov loopne mov fdivl ret hlt fcoms cli fwait bound (bad) pop sti loope (bad) jo ss and add (bad) xor bound pop out mov mov mov hlt push test and int3 test cmpsl lcall pop out sbb fnstsw mov dec mov lcall pop xchg sub or adc out ss mov clc add or int data16 (bad) xor dec mov push jp jge lods jecxz mov push test push popa jle inc mov pop adc adc pop movsb sahf jg adc ja mov imul cmpl dec mov push or clc cwtl lods aam or subl mov cli mov aam xor cmpsb or mov push subl cld movsl push push in fnsave hlt xor shrl arpl mov sub sub ljmp jne and aaa aam pop addr16 mov mov cs movsl sbb push fs adc fnsave sub sub addr16 xor or repz lret mov lret ja dec (bad) lret imul inc (bad) inc push inc cmp mov jno scas hlt cmp jo add jge or in lods xlat imul loopne fisubr cs pop cli fsubp in stos out push je in ja je xchg and stos xchg jecxz sub and and hlt fs pop push adc or cmp gs cwtl jecxz sbb and sbb mov test jae and imul clc popf push mov xor mov jl and call xor in rcr cmp adc cmpsl inc sbb lcall outsb sbb add (bad) mov icebp movsl jbe decb cmp fildl sbb popa (bad) pmaxub dec pop addr16 adc rcll mov cmp cwtl jge popa inc cmp add aam repz out aam (bad) out or adc insl out in sti das pop mov mov sbb mov test mov and sbb clc out popf daa ljmp xchg mov js and in bound pop dec fldl fild or mov popf jmp pop push daa sub jno test mov mov dec mov xchg (bad) dec lcall cmp push movsl hlt sbb jbe adc jmp pusha dec stc ret out cli (bad) mov shr xor cmpb push lcall hlt cltd nop xor jmp cmp dec xor jge dec jg mov jb loop adc cli scas adc aas mov add cli insl inc test call xor arpl mulb jmp add sub sarb pop jb (bad) aas sbb sbb and sub cwtl mov inc loopne xor adc lahf div mov stos xor or xor xor xchg pop mov fmull (bad) and mov loopne xor icebp xor fcomip in xor mov cmc dec adc je push mov xlat pop and (bad) mov and sahf lahf pop repnz mov and nop mov lcall test notl sub in addb sbb test dec (bad) in mov sarb pop mov cli pop in mov cld imul ja (bad) cli int mov adc movsl inc repnz add lret les gs adc pop fnop insl test repnz add inc lods rcr cmpsl decl xchg mov and in lahf jae mov push out cmc cwtl sub xor push and inc dec add push adc shrl inc pop icebp jecxz sbb cli pushf test ret pop enter jmp or mov ss mov xchg adc dec loopne (bad) std push jg mov push xor cmp mov mov mov xchg mov loop int inc xchg xor mov (bad) jne or in andl pop jmp mov mov sbb inc mov (bad) fbld int3 adc iret adc jle mov xor loope lods push adc test pop xchg sub mov sub (bad) pop fst mov adc adc mov (bad) or adc orb mov mov insb mov outsl imul sub gs cli mov sbb or fsub xchg mov and out repnz adc jmp mov movsb cmc lahf jmp pop or add cmp lds push xlat sub adc int3 add cmc add mov repnz inc jb sbbb cmpsb fisubrl shll clc iret sbb xor aam and dec lret inc jb or jno test in cld and cltd and add in push xorl mov mov aaa pop imul mov and sti mov mov add cli dec adc add mov jge sub int3 test and jecxz pop xchg xchg imul or mov out jmp mov divb xor and jne add data16 xchg mov hlt rolb fisubr ds fsubs test pop (bad) sub and movsb dec (bad) mov js dec test pop lds add jae or repnz sub out sbb pushf sbb xlat hlt out or cmp or jge mov (bad) sbb outsb data16 sarl push xchg inc js mov in push mov mov xor mov add lahf jle jmp jl pop mov popl push call and cmc fbstp mov jge insb jl mov mov xor shrl mov dec mov xor lea jl imul hlt (bad) cmp sbb add add imul loopne mov lods and sbb js add cmp mov out popl or push jl lds sbb les scas cmc cltd fcompl mov inc xor test inc sbb cmp aas inc push fwait inc dec clc test ja popf test xor mov popf xchg test (bad) arpl xor psubd xor or adc mov out or testl xchg in cmc or jmp aaa jmp lods repz orb add add xor cld std sbb and adc cmc sbb cmp sub xchg icebp repnz hlt sahf cwtl pop rol sbb jg lret xor out rsqrtps fcompl ficomp dec cmpsl fwait mov cs stos pop (bad) repz fs loop xor es mov sub push inc gs clc xor jbe or lahf insb ss add xor insl outsb push jo xchg jo adc enter jmp mov jge leave sti cmp mov mov fsub ret int3 jmp sub fs and sub xor dec and imul movsl sbb daa pop fldt xor sbb sub mov dec push stc sub lahf jmp xor xchg js loop push jp pop lock and or loop repnz gs arpl sub mov push xor aam xor adc adc mov repz jae enter xchg sub jb fistl sbb push ficomp out mov out bound pushf or inc sub and push lahf data16 adc pop pusha push xlat test fstpt xorl xor mov xchg cmc lods push aas pop loop xor jo pusha lcall je mov cli cld fisttpl lods pop jmp mov mov mov push push movsl out or ljmp mov push sbb fsts sahf cmpsl jle lods pushf pop test popf je aad fildll arpl ja cmc push mov aad mov mov xchg movsl movl pushf cmp aas gs xlat sbb int leave movsl sub xor xchg mov mov sub xchg bound adc je sti xlat pop pop dec dec (bad) sub xchg sub cmc in cltd cmp adc mov ds cld add add ja popl cwtl ljmp mov cli mov jle ja mov out out add aam sub mov repz insl (bad) int3 jecxz mov leave stos call or rolb es mov lcall adc jmp xor pop movsb inc rorb inc xchg outsb (bad) incb and mov xor lret push pop aaa mov and pushf loopne call or outsb fdiv sub repnz mov cmp dec or adc pusha sub rclb je test scas movsl pop sub rcrb sbb sahf jo mov xor jo mov inc inc ja jns (bad) ret xor sub imul mov jecxz in cmpsb notl mov cmp adc adc imul pop lds and out push loopne push push loopne and dec lret mov and add xor mov push xchg popf sub aaa mov icebp stc push sbb fbstp fcoms mov jae lods mov cmp jb mov out leave pushl dec repnz xchg gs out imul jne aas adc and mov repz mov jbe mov xor add and shrl inc mov clc jb fnstsw in out jb rcrl xor out mov sbb inc jns test movswl jmp les imul jg mov fbstp cmp out (bad) xor and loope pop les adc imul push rorb add aam mov push adc xlat (bad) aaa ret cli sub les imul call and test loop stc mov adc push out test adc ror dec out mov sub mov jb imul ret stc mov fs mov shrl jne mov jp jno push add pop jmp jle (bad) mov mov and mov test into cmp and jae cli gs mov jecxz xchg clc or cmc jge adc pop notl jo jle addr16 pop cmpsb lret jb cmpsb movsb mov pop jmp (bad) mov bound mov mov push ds rol pop or pusha mov int not inc mov pop lahf jbe push pop or hlt test fbstp cmpw fsubr aaa fldln2 jo (bad) popa stc push pop shrb jecxz cmp push adc jb std cli ljmp xlat dec and lods ja mov test test pop enter in lods pushf nop push mov dec and sub push (bad) mov mov aad (bad) hlt sbb jmp sub xchg repz les cmpsl ljmp push lret insl or out sub into adc (bad) hlt cmp into cli stos aaa push popa je (bad) sahf lods sub js jecxz jae push xchg movsb lock xor in push adc pop int push inc xor mov jae xchg (bad) jge clc cmpsl pusha (bad) sti xor sbb xor dec cmpsb (bad) sub mov sti jo sbb cmpsb lods insb push add cwtl mov cmp mov jnp cwtl testl cltd add push repnz and repnz mov (bad) adc data16 test jae loop and and cmpsb std mov cmp nop jle out jo repz sbb cli mov popa xchg mov add mov pop mov mov cli sahf push cld xlat test sbb fidiv push mov pop clc mov jp test sub cmpsb lock test popf cwtl clc fistpll inc ret (bad) in (bad) xor int loope sti nop push fistp mov lcall cmp or je xchg add xor repz scas dec daa dec les sbb into push mov arpl push nop (bad) mov pop movsb dec xor cli fwait in subb cli (bad) adc idivb aaa cs lock mov xorl jae and mov psubsb and cmp push loope clc fsubl fst test (bad) dec fidivrl es push mov push fsub aas pop ficompl jg aaa shll int3 sub dec or repnz jg adc mov ret jb repz aam (bad) xor or incl sbb adc push jp mov loope xchg sahf dec inc fwait sub out jg scas es and wrmsr out adc push orb gs xchg sahf lock rclb lock pop xchg clc loope push daa push mov mov outsl inc dec popw jno jno pop adc pop or fldcw lret sub ja mov jmp js sub xor inc push mov mov xor jge jae push insb xchg cmc and mov xorl lock mov adc mov sub leave add add mov jo pushf fnstenv test daa dec lods push jp dec mov and aas mov push inc xor mov cmp sub cmpsb cli inc popf call add dec icebp bound and sbb cmpsl out pop mov or add jo pop daa dec test push and sbb (bad) mov rolb movsl icebp fidivl push jmp mov mov xor out sahf jae pushf sub subb sub mov xor leave rcl mull adc insb cmpsl in imul mul and aaa sub jmp test or mov in sub jbe arpl add ds sbb jo adc (bad) add enter xchg jmp pop data16 push jecxz push aam push xor js sbb push xor and test pusha ja xorb dec rdtsc in pop aam shlb push xchg bound push aam and ljmp xor mov or xchg or jnp movsb xlat push sbb adc div sub lods ret out cmpsl mov test lods imul cld outsb shrb gs inc popf xor stos jmp mov sub (bad) sti call outsb clc pop fimul fidivr bound lahf jl out jno insb adc clc jecxz cwtl cmpsb xlat or push mov sbb push jg icebp or std (bad) jmp cmpsl jo ss or mov (bad) mulb dec jmp mov sub dec andl mov cli scas jge sti cld stos lds mov cmpsb add orl mov hlt movsl push inc into or push cltd arpl cld out xor pushf sbb ret pop push lods pop mov push sub fidivr mov cmp dec mov in out loope jg insb call cmp xor outsb xor fs and inc mov mov lock data16 cmp or es dec movsl xchg pop push sarb fldl ror mov add push adc fldl sbb jg outsb add test es fmull loopne test add push adc iret lahf sub sbb ja gs adc mov adcb and stc inc push aam mov pop mov out sbb aaa and pop mov add push negl push les clc add xchg sub psubsw shll pop xor mov cmp jnp xor fistpll xchg sbb adc shlb jg pop pop add cwtl jecxz icebp rcr adc push out (bad) test into mov push push les xlat add repnz enter pop add int3 pop pop jb in fdivrs test into push push jb add cld xor divl sbb in sub jo (bad) lock dec or push jg icebp xor push hlt repnz leave hlt pop mov mov and pop ja mov dec icebp jae repnz mov cmc test push out jno aad mov sbb repnz and or lock repnz xor (bad) xor jg or jns jo sarl sub sub pop dec mov frstor mov ljmp add xor add jnp jg mov je xlat jns test lock cmpsl sub and and push sarb xor lods sub and mov movl repnz and adc adc fldcw push adc fwait xor jle push or (bad) aam pushf cwtl icebp jmp std fsubrl xor shl ror cmc shrb or je pop add inc adc dec mov test aad sub out jg pop adc shlb or cli dec inc push int mov mov js jns xor lock or popf cmp pop cmp sub sbb in mov mov inc or sbb out hlt sahf (bad) cmpsb shr jne push xor dec push repz adc (bad) adcb and bswap add push (bad) xor push xchg cmp hlt shr xor (bad) aaa inc in mov sub cli sbb lock pop xor xlat mov xor jno lock jo divl xor jne in lods xor imul stos xor imul sub scas outsl das out scas xor insl and and mov xor popa and mov mov es gs sbb fwait pop xor sbb cltd pop xor sbb lahf pop xor push fstpl adc cltd push dec fiaddl cwtl sub bound and sbb test and test fldt or cmp mov cmc pusha inc sbb xor in ret lods xor fcmovu fldt (bad) sub and popa fsubs mov jno shl arpl cli popa loope int3 stos mov mov sub sub sub fcompl xchg sbb pop (bad) or aaa sbb pop mov cli or arpl pop or push test fwait sub mov hlt (bad) sbb clc test (bad) xchg das sub and sub test dec imul dec out and jp mov inc xor sub test jmp fildll into loope sbb inc dec adc fcmovu or test pushf arpl mov pop pop mov push stos pop sub and sub sub rcr fnop pushf fistp in stos ficomp rorl jne data16 in or pop fisttpl xchg inc xchg mov (bad) sub fwait inc push mov cmc fnstcw adc in xor cmp cwtl ljmp sbb fcmovnu out xlat cmp or mov adc loope (bad) std in (bad) xor fisttpl scas sub mov cmpsb bnd call ljmp std fistl repnz mov mov cwtl xor mov int3 fsub sbb sub ds lock push pushl or test sti push pop (bad) jl (bad) ljmp sbb mov xor fisttp jge ficoml aam lret (bad) (bad) loope xor sub jnp cmpsl js rorl lds sbb (bad) fsubr lret int in icebp push cli js sub jae sbb (bad) mov xchg adc outsl sti flds add push sub mov andl test cmp mov mov ds mov cmp jne sub in add dec out out (bad) or es das pop pop cmp into daa test fwait mov daa sbb rcrb mov fs out sbb add (bad) fwait inc sub push mov in mov in sbb aad inc cltd push fs inc lods push mov add adc (bad) and scas sub jae lret xor test inc sub dec and jno in sbb hlt cmp repz cmpsl divb test or pop push pop dec sbb ds sbb les adc sbb xor leave fiaddl jb xor (bad) xor xchg push rcl insb xor xchg js mov adc rcr nop jno push cli hlt cmp in sub dec das and adc shrb mov mov mov shrb sub sbb hlt mov ja ret cmp popf (bad) mov mov stos xor and mov mov mov arpl inc adc adc xchg push adc xor xchg push adc xor xchg push pop (bad) xor xchg push or or mov lret dec or mov enter or (bad) dec bswap xor lea les addl xor addl add xchg (bad) xor test mov mov xor jns clc mov mov mov ds mov out mov adc and adc cli sub push and or sub repnz aaa imul or in or sbb mov popa and stos mov pop pusha neg xor xor cltd fcomi in cwtl ficompl lock cld pop sbb mov fistp test sbb and mulb fisub xor and xchg mov and stos pop pop xor cmp jle xchg and mov loope cltd loopne pusha (bad) xor xor sub arpl dec add addr16 ret jge in sub jns popa pushf lcall in xor lods and hlt pop subb cwtl fisttp arpl fcompl movsb inc pop xor mov and jl sub sbb mov push imul sbb lret mov push and int nopl and jmp in and cmpsl imul imul lods and dec fninit sbb or sub jns loop push lahf (bad) cs sbb cmp ficompl xchg arpl ljmp shrl mov fsts pop cmp stos inc xchg fnop shrl jecxz dec mov sbb add cmpsl cmp cld lret cmc and mov cltd loop lods xor in adc pop shrd sub sbb add jns shr inc fdivrs mov add fwait (bad) rclb sbb fisubrl in mov xor and (bad) sbb mov sbb sbb mov jnp dec insl ftst mov out insl sbb pop insb insb aad std (bad) adc and pavgb push and repnz push adc int mov sbb or mov loope packsswb cli xor fwait xor and sbb repnz mov inc push lods bnd push inc fsub add sub popf and ljmp lock subb das lods stos fstps xor jbe jb jbe stos ss mov lods or aam bnd and adc and add das adcl mov negb xor sbb scas fisubrl lock js cmp sub fidivl js adc (bad) sub sti sbb adc mov imul sub lods jo or mov sub and and sbb nop inc sub repnz sbb and out sbb repnz sbb daa sub and shlb lods and sub sub sub sub xor (bad) xor std dec xor and sar lods stc and sti sar mov sub and rolb lods add add cmpxchg sub and rclb and adc mov add shrb mov insb dec sbb add rorb and shlb lods sub add shlb dec aam test push rcrb adc pop sub mov je xchg (bad) je mov add and das test inc add cmp loope (bad) ja push sbb out pop sbb jecxz,pt cmp jno repz into xchg mov jnp je call rorl mov stos or and adc in imul (bad) and jle,pn adc sub inc jmp add fs inc mov das sbb mov jo adc cmp mov mov xchg jae cmpsb sbb add mov out je ds out sub (bad) or repz in fmul nop add stos xlat (bad) int movsb jo test mov add (bad) jo mov std pusha and jo mov inc hlt es sbb loop cs cmp mov hlt in shrb stc add fsubrl adc (bad) sti sub in repz (bad) int test pop mov sbb sub mov push loope cld add cld out and xor cmp pop pop (bad) xor xchg (bad) jbe lods xor addl cmp dec push xchg jmp xor and add mov mov test mov hlt adc inc dec dec jge clc fnsave pusha insb cld (bad) imul fist xor stos xor aaa xchg loopne mov loopne and fnop pop xor cmp aaa arpl jecxz xor cmp data16 jbe popa bound inc mov out ds inc addr16 mov mov cs mov (bad) mov xor sub sub adc sbb popa fmull pop xor in mov pop pop or mov out stos call ficomp cltd cmp pop imul cmpsl cmp popa fwait dec push out push mov sub loope fstps or or pop jbe repz int3 sub out mov test push sahf aaa add pop call xchg pushf gs pop (bad) fcomi sub das imul stos pop daa push xchg test adc outsl insl repz add adc mov cmc mov sbb je sbb addb mov pop fwait pop push cmp jno sub push cmp arpl outsb je sub inc dec xor xor js mov xor adc add lock rcll fnop push mov mov jbe dec inc jne int3 cmc je fwait adc cltd jecxz sub xor and lcall stos xor dec dec inc into pop xor fmull pop mov fldt mov xchg les dec sbb pop inc in in add lock sub pusha icebp cli fcmovnb and mov stos fcomi adc movsb jmp sbb fcmovnu ljmp or xor daa adc mov sub sub mov and or xchg repnz adc add xor hlt repnz inc xchg aaa dec add xor pop adc pop popa push popf shr daa icebp je inc and dec out pop xor daa insb mov insl and shrb mov dec push xor sarl add xchg loope ret xchg and push hlt loope lea mov push cld movsl mov adc xchg in add aaa call lcall stos or popa pop xchg or dec add lods daa lahf test fcoms dec add stos sbb push lock xadd inc push pop sbb incl repnz cwtl mov loopne inc xchg pop enter enter leave ja mov ljmp icebp sbb pop mov fisttp cwtl dec sub jb and push cmpsb pusha lods dec in xor addr16 fisub mov xor enter stos shrb mov cmp mov popa xchg cmpsb loopne pushf push add or xlat ret add hlt push ljmp dec push sub hlt sub sbb and mov aaa repnz and das ljmp push xor mov and sub lods or in das inc mov es adc ja movsl arpl add xchg sub adc repnz sbb scas adc sbb ljmp lock insb or or add cli std or and sub lock aas xor xor repnz and clc jne and or ret and and push adc lock adc adc push ss sti adc adc add mov push cli adc iret shrb adc cli add xchg xor sub or (bad) xor cltd imul jo lods lock and rorb ss lea dec lock mov decb cli xor (bad) sub adc mov repz mov pop sub xor mov pop sbb shlb adc pop and jo int3 cmp movsl sub jo ljmp sbb adc repnz icebp orb jecxz mov add add add cmpsl addr16 int3 fcmovnu gs and pop mov pop sbb pop lret lcall sbb das in push clc mov popa sub or stos sbb push sahf sbb pop pop dec sub add push xchg xor ss arpl xchg repnz sbb das xchg or daa mov bnd cmc jl test insl xchg (bad) jae jp inc sbb lock xor repnz mov push inc imul dec icebp or repnz mov xor dec fdivrp jnp repnz stc sbb repnz jg mov lock sub movsl rcrb mov sub and rorb mov mov scas add and stc jnp repnz (bad) rolb and or mov sub aas stc test repnz sub and mov cli mov lods mov xor and es xchg mov sub and sarb std sub sub das mov sub and rclb lods or or lods popf dec xor fwait ss mov jb (bad) and sbb mov loope cmp cmc xchg dec adc or xchg or popf adc mov adc pushf js sbb xor xlat dec test sub sub arpl push inc xor inc not and sysexit sti push fstpt nop mov cli jl and js ds cmp push and xor lods pushf ret mov hlt movsb lret aad push add (bad) xor arpl fsubrp sbb mov cmc je xor or fild sbb call xor push sbb xor frstor aas push xor sbb ret dec push inc push add in mov xor pop or (bad) sysexit mov (bad) mov leave je cmpsl dec outsb ficompl repz clc jmp push cmp jle,pn (bad) jbe shll or and jo inc sub inc pop sbb or xchg xor cmp mov ja or add xor inc mov cmpsb dec mov lods push or movb jo add xlat xor int3 pop cmp mov jge inc les sbb lret ja mov xchg hlt mov cmp push and addl mov (bad) repz lcall jae mov cld mov xor insl lock dec hlt aas mov xchg jp aad push add movsb cmpsl int xor cwtl daa mov cli and jnp out ss dec adc xor fcmovne cmp jb out xor xor hlt jae in xor pop sbb fdivl mov xor cmp mov jae mov enter or or adc push sub clc xchg hlt andl and imul fildll dec in xor xchg pop dec jp pushf dec nop ret jae hlt scas or cs push adc push mov insb mov mov add movsb push mov mov mov divl in or mov xor call nop jg test out test and stos sub jge xchg ljmp icebp (bad) hlt fmuls loope adc dec dec ds mov outsl xchg repnz xchg xor xor jp xor xor (bad) mov or jno or arpl in fisttpll xor data16 (bad) fidiv sub push (bad) xor mov jne xor jmp sahf and bound lcall pop xor das and push pop mov mov test icebp outsb leave mov add js push push sub sbb lahf jp xor mov into lock scas loop inc cmpsl bnd ds xor push arpl in jne cwtl xor pop cmp pop sbb xor xlat mov std xor mov in movsl jmp (bad) cmc jae je popa fdivrs les repnz loope lahf push hlt daa mov sbb paddusw pop fistl stc out adc fisttpll jae xchg push push dec jg cmc add inc pop cmp mov out and add or jle xchg pop aas and jg xor xlat or pushf xor icebp aam idivl push add push xor in cwtl and add and xor data16 test gs and mov pop (bad) xor pop and lds mov imul stos pop xchg (bad) out fs xor sahf mov adc cld pop sub inc adc jae sbb pop aad inc les lret push insl xor inc xor lea mov std jne push stos mov xchg mov lret loope ret mull cli sub addr16 test add sbb mov movsl fnsave ficompl jns xor or push inc and cmp xor scas mov xor cmp stos mov jg add add push pop inc sbb cmp cmp cli push xor cmp and rcll out lds mov sbb hlt add imul fdiv cmc dec movsl pop adc or mov mov cmp nop hlt inc pop and cmp sub mov ss adc (bad) ljmp xchg rorb stos lret sbb adc (bad) imul xor xchg pushf xor sbb inc mov aad add push and repnz sbb jno xor jo jae hlt pusha sub cwtl push and pop popa cli sub or inc push loop pop push xchg or clc mov mov fbstp cmpsl pop mov mov into jle repz (bad) pop xor jns add xor push inc fldenv hlt lret cwtl scas pop sub jle xor xchg dec inc push repz sbb sub xchg rcr call xor or adc lea cld hlt je stc test mov mov movsl xor push nop (bad) jne mov test ja xchg xor fwait mov iret repnz sbb cmpsb adc pop out mov test adc les outsl daa aas sbb add mov hlt xlat push lock inc leave add xor mov cs je push mov cmp pop adc enter xor decl repnz aaa in insl or push std or mov imul mov in xor mov sbb jno add mov inc cmc mov lods dec adc xchg roll cmp adc movl pop push xlat xchg add mov adc xor adc sarb cld les fs jmp xchg and push jns xor jno dec js mov xor dec xor test jbe dec inc or mov cmp call mov hlt cmpsb or rcll (bad) je movsb adc in ss jl pop xor popf add and xchg inc fsubs ret jge pop int or pmullw add mov jo,pn hlt jne ret movsb fwait enter xor das jle dec sub xor push mov scas xor xchg cmpsl nop inc hlt dec ljmp dec sti pop adc fpatan mov or je mov mov xchg std (bad) xor ret int cmp insb cmc adc mov xor and mov cmpsl imul insl fsubl lock xlat mov fs inc lcall and xor xchg adc ja xlat jle fmuls pop add xor push fisubr xchg push mov repnz pop add repz (bad) outsl rcr mov pop xor loopne inc jecxz movsb mov mov jl inc inc pop sub fidivr mov sbb xchg enter rcrb xor int3 push push xor insl stos jl hlt ja sti or cltd ret add xor jp mov mov push aas mov xor test sub dec cmp mov xor stos shl xchg xor (bad) dec sti jb pop cli pop lcall in adc sbb inc das mov mov xor bswap shl xor (bad) mov jae adc outsl xchg cli cltd or push sysexit out popf or xor cltd incb jns pop lahf push inc xor mov jl jns xor mov mov xor loope fildl add xor xchg and xor (bad) xor xor orl xor sbb xor dec mov fdivs xor sti cmp je into xor pop mov cmpsl iret jge movsl and je ficomp jbe dec out xor iret mov cmp int3 mov fildl cltd aam test push xor xor xor imul (bad) xor mov (bad) jae shrb inc and hlt pop jns icebp dec mov mov mov or movsl jns add dec outsb daa adc and ficom dec jecxz mov and mov xchg repnz stos or sbb mov pusha jle pop push cmc xor aaa ja cs clc push adc pop inc js sbb xor aas loope inc jae icebp daa dec lcall push mov jbe aaa cmp push add dec rcrl jae pop shrb repnz lahf and cmc aaa cmp out mov push pusha xor gs mov and jle xor adc cmp lds fistl hlt sti ljmp push xchg imul test mov push xchg xor cmpsb add hlt xor inc fcoml dec mov test in mov adc jmp pop xor dec jmp pop lcall mov pop (bad) jbe mov (bad) xor shl cmp xor dec lods mov xor pop lock push xchg addr16 cmp test inc xor ret pop jae xor cmp xchg jne in adc push dec jp xor in mov dec sbb lret hlt (bad) cmp xor rcl test xorb aas dec mov addr16 gs pop icebp push in movsl mov adc (bad) hlt mov xor jns dec or mov test xor lret dec rcrb xor or xchg notb mov xor lret adc aam cld std in popf adc les xchg rcll pushf and sub inc mov sti mov mov rcrl adc int3 mov loopne xacquire xchg lcall test mov movsb or jge fiaddl sbb movsb xor hlt or xor sub or xor or adc in adc cmp mov mov pusha je lods xor aaa repz icebp mov sub and xor repnz mov sbb cs cs jno daa xor mov aaa in ss mov arpl insb adc sub test addr16 sbb mov and sub jmp cwtl or or mov pusha xchg sub and rcl ljmp (bad) or sbb cwtl dec into or xchg loop imull sub je or pop adc push testb xor lods xor xor and aaa shlb mov sub and jbe add ss (bad) mov push sub and shrb in sub and pop mov sub and sahf lods xor std jg cmp dec lods add test mov jecxz xor mov stc mov push push sub es (bad) hlt mov (bad) dec and clc xor test repnz and rolb add or adc push lods pop and sbb sbb sbb and and and sub sub add xor std int3 je lods repnz and push rolb mov sub and xor and or test lret xor pop hlt pop dec inc enter pop jmp pusha xor hlt rcr sbb mov add xor hlt pop sbb mov sub adc mov push and and sti or jo ds std (bad) (bad) sub sub cmpsb pusha add and cmp lock mov jecxz aaa sub and and xor loopne repnz sbb popa and xor push std cmc loope jmp dec sub or add loop cwtl mov movsb (bad) push sbb xchg insb cli sub cwtl (bad) and sbb daa cmp les cmp and hlt repz ds daa in and pop sub insb inc lahf push (bad) mov mov scas cmpsl mov icebp xor pop fiadd dec push and and pop dec out shrl ljmp xor sub and pop (bad) xor std ljmp push hlt mov inc daa xor push inc cmp adc jmp xor arpl sbb fdivl mov mov inc sbb sti push lods fs xor hlt mov xor cld sub xor sti ljmp dec ja and mov repnz dec or sbb sahf pop jl sbb faddl xor cmp mov push sub imul xor fisub xor mov push dec push cltd xchg stc out dec xor xchg cs and inc scas pop xor scas lods jmp adc mov jb sbb fsts xor add rdmsr xor sbb rclb add leave imul (bad) cmc fsubrl add push out xor negb roll enter (bad) xor xchg pop test repnz xor sbbb xchg repz dec mov push aam das xchg aad test popf adc push or pop cmc xor or mov movsb loope,pn std xor cmp cmp movsl (bad) jecxz cli and xor sbb inc fidiv addr16 or cmp jae pop push and sub cwtl (bad) hlt inc sbb int3 adc add cld pop cs pop dec dec xor int (bad) xor inc push cmp mov les sub mov mov insl and hlt loope or adc imul lock xor sarl cmp dec repz ret dec inc arpl cld int3 aad mov (bad) mov je lods xchg push adc inc jo jg js repz cmp and jl je inc jo cmc mov fild mov popa pop push shrl push ss dec add mov add leave call mov lret stc enter mov das mov add out push jp or jae sbb jno inc nop or test int3 mov push dec mov xor addr16 xor mov (bad) iret lock arpl std dec and popa xchg (bad) mov xor stos add (bad) bnd outsb and jle xor aad add nop push jmp jle and jle mov and push add jmp sub fs outsb and call mov jle es scas clc hlt scas xor sar pusha xor mov lea add mov test cmpb sbb (bad) dec push test mov mov cmp and or enter xor js ret xor aam stos aas and jg xor fwait lret xor cmp mov stos outsl xor pop addr16 fwait mov je pushf and lret sti xor adc jl insb xor xor fsts xor stc mov xor ret mov push xor pop adc inc adc xor push cmp jg jmp sub inc je std nop sub mov scas popa dec pop cmp mov mov and int3 cld clc adc (bad) pop insb xor (bad) fs pop xor scas movsl xorb mov jae inc clc (bad) in add xchg enter xor xor mov repz mov call push add xor cmc in jne adc add xor dec xchg sub ss (bad) aam mov add icebp pop lods adc or out jg adc add rol imul mov jae (bad) hlt mov jmp mov jo dec inc xor jl adc jae jbe movsl mov dec jo jmp and cltd xchg xor je pushf repnz jb xor int3 xor jle insl pop xor inc dec xorb daa xorl addl sahf push lret js imul leave loop sbb stos jbe (bad) xor addr16 fucomip mov fxtract xor pushf jo push les mov add inc cmp mov sbb pop stos dec jo xor ss pop jbe push or jns inc mov mov shr aam ret jae aad ret ficoml add mov xor pop das pop or push jl test lods (bad) hlt xchg mov loope inc into hlt int3 jb insb mov push mov adc cli sbb aam aad lock jns cmc push mul int repnz sbbl push dec dec in adc xor data16 hlt sarl rcrl sti inc testb add inc add jl xor ror popf lahf mov push or xchg mov add popf dec outsl mov cmc mov push pushf lret scas pop pop add (bad) inc push cmc popf push or xor mov fidivr cli and sarb jno sbb sbb loope cmp cmpsl sub or popf cmc fcompl sub dec popa in xor xchg aas add and addr16 imul sahf mov inc mov pop xor movsl mov push and mov ljmp sub das and cmp outsb adc out xor push mov sub sub jno mov fildll cmp adc ss xor inc sbb sbb andl out and rol mov sbb fcomps push adc mov pop call cmp jno fimul sub mov ds dec lcall scas sub mov cmp cmp push cmp add test lds shr insl jl (bad) jne add loop pop mov aam cmp cmc int pop and xchg or sub movsl sti sbb loopne nop pop adc repz or orl je sub lods sub (bad) sbb in jnp cli jmp insb cmp (bad) repnz push add xor hlt cwtl push adc push es in (bad) jp push inc jno and iret xor mov xor xor pop imull lret cs pop adc cwtl and add stos mov into adc aaa ljmp scas mov insb xor xor pop adc mov push leave or adc xor mov adc adc jle testl push mov insl cs jecxz es fidiv mov mov add mov xor je movsb lea sub mov bound dec je xor pop fnstenv pop pop adc bound lods xor add aaa mov add xor (bad) xor hlt pushf icebp mov mov push lds sub xor rorb stos xchg aaa add inc je mov adc addr16 fucomp xor mov bnd xor (bad) add xchg jl hlt xchg xchg hlt mov add addr16 stos hlt (bad) lea and xor xlat jp jg and cmp stc mov (bad) (bad) dec mov nop adc xchg leave je test mov xor xchg andnps stos pop push jno and add loope and jae adc xchg jp and xor ret (bad) push push xor in push xorl mov mov push movsb cmp leave mov in push adc jnp lret dec out hlt cwtl sub cld lea sbb int3 fnsave out push fdivl mov pop imul sbb hlt outsb fcomp lret lods sub hlt stos aad pusha mov sbb jge push pop ja jmp popa jmp xlat test out test mov sub (bad) sub in frstor aad adc hlt mov mov jge (bad) aad dec or (bad) mov xor imul xor adc and dec (bad) (bad) xor fldl jbe xor aas xchg (bad) out xor push std nop (bad) xor test adc mov hlt outsl sub and xor xchg pop dec fdivs arpl push adc xor imul pop inc add xor test pop inc xor mov xchg (bad) push inc sub mov add out jbe insl mov mov shrl and xchg pop lcall lds pop popf jae pop jb push fsub xchg jns clc int3 jl xor xor xlat jae mov icebp test sbb gs call xchg xor xlat hlt mov stos lea rclb xor (bad) jnp mov xor sahf stos jb add xchg or xor mov in dec jne test jbe or gs imul xchg cld jae hlt in into sub jno imul inc xor movsl hlt loop mov fnstenv int aam xchg or inc adc jl xor (bad) (bad) xor arpl and pop insb dec add subl hlt add repnz dec arpl out bound (bad) sysexit jecxz xor jne je add mov mov pop jnp in (bad) xor ja cmp (bad) dec jae ror xor (bad) fstpt xor ret aad in sahf repz sbb sbb shr in jae dec cmp xor out adc or mov xor mov jp inc rorb xor adc mov push es sub pop push and mov xrelease cltd pusha add cmpsb xor xor mov scas xor ja mov cwtl cmc mov xorl popf and adc paddq ret or movsb add dec fisttpl sarl insl push jno add (bad) mov addr16 xchg popf mov mov out (bad) mov xor sub fidiv mov pop dec daa sub test push sbb jo (bad) mov in cltd xor add sbb sbb adc cmp lock push push inc aaa test add xor push add mov and cmc enter hlt add cld cld out fwait repz clc (bad) mov adc clc nop jne mov inc sti fs add mov add lods mov xor stc fwait sahf mov mov mov repz addr16 xor pusha xchg add sbb cmpsb mov and mov add in or outsl add test cltd dec scas cmp mov ja add (bad) aaa adc inc test inc cli mov aas stc lret loope leave pop and lds inc add and jnp (bad) mov fdivp cli fldl sub mov flds xor pop bound test in xor daa in mov call js ss pop mov push pop mov add pushf test (bad) je ss scas jo xor fstpt dec sysexit daa fisubl ret and aam mov test testl add mov imulb xor dec dec out lods push hlt lahf ljmp aaa xor insb push nop mov push cs sbb popa sbb dec rcrl jg (bad) or cmpsl and adc hlt adc mov sbb sbb xor xchg mov xchg and loope jmp fnstenv mov out lret mov out add and xor inc (bad) scas mov xor inc dec pop or test lock dec push dec lock jae arpl mov dec inc clc add xor mov mov xor push addr16 dec jo or jne jnp lahf pop cs mov xchg adc mov jae or mov pop pop icebp repnz nop xchg cli shrl lds adc xor jge push popf xor sarl lcall pop jae push inc ja pop push out xor mov xor out inc outsl (bad) stos mov jle jge add mov pop jg int3 sub js cs out insb int3 mov mov pop shlb inc pop scas xchg xor jge jo pop sub fldcw push ss jnp shrb test mov iret lods into (bad) and comiss xor xor mov movsl mov xor push stos icebp (bad) xor mov lret call inc push inc cmp icebp xchg enter hlt les or adc xor retw cmp mov scas bound lea jmp add test fwait pop mov jne and dec and push rolb add imul dec test xor ret pop jno hlt insl and shll mov lcall sbb je ds in xor outsl mov sub mov sub mov push sbb cmp jmp sbb fdivp mov mov xor in sub das or pop addr16 cld nop sbb fwait (bad) xor enter jae imul mov cltd pop sbb arpl les inc popa sub insb lret add jg adc into test cwtl jmp sbb cli in and das sub daa adc fdivrl and jmp (bad) sub in jle fsts adc scas mov adc cmp in faddl loop mov mov (bad) mov jg add mov and ds adc push jecxz hlt fstl idiv cmpsb adc pop repnz inc gs xor sbb rorl stos jno sbb xchg adc mov jno shlb and inc mov lods or ret add push insl xor pop cmpsb ret adc push sbb lret das xor mov cmp mov pop in xchg xor mov test mov jle out fisttpl je inc add dec push (bad) (bad) insl scas add push or data16 sub adc mov mov mov or or ja xor adc adc (bad) cli icebp popf out and adc xor cmp imul jmp jae adc dec cli sub dec sub ss dec push add mov dec xor (bad) xor stos xor insl repnz ljmp mov xor cmpsl adc (bad) mov test push int jne xor sbb outsl mov ja fwait gs jge shrb push scas mov inc outsl and push aam in lea mov stc xor (bad) sub mov outsl inc ss aaa jl inc sub sti xor jmp mov xchg jno call and sti ds or xor and mov rclb (bad) xor add in je xchg pop xchg push hlt add xchg pop add jb xor push hlt cwtl and imul pop je jns std cli icebp inc insb pop rclb adc fnstsw push adc jns mov and xor scas lea mov ds lahf push xor adc fistpl mov and in jnp sub daa cmpsb (bad) and xor adc xor cmp push js stc aad loop xor cmpsl dec add xor jb mov sbb icebp mov mov std xor fldenv lahf lods ja push stos pop mov fdivr and subb cmpsb rcrl ss mov movsl mov inc imul jb push add xchg xchg fisubl pop jle loopne aad mov and jne xor cmpsl pop push sarb xor inc fidivr imul mov xor imull clc mov and jge xor push or inc xor adcl or imulb lods sbb mov and jnp das dec sub mov pop adc push shll inc pop or cmp shlb push les add (bad) adc les cltd clc enter rcr xor cmp push mov bound add jo repz je inc in (bad) shlb jne xor sub mov jg scas sub icebp jne mov rcl test dec fldcw out mov xchg mov hlt std cs sti mov or cmp xor mov xchg xor loopne outsb or hlt call adc dec test add add int3 jmp adc sub dec sbb push popa push xor jbe mov (bad) mov sarl dec imul sbb cmp xor xor mov cmpsb pop jo inc inc ss xor mov xor jmp fcmovnb insl xchg push nop mov add cmp dec in or pushf mov icebp fidivr mov adc fwait ja xor dec lods (bad) rcrb es lods aam stc inc add scas leave hlt mov or popa sbb xchg repz outsl jl adc or add mov hlt jge and outsl xor cmp mov lods cmpsl pop and push movsb hlt add push pop and xor subl sbb cmp sbb mov xor (bad) lret lods das jno lods scas (bad) fbstp mov fwait mov mov (bad) lret xor xlat rolb call sbb cwtl ss fist xor cmp je (bad) or or add cmc es hlt add call aas push test call jno in addr16 cmc sub outsb and lret push fdivl cs test mov adc aas sbb add lock dec push lcall mov mov xor pop xor rcl test test lods xor inc stc xchg (bad) xor dec pushf mov repz aam test les adc in mov pop cwtl pop xor xor mov adc cmp and repz add and in pushf fnsave imul cld (bad) xor mov xor cmp push lahf xor popf lods cld mov mov cmc hlt movsb fmull arpl lret push (bad) xchg xchg lcall pop mov mov fcmovnb daa cmp fadds sub and mov push lret mov add fnop xor sbb arpl cli jmp push (bad) clc push into xor aaa (bad) repnz in movsl mov mov add fimul mov pop dec sbb sub pop mov xchg pushf pop xor xchg mov repz mov outsl (bad) aam jne data16 out ret jno cs jno outsb mov cld mov or sbb inc stos and dec hlt or mov sbb popf xor mov xor lahf clc int3 jmp pusha (bad) pop sub mov dec mov ror jnp xor fs jbe dec pop pop (bad) jae inc cmp mov xor push dec pop xor push sbb hlt ds test inc add (bad) xorb lock xchg add cwtl xchg repnz and mov pop mov repz sbb data16 dec cld in mov jb adc jle (bad) in std dec cs xchg push inc add movsb mov lods push mov adc idivl add dec xor or push add leave xor aaa negl xchg xor int add push push inc ss cld movsl sbb in xor add jno iret lret xchg xor or mov stc in sbb and or or enter mov sti cmpsl lret sub (bad) push loopne test xor xor cmc test (bad) sti mov xchg xlat adc rorl mov xor lods sbb scas leave xor sarb icebp pop mov xor jb push adc mov lds dec pop cmp bound pop push xor outsl dec lock pop in hlt cmp mov jecxz adc je pop or xchg or in jl push push add add jge push (bad) into adc add add xor push jne pop (bad) loop pop popf and xor sbb push xchg clc arpl or jns and cmp cmp cmpsl hlt or inc cld add in fmul hlt mov outsl in adc and inc xor push or mov inc lods inc imul jno fwait mov xor add cmp (bad) cli mov xor mov mov int3 adc inc dec repnz js xchg xchg mov cld mov add mov inc das dec and into bound add pop pop or inc and sub (bad) ljmp je mov push cwtl leave jns repnz stc xor add mov mov sub mov repz xchg inc push push lcall add sqrtps mov cld mov pop inc hlt mov sbb pop setae jbe add push dec lea adc cmp (bad) (bad) dec fs roll out ljmp jmp in mov xor mov push jecxz dec xor (bad) mov jnp dec inc sbb outsb fbld xor repz sub scas or in push repz push movsb xor push cli xor xchg sub ss cmc test hlt mov mulb xor jbe and sub lods repnz cmc repz jmp mov and ficoml push xchg call inc push mov mov and sub cmp inc xor or notb andb jns xor pop cmp test jb (bad) xchg sub pop jg je xchg mov (bad) or pop xor pop mov sub mov ret mov (bad) jno mov loope and cwtl push add xchg push fs add xor xchg (bad) cmpsl jb xchg xor jne js loope sub lret add sbb or test cmpsl loop xor outsb hlt adc mov dec jne jle inc lods repnz pop mov and gs or notb aas call mov stos cmc xor insb in jg xor adc cmp das xor jle repz and popa sub xchg or jne ja or xor inc push mov pushf fldcw inc mov cmp je mov mov adc repnz xchg cld sti jmp pop xchg jo fdivrp cmp mov mov pop jb jecxz sbb cs mov fidiv pop daa xchg or enter add mov int3 rcr sar jne iret loop hlt inc es shrl push test sub mov adc call mov in repnz mov or (bad) rol cmp cld jge in xchg sbb sbb clc lcall sub mov or ret in fs cld pop clc movsl jnp je fs xor pushf xor push call adc jae or add dec mov xchg clc xor (bad) lea xor leave cmp jo mov ja mov ret xor or jae dec mov dec insl iret xor scas sub mov popa test insl stos adc fildl fiadd cmp adc mov addl jb jbe out call inc add and xor (bad) ficoml xor push inc pop inc jo dec sub inc jb dec adc pop sub outsb inc xor xchg xchg jno (bad) frstor loop pop dec hlt icebp adc jg cld jl xor ror les lcall cmp je fsubp cmpsl inc xor pop mov sbb xchg (bad) adc and aad xor jo cmp inc enter dec stc aam xor jmp jle add jecxz push add test test mov pop xor lds adc loop push jge pop stos cmc out add addr16 adc invd pop dec adc loopne fstps pushf (bad) lock push dec xor (bad) and call xor mov dec cmc hlt cmpsl bound xor jb add inc or scas and aad xor add and push mov mov flds dec and aas dec push rcll sub adc mov xor mov pop jo ret adc aam or clc push or dec jno iret inc test mov cmp sbbb sbb and jnp test fst test lcall jae sub dec dec iret mov jne clc imul or push (bad) xor out (bad) push pop jbe insl scas add ss cli and lea (bad) sub daa xor fwait das aaa mov out or loop push xchg lock jl cmp jns add sahf xor mov lods push icebp sarb xchg das push cli ljmp mov jo scas mov push mov js pop rcll (bad) xor aas das pop gs mov int dec push jl test lret orb (bad) mov inc popl (bad) ds mov pop sub insl adc mov out pop gs xor outsb and pop dec add nop lods jb xor jae rorb or aaa sahf push mov inc ret add cmc sti loopne add jle xor loope push cld and scas xor inc ss jae in popf sahf sbb fimull inc push xor push ja sbb sub subl outsb cmp imul imul or and lds lcall fmul cmc pusha push and fdivs lds jle ja pop stc mov mov mov xor dec cmp sub pop push fnop std push xor dec lds mov mov lock xor fadds jae add das jl fwait les ficomp clc mov inc dec push add sbb out mov fcmovnbe pop ds cltd mov lods inc ja shr xchg xor out lret scas movq dec pusha fcoms out (bad) sbb call xor inc insl dec pop cli dec xor inc pop insb sub data16 std jl sbb mov sub xchg xor or daa clc jnp int les or and (bad) xor in in lods mov dec sahf push cltd fiaddl int je sbb xor add and adc mov jmp insl (bad) icebp mov hlt movsl sub pop sti lret lock xor repnz xchg loopne cmp or fidivl mov arpl stos je (bad) jne int3 sbb fisttp inc test je fwait into jb adc dec lods imulb jno hlt (bad) mov (bad) int3 add pop in subb imul idiv xor cmp ljmp repz dec add xor mov mov rclb cs add sbb dec mov mov dec adc lahf push xchg daa jo sub cld cmp xor sub dec daa mov and push jmp cld pop sbb ss divb lret popf push mov (bad) or (bad) aaa inc xor mov int3 fdivrs adc aaa xor mov aad adc cld cmp dec les add adc xor test add sub fisubrl mov xchg insb call xchg in push adc sbb ret pop bound lds pop push in pop sbb jg mov pop test cmp or fucomi (bad) fisubrl fwait pop xchg sbb outsb andps mov xor hlt and jo cmc sub (bad) sbb pop jae xor xor xchg in fdivr or xor mov jb add dec or mov xor add xor outsl loopne (bad) hlt movsb leave lret mov lret es lods iret pop pop dec mov lods or xor xchg push test mov sahf xor test xor cmc adc aaa xor icebp iret jp xor sbb clc popa xor mov (bad) jge rolb popa hlt hlt sub xchg and inc loope (bad) ret sbb mov arpl rol into jp hlt add add mov pop add addr16 or sahf dec ja repz push mov lods mov stc addr16 in es xor stos pop mov xor sahf mov in repz das add in push int xchg stos cmpps mov adc outsl lret and repz pushf add les push sti cmc scas xchg xor rclb adc popf mov (bad) xor sbb jp (bad) bound icebp popa mov mov stos test xor cld jb rep in movsl (bad) cmpsb mov enter ja xor jge (bad) int loopne es inc xor lods in inc sbb mov lock mov das mov loope mov pop sbb xchg jg int bound jnp (bad) lret popa dec push sub gs cli pop lcall cmp mov outsl inc push test mov ret mov jns (bad) jge lods xor and fbstp mov cld popf xor push fadds cmc pop movsl sbb pusha mov jns fdiv sti jle or scas push inc cmp insb or xchg sub lcall pushw cmp xor dec mov imul push cmp sub insb xor push cltd pop and push add xchg or cmc stos inc xor jl add or fwait mov pop sub jne,pt outsb push inc xor sbb (bad) jg aam pop adc popa pop es or scas jnp mov mov (bad) neg lods hlt jmp out ret xchg or aam flds in xor jbe in mov dec push out and es pusha aam movsl adc add pop aam adc scas (bad) out incb in mov and fcmovnbe jl jp hlt jle cvtdq2ps and cld (bad) sub xor (bad) cmp faddl add (bad) clc test adc lret mov cli mov and popa xor push xor in test and ds out pop das mov mov xor faddl sbb ds in mov xor in repnz pop jae fstps je lahf xor rolb imul adc dec push jge repz cmpsb aam mov jmp cmc push pop mov adc mov pop imul call clc jmp sub jno jae in lret sub lahf mov add jl lds jno mov insl hlt xchg mov xor repnz push je jno adc arpl sti jmp cwtl mov (bad) fldt sbb adc pop or scas mov lock int3 xchg std pushl addr16 rorl xchg add push out or ljmp jae inc inc sub dec or imul jo in mov je dec es xchg inc adc repnz xor jge out jno scas nop dec (bad) mov lahf jmp jns mov inc arpl stc push pop jmp popa inc xor ret aaa ss fstpl popf arpl mov adcl pop movsb push and xchg test lea jb xor mov sub outsl push or pop and loopne pop adc sbb fbld xchg jnp mov in push sbb test (bad) lret (bad) jae cmp clc and mul xor mov mov pop xor xchg mov cmc or loope push in jae mov mov scas (bad) leave (bad) mov sbb lock jle scas arpl adc test xor in sbb jae inc pop bound jns sub or inc mov imul lds adc xor adc mov xor les dec xor scas icebp mov (bad) cmp cwtl (bad) mov aam jle and pop test hlt (bad) mov clc adc mov outsl bnd nop inc xor jmp jae adc insl test push insl or (bad) xor imul icebp lds cwtl popa cli adc xor xor xchg fdivp sub cltd mov xor sarb push ffree push or bound call xchg adc mov test imul rcll jg enter xor dec mov nop dec sub test fwait aaa imul xchg out pop mov cld inc cli mov xor iret ret add mov and (bad) stos das ficoml add adc mov mov jo fcoms mov or rclb scas pop inc adc (bad) jns mov and test add xchg pop fidiv add sar popf mov inc inc (bad) lods mov hlt pop setp pop and push mov dec xchg or mov sub pop (bad) mov or add or pop pop (bad) mov hlt lcall adc aaa xchg inc xor pop std cmp xor jp sub pop clc lahf fimull insb push dec inc xchg dec rcr rol push jp fsubl daa mov loop ss cmp mov test fmul scas inc jae sahf sbb jecxz sbb int3 xor lods sub adc jl xor rcll sahf jno mov and jecxz push aas pop cli xchg (bad) mov pop and xlat lea aam xor stos mov aaa mov jmp jl add jmp stos inc inc xor dec cs repz sub testl fcmovnu test gs sub sub lret dec and out sti stos data16 xor xor lods out es ja mov lret add out inc mov mov sub out (bad) hlt imul test add mov daa jle (bad) out pop sbb or sbb xor mov packssdw xlat lods mov xor inc pop push repz divl outsl pop add xor ljmp dec or movl add out fldcw inc xlat pop push add mov mov pop push inc pop jmp mov pop push sub xor mov mov repnz jge push jne xor and xor lods loopne adc pop in cld sahf fxtract xor adc call cli lahf mov mov pop outsl xor je pop addr16 les in cwtl sub jae mov xchg inc js repz pop bound pop xchg push out or sbb add jno inc mov mov or or popf and cmc je in in or dec pop shrb imul xchg call sbb mov mov add sub dec jae xchg sbb loop (bad) xor or push or mov mov stc pop xor cmp popa cld stos test call cmp cmp or (bad) and xchg xor les inc testb das inc hlt outsb push xchg jp scas sbb push and into in xor popa add stos pop dec js jb call test xor mull hlt mov movsl lcall clc call out ss push inc aaa aam mov fisubl aam enter jb ds gs (bad) xor push mov mov aaa cld fidivr into xchg hlt jl loop ss xor roll jb les dec mov cld pop into dec xor xchg mov jmp jne fstp push cltd mov xchg shrd add je push jmp mov insl xor pop xchg jnp outsb aaa inc lcall fwait (bad) data16 mov xor mov out das pop adc mov gs and aam aam cld insb jecxz fdivl ficomp (bad) out test mov xor fistpl jg and mov push je int les push (bad) fdivrs rorb sti lret inc in daa repz pop xchg sti mov sahf cmpsb cwtl push aas loop les sbb mov push clc imull f2xm1 xor bound sahf imul pop sub fistpll push or xor mov cmp pusha or mov popa jae pop mov mov lods mov adc lods jbe xor js int3 (bad) xor jecxz cli add std xor in xor lea push adc sbb sub arpl mov xchg pushf imul lcall mov (bad) movsl dec push arpl hlt nop adc or mov xchg in jb rol sbb aaa nop cmp test mov jmp mov and shrl stos outsl addr16 xor sbb sbb add cmpsl add xor jns daa xor lret dec xchg add adc jne sbb shll dec mov fsts (bad) cs inc adc add jae sub aaa pushf lahf into hlt sub xchg jns xchg xchg xor inc std and mov xchg mov rolb jge jge in cmpsl cld insl daa xchg xor sbb cmp and jnp hlt outsb mov mov and xor pop jae insb xor in xchg hlt (bad) xorl sub mov outsb fisttp or cld inc dec sbb mov mov push and adc jns cmp mov mov in lods aam (bad) cli mov lret scas xchg mull mov mov jmp xor repnz aas out sub test nop xor or push mov insb xor imul adc adc add or jge sub xor clc hlt sahf xor jb xor ret bound add pop cld xor xor repz or pop dec scas or adc jmp mov pop lcall sub push cs xor or repnz mov mov pop cmp add xor ret jle test fwait int3 lods movsb xor and aas cmp hlt xor ret xor jne push dec jae sbb js or jo push mov xchg xor pop cmc aam jns test je cltd sub decb mov mov pop xor adc xchg push push push push mov jp mov jecxz push xchg pop push (bad) in pusha push fiaddl pop out in mov sub xchg pop xor jle fnstenv mov xchg jp jae jge movsl je mov jnp lods pop add jo std add xor jne fnop add or xor insb rcrl stos xor addr16 sub jne mov fwait add xor dec fdivr sbb subl xchg lea mov inc dec pop xchg pop add ja push mov jmp sbb lahf xor inc dec or sbb pushf (bad) lods imul jp pop xor in (bad) inc add sbb aam pop dec push mov push xor mov sbb mov push push repz loopne xor pop mov stc (bad) xlat icebp sarb fwait pop jo shrb fcoml jne sbb jg jmp inc imul loop pop xor pusha xchg xor mov int test sub jo push ds lods xor stos sub add lea mov je (bad) mov pop pop add addr16 sbb (bad) sub je inc jg mov cmp out mov dec data16 jp insb insl push clc xor outsl push pop mov repnz insl push inc out xor cmp jb jg pop xor pushf repz sub add xor sub jmp fbld lahf aad leave lea add or or gs int3 xchg jbe jno xchg into jnp mov cmp loop mov (bad) repnz jecxz xor add mov xor dec insb cltd mov ret cmp xor xor mov mov rorb inc add addl jl std cmp and and das xor test mov push jp andl sbb fldcw ficoml shlb jl mov mov out adc daa push push sub popa or fisttp call adc jb icebp jne xor adc sarb inc bts imul pop xor outsl leave xchg sbb and fbstp pushf ss lock mov jae jb and adc pop xor pop cmp mov push mov int jmp leave dec repz divb push cmp adc insl pop push sub jmp ror cs and sbb js xor dec (bad) out decb lret mov clc xchg sub sbb mov hlt jg int (bad) sub or inc mov ja aad xor pop fwait xor xor sub mov cltd divb adc call je push mov notl fsubp pop sbb outsb clc lea pusha jbe cmp dec xor xor popa dec sub jo mov mov into sub pop jbe adc je iret cmpsw lret add fwait rcll test mov je cmpsb cmp or xor mov je shr jne jp popf adc xchg sti push xor mov push or movsb sahf xor lods dec and xor mov sub add or xchg (bad) stos insl (bad) adc pop mov lock push mov push js xor outsb aad pop jb cld sbb aaa cmc mov push jae cmp aam sbb sbb aas cmp add mov jecxz xor jg pop push stos iret cmp mov xor jl push add or lahf out clc jne into insb add ja shlb sbb xor sbb je add adc jns pop hlt add mov insl sbb hlt insl sbb sbb xor cmpsl mov jno and inc stos outsb ja cld das xor mov xor outsl mov loopne xchg or sbb add xor lock dec and daa sbbl mov xor movsb add lds pop mov divb cmpsl cmpsl data16 ss adc lea jae popa jns jp jle std mov repz lods adcl in push mov jg and adc hlt xchg imul outsb (bad) or dec out pop add cli xor inc std xchg xchg mov and jns sarb imul mov int3 mov js (bad) xor xor cli loope in gs xor add mov mov lock loopne jnp add push pop or les js mov add nop add xchg xor adc cmc fnsave outsb sub pop xchg cld push push and mov xchg mov xor xor xor dec sub (bad) fmull lret pushf cli and pop mov jns adc jnp lahf lret mov mov (bad) aaa das shr xor xor jecxz cmp es lret pop addr16 aas or sub shrl push mov sub xlat dec add ljmp push mov mov scas repz push inc dec sbb cmc (bad) testl insl dec std cmpsb and lcall subl or out in xor inc xor mov orb push lds aas into scas add hlt xchg pushf out pop das sti mov xchg jl (bad) lds sysexit xchg xor sbb xor insl mov sbb bound stos les test jl dec dec cld (bad) fcmovne jnp jno xchg dec pop xchg shld xor daa arpl push es jb xchg xor outsl sub (bad) jmp outsb popa popf xor out adc (bad) jne xor mov mov inc push cld jns sub fdivr fwait notb adc ret cmp xor outsl or dec int stos add xor popf dec lods mov orl and outsb mull (bad) repnz int3 fdivrl cmc int3 xchg std test cltd jb dec xchg aad sbb test pop (bad) sbb jge repz les imul mov outsb cmp cmp xor or add (bad) test (bad) aam rolb jae dec sub jbe mov dec mov test addl retw mov mov or pop (bad) clc sbb in adc xchg cmc push insb and test or jne test lret out repz xor xchg push jns ss pop push gs and xor adc repz and adc sbb sbb lods jecxz mov (bad) xchg xchg inc ljmp pop mov movsb das imul daa icebp outsb jae add inc neg add jl xor mov mov add mov (bad) jnp loop sub or divl stos je lods mov fprem orl push xchg push enter xchg xchg repz pop sbb iret repnz mov xchg mov shl imul adc fild lods outsl cmpsb jmp ret loop dec je,pt xchg fs cmp ret aaa inc add xor mov xor mov push sbb mov mov cmpsl les mov cs xor pop test push stos adc mov mov push xor (bad) cld pop mov adc add adc push xchg xor jp cwtl add (bad) cli and test movsl or sub or popa mov insl push out outsb cmp xor arpl cmc das mov jb cmp xchg outsl xchg pop adc dec xor push fmulp in out mov xchg pop leave mov lret pop jae inc inc call mov movsl xchg xorps xor loopne dec xor xor cmp nop sbb cmp sarl push adc into (bad) sub int3 (bad) mov lds xlat mov fcoml movsl pop rclb pop lcall jecxz loop xorl push cmp adc movsb mov xor mov rolb lods mov (bad) adc xchg mov jle mov xchg push imul inc cmpsl repnz std test push pop add cmp aad fisubr sbb imul pushf (bad) xchg arpl push and pop pop adc test mov pop cmpb mov mov cmp gs xor fidivr scas sti repz pop pop xchg jp clc cmp mov jns mov es add flds xor lret mov das jg cmc in mov pop popf cld mov stc mov jmp stc in popf mov mov mov xor je jge mulb xor mov out addr16 add push pop stc mov hlt jnp arpl roll cwtl mov jns pop push or inc scas lret daa mov (bad) or sti cmpsb fcmovnu ljmp or adc aam fidiv lahf xlat imul (bad) jae (bad) cmc dec add insb nop jo dec inc sti in mov pop xor or xor cmp cs jg xor jecxz cli jb or cmp ds jmp jae ljmp xchg cltd adc xor pop fcoms adc push clc and inc lret inc push and mov sbbl dec jo add jmp xor es mov and hlt xor xchg add fidivl mov cmpsb mov xor xor cmp imul dec xor add jbe sbb ret inc xor pushl cmp imul fld jae repnz mov mov ja sub inc push mov cmpsb sti mov and jns or lods cli mov (bad) clc mov xor shrb mov and aam popl (bad) sbb dec je sub subb cmc cmpsl cli mov sti call pop jge add xor inc push popf sub hlt mov cmp dec add scas mov (bad) jnp and fldt ficompl xor daa inc xchg xor shrb xorl pop sti add xor mov mov cmp mov (bad) mov js inc repz std daa fdivrs fs push mov sub or mov je or mov xor sahf xchg mov dec cmp or push mov iret jmp fwait pop add sub stos xor lret pushf jmp adc addr16 pusha ljmp ds inc dec push jno or dec xchg fildll mov pop dec or icebp or xor jne push lods xor cmp mov scas sbb push fnop mov inc fs out je jmp lahf adc dec clc (bad) mov jp xor lods mov nop and mov cmp add sub out or add mov hlt repz xor fmul mov lock mov pop xchg pop dec jae sub pusha rolb in mov jbe xor fsubrp std stos pop sub push lahf or jl nop stos add push addr16 test inc adc xlat ret xchg loope mov cmc cmc mov not rcrb fs mov jg inc xor cmp sub js adc xor cs ja sbb and test cld fdivl repnz rcrl xchg jecxz aaa clc cmp adc mov add hlt loop mov out lods popa or inc mov js popa xor into sbb sub cwtl mov xchg jno inc aad inc xor outsl add jb loopne popa mov popf lods or xor mov xchg addr16 gs movsl imul sub enter dec xor stos inc mov je jnp mov aam les adc xor test hlt mov sub cwtl jge xor add sbb add (bad) lret mov imulb pop add xchg rcrl sbb fdivrs and mov scas arpl sbb sbb sub lea jmp push cmp cs xor gs mov push (bad) int jmp inc cmp lock and xor sarb int xchg sbbl ss push stc fstpt mov movzbl sbb cli adc or je (bad) (bad) mov lods pop or push pushf mov (bad) mov add stos subb dec push add adc insl mov add and fistpl (bad) xor inc inc or cli daa and dec push (bad) popa push nop xor sbb push les cmp dec sub cltd rcr mov loope xchg ljmp aaa daa mov adc add imul ret jle psubsb icebp nop pushf dec dec dec popf imul outsl pop add cmp cmp pop push mov sbb sbb or outsb insl adc or xchg pop (bad) cmp add add jns rcll push aas lods les sahf adc xor in dec aas jae int xchg push pushf mov leave jno adc adc add sub call cld cli aam dec lret into inc addr16 nop (bad) jbe movsl jns fcoms loopne arpl sbb adc fcmovb insl mov (bad) mov xlat sub add mov jno jbe dec popa dec mov adc mov or mov pop add push pop hlt push fistpll sub mov xor sub int3 or popaw dec mov xchg push rolb rclb repz subl imul xchg or pop daa sbb xor (bad) (bad) (bad) xor or and xor test das mov test mov popa add or xchg push push outsl cmp clc mov sub sti sahf or in int mov movsl push or bound fisubl ss (bad) fsubl (bad) lcall pop adc add xor std icebp inc (bad) je je fdivr add adc leave rcrb xchg adc aam or add pop loope,pn lods xchg and mov jp xor inc inc xor xlat loop in mov and stos pop outsb and push dec dec movsb aam mov sub and call push mov popa jmp push sbb adcb clc andl dec std ds in in ds cmp or adc mov clc jb sub lds out sahf push cmp xor hlt mov aaa hlt mov push mov lods xor cmp sbb add in scas int fidiv add incl jae out xchg test dec (bad) jno jl std mov insb push stos pop hlt mov push or xor out inc lods adc fs ljmp js or lcall xor mov xor jl lods vmovups movsb ret jae rorl and add (bad) lret lods cmc inc hlt rclb je leave js dec ret sub mov enter add shrb xor or aam or and dec xor cmp (bad) (bad) loop add jne repz fadd dec out stos xor fcmove sub sub and cmp fwait lea push add jae sahf stos sbb lea and je pop sub sbb lcall pop adc mov outsb nop xchg subl clc xor xchg and int3 fdivl stc lret xor and cmp push (bad) outsl fwait es in data16 insb ds loopne test lods sbb xor in mov pcmpeqw jp imul add sub das push (bad) shll in cwtl add mov sub out into (bad) outsb xor xor sub xchg es mov and or out mov gs sub pop loope shrb loopne and jg fidivl mov inc in push mov (bad) jp pushf (bad) fstl adc leave fdivp jne hlt call int xor mov pop aaa cmp fdiv push inc movsl sub aas xor nop dec das (bad) jnp test test or mov pop mov lcall les test sub fimull loopne or inc sub dec cmp and xor mov into test lds cmp mov mov ja jns sti push sbb divb push mov adc xor push mov mov xor inc adc sub aad inc xorl dec icebp and mov xor mov mov mov mov push xor int3 (bad) mov fcompl les (bad) jb mov (bad) xor std xor mov xchg stos add sbbb repnz cmpsb push or xor add fnop out bound pop aas mov xor jecxz adc ss scas cmpsl adc sbb jnp or aad jge repz and pop cmc sbb in dec xor cmp imull cwtl or pop push adc movsl xor pop inc mov xlat jle cwtl imul and (bad) repnz push xchg xor iret add xchg sbb push mov loopne pop stos divl das mov roll xor loope ret (bad) repnz arpl bound cmp add add outsb push daa inc aaa push cwtl sub inc add call pop pop push mov test add and inc je mov push lock adc sub pop pop jne xchg jecxz lahf popa push xor movsb adc pusha push cld sbb cwtl sbb dec leave and xchg fimull mov xor sub mov loopne push cmp dec lret pop xlat cmc popf jb lds and and push sub xor mov inc aas ss add (bad) push cld in push lods xor imul and sti (bad) sti add inc sbb add sbb push mov mov or lea and dec mov xor xor aaa xor shl jno in imul (bad) test leave hlt (bad) insl push xorl push pop fcoms xor inc mov cwtl jmp xor ss sahf in xchg xor aas jo pop or fild mov hlt jb pop cli dec xor push xchg jp shlb cs or or das stos std repnz xor (bad) jnp fstl and inc and adc sbb dec cld add icebp inc pop sbb inc sbb add push shll mov les (bad) insb add loopne daa fwait dec enter int3 test fstpl xor cmpsl rcrl dec jae je xchg loope stos xlat fidivl lret insl cmp pop popf mov sub xor lds add push (bad) lea icebp ljmp adc cmpsb popf rolb jo pop xchg xor add pop xor loop test bound mov or or and lock xor cmp xchg je pop scas add add jns idiv hlt dec sti xor xchg sub inc xor out push out jo stos fdivp xor clc mov outsb test mov fstl sbb pop xor in aam add cmpl test jecxz mov jno sub xor imul mov or or jae das adc or cmp add jno jne ljmp mov pop add jmp dec aas cmp mov xchg or xor cli mov cld aas cmp inc sbb hlt cmpsl or lcall daa (bad) repz sbb call xor add ret fbstp arpl popf push or xor gs je xchg hlt or fldl dec int inc or lcall jp xchg jg jne jnp js aam scas ret inc xor mov data16 cmpsb sti mov addr16 sbb pop push repz (bad) leave push or movsb xor cmc cmp mov xor or or mov jae mov ret sbb mov xor or xor test mov sub xor push sub adc daa pop pop xor lea mov in pop mov (bad) mov mov xor add shrl add ret (bad) mov outsb (bad) push and fldenv fadd mov in jne sar xor ret jb aaa stos cmp push push rcrb imul cltd mov xor and push mov add lock les mov adc push in repz into mov (bad) xacquire dec push lods je jbe mov mov imul divb aaa xchg lds fdivp pushf or je add mov nop jae ja lahf mov and scas xor int3 aad (bad) add jg jl mov push (bad) hlt test daa jae sub inc xchg mov mov xor cli outsl mov sub aad or insl movsl lock in adc pop es push xor lods push int cmc jae push ljmp or xor call lcall or xchg mov pushf push cmp inc cmc repnz fs and sbb push push pop scas xor pop in leave xor enter xor ret cltd jb pop inc jb xchg jge xor mov jnp and xchg pop scas jecxz hlt notl repnz pop rcl out icebp cli popa (bad) mov and xor repz (bad) popa ror mov adc adc hlt sbb push jge adc sub gs or fadds inc insl mov addr16 sbb cld xor xlat inc mov and test and or cmp stos adc (bad) sbb mov subl cmp jb pop test xor sahf lcall std push mov loope push xor popf repnz and pmaxub rcrb jno ret sub xchg lret lahf hlt add or std (bad) and mov scas or jo xor sbb cli popa mov adc mov dec test ja dec push movsb push xor jmp jl das xor arpl xor fild add push jmp cs gs pop xor fs (bad) int add dec ss repz nop (bad) cmp and adc lock nop movsb movsl inc lods mov repz mov push mov and pop or daa jnp sbb test cmc pushf push test icebp mov push cmpsb mov jb lcall xlat mov mov cmpl dec fsubs fimul jnp (bad) ljmp scas mov jle mov fsubr hlt or mov into (bad) jae nop or in xor (bad) jne jmp lods inc pushf inc (bad) xchg jae stos ffreep stos xor hlt and lret or out add mov mov stos sbb sahf out mov push xor push add inc pop test insb ss push xchg dec in es cld pop mov push mov ret adc xor lea imul push jb ss push add (bad) popf xor and sbb ja pop sub les xor movsb pusha ret add (bad) xor das imul in xchg xchg sbb aam rorl test push int3 lds adc jge adc imul xchg ret add out and sbb test inc inc scas sub sbb jb xor fisttpll ret push adc or xor jne nop jg and xor test in lods ja or fsubrp inc jge aam add jle xchg pop mov js cmc cli jne cmp push pop aam jg ljmp imul adc mov mov shll pop dec inc cmpsl xor push add repz mov subl insb clc adc fnstenv adc or pop add (bad) xor iret sbb jmp push repnz sbb add or adcl cs mov and push inc in loop push push dec (bad) divb xor pop scas mov sbb fcomps nop jo dec push addr16 repnz push xor xchg jns mov lcall bound (bad) or clc cmp or xchg aam push xor lahf pop cmp sahf cmc mov test jl stos sbb pop xchg ficomp adc mov push pop or xor push xor xor cltd imul xor les lahf aam fsubrl xor mov das fdivp js sub inc test xchg jmp pushf mov add jo and or test or js sub repz fwait mov mov add sti sbb jmp shrb (bad) stc inc xor insb mov or xlat loop cmpsb push bound inc sub mov in mov push or sbb test push enter cli mov xor stc push mov in mov ret clc fdivl inc out push test cs sti push aas (bad) mov (bad) fdiv inc cli adc call xor movsb adc add xchg and pop pop dec lods stc and sbb ja xor lds xor lods and (bad) out add sbb inc scas aam addr16 push jp cmp in (bad) hlt xchg pop inc imul mov rcrb scas ja nop sbb shll hlt cmc inc test sub dec fs xor rolb xor lds mov adc insl lea adc fisubrl imul (bad) fwait pop pop sbb mov sub mov adc lea stc aam inc sti stos imul xor mov testb ljmp pop in clc mov outsl pop stos xor dec (bad) out xor test add mov test xor push cmp popa ja lret scas arpl mov addl popf js sbb aam das mov xor fucomip hlt sbb je ss add outsl imul ja mov adc mov xor and dec pop hlt insl xlat stos mov lret hlt test clc cmc and cltd leave hlt jbe adc addr16 insl and stc pop je adc fs dec cmp xchg xlat mov mov pop mov xor mov or nop jno adc xor outsb and int or test mov mov call mov (bad) out out hlt (bad) mov imul xor jmp and fs pop or xor divl shr xor mov and dec xor (bad) in hlt stos xchg adc lock sub fdivp xor icebp stc mov mov hlt jle outsb cltd mov cmp roll cmp in xor mov add sbb xchg ret xor shl (bad) jo test in es jno jl add mov xchg inc repz hlt or call es jmp cmp pop push ss xchg push mov fstpt add xor sbb or jae in push adc mov adc cs push xor loopne push in test jp jl insb cmp sbb pop and les dec push out jns (bad) mov enter popa mov cwtl divl pushf push mov jp roll inc add (bad) mov xor popa jno ret jae inc std movsb sub lods fcoms push in aas (bad) scas (bad) std or adc jns adc pop aas xor inc dec je xchg in push fisubrl add jmp xor pop sti mov lods push call jmp leave incb jns push movsb gs aam movsl hlt cli outsb repz push cld les stos insb pop ds icebp xor popa imul dec sbb xor xor (bad) test repnz iret aad das fucom xor inc mov ljmp mov lods pop lret mov jp test aaa mov xor jecxz and and les mov je leave pop and mov es mov in mov movsl xor data16 aam adc mov inc out es lahf mov adc xchg dec jo jnp or cli ret fisttpl std xorb adc fs enter xor jno cmp and scas lods test mov adc jle sbb mov lret push lret sub mov out mov mov mov mov leave adc jg imul dec xor pusha lods pop jecxz mov movsb mov sub jmp adc push add movsb xor jmp (bad) mov xor mov or push xor mov add jae and test ret lret sbb pushf xor pop test (bad) mov sub sub inc or sbb or or mov or (bad) in test xor mov (bad) rorb (bad) push (bad) hlt in pushf mov sbb call das pop ficomp jae int3 test mov jae dec pushf mov and lods fstl pop mov mov and cmp inc push adc test out pushf out (bad) jno pop js shrl push cmp es sbb mov xchg fwait aas xchg xor jno inc and jb and dec stc sbb mov cmp and add in jae push sub push sub mov outsl jge imul arpl (bad) in das test scas cmpsl push push and das xorl pop xchg jmp test hlt sbb ficompl or roll and into cld xor sub sub mov pop cli outsl das pop hlt xor and and mov xchg aad xor mov mov push dec inc push xor cmp movsl push adc aad (bad) mov sbb mov cli push test add pop add sbb clc std sarl movsbl stos int and jb std ljmp dec je les movsb mov mov call inc and xor pusha nop das inc mov pop push and sbb mov and adc and icebp mov pop shrl mov inc jle inc xor mov sbb in rorb into push shlb sub popf pusha stos bound lcall enter (bad) ficomp jns aad fbstp fcmovnbe cld scas push leave pop aas jb flds add dec mull cltd xchg adc cmpsl insl adc sub jmp test cmp xchg mov mov mov push and inc sub mov adc xchg xor sbb test mov inc add or dec out jbe hlt xor push test into xchg or orl pusha fisubrl sub and sub fcoml mov popf push jno insl inc mov inc push sbb push outsb mov lcall loop (bad) dec cmc add (bad) xor (bad) fxch jns mov pop js test (bad) int daa mov sub pop pop jp xor push imul js inc lods sub sub adc adc cld add adc add jmp fiaddl xor xor push inc add ja in (bad) adc fstps jne lea or loop jge cltd loope in dec push je mov push xchg adc movsl repnz inc jecxz sbb sub test jge hlt (bad) sbb xor add loop arpl xor or mov xchg mov in popf cld rcr (bad) cltd sti int adc fmull fnsave pop mov addr16 lods movsl hlt ja xchg or (bad) sbb and fcomi ss cmp inc xor dec sub xor jns push xor pop ja or xor rcll cli lea xor (bad) mov push mov push movsl aas xor ret fnop mov test mov or lahf jb mov xor push pushl sbb out xor fs cmp lock xchg mov mov outsb inc adc xor ror ret mov inc cmp xor test xchg repnz decb jmp xchg adc jns fs js call btc je or add sub cmp (bad) lods inc xor sub test fsubl pop cmp dec stc mov xorl rorl mov xor push add dec mov out popf sbb sbb adc sub inc push bound push or mov xor fmuls mov add (bad) push sub xchg lahf out push or xchg mov test or jmp cmpsl (bad) fwait xor fidiv xor cmpsb and jno xor xchg adc or test mov lahf xor pop je cs bound xchg repnz std push call jle sahf (bad) pop js lods int3 in cmpsl data16 sti fdivs xor sbb jno mov fdivl test jne sub xor hlt rcll jg pop repz out std xor pop ucomiss sbb adc in je cli xchg je mov fwait push mov sbb mov push sbb cwtl mov rcll mov inc stc hlt je mov arpl mov stc pusha cmc cmp cmp add imul (bad) (bad) xor lea push mov jb adc loopne dec add ja xor std cmp pop mov mov outsb and or adc fildl sub mov pop jns cli and xor cmp sub aaa int3 xor jecxz fwait roll push push push (bad) outsb loopne repz pushf fsts push adc push cmove sahf mov pop mov test push mov sub sbb or jno movsl xor or out cmp lcall mov aaa repz outsb mov mov cs xor out adc push sub icebp add inc xchg and nop cs mov mov add cmc or sub decb cmp and in add jo or pop push dec cli push jae sub jl push outsl or mov adc adc dec jp dec jno je lods xor cmp (bad) jno xlat mov and mov mov into fwait jo cmp (bad) lea repz mov iret jo lret bswap xor ljmp cmc cmp cmp clc sbb int addb js sub sbb rclb fnsave pop dec push inc xor inc cld pop jnp pop stos pop insb push into mov jo repz adc mov cmp dec xchg aam sbb js and jae and fmuls jge fdivrl sub sub fs cmp xor insl push jne ds xor mov iret daa in xor mov adc inc add xor or cld or push aam fcoms cltd mov mov ret xor divb sbb out xor dec ja arpl dec outsb jno das int3 mov btr scas loop inc and mov js xor jne sbb pop adc pop inc enter or lods xor pop mov mov mov pop cmp mov push xor adc sbb xchg inc mov xor mov sbb adc loopne or inc add cmp repz xor inc js jle jl mov add (bad) cmc clc inc and out push add xor pop xchg sti sub sbb sahf not (bad) mov pushf fimul and cwtl mov sub hlt loope pop push dec push cli jl cmp xor movsl xchg add hlt mov xchg sar fsubr xor jo adc repnz inc cmp dec and lcall jae (bad) xor or or sub lret repz jge push cld gs aad pop dec cli popf sub iret lret adc jbe or add mov mov inc fcomps pop shrl jo stc je into xor mov js and xor scas mov jbe loope sbb mov out jg xor cmp pusha adc rorb arpl das jb or dec mov mov (bad) and mov scas sarb jle iret daa outsl je mov inc mov out lods (bad) lea fs lods push movsb xchg pop jge jnp lret das mov int3 loope pop clc mov jns shl lcall pop add adc fnop in jns and mov repnz xor mov sbb in fistpll xor sbb sarl arpl loope jge jae sti mov push outsl add aaa jmp xor arpl ret stos push and clc jge mov in push jge xor pop inc xor fucomi mov (bad) sbb dec stc mov push lahf pop cld lock sub sbb fwait and xor icebp stos (bad) stc xor shll jb jl jb dec pop sbb xorb jl mov (bad) jp xor add and pop push imul outsb xor loop xor jo pop and negb or or mov add aam aam and jno lock add mov mov sub call mov add lds cmpsb imul and mov inc sub jns xchg inc cmp pushf mov xor xor in loopne mov dec add xor arpl cli xor clc inc cltd xor repz xor xor dec jo aad (bad) xchg push add icebp cwtl fisttpll xchg jno inc (bad) xchg xor pop push xor sub mov ss ret jmp std xor jmp mov cmp jmp ret leave lds fildl pop ljmp push jg (bad) add andl mov jno lret lea xor xor mov rcr fdiv jne push push sbb xchg jp and das test mov rcl clc jb sub popa sbb cli outsb adc push add mov sbb jns or mov inc xor outsb push lea movl and popl mov jb je mov inc emms fwait mov (bad) in and cld jns bnd leave and rclb (bad) mov mov bound je lea sub dec arpl hlt xor sbb jg mov push dec or aad jo (bad) das daa mov add (bad) aam jno inc sbb xor cld mov cli pushl (bad) dec sbb scas adc pop jecxz test aam ja mov ljmp (bad) pop out incl dec imul popl sbb mov mov sbb mov imul cmp push insl les ja adc dec adc add cmpsb rcll mov or nop sub add pop int push sahf jb loopne lcall test mov fwait int3 adc (bad) hlt dec xlat mov mov xchg inc cli sbb mov ds pop jmp push add xor in scas adc stc lods fadds sub aad jo,pn iret (bad) or jl push push xor (bad) dec add hlt cmpsl ret (bad) repnz sbb xchg test or and jg sub jmp insl adc sub popf lcall aam inc add icebp es sub adc adc pop cltd fmuls xor or mov repnz jo and (bad) lea jae sbb xor std pop xor cmp in sbb in pushf xor mov test enter pop cld push mov sarl push popf jp xor and dec push xchg or xor into es pop sbb pop jno jl imul (bad) scas xor idivb inc fdivl xchg rcl out mov jns and fisttpl push mov mov xor mov push mov ja sbb das mov insl xchg mov and xor shrl out push pop negl xchg xor fsubl lcall jle lods inc call out jge lock hlt cmc adc insl xor and push jo loopne cmp add cmc sub loop in xor jne xchg sarb xchg fisttpl sbbl jle repz test and cmp and in pop and dec inc jmp and sbb and add xor and push inc sbb or enter sbb inc outsl pop sbb inc sbb sub push pop pcmpeqb or mov ljmp (bad) ss out lret xchg and inc in xchg xor imul aad xchg fwait or mov sub mov lods xchg xor jae mov out inc xor push adc mov cli popa stos hlt ficoml xor jo mov lahf xor mov mov mov (bad) aaa xor mov fidiv enter mov popa mov mov jb mov mov push push test sub jno test sbb fisttp mov jns jno and cli xor je push adc mov xchg push mov dec and mov xlat push cwtl out hlt and mov add fdiv sbb test xor xchg (bad) call jp stc jnp sbb mov push push xlat cmpsl loopne push sub jno xor xchg aam cs mov jno pop sbb pop sbb mov insb push and sbb scas pop adc stos mov add inc xchg fsubp lea sub push (bad) jo xor sub ss test mov (bad) jno jnp loope adc lret fwait jno test mov mov inc cmpsl pop xchg mov test and cli pop xchg mov cmpsl sbb test lods and xor mov cmp adc jno mov inc sbb (bad) ss push or xor jbe in dec xor xor (bad) mov int push lret jae mov jg imul sbbb movsl xchg xor xchg mov jmp inc mov mov sbb fildll in test gs les scas cli or mov xchg fwait aas call repz repz hlt mov or lret mov mov cmpsb pushl sbb cli cwtl notl sub shrb jg mov repz add inc inc jno stos xchg mov psubb xor sub aam lcall into mov sti out xor (bad) mov cmp stos stos and les ljmp nop and and (bad) mov jmp aaa push lds xor sub call xor xchg pop and test and cmp xor and test adc push les mov ds xor xor dec out mov sbb loope jo loopne stos push cmp das std sbb les sbb popf sbb (bad) sub adc packssdw push adc dec xor sti mov mov (bad) imul nop dec or inc pop gs cmp outsl loope hlt fisttp sub dec push cmp outsb push dec adc jle or push sbb adc and sahf fisttp dec aas mov adc hlt dec inc mov sub xor sbb sbb push xchg iret enter add xor mov jmp pushf xor and test mov in dec adc xchg xor aas push add xor jno orb and cltd xor cmp (bad) cmc in mov fs mov dec stc outsb cwtl es popf push jg repnz outsl xor pop push jp xor addr16 jo pop out mov push adc adc (bad) jge hlt aaa fwait add es xor clc ret xor insl adc lock mov mov jns test jge adc sub pop mov cli xorl cld out dec es adc je je lahf and pop sti fstps sbb out adc movsb xchg mov rolb ficompl pop jae (bad) out push mov mov stos mov fwait hlt lret into loop mov movsb mov ljmp pop jb mov add xor in hlt jbe xlat jp out loope inc sbb cmp xchg xor (bad) add xor outsl fildll test and jns adc idivl push faddl aaa arpl dec add push mov je jno daa xchg (bad) ss mov jnp mov scas and pop (bad) daa icebp jne add (bad) cmp pop or iret hlt mov and es mov xor jno lods in aam ljmp test fs test mov pop mov sub movsb push xor pop inc enter mov cwtl pusha adcb lcall lds das xor jne and (bad) mov sub and xchg mov scas mov fnstenv mov push cmp push pop sub loopne dec or imul pop dec mov dec add loope cmovae sbbl ret mov aaa sbb inc (bad) testb mov out jmp xor cmpb push hlt sub pop jg in dec cltd xor inc dec xor push jnp in jge xor cs xor xlat add test bnd pop xor adc (bad) out enter xor popa xor inc popf push test bound jp out loopne leave push clc inc and lea add pushf outsl mov pop clc jmp push (bad) and pusha sahf xor mov jle cmp mov imul push or and cs (bad) fstp jae xlat repnz mov cmp scas or xchg sub stos aaa or lods xchg or jo sub in je pop xchg and add xor sbb lret enter inc loop in dec sub addr16 xchg pop pop arpl stc mov mov xchg adc in loop xor je insl repz lret (bad) je jp int xlat jne xchg cmpsb aam cmova insl clc cltd xor push mov mov add pop stos pop enter das pop xor pop xor sub lret lods inc xor sbb movsb ss sbbb mov (bad) push add push nop mov subb xor xchg gs ficoml sbb pop insl repnz cli add pop sbb or mov mov call into std fldt out jo xchg add das adc test sub lea xor xor fwait (bad) ss or aam add mov push cmpsb gs jns f2xm1 test rorb (bad) inc cmc jb mov cmp jbe cli push sbb sub inc ss jae out and sbb rclb sbb je xchg mov outsl jnp aaa push sub push aaa (bad) dec icebp sbb stos jmp je cmpsb std cs mov xchg rcrb pop dec popf mov sub jb xor sbb bound sbb adc push jge mov orl push test rclb mov inc mov xlat push xchg outsl sub sbb push sbb dec or arpl or (bad) push cld adc sarb add rcll cli popa iret cmc cmp or xor repnz push popa sub inc cli sub dec cld adc jb adc sub and sub mov clc popf jno adc mov hlt xor icebp sub add mov jae inc in inc push outsb decb jo mov incl mov test cli int mov xchg push ret pop jle jbe icebp (bad) aad sbb stos lea aad mov pop int stos dec jno mov lahf scas and xor push lea cld cli pop xchg ret push push outsb mov and add pop mov hlt jbe xor mov mov (bad) loopne jns add lret pop adc mov or hlt aad rorl xor add daa mov cmp fcmovnu (bad) sbb pop pop xlat mov rcl xchg push add in and xor sbb std sub dec out pop jne shrb xchg fldt sbb mov or lcall test xor les aad (bad) push or xor subl pop sbb stc pop arpl dec dec adc xor fs push daa sub push mov xor mov inc or insl sbb dec psubusb repnz sahf sub std mov mov mov pushf xor adc mov or je stos (bad) pop inc mov mov mov fistpll sbb push outsl ja popa fdivl nop xor lret xchg sub das sbb mov xor incl mov sbb adc fistp xor in pop loope repz scas cmc or adc cwtl sbb mov jno jne push mov jno les andl inc ljmp jecxz xor pop xchg mov ds hlt jge sub int3 popf lea add and xor fxch test add sub stc push xor hlt xchg dec xchg xchg mov out lock cld ss sti adc xor xor les loop addr16 repnz cmp js xor xor ret out mov daa or shrl aam pop pop push inc xchg je lahf mov les inc aas sahf adc xor nop sub pusha mov xchg push fsubr cmp shll sub mov xor sbb cmpsl xor shr lahf getsec rcr xor aam loop and enter xchg fs fist push push xor (bad) jge loope paddb je xor push lods rolb lahf (bad) xchg xchg mov inc outsb add mov outsb or fs dec ss inc leave jp mov (bad) in sub lahf repnz hlt mov inc push sbb adc xor fwait mov (bad) mov stos (bad) mov mov mov daa leave and mov sbb incl repnz test jmp test fs ja push mov stos adc cld jo sub pusha sbb jle pop and jp,pn and mov pop aam mov xor rolb mov add decl sbb hlt in pusha mov inc mov dec jae mov test jb xor dec inc cmp out lcall jne gs das aam sbb fcomp inc sbb test pinsrw fcoml dec or lahf out add cmp into push and xchg dec mov gs xor xor lret (bad) cli mov xorl push adc adc or (bad) jmp cmc mov pop add xchg xlat pop adc lret mov inc sti mov ljmp lret and imul mov popf out xor lods lds aas in mov lahf sub repz jl xchg and lahf push xor mov mov and jp mov rep cmpsl xchg fsubrs sbb dec jp ret int3 repz mov arpl push fcmovne arpl cmpsb or sbb ja and mov (bad) fistp test dec xor inc and dec ja or mov mov aam cmpsb mov cmc sub je stc mov and lods mov loope je or and or iret stos outsb pop or aas int jl (bad) (bad) in sbb repz mov pop aam pushf cs je das sub sub hlt daa sbb lret adc cli push xor into das mov jo int3 mov shl push popl pop sub fs imul and jb pop add adc jo add daa jae adc xor or adc out push dec dec sahf xor stos inc sub repnz cmp mov jl xorb jg lret xchg bound dec dec pop xchg push lret push add out xor xor or movsl push mov fcmovnbe insb cs jns aaa out cmpsl pop fnsave inc xchg xor popf mov cmc adc push inc fdiv (bad) clc cwtl mov rolb sbb sbb xor pop inc jns popf cmpsl add scas xor jnp (bad) xor xchg pop or inc sbb xor popa pop cs xor or or sahf xchg and cld xlat adc push adc cli add hlt outsb push (bad) push inc xchg push in lock pop cld test sbb mov imul xor jbe and sub ds xor sbb jno outsl jle ret pop jno mov nop mov dec dec xor loopne jns xor cmp xor packssdw xor mov push or or adc adc test das stos pop jae lods or (bad) mov adcl (bad) dec jb imul xor jno test mov test sbb incl jecxz push xor imul inc rcll insl xchg sbb push mov sbb loop pop lcall push rep xor outsb adc xor sbb (bad) xor cmp push pop jns int movsl mov cmp shrb mov jno out sub inc mov test mov js xlat xor daa call imul stos cld rcrb jb test sub mov rorb sub or mov addr16 sbb xor aas (bad) mov pop into repnz (bad) push mov pop xor xor mov (bad) and insb xor push pop sarb in dec push pop cli cwtl movb push imul les add cmp xor cltd sub add jnp clc mov loop mov fs imul inc xor pushl jno call sub imul sbb sbb lea popa mov and addr16 push cmp dec xchg inc test dec jmp xchg aaa push stos mov mov inc push and cli and nop leave jno xor sub out mov mov mov (bad) (bad) cmc xchg add loopne mov lret xchg fs push dec leave sarl lret loop mov adc imull mov inc mov jl pop pop add add cli jae sbb jg cmpsb jno daa jge dec sbb xchg pop lcall mov cmp mov adc imul cli into xchg and scas push rcl xor push pusha cmp xor mov daa in test ds adc enter les sub hlt mov test mov sub sbb test lret xchg xchg je jae sbb sub dec mov je pop xchg shl movsl repnz pmaxub sub rcrl mov out rorl add mov in sub adcl add fiaddl and fwait xor repnz cmc hlt jno add jo int aam sub popa nop push fwait and loope add and ret ljmp push adc rorl sbb aas and xchg jge push and inc push cli out sbb rcrb nop xor inc cmp push repz inc inc ss outsb insl in outsl stc pop (bad) push push adc cmp sub jb or je dec idivb rcrl cmp out (bad) lock (bad) in xor pop xor subl ja adc or mov adc jp lret dec add push out pop and je xlat rol cmpsl scas cld xchg pop xor cwtl in je (bad) ficoml push outsl cli daa mov icebp add mov cld dec cld cli mov inc subb popl dec xor mov jg xor outsb push xor pop (bad) cmp dec xor je in mov fisttp fnstsw outsb jae mov push or imul scas xor dec mov (bad) push and dec inc sahf bound lahf mov and and mov xor pop test cld fs xor push inc xchg xor in cmp int (bad) fnstsw dec popa sbb out (bad) push xor js ret inc inc aad xor jb mov popf push pushf std xchg adc je roll fwait ret adc inc xor jg push (bad) pop addr16 sbb outsl and cmpsb add fwait cmp mov xchg jb and mov mov xor cld sti pushf or mov mov dec shrb test xor or ret stos jae sub gs in repnz inc pop or push aaa fist addr16 cmp adc sub aam (bad) pop xorb insb sub xor pushl jbe push push aas inc mov pushf jno mov idivb imul cmp inc mov (bad) sub daa mov mov hlt pop ret dec push ss aam movsb pusha xor sub sbb jmp xor insb mov cmp add hlt dec push sbb pop clc dec std xlat pushf mov add mov loopne sbb xor mov xchg add cmpsl scas adc hlt push mov or adc mov xor lcall rolb data16 mov gs xor ljmp sub shrl ja xor push gs cmp cltd and add (bad) jmp push sbb cmc sub inc fnstenv xor loop rcll gs lret adc adc std outsl mov test xor mov jno sub sbb push repz cli out adc repnz fcomp xor jnp add add popf and and xchg jns das adc or add cmp out push cltd incl stos dec push and xor jmp push mov mov imul daa pop repz lahf mov into inc (bad) and mov scas mov ds lds sub jae push xor not out mov cmp cmpsb pop je add lret clc mov add cmp xchg cmp xor ds jle jns data16 cli dec imul in push (bad) xor jge cmpsl leave jo fldt cli push jae xchg dec and repnz mov inc in sbb sub aad push iret sbb jb xor cs pop call push jecxz addr16 sub xlat jp out loop sub (bad) aas or fstps test xor mov jns inc hlt aad jmp fstl loope (bad) or out or ljmp and sbb imul xor mov and push ret roll out mov (bad) in dec mov inc hlt gs lods std fmul es or and mov es cmc sub std test dec and rorl jb xchg sub loope hlt mov out shrl int sub mov (bad) mov dec pusha cs outsl bnd mov push stos pop adc sti test lcall jb push pop dec fist dec clc push ja aad paddq fisttp xor mov dec je fisttpl xor rolb mov inc sbb hlt mov lock lcall mov mov in or xchg and insl jge adc pop (bad) mov loop jmp xor jns (bad) push mov adc jbe repnz movsl xor lahf jae pop lea mov add add outsb and mov fmull mov adc xor arpl js outsl pop (bad) xor in mov and cmp add cmp pusha sub hlt or decl notl in mov adc popa (bad) xor or ss je cmp push mov mov add out (bad) xor mov mov std or push sub scas xchg mov (bad) pop xchg repnz dec jb adc mov mov xchg jg cs push faddp popf pop xor pusha stc jle jbe and imul mov cmc cli push hlt xor pop xor sbb cli pop or scas jb call fnstenv xchg push lcall and jae,pn mov cmpsl mov xor (bad) imul mov jmp (bad) icebp jae push sub adc adc (bad) cmp frstor jecxz scas lea add and dec mov (bad) hlt js in dec cmp mov mov and push jge,pn dec xchg pop shlb sub hlt sub xchg scas mov lcall sbb sub scas xlat int bound pop or (bad) cmp mov adc pop sbb lcall sbb js call mov mov mov mov arpl lret les jno andl xrelease mov sub mov dec mov pop inc scas pop or push cmp mov xor dec ja cli scas (bad) xchg jae (bad) mov mov mov xchg repnz mov sbb jb mov sub pop adc addr16 cltd shl (bad) lcall stos xchg lods fxtract sahf lret (bad) in jle out sbb or push enter popf int3 push lea inc jmp add cmp mov in sbb jae and in movl xchg xor add mov in movsb fldenv xor nop adc test jbe pop mov in xchg sub inc push jno mov jnp mov stc fcomi stos lahf xorb adc sbb xor (bad) sbb out aas mov xchg adc and mov add hlt jp les ficomp ret test lret xor jmp cs mov (bad) jp pop and lea add out lret lahf es sub mov ss imull mov xorl fcoml pop repnz pop mov fwait pop sti xor dec repz cmpsb add jae (bad) loope mov daa push daa and loop xor and imul and pmaxsw js (bad) jno inc (bad) incl je je rcr (bad) mov mov push jb (bad) out xor lret sbb cmp push lds jno push cltd sahf jno das mov mov js xor cmc or nop (bad) jecxz stos sbb lock xchg aas mov movsl mov repnz enter movsl cmp mov jbe jo cmc inc ret cmp fist xor or cmp mov mov dec in pop inc sub cld dec jnp into (bad) push mul sbb jg mov addr16 scas jl mov xor gs scas add imul push dec nop loopne out adc cld mov or cmp xchg dec je jbe mull and xlat mov mov sub dec push push lret outsl mov test out inc in js add (bad) xor and outsb loop hlt jl cli lret mov gs jecxz pusha sbb in je xchg push out mov rcl roll xor addr16 push cmp pop lods xor add adc pop jmp mov mov and aaa mov dec xchg repnz xor shr leave mov cld adc and dec lcall in xor pop adc rorl adc xchg loop push test cmc xchg mov jmp shlb sbb movsl sbb out lret xlat jno test add mov sbb and xlat or push inc call and pop xor sbb popa jno add jae or sbb leave jno push dec dec adc add sub arpl loope mov mov jl (bad) cmpsb iret daa and (bad) bnd xchg test mov sti enter insb cs xchg sbb jo xor enter repnz push jge int pushf mov xor sbb daa iret in fwait (bad) fstpl clc test mov repnz sub jmp mov mov popf leave in dec cli adc int test dec sub pop xchg pop pop (bad) nop adc into das scas push jmp cmpsb xchg ja xor out and push xchg and mov sbb and into or cmpsl fnstsw mov cwtl scas das out and divb lret ljmp (bad) mov sarb dec push shll and sub cli xchg fadds mov pop ss dec xchg jno testl mov sbb incb rorb cmp lods lock mov mov sbb and sahf xchg add fnsave mov (bad) pop sar pop mov adc jecxz xor mov mov jle scas rcl mov (bad) fwait pop test std int in cmc sub jno sub rol or outsb (bad) aam cmovnp xor mov and pop xor jle ds popf adc test adc adc nop jbe or adc push inc rep (bad) adc outsl clc xor sahf adc lods jae jecxz aaa insb out mov (bad) xchg xor adc lahf push dec cmp cmp ret jno xlat in inc xor ja mov xor mov cwtl cld outsl (bad) movsb pushf gs push mov add xor fcompl sub mov jp rcrb xor or inc or xor push mov repnz hlt mov mov test add lds je xor jb and mov inc dec sbb and jmp pop fidiv shrb stc adc add pop dec push in mov aad cmp jl add fstl push aam xchg sbb dec cli mov or push inc sti push pusha out aaa ss lret hlt cwtl ror push pop cld cld sbb pop lret neg hlt ret rolb roll adc insl cmp rcrb cwtl cltd int3 in aam jae pop cmp adc push pop xor idivl or cmc sub fstpt ja into std mov and push lret pop xor dec cmp daa inc xor push test dec flds jle jb mov jge add rcll dec jo mov or in jae pop mov (bad) mov jbe hlt push mov xor ja xor bound jnp pop sti or xor ret mov andl es push lahf loope lods xor mov cmp movsb cld inc loope mov orl or xor push inc xor insl sub test or jp popl dec into mov sbb sbb lcall inc pop minps data16 (bad) mov repz bound adc mov aas (bad) jns icebp rcrl xchg sbb repz jo jne mov and mov cmc (bad) int mov popa xor mov mov int js das xchg adc sbb xlat (bad) pop add ja dec cmp or add xor push lock test sub jp mov je adc aad hlt xor pop and repz mov mov or repnz ss sub push jmp in sub mov xor dec jnp add xchg sar inc call mov ficoml adc pop ja jne aas (bad) jae jbe (bad) fsubr sti pop jne lret adc sub push add flds mov je out fmull scas xor test popa xchg mov xchg repz pop mov out inc mov jge call stos hlt clc inc sti clc movsl nop call es push lahf and flds loop sbb loope jns xor add inc rep inc cli push jg mov add sub xchg int lea cmp sub ljmp mov (bad) data16 xor mov inc pop sub xorl ss out xchg stc rol adc lods nop jne gs (bad) (bad) (bad) cli xor pop sub adc sub stos push inc or add fdivl and xor nop jle call shr xor clc enter outsl mulb aad arpl out popf dec cwtl push push ret mov and je inc rcrb pop xor jns fistl xchg iret push rolb pop mov sbb fs push (bad) dec cld dec or das sbb adc pop insl loop test adc jne mov scas insl decl adc adc cmp mov es daa or cmc dec pusha cmp inc xor mov sbb loope,pn outsb push mov mov icebp pop lcall ds mov imul sbb jne push (bad) sub inc daa addr16 jb or popf mov (bad) aas ficoml mov cld or clc imul pop stos out or daa lret (bad) mov movsl sub hlt (bad) ljmp xor mov nop roll or sub outsb and mov imul std cmpsl mov fildll sbb subl shrl scas dec adc cmpsb mov in fcoms xchg andl push cmpsb in mov cmp lret and pop mov imul inc or cld repnz jmp in mov and push insb sub mov or inc xor movsb jle xchg (bad) xor fnstsw adc jae or daa pop adc xor and adc js sub dec xor cmc pushf jg xor gs or scas adc pop mov test xor mov cwtl and sub repz into shl xor lock push (bad) push push dec cmpsb cmc insb push adc add cmp mov inc pop ss aad mov movsl jg sbb jecxz pop sti mov and hlt xchg clc sub sub ljmp ja out push lea sbb pop push or adc xor mov mov xor mov add (bad) testl pop mov scas add sbb sarl xor push xor sub aam cmp sti jo pop std rcr dec pop adc xlat jno fdivrs jae push push dec pop inc sub xor add pop inc mov mov dec fsub sub push pop int3 popf stos or dec jmp popa add fldcw dec mov inc pop inc jae fidivr ja xor sbb ds leave decb fstl sbb cld or pop cmp lods frstor dec add repz push cmp mov push in dec add scas sbb inc push and sti and imul or outsb xor cmpsl or adc (bad) push sbb and mov add gs adc pop repz in jb,pt pushf cmp sub mov adc stc int mov mov (bad) arpl inc outsl aam mov nop jp dec sub mov push rorl gs stos add adc fwait mov arpl aaa push xor loopne mov std in cmp adc test subb (bad) xor dec sub cld dec mov mov popf test pushf divb sub or fdivrs mov nop (bad) xlat hlt pop push mov aad sub mov xchg mov jecxz pop dec push inc and out negb loopne or or cli es aas jnp xor cmp shlb out out fidivl and cltd rorb adc xor bound lret ljmp add pop xor mov pop addr16 xor int iret test add in and andb hlt mov aad sbb xlat pop ljmp movsl movsb sahf adc jge pop sbb add (bad) repz fwait dec add inc adc inc out (bad) cli xor sahf pop xor dec cs (bad) hlt sbb and adc pop cmp adc mov adc add cli xchg sub in jne xchg push push sbb in xchg lret mov and hlt add (bad) aas or hlt arpl mov stos sti inc rcrl sbbl jae jmp sarb adc mov movsl fs jmp xchg push pop inc jno add mov mov sbbl pop jae into jnp out cmp mov inc das loopne cmp repnz data16 outsl ss cmp insl ja pop cld ds int cmp pop mov cmpsb jle repz sbbl cltd jno or or mov out mov fcompl in mov lahf push iret cmp push cltd test cmp fcompl jno clc xorl sbb and and mov das aam and iret je int3 mov mov dec insl lods or aam into add cmp cld and inc aaa mov cwtl leave mov xchg push jno and and dec aam xlat stos sbb adc add fdivr sbb xchg fild and inc rorl or adc (bad) mov pop inc (bad) xor mov hlt ja cmc (bad) and jae add les test leave mov sub in xchg gs cmp pushf cs (bad) out mov mov test xor push pop js int3 cmp cli fstpl or sub xchg or sbb rep mov (bad) mov xor xchg mov hlt out lret adc push pop or lea mov stos arpl iret dec xor push jmp (bad) add mov xor into and xchg pop call lea adc and inc ss pop fcmovnu rol scas mov stc stos gs pop xlat jp xor inc jb into jle mov test dec cmp icebp (bad) lret out inc pop gs or iret xor insb dec outsb (bad) xor mov lcall push xchg stos mov stos hlt insl xor (bad) mov mov pop pop (bad) jmp xor ret cmp fnsave loopne jecxz mov add add shrl sbb ss xor nop mov mov negl mov xor sub xor hlt lods fs and cmp jp fcoms xlat add lea pop inc insb xchg cmpsl inc stos xchg nop sub push push dec mov popf add sub loopne pop or cwtl or es (bad) pop mov enter and gs dec idivb sbb mov cli (bad) ja sbb push stos imul std mov ljmp insl adc push push sub xor test xor popa add fsubp inc subl push out into mov push sub cmp sbb loope (bad) adc dec xor fcoms lcall jge sbbl jo jno mov cld sbb loop xchg mov rorb or xor pop add cmpsl fmul int3 mov aaa popf aad sub repz sbbb aas mov lret insb insb mov add lods lahf outsb jb or xchg add (bad) mov xor push push pusha stc in pop pop dec in pop sbb test push add mov stc test popf push jecxz faddp sbb call fstpt pop movsb (bad) shll cld mov xor cmp mov sbb flds mov adc mov mov xchg insl test cmpsl adc adc ja jmp mov mov out inc mov scas shlb mov mov out adc adc data16 es in dec sti stos jmp pop add or sub cltd xchg nop and push jne adc stos jb fistp mov adc daa imul daa test sbb in out push pop repz dec rcll push in push (bad) adc pop ja sti stos mov shrl lcall adc gs andb insb iret jno fistpl adc inc fcompl iret pushf pop push jae and jmp inc fs mov inc mov imul cli push in jns add popf jb (bad) (bad) cmp and jo or pop dec mov or xor jnp roll cld mov sahf mov fwait pop andl fisubrl or out fnsave lods pushl push jne dec cmp xor dec (bad) and push notl insl mov jb lret adc push mov enter xchg lds bnd xchg mov or lea imul add repnz mov jae lods push dec xchg mov sub jl xor xor test les inc pop cmpsl sub inc push add ret scas mov data16 sub and pop sbb mov cs and dec repnz push cltd icebp sub sub stc fldt xor cld cmpsb and repz sub sbb bound pop and rorb icebp xor cmc push and inc push jns stos loope xchg cmp sbb fmul adc adc mov ja out mov xor out dec and xor cld pop aam shlb decb add sbb add lds mov lahf push pop mov pop lret adc std gs xor push pop or pop (bad) mov xor xchg or je stos outsl (bad) hlt jnp ffree pop xor out pop push dec xor dec add cmpsl les (bad) roll aaa ljmp cltd xor aad clc xorb mov sub xor cli mov and popf fsubrl (bad) hlt jo mov xchg dec lods pop inc xor xor repnz mov dec jno cld (bad) fnstsw xor adc cmpl (bad) repz push out push data16 mov sub je xor lret (bad) push mov xor icebp test imul adc jno jg xlat xor sub and in add push fs lods push jns bound xchg xorb mov hlt outsb inc push rorl out and push mov dec pop aaa mov mov sub dec sub movsl std aam cli lea adc push sbb inc shrb cli jp repnz and mov pop and leave rcll cli push fisubl aaa push push andl or lret jnp sub leave jae ss add adc outsl addb adc int mov push cmp (bad) les in jbe jae fiadd (bad) aaa add imul fisubr in das xorl xchg add add jg lds adc cmp in xchg cmp sbb xor leave sbb repnz lret test adc cmp inc add mov std sbb or adc mov mov lods adc and xor adc arpl lret sbb stos (bad) aas inc in xor gs int3 or bound dec cs or xor adc adc cld and lods mov mov imulb (bad) xor hlt push cs and xor xor fsubrl jae cmpsl or aaa push dec (bad) mov loop xor adc sbb cmpsl adcl daa sbb nop mov or mov jg pop pop mov push mov jg sti nop daa add movsb xor xor aad sahf imul test cmpsb repz mov cmp bound (bad) loopne mov jge sbb mov and aaa mov jmp call or inc in sahf inc mov nop popf xor popf adc mov cmpsl rcll push mov pop lcall push je dec xchg out je sbb pop movsl js sbb ret dec ret imul inc fsubl std les sbb mov pop adc push sbb sbb shufps xchg (bad) mov movsl mov scas sub and adc and jae jno add dec dec ficoml mov xchg ret push and pop push add (bad) loope and cmp xor mov dec sub adc jge dec jle push es add inc mov xor xchg mov jnp cmpsb rclb cmp jbe xor (bad) fdivrs scas cli inc aam pop xor lahf hlt add repnz adc leave lret test lock stos xor loop push fidivl push shl lret jge jle mov nop iret add sbb sub fstps xchg mov stos arpl (bad) mov gs mov mov sarl mov ja mov jae dec adc cmpsb repnz aaa adc icebp xor or adc cmp xor daa push ja xchg sbb adc add (bad) push fdivs movsl gs nop dec mov xchg or jo (bad) jo pop sahf mov nop mov or (bad) das fildll and adc ss ja rclb int3 rcrb add jl movl mov sbb movsb push test dec jo addr16 clc mov daa test xor and jge xor fist fsubrs sub cld jle adc shrl (bad) mov (bad) mov inc mov add cmp or or dec je cwtl mov in adc mov sahf je hlt repz (bad) rorl loope and adc mov (bad) mov push xor aam ret or pop pop xor lea test cwtl data16 add push sub push sbb mov pop xchg mov inc or hlt sub lea lods mov jne,pn flds (bad) aad and cli xchg cmp adc push daa mov scas in push (bad) xor mov sbb jo scas sub pusha ja sub mov mov pop cmp pusha jge dec jb out push lock in lret and mov (bad) ljmp stos out (bad) icebp jae stc lahf mov fmulp jb push out int3 int3 gs add xor inc mov pop adc push je bound jg mov jb sahf iret lcall fisttp inc lods cmpsb adc cs fsubrl mov mov push mov popf (bad) repnz xorl xor int3 xchg dec repz orl out and repz sbb subl lds add pop dec cli ljmp xor add cmc pushf repnz jge loop loopne xchg jo xor cwtl es addr16 mov pop imul pusha adc int3 test sub (bad) fidivl push lods dec pop sub sarb cli pushf insl mov aaa dec lds adc je cmp jecxz (bad) add jae rorb int3 sbb cmp repnz adc sub out push leave nop or push fwait scas or cs mov xchg add adc sub add cwtl stc add hlt mov ficom or ja pop outsl pop add out sahf mov je xor push pop pop cmpl lret mov mov iretw cld mov std pop insl jae sbb int xor inc inc sti pop jp push pop xor xor mov insl stos jb mov mov (bad) scas cli (bad) xor xchg int hlt mov (bad) jbe push movsb pop add outsb xchg jle aaa mov stc test push adc push and adc sub rorb mov movsb xchg push repz cmpsb ljmp jmp repnz sarl lahf cmpsb pop xchg xor out cmp xor aas push ret sahf sub cmp xlat or jae mov lock insl dec sub in sarb xor xchg jg (bad) xor mov mov adc xor in jecxz dec xor jmp push shrl adc xor scas mov adc cmp inc les push test add insb adc orl stc add ss icebp ss insb pop and push (bad) int3 jg mov jl mov cmpsb sbb mov mov bound xchg mov cli adc enter movsl pop fwait jae xchg shl xchg sbb hlt mov xchg test and mov inc adc jge dec push sub lahf mov bound jb iret jecxz repnz push or inc xor jmp ret xlat popa lods and test pushw sub bound pop jle repz stos arpl xchg idivl std and in arpl push movsb jmp xchg imul bound xorl inc notb mov fstpl movb cwtl push adc cmp adc out cwtl cs pop mov mov fsubrl shlb les pop mov aas adc and loope,pn adc sub pop jno add rol (bad) icebp jno stc push push mov inc xor cmp pop scas xor les sbb fs daa mov jo jb jno fmuls mov push lret sub push push mov xor mov rcl xchg or xor pop or test sbbl dec hlt and cltd decl shlb push xchg (bad) int3 or mov inc insb sar xor enter mov dec lock sbb dec and cmp sti push mov call xchg mov xor outsb add jge pop test sti jg ljmp mov pop and or loope and push mov or lahf dec lods stos jno xor lock bound lcall cmp sahf dec push lds xor sub inc jne fldenv cli insb sbb fnstsw icebp and cmc es mov dec cmpsb adc cmc mov (bad) out sbb fnstsw xchg add sub add insb pop out adc movsb push and xor repnz add clc mov jne xchg and jo andnps pop adc jb push (bad) xchg mov adc enter fidivr les je inc test dec and fs cmp push sbb push ljmp mov mov je pop push mov and add pop sbb scas adc or sti sahf addl das jnp fld cmc loope test mov pushf xchg lock jge mov fsubs mov push pop shrb nop (bad) insl test mov jae cmp xchg sti pushf xor test hlt mov mov xor pop adc sbb sbb mov sbb adc leave adc test mov aam push fisttp mov xchg mov add fnstenv std xchg and jne adc push aaa cs pusha aaa sbb inc imul jmp sahf adc sbb dec popa mov push (bad) mov imul sub push and sbb and fnsave lods iret inc push shrb and jno adc dec je jg (bad) push mov mov popf shlb cltd jle adc add outsb pop inc push adc mov movsl (bad) or aaa adc in xchg (bad) cmc les xchg pop jnp fdivs jle mov bound pusha lds dec xor xorl cmp (bad) mov arpl add repz out sbb add xor mov mov adc out insb pop mov mov and lcall in dec mov (bad) dec add fadds rol jnp hlt sub add je dec inc aas jnp aaa xor push dec out outsb and fildll stos cmpsl adc push clc push scas pop xchg loopne adc and ds test sahf test scas adc cmp aam int cmp jp mov lahf insl daa xor inc jne xor push and out pop xor dec or imul cmp xchg inc xor cmpsb dec xor test add in call adc xchg pop xor sbb movsl jno (bad) mov jb mov cli lea or sub loopne stos cltd add xor xor ds mov mov cmp mov movsl or clc fdiv adc (bad) mov repnz sbb mov test pop dec lea xor sahf aas xor inc in add mov inc ljmp adc xor repnz pushf xchg es xor or inc aad cmc mov xor je xlat aas nop mov das mov sub cs subl aam jp push lds inc and xlat mov aam jns dec repz nop mov pop mov scas mov inc imul pusha mov ficom test sbbl ds add xchg repnz jmp xor movb jb add or scas sub xchg hlt jp jecxz mov xchg xor mov xor aaa inc fmul movsl cmp roll aam lock fisubl jb in adc push in insl jge inc lds dec mov jp je push cli add and enter imul (bad) xchg push inc mov push jmp negb jp add aam aam pop nop jnp xor addr16 fidivl jno sbb nop (bad) pop xor cmp divl insl inc add xchg movsb es xor and add cltd pop (bad) loop adc xor arpl cmpsb mov mov cltd out into sub adc xchg je mov dec jo movsb pop xchg ret sbb cmp scas cli (bad) mov jns sbb xor mov cmpsl imul std into loopne mov inc in cs sbb lahf ljmp jp movsb ss or xor bound push mov pusha xor pop outsl shlb xor lahf cli addr16 jne mov lea jge mov out xor adc push scas mov (bad) mov xor inc jo out jmp test sbb mov mov sbb xor or mov adc or xor jl add pop pop xor and arpl mov push ljmp cmpsl push mov or or sub jge sti in test ljmp mov xchg mov adc dec repnz ffree xor inc repz or lret sbb mov mov ret add push aam icebp dec push xchg (bad) adc sbb dec std lock (bad) sti data16 js or ja les divb push adc xchg scas cmpsl sti pop popa xor mov cmp cmp ds mov xor dec push or in push inc stc and mov and (bad) aam sarl lret mov shrb add (bad) loopne xchg (bad) jmp mov je (bad) cli data16 push xor scas jecxz jae in pop and jno inc inc push xor ja or ret pop xchg mov sbb xor sbb xlat inc xlat add aad jge cmp dec shrb mov mov pop cli xchg (bad) sbb cmp inc inc or test push and push add test popf and jb popa addr16 sti mov repnz test adc mov pop adc or icebp iret clc out xchg jbe mov xor out mov faddl cld push xor xor xchg test and xor add inc mov lret outsb stos cld xchg adc and fcoms xorl mov xor dec xor pop int3 mov adc sbbl repnz in and add inc adc mov (bad) mov daa lods aam sbb mov sarb xorl jp xlat adc ljmp inc mull clc call inc mov js mov test call cmpsb lds lahf xlat in rcrb mov xor jns das andl mov repnz xor cmp fsubrl jmp cmp inc adc sub leave nop add hlt push xchg hlt mov sbb xchg pop adc hlt mov or add mov add inc clc je lods in shrb adc adc push lahf push inc pop dec jae push mov sbb addr16 push (bad) repnz or add aad add xor push mov nop push iret pop xor lock rorl xor ds dec adc jmp pop and or call sarb pop add xor enter movsl popa xchg xor lret getsec imul pop and jg sbb mov cmp and jmp hlt out outsl and lcall sahf dec repz inc mov or xchg shll cmp adc mov jg mov push das adc and movsl push addl insb jp jmp jo mov vpaddsb popa push mov xchg adc and incb aam xlat mov xchg adc fidivl mov pop push pop lahf repz and sbb sbb or mov and nop xchg stos sahf mov roll lds jae mov aad sub sbb or dec mov push and movsb ds mov and push mov (bad) mov or and dec test inc sbb aam mov rcrb outsb mulb mov add in sub subl test decl mov xor cmp add push dec xor mov xlat or adc cwtl fisub lods mov aam repz mov add xor cmc mov jo std ss cmp adc mov xlat sbb fstps sbb xor push fldt pop aas xor test iret and ss jmp dec loopne xor push mov cmp xor jle aad lea mov mov xchg fwait pop sbb inc push add xor addl xor es aad mov sbb lock and mov repnz aam sub dec outsl lcall xor pop mov leave call cmpsb xor pop fcmovb dec or and dec adc clc adc loop pop sbb mov xor push xchg mov or jns jl cmp adc push dec cmpsb xor and jp push xor add jl mov (bad) jg jo orl popa mov fdiv xor mov pusha insl jne pop arpl xchg out adc jns jae cmp fs push (bad) xor (bad) out mov jp sbb adc dec dec mov int mov gs and outsb xor push xor xor xor hlt scas iret sbb mov push xor es fldt xor (bad) mov sub xor jg mov and xor and popa push add ret mov cmpsl push je repnz sahf je xor cmp adc lock arpl push xor in xor fwait dec movsl mov adcl in in movsb in adc pop xor std and xchg xor cwtl mov adc adc ss nop adc pop mov ret jecxz test pushf xlat and jge mov (bad) jb icebp cld sbb cld (bad) bound lcall pop jb cwtl push je push adc mov decb fldenv jne sarb subb push cld or repnz cmp cs loope jge xchg mov lods sbbl or sbb xchg fdivr das popf pop movsb sbb xchg xor jge or pop push mov out repnz shrb sub cmpsb mov (bad) xlat cld mov ljmp xor xor pop xor rcl pop pop repnz cli xor mov loopne fidiv mov les lds ret addr16 imul mov push jns dec jno shll cmp mov mov dec icebp mov (bad) jno lock clc pop std add call xchg mov pop arpl out imul add lock xor (bad) std push or cmp mov pop jno pusha dec push push aas adc xchg sbb lods fisttpll push mov adc xor pop pop repnz xor xchg pop imul addr16 push sub sbb xor push ljmp jb test jnp inc arpl pusha idivl add (bad) test dec pop bound (bad) sbb xor pop or xor or jl push ljmp out pop xor cmpsb add nopl cmc lods adc xor (bad) je pop or ljmp xor ss loopne xor inc xchg daa mov and or insl daa arpl xor outsl dec insb xor repz jmp out call add xor into fwait adc or cs pop xor decl popa push hlt pop pop adc and repnz cmpsb add in mov push jae sbb and xor lods (bad) addr16 out nop xor mov adc push iret clc mov add lods or mov fidivl cli inc xor iret mov mov sbb jecxz iret div repnz mov hlt or xor mov adcl pop sbb les sarl sub mov adc imul es xor lods add fidiv es xchg sbb js clc or mov xor xor add in fnsave shrb jmp mov ljmp fnsave sahf inc push add push ret ja ljmp sub mov sbb sbb jmp or adc fsin cs lret aad leave dec pop mov mulb mov scas rcl stos pop ja xchg xor jno out jecxz and mov faddp jle in sbb (bad) cmp mov adc mov popf fnsave jmp in test xor (bad) ja hlt sbb pop mov stos outsl sbb scas popa dec je cli sbb mov inc xor add jo stc mov aaa mov inc ret call mov ret inc les ja ja (bad) hlt fiadd cmp sub xor test xor mov adc fcom dec adc outsl pop pop add jbe jmp dec test inc inc mov out push fwait xor cmp xor fs (bad) mov pop sub sub sub xor js or push sbb test push jae push stos inc stc sti mov pop and das je xor pushf sub popf or insb or xlat mov repz jg sbb xchg xchg insl xor and idivb sbb mov ret iret les popf lret jb mov ret scas imul cmp dec adc outsb insb cmp imul xor in in push xor enter mov (bad) jb hlt cmpsl and (bad) xor mov and dec xor add in jg add sbb xor daa jl (bad) cwtl repz jo push popf dec shlb jmp xor xchg pop dec xor ss cltd nop pop jb push jl rcr xor shrb jb outsl fistp int3 cmp stc imul lods shr add and fnstcw leave pop fwait pop mov mov push or sub enter and mov shll adc sbb and (bad) xor shl movsl inc push sbb cli adc pop repz mov jnp negl mov popf xor push lret lods orl cwtl das ret cld pop mov outsb jmp fimul mov xor mov pop cmpsb cld arpl pop sub aam pusha shl or int3 in rorb (bad) repz add jecxz push xor xchg pop jae xor sub pop imul pop jecxz or dec sbb cmc aam addr16 imul lahf (bad) xor add jg mov imul leave jno add jl cmpsb data16 cs mov clc mov mov test dec push hlt cmc mov popf sbb add push sarb cld jg xchg (bad) ds stos or dec mov pushl repz pop sti sub js sbb imul out or pop mov mov (bad) jge dec push xor test test lock in loopne (bad) jb mov sub (bad) das clc mov dec xchg xchg es xor aas mov dec xor fcmovbe xlat scas or xor xchg push mov orl (bad) sti inc pushl sub jmp mov sbb daa inc pop outsl cli mov cld stos mov and mov les fimul test hlt mov loop xor jne jecxz mov cld shrl sbb inc notb and mov rcl mov inc hlt pop sbb lods in int push mov cmpsl pcmpeqb aaa out xor or dec test mov stos fiadd enter xor sar pop jno test mov mov mov aaa (bad) in fs (bad) ljmp std fnstenv dec mov enter pop mov sbb fxch push adc xchg xor fcoml cmc adc fwait push xor dec push hlt dec stos sub out inc ret sub xor dec jno in cmc movsb xchg xchg adc jg aam aas xor movsl pop movups mov inc cmp mov insl into dec ja jmp popa adc adc inc xor jl clc inc xor push lea xor iret push adc ja adc (bad) inc pop (bad) pop cld jae les scas and ret out lock rcl aam and out pushf cmc hlt push movsb inc popa xchg dec sahf jl xor loop mov (bad) adc fcomps stos pop xor adc mov (bad) xchg pop xchg sbb pushf mov nop and jmp mov lret jae cld jo imul jb push adc or daa xchg pop push push (bad) (bad) xor dec pushf lds pop cmp inc jnp and inc mov les add sub xor jl cmp and mov jle adc mov ret adc push repnz and (bad) xor adc mov pop pop xor jge mov sub adc les outsl notb jo dec mov cmp stos repz push ss je xchg xlat pusha adc js,pn sbb aaa sahf scas or xor outsb (bad) stos cmp xor pop inc daa jbe repnz pop mov out fstps (bad) or gs lahf dec sahf mov cmp fwait xor imul fsubs call push mov dec dec mov (bad) mov je xor pop sub mov in add jae,pt lahf int3 sub add xchg push push sbbl in jns cmp mov ss fidivrl daa roll lds pop jp jmp inc inc mov adc dec mov xor fs mov loopne jge adc dec mov jno gs enter inc or mov fistpll jmp xor pop xor movl sbb mov sub push xor hlt test adc add and cld lock dec xor stos rorb xor pop dec mov mov repnz and divl test repz bound enter inc (bad) cli jg movsl mov mov std hlt mull je jle stc shl add pop adc mov in xor inc and lods imul fs push adc fldenv xor hlt add inc xor insb push je and xchg xchg mov dec pushf xor fadds add ljmp lds and cmc xchg loop imul das bnd inc in push daa mov inc xchg mov in adc in xchg insb and shr xor or movsl data16 std sbb scas inc mov sub dec add add xchg lahf push dec fisub push xor or mov sbb and push push and push imul cmpsb jo inc push cmp push add xor mov test outsb scas lret je xchg adc xlat mov and je,pt cltd pop mov push xor xchg stos bound test lret fs add adc nop xchg sbb sbb gs faddl sub aaa mov jb test mov pop inc xor and (bad) bound les sti in jo xlat aas lea xchg push push add movsl and xor dec (bad) xor scas jecxz xor pop xor cmp adc sbb pop push mov aaa or sub push repz push mov cld lods scas cwtl adc sub add sub out leave pop mov xor and add add ds push pop or push icebp mov out or enter lods int sahf js sysexit push inc inc ss movsb push xor addl ss xchg mov pushf pusha jb outsl and fild outsb repnz in repnz xor dec and data16 xor push pushf add sub or iret xchg inc insb ss xor maskmovq divl fwait arpl xor nop push je adc shl sbbl xor mov (bad) rclb jmp xchg sbb pushf dec jle cld mov cmp push ffreep xor icebp test or fidivrl jp sbb rol stos dec repz add roll mov jo rolb ja,pt mov xor push jge lock jbe rcr jno rcrb test dec mov (bad) mov inc xor out add mov and inc fcomi stos adc daa or aas and insb cmc jmp int3 and xor std xchg aad btr xchg movsb (bad) test mov fwait xchg hlt rcrl sahf push hlt mov shlb mov call pop lahf xor cmp sub cmpsb nop (bad) aam es add or xor ret sub push lods mov lahf repnz xchg mov push sarl mov imul mov sub dec hlt rcll lahf push pop sti pop mov or iret sub es es hlt sub push popa or (bad) repnz out les mov mov cmp cmp sbb imul hlt divl int jg (bad) in arpl nop lock or xchg xor xor pusha test push mov xor xchg xor jno add inc loop test sbb sbb test (bad) dec rorb cmpsl mov test mov push dec (bad) loopne or mov push aad dec xor mov add xorb push icebp aaa and jmp rorb xor mov popf repnz jae aam call ud1 je xor xor aas inc push hlt pusha mov or test sub lds (bad) push add jmp xor test lds repnz outsb adc mov cmp adc cmpsl add loop and stc jg jno daa shll dec hlt mov lahf cld popf push je cmp icebp js jg enter pop jbe mov jmp push loopne cs xchg popf hlt hlt xlat or gs xchg inc jl push (bad) push call int mov jb mov lods cmp pop mov les fucom xor add mov in xor mov mov sub mov mov lea stc xor (bad) xchg rep fisub xor and and xor outsl add test sbb inc int fucomip pop jnp xor push movsb inc movsl je je adc loope inc push and add add pop or lods in ret mov rcrb inc or roll cld outsb movsl mov xchg jo dec cld mov in xor data16 hlt mov mov fs mov int cs xor add push je mov mov fistpl mov lods fcompl and cld or adc adc lahf mov cmpsb cmp inc mov xor je xor mov xlat mov jbe mov les add cltd and adc mov add cmp adc leave fnsave push sbb mov popf sbb cmpsb mov mov cli pop xor push jmp outsb leave je sub je inc clc adc mov daa je stc sub xchg sahf scas jo mov mov dec stos lock mov inc fmull fcmovnbe add jne roll int daa pop jno mov push sub cmp xor sbb mov fs pushf pop (bad) rorb shrl sarb lahf jnp jmp es (bad) push mov adc jge mov lods les call cmp pop cmp xchg (bad) mov xor cmp into mov imul cltd fadd test inc je daa inc fsubrl lods dec xchg pop addr16 fist push xor push pushf push addr16 pop test adc ljmp in sbb cmp xchg (bad) in test das xor lock cltd sub call xor and outsb loop cmc fwait inc arpl (bad) dec loopne pop sbb icebp mov enter sbb add mov popa add ror orps mov cwtl mov lret into hlt iret lcall inc mov cmp pop cmp xor outsb and inc xchg insl pop pusha xor mov divl in movsl in movsb sbb daa daa lods sbb adc inc idivl and and mov mov dec js insl adc cld xlat repnz push test ucomiss rol ds les pop mulb jb lea mov sub push loope mov (bad) clc movsl rolb or adc repnz or loopne or adc or mov inc lods (bad) mov pushf xor out pop movsl adc xor stc std push dec and in jno cmp imul test repnz mov inc popa rorb (bad) mov test movsb aaa into mov xor call int3 pushf repz inc (bad) mov sub pop dec loope xor push in (bad) and add stc cmp imul add sbb rclb scas jg xchg xor or xor jne xor pop push insb or and out push xor sbb sbb push or shlb cmc xor push aaa scas sbb dec xchg fdivs mov jae scas add lcall and pop push popa sub mov pop sbb mov inc movsb es inc adc adc xor (bad) imull jmp jmp mov ja imul dec sbb imul pop aaa sbb mov or sbb inc sub out loop add xchg into movsb xor test jge or outsl add (bad) cmp aad push push les repnz ss pop mov sbb leave das sarb data16 inc sub lods rcll (bad) jo mov jg xchg imul jge jb xchg and push xchg or xchg push and push dec imul inc subl mov and (bad) and in cmp repz shrl push jno outsl mov rorb or mov stos pusha jns pop cmpl loopne mov adc jmp and xor mov hlt loope arpl xor xor hlt sub ljmp jg sbb push or jns mov push mov int3 aas inc jns test and xor fistl bnd aam gs mov xor sbb xor jecxz adc jge mov sub loopne repnz cmp out scas test mov mov es sub std cmp scas or sub xor xchg sahf jge mov jle sub sbb mov lret sub sar push xor pop sub ret sbb xchg pop (bad) jle sbb fiadd in mov dec or cwtl or (bad) pop sub jno inc dec lcall insb ljmp fmul hlt mov push pop push out add loop or (bad) xor or rcrb test pop jne rcrb mov and push mov loop int3 pusha mov (bad) stos (bad) decb xchg and inc rorl push pop lods push and popf cltd shrl int repz repnz push and sub xchg add int3 xor adc aaa nopl mov fsubp push mov pop outsb lods lods jo pusha mov sbb ret and mov xchg sub push outsl (bad) cmc cltd ds popa aam in js push xchg add movb inc int jge aad xor xor sti ds or mov and xchg aam rol (bad) add jno jg xchg mov cmp push lret out xchg out xchg test imul arpl add pop leave hlt test popa insl mov cmp xorb test fstl or cli xor jg cmp imul (bad) cltd fdivr jnp je push jg xor mov lret sarb sbb lcall cltd ret xchg push daa lahf mov imul js xor sbb mov push dec sub pop xchg sbb cmp inc dec push mov push xor je mov xor xchg xchg xorb jno aaa mov jns fs aas xor ja dec add sub lahf xor in jp push mov pusha icebp add bnd in cs lea pushf faddl and xlat aam in mov call or sub adc out jmp ja adc add sub adc fstps cmp or shrl mov aaa hlt dec add xlat push leave inc stos clc xor sub xor call or mov out adc push pop sbbb sub lods repz inc mov and fldt xlat cld int3 cmp cmpsl cmp xchg mov fisubl mov xor cld in out ss jbe mov movsb (bad) jno out xchg cmpsl scas push in sti inc fimull test out into repz and out inc jno adc jge pop sub xor dec pushf push scas xor mov add cmp or push mov sbb (bad) clc aad xor imul xor pop xchg lret rorb ds cmpsl jne xor push add popf xor lcall mov cmpsb xor jecxz mov xor push scas sub add or jecxz cmpsl xchg dec test inc push (bad) (bad) jp or stos mov pop xlat sbb jno orl notb and iret xor mov xor xchg cwtl and loope push mov je mov cld mov sbb (bad) icebp mov sbb inc inc add inc je (bad) push mov movsl pop mov and ret dec pop xor (bad) or xchg das out mov xor mov xchg pop and outsb or xor cmp (bad) add mov adc repnz data16 adc rcrl or pop enter addl xor bnd lcall sub stc fcompl fcomp pop mov mov mov xchg dec xor inc lahf hlt xor imul xor mov mov push mov fs (bad) xor jne mov push inc and in std pop mov xor or insb jae xor sarb mov push aam std lret int3 adc xor mov and scas imul sbb inc mov out push adc cmp subl sbb rcr xor outsb mov lods jbe xor dec sahf ret enter dec or ljmp jo xor dec in and mov lret imul sub iret ficompl cs leave int mov mov stos dec pop or add add call push ljmp adc xlat hlt fistp loope adc inc add pop push push dec jnp inc jmp pop stc mov roll and and and mov les pusha mov vpackssdw push mov scas hlt sub inc and pop repnz mov rorl add loopne adc adc add jmp sahf sbb push and jmp mov xor lea inc adc sbb cs fstp shlb and call mov add jl aas xor fdivrs xor lea push cltd sahf mov jmp (bad) mov (bad) cwtl mov ds in pop (bad) jp add imul out ja outsl mov cli scas jo jp and into cltd loopne aad inc sahf adc hlt or mov sub add mov mov push leave stos fadds and and gs enter imul sahf repnz andb mov stos mov mov in pop mov bound jns jae repnz cmp test loopne pop jmp mov scas out jge push fnstsw xor jae popa jb mov aam push xor dec fisubl leave xlat pop pop in or inc pop or and mov (bad) and sbb sbbl xchg subl push mov add jecxz lods fisub aam or dec mov push push xor inc sub xor xor scas inc push add dec imul mov shrb or inc sbb mov add sbb imul aaa (bad) add fcompp je cli adc cmp xor (bad) xor mov mov push sbb adc mov pop ljmp sbb repz popa sub xchg xor sbb iret daa ljmp push xlat cltd sub dec xor mov xchg sbb scas (bad) enter mov pop jnp jecxz and dec aam setne mov ljmp ret push sbb sbb dec push in mov das (bad) xchg mov jle fcmovbe stos pop lret imul mov sub into mov test gs mov cmc ss cs sbb sbb (bad) movsl fiaddl add adc cltd dec add or jecxz jnp cltd pop inc gs xchg ret (bad) jmp sbb sbb adc adc pop xchg bswap aam lea lea popf mov sub dec lds mov js inc push hlt xor repnz dec xlat push mov add mov int out mov cs std sub push call pop and icebp adc and and enter aas inc sbb loope (bad) adc test in lcall sbb inc xchg push ret mov sti xchg adc inc or cli pop fsts cmp xor push aaa ja sub clc decb sti lods mov mov daa repz sub imul popa jmp loop stos add dec js mov xor lret mov sub push mov jl add xchg ret xchg xor stc mov jno popf add jle jo (bad) cmp sub cli mov aaa mov pop push mov sub aam push inc or jae push insl sub mov jg and mov pusha (bad) fcoml sbb fistpl xchg xchg test ja push xchg add fs ljmp lock movsl xor int xor or rorb mull add xor insl mov ds stos repnz adc popa sbb fisubl push repnz push dec fbld imul xlat sub stc add xor or je fisttp xor jnp mov cwtl xor (bad) cwtl xchg xor insb gs xor scas sub xor mov adc jp xor pop nop ds dec add mov int3 mov adc mov xor lret or inc test pop cmp cmpb jle xor or arpl mov mov inc data16 les add xor nop dec repz xor incl mov fs pusha mull jne int3 or push fiadd std dec and xchg jae mov dec adc push (bad) outsb cwtl repz sti pop adc push call jmp pop cmc mov das dec mov push les xor sbb sbb into sti test cmc fdivs movsb cs xor push xor jo cmpsl cmp shl out adc or out idiv xor pushf adc fldcw je xor mov xor nop adc jge jno fnstsw or or gs pop mov inc push sbb popa and xor icebp les cmp dec mov xor daa mov and or dec or pop lret jmp movsb xor data16 je mov or lret push pop mov jle xlat loop jbe push lcall cld jge jl inc (bad) ss xor out ljmp sbb stos stos inc (bad) xor xchg xor cmpb and ljmp pop jnp int3 stos xchg ljmp xor (bad) repz xor scas cld push ss pop cmp dec movsb xor je mov cmp and and repz mov xor sbb dec jnp mov or cld dec ds mov cld or lods cli push popa jge xor fadds pop out xor inc jge lea bts in in dec loop dec pop xorl xor cmpsb jecxz adc mov mov xchg cmp fbstp test xchg push inc rclb sbb lret stc push scas cld or inc mov cmpl fucomp jnp adc call adc ljmp mov jp push sbb (bad) aad test mov aaa mov pop inc xor imul mov pusha and inc stc jo cmp pop orl mov mov adc jg psubsw xchg xor or popf mov sub sub cmp (bad) mov insb add inc xchg sub aas mov xchg (bad) mov ss hlt jle mov adc jno in daa leave add dec mov push mov pop jb sbb (bad) or push popa pop in out movsl sub lods or aaa (bad) (bad) dec mov push adc cmp adc jno data16 outsl cmpsl fdivp sub and fisubrl dec jmp test lea sub inc inc sarb popf push leave loope jno pop stos inc shr mov ret mov cmp fucomp sti cmp sahf jmp data16 sbb pushf dec jbe dec sub cmc movsl and jb idivl lock repnz test jbe mov in repz adc iret outsl jo adc xlat mov xchg loopne lea xlat shlb cld cmp and sub clc sub cmpsl mov (bad) pop and jl bound xor cwtl add add hlt out (bad) mov sub mov (bad) test adcw mov mov call ret add cmp sbb inc xchg inc jge mov (bad) clc mov inc push and test pop sbb jecxz or (bad) movups add inc cmp push and popf adc (bad) mov mov pushf je cmp aam je movsb leave in jnp inc adc movsl in sahf repz loopne sub push jae das mov inc push mov push cmp xor pushl mov jae xor cmp xor (bad) sbb adc and sub inc fs arpl push aaa pop and sysexit fdivrs movsb in (bad) shrb xchg out mulb aad push hlt or nop popf push jl sbb xchg arpl mov aas jae outsb and pop add sbb imul bound cmpsb cld clc mov or sbb je aam jbe into das fiadd inc pop adc push mov daa (bad) sarb push mov pop add xor push cmp (bad) jle push imul or test mov xor (bad) jmp push adc mov inc dec sub jecxz in xlat mov lret xor je,pn inc repz cli push add xchg jns push xrelease push hlt xchg popf ret (bad) iret call adc std out push xor icebp iret mov push mov prefetchwt1 push jmp jb outsb mov cmpsl cli xor cs jno sub push repz xchg js test loopne mov cwtl pop ja loop mov cltd jb imul stos iret ret into (bad) gs in mov add dec insb sub add cmp mov jmp add mov bound mov test and mov sub pop and notl xor call (bad) dec cld lock in jecxz imul call inc and (bad) xor (bad) mov scas pop fidiv bound xor add xchg sti inc lods das push mov cmp dec fisttpl or push add je (bad) outsb cmpb dec scas jp xor ret inc jb xor rep xor cmp push push cmp fistpll adc push sbb daa notl ficom cmp sbb or push fidiv loope xor stc mov dec push xor imul xor into ret mov aaa and je sub std gs es call je mov push das dec sbb shr push sub mov sbb (bad) mov test imul leave out cld stc les ljmp out mov sbb mov popa jbe add lret (bad) dec incb mov add xor stc dec repnz dec cmp cwtl xor bound push addr16 cltd push xor ja push jo mov inc cli je mov inc add jno lret xchg sahf mov dec push fsubl popa push stos leave add mov and jb hlt sub sub xor pop lcall lock iret adc and rcpps push lods or rclb outsl inc hlt add cmpsb lret repz xor inc clc jge int3 push sub xchg xor (bad) lock hlt repnz enter sub sub xchg dec stos lds int jp,pn sub aam xor fdivrp xchg jb or mov insb rcr hlt pop jle jo jns xor sti xor or sarb jnp lret push rorb mov insb jae pop sub out cltd lcall jnp icebp xchg fwait (bad) (bad) pop jg mov std dec or jp scas add mov mov sbb jle test out in insb loopne jnp mov add dec jle and repz (bad) mov cld mov cmp imul (bad) sbb aam int add add push imul cmp stos int jno mov cwtl push sub jb lcall dec or mov xor jnp repz icebp mov lahf jmp out sub outsb aas arpl roll jae test test ja lea enter jae jo mov aaa js xor repz das in sbb mov dec fisttpl pop test xor shrb push scas adc mov and mov mov jno test xchg and xchg push push cmp xor inc pop dec ss sub das jmp std sti ja fs xlat pop pop sbb pusha jge pop push ss push jbe lcall sub and je or stos (bad) les inc jns mov cld sub xor rorl mov stc adc jb xchg and lahf cmp xor inc loopne out pop in push add insl cld cmp xor ljmp xchg adc mov mov cmp out (bad) testl cli push repz pop jae pop cs nop mov mov imul jl pop icebp lods dec (bad) lret xor ds and add cli lret adc ds shl cltd jno mov lods ds mov bound or (bad) cltd add mov je cli scas je cmp lret rcl mov inc mov ret push pop sar in fldt (bad) sub push mov jbe add int jb (bad) push cmp sub adc xor mul jmp pop cwtl cli sub jb adc inc mov adc bound adcl ss pusha or xor outsb pop lcall rcll push ret sub stc mov xor (bad) mov xor lods push pusha add xor scas pop xchg ret xor icebp cmpb rorb mov cmpsl push clc push lock or jnp xor xor loop add pop and adc inc inc xor outsl pop xchg shll mov out cwtl out jno nop aad mov add jmp (bad) mov xor inc imul pop cmpsl and imul xor pop test inc mov xchg ret or mov pop and xor rcrb jbe pop mov sbb hlt popa lea cmpl into dec lret addr16 inc (bad) cld das shr ss mov pop sbb lods mov fldl pop push cmp cwtl xor xor adc sarb sub popa packssdw jne imul insb jl rcrb push mov lock ret in or cltd aam popa sub add pushf es jmp lds in and imul mov out int xor (bad) aaa mov icebp pushl packsswb out xor dec int or popf push xchg std jo xlat cld xchg aam xor pop adc (bad) xor and unpckhps mov repz les pop stos out lods cltd dec xor jnp jae sahf sub and sbb mov repnz or or lods cmpsl adc fcomps data16 mov in xlat into sbb adc and xor sbb lahf push jg loopne sbb xchg mov dec sahf jo jns and icebp outsl push dec sub rolb arpl cmp pop repnz cmpl inc adc lea es je mov loope push mov fnsave xor mov adc jbe or decb cmp rcll or mov and or adc xor mov sub bswap jmp or lcall mov jae cmp sbb cli mov stos dec out cli repnz mov and shlb xor popf (bad) hlt popf fmul out enter xlat xor mov add xor push sub cmp xor inc ret xchg repnz sub inc adc push jbe xlat add fsts inc fs pop push xor inc fdivrp insl jno mov jl test pop daa mov add hlt cmp cmp inc mov push bswap lahf lods repz cmp es pop das or jbe cwtl inc mov xor xchg inc pusha adc and xor shrb xchg inc push rol xchg sarl je mov pop test imul leave jp dec fcmovu aam (bad) hlt jg or xor scas ljmp hlt popf push dec pop inc loop xor pop jno pop and movsl adc push jae popf mov cmp sbb rcrl cmp popa jl pop xorl cmc lret jb hlt adc imul addr16 add lahf xor outsl xor mov jl dec jae mov xor sub or cmp xchg jae xchg cmp adc mov addr16 lret pop mov incb imul xchg dec rolb mov repz clc xor xor icebp lock mov popa xorb aaa aam xor (bad) xchg mov xor js inc push xor sarl or inc mov and or jb xor mov xor inc mov shrb jmp xor dec cmpl xchg push repnz xchg dec mov add mov xor fwait lret xor subb insb mov pop and aaa mov xorl add sub ds dec mov cwtl push out xchg dec adc mov pop arpl dec xor lea and jb inc cmpl jae loope sub and out jge jg fnstcw sbb xchg jecxz lcall aas fdivrs sub jp (bad) out jmp movsb sub loopne lea jne mov push xchg mov movsb test inc jb shlb mov adc pop sbb (bad) mov cmp cs into out clc js popa and and xchg push (bad) jb test std xchg jno cmp pop (bad) mov adc fdivr adc out or cmovs push push in or jp daa add xor sub sbb (bad) pop ret add cli cmp lds test test jecxz in push jl xor (bad) mov divl lock dec xor cwtl push (bad) (bad) rorb (bad) repnz in pop repz out mov or xor mov gs xor dec ds sub and (bad) testb sahf mov push pop dec pop add xor fldl clc popf cwtl hlt lret adc cmpsl mov dec adc fisttpll xchg pop movsb inc dec adc xor push xchg pop inc xor jb dec rcll das dec js fbstp jle flds into xchg lret xor lods lahf xchg es or and xor xor jl jnp jl xor sub xchg jae xlat adc xchg xor (bad) cltd xor push inc cmp jmp clc jns inc ja repnz daa mov adc push add and adc (bad) mov push or sub test jmp sub addr16 std jne lret pusha add lret sub orl or nop pop int pop adc sbb ret jp pop xor cld pop dec movsb pop push divl cmpsl dec dec cwtl mov jnp jae inc lcall xor xchg ljmp sbb mov inc mov xor cld sub popl sbb nop and and cmp incb out dec and pop (bad) push or inc cmpsb push adc sti popa cmp test and cmpsl mov adc push popf fucomi sbb (bad) mov fdivp or xchg jge mov adc es mov xchg jae adc (bad) repnz fldl xor (bad) sbb arpl mov add cli xor mov mov loopne and loope addb xchg stc and xlat mov jno ljmp ret cwtl std xchg mov inc (bad) mov mov sbb nop aam mov jge mov daa (bad) push into adc pop daa hlt jg out xchg mov mov (bad) pusha xchg mov jne (bad) rcll pushf fldt nop lret mov adc adc ret adc mov ja call subl dec mov aaa cmp add mov out cmp mov lret push dec nop push test imul hlt mov cwtl mov pop mov xor inc sub shrl sub ficompl aam adc mov adc mov ss sahf xchg ret push es sbb mov data16 mov test cmpsl ret push and push xor jne outsl inc mov cmp mov mov jae rol sub pushf iret cld inc cld in mov push mov pop and sbb cmp push hlt gs mov lock int3 leave sub insl adc adc dec xor roll xor xor cltd xor xchg mov repz xor inc fdivr sahf repz mov jge cmpsl aas test pop mov mov outsl dec cli mov aad or addr16 pop xchg popa xor clc sbb divl in shll adc or mul sahf rcl or hlt cmpsl imul mov nop and xor jne data16 push test mov arpl lret sbb dec cltd leave in sub (bad) sbb je fs cld xor repnz out mov mov dec (bad) sub pop push dec data16 xor addl lods push addr16 aas jb jns cs sub in mov xor pop mov loope lods popa xchg mov or dec mov lahf push jecxz xor jl mov test inc lods pop jnp mov jle nop imul cmp xchg pop xor insl scas inc cmp popa std lods xor pop push add adc mov inc ja in or add cltd lock push std xor xchg xor jbe pop fidivl push hlt and scas stos xor aad loope xor pop fcomip mov movl xor sbb xchg sub test add push fs repnz ljmp mov cmpl cmp into lret mov sbb lds imul cs fsubs xor add xor jne jbe inc faddl (bad) out add popf or hlt fidivr xchg in daa sahf cld xchg popa xor imul and repz xchg pop xor mov nop add xor fstps je fadd sub add xor xor sbb dec xchg cmp or imul sub cli add sbb jmp mov jg fidiv xor hlt std adc lock loope cmc adc mov jno mov xor sar jnp test aad (bad) jne xchg push notl mov repnz scas jb xchg bnd fistp push cwtl dec inc jns addr16 xchg pusha sub xchg xchg mov or outsb push pop adc aas subl je mov cmp dec clc leave cmc mov adc jo xor fnstsw fxch jmp add sbb bound rcrb pop rclb jp jmp pop mov shll clc inc jae movsl add aad scas mov ljmp jbe fsubl xor addl fstl int cmp enter push cmp sbb add jbe outsl jg push dec pop xor add mov lds mov mov pop icebp jg mov mov in adc adc push fnstsw mov fdivs jl,pn dec xor loop movsl jp xorl rorl inc inc sbb mov pop push pop mov xor xor fisub jae aam ret icebp enter (bad) xor xchg loop (bad) and mov imul icebp mov mov dec xor mov inc xchg and xchg mov push cmp insl xor mov pop in pushf mov add and daa je mov or ds mov xor (bad) cmp mov movsb std (bad) icebp loop adc mov push fcoml (bad) clc jne jo inc xor (bad) (bad) jle cmp sbb mov inc dec sub or iret push es sub dec push inc pop mov test push (bad) sbb dec sbb pop scas mov add (bad) dec add insb jge cmp adc mov dec das ds stc push hlt xchg ficompl push ret mov or xor pop stc adc mov mov (bad) inc aad jo and in (bad) fs adc add out sbb push (bad) sti or scas sub icebp mov (bad) pushl sti and mov hlt jmp jne movsl sbb nop fbstp mov add das push popf sub or or push xor dec jg mov and enter aas cld int3 pop outsb mov insb inc xchg std mov (bad) rclb adc pop lret hlt push inc sub adc fistl xchg cs sub mov int3 mov mov adc fdivs call inc dec ss cmpsb xchg dec inc add cs add and pop push and rolb push sub add xor rcr scas inc daa ret pop decb adc popf mov std push mov pop aad dec and jmp add adc xor push (bad) sbb pop fst jno xchg sbb leave outsb and dec hlt dec icebp mov je mov pop lods je xchg mov or in out pop jns iret loopne mov sbb xchg sbb pop arpl add pop mov (bad) adc in xchg inc xor pmuludq jmp jmp out adc push or dec pop andb in je data16 dec pop leave sub jne fisubrl xor lcall in pop aaa stos fwait dec pushf jb popf sbb xor and push fstp jle mov or arpl outsb ret xor sbb (bad) imul shrl dec inc pop cmpsl hlt pop hlt stos (bad) repnz sarl imul mov pop fmuls pop or ficom repz xchg inc add sti pushf xor outsl mov loopne js mov sub test lcall xchg xor jno sti jmp (bad) adc insl and ds dec dec repnz clc cmpsl out mov sbb nop test shl aam std int pop and sbb hlt xor loopne loop xor popf ret push dec xor pop inc pop inc xor ja addr16 decb push test jae aad mov cld dec sub push add inc cmp inc mov je pop push jl xor mov inc enter add push data16 scas dec mov out loop mov jl addl push lahf dec lcall adc jle xor in aaa sti jge xor dec xchg and xchg and daa insl xor sarl xor popf pop loope cmp les hlt pusha xchg test jg stos clc or jb dec or adc (bad) hlt mov mov dec pop add xor imul leave aaa pop jae ss in xor push pop mov bnd jne adc dec ja sbb jp and sbb xchg fs data16 mov rolb jns or adc mov mov mov cmc out mov ret mov push insb imul xor push clc cmc insl cld test sub or pop and outsl xchg (bad) xor mov cmp rol lods test push push fucomip comiss xchg add das inc xor add mov pop or cld push cs xor pop (bad) (bad) stc mov fucomp jb mov mov add inc sbb and jb mov or or mov xor bound sti jns in repnz repnz cmp in imul mov xor pop adc sar fwait and repz pop (bad) lret jno jno or mov aad inc lods addr16 data16 repz xchg lret mov pop pop and cmp mov push sbb mov ljmp stos pop xchg int3 repz in xor xor fbstp pop inc cld rcrl jno push jg aam inc push incl cmovae ljmp test push ja adc sub pop xorl push int xor xor outsb inc insb lcall or push adc (bad) sub aas mov (bad) dec lds out xor mov icebp xchg dec xor loope xor outsl push xchg dec mov fbstp add xchg xor lahf adc pusha bound dec ja xor add or out scas test ret jp jl xor sbb jge xor fisub adcl inc inc push sahf push imul bound jbe sbb stc pop lcall fcomip inc add imul dec out and movsl cmp stos cmp mov push xor scas xor pop cmp rorb shl or add imul xchg lods and sub push pop xor insb ds and bound mov pop shrb mov mov out fwait ret cmp or add rclb aas push dec dec outsb (bad) mov pop adc daa add pushf add es cmpsb mov daa mov add adc scas (bad) jmp mov lea ret mov aaa sub pop sbb fadds pop cmpsb cli insl xor out mov cmpsb mov arpl jno push sub mov cld ljmp sbb xor xor js mov jbe jmp es pop xor pop and mov xorl ret cmpsb xchg pop icebp pop adc mov lahf pop out push sub outsb in mov je adc popf (bad) hlt pop (bad) jle cmp jmp je mov ljmp andl icebp mov pop hlt sbb mov jle cmp adc js repnz pop mov movsb mov adc fnstcw pop fildll adc xchg xor fnstenv mov mov adc xor push adcl dec dec sub je pop xchg mov jno subl incl or adc xor or adc aaa es out push in repz xor dec or jmp cmp xor mov or sbb subl xor mov xchg ds adc pop adc mov xor out mov (bad) jae and movb lock imul mov jno add sbb xchg and dec inc jne idivb rcr sbb fnstenv fadds xor and ja out fimull xor mov pushf dec push repz je popf testl add jl js stos lds cmp es xor lcall decb lcall sahf cmpsb fistl ss (bad) jae and mov jg mov mov and add adc dec jg call lcall popa inc or insb mov loope fsubp (bad) sub das mov outsb adc adc test fnsave jno sub stc jge pop mov rorb repnz ret push add divl test or or and lcall push xchg jo lods test pop ja push adc rcrb test cmc sbb push imul mov jbe inc in fstl sti push dec lea mov fsts (bad) lock xchg pop popf jne mov movsb movsl add adc dec mov in clc xchg and imul cmp nop and rcll pop mov xor mov mov ror cmp in or int btr lds cmp test cmp xor inc cmp lods jo mov xor pop fwait xor xchg cmp xor pop and jne loop jns repnz xor lret xor jecxz out repz jl fnstsw mov fcmovnb cltd dec sbb adcb mov jmp outsb sbb inc xor inc dec cli inc jl mov vmovss (bad) xor lods xchg jg cmp insl dec ja pop jmp (bad) cmpsb push enter and xor push cmp mov jns gs jmp pop sbb mov dec mov loope add jno aad arpl out loopne shl inc gs sub jg sub jb out mov mov lods xor mov pop and lds iret and fnstenv rorb clc (bad) je push out ja bound (bad) les andb push dec sbb sbb or xchg or jno mov mov mov inc repnz push imul or cmc xor sbb sti (bad) repz inc sub add mov adc sbb jbe sahf lret cmp faddl push sti into mov add xlat pop sbb xor mov or fyl2xp1 popl das in xchg mov stos jnp je dec loop inc sbb xchg mov leave push stos mov adc addl hlt lea test xchg and fwait movsl dec paddw push sbb push inc iret pusha hlt fnstsw (bad) in xor mov dec ret sarb je imul or xor lock mov jg jmp jne xor faddl test in push lret imul popa hlt add xor lods mov adc scas inc dec movsl fbstp push jg xor jmp pusha insl repz adc int sbb aaa jbe fdivrs xchg and out enter cmp test in fdivl jg mov and rcll add jmp xor push cli inc mov das jnp inc pop fisttp sub mov je cmp dec sarl sahf mov mov (bad) in je rolb sub mov push pop fiaddl adc sub add andl out orl je jl hlt test push dec mov in and and push pop sub dec xor (bad) push cmpb lahf mov push mov in lods bound lea roll sbb mov push shll ret xchg ficom mov mov shl (bad) (bad) jbe icebp stc outsl repz sti and insl inc pop push mov mov xchg jg jno rorb and loope pmullw imul cmp loopne,pt push pop and push jmp je loop mov cwtl scas scas jge cli ja sub out xor mov mov jnp in lcall pop push idivb imul and cmpsb addr16 dec cmpsl pusha cltd xor inc push (bad) repz icebp lret mov add stc push xor sbb jae mov cmpsl fild popf mov into adc imul xor rclb inc (bad) lret sub insl xlat or jno add dec (bad) mov dec dec insb ds push mov sub cmp pop or (bad) idivl sbb jo add add sub popf dec rolb xchg inc arpl je dec decb adc cld pop daa dec sub pop mov aas push movsb repnz jmp ret movd ja mov mov outsb cld je xor mov cmp jg and jle and push std inc push inc xor add adc xlat and cmp xor mov mov xchg test mov insl (bad) mov cmp mov out inc xor inc push add xor test cmpsb clc notl test cli dec or dec pop cmp mov (bad) repnz dec adc fdivl aaa mov pop pop std es lds pop xor mov sti ljmp dec sub cltd rcl mov cli jle xor fisubr adc jne mov adc movb pop pushf fstl jle xor fcoms sahf jnp pushf lahf xor (bad) fstpl push loop adc test mov push pop mov fs in pop rclb adc and cli rep or inc pusha pop adc add (bad) mov int3 in ds sbb mov dec ss test and jne sbb addl jl jno xor fnstcw pop pop dec xor sarb jb leave fwait adc push mov mov pop test hlt jne mov popf xor (bad) jae add and adc cmp gs mov mov mov push arpl mov out cmp pop mov pushf adc cs mov xor hlt jp pop push lahf or in icebp sbb fcmovne cmp sub xor bound into sbb jle repz rcrb repz adc js jp jno cli mov adc mov jb add and test xor add adc lock test repnz xchg or xchg cltd mov jo lret push xlat inc movsl mov jno inc int notl xchg mov (bad) scas xchg pop outsb jae (bad) dec and mov inc jl cltd sti ret repz mov fisttpl xchg xchg (bad) push mov cli cwtl test sbb mov jp add or dec fmull add (bad) mov pop ljmp lahf mov lret push lret movsl and cltd lods cmp sbb xor cli loopne mov in push sub pop fidiv inc push out test out sub mov mov push sbb ret inc daa adc imul xchg push jmp mov mov inc dec xchg adc (bad) push ret data16 sar negb fsubs outsl mov mov mov dec sahf movsb push and lcall sar push (bad) mov in and xor xor jae fwait jb int3 xchg bound pusha jno push mov xchg and cli pop pop mov lret lea push daa es loop paddusb add cli popf xchg mov or loopne (bad) hlt sbb mov outsb dec fstpl sbb ss mov add pop mov mov adc fcoms lahf or cli das lods and ja jg sub and cli push jecxz inc adc gs jmp pop popa ljmp ss es std and mov lock pop test imul add jno je (bad) aas and je mov loopne inc mov iret sub jb (bad) mov inc aam jo adc clc inc je cmc sbb add in lds jmp dec stc push xor jle and aad mov xor out dec xor mov daa imul sti ret out lcall or jge repz and movsb push add je pop imulb loopne inc nop ficoml mov stos inc daa jae in pop xor jae repnz sbb cs test jb (bad) mov pop mov adc push je mov jl mov jmp jmp dec add lods adc daa int3 pop test xor fcmovnbe mov xor jns stos pop xor adc sbb pop add and xor into mov pop xor fnstsw int3 fxch repz int addl push xor push std xchg cmc test or cmp out std push add les mov cld adc std push xor xor cwtl adc mov adc lods bound add xor mov cmpsb or add adc addr16 in and add into outsl mov aam and cmp cli or jecxz icebp outsb mov popf cmpsl fcmovbe pusha (bad) fisttpll mov mov sbb popa in in mov jns mov or and ds push leave mov pop fnstcw hlt xchg (bad) frstor xor xor fmul cmpsb add inc jo rorl pushl std scas shrb sti mov out cmp mov push imul nop sub scas xchg xor jne popa cmp iret rclb in add and (bad) mov leave xor insl inc push mov loope pop ljmp fstpt add xor clc movsb add xor orl (bad) aad stos adc xor mov dec gs or arpl xor movntq out add mov push push jge or xchg add sbb mov jnp push mov mov std stos pop das mov jp dec jecxz and aaa mov dec aam popf in adc mov xorl ja lods or xchg mov mov push nop lods (bad) adc cli sbb inc jb sbb (bad) xor inc mov js sub lods jbe clc mov add cmpsb pop ja dec push jb pusha or jnp fldpi adc push ja sub std (bad) xchg pusha jp inc and (bad) lock test and adc cmc lea dec inc adc insl int call aam xor and test adc adc arpl cltd push mov push leave repz adc sbb (bad) lock (bad) push aam insl mov fstpt negl stos test and mov das (bad) icebp nop xlat push mov stos xor cmc pop pop dec xor fs and nop xor in scas add (bad) xchg push insl mov xor sub xchg xchg jne inc mov cmp popf pop push scas ljmp (bad) xchg mov nop icebp inc add xor push insb lock orb frstor aad adc inc cmpxchg scas push rolb and dec push cmp inc cmp imul cltd enter mov cmpsb mov mov inc adc mov or cmp mov xor mov push sub mov ds adc stos pop jb scas xchg es ret sbb sub out inc dec cmpsl lea mov add ljmp insb popa call (bad) iret outsb pop leave cwtl movsb dec je sbb cld push imul lahf push jbe xor add movsb adc dec pop adc xor mov mov cmc jle jge add outsl adcl pop pop imul add jmp fiaddl adc test in and lea test jo add pusha xor jge and daa cmpsb inc popa or push aad push (bad) mov mov repnz or xchg pusha test cmp les lods cltd add xor stos cmpsb cs jae mov pop loope (bad) xor (bad) mov pushf cmpsb and jnp mov sbb xchg jg and dec lret (bad) jbe pop hlt test mov test mov (bad) xchg push insl test xor lret inc push jno ret xor lods jae cmc cmpsb xchg test mov stos pop xor repnz push xor sbb or push mov push xor aaa jmp mov mov mov jno sbb iret movsb (bad) or fiaddl in lea add inc or cli loope cs (bad) pop popa iret and cli adc sub test push clc loope mov mov sbb aad sbb mov xor xor push nop fdivrl inc cld (bad) jp xorl addr16 ja jge xchg pop aam pop xchg icebp sub aas cmp fstpl cmp dec cli jmp xor jmp xor dec cld inc insb outsb popa or inc xor push or fldt mov or or ret mov and dec repnz xor pand iret imul pop add cmpl (bad) les es cmp cwtl jae push sbb (bad) adc aad inc pop sub sahf xor out xor mul pushf rorb dec add pusha xor adc or mov xor (bad) mov cltd jl push mov stc sbb xor lret or add in pop xor aas clc gs sbb dec add fiaddl mov add xor dec and addl (bad) repnz mov xlat mov lock (bad) fbstp test adc add mov bound jno lea xchg mov xor xchg inc dec cmc mov xor and mov enter ljmp xchg or sahf add stc fdivl movsl in or cmp into jae dec sbb jb pushf gs pop imul push xor ret jb out cmpsl push mov sbb dec or sub sub shll fcoms mov (bad) jle xor sahf mov xor es mov jl leave insl xorl iret inc jnp jne inc test jb les imul jns addr16 cld bound and pop stos sbb jae popf pushf jae mov leave xor and test cltd or jge sub repnz add jb in movsb fbstp adc rcrl movsl cmp push rol add pop gs sahf adc inc cld sbb xor scas pop mov xor xchg pop inc xor aam js and xlat add fsubs adc popf in pushf push nop xor sbb push pop jbe lea sahf jnp xchg push pop je data16 or pop fs dec (bad) sub jmp and hlt (bad) sahf mov inc outsb add cltd xchg adc xor sbb int insl hlt push mov mov xor inc sbb jb test xchg push repz dec sbb mov test sub repz or pop psubsb pop cmpsb jae and fmul sub aas (bad) ljmp mov pop xor push mov int3 (bad) adc and cltd lock jae fsts test imull daa (bad) jg push add cmp aas push test test lods mov hlt add cmpsl or jb movsl add cwtl xchg dec xor es lret dec xor jno sbb xor jl cmp ret mov sub popa add add jge and data16 pop arpl int3 add sub out insl pop add xor in aad scas insl fadds adc pop mov hlt in jae cmpsb cmp out iret into cmc jb dec flds and mov add xor jecxz mov imul pop add pop and fs std icebp xchg fimull mov enter add pushf push pop mov repz cltd shr xor add inc loop les push mov push mov inc add fisubr cmpsb std fldt sbb xor enter mov repz pusha add (bad) or pop jae push push xchg std sbb outsl repz mov aam jle or pop stc fnstenv cmp scas cmp mov xor sbb dec mov bswap int mov pop xor sub mov movsl xorl xchg (bad) gs mov pop mov mov and cmpsb in xor ficoml mov mov and jae rcrl inc adc jb mov imul hlt iret xor (bad) push pop push (bad) xor ja jne sub and lcall xor leave je push xor aam (bad) dec daa jle push xor lcall cmp push iret sub je sbb pusha xor xor xor jno incb mov xchg gs scas in cli lret xor pop push add xor fimul into lret pushf in sahf adc mov and inc repnz jb,pt cmp lds jno cmc lods in inc push cmp (bad) stos pop push cli out data16 mov popf push cmp adc adc inc stc (bad) xor cltd lcall or jae sub faddl das jb push fwait push mov sub lea push pop (bad) pushf clc sbb cltd push enter mov int mov inc imull sbb test sub xor (bad) xor cmp in mov fwait mov sub test add cmpsl mov (bad) jg mov aad gs adc out out cli repz push or xor mov xlat jno mov ss ja pop rclb outsl test pushf dec inc xor test cld mov andb xor std test les shlb dec js mov fidiv add xor and jnp mov push pop xor jg mov in add xor ljmp mov in jo jbe repnz push aas int3 test pop sub xor xchg lret (bad) xor rol fidivr imul adc dec cwtl cmp cmp add lods cmp jae gs stos cld lcall (bad) out ja mov int aad mov adc andb stos mov xor add push or hlt fwait xchg dec mov adc outsb xor push jle mov mov stos aad imul in test adc mov stc cmp jo cmp out cmp lahf lds and loop hlt arpl xchg add xchg add test cmp mov ds mov fistpl mov dec imul addr16 mov outsb push mov or pop stos pop mov jns test fsubrs shr inc pop pop xor jo sbb popa lock push push sbb les test notl push (bad) mov mov (bad) mov mov lds sub jae mov rcrb xor test jns add xor popa dec pop test sub stc test xor cmpb inc aam or pop add movsb push test xor (bad) imul jg xchg cmovp sbb push repnz dec jmp cli push imul mov repz insb mov (bad) jp lods cwtl sub aad inc fisubr mov xor arpl push mov xchg pop sbb xchg cmp (bad) jle cmpsl dec add inc jb mov push dec xor xlat outsb xchg out push ja mov mov loop imul movsl jo (bad) stos push dec xchg sbb mov jno fwait lea sub mov (bad) repz stos (bad) sar dec imul add dec jb xor cli pushf xor sbb dec mov int3 dec or stos shrb sub imul push xor dec clc or in xor adc iret sbb xchg dec adc rorl je xor sub push (bad) mov mov sub mov fidiv adc dec mov mov mov mov or xchg repz ret push int3 orl or mov rclb enter iret into and xlat sub cmp rcll imul or mov jle mov adc int (bad) lods mov loop out sarl push or xchg sbb dec or into ja repnz jo out or das sub data16 popf inc lret mov sbb fisubl outsl loop test add int sahf in add sbb add in lcall jb xchg xor mov bound (bad) lcall prefetch out cli sub adc sub fldenv or aad (bad) cli movsl cmpsb hlt ss insb das dec mov loop daa mov hlt add fisubr mov and loope or ja (bad) sub ret pop sbb push or cli lcall push jae fimull sub sub or adc arpl je push rolb ret (bad) pcmpeqd je push setae dec repz lds in fbstp push inc xor dec cwtl cmp and jb jmpw mov subl outsb hlt xor add pop mov mov jmp sti loope xor and push stc mov push push inc or jle pop insl xor fs xor fld jg xor inc daa sub imul (bad) ss out push je adc divb pop xor xor (bad) xor mov jno fwait adc (bad) xor or andl ja (bad) ja jb incb jne and xor cmp mov repnz fcomip adc xchg xchg inc xor mov fdiv or push mov ja ret inc std pop add dec xor aad cmp repz out leave add xor shrb inc xor push test xor pop shl or xchg call mov ja mov rcll mov push cmc ret and outsb adc ljmp mov adc xor aad jl xor lock insl xchg dec loope pop xor pop cmp jp fistpll sub dec daa fwait xor arpl repz sbb es and ja nop mov jle out mov jnp jne xor mov cmc cli sbbb test or pop stc cmp aad mov ficoml push (bad) xor into push or (bad) jg cmp mov fdivrs sbb or mov mov jle bound test xchg rorl jno inc (bad) pop and bsf dec ds xchg jecxz lea daa add xchg xor xor arpl lcall fldenv xor xlat pop and outsb and xor in (bad) add daa adc ret mov nop aas xchg addr16 pop imul cmp push inc jae or std jp repnz movsl and jmp mov shll ja std repnz pop adc ss arpl add cld mov fs sbb cmp decl mov adc dec insl dec add les xor test insl andb add push jo dec xchg and test repz addr16 adc push xlat mov xor mov xor lock clc adc push cld (bad) hlt (bad) fcmovnbe sbb std mov (bad) sub inc adc add hlt push or xchg xchg xchg adc mov and out jnp mov nop ja rorb dec xor pushf cs dec ss xchg dec fs pop xor cmp xor jg mov imul jg repnz out imul lods aad and xor pop (bad) fistp scas repnz test mov xor and lahf ret hlt daa scas jno dec pop mov (bad) push (bad) pop lods rcll xor xor sti jmpw (bad) add iret out jnp aas test lods dec xor int sbb inc fiaddl cltd adc dec pop dec xor xchg in (bad) imul add xor mov je int in sti sbb leave xor jb sub pop hlt rol incb add dec movsl stos stos mov out fimul xchg aas adc and sbb mov push sub dec fmull sbb scas clc cmpsl popa inc int3 mov mov test jae jmp cmpsl and push lret jne out stc or and sahf or iret pop push or lcall mov cltd pop xchg fbstp sbb mov push je js xor mov in popf gs push xor fmull rcrb or in cmp mov sbb (bad) fbld xor (bad) cmp xor sbb push movsb pop cmc lods sbb leave lock mov lock xor jecxz mov adc loop lret ss sahf clc out jle cmc repnz test out push movsl (bad) xor xorl movsb test jo and dec xor jmp and push pushf dec jmp cmp or fst adc sub or push cmp ljmp mov sbb adc push xor (bad) and cmpsl ja sti (bad) and loopne adc popa sbb cli ljmp and xor pushf jl in lret int sub jbe sub inc lcall and fdiv xor outsl daa mov cmpsl popa adc sbb mov mul stos and xor jg subl xor es repz aas push sub jge (bad) (bad) sub inc test sbb sbb xor int lock jno mov mov jge xchg jne mov push xor jmp pop adc adc jno mov mov loope mov lahf jb ss xchg mov lret sbb test xor (bad) xor xchg in aad xor mov mov cwtl push pop inc ficom imul add push sarb xor adc aaa jne jl fcomps lret hlt ds and sbb dec fildl repz aam mov js hlt xor icebp cli jmp adc nop les mov ficompl repz dec mov adc bound andl enter cmp lret call arpl (bad) imul pusha sbb les add or test jle or cmp and lods pushf xor cmpsl jle inc mov push daa bound lret add decb and add repz test mov mov outsb inc and addr16 lret das outsb cli cwtl and cmp mov ret sub test stos call mov jle stos xlat xor or imul add movsl aad popf dec sbb xchg pop mov std js xchg mov pop xor inc xor fiadd or mov pushf lea mov leave imul and (bad) cmp xor repnz xchg daa gs mov sti jl mov push mov add xor sbb imul jne imul mov loop dec or adc mov xor dec inc mov xor insb (bad) sub das jnp xor pop mov lret cmc out mov fdivrs cmp push dec jo outsl mov sub out and sub mov out enter mov cmc cwtl dec xor les in mov into xchg inc aaa and std or loopne fs (bad) mov insb imulb movsb mov mov in xor subl xor loope cltd stc xor ja push (bad) bound mov mov enter in scas and mov xchg fmuls pop pop mov ja daa mov pop (bad) adc jecxz lock push gs js or lods push jb push fsubr xor cs movsb and jo test adc (bad) jb subb out xor les sbb fwait aas sti out push ss dec sub imul sbb pop cmpsl hlt scas push mov (bad) (bad) out jo or mov popl jp cmp cmc iret fidivrl jb int or xor and xlat xchg lret and xor cmpsl ja cli mov xlat mov into cmp in ds mov pop in cwtl xor leave xchg cmp add jl inc xor pop pusha je nop aaa or mov ja add shll adc sbb cwtl or imul sbb lea mov dec fdivs xor aam adc scas push in mov (bad) add jb jae lcall mov (bad) mov cmp stc push cmp in shrb pop mov inc in sub outsb xchg dec out jne mov (bad) jge jns xor push mul jg int3 subb xor sub sub hlt adc jbe mov inc mov cmp hlt xlat ljmp lods loope js mov mov cmp iret and xchg ja call cmc (bad) testb insb sbb push fdivr hlt aas and es cs ja pusha mov mov repz rcr dec jb mov ss pop xor lahf cmpsb scas mov xchg stos xchg ret (bad) xchg jmp rcrl call cli dec mov stos push daa cwtl xor lea orl mov jle jl in and lds push adc iret xor aas mov clc or xor (bad) in mov dec (bad) jae cmp cli xchg ja and int mov inc mov scas (bad) fldt hlt (bad) mov lds push mov les xor push js ret xor push mov inc xlat in dec pop xchg lds pop push lea clc call gs xor in mov mov fwait add cmp push and int lock xor cmp push inc fildl loope dec xchg cs je (bad) lret test int sbb mov mov push or dec inc sbb bound xor loop or outsl jo xchg lock jecxz xchg or push pop jae es add inc (bad) and sahf push pop push minps iret lret adc cli mov lock (bad) pop add stos mov sbb mov sub add pop je daa ret loop xorl push and popf clc or adc icebp loopne int pop scas imul xlat flds mov pop and in leave cmpb xor and sti daa dec insb push xor pop sub repnz pop fistp jl add loop mov and cmp push xchg push pop ja mov loop test enter sbb and adc ficompl aam sub loop xor fldt mov xchg pop mov and dec stc xor sub jnp xor cli inc fisttp dec and xor mov lods (bad) push jmp in jecxz repz sti mov jmp (bad) out sahf or or out dec jb or add adc repz and add jae lock mov jnp outsb sub jg xor cwtl cmpsl cmp xor test repnz sahf or push xor lods les sub jmp (bad) subl pop lds mov gs mov mov cmp hlt xchg clc inc cld add call test sub mov mov les out mov push shrl and xor fidiv movsb adc adc cmp sbb or inc jge pop dec dec xor iret ret inc outsl hlt sbb pushf push sub popf cmpps sbb cmp mov xor pop mov sub add inc imul (bad) xor mov cmpsb xchg repz sub pop xchg aaa push je or cmp adc mov (bad) daa mov (bad) xor add or pop or pop push (bad) and lods ret sbb adc cld and mov push hlt psubusb xchg test jg out sarl pop daa fcoml addr16 aad shrl xor fwait push inc jbe mov xor push adc jo std cmp ss into pop xor clc mov test adc fdivs arpl sub xor mov inc out orl aad sbb je fisttpl lock jmp pop mov mov xor inc (bad) ss data16 cli cmpsb adc insl xor adc in daa xor das push adc psubsw movsl das sbb cmp mov or ficoml fdivrs jp jns push sub gs cli add data16 sub mov fwait les gs push cmp aaa (bad) imul dec in adc and jb push (bad) popf mov jo push adc lods and push xor (bad) out test push (bad) cmp leavew sbb out idivb sub pusha scas movsl adc lea in cmp fidiv clc lock push imul xor rclb out jno scas je pop pushf mov test mov jb sbbl outsl sub scas int3 (bad) (bad) jb pop sbb sbb adc sub jb,pn mull in cmp les mov mov or ljmp dec je shrl maskmovq (bad) push mov mov or dec add cmp ret xor sbb mov jmp stos inc bound into jae ret cmp mov adc adc xor xor clc loop addr16 rclb mov jmp rorb sbbl xor cmpsl lcall xor iret dec stos jge xor mov js iret xor or pop out xor sub xor or xor out gs cmp sbb mov sbb lods xchg mov sub hlt mov sbb sbb and pop test push into cmc add cmp pop push lods sub dec dec dec getsec orl mov mov mov push je aad sbb sub and loop pop insl adc incb jb addl cmc ljmp push pop xchg add xor cmp out cwtl push shrb je inc adc jb push outsl cmp les jb lock and imul or arpl adc cmpsb ret je fs imul fwait pop mov dec test or (bad) arpl call inc jno mov and arpl lret push xor cmpsl divb inc mov imul jae jb imul sub and mov inc aam roll push xchg roll ss dec push xchg add cwtl imul lds adc lea loope out fcmovnbe ljmp out jno sbb les push lods lcall push hlt lock mov dec (bad) cmc mov imul sbb jns insb dec pop scas je push leave xor jb mov sub push mov rclb aaa sbb push shlb test imul xor xlat fdivrs ffreep mov jne cmp jle ficompl pusha inc cli mov jmp adc and mov or incb xorl xchg cmp mov dec roll pop int3 push jmp mov add xchg (bad) mov (bad) or and and lds sbb or fldt imul mov dec data16 mov adc xchg jge mov stc mov sbb mov jnp cmp sbb sbb pushf xchg mov cmpsl aam mov call xorl cmpsl sub fstpl sbb jge out in inc and mov push cmp mov ljmp push cmc les sbb mov (bad) mov rcll jns push xchg stos out shr arpl test adc adc repnz sar cmpsl add popa (bad) or fdivrp lret cltd pusha xor sbb cwtl and mov std mov mov mov and sub dec push or imul jbe test adc mov mov adc mov mov bound fimull ja mov and lcall pop popf mov (bad) cmpsl sub inc adc sub dec add inc aad out lret es cmp adcl ficom mov inc jmp push xor push cmpsl mov and push jmp out xchg push dec inc jb jge and xchg test sarb cltd sbb push jge adc dec hlt sbb cmpsb ret aam inc (bad) fadd add mov int add stos addr16 mov loopne and mov mov nop and mov mov jne cmpsb jbe pop adc sub xor push xchg arpl dec dec (bad) aaa ljmp rol cld scas into mov jle mov jns popa push jae cltd ret mov scas shrb fistp cmp adc add in jae push xor xor test repz cmpsb inc and xchg xor mov mov pushf jmp dec inc or and sbb imul in imul fisttp xchg aad push and mov add loopne or ret aaa mov xchg sbb and std adc push nop bound js (bad) jmp cmove shrb dec js add sub xchg inc and dec add xchg scas lcall (bad) aas cmp loopne (bad) je dec inc add pop clc pop lahf dec xor add xorl xor mov sub cmc jp mov jne lret (bad) enter shrl dec rcll imul idiv mov push xor outsb adc (bad) hlt mov out xchg push xor leave aam xchg cs popl cld in push cmovp push mov jecxz insl pushf lock dec xor movsl cld xorl mov mov shll pusha xor push outsl dec pop xor (bad) daa leave lea int push ja adc outsl mov xor outsb push test sub sbb jl repz mov or outsl and cmp and das xchg mov lret xor sub dec std inc add cmc jno ror in and sti scas nop xor cli mov lea xor test call addr16 scas inc push pop clc jp xor fistpl shlb popa pop repnz js stos sub je ljmp xor cwtl push or cmc jge mov jb adc adc (bad) xor mov cli scas pop jge sub xor fwait (bad) sub (bad) sub mov jg loopne push xor das (bad) call int3 push aaa pop dec repz dec xor cld cmc xor fbld and xor pusha mov jae fmull pop sub outsb popf ret adc incb or push pop loope sub jae mov inc ret js rol jg jbe scas mov pop xor push mov jae or (bad) jge xor leave mov pushf in out push pop mov or movsl ja rcr (bad) (bad) mov add outsb xchg repnz cli xchg nop pop push movsl dec cmp repnz in mov cmp ja mov push xor mov je cmp xor loope,pn xor clc add mov lods aam fwait jmp cld jge (bad) cmc xchg dec push xor lock mov push pop addr16 loope sti mov pusha (bad) xor fdivs int3 aad mov mov jmp mov and xchg aad sub mov xlat daa mov xor mov cmp imul sbb out cwtl repz dec push jge mov push mov aaa adc jl mov xor lret sub into xor jno mov into pop cld mov sbb mov incl shll inc jo sbb xor shrb lods hlt movsb push jae or mov pop cmp and jmp sbb fbld mov repz sub shl fmuls jo cmp int3 dec int3 mov push mov xor div stos pop mov outsl sub aad cli mov inc mov outsl test cmp jae fstpt dec popa cmpsl dec fnstcw sbb inc pop pop hlt icebp mov xor ss add or adc dec add (bad) iret push (bad) sub pop push imul outsb int3 mov lods sbb fnstcw dec xor sbb xor repnz push sti in jae pusha dec xchg lds xor push xacquire fcoml clc push jae mov mov and clc xor mov scas dec xchg cvttps2pi cld movsl call sbb xor jo xor xor aad sbb sbb jbe adc scas mov hlt or shrb (bad) mov out fwait out mov mov (bad) xor or push popa ja add mov adc out cmp push or hlt mov stos xchg push xor test add mov (bad) cmc pop cmp or test push mov fimul sub inc aaa out push out mov test insl cld sahf sbb dec jmp imul sub test adc xor push jae fcoml (bad) mov icebp mov add (bad) call fldcw insl and adc in sub push and lock jne test push cs mov jp insb cmpsb pop adcl push (bad) hlt rorl fs jbe daa mov lahf mov ret pushf lds sub cmc cltd jnp inc cli test adc lret (bad) repnz ljmp and pusha xchg push or push sub inc jae jl (bad) mov testb mov in mov mov push xor fidiv jb mov outsb xor push push je mov sub jp in mov inc ret mov adc out sub mov in mov incl insl (bad) sub popf push cmp sbb dec and insl mov mov mov fnsave dec (bad) pop add stos jno out das adc ret repz cld xchg test mov sbb mov cli sub lods pop imulb jne fiadd insl outsb aam pusha mov ret dec dec lds out scas cmp dec inc xor int3 sbb lahf mov jp leave xchg aad mov stc (bad) xchg iret ja dec xor ja xor sub int addr16 mov call jp jg and xor cmp stc xchg hlt rcr scas inc inc jae or clc cmp xchg push and mov iret je mov jp shlb adc mov pop dec adc push add mov and pop push aas inc adc imul mov jb inc js dec movb cmpsb inc dec lds cli jle add push cmpsl outsb sub and es stos sbb int rcr lcall in lahf mov pop lea add and xlat sti icebp imul fwait lahf adc inc nop lcall jle in sub pop push std dec and or sub pop es outsb ja pop adc sub clc dec mov (bad) enter jne je pop pushf xchg les std cmp (bad) aad pop adc xor hlt sub or pop dec fwait pop xor sub jnp sbb mov pop test test add ret mov mov cmpsl cli pop dec hlt or xor push lahf ja add inc xchg inc stc xchg sbb sahf inc add (bad) push mov daa andps cld push das fwait int cmp in roll and fwait mov orl or hlt and pushf mov or xor imul dec jne add jb fbld cmc xor rcll adc pop (bad) repnz mov sbb push xor out cmpsb repz xor mov mov xchg inc sub and rol and adc xchg xor stos lods xor adc (bad) repnz adc (bad) es pop stos pop xor sbb push bswap mov xor and add pop sahf sbb sbb test dec scas inc je xor add jecxz int3 pop scas sub jo add jge dec pop push ret add addr16 jne,pt cwtl outsb adc lods (bad) hlt adc insl repz mov ss jne or mov mov bound mov arpl or xor or rolb js jle adc hlt xor call jne mov movl pop fistl shr (bad) out popf adc imul clc push jmp clc std ja movsb cmc fadds bswap push in subl enter push push (bad) pop sub xchg sub pop (bad) add scas mov xchg sarb xor or mov std test cmp xor or jp jne mov gs jae iret stos sbb jb push bswap lods popa mov push add sub repz xor aas outsb dec hlt xor out (bad) mov or and mov jge add mov loope insb std scas xlat pop cmc xor js lret (bad) movsl in and mov sbb test aam xor out dec jns and mov push out adc xor mov mov adc mov xor ficom cltd xor mov xor test mov fsubrl jae add test mov or xchg xlat mov inc mov mov adc cmpsl mov leave inc sbb imul xor aas mov (bad) aad adc imul test inc sbb clc inc xor ret push imul outsl or pop ljmp call and hlt cmc lods pop mov test fistp xchg cmc inc sub in adc mov jne aaa stos lds adc idivl std scas inc lock fdivr inc pop or adc mov xchg xor jmp in xchg or inc and cli ret icebp je pop test imul or mov xchg or iret sbb sysexit imul das movsl fidivr pop adc xor push jo,pt mov dec ret in push xor std xor or jb xchg cwtl mov es jae sub and dec xchg push xor mov sbb in stc adc mov jo and (bad) mov mov pop lock nop mov jge inc pusha xorb je cmpsb xchg lock cmp jnp jp in sbb xor cld jmp mov movsl jle jb test jge jno int mov in out pop outsb movsb mov sub ljmp xor adc mov xchg mov xchg cli pop clts add mov adc push fcompl lcall cmp in sar mov xor mov adc sbb je jecxz mov push cmp cmp sbb aam imul xchg dec sbb xor data16 cmp or adc hlt test pop lods and mov mov and sub push dec xor sbb xchg mov add xor repnz ret or movsl xor add lods add fstpt pop ss or (bad) cwtl or shrb inc popf insb movsl inc data16 std cwtl loopne add mov lea ds dec add and or fwait cli outsl adc xor addr16 ljmp rorl push xor mov jo test mov pop cli jl clc mov lret js push mov jno fwait lods imul (bad) xor jmp stc xor jae lahf pop scas mov push jg mov gs aad inc (bad) push je,pt (bad) fcmove or mov mov adc or jnp mov jnp xor leave pop int3 popf xor cmp mov gs (bad) xor (bad) data16 jno ret jle dec movsl cmc push fsubrs cltd mov loop cli add mov neg out cmp cld sub scas xor aaa inc not xor push fisttp into jp jb mov sub inc xor fs into mov decl xchg jmp (bad) clc lods jae xchg lret mov adc mov repnz dec insb pop adc xor cwtl and jns movl adc lret xchg inc xor repnz jge xor scas out mov mov inc xor shrb add and and xor xchg xrelease add xor (bad) inc mov repz mov test mov out aaa ret loop andl inc xor xor test repnz shrw das xrelease add jae loope lret out mov imull mov into test cmpsb lret jmp or iret cmpsb gs test xor jb mov dec dec dec cmp jo fldcw xor xchg sarl fwait aas push dec stc and test fildll out adc dec (bad) jo rcll mov push cmp orb ret out repz lcall mov incb xor jmp out push xor scas orb lea jmp mov sarl xchg gs in sub loope push add mov add mov jbe push mov mov mov in xor pop test mov xor call mov jmp (bad) outsb cmpsl scas jnp aas movsl mov mov xor mov orl aad pop aas dec jne fist and testb xor into add popa xlat mov out pop dec lcall lea jae cmpsb xor in sahf push popf pop push sbb mov sub xor xchg mov push dec pop std push adc (bad) fbld inc mov pop adc cmp lods mov dec cmc xor add dec sti cld sub out cmp or and and repz leavew mov jp mov cmp pop and jbe add xor add xor in jmp adc js test iret adc iret lahf (bad) lods movsl call or sub scas ljmp pop mov jp imul add ds call leave xor incl xor push push outsl aaa mov daa pop dec cld xor out loop cmpsb gs (bad) mov insl xchg mov fscale lods cmc push push and shrl icebp xchg cmpsb jae inc sbb xchg dec push rcll jp inc call test cmpsl daa push pop xor pop pop mov cmp push mov sti push jno (bad) jnp sub lret mov ja rclb and fdivrs mov ljmp insl dec and pop cmp (bad) stos sub sti push ljmp das insl into je lret imul mov sbb jnp aas pop clc dec xchg pop inc in xor sub mov data16 jbe subl loopne std add pop dec add bnd loop sbb push sub push movsl jno imul adc lcall ret mov xor cwtl and mov repnz hlt fstps cmp ret testl cmp lcall lahf scas or icebp jbe sbb outsb mov jg lods fmull sub pop repz (bad) popa sbb je loope (bad) adc sub add lods xor jo popf fdivl xlat jb mov sbb add std imul pop jnp pop sbb xor sub repnz xor fbld out ss (bad) xor sbb xor cmpl cmp (bad) xor jecxz xchg (bad) mov data16 pop (bad) lret jne push or stos ret leave je adc mov mov jge lea jecxz add dec imul pop push dec or xchg jmp popa lods and in xchg mov pop inc jae ret in lods sbb loop and mov je and wbinvd aad hlt add fistp nop xchg hlt and or adc jl xor add test or cmp scas out mov popa (bad) sub xchg aad stos std sbb sbb (bad) out xor in cmp outsb xor mov int sti xchg test cmp jb aas (bad) repnz loope out pop xor mov sbb jnp fcmovu hlt cld mov pop cld mov mov (bad) rorb push lods inc cld add and (bad) test adc fsub jecxz cli stos xchg adc pop mov jnp das shl (bad) xor dec scas and test pop sti sbb or fbld dec out daa test enter xor cmp hlt cld lods pop repnz (bad) xor das jle mov andl scas sbb pop inc jo push xor sbb mov lock mov imul call clc repz nop jns jb (bad) jno daa mov ss loop sbb arpl xor ss push xor inc fsts test mov repz sar cmpsl sub xchg repz xchg aam imul add lods push clc stos xor mov fwait (bad) aad xlat ret sahf or add inc sbb popa je dec subb jno xlat pop (bad) xor pop xor ret push call in gs cmc je and inc push aaa cmp lods cmpnleps mov std jne xor jge ja inc sti aaa outsb or clc cltd adc imul sbb xor fldl sub cltd xor add cmpsb xor aas xor xor sti jle inc xlat xchg add addr16 xchg sarb push ljmp mov stc xchg mov repnz push and enter push or or xchg ss fnstcw mov inc dec in jno sub pop stc ret or cmpsb jle in inc decb mov cltd ss pop mov shrb shrb es push fdiv rcrb iret mov imul sub push js push insb mov pop dec adc mov decb test repnz mov dec cmp mov jae inc xchg fmulp add gs or xor ror arpl inc jmp subl imul push and fcompl xor mov packsswb inc cli jp insl gs sub hlt test mov call mov jns push xor nop clc fistpll xchg fstps xor and imull xor push pop ss xor jmp pop inc cmc insl cmp mov pushf xorl pop adc add pop stos fist adc mov sbb mov fucomp push xor xor add js insb pusha inc out xor rolb pop shlb add jge push xorl cmp jae mov xchg dec push push mov xchg sub sub bnd add ret pop jle les aad fwait xchg scas jecxz sbb and and rorb rcrb xchg (bad) push sarb and aad pop repnz jo das cmpsl pushf jo (bad) adc test pop aam push inc ja std ret repz add jnp jae and or sbb inc je sbb test adc mov mov das and cmp std cmp push mov sbb or ljmp sbb in (bad) xor iret icebp or xor add mov push cli repnz sti je dec add cmp rcl xor mov jecxz (bad) xchg loop pop adc lea pop ret aaa repnz (bad) mov or (bad) lret daa fdiv cmp mov adc jbe sub imul outsb push or aam xchg add stc mov je or dec jl gs mov test lds or dec xor cs cld out repnz rol ljmp xor out adcb rcrl mov inc sbb out cs xchg push fwait or mov or call outsb inc int3 jp call push (bad) mov (bad) je imul shrb rep rcll pop fiadd mov mov fildl fistp pop movsb lods and mov div ss ljmp adc mov mov popa es ret mov xor test (bad) mov jno insb jbe adc in adc add adc push and test pop xchg popf int3 mov jo sub sbb xlat add and inc stc xor cld fisttp adc xor cmpl xor xchg xor add inc mov push or cmpsb pop adc xchg ss fdivrs ds xor mov gs cmp dec push add imul jno std repnz cli sub jns fcomip sub aaa or jge xchg je or imul adc shrl jno add adc jns add cli cltd clc ja (bad) cmp jb dec ret (bad) lock arpl mov pop ja imul xchg in bnd or mov add push jae (bad) repz sbb rolb das xor jae cld cmp fildl xchg cwtl or lcall scas gs jecxz mov pop fnstsw test inc mov sub ret sub xor and jge and call bound out mov into mov out (bad) andl adc cmp mov jo xor or decl ret xor jb inc add mov cs inc iret pop jb (bad) gs adc scas push cwtl cmc mov xor add lea xor and jmp test xor mov insb cs aad sub js xor in jle gs lcall pop mov adc xor in jno les push imul gs mov in jb (bad) mov fstpl loopne cli loop jb push xchg adc out sub into lds fcmove and in sbb (bad) jmp inc repz mov push cmp or bound into rcll sti xchg xchg sbb add cmp imul repz aam sbb push ja test pusha jnp iret sbb xchg cli mov cs cmp inc pop jle sbb sahf mov lods hlt or cli ja test scas loope xlat add enter ror jbe,pn daa dec test ja repnz loopne adc jecxz je lods jl cmp inc gs sbb stc xor pop mov mov mov pop imul or ja jae jo loop repnz (bad) cmc or ficompl adc rol sbb push push inc divb jmp mov scas jo sub and les ret push cmp dec nop or loop add mov pop sub pop mov lock push iret and or pop test xor sarl xchg sbb mov jae mov std adc popa stc mov imul or pop xchg data16 or rol iret cmc xchg gs test test cmp test or lcall xchg mov test rcr inc repnz dec mov inc adc push scas xor (bad) fisub inc push insb push dec pop xor pop ja ds mov sub mov rcrl fidiv pop push cmp pop mov sbb xor jnp pop mov scas sub cmp jge xor sub dec xor test inc notb push sub sahf repnz fcmovnb xor mov jg mov jns lcall inc or in mov sbb sub mov fcmovne (bad) or int3 xor cld mov jp jge pop aaa xor push xchg inc xor jo addr16 xor iret out test js jle mov outsb cmp add pop adcl xor or sub push nop ja icebp rorb ret jae je outsl mov mov adc mov or add cld add xchg adc sbb pop xor je addl ss daa lea or jae in test int3 or mov fwait cmp xor xor mov xor leave shl mov mov rclb push test mov mov addr16 cld add xchg jmp mov add pop sbb mov je (bad) fwait repz cltd sub mov or lds push ss jmp push pop lret hlt push pop paddsb add xor sahf (bad) (bad) call inc add (bad) jmp ds movsb dec jle insl js mov xchg ret fnsave subl (bad) (bad) out jecxz mov mov pop ljmp adc pop mov jecxz xor fldl shl stos rcrl stos test daa mov clc (bad) cmc movl inc mov or mov push or mov cld push dec es arpl daa stos pushf adc cltd xor test in fldt pushf inc pop and adc hlt das aam aam packssdw or leave xlat stos sbb sub movsb push sbb gs hlt xor push adc push in inc or mov inc movsl push or shll inc jns ja andl pop jo mov (bad) mov aaa repnz add mov mov ret stc into ficoml arpl xor sbb sub mov sbb pop loopne dec fistp loope aas pop in add cmp mov (bad) push push jl push push mov ljmp insb sbb mov inc xor negl xor push pop out mov adc fdivs jae imul push sysexit and cmp scas push sbb stos pop xor das js mov cs xchg dec push cwtl repz push data16 inc cs adc xor scas lea add dec sub scas xchg sub adc and jne push push mov xor push insb and (bad) push or (bad) fwait xor pop push stos add cmpsb jbe pop xor clc mov (bad) adc lea pop hlt neg sbb sub daa arpl pusha or add mov outsb mov sub jle jge or int3 sub aas das (bad) rorb push outsb jbe int adc xor mov pop mov xchg loope pusha mov pop jmp xor outsb mov fsub aad mov dec inc fist cmp inc stc (bad) outsb xor xchg aad imul inc jae xor sub jne xor xchg push jmp roll xlat hlt mov mov js mov jns add icebp or out inc jo test cmp bound cs cmc out scas lds sub sbb nop xor push incl xor mov out xlat xor jnp jb mov ret and mov adc lcall std out stos xor in mov pop mov iret imul loope clc xchg cld jno push mov xchg mov in test xor sbb push sbb xor (bad) mov roll cvttps2pi stos ss dec fcomps push cmp (bad) repz les mov mov adc dec hlt es inc into (bad) js or test or or push push test popa clc fwait (bad) mov and mov xor push scas hlt mov idivb xor mov in dec xor and mov jo cld mov pushf bound ret rorb pop mov (bad) add inc cmp pop inc ja and xor xor jecxz inc xor mov cld mov sahf add sbb hlt dec ss inc xor add mov mov jnp and sbb wbinvd xchg jl bound daa push lret push loopne pop pushf sbb mov in dec hlt sarl adc or sub je or add cmpsl mov loopne dec hlt pop ljmp xor pop test mov jae pop push jno xchg fucom add dec and int mov cld xor or mov adc repnz loopne loope fs stos pop jg sub cmp ds sub repnz adc lahf mov mov mov inc mov xor outsl daa sub sbb jle mov lods insb sub mov mov mov aam mov xor call add mov or xor dec cmpsb add je sbb cmc fsubrl xor mov xor xchg mov in insl mov mov jle mov mov xor inc jnp fdivs cli in pop lea or xor stc mov je push pop out or loope dec lcall adc ljmp ret xor stos arpl or mov and fs btc jno pop pop mov mov insl sahf or or xor into add hlt stos test ljmp or xor mov or adc adc dec (bad) or jmp mov pop push push leave add es add mov and jne repz xor add cld add movsl repz mov push imul daa mov hlt dec push sahf xor jbe inc dec add or hlt arpl fcomps adc mov jl pop jae adc jae pushf fs mov xchg mov popa adc sbb pop cmpsl jge mov xchg push lahf movsb adc xor jl sbb xor std push cmpsb imul cli and fs xchg mov jb mov adc gs sbb (bad) add jp dec adc int mov jnp rcrb je mov mov add call lcall (bad) and mov sbb push xor (bad) repz dec cli ljmp fwait pop movsl in mov movsl test push and jns movsb sub hlt xor por adc ja incb xchg jno xchg add sbb (bad) jnp mov popf icebp mov movsl data16 daa arpl ds and xor cmpsl int sbb sti xorl add lea sbb mov push jne cmp lahf sbb pop (bad) repz (bad) lcall and jno (bad) or cs lret fucomp aas jb xor mov mov addr16 jmp cs pop (bad) sbb and int inc sub stos bt or lret mov pop xor pop cmp mov mov cmpsl xor jl xor pusha sub out (bad) xchg push xor and xor lea and out sbb ljmp add je pop push adc mov pop or dec je pop adc mov lcall xor pop js sub fucom pop pop loop scas jns rclb aam rcll popf cld pop enter popf ja adc lods push sbb inc (bad) aad pusha inc gs add mov or sub lcall mov icebp ja mov jp pop adc pusha mov add fmull or xor fstpt movb xchg pop lret mov popa enter push rclb call (bad) xor sbb out ret outsl mov pop xchg push outsb pop cltd xor scas ljmp sbb (bad) mov jno in mov ljmp or sbb mov cwtl ret cmpsl adc sub push into xor xor fnop pusha or sub cwtl sbb add mov jle xor popf dec sbb xor mov loopne xor fidivr in int adc inc cli cmc jb cld popf pop gs xor xor lea mov push dec adc pusha out imul fs int3 inc mov xor es jle add subb xor mov xor inc mov jle mov dec imul mov add leave fadd (bad) xor or jno (bad) jns faddl sarb pop add das mov je sub repnz mov test lcall xor imul ljmp pop mov inc and mov xor div mov cmp dec test clc jle mulb adc sahf loope sbb or jne ret int pop cmc sub mov xor dec and mov or out (bad) rclb jge or and lahf sahf ljmp (bad) cld repz mov jl std and jp mov adc pop sti push xor test iret fidivl jle repz xor mov and ret test inc stc inc sbb test xchg lahf ficompl xchg dec clc ret mov rcrl adc inc f2xm1 xor or imul popa cmp xor xlat jbe ljmp or les xchg (bad) stos sub sub dec sbb mov outsb and jmp jae push cmp ljmp xor xor pusha addr16 mov xor mov jbe test sbb imul push pop xor xchg mov outsb sub bnd cmp xchg mov (bad) test mov lea adc jno sub daa jle sbb mov xlat xor (bad) repnz pop dec jbe dec add cmp cli inc inc cmp lods out inc cli dec imul mov in sbb and pop inc jmp sbb mov shrb sbb pop repz lea into jp pusha xor mov aas mov test cltd imul (bad) repnz add outsl cmp cmc cltd loope mov mov xor lods popa mov es inc dec xor sarb popa cmp xchg (bad) mov push cli push inc sub iret mulb inc pop add xor jle imul cld sub mov mov xchg mov in jb pop push fs xchg js pop adc and xchg push or fdivp fldl leave xor loopne inc pushf mov test je push and adc stc xor (bad) adc mov std loopne fisttpl mov add mov dec mov cmp test push adc inc cmc in in and pop aam add jl add loopne jle ss in aaa je jge or pusha mov xchg (bad) cmp inc mov (bad) mov push fsubr add lahf xor xor sbb imul xchg repz sbb pop mov (bad) adc add pop hlt arpl in dec in xchg adc dec fcomip and mov aad xor dec push xor adc rol test mov in test fwait negb push or es mov jns mov std jle mov ret xor cmp sbb idiv adc jo scas decb imul (bad) and adc mov pushf mov jg stc xor cmp xor out mov push (bad) std subl rcrl aaa ljmp js movsl mov pextrw jl mov icebp inc and mov movsl test aam jg insl cli aaa sub rcll dec adc sub jae dec es sahf jbe shlb hlt js mov jnp lea pop sub lret (bad) repnz jo adc jnp xor mov pop push js xchg xor sub mov je inc add mov adc sbb mov aaa scas dec call and or push add test or push mov sbb pop stos jno push inc cld sbb in popf adc in cmp cmpsb jae imull test dec push cld out or xor xor ss jns bnd lods push xchg xor xchg or xor js xor add cmp or cmpsl or fisubl cmp ds push (bad) ret negb lahf std mov adc ss int test sub add jno aas inc add add decb pop inc clc cmp cmp gs or movsb push repz and (bad) push ret jbe imulb adc sbb arpl fdivrs xor xchg and sbb xchg sahf les popa mov inc mov (bad) pop test mov pop test cmc push inc cli scas jmp and rcr jle test (bad) call aas ds cmc pop xor sub lds sub cmpsl mov repnz ds sub sub (bad) es add pop xchg repnz xlat rclb mov add sub inc and hlt and sub sub xchg ss jbe mov pop cmp (bad) pushf mov enter add je subb push pushf ja jge (bad) jae xchg xchg pop cld out movsb add ret outsb jp (bad) mov test lds gs sti clc mov repnz add jg jp pop leave hlt inc fiaddl ret (bad) (bad) jecxz inc mov dec xor xlat dec xor inc sbb mov cmp decl mov sbb adc inc ds std dec or sbb (bad) clc xor adc js aaa ja fwait daa bound pop xchg adc int3 popf adc clc xor xor (bad) sarb add int mov ljmp push or xor jnp fwait (bad) cmp jge imul je sub push pop and es adc push popf jne insb pop cs jmp jle mov push enter push and sbb sub mov mov cmp lret outsb aas cli daa icebp fdivs adc test loop (bad) xor jnp mov mov cmp (bad) xlat out je push mov cmc movsl sub mov out jo sbb iret loopne ja jge mov xor addr16 fwait pop inc push lock and xchg xor icebp dec fstps fidiv dec decb out je xor sti pop jae,pt xor sbb adc daa push pop out fwait repz fildl inc mov and (bad) mov dec enter mov in add shrb jbe inc ss xor in daa scas lret inc repnz mov cmp in xor mov xchg sbb ret out (bad) rol cwtl xor iret pop add mov repnz outsb push movsb loope cmp mov add aas lcall int3 pop jl cmp nop decl mov adc sub jmp cmp lea std cmpsl jns rol leave ja ss sahf adcl dec aam dec inc imul cmpsb jne jnp das mov mov aaa gs push pushfw sub xor cli and je pushf and sub pop and cld and or jg inc je sub cli adcl jnp xor jb mov pop push lea push test cmp xchg cld rorl popf je push cli std add (bad) repz lds mov dec sarb enter pinsrw js mov dec stos add arpl inc addr16 lret ss mov outsl pop cmp cmp add and xor push cmp fmul or dec and (bad) sub push mov lret test in lods repnz and mov cli sub jbe nop sub mov movsl pop sbb js push or imul cmc aaa repz std packssdw clc adc lods into lcall stos popl jb jae lahf sbb hlt outsb insl popf sub (bad) fstpl mov hlt hlt and scas sti sbb xor scas stc inc xchg movsl ret xor dec mov test repnz xor sub mov add lock cs pop xor cmp jae outsl adc call mov push xor bound xor add push pop arpl sbb adc std xor ret test fmuls sahf and xor xchg aaa pop push mov mov shl divb mov cli in jo clc mov movsl xor xchg and mov jno inc or jbe push sbb dec outsb (bad) jne mov sahf mov xchg ss fisubrl int3 pop (bad) xchg imul movsl mov je ss scas xor repnz xor outsb or add fstpl mov push je aad test fistpl or scas ljmp pop mov mov xor inc and jae dec sub sbb jno xor push clc icebp stos scas mov xor jae jge xchg pop mov xor andl lcall pop pop cmp adc xor dec mov xor jb push mov imul xor aaa sbb test (bad) sub test clc dec inc cmp outsl sbb add pushl vmwrite hlt xor xchg mov push xor ret out fiaddl push and imul jae es dec mov jg hlt movsl mov adc add and xor daa push sbb cmp push xchg imul add js cmpsl mov pop sub or decb xor sbb lock xor mov hlt add in adc out jae pop fild cmp aad adc data16 cs jg xor es loope movsbl ss cmc icebp adc int xor mov pop or add dec scas sub jne lock cld jns lds and mov lret and push mov adc imul (bad) sub js test loope nop popf cmc test xchg mov rorl mov dec outsl and ss (bad) sbb adc (bad) ljmp pusha movsl push sub inc mov ljmp (bad) jns in loop push pushf jnp add andl adcb pop ss xor int icebp arpl mov push popf gs leave dec test incb outsb je pop jp in inc mov lods icebp cmp sbb push mov popl dec mov adc sbb add dec adc dec dec push repnz mov mov mov and pop aad test pop psllq xor cmpsl into imul jp clts movsb or sbb dec sti add jno test mov or (bad) mov cli adc les mov adcl jmp or adc mov sub xchg jp ds daa sbb cltd lods enter rcll mov cli add (bad) aad test xor push inc fwait jae mov test out pop imul sub xchg mov cs mov sbb mov cmpsb je adc push or les and fmul jg (bad) xor jne lds andb clc (bad) outsl pop fildll xor xor adc push add nop in inc xor push out js pop rcll aad mov sbb push cmpsl xor xor push push dec sub cmp sub and mov push add cmpsl je adc repnz mov movsb repz mov push and xor stos add in sub jle mov inc adc aas cmp (bad) dec sti je cmp add aad stos les mov mov pop enterw pop cmc das pop dec push or jl jge stos cld stos insl mov sbb push and xchg stos xor fsts push sub mov outsb daa jbe sbb fcoml (bad) add test (bad) dec leave jg xor mov xchg xor clc push cmc xor das mov pop adc push dec shll mov dec out xor pop inc xor xor lcall xor mov mov xor jle push and andl (bad) daa in hlt push fcmovu (bad) outsb insb fsubrl cmp cmp mov mov les loope cld andl or jmp inc mov jno sub sub pop mov jmp js in jns xor lock aad (bad) push iret adc insl clc xchg shld and xchg mov loopne pop or sub pushf push mov xor mov pop pop dec xor push or inc sti xor andb ds jge fidiv fwait mov xchg gs jno and mov pop repz xor jp hlt stc pusha scas es cltd cld push scas cwtl sbb xor xchg mulb or dec pop sbb dec fdivl int mov or popf in mov imul sub pop adc dec cmp pop dec repnz sbb cmp cld stos fimull test push mov push stc jp jno sbb movsl xor (bad) and int push sub test inc jg xchg dec lea xchg out mov (bad) sahf jno pop push jns shlb dec pop push or fdivs sbb inc fs ss xor dec arpl aas mov xor jbe int and pop xor mov adc xchg mov outsl xor arpl pop es mov inc xor into ja adc sbb (bad) aam out sbb mov or std jmp xor xor scas (bad) and call dec adc in mov js jb inc stos xchg lret push xchg movsb movsb push imul out or fnsaves jg push and cltd sbb mov lahf in out (bad) jge pop sub outsb sbb mov (bad) stc mov insb mov mov aad inc clc adc jne into je and out sbb (bad) mov gs sbb out sbb mov xor (bad) xlat in push mov jg xor andl and cmp mov sub sub (bad) push (bad) sbb mov pop repnz jp mov je aaa test adc jl,pn push insl and xor lock out fucomi xor (bad) sbb int xorb clc pusha aad test popf xor cmp mov xor sub cmpsl pop xor test adc or or fucomip mov data16 add sbb lcall mov cmp xchg and loop mov push sbb sbb in lods jmp fsubs jae or add out (bad) mov je xchg xor or test xlat sbb cmc test fstl push inc xor and out pop or mov test sbb pop loopne xchg pop xor popf popa xor mov lcall out xchg dec push xor xor jl mulb lcall jne fwait dec sub test arpl xor inc and add or pop and or or ret pop adc mov xchg dec test push and adc dec ret je mov loope inc shrb fnstcw mov inc inc pop and jnp lds xor sub mov stos outsb xor fildl fmull lcall ret xchg insl xor mov add or rcrl dec add cmp or push not pop je mov push inc imul mov mov (bad) stos pop iret and xor loope nop dec adc xor mov add xor ljmp jb mov cs mov cld insb test adc pop push add or out xor xor sar xor pop mov pop add push adc popf jb xor inc mov ljmp mov jl sub mov pop cli int3 mov jp adc mov iret xor stos aad dec fdivrl sbbb dec (bad) in movsl xor mov hlt movsb xor aas das xchg js add cmp dec jnp xor push jge and pop (bad) cmc adc add div test (bad) adc jae inc xor xor iret rorb lret das mov das (bad) xor shrb mov pop adc mov int sub mov dec cmp aas sub les fstpl (bad) dec adc aaa (bad) mov scas mov aam cmovo les out scas sti int3 (bad) xor sbb repnz in loope or vmovaps stc fsubrl sbb cwtl adc dec pop push mov outsb fistpl xor xor dec adc outsl and adc repz jle lock divb xchg cmp imul push lcall adc sbb mov cld fdiv fsubr or cmp mov sub sub xor cwtl push mov jmp ret mov stc and lods push repz out add cmc mov fucomp sbb fnstenv enter mov jb push clc gs into (bad) jmp (bad) sbb cmc shll mov or cmpsb mov mov imul xchg bound mov inc aas cmp mov lods mov jae addr16 fsubl push outsl xor sub sti lods clc xchg xor pop lock xor shr mov out mov dec rcr mov (bad) and adc sub xor adc loop test mov rclb lods std icebp push cmp cmc fstps jno call fwait pop mov hlt pop jge je sub popa adc push js adc cmpl dec aad xor jmp xor cmp or jo es pop hlt mov jmp fwait stc jno xor add ljmp out adc faddp jg jb xchg (bad) mov jecxz xor in add ss out jge jmp dec pop stos xor mov push and jl jns mov lcall mov xor mov mov das addl add ret fidivrl lods lahf mov adc enter sahf pushf ljmp dec mov movsl dec cld dec mov (bad) iret addl xor notb loope enter xor and mov mov xor inc xor outsl call leave lea movl imul inc ror call fnsave aad repnz mov ss out adc and hlt jle adc sbb sub pop (bad) cmp adc jp sub into lcall popf jb xchg mov es dec repz sahf push popa cmp scas mov dec lea xor add jne or mov adc mov inc loope pushf or and (bad) repnz lods pop in xor sub sbb push add movsb in repz adc jmp pop adc lcall stc xor xchg push (bad) loopne pop cli xor outsl scas repnz out fwait (bad) cmp add cmp adc hlt jge push cmp sbb int3 fistl call mov js pop sub ds clts pop xor lock stc push mov push cld adc lahf sbb adc xchg test xchg xchg bound dec mov add adc mov jnp adc xchg pop xchg je insb mov into addr16 and sub sbb ret mov pminub add pop xor mov ret nop mov sub push cmp push imul cmove nop xor sub or out repnz pop sbb les jno aas inc out xor iret ds xor aad js xor mov mov pushf int3 add daa pop xor push fnstenv clc fistpll push orb adc and movsb push int imul sti cwtl xor and out jg (bad) icebp mov and jno jbe sub fstps and shrl mov mov (bad) sbb sbb shll or xor in mov add cmp fs cld add mov stc xchg xor out movsl in sub fcomps or sbb xchg das jnp mov lods and insb out cmpxchg rorb inc add mov cmc popf hlt out loop in xchg divb jae xchg mov or std mov fisubrl and push xor repnz dec jns xor (bad) xchg xor fldl xor stc scas je adc int cltd daa enter ret test mov ds das xchg xor lea daa stos cmp xor cwtl pop sbb dec imul mov xor xorb fwait repz push add dec xor add xor gs cmpsl sub fcomp hlt aas inc dec aaa or cs push mov cld or cmp mov xor mov (bad) fnsave and cltd cmp fnsave add rclb jae push les ds repz cmp (bad) leave push mov fisttpll notl and sti stc sub sub stos aaa sbb pushf je cs repnz sbb mov xor sahf cli and movsb rcl out hlt pop imul je sub test cli and icebp stos aaa add adc je (bad) xor idivb xchg jmp in sbb pop pusha (bad) mov sub xor (bad) mov push mov cmpsb sti stc je cli pop ljmp sub mov lahf pop test ret into mov hlt xor or scas push mov stos std cmpsl lods mov rcll sub (bad) jge cmpsb pop pop daa mov mov xchg sbb lahf dec (bad) xor mov cmp cmp lea (bad) fstl cmp cmp mov popa repz push and dec sbb pop push mov mov cmc int ss pop insb shll popa jle lahf aaa frstor je je scas roll sbb mov ret sub jne sahf and pop es sbb daa mov xor cmp out bnd lods push push or xor nop pushf pop sbb or sbb inc into mov sub adc push pop or fs jb ja leave jb pop pop xor adc or sti fwait insl push stos inc push xchg adc or imul push jb adc or inc adc lock mov out call mov cmp je test pop aas xchg repz push int3 mov dec xchg inc dec shrb inc xor scas test pmulhuw jg pop mov dec mov jae arpl lods jl pop hlt xor loope pop popf xor sbb xor or lea jo ds lret lods add lods std enter inc test xor mov add ljmp mov sbb loope xchg mov push bound pop dec pop push je xchg cwtl lea cltd std fs xchg es sbb inc fs ficoml (bad) push (bad) add loope fisubl cmp cmc sbb dec jne fwait xchg mov xchg push pop (bad) adc stos es jmp mov cmpsl jecxz add in push lahf and test repz pop mov stc (bad) mov mov aam ss repnz dec cmpsl push gs lds pusha inc repnz cmp and sub cwtl jl xor xor sti in jge xor int xor aaa hlt lret mov mov push js ficom arpl cmpsb aaa push xor or popa jg (bad) mov comiss jge mov fucomip lcall xor inc clc mov in mov sub ss push in fnstenv jecxz or xor push xor lods setnp push add sub push push jno xor add inc sub push pop jbe xor ljmp adc and mov nop xchg aam xor dec xchg inc je data16 je lea rorl xchg pop sbb in adc lock and aad dec rorb dec shrl mov mov ffreep (bad) dec xchg mov pop adc adc lds dec add sub jg repnz sahf inc or inc mov adc add pop fsubs call xor sahf xor sbb cwtl mov sbb and xor rorb test mov jae (bad) cli mov (bad) lret inc cmp mov out or adc sub lahf mov cli pop je inc sub dec adc xor sbb pop and xor mov pop aaa ljmp mov xor jns xor js mov out dec hlt pushf sbb and jge orb mov aam xchg aas cvtps2pi test push aam mov stos fldt mov (bad) xor jl inc sbb fwait pop mov pop clc pop and push jecxz inc lds (bad) mov adc mull push fsubs sbb pop stos jmp lret sti fadd rcl xor xor mov stos in inc hlt iret or xor xchg pop mov pop imul cmp cmp cmp xchg jns adc adc movsl mov cs jne jg pushf inc js jae and xchg jae adc pop lahf fidivl and push fwait inc pop mov xor sbb push dec jmp mov cmp data16 sub xchg ljmp add cmp mov loop clc dec xor xlat sbb xchg je out dec bound mov and aam scas mov clc es ja out (bad) sbb fiaddl jns and xchg les mov roll xor shlb lds imul jg xor dec call stc push sahf adc mov fisttpl jmp daa repz lods mov adcl adc jo dec fwait enter ljmp faddl add stos xchg ret sbb mov pop inc dec outsb gs repz mov sbb scas xlat pop jl fs mov mov (bad) push lods mov in sarl and xor add sbb icebp mov (bad) addr16 add xchg or (bad) xlat mov pop dec hlt xchg dec dec dec cmpps (bad) xor sahf xor jno aas lods cmp push xor mov or pop (bad) nop dec lods test sub (bad) xchg insl or and adc stos cltd cmc enter aas sub xor lahf jle jge push push push jb mov and stos push and jb mov cmp cmpsl lret push ljmp mov jg in sub xor push push pop repnz mov sbb (bad) jo xor call mov jle pop (bad) adc sub cmpsl jecxz jnp rcr test (bad) inc out aam inc mov jp ss gs lcall sbb xchg lcall push repnz popa (bad) (bad) jl sub jp adc dec out push mov adc rcll repz xchg pop inc adc sub aad in push movsb mov pop inc outsb push xchg sbb and lods push jo and (bad) xor adc adc xor add insl jb imul aam or pop aam fwait adc rorl ds fwait sub ss xchg dec pusha popf stc sbb mov inc and cmp dec and mov jno xchg ret xor and jmp mov mov aas mov cld mov and inc push cmp int inc xor or sahf insl mov push popf or sbb ss shll stos sahf cmp xlat xor lods rcll cmp dec inc sbb xorl (bad) js add push fwait popf negb mov sbb add and cs in lea and fs jb sub lds cmp fcmovbe lahf or (bad) jo adc nop mov ret call xlat movsb push int dec test and (bad) jle sub adc insb fbstp sub xor das ficom or mov enter xor ffreep jno sub sbb sbb add pop stos pop pop xchg push (bad) mov fld inc mov inc pop add sub iret pusha and jle xor or inc fs mov xlat ja sub dec jno mov insl pop into gs xor mov dec inc jp xor mov dec call sbb repnz sbb sti ss cmp repz xor lcall mov sub movsl pushf dec xor mov es mov lea out xor push ja mov push rorl je mov dec add pop inc or daa mov les add clc push imul es jne add pop fwait mov mov cmpsl and bound xchg mov add add jp bound jnp push out mov add out call faddl bound fcompl dec xor test xor fxch sub or add and adc addr16 xor sbb out xor add jno cld in xor push push jge jmp cmp (bad) jo insl test xor stos mov mov push xor lods lret jle je fstl pop je or xor sti bound in dec in repnz ja fist pop or inc inc or enter repnz sahf hlt scas and add xor stos test xor repz jl push adc lods repnz sbb add int3 and in xor mov and popf dec cmp cmp pop je sahf inc xchg cltd cmp popf pop stc xor pop sub js inc xor addr16 and loope arpl loop lret je setnp movsb (bad) or xor push mov out repnz hlt ja xor inc in sbb adc jns outsb fsubrs dec rcl push mov test rorb cld xchg add sbb pop mov mov negl fmul hlt ss repnz mov inc inc paddb mov mov das aad adc xor mov push enter xchg int3 hlt into lret fnstcw out jo aad adc push lods rcl push clc adcl (bad) adc data16 inc xor call out pop insl jge scas aaa add jmp cmpsb (bad) mov xchg leave mov pop call and in int3 cmc (bad) adc mov not xor push scas or mov or stos adc movsl xorl mov pop cmp fcoml and nop inc dec sub dec push push add jno mov inc popa add daa push daa jo (bad) pcmpeqw push cld (bad) cmc aaa stos push je and jae mov pop jnp sub xor incb cmp fimull cmp call lea call mov dec push cld push push dec popa decb mov xor adc mov jmp frstor insl jne sub rol sti stc mov dec or es bound and aaa push push daa jne pop cltd adc (bad) outsb mov in sub repz sahf aad mov sbb stos or cmc mov (bad) fstpt jne mov jb outsl adc insl adc out jb xor bound fadds xor dec fidivr lret and mov jnp cwtl xor push xor pop imull pushf dec add xor adc outsl cmp cli fidiv lea pop iret sbb repz mov sub hlt ja fwait mov dec cmp aam or or mov mov jge pop mov mov xchg enter jmp call mov cmc repz test xor jge scas lret sub jne or add xchg sti pop jg mov (bad) mov repnz outsl add aas repz adc rcrl or popa push cwtl xor fimull movsl dec hlt xchg ret push dec psubq xor mov out or xlat fidivl ret xchg inc andl and mov lds jbe ffree mov pop dec pop les call jno xorb shrb push pop mov cmp fs ud2 cmp std mov jnp fidiv (bad) cld (bad) lds or or scas enter pop jb rcl and mov xor push mov imul adc (bad) xchg mov out cmpsb es addr16 xor mov add aas flds push fldl insb fist xchg sub or dec xor and adc jmp sbb push pop dec xor arpl pop iret sbb pop and in mov push pop cmp rcrl rolb or icebp int ljmp jp rorb add mov mov mov mov xor push mov jecxz fdiv aam loop jl scas aas or xchg xor (bad) pop lock jns xchg push inc push les xor lret imulb or cld mov push xor outsb jne icebp bound xor push push loope ljmp mov jp aam pusha (bad) loope test pop mov push add out js jge xor in rclb cmc mov inc fwait adc or add arpl repz test gs and mov and mov sbb adc jmp or xchg ret pop imul xor roll mov mov (bad) xor pop bound xchg stc jae js dec or subb mov movsl pop sub (bad) mov mov int hlt out jg arpl in xor sti mov mov insb sub dec gs imul test xchg xor sarl repz jae (bad) loop fidivl mov xchg nop sbb jp mov or xor js fcmovbe xor out push inc (bad) cmc scas sub inc adc adc and or inc arpl xchg mov add lret sbb stos addr16 aad pop repnz lahf xchg lahf push push sbb sbb or hlt int3 sub mov sub insl xor jmp cld popf cmp jg rclb mov xor es fistpl mov mov mov mov les inc mov test enter ljmp inc out jne xor (bad) or in xor pop daa sbb push sar lea mov inc scas jne cmp adc xchg cmpsl mov pop inc and fxch and mov call repz sbb test movsl jns aas jno jg ds clc pop jno inc add out aam pop pop push jnp cmp xor pop stc mov insl sahf or rolb adc loopne dec mov es adc push sub jo sub outsb aam xlat fdivr and sahf xor pop ljmp cltd cmp (bad) jbe mov mov (bad) jg out fbld cmc mov ja jmp add mull mov xchg scas repz scas jae in push fidivr adc xchg xor and xor lahf push push sbb or cmpsl mov sahf les or data16 mov cmpsl wbinvd jns mov add fs xor add imul mov mov add push dec pusha mov arpl add mov mov (bad) stos in ret mov push xor xchg sar nop ss mov cmp jle aaa xchg sbb repz aas adc incl dec sbb xor jns xchg xor xchg repz jmp or xor fsubrl pop inc pop mov int jge out mov inc je lds std xor cmp call sub jnp (bad) sbb mov dec push or dec add lret jno enter pushf mov cmpb push js or mov mov adc jbe js (bad) adc idivb fidivr xor xchg (bad) xor clc sub add xor mov int3 pop adc gs repz cwtl pop mov fstps push push dec xor push mov or fs push adc and fnsave cld xor and push xor outsb sub mov (bad) mov and push stos (bad) mov (bad) xor ret ret dec xor cmpsl cli xor xor mov xor pop push push repnz cld jmp xor lahf or lods adc hlt pop dec (bad) sbb push adc mov imul adc aam inc and mov ljmp adc pop xor lods and jne scas or mov cli dec mov loope cli xor push add mov aam sbb les nop (bad) mov pushf xor fsubrl movsb jmp and xor inc dec std test sbb adc icebp dec into or xor adc lahf jle hlt push test in (bad) jl mov sub hlt test aam or bound addr16 lret hlt insl cmp stc add fisubr mov adc xor fs std push enter (bad) add into pop repz jg xchg loop jmp or mov and xor sub bound sbb xlat push mov test xorb sarb sti repnz es jg and add leave andb div xchg dec or pop out mov aaa lock inc xor xor xchg repnz lods fstl dec jne xor mov xchg push std pop sbb test mov cmp lods fbstp int3 mull pop rep in or sub sub mov cltd sub adc adc jle popa and sub mov push mov push fwait cs xor in in sub dec cld insl addr16 push sub sbb fistpl dec js mov xchg sbb (bad) jnp or or lret fiaddl add sbb js mov mov mov sbb mov daa lods arpl sub les cmp or add dec movsl mov popa mov lret adc cmc and aaa pusha mov dec sarl (bad) mov xlat std (bad) imul mov pop xor int or adc arpl xor notb mov xlat inc in pop cli inc mov sbb test sbb fisub fldenv mov cli sahf mov inc dec adc mov xor mov mov pushf jmp xchg cli test and adc jecxz in mov jcxz adc add dec or mov aam test adc je pop subb (bad) mov sbb je mov imul loope cmp jmp inc mov inc jge add sub lahf cmp add insl aaa idivb or fbstp jb rorl xchg cmp ja imul push bound lahf add (bad) fdivl arpl (bad) mov lock movsb mov mov sub push clc cmp push popa push lea pusha clc cmp push add add fdivs jmp jns scas in es stos add sarb jg jle addb xchg adc pusha jb lret sbb cmp xchg add dec mov push push movsl jecxz std mov (bad) hlt jp loopne sbb repnz inc pusha mov mov sbb icebp pop xchg or mov imul ss mov jmp pop (bad) jno sbb cs mov addr16 adc and push fbstp fdivp loopne mov jno mov inc insb sbb decb push cmpsb pushl adc aas ret xchg push mov cmp and mov insl inc adc imul and cld clc inc mov in add push adc iret xchg daa cld sbb stos cmp aaa jno inc add rcr xor scas aaa add sub and icebp (bad) outsb mov mov pop hlt nop stc stos das aas in leave ret cmc repz out fucom sbb rcll repz push roll (bad) pop inc xor jl icebp pop sbb cs add pop stos xor out add push jl or jg ja pop test jp mov ret mov inc inc hlt into bnd inc insb dec sbb int ds sbb dec mov jge ss inc insl xor jae adc cld cmp and rcl int rclb ja add sub add outsb inc jp sbb and push sub mov xchg in sbb loope imul dec or push cltd jno pop fildl add xlat mov fdivs fild pop and cmp cld dec add movsb int3 jbe cmp es aaa out add fsubs xor jae pushf mov imul push and pop sub imul lret sub jle mov inc cli scas mov pop mov lret out xor jecxz roll in popf push test jo dec cmpsb jns jle mov adc (bad) bound cmp mov (bad) cmp (bad) in sbb add cmp shll out cmpsb cld adc or push or sub add lods aaa je pop pop xchg xchg gs mov cmp out shl mov xorl jle das mull notb pushf inc fsub cmpsb fdivrp pop ret aad icebp scas out mov pop (bad) cld popf xor orl icebp adc cli push je adc bound dec add shlb or imul hlt adc sbb xor jne sbb enter xor test mov push or lret rorb fadd pop and outsb gs jae add aaa jp repnz dec hlt pop xor popa jb cs sahf sbb xorb push inc lock mov cmp lds sbb xor cmp mov mov mov leave in xchg loope jp sbb mov mull ljmp pushf hlt add into mov pop sub push xchg xchg xor push sub or std sub (bad) xor pushl es (bad) pop adc inc test jno scas add add sbb and xor lock xor inc daa or mov jno pusha xor add dec xchg cmp dec les je mov in pop xor aad fidivrl sahf je leave sar sub adc pop push mov adc jmp test add movsl imul push adc push jge cld dec jae data16 int3 cmpsb in in cs inc stc sti sub mov cld test bnd (bad) hlt das and leave add jecxz,pn (bad) cmp inc scas in cwtl xor pop jo aam (bad) xchg jne xor inc bound xor push pop mov int3 sbb pop lds xor inc pusha and hlt mov sub loopne push std test push rcrb repnz and xchg sahf int mov mov enter rcll xchg movsl mov mov dec cmp push mov inc jo sub jno sbb jo into or sbb mov fidivrl mov or mov xor std jmp scas sbb pusha sahf cli dec push decb scas sahf lcall pop (bad) jmp and subl ret das fstp aaa push divb mov mov mov pop mov push in mov mov xchg xchg call mov adc in xchg jmp adc jnp repnz mov scas mov cmp cmpl cmc and xor pop mov pop dec daa xor jae hlt xor sub ljmp push adc iret jb pop (bad) (bad) (bad) mov fcompl ss pusha fldcw imul ret test mov xchg pop xchg aas in jmp repz dec sub xchg dec cs (bad) mov push outsl inc and xor jo or ret and in push jp repz mov mov nop sbb mov xchg xor jae fsubs or cmp movsb jl sub stos fs aaa movsl xor adc loop mov sbb js dec sbb push dec cmp hlt dec outsl adc inc movsb sbb mov mov aaa or cmpsb (bad) mov add xor cmp jecxz pushl imul xor sti inc ss hlt mov js clc dec xor mov cmp daa fwait hlt xor imul adc sub popa hlt pop xor ret xchg mov test mov enter (bad) rep lret xor (bad) mov xlat outsb push inc sub xchg xor mov mov xor into cmp xor sub stos mov jbe loopne push push mov mov in mov sub add fidiv push inc push in adc or int movsb sbb sbb add loopne rol cmp mov icebp popf or loop mov lods cmpsb lret push in mov inc mov out repnz cmp pop stos lock adc or addr16 sub rorl aaa and jl pusha insb ror (bad) adc (bad) (bad) xor push das hlt outsl cmp sarb ret dec movsb xchg mov jg fidivrl out stos shl das les ljmp and fs push fnsave pop jl cmc mov mov pop mov sub or rcr pop scas mov repz xchg dec mov cmp lea lds sbb imul mov push jae push add cmp ror pop pushl mov andb xchg xor mov icebp dec in xor sbb sbb inc sbb xchg sub jne pop punpckhbw lret mull andl sbb mov and test jmp mov std aam sub sbb xchg aaa add xor ja add jg fnstsw fwait lea dec popf xor ss xchg mov sarb mov movsl adc nop in fidiv jno inc push sub fbld (bad) in jno repnz pusha ret push in xchg jb cli insb push es pop (bad) sub and repnz mov sub icebp sbb and movsb (bad) mov dec inc add jmp pop das xchg xchg stc das shl test lahf fnop mov mull sub and mov cmp mov push sbb and pop in scas (bad) inc jae sub adc xchg or inc popa push cmp repnz mov cmp pop repnz inc jae lock bound mov and out daa cmp cmp add sbb sbb cld pusha xor mov xor adc mov idivb xor mov ret push xor fmul int mov test adc ja arpl mov test dec clc icebp xchg insl xor mov pushf cld and jmp or cld xchg mov or xchg adc (bad) xchg sbb popf mov lret cltd dec sub repnz shrb je,pt push and pop imul inc fist jle jb movsb in sbb cmp cmp pop insl lahf dec jmp add xor pushf add adc inc into and inc push mov iret pop data16 add mov sbb and mov cli adc mov lret into test inc pop stc loop mov adc dec sbb cmp jmp je int3 sbb iret and or sub sub mov lods daa or or and and adc xchg inc enter jae cmc mov icebp mov sarb dec pop adc (bad) sarb enter sbb or xchg je sbb mov xchg or xchg xor jne (bad) scas hlt mov gs (bad) dec push cli inc sbb push push cli test mov dec cmp bound cmpsb adc stc pop daa cmp pop pop xor inc and mov cli insl es mov push mov push ret aad sbb imul xor lcall aaa push std mov jecxz imul push mov add dec pop pop mov xor jno pop adc into repz dec jge je lcall dec add xor xlat xor test xchg cmp push and jb movsl adc into repz cmp jns mov sub ja jbe hlt js nop mov sub mov or loopne and mov xor and jg jne sub or es adc xor arpl testl cld sbb pop lcall mov jns dec xor push dec daa call sti sub je xor jge cmp js push cmp jl cmp hlt outsb xrelease daa fiaddl pop sbb mov lahf push jnp cs adc pop jb insl xor xor scas push xor inc fnstcw xor add sub mov adcl clc pop cmpsb aad and mov int3 xor fildl add (bad) repnz pushl rclb xor jmp xor pop (bad) loopne les (bad) lods sub sarb ret cmpsb das inc dec stos cmc cmp xor ret push xchg dec aam std loope repnz push cwtl cld dec or dec xor inc push adc jne add loop je jmp clc cmp scas add shr pop clc out ja mov jb xchg clc test out vshufps movsb jb sbb or insb jbe and cmp fdivl add clc push je mov clc or inc sbb daa xor sub test iret and fnstenv into aaa sbb pop or sub scas add or mov inc fcoms xor mov in in movsb sub lahf repnz (bad) stc (bad) adc jae jo push and pavgb mov add sub jae pop cmp insb std in push scas jo in stc adc inc xor bnd cmp cs adc out (bad) cmpsl and je pminub fstl nop lret xor mov cmc fidiv mov repnz std xchg jge jae xor xlat insl dec add sbb jnp das mov cmp sub adc in jb pop add icebp nop inc movsb adc mov fs rcrb (bad) mov inc aaa gs xor fdivr push xor dec push std sub hlt dec xchg xchg mov inc hlt mov js jle cld sbb sub xor xor xor push das xor push mov jae ds repnz (bad) jae xchg and (bad) ds iret sbb sbb fsubs adc sbb xor ror mov jae mov frstor aad fcmovnbe sub pop push repnz sub inc daa pop outsb sub cmc ja or jle lret cltd out add imul xor ret add cmp lds push jo push xor test sub sub jb imul repz in mov arpl xchg push mov and in push movb mov jnp add das loop xchg ret and lods mov xchg jmp test nop push cld data16 pop psubq sub xor cwtl cmpl fwait xchg or dec movsl bndstx insl iret push and addr16 push push push adc int push andl popf lret sub es inc mov mov outsb or popf mov (bad) hlt repz fild adc xor ss xchg xor jecxz sub jo iret pop fld lods and inc jge push jo mov push lahf je xchg add or xor push (bad) icebp xor jmp data16 std mov jecxz test mov cwtl repz jne mov xor pop push pop (bad) fist or addr16 test loop pop jge bound xchg xor rep jb jge xor mov jae out xor sbb pop xor dec lretw dec jb test xor lret mov sarb callw rcrl in mov mov or hlt (bad) sub mov pop add mov dec mov push int3 add dec sbb mov jbe repnz mov jb sbb add dec lods iret (bad) fdivl sahf or cs test ja xor (bad) cs jno (bad) int3 xorl and xchg cmp stos nop xor in mov push xchg inc sbb pop fdivs ja jae test mov sbb clc jecxz pop pop push and jp xor push pushf (bad) in jecxz (bad) xor xchg jp (bad) stos repz fnsave ds adc popf orl hlt mov xchg xor add inc das push jl std lret inc and into xchg aam (bad) test incl arpl xor jno xlat loop adc repz adc cmpsb inc or out insb scas mov rorl mov dec ret mov jg lret xor pop xor push dec ljmp or xchg roll (bad) jnp xor rcr in outsb lods in adc sub iret mov cli das xor cmpsl sub fisubrl je (bad) les fcompl sarl xor or (bad) aam in daa inc ret mov mov xchg jg cmpsb xor jns adc mov xchg daa jnp test rcll sub hlt stos (bad) lret jmp adc sbb popf xor inc and movsl xor lret inc jno jecxz popa and push mov mov (bad) jnp in test jge xor rorb repz ja scas or lahf fbstp mov mov jge repnz sbb out jae clc cmp lahf and and (bad) mov cmpsb clc (bad) jle sti adc jo and jo dec in out lret jnp imul xor dec mov cmp and arpl fcompl mov dec (bad) cmc jbe roll inc les test mov xor cmpsl push std xor push stos jbe iret test dec inc adc jae arpl and or adc call lea mov repnz stos adc dec xor imul lods pop sbb adc and xor pop das mov push or lret imul xchg cld cmc inc inc and pushl mov dec inc or jns lods xlat jl cmc adc pop sbb jb fwait loope mov xchg pop or mov add xor imul jg mov xchg add fiaddl addr16 fldenv into cwtl sbb add ret cmpsb cmp xor sbb push inc fwait sub and mov aam inc push movsl pop into (bad) push and jmp mov in xchg adc aam xchg cmpsl hlt imul push adc xchg test jmp test jle fdivs jb inc out repz out and sub xchg mov int sbb sub mov (bad) adc lret dec add outsb aaa mov xor xchg je das sub jg lods int3 xchg mov jne sbb fidivl cmc js mov and mov nop lea mov mov or mov mov aaa xor cmp inc into fdivl ss mov cmp sbbb xor mov jns popf xor int mov inc mov jne outsb jae sub loop ret into (bad) mov popf dec test fild pop xor sub imul lret stc mov lahf lock enter and sub add sub std pop data16 in cmc xchg xor fisttpll xor pop and sub (bad) clc add cmp xor xor push lock test pop push je cmpsb fstpt in in into stos outsl nop imul cld mov repnz push dec cld jns call add inc inc or das loope or aad jp lods into and jns in inc cmp push adc aam imul xor add mov jp pop or scas mov rcl movl fidivr cmpl (bad) mov cli mov sub sub (bad) call pop fcmovb ljmp mov mov fmuls xor aas data16 lret popa xor or xor lds xor xchg bt into cmpsl xor mov or xor js cs add inc sub das adc sub repnz test or rcr mov cmp nop sbb out cmpsl icebp lea jp hlt mov add sbb mov jp inc aam notb pusha bound push or addr16 loop repz push sbb adc repz shrd ljmp int3 es lock push cs movl xlat adc (bad) mov mov loop and xor sbb or and and adc jle xor (bad) (bad) sahf mov mov add addl repz xchg icebp (bad) cmpsl sbb cwtl ret dec and (bad) mov cmpsb cli inc lds xchg icebp mov xchg int dec (bad) push mov mov mov push sbb mov (bad) ljmp sbb lret fsts into rclb cmp fwait sub xchg daa test stos (bad) jno pop push data16 popa adc xor in mov xor add out lret in clc cmp xor mov inc add popf mov sub xor or adc lret push xor sub cmp cmp xor jo insb sub sbb pop and adc dec lahf add repnz xchg jo jg xor inc test dec xor lret mov test arpl arpl and cmp push sub jno mov (bad) and popf jne adc pop aad xor cmpsl sar xchg int inc aam adc sub sahf jae pop inc and inc sub jb aas jle adc addr16 outsl jnp rorl insb in mov aam add popf movsl stos out shl push faddp roll xchg (bad) and imul (bad) mov xor jns ds add push (bad) jg mov in sbb sub push out aad mov sti mov popf fidivl sub adc jae sbb pop cmpsb (bad) xchg adc imul test mov add and adc repz (bad) lock sbb hlt int3 inc (bad) repz cltd dec jmp jle repz and jmp dec adc cmpsl lahf leave add xor insl cli mov add jmp cmpsl in mov lods outsb jl fisubr mov in or mov mov mov ficom adc (bad) je inc jae or add sub pop add dec cs inc mov pop pop lods imul fbstp pop xchg cwtl cli push enter fwait sbb sbb or lahf in in dec ljmp imul adc je xchg adc imul and stc iret jmp xchg push scas sbb xor mov call jno adcl ss push lcall mov mov pop pop pop xor repz cmc sbb jae int sarb fbld jo sahf xchg hlt loope push mov mov jge call test dec scas and xchg out incb out jle cmp dec xlat jns sub (bad) sbb ljmp std jp xor adc in negb ret inc fnop mov hlt jl repz sbb xchg sub aas lahf inc lahf inc dec xor je mov iret repnz jle psubsw daa xor jmp rcrl mov aam fldenv sbb aam cltd pop xor xor stos dec xor jp xor xchg xchg jae cli loop mov sub loop add inc jp popf jl sub shll outsl clc adc mov nop ret out push rorb jl push aam ds hlt jae or enter xor stos aad push sbb mov js jb adc push je movsb in mov push rorl push sbb in aaa jmp mov pop clc push push sub xor pop sub pop (bad) lock add xor stos enter out lahf mov int3 (bad) dec sub pushl xor rcr (bad) jmp jae clc hlt dec fs movsb ss push sub pop nop jne xor sub imul add mov dec adc pop dec sub sbb adc cli xor jecxz ror jno and add mov data16 cmp mov inc jne cmpsb nop mov das bound xor xchg mov aad inc xor adc xor aas pushf push ret xor in pop mov jns iret pop mov sbb add or loope xor ret call jae loopne pop or loop je cmpsl mov push clc jge (bad) (bad) jne add add int xor push mov jae mov imul loope jnp add inc sub daa lea xchg mov sbb lea in mov lods push cwtl add aam mov jge push xor xchg iret in jne insl adc push popa adc xor pop jnp mov movsl hlt dec pop rcrb jmp xchg sbb insl shrb or stc js scas pop out cmc push jge add lret pop adc dec pop cwtl mov movsb lock scas mov sub pop xor xlat mov mov lret fisub and jae and leave add mov hlt test loope stc aad add push outsb dec push xor pushl sbb push xor ljmp or xchg xor push call push stos and fsubl push int xor and cli add xor lods jb add test push in aad mov push pushf dec repz ss or xor int3 pop xlat shrb imul bound fdiv mov js inc data16 jecxz movsl jecxz dec adc je adc movl (bad) ss out jmp push scas arpl xchg movsl lahf inc mov mov les mov add out into pushf mov enter popf mov xor fcmovu cltd push hlt xchg out fcmovnb popf add clc mov (bad) pop and outsb out add jmp jmp sbb adc orl je jp push hlt movsl adc pop or mov sbb mov sbb or mov pop xchg scas inc aas xchg pop shr dec movsl pop push push add (bad) jle mov xor sbb mov or popf sub pcmpgtd call stos and cmpsl mov bound (bad) and xchg sub cmp mov data16 ja cmp in in in cli mov movsl mov les jmp and (bad) shlb pop push adc cwtl cli push or pop repz sbb jge cmp sub ror jb aam lahf push adc bnd out cli shlb and mov adc dec jge rcl or test bound or sub mov push and (bad) lahf outsl jbe cli pop jle inc movsl cs (bad) mov (bad) mov mov test jb xchg pop aaa pushf sub hlt loopne cmp pushf xchg push iret lret imul stc mov (bad) xchg xor in les ss cmp sti int mov pop and scas inc xor movb lds leave mov fs sub mov push bound or xor (bad) mov pusha sub add xchg jge mov (bad) (bad) mov bound lcall test ss adc adc xor push lds sbb or sbb je adc and mov hlt in sbb repz jns je inc push adc loop sub popf dec pop sbbl xchg sub mov sti or xchg or outsl and jmp push push hlt inc imul mov mov jbe fmulp lds neg lods xor movsb loope,pn xor bound (bad) mov and add jns or mov popf dec in xor mov int jns cs mov neg call adc xchg xchg enter push push push jecxz add xchg inc std add jg sub push ret xlat hlt mov insb and mov push aaa sub aam xor popa jno pushf cs rcll ret xor mov repz sub fcmove mov stos je add inc cmp xor (bad) xor adc sti xor or fiaddl push stc pusha sub jne or cmp dec mov imul jb imul fs and xchg sub stc jge shrb sub fist xor add movsb bound pop mov or mov xchg divl xchg dec repz xchg inc pop or jb jb dec adc jae pop lea inc xor repnz xor loopne cmpsb mov pushl dec ja lret fildll push (bad) dec insl insl and icebp sarb mov out dec imul lahf cmp lahf pop call jno jae pop iret and push xor push adc xor push jge (bad) xor jo pushf add ja lahf cs hlt sub mov and lret inc jmp je jp push pop iret jne scas xchg add or sbb pop ja jns pusha addr16 lods ss int3 fildll pop jp and mov mov sbb movsb sbb lcall sbb les xor add mov xor aas push int xor repz mov mov ret xchg (bad) xor popf adc ja fsts xchg sarl jl cld adc cvttps2pi cmp into fistpll xor push cmp mov push mov and out xlat lret enter out mov mov insl int3 xor jo mov addr16 and aad jecxz jns (bad) jae and jno sub add (bad) push pushf into addl mov stc (bad) jae (bad) sti add inc in shlb push test es cmc sub pop stos insb sub and mov mov xor ds sarl (bad) xchg les bts ret into mov xor fcomps mov sbbb inc mov cld push adc pop push xchg xor hlt mov mov mov pop inc aam mov or adc lret sbb out pop push mov jae repnz lahf je daa push xor push loope mov push sub divb mov fistpl test add jb mov jne in scas scas and and ljmp add mov in lock adc xor cmpsb (bad) xchg push lock mov sub xor push cmp test and mov dec sbb jb mov lcall int mov inc fs xchg daa iret js xor sbb into sbb dec add xor rolb dec add fistp lods sbb mov sbb xor je dec inc xlat pop es lahf leave shlb cld sub mov icebp dec xor and rol jbe jae add jge or xor loope cmpsb gs pop orl xchg push xchg jle xor imul (bad) mov xchg faddp xchg cmp cltd movl in sbb inc sub test sbb (bad) stos imul mov jge shrb and mov pop cld xor xchg pop mov dec fs sub jb sbb fwait js and pop fistpll pop dec adc dec cltd aam push push inc jle cwtl cmp test adc xchg gs out xchg ja dec rorb jecxz mov pop sub adc xor lret (bad) jg mov or (bad) imul sub cli in pushf stc sbbl add jl repz jmp ljmp mov sahf addr16 add xor fwait cmp mov adc xchg mov xor sbb sbb std inc pop ss jbe out jno jle push stos fwait dec jbe sbb sbb jo decl mov cld nop push add test xor add and mov dec cmp jg sbb movsl inc in push or sub (bad) (bad) push lods add mov cmp mov repnz jg xchg xchg xor pushf lea outsb xor leave out lds popa cwtl or cld nop sub cmc jae dec adc dec jnp mov and pop pop jno sub cmp das jmp sarb xor mov dec sub in and movsl iret movsb sub cmc sbbl cmp inc test xor xor ret mov mov jb pop inc and or dec pop cmp xor enter aam cli ds in hlt call push mov or add or or mov or mov and mov lods popa adc ss fwait aas (bad) mov jmp dec mov sub mov sbb add repnz adc adc aas add call icebp in sub jno out movsb mov and mov fstl or sub mov cmp call mov imul addl push dec dec les shrb imul les addb iret into imulb iret cld jno push mov xchg dec jne push mov andl pop mov jae dec imull push test pop lds (bad) or pop cmc jg inc repnz in inc push cld (bad) sahf lods cs xor or fcoms or adc add mov xchg cld cmp adc cmp loope lret jp jno leave push xchg push arpl adc pushf inc push fwait jne sarl aam xchg test xlat mov faddl and mov nop icebp mov and aaa cld (bad) jnp push dec push in outsl inc mov or and scas jg enter sbb push cmpsl jmp cmpsl mov add push xor je das cmp or add mov dec inc xor fild add out insl or xor lods std bnd sarb daa xchg pop push jb cmp sti inc fimull insl mov sub addb lods mov daa fcmovnb add jne,pn sbb jae mov add xor mov (bad) mov pop push addb mov xchg dec out jg lods in test es add or pop dec add adc loope mov sbb popa or testb divl shl ljmp cld fstpt jo (bad) negl jae les sub dec push cmp insb xor ret mov xor push jl mov das mov stos into test xchg sahf sbb out lahf call lret cmp daa or jae or rol je loopne pop inc xor jbe xchg adc loop or jnp stos sub neg sbb mov sub xor and insl push jb ljmp ja adc xor cmc mov cltd outsb adc dec ret mov push sti sub pop rcr adc sbb cmp cli mov and repnz lods dec xchg xor shl push test and lret push movsl mov int scas cld mov pop mov push addr16 (bad) sub add sbb lcall aad xchg fdivr ljmp das adc mov ds push movsl out mov pop jge push stc or push xchg aaa imul jg pop fcomps mov stc cmpsl subb popf mov int stos push xchg hlt add hlt fnstsw stos xchg sbb in mov scas xor loop push xchg and fs cmp sub xor jl push int dec movsl and jp pop fwait push sahf and mov stos xor daa xchg pop pop xor push in pop jb pop mov pop mov es ss adc sub fnstenv adc mov sub xor les daa sbb pop ret mov mov lock mov sub push clc rolb out test aaa pop cld and imulb xor int3 mov scas adc test sub cltd adc lret xor cmp pop imul ficomp pop mov inc inc jne cmp cmp xchg in sbb lret xor out addr16 jg sub push jne fldl hlt fs (bad) icebp iret sbb adc fmuls mov sub test adc daa sbb in ror clc jbe jb mov sbbb sub pop ja add and je lds pop sub adc add (bad) leave push into lds jno call lock cli sub mov cmpsl xor push (bad) je pop ficom add mov push lea xor lock add mov and (bad) xor lahf js xor jmp sub jb mov jo adc sbb jge inc or subl xor jecxz aad repz adc mov xor cmp push rcr testl mov icebp adc or inc xor data16 inc adc and repz sbb sbb jae mov cmpsl icebp (bad) lds ss mov xor and push fistpll das mov add jo push push shlb jle push push outsb mov add hlt jbe ss xchg sbb adc mov pop push xchg xchg fist mov add insl dec dec bound push sti dec xor mov out jne add pop data16 dec hlt sbb adc push mov movsl dec (bad) repnz xchg cli or stc gs clc jae mov sub cmp roll adc bound test push inc aaa movsl jg addr16 ret pop cmp sub in xchg roll and es jmp aad mov and jno inc faddl and jne pop jb orl mov movsl lea dec je pop popa hlt or jle xchg js orl std mov ret jae jmp stc sub (bad) jbe push fistp out mov (bad) rclb ret sahf daa mov xor lds dec push mov dec cmc adc inc jg inc adc loopne sub (bad) repz cmp cmp sub xor dec jbe mov cld sub inc jb dec insl jo aas fnstsw add cmp insb bound push scas pusha loop push leave mov ss and popf pop add sbb dec mov jge inc scas ss fdivrs and inc (bad) cmp cmovne inc mov jae adc mov enter loop ja sbb popf inc test inc sub adc inc lods inc or cli bound loop and shl add es adc (bad) mov cmp lret sbb das and or sub cmpsb sub xlat mov out mov push xorl sbbb or jno adc jne add pusha dec jl mov xchg iret iret mov je pop inc gs mov pushf xor sbb les int3 xchg aad xlat iret and es sbb cmp or or shll pop or popf aam cmp sub inc loope lahf aaa xchg dec clc lock dec and das jae cld dec or imul lret jle sub push mov and sub mov push cwtl mov xor xor pop push sti call repnz notl mov pop push pop pushl mov fmul xchg sub xor sub and cld mov xor xor xchg inc cmpsb out (bad) xor (bad) fdivrl jmp fcomps sbb int mov les (bad) or aad or xor xchg sarw push or jg fisttpll add inc out hlt ljmp push (bad) pop add or stos xlat xor add cltd jge xor pushf (bad) xor sarb (bad) mov enter subl inc stos sub call and icebp (bad) xor test call clc or pop adc xor shrb cld push push inc xor mov push lods xchg repz pushl mov imul and js jae mov lds xor inc inc loopne clc xor sub mov add xor mov ret lahf cs cmp jle jp mov cmp mov push cwtl xor and mov push in jl xor xchg nop or sub leave popf aam in add cmp lea fistpll arpl roll cmp ss xorb fisubrl xchg ds add insl into push imul mov dec jl hlt test js push addr16 xor adc xor sti mov mov xor or xor ja add sbb xchg pop push cmp xor push pop lret xor dec insb arpl movsl xor inc popa imul in fistpll sub push je sub xchg sub das xor or mov out sarl inc push or lds insb push mov clc dec inc xor mov pop add je popf sbb mov push pop jo sbb cwtl sub adc xlat xor cmc lods movsl addr16 popf in rorb (bad) pop cmpsb rorb pop daa mov or lds xor jmp cmp pop jg daa jo cli or fdivrl bound push repz cmpsl cmp add (bad) cld inc pop std mov adc addr16 out inc fidivrl pop mov out adc je mov dec pop adc inc xor shr jmp ror stos addr16 (bad) cmpsl mov hlt and adc jae out xchg fcoms jae add sub mov scas lock xchg xor fnstenv mov shrb or mov jae jmp mov xchg les jmp pop insl cmp mov inc jo ss lock mov dec mov pop or into cmpsb sbb inc icebp sti stc mov mov nop enter push pop loop cwtl adc sarl jl and dec repnz call adc jmp sbb sub sub mov gs inc sbb loopne hlt sub repnz mov push xchg pop xchg stc addl inc clc std fwait mov and lds inc mov and mov movsb in pop (bad) test xor inc je sub cmp mov popf stos push into repz pop push inc push sti cld push imul scas jecxz xchg add xor jne xlat add or test test push mov xor out sub (bad) xor fldl cmp pusha add cmp inc pop das cs gs xchg jno sub mov loop adc push mov push outsb mov push cltd add jno push (bad) repz mov je test data16 xor sbb adc std pop imul mov je inc push mov sbb xor popa insb pop adc add add pop psrlw imul jge insl sbb mov jnp or sbb pop hlt jae sahf rcl in in popf mov lods mov sbb mov outsb dec add xor xchg pop mov test out scas inc fcompl mov add mov iret mov sahf adc gs in movsl mov jns or xor and rcrb stc adc inc xorl dec stc add xchg popf mov repz add (bad) das pop xlat lds sbb mov ss in mov lret xor sbb sbb (bad) sahf imul jle xor or imul inc or mov push cwtl sahf xor (bad) notl sar jae sbb out in mov cmovae cwtl sub mov hlt popf into add sub inc lret mov in enter jno and xor adc ret outsb xchg out xor jmp (bad) icebp mov push adc test mov xor fisttpl mov cmp or add cmc in cmp sbb mov fnstcw xor and (bad) call popf in loopne fs mov inc mov lret xchg imul jb call test addr16 mov and xor lods dec scas adc (bad) fcmovnu repnz mov xchg insl je ja xchg pusha push mov ss push lods cmp pop adc sub insb mov jae in and dec dec pop xor jo imul lock xlat xor mov and jg mov sbb dec insl inc push xchg les and add mov mov adc mov (bad) jb mov xchg and stc or jnp push test xor pop inc xor divb push xor (bad) gs cli enter mov push daa testl mov xor dec in mov test lds jl,pt xor repz xor dec mov xor loop push xchg bound push outsb adc pop fsubl lods scas pop dec out add jle imul ret es std hlt or je cmpsb bound repnz and sbb mov dec sub (bad) les cli inc jmp push jae push and shl pop add inc or adc pop icebp scas or xchg sbb sub mov push sahf inc xor inc xor jecxz xor sub jl xor adc sbb mov sub xchg daa int3 out js add movsl aaa aam mov jno add stc mov xchg out imul push jmp jge and mov pusha mov lret leave mov push gs mov out jae and xchg push insb iret inc jecxz mov arpl push pusha cmp pop add int jecxz jo cmp xor or mov inc jbe mov adc ja ss fldl leave loopne xor cs adc xchg xor scas bound pop push ljmp movsl push (bad) aaa cld jno xchg les jl jns in hlt mov icebp jp in xchg cld stos pop xor cmp sub jno arpl rorb xor shlb test lret add sbb jl lahf add push xchg call insb mov lcall xchg addl hlt mov loope,pn dec jne push pop pop das int dec daa std or out test or pop jg add call outsb cmpsb lret les xor sub jge xor adc or std inc push imul mov daa lcall pop (bad) fstl scas or jmp inc sbb leave je sbb cwtl pushf in pop and jle insb pop push or stc mov mov (bad) inc sbb aad lods dec sub cmp (bad) neg pop lahf gs pop cmp mov dec pop mov cs je cld lcall push sbb xor pop mov cmp enter mov jle lahf mov lcall out push cmpsl xor pusha mov sub push pop lret shrl push xlat ss ja mov adc mov ds mov insl push sbb icebp cld lods mov les inc xchg dec xor inc push adc stc in mov mov add xor dec cmp aaa (bad) stos sbb pop sbb xchg and xor xchg xor xchg test sbb sub add xor call dec out pop sbb xor add cltd cld lea dec add je pop scas daa sbb (bad) leave (bad) xor mov fcoms adc jle aas xor dec in (bad) mov push (bad) push pop jno inc dec add mov (bad) jp adc xchg out leave mov (bad) int3 rolb mov jp loop sti call fnstsw dec imul xor stc data16 ljmp sub out cmp out lods hlt in incb or lcall loopne mov stc dec mov jle fnstenv lcall or (bad) pop jno xchg push xchg jbe rcr imul int mov inc aad stos je es jae rclb push mov mov push cmp shrl jecxz fs out add pop and xor cmp add inc xor xor push out (bad) (bad) xor nop rcr and pop cwtl mov push lods adc outsl inc dec jae mov fdivrs mov add and fsubl adc and addl test cli xchg loope mov fsts mov mov hlt mov shlb mov sbb cmp jo dec add pop or rclb jbe data16 sub fs jb addr16 aaa cmp or pop out es pop pop cli dec in mov mov jmp fidivl mov add adc je lahf pop xor xor pop outsb mov add inc pushf lahf out pop pop ljmp inc xor sbb popa mov pop cmpsb dec and add xor aam enter std neg lahf cmp (bad) mov sbb cmc and pop xor xchg hlt sbb or adc sarl cmp iret sbb xor in pushf hlt pop jbe ret sbb or add adc sbb pop notb cmp inc loope ret cli fiaddl test out mov xor nop lods jo sub mov or inc jae cmp sub mov xor test dec mov dec mov and jp or mov lds cmpsl inc pop in push mov lret aam addr16 mov push pop sub sub jno popa adc jne in xor jl fstpl mov bound mov sbb xor add xor mov cwtl ficoml and es mov pop pusha int3 (bad) cmp fcoml jmp xor pusha lret loope xor xor jge xor add sub jb aad or jmp call sbb outsb xor inc leave test xor in pop rorl out aas fwait sbb popf js mov adc inc mov sbb xor cmp and and (bad) hlt inc outsb mov add cld mov inc mov fwait aaa xor sbb xchg (bad) xchg repnz enter adc rcrl mov loope clc sahf and pushf pop ret jne lcall pop into mov adc push or nop adc hlt in or int3 js inc add mov inc out cmp es push and jo sbb add adc sahf mov fistp in xlat mov int3 push jo je jo adc push cli cmpsl das mov jb jne hlt (bad) lock out popf or jno mov mov mov fadd leave lods rclb lahf adc mov mov add rcrl add push xor sbb fcompl xor (bad) mov cld sub test es xor cld dec pop ret mov in and dec mov movsl pop gs xor pop xor lret sti dec hlt mov dec enter jnp arpl add movsl ret notl lds sbb mov jg cmp data16 xor out das mov adc mov xor (bad) mov mov fs cmc push sub ljmp data16 divb lcall mov sahf ret imul repz xor push adc test cmc mov adc lods outsl cmp jg mov cmpsl dec (bad) pop sub adc add fist icebp jb nop inc je and ja scas sub int add cwtl leave aas and sbb pop aaa jp movsb and adc in pop and leave and sub fdivp lods mov sub mov push daa ret push jg (bad) jno les ljmp jg jle push xor dec jno and cmp mov mov push inc int daa mov rcrb xor lret stos adc out sbb adc push adc and inc add mov ja dec imul xor pop mov je addr16 je,pn mov js out jmp cmp hlt sbb (bad) mov cmp jmp es sarb (bad) in sbb jp push ret sub cltd into sub inc jecxz ss mov das insl in or stos jne mov mov cs arpl xor (bad) mov ret fidivr push test dec rcl pusha nop das inc xor pop push add std jae pushf mov inc adc les pop xlat dec xlat sub daa adc mov xor subl sbb xor mov cli sbb rorb push insl int lcall add sub and or sahf pop and push add adc cmpsl sahf mov jns inc add sbb xlat jb cli imul lahf pop test push fistpll nop pop pop push and cmp imul rcll dec inc add xchg pop (bad) das dec push mov (bad) push push mov hlt dec xlat das or mov popa and (bad) and ret adc out or xor fwait lock rcll jg cld sbb xor push or (bad) xor pop sub or cmp jp ja ds or je xchg inc js jmp fsubs sub xor push and movsb adc ret mov ficom dec xor xor pop out lret roll out push sbb dec fimull push cmp psrld (bad) lahf fcoms hlt scas cli addr16 mov push pop cs pop jmp mov sub mov insl push and loope lcall or mov xchg test je,pn jne mov or jns jo stc mov sub call adc jno and cmpsl xor inc and (bad) fmulp fwait repnz inc sbb xor sub imul rclb test loope pushf jecxz sbb push adc mov ret jle in and aad xor std pushf adc mov pop adc mov sahf lret (bad) mov shr mov scas push and push jbe cli cmpsl repnz pusha sub loopne add ret adc and test sti mov or leave dec add jl das xchg mov in aad cwtl push sub dec sub cld pop adc mov outsb aas or inc xor inc lcall outsb or adc cs mov (bad) cld int clc xor (bad) or fistl ss mov in out repnz push bound add sti mov out inc or pop inc sbb ja inc mov std jp sahf cmp and or out int jo mov ss xchg mov (bad) inc in mov xor imul (bad) lock loopne decl xor out (bad) xor adc jmp addr16 lahf js cmp sbb cld sbb add mov mov xchg xor inc jnp mov push push fmul cmpsb sar dec sbb call loop jno dec xor inc gs (bad) jg ret mov sbb xor xor pushf mov jnp ret cld push test (bad) mov jecxz dec cmpsl and into mov jb lods sub stos or xor add icebp xor add pushf xor sub or jp jmp loop repz roll cld lcall aaa push sub xor into jle pop cmp xor es xor xchg mov xchg jp inc or gs add add adc ret dec add movsl (bad) inc mov lea push pop paddd inc mov popf jae daa mov cmp add mov bound sub mov adc push loopne jb stc dec inc and add rol pop sbb cli jl mov fnstcw dec and inc adc ljmp jmp imul jne repz xlat push and add ljmp xor add scas jmp outsb jmp imul add push insl dec push (bad) scas movsb fnop aam subb adc fdivl repz ja movsl dec data16 xor mov aam aam mov daa mov fidivrl negb adc ss mov mov fdivrl lea mov int3 adc imulb icebp je adc popa push xchg sbb call xchg xor ret sub fildl (bad) sbb popa mov push repnz inc in int3 ror push stos jle lahf ljmp xchg push xor cmc xor nop xchg cs adc jge pushl mov icebp in dec jp mov test jp mov cs (bad) ds push jge fidiv (bad) imul pop popa or push or aaa gs scas pop adcb mov adc in cwtl or or sub cwtl add sbb jp jg push dec pusha inc mov xchg pop mov mov adc push dec in push pop xor icebp jno (bad) and jbe adc cmpsl nop jl sbb loop fs (bad) adc dec clc and cmpsl sub sbb jl cmp cli nop mov int3 in int sbb fmull les jnp sub pop add xchg jle stos cmc (bad) mov add xchg sub test xor cltd jae jne outsl add (bad) (bad) xor or xchg xor cmp test sbb jp ds ds hlt ja test gs imul ljmp test rorl dec nop sub or lret mov push sub int3 jl xor xor sub adc inc fdivs inc add cmp repz mov push or das loop in add dec movsl push lret aad mov test lahf js leave jno pavgw fbld scas mov push imul xchg cmp out xor icebp mov adc test das test jb cmp sub xchg (bad) sbb testb clc jmp sub sub push fdivs xor pop adc jno or push adc jne pop xor rorb insl data16 xor (bad) ljmp scas adc add xor not pop or mov xchg xorl ja fwait pop xor xchg lock mov pop xor sahf imul fisttpll xor inc adc mov mov xchg mov fisttpl jno cwtl sbbl cmp adc inc stc xchg and mov inc std clc pop jmp movsl in jnp shl cli sahf scas lds je xor bound outsl push or or hlt mov pushf ljmp repnz mov xor loopne sub movsl and add aam xor dec cmp add cltd and jb push sub pop or xor inc jns mov imul (bad) out or inc out pop repnz mov mov xor mov sub inc adc out scas popf adc fidivrl (bad) jmp mov ja fisttpl call mov out xchg nop imul shlb imul leave mov cli mov pushf jo arpl int ret push and repnz inc adc xor sbb dec and jnp mov add add cmp pop cmp inc pop call rolb stos scas jbe aaa jb popa lods sbb aam fiadd xchg sbb sub pop jns lods xor push and sbb push scas add and xor push mov or fisub call mov aaa pop (bad) add int3 fild stc add push and xor test loopne or jb push adc (bad) push sub xor (bad) jno fnsave sahf push std aad sti es xor mov mov mov clc lret (bad) aaa pop inc xchg sbb idivl lds sub xchg ljmp mov dec or std (bad) xchg out adc sbb cmp sbb std cli outsl dec or push mov jbe gs movsb es movsb adc lds lret dec dec (bad) jne dec das inc mov lock (bad) out xor adc imul outsl push dec rcrb inc push pop or push cmp cli gs add dec mov sbb in call movsl test frstor xchg mov movb stos xor or sbb jno ja ficompl out cmovns dec js imul adc sbb cltd inc xor int sbb add data16 jno jmp push (bad) repz std pop inc fst mov ss subl push sbb sbb jo in pusha sbb test ret inc add pop in lds int sbb mov cmc in xchg jp xor ljmp ss xor lahf xor push xor sbb pop mov xor sbb mov jo rclb lahf movsb fnstenv jno push shlb test out aad les xor mov dec cmp nop ficomp cmp adc aam xor adc xor jns icebp (bad) repz adc mov jle sti mov lods push out lock cmc fcmovnu inc cmp fwait (bad) jae adc xchg sti cltd push or fbld xor bound pop xor (bad) cmp xor lods repnz xor sahf xor inc ficom mov jnp mov sbb mov dec sub xor loopne pop dec and sbb outsl mov mov into pop iret (bad) fistp inc dec sbb faddp cltd mov lret sub (bad) jne ss inc pop inc pop shll jle push push cld cwtl sbb out fwait scas jae (bad) iret mov jp push das add dec jbe xor popf pop in lock push xor addr16 jg mov pop xor outsl out loope dec adc xor xor (bad) jg dec or divl ss int3 mov arpl or xor mov aam mov loopne out shll in cmc imul repnz jnp stos cmpl out sahf cmp stos outsb mov or xor adc aam mov (bad) inc hlt xor jne xlat xchg cli in xor mov add jno adc xchg pop xchg js stos sub xor aam adc xchg jg hlt int3 adc movsb pusha sbb lea std out fdivl mov decl jne sub inc and dec loopne clc add stos (bad) xor cmp arpl xor aad xchg or (bad) xor adc clc ss fcomps mov lea mov gs push jge mov adc out pop sub xor lahf mov scas jb sub test sub adc insl je and mov aaa jmp pushf lcall cmp cmp mov sub cld fucomp mov aaa xor in aaa lret pop int jg jno inc xchg inc adc sti xchg in sar sbb dec loop rol bound mov cltd cmp (bad) in adc stc or lret sar aas fsubl lea mov clc jo or mov movsb (bad) xor (bad) fimull hlt adc mov mov jge xchg lahf mov push xchg aad je lods xchg repz sub xchg push mov or les pop jnp mov and pop fdivrs jg into cli scas addr16 mov xor cmp test mov fcoml in mov negl sub lahf jle pop sti cmpsb sub ret mov sub and dec jnp imul mov add imul inc cmc xor loop jmp loopne (bad) adc push in jp push and xor fisttpl sbb (bad) and mov mov in (bad) dec push or inc xchg xchg sbb out rsqrtps mov cltd xor data16 add push pop cmp mov mov (bad) adc mov and lea decb stc jae cli sub cmp js or (bad) loopne or in stc es jo repnz push addr16 pop jo pop outsl cmp ja jb xchg and mov call jns mov icebp rclb outsl pop adc iret inc dec add xor aad inc aam jbe cli push outsl mov jp cmp setae call add xor mov das jae and xor cwtl add (bad) in int3 imul mov fadds les and inc arpl nop sbb mov aaa dec or mov pop pop je adc jp nop mov fiaddl pop adc sbb das sbb sub repnz add nop and xchg jle mov popf (bad) xor in pop push mov lahf push lcall cmp and mov and cmp icebp lock xor push mov push or mov mov cmp xor add dec insl test in add jl xor (bad) and xor imul int3 jb inc ss cmpsb imul aaa ljmp mov jecxz and loop lcall push xor xchg or je (bad) lcall or lds xor inc icebp xor sti outsb ja sbb mov push out hlt mov cld aam mov lret and enter mov jp inc pop inc pop add mov gs jmp (bad) cli cmp adc jge pop adc ret mov dec add sbb and and in call rcl sub mov push nop jnp lret jmp out fimull addr16 sbb push decl pop add sbb sahf add js mov (bad) std xor adc (bad) aas adc je push pop inc arpl adc push lahf pop xor mov cli movsb int xchg into pop adc xor sbb cmpsb or dec aam add add jae jo lcall cmpl outsb inc daa adc cs sahf ss sbb lods in or jae jg lds mov test (bad) jo xor sti mov cmc xor lcall jns mov jp mov movb cmp lea mov or adc push adc mov mov xor push enter mov hlt (bad) push pushf xchg pop add je js insl std push or clc pop (bad) xor sub mov outsl and sub movsl sarb and or adc jle pop mov bound lret xchg adc sbb inc pusha xchg or mov jmp scas sub push mov mov push stos push jmp adc les insl cld test insl clc pop xor add mov ljmp jle lret cmpsb add sti scas in push test jae dec hlt test xchg dec incb push lock jmp cs sub jg ds mov xor mov cmp xor pop sbb in sahf mov scas pusha cmc adc into pop stos add imul push pushf (bad) cli lcall cltd jge xor fisubl pop aas xchg xor xchg sub lea pop add popa fldcw arpl call mov loope (bad) mov ret rcr in and mov scas cmp (bad) fdivs add jne test fs adc lcall clc repz mov popf xor sub cmpsb push push cmpsb das xor dec add jo rorl jle xchg inc xor dec aaa call aad or int mov jle and fdivp xchg sahf jmp mov mov jae sti dec sub das and popa dec (bad) mov or outsl nop xlat cli mov popa imul out shr sbb mov cmpsb mov cltd sbb sbb call cmp mov mov sub rcl xchg xchg or pop mov inc push cmc pop inc repz push cmp mov (bad) icebp add push sbb inc (bad) jns cmp in cmp pop jo daa xor mov fimul cmpsb aam xor popf ret lret imul pop aaa jp repz cmp sar lock (bad) and jns push enter outsb shrl inc and jae inc fstps sahf adc pusha xlat out push inc adc cmp ror sbb cmpsb add pop cmpsb imul (bad) mov sarl aam fmuls pop xlat jmp and repnz das sub pop add push push js ds push mov sbb addr16 bound scas mov movsb std je xor mov fmulp gs or repz lret out xchg ljmp inc add aad into icebp mov sti mov cmpsl pop push cmp hlt cmp loop sub scas adc xor adc pop cmc in (bad) test (bad) jmp test xor xor mov mov jns std sti cmc loopne adc and jge pop dec std dec push xor insb fldt jmp xor decb cmp ss ret pop mov scas lods pop lea insb sub mov ss pop push xor idiv xchg mov test inc jne sbb pop inc jno xor leave sbb pop mov fldenv in mov cmpb (bad) icebp mov sbb fnstenv movsb mov jns shr cmp push xchg popa testb mov hlt (bad) cli int loop push test adc pop repnz xor mov sub clc ret mov sbb sbb lcall repnz fmul int arpl and insl xchg cli mov mov xor push ja push mov out clts sub popa cmc and dec mov mov out sahf cmpsl cmp fadds add and lret sbb into mov jns gs push adcb or jo mov fisttpl pop pop mov and sbb ljmp test mov inc movups loope stos adc adc int add (bad) push hlt mov lahf iret and jmp jle mov jmp and cltd sub ja inc and shl jl mov insl xchg scas aaa pop or bound (bad) and movups pop mov or loop aaa repz je aam jg xchg jnp cli or adc es push leave dec sti adc jb mov das fistpll adc push je daa mov xchg loop mov mov sbb or out cmp jge fcoms xlat fmuls jge add sbb nopl clc mov std xor inc sub sahf ljmp popf mov sahf das adc sbb mov pop jno mov loop das insb hlt jae jns sbbb xor hlt xor jg jmp xor dec push sbb jmp insb js,pt add push dec mov mov adc in addl and repnz insb hlt leave add sub lcall jp imul jg insb jne out lods clc and and adc pop nop sub fidivrl sahf cmpsb int test sub rcrl mov jecxz scas or xchg jg push pop outsb mov cmpsb mov mov dec dec bound adc cli imul jge jecxz sarb (bad) mov rol test sbb pop out mov mov push les add ret push test out test loop shrb loopne mov pusha cltd mov push or addr16 repz inc jmp mov sub push mov xor adc lock inc pop mov cmc jl ret pop inc out andb sub mov push or and jmp cld lret popf push mov (bad) lods daa sbb rol sbb or cmp lock sahf mov lock cmp mov arpl hlt imul movl lods jecxz mov repz push mov dec or mov sub out sub ret push push jle sti imul jmp jae xchg test sub dec mov mov jp into jno fmull cwtl (bad) pop jl jge cli pop leave dec mov lock movsb ja mov mov pusha add fnstenv cwtl add mov xor mov cli hlt jge insl hlt jmp adc ds (bad) xchg and addb lds jnp or adc cmc sub pop xor fnstenv xorl mov movsl mulb or xchg ja mov xchg aaa or rol dec xor out test (bad) jo mov or dec loope xor sbbb test push (bad) or scas loopne and enter (bad) fwait mov xor je xor data16 fidiv imulb cli and sub mov daa push xchg xlat or xor aaa gs ja cmp iret les incl test cmpsl lds push sbb mov mov jle ret mov jge jmp insb addl mov mov xchg dec in xor cmp inc adc and leave in loopne (bad) std adc nop lds popf sets (bad) repnz mov and sbb mov and fsubp aas in jb stos mov jno adc push je jle fbstp aad std hlt sbb iret (bad) lgs mov imul adc xor inc ja mov xor and jno pop pop pop pop push pop rcll jne xlat test sbb inc adc (bad) movsl (bad) shrb in clc stos mov and mov fldt lods mov lret test add test push mov insl pop das (bad) mov in mov je jbe mov push pop (bad) mov insb fsub mov mov xor xchg insl popa (bad) mov cmpsb mov add pushl pop cmp xor xor call pop dec cmc (bad) xchg pusha and repz and in in fsubp mov out ret mov mov xchg and jns xlat pop mov jb cli rol js jb (bad) adc cmpsb cmc sub jle subl and in outsl pop pop mov dec loope call inc (bad) push and fdivr out jge in fildll mov aad adc (bad) je imul pop mov sbb popf aam or cmpsb sti mov stos daa fidivl cmp fdivrl jmp outsb popf push insl aam mov pop fs mov inc pop daa or test mov xor jns lock xor sbbl stc add push sbb jmp xor imul sub mov daa or push dec sub das mov cmc test inc std inc popa (bad) pop cmp sub dec clc mov nop lds mov xor mov jno xor jg xor xor mov push and mov and insl aam dec je cli xchg xor and dec in js je addr16 mov mov mov push xor pop mov (bad) hlt rcl cltd mov aam inc inc push hlt add xor push insl sub adc fcoml data16 adc icebp mov mov mov clc xor aas (bad) cmp gs neg pop inc popf or jmp jmp pop sbb cld mov ror add into repnz test (bad) push or mov mov cld scas in mov cli cmp test icebp lods movsb out adc (bad) mov or adc inc fdiv mov push in and cmpb rol xor cmpsl pop mov xor in (bad) cmpsb xor dec (bad) mov enter movl jns inc mov cmp cmp je hlt or push daa adc push inc loope mov out inc mov and mov push in fisubr jnp pop or cmc adc mov and inc fwait cmp dec xchg add xchg or or lods xor sbb imul adc out js pop jnp pop dec aam sti adc jge jae movsb jmp popf jle cwtl mov hlt mov in push pop call add test leave mov lock mov ret xor pushf in nop es cmpsl fisubrl (bad) mov (bad) sbb add inc stc aas add lds xchg mov jl cmp icebp mov mov lcall sub cmc rcrb xchg mov add pop add jg mov mov dec pop inc cli imul pop mov ss fidiv push adc call nop lea add mov jae cmp push push flds es push in inc adc xchg push cmpsb inc sbbl push jae cmpsl jg in mov mov push je cli aaa push pop pusha mov fstl push mov test sub mov ljmp jno pop push dec add add adc push mov mov addr16 pop pop adcl xor add sbb xor fcmovnu stc mov daa xchg mov and cmp adc jmp mov xor xchg (bad) xor push cmp push stc and imul leave and adc int3 jns pop in mov xor push mov xor sbb scas out scas xchg ja stos push sbb xor pushf pop sarb add adc in mov xor xchg mov jne cmp hlt pop xchg shrl jnp iret and cmp notb imul fcoms jge dec je outsb and mov cs (bad) in dec xor jbe jecxz ja out dec add pop (bad) xlat sahf jecxz cwtl iret repnz add (bad) cld mov imul xor aad pusha mov (bad) xor in push xor mov xchg jp and xor jmp jb xorl mov and xor sub in or das add sub cltd xor or movsb inc or jb clc push int3 popa dec mov mov sub jp jg lret lods in mov cs sysexit aad sbb xor jle sub xor inc fs iret pop sahf imul popf es mov jns in and mov sbb cli stc jno lcall pusha adc ljmp popa xor pop ret jb jmp pop xchg sub sbb pop push add iret pop shr cmp cwtl xor sub imul cmp mov mov jmp xor and lds xchg add rorb clc clc outsb fstl sahf cs and je test outsl (bad) popl shrb adc jbe sub negl adc outsl push xor or push inc xchg add dec daa mov xor cmpsb mov test clc and push dec jmp mov mov outsl or and jb sub outsl std scas xchg sub sub mov inc fbld push jb adc push inc jb sbb mov lods adc xchg in xchg loop popa and dec fsubrl pop mov loopne gs and out (bad) clc movsl aad mov mov (bad) std sub cli mov int outsb (bad) xchg shrb jg adc jg xchg or inc cld or xor repz rclb jg inc notb rcll xchg es mov xor fucomp mov xor (bad) lret setle hlt in stos and xor pop cmp mov jb jne (bad) and add xor mov pop jae sbb xor sbb enter push mov xor fwait pop cmc jle jo push push adc lods xor (bad) aam test ss aaa mov xor lcall cwtl jae stc push jg pop mov and pop decl or lea shld (bad) (bad) je sbbb sbb fmull jl and cmc adc (bad) mov cmp and cld push xor cmp push xor and loop in sbb out push jns fadds mov xor scas (bad) mov push adc mov sub push lods (bad) aam dec pop cmp xor addr16 sub in stc mov or jge sar arpl xchg push mov jae add std adc stos jo push rorb je jnp popf sub sbb out jmp xor push data16 mov (bad) xor dec adc mov sbb adc dec out cmp popa add cmc popf insb cmp jns,pt popa pop cld xor xor repnz mul addr16 dec dec cmpsl repnz lret pop mov test adc push les dec sbb jmp cmp sbb and mov sbb dec fwait arpl adc leave cmp xor jo sbb fstl push out jecxz lds (bad) xchg int cmp mov leave movb add jge or mov adc shrl iret addl popa xchg imul (bad) adc daa or lret push xchg (bad) je xorl cmp mov test sub (bad) fist adc cmp jmp into xchg adc (bad) mov and call out jbe mov insl ss adc lret and or mov add nop dec fisubr adc andl imul fistpl push out mov dec mov sub and out fwait in rclb iret ret or roll jae lret mov xchg sub and dec cld jne cmp lea movsl data16 or or add sbb out mov dec sti pop add (bad) adc ds ret adc insl or xchg jge stos (bad) mov mov add sbb mov mov flds xor push test test shrl mov and subl pop xchg inc ret (bad) test inc push inc and nop inc jae hlt fcmovnb push sub shl adc sbb inc xor adc mov stos outsb mov (bad) fdiv ret add popa daa in jmp xchg sbb mov and xchg mov mov xor int3 jge bound sbb mov and adc jne or xor (bad) pop jae mov push popa pop push inc inc push shld xchg into insl and or pop mov call hlt in sub push cltd dec xor or xchg insl sti pusha or leave lods pop or mov jne fnstsw mov jo insl and adc mov jnp cmp clc xor xchg movsb lea test cwtl imul xor (bad) mov in repz roll cmc sub leave and mov sbb bound sub aad lods push ret shl pushf add sbb mov pop clc (bad) (bad) mov sub int3 (bad) xor (bad) fwait das dec push xor aaa das aam cmpsl test jmp sub bound jb ficom cmpsb xor test (bad) mov lahf or outsl adc pop mov sub and adc (bad) xor cli into or push pusha xor dec add cmp aam mov or xchg pop sub sbb or rep push rclb cmpsl dec jp mov aas cmc push xchg xchg jmp add xor pop and data16 xor jp sar repz test lods mov xor or adc and enter pop push out or gs data16 repz jmp cwtl pop xlat sbb adc adc adc adc (bad) idivb test inc mov cs and test cli pop jmp jnp bnd aam and je aaa jnp mov lods cld decb arpl xor jns sti jecxz mov (bad) lret jnp in lds enter mov cwtl ss lcall mov cmp or cli cs movsb push stos pop icebp mov ja xor jge mov jmp inc mov inc jbe cli jmp (bad) cmc cld sub call ret adc xor mov xor mov lock iret addl sbb inc pop add addr16 mov mov hlt pop sbb pop mov lods (bad) xor mov std mov or xchg sub test in cmp push cmp inc clc push lods mov mov cli sbb repz leave pop dec xor dec sub sbb add mov jb rolb xchg lds mov clc out or add inc xor mov maskmovq negl or and lods lahf int3 sub mov stos mov js dec xor mov pop dec shrb cmpsb aad jae xor (bad) popf popa cmp inc mov mov js add daa jnp mov mov (bad) cli dec add xor in mov cli lock sbb jmp jae js cmc push out xchg push and mov mov push or pop std icebp inc push xchg xor mov ljmp and adc (bad) jb xchg mov (bad) in mov mov sub and and xchg jl xor add xor fistpll dec repnz adc xchg xor and test aaa sti mov xor arpl jecxz gs or sahf repnz push fst lds aas insl out push adc ret xlat andb daa xor mov xor push push mov cmp js jb mov push add out cld (bad) jo pusha dec dec clc ret dec and xchg xor mov xor pop sbb add jne test pop outsl adc dec inc aas jbe ja repz cmp cmp imul inc imul add add aaa mov je int3 fst mov pop inc lcall pop movsl repnz mov inc sahf outsl xlat mov adc fcoml (bad) gs xor je cmp mov sbb repz loopne sbb outsl adc pusha xor repnz fsubrl pop test dec loop mov popa sbb push es in inc test pop loopne mov mov mov adc mov adc fdivr sbb jne loop mov push push stc jl pushf repnz pop jo xchg clc push aam jnp in inc lock movsl cld sarl or into lds lret adc pop or lock in (bad) inc sbb adc xchg xor or (bad) xchg xchg mov and xor jo and xor imul cmp and ja in add pop pop pop int3 clc jo rolb jge imul sti push dec jae je sub xor shll cmp and dec scas ret popf dec xor hlt fstpl xor int3 mov and hlt cs mov sub sbb push mov mov sbb int3 iret cmp or pop xor adcb test hlt push inc arpl mov fsubl pop mov or out lret imul pop (bad) xchg xor arpl mov sbb ret or jo ret jno je pop das mov push or mov stc gs test jmp pop pop cltd cld mov dec (bad) out (bad) xchg push push xchg pop stc aaa sub (bad) std loopne or std xchg mov idivb out mov xchg inc imul mov jnp adc mov or sub (bad) sub xlat xor cld fwait dec push out (bad) push xor mov sbb daa mov or xor popf push push out fwait sbb or pop ss or (bad) std sub xchg sti jmp sub xor insb mov inc jae sbb test mov mov pop xor sub pushf lea sahf push or es in push jge xor or in pop imul mov sbb cs call pushl push mov and addr16 cmp cmp xor (bad) mov and pusha fcmovbe loopne lock rorb cmpsl sti xchg xor outsb jp xor jl jae,pn adc pop push jnp jge jno fnstenv test xor (bad) repnz or jb push sub adc (bad) aam cmp xchg or nop sbb push adc sub jns test jnp xchg repz test xchg mov lea mov xor imul xor and add dec sbb stos imul and sarb xchg jno repnz mov lods icebp and add por clc jns data16 (bad) jle jmp or push inc adc push mov inc mov jecxz xchg lds stos push xor lods mov add mov mov outsl sub add inc jo in mov and xchg add int adc cli in pop je jecxz (bad) sarl loopne lret mov mov sarb cwtl sub mov sbb sub mov xchg lahf jmp repz and dec xor out aam xlat je les adc hlt in das mov dec inc cld insl push ja push and stos sbb xor aaa jle mov loop sahf and (bad) pop jmp pop xchg hlt pop jno pop imul adc lcall cld pop adc pop imul sub nop pusha hlt xor enter pop add xchg repz sub (bad) icebp jns cmpsb adcl mov lea leave popa imul in (bad) xor mov shll cmp stc sub mov jmp les std shl leave pop sbb jo aad mov mov scas inc (bad) xor addb jo insl gs push std jl rcll inc add test sbb adc cmp xor (bad) sahf xchg xor mov nop xor (bad) mov mov adc adc add fildll mov mov insb xor cmc incb xor push pop hlt mov and adc xchg rcrl or mov mov repnz fsub xchg sub fistp hlt and mov sti out adc xor mov das mov fstps mov sbb mov adc xorb lret in in lds pop gs xchg lods movsl adc ss mov inc enter inc push push inc rorl jns jge hlt fwait bound sub js push dec scas je (bad) and iret (bad) push arpl add mov cs dec push mov mov int3 dec imul add pop mov fldl mov mov xchg inc dec les jnp push in mov pop mov ror dec inc push inc mov cmpsb xor add inc add (bad) (bad) adc xor xor sbb js bound or xchg add mov mov xor repz pop jp insl mov xor push xor adc cmp pop in xor sub repnz or js cltd sub js scas push test in dec rorl or lds sub in xor rorl call xchg gs hlt imul sahf ja xchg cmpsl outsb cmp daa push stc fnstenv adc mov dec lret sub mov loope mov pop xchg gs mov mov push hlt sub in xchg push pop adc sarb (bad) add or adc jae mov into (bad) int sub inc rorl mov ret push mov xor ja sub mov bswap in test sub add pop dec inc xor cmpsb push pop stos pop pop xor or pop mov cmpl xor mov mov jne jp and lahf mov int3 mov jecxz add mov sbb mov or in jo add repnz jl cli in sub sub (bad) mov arpl imul aad cmp icebp cltd and xchg (bad) lahf cld jns xor sbb and lret andl xor lret jb mov jae mov ret imul (bad) fs cld push inc popa cwtl notb fs lock add jecxz pop xor mov jmp pop dec xor (bad) mov mov test out movsl scas stc jl push bound and fwait das mov cmp out (bad) hlt adc ss push (bad) lock jge stos clc repnz mov inc jno pop in in cmp std sbb push xchg mov stos xchg cmc cmpsl jb mov out sub mov or insl pop incl movsb shrl xor imul xor leave hlt add sub push sbb adc xor and cmp imul mov xor repz xor sti sub add jp cmp (bad) cmp sbb mov jno add les lock sbb xchg ds add jns jb js xchg scas and add cmovg jp cld movsl outsb psubusb add pop xchg adc mov ret or xor or adc rolb repnz xchg imul xor mov add mov mov sbb push je cmpsl jle adc imul dec lea jns jmp xlat lds out cli int dec mov sbb mov (bad) jge mov mov sub fidiv lcall adc mov bound add mov xchg lahf push sub or jg sub (bad) adc shl push fbstp (bad) sar xor sub cmpsb or xchg gs inc or ret pop xor add sarl ja cltd js pop adc adc cmp adc call out adc movsl inc outsb adc out push les ss pop xor maxps jo jno jle xchg sub pop mov pop movb add jle jge stos add xor or xor aas and sub into push shll mov sbb inc pop xor pop addr16 and inc scas and hlt jb std pushf pop and imulb adc or cmp inc lock push loopne js int3 adc mov push imul add pushf (bad) xor ror repz jne cld ret lods lea std outsb mov out mov mov rclb push ret cmpsb sub mov pop or xor jecxz test add mov sbb and lods push ds mov out xor push xchg mov fdiv cmp repnz jl adc xor add int sarb out adc xor push jge jbe aam push xor push mov add lahf mov mov lods cli aas pop push in insb xor repz push xor lds fstpl mov xor mov jp mov or sbbl inc arpl clc ja int cld mov jb inc ds mov adc dec stc or std test sbb sbb and fistpll insl push hlt cmp in leave mov sub sbb jl add icebp aas imul repz jb jae fnstcw aam inc and fidiv scas dec sbb hlt out and lds (bad) jmp es inc cs cld lods stos xor popa and mov and push hlt aaa mov adcl xor (bad) aas pop cs pop (bad) mov test outsb cmp push in aad and pop push out mov lock mov std jo push nop and push repz decl (bad) xor outsl ficom xor fwait pop and inc xor cwtl xor int3 mov jl sbb cmp jb cmp mov sahf push xor (bad) mov outsl sbb and pop xor cli inc pusha dec xor add rclb or mov test cmp mov bound jmp cmp sahf lret cmpsb jecxz popf dec mov je out sahf jns jmp add popf cli ja jno hlt into push sbb cmp xor sti dec xchg or ja sub test out push mov les add xor addr16 lahf mov cmpps pop jo and dec decl jae push (bad) fldt mov xchg sbb and xor and cmp mov dec push in test pop push inc cmp lcall repz nopl push xor inc (bad) enter jae aad leave jl mov ja jo pop jle mov push inc xchg or not scas mov mov int3 fucomp into aad ret pop dec jo sub xor test imul push sub mov push jae decl pop inc jo xchg sub sbb cmp xor cmp rcrl pop out clc lea cltd inc inc cmp adc (bad) mov daa xor push shrl xchg push gs jo addr16 dec addl cld inc outsl je add insl cmp xchg cld xor insb ljmp xor pop call loop adc adc (bad) jmp mov mov mov push xchg mov jae popa cld adc xor push out add sub insb mov cmp pushf xor es jp or adc mov add mov or mov decb xor xchg xor movsb xchg xchg hlt aad inc stos aas jae mov pusha sbb stc xor out dec in ret jns cwtl loopne data16 sysenter test ss int push xor loope or icebp hlt hlt sbb adc lds jmp stos inc mov mov xor fwait divl popf (bad) jge adc repz mov xor cmp xor jle,pt hlt adc xor clc mov xor (bad) hlt out dec fs nop movsl cli xor dec les addr16 lods dec xor xor mov nop stos popf pop mov pop cmp add dec pushl pop iret movsl xor test clc push jp data16 mov mov (bad) ret sub hlt test and jnp mov mov adc outsb sti int xchg add and mov add daa dec jmp add cmp dec stos repz or aaa mov cmpsl repnz hlt (bad) out xor popa or adc test push fcomps es (bad) sub xor add test (bad) cli in lcall mov (bad) and aad aaa aaa mov stc sbb cli test addl js ds lret adc push mov jne cli xchg fstpt shll mov xchg pop pop dec rclb (bad) jo rcll out fstpt ret and rcll push pop pop int sub pop cli sub jbe xor ret aad sarb xor and and and dec adc xor (bad) repz ljmp data16 and leave in xor in and addr16 dec and pop adc ret adc cli xlat xor push rcr xchg je push pop lea out sbb push les and lea std push loopne mov leave gs and cmp call call fbstp ret hlt andl sahf rorl outsb aaa ja xchg pop or mov das mov jg stos cli je adc cli sbb xchg add xor pop scas sahf test jno jb lods pop or lods mov sub loopne pop sarb push or mov xchg fadds cmpsb lahf enter ja in cmp add fsubr (bad) sti mov aas mov inc (bad) (bad) dec aas xor pop and mov cmp cmp inc repnz movsl jae xor js icebp sti jmp cmp imul pop enter xchg cmp cmp cmp rorl out and imul cmc sbb adcb and fwait dec xchg jns sbb popf (bad) (bad) push enter aam ja,pt and push and adc mov pop sub xor repz add movsl insl stc jb xlat mov sub (bad) hlt mov mov pop sbb lea jae dec (bad) mov lahf push enter pusha and adc nop inc xlat push fstl push mov push ret mov aam lea inc dec adc push popa aas pop mov sub and push xor pop popf rcr sbb into push add sub or popa pop aas bound or xchg (bad) gs xchg out jp je adc xor aam push cld xor mov dec pop (bad) push xor pop add in jae repnz test movsb push mov adc imul int pop stc xor ret lock sub adc sub dec lods inc out clc pop inc xorb cmpsb mov xor and ret scas mov lods dec sbb xor xor jno repnz xor mov ds xchg out or jo xchg (bad) or xor push pop rorl sbb sbb mov aad sub test mov out pop mov sbb popf int3 mov mov rolb mov mov les xchg jp push pop mov sub (bad) and xor jne out loope test je cmp in xor add fist gs cld ljmp aad loopne fwait cmc jmp mov push mov mov clc hlt mov cli test push push sbb ja pop leave jle inc bound enter and faddl mov pop jp clc mov dec test movsl and imul inc or mov insl and fdivrs cmpsb repz mov lods fcompl ja jge and test cmp mov sbbl push cmp fcmovne orb js and push xchg in inc sbb popf adc test xor ret cmpsb or jge xor rcll and fdivl repnz (bad) xor hlt mov mov add xor pop or nop ret xchg test pushf jecxz inc shll fnstenv fwait xlat fidivl out mov jg xchg pop aam add xor mov es inc mov adc xor adc mov clc ficoml (bad) mov aam insl fldl xchg std xor (bad) mov mov jae mov repnz sub lock aad add cmp mov daa and test movsl nop mov out jle sub mov lock adc popa lret lea mov mov or cli sbb jae xchg divb mov cli and int3 jg jns andl jns mov out scas jmp sub cs (bad) in idivl inc and push jp sub fsubp pop (bad) or mov andl sbb push cmpsl jb push gs cli (bad) in cli data16 sub add fcomp mov mov adc push daa adc mov inc mov xchg aad jb (bad) out aaa mov push rcll jns push loop adc (bad) dec andl and or aas into mov shrl gs push and les push cld inc (bad) xlat mov movsl add push dec add sub ss xor add jns sbb push sti pop js push and in ds xchg jbe pop cwtl lret sahf add lods sbb or dec mov gs psubb repnz outsl push jecxz dec cmp ret fstpt lods cli idiv lods dec cmpsb xor push sub mov adc cmpsb mov push std sbbl insl xor arpl mov sub push (bad) int3 rcrb hlt xor lds xor jnp movsb xor cli mov notb sub push push sbb xchg or mov or xor jno les adc (bad) xor test xchg add aaa test dec push push or imul and inc sbb scas fldcw mov mov std add data16 jb xor push ds dec xor dec sbb loop jp dec lods in repnz mov inc sbb xor mov mov rcl dec addr16 int lods push fnsave xor mov jo jnp xchg test xor mov or inc mov std pop or mov mov test dec push or mov push add xor sbb add add xchg dec in add xor mulb and mov outsl add repnz sub push pop loope push sti mov and dec inc jno ret out shrl mov or pusha xor loope nop aad jge jbe cld and mov stc xor rcr mov jge in aas sbb mov gs push int3 shl stos or sub sbb xor cltd pusha addr16 test jne gs pop xchg or call dec in mov (bad) pushf cmc mov xchg cmp sub pop cmp xchg pop mov push jmp add imul insb in outsl sbb pop repz popf cmp mov xchg test stos inc ja adc jmp add int jmp mov or arpl jge mov imul (bad) (bad) leave mov rolb cmp scas jecxz fisubr sbb mov push sub push inc xor (bad) cli ss cmpsb mov sarl add ficoml xchg sbb rorl subb (bad) lea jecxz fildl into mov sbb push add or ret adc lret lcall data16 rorb dec pop push dec mov cld mov adc jle xor push push push jns mov stos xor out das xchg hlt xchg mov xchg xor insb dec xor xchg call (bad) es in lahf push pushf mov gs mov or push mov lods mov std push shr gs mov loop and dec mov in (bad) cwtl sbb shlb pop push sarb mov repz stos fsubs pop adc lahf jle mov stos pop lret cmp fs enter (bad) in lret cmp stc sub sbb add mov add icebp push inc insb push (bad) xor fstps adc xchg imul mov int3 jmp mov lret lods add cmpsb fildl addps data16 xor inc dec stc add pop repnz mov push lahf mov xor cli (bad) jae lcall test movsl sub test or jne xor xchg pop jmp cmp jle sbb dec cmpsb push out sub dec sbbb mov sbb cwtl xor loope pop dec add dec std xor sub nop mov rorl stc add push int cmpb out ss leave add hlt dec jg xor inc (bad) cmp adc rcl mov insb faddl xchg repz std and repnz push inc stos repnz imul repnz insb out mov xor xchg mov loop outsb push push jg aaa dec loopne scas and pop ret repnz mov inc shll mov mov push hlt (bad) mov dec std in pop into xchg and mov mov push fcomip cwtl add lret enter mov sbb jb std dec sbb aas daa mov call sub ljmp jns mov and mov mov dec (bad) sbb push xor data16 jle xor push clc pop or xor mov dec or (bad) roll call jno hlt mov push sarl jne dec clc fiadd mov cld jmp ret pop mov push dec sbb into and cmpsl mov int dec pusha xchg pop repnz and mov call push add xchg mov push xor lcall lret mov in fnstenv fcom nop xor aad adc ss lcall je push mov sbb popf ret les (bad) ficomp repz (bad) repnz jge jno ja sbb test push pop pop xor dec dec pop aas mov ds pop sbb cld jl lahf sti fdivl movsb cmp mov mov and int3 pop or cld std cmc mov insb xor adc sub test jno leave fisubrl jbe xor jnp sbb push xor cmpb xchg mov clc cmp imul bound push call imul xor xor cmpsb rcrl roll cli (bad) xor jns mov imul and xor pusha mov adc sub jae push push imul jb add popf jecxz xor bound mov xchg mov or lock xor pop insl insb inc mov out mov xor dec outsb inc xchg jmp xchg add mov add xor imul shll xor sbb or xor pop outsl add xor loope sub add mov pop je,pn out xor push sbb xor mov test lea pop call shlb call xchg jnp push fdivs xor cmp mov pop aaa in push pop and mov int jp repz jno inc iret popf adc jne fisubl add pop test lret outsb jmp (bad) movsl popf and mov lcall imul fwait cmpsb (bad) mov pop push cmp inc fcmovnb sbb repnz mov aad and xor adc push loope sub jo fnsave inc ja cmp xor fnstsw incl adc inc (bad) xchg ret pop jne and shlb mov jl jmp jb add sbb pop fisttp jl adc push iret adc (bad) push mov ljmp xor lret xor push and push pop stc nop ds jg call fmul ja or xor int add adc xor and xor bound pop jp and and sarl push xor mov mov xchg push cmp adc or (bad) sti jno or dec pop xor popf ja dec hlt adc lret stos mov fsubrs das push pop in adc es rcl fisub ret jecxz xor jmp cmp icebp jnp bsr in inc inc adc cld mov je test cli dec cltd xor mov lahf mov insl jno icebp mov xchg pop sub popl mov daa push gs bound dec rcr (bad) mov test cli xor xor add cltd cmp or cmc and scas mov es out sbbb bt cmc pop xchg cs ja push sub jo xor inc ja adc xchg je adc adc xor hlt jle xor ficomp cmpsb cmp icebp mov pop arpl push daa pusha in dec xor ljmp fldt dec (bad) pop xorl push jo cmpsb sbbl dec lret imul dec add insl enter jae cli cmp arpl jmp xor sbb mov sub cmp xor test push xchg and jns or push jae fst nop les jmp pop bnd and ret sbb loopne aas xor add (bad) popa pop adc cwtl mov add pop leave xor cli mov outsl nop add xchg dec hlt repnz xchg sar (bad) mov (bad) sbb movsl pop cwtl dec mov cmp dec sub cmp xor mov mov dec push je push sbb arpl leave mov xor (bad) push int add sahf cmp std sti xor andb js (bad) fisttp push xor into sbb xor pusha pop lret aas add data16 xor mov jns xor jne xor jo call cmp and in dec out (bad) outsb adc xor mov loopne and cltd imul push fisttpl xor mov pop pop sub pop mov adc (bad) stc push push ja add sar adc mov ja mov adcl mov movsb stos inc sahf stos leave adc mov cld sbb sbb pop imul lcall lock lods and dec xor iret mov loopne xorl and pop cmp fwait sti data16 cld stc js das stos pop ja imul ret lea sahf pop orl xor cmc xor jne or lds rcrb xor mov push xor loopne scas inc xor and jecxz xor add adc cwtl cmp xchg outsb adc adc insb ds push cmp addr16 mov inc dec add add repz rorb nop sub repz xor pushf mov icebp adc fstps repnz xor pop std sbb mov pushf pop jl add movsl adc jle dec in outsl xor mov outsb pop int (bad) sbbl hlt mov aas das adc adcb or sub in das test pop cli aam add xchg imul in add mov xor cmp je push mov mul int3 or pusha (bad) fmulp je add adc fsubrs xor sbb adc sti jle mov xor out (bad) mov sbb repnz out push loop mov ja inc je jnp scas mov adc adc lods icebp loop xchg push xor and push std (bad) mov cmp mov sbbl ret push in jecxz nop adc xchg xor mov sbb leave adc stos jae inc sub in mov mov inc xor xor jo and vandps mov fistpll pop pop mov pop xor lock fwait repz sbb inc icebp call ljmp push scas mov int3 and ss fdivl in xlat cltd xor xor and mov mov bound mov inc inc es mov aas fimul scas inc imul js xor jns (bad) lock lret (bad) inc mov fildll hlt ds rclb sub cmp inc imul add daa adc sub test pushf frstor sub lea fist sbb insb sub and jbe xor jp test add outsb mov pushl xor xchg mov push dec sbb leave sbb daa mov in jge dec push xor fwait aaa and and pop bsr pop sub sbb aaa (bad) aad test jns jle and aam push pop pop jge rcll adc lcall (bad) nop xor notl call ljmp adc cmp add repnz int jnp lea mov dec cmp jecxz jae push sbb stos mov adc repz movsb das adc xor fbstp adc dec mov xor and sub mov push (bad) mov and rcrl sub daa sub mov dec into mov lahf sub mov lret repz adc push (bad) xor (bad) arpl xor pop adc jge mov jmp je sub lods inc xor mov call popl cmc (bad) jp xor mov cmp xorl lret out mov add mov pop out data16 repz pop int3 cld repnz aad daa add xor inc mov cs sub mov pop sub clc jecxz jo ficomp jg mov scas into test xorb xor sbb mov mov not dec test mov jge xor std jmp xchg nop notl aaa imul jne add push jbe rorb mov arpl es jecxz xchg xor pop bound cld sbb or sub imul xor xchg mov std xor mov mov inc les cmp mov mov add fidiv (bad) xchg xchg movsl dec and jns push xchg jo sbb adc mov pop inc cmp (bad) xor xchg mov xchg mov cmp jle lahf dec cmp or nopl or fcoms cli pusha sbb dec repz movsl out loop addr16 push addr16 or je rcll cmp test jae mov jg sbb sub hlt adc je cld mov or adc jbe sbb jge (bad) sti adc data16 je cld movsb cli loop test les popf cmp and push dec daa sub cmp (bad) ljmp xchg xorb in inc loop jo push sbb jno push xor outsb and mov jle daa bswap push mov les sub roll enter push (bad) sub mov sar xor rcr fs adc push xor imul repnz ljmp cmp in (bad) ret sub and repnz dec adc inc add mov lret mov push lds cmpsl mov (bad) and mov pop jp pop mov rcll aas mov in xchg sub icebp sbb andb nop inc dec mov add hlt adc mov lahf and jnp ret in jnp or cmp icebp adc pop test pusha sbb lds add xor sbbb ret mov cld cltd pop push scas jb cs adc jno arpl movsb stc cwtl push jmp in lds sub pop sbb pushl cmp mov lock lods inc jb ficom xor xchg pop pop sub push inc adcb into mov cmp fbstp addb jle ljmp mov (bad) (bad) cmp fildll and jp repz into push repnz fbld xchg dec rep lds add adc push pop mov jae out (bad) xor ds sbb arpl add outsl jbe mov xor push test xor arpl mov push cmpl add xor or jb je mov pop cmpsl xor mov rcr xchg lea xor insb mov (bad) mov das imul and sbb push popf into jecxz adc xor lret add inc inc and cwtl xchg imul mov fiadd movsl xchg sub pop scas arpl pop push push push mov jno (bad) lret hlt inc xor imul subl cld adc shrl cmc or lods mov sbb sbb dec add repz dec movsl mov cmpsb pop and out xor (bad) mov in xor repz mov gs xor pop cmp lcall jmp cli mov adc lds jg xchg fnstcw xor nop xor fwait notb ja std mov popa mov in xorps lods mov push jns xchg test dec cwtl cmpsl out pop jmp xor mov adc (bad) and and push into je stc insl mov enter imul mov mov cltd fwait push repnz stc and (bad) stc sbb jecxz mov in aam popf addb pusha stc push stos mov mov or xchg jp xchg inc jge outsl loopne pop mov fmul mov mov inc test lods aam xor mov inc sbb dec xor dec out sub sub jnp test shrb sahf clc je xor call sbb jnp push das pop (bad) lods outsl jg xor popa popl stos mov cmc je out fisttpl jo push xor push cmp adc pop sub adc jne jb sarb pop or sbb xor iret loope xlat ss sahf jb lahf xor call mov mov mov neg push sbb (bad) mov add cmpsl ret into inc mov pushf dec cwtl or jae sysenter mov std push roll xor int pop mov ds notl jnp clc repz test mov adc xor lahf jge bound pop and jbe icebp insl fmul cmp xchg movsl (bad) cmp (bad) (bad) icebp fsubl sub (bad) imul bound mov pop jb xor nop lret movsl push or fisttp adc (bad) cli gs mov mov sbb xor pop stc lcall lea mov pop std cmp mov sti ret test pop xor andl or xor mov aas das xlat mov xor jns push jp clc sub and push push test mov movsl add pusha or iret outsl nop or hlt int data16 fisttpll fstl fmul xor push pushf (bad) daa lss test pop xor pop xchg hlt cs push adc aam sub adc cmp imul rclb jl xor or fmull xsaveopt jo out xor fyl2x mov xchg ja cmpl aas dec dec cld bound pushfw les scas clc xchg fwait repnz add or inc clc repnz sbb or mov mov jnp xor mov in sbb jno xor ss add and jne or inc mov dec jae push je rol std mov adc mov mov mov xchg push lods cli cmp sbb and push push push ss push fnstsw gs and mov and ljmp sbb imul or hlt and adc loopne adc repz out pushf mov xchg das jae pop loop jb mov pop mov das stc jp orl add dec ret dec xchg inc sbb pop jne sarb sbb sbb mov adc mov fisttpl jmp fwait les bt and inc inc stc jno xor mov xchg jne fcmovnb mov xor push cwtl pop pop mov data16 movsb loopne xchg arpl cmp cmpsb jo not repnz push xor js (bad) in mov lods shrb push hlt enter lock stos ficom je push inc ss push jmp push sub lret add pop dec das rcll xor add jle xor xchg fidivrl or xor dec test jbe pop (bad) sub cmc dec xor or jl and mov (bad) push or jne ljmp jbe sub loop xor (bad) xor lret jb xor mov cmpsl popa (bad) scas and lods ja aas int hlt mov mov int mov in int3 cmp hlt lret sbb sahf add xor mov pop pushl aam add xchg jno mov out jecxz in in fs dec push xor mov repz mov fist insb xor popf xor or adc call xor inc lret lods xlat push mov sbb xchg xchg cltd in and jle inc repnz scas adc or repnz push sub jae pusha cwtl and (bad) outsl and xor lea cmp (bad) mov adc dec aaa push negb fsts xorl mov mov stos adc inc movsb cltd cmp (bad) out mov and stos dec or adc push mov push push shlb test movsl inc test sbb imul xor and push repnz xacquire mov repz add sbb cmp ret sbb push fisubl push loope push jo xor and imul and aam sbb inc adc lcall adc push inc mov push int3 sti push test rorb (bad) aad mov mov mov xlat lahf jno sbb jnp cmp push cs fild es stos mov dec adc outsl imul adc fnsave aam (bad) mov inc and cld int3 test movsl out xchg (bad) imul inc dec adc pop inc pop aad jne aas out lret inc fldl andb inc push inc or sti jle mov sub mov pop add (bad) cmp shr test and mov adc cmp dec in dec scas xchg in rcrb and add adc inc jl jb jg inc cmp lods xchg xor pusha cs (bad) repz mov jnp jo push sub inc ja dec cmp add out jnp jmp jno stos insb into adc mov xchg xchg movb mov mov mov cld lret mov xchg fldt lret sbb cs xor sahf popa outsb dec jae push mov or mov adc pop cld cmp sub nop and cmp orl and outsb je rol jno push xor cmc pop xor adc fisttpl stos jecxz jp and jge pop add nop (bad) mov pop sub daa mov mov push sbb sbb mov movsl ret call add pop arpl inc and hlt jle mov rcll and loope ret js stos clc mov pop xor iret jp and xchg jb pop cmp iret mov xchg jb or pusha fbstp pop push and call sub adc outsb dec lods push lret insl xchg mov jb sbb outsl hlt mov xor jbe outsb cld or xor clc sbbl pop (bad) xchg mov mov (bad) lock int3 push fwait ljmp (bad) jbe add nop xchg mov fwait add inc cmp nop inc jb popf nop movsl or jnp adc cs popf and xor movsl pop and (bad) ja jp mov jecxz push mov pop pop pop push leave bsr repnz jbe add push mov push push movsb xor push and mov sti cwtl stc xchg clc fsubl outsb mov add mov xor or push mov insl into stos ds mov iret rcr jmp addl mov cmp jo mov and jns je cmc leave cwtl or fldt rolb jg adc mov shl xchg jns (bad) (bad) shrb jp push dec xor mov (bad) rorb add xor and cmp repnz pop pop pop push cmp hlt jge sahf mov push mov hlt loope andb loop pop xchg pop repz mov inc (bad) mov pop mov fnstcw xor (bad) xor rcl dec pop repz dec mov jnp mov mov mov aaa sbb addr16 pop sbb pop add ficom push jnp add xor mov sarb adc xor cltd fisttpl repz sbb and cmp or popf dec rclb sbb or sub xchg pop (bad) xor pop push aam xor sub and imul add popa xor std mov clc pop imul dec sub jp xor pop add push hlt movsl push leave xchg les test gs jmp imul xlat xor push dec mov mov mov jl outsb adc xor cld xor push xor push and adc mov sub jle mov call sub hlt jmp sub pushf std cwtl icebp ljmp outsl ja dec je add mov fimull jne out lcall fidiv pop push insb dec mov cmp and mov fistpll cmc imul fdivrs xor xchg inc in mov inc push xor ficomp xchg push push data16 out push hlt push lods daa jae clc je ret test mov (bad) mov imul fsubl cmpsl and adc into or xor es sub jmp sysexit mov xchg xchg and mov pop jl mov pop cli dec jne cmpsl and push nopl mov add cli loopne xor test mov xor adc fsubrl cmp cmp lcall xor xor sub (bad) imul cld scas sarl lret gs pop push adc fcoml mov ret xor out popf add xor push sub jns hlt lock les scas clc dec add xor aas sbb aam cmp fs lods push data16 out movsl in popf push push add aam adc adc xor lock xchg out mov dec je cmp cli daa mov xlat xor lcall leave and jl mov (bad) or fidivl jge cwtl or bound sub and (bad) in sbb rcr xorl xor jmp mov push mov (bad) add inc fsubrl stos cmp mov jmp mov call imul (bad) ficom cwtl mov xor (bad) lock das mov iret (bad) cmp sub xor (bad) dec jae and xor dec jmp fistpl jl fldl cmp xchg loop movsb pop xor mov idiv and and aam insb xor mov insl test fs es bound mov iret cmc mov jle es pop cmpsl jb mov cltd xor and scas and sub test adc cld imul lahf inc jno mov repz scas ret dec pop je push adc aam mov dec (bad) icebp mov stos xor addr16 jg ss outsb jb subl pop or xchg inc add fnsave or sub daa mov dec or frstor lahf push xchg cld inc je and sub shr adc arpl dec mov and loope rdmsr roll lret hlt das push xchg fcompl mov imul ljmp fist cli je xor jnp cmp cmpsl pop outsb mov dec xor ss aam mov iret lahf add std (bad) loopne push mov paddsw jae fldcw xchg scas push hlt jge loopne adc dec push or push and mov jge test push lods sbb aam mov in and ss jne adc sub push and rep add iret inc test push mov inc cld sbb movsb lods push mov xchg xchg xchg xor xchg dec sti into push cmp outsb ds adc clc mov jle xor pop es inc sub sbb (bad) repnz and ret hlt imul add push aaa movsb inc aam xor sub lahf sbb fdivrp dec addl iret sub (bad) dec hlt int enter dec inc fistpll dec mov push dec inc popf in mov addl inc repz cmp lods je popf pop push xor cmp int add xor lret loopne xor int3 add and lcall mov pop cmp sbb cld movsb sub adc fiaddl ret stos inc xor imul pop mov mov cmp inc jnp (bad) imul xchg ss (bad) add gs hlt popf sub sbbl or mov mov lock sub push lahf xor pop dec dec clc xor movsb test add and push jne adcb mov scas (bad) cli and outsb xor mov mov xchg dec ljmp pop fcmovnbe mov cmp lret ficoml adc aas push inc inc je (bad) cli jae stos (bad) out push sub imul les cmp stos daa mov xchg jno (bad) hlt (bad) lea into subl js fs clc adc mov dec je pop repnz sbb lahf lock jl push je call mov dec jmp xor xor js push sub inc jmp mov jno pop push inc gs sbb (bad) or cltd jne in hlt sbb stc ljmp cmp loope add xor (bad) xor pushf je sub xor imul lea adc and cmp dec hlt stos call mov outsl adc (bad) ret in jl insb fs nop hlt mov push adc sub xchg scas imul cli aad or (bad) jno icebp cmp daa (bad) or xor repz into shrb in xor test cmp adc sti cli cmpsb or imulb jp movsl mov sbb adc mov (bad) push les pop dec outsb ja test movsl shlb xchg push call push sbb xchg rorl inc testb cwtl sbb lahf cmp pop inc add rcrb xchg add mov cli jl push test mov leave test sub xchg ja fwait cld test pop mov es aam (bad) scas popa mov dec inc mov icebp adc dec mov loopne decl xchg push add arpl sbb shll and aad sub or push pop stos inc imul je dec sub sub add xorb cmp clc xor and movsl iret fidiv jo sub push mov sbbb data16 cmpsl outsb das shrb je decb adc pop mov mov pop inc and das sub sbb pop push aaa (bad) xor pusha dec xor xor cmpsl mov int add data16 hlt mov mov outsl fiadd aas pop ret mov outsb ja adc sub xor dec jg mov push subl xor and (bad) jne insl adc movsb jl xor lock shll popf cli xor inc std add dec scas or lds sub out adc icebp shrl jge cmc lret inc leave dec daa cs dec xor mov lret mov repnz lock adc jb sbb cwtl inc jno leave pxor ret jo adc cmpsl add xor or out and sbb pop and dec mov xor mov mov (bad) enter push push icebp nop or pop ds out div pop jnp jle jo inc and mov (bad) pop jge hlt insb mov in xor xchg cli sub dec cmpsl aad adc pop jne dec icebp pop adc adcl jnp adc jo xor (bad) push jb pop jle fiadd sbb and enter and xchg adc popa cmp mov enter or orb pop cmpsb (bad) jnp jbe cmpsl es xchg mov lahf leave pop fwait cli sub jb dec xchg jnp out sub pusha mov shl ljmp icebp mov out jne orb out push mov stos insl fidivr gs inc outsl adc gs fstl dec xchg cmp add sub outsl stos jb cmc mov int inc shrl cli sbb mov jmp (bad) add xor jne pushf outsb test add shlb movsl adc aad jecxz adc xor mov and sahf xchg mov xor sub push or mov sub mov (bad) aam fwait ljmp or je mov add out xor xchg mov je adc sbb mov ds jmp negl cmpsl pop xchg add xchg xor mov stos or es decb xlat (bad) sti xor mov je xor rcrl push dec adc pop xor cmc imul xor adc push dec and bound stos scas jne out push xor setnp dec add pop fisub jbe or in mov sarb hlt lds xchg mov xchg pop mov in bound add pop sub and pop or push pop or nop (bad) jmp mov cmpsl xor and lea lods (bad) jno lret mov std mov test mov lret jle cmp fs lea nop xchg push int cmp add fs mov mov sub adc add jl std int shl jle outsb mov cmp push xor dec mov or push out adc add (bad) mov push pop mov mov icebp pushl xor in lahf hlt jge and pop xor loop xor pop rcpps jno xchg inc arpl lahf ret inc cld xlat fadd xor fs sbb or or bound in xor cmp inc in mov nop repnz movsl mov adc adc xor daa jp jo les pop add sub push jo jno fsub ds cmp jg aad pop mov inc (bad) cmc out xor adc jno pusha pop push stos cld mov xor xor sbb aad emms hlt mov or add mov xchg gs cltd lds je sahf add wbinvd fdivp cmp popa pop mov lcall xor std fistpl bound out add popf or test insl xor jae out lret aad stos dec add xchg ljmp jae mulb shll xor mov out sbb add into mov mov cmp dec xor mov int inc add xchg es scas jae (bad) sti jge lock test in pushf popa and push (bad) mov cmpsl and xor imul or sbb inc imul or mov xor dec mov jae sbb mov mov inc xor xchg daa xor in aam fnsave mov push mov push aam cld daa mov sub cmpsb mov imul out cmp gs (bad) repnz cli (bad) (bad) in insb leave mov xchg mov mov sbb movsl movsl mov sahf leave daa pop iret in sbb mov in push jl (bad) pushf mov xor imul inc (bad) push dec jae jae push add xor daa mov enter and push enter push or push inc fs mov rorb mov mov cli fdivrs daa cmpsb mov adc ret les cs mov daa bound mov fiadd lret in in mov xchg ret repz mov aad mov and fistpl cmc sbb jmpw lea (bad) xor incl iret repnz mov mov test xor xchg xor and xchg pop cmp inc cmp fist (bad) stos scas xchg jg jo por xor push adc jne mov push cmpsb repz loopne movsl push dec mov jmp cmp sahf inc or mov pop cmc jne or push cmp push or lret xor sbb pushf mov stos pop and fbstp outsb sti mov jmp or jae je xor pop push pop inc les fcomi into push sbb xchg and int3 jb xor test aas insl mov mov out mov incb xor imul stc loope (bad) cld mov hlt dec sbb adc jmp push js out jo imull int3 inc shll jo mov push adc push les dec sahf adc cmp pop xchg xor sub xchg lea inc rorl (bad) insl js cmpl int3 adc xlat add lea data16 fldenv (bad) inc sahf add adc push in or (bad) jmp cli movsb and cmp leave pop inc adc mov inc rcrb lds out ret fcmovnbe xlat out mov and fisubr xor push adc xor xchg dec test sub jmp mov ja cmp add inc bound lret jnp or addr16 mov xor out je out or imul dec mov jnp push pop adc lret ss cld mov push push out inc push cmp xor in inc mov xor cmp ja jo jb push xchg fwait and test inc bound movb les sub outsl mov xor jge or repnz push adc outsb je lahf sbb mov or sbb out sub mov pop push insl pop mov xchg push jp addr16 insb imul (bad) clc enter arpl lret push sub jp mov fstp in sbbl ja or mov mov in xor inc push sub mov cld push add hlt dec bound not iret push and sub cmc clc mov cld dec xchg add pop jb jle addr16 pop cld jno jmp pop clc mov adc sarb push xor in pop dec div and jmp mov daa mov popa adc leave out imul test out idiv pop scas mov outsb fldenv pop outsw adc mov sarb mov iret inc push mov xor xchg pop not (bad) sahf add (bad) mov int pop mov (bad) mov and xchg imul pop push jbe xchg mov cli imul aaa mov push cs sub cmp inc (bad) xor xchg mov adc xchg std add jg jp ss adc mov dec imul lods das xor xchg leave cwtl repnz lcall sbb out iret add loop arpl aad aaa jl mov push adc and popl jns mov test dec leave pop sub inc cmp cmp sarb sub inc adc xchg sar mov xchg loope enter xor and cmp jp repnz nop ret (bad) aaa imul xor sbb push loop ljmp (bad) cmp adc mov popf mov mov ljmp jl in in aad stos test popa xlat add hlt sbb lret (bad) mov outsb adc out jno adc (bad) jp imul nop dec add popf jl jae cmp or push (bad) jae or push dec and dec add dec add push dec jmp mov mov aaa ljmp push mov xor cmpsl xchg or jne mov add js jno jp cmp bound dec xor aam jge add hlt (bad) repnz scas xchg jae cmc movsb or xor mov data16 xor xor jb pushf sub adc into movsl js ret sahf mov cmp sbb inc and les js xor rorl lods daa ljmp test incl lea jecxz push daa mov or pop sub ja push add in and jae in sub bound pusha stc pop push mov jns cld cmpsb movb xchg or ret jo mov out mov aam xchg (bad) mov addr16 jle lahf jo repz gs xchg (bad) xlat mov fldenv xchg dec gs xor add jae insl sahf subl imul add jg in add (bad) add insl mov push sub std add jmp xor push popa xor cmp daa repz mov (bad) scas mov push (bad) movsb hlt fwait and popa dec or scas insl xor mov dec xchg je sbb repz xorl sub mov xor nop int3 repnz xor shrb jmp insl or jmp call jmp (bad) adc inc test push xor cmc cld cmp jb pushf sti mov xchg sub mov shrl fisttpl (bad) mov sbb sysexit mov scas rolb add rorb dec cmpsb or xor aam sbb test inc mov cmp and jae outsl push sbb lcall xor xchg bound pop aam lret xor jo sub pop jp push dec cld add call aam jmp lods gs imul test cmp inc je sbb ss push sub jae xor or xor adc sbb inc mov xor jnp call addl pop fsub scas inc and ret sbb mov loope push pop push sbb add mov jae and outsb mov das sti in in cltd cld ds mov xor push adc inc pop (bad) pushf jecxz xor xor push jl scas cmpsb aaa xchg inc imul aas pop add cld lods js jmp nop test mov pop loop arpl pop pop sbb jmp adcb test jb push sbb hlt push addr16 xor xor jb jns insb xor les push test xchg sub dec xor dec pusha cmp xor jge (bad) jns hlt add or mov xor jbe insl hlt hlt or mov mov xorb add mov jae cmp jmp xor and fwait and push movsl pushf xlat lret pop inc dec xor (bad) xchg repz cmpsb mov dec xchg xor dec pop push xchg inc jo add xor leave mov js xchg std dec push push std jae mov iret (bad) icebp add inc imul dec pop xor and sub ljmp add and xchg add jl pop std or xor addr16 xchg dec dec (bad) xor or aad repnz xor jg pop xor mov or xchg hlt xor push dec hlt mov mov add aas add fmulp out mov hlt inc pushf shrl adc std mov test stc sarl xor mov adc adc xor mov repnz xor daa outsl cli ljmp pop sbb add jecxz add push adc repnz lds movsl out sti scas pop gs sub je xor idivb pop dec and cmc push scas and xchg or dec add or pop add adc adc jmp shlb sbb mov dec add je xor mov dec fisub scas jae in xchg add jge rcrl insb fcomps mov daa jnp jno xor repnz movsb pusha xor xchg pushf jae rcrb rclb and mov push pop cmpsl dec pop dec mov dec sbb lcall das imul mov sbb xor cmpsl xor jnp pop imul mov cmpsb push ret pop pop dec ss adc mov sbb sbb aam adc rol cwtl insb push je push inc inc pop jbe xor xor mov out xor pusha adc bound in fmull jb jno add or xchg fcmovne repnz es cmp in mov lahf mov fsubs fldl dec das pop xlat jl addr16 (bad) mov xor mov adc or pushf jl in inc xor inc out andl mov dec out sub pop pop aas mov pop fsubl xor fwait imul push push (bad) repnz mov inc shl mulb mov imul sub fidivrl jmp cmp mov loope adc push mov mov add jp push stos loopne pop cmpl sti fcompl dec ret push roll enter call jo push outsl push das pop cmp or push xchg sti repnz cmpsb xchg call clc push xchg leave scas movsl sbb push dec xrelease (bad) cs insb (bad) cmp aas imul dec xor stos movsb imul jb jbe lcall pusha mov mov out sahf loope sahf xchg add add xor mov bound ds aad xor mov ljmp push cmp sarb add fcom jl xor cwtl jecxz into jle mov inc push ja or inc int jne cmp in and ret les jp das cld mov pop or mov pop cld stos iret int3 xchg lods sub xor dec aas js repz fidivrl lods add dec bts lock test out fistpl xor add sub push inc cld out cs out lods push xor sub arpl stos fwait repz lret les pop add das gs xchg cmp (bad) and adc cmc sbb cmp jecxz xor js and sub pop insb dec fisttpl mov js jp sbb out lcall sarb add xor adc flds add sbb test inc xor cld out sub adc and jl icebp xor (bad) xor cwtl dec pusha xchg add jne xor jo je aam cli mov lss push hlt mov pop (bad) icebp inc mov jbe mov mull iret lcall jmp int sahf adc xor leave js inc jb imul pusha adc xor cmp stos pop xor call outsl mov ret (bad) cmp in and repz mov rolb fidiv sub inc adc pop outsl xchg scas dec jmp cmpsl sub ret aaa or daa fdivrl cwtl mov movsb xor enter and xor sbb add mov test jb jns outsl mov mov cli std je mov pop inc add sbb xchg ds inc push stc sbb data16 jl sub pop mov adc jg (bad) and or movsl add in xor push mov test sbb imul adc dec fisub inc imul jb jne add je (bad) shl lahf or mov jb aam push inc sbb test bound mov mov xchg xchg repnz ja das arpl xchg and ss punpcklwd or fucomip xchg in jne xor aas cld jge mov adc sbb inc fwait push add push in mov pushf nop xchg cmpsl das gs fimull mov loopne jae in add hlt adc rclb sub sub jle mov mov jge mov adc leave stos sbb pop xor xor push mov aam cmp dec cmpl sbb dec imul test jle adc pop pop out clc adc dec cli xor movl fldl2t jne and pop clc in popf pop sbb arpl inc out jo and and add ljmp aam aaa dec stc sbb je jo adc sub dec std and and stc mov rorl jle jle mov pop iret jbe add (bad) lret fwait lret shlb xor sub jne push int3 adc inc (bad) je jmp adc or or dec adc xor or scas loop jae (bad) idivb xor scas jmp icebp xor dec push int jb pushf adc cld hlt rorl and repz cld dec mov je jns adc fsubs xor push jle pop es cmc popa (bad) cmp push fbstp and decl adc adc mov add lahf hlt cli mov pop add bnd pop mov std dec mov cmp xor jb xor stc enter push sub pop dec add imul ljmp add je daa arpl xchg push cld sbb xor inc inc xor stc sbb sub out lea pop outsl xor ret imul int adc pop dec cwtl dec cmc or jp fisubr add test or pop or mov pop popa dec jo adc iret mov pushf pop stc insl inc scas xor es cltd xor pextrw mov call ds jge imul lcall outsl xchg sub xor mov das loop xor adc sub dec sbb jb (bad) inc repz lret jns popa dec dec (bad) stc push insb mov fildll sub and mov mov loope loop clc aam andl je add push push mov cmpsb sub xor adc and or jne int3 hlt daa out cmp push and push loopne xchg sub cmp (bad) cli lods sbb and xchg or push and dec (bad) sub mov sub push jno imul adc inc push into imul movb ja (bad) rorl lret dec mov xchg adc int xor sarl insl arpl xor or cs fs xchg dec stos cltd add aaa push (bad) je sbb push adc mov dec jle xlat roll sub int sub jb je mov into mov add sahf xor (bad) jno (bad) ss dec sbb mov xchg mov mov mov roll pop dec push cmp xor f2xm1 mov hlt mov mov dec push jl pop ja pop ret movsl popf xor mov pop loope xchg push test int3 jge push mov push pop insb fwait mov sub test push pusha pop es das dec jbe jo imul jne sub test shl lret add jb cmp sub mov xchg xchg sub mov sbb xchg xchg ljmp and shrl push sub lds rcrb fadd adc mov mov and mov leave loopne mov sbb sbb in movsl push stos clc cmp mov xchg jo lods push or pushf shr test ds xor jae xor push dec or lahf push mov aad jae stos xor adc roll adc mov lock or mov mov add or or xor inc jno jae fcmovu js jb fistl jp repnz push xlat pop cltd xor xlat loopne xchg fsubrp xor cmp (bad) sti xor repnz mov push add xor pop sbbb adc xor insb mov lds leave xchg add repz lods dec xor test das mov aam dec repnz outsb xchg negl jb loopne adc xor rorl push xchg out mov sub cmp mov xor repnz sub outsl insb xor and nop sbb je sub mov sbb mov or orb inc pop push cmp lret or adc mov cld mov hlt dec add jbe jg cltd adc es repz xlat loop (bad) xor sub push push nop xchg mov pusha out and and rorb pop lcall sbb scas sbb dec xorl mov cli adc ret mov jl outsb mov adc ss dec adc (bad) out loopne cli stos test jmp leave fs adc or nop inc add push and pop insb (bad) adc (bad) xor push inc sti mov xor or ret push cmpsl add sbb repz cwtl ds xor jne mov jnp lahf repnz (bad) adc repz push xor cld (bad) mov repnz adc jge xor addr16 ja pminsw sub dec cmpsb mov mov (bad) fimull shrl test icebp popf stc inc xor dec cmpsl pop outsb cli out xor fwait mov push add jb sbb (bad) mov mov or sahf cld hlt imul (bad) pop mov push mov cmp dec insb inc cmp jo sbb mov add (bad) mov out mov (bad) cld sti pop icebp das jno popa or ds xchg pop jbe aam mov cmp xchg aad mov fsubrp jne mov add fcoml and xor loope pop jae bound cmp mov rcll jns mov mov mov mov aad add hlt mov xorb inc icebp scas pop insl xor sbb push pop inc repz ds mov fmuls mov add pop cmp leave lahf pop xor fnstenv fsubrl and clc mov xor leave inc out jo or cmp xor movsb in jle xor int adc pop (bad) repnz inc test popf clc je add cmp mov ja xlat push les clc das xchg pcmpeqb inc adc std mov sub jb imul call xchg jne push xchg push sub fwait mov aaa inc mov ret adc je lret mov mov mov and js xor imul cmp in (bad) cmp cmp ja dec je and pop jp clc hlt je outsb adc xor scas inc cld inc push mov iret ljmp jns das mov inc mov push cmp adc jo test xor mov jno sub into jmp xor xchg popf lea dec aas pushf add sbb and cmc adc jp inc jno out lret add add mov dec ds test fcoml dec mov fistpl nop mov icebp adc fldt push mov dec add jne scas xor cmpsb push xor test push inc xor cmp into mov shl (bad) (bad) jo mov inc pop mov cli pop fdivl push mov sbb pusha xchg repz push and es mov fs xor lcall pusha lods mov push lds hlt cmc in out ljmp or pop movsb jmp mov adc movb xor xor ss adc out inc movsb push addr16 iret pop ret imul jge (bad) xor pop cld ja sub popa (bad) xor xchg push lret repnz sbb and popa int3 (bad) das lods xor std add pop jae into push mov (bad) in mov xor hlt (bad) sahf ret in sarb pop ss xor enter inc sub sbb push or popa in xrelease daa sub (bad) scas pop add jno loopne in sarl fildll push pop (bad) frstor dec jmp mov lcall or adc jo push or add imul and outsb push adc lods and sbb jb jo shrl lret ljmp mov and push xor das stos ret cmpsb jmp insb add mov daa jb xchg les repnz mov xchg and int add and popa or xor cmp push pop and xchg mov cld (bad) rclb jae push cmpsb insb scas sub sbb mov and std lahf jo lea js aam out scas cmp jmp xchg inc data16 mov xor repz (bad) xor ret mov addr16 adc daa xor mov jb iret (bad) mov or xor insb std icebp pop xor fs fwait dec adc int scas xchg jno test push jns adc mov mov mov push je xor inc adc ds insb mov or clc popa or subl cmpb (bad) push hlt pop fnstenv add (bad) jb pop jecxz (bad) lea inc xor outsl and xor and mov sub jle jne repz pushf aam add jecxz jmp sbb mov js fs (bad) mov xor mov cmpsl lods cmpsb push add aad xor in mov sub dec hlt test cmp jae and sbb dec jno mov (bad) fist pop push cmp stc xchg dec cld dec xor stos jb imul hlt je sbbl add clc enter cwtl mov sahf mov push into add loopne or cli mov lods dec fiaddl lret jb cli cmp movsb (bad) pop notb rolb xor jmp cltd adc jbe cli jmp out and frstor aas pop and xor dec pushf in adc mov sbb xor jae sbb xchg cwtl je (bad) fmuls sub jb arpl pop dec sub into mov cmpsl rcll lods and jnp xor in fidivl roll scas cli jg test sbb sub mov hlt or jo cmp btr mov or clc outsb sub rcr lods lahf pop xchg mov or or fisubrl pop push jo xor sti cmpsb std jne and rcll cmp dec xchg jl repz out and jno mov movsb das in insl xchg push mov cld push lea cmpsb sti out push push xor add push (bad) mov cmp gs xchg mov xor leave sbb pop xor lahf mov and rclb outsb ds loopne insb cld loopne ljmp adcl xchg ret inc test std mov sub (bad) mov repz jl inc fist addl fbstp mov adc jns fildl imul mov pop mov rcrl push jb push adcl sbb (bad) cmp mov shll sbb mov sbb jno sbb (bad) loope rorb dec stos and (bad) inc or cli iret ss cmp and loopne aaa push mov push push ds push fcoms jl xor outsb mov xor fs add das sub and jb or (bad) jo cli daa jno inc inc (bad) in pop jo rcl repz push adc mov adc outsb dec js push bound mov mov jns jbe int cmc mov and (bad) cmc test fdivr jp jo lret and or out mov adc mov popa jb sbb sub imul mov mov jo mov (bad) sti xchg insw shrd mov mov push shll xor pop mov xor xor xchg loope cli int mov and shl sub fldl aaa test or or je add or aam rorl sahf pop icebp (bad) add jg jo out and pusha ja mov mov sar xchg test xor adc insb pop shll add stos call dec mov mov dec inc sub xchg xchg icebp dec mov repnz jge mov nop inc xor mov pop xchg push and inc and cmpsb das iret and aas shl or ret out loop xor icebp xor xor mov cmpsb loope sub jo mov gs call aam sub jecxz ds add add jbe shl mov sub add xlat and int add mov inc sub push pusha push cmp loop mov sbb adc sbb push jecxz lods pusha cld jmp pop pop daa lods mov ja hlt add shrb or pop xor pop push xor mov push ficomp hlt jecxz std (bad) fbld jnp incb mov cmp dec inc lcall push mov jmp inc sbb cmc sarb push xor pop je mov lea add popa and push ret pop xchg out int3 nop pop aad jns cwtl aaa xlat mov loop xor sahf dec cltd xchg jns adc aam cmpsb mov sbb lods xlat cmp add sbb mov cmp ljmp push (bad) adc hlt ret test ss and cmp lods pop rol outsb bound add push jno add jg xchg (bad) int3 or andl adc and jae int3 jle cli fnsave xchg inc push dec adc int jecxz cmc add mov push mov mov and out mov out xlat and adc jp fidivl ljmp repnz lcall sbb jmp rclb dec shl mov adc das sbb imulb out pop call jnp sbb imul lss data16 insl dec adc add dec ror xchg or ret rcll dec movsl dec pop out xor dec repz inc dec mov out push sbb push dec repnz adc sbb fldl xchg std dec adc sbb sbb shlb xor ret jnp add sahf mov xchg mov adc push movzbl mov sub dec test and mov sbb (bad) mov lea adc adc mov xchg imul jp movsb mov in clc gs hlt and adc decb dec cmpsb sti push lahf repnz pop dec aam insl push mov ljmp fwait rclb test add jl lock push sbb daa sbb pop jae adcb adc clc shr (bad) mov add sbb cld popa scas sub sbb iret repz dec or inc add add (bad) mov lret inc mov dec mov push jge or lods stos adc dec xor mov cli popa stos or movsb add nop fwait push jnp mov inc je mov je dec test popf xor add and adc pop fisttpl int test xor stc cli sub ret mov xchg cmp inc mov push mov xchg ret jb (bad) cmc scas mov push (bad) das jno cld add pop mov jbe pop loopne adc out test (bad) fistl js fcmovnbe push add rorb mov xor adc nop fwait loopne mov (bad) lcall xor ret dec sub test xor fstpl (bad) jnp xor mov (bad) dec ret mov sbb lahf mov mov mov loopne jge sub mov loopne nop (bad) pop cmpsb je leave mov xor pushf les pusha mov (bad) in mov lahf sbb popf push stc (bad) idiv cltd fs push inc push es jne mov gs test jae xor out add hlt sub mov nop rolb sbb (bad) sti dec mov dec pop or or gs roll xor sti xchg aaa sub repz inc cmp insb adc xor push je pop mov (bad) dec dec jae popa xlat sub add movsl pop andl xchg cmpsl xor or pop mov lret add fcmove inc sub cmp hlt and or or mov (bad) add mov pop xchg xor aaa cmp jno lret out mov aad push jno sbb xchg clc cmp rorb push inc xor and xchg xor stc daa cmp xor out mov adc stos loope add xchg mov cmp xchg out jnp adc mov mov pop rorb into ja xorl popf cld popa (bad) jge mov out aas xchg jg xchg mov cmp mov ljmp jp sbb sti or pop or insb xor jecxz test xlat and push adcb ds cmp jl sbb dec mov cmpsb mov (bad) hlt mov inc adc push clc push das daa fcoms mov cli (bad) in add and ret jb cmp in clc in sub outsb push push push js ret fs scas jo add repz rolb push or and aad test cli loopne popa mov mov cmpsb enter fildll loope,pt popf sbb je and xlat sbb fidivrl mov std sbb push add incl xor data16 and in xchg cmp pushf mov push es mov sub push xchg mov mov in pop shlb cli (bad) jo cmc dec add lea mov xor and mov test fidivrl push dec sti loopne aaa dec movsl jb aaa add and in xor imulb loopne cli pushf cmpsl mov das xor xchg cmc mov push or push lods push jg and std cmpsb adc jne dec (bad) aaa cmpsl aas xchg mov xor pusha fisubrl mov xor nop xor push or sub mov scas push mov mov mov ror mov xor add or xor dec push jae dec daa cltd je sub sub out jmp mov hlt in popf hlt orl pop sahf cld mov xor sub lods hlt fcomip jmp std jp dec dec (bad) sub pop lret icebp xchg pop jae mov mov das sbb push cs leave xor lock jg mov repz lods aaa pop mov add add adc mov clc mov mov rclb pop popf js xlat sbb jae pop jae xbegin xor mov rcl bound sbb daa fidivl nop add das pop lds movsl in ficom inc popf cmp gs jmp or arpl lods xor or add add mov xor or gs jg cmp imul ficomp (bad) cs and pusha add fidivr fst dec in jno adc outsb mov cmp out daa bound xor in and dec xchg lods in ja xor mov xchg xor mov xchg mov outsl or lea popf daa pop test ret scas mov lods loopne iret bound (bad) popf dec adc iret cmc add loopne icebp mov sub add sbb inc add dec jo sbb and cwtl sub or dec mov int gs repz xchg xor stos outsl jge lods adc cmc cmp xor fstpt test xor add leave (bad) cmp xchg ret dec mov mov dec mov cmp inc or mov adc sub sti out es xor (bad) gs adcb int3 lds mov pusha jge dec pop add mov pop fmull std fs cltd (bad) hlt outsb icebp pop add jge mov loope fimull mov xchg mov movsl mov sbb lcall pop jb pop xor mov divl pop cmp shlb (bad) insl in adc mov or insl mov mov xor pop or mov mov sbb jno mov sbb in shrb test add xor xor sbb repnz xor (bad) out flds bound fmul popa (bad) xor pop stos lock mov dec (bad) push inc mov xor xor mov rorl js sahf jmp jb lods adc in add add sbb xor sub push jne xlat sbb pop inc cli mov xor lea xor mov int3 stc xor mov repz adc stos (bad) xor cltd popf mov jae cmpsb imul daa cmp stos xor push dec pop aad insl imul scas mov shll in aam push pop xchg xor cmp jmp add dec jg nop push adc xor enter hlt ja mov (bad) add and xchg fadds adc ror (bad) and adc aad (bad) (bad) jno push dec sti mov push xor loopne xor fmull cmp pop xchg xor dec or loopne jmp xchg xchg insl dec test adc cmpsl jne shl xchg adc imul and add fistl jnp push aam ljmp cmpsb fildll xor add mov lods loopne xor mov ret mov xchg push sub xor (bad) iret popa insl cld jmp xor xchg mov xor mov ss push mov imul jmp jno ds pop xor xor aad jb dec mov dec xor ret rorl mov stc and mov push add pop (bad) adc sbb and jae push ds cmp dec xor fmuls cli pop inc into jle (bad) bnd rolb sub test cmp mov xor shrb aas pop add les inc arpl rclb call jno adc xlat arpl sti movsl pminub add xorb ret fdivrl mov pop (bad) mov cmpsb jno xor (bad) adc mov cld dec jno xor mov adc or test popa jno or je outsb pop bound cmp scas repz xor push mov mov xchg fdivs push aad cli dec sub pop imul or sbb outsl xor mov xor ret fstpt xchg loopne lret lods add mov jp test int3 lock movq dec push pusha xlat rorb xor push jg rcll icebp je aam ret movsb das jb dec inc sbbb add xor cmp add int3 ja jo jae xchg push mov push int cmpsl and jg xchg cli aaa inc inc xor xor mov ljmp (bad) mov or xchg sub and mov xor xor pop mov xchg add pop ret xchg divb push dec pop repz into mov rolb xchg pop pusha cmpsb jno les add out es pop or adc fcoml cs fisttp stc push xor je cmp in xchg imul xchg or add add fbstp cs andnps push adc jge cld cmc pop mov out xor dec xor cwtl mov hlt lret push ja and push movsl insl imul sub movsb push mov xor xchg mov enter add loopne mov sti sbb into mov test sub lahf or dec je push arpl nop sbb ret xchg ljmp out xchg inc adc (bad) popa (bad) or xor mov in aad xor mov negl loop repz int jo inc es sbb inc rorb push cmp and mov add add stc (bad) popf sbb xorl stc in sub out inc sbb neg mov xor ja push das xor sub dec jo mov dec inc out add add and push xor mov jno pushf aas dec lret pop sub jmp adc xorl xor out fild insl adc xor call and mov cld outsb out rcl push or jns inc fcmovnb mov in mov ret mov (bad) and pop dec xor mov xchg add jmp xor insb mov loopne or xor jo mov insl lds push std scas xchg fs pushf scas cmp sub pop fdivs push or pop xor push xor sti xor out mov ret fs sub mov jl xor pusha hlt movsb fldt sub je (bad) fdiv lods dec push dec or add xor loope cli imul (bad) mov sub enter sbb jae push ljmp hlt es mov xor and mov sbb mov pushf or xor lds mov jge (bad) xlat ret push bound in loopne aad xor mov mov mov (bad) sti mov pop mov test shl popf stos pushf divl cwtl adc cs pop sbb xchg add leave and xor popa sbb fbstp mov rcll pop (bad) int jl dec popf xchg data16 mov pusha add jle cwtl xor movsl add es daa or and push dec jo mov nop cmpsl cmp jne ja repz (bad) ret dec inc aam mov fdivp mov push pushf xor outsl cmp repz mov les sub cld dec add jnp data16 or jp arpl or (bad) mov inc xor jae fwait dec movsl jo sub jno lret sbb push push dec inc push and sbb inc adc faddl xor push mov pusha inc jg sbb xor test pop mov pop mov inc popf xchg sub mov inc push or xchg int je sub aad mov sub xor push push mov xchg ret popa sbb in insb ret cli stc pop outsb xor mov jnp (bad) mov sub mov out add sbb cmp scas aam or (bad) in add mov jge cmc sbb daa lea xor xor fild out jnp cmp in dec push and and mov sbb lahf inc push outsl pop mov test fs sbb ljmp cwtl and int sub loope lea mov divl (bad) sbb loop cld xor xor xor stc jbe mov ljmp and cmp clc add or lods jge lock je fcompl ret mov or pop fisubr adc inc in inc mov fist scas pusha cld push jb add in cmpsb test fwait pop popf mov xor mov push cli cmp je outsl or add xchg in hlt sarl mov inc or jns mov out sahf push push jae movsl push mov adc mov (bad) xor add and jle lcall repz ja mov lcall push dec add pop dec xor sti pop push fbstp add out mov dec shrb les jg pop popf xor mov in or (bad) xor je sub mov sub or add out adc cmp ds sahf je sbb ja mov jne inc xor mov and cld in in test xlat hlt repz push adc cmp dec out out inc fcmovnb je push divb std sub mov in iret cli fisubl ss or addr16 cli pusha aaa lock test std mov test mov mov test sbb fisttp mov push in inc imul repz in xor mov xor std cmp insl hlt jbe adc movsl sub adc mov push sub das mov push jmp insl cmpsb mov jne cmp mov repz jle sbb and dec rorb jle jb cmp repnz xor cli cs (bad) xor add jge xchg pop stos xor (bad) mov and jb or cltd cmp sub (bad) add jg xor cwtl dec inc push in sbb xor add test jns js xchg jns test jo (bad) sti add xor xchg inc cmp mov adc pop add mov push repnz and pop ret dec js insl jg adc js mov mov xor push lods pop and std pop (bad) fistl jmp stos sbb je pop pop push sub arpl fwait hlt ja (bad) cmp or out sysexit f2xm1 jmp lods push push daa fdivs push insl repz xor sbb adc fimul pop (bad) in jmp rorl add push sub ret test scas mov cmp hlt sub adc jno cmp sub hlt pop or pushf cmp add and mov jmp daa xchg sarl mov sub xor lcall push imul push repz mov pop and adc xor push loopne or aam xor (bad) hlt lods fdivrs sbb in add lds jno fsub pop aad sbb call sahf ds mov test jecxz into cmpsl jg mov xor pop pusha mov jg sub add hlt xor popf (bad) and jns xchg dec sbbl jns (bad) mov mov xor inc sub js mov stos loop sti in leave dec xor cmp add mov mov (bad) cmp xor cltd mov test les cs mov and stos mov jnp (bad) (bad) repnz popf xor xor push (bad) ficompl mov add xchg push push xchg sbb out add (bad) push hlt scas sarl adc jbe loope stos xor sub mov jo xor rolb mov sbb ds outsb push seto dec in push adc mov loope jmp pop sbb xor cwtl data16 rcll ret in cmc cmc test jmp insb xchg or cmp jb jge jmp push call mov xor dec addr16 or xor xor lret popf sub mov dec aad outsl xor insl leave push jb jne jle sub cwtl push xor pop mov lds pushf insl push loope xor jmp cltd out scas or xchg mov adc sub xor popa push push jp (bad) js bound inc and sub fcos repz cli push ds jb mov out mov lea pop adc bound jnp js jb mov jmp inc (bad) cli mov sbb push inc adc loopne sub adc imull mov mov xchg jl iret add bound aam mov out je (bad) in inc jno ret and cmp jbe adc inc sahf mov (bad) and xchg jne jnp mov aad cmp jno pop and nop in pop insb adc scas loopne dec lcall add pushf adc or inc jmp dec (bad) add sbb mov lcall stos push xor sbb mov dec rclb gs lds add cli imul xor jle cltd addr16 insb jp movsb or int inc insb jle pop movsl aad mov or int3 lcall jo push (bad) adc lret repnz stos push std enter pop movsl cld mov jl sbb fimul outsl jo ret cli lahf push ds out les repnz mov jnp lods adc sbb pop xor (bad) in cmpsb test test lcall push jl les jmp add hlt inc sbb out mov ficomp xchg ds adc push repnz jne mov dec dec sub adc pop or sub in int3 xchg sbb arpl fdiv xchg movsb push das or mov push mov out mov xor jmp repz outsb out jae add lret stc repnz jne adc jno in inc cwtl in aam xor fisttpll mov push xor jecxz ss ss cmc lea cld cmp in jmp aam xor in cmpsl and or fcos hlt lods std icebp jo mov pop jg out jb sbb sti enter dec add inc movsl cmp mov ret mov pop adc pop push xor mov xchg nop add cmp inc pop sbb mov lock xor bound jno push inc xor inc jnp inc cwtl sub (bad) jb sub inc and data16 insl adc test mov add sub movsb mov (bad) xor or inc fdivp push mov gs xorl adc adc popf enter pop add push or inc (bad) jecxz insb cld test jp and xor rclb dec and xchg clc lahf jb scas push ja stc jno sub rclb xor dec stc jle dec add and jne cmp in mov mov mov or sub cmp xor or insl inc sub loopne adc mov punpckldq movsb fldl dec (bad) xor imul jmp xor (bad) dec mov ficomp xchg xor negb and cs xor sahf fwait outsl jp fld jg or xor sub sysexit addr16 jnp mov jecxz int (bad) in jge sbb into std frstor movsb jne mov add pushf out sahf mov mov mov jmp sti ret jae aaa mov roll pop sti data16 movl add pop inc (bad) sbb jge mov enter jecxz (bad) xchg icebp dec jo sub scas aad dec push xor outsl stc mov negl lret jnp xor mov cmp jnp or xor andl push fidivl pop inc mov adc xor pushf jo lods out xchg loopne test mov sbb int3 cmc test and push repz cmpsb adc push in sub inc jne or mov (bad) fmuls push jge xor or stos pusha je cltd xor insb xor pop jae sahf xor or dec je,pn inc hlt xchg or mov jecxz mov jmp xchg sub adc mov jmp mov pop mov sbb out xor mov mov mov fdivrl cmp imul (bad) mov rcr loope jae addr16 push or xor xor bound xor xor pusha cmp push lods sbb jmp bound and xor divl jno test cmp xchg xor add lcall icebp and mov sub daa clc sahf cmp hlt lret dec mov jb scas sub mov xor mov daa repnz xchg push test jp je mov cmp sub xor dec pushf aas mov loopne dec outsl adc lcall int bound sbb repnz fwait es jns mov in push unpckhps scas fstpt test (bad) call add inc or ret add cld enter pop imul jne jb pop mov xchg cs jnp insb loop pop outsl or pushf adc jno adc adc aaa faddl daa rcrb int3 cli sbb add clc xchg sarb xor aam jb push ret xor sub and or xor das dec cmp scas add pop cmc iret lcall push xor outsb xchg dec adc mov xor lods popa mov mov shll mov jb xor in add sub mov add jge dec push lea (bad) (bad) daa jecxz cmc pop dec xchg stc test pop (bad) jno add faddp repz (bad) repz test js push mov aad mov in mov xor pop mov cmp ds cmp cmpb lahf and jno cmp push les dec xor sbb xor xchg jnp faddl xchg aad pop movsl into or inc xchg xor and push inc lods andl stc ljmp cmp mov orb push (bad) in ljmp and xor je pop and je movsb and jb repz shll fs fnstcw nop xchg pop and xor fimull cmc std xor (bad) fsubrl xchg mov test iret lods adc xor rorl xchg je test mulb sahf test mov or loopne lods sbb aad xor jecxz cmp sbb push (bad) and fadds sbb xchg les dec mov outsb xor inc inc mov mov jle sub or jbe adc xchg sti or xor inc ljmp mov cli out jnp prefetcht0 int cmp add sti adc mov and mov cmp nop nop clc mov xchg inc cmp shrl dec add push inc xor outsb lea mov popa (bad) std (bad) mov jg daa add jns xor add sarl adc mov inc xor das sub dec push jae dec jle aas pusha rclb add jbe test push out ss (bad) je sbb jp sub and jg and dec mov in xor mov xor cmp les out mov mov repz nop inc sbb sub sbb into cmpsb jmp sub cmc iret hlt adc iret mov gs (bad) mov mov sub sahf dec popa sbb push xor insl pop xchg jp je scas and xor subl add cmp jb mov cmc es push lcall mov mov xor push or aaa pop pop and aad jmp or incb jmp cs mov cmp pusha std (bad) adc push adc bound xor cld jae pop or xor push das xchg in int jnp les (bad) sbb (bad) mov shll xlat jmp jno mov mov xor hlt push cli (bad) and xor jnp stc outsb and mov jb sub and or adc or orl mov inc mov leave and fidivrl sbb mov cs xchg sub jle repz sub std add adc and xorb fsubrl xchg dec dec repnz repz cmp jmp pop mov mov nop popf xchg std push (bad) jmp aam adc js xchg in and mov (bad) repz les jae int movsl ja nop popf clc adc mov mov sti arpl (bad) in scas dec outsb andl lods ret add and jmp or loope sbb mov (bad) in aam nop lcall insl call mov gs dec loop cmpsl gs inc mov mov adc (bad) icebp enter sbb adc es cli scas pusha and into push sti pop cli pop adc fsubrs pop jg pop movsb mov jecxz addb cmp fidivr sub icebp in in xor adc mov lods fldl repnz (bad) cli cltd add xlat dec jl pop xor std cli fidiv mov push popf imul test sub btr adc (bad) sub je sysret loopne mov mov sti pushl mov popf dec fdivr sbb ja (bad) repz xchg iret xchg cli jne out cmp in cwtl mov or jg call lock mov nop mov adc xor mov push jb xchg pop cltd cs mov in add cmp decb dec xor sahf lods pusha mov dec (bad) sti xlat mov jl aas ds adc or cmp adc int3 pop shrl jmp std jmp and jb aam in push xor je mov outsb lret sbb sbb das push lds mov insl or ja dec adc cli jmp sbb xor mov jge bound cmp jmp mov jne sbb test or or add xchg sbb (bad) jge cs ret mov in sub dec jl fcomip xchg popf sub lcall sbb or jne clc ret scas mov stos push je mov or xor add fidivl enter fs pop mov or push jae adc cli sub mov ja cmp sub test in and divb cmp sub cli push add and hlt sub lods sbb int inc scas (bad) std adc mov adc repz lahf mov je jae cltd mov push dec das inc xchg push mov adc mov sbb sub cli mov scas sub movsb addr16 mov imul jb jg push std repz cmp add mov mov leave xor (bad) mov sar fs ljmp adc sub and lea cli addr16 push xchg sbb and fisttp sbb inc adc push mov sub xor push and inc xor insb in mov in push outsb or sub push push pusha stc jmp and hlt adc (bad) (bad) mov push sub movsbl xchg test add ret and jns je pop sub aaa xor dec fsubrl fist xor es call sub pusha mov mov jne jne (bad) mov and sbb jmp ret mov out loop dec mov lods in out mov leave call mov clc fldenv outsb out imul aaa dec xlat pop xchg xchg adc pop clc lea jb pop movsl sub ja xchg jae stc mov subb (bad) int3 (bad) addl jns sti or mov jbe in cld cld sbb pop ja movsbl lock mov popf icebp dec push imul (bad) loop cltd and mov jge lods lock aad popf repz fsts push insl dec adc xor push cmp dec test pop sub or cmp mov aaa mov in push xor popa fsubrs mov lds mov cltd mov xchg mov dec das je data16 ss (bad) mov sbb adc cmc out dec or stc pop mov push in cmp aas or stc push cmp xor jmp ret lret xor dec xchg imul cmp mov xor sbb ds xchg cmp pop or or sbb xor repz jp lahf fidivl icebp fsubs nop xor inc push rcr mov dec pop and fwait bswap mov sbb xor movsl add xor inc arpl pop xor mov sarl cmp jbe aad adcb je mov stc rorl mov inc xor fucompp loope sbb mov cmp lods xor enter je stos imul daa mov and pop bound data16 lret js sbb push xor inc aaa test lea jno cmp dec sub mov test test cli xchg sub xor xchg push pusha inc ss sar and inc push hlt or ljmp or fsubp mov imul adc jb push repnz lret jmp dec jb sbb cmpsb popf movswl adc push aaa adc (bad) xor arpl mulb push pushf xchg dec je (bad) data16 mov nop mov adc sbb aad scas mov lea aad mov aam or es and call ret cltd int icebp cli outsl (bad) jp dec adc lret mov add pop ja mov mov sbb push jns inc mov jno pop push imul repnz mov mov imul sbb aad pop mov pop repz dec and lds and adc lret ret fwait arpl nop xor fdivr mov and dec popa cmp imul cwtl and add xlat ds push adc cmpl fist imul jle sub adc add rcrl aaa gs xor add mov imul or scas push mov loop fcomps sub jge sub cmp lret ss push jecxz adc push test inc dec and adc arpl sub aad sub jmp bound fidiv cli negl movsl ljmp and and mov into jne add das cmp jno lea push mov cmp xor pop frstor imul ret sbb lods aam (bad) ss fldt mov xor mov xor xchg imul sub pushf fadd aam adc rcll idivl out mov jnp jae nop cmp jno push lahf jb lock adc mov cmp adc imul add jae jae (bad) stos inc gs adc xlat jb aam popf rorb cmpsl lret and mov push ret mov mov jae xor sbb sbb divl mov mov in int3 in repz (bad) sub jle popf jno xchg xor fxch nop mov sahf mov cld repnz pop adc out rolb aad push mov lret sub or xor test cld das xor mov pop xor icebp loopne scas xor leave daa rcl xor fldl pushf jge pop mov arpl out xchg es lret xchg add sahf repz sub adc out cli jmp cli inc xor xor sti call xchg cs adc xor sub jg pop and (bad) mov cld bound adc into je dec (bad) xlat sbb mov push xchg push sti in adc fwait or dec cmp mov xlat adcl lcall inc sub pop mov hlt loope mov cli addr16 sub cltd xor cld push sub popf fisttpll movsl mov pusha (bad) daa or ja push adc dec cs addr16 cmp mov int3 push loop repz push out into xor push divl sbb test push mov cmp cmovle jb mov mov outsb dec fadds clc sub into xor pop sub dec inc aaa mov push sub jmp push jge nop sub cmp jmp and ja and sub sbb (bad) pop movsb mov repnz out test aam push test jo or adc xor jne mov fucomi mov rclb in dec xor cmp jmp jl das add ss cli dec frstor into aad jo scas mov sub mov daa cmpsb adc xor cltd test aas add jp out xchg dec and lea mov iret stc mov fdiv movsl gs repnz push je les mov pop ds jp sbb ret and cmc dec loop andb je push fldt pop or mov das cli sbb mov mov in aas jecxz jp out jle sbb push sub mov add hlt popa xchg inc mov pop push pop and cmp and cli std (bad) xchg lea scas repz push jg xchg sub nop outsl clc cmp mov sub pop je repz jge push mov fisub cmp add stos mov mov mov sar fdivs jle dec or push sub dec mov sbb sbb and fadds xorl daa int loope xchg jbe mov dec shrb enter jg and leave sub mov adc repnz mov lock or sbb repz mov clc push or sub mov adc je jne repz jo addr16 sub sarb (bad) cwtl int cld and or xorb mov push stos or icebp and xor (bad) in push xor shl ja lret mov xchg test loope ljmp xor and gs lret je addr16 mov xchg push aas je mov movsl mov loop loopne divl mov inc outsl mov arpl push pop mov inc iret pop shrb jge es xchg sbb xor jge mov mul pushf loope loope push repnz xchg or push cmp or sbb ret movsl mov xchg sbb mov xor jno xchg sub xor je push sub pop lret lahf mov out mov cmp hlt xor daa pushf mov test roll add shrb sbb inc lcall imul push pop mov sub push fimull pop (bad) jle pop out iret pop outsb lods xor mov adc in add jle pop test imul movlps mov addl pop jbe pusha dec sub cmp inc push or mov icebp push mov xor mov loopne subl test movb imul adc out jo (bad) mov xor push mov jne js pop arpl fbstp inc shrl pop imul xor mov (bad) cld xchg sti jne (bad) mov dec sub imul sub jb js sti mov ljmp sbb int3 jg pop popf jo (bad) repz repnz mov das jae cltd adc pop and jne cld adc fidiv sbb cmp pop sub jo or and arpl lcall cmp sbb dec push inc aaa (bad) xor fsub pushf pop jne fstl scas mov imull aad pop mov adc hlt cmc add sub fistp or xor lock jae mov (bad) mov sbb jmp cwtl insl jae adc cmc cli adc mov in mov in insl les (bad) loope mov push push aam (bad) stos jl jnp jmp dec lahf lret mov and fist inc and mov icebp jecxz adc sti xchg xor mov xor lods dec xor dec movsl enter mov bound sbb aad xor pop push inc adc std dec popa or sbb lods mov cmp inc pop jb movsb clc or inc xor ret mov pop faddp das (bad) fdivr hlt mov out xchg aad sub inc arpl mov inc push clc pop add sbb test fs popf fidiv rcpps mov cmp mov and (bad) jmp ds mov inc mov (bad) aaa fldenv add dec je mov rcll stos dec aaa xor push jbe lods mov adc popf insb pop xor or into (bad) (bad) movsl hlt imul rcll pop jno xchg xchg leave jl jle lret cmp jb cmp xchg jle xor jno push dec cmpsb jno bnd clc (bad) cmc sbb test add gs jb or ja jae or sahf cmp pop sbb ja add bound bound add test lahf mov insb push or mov imul aaa out dec or push mov sbb ret xor and cmp loopne fwait scas test (bad) repnz dec fstpl mov dec ljmp scas iret xor pop dec xor pusha sbb and or divl or popf pop sbb nop nop sbb cs sbb fsubp out sub dec xchg pop mov sbb sbbl leave sahf cwtl adc xor push sbb arpl jge cs jbe movsl dec popf xchg add aad sub xor dec (bad) hlt cli lods js movsl repz sbb insb xchg cltd cli and dec cwtl popa push mov jnp lea push das imul nop sub or xchg pop clc sub mov mov ficomp loop nop fs mov inc add xor mov mov ljmp xchg xor mov (bad) cltd mov inc sub cmp sub mov dec shll mov fnstenv cli mov mov scas and movzbl insl mov cs jl jo adc jo cwtl sbb loop add push pop cs lods xor cmp rdmsr adc or lret push (bad) mov mov fstpl xchg stc mov jle std xchg lcall in adc push xchg sub push out rolb mov add and ret adc and int mov inc mov mov jnp push les outsb or sbb cltd push mov ljmp nop jae pop aaa add dec pop mov mov into lods insl mov pushf mov and arpl jo mov mov shrl jns scas fs cmp sbb xor mov jb adc popf sbb test out xchg xlat sub das push pop xor mov loope pushf imul cli test out jge xor or movsb mov clc shll into inc inc stc mov adc hlt pop test xchg mov jge bound clc xchg into sahf (bad) test cmpsl mov mov daa fiaddl sbb jno mov shll xorl push enter test int3 mov (bad) je inc dec rorl incb fbstp dec cwtl mov mov cmp cmp push xchg ljmp andb pop (bad) aaa xchg lods cmp outsb inc test popa rcl or lds nop push pushf add mov bound jle mov mov divb mov pop xchg inc add xor adc ret lods xchg mov fstpt mov scas inc std repnz pop mov inc dec cmp lods cmp pop sysret xor jge or jo mov (bad) cmp leave xor jp or xor adc adc xor outsl imul je popf push shrb sahf jg mov idivl insl lods inc lods sbb adc jno,pn cmp mov cmc insb xor rorb push sub mov cli pop xor mull sbb lods addr16 xor sbb jne in mov pop add lcall lahf push adc sbb pop dec jae adc call inc xor push je clc fsubrl xchg cmpsb sbb xor sbb cli xchg xchg adc pop pop mov ja pop mov mov das inc loop mov adc out fs pop inc xchg xor cmc pushf and mov leave out jmp dec cmp lods adc xchg jg mov jne out push jl push jge or add and into int3 cld aad cmp loop notl adc cs mov (bad) jge sbb mov iret or aas cli cs inc data16 rcll and xor mov out xlat outsb cmp xor adc sub sub lret aas inc arpl mov jecxz out pop adc shr cltd les daa pusha xor pop cmc sahf enter pop add hlt scas jmp (bad) shl int push in jmp jns cld (bad) xor mov xchg imul jo (bad) push jns add jb out loopne popf lea cmpsb or mov rcll and xchg add jge fidivl adc push mov mov xor jg and in hlt gs cltd mov xchg dec cmpsl (bad) ja jbe dec mov bound js mov cli rorl data16 iret add jb fxtract ret std xchg xor jle rolb and adc jmp mov cs roll lret xchg scas sbb stos inc cmpsb scas jno test andb pop mov test push xor push les xchg jnp jne js adc ds fcomps pop and mov ljmp icebp add lods add or cltd xor mov and gs ret rcl sub pop adc (bad) outsl sti pop push jno sbb mov xor test xor adc cmp pushl pusha xor shl mov test nop leave lea das xchg pop outsb aas adc pop jo cltd sbb pop xor mov add out stc loop mov fstpl ja out outsb fcoml fs mov mov add xchg (bad) icebp popa push xor pop push dec daa scas outsl dec push daa ja mov dec xchg pop mov iret repnz jecxz add into or inc test mov sbb fistpll fsubs test inc (bad) inc fdivr sub mov xchg push mov xor sbb fist hlt mov imul fstps sahf and fistl mov scas jp add mov cmpsl cmp out cli sarl popa outsl cld je insl inc xchg popa or insl mov add stos and leave push cli cmp cs shrl sbb (bad) inc xor adc push xchg sti jmp clc add inc push mov xor icebp cwtl push mov dec xchg mov sub and and xor lds add jb mov and xor daa adc push outsb fldt (bad) push mov adc insl or xchg sub mov scas lret movsl (bad) sub xor aad int3 sbb sub mov aaa jo dec jg (bad) xor (bad) jns mov jnp pop jne hlt jge xor scas or js xchg imul cmp inc push cld stos xlat mov aad dec xor push fnstsw sub cmp pop cld outsb minps xor aas lds pop (bad) mov mov xor add or add sub aad mov into and (bad) xor bnd nop dec in and mov cmpsb loopne rcrl and jno mov pop and pop les cmpsl pop inc adc loop or cld mov push add inc sarb sarl fld xor xor js cltd pop in (bad) jmp adc xchg mov xor cmp cmp mov ds fcomip jmp cmp sub insb pushw mov mov xchg cmp sar push sahf int les (bad) mov push cli cmp sti push xchg std icebp sbb and adc pop cmp (bad) pop sub adc mov out and cli stc fs bound add lahf ljmp jnp push xor fsubl loop outsb popf repnz push nop add lods sbb mov je daa push fsubrs out cli test inc or es out mov xor ret testb daa adc xor sub fstl lock cltd test push inc les subb mov lfs insb push leave mov pop movsl or cld mov sub into pop xor and xor jl jbe cmc pop inc pop cs arpl hlt or es mov cmpsb inc add (bad) je inc xor dec mov xchg dec jb outsl in es je inc adc mov icebp mov cmp (bad) or and mov dec dec outsl dec sub jb rorl pop stos mov repnz mov sub ds or repz xor arpl jge aam xchg lea fdivrp fmull adc es nop xor add cmc (bad) fsubl xchg sbb or jl mov sbb aas xor (bad) mov inc rolb push out push cmp sahf xor repz cmp inc insb loope aaa rorb sbb cmpsl xor fidivrl hlt in or jne outsb or push sbb insl xor xchg jecxz and sub push popf mov jmp icebp fsubr aam call mov jae adc in ret dec stos or leave fdivrs and xchg mov jle push or adc inc dec and jns jns je push add pop movsb and mov (bad) adc fcoms int insb leave jb (bad) mov lods adc inc lods cmp xor add add js lock sub insb xor repz (bad) xor mov pusha (bad) hlt aaa cmp clc cltd imul in test push jl cmp fdivs push aas je call imul sti jp imulb and mov cld mov sti and jmp xchg add je stos mov push add daa rdtsc call cli add cltd inc jecxz mov adc mov aas xchg push cmpsb das pop jb addr16 lea in lea mov sub mov mov idivl cmp gs in shrl int3 push xor leave int sbb inc lret mov imul pop loopne inc pushf and or fimull cmp sbb push ljmp sub roll adc xor jns fwait std sub cs movsb mov (bad) cmp imul sub sub push sbb sbb lcall lret push loop shl dec dec cli lcall xchg xchg std mov lcall inc mov cwtl ds mov inc xor cmp into mov or rorb in imul jne and push pop sub test pop dec pop popa xor xchg aad daa pushf adc sbb xlat stc xor fwait loope fadd cmp aas xor xlat xor mov mov sbb mov or jae shll arpl insb not (bad) ret in xchg or pop xor mov sahf mov pushf xor add out das loop inc pop jmp (bad) pop hlt mov movsl mov or add je xchg jg (bad) mov pop add mov inc pushf or popa fimull dec sbb adc insb sbb inc hlt cmc aad lea cmpsb mov outsb stos and fistpll nop sbb out and inc inc cld sbb add imul or mov sahf xor pusha push outsb lahf inc adc push mov dec inc add dec add repnz pop inc das subl adc xchg pop or in (bad) push fidiv rcr icebp mov lcall push cmp aas xor cltd fs hlt mov pushf dec popf push mov xchg fs inc in lods xor outsl ja aas mov enter stc or add ja sahf or gs mov stc lcall out xchg and pop test sbb xor gs adc shrb rorb pop (bad) adc sbb out popf jbe stos loopne or push bound lock sahf cmp mov push dec cli leave xor jmp and push mov cli negl pop leave addr16 js jno xchg test das mov cmp jo push xor call adc frstor xor inc inc mov sarb scas cld arpl out fdivrl adc pop sbb xor mov mov cli ss mov sub mov (bad) xlat stc xchg popa and pusha xor (bad) out pop dec mov (bad) call clc pusha dec mov xor adc mov xchg outsb mov imul push sbb outsb scas adc hlt or sbb sub mov adc jo xor dec repz pop mov xchg aas sbb push mov and push cmp mov lret call jge inc cs dec fs insb out adc jle cmc cwtl sub cmp sahf andl (bad) xchg fidiv daa shrl jno sbb lahf xchg xor aaa push into fdivs adc push xchg imul fcmovne mov scas adc out mov push mulb jle pop std xchg decl mov fldl mov daa fiaddl addl push fstpl loop jle movsl xor outsl pop mov insb hlt mov clc pop out xchg in or jnp or sub inc dec stc stos and xor iret mov out lahf and sub (bad) sub inc insl jg hlt mov sbb or pop dec je xor dec cmp xor and add mov cmc jp movsl movsb cmpsb rcr popf pop pop dec cld jae or jae int movsl push clc cmp jmp adc (bad) lock lods xor push es sbb daa orl jne sub jmp sbb cmp push push movsb pusha test add ljmp es fs test jg je daa addl mov xor pop and test (bad) mov mov lcall xor and into jle jnp mov mov (bad) cld and sahf dec cmc jp mov stos jg jns hlt and or mov xor jo xor icebp movsl sub xor fidivr cmp and rcr fstl dec push or outsb mov lcall sbb mov mov fincstp ja jle cld or adc hlt sbb insb test adc xor popa push lea xor xor repnz leave clc (bad) xor mov dec or mov jno lcall mov dec fnsave fnstsw or mov iret imul cmp or mov dec adc insl xchg pop mov sbb gs push dec mov jp mov divl repnz shlb xchg xor or adc jmp mov mov es popf push and dec or stos xorb fbstp (bad) iret (bad) jne je sbb or dec push xor in sti cmpsb adc jb stos or das jae cli mov ss xchg cwtl or je mov sarl xor xor call adc sbb pop inc adc xor xor mov pop and test shl popf cmc fmull push out pop repz push (bad) pop dec clc or movsl mov sub aam cmpsb cmp mov lcall fmull add fwait (bad) adc jno xlat and ret cmp arpl cmp or jae aam rorb out repnz sub adc (bad) push add mov lds mov (bad) mov imull imul sbbl add xlat and and dec aad cli adc add and (bad) jb xchg pop push repnz xor inc and pushf aam clc dec repz inc xor pop sbb into cmp push mov idiv stos repnz mov dec pushf xchg movsl adc aad hlt lods clc sub ss or add loopne inc xor stos out stos mov in cltd clc mov jmp test push sub xor push push xor sti (bad) push dec gs aad imul in mov aaa data16 idiv scas and or loope mov gs movsb and pop les shrb cld pop inc and fmull jecxz fsubr jp jge mov out jmp inc xor fs cmpb xor adc sbb mov push in xchg push sbb add clc lcall xchg leave mov or fdivr repnz imul pop decb mov jbe inc and push lret (bad) pushf data16 ret sahf lret cli aad mov scas jecxz jne ret lods fistp cmpsb cmp xor cmc xor push cs lcall and sbb fwait cli pushf aas repnz lahf insl int mov or cli das push or cli sub dec mov js imul cmc jle or lret adc mov inc icebp not push adc pop repz insb fnstenv mov (bad) repnz gs fist les mov sub sti adc mov cmp adc sbb daa push jecxz in (bad) in popf mov arpl jo sbb add push int cmpsb push adc pop push sahf cmp cwtl mov imul subb ret pop mov mov and lea cvtps2pi sbb mov gs mov cwtl aaa je nop inc lret repz int mov aam mov out mov and cli mov dec test and je add jmp (bad) outsb int mov loop mov xchg pop dec sbbl lahf cmpl movsb and sub push les pop shll jge hlt nop dec lret shll mov and (bad) adc mov movsb or test lods add fcoml aam (bad) push in adc outsb add push add mov out test roll pop sub pop in hlt imul cltd xchg sahf or mov ffree lcall cmp mov push lret lds cmpxchg gs movsl dec mov nop dec outsl inc lahf and pop sbb push or dec push inc push jnp out adc rorb sbb jge and mov cmp shl gs inc (bad) hlt sbb aam cwtl push ljmp pop movsb mov iret pop cmc mov mov cmp sti lea inc movsl xor pop dec pop rorb pop jns scas sahf push test jl pop sbb into int lcall cmp je scas add fisttpl std nop pop shrb cmp jl hlt mov push dec or push outsb frstor or lock arpl icebp pushf ja jecxz repnz inc push lcall cmpsb jo push mov xor sbb jae xchg push push push dec repz push inc jge cmp movsl mov mov jp xor cmpl (bad) push xor mov mov mov and xor data16 mov inc nop dec int3 and aad scas sbb (bad) mov pusha lret pop stos jecxz pop leave dec fmuls xlat lods ret imul xlat addr16 xor push scas xchg xchg out repz push adc shll int and sahf pop sub enter adc stos add push outsb out popa xor aad aam mov or lds cmp and inc sub cwtl or xchg push repz push pushf repnz data16 add xchg push jo or cli insb stos fldl arpl (bad) dec dec jb popa and dec je mov addr16 mov mov pop or sbb (bad) jle sub inc adc pop or push cmp adc adc cs push inc cmp hlt and sbb enter mov cwtl dec jb outsb mov pop aaa repnz pop enter in lods (bad) dec call int3 cmpsl jl aam inc (bad) xchg mov loop loopne inc xor pop repnz add dec std je push jp mov into cs shr push test test jecxz in sbb cli shr hlt jns adcb push mov and mov enter into xor out xchg mov xor xor lret inc outsb jl sub dec jmp inc (bad) push adc mov add xor fildll inc mov sbb ja mov repnz add and jp mov mov pop xor cmp rol sub pusha loope add mov fwait add lret jb add fistpl sbb mov imul hlt sub jo pop dec dec push adc gs xor mov pop jg pop out ds xchg and mov mov cs shlb ja mov pop es lcall dec ljmp sarb sub inc pop sbb xor (bad) pop shrb mov xor or fcompl mov pop adc gs add cmp cmc add fst lds aas adc mov mov sbb cmpsb jbe lret imul les popa lods jl loopne jge and pop bound xchg xlat xchg test cli or mulb and iret imul enter pushl sbb xor fadds imul aad adc adc pop sub out in mov sbb sbb cmp adc jo and arpl (bad) pop inc std popf xor std sub popa adc xchg ljmp mov lret scas pop xor sbb jo hlt cmp push arpl xchg (bad) xor push iret lret (bad) repz push test pop add scas popf adcb popa sub fidivr out lods xor aad push xor sbb arpl xchg xor mov mov and std negb mov aaa add jp ss cmpsb mov lea mov inc clc jmp repnz jns (bad) (bad) aam (bad) jmp mov push movsb xor xor loope test mov faddl add push push inc xor imul mov in jns and shr pop jae loope sub sub jae outsl rorl leave js insb sbb popf andl mov fsubrl loop ljmp out lahf push loopne adc stos xor addr16 ss sbb add xor scas repnz mov jb test jae out (bad) mov jo mov cmp jne jns je push icebp in clc add test shl leave dec data16 push xor imul fcoms mov sbb in cmp hlt (bad) sahf mov or mov ja cmp aam lahf push xor dec fcoml adc jmp mov in sub xor push xor mov jae es pusha mov sub jl xor xchg lea push jae pop xchg dec sbb adc xor mov out jae stc mull call or cmc mov xchg add (bad) push hlt clc fdivrp and push adc shrl dec xor fstl cmp mov in inc and mov inc (bad) lcall mov movsb shrl pop loopne test pop xor cs insl (bad) and sbb dec add sub (bad) data16 mov mov pop sbb sub jmp dec or test xor or xchg mov inc (bad) rorb jae pusha or stc mov mov sub (bad) jns (bad) mov push aaa xlat clc or inc jae xchg push cmpsl lret cmp jmp imul xor insl lea fnstsw add pop mov jae jbe insb outsb and xor insl mov xchg mov fidivrl mov xor outsb and pop sub (bad) inc xor mov jge hlt jae sbb xchg cmp pop pop or and jo xor dec (bad) les cmp inc and add movsl cmp push leave inc jmp cmp jg pop add xor ret xchg sub clc add les pop cmc push std loop sbb add rcrb push lcall adc sbb data16 and jge ds push imul sbb adc sbb push mov xor insb mov push sahf add xor mov or add aam pop (bad) repz sbb jp (bad) clc push (bad) repz jb aam mov add loop xchg xchg iret add mov xor jnp orl inc xor add mov loope mov nop sub mov insl xor sbb cmp cmp inc xor (bad) mov dec xor dec adc xor dec ret sahf stos xor mov fadds sbb repnz cmc bound push mov mov xchg pop mov mov xacquire mov mov ret rorb aaa mov xor shrb pop out push addr16 cld xor push int3 cmp scas inc push les push pop jg int jmp mov (bad) popf repnz xor mov or (bad) into lret (bad) xor jle mov jnp je push add subb js (bad) stc push cmc and mov repnz fcompl call stc xchg rolb xor jle mov jnp dec sbb xor or ja clc push sbb xor je,pt (bad) or cmc repnz adc adc ror adc nop imul jne mov or loop pop int ljmp stos stos sbb push pop push fistpll pop test test sbb test int3 mov jns fildl pop xor insb roll (bad) or mov xor ja or adc and pop stos pop lsl (bad) cld cmpsb xchg movsl mov jecxz adc iret fwait out and cli in test and jmp loop jl adc pop or push inc sbb or out inc inc jb nop ds outsb dec pextrw pop movsb je sub in cmp dec add es xchg bound push cmp and jbe jle jb,pt int je pop mov cwtl mov out mov and lods jge mov jnp ja cmp pushf jmp fild xchg mov inc fisubrl (bad) fadds scas pushf xchg enter sbb add xchg scas mov sarl lret adc adc arpl nop mov dec pop adc test mov (bad) js hlt xor cmc je push aas imul jno sub push (bad) cmc ficompl push add jmp das imul mov xor sub ret xor pop pop int jle xchg dec (bad) sub add mov adc push sbb xchg jb or and push repz (bad) aaa js mov or cmpl cli cmp xchg rcrb jge loopne lahf dec test push (bad) scas jge lea sti (bad) repnz bound std jg aam icebp add (bad) mov adc xchg sbb push out pop daa push pop jb (bad) mov xchg bswap push lea push inc lret add outsl push movsl (bad) leave pusha and stos imul sbb int3 xor jle es (bad) sbb sbb mov cmp or je in mov dec sbb iret xor loop mov add aas xor add inc int3 hlt inc (bad) or push test es inc and jle fdivs push inc test push add adc hlt hlt jno pop jl (bad) sbb das vmovups add lret fiaddl jo andb adc xor dec lods jmp fstpl xor clc lret push jno jecxz jno cmp hlt ss push addr16 pop dec xchg nop test and insl repz mov sub jbe in mov shrb out lret in ret sub rorl xor add aaa and fdivr gs xor stos in aad mov mov les sub lcall ds in xor or subb mov (bad) jae push jno cli jmp adc ss sbb fidivr in mov add dec jnp dec les or shl jmp mov and add data16 cmp cli pop rclb sbb xchg mov mov lods sub jmp push fldenv repz sbb lret mov cmpsb (bad) incl lahf sbb ja data16 dec xor rorb sbb jne dec outsl fsts pop ja xchg in das hlt (bad) sbb sub sbb repz add jg inc mov xor push jo mov fst ja mov fs lods or mov inc jo sub leave aaa inc xchg or (bad) insb aad add mov popf adc xchg sar push bound cmp sti xlat loope fwait mov orb ret int3 in pop les xorl scas rolb nop push jnp pop rcrb jae fcompp subb push pop dec stc mov add shl pop jns bswap loop sub (bad) rcll sub mov repnz mov xor sti addr16 pusha mov ss mov rcll (bad) jne cmp lcall mov orl xor pop repz xor lds icebp mov push lret popf add mov movsl sbb and stos sub idivb or stos (bad) mov push pextrw mov sbb lods adc jl test inc adc jno and fcoms mov mov jp iret stos loop cltd lret mov stos sub in cmp jle mov out mulb and mov iret push mov xchg aam and sbb hlt mov xlat adc push xor daa push sbb jb or sarb movsb xchg mov pop add jmp ret imul in adc (bad) and adc jno push or les ret sub mov test xor adc mov aas loop pop iret pop insl aam inc mov mov sbb lret inc sbb xchg mov sub sub dec scas loopne js pop imul scas les adc dec cmp mov adc jmp repnz sub outsb dec push xor inc or xorl cmp pop sub xchg hlt pop adc das push lods push movsb inc or data16 imul sub in sub imul mov push and cmp jge add das in inc cli mov shrb mov or add stc pop pusha dec push cld or adc mov adc nop iret xor mov add icebp fldl std std jecxz xchg dec or and in cmp je ljmp mov xor mov in je pop in aas inc ret mov xor ss push xor mov scas fdivp outsb pop pop push das xchg inc and jmp pushf int (bad) lcall scas rolb xchg dec add or or icebp fcoms push mov int scas or arpl xchg jne hlt (bad) hlt int lret mov jb pop adc jmp es dec icebp nop jno mov shll adc push cmp hlt lock insb sbb int add mov gs fisub cld insl dec push clc aam daa shll imul nop mov loope jp test jg imul lock jne lods push add repnz xor (bad) pop jb cmp jle outsb dec add setnp xor insb das pop cmc xor int cwtl push das sbb cmp jb lods aas arpl add jb inc lock jmp mov adc jb push cli jg repz popf cli les insb loopne jo or mov test (bad) mov jge adc fstl ror frstor mov mov das dec ret mov mov push pop push mov call xchg mov loop loope pop mov xchg sub pop mov and push inc jge cmpsl dec jne and jmp sbb mov pop in xchg lods (bad) repnz cli mov cmp js icebp mov add fdiv sbb les sbb push sbb jp rcr inc mov scas dec das jge arpl cmp imul adc jae stc data16 xchg test sbb (bad) sub pop xor out fiadd and movsl add das xchg push adc (bad) mov xor adc xor out push arpl jo jb gs or imull clc in mov sbb ret cmp push mov pop mov mov push xor ja mov mov or mov mov inc mov pop xchg xor mov mov cwtl jl,pn sbb adc mov cld stos cltd inc xor sti push scas addr16 dec das test icebp xor push mov mov ret cld or lret data16 pop xchg push or shrb (bad) mov je mov xchg out fdivrp movsb dec in pop std pushf lret lds sub jge (bad) mov iret cs hlt mov stos outsb sbb les scas xor xor arpl ja jl out sub jecxz flds pop addr16 pop loopne mov push fimul rorl xor dec jno push insl dec out pushl dec loop aaa hlt xor mov loope popa insl add xor sbb xchg pushl jne fnsave pop sbb inc push add nop hlt je jnp pusha pop mov hlt mov add lcall xor into and cld add in imul repz xchg pop push bound popf pop inc jae stos lods fild cmp inc cmp lahf nop add push add test jmp fwait pop loopne (bad) mov aaa jbe or std push das adc sub loopne dec xchg mov mov mov sbb pop das dec je jg xor addr16 xor data16 jno xchg mov loopne pop xor xchg pop add cs add xor push cld push or cli and jns xor and testl dec lret push aaa jno addr16 fwait and les mov sbb popf adc jmp scas sbb push push xchg xchg sahf jecxz fcomp je mov lahf jae in movsl pop rolb (bad) divl scas (bad) mov ret adc mov mov sbb aam mov int hlt cmpsb sub in f2xm1 std outsl hlt jo rorb jno je call jb jo jns insb stos aas and jo add jns mov dec mov ljmp sbb scas mov pop push add mov lret jns cmp add scas cmp jmp xor dec int xor ljmp stc mov fimull addb mov mov adc push test mov test jecxz add cmpsl xchg xor outsl pop repnz outsb mov dec ss xor jmp aad jmp jno inc sub jmp mov pop xchg or inc dec xor mov jecxz iret mov sub xchg lds outsb insl cmpsb dec inc jno (bad) loopne pushf inc aaa sahf add scas sbb loope xor ja mov push pop dec add ret mov pop xor dec cmpsb adc xchg call je cmp push pop add sbb mov fdivs mov mov xlat inc jg push imul mov (bad) cmp test jmp icebp sub ss cmp inc shlb mov popa sub ds and jg push jge push ljmp adc or xchg push push adc lret pop jmp fucom arpl js mov loop sub mov or push push inc mov lds add jecxz push cli add and mov inc mov in cltd in pop adc adc adc jmp inc inc scas dec xor es outsb or dec cmpsb nop sub sbb or sub dec test pop mov ret loop sbb mov and pop arpl sbb loope add xchg das jb inc daa es sub push add xor or dec roll enter std das inc inc int3 fidivr pusha imul test or adc jne out fndisi(8087 sub aam inc jb xchg mov rcrb loopne xlat cld push imul ss and sub mov movsl ss ljmp jmp xchg mov mov xor xor sbb pop (bad) aam push jge lea mov cltd repz idivl and (bad) or orl mov add xchg mov seto imul or jne push adc sahf push add push test enter xor fwait pop (bad) sbb lds mov faddl fisubrl adc sbb inc sti call dec xor (bad) jne fisubl pop add xchg mov or (bad) jae jmp lahf push xchg push in adc sbb lahf dec daa xor test test push add and adc int sbb lds push jnp mov jp mov (bad) dec xor in sbb xchg push pop adc hlt sbb and mov sub pop in cmp xchg jb mov xor (bad) jae mov xchg (bad) sbb stos ficom jo clc repnz xor adc (bad) in cltd push (bad) push xchg popa data16 (bad) jp out dec add out xchg in xchg push stos push push mov xor mov pop dec add cmpsb imul stos jecxz jb jge imul sub add pop out xor xor cmp sbb sub test xor mov repz cwtl push add xor mov aad pop add mov les js aaa push push pop (bad) stc push xor xchg or xlat xor mov xor insl xor cmpsl mov imul (bad) js in mov (bad) ljmp push mov loope xchg add push jo xlat repz (bad) jne fnstenv ds cld mov cmp cltd jg daa lods fidiv andb cli xor imul dec sbb lods dec jl cs iret and leave scas mov fucom inc add cmp push dec and xor add xor mov mov cmp jecxz repz pop or inc cs push in xor jo hlt out mov inc in xchg test (bad) mov dec std xor sahf xorb stos inc xorl xchg sub dec jae mov adc iret pop ljmp jmp dec pop pop std lds hlt sbb mov aad clc xlat jae das cmp push xor or fcomp in mov jae (bad) (bad) mov sbb aam push call daa scas mov pop repnz add (bad) mov icebp mov faddl pushl (bad) hlt aam lods xchg fwait rcl sbb push pop ljmp jno sbbl jmp adc adc in divb rcrl jno pop mov cli mov add xchg push xchg movsl int (bad) repz add dec jae and in xlat repz add dec jle aaa call cmp insl mov adc jp inc jbe push push (bad) clc adc es rcpps or mov sbb test inc (bad) xacquire dec xor sahf rcrl sbb in add mov add mov adc lods std xor movsb fldl mov (bad) fmul int loope test hlt xor jle fldenv or insl push outsl sub psubq cltd or pop ffreep mov imul pop sub in xor addr16 mov or mov and hlt mov call stos lock sub xchg mov hlt add fdivl mov cmpl popf push cli mov loop push or xor sbb sub adc lock add xor ret jb hlt inc sarb outsb rcr mov mov pop stos (bad) mov adc fsubrl sbb std xor dec dec inc movsl mov daa arpl or jo sbb dec enter pop xor scas and (bad) je jae pusha cmpsb fildl test cmpsl or adc arpl mov and imul adc hlt sbb cli mov or jmp xchg lea (bad) rcrb xor adc repz repz addb aaa xor xchg inc mov std popa aaa push and scas cmpsb cmc cs inc add insb data16 add test gs jecxz inc push xchg cld cmp mov jb leave jns mov test push and mov pop repnz cmp adc call idivl or cld rcrl loope insb jae mov pop cmp pushf ss das pop lcall mov inc imul cmpl mov int3 mov imul sbb loope cmp fsubr repz lds mov mov in dec xor mov mov cmpsl ret inc cmpsb xor adc mov (bad) cmc push cmp les and jae and out xor cld fisubrl cmpsl rcll inc cmc jl cmc adc jno xor xor int repnz or ds mov cmp es jl pop cmp add xor (bad) imulb test jns cmp jae push idivl mov es int3 test inc sub mov mov in or repnz cli jno (bad) fnsave mov in repnz pusha addr16 xchg repnz xor push jmp xor lea in add sbb ucomiss sub push cld xchg mov movsl imul pop mov mov mov das fnsave jge loope pop cli daa shll mov pushf mov dec mov push gs or adc outsb jo jns pusha jns jb sbb lods sub gs sbb jmp cli movsb cmpsb aad push xchg mov fcomps xchg and mul mov and sbb icebp mov inc adc out lea lahf mov dec mov mov sub adc pop mov insb pop lret mov bound jl inc pop cmp xor (bad) scas mov ljmp jge sbb test add (bad) out push xor loope aad mov shrb nop les sahf adc or push cwtl (bad) push mov add xchg sbb fbstp sub sbb (bad) mov mov (bad) mov xor dec cmc sbb xchg inc je add mov repz xor and and and add jmp jbe arpl (bad) xor push lcall or ss dec addr16 sbb loopne adc jmp ja (bad) mov mov ret (bad) loope or push jno cmpb sbb pop jno sub mov imul pop inc inc sbb (bad) push mov push mov insl dec fdiv (bad) and inc adc mov jno cmpl push dec and xor sub xchg mov hlt mov stos xor test arpl int3 lea pop cld test imul scas (bad) outsb pop xor test push lahf pop (bad) je add popf push ljmp in mov xor cmpsb dec paddq and xlat or sbb or lods imul pushf xor pusha icebp jb jmp sbbl adc test pop dec sti in sub fwait mov sbb imul jp push loope ret or cmp cmp adc or andl xchg xor or int3 repnz cld data16 out int3 movsb clc aad hlt je push icebp enter adc scas ret and or mov enter inc daa pmaxub pop leave fsubs icebp jecxz (bad) bnd cmc lods dec xor adc das jnp jae aas push test xor out lret or xor in xchg roll dec push jnp push mov dec or aad jb pop mov cmc adc (bad) jp dec mov and std cmp stc sub popf and test int3 mov xchg andnps jmp cmp add or cmpsb dec (bad) jae fstl mov mov pop sub lods repnz mov xor and dec pop hlt loopne and outsl xor lods or push adc loopne sbb popa ror test push add mov fidiv pop sbb lret outsb sub out mov xchg dec psubw rol cmp adc and pop ljmp adc repz out adcl add xchg or mov fsubrp mov pop mov (bad) jl sbb mov inc clc icebp orb lds or cmp mov jb sub push push mov clc call sbb jp clc test or icebp mov and pop or mov fsubl cltd aad popa subl cli jb pop lret int mov jbe mov mov and dec repnz and fisubr pop scas jg xor in lock test xchg inc (bad) rorl aaa hlt jmp and imul jb andl inc sbb mov sbb or fcomps mov mov adc jne stc int3 mov ljmp mov inc pop gs and lret mov ja scas adc xor call mov adc xlat iret adc cli loop pop xor shld das es aas (bad) mov push mov inc push out sub sbb add xor push pop jbe cli aas sti mov imul test dec sub add dec leave dec xchg add push push and sub cwtl pop xor imul mov dec movsl aas xchg inc mov xor cltd (bad) xor and insl ss mov mov mov dec in xor push pop ret sti mov sbb stc inc mov mov inc cld iret mov pop lods xchg adc adc sahf inc push pop add test jns add adc loop out cmp (bad) mov test inc xchg (bad) mov das xlat xchg adc ret cmpsb pop jmp data16 cld ljmp inc hlt mov dec bound xor jecxz jmp xor dec add inc std xor into cltd xor test out shll push aaa ljmp pop and scas push outsb jb fs xchg jne test and or call cmpsb jge cmc movsl stos sbb or imul push jne cltd cmp xor dec std xor out pop push xor and add cltd clc gs subl lahf mov mov nop aaa and jbe cmp xor data16 cmp (bad) out pusha xor setl push xchg sub jge xor cmp out cmp lds sbb xlat xchg push sahf jnp clc push jge cmp cmc hlt xchg das ror repnz and or hlt push jne pop add mov sub pop stos lret enter addr16 cmp add sub into xor enter je adc cwtl pushf pop pop or mov cmp mov out xchg loopne in xor mov jle add xchg (bad) mov inc and pop imul ljmp xor lds add xlat rolb xor push mov lea aad mov xchg repz fsubrl lock ja ret in mov jno inc stos insl test gs ljmp xchg mov jb arpl push mov cmp repnz adc (bad) movsl fdivr je add les push push test xor xchg cmpsl dec push inc es pop or aas sbb pop add test push push loopne jno and push das push xchg scas sahf jmp add xchg inc xor in add pop clc or jle mov call hlt inc jo cmp pop idivb scas stc or insb xor pop push in pop insl pop adc push sub xor mov cmp push daa lcall or fistl enter hlt (bad) (bad) jmp mov and adc sbb ss pop pushf xchg in ret push adc pop push mov xchg mov daa cmp dec mov hlt rolb mov lock sub imul ret cltd dec hlt push push aaa or dec loop add dec mov sbb (bad) and pop xor jo mov stos push fwait sub adc mov cmpsb sbb adc sbb cmp push arpl xor sub ret lods in inc nop jl gs call mov rorb loop data16 adc xor (bad) rcrl and xchg jp add jae jg pop imul stos push add jmp sbb stc jge call and lods mov push xor push setnp test testb or jae pop lock cmp cmp stos dec inc jo in mov push repnz (bad) and push mov fisttp test mov cld out fucompp pop pop lahf int3 xor mov jb popl sub xor pop push ss xchg gs and mov lcall and xor xor subb int scas and int3 sub xor pop cmp (bad) xor push sti push mov outsl rorl pop xchg mov dec icebp mov xor jnp leave sub mov mov nop fs fwait pushf mov add mov rol cli shrb or mov stc push dec and mov repnz cmpsl inc (bad) xor scas fidivr add fst mov sub addr16 in inc jnp cmc push adc enter push mov lret xchg inc repnz mov je xor aaa inc hlt lods (bad) sbb ret movb mov popa iret hlt int shrl mov and push xor jbe push push sar mov decb inc icebp mov adcl sti repnz adc test sbb lods or aaa push adc stos addr16 loop xor and mov call enter and mov mov adc pop (bad) adc jge inc or add pop mov fnsave call xchg fisubr insl cmp push ja dec cltd xlat mov addr16 popa mov push dec sub xchg mov div (bad) jne sbb daa outsl sbb or es mov push sub mov lock (bad) aad xchg lods in or mov cmpl jp gs pusha cmp and aad sbb jg lret mov jp pop sbb mov mov xor pusha mov enter mov mov movsb inc push push pop jmp test (bad) out pop nop and xchg repz mov inc adc jle (bad) mov scas scas std or inc in ljmp xor rcll adc out adc xlat and push nop push or call lods (bad) xor aad add das in repz cli pop adc push pop fisubr sar sbb ror and xchg repnz test adc inc lock ss hlt movsl (bad) clc cmc dec mov loope xchg pop and cs inc cmp dec imul lret movsl sarl mov (bad) xor (bad) pop or mov xor jns jge hlt and xchg xchg outsl or sbb xor mov sub xor mov (bad) or into cli lret sub jb lods in xor jae punpcklwd sub js in cmovge pop mov xchg (bad) lea (bad) and sahf jo hlt std lea es xor mov xor dec mov movsl in insl shll leave repz pop (bad) jge adc inc mov aam sub mov and mov cli subb repz mov mov test sbb mov pop cmpsl xchg lods jmp mov hlt and adc push call shll or nop jmp (bad) insl add das cmp lahf stos cmp mov push sub cli loopne insl stos into pusha out sub cmc push xor mov xlat movsl cmpsl dec inc xor sub cmp adc js nop test or xor push adc dec xor dec mov jge mov push daa push scas popf push jbe mov mov cwtl pop xchg mov push into roll xchg cli xor xchg aaa fist and lds in mov ret or stos out mov xor lcall scas es addl call jo dec hlt sub add lret jne cmp push (bad) xor clc repnz adc sbb xchg or sbb test in xchg mov xchg xchg mov push xor mov adc int3 movsl dec pop dec pop cmp pushf jns push mov push je lock inc sub test scas adc inc inc popa push (bad) lret mov jnp push out jo pop lds movsl xor mov das jae xchg lock (bad) xor sti pop push xor jae ret (bad) jae mov out and or xor mov jno xor test pop stc int in jo dec add adc xor pmulhw inc sbb std jo cmp push shr rorl in shlb sub loopne loop out jae lret jo pop inc xchg stc frstor loope sub lods movsb pop xor inc es or xor push clc mov or cmpsl aad inc pop sbb jmp xor test xchg decl xchg imul add (bad) jno mov fsubs add pusha xor sub adc fcoms popa imul insl into xor mov add scas xor icebp xchg sbb hlt or sub je xchg adc mov mov mov je jl insl fmul sti (bad) out xor sub mov clc ja cmpsb dec sahf push add and nop adc xor (bad) std repnz xor call mov stos clc xor rcl pop ljmp lahf ret fs dec dec pop dec and ss pop xorl mov sti mov out adc or xor push test leave decb lret sarb ret (bad) xchg inc adc hlt jge out adc sbb (bad) jl int lret add repz pop adc je xlat mov dec je and lret (bad) cmpsb in or xor shrl sahf xchg in fisttpll inc gs cli xchg xor jo fwait pop loop jns and mull lret movsb and dec mov shll jae stc nop pop pop mov and push (bad) jae out (bad) cld pop push into stos cs imul shr mov popa loop outsl mov ret stos and and mov out mov inc imul mov mov gs je fwait out pop push pop std cld arpl xchg jge jno or loop or and aad pop (bad) sub jns sbb push out cmp cld test cld out sbb mov leave lea jmp inc jmp adc sub inc sub mov mov adc adc adc out sahf aas mov jmp iret ja adc xchg pop mov cs cld xchg cmp sbb repz xchg and outsb test dec push xor dec cmpsl pop fbstp ja (bad) mov adc stos scas and xchg push xor fisttp xlat xchg imul pushf xor xchg inc adc add fcoms mov scas out cmc cli mov nop cmp adc sbb sbb repnz (bad) push pop jnp add jmp cwtl je (bad) xchg fild sysexit cmp pop mov push fsts jle xor loope cli mov jbe out mov or aas out bound pop or sahf mov xor sub hlt lea add and xor mov stos add das aad ret mov dec adc repz mov decb mov mov sbb sbb mov sar cld cmpsl add and jb lock adc ja push test rolb rorb inc jb adc daa push pop cmp sub xor xor in lcall arpl adc mov dec enter mov movsb lret push jns jge test push adc pop jbe mov rorl cmp outsb les outsb xchg fmuls (bad) jb ss inc pop in add cmp fwait pop xchg jno cmpl addr16 nop dec js mov shrb mov or lock cmp dec std sbb stc cmp add cld cld sub adc or sbb cmp xchg push cltd jmp movsl sbb push lods xor ds push or jl add sub popa adc shlb les or pop pop inc loope sti movsl loope pop xor movsb inc sub inc xor and add xor sub enter jp cmp jo mov test xor or (bad) xor pop add cmc sub sarl mov jbe dec cs imul xor jno sbb xor fistpll inc and (bad) xor sti scas js or mov cmp xchg jmp pop nop push adc sbb out imul cs (bad) xor xor neg adc cmp loopne push push jge (bad) fmull xchg cmpsl gs sbb iret and adc jae add inc adc loop les je orl dec fsubs (bad) mov push push leave push mov (bad) mov hlt push mov ret push and inc cli jmp rcr shrb mov pop orl scas xor jne push std xor jl andl lcall insl pushf incb (bad) sti fsubrl test test (bad) repnz xchg sbb fucom mov inc cmpsl add pop fnstenv mov scas das cmp int rcr cli sbb aas inc jbe xor aad xor in inc (bad) xor rolb insb sbb jp out lds pop shlb xor aad fisubr outsb push rorb lods sub cmp hlt xor dec or loope push fwait mov ficom in xor jnp out push mov vmread lock repnz and jno dec (bad) jg test sbb je (bad) fidiv or mov out sbb lds mov inc inc cmp popa mov mov cli sbb aaa pushl lcall mov mov push insl or jp and cmp push cwtl scas push cmpsl (bad) dec ljmp hlt pop xor mov adc sbb cmp icebp adc xor lds cmpsb mov rorl ret or lods imul loop add push mov int aaa cmp jecxz fnstsw aaa xchg pusha sbb and cmp in (bad) lcall stos (bad) and clc mov mov mov popf sub add push inc add icebp jo jbe call mov dec xor cmp dec std pop inc xor fimul cli and sbb cmpsl in cmpsb jecxz out sti cmp imul movsl inc repnz hlt pop pop inc mov xor mov adc out xchg setg stos inc and sti xor xlat test xorl hlt xchg ret stc push (bad) and pop popf adc jnp inc mov daa loop,pn cmpsl fstl sahf xor das jnp xchg sbb adc lret inc inc push jge jno fcoml dec out sbb dec dec jne xchg add stos divb adc mov cs das loop mov sub add nop jmp imul jne mov cmp fcmovnbe lods adc sub add push test lea mov adc cli xor call pop xor loope ljmp cli in add (bad) mov out fldt pushf mull pop xor jo xor test std icebp popa popl push call leave arpl int out shrl fbld jg je dec cmp mov add enter and test test sti dec add xchg xchg jge xor call ds std scas mov xchg stc and xchg repnz cli jo aad pusha ja mov push pop enter flds movsb xchg mov movsl mov mov ficompl or cli int fistp mov mov in stc xchg pop dec or sbb (bad) xchg movsl ret xor cli cmp sub stc mov push je mov sub and stos or test inc pop pop test cmp sarb adc inc iret jge push cmp adc pop mov and sbb and cli fist mov dec (bad) or xor scas sbb popa in push cmp jbe jmp inc add add je sub add movsb jmp fstpl add cmp jo sub cmc iret xor stos xor sbb push push cmp mov pop xor mov or (bad) repz mov ret xor lcall cmp jmp ljmp add xchg scas popf cld push dec rolb sub arpl hlt daa out dec daa cltd outsb inc push adc mov movsb push pushf addr16 add or jo mov xchg lahf push cmp jle xlat idivb es scas adc mov mov mov cmp jmp jo cmp adc test pop cmpsl mov mull mov pop mov data16 leave enter jecxz gs xchg sbb repz jle cmpsb cs out xor mov in mov xchg jns jne gs outsl aam xor mov jg test push pop inc cld test stc mov hlt rclb adc mov xor jo push ljmp jp cli fwait xor inc popa pop hlt pop dec add lea mov mov pop jns add imul sub xchg xor out fisttp ja ret or dec insb sbb xchg pusha loope mov jns fldl imul ror (bad) mov (bad) jge add outsl xor fs pop mov stos mov and cmp cld and dec add mov push pushf pop jbe inc dec pop cmp mov ds pop jmp xchg aad rorl (bad) mov out test add or aam fildl xor clts xor lret les sahf inc mov cltd lcall sub hlt jmp fxch cltd cld sub pop movsb js hlt ss add add call ds add mov insl (bad) xorl xor mov adc xor (bad) adc sahf ret and test xorl mov jnp (bad) sbb imul push jo insl xor inc adc push jp xor ret add dec push cmpsb insl xchg lret jge pusha and mov movzbl xlat xor dec cmp das pop loope,pn pop add and push lret dec int3 adc jg xor mov aas das jae cmp in dec pop jl rorb stc std pop jne push test stos shrd inc rsqrtps enter mov test in in (bad) mov decl leave (bad) jbe sbb and or inc xchg icebp mov xor inc (bad) sub inc cli cmp clc inc je push adc adc mov xor (bad) mov xor adc or jb aam in jmp sub and push xlat sarb nop les dec sub cs sti lret mov push ror popa sbb imul push loop or sbb sbb icebp cmp cmpsb mov rcl sbb fcmovu sbb add aam push mov xlat lea sbb (bad) cmp rolb cld push mov sti pop and xor sub lds iret sub cli leave loopne cmp and (bad) jp xchg jge xor cltd and cmp lret dec scas mov cmp dec sbb sub lds push dec ret push js sub inc xor sti (bad) cli lret push add das lea in std scas cld repz jge push repz das sarl aaa ret jo push xor outsb in cmp out and inc clc push dec je cli aad sbb sub stc in and cs cmp scas (bad) repz xor hlt clc cld mov dec and xlat mov orb lods inc xor adc jno subb (bad) mov dec lcall and jb cli (bad) incb mov jo mov xchg bnd je out mov repnz cmp std adc cwtl pop mov repz mov in push mov sahf mov orl mov flds add jge fwait sti xchg lahf and sbb (bad) (bad) repz jb arpl mov inc (bad) ss mov stos mov lret stc or or icebp cmp iret dec and nop insl test mov jo shrl fstp mov arpl sub fsub mov outsl xchg add xor mov aad and jae sbb mov ds dec sub subb xor push cli dec out xlat pop xor mov sahf sbbl (bad) clc cld mov aas loopne (bad) rol jge fidivr jl mov stos cwtl sbb and (bad) imul in cltd ja lock xor data16 std push cld in jbe mov inc pop hlt or int jmp pop sbb adc push or negb out insl add data16 in nop imul test pop cmp aam inc stos xor ds ja jae cli outsl and pushf lds push fild mov out lock repz jnp jp bound jmp aaa inc data16 test xchg adc fcmovnu in sub inc add cwtl push lock add mov xchg ds lahf xor adc and jnp out push dec and pop rcll and imul adc sbb repz pop mov push out es (bad) lahf xor aad or popa xchg (bad) pop sub lahf jo jmp cmp shrb mov or stc push xor jno mov cmc movsl cmp int3 std hlt lods ss or jno or mov jle xor xchg incl or mov les and and inc pop sbb js je xchg mov mov cmpsl pop gs js jae scas jno cld sbb hlt push mov fwait cmp push stos aam push xchg sub ss dec add cmpsl popf and imul cmp dec sub and fsubrl or in pop loopne xor popa and sbb stc sub inc mov xor mov pop jecxz mov sub mov ljmp xor push mov popa in and and mov or mov rclb xlat fdivr stos mov cmp sbb xor push or pop jecxz inc mov rcrb jae mov movb xor adc dec mov roll out xor fstpl xchg movsb push pop inc add xor mov ljmp lret pusha adc xor xor sbb sub cs xlat fcmovb ljmp add aaa xor push enter in mov xor lcall adc dec mov repz divb aad xor sub pop xor scas sub mov int pop mov mov mov inc xor mov hlt add fldcw cli adc subl add out inc adc mov xorb jae and addr16 adc test lahf sbb out fidivr adc add stos in popa test incl sbb lock sub and ja jnp adc out push inc mov lret imul movsl and sbb jno push mov in es imul dec repnz enter in repz inc inc insl js imul ljmp push je ror and push test push xchg (bad) jecxz loopne cmpsb pop adc or jmp xchg dec lahf imul jg xor mov cli xor xchg mov int3 fisubrl mov push cli leave xchg cmp repz jle mov and adc jno cmpsb add cli addr16 mov sub in sbb adc and cmpsl push movsl mov sub call dec adc adc aas stos sbb inc pop jl or (bad) hlt fstpt std in sbb jecxz jbe mov pop movsb xor stos adc pushf mov mov mov mov jbe inc xchg xchg xchg sub mov dec and xor ds stos pusha xor mov xor (bad) ret mov cmp lahf aaa rcll xchg add movsb push adc aas cli jmp test std dec icebp xchg push sub clc jmp test sarb adc jp aam xor bnd (bad) cs or hlt (bad) into and iret xchg cmp mov test mov push push sbb jmp into xor xor sub sub mov cmp lahf sbb imul mov adc (bad) jno mov repnz and jb cmp dec and scas pop xor xor push in cmpsb lods adc aaa jns pop sbb xor pop sub jge adc push jnp mov inc mov add push pusha mov fadds fbstp add int3 sub add movsb or jne cmc mov sti mov (bad) mov rorb mov and mov adc mov dec xor (bad) dec pusha xor pop xor adc xor sbb jno mov (bad) out add data16 les dec (bad) shrb sub xchg inc ja outsl or cmc jo in dec out sti xorb popa sbb sub fsubrs dec xor mov test xor les mov jmp repz xchg mov sbb xchg inc call test orl xor stos (bad) mov mov push mov clc into jne js pop xor outsb push loop push dec sub sbb aad mov mov jle xor arpl popf dec add xor mov js xor daa arpl jb add popa mov pop mov adc je addr16 jmp inc hlt (bad) fcomip mov iret mov mov inc or lods es insb ds jp xor daa push pop scas xchg cmp icebp test adc mov xor test sbb jb dec sbb xor clc pop jno scas (bad) leave into stos pop ljmp stc pushf cmp xor or mov jle mov in xor xchg xor imul in xor stos out popf test (bad) cmp xor adc mov lods popa inc es ja xchg int3 cmp cld aad pop xor jns hlt mov jmp das add mov mov jns inc pop inc dec push ja push icebp ds in test sbb flds incb jnp xlat mov adc mov and adc movsl out ja cmp outsl add sti mov push jle push and push lods mov sbb fstl mov mov in fldt (bad) and inc push clc gs inc xchg stos xor das mov incb and pop and sub aaa nopl xor dec cs (bad) negb or dec cmp cli xlat daa mov sti jmp pop nop mov or mov loopne shrl inc push pop (bad) ja jns mov icebp cmpl test in push std fs addr16 (bad) cld mov rcl gs (bad) ss mov jmp push xor and jne dec sysenter push sti jne mov xchg sub movb xor jge js mov leave mov pushf (bad) std or jo jno insb sub mov xchg jae or mov pop xor push clc nop (bad) ja test sub outsl mov sbb mov xor (bad) int3 rcrb xor or adc or out (bad) push int add cmpsl mov arpl xor fcomps sbb xchg push adcb aad movsl cmp cmp fld insl adc mov xor fwait popa sbb xchg pushf jmp inc lea push adc je mov addb and lret add cmovnp call pop insb rcrb out cmp into ret repnz out fcoms inc andl push pop gs loopne scas das roll adc mov push xlat dec xor loopne jbe jle xor xchg jl xor ret out gs lea or movsl js xor cltd push stc lret and cld xor and jo mov xor insb pop push and mov repz adc jae push div xor xor shrl popa and addr16 mov addb xchg inc and adc mov add xchg inc adc xor jne xor sahf xor int imul icebp repnz das xchg xor push pop pop std (bad) and push add cmpsb (bad) std or fxch test xor (bad) repz hlt xor out mov (bad) xor shrb adc lahf push pop cltd cld xchg xor das mov add repz movsl add out xor out fildl cmp and cmp mov cli pop pop or repnz jnp shrb pop leave add scas repz jg adc xor cmp sub int dec dec xor mov aas inc sub mov pop into stc mov fwait insb push add stos cld popf or push pop add jno test adc subl je pushf (bad) ja add cli mov dec cmpsb or ja int3 xchg jb lea push or loope lret jmp xor sbb in popf ds jp hlt push xchg sbb or mov add jbe stos in cwtl push jle loopne lea xor mov mov jle shlb xor call push ss test (bad) adc cmpsl xor xchg fmull sbb xchg pop mov lahf xchg mov and mov push mov cmp xor jl jmp lea jge cwtl xor (bad) repz xchg sbb or outsb and xor icebp inc (bad) mov enter das ret mov bound add lret lret lahf fldl add mov cli push push decl aam das ret ret into jmp shl push and (bad) ss jne jo jns inc sahf pop sahf sbb adc inc mov stos add push (bad) insl add or pop xlat aaa cmp hlt daa add xor sbb mov ret (bad) sub jmp mov sbb dec test test mov mov sbb mov cmpsl mov sub mov mov add mov adc test stos xor leave mov xchg sub nop mov pop inc sbb stos inc sbb push xor jo push dec xor adc je,pt addr16 std bound mov pop jmp jno or fmul mov lods push pop xor adc xchg and popa and sub icebp jge mov push cli push dec or xor or bound push pop push xor inc push mov or and cs mov dec jge leave mov mov sbb sbb xchg and dec mov lock mov addl xor inc sub imul cld outsl cmpsb inc fdivr push and jnp ret sbb inc es fisub push call inc jp or xchg inc xlat int mov and xor sbb test xchg push xchg pop cltd push bound pop ljmp and and sti mov xor test mov int adc or jge jno cmpsl stos int mov cmpsw movl mov push xchg cmpl adc mov xchg sbb pusha mov adc scas adc adc inc sbb cmp dec outsl xor pop jae sarl dec shrb pushl xor cs dec sub inc aaa inc sbb cmp xchg dec lea addr16 mov dec inc enter sbb ds gs push xor mov pusha aas xor aad mov sub and push sti sti xor mov and xor or adc inc mov adc sbb arpl lcall cmpsb lods repnz iret mov inc pop inc js inc (bad) stc icebp subl in stos push sbb jle push hlt pop pop andl mov inc lods mov mov push enter scas fcmovnb fcom int3 mov sbb xor into mov rcll test dec (bad) add aad push xor xchg and xor popf (bad) lcall out mov lock repz dec gs xor fstp jg sbb (bad) imul sub nop leave jns jo mov gs jno in mov (bad) outsb jmp sti mov sbb hlt mov popa mov les pop push (bad) xor imul fidivrl clc test pop cs pop dec cld push mov dec jl in ss loope adc fdivr bnd sub in pusha (bad) push or mov stos cs arpl lds cld lods popa in add orb pushf adc mov push push das xchg lods repz sahf iret out mov repz and cmp dec xor mov xor cmp neg gs leave jo xor and mov lcall dec inc xor or xchg and daa cs xchg mov sub loope lahf pop mov bound xor adc or cmp push add push scas xor stos insl push scas fild aas push imul in lods xor nop icebp push mov push push and fbstp arpl dec sti mov mov scas cli jne call mov test (bad) mov dec roll imul imul mov add dec dec adc or dec mov add stc add repnz adc aas add jne and and imul popf out pop ret push xchg mov aad aaa mov fisttp adc push xor movlps sub bound push sbb xor das adc mov insl pop adc stos mov adc rorl in push rcrb and add cmp inc jge int in addr16 xor cli mov sub dec (bad) xlat push and stc adc and (bad) xor pop pop into push daa mov leave inc out push xchg cmp out jo incl (bad) shrl inc xchg or mov or push mov add nop call adc dec in loopne in (bad) mov enter fisubr dec pushf imul push jge pop push jns pushf dec lods mov loopne int push sarl jo push mov je movsl adc cmpsl dec daa sbb imul daa mov add sbb outsb and lods aad pop (bad) xchg push mov mov mov sub and mov hlt mov xor fistpl (bad) xor sub lret mov sub movsl outsb cld lret iret outsb ret cmpsb pushf xor mov jno push inc dec fdiv in mov clc sbb jns mov mov (bad) scas dec mov subl clc xor cwtl in (bad) cmp mov xor inc and xchg xchg mov test cmc fisttpll and fdivrl movsb xchg add mov outsb pop sbb std pop gs adc imul jns mov push add xchg stos pop fidivr xor fadds mov jne cmp mov jnp fimul jo and arpl (bad) test xor movsb out push mov jb jge dec xor in rorl cmc adc hlt sub mov mov lea dec shrl dec cmc sbb loop outsl xchg and ljmp adc repz lock jmp adc pop clc stos test ja pop xlat xchg cltd mov jnp xor andb cmpsl ret xchg cli lods sub fcomip scas (bad) jg adc out xchg inc xor sahf push (bad) hlt push sub fsubr xor test mov add cmp in xor jmp gs (bad) mov and fidiv add hlt imul sbb jno inc adc mov addr16 add imul and adc sub aaa in cld jno gs cld pop jae js cmc int3 imul xchg mov loop std lahf mov mov push add loope mov scas pop xor cli jb mov xlat std repnz cltd ss cmp xor int3 add repz sarb or and mov lods adc out popa and imul pop inc mov pop push mov or cmpsb scas mov xor mov xor scas leave dec or cmp push sub dec mov jmp dec jne jle xor or add jmp xchg out and xor cltd dec repz adc add mov push jmp xadd mov or jmp sbb cld sbb lahf pop fistp xor adc push in jp adc test dec add hlt or sbb repz add mov jnp jle lea cltd adc stc or and xchg mov fnsave bound icebp lret inc inc hlt cli repz dec lahf (bad) call pop mov ret xchg sbb stc pusha jge ja xor les out mov jl fild mov pop push mov (bad) cld movsl adc fnstenv push popf les xor mov jne aas movsl xorl rcl test pushf lds loope pop add inc push lods imul sbb sti or repnz imul test aad js and and in in rclb sti or xor cmp dec aaa mov push mov and fldt pop jno mov push arpl xchg and test or loop mov cmpsl nop jb pop mov (bad) push jl xor mov jmp inc adc xor mov int cltd data16 mov hlt mov mov repnz outsb sbb notb jnp inc scas jno (bad) popf leave adc pushf in dec sti je pop mov inc arpl fildl std xor stos cmp test aad pop jg xor pop pusha stc mov pop pop mov subl cmp mov fistl xchg (bad) flds xor cld mov (bad) adc and and fstps mov loopne (bad) mov mov ja and orl mov dec xor ret int add dec aam xchg sbb cmc cmp add in fdivrs add push repnz adc jbe mov add xor sarb xchg mov imul mov scas movsl sub mov push and je in subb pop sub xchg mov xlat cmp sub sarl scas pop cli lahf movsl xor jmp add xor dec and dec dec xlat nop sbb mov mov mov mov xor repz jmp cmp in das hlt xchg aaa dec inc cmp mov jle jmp mov push jno cli ret test and das jp sub jg iret nop scas fdivrp imul cli sbb enter cli mov jbe mov test dec jge test test subl cli sbb repz stc mov push aam sub pop bound loopne push cli (bad) pop inc pop sub sbb call add ds jmp hlt dec cmp in stos mov dec or adc mov jo mov xor and mov mov rolb cld pop jb daa jecxz cmpsl in mov cli and mov xor cld int3 imul arpl adc (bad) mov mov mov rclb or pop jecxz aas gs cmp add daa xchg gs cmp ja cmp and imul repnz pop outsb adc xor cmpsb movsl (bad) sbb scas sbb imul jae mov ficomp stc sbb adc xor stos icebp insl mov push inc je,pn or hlt cli (bad) imull inc xor movsb enter repnz pop lahf ljmp pusha sbb cli outsl lods lcall xor xlat lock cmp es sbb adc jno push xchg (bad) inc ja cli fsubl cmp aaa mov out pop sbb pop lahf xchg cld ss xchg loopne incl arpl pop jmp dec xchg xchg (bad) lock pusha hlt jnp pop and add xchg mov (bad) pop hlt add adc dec mov repnz dec xchg inc xor sub hlt pop xor (bad) xor xchg fwait jbe insl push sbb aam pop jmp push mov call jl pop int xchg xchg (bad) ja sbb addb adc lahf inc mov int stc aas clc leave fdivp mov xor out (bad) sbb jne shr ss aas std inc mov sarb (bad) mov sbb mov dec pop mov mov mov inc add addr16 push pop fdiv mov icebp (bad) push xor scas rcll into push (bad) push scas fcoms movsb add hlt cmp int push jnp pop imul pop aam fs clc pusha dec jmp in add sub je lods test das xor enter lea mov xchg pop (bad) and sarl cmpsl dec add xor inc mov and test adc pop cmp add movsl xlat sti mov mov inc jg aaa sahf xchg je mov mov jae aad fisttpl and add in in push iret jae or insl (bad) xor pop lods test xor nop or sbb call push or sub sbb repnz cli pop xor ljmp sub xor jno test mov scas fdivs daa jnp repz push mov pop fnstenv adc adc stc hlt cli mov jg repz fisttpll popa sub movsb movsl (bad) sbb les adc xor mov test aad movsl cmpsl ret jg ret cmp adc dec (bad) hlt rcl cmp pop or pusha fist mov and fisttpl add imul xor and sub mov cmp ss cmp xor pop sub xor arpl lock xor push clc mov daa jmp xor loope push cmp cld xchg in xor mov ds mov xchg adc mov mov fcmovb insl push (bad) xor daa xchg cmp mov add mov and mov or call loop scas scas mov addl cmpsb ret mov push inc and les hlt mov cmpb scas clc sub into orl je cmpsl cli xchg sbb sahf or and push lods sub rcrl mov mov inc mov arpl aas xchg push push inc mov aam sub xor rcrb aad shll xlat test mov cli jb and xor mulb lods adc mov je es mov push mov dec cmp outsl cmpsb mov mov les std or push cmp xor aam pop mov and stos hlt mov test fisub in roll add (bad) cmpsb outsb ret mov or xor xor add bound je xchg jle adc stos aam flds jge push pmuludq xchg inc add push (bad) adc pushf gs xor cmp lods xor (bad) add mov dec xor ja xor mov insb loop (bad) mov jo xchg push aas add pop mov cli scas clc repz notb xor push push xor stos pop test push inc clc gs test mov sbb mulb push push out mov je inc lahf stc xchg hlt mov adc loop scas aam js,pt jle insb jecxz xchg imul into notl aaa inc jp loopne nop call stos outsl iret add stc test pop xor push push sub sti pop xor rcll mov and mov sbb mov mov pop imul addr16 xor (bad) cmc bound xor cld (bad) jnp test not xor adc (bad) xor mov ret sub add stos out mov adc push daa xor and scas aas xor jbe es cld jg xor mov ss bound aas xor lods push repz lret mov insl test mov pop adc jno in ret cmp stc lcall loopne jl es or push pop inc pop add inc iret enter jns inc xor scas add mov mov cld jo fnsave dec jnp jle (bad) mov jl fsubrs std sbb and test enter call pop adc adc (bad) add mov mov mov xor xor add mulb jns fidivr outsb cmp sbb push les das mov dec push jae and sub aad adc repnz sbb in fcompl pushf insl lret and iret and aaa mov push repnz push divb mov jno mov cmp movsl push ss mov aad mov inc mov cmp out sbb bound xor addl test adc adc and xlat std jns mov mov fcoms pop xchg cli push inc push add jns pusha adc xchg aaa dec or loope and mov lahf mov (bad) rcrb in adcl out scas je sbb repnz rclb lret xchg gs js adc jl mov add cmpsl or push push addr16 mov inc mov and sbb cwtl inc or push sub dec loopne push (bad) adc cmc or leave pop push les sbb cmc shrb dec and popa xchg xchg adc cmp dec sub fimull sub in xor and cli sub mov or xor adc pop mov adc arpl mov and sbb pushl jb addr16 sahf dec mov outsl push ja andl mov jl clc xor es xor ret xor ljmp int3 stos popf arpl hlt sbb stos xor in pop (bad) leave test out ret xor mov dec repnz addr16 jae mov ss adc (bad) adc xchg cmp mov popa ja aad arpl dec repnz mov jae pop testb cli mov mov push sti push jmp je movl fwait dec push out jb movsb (bad) hlt push cmp jo dec test sub xor mov mov (bad) jmp sahf mov int3 test mov scas adc hlt ja rclb ds cli sub imul repz xchg sub cmp mov cmc pop cmp stos sar and popa inc outsb or xlat in xor push int pushl cmp xchg or cmp mov and mov int gs aam jbe sahf mov aam pop add stos xchg and lea rcl mov cltd fcoms hlt or sbb sub sbb pop cld push add pop sub xchg jae jg aas das mov add ja xor (bad) ss inc ret jae mov mov adc sub or adc sbb jnp daa (bad) js pop or popa sub cld sub add or xor xchg and mov in loop or stc fidiv mov rcll int3 vandnps mov or cli stos addr16 test pop push repz xchg repnz into mov mov out lds cmovl into imul xor sub jge pop sub ljmp push cs orb mov into aaa sbb xchg insb push incl push in ja xor popa fsubl mov xor imul xor (bad) je add push loopne pushf dec and aaa xor sub hlt inc sub or mov xor inc dec adc cld and rcrb xchg or ds mulb in xchg cld pop push stc icebp cwtl dec or arpl sub imul add pop jb ja mov scas (bad) stc imul in in loop sbb and iret jae mov xor mov (bad) fsubr pushf sbb (bad) sub daa mov repnz dec sbb add std xor scas rolb dec mov stc mulb loop mov push xchg (bad) xor (bad) repnz aaa insl dec adc adc push (bad) repz add xor lcall lock das sarl movsl mov frstor mov in mov ret push out sbb cmp fnstcw pop add xor cld dec mov je ds stos outsb (bad) xor out imul insb xor lcall cmp imul mov inc scas xor aam std pushf jae fs ss fstl and (bad) mov pop xor ret repnz ret mov sbb mov cmp je sbb xchg jge into jno jb push adc cmpl jno rorl and push jle js fistpll fcomip ljmp aad test sub mov fsubr sbb addr16 inc lds mov xor xsaves dec cmp push inc xor shl adc insb stos and ljmp repz mov push mov bnd mov and jl jne popf ds jns call inc je insb mov inc repz movsl lret jle push dec sub dec xchg or xchg (bad) out push cmpsl and adc cmp pop jnp call repz enter dec dec icebp pushf sbb xchg xchg jle ja mov fwait iret (bad) jae sub jle pop push nop mov out adc movsb repnz lahf sbb inc mov push add lret lods ds mov adc sbb movsl imul push cmp adc jae test add jno and arpl insl push jecxz cmp shrl jmp push jnp cwtl push mov js xor jno out cli in shrb xor lcall mov mov jno or lock push and add cmp out and sub sbb and cli jno rolb or test test cmp add sbb mov mov cmpb mov ja lret cmp xchg add mov das fcomp aaa xchg inc hlt push mov adc cwtl addr16 ret cld loopne in jno push hlt lods shrb (bad) bound xor jns jmp xchg and adc push cmp jecxz (bad) jmp cmp popf and push cs (bad) mov rep sub jno add xor arpl popa aam bound imul dec jmp int3 jo add or sbb cld xor outsb fs xor loope mov ljmp clc jmp repz fiadd lock hlt add pop ja mov insl pushf dec xor insb pop xchg xor and adc je lock jae xor fidivr inc add lcall push pop mov jp loope mov cmpsl rol push add jae into (bad) jo xchg sbb xor ja pop pop jl xor rol cwtl lahf sub scas and xor pop mov (bad) mov jmp mov cmc (bad) icebp mov jb dec xchg sbb sub ret mov jl pop jmp (bad) enter clc dec outsl dec jle or adc movsl js cmp xchg ds or add mov cltd enter ret pop mov repnz xchg hlt dec out push dec clc pop lds add call es dec pop pop or cmc dec xor aas gs and syscall rclb std fiadd push xor push mov xor das mov cmp xor mov xor lahf gs push add add xor sub cmp mov cmp insl nop push pop in les bound pop sahf dec ljmp or lock pop repnz xor mov in xor rcl repnz add xchg xor fdivs flds fwait cmp sbb loopne push xor cmp pushf and push sbb sbb jmp nop sarb sahf jbe pop mov mov cli addb (bad) (bad) xor pusha sahf or xchg popf cwtl jecxz cmp add iret fdivrl sbb dec and pop fcmovnu (bad) adc adc jg data16 inc cmp mov dec mov test inc stc inc cmp test sbb jo inc std jle pop xor pusha sub out xorl dec adc xor jbe xchg inc and pusha dec sub (bad) mov xor push scas cmp inc in xchg enter push aas popa and hlt jle and popf add add loope popa mov add cld outsl arpl and add repz movsl push pushf or and pop enter xchg jge mov mov pop xor or jne insl sbb imul mov or stos int3 shr xor adc sbb inc or mov sti or jo xor cmp xor push sbb lods insl (bad) leave mov loopne add insl es xchg push hlt xor roll xor lret jle jno add ds add or loop stos sub les and xor inc cli (bad) mov jne out push mov (bad) sub jge pop pushl insb push js dec cmp (bad) repz aam test test xor aaa hlt mov adc add jbe les pop xchg xor aam lods sub add xor jo mov lret ja sub addl dec mov xor cltd pop mov jne dec and pop popa add scas es sub cmp lret mov popf push jo loopne and ret imul je nop dec enter dec pop xor add xor mov int imul stc dec add popa jb (bad) xor push popf mov sub or xor lret xor repnz jbe and and inc or add scas jns jb out cmc sbb test or (bad) movsl sub dec pop pop mov sbb add pop xor add pop xor into pop insb imul daa (bad) xor add fs mov and test das insb aas xor jl popf xor jnp in xchg mov push test mov loope jmp iret jmp jnp out xchg je leave cmpsl outsb jne push js and int inc aas loope jae sti es push cli nop (bad) hlt jecxz cmp xorl gs or sbb bound dec rcrl cmc repz dec cmpsb ds sbb jnp rorb mov sbb cli jbe insl add lahf mov (bad) int notb cmp dec out mov adc dec into adcb mov add sbb cli loope mov sub xor in jno push or nop lea sar outsb sbb (bad) jmp nop ret mov lcall dec adc dec out xor jb push adc sub add sub sbb (bad) lds mov dec sbb xchg lret (bad) repz jns push xor mov and mov xor push mov sbb les movsb push out add xchg es add mov inc fildl ret inc sub mulb mov sub jge sbb ss insl sti sbb and cld das pop jge std out (bad) and lods inc mov shl adc sub sbb sti lret mov pop lret mov cli push lea cmovp and or jno mov push xchg dec add xor push cmp hlt push push insb inc sbb in sub mov cli mov lea testl xchg add repnz lcall cmp sub int cli andl mov and cmp and out push pusha mov and mov pop add push cli pop bound aam ret sbb ror pop jae (bad) ljmp sub add outsl jne pushf aas or addr16 add sahf adc js mov fbstp ja mov das mov xor sahf ret mov xor rcr sbb push xor loopne mov jmp xlat aad js xchg ja or mov andl shlb scas xor or loopne test cmp add jae jge cltd pop push xor lods add pop add clc and sub xor sbb dec (bad) mov push xchg rolb add je addr16 outsl pop int xor imul adc enter ret icebp mov mov adc xor das fwait pop mov sub (bad) jnp xchg sub mov hlt inc mov repz xor cmp jns (bad) lret jnp inc test popa aas add jge sbb fdivrl in cwtl inc fistpl push adc (bad) cli mov mov xchg inc (bad) xor lds gs shlb sbb test aam or xor pop dec movsb pop cwtl push xor xchg cmc int3 mov test mov hlt aad (bad) lock das addl mulb adc fiaddl adcl sbb scas sbb mov cmp pop adc mov add in (bad) xor push adc xor add or jno sbb sub mov pop insb fisttp push (bad) xor cwtl ret repz cmp push sti cmp mov xor pop adc adc push mov inc dec loopne jb push pop push or mov out aas inc lods sbb test js je je or shr xor and and jmp out xchg inc push inc clc mov mov fsubrs les and xor fwait lahf xchg iret repz test or (bad) lock xchg dec out mov inc arpl xor cs je outsb pop lsl or pop pop xchg ljmp icebp repz outsl add mov mov xchg xor aaa fwait sub xchg repnz sub stos aam mov test mov fadd imul scas dec xor imul xor push mov xor (bad) mov daa ficompl test in cli dec jecxz aas int sbb lcall and xchg xor pop push lcall mov push dec xor xor ds xor repz int sub mov jae mov fisubr adc xlat arpl pop inc (bad) dec inc add push je xchg push dec loopne shl sbb adc pop jno and fcoms negl data16 out jg add scas push sub adc add mov rcll cmp pop xor in fcmovbe jg je sbb pop and and cmpsb je inc ds imul in mov sbb xor cmpsb pop getsec and leave sbb cmpsl imulb cwtl jns pop je or test xor repz ret loopne xor lock das xchg push and xlat imul xor out jecxz jno popa xchg sub in cmp dec or pop leave xor mov movsb push jae jbe xchg (bad) add mov frstor dec cli push jno test (bad) adc mov cmp mov fbstp push push sti dec xor mov xchg sub ljmp push push push inc jmp popa jg hlt dec pop sbb movl cmp les stc xor jmp fidivl jle js add aad push push or sbb xor push inc out jp call lret insb ds clc or dec inc push pop xchg dec jne cmp jp jle in pop (bad) ds and xorl jmp xor adc push push mov out cld lret ret inc mov pop and int jne aam ja cmp insl or sbb xor push (bad) xor repnz mov sarl add xor lret stc jg sahf in sbb imulb mov ds and hlt xor xchg xchg xor rclb sbb and adc cltd mov ss test fist mov mov or aaa imull xlat daa int3 hlt jbe das xchg jne scas push aaa or dec pop xor leave jl jns xor push call inc rcll xlat mov dec dec or jge adc or mov pop pop inc je push xchg nop mov jae inc (bad) repnz and rol xor add rorb push scas daa nop bound popf push data16 jnp fnop add mov cld xchg push jl adc or outsb push jge stos push pushf dec (bad) sarl xor hlt sahf scas or mov xchg loop in ss rcrl jle adc inc je and insb jnp imul xchg sub xor push ret hlt jnp in ss pop pop push popf dec push cmp xchg out sbb mov push mov jnp mov lds in fdiv hlt or push pusha adc cmp xor push je mov lret sti sbb bnd jmp das iret sub scas aad mov cmp mov aam (bad) je fwait xchg pop inc pop adc hlt add mov sub stos cld or (bad) jb dec cmp (bad) or or sbb add ljmp xor and mov pop lea mov adc adc (bad) xor or movsl test jecxz jne icebp mov push pop jl adc dec movsb insl cmp or xor stos push and and aam sub and pop add les pandn xchg xor pop mov xor gs (bad) jno xchg cs (bad) sbb ljmp hlt in cmpsb add and notb xor mov js pop popf and jno cmc mov fistpl pop hlt xchg cmp xchg insb sub cmpsb jbe xchg xor mov (bad) jmp mov and lods cmp iret and adc punpckhwd je inc gs inc add nop jb jmp inc inc sub xor (bad) adc mov jnp jle jle lret imul jmp pop cmp insl loop cmp adc ss mov push call sub push push scas bound std xchg xor sub int xor loopne xor sbb cltd inc xor stos (bad) mov and imul loop int3 mov sbb cmc xor (bad) ljmp mov mov outsb aam sahf push pop adc add mov adc fwait aas outsb add xchg push add hlt in aam (bad) mov add lods cwtl sbb fwait repz xor test sbb xchg dec push add dec jno add insb out ds pop lods and mov mov lahf jo test cwtl aam cwtl stos shl dec inc das cmp inc sub out stc mov adc insb mov imul aam sbb scas jle mov popa xor dec shll push pop lea jae add adc mov repnz push loopne test pause dec repz into (bad) mov jmp or (bad) repnz pop or mov adc xor sbb xlat jg mov mov test xor xchg test or (bad) xor xchg push push push loopne lret adc adc mov jo imul dec addr16 mov enter les push jl mov adc jmp je push and sub mov push adc int cmp xchg mov repnz bound push mov mov adc and cwtl les or fucomip adc dec inc push in mov clc hlt xor push dec inc dec xor clc outsl jle pop or mov fs jb gs push dec xor insb sti ds pop mov repnz add cmp and lds jae cmpsb or jmp aas loopne rcl pop enter jae or mov outsl adc xor loopne stos ficoml push adc jge popf sbb popa shrl xor fisttpl inc mov mov push dec sbb clc iret daa leave jb sahf inc and cmp fdivrs push insb (bad) roll xor add sbb xor jne aad repz or adcl add dec aad lret scas or cltd mov sub std (bad) xor cmp decl popf sub inc sub int3 in mov jmp lods jb out and mov in jne mov or repnz pop mov cmpsb mov cmpsl (bad) lret adc xor mov lods push (bad) (bad) or addr16 and out mov inc and mov sub jge les enter repz dec push test xchg push imul stos (bad) sbb test pop cltd jae jl and stos or arpl pushf adc cltd enter int3 jge cmpsl fidivrl ds sbb and aas jg cmp (bad) bound sbb (bad) lds imul mov sub imulb push daa sub xor out cmpsl ss (bad) fucomp sbb adc adc std push hlt sti arpl bound pushf dec or add insb xor lahf and mull inc movsl jae jno test repz cs jne jne cld out ljmp (bad) jo xor out jnp inc mov insb jecxz imul stos test cmpsb pop pop push push arpl repz sub push stc dec pop popa mov leave fs dec sub cld sbb mov es daa pop les sub scas sbb xor or ret jns cmp adc pop hlt movsl sbb xchg and xor pop outsl push add push pop sub jp je cld mov clc dec add das pop jb ljmp cli inc xor cltd lock xlat mov scas popf add fist ja add mov cld or mov jb push sbb jmp hlt pop (bad) faddp pop xchg and sbb xor jle push aaa xor lcall sbb add stc jno sub inc das jg fdivrl xor in push (bad) pop fnsave push cmp movsb js jne inc push movsb adc mov dec ss and popf (bad) hlt xor fsubrl jle pop push cmp and mov inc push mov test sub repnz mov ljmp jge jecxz xor xor dec cmp push adc cmpsb mov mov xor cmp sbb mov add push (bad) rorb icebp jg xor adc jmp push pushf aam jle jg pop jl xor mov in ret (bad) cwtl lea packuswb mov lods xor mov xlat mov xchg xor dec mov ret xlat imul mov sub jg jb js add fsubrl mov stos outsl sub push dec mov xchg das mov adc imul cld push es js and std jae stos (bad) cld dec xor test scas and jae addr16 xchg ror out xor adc or jl or jae and into mov fcompl push mov iret jae stos xor jp mov xor pushl mov imul inc xor or jns mov (bad) in aad adc clc mov jnp (bad) mov test (bad) and fist jae js jge rcrb lcall icebp sahf cmc lret mov pop addb cmc sbb sub mov adc loopne adc cli cmp inc data16 adc int (bad) and add jmp std xor mov jo jns leave dec xchg scas out jns cli and or cld insb data16 movsl or dec jae shrl (bad) sbb repz xor (bad) cli sti add mov mov shl pushf push adc mov cmp adc pop lcall jp insl subl in hlt scas aaa inc pop sub xchg xor sub add movb xor es add push xchg and cmpsb insb data16 xchg sbb fistpl add dec cli lods jle xor out mov (bad) stos sub xchg mov loopne jmp add jp jb cli mov daa inc jmp xor jle dec popf dec and xchg xchg subl lods push mov sahf cmp xor add divl insl pop insb dec sub cmp push clc sbb ss das mov add add xchg push xor lods in jmp scas bound or xor cmp or out aad inc mov hlt adc mov pushf xor inc std in insl repnz sub xchg add stc sbb lock push and repz add dec add dec icebp xor jl in jb (bad) movsl sub cmc add and jmp sub sub repz inc clc and iret or jecxz sar dec xor pop add push repz pop mov cmp fwait cmpsb xor aas dec add imul test xor mov sub jmp mov inc xor (bad) out xor mov cmp mov sub hlt mov push shrb in shl sbb hlt sbb bound enter outsl mov lea jl je or lahf repnz inc dec repz cmc in das stos test add fcomps push adc ss mov jg pusha cmp xchg aam cli pushf outsb outsb int test and and mov mov add cli dec and je in adc sbbb sub sub das imul pop xor negb sbb loope cmpsb and (bad) jecxz dec or out lods std je cmp xchg push cs outsl cmpsb and jmp cmp movsb mov mov xchg and adc cs mov cmp xchg outsb jle mov mov fidivr adc inc and loopne lods daa je push adc adc mov push (bad) mov xor cmp jns and std mov rorl and mov mov and xchg xlat mov leave cld sub mov aam gs idivb fimul mov mov in push mov push push adc sbb xor xorl adc xor repnz adc adc fidivl cmp ss xchg sbb jge adc push jle mov (bad) fwait repz mov int3 je test adcl es pop nop dec xor in xor (bad) rcrl js es ret (bad) dec pop in pop (bad) xor or ds sar pop pop or mov sbb popa inc pop dec jno sbb xorl jo mov jp das stc pop or sub and jbe es test jbe push push mov fistpl jno sbb ret sub push inc add xor xor pop testb cmp jb aaa out fist adc dec insb jno pop dec xor add movsb les jp jge xor push xor cmc daa push fs je sub imul lods and and mov movsb xor insl pushf adc je outsb push inc cmp xor loop mov (bad) push lahf in mov (bad) sbb adc xlat ret or sbb cld xchg mov jae aam xchg xlat adc les jno insb data16 dec mov cwtl mov push mov pop push adc cmovl xor push mov stos test cmp aam daa adc sbb data16 lret scas mov and lds mov jns mov mov jp insl loope inc mov sub cmpsb les out (bad) xor xchg mov ss std jb (bad) xor dec cli aas das sub dec lea pop cs popa outsb mov add or xor push add jge xor in lret imul es leave (bad) aad fwait pop test ss sub push (bad) ss cmc jl sbb pusha sub pop cli mov out xor mov xchg (bad) cwtl or adc xlat gs inc jle inc gs test mov xorl mov int mov pop (bad) jmp pop psllw mov ds insl cmp loope and dec ss mov and sbb mov leave daa shrl js xor imul test int jl mov mov xchg addr16 mov mov mov sub (bad) lret pop jg xor dec jl cmp pop cli adc xchg stc int3 or lea les push push (bad) sub jo pushf outsb adc jae std leave rorb xchg inc (bad) cli xor mov xchg lock xor pop test loopne cli call cmp cmp cmpb ss incb ret fst sti daa loop (bad) cwtl ja fcomip jb or iretw mov je mov xor jg sbb outsl and sarb mov xchg sub add mov cld leave inc cmp pop repnz int cltd pop stos mov jmp mov divb pop leave inc test stc xchg (bad) in or repz mov push (bad) sahf ja mov fdivrs cli mov pop (bad) stmxcsr add mov cmp repnz cli dec arpl js clc xor faddl rolb lds imul stos sti dec and rcll adc cli sub into icebp sbb add mov jno adc sub scas mov rcrl aad (bad) ret (bad) xor adc dec jno cwtl inc push and sahf lret jmp adc xchg pusha movsb (bad) les std jmp mov mov daa shrl inc (bad) pop (bad) out and pop pop sub or xor xchg fdivrl ljmp mov fisubrl mov js loopne xchg (bad) mov mov jl aad xchg adc aaa shrb fstl jmp sbb add gs jae xor nop xor ljmp enter pop xchg xlat xchg xor adc inc outsl cmpsl and mov roll xor sub test nop xlat pusha cmp sub imul push jae sbb orl dec dec add xor and stc mov mov test inc in jne mov subl rcrl stc or (bad) xor cmp xor fild sbb add pop adc xor cltd sbbl popa xchg add mov or sbb pop add movsl outsb mov sbb dec jno mov mov lock xor in aam pop xor fs and ficom ds cmp mov mov cmpsl or mov xchg sarl and into (bad) fs fmull mov hlt cmpl dec stos xlat sahf xor pop add into xor ds sahf cld popf dec cwtl bound fcom bound xor or (bad) mov inc pushf sbb es out cmp push add jns or sbb enter in mov cmp clc and cmp rcrl aam mov mov or inc popa sbb mov inc jbe xor add test inc xchg frstor xchg xor add fiaddl fidiv xor inc adc fbld lahf test pop sti out dec jae dec jp cmp cmc sahf push out rclb pushf cmp adc rorl lahf mull mov lret jg or call cmp into adc sbb jae lea jns sti cmpsw dec jne adc sbb xchg dec adc movsl aaa hlt movsb xchg lea popf push mov inc repz mov stc data16 mov sbb mov push (bad) xor inc outsl and xlat (bad) xchg leave aas dec add xor outsl xor pop xor mov rep xor inc leave nop aaa jno and adc pop add outsb dec xor push push xor jnp jg mov (bad) mov cld bound cs sub jns push jecxz mov push push aaa mov addr16 outsl rcrb aad rorb inc clc std dec mov or adc mov sbb imul in push xor scas xor fstl push adc stc push cmp imul pop inc pop add imul and xor sbb repz cmp adc sbb jge int3 sbb fdiv shl scas xchg jmp mov aam aaa jnp push lock lcall clc pop mov imul xor (bad) and cli mov sbbl (bad) (bad) into xchg testb push inc dec add sbb test mov jmp mov fwait push xor aam mov and sbb shll jno (bad) into imul jae xor sub idivl cld (bad) int std mov aam nop xchg cmc scas cli push lds add and push inc decb sbb mov das mov dec cltd rorb xchg je dec pop push jae sub dec clc xlat push popa inc gs pop xor fs push dec jne (bad) lret add mov leave lea (bad) mov mov push nop mov dec mov cmpsl ret adc fld xchg paddsb and jmp xchg cmp mov ror lea sub mov ja jmp dec jae mov jne mov xchg in shl fidiv mov mov loopne bound cmp loopne jae (bad) scas out mov imulb jo or cs imul mov nop xor dec mov rcll (bad) pop mov test jnp sub dec fdivr cmp or push mov stos adc mov stos sbb incl push daa fs push int push mov and test xor lcall (bad) imul fiadd jle push cltd pop cmp mov sbb pop mov dec xchg inc xor push add hlt xchg ficompl mov xchg inc mov clc scas cli popf mov push mov jo popa and bound mov add sarl (bad) xor sub fwait cmpsb (bad) cli les sbb push and xor mov jbe stc inc imul cmp push jb mov das sbb mov movb cmp into jmp mov fistp dec xor xor pop (bad) sbb inc xor inc pushf push xor sub ja jge bnd addr16 insl jnp add adc (bad) jl icebp adc movsb mov sub jae adc (bad) jmp repnz loopne sbb daa (bad) fs mov jo fstps xchg (bad) xchg sbb ror dec sub loope je push push inc nop imul jno xor push cmpsl out sbb test dec and fs cmpsb sub dec mov xchg stc sahf sbb mov mov push xor repnz leave add add pop mov cmpsb mov xor out pop xor das push xchg xor mov push insl adc (bad) outsb and aam and icebp and xor jg in xor pop pop pop xchg stc mov jnp xor int3 add pop xor jne jp mov data16 sahf xor aam dec je popa jnp mov mov (bad) (bad) add mov push inc dec aas sbb pop in loop push xor push mov roll mov jno dec push or (bad) sub sbb or or and mov cmp sub addr16 (bad) sbb insb sbb (bad) pop nop ja jno loope ficomp sti xor push and lahf cmpsl ss movl sbb es or and out aas pop fsubs jns xor test mov (bad) cli push fsubl sbb cmp jae popf ja cmpsl mov add or das je sbbl lods out sub mov pop enter aam addr16 repz cmp aaa mov mov (bad) je push outsl ds or test dec xor adc dec jecxz clc xchg lret xor inc cli mov lret or xor xorl adc and xor aad sbb and repnz sbb push xor nop fs mov or mov in or psrld mov xchg pop pop fdivs xchg push addr16 cmpsl les enter push (bad) repnz lods mov mov mov xlat imul jns pop insl pop mov hlt arpl and lea fwait dec sub jae fistl pop sbb mov es inc cmp xor lahf data16 xor inc and ret or jp in xor inc cli jnp xor sub hlt xor (bad) mov outsb or arpl lds cmpsb adc adc xchg (bad) lret out xor and sbb mov xor lcall in jge mov cmp cmp add jne loopne fwait push xor mov xor sub xchg add mov hlt imul mov clc rcrl xchg mov hlt sub js mov xchg pop mov mov sahf ss fcomi xor imul aaa add xlat clc mov fildl stc xor cs add or mov lds (bad) imul sbb mov xor loop cmovnp jmp out es cmp xchg test xchg xor lods xchg sbb ss imul into stos sub xor stos mov push inc pusha leave and addr16 mul push bnd xor add imul je xor xor adc mov dec movsl add push nop xor lcall and sbb xor mov mov inc je mov and add out pushf pop fcoml das rcrl and push add pop xor add lret sub es imul std push jge icebp ja xlat mov outsb adc fdivl sbb fs jo repnz inc shrb or mov mov fiaddl dec stc xor out loope clc cmc test les clc lock sbb and inc jmp or insb (bad) sub inc push cmp add je and mov jae mov mov pusha adc push hlt cmp test pop adc (bad) lahf mov stc inc mov adc xrelease fwait outsb out sahf xor ljmp adc xor sub (bad) test aam (bad) int3 popf scas xor out mov daa adc repz jle mov lea add mov mov call and in jecxz xor (bad) inc lods movsl scas xchg and clc stos or push xor jp jae xor scas rolb mov cmp jle xor test mov xor adc (bad) hlt (bad) push mov sarb fmuls jmp (bad) xor lds (bad) in (bad) lret jo push jge cli push xor and jmp (bad) stos incl adc sbb test add xchg push data16 xor test push cld jno call ss xor xchg or pop loop or pop mov xchg pop sub sbb stc xor outsb sub jnp fistp insb sub xchg aam pop fdivl daa cmpsl cwtl out or xor cltd inc jae adc pushf (bad) xor addr16 hlt aam or test xchg scas cmp bsr in pop leave xor sub mov pop repnz adc xor pushf jmp aas add cltd mov and push aaa das xchg push mov in bound lods xor repnz push xor pop movb pop shrl cmp mov test mov mov and push or lods rcrl mov hlt or ret cmc pop (bad) xlat jae fmull push enter jne sbb je or xchg dec test dec xor fsubrs cs stos mov cltd clc mov dec jge cld loop sarb imul xchg inc or mov dec clc push add das dec xor inc inc ja mov xor add fiadd sti das lods sbb ss cmc dec ret mov xchg cmp popa je ds ret xor ret xor into sub cld clc lods inc lret or push test add lahf inc add mov cwtl cmpsb (bad) or xor push xchg mov xor out cmc sahf xor cmp adc xor dec repz jae movsb sub aaa out and test sbb sbb xor push cli fildll inc xlat jne add arpl xchg jp fbld fdivs stc (bad) (bad) jb inc cmpsl loope dec sbb pop push sbb cmpsb ret xor fdivl pop sti xor movsb int3 jno imul xor mov sub jnp ds xlat mov dec xor sti add flds or aam pushf in out xor mov xor and lret out std xchg xor into pop je les jg cli and or mov outsb ret fisubr push push xchg inc cltd stc cwtl mov fsubr xor jp cli movsb jl sbb xor js fisttpll aaa jae mov rcrb pop call cwtl inc mov sbb push mov mov inc mov adc lret sub fimull jmp jne arpl popa and iret sbb push js mov cmp sahf movsl repnz jo xor cmpsb mov cmc ficompl outsl cmp inc xor les jg mov dec arpl pop add cld addb xor mov xor xchg sub fsubs inc clc xchg xor ljmp pop xor cs xor add out adc add xor push ljmp imul jmp mov dec mov outsb push add xor mov movsb aas lahf in not mull jp and out pushf in cli push (bad) aam popf fbstp ja (bad) cmp dec push cmp jne lds gs call sub shlb push pop (bad) aaa sbb hlt sbb shrl dec aad and dec (bad) xor xor cmp mov jo add xor hlt mov rcr ret fimul mov pushf adc fdivl cmp cmp xchg sti xchg cmp repnz sbb or sub lea or xor pop je ds std addr16 cmp ficoml or in call adc test and push add cs cmp stos jb,pt mov movsl dec divl outsl and in xchg rcrb in out arpl mov (bad) mov push or aas xor stos lock xor mov scas daa aam (bad) clc pop mov adc je loope xchg (bad) aas jl cmp or pop fistpll mov xchg mov xor push pop add movsb pusha bound enter in jge and fcoms mov ret lods xor push push hlt sahf or jo test or mov mov aam hlt popf sbb loopne,pn test jb xchg js xor jmp pop xor or mov and dec inc ret mov or push in stc inc xor or aad mov (bad) int3 (bad) xor (bad) add inc ret mov lods pusha sbb fnstsw mov or jg (bad) cmp and cmpb fs add int jne out jp test (bad) mov in xor lods int3 push pop das pop iret movsl repz dec xor ljmp ja add cld fstps imul cmp mov dec clc gs fdivs pushf stos out adc cmpsb sarb mov lods pop adc push rorl into xchg movsb cld dec push add cmp mov cs inc popf push xor sbb sub pop sbb mov cmp mov fnsave int cld bnd and mov xlat sbb mov (bad) in test cld mov push lock lahf cmp xchg xor add add sbb xor (bad) jnp jp sbb add int3 dec xchg fist pusha xor (bad) mov xchg cmc pop xchg imul xor lret inc je imull push add mov sub pop insl jmp jno popl cmc sub or imul out xchg lds je xchg jecxz into xchg (bad) adc push xor cmpsl shrb das popa mov and adc cmp jge xor mov iret loopne xchg add sub (bad) xor repz push lret jnp int3 pop jns jno les mov lds push push jae mov test xor (bad) xor inc clc mov imul popf add outsb and sub ds bound jno fsubrs stos adc jno stos cli cmpsl ljmp pushf xor xchg cli sbb mov aad iret (bad) lock sysexit cmp sub loope,pn xchg pop adc out and addb les dec add adc ja loope stos hlt mov jb aas cmp inc xor pop lods inc clc mov pushf push mov sub mov pop mov mov sbb mov jp sub push hlt idivb jne pop and mov xchg push es or dec sbb xchg inc mov js add repz xor mov xor xchg lock add sahf cvtdq2ps into adc imul cmpsl jle andl mov jle mov dec lods mov push fwait push imul cmp ficom cmc iret and cmp lret sub les xor jl cmpsl ss dec xor jg pop lock xor pop add xor adc in cwtl imul fdivl sub sahf sbb inc scas cli fdivrs int (bad) adc mov adc fcomps popf popa xchg fs push sbb sbb (bad) cmc push xor jp (bad) xor mov jmp dec dec ficom xor out jbe out pop sbb add jbe xchg gs xor out lret daa jbe xchg mov in lds push call push xor call mov xchg outsb xor loopne imul lahf test xor sbb xor sbb cmp lods mov sbb jb xchg sub sbbb (bad) es lahf or xor in imul mov shr mov adc js mov roll sti pop sbb xchg mov dec daa out and xor mov lock int3 imul adc imul fcmovu sahf daa inc xor or aaa pop pop les div push and addb xor jmp mov pop in xor test nop ljmp std call jmp jo stos dec ja mov js hlt push insb sub add xor mov outsb mov repz jae dec fnstenv add xor fisubr jns xor subl adc (bad) and outsl pop jl jmp je jns movsb push jge mov mov fcoml daa mov mov adc adc xor xchg jae adc ss mov xor insl xor out fwait scas insb add lods in mov mov int3 ljmp clc sub or test sarl movsl adc jnp jae test push fildl cmp lods xor lret xchg test enter or imul divb notl xor pop mov ja mov adc sahf or fistl das push cs xor push insb pop pop mov iret aad icebp dec test jge and cmc xor jg (bad) enter sbb pop or cmc mov insb jp in xchg pusha push pop adc jl out push and xor push les jb loop arpl pop xor into repnz js ss mov push mov int mov sbb xor add push es push mov cltd dec scas iret mov lret mov cwtl mull into jns mov adc lods mov dec sub sbb mov fbstp xor popf repz inc (bad) mov jne lods lahf xchg cmpsb xor and sub sub popf add je sub dec or aad sub adc aam jbe pop stos pop fstl adc dec movsl test sub pop or int3 jns stos cmp insl xchg push int imul add mov mov rcll push jle xchg or mov add xor jmp jns lret mov imul push mov test andb jg jmp data16 mov cmp jmp aad jbe fnsave push idiv inc xchg mov adc cmpsl mov test clc jns repz into push pop mov lea jne pop sub pop inc mov ds cwtl lret int ja jo addr16 outsl inc sbb adcl jnp dec sub xlat and mov inc mov aad push jne sub cmc pop push mov stc push shrl xchg addr16 ja sub pushf sub mov sbbl (bad) ja lret movsb mov pushl inc pop mov into mov into repnz movsl iret mov cs fs (bad) mov push fadd ss cmpsl add (bad) xor sbb pop sbb hlt sti in lahf nop add pop and into jle pop fistp and notl xchg ljmp jg js mov xor xchg xor in jne hlt sbb mov pop adc xor push adc int3 pop call push jns xor pop adc mov or jnp xor fisttp jae lea stos mov pop cmp add (bad) mov addl arpl cmp inc (bad) xor gs mov mov mov xchg sbb shll mov insl pop lods push cmp mov cmc lds adc addr16 xor popf pop adc pushf in mov orb clc in cwtl mov cmp mov add sub jns mov fbld xor xchg xor mov or pop push dec dec ss pop cmp adc jge dec mov xchg rcl xor pushf out cmp xchg in mov (bad) xor enter xor push outsl pop or (bad) add xor call and lds ret (bad) hlt cs stos jp cmp sub push lods rcrl or adc cmc test inc jmp lock xchg ljmp dec mull imul leave or adc or xor pusha dec xor mov out xor push adc add les test jmp fadd das aam ret pop imul xchg in mov mov or jns icebp inc fdivrs xchg jl stos jnp gs aas or pop cmp and stc adc adc xor addr16 push dec aam mov add cltd ss xchg imul push jnp cmpsb sub repz das fidivr out loop xor iret in jnp jnp clc cmp das scas sbb (bad) out lods fwait mov cli je push cld mov ja or js mov mov xor or adc sbb adc sbb xor mov outsb inc mov (bad) icebp (bad) jnp cld out pop cmc jb mov lcall and xor je fwait out sti in ss sub sbb sbb cwtl out push xor mov fxch mov mov loope cli xchg jae cmp mov adc mov ds repnz adc test icebp loopne push sub jne repnz popf hlt ficoml imul aam popa and movsl cmp hlt js sub xor ja jae dec lea push inc hlt add mov jmp mov std pop xor aad add inc daa jmp std hlt mov clc ljmp (bad) iret mov mov push cmp or cmpsb test xor push add jg and test or sbb aad xchg hlt sub inc pop or sbb std mov adc and mov jg (bad) adc repz mov dec xor int3 lods sbb lods mov andl sbb mov mov push xor pusha jo and xor hlt jle fistp (bad) mov mov lret dec cmp shrl stc call clc mov repnz adc jg mov inc inc int push pop or mov xor loope (bad) testl push xor pop dec fisubr roll aam ljmp push dec jo cmp cmp shrb test mov movsb scas (bad) cld pop push jg shrl dec daa add adc jo incl rep aam aaa mov idiv mov push dec cmp mov mov test jg cmpxchg cld xchg adc push xor sub inc mov in lods frstor dec cltd ja mov or stos aaa cli out sbb fidivl scas or inc and movsb outsb jb hlt mov imul sub data16 push jbe pop inc push cmc add mov and stc popf lret jbe (bad) sub (bad) or aad jecxz push aam addr16 adc and jg mov ficompl outsl adc rep sub addr16 sub push mov stos pop fsts gs mov add add sub xor bound in adc (bad) adc sti imul cmpsl outsb mov pop sub adc out xor (bad) fcompl cli or lret sub andl dec jge and dec cmpsb lea notb sbb push dec cs inc cmp pop adc dec add cli imul sbb add enter sti cld jbe xchg pop stos lret push js out sub mov in lret cmp aas cmp repnz add aas ret sbb xor das repnz lret push ror fistp popf adc mov jae movsl adc cmpsb lea int3 xchg stc pop push pop movsl sbb xor cmp and test out js sbb mov das sbb push jmp pop loopne je (bad) mov andl icebp mov sbb lods jmp popa in nop cwtl pusha not jno and cli test scas push pusha repnz (bad) xor ljmp mov fwait (bad) xor or push (bad) sbb cmp push ficoml jno loop sahf mov add jge addr16 pop sbb mov repz cmp gs mov push popf scas dec cli pop and push mov add loop gs add jb cltd cli ss je cmp repz dec mov and lods lahf and lret sub xor (bad) mov mov dec mov repz cwtl and aad jle in lea sub or pop dec pop sub cltd imul mov xor inc std call gs cwtl cs fbstp mov (bad) insb dec adc test jg mov hlt xchg stc lcall fwait jmp pop inc jmp psubd mov mov xor in loop cli fwait je test xchg lds rcrb std pop adc mov popf dec lahf and hlt xor push xor jae inc push xor inc mov movsl mov xor pop inc clc dec mov fnstsw jmp cmp je xor das xchg loope lock lret lds adc and xor dec or imul mov jle out and jae dec gs cmpb jb test jnp xchg add sbb mov mov xchg inc cld mov dec xor sahf mov gs xchg xor (bad) test cmp xor push lret repz and pop enter fidiv imul cmpb in fistp mov es and hlt push add gs cmp cmpsl hlt and idivb sub mov cmpsl clc cmp (bad) dec test incl addr16 jae sbb sbb popa popa jl mov out jecxz hlt xchg hlt dec insb pop add jno sub popa or push mov dec sub cmp mov and adc push xor aaa xchg and mov xchg sub mov stc sub xor (bad) sbb xchg pop add xchg je and (bad) add push in add mov iret fs mov dec dec imull jae inc adc pop adc push push popf jne add cmp xor sub push pop stc mov pop cmp movb nop inc sbb leave (bad) pop shlb add in push and xor and mov add mov jo jp (bad) ljmp push adc loop and add cmp pop mov xchg aad adc imul inc mov aam inc jmp sub jg xor in int dec fisttpll mov jl cmp adc mov push ss aad pop xchg cltd repnz push or xor lcall xor push jb ss insb push jne popa pop movsb xor jl and shrb loopne jno xchg movsb das cmp sub ss das mov xor pusha mov nop fsubrs and xor or xchg jge test push mov mov push adc adc mov hlt in test jl mov repz xchg je adc jg pop jecxz out jg nop sub add scas xor jnp mov push pop push inc imul push xor arpl inc mov pop cmp mov cli or inc and mov add mov jp inc js cmp movsb loopne push pop les scas or addr16 xchg arpl sbb xchg and push pop sbb jl push cmp xor pushf xchg xor sbb adc in daa fidivrl repnz pop mov pop cli mov dec adc je mov test dec movsl pop mov pop inc cmp clc test jno imul out mov adc scas mov adc jmp mov rcr test aam jb sub repz sti adc mov in adc decl psrld lret xor push pop xchg mov imul push and in clc faddl repz xor scas ret mov or or leave push mov test sbb dec or popf in jb (bad) mov adc mov pop mov popa imul or push orl xor rcll xchg mov cli jmp jae mov jge sub test mov (bad) aam repz movsb mov mov fs call or sbb sbb adc ficom insl sbb dec add clc mov sar subl xchg dec sub sbb adc mov mov subl xor cltd and aaa cmp jge xchg inc and xor insb sbb outsb scas cmp xor cmp test jae xor das lret jle je cli call rolb cli xchg sub push imul inc mov stos cmp xlat out icebp pop xchg cmp fsubrs cmpsb mov xchg out fs push sbb js addl int mov sub (bad) adc or inc dec jb mov popf mov (bad) fildll mov mov adc hlt jmp sahf or xor pop lds sbb xor popa hlt nop push cs imul and inc (bad) clc cli push fsubrl add loopne ror repnz and test xor sbb je,pn xchg imul cltd pop sbb dec dec fild dec add out (bad) mov sub cwtl call add sar jg adc add repnz leave sub fistpll (bad) loop sub jb lds inc add stos jp mov ret adc or dec push sbb mov mov bound jbe mov sbb add sbb jb push xor and int3 lahf inc push mov mov les push sahf or rclb mov sbb jecxz jmp sbb pop jae sub mov adc push cmp cmp loope repz fidivr add ss int3 cld mov push movsl adc xor andl mov icebp scas mov and push repz add push clc leave xor inc jns mov leave ror jl hlt sbb and stc fstpl testl mov xor adc stc add and repz (bad) jae js (bad) or mov fcom mov jbe cmpxchg xchg into xchg aas lcall jg xor hlt mov mov int3 cmp and mov imulb sub aad insb xchg leave dec arpl repnz jg lea adc fidivr shrb sarb jae lcall inc hlt dec cmp test cli mov adc movsl imul or int3 iret lcall jno addr16 lds sbbb in xor xchg (bad) mov jb sbb popf fiaddl adc inc mov add sbb and scas cmp aas xor pushw sub repnz std dec jmp stc out jmp adc (bad) loop cs push test inc test adc inc sbb cmp xchg cmp pop lret inc pop mov adc daa xor xchg leave sbb cltd mov adc inc sbb leave and fwait sub out xchg push sub popa (bad) leave loope mov jg int mov xchg (bad) sti xor mov mov pop dec pop stc inc ja test aam xchg cmp mov xor jno fnsave inc insb repnz sbb scas mov push shll outsl add dec xlat mov sbb mov add test push xor mov mov or push cld movsb add fwait mov dec adc int3 mov mov mov xor out mov adc adc add inc cmp xchg lcall insl pop inc and insl pop jo add jle push cmp popa xor push add pop jmp add adc xor mov sbb jae fucomip pop sub insl and mov mov xor mov inc xor cmp imul loopne loope sub xor fs mov add fld js jns push dec jae add lds fcom adc inc aam cld lods jmp loope push hlt mov ds pop mov (bad) je jl imul jno hlt xchg js xor es mov and pop inc popf fldt cld in (bad) or roll cmp test loop push sub mov xor mov push pop repz mov in adc jge das incb hlt fisubr jmp mov loope jae cltd int3 xchg iret and xor mov sahf push adc je push pusha add mov aam nop mov jmp mov pop fwait daa leave dec and xor inc bound psadbw int xchg xor stc mov insb shr dec fcmovbe mov jmp lcall adc gs push stc sub add cli xor loopne fistpll sub movsb cmp mov xchg leave lock sub bound dec add inc mov repz cmpsl xor scas arpl repnz mov pop iret xor jns pop repnz mov push xchg push out mov shll (bad) imul and pop (bad) je xchg stos pop sti (bad) xchg xor xor clc jp jo iret lret or pop or mov aas outsb xor and movsl in lret mov cmp aam push push add aas outsb mov sbb sbb fisttpl rorl mov adc xchg xor (bad) cmp inc xchg sub stc xorb mov (bad) aas xor add cmp adc ja xor sbb in mov fild adc imul (bad) jae xor inc loop xor jnp (bad) mov cmpsl aam xchg push pop int3 xor mul das mov pop dec sbb jae aaa or xchg fsubs push and add sbb mov lahf loop aam fldt (bad) ja data16 ds stc decl stc or call push in pop dec fsubs insb insl cwtl jns sub sbb push pop xor enter adc adc ffreep xor out mov pop mov (bad) sub in nop mov pushf loopne fnstenv sub es addr16 sub enter push cltd outsb add call jg push jae jae dec sbb dec cltd nop mov jns inc sbb sub lret pop adc sub cmp jg jb ds push cmp imul jge ja (bad) mov push jg push mov xor into mov int3 nop (bad) xor or divb cmc mov adc and pop mov adc jne mov mov repz dec mov or aad mov cwtl mov xchg int3 mov and pushf sub inc xor (bad) sbb inc xchg xchg pop adc cmpsb loope gs inc sub cltd pop inc dec push das inc add and push cli xor xchg aas add pop inc std xor movsb push idivb stos push sar push repz rorl add ss call and movaps jle sbb dec xor ja jno mov cli aas xor mov imul ret loop test lcall cld popa dec jb cmp fidiv iret xor adc rorl jns insb (bad) hlt fsubl addr16 inc sbb push daa cmp adc and push dec (bad) jo aad mov mov loop mov add pop sbb add jecxz sbb sbb out mov pop stc fcmovnb jl insb ficoml movsb xchg adc bound inc ljmp adc adc stos mov (bad) xor dec xor test jp ds fcoml add stc xchg in popf aad xchg outsl sbb test mov (bad) xor push pop sbb (bad) mov lods adc ja loope jae pop mov enter ss dec pop shr add ds loope aad shlb mov xor fidivr dec and pop adc leave cwtl sbb ja xor sub inc pop jo xor lods mov out je or movsl popa fstpl cs xor push mov sbb jno ljmp push xor jns rorl dec mov outsb xor movsl lds hlt movsb pop jp aam adc jae in sub xchg lods mov xchg ss ds lock pop jne mov mov in add loope js aam inc cmpsb and sub mov iret jae pop rcr or adc sub aas insl cmpsb pop jbe add lahf js movsb sbbl pop mov push xchg orl jno cmp sub je loopne (bad) mov and push jb adc or sub stos aad and (bad) mov outsb (bad) clc jle jb sbb jno mov xor je mov mov push cltd jo cs dec mov mov lahf call aad sbb add out (bad) jb (bad) push add je pusha sub push (bad) push sub sbb jl dec iret cwtl jl decl test popf test enter xor fs and pushf inc xor fadds xor xor rcl movsb mov cmp lods scas rorl or fstl stos and adc pop in (bad) xor inc add scas xchg pop pop gs sti add xor inc push data16 xchg and int mov insb push mov sub hlt inc sub dec ds pop in (bad) mov into xorl add xor cmc cli data16 cmp int movsb cld xchg mov jge xor cltd out add add aad addb and dec cmc cmpsl lahf ds sub jp pop notb hlt pop pushf push jns jmp leave mov push mov movsl adc mov mov sub es xor and mov push push in or mov mov cmp add mov push add daa mov jmp mov mov rolb mov jle aad cmpsl adc and rcr (bad) xchg fild xor sbb das sub rcll lods (bad) xor add cmp jge mov dec int jae cld mov cmp call mov (bad) stos stc inc jno shrb mov je (bad) in lret xor into (bad) mov mov jbe xor bound jo data16 mov xor mov addr16 sub lods aad inc mov xchg sbb adc push sub js push gs jno pusha add cmp inc add xchg xor stos negb xor adc into jecxz incl jae daa mov ljmp mov adc xor fcompl imul xor jo outsl mov into in dec stc mov mov cli jmp cmpsb hlt dec bound pop mov jmp (bad) dec hlt dec cld mov jo sbb pop push sbb sbb xchg test ret dec sub movsl mov lock ret dec fstp and mov jmp iret bound push sbb pop stos repz adc out (bad) mov mov jnp repz imul (bad) sbb test repnz inc dec push sbb std leave jne mov cmpsl lds test cmp xchg fild cld mov cmp jae or ret int3 in sbb ret test test adc divl push add sub mov push out xchg dec fwait xor inc sahf daa (bad) je mov rcl pop mov pop movswl enter (bad) inc xchg pop (bad) xor (bad) pushf push mov mov (bad) loop shl xor ja adcl adc cli sub mov aaa push cmpsl inc jmp push mov es push test pop adc pop popf or call cli aas xor outsl adc inc push inc aam xor add lds xor es fwait xchg bound mov push lods dec xor aaa leave mov mov lods das pop pop jne cmp or inc imul frstor lret (bad) loopne rclb hlt mov inc add mov lahf fstps mov call (bad) mov xor or out adc and pop arpl imul sarb popa leave inc es push xor (bad) or pop jns iret dec push cld and (bad) jge or pushl nop popf xchg je mov repz push jae jle cmpsb pop out adc dec je leavew jb divl push sbb (bad) xlat jp jb mov popl sbb stos jecxz mov jmp popa jno mov fidivl and xor mov and shlb xchg push sub hlt fwait ljmp enter xchg xorl clc pop repnz push push pop pop shl in cmp and push jb inc nop xlat je es xor les push in ljmp loope in sbb push or xchg dec pop or loopne dec mov out test mov sarl xor mov pop push data16 cltd adc xor daa mov fcmove push mov xorl outsl xchg enter cmp push test jne jo and cmpsb sub sub dec adc stos test jbe insb stos pop mov (bad) fwait add in push cmp icebp inc dec add pop test daa nop mov repz ret (bad) cltd jns in sbb ret sbb into pop dec mov mov inc pushw mull xor jecxz mov fwait popf push call dec push pop loopne gs data16 mov jb test or int hlt cmpsl lcall pop jno enter les inc aam sahf push cmc push dec add and adc sbb out mov push dec mov pop mov lock push repz or clc lcall jmp popa je jl jg cld and jns fcomps lods fnsave xor xchg pop insl outsb dec and xor jbe dec pushl cmpsl mov ss ja xchg xor dec push inc jp xor sbbb aas (bad) xor xchg push xor cmpsl loop gs sub fimull add pop jg jbe mov ret sbb sbb xchg xor pop sub aam pop bound popa in and jb bswap adc add push int3 jmp (bad) xor cmp sub sti dec xchg aam jns inc add or xor adc adc mov sub and mov jg hlt insl push xor int3 movsb outsb clc mov xor jb daa fimull push jmp xor inc add inc (bad) je mov lcall mov adc inc mov mov jae cmp sub lret cld push lea xor xor (bad) push jno xchg mov xlat sbb sti mov mov jge cs insl or nop jbe mov sub dec (bad) mov jge jp (bad) push push mov and fcomps sub movsl adc mov repz pop mov testl and jo (bad) icebp enter dec ja push insl fs outsb xchg xchg sbb sub mov jno xor jp and adc stos fmull add jb inc clc hlt xor dec jae ret (bad) or xchg leave xor adc cmc daa nop aam cli adc addr16 sub dec pusha inc mov clc fldenv popa jb push movb mov test hlt cmp jno xlat ret sbb jmp pop mov gs push jge jno subl push fucomp jns mov jne mov pop inc in and icebp lahf int3 movsl add push xor (bad) cld jge sbb mov xor call out in popf rcr loope data16 adc gs adc jne (bad) repz xor nop or jmp sbb int3 jmp or cli stc mov adc jle jns ds xor mov inc pop test shlb and into adc mov sbb xor int3 mov loopne add cmp push mov (bad) hlt xor mov push nop mov lret daa ret mov pop shr add push sbb aas sahf in inc je ljmp and push and hlt push dec ss adc outsb sub mov adc mov dec rcll jns ja dec adc popa push push in cli push repz xlat movsb cmp ficoml aaa cli cmp jp push popf leave in dec mov insb jmp add push pop (bad) clc xor into (bad) popa lods ds xor xor mov repz stos jmp adc sub ljmp cli jb or mov repz xchg scas mov cli lahf out jecxz mov icebp push add adc out out mov cmp daa (bad) ret mov fidivl ret punpckhdq mov add push push repnz cmpsl rcl inc cld push inc mov sbb cmp mov jle fs cmp fnstsw push and and les out and push push cmpsl ja xor int sub or pop aad mov stos movsl int3 ffree xor ret mov mov dec cld int3 push outsb push push xor lds cli js sti mov xchg add insb imul (bad) xor jno push call scas imul mov (bad) push repnz ret xchg ss jle inc sbb mov loop repnz sti dec insl mov notb push sbb or sbb ljmp inc ds repz xchg pop dec iret mov mov lds out cmpsl mov (bad) bound sti jb adc jge xor je sbb cmp xchg je jp inc adc xor mov fcomi repnz dec mov push sarl sub sahf mov xor adc adc dec cmc xor mov js jae fldl2t mov sbb insl and or mov xchg out jp mov rclb lods pop cmp add out push sub ds inc mov jbe jns adc fdivr out push xor jnp dec xor mov pushf std icebp hlt in test (bad) xchg sub adc adc dec mov lds inc push scas xor ljmp stc movsb loope,pn pop scas ja adc cmp xor js in sbb call sbb mov xor dec movb dec imul jbe (bad) xor mov and adc in insl xor jo outsl and les cltd dec xor in call pop mov jae cli cmpsl es push (bad) mov xchg test mov rorl dec rcll icebp dec mov jmp aad xchg rcrb dec jl repnz aas jl (bad) mov mov nop sbb imul jle cmp xor adc jmp and (bad) lcall sub outsb or (bad) repnz mov mov sbb pop jo,pt movsb cmc push pop add adc sbb fistp push pop (bad) jae out mov std inc je sub imul jo xorl jno (bad) shrb mov arpl lea mov jns jne scas pop xchg cmp mov and xor mov (bad) pop jb pop lods dec adc les clc xchg inc lock hlt arpl out and (bad) clc jmp fwait sub lret xor push adc jl dec pop xorl adc sub lds outsb paddsw (bad) je icebp out (bad) pop adc or xor mov (bad) cld xchg xor push mov xor (bad) sti add jp loop mov jne jo xchg (bad) mov (bad) jne pop add xor sbb inc mov cmpsb sarb paddd in pop mov call lcall add ret repnz test mov movsl in xchg mov add fnstcw xor or andl popf mov jns add mov adc jne stos int3 (bad) dec (bad) cld fmuls mov xor (bad) rcr lret jle fs or cmpsl imul mov sub (bad) xor fisub xor cmp jle pop inc jno add adc je test mov fdivp adc cmp scas or adc fwait das dec mov cmpsb sub pop mov popf lahf mov fsubl dec (bad) notb lea pop and and push mov clc jle sbb jb lahf cmp xor add fimul outsb xor adc stos add mov (bad) xchg inc jl jge jb adc (bad) xor cli mov mov in adc jmp lods push mov adc je add adc push mov mov jno or mov ljmp inc (bad) lret in adc cmp arpl inc ds pop pop pop lea cltd cmp (bad) clc repnz mov xor sbb and or dec mov push (bad) cmp mov loopne hlt fstp cltd mov add add xor jo mov sbb jae leave inc sub sub xor ja movsb push jb and mov xor ret aad pop arpl pop sub jns call bound lods sbb stos enter xor add xor xchg push push add (bad) jp dec adc hlt arpl mov leave cmp cld xchg dec add pop cmp fdiv adc or leave stos or xor das push jge mov loop cmp sub and fisttpl (bad) fimull push (bad) (bad) mov mov xor std cwtl jp push gs jp mov push bound mov mov daa rcll nop bound outsb les mov dec push jmp mov push jae cmpsl stos sbbb push sub lcall and pop push mov hlt ljmp mov mov std sti or addb xor sbb mov xchg xchg push clc pop mov fsubrs imul ss adc (bad) enter fs fldcw mov shll jecxz cli xchg jb pop sub sbb adc ret popf bts data16 nop mov pop daa or cmp popl lahf inc loopne hlt push adc dec mov ss outsl lret out mov loope stos xchg mov cmp cli mov std fwait push xchg mov xlat icebp lods sub and mov (bad) jle,pn ret fisubrl cwtl jne fbstp std in xor and or adc popa add dec sti lcall and imul ss mov xor sub outsl sub aas cmpsl jbe cs sbb out data16 inc xchg aaa orl jge xor push push mov pop mov push cmpsl sbb test ret mov seta add in inc cs xchg (bad) sub cli mov sub sarl push lcall mov outsl ret adc jns dec cli jecxz add and or xchg or aad mov mov mov imul and cmp push pop jno repnz or add (bad) xor mov aas inc xor lcall mov lret bound idiv mov bound mov hlt je cmp bound mov ja mov jo jne arpl dec aam adc push std stc daa scas push jae push sub je loope pop rsm cmp xor inc pop xor out sub jle lock push xor cmp insb jnp xor mov loopne mov fdivrs xor lahf lcall cmp jg std jge gs cvtps2pd adc out pop repnz testb (bad) jne jns mov push aad ret hlt sub sti jge push (bad) xor or push dec push xor mov pusha add push dec xor jno sbb jl cmp cs dec push cld pop and cmc rcr mov xor pop ss inc mov adc mov test mov lret jge (bad) cmp adc movsb sub mov ja clc lcall dec mov aaa cwtl xor jecxz mov push and (bad) lret jbe cmp xor dec daa inc pop clc or (bad) jmp fwait inc movq fnsetpm(287 in imul sbb adc add sti in jnp loopne inc add jae mov aam xor cltd add pushf loope lods repz adc repnz xlat xor insb xor test cltd dec add repnz das mov scas adcl je stc mov and push push mov sbb jne cltd mov dec ret xor push faddl xor adc xor (bad) sub in mov jns mov push mov out pop popa test adc sub xor cmpsb dec in push and pop inc jecxz jae (bad) rorb push mov cmpsl dec xor js xor push aam into mov adc pusha xor mov and sub int3 mov loopne jp cmpsl sub xor xlat jno add out sub inc xor imul xor ret frstor punpcklwd scas mov rclb cli cmp xchg js mov add je xor mov mov pop jle xor xor movsb and push out jmp xor lods sbb or dec jmp mov mov sarl push and std (bad) out (bad) and xor setae push xor jmp mov xor fcmove hlt lods xchg pop mov or addr16 hlt inc dec or iret sub hlt sbb lock adc mov mov imul in add iret mov rclb and iret and inc or xor or pop mov (bad) leave inc hlt push or iret lods jns adcl scas addr16 and adc (bad) xor popa and sbb mov mov stc cmp cmp aaa mov mov loop xor dec mov xor sub add jae inc and (bad) xor or adc hlt imul xor xor jae addr16 pusha xchg jb cld pop mov xor ljmp sbb cld test xor mov faddp xor out add pop sbb jle xchg push outsb xor jmp adc or nop icebp sbb jo mov dec arpl xchg rcrb test enter imul js sub jb cmp add push test mov cld lea jmp mov sbb add bound lret adc fucomp push (bad) dec adc cli push push jge insb and test jmp jns mov cli jbe cs add xor adc cld sahf dec jmp adc std push int inc sti sbb jb mov das int3 rclb cli out jb mov mov push lret lret xor std or mov mov mov stos fild and pop loopne jo mov lea ret push cmpsl adc clc cmp and xchg jnp into xor movsl jl,pt jne ja push cmpsl out xchg sub lods mov jbe stc add jb sub xchg mov inc pop repnz stos gs jmp lds pusha ret xor dec xchg imul adc xorl add ret hlt rcl sub mov mov jp sbb lret stos lcall push daa lods hlt mov adc adc repz or test in nop nop push cmpsl xor fisub ret sub and xor cmp fidivr add lea sub popa cmpsb repz imul mov jae incl lods and iret mov xor add push push in or jmp and fdivrs (bad) movsb cmp pop sub or out aad shrl xchg dec ljmp push dec ja fnsave hlt mov popa cmp pop out sub and inc xor data16 lods sub cli jbe out mov push out fldt cmp sbb ja sub mov ljmp divb sbb jnp jne rclb pop cld (bad) ljmp sub (bad) ja loop or pop xlat jmp cmp mov xor or add add sar aaa mov push jo sarb and rclb repnz stos cmp jmp hlt imul les icebp xchg push aad or mov mov push loopne shrb jb dec addl stos in bnd sbb mov jle repnz mov cli push push leave dec subw fimull xor imul out mov into add loopne test dec stos xchg movsb das inc and mov scas shl movsl mov imul pop ja cli dec and push cli stc (bad) mov rcll fcomi js add mov mov jg dec sbb jne push xchg int3 sub call xchg add imul fidivrl xchg cld jns jg inc xor jge mov lods cltd and mov mov push repz popa lea jg cmp stos repnz cld push add xor repnz and lret leave gs adc int3 or icebp jmp jno dec add sti in xor and cli iret jge js fistpll sub add mov sub xchg lea iret mov pop cli push call leave adc and sub sbb mov inc cmpsl sbb add (bad) dec or adc xor mov out sbb mov xor jno dec add popf adc bound adc pop adc das mov imul sahf push pop or adc xchg push fwait aaa fsubr sti rorb jae std adc dec mov mov xchg or add lods dec pop sbb or push nop inc repnz jbe cmc xchg adc fs jp test out and stos fstpt dec push jae inc mov pop js xor sub and fstps adc fs inc dec cmpsb cmpsl out sbb push mov sub cli test addr16 nop mov jne jbe mov pushf adc sub or nop bound aad and stc mov sbb popa fistpl cmp fisubr divl pop sar add lock addr16 mov xor mov sub lcall cmp mov mov movsb xor (bad) xchg repnz and inc pop xor pop cmpsl jle cmpl lods lds sub pop icebp call hlt or push (bad) push hlt mov jnp cwtl xchg loop ret loop xor mov divl nop stc mov ja (bad) jp jge push adc loop lds jle movsl std dec loop push push or insb push dec jmp mov add test cli sub or lret mov or or pop xorb dec call lahf cwtl pop xor popf je and ljmp push andl xor enter jle or dec mov test dec mov mov inc pop bound inc mov adc (bad) sub or adc (bad) nop aam sbb je jmp sbb movntps mov sbb pop ficoml jg mov outsl mov movsb or ja mov inc scas xor dec out cmp xchg aaa push loop jp sub cmp mov xchg push (bad) pop mov xor mov lds ss decb xor mov aas add pop mov ljmp imul cmp imul and cmp int adc pusha dec fldenv stos repz push push jge cmp push out xacquire cmp or mov test push repnz rcll imul imul jmp daa jp lcall mov fsubs xor jmp and xlat mov jnp push add push push adc stos mov fsub int3 mulb sahf adc and sahf mov cli pop jne xor push ret sar xchg sub jmp lcall insb (bad) push mov (bad) mov push mov bound inc cli clc stos mov pop aaa sub cmp icebp adc sub test (bad) hlt imul xor cwtl cltd or xor clc aam xchg int push push insb sub jg imul jge leave hlt loopne repz test clc ja lods xchg mov bound sysexit sbb (bad) cmp lret xorl aam imul pop hlt jo lods add or insl mov sbb cmp lahf (bad) xor sbb cmp mov jmp cmp popa call lahf sbb lret add mov loop cli aas sbb push repnz and jge addr16 xor mov int xor mov mov out xor fwait neg jnp mov ljmp push dec aam xchg (bad) bound jge pop cmp inc inc push adcb or movsb outsb push das repnz xchg mov ja jae pop adc push dec loopne xor enter jno fcom mov xor gs xor add out push xor das xchg inc popa je bound sub pushl out mov xor jl and mov je popf jp mov adc pop inc cld out ret xor inc aam xlat xor fstl mulb dec mov mov push dec add add ret scas pop push jb mov mov sub jae sbb adc imull add inc cmp inc inc jne mov fs adc xor orl outsb shlb cmp inc push mov aam mov mov push fsub xor test dec add ss add dec push adc nop inc imul jb jp hlt iret imul lea rclb testb add mov xchg mov popf push xor cmp outsl je add sub inc cltd adc lea cmp outsb loopne mov xchg aam jae lahf xor cld lea xor je or xor jnp push (bad) xor xor jmp stos aaa (bad) icebp in lods bound loop movsb clc imul xor (bad) repnz (bad) icebp (bad) cli inc add jae sbb xor jnp sbb aam or loope data16 popf out jle bound into sub push popa lret addr16 inc add or or sub aaa xor test xchg cmp lahf fbstp std jge outsb adc fcmovnu stos test xor sub ret xlat pop test (bad) mov fisub repz jmp add (bad) mov jl xor xchg xor imul idiv loop aad das mov cli in sbb mov inc xor jmp js scas and (bad) jo loopne add fisub in xchg sahf call jl inc jae mov sbb xchg ja,pt sub dec enter pop sbb aam mov jl fstp shrl mov mov mov (bad) clc push movsl (bad) or outsb or out pop dec adc inc mov bound push push pop inc sub jb stos mov roll lea ljmp bound lock mov aas jp xor and jns jo shll sub push lods shl push xor clc insb cmp pop xchg hlt push mov add bound mov popf daa jns xor (bad) jb ss ss (bad) leave js mov gs sbb mov xor and lods imul hlt leave jmp in shr movsl lcall dec add aaa dec (bad) mov xchg or sbb rep addr16 dec (bad) xor ss xor xchg aaa imul sbb outsb dec adc je sub mov sub mov fwait mov mov mov mov adc pop mov sti xchg dec sub sbb dec sub aad push xor pushf fstpl negb dec jns mov inc sti hlt ljmp sub push dec and gs mov aas inc mov loopne imul inc jo push mov sub xor cmpsb push repnz jne xor lcall cmpsl mov shll bound mov ja mov lret sbb sbb loop mov into je (bad) xor xor xor add sbb mov daa (bad) rcll sbb dec je lock add ljmp scas shl xor hlt pushf sbb and xor mov mov cmc and out push mov scas cli (bad) lahf inc xor push xor mov adc cmpsb mov bound mov fcomi ja dec xchg xor inc ret xor xchg lea mov xlat movsl pop jecxz cld hlt cli xor je and xor or repz mov xchg cltd dec cmp jae in push (bad) push repnz sub or push dec js jmp add jg daa (bad) (bad) into dec cmp pop xor cmpsb je xchg fcoms das hlt jecxz cli mov ds movsl stc xor pop xor xlat ret jae mov mov sub daa mov rclb (bad) (bad) sub dec lahf sbb jno hlt stos das mov sbb sub lret xchg push dec ljmp jmp daa jns xor ja add pop fcoms (bad) in xor imul int xor fcoml mov repnz push dec push adc push xchg cltd test dec stc insb pop call mov jp mov push js push or loope jbe jge cwtl push xor pop jae cmp cmp aas mov mov in push jge jae ljmp frstor sub xchg hlt mov cmp (bad) ds cmpsl sbb lock mov cli pop inc mov or (bad) add push fwait xor and mov fimul or data16 and ds push mov iret imul or push aas mov mov rorb ljmp cmc inc mov xlat testb jno sub dec sub je adc push or cli lcall jae js popf xchg xchg in fcompl je mov pop fwait (bad) repnz adc adc cmp scas arpl push pop or addr16 scas repz mov add sub js xor rdtsc push data16 jne push inc xor push leave jge out sub xor inc add mov cwtl adc push movsb std pop rcrl movsl aad (bad) xor ret inc push cld fidiv xchg loopne dec gs (bad) jge and jecxz hlt or pop fwait pop hlt clc int3 aad or mov (bad) in jae xor mov jno push cwtl dec pop mov xor dec lret mov xor sbb xor (bad) xorl xor xchg out fisubrl test pop daa adc sub (bad) mov cmp iret and jmp in sub test dec (bad) fmuls push je mov mov out jmp mov cmp xor enter inc daa push mov shr imul jno xor jle xor push clc jge test mov enter jno push addb sti cmpsb push jle test sub add lcall mov je pop (bad) mov mov dec pop add xorb nop lcall ret cs xor mov cltd stc cmc mov inc ret clc lret (bad) dec mov xor hlt cmpl test scas jecxz mov add and popa pop rcr adc cli adc xchg into test repz pop add xor je sbb lock (bad) outsb sbb mov in scas sub out mov in push lods (bad) gs mov clc frstor test mov mov push pop xchg mov mov push add dec adc outsl shlb rolb out std cmp mov xlat std push hlt dec es add (bad) (bad) mov push imul mov in lret jg repnz repz adc rcr rdmsr or xor xor pushf mov rcrb scas mov dec into (bad) xor and stc imulb xor sbb std xchg data16 sub ror adc jb addl sub sahf sarb in stos sarl inc movsl push or loopne and jne cmc cmpsl adc nop (bad) out insb aaa xor xor mov mov fsubrl js and push loopne mov lods inc outsb dec gs fdivl mov push push and inc adc (bad) out std stos inc adc sbb jo inc xlat lea gs push outsl rcrb adc div adc jbe gs popf or fdivl test cwtl add mov xor bound imul hlt call (bad) and push cs adc insl sub dec mov repz adc je cmpsb lock es xor sbb mov add mov adc repnz sbb cltd sti xchg adc in dec mov fwait mov xor and clc fdivs stc sbbb pop mov fsubl mov inc cmp mov (bad) not jns clc jg je mov add stos xchg mov (bad) xchg and adc mov add xor and loop outsl dec orb int3 xor jno pop or dec xor adc sub aas xor mov xchg cmp xor inc push sarb mov adc shll jge push (bad) rcll mov and bound and or sub sub cmp stc sbb icebp (bad) imul dec cld adc fisubr sbb es js gs xchg mov rcl xor mov rol insb out xor data16 and dec mov out stc mov push xchg jmp das fnsave mov stc in data16 enter add xor adc inc push xor loopne int3 add mov in xor fidiv push or cmp adc mov fcmovnb in inc add xor (bad) fnop mov ret jno (bad) push mulb cmp or dec hlt push cmp or xor (bad) mov movsb pusha jae (bad) (bad) aam cld and push sbb jle sarb mov jae sarb lcall cltd aam mov out cli cmp mov cli fcompl add xor lret fisub mov mov push xchg xor fisubrl adc gs and pop adc sbb jle hlt push jl xor lret into out sahf lahf mov xchg outsl xor lods sbb lock push sbb rclb je adc add push mov sub rcrb and add jecxz xor mov iret pop or cld call aad inc imul jo and lods cmp sbb call aam pop (bad) push inc cld jb xor imul cmc xor push lcall les jo xor xor adc outsb loope jg iret lret daa nop mov jb pop rcll test out popa pop jno inc sbb mov mov xor imul xchg ds pushf mov xor push dec adc jp sarb or int ja mov mov and mov out fwait pop gs add push mov fimul cmp ljmp mul xchg es xor pop adc in jns lods sub dec cltd gs lods xor rorl add xor imul mov cltd jo cmc push cld iret xchg (bad) inc fs and dec jp push (bad) repz adc dec mov jl sub repz adc xor fnsave adc xor retw xor out mov scas or divb (bad) add adc xor mov je inc mov (bad) mov push mov stos push mov (bad) test and mov dec add lahf std xchg lcall js,pt xor dec bound jg pop xor mov jno jp (bad) xor sti mov jo xchg push test fstps jmp cld xor les in sbb repz xchg mov int3 scas adc mov (bad) xor in call scas xor jnp push (bad) jo xor jl mov es and nop popf push pushf mov test (bad) sub jno ds std mov aas sbb repnz xchg xor cmp test decl imul clc mov mov out clc pop mov pop cmp sub adc das movsb or lret aad sub test push shl aaa cli jnp fldcw aaa inc sub jle sub mov push hlt pop cli and jmp movsl in psraw (bad) in ds or mov adc mov sbb xor cmp fildll jb nop jge les out sbb sti outsl aas lret iret mov bound mov fcomps fdivr push movsl mov cmp pop push sub repnz js sub lock inc mov aam pushf popa xor lods cs popa and lea shl imul lss push sbb out (bad) pop cmovge in dec adc sbb into lods orl xchg mov clc mov aam popa pusha bound jge sti xor (bad) clc loopne test icebp mov (bad) addr16 adc push hlt sahf sbb add or cld xor jl lcall sqrtps xor sbb mov (bad) push sbb dec pusha bound lea push jp fiadd clc push dec cwtl mov xor xor cmp shr out push addr16 jecxz das pop mov movb in ffreep mov xchg mov shl in inc (bad) imul and div cmp in adc scas jle jle mov add test pop ss jo inc mov scas bound arpl and incb add jmp clc adc sub mov mov in out inc sub adc xchg cmp daa xchg cmp jb mov mov mov mov or or out adc pop aad (bad) adc add pop adc add push inc fcmove jge xchg mov cli imul xchg mov xchg icebp cmpsl xlat ljmp or inc movsb or push inc and popa pop aaa into shll iret test cmp into mov mov push push nop repz jno mov fwait add movsl icebp nop mov add pop outsb hlt dec imul mov adc popw or aad fsub call sbb xor jbe xor adc jno mov pop loop xor or xchg inc dec bnd test adc sub inc xor pop mov mov sbb cmp int rclb test pop shl adc xor dec loopne jns cmp in push out ret jae fcomps cs clc push jnp push sbb jb mov stos out (bad) xor xchg ja mov cmp ss mov pop mov jg (bad) repz adc data16 cmp dec in hlt movsb mov sbb dec and jae cmp loopne pop sti pop lods add mov outsb sti stc push enter push pop lret mov sub and mov add adc lret (bad) mov push cmp xchg inc das fwait xor cli push adc fdivrl js add sub sti inc (bad) xlat dec fdivp jo data16 jns jbe adc aam subl mov cmp pop add push sti mov in xchg mov (bad) pop mov daa jnp in movsb jo fcmovbe jp cmp hlt pop mov (bad) sub mov jge xor jmp or cmp fadd mov (bad) movntps mov xchg jo jb jmp daa adc mov mov cld mov inc fild leave jne or adc imul xchg or jmp mov outsl ds inc bound mov xchg mov cmp bnd stc mov sbb jge cmpsb xor mul scas jns inc and sbb bnd rcrl fdiv jbe adc test xor pop aas xor fnsave push outsb lret lahf fiadd imul add mov fldcw cli daa dec and test jmp into add rolb xchg in sbb push test pop mov iret xor gs outsb pop sbb and and lds lcall cmc popa sar push jae movsl add add mov dec jo xchg and push (bad) in pusha and sub adc neg cmp xor inc outsb loop xor call movsl dec add adc mov movsb loop decb cmpsl and bound pop cmc repnz lcall mov mov mov fldenv outsl push pop sbb pop addl cmc lods sti mov cmp xor (bad) sbb add xor lods sub jne xchg dec xor aad xor pushf in jo inc mov xor push (bad) out mov mov xchg pop xor or add lcall sbb cmp dec sbb pop dec xor push mov jle scas adc or repnz jmp inc jae into jnp mov push test (bad) neg in repz xchg dec mov (bad) cmp add dec pop push cmp xchg movsl ret imul out or xor xor stos jne jg sub repnz push xor stos dec xchg xor mov daa or clc faddl sbb push jne test shl jo (bad) ret xchg xor jl sbb adc xor enter jno scas or jb pop xor lret mov mov push and jbe imul ret sub add mov and (bad) ret xorl dec movsl gs mov dec (bad) push mov sbb sub hlt sub jb adc pushf (bad) repz add or aad push lahf mov fwait mov sbb inc fadds and (bad) insl popa adc lret sbb repz es aaa push mov push adc dec fist js and sub sbb movsl sub sti push sbb xor and mov sbb and adc inc loope mov jl inc adc xor lock push ja xor rolb and icebp dec push test xlat mov sbb cli std mov xor jecxz inc movsl jle mov mov xchg adc imulb imul adc int3 jmp int jne jl mov sub mov and ds shll pop xchg mov adc inc cmp in dec in out dec roll mov cmp cwtl adc inc xor (bad) aam and lahf aad xchg xor or xchg sub xor ret push add xor push jl std cmp rolb jb repnz lea push jae sbb imul inc push dec add mov sbb out xor sarb xchg das sbb sub jg xchg push loope mov aaa jmp pop and icebp sbb cmpsl test or (bad) jo xorb (bad) adc ret xor loop mov into lret xchg mov fidiv push dec std and sahf int das or scas add ja inc dec pop arpl mov imull and mov sub cli ss lahf mov hlt stos sub pop lahf je lods (bad) decb xor add xchg inc enter lods or pop mov mov mov add or sub stos call mov push sub inc xchg pop sbb das xor mov mov xor mov movsb mov loope mov xor (bad) leave and cltd add cmp fist aad int3 ret dec push jae lods or adc insl paddsb cmc inc push movsb je out cwtl daa push or and loop shl xchg imul xor mov add pop jno sahf gs out mov nop adc xor push in (bad) shlb dec xor xchg subl cwtl xor jge pop adc pop stos repnz mov pop mov out pushf xchg jo mov pop push je add push adc lret jecxz xor imul pop movsl xchg adc lds adc jb xchg sbb (bad) xor aad xor xchg jp sub xor cmpsb mov fnstenv ret xor xor jnp dec dec je rcrb push mov inc sar decb fdivs fdivl inc (bad) insb hlt xchg mov stc push inc xor dec mov mov scas fcoml mov mov div pop aam sbb les lcall mov mov and xor xchg cmp (bad) adc loopne cmc les jnp cs mov arpl jb dec mov hlt enter ret (bad) sti sbb push xor and stos icebp xor adc fcoml aas test cli dec adc xor fadds xor movsb jnp sbb pushf jne (bad) push sub mov sbb pop xor adc mov out sub mov cmp cli sbb into jb add add outsb dec (bad) ljmp dec popa add cmpsb sbb into xor jecxz cmp cmpsb push jmp in test aam lods pop (bad) mov stos gs rcrl jl xchg xchg fildll xor insl xor jl aam xor push push push jnp pop mov dec inc loope nop cmp mov pop ja dec push hlt dec inc sbb push push xor jb or xor mov mov jo (bad) sub pop push xlat and test adc jae xor loope call imul icebp pop cmpsl add xor sub push jb out popa popf cmp (bad) lret add xchg xor std in xorl sub pushl sbb xor xchg call fidivrl fwait int mov xchg inc jmp (bad) aas add int3 jne xchg mov fwait adc clc push adc mov mov inc pop sysexit xor int movsb in loop dec repz push outsl mov pop mov adc arpl pop sbb mov jmp out aas xor mov adc lods cmp dec jo iret popa pop inc sub test sub jp and pushf jae and xchg movsb adc or clc pop hlt dec add lcall les ss xor addr16 loopne mov inc xchg xor clc pop jno ss ret or in push sub mov pop mov lahf adc mov movsb xor test xor jae jle dec adc in xor dec cwtl pop mov jne test lods xor fldt push push dec ljmp add add sub push andb les repz pop pop (bad) shr add xor imul add in fcompl pop cmp sub enter xor fmul sbb sub aad mov jecxz pop gs xor push (bad) sub xchg test xchg mov mov add jmp shrb lock das in outsb cmp adc dec (bad) jns add sbb and xor mov cld in lods cmc cwtl aam test mov ret push pop and xchg idivl jmp mov adc mov xchg xchg popa decb mov lahf (bad) hlt mov add test or jns addr16 (bad) hlt adc or dec cltd clc sub mov ljmp fbld sbb cmp jle and inc jg sub xor pop jo insb pop xchg ret cli inc hlt jne icebp jge xchg sub bound cmp mov or mov xor enter repz add or cmc popf outsb pop pop sub loopne adc mov idivl xor push jae int test sbb jg negl xor rcrb xchg adc je lret sbb iret mov sbb cmp xor adc nop pop push fwait pop pop or xor mov jle cmp mov sti (bad) mov daa leave je (bad) cmp pop pushf imul add fisttp xor inc sti (bad) insb jnp xor fdivl xorb xchg fwait sbb adc adc push adc enter sbb add sub jo mov stc fildl call jl frndint push jno test (bad) jns arpl iret sbb aam frstor cli add add push pop or dec push pop inc insl cli enter (bad) xchg pop jge add push aad pop or xor mov sbb adc out stos jp sub xchg mov sub iret (bad) je mov push cli xchg mov xlat mov imulb (bad) jmp mov mov (bad) jmp xor mov ja shr mov loope mov xor in adc sbb incb xor xor push xor test push sbb aam ss in lahf add push xor xor xchg xor adc xchg or je and jp push adc scas mov cmc clc imul cmp out xor xlat pop sub xchg aam das mov or jno or ret mov out mov add fs mov cmp iretw ror lahf push inc sbb cmp sarb cmp sysexit adc loope and and std dec rep mov xor mov sbb pop dec jmp cwtl je repz lea add mov jle cmp xchg jo ret xor sahf xchg stc mov (bad) pop add xor stc pusha test and nop mov imul addr16 push aas inc and and xor xor pop popf dec (bad) pop cmp mov stc icebp hlt mov jns cmp sub jmp xor push or popf xor adc mov xor lock dec jo ds jg jo cmpsb pop jae notb jae push cmp inc mov test jge jg mov mov movl xor jg fild lea mov data16 push adc push (bad) decl sub test (bad) repz push (bad) jbe cmpsb (bad) out repnz push or cmp jnp pop mov (bad) xor call jno mov pop sbb jo (bad) jb outsl and aam cmp xchg std int3 push imul adc inc xor (bad) ss pop scas xor (bad) jp insl std ja push mov dec je xor cmpsb sub (bad) and (bad) sti cld jae mov push xor or aam das int ljmp scas add sahf fist (bad) xor push push xchg leave repz in lahf jns xchg cli imul int3 (bad) out mov sub aam dec ljmp push adc dec clc jno mov stos and loopne sbb mov aaa add ja fs out xor push lret (bad) repnz push lahf nop repnz mov insl dec xor xlat mov mov (bad) mov mov xlat push sub add dec cmpb jno int or ss (bad) sbb loopne mov mov mov dec mov xchg dec sbb jecxz mov outsl bswap es jo lock pcmpgtw cmp in push scas daa xor ds arpl andl jae mov sahf and mov stos pop sbb and push push sub in daa mov xchg into xchg push fisub mov ret sub mov xor inc into hlt jmp es daa lods add popf and ret sahf push lods icebp rorb adc xor dec add xor pop or cltd mov shlb xor ljmp adc outsb in rcrb xor mov sbb jno adc stos imul aam dec outsb mov xor push sahf push shlb jg cmc jb add shrl repz les int3 lea jo mov sub pusha push test sub xor dec cmp xchg jno mov mov mov or (bad) sbb lock xor adc cmp int in stc xchg popf and xchg push aam outsb rorb and or imul cmp mov icebp loopne push pop add xor cmp pushf (bad) jno test xor test sub mov push xchg stc aaa hlt cmc cmp add adc mov sbb mov ja sub pop sarl jb adc test adc mov outsb push pop or ret outsb adc add xor shlb or mov cld jl pusha data16 xor es cmp nop lahf les xchg dec pop dec mov mov and pusha popf mov xor lcall mov stc test xor xor popf divb jp sub pop inc jo out xor sub gs push push outsb and call movsl rcll xor xor outsb dec daa jne xor test clc pushf xor xchg je or ret dec inc adc call and clc dec daa imul sub xchg sarb sub bound jne repz sub xor rorb adc fistp xor cwtl outsb movsl cmp pop lret dec add jmp scas test loopne jge xor jb jle in mov lods xchg or lret stos pusha mov sbb mov dec out jecxz cltd xor mov sbb dec sub and mov nop out jecxz mov lahf xor mov sub roll repnz mov loopne adc fsubr mov mov mov fcmovb (bad) (bad) xor lods mov ja cs push aas or cmp std jmp sti adc mov stc mov jns push adc adc mov popa push or cwtl ljmp pop cmpsb clc daa xchg sbb or mov xor jg cmp add (bad) ret testl (bad) mov sub add aaa out pop jno ss vpaddusb mov mov add or in scas xchg dec mov xchg ds push fsts repnz (bad) mov sbb jge adc push sub and add add (bad) in mov xor icebp js movsl jne mov xchg cmp jns xor and js cmpsb dec xor lods loop xchg mov test je rolb ret inc fwait into lahf lret or mov in pop xchg dec push dec xor jl lods cli jb jb cld inc hlt push out ret xchg sub hlt cwtl icebp mov xchg pop and xor dec gs and inc adc enter push (bad) jbe les xor sbb mov push lock push mov mov xchg xchg jbe shr cli aas jge xor mov cmpb adc gs fwait xor aam adc cmp cli cmp jnp jb dec push or insl push pusha mov xor xchg mov fxtract jecxz lcall mov cmc xor jno xor ss push stos mov stos daa mov mov xor vpmuludq jno mov push add adc and xor jno outsb inc xor leave jns lds movsl mov arpl add sub cmp cwtl dec (bad) mov mov repnz pop jns pop ret fisubr ret xor adcl inc mov std test in jno add jb mov push mov (bad) add jle aad mov sbb jge mov sbb je cmp clc jns int jg (bad) dec mov loope xor and jg stos pop xor test sti bound jae,pt pop sub je and pop stos aaa out xor loop jb (bad) adc std or dec cmp or mov fsts mov and dec add add mov push xor sbb xor cs inc and lret or or inc aaa sub xor or xchg inc jae inc ss pop push popa adc sarl pop push mov pushf nop xchg jae sbb iret arpl fwait loop addr16 divl (bad) and mov cli or xor and xor adc xchg sub int3 inc dec add dec cld sbb xor xchg sbb mov sub enter sbb xchg inc push mov mov mov jbe es inc xchg cld test repnz aaa sbb inc aas adc pusha xchg pop xor adc test jp (bad) les pop lahf (bad) hlt inc cs mov sahf fsubr xlat arpl xor xor shrb cltd sbb or xor fxtract jb jnp and adc insb loope,pn sub bound add jg cmpsb test test xor jl push gs sbb ds mov mov xchg in sbb xor ss pop or enter jle xor push jl (bad) jae nop out fiaddl adc ds fisubr mov sbb sub dec test (bad) jnp jne inc scas xor mov cld mov ficoml jns add mov xor mov fsubrl popa mov jbe push insb push (bad) xor movsw adc outsl adc arpl test lret das fimul sub xchg mov mov xor cmp xchg dec je into or (bad) and je xchg jbe jg hlt rorb (bad) xchg jmp sti test je cmpsb push dec mov jnp imul sarl inc or jmp icebp mov jno sub mov aaa lret inc lahf xchg cld fucomp test mov pusha mov dec push jns xor adc sti ja rorl mov sbb sub outsl pop (bad) lds mov ficom xor mov pop shrl test and jnp push cltd imul in xor leave mov xchg pop popl dec hlt gs inc xchg imul sub or test sbb adc mov stos mov xor (bad) sub jo sbb (bad) test nopl fcoml cmpb scas ja jecxz xor jl xor pusha out mov mov gs xor fbld sbb cmp js adc and jb and cld mov sbb mov sbb xchg mov inc cwtl nop jmp xor imul mov jb sub xor je xchg js cli lea jno and (bad) mov and imul (bad) adc sbb adc dec (bad) sti push jne (bad) stos insl xor outsl and fisub xchg xor in lret out hlt repnz and js xchg pop inc int3 xor cmpsb pop xchg cli jo hlt in jl xor fnsave fcompl rcrb (bad) jae imul cmp inc dec jno mov out xchg cwtl int cld lds adc and loop push std jmp push shll jle mov xchg pop lret inc jno cmp sahf in mov xor insb pop pop sub mov add bound adc sti divl xchg scas outsl cmp sub pusha dec push cmp mov dec ss (bad) cmc adc mov dec daa lods mov dec mov dec shrb jge add mov adc add xchg imul repnz mov jmp ja (bad) push xor jle outsb xor xor xor push add in fwait add mov inc xchg inc xchg dec adc xor mov popf scas aad (bad) push inc call xchg cld leave call adc cmp (bad) push out rorb sti xchg jmp xor jne mov (bad) hlt xchg out (bad) fisttpll lods sub sar adc xor lock mov incl (bad) fsub mov fs add jns add xor rcrb mov push push mov iret test je movhps xchg fldt aad and cmpsl or aam scas mov (bad) jmp pop addb pop mov cmp lods push insl jp sahf jno cmp pop adc xchg sub mov push pushf add xor stos outsl arpl add mov add jmp pop mov hlt mov jg adc pop fldenv or xor adc icebp andb jl xchg dec das loop in pop enter dec xor inc jbe pop or (bad) in subb xor adc das push inc xor movsl int xor rol pslld mov or and mov fcomps test xor sbb inc stc xor out xchg jo icebp loopne xor jmp push sbb popf clc adc push xor lods daa cmp xor sub inc daa add jbe sbb and add stc xchg test mov cmp aaa ss pop xchg jmp mov push pop push add pop mov sbb les test sub insl mov jb repnz jno or jg mov mov ljmp pushf mov ds lods or sarl dec jb lret aam mov jge imul outsb fidivl imul xchg sahf cld imul (bad) test cli push inc mov sahf pushf test mov sbb fnsave mov mov xchg je cmpsl fimull mov pop jmp in adc test inc ss dec pop ficom inc or mov stos xchg xor or into (bad) sub mov ffreep inc movsb dec cmpsl mov call icebp repnz decb cmp jo push cmp arpl cmp outsl inc xor jne jno mov mov (bad) or jl add gs cmp jle (bad) lret (bad) sahf push mov fsts (bad) repnz and inc jbe inc faddl mov cli rcrl addr16 mov iret (bad) popa (bad) and ss rcl enter mov xor sub (bad) mov in mov xchg js (bad) jmp add mov cltd stc sub js (bad) repnz enter out clc xor mov jmp addr16 repnz jmp push push mov dec push push push call (bad) scas dec mov rcl inc push pop adc dec repz or mov mov mov jae ret sub mov enter out sub jmp popa mov (bad) jmp xor xor push xchg ja sub hlt mov adc cmp mov mov mov xor fsubs pop mov push int3 rcrl aaa mov add imul jae hlt das nop sbb and jno jbe xor pushf mov sbb sub adc lea jmp lock jo hlt sbb (bad) out mov and mov sahf rorb pop leave js stos into imul stos or push pop push gs sub das xchg inc push cmp inc xor mov pop test loope cmp fs cmp movsb push lahf add popf pop cld and and in in (bad) xchg xchg out outsb loopne lods mov mov inc fidivl or push fnstenv in mov inc imul notb pop pop xor sub sub or ds mov cld test test ja and repnz gs ret pusha inc jne repnz xor inc xor jb push dec jae arpl ljmp cwtl mov and inc jl xor push add xor jb lods add and add jg aam mulb std movsl imul hlt sbbb je jae int3 clc xlat pop inc out arpl xor mov repz xor lods jb lret lcall push push adc movsb dec xor (bad) fbstp pop (bad) int in sahf clc out js popf das mov sbb enter imul lods hlt inc pop or inc inc cwtl insl or mov mov mov movb add lcall aad jle pop mov xchg push mov divps and pop mov push sub jne cld pop or or popa adc xor xchg push mov inc repz adc orb push cltd dec clc cmc daa (bad) mov clc into movsl jecxz add jno xor dec jno cmpsb rorb je out (bad) mov and pop mov int ret sub or cwtl fidivrl sbb jbe jle icebp lods fistpll dec adc xor xchg out hlt mov adc (bad) std jb jle xor jae mov iret jb pop (bad) fdivl lahf shl int3 repz mov pop xor int xor pop cmp lret xor loope push add sub mov pop push xor cmp dec xor iret mov dec sti data16 xor push sti cmp iret (bad) fidivl add ja jl ss sbb xor add push xor shr mov outsl test (bad) (bad) aaa bnd pop adc xor cli push xor inc je adc cs cmp mov sbb in movsl mov das in xchg mov sub add cmp sub cmpl inc adc adc mov in pusha aad xor xchg xor cmc mov repz (bad) jecxz dec hlt aas cmp mov adc cld lock or clc adc fnsave inc xor cmp jp adc sub adc push iret (bad) repnz (bad) ret adc push xor or xchg xor gs (bad) std xor mov mov sub pushf pop loop movsl (bad) xor mov inc cmp and pop xorl jmp xor test push aas xor xchg add push cld aam jge insl and cmp xchg (bad) outsb jo loope and xlat stos mov movsl shl imul and xor jno test mov add jae push sub sbb dec push mov (bad) mov (bad) mov imul dec iret fnop mov xchg test lahf sub adc bound je lahf adc adc and sahf xchg hlt jno in outsb xor sub scas je or stc (bad) and ja aad mov into mov pusha and nop ror (bad) pusha mov or in push jecxz adc into aad mov repz mov jp xlat dec or sahf mov mov add mov pop jl es adc mov js xor imul lods push arpl mov leave movsl les sub push (bad) and lahf jno (bad) jmp rol xlat jmp sahf movsb cld sub mov ficomp push orb into add movsb test fwait rorb lods bound (bad) adc xchg mov jbe mov or btr mov dec idivl mov adc leave or sbb js out sbb dec sub sbb add and mov xor push in loopne sbb or mov lods pop sbb xor cmp mov push cmc movsb xor mov push hlt xchg cld sti or popa sbb jo fs jae bound mov sbb sbb subb jnp lret hlt add ficompl clc mov aas sti subl inc xchg stos nop/reserved dec rol dec add movsl std xor clc pop pop arpl rclb and std cs xor adc insb jns xchg out out je pop push adc leave pop (bad) pop cmp repnz mov clc inc int3 loopne std jl xor std cmp xchg inc clc dec aad and imul cmp stos or xor mov lea mov jg or (bad) xor cli or stc popa lcall divl or enter outsb gs hlt jbe clc ficoml xor andl cmpsl adc push ss movsb rcrb mov lods push mov je sub jns cmpsb adc jno repz sub aam xchg mov or mov push jg push cs dec clc push lods aad ss xor sbb ds repnz cmp mov aas into mov push dec dec dec stc jns je and lds imul cmp mov lea sbb es jb inc jae mov add push and aaa jb lods adc pop inc cmp jae cwtl loope dec movsl insl push jne in xor sub sti mov cmc fadd into (bad) fs insl xchg and add xor scas jb jl icebp hlt loope inc fldcw bnd clc fs sbb mov add xor mov inc cmc jae lds and push add (bad) adc out dec decb out nop into cmp movd mov cmp scas xor jl xor nop leave push pushf lods inc roll adc iret loop push cmp stos stc add mov xor pop insl popf mov push fidivl jae and repnz ljmp les test adc ror xor gs jge add cmp sbb xor ja jns clc lods adc adc jp jmp xor mov push jl cmp fnstcw incl std in push pop cld inc push stc aad and mov mov sbb cli in or xchg adc sarl push scas sbb and inc adc sbb movsb (bad) cld test inc les (bad) xor in pop call pop mov xor vsubsd aad mov inc xor or mov loopne push push scas mov dec (bad) invd nop jmp (bad) mov jno sarb dec inc loope and int3 lahf (bad) mov xchg (bad) dec mov add cmpsl idivl mov xor imul cli sbb pop adc adc out or loopne,pn sub mov outsb mov push lret xchg jb mov jmp mov jo iret xor (bad) jne repz mov loop push pop lret ret push pop or jo lods cmp cmpsl and mov (bad) and nop outsb xor push xchg jge cmc mov mov lods dec cld mov je repz xor mov sbbb sub xor add push dec insb xor outsl and jno dec adc popf (bad) leave jns test pusha sub push jge cmp mov cld stos outsb xor shr es adc xchg push xlat je jle aas xor jb (bad) xor jge test mov mul adc lock repnz mov loop mov lea out jmp clc jecxz popa jmp mov movsl cs inc push dec xor in jl aaa loopne mov mov hlt bound mov and lea ret ja xchg shl sbb pop gs or cltd cmp sub and (bad) insl mov into push xor adc cli je cmp jp push pop inc ret mov push (bad) sub out jb xor push lahf leave shrb in rclb xor add popa mov les cmp frstor jns test (bad) repz adc mov mov fs add rcl loopne hlt pop ljmp out sub cld dec jae iret cld setns repnz scas lret out jl xor lock cmp mov xchg dec fldcw push repnz jnp imul xor xor nop or in stc jmp mov sbb out mov mov pusha fsubrs cmp int xor and jle cmp jns in push sbb (bad) sub pop add dec dec jmp xor aas in mov std loope js imul jecxz popf sub je jb sbb mov xor xor pop rolb out loopne sub cmp xor addl sbb jp xchg imul cli (bad) int inc adc dec lods push lea sti bound leave mov rcll push call xchg loope push insl inc cld mov xchg mov je sbb fiaddl xchg stos inc jl inc loopne repnz sub pop test orl sbb xchg rol movsl add lcall jae leave and jno mov xor dec adc cli lcall and mov pop cmp icebp pop add out add repnz and inc loopne or add mov push sbb sbb push adc mov repnz add mov or add dec (bad) or pop mov inc repnz enter mov ss and push cmpsl mov gs dec pop sarb scas jae mov loopne iret push andb adc push add or fbld notb mov imul cmp out mov sub pushf inc sbb repz adc push mov fcmovu rcr xchg xlat jno inc mov inc and lfs lds jo sahf (bad) icebp inc mov stc (bad) adc adc adc push cmp imul pop and aam inc jnp lods dec mov push mov aad sti or test ret in loope stos int xchg and es push je inc cli jb sbb jbe pop pushf push and jo daa cmp add adc push mov jge mov pushf adc pop jno mov add jo push sbb aaa int3 ret sbb lods mov dec mov je inc jo cli pop out xor movsb (bad) and ss ret sub int3 test enter ss mov add jno jnp loope loop sub insl mov sbb out jo je xchg lret (bad) push mov pushf es cmp xchg daa cli pusha std and mov into mov lea sbb jle jb pusha int mov mov mov mov adc dec ja sub pop adc adc xor and push mov cs dec jp mov push rcrb and notl adc push push nop jb xchg popf xor push pop aas xchg cmp push xor and jo loopne loop adc out sub (bad) push inc jne or jae fs xor adcl int dec (bad) xor loope jb pop dec iret jo scas xor push cmpsl cmp icebp cmp fbld jae out mov push sarb inc movsb mov fnsave fidiv jge push jo mov mov mov insl lret fldl lsl dec dec xchg dec dec in fmul jl jge ret push je addr16 mov popf xchg fbld test cli cmp and or pop ds xchg ljmp mov sub sub aad push xor cmpsb enter add pop sti push xor xor xor cltd and lock jp fnstsw fild adc and cmp push inc xchg jae lret xor addr16 push jle and sbb sbb out xor mov sbb std (bad) out inc sub hlt ficoml and lods cli pop cmpsl daa (bad) xor mov aad mov test xchg sbbl (bad) and xchg sbb pop add callw lods or lods aad lods jb ffree mov popa and adc test shrb or push shl (bad) xor xorl xchg cwtl fstps xor cli mov lea adc lds mov xchg movsl std sub arpl push ss cmpsl add or scas (bad) clc jne dec cld add sbbb xchg jecxz ret cli cmp arpl pop jnp mov mov (bad) lret mov and out repz and data16 cmpsl mov xor (bad) sbb divl sahf dec pusha in das retw cmp aaa jns mov addl imul aas dec pushf dec dec xor into and bound hlt mov test dec sbb jae cmpl fisub sahf inc incl (bad) je cltd adc adc mov xor imul xor jb (bad) jb adc pop lods sub xchg repnz jno clc pop xor xor movsb insb xor jge push test push movsl test int xor dec push mov xor lock (bad) into xor adc bound cmp divl insl xchg adc pop cwtl int xchg xor push adc or mov popf jne fcmovnu lods lret sbb jns add pop fs adc adcb xor cmp xor or pop jmp or and jb aaa pop pop int3 or aad sub andb ds cmp mov xchg mov and fldl2t daa icebp imul sbb add jno hlt enter cmp aaa pop sbb les inc jl mov add add mov iret jns ljmp adc sbb repnz mov repz and (bad) ss push fimul arpl pop dec jae hlt mov scas jns push xlat aas or mov xchg roll sub iret sub xchg mov or lock pop aam (bad) dec mov in mov cwtl mov cwtl outsl (bad) jmp add sbb sbb cmp xchg jno sub and mov ja call aas roll push sbb in cmc pusha pop sbb jb inc push and dec mov push and xchg (bad) mov sub popf mov jp sbb cmp pop daa lods lods es sbb sbb js test and push xlat jb imul adc (bad) enter mov add lods fdivr fucomip test div dec je add adc cmpsl add (bad) push add and sub adc aam add xor lods sarb jae pop into int3 jge outsl and out sbb gs out lcall adc xchg mov add jae push stos xlat psubsw sbb stos xor lret repz xchg push mov mov inc imul dec icebp nop cmp and adc lds sbb xchg lock daa adc rolb pop jp imull push mov lcall jae fnstcw or add imul outsl pop xor lea je aad int3 xor out mov inc pop and cld fs aaa xor sbbl jno dec mov xor movsb jnp mov cmp jp inc jge in inc add dec mov aam loop xor jle repz lahf dec xor in les xor jbe mov rol imul pop in repz push add pop int3 bound not (bad) aam loope push xor sbb cmp xor test aad and popa add mov dec ret (bad) jp add cmpsb repz lahf sti add xor lods push dec cmp pop int scas je mov pop sti or cmp pop lods push pop mov xchg pop ja dec repnz xor es in pop mov dec push inc adc mov or inc dec xor (bad) xor mov (bad) jae leave icebp lock test or jmp popa or cmp xor sbb ficom add or xor or mov ret hlt cmp ret push jno or xor shrb xor out jl xor clc scas repnz subl (bad) fwait cmc dec inc loopne mov dec sbb and mov add xchg repz in xor push xlat ror mov loopne mov clc outsb and fs imul and inc jecxz sbb ljmp pop sti pusha aad insb inc shrb mov adc sbb es movsl pop arpl nop pop andb imul or or pop test repnz pusha pop pop arpl addr16 sub sbb jle mov inc js imul jmp out aad xor pop leave in xor jns sbb xor or push cld (bad) xor cli sti xchg xor push divb in mov and lods stc pop fwait cmp jbe adcb fcomip pop into fiadd das push jg and add ja addl sarl pop xor pop jae subl dec add jno cmp outsb push cld lock gs or cmc aam fucomp ljmp jns pop je sub test nop in addr16 movsb pusha das sbb pop addl mov pop test add out mov cmp xor stc pusha outsl and xor or pop xchg and fbld inc adc mov push push adc inc add pop mov mov scas xor in dec mov inc sti setg xor sbb outsl xor push adc push mov or and and adc int idiv mov stos sub gs clc push mov jns mov jno or adc out mov testl hlt cmp (bad) fsubrs xlat xor pop fldcw (bad) xor out dec push xor sbb movb xchg xchg inc insl repz mov jmp mov pop pop xchg inc sub add stc movsb xor mov test testl xchg lds cmp cld insl xchg or jmp xor pop out imul ljmp ss pop movsb cmc pop adc cmp jg daa fisubrl imul jns ljmp adc and in xor mov sar jns xor inc and addr16 jae movsb frstor lahf shr loopne roll xor mul int xchg cld sti and repz (bad) mov repnz sub sbb test mov ljmp leave sahf lcall mov clc cmc ljmp xor addr16 mov mov fwait addb push adc inc mov push les mov (bad) pop and adc adc add repnz out sub jp scas dec std xchg insl ret out mov (bad) popf push or aas mov xlat ja cmpsl sbb push sub xor cwtl shr mov xlat inc rclb jo ljmp push and cltd hlt cmp adc cmpsl (bad) pop bound jo mov mov ljmp lods adc xchg and repz jae pushl xlat icebp fs in sbb sbbl aam sarb ljmp mov fwait ljmp cli or test cwtl mov gs mov adc sbb lock std jne stos out cmp sub rorb int adc mull popf std push push xchg shlb sbb mov jp aas mov hlt in (bad) adc (bad) outsb inc adc test daa add adc jecxz mov push push add aaa sbb cmpsb inc adc dec sbb lock jg add adc repnz fbstp ret test outsl mov cli sbb dec and test cmp lret sar in mov fwait xchg loopne aaa mov and dec (bad) aaa push fldenv inc jae movb stos or aam sbb jge out stos and cld lea xor es xor jg daa xchg clc jb lret rcrl xor xor inc and cmpsb mov repz daa push xchg pop xor incb scas pop mov aam jb push out cmp arpl jle stos ss inc jo test and and and icebp or inc outsl push mov lcall inc xor js add dec push outsl dec pop hlt fadd fmull aam jmp pop roll xor and lcall and sbb xor sub push daa push fs mov pop push cmc les aam ficompl jo mov xor (bad) test add test sub push in mov adc xchg jbe sbb add jno stc out lret xchg adc mov mov aam cld pop out jns imul push cmp notb in fcoms or jno in xor or mov clc push sti push stc cwtl jnp jmp xor sub bound ss fsubrl sub pop mov pop jae inc ljmp (bad) adc popf hlt and xor fstpl popa inc mov mov imul dec push arpl xor clc pop addr16 loope mov xor (bad) dec cmp dec bound pop mov push xor push das imul testl xlat aad xchg fs inc ffreep xchg fwait mov xchg adc dec jo jmp or jb push xchg popf cli rol xchg icebp lret loopne rcr test out xchg add push jno je int adc sbb mov pushf ret xor stos inc scas cmc xor js dec pop xor add ljmp mov adc jne mov add jae repnz test cld mov sub in jle push inc pusha dec push inc aam mov loopne or mov (bad) fmuls clc cs cmpsb shll xchg scas mov sbb out in pop jle and fild sub adc sahf cld mov push add mov cmp jp out add hlt ss xor or fstl push outsl mov mov fcmovnu or xrelease orb icebp mov clc or jmp insl dec jmp test sti xor sbb mov xor mov mov jb xlat fs cli mov push je in (bad) sub aaa js cmc xor mov (bad) sysexit ja jge push cmp inc cmp fxam xor sahf push ja xor add or jp lret fidiv mov aas xchg xlat test or arpl (bad) fs cmp pop icebp push fnstcw mov xor inc daa fidivrl movsb aad dec dec test pop pop mov dec mov jge pop repnz fbstp xlat adc xor xor cld inc fidivrl adc mov adc xchg adc lahf es xor pop or stc mov mov xchg jo push (bad) repnz push xchg mov dec inc add add fdivrs addr16 push repz inc jae pop mov sbb fild inc adc in adc repnz popf sub std fist dec popf das jle hlt pop lock pop stc mov fwait sysexit add push inc push inc fimul mov jb inc (bad) adc gs lods push add in mov push in lds mov jmp bound xor dec stos data16 outsl jecxz xor cld stc jg sub gs mov xor js inc lods or rcl aam and pop xor stos push insb inc js xor enter pop (bad) xor sbb rcrl cmp push arpl dec mov jecxz mov (bad) mov adc inc mov outsb ss leave sbb cli and jb (bad) je xchg xchg ss cmp ja mov inc adc sbb fdivl dec sbb inc sbb jg repnz hlt mov cmpsl repz nop mov daa mov enter mov push ret (bad) aam pop mov and fsubl cld sahf loope imul jb or ret aad push cmp lods hlt int mov push sbb cmpsb jmp push push nop fnsave cmpsb (bad) sbb sahf arpl sub inc pop repnz repz sar jo (bad) cmp arpl es pop jmp (bad) (bad) mov inc sbb add bound mov xor repnz xor mov jmp sub add bnd mov pop jnp xlat in xor daa int3 std mov dec ljmp pop mov jb test (bad) cli ret sub xlat (bad) cmp cld pop jnp or mov ds sub sub or sub aaa sub push push mov sbb jae shlb and xchg fdivrl mov cwtl adc loop into jno movlps dec jl push jecxz mov cmp js xor cmc or nop packsswb mov insl push inc sahf adc les xchg mov pushf cltd xchg aad mov cli ret outsl and mov nop aaa test xor mov push fsubrp push and mov add movsb push cli bound aam xchg mov cmp mov mov (bad) (bad) mov (bad) iret push adc jle gs pop cs jg sub jmp mov int (bad) sbb pop xor add and jae push and dec adc cmp clc (bad) sbb mov jns sbb sbb mov lahf sbb jmp mov xchg mov pushl sbb mov xlat pop mov sub insl pop dec jle sub mov mov pushf jg xor (bad) xlat ret lret popf mov sahf xor icebp incl stos sub clc mov pop fidiv in jecxz add hlt lock (bad) xor and sbb xchg dec inc or mov repnz push shl jb push icebp pop jmp cmp push subl popa add inc jbe mov xchg mov test aad or je xor (bad) lret test jl leave dec loopne outsb and adc ds xchg mov hlt sub int3 pop and or xor (bad) int imul incb pop jge aad sbb enter mov inc pcmpgtd es sbb cmpsl adc pop das lret out xor inc push mov cmc jl rol enter out in dec fwait xchg stos xor mov mov icebp jbe out repz xor jb sub rol cs and sub js cld packuswb xor push mov xchg gs inc sbb cli push call scas jge sti and jns loope movsb mov pusha adc cmc adc pop insl xor cmpsb or and mov aam fwait pop out sbb push es cld aam sub aad aaa leave or sub aaa popa mov stos hlt sbb mov subl inc pop gs stos xor adc xor mov mov aam popf inc mov jmp iret mov dec xchg sub add shlb pop sbb imul and cmp adc sub sub (bad) pop repz pusha cli sbb les aas and shll sub movsl adc and sbb jle lds adc add repz pop adc out and mov adc (bad) mov adc jecxz mov hlt rcrb pop sbb les dec rcr sbb out lods in pop cmp mov fsubr out push lock pop mov pushf cmc test repz incb or jae (bad) cmpb jb decb (bad) xor sub (bad) ds push cmp pushf xchg inc xor pushf xor push mov mov mov mov lret shrl push mov iret adc outsl xchg and adc data16 jb dec mov movsl cmp add pop dec xor aad imul mov sbb jl subl movsb hlt hlt cli push push fbstp adc and insl sbb mov je shlb pop es and cmpsb std into cmp movsl pusha adc push (bad) ds ss mov das out xor ror mov (bad) or dec mov cli das sahf pop sub jo daa add xchg out jge cwtl xchg xor lds jno add xor lahf sub inc imul sub out (bad) (bad) xor mov add lcall cmp aad andl mov sub and mov push add lods pop push mov insl jle stos std jmp in cli push (bad) in aas lret jg sub repnz add jl mov mov repnz movnti outsb rcrb aam push into sub mov cmc imul mov repz mov mov nop or dec ficom aam out stos push lret lahf mov fdivl inc lcall pop mov dec enter xor or fdivl mov mov pushf js mov and inc fiaddl mov inc nop cmpsb mov mov push jge xchg xlat les xchg je ds pop dec adc jge mov mov (bad) les jae jmp (bad) dec sbb mov xchg push cmp ficomp sub inc mov mov sub xor xor push mov jo jno sub lret cld out loop inc into sbb pop in push movsb xor cld popa pop cmc pop dec je pop inc ljmp mov enter or xor neg or add xor in jne fsub mov adc xchg mov push bound aas in mov lcall jae jnp xor dec inc dec movsb xor mov (bad) loop aam adc xor (bad) xchg (bad) cld rcrb xor sub xor sbb subb sbb inc loopne lret lcall mov aaa clc sbb stos xchg mov sbb arpl movsb xlat adc hlt mov stos adc shlb push mov dec insb insl pop mov pop sbb in and cwtl xor dec pop cmp mov imul xchg adc in (bad) jp xchg and scas js int3 push loope jnp fwait sbb cmp enter xchg jb call pop imul hlt inc dec cmc sbb imul jmp les clc (bad) icebp das cwtl mov sarl xor mov in popf mov loope pop ret je sbb es pop adc jecxz mov roll push cmc xlat hlt test ljmp lds and add ljmp push cmp mov dec repnz pop or leave inc mov pop or imul rcrb jb cmp (bad) mov dec (bad) movsl xor in in xchg cli inc inc xchg hlt pushf bswap testb dec cwtl pop leave jle outsb stos fcoms scas lcall add cwtl test imul int shll or in stos mov push scas test ror mov clc mov jge mov fnsave aaa jae ds xor push and ja push and out jecxz lret hlt or in push and shr or sbb gs adc jne add cs xor sahf xor shl adc inc xor sub pop arpl cld outsb jp das cmpsb popf push sbb dec xor lock int sahf xor sahf pop test int3 dec stos clc fwait jae aaa cld jge shr jg xor lahf and fidivl or jle sub das fwait dec lret jo and insl or pushf imul sbb jns xor pusha popf or pop int or mov push popf sbb xchg gs dec pop clc (bad) pop sahf xor ljmp xchg arpl and fnsave test popa je pop mov fchs hlt fildl stc sbb repz cs add out push lret stos mov add jbe test pushf xor (bad) mov xor stc cmpb jmp push mov hlt or ret adc add icebp cltd xor call pop aas hlt adcb ret pop mulb (bad) jae mov in mov cld xor dec push adc pand in jl or stc out repnz out (bad) clc pop (bad) jmp jne movsb leave je or int daa inc xor and xchg jns repnz jecxz adc sahf sub lahf fs xchg sub loop gs ficoml int3 jmp repnz mov popa imul lods mov out xor (bad) aaa jmp pop and inc pop imul hlt imulb and dec ret cmp mov or jg lds fld pop jo xor xchg mov into jne mov sub add addr16 xchg xor sahf inc ja test mov sbb pop sbb sub scas (bad) and inc sti mov xor icebp xchg pop and mov call lods stos stc pop cmp out xor xchg (bad) je push push outsl push ret or and hlt cltd xor adc ret sbb inc mov xlat xor mov mov xchg sbb xorb add add repz jne lret in lret sbb repz imull sti pop mov sahf mov mov cmp xor aad xchg dec xor fcomps out pop cmpsb data16 mov push (bad) add add jg sbb xor push adc sbb mov mov cmp mov add mov int3 dec data16 mov es mov xchg xchg arpl (bad) pop mov test std lds mov stc leave xor cs xchg out fsts jg push rolb mov xor sub test std pusha into fsubs cltd adc out ficomp mov xor adc mov push imul inc insb push mov cmpsl push inc fnsave cli add rep js push jbe mov data16 adc popf push ja fucomip decl inc cld out (bad) fisub xor in mov in dec pop push push adc cltd test daa xchg mov cmp cli movl (bad) push inc mov xchg xor (bad) jl imul jb fucom lods inc out mov mov and ss nop leave cmc adc xor pop (bad) fsubl iret hlt and adc pusha push dec sbb pop pop pop push adc loop xlat and mov aad ret jne ds jne fstpt xor jae xor icebp test lea imul or je pop mov sahf rcl and outsb fs push adc lahf pusha nop rcrl mov jo adc xor mov flds or sbb imul xlat (bad) cmp stos (bad) jb cld test (bad) jmp les (bad) and (bad) fsubrl je stc fcmovne (bad) aas xor ret (bad) xor enter iret sbb mov xchg push enter das jo dec mov sub les sti add out lret adc cltd or insl je or cmp adc mov sub std mov cmp (bad) cmpsl lret scas sti jle ret test push iret aas les int3 jmp sub movsb das imul out shrb (bad) mov (bad) movsl adc xchg pop cld sahf push add or loop pop jns ljmp mov rorb mov inc adc xor mov in xor add lods (bad) adc stos lahf mov pop push mov stos fidiv adc cli les xchg dec pushf test push dec arpl (bad) stos cmc push leave mov repnz loope mov cmpsb jge adc mov xor hlt arpl repz les xchg mov test and (bad) cli mov sti daa fcoms pop fnstenv push inc adc je outsb dec xor push sub enter push call arpl add jae inc sub lods sub fs xchg xor mov ror (bad) aas nop dec xchg hlt xchg mov xor push (bad) pop jae arpl out sahf clc xchg push scas mov enter xchg addr16 adc and es dec or xor (bad) mov sbb aam lahf cmp pop adc insl dec mov sbb jb dec mov add or sbb addr16 cmp std xor bound ljmp sbb xor and inc repnz out lahf mov adc pop outsl std pop or jo xor lahf xchg in xchg into or push jmp sbb and jns mov cltd and and dec aaa mov cmp push mov push (bad) cld mov mov lods mov (bad) cmp (bad) xor adc jl je fnstcw push jl test jmp pop imul les mov xchg in rcrl push and sub dec lods xor cmp pop xor push or pop inc xchg mov push mov jecxz (bad) (bad) pop jb and inc inc addr16 pop in leave rclb in pop sub insb lcall not stos mov xchg in into jbe movsl pushf hlt lods pop sarl hlt ljmp sub ficoml sub out shll add sbb xor gs lahf out (bad) xor jae add xchg test xor xlat and psubsb out push clc sahf mov sbb xor add mov ljmp loopne jmp stos pop jl (bad) mov cmc cs sbb fidiv jae jno inc mov dec cmp icebp inc lcall jle aad out xor mov xchg loope pop pop jae inc and aas push ss jecxz scas (bad) xor ret xor icebp loop dec adc jmp outsb adc dec jne xor call jg mov dec xchg mov fcomi stos dec icebp xor add add ret inc sub and inc push es or push popf mov push je jp or pusha into add push fwait cli mov mov xor ds sbb stos daa xor fist add or insb (bad) jb jmp pusha and xor sbb fnstenv (bad) ss (bad) je mov and mov adc inc sub insb insl nop loopne jb ret adc insl xlat adc das sub mov mov mov pop cld add xchg dec xor fistpl add sahf push add fs xor xor mov in xor ret inc sbb push lods push aaa test mov inc sarb and es iret mov mov loopne adc sbb or (bad) std add cld dec test mov jns xor scas cld cmp je jo mov mov add aaa pop hlt stos xor sub and cwtl fisub sbb ret imul mov and popf pop xor xchg insb enter not (bad) lods mov daa fwait pop xchg mov xor (bad) out jmp pop xchg xor imul movsl fidivrl stc mov add xor sbb xor xor jl repz icebp dec lea ja daa jnp mov or (bad) je repnz cli jno xor loopne xchg lods add xchg xor imul jmp and dec xchg sub in add sub jb sti sub jge push or mov xor fildll jno inc mov dec out and sub jno adc fidivrl xchg mov dec add jo xor push inc pop add lds sbb inc fs inc lea xor test sbb pop xchg push push cmp into loop cmp or mov pop jae icebp xchg mov fisttp jmp je mov out inc dec ss cmp add frstor (bad) and sbb repnz add aam ds mov mov roll mov test cmp or sbb fcoms test pop xor loopne xor jno inc xor pop push xor push js jge jno repz jp lea xor pushf dec lret mov inc addr16 xor mov xlat stc push enter call mov ja (bad) or sub dec lret add sub and mov cli push in sbb into xlat movsl sub decb hlt bound or xor inc aaa mov xor or and adc es push fwait jle sbb jo sbb pop test mov adc (bad) push fbstp scas jae pop insl shlb adc dec inc mov pushl inc inc xor xchg add and mov xchg and jecxz scas aad mov frstor sub xor lret popf mov push or repnz gs adc clc lea fstpt je xchg test movsl mov lret loop mov out int3 aaa push icebp jge cmp int3 ficompl mov sti dec rorb es jp add adc xor cmpsb xchg in xor mov dec mov sti mov lahf hlt xlat stos or test jge jmp push dec pushf lahf cmp adc lret gs fbstp fmuls clc int addl movsb in pushf shr dec fisubl mov je cs or cli jo push pop jb pop push sbb xchg jle popa sub inc mov aaa inc jp jbe popa sbb rep dec xlat out xchg dec sbb test mov inc pop and adc mov xchg xlat rorl pop adc (bad) mov in arpl cltd sub and pop xor cmp pop imul jmp jno mov outsl es inc es and fisubr scas test cmp mov je jl inc outsb mov test mov das dec and mov rol hlt out je,pn mov inc stos fcmovnu adc popf sbb cmc divb mov out mov (bad) jne hlt inc cli ja hlt inc mov sarl test out xchg inc mov inc sbb jb out pop clc sub lock mov add popa out mov xchg push or sahf je aas push fsub push stos mov mov inc movsb andb adc es and sbb and adc sub mov out pop push mov cmp mov lea data16 mov push leave imull jb dec pop outsl pop jno gs cs inc (bad) push (bad) out cli dec mov and and add je lds mov into sarl lds mov dec xchg cli sub cmp push lret mov jno div or movsl (bad) imul fistp fwait xchg push and imul or and in xor (bad) jb dec mov adc add cmpsl (bad) in jns lahf cli sub pushf xchg and out aad stc sbb jne movsb aad mov mov adc and jge jmp jns sub std xchg dec cli je mov sub adc mov lds inc jae cltd test mov in mov xor mov outsb adc cmpsb dec enter sbb mov xor gs leave fstl or lods nop push jl or repz fist and fnsave mov ds add push and nop jbe insl lock out cmc add or rorb sbb dec sbb mov gs jecxz jne jae push push mov pop in sbb cmp jo dec repz fnstsw xor sahf push jb inc inc push adc xorl cmpsl cmpsb or xchg adcl cmp and hlt idivl andb sub pop mov push jl cmp js inc xchg add xchg test mov repnz xor dec push mov aas das enter cmp fs lods lock mov les dec incb daa xor int3 and mov std or jg mov push cmp push adc fsts xor test je xor mov or ds out (bad) xor cmpsb (bad) mov jae (bad) push test rcrl xor cli daa icebp cltd push imul mov into xor xchg (bad) xor in popf imul push sarl jp movl adc push mov or ficompl dec je or test hlt pop jae pop push fldt and mov (bad) sub je bound mov mov decb das stos data16 mov push mov clc adc xor in push add ret lock sbb stc nop sub mov (bad) stc rcll add fbstp sub xlat stos and or dec push iret or cld lahf movsl xor pop inc test jge and sub fucom aad and jl hlt (bad) pop cmp jno mov fbstp mov inc daa mov sti mov mov cmp es movsl movl adc pusha add loope mov sbb cltd sbb fstpt adc addr16 sub or jnp pop es jb pop (bad) jl clc xorl push adc loopne push dec inc outsl inc or movsb cmp mov or or jbe xor jns xor cmp mov xor xchg mov mov or sub je jp fdivp jbe xchg lds xor pop ficom cld xor jmp out jecxz cmp stos daa xor mov (bad) sti sahf iret lcall jecxz stos inc xor jno sub in imul add insb dec gs xor arpl hlt popa dec and jb xor sarb (bad) mov gs adc scas push cmp jno bnd ljmp cmp xlat pop jp add xchg jns mov sub mov cmpsb (bad) mov xor add xorb sub adc sbb pop adc sahf sbb rorb iret aam daa jecxz negl scas mov enter sahf lcall xor xchg and xchg xchg and bound cmp int mov mov ljmp mov (bad) hlt aad out and test adc adc dec xor mov dec xor gs mov xchg daa hlt mov pop test gs mov scas int add mov xor lret into outsb (bad) adc and or lods sub fcompl test repz leave mov and aam rcr (bad) js xor or mov lahf jb fadd pop hlt mov mov nop jae (bad) in jp xor shll stos (bad) xor je lahf ftst das xor sbb (bad) cld test lds adc (bad) hlt xor enter das data16 xor mov mov dec jle xchg pop jmp inc movsl cwtl push sarl jp jns add xchg xchg int xor cmpsl adc jns int iret repnz mov repnz repz in repz addb add jle iret xorl repz loopne lret aas jb fildl lock roll lret jb fmull mov mov out outsb xor test xor ja xor mov push (bad) dec repnz outsb sub mov jg lret call or xchg xor je fwait mov cmc cmpsl ljmp scas clc fistpll xor or xchg inc aam lods std call sub add add mov mov nop mov nop loope insb and sub cmpsb inc or das test lea jmp cltd (bad) xor data16 dec test (bad) cld js inc es loope ja add (bad) mov or mov cmc mov dec xchg mov mov add xor adc sbb pushl xor pop pop cld push mov cmp sbb mov add (bad) jge subl pop in and mov es pop xor or ss daa inc es pushl (bad) (bad) cmp ljmp adc dec mov sbb xor add xor dec dec cmc insb cwtl jl jmp xlat xchg gs inc push hlt mov out stos popf sbb sbb movl jp cmc cltd shr cmp and jecxz,pn imul (bad) mov or adc cmpsb lcall repz xor lret inc mov sbb test push jno test sbb cld add dec movsb inc push pop xor imul and (bad) ja movsb add repnz mov inc ja mov cmp jne daa aam xor stc push xchg xor rolb cmp stos rdpmc inc jo or dec jo hlt js stos add dec xchg add out xchg es and ficomp dec push (bad) mov (bad) faddl xchg adc aaa xor bound add rorb sbb or ja mov fmull mov or inc jo orps pop mov daa cltd fistl mov or xchg mov pop jb adc adc xor mov clc data16 je (bad) adc jmp ja cmp icebp mov sub jmp mov repnz inc xor shrb loopne xor and xor mov inc xor sbb out int3 pop pop std cmpsb std les dec dec xor mov addr16 enter xchg sbb fcoml or cmc movsl insb dec mov add add adc add outsb mov js hlt add xchg nop push das jne mov ja repnz aas cld xor mov loopne sub and or xor ret es xor push jns into repz dec adc adc cmp inc dec xchg fnop adc dec xor das push pop insb imul (bad) xchg rolb mov xor je cmpsb cli test (bad) pop dec cmp sub jb aam fcoms jns popw and and and nop jmp jg xor mov dec daa movsl lret dec adc xor jge popf dec mov jns clc jge je xor jle hlt mov mov xchg lahf lds dec mov (bad) jp dec push lahf or mov adc adc or xlat jp rorb lock xor hlt ret xchg mov jne aam dec add repnz outsb inc scas pop xor inc test mov lret xor xor lds (bad) jno pushf hlt push xor movsb int3 mov fcmovnbe lcall xchg xor cmp xor fwait xor inc loope xchg mov popf mov out push xor push xorb fisttp sbb xor bound adc mov xor adc scas or fistpll dec sbb mov and lock lds xor shrb shlb xor sub dec inc xor xor jns (bad) cmpsb add out cmp xchg pop xorb adc insl inc nop sub adc adc mov mov test cld push or ja pop lds xchg (bad) xchg push mov mov xor pop push or push cmp jmp call (bad) popa dec cmp insb je imul cmp inc test gs pop insb das bswap xor mov dec or sub and xor xchg std fnsave imul xchg cmp (bad) adc outsb mov loop mov cmp lahf lret (bad) cmc fs and shrb aas cld jge dec rclb xor sbb sub mov cwtl (bad) ss inc cld inc mov or mov mov jo leave xor hlt aam pusha mov mov rorb lahf sar cwtl cli mov xchg bnd sub jno hlt mov test ret and pop popa cmc inc lahf repnz es xor lods subb cwtl std push pop shl or jae cs test or mov cmp test or js adc jle imul int3 sbb adc and mov and bnd jle scas jo push outsb dec hlt sbb int aad jg lret test imul xchg push sbb xor pop xor mov js and daa jbe cmp stos out shrl enter sbb sbb lods inc pop subb xchg outsb or hlt stos jl push pop cld push add dec xor rorl jo pusha sbb jns jle xor icebp fmull imul imul pop clc bound imul dec xor jecxz jb xor fs jno repz cmpb xor mov xor and mov inc sub jle iret aam imul xchg push inc rcll pop int xchg js cld mov mov std (bad) cld jo xor movsb mov aad xor sub das pop sub fcompl call or cmp mov imul das mov cmp out mov dec cli mov add (bad) mov imul lahf jecxz fadd dec scas sub popa cmp out pop arpl in xor lret pop and jae sbb (bad) stc stos cld xor pop add call lods pop mov clc mov or jge (bad) cmp aas movsb jp rcr pop xchg es and bnd adc out das pop push or std popa pop xor or cltd xor adc mov fnsave add aas adc mov adc std les sub cmpps jne mov mov sbb sahf repz jns xchg loop (bad) pop inc adc jae mov shlb add data16 movsb data16 mov jnp push dec repnz pop adc pop mov xchg cmc adc and dec pop adc or mov sbb mov mov sbb cmp and aaa ficoml xor das insl and into push test xor cmpsb pushf or and hlt jno dec jae sbb dec dec ret hlt dec jo xor das cmpsl xor inc push into pop xchg adc xor hlt jle ficoml and add enter sub mov push adc mov pop daa lods mov jno cmp gs cmp cmpsb adc (bad) aam ret sub mov or mov in les push push gs push xor push (bad) incb and inc es ja dec aad lahf push xor xor xchg rclb push pop add push dec (bad) fadds roll clc sti inc cmpsb push repnz dec repnz jae pusha sbb mov pop jnp es lds ja xor imul sub (bad) fchs add mov lret jp (bad) mov std pop mov imul push inc imul dec imul aad leave inc push dec jmp add cmp arpl cmp cmp jle out mov fdivl jge xchg push std xchg pusha sbbb nop insl mov into ret xchg cmp xchg dec add imul mov scas add dec andl cltd fbld xchg push push xor inc sbb sub inc movsl push ds imul rcrl sub ss push jb xchg mov cli aas movsl das xchg adc sbb into push cmp das subl out xchg or xor push imul popa xor adc dec cltd xor mov lea and adc hlt mov stos loope pushf push test scas ljmp loope inc adc pop cld pop adc in add or inc jbe cmp (bad) xchg sub test rolb dec (bad) xor test pop xchg mov xchg clc jecxz add test repnz sub inc adcb push pushl adc xor neg int3 gs adc nop cwtl or adc mov sbb mov xor inc add repz dec add (bad) (bad) clc out jae cmp dec inc test inc aaa sbb xor out xchg (bad) mov sbb test xchg mov pop xor or xchg and mov adc mov and aaa xor push fwait mov xor ret outsb daa dec popa jno clc pop les test add repz mov xchg jbe jp fmull pop adc xor stc push lds (bad) xor sbb jb xchg xor (bad) or and mov cld cmp cmp repz mov in dec adc ja fs mov lret clc inc mov jge test adc test sub sahf jnp stos push into loopne mov ret xchg enter mov adc lock add sbb in int ret jmp fadds loopne std pop or je pop (bad) aaa fsubrs lahf inc pop gs into xor jb cmpsb mov lret cmc xor jl inc push or lds jns das inc cmp andl push mov movsb mov prefetch inc cltd or xor addr16 inc push (bad) in adc jb jl and adc mov pop xlat in jb dec sub dec jp,pn aam int nop ror hlt inc cwtl mov jne xor jmp adc xor fs je mov sbb mov dec iret xor dec push or test aas loop mov add mov fistpl adc sarb test mov jl mov add iret adc mov add sbb leave enter xor (bad) fs insb ret hlt (bad) mov jl pop cmpb dec (bad) (bad) push inc adc je jmp jp jmp sbb aam test add and or mov mov adc (bad) or xor mov shl or mov inc adc rcll jae cmp (bad) cmc hlt xchg add hlt xlat lock cli xor cmpsb inc xor adc incl and pop sub add sub sub push pop idiv aas add iret cld jecxz adc scas cli aas lock ss sbb push or jne mov add arpl loop pop rcll dec xor les and and jb test pause out aam sbb wbinvd stos push mov stos sti xchg xor mov cmp mov and in sbb popa inc cmp jae,pt push inc adc cmp pop push dec aaa inc (bad) fsubp notl pop or rcl dec lock cli repnz sub mov divl xor pop loopne mov std movsl loope,pt daa mov and inc in sub or ret xor xchg test dec mov cmpsl aad jmp sub or lahf push cmp mov cld pusha mov mov stos cld enter pop xor (bad) bound ficom sbb pusha inc add inc imul jo add mov mov fdivs sbb cmp mov mov outsl in jnp (bad) cli jns sbb bound xor dec arpl mov mov stos aaa sahf jmp dec pop lret pushl jb xchg repnz das cmpsl pushl or gs adc add push clc cld rcr dec repz jp or clc adc xor aam cli inc mov jge mov jnp rclw xor lods in mov aas push hlt cld (bad) lret xchg xlat xchg mov nop leave jns insl and adc ret lahf adc in fsubp in xorl add pop add mov (bad) dec pusha test xor ds sub jmp pop sbb out cltd push mov mov dec sbb clc and aas mov inc xor dec lock repnz cmp adc in out je (bad) cmp xchg adc (bad) pop ja aaa dec stc (bad) xor push cld mov adc sub test (bad) sbb notl fiadd rcll xor stos outsb dec adc mov divb cltd push ss imul adc sbb dec cwtl shrb ret mov add aam cli pop push cwtl aam mov in xor sbb xor sub pushf jmp lcall xor inc sub add cmpsl dec xor pop xchg xor or leave test pop mov or sub (bad) xor lods dec mov icebp (bad) dec push mov mov cmc inc xor clc imull mov out mov call push push sub xorl mov pop sub addr16 sub test rorb mov inc sbb sub nop icebp mov sub mov jb xor xchg add mov and repz add cmc push scas (bad) xor les jg cli addr16 fistl ret in xor aad push or inc imull mov jae out sub outsl cli into icebp mov aam cmpsl inc test loope imulb dec fcoms mov xor iret xor push jle adc xor popa clc add int sbb mov cmpsl sahf sti cld pop imul stc pop sbb icebp mov jle mov inc sbb adc add push jne decb sbb push xor cmp ficom inc cld (bad) pop (bad) leave hlt inc mov or loopne xor jmp (bad) adc or outsb cld test pop addr16 cwtl push jb shrb insl sbb xor jnp mov inc imul cld orl lret ds mov inc fs dec imul or pop xor jne xchg jo push cmpsl test jge and shlb cmc xchg or inc mov (bad) mov fwait test push mov movsl ret cmp aas xor mov xchg div rcrb fmull mull xor insb jno mov and and mov pop adcl fdivl dec add jmp cld sahf fisttp mov jp sub leave xor daa jae frstor and pop clc fdivl lods std icebp xchg repnz sbb mov pop jnp test and xor pushf mov dec add xor mov je sti adcl cltd adc lods jbe sub xchg push and call or in mov mov and cmpsb sbb xchg in gs pusha xchg cmp jno add fbld aaa push or mov repnz push mov jl xchg ret push xor xchg jb add arpl fldenv ss adc cli repz sbb (bad) cli sub cmp and data16 stos movsl cltd or jp call and mov lcall int enter add imul jno dec repnz pop hlt test mov stc dec sbb flds adc add push sub push xchg imul fimull jb push sbb jnp and fcoms (bad) shlb cltd add inc jo mov movsb imul mov mov dec mov pop mov dec xlat pop or jae xor data16 dec lea jge or inc jmp mov hlt cli push sbb test mov dec mov mov sbb adc std mov ss aaa sub xlat bound pop push les xchg and inc pop add cmp push cld lods add push mov pop loope daa mov fildll xor push jo dec push rorl aad or lahf mov dec or insl xor aam dec jb sbb dec mov (bad) inc aad out xor inc cld lahf ret xchg (bad) xchg push hlt add es pop std add xor fwait ret add xor clc stos mov gs mov jmp push pop xchg adc popa repnz cld idivb iret add loop pop test adc inc lods adc shrb cmp icebp stc xorb fcompl iret sub out push into jle lret lock repz negl outsl movsl mov xor cmp sbb (bad) lret xor dec xor xor fwait (bad) dec mov pop (bad) sub pusha insl adc xor mov add lret jb adc push push push pop pop hlt imul and jno ljmp (bad) jo mov repz push (bad) clc push jecxz (bad) fistpl adc fstps ljmp pop dec lahf dec adc xor inc jl jns and dec xor adc cmp mov pop jne inc aas xor jbe xor mov cmp xor jb jo xor jne rcrl and leave repnz pop test popf mov cmc pop jb dec xchg and movd clc int dec aam mov add cmp out test loopne or add test add cmpsl ljmp jb cmp and insl test ss sub xor into repz inc outsl mov and pop and jmp add xor mov jg ja cmp xor leave jns pop enter or sub sub repnz xchg cs sub lock movsb in popf push or push repz inc fwait mov sub sbb sub adc push inc dec cmp pop mov xor and in mov ret pop pop iret mov lcall jle ret fmuls cld sahf data16 mov mov mov (bad) sbbb lahf (bad) cld sbb lea xorl xor repz xchg loop fcoms sub adc scas cmp xchg mov xor inc pop push cmp lods cmp jb mov inc out add ds adc xchg dec sbb adc push test sbb sbbl xchg cld ud1 xor stos push cli inc bound inc aad mov jo outsl inc nop mov jno inc test aas inc add sub in add add je jg mov push xchg mov jne je std dec xor mov or aaa rolb pop (bad) dec and (bad) push gs iret xchg cli fnstsw mov daa push pop pop repz in ds lods movsb repz nop mov dec adc sahf test sbb adc aam ss and gs ds fimul imul cwtl inc jo mov inc roll jno xchg add loopne adc ljmp mov pop xchg cmp push sub add aas lock fisubl mov or dec xor int in and jmp sbb (bad) leave sbb mov xchg sub repnz shrl out aam mov adc test pop jo loope mov push insl and in les movsb cmp sbb addb jnp or in push mov test lods es mov jnp mov mov aas je dec sub out mov fldl imul pushf and enter dec dec clc inc add xlat repz jle push pop fs jmp jno (bad) rorb cmp or add jg or push push je or and je test repnz pushf sbb mov jge and bound imul out xchg loope adc test lret jle test ss adc sub xchg xor sub iret xor xor jge pop xchg pop dec je jmp add jb sbb stc test lds add mov xor leave (bad) int les rcl iret rcll lea jmp outsb pop lock inc sbb mov aas xor es sub lock xor daa mov cwtl push pushf dec xor push cmp xchg xor ljmp inc xlat in into push je lods cld call fnstenv mov jo add push sbb mov ja ss jo jne add xchg hlt xor (bad) pop jae div psubsb jb adc mov mov jl ret (bad) stc cmp mov pushl jmp pop clc pop xor dec jbe imull push cld fcmovnu es and inc insb mov hlt test je cs jbe mov sbb int mov test dec jns repnz push jge lahf push (bad) jnp dec xor add push ds sbb aad jae addr16 popf or js (bad) push fdiv mov add je insl xorl inc hlt cmp out ret inc or mov inc push cli bound push or mov in push pop push cld mov test sub jmp decb aas sbb lcall sbb mov xor outsl dec jge jno or hlt popa dec in mov pop jae pop negb sub sbb ret rclb mov and and jno sahf clc xor arpl not sub je xor lds and nop inc jne jbe xor push or sbb lock cmp pusha pop addr16 xor xor mov jbe jg scas or mov (bad) mov shrb mov add mov xchg push lods sahf inc cmc sti pop or fistpl adc int3 jg and call sub and pop jge pop add (bad) mov popf (bad) insl sbb mov cmp or icebp movsl mov xchg jae loopne cmp aad or and xchg (bad) pop mov mov inc mov je cli movsl stc dec add cmc xor mov (bad) sarl adc xlat fdivrl mov push and add (bad) mov icebp icebp cli xchg outsl cld dec jecxz jg adc icebp mov mov stc fdivrl test iret mov popa cmp push imul adc into lret fcmove push test fstpl pop dec push (bad) dec xor adc pop sbb mulb jo pop gs jns call add jb enter fnstenv ss hlt out and sub push add fild pop push hlt mov (bad) ljmp mov jne push lret adc cltd dec lods add fcompl jmp xchg or jo jb loopne out sarb cli or cs or in loop or es mov and mov push gs ja stos xor push fisttpll inc xor (bad) je jnp and or lret aas cmp ret xor dec cmp sub enter inc (bad) fbld mov ds fs shrb cli sub push dec sahf ja mov std add out sbb loope jnp push mov and pop mov cmp das adc sbb pop (bad) mov repnz push les jae and cs or repnz or xchg stos sbb stc inc inc lret jae xchg cs outsb ja xor xor mov pop or adc xor pop jp inc mov jmp cld loope in mov and xor inc cmp je clc out jp or loop test inc cmp (bad) repz xchg repnz add sbb and sub addr16 mov ja or lcall mov clc idivl (bad) xor push inc imul jb into inc lods xor enter sti mov jne,pn lds xorl fisubr aas mov repnz sub lods add sub xorb sbb jecxz mov and gs jge je jbe and sub jo mov adc js mov (bad) xchg imul adc sbb fadd dec inc fsts mov pusha and mov add in ss jecxz pop inc fs add xor push popf outsb imul cmp invd mov loope out push add push xlat xor xor mov push jne inc pusha push adc mov jl pop and dec dec test in stos nop aaa pop das imul (bad) jno or sub jmpw sub out or hlt jmp mov sbb fild sbb hlt mov jg dec push and and (bad) jg inc adc push cmp pop repnz in push sub or ja cmp stos int pop jno adc cmc je mov pop loopne push aaa arpl push hlt xor sub jg jo cmc into popa push int xorl test dec aad xchg sub xchg sub inc push xlat add lret rolb cmp (bad) push cmp imul pop and dec cmp cmp dec mov cltd or iret pop cltd stos jl and cli adc xchg mov int3 add lock and xchg addr16 mov jmp (bad) xlat test jl mov mov sub pop in or cmp and xor cli pop cltd add dec or adc enter das xchg hlt sub jne inc neg les lock shrb mov lock lea inc sbb xorb mov cld loop or negb xor and pop mov push gs mov test (bad) fistpll scas or das jbe pop and shrb ret gs stc inc sub jle xor mov pop sub add ror stos daa nop imul add xchg jns mov or mov gs call add sbb lea je add inc or add push jle jo inc xor outsl mov mov mov sahf out and ljmp addl pop cld (bad) xor pop sub cltd cs xor or fist hlt jbe addr16 std xchg (bad) fdivl loopne xor mov dec sub xor push xor (bad) out bound or fwait pop mov int cmp add inc push push jo jb out xor or aam cmc aam cli pop xor lods xor popf bound push jmp ljmp push ja pop mov sti movsl jl int jne xlat icebp andb jle pop (bad) cmp pop ljmp jns add rolb hlt dec aaa es cmc adc xor sub imul and mov xchg cs movsl outsl stc mov (bad) dec add xor push sbb sub cltd mov pop repz bound and cmpsl dec clc xchg movsb in lcall or xor bound iret je popa adc test out xchg in adc fwait je mov adc pop les enter cmp lret and cmp push pop outsl lock xorl adc jnp push xchg xor es inc adc rcr add mov in andl jae test adc sbb jge xor jg (bad) gs fidiv insl xor sahf je pop pop xor pop add fnstenv push add xchg sbb add stos addr16 stc jp sti ss push jno xor or sbb repz (bad) lret aam and adc push sti pusha jno xchg dec aam lahf repnz jb push pushf fsubp adc in scas adc lret jno mov pop repz mov repz clc jnp faddp stc cmp int xor add cld xchg lret scas aad fwait sub sub mov cltd sub sbb inc or jbe pusha lds sahf repz stos fdivs mov push pushf jae mov inc cwtl add imul and add inc xchg (bad) xor dec xor jne jb xor push xor sbb frstor sub xor or push lods jmp dec lds test in int sahf cmp mov xchg movsl rcll jne popf mov call negb bound gs (bad) mov arpl cld dec add icebp lahf xchg xchg lahf sbb gs je sub pop xor imul (bad) stc in (bad) iret push xchg xor (bad) int3 jae xchg cmp movb pop rclb fptan (bad) jnp xor mov stos and mov sub dec fnstenv ds cmp and test into cld ss hlt jmp pop push and aam out scas jmp das push sbb adc mov dec mov imul cmp sub mov sbb pop test xchg popf in imul push lock movsl ror jb xchg mov jnp jge dec mov cld xor push mov iret cwtl push in mov sub sbbl inc dec hlt sbb xor leave out jmp popa popf leave sbb cmp std cli mov adc lret (bad) repz jmp mov xchg cmc xor mov stos sbb arpl ret mov mov mov cli das int3 jns adc adc fisttpl dec push mov sub sub mov mov lret jmp jns sbb out roll xlat push ds idivb mov adc nop mov mov pop lea lock or xor push add insl pop jle,pn mov mov cwtl xor adc push mov daa fcomip xchg cmp dec cli stos xchg xchg fdivrl ret xor test int fdiv sets shrb test adc pusha pop adc xorl xchg xor sbb sti fyl2x sub stc fidivrl cmp int repz push rorb pop fwait xor movsl sarb lea stc int3 add rorl cltd add in mov xor sbb (bad) adc (bad) and rolb sbb fwait jmp pop dec pop ja add pushf adc mov orb stos fistp jmp and cmp loop mov pop or fldl (bad) adc xchg scas (bad) xor into lcall add xor sbb (bad) dec mov push cmpsl inc mov in dec hlt xchg rcl (bad) add daa je inc mov mov or dec sub dec mov int xor cmp xor mov cmpsl pop inc aas pop fistpl jnp dec pop push maskmovq negl loope ffreep mov cmp mov cli (bad) xor jne mov sbb pop mov bound test xor sahf or jle mov adc jns fadds xchg xor ss imul ss insb pop aam sub (bad) jae mov data16 into or push clc jecxz pusha (bad) (bad) inc js jl (bad) (bad) pop mov inc mov mov cli fildll pop mov mov xlat sbb mov out or addl mov packssdw out or add sbb xor (bad) mov mov insl add sbb jno push inc jae jge mov xor repz mov sbb mov push pop pop push iret add sbb jle sbb int jl stc cmp pop inc inc xchg jns cwtl sbb arpl mov jb pop adc and add pushf (bad) xor sub mov shr pop pop adc rcrb rclb sti push mov dec repz xor jnp das xor and fildll clts ret pop push add mov jp xor (bad) cltd pop outsl xor mov es jl (bad) xor lea mov dec cmpsl push into mov das cmp lea xor push inc xor (bad) hlt in popa lcall sbb mov adcl outsb jl and xor jmp loop add aad repnz aam (bad) xchg mov xor mov and cmpb (bad) jne xor dec mov cmpsl xor clc xor add sahf push fwait (bad) mov cli addr16 jbe ret icebp xor mov outsl jle dec cmp (bad) mov (bad) pushf adc test imulb adc pusha cmpsb mov test leave adc hlt or dec mov jle lret or hlt mov push xchg ret jecxz pop and sbb divl rcrl xor add int clc xor dec jo das (bad) (bad) mov popf les or add jae pushf lds xor and sahf or aam mov push mov in int3 mov out inc sub cmc mov popf in xchg pop xchg sub sbb mov outsl pop push adc sub push pop (bad) xchg inc (bad) in les xlat jp scas clc xchg lret mov mov push mov add iret inc insl in or sbb in xor sbb js sbb clc push hlt mov call pop cmp xchg adc dec dec jp fidivl popf lahf push xor aas add xor pusha sbb cmp mov sbb jmp adc imul jo sbb mov fist xchg in mov in fmull cmp or sbb repz push push fcomps ljmp (bad) lock push xor dec sub inc add mov std sub jno or mov add push mov xchg (bad) push add xlat sbb and test in rorl in fimull inc mov push cmpb mov add xchg xchg int jae push gs idivl lds aas movl daa (bad) cmp daa push cmp sub bound jno jge lret mov sbb dec or and mov xchg test adc in daa hlt insb repnz (bad) adc pop inc rcr dec mov aam lcall push add ja je leave rol pop mov movsl sbbb (bad) mov jno imul pop in sar lcall sti js sbb shrb call cmpsl sub cli push jp jle aas lcall sahf rclb mov inc sbb int jl push add dec adc mov pusha jmp pop mov xor push ret faddp sub arpl jle push int pop mov sbb cmp xor pop and cs (bad) jno in inc or adc inc aad pop loop out movsb add mov mov imul mov nop test mov aas jmp pop inc dec das xchg pop pop into adc in movsl mov hlt mov xor mov dec dec sub gs imul mov frstor jns insb les (bad) repz adc inc loop sub je dec sub iret popf add jo ret (bad) xchg (bad) xchg jae repz imul xlat test and add and or jge xor or mov in ja rolb jge out pop ss jae test ds popf into imul push subb movsb pusha mov or sbb pop imul sub and vminsd daa outsb std (bad) jno pop fs or jno mov mov rclb push jg ja xor or xor add xor sub xchg jge hlt lahf test mov rol addr16 sbb call push jae addr16 add inc or or fwait add sub fimul leave mov dec xor into sbbl xor adc xor pop pop hlt lret xchg in ficomp xor bound sub mov cmpsb in xor call sbb sbb int3 xchg or imul sarb ljmp add and xor mov xchg dec mov pop xor popf and call add in cld cmc int daa dec daa lahf xor dec jbe push sbb jle loopne mov lods pop fcoms jmp lods add xor xchg fldenv ret or fcoml dec pop in cmc cmp das and lret dec xor push enter (bad) sbb and iret jae pop push sahf sbb xor (bad) iret xor push mov movb cld mov sub je jae test lea enter jle pop xor mov cwtl jae and cld popl mov cli jbe add jb rsqrtps pop jne (bad) cld and jg xchg or dec (bad) aaa in push repnz mov call test push mov push mov xchg fistpll mov loopw inc cld dec push movsb xor out xor mov cmp cli stos xor js xchg and insb xor mov test add inc inc cmp xor mov cmpsl xor pop and out jge pop xor xchg mov jb mov cld fs icebp je ds enter jne push fcomps aam pop adc adc movsl data16 rclb mov add inc cltd push test push cmc sbb xor scas movsl js xchg mov xor cmp mov int push xor dec jb mov pop andl clc jge adc xchg decb movsb mov sub hlt mov dec jnp movsl or mov pop pop sahf mov (bad) adc aad leave push shrl dec icebp add sub mov addr16 push sbb std mov sbb imul and mov mov push push es clc imul or cld sti imul std std ret test into addb (bad) xor jmp sbb xor out mov and sahf mov push inc es enter mov dec lret test mov fnstcw push pop add sub clc aaa and mov jg cmp add rcrl adc dec dec jl gs mov lcall sbb and lahf adcb stos cmp mov popf cmp adc and out nop lods or push and fs and pop sbb add push jne jo inc (bad) xor sbb xor loop jl cmc aaa push jnp inc repz inc sbb (bad) lods jb lcall fdivrl jnp test or aam fisub dec clc cmc dec cmc sbb jp subb in int3 xor xor add movsb adc sub mov cmp jns xor aas pop sahf sbb lret jbe cmp xor repz add push mov lds int3 xor mov (bad) cmpsb jb xchg push add sub hlt stos xor pusha es mov (bad) jmp cmp jne dec out add aas push rol mov lret xor icebp cwtl mov cld xchg sub scas ds leave sti sahf mov int3 lea in xchg push iret clc into mov cld decl sub push or lock dec xor call pop adc lcall insl nop add dec (bad) mov sbb mov (bad) or sub dec btrl inc sbb (bad) fwait pop je (bad) repz sub or push jmp ret xor cs mov or das loop test in xchg dec sub xchg xor mov xor fisub jnp fbstp ret mov xchg ljmp push and aad or inc lods jno mov pop push imul pop stc xor dec jae adc loopne or (bad) testb cmp lahf es bound fidivl loopne jne ljmp dec xor scas or push add inc lcall add das inc dec jle rorb inc xor dec sub fs mov cmp xor insb push int mov shlb lds mov rep pop addr16 leave pop xchg iret test xchg lcall lahf xor leave (bad) xor and add shlb cld pop aas das adc xor xchg xchg xor faddp pushf adc outsb push inc js repnz imul movl test mov push sbb and (bad) mov stos dec stc arpl dec push cmp dec add sub inc adc insl jmp mov in adc std push lret mov inc outsb cmp imul out aam adc xchg rcrl mov adc pop daa xchg repz (bad) mov dec insb lcall movsl jb aaa mov mov aas jmp out ljmp push jmp sahf mov sarl push rorb mov imul sub (bad) js inc pop push mov mov test rcll lock out dec mov je lods cli inc sub out sub or mov ds jb sub jmp jne jle outsb loopne stos sub cmp outsb inc (bad) lea xchg test xor and lahf ds jne rorl imul sarb nop jl movsl sub sbb (bad) je cmc jae (bad) iret testb push mov aaa pop mov in js and rcrb mov xor lods aaa scas cld jl jo xchg aaa je push mov push push push push xchg push xor mov movsb nop leave loop leave and push aad out inc loop pusha adc mov in mov in and aam xor add test pop mov sub cmp sbb dec jmp push fldt nop pop shrl ret sub aas cmp movsl int cmc xchg imul fucomp sub pusha jbe sub jno dec lds fmuls mov int popa stc push inc push xor movsb adc xor gs cmovnp pop jae aas mov or xor mov add popf mov mov cmp or cwtl je sub mov lds xor sarb es push xchg push je cmp push enter popa xor dec test push push push cmc (bad) int3 mov fsubrl test leave ss inc jo sub into push inc cld add mov jae ret sbb iret xor adcl cmp or xchg or xor inc mov call mov cld sbb xor mov mov inc test imul push xchg mov or jb sub adc std inc xor adc xor inc pop popf clc cmc sbb inc repnz dec add js add add outsl or mov nop jl push sub push jp gs xor push cmpsl lods je les pop je xchg jecxz jge mov sub jp inc pop mov movsb xchg jno or xor mov sti xchg xor or jne je pop pop add add dec mov out stos hlt pop lret cmp out fdivs loop adc scas pop push mov adcl and aam ljmp and xor insb (bad) pop jno test dec hlt dec or jmp adc movsl fimull nop xor jg ja out das dec inc test fs std fmuls les inc scas fwait (bad) xor adc icebp jnp outsb je jae sbb adc outsl inc xor aam stos aam pop ret lds stc ja xor or cmp mov les aas lea dec pusha daa pop stc mov call cltd dec xor inc ss push or jge xor cmc jbe lods mov jae xor imulb pusha sbb clc loope loopne hlt fcoms repnz negl adc sub inc je add clc (bad) in mov push cltd adc (bad) adc in xor push stc stos sub inc fbstp ljmp roll pop scas pop jne aam imulb push stc sbb lcall jbe std inc xor xchg icebp jae xor cs add cld or cli xor lods enter cld dec and (bad) ret call mov mov dec int jo sahf mov adc mov cmpsl dec fs imul dec mov idivb push imul loopne mov cld in adc hlt pop mov sub sub cli movb pop or fbstp cltd inc add xor pop xchg roll mov ljmp lds loopne xchg ds xor in sub cmp adc clc jns dec ja pop outsl and sbb sub mov (bad) jno,pt mov and pop std fidivr repz jge push test notl mov pop mov push sub repnz mov daa loopne jnp cli lods add mov mov aam aas add sti pop add lcall xchg jno mov adc (bad) out into hlt in jo mov mov or and and cs hlt mov ss pop add leave xchg jge adc sti fisttpl (bad) hlt push rol es pop (bad) inc fisubrl (bad) pause cmp scas imul lea mov mov adc mov xor divb fs arpl into stos setae add inc push jo jne hlt mull sub daa mov push or dec and gs push push stos imul lods or stc push jae xor jmp ret inc xor pop mov jp repz clc inc popf adc xor imul (bad) jne mov mov mov xor int3 in ss dec cmp aaa cmc in fnsave clc xor cli (bad) bound sub out lds sub js aad add mov int3 jb loopne jbe mov testl cld jmp sti mov inc push loopne sbbl xor cli sarb leave scas mov fiadd (bad) aaa js mov sbb xchg ja jge in mov sub mov cmc pop dec add aad xchg test rcl inc mov or or mov xlat add ds js nop rclb enter dec imul xchg les mov sbb xchg inc mov dec mov (bad) and dec das rclb sti popa mov adc popa adc pop (bad) bound pop pop mov gs mov pop push fisttp scas mov cli pushf out gs int mov jecxz scas mov cli (bad) fmuls shr pushf std movsl xchg stos push (bad) mov in lcall movsb inc (bad) push jecxz lds push push mov negl (bad) xchg cli mov aaa jo dec push push mov sahf xor xor mov (bad) cmp pop xor jg movsl add daa pop movntps cmp data16 aaa lea in add adc jns mov movsl sbb pop aad and jno adc in repnz dec loopne jno (bad) jge inc les lret je jecxz jno inc addr16 loope test cltd decb sbb mov sbb sahf sbb adcl sbb sti sub and (bad) xchg xor sub addr16 adc pop push in sub xchg hlt jo loop icebp mov lods cld mov xor (bad) or push mov jle hlt scas and add or xor sti sbbb xchg mov push mov fadds inc gs inc pop shrb push push add xor xor sub cs xor sbb imul mov xor dec xor aas negl mov outsb xor pop sti mov pop lret jae sub add fbstp mov xor fs loope or mov push or pop add repz loopne ss mov sbb sbb add sti subl cmp add inc jecxz es add imul push mov scas pop or loopne or mov repz xchg in fdivrl aas and jno scas lahf stos or fidiv adc push push es ret (bad) hlt xor mov insb pop addr16 cwtl in gs jp fdivrs jge xor push lods and dec popa test fsts or sub mov sahf push rcr jne jns test mov mov dec jmp pusha push jl,pn pop xchg jmp insl lahf js outsl pop pop cwtl and adc adc push (bad) xlat xor loope push aas mov shr adc dec xor jbe and js xchg cmc xchg std xor xlat test sub divb imul xor xor imul adc xlat xor mov mov cmp xor (bad) sub popa cli adc cmp add xchg and xor jmp ret jae dec sub mov pop add xor repnz and loop pop jp sub (bad) test xchg sar aad sti shll adcb in adc out iret sub roll inc jl rclb mov stos xor enter addr16 sahf addl xor insl jne jl lods bound lcall inc jl xor pop xlat ficompl pusha xor adc xor sbb mov xacquire (bad) sbb xor jmp lret jnp add xor xchg int (bad) and mov (bad) jnp jae lea add mov or movsl pop xorb (bad) pop xor or sub xor sbb mov (bad) ljmpw leave xor cmp loope adc add xor xor push jno mov test cmp cld sub rorb lods imul in dec lds movsb cmpsl mov fnstenv clc push std or dec outsl and cwtl clc repnz int or hlt cmp ret mov or jle xor and push enter in push ret cmp insb mov adc in cmp js jb adc fs push insb mov xor popa or ja cld xlat xchg hlt mov pop mov outsb and xor dec jle lock adc mov fiaddl fs xor (bad) jecxz xor or arpl jb pop push pushf lahf (bad) jo ds cmp popf push xor ret iret sub jg push mov xor adc pop mov mov les pop sarl outsl sahf xchg mov xor pop test mov ret adc cmpsb xor fbstp jae sub es (bad) (bad) mov (bad) hlt sti call data16 sbb clc mov pop popf outsb clc cmp (bad) hlt ss xor xchg sub adc fnsave popf xchg mov les cmp in lods repz mov and inc jg ds and out (bad) or inc jmp inc mov add in jle adc jns outsl mov jl mov and pop adc jle or sbb movsl enter out loopne dec out push push (bad) out push and cmp int3 into std (bad) cltd or ds psubd jno lret adc sbb pop xchg imul ljmp or sbb push aas mov iret xchg dec pop int addr16 xorb mov call pop sub xchg push test (bad) lret (bad) ret out add fdivl pop mov mov dec adc sbb or mov jbe ret jmp data16 and stos call ss inc mov sub stc sbb cmc inc fisttp adc and and and int ljmp leave jecxz xor dec pop and mov push repnz mov pop mov and push mov hlt mov mov jecxz ficompl outsb cwtl loope dec stos add adc add fwait add jmp sarb xor cwtl test ret adc pop cmp ficompl stos xor pop xor dec xor fild xor rclb out and repnz xchg or inc mov sbb (bad) xlat stc mov mov ljmp rcr loopne xchg mov das popf mov subb lcall mov add dec xor dec (bad) sub icebp lahf fwait into adc xchg and xchg sbbb mov out dec sbb ficoml xor repz xor sti add mov ja mov push jge cmp outsb jle add jb stc mov mov pop cmc push ljmp bound icebp mov hlt std inc mov in int push js pop adc adc pop fdivl xor lods add test std movsl lahf adc jb or mov jl,pn adc test subb hlt ret mov adc (bad) divl cmp xor lods aaa adc or lea jle (bad) xor frstor fildl pop pop outsl jns (bad) and lret xor push add mov fsubs scas mov sarb and mov incb and addr16 xchg inc xor jge lock pop arpl or lret xor iret xchg mov insl aam call jb mov mov inc cs xlat add addr16 jo inc dec mov cmp xor sbb (bad) aaa out add mov push or sub xor icebp imul adc xchg jbe sbb and ret movsb cmpsb fcomps pop mov mov adc je,pt cwtl lods jo outsb test xchg adc jnp inc pop int call ds or adc rclb stos mov xlat loop xor and das pop mov sbb inc test adc js push aas xor inc sbb or stos push das repnz sbb xchg rclb adc mov mov sbb insl xor mov inc sub xor xchg enter (bad) call fs pusha mov in and sti aad adc jp push dec add cmp or mov sbb cmpl scas xor mov jg addr16 nop loopne pop ret ficom add xchg pusha mov neg lds call pop xor (bad) out mov inc xchg mov jbe sub outsb sti mov jae mov add test pop imul imul jns inc mov insb inc mov and mov jae adc mov sbb inc jle mov fistp xchg movsl xor out push push push fnsave pop hlt push cmpsw dec gs inc inc cli cmp inc sti dec and mov nop add push dec into xchg cld test (bad) mov daa push and jo add mov cld enter lods dec nop hlt push fiaddl cmp sahf push xor aas pop outsb jae mov jle or sbb mov pop dec xchg ret xchg sub inc jno mov add repnz mov xor (bad) lret repz sub hlt sti outsb push pop jns add jo push lea cmp mov jl pop push aad cmp lods push xchg mov xor test pop sbb push push ss pop xor lea fsubs js mov gs xchg xchg stos fdivs mov lods notb fistl pushw pushf mov outsl pop inc sti jae mov xor mov mov clc repnz cmp out popf sub in mov pop (bad) xor into jge pushf (bad) test xor cli out sbb pop rcll int and dec sbb iret mov rclb mov push jne sub sbb stc mov leave or popf (bad) push pop lods inc out bound or xor (bad) loop repnz aam mov pop sbb lods repnz test xor adc insb les sbb loope push pusha pop bound push js and sub sub xor js std (bad) xor ret jecxz adc cmc mov fsubr loope call or xor mov stos dec and push mov lahf push pushf dec adc stos and xor mov mov adc dec cmc mov jp mov mov es push fsts pop jb dec imul sub push xlat incb push out xchg jmp daa cltd mov mov out push stc movsl xor push rcl xor aaa jmp or xor mov bound push cld and xor imul pop adc pushf xchg lea ds inc rcrl mov sti jnp adc dec xor sahf imul xchg imul enter (bad) test inc adc pop ret daa daa lahf out gs (bad) mov and push inc sbb stos xchg call lds jo xchg push cmc daa leave in popa repnz pop pop and dec push aam mov sub (bad) cld jmp cli sbb aad xor cmpsb and xchg jp cmp in sbb aad jno adc mov hlt jbe fldcw add mov inc adc jo dec loope sbb (bad) fbstp popf xchg int3 adc sub and push and sahf push bnd jp addr16 mov xor xor sub rcl cmp shll jo repnz push rorl jbe sub dec cmpsb pop add (bad) mov jge jo (bad) adc mov cmp mov add aam jno cmc divb sbb rdmsr mov in push push mov sub psubsw mov jge or fstps test pop aaa xlat cmp jne outsl loope jno js xchg add jg dec bound sub imul bnd add jmp push pop add loope js shrb movsb mov (bad) loopne sub sub (bad) scas leave loop cli mov pop xor cmpsb xchg xlat push (bad) fs add xchg adc xor adc pop jbe adc aaa sbb stos cmc dec jnp out jecxz imul mov nop push and and push ret inc push andb sub xchg inc mov popf xor xchg inc xor xor jae stos repnz adc ljmp jmp jns insl das mov pop stc mov (bad) and rorl sbb mov inc push (bad) lahf loope outsl xor insl mov and (bad) mov js mov stc inc add mov int3 (bad) (bad) outsb mov popa (bad) cs sub inc lods pop pop sbb inc movsb stc add xor pop insb es loop mov mov push xor in int cmp imul dec add xor test movsl add adc je xchg scas pop ljmp push icebp loop adc dec xor push mov jl into fildll lock push jbe lods xor adc jg jo mov pop mov jbe xor aaa mov insb pop cltd sbb lea mov dec add int3 fsubl std outsb enter std scas xor mov mov sub jnp mov jmp int3 xorl sub imul (bad) jecxz mov lds cmp in and mov in aam xor jle cld movsl repnz mov or aam test fldl xor jno lock fildl insl mov and pushf mov pop pusha in (bad) adc repnz mov jecxz rolb call mov iret xor dec xchg inc and add and enter je cld mov xchg push shlb add hlt add pop subl adc les in add mov sub and mov and and test inc lret hlt pop fnstenv sbb int je lock jl jb sahf insb mov xchg dec xor aam jno xor adc inc cmp int3 add lods stc ja mov sti jnp enter jmp lahf daa je push cmp adc cmpl cmp jae imul xchg or fdivl rcrl xor mov popa and jg push jbe imul and mov mov xor mov fdivl cmpsb ret dec and xor pop ss pmaxub push xor jmp pop hlt hlt loop and aad ds repnz or sbb lea sbb inc (bad) adc in and jl inc aad ljmp add xor or lock ror cmp fs clc (bad) loope nop jne cmovae fdivs ds or and std mov xor cmp loope add and stc jg xchg bound mov sahf xor jg sbb iret xchg adc xchg leave dec popa mov (bad) (bad) ja push lods push mov xor jb in and movsl adc mov xchg fisub test push lcall in sbb cmpsl adcl (bad) lock mov mov push adc gs sbb clc inc je mov push mov inc dec xchg imul jmp (bad) popf aam push leave jge mov pop js outsl pop lcall call aas enter xor mov mov pusha orl rcrb mov mov daa mov in push dec and adc mov inc sub mov outsb std add sub pop movhps stos into push (bad) inc repz popf dec jb iret sbb or mov or loopne fdiv jl rcrb mov push test push add adc es dec adc sahf iret (bad) and xor popa sbb xor out scas dec xor mov popf shr pop sar mov dec mov cmpsl pop repz mov ja mov push int add mov jae mov out fcmovbe adc icebp (bad) and (bad) repz adc sub mov mov mov shrb aas adc jns cmp cmp mov sbb insl or dec pcmpeqb mov jb popa test (bad) out sbb outsb sub adc xlat xchg imul sbb cmc sbb xchg jge pop test scas or (bad) cld imul leave pop repnz add jo out jbe mov dec sub jl insl xor jns xor sahf and std and inc inc sub xchg pop arpl test xor add sub xchg xor sub fucomp hlt fildll ja icebp pushf std sbb idiv sbb push xor mov dec sbb (bad) repz mov negb cli (bad) mov subb push rclb push gs mov gs adc ret outsl mov pop cwtl and mov mov int das jge jmp pusha in mov pop mov test jmp lar mov mov cltd push xor repnz outsl sub imul aam mov repz cmp aas lds pop subb addr16 xchg sub xchg and (bad) cmp and hlt aam test stos incb cli push jmp pop mov pop push adc fildl aas bswap xor rcrb xor mov fsubrl sbb push aaa push dec xor dec gs add and pmuludq subl sti mov and or daa stos fbstp test lods je sbb jle and xlat mov xor shrl (bad) lcall mov jns inc sti mov cmp outsl jmp (bad) cmp add adc sti mov jno adc xor pop xor mov dec push out dec xor popf dec add in sarl lret out mov icebp lods mov cli outsl fimul adc repnz sti stos xlat xor or mov mov or out clc and mov hlt fistpl loop mov add rolb mov jno je cmp ret xchg das xchg or xor bound xor adc adc loop shlb insl mov daa add xor into fwait popa js xor movsb inc stc jmp push and adc je jg loop xchg adc repz sbb mov adc jb push ds sbb insb push mov or sbb xor mov outsb push xor clc jecxz mov mov or adc xor or adc jae add xchg mov pop sti cmpsl cld jp sub pop inc insl cmp in push (bad) xor inc nop jecxz mov xchg ljmp or xor inc xchg jle or pop ljmp mov mov pop xor mov dec repnz in and sar xor pop or or daa or jl,pn pop das xor adc in pushf hlt jne scas mov xbegin int3 mov (bad) mov mov dec int adc sub clc hlt into xor cmp mov mov jae push es xor add push clc aad addr16 pop sub je sub (bad) aas jae dec cmpsb add (bad) js dec sbb pop xor lret adc adc sbb pushl bound dec xor cwtl sub ficoml xchg push inc mov ja xor cld cmp xor push mov es push mov xchg dec inc push aaa xchg mov fsubrs push fidivl cmpsb orl push hlt jl (bad) sub and add ror (bad) incb xchg fstpt aam leave mov (bad) (bad) xor xor cmpsl dec mov sysexit add sbb mov fs mov xchg (bad) jecxz int3 jns mov addr16 fcoms push jae aam sbb inc ss mov xor mov jbe sbb daa add add inc imul packsswb nop xor cltd jb push jge pop sub dec gs cmp (bad) fdivrs inc mov in cmc dec and push push les or mov mov push shrb insl mov (bad) adc jb pop outsl push sbb xor mov ss mov xor test sbb xor add xorl fwait or xor mov cmc gs aad mov mov arpl cmp adc push je cmp imul mov fdiv mov mov cld xchg cmc in pushf bound pop and dec cli mov mov and sti jb cmpsl cmc mov xor pusha xor mov mov or cmp xor ds push push add dec xor or xor adc pop stc popf aas xor and xor lahf bound or data16 xor pop xor sub pop xor sbb stos rdmsr pop push mov xor loope lods pop xor jp out xor out cltd stc mov ljmp sub icebp mov sbb (bad) jns add jno pop loop pushf add mov sbb or jnp insb sbb pcmpgtb scas xor sub and xlat dec iret mov cli out xor or cmp outsl and xchg dec scas or pop fwait leave sahf (bad) or in or xchg add (bad) mov push data16 sub jmp cltd adc hlt push ljmp int3 xor and in sub xlat xor clc ficompl aas repnz test sbb cwtl and push das insl xchg pop loope xchg push andb or jl add clc or and mov mov outsl arpl dec or push mov and jecxz adc inc jmp adc lret pop imul mov insb mov mov mov pushf xor mov (bad) hlt mov xor (bad) mov inc mov jp adc rcll fildll fnstenv scas or hlt testl jmp xor and cli mov fbld fnsave and xchg adc push push jg fidivl xor outsb in imul jge and aam es mov cmp test xor sarl mov test cmp sahf sbb hlt mov and lea jge movsb mov ds imul lahf ja xor xor (bad) in ja adc jl mov cmp mov jne cmp xor push out jo test and idivb sahf int3 push test ret icebp sub mov mov and scas arpl mov inc jg pop sti xor cld insl imul lret ret into sub mov mov xor aad iret bnd repz xor jbe repz aam xchg dec adc lahf (bad) xor dec mov scas jne jl xor aaa fidiv inc push sti jnp out pop enter jge mov mov es sub fidivr (bad) xlat std rolb mov stos adc mov cltd ret arpl xor xor out mov fldl stc stos xor adc mov rorb cs call and inc mov loopne dec inc fiaddl adc xorb sbb cmp int3 lret (bad) mov std icebp jns fistl mov mov jae imul jae mov adc (bad) push (bad) mov adc fwait pop roll inc dec xor sbb int imul std jo mov lea push les loop in xchg sbb fs xchg mov daa jb push cmp hlt pusha jbe rcrb in ret jle mov stos cltd mov inc outsl xor mov mov hlt mov xor icebp outsl mov mov addr16 ss imul std fisubl sub pop xor inc inc gs jae repz stos (bad) mov les lea es push out repz jp mov ss lds les aas xor insl lret pop xor (bad) pop inc hlt call pop cmp xor jb cmpsb repnz adc mov mov mov aaa or imul sbb ficoml xor cld jmp and (bad) mov imul mov hlt cmp sub jo dec sbb aaa repz xchg sbb mov jne sbb out imul pop xor xor push mov cwtl sti dec xor imul push pop inc sbb mov daa aad lods or xor xchg mov add aaa xor fs push js or or test call imul sar xor je mov adc mov jae dec hlt sbb inc pop mov pushf das mov sti rorb inc imul jo and mov adc add stos add mov jnp cld mov mov add (bad) mov sub aad pushf sub mov mov hlt inc pop adcb add popf xchg xor loopne hlt push sub lods std xchg je rcr add ds popf cmp xor xor fwait movsb jae add and add stc push mov scas xor insb repnz inc inc (bad) pop push dec add or dec subb loopne inc xchg stos mov pop push jno jmp out sti test (bad) dec out pushf test mov stc and arpl iret xorb clc out addb cmp fldcw ds mov outsb out mov add lods (bad) or xor mov mov ljmp pop xor dec cli fistl daa scas dec mov jae cwtl stc in mov and repnz dec sarl sub jno sub mov xor mov inc addr16 xor add xor mov mov cmc sbb or xor push repz repnz fwait dec cmc lds test das int adc pop push or jb xor add pop sub imul test int3 (bad) jecxz std xor mov xor test or in push xor xor nop and lds jmp stos mov add jg lods aam cwtl and sbb adc sbb sbb xor jb sbb dec mov mov aam fistpll add ret cltd hlt mov mov or jmp mov (bad) mov mov jns (bad) mov in add cmp and hlt mov (bad) fisubl pushf cmp sbb daa jno xchg pop push and jb cli jmp sbb sub adc and and cmpsl insl loop insl in into leave ds outsb push xchg daa and push lods lea adc cli in std cmp mov sub shlb fisubl imul aam cld jbe in inc sahf addr16 add scas xlat sbb and adc jbe movsl and mov mov sbb outsb ja lds jg pop xor loope and or add mov mov cmpsb clc mov mov cmp outsb mov je and popf les and jo jbe xor cmpsl pushl xor movsb adc lahf (bad) gs imul xchg hlt mov jecxz push and (bad) shrb xor lret dec xor cld mov (bad) xor mov pushf rcrb fs inc stos fcoml stc and dec adc sbb cli jg mov pop repz sti jmp aam stos out jle xor and sub popf mov inc hlt mov mov xor adc jl lods push mov pop hlt xor dec arpl stc cmp incb jbe imulb xchg xchg mov hlt inc gs jbe mov inc js xor mov pop cwtl cmp mov inc pop ss jmp sbb push push mov in popa add fist push push in xor test arpl mov std in test dec jo push mov insb outsl sbb mov mov jnp xor (bad) repz mov adc je out cmpsl adc sub out dec or cmp xor (bad) xchg insl jae repz std rorl or lea stos in and bound jae sbb and jns xor xchg dec out push sub xor jns test imul sub ljmp sub int jle add loopne cmp cmp jbe addr16 mov or pop dec mov push mov sbb push ficom sub jg rcll dec dec inc mov in hlt je and dec jecxz mov cwtl sub (bad) (bad) jecxz je xchg xor adc lret adc (bad) popf fidivl sbb jmp mov test jnp adcl cli mov mov outsb cmpsb and inc repnz sarl add mov push pop jns ss xor or lea std insb lret jno or cmpsb mov pop dec jmp fcoml jno dec fwait inc jo xor xor mov imul jle cmp pop xchg je sbb mull lea or (bad) mov fbld jnp icebp push es mov enter mov aas xor and mov ds (bad) xchg sbb lods cwtl xor sub mov loopne mov sbb mov cmp adc jbe hlt outsl and jns sbb xor xchg jns sbb lds movsb ja sbb ds jg adc jns jbe sub cmc in test fwait dec cmpsl pop xor or das xchg sbb jbe fs cld movsl push test sub mov popf jl jb nop int3 push aam mov adc mov into mov dec push aam sbb push lock dec mov imulb bound cmp adc (bad) aad subl jl scas jb jbe mov adc push jecxz jno mov rolb mov sub xor jle dec das cmp sbb pop fstl and dec imul pop mov xor inc cwtl daa xor clc inc lret mov mov mov sbb in jae mov outsl pop add xor loopne (bad) cmpsl lods sub push dec or or add fucomp lret inc sub pop xor adc mov in mov xor lahf dec xor mov (bad) dec mov pop adc repz pop xchg dec int adc sub arpl out pmullw mov incb pop cld xor js hlt in xor fwait pop mov imul clc jle sbb jae dec imul mov rcrl inc cmp dec repz jmp mov jp ds clc xorb adc sbb xor sub adc fild test mov test aam jge and mov xchg mov sbb push (bad) stos pushl je dec jb cmpsl rorb sti imul or movsl push mov fbstp adc (bad) cmpsb loope xor xor mov inc int and and lret and sbb jbe mov daa ret (bad) pop push and mov mov xchg jnp mov add sahf sub inc adc in xor inc icebp (bad) sub mov inc mov sub (bad) adc iret jns je scas or cmp mov loope cmp (bad) mov addl xor nop jmp (bad) lcall adc cmc cmp add adc pop in jb sub add repnz lcall lods pop (bad) xchg es push or xchg idivb or xor pop aas aam xor sub imul jb jmp sbb inc xor jle icebp (bad) repnz (bad) cld loop push pop in pop adc push or or mov xor sbb xor cmp hlt movsb sti test xchg lds mov xor es push aas std sbb fsubrl pusha xorb into (bad) scas xor idivl cmp mov clc in pop add pop pop scas adc dec nop or (bad) cmc repnz repz lret mov das dec mov lods icebp sub jp pop jle daa popf xor mov mov ja adc cmp adc sub std mov mov movsb and pushl add mov mov adc aam scas mov cmp sub or ds inc xor (bad) sti jae aas adc xchg dec sub loopne xchg mov adc xor push or adc xor sti xor and dec outsb mov (bad) imul cmpl pop xor mov aam sub rolb js mov dec xchg pusha pop cwtl jae ja sub gs repnz add (bad) push jae pop ficom in popa aam xor aad repnz mov push stc jb or adc lahf test movsb (bad) cmpsl in sub jae fucomi je cmpsb ds inc ljmp xor lcall push test pushf and pop pop push jne pop out add out je jb (bad) mov and dec xor mov adc cli push jne adc cmp pusha call repz jnp pop mov lods sub scas or push push lea sbbl sbb ja cld ja inc jge mov mov jge sub icebp pop cmp cmpsl cmp scas mov das fdivp xor sbb pop dec jno xchg jbe and out pusha mov out stc test jno mov sbb jp clc push repnz daa cltd subl add sbb sub addr16 xor mov (bad) hlt arpl aam fidivr mov lods xor out inc cld xchg and aas (bad) jae mov mov pushf fs movsb fnstenv fstl lahf inc or repz les sbb fidiv and mov lods cmpsl and and sub cmp mov xchg add mov test cs xor jns cmp dec pop repnz lcall inc into repz sbb mov mov cld aad jl popa cmp lahf aam out jae or sti and cmc push popl clc aad cmpsb popa (bad) mov ss jge mov inc cli mov test mov sub xchg push hlt push dec das cmp add mov into cli fcomps jb cs pop loopne xchg lea hlt repz out xor mov cltd xor pop pop test cwtl and jb add add aaa jmp and xchg add pop jmp stos dec jbe addr16 inc jb movsl or lods xor into stos pop (bad) ljmp scas clc xchg int push addr16 lds fist fdivs jb stos pop xor lods addr16 xlat inc xor inc jne sbb pushf stos in fdivl out int3 popf je dec or push or xchg ret jmp xacquire jns test aaa mov add jg ja push mov xchg adcl insl mov jl loopne jns jno,pn lods orb jg mov cli nop scas mov xor cltd xor mov add out jmp mov mov or in pop dec cmpsb lds sub (bad) das lods jb push lds roll adc cmp insl sub pop decb std xchg pop mov cld fnsave imul pop movsb repnz and and xor fsubs mov lahf jno add (bad) movups ss icebp int mov mov jmp or adc repnz jl mov jb pop inc sti outsl mov jne dec mov mov lods inc adc arpl mov (bad) dec cmp imul in movsb vmaxpd divb xchg xchg icebp or xchg divb addr16 or push ret mov jmp jmp jl cli sub testl rcrb jno ret mov clc roll jge mov adc xor popa lret and cmp (bad) adc hlt mov adc or dec js fst pusha sub or cltd int3 mov fbld sar push dec xor out sbb mov out mov lods pop jo add xor fisttpl add fwait pushf fwait (bad) stc xor cmpsl add std fdivrl or fs es dec mov (bad) mov xor cmp out cmp (bad) xor andl mov push jnp pop add clc scas jno sbb es dec stc push sbb rcl mov ja add mov negb mov sbb dec mov jmp mov lods lea clc ret mov mov xor ja inc jo inc jl loopne stc cmp jo xor or hlt adc out xchg lods pop cld mov inc or jge pusha jle pop je push xchg adc and arpl das gs xor hlt (bad) je mov jmp pushf shlb pop mov inc lods sub repz dec xor in hlt arpl out mov scas lcall in jb sub popf and cmp and xchg inc xor sbb cmc xor arpl dec inc xor addl add arpl pop adc mov cld mov scas repz push cmovb sbb push add loopne jne jns arpl cld xchg sbb jge xor out ret xor pusha and xchg sti dec rcll enter cli (bad) lahf cs push jb xchg ss or sti imul cmpsl inc je enter and pushf jbe je gs and sub jl xor test cvtps2pd rcr cwtl xchg fnop mov stos incl pop mov ret sahf fmuls aas add and xchg loopne sbb inc jecxz inc ja sub mov mov sub sub mov sti test dec andnps es (bad) push dec xor push mov into mov jae mov push mov xchg or incb mov divb mov mov cld lock clc lock jmp xor dec jne in push outsl sub imul or in and imul leave test pop addr16 sub and daa aam cld inc xor shrb xchg scas mov insl or and popa mov pushf push adc push inc push jmp pop test cmpb mov sarb daa sub or push mov dec and loope add mov jg adcl jp addr16 push scas push cld push sbbb popa mov sub cli aaa (bad) mov sbb and hlt mov mov outsb stc dec push jno sbb outsb sbb rcr inc sub mov dec sbb int push fcmovu and sub push test adc and xchg inc bound add in jmp sub jno xchg (bad) dec mov or sbb xlat xor je inc inc out add and fisubr jp jae inc pop inc out jo mov loop aam or pushf pop xor add dec inc aam cmp xchg stos mov daa xor iret imul cmp fxtract mov cmpl jne sub (bad) push push jae dec or hlt cmp mov sub push inc pop pop cmp cmpsb push std push repz ret jo ds xor repnz cli hlt repz shl or xor ja mov (bad) adc sbb stos or imul add xor sbb mov loop call or lods jno in cltd xorb mov repz mov cmpsl pop out js xor push cmp cmpsb hlt and jae icebp inc push cs mov sub adc notl in xor or (bad) cmp mov lds adc jno xor dec or dec xor inc stc in insb xor push ja in faddl lcall lods fnsave inc pop xor call and nop sarl repz rcrl test adc sahf xor aad adc (bad) jns mov (bad) xchg fdivl std and sub add mov sbb into sarb popf cli push jmp jg cmpsb cld mov sbb push (bad) push jge jno mov loope jo pop push test fucom and inc bnd pusha test test cmp adc (bad) out cmpsl cmp out jno jns aaa stc cmp sbb xor sbb (bad) mov std mov fstl xor adc emms ret cmp fbld sub sbb std pop in sbb mov std sbb aaa je sbb and push sbb (bad) dec or ret or hlt sbb pop fs cmp out aaa sbb mov mov pop pop test nop mov add (bad) out and lret sbb lea in lock std imul add pop daa repnz mov jmp ss jne sub ret xor pop jo xor ret outsb xchg sub mov adc mov cli mov test and push shrb push lods aaa cs or xor loopne xchg movsl add jg js xor (bad) xchg sbb es adc jmp out sbb cmc loopne daa jl jae push and popf mov xor aam sbb inc dec xor out xor xchg adc je pop inc rcr in cwtl es xor sahf adc pop push push mov jae out ficom in pop push fildll sbb in pop sub insl mov je loopne jge sub arpl lods int3 jl and pushf xchg xor stos (bad) xor mov push mov cli (bad) stos ljmp xor mov and sbb xor pop insl jg imul mov sub test addr16 dec sti fcmovnbe push pop iret jb mov sbb xor out pop dec mov jbe xor inc aaa sbb jecxz hlt push or fcoml int3 pop mov xor adc int3 fldcw scas xor out xchg xchg mov jno insb adc mov ret fsubrp (bad) imul fst (bad) into les sbb sub movsl sbb clc mov out popf inc xor test frstor mov lret sbb push sbb add das mov and mov or and pop movsb aad mov xor leave push (bad) mov dec clc xor test bound fcompl sub dec add jb,pn and pop cmp test mov mov stos ret imul cld arpl xchg xor pop push or mulb jecxz xor js mov imul sub inc push pop in ja outsb mov fsub jo stos cmpsl jge pop jmp xor les xor ret movsl gs pop cmp out (bad) ss mov xor dec mov out roll xlat test in scas imull sbb fbstp movsbl shrl fcomps sti movsl xor cmp aad dec xor adc cli hlt xchg js xchg sbb or cltd pop in adc sarb test mov jnp outsl and mov xchg xchg inc sbb in adc mov stos out adc mov popa sub loope insl in mov xor scas icebp cld inc xor sbb inc cmp push xor push mov popf adc jno adc lds pop clc mov xor cli into inc js stos neg arpl mov jecxz pop cmp or jo xor xor fcomps jnp lret jle imul data16 xlat push mov xorb jmp std and insb sbbb cs jecxz enter xor lret iret imul (bad) xchg add cmp int3 push out cltd mov mov fdecstp shrb test sbb hlt mov lods xchg adc xor add ja and cmpsl repz pushf int3 repz pop cli insb es mov mov roll push es ja xchg jno (bad) aam cli mov mov add imul pop fcoms mov xor cld xor shrl sbb and xlat movsb add mov pop mov cmpsl xchg in inc lahf push sub sbb inc pop xchg leave ss dec jle jae dec mov int3 dec fwait pop (bad) sub cmp mov hlt (bad) mov adc (bad) mov sbb imul mov cmpsl sbb jecxz (bad) fidivrl dec scas arpl les push addr16 push std jns push mov pop inc sub cli jmp sarb loop push test pushf xor into push in sbb sub jno lret stos xchg pusha dec push mov cmp aam and in xor push loopne and sahf pop icebp cli shrl je jecxz xor push fmul mov adc push repz mov sub or cmp (bad) xor adc cwtl push cmp sub jns ss andb xor mov in jae ljmp subl stos std add pusha mov add push jecxz cli add jbe lds lock lret and rclb insb movsl imul or push push mov adc jle jg pop jae shrl mov adcl out popa jbe mov or lds jno sub shrb lea xchg stc sbb sub fst jecxz ljmp mov xchg lcall cmp idiv and mov mov or cli jb outsb xchg adc push inc in jp add iret pop xor sbb inc adc mov sbb add stos pop pop pusha and jmp loopne sbb push insb sub (bad) jo mov or popa loop xor xchg pop and call movsb add cltd cwtl or add mov push les data16 mov flds out cli (bad) aam mov iret push xor movsl nop (bad) sti (bad) mov adc sbb add sub mov and dec cmp push adc xor out (bad) ljmp test mov push mov or push movsb xor fnop mov pushf fstl js mov jnp mov cmp lods das gs aaa mov sbb xor and mov in popa popa (bad) xchg dec add pop pusha enter pop jg jmp mov dec jno pop cmc int3 mov mov (bad) divl sbb leave lock sub stos fimul leave adc imul push jge sub push push shll inc xor adc (bad) repz stos and loope lods jnp xor adc and xlat stos jno lret xor sbb cs inc dec mov cltd adc and or psllw cmpsb repz xor cld cmp and jb mov lahf pop in jmp aad or mov xor add jp mov fcoms xchg loope cli xchg dec inc aam mov pop cld rcrb fbstp mov fs jae stc mov xchg lea jae and or xor add xor pop ds das lret and out lods or xchg fnop scas jl sub and or mov call or or (bad) and iret mov xchg dec cmc mov stos mov inc xor add inc rorl xor rcrb cld xor adc xchg or inc aas xor outsb lods jbe adc lcall sbb inc ror xorl mov daa xor jg dec xor cmp push xchg repnz sub xor xor mov mov mov jb inc gs pop gs mov pop lret xchg mov adc fisubr add mov sbb sub mov sub adc imul div fistpll test lahf xor cli mov jb inc lret fcomps hlt or bound pop ret hlt sub mov fist mov xor cli mov or lcall adc shll ret imul cmp (bad) ud2 xchg xchg cmpsw jae sub jbe or cli sti push or mov mov dec ja repz loopne jmp or rorb jmp jle xlat subb repz (bad) sub outsl fimul add dec or push testb mov out hlt dec sub mov repz inc jecxz dec jge imul push jg pushf sarb daa xchg push (bad) call sbb mov js sbb je sbb iret push adc out sub push and push popa and xchg rcrb add sub cwtl mov lcall xor adc mov jmp jp mov push inc hlt sbb adc fwait mov std fild insl pop mov leave mov or push (bad) adc aas notl xor sbb dec push scas jbe (bad) jmp fldt pop xor lea adc xor add cmp push popa cmp or cmp loope,pn jp dec in out xor pop mov movsl sub iret mov xor or je push clc dec and js or rcpps daa lock inc mov xchg (bad) sbb add fs dec (bad) cmpsb mov inc mov add movsl notb xor xchg add dec mov out out mov dec out stos mov mov out aas and pop hlt xchg dec mov lahf ret les xor pop jae inc scas jno ds jle (bad) insb sub cmpsl sbb hlt mov pop push dec aas push cld ds mov mov inc div xor adc xor cwtl jmp (bad) ja mov (bad) repz adc clc or push xabort mov mov fcomi enter (bad) mov cmp jne cli shl mov sbb adc int daa gs and popl xor pusha xor repz sbb rcrl repnz out imul addr16 mov sbb dec adc jae or push mov push jp pushf push jmp faddl mov aad or adcb jecxz loop test cmpsl aas stc fnsave push pop push and jecxz int loope and mov mov frstor aam mov dec jno sbb out jp jg cli int aam mov imul mov inc sbb sub adc mov mov jge sub mov cltd xchg hlt pusha push push aaa or xchg sub pop ss in xchg mov dec mov xor xor adc jge roll jno and jle xor adc popa jbe pop xchg (bad) inc adc xchg dec jl inc sahf cmp inc push cmp cwtl push jle addr16 adc std xor hlt enter cmp lret (bad) lret add xchg cmp push pop leave pop and dec (bad) mov hlt or jecxz mov add int call rcll cmpsb mov cmc mov and (bad) sbb cmp mov aaa stc leave jbe fist popf mov pop xor jno jo jg repnz imul (bad) mov cmp pushf inc push out adc or lret mov mov adc xor push inc jae mov mov sub repnz jp hlt jb pop push ja sahf adc push dec adc jmp test rcrl xor cli xchg mov push fnstcw not js sbb cmpsl mov xor enter xor int aas dec xor sub inc es mov outsb xor mov lea mov gs int sub pop or mov hlt lods sbb sub push push or xchg sub mov mov int3 jo dec cmpsl inc mov cmp dec xor test arpl in adc dec push cmp ret test xchg mov cli sarb xchg and mov cmpsl ror sub rcr push xlat fisttp jmp jb xchg cmp mov hlt rorl scas daa mov cmp xchg andb or mov mov push adc cmpsb jg or sub jbe hlt inc mov (bad) mov lods jo shrb jb adc add inc stos das aaa mov mov es push xchg or xor test mov mov out hlt pushf ja mov fdivr jp sub mov push loope inc push addr16 push pop sbb iret mov add sbb mov mov (bad) gs and push shrb out mov or jns stc cmp std push and jb cli (bad) movsl mov adc pop les sbb mov mov sub jo and (bad) pcmpgtd scas pop mov sbb push pop test jg fldt push cs stos roll or lds xor mov sbb repz mov jns xor out and clc pop mov push xor jl (bad) repnz sti testl pop aaa pop push jp xor pop xchg adc rcl into jno inc ds (bad) popf int3 scas imulb aaa loop leave mov cmp aas push insb ffreep mov mov jb add cs movsl pop xlat cld dec xchg sti xor int3 stc pop xchg and ret jnp or dec sub popa (bad) push gs rolb insl or pop pop xchg push xor pop mov xlat or push add inc loopne xor push jb add cld sub push xor gs xor (bad) push inc pop jo add or mov add jmp mov mov jae jnp xor inc decb jmp int cwtl push mov das mov mov cltd sbb xor sbb frstor int jo fs imul dec mov mov sbb jmp mov jb or push inc or popa loopne pop mov sbb push lea and mov repz pop or (bad) fdivl cmp (bad) jge je data16 jecxz rcll adc sub lock adc hlt outsl push outsb pop pop mov bound addr16 dec je dec cmp xchg push jno jae sti cwtl sarl hlt ljmp mov jbe fdivs xor jo arpl enter jecxz pusha mov out pushl outsl push repnz popa push lds out jb out and sbb out fwait gs xchg push or cltd dec fs push jl lods pop add add sub nop sbb xor xchg mov cmp and cmp icebp mov loope add push mov aas add xchg jns stos or mov rorb xlat cld mov inc in jae xor lods aam in movsl push mov jo fstl out mov aam xor call and insb cmp adc cmc sti mov outsl cmp lea je add or adc xor (bad) out fwait arpl loopne cwtl sbb cltd pop jo jnp adc lea int lods stos je xchg ret mov inc mov sarb arpl ret mov mov clc sbb mov mov push dec or (bad) cmc mov ja mul xchg je jno ficoml mov movsb xchg or jne adc mov lcall imull inc mov xor sbb je cli sti jle xor jns fwait push xchg pop daa push xchg movsl mov test mov loopne subl jne repz cli pusha xchg mov push sub sahf jge clc int js imul mov outsl adc ret xchg cmp inc fwait sub inc sub pushf mov jge pop mov imul cmp add int3 cmp rol hlt stc or xor pop and rcl xlat sbb callw gs shll jnp xor scas imul inc data16 dec out mov mov ss repz cli push js xor (bad) (bad) cmpsl cld jge jmp xor std in lret jmp repnz lret push push and popf sub (bad) inc jl popa or sub dec call scas mov pop sub divb std stos and pop sahf or rcrl sub xor inc sbb fdiv cmp (bad) xchg adc sbb repz lcall (bad) aad stc xchg dec mov jl xor mov movb repz adc int pushw inc nop mov shrb addr16 xchg sbb push cltd and notl sub imul xor mov aad mov repz mov mov jp stos cli or and ja and jae sti outsb dec push jo cmp dec xor incl mov fimull insl mov push xor outsb sub and repnz jecxz hlt cwtl cld xchg dec into lret adc sbb inc jge scas cmp or xlat jge mov and loop (bad) loopne xor dec mov add arpl mov stos pop inc test fdivrl xchg cwtl inc xor mov dec nop jge hlt insl lret dec xor jnp inc addl insl pop xor (bad) loop xor icebp fisubrl and inc pop dec jo mov lods in aam adc (bad) sbb test xor ds jp lcall into mov clc cmp mov pushf cli xchg inc or rcrb xor test mov dec (bad) mov mov mov adc add push and or push dec add xchg lahf and add outsb iret xor push jge sbb jo pusha adc xor adc jb enter jecxz dec jmp sti dec mov out mov sahf mov fbstp cli popa out xchg stc jge sbb enter sub out push leave sti mov (bad) pusha and add push adc in (bad) je (bad) cmc inc or pop fdivs cmpsb xor daa mov bound dec cmc jmp jns outsb xor idivb cmpsb dec inc push xchg push xchg lea mov jg dec outsb dec xor and test jae xlat xchg rolb lahf xor sub mov pop pop lods or test cld and jle std xchg jmp xor adc pop mov push ja hlt in call ss jno xchg adc xchg xchg xor mov js aas xor dec mov je mov ret mov outsl mov enter mulb jo stc test sub loop in sti mov std jl push inc mov and mov adc (bad) and xor or mov sub rolb jl mov js adc fist add mov jae sub rorl add sti (bad) loop xor xor adc lret dec or cmp mov enter dec fidivl mov je jmp fist (bad) and or pop mov sub pushf push mov cmp sbb or (bad) hlt mov push jg mov aas bound lds xchg sub mov nop fs rclb in in jmp lds mov cwtl mov nop cmp repnz jge pushf movsl clc cli mov cli push mov mov loopne inc and lea sti and inc out sub frstor incl cli gs movsl add out inc aad nop mov xchg or js ss push inc mov repz mov xorl inc scas std pop stos dec add arpl add repnz push std mov ffreep rcrb mov daa in mov ja popf xor xchg jp xor and adc and movsb mov xchg xor (bad) fsubrl mov mov cld dec jo or fistpl or jmp int3 std stc push sahf or je mov add xor jae lock add mov jno mov mov add mov xor or jge xor es popf xor mov or mov lea and hlt test mov fmuls roll pop mov repz xor jge xor outsb dec pop je bound inc mov mov out insl in gs sti add lods xchg test jmp mov dec push sarl xchg repz mov adc pop clc popa gs in or jp xor test ficompl loopne xchg push imul xor cmp ja mov dec xor dec xor lea imul xor sti mov nop repnz stos xor dec imul das in adc mov popa sub nop sahf cli sub or fwait xchg mov push cmp jns add mov and adc orl xchg repz ja cmp movsl movsb ss popf jo dec cmp jno js loop lahf xor push arpl mov mov movsb sahf or pusha push (bad) mov fisttp test cmpsb mov jmp movsl pop push xor adc lahf loope pop cmpsb add adc in shrl call int3 stos or scas xchg loopne xor outsb icebp movsl repnz je pop and jns pop repnz xor loope pusha js fnstenv sahf in repz mov mov sub jae xchg xor and test test lret into icebp or in (bad) mov xor and sti dec mov sub fs xor in dec xor xchg scas or dec xor cs adc hlt aas adc ds lock sti add jb pop push fmuls mov repnz dec cld fyl2xp1 les add in mov shrl aaa adc cmp mov jg xor jo hlt in test imul sub jae je or pop cmp ret inc clc pop into jae ja jnp (bad) js jbe xchg imul cmp icebp push (bad) mov xor mov xor mov pop mov or sub cltd add cmpsl add mov xor jno push xchg push popf jae loope sub and mov fmulp sbb mov push incl xor jo (bad) xor enter ret fidivl push mov movsb (bad) sti test arpl cld lods and stos jmp les push imul sbb fwait cmp in mov and lcall and mov (bad) je out cli out xor mov mov leave loope into jo mov cmp sub xor aaa push std in pop push mull sub push aad pushl xor add xor mov popa lea sbb (bad) incl movsl mov (bad) in pushl mov (bad) jne push mov mov mov mov and testl mov test ret xor dec clc fisubl push or lock xor (bad) icebp shrb mov xchg pop nop dec mov pop cmp xor inc push scas mov inc lods in mov scas ss scas sub (bad) into roll cld scas lods adc xor push leave lahf aaa sbb into add push ficomp jae test imul rorl jecxz lods pusha (bad) sti or inc cli push mov repz dec into and in xor mov loop mov popf inc jmp adc movntps jno xchg push aas adc bound aas mov and sub iret rorb dec cmp cli (bad) cld lret outsl sub lahf in outsl and movsb sub mov cli inc fstps iret jp aam mov xor inc (bad) xor and gs push vpaddw xchg mov out mov jae lock mov cmp lods push lret fimul xor sbb mov imul push add cmc cld popf pop std pop xchg test movsb hlt aas and pop mov movzwl jno (bad) add movsl mov dec mov add xor aaa cld bound leave jl jb add cmp je bound rorb bound push push pushf xchg push cs jno or cmpsl sub decl or sbb test imul jnp lcall or or je sub imul dec mov and adc mov or and ret xchg mov hlt sub adc mov mov cli pop fcompl and scas (bad) cltd mov inc xchg nop mov push rcrb adc add ficomp dec insl pop and adc test es mov mov clc jl test push push add mov jg mov rclb mov and adc push cli inc mov shll shlb lods das sbb fcoml fdivrl pop pushf xor xor xchg xchg sbb dec xor cli test inc mov adc mov (bad) jo shr aaa scas push adc jl repz xorb cli pusha ret dec ret sbb out (bad) mov out in je mov mov fs loope mov adc cmp repnz sbb jecxz fisub and mov push push fdivrs test mov mov lret mov mov (bad) cli das aad pop sbb jle mov sub push adc push sbb push mov test lds pop xor dec popl les sbb inc arpl sahf fildll ss jns fisub mov xchg movsl ret stc inc fmul std mov fwait lcall pop inc xchg adc iret xor fcoml xor fmuls out stos or ds xor jbe add pop mov outsb dec mov xchg xor mov dec mov fstpl push scas aas jle xchg xor enter jmp cmp xor dec pushw (bad) push sbbl je push mov (bad) leave adc jnp (bad) mov or inc mov lods mov fwait dec xor and (bad) jns cmpsl mov and loopne xor jmp xchg mov add jns insl imul test sar adc push push imul outsb hlt lret adc fldcw xchg adc fwait xor pop xchg es dec xchg lods jge lahf push jno aam cmp icebp les or popa mov shr dec push sbb ljmp in cltd xchg sub je sahf pushf mov jmp inc addl and cli in sub mov mov es dec rorb mov or cmp test (bad) mov dec push repz adc jp aaa fisubl je mov iret rorb pop aad dec sbb xor push mov lcall pop rcrb push cmp and test push xor cmpsl ret rcr xorl xor xchg cmp mov les lcall sahf mov subl mov cmp xor lahf hlt xor shll push std shr dec daa cs fs test movsb leave incb test mov (bad) inc xor mov mov sbb scas mov aam xchg pop inc xor mov mov sbbb jne xchg push les (bad) stc and pop (bad) iret out sub cmp cmp pop mov pop jle xor call inc cmp xor xchg push sub push dec jnp mov inc or xor rol movsb ss imul mov scas sub mov leave je dec pop or mov jb repz sbb jae gs jb into mov aam lods sahf xor jp jg xor mov add mov inc push je mov jp xchg mov clc aas lahf hlt cmp testl outsb sbb aad in mov inc int3 mov xor loop or mov mov mov es insl int3 or pop lods add gs (bad) mov pop bound repz xor imul xor inc or sub out lret movsl pop jecxz jmp fcomps xchg loopne pop fwait xor repnz cmpsb (bad) rcr jmp jns and or in aad aas jae pop mov int add popf push (bad) leave test jle mov adc or repz stos fildl scas out xlat xorb ds mov nop and mov dec sti mov xchg mov sahf popf fdivr fstps rcrl (bad) lret xchg push jae jbe outsl pop add mov lcall js push and xor aad xrelease dec popl push mov mov and lea aad sbb xor loop std cmp in mov out mov scas mov cmp and inc push jb mov fldenv push xor cmp insb cmp or scas mov gs pop push and or je push mov xorl pop fstpl xchg jecxz fisubr mov (bad) xchg xor (bad) mov mov mov dec loopne inc xor mov mov sub mov sub hlt xor xor sbb daa and cmp rcrl pop jmp mov adc cmpl ret xchg sub (bad) sti and dec std int pop mov sbb push mov add jg ljmp push insl cwtl xor pop (bad) inc inc xor fstps int3 xor inc jno or mov stc or mov mov ja jns dec fs cmp mov mov sbb imul (bad) repnz mov mov mov outsl je adc pop add jle jl mov aam imul add outsl dec test andb mov cmp jo dec xor lock push cmpsb or xor fist sbb xor data16 scas mov xor das mov movsl dec pop cmpsl jns loope test pop and sti outsb fs sub mov mov mov cmp fidivr je push sub pop sbb add ret fs or lods jae add clc jecxz xor fs dec imul push je fwait das adc push repz cs clc cmp xor imul enter (bad) jnp xor test cld jmp adc jno sub out mov jne mov loope,pn dec cmp mov mov daa add cmpsb inc outsb out and inc hlt jbe bound loop adc xchg xor xchg and sbb lret jns stc sub stos jo movntq push shll dec dec or xor hlt mov mov push add mov sti aam xchg cmpsb repz mov fisub sbb add cmp add das cs jnp mov xchg icebp inc cli sti test mov jns mov xchg std leave xor hlt xor stos push xlat sub sbb or ljmp xor stos sub loope int3 aad sarl mov data16 pop xor movb jp ror movsl stos cmp shr lahf lret pop repz (bad) lds lods daa fmull xchg sbb pop jns inc jle mov add mov les shll xchg xchg jne lea sub popa adc mov lods xor xchg insl xor dec pop lret inc cs (bad) je aad mov les les mov or xor jno xor outsb mov hlt out (bad) cmp insb add xor and xor iret push jg lahf repnz hlt std cmpsl sub ret xchg int mov aaa mov jne adc cli inc mov pop xchg xor (bad) cli jmp dec xchg jb mov mov (bad) aam jg pop sbb loop pop mov sbb pop enter mov push push movsb xchg in cli addr16 jge das xor dec shr call jno pusha push push push lods mov imul out test (bad) pushf mov mov por imul es xor mov adc add scas dec xor dec mov xor mov mov and loop stc ret mov sub xor sbb xchg popf ljmp (bad) iret mov add mov hlt add sar xchg sbb test dec inc xor cld lds jae in push mov push pop xchg jg pop cmp and loope mov out stos ret adc int3 hlt sbb dec test out sub lahf jp daa daa and push inc imul aam lock or pop add or shlb cmc loop and adc xor jno jo ret or mov pop add adc push cli in movsl add cmp jae iret pop mov pop add cmc aad dec lahf enter mov jo (bad) ror mov jbe cld clc cmc or adc outsl add xor pop insl sub pop aaa repz in fwait cli push nop mov or pop movsb jle lea jmp jae push ss les mov sub int imul dec das addl arpl nop and push push insl xor xchg aad pop int3 mov dec adc mov pop xor jmp jge add lea jno mov cs mov cmp imul xor divl pop add xchg sbb mov mov adc jno push inc dec ljmp fadds sbb lcall outsl mov xchg test and icebp mov sub and mov adc pop sbb pop push loop push mov bnd mov sub xlat (bad) lock scas adc xor sbb xor push xchg aaa sbb mov fcmove pusha xor dec stos inc adc cli stos xchg sub jle,pn mov in ret xchg lret dec push mov int3 loope push pop sbb cltd out inc movsl pop xchg xor sbb iret sub xchg mov inc in int dec push inc inc mov sub rclb or (bad) mov (bad) jb loop std cli xchg gs ljmp les adc push negb ret jnp cltd xlat lret fbld mov jl mov out jnp addr16 xor int inc and add cli sarl sbb xor mov cli sub insb and dec lret addr16 insb addr16 (bad) mov mov xor add decb inc aam or in sbb pop mov ret cs jbe repnz mov sbb push or adc xchg (bad) into push push xchg dec ljmp dec xchg pop push add cwtl inc xor jmp aaa ret mov movsb push in add adc outsl adc js xchg mov adc mov jo fsubs mov pop dec dec sahf sbb or cld adc sub shrb sbb mov lret sbb (bad) pusha inc cli insl jge (bad) popa fwait int push dec jo repz std jne jp scas rolb stos ror clc loope mov pop repnz xor gs mov jb pop imul sbb cmpsb adc cli in ret and jb stc int sbb pop iret or dec rcl add sub add mov dec push xchg std jo icebp or loopne adc add sub fidivrl xchg fiaddl cli mov test cltd jle push scas pop xor jl cmpsl repnz mov jmp pop gs adc xor mov in inc mov xchg iret orl dec push out xchg mov xor pop adc pop push ss fisttpl pop xor push aaa (bad) jae pop mov mov mov inc or sbb in aaa outsb out hlt aam or pop bound or xchg xor (bad) rcll sbb xor neg jmp xor popf sbb xor push in add cmpsb pop shl mov decb and sbb aad xor dec test xor ret cs sbb ret lods xchg adc rcl xor (bad) jmp sar ret aad icebp xor sti dec jno xor addr16 mov cmp pop stos outsl jo in mov inc sbb popl sbb xor fsubr mov das into lret jnp add adc cmp sti outsb fwait mov xchg jne (bad) fsubrl popa outsb stc mov sbb daa sub xlat fimul jns js,pn dec adc bound jp mov rep mov adc adc xor pusha xor mov pop cmp push or scas icebp ss cwtl or sahf jmp (bad) mov cmp push roll xchg jne xor sahf push sub xor sbb inc loop jl cwtl jno es cld jbe xchg mov pop jne cld loop sbb xchg jg xor and cli mov notb incl daa aas mov or es or lods loope adc aam jbe add jl mov ss out xor sbb pop xor or dec repnz jae daa repz movsb mov cs push stc outsl mov js sub movsb pop aam add adc mul push push inc ljmp insb pop (bad) sub add lds movsb (bad) dec ret pop xlat addr16 mov pop aaa mov xor xchg in pushf (bad) pop mov pop inc add mov out pop stos rorb jno add andl into xor inc pop add jmp frstpm(287 movsb inc push fcomps inc push imul jne shll movsb sbb add push shrl mov insb ja add jle or pop int lahf sbb roll and test call stos (bad) mov pop push sub adc frstor cmpsb and fild insb (bad) in test cmp jmp dec mov push add stos push pop dec out mov aam or ret (bad) jmp lods jge imul jne mov cld jl hlt aas xor sbb sbb jmp jp pop (bad) mov add mov jmp xor cmpsb jmp add in mov mov mov test aaa xor aam stc mov or fwait adc ror hlt mov lods push add jae stos xchg lock int push add shr sbb nop jge rcr fwait lock sub pop xor push outsl inc jmp inc mov jp and push xor inc ss out push and xor je movsl aam in push dec or out popl (bad) rcrb push ret xor push sbb lods inc xor jp sub or pop (bad) ja sahf or pop sbb movsl hlt mov xchg stos (bad) mov push add mov ret fcoml fisttpl out stos pop xor mov dec add mov and add ja enter mov inc jns mov and jne or mov xor sub jmp and js push lea enter pop push adc cli jno jg inc rcl insb cld pop (bad) data16 dec jmp sbb mov adc cli outsl mov and xchg mov xor xchg stos inc stc (bad) mov pop subb and mov hlt mov (bad) mov xor in sub and daa sub inc dec dec or cmp push jle pop ret sbb fidiv dec sbb xor cld jecxz xor (bad) clc (bad) rcrl pop aaa xor inc inc mov (bad) push das in outsl sub adc push outsb aam ja mov mov fnstsw xlat jbe out decl test int test sbb in mov or adc je pop loopne jbe adc test jb cmp xor mov cwtl inc xchg and xor push mov xchg daa call adc daa add adc mov and sub and scas xlat mov xor push mov out push repnz shll sub push mulb jmp adc subl test data16 jmp jecxz mov repnz cmpsl and mov imul xor jno xor inc in cmp loopne sub dec cld push cltd stc push in sbb (bad) xor loop sbb mov push jno mov loop sahf incb (bad) leave ss aad jl inc cmp push xor out xchg mov fs dec push iret out mov cmp cmpsl inc mov mov (bad) push pusha xchg xchg (bad) divb sub jge push aaa seta xchg pop adc xchg stc inc xchg add or xor scas or cmp jb,pn mov pusha xor (bad) rclb shrb xor sbb jo jg add imul add sub aam mov bnd imul mov adc jno aam jnp sbb inc rcll addl mov add lea xchg pop sub mov mov imul rcrb push loop xor std dec adc popa cmp repnz push cmc pop rcll rcll push sub adcb mov and dec incb mov jae mov jmp mov sub add icebp xorb ja ss add or jne pop loopne lods adc stos inc push outsl rcll cmpsb std mov int3 jge push dec cs dec mov repz cmpsb mov (bad) mov xor aad inc gs mov jge adc ret adc adc sub push cmp push xor jnp mov mov inc daa scas xor fcompl push test (bad) je inc stc pop stc (bad) aam aaa arpl jmp xor repnz in xor and or ds insl sahf scas leave sub pop je jp xor int push push add dec sub lea daa xor jl (bad) (bad) int test jle icebp lods mov xchg mov adc pop xor jle imul mov mov aad cmp push pop cmp test js aas das add dec (bad) mov push xchg sti nop push xor xor in mov and movsl in pusha and cmp push mov idiv xchg jno (bad) xchg mov sti scas mov ja jne add ljmp (bad) je push je cmp (bad) xor jle imul jle xor lea jne and or jb bound std adc mov sbb dec decb xor fldcw aad dec add gs add aad mov (bad) xchg xor mov dec shr imul insl or jg test add pushf ja ficom mov xor das icebp sarb or pop jp sub sub jne sbb mov xchg pop (bad) xor mov mov pop pop imul cld jle test pop (bad) fsubl mov xor push push or mov (bad) cmp add insl and daa mov xchg les fiaddl mov adc repnz add adc aad movsl jmp je mov xchg decl (bad) jbe xor out mov mov mov jg cmp inc test stc push jecxz jmp imul ljmp inc mov mov pop hlt mov imull out jp inc es rcrb xor dec cmp pushf outsl (bad) push add or das xchg es push mov (bad) cmc fwait mov jno push mov iret ret in cmp jge je mov pop outsl mov je cmc jns push jnp aaa pop std mov or testl loop xor sbb add hlt xor inc pop inc mov scas sbb mov test inc jp fs inc (bad) divl je cmp mov push (bad) jmp inc adc cmc pushf mov hlt (bad) cli outsb fstps ret lods pop cld lods xchg cmp push aas cld xor jmp int ljmp (bad) imul sahf (bad) or pop repnz sub xchg add (bad) mov cmp (bad) cmpsb mov mov sbb ret into icebp xor lds stos xor push mov mov std movsb jge hlt int xchg bound sbb test ljmp add sbb and pop xlat movzbl cmp mov pop je std push decb adc ja cmp or pop mov mov mov mov sub (bad) mov (bad) mov pop sbb repz (bad) lahf adc cmp enter pop in jae cwtl push adc jle mov lods xchg aad call xor pop enter fs shlb movsb int repnz daa dec xor out xlat inc adc cmp mov push cmpsl in lahf add popf add (bad) je out cltd sbb les lea xchg dec mul xor or xor adcb aam cli inc movzbl cs inc (bad) jg sahf jb jnp mov mov aas adc mov stos xchg in jmp nop adc bound sub sbb cmpsb add xor add pop sub cmpsl ljmp inc push (bad) mov mov mov insl and jo inc mov jno out dec (bad) aad inc hlt push cmp ficoml in aam shl (bad) fstpl jmp sub sub sub xor mov jns scas ss addr16 jns xor xchg mov mov psubsb imul bnd out push shll sub pop subl ss mov scas addr16 ds jp xor inc mov je lods mov xchg in jmp mov fsubl jns sub dec cs ds lea fisubr shlb test stos xor inc pop cmp jae fnop jecxz xor xor pop push (bad) popa (bad) or mov xchg repnz sbb sub test jo int or int3 in adc sbb sub mov imul jo cmc bound imul gs es mov icebp or test (bad) cltd xor dec pop xor add jnp push pop cltd jne or inc xor (bad) xchg hlt das lea cmp aaa pushw xor add jae pop aam lahf sub jp dec add (bad) xor xchg mov idiv mov into lret cmc xchg adc add out cli into sti lea jg hlt pop clc ds ja push dec mov repz movsb adc out xor insl and cmp repnz movsl add lods push sbb ss sbb (bad) es and popa inc daa int3 bound decl mov insb and popa jge push inc mov in adc mov cmp inc sbb (bad) jge push push mov cmp cmp std in cli je add shlb and pop mov sbb mov das (bad) jg movsb repnz adc shlb push push add popf or cmpsl mov ja mov and adc jle js jl (bad) ljmp push mov adc (bad) data16 repnz (bad) leave lds mov or popf add inc xor (bad) sub xchg ret xor js jge cmp out ficoml add std (bad) add xchg clc call sti data16 xor lcall lods ficompl idivb mov pop shrl fidiv mov cli in repnz fist (bad) xor clc les sbb imulb inc enter xor xor push ljmp fildl and push push das call jns ja sahf sub xchg mov jb imul in push xor mov test adc add pop jbe jne xor test lods (bad) mov mov (bad) dec add pop mov mov ja cld cmp xor jge cmp jge xor push cmp cmp aas xor xor jle mov mov out and and cmpsl pop mov cli (bad) fist sbb scas push and stos pop hlt add or icebp cmc xor push (bad) mov daa divl mov xor in push out pop add push outsl arpl cmpsl mov xchg sub cmpsb adc roll dec jmp cmc gs mov imulb cmp das cs pusha xchg fcom xchg mov lret loopne fistpl xor icebp adc adc test movsl popf dec cmc outsb cmpsl cltd (bad) xor and mov xchg loop lods repnz or pop jo sbb bound rcrl add mov inc cs arpl je push sub mov cld jmp repnz jae lcall xor inc push pop jnp rol push pusha push push jae jge ja test lahf mov fucomp jno push repz sub lret add xchg in stos rorl pop aad adc jge jp fbld jns add adc jle lahf push ja jo xlat mov jns sbb push hlt or loop stos add mov mov imul std add jne xor mov sbb sbb pushf pop xor xor add push pop xor inc cmp mov xor in lods aas arpl or je sub jmp push pop push jmp dec clc sub outsb cli or fidivr sub (bad) insl jg xchg cmc fwait btr xor pop adc jge xchg sarl test push cli cltd push ds dec xor es xchg xchg push dec lea test sbb mov inc enter int imul pop cmpsb repnz loopne pop outsl jl sahf (bad) mov or adc cmp sub (bad) xor adcl push sub jno or in pop nop xchg inc addr16 clc push jb mov outsl jne and ret (bad) enter lcall mov inc loope cmp mov bound mov iret mov das cld test xlat in addr16 jg xchg test add repnz mov int lds cmp in popf adc jnp popa add scas jno femms cmpsb mov and push std repz push adc je das jno sub sbb xor (bad) scas and aam xchg jp dec hlt sbb add add sub sub sbb imul insb jbe sub addr16 popa insl sub push push push and aam inc xchg sbb mov mov jb clc inc dec shrl cmp mov adc and (bad) mov (bad) and rcrb cmp inc pop das jnp adc lea das xchg xchg inc cld sbb sbb or sbb repz push cmp int test inc leave nop das repnz xchg jmp out data16 sub aas xor inc repz xor movsl loopne inc inc pop mov sbb adc pop rcrb movsl pop loope scas cli dec les cli dec or push (bad) bound pop jmp insb or push mov cli mov dec mov loope scas bound int xor out sub adc xor lods (bad) jno xchg fidivr int lods xor insl iret or push xchg xor loope call ljmp mov lea mov stos push repz (bad) iret xor sbb sbb add (bad) adc jb or cmc push leave (bad) cld fsubs ficoml repz ret xor repnz mov aaa adc push sbb mov arpl scas (bad) mov hlt mov jle lret lds and cmpsl repnz xorl lds das dec adc scas xor cmp into adc adc icebp cmp and clc xor pop bound xor pop icebp repz jle sub test sbb lods xchg jp jb test jle mov cmp add insb sbb fs mov in clc and daa repz call jo imul lods jns xchg mov mov xchg movsb xlat cmc fsubr pop add fildll lcall sub or inc push xor repnz adc inc xchg mov andb xor outsb js outsl xor imul inc jecxz add sbb jne in jb loope in xor jbe,pt mov jae imul (bad) clc mov xchg sbb xor jno imull sbb add hlt imul and push xor fcoms popf hlt imul pop stos jno dec sbb cmp push xor sub dec push or insb sbb xor jb popa (bad) pop repnz add cs xor or xor dec xor sti jae mov cmpsl mov fyl2x adc stos cmp pop sub or mov in adc addr16 mov xor add or jno push xor add jle xor insb xor xchg sbb jbe jo ja or (bad) jb (bad) dec sbb stos xlat mov sbb push adc (bad) xor inc arpl je insl sahf (bad) push clc das lea xor sub fbld mov jo (bad) mov push push xor outsl adc movsb xor push lret inc xor sub mov xor inc jl sub mov pop mov lcall sti add mov mov cmp pusha cmpsl mov lcall stos (bad) dec mov test arpl idivb lret cld lret ja and and fwait dec insl dec cld (bad) js xor pop pop push ret (bad) jo cs and xor data16 int3 xor popa sbb or mov sbb ja jg dec adc push pop out test dec xorb add into test xor xor mov push sub lcall mov cwtl push xlat loop fsubs idiv pop pop and mov add out mov and cmp pop jne inc xchg jecxz shrb mov rorl sbb dec mov mov fisubr imul add xor jecxz cmpsl imul cli sub mov das sbb push xchg (bad) rorl xchg push sub mov aas mov xor popa mov mov sbb mov sahf mov ds xor loopne dec adc or sub mov out and and fldl cmp or push (bad) ja dec push xor mov nop inc loop jno push inc jmp js push int3 sbb pusha cmp fdivrl inc push cli adc mull adc leave jp,pt xchg rclb cwtl aam jae inc sti cmp or xor mov out cli jne mov add lods fsqrt shlb jns inc sub and pop xor sbb add mov or rolb mov xor cmp mov lods push sahf fnsave cmp popf jbe add lahf jg ss aas ret add scas jp jmp cmp sbb cs in mov jle sbb inc lods jmp rcr adc mov pushf in outsl mov mov dec imul mov mov ljmp out (bad) sub xor bswap cs and test clc add das pop icebp mov mov sbb call mov movups js jno sbb jno sub lea dec fs movsl (bad) repnz adc adc mov inc sub data16 aam xor pusha sub insl movl sbb sahf out cmp scas (bad) jge sub mov adc inc xor pinsrw das xor ret mov in jbe (bad) loopne pop je (bad) repnz mov jl std mov and dec ret mov nop push cmpsl jg xchg sbb mov cmc pop ljmp insl and fadds inc xchg mov fcmovbe add sub or (bad) jb cmp mov out sub push stc int mov xchg and sar xor xor mov (bad) std push sub psubsw xlat cwtl cmpsl nop adc xchg inc int fcmovbe inc add sbb (bad) jmp rolb scas aas add mov (bad) cmpsb adc testb loop movsb inc insl and repz cmp or or push icebp test lcall (bad) mov (bad) jge cs adc mov add inc dec sbb dec movsl lret xor mov jmp jmp imul inc xor mov lods jge mov into hlt imul cmp or cmp sbb ret jb cwtl inc je scas and and std cmpsb mov xlat mov push ret test add jae sbb sbb scas fsubrl dec lcall inc jb jmp xor add and pop dec mov sahf mov adc sbb test and jge lods aad jo aas cmp fnstenv pop sbb xorl jle add subl xchg repz cmpsl cs jle cmp cltd xor shlb sub inc jecxz sbb xor cmp dec and push cltd sbbl sbb loop push or mov add and xor jle in popf lahf mov pushf ss daa ret leave stos jo inc push mov mov adc xchg fcomps add adc lock and adc cld (bad) mov add cmp pop inc push jb mov push lret je or pop out cmc push and scas mov repnz fildll xchg jae push or cmovo ss je push fs outsb mov ds lret leave mov adcl add js jle icebp hlt lock jp ds sub (bad) fdivl add pop fnstenv cmp outsl adc mov cmpsl inc dec and mov mov js xor adc test xor jge xor or push mov movsb in rcrb xor mov adc cld imul fs incb repnz je ficom jl jno mov jae mov outsl xor repnz ljmp xor sbb sbb idivl mov push pusha inc dec add dec jmp hlt xchg mov popf sub test push clc mov mov popa pushf dec mov repz xor push adc jo das mov sub mov aas and sahf inc inc or sbb dec clc add xor jmp lcall jae xor cs fist mov or xor cli pop add xor cmp pop aad pop dec push xchg repnz (bad) aam sarb lock (bad) adc or pop ror repz xchg std lret dec jo loop aaa scas (bad) jno mov xchg xor shrl xor (bad) into jnp int mov or enter test jl jb cltd push push repz mov push xlat repnz jge xor test or adc (bad) hlt jl loope pop cmp cmp fldcw cli lret loop dec and daa cmp mov mov ljmp call addr16 xor jno mov push lret jo mov push push aaa pop or add fidivl jg mov add inc scas xchg pop adc lea call je cs push pusha iret mov push sbb sbb xchg loope cwtl push or shr sahf adc stos sub mov lds mov or jno je adc imul mov aas sub jae in dec or aam mov jbe (bad) out clc jae add or mov and and repnz jmp push adc mov pop sahf sub shrb enter push je sbb in mov mov mov cltd cwtl pop repz mov xor sbb mov xchg lcall sbb mov std xor pushf mov sub sub mov jns mov xorl rcrb pushf aam sbb je imul das ret cld sub mov pop mov cs hlt adc mov fsubr hlt sbb int3 ret rcrb repz mov pop cmpl and les imulb cli mov out jnp xorb test mov cmpsb scas mov bnd jb es xor add mov xchg lcall add aam sub std sub hlt (bad) decl lods pop sbb mov stc xchg push es adc inc mov inc fsub sbb (bad) jmp mov pop cld divb inc jp sbb loop mov hlt cmpsl out mov jbe lods popa xor shrl mov and lods jb inc mov mov testl (bad) lock xor push and xchg lret cltd or jae cmpl orb popf jmp test cmp inc je cmc mov jne roll add aas add sbb pop xchg pushf cmpsl push sti xor push loopne emms jae orl rclb dec jmp in xor and les jle (bad) popa sbb int3 test mov mov pop sbb inc xor divb jmp int or dec out push adc jmp xchg jns addr16 add cwtl inc dec dec cmpl sbb aad push insb clc lret into rdmsr hlt adc stos jl data16 psubd cmp mov dec inc fs inc cmp iret aam xchg sub in js xor lods or jge jae and sbb xor scas xchg xor mov mov jbe scas bound lret clc lahf xor outsb cs insl cli insl xor cld lods aas adc iret fcoml xor sahf push cmpsb (bad) seto mov lret and daa push scas mov sar sub data16 sbb popa jbe pusha sbb (bad) pop adc pop leave sti xor mov pop ja data16 xor push ljmp pop sbb aad fist hlt and (bad) lahf sub mov dec sbb or sbb dec pop ret aad repz out sub arpl or mov push ljmp adc ss daa fnstenv sbb inc jno push xchg lret xor push sahf cmp loop fidiv lret add cmp sbb xor sub mov cli test jge add out int mov add (bad) xor ja cli cmpsl mov xchg adc mov push lcall mov add hlt jo add cltd and mov mov jnp jg popa out adcl test mov cltd repnz sub loopne aad mov repnz mov js mov push xchg popa fisub jno in mov test std and jno icebp mov ficoml push dec in xchg js pop in add mov loopne inc push xor pop xchg pop ja and and push pop scas xor aaa mov setge popl or outsb aad jge xchg xchg xlat repz push and xlat cld sbb sbb sub leave stos loop jb or std adc sub sbb add xlat lahf ficom mov sbbl inc mov jmp pop fsubs (bad) or jo pop cli mov add xor imul jl sub std pop pop lcall adc mov mov sbb mov out jb jp mov test inc or adc repnz pop push adc xchg gs call cmp test sbb nop hlt add test xor stos (bad) bound imul xor push cld inc and in popf cli out lods mov enter nop sub lcall das fidivl xchg xor pop cmp fdivrs xor in push cli hlt addr16 add jle jb push mov mov gs ss jb paddb mov insl sub movsl popa cmp xor mov and stc ds push cmc xor shll roll mov jge repnz mov cmp or test ret xorb xor enter aas xor mov in push cld mov mov xchg mov data16 xor clc int cmc xchg and cld lods enter movsl dec sbb dec sub imul push push out jl lahf and xchg mov je add xor and fwait mov aaa int3 frstor cltd enter das mov fbstp adc jbe aam add xor mov mov int3 inc xor std pusha arpl orb add cmp ret aas xor lods sti dec (bad) ja out clc enter xchg and icebp xor pop pop sbb mov lcall xchg or leave cmc mov pop jae lods clc jns inc js cmpsl rcl (bad) mov or push jae pop pop repz mov hlt sbb or loop sub cmp stos inc stc xor push mov repnz js daa fisubrl test sub and dec inc add rcll hlt inc clc ret xchg mov sahf clc insl dec xor or cld xor adc push add stc fdivl jp ret fdivrs pop mov sbb mov fistp out inc sub aam sub jbe loope cli ss divps or cld in pop fbld cmp inc xor insl cmp imul xor movsl orl or fildll xor bound in out and xor jno clc jne fs jno mov adc mov ret inc xor mov jecxz xchg jae loop xor rcll mov repnz mov out jl jp xor sarb ss add inc cs pop gs subps inc (bad) cmp jae adc popl (bad) fdivp mov mov jne hlt push lret aam adc fidivr out inc add adc xor sub lds mov fild lcall jae jle adc xor lds popf pop xor sub and push add movsb xor push add xor outsb xor jecxz int dec (bad) and faddl icebp lock in loope fs mov pop pop push xor push (bad) mov dec mov and imul (bad) (bad) ss pop in cmp sarb cmc popl imul jns sbb divl rcl leave adc push dec std icebp jbe in and arpl iret ljmp sbb (bad) je js jmp iret mov mov xchg xlat mov jb dec sbb mov dec sti jae jnp dec inc xor ss mov roll cmp or adc cmp dec push sbbb ret fcomps mov push jno rolb or xor cli add nop add sbbl adc fildll ret test push xor mov imul xor inc cwtl (bad) adc test sbb xor jnp fldpi adc push pusha sbb hlt sub dec adc insl pop xor xor insb out or sarl pop (bad) jg xor adc ss and mov pop sysexit pop dec data16 push mov repz fisttpll jl fisttpll pop into sub (bad) mov jo mov cmp pop push pop jmp inc push jno (bad) outsb rolb push mov mov call sti mov aam lods cmp cltd add or push adc gs pop sub dec jns jp xor aaa xchg mov mov push movsb sarl adc cli mov in je pop imul xchg mov nop and dec xchg sahf xor and sarb sbb jne jb push fstpt add mov inc jmp aaa daa imul xor loope xchg mov int mov leave push rdtsc shrb (bad) frstor xor pavgw inc adc jae clc les cld xor adc ficompl arpl ret jae fisubl xchg sbb xor adc cli cmc (bad) jecxz xor or mov sub lahf outsl or jbe sbb out xor sbb xor jb insb mov sahf scas push sub sbb pop and (bad) aaa jb aad loop bound pushf int dec repz outsb push test hlt rcl arpl cmpsl ret sub jnp add jp mov inc pop or pop out and inc xchg scas and push ja cmp mov cmpsb repnz inc lods and int pop lods aad imul jmp repnz xor out std sti repnz pop mov clc jbe cmp mov sbb inc jo sbb push cmp nop sbb arpl xchg hlt cmp cmp pusha jnp xor shll (bad) pop push adc clc mulb adc test sub div out mov jg jnp scas mov sbb (bad) fdivrp (bad) les push mov mov xor (bad) in push mov pop adc sbb (bad) jb orl hlt jmp sti das adc and dec sub repnz jp jb mov cltd dec ret hlt mov add sub jmp pop xor aad dec jmp mov cmp ss inc jb sbb fdivs pusha xor (bad) lea jne mov test ss je popa and pop mov hlt fyl2x mov decb dec sub xchg addr16 and mov adc push xchg lods jae ss and rol int add lods fs test mov fcmovb mov or xchg xor mul jno push cmpsb scas cld jecxz fstps pop aaa ficoml xchg add push scas add mov repz jae je test jno mov sub lea imul push aam cmp sbb pop sub (bad) xor inc jb jmp xor cwtl xor clc rol xor xchg mov mov and mov jl rcl aas adc push cmp stos pop repz add xor out scas jb xor movsl mov sbb or jae or je pushf sub movsl dec hlt cli pop repnz popf jo jae sub xchg jnp les jmp push jns sarl push ljmp sub mov vmovupd cwtl jo jbe mov mov rorl cli jmp sbb (bad) jne add mov pop sub jge cltd cmp mov push (bad) jo jo push add (bad) aas cltd iret xor ret aam mov push mov incb jne add xor push das cltd xchg mov repz aad jne jp and in or int3 jo push (bad) mov outsl and fucomi or in (bad) sbb jae and fistl je pop dec sets out bound add iret jg adc negl sbb jmp mov jge decl xor pop xchg dec adc lret inc out and jg clc jns dec xor aaa orl xor inc mov mov popa sbb or cmp hlt stos xor mov shrb xor mov sbbl add xor xchg (bad) ljmp test jg pop dec insl push cld rorl das mov pop sub xor repz bound pop inc outsb xchg scas jmp (bad) scas repz inc add mov mov dec outsl lahf jmp insl mov mov mov lods mov loop jbe ljmp inc or xor pop daa mov cmp loope sbb fcomp test xchg add int push bnd cmp xchg cmp adc xor ds or inc pop add inc imull in lret xor cmp cltd dec pop stos or push inc pop push add xor cmp xor adc test pop push imul insb push sub mov add sub mov jecxz hlt hlt arpl mov aaa pop (bad) sbb mov jae and das in jecxz mov data16 clc cwtl pop cld inc dec out adc xor nop jmp xor dec jmp mov mov inc and cmc xlat mov mov (bad) fidivr ret mov imul (bad) mov cmp xor xor add mov icebp repnz fnstenv (bad) lret in mov inc mov sbb add (bad) (bad) fdivl jecxz xchg pop adc xor jecxz into call push arpl mov adc adc lcall test gs xlat mov clc (bad) dec mov sbb in xchg out repz cmp inc adc je dec inc sti aad prefetch add pop push sub dec or push cmpsl mov xchg jge bound fmul sbb mov mov push adc fidivrl push xchg mov mov mov jg negb aaa sahf push and lock cmp jnp sub mov js adc pop ja inc sbb xchg je adc mov mov push addr16 jne in mov hlt xor mov push xor aam (bad) cmp movsl stos or sub push daa sbb mov push stos sub icebp mov in jne emms in out pminsw push or imul (bad) adc cmp add sub dec mov adc mov lret sbb outsb mov jo call xor dec lods push mov mov dec xor adc sub aaa mov adc repz cmp xchg mov mov das xor mov ja mov inc lret cmp push iret jle mov in pop mov js lods jne les mov lods aaa inc and aaa push mov (bad) movl fildll lds inc ds mov adc jne fistl bound inc jge push jo rorl xchg ds mov clc scas sub mov out mov rep mov imul and loopne jne add push out movsb xchg and xor notl movsl lods ljmp ja xor push sbb aaa mov push bound les and sub gs or clc cmp sbb sbb aad mov sbb dec das add cli cmp push fidiv test in lcall xor inc rorb cwtl inc int stos xlat cmp mov xchg sbb in hlt push cmpb cltd sbb je cli data16 add jbe adc (bad) (bad) dec pop xor cltd cli aas inc xor bound cld inc rorl adc xchg out push ja and mov dec add movsl xor fidiv pop xchg aad repz fnstcw xor mov dec and push pop pop repz or adc xor sub jnp sete (bad) stos sbb ja sbb jae pop add cld and pop add mov push sub mov xor add cmp pop pushf ss mov or push punpckhbw loopne (bad) jecxz js imul int xchg xor bts xor xchg cli aaa pop mov or gs mov bound imul push int loopne sub pop stos lahf push in mov cs fisubl dec icebp xor sbb dec fstl xor inc push sbb sub das popf sub ss mov and ds mov jecxz (bad) int fcoms lds jle in sbb jmp orb fistp mov daa (bad) jp pop push enter mov rcl mov sub div pop dec stc jnp loopne jb xchg shr sub xchg jae adc jae orl jp sub mov imul push in lret mov cmp (bad) hlt rcl add call test and sbb inc pusha push repz sub mov test sub pop mov sbb xor mov add sbb jp loopne out rcr int3 cs jmp and jno mov (bad) sbb cli (bad) mov fs push mov das xchg inc bound icebp pushf xor xor and repnz insb pop mov adc pop inc mov adc dec movsl test cmp (bad) add pop sbb xor outsl les gs aad sub jo xor inc push jb add add add divl pusha xlat out cs adc jnp push pop xor (bad) xor cmc mov push add jae jge xchg sub or push xor sbb xchg aam pop xchg inc (bad) jmp decb xor push jg stc mov xor sbb ret mov loope lock pop sbb cmpl (bad) xor jno daa xor in mov or stc pop jne sbb lods add mov xor push and in call test push test xchg dec aaa hlt stos xlat mov pop ja nop roll mov mov mov mov in cli fcmovu pushf dec xor std je lret xor jae cmpsb (bad) xor outsb and es addr16 xor fisubrl jne test push cmp jl xor sti arpl cmp push stc xor enter fidiv inc mov in cmpb pop and xor ds pusha jmp jl xchg push cwtl leave (bad) sbb aaa add lcall in push adc imul mov sbb jl add jae mov call mov test stos xor or dec lods clc pop nop cmc stos xor fnstenv lds je outsb (bad) bnd ja pop xor or add adc cmp xchg aad sar rep rcrl dec xor inc ret fucomp repz test and sbb jo push push cld mov xor add out ss push aaa mov mov mov shrb adc jle out xor sub dec mov xchg cmp adc sbb cmp inc arpl frstor scas clc outsl int int3 jecxz subps daa repz mov iret jns in sbb daa xor or or mov mov je inc pusha pop sub fcompl bound adc int and mov das cli mov xor push (bad) je repnz int3 inc mov fisubl mov add cli jg push hlt out mov sbb loop adc mov pop inc shrl and daa xor ret sbb xchg push sbb jb into loopne aam cli nopl inc pop ret lea xchg mov frstpm(287 sbb jp sub jmp cld imul (bad) aam mov mov cli cmp int js repz arpl jne sub pop jb sbb jns sbb lods inc mov repz movsb cmpb sbb pop mov add xor jno jl insl loop jl mov fistl push inc mov xlat (bad) addr16 cmp or (bad) jne adc cmpsl inc mov cli fnsave mov pop shrl xor lea cmpsb adc jmp std mov mov movb cli pop insb mov mov inc sbb inc mov cmc movsl jg scas or xor jle xchg outsl xor enter je inc stos pop cwtl adc adc jle sbb ss pop xchg (bad) add pop es jmp mov data16 mov cmp inc in mov cmpb inc jl hlt mov mov sbb jae push cmp lods loopne inc mov mov and adc dec mov xor xchg xor push aam mov xlat out int pop push xor push inc mov psubb xor push and mov bound or mov mov nop leave mov xor lcall pusha xor repz xor out mov adc icebp fild lods or inc mov ret and les sub fbstp lahf ds (bad) adc xor cmp dec mov jg inc jecxz add imul cmp dec inc adc inc xor sar cwtl add dec jae insl movsl dec xchg es out mov mov aad adc test xor ss push xor inc insb jns mov dec (bad) (bad) lret jnp push divl cmp ljmp and inc insb ds out jmp and add insl adc lock aam inc pop in hlt pop add ret sbb mov mov lock cld push lods nop add cli jbe loope sbb dec sub push pop sbb aad sbb adc mov xor vpunpckhwd xlat js dec xchg adc mov xchg fisttp jo js je pop in sarb pop pop rorl jb pop xchg mov xchg jl and sub add adc xor jp (bad) and fnstsw sub loop fisub mov mov (bad) shlb cli push enter nop sub imul in in sub adc adc add cmp out or push and lods rcr mov xchg xchg cli ss push out mov cmp xchg (bad) repz gs mov bound aas push in and push loop arpl jle jmp ret cmp out (bad) xor push lret out jecxz dec or and sbb mov mov jb jno ss je,pn lock or cs dec lcall mov pop xor cmp mov mov int3 ss lret mulb jbe fidiv xor add pop or xor add xor fist scas push push add and xor out fldcw push outsl xor pop xor jno mov jae ret clc adc mov lea sarb xchg mov adc or inc push add je (bad) xor mov (bad) rolb lods and pop cltd mov dec dec jmp add gs aam jmp cwtl mov push jmp sub xchg jb jno add out leave shlb lds (bad) sbb xchg hlt ds mov pop or jb xchg nop imull adc adc imul lcall pushf xlat addr16 addr16 insb lret addr16 mov lods jge push mov xor aas shr xor xchg mov pop das les hlt ret mov and mov gs je repnz icebp mov sub xor inc insl cli mov sub stos xor mov mov xchg mov dec out std lahf lcall pop mov (bad) stc and addl mov std aas pushf mov mov out push pop cmpsb or sbb repz nop shll aam mov adc mov or cli test pusha push sbb (bad) (bad) xor sbb imul add xor xor addr16 xchg sub cld jl arpl mov lahf imul cli je sub xor (bad) cmpsl lea sub leave pop push arpl sbb in ret or mov pop stos mov pcmpgtw sti ret xor jl and outsb mov adc sbb push call (bad) jnp mov hlt imulb stos push lods out scas jb sarl hlt aaa mov dec ds sub cld sbb mov fs sarb ret loop int3 xchg dec enter outsb insl and fdivp xor fcompl dec inc sub stc out xor mov sbb lods loop sbb pusha repz push mov mov popf frstor fcompp xor or mov icebp call xchg int3 iret sbb sbb (bad) dec inc into inc sub outsl mov je (bad) jne jecxz xor addl jp test push mov mov fstpl jp adc test add (bad) xor imul push (bad) repnz jmp ja and pop (bad) xor (bad) adc add or pop and sbb decl popa fdiv repnz inc scas xor pop sub icebp sbbl lahf xor pop insl push pop xor (bad) xlat xor push inc and push lods adc xor stos or pop lret xor sti call adc lcall xchg add rcll xor push pop or mov imul in push xor lock sbb adc (bad) lahf and xchg hlt lret push dec add repz icebp jmp mov cmpsl data16 shr dec mov sub pop xor dec lahf mov je mov pop jle inc jns xchg movsb cs adc sub push push (bad) sub adc gs cld inc outsb push or repnz and adc cli mov inc sbb inc mov lret orl xor into fwait bound add outsb and mov icebp jle mov data16 int pushf xor je mov pop aaa es mov lods icebp stos out mov inc jecxz add cltd push or rcrl out imul xchg adc mov cmc (bad) and sub cmpsb data16 sbb cmc mov hlt xchg adc out popf enter out je movsb push lds pop std mov rdtsc ret inc and jge ss jp xor test (bad) xorl out inc popa imul xor xor and bound int ljmp in out mov push lods dec gs ret mov dec add iret sub mov movb jp mov iret sbb test adc cmp insl push cmp cmp adc aas sti pop outsb xor push or inc xor mov jg xor fcom pop or imul je movsl in lds and mov sub jo sub mov pop mov xchg sti xchg mov add aas push xor pop or (bad) jg loop stos cli fwait notb jb add mov cmp in lods aaa movl dec xor push ss lret cli scas pop push sbb sub repnz adc cli pop lea repnz fstl and imul test rcl mov mov pop xchg in jno das lods or pusha (bad) psubusw imul jl pusha xor cmpl mov int3 jecxz les pushf hlt in leave adc xor xor sbb test xor or add pop xor out push (bad) pop jmp cmpsl or adc jecxz mov andl xchg je jp sti lahf adc das inc mov test adc fldt pushf aas xlat jl sbb in rcr jnp xor sbb xor add mov mov adc shll ja inc scas out daa mov sbb movsb imull mov scas icebp int3 popf (bad) aam out mov testb mov push pop jle,pt (bad) cmp and sbb pop jae inc push adc stc sbb cmp or (bad) push mov ret xor ja xor rolb push mov cmpsl mov jg outsb or fildl je add cwtl mov or xor xchg pop mov ror mov sbb (bad) mov in std inc jns ja (bad) cmpb repnz movsb lret sbb cmp repnz jo ret sbb pushf and sbb fild (bad) popa sbb sub repz adc fwait pop lret jp jge,pn neg je sub pop dec sub arpl rcr addr16 outsl jmp xchg xor inc ja sbb and adc inc les fwait lahf cmp mov push or in shl cmpsb std pop sbb jb or pusha les ja and lods mov pop je push adc mov sbb mov push adc jp aas pop xchg lret ds xchg data16 jg xor je pop pop data16 imul or adc orl inc cltd mov jb int nopl loopne jle add dec cli lcall std mov lds insl inc dec sub lock (bad) mov and into lcall outsb mov stos notl jb repnz xor xchg jmp rcl out andb adc hlt sbb int mov js mov push inc stc xor push xor push int aad or mov jge idivb xor mov and dec je loope sar in outsb cmp add mov das repnz and lock and mov mov mov test lea xor jne dec sub push and or int adc dec fdivrs jge or es or int jb sub sbb pop movntq jns cli or dec push ret push push jo or cltd xor stc out sbb pushf adc inc xchg test ret in inc fcoml and sub xor sbb mov sbb jo cmpsb xor sub stos pop sbb (bad) xchg das adc add test (bad) repnz fsubrl testb mov inc pop cwtl pushw jg push hlt or xor test mov std xor sub mov cld divl addb mov stos mov repnz imul jns pop shlb das mov xchg mov dec push jl sub mov cmp pushf cmpsb xor sahf icebp lock in mov mov mov in fnsave xor insb mov mov cli inc mov cld cmc repz in scas clc jno xor xor clc inc cld xchg in test dec xor jl xor (bad) fdivl lcall int3 sub js xor pop test fcoms hlt dec dec or fadd xchg fild std neg mov inc mov xor aad jp xor sbb lcall lret dec cli push push mov cmp mov (bad) jno daa mov scas arpl out sahf repnz out pop aam repz cmp ret xorps xor les xor fistpl jae dec push dec stos ret push jae inc sbb jne test add cmpsl sbb jnp mov xor dec mov jmp jo xor fnstsw hlt outsb insb sub xchg inc mov or dec cmp pop add loopne repnz and add push mov pop xor xlat xor xchg addr16 insb jae imul xchg xor sbb dec stc mov sub fnop jnp xor addr16 pop adc hlt push stos mov sub sub jns enter in xor mov xor ret popf push loopne lcall movsl and push mov fs jae dec xor fadd cmp loope inc (bad) inc pop pop cld xchg mov cmpps iret pop jae int jne adc add adc call sarl mov lret push lods ret leave hlt test mov dec divl sbb (bad) cmp pop jmp fmull nop test adc lcall sbb (bad) mov nop (bad) mov clc sbb sbb xor outsb (bad) je inc sti ss outsl in jb arpl loop xchg inc out out xchg (bad) jmp ret add pop lds std dec pop aas xor or test mov lock pop rcr repz les pop imulb ret cli xor fistpll cmp cmp mov imul das imul sbb add mov movsl xor call aad insb inc sbb mov xor jbe jae mov sbb fstl xchg in jle push je push imul ret dec aas and mov ss cmp sbb pushf mov repz clc cmp scas into inc jle aad out add jb movsl sarb loope ds sbb repz jo movsb jb xchg rorl xchg insb fimull xlat jo in sub pop (bad) rcll adc sbb sub inc mov idivb mov xchg enter nop ds sbb lahf jne pop mov lods fdivl loope jecxz sub cmp adc fdiv rcrl jb pop aaa repz pmovmskb (bad) dec repnz cmpsl (bad) je or iret push mov popf outsb jb cmc xor inc scas jb xor pop fsub lods add (bad) jmp int3 push xchg pop sub push push or jno int cmpsl add and mov into mov add ja arpl stc or push xchg and outsb jmp jl sti daa xor jmp test mov cmc push and cwtl mov jg sub fnstenv add mov mov mov rcl mov outsb sbb fcoms cmp out sub cmp lret xor dec add jb or (bad) sub stc jmp or lods bound aam pop inc sbb adc in dec push sub test lods push inc cmp stos cmp mov ja jge add jmp adc jg jo adc xor rolb jmp sarb sti xor dec mov or jp pusha (bad) mov cmp into adc hlt mov or cmpsl push push fbstp dec xor je lds mov out mov mov pop xor and das inc mov push test ja jns xorl clc idivl jg (bad) jae sub cmp outsb aaa imul push stos pop test adc mov cmp gs mov outsl or add ret xchg (bad) or into fdiv mov lods in or (bad) cld lock pop or hlt xor mov add stc in cmp dec pop (bad) jl aaa stc xor sbb mov push or daa dec pop lds jbe gs cld movsl pop adc push adc xchg adc add pop sub cmp loopne or scas jo cmpsb jae lret jge and adc jmp repnz and int3 mov pop cld lcall jno clc jmp cmp dec jno cmc ret shrl and adc (bad) decl dec jmp xor imul in mov mov xchg xor xchg mov xor hlt lret xor clc out aam inc add hlt dec mov mov js outsb or dec jp je cld push inc fcoml aaa js sti cmpsb xor xchg scas xchg pop xor jo lods mov sub add jno cmp daa jmp pop enter xchg cwtl cmp mov xor mov (bad) hlt in and and xchg sub js and lret addr16 fimul pushf movsl hlt add or enter mov pop stos outsl mov xor sub ljmp jne pop mov xchg out sbb xchg xor and xor mov push push test pop (bad) jecxz,pn or repnz mov cmp sbb aaa push xor cld adc sub sti fmulp popl scas jb mov hlt hlt push rorb mov add mov clc jno adcl pusha xor cmp test ret xchg addr16 arpl dec sbb aaa xchg divl roll mov jo hlt insb dec sub adc and stos or pop xchg mov dec sarl jmp xchg add xor rorl and int xchg xor dec outsl and xor out (bad) loop xor fstpl mov fisubrl rol icebp movsb sub xor adc lcall arpl popf ljmp (bad) mov xchg xor pop inc lea and int std fistpl or insb jmp cmpsb ds insb and or pop cwtl es daa popf je ffreep push xor push cmp fnsave ret mov aas push insb sub jns cld les pop stc mov mov stos imul adc or xchg xor xor das sub and xor sti xor insl dec cmpsl jmp xor sbb adc shll and jb mov aad mov mov push cli xorl xor (bad) jne daa mov bound fildll subl hlt dec sbb stos adc aas and cmpsl int3 cmpsb fmuls movsb in jo std ficoml dec aas mov leave nop jnp cli and pop xchg sbb call hlt pop test sarl cmp mov sub push mov je cltd add stos and xchg out mov add movsl jbe clc inc pop out fidivr dec xor mov std andb adc xlat aam cld pop and les cmp add xchg imul xchg sbb lods jo cli or and sahf push (bad) iret test pop (bad) fwait je dec add in movsl mov in (bad) mov push jl xchg xlat sahf cs or jge jmp dec or imul ret test mov scas mov fisubrl bound mov adc jecxz cld pop mov out mov dec inc inc imul xor cmpsb ja fwait lea push les adc mov movb fadds pop out rclb xor (bad) push ja cmp dec inc mov (bad) mov repz (bad) hlt sub or sub xchg jmp ljmp xchg lahf xor sbb decb dec nop xchg and or mov jnp cli rcll or jno inc cmpsl loope cmpsl mov lds jl stos rcr cli adc jmp les mov and sti dec mov inc mov in imul and xor jle cmpsb dec fidiv push cmpsl mov imul repz repz sbb mov fsubl mov ljmp ss push shl int3 xchg add lods xor repz cmp and adc mov inc add mov push sbb ficompl (bad) outsb cmp jae gs mov imul out xchg xor xchg ret sahf inc jle sub cmp xor fidiv inc dec inc das xor push fs sub push xor and in xchg (bad) popa adc in je push fdivl in xor ds mov inc push ds enter out push (bad) out fstpt xor cmp fnsave outsl or add cmp jne movsb lea inc stos or mov cmc fstpl push mov fs ja cwtl sub ss popf push jmp xchg dec sub lcall lods rcrb fistpl mov fstl inc add test aas outsl mov push xor mov sbb sub mov mov inc imul movsl sahf or sub fisub push popf push mov mov jp sbb xor pop dec scas or adc pop jo insl mov xor xchg aaa jmp xor or fldl jns and imul adc push xor dec sbb dec push adc or and in rorb inc mov imul movb pop int jbe xor dec add cmp das xorb repz dec das movsb gs dec xor jge push sbb es bound jle lret (bad) xor dec out pop js sub jno xor insb ds adc and jne movsl sbb adc fdivl or movsb add (bad) mov inc pop (bad) inc addr16 pop adc daa adc xor jle jge and rcrb xor rcr loope sub pop bound pushf jb or jmp test xor leave repnz (bad) aad ljmp test addr16 or rcll xor shlb movsb pusha mov loope je in lods or and push sbb sarl xor std icebp cmc aam nop notb and or jecxz and push adc in xlat jp rorl dec cmp movsl hlt mov fnstcw popa add xor data16 adc adcl xor mov fs dec outsb dec push add hlt pop insl ds push or pop adc pop (bad) jo dec arpl ret clc xor les push or int mov das mov repz xchg es cmp int jmp pop xor jecxz imul or jo mov fidivr lds aas imul push test or adc adc mov (bad) call xor je or call dec adc mov inc add cmp xor add leave push pop mov and xchg push scas xor fldl aas sbb lahf js jbe jge lods xor (bad) fistpll dec sbb xor ret (bad) mov lret mov popf hlt movsb and lea and shrl aad psubd (bad) xor fbld rclb push ficomp rorl add jno stos mov stc xlat repz hlt push loope sti out clc clc sbb mov adc jae sub imul jno int3 cmp add lods mov sbb pop jmp adc push fdivrs sub movsb pop (bad) cmc cli shrb adc sub (bad) fisubr out inc (bad) (bad) (bad) xor jo ds fsubr mov push imul dec mov adc jmp add dec popf test xchg adc sahf adc shr push inc push mov (bad) xchg cld lds jb lret push mov jg (bad) int3 sub lock fsubr xchg loopne adc push sbb daa jmp mov push xlat sahf aam sub and lahf xor push movsl push mov add push sub jle adc aad dec popa fmul enter mov js lret call mov cmc (bad) (bad) xrelease jns das in sbb in in fcmovne scas xor jl adc imul pop (bad) jae js popa rorl mov mov xor mov adc (bad) lret pop int3 cmpsb je nop pop arpl je jp (bad) aaa jg fistpll jb jbe push lcall xor pop inc inc bound cmp adc cmc sub jmp jmp cli out pop sub xchg aaa and xor sbb push call or xor popf xchg cmc jle out (bad) fist stos xor jo fcoms ss lods push lret xchg dec scas stc push fdiv sbb into add fnstenv and arpl sarl repnz xor sbb insb and popf (bad) xor lds inc cs stc xchg mov add add jge dec inc ja lahf sahf xor push sbb inc sub jmp mov (bad) push mov push aaa sbb xchg pop push sbb pop or mov mov jg (bad) cld or and (bad) outsl mov (bad) sub push daa scas xor dec outsb je dec sub xor sbb adc repnz and inc repz adc xor jl pop sahf jb jb lret lods aad mov lret (bad) notb push insb mov lods div addr16 push hlt fdivrp dec mov les mov lret jmp xor adc push sti xor fimull push pop in xor imul and add push and lret mov sub jnp aas push cmp sbb dec cld xor adc in xchg push push jl cmp push out mov insl test mov push rcrb addb pop mov cmpsl addr16 mov cmp mov sub mov mov jmp mov shlb ss loopne and mov add jge rcrb mov es divb inc (bad) cmc sti xchg xor and cmp dec inc sbb mov aas (bad) mov xlat ret or sbb xchg popa imul ret sub mov dec (bad) pop mov xor adc xor (bad) sbb inc repz leave jle (bad) jge xorb aam mulb inc sub imul mov xor scas mov gs cli xchg jne inc add jle hlt scas std insb sbb lea stc cwtl js hlt dec pop (bad) int push mov xchg je lods pop fimul inc add dec jno jb ds push call cmpsl aad xor jae imul mov dec xor pushf mov mov inc sbb sbb mov dec xor xor sahf add add add test or popf int3 cld xchg xor out push mov pop xor daa mov xor push or inc mov pop or mov inc jl mov jmp insl xchg jl (bad) adc in xor xor xor repnz xlat and lcall xor cli sbb sti mov adc (bad) inc (bad) add ffree scas xor push mov in jne fiaddl aam push sbb jp jp jae (bad) sahf das (bad) xor dec add mov mov lret jne adc incb (bad) jg in sub jno inc sub les mov sub out mov pop aad lret movsb negb ds adc mov aaa mov jno mov ret push push or sahf xor into das out hlt inc cmp clc push inc mov mov xchg lcall xor outsl mov ja ds xor sbb mov mov jno push pop xchg cwtl xor mov jae push lret xchg js xor jae ljmp les outsb add xchg jmp or into out sbb sbb xchg dec pop xchg sub mov sbb mov lods add stc mov cli test pushf pop scas xlat repnz add push daa pop cltd push push dec cli push xor inc cmpsl or xor pusha sbb dec mov ds xlat cmpsb jecxz adc mov imul les out cmp aas xor lret mov pop jmp cmp dec adc enter outsb inc xor clc repz xchg jecxz inc hlt add std mov cmp pop xor in add imul pop push pop mov xor and ret xor xor clc loop mov lahf lret adc (bad) icebp jecxz ror inc mov adc (bad) mov loop nop or mov or sbb xchg sub in cmp dec popa mov movsb xor mov sbb lds movsb std (bad) push shrb ret leave push pusha mov add jp mov jp push mov mov cmp or dec std cmpsb and jnp repnz imul in jbe mov pop imul mov mov xor sbb pop cmpl xor adc hlt hlt das daa add inc cmp mov enter faddl (bad) cli pop popa xor loopne sub mov (bad) mov xor cmp dec xor fcoms popf xchg xor xchg push xor sbb in mov notl mov push jne lcall pop jnp hlt div jmp sbb or add sbb in mov scas js shrl (bad) push jbe daa icebp clc sbb adc xchg je pop fldenv inc iret repnz cmp inc inc out outsl adc sarb fwait add or xor (bad) sub dec sbb (bad) jae mov stos daa leave scas xor stos sbb xchg or loop xchg mov or xor (bad) xor inc ret push sub inc loop cld cmp xor lcall pop mov mov add dec xchg lret sti sub or pop fcompl repz clc inc (bad) std lret xor faddl movhps les add mov mov cmp sbb sbb jp retw mov sub push inc adc mov and mov xor in cmp push inc xor ljmp outsb jge xchg dec (bad) jge repnz mov jge test cmp cmp cltd xor or jge imul mov dec mov adc das add inc stos cmp mov outsb loop xor cmp repnz or jmp add scas jb sub pop add add (bad) int3 and repnz int xor scas mov jmp push push adc push shrb (bad) xchg xor xchg xlat cs fnop test xor jl call push inc outsb jb pop xor xchg je pop out or inc inc clc mov xchg mov push (bad) pop (bad) jmp xor jl push xchg push std lahf leave jg lret and xorb and stos mov imul lods lods and mov sbb jmp outsb adc cld pop ds mov iret xchg popf sbb sbb xlat push js xor js jge (bad) std (bad) popa dec mov iret pop (bad) push mov inc and and mov insb and and push cmp sub jmp nop jnp jb notl movsl push loop andl mov and (bad) and push push aaa cmpsl push jbe ljmp rolb mov fistl and imul popf outsb imul in xlat xlat dec call mov incb in ljmp xor pop dec xor decl fbstp andl xor loop inc mov dec data16 cltd sahf (bad) hlt xchg gs xchg push hlt lds (bad) mov sub ficoml xchg stos add push jne cld sarb stos fdivrs xor dec fidivl std in mov inc scas mov dec xor xlat je adc lahf cmova iret jmp std xor inc das xchg je dec pop sbb inc xor in adc scas in push cmp fs movsb aam push jl popf add je mov adc add scas jge and mov pop or dec adc mov sbb mov call repnz and scas faddl mov or mov mov inc lods jo xchg gs cltd push sub (bad) mov jae rclb pop jae roll (bad) in int call outsl sub xchg gs sahf or and pop cmp es ljmp arpl xchg sbb sub mov pop jb dec push add outsl mov (bad) push into push add push hlt xor jg xor push dec pusha sbb xchg sub xor addr16 adc fstl daa push push mov fnstenv hlt mov add test pop bound dec adc fcomps mov xor inc and pop or out and div stc fisubl or imul repnz push (bad) cmc cwtl adc addr16 fsubl sbb jo pop cmp ficompl or ljmp inc cld imul in in pop xchg mov (bad) popa pop jno fiadd vmovd pop or mov lret mov popa xchg mov test fnstenv outsl or adc cmp clc dec pop (bad) sti inc jae in pop push and add in jge jecxz and jne lahf sbb push inc ret movsb (bad) inc rcrb dec mov bound xchg push mov cmp jge and xchg jmp shlb pop cmp jae fsubrs xor jmp sbb add incb jo dec adc xor movsl popf hlt lock jae aam sbb lods pop scas mov scas lret leave rcrb out cmp hlt or or (bad) sbb stos pop adc fidiv mov mov fs je and adcl addr16 stc xchg out sbb sahf hlt inc repz mov bnd or pop addr16 cld in aas and sbb xchg jl pop arpl xchg jno hlt pop jo gs movsl sub push sbb adc fs loop push clc inc imul sbb sbb mov mov cmpb cmp into push mov cmpsl movsb frstor lock faddl push std mov pop sub pop das mov xchg and sbb push cld sub add pop cmp cmpsl adc jbe setl je imul hlt lret test pop cmp ficom xor jle pop repz cwtl rorl xor mov lret into icebp ss stc push jae fwait jae add nop push xor dec out adc xor mov test push and nop ficoml in repnz cmc inc cmp sbb mov pop xchg push insl sub xlat jl mov xor xchg mov repz pop adc cmp pop jne cmp add test gs in sbb jae ljmp mov pop sti dec and xor dec sysexit add lock xor sti mov in std xchg push xchg and xor push sbb push mov outsl bound test sub sub and jno cmc imul mov jae add push sub jp xor pop inc clc out stos stos push ljmp clc nop inc int mov ds or inc dec dec add das stos ljmp xor sub out test mov mov xchg roll ja xor jo sar adc das xchg cli push pop decb in xor scas arpl popf cmp ss iret mov std cmp das fwait repnz sbb xor or jns xor gs mov mov push dec mov mov jae mov push test or push insb cmc pushf cs bound (bad) repz lret jb int3 scas in xchg dec add pop xor mov cmpsb sub sub cmp inc mov stos sti (bad) jmp xor addl push daa cmc (bad) cmp dec movsl sub pushf lods adc xor scas dec cltd and pusha or xchg sub add dec or dec xchg xor add xor sub (bad) ljmp mov xchg mov js sbb pop fwait xor insb loope cwtl jns mov (bad) xchg mov test xor dec jmp xor test xor xlat mov inc jae mov incb push push push cli ret fisubl lahf mov rcll jg je cmpsb mov ret lcall test gs or push sbb xor js sub mov dec jmp sub (bad) or pop xchg gs out cld hlt jge jle cmpsl sbb adc xchg imul adc cwtl jmp and jge push mov repnz scas fidivrl and push sub loope pop subb lahf and xor push or adc mov test in push cwtl (bad) fmull out xchg (bad) lret add mov (bad) cli mov aaa mov movsb fisub data16 stos push mov xchg cmp movsl jmp xlat xchg push push xchg push dec add xor iret fiaddl cwtl cmpsb pop cld cld test leave fwait and hlt adc push sub aas sbb hlt dec cmpsb dec xor rol rcll out mov hlt push clc aam pushf stc jmp mov lods dec jno sub cmpsb call int call cli (bad) sbb fisub jae lret ss addr16 mov xorl cmp rcll fnstenv mov xor mov ficoml mov xor xor xchg pop push xor dec inc test lcall add pop je jb add icebp loop inc insl adc dec pop xlat cli mov sub jge (bad) daa jne in jle popf xor hlt data16 or mov push movl sti xor gs icebp pusha leave mov (bad) adc sbb (bad) js inc sub push jb loop sub int in std sti call add shrl mov sub int int jne aaa jno cmp int loopne jns repnz icebp xchg dec hlt xchg pop push push rol hlt sbb jle mov adc loop mov add xor arpl mov adc adc jmp sbb sbb gs xchg pop lds aam mov ret frstor adc dec xchg jno sub into mov dec int3 pop and mov cmp sub jns aas shlb (bad) jo negb cli cmpsb or pop and lahf addl in icebp testb call inc push xor pminub push dec enter dec mov adc insl jmp push mov mov adc inc pop or (bad) repz ljmp cli decb rcll cli fsubrs or aam mov and fsubl dec and mov mov dec in cli stos mov xor lahf xchg aas lods imul and test push and inc mov sub lahf xor pushl or outsl push push mov arpl xor cmpsb mov pop int xchg and sub pop and nop insl xor sahf xchg jl (bad) jmp adc sbb leave or pop sub or cmp ss bound repz in test xchg push fsts mov jae enter mov adc mov jle rcl adc loop mov mov jno push arpl push adc (bad) adc xor inc xor pusha push adc jnp pop out test mov jp jno sbb push rorl adc gs fcomip das xor outsb adc sub bound and into jecxz jo aad ret pusha mov in dec stc pop js add aas adc inc lea and ret pop xor mov rorb and mov std icebp jo jb push mov cwtl push mov add sub push popf sbb pmulhuw pushf mov mov xor xchg mov data16 aaa push xchg adc cmp lret (bad) xor adc mov fdiv mov push jo in mov cmpb push fstp aaa mov and (bad) cmc mov jmp lret mov (bad) in daa aaa int (bad) mov mov sbb xor fsts iret lds (bad) ja jb push popf xor (bad) sahf popf push je shr pop xchg cld ret inc sysexit mov daa jae mov sbb enter insl pop adc adc test fildl add jne sub es (bad) test lods xor fmull stos jb into cmp lret mov jne push add or test jne hlt push or jns and xor and loopne pop fsubs dec mov push jecxz and xchg sub add add imul jge xor test movsl (bad) xor push inc xchg mov adcl scas clc xchg pop xor cwtl pop push lods push add mov addr16 dec imul jecxz dec incb push add mov movsb mov jp mov ret pop xchg mov in inc sbb push je mov cmp outsw hlt xor (bad) mov adc push dec inc xor inc aaa mov hlt or pusha scas xor xchg sbb cmp xor pop bswap divb out aad ss lahf xor dec stc jno sbb inc add xor lret mov push inc add jl xor sub adc punpcklwd int3 jne xchg call xor push ret ret xchg xchg mov dec in xor dec (bad) fwait cmp (bad) je jns push mov jp insl imul mov cmp xchg add jmp cmc lea fs xor mov adc mov sbb mov hlt popa sbb xor addr16 pop xor cs push dec pop out jbe fwait or adc xchg jl jo xor pop gs mov ljmp add je mov f2xm1 mov movsb mov jo in jb aas jl fbstp jmp inc data16 adc sbb mov and aaa cmp mov push les sbb fwait cmpsb pop std xchg popa jle cmp dec adc aad lods nop xor in jae mov add xor add data16 nop lcall mov movsl pop mov in pop jnp out fstl cltd test (bad) sbb cld mov push xlat mov outsl (bad) and stos (bad) out hlt popf adc adc xor ficom divb in push (bad) jmp imul in popf adc in and xor aam outsl int3 stos in lods mov adc jae int test cld push pop inc and and and fwait cmpsl fidivr lret and arpl inc shlb jns xor sbb xor sbb in test loopne pop mov xchg std pushl daa pop or or dec cmpsb stos or pop (bad) lret leave js add bt shr xchg jae out repz sub pop mov jge push test cmp (bad) jnp mov mov or push dec add mov in jp push leave daa ficompl pop ret lcall dec jns loop dec (bad) (bad) les mov out (bad) lret or mov js and push xor js xor int mov cwtl push push add hlt cmpsb scas pop lds or adc mov xchg es dec clc xor je imul cltd add iret inc sbb xchg jno add xchg sbb xchg push sbb dec sub pop and scas add pop push mov adcl mov push popa sbb or out mull leave jno push sub je xor mov mov adc aaa dec pop dec jl pop jae cwtl inc rclb mov dec cmpsl xchg insl fistpl pop faddl jmp adc insl lds std (bad) ja mov js mov xor lret push cli sbb std out and dec add pop cmp or ja dec cs jno sti xchg cltd xor pop sbb jnp scas jmp dec xor jle jle jmp mov jae stos pop in int3 mov repz cs ficomp (bad) test out mov bound mov inc inc jg out dec es sub xor scas jg xor jecxz dec pusha sbb insb inc cli or xor sahf lret sbb xchg int adc sub loop repnz sbb iret xor sarl push push jae daa or push sahf xor push movzbl jecxz enter push pop sbb pop rol and mov outsb jae,pn lcall in cmp add jp sbb mov leave mov aas xor mov jge je push insl and xor pushl jbe and std test push gs mov movsb imul in push hlt shl stos sbb mov aam lahf les xor in inc adc adcw arpl jo mov sti xchg repz mov xor movsb in or es mov daa xor divl cli fnstenv push mov adc imul es pop mov fcmovnbe pop xor push psubsw xor xchg jle mov dec inc jl dec cli scas dec (bad) xor test icebp mov adc and dec ss mov mov (bad) fistl jb (bad) stos mov or push iret enter ljmp ds das sbb mov rorl jnp jmp (bad) sbb in cwtl xor sub pop mov fwait rol fbld adc mov leavew xlat mov fldenv jl mov movsb hlt aas push je lea ror inc imul inc and push (bad) xor sub jmp test dec aad das cld imul push or mov cmp mov lods jp push mov imul out lods mov cld popf mov cmp es movsl pusha push jle cli pop xchg mov mov cmp adc ret aad sbb scas cld cmc addr16 adc add stc lods mov add (bad) jno andb cmc ja push adc jecxz psrlw dec push shr add inc mov sub cmp xor dec repnz faddl jl inc das add fwait push in ds icebp sub es xchg sub pop adc cmp hlt push and imul out xchg or sbb or sub push imul sub jmp or inc sarl mov lahf imul in mov mov outsb mov (bad) lods inc push mov dec pop test push jo aam mov jp and push and dec cmpsb repnz rcrb mov gs mov les lds mov push push int3 mov adc (bad) shlb test add outsb fmulp mov daa sarb jmp mov mov adc mov dec pop add hlt xor mov push or aaa mov or sub mov jno (bad) adc jmp push sahf in xor cmpsb ss mov popa flds adc into cs adc jbe pop test sub mov xchg rcrb adc popa pop bound dec adc inc cld dec into (bad) imulb dec popf cmc mov scas ret pop ds mov push les das lret xor xchg aas nop push xor dec xor push out inc xor or mov mov scas and jmp daa in mov loope popa hlt sub mov idiv adc aas push or and js jae or sub and xor jb ret inc aad dec fs mov out pop cltd mov in and mov lahf fiaddl xchg data16 div mov data16 aam ficoml leave mov mov jno inc jp mov popa inc cld jl lahf pop xor in hlt into mov outsl push arpl add repz notb (bad) jns roll in mov adc push mov test movsl add ja mov inc jo push cwtl lea jl das adc or ljmp mov adc aaa inc pop outsb cmp xor ljmp fidiv scas aad incb scas movsb hlt cld mov mov data16 jecxz in mov inc xor bound pop add fdivr dec xor push dec xor push xor roll je pop jg (bad) lret mov fdivl imulb repnz shrl xor jge je into xchg ret xor fcmovne add mov xor jb push cmp js mov sahf lea and out mov jnp insb sub adc and cmp mov out out out mov fisttpll je cmp dec sub or add mov cld in xchg dec cmp jae aam cmp push mov inc (bad) push or je sahf sub dec push aad je out mov jecxz rcr dec xor add enter fstpt xchg mov lds loope inc sub push mov repz push adc xchg sub mov ss mov sbb mov sti addr16 daa repnz mov xchg loope (bad) mov cli xor fcomps adc lahf adc lcall add ljmp push cmp jp jnp mov jle sbb jl jo jge aaa das or cmpsb fcomp mov and inc inc mov sbb pusha xchg jl imul mov out mov fsub mov xchg (bad) js dec mov fisttp push inc adc sub dec jg xchg adc jb and sbb xor rorb in mov or push aaa mov pop jno xor pop pop std test dec (bad) adc lock jp mov stos stc lea lret mov sub les add push adc and in xor dec (bad) jmp add adc cmp sti cwtl test push adc jmp adc cltd adc and loopne push loopne ret sub popf push stos mov pushl push mov (bad) cld adc cs hlt xchg mov jae xor xor repnz cld jae sbb and xor sub mov fidiv roll mov mov mov lds xor adc ljmp mov xor mov sub sbb imul add mov add out je icebp loopne movsl add iret lret and je enter cli sub fisubl lcall fdivrl sub aaa out adc xchg outsb jb mov aam jmp mov xchg xchg and fidivrl aas adc pop xor inc mov test cmp fs inc push and adc aad into xor int3 push ss cmpsb and xchg lds (bad) jno std loop or gs sbb call clc out push xor loopne jb xor rcrl cwtl in loope mov pop jge (bad) mov push das ret hlt fcoms mov inc cld add imul adc loopne add test clc mov mov sbb in (bad) sbb cmc or push sbb rcll dec xor jmp arpl call cld pop dec adc xor dec orb icebp mov sub jne sarb cli outsb pop in pop xor fwait into and sbb sub fcomp inc jae rclb cmp jo ja cli out int ret xor daa lcall lods lods pushl sahf jecxz fnstcw cli add pop adc jmp and lret sub test push xor cmp loop or xor aam mov add pop mov pop xor fcmovbe fdiv popf pop pop mov ja lods or dec icebp cmp cmp je out fisttp xchg pop cmp xchg sbb xor adc ja jnp mov inc inc jbe sbb jnp xor sbb cli jne adc daa inc jbe jnp jo inc lods insl fbstp adc cmp lods sub les bound jl mov insb xor mov xor leave sbb xchg lahf and pop pop insb dec popf enter out xor mov (bad) xor (bad) jnp sub mov mov or xor out hlt mulb jl iret mov or jne fistl stos call stc cmp iret xor ficom into jg and xchg lahf xor mov ss int mov shl xchg ss xor mov ljmp int3 push push cwtl adc push fildll nop and push pop jecxz cmp mov cmpsl ds jno xorl mov xor pop mov xorb cmpsl ret add or mov arpl popa dec or lds xchg mov cmp lcall fimull mov pop xor popa sbb mov inc or xchg inc repnz int xchg sbb xor or push jmp add adc aaa jne pop sbb jg outsl stc xor pop xchg lock pop adc pushf dec dec (bad) push out mov xor aad (bad) jno roll mov jb mov test lret adc xor sbbb jmp outsl cmpl repnz jp jno xor or cmp mov push or jnp,pt and pushl xchg mov enter mov jecxz xor lret sub jnp ja (bad) xor lcall gs adc outsb arpl sbb xor xchg lsl mov dec fstl ds std jo pop cli jbe ds sbb jmp adcl pop jns gs popa imul mov xor into xchg mov iret lahf in sbb mov inc sbb lock jmp arpl out sub cmpsl nop clc cmp out mov cli repz lcall lea sub hlt and loopne cli add sub adc push test addr16 test adc adc jno in iret adc or scas and add loopne xchg mov xor stos arpl int3 decb test (bad) mov mov sbb xchg (bad) icebp je dec dec aaa xchg inc cltd adc cs rolb mov dec aad stos sbb fcmovb jno movb hlt cli cli and std xchg std addr16 push hlt push ljmp je xchg pop movsl jp adc lods xchg add into xchg fisttpl mov and inc sbb and jb enter add out daa insl enter sti xchg inc pop push mov (bad) or mov dec add inc push cld sbb xchg xor dec add jb cmp sub mov xor cmp adc xchg xor std and mov and or mov cmpsl aas imul jno sbbl sub std pop dec (bad) add cmpsl mov jge xchg ds mov cltd xor stos mov jmp test inc outsl jo,pt jp lods fidiv jle ja or push push imull sbb cld fdivrs xor imul push jbe pushf dec adc std push dec in or push push pop adc inc jb dec xchg lret cmp jmp xor inc sub (bad) aaa mov inc adc mov xor push popf push sti repz out add sub sahf ss mov xor aad xor jne scas inc xor xchg jns mov push lahf lret and xchg adc jl pop xor test mov xchg jb add out (bad) mov mov mov cs cmp jno jae pushf lahf dec mov adc cmp cmpsb dec shll fsubs call adc mov scas pop xchg xchg cli pop dec (bad) (bad) gs cld (bad) repz mov and int ja mov inc xor (bad) in mov and push pop hlt pusha and cld add imul mov jae aaa clc sub in jnp xor inc outsl push mov iret popf add aas lock je mov jae imul movsl (bad) adc xor hlt lret xchg xlat jle sub loope xor rcrb scas cmpsl ljmp cld popa loope jge hlt push cld je imul incl xor xor lds (bad) rorl stc data16 sbb int3 lcall mov push (bad) dec aas xor imul (bad) xadd jo hlt test jmp jbe rcll cld ret test inc jecxz in jb cmpl (bad) mov mov popa sbb jbe adc (bad) and testb or ljmp xor dec add or rol sub xchg mov cwtl mov aad test cld lret es xor in cmp adc scas rorb sub hlt or jne fisttpl push inc mov inc ss add sub mov cs or cld call sbb push shlb (bad) sub insl sbb bts (bad) jmp leave push cmp incl and data16 push out hlt ds push rcr lahf aaa xchg dec mov or in adc hlt adc cltd (bad) test push and scas inc rcrb imul mov idivl rcll daa jo jecxz sub insl cmp inc (bad) data16 out ret pop mov sbb mov dec push sar jecxz lahf pusha outsl fsubrl jl or out mov sub add or (bad) sbb pop jno push cmp fmul adc pushf fimull repnz es or sbb mov ret sub push add or jmp add movsb xchg cmc iret ds xchg xor test pop push inc mov notb and add mov (bad) lret jle xor and mov xchg sbb test dec push cmp scas add mov and push fmul loopne (bad) incl hlt test push adc inc dec mov add add setne pop int mov push cld mov or repnz ret pusha jo icebp cli or xor loop adc mov lret (bad) jl sbb cld (bad) sarb xor dec adcl adc loop leave inc lock sahf jae ror inc sarl pop xchg bswap mov jb and dec addr16 cmp ja sub xor loop sbb sub cmpsl clc les cmp outsb jecxz,pn imul lret enter jmp outsb add lret add fsubs sbb adc pop outsb leave rolb push xor adc adc push and rorl push cmp cs paddd in loope addr16 adc pop (bad) jae push repnz inc ss push jns dec jle fdivs mov push inc or clc sbb aam addr16 (bad) fnstsw mov ss (bad) push mov mov inc mov outsb mov pop cltd or and pop (bad) repnz jle or pop xor mov or mov psrlq aad sub mov stc adc fst xorl dec int push test sbb jno dec daa movsb fwait add ret push out sub in iret pop xchg jle test mov lods sbb loop sub mov cs mov sbb xchg (bad) adc (bad) pop dec fbstp and push mov addr16 xor ja,pn mov adc call ja into adcl outsb hlt or dec jmp mov and ret xor shl push adc (bad) jnp outsl imul jge dec add cmp cmp add das ds andnps sbb mov sarl mov jno adc mov sub in push jg movsb ljmp daa jle inc and test cltd mov xor cmp mov sub lret jb fiadd mov mov pop and sub test test add fidiv mov mov cs adc or popf xor dec test mov and inc lods cmp lock aaa test fnstcw jnp xor xchg and out push xor adc jmp adc xor into ljmp jle push adc cmp adc bound push loop fidiv jbe cvtdq2ps add xor mov sbb icebp pop mov call dec and ss xchg lret xchg pop (bad) rep out fisttpll hlt adc fwait lea jg fs mov stos daa mov cmp jne or jno mov and xor mov fidiv push rolb add pop ret sbb pop mov jns jno call mov orl cltd xor imul popf in xor shl mov lods inc das push pop clc adc movsl orb xor xor addl hlt in xchg test (bad) mov lahf and dec insb ss sub hlt jnp jmp fsubl mov mov pop mov lds jnp jle test sbb xor arpl repz lcall lcall xchg xor (bad) shrl mov xor loope xor push in jge cmpsb inc cli cmp xor xchg pop (bad) xorb adc dec mov imul adc jp icebp dec loop pop adc jno rorl push adc xor icebp int cs sub repz xor add push inc cmp cltd mov xchg mov xchg sbb dec jmp adc or and fnstsw mov pop mov mov hlt std cmp loop lock push sub push popf add inc jmp sti aas adc repnz cs and xor jae mov xor xor insl hlt hlt movsl push mov xor sub mov jo hlt and in (bad) pop add cld loop pop sbb (bad) fstps xchg pop xor jo push xchg jae cs jle pop fistpl sub cmp shrb adc repz mov dec orb out mov xchg out sahf inc push jmp hlt outsb adc je dec adc jb inc imul or loopne popa push and (bad) xlat cli pop scas push out xlat jns mov or cmp daa pop add pushf dec nop sbb je xchg in cmp stos sub cmp jmp movsb xor and mov popl jmp sub loopne push (bad) mov leave ror xchg sub stc scas in sbb xor scas and outsb xor insl shr xor (bad) pop dec add add into sar cmpsl popf pop xor movsb cmp pop jb popa mov xor andl daa stos sahf pop jl outsb mov sub mov out loop (bad) popf hlt imul imull out lods jo push repnz scas mov pop (bad) sub sub and pop stc in hlt or in lods mov sti ljmp mov or jle js mov addr16 pop (bad) pop or hlt sub add push mov pop xor gs xchg repz inc lods lea cmp imul fldl movsb jnp xor dec addr16 imul pop mov movsl test jecxz jno and xor icebp mov out jo dec into xor das outsb xor repz mov rclb lret aam sbb fldl xlat mov insb addr16 bound push jae lahf mov shrl mov push mov cld addr16 pop jo and imul dec push dec xchg (bad) (bad) aam or xchg clc mov xor scas and pop daa add loope xor hlt inc popl xchg enter cld enter dec bound mov iret jnp dec gs aas jmp pop and pushf add adc addr16 dec cmp add stc cmpsb insb mov cmp xor xchg pushf jmp and stos dec sub imul (bad) repnz (bad) cli cmc xlat daa pop int cmp and mov push cli fucomip mov loopne sub fwait nop xor movsl fnstcw jp daa cpuid push xor inc cli popf cmpsl sbb xchg stc xor mov adc cld cli jno push stc add repnz xor sub mov xor push rcll fistp and mov fisttpll cltd inc fstpl je sahf (bad) mov jns inc lea adc jp xor adc sub repz ja mov cmpsb sbb cltd std gs mov mov ds hlt xchg (bad) jmp xorb xor out hlt dec sub out les inc jecxz ret mov int fdivl pop sahf add cmpsl adc in out pushl adc mov push add cmpsb adc movsb jp movsl dec push mov mov rorb and (bad) bound imul mov xor imul gs and divl or push jb push divps scas in jp (bad) jae jmp cmpsl mov aas mov pushf je jg ret jo jge inc xchg sbb or mov movsl fnstcw adc or pop imul mov and mov jnp adc lret mov xor jg ja or mov push movl mov cli adc mov push shlb pop stos push aaa mov jno aam shl scas cmp fwait imul xor push pop push push test fwait aaa push xor mov xlat sbb mov mull les or (bad) roll add addr16 pop sub xor lret iret xor es icebp lcall mov (bad) ja dec push outsb pop pusha enter xor aam pop jmp pop and out xor lods or jno loopne jb jp pop stos xor jg stos lret sbb jae push jge inc dec fstl imul scas inc scas int dec xchg nop lock test xor cmp cli lcall sub pop imul xor insl cld adc push mov xchg xchg mov pushl inc loopne clc and mov data16 fisttp icebp lods in pushf jae or cld or jae loop loope out lods mov sub dec hlt sbb sahf enter das cs mov fnstenv xorb in loope jp mov sbb pop inc movsl test xor xor movsl pop mov jne cltd frstor push cmp inc sub xor (bad) rorb xchg lods cmp add sti mov push sub fisttp sub mov xchg push push pop add push pop pop jae cltd push mov inc (bad) xor mov leave insl fist aam mov sbb cld xor xor rcll mov push ss push fistpll push xchg and sub cli ljmp jno xchg sub pop imul cmp pop add xor mov or outsl sbb repz insl call or lds bound clc out (bad) mov jl xor fs (bad) push jne or daa xor jo mov xchg add xchg imul and cmp pop fwait xor out mov xor scas jecxz dec xor rolb xor and outsl xor aaa mov cmp cld dec gs jae and cmpsb sbb sahf xchg add stos imul inc sbb adc pop aad push jl aam fdivrp mov xor mov sub mov scas or inc in pop jo fxtract outsb xor cmp stos sub mov xchg cli lahf push bound push push and push les mov je adc lods sub cmpsb and mov fld dec or movsb pop leave add dec out cli xchg inc jge dec mov pusha mov shrl sub adc mov xor pop mov mov out cli mov and lret adc les sbb mov push cmp jl xor jmp xor xor jge adc aad jb and jb fwait and and jo push das dec nop sub mov les mov je rclb or stos mov test ja mov call das jge mov adc lea cmp push stc adc dec out lods mov dec les outsb cld add aad (bad) cs into hlt rol (bad) jg fwait cld sahf mov mov dec cwtl cld ret sahf mov in and je les push xchg shlb cmp cli insl or adc lcall xor rorb mov stos outsl or adc jecxz push int3 and int3 enter push repnz push cmpsl pop je and and add fisubr sbb mov pop lock fnop pop and push iret jge xor mov or push into xchg or sbb sbb xor loopne fist fstpl xor mov int3 or mov insb scas sub xchg mov clc test (bad) pop push xor mov adc imul pusha mov push shll out cld pop (bad) xor mov je dec mov fdiv mov fistpll mov ficom push daa sub in incl push hlt sbb jge mov mov jnp push jle cmp push push sarb aam jno dec xchg push or ret in ljmp adc lods add mov inc mov shr pop rsm sbb sbbl cli push pop sahf xchg gs push mov rorl sahf cmpsl inc dec jmp mov out fmull jecxz dec roll (bad) (bad) jl mov or jmp adc dec adcb ret mov roll xchg sarl and adc and xchg shrl and sub shlb repnz xor je xor cwtl sub hlt mov mov stc pop xchg scas push scas call cmp pushf push cmp je sahf dec jo insl add xor mov mov jmp xchg xor insb shrl push loopne inc xor test pop sbb repz add (bad) loop sub out or inc xor xchg cli xor jne mov rep dec ret mov (bad) ret mov xor lcall ret ljmp (bad) (bad) jae fs xor pop pushf int3 cmc or inc mov xchg shl movsl insb sbb push or aad daa push lods cmp or mov add pop xor test or sub mov ljmp add hlt inc mov lahf add adc lods mov sbb fistpl fdivp lahf std xor sbb inc xor push adc adc movq pop xor ds fldt dec iret repnz mov sarb sbb test pop stos xor (bad) ljmp push pop pop xchg inc cmpsb jae lea dec repz xor mov xchg (bad) sti lods mov mov xor sub inc push fldenv mov js mov repnz je es in dec cli or rorb xchg or xor (bad) in pushf jno,pt dec out pop xor mov pop imull and data16 inc xchg sub pusha fnsave andl aaa cli push xchg mov outsl and add (bad) jne jae inc ss and sub sbb xor sti testb and xor insl add jae loop gs xor lret sti cmpsb mov cld lods popa adc js add pop pop adc mov xor sub movsl sbb jae xchg and lret sbb bound dec ds cld jbe xchg pusha xor movsb in fdiv mov add mov mov or jns or jb sub mov xor mov xor fimull xor push cld incb sahf or pop fist and mov inc pop pop or in inc mov dec (bad) dec xor cmpsl or xor dec aas jo ret jle pop repz cs jno pop sub pusha test mov pop cwtd mov push hlt fmul hlt or dec stos jae mov (bad) jb (bad) loop and ds gs nop dec lock xchg popf fnsave ljmp int3 xchg sub repz jle sbb jl je dec push cmp dec sub sub mov aaa lret xchg iret xor xchg mov or mov int sub inc push jge orl lcall push jb vpminsw jge mov mov rorb fwait leave xor lods (bad) popa inc cmc push push pushf adc call sarb mov xchg in mov ljmp lods jge int jle adc add ja pop test in gs add lods xor scas cli repnz xor aas mov je ds (bad) xchg sarb sti outsl imul mov cwtl movsb clc shrb jg adc psraw gs adc (bad) and add pop lret cmp jb pop or rolb mov lahf (bad) xchg push dec inc cmp dec lea ja inc xchg cld fstl movsl jo pusha cmovno and (bad) je jnp inc inc jl (bad) std bnd loopne (bad) push xor repnz xor fidivl movsb ret mov mov xor notb cmp call cs inc sbb in pop dec xor ljmp adc cmpsl xor rorb sti jmp xchg dec jno clc adc and add xor (bad) cmp push repnz adc out adc jg call mov gs mov xor pop xchg mov pop xor jmp les lahf or int out popf fwait std mov and pop pop xlat add ret jle push (bad) jp jge xchg popa dec pop test xor xor fimul xchg out add sbb fstpl and les xor in repnz and jno repz xor dec das xor out rolb iret sbb jg outsb mov call out lea adc and (bad) lret and ss cmp (bad) jge add mov adc xor cmp repz and popa lods mov sti mov lods cli lahf inc cmc sti push and pop pop xor ret mov mov cmp adc adc or lcall mov xor jge leave pop mov cmp pop mov add xor push adc cli jmp pushf sbb mov xchg out addl xchg cli cwtl ljmp push sub and xlat and mov adc (bad) xor sub int3 packuswb jne lea aas and mov push (bad) sub mov push imul xor imul sbb jne push or push stc jnp xchg pcmpeqd mov test cmc cld popa mov add out dec fadds add jl adc aam dec add clc insl dec ja dec insb xor ficomp sub lea jae mov mov insb (bad) mov xchg mov hlt sub sbb (bad) add lea popa sbb xor sub scas xor add stc push add test fmuls jo mov mov jmp jge loopne gs pusha ss mov and in hlt sub cld popf dec cmp pop outsl add and push clc add jns cmp cld inc repnz jbe,pt jl sub or mov jnp scas lcall je xchg mov adc imul sbb sub ja mov add mov mov push jns (bad) (bad) mov fs jns mov ss inc lret (bad) cmp cmp ds sti mov aam or jb out ja push leave mov lret jecxz test mov jmp add pop dec jae call inc jp ja imul dec cwtl add test mov xor lea jg clc push sbb outsl inc xor fwait sbb lods pop push adc pop icebp mov xor lahf push xor shrl sti daa repz add and sarl mov (bad) jbe jnp (bad) insl sub mov sti inc ja cmp push xor not xor push sarl mov inc movsl decb cli adc outsb jno setp test jg pushf inc xchg pusha mov push xor stos jle jo cmpsl jns rolb lods adc xchg cwtl dec cli arpl cli imul mulb fistpll into jmp jns dec iret jne xor mov sub mov mov mov add sub bound int and pop cli sbb adc and jmp repnz mov dec cs (bad) hlt push xchg sbb or test dec cmp xor xchg jae cmpsl roll push int3 lods mov xor pop push xorl (bad) xchg cmp mov xor scas sbb add aad and and sbb mov call push sbb test repnz sub sub cmp pop add or dec jo and fwait mov fisub std jp xlat iret pop mov mov rcll dec xor xchg notl mov or push lret dec adc fistp out mov rcll mov mov loope cmp daa (bad) lods popf add push and sub add xor imul add add mov fwait repnz mov xchg mov inc cmp aaa and mov dec add dec mov inc jae jl or (bad) dec imul in mov mulb outsl fsubrp repz (bad) iret loop rcrb clc sarb imul dec and lcall loop xchg push and sbb into mov pop push popf sbb lea inc inc add stos (bad) xlat mov fmuls js xor je adc xchg adc sbb adc mov or jae dec scas (bad) cmc int3 mov or and sub sbb dec insl repnz fimull stc stos outsb xor popf int3 mov int (bad) fstl push xor push pop (bad) mov jnp jae or (bad) lods (bad) in xchg jno mov (bad) (bad) repz test iret push push fstpl popa xor cmp fsts sbb (bad) repnz (bad) hlt jns jle push sub orl mov xor nop adc movsb je adc add sbb mov in push sbb fldl dec pop std js,pt aaa pop jp xor add out mov mov repz lods jae cmpsb (bad) xor js jns repnz sahf mov lods xor xchg mov push xor mov mov xor imul push lret mov mov mov test (bad) or leave cwtl lea xchg cmpsb getsec stos lfs dec lock pop inc mov jae popa dec push dec cld loope aaa mov dec pop ds push add jae inc pushf andl dec (bad) cmp and jp mov xchg adc xor xchg cmp stos xor push cmp push sbb xor pusha xor and shll push fisttp xor ret and xchg arpl mov scas repnz mov out cli jmp out mov xor add mov sub out repnz jle jns popf rcl sub xor imul lahf mov pop adc add cmp cmp jl xor out pop cmpsl mov call inc ja sbb aaa loope mov mov addr16 (bad) xchg mov popf fcoms xlat add pushf jmp je (bad) push movsb dec push cwtl lods ds mov sbb dec xor scas jmp add cmp pop xchg adc popa pcmpeqb mov fldl cmp je jae adcl stos pop jno push pop dec push dec hlt pop imulb in in sub lahf push imul jp jb adcl mov or xchg pop rolb pop clc xor test lods pop and lahf imul adcb jo pop dec jae ljmp xor fstp and movsl inc add jns mov cmp cwtl pop and jns or (bad) xor imul lods inc stc aas jmp cs inc adc jae imul push push ja mov mov ljmp xchg adc push mov rolb popf push push xor fld sbb hlt pop sbbl sbb (bad) popf hlt mov sub inc mov xor aad and decb ficom fnsave sti pop shrl cmp out mov jne or xor sbb sarl movsb lds out repnz push jl adc xchg test mov daa lds mov lahf std and fildl jae les aad cmpsl push pushf pop (bad) sub xor mov push aas into push rorb xchg xor xor jmp mov das fist jge xor pop mov ret frstor sub shll das andl xor push dec (bad) lahf xor leave notb aaa insb inc in lret in mov idivl addr16 cmpsb or push xor out jp fucomi push (bad) aam mov sti into rcr mov adc inc clc out es dec repz js lods popa cld push sub xor adc mov lods cs xchg mov inc inc (bad) xchg add repnz (bad) nop xor fisubl cmpsb fisttp cli je cltd inc push cmp int pusha fdivrp sbb lcall pop cmpsb sti jmp repz jns sahf dec repnz sub scas je (bad) add or cli icebp cs mov jnp xor push cmp xchg addr16 orb inc ds mov mov dec push scas xor rorb js div mov push cmp adc repnz sub xor jecxz mov aam mov cltd xor outsb fs push push lods inc repz xor mov xor xor pop es ds dec jne data16 repz jp movsl and movsb and (bad) jno pop adc andl sbb adc cmc pushf gs nop push test pop mov daa insl fimull inc pop adc mov imull mov mov push jnp repnz sbb pop (bad) imul fsubrl or push jno mov aas cmp xor sub cmp mov mov ds les pop in push mov sbb in mov jmp into sub and and mov aaa fwait dec or in add mov aam push and daa pushf clc ss out (bad) nop leave rorl loop neg neg out push cmpsb xor js inc jge xchg repz gs cs push incb fsubl bound popf sub mov jno xchg fcom dec popa xor cmp mov and mov cmp fstpl mov (bad) mov int3 xor leave aas xor jmp add stc sarb aam jmp shlb dec cmp cmp popa cli jmp dec dec push inc ja jp lahf sub jmp in mov adc (bad) data16 xor pop rcll mov xchg bound push scas adc inc and and hlt rorl pop movsb fcoms or dec and das jns fcomi xor gs jmp incl int3 and jmp adc icebp xchg arpl cmc mov std xchg push pop sub outsb add das lret int movsl add adc mov idivl rclb inc (bad) cmp mov jecxz and add cmc cmp mov pop test ficomp stos cmp inc insb aam add dec sub dec mov stos jnp mov adc add fwait int pop mov or xor xor or and sbb mov int (bad) stos fistpll hlt enter sbb sti stc aad mov nop les outsb push jge xor testl loopne sahf clc fstpl bound imul sub ja push or cmc xor push movsb aad xor jno test xor pop cmp xor pop adc mov xlat ret cltd jnp stc push push rdmsr push sub ss enter into stos outsl (bad) outsb xor out (bad) mov addr16 sete cltd push cmc jp cld sub xor jp sarb mov mov dec cmpsb cmp mov js movb movsl fcomi ja pop or or add imul add mov adc mov nop push jmp xor mov jl mov xor (bad) pop xor call jnp inc stos paddusw lahf xor mov inc and mov daa or pop cli jo push mov jno add jnp inc hlt movsb push xchg sub jae or rol inc jmp pop (bad) cld stos or push pop gs aam xchg inc test and ret popa add mov inc and mov xchg leave js mov inc xor inc sbb xor fisttpll jbe jg leave or dec xor sbb adc loopne lahf jne pusha xor (bad) mov mov hlt stc xchg call in add enter and (bad) (bad) add aaa push test (bad) mov inc jbe xor in stos jg jno ljmp cmpsl and inc repnz adc in pop scas jg insl bswap mov sbb cli outsb cs jle loopne cmc inc xor gs pop insl cli mov mov rorl jp ja cmc loope push daa aad cli adc jno idivb ret imul mov mov adc inc or clc jo out adc xchg push lahf sub jge xor cmp push and and push adc sbb push pop out adc lods xor push insb push leave xor sti stos aaa ljmp lea stos mov cmpsb lcall dec xor call cltd dec adc jns jae push xchg repnz xchg jnp sarl fimull cmc push notl nop dec adc pop stos std or add xor add xor mov jb stos cs sbb scas sti pop sub out jae push jecxz xchg adc cmp mov ljmp sbb xlat out dec add int cmp sub fsts rcl cmp lret jnp lods push ss ja fldenv data16 (bad) aas cmc in clc dec out xor or mov les stc or je sbb push pop adc push dec mov sbb cmovne pop daa je dec mov or xorl hlt (bad) lock int ret add and daa mov mov daa jle mov in into int xor or popa popa sub out add cmc imul inc arpl dec sti lds ds hlt lahf lret xor bound std mov scas dec or xor cli fbld ljmp (bad) sub mov dec add call cmpsb cli and pop push sub mov add loop lds xor or jge push dec hlt subb xlat arpl pop or rcrl mov lret repnz mov in inc loop push fdivl dec push stc jbe and xchg enter xor dec or pop and pop rcrl rcll and jmp xor std adc inc cld insb jl cmp out xorb out mov rcrb fisttp cmpsl out aaa fistp std push cmc xchg mov (bad) push jns rclb (bad) push adc hlt pop (bad) sahf mov (bad) movsb in xor mov jnp xor push cmp icebp push push inc push adc xor (bad) repz adc xchg dec lahf (bad) in mov es mov mov sbb pop xchg mov sahf jle fisttp je and lds xor insl sub addr16 hlt cmp adc push cwtl ss in in ret inc adc sub pop push jp pop push xor loope mov loopne popa movsl in pop sub out popf pop hlt inc mov xchg lret pop hlt adc stos outsb add faddl and repnz xchg pop adc in add xchg pop sub pusha mov mov daa add xor push rcrl dec jns push sbbl arpl lahf jo push cli outsb mov loope hlt sub or mov push inc sub xor xor movsb mov push std aam push (bad) cli int pop mov icebp cltd mov out xor mov es jo lahf cmpsl pop movsb pushf mov (bad) inc fistpll decb decl shr cs mov aaa push ret int sar pusha movsl bound push (bad) sub mov cmp mov daa push test into sub in adc cli push jl xchg jp pop hlt outsl push mov cli je dec push bound mov cmp cmpsl std or hlt movsb rorl int3 mov push push cmp sub add rorl adc outsl sbb cltd or mov add mov lahf push xor (bad) iret mov inc jp pop daa clc sub xchg bound in mov push test sbbl or clc cltd test or mov and mov imul mov (bad) jp sub fist add push out add or mov dec sub outsb push aad xor int fistp scas xor or inc add sbb iret mov jecxz setae repnz mov (bad) push icebp sbb es inc xor xchg pop jae data16 mov cmp add stc jo mov lret ja inc test adc push (bad) mov pop loop pushf andl and int xchg add xor shrl hlt mov jne sub jmp xor mov jecxz push adc je xor push adc divb pop and dec rep (bad) aam ds push ret xor insb mov mov in fwait mov jbe jl ret push pop or mov jp sbb lock scas cmp sub xchg inc vpaddd clc adc paddb xor lods push jno inc leave lock sub subb add adc popf adc adc pusha arpl or and movsb fwait nop je out mov int lcall xor divb mov cli mov xor mov xor mov out jp xor das xlat loop popa insb std jo add clc sub xchg cli dec stc loop sub inc push dec xor dec (bad) xor inc xor dec hlt mov ret sub fwait out sahf mov xchg pop and fwait dec push nop xchg add jae mulb push sub mov (bad) cmp jp jge daa imul test jbe jne add arpl sub shl mov cmp ja mov in and push cmpsl pusha inc insl dec adc rcrb scas add jo fwait cld mov xor jae inc adc mov outsb dec add clc mov sbb jns mov (bad) inc xor loopne jmp jb push sub pop mov sub cwtl jns fsub xchg sbb dec adc cmp leavew jb jne add imul and cmc inc mov fxch sbb adc jns and sub sbb ja inc add xor inc (bad) sub imul xor add push testl jle pop sub stos loopne mov xchg pop push mov sub jp fild add cmp xor xor arpl notl ds fidiv out jmp jmp or xor add push dec cltd imul repz mov adcl mov out ss rcrb xor test xor imul (bad) xor fcomps inc movsb xor jmp in das sub loope jnp jno,pt push inc inc adc mov mov dec in cmc test (bad) xor lea and imul scas dec adc in mov mov cld or xor int3 in push add or push out or subb das xor pop mul lahf xchg hlt mov and hlt add sub adc xor add cli pop push sub xchg andb aad mov shrl call movsl pushf push add sub xchg mov mov clc mov rep add pop xor aam push hlt xor jae loopne xor aaa inc lea jno sbb movsl pushf test pop jae int3 jl and imul cmp iret push addr16 dec test popa and add jno xor (bad) mov pop fnsave sub mov (bad) jnp hlt jb sahf dec xor lds push pushf add js sub xchg loope pop clc (bad) ljmp push dec mov push sub aaa repz (bad) or pusha push rorb xchg pop ss test lahf sbb (bad) lret cmp jb xchg xor lds in mov stos cmovge add inc jne inc andl or sub mov inc add in enter loop sbb cld adc stos jmp std (bad) scas xor cmp inc imul icebp gs lcall xlat js adc xor dec adc sub sbb mov push fwait ds inc jge pop mov cli jle fwait xlat repnz pop daa das sbb jnp int3 mov and pushf int3 xchg test push cli cmpsb fs les (bad) clc sahf cld lahf ss ret push or push add cli pop fild push repnz push imul mov test mov daa push movaps cmp sbb notb in mov pushf fs push sub sub mov cli sbb xchg ficompl pop push cltd mov push aas clc jno movsl gs push push lea int cmp xor test xlat out xchg test or sub jle add xchg lret push sbb mov nop sahf imulb dec andl test xor mov pushf xchg adc mov sub sbb sarb cld arpl sub push cmp adc out popf out mov ljmp dec (bad) sub lock add pop or jle push inc pop push and je mov mov or adc xchg inc out ja (bad) mov into insl addr16 cmp and dec or jb out fs or dec pop ss sti insl cmp (bad) sub cmp fbstp pop inc lret hlt aam (bad) stos fnstcw dec (bad) mov popf cld int outsb pop imul xor push fwait xor xor sbb les dec jns pop lahf xor movsb into cmp js (bad) jp test std xor inc xor push and adc or push repz and mov cmc loope jmp clc je arpl inc pop sub cmpsl jb dec pop mov rol xor mov and dec jb mov lret add repnz pusha insb fnstenv sbb inc and mov pop mov and adc xchg and and scas imul fbstp jbe jb add ja or gs repz xor inc push xor pop and push push dec adc nop and sub addr16 in xchg imul xor mov pop shr mov ds sub inc mov repnz pop push mov data16 xor leave test out xor mov and add add adc ret xor xchg aam mov dec insb (bad) in xchg xor pop cld jle mov push sub cld jg pop mov insb into and xchg inc xor jmp mov jle adc lret fsubl data16 mov or int jns xor add fs pop (bad) fcomps cld xor sti daa cli clc xor pop shr xor aaa movsb in js jmp jmp (bad) adc mov xor mov call in pop gs jb mov push and repnz fidiv jo stos xor pop and cmc xchg jecxz and outsl xor ljmp or and ljmp adc stos into insl and mov (bad) mov inc cld cli bnd push pop iret xor scas test test xchg (bad) fs cmp push test (bad) sbbb and jb out xchg int3 mov xchg dec or sbb dec inc push call push adc movsl adc std sub and stc lret xor or aaa fdivs insl jl mov or lock cmp int3 mov sbb mov xor inc loop cmp push sahf xor cmp je std ss pop pushf cwtl adc mov mov fldl je pop xchg mov jp xchg aaa push aam pop xchg push or and mov sbb pop mov and dec xor dec adc repnz int cmpsl xor push je ret push ss push pop shlb cmp sahf xor scas aaa fwait add adc cmp dec outsb xor sahf out xor sbb mov dec cmp lea xor pop sub and fdivl dec int repnz out mov adc sti mov add lcall xchg pushl pop and out lret xor jo xor repz fld hlt popf sbb or mov dec mov repnz jp push and cld sbb scas sbb push dec or inc stc and lea iret adc xor push scas pop and inc je test (bad) mov arpl or add jne mov xor inc inc test mov cltd or inc movsb xor jno and and jne addr16 adc xor fdivrp jne hlt jle jg inc push sahf sub hlt (bad) nop mov cmp clc int ja and pop pop pop jge jmp mov sbb enter mov mov sbb mov lcall outsl into sbb lds fs cmp pop xchg inc adc xor xchg (bad) stc test xchg or mov sub pop xchg pop push xor sub out mov cmpsl pop inc jno jp mov leave add push mov stos add cli mov test dec mov nop loope mov pop sete popf cmp xor into mov xlat mov inc inc and fwait sub mov pop les js mov movsb add int3 xor xlat xchg es les fucomip mov jp test xchg sbb sub cmp aad repnz and lret push jmp push add push mov cmp lea push fmuls add bound inc xchg test xchg popa cli cmpsb mov ret xchg sbb xor cld bound mov divl shrb pop xlat inc sbb (bad) jb adc mov lret xor out xlat adc dec iret clc ret pop sbb push mov adc push arpl jg loope ret das push push jns les cmp stos popf sub mulb pop mov in imul decl fs xchg adc data16 mov xchg xor addr16 cwtl mov cmp mov leave scas rclb stos jns jge je std sarl mov js lods into pop xlat sbb ja adc add jge and jmp xchg (bad) sbb fcoms out fildl aas (bad) cmpsl and sti xor rcrl repz mov roll (bad) loopne es push aam and je add add pop aam adc lock cli in xor mov and call in pushf adc xor add jb outsl xor gs in loop pop out or out cld xor xchg cmp dec dec cli (bad) or sub pop addr16 popa jp pop mov call jecxz pop push jb adc cmp inc mov aas (bad) xor mov mov add mov out sub push scas std jnp xor xchg in popf iret dec push (bad) aam pusha cmpsb add mov imul or or cmp mov dec in shl add xchg mov xchg popf or outsl jp mov mov xor mov xor jmp xor xchg repnz xor dec push aad xor mov push xchg mov xchg aam clc sarl pop clc push icebp icebp mov mov add mov repnz inc add mov dec push mov (bad) movsb leave fidiv xchg push push leave sbb mov dec cwtl adc scas sub cltd fidivrl mov jns dec nop cltd das mov xchg loop addl inc xchg ja jmp cmpsb pop gs repnz aas xchg or sahf mov sub je mov dec lods inc cmc stos inc pop xor xor pop imul add mov lahf cmp jae jp add mov sbb (bad) or jecxz repnz or in in rcrl mov or rcrl lret mov dec stc (bad) xor cltd stc stos hlt adc insl dec lods cmp xchg clc sti test imul jecxz mov dec mov pop into jbe push lds inc (bad) jnp jmp inc imul ljmp pushf fwait dec fucom aad cli jns cmc aam xchg cmp lahf pop pop xor (bad) (bad) mov mov jb jns sub xchg enter jmp jne add (bad) mov sbb xchg pop add mov add mov ja ja jle fs cs pop xor sub stos rol adc scas nop mov push add cmc jmp hlt xchg lods adc inc nop push (bad) push xor neg and outsb cmc enter add ret jb fcompl mov cs hlt lds pop inc repz outsb lcall leave xor cwtl mov cmp pop cmp push nop jge es pop xor (bad) jmp xor xor push insb sub xor push (bad) (bad) or sbb out sbb mov in test xor cmp (bad) decl cmpsb xor cmpsl or push xor data16 xor (bad) inc xor icebp (bad) mov xor pushf in inc sarl and mov pop jmp xor jle mov cmp js (bad) ficoml cltd pop cmp mov xor (bad) xchg das xor pop cmp and sbb int3 xor jns in pushf cli push test mov jle and sti cmpsb push xor stos pop out dec aas pop ds mov sub add jb int lahf xchg cld test sbb pushl je pop lds rol out xor int mov inc scas add repnz inc sbb mov dec ja and cmc adc pop in (bad) repnz or mov fiaddl mov xor pop pop adc lds les sbb mov sbb xor mov and loop sysexit push xchg (bad) jg (bad) jae inc push dec or push jp sbb or rclb mov jp je test in andl sub mov fildl fnstenv add (bad) cmp imul mov or jns divl outsb sahf stc je inc stos and xor movaps cmp pop or jns into aad push ret xchg movsb or jle je inc in ss adc dec (bad) mov imul inc fucomp test pop cmpsb insl mov (bad) shrb mov push or xor add divb popf push gs fidivr cmp lds fmul mov ds and adc xor dec movsl cmpsl lock xchg adc sub mov mov push jb and aas das sbb add adc jns sub movsb gs pop jmp dec repz push shr pop push sub test int3 test xor or sub sarw fdivrl outsb or outsb jno imul sub lret ficom pop add dec add sbb fisub mov movsl adc mov test sub pushf and das jmp (bad) test mov (bad) inc sub bound lcall xor bnd mov jb mov adc (bad) sbb xor fistp add lods inc xor inc cmpsb ret sbb sar mov bound je (bad) jmp test mov icebp lahf and mov scas jb and test in or ljmp push xor sub stc inc mov dec pop repz jge add jp das mov inc or in ret (bad) cld add and dec mov or in shrb lgs test add xor cwtl enter mov pop push gs jmp lcall xor push xchg into (bad) adc hlt mov jl mov repz sbb mov inc push xor bnd and cmp mov cmpsl pushf xor cmp (bad) jb inc jo aas or sbb lea std sub push cli mov mov and repnz dec andl dec and rcrb mov push das mov or jno mov push in outsl repnz jmp mov dec lock bnd out xor cli adcb mov xor in fdivl sub mov cmovl add (bad) gs push icebp push jae xchg scas clc cmp push sbb repnz loopne and mov leave lea ficomp in cmpsl adc xorl test cwtl lahf xor cmp cmp sti repnz xor pop xchg test lds sub inc stos xor sub pop jnp pop stc mov addr16 push push jmp cmc jge and ss adcl mull je clc lods push add or jno jno mov out or jae xor cmp adc cli mov pushf bound enter xor pop pusha sbb jae test (bad) icebp sub out mov and push add into mov ja xchg popf hlt jns call scas je add insb sbb test inc xchg es fistpll and jne nop pop adc in xor sbb mov adc and jle sub es add dec repz push cmp and cli push add mov push cli (bad) lods repz fsubl sbb cwtl xor insb mov jnp cltd (bad) sbb popa push cld sub dec in xlat pop aad movsl cmp fidivrl mov ds stc cwtl push fsubl dec pop xor xchg fwait push dec mov out mov hlt pop pop xchg add imul test dec adc or mov or xor and mov lea pop (bad) loope or mov int clc in call cmp push sub scas out loop pop div shll xchg aam insl cld hlt out les (bad) pop push xchg pop int repnz xchg push (bad) push pop int3 sub xor icebp loopne or inc outsl cmp jb imul dec sub jp cmp cmp movl pop mov pop cmp mov xor xor or insb pop fnsave test mov add mov dec sti jcxz arpl nop in insl xor test subb cmp jl push gs inc int3 sbb and xor mov dec jle (bad) lret repnz adc pop adc stc nop cmp fstpl dec mov push pop inc inc sbb push inc jb hlt dec xchg insl mov mov inc mov sbb mov ds xor inc xor sti mov push xor push fnstenv xor adc dec cli aas aam xchg cmp xor jge loopne stc sbb shrl and push (bad) jne (bad) cli sub insb add mov pushl andl (bad) hlt cli test mov mov xchg inc mov sahf add (bad) (bad) adc sarl dec mov jl inc std repz sahf popf mov pop lods xlat pop pusha pop push lds mov (bad) jns enter lods or mov loope ret sub (bad) test loopne dec and aaa jo adc dec nop mov cli test mov and mov xlat mov xchg jae daa repnz cli popa xchg fiaddl ret fstpl cmpsl iret and repz jns idivl sbb mov mov jmp scas sahf pusha add push lahf xchg xor jnp aaa mov dec es aaa fwait dec pop std jb mov push (bad) jb bound add es gs add lock and sarl add and out mov mov dec rcr sahf add aam pop scas pop dec das jmp mov jno inc (bad) (bad) xor dec hlt add movsb clc push inc das bound pop mov imul aam popa aas cmpsl sub insl bound jo mov push sub adc dec bound mov pop (bad) jle mov popf rcrb mov mov mov or xor sub dec cltd fstp mov out dec rolb or jge jno fsts push cs xor scas mov and fs rol xor sub sub xor and inc xchg lcall enter ljmp xchg mov fwait lea xchg je rorl add adc push cmpsb xchg adc sub mov sub sub addr16 add fmulp mov cli pop popf test nop cs lds add ret xor sbb adc sbb push and jmp movsl push pop inc mov (bad) sbb bound sub mov inc rcl mov aas andb rcr loopne jns xlat inc jne mov mov pushf push pop (bad) pop and (bad) jbe lods cld sbb mov lea pop dec mov push mov icebp xor test push popa sbb fwait mov or add shl sub lock lock xchg sbb xchg lret cli js push aaa lds mov ds pop push add xor int3 jmp aaa sbb xor and ret test xor jge pop std xor aad js mov gs into pop jb (bad) jnp pop xor test adc add sub cld mov popf xor inc xor jb and fnsave (bad) loop xchg out or aam jle push push sar jg jae repnz fbld add cmp sti imul inc cmp stc je daa fdiv movsl sbb addl call or or jno push rcl adc mov mov inc xor packuswb cld sub aaa popa sub scas movsl lahf jl dec sub pop mov and movsl mov cmp cmp mov pusha pop jge mov scas or push je movsl mov das xlat adc pushf pop dec pushl xchg pushf dec clc mov mov aad xor scas xor jns xor test and adc ljmp add and add hlt push jb and jmp mov ret fisub stos loop es jge adc pushf or pop icebp or repz ss divl xlat mov aam lcall (bad) movsb mov outsb mov or pop ss test adc jp pop cmp xor fisubrl xor and in inc mov je clc sarl cmpsb mov out add lods add or idivb jmp inc add movsl adc mov push jle xor jle cwtl or jne insl adc xchg sub dec cld jno inc outsb cmp leave inc repnz inc cld xlat in sbb dec jmp gs mov cld lret xor push in add inc pop lds fdivrp cmpsl lahf or ret pop bound inc adc mov loop jae fisubrl imul dec xor and sub les je sub add ret or outsb dec out xor jnp fimul repnz adc insb mov xor push xor push inc arpl loopne cmp cltd insl imul lret mov andb pop (bad) clc enter and aaa jae pop test adc dec hlt xor add add fsts lcall popa clc hlt add mov out dec push or sub pmaxub das repz shlb sbb gs popa fldl2t rorb jle (bad) loop add xor mov xor out cmpsb aad adc rcr mov push or loope push repz std adc xchg repnz xor icebp xor pop jb gs stos iret mov mov adc xor in xor mov lar loope jo imul mov xor push mov pop daa arpl jl in add dec cmp into xor test add stos (bad) aaa loope inc jg ret sub jle pop popa mov repnz adc cmp and fdivl in aad xor (bad) daa adc and dec repz andl or (bad) aaa add (bad) clc push mov lods repnz push xchg sbbl stos sub jmp sub adc jb movsb test adc cmc in inc dec iret mov loope,pn test push adc and cld mov hlt mov icebp mov adc add jbe sbb ret out xor shrb xor xchg mov or pop pop or and dec adc xor mov adc sub mov leave sbb pop daa inc mov popa add or xor stos (bad) sub push dec insl push mov jo cltd and sub cltd xchg es movsl mov pop xor push push or loopne lahf test dec add mov ds or adc add xchg ja (bad) mov in mov sbb mov inc jecxz mov inc gs adc insl push adc les paddsb inc (bad) cld xchg sbb repnz popa pop adc pop (bad) xor xor clc xchg xor mov sti sbb xlat inc or (bad) int3 sub xchg sahf sub sahf jmp pop sbb adc lea cli les mov test xchg jl cmp movnti xor movsb adc add push adc jne sarb mov adc mov rcll and test int jb out (bad) jne adc mov mov mov sbb stc sti mov add (bad) (bad) repz lds mov pop mov sub cmpsb adc aad outsl push xor test idivb (bad) push (bad) repz ljmp jl push push xchg fildll and and or orl xchg jp movsl fs outsb jne or and lea mov fcompl lcall (bad) stos adc aaa das mov sbb jg sub das adc inc lock cmp mov mov cmpsb cli imul mov or jns lds std xor mov mov add sub or xchg ficom xchg or mov cwtl cli push icebp mov ja add mov das lods in pusha and in cmpsl fiaddl loop dec inc addr16 les popl aad push into fimul rclb xlat cmp in sub push xor and xor leave fstpl and cmp (bad) insl js sub pushf imul lea mov mov adc cli push or decb sub jmp and inc aaa repnz mov mov mov mov dec stos pop aaa jb enter xchg mov (bad) divl fistl xchg push mov adc lds or int xchg push es mov gs bound pop jg arpl leave roll cmp xor cmp movsb jne mov lea xchg cmp ret adc pop mov hlt add inc out dec cmpsl xor add dec test jmp popf push js clc mov cli fisub insl test in dec mov jne movsl jl add mov (bad) fistpll dec mov adc loope add ret cld rcrl fiadd clc mov and lea push and add adc add stos sbb lret push or stc pop addr16 inc mov ret push pop adc mov inc ja inc sbb clc dec dec jmp xor mov xor jae xor push jo and xor test pop push xor sbb (bad) xor fnstenv cld jle ss aam inc insl add es xor or xor xchg into lret sub lahf adc dec jno imul sbb adc jge mov xor imul jne ret cmp mov and xor pushf inc xor jb push and xchg sbb jae in lods cs fisub adc push stos jae push mov fcompl pop mov pop leave xor sub sbb (bad) mov jne out gs das dec jge imul mov and cmp push js adc cli add ds sub mov cltd jno adcl mov jge inc lret test mov cmp ficoml pusha shll (bad) sub push add pop aam ljmp out xor and jecxz jnp xor mov jge mov mov jp push ja push dec (bad) xor insb jo xor xor pop xor sub pop xor in add jae or xor aas xor mov dec or sbb icebp nop cmp insl aas cmp (bad) cmp xchg push jnp cmp in test cld lock xor cmp sti cmp ret cmc insb popf dec clc imul mov shlb or sbb ret pop clc xor mov xor dec sub xor data16 hlt jb lea ds fnstsw mov int sub xor pop and ja mov fdiv insl jo (bad) std lret mov inc pop mov inc jae mov addr16 roll mov (bad) xor outsl xchg jl xlat decb in pop lret sbb movsb dec imul (bad) adc popa hlt mov add xor dec cmc loop movsl jp push loop sub mov mov daa mov stos push mov pop xor pop je sub inc xor dec sub es cs jge int3 orl hlt pop mov xor xchg je cmp or dec repz bound (bad) sub mov in mov ss enter mov mov fnsave (bad) imul and ret dec cmp mov xor popa or jp mov mov add pop or jbe pop xor (bad) push dec cli lds call jmp xor pop pop sysexit (bad) aad (bad) insl pop xchg bound xor inc or into jo mov xor add adc adc jae and xor (bad) mov xor lret pop mov dec addps (bad) xor fidiv gs test jns popa sbb jo push leave (bad) mov repnz push mov loope mov push dec mov sub (bad) into aas pop push xor sbb cmp pushf (bad) xor out mov or jmp in mov dec ror fistp jo mov cmp pop (bad) cmp xchg push (bad) mov stos mov or jge push (bad) pop in mov sbb jg xchg frstor lret lds dec or call imul add cmp add sbb sbb cs dec gs or pop test loopne dec xor fmull cmpsl out outsb jmp icebp daa jmp call xor cmpsb mov add push cmp xchg xor shrl jmp and pop push xor xorl jnp pop add sub aad sarl xchg add in mov jne cmp fld mov (bad) sti aad orl mov out pop aad rcll je push inc pop mov sti dec xor loope jno mov or and jmp adc mov xlat lahf pop hlt sbb or imul mov sub popa add mov out add jb test aam das rclb (bad) push repz addr16 add fwait in sbb jmp and ss jmp ja dec sub jb out repz add rclb scas mov or xor mov adc mov in stc add dec bound pop popf xor mov sub dec lret cmp cli pop arpl movsl adc movsl (bad) xor loop mov cli (bad) push mov (bad) cs in (bad) fsubrp or push inc jmp jo xor (bad) je pop ds aaa mov cli jo mov or call xchg adc push sbb xor movsl (bad) imul add adc adc lcall lock xor jp (bad) pop or leave cmp lcall repnz mov mov insl cmp mov sub or push inc stc adc mov (bad) adc jp pop sub hlt or test ja sbb fs add mov mov mov lret inc aaa xchg inc mov leave imul stc rcll lret sti cmp cli gs cs and jo xchg xor test mov (bad) ja mov ret cmpsb loop pop sbb out or xor sub cli out jns xchg fbstp sbb dec xchg lods adc adc int fcoml bnd mov xor jge arpl cmpsl sbb or stos sub mov mov sub add mov cs repz jge mov mov ret and adc lods sbb and adc aaa fwait mov sar jmp mov dec sbb xor jne mov mov out fnclex in push xchg cld out pop shr scas xor (bad) lcall cmp sahf cld imul xor loopne cmc inc scas inc (bad) repz daa xor fstl inc push xlat cmc fimull inc pop mov xor jmp pop jl aad xor add repz sbb enter adc sub add inc sbb mov xor sub cmpb lahf in xor jecxz pop push mov push inc subl xchg xchg add xor or sahf imul mov pop push inc ja dec sbb xchg fucomp xchg insb adc lahf ret xor loop mov vpmacsswd or xchg mov imul loopne xlat mov hlt add and adc mov lock xchg or insl stos xor jecxz sbb push xor or sub lea mov mov fwait sbb jae int3 dec mov mov inc sti pop es xor dec xchg repz jae pop inc outsb mov scas addr16 xor sub sbb mov repnz mov (bad) adc lods in sub repz bound mov lahf dec xor push dec mov xor daa mov jl icebp jbe test sub adc xor ja cmp push pop mov (bad) mov jecxz xchg or cmp sub or es lods xor les xor mov test sbb inc mov xchg mov movq frstor lcall ljmp mov roll mov ljmp mov mov movsl xor test jp mov xchg lret mov mov sbb repz adc (bad) sub and mov gs es xor inc cmp push xor aam adc or outsl aas xor dec xor cld jae cmp jp leave and in and clc popa pop sbb inc hlt (bad) push dec cmp jbe sti pop sbb mulb btr stos popf cld or sbb ret ret adc (bad) je lods data16 pop add daa jl popf sub pop jne xor mov pop (bad) sbb sbb push outsb jb repnz aas and mov insb xor aas mov mov daa push xchg jb das data16 icebp push in mov push inc sub pop pop (bad) jno sbb lahf sub idivb icebp mov aas add cmpl jb std ret jb mov cmc das sub fsub lret jmp js mov test (bad) sbb xchg pushf pushf cmp imul test ret mov out bound je int dec cmp leave xchg subl or les xor sub out (bad) lea clc cli adc int insb sub sbb jbe adc inc sti fnsave lahf (bad) mov and mov lods shrb dec jl shr jecxz xchg test repnz mov fiadd sub aas lret stos mov pop (bad) inc xor pop scas iret xchg xchg pop sub jae lods mov stos mov sbb mov push stos push and inc and xor pop (bad) cmp out pop cltd stos lcall xchg adc daa cli mov out adc ds and mov push dec rol xchg jns jle aad dec aam jno add pop xorw xchg in sbb loope dec xor stos mov sub mov ror hlt fidiv ljmp sbb adc mov rorb mov sub cwtl lock jno xor bound jnp xor scas dec push add dec pop xor fnstcw (bad) jge xor jnp dec sahf hlt and adc movsb push (bad) sub aad push in xchg pop ret xor mov insl push xlat clc (bad) psubsb sbb jbe mov inc test jl repz sbb inc xor add dec test sbb stos nop cmp mov mov fdivl imul cmp (bad) out cltd out mov arpl add mov sbb sub sahf scas repnz (bad) jns inc xchg push icebp pop lds cltd jae nop pop les ja pop or and aad imul in push xor inc mov pop scas xor mov mov pop pop push xor out xor fstp xor pusha sbb xchg je loopne jp adc test and int mov std xchg imul jle aam or xor fucom icebp fsubrs mov and cld in push jmp xchg mov fdivrs sub adc dec hlt stc mov into sbb sub mov je ret sub clc mov inc mov inc lret shl inc orl inc scas sbb outsl sbb imul xor lahf push unpcklps add sub mov and push sbb inc js add stc inc xor jle cli inc add incb cld jle xor mov (bad) repnz pop add sub inc and cvttps2pi jnp (bad) inc clc xor ret fwait ja insl and jge repz mov pop and and cwtl ja xchg xor ret scas daa inc add mov dec jo sbb or mov js jae inc shrb lahf lods xor pop mov jecxz sub adc stc test (bad) mov ret pop jnp and adc sahf mov jge (bad) nop sti dec dec jmp push add jno push fwait jmp inc mov jo pop jge imul xor js push pushl and data16 stos mov push and aas sbb adc dec and mov cmp scas icebp ds dec xchg and ss bound enter pop sub pusha pop aaa mov je add sub fsubrl push mov and popa ficom ret sti and mov jmp push jl mov adc mov sbb test loop (bad) popf mov test je or clc and sub sbb sbb pop sbb cmp sbb mov out insb push pop jb sbb mov mov sub testl push into mov cmpsb cmp div cli cmc in test mov loopne push rorb mov scas mov or sub xchg out jae sub movd jns pop aad rolb jbe dec cmp aam adc fidivl ret (bad) mov (bad) pop hlt push outsb or cmp sub xor rolb adc test in (bad) xor repz mov or xchg and push sbb arpl lds inc sbb mov xchg inc lea jae cmp ret jne mov xor adc cmp inc or dec cmpsb ljmp adc xlat repnz jge cwtl adc bound add (bad) outsl test lds sub pop popf inc repz adc sub xor pop inc sub xor test sahf sbb (bad) inc hlt xor sbb xor pop jae xor fsts lret test cltd jb inc adc or xor sbb jbe popf sub rorl sbb xchg mov xor dec mov hlt cld scas push add adc dec xchg loope xor push popf push lcall xchg xchg jae jg push xor push jb ds insl hlt out popl pop push xor (bad) lret aaa xorb ficomp cmp or mov jb imul scas inc push out dec sub cmpsb aaa push mov adc xor pop jmp daa imul mov loope mov mov mov jmp les nop push mov mov iret in hlt outsb xor incb sub leave lock out sarb adc adc push xor mov pop cmc jb mov xchg fisubr mov inc fmul loopne dec in lea imul add imul adc rcll pusha call inc xlat lcall and and push fidivrl pop lret add and xchg out mov dec dec movsl mov ja or pop std push adc dec sbb inc mov xorb bound (bad) mov push hlt jno add dec add scas int3 ljmp cwtl sbb leave dec add dec xor insl push vpsrld ja push mov int pop ss push xor enter dec (bad) ret out repnz test push mov stos cmpsl in xchg fildl std rcll push pop incb dec xchg gs (bad) scas icebp out call push fbld jp mov sahf or cli into and mov ds and or aas jmp movsl jns push pop cld dec gs cmpsl inc fidivrl popa pop inc (bad) push mov lret add cmp mov mov insb cltd lds data16 add std imul gs jmp mov sbb jnp sbb xchg mov jno movsb idiv enter mov xchg add lahf xor sub pushf imul and adc adc mov and sahf cld or aad push push inc or jmp mov and xchg mov mov loop enter mov xor loop adc jmp stos mov es cmpsl outsb repnz ljmp mov notb xchg mov aas clc sbb (bad) lahf insl cmc and fistpl cmp mov inc jbe repz sbb xchg (bad) and pop (bad) cmp xchg es pop lahf rol xchg xchg mov and stos adc (bad) jo xor jg mov movsl out or nop fadd jb clc mov mov repnz nop and mov aas mov or sub out test mov xor adc xchg ja addr16 mov add cmpsl add das mov add adc (bad) cli int into out and and cwtl push dec mov jge mov js xchg std test mov adc into or mov mov stc and fbld push pop insl add je movsb inc jg mov mov fiaddl fstpl clc cmp scas repnz mov xor inc ds mov inc movsb fistpl pop sbb dec add shrb ss and jae hlt das loopne jne mov addr16 mov icebp xchg mov pop les jle popf dec lods jo xor jl popa in mov cltd sbb xchg push int3 addr16 jb inc push aam and stos sub pop repz push iret daa fnstsw inc inc or push and mov cmpsb mov test or (bad) cmp cmp aaa ds adc jmp inc add (bad) jae jge mov fsts add mov mov adc daa iret and push (bad) shr aaa inc xor pop lods add cmpb pop jo das out rcll pop xor in hlt repnz add add inc or ja mov jbe test imul sbb mov incb mov in mov imul cmp sub mov ds mov shrl jo cld out jae mov add fbstp jp jne aam and cmp lds adc xchg xor (bad) mov mov dec aaa xor adc mov sbb jno push addr16 xor jge mov in adc jnp mov pop stos sbb cld lcall or mov (bad) aas dec pushf xchg xor cmp pop xor notb jp xor push add mov in repnz add pop (bad) dec mov sti je lea or jp and xor adc cmp jns out xor mov sbb stc cmp (bad) dec mov fmuls adc ss add (bad) int3 mov test loope rorb hlt pop jne lahf rcr in (bad) lods or hlt xor pop aam lock cmc push jno or in into push mov clc call les je pop aas movsl xor push int3 mov mov int3 scas or mov mov mov xchg inc imul push in lock xor out sub (bad) (bad) cld repz (bad) out dec mov and mov in or or inc xchg xor xor or int3 jbe lods dec insb jmp repz mov add push fs sbb xor sarb mov push push jne popf in mov rcrl xor test mov lret test push (bad) xor mov and push pop outsb enter pop jno sub out mov sub or adc loop jb movsb pop adc xor stos mov mov cmp jne not mov divb add jl push adc pop dec xor pushf in jns hlt xor jg mov sbb and pop and popf fwait sbb add jmp cmp jns int push dec cmpsl test stos daa and (bad) cmc std aam mov int repz repnz fwait adc xchg xor mov jl (bad) mov lods cld repz mov in roll sbb mov or js lcall mov xchg loopne frstor stc xchg push mov adc xor je aam xor in out and add (bad) repnz fildll cmp push js mov divl and roll jae insl add sub add es sbb addl fdivs rcl or or and and lock jb jo (bad) cs pop pop sub push sbb dec repnz xlat pop (bad) xor (bad) mov xor cmp scas or adc inc add nop add and ss push dec fs pop ror add sbb push int or fwait adc fmul xor movsl insl and xchg ss mov push cmp out xchg (bad) hlt test dec mov adc inc in mov pop adc add mov (bad) xor es xor jmp mov es stos out sub (bad) setbe loop jns scas xchg push cld ss and fwait xor adc or mov dec in inc mov sub cmpsb loopne dec cmp push iret pop adc mov je nop or gs outsb mov lcall (bad) ss cld clc mov (bad) int3 sub out ret mov mov cwtl sub mov lret dec scas scas xor mov jmp idivb mov cmp in add imul mov iret inc packuswb sub mov jp mov mov xor stc cli lret dec xchg xor add ds sbb xchg stc outsl cmp leave lock jne,pt popa mov and mov imul inc daa xchg mov mov and hlt (bad) xor (bad) loop mov mov push in mov daa sbb jl hlt xor mov ficom rcll frstor push dec aas xor jne and cmp dec inc bound sbb cmp outsl xchg ds xchg mov dec pop leave aam add repnz (bad) lock loopne and pop xor cmp rcl mov sub or or in jle in (bad) (bad) jmp cmp data16 js aas sub leave mov cltd pop mov push cmp xchg nop jle dec shlb fwait shr ret cmpsb movsb adc xchg xor out in xchg mov xchg jno add imul imul sub jbe scas mov sarb and and mov mov inc inc jg movsb inc adc sahf xor lcall cmp pop addr16 sbb js pop das test fdivr and mov mov je jle sbbb or adc xor stos sbb das inc pop adc cmp sub jns mov xchg push pop add popf arpl pop push mov or mov (bad) jb add clc sbb cmp imul jle xor cmp stos icebp divl shlb lea inc out icebp mov outsb jnp push test insb aam xchg (bad) ds pop pop xchg je xor arpl sbb (bad) scas cld lods icebp test in lea jle movsb ja icebp mov data16 mov scas dec dec xchg add loop jae dec cli mov pop scas push mov cld loop jge pop or xor inc or (bad) fcomi push test mov imul adc mov push or stos insl mov xor jmp lds clc jl cmp xchg test inc jbe sbb adc sub ds jecxz cmp mov xor jne push xor sahf xor xor insl and jo add popf sbb sbb mov xor fcmovnu push xor jge imul mov add add dec shrl (bad) xor fiadd xor or inc pop mov test mov jmp xor cmp mov jg in test push out into in repz pop leave dec xchg dec push cmp and add or stos imul jmp mov ljmp lahf jae adc push xor sahf or sub test in clc popa sbb cmp orl mov (bad) enter pop inc sub cmc sbb (bad) mov jb push lcall cmp shr (bad) mov nop xor mov pop dec dec inc ret pop adc adc mov xor repnz in test dec (bad) repz std jl jge imul gs jo and pop jnp jno sub lret fnop mov jge sarl or jp push arpl push xor aaa jle jb jmp repnz ficoml lods add jle loope je xchg test aaa cld cli in sarb imul xchg xor jle jb (bad) cld jecxz pop jo cld xor ja call incl es jp in mov das je sub or push hlt mov fld1 xor push sub mov inc jge icebp mov jb xchg xor inc and (bad) jo and unpckhps lcall fwait dec cltd xor mov call sti jnp mov cmp sbb addr16 adc adc ljmp inc jle lret enter xlat mov push and pop clc jmp xchg cld sti fcomip xor push cmpsb (bad) sbb loop int3 fucomip mov jbe xor sub mov pushf push jns mov (bad) jb and xchg adc (bad) jb (bad) xchg fbld and add xor (bad) pop aaa mov mov repnz jmp stc mov xor jmp fnstcw cmp rorb imul dec jp ret pop popf jmp sbb mov ss fdivrs cmp or mov inc pusha ljmp mov out push push inc (bad) ss xor (bad) popf cmp pop inc pop insl xor das shrl ret cmp xchg xor pop xor out or xor mov cmp jl pop daa (bad) xor or add std (bad) repnz xchg mov pop repnz divps cwtl mov push mov push push mov popa mov push mov dec bound inc pop subb and aam and adc dec mov inc adc les jo xchg daa cmp sbb out adc sahf jge aas js (bad) xchg mov or inc inc xchg clc push mov sarb jge sbb pop lea adc in ds adc cli stc imul sub ret mov adc aam dec cmpl hlt lcall add lea xchg sbb inc adc clc mov and xor push popa xor pushf dec mov jns xor insb adc hlt adc insl adc mov adc sbb xor pop rorl sub xor ret in loope in push push mov xchg int3 mov mov (bad) jmp jmp xor and sbb outsb push sbb xor mov das adc les cmp sahf push clc push xor xor add or sub xor sbbl outsb ja xchg add or xor in lds stos mov lcall xchg mov pop psubsw cmp ret call shrb das xor xor ret arpl add pop dec pop or ficomp jb adc int3 (bad) or mov add mov add fcom sub mov wrmsr je pop loop or and cmpsl inc (bad) hlt sbb ljmp push xchg divb nop cmp xchg dec xor jecxz add or mov test ds sbb std aad (bad) sbb sahf fsubs dec incl fs js aam shlb dec sarl cli adc sbb inc and add mov pop aam and xor out mov sbb dec sub xlat cmp pop loope jno mov adc outsb pop imul xlat sbb dec mov imul sbb adc fisubr in mov sbb add mov mov xor lcall stc sbb and fnop jns push mov in or daa test les cli xchg scas lock sti stos sub sbb mov cwtl leave aas in adc dec lcall inc jmp aaa pop mov mov (bad) ja fidivl fiaddl mov aaa fdivr and daa inc cli dec ljmp add insl rorb frstor das push inc repz cmp cmp xor fldenv mov jae pop aam aas int inc jl ja mov repnz mov fcompl shr push dec and enter aam (bad) dec imul cmp jbe insb mov mov cmp data16 std aad xor adc jmp or jb scas mov outsl ss pop arpl and sbb sahf hlt jmp push (bad) clc add add and jno dec or imul test mov jns xor fistpll xor cltd dec mov push pop cld jae js ds clc call aam cmc cmpsb (bad) mov push push je scas adc inc pop mov cld js pop xlat pop xchg xor lret adc sbb je call or insl daa hlt arpl das inc push add (bad) test xor dec push jne leave and pop pop jae pushf pusha cmc jns adc cli push pop or mov fbld jb jle fistl and rolb scas or push jmp test daa (bad) les pop aam or or sbb int and popf pop sbb dec je into pop fsubp (bad) cli dec adc adc xor xchg lock iret mov sti push or outsb and adc xor jg or shll aas mov jmp (bad) (bad) lcall sub pop adc sarl sbb fdiv rol sbb xorl mov (bad) mov inc add add push cmp jb pop rolb daa push (bad) jo repnz push popf das int movsl aam adc cmp cmpsl mov cli inc and and pop add ss mov in fstl imul or jns scas or xor stos outsb and rcrl xchg sub and sub mov fdivrs in bound scas pop ror jne hlt addr16 mov add rorl add lret jb or in repnz outsl mov xor dec push fld jno xrelease dec inc push adc mov mov pop in add loope fnsave stos push mov jge push outsl arpl bound lods in mov (bad) jno scas out jb lds mov inc dec unpckhps sbb cwtl pop hlt push hlt das stc mov ljmp fwait jge xor roll cmpsl cltd push mov popa gs xor rclb cltd cld jb pop adc popf mov and imul jge xor adc int inc hlt adc shlb xchg xor test mov fsubrs orl xor push call lgdtl add cltd or cs push repnz dec cmpsl and rcrl ret sar int jl inc or push inc push adc stos faddp xchg mov push outsb imul es int and je rclb out stos adc mov cwtl cltd mov pop lret mov aas mov nop pop jno addl popa repz fimul add cmc hlt mov insb test insl hlt mov aas jb push popf jne push addl (bad) jae (bad) mov fdivr inc mov imul sbb (bad) scas mov mull sub jle mov dec xchg dec mov jae test xor movsb pusha shl fmulp (bad) lret jae mov cmp jl int3 jnp movsb cmc repnz push mov mov pop xchg adc sbb (bad) je xchg dec imul mov cmp rcll push push xor jge cld (bad) inc push data16 or xor jmp pop lcall fisubrl mov daa dec adc or mov cld lods repz mov jmp enter in (bad) mov jae sub xchg mov lds pop dec stc cmpb mov sbb fildl inc xor hlt cs mov pop cli data16 (bad) cli jmp imul jb iret jle xchg pop packuswb nop insb inc inc aam inc pop mov mov jb adc xor mov or test jb adc pop xor test rorl insb pop sti sub aaa jno jge xchg jns sbb jae,pt test adc addr16 adc cmp xchg fdivl xor movsl popa mov cwtl jmp cld add pop mov push test mov xchg stc lcall mov fstpl add (bad) divl popf xor jne fild jmp lret xor cmc push out xchg icebp (bad) jo xor mov mov lret out cmp pop xor xor xchg push in stc mov pop sbb jae jno sub adc fnstsw out xor adc cs sbb into xor sbb clc mull enter sbb adc adc dec mov sub xchg cld outsb push fs neg and bound mov xor mov sub xchg jp clc daa dec gs mov adc test add xor xchg es aas fmull ja jp and testl adc aas (bad) mov xor add insb pop test scas mov aas shl lea mov lds mov clc jb sub movsb jae sarl (bad) mov adc ret into pop rol hlt outsb pop frstor imulb add lret inc aaa xor pop dec xchg loope cwtl repz adc sub inc or inc mov repz or call add adc jp repnz dec cmp xor lret mov out xor push pop rorl lods sub dec push push sbb hlt dec push inc xor inc add jns and or xor sbb xor jle (bad) mov mov or loop mov and and arpl (bad) iret jae dec dec jge repnz test sbb cmp div arpl cmp cmp fsub dec xor out test aad jne outsl push mov sbb push stos sbb in and dec or scas mov xor mov push sub fcomps cmp test adc xor lret inc adc repnz adc xor iret pop push prefetch mov mov (bad) in push ljmp add lahf jbe sbb clc test dec cmpsb adc xchg lahf mov mov repnz pop add xor fisttpll into insb popa lcall cmp or sbb xor dec pop adc (bad) mov and jge aam fisttpll xor mov in cltd jb jnp jg pop jo jmp sbb jmp adc out repnz sbb push scas sbb mov sub cmp pandn sti jl,pn pop dec xchg adc aam (bad) std sar addr16 iret scas sub (bad) repnz (bad) int3 jmp sbb insl xor jge xor fsubrs hlt push push cmp stc xchg and je out mov int inc ss xor or or in mov inc outsl xor hlt hlt mov (bad) movsb mov gs repnz jne repnz in repnz mov mov insb xchg dec cmp mov test jns in pushf test push xchg addr16 dec cmpsl test sbb pop dec scas or mov fadds nop lcall push stos in sub mov stos lcall sbb mov cmpsl (bad) push push in popf mov cmpsb ret mov adc js jmp (bad) jp push mov ds data16 in jns xor push popf addr16 fwait ret mov hlt fchs sbb pop sub packssdw test or cli push (bad) push bound cwtl sub xor popf add pop lahf addr16 mov and lods (bad) (bad) xor icebp jb pop xchg xor ljmp loope aam icebp outsb ljmp push insl int3 adc push sti cmpsb xor xor cmp inc jno inc xor adc xorb or lret divb pusha mov xchg ret das xchg sub mov jl cmp test in (bad) xchg test insl mov inc aam mov cmc cmp hlt jns jnp mov push and xor in jp xchg jb cmp adc (bad) xor mov mov sub xorl sub fsts jge cld sub mov push out pushf xchg lcall mov ss lock push inc in in sahf jno pop jbe cld leave jmp mov dec in jp pushf and mov mov dec pop clc (bad) repz cli cmp mov fucomi int3 fdivrs jae shlb out xchg out cs mov inc scas fs and into cmp popa xor ud2 xor fdiv mov mov roll fnsave mov xor xchg out stc mov xchg xor pop (bad) xor (bad) out cld or jbe cwtl hlt sub dec sbb xor mov jae push or sub inc sti jnp inc stos imul fst cmc mov cmp inc push lahf and out adc push loopne sub hlt popf or mov xchg dec (bad) icebp sbb cmp test repnz adc ss xor or dec or cli arpl jne (bad) jae loop xchg dec adc inc adc das sbb xor mov into cmc lea scas sbb push jne or push es pop lods push lds imul cmpsl pop jno pop push sbb insb aas es mov sub rcrb adc xlat (bad) jb lcall pop push ja mov into sbb stos imul add or xor xor sbb jno push fwait dec xor mov mov sbb lock repnz je fidiv bound xchg mov cmp aaa outsl xor ficoml loop xor into mov cmp sub fisttp hlt pusha xor xchg mov xor pop arpl xchg in fidivl hlt add mov dec divl bound xor mov xor jbe pop std repz or popf sub mov push jne push lahf xor ja and pop (bad) jae gs sbb pop cli je scas push xor lock ret (bad) pop addb jmp ds ffree xor (bad) xlat inc inc xor (bad) out lds cmp add aad sbb cltd adc lret mov js xchg xor cli mov inc xor add test lock mov pop cs clc stos mov add push pushf mov pop sarl xor dec cmp mov pop sub stos adc repz clc mov sub mov sbb mov xor or jbe jb bound es lea mov xor adc cmp pop add (bad) mov cli xor inc mov mov int3 sbb sbb (bad) rcl fwait in mov mov (bad) repnz xlat cmp inc mov hlt push pop jle aad in mov xchg xchg xchg push rcl pop jmp cmp mov pop je dec mov (bad) sbb inc mov cltd cmp xchg js inc icebp lret push push dec jge cmpsb gs lret aam shrb xchg xor xchg pop push mov jnp jecxz sar int add ret pop js cli add jmp cmpsl inc fdivrl stc sub sub mov (bad) mov dec sub dec and xor xor mov (bad) xor mov aaa dec popl sbb jge mov outsb mov mov pop xorl pop jp std fstpl cmpsl push clc xor push leave sub int (bad) cli jmp andb roll mov mov add cmp cli jp fisttp aaa aaa in cli and adc or adcb push hlt or leave add sti mov xchg push jl mov jb cli mov fist push std aam into in cmp or (bad) aaa aad xchg cmpsl leave rolb scas mov jle call aam jl xchg cmp add inc cld fdivrs jne ret outsb imul mov xor sub pop rcrl mov stos adc gs mov mov sbb inc add stos and dec mov cld cmp add push xor xor je mov dec adc imul push stos pop imul inc cmp scas inc and jl,pn xor pushl enter xor dec mov je mov in imul mov pop sbb inc ds push lods push outsb and shlb pop inc xor test nop repnz frstor sbb cmp repnz fwait aaa adc xor pop xchg sub xor push dec inc popf xor lahf push stos or xchg hlt out fs sbb aad (bad) pusha xor sub out push xor pop fwait minps jmp hlt mov pop sbb hlt and adc adcb dec jb inc and imul sub xchg sub hlt and push mov outsl pop std dec das loop mov sbb (bad) pop ds cwtl mov xchg int3 lods mov cli adc push dec xchg insl stc ficoml mov or sub mov xor mov or in cwtl mov test cli clc icebp xor push xor mov and inc pop std mov xor lahf cld cmp add xchg xchg mov xor out push aad jno call pop sub in divl sbb jge add repnz adc cltd outsb lods test xor iret lcall int3 xlat xchg xchg addr16 cwtl in dec les push mov mov inc xor fisttpll daa cmp pusha mov xchg adc sti bound es (bad) and and xchg mov flds dec test add (bad) xor lods push scas (bad) mov or add sub adc cmpsb or ret push push jns xchg test mov dec xchg insl mov int3 add repz push sbb mov lds sbb dec scas add lea xor (bad) pop pop jno in inc jae dec cmpsb or jb scas sbb xchg sahf hlt movsb mov cmpsl adc cmp jns jge pop (bad) jmp ret inc and lock test movsb cmp mov and push fdivl sbb lcallw lds repnz pop inc adc xor (bad) loop clc mov std adc adc sub lret decb out sub aam fsubl and dec pop movl addr16 mov pushf scas pop adc cmp xchg xchg or jne lahf stos mov xchg adc jmp add inc push mov ds popa nop les mov inc cltd ja leave fildl sub push jp mov mov xchg sarl sub pushf dec mov neg dec les mov loopne add cmc mov les repz adc mov mov sub and xor push or and cmpb cli sub scas mov push push je test lds fsubr sub ficoml xchg and (bad) xor dec push add xor (bad) mov jmp popl inc xchg or out xchg add cmc test pop lods push jmp cmpsl xor sub hlt jno add adc mov mov mov insb popa cmp sub jge repnz mov addr16 xor or lret cs jp mov iret fist mov in push xchg mov fdivs scas cmp xor lock mov dec jnp lods cli xchg push mov addr16 mov aaa lret js mov cld lock stc into or (bad) jge aam xor mov enter pop repnz cmp pop int fmulp je lret test xlat scas adc xor mov push jo test add (bad) js cli sbb ja andb iret and push fstl stos dec cltd jne mov dec pushw repnz (bad) sti pusha mov mov push cmpsl mov dec bound ror shld or lahf xchg repnz (bad) movsl ljmp iret sbb mov mov iret sbb ss sbb mov cmc dec mov ljmp scas adc in dec mov fist mov loopne xor mov adc in and mov jno repnz sub sub jecxz mov sub hlt xor mov push jecxz adc xor cli mov fisub sbb data16 xor xor xlat jb pop mov jmp sub (bad) ret and fdivrp sbb repz (bad) shlb adc push mov push add dec mov xor in mov hlt jg xor loop xchg hlt mov (bad) xchg jle or repz or cmp jno jns cmpsb mov push sahf mov in (bad) mov pop aas imull xchg xchg stos cmp jb rcrb lahf loop inc not or mov inc mov and adc sarl lods adc dec mov sti cmp cltd dec jl jmp pop jg hlt loopne mov mov add or sub push adc mov repnz stos aad and lock bnd popa decb je repnz xor mov sbb sbb mov pop dec shrl and cmp imul inc push push (bad) daa xchg mov mov or pop std bound lea cli test mov dec jge test vmovupd cli clc pushf add daa stc xor hlt mov stc xor and movsl or push leave sbbl cmp push inc rcll xchg or add jno nop loope fxam xor sbb loop sub ss adc xchg adc pop pushl add xchg push fdivl enter (bad) lock jb inc sbb (bad) repz xchg sysexit mov adc mov pop inc ljmp dec test out pop pop and lahf cmp push sahf addr16 in mov lahf and ja jecxz add jae aaa out loop inc or jmp jae test inc pop aaa repz (bad) (bad) and mov or hlt rcrl leave push add xchg dec out mov cmp jecxz roll je sbb lcall imul pop je div xor shr sbb jg push je andb (bad) dec adc mov mov pushf mov xlat mov jb or mov or dec xlat sub (bad) hlt scas inc cmp ficoml xor lods aad dec xor aas insl sub rorb jg xor cs loop cmc push pop sbb mov jae push inc icebp rcr jl xor xor jo outsl int repnz push std dec adc jmp sbb mov cmp jg loopne xor add push jnp imul lock or xchg xor stos cld mov cltd aam setae jo xor push xor loop lds xor cmp gs repz sub (bad) sub jl dec push cmpsb xor fwait lock or imul jmp push cmpb in test dec sub inc stos xor (bad) (bad) jmp push xor push cmpsb adc xchg inc pop adc clc inc and push xchg data16 mov hlt xor jecxz and xor inc xor xor icebp push movsl mov mov jb push pop loopne loopne jge xor mov jo daa push pop jmp xor int mov dec push cmp adc add jbe mov bound stos scas mov cmp inc nop push cld dec jecxz das adc repnz and xor inc pop les mov sub cmpsl mov popf and xor pop mov aaa (bad) (bad) cltd and mov xor mov mov ret and jno js mov gs int xor mov xchg pop lret mov and or dec pop js lret mov pop mov pop mov les cli push clc das xor mov add and mov ficompl mov jne hlt push pop adc push mov pop int3 xchg js das ficom xchg adc js mov addr16 lods in movsb mov add xor mov scas lret jmp (bad) pushl fisttpl push lret aaa mov jecxz (bad) cmc dec add xor inc test pop adc pop lret sub mov mov (bad) mov lea ljmp (bad) sbb mov fs cli push cmp mov adc fiadd adc (bad) xor cmp and cmp in aaa adc sub jne mov popf pop add xor mov loope,pn (bad) int3 hlt jle sbbb ds push pop in (bad) mov mov xchg pop ffreep or sub jl adc stos int3 mov pushf jmp xchg cli jmp lahf aaa jb mov pop fistp dec imul and (bad) jle out into lods mov ficoml and lock std or jo jo lret jg mov sbb shll shr gs mov mov daa cwtl test sub aam rcrl (bad) fcompl shll roll xchg mov pushf (bad) sub (bad) aam dec jle jp int insl repnz cmc xor adc push out addr16 lock aam cs roll pop or sbb (bad) cmp xchg sbb rcll sbb leave push and inc shlb int3 mov xchg and sti and hlt xchg inc push adc cmp pusha scas add cli pop adc lret daa mov xchg cmpsl sub or cwtl stc aas lcall jae repz sbb jo sub out cmpsl cltd mov dec xor and hlt sbb mov sbb movsl in stos mov and daa ss movsb test xor add jg out push sbb add cld popf mov sbb clc movsb imul sub les mov xor mov mov jns,pn fldt pop dec or sub ss and sbb stos dec in and lcall outsb sub and pusha out sbb mov jne add leave mov aas ja arpl push mov xchg jb outsl in (bad) pop sbb int3 cmp (bad) xchg sub and mov pop cmp or sbb pop push xchg jecxz mov daa inc outsb mov adc repz mov stc cmpb popf mov stc lea or xor out jnp in stos in mov pop stos mov mov subb cmpsb popa or sti pop outsb jns mov subb mov aas bound lahf sbb inc movsl xor aad xor int3 jge cmp ss jl pop int mov xlat sub test or xor inc scas arpl xor push inc bound and jge xor mov pusha adc in ror pop pop lahf or addr16 and jo fwait or mov adc xchg loop out loope and add std inc hlt lret lds hlt adc xor xor (bad) or xor mov orb push mov and inc adc les push pop cmp movb jae inc je fsubrl dec adc or call (bad) jae scas pop pop dec xor mov sbb mov dec push mov xor (bad) mov jl pop std aam lods lea loop xchg sub push sub xor jecxz dec out aam add xor loopne (bad) sbb xchg ds mull aad rcrb pop cmp out sub jns push pop push aaa xor dec ret mov movsl jle xlat sub push mov inc outsl jmp aas divb jbe mov ss fwait lea xlat xor je clc inc sub les sbb adc nop mov sahf xchg sbb cwtl (bad) or scas repz into rcll in jmp data16 pushf sbb repz add cmp call adc iret std in or sub jno mov popa in xlat fisttp mov cli sarb ss fidiv gs out repz push jle cmpl push adc test into xor cli stos nop xchg scas lcall jg int3 les jnp (bad) pop sub daa fsubrs cmpsb shll hlt fldcw adc movsl addr16 xor cmp pop xor xor jb sbb mov cmc adc cmp sbb or inc das test into arpl outsb xor (bad) sub cmp stos clc test jb cmp outsb jle jae fsqrt popf xor jne mov lret (bad) out and cmp xor add cmpsl pop push xor sbb (bad) mov in push or push data16 test packsswb int cld stc out rclb mov mov lods push leave in fnstenv inc dec sbb pop imul pop xchg cmp xchg jmp adc xor mov dec mov into je sahf jmp loop xor or in popf xor add imull add xor pop imul in (bad) mov popf es fistp js movsb push or lahf adc inc adc das pop xchg nop sub repz xchg pop mov xchg fisub inc cld and cmp test sub arpl loop dec cli mov add and nop aam xor pop cmp (bad) pushf (bad) mov test mov lcall xor mov test hlt xchg cmpb mov push dec push call xor out jmp je pop sub and movsl mov or ljmp push (bad) push jl pop xor mov adc in pop rclb or ret xchg adc packsswb mov sub pop xchg inc jne xor popa and pmuludq xchg (bad) mov sbb lds das xchg xor movsl sub inc xor adc aam in mov mov mov dec xor ret cmpsb pop call pop and mov repnz jl (bad) imul push std xchg int dec xchg cwtl xor sti xchg push add clc push cmpsb adc ret push test ja or adc add sti fdivrl aam clc lods aas hlt cmp pop hlt lret mov pop sar aas aas lret test dec push jl add (bad) sbb jp ficoml loope cmp iret add mov lods sub scas mov sub inc lret mov in das ja pop and mov ljmp addr16 sub adc jl cmp mov or gs jae xor imul call or xchg cli jmp sbb mov (bad) xchg xchg popa aam shlb mov ljmp mov inc ret add loopne mov xor push je adc jae lock pop xchg lret insb cmp mov mov add jb mov xor lret popa movl or jge cli dec mov hlt pop inc dec adc xchg add jne adc shlb sbb sub stos dec mov add (bad) aas shll lahf or test xor cmp cmp adc repnz xor (bad) sbb mov stos in xchg add daa (bad) xor sub cld adc lcall push fadds repnz inc fldt mov invd hlt or jg mov hlt jge ficomp sub sub (bad) xor push mov mov cmpsb outsb push test (bad) and or mov sbb add cli icebp or mov xor adc mov cli rclb add repz leave add rorl nop das inc ret pop ja sbb faddl adc movsl dec imul and and add mov jecxz mov sub jb (bad) repnz out dec (bad) leave leave fdivp cmpsb leave xor cli mov insl mov cmp and icebp sub jbe mov adc hlt dec xlat push fistl jne ficoml jo rorb jnp loopne rcrb aaa sbb sub pusha mov rorl fldcw lahf push jecxz fucomp inc ss in cmp push call cld lds xor aaa sti xor mov or es push mov cmp mov xchg les xlat sub push cld (bad) push (bad) stc into jnp (bad) xor mov ss jno out popa stos sbb inc andnps mov je jmp adc bswap fdivs repnz jne sub in cld jo mov subl scas sarb xor sub xor ds push mov (bad) jno jo lret jb jp mov repnz or mov inc jl sarb imul cli imul or jmp push mov push add lret cmp mov cs push sahf aad cmp rclb or ljmp or inc xor mov pop sbb iret xchg mov (bad) mov cmp cmc das ret xchg inc pop jl and movsl ljmp lret loopne (bad) pusha adc jl cmpsb out jo jg jb popf adc test add inc lahf aam dec mov mov xor push rorb or inc mov xor mov adc (bad) imul cmp fmul mov adc inc aaa mov out dec xor loopne hlt aam fistpl stc es mov adc (bad) inc scas aam es xor jg mov fstl push pop sbb mov add xlat jp mov sbb pop aad pop xor ss incb xor inc rorl jp in and pop enter pusha pushf stc je out pop cvtdq2ps inc adc ds or inc xor push jp (bad) jmp jb adc ds push jnp add fcomps stos ret sbb dec xor mov xor fwait add cmp sub daa aaa and jne pop dec adc jmp sbb jbe (bad) jp pop les or sbb xlat sbb stc test fs in js xor jb xor xor outsl nop sbb adc pop xorl jnp dec sets imul jns lret hlt xor aad fwait mov xchg sahf aam cmc dec xor js ret sub data16 loopne or and loop dec lods xor repnz push lahf xchg cmp lret pop int lds push push sbb repz mov icebp add mov iret sbbl xchg inc je jg sbb inc and jg push dec stc pop add sbb rclb adc add test ds or fdivl mov sbb mov fstpl and lods (bad) jb pop addr16 mov (bad) je push push inc push pop adc hlt inc push imul mov lds push cmp imul or pop sub fnstsw test inc mov mov repnz cmp cmc add add or jno sti or mov mov cmpsl xchg inc pushf sbb loop jne aam dec add rolb lcall add xchg add mov mov lock test bound sbb jl mov xchg loopne ljmp das fsubr xor aas mov dec xchg mov mov pop adc dec jb repnz (bad) xor fwait lahf dec xor outsl adc jg inc xchg js mov in aad jmp int push (bad) push fsubrl movsl subb mov sbb sarl je and bound (bad) cli enter push sbb out xor lret out fmuls mov xchg jns and movsl pop push mov lods sub adc mov cli loop add mov xor xor xor pusha adc pop pop or xchg leave call dec cld lea iret and loopne or cltd or (bad) (bad) pop xor push daa (bad) dec mov inc pop lods adc xchg fxtract and mov js outsb lock adc mov aam test inc xchg fcoml pushw push xchg xor xor pop jno inc std jl or popa adc add cmp arpl fisubrl pop sbb mov orb xor dec fwait aaa ja xor repnz add jnp xchg and scas or mov add jbe inc push xor xlat and outsb pop cmp sub icebp mov lret mov loopne gs sub cmpsl jb mov mov mov int sub pop fildll push outsb jns pop pop ja push test pop jno push dec cmc xor jns xchg pushf sbb push jg xchg adc lock data16 sti dec xor icebp mov add xor push cmp (bad) out lds mov test (bad) lock stos movsb insb fs leave and daa das movsl out imul test mov ja sbb jb dec and ds xchg ret sbb xor fisubl test sub iret hlt xchg xor imull inc cmovs cli repz mov adc jne cli repnz out sbb (bad) scas jno xor add sbb stc pop mov in push (bad) xor (bad) add cmp push ret jge stc aas in mov mov std stc into push shll adc frstor or shrb repz push cli lret or xor popa sti aam dec inc push in lahf cmp pop mov adc push nop and rdmsr nop scas hlt xor jne mov outsb lods clc movsl je xchg inc int sub xchg icebp bound das std jne cli inc or hlt sbb cmpsb dec pop out sub pop gs dec push push (bad) inc mov push adc cld jmp in jno imul test dec test push mov and dec adc push pusha adc rol or cmp pop pop inc das adc int cmp push adc jne pusha pop fcomp test or ret pushf dec inc (bad) aaa popf fwait je fcmove ja jbe or mov push movsb push pop or lods aam stc inc xor mov in jno sbb jp lahf pusha push mov sub frstor insl popa inc xor inc stc ljmp aaa cwtl mov movsb inc cmp xchg shrb push mov jge mov dec mov (bad) mov add and sbb cltd mov movsl dec or pop lahf ljmp mov mov or dec xor push mov pop jge scas pop jnp jmp (bad) test fnsave arpl shrb dec jecxz cs lahf roll fisub leave pop cmp mov push xor jae jl in add mov hlt mov push in cmp and dec sub int xor and pop xorl push dec sbb adc and daa mov sbb lods clc dec mov jnp lea ss stos clc mov xchg push inc xor pop jae int3 cmc repz out hlt addr16 ret sbb (bad) cmc cmpsb repz pop mov pop jo xor out fdivs adc lret pop cwtl xor xchg lock push ss xor xor add (bad) repz in sbb xor sub fisub xchg lds popf fs (bad) imul pop mov out or rcl sahf adc xor push movsl std push mov add stos mov and adc lods pop adc fnstcw and push mov jle js mov xor inc aam fldenv jae pop and push mov repz xchg xor into stos shll push addr16 fistpl cmc sti mov adc push xor out push inc jb and mov stos xor in movsl and roll xor shll iret pop lods cmp aad dec mov mov insb xor shrl mov xor arpl dec cmp les or sbb int inc inc xor jbe push xor cmpsl pop lods mov push mov xchg mov sbb into (bad) mov in lret pop lahf ret push popa stc add mov scas imulb icebp fcomps fcomps inc call sub in movsl push jge inc outsl (bad) es pop inc or mov adc sub adc sub cld cs dec mov (bad) (bad) (bad) insb adc jg cmpl in fs dec or vpsllw mov in dec bound sarb and fldcw (bad) sbb cli not xchg xchg imul clc (bad) jb dec daa outsl or repz add jecxz push sub and pop scas iret sbb xor orb sub xor xchg out clc xlat xchg repz test dec mov jno ja xlat loop into xor cmc insb pop arpl push adc sbb xor inc mov mov dec andb stos jp push data16 pop test in xor imulb icebp aam js in aaa pop cmp xchg sti mov or nop ja adc sub popa push repnz sub xor inc pop dec repnz or fld jle sub mov std dec jo test jmp adc fwait ret shl sbb daa ficoml jo jl pop dec xlat sub mov sbb add (bad) cli icebp lods into jle jnp mov xor test xor sbb lcall mov push andl push dec bound shrb aaa jno sbb push inc rcrb pop int movsb jle test outsb mov or and sarl insl mov lods in cli fcoms inc xchg sub cmpsb rcrb jmp fsubrp push pop daa lret int push movsb pop pop pusha jle lret lods push jmp add jmp pop jo dec mov jmp rclb stc das inc iret fidivr adc mov xchg and or insb mov nop jg mov mov add pop lret adc sarl test cwtl in mov mov inc cli add rorl push sbb cmp and repnz mov cli xor inc xlat sbb outsb inc idiv dec mov out jmp and repnz push and fwait cs sbb mov jo dec add mov jmp pop fstpt and sub push pushf mov bnd fdivs (bad) clc pop sbb ud1 mov sub push adc jecxz and pop xchg iret clc or stos mov (bad) rolb mov adc (bad) testl sub lods jmp adc je adc inc mov sbb pop xchg mov pop pop pop sub pop add dec xchg mov (bad) cmp pusha push cmp xlat lods mov xchg mov jle imul insl adc xchg dec scas cmp jg movsl mov roll pop dec stc dec inc ss lock push push mov mov jne fstpt dec jecxz insl and cmp jmp xchg push jge adc in dec cli adc (bad) or xor jae xor inc sub inc and sub outsl sbb sbb test xor cli lock cld pop mov out daa push add cld aad sbb xchg or xorb inc (bad) add jge mov jle test mov add cmp nop lret clc or push jb inc and xor repz gs dec pop pop jb shlb (bad) jb sbb cltd xor arpl int3 aas in cmp xor sbb or pop adc pop pop jecxz jns outsb ds aas add sbb jg jo dec push dec mov lds int aaa push sbb mov mov addb movups testb adc (bad) sub icebp add xor jmp and or mov adc fsubrl hlt cmp jbe stc les xor add fdivl clc icebp fisttpll leave xor outsl and lret test enter push nop dec adc inc sub sbb (bad) jns and sarb aad lret iret add xchg int pop xor test in xor ja push jae shll popf orl (bad) movsl xor mov inc jg mov sti insl sbb out cmovae (bad) jno out imul cmpsl ret adc adc pop pop mov sub (bad) xchg pop push repz sub xor scas sar lods ss mov into testb and xor es fs cltd les mov ja (bad) or mov mov repnz scas pop in int add lds sbb xlat mov xor addl pusha jb iret mov je mov cmc dec xor and or hlt sti pop jns insb sub stc andl fisttpl adc test enter sbb je pop xchg or xor xor fcomps pop js lret hlt or pop add fsubr jb in adc sahf int leave rcl (bad) (bad) xor sub popa inc bound mov ja and icebp fsubrl icebp call xchg sti in jp sbb xor mov add inc stos loop jecxz shufps in push (bad) adc out mov jge xchg stos stos pop and push les cwtl out in mov stc mov out mov insl sub ret add repnz pop sbb je (bad) jle mov jecxz xchg inc fisttpll push lret sub push or pop (bad) xor mov pop lds sub int pop pop and gs hlt or add add adc add lcall mov lahf push dec jb sub enter dec das push xor dec nop stc xchg rorl sbb stc mov test and cltd sub pop xor add push daa repz push and adc xor cmp mov xchg out mov dec jno iret stos outsb and popf in mov bound imul rcrl mov in pop pop scas push mov insl and flds and je adc hlt cmp out out or add mov push or xor test mov pushf int pop sub jmp ja mov cld lods add mov out mov cwtl push data16 or mov cld jge push jno jecxz xor adc and pop and jecxz cs mov dec jle push loopne mov pop or push xor sub xor xchg push add repz into jmp or rcl cld xor divb cmpsb fisttpl jmp push and jbe aas cli fucomip sub pop mov mov (bad) xor inc inc daa lret mov ja clc cmp lahf ret popf jb xchg push (bad) xor mov sti call cmpsl add out mov jp jg jb sub cmpsl xor sbb call lahf pushf pop insb and and lcall and adc xor sub pop adc jl movsb and fiadd mov mov out lret lret inc jae pop push sub sbb mov inc xor addr16 and daa or andb xchg xchg int loop dec xor xchg das sub pushf dec sysenter xor fnstsw xor cmpl inc push pop fcmove (bad) and xor adc aam bnd call dec mov jle imul pusha add out pop movsl add and push pusha cmp xchg enter mov aad jmp pop cmp dec insl fidiv push xor xlat std mov xchg pop cmp scas mov stos xor jg xor lods sub clc in cmpsb sbbb hlt mov lock ret fimul iret ret jg inc repz std xchg subb xor in ret sub mov rolb mov orl xchg mov loopne ja xchg add lds mov stos aam pop sbb push out ret jno lods idivb and sbb mov ss out dec (bad) ss jbe xor test jae in add pop adc nop pop scas faddp ss cmpsl gs mov test push cld fcmovnbe in or and push xor mov aad or sub lds out and jo inc push push insl adc push lret fbstp xor fstpl stc xor xchg dec popa xchg mov push push insb cmp daa loop xchg stos mov mov jno out arpl add jl popf icebp xor add mov fcmovb jnp popa jb arpl hlt aam sbb jb cmpsl (bad) leave rcrb sbb fldcw and xchg ret xor je ja lods stc into adc imul and int3 mov pop xor loop push sub dec stos je rorb mov push pop sub inc xor std mov mov sar imul push xor (bad) jo jno jge lea sti aad mov out jae sbb adcl push mov je push pop and xor xchg sahf mov push imul jecxz xor and xor xor mov dec (bad) lods lret inc cmp push cmpsl out and mov (bad) (bad) push adc sbb inc mov dec sub adc adc ret movsl in faddl fcoms push hlt sub sub mov and (bad) xor mov mov std ret (bad) inc xchg ret xchg icebp mov out divl jb and jnp les mov shlb cli aam mov imul aas pop adc sti pop adc push or xchg dec pusha mov pop adc nop ds cmp pop in (bad) popa out adc sbb decb dec and int jne mov les cmp push adc out inc push adc push popl and mov out cli sbb inc sbb mov xor dec cli cmp dec rcrl mov (bad) shl mov adc mov adc js jbe sub mov pop lds cmpsl mov sub popa mov or sub dec mov pop enter stos fldl movsb inc jo pusha mov mov pop mov push jle xor std ds repnz call add jo jp jmp xchg popf cld cli (bad) mov cmp jmp adcl icebp enter (bad) rcll nopl push pushf inc xor addr16 sbb ja xchg pop mov push rcll jae mov adcb bound nop sbb adc popf das sbb imul add push mov cli fsubrs pop cmpsl (bad) int3 mov pop vmwrite mov sub jnp mov push outsb mov test pop fst mov iret inc aam and movsl ror xchg popf fsubl aam aam pop jns dec pushf cmpl or movsb adc test data16 dec jle xor sbb jo xor enter ret jl adc icebp pcmpgtd bound jnp inc push into movsl out lret pop xor push stos daa fs cld movsb fst pop fsubr les mov or movsb jae sbb sarb bound pop xchg and add outsl subb in adc popa imul push cmp outsl ljmp sbb hlt stos pop test inc loopne call ljmp mov es lock divb pop (bad) push jle (bad) int3 sahf cmc dec lock add cld mov xor pop mov push popf outsl aad mov aad mov cmc jne push cmpsl fcmove je pop fdivs dec ja add divb popa gs sbb xor or xor sub imul cmpsl loope (bad) xchg jnp sbb xor xchg arpl jno cmp cmp jo push cli js push add ja push dec xor inc push repnz test jmp mov mov cmpsl mov mov pushf mov xchg mov lcall xor mov in movsl sbb mov hlt (bad) mov cmp push es cli popa aam aas (bad) sbb push adc xchg mov mov pop add mov jo jne loope mov jle cmp push pop mov fcom add xor and xlat mov xchg mov rcr push sbb or hlt add std xchg xor shr out jns mov mov ret shl mov (bad) jae (bad) jne outsb out lcall pop cld das cli je fstps (bad) ja pop sbb push cmc pop std inc adc mov adc lea pop in add push fs sub icebp hlt mov sbb push pop adc and xor popl xor ret mov aaa cmc jnp xor sub xor pop aaa jle divb stc pop add out mov push repnz jb adc in mov pop xor outsb imul dec mov jae leave or jae gs dec xor hlt lret jmp lcall mov mov out xchg sub jge in mov lods xchg int or aad push test inc adc add sahf or loop cmp xor xor aaa xor jecxz sbb pop (bad) cmc add push mov rcll fnstsw je cmp stos in in mov stos sub mov test push and jbe and mov test les xor inc cmp mov jmp movsb pmuludq out push xor mov daa xor xchg mov mov inc jle sub call xor sub pop xor mov push out fs jo inc cli (bad) inc jae imul (bad) (bad) lcall xchg sub ljmp inc adc dec add jle cltd daa outsb lods cmpsl xor roll add outsl scas fucomi sti inc repz and add mov pop mov std mov push ljmp mov jl arpl push fidivl movzwl add mov cwtl xor sbb xor xor dec add xor pushf stc pop mov in pop xchg adc mulb dec clc mov in lcall (bad) pop sub sti cmpsb jno push fwait pop arpl jge (bad) clc jns jo sub stc xor push popa xor jno cld push ja int3 in inc nop xor lea inc je push mov flds ljmp inc and out sbb xchg aam or cmp call xor popa jno es dec repz jne je fild xor sti mov mov or xor test loop add daa arpl and adc xor movsl negb dec mov sub mov fsts xlat jae (bad) xor cli cwtl xlat xchg mov int3 fdivs cli bound push mov imul xchg mov push inc mov sub jp data16 sbb inc lret xchg jp cmpsb out bound inc lds cmpsl sub les inc gs mov mov aas test sub xchg and lcall es aaa mov mov call shlb adc lock cli shrl add bound cmp sub xlat movsl iret mov fsincos (bad) dec movsb les mov cld and pop insl mov push pop jecxz sbb or sbb mov cli sbb xchg popa xchg or inc cwtl xor jecxz enter (bad) mov push sbb jl mov push pop mov mov fs or imul lahf scas cmovnp inc (bad) hlt jg cli add or arpl sti cmp xor es pop repnz dec push cmp xacquire mov loopne in out fcoml imul mov dec push mul (bad) cmpsl push call sub in sbb aad mov lret cltd mov mov xor nop insl jne adc int3 inc inc and hlt push sbb add stc push pop mov jae cmpsl subb mov iret gs sti mov jnp and loope cli mov jg push popf out xor mov sub cli out cmp push jns loope sahf addr16 or pop jns xorl jp js pop lret nop cld add outsb sub cmpsl mov pushf xchg sub lahf popa int mov sahf ficoml lods sbb mov mov std xor into outsl jb mov sti cmp nop test int mov mov cmp arpl dec mov cltd sub and (bad) xor sarb rcll cmp add nop popf sbb inc lods je cmp sarl inc out sub inc fmul sbb aas aaa xor (bad) stos adc sub aaa lcall and in mov into jo and mov hlt sub loop push xor adc leave insb div fwait setno jge jns mov jp fstps fs lret cmp push adc xor pop loope mov inc repz sbb adc ja daa mov mov sbb ss push jno adc mov jmp jne mov fldcw cli sub inc xor adc jecxz xor sbb clc sahf mov add aaa mov ret jb ret sbb inc (bad) repz mov inc std lcall sbb loopne repnz sbb mov fprem1 cmp (bad) adc movsl outsl lods dec and pop test ljmp adc jg add out jl xlat sub push mov loopne jg pushf mov ds mov shll cs cbtw pop mov cs out xlat lds aas mov js xor adc lcall and dec out jbe push jl inc das je loopne jb mov popf xchg xor lret xor cmp std xor arpl mov push jge sub int gs or xor jo lds add jg mov mov add xor cltd push and cmp push outsl xor loop mov test jmp test inc xor into daa cld push xor dec icebp pop fs mov adc scas cld loopne xor pushf fcomp add mov fs mov mov mov call imul mov (bad) cltd xchg push rol xor sub mov (bad) push mov xchg xchg enter aad shrb pushf or or (bad) stc pop cmp add mov (bad) scas xor les into jl or imul lretw sbb pop dec je sub mov xchg call lret (bad) repnz cld adc mov cwtl mov ret sbb es bound js hlt lods int cmpsl outsl sbb push pop das xor fildl icebp sub pop (bad) ss js repz xchg xchg ficoml and inc std mov xlat xchg push (bad) or outsb nop pop int xor mov dec dec or jp adc sub xchg stos mov bound or repnz push gs and je cmp inc (bad) pop stos xchg xor inc fsub lea stos movsb cmc int3 movsl sbb insl repnz adc or add lds dec cmpsl inc shll gs cmp push adc ss push clc (bad) xor adc add not cmc mov mov or cs es (bad) xorl aaa mov jns enter xor (bad) xor mov mov rcr cmpsb push (bad) and out lcall cld add hlt mov inc or rorl pop dec and inc adc stc (bad) repnz mov je sub mov xor adc stos and inc add and inc mov push fsubr lock lock jge imul push cmp dec pop out sar scas imul imul js mov xor (bad) xchg lods cmovne cli inc mov or adc add loop ds xchg mov push mov dec xor out sub jns fcmovb mov add cli in push clc aas (bad) iret sbb sub push lods sub adc push addb nop adc subb mov dec outsl add inc daa mov fsubrs xchg push repnz int3 insb aad add mov pop xchg enter daa clc xor mov dec or mov sub xor cmp adc mov sbb (bad) test push add xor xchg xchg repz xchg xlat mov enter gs push xchg (bad) mov in xor inc pop gs xor jp inc sub pop push bound stc sbb ljmp (bad) hlt sbb jl pop fidivrl aam or test loope add xor lret lods jmp je lahf xor mov jo or movsb js loope (bad) xor push xchg xchg fbstp arpl mov popf adc cli daa or fstps cld fwait lock mov jo call les lcall mov jp cmc lock xor adc xchg and stos jecxz xchg repnz xchg cmpsl scas mov lock add xor push xchg mov outsl in xor xchg out add xor dec sti mov std cmpsl mov sub out decb xor jmp lcall pushf or in or daa fldenv (bad) jb insl gs add mov xchg lods push rcll pusha sbb data16 mov out cmc mov insl cmp lret iret iret adc test sub add repnz (bad) mov inc add fst pop jae movzbl sti xchg aam gs add (bad) and mov pop aaa push and shll or lods cs stos hlt cmp or jge xor jle lods popa xor fucomi dec xchg insl adcb nop daa mov add inc cld jae pop xlat (bad) (bad) or dec stc ds pop push repz push mov jmp addb xchg lock loopne gs int (bad) mov and xor adc pop data16 mov aad push jo jns int3 jmp xor stos cmp dec adc ror mov lahf xchg cli xor (bad) jl out popf dec xor mov aam cmp sbb in mov ja test and sbb nop mov sub xchg and mov or sbb out inc sub adc mov (bad) pop stos adc ret lds inc adc xchg adc jae cmc test imul inc ret cmp cld cmp pop je dec repnz dec jae lahf cli mov test xchg pop or dec std jb dec adc xorb mov add int sbb inc in mov dec add xor sub rcll faddp inc repnz into adc pop inc xor lock leave jp fcoms cmp pop shr lret mov daa in and lods nop jne popa sub addb jl jbe mov xchg cli je push mov adc gs call adc cld mov stc sahf out out xor les pushf in jl bound adc pop sbb (bad) pop jb inc hlt outsb lahf or in cltd lods cld mov jbe adc fdivs insb xchg icebp shrl orl add hlt mov stos adc mov fbld cmp adc pop repnz and test add subl int3 (bad) jmp lret into pop js scas out jno add and inc dec push xchg test mov andl outsl or cld xchg inc in inc xor in lret cltd repnz shrb push jnp sub dec jno mov icebp adcl into jp jb jp and out andl stos or nop mov test shll mov xchg push sbb or in jo outsb adc jp xor les mov add dec push inc inc add mov mov push add das (bad) in xchg mov mov fldenv fsubrs stos test jns xchg xor xor sub frstor outsb fnsave cmp scas mov add xor jae ja add int aaa repz jmp cs add add pop mov mov xor adc insl fxch adc ja adc call and repz xor mov popa sarl adc and sbb lret xchg icebp daa cli leavew das mov push (bad) repz mov mov jb daa pop les jns jnp jmp dec lahf mov jle cs adc outsl add and iret daa adc mov dec (bad) das push pop mov aam inc ret lds je (bad) rorb or stc pop mov inc mov add rol xchg xchg mov adc rcr mov push adc mov and pop gs jns hlt push jo jle ljmp sbb push into pop mov addr16 shr bound mov jmp dec int3 mov rorl mov mov mov pusha xor hlt mov loopne jp inc fisubrl xor and stos loopnew (bad) xor mov add xlat (bad) in or push rolb cli xlat cwtl leave std frstor add daa dec sti adc sub xor iret negl mov mov in xorb push dec mov arpl clc enter mov fstps sub xchg xchg xor adc icebp xor cmp loope rcrb cli cli nop pop dec push dec xchg mov lea aam sbb push popf pop dec enter mov (bad) movsl jle xor add ret daa jmp sbb adc jg or push loopne (bad) cmpsb incl sbb mov (bad) jnp jbe sbb sbb movsl jp adc xor inc push cmp sbb (bad) sub scas sbb push pop jnp and imul jg push push sub add adc mov jge fstl sbb xlat mov stos (bad) jle mov push jg jmp test mov test and lods lcall cli scas daa sub sbb xchg or and pusha cmpsl dec xlat and xor inc mov into dec dec mov mov dec sti lcall cwtl lcall push add out xor aam nop pop hlt and or sbb sahf push add xor jo xor adc aad mov cmp fs mov and xchg jne lret std shl push (bad) hlt xor jae inc testl sub arpl add dec je xchg mov in orb inc es pop mov cmpsb hlt push and jge xor sbb sub je push gs (bad) repnz xor into rorl cs daa xor xchg mov xor bound cmpsb mov mov add insl and adc xchg cmp xor into or adc push lret arpl push xor inc sbb push hlt aas and popf dec das add cli arpl mov adc mov push push jecxz jge das nop cmp lods rolb movsl and adc xor sti lahf ljmp xor dec jmp jmp test (bad) loop sub pop pop cltd in aad mov and int3 jl stos xor ds sbb pop loopne popf push dec scas dec cmp ljmp fdivrs insl push test ss bound imul (bad) jmp es je add std adc xor jp popa std test xchg and cld pop ret imul mov mov ficom int3 xchg ret xor add stc xchg jp hlt lods add add xor xchg ret xchg je add test xor jl xor sahf pop jae mov cmp xor xchg or jno mov int lds out popa fmull mov inc mov fistp daa movsl cmc pop push andl jnp add ret xor loopne jecxz xor pop dec mov int jmp scas fistpl push psubusb repnz ror mov xor xlat xor sbb bound (bad) xor push cld ljmp cmp (bad) in xchg mov mov jmp xchg frstor push pusha bnd xchg xchg jb sub xchg cli xor dec inc xor xor mov les or mov pop es icebp jmp shl stos pop aam adc pop ret push jb je ss movhps icebp xchg push int3 sahf outsl and out in adc (bad) mov mov lahf ficompl mov mov mov add mov es sahf pusha mov cmc pushf out mov push pushl inc mov xchg add je add (bad) loopne sti and xor lods inc ja xor pusha push (bad) out jge movsb mov push sarl or sub xor aad rol leave jnp imul insb es inc in fidiv sub pop (bad) cmc test push xor mov push nop lahf arpl jae repnz dec and inc or rcr dec lods aaa mov push pop or cli ret lods sub push repnz gs adc push je and pop mov push js cltd pop mov mov sarb add xor pusha clc les std xrelease ljmp hlt sbb negl dec fisub rol jae sbbl fiadd rcrl aas iret jmp (bad) xor cmpsb mov dec or inc js pop jge sbb cld xchg fldl mov push xchg pop (bad) ss push sbb scas test popf leave and andl movsb xor popf rorb jno ret xor popa mov sbb jp scas outsb ds out daa jle jp aam xadd cli bound test lds sbb xor fdivrl and rorb jo add mov xor push push adc aam jo std cmp add cs or test ficom fs cli xchg inc fild adc mov push inc insl lds sub xchg jae lahf hlt xor mov int movsb hlt in sbb or xchg xor repnz rorl lds mov cli ror in clc fnstsw mov scas xor mov hlt aam mov sbb mov xchg mov aad loope pop jbe cld mov leave cmc xchg lock repz mov sbb movsl aas xchg xchg aad inc out dec lods fcomps fcoms push fs mov aam sbb push hlt cmp cli jb dec clc cmpsl cmp out jae mov imul jno shll push jg fstpt sub jae push fimull or movsb xchg mov decl jo addl roll and adc std mov popa mov clc fs je pushf dec push dec adc pop xchg test fwait push in cwtl jmp icebp sbb inc lahf xchg mov bound pop sbb inc int inc mov (bad) pusha inc mov cli fnstenv daa mov xchg jne lret ss jnp lret jecxz or (bad) pop cmpl bound jp xchg jae adc repz ss and mov arpl push in jb push outsb sarl stos ret (bad) fyl2xp1 sbb rcrb xchg sub adc rorl mov sti fnstenv xchg cmp (bad) mov (bad) jg mov jp cli movsb loope mov mov push cmp mov push jno xchg add stos mov (bad) and or jb imul test jp out xor fldt sub aaa sub push (bad) xor test pusha std mov repz sub xchg (bad) mov xor dec std mov dec sub test mov test cwtl nop cs les cli dec lock rorl and repnz movsl xor (bad) push outsl stc jbe into stos xor and or jl and adc sub add push sub inc addr16 and sbb test push sbb jne (bad) mov out ss xor adc iret ret lea dec pushf jmp jp jge fisttp std adc in addr16 xor cltd call sub or (bad) repnz cs adc pop ja push pop or xor mov add and addr16 aam bound popa sbb popf or es jl jne and xor add and push fwait (bad) loop jne inc xchg push or mov xor pop stos jg test mull leave ss xchg xor mov pop ds jae lds (bad) jmp cli sub mov repnz jno inc xor lea and jge cli push dec push sub movsb xor aam mov xor test dec pop cmc loope sbb inc adc xor dec and jg mov movsl cld cld outsb fs push sahf sbb mov cmpsb cmpsl push inc sub dec ds push ljmp pop aam jge popa dec xor adc xor xor ret orl scas arpl enter je cmp icebp lock add jp lahf test push (bad) mov lret (bad) divl mov cwtl data16 popf push test or jo add mov cmp dec pop popf mov rcl aam adc int fidiv xchg movsl stos nop xchg xorl or sbb sbb outsl shll jno pop inc and leave add adc outsl mov jge (bad) mov push mov sub push pusha loopne scas push xchg and push cmp xchg xchg sbb popf movsb push sbb dec push adcb cmp in (bad) xchg into sub leave pop adc ds sarb pusha aaa mov data16 and push mov inc and adc outsl inc sbb mov cmpsb push rcrb or ret inc out jmp and int mov scas cmp cs cmpsl jo inc xlat cld cmp or pusha call push add sti in mov out or jo jns cmp xor fidiv sub int xor jnp mov add movsl inc out xchg test and inc and dec pop aas sahf ret int cld wbinvd mov into sub sti push add xor xor out mov enter sbb (bad) (bad) sub (bad) fnstsw xor (bad) and sub add int3 int xlat addr16 push je dec sbb push lods adc ficoml clc addr16 fdivrs mov dec fsubrl push ret or push outsl xor aam dec hlt jno mov jmp mull test rclb cli xor hlt add test mov test leave sbb mov add adc inc mov rclb cltd leave xor mov xor lcall scas xchg mov and je mov mov xchg xlat jp enter bound in je ss sub mov inc sbb mov std mov xchg loop sub xor sbb pop inc repz mov or sbb inc and lock xlat pop cmc jnp cwtl cmp sbb (bad) loop imul loopne or stos or inc xor pop das push aaa hlt jnp les or jp mov pushf lcall (bad) mov fistp add add add xor adc popf adc std dec sub imul inc dec popf add xor mov clc decb insl or sbb out stos rorl xor movsl and jge jb adc sub adc cmp jmp sti in jbe jne imul push movhps (bad) jno hlt adc push lds sbb lea movsl ss xor popf cmpsb clc jb pop mov mov mov or adc sub sub xor pop int mov dec sub jno lods imul sbb popa mov dec xor cli test add data16 or iret icebp cli imul mov adc or mov sub and mov jecxz repnz (bad) lret sub xchg gs cmp sarl add sbb or (bad) xor ret aas int mov stos scas outsl sti adc imul dec pop mov cli adc mov aaa push int3 in sub mov icebp (bad) cmp jne cmpsl sub (bad) xor cmp sti mov sub ret or daa mov scas cs pop xor mov mov pusha shrb decl add incb mov cmp push pop or jbe jb rcrl into jmp std mov adc jbe cltd sub jecxz push dec imul xchg sub pushf jl jle fmull test xor aam add jno imul rolb mov add cwtl jmp cmpsl stos xor out das pop cmp dec test push lods popa rorl dec inc push sbb dec jl inc and jne icebp daa fnstcw bound add and xchg pop jle adc ficom (bad) jae arpl psraw lahf cmp pop je test pusha add stos int pop jne xor imul sbb jecxz pushf sahf push int mov ror or mov cmpsl and iret fnsave sarb mov out or ss rorl dec and or adc popf mov popa mov mov adc fwait mov mov addr16 lods (bad) mov ljmp lods adc cli or adc push test je and rorb aam sub aad push adc movsl and sub shrl jo ret call pop dec fbld pop daa adc mov jmp (bad) out loope mov mov cli push xor jae mov inc mov jle bound aad inc rcll aaa flds push lret xor sub pop jmp das and daa and pushf lods push nop (bad) mov mov mov mov js subb pop cld pop outsl inc dec ja push xor xchg sbb xor loope dec xor cmpsb shlb cmc adc add xor pop jnp jl daa mov stos and lcall repnz xchg in xor and xor ret xor lcall iret mov xor rcll (bad) ljmp add xor test mov (bad) xor jg jle jo (bad) mov xor movsb outsb cmpsb sbb xchg pop push jae cmp test lret mov leave (bad) (bad) add jbe bound jb lret sub repnz xor outsb sub imul std cmpsl jmp mov test mull xor xor or mov int3 mov icebp pushf in pop das insl cmp jb test ffreep std xor push pop inc loopne fs add adc xor in and lods adcl fdivp adc stos add hlt (bad) hlt arpl jbe ja sub add daa adc popf xor je mov jae mov mov mov mov or sahf dec cld xor push sbb hlt (bad) mov mov std adc cli sbb scas clc cmp gs xor add push movhps jbe movsl mov sub in out (bad) jecxz mov and outsb xor sahf das xor adc outsl sbb (bad) mov fidivr ret cli pop xor xor insl scas hlt mov mov cmp mov (bad) and or mov cwtl rorb mov inc xor loope arpl sbb xor mov mov and aam popf lahf je mov paddb movsl sbb out and in repz xchg or jmp adc out sti nop jp stos aad jns xor xor xor mov dec push lret fist scas xor ljmp bound push je jge xchg es sbb fbstp js jae outsb aaa imul fnsave push xor mov sti cmpsb ja in bound sub ret mov int sbb xor (bad) pusha ss cmpsl and ds xor in scas data16 aaa lods fnstenv pop pop sahf pop xchg lds pop inc les notl je out movsl sbb iret ds mov int or popf mov lret mov adc mov or jno push mov pop mov hlt movsb jbe xor mov lea sub dec jae int3 clc inc mov (bad) xor icebp je call push jl add mov xor aas push sbb popw les into xor test stc and in mov mov ret scas lds push fildll cli xchg inc xchg das js xor pop dec mov sbb fyl2x (bad) bnd jb and xor xlat jns cwtl icebp dec xor movsl repz stos pop dec sub test adc (bad) xchg xor sbb stc test cmpsb xor or aam int mov (bad) jno daa cmp cmp mov and scas lahf or vpmuludq mov loopne xchg ljmp sbb xor test fwait cmpsl cwtl push xor adc mov imulb xor cmp sbb mov jb sub inc aad (bad) adc lea inc js jae (bad) pop dec rdtsc andl xchg xor movsl push pop cmp sub nop ss es sbb inc jno add push mov mov jbe adc mov insl mov push (bad) icebp hlt enter or mov imul fsubr xor mov pop adc test mov jle cli movsb das sbb mov in (bad) mov lds push je nop jmp fidivl cmp and psrlw cwtl mov mov add mov push dec repz sbb fwait or pop add push mov sub jae sub int3 push mov fcompl add repz loopne inc push pop inc dec push sar inc cmp lods xor (bad) out push mov dec dec dec repz arpl fcom mov lcall mov pop mov loop cld in cwtl sbb mov dec aam ror pop leave bound pop push stos sbb sarb rol or cmc adc xchg (bad) ds xor aad xor ss or addr16 arpl dec popa jno add ja or (bad) loopne sbb fdivs lods iret push add push add imul sub rcl imul ljmp xchg xor add mov sahf imul mov xor stos add sbb (bad) mov add mov push adc leave sbb ret mov sub xchg hlt addr16 xor cltd cld loope xor lds bound mov jbe arpl int3 push lock jmp mov ja lods (bad) jp inc (bad) lret rolb cmpb push outsb test adc lret mov push (bad) test xor fdivs xor sahf adcl (bad) in pop inc xor xlat lcall jge loopne nop or test in push and xor (bad) out adc repnz test xor pop daa xchg xor mov jns outsl dec (bad) add adc stos lods or sub xor push mov hlt mov in (bad) or addr16 xchg hlt or pop cld push mov and clc or inc xor flds movsl (bad) sbb xor shrl in (bad) (bad) xor push add xchg movsb aad sahf adc xor (bad) fisttp clc push or jmp xor clc inc imul pop dec mov mov into (bad) repnz inc pusha push mov mov adc sahf add daa cld fs mov mov roll mov jecxz out mov push push sbb bound cmpsb out jb call mov jns mov loopne lret pop (bad) lods cmp xchg mov gs repz sbb pop stos mov jnp push cld xor push and mov (bad) loope xor cmp inc insl jp dec lcall stc mov or jae xor cmpsb cli sahf cmpsb dec lods fwait movsl lds (bad) push hlt push jle repz mov mov add clc dec aaa jmp and sahf ds adc mov ljmp test sub cmp mov cmp add (bad) ret jne mov or xor push mov jae pusha bnd sub xor std aas dec or ss movsl push aam fcompl out (bad) cli add jmp mov cli adc mov jnp sub fsubs add dec pop push aad jb sbb dec adc and cmp imul jmp and push adc test push xor in fs ljmp imul fistpll aad mov cli popa pushf das out sbb adc push mov sbb ret mov dec fcomps adc and cli imul nop push jb,pn in mov mov js (bad) cli adc sahf repnz mov inc mov inc loopne aam add clc into sub dec and into repz mov cld ds popa sub (bad) cmpsl pop dec pop mov dec repnz aas cld jb or cld mov xor xor stc arpl xor into jmp imulb sbb cltd sub pop or push xor fild sub stc (bad) jo (bad) xor sub xor cmp mov sub in jns mov push ret xor ja sub or inc sbb mov cld aas adc mov pop xor std icebp jno repnz insb sub mov xor sahf scas fcmovu ja mov dec xor test rdmsr mov mov adc daa inc and or je fmull clc mov fwait cmc into and pusha xor pop add je cmpsl cld add int3 jmp (bad) jb gs mov and push lock and inc test mov mov fistpll mov je (bad) or cld das cltd sub pop fstpl fdivl push fstpl into lock add ja add imul stos push dec pop jmp xchg adc add (bad) jbe fildll push loopne stos jo mov test pop sub xor leave dec mov push iret xor sarb pop nop icebp xor imul jg daa sahf jle mov lret arpl mov jne sub fsts repz xor push xor les jle in cmp int cmp pushl cmpsl pop dec aam cli repz cld shrl daa jg push pop test (bad) adc add lea inc sub xor dec jg in mov push sub jno fcomps push adc jge int3 mov dec dec xor adc mov fmuls sub mov xor jl xor cli mov gs push cmpsl inc adc jp cwtl dec xor jmp sbb xchg cmpsl or or mov idivl data16 or ss shrl xchg inc pop or lods xor outsl imul hlt sbb sbb lds sbb (bad) jns and xor ja xor das lock insl and loopne clc out lahf xchg xor pop lret push or xchg std sub mov jb xor adc clc dec call (bad) scas xor adc dec sbb push jae js jne pop jb addr16 cmp jo xor clc (bad) sub xor fstl add js lcall xor stos xor sub je xor imul pop add ljmp sbb xor sbb fsubrs xchg lods adc jge cmp imul repnz cmp push popf mov or loop test iret xor cmpsb adc add loopne jmp sbb xor (bad) push mov xor cmp jl xchg ss ss jno test movsl orl (bad) xor push sbb adc test repz rcrb mov cli addr16 pop (bad) sbb nop or lea pop cli push popl mov jp push cmpsl sbb and xchg xchg mov iret lock push fcoms mov adc outsb imul xlat xor sub es test pop lea bound push rorb jmp mov in mov mov push cli gs sbb and and lds push cs push bound std repz mov xlat aam inc fidivr sbb dec dec pop push mov addr16 sbb clc xor mov mov test inc xor jecxz and mov test add std xor faddp mov lods dec xor aas sub ja cmp xor push mov jo cmc (bad) dec aad loopne xor fwait call cmp (bad) jle jne adc xor es push sub xor fbstp fwait and hlt and sbb (bad) xchg ret (bad) mov sub mov add addr16 pop sub cmp jl cltd cli push mov (bad) notl mov outsb mov dec sar jge sbb mov jmp orl inc mov (bad) hlt jg into sbb sub loope mov jp and dec add sub and inc dec dec pop fnsave push xor dec xor cmpl ret push cli xchg dec pop cwtl outsl xor pop inc das dec hlt sub inc adc (bad) insl push xor xor andl clc movsb hlt cmp xor (bad) jno jne fisubl jae dec cmp cld add push psllq xchg adc and or xor sub jo ja jns cmp bound or push mov imul addr16 fidivrl shr push or cli adc mov adc (bad) (bad) and in sub into repnz sub lods push sti adc inc aam sub push and xor sub in add dec xor pusha sub fistp mov int xchg in nop jb adc test mov or sub pop jmp inc add ss repz ss xchg loop adc mov xor stos sub loopne sub lcall push movsl xchg adc lock cs adc cmpsb shlb popa in movsb jge les je jle (bad) adc pop sub loopne mov mov outsl pop pop push push out adc adc dec sbb xor dec cmp or mov bound fwait xchg xor out loope push pushf xor pop negb xor lahf fwait push jp decl ret jbe cmpsl rcl add mov out clc mov popl add (bad) jno cmp out mov push pop in jmp repz jecxz mov dec xor out ljmp stos xor enter insb add mov sbbl xor jp fisttp cld sbb mov mov add sbb cmc pop cmp inc test addr16 jg sub (bad) push scas and ja lahf pop dec cmp mov mov push fadds (bad) xlat cld imul xlat clc inc jb and mov scas loop mov testb or and pop jae ljmp push jne cmp pop xor sbb hlt addr16 dec add test sbb or add mov in das mov mov mov sbb leave mov insb scas adc aas bound lods push out sti loopne sahf cmp imul inc aam mov xchg adc enter xor fidivrl mov mov sub xor and xor and pop and in sub fldl or (bad) popf xor inc out push xor add pop xor mov sbb dec out lret in imul es lcall pusha pushf mov fidivrl adc mov mov pop inc ret aas mov dec mov das dec xor mov pop (bad) mov xor add sbb adc sbb and dec xor imul pop repnz jp cmc xor jnp pop xor adc inc pushf aas pop rclb and or push cltd xor clc adc cmp push ret xor and lcall xor arpl jb scas daa shll pmuludq cmc add aad mov jo lcall push movsb push pop ds aas aaa xlat pop loop in lds add jno shr ja sub dec inc jb (bad) fstl and pop sub jge stc dec sahf repnz cli mov std inc jp aas cwtl dec mov mov jo dec cmp jge mov xchg sub enter lds mov xchg aas mov and sbb arpl or scas pop cmp mov cwtl cmp jno cmpsl cld mov sbb xor and xchg pop xor stos adc test clc aaa dec jne mov test mov pop dec je sbb pushf test pushf mov jno adc push and je sbb popa mov dec push sbb les aaa aas cld jge pop pop lea mov xor mov (bad) or push ja xor jecxz (bad) sbb cwtl (bad) xor xchg and inc xor fnstcw jb cs aam sbb fdivr loopne cwtl daa xor pop ja lcall mov and mov pop lahf and sarl inc add repz dec out xor stc fs and loop insl pushf es lahf add dec es (bad) in int3 hlt mov ret xor std cmp dec xor enter xor loop mov xor push add mov daa mov jo hlt pop jp cli cs insl std sahf xor int3 mov adc psubusw repz mov insb or xor inc scas leave out mov cmp and xbegin lods imul xchg cmp (bad) in inc outsb or rclb popa cmpsl aad outsl dec hlt lcall cmp leave mov aam cld out add sbb mov push xchg sbb ja mov dec repnz sub pop loop jne mov aas imul or mov xchg xor xchg stc stos mov cmp (bad) inc mov subl cltd cmpsb xor fwait pop xor mov jae xor inc xor and and push or cmp int mov mov and in xor bound loope push push aam (bad) pop imul mov outsb into pop add mov sti mov shll lock pop xchg xor aad clc ljmp or insl into ds push jmp rorl push fwait sbb dec and mov sbb push out dec jle xchg push leave sub (bad) test jno jo add dec pop or lcall lds xchg inc xor mov inc gs xchg mov rcll outsb push pop gs leave jne lods sbb (bad) xor sti ljmp cmp shl call inc and fiaddl pop or push clc push push inc cmp hlt pusha xchg mov xor or into sbb cmp or mov push inc xor or sti push xor sarl mov mov jo sub (bad) scas loop ret pop shll in dec insb adc cmp adc jnp sbb push sbb xchg lahf and cmpxchg mov aad xor and sub hlt mov push (bad) shr lret sub mov add adcb pushf cwtl shrl bound xchg inc movhps sbb cmp or imul jge hlt and inc das cli mov mov cli mov js push sbb dec inc mov mov cmp jae loopne pop push movsb push sbb jmp inc push mov lock imul repz add sub jo mov gs (bad) movsl push les jp test adc mov jb (bad) cli dec fsub or push (bad) mov in cli or cmpsb cmpsl push loope imull dec imul pop adcl fs sbb (bad) mov roll mov jge or mov ja cmc stc or aam push lds and adc and xor jge imul xchg aas rcll mov push das lcall movsb mov push xor sahf and lret mov iret pop lods xor push cmp mov jecxz aam decb adc inc xor sub xorb pop and stos arpl fcmovbe push int push xor jb and les xchg xor push and es loop cmc mov xor rol push inc dec and mov repz mov adc xor dec push fisttpl xor mov mov xor loop dec lea xchg push in int lahf iret repz inc bound shlb fldenv sahf xchg jmp sbb hlt mov icebp sarb or ficoml aam movq jp out or adc and sbb pop cmpl push bound movsl xchg cwtl sbb adc addr16 mov jge mov je cmc int3 adc add xor fist fwait cli std test jae fs setne mov outsb sub lds or fbstp push movsl add xor xor inc stc adc mov xor icebp fsubs cmp notb adc repnz dec cli dec mov mov stos repnz out repz jecxz ret mov add xor loopne and jnp xor mov gs pop pop lret cld push xor or mov mov mov add adc cmpl xor dec push fcoms inc adc ljmp sbb and dec push inc push iret adc scas or mov xchg mov add ja ljmp scas sub cmc test not cli jbe lds sub and cwtl pop arpl jns xor xor and lods mov pop aam es out jmp and inc xor test cmc test or lods pop in adc cli jns mov adc mov mov mov sub out push les xchg mov xchg std xor clc pop je repz pop xor jne insb mov jge push sti mov dec add aaa frstor fwait xchg sbb ret jae cli in jae xor (bad) mov jmp and stos mov std fdivs lods inc fnsave cld ljmp icebp (bad) repnz xor xchg out mov inc lds stos cs adc inc xchg push xor (bad) mov je insl sti xor test sbb fstpt in int3 sub push shrb nopl xor mov aas mov dec sub and or mov cmpsl gs movsb cli pop or scas adc cld lahf adc dec add nop mov mov fcomps cmp mov popf (bad) sbb je stos cmp push rcl shl mov sub or movsl addr16 lea (bad) faddl sbb in jo jb lea xlat adc loop rcr mov hlt push js movsl insl sti mov xchg mov xor lods adc dec std xorb (bad) cltd es mov adc dec push or push out mov fisubrl enter mov mov jmp xchg cltd sti data16 xchg mov in sbb or mov xor mov or jbe push rorb daa sbb cmp jecxz sub mov aaa sub push mov cli mov sti lea iret mov jg out ror dec mov pushf pop and dec dec addl add mov cwtl outsl xor cmp test ljmp lods jae mov ret jno (bad) loop je jp je push adc jns ja bnd xchg lret pop movsb jnp xchg rorl mov xchg push lahf imul nop push cmpsb mov cmp mov cli mov mov popf and nopl lods mov sub (bad) fdivs xchg (bad) cli loop mov loope mov sbb bound push das and inc push fcoms xchg (bad) mov fwait and loop pop or aad test je and fisubrl aas imul aaa sbb or cmp sbb push push push jne repnz scas sbb aas add inc jae aam or jno cmpl insb sub stc jle sti subb sbb dec jae pop add cmp jo or mov xor xchg mov jne pop scas and inc lea inc inc adc call mov mov cld adc ret mov pop loop les and aaa xor inc clc lcall push aas and aad les aaa gs jae mov xor push push lods xchg sub scas pop xchg subl add icebp rolb adc jb bound jmp mov cmp push (bad) jge leave add xor orl test in mov xor ja shrb mov inc xor daa cmpsb mov jp jecxz inc xor mov or jae sbb jp add cmp xor iret repnz fnsave dec mov dec sbb xor xor jecxz mov xor mov outsb hlt jmp add out cld aad test (bad) xchg cmp std popa and leave inc gs jmp jg inc xor add aaa xor inc aad lock shl and mov xor es xor xchg pop stos xor cmp cmpsb sub pop hlt jmp ljmp leave ret repz cld inc mov dec jle loope test push std mov and stc nop jmp xor pop jns add sbb and lods aad into inc idivl std les sub shrb lods test loope dec mov xchg xor fisttp ja and fmuls jmp xor lds lret fdivrl inc nop (bad) xor sbb xor xor sbb fstpl pop add cmc add push cmc lret xlat lret adc cmp mov fcmovne stos xor sub sub imul jae lods aam orl fisttpl daa inc imul aaa adc adc in in call xchg cmp imulb popf test insb mov xor cltd sbb (bad) hlt stos and std add add bound aad mov incl dec clc aaa add dec xor imul inc dec clc sub icebp dec xor sbb or adc iret daa mov push test mov inc hlt push nop xchg sbb sub adc aam jp mov push js xor inc pop push (bad) xor (bad) movsb loope mov lret xchg (bad) jo or cs jnp jae pop shl nop sub test mov xchg xor inc pop add loopne mov and mov mov mov sbb push sbb mov adc scas lea xor xchg jae lahf cld dec dec adc xor neg mov jmp jmp int or adc mov push inc xor xor cmp call (bad) roll cvtdq2ps test adc jns cmp mov add into adc or dec cli test xor push (bad) jb sbb mov in mov jle mov xchg pop sarb aam ljmp pop xor es xchg fcom insl hlt adc cli inc test xchg sbb mov stos jg fucomp loop fsubrl sub mov adc xchg shlb (bad) or jno cli (bad) es daa lret pushf xchg arpl jbe ret mov ret cld (bad) in pop jns loop mov scas push mov shlb mov arpl decl or cltd or aad cs xor sbb aas pop xor and push mov jmp mov or pusha fsub and aaa cld and (bad) push adc test xchg repnz in aam xor inc xor mov add sub rol mov repnz jns dec outsb (bad) stos jae mov js and push pop leave in inc hlt in mov cltd sti aas pop imul jg xor cld jle hlt idiv mov cld push loopne fidivl xlat mov cmp (bad) decb inc or fisttpll dec add popa pop add xor sub add mov fstpl (bad) cld daa sbb mov ret xor cmp sbb xor aas xchg push xor pushf push (bad) stc xor jae ljmp (bad) ja call (bad) out pop repz xchg inc cld add xor leave cwtl push std in mov imul je mov jno fwait pop imul inc cld xor movsb rcrb xor push ljmp add jg xor mov rolb lahf adc pop xor js xor rorl (bad) xor pop fxch pop jns mov repnz inc aaa jl xor (bad) push nop xor jae fisubl mov adc shrb je adc mov sahf add and mov addl stos fdivrs sbb aad mov xchg pop adcb mov outsb je mov loope push adc in jo jl mov (bad) ret loopne xor inc add mov (bad) sub pop enter pusha mov sbb jmp mov (bad) mov ss (bad) outsl cli addr16 adc xor out (bad) xor push mov jmp xor sub xor cld pop test dec sti in (bad) xor loopne in xor leave fs bound (bad) cmp hlt lods pop sub mov imul mov test mov adc mov rcrl int3 cmpsb ss or hlt xor mov aas xor cmp sub add inc push cmp mov bound pop inc cmp (bad) sti ja inc add jno jg ret xor inc mov test cmp (bad) and mov xor lcall mov push mov lock inc movups (bad) dec sbb rorb jae add pop and add imul adc lret xlat sub mov sub jle in popf push jmp adc dec mov mov pop (bad) jnp pop (bad) mov jge xor inc scas xor push pop mov mov lret push arpl push or pushf int pop outsb adc xor rorl in mov (bad) jl mov mov xor orl clc and adc mov data16 inc lock clc adc adc scas mov stc fdivl lods cmpl into ror ret mov or out outsb adc stos daa mov (bad) dec sub arpl inc jge (bad) aad push test mov sti or mov insl mov leave fsubrs ret jecxz pop lret faddp das rcrb in and jno pushf and xchg mov mov (bad) es das loope sti sbb xor push adcl xor fwait or outsb xchg aad orb jno xor cmc push push add adc or loop mov xlat xchg xor scas popa cmp add add into mov adc lret popf movsl mov lahf jmp jmp lahf mov push mov and jle inc ljmp std inc sbb int jg nop jle sbb jns repnz mov aad xchg ret out xchg jp and jo std ja xlat push or add clc fcmovu out mov out repnz int int3 xor sub cmc and or adc sbb aas cmpsb sbb push xor fsubrs push xor xor daa mov rcpps mov sbb (bad) xor imul xor sub push fildll gs add jp outsl push fsubrl cmpsl pusha add cmp xor movsb push push jge mov xor mov jnp xor fdivr lcall je or add je nop fdivrp dec and xor ja (bad) mov in sarb mov cltd sti imul or (bad) iret repnz xchg rorb inc cld mov hlt dec pop les adc cmp fiaddl es jp xor sbb push hlt pusha xor sti push and pushf pop jge sbb sub clc je leave sbb xor pop dec pop adc mov lret sahf xchg test in hlt lcall or loopne xchg lea enter out mov mov fdiv js push jge fildll add jns outsl mov lret and mov lahf cli add push or aam fadd add mov je pop xor add sbb mov repz dec int xor xor add pop or mov mov mov int loope pop jno test fst nop mov sub xor les adc pop lea rolb xor fincstp ret push xor nop imul fwait lods adc cmp mov ljmp notl ficoml fistpl shll push push xchg sbb cltd call addr16 enter mov test inc cld pop adc jae xor outsb je,pn add jl loope adc mov neg mov lea clc lcall es adc mov cmp xor xor pop inc sbb pop rcrb insl xchg loop mov dec add jmp and movsl mov add and push and mov imul sahf (bad) xchg fldenv xchg xchg (bad) push mov sub or mov das mov mov xor pop pop adc xor dec inc add jge xor fsts mov xor mov sahf lret cli xor sbb (bad) xor adc ja dec mov and enter aad mov out mov xor sti lahf push xor ss push es cmp dec pop out push (bad) pushf addb add mov and cltd test push xor add pop xor mov dec push inc pushf outsb sub dec sbb in sbb cmp xchg out ljmp mov addr16 repz adc jae iret jnp jge test cld frstor xor mov dec bound (bad) mov or cmp sub dec divb push and jae adc push mov ss ja lds adc push adc addr16 pop inc push fs aas jle ja mov xor sbb cmc in (bad) mov or adc pop pusha sbb rorl enter fwait daa hlt mov test adcl aaa jae add mov cmp inc xor imul and push js dec mov and fbstp aam mov lds lods mov adc movsb shlb xlat in lahf jl xchg sbb lods mov jmp jmp xchg xor cli jl movsl out push sbb mov mov adc mov es mov loop add push cmp stos mov push cmp sbb ja repz lods (bad) (bad) jg (bad) ss cmp ret lahf dec push xchg mov outsl mov cmc dec lods xorl nop out dec hlt mov das sbb jp pop flds mov cs in enter out int std popf (bad) daa lcall add and xor jne imul js sub and cmp cmpps repz sbb xchg xor test jp xchg push pusha mov jbe imul dec pop pop jno sub lods and repz xor dec pop inc pop data16 clc dec inc repz adc and mov insb sub test pop out mov ret jno mov dec or pop jp mov and cmp jno xor and test out dec jns jge cmp testb mov aas out (bad) jne je (bad) std shr clc jg daa mov sub sbb and xor inc push mov enterw pusha std jns xor popa or push jo adc (bad) (bad) leave test addr16 push fptan subb dec fidiv cmc leave push cwtl hlt push aam pop pop nop and xor xchg adc repnz pop jecxz (bad) xor dec cli jne xor bound je sub xor dec or xlat pop mov or cwtl mov mov jae dec stc inc clc insb inc pop jae pop imul jl sub je test add lret pop mov out xor or xor mov sbb mov adc cmp in cmpsl dec pop xor cli mov sub mov xlat push (bad) ds or adc adc jbe nop xor add or cmp xor cmp fistp sbb scas xor arpl push repnz add mov mov and xor dec clc sub add mov pushf in fsubrl aad xor ret outsb jb push mov xor rorl dec add and iret xor stos hlt fdivs or pushf hlt dec enter int cmp jl pop or sub (bad) imulb push adc xor inc pop xor ja aas cmp pusha lret jmp pop pop stos scas pop in xor hlt mov movsl mov lcall cmp outsb push jne lods push adc mov pop cs jae push loop cmpsb or add mov xchg or cli ret (bad) scas cs mov mov negb add pop add mov call mov sbb inc xorl mov mov mov ds push mov adc or mov divl sbb mov popa xchg mov xor mov mov mov jno andl hlt and out loop mov stos loopne sub lods jne add inc jne fdivrl push cmp xchg mov sti cmpsb test lahf jns int3 sti and push or jae mov aad push or jge and xor dec mov jge test in fistp mov jno test or (bad) xor mov into cmc xor int3 mov xor pop jp sbb (bad) lods fdiv popf loope inc roll test mov pop and adc mov lods repnz pusha dec adc (bad) dec xor cmpsb jge pop and enter mov stos sbb iret mov lock je int jo mov inc sbb xor ret and adc retw je sbb repnz xchg pop xchg imul (bad) xor sub fdivl mov loopne sti nop jno cmp xor leave outsb jae sub bound js loope fmul cs and (bad) scas stc out dec xlat (bad) xor cmc test xor cmpsb daa cmp xor imul sbb jo je test add mov fidivr xor rcrl roll shrb sbb push adc mov pop shr xor cmp loop repz scas cmp or fistp add push or pop cwtl and jne les add fadd fs movsb inc enter xor sbb pusha adc lds negl lods mov daa in push adc mov jb mov into in push fistl sbb mov mov cmp in mov mov add fcomps push adc mov adcb push sub iret les sbb js fwait mov pop mov dec push pop xor loop in (bad) xor addr16 adc outsb sbb in adc mov lods int3 or pop lea cs out sbb fsts je lcall dec cmp jle fdivrl cmp or mov cmpsb push loopne jae fwait aas sbb aaa mov aam es pop cmpsl inc adc adc mov rcrb (bad) sti mov xor xchg xor test inc (bad) ss sahf push (bad) call mov xchg sbb mov xor rcrb mov dec data16 xor imul mov push inc push rcr out sub cld jnp jmp pusha das sbb xchg mov iret adc lds pop outsb cmp push sub dec sub push (bad) jmp sbb rorb cltd sahf pop shrb iret pop add add sbb adc mov sub (bad) lock sbb sti loop jae mov add xchg adc adc andps xor pop adc ljmp jb pop fwait sbb imul cmp sbb pop aaa lea nop adc jg lret imul fisttp (bad) shrb scas xor cli sub and mov adc mov sbb push cmpsl dec (bad) xor fnstcw mov fwait push out int pop sbb xor inc aas (bad) rorl add jmp std in xlat sbb mov iret popf ficom jge fldt mov inc sbb mov jge jmp repz hlt icebp add lret pop jne jb dec cltd sbb cld outsl jp add fisttp fidiv pop and je lahf movsl fcompl adc lea hlt sbb fdiv hlt cmpsl mov push mov es pop stos pushf xchg jecxz das jmp fisttp mov pop or xor push xorl inc mov ficom scas cmp pop (bad) icebp lret inc xor inc push add mov xor into (bad) add inc push dec xor sub stos test ja or mov mov (bad) jg cmp aaa jnp sub in sbb xchg mov aam aam ret div scas scas adc hlt dec data16 mov std dec pop cmpsb mov insb sub aam or xlat mov dec sti xor (bad) adc mov xchg stos fs movsb cmc icebp or xlat stos or or cmp out jo insb pop dec xor jecxz mov imul es clc fmuls (bad) jb add xor fisubrl test inc sub into addl and cmp mov (bad) js push cli mov jecxz mov cmp sub jmp imul jae hlt in les (bad) or mov or xor (bad) jp stos fisubr movsb xor or shlb jp shl lahf cmpsl xor test mov xor mov cmp repz push add leave xor and pop dec jp add sbb aas sahf ret xor push inc fwait lahf xor push mov gs mov jge sbb cmc stos add in adc jbe icebp test ljmp jnp sbb hlt data16 jmp cmc pop imul mov sbb push ljmp lods push cwtl sub pop movntps jge imull cmc jae loop in aad cmp cmpsl call dec cmp inc hlt std mov and cmpsb lcall xor mov std sub cmc push xor test (bad) or jle mov mov adc cwtl add jl pop mov adc jle add loopne or jno sub adc inc and sbb mov and test (bad) icebp cwtl dec mov add xor lcall sub out lcall jno (bad) sbb mov adc push test daa in fstl fidivr xor mov dec or je or jb pop lcall jae (bad) jno popa sbb inc aad dec mov jo sbb pop repnz mov ret mov and shl pop subl mov mov daa sahf movsb cltd adc call xor adc cld xor bound repz icebp sbb mov jle mov iret lret mov jge xchg repz or cmp xchg popf sub repnz mov out (bad) mov jmp dec decl dec movsb inc sbb xor adc test and je mov cmp loop pop aas push in aas in aam out adc adc sub mov sub or jae rolb ret je gs cli mov (bad) cmc test insl lods cmpsb popf xchg das xor sbb mov addr16 fcoml lods mov mov adc mov in ja push add push movsb mov jle cmp das mov inc cmpsb mov in lret cli stos cmpsl push mov pop sarl cmp out in mov push incb bound or data16 test cmp test add dec popa mov xlat xor (bad) repnz faddp mov jmp popf sbb xchg inc icebp pop aas sub mov push adcl mov jle mov or cmc ret cmp jmp imul xor imul mov enter daa mov lods loop push cmp xor das les adc mov insl fldl mov decb test xchg sub jmp or xchg mov sub jl roll adc ret xor rcr popl insb xchg cmpsl ljmp xor lods adc cmp jl hlt sbb hlt sub add test xor shlb pushl dec add lods jge in movsb xor mov mov imul (bad) xor xchg int3 xor sahf jecxz fdivl iret add test xchg add clc sbbl es mov push add repz cmc rcl xchg pop addr16 cld xchg mov xor mov sbb enter sbb cmp xor cmp clc in incb cmp fcoml out (bad) and add (bad) fcompl jmp inc call cmp pushf lcall xor pop test pminub pop or add push mov xchg in mov dec movsl std (bad) adc adc lea add repnz xor leave out add or cmp leave pop fcmovnu mov add movsl iret jg or sub mov jno fs mov out mov xchg dec xor std ret jp pop and mov mov les dec pop movsl cmp jae jae mov aaa or or xor popf xor shlb sbb cmc lahf loop jmp test xor sub sub mul fwait xchg sti lods pop or lea (bad) lret xor jle rol adc mov add add icebp mov sbb xor push cmp mov xchg push inc jne js mov je insl (bad) pop xor add xchg adc mov lret rcl aad stos lcall mov add xor inc (bad) adc inc movsb xorl or outsb fiaddl es dec mov cli dec (bad) test pop mov pop jp jbe and jecxz pop mov inc push jle push iret and lret mov xchg sub inc xor push lods cs mov or loop sbb psubw stc adc movsb push lds hlt jnp xlat daa loopne daa pop xor ja mov xor movsb push je xor pop test popf adc mov (bad) and fdivrl sub (bad) nop mov lahf xor and push xor cmp repnz dec xor icebp (bad) mov pop push arpl dec cmpsl cmpsb jecxz in rorb inc xor lcall je orb scas adc or jb mov adc out and xor loope,pn cli or or xor clc add mov cmp in (bad) popa pop sub jp push aam lds sub xor mov pop jg or xchg cmp push xor (bad) xor jmp xor (bad) mov (bad) pushl ja lock mov and xor and mov iret xor push push ficoml cltd add cmp add mov int pop imul mov dec inc out and mov cmpl xor mov jo mov mov insl xchg das sbb sub and das xor sbb adc inc pop shlb mov sbb loopne push repz std adc mov mov cli pop lock lds xor cmp cli subb daa fist in adc dec aam sbb imul (bad) pop out lahf lret cmp xchg mov mov pop and pop ret push mov pop mov lea and xlat jmp rorl add ja std jle stos movsb jne jg cld fwait lea mov leave les or into mov add mov cmp xor subl xor faddl push mov dec push push or push rorl ljmp and mov popf pop mov cli pop mov jmp into mov fwait enter mov push mov adc jo in jbe loopne jae call push xor (bad) mov lods or cmp adc rolb in mov stos xor xor inc inc and gs repz mov ljmp dec add data16 scas and push push add in aad int scas xor fwait out mov push push pop sbb cmp push xor rcl cmc sbb cmpsl out mov fmull jns xor out hlt mov stos mov (bad) jb adc jp imul xor xchg push mov cmc es cld fs popa je cld pop add xor jle adc xor mov das jmp int adc jg xchg cmp sti dec jae daa and sbb stc loopne push pop adc jno add sar hlt cwtl stc pop adc sahf mov ja mov and and fimul jbe xor jmp rcrl jge mov xor cmp or lret mov ret ror and jbe dec sub aaa xchg mov sti mov roll sub test mov sub stos stc adc inc push ljmp popa jno sbb test jge icebp jns aad imul pop loopne jmp xor int aaa add jmp imul mov or sbb int fnstcw pusha inc adc or out (bad) jb sti or inc sbb stos ljmp xor and mov xor or mov lret jle setge push dec pop jmp mov jge test jo test mov pop std pop gs adc popa lods push adc mov mov sar stos pop push inc mov fs mov add repnz adc mov sbb adc adc es aas dec push pop add data16 inc add cli sti cs lds and je xor add jb jl repnz popf or pop inc mov and push sbb sar mov incb xor cltd inc or push arpl fsubs inc xchg jne fisttpll sahf lds jbe push jmp and xor xor push (bad) jo xchg push loope dec fdivrs or xor test scas stc mov mov or out push mov cmp xor and call hlt les scas xor xchg inc jno or sbb div pop add xchg cmp xor mov inc mov addr16 scas sbb outsb pop xor insb push lret nop sub (bad) in rorb push and jb int3 add repnz jb stos mov adc xlat test popa repnz mov adc pop pop (bad) dec in push leave ds jns xchg outsl inc aas bound fcmovnu add jecxz mov call outsl push out jmp mov icebp cltd popa mov (bad) lock popf mov or into mov ljmp int3 in pop push adc dec stc dec add pop xor push ds stc dec jno mov repz sbbl inc imul adcl faddl mov ret repz (bad) insl dec add mov cmc pop ret fild idiv mov test cltd jl sub xchg orl push pop iret aam mov pop xor ljmp lahf mov cli push (bad) pop sti push stos pop fildl mov mov jno xchg cmpsb shrl jp les push cmp shrb and jo jl push push (bad) loopne push xor lret scas push lahf sub sbb repz addr16 insl cmp add daa lcall jo add pop xor fcomps xchg and add mov dec (bad) movsl pushf std sub mov and addr16 in int3 pop popf add cltd daa sahf push fdivs or dec mov jnp jb daa movsb jmp movsb shrb aaa xor jecxz xchg and dec lcall sahf adc xchg xor fnstcw andl sbb (bad) xor mov ficomp outsl sbb ret xor (bad) scas sbb or loopne jmp push repz int3 and jne dec xor jb inc dec jg jnp xor xchg inc lds jmp push adc xchg lods popa shrb fisttpll and mov in insl hlt in sbb iret rep shrb mov fiaddl dec push iret xor sbb lds push and das mov jb cmc and fbld adc xchg lcall inc xor (bad) fnsave xchg sub sub dec arpl test xor cmp or adc cld jmp inc sbb sub push jl xchg movsb jg xor cli fldenv mov jp mov rcl (bad) xor sbb push aad xor lods or enter pop imul in ja movsl aam push (bad) xor pusha inc clc repnz or dec imul xor call into cli cmp test rolb jg and stc cmp pop (bad) and ljmp mov mov cmc mov cli fdivrl inc rorb xor outsl scas data16 push stos mov sub gs (bad) mov out (bad) std and xchg or hlt push or test sbb inc cmp sub dec jo out (bad) loop add mov lods push adc stos add lahf mov dec addr16 dec adc cmc xchg and xor push pop jmp hlt sahf repz mov jmp jge mov adc inc mov add (bad) into xlat clc outsb mov push out jns sbb imul js jmp mov stc or xor pop jns loopne (bad) push sbb stos sbb jmp popf negl xchg xor push mov xor sahf xor adc and mov mov outsb xor sbb fmull xor mull dec cli inc cmp inc xor add xlat xchg repz jle fst mov (bad) (bad) mov enter adc movsb sub xor dec cmp imul sub or ja cmp push aad xlat repnz out sub mov insb push data16 in ja xor js jae hlt sbb adc add sbb push xor test js xor mov add cli adc lret xchg jmp daa clc sbb sbb movsb in pop sub hlt cmp jb outsl pop sub jo lock xor dec pop jmp mov popa mov inc dec or push mov nop add push arpl jno loop hlt cmp aaa outsb repz mov xor shrd sahf ja mov clc fldcw jns gs pop dec jno mov adc imul push aam test push clc xor mov (bad) cmc hlt xor fisubr or loope pop jb js mov pop (bad) repnz test aas cld sub add je sbb cld jae adc and repz dec (bad) ds adc push pop sub ds clc push or sub mov pop sbb jae adc dec sub fbld xor sbb inc xor and pop xor add pop (bad) repz push lods (bad) bound xor adc mov xor jle cmp movsl xchg repz rcl cmp xor test sub push jno out clc cld lds stc jne fs xor dec jmp push enter lret and movsl sarb mov std addb int imul add xor lods in test repz mov push je push ljmp push aad inc xor (bad) mov leave and sub fmull mov xor out mov xor dec pop add mov push mov add adc jmp loop inc and mov shrl xor and push push pushl and jp mov ja jb mov adc or cmp or or pop aas sbb adc sub ljmp lret mov outsl and sub (bad) mov push and icebp jmp ret sahf jp loope mov aas ret aam nop sahf mov push inc or pop add loopne ljmp repnz xchg adc cli sub test movsb mov test out or test xor pop push inc adc inc int3 xor pop mov adc rcrb (bad) mov lahf imul mov jge hlt shrb cld test iret (bad) xchg mov cli pusha cmp fbld xchg scas adc fs fadd xor cltd les xor pushf pop and sub mov pop adc aad jp jns sub pop jge adc mov push mov (bad) mov xor push cli and mov sar xor mov mov mov xlat daa mov push jl dec or xor cld (bad) pop cmp sub pop inc jae ficom xor lds mov xor pop jb cli sub lret mov jg clc hlt cld call out sbb adc inc fs sti hlt js outsw cld test pusha mov out xor enter mov into out out xor xchg cs xor orb mov jle sbb lock ds js data16 adc test cmc cwtl cltd xor and dec cli leave mov jp ljmp fcompl adc aam sbb hlt inc test mov adc adc pop fistpll ss jne cld lea mov push das (bad) jno sub push movsb xor pusha pop push sbb sarl test fidiv jmp ss dec xchg and fidivrl push sbb sub cltd scas inc decb push js xor jns xor and cli xor push (bad) call adc (bad) je lds jp xor cmp movsl or call lret mov dec push sub inc sbb enter mov jno xchg push nop les or je add xchg and add negb sub sub mov push inc or push mov in pop xchg pop mov fistpl iret and sbb adc aaa xchg into sbb mov inc xor lcall xchg adc jnp xor add dec mov cmp and fbld add cld mov std xor int cmp cmpb xor stos test dec jae mov enter or sbb sub xchg fsubs xchg mov je xchg or inc dec or jbe xlat mov mov in popf adc imul xchg sub adc lods cmp add jg,pn dec push adc movsb in xor scas dec xor fidiv (bad) mov inc adc fwait push sbb add fnsave push dec mov sbb lods adc ja jp sbb sub sahf repnz daa fbstp rcr fimul pusha int scas fs push mov and mov sub jnp xor mov mov inc and repnz cs int3 xor xor xor jnp jo adc sbb outsb push cmc icebp pop sbb jno negb xchg xchg or and push jo sbb dec mov dec lahf mov rorb push cld pop leave ss movsb and test xchg test inc hlt and jne roll jns test lods push decb insb mov popa mov jmp or movsl lods push lds stc pop out lods fisubl ljmp aam dec inc dec sbbl inc imul add xor and jmp push clc insl adc mov adc insl push push xor int xchg imul jae push add adc xchg push xor mov sahf push add jb das jne mov dec or mov inc ss inc adc stos xor pop sbb sub out inc xor nop in xor (bad) mov or xor or jno adc das rcr add imul ss jno push adc mov and jle pop pop xorb push sti ja jae push xor sahf xor les sbb xor call std mov fwait (bad) vmovdqa mov leave push mov mov std mov aas cmp push xchg es mov into test add pusha (bad) aad in mov movsl fist or adc dec inc jle orl sbb shrb jbe dec mov dec adc sbb add xchg es push int js add jmp dec jp cld fsubs dec add jae sbb call (bad) int3 out cltd maskmovq notl (bad) mov push mov hlt xchg sbb outsb hlt ja mov lret and clc add fmuls pop jnp imul lock gs or (bad) jb xor imul push mov loopne xchg js sub je dec ret mov dec push (bad) push sub ret movsb nop out sbb (bad) scas stc negb sub shrl ret adc repz mov popf into sub out in mov test sar push sbb outsl je es adc in jecxz cli pushf test dec mov mov je inc addr16 cwtl dec adc movsl xor jmp sub sub ret sbb xchg push and mov mov add daa and jno cwtl cmp cmp pusha jl add dec pop rcr rorb xor sbb mov lods mov dec daa or jne popa mov sbb mov sar enter pop sbb or in test fisttpl add jge (bad) std (bad) repz adc jb xchg insb ljmp push int push gs dec xor (bad) sahf jge inc adc pushf push movsl das and adc dec lahf pop xor cmp cmp xchg and jle xor mov mov lods lock enter stos dec jb jmp les (bad) pop pop fiaddl out cmpsl lret dec jno mov sti cli rcrb mov cs and inc jno dec adc notb mov les cmc test rcrb mov push inc sarb ja (bad) jecxz jecxz cmp push hlt add ret (bad) push dec jp pushf movsl add jmp loop xor jb pop cld mov popa inc cli ds xor repnz jecxz pop test (bad) mov jl outsl jnp gs jbe jmp dec and in adc xor (bad) sahf ret call sub jmp and sbb mov add adc add mov add inc cmp test sbb scas pop je daa fidivl xor sbb dec sbbl sarb sbb or subl loope sbb xor aad push mov pusha cltd loopne jmp push add xor mov add ret in push cmp std pop notb xchg in outsb cli inc cld mov cmpsb cmc push lcall in (bad) int mov sub cmc mov xor test jmp pop dec add sbb dec xor outsb stos (bad) xor pop into xor pop mov sub les xchg push data16 (bad) cs adc movsl fcoml xor xchg sbbl jmp and repnz and divl mov sti je sarb inc rcrb hlt sti mov pop and mov xor mov jno sub or add pop cwtl jne arpl lret popa (bad) (bad) je roll xchg jmp xor and xlat xchg xor and leave std mov sahf cmpsb std out ret cld lea xor lods stc adc insb jno mov jecxz cltd add lds andb push jb cli xor repnz jno dec sub (bad) push adc sbb sub cld mov lods in outsb sbb adc inc inc or ss ficompl aad (bad) xor imul jecxz scas leave adc out cmc fsubl or jmp sbb hlt pop xchg push insl mov imul sub mov sti xchg inc xor mov mov aam hlt popf jl movsb loope sub inc jbe iret cld inc push xor lods mov xlat ffreep mov mov or icebp xchg shlb dec adc add mov sahf mov xor inc and sbb xchg (bad) (bad) lret and add xchg repz inc sbb push xor xchg shll xchg repz lds scas xor jecxz es mov subb lock or pop jnp rclb xor cmpsl mov and sub ds sarb pop adc sbb xor aas jae lods clc (bad) hlt fisub popf test call or or jno popa adc mov repnz loopne js adc xchg cmp rcll mov icebp mov cmp mov rolb test mov stos and xchg xor imul sbb mov loop sub imul xchg ljmp adc sarb cltd cltd jae pop jmp dec addr16 jl hlt pop ljmp xor sbb add inc jmp xor movl push xor cmp mov xor push jne push bound jge xor shll insb jl cli add std imul jge daa adc addl loopne dec jno fstps or adc add (bad) and lods mov cmpsl add mov push xor rorl inc xor inc repnz xor pop or out xorl push clc sub rcrb sarl out arpl lds xchg ret mov lock repz mov sub addr16 mov bound jae ds cmpsl push adc in jge je (bad) mov inc add out lret and inc add cmp repnz dec (bad) dec cmc mov sub aaa xor xchg or ds stos jle sbb sarb sti cwtl aaa cmpsl push scas mov xchg ds dec sub cmp jg inc inc mov js cwtl nop xor test movsb add add (bad) clc nopl pop hlt jae stc ljmp (bad) push lcall insb xchg icebp cmc xor rorb push outsl pushf xor (bad) adc insb xor xchg ljmp sub and dec gs and jle hlt bound sbb jp cltd in dec cmp jg jecxz xchg sbb inc cmpsb arpl mov xchg pusha adc jp adc shrl repz fstpl int ret mov cli push daa mov ficompl xor jl or push ds push pop jge push xor out cmpsl addr16 sbb pop (bad) repnz arpl sbb fimull movsb mov add jmp pop nop or adc repz xlat arpl in cld fnstenv jb jl jle ja inc ljmp mov mov jnp dec cmc dec or xor dec imul mov jae lcall cmpsb xchg mov in and sbb xchg out in xor stos sahf pop inc mov pop inc test adcl push xchg je xlat and int3 and sbb lret mov push add cmp or mov xor (bad) dec cmpsl sub nop sbb xor hlt movsb adc add sbbl dec adc jno stos nop and pop add mov mov leave int and xorl mov xor sti pop clc pop inc test jno or cs icebp test lods xor pop pop repz xor push fwait stos pop adc idiv outsb and repz jns fiaddl inc imul push pop jle arpl out data16 cld js pop dec mov inc xor or dec cmp sub mov stos add push pop dec jbe hlt add xchg add into adc fmuls xor sub push leave jno jmp arpl scas ja push and test sbb dec cmp bound enter ds out dec mov rep mov cltd hlt (bad) jmp dec sub mov sqrtps sbb jne cmp push les fldenv stos out clc fdivs xchg push mov cmp xor mov xchg icebp std lods cmp fs or xchg stos lcall dec fnstsw (bad) fild xchg dec inc sub sbb cmp pop mov xchg sub inc adc (bad) (bad) enter cs sbb jg loop test jo xor addl adc fucom and sub and sub sub popaw xor jb xor mov mov adc inc and or sub mov inc inc or cmpsb ds scas or jb push jecxz loop cmp test fwait jmp and (bad) adc cmpsb sbb sub imul icebp mov dec xchg les scas sub clc rclb hlt add xchg sub dec jge jo adc jns div push shlb adc and inc cltd xor aaa mov add or push jae and cli scas cs jno xchg in mov fbstp mov jb pushf pusha dec sub in loop sub lret mov push dec mov pop push dec push cmp mov imul xor addb adc cmp xchg ja inc mov jno push xor xchg movsl fwait cli xorb mov mov sub pop loop add rolb aas test pop mov int out jb popa dec pop sbb lea aam sbb xor sbb nop and sub adc lock (bad) xor cmp out fcoml sbb jl (bad) shl aam xlat mov shr ja and in test xchg xchg mov jae mov push xor cs mov std shlb xchg int3 mov int shrl icebp push push xor fistp pop std fwait js xor movsl push inc xor ja pushaw jns jno call xor into mov cmpl nop movsb push lock xor aaa push cmpsb push (bad) pop loop fstl push adc and mov les (bad) mov and lcall jns xor gs xchg mov ja sub leave popa mov push outsb popf xchg sahf mov inc mov scas sar fnstcw hlt sub ret mov sbbl jae adc pop jno lret inc xchg js (bad) je sub cmc cli xchg inc xchg test mov sbb jle mov sub subb jnp xor or cmc sbb sbb cmpsb jmp jp fcom mov adc xor mov xchg cmc rorl xor and sahf push jns xor inc es mov mov ret arpl xchg inc (bad) push mov pop sub in or loope sti inc loopne xchg (bad) int cld or fidivl mov (bad) xor sub insb xor mov lods das pop push xor aad lcall xchg les aam add mov xor push pop add mov je inc movsb std and es jno sahf ret (bad) scas xor xlat (bad) mov xor fst cwtl clc xor out es push ds add xchg test adc addr16 lds xor aaa sbb jmp mov mov xor scas and lds sbb xor and repz mov clc xor or (bad) ds xchg aas add fsubrs xlat pop insl mov and add pop mov scas xor adcb push xor jl aaa jb push cmc clc or jge jne mov cmpsl fmull push daa das hlt and add dec mov xlat push and je,pt cli mov test xor jnp sub pop out dec cmp out push sub cli xor mov mov adc ficompl sub cltd je sbb hlt adc (bad) push pop fisubrl cli cmp or xor xor bound (bad) xor and jge or adc jle jmp les add (bad) mov jb or sbb ss adc ret in pop std add dec sbb lahf int dec cmpsb in call loop test pop inc (bad) sbb mov enter xchg psrld ljmp cs mov (bad) icebp mov in adc lods (bad) movsb out imul ja mov popf mov jns cmpl xor je loope in cmc test sub jl repnz movsb dec aam sub jo or bound lcall rorb or push add mov cmpsb adc dec outsb inc xor jae xor rcrb pop mov cmp add clc imul dec cmpsl cmp inc out pop mov in sahf divl lods popa sbb mov aaa or mov lods mov add pop adc dec xor stos sbb je repz mov rcl and push push lods stos scas jp lret and sbb cs push jne sti in dec xor push cld hlt xchg aam xchg test and sub das pop push movsl xchg (bad) jg adc xor mov jmp data16 sbb pusha mov iret movsl pop aam arpl stos xor cmp lahf dec dec or push add lods jle push xlat repz inc mov sahf mov sbb ficoml xchg mov mov sub mov push and dec (bad) idivl fcmovu stos jnp or orl cs outsb repz fwait and mulb jns cmp lret (bad) in movsl and and push cli test out xchg sbb xchg imul xor (bad) xor jo jns or jg insl mov mov and aas add mov fwait sub out imul cmp scas sbb dec ss pop pop adc (bad) adc pop or jg lahf xlat (bad) cmc add sub adc (bad) rcrb pop fs pop out (bad) dec hlt ret inc sbb insl or xchg inc daa dec xor add add js xor pushf and ja imul mov popa xor sub fwait int rcrb mov loopne js xor and mov into pop jmp out adc hlt adc mov lcall hlt push inc dec push ds xor fstl xchg xor je cmp std mov xor icebp push imul std and xor ret fnop andb lea hlt stos addr16 cmp jns mov je sbb mov xor std hlt pop das ljmp sbb stos adc or add push dec stc (bad) cmp gs xchg repz pop sbb clc adc xor dec mov mov adc xchg idivl hlt fwait mov mov imul sbb jmp jl and outsb xor or jmp lods pop aam (bad) rolb ljmp or lcall add gs stos mov sub jmp lcall xchg repz xchg mov jnp jb xor dec hlt mov xor mov movsl xor push cmp std icebp jbe js xor add jns jg mov pop add gs rep xor cmpsb (bad) daa lods push stc inc cmovno repnz push js adc xor xchg xor lcall imul push jbe insb xchg sbb or xchg jnp ss push xor mov inc cld push insb jecxz push mov adc and inc cld iret pusha and fs ja pop xlat adc xlat sbb xor jmp xor scas cmp and add mov push push cmp mov insl or movsb cmp rcrl mov decb mov clc jb js mov mov clc cld xor mov daa mov mov push imul cmpsb mov imul (bad) jns dec dec lret pusha inc pop mov add jb (bad) push idivb xor and dec (bad) lcall cld decb daa mov xchg mov pusha data16 mov xor add mov lahf sti cmp xchg ret xor pop stc xchg mov xchg push pushf popf push xor andb sbb push mov sahf push (bad) (bad) call aam dec (bad) call jge sbb and mov popf dec push mov (bad) outsb add adc test jae in lods push push sbb sbb jae mov call fbstp xorb adc movsl xor nop roll xor cmp mov int3 scas jg mov sbb add lods push xchg add mov fldcw je inc scas sub outsb lods add out jno xchg loop movsb cld push mov fs imul push jb mov and jae pop inc inc sbb imul pop lock jne sub repz pop or xor and (bad) lea cmpsl ret mov jnp jg xor out mov push inc dec pop xor mov or outsl adc xor mov add or mov xchg push int mov and cli sub or fucomp gs adc test fldenv adc clc call cmpsb mov mov adc imul fist sarb jl aas jp cmp inc add or mov movsb es imul movsb nop fnop rorl mov inc (bad) xor adc rcrb hlt daa rcl lods aas in inc stos cmp adc xchg mov sub bound addr16 adc hlt aaa std decl adc (bad) mov sbb sub sbb out cmc push mov les in mov addl ljmp cmpsl repnz mov lret ret pop or cmp xchg clc lock daa push movsl jl dec into mov lock dec std (bad) xor in nop mov lods or mov jb adc fidivl inc mov fmuls jge popa sbb popf scas popa cmpsl push fsubp mov sub repnz push adc out repnz mov pcmpeqb enter inc inc popa fimull push xor sub out push jae imul aaa xchg inc cmc sahf jl jae mov dec and push and iret xorl xor outsb cwtl sbb xor es sub mov jg cmc subl mov jb or cmpsb push adc xor mov out pusha cmc sub mov roll xor in imul xchg fsts cmc mov ret lds mov outsb xlat xchg or mov mov push xor test dec xor insb pop test jnp mov rcl (bad) sti xchg jae jge scas xor sbb sub ljmp repz mov test stc imul push cmc inc js addr16 mov les jo mov sbb lcall or mov insb ret or cwtl mov xor nop je lret inc adc sub insb sub fdivs jae je xor lods mov mov sbb mov mov stos sub fadd popa stc adc jae mov add repz mov cmc movsb jp mov (bad) jge xchg xchg (bad) sbb mov lds rcll fcomi in or xor mov sbb adc mov fwait xchg sub fld pop push xchg bound xor cmp xor arpl mov aam pop jae push int3 lds jns xor mov cmp xor out or imul xchg xchg xor nop mov aas outsb adc fldcw repnz (bad) xchg sbb outsb jns add lds mov enter adc test sahf lods mov xor xor mov arpl das in mov and lret adc xor out or roll or jno std sbb and add stc (bad) lret repnz popf dec cmp sbb mov sbb mov or push mov mov add xor lret jo cmp and lahf repnz jg psrld fnop pop mov or mov mov xchg mov or push dec in adc and and xchg ja mov or push and in xor fstps mov aad adc (bad) push jp cwtl cmp mov sbb (bad) or inc mov pop (bad) loopne mov gs xor push sbb test inc mov jb and inc cmp mov lret inc xor push sub clc rcll mov mov or imul ds dec mov insl outsl and (bad) fisttp jecxz dec (bad) sar jmp stc mov (bad) scas jle sahf jl adc cli cmp inc sub mov dec popf push jne into mov pop and out jns (bad) jno shl cmp pop cmp and xor dec fwait repnz dec and mov xchg cmc je mov sahf jmp mov aam cli leave dec dec and sarb xlat push xchg ss lock jle xor fstpl pop scas jmp jp xchg hlt adc hlt fidiv push mov mov sbb and leave mov xchg jl je jno out adc jle xor add repnz fisttpl xlat sub add loopne addl mov cmp divb xor sbb inc inc imul cmpsl sahf jmp std idivb insb ja (bad) popa lea push add mov insl movb adc mov mov gs mov sub push jo sbb cmp imul add mov out fstps add xchg movsl jge aaa push cmp cmp imul std adc jb aas (bad) ss fwait popa mov sbb dec out out cmpsb popa movsb adc xor push imul adc iret sbb sarb imul and notb scas clc push je sbb jae stos lods add mov repnz mov mov cmp arpl dec (bad) mov jg in sbb jnp dec sbb enter cmpsl and push ja mov inc pop xlat or cmp das (bad) and xor cwtl (bad) push mov and dec adc bound fnsave adc pop je xor scas push dec cmp mov adc xor mov cmpl sub mov aaa jnp out data16 mov xchg xchg stc jae mov dec jle inc xchg mov cmpsb imul adc mov js andl daa insb insl and hlt mov mov ret cld test mov fistp mov push add jb je cmpsl sub fsub popa lods cmp xchg xor xor cmp mov ljmp repnz mov (bad) cmp out test nop jge jb sub push mov inc xor mov and (bad) imul repnz sti jle jmp mov shrl add sbb jp add mov lock mov (bad) xor cwtl add sub outsb add popa jnp dec pop jge xor out frstor mov jmp jae (bad) cmp das imul dec (bad) mov ljmp fiadd movsb adc inc jp jge dec jo dec adc xor sbb push xor jae das or mov cltd mov sub loope xorb ds stos pop test nop jo cmp cmpsb mov ss pop je or mov xchg pop inc cmp xor jae and xor lcall mov xor cmp jl movsl or xchg xor mov scas or dec push movsb push test ja xor xor mov jmp cmpsl jge sub mov clc xor lods lret arpl or movsl or xor sub pop sbb and inc adc movsb jae cwtl push arpl xor inc gs sbb insb mov add subb or paddusw xor repnz push adc int3 lds call jns and test int mov inc xor sarb mov out and lcall outsb adc gs mov xchg xlat or je xor xchg clc hlt pmulhuw outsb (bad) in adc cmpsb mov dec inc (bad) fisubl into adc (bad) mov cld rolb sub push scas mov addr16 mov mov push and xor loopne sar jmp inc daa fidivr mov or jge (bad) out xor push dec movsl push xor std sub in repnz mov push cli pop mov xor out push cmp push inc hlt movsb insl or xor pop cld rcr xor (bad) adc rcrb jmp hlt jle fcomip xchg and ljmp pop movsl and pop xor (bad) ja ss das push adc daa xchg xor push out es cmp or das xchg xor sub (bad) adc xor jnp sbb jno out ficompl outsb cld jp jae push jnp (bad) sub popa (bad) sahf out and mov divb jge pusha (bad) adc fcompl mov lcall daa add fildl mov shrb psubsb gs xor xor test sub roll adc add xor pop icebp xor jb enter push jae fsubr sub repz fs jp push jmp xor mov sbb dec push stc adc hlt xor or mov hlt push mov add fcomip scas cld orl (bad) mov dec dec xchg xor mov cmp jnp cs ja pop ds xor adc and fistl sub adc adc inc mov cli mov js scas pop or xchg and mov xor rclb sub pop mov mov mov pop mov enter xor jmp inc mov xor scas or hlt pushf fisttpll les das jb cmp add and pop or out mov or pop (bad) xor cmpsl sub mov xchg xor sbb fwait xor push xor stos xor icebp fs xor aaa pop cmp xor mov outsl mov dec cmc jns xchg xor fwait pop sbb in out dec (bad) xor movsl loop jo addl (bad) stc push std xchg dec loope and in xchg popa leave fstp push cli (bad) repz lret hlt lds jne int and pop xchg sbb mov sbb jl in jo jp sar mov jmp cmp lods call sbb push push jmp push cmp mov enter mov loop out adcl fmull pop sub hlt mov inc insl adc sub insl adc jle sbb das jno xchg dec inc sub cmpsb test sbb adc leave std mov in dec dec sub je xorb aam cmp or aas hlt add (bad) stos add repz cli mov icebp (bad) adc shrb test fistpl and aas pop mov add lret mov out shrb sub repnz adc inc mov push and stos imul (bad) adc xchg test mov mov sub push imul daa mov mov xchg pusha ljmp iret aad enter sar lahf jmp fmull shlb mov call dec push gs fdivl push sahf int3 and jmp into or sbb cmc or out sub xor and scas test mov scas (bad) jecxz leave icebp movsb cmp (bad) sbb and inc jle mov add aam pop (bad) repz ss imulb dec addr16 daa hlt jge mov mov mov dec std ds dec (bad) je pop jae sbb shr mov xor dec inc add lock cmp and and ud1 lods stc sub xchg leave hlt add jno add lcall and cmp cli cld repnz and xor sub (bad) in outsl fsubp adc dec mov test sbb enter mov std dec sbb andb sub mov das (bad) xor push int push test dec add cs and xor inc loope add xchg jl xor loop mov xor in mov hlt mov (bad) xor mov mov fsubrs mov std sub cmp lcall mov xor mov lock mov pop sbb in fadd mov jecxz notb iret fld pop cs xor mov jle decl daa jp jb aas adc orl sahf loop test int3 push xchg loop sbb add sub inc repnz movsb in cmp and sub fcoml loop mov popf jns das int repnz and sbb xlat loope push test test fnstsw cli jg xchg jo cltd add pcmpeqb jnp pushl and xor cmp push cmp pop inc jne mov push add pop jle (bad) dec iret xor jp mov and ret cmp insb out and cwtl mov push imul leave adc push push test or jge mov sbb popf mov ficoml imul sub hlt xchg imul dec jno jp repz jg dec dec stos repnz aas add adc sarb lea adc ds pop or push jg jmp aad add cmp scas jl movsl pop push adc jl std jecxz adc sub cmc imul push div xor aad adc hlt sbb arpl sub or push aaa aas mov out cmp push or mov cwtl out and outsl push xlat into nop jne jle iret sub mov movsl pop je repnz xor clc cmp (bad) sub add mov sbb inc cwtl adc sub and sub test outsl inc out adc or push pop inc (bad) adc mov stos sub je aaa jg add jge je es and mov or test xor sti dec cld dec cld cmpsl mov mov enter xor xchg repnz sbb popa add jp es cmp mov jae,pn xor in lods pop dec popf cld shl sti nop xor sub into sbb (bad) pushf ficoml iret mov adc rorl inc cmp mov jae xor push pop inc int jge out push sub imul inc push icebp jge (bad) xor cli stc mov movsl push jno jge mov sub push test push std jmp sub cmp jo push in movsb clc insl daa out push icebp jb (bad) mov adc add add les inc cmpsl jnp push rcrb mov add aad cmpsl or xor cli fmuls rclb or mov jecxz shrb sub sub js movsl mov sbb js adc cmp repnz adc push pusha mov iret adc arpl xor mov cmc dec ss test jno sbb sbb nop jmp gs loope outsl popa leave dec xor sub (bad) xor pop js mov cmpb leave test hlt cli sarl rorl jle jp xchg xor outsl adc sub jp xor lock fcmovnbe mov or mov pop ja sarl aam inc mov sbb xor (bad) sub sub cli xchg push cmp cmc incb jno movsl mov jno jle push insl scas and xor push jno jg nop jp adc aaa mov cli imul pushf xor mov mov push jle lods aam jae mov pop jno popa cmpsl xor stc xchg clc inc ss sub jg jns stos mov cltd (bad) lock int inc jae insl jl repz loopne or adc inc pushf mov adc repnz std mov pop cmpsl adc andl add arpl mov jae or into jbe pop (bad) or xor dec mov pop je test testb jmp nop out sub ss inc cmpsl (bad) icebp pop cld test out inc notb (bad) jae cmp cmp inc and aad les test cmp jmp lret pop outsb xor push push pop sub add push lcall mov xor or or ss or inc mov jo push gs push push repz dec aam mov add out (bad) dec nop inc nop std jne out lea shrb or jo xchg (bad) hlt arpl pop pop sbbl inc cli in cltd xor xor lret mov dec and adc test lret fbstp or adc lcall mov lahf pop je in lods and in cmp negl sbbl ror dec xor clc jo jl xchg pop dec cmp push inc mov scas repnz sub jno mov push je,pt inc mov int3 sbb xchg lret sub push add aam jmp lock or pop lret in insw movb xor mov sbb mov cmp test insb mov clc movsl decb cmpsb and shlb aad aam add fsts push add sub hlt divb and mov xor pop mov (bad) mov and adc mov mov cmpsl ret mov pusha dec jo shll push inc jp shll dec sbb adc sti sub mov push call push push and pop mov fildll mov xchg imul sbb mov dec xchg vshufps lret mov add and outsb cli dec popa mov xorl lcall jbe mov mov fnstenv add cmpsb xorl cmp (bad) mov into (bad) gs jno mov and or call mov (bad) cld mov repz enter or subb mov in jns add imul cmp push pop rcrl adc mov mov imul lret jo mov mov negl sbb rclb test lcall mov leave add inc xlat jg nop push jns or addr16 (bad) jmp mov cmp jno insb repnz and add dec mov pop hlt jmp mov sbb insb lret inc scas and sub movsl xchg (bad) shrl mov or push pop ret push mov sbb xor fsubrs test push add push push mov test jl loop jecxz mov int3 enter push movsb (bad) and add test sbb dec test cld adc cltd enter fnstsw inc sub and mov cmp pop adc std cmp addr16 ret xor cli fmuls cld push out lods xchg and lret xor outsb je sti jns imul mov das add adc and dec xchg fcmove xorl lret sub push lods into pop mov mov mov hlt cmpsl ljmp sti xor insl pop cltd jb inc sub pop test movsl add iret shrb lods (bad) hlt mov test enter xor ltr sbb lret mov inc ja sbb xchg adc xor sbb mov sub data16 push xor aad xor scas mov jecxz nop dec leave daa sbb (bad) mov fnsave dec mov add es and inc xor lds fidivl stos out lods adc xchg mov pop mov mov cltd xchg stos xor into stos pop mov sti ds rcl pop add xor test add jo popf (bad) and or jns ja cmp bound xorl jo dec pop mov or mov push leave dec imul xor xor test xchg push clc (bad) jnp je pop cld push xchg popa fs in push les inc (bad) fstps (bad) mov fcomip test sub or jne loop inc repz xor push sub push add xchg or repnz jb jbe in clc push pushf fnstsw inc and and aam insb sub add pusha stos outsb inc xor jae dec bound (bad) xchg mov pop inc and cwtl xorl pop dec test lock ss sbb in jno add xor cwtl je js ljmp pop lock je push jb sbb daa cmpsb inc push adc inc or jp test sub mov lods xlat jae les hlt loope jp jg js mov addr16 cmpsb cld mov mov jne mov cmp jg mov mov add pop cli stos addr16 add subl fildll jne inc clc imull inc mov flds (bad) jmp cld sub outsb dec pop mov ja out sbb push enter addl hlt mov xchg repnz mov sub and sub jle or xor xor xchg add pop push add out scas movsl mov and gs mov lret inc fbstp inc sbb gs or cmp or dec adc sbb xchg dec pcmpgtb test leave les adc xchg push and xchg xor mov xchg lahf pop out cmp mov sbb mov jb sub cld jle cmp enter push fcoml mov adc lds pusha xchg pop push std xchg xor xorl hlt jae out lahf push or cltd ds xchg hlt xchg je loopne (bad) jae sbb mov adc xorl repnz insl inc sub pop xor add mov adc push push cmc push jne add dec adc jne jbe mov out and pop nop imul call test xor add rorl hlt sub pop sub pop sub push push push leave nop in outsl mov jae mov cmp jns stc sub int3 xchg pushf test mov pop lcall ret out or cmpsb pop and cld mov cwtl outsb pop xor cmp or xor sub sbb xchg sbb jno (bad) sbb cmp pop scas cld or or arpl inc pop adc mov (bad) inc imul sbb push dec mov or and and sub mov mov loop jno and push mov sahf xor loopne mov jg mov mov mov xor cmpsb mov or clc enter in mov mov fidivl lret mov ret sub pop inc add and cld outsb jge loopne push out test sbbb jo add xor js rolb mov inc jns dec imul pushf xor adc xlat jg pusha adc mov mov mov faddl jl ret mov push nop gs inc dec das smsw shld or retw adc push ja adc std jg imul push ljmp dec dec dec bound pop loopne add ja cs fdivrs hlt sbb mov pop sti jle imul loope pop gs loop (bad) jmp cmp mov fstps lcall aas (bad) shlb (bad) (bad) xor lods and sub dec push int fwait sarl mov (bad) push fstpl adc movsb test mov sbbb push dec push or or mov into fwait movsl pop std pop fidivrl sbb or xchg jecxz pop fsubp in enter adc (bad) xor inc sahf mov ret pushf pusha jmp insb (bad) mov (bad) shlb push pop or mov and aas daa sbb and idiv push cmp insb sbb jg xor in jg mov and adc pop (bad) hlt cmp mov (bad) fbstp repnz sub fdivl lds push sub movsl pop popa add imul sarl mov xchg hlt cmp adc gs cmp jle pop mov ret into mov pop repnz sbb push in sbb jns iret mov pop dec and pop mov mov sub push push xor mov inc xchg jmp or in jmp xlat xor mov mov inc xchg and mov pop xor insb ds repnz stc notb push (bad) mov shl mov mov repz ret jne adc movsb int or popf jb pop ds push push test lcall sbb enter insl mov jb shlb jno xchg pop xor hlt jmp pop sbb or sbb mov jle outsl in inc add sbb add mull xchg jge insl xor dec push or mov xchg add cli pushaw jno movsb sub fiadd adc xorl jb mov shll int cli mov movsl ljmp test in jl mov sahf icebp mov sub dec loopne push clc xor and mov and xchg xchg aad add popa std sub and int addl (bad) mov stc mov xchg cmp xor mov js mov jg push fnsave push pop sarl add mov pop mov test mov sbb (bad) pop adc jne mov outsb gs mov (bad) mov (bad) xchg les jno sbb stos std sar and inc add sub inc pusha (bad) sbb jl mov adc push bound mov ret shrl push pop xchg js and fwait mov mov mov gs mov mov cmpsl mov mov xchg xchg fs in lods xor dec outsb push rorl sub scas cwtl xchg push xchg pop scas repz xor into je hlt (bad) movsl ds sbb sbb jb das cmpsb jne sub mov push xor aad popf push je inc cmp cld xor test outsl and push xor or int xchg xor cmp stc (bad) cld cmp jl jge scas fldt aad negb xchg cli jb (bad) mov clc mov (bad) jb lcall xlat pop (bad) cli push cli fisubl loopne test xor xor cmp fs imul lds bound push sbb stc imul xorl or pop xor imul adc or jg xor inc cmp aad dec cmp fisttpl test add gs mov sbb (bad) and ds xor enter jb xor lods shrb xor jo rcl je mov or mov cli cltd dec xor fcoms cmp bound outsl pop xchg icebp leave fdivrs sub mov adc pop je adc push xor lret jb sub dec lods sbb iret jns mov jecxz mov add mov jle sbb dec add adc push add insl pop push mov hlt loopne or stos mov popa pop bnd lret jae and out mov pop fistpll xor orl push repz sahf lret aas (bad) jmp xor nop or pop mov (bad) jmp xchg repz dec mov lds movsl cmp jbe mov pop inc add jno xor outsl scas lret xchg outsb inc lock and inc ljmp (bad) jp scas mov mov imul je mov stc nop xor pop adc or jo movsl sbb xor mov mov xor mov inc ss inc movl hlt xor mov and and jne jecxz cmp cltd iret pop arpl test ror hlt maskmovq cltd test sub xor aam movsb call dec add (bad) ficompl xor lock sbb cmpsb stos add xor (bad) popf lock jno int3 mov data16 push je mov xchg inc xor (bad) xor scas inc push cli hlt dec xor jle ret xor pop xchg test pop adc xor jmp adc inc mov sub in xor fistp sbb aam fcomp std sub jno (bad) mov xchg xor jb inc sbb aad pop out ja cli fmull cld xchg testl push out out in lods xlat lahf adc mov push std mov adc je sub outsb out push pop insl ja in aam sbb sbb imul addr16 cltd cmpl addr16 outsb repnz pop pushf xor arpl push inc jge (bad) mov mov xchg sbb fdivrl inc xor in xor sub outsl cmpsl pop push pop push xor and out clc and mov scas ficoml mov rorb pop mov outsb (bad) xor cs sti enter xor icebp mov dec sbb cltd dec insl hlt in movsb sbb (bad) adc sbb pop cmp sbb pop add lods int3 lods popa addr16 mov cs popf fisubl jb out adc mov and test popf sti (bad) mov popa (bad) jb or lea pop mov push and mov jecxz xor dec ja ret pop dec adc repz jecxz cmp into in dec add adc or fisttpll add xchg pop push cmp ja pop pop lea pusha dec packsswb repnz test adc mov stos add std scas shrb xchg movsb xor adc mov cltd pop aam out push and hlt shrb push sbb jge xor sbb repnz pop hlt inc ss jbe jns test inc (bad) cmp imul mov or das adc jne test outsb std xor lds inc pop stc inc packuswb mov cmp cltd push xchg int insb sub aad sub jnp add call lods mov (bad) outsb push je sub pop test sbb fimull sbb cltd add xor call lea (bad) mov push xor cmp out mov push aad cmp mov cs dec rorl aam pop xor xchg adc push shrb xor fbld push cmc sbb sti hlt push xorl sub movsb mov hlt or loope js je mov insl aaa mov sbb lods dec mov cwtl add adc scas xor rcrl fcmovnbe cld lret cmp xchg (bad) out xor test add xor xchg push jmp arpl or mov cli gs lods sahf adc sbbb cmp popf add xor sub pop gs xor mov je ljmp xor rclb mov cltd int or push ret xor mov icebp js insl add xor jecxz or mov xor loope imul xchg xor xor cmpsb hlt mov mov xor cmpsl xlat stc out rclb jg mov dec jae cmpsl push inc aas hlt adc in (bad) xor push cmpsl sbb cli test or mov lahf inc pusha (bad) imul xchg aam (bad) and pop xor sbb add or xor ret (bad) (bad) repz push push jo cmp stc std sbb daa inc cltd xor sti pop mov out sbb imul (bad) sbb sbb jmp sub mov sbb lods or inc add mov mov lahf arpl xor dec xor loopne mov pop mov adc cmc repnz dec shlb adc dec xor insl push pushl dec and sbb jnp sub sub cld jl out enter fcom cmc mov dec jno dec push and stos cmp jge mov iret jne lret pop in pop sbb aaa ljmp inc std dec mov mov xor pop adc pop xor xchg bt lret loop adc add daa adc push mov mov (bad) mov or jae shlb xor imul and les push inc inc (bad) aaa xlat xor ror jl mov fidivl (bad) push dec jnp js fnstenv movsb jg xor mov push xchg jo push and jmp xor add imul push xchg pop dec cmp test loop jae fsubrl xlat sbb out rolb movsl xor pop dec cmp fidiv xor and xor lock inc cli mov dec xor into leave stc jp mov xor imul mov mov cmp scas or cmp pop jnp ljmp pop (bad) xchg mov adc or mov pop mov stos stc bound adc dec clc cmp js and pop movsl adc xor insb int add pushf dec repz mov out insb jge scas repnz (bad) jb fnstsw jmp test jb xchg jno xor inc jae dec daa fwait (bad) xor ja dec popa mov jmp push mov adc xor insb sub sti xor mov repnz lahf pop jae insl clc pop popa adc hlt dec xchg sarb xchg jbe pusha xor mov xchg out xchg sahf rep ficom test xor adc (bad) adc adc data16 and cmp sti sub enter sub xlat xor push push xchg int3 dec or je mov sbb jno in mov mov xor adc push inc cmp call dec xor mul or xor test stos fisub adc push sub into out clc mov adc add fwait bound inc aam sub clc xchg (bad) jnp jp icebp ja pop outsl sbb and push and add bound pushf pop inc cmpsb stos leave in mov sbb rorb and cmc xchg xor xchg sbbl stc xor xchg sub js push mov mov fstpt adc mov mov lds cmc dec mov lods xor and pop jg sbb (bad) mov sub inc ret or mov sub jle cmp repz and int aaa les aad jecxz out jge loopne rolb sbb pop jle inc inc xor in jo orl sbb and sbb dec push add mov cli imul adc sahf pop loopne xchg xchg ret pop mov jae add xor mov xchg repnz lds shl push das and dec addr16 enter std imull push pop ja cs jae push cli pop pop push xor sub or xor test pop sbb and rolb (bad) popa (bad) jp js leave jmp stos push pmuludq fwait pop (bad) sub pusha int cmpl push ljmp aaa and fwait xor mov insb jecxz fist dec dec xor js in cltd int3 repnz rep xor jp adc fbld les test (bad) sbb pop add in mov jae pusha or incl repz jnp inc pop jp xchg fcoml js add fbld enter add daa push mov fwait aaa fnstenv cmp push cld (bad) sti (bad) rolb xor jnp scas inc dec jo xor test outsb loop mov cmp test push std pop push lret stos insl movsl pop xor xchg inc scas data16 mov cmpsl data16 sub (bad) fldt and mov shlb or mov pusha fcoml jmp into or sbb lds jle mov xor push data16 jl mov popf or (bad) mov mov js add hlt xor lret cld xchg lods repnz jle jp pop test ss add and cmp and dec push into or aas mov out or aaa ljmp xor add andl dec outsb sbb sub and repz data16 add xor xlat mov sub std (bad) jmp jp loopne lds xor enter aaa add mov in adc mov adc cmp fwait pop push add sahf hlt cmpsb ret in in pushf sbb jmp xor or bound fdivrl pop hlt push cmp clc fwait imulb push xor add mov inc lods in xor iret popa into sbb mov mov mov scas (bad) (bad) imul xor add xor paddsw ljmp into jnp in and and dec sub adc (bad) movsb outsl push sahf jno jo bound pop ret sbb popf scas cmp add fld and cs push aaa lcall jae lods mov mov mov add pop xchg mov or xor mov xchg stos clc hlt push es mov repz jnp pop adc add and jae,pn test repz sbb dec adc mov movsl push jl,pt repnz push (bad) out popf jmp lcall sub in jo cli icebp mov jp (bad) or push clc pop sbb nop daa xor out adc lds lods lods pop sub insl push cli pushf js cmp lods dec dec jns ja js mov int xlat mov sub xchg sbb adcb (bad) sbb mov pop adc mov fnsave sub push xchg push sub dec xchg ja jle adc sub sahf xor out sbb repz add xchg mov cmp push jmp and and sub mov mov ficompl insl test jmp sti cmpl cli xor (bad) add iret hlt or push notb imul cli scas iret aam sbb fidivrl mov imul cmpsb pop mov sub cmpsb mov pop repz bound or fwait adc dec cmpsl shrl adc cs adc push mov push out lahf sbb outsb fadd mov stc cmp cmpsb pushf jge and jns add mov xor add and sbb mov in out pop pop sbb mov jmp sub roll mov mov jle stos and (bad) and and bnd mov push fisttpll jg icebp movl cmc lock or cmc gs mov adc jg (bad) repnz cli das sbb test jns mov push or or lds cmpsb mov adc jmp into mov push sbb pop lcall mov xchg dec push (bad) xor mov cmp mov (bad) mov and out sbb pushf jae dec bnd sbb sub sub fsubrs push rolb fucompp and push jp mov push push sub jmp sbb sub enter mov aad lods clc mov sbb and sub push pop dec stos addr16 sbb mov mov in sub inc dec mov iret mov sti inc jns,pt cs lea imul lods mov and inc cmp in std push adc mov das jo lea cli imul fistpll inc cwtl xlat xor gs rclb adc loopne lahf repz jb jmp into xor movsl adc xor xor jno cli (bad) pop push pushf mov enter cmpsb std push adc mov push movl addr16 stos xchg jp cli into jecxz fild sub mov and pop push adc jne xchg sbb rolb xor js aaa popa call in jbe xchg mov test and dec test sub and pop lret mov and rolb lahf mov stos jg sbb inc sub cld pop xor mov (bad) adc mov sub (bad) rorl mov out bnd cld mov xchg inc push lea rolb jecxz fmuls cwtl mov mov add aas test hlt adc shll addr16 call adc jp lcall dec insl cmp mov jl jae aam ss ficomp inc dec (bad) sbb mov fisttp (bad) and loopne or rclb outsb mov lcall and ja popa xchg lods jae loopne jg xchg ret pusha and xchg pop xor dec mov xchg mov lods mov ja sbb push xor adc cmp inc push pusha addr16 or sub mov aam adc jl sub adcl (bad) jo ds lods mov xchg imul cmp rcrb scas loopne xor movsb jae aas sti outsb into and push push xor sub and xchg sbb sub xchg xor les aad dec lds push arpl fcoms clc sbb dec popw jecxz add call jmp int3 sub fs xor inc and insl lds dec adc sbb (bad) cmp xor dec lcall test cmp jg pop mov add lods cs adc out xor inc xchg add int or xor or and stos sbb jne and dec jae in push or add ja stc jle (bad) (bad) adc jbe inc incb xchg popf jno arpl add mov movsb (bad) (bad) mov ss mov or mov repz loop pop xchg pop xor adc xor hlt jne sbb inc adc inc xor jecxz out lods mov hlt (bad) std fidivl int mov push repnz call les lods in lods in fdivrp popf clc xorl cmpsb inc jo cmp mov xor stos nop insl pushf xor std js rcl sbb adc pop push inc iret mov icebp xor xor dec call lea xor jb xor jo pop pandn daa pop test add sbb xor psllw xchg sub adc fnstenv in aaa outsb xor sbb icebp mov xlat push adc and adc jae cmpb mov pushf mov xor push std xor fcompp mov lcall adc sbb pop jnp jmp es jno mov imul orl negb sub inc pop adc mov pop into xchg pop faddp mov jbe (bad) pop div and jb ss test xor mov jno push packssdw sbb jle push cld cmc xor dec into imul cli pop out cmp jp into out or mov imul push jb cli ss jmp loope nop loop dec dec movsl sbb pusha in cli mov xor das adc dec add xchg add cmp sti mov jo pop bound lar pop inc out (bad) xor in lea pop adc sub push sahf adc movsb cmp shrb (bad) das sub jne xor pop mov divb call ja lret stos and sti xor gs add sub mov rcl movsl in jge (bad) mov stc mov ret dec pop mov mov aas and loope inc sbb stos outsl or xor mov data16 or mov nop cs adc js daa xchg inc pop jo lahf ret repz outsb and inc fstps mov sub xor dec iret es pushl sub mov jo jae (bad) sbb hlt lds ja dec sub xor push (bad) cmp adc pop cmp repnz jp out out int xor sbb mov adc daa leave adc xchg mov in xor xor and call (bad) outsb push aas adc mov xchg xchg or sub dec pushf pusha std sar jg pop xor mov xchg outsl xor jmp mov movsb xchg jge test add pushf jmp bnd arpl je rol xor outsl (bad) ss xor xchg inc mov sub imul dec nop mov jp frstpm(287 stc rcr repz aaa sahf sbb add hlt xor dec or xor ljmp push in cld ret hlt mov xchg enter inc out push mov xor or bound xor xchg popa sbb xor jp mov div sub clc mov out or popa pop outsl out sub mov mov (bad) xor adc lahf out sahf int3 lods mov cmpb sbb push or push and jnp mov xor out imul insb ja fxch dec xor dec mov icebp add js xor sbb cld lea mov movsl push mov push das inc dec leave icebp add jmp iret sbb add xor sbb ret (bad) pop hlt test repz adc push mov scas popf lret xchg sub mov jnp jno add cli loope lret mov dec repz pop xchg shrl and dec or (bad) cli outsl xchg adc xchg jg mov mov mov add (bad) cmpsb sbb xor mov div nop xor lcall dec dec jb or out jmp scas mov xor xchg xchg xlat les mov and fisttp mov sbb sbb xor aaa rcr adc cmc daa add cwtl or inc aad test scas adc imul add pop data16 outsb ds push out mov inc add xor (bad) jns outsb addr16 xchg xchg push xor fdivrs add xor fs stos pop hlt lcall sbb int fsubrl scas outsb adc add push add mov sbb mov jg jae hlt add xor xor xor pop sbbb or or lea sysexit or shll or push dec cld sub aam mov gs adc pop dec mov add xor jmp pushf rorl adc mov push pop xor (bad) mov xchg std bound pop jl xor data16 inc or xor push sub repnz dec into test add push in mov xlat fsubrl xor mov sub pop or int3 mov hlt adc jnp clc ret or ljmp fwait cmp cmp or cmp xchg lahf sbb lahf lods and jne std push test ss rol les je movsl in dec fucom out mov pop sbb mov or xor cltd push mov inc icebp mov add xor out sbb arpl cld lods mov xor adc fnsave sbbb std inc push aaa mov xchg jno xor cs sbb xor dec ja out das clc xchg ret dec repz outsl cld jne das iret pop xor jno xor push loopne outsb imul mov test xor pop and ja mov inc cmp jbe jae or adc xor dec add cmp lahf inc cld mov dec pop lds imul (bad) lret push mov cmp xor es adc pop (bad) std xor stos adc ret adc sub lcall inc sub (bad) psraw adcl mov cld jne sub mov cltd xchg gs hlt or jg dec xor sti sub sub enter bound (bad) cmpsb outsl add scas not mov fimul or aas xchg imul mov arpl sti (bad) in inc sub (bad) and mov test rorb xchg cmp mov jmp cmp cmp lods call jbe (bad) fstps bts (bad) cld in sbb jno (bad) jmp ficomp cs dec xor jne insl xor pop sbb out xor lods pop aad xor jecxz dec je leave and les lcall pop dec frstpm(287 stos adc xor sbb or mov cwtl mov aam xor and adc xor jbe addr16 and mov xchg (bad) pop clc jl xchg jnp fcompl je adc sahf mov jle cld add xor pop and pop arpl sarl mov popf cmpsl hlt ficoml xor sub or fsubrp mov dec insb adc jg mov jge bound movsb std pop imul pop xlat pop cmp add hlt sbb or ss xor xchg fcomps repz mov data16 xor jmp in in mov push (bad) call push lds jecxz les pop fmul sub xchg hlt popf inc xor inc (bad) in daa adc pop add popa push pop push sub jae jp js cs mov xor gs bound adc popf jb out outsl adc clc int mov sub rdmsr movsb ja fldcw hlt je les xor jnp jmp jno or jl imul jo loop xchg mov into jmp jnp repnz xor leave inc pop fld and std push add mov mov (bad) mov xchg cs inc jmp cmp sti in pop jne test mov xor jne lahf jbe sbb and scas adc xchg xor imul sub cs stos popa inc push jb jno xchg cmp clc xor shl les (bad) xor test jmp aaa push xchg fmul xor cmc cmpsl ljmp cltd out cmp dec push sti xor dec ret mov push cmpsl xor xchg jbe or push add xchg rorl stos xor pop fwait inc pop stc mov dec push aam in pop sub xor addr16 out (bad) repnz dec fidiv adc dec jp int3 cmp xor stc sti push int3 scas js add jnp mov sbb lahf imul and xor cli inc push aas test inc sarb (bad) int3 sub xlat xor mov sbb ret in out dec sbb mov adc clc jge mov loop mov adc lods or cmpsl cli mov pop xor add sub ds dec mov lea jno hlt (bad) iret rcrl xor lock stc pop lods lea das lea adc mov cwtl aad xor mul jae add sub and push inc loope add add stc pop push lods pop dec mov inc dec xor (bad) (bad) fidivl push incl adc adc inc stc xor add dec jmp cli test xor jecxz xor das loop xor (bad) iret mov dec pop jbe decb jmp je add jp xor ds gs int daa xorb pop sbb gs push hlt std lds fldt loope dec mov sbb adc push cltd pusha mov pop add jo scas hlt mov inc add jne mov rcll inc cld jmp iret cmpsl sub jecxz mov dec and daa notl xor ss movsb push dec xor jg jae sbb repnz adc sub sub and or jmp (bad) mov decb jmp xchg ret sbb mov xchg push sti inc stc mov (bad) out in in mov test fstpt push push (bad) mov addr16 xor inc lret fldl out (bad) iret ret adcb push dec sti in mov out lock dec pop (bad) imul movsl add adc les cmp outsb leave popf adc jecxz scas stos dec imul int3 jno inc mov imul and or xor icebp (bad) out xor aas fbld mov lahf xor sub xchg out test push and lods sti divl jbe call push sub jg arpl imul sub push ja je cmp inc or mov sbb pop fwait and add es fidiv xchg scas mov fisttpll ss movsl mov call mov in movsl pop cli jb int (bad) adc js aad imul mov pushf bound or cmp cli mov push add (bad) ja (bad) repnz mov orl bound leave outsl cmp sbb sti sbb fisttpll les jecxz std mov das repnz int3 pop xor mov mov movsb ffree fwait pop pop push fdivr sbb mov cmp inc pop xchg mov sub je mov pop das hlt (bad) stos (bad) jnp sbb in mov sti mov in pusha stc xor dec xchg cs pop sbb mov jnp adc push stos mov int test inc std lods out repz lods repz xchg imul ud2 cld mov xlat mov sbb mov and sarl pop stc call int3 mov mov cli scas (bad) ss inc mov sub xchg xor int pop sub pop and hlt mov cli sub mov adc inc hlt les cltd pop fwait or lahf push and lcall inc insl or xor push or sbb pop sbb (bad) adcl hlt jge jl cmp cmp out mov jmp lock xor dec popa inc ret xlat sbb nop mov jle scas cmp jl cld frstor lahf jae pop cwtl sbb dec inc add out jmp mov sub push dec into imul push mov loopne sbb mov push dec add pop mov imul mov adc stc call int inc js hlt xor faddp sbb push push pop jle gs lret fidivr mov fadds flds repz sub les add adc outsb lods mov push (bad) int3 push pop (bad) pop xor xor aad jp call mov cld icebp je gs lea mov aaa xor jb and sub mov pop sbb hlt dec xor pushl mov stos cld divl aad rcrb and cmpb les dec push lret aad push xor sub jg dec (bad) outsl mov jo je xor ret jmp pop lea sbb das lcall jl xchg fistpll and and inc xchg and popf jb xchg cmp sbb jae lret lret or jmp mov aam pop scas mov arpl mov mov or jns fdiv cmc xchg jnp int push das push cwtl xor loop lret jno pop add jae out daa fwait mov les xor rcll jae,pn pusha push dec or mov outsl mov mov push add fsubrs push (bad) jb sub dec out inc or push (bad) hlt mov cmp and pop xor addr16 data16 mov adc popf or and add xor inc mov hlt ss cmc xor xchg push outsb or xchg sub mov in xor add mov daa push push mov cld insb xor xor sti clc decl mov inc xor mov mov mov cmpsb insb in cs sbb adc pop push xor sbb push push jne dec push jb gs jecxz and jge jmp mov dec loop std cltd popa and jmp pop push cld nop add adc add scas jb repnz test iret (bad) fdivl ljmp cli mov cmp mov aas inc push jg sbb aaa xor sub rcl xor je loop xor sbb (bad) jb test add leave or cmp jecxz into ja aaa inc cli in or test push sti cmpsl xor xchg mov das (bad) xor jmp or in js sbb mov rolb sbb push adc xor inc lret addr16 cld dec popa lcall add (bad) fadds and mov mov out jmp repz imul (bad) xchg bound dec ljmp call xor inc jne popa sub (bad) testl mov les pusha popa fwait std lret adc ret mov sarl mov das stos sub xor adc pushf out xor stos (bad) int jle xor push aam repnz inc push daa adc aaa dec inc adc outsl sbb into dec and (bad) cmp sub mov dec and imul ljmp adc sbb mov scas or xor jae xchg es repz mov lret jp jns inc cs ds sub fnop mov pushf and (bad) fldt fldenv add cmc aaa mov imul mov cmp movsl es xor mov (bad) mov pop push cld adc push lahf fnstenv addr16 pop bound or call jns sub gs dec mov cmpsl (bad) sbbb insl lods mov adc in or push xor sub int mov push mov or cs xchg adc int les ror mov xor mov mov lcall push stos xor (bad) es stos stc jmp dec insb jl cmpb and add nop js jle jmp inc pop aas pop movsb pop ss xor pop lock (bad) das mov pop gs out nop (bad) mov frstor jmp stc (bad) mov mov cld inc daa mov lahf inc jae xchg cs xor loopne pop cmc jno bound adc cld xor test mov push jmp pop jge mov xor std in mov xor dec xor ret fstl jno inc stos pop add xchg mov pop dec cmp mov cli mov repnz insl push sub add in addr16 add push imul sbb les push pop (bad) in jnp cli or std mov (bad) into xor notb pop xor sti das xlat sbb clc jle mov xor dec or push arpl and xor jmp loope jo (bad) ja pop mov add xor pop popa repz or xor cmp popa jo bound push rolb std and mov push xor rcrb xchg mov in rcrl adc or inc repz xor movsb dec sub mov and xchg or inc sbb (bad) adc lock xor repz cmc movsb xor push xlat dec adc xor repz sub jae and sbb add jmp fwait sbb das pop pop (bad) (bad) subb push push nop mov push inc jl add hlt cmp ja ret add and imul pop cmp mov outsb jg adc adcl jo add adc mov xchg xor dec sti cltd xchg push pop inc adc mov mov sbb push (bad) mov add popf cmp sahf clc stos jns jecxz ret adc cmpsb in popf push mov cmovg mov mov loop sub dec or lret aaa mov xlat mov stos push shr out cltd clc mov xchg in pop push and inc movsl mov push mov sbb pop inc xor data16 clc xor mov out sbb xor pop stc xor sbb int3 je pushf cmc dec movsl and (bad) sbb xor int add xor ret stc mov cmpsb andl adc add fcoms or xor addl push adc jle adc pop inc mov jno mov fsubp roll scas xchg repz cs dec les lods ss cmp in mov mov xchg inc test add inc jbe out test data16 mov jne scas or gs sbb mov and or cld adc mov sub notl sbb push dec pop cmp iret aas xor push xor repz repnz sub test es xor lea xor pop sub mov dec add or ret sbb xorl call xchg or mov sbb xor addl jb test std sbb push lods hlt cmpsb add fnop add imul in fistpll pop sti mov jb jns and inc (bad) cmp xor xchg and cmp cmp mov lods and inc mulb outsb inc jle addr16 movsl jb add orb mov sub xor lret add (bad) fwait xor jmp fdivs mov xorl sub je cli and jmp push xor push int3 xchg daa or fcoms scas cli repz jge jg mov test dec jle jb in lahf addr16 inc fidivr sbb rorb push sub bound or dec xchg mov jne jmp imul (bad) mov mov xchg adc add push popa insb dec xchg and xor js movsl out and rcrb lea je decb repnz mov test (bad) mov adc repnz mov scas add mov pop (bad) cltd pop inc jnp in push and mov mov fmull insb imul in pop sbb xchg jb outsl and mov stos xor cli ret jne and std xchg aad jae jmp push jge popa sar push cs xor imul xor push or push (bad) inc cmp sbb data16 jecxz add xor andl or es xorb in jo insb push adc ja adc xor mov xor xchg lods add test adc sbb sahf sbb sub mov adc add push sub popf inc jb into (bad) stos mov movsl cld mov xor call jne outsb insl sub lcall xor outsl xchg cli gs movsl js dec cld sub bnd mov mov stos push adc push loopne xor lock pop xlat mov (bad) out es cmc xchg cs or shrb xchg adc jp push push sbb jae add (bad) dec cwtl fdivr jb adc xchg adc sbb sub les lret lods dec xor sub push mov sti mov cmp addr16 pop repz sbb std mov int xor dec inc sub dec in stos stos inc imul movsl add in sti outsb hlt (bad) popa lcall iret xor sbb in mov mov out pop scas push cmp test hlt imul in adc mov xor adc jb adc or stc das loope insb xchg sub xor ja mov or cmp xor pop cld jns dec ret cmpsb xchg addr16 sbb push cmp jb nop fistp jae or xchg xor ds loope imul sbb push jae shrl cmp inc cli jge iret fadds push or add nop and cltd xor jno fsubl add and or dec ja inc pop dec inc pop jp inc xor fs int xor repz add xor inc es pop cmp add xor mov xchg mov dec jne lret pop inc sbb pop mov xchg jp clc mov fstl (bad) and popa xor lahf push insb and push ret or jb or push ficompl imul jne xchg insb adc movsl jecxz popf jae,pn es sbb jge add sti subl push ljmp lods repnz bound cmp inc xorl xchg jns xor and loop mov or popa or add adc mov and into outsb xor ljmp mov insb mov jle clc cmp push dec ret sbb hlt xor insl dec sub xchg xor inc pop jae lea dec xorb push or mov sbb jb inc hlt adc movsb push pop adc jb jp lahf mov dec nopl dec cmpsl xor lock mov addr16 gs and ja jo cmp fwait add mov mov jbe test imul ja mov fwait cmc mov cld sbb in push push pop rolb enter lods adc mov mov jp popa pop or mov sbb stos lcall out (bad) cmc imul fidivrl dec or in xchg dec iret int pop inc (bad) cli push xchg jo push adc add mov push and daa push add imul or mov mov inc (bad) push mov jl jecxz xor sbb shll or insl imul xchg sub je popa sbb jl push fdivs xor js jbe fisubrl or adc xor cmp lahf enter xor jnp mov imul mov jecxz mov pop xor and inc pop jbe in test push ja dec pop sbb jle pop xor fisttpll xor pop cli scas mov (bad) mov mov pushf aas pop fdivp js push cmp add mov andl inc repz dec dec fs or jl push ss sbb mov or es sbb cmp mov in cmp gs js shll xchg jle dec jmp mov test aaa xor pop add jl,pt in push jge pop cwtl sub jle mov or (bad) jae jbe test sti jnp jp pop adc stos (bad) mov std xchg shll sbb sub mov jo pop dec jne jmp jo xor test adc (bad) mov cmp dec pop test xor jnp hlt pop add cmp stc add test in in and rcrl sub stc cld das jns mov scas mov xor (bad) xor jbe xchg adcb adc push hlt inc (bad) dec jmp out sub push or jnp mov clc loopne and pop popf adc adc test pop pop xor out sub test sbb pop xchg cmp mov cld fwait adc sbb xor lods ljmp xor or push xor fprem1 das sysexit int jmp jmp rolb push xor cltd jne mov movsb cmc mov sti push (bad) jae sub jle or loop popf repz cmp or pop xchg xchg hlt sarb pushf mov push in xor add mov imul sbb into xor divl out or in int sti mov cmp pop pop imul aad mov arpl inc lcall repnz and stos movsb sub js or xchg stos mov inc (bad) adc push aaa push push hlt sub std loope sub xor mov inc xlat loop lcall in aad jmp inc xor outsl je inc mov scas push or inc stc loop xchg or repz xor movsb loope ljmp push push add ja adc xor mov out (bad) rorb clc adc mov sbb sbb das or adc cld pop adc jae sub mov mov jb in xor imul test xor lods (bad) xor mov enter sti jmp mov out xor push lods js scas add or stc pop sbb (bad) insl xor xchg aas je ja add adc dec fdivrl mov rolb xchg and sbb xor ds sub or mov dec mov sbb push push aas inc aaa sub adcl add jle push test xlat js xor leave xor fidivl cmp mov adc cs pop push inc sbb pop ret fimul jae jbe adc adc jmp or jmp and add loopne imul outsb dec jb mov bound es ljmp repz or jp xor push (bad) (bad) iret xor rorl or jae push insb push or xor push jg and fbstp ficom and add dec call xor jns lods (bad) pop (bad) xor lret jnp mov ja outsb popf loop ror psubsb mov mov jb mov data16 addr16 loope push xor push pop pop or and repz xor out iret xor sub leave add xor push pop push mov (bad) por decb jp js and jb xor push popa add ja fcmovnu jge fdivl sub stos cmpsb pop in scas mov sub mov push in gs js jp daa enter jb mov cwtl je mov dec leave test adc and and scas pop pop nop xor sbb insl (bad) xor jns sarl lcall push add divl cli pop dec sbb (bad) les bound lock leave fimul mov mov mov xor adc addr16 and xor jg mov fld1 mov imul sbb mov dec fsubrs cwtl imul or or push jo fsubrs push inc fsubs std and add xchg jp aad hlt push mov or out jle out xor and push and call arpl mov adc out xor add les pushf std dec jb mov push out sbb js and ret xor push cmp xor ss push xor icebp (bad) repz mov jl adc xor pop fdivrp pop adc hlt lret aad cs bound or xor xor lock repnz icebp cwtl push jno sub (bad) cli (bad) jae xor jb outsl loop fisttpl pop xor sti aam jno jmp movsb push sarl mull (bad) stc hlt fsts stos daa fwait das add xor cltd dec lret mov pop cmp sbb or sbb pop xor jle outsl mov cmc pop xlat repnz push (bad) adc call into xor lcall das and test test ficom neg inc cmpsl in mov lock jmp (bad) repz repz inc push sbb imulb sbb adc imul leave cltd (bad) xor in (bad) dec push jo in mov jp dec rcr add repnz push mov mov xor push popa (bad) mov inc xor imul hlt xor into mov lock xor iret dec aas das adc mov cmp adc movsb loope scas lret ret aaa jnp test mov hlt hlt (bad) stc sub xor in jl pop and call lods jns ja loopne cli jbe jnp imul cvtpi2ps mov xor sbb mov les pop xor pusha xor pushf ret divb stos popf inc or add mov loopne (bad) xor sbb mov jp push mov xlat adc (bad) jmp clc xor dec jle xor je jl hlt pop sbb sahf xor int sub or lcall (bad) int3 jle subl xchg mov add cmp (bad) add pop mov loope push mov xor daa rcl or xchg pusha sbb mov repz adc test ds insb dec mov (bad) fcmove in and push jmp stc xchg daa jl hlt (bad) test sahf sbb sub jg xor imul sub ja aas shl inc into jns hlt xor lock outsb lahf enter rolb sbb or dec jle pop scas rorl test fidivl test stos xor add (bad) jle and push ds adc add movsl fcoml cmpsl adc into repz dec or lea das dec lret ljmp (bad) or add ret rcll push punpckhbw mov mov rcll cmpsl shr fwait xor lahf dec jge mov jae cmp popl out test fistp movsb (bad) mov popf or pop jp push push (bad) xor mov sub pusha or js mov inc repz icebp mov lret mov jg cmp mov xor jns push jle mov sub xchg mov jmp xchg ret jb into dec xor aas jle pop cli mov ret rorl mov negb popa push mov test cmpsb aad pop aaa mov mov inc sbb jae mov pop aaa sbb movsb mov negb fwait int xor cmp sub out xor cli cwtl cmpsb mov mov mov push es out lods (bad) lock mov dec pop repz push sbb cmp xor add xchg cmp xchg nop fbstp repnz and mov inc cmpsb pushf (bad) out mov xchg imul rorb (bad) repnz (bad) imul lcall inc loop out sub sub in notl orl add sti icebp push push lahf in es mov push mov ja cld push xchg movsl es jge push leave inc fdiv mov xchg xchg je insl mov mov ss in inc adc mov subb jne pop mov xchg gs xchg cmp dec adc bound cli mov dec cmpsb movl in mov scas cmc out jle in add rorl add xchg jo jle sub push in dec or dec inc pop test mov sub push sbb aam sub adc push mov jg cmp and and mov lret lds inc aad aas jp ljmp jb fisub pop dec and test out jmp (bad) pop das or jo sub and pop mov jbe xor leave scas xor mov sarb xor in inc push adc jp inc std jnp jp xor and jae add inc repz daa out mov xor ret and and add cmp fldl push pop mov push or ljmp mov mov mov aad movb imul and adc (bad) mov mov fwait movsl dec lds xor add sub adcb push negl rep and rorb scas xor pop jne test arpl jecxz aad pop add outsl sahf xchg pop add and cld movsl pop or sub pop roll xchg fdivl mov push add test inc lea mov xlat inc and out test std incb lahf leave (bad) rol lret and lds and add xor dec jbe and cmp inc jns xor out push mov in push sub mov (bad) ret loope lock mov dec movsl add pop cmp fild add outsb xor insb movsl mov push (bad) jae,pt mov mov outsl lock jle push repnz sub lcall push adc cli pop pop lods jo jb adc aad mov loop push mov mov frstor mov jb dec xor pop popa imul xor push pop sub xchg repnz xchg push ficoml jno rcl imul mov insb fdivr sub out sbb mov jae outsb movsb push cli hlt dec (bad) aaa daa inc xor nop mov xchg dec and bnd xchg faddl inc pop and out test data16 mov push pop pop push sbb shl cli insb aas pushf jle jne test loope mov jne sbb lods and mov (bad) mov std jae lds je xor (bad) dec pop in lods (bad) jg sbb sbb sub sarl sahf iret pop mov jp lahf mov or jbe push mov xchg data16 cmp jb loop decl dec nop ja loopne repz xor mov push (bad) insb shll xlat jb loop mov mov cmp in inc mov sti pop ljmp xor dec push fnsave repz fnsave jmp cltd dec mov lods out mov aam and push push lods in aas (bad) and int bound pop pop repz push gs mov adc jl stc mov jecxz xchg insb cmpsb add adc or adc loopne subb (bad) repz jg inc (bad) ss jne mulb and dec mov lea movsb xor movsl push bound mov loop add pop mov mov popf sub pop enter in push repz xchg test inc pop mov and and add out adc es push xor jmp mov stos (bad) mov or sbb cli pop mov pop mov jl xchg insl rcrb rcl pop mov jae lods dec addb (bad) cmp outsl push lods je pushf xchg cmp mov popf sbb and cmpsl dec sub test aaa pop and dec or jp lds call popf mov mov pusha and xor dec jo faddl (bad) mov xchg jp stos aaa xor sbb jnp inc xor pop sub cmc sub jmp out xlat ljmp push jmp lods and pop xchg mov xor les xor and sub rcrb shrl add addr16 dec xor popa in add fcompl push cmp adc int3 push jns rclb cmpsl gs adc and shll dec jae xchg mov std mov leave addb in or jnp mov out or jmp dec or jmp xchg sbb std lea scas jmp jnp xchg xor loop adc mov fmul ret xchg out loopne lds fidivl jle daa add jno pop mov inc jb or mov adc xor data16 sbb dec xor or les jl enter add repnz push xor ret cmpsb pop js cmp (bad) xor aas and dec cwtl add mov loopne sub test das xor (bad) or insb xor aad repnz adc stc divb push (bad) and repnz cmp xor ret jge xchg add add adc gs daa ret sub push dec adc fcomps xorl and jns xchg sbb shlb (bad) and ret jae mov (bad) xchg mov jo sub mov dec cmp xor (bad) icebp xor mov fcomps push repz adc dec dec insl icebp push mov pop or imul sub push rcl das add mov shll stos mov mov cli sub dec xor loopne cmp (bad) lahf push or and pop xor ljmp add jmp leave stc addr16 stc adc jg gs pop mov xor gs insb mov sub je jmp and mov mov les jae mov and jmp daa test cld xor cmp xchg pop mov in (bad) push lcall push out in xor lret dec divl jbe bound mov scas jge jp gs out pop jb fxch stos es mov mov cwtl loope jo sbb je das adc push push imul cld adc scas imul pushw add pushf (bad) xor push pop pop mov push mov mov mov inc std adc xchg sub loop sahf mov sbb loope dec add pushf dec outsl pop add xor sub adc xchg repnz and popa je push lret lods pop push dec movsb stos cmp jae pop jbe dec jp sbb xor dec (bad) shrb loop rol pop shll push sub jb jne cmp repnz sub fcomp xor int3 adc sub sub cmpsb push cmp loop xor sahf xchg pop pushl lret mov call add test ret xor cli cltd xor fmuls mov jle mov loopne outsb data16 mov pusha xchg mov test fs pushf jle mov xlat mov and in mov xor xchg aam cli and lds stos sti out jnp (bad) cmp lods dec inc jb dec ds fstpt iret out add fmuls mov ljmp scas mov fsubrp add scas sub pop daa or xchg adc and call mov dec push cmp (bad) xor sbb repnz push in push fisttpl in sarl jl iret cmpsl sbb mov cli pinsrw sbb (bad) mov shll cmpsb or push adc (bad) call mov shll cwtl shrb add mov (bad) mov push fidivrl jb in and mov xchg inc (bad) lret push pop shlb mov xor into adc cli jmp lret push jnp sbb dec in adc mov xor xchg sbb pop dec push sub scas adc mov (bad) xor mov out mov sub test scas jecxz fwait ja pop enter lret push repnz jecxz test or jns cmpxchg jno add add enter dec jg popa xchg cmpsl mov pop imul cltd je call mov mov cmp pop mov xor sbb cmp shrb mov cwtl pop mov cmc ror or lock mov gs mov pop hlt cmp fsts mov sbbb cli mov mov sub insb jae or add xor inc jnp mov std popa sub add roll leave (bad) hlt sti push or dec cmpl or pop jne jle je mov add sbb aaa mov xchg mov push cli jno addl into jecxz cmpsl (bad) ret lock add inc sbb es lods fcoml xchg daa cld pop xor push mov cmp or or mov jl popf das xor xlat test jecxz arpl packssdw mov jns ja outsb sti jo,pt je add cli enter and mov hlt movsl sbb jnp clc mov je lret popa push xchg and and int3 inc or fcmovbe mov aaa push mov das dec rcll jae mov and sub inc xor rorl inc cmpsb cmp sub xchg push mov dec push hlt mov fnstcw inc inc xor hlt pop and pop xor popa movsb mov scas jmp cld sub out mov xchg inc and fnstenv repnz mov adc lret add jmp jp test push rcrl lcall and jmp aas gs mov and ret sub incb je ret mov xchg mov push xor lret jno inc add mov cld jnp pop es xor aaa dec ss call mov push imul xor movsl xor ds nop cmp add js xor sub ja xor (bad) imul cltd jae popa adc test (bad) jmp repz outsl (bad) mov pop stos and and add mov and out dec repz xchg mov aam (bad) jb cmp repnz (bad) and adc xor data16 cmp sahf xor or call mov pop stc sub jbe imul xor xchg fnsave xchg fdivl add and (bad) xchg pop sub mov mov jbe jne addr16 fldenv inc mov jl mov pusha (bad) (bad) xor out lret inc popa adc fiaddl jecxz mov (bad) add sbb hlt dec and cmpsl or insl or popf jp or xchg (bad) mov outsb pushf in xor dec outsl jmp mov out dec xor sbb dec xor sahf dec loop and hlt lods add xor mov or cwtl test mov addr16 pop jnp lret repnz ret sti or pop mov js in lods pop or jo das xor push popf test outsb insl outsl xor cmp push pop dec mov inc push std mov xor popf mov jp push (bad) daa cmp xchg push and add dec xor cmpsb test inc xor xor cmpsl sub aaa xor in movsl sub mov in popf cmpsb xor or adc addr16 insl cld out push add push xor icebp and dec int roll xor test movsl mov (bad) jne insb jbe pop dec mov sub and sbb xchg or add (bad) fldl stos int (bad) repz sbb dec les xor push in psubd int lret push jg push leave mov jb sbb mov cmp imul jmp mov movsb inc jmp ljmp repnz and and push cmp mov bound shlb push (bad) repz jecxz lret incl xlat lock movsb ficoml fisubr fcmovu adc xor testl cmp sbb mov jne mov sub adc mov sbb mov js lods adcb sub xchg les jb lods les and pop shrb lret iret push jne and aas loop xchg mov cmp adc jmp and dec sub push jnp or xor ljmp mov mov xor and sbb aad bnd js mov pop stc or iret (bad) js jle rorl gs cmp inc fisubr aam je add mov and mov sub in sbb push jg or cli sbb es ja push mov push or inc and push and sbb sbb and loope (bad) xor pop add add fxch xlat outsb pusha sub and push fdivrl xchg add jo stc dec (bad) mov xchg xor jmp xchg daa test stos ds mov or xchg sub sub sub adc mov enter mov das (bad) in out in sub mov mov aas (bad) mov imul jecxz loop repz cmpsl nop mov inc mov int3 fistl ss cmp jge and xor mov xor pushf hlt xchg pop add adc cli mov add insb mov ss std or loop aam fadds cld xor out imul sbb lds xor pop into cmc jb push js nop jb mov es sub mov sbb push pop jb mov push pop cmp sub dec adc mov aas das fisub stos or neg sbb cmp aas xor xchg out cwtl cmc jae pushf adc xchg or xor sub jmp cwtl jge insl xor mov sub sti mov cmp aad mov sbb inc add hlt ret jle fwait mov push dec test fnstcw xor mov (bad) lret inc xor cmpsl loop adc and jns jmp pop xor mov in xchg ja sbb mov fadds arpl xor jmp xor aaa movsb push lds lods mov or and clc and push (bad) repz outsb int3 in outsb nop xor out lret mov mov out aad mov stos or incl pop test mov out daa pushl xor je je mov loope xchg lock repnz and sbb mov pop lahf ds jns sti imul push mov pop and xor sub test stc inc adc int pop outsl sbbl sbb dec xor ret mov inc in (bad) je jl gs pushl inc mov sbb movsl repz mov cmpsb adc mov add xchg or add je mov sub mov mov iret repnz pop xor mov outsb mov xor push inc or mov int3 popf xchg (bad) (bad) cmpl mov out shrl mull jae (bad) xchg sub fcomps dec mov roll dec mov sub pop adc pop int push js xlat mov ret add outsl imul pop xchg add repnz push jae mov jb mov lods loope into add xchg aad jo mov (bad) cmp aaa stc or cli inc (bad) jg push add leave inc jo xor mov out mov frstor jne fwait aam xchg mov xor add sarb and iret add cmpsl mov and jo pop xor cmc sbb cmp push dec ret lahf adc mov lahf movsl (bad) jns (bad) and mov into (bad) xchg jb xchg fs ss inc mov test (bad) xor icebp push add repnz repz cmpsl mov pop add xchg jne sbbb mov mov inc fadds cmpl sub push addr16 (bad) aam fimul xor sahf inc repz je xchg mov and rorb lock imul jae jb popf lds repnz xchg cmp or in ret adc push xor hlt faddl popf and mov imul xor inc push jbe xor cmpb mov enter andl mov dec and dec fisubr jmp shlb mov inc add imul jbe bnd xor inc jmp cmpsb pushf in cmpsl jl sbb jmp jg push push xor inc cli aas fstl loopne push sbb mov sub sub rsm idivb push or mov mov aas xchg mov or mov insb icebp mov nop dec imul sub (bad) into fidiv jo dec or and cli out adc adc das xor dec ret or cmp jmp (bad) (bad) push stos mov aam cmp xchg jl adc and fcmovu dec imul std sbb jne mov gs ljmp pop int3 jl pusha notl push ss dec pop sbb push xor mov dec adc or jle stos dec lods push test data16 enter inc push in data16 ja mov repnz sub add hlt jae inc mov cwtl pop and adc movsb pusha sarl xor (bad) fnstenv cmp mov add sbb cs iret or sbb cld cmp shrb movsb nop rcll cmp out push pushf push sub add push mov inc fbstp movsb hlt xchg xor xor mov dec jg out loop xor push repnz sub xchg (bad) lock mov ss out stos outsb dec xor insb dec pop inc hlt adc ja ret push jae pop jb cmc outsl adc arpl jae stos out mov incb add rorl sub mov xchg xor lea dec lcall sbb iret mov add insb inc cmp xchg mov inc sti xor adc arpl repnz push shll clc or xor mulb sbb sub repnz xor cld loope push mov sbb dec je mov xchg iret in xor fldcw add xor pop push jl mov cwtl push cmp (bad) ss hlt push jae sub cli cmpl jl xor pusha leave push or into shrb or jno stc inc shrb rorl xchg dec cmc push pop sbb jbe and arpl out aam pop hlt fs xchg addr16 mov push int3 loope lcall jb xor dec mov xor xchg xchg fs test sbb dec movsb inc mov dec mov aad mov pop shrb imul sbb lret (bad) lcall xchg clc cli add sahf jo dec xchg pop mov (bad) xor fldenv mov jo out daa bound cmc cmpl add out leave test or mov mov pop xlat fdivl repz jae mov es cwtl stc xor push sbb repnz lods lds dec xor adc inc outsb xor ljmp mov push lds mov xor push sub sbb (bad) jg into (bad) and fwait ret jmp sahf es hlt sbb popf xor cmp insl out addr16 push xchg popa mov lahf adc inc or mov dec ss xor ds mov leave pop mov push push dec xor lcall lods cmp inc icebp dec je (bad) jb and pop jmp sub cmp xor jo mov dec add pop xchg lock push mov inc out sub dec adc fsubl xor roll cmp sub jnp pop out and xor and cmc inc ficoml adc roll insl sti adc mov xor dec push jle rcl rcr xlat pop aad addb xchg push test mov insb xchg sahf lock xchg and bound jo xor pop dec sub pop mov out std lock and xchg push lret and xor mov cmp addr16 jge clc xor mov sbb fistl mov and xor or imul ficomp add jns repz in mov adc jmp sub int sbb call outsb and cld xor arpl scas hlt cmp inc nop insl mov mov xchg (bad) mov jbe adc gs mov je outsb adc push icebp cs je sbb inc mov mov mov mov iret mov push adc push gs insb xor xor repnz aaa jmp loope hlt mov cld cmc lods int3 inc (bad) fisttpll mov and data16 xor cmpsl (bad) out pop xor adcl lock arpl jge push or adc push mov or adc xor pop sub xor inc push gs jns cmp and jecxz lods sub jae imul stos sbb push sbb mov jle movsb imul aaa adc jns push rclb (bad) push xor repnz mov das shrb stos cmp dec push add cli jnp test lret adc in (bad) cmc sbb imul sub orb or (bad) out lret sub movsl pusha stc jmp stc mov and mov sub sbb adc push repz dec add push jg mov jb inc hlt dec int cmpsl popf jae pop push jle adc push out xor xlat mov out sub xchg sahf mov or push inc lret mov iret loopne cmc xor inc (bad) ljmp pop gs push mov xchg popf loop loop je dec adc pop outsl xor (bad) ss mov pop xchg pmaxub inc mov fadds jle loop loopne mov pop pop (bad) push jb in push lcall test lods dec cmp ret lods outsb stos cmp sub pop repnz cltd pop xor les cmp add pop aad adc jae xorl mov fsubr or repz test adc jae out dec sub mov test cld sbb jo pop xor xchg (bad) pushf pop mov mov dec pop add hlt add ds add sub outsb (bad) aam shrl adc mov fisub hlt fsub cltd mov jp pop xor repnz jmp mov xor (bad) lret fwait add insb hlt insl imul cltd add add gs jge push (bad) mov add (bad) mov addr16 out and inc call imull pop cld fnstcw jg inc dec int3 cmpsl sbb test inc shlb pop xor mov aad jns cmc mov mov xlat lds add mov bound std xchg xor arpl mov in adc fwait push iret add das test fisttpll push inc xor mov dec add in adc (bad) adc jmp xor (bad) xor adc aaa jae inc jae in movsb sbb pop xor andl leave ds mov js test les pop pop clc mov mov mov xchg std push and iret cmp (bad) cli xchg sar xor mov and xor das fiadd mov dec adc sbb (bad) sbb fyl2x fisub mov popa lcall or pop aaa inc sub imul inc mov mov mov push push loop int add jmp mov mov pop and stos push enter push sbb mov pop and (bad) in popa out xchg fistpll subl stos push jbe int outsb pop add out insb and cmp jecxz cli dec jbe xchg push pop or mov and cmp incb push insb push and adc push sbb gs adc std push ja xchg rcll fdivr cltd ja mov lret lcall jg mov in pop sbb test adc xchg xchg nop mov jp imul adc mov test xor ja mov or hlt inc xor adc sub lahf sbb mov add out mov jge push cmp cli cmp pop stc push dec push mov sub repz cmpsb enter xor loop cmpsl dec dec (bad) sub sbb mov ficompl mov cmpsb nop jmp mov std rcrl sahf cld imul (bad) insb imul jge push jle inc fcos pop dec fmuls push jmp rorb and xor sar rcl scas pop add fwait sbb mov pop adc inc dec inc pop or push (bad) std ret or sub mov test add gs sub lret sub jno cli mov (bad) js aas fdivr jp dec jle sarl std jo inc scas jle inc sahf repz pop shll cs rclb imul mov cltd cs pusha mov xor rolb jno int3 data16 dec and cwtl rcll int outsl mov mov mov repnz test cmp inc and cmp or sbb cmpsb sub addr16 lea repnz mov mov dec or pop sub cmp iret push or mov mov sub bound pop scas pop lahf je cmp inc dec inc cmp adc xchg jle and fadds inc (bad) xor mov mov mov or sbb push scas dec xor popf xor aam cmpsl dec xor push or push cs ficompl imul hlt xor aad lods test jne (bad) sbb cld xlat call incl or lahf aaa xor jecxz rorl ss test lock lea cmp xor cs mov (bad) push add mov out into add bound push inc jb xlat dec pop lret jecxz pop das sahf pop test repnz mov xor xor das adc out add or call xor mov mov outsl pop xor or and neg fdivs dec lods flds loope xor dec sbb int test adc (bad) xor xor mov psubw icebp add xchg pushl imul dec repnz cmp sbb mov xor inc pushw push xor mov pop nop test (bad) jl jb inc and xor and incl or xor cmp ss data16 int3 or int3 jns adc jecxz mov lods dec lret inc scas in or ja or fidivl aaa cmp jecxz lds std jl (bad) into or sti popf fdivr xorb test insl xor or inc in xor push imul cmc pusha mov sti sahf mov inc outsb mov mov or jno in pushf xchg sbb (bad) jae add inc or xor fldenv jp mov and fiaddl ret jo je ds and nop and and ret rolb sbb push sbb mov or push add jae sub jmp cld pop (bad) int3 jge es inc and xor xchg or loopne xlat mov push sbb xor pop (bad) xchg lcall and xlat mov xor lds mov popa jne in mov (bad) xlat mov and mov idivb (bad) hlt mov mov mov or movsb cmc movsl add dec cltd or out and mov xchg pusha sbb sub addr16 add fdivr or add scas mov (bad) mov adc aas push fmull inc jmp mov mov dec sbb cmp push arpl sti sub pop mov xor cld mov inc add lods xchg loope push pop jmp imulb pushl jb add sbbb iret cli fmull cmp aaa mov mov add out dec out leave and sub repnz sub adc cwtl mov xorb mov dec xor test outsl sub jecxz pop ret sub and xor daa inc mov je xor adc xor lea (bad) xor xor mov ss fild aas mov push mov dec xchg cmp jne sub dec adc mov aas dec lods adc bound dec add (bad) push xchg push insl and or xchg mov in mov loop es popa xor xchg push leave xor (bad) (bad) repnz cmp in inc out xor mov mov je jae pop mov clc inc xor or adc imul outsl imul cli addr16 gs sbb fnsave leave enter sub les sbb pop xor ds loop jnp mov pop xchg mov ds mov xor repz pop stc test xchg or jae dec scas add add daa leave jns or adc mov decb push and or cwtl and hlt (bad) xlat or cmpsl popa jno mov jno repnz test push pop or jns cmp dec inc xor hlt fs add jne adc adc das cltd mov mov adc xor xchg or xor inc mov cwtl push fiaddl ds test pop test xor mov adc dec in lahf push jge and push clc mov cmpsb adc jg mov or hlt movsl inc ss cmp push sti imul fwait dec ffreep mov fmul pop push sahf ret inc inc clc adcl mov je jp bound mov and jne dec mov cmpb mov and cmp xor mov push jne rol jns shrl out sub or mov mov bound cmc in hlt mov sti pop pop xor dec push das cmp test xchg hlt enter inc in pop sub repnz addr16 adc jmp cwtl mov push mov lods cmpsl cli dec cs imul push xor mov neg mov subl mov sub inc mov jle push inc fisubl clc cmp cli test dec mov imul and mov adc into mov or cli daa jne adc push cld aam push imul (bad) insl mov and jp (bad) out lock out lea mov sbb xorl cmpsb cmp lcall (bad) mov sub inc sub jg outsb dec pop mov sub aas jae rorl xchg jmp cmp jb cli lret fptan ds cli nop test fdivs jo std fcomip rcll icebp pop push in push mov fucomp sub je fisubr dec push jo cmp sbb aam inc (bad) xlat je das ja scas mov inc pop aas std je xor fwait jo xchg rcr pop sarl add shrb outsb mov add jmp hlt in sbb dec mov mov mov add mov mov (bad) or push xchg push inc ficoml sub and xor mov xor call test or test ret adc pop jbe mov imul push and push pushf xor dec mov inc xor das mov and mov sbb mov sbb mov or (bad) mov dec jge,pn shlb aad dec jb cmpsb pop cwtl adc and pop cmpsb (bad) mov mov adc cli mov xor pop into sbb push mov (bad) cli orb jbe xor arpl push inc dec xlat test mov in cli sbb adc sub jp addr16 test gs std repz enter loope xor mov aam jno and dec stc xor out xor lock add xor fnstcw js lcall pop mov (bad) bnd and jp mov aas jo add clc arpl or clc insl jl movsl daa fwait or push out ret xor xor rcl cmpsb xor inc jnp std xor out dec mov xor dec imul pop mov sub (bad) lret fwait mov sbb add mov mov cmpsl out gs jge jmp jb sar cmp sub add add xchg push jno inc push repnz inc adc pop push sbb stc dec adc mov jl fwait test repnz (bad) das mov jge repnz in or and push leave push xchg ds adc adc sub test rclb sub sbb pop aam fldenv xor inc cli stos jg mov es dec jmp pushf pop mov fwait add or sbb clc cmp add ss iret es mov hlt pusha sbb rcll aas push add fldcw sub cli push popa aas mov adc inc (bad) aaa push jb pop xor repnz pop fwait shr mov cli push iret xchg (bad) add push or push cmpsl das push sub (bad) cli pop xchg test push inc xor mov push xor add iret fimull sbb sbb cli in clc xchg and mov lods jae imul cli mov jg push stos mov jnp fs aam test pop pusha adc push je in dec sub add fsts into jle xor adc aam fdivl std ret rorl xor push lods and jnp mov or push jge bt scas bound xor rcrb mov add pusha and push mov jbe sub cmp inc mov cmp decb xchg addr16 lds sub es cmp mov mov or mov out cmp mov jg mov jmp sbb scas add iret xchg shlb dec add mov scas push add sub add test sahf mov xor xor js (bad) imul mov imul xchg adc loope push push adc insl adc int xor adc jge scas add inc sarb inc outsb mov roll icebp inc add adc pop add push sahf xor push mov xor xchg ret mov test push add repz pop iret (bad) xor xor add fstpl adc cmc test inc xor frndint gs add sbb cltd jge cmp push pop xor dec add fcomi ja mov hlt scas mov xchg fdivs cmc sbb add mov out lods jge add je sbb or movsl hlt out xor icebp add xchg xor ss mov call (bad) stc hlt cmp mov rclb ja jno xchg mov fcoms jmp jo or scas push mov aas add xchg cmp mov rclb xor xor sbb daa mov je sub xor mov fst stos jnp rcrb lahf mov cmc mov jb hlt push or cld arpl imul call (bad) data16 fisttp mov sbb ss adcl jae mov (bad) out cli je xor std adc add fsub mov cmp sbb daa stc inc (bad) call (bad) jnp cmp dec test fldt inc clc or sbb mov sbbl xchg mov inc or dec cmp xor cmpsb and aam loop push xchg sbb (bad) lea subb lods mov mov push js adc or je push stc lds fcompl add fdiv xor sbb mov ret bound xchg push test divl call decb pop je int mov pop (bad) xor jnp mov jmp adc inc cli inc js pop mov inc into stos sti fnsave aad dec xor test das das inc es cmp xor shl fstpt jb enter mov test aaa rclb mul in call jge dec add negl fstps cmp mov cmp ljmp pusha jo xor add repz data16 in adc fidiv cwtl push dec mov ds lret sbb inc je jmp inc sahf add jae ret sub sbbb mov hlt xor fwait imul jo hlt call sti faddl cli test push cmp mov ja (bad) (bad) add (bad) hlt mov adc and sub icebp cmpsb ret hlt fdivs xchg rolb adc div sahf push dec (bad) mov pop inc movsl mov inc mov fsub xor push icebp lods xor push push in and xchg and sar xor stos or divl dec or cmp mov cld xor incb cmp imul out mov cli ja daa cld mov xor mov mov push pusha xor cmpsl mov mov cld iret dec xor inc xor sub and jae scas imul pop clc jmp push xor or sub (bad) mov inc mov sti inc jb inc xor imul push xor outsl or stos hlt and push sub fadds es out ret insl in pop adc cmp mov mov popa push or pop or sub mov push or sub adc inc xor iret xor pop es repnz adc hlt out fmulp int3 lods lcall (bad) xor dec inc aas andl xor or push icebp pop fnstcw fmuls mov nop xor and jb cmp loope mov mov push inc adc inc sbb bound lret jae mov imulb sub and sub stos or jno adc and mov in insb fsubl fs mov notl adc outsb ja in or mov test (bad) (bad) rolb inc cli xor or fs push xor inc add shrl std dec lcall movsb gs cmp mov and push fcomps xchg pushf ds loope aam sub or add lret rcll or hlt cli cltd sbb xchg add jb cmp and jae mov dec shl in dec mov cmp pop push dec cmp scas pop shlb fisttp jmp xor cli std cmp mov addl ja scas loop adc test cli rorl out mov mov pop cmp push je repz ss lahf (bad) hlt xchg rcrl aam dec sub xor cltd loopne enter les jmp xor xor in sub (bad) xor pop lea add xor sub lahf push mov sub xor stos xchg mov es xor (bad) jnp add aad (bad) ss xchg fidiv movsb lods xor pop inc push sysexit jno mov jae outsb fwait das dec sarb inc and test inc cld push packssdw cli and sbb adc imul gs cli pop mov (bad) (bad) xor mov xchg pop out stos jb push (bad) jns int (bad) xor test ds xor lret daa jecxz out clc mov sbb add repz lret (bad) xor (bad) ljmp loop daa lret xor popf pmaddwd test je xchg sbb clc sub xor mov jns lea lods and divb pop xchg es xor (bad) cmp push jae or xlat cmpsb adc xor (bad) jecxz (bad) popa (bad) and fildl ret outsb loopne xchg pcmpgtd jo in cmp and mov jmp pop mov and pop push push cwtl xor stos (bad) out aas adc jae xor sub in arpl dec divb call sub mov jb or in stos fs ss or xor aas dec ds cmpsl jmp out jno push add sbb out xlat enter dec cmp or pop mov jne mov stos stc xor jle xor (bad) imul mov insb data16 xor outsb scas xchg test jb xor out mov outsb add xor pop stc cwtl icebp nop dec leave and repnz xor push xor (bad) and and mov push lahf mov cmp (bad) xor mov inc daa mov push cli mov and xor lds fidiv outsl mov lods es xor pop xchg inc push repnz test xor jecxz imul adc int and das loopne movsl push leave jnp jle es push xor test insl and sbb xor test xor jne rcr jg lcall pusha pop sarl imul (bad) sub movsl pop fbstp jp jmp repnz mov inc xor xchg xor cmp xlat lods xor xchg loope cmp mov imul mov mov cmp xor leave mov pop pop push cmp push repnz xchg out (bad) cli push mov add (bad) out xor in or idivl push dec adc out sti pop mov inc inc mov push add aad or into jae js cmp jmp pusha sbb push pushf pop test add pop ja idiv test jo cli call xor jge push cwtl daa push call f2xm1 dec clc inc xchg sub lods add popf imul addb dec mov ja xchg int3 test jge ja xor jnp js cmpsb std sti rcrb xor movsl cmp call aaa imul sbb int ljmp test shlb inc je addl andnps sbb int cmp iret or inc xlat (bad) cmpsb jg xor pop data16 xor and ds test jae add cli lods xor pop mov mov xlat and test lret cld jae cmp sbb xor test mov mov (bad) mov clc outsl dec mov iret add lret jmp xor or dec jb test lock mov xor lret enter leave call out cmp mov mov add sub or jo es outsl inc or mov add and xlat stc xor mov adc push inc (bad) sub lea pop xor pop bound sub cwtl jmp xlat mov mov pop adc cmc add xor repz xor inc jo push xor lods cmp xor mov adc shrl cmc xor neg scas inc hlt or insl (bad) cld fdivrs add xchg xor mov pusha leave or push ret push xchg mov push pushf dec mov test and mov and pusha mov out js jns imul lret and adc or pop lret mov loope add subl xlat mov stos out lret (bad) pop mov add add xor (bad) jp lret pop jnp adc push ja sub push adc xor add leave test rcl les mov or add xor std icebp mov sub pop xor dec mov fcoms xor or sbb bound leave insl lea mov js sbb add jbe hlt xor jmp hlt xor jo popa xor ds inc dec pop popa ds ja or in xor icebp and mov lea push mov clc out jmp out test daa dec xchg lahf cli jae hlt mov cmp dec push (bad) movsb dec cmp negb cltd add movsl and mov inc adc negl or xor inc fs jmp fcomps lods mov es lea test call jecxz in add jecxz aaa popa push leave mov fidivl or xchg adc cwtl lret xor dec mov and inc cmp and jb mov scas pop lds mov mov jl mov inc dec or xchg hlt (bad) jmp pop add pop clc pop pop int roll cwtl jb scas data16 ret (bad) jecxz push xchg xor stos sub insl adc or repnz inc mov and aad lcall fidivr (bad) data16 aaa out lea or je mov push aas mov (bad) rcrl leave and xor inc pop inc aad cmc hlt in dec jmp pop cli fsub xor jae or or (bad) divl je clc rcll (bad) xor out and dec (bad) inc fiaddl test lock fild hlt push xchg pop test xchg lret mov or mov push sub and jmp xor test jp repz sub test daa ds push jg jae inc add insl add pop bound int3 notl cltd fmuls dec pop adc dec pop add test or addr16 cs fwait pop xchg xlat insl or mov inc mov fdivrl mov inc dec push xchg lcall cmp mov fwait jae arpl mov adc and xlat push dec xor pusha mov and lods fstl and loope push insl xchg mov dec add mov pusha gs push inc lods (bad) in ret xor inc mov push lea (bad) xchg jb adc fildl jmp jmp jle sahf movsl push cmp mov sub pop fsubl out out lret addr16 es loopne cs dec lods shlb jnp pop movsl mov rcll fwait sbb add jnp mov (bad) xor lods loopne movsb inc in mov repnz mov fstpl inc sub xlat add and mov mov lds jp sub jg into mov xchg pop stos adc pusha sub iret add popa xor cld call mov fstp mov mov imul dec or xchg jle mov shrb xor popf jno sbb dec cmp push mov (bad) call mov popf sub cmpl stc push jmp add out into cmp xchg pop pusha in jmp out mov dec cmp out addl inc jg push jo push cli sbb ds dec mov insb movzbl xor repz jae loop sbb mov push sbb pushl mov sub pmulhw cli gs jae aas jbe or popa push pusha test adc add fdivl mov jnp and movsl sub bnd xor push dec inc imul or or rolb je inc sti shll dec hlt jl jmp cmpsb jb xor mov xchg lret stos add ds mov pop cmp fnstsw ja xchg and or inc jae mov mov mov je into sahf (bad) je sub mov xlat cli dec jb sbb scas xor cmp lock jmp sbbl std je inc pop and jmp data16 or jg xor push jecxz fnsave leave loopne sbb ficomp lods (bad) mov pop stc jne sub xchg inc in pop xor es push adc data16 adc xor inc jmp data16 outsb xor mov popl jge mov test hlt stc sbb fneni(8087 decb jae outsl adc (bad) hlt test (bad) sbb imul or das mov xor adc in cld xor inc andb mov jbe ja jnp ja or test (bad) (bad) mov cmpsl ficompl fnop sub jnp sbb push push cld pop jno lcall std popf mov stc and adc adc xor inc pop jp repnz lds into inc xor jg test push (bad) into xor xchg mov and js ret clc js sbb nop jmp arpl jne icebp (bad) mov loopne cs sbb outsl mov mov xchg push into enter jle lcall dec push std xor sahf jecxz test push jo neg adc incl add xchg icebp fsubs jns mov insb imul decl lret mov mov test push sbb js out pop jae xor jg or lahf pop jbe fisubl into pop adcl pop mov xchg arpl cltd cld aam xor fsubr cltd push jmp mov mov dec adc mov mov xor mov fs dec dec mov shl pop mov movsb mov and jmp icebp (bad) out (bad) lahf xor (bad) les sti or lods outsl mov imul test jmp mov mov and push hlt and xor sbb cs and enter push aad inc mov repnz mov add or jle leave lahf add repnz dec ficompl adc or pop jg daa xor lds mov add int mov ja jb pop lods dec fwait sbb arpl sub insl dec adc imul pop xor sbb cmp daa sub clc push add fnstenv pop cli cmp xchg rcl and adc repz xor repz dec push cmpb jmp inc jmp xor jo movsl mov or hlt hlt cmp cmpsl sahf push xor and jno pop push popl es xor pop and clc imul pusha stos test adc ljmp xor pop cmp outsl std push lret out sbb adc xor lcall push enter jmp xor jg ds ja lahf ret mov xchg add into loopne (bad) mov out mov mov mov ja push call xor cmp cltd repnz int aas movsl mov xor cmpsb test loopne into (bad) popl lods dec lret xor xor lcall dec int subl cs add rorb cmp hlt lea hlt xor in int or shll or in and jmp add leave cmp pop xchg aam mov sbb daa (bad) (bad) sub pop sub cmp jle rclb adc lahf mov iret jge xchg sub jge cmpsb js or mov jb jl jae sahf in mov faddl aam dec jno cmp cs xchg mov std add test adc pop adc cmp (bad) mov xor sbb xor mov push adc popf (bad) bound stos xor pop dec lahf into adc inc cli imul adc mov movsl ljmp pop cli mov jg icebp jnp add shll outsb sub mov pop nopl adc andl repz sbb int push lcall repnz cmp adc int fldl cmpsl xchg push jb sbb std je lea loopne neg jmp mov std clc mov and mov or ss repz mov mov aad push xchg xor mov lds imul movsl test pop pop sbb pop pop (bad) repnz xchg sub mov push push lds push jge mov push int cmpsl sbb adc xor pusha cli jge shrb repz ss and push push aas push data16 adc lahf in bound lret fcmovnbe mov jecxz aam adc in faddl je cmp movsl and adc xor imul xchg inc out jle das ficompl cmpb xor ja push rep test out clc sbb add xor add (bad) cmp sub out lods jmp clc dec popa jo or loope cmpsb cli cmp lahf and mov xor loop dec mov mov cmpsl bound or xorl mov sbb cmpsl cld inc inc and cmc cli stos insl sbb fucomi xor fwait jbe add idivb mov dec daa xchg fdivr mov mov loopne or cwtl push leave mov jns scas mov or cmpsb (bad) jb cmp add cld xchg push icebp xor cmc loopne insl xor mov jg push sbb push addr16 in xor jne stos mov xor fs ret jle (bad) mov inc or push lahf xlat lods jne icebp and jae xor xor or cmpsl ljmp das mov lret add inc add scas dec fdivl daa xchg mov (bad) xor pop xor jecxz mov add jge xchg jb push xchg cmp adc popf mov das push jne pushf ds add pushl mov fs sbb stc (bad) cmpsb aaa (bad) (bad) mov leave sbbl push ffreep mov mov jae or add je arpl mov repz pop scas push or movsb xor stc (bad) xor decl jb inc cmpps pop sub add daa xor jne imull xor clc cmpsb and out sarl in scas popa or adc push inc add pop outsb inc imul pop xor lods add scas ret xchg mov cmpsb sti cmp movsb dec sub fs jmp or inc xor cltd test mov aad and xor xor sbb (bad) hlt mov xchg repz jmp scas jne and jne jg jae cmp ljmp xor and sbb aaa add mov (bad) xor push cmc in inc rcll xor je lcall test in xor adc xchg jmp movsl sahf or sbb inc stos pop adc addr16 xor imul mov inc cld in scas jae dec test int3 (bad) stos pop xor subb adc ret std lods inc xor fwait test or jl fnsave pop pusha pop sub icebp rcll loopne lock xor mov js xor fldenv iret jns cmc dec cmp mov outsl repnz int sub cmc xchg push (bad) mov aaa stos daa push xchg mov sarb xor int subl std je stos adc cmp sbb jae xor sub jbe xor inc je push inc aaa pop mov inc je repnz shlb xorl mov jb sbb mov xchg repnz inc push jo or pop adc or pop dec xor cmp adc add jmp aad mov insl mov dec jne test jnp and mov mov lods xor dec outsl inc jno cmpsl dec adc (bad) adc mov out lcall mov xchg xchg hlt push in add push insb xor rcl cmpsb cld xchg xor test cmp xchg andb sbb push jnp hlt fisubrl test ret lcall insl pop or scas cmp push roll sbb leave cs pop xor inc push xor xor sub adc sbb icebp mov (bad) (bad) imul fdivs ljmp xor rorl std (bad) testl sub fmuls add cmp loopne mov push fdivr (bad) push cmp mov dec enter cltd es inc push dec pop jno in pop sub (bad) jne repnz sbb lret divl inc lods loop push mov cli hlt shr ds icebp jmp fxtract adc push dec xor sbb lahf adc (bad) xor xchg lock sub fdivr xor movl or and xchg sub dec lcall stos inc ss sub xor sarl sub sub ds jbe mov rorb sbb cmp jg fisub negb jae push adc inc imul jl sti lahf add and mov and or xchg out in xor lods lea dec inc xor cld jl fstps jmp adc or cmp dec jae mov mov push xor ljmp (bad) pop clc xor mov jg jno sub in mov rorl inc repnz xor mov adc push aad (bad) repnz mov jge (bad) adc push and mov and mov push cmpsl leave xlat ret loop call (bad) popa pop sbb ljmp inc cli dec mov (bad) lods std hlt shl call roll xor jno inc in mov (bad) dec mov push fbstp cmpb out mov jne push mov mov mov mov sbb ja mov inc or addb xor cli mov cs xor cmpsl push arpl push in and mov hlt mov sti push push mov divb push pop rol sti adc push add push mov xor xor cmc (bad) mov out pop rorl shrl mov push movsb repnz fcompp jae cmpb mov pop aam fistpl das mov xor les jb cli dec pop mov cli mov xchg cltd lahf sub out out jecxz cli popa imul out rcl enter insl in aas adc cli mov sub jp add add sub jmp maskmovq notl mov sub shrb and fcmovnbe aas leave stc movsl cmp lret jnp hlt fwait push or in xchg ret sti lds push lahf sahf bound or add (bad) in (bad) test push fbld mov (bad) iret call hlt mov fwait and mov cmpsl (bad) neg fnstenv mov pop mov orl add xor lcall mov pushf cmp cmpsb test adc (bad) mov adc notb mov xor inc dec push cmp sbb cmp jbe sbb adc adc xor xor sti loopne pop fdivrs lods add mov add mov pusha pushf in xor jmp cmp xor mov inc das roll xchg mov cli hlt loop insl lret repnz mov lds sbb in mov jge iret push popf push adc jbe ret push sbb push dec cwtl int shl xor push dec or push daa (bad) jmp jno bound loope dec sub add mov mov loopne mov maskmovq divl sbb fldenv mov into fimul test mov jne (bad) das inc sbb jo push push cld rol xor cmp pop sub int3 cmpsb repz adc stos cld popf add cwtl and push int call sub or in mov into decb jg xor sbb loope lahf mov jle push push cmp gs pop jl outsl xor push data16 and cs mov pop dec adc das popf dec hlt sbb or cmp (bad) js fisub xor or mov rol xor xor jae push xlat mov inc sub repnz inc bound loopne fldenv push movsl or cwtl jo mov xor and daa or int jo std insb repz gs sbb xchg mov shlb arpl xchg jle sub inc aad test jno push jno jns add xor data16 mov aaa popf int3 mov pusha in dec or add fwait into xor out lods xor mov push mov mov adc mov cld inc sub iret clc push pop pop xor sahf push sarb inc inc jo test pop mov xor sbb xor jns js xor sbbb imul dec adc mov push mov orl gs mov add je mov pop push je dec cld inc and xor outsb aas add add mov jmp mov (bad) lret sub clc int xor js jecxz cld in pop imul gs repnz popa imul hlt xor jae ror rclb repnz xlat and xchg cli div cmp push xchg mov pop dec daa mov sbb and std mov aad push xor xchg cli ljmp (bad) imul adc or push out mov xor add pusha xor fdivl repnz in mov int3 int dec xchg jmp daa aam ret jle mov nop jnp int3 mov xlat je jecxz or cmp in dec push pop gs or repz mov add cmc outsb pop sbb orps data16 sbb cmp sub arpl adc cmp jno sub pop jle pop scas xor jo cld in jge aas mov call or repnz mov int3 inc xor je imul and les mov lcall pop mov pop dec adc sbb or ficom cmp scas data16 mov push cld fwait ja (bad) ds xor pop sub xor std in push fs sbb xor jl jge popa sbb fnstcw cmp xor cs lods call mov je push pop mov bnd xor rorl daa mov es mov mov push cmp sub jnp jmp loop mov into jg sub xor repnz shr adc xor subl insl push or jno adc lret add ds cld sbb loopne adc shll pusha stc and mov neg out jle jno lcall mov inc add (bad) fcmove adc rorb inc adc and xor push jb add xor mov cli in (bad) je imul pop jecxz dec (bad) sbb sub hlt insl mov sub (bad) jnp (bad) jg mov repnz je mov and adc lahf pop (bad) ss fcoml push add les sbb mov jb scas stos (bad) int jno sub mov das data16 and cmpsl lock aam imul (bad) mov movsb jmp hlt cwtl adcl das jo inc xor stos in or mov aas movsb lods jo mov cld xlat push xor std mov (bad) push je xchg sub mov mov call or and jae test fidivrl ficomp fbstp inc dec aas hlt clc popa mov add xor fildl push cmp cmpsl and inc sub sub cmp xor push inc out bound cld insl push xchg push or ror jno inc or (bad) je les add jg gs enter or adc test xor cwtl push shr push lahf cli adc pushf mov dec inc test js in mov jne and daa cli mov jp mov xor xchg xchg cli jbe sbb incb ds stos call or out decb sahf (bad) xor cmpsl jbe or (bad) aaa idiv out enter jmp and mov movsb addr16 repnz inc inc insb xchg add jo xor leave sbb (bad) icebp mov xchg sahf jnp jns and sbb dec xchg xor mov adc aaa pop ds in stos addr16 inc mov or pop xor (bad) jmp movsb xor xchg jecxz lods mov sub jnp test dec outsl and xlat jmp imul cli cmpsl sbb xor adc fstl xchg repnz aaa leave nop adc fstpt lahf and addl cs push mov cmp rcll add mov daa or scas ss mov pusha arpl sub sub mov mov aam sbb and mov cs ja adc lds dec inc or (bad) jge dec add or lret inc test ja push iret sbb (bad) adc add in js loopne jb sub jge and jno mov or (bad) sub adc inc repnz push cmc adc aas jg hlt test and scas and mov pop sbb (bad) lret fiaddl inc sub pop jno inc imul pop xchg jb mov out fdivrl sbb lods cli imull adc adc bnd nop popl cmp pop (bad) icebp push push clc test add fs es ss jmp fimul les mov ror xchg mov push in jmp mov iret jg mov jg mov xor rcll push and jle mov cli insl mov push sbb inc outsl pop daa mov les ret or shll inc push test mov xor cli repnz sbb hlt jno les bound sbb das cli mov and mov cmp cmp inc loop test or (bad) hlt mov cli sub push stos maxps xchg cmc adc out mov jle lods adc lahf ljmp std test mov adc test (bad) stos cmp sbb adc push pusha sbb jb push adc outsl jns jae push cmp fisttpll repz add adc (bad) jmp es out lods or sbb sbb or (bad) push in sbb insl or mov adc xor sub div mov les fucomi sbb mov xor cltd dec ljmp add xor xchg aad les sbb and xchg shrb hlt leave jmp or xchg clc repnz (bad) ljmp xor mov rcrl rcl xor mov and dec std mov fmul jmp pop in nop test mov je and inc mov xor mov cwtl repz jae movsb fdivs repnz or xor insb sub aad mov mov movsb loope ja (bad) aaa test daa andl jl (bad) and dec and xchg fiadd mov int3 add mov xor or mov jp data16 imul in arpl in inc sbb int les ljmp (bad) hlt sub inc in sti mov or ds xor xchg pop cltd or xor test inc lds sbb jae sahf push cmp jno mov jmp xor push addr16 (bad) and cmp xor or jns jb push fs push (bad) inc jb in push stos fwait daa fidivl (bad) out mov xor push xchg xchg jo mov das sbb xor xor fdivs mov push enter xchg xor out test fbld mov hlt mov cmp out sbb mov clc addr16 ret fdivr in bound aam dec repz icebp test gs push js xchg mov loop xor cmp stos out adc cmp imul xor lods adc jge cmc and mov pop loopne jns xchg push mov scas pop (bad) incb je fldenv add cmp hlt out gs fnsave (bad) pop and and or fldt je or dec adc and out ja shrl dec nop xchg dec push rcl bound js sbb xor popa pop rorl shrb repz xor insb bound adc sahf dec imul (bad) mov mov pop fwait pop cmp popf cmp xor call push adc sbb scas jle xor fadd test imul push xor push imul shrb sbb jg adc push add xor push push or cltd jle data16 cmp sbb inc xor sbb clc shll fs adc fsubrs fnop je add lods xor cli bound repnz sub call mov mov mov adc cmc decb xchg push fdivrs popa cmp inc daa pop shrb jnp cltd jl mov fdivrl or rcrb sub jne inc loop mov jp push sbb push pop xor sub add jmp jae cmpsl rcr or xor cli xlat mov mov sbb das cmpsb jecxz mov push pushw xchg jae fsubrl call xor mov aam in hlt fdivrl and mov sub insl addr16 xor cli pop add cmpsl xchg push jns lahf inc sub pop nop push fwait xor (bad) mov mov mov lods adc dec jmp xor loop adc outsl mov jnp enter lret and pop mov add push dec jle xor or mov icebp (bad) pop test ret mov arpl rclb pushl jae lret out inc nop mov and mov jge xor into xor and push imul sbb cmp int scas adc aam adc mov jge xchg xor xor jg out hlt nop mov lea sub or inc bound loope rorb xor int out xor sub xchg inc mov hlt xor dec fnop sbb sbb mov (bad) ja mov jmp adc xor or push mov outsl cmp jle je push lret loope adc sub ss jnp mov cld add sti not xchg jg call ret mov cmp and xor fs aas cli jne fidivl jo ljmp cmp sub mov inc lret aaa lea movsl push fnsave gs popa ja xor xor and int3 mov adc outsb loop es ja dec xor repz xor mov mov or sub mov pop xor sbb enter test push push addr16 sub js ds les out adc dec xchg adc push mov jb mov or fs mov rcll sub test loope sbb jl mov jmp mov mov xchg sbb lret inc jbe jo lods sbb (bad) xlat adc dec popf cld jle xor jae addl adc scas xchg mov adc cwtl jb push sahf xchg dec pusha adc add insb repz add loop dec adc xor pop inc scas (bad) xor (bad) in sti shlb add call push xlat mov adc cli fcoml mov cmpsb dec je or mov adc mov mov int jmp jno add aas mov push add inc (bad) clc clc xor test loopne mov push xchg add push sbb hlt sbb adc arpl rclb dec decl xor and adc lods adc xchg pushf push aam clc push pop jl mov inc sub in aad mov cld pop xlat jp jns xlat roll cld test or daa cmp arpl subb adc dec xchg ja sub sahf sbb inc jne adc pop jae add shrb xchg sbb ds lahf ljmp adc loopne xor test jno fcoms pop jbe movsb imul xor lods pop bound jmp mov sub add in popf jb (bad) dec aam outsb (bad) mov sbbl pop jnp addr16 dec mov dec pop mov in enter stc fidivrl mov jnp test or lea mov rcll (bad) mov (bad) sub mov lcall xchg and orl xor mov (bad) pop sahf cmpsl jmp mov sbb js enter xchg hlt lahf pop add xor out cmpsb into stos xchg push xchg repnz repnz lret hlt aad cmpb and cli and jmp sbb inc icebp int jl adc pop notl and or fcompl push jne cli aad ret and lret jbe out sbb ds add call mov aam mov mov test dec add sbb mov push ss push push in or mov mov cmp mov or xlat cld mov mov adc inc out push stos imul or and sub loope push mov aad aas icebp cli jl and stc in push push adc movsl mov dec mov jge lods xchg dec mov ljmp addr16 decb jl mov bound pop xor push inc inc loop dec in int3 mov and dec xor int3 dec push out or sub iret stc (bad) xor sbb mov cmp or pop push mov nop add sbb mov jle mov or (bad) cmpsb gs xlat ljmp inc std cltd sub adc xor dec push inc xchg jno push mov fimul xor std leave pop fcoms fs sar add icebp pop jo mov push pop lcall pop push or xor cmp (bad) (bad) pop cmp mov mov xchg xor adc aaa mov mov sbb test cwtl fidivrl (bad) xor jo mov xor sub gs les (bad) or xchg or fistpll or pop inc or xor icebp int and pop add mov into mov push xor addr16 xor repnz xor cltd jne cmc hlt add and fcomp xor nop movsl mov lods add add jg cli fdivrs mov add enter pushf pop and fistl arpl shlb push or loope fptan add fnsave stos push lods mov jne aam xor lods dec sbb cmp sbb out adc (bad) lods or xchg mov mov mov push pop js mov and clc mov xor push mov xor fwait mov jnp xor sbb ds mov mov push cmp decb jbe pop pop mov sub lahf pushf push leave (bad) iret (bad) cmp cmpsb or mov and adc in xchg call xor pop inc jnp dec xor aaa jmp je nop inc sub imul adc bound fdivrl mov fimull sub jl pop aad btrl movswl sarl xlat je ficomp sub push add mov test into add mov decl cli pop and popf sbb xor in imul rclb dec lret pop cmp cmp jnp jbe or cmpsl lret lret and (bad) movsl xor je stc rorl pop add fidivl call test imul cld cltd clc or iret mov cmpsb pusha mov fs mov sub cmp xchg je xchg scas (bad) popa (bad) inc ss lcallw add clc add popf and loopne,pn xor adc mov nop jp or adc dec mov gs and imul mov push popa inc jp std emms lcall jecxz pusha outsb and pop dec sarb test fiaddl sbb out pop mov lods and ds and jp inc and xchg stos stos std inc sub lcall xchg call in test jmp int popa mov xlat lcall ss cli jns mov push sbb mov adc mov fucomp out fcmovnu inc and rorb mov int or or js xor (bad) mov das xor add sub pop bswap cwtl jo outsl push mov test xor inc xchg addr16 sbb divb rolb push addr16 xor rclb and and push hlt je sti scas sahf fildl add popf or mov pop test imulb lret fiaddl cmp sub sahf mov test stc and sbb mov xchg mov push jb (bad) repz sbb sbb je leave xchg (bad) mov jb jae (bad) dec hlt jl loope pop incl insb push and or clc and xor mov adc or mov or lods xor mov pop (bad) xor fbld lods cmpsl rep xor test test es or pop and lret (bad) es cld fnsave and pop or adc mov cs div out xor clc adc xor (bad) loop push xchg int mov xchg sub jb mov daa pop cmp (bad) cli arpl popf sti lret mov jge nop sbb jmp cmovg mov mov lods stos xchg es sbb pop jno imul mov sar mov test daa xchg cmp out xor bound dec sti xrelease dec insb movsb cli repnz hlt xchg xor dec add mov sbb sbb xchg push lods repnz fist sbb nop push hlt scas sti mov pop adc mov es pop or add int3 je cmc push popa push inc xchg nop inc push xor stos and pop pop push jl pop in pop push clc pop xor in in scas sahf inc mov pop rorl mov push fadds dec inc inc mov add mul or fwait cmp cli jnp xor adc and iret mov es daa dec jno cmp (bad) test stos push adc or sub and jge popa adc xchg sarl aam cmpsl jmp ret loop xor lcall std mov leave ret cli add xchg push mov jecxz fisub ret xor adc mov insb inc mov movsb mov (bad) pop jo daa adc lea cmp jmp stos in push mov fcomip and out sub sar ja aas (bad) fbld stc rolb sub mov mov (bad) ret mov add sbb mov pusha sub sar fdivs pop repnz loopne jg aad movsl in lods fnsave std in jae mov dec sbb call sbb jp mov xchg fdivs dec add sbb adc fdivl hlt int3 mov insl or ja sub xor hlt push sbb fwait sub lds or inc push addr16 dec imul sbb lods fnstsw rolb cmpsl xchg popf pop adc push adc cmp (bad) mov sub outsl sbb inc imul rcl mov mov push jo loope xorl mov adc dec sub dec std test sub jle sbb xor xor jecxz bsr cwtl xchg xor xchg sub add adc xor sub out jb nop dec adc jb mov sub push lods jnp (bad) jo roll rol pop popf hlt ja inc cmp jnp mov xor int dec pop xor or dec je push adc xchg xor sub add not xchg inc mov popf arpl test fcomip and dec clc pop jmp jbe dec jno add sub jb dec rolb xor pusha je mov ret pop or scas xchg cmp xor (bad) lock mov les lcall inc fs pop loope mov mov popa adc fisttpl addr16 es xor and mov (bad) or sti xchg repz fs inc add je in or cmp mov add or daa call popa pop js das xor cmp sbb pop jo andl mov out lahf push sub and fidiv cmpsb cmpsl nop fsts cmpsl pop cs into sbb xor dec movb push popf imul inc jmp shr xchg xchg xor lock fsubrs push dec out lods (bad) mov add repnz xchg add ja arpl gs cwtl das dec data16 enter ror sbb cli scas bound (bad) and and cwtl flds lahf dec or xor fbld imull mov sbb jmp dec xor pop jmp jg push sub dec or add mov xor test inc mov sub mov mov pop out mov mov es (bad) xor cld lahf decl xor pop divb add add xor ret ja cmp lds call jb shrl sbbl adc dec mov add imul push adc jns push add adc adc data16 (bad) sbb push push cld sub jb imull stos xor mov mov loop jle sbb xchg (bad) adc mov iret sub sarl dec mov jge ljmp or jae (bad) mov or es ret mov mov addps pop ss popf or int3 or mov (bad) aad xor mov pusha pop xor inc push mov mov jo dec fs (bad) icebp in cmp pop fisttp or (bad) jno and in fdivrl jo xchg arpl rcrl or stos iret stos pop and cmp dec sbb pop mov in jmp add ja ret addr16 pop or jae aad or std xor mov daa (bad) sub dec psubsw pop xor pop std inc push xor addr16 mov dec (bad) push pop or mov out or rcrb dec inc dec stc ss push add push pop jno adc push repz sar rcrl movsl pop mov mov pop daa xlat and xor mov (bad) aad or or push adc fnstenv cmp push xchg stos mov fsubrl and jnp cmp inc movsb mov xchg mov rcr int3 in aad std push sub add pop jo mov mov aam stos xchg mull aad jnp ret xchg rclb out inc cmp enter stc mov into sbb pop xor outsb inc imul lock enter adc je icebp sarb mov ljmp and push loopne or mov mov std lahf scas fcomi and insb mov add je mov lret jo adc lahf (bad) fcomps nop repnz je sbb nop hlt pop push and pop jl push movsl stos mov jge (bad) je mov fcomip pop mulb es jle xchg mov push ror inc aad sub fisttpl jne fsubl inc das gs jae int (bad) jl jp and stc js aas mov pushf mov pop xchg dec js sbb jno inc out dec push clc dec int3 daa dec push and mov loopne cli xchg aad add stc sbb mov xor cltd addr16 cld inc xor sub pop nop mov or push push add mov adc adc or jge xor sub xchg sub push fiadd stos fistp or outsl ret cmp cmp sub dec sbb push pop lret cmp xchg pop or xor mov mov adc in xor sub xor and fstl (bad) mov xchg aam mov ljmp stos pop jo daa incb (bad) jnp in in xor bt push xor cltd push xor (bad) and sysenter lods pop add stc sub das mov or test xchg add xor sbb cmc pushf mov mov mov leave (bad) xor imul xor add adc xchg adc pop mov xor inc cmc ja imul mov jle int cmp popf and popa dec or outsb jl jo popa sbb shlb push push mov shrl lods mov or xor push pop sub adc dec or insl add std cld pop outsb cld add mov push xor das xor out fistpl xor mov pop adc int3 mov sbbb or aas and add add push add ficompl and stc cmpsl sbb mov das lahf sbb test inc xor pop data16 jae daa pop (bad) lds mov in aam push iret into sbb pop (bad) popf test sbb pop xor (bad) cmp xor les cmp pushf cli mov xor std idivb hlt adc aas fucom test pusha popf jae mov hlt cwtl test loop movsl xor xchg aaa ljmp stc popf cmpsb sahf jno push sbb push dec incb shrb call clc out daa ljmp (bad) js imul mov pinsrw adc js aas (bad) pop pop shlb lock and clc popa in cmp sbb aad jo in imul cmpsb cli add push jbe (bad) adc insl jne xor mov lret mov xor imul push dec and icebp outsl jae (bad) mov lret or xor fs test jnp sub js mov push cmp aam cmpps ss jo jb mov pop and xchg mov in xchg push xchg out add mov xchg sub xchg (bad) js xor hlt dec clc jnp imul mov scas push xor lret fistpll xor js stos add pop cwtl xor xor cmp add gs mov mov hlt sbb fsubs push loope pop sbb dec cmpsb cmp jle mov dec negb dec es inc rcrb insb jbe outsl sub (bad) sti and lahf jae lret sub mov or add rcll xor sbb inc inc xor push es ljmp outsl les scas mov stos imul out stos pop call int3 jl (bad) lods push mov rcl or mov ds jg or cmp (bad) push das scas jb adc shlb in mov mov (bad) xor into mov scas cltd test xchg or or test xor lods add adc and xor or mov ss (bad) jmp or mov or aas mulb xor imul shlb movsb mov dec aad (bad) mov or (bad) iret pop rcr jae mov imulb mov inc sub ljmp pop sbb rep jl cmp cmpsb push push inc jmp sbb mov mov mov loopne fs cmp scas xor push hlt xchg xor roll dec jmp xchg inc fldl imull push pop (bad) cmc sbb insb (bad) add and inc and into mov mov or mov jb mov out in add rolb sub cmp mov mov inc sti sahf and jg sbb loope jne mov ret sub xor and xchg mov cli bound bound rorb daa cmp jae sbb inc rep int jg xor (bad) dec rcrb cmp movl imul sbb movsb mov mov dec sbb jbe inc cmp ror imul add enter push cs mov dec nop pop sub or test in add fisttpl xor pop shld cmpsb xchg mov out sbb (bad) lock cmp dec lods aas push outsb sub xchg sbb rorb cmpsb adc or repz lret adc add xor jmp std push jge jae imulb xchg xor xchg push push jb adc pop or xchg cli imul je call and sub xchg pop scas jp into and jno daa or hlt js in cmc rcr cmpsl mov cs sub out hlt mov inc push loopne xor adc fadds cmc xor pop jecxz bound aam imul push adc mov or sbb pop mov push lods or adc imul xchg xor xchg mov xor mov xchg adc scas mov xor cli inc dec mov ss add adc jecxz adc (bad) lock xchg sbb sub mov rolb push push add (bad) stos cmc es ja lea lds iret orl aas shrl or add or ja push cltd cld std push xor leave inc movsb dec xor sbb or cmc clc (bad) mov add xchg jae mov popa (bad) xor fidiv cltd push mov daa rclb xor mov (bad) je push gs xchg add pop dec rorb mov or stc fisttpll dec or add hlt test jl sbb lods pushf mov fs test or xor jns mov lods add repz lcall push test mov push mov repz cmp cmpsb sbb pop mov lods hlt out and ja and xor dec push rolb clc std repnz test jl nop add and adc scas adc das dec pop imul inc push mov hlt xchg ret jecxz int3 and iret scas mov ret inc jle xor or jle test dec clc out sbb ljmp add jp xchg mov lds add mov mov popf jge lods and cmp jg xor adc dec inc cmpsl xor popf andb xor mov out adc test sub adc in add adc xor lahf xor sub scas arpl pop lcall js or (bad) mov or sbb and jno pop sub int mov inc adc or jb lods jae xor sub std cwtl xor push and push bound inc and iret (bad) lods sbb xor xor jae mov push mov sub mov xor mov jne xor test jno clc and lret push xor cli (bad) arpl inc jo inc jbe add je loop inc sbb xchg pop add rclb push cmp pop jnp push xor jp fs xchg cmp popf gs add iret add mov lds shl mov stos pop test jg xlat out pushf imul (bad) xor ret lret or xor rclb pop loop inc xor enter push push pushf sbb dec dec das ret mov xchg pushf pop out add in mov in xor or pop test mov mov push aas jmp imul add xor scas jecxz movsl xor roll xor and stos mov cmp daa jae movsl inc pop and daa out data16 (bad) gs add outsb jb adc inc fwait sbb mov fs xor sub adc in mov sbb fdivrs xor stos je xchg cmp fnop or mov xchg jmp xor cld sub repnz jnp clc mov rclb xor (bad) xor sbb fidivl xor outsl sub xor mov xor (bad) adc mov add add adc add stc push loopne xor add lret mov leave popa imul (bad) jmp cld pop lods push jp or je test imul data16 jge jae mov ljmp dec mov sarb aaa js dec popf (bad) pushf or out addr16 and iret lods cmp aas add mov ffree (bad) (bad) push sbb mov xchg mov pushf inc adc xchg or loope je adc or push outsl lret cld repz push addr16 cmp pushf in sub (bad) jo adc mov hlt push shrl mov sub push mov inc jecxz cmp icebp xor cmp rolb mull imul hlt xlat mov xor inc cmpsl ljmp aad out jle insb pop lret and in xor cli pop mov push dec jne pop popa je out push mov xor add pop pop jb pop jae bound xor test mov pop xchg imul decl xor nop push mov pop and mov or xchg sbb ss lods adc or mov xor imul orl repnz pop cmp imul fistpll fildll mov out stos repz add xor adc repnz roll xor inc and lock push push ss mov addr16 jo jle mov adc xchg adc clc add mov xor add nop jle mov jl repz mov out mov mov cmp pushf sbb int cmpsl les mov adc mov cmpsb and pop adc fisubr push repnz xor std adc jae je inc or cmc (bad) icebp mov add lds mov hlt pop xchg lret mov add cmpsl cld leave stos stos pop lret inc aaa lods mov fwait (bad) sub sbb dec xor jnp (bad) push jb pop adc out inc add xor xor or mov pushf sbb adc xor pop dec mov dec xchg mov sub adc or inc mov mov lock je and cld dec ja sub or xor imul lret sbb xor push cmp sbb xor (bad) lahf xor mov clc mov test xchg dec xchg hlt pop and mov movsl push xor adc cmp or packssdw enter push movsb (bad) fstpl adc adc je jb sub iret xchg dec cwtl pop cmpsb and sbb int popa je xor and sbb and adc mov lret adc sub jmp push lds (bad) not gs mov mov inc out and call out popa jbe pop push sbb sbb out cmp out test push mov adc sbb push pop xor and or (bad) sbb cs rorl or xor mov jnp mov jmp imul (bad) add xor push mov outsl mov or out add add jne iret lcall clc clc pop rol xor jnp and cwtl es flds cmp stos imul mov xor jae test push fcoml subl cwtl pop sbb hlt jne test pop xor mov ds clc les pop or mov cmp mov xor lods and mov (bad) ds pop xchg loope pop xor shrb gs movsl les daa addr16 or mov mov pop (bad) push adc repnz sti dec and xor and hlt (bad) pop sub bound in aam xor es cmc add hlt or imull add mov adc inc hlt inc sub cmp (bad) (bad) adc dec or mov test sarl dec pop ss push add and psrlw loopne sub xchg jae or lock (bad) (bad) hlt xor add ds lcall xor std or cltd cltd jg and push xor clc cmc adc xor rol sarl dec or repnz jb cmpsb xor stc es xor imul dec pop and fidivl stc dec and imul pop outsl in in leave mov jge mov add out inc cs sbb pop mov rorl (bad) mov jo rcl hlt jne push lds scas xchg neg dec jae adc add das jecxz adc pop enter inc mov xor scas mov xor outsl cmpsl mov jg jno dec and push xor (bad) mov mov mov dec xor xchg outsb out mov in aad sbb adc sti lods shrb je addl hlt cmp and jmp movsb push jo xor or mov cs push dec stc inc add f2xm1 in jge push je incl mov pop mov jmp jp xchg xor xor cmp mov pop mov jno cli adc push jae nop or jb sbb jle movsb xchg bound sbb add dec cltd mov inc in (bad) inc sub dec or gs jl sub mov inc lcall add jmp enter mov (bad) adc sub mov ljmp mov push outsl dec jg jecxz jne cmp (bad) pop ret addr16 sub mov in push mov pop pop inc xor jle outsl cli or sbb sbb xor xor xor (bad) sbb dec imul mov imul and aaa aaa test std scas out or dec iret mov hlt push cmp push rol adcl mov cmp (bad) push push cmp cmpsl dec out cmp inc pop ss mov mov add aaa add dec xlat xchg out or ret jge inc andb shll and dec inc mov cli cli pop mov xchg pop stc and scas sub and jo and test pusha cwtl cltd bound inc add or test js xchg mov test loop cmp adc (bad) cmp out and jb xchg dec sbb sbb xor cmp sub pop fmull cmp jg pusha push and cmpsb mov loopne,pn push inc je pusha sbb int3 push mov mov stos hlt inc shrl push push aaa es mov jg or mov xorb adc outsb int and xchg push add mov loopne adc mov testl rorl pushf sub jb mov jns nop loopne rorl enter mov gs inc outsb or sahf ss pop hlt leave cmp bts mov sbb insl inc shrb mov popf sub stc pop pop test je,pt insl and pop xchg call mov adc adc lock and scas js xor es (bad) jmp iret rcrb xor lds xorl cld mov imul add jb shrb sub mov ret mov nop pop (bad) add mov sahf push test nop (bad) in inc ret test mov xchg or xor outsl pop xor xrelease inc hlt mov aam shl mov pop xor cmpsb xchg pop lahf je ret lcall hlt mov popf lods push daa or xor xchg cs xor pushl scas adc add xor pop insb push cmp ror (bad) add xchg inc sbb inc xor leave xor push fxch popf (bad) int3 hlt lds loopne imul (bad) mov popf push add popl mov daa xor lret xchg adc add adc or add (bad) neg adc jo (bad) lcall and loopne sbb jmp sahf in sub aad push xor inc sub cli jmp lret add mov jae cmp lock cmp cmp inc jno rclb push cmpsb jns jl mov es in mov lahf insb dec (bad) cmpsl xchg or test (bad) xchg cli mov inc cltd icebp lahf jns cli push insl push and inc aas or and and ret rorl dec daa sbb (bad) lock push ja mov sub les fistp cli data16 lret adc popf sub and out cmp cwtl sub push hlt inc loope and jno push cli mov repz add (bad) jae idivl mov in adc xor aas or scas sbb rcrb (bad) xchg push aas xchg data16 ret out rolb or adc sbb loop movsb insl clc into sub pop push mov sbb pusha cld mov adc mov fsubrl fnstenv mov nop xor jp pushf lret movsl in mov mov popa cmp adc or adc adc sahf jg sub divb sahf icebp jne daa jg sub sub cmc imul test mov jbe xor je mov fidivrl dec mov mov mov pushf jbe notb xchg xchg mov sbb mov dec out mov xor ss sub and xor imul aas or pop stos mov ljmp sbb inc out sbb mov test xor outsb and add mov cmp cli scas xchg cmp in cmpsb pop and test push cmp xchg std dec gs sub sub xor aad mov dec push push pop and dec mov xchg mov mov rorl xchg mov loope call sbb jne xchg xchg push dec fnop push sub ret insl mov cmpsb jmp mov xor lea jae nop mov mov push js and aad in (bad) jecxz jmp xor adc divl popf jl jmp (bad) nop aad add push sti xor ja mov addr16 xchg and jge inc cs or and dec mov repz in mov push bound cmp je test repz mov mov addr16 or sub pop adc sbb add bnd (bad) fwait push imul sti mov mov dec aaa dec sbb orps or mov and nop (bad) and lock pmaxsw mov cmc pusha ss aaa jle add adc push movb and cmp and lret ds cmp popa ret aam cmp adc mov std les out jmp mov lea jb sub adc pusha in push pushf mov xor (bad) mov and stos mov mov shrl mov andl sbb gs (bad) add xchg push sub in cli xchg push movsl ret push cltd std (bad) int mov pop and xor daa int3 cmp push cli stos xchg mov and sbb test sub icebp mov mov cmp fbld or mov ror adc add in imul roll add add push fs push in and cmc out cltd push mov mov dec or lods adc xor mov int3 xchg adc cld sbb jge lret (bad) ret (bad) xor mov iret xchg xchg and xchg shll push pop mov push fdivrs pop aaa xor or jns xor push fcompl adc bound mov lds jmp (bad) and xor sbb dec movsl dec pop mov frndint fidivl pusha dec sti mov sbb in fisubr out xor jb hlt adc xchg and pop xor sub jp or pop xor lock pop mov pushf xor push xchg (bad) xor jl or xor (bad) mov xor xchg adc xor xor sahf adc adc or bt stc jmp aad mov fldcw in push (bad) je gs add ret stos xchg mov sysexit mov idiv inc cmc add mov je aas mov out ret in shlb cmp (bad) sbb add imul mov dec xor fnsave int pop sbb outsl xor dec ret or call es jle and js pop and imul aam rorl push inc cmovg fwait stc jle xchg xor (bad) mov add jo pop xchg adc xor jmp mov pusha mov and ss xchg arpl scas mov imul repz xchg mov dec add xor es inc push jns fildll add jnp mov bound mov xchg idiv mov ss in jp xor mov lods dec xor sub mov sti push aas fsubrl adc add (bad) mov or and xor inc add mov mov (bad) xor pop cmp pop add inc dec hlt fimull or sub repnz jge mov movsb int rolb sbb xchg inc dec sbb dec jg inc hlt and mov push mov inc xor cli dec cmpb int3 cltd stc mov add mov scas dec mov jb jne dec pop xchg pop mov dec (bad) mov adc popa and repz push cmp inc lahf adc sbb xor cmc mov pop fwait push sahf incl mov call hlt addr16 cmpb cmp sbb mov xchg mov add icebp (bad) mov adc fwait cwtl daa je (bad) lret (bad) aaa sbb xchg jb repnz stc inc xor iret mov mov and ss outsl add sahf add xor into aaa xor divl lea ss xor cli push sub fdiv clc fldcw sub lods pop adc hlt sub lcall jg xchg mov xor jne hlt pop lods add sub add add stos pop cld xchg out repnz in inc push and lea out jns stos push out xor inc mov insl xchg pop mov and sbb enter ficomp insl sti cmpsl or add cmc aam cltd xor mov fidivrl stos insb lea inc popa pop pusha cmc mov aam movsb dec popf (bad) lret fnstcw test not cmc xchg in jne add sarb sbb fcomps das sub xor and push dec pop loope mov lds xor pop sub rcll jno addr16 xor popf lahf sub cmp jbe je lds pop je or nop jae mov scas mov ja insb jae je jb lock sub xor adc test stc inc mov frstor ret mov cwtl icebp xor sbb es lock sub stos outsl xchg xor push or jg gs mov xor ss arpl cmpsb dec stc and cmp sbb test loopne aaa cmp adc insb inc (bad) in cli push xor sbb pop jg repnz mov cmp pop inc xchg out jbe cmp sbb mov add mov cs sbb fstl lds xor icebp mov popa ss and aad in inc or jns jecxz int jmp mov stos dec test inc pop add into mov out mov movsb in popf or mov jb rcll sub pop je into mov rorl and xor movsb fst mov insl cltd in call dec gs icebp lcall push (bad) lock add pop aas rcrl jg cmp data16 mov or sarb adc inc jb (bad) adc and or mov or mov cli aas xchg push fldt test xor sbb lods and dec mov mov mov les lea jl setb mov aam jns fsubs test and scas sub in pop dec or scas cmpsl dec clc mov add mov xchg push jge (bad) aaa xchg inc cwtl xor les jmp shrb idivl or outsb in pop pop or int3 xor loop fimull cmp push push jl jp sbb inc adc addr16 and xchg dec adc aam movsl fbstp cmpl icebp mov push xor fsubr outsb pop shll inc jb pusha dec (bad) adc push call adc jbe jae leave xchg sbb mov pop lcall mov test xchg xor shll xor shr mov inc mov pop fldt mov popa insb xchg rol xchg scas lea dec jno mov push mov repnz push jmp fst xchg stos notb mov mov adc xor push rcrb xor decb or or mulb sbb push xchg mov mov jg xor fbld push add and cmp adc jle pop dec adc hlt xchg and (bad) insl add xor push pop xchg outsl cli fnstenv add xor cmpsl imul and adc lret data16 xor lcall and adc js mov fisttp pop out and in lea xchg enter add push add jl xor adc icebp dec xor jo xor cmpsb mov dec sarl pop hlt jae out push stc in lret fsubrl add push repz cmpl jbe add je sbb lods mov mov rorb mov xor jmp pop jmp mov add xor in rcl clc xor adc ret in jb je pop xor mov inc xor xor movups xor ror (bad) sub push inc es adc les mov cmp (bad) jae jg mov and add int std (bad) mov adc movsl pop pop ret cs mov (bad) (bad) hlt pusha adc dec jne pop mov xlat fs (bad) stc sbb lock outsl push xchg fwait jle pop rorl or cli sub sti gs mov mov adc mov pop je xor pop add xor dec xor mov dec mov bound std push test cs add cmp gs jae icebp pop lock jb push std mov aad lahf out xchg xor in mov ds hlt imul (bad) sbb (bad) xor out insb hlt out lea icebp sbb les scas xor sbb inc pop icebp cs xor ja jae hlt insb mov and sub mov repnz inc fs aam stos popf aas sub xor test jecxz pop add pop mov ja lret andl xor imul dec dec adc dec and mov loop je jl mov xor fdiv xor jns iret clc arpl jl enter ljmp pushf ret notb loope dec xor dec adc aas sbb in xor mov inc push pop push inc pop or and mov (bad) jbe mov add sahf fisttpl aam pusha jb mov and call cld ds stos dec xchg or xlat ss lods cmpsb jns xor sub dec pushf mov mov xor addl cmp or adc lds mov pop ss jg aaa (bad) pushf jb lods sbb pop repnz adc mov loopne sub (bad) dec sub pushf fidiv insb je nop pop pop pop push xor fwait pop mov pushf cli xorl xor mov dec xor mov out repz add and mov pop sbb divl repz mul xchg lret xchg mov mov (bad) jg scas loop js ja call add xor push sbb cmp repnz aam jno xchg add sahf push push and js sub pop inc insb cmpsb jo pop fimul pusha sub jg cmp jb sub jne xor ret lret and (bad) cs xchg ja mov xor das loope pop jns lcall out pop dec cmpsl (bad) push mov mov mov sbb dec (bad) mov fdivs sti sub xor les mov es hlt mov sbb je cmpsl mov in or jmp inc cmp nop aam xchg or jle mov mov xchg pop rcrb or or sub and xchg jle addb sbb popa daa dec hlt jns mov dec cmp lds mov sub enter xor out pop adc inc stc xchg pop and cmp jmp mov xor shrl cmc iret jl mov or gs add inc cli xchg cmpsb popf add cmp mov dec std js movsl xor jb test out sbb ja dec jg sbb call xor and aad jle mov xor mov inc vshufps xchg jp gs (bad) mov jg mov out jcxz cmp mov out or loope mov jp nop push xchg (bad) (bad) clc push or les mov push leave push mov (bad) sbb and mov loopne and mov sti cmpsl popa mov jns shl aad fwait jno add scas push je pop xor push adc and pop mov popf test das cmpsl (bad) mov xor or xchg add int and push enter fdivs xchg jno jge xchg std lock popf iret js data16 mov jno jmp ret lret ficompl mov jne fidiv cli negb sub cli aad sub pop and adc push jae lret rcr sub imul leave jae cltd xor iret out adc es rcrb sub cmpsl cli xor mov aas sbbb mov mov xchg test cli mov lret cld jmp cld sub cmpsl mov mov mov and fisub fs dec loop out in sub shll in lock into cmp push push bound sbb test setne fildll mov mov xor ds mov xor repnz mov jb test outsb insb popa inc pop push inc (bad) je frstor push fisttpl fisttp mov sub pop mov xchg rolb push (bad) pop cmpps clc inc mov (bad) xchg fnstenv push inc lock inc inc push inc js cmpl mov scas test out (bad) outsb daa repnz add push std cmp cmp pop add shr mov mov loopne add jae in jecxz test es sub xchg ret hlt inc sahf xchg test mov push adc popf xor lock inc lods pop outsb push stc mov cli add adc sahf idivb ja (bad) in aaa jne push sub (bad) mov addr16 lds es lods in pop (bad) and repz lods je inc cs dec mov decl mov add mov dec mov adc xor push fstl sub arpl out adc dec mov popa jnp jge sar mov jp test orb xor movsb loope loope mov cmpsb push mov stc cli les test int push xor dec inc ljmp aas subl sub out sbb bound add jo add pop jae enter push lea push (bad) xchg ljmp mov fs mov lahf add xor mov aaa sbb dec dec cli pop push cmp pusha adc cltd movsb mov mov push push push das cli imul stos scas fsubrs scas std mov call or push and inc stos sbb repnz xor mov (bad) xor add cmp arpl or jno scas test out cmp inc int3 sub and imul or rcrb pusha mov sahf dec push dec test xor ds test out loopne mov inc leave cwtl xor pxor imul dec in add pop pop push and pusha lea or dec sbb xchg shlb mov and dec orl adc leave inc mov mov or jle and pushf mov cmp and pushl test adc outsb bound lock movsl dec mov aam fnstsw mov lock add jo pop mov inc sub jno dec adc dec push cmp into imul mov int push popl cmp sbb ret xchg (bad) mov repz mov xorb movsl jae and fistl and popa pusha aam jbe sub mov add addr16 adc inc mov (bad) (bad) push and mov (bad) sbb loop push pop addr16 sub out jno dec inc push mov or sub pop jg add mov mov xor fwait sysenter sahf add xor inc mov cmpsb sbb push stc push and test rcrl cwtl icebp iret imul lds (bad) xchg xor rorb inc iret cld test ds inc sbb xor add rol push divl addr16 hlt xor xchg or jmp xor fisttpll jge jo jl xor xor or adc or loopne cld inc push xor (bad) loope movsb jg mov adc xor sarl test jle cli add xor popa dec jno stos pop mov shlb push xor fldenv sub add ret loop and xchg pushf gs pop jo mov pop jb push sahf mov xchg jmp popf xor xor data16 mov pop xor inc stos pop outsb mov hlt dec movsl mov cmc xor mov fidiv (bad) icebp jecxz jno std adc arpl rclb ja hlt imul daa lret je les cld mov xor data16 je pop and fs add xchg es or jo cld imul ret pop sbb mov sub sbb sbb notb aad dec add stos aaa fldcw jmp faddp adc adc ds mov imul clc stos inc pop xor sub fcmovbe xchg jne adc mov pushl stos cmp xor push or dec psubb cmp daa push sbb (bad) jb fcoml mov adc imul fimul test xchg movsl xor mov aam push cmp out (bad) mov fist xor insb add or jmp cld cmp xor add lea sti mov xor je stc movsl xor adc xor lock add mov rcll (bad) aaa xor mov mov jae lods inc sub in lret scas xor ss movb gs mov scas arpl (bad) bswap mov cmc hlt cmp (bad) pop push xor fsub xor mov push xor (bad) mov gs adc adc xor mov shrl and push or repz lahf in adc mov xor xlat (bad) push hlt mov mov add sub dec lods repz adc movsl (bad) and fwait add pusha jb movsb xor adc mull adc adc cli jbe push lcall pop mov xchg dec push ret lea lock xor jno lcall int3 cwtl roll sbb and push andl xor push test sbb into or or (bad) jmp in inc sysexit jo and pop fs addb dec jmp ds std call outsb push icebp aam sbb add sbb out and inc cld xchg jge dec xchg and (bad) adc mov js ljmp (bad) in (bad) add rcrb fisubl xchg push xor xor dec outsb rcrl enter cli jnp jb inc mov sbb adc test and pop or jno and adc pop sbb push inc data16 adc push mov pop add enter call inc sbb rorl xor adc dec jne addr16 add mov dec cld pop pop xor inc out or adc mov lahf xor je adc sub out scas hlt repnz jno sti sahf or ss xor mov ret stc mov add lret inc ja int push sub add or sub add push xor or and cmpsb cld push imul popf repz xor jmp xchg (bad) enter imul lods (bad) sbb (bad) push sbb les int3 (bad) mov jbe xor mov test jmp or insb repz mov out pop or (bad) jle mov push and aad jno sub jno imul stos jnp cwtl ret repz divl inc imul (bad) mov das es jo xorb mov pop or push (bad) aaa scas repnz inc push jmp xor cmp xor cmpsl mov cmpb jo xor or push xor ror jge sbb mulb cmp hlt cmp pushf sub fs into icebp repz out insb jbe data16 or (bad) xor cltd or push adc inc lret xor hlt (bad) pop pop xor and fbstp out sub mov fs test clc repz out and add aam mov and stc call adc in cmp xor test mov call jno jo mov arpl call fdivrs mov or or into sahf ja int3 jge,pt aam mov or sub movb js push cli jmp (bad) xlat and jl cld pop cmp (bad) not arpl sbb mov cmp clc add push arpl outsb adc xlat das cli call and jg or and cli push lea into cmpl jbe fnstcw pop imul hlt cmpsb shl aaa or cmp mov lea psubsw (bad) push and mov xor add dec pop sbbl adc in mov mov sbb xchg fdivrl pusha mov (bad) sub lea mov adc xor shrb sti arpl rcll xor sub push sbb call bound ljmp movsb loop mov add sbb loop push jb into imul ds test (bad) sub leave inc pop iret (bad) adc rcl xchg ret (bad) mov jecxz rcrl cmpsl pushf movsb pushf jle lock gs xchg loope xor (bad) cmp xor test push (bad) jae ret mov jns xor cmp ja or jb adc dec movsl pop fcmovbe xor jl and adc mov xor (bad) scas add dec xor pop movsb leave outsb xor or imul and ss out adc adc pop mov xor mov scas shrl xor add mov xchg xchg pop and sbb ret fsubrp cmpsb xor icebp xor and mov sti jmp pop mov dec mov sub mov imul mov sub sub cli mov xor mov fs cmp cli repnz das or std sbb xor push push cli dec cmpsb cltd jl xor mov repnz fimull pop aaa lds xor xchg shr mov xchg int fistpll mov jg and nop push add aaa mov lcall cli (bad) hlt push jmp scas addr16 imul sbb int cli xor hlt sbb xchg inc mov int adc or or xor sub dec ss fidiv add invd nop sbb add mov mov xor aas mov mov jp pop data16 pop pop xchg out xor ss notb add and xchg sahf jne fisttpll rorl mov (bad) in imul pavgw stos mov jle (bad) pop sbb lret pop push push xor stos aaa (bad) sub jbe mov pop or add sbb out ffree je mov jae mov jo aas imul and jecxz pop jae pop in test jp je loopne adc (bad) pop fstpt cmp mov push adc push add xchg jmp sbb inc cmc jo scas test mov xor repnz repz (bad) xchg or out lcall popa cmc lret and (bad) or xchg lret jnp cli test jbe cmovg fisttp fxch js loop xchg (bad) mov cmp ss clc test add outsl hlt cli in cmc xchg rcrb xor add pusha mov call cmp aaa arpl xor (bad) es or hlt movsb xor cltd lds mov icebp (bad) xchg out inc stc ljmp xor mov mov or mov call push and adc inc or lret xchg jae (bad) mov pmaddwd jo adc fs mov dec pop into and sahf xor div or cmp lds enter arpl popf repnz ficomp (bad) repz pushf imul or mov lods (bad) in fisubr or imul and xor push add jne je,pn ror in and incb push mov and xchg je aad sub int insb mov or stos adc mov xchg imul xor test aam xor xor sbb je in sbb inc xor in jae jmp pmovmskb in inc imul in sub and xlat int3 add xor sbb jge cltd sti jns stos enter jne unpckhps and cli jne je adcl jl insl mov xor push cmp jge mov into or and (bad) sbb mov mov stos outsl inc mov mov mov es lahf pop out mov lea push jnp movsl in js jne sub (bad) mov cmpsb lret sub and sbb (bad) test jae test fwait dec inc mov push insl lcall inc add aaa and mov js sbb xor sbb adc loopne mov subl xor or mov dec push cmp xorb push out jnp int and stos pop cmp mov outsb je push lahf (bad) mov sbb mov xor sti sbb xchg mov push and fildl cwtl xchg fiadd and push xor cmp fildll stc sub and adc or lea xor and sub (bad) ja add clc mov jno add adc fwait movups mov rorl adc xchg xor in jle ja es or cmp loopne fimull push sbb aad xchg pop aaa in xor pop push adc mov mov and in js and jne scas and xchg sub aaa mov les adc gs clc xchg xor push aaa mov adc push popf scas xor inc mov fidivl mov jno stc inc or lods sbb pop bound cmp xchg sub fwait repz mov push data16 aam mov pop mov xor out pushf pop xor inc mov add xor jns popa fdivl sbb xchg imul xor inc fcom imul mov (bad) mov popf jb shrb xchg insl adc (bad) loop outsl (bad) jp fistpll dec out add mov sbbl dec jg imul adc xor hlt mov loopne or xor or je adc lods xor cmp push or fnstenv sbb jb (bad) out cltd ljmp dec js mov loopne jp push jb mov xchg les lcall in push jo add std out xor xchg mov imul add jae lret (bad) xchg add xor divl mov int3 mov cmp add fistp dec daa xchg arpl xchg into (bad) ret xor test push loop std add and or jmp int3 xchg ss setg stos cmp mov cli add ljmp addl (bad) fidivl in iret repnz xor mov xor mov xor in mov insb xor cmp add xor scas dec clc jge jl out (bad) xor pop xor aam int js lahf mov mov push (bad) hlt fs mov popf cld aad dec add or xchg orl cmp ds mov push dec jecxz jo sbb stc add lods das pop cmp jno mov inc (bad) js mov mov xor cmp bound and sub xor (bad) mov cli fidivr outsb test adc and xor sahf xor cmp pop cs mov jmp add jo cmp js aaa xor cmp hlt sub push adc (bad) (bad) mov popa sub les xor fs cmp add stos jae or pop push mov xlat mov xchg mov mov and sbb ja les aaa mov mov adc inc adc sahf daa cmpsb lock lea add lods jb outsl pop push andl jp (bad) and jg xor sub shrb ss xchg sbb or push cmp imul push scas mov pop int out pusha sub adc jp jmp mov add mov popa mov hlt sbbl mov push or mov adc cmpsl fisubrl rolb jns jb dec sbb ficoml inc xor stc mov mov xchg fisttp std push xor lea fnsave mov jge pop fist (bad) and jo mov in fwait into mov mov mov pop fidiv xor and mov movlps ret addr16 es lcall mov or cmpsl jp rcr lea push aam imul mov test jl sbbb nop and lret repz (bad) xlat pop cmp (bad) hlt rol ret out cmp mov daa add mov icebp xor push dec hlt xor ds and inc icebp mov inc jae rcrb adc pop setge (bad) mov sti inc add sbb push sbb xor and mov mov repz (bad) fidivrl cld xchg (bad) jmp je loopne jmp daa mov add pop push (bad) pop or and mov repz and sub fs xor sub flds mov dec xchg adc or (bad) mov push in sbb sbb adcl stc jns push and or inc or xor xor jno ret int movsl cmp xor mov je xchg xchg xchg (bad) xchg rcrl dec xor inc insl repnz mov ja dec jg test adc iret xor fsubl xor sbb sub ficoml jmp les int cmp sub xchg adc cltd xor insl std cmp and sahf (bad) jb pop outsb add push fistp out bound pop sbb stos call push pop push fcom dec ja arpl ds jge imul cwtl loopne popf jmp addr16 repz mov sub in das shrl jecxz aas mov lahf jg jae cmp xor mov adc xchg xchg cli movsl sub push out mull lret (bad) aad xor mov cli xor rcll dec or mov cmc js (bad) aam jnp add scas iret adc and jbe push scas dec push jl jg movsb push loope add mov hlt faddl hlt ret std xorb sub sub mov lret cmp mov mov push push xor out jmp repnz cmp pushf push (bad) pop mov xor and daa fiaddl xchg fidivl sbb jmp push fcomps xor bound mov lcall push pop xorb xchg rcll ljmp fisttp add cli imul pop in xor dec fnstenv pop or jecxz xor rcrb rorl sub mov das mov add bound sar ja insl jbe mov aam sbb hlt push repnz std in jecxz or pusha pop dec lods movsb and jge jbe sbb pop and out enter push jno add rcl mov cmpsl outsb xchg dec int3 sti call xchg leave mov push gs xchg inc aaa xor mov mov inc scas aaa or hlt lock adc (bad) rol push test xchg sub aam addb les popf cmp je ja inc mov dec nop pop clc lods mov enter insb repnz jge mov and sahf mov mov jmp push jo fsubs out pop mov xorps in inc xchg mov adc xlat and and out cmp and repz sub adc adc pop cmp dec jno popa daa orb or notl mov dec imul or push shrb mov mov loopne pushf or into hlt sbb les out mov sbb mov pop in (bad) dec pop mov sbb insl mov jg fidivr movsl xor inc sbb cmp or (bad) cli xor sub or add cmp repnz mov aas js nop loope and in imul push movsb inc mov enter mov sbb sbb xchg (bad) mov and jle adc adc mov pop daa repnz arpl cmpsb (bad) clc or pop pop sub pop cmpsb xchg dec out cmp scas hlt cs pop and gs pushf jmp mov outsl push gs mov push mov dec jae xchg in adc ret es lods push cmpsl pushl lds aam cli push jge clc pop sub push add into mov xchg sub push (bad) loopne cmpsb add loope leave lahf mov mov inc mov ret pop jbe lahf lret fisttp pop stc stos sbb adc xchg xor mov andl or arpl out dec nop repz mov js cld mov (bad) mov fidiv and rcrl cld dec jecxz rclb imulb bound ss sbb fstps xor fldcw (bad) push or arpl mov sub pushf sbb mov leave movb int3 lahf sahf dec adc mov jae (bad) dec dec test cmpsl lds jb sub ret ss and mulb adc in mov xor or jne ljmp xor mov dec loopne js nop add mov jnp cli adc lcall pop lret jbe sbb jmp xchg mov test or adcl add cwtl mov ljmp dec stos sbb cwtl pop adc and inc lret or jmp mov xor add sahf pop ret mov daa inc sub sbb gs lahf add mov cld or pop pop jo mov cs mov and jo adc (bad) loop ljmp clc call xor xchg outsl fbstp pop leave in sub jne mov (bad) xor xlat cltd mov cli push pop mov cmp (bad) jae icebp (bad) jnp sbb rcl jns scas mov mov dec jb adc pop xchg stos lods loopne cli mov push call movsb clc mov cmp repz cmp fnstsw add (bad) out clc pop mov xchg rorb sbb xor je,pt cmp xchg (bad) jge inc iret insl cmpsl xor inc sti test data16 roll xor fcmovnu aam mov inc dec testb imul push pop mov push jae push mov int in sub arpl es pop mov add xor or add loop clc inc sbb stc loope rclb cli pop insl cmp xor (bad) xchg xor inc adc xor je pop dec xor mov test cmp mov push imul sbb incb aaa out jo (bad) cmp jbe clc inc loope hlt test sarb ss inc push jno stos cld out movsb (bad) xchg jno dec outsb add nop jmp inc dec cld mov xor add mov ret sbb jns xor fs inc popf data16 mov cmp dec mov (bad) xor stos and jae mov mov faddl fs xchg je sbb bound jg iret and xor adc xor sti inc xor loop sbb mov jbe rol inc jae mov mov sub jle das jns add lret xor pushf dec inc mov sub mov inc mov pop mov movsl ret xor cwtl xor mov hlt mov outsl and push xor adc adc cmp lea inc or (bad) aad and test and xor or push cmc pop jno imul sbb fldl sti pop movsl xlat je imul popa pop mov xor repnz ficoml push ret outsl sbb fistpll inc jmp cwtl sahf cmp mov add (bad) cmc add jbe cmp dec pop sbbl and xor xchg dec int3 mov in in mov jae lock arpl mov es fadds repnz outsb xor and xor aam aad enter stc add (bad) jo dec xor or add inc push or int3 fcomps jne and mov sub rorb push lahf cmp (bad) test cli (bad) mov jmp orl cmc xor sbb pushl leave sub xchg ret add mov std pop sub (bad) hlt mov (bad) mov mov bound mov or pop dec add cmp push insb pop add jno sub add xor leave lea cld xchg push push pop sbb ret jne daa mov mov clc lods push std and sbb xor in scas and rcrb sarb fs pop sti sbb push inc cld aaa inc daa in lds dec dec xor fbld xor insb inc imul add cli (bad) and jno xchg mov inc (bad) clc jge sbb pop push or add outsl in (bad) in jmp ds mov sub fildll addb mov popa int into imul mov sbb cmpsb mov jecxz and pop (bad) idiv jl mov mov cmpsb mov aaa (bad) sub inc ret dec xor jnp ja sbb ja mov (bad) dec cwtl sub clc inc sbb pop or lods mov cltd or cmp scas cli cwtl repnz mov push cld mov imul mov or cmp pop arpl sub pop repnz push rdmsr pop mov imull push xor mov add mov xor aam xor sub iret pop or push inc add sub jl in xor lret iret jno inc cmp out sbb xchg mov (bad) mov adc jl dec pop (bad) lea call mov cmp xchg dec and add addl sbb in repnz jb xor jmp (bad) popa adc jmp xor (bad) hlt xor (bad) cmp or and mov movsb inc shll pop negb push aaa ss movsl in ja out je jle (bad) mov and mov dec jp add pop dec shrb mov pop jnp jl mov sub repz pop insb es jno rorl repz push add out mov mov popf jb aaa sub mov in mov repnz sti scas xor sbb add xor popa cli xor cld sub xor add leave repz dec dec inc xchg lds hlt jb sbb ret and sub xor out ljmp add es sbb imul sub addr16 and outsb mov hlt push fidivrl ljmp call push dec jg mov sti jo andl test lods call in popa enter and xor fisubrl bound repz (bad) push pop add or test imul daa (bad) cmp xor pop outsl cli xor dec aas add sbb pop sub ss in xor mov repnz lret sub movsl inc add in push shl or or mov addr16 mov and mov sbb xor js mov cli into test jno in cltd dec stc gs shlb psraw mov shrl ds out xor cmpsl dec je mov mov (bad) mov jle cld inc je push push cmc mov je dec sub ss mov dec daa pop jno pop push jno insb jl (bad) (bad) out rclb stc cmp fiadd pop fild xor hlt movsb xor lret rcrb leave push lret jle xchg push loop imul and test xor push pop mov jmp xor test and pusha mov sub sbbl fwait out mov jl stc (bad) lock add mov inc pop adc inc repnz push add sub cmc mov mov pop dec nop mov add mov out jge jns outsl add test xor pop mov (bad) jnp loopne xchg jno pushf aam pop ljmp jne inc jecxz (bad) mov pop ror jmp idiv xlat cs mov ret add jmp push sub sub insl dec push adc mov push xor and dec jno sub inc and pop or sbb push push leave out lods out xchg fcoms push into inc xor add adc hlt dec xchg outsl aaa sub call xor inc addl test inc hlt or push lock dec jo hlt lret icebp mov das sahf jge sbbl jle (bad) sti jnp xor in lock push cmp mov add pop sbb cmp loopne push sub inc xor aas xor xor je and xor cld inc and jne btc push pusha lahf jg jp mov (bad) bnd popa mov adc sbb cmp and xor popf lock push sbb (bad) mov enter pop add in or xor mov add addr16 pushf iret mov test loop in xor sbb (bad) inc pop mov sahf xor mov inc dec push cmpsl ret adc push imul sbb jae xor fsubs xchg sahf scas clc cmc xorb adc shr fstpl xor jnp mov call jns mov push mov push (bad) ss repz push jns (bad) gs cli cmp movsb xor data16 sub jo leave push dec mov cmpsb sub jae xchg cld je add mov mov push jmp (bad) pushf xchg inc pusha cs sbb jo jp out push jbe inc loopne repnz sahf cmpsl sbb repz rorl sahf adc pop jecxz adc mov ror insl pop xor adc xor xor jns mov clc repz out scas mov repnz mov nop cli pop cld js hlt (bad) stc js xlat loop cltd mov (bad) xlat xor cmpsl out xor push push fs xor xchg mov jecxz into inc xor and cmp out xor jno,pt mov test xor scas inc xor imul loopne aam outsl mov sub mov into jae call adc out lahf xor cs xor pushf sti sub xor mov ds or push movsb ss faddl lcall add mov pop lahf xor (bad) (bad) mov jbe adc jp sub fnstsw xor jo je pop out push jnp adc es into inc xor in pop std mov and ror jle sub ljmp jl cs xor jbe lods mov pop xor (bad) mov aaa or add and dec pop mov or stc aam pop inc dec lods inc mov sub ljmp ds jne jge sub pop jl mov push loopne aam pusha fidivrl movsb mov cmp cld test or lahf xor and out addr16 cwtl shr dec fcoml mov call xchg add imul push mov mov mov out (bad) loopne fwait mov pop shrl push cld sar fdivl stc int3 pop lret outsl pop add xor in pusha pop xor push push into (bad) mov or push xor fcomip test inc xor lcall das bound aam pop insl sti cmpsb xor inc out mov lods std andl push (bad) jnp pusha je sub (bad) sahf mov ljmp clc xor ds mull loope mov enter js mov cltd mov lock jno jne ja xor inc sub mov xlat popf mov test jno movsl mov jnp pop jno loope mov dec pop push push push jae adc xor aaa jno pop or adc jbe sahf sti mov xor mov loop xor push sysexit xor pop inc mov dec stos dec cmp ja and bound sub cmp ljmp xor popf or or je ret out (bad) (bad) repz inc popa ret lea mov push fldt flds or sub sbb insb mov popf xor sarl (bad) mov xchg ljmp mov jb sbb fsts mov xchg imul mov (bad) fwait dec and int3 popf push sbb out rcll xor jle test je (bad) into jnp jno daa cmp clc inc jmp repnz mov sub jecxz inc ja push mov jle mov and pushf mov addr16 mov cld not add jle,pt xor inc cmp mov movsl bound hlt std lea ljmp jne add outsb popf test adc and xchg mov dec adc xlat (bad) fist (bad) mov push jae out or icebp hlt sbb jae mov lret test aaa sarl in (bad) mov (bad) in cmpsb xor icebp xor (bad) es add inc repnz int3 into movsb jno mov and fdivrs mov ss push sbb mov sbb mov adc std pushf divl pop sbb in call push mov cmp sahf pop add dec cmp (bad) cli outsl out push pusha jbe cs (bad) xor das faddp mov push pop cs cmpsb xor dec mov dec pop jecxz out xchg (bad) inc out jb mov in jg out mov (bad) or jp xchg or nopl mov mov les cmp adc call sub (bad) loop push (bad) aaa aaa cmp xor lock mov pusha adc pop adc sub fsts xor fsubrl scas repnz xchg sahf jmp rcr mov mov test sub inc jno xchg xor sub and inc push sbb inc mov (bad) repz bound pop mov jns cmp add stos jl insl hlt repz add clc inc fist cmc push cmc nop jmp gs rorl int sbb sbb mov loop and or lds xor mov jge add dec inc cwtl inc outsb imul pop fs pusha dec sub add in xchg imul popf popa xor shll inc jae mov sti jle and mov daa iret mov mov lods or inc scas xchg (bad) adc sbb or int3 cmc mov xchg or sub inc sahf lret dec and in aas xor fild xchg call inc jb stos outsb aad (bad) stos fidiv sahf in inc outsl mov clc mov rorl jno out clc pusha mov xor cmp dec mov scas fs (bad) mov sub movsb hlt cmp adc sub pop pop jnp loope lea test addb lcall adc stc aaa jae stos xor xchg out fwait xor (bad) into add xor ret clc add and bound pcmpeqb sbb lods es mov sub ss repnz aas adc cmpl movsb je test adc lock mov mov xor mov pop adc orl dec sbb add sbb sub insb je xor and mov mov ss js bound cmc jns xor jb or dec mov sub test inc loopne test push lret lods fstp xor cmp repz pop outsl pop das fwait xor and je push inc shl xor pop xchg xor repz and or pop jg mov xor (bad) es jno mov data16 push sbb imul rcrl movsb inc mov cwtl xor sti xchg pop aaa jg xor sub in dec mov jns mov aad sub xchg xor test std in push hlt scas out cld xchg mov or stos (bad) pop ret mov out dec imul das cmp dec cltd xchg adc cli mov popf add adc xchg (bad) enter xor jne mov xor mov mov test add xor faddl (bad) push or je fisubr bound repz adc orl pop outsb push movsb ljmp cld xchg xor add sub sti mov aad hlt nop push shrb dec or jo jo enter movsl test cli imul sbb in stos das jne sbb out xor mov hlt dec inc cmp hlt mov jmp out cld mov add cmp outsl cmp cmp jl lret jae mov and xor jns les rep xor hlt xchg cmpl lcall stc xor jecxz xor (bad) jmp test dec pusha inc sbb adc xor orb out (bad) xchg push pop inc sub ds xor jae imul aaa (bad) enter or cmp mov repz sub dec push adc sbb cltd movsb xor jp ljmp stc sbbl movsl or popf outsl jecxz repnz push push mov push data16 je pop aas lods adc cmpsl adc hlt xchg push mov outsb push mov pushf (bad) ss jns xchg in xor arpl bts xor test adc cli pop xchg jne mov repz push mov xor je data16 jmp bound pop add fidivl lcall lds (bad) cmp repnz inc pop popa xor jnp dec fnstenv mov push sub mov push arpl aaa stc add sbbl sbb into cmp pop adc hlt xchg hlt xor pop jecxz sar push aad jns xor decl jecxz pop inc mov sub xlat xor pop push leave add sub sbb mov rorb adc out sbb xor xor push or dec pop pusha aad aam stc jns (bad) mov mov roll sbb movsl dec or sbb aad (bad) imulb adc fistp mov out dec hlt mov mov xor mov push mov sub (bad) xor inc mov out decl (bad) ss pop loopne add fstl xchg into cmp sbb pop or mov outsl adc mov (bad) mov push pop xor jae dec cmpsb fwait hlt mov inc push inc sub lcall fstl pop dec mov dec sub or movsb in lcall imul cmpsb mov popa adc dec jge jnp xor jae and mov sbb ja sar aaa cmp movsl jae mov push adc pop xor add xchg xor mov cs daa add scas fnstsw xchg nop fbstp adc and pcmpgtw and add mov jae pop cmp push push add mov mov stc lds out adc aaa mov push inc sbb push inc sar pop jbe push rorl cmp xor inc pop lahf push repnz push fidivrl jp lods or push mov addl loop jae or push lahf mov mov mov lods dec imul push imul cs daa mov xchg in xorl xor pop sbb stc cmpsb pop xor mov pop cs pop fld xchg dec jge cmpsl sbb mov cmc je imul fsubrp jns xor mov mov int3 ror mov and (bad) fisttp scas aam xchg sbb repnz xor daa mov (bad) mov inc aaa pop insl cli ds loop call jl and rcr clc insb cmp sbb xchg cli xor inc xor divb ja rclb negl mov sub movsl js mov movsb lret sbb pushf xor fdivrs mov jle adc sub jmp cmpsb sbb js sar xorl adcl subb clc ja pop or or rcll popf icebp stc int jge adc in pop mov movsl jge jmp mov addr16 inc or mov fdivrs data16 out jl data16 mov loope sub xchg js push addr16 pop jne mov repnz and inc in dec xchg clc ret addr16 push mov movsl aas mov sub xchg in (bad) cmpsl adc or pop or xor ret daa clc cmp jge mov mov xor dec adc movzwl test jmp adc sub mov in js pushf xor lods add sbb jge adc clc movsl les scas std xchg dec daa outsb (bad) hlt and dec push pop mov clc dec fsts push push movsb repnz push jno inc scas data16 sbb (bad) int3 out adc or icebp xor fsubrs stc les xor movsl and cmp stos inc dec dec xor rorb mov jmp inc xor adc sbb sbb fwait pop mov jne aam adc lods pop mov fucom stc test lods xchg push insl add imul cli lock jmp (bad) addr16 xor jno or popa mov lods js add cmp sub inc shrb push test xor cltd fadds mov mov xchg xor ret bound movsbl mov mov cmp pushf sbb (bad) std sar xor repz cltd das inc inc xor mov mov cmp xor dec or (bad) push hlt mov int call scas out sahf and cli mov mov dec cld loopne (bad) lods std adc and inc xchg and mov mov test hlt sub sbb lds inc out fwait cmp dec jnp incb jp xchg cmp inc aaa mov cmpsl ffree cmc into (bad) pop test pop cmc push sbb int3 mov popa xor bnd jp jmp mov pop dec outsb mov ret cli (bad) mov clc repz aam outsb adc addr16 add xor leave lock push loop mov push jmp add xor inc popf mov mov jae mov mov icebp popf or jbe cmp dec loope fild sbb ret inc in pop int3 mov dec adc dec scas fcmovu idivb xor je pop adc test (bad) add cmpb insb imul aad pushf loope,pn cwtl xchg adc xor shr cmpsl sarl xor sub adc cli lea scas adc xchg hlt pop fnstsw inc daa xor push movsb int add jb xor test scas jae in insb push sbbb pop sub xor fimull lret jp xorl sub lods lods int mov or ja js xor scas test in add stos mov inc jge xor movsl jo cld adc push push cmpsb pop push gs jno cli adc pop add shrl out jbe clc lds out popa adcb add jmp jno sub jp test loop je loope movsb mov mov push aas arpl add push jge sub out cltd add cmp (bad) aaa add sbb lcall repnz pop outsb sub xchg or xor (bad) xor cld mov gs pop xor ds je or wrmsr bound repnz mov fist xor mov es xor rcll jb sub call push and jg inc lock mov mov mov mov mov outsb movzwl push push lea sub mov das imul out xchg sarl mov dec push sarb xor lock (bad) mov and dec and adc sub lods test mov (bad) dec mov push xor pop lock mov inc inc stos xor (bad) jmp jb (bad) out hlt hlt (bad) sahf incb pop popa ja call mov mov xor ja loop pop mov xor pop mov sub pop ret jb dec push stc mov add bound faddl jns and lahf (bad) push std outsb mov cwtl shlb dec pop add jmp into icebp pop jle imul movsl xor mov scas lahf mov int3 sar (bad) fisubl pop (bad) xor and inc xor mov cmp idiv mov pop jl dec jb ds and into inc repnz sti movsb sub inc jo or (bad) repnz dec shr cmp stos sub mov lock ret fbld aad dec cli xchg movsl dec prefetch add inc enter pop xor out xor inc aaa movsb xchg xor add dec adc dec nop out lret add outsl (bad) movsb xor mov clc notl jae pop jge add dec add dec (bad) push xlat pusha mov push pop push xor jp test xor loope sub rorb and fcomps inc dec add test push and (bad) leave sub int3 sub mov pusha xchg push mov incb mov jecxz push (bad) repz adc push pop inc cmc aad mull mov sarb jl popa sbb mov test push cmp rcr xlat mov aad mov pop sti sbb stc aas pop xchg cli or pop xor xor dec add jg xor sbb adc sub cmp clc dec push and jae or pop inc or push pop xchg es fadd add push loopne xor out repz jne les pop fidiv and dec add sbb cs stc push adc jge mov fidiv xchg iret push jle out into sbb dec jae mov mov cld adc stos mov dec adc mov add jle jae insl out (bad) mov fisttp jb xor scas xor cmp dec (bad) into andl mov leave adc pop lea jmp inc imul in adc dec mov and mov push decl clc (bad) in xchg pusha dec push cmp fwait xor loop cmp push leave cmc mov and dec and inc hlt movsl mov das jmp xchg lahf mov addr16 push mov sub adc dec mov sub fwait pop mov ds hlt jb shld movsl pop pop test and dec mov xchg add ds imul inc mov jge xchg mov push (bad) les adc jno fildll in adc push imul iret ss enter mov xor aaa arpl ss cli push into sbb jp sbb xchg dec out and es je insl push or xchg jp es ja xor push dec xor xor push or mov lret mov in neg jp out lcall (bad) xor pop dec aaa sub and or xor enter mov push in or test xor xchg dec xor gs movsb xor lds cmp cld xchg add enter psubsb les movsl dec (bad) mov (bad) imul out stos jb repz roll aaa jbe sub xchg mov mov fistpll push hlt in mov sub dec adc addr16 push mov and stos pop xor dec ret das mov int3 icebp sub pop lods clc mov out sub xorl mov addr16 adc and cltd or sbb sub jno inc and imul jb sbb xchg jb gs mov inc xor iret xor cmp inc in nopl into (bad) outsb xor fnstcw sti mov pop push stos repnz mov or xchg test xlat mov pop or jecxz cld aad stos hlt lock pop iret sbb sbb xor movsbl cmpsl xor adc push inc ss jbe (bad) mov (bad) adc and mov daa or xor rcl sub aad cmp icebp ds std cli hlt out pop stos add jmp cltd xor clc (bad) xor ret (bad) cmp mov jp fidiv inc fs xor pop xchg inc adc hlt push sbb add stos adc fwait xchg sti clc (bad) ds mov cmpsb jmp add fisttpl sub pop mov movsl mov cmpsl dec jg je lret stos adc sbb sbb sbb mov insl inc (bad) cmp xor imul je push test adc jo repz adc ret mov cli adc call mov test (bad) cmc ficomp fldl push bound xor dec jns in mov cmc pop out leave lahf fbstp (bad) mov insl xor add pop (bad) mov dec mov dec dec sub in push and dec and and imul push mov pop mov sub das test mov xchg mov push push or add leave mov in mov outsl and aam cli mov mov xor adc inc out lcall push mov imul in int3 (bad) dec cld ss repnz scas sbb aam cmp out stos jle inc jp mov cmp fcomps xor pushf dec bound jmp popl (bad) dec and aad mov pop call setg mov mov mov in imul sub ss sbb and repnz lds cmp lods popa loopne and mov sub scas xor stos inc xor mov xor daa push pop (bad) bnd adc pushf mov iret rolb push mov xor adc or iret push cmp inc fadd imul in loopne leave cmc mov pusha gs hlt push inc push in nop pop or sub into (bad) out fstps push and adc ds jae cmp arpl iret mov or ss pushf sahf icebp xor jge loopne test xor stos cmp ds sub repz add xor adc out jmp push (bad) lcall xor sbb lcall xor sbb clc xor pop xchg xor mov std into das xor imul daa jb jp or (bad) repz push mov dec adc test lcall xchg sub sub inc xor out fadd jle xor and push push mov fldl std adc mov addr16 add sbb and cmp xor xchg xchg fildl adc es xor insb and jno loope in sub jae aaa xor jne push cmp (bad) icebp cmc sti in xor dec mov stc insl hlt fst test std push mov cwtl fistp xchg xchg and bound stc je das in (bad) mov jge push jmp negl mov rorb loopne hlt mov and lahf xor xchg cs or push sahf push mov mov stos das (bad) jecxz mov or jb ret mov int3 jns hlt and inc inc dec aad mov dec or and xchg cli or stos inc stc ds mulb sub push ds int add (bad) repz xchg cmp repz out add fs push stc xchg cmpsb (bad) out sbb pushf mov mulb rorb std es cmp sub aad lcall cmp cli inc push cs mov imul push add iret pushl fwait subb sub push fisttpll xchg sbb adc mov cltd sbb enter cmp jmp mov mov push cli mov vxorps in pop icebp mov test fistpll jae pusha cmp rcr mov in mov adc adc xlat mov imul sub rcl mov jns lock xor dec adc pop inc fdivs jp mov or jle fnstsw insl add je jno push mov push rcl cli clc rcrb dec mov jge xchg or xchg fs sub fs aad inc fisubrl leave push fwait xchg imul addr16 xchg jg sub pop repz pop pop add jge addr16 stc out cltd add nop out dec aad in jae incl mov (bad) fstpt and cs shrl lret sbb or jno push or xor add cmp insb imul cmpsl fwait push imul (bad) addps aad outsl and pop rclb cmp movb and ds inc xchg or and vunpckhps inc push dec pop dec mov xor fiadd jb mov mov adc push jp fnop dec (bad) mov cltd sub inc mov xchg mov sub (bad) gs xchg iret push mov shll pushf aas and aad shll and xlat cld xchg pop faddl fwait rorb mov mov and jmp (bad) cmp sahf mov fwait (bad) xor mov pop push sbb jle cmc cmpsl lds mov push cli repnz cmp jno jno les fwait aas orb and xor push aaa rolb jecxz pop ss and jo dec inc mov pop ja jb adc int jno test ja xchg push mov push cmp adc mov dec leave sahf fidivr mov and mov call add repnz jg jge mov ss jmp mov push cli imulb adc push xchg popf out movsl pop jge ficomp cmp inc jo sub sbb xor outsl cld dec stc cwtl aam xchg mov scas lods cmp xor es dec in cs xor iret loop jnp xor les fwait lock xorb adc imul inc mov test sar das lahf aad ret inc aam adcl insl adc movsb pusha fistp inc xor xchg sbb cmc or das fbld outsb je adc jg sub add xor cmpsl je ret push lods adc aam cld adc icebp cmp frstor daa sub loope pushf or xchg cmp add mov aas pusha xor in xor and xorb or xor xchg decl lods lods add mov into inc mov cmc aam adc test xchg (bad) mov fs (bad) in mov mov adc xchg xor outsl repz inc lcall pusha adc sti stos mov push add stc aas xor scas lods outsl cmp (bad) mov xor insb jb pop mov sbb or push pop mov xor cld jmp xchg push sbb setp repnz es lcall dec insl jne and les xor cmp dec xor hlt mov fucomip xchg adc mov cmp mov xor sub or jno inc test enter cld pop xchg push jae or in test jo scas mov into icebp inc pop dec inc ret jg out add imul push push xor add inc adcl and and mov ficoml xor aad and incl push push add (bad) hlt (bad) (bad) icebp mov jo jno out or cld fcoml ja jae push pop jmp pop dec adc cmc sub cltd pop arpl imul hlt dec pop adc cmc jl xor movsl ret fsubrp or repz jns and (bad) jmp cmp (bad) sbb outsb (bad) adc sub repnz add inc aad repnz xor arpl xor movsb push test and clc xchg (bad) in add cmc test sub pop hlt cmc push movsb jg xchg jecxz bound test in lea cs ffree (bad) cmp jo jns addr16 dec mov imul aaa popa jb or sar and loopne test sbb push jmp and xchg mov add push mov mov sti adc cli mov add (bad) xor xor repz arpl xchg divl cs sub cltd push add js push sbb bound push jp xchg cs push std adc rcll and sbb lret addr16 sbb repnz jnp mov and jge xor jno and out dec xor es cli cmpsb jb push daa and hlt bswap shr jmp mov xchg (bad) cmp add or cli push jl jne aas inc repz add ret ret into pop and inc add (bad) mov mov mov push jmp sbb mov xchg jno sbb movsb push mov sti jmp or pushf mov mov sub out add test sub les lods or inc mov and (bad) jbe pop (bad) mov sub sub loope popa fstl sub movsl xor mov loop (bad) stos jge insl loop mov scas inc sub pop dec out in inc inc push stos adc push mov cmp aam cmpsl mov enter xchg jb lret mov das xlat int3 jecxz outsb cmp add pop repz mov (bad) xor sub std jp mov sbb xchg mov (bad) dec and in push shrl xor lds jno (bad) repz push cli sub mov and (bad) or mov mov xor dec push inc or fiadd sub fisubl dec popa or lahf lock mov das adc gs cwtl xor mull imul jne fistl mov xor jb fbstp mov aaa xor stos divl mov or adc pop push inc inc pop je addr16 cld aaa cmp hlt (bad) aad jg in popa (bad) pusha fistpl mov dec verw js push fucom or in mov jp hlt jle out pop xchg or fildl and mov loopne jecxz addr16 xlat mov sbb packssdw add repz pop daa add xor addl test hlt fisttpll pop pop into xor scas aas imul test xor mov mov adc test jmp mov loop (bad) mov or or push push push inc push pop push xor sub mov xor std daa stc xor nop ret loopne xor and mov xor es xchg hlt lret ja daa repz cmpsl xor sbb mov lods pop push sub add push or jnp push and ja xor adc sub pop sbb pop es test enter scas jge fisub pop pop cmp jno cmp xor decb fwait cmc push ds aad nop sbb fnstcw inc (bad) xor mov es xchg sar push jg loop jmp idiv inc jmp fidivl sbb lods aam (bad) mov push inc faddl (bad) push mov fildll aam cmp jecxz sbb jb clc in (bad) (bad) xor or inc adc (bad) (bad) aaa outsl in imul and adc cli jg pop or aaa xchg xor push insl push pop push adc in int and inc jae lods cmc adc xor mov loope xor adc sbb ret mov add mov out test xor fsubrp aam adc sbb push pop jns clc pop push mov xor pushf (bad) fnstsw jae sub insb xor push leave insl daa cmp xchg imul lods inc mov (bad) cmc push movsb xchg cmp xor cmp or xor mov inc jbe je cwtl and js ds xor xor and lods cld in insb loop sub dec push xor rcr aam mov cli icebp (bad) xor outsb cmp mov sbb dec jge stos ficoml xor or jae mov js and inc cmp je in cwtl mov (bad) jns inc xor lret and rorb and call lods ss cmpsb je jg arpl (bad) (bad) mov add repz mov jae test fst sub xlat or call cmc mov icebp mov fbld adc repz pop movsl aad ret push scas je,pn fcoml dec add call push and sub mov ret faddl mov xlat repnz add mov mov cmp pop pop inc push lods movsb lds cmp lcall ret jmp in mov aam insb dec mov lcall pop or mov sbb in mov mov dec xor push and je jmp je jl insl inc movsb mov fbld insb jmp (bad) push neg aas mov in mov movsl or inc mov popa or cs in xchg fild or xchg xchg jnp xlat sbb enter out inc adc add mov repnz jae jo fdivrs dec in xor and and jp ret cld dec push mov mov pop sbb cmc insl mov adc cld jo test jg jae cmp adc lods aam xor mov dec xor movzwl mov mov sbb popa add fidiv sub rep inc sbb push jmp or cld push mov shl aas dec or add jge call push cmpsb daa ret inc ds loope sbb mov scas (bad) les test ret hlt cmp push inc adc in repnz in loop ror adc popa icebp xchg aaa movsl xor xlat add stos cli mov rorb add xor xlat inc sub scas jae xchg das roll mov pushf dec and mov adc add pop adc push stc nop dec mov mov popf mov cmc popf ret push pop dec enter fimull out mov hlt jbe push mov insl nop mov dec xor xor mov mov std mov and (bad) and fs (bad) out add sub fisubl loopne aam pop xor xor stos pop aad mov fnsave add (bad) xor and push repz in ds jo cmp and or ss fs or fldcw jo pop push cld xor hlt ds lods jmp xor out mov outsb sub clc lret jae das inc sbb xor inc (bad) mov xchg repnz mov jo inc out xchg cmp xchg psubsw and and jmp arpl sahf jecxz push inc add xlat pop sti mov xchg sbb test xor outsb fucomip scas jae in loop and xor and lock and cmc xor pop imul fsubl push push mov fisub movl sbb dec mov arpl inc cld cmp outsl mov xor xor jp and push lds mov and stos jbe (bad) xchg fs (bad) addr16 push mov mov pushf sub mov jno inc and add shlb out ret xor cld xchg inc rcrb jb xor addb xor or mov and xor icebp enter mov jmp fisttpl xor addr16 jmp push pop or ss push add push inc mov add pop mov jb fnop fnstenv inc mov test mov mov jns push and imul mov inc cli inc dec sti adc enter jns push popf sub cs pop or mov xchg jle inc adc dec xor sahf add ret sbb fcompl mov mov push mov lods jno insl inc sbb imul dec jmp jno xchg pop mov cltd xor addr16 mov mov cwtl xlat and adc and push adc repnz std dec outsl repnz bound xor xchg add orl mov jo jmp clc scas fwait xor outsl push inc aaa mov loopne pusha sbb fidivl mull or dec xor repnz lahf add mov js in sbb xchg xor sub dec rcrb int icebp out mov lods add insl cmp mov jnp in negl add lret pop popf insb mov mov cmp movsl stos cld fisttpl je mov enter lret xchg sub and loope (bad) (bad) mov and es mov mov add ss and jp jns addb les movsb xor pop xor (bad) inc pusha add stos xor clc or jecxz mov (bad) or lret je mov ja loopne mov test out sub or mov cmp sahf xor jb clc fidivrl jmp xor xchg xor outsb (bad) add cmp lcall cmp out xor pop cmp add js sbb loope int3 into pop jo dec insb jl adc into inc xchg subb sbb js clc hlt les pop push and sub pop sub push test xor push cmp arpl pop hlt sahf sti mov add hlt jp lcall aam into and add aas test inc cmp mov sbb push sub dec add inc cltd lret inc icebp imul stc fidiv cmp orb mov fdivrs pop dec add and mov pop sbb fistpl pop push sbb xor scas jb sbb popf pop xor cmp std mov or mov movsb or cld sub in enter in xchg mov (bad) loopne xor or push pop aam or pusha je rcrb (bad) adc lcall mov add cmc xor mov cmc or cs adc mov out pop xor mov imul adc and mov xor xor dec xchg lret or mov das rcll ja cmp add dec xor mov push dec mov int out sbb (bad) xor push andl mov aas dec cli mov hlt sbb das pop add jmp xor sub cmp rorl icebp mov inc flds hlt mov xor jne push jo,pt imul jmp add jle inc adcl jp mov data16 fnstsw (bad) xor lock dec sub xchg and xor sbb add xor ja xor ss or and inc (bad) ljmp xor push xchg je cmpsb adc mov sbb pop repnz enter jns (bad) mov or repnz in mov xor xchg add aaa push jp stos lods int3 (bad) push daa inc jbe add out fwait ja pop xor adc mov repz enter push dec into jo jb add repz pop popf cld clc add xor into jmp ja sub mov arpl jge push movsb pop mov sbb or adc call xchg xchg sti ja inc adc rcll jmp daa cmc sub push ret cmp adc push sub (bad) sbb cmp sub cltd out aas inc jge add add inc mov aas add inc jmp jb dec (bad) enter jae hlt sbb ret add add jne sub dec bound inc mov fs inc cmpsl dec pushf in mov adc sarl sub add aam bound sub jo enter xchg mov dec jae xor icebp (bad) jb jmp pop hlt or gs xor mov dec jge adc push inc ficompl mov int3 mov popf aad rcr mov inc xchg and and (bad) (bad) rolb cmpsb das jecxz fdivl lea cmpsl or (bad) inc mov cmpsl mov mov jmp inc (bad) and and mov sti stos push dec add inc push enter mov push fcoms dec push lods xchg imul inc cld (bad) ss out and mov adc pop jg test or daa push sarb lcall mov out in mov comiss les jle jb sub mov fadds aas jae push add or (bad) sbb pop xor jg or test xchg dec push or orb addb mov aas cmpb or sub imul insb mov imul xor dec jp mov (bad) mov outsb cmpsb repz rclb sarl mov cltd pop pop or xchg mov cmp mov push push (bad) mov jmp sub mov sbb cli mov imul and pop (bad) push loop adc aam mov loopne mov lahf je push inc push shll mov push push mov adc imul mov mov aaa pop xchg dec pop adc scas or mov sbb (bad) into fsubl jge xchg repz icebp add (bad) cmp xor dec cmpsl into xchg je nop adc push push imul or dec xchg mov pusha mov adc je bound xchg push roll jnp or adc hlt test faddp mov das clc sub xor cmpsl ljmp insl test pop out scas sbb insb lahf (bad) xor cmpsb outsb imul xor ljmp mov popa popl imul inc iret mov in mov jmp add cs mov imul xor roll xchg imull cli push add push or jmp sub adc int3 cmp sbb lds ret clc jl push jge dec add test les mov inc push mov inc jne push test mov insb es sahf stos movsl outsl popa mov mov ret out dec das cli (bad) je ror lea stos clc ret das inc daa xor inc pushf or out push mov or leave lea sbb mov enter dec mov sbb repnz jle sbb (bad) ret or dec repnz sar mov repnz push xor jb ja stc dec xor jnp sbb mov jge shl jns cs xchg sub pusha push push por mov sbb jmp ret push test cwtl sub ds push bound adc mov jmp pop mov int xor pop cld xor add fldcw (bad) call mov lods mov pop sti push xorl jecxz repz test sahf or inc lds stos dec pop pop cmp gs dec and inc jae cmpsl pop jns mov mov xor imul ret adc ds push arpl and fs aaa subl or dec jns dec sbb push bound cs jl pop inc xchg test add fmul in sub jecxz push lds mov mov js cmp dec mov sarl rcr jge sub inc dec clc repz lahf add pop inc decb movsl outsb aam adc mov cmp ss (bad) imul push pmulhuw mov hlt dec movsl nop fisttpll pop mov test loop stc cmp ds or (bad) fmul aam mov jmp xor sahf popf fdivl dec adc aam nop xor fld1 xor cmc and jb mov xchg or or add daa xor imul mov iret hlt shll jle jl xchg jns cmpsl mov xor lcall or sahf sti and repnz mov clc test jne or adc bound lds pop lcall icebp (bad) cmp add jle inc lcall push dec outsl and stos repnz jmp dec jle adc mov mov cld cmp hlt sub and and xchg jmp or mov lock insl pop sbb (bad) xor popf adc mov aas xor jns cmp xor aam xor es repz cmp sub pusha push jl xor inc mov xor pop nop pop mov je xlat loop test xor ret add in mov test nop fild imul sub jmp dec add in or ds roll iret xor mov adcb mov les nop xor sub jg jle lods adc xor insl pop pop sbb je,pt sbb enter cmpsb mov test out stos xor (bad) sub dec mull or push xchg xchg lret and xor mov scas movsb imul out xchg inc roll mov lret fcomp jp push mov mov push or mov adc lcall nop pushl jge and mov je int3 cld add adc or repz mov cmp lds xor cmp pop nop je fstl faddl aad jg xor or jno jmp fyl2xp1 dec je in out jecxz jns jg in cli scas xor (bad) ja test jb movsb movsb push sbb scas sbb lret jae jns adc es ss aad or dec mov push clc xchg call jae repz aam xor xor int test daa out mov jle cmc lcall repz out cmp dec cld call in mov xor cmovo repz loop jg cmp push aad mov lret rclb dec js xchg xor mov cmc test sbb mov sbb add mov jnp jo cmpsl stos inc outsb or jnp mov aas hlt andl aam pop or mov sbb les stc xchg shrl in fs dec cmpsb xor adc mov cltd inc push xor pop out jae mov stos scas sbb adc ret jb push mov mov in cld xlat pop pushf xor push inc mov ds repz andb fistp xor imulb bound out xchg shr push xor int3 sub dec (bad) sbb push or jge (bad) adc xor mov ljmp (bad) xor shrl in pop or push jns cld arpl clc inc mov data16 cld or std aad and je mov add or add cmp lea ret adc addr16 jp out jns mov fidivl push push cld cmp js dec xor or test push ljmp pop cwtl scas js xor xchg xor jmp lods adc jne add lods in scas add xor adc mov add repnz mov xor int inc xor adc lahf movsl fdivr pusha mov or cld pushf inc imul (bad) jb test cmp (bad) sbb jne movsl and xor adc lods std xor add fnstcw mov or or and outsl jnp cli mov or xchg hlt cmp mov sbb or jbe sbb xor inc inc add and cli dec and ss incb daa (bad) adc jl jmp insb cltd enter ss sbb cwtl test adc or and call outsb mov xrelease pop jp or pop mov (bad) cmc adcl int xor adc sbb and sub fcomps mov ret push and jmp (bad) and in and jmp cmp aaa jno xchg add lea gs mov adc jno jecxz push mov push sub clc sub scas push test jb mov gs jge sar mov rcrb jb jmp adc ds aas or sti mov mov mov aas push and (bad) scas movsl xchg nop dec in sbb mov jno push add imul repnz sub ret aas aaa dec cli leave imul fidivr je adc icebp adc outsl jne mov push inc or rcl push mov (bad) iret add mov or cs and fisubl test cmp inc sarb pop imull push jp out xchg mov pop and pop or arpl cmpsl jmp pusha arpl cwtl mov xchg (bad) lret dec add or jle cltd adc lods mov je inc fnstsw (bad) setge cmp std push stc lods (bad) and aad xor cwtl (bad) xor pop or cmp xor sbb push ret ss pop dec pop dec jno aas inc bound mov add mov add xor es arpl mov mul add aas xchg mov push stos sub push sub std mov jbe testl or stos (bad) jmp dec xor push adc mov pop mov aam rorb movb insl mov xchg cmpsl je pop es xchg push xchg xchg xor nop inc movsb cs jnp xchg js pop cmp in (bad) sti push clc test mov jp mov mov test xor pop mov out jno sub push cwtl nop test sub (bad) aam popa mov push xor into fs out rorl dec xor sbb mov (bad) mov stos outsl adc mov mov sbbl enter rcll xlat jp cmp je aas fadd ficomp jmp into push dec fiaddl mov xor jge mov js mov subb inc xor icebp and mov enter cs jno add (bad) jge aam out aaa and cmp ficomp fisttpll sub int enter aad mov xchg pop sub or out ljmp rcll fs push add mov fs adc ja popa (bad) pop cli sti xor idivl clc xor cmp wrmsr inc cli adcl pop fsubrl test sub (bad) jne adc pop inc in and dec adc lea stos or push fistp mov xor dec rclb sbb imul pop xor jb cmp push jge aam pop (bad) dec adc push pop icebp mov push std lret imul and push dec dec jbe (bad) les sbb and daa enter out enter and repz sub cli ss cmp movsl sub push mov jnp jae xchg cli ds mul fwait mov and mov bound mov aam jo aam mov or jle (bad) xor nop movsl lea mov and mov mov scas lock adc aad xor xchg loopne movsl (bad) cli sub popa push xor mov jne js mov ljmp mov inc add xor sahf lret jo loop or iret sbb sbb pop stc divb jo cmp and or aaa inc (bad) jnp stos pop xor and popa lea jl adc jo push push xor sbb push push xchg addr16 int3 push mov sti add leave lock xchg imul imul xor imulb mov bound (bad) mov sbb mov cltd (bad) ja pop jb pop or add mov test mov add ja cli mov ds xor les mov cli das sti cmc sbb xor or std cmpsb (bad) js dec jne or jno inc mov out arpl dec dec mov add out adc mov cld cli enter (bad) scas add mov adc pop pop aad sub jae inc and dec dec rolb mov rcl dec add and lret inc jne cmp test xor jo jno sti push jmp xor je mov cmp in add pusha xor into icebp fcomi hlt or dec dec or sub and leave (bad) xor add bound dec add (bad) cmpsb xchg mov (bad) push mov cld mov (bad) xor out hlt xor mov das pop inc (bad) ds sbb notl cmp into jecxz dec xor sbb xchg xor outsb cmp mov cmpsl sub pop adc push daa push jb je,pn adc (bad) repz xchg sub xchg mov lcall xor lret and xchg push inc cld jb fcmovnu out push imul xor mov mov xor mov inc dec test jnp sbb movsb es stos pusha xor jbe je xor sbb mov pop sbb movsb test stc andb cmpsb out and mov jp imul mov adc mov xor sarl lret lea mov call dec lret fistpl sub test ja cmp mov fnsave dec sub jne cwtl cmp popl test pop xor or fmull das mov or adc mov cs shrb (bad) bound popf aas adc outsl jae jb,pt push sbb adc and add iret jbe dec leave add push inc dec popl imul rcrl je jae into ret push test dec cmp test and cmp mov lock adc in and add sbb xor sub pop jg bound adc cli imul loope dec mov jo int inc loop jae call scas call add in fild mov xor mov sub pop or push jo cli fisttp stc popa sub xchg jb push addr16 and mov mov dec sti test gs jns pop mov jb arpl mov lcall mov je adc popf sub lock rclb cs out aad out fldl sarl jno cmc fsubrl mov int3 push cli and sub xchg mov cmc mov or mov arpl cs mov add ret pop dec xchg xchg mov out js (bad) xor inc xchg xchg aam adc mov test in mov dec cmp sti cmp test jle inc xor test stc popf fbld mov jmp sti xor sub cli repz jle sub lcall sub rcr movsl idiv or mov mov out mov mov jb loopne lds dec add mov into xor (bad) cmpsl inc nop pusha and sub cmp fcoms std inc mov cltd and xchg test fwait popa ja jnp dec sub fidivrl stc int cmp and cmp pause cmp in pop in dec repnz mov dec mov inc gs jo insl dec mov cmpsl dec fstps jb push lock and sbb aas jb add jne adc push sub pop and jbe inc add sbb hlt (bad) hlt sarl mov andb inc in (bad) jns fistpl mov test push (bad) clc movsb mov cli popa and insb or (bad) int mov pop scas push sbb push mov adc mov cmpsl mull popa imul cli stos out lret or inc lretw pop inc repnz xchg xchg add dec cmp mov push (bad) (bad) or loop mov mov jb sahf leave out adc aam scas lods js imull push xchg sarl xchg mov adc push cli das fisubr push mov adc enter cmp rcl movl push (bad) jmp push mov call pop ds mov andl loopne js jmp std adc and push (bad) mulb into xor jge (bad) clc xor push sarl aam mov dec movsb add add push bound mov or bound xchg xchg pop es scas xor les int3 fldcw (bad) repnz ja hlt and jp ret (bad) mov pop loop sarl xor mov (bad) xor or jge jnp xor lret xor add add cmp xor inc xchg insl les pop jmp jne icebp jb jbe,pt ret sub sbb push movsl or mov (bad) int3 jnp and adc mov (bad) cmpsl mov je in xchg cmp adc sbb sub jle int3 cmp xor mov or pushf adc add push (bad) stos pop xor sbb xchg xchg insb icebp adc inc pop dec xchg ljmp cmp push or (bad) loopne or call xor inc repz cvtpi2ps mov jb add pop adc and sub cmc mov loop mov ret loop mov jb inc sbb pop mov xchg (bad) jae mov loope stos pusha lods sbb and (bad) or pop push ret jb (bad) sbb (bad) mov adc push add inc sub pop aas mov int3 (bad) xor push aam mov pop js gs jg into sahf sti or loopne or loope clc test push sub mov inc fiadd cmp mov cmp test pop stc notl xor (bad) orb mov mov mov adc push jno cli and dec in popf stc jle ss inc xor xlat jp mov out mov xchg ds sub cli mov sub cs inc mov pop mov xlat out in xchg mov in les ret sti imul dec cwtl or xor pop adc movaps adc mov mov xor jno dec push cmp hlt push cli jmp aaa cmp xlat jg push sub clc loopne mov dec inc (bad) mov xchg iret cmp lret sub lea push adc das push xchg fcompl jp and scas mov mov mov mov insb outsb (bad) or nop xor mov stc divb push jg sub cmp xor push pushl sub stos jg (bad) xor lods lret sbb sub imul or mov ds xor push es push cs pop aas xor iret mov mov fistpll or sbbl mov pop cmpsb jo cmp add xor pop add mov es jl pop mov inc xor jg lds xor loop fimull jae and jmp push std xor lods xor call dec mov insb xchg movsl sahf mov sbb push mov push mov lret cmp (bad) call inc fsts fmulp sub inc test add push repz cmp dec (bad) jns xchg xchg bound (bad) fnsave add and scas cmp mov mov loopne out mov jp adc sub daa jae dec aam sidtl out repz add bound xchg push jae pop leave enter addr16 (bad) ljmp jl repz in mov push xor adc xchg les xchg sbb dec pop pop sbb in jo sti pop adc outsb mov enter (bad) xor outsb xlat xor pop (bad) xor in sbb mov sub pushf aaa add out addr16 pop push pop push lock push lods mov sub sbb sbb mov popa (bad) or imul icebp cmp mov mov in andl in and lahf imul mov mov cli movsb and ljmp cs mov xchg mov mov aam addr16 out popf sub cltd and jg mov mov add in sti xchg gs out xchg adc gs cltd jle add push aam ja mov inc and aad xor test xor jecxz push nop into xor jns jmp sti fbstp jo ret mov jo or test cli mov das sbb scas fisubrl (bad) daa mov mov std push ror lods decb (bad) (bad) mov js and les jae add push mov mov movsl cli lahf mov jb jp or mov js xor push cltd fcoml adc ret sbb mov pop test cmp cli jno jmp adc shlb call lret cwtl and mov shld sbb (bad) jge or mov add push push push sub mov dec aas push popa cmp mov aad fwait push addr16 sbb das das adc incb nop push sti mov adc out jg test iret and cltd xchg popf mov (bad) ss jae cmpb mov (bad) lea and (bad) int3 vxorps and sar (bad) mov in xor or mov aad iret das and jae jae xor push pop ja add ror das mov mov xor mov adc nop xor or divb sbb jb xor sub dec test decb jg pop push xchg fistp xor in mov xchg mov (bad) ss jle out xor pop mov aas mov push xchg mov add les push xchg imul mov cmp dec lahf xor hlt inc adc push cmpsb mov loopne sbb inc xor push or xor popa cmp pop (bad) je int jg pop mov xor mov (bad) mov pop scas aaa cwtl es out and add xor and mov sub adc cld cmp xor sub dec jnp adc add mov bound jmp (bad) sub jae xor ret fidiv adc clc pop jl scas cs fs add push dec std push lahf cld out sbb mov jg mov mov lods or xor adc mov inc xor cs mov inc push jg mov nop or sub jno stos mov cmp scas repnz cs xor add and hlt insb pushf lds aad fisub sub xor sbb jge test (bad) jp mov xchg into pop push (bad) and mov pop aas sub fbld sbb add les mov mov std push cmp (bad) xor pop dec fdivr jae mov adc jp mov shll push cld xor ret repnz movsl rorl sub cmp popa aaa dec inc es add adc iret or stos pop inc xor adc xor aam xchg das xor std (bad) jmp jp sbb pushf cli pop std into or mov cs insl xor pop lock sub xor stos jge and cmp hlt icebp push sbb jae mov or add cli (bad) in mov or jae sbb adc inc rcr rorl jns sbb in pop jecxz sbb nop (bad) movsb imul insl push adc enter cli repz mov jno sub push add mov cli or (bad) jge mov rcrb push aaa loop sbb adc and std lods movsl aad and negl clc sub jp (bad) leave adc cmpsl les cltd test jb xchg fiaddl ja hlt lods xchg jo inc lcall jmp repnz pop iret js fdivl or mov inc mov movsb ret movsb (bad) mov inc jb jne sub imul xor lahf cmc xor and scas sbb out pop cli div or mov push adc push repz in loope inc mov sarb add sbb test iret or jmp adc and mov or cli jmp mov test mov jge cmp adc lea mov lcall mov aad xchg ljmp jno aaa sbb and xor pushf (bad) ret sbb jle inc bound sbbl mov cli add sub xor mov jle mov xor adc inc mov cmp cmpl and mov cmp pop bound lock and (bad) jmp jns out jp add pop test mov push or js xor cld shrl cmp cmp aam dec xor fstl adc cmp fcmovbe mov das mov insb jbe fcoms inc (bad) aas (bad) hlt inc add je,pn sbb std mov xor cmp cwtl add dec rcrb mov cmp adc mov mov inc cmp jnp test lahf jnp xor lret outsb xor imul mov cltd adc inc fs or mov adc imul lcall pop int3 dec sub cli push ja pop xlat mov jnp outsb or mov ss adc rcll addr16 cmp fnsave cli pop add xorl ret lcall xor pop inc xor mov pop pop add jmp sbb mov cwtl repnz jno pushf jns xchg mov repnz int3 xor dec push mov pushl sub or inc pop scas xor mov dec inc imul std and mov stos push xor add mov outsl xchg dec mov xchg inc je and insb xchg cmp or mov leave lea test cli xor popa mov add cmp hlt rcll xor insl jae loop sub xor jl cmp xor jg lcall jmp roll leave pushf ret xchg je stos aas das xchg inc push outsl mov push xor aad ja jo hlt lret sub mov sahf mov clc imul push pop (bad) je and xchg xor test and dec sbb leave pushf jo jae lods clc das mov insl push inc pop call dec add mov in lds clc jno ss in (bad) sub lret pusha mov mov cld movl das movsl mov ficompl sahf mov dec jmp sbb mov test repnz push pop or sub fisubr xor stc cwtl stc push xor dec ds mov fst (bad) mov and mov push xor mov jb jl lahf movsl pushl sti in jge xor or subb jg add pop and mov bound shr mov outsb xchg lods push mov add repnz sbb or mov jge bound adc sbb nop andb pop loope (bad) jo fwait mov pop sahf jmp jl js,pn ficom mov loop test movsb (bad) jae sbb mov out xor mov xor jmp jge pop pusha outsl jmp sub sbb es outsb out or sbb push adc or cmpsl xchg cld adc push push mov movsb cmp cmp (bad) repz mov les fisttpl xor or xor icebp insl out test imulb cli pminub es jg mov in sub sub add es dec adc fbld jo mov sbb push push mov pop (bad) pop xchg (bad) ror dec xor push pusha adc sbb int jg ret jns cmp ds sub or inc cmp out sbb adc into cmp cmp inc shlb int3 fistp pop jmp std add test hlt adc xchg add inc mov lcall mov jno mov je dec xchg jo repnz in fs jno inc cltd xchg pop int xor stos mov push imul xchg test nop fsts push add icebp jno inc aam push inc repnz pop adc adc adc sub lock clc movsl cltd lret push imul sbb mov jb mov movsb or mov xor or sbb ret lea cmp sbb outsb mov and inc jg cld jge cmpsl in jno jne ret inc jmp jp hlt xor xchg ret mov jl and subl mov jne mov mov (bad) inc mov sbb xor (bad) (bad) cmc fisubrl xor add jp xor sub jae cs sbb cs out or mov jae adc rorb sub push jecxz pushf xor sbb mov scas fildl mov xor (bad) jae jno sbb rcll out pop sub test cmp outsb and add aad xchg mov fisub jb stc inc mov repz movsb pusha mov jnp adcl jo in addr16 adc sub cmc xchg sbb push pusha (bad) sub mov cmp jle pop in stc adc jb popa lahf mov ss jnp mov (bad) mov addl xor bound in mov push aas lods stos xor mov sub pop das sub add and (bad) jp repnz jb sbb loop hlt adc jg clc mov jns aad sub ds in cmp cld add sub jae lahf xor outsb loop (bad) pop add movsb cmovle push pop xor or mov call stc clc add xor xor out (bad) cld (bad) std xor sarl cmp push xor jae in mov dec mov ds ret inc cld add clc jge decl xor sbb push sub push adc or push xor ret mov mov lret or sbb cwtl iret test jnp pop ss dec add jb ds push pop push cmpsl xor mov bound add shlb aad cs (bad) jmp subb aaa hlt (bad) nop sti loop adc adc jg xor mov xchg imul pop sti push xlat stc or sbb lds add sbb inc pusha and decl push repz fmuls adc inc lock sbb push pop sub mov mov adc rcll fimull sbb or mov xchg pop mov mov stos inc (bad) xor pop xlat push cmpsl daa xor mov jmp das jg dec lret xchg (bad) cli orl shrl mov inc cmp inc mov sub sbb and sysexit inc adc punpckhdq mov pop dec jae sbb and lds push inc lret xchg repnz hlt push pop nop es inc call pop popa repnz out add imul mov sub and xor lcall outsl pop push dec add imul mov sub xchg xlat lods or mov (bad) fild adc test add jb scas dec cwtl xor mov cld rol jns dec pop adc dec adc lea sbbl adc (bad) loopne cmpsb or pop jns ds mov into (bad) mov std pushl push dec popa sbb cmc inc mov call adc mov inc jns imul jo pushf dec test out enter js cli pop push jbe imull cmp sub or pop out das frstor inc sbb rol mov dec jno cwtl dec mov in xorb mov (bad) lret (bad) popf ss mov xchg icebp cmp or pop xchg imul mov sub or popl aam pushf mov addr16 mov cmpsb mov cmp ss mov mov jno (bad) lret psraw cmpsb jns lds (bad) xlat movb jmp add xlat int3 sub out out ljmp (bad) ficoml loope js cmc inc or mov repnz mov mov xor mov cmp hlt and int3 sub inc adc adc cmc xlat pop or dec push jnp lods (bad) mov pop push lcall (bad) mov lock mov mov leave adc xor mov add xchg xchg dec add ret sbb or stos jae cmp mov adc xchg pop das xchg gs pushf or sti cwtl (bad) divb adc je jbe (bad) mov mov mov paddd int push jbe enter pop sub xor jbe hlt sbb bound (bad) push loopne jge aaa int3 mov lcall cmp adc cmp sar sahf fcomip cs jmp dec push jp and dec xlat pop fwait cs test ljmp adc ss ret ja aas inc iret int lods pop push (bad) sarl repnz out aas jp aas sbb shrb push mov std cs inc push mov mov (bad) cmc test and push shlb popa dec lds push push bound inc int clc add push aam cmp push add xor aaa mov or sub xor cmp out push aaa mov push jo in push repz and sbb mov stc mov xchg inc decb out ds mov mov jno mov mov mov lret std addr16 jae add rcrl cmp xor fwait push lods xor xchg cmp adc jg outsl insl mov fiadd push dec xor xor add jmp loop loopne movb out test cmpsl inc pop push lret or push ret and aam xorl or andl loopne aam pop mov pop ffreep scas xchg and pmulhuw xor ja xchg mov test inc lea pop or push mov sbb outsb push mov mov dec mov push fsubrl cli inc sub mov out imul sti push cwtl adc test sti in js ret jg lret repnz mov inc repz or mov mov adc lea out mov and push leavew test aas mov daa or test mov das jns sbb pop repz xor cli iret mov (bad) sbb inc (bad) jp jecxz inc out xchg jno lret subb lods int3 mov or xor jecxz sahf hlt ret jle pushf fisttpll test repz arpl add lret xor xchg xchg das imul xor inc pop sbb cmp pop inc cmp mov and jle and mov test jbe add sbb push mov mov mov pop stc push xor jl mov aas mull adc inc fdivrs fs mov xor xchg sti adc mov xchg rcrl xchg fidivrl xor hlt fs inc (bad) cmp lcall movsb xor stos fnstenv mov arpl lcall and pop xor jle sar adc cli repnz je bound fldl shrb repnz jl fistpl sub rcll xor lret loop fimul adc lret add and mov add mov jl add icebp xor loope adc xchg mov popf (bad) adcl insl outsb push repz outsl aad mov into xchg hlt sub dec jecxz jle cwtl lds nop cmp push push push mov popa pop inc js popf xchg xor xor push adc cs inc adc aad push scas (bad) add or bnd mov adc fs stos sahf xor pop adc xchg push push cmp pop pop addb iret mov jge outsl mov sub add sub sti pop repnz xor bound xor jmp add repz xchg mov jno xor ror xor shrb jae push pop cmp and clc push mov mov out test xor arpl xor out mov xchg mov aam sub xor inc insl adc in test xlat ret (bad) imull lret jae jp stos mov push and mov mov push cmp dec sahf lods dec mov fwait das inc or shr lods xchg xor inc push inc push push lods hlt cltd cmpsl pop sbb ja add xor iret (bad) (bad) adc adc xlat sbb mov lds pop mov lods loopne inc adc jg in rclb add mov call mov sub cmp or aam aad push repz xchg push ss cltd aas xor out and inc add (bad) shrl xor cli outsl adc fwait movsl rorb lds inc lcall int (bad) fsubrs scas sarb sbb ror pop xchg jmp (bad) popf mov stos push push mov stc inc cmp cli mov dec and xor mov imul add sub jle in int sbb mov movsl (bad) mov hlt lock stos jae cmpsl dec push adc mov sbb dec jno sub xchg aam jmp mov mov mov outsl or pop mov aas js mov add push dec (bad) ljmp xchg mov (bad) aad adc mov aad addr16 ds push dec push out jo mov aad into push loop loopne fldt addr16 cmp and push ret mov rcl leave pop mov repz cs sbb loopne pop xor arpl xor arpl repnz xchg adc xchg test (bad) push popa fidivl jg das sbb pop fcmovnbe dec sbb sbb call aam sti push or aad xchg inc xchg mov add or jmp pop xchg ja scas xor xor push adc inc sbb int jns pop cmp fiadd (bad) xor mov ds notl shll jnp cmc dec std outsl repz inc sti mov repz and (bad) dec mov ret rcrb pop pop into jbe and xchg test push rol incb xor inc add xor mov sahf add xorb pop arpl ja je lahf xor and test and lcall ljmp xchg mov cmpsb sbb push xchg (bad) mov cmp jbe sub ffreep cmpsb out xor dec add std jg add sub jle aad fisubrl jne mov pop mov lcall pusha adc sub xchg adc bound sub ret sbb jae push jl cmpl fsubl sub mov int3 cli xchg cmc dec jae sbb jb mov mov mov mov push test xchg roll add adc in aam xchg ficompl sub adc movsb sub jo mov nop jmp sbb and push dec repnz cmpsl fdivrp lret lcall cmp dec stc ret repnz and xor jp mov xchg cmpsb xor and mov repz pop cld xchg das (bad) mov add xor fsubrs icebp in pop push xor push stos xor sbb aas add ljmp inc and pop and adc das or mov push push mov pop mov stc push sahf enter xchg jg sbb xchg cli xchg mov mov pusha push cmp xor xor cmp push stos add shll movsb cmp adc xor or or sbb or mov or push cwtl loopne inc (bad) inc push (bad) mov sub enter mov adc in int3 call minps push pop and sbb lcall adc aaa mov repz xor dec inc jge adc push pop dec je sbb add adc push push fs test sub pop cmp mov push or adc fcmovne out xor loopne lea insl jae hlt scas xchg mov out push jno xor je arpl in sbb addr16 xor and (bad) mov cwtl ja hlt push mov int3 mov adc xor jns add inc and jae shr pop popf sub xor sub xchg dec xor dec aaa ljmp insb mov fwait jnp icebp lret pop xor aas das (bad) repz fldenv out pop dec sbb in mov add addl sub mov jne pop or jl xchg jecxz add xor dec fwait pop (bad) cmc lock mov add push or (bad) mov pop aas sbb or mov iret mov insb mov jp sbb enter dec push mov cmp add fstpt movsb pop cmp inc sub lock icebp test mov hlt sbb scas shrl add push les cmp mov mov xor sub cli jmp sbb stc test cli and iret mov mov and xchg negl jge rcll jl mov fwait dec jo jb cmpsb fs push outsb jb mov mov mov adc sub or (bad) nop xchg or add dec xor lea cltd js jno push jb mov pop xor pop push push call dec jae movsl imul xchg in sub xor test push stc xor fdivrl jge movntq out jb jecxz (bad) cwtl test imul cs inc mov insl je rcr ret dec xor inc xor (bad) jae clc mov nopl push fisttp cltd out pop mov xor pop pop and push (bad) xor fwait aas dec jns add hlt fidivr dec add rcrl mov popa lret xorl xchg repz pop lret (bad) jno pusha (bad) movsb loope and in mov xor mov leave jne pop mov dec enter xchg mov mov (bad) xor inc push xor es and scas add ss jae mov loope rcl adc mov fstps dec pop lods add data16 adc jmp add jb and xchg in jmp rolb xor push (bad) outsl cli hlt stc push arpl fsubrp sti mov push cmp xor lock jge jno jbe gs cs lds aaa pop mov mov decl test dec jb stos pop mov mov xchg cmpsl out dec sub jle mov xor out push (bad) imul jae test insb xor rorl mov jmp stos psadbw loop mov sbb (bad) cld jnp mov nop sbb xchg int sbb sub mov mov lea xchg adc cmp shr (bad) mov adc outsl pop std (bad) adc ficomp mov sbb cmpsb and jb int3 jg repz dec inc push sbb fisttpll (bad) cld pop repnz out (bad) mov xorl pop insb cwtl jb dec gs mov adc add push or hlt (bad) icebp out int clc imul xor pusha xor sbb popa dec jb test mov mov and push out adc mov xor jle pop jg lret mov sti ss jmp out dec nop sub aam hlt pop fistpll mov insl add jae jns mov xor pop push jmp hlt ljmp sbb xor cmp jno push jp dec xor sub lret (bad) jns add cmp pop loop cmpsl cmovne sbb xor test sti jne bound mov (bad) js jae js mov loope xor lcall cmc in cmp and jg pop stos push jns pop jb pop jle xor (bad) xor jl std sahf repz dec ljmp fcmovbe or add mov movsl popa and repz lds cmp jmp imul push xor cmc push xor data16 repz scas sub bound add imul xor push roll cld wbinvd or sbb les xchg mov aas jo add roll mov push fsubr (bad) sbb roll lods int3 movsb pop aam and popa in and jo mov xor sub mov dec nopl inc push sti xor mov out add sti insl clc and lcall mov mov adc insb test cmp mov mov xorl mov xchg push dec je adc push cmp aam stos out adc insb iret pop scas popf xchg sbb imul lock mov or lods sub je or xor or jg or inc and mov mov mov sbb or hlt lahf mov mov pop sbb pop bnd cmc xchg lds push add loopne (bad) cmpsl pop xor in xchg dec sub jp and cmp mov cmc (bad) sbb and push inc test ja je xor sarb rcrl (bad) mov in inc sbb mov rorb das iret repz aad out xadd hlt xor fldcw sub jbe (bad) jne arpl in movsl mov cld jb js dec xor xor mov push lcall cmpsb test in repnz (bad) ja fldenv loopne push je adc fnstsw test ds enter je ss lods adc insl pop add sbb xor aas push movsb subl icebp sub xor mov dec jae push pop jge cld movsb fildl cmc jmp (bad) mov idiv pop sbb or push jb sbb adc sti mov add movsl jne mov add addb clc jb pop inc sti aaa hlt ja mov sub inc and arpl and dec scas sub xchg pop out pop push mov and xchg sarl mov jmp repz mov sbb mov les cmc xor xchg fimull aas iretw add xor xchg push icebp xlat pop mov jp add fbstp in ljmp sub imul jp jne ret scas movsl mov and xchg (bad) jmp cltd dec push mov xor push imul pop pop pop out mov pop sbb test aaa add popa pop mov sbb nop sub xor ds or sub mov jne pop jge adc sub sbb mov dec mov mov cli cmp mov addr16 jb addr16 stos xlat clc mov xchg inc in fcomps and xor leave adc lods sbb sub sarl mov dec mov xor or mov jge pop lods cld xor push faddl mov or pop mov adc rcrb push hlt dec inc movb aam fwait dec lret mov add push in cld lcall jbe adc jns cmp mov sar cltd in mov mov xor lods outsb xor sbb xchg xor stc xchg incb ja repz subl aas and imul jecxz or jge mov cltd sub (bad) cwtl dec mov pop xor mov adc add pop mov enter jge jmp adc and cwtl in mov data16 jb jnp and aaa je mov dec add sbb pop jge add sbb xor mov decl jno jg fldenv into mov mov lahf cmp cmp stos data16 cld push popf push cmpsb sbb and mov add and xchg push shrl or sbb mov lcall dec push std test dec adc ret xchg xchg lret mov pop adc insl cmp dec jno cld lock lods cli jne xchg in popf cmp pop pop jl rolb fbld push inc lods aam (bad) inc and jne jb xor mov or repnz icebp inc xor test sahf ret xor xor movsl dec int3 cmp in jecxz inc fsts adc adc adc lcall fxch or jnp sahf je push cmp aam xor xchg mov (bad) xchg xor repz xor movsb push jns sbb call mov in punpcklwd lahf push xlat sub icebp js cmc cmp jae or cwtl sbb mov xor pop dec cld cmp lahf xor pop xor stos jae pusha jb outsb insb pop testl cld mov int pusha mov mov std fnstcw jmp test cmp dec xor adc pop cmc mov and mov pop jae adc mov pop adc jns cld popf xor and cmp mov push fimul adc cli xchg mov inc cld (bad) adc or inc push pop mov xor sahf imul sub divl jp xor shlb pop (bad) shll (bad) repz jl sbb mov rolb lock push stos add jbe in js hlt and lcall stos andl adc leave dec push incb xchg (bad) cmc pop mov jns cmc push (bad) loopne lds jo cmp sahf xchg in xlat sbb jmp cli ror je out ss xchg inc loopne cli lods adc idivl pop xchg xchg or loopne ret xor (bad) mov (bad) mov ja lds sub adc push cli js or aaa dec in arpl and nop or sbb sub add stc sbb out inc lock or mov push je cltd adc sbb xchg fadds jge jb repnz gs xor mov mov adc push mov movsl insb dec mov add (bad) xor test cwtl mov sub sti in or aad in pop mov and sbb addr16 (bad) or test xchg jo aam aam ss (bad) or lcall popf out stos inc gs push sti movsb jl cld loop cli imul push in inc (bad) clc dec mov mov and push xchg lods or pmullw mov add and mov out xor ret sub mov push (bad) sbb pop sub dec mov cmp mov sahf and jl jge or mov mov mov pop out je data16 mov divb push imul addb pop mov sub jns cli and jle (bad) jno add lahf aad adc dec imul sbb mov xchg pop mov arpl mov mov push push or pop xchg push (bad) out mov sbb cmpsb sbb mov mov xchg sti orl outsl jae sub mov jo imul dec jg jno add pop mov push xor (bad) mov mov and jae or inc or xchg dec lea add xor or xor adc mov lods loopne mov push jl xor sub iret (bad) aas jno or add cmpsb cld mov ror test lret cmpb iret add pop and jecxz cmpsl aas repnz add xlat mov xor notl pop xchg mov and cli (bad) iret movsl xor stos (bad) sbb or inc jmp insl and jo imul scas (bad) hlt pushf xor mov xor movsl xor adc insl mov push repnz scas pop ficom add bound push xor rcl mov mov in popa pmulhuw pop xchg push je imul mov sub inc xor leave out ret pop jo push aaa mov xor dec test and xor xor shlb icebp mov adc jecxz bound clc popf xchg inc or xor jnp pop push xor cvtps2pi cmc xchg arpl xor add arpl int sbb push aaa xor lret daa xor icebp dec and int3 sbb loop or add aas jl add or out xor in jge sarl mov loope lret ljmp mov shrl xchg or fmull mov jae pop cmp push add fidiv mov pop push or jge lods imul daa and je push pop or add jnp mov in (bad) xor jne mov and iret repnz jo les or cmp pop cld fmulp xor ss mov sbb dec dec imul js repz push push sbb add inc mov dec test pop or sbb mov (bad) fldcw insl mov mov or (bad) repnz push push (bad) jnp rcl push mov outsb addr16 mov push inc cmp ja xor (bad) mov cli or mov mov (bad) int rcrl aas inc mov dec or xor add dec cli std bound lret es out (bad) rcr inc in jae dec shlb mov out xchg xchg mov jle fstl add mov push daa sti icebp xchg in sbb sub sub jg mov ret (bad) in cli loope xor mov dec nop sub repz inc mov adc pop dec dec sti xor cli outsb sub cwtl sub sbb adc inc ja adc (bad) out mov imul pop xor sub arpl cli mov test daa je leave aam ficompl cli xor gs adc je rclb dec inc fs pushw fiaddl mov mov sub mov das add repnz push add roll lea cmp xor icebp (bad) repz add ja in cmc pusha mov repz bound push push (bad) fs xchg subl stos push int into (bad) je adc popf jo adc cmp nop jo sbb jmp fistpl inc jmp subl mov insb bound ja mov inc pop inc sti js mov jns je dec pusha push mov (bad) mov fldl pop div pushf dec sub xor leave push (bad) xchg sub add xor stos pop mov hlt push mov cld sarb sti (bad) hlt mov mov imul xor je and fbstp xor sub and add ljmp das cmp xor stos cmp dec jmp imul pop or jecxz pop xchg out lret adc and movsl xor (bad) (bad) jae xor pop sub sbb popf push outsb sti xor push mov out sub xchg sub in movsb xor ret divw dec add push mov adc xor (bad) jl movsl inc xor lock xor inc test aaa lods negb or push repz pop add cmp mov dec add mov pop cwtl push and cld pop sbb xor mov mov lds das loop jp pop xor xchg mov ficom loop out mov adc jbe movsl addr16 aas xchg fnop sbb decl (bad) ja imulb scas ljmp sbb ficoml in fstpl mov (bad) mov repz and cli cmc xor das mov sub cli jo push adc in aaa sbb mov mov adc xchg mov mov mov push jg nop xchg adc ret subl movsl sub (bad) fsts inc (bad) push je jecxz mov sbb into cmp call imul hlt test (bad) ds loop aad push jmp (bad) xor dec mov or xor xor jae push and lcall sbb cltd lock xchg aad mov or jno dec jo xor lcall or dec cmp pop xor jmp mov or jne push jo inc clc das arpl shlb inc pop mov icebp xchg dec xor mov je mov pop inc or push out mov inc xor mov xor jecxz xchg orl ds xchg fs in add jmp aam pop xor aaa (bad) xor inc in gs sbb fcoms or add mul movsb jnp sahf arpl mov (bad) lea cld sbb xchg dec fdivl and and bound xchg repnz mov imul sbb jnp mov cmp and ljmp mov mov fdivrl mov adc xlat dec cltd and adc hlt out movsb jmp add jno cmc mov ret (bad) mov push dec jae mov movsl leave mov or (bad) pop ret jne lock ficompl repnz rcrl data16 sub rorl movntq out int mov repz inc or leave data16 add stos cmpsb pop loop leave fstpl outsl add pusha push (bad) and dec dec lds mov ret jecxz or hlt inc sti sub test sub stos outsb js jno dec fcoml and and mov push fstpl jle out scas std mov sbb sub in cmp dec in js push cmp adc sti cmc mov mov loope fdivrs xor addr16 nop hlt aas sbb stos mov sub jnp or inc (bad) out sub pop pushf hlt jp imul sub (bad) jmp sbb pop lods jo,pn sbb xor cld mov mov xor adc movsl test mov fs adc ds xor inc into xor jae push call pop clc insb mov movsl cli pushf pop (bad) hlt insl into fild je pop mov dec ret addr16 sub add xor xor xor mov arpl in push xor jnp cld adc repz fmuls inc repz xchg dec mov pop pop insb mov je ror sahf in rol int xorl repz adc nop daa mov (bad) mov lods (bad) hlt in lods popa sbb mov and enter flds repz mov lds inc sbb and cs pop dec pop sbb push lea cmpsl push (bad) fsubrs repz sbb sub dec ror jmp (bad) mov mov push les lret mov jo mov lret nop mov daa add mov outsb shr lea dec sbb fmuls mov fwait cs xchg icebp clc inc insb popa enter (bad) (bad) add test xlat pop mov lods stos jg lds mov mov inc ret (bad) imul fidivl and test imul add sbb test loopne ret rorb in add lahf jns adc adc orb sub mov sbb dec mov rorl xchg cmc xchg repnz dec mov cli xchg mov push mov mov (bad) lds mov mov jle fidivl xchg popf mov jo scas daa jge aaa xor ja dec pop (bad) xor mov jbe mov scas sti mov out mov jno (bad) jb cli ds mov ja jns ss add cmp pop js leave aad arpl mov int inc ljmp lret jae mov pop mov lcall jo xchg adc sub incb (bad) outsb (bad) inc jne pop jnp cmpsb adc in jp xor cs jecxz xor jnp mov enter cwtl fs repnz int3 jl fisub daa mov add data16 inc mov mov push imul jb fdivl xor sbb pmuludq adc aaa push add repnz pop sub into xor je dec mov adc dec std xchg xchg pop mov into cli mov (bad) aad inc xor out mov push xor insl xor movsb aad cmp sub (bad) mov into repz mov mov loope (bad) aaa addr16 ds add sbb mov nop cmp addr16 std mov push push (bad) jb jne mov mov ja pop mov daa in iret lds dec int3 jmp mov dec mov lahf les orl xor cmp xor lods sub sbb or inc mov cmc je cmc push mov jno sub leave imul push add data16 movsl and mov jne outsl lock aas or cmc or add xor fsubr xor (bad) cmc or xchg xor shr stc add cmp pop push pop dec pushf lahf fnstenv add insb dec jae jae incl mov ffree movsl loopne hlt xor dec or dec dec test movsl mov xchg dec xchg pushl inc in rorb xor cwtl add inc mov mov gs mov inc xor xor push xor stos mov pushf xor (bad) jle imul fsubr jns rcrl out cmpsb adc pop mov out repnz imul mov repnz lods pop sti lock and rcl out aam mov mov sbb xor rolb movb fdivp mov int jne mov push icebp lock int3 and push mov std cmp dec add jg push das in sub jmp (bad) mov and (bad) xchg sub mov ret jg push adc lds sahf push aaa rcl mov xor push mov pop inc xor popa bound jmp (bad) cmc je in xchg push sbb cld repnz mov inc iret add push adc inc and sub cli seto dec in (bad) sub adc loopne out (bad) movsl sbb int js push mov jo mov inc xor icebp mov int3 sbb cs adc xor add sbb (bad) repnz cmp addr16 out cmc out lret mov (bad) cmpsb outsl dec lahf xor test mov in push es mov inc sub xlat mov jp sub jbe push cs insb push xor jge fxch dec mov aad jno sbb pop and cmp sar xor xchg sti pusha sub pop push add fisubrl ds repz lock push stc lds cmp mov pop pushf hlt into inc loop mov jo mov insl and lcall sbb pop adc cmpsl (bad) jp outsl sbb xchg jne xor rcrl inc adc imul adc mov fdivrl ret dec and xor jno ss or fwait cmpsb add repz mov int repnz mov jns test xor lea insb sbb jle enter insl mov adc mov imul xor xchg xchg mov pusha xor xchg jae sub jae mov push shrb scas xor jo xor jns int add movsl xor push loope mov mov ljmp xchg decb xor push bswap fmull push mov cmp mov in call and cmp push jl mov dec pushf pop stc aam mov jmp jo xor adc xor xchg cmp xchg ret fmulp pushl or jno sub lahf push (bad) adc or xor sub cmp es cld js test incl xor add ss mov xor inc jno rcll jnp xchg les jno sbb push xor in sub arpl add inc pop rclb or mov sbb (bad) mov xchg xor lcall cltd inc in mov sbb xor hlt int pop or mov jmp ret test cmp test gs push inc xchg push inc adc dec push loop or out jno dec push out stos dec cltd leave in lret cs out jbe adc mov repnz jg sub daa or xor lret scas push xor mov xchg jnp push dec inc jb add adc ja leave daa xchg call pop mov cmc int3 sahf repnz dec loop std daa push mov in out jmp mov or call les add test lods iret sub test incl push stos test cmc (bad) sub imul rolb lods add xchg jp les loopne nop insb or mov dec push insl xlat outsb in jl cli add rcll inc push push dec xorl pop repnz and add adc jp cmc loope aas mov lret xor sbb js sbbb sub mov adc inc xor mov sbb movsl std imul jne xchg es aam mov pop sbb cmpsb ljmp cld fs (bad) je inc shll cli shll aad pop xor pop aas aaa push std xor test xor or dec mov xor inc sub outsl arpl cmc push das dec add add xor ret fistp sahf leave inc xor clc mov cltd ss adc repnz cmc pop pop or push push aad daa in add push mov mov xor jbe nop or cli adcl scas fstpt add aad sbb pop stos daa insl xor (bad) ljmp scas jmp inc inc fs cmpsb repz mov sbb mov mov in stc mov inc sbb or lods sbb jo sbb and cmp mov jl (bad) in adc int hlt aad addr16 int cmp jno and ljmp loopne dec inc inc hlt dec shr sbb xor adc fucomp xor mov jns cmp test dec adc stos adc push xor ds loopne sub adc mov inc daa into fcomi int3 sbb xchg mov pop fisubr pop push cwtl aad pop cmp aad mov mov jnp mov dec fs mov add mov dec fs inc in fcomip push and pop jne sub imul sbb gs test aad or xchg lock fisub ret adc mov xor mov mov hlt les sbb es fbld mov cltd push and add inc adc xor bound jle outsb mov test adc mov shrd mov push xor or adc dec pop movsb push xor push int mov pop sub add fbstp in mov lock jnp mov adc data16 mov jmp jmp or adc sbb push add ret pop sbb repz fistpl cmp sub ret mov xor cli lds insl stos jmp aam int dec add jb pop sub xor (bad) jmp jb js cmpsl fdivs clc lods pop or cmp cli adc xor (bad) scas mov sarb jne sbb in xchg in cmp cmp loope or repz sbb (bad) imul scas inc rol (bad) cmpsl ret push imul mov loope fs pop fcoms jno stc mov std add push in (bad) cltd push scas roll fsub mov jnp pop and add (bad) xor imul xor not lds enter cmp sbb pop add push add imul test jbe add imul push (bad) ss fistp sub xchg bound jno addl in mov std adc mov mov jae xor lds ss mov pop cmp mov mov mov mov sti pop lcall jae bound (bad) fcmovnbe xor icebp jmp bound movsl add fsubrp (bad) push xor push lret mov pusha shll adc mov mulb and scas (bad) testl pop xchg xor call dec int3 ja xor (bad) xor add enter xor gs jecxz ret mov add addr16 push fsubrp xor in lret sahf orw sub adc and mov pop or jb in clc push icebp xchg int jg push popa or fptan call stos out xor ljmp rorl movsb fs or sbb mov (bad) sti daa (bad) and cmp js sbb cmpsl xor sub mov xor adc and mov push hlt lods ret fist es xorl jecxz jae scas mov xor sbb (bad) lods jns imul jae dec mov or je mov inc pop incl inc cmp inc jne pop mov fisubl push jnp hlt push and mov lea clc sarb xor xchg sti xchg jbe sub loop xchg pop xor int cmp sub daa fidivl inc add aaa and mov imul jae je jp or dec adc xor xor adc push sbb or jmp xlat fsubrl sub (bad) lock cli gs and jl and sarb mov and add sub push pusha ret test outsl ss mov roll or cmpsb jge lock cmp sete ljmp repnz (bad) (bad) push and and adc xchg and lahf dec sub repnz xor cli lcall ja iret dec sbb adc mov lea xor cli pop xor dec mov ja cld and sub leave dec mov daa sahf pop imul mov test fistpll xor mov mov jmp mov (bad) ss inc pop (bad) sbb push sbb xchg lea pop dec jnp add inc aaa jle das shrb adc sti outsb ds xlat mov and and push pop dec shll push xor cmp push mov ja enter xchg mov aas aaa aam leave rclb xor jg dec or repz data16 adc xchg (bad) (bad) mov xor cmp cli out imul jns popa dec cld les (bad) fsubrs push sbb push repnz mov xor xchg (bad) insl mov adc cmp add (bad) dec inc inc adc arpl fs (bad) mov add jg hlt rclb stos sub mov loope xor pop bndstx addr16 xor popa nop adc mov push add mov (bad) lret xor test lahf xor mov popl push (bad) mov pushf sub outsb cmpsb sar jne je cmc mov sbb or jecxz out lock push insl aam std xor inc aas mov xor inc hlt in pop jl xor sbb add xor lods fdivl xor mov jmp adc dec sub add jno addr16 sub cs mov jae notb mov pop lods add je dec inc int3 xor jmp sbb loopne mov xlat pop push sbb xor (bad) or sbb jbe popa sbb in jecxz dec pop (bad) mov movsl movsb js pop xor je lock cltd or add repnz add push adc sbb popf adc rorb or inc sbb push aaa xchg sub fxtract enter ja les jo test or pop mov or mov cmp and sbb hlt scas lock pop or sbb into ljmp lret cmp out mov xor dec cmp cld xor push xchg cmpsb dec jae rcll movsb jg sub repnz ds sub push sub mov and das and in jmp in mov push adc loope mov mov jmp movsl gs cli ljmp outsl xchg cmpsl mov xor sarb pop adc sub repnz or push in (bad) xor adc adc jbe adc xor cmpsb test into jbe jno dec add bound mov jae or fmulp out add loopne lods mov fistp test bound (bad) scas mov add aam xchg movsb mov xlat shll push mov lahf push push mov repnz xchg in in xor dec movsl xchg lea andl xor adc mov xlat icebp fs pop hlt inc fwait and cmp inc jns stos mov and jbe mov add or jb add push ret lret int xor mov mov and or outsl xor sub push (bad) sti push movsl sbb mov out call (bad) and push mov push and loopne pop mov xor ljmp enter out lds (bad) ror and and (bad) mov das push shlb cli fxam (bad) push and adc (bad) das jo push or les loopne ja mov cmpsl idivb in push jle jle adc lahf mov in out loop cmc cmp push sbb pop adc sub sahf into mov push and loopne aad fcomi stc hlt lahf fwait push push xchg cli fcomps sti pop int3 push mov inc mov nop scas pop and imul clc cltd jp faddl mov cmc loop pop or add xchg pop mov cmp xchg mov and and sub fmull jno xchg scas (bad) bnd sbb sub push xor nop add mov sbb cmpsl mov pusha pop fwait jne jle in mov mov into in cli adc and mov sbb dec adc jmp adc js iret mov imul xor std je ret jmp cs stos movsb popa fbstp mov add sbb push in or xor adc (bad) jmp rcr icebp jb dec mov jg fisubrl jnp xor idivl ret pop xor stos repnz xor pop xor ja cmp pop cmp jb add xchg fsubs inc pop ud2 mov xor inc xorl mov and adc (bad) jmp fldl2t das xor xor sbb cmp and adc inc cmp (bad) jg cmp push movsl sarb sti lock or out mov jne and out rorl hlt sub scas das arpl (bad) roll addr16 hlt or xchg cmp js jno or pop nop adc loop xor dec mov cmp add pop push je (bad) popa xor dec inc jno,pt cmp inc insb outsl sbb out xor or aam pusha outsl sbb xor mov xor fadds cwtl push in scas lret (bad) pop push leave xor in daa int3 insb cwtl xor (bad) mov pop sbb aad jno dec and jge mov pop or add jnp in test push lcall xlat mov pop (bad) inc sub je sbb mov xchg sti inc sahf cmp mov (bad) mov push xor loop in cwtl into xor cs fs test aam movsb in call xchg in andnps sbb and mov data16 mov imul fdivrs mov jae enter out cmp mov adc or jae adcb and and ret cmp rcr outsb adc sbb sbb mov cld in xchg pop pop sbb psubsb popa ret in cwtl adc lods or (bad) out mov adc outsl xchg (bad) jmp stc jle sti mov (bad) mov xor adc push mov inc inc dec mov or xor (bad) mov lcall mov xchg cmpsl or xor lods mov clc push jno loopne xor mov mov stos adc jp rcrb je push leave dec add xchg sbb adc sub add aam hlt jge pop xchg dec les mov xchg jne mov push mov lcall sbb enter or hlt push sub sahf imul sti dec mov cld fnstenv cmp aad fs in cmp test xlat adc std inc cmpsl or cmp mov mov mov popa adc decl xor or pop cmp lods in jecxz xorl je gs and clc testl cmpsl mov cltd lock sub mov add inc push jno add pop cmpsl (bad) fidivl jae in (bad) push out sbb adc and roll movsb xor mov imulb ja cmpsb pop push dec mov and sarb jecxz lods add pop jo fwait xchg sbb je stos push int3 cli jmp mov and sub mov jb cmp cmp mov fs push outsl outsb mov std dec sti lds jle xor int test sbb sbb popf mov sarl adc aam mov mov (bad) outsb hlt insb mov pop cmp cmp inc repnz inc sbb stos xor or out xchg (bad) loop imul iret xor imul sub adc sbb fwait xor sbb sbb fisubrl enter inc bnd out xor jecxz pop cmp popf or xor stc pusha sbb add mov inc push mov (bad) cmc mov mov repnz pop rol xor cs mov ds xor (bad) mov xchg mov aas fs cli nop inc sbb jle xor jbe mov fnop pop xor inc push les xor (bad) mov cmpsl dec sub cmp fmulp test hlt mov cmp push or and (bad) sub pop adc sub xchg aas xor and cli xor lret add cs ja je jb rorb cmp mov das xor movsb inc in sub addr16 cmp xor xor pop sbb mov xor cld popf mov outsb test cltd mov roll mov popa xor loop stos xor mov pop (bad) sub insb inc mov push cmp test hlt in dec jo sub jns or pop push pop jge cwtl clc mov mov repz test repnz mov sbb adc dec sbb cltd xor icebp pop jne lds into arpl xchg sbb sbb adc mov pushl cmp push xor mov and mov cmpsb mov xor mov dec or xor pop adc testl mov arpl cmp mov push lret (bad) mov cli adc (bad) push add jae pop pop mov lock std pusha mull cmp adc scas push xor mov xchg and cmpsl xlat adc ss sub mov or divb int xor enter es mov jns (bad) jae mov in cld jnp push inc mov aaa sbb mov mov sarl fcomip jnp or mulb push mov stc insb xor cli xor shrb lock repnz mov xchg mov lods sub inc negb mov test jae xor sbb je and or and jnp aad sbb push dec daa scas (bad) jb sub hlt add push fisubrl je mov jne add and scas pop sbb fdivrl imul cli sbb into adc cltd add xor stos mov mov fs int stos pop outsb mov xchg add jns xor cli loopne (bad) repz xchg test fsubrl xchg push cwtl lock sub dec cmc add xor add inc and aaa inc jae shr hlt mov jo push jb test mov adc hlt inc push test or nopl sti xor cmp mov and xor mov push (bad) xor push jl ja rolb xchg xor cmpsb test loope xorl mov popf xor adc in in cmc fwait mov in xor test out pop push lahf push ja fstl dec xor jmp gs (bad) cmp adc inc or mov xchg lea pop decl out xor in scas mov xor clc pop je xor insl in movsb popf or cmp mov clc pop out (bad) out adc push push xor call push mov push imul xchg flds popa or adc lods in inc out pop and repnz sbb movsl add and sbb aam cmc test add mov pop mov fsubrl lods aam movsl push in mov out rclb mov stos adc cli pushf mov ja sti add mov xor popa adc push cmp dec stc dec jno arpl fbstp mov test cmc xchg mov push movsb vmovdqa mov adc hlt f2xm1 jmp stos pop sub mov roll cmp je ja les loopne and jae sbb loop push les (bad) push and xchg dec sub xor shrb xor lahf xchg in xor ss out (bad) std mov or mov adc inc jmp shr repz xchg sahf add xor imul dec imul cld mov xor pushf pop xor mov xchg pusha pop js hlt (bad) sbb adc xor dec xor jns adc hlt jne cmp jmp repnz sbb stos or dec mov ret jns mov addl sub adc dec cwtl sub mov popf add xor fsubp arpl pushf cmpsb add adc pop arpl xor ja mov fistp fmuls repnz and test jno pop push push add xchg mov daa jnp movsb adc or (bad) lret xor test dec ret add sub (bad) icebp adc lods push out mov push (bad) sbb sar adc sbb into push fildll xor cmp ss aaa adc (bad) ja push pop xor cmp xor jp sbb xor mov movsb std icebp mov jl mov int mov rcrl inc hlt lock pop pusha dec loop scas adc mov xchg push xor adc sbb add repz xchg adc mov dec (bad) lcall faddl (bad) adc test es (bad) rclb xor in mov xor lods pop and (bad) not jne test les loope stos push mov cs mov mov jb in jl in nop xor imul sbb xor fidivrl inc jo cmpps cmpsb jmp out or outsl or movsb ss sbb adc push push notl xchg cli repnz faddp movb stos (bad) dec and cmp add sbb pop enter inc xor loope xchg mov add int mov das jle scas inc push jae and mov or mov mov ror repz xor fcmove iret push ss add jno ret sub out je aad popa sub dec mov js push xor xchg (bad) popf jp rcr clc lds movsl cld clc sahf mov aas add lock repz jmp mov xchg int xor cld cmp mov add cld out push push jecxz das ficomp popf addr16 fwait cld pop xchg pusha inc es sbb mov xor cmp xor mov fstl jne jb dec enter jno fstpt repnz xor (bad) imul xorl jp jmp mov clc inc daa test cli pop inc xlat mov les push stc dec aam cmp lret cmpsb and sbb jnp jbe push jecxz mov xor jle push ror (bad) mov scas fdivs addr16 add insl mov mov je lea push xchg sbb cmp fbstp mov outsl push cli lods mov xchg iret outsb pop mov mov cmp inc jg aam fadds mov pop movsb (bad) or hlt mov add and (bad) (bad) hlt ss data16 jno (bad) adc jno in in sub or mov std adc jl mov xlat dec push adc rorb xchg mov pop and sub inc cmp mov lret sub pop sub addr16 inc sbb dec add mov mov push dec mov sub or ss adc (bad) hlt xor and lahf mov inc icebp sti lock fwait sbb int lock pusha repz (bad) dec push nop in fwait mov mov ja rcll cmp movsl ds in pop mov test push clc push xlat cmpsb enter push sub inc lock lods dec mov adc idiv push jns fsts add or aaa add shll repz push push dec sub imul mov push (bad) mov jae pop int3 push mov xchg cmpsb dec push or cld les ja push jbe sub popa movsl dec push cmp unpcklps pop dec jb mov push hlt fdivr xchg sti hlt out call jl cmp in jge jp adc lahf or sbb mov out mov mov (bad) xor jbe and mov dec fidivl dec test lahf jmp sar jne aam pop jae cmp out add xor sbb aas sub jge push pop sbb add xor repnz test adc mov sbb push pop dec xor in xchg push repz and pushf lret scas sbb inc fnstcw xor or inc cmp es int xor sub and rcl xor aad pop or jl test xlat jp sahf cmpsb (bad) fdivs xorl adc jmp stos cli xor cmc nop es mov xor or and int repz or mov gs divb xor in xchg jmp scas jns pop sub jl jge ja mov scas loop mov jg cmp icebp lds cmp xorl cmc mov pop add xchg inc jae dec or mov xor enter xor cld xor and cmp mov inc movsl sbb lret pop cmp sbb out xchg xor call ja bnd in inc xor dec sti shll pop adc inc adc ljmp lret jnp xor lods xor icebp mov xor inc fcmovb hlt cmp frstor mov bound mov cmp gs imul add mov popf mov xor ret mov or xor into jnp xor roll mov mov xor jns insl mov adc pusha sbb imul or iret imul jnp jo mov hlt hlt mov push lods aad repz jno sarl jecxz cmpsl int cmp cld movsb push stc xor pop jo aaa sub lea mov sbb (bad) xor (bad) mov jb fnstenv sub sarb xor lods cld jle rcll nop pop adc aas popl stos (bad) stos int3 xchg cltd adc int sub iret add dec addr16 (bad) pop push sub les clc mov mul cmpsb adc outsb mov mov loopne jns jne fistp and adc aad inc mov pop aam pop out mov das loop loopne add addl fwait hlt pop mov dec push mov inc push or adc xor mov das jae aaa mov rcrb ljmp push (bad) js xor adc xchg data16 sbb mov inc int hlt mov ljmp add cmp ss lock jno test je jmp dec cmp xor sub add aam push or ss and xor stos fmull jae (bad) pop faddl cmp cs lahf je or fisubr mov daa test mov and and xchg cmp ss xor (bad) stc je xchg jne lds cli xchg xor out stos pop mov xor stc and xor js and cwtl cmp nopl jbe pop pop (bad) insl loope,pn ja mov sarb test xor popf inc arpl sub bnd mov push ret push sub sbb xor lahf xchg lds mov fistl inc rcl mov jl inc cmp icebp (bad) xor sbbb jo fidivrl jne sbb fcomps hlt jecxz fwait out shlb or pushf out cs mov das add cli out push add imul push push mov jno shlb cmpsl sahf sbb push and fistp lock xchg sub push nop sarl (bad) std lret inc cmp popa mov imul or es push sub push xor dec outsl dec cli hlt jl and add add push xor cmp inc insl sahf dec xor push jmp xor in jl call jnp dec sti add (bad) dec add loop cwtl jae test mov lahf loop fwait cmpsd xchg mov pop xor jnp pop adc (bad) das ja fcoms test (bad) mov adc mov loope mov cs mul icebp (bad) jb xchg negl cmp add jae or sti mov push jp pop add pop in and repnz xchg (bad) mov add iret jg outsb sbb mov sbb in mov inc imul fbld jecxz mov push sbb xor jno mov jae aad sbb movsl std dec xor insb popa leave sub dec xor jo inc (bad) xor lods cmp ja insb mov cmp ffreep mov add sub imul movups push stos je sti aam insl dec outsl or and popf js fs xor push imul xor arpl pusha dec jno push pop mov (bad) jnp jle jne stos aad incl clc cmp and push enter cmp add fcomps int jnp addr16 xor adc cmp jle adc les add sbb arpl cmpsb cmp das push shrl xor clc in xor cli ret cmp add int mov aam or pop repnz out (bad) and sub jae mov pop out popa xor fwait lods bound pop adc (bad) xchg arpl cmpsl int jnp jbe cmp addl test inc dec in ret jae mov imul icebp sbb dec jo data16 bound xor dec jmp (bad) fistpll dec dec outsb repnz fs ret mov mov jnp and in adc in insb adc aam js mov add and repz mov mov jmp inc jae inc dec jno xor add xor mov and in int3 aaa cmpl sbb je pop inc movsb test xchg xchg xorl inc xchg mov ds mov cmc mov aad or inc add xchg cs xor dec das mov add mov push push test push sub jns push cwtl mulb lds aad aaa fsubrl int (bad) and xchg sub adc int mov jae decb xor xchg (bad) aam pop or lea es int xchg cmp xchg cli add lds das outsb dec cwtl je ds cmp adc out popa dec int3 pop jae jl icebp je xchg xor repz pop add fisub stos xlat sub mov fs (bad) into mov cmpb (bad) mov mov rorl pushf or stos add (bad) notl lods jo fwait insl movsb fbld jae movsl cmp mov pop jmp jecxz jns xchg pop imul cli push jg inc xor xorl pusha pop jno jno enter stos or sahf push outsl scas xor call sub xor lcall sbb (bad) cmc lods pop mov popa fmul cmpsl xor (bad) mov or inc sbb stos fs ss mov and jmp jmp fwait or inc jg push inc mov xchg jns xor mov xor into adc pop mov lods fistpll xor mov push mov popf sub lock push push pop jb mov jecxz gs (bad) and jmp jne mov adc push push xor in push arpl inc ss cmp inc aas pop mov in je jge lods adc push daa into jae xchg inc or mov push je ja aaa mov (bad) cld sahf mov xor xor xor and arpl xchg es nop mov dec unpckhps mov ja je,pt adc pop sti pop add or xor hlt mov fmull xor push pop push ja and outsl stos hlt pop inc adc add (bad) mov insl repz (bad) in mov xchg je xchg xchg sbb push inc cwtl outsb add int data16 xor xor xor idivb lcall clc hlt xor in xorl in dec and push je mov scas insb mov fwait mov pop push xor insb movsl add xor dec push push icebp into ret scas lods xor jecxz xor inc and push nop and in fldcw mov (bad) fidivl test movsl push adc pop iret mov scas out lcall xor scas sub mov mov lahf or push cltd xchg aad add stos sbb xchg scas in fnsave test cli xor lcall test mov jl mov fsubp push loop pop enter clc push sti jge mull jg das xor leave mov pop pop xor popa test outsl in mov pop xor adc movsl inc xor pop mov xor sbb xchg push mov push sti add jmp xor cwtl addl and cmp icebp sbb mov les mov adc jo sarb inc lcall test popa add (bad) repnz aam loopne in sub adc jb xor cli leave int mov jb sbb rorl fs mov mov stos sub in stos add cli jmp icebp sub mov and clc rorl testl cmc xor rclb adc cld gs adc xor je xor inc push push fild jne dec data16 sbb push std das sbb push dec xor mov sub lods mov xor mov or pop ja xor dec cmpb gs pop rclb xchg mov fwait jnp xor mov xchg int xor outsb adc hlt les push inc je,pn in sub jnp adc outsl int mov in insl and jb imul or xor push add add add add xchg jo js mov sbb and or out push xor test dec hlt sbb or bnd in iret roll push repnz cmpsb jmp scas repnz xchg mov or xchg imul and and neg add lods xor or add sub (bad) mov cmp idivb repnz (bad) gs ljmp mov or lea jnp xchg arpl pop add rcll xchg push mov pop xor popf adc movsl dec mov jb mov pop or add mov sbb jecxz loope jno sub jle jg push and stos cld jb hlt int ret sarb push push stc sub cmp jae push dec mov xor push cmpsb pop (bad) jmp jge sub dec rcrb fcomp jo mov inc jge inc mov test (bad) jle es imul or leave mov mov lret cmp pop outsl mov shrl and dec ja xchg push xor inc ja add repnz pusha mov cmpsb pop xchg or mov xchg xor out push inc and std mov mov jge lret mov and sub and lock or mov sbb adc inc mov aaa push test xor lret push adc leave in jno sar movsb cli push jmp mov or pop and imul push sbb ret into hlt adc fiaddl mov ja xor pop dec rcll jle hlt sub mov enter int push aam or cmc mov stc lret mov and lret inc (bad) out mov xchg loopne mov xor fild jb push addr16 sbb or loop (bad) jp orb mov rol adc and sbb sahf mov and cmp or inc xor nop jb or out sar mov dec aaa mov add mov pop scas jb data16 out xor mov pop insl push or sbbb ljmp movsl jmp (bad) mov std mov shr xchg (bad) sub imul inc cmp cli add xchg jb cwtl mov out jecxz push inc popa add adc jbe (bad) repz mov daa inc (bad) xor lsl cmp and mov jne aas sahf jmp fwait inc fsubs mov add stos outsb insl mov inc or repz xor adc xor jp jmp adc mov neg mov push jecxz (bad) in adc test jge pop jns outsl and mov add xor xor add fcoml dec add xor out iret ljmp mov jnp hlt in stos xor repz in xchg sti xchg dec xor mov mov out adc pop clts test in mov enter mov lods and popa xorl dec or lret xor iret or jmp jbe stos scas push mov adc xor dec stos sub je inc outsl mov and or sub movsl repnz hlt ljmp or push fld1 (bad) sub and xor ret pop scas test fsubrs scas repz lret out mov iret push (bad) jo push mov cmpsl test mov add rorl mov bnd cmpsl dec xor sbb es es xor xor das mov cmp stos or dec hlt fldenv jns pop xor lods (bad) jb push pop adc or push js std repnz fidivrl in cmp or xchg je sbb (bad) jbe jne and dec inc xchg or (bad) pop mov cmpsl adc pop insl adc xor xor (bad) adcb arpl mov gs btr es fidiv mov insb loope pop pusha sbb (bad) iret fsubrp mov ret cld dec lcall (bad) jo xchg push cld push inc in imul call test or jno xchg inc dec xchg mov xor cmpsb shlb imul dec adc or out sbb stos lock inc cltd sub push movsl push dec or sarb aaa xor mov hlt sbb out pop jo stc pop xchg aaa nop cmp rorb lods mov xor or xchg cli inc jecxz (bad) (bad) mov cmc aas jbe adc xchg pop aam mov leave push xchg adc clc js insb jmp sbb or inc repz repz push xor sbb push add pop dec adc (bad) mov test ret dec std pop hlt mov push (bad) es stos out out fdivs shrb aam push inc repz (bad) jg dec add jne lods adc (bad) and xlat inc adc mov sbb push fstl and repnz push push cltd xor mov jbe inc xor sub enter xor mov inc insb mov fsubrl call push mov in aad mov scas lcall test js and add (bad) ss mov repz lcall pop sbb adc mov dec xchg std add push clc mov mov test sub mov dec loopne xchg adcl mov dec mov sub xchg adc add and cmpsb xor push jo out jle xlat cmpsl jnp push mov xor popf (bad) mov adc cli mov sbb (bad) jne sbb out jge insl xor in repz and mov mov (bad) loope xor cli and xor add cwtl add ret xchg xor lea sbb iret xlat cmpsl pop and mov ret lea mov (bad) cli and imul mov das (bad) cli adc mov mov (bad) adc sbb pop sub fstpt pop mov fisttp pop mov sbb push xchg scas push in sbb mov mov jle sbb xchg push cmpsl inc push pop mov mov xchg adc loopne or push pop scas xchg pop jno mov add xor mov lds sti dec addr16 inc bnd mov mov or enter lods adc pop xchg sub pusha adc bnd addr16 (bad) adc sub add mov mov rcl aam pop mov lahf stc inc cld inc cmp adc xor loop xchg jle mov sbb ds mov icebp jbe imul movsl dec xor mov adc xor das pop xor add and daa fchs lret imul xlat aas adc cmp jmp push jmp ret xor ds sti iret jne cmp movsb or or add sbb adc (bad) imull mov into ds cli sarl aad lcall xor lods in mov es jmp inc push mov mov adc sbb outsb or dec xor xchg xor mov hlt popl adc in jb dec xor mov dec or ret test jp jae adc or inc or mov (bad) repnz add in and lcall inc mov xor dec pop sbbb hlt dec (bad) sub sarb popf add ret mov jb jg sbb fnsave sahf repnz test sbb loope mov loopne icebp ret push and fwait push xchg jg jg dec cmpb in scas push push call fbld cli cmp adc (bad) cmpsl xor inc mov mov test (bad) xor les (bad) rcr inc sbb mov mov pusha cli push push xchg rorl push add mov and mov dec test repnz out sub xor loopne cmp mov mov dec adc dec in rolb adc add outsl mov push lret out or movsb mov gs inc jmp and loope mov mov adcl scas inc adc or xchg xchg sub frstor movsb fstps jno xchg shrb js xor pop dec sbb fucom push xchg sbb out test das mov cmpsl ret lcall and gs stc fs adc add sub add push add test lock imul sub std (bad) pop clc xchg sub mov and jecxz mov outsl push jno (bad) ljmp sarb xor int3 lods negb mov js dec stos sbb imul jnp xchg roll lock popa push pop cltd or add dec mov ret call cmp mov flds movsl js ljmp ficomp or or push movsb stc sub inc sub cmp cmp insb xchg cmpsb jb mov xor or insl mov dec add aas adc ret xor (bad) cmp jae imul add sub iret xor cld popf daa mov lds add or ss shll xor div into int mov jp xchg cmp pop lods test xor gs add fstl inc xor inc add mov je call movsl add pop xor inc mov jmp inc cli pop xchg ljmp in pop inc and xchg jne inc popa sub xor mov sbb fwait mov data16 out fisubr inc mov ss fsqrt jnp adc cmp fstl mov xor dec fiaddl inc xchg inc inc cli in or cs (bad) je hlt xchg sub jmp mov xor fldcw jl shll push xor test mov or pop ret clc fs jns xor ds mov jne je mov clc aas jmp iret xchg adc sub mov jg xchg lods loope dec dec cmp daa lea push mov xor ljmp sbb pop inc cmp mov dec icebp add or mov cmp xchg jl pop sbb jnp rcl cmpl ljmp pusha iret add mov fmuls inc hlt scas jns mov popf aam xchg and test movsb xor mov (bad) inc dec cs jae mov dec pop dec sub cmpl ljmp (bad) out pop push cmpsb repz mov adc jmp xor or xchg loope mov inc xor add repz xor inc xorb xor xor sbb enter stos sub pop aam xor lea dec lods ds pop and jmp xor jmp call jno sbb cli xchg jge push xor lds jge or mov xor cltd push stc cmp lcall lea jbe mov (bad) adc xlat push cmpsl daa or (bad) jmp ss lods and cwtl lret push stos cli mov jno hlt (bad) mov add aad hlt mov pop das push and pushf repnz adc jge cmp xor xchg addr16 xchg test call mov pop test fmulp lret add dec cmp mov jg mov repz xchg xor fidiv pop sub hlt movsb xchg mov mov adc or push stos mov or mov and mov lods jl mov xor dec jmp mov xchg out mov shlb push loopne or (bad) xor bound mov imul xor in stc xor sbb inc xor and test and xor mov fdivr jo inc jb (bad) mov fnstenv ret and fldl dec push out lret jno jecxz cmpsl xor xor pop mov pop mov fidivrl inc stc xor inc jbe daa push daa push xor cld dec fiadd cli jg add or in xchg bound adc aas and inc (bad) ja fdivrl push pop push gs cmp dec nop adc xor je xor mov repnz jns mov (bad) pusha adc cli mov lods lret xor daa mov imul lds ljmp repz or subl pop or gs push xchg dec push and sahf (bad) int pop (bad) cli mov repz ds (bad) pop jne insl lcall xchg lret test imul jmp cmp mov dec mov push mov push mov mov pushf cmp dec loop cpuid lea pcmpeqw xor test mov sahf js pop int3 js mov mov push xchg pushf aad pop lock in push and fistpl test lds xchg mov xchg fstpt rcrl mov test and mov mov xchg jne hlt mov scas sahf leave mov and int3 lods int xlat sbb xor inc imul arpl shrb and outsl (bad) mov in ret push lods out xchg jp in adc (bad) sbb dec cwtl jb lcall mov nop sub dec xchg xor rcll cmp add and repnz mov hlt push cvtps2pi ror lods xchg (bad) adc push pop pushf stos pop dec (bad) xor lea xor fcomip sbb lock add sbb fidivrl pop add xor or sbb pop or sti jecxz jb xchg pushf push mov inc inc cmp cld push pop xor popa mov out mov negl push daa cmc lcall in (bad) je push std fidivl mov (bad) into ljmp xchg in loop out lcall jne cmp jae xchg inc scas sbb in add int push aam inc hlt push cli xor (bad) xor xor jae aad movsb lcall jbe adc sub jae push sbb xor aam pop dec jo add inc out mov jecxz add call in push xchg or jnp fnsave jb sbb xor ret imul jp out (bad) xchg mov cmp mov jnp shl fldt hlt ja mov sub stc and push (bad) xor add and cli shll ljmp arpl xor hlt ss push xor movsl outsb or fwait mov dec daa mulps lods cmc mov xor push sti inc xor dec push sub xor pop fisttp mov push (bad) stc clc mov lods pop mov cld inc add xchg push add adc mov push push inc lods jb paddq mov mov pop adc call cmp push jno pusha sub mov inc cmc bound (bad) stc add clc xchg inc and cmpsb pop jmp xor dec mov pop jl pop sbb push add je and or loop cmovnp iret cmp call (bad) ja fstpt sti cmpsb int3 dec sub jge jne pop adc (bad) xor add loope mov xor sub pop inc sbb lret mov mov aas pop sub int3 mov imul mov nop xor lret shll cs xchg fs cmp mov adc xor jb (bad) je add xchg xor push stc cmpsl pusha mov mov outsb push adc cwtl mov add add or inc xor mov mov sub xchg sbb sub add out sbb in cli (bad) in into sbb rcll mov cltd xor push push dec out js pop mov mov push (bad) push popa mov sub rol sti jo sub dec push idivb fs fadd sbb mov into aaa jns fadds dec pop aas sarb loopne adc sahf xor cmc jns mov loope not in rcrl into addr16 push mov lods sbb mov pop adc push ficompl dec cld mov outsb dec push add ja and jl lock push push lea adc out add xor jp movsb dec xor andl in cmp iret hlt divl xchg cltd enter fsubrp rcl adc ja std xor out sahf push xchg inc cmp fimull mov shrb adc test sub scas fmuls aaa fstl xor fstps dec add cmc push aam enter inc jnp lds inc lods add jp mov xchg aam add imul test mov jecxz adc xchg mov xchg cmp mov inc insb pop sbb jns pop inc mov int3 inc or mov imul pop mov into mov push je shll lods in hlt xchg adc push popa (bad) xor push cmp xchg psrad sahf pop (bad) scas xor jge int3 mov lock clc mov push (bad) mov mov pop stc push repnz in test sbb cwtl adc pop lahf das std jl jge xchg sub out xor repnz scas add loop jg daa or gs add sbb rep mov outsb cmp (bad) mov xor insb xor xchg push cltd fst xchg and cltd sbb int mov jno les lcall inc xor icebp (bad) mov test jmp fstps and addr16 daa mov out push call lods sub repnz (bad) jl jo add outsl push aad dec jne cwtl cmpsl and inc mov xor andl cmpsb dec push jnp xchg cmc xor das pusha and pushf movsb mov cld (bad) sub imul mov xchg xor xchg (bad) in pushf jae (bad) call xor push lcall jae movsb fstl aam xor sbb sbb xor mov mov cmp hlt adc out mov (bad) adc daa fidivl mov mov xchg pop shrl xor inc xor int out fisub lret fidivl cltd adc cmp push mov mov xchg into (bad) cld repz mov mov mov fwait add dec cli pop int add xchg push jmp cwtl pop xor push mov cli jp decb push je imul inc mov sarl cmp and popa call inc aam push nop and icebp inc je xor loope cmc cmp mov push repz mov dec add aaa mov sub addr16 xchg push lcall aad addl xor out stc mov mov cmc mov cs lds dec cmc push bound inc rorb hlt pusha push push adc ds pop adc jl sahf jg dec test hlt data16 stc enter cld popf sti js mov cltd aad xor cli push jb orl push cli sub inc outsl pop push cmpsl adc and dec adc push dec cmp cmp (bad) out jnp in movsl mov push sbb ja sbb add fimul lods lods pop enter aaa in sti scas add lret xor stos fnop sbb jbe push sbb mov popf xor out loope push repnz push xor pop daa pop out jmp pop or and xor mov ja inc es cwtl stos mov scas jge popf xor in das mov dec or leave sbb xor push dec adc sub xor add mov dec into xchg data16 inc sbb into inc out cld and pop gs iret dec cs aam jo icebp add fdiv aad das push sbb pusha push hlt pop and push sarb fstps push scas cmp mov push mov push jp outsb lret dec scas cli cli or inc insl out cmp shlb sub pop cmpsb fildl mov stc pushf ja adc call cli adc mov stos popa or jns shlb mov cli adc adc cli loope,pt out adc adc and cli mov daa push inc jns ljmp mov iret adc pop stc mov nop aam or push inc add push or cmp aad pop cs jno dec pop jge mov adcb inc ret xor aam xor xor cmp and call jo xor test fwait (bad) out xchg bound pusha xor mov sub bound sbb jo movntps mov pop mov repz xor out xor or dec add mov sbb xor mov dec rorl mov xchg decb aaa mov outsb and loopne,pn xor daa push jae push add add cltd lds lea pop insl jae jns pushf push xor add std js mov push int ja idivb test nop or adc xor pusha fdivs ret imul push fs inc stc xchg jno sbb lods xor sbb or (bad) loopne fisttp repnz xchg or cmp ret sub add fadds mov cmp inc jne cld adc sub adc je add mov out les mov jns push pop mov mov push add int hlt cmp pushf or jle cli pop rorb movsl xor in mov insl jmp lock adc into (bad) mov fsubl mov int3 inc add dec add or ljmp fs xor cmp out inc xchg test jno mov adc dec xor or adc push cs gs add pop jp loop adc hlt pop (bad) mov mov xor fisubl sbb xor (bad) mov hlt je popa lea add out xlat push fxam adc mov cmp lcall (bad) hlt fcoms hlt in mov hlt imul and bound add mov rcr mov and and cs xchg inc push sub add xchg (bad) addr16 pop and aam dec dec aas ret pop js repz lcall cmp andl loopne jge int xor sbb add scas add and clc cmpsb mov and aam push push sbb clc cltd add xor sbb movsl fisttpll lods imul gs test inc dec adc xor in imul lds movsl dec adc cmc lahf or xor sub nop hlt sub arpl loopne andl push pop mov (bad) cmc push and lea leave mov mov (bad) int3 leave imul outsl sub add inc inc xchg pushf mov pop les xor pop jmp jne fwait or and or cmpsl mov leave out xor mov hlt lret adc test daa mov aas inc ja xchg out popf repnz shll cli ret jmp and mov add cwtl cwtl jmp daa (bad) xor xchg in hlt sbb in push addr16 subb bound push cli ss cmp push sti outsb xor xor or inc add mov xor stc js xchg in lds scas inc sub add insl iret adc dec jp je cmp inc pop and fldcw add hlt fmul and clc movsl pop inc xor push movsb pusha mov push es mov xor adc sbb out sbb stos outsb sub dec xchg cmpsl adc popf lods aaa cmc or jns jle sbb adc stos cmp xor pop pop cmp imul paddb andl repnz push adc mov adc sti pop les mov cmp (bad) in repnz sbb addr16 xor popf hlt xchg inc adc test sbb lret push loope test popf add mov (bad) pop push mov js daa mov (bad) sar in rcrb inc cmc sub push mov jb inc jbe inc xor cmp aaa loopne call sub in test inc adc jp cltd orb xor jmp mov test enter pushf cld mov jne jmp loopne fnstsw lahf hlt negl insl cld jnp hlt mov mov push push inc ret sti sti mov and adc add loopne sahf or push jbe sbb hlt mov push inc add or iret xor mov mov aad out sbb push pusha ss sbb or cmp xchg push xor lods mov push cmpsb xor sbb xor icebp dec mov inc data16 dec ret bnd jmp mov cmp and fnsave int3 mov sub stos sbb push jmp pop and ja mov and daa outsb jge sub mov jmp lret fisttpl jmp mov lods nop imul jnp (bad) or push jo (bad) pushf xchg stos pop iret pop bnd lcall notl insb (bad) xor out inc sar xor enter (bad) aam jp adcl fisttpll jae and iret mov setne push (bad) jo mov push stc xchg pop lahf repnz sub ret addr16 push xlat gs test popa or mov movsb roll fsubrl (bad) cmpsb leave mov sub sub cmp mov xchg jns shll dec add jnp dec add imul cmpsl insb pop sbb add lret cli arpl mov push jecxz push and cld das mov test cmp inc outsb add add into repz push dec nop dec and sahf jl loopne xor int paddusw mov adc adc mov sub push push aad mov out test cli push jge and pop stos dec mov push and xchg test mov jo pop (bad) pop mov adc jle xor cli xchg out push nop jmp adc and pop cmpsb stc mov stc xchg jo cld xor out gs hlt (bad) ds sub pop sbb adc scas hlt mov mov dec cmpsb inc std jge cmp je jno sbb popf addr16 test and fnsave scas mov push push stc rcll sbb lea fwait xchg stos imulb (bad) xor mov xlat and or xor sub dec fcoml lds setae xchg add aad pop jnp jg push jae push inc push and test repz dec ds clc xchg pop call inc jno fidivl xchg add hlt mov jnp or movsb in repz add xor sub pop add rolb enter jns and pop push cmp mov not ds mov add lret mov xor insb pop fiadd xor fnstcw and xchg (bad) inc add test xor jge mov pop fisttpll mov xchg pop mov into jnp adc mov adc loopne icebp test out sbb add push cli mov jbe or inc ja sub xor pop rcrl (bad) fdivl dec pop xor lods mov mov mov xor loop in scas xor insb pop stos sbb push jge rolb aaa negl movsb inc stos xor pop sub aad adc lret addr16 inc pxor mov loope xor loop sub int3 pop (bad) iret pop test imul lret jg mov std (bad) sub mov mov sub inc ja and sbb inc int3 jge inc stc test stos and test sbb pop popf mov xor je xor ljmp addr16 sub ret xor pop push or xor xchg cmpb xor jle cltd stc xlat and xor mov scas je adc mov lret shrb adc or (bad) hlt fdivr mov dec xacquire addr16 jo (bad) jp xor pop dec flds mov and xor je jbe je pop adc in xor xchg add (bad) xor test flds jl xchg xor xlat cld (bad) mov sbb pop xor add pop jns hlt add push add add mov stos mulb add mov repz add jg xor dec lea lahf repnz mov imul lcall sarl orb inc xor mov jae mov mov jno add and cmp aad lret jmp movsb mov pop sbb pop pop addr16 or add and cmp sbb dec sub add push aas je xchg sbb jl add jns jae mov cmp pusha adc aad and rsqrtps dec ja aas out mov loope,pn push sahf adc js pop lds clc loope xor sahf (bad) movsb push xor call stos js loope push and dec xor push xorl enter or jno dec jnp sbb push repz in (bad) mov mov add jne mov test clc mov mov jae dec stc sbb mov mov inc mov xlat cmp repnz cmp test dec jae add mov xor shr (bad) pop movsl push adc jp pop add sub ds in ds fdivs loopne lret mov jge xsave mov inc or xchg jmp pop fsts imul inc xor dec jecxz push fstpl xor outsl or jnp mov adc xor pop push mov mov push xor jg ds xor cmp jle out cmpsl xor sub aaa leave mov jmp xchg adc jbe or loopne pop repz mov jbe xor in in and repnz jmp les push stos push mov gs bound adcl mov fistp loope dec or and test jo jb pushf jge jg fcoml push and add lea repnz xor push stos loop or outsb and negb sbb or imul jbe pop stc push rcll mov addr16 jmp ja cmp add ja cli sub arpl ret pop lock gs adc cmp test sub sbb sbb xchg std mov cmpsb adc sbb sahf push clc sub pushf mov mov clc scas int3 mov pop mov push jmp and mov pop int sub stos fdivrl lea mov jge jge push sub cmp sbb add aas add mov imul push pop lret hlt pop mov das das lods cmpsl adc aas rcrb test js adc mov rcll or jge ja adc sub cmp and jecxz mov cltd lret call mov outsl xor mov test add push sbb dec mov fwait mov inc push add test inc xor gs cmp xchg sub leave je cmp adcb sbb dec and repnz and xchg push pop lods cli jg push xor in loopne repz fstl sbb lea scas xor push sbb hlt sbb das imul scas or push mov mov xchg aam out push and xchg int3 xor xor in xchg cs or jae fisubr mov xor add inc xor inc and mov cld push pop xchg repnz ds and aad daa jp jecxz jo adc int3 xor or pop jo ja or dec xor dec fcomip nop rcrl sbb sbb aaa fsubrs jge adc sub loop test or pop pop sbb mov push (bad) in inc push jne jle test mov movsl adc cmc cmp xor push ja cli mov (bad) mov call add pop or jno sti pop inc inc xlat pop jb,pn jle aad adc pop jae imul cmp jp push mov cli dec xor hlt mov or mov jmp mov fwait movsl sbb jmp cmp mov je jo mov jle fs sbb mov inc js xor or sub in popa adc xor lahf fidivl movsb ror (bad) frstor mov fcompl paddusw repnz xchg mov or push lods sub sub data16 fs jp push cmpsb jecxz dec adc jl mov stc add sahf clc xor fidivl in notb cmp push (bad) inc jno int fsubs jns mov or adc cli xor and mov cli adc lods jmp iret push mov pop stc mov je xor outsb xchg xor cltd or lods pop mov xchg adc in jb outsb and das sub mov push sub pushf sub pop call imul xor pop inc mov insb xor mov xlat repnz add pop sub jae mov icebp xchg rorb adc pop aam iret ret mov push mov data16 xor into sub in sub pushf mov fisubr mov jae ljmp cmpsl xchg cmp js sub int jno fidivr stc jg out push mov sub jge test sahf or je call aad int ret out xchg divb mov cmp ret loope cmp mov movsl mov loop repnz test push mov mov mov repnz mov or lcall xor sbb xchg sub inc dec push xorl xor lds pop scas and clc jne pop test jbe mov xor dec or mov mov in jae daa add push mov xor inc pop xchg xor inc mov xor ss fucomip movsl outsb add pop sbb frstor aad inc pushf cs push outsb jg addb cmp hlt movsb je,pt jo push fwait das test fmull jno out cmpsb test sti test xor iret and sub mov or (bad) outsb mov pop lret out xchg out xlat clc mov subb arpl mov je movsb addr16 xor push lea pop sub addr16 repz dec mov sbb and inc daa adc data16 mov jb sub mov jle pushl cmp int3 (bad) mov mov inc adc jnp jg and divb dec jo mov xor cmc lods lret xor xchg add cmpsb test nop inc mov or jno dec mov mov mov push push out es loop inc ljmp sbbl xor ret incb jge cmpsb (bad) aam mov mov mov sub leave repnz pop push push mov out or mov dec and clc pop bndstx cmp sbb cmp cmp in mov cli test cmpb push xor xor xor dec inc es cli xchg mov push jle jecxz pop ficom push iret mov adc test (bad) fistp cmpsl add movsl pushf lret adc lods mov adc aaa (bad) lret (bad) outsl cs xchg xor mov inc mov adc sbb and std cmpsl sub sar push jge and ss aas bound adc inc push cmp lods inc inc xor bound imul ja je jb aas inc (bad) pop jl cs jnp (bad) xor sbb in and add (bad) test xchg neg jge xchg test decl mov rcrb push idivl adc cmp xchg lret xor loop (bad) sub (bad) sub test (bad) adc xor in test dec testl sub insl in or xor shlb dec pop xor idiv loope sub adc jae jmp fucomp sub xor mov mov sbb xchg lcall xor inc jmp add (bad) xor stos stc jg lahf add sub inc gs std repz or mov fsts mov jae cmp cld adc mov imul subl push pop je or imul jle scas xor jnp push xor int3 add xchg imul cmp notb adc fisttpl mov mov push pop jb add xor sti hlt xchg push dec fisubl (bad) cltd movsb mov (bad) add stc jnp dec imul or mov push push and mov mov imul mov (bad) out sbb fwait jb movsb cmc jl lea cltd xchg mov scas pop xchg add lods adc outsb xor pop or adc aas daa xchg pop stc test xor aam pop (bad) xor add xor jmp hlt add sbb movl mov pop stos push sahf mov sub mov mov jl fxam cld nop lret out xchg xor add jmp push or xchg sub sbb jecxz fadds mov daa xor push gs rolb add lahf mov push xor (bad) adc sub dec and std adc int3 popa sub pop in in out gs cli iret add xlat (bad) mov xor cwtl das enter (bad) xchg faddl mov fisub mov mov push and imul sub and cmpsb or xor fwait push xchg jle outsb adc or cld gs sti rclb imul or iret xor push pop sbb sbb xchg stc sub (bad) iret sti push insb push gs (bad) fbld inc mov out cli les jl jno add aas popf mov mov or dec inc test sub rol int xor (bad) fildll or push jl jno adc xor mov cmc movsb pusha popf in jo clc mov cmpsb mov push data16 mov xchg lock cwtl xor nop sbb dec jae mov or sub push add and movsb inc xor add mov (bad) je mov repz lds and lea sbb in xor push in dec sub mov xor icebp mov or dec inc xchg xor jecxz mov push xchg or outsb sbb ja in xor add fs mov les and mov sub push insb pop push xor xchg mov push jne add xor icebp mov inc xchg stos mov mov dec adc mov push xor imul xor inc jbe stos mov cld (bad) xor xchg xchg and mov nop or repnz test mov pop or pop jge fnop adcb xor movsb loope sbb cmpsl mov xchg inc mov (bad) in mov sub mov stos (bad) cmp fbstp add mov mov repz aas and sbb dec lods mov mov xor cmp xor cli push adc repnz pop fdivrp ret int mov or dec xor shrl (bad) mov jne loop xor loopne scas popa (bad) xor imul inc (bad) sbb ret mov push test (bad) stc inc pop lret ret fstp jle,pn fdivs push inc xor add outsb dec sti mulb xor fs rol mov adc jnp mov jne aam leave ret push test mov shrb sti ljmp sub test es imul add sti aas and xor mov pop add sub adc dec popf imul mov xor jb clc add inc xor push hlt push push sbb inc mov hlt sub jno ret cld xor mov in add (bad) insl cli mov insb ret and nop test nop add xor imul clc ret repnz jl loopne sarb mov jmp mov cmp inc les lods xor add xor leave push dec ss in aam andl ja xchg xor xchg jmp fidivr xor adc xchg xchg jno xchg aaa mov add repz cmp adc call test and (bad) je (bad) mov xor pop stc ret ds lret leave adc sbb fucomp mov int3 imul xlat xor es lods mov (bad) jmp and (bad) sarb fsubl ljmp xor add push scas sub nop push repnz jno sub loopne push mov push dec cmc xor imul iret cmpsb lds lahf imul sub add cld fwait push fisub (bad) pop xor dec js jno push cltd outsl add adc mov cmpsb stc out clc pop sub pop add mov cli stos fbld or add mov adc xor sub inc push inc test inc insl cmp scas cmc in pop add (bad) fs mov mov lea ljmp sbb test dec jno sbb rol leave mov stos xor inc out lock hlt out ds jbe push (bad) jl je fisttpll dec lret ja or jmp mov dec xchg lahf or sbb pop add or jnp push dec xor mov xor enter and sub lods imul sub lret dec xchg mov jns insl add stc subl push adc mov ja fwait xor and push dec xor (bad) loop fwait movsl stc mov addr16 lods pop fsubs rcr lret xor pushf int lock or mov and movsl inc inc or loop and sub (bad) or add cltd xor icebp hlt mov fmuls cld dec sbb test dec xor pop xor inc outsl sbb cmpsb sub xor loope jp bound in jo je jge cmpsl adc clc dec mov jb mov jo mov je mov xor mov inc ss jecxz sub sub xor sbb je fwait es loop xor sbb xor movsb dec dec sub cld stc push ret xor sti or hlt in movsb and inc pop cmp (bad) mov jp mov pushf out inc jb jo ds divb cld icebp jno pop nop fxch adc push mov pop push popa xor xlat adc xor jae push int sbb sub dec fmul repnz and xor test test js imul sbb pop je jmp mov or xchg and dec scas repz ss ja scas add data16 daa xor jb jmp ret aad pop and or out add cmc mov push jecxz (bad) stos adc fstl xor sbb adc cld insl cmp fs or mov and sbb aaa dec cmpsb lock mov hlt xchg jecxz lods dec adc or push cli shlb jo inc push lret stos mov mov je popa icebp js cmc xor xchg fldl add imul mov sbb aam xor cmpsb jo cmp in in add js test gs hlt push clc imull sub xchg (bad) imul fwait std repnz push in xchg fwait shrb sbb mov add inc mov repz ret stos cld (bad) adc lret push aaa cmpsl hlt (bad) mov sbb inc and or popf lods cld dec push lsl mov inc lret jne int add sarb cmp adc fcompl adc pop daa xchg xchg clc cmpsb mov fwait or cmp mov and mov cli cmp fs subl dec call mov jg cwtl adc imul sti sbb pushf outsl mov xchg pushf std xor adc sub add push adc xlat jb add mov arpl clc out xchg aaa addr16 pop hlt jno fisub xchg clc lods lret lock pop xchg and dec cli inc add jae shlb xor mov xchg adc in jge cmp sbb sbb adc cld mov inc vandps pop lds push mov xor std pop in ret xor fwait xor xor loope push (bad) adc in or dec sti pop rorb pop (bad) xlat cmpsl push and adc pop gs dec imul mov int popf stc hlt sbb pop bound clc stos sbb inc in nop lret jge and pushf lds cmc and cwtl pop es xor mov cmpsb les xor out loop xor mov lret xchg mov sbb and xor sahf xor xor dec mov mov mov xorl stos fwait mov xor inc dec push fdivs sub int3 dec loopne mov (bad) lods fstpl mov push testb repnz dec mov cli int3 aad mov sbb loope sbb xor xor cli xchg push lret xchg mov (bad) popa xor inc add js jmp inc clc dec repz fnstsw mov jns andl (bad) dec repnz or jle lcall sahf or aam shrl dec adc jo and add cmp pop adc mov xchg xor dec adc (bad) (bad) test cmpl fcomp repz mov shrl jl xor outsb pop or mov mov xchg xor inc std mov mov shrb push insl mov adc and jno add push xchg and dec movsl push push test jg inc es add mov test mov and arpl scas adc mov (bad) je mov pop pusha inc xor (bad) push psubb adc ss clc inc adc in mov mov imul aad push je in cmp mov sbb jno fisttpl mov jp mov mov test and xor (bad) outsl test std icebp jg jmp jmp repnz clc xor std mov insl inc popf cmp xchg cld sahf push xor push sub xchg add adc cs outsl sub cmp sub rorb icebp pushf cmc pusha std pop les fstl cs sbb xchg xchg jo xor leave xor repnz jno test fucom cltd out stc mov cmpl add and movsb clc mov mov test daa fwait (bad) mov mov hlt push aam test inc (bad) xor std pop imul adc xor sarb sub imul cmc jmp fdivl sub arpl mov mov jle xor adc insb cwtl pop xor mov neg clc or xor dec cld icebp xchg clc enter xorl push xchg mov (bad) call (bad) xor insl pop push bound cmp clc pop or in popa sub push pop cmp gs sub or rolb dec clc fisubl out add add cmc aad (bad) repz dec pop (bad) hlt ja dec cmp out jno add fwait pop inc dec fs inc and xor push cmp repz or or xchg and int3 mov das imul in xchg xor pop or insl test xor leave loopne xor jle les add xlat jae dec push sbb cmp and orl jp incb xchg sub adc jb and stos outsb (bad) adc inc xor mov dec lds iret jo inc adc pop scas aaa jae test cmp rolb mov ljmp aam mov es clc lock mov push sub inc (bad) hlt sbb pop sbbl es adc ja sub ds lret pmuludq sarb imul cmp add xchg repz jns sub nop push adc cmp inc xor rcrb and outsb (bad) fistl pop pop imul push mov fwait xor gs stos push bound or inc sbb out jne jbe cmpsl loop mov insb fwait push jmp sahf fadds hlt cmp int3 sub adc xchg fdivl movsb popa xor in sbb ss and xchg xor pop (bad) popa mov inc and test mov xchg fnstsw data16 mov outsl and daa hlt in call std les xchg dec in movsl add and adc fisub sub xor (bad) imul paddusb lods xor sub mov xchg cmp aam xor into lahf hlt icebp aad sub xchg push cwtl pop xor pusha je out ss push loopne xor mov add repnz cltd lods das mov into and mov xor lea xor (bad) mov repnz and mov fisttpll hlt sub mov rol inc mov lods jno imul xchg frstor mov js sub xchg repz cmp mov jmp es mov jge xor les dec movb sub clc test movsl adc in xor dec mov xor push cwtl and sbb xchg add jp or loop push xchg lods dec das jno out stos jecxz mov dec pop cld add test jl pop cmc imul jmp jae or stos and lds fimull xor add repnz lods mov xor add pushf je push repnz xor dec adc mov add or sbb mov dec mov xchg lods or in movsb mov and outsb ret add fs arpl pop and adc adc sbb cmp cmp sub jg and (bad) mov push mov adc dec pusha or mov adc jae mov add mov lock ja shr stc imul test stos sbb out xlat xor popa outsl or xor mov (bad) int and ret inc aas jno lret push adc int3 int lock mov and jo xchg ss push ljmp stos mov xchg std xchg or add out out cwtl in int add or or adc adc incb jecxz lcall lret mov mov xor or mov dec (bad) lods mov inc out adc and mov arpl and repz and outsb or dec push lods pop mov jecxz,pn enter aaa adc and out lea mov add sbb pop cmp (bad) cmc mov out dec outsb fdivrl jge (bad) hlt out (bad) mov in pop mov adc mov rcr adc shrl mov xor loopne pop cli lret mov jp aaa ss adc xor or mov jae (bad) sar push inc add pop iret hlt inc daa mov push jmp leave js xlat add imul test data16 and mov xchg xor sub add repnz adc adc out repz dec repnz or pop cmpsl aas fmuls mov arpl loop sub repnz pop cmp cmpsb mov cmp add xchg lods cmp jmp inc sbb out mov popf in inc jl lds or lods or (bad) lret (bad) xlat hlt repnz adc clc test pop ret cmp pop and jmp test push mov enter add or jmp pop and xor add mov mov dec mov test daa push fwait xor mov imul cmc leave jge dec xchg jb jmp push mov jo je and loope pop out sahf push sub mov mov xor clc scas out fldt test inc pop mov pushf xchg cmp xor cmp ret push fidiv ljmp xchg xor pop inc sub xor lea push push cmc xchg and or pop (bad) fildl cmp inc xor dec stc outsl cmp fmull das imul imul inc xor cmp scas cmp adc call repz push pushf pop push dec aam and dec cld (bad) or (bad) xor mov fwait pop daa or push mov mov leave insl jp xor gs and mov lods sbb or jne movsl xchg jno add xchg cmp mov std rorb adc or mov adc sub xchg pop and xor xor clc test cli ljmp mov push xor pop jb adc fbld add cwtl stc xor push fs sbb repz add jle sbb data16 stos ljmp hlt xor pop aam push mov (bad) cmp sub pushf add ja inc fs mov adc add mov adc sbb jb push lcall test pop jp fidivrl dec lahf mov mov fcoml pop (bad) xor cmpsb daa xchg mov movsl (bad) jo jns xchg std (bad) lds popa add xor faddl xlat in cmpsb xchg mov adc dec ja jbe stos xor cmp lea mov mov ror subl sbb and (bad) fistp and jb,pn (bad) dec lds mov icebp adc mov insb icebp mov jmp xor mov sub enter jmp out pop sahf cmp loop mov mov adc dec (bad) jne push bound push and push and and sbb mov test pop sbb insl bnd xor pop flds mov aad sub out adc (bad) lret mov and scas and aad pusha push sub xchg jno test bound mov adc rcll sub jge or bound movnti or mov push ja pop mov xor ljmp sub or pushf push sarl or cmp mov xor pop ss out scas outsl sbb ja mov cmp mov mov out shr fdivrl movsb or jmp sahf shl xchg adc xor and dec push cmc xchg pop scas inc cmpsb insb cld sbb cmp cld mov jne sub xor ljmp jle aam push dec xor das mov xor add push mov sbb or jno mov and mov pushf push aas add sti cltd clc sub pop sub add iret ret (bad) cli cwtl adc sbb aaa inc sbb fisubrl cmp sub xor pop adc orl ds mov jne push or std scas xchg bound stos jmp es xor inc sti xor dec out sbb daa insl xor ret dec jle (bad) aad push sbb into dec xor lret mov inc xor mov sahf ret xor stos repz dec jne in loop loop mov jg jnp sub and aas add cmp push push out inc or test pushf lds ja,pt xchg scas ror clc je mov adc aad cmpl (bad) mov inc or xor push push add fwait jbe mov enter mov lret gs in hlt jl sbb popf or xor scas and dec dec daa ret xor loopne bsr bound int xor fldt fisub fs mov pavgw mov inc push add pushf add jns push xor int3 xchg jge outsb push lods adc sbb push je xor xchg cwtl mov ds out ss (bad) pop lret sub mov pop into xor jge aaa cmc stos gs mov mov adc divl inc push xor clc mov xor or subb es (bad) or mov cmp lock or clc hlt mov add and pop (bad) xor fidivl lods sub sub or lcall addr16 jae leave lock mov in test or push xor pushf sub das dec and lahf sub inc xor jne stc insb je fwait (bad) call jecxz xor and inc xor sbb in sbb xchg mov stos dec addr16 and lods nop dec jmp repnz cmp jecxz adc outsb xor daa (bad) mov mov jae repnz or test es inc ds loopne sub jnp (bad) mov jg jae xchg mov add roll jecxz mov push leave daa (bad) (bad) xor pop adc cli in clc imul popa and pop inc cld (bad) xor rcll sbb mul add xor mov enter xchg scas jbe pusha imul jle lods jmp inc mov pop pop in ljmp xchg sbb aam pop stc out push push dec xor push addr16 sbb jp out sbb les inc or push and lcall je xchg cmp mov xor mov sub jge push cwtl push jno decb or fnsave mov xchg inc clc mov xor dec pop pop xor jmp xor push inc mov es into mov jae adc adc rclb fcoml imul into pop pop popa and sub and repnz sti adc mov mov out imulb out push (bad) out scas (bad) cld push pop pop xor test sbb nop pop or xor adc push fsub push daa or xor mov jl insb call divl nop into xchg adc clc inc repnz jno jno jo addr16 sbb (bad) mov imul or adc mov inc dec add jo fs xchg in or cltd (bad) hlt sahf mov sbb sarb ret stos (bad) hlt into jmp add cwtl mov add gs jp insl lea (bad) jno push decb repz mov cmp pop push mov fmull adc mov imul or jg data16 mov repnz daa outsl mov or mov (bad) in hlt cld ss sub mov sub leave cmpsl sbb je and inc in inc (bad) aam out lock aam sub (bad) (bad) mov (bad) (bad) lcall lods hlt in rclb into repz jmp jb mov xchg (bad) adc lock push dec push or fmul jns mov push jo mov mov cmp inc popf mov xchg mov shl mov gs test lret pop cmp jnp sub loop xor insl inc adc fnstsw cmpsl and stos dec push subl in cmp adc sub (bad) ss fnstsw sbb (bad) mov in mov je out sub daa and cmpl xchg sbb push mov ficom push cs (bad) aaa push nop jmp stos pushf and sbb pminub jae and aad jnp mov inc mov icebp dec (bad) and cltd inc lret mov cmp mov repnz jg test (bad) or xor dec sub call bound call xchg lods out push cmp adc ret and push fdiv mov hlt xlat inc dec aam sbb (bad) rcr iret pop (bad) (bad) push aam lret mov stos stc iret (bad) mov dec iret addr16 adc das push (bad) xor add or xchg mov mov ror daa mov push push sub cli inc jl xchg push adc sti mov mov jns rcll mov or dec cmp cli ret xor cmpsl cmpsl xchg mov es hlt in add lds in sti das xchg js jae fbld clc inc dec adc push in cli cltd or xor mov jae jb (bad) hlt int mov inc call mov xor out push stc icebp dec cld cmp stos pop outsl lods cmp arpl push jnp sarb ret mov push xor push lods loopne repnz in out xor dec int jb jbe xor dec jne pop aaa adc pop sub fwait pop cltd sbb icebp mov and pop xor jmp sub cmpsb cmpsl adc xor mov lcall out fbstp dec lods hlt sbb pop and or inc dec clc inc xor lahf mov (bad) sub dec scas movsb jl and xor xor ret movsb test (bad) xor inc imul jbe cld rcrl jp mov inc hlt icebp xor jg xor pop mov and inc fidiv or xchg dec cli sub cmc fs xor dec mov aad mov xor lods ret sub xor hlt sbb xor add (bad) pop cmpsl pop loope sub mov into xor inc adc jns aaa insb out subl ljmp jbe inc lods cli cltd xor ds ja (bad) mov push (bad) hlt xchg xor pop and repnz sbb test xor cmp cmc mov or das (bad) xor movsbl loop cld dec imul xor dec or js test nop push fldenv jno repz sub mov or icebp pop jb dec adc add cmpsb xor mov aad adc imul xchg xor and or faddl fidivl sub imul mov jle dec mov stos xlat add and xchg xor call and shrb test (bad) mov xor rcll push push imul push aas cs arpl clc xchg jae nop loopne out pop (bad) mov adc sahf mov dec mov adc jmp fwait sbb dec sub jmp push xor mov clc (bad) xor or arpl stos inc cld aas out mov push ss mov xor mov add imul loope xchg hlt mov add pop mov movsb adc jbe lods adc je aad lret push add mov cmc pushf in jb push outsb hlt push test ds jbe stos and xor popf nop jmp xor or mov movsl aam nop mov xor xchg mov mov ret aad add (bad) xor add popf cltd pop mov insb jl scas pop xor int3 mov aam mov push clc xor dec pop xor fidivl mov push aaa jne aam pushf (bad) mov sub cli xor mov sti pop lahf mov add inc push cmpsb insb clc stc add push mov jb jnp cmp (bad) sti lods xor aam or pop pop xlat mov out xor pop js and imul dec mov push jmp adc loope in js cmpsb xor pop mov in cmc lods ja xchg xchg inc or xor lret dec jl jp or hlt lea or mov int3 movsl jno out inc in dec xlat dec (bad) push xor cwtl adc xorl sbb in (bad) in cld inc xor mov test push pop dec pop and inc and (bad) leave lock mov cmpsb push sbb and sbb mov jmp sub xchg sarl scas inc push xor daa inc pop fstpl repnz inc inc cli dec add mov gs arpl roll dec pcmpeqb sub cmpsl and pop xlat xchg lea mov ret mov js sti (bad) xor sbb int dec or cmp push and cmp out lret (bad) fdivl pushf push adc pop mov adc aaa mov inc cld xor pop and jbe jmp jge mov popf pop sahf or jl adc push inc mov imul push (bad) mov mov mov jno repnz sub scas xor jmp (bad) xor sahf incl lods add gs jl adc addr16 jns sbb mov and sahf ja cmp popf addb punpckldq add jae ds add adc or sbb mov cmc cld inc jne jno inc and in nop lahf cli ljmp xor mov repnz mov sbb jecxz adc xchg xor jo pop xlat xor (bad) push push and mov xor sub (bad) sub dec or adc sahf ja inc push lea xor lods sbb mov mov xchg xor and pushf mov xor mov sub or pop test dec repnz cld je fadds leave or sarl push sti or in and mov push imul das enter je sbb dec inc xor mov xchg push jbe and dec cmp adc jmp aam xor rorb popa mov add pop xor ss repnz jns cmc call cmp sub arpl lahf (bad) hlt in loop sub xorb push dec das (bad) out push ljmp aaa enter je xor sarl lahf cmp push jno inc add jne xchg sub (bad) or scas xchg out mov add loopne dec in cwtl cmp es loope xchg mov js xor or ds dec out xchg xor mov and fiaddl cmp mov push add and fmull cld xor pop (bad) hlt add shll fdivr sti pop mov pop sub das mov and push clc xor fsts sub add das loope es jno sbb and sub push ss aaa out imul pop outsb hlt rorb add dec and xor sub adc jno ljmp scas and jbe xor cmc movsb sub lret scas rcrb ljmp jns out fnstenv pop cmpsl cli mov icebp or or mov adc xor popa sub repnz cmc cwtl jns mov stc mov push fmulp add dec (bad) lds test frstor push popa xor je mov popf cmp pop es out xor fld cmp loopne hlt je dec test negl pop dec pop shll movsl data16 imul jmp pop loopne pop or cmp popf int3 xor and mov lcall pop test mov sub loop es fwait lea lret xchg inc pop pop or jns xchg out adc adc stc or push popf add std es push loopne (bad) jge jno add aam aas add les mov pop add test cld inc ja jmp push loopne andl cmpsb std and jo dec ds dec jg xchg shlb mov out or mov mov in push rolb or sub repz jmp jnp push jno jno xchg pop mov movb push aas mov out bound jno jg jle cltd pop movsb mov sub or dec mov adc xchg sbb das cli in in stos dec jmp aam sbb and fistp dec dec call adc ret imul cmp mov loop mov test sub jo les inc adc ds popa (bad) clc je repnz inc outsl add push negb aas dec mov icebp (bad) rcll jp add ljmp test mov sbb adc cld cmp jge or xchg cli out int xlat inc dec mov repnz repnz sbb lahf add iret cmp testl mov clc cmc mov movsb push jnp xchg add dec decl dec sub mov xchg adc or outsb fwait icebp repnz mov push xchg cwtl mov (bad) mov add push pmaxsw adc push loop data16 mov jae in fistp lcall add test sub pop jae fsubl push fdivl jb jmp xor push enter push jecxz sub jge aas test jb mov or jg xchg aad inc pusha sub or insl call in pop fistpl sbb mov in int3 push dec adc cld push clc les enter or jg les out or pop xor push lahf in shrb pop jl mov sbb mov movsb inc and jle mov cmp rcrb push add inc add add test mov pop in sub fwait std mov pop mov stos loope add push mov enter aas aam push rorb xor lret jl jmp mov mov aas adc mov sbb lods test nop sub pushl pop movsw imul adc aam cmp xchg gs cmp rcrb in dec xor dec add je xor sub imul (bad) hlt jne test mov sub push push imul push cli mov (bad) dec sti mov xor jp imul xchg push outsb les adc push cwtl inc mov mov xorl (bad) mov xchg sahf mov cmpl sbb imul xchg sbb adc add mov cld sub jl add pop adc xchg mov pop (bad) jo adc sbb mov add sbb mov fsubs lahf in lret sahf aam loopne int add xor adc cs adc (bad) sbb ds jecxz rclb popf je cmp inc xor rol xchg and and mov cmp mov jae addr16 pop sub inc test push sub andl lret fisub dec mov mov fstpt scas jge jns,pn jmp xor sbb les jl sbb jae cli jmp pop (bad) (bad) daa sti test sub mov sbb cmc and (bad) aas sub cli mov sbb test in inc rol movsb mov aad ja xchg mov xacquire mov rolb popa leave dec (bad) jg (bad) xor cmp out mov push mov imul (bad) jp cmp icebp mov add arpl xor push mov test js push or push and push imul adc jne js inc or pop gs xor (bad) hlt shrb sbb fdivrl loopne add adc popa imul inc pop mov (bad) xor repnz hlt and jae lcall or mov popl jl xor sbb iret inc into mov insl cmp mov adc inc in xchg mov in jg clc hlt xchg fist icebp xchg sbb stc fs outsb dec dec sti xor (bad) repnz adc test xchg out push sahf push adc or sub jg jo adc (bad) inc jno cld cmpl loop iret mov aaa pusha push cmp jmp dec xor xchg into and xchg stc push mov ret cli adc sub imul sbb lret xor inc mov loopne and jb iret adc (bad) insl cwtl or (bad) fmul inc dec (bad) std lea or pop (bad) add push xchg xor sahf xor jecxz test fs xor pop mov mov ret xchg cmp jmp xchg loopne and xor pop mov lcall aam jbe ds imul inc int3 (bad) cmp sahf mov in into and sub sbb push adc jo jns jae nop pop pop sub mov jb dec mov jp jg fdivl stos push jge push icebp adc pop pop cmpsl call push daa sbb or push sbb mov jns mov icebp adc push or cli fs push scas fldenv fistpll push lret lret js pop stos icebp xchg setge pop sbb movsl test mov sbb sub cli andb sbb stos pop pusha sbb rolb xchg (bad) (bad) fildll in lock and js sbb xor fs enter sub xor stos repz xorb or cs jo hlt bound lret push or stos or mov int add fcompl mov out les fadd loop or jecxz pushf fisubr xor push cmpl pop jne mov hlt ret inc stc mov mov mov or xor dec sub (bad) xor ret stos and xor mov push xchg gs jb jno mov pop (bad) fstl ja jmp xor repnz sub cmp ljmp aaa imul jmp test pushl mov lea xor in lods adc call sub movsl xor (bad) (bad) jo inc xor xchg hlt fidiv push pop cmp push lret adc cmc mov pop aas in inc mov clc es add sub mov loopne inc inc add push repz icebp btr repnz mov iret xchg mov aad sbb imul and (bad) ss dec adc repnz in outsl or sub cmpsb pop adc push jecxz sbb xor imul jb mov and mov scas aaa mov mov fsub mov (bad) lret lea repz icebp iret std mov jecxz jmp dec aad cwtl and iret add or mov fcoms sub lods (bad) ficompl (bad) mov jno push xchg mov (bad) push dec pop bnd or repnz cld mov div imul dec push bound mov push in ja sub sub jmp mov icebp repnz int3 adc sub shrl cmp adcb adcb mov shlb inc mov subl stc stc ret sbb dec sub sub cli data16 movsb imul pop js inc lea out push sub bound or jns cli push loop fidivl sub lea je ja mov add test inc dec xor sbb dec mov push adc jno icebp leave out inc ss fwait add jns pop mov jl mov dec cltd add adcl mov pop dec sub or cli mov adc sbb sbb out shlb (bad) pusha mov mov shrb repnz roll sub decb stos lods jmp dec jle ret inc rol andb lret push jae add mov add adc (bad) fdivl mov dec sub jne idiv jmp adc popf sbb mov cli xchg pop (bad) fistp mov adc fwait test xchg add or cli mov xlat test js jle or repnz sarb xchg or out mov in inc or popa (bad) cmp pop test push push bound sub cmp cmp mov mov jmp loope jbe cli data16 sti xchg sub cld std pop mov mov in sahf mov fcmovb loop aaa fildl pop add mov adc xor push (bad) mov xor xorb lea xchg out mov xor push je or ds mov push sbb xor cmp inc cmp push inc mov sub in xor push xchg xor xor adc jbe push xchg dec popa inc lea xor test dec xor subl mov hlt es mov stc add imul popa adc push mov or jns pop mov pusha out cwtl daa movsl and stc adc jbe xor out inc out repz mov push lahf mov xchg int3 jne sbb hlt pop mov (bad) jg outsb imul enter mov or (bad) and aaa and xchg sbb mov adc (bad) jns loopne sbb and gs and or xor in popf pop jne pop push or das stos outsl or push sbb lea xor jg cmp gs push ljmp mov ja lods repnz adc cmpsb sub add xor push sbb das cmp xor push aad cmp or dec je lods inc unpcklps cmp xorb pop xchg (bad) xor mov ficompl mov xor lds add inc repnz repnz mov xor (bad) pop mov jp adc cmpsb data16 sahf cmp push clc movsl or xchg xor (bad) xor mov and fcompl aad divl stos pop aam outsb leave jns inc mov (bad) sbb add test movsb mul bndldx mov mov push push sbb xor movl sbb outsb dec rep add and xor pop or and mov scas lret xor nop mov push (bad) pushf out gs mov sub (bad) popa inc sub adc add push (bad) cmc les pop xor or jae sub lock xor mov mov xchg adcl lea or dec or cmpsb dec xor fcomps sbb cmp xor cmp xor add sub cld dec push inc push roll pushf jmp mov in mov js ljmp in test jle xor pop into clc mov imul stos adc adc cs dec ret gs fidiv movsl or clc cld or mov in arpl add mov add add mov out jnp mov push cltd movsb dec xor fimull lods repz inc xor xchg pop sti add jl mov adc iret mov or negb je sahf insb enter loope hlt xor push adc pop mov cmp test loopne insb daa add xor movl xor add je inc mov push mov xor fdivs hlt inc or inc pop pushf mov dec mov jge cmp into jb adc das xor ljmp lea int3 xchg adc aas out jb int aas inc fmul sbb jge repz hlt fnstcw out xchg int3 out sbb insb lds jno lods and outsb repz mov mov out aaa mov mov jns mov jge movsb mov bound ja cmp jnp jae (bad) into in aas mull cwtl ljmp add int push xchg fs jne adc jle dec xor mov sub (bad) xlat jae mov inc out mov fisub dec push add mov mov repnz mov fdiv (bad) and dec add insl in test in imul sub mov call push inc in int adc inc sbb xor lcall xchg (bad) cld mov cmpsb or daa leave and cwtl (bad) xor adc cmpsl mov push add subl lea pop std mov or push sbb cld adc repz clc add xor outsl in enter loopne sbb and inc mov leave or cli jmp (bad) push mov cmp hlt cld cmp push inc loopne sbb mov mov hlt mov test pop sbb xor cli jmp call es dec mov sbb push dec test out lret in fiaddl xchg lcall xlat mov or gs and call mov out ret sarb sti add xor lahf pop adcl cmpl hlt dec sub pop scas test xorl add sbb or jns imul mov imul neg xorb jae mov dec pop or and popf push arpl mov repnz fdiv in lods shll add fnstenv fstpt xor repz loope cli pop adc xor jmp jae repz jl jge,pt dec out bound rolb loopne hlt mov fstps pop or push loop insb sbb fcompl adc stos repz adc push jbe mov ficoml and int add jb lea lret and push daa das test es jle and fdecstp lods jns out hlt lea add (bad) lea add lock mov and xchg inc mov mov inc adc push (bad) push pop imul add aaa lods adc lea int3 in sub jne js hlt or xchg outsb in fdivrl fisubr sub call sub test aas insl lcall (bad) xor mov jge mov movsl add imul xor iret lret std xlat jb lahf push gs (bad) hlt add dec sti aad xor sbb divl jmp mov xor stc cmpb sub xor cwtl jb popf jb in call adc xchg sub and loop out fs xchg jae cmpsl mov loop das stos or movsl dec clc pop outsb scas cmp adc sarb daa mov adc sbb dec jg jns or jl pop xchg cmp mov (bad) hlt (bad) push sub cmp insl repz out ret pushf fisttpl je clc out dec xlat add popa cli popf xor mov (bad) hlt fdivs test mov ds lods popa xchg jae dec xchg mov cs notb mov push out push jge nop sub repnz test xchg nop pop pop in push aad xchg add cmp pop add xor imull xor movsb fnsave (bad) fs ljmp mov push inc xor jns push ja ds imul (bad) lahf mov mov xor outsl pop and xchg cs inc and dec pop mov gs outsb fs test stc push and movsl or pop sub loopne in mov je inc insl icebp xchg cs sbb add adc cmpl push in out mov jnp dec sbb push stc ret mov lahf negl pop cmp ljmp sbb movsb mov mov jno movsl inc dec test push ja inc daa or je xor push mov sub aaa mov fbstp push mov mov mov and and cli mov and dec sti xlat adc fisttp jno addr16 push stos (bad) mov push fimul xor inc scas jb push cli inc ror in sti test pop mov lret rorb dec or adc sarb or pop sbb movb subl lea es std jne rcll adc dec push mov aaa sbb sbb imul mov and dec fs gs cld in stos pop xor aad dec pop js xor in mov add xor cmp cwtl test pop add ds sub mov fiadd xor mov outsb xlat xor sbb pop push sbb add sbb mov inc xor cmpsb sbb fnstenv aas sbb cmp or jecxz mov cmp popa loop xor pop ds outsb test push cmp jle add sbb imul pop pop movsl or adc push aas pop or mov mov cmp add and sti dec jle in xor fmuls inc cld xchg cmp dec lea xchg mov pusha repz mov adc popf cmp or or (bad) loope gs out sbb jp add add jge hlt xchg fmuls pop ljmp notb je std fisttp sub cwtl push xor loopne dec imul movsb cltd mov iret addl pop dec pusha call fisttpl and out push add gs or fldt hlt das mov cmp js cltd shl jle add xor dec jge hlt je cmp bswap sub xor subl or pushl loop add pop cli daa ljmp or push dec xorl add repnz inc add daa xchg in dec xchg pop pop push mov mov fist lds mov imul mov dec adc aaa shl mov fidivrl jg sarb (bad) cld out mov or cmp movsb (bad) jbe add mov sbb jnp mov inc or cmp jecxz je or (bad) cli pop mov fs mov mov outsb sbb xor pop ja push or aas cli jno cmp xlat and inc lret stos inc (bad) jbe cmp and sub add jae cmpsb add or jnp (bad) jne xchg cmc sbb cmpsb mov pop ror aas and out fcoml push ljmp neg test inc sahf or jo adc ljmp mov shlb and and pop xchg mov (bad) pop arpl mov movb (bad) xor mov aad lret push push xor mov jns int3 push int3 sub jle jnp adc outsl arpl jo sub or and xor mov fisttp adc cli ficomp test inc clc js jae idivl add adc fcomip jae adc stos (bad) out movsl add fmull xor inc movsb (bad) inc adc aad fs test cmp cwtl std sub daa xorl hlt xchg pusha dec hlt test mov inc test push lock or sub gs xor fs add adc sub vmovq xchg push cmp mov sbb mov stos adc push mov (bad) and or iret fisubl mov gs cwtl inc xor cld rcrb jne pushf jb jo insb mov data16 xchg jg mov xor mov sbb in fistpl cmpsb sar stos mov push mov pop mov jmp mov repnz insl or dec pop (bad) adc std in jmp jb add sbb or adc mov ja (bad) sbb (bad) jo or je faddl ds loopne dec mov (bad) mov clc add or das jae push add mov lock cwtl mov xlat mov jp xor jmp sarl add jo jnp jge lret xor cltd inc push ss xchg and fimul adc flds stos mov ljmp stc xor sub pop sbb mov lods push xchg lahf fimull xor cld test je imul jno xor or adc repnz mov (bad) je sbb cli mov jg xor ret cmp into mov aad fildll jb jge and repz dec mov les and xchg sbb cli jb (bad) mov pop cli and sti mov push lea and btr (bad) cld sbb pop mov xchg pop jp movsb jae cmpsb (bad) iret test sub push out push pop pop ss mov xor dec jp dec (bad) adc push xlat shrb or cmc fstpt hlt mov (bad) pop enter push pop shrb int3 push loopne mov outsb iret xchg aas push repz mov ds inc jle (bad) jno unpckhps int pushf or idivb divl es sub das mov ret mov mov test nop fstpl ret mov cmpsl fcomi pop (bad) jmp cli mov mov test xchg out or xchg xor mov xchg jg,pn repnz push mov push js cmpsl and lock xor pop xchg daa enter or xor mov xor loope xor int not aad mov or mov xor loope insb (bad) and xchg mov out popa push xor imul xor cmp dec mov sbb addr16 cld loop dec push in hlt xchg lock push out stc icebp movsl xor lret xor push scas test xor ss pop insl xor aam repnz push pusha mov fimull lahf and sub (bad) repnz cmc in lahf xchg mov fwait divb ror ds aam sub lods xor test adc add das inc std andb cmp fdivl ret inc dec jl xor lock hlt inc cli adc stos popa adc or xor xor hlt ret inc insl out scas les mov mov sti jne incb sub push mov jb push hlt xchg cmpsl loop popf cld push mov fidivl and xor scas rclb imul push add adc push xor sub fs (bad) repnz xor jno adc xor cmp adc out int shlb xor lahf jecxz adc mov xlat aaa push pop mov (bad) xor adc lahf xor or inc push mov jnp jns outsl dec and jne jno lret mov dec pop fldcw xchg sbb xor lcall rcll cmpsb mov clc test push sub (bad) iret add aad jnp xor arpl out adc sub into jle xor aas push cmc add jne data16 and and shrl jnp sub xor loopne mov aad cltd jmp push pop jae inc cs lahf out negb ja out xor mov xor movsb add adc xor hlt lods push and mov jno jae lock xchg mov (bad) xor and dec push fdiv pop xchg xor pop push xchg repz mov mov leave nop test test popf fnstenv stos pushf dec enter cmpsb rcl jno ja movsl and sti mov aam adc ljmp adc int in pushf sbb int3 popf js cmp push jns pop cmp jno hlt mov add lret insl mov dec push push adc pop out sub pop inc sbb les (bad) sbb dec clc mov std adc sbb jge loopne fisttpll xor push scas and xor xchg or es or inc outsb hlt je cli xchg mov adc or jno shr push jne sub push cmc (bad) out ret hlt mov push mov jbe das mov int3 lds mov lret (bad) xor outsb push pop jne or xchg sti xor inc pop cld fs lret js mov xor mov in clc jne xor adc sbb pusha sub inc jne es mov sahf push xor fcomi fsubp stc pop popa mov mov pop xchg mov cmpsl push mov sbb mov adc xlat and aas (bad) xor push cli das popf jle in repnz pop jmp push adcb adc cmpl sbb adc ficomp mov pop mov jb adc and mov jns inc cmpsb xor in lods (bad) xchg repz jbe ret xor adc push scas inc insb scas xor movsb push shl imul scas xor cmc aaa mov cltd pop (bad) push add add cs dec xor jns clc inc popf jno jle and je call int3 mov lahf (bad) jnp test sbbb repz mov (bad) popa jae cmp add jne mov in sti cltd adc push sbb scas movsl xlat jge add in sbb or xor mov lds fwait pop clc add and je xor xchg push adc jae or or movd xor sbb mov inc pop adc xlat pop lret mov sub pop xor mov mov stos xor mov loop (bad) adc inc inc jmp add jne sbb jnp xor gs mov mov repz fwait and or pop sbb push lcall adc mov xor leave rcll push (bad) xor mov jno mov push aaa je roll ss mov bound push xor fwait pop dec sbb rclb xor jge hlt jg fstpt add xor lcall cmp sahf mov (bad) test xchg loopne out mov sub jbe stos or in xor mov mov add hlt cltd mov popf hlt outsl imul xchg pusha fwait popf clc cmpsb test push jecxz ror es mov jb mov stc cmp ret pop adc pop or mov popa ja cmp arpl xor sub jmp xor adc popa cmp pusha inc xor ds hlt jmp mov jo push (bad) adc mov inc ror sub jmp aam shll ds xor push in loopne icebp pop aam mov xchg movsl notb in push or xor cld mov jo lret push mov xor jne sub das jno pop mov (bad) ret (bad) ja sbb xor mov hlt xor das sub (bad) fimul shlb rorb (bad) mov cmpsb (bad) mov jns lods sahf dec or jno les (bad) xor cmpsl and dec push mov adc or gs jno sbb aam push push (bad) cld mov adc (bad) enter push jg and push cli imul sbb and mov mov or or popa dec add das stos hlt stc les stos inc cmp test arpl push or in enter jmp sahf lcall push fmul inc stc dec outsb lea and hlt cwtl nop adc push and and into pushf (bad) mov clc (bad) hlt mov setbe sub sbb dec repnz add pop (bad) rclb movsb and sub stc scas pop xchg adc or xor ror and jb ds adc xorb and repnz lret popl dec jecxz mov add add fs je pop dec sti adc mov cmc movsl add lock movl jb jns cmp sub lock xchg mov es (bad) adc add data16 icebp aad pslld sub inc xor adc xor xor out rolb cld jbe addr16 sub and in arpl leave adc add (bad) fwait mov mov out and pop jb rcr add clc out xor jecxz sbb sti imul sbb repnz and push addr16 push in mov mov sub shrb (bad) outsb and mov mov aam ret aas test popa add add push ror cmc lds js mov xchg xor (bad) loop jg jnp or xor lret in xchg test add jnp mov daa mov add jmp outsl push push dec insl push jl jle inc dec cld xchg inc xlat clc or loope sub mov dec jae and dec add xor ficom fdivl iret fisttpll repz cmp mov lods pop sbb repnz out aaa xchg mov push adc rcrl lods push call shrl mov lcall dec sti inc lods sub cmpsl push sbb imul push (bad) jnp or pop xchg dec mov rclb (bad) xlat xor lcall pop xor movl mov pop inc lods xchg aaa push rcl aam xor push mov (bad) je int3 lcall pop mov mov mov aas in jb cwtl mov inc pusha pop (bad) hlt loope fadd mov and jne xor (bad) push add push push and mov jbe imulb mov xchg in push sub push pop jb jle add inc jg push mov sbb add repz mov arpl pop mov pop push data16 push aas sahf or repnz jns xchg adc pause cs es adc xchg scas mov dec jne imul ret push iret mov mov in mov out mov mov pop (bad) mov jge outsb mov inc dec (bad) sbb (bad) fsubr je xor icebp ss mov cld outsb cmp push fnstenv push or xchg or and and stos ss sub (bad) ss mov mov sti mov mov or mov div sahf sub cmp pop xor dec (bad) aas xor imul stos pop jmp scas mov adc push mov xchg cmc imul (bad) jnp jle cld cmp fnsave lahf or ss cmovns lea sub outsl inc jbe loop cmovnp push das jmp cmp test dec xchg push loopne (bad) je sbb fmull test stc xor lret enter outsl xchg std mov clc popa jecxz imull mov xor aam jge sub dec xor xor scas add and cmp test cmp cwtl pop or mov stc dec test (bad) mov and push mov daa outsb add pop xor push xor js leave push in (bad) lods (bad) in add xor (bad) xor repz cmpsb and pop outsb in add sahf jmp hlt mov cltd push mov mov popa fnclex and cmpsb stos mov pop fbld mov lahf mov jle roll idivl inc xchg sti fxtract int es cmpsb call test in jae mov das call adc and add jae pop xor mov sbb sub cltd pop es adc cmp mov repz and in xchg jp imul stos mov xchg lea adc add jo clc xchg xor (bad) mov iret (bad) btr sbb push sbb xchg aam add popf xor push cmp daa mov call and push ja sub and mov out xor and inc fnstenv out jp repz ret lock add push ja xor (bad) repnz lock je insb pop add hlt pop xlat push sub lcall xchg rorl pop sbb mov ret or js jb mov fcom dec nop insl xlat fcompl popa sub in mov xchg mov push inc jnp jmp shlb imul ret xor cwtl push in insl mov lock push (bad) xor out inc adc lea jae nop cs les das stos xor mov test inc gs mov arpl push xchg clc (bad) adc push xchg repnz iret xor cmp leave imul loope sbb out repnz bound push loop mov cmp (bad) jbe addr16 push mov sbb mov jo jmp mov iret insb dec insb adc int sub pop jbe sub aam jg,pn bound fs gs repz in (bad) rcrb mov (bad) xor decl jns jmp push mov adc xor fisubl sbb rcll loopne jmp stos dec pop fistpll and and ror (bad) mov push mov cmp das addr16 fcmove sbb jb sub cli mov mov mov cmpsb imul stc add or mov mov clc xchg add jp mov lods les or sub cmp cmp add adc hlt mov push mov out movsl sbb fs jmp inc pop adc xor push and xor lahf sub stos mov insl (bad) cmovnp bound pusha repnz nop xor pop repnz push and jno fist mov mov into xor aaa pop or jl sub outsb xor dec jo lods mov adc jae data16 out jmp xlat lahf pop dec addr16 mov stos repz push adc loope dec jnp movsb mov jb mov rorb cs add dec jp push mov xchg imul cld jnp stos xor mul cmpsb mov mov fcomps dec lods aaa pop jae jnp movsl in test (bad) repz fdivrl aad cmp nop icebp or cwtl xor lcall xor gs mov test cmp dec cld jb,pt push cld xchg mov in cmp cmp xor in lret xor jge add xchg jbe arpl loop add mov xor repz sbb xor (bad) cmp dec lret mov mov aaa repz lcall into aad pop jne jns jae xor or push int sahf add idiv (bad) repz mov movsl sbb xchg jbe inc stc add xlat jp cmp aas bound sub push in mov outsb lsl negl lcall js xor lahf (bad) xor xor cwtl mov out lahf pop xor and mov jg rorb test fs js fwait daa div shll cmp or (bad) into cmp movsl jmp cmp daa in lcall data16 xlat fisttpll xchg sub stos mov mov xor mov inc scas xor test das bound mov mov xchg bound fwait js sbb aam xlat (bad) into sbb jb test or (bad) out jae (bad) xchg push pop jbe aam out mov or out cld ret add cld jns int les ds mov cltd shrb xor lret or cmpsb leave or pop push push jno mov xor mov pop jp fadds (bad) adc mov sub out jae xchg arpl inc addl bound push scas jb loopne xor push xor cmp inc in out xor leave ss fadds test mov cs jmp je or jno mov fist sub shll mov mov mov js out xor popa (bad) xor mov push xchg mov jno mov pop and scas lods xor scas pushf pop loope jo push mov jno mov loopne in adc sub in aad xchg into repz push pop jl shrb cmpsb sbb sbb xchg mov xchg pop dec xor test aam rorb (bad) jmp bound xchg out dec push es adc xchg test inc inc cmpsl mov adc cmp hlt jno mov andb jge sub ret ss mov mov iret add add push and into pop mov cmp cltd pop pop mov fldenv pop sub (bad) xchg fdiv pop fisttpll xor xchg sub xor and push cmp andl add xor pusha and push add imul mov shl lret dec test push fnstenv mov lea push sbb shrb adc push lods pop icebp dec add adc pop lahf sbb mov jae or js xchg xor hlt jbe or jp xor (bad) jp fidivl pop cmp inc cmp lods sub out les pop sbb mov mov popf xor aaa jae pop pop and xor out in inc es aaa mov rcll pop cli adc xor hlt sbb fnstenv and xor dec test repz fdivrs adc push lcall imul dec je add in inc xor push add push push cmp mov and or jge inc lods push sbb mov dec mov xor mov btr xchg mov and addr16 call sbb sbb ficom xchg pop add dec inc sarb sbb mov sbbl fadds or pop pop sub repz lock repz mov mov mov mov shll out fnstsw xchg sbb daa xor mov (bad) xor add push sub insb pop icebp mov roll push and jae cwtl sbb or test (bad) icebp fdivrl push mov (bad) addr16 dec mov add jne je mov push mov or out addr16 cmp lock enter inc outsl and scas cld jb das sbb iret push je sarb decb jne lds push clc push or xor xchg mov or aam xchg fadd mov sub and add jbe data16 out (bad) stos push xor mov mov jno,pn (bad) jb sub roll pop cwtl lods add adc mov hlt loopne cmpsb dec pop pop (bad) xchg cmpsl mov pop inc cmp cmp dec dec mov roll fidiv add fs (bad) (bad) xor dec jecxz (bad) hlt test xor scas sahf sti ja int leave pop ss pop les (bad) repnz adc fdivp notb pop lea cmp insb (bad) cli jmp xlat ret jnp cmp mov arpl (bad) jb mov jns xchg popa or sbb fwait adc push cmp sbb (bad) fsubr hlt jno,pn xchg or addr16 mov xor (bad) dec out push mov in mov lcall xchg fisub out sub cmpsb out in and rcrb js dec shl rcll dec out xor (bad) test sub fidivl popa outsl iret jge adc or movsl ret arpl es js cltd xrelease jns notb inc push xor mov jae sar andl cltd mov xchg sub into sarb rcr mov roll lcall das sub lods mov movsb xchg (bad) and and or xchg lcall sub mov cld sarl rcll mov sub das mov push out test pop lahf pushf xchg cmpl cmpsb inc jp sub xchg push xor (bad) lods mov repz jbe jle dec mov inc sti mov dec xor mov les mov jl pop imul movsl nop or inc xor adc imul in sbb or or dec std sti push bound pop repnz adc mov ret inc xor xchg std (bad) addr16 aam and fcoms mov mov xor dec pop fs add xchg test ret stc (bad) adc das dec sbb fistpl push (bad) lret xchg or stos push test sub xchg dec dec hlt jne or lods add jge hlt inc or push sub loope sbb inc std push mov xor movsb cmc adc dec psubb (bad) cmp mov pop push (bad) out cmp push xor leave daa pop jmp jp lods nop and je hlt lds push dec xor clc add popa sub xor loope ud1 outsl mov js cmp sbb push rorl scas shll mov idivl pop push repz cmp ficom ss pop and cmp xor mov leave inc test push pusha pop pop jae movsl stc rolb imul daa aam and or sub cld mov daa adc mov lret dec cli lahf push jae mov lds hlt xchg cmp mov mov cmp push aaa arpl mov sub mov cmp andl icebp shr add or rcr hlt adc into sub in sbb xor xor push add in lea imul (bad) jp lds hlt icebp negb or loopne lret js add scas push or rolb and cli pop adc jne jo adc dec xor repz dec dec jbe inc imul xchg inc add adc pop sub inc imul adc (bad) mov push cmp imul aad xchg jns jp sub in xor cs loop maskmovq mov mov (bad) fist loop sbb hlt aam jno pop or sub (bad) jae xchg and lods and sub ss xchg sub push bnd mov and adc rcl cmp xor inc mov (bad) mov loop arpl mov sti dec daa fist lahf sbb add aas jmp jno add mov sbb pop jns repz mov xchg sub ror cli jae fnstcw pop and mov or xor sbb jle mov and ret lcall sbb lret jae adc invd pop nop ljmp inc push pop jae aad imul pusha iret adc repnz inc mov push in in fisttp ret mov push (bad) leave sbb imul adc jne fs ret add daa jnp xor sub mov test cmpsl imul pushf adc in sbb out xchg repnz cwtl xor popl fcomps adc and push popa adc jo aad xor push cmc xlat mov sub (bad) mov je idivl pop mov in xor dec jecxz mov imul pusha das mov ret popa in dec fwait xor mov xchg mov xorl movsb pusha das das dec xor jmp fldt (bad) inc sbb je and add mov xchg movsb movsl mov sar cli cmc adc mov mov xchg push xchg jb out outsl sbb dec jbe pusha sbb inc mov pop push and xchg in mov or xchg popa mov adc pop out fbstp (bad) and cmp in mov ja fidiv lcall test hlt adc xchg aas sub cmc fwait lcall xchg inc pop repnz xchg pop inc fiaddl dec adc mov inc bound mov pop mov ret fldt popf repz add hlt pop mov rolb lods scas cld cld call push xchg test add or out cld imul (bad) aaa sti or jge xor cmp xchg add xchg cld cmp or insl addl xor ja or push pop daa or add xor adc fs pop test xor std mov mov imul leave jae pop pop shll jo cltd or setge test cmc (bad) fld mov cltd xor adc fucomip nop push dec dec cmp js fnstcw ss mov adc (bad) aaa xor leave enter insl call int hlt xchg mov jnp scas mov mov push in xor ss sbb addr16 xchg mov stc dec stc aas scas inc sbb mov jle std repnz insb (bad) sub fisubl (bad) push jo out sub sbb cld pop aaa lods test ja mov out dec iret clc shlb add in imul mov fcompl add add and fbstp xlat pop bound cld push cltd xor xlat clc dec test stc div js ss inc jmp hlt (bad) out sub pop xor stos sbb jo ss mov loope lea mov loope push je pop (bad) pop inc je loopne les call je gs fwait dec jns jge mov or loop out mov mov (bad) push xor test sub lret push popf call dec sbb sbb stos sub push mov ret adc out in mov sbb nop mov pop cmp repz dec clc xor es add aas test cmc xchg sub push je inc cmc xor push cltd sub call jle adc jo fdivrs iret nop mov pusha jl test cmp push dec sub xor adc push xor jmp xor or mov hlt jb aas cwtl push fcomip inc ret cmp rorl mov int movsl pop push sub mov enter ja addb xor dec jle xor mov jae add (bad) lahf rcr loopne mov std sbb out popa shlb jno xchg push fisttpl or push fisttp test jge nop out clc jecxz push mov stc es repnz xchg iret mov repnz jb mov jo cli daa inc inc shrb lret add or inc je add mov push mov popl xor dec xor int shll je push push out jae mov clc stos or repz movsl adc sub mulb adc movb or ds clc adc sub push int and inc imul add rorl sub mov inc ja xchg xor stc out aam cs or (bad) jno fwait xchg xchg xchg iret jg call sarb daa sbb jecxz dec jb adc mov mov push popa adc aam popa inc xor nop stc jbe sub mov mov xchg inc push cld (bad) xor mov xor xor in mov daa leave sarb data16 mov roll hlt xchg (bad) popf imul stos pop pop jl jmp sbb sub xchg mov add cld xor popa push (bad) mov cli lock mov cmc pop dec in imul mov (bad) aas xor push sub cmp add lret xchg ljmp mov jae (bad) aas out (bad) xlat jo jb xor aam je push andl inc sbb xor mov jle call imul insl inc sub mov cli lea fisttpll push and ljmp jl mov push (bad) xchg mov xchg push hlt xor call jo call push sbb dec and inc cltd jmp xchg lods sub xor pop xor push mov mov ret std sub cmpsl adc mov (bad) mov xchg les jb cli fmul inc lock jns je mov push and and mov stos dec inc push xor sbb or test stc pusha enter dec outsl push gs loopne mov in ret addr16 and (bad) stos xor lahf adc call cli sub mov jno les cmp mov dec mov rcrb (bad) jge add pop push xor cli scas cmp sbb xor add lahf rcrl jmp (bad) and sub add in adc scas incb cmp fstpt mov sahf and sbb ret in mov xor scas (bad) loopne cltd dec mov or add xor repz pushl mov xor test jg mov lods int3 jl fcompl xor lea ds bound xor imul jle xchg js and pmullw out push add out jl mov (bad) lret and sbb pop dec shlb and sbb lods movsl adc xor jmp mov mov pop jle adc pusha push out mov push pushf ds or mov bound test pushl cli je lds inc add roll sbb mov enter sbb xchg pop addr16 pop xchg adc dec cmp in sti xor sub pop hlt sub cmp push and inc dec sbb adc sub mov mov adc call (bad) hlt es cli aad jle push popf mov test js or jne adc hlt (bad) fimul mov inc pop dec xor jo mov fs push xor cmp or (bad) stc in xor inc aam sbb adc ffree daa jae test shrb mov mov and sbb mov popf xor repnz out jb push and int3 mov jb,pt addr16 jne inc das sub stos out lea js movsl xchg iret daa mov sarb sbb lret push popf shrb mov pop enter fidivrl sbb subb mov fadd ret cmp add aam pushf sub sti hlt xlat ds adc adc add push cwtl xor or mov add xchg dec out imul clc push imul mov dec pop insl or xor in pushf mov ss out mov sub inc adc cmp cmpsl or cmp mov sub test mov cmovp sub cmp push loope sti scas mov cmpsb cwtl mov inc or add lds add lock add es mov loopne jb popf xor mov push inc xchg adc dec mov ja and ret push sub dec dec pop mov scas jmp pop pop jns mov mov repnz sub outsl scas in adc aaa inc subl xor scas and dec or sub mov xor lahf pop add xor orl xor test repnz call scas arpl insl pop adc (bad) (bad) or push jb cmp adc and push imul jmp inc cmp mov mov sbb and enter les mov jnp sbb out add xor shlb add aad inc sbb icebp fadds lret or mov das fsts sbb ds jae shll stos add enter xchg into mov mov mov fcoms repnz icebp adc and out xor push mov cli sub cmp xchg lock jmp xor sub sub and fbstp cvtdq2ps mov xor lret fisub nop daa jle call or fwait sub into gs test and cmp cli jno cld or mov or jle (bad) pop fildll xchg outsl and sbb mov mov addr16 nop pop sbb cmp ss adc call packssdw rcll mov adc sub inc mov adc xchg xor push in jnp je test pop stos cmp jmp pop call or xor mov jbe imul or cli outsl xor je outsb jno cmp in jge push jne sbb test mov dec insl call sub outsl and adc cmpsl loop lret in repz ret int ret sub xor cmp xor fild mov jmp sarl xor int3 dec add hlt cmpb xor sub mov imul inc outsb dec sbb aam shlb xor int and mov add mov xor mov fadds and cmc push cs subl push and pxor js sbb fcomps pop dec sarl xor stos je mov loope xor jmp add (bad) hlt (bad) insl push movsb pusha iret or adc repnz add adc jnp (bad) cld jge dec lods dec gs inc aaa ljmp aad inc or leave pop pop push add insb jge jno cmpsb sbb in adc aas inc bound add inc cmp inc loopne xor repz outsb cmp xor jo adc xor imul inc movsb sbb out mov cmp cld imul popa mov and jne fdivrs or sahf push out daa pop test sub scas push mov pop add nop hlt mov fwait pop aam fiaddl out sub dec adc adc jmp adcb aaa inc add lret hlt inc imull stos dec cmp inc adc insl jno nop adc clc out mov bt popf xor ja mov in leave hlt stc xor adc ret int xor and xor lock mov mov xchg jmp fs lea mov in int mov mov adc mov lea cmpsl je xchg fdivp cli push cltd decl mov add std push sub test int xor test jb inc lods cmp cld xor mov jae or pop sub xor in int (bad) xor and sub (bad) inc bswap idivb scas add xor call fsubs mov les lods les or mov xor cmp mov inc mov sar jle sub fidiv push fwait jecxz lcall xor rorl inc or add adc and jno inc pop pushf (bad) xor mov iret out les jnp sbb pop cmp cs outsb movsb mov popf push xor or push jb pop jge and fdivrl mov jecxz test rcll mov pop arpl push insb sbb mov in pushf dec pusha fwait xor jge push repz sbb push inc adc xor mov and jns loopne pushf mov pop xor mov imul or inc adcb mov xor push (bad) lods stos xor test mov insl test fs add xor and gs fwait cmpsl fildl dec lods inc enter add dec and jmp test lahf out stos ret mov xor push jo cwtl jns add fdivs pop or sbb or sub pusha xor mov mov cmp (bad) sbb mov call repz mov mov lcall inc xor cmp xchg hlt arpl sub add fadd xor jno fisttpl mov mov (bad) decb push sub xor fbld cltd inc stos pop xchg imul (bad) hlt mov push and outsb push adc or xor jno rcll push jp add xchg js mov in inc mov mov and ret jnp adc xchg xor jae sbb loopne jge in add nop push (bad) mov or jl pop push addr16 notl imul sub dec sarl or out test dec test lahf mov add inc pop sub xchg mov inc pop mov inc xchg jmp sub outsl out xchg out icebp xor test in add xor sub jae andl test mov lahf les (bad) and mov dec inc mov mov imul mov cli mov lods jmp movsl mov sahf insb mov inc out xor data16 pop mov sub shrl lret rorl mov enter js mov sbb clc shlb and cli sub mov gs dec in arpl js pusha jbe adc ror jecxz adc push or jle cmc sti adc fucomip scas and xor sub test cli or les scas cli cmp mov xlat repnz sub mov pushf popf sub xor (bad) in mov add bound jle test cld fucom mov mov xor sahf iret or xchg fs add pop or inc push jae xchg int3 mov dec mov hlt mov lods test mov jle push xchg sub divb or xor xor addl mov sub xor inc loopne cmpsb jecxz sbbl mov xchg or xor scas mov cmc dec aaa out and fistl repz or bnd and je or mov cli pop cmp jne pop ret mov adc add xor and mov mov nop shll lds lret xor jmp jo and cmp scas (bad) or (bad) in xor xor jl inc sbb fwait xlat addr16 xor dec loopne addr16 cmpsb sbb lods outsb and fldenv mov incl mov sti (bad) mov lds ss jae imul pusha pop in mov jl (bad) sub jge mov dec xor test je dec adc mov add mov lret jae or add adc insb stc fidivr mov test mov cmp adc test adc dec push add ljmp fisubrl jne mov adc pop fwait lods inc mov rcll inc and imul cmp cld fisttp sub fxch lahf xor inc in cmc movsl adc jle jae inc mov sbb je lods jmp mov outsb jle mov test mov and (bad) inc or loope mov div xor std pushf xor loop or mov sarb fild mov xor add jecxz loope ret fs popa mov mov sbb out mov jne cmp clc inc arpl push sbb and movsl mov in xor mov je mov mov xor push or (bad) jne stos pushf and mov xchg jmp cltd call adc sbb push mov repnz xchg arpl incl sar repz mov cli (bad) xor cmp loopne push (bad) pop aaa push xor scas mov xchg xor out rcr add lock jns popf clc pop mov std fisubl fwait repnz mov inc adc jg dec addb xor push and sbb iret pusha lea xchg push stos inc outsb and lret lret insl in out add mov inc aaa fcompl hlt xor push jg adc mov lcall xor (bad) xor ret mov dec ss ret cmp cld in movsb hlt push (bad) fisttpll adc xor xor mov mov inc pop jge adc inc cmp push enter arpl pop sbb inc dec or dec add adc insb movsb mov stos lcall aaa es fcom pop rcrb repnz out popf sub mov dec sub jmp mov (bad) aam mov and jne xor add dec sbb mov addl dec cld (bad) xor scas out (bad) xchg xor push leave fstpl xor mov xchg add xorl insb imull nop jnp adc dec in jmp clc jae int xor adc sub ljmp stos sbb xor cltd dec sub push movsb hlt adc xorl ret repz ja sub cs mov and daa add stc xor push cmpsl inc adc sub in nop mov fbld xor mov int3 xor push adc adc cmc mov sub and dec nop add mov gs jmp xor xor cs xor mov mov add jnp and xor hlt call daa arpl mov lds loope cmpsb adc sete mov xor mov arpl or test loopne sahf add push sti or pop adc (bad) fucomip mov arpl sub add inc adc pop adc (bad) icebp push lock test aam outsb cmp adc out fist aam outsb sbb fs xchg imul lahf and push aad sbb ja mov jne loope jne mov bound std sub loopne popa add push je imul lds mov je leave push scas lods fisub xor lahf push roll call pop and push (bad) xor add outsb xor (bad) xor mov xor jne in sbb les sbb stos divl xor push xor loopne cltd repnz out mov mov (bad) adc pop xor ja and xchg inc nop xor test sbb xchg call push movups adc sub mov lock mov sti pop lods enter pop adc shr xor ljmp lahf mov and xor adc mov js xor mov jecxz xchg pop nop fnstenv les frstor sti inc inc xor mov jno popa sub and in repnz insb shrl xor data16 and xor aad mov lock inc jge rclb adc jnp hlt dec push ret cli je js push ss xor es rorb mov xchg mov xor scas xchg gs xor loop xchg fcomi test sbbb xor loopne nop mov jo inc data16 and cli js dec push and mov ljmp inc roll out mov add popf xor in mov outsb cltd push xor pusha ljmp and add push jmp mov icebp jge test rorl mov repz cmp jl jno mov cli fcompl sti jnp rcll (bad) les cs ds xor test (bad) orb scas lods push push (bad) cmp jl in xor js daa xor fldcw (bad) cmp lmsw dec insb lods jle imul and stc cmp adcl fildll out in xor push divps cmp jne xor cmp xor jp jmp stos sub imul adc lret mov inc dec enter cmp addr16 fisubr jmp jne and xchg xor mov mov adc retw leave xor imul add jmp mov pop (bad) jnp xor xor std lea divb add or ja repz leave dec test adc xor into out mov (bad) mov inc in movsb movsl ss data16 addr16 int3 dec add sbb imul adc lea hlt outsl inc das jecxz xchg out mov jno js loopne fs xchg cmpsb mov test or iret push or xchg ljmp (bad) (bad) shll jle cmp into mov mov test ss sbb xchg mov (bad) adc pop or xor outsb data16 lods hlt mov int3 xor (bad) cmc mov xchg xchg in cmp xchg mov add adcl adc pop insl (bad) lds rorb sub pop pop xor cmp (bad) hlt jecxz push pop shl outsl xor adc push dec jmp stos add (bad) iret adc test hlt stc (bad) das cmpl add xorl push (bad) repz sub cmp js add jp cmpsl repz push lds out and xchg fisttp daa enter movsb in xor (bad) jae repz sbb iret cmp aam je dec sbb ror jns sub jno out mov xor jnp xor sar sub in fidivl fnstsw je es or aam movl adc xchg jg xor xchg popf dec jl jge addr16 inc cmc test je popf fcmovnb imul shrb add push (bad) arpl in and ljmp add movsb sbb daa gs mov sbb push adc and pop cmc fidivl ror push xor popa sub (bad) xor dec inc xchg lcall clc jo mov sbb clc enter pop mov cmp mov (bad) je push xorl ret dec (bad) hlt clc xchg mov xor jae xlat inc in jne sbb xchg fs mov cmp jmp xchg jno popa pop out cld add iret hlt xchg jle and (bad) mov sbb movl shrb arpl int3 dec mov push pusha mov iret xchg cmp mov push sub sub jecxz xor movsb push mov pop ficom and adc cwtl imul xor daa jae push hlt sub nop sbb cs push lock cmp mov mov lock pop jno in mov mov sti in jae in pop or xor adc outsb xor jecxz jno cmp aas cli mov shll xor call out sub add adc (bad) xor lods and fcomip js insl rcr adc and and xor ds dec xchg and xorl push mov xor mov clc fisubl add mov push adc out arpl sub jbe popf xchg jae sahf stos cmp jmp add in pop invlpg sub jp rcrl lds push or xor mov sub push je enter mov cmp mov sub mov movsl dec mov xchg (bad) in lretw jne jo jb sub mov mov sub test aam std ucomiss xor or jb ret inc dec xor insb adc (bad) pushf inc scas sbb xor stc mov loope hlt and xchg inc out jae sub imul dec ljmp aam xor cmpsl mov and movsb xlat je sbb and sbb (bad) xor cmp push jge cli mov enter sbb inc sahf mov addr16 mov lods loop fcoml sbb push lret mov push imul or mov mov stos xor data16 fnstsw lock loop mov and push xor jnp sub loope iret xor daa push out cmc nop es or inc lret dec (bad) jge (bad) or les and xor pop mull jp xor xchg and or insl jno and lret mov iret rorl shrl and adc cmp flds mov jg je les popf roll mov mov and mov xchg mov pop or and pushf dec mov add dec mov push ficom dec xor jne xchg dec sub xor int cmpsb fstps sbb daa mov stos push sahf fdiv jne pushf mov dec in mov adc (bad) sbb je je jns ror pop dec int dec cld inc addl jmp mov xor sbb ss jo lds iret das add stos movsl cli jae or sub adc and jb imul cmp aad xor mov mov stos mov repz mov aaa push mov incb and add ds pop ja jnp ret (bad) pop add xchg fcomp add add stos xchg movsl (bad) ds or mov loop inc js push es mov (bad) insl push pushf cwtl aas mov mov sub push and sub fucom adc out sbb leave cmp adc in add out int sub add adc dec adc ret jnp lret fwait jecxz mov pop movsl cmp sbbl shrl cmp jno or sbb mov adc push cltd inc pop out xor aad insl repnz adc inc cltd xor stc dec call xor mov fsubrs xchg jns xorl adc mov stos sarl shr xchg call push push sub js or int inc mov and loope int cmp add inc sbb add mov or enter or cmovg in push inc pop pop addr16 scas rep ljmp repnz dec push jno or push cmpsb pop inc inc push inc push dec xor cs insb add (bad) jmp dec push cmpsb fildl xorl jecxz xor xchg imul loopne aad and mov mov lods bound movsb cbtw ja and lahf loopne lea jno jle and sti fs inc aad nop push pop call into shlb jno arpl (bad) das fmull outsb inc adcb add in xlat (bad) testl dec add cmp cli les stc mov dec xor push push test rorl pop cmp xchg sbb (bad) mov test inc pushf (bad) shll shr cmc mov pop jno or (bad) push insl loopne add jno inc inc xor mov insb ss pushf incl adc stos hlt mov jo or stos dec nop in mov in add jmp jbe sbb mov es sbb repz sbb xor jbe int mov ss arpl scas nop pop in mov sbb ds lret incl and ja push mov pop subb cltd fisubrl jb daa je mov js lea adc push sub fs popf cwtl inc xchg mov jmp sub jmp dec mov mov ret fstpt in xor aas push jno or lret xchg add bt pushf pushf cmc movzwl bswap mov cmc movb mov add call mov mov lea call pusha pushf lea jne not cwtl lahf movsbl mov pusha pushl pusha lea jmp repz and mov mov jnp inc stos je and fldl popf add cmc mov pop lea test cld bound outsl xor in imul lcall (bad) fidiv ror lahf sahf rcrl cltd jbe mov xchg out fdivr xor push sub daa ja aaa xchg lock movsb idivl add xchg add fs or out jecxz loopne sbb fadds cmp mov iret mov in fisubrl imul xor pop push pop or mov inc (bad) orl push idivl dec fwait inc xchg cwtl in icebp pop mov push out lcall or xchg or ds push into inc aad rcll and addr16 adc daa jle icebp mov cwtl push jmp inc sarb xchg or mov fstpt popf addr16 les stos xlat and cmp sub push pusha jno mov or pop mov pusha push pop pop hlt dec movsb sbb push imul in ljmp add adc jno or or imul call bound or mov loopne pop add icebp scas adc push fisubl mov dec aad sub mov cmpsb fnstsw (bad) iret das andl mov mov insl scas ret jmp pop jb cmpsb icebp (bad) loope hlt mov inc nop cs mov pop das ja jnp mov sahf into or mov movsl into sub inc add fs mov aad mov sub loope,pt sbbb loopne loopne loopne mov (bad) rcrb push mov (bad) loop (bad) aaa pop jbe mov or icebp add or xchg mov aas pop gs test sub arpl sub fsubs push sbb xor cmp or push cmp fbld cld add lret addb and pushf and mov lock out mov loope sbb and test dec cmpsl mov aam idiv cmp dec jmp mov lods jecxz push adc scas mov test or dec xor add out push add dec jns mov mov stos scas mov int (bad) adc jmp outsl dec jp xchg (bad) imul pop pop and lea jne call jmp pushf pushf mov push xchg movl mov movzbw mov pushf pop mov pushf pusha call pop ss cmpsl sbb push mov push cmp push js cmc mov dec jecxz aad xchg push mov add xor pop add cmpsb xor jle aad mov adc bound xchg loopne (bad) lock shll jb and push mov xchg movsb cli dec add and fdiv stos aaa fldl mov push add popa test lahf jg lcall iret pop xchg iret loop xlat push mov xor sub push push inc sahf sti repnz cmc test pop out das fistpll sub xchg stos hlt mov cltd movsl push mov xchg jmp je test jno push cmp push dec call pop mov xchg xor fs fcmovu and stos iret scas inc ret xchg lret call movsb cmp loopne loope aaa scas outsl xorb ret aad sti sub adc xor or adc and shlb mov stos lods shr popf ficom mov cmpsl push mov ret xchg dec es stos loop lcall sahf (bad) ds lret inc loop or test cmp movsb clc push addr16 lret jmp popa fmul push xchg sub mov adc (bad) dec rcll (bad) leave sbb pop add push cli mov pusha jg imul insl jle inc outsl jo cmpsl xchg pop incb popa pop xchg imul addr16 add dec nop dec sub xor jl dec popf push add and ljmp pop rcrb dec and ret sti pop and or add mov xchg or movsb imul fnstcw xchg xlat jne xchg movsl or xor cltd int3 out mov sbb mov lret jmp data16 mov inc cmpsl pop cmpb frstor xor cltd mov aaa cld inc cmp and out (bad) les je leave cmp pop insl pop mov daa inc lret xchg pop cwtl push xchg add cltd add stos bswap arpl pop (bad) pop add shrb xchg sub bsf neg mov mov pushf bt pusha cmpb mov pusha lea jne lea rol sub btc test mov jmp mov loope (bad) xor adc mov ds push enter in fadds cmc std movb out mov into sarb mov loop xchg or mov jnp add jae sub jmp scas add xor test ret push loope ds inc popa scas cld mov bound pop fiaddl cli jmp test pop dec daa movsl lock pushf inc lods std out add or mov cmp xchg outsb int shrb add mov int sbb cmpsl push out int inc loope pop sbb sti cmp pop mov xor mov sub cmpsb mov dec jb cmp cli mov fcmovne sbb pop adc (bad) pusha test call mov pushl pusha movw movb pushl ret (bad) mov cmp mov in pop inc stc clc or cli gs mov (bad) lret in inc stc mov mov imul jge xor insb xor cmp mov rorb push sbbl fs pop nop jp and inc pop out or dec add fcomps ljmp adc mov divl shrl jae cmp ja sarb mov std add out dec repnz arpl sbb inc jle mov pop ror lahf lock sbb stos xchg xor and cmp inc lahf jg mov cmp (bad) or add mov cs xor sahf pusha mov adc adc push loopne or scas pxor mov (bad) mov cwtl inc pop lcall lahf xor inc sub imul sub inc fisubl lock push leave notb ja iret loopne xor mov fnsetpm(287 icebp and or fsubrs enter imul add leave inc cmpsb gs jbe ljmp lret mov pop dec mov ljmp mov into inc cli cmp das lock cs aas rorb mov pop add lea icebp bt call pusha movl movb lea jmp movw rep call in fisubrl and jnp cmc jl add inc sub cmp dec repz xchg and aaa pop aas das lock add dec or lods pop lods pop pop (bad) jecxz in and xchg and mov mov test aaa imul sbbl mov cli fidivrl push (bad) jb xor xchg leave push shlb out adc sbb repz pop pushf inc jecxz push pop (bad) nop popa fidiv es sahf fcmove push or pushf inc addl hlt pop cwtl push or aad dec adc add bound xor mov ja nop out mov pop imul xchg std jmp push sub push das loopne ud1 (bad) xchg mov out mov add cmp fadd sbb dec xlat pop pop push in (bad) call les rorb adc (bad) out dec sub in rorl sbb sbb mov xchg sub fadds loopne mov dec push jbe nop loop fs jb push pop sbb cmp dec dec jo jbe das iret testl call iret inc pop movq mov xchg xor inc mov lods roll faddl mov lret or int3 sarb iret xor jmp cs outsl xor push call jno add lods mov and inc and jne mulb pushf movb lea jmp cmp insb jg nop jne xor loope clc addr16 out enter push das fistpll xchg cmp loop cltd lds lret cmp cmp add call xchg leave fidivrl daa sbb xor or out add pop es cmp ret aam or sbb stos and clc xchg int push pop popa xchg and cmp fs cmpsb in movsl sbb push push dec adc cmp lret pop dec unpckhps pop cltd mov mov dec jo rcr insb xchg cmpl dec push mov inc lret not jmp and push and test fldenv cmp mov mov and push jnp lea add inc push imul mov pop sbb or push mov ljmp (bad) fucomi and xor in stos hlt add push addr16 icebp into daa mov loope cs outsl pop mov icebp inc std sbb dec mov loop repnz mov push fldt lret dec mov pop imul int adc (bad) fdivrs jno mov push mov movl call lea ja pushf lea jae call jmp test pushf stc sub movl repnz push jmp pushf lea call jnp pusha push lea jne movsbw bswap movzbw mov pushf push pusha lea jmp jae pusha pusha mov movb not inc setns push mov call and (bad) or cmpsb mov cli inc dec add cmpsb pop xchg test enter cmp and sub cmpsb clc cmp cmp cmc icebp pop incb jne insb xchg push pusha out push divb jl push popf loope shll sbb jae xchg in std popa sbb rcl xor lock mov add xor pop out ljmp rcr rcl and (bad) sub push in xchg cmp jnp sbbl insb mov aas ret pop insl shl movb scas out xor loop sub adc mov sbb or dec xor lds pop and dec cmovg jne stos jno std push cmp and cmp movl pusha movb movb mov lea jmp push xor call pushf bt cmp call stc call imul lods popa mov xor jne dec notb nop out mov (bad) ds insl xor jnp imul push fldl2e (bad) fsubr cld jns data16 inc ljmp aad pop and fildl mov mov pop insb xchg jae (bad) add ljmp and dec mov cmpsb test arpl mov fldenv xor orl push test inc jnp xor sti test js leave push stc (bad) dec cli pop inc inc rorb lahf mov fcomps dec movsb std push mov (bad) jno sbb dec faddl nop pmulhw adc imul xchg jmp frstor xor sbb jl mov lret adc daa (bad) sbb test xchg jmp dec rcrl repnz push add push (bad) aam cmp and ljmp cmpsl clc (bad) xchg or pop cltd add stos movsl stc dec loope sahf sbb (bad) mov inc lock xchg adc adc enter mov cs pop (bad) push xchg xor and mov test adc fsubrp ret sbb sub xor das inc jno ds js add mov jae pop (bad) (bad) (bad) xor das out loop xor pop inc add jne aaa jae lds jnp push icebp mov jecxz (bad) gs arpl je rorl mov (bad) clc dec addr16 imul insl dec (bad) cmp (bad) adc and les lods repz ret inc or xchg rorl stos repz fstl lds jmp aaa mov mov cmpsl ja sub inc push sarb push std idivb scas out dec sti cmp xchg test dec (bad) pusha xchg inc mov ja call movsl jns jnp jmp sub dec push jb pop jbe cmp xchg mov sbb (bad) in loope or pop out mov (bad) dec mov adc das loopne adc jno jno cmp out fldenv mov jmp ret dec jle mov popa ficomp cmp icebp sbb xchg out push fwait ds cld xchg or das das std sub in in push adc fistpl mov cltd out mov mov push mov jg pop cli xchg cli outsb icebp fisttp into adc mov aam loop inc lahf jmp mull dec xchg inc push sbb or or in xchg lds sbb das stc fisttpl cmp imull pop and pop fwait cmpsl js (bad) cmp fcomps dec jb mov cmp xor dec or pop lods cmpsb dec xchg push out frstor add in push popf mov inc or aas bound ss ljmp cmp xor dec outsl (bad) push push adc ret sti jecxz sbb inc ja out out inc rcrb ret movsb or push pop adc and mov pushf es jp push push orb jnp in dec nop dec mov sub mov roll into icebp scas test cmp push adc enter adc xchg dec rclb scas or pop shlb mov mov stos cmc lret cmp iret and clc pop inc xchg test jmp fdivl xor inc test pop inc pushf jmp push je jecxz lea cmp or and pop or jne aaa out clc adc jno clc xor lcall cmp hlt ret xchg lods (bad) popf push mov jbe mov out push (bad) mov xchg push mov ret loopne inc mov int3 shlb cli and xchg mov lcall aas cmc adc std push aaa mov mov ret cmp jl addr16 jnp (bad) xlat fldz jg and dec lahf out pop xor push mov pop or inc cwtl pop ret pop xlat insb mov or and push mov iret int3 test push sbb fadds ficomp push push rorb stos add dec das dec sub push les mov lahf push add cli pop jecxz inc pop daa mov test jge bound outsl iret jnp cmc jno negl jo jae ds xchg push lock jp test test hlt sub push gs adc add mov adc ljmp push andl or cmp lcall arpl call dec push es xor fwait and mov into (bad) xor pushf mov out cli mov addr16 xchg in ror rclb dec std mov test popl cld sbb and mov inc mov leave jne outsb js lock les notl or outsb daa js sub (bad) (bad) in xor cmpl stos jae mov mov sbb adc sbb icebp or ret mov mov and push fistpl mov mov cld push pusha jno ja and xchg xchg rcl outsl fwait inc push sarb sub outsl xor ret in and pop movsb jnp lods fsub adc lods icebp xor mul lods dec mov shr (bad) lea jb push cmpb jmp aad adc or mov jmp or push jno add loope mov mov cmp sub add sarb test xor adc inc mov mov add cmc in xor sbb xor fldt repz (bad) es decb mov mov rcll lret cmp jnp aad loope rorl mov sahf mov xlat daa inc pop xchg out repnz lea sub in (bad) (bad) repnz es sbb pop add pop aas push push ret mov lds cmc cmp pop shrb add or aam lods jae lahf push mov mov jmp mov nop dec lock adc add pop (bad) dec mov jne pop lahf xor in jno push repnz popf xor inc add inc cmpsl inc ja mov in bnd outsb out mov mov add cwtl lods inc sbb addr16 pop dec (bad) repz daa xchg dec jb mov inc (bad) mov lods mov pop lret jmp xlat (bad) out xor (bad) enter cmc cmp xchg mov push mov jae mov gs xor inc push call (bad) sbb or mov arpl dec lret enter and cld adc fadd sbb pop xchg (bad) jge adc lods xchg mov repz adc test clc (bad) dec ja leave cmp xor subl push clc out sbb loope aaa divl jge and fs outsl stos dec outsb lods xor sub clc dec lods inc stc pop pushf bound xor cwtl dec add inc ffree sbb push xchg cmpsb or scas xor pop pop addr16 push or push sub loopne (bad) dec pop inc add hlt bound movsl dec mov aad and ds cs mov push mov bound lock outsl mov adc pop mov cmpsl pop xor jp mov xchg rorb xor mov mov add (bad) jns and das dec ss sbb idiv and add xor int dec cmc (bad) loopne int3 and cmp je arpl ss test xchg or scas out nop mov pop cmc orl sbb dec mov imul mov cmp xchg stos (bad) mov xchg adc scas imul loope sub xchg dec push cmp lods mov cmp inc pop and add bound loopne xlat std mov std ljmp icebp lods adc or cmp scas dec sbb cmp js lock lret mov add es lods rorb dec imul dec sbb sub dec xchg push and (bad) mov imul pop sub bound cmp dec cmpsl js jns outsb mov sub xor mov repnz inc xor xchg and adc sbbl pop ret test js or inc add insb inc jp std mov pop xchg push daa push push push xchg iret adc imul shll push sbb imulb nop dec or inc sbb mov mov hlt or dec xchg mov stos sub xchg out push stos (bad) xlat in sbb sbb pop repnz dec aad jmp push xchg dec decl xor and sti loop push or pop insb inc cmp ret pop jo inc push (bad) nop clc outsb shl inc push fwait cmp repz or xchg or and fadds sbb and push movl jle incb fucomip clc cmpsb dec pop xlat andb insb rcrl shrb (bad) and sub cmp icebp dec (bad) pop jbe xchg cmp push push sub or (bad) decl repz pop and aad xchg lea in adc ja int int out ljmp jb sbb out xor js jno xchg cld mov insl mov loop pushl or push jno icebp fbstp popa lea push (bad) (bad) xor sbb scas ret jnp outsb jg adc add pop nop out inc push fdivs dec ds mov mov jmp imul jmp jns or int3 xor repnz pop out fimul mov mov sbb fcmovnb add or or (bad) divb push dec pop outsb sub iret (bad) cs push clc mov jns ss nop sahf mov test dec fs nop (bad) fbld push jle test test clc addr16 pusha push ret mov jbe inc popf insl jb mov pop lock shrl xchg sub pop mov mov imul movl in fsubs lret scas iret test add iret loopne loopne popa fsts (bad) and and seto sub pusha ljmp xchg insb out mov xchg jmp mov pushf cmpsl stos xchg jno dec cs frstor inc js outsl outsl ja sub loop lea cmp (bad) xlat dec lea ja mov and inc xchg in je mov inc clc xor jle mov or rep pop test jmp pop and imul fs cmp ds mov mov adc inc cwtl jns sbb rorb out negb add xor or pop mov xor movsl out inc xor lahf add cmp cmp movsb jne popf inc push jns rcl movsb mov and std xchg iret fxch js mull cs inc wrmsr inc jg pushf stos mov adc push or mov fdivrs jle sbb repz pop pop pop and mov arpl jle sbb outsl mov inc xchg lret aam pop cmpl insl push mov mov push jno out lods loop aad jmp adc jne xchg mov dec jecxz arpl mov push adcb into ss loopne sbb dec les pushf mov push lret (bad) js lea push fcomi inc dec xor jno outsl xchg jno push test mov data16 fldenv xchg leave fisub fsubr push sti iret data16 jae add inc clc (bad) dec mov (bad) (bad) jbe scas dec mov fwait mov xchg jl lret iret cmp hlt jg push out out adc xchg in mov adc std push mov jbe mov out shl fsts into (bad) repnz jae or push fldl jb jno out xchg (bad) and and test bswap pusha movsbl movb movb bswap pop mov push lea setp lea pusha pushf jmp and pop fbstp mov lods fwait int sub push push mov daa dec hlt (bad) pop push pop lods add int sbb jnp mov movsl imul aam test je test pushf lods nop mov lret xchg adc fadds xchg mov inc fcomip (bad) cmpsl push mul pop loop push pop pop cmpsb sbb push test aaa scas adc enter cmp mov xchg jno in imul movl pusha movb pushl pusha lea jmp repz push pushf movl pushf push pusha movl pushl movw push movw lea jmp jmp mov pushf mov push bswap mov push pushl ret inc lea call xchg mov clc pop and push mov into jp pop dec btc adc add dec call add (bad) jp pop lret out xor cmp mov adc xor orl sbb leave xchg cmpsb mov and fstpl mov cmp push scas les movb xor sbb mov jbe aaa jl add push or and rcl sbb pop xorl scas xchg xor jg mov mov stos aam test je pop in mov mov pushf lea jne lahf setb bswap movb movzbw pusha mov call xchg push int or mov jge mov mov or mov cld add data16 (bad) movsb jmp add (bad) loope push push jae pusha movsl stc sti adc das out sbb dec adc inc xchg xor aas js out pop sbb (bad) xor (bad) repz xchg out test mov mov in jecxz xor scas lock cwtl test push sub sub push stc sbb mov inc fwait rorl ja ret ja imul mov lods add xchg sti or push sub xchg les mov or mov ret (bad) sub jecxz push js jl je cltd stc cmpsb (bad) scas repnz stos xchg jl and mov insb xor pop jmp out (bad) inc fcmovnbe xor mov ljmp call inc cmp inc pop adc cmp inc jp in mov das nop mov push xchg push lock flds js dec mov lret mov out mov data16 jge mov cmp xor sbb incl push pop xchg or mov cld clc mov xchg dec data16 jl mov repnz pushf enter push repnz push nop rcl sub cmpsl add cmpxchg mov xlat cmp aas stos sbb and jne push aas ret pop push inc rorb sub sbb pop ljmp and jb pushf test cmp movb call scas sbb ror movups popa sbb movl sbb in mov xchg dec jno adc rcrl out pcmpgtb inc push or notl mov pusha mov mov mov jmp into aaa push adc push jp sub and fs cmp sub pushf lods add or xchg shrl and xor outsb pop stos (bad) shl fistpl incl pop imul lock es pop xor jo (bad) in mov cli cmc sub lea mov mov (bad) or jmp mov pushl lea call push push adc call push movl pushf movl pushf pushf mov mov lea jmp dec xchg dec xchg sub mov pop push sub jnp jae pop jle adc (bad) mov sub adc mov cwtl hlt pop lods adc (bad) xchg dec or in mov addr16 adc push leave (bad) and stos adc stos test jge movsl ds jge dec repz and push mov movsl hlt (bad) sub mov and shr hlt jmp insl in xchg test jmp pop call sbb xchg sbb mov int3 push mov mov pop (bad) ja imul mov repz cmpsl dec mov or das cld lcall daa negl pop pop in (bad) dec dec push outsl xor sub and mov aas addb xchg pop incl sahf jns mov and into dec repnz adc cld rcrl mov fbstp popf mov mov ds ret lcall xor sub ret sti addl aad int shl es dec addr16 pushf loop mov je pop jecxz mov fild mov fidiv call movzbl mov lea pushf push movl pusha pusha jmp add sub fimul stc data16 test fs not dec inc jnp mov jb popf pop addr16 push dec or dec lret fptan add jb scas inc js sbb jo nop arpl cmp dec std sbb jno ret xor fucomp and mov loopne add dec add lahf xor insl int3 dec xchg xchg pop repnz leave xchg cmpsl jle repnz cmp inc push xchg dec dec ss xor sub (bad) loopne repnz sbb out icebp pop dec push ja lahf cltd xchg mov and adc aas out frstor xchg sub jno out sbb mov pop ret sub (bad) fcoms sub in sub pop lock xor out adc jp test pop lea adc les lahf fild xlat cmp aas cmpl fsubrl mov popf scas xchg mov jl xor sub lahf fs addr16 cmp mov ret roll ljmp xor xor pop je sub inc arpl sbb adc test sbb sbb in or adc decl push popf mov and ds sbb jb movsb add mov call rcll enter dec imul push mov pushf es bound pop out out sbb pushl popl mov pushf push pushl ret lods lea ja jmp pop lcall dec xchg ret out mov mov loope popa ds xchg lret push pusha cmpl inc pop push mov fwait cmp inc sahf and push lahf loope dec xor sub scas inc add and ss lock cmp js xchg dec out lds or cmp xor sub pusha movsl dec mov inc imul mov cltd nop mov ja jo test out jo pop mov sub pop in or repz je pusha jmp dec push outsb jge xchg ljmp adc jmp arpl xor add cmp adc insb sub fiadd mov mov mov add adc sbb nop cs cmp xchg loopne jne pop pusha xchg add jmp cs add mov test xor jno fistpl cltd mov and and int3 sbb ljmp sub das mov cmp out add xchg popf fimul test mov dec adc icebp inc cli cmpsl imull adc adc stos push loop insl jno in (bad) jg ljmp adc sti fistpll fildll mov mov sbb aam mov test hlt jp add xor fldl2e ljmp mov imul xor pop insl inc pop (bad) dec jno in sbb sub jmp imulb sbb sbb outsb mov xchg int3 aaa in push arpl sub out iret stc fist sub sub cmpl add push sub cmp push sbb das outsl adc mov push bound stos xchg pop cmpsb sbb insb mov add test and js lods pop cltd jno jecxz adc dec pusha add pushl cmc jmp aam loop and jbe cmp aaa js pop xlat pop (bad) push mov nop out inc fsub mov push sub and xchg call xor fnstcw mov cltd mov push aad xchg mov mov orl call repz fistp cmp mov mov inc sahf fbstp jecxz pop test std out (bad) cmp mov sub jecxz mov sbbl or push lcall cltd push cwtl out addr16 sub sub daa lods ret pop pop and add adc ljmp xor dec inc je dec imul jg ret aam and sub mov sub das into cmpl mov rorl inc xlat inc mull pop subb xchg inc pushf icebp sbb xchg mov inc notl lcall call (bad) jge repz push push leave push mov (bad) jb test pop sub mov faddl loop mov jns jp lcall mov fstpl lock pusha jno sbb push sub out (bad) sbb adc inc inc (bad) push jl out icebp and push mull icebp sub pop jbe push es leave push in xor inc fldl2e fisub aam or test sub dec xchg jno jae jl idiv je out outsl xor lods pusha sahf insb jae mov adc repnz mov xchg jno loope and pushf loop ret cld or mov inc fldt iret iret iret and xchg out (bad) nop out and jnp xlat (bad) imul call gs pop inc xchg pop lods pop push aas xchg pop stc loope xchg int push hlt (bad) das sub mov loope xor aaa insl xlat (bad) sub inc (bad) nop mov aam push jp push pop jle pop insb adc (bad) fsubr stos xor cld or mov int3 mov xor cmp mov aas int outsb push xchg or lock int push mov movsb (bad) cmp aam fnstcw xchg cmp push stos push cmc or push xchg xchg add pushf es jp mov jle lcall js pop loope or xchg or (bad) popf aam lods insb faddl jg sbbl shrb mov sahf pusha jle xor lcall gs xor stos mov add jmp xor popa jb push mov pop mov cmp pop fwait mov sbb fwait scas les outsl movsl push sub test or out daa inc addr16 or nop movsb xor int3 add insb ret js push push push xchg lret hlt das cmovs mov or cltd mov dec mov or das cld jae dec add int inc mov arpl fsubr in outsb scas dec mov adc ret nop fadds xor xor push (bad) push bound imul iret out inc mov push pop (bad) xlat pop or enter or jge push or jno add dec loop dec icebp stos int loopne xor fsubs dec outsb jbe arpl jg push int pop inc mov mov push cmp or pusha xlat jo mov pop mov arpl sub mov cmp sbb imul and mov loope dec pop outsl iret lods mov cmpsb imul jns push in pop pop iret vpaddb shll mov cmp clc es xchg test test (bad) push push inc cmp lock xor xor test leave icebp outsb xor inc push jbe or dec aam bound cld cmp jl inc mov jae gs outsl cmp hlt lock in jle ja insb push es xchg push mov cmp cmp loopne mov (bad) stos lock push mov cmp outsl cwtl inc dec hlt mov mov aad xchg pop fnstsw mov adc aad sbb dec adc in std ja dec sub mov pop dec adc aas xchg bound xlat sbb fdivrp xchg sbb cmc push movsb sti repz mov loop sbb fmull cmpl arpl loope in dec mov mov insb repnz lock ror jmp add cs and stos dec xchg mov test imul icebp dec test add sbb ficomp sub pop in nop mov xor cwtl sub pop jmp dec jo inc adc fistp xor push in fwait ret mov (bad) movsb sbb mov cmpsb mov pop fstpl inc std cmc call das addl mov jne (bad) imul out idivl cmp and add cmp cmp addb mov xchg jae or sbb inc test pop js pop and inc jl mov xchg repz push jl (bad) int fldt sub sub push movl pop or dec adc inc cs movsb xor adc xor cwtl jae das pop in xor das in dec insl jb js sahf xchg adc (bad) jnp inc (bad) and gs outsl out adc (bad) jecxz and dec arpl cli test mov add sbb dec (bad) popa cmc dec nop dec push dec mov cmp jno (bad) fldl lock std std (bad) xchg xchg imul je out je sub int (bad) pop sub or ss push pop mov loope dec inc js ds pop movb (bad) adc test xchg shll and neg arpl xchg push xchg call cld inc mov enter faddl lret xchg sub movsl xchg push add ss xchg daa xchg mov mov mov xchg in repz test mov sub pop fiaddl mov jl dec in push jmp jecxz inc popf rcrl ljmp dec add sbb int3 jecxz and inc mov cmp dec sub jge lock fbstp fwait test lahf jns dec ret mov or or ror mov inc mov push repz call jp arpl nop scas xor jb (bad) dec (bad) pop fbstp sbb jecxz repnz add aas inc lret push hlt sub dec push mov mov mov jno faddl mov sbbb rclb scas out sbb lahf mov dec sarb add cmp mov cs push nop jmp mov arpl imul inc popf jne xchg mov rorb mov inc sbb aaa cmpsl and cs push sub mov dec pop xchg push xchg push scas lret cmpsl bound imul xchg push in jbe inc mov mov movd (bad) jmp mov insl icebp jge inc jno fstpt xchg dec mov inc aaa js leave and inc or push ss pop in push arpl xor (bad) pusha xor and cmpsb mov sti fs je stc adc inc xor xlat negb cmp in pop add imul leave jle lds xchg lcall pop mov hlt adc add ljmp or mov mov or fcompl jns pop loopne mov inc mov push cltd xor and jge repz sbb imul add mov addr16 pop fldenv cmp pop mov sbb pop jno (bad) test cwtl hlt lcall adc jno mov iret inc loope cmp fsubl jle es mov jnp dec popf cltd out ss cwtl lods inc lock pop jmp sbb mull insb jge jg push xlat out adc mov imulb xor aas dec adc pusha in sub fsub movl (bad) xchg sbb test push in mov mov jmp xor lods add rclb loopne sub and xor sub cmpsl ja jl mov pop cs mov push imull mov xchg (bad) jno fldcw adc mov and (bad) mov xor cmp inc (bad) call or mov repnz add and arpl sub mov (bad) dec negl add add sbb ret insl mov hlt push xor inc fisubl sbb jl adc sub jo shlb pop lahf (bad) movsb fwait lock sbb adcb dec sub cmp lahf loopne dec pusha push outsb (bad) xchg rcl stos sarl sarl mov sbb or jg out jecxz add inc sub sub inc mov (bad) cmp push pop rorb fnstcw movsb cmp dec mov pop flds inc cmp lods int3 int3 in lea add mov int3 push fucom mov addl lret xchg dec push dec mov mov mov or jl adc mov dec negb je daa pop sub fiadd pushf pop fiaddl cltd pushf sub push ss or jecxz mov scas fs or fild fild mov stos mov movsb lcall out std push insl shll push ja test adc add pop inc jg sbbl adc sbb popf sbb das push popf pop (bad) enter mov xor xchg jno fmuls insb push rorb lock sar and adc mov xchg test mov leave mov mov out pop es dec lds ret nop xchg lret or xor adc out jno es lea xchg jno mov in adc (bad) out popf jne bound add inc push ret es stos and in sub (bad) pop xor ljmp mov or adc popa mov jae xor dec jle scas jbe xchg stos in sub sahf ffreep sbb nop (bad) fldenv lods cmp in mov enter xchg add in xor inc arpl and sbb pop xlat jbe xchg or and hlt call fdivrp xor call add movsl sbb push stos cmp inc fwait inc (bad) cmp push pop inc adc (bad) adc and jne fwait mov lcall inc jo adc push imul xor and pop test jns test mov push sbb sbb lret push ret jp and outsl and cmpsl addr16 imul popa stc sbb nop fistp lds cli ja mov and mov cmp test xchg push in jae mov (bad) pop xor enter fcomps pop inc sbb xchg dec push sub popf popa lods jno mov add add pop mov ja jno das cmpl (bad) iret adc lahf mov and aaa jo adcb jmp sub sbb jns jo,pn les inc add out les fbstp lcall or adc imul add cmpsl xlat repnz aam out push int3 xchg nop iret mov das pop ret cs jo,pn insl xchg lds adc sahf and out mov jno aad test shlb and pushl popl pushl pushf movb pushl ret pop adc gs repz ret pushf data16 lret adc add fld mov cmpl (bad) fbstp lds sub inc pop test dec int3 pop dec mov and scas leave (bad) cs adc in lods mov aam dec test jge dec int3 sub or inc cli mov fucomi mov pop les cltd sbb and lahf jg xor inc lret push lret cld ret aam lods xor adc in jl addl jbe mov leave xchg inc fwait lods jno aam rcrl ljmp popf add mov mov mov xor jo mov repz scas shlb adcb in in (bad) push call movsl daa inc and jne pop into and push xor xlat out mov xor (bad) jmp mov (bad) bound push es add push popa gs cld ret jne xchg stos xor js mov push jne pop dec mov cld jp jge cmp ret sbb iret xchg adc adc aam mov jg movsbl bswap movsbl pop jmp jmp pushf fadd nop into test dec push push cmc push inc pop scas dec xchg sub cmp imul stos add or xchg enter stos hlt or insb sbb ds sub pop sbb pop adc lods jae add das mov ror vmovntps and je mov sbb pop (bad) xchg cmc cmp clc add bound xchg mov sahf add push inc pop fadds into loope sbbl in jne xchg dec mov outsb push mov popa mov jp bound pop mov adc arpl mov dec aad add sti xchg or pop ror les jmp and aam pop jge xor iret fiaddl mov or mov adc inc imul stc das push pop imul sub call mov movsb jae push mov loopne int3 (bad) xor shrl popf and movsl scas xchg (bad) mov sbb sbb je (bad) (bad) out scas shlb jbe jge jo or ja jnp mov ficompl nop in push jmp xchg out loopne mov pushf cltd adc and sahf xor pop out add jnp push testb lods jb push add inc lcall or fiaddl jl test dec jno ror ret imul or push lea je stc pusha stc cmp lea push pushl ret stos ss xchg call dec push insb ja mov fadd sbb and sub sbb push dec mov sub imul js enter ret add pop decb mov inc add fcmovb push jb add push jp push (bad) in pop cmc movsl movsl das nop pop test (bad) scas cltd ret dec sub pop dec jne jp mov add sbb sub push inc jmp xchg sub pop shl scas mov push mov push stc cmp cmc add cmp test call mov sub bt repnz push mov mov lea jne dec mov btc sub data16 mulb out mov pushf clc cmp bt sub clc cmc jmp test shl jnp (bad) rolb mov mov mov sahf fsubl push into mov fldl xchg or std push push dec push xchg push icebp jecxz push pop fnsave mov ret jmp movsl cmp fisubl iret pop xchg fdivrs stos fisttpl out xchg ljmp dec mov jge dec (bad) ret jae addl mov fsubs and xor imul pop cwtl push jge lret xchg out push lods mov fwait or and sub dec push inc jnp mov pop ror ret add (bad) jno jge xor and jnp mov mov fistp jo int3 mov insb or in mov inc nop cltd mov mov insb aad data16 ss pop dec xchg jno,pn test daa mov scas ss mov sub push leave inc fsts sub sbb cmp aad add jmp push cli pop shll in es fsub add cwtl push rorb jmp fmul cmc lea sbb bound adc mov dec aad fchs fild outsl jo repz sbb and sub lds pop icebp lods out xchg sbb fxam jno (bad) leave sbb mov sbb pop push or push cmp add stos push daa cltd mov arpl mov ds mov jl pop cmp sub and stc add in popf scas mov push or rcrl mov xchg cmpsb mov insl orl int3 push mov shrl std sub xchg jmp mov iret or inc sbb mov pop jno iret mov mov dec push es imul lods test sbb stos adc test mov adc (bad) xor movsl adc push xchg and dec add inc pushf fstl push lods nop scas cmp jmp stos cmp add or loopne,pt cmc adc push push inc cmp cmpsb jns push mov jno into dec inc dec push dec sub lods xchg mov into adc or cmpsb cmp adc adc pusha iret push shr mov cmc sub push into ja fcoms xchg cmpsb out pop in mov addl imul call imulb (bad) cltd cmp dec in imul dec fsubrs cmp add and jl stc sub xchg out dec je jg mov sub es movsl sbb dec mov xchg or add fs cmp stos pushf inc jo,pn rcr fwait adc bound sub cmp shr std loope rcrb cmovg test jno into cmp bound movl and jae and jmp loopne push mov cli ds xor imul lcall repz roll (bad) sbb and stos cli sub jb sbb sbb pushf sub shll mov adc out add add and xor xor loope mov mov mov cmc sub cld scas adc push xorl mov sbb (bad) push mov sbb cli mov mov mov push cmpsl xor adc xor shll xor adc and ss imulb xor das adc xor adc push mov shl jp inc shlb das movsb jno lods jecxz ds inc insl xchg mov xlat cmpsb loopne ret xor sub and xor int3 clc push repz lods sub sbb add (bad) aaa repnz jno and repz and (bad) pop lock subl adc lret jae or adc sub test aaa cmpsl xlat sub lods cli lock adc jmp add xlat mov daa jne js mov add push mov or (bad) push adc cli ret in aam add addr16 lahf or aaa and pusha push pop push fcompl lock addr16 imull and sbb ret sbb or jno adc mov lret sub aaa sbb loop jmp ret lds sub push popf jge fbstp mov jl sub and push (bad) fstpl sub dec mov and fs shrb test jne mov hlt and popf sbb adc mov stc jmp mov mov xchg aaa je cmp xor lcall and out in shrb push daa fcmovu mov sbb cmpsl pusha xor mov xchg enter push add jecxz aaa and cmpsl cmp xchg test (bad) jne mov ret and sbb hlt movsl in sub loope sub adc xchg dec cmc xor adc (bad) sti movsb imul mov xor imul fwait xor repnz hlt sbb notb pshufw ds (bad) jl push sub mov (bad) roll sbb cli and mov sarl and fidiv jecxz repz cli out pop test mov or sub cmp and or nop xchg and movsl out pop adc in and or pop push mov jmp add loopne adc mov lcall sub nop ret loopne or mov sub xchg (bad) repnz sub and fwait ds daa adc sahf lret inc adc dec add push movsb xchg pop call adc loopne lods sbb test or push cmp jge cmp sub iret loopne inc jmp (bad) xor jnp sub jp mov sbb incl (bad) add push xor lcall mov pop push add xchg sbb jo inc jecxz (bad) lret pslld pop sub xor jl hlt sub cmc cmpsl (bad) mov cwtl repnz push mov jo sti ds out jno mov mov in add sbb xor insb xor mov xor and scas (bad) lret pop clc sbb xor lock or repz stc push sti (bad) xor or sbb ret xchg dec sbb ret pop mov adc pop hlt and cli pop (bad) aad or sub dec mov push add repz sub inc add fs insb ds sub mov test je sbb test pusha adc and les jge dec mov push loop jecxz test jno push lods les mov xchg pop mov and cli ss aaa lods repnz pop js pcmpeqd stc stos (bad) xor fwait push (bad) xor push notl hlt mov bound in xchg add add xchg jno mov mov lcall adc push dec imul mov adc fildll shlb cmpsl or adc test mov pop fs xchg das lahf adc hlt inc mov or adc sub cmpsb loop mov insb sbb xchg call xchg lods or jmp lret je and (bad) js das out pop lahf (bad) rcrb sbb cmp fldt adc mov sahf sbb sbb rorb xor movsb ljmp sbb xchg cs add rcrl push imul addb adc add int pop or fiaddl push in and fild and mov xchg outsl jecxz pusha mov in or push mov or push and pushf sbb iret push xor add fidivr and add and jbe clc imul adc cmp xchg imul push or cmp cwtl push dec aam jnp cmp or cli cld push bound ret mov rcll jno jo in adc add je xor adc pop add sbb cli cmc mov mov lea adc sbb pop inc and jp xor hlt (bad) jne int3 mov aaa (bad) jecxz add enter sarb js cli and mov pop cmp push push dec arpl scas mov xor adc push cmp cmp mov and daa imul inc push mov ja cld (bad) or mov scas dec cmp mov jo in pop sbb test mov jmp jb loopne adc icebp aaa test gs mov push and aam add inc and enter sbb or adc jne jns mov xor aam cmp pop push inc pop cmpsl xor jmp inc stos aaa aaa aas cltd sub aad xor sarb js cld xchg xor and jg fdecstp gs push cli sub fucomp (bad) sub int3 adc and mov aas (bad) xor mov hlt push mov repz add push inc das fbstp pop pusha clc xor clc mov int3 popf mov push mov inc sbb sub pop sbb dec jo push adc in xchg loopne pusha push aaa cmpsl lock xor sbb cmp pusha (bad) enter in icebp adc or stos jns ret cs adc clc je pop mov pop mov test xchg xor jne dec (bad) mov xor dec push adc push add je inc jo sub imul icebp sti sbb jecxz sub sub dec mov inc adc mov lock aam jbe sbb pop in adc push xchg add rcll jge stc mov jo scas sub sbb and vmovddup add xor sahf cmpsb pusha cmpsl mov mov lsl daa inc insl mov in clc adc dec xor in loopne inc call mov or and inc mov dec lret sub (bad) adc and sub sub sub stc pop pop das mov std push mov xchg movsb out cmc mov push jl xor jle je lcall push lock jb jo pusha push repz aaa mov int3 push jge xor pusha add fildl stos adc (bad) lret stos ret add pushf lret sub frstor in xor test mov jno cli mul lret cmp mov lock mov popa and adc add data16 sbb cs loope mov jb jno out and xchg sbb and gs jns nop enter test orb adc in or cmp pop jbe dec dec xchg mov hlt out or push jno dec loop ret repnz rorl in jo mov sbb shrb xlat push shlb sbb lods push or and mov cmp push in adc arpl jmp jmp aam mov dec daa xchg and sbb and xor mov sub sub sahf movsl and or xorl sub imul out ss mov inc pop jb ror xor and jno jb stos mov xor sbb adc dec push xchg inc push repnz or and cmp daa je shrb pop int3 jg adc mov sub sbb sub sbb sub or cmp jcxz sub sbb jo (bad) pusha and and pop mov mov rcrl jmp jecxz (bad) xor pop outsb (bad) fistp lods notb fcmovne shr cmpsl aad and cli mov and push sub in and loopne cmpsb xchg add in push mov insb pusha call pusha dec imul and sub ret adc push shll adc sbb sahf or jl loope sub jge test xor add dec cli je inc cli iret cmc fisttp mov and jg add (bad) ficomp (bad) cmp stos (bad) jo mov cmp mov popa mov outsl xchg and std inc add push mov shrb aas sbb fdivrs sbb dec jmp inc outsl mov je (bad) (bad) ss shrb adc jmp stos cmpsb aaa jb xor pop in (bad) sub push addb mov es fcomip andl lock jmp push lea scas mov xor or xor (bad) jg xor ss push push loop pop jbe push in mov pop dec movsb and sub into into dec add mov ret add mov and and pusha addr16 and xor dec test fdivrs mov sbb ret in mov mov xchg inc push sub mov scas mov fistpll das push cli lret mov cs push push dec sub and (bad) jg inc sub push pop jo cmpsl mov push mov cmp lods sub adc dec cmp or les mov mov sub and das jbe cmpsl pusha or sbb dec fldcw into ss mov xor mov shlb mulb fwait jb mov and adc inc dec xor and jl add aaa push test and ss icebp pop movl jge cltd cmc cli adcb (bad) icebp push xchg out addl (bad) (bad) andl adc push stc xor inc mov rolb lret xor or jne les imul pop add and (bad) xor add aaa imul mov call mov and inc jg loopne ret pop out (bad) push jo ljmp movsl sbb mov mov sub inc jmp push inc cmc lret int jmp ljmp dec pop (bad) jo and sub adc mov repnz sbb mov repz rclb aad push sbb xor dec jno out das into dec lods mov mov xchg clc add mov push mov mov adc loopne je and daa dec imul mov xor scas loopne movsb push adc sub mov sbb mov das push frstor es mov lret xchg adc pusha inc cmc testl adc sub jge mov shll sub cli aam lret int loope test sbb pop pop dec mov outsb pop sub mov sub cli stos push enter in fsts xor xchg jno sub pop jecxz nop sbb rclb sub dec adc aaa shrl movsl jge cmp cmc cmpsl das out xor in xorb ss aaa xchg sbb cmp fildl cwtl sub ss jbe insb sub mov fildl aas pop cli cmpsl arpl and push lcall or cli xabort lea mov call fsubl sbb mov sbb cmp xlat mov sub (bad) (bad) je cmp loop add xlat mov mov dec imull sub sub fisub xor cmp sbb adc xor mov shlb xchg add addr16 xchg and mov faddl sahf jge jo cs and loop mov fisttpl leave jp mov push (bad) out stos repnz xor or popf sub daa xor test jns jne (bad) cmpsl add jb das sbb lret pop adc xor pusha inc sbb cmpb imul lret jl pop scas loope enter sbbl nop out das push inc adc push clc mov and gs jl and ret or popa cmp adc sti xor inc jo lods test sub adc push and fbstp inc cmp sarb cld lcall repnz push xchg lcall int adc jae out cmp (bad) bnd pusha loopne adc sti repz xchg adc jecxz jecxz sbb pop dec ja jo cld imul clc mov call or rcrl xchg and imul xchg sahf les imul sub push (bad) fcoml push sub xchg and mov xor xor das aad sub out fs dec stc unpcklps mov jle inc mov nop xor mov daa xchg sti and lds push mov aaa (bad) pop mov add imul sub icebp jl imul repz mov xchg call ficompl in cmp arpl nop cmp jp jge push sbb adc push jne adc pop es adc mov pop push sub sub xor lock and leave dec fwait rcl push inc jnp inc fcoml les fucomip mov jecxz jmp (bad) or dec xor cld adc (bad) sub cmp pusha lods sbb mov ds ret add notl mov cmp in or sbb repnz mov xchg das jp addb cli bound fwait and (bad) lods (bad) repnz fmull faddl sbb push std adc sbbb adc sbb inc xor in iret xor and xor fldenv mov jbe test and popa mov sbb stos cmpsb adc leave (bad) movsl adc push pop shll or movsl dec iret jno lock fwait notb push sub das and and mov pushf inc cmc lcall push fcoms sub or mov lahf inc xor or and sub popa and daa pop xor inc aaa int3 xor lcall movsl scas in test cli or cmp push xchg aad ss lock outsb pop imul pusha sub addr16 (bad) mov pop dec add add sbb stc jno adc out in ljmp mov test stc push inc ljmp lahf sub das adc lds cmpsl cltd pop jae hlt mov (bad) lret repnz (bad) and xchg adc jno push popf in and data16 or and test jbe and xchg jge xchg cld cld xor mov push imul mov mov dec into dec xchg lret and cmpl inc xor mov ja push xor dec in mov out cmpsl sahf out leave add into sub jo sbb test push (bad) jecxz je mov cmp or xor dec in jb jge das mov sbb movsb xor pop pop push lock xor cmp loop mov cli push mov sbb lret out xchg inc jnp cwtl mov fildll pop sub aam jnp hlt lods inc lods and lods call test dec (bad) cltd sti ja adc stos cli and push mov jbe cltd je jg cmc push loope push adc inc (bad) jo pop pop lods in push mov lret fidivrl xor or (bad) (bad) mov lock lods (bad) repnz lock and and xchg mov cli (bad) roll repnz push cmp lods fstpt mov cli xor ret test sub mov cmp xor ljmp out pop imul jg xchg sub (bad) and mov frstor and loopne xor aaa jae shrb push daa and bound or mov hlt adc and mov fistpll and fs cmc adc loopne ds mov cmp xor mov stos jecxz xor cltd imul sbb sti sahf shr divb repnz in xchg xor xor cli sbb adc sahf push mov (bad) pop jo lcall cmp and call lcall movsb stos ss or adc xor rcll push add ret (bad) les in sbb sbb or push in xchg (bad) cmpsl iret std and xchg repnz push inc js arpl shrl cmc leave push and mov decb jecxz or or and jb or inc cmpsl xchg inc nop into fiadd adc aas aam cmpsl xor mov mov jo or cmc inc cli jmp cmp inc pusha dec and scas idiv aas jae int3 movsb jmp jns test add sub add xor data16 mov xchg and stos jne pop sbb in sbb dec sbb push adc adc adc and lods adc cmpsb add cli sub cwtl shll in fidiv addr16 mov adc inc int3 or (bad) mov fbstp (bad) cli outsl mov xor and lea xor fistpll clc mov repnz fstps je cmp andps sbb mov pusha xor lahf or jno mov or sub jb xor cmp pop mov imul lret jmp inc xorl and rcrl jmp mov enter push cmp aam jno mov sbb adc pop not mov jb sbb adc testl and jo pop movsl negl popf xor xchg inc ljmp and mov lock fistpl das repz sbb adc xor sub (bad) jb jmp push push je rorl add cmp pushf fs lock mov push aaa (bad) lock and (bad) sub gs repz and jae inc xor jbe mov divb mov mov sbb sbb and add xchg cli mov inc imul shr jecxz mov jb aaa jle mov sbb in sbb jmp sbb sbb jo push push inc leave jne push push adc test cmp jle out and or push repz dec xor adc and out out jns cmpsb dec addl call and pop cs mov hlt movsl cli sub in inc and insl sub jno gs icebp adc test cli sarl sub jle or mov fwait sub mov mov repz cs scas and jne fnstsw xor out adc ret adc aam packuswb call push xor rcrl movsl les das sub nop imul and mov mov test cmp fwait xchg mov sbb stc (bad) cmpsb das hlt sub movsl out jl push pop dec xchg cmp jne mov jmp mov sahf (bad) mov gs or sub sub shll aam bound aaa jno or lods mov lret jmp mov stc push or adc fcompl jb push call add dec insb fs pop or xor xor mov out jb aaa and inc push (bad) test cli or mov adc push pop test repz add mull in adc cli and addr16 mov sub (bad) popf adc mov inc inc fwait add mov pop (bad) push ds (bad) pusha cmpsl cli (bad) sbb es mov push mov add imul mov in push insb push (bad) mov adc adc cmpsb and cs cmp sub xor loopne,pn cli jmp xor or pop and jecxz cmpsl addr16 and (bad) stc inc iret mov js dec int3 xor loop push rorb mov jae cli (bad) adc fcoml int3 adc push jnp,pn test and jno mov in mov xor (bad) adc mov cmpsl rcl jbe repnz xor push (bad) jl mov and mov and fidivl movsl mov push cmp sub call and mov cmpsl pop daa xor in mov xchg sub das xor xor add sub pop sub aaa mov lcall adc pop mov std pop scas notb mov dec sub (bad) cmpsb push mov cmp loopne test sbb xchg test rcrb mov call popf push adc insb mov daa push cmp loopne popl das insb mov sub hlt fcomps xor cmp scas push mov daa xchg sub ss or pop out jne inc lret ja and adc mov js sbb pop add pushf adc call and rcl pop div dec inc sarl or mov das repnz sub dec or inc data16 mov xor sub inc loop xor add push dec adcl (bad) jno,pn add bound cmp and sbb and (bad) mov icebp mov adc lods xchg xor inc outsb test subl std and jg cli sub inc xorl jb jns in stos test xchg xor xchg sub adc sub push negb lods xor lfs inc inc mov lods xchg sub adc push sbb and xlat and xor (bad) int3 push pop or fiaddl (bad) jno int push and adc cli fadd daa push popf xor sbb ret mov fstpl add lret mov addr16 leave dec jb (bad) test pushf cmp and xor add adc cli fsubs shrb sub sub push and or sbb js repnz hlt mov in ss aam test dec push lods jae orb mov mov les or aam pop push bound adc cs in mov sbb not fcmovnu sub mov mov cs adc std jge adc fcompl std mov cli and sahf xor repz stc inc adc push xchg dec mov testb loope xor outsl jge lcall cmp sbb (bad) push add in mov jnp sbb pop nop xor xor dec sbb mov hlt adc (bad) lea imull and stos adc sub mov out jmp sub test inc loop fbstp mov xchg pusha push cs dec ljmp pop imul cmp jo lcall adcl lea enter mov adc loopne dec daa mov mov xchg and clc roll cld nop jecxz,pn and je cli and (bad) mul inc test mov je icebp iret aam push xchg pop pop ret es adc rclb lods jns mov and xchg add cli xor cwtl rolb pop add pusha aam sub rcrb (bad) lret shr xor add xchg sub sbb mov pop inc popf shrl in pop push or mov (bad) mov add mov mov adc (bad) xor push call jo sub mov jmp loope test and jbe imul dec lea sbb aad mov fbstp cmp shrl xor sub repz mov pop lds push outsb stc adc addr16 in movsb or mov sub dec stos add and cmp stc loop (bad) cmovnp adc jge sub push flds xor fldt movsl stc sar inc xchg mov ss movsl cmp add mov aaa adc and sub ja pusha addr16 mov push add in inc ljmp in call adc rolb cli xchg js and mov inc nop aaa movsl cmp mov cli daa outsl mov mov xchg cli xlat in das jbe sbb push and jnp call daa or xchg ret jp xor rcl cmp pop dec xor mov fistp adc repnz out xor enter out xor cli push addr16 cmpsl dec (bad) adc sub xor lcall out arpl cmpsl push xor cli mov xor pop or push test cld mov push int add es lods sub fdivs adcb dec mov cmpsl test lods jle and dec push push adc mov lcall (bad) xor push pop fbstp jp and mov hlt ret push xchg mov or scas cs xor in aam mov rol adc mov inc xor subl adc push xor sub mov jae push lahf cs or pop repnz mov push jp sbbb test xchg je pusha (bad) sbb push je add push mov rcrb adc jle les pop repnz (bad) in (bad) mov jno adc mov (bad) and lahf in push shrb jne push ret test (bad) lahf push sbb cmp (bad) jno (bad) push jmp mov xor mov dec sbb test push addr16 jmp mov dec xchg xor outsb (bad) cli xchg cmpsl add fsubrl mov sti ja addr16 mov inc mov dec or xchg sub sbb dec and xor push (bad) rcl ss repnz cld fidivrl jge (bad) aam inc shlb data16 bnd dec ficom ljmp adc xorl mov lock hlt xchg and fisub mov mov sbb mov and xchg and mov inc lret loop movsb cmp mov scas lods aad (bad) mov lea data16 pop mulb jnp xchg add xor sbb push je std xor sbb mov sbb stc xor andl inc jno xor into sahf mov lods aaa and lea add jmp adc xchg pop cli xchg (bad) lcall dec fwait mov jb and sbb test mov movsl xchg test icebp jb push imul adc je icebp adc jo insb ret lea cmp xor xor pop sbb rcr push jns rcrl xor ret pop sbb and inc js pusha stc enter add clc insl inc clc sahf out fldcw je cwtl xchg clc arpl mov add mov and mov ss and je repz pop fimul jmp push loop adc imul xchg call fsubl or std jle js mov inc xor xchg negb out cld bnd pop push sbb or inc insb sbb mov (bad) lds aas imulb add ds je and es jb,pt aad mov push cs sub add inc shld add sti (bad) xor popa adc repz divl dec mov pusha mov gs shll int3 xor popa fsubr into add das rclb lods ljmp sbb loopne lea stc mov pusha adc fs jmp jl aas mov mov mov dec mov fnsave xchg popf ss xor sbb cmp push and pusha xor shll xor (bad) and mov jmp cmp add xor xorb shufps mov jno je mov outsb mov xor sti jmp outsb adc mov repz lcall insb sbb xor pusha cli fwait dec add jg ljmp aam je fdivrs add (bad) andb push adc (bad) sub and gs loope sbb cmc lret mov test imul pop outsl sub jae or fdiv sub jp movsb jne mov je inc mov add repz adc jns sbb jno push stc sub and dec pusha cmpsb inc and inc xchg lret jae xor sub sub xor loop rcrl add ds adc and push mov arpl loopne (bad) mov mov movsb jo xchg add adc inc dec push les adc and repz mov lods popa add insl movsl outsl mov lock nop mov push inc sub les in jb sub cltd insb mov inc add scas mov mov incb cli cmp ret loop psrld lcall mov mov xchg push push push fidivrl adc sbb (bad) jmp adc stc mov dec push mov xor jmp xchg hlt sbb cmp mov scas sub fistp cmp adc xor pop scas and fdivl add fnstcw icebp movsl push mov xchg and jle,pt clc ficoml xor cmp mov cli fisttpl xchg push das sub or push cmpsb sbb dec movsb arpl sub loope jle loopne sti sub and or mov pminsw xor addr16 loopne add add cmpsb je shrb and addb dec cmc je pop lods repnz adc sub outsb inc sbb pop and repz push sbb mov sahf cmpb sbb cwtl mov mov sub fs mov mov adc and xlat add les xor stc pusha sub jne fwait in gs cli (bad) push out in cmp and add movsb daa int3 or push ror mov in mov push mov out shrb mov pop lods pop cmp xchg jmp sub cmovge fwait jno adc mov adc aam mov push mov aaa xor cld xor jno mov push cmpsb mov aaa push adc cwtl sbb lods pop add jecxz push adc aaa jp cmp mov add sub cmc clc out sbb ret mov mov pop mov repnz cltd mov push or dec shrl mov sub xorl std mov or mov mov mov leave rclb or mov scas push inc mov imul lods insb pop mov and (bad) xor xor jle les xorl add mov hlt repz xor add (bad) sub mov adc (bad) jno arpl int3 sbb aam in test inc xchg jb stc (bad) fisubl xor xor pop imul sti sub shlb jg add add fcoms add popl xlat sub push push push aaa xorl cli stc xchg movsl push loopne mov mov fnstcw dec sub xor sbb push sub xorl xor cmpsl nop sbb mov cmc add xchg push xor sub xor push sub sub mov popl cmpsb push mov fildll ljmp xor push push cmp or (bad) aaa mov sub jge jo cmc jno (bad) jae add sub adc sbb push pushaw movsb adc mov inc xor popa jl loop hlt movsb aam nop (bad) jno mov rol sub hlt hlt jno add in aam cmp sarb bnd push sub lods js jnp int3 inc pop sbb xchg adc jmp xor rol sub sub shl adc stos sbb dec mov push pushf and or je (bad) mov inc push xchg rclb pop xor or rorl loopne (bad) lea loopne (bad) xor test inc int3 sete in dec ret pop and xchg push insb sub mov incb sbb lahf int lcall aaa rcll mov rol push push mov loop sbb sahf push and loop xor cmp push pop ret popw lods sbb cld pop je xchg je cli xlat out cmp xor loop jp or loop out sbb test ror mov pop movsb sbb movsl fist mov dec sbb mov fwait push pusha and (bad) repnz lahf mov ljmp push cmpsl ret ret pop mov jbe pop mov xlat (bad) jl xor idiv mov cmpsl hlt ja mov pop xchg ret adc (bad) xor add imul mov fmul repnz lahf ja ret aam and cltd xor stos add push (bad) mov adc ret dec pop (bad) repnz jecxz push mov imul imul inc xor adc repnz (bad) sbb mov clc add lods xchg pusha cmpsl pop imul push shrb jo mov cld (bad) xor xor jo and adc fcoms lods pop idivl mov jmp sub add cmpsl lds mov or aam push or push arpl add out jmp xor pushf cmpsl adc xor adc push or dec mov ljmp xor pushf xlat xor xor mov cmp xor ret mov xor fisubrl xor adc fidivr sti loopne enter xor cli fbld xchg fcompl and sub adc push xchg stos mov and arpl and push pop (bad) test jg xchg jg fwait and gs xchg testl (bad) xchg out insl test xlat pusha xor or shll mov push hlt mov andb clc sub repnz insb leave mov scas xchg lret jns pop mov push push pop xchg lahf sub lahf sub clc popf dec call sti pop out mov stos sbb jae mov push inc test add les jb jbe js pop cmp cmp int3 jp xchg jmp jmp xchg loopne repz cli push pop and inc pop cmp mov xor inc gs xchg sbb stc add and cs xchg ret sub je mov dec out xor jno imul aad (bad) aaa mov lds bound sub enterw xchg (bad) and cmp ss in ffreep lcall rcrb fsubrl mov mov inc lock and (bad) les dec lock out into scas xor add jle adc cmpb cli xchg loopne mov (bad) push das insl in scas rolb sub xor and rcll jbe add jne sub push xor sub dec aad cmpl adc adc pop outsb mov movsb jno fsub ja scas movsb fdivl ss cmp jae xorl shl fistp add xor fnstsw jmp sub sbb ss fidiv into inc lods es adc mov sub mov mov sbb imul aaa imul mov shlb and push stos cmp mov jnp lret push add clc and pop mov fidivl xchg mov std sahf sbb ret jns sub sub sub andb dec gs add prefetchw test push mov into xor xlat out lret andl shlb xor icebp ret add loopne xor fnop mov repnz ret sub out pop leave loopne adc adc ljmp xor test stos arpl xchg (bad) xchg loop and push dec sarb ds popf xor jo xor jmp loop cld pop (bad) test int push dec sbbl repnz xchg adc cld lock aad les sbb cmpsb adc sbb mov jp inc lods pop xor imul cli in sbb push sbb loopne stos sbb insl xor rcll and sub xor aaa and sub and and cs sub sub aam mov lea imul and and call outsl cli sbb dec mov mov ret xor push (bad) sbb mov repnz cld or dec lods ss sub mov mov inc aaa sbb je orl cli jnp sti mov test movsl sub inc sti adc jp hlt std sahf daa mov (bad) xor int3 lods dec sub xchg (bad) popa mov stos adc sub das push push and pushl cli mov mov xor lock jecxz call jb test cmpsl test jns loop push loop pop sbb mov inc outsb les jae imul add ret sub sub fist xor mov push mov xor enter lock in aad sub add aas push cmp sbb mov fbstp sbb test sub stc cld pop fs jno mov imulb inc fucomip stos hlt lahf pop sub movsb sbb out adc mov insb dec jecxz imul dec and xor push add iret (bad) mov inc nop aad dec adc das jg clc xlat test pop pop mov hlt jb lock (bad) fnop movsl xchg shll jae xor and and fildl xchg mov repz scas scas sub xchg lcall push push xor loopne fadds cmp mov add or sub stc (bad) jmp sub xchg xor push sahf insb iret loop dec outsb in and xor cltd mov sub mov pop sub nop or jge jo mov rcl mov clc mov xor or jl inc aam daa jecxz mov stc or pusha aad rcrl shrl (bad) dec jns cmp push sub cmpsl dec mov jno jg pop adc xor or add cli and cmc sub mov (bad) int mov (bad) jo add push cmpl mov js jno and movsl pop and xorl cli sti test ret inc and int scas jo inc mov loope ss mov inc jne cmpsl lcall aaa test fnsave movsb stc and jg mov ja push cmc and testb sub cwtl in jo dec xor xchg xor std notl xor das cld fbld je jmp je pop jle jge ret mov int sti (bad) sbb adc popf and mov adc or imul in in bswap mov mov adcl sub xor sub stc stos inc clc test stc mov (bad) loopne sub xchg push sbb pop jge es sbb out cmp push xchg mov outsb adc mov jge jmp cmp xchg inc jbe cs jne cli cmp dec and lcall inc movb sub loopne (bad) pop adc mov insb sub xchg rclb add sub adc push clc inc cmp addl data16 bound aad sub push movsb insl add cmpsl or pmuludq fdivrs mov lods adc decl xchg inc mov dec push stos cmpsl or ss imul xor adc inc push sub adc or test pusha out mov sub or (bad) cld pop arpl inc push xor and (bad) imul pushf pop das (bad) shl cmpsb or ss push clc pop fidivl jae mov mov and jbe ds aam sti xchg and bound (bad) dec jmp mov dec sbb sub cwtl cmc stc pop test pop hlt xor mov lcall cli inc mov or insb in cs fmuls (bad) shrl inc mov repz mov mov aaa int3 and sbb pop add aam pop loop sub xchg insb (bad) push jae negl lea xor in sbb mov mov jae jmp and mov xor not mov sub jne mov repz idiv jmp je (bad) out incb push repnz xchg rcrb and out sbb lods repz (bad) clc icebp popa outsb pop or (bad) ss test push mov cmp lods lret or loopne mov loop fildll xor insl push jae fs xchg nop mov push push ret xchg and ret mov cmc into lea fnop stos add and push insl or std in jge adc lcall mov loope add (bad) push mov mov in loopne jmp nop sbb mov and xchg jns or xor mov sub dec es pop or mov test lret xor xor (bad) adc ret xor lock and sub mov xchg mov pop sbb test out sbb mov movsl sti sub aaa cmp ss cmp push mov add arpl pop xor sbb cmc movsl fs stos loope add std adc stc data16 sbb cmpsb sub push sub cmc or sbb imull test pop mov sbb lds push out adc push lock mov int3 out test xor inc dec fildll clc cs adc cmp scas stc mov in xor xchg mov int3 lahf bound not sub xor icebp mov loope push imul fidivr outsl dec xor mov test xor push sbb pop das dec (bad) xor xchg mov loopne repz sub mov sbb ss test loopne xchg imul clc lret or hlt (bad) aaa xor add xor add shlb and rorl aam sub and push cmc push mov clts push rorb adc and in daa adc shrl add dec jb sar add push mov adc xor fbstp hlt mov loop jae jge mov xor ret dec pusha cmp and cli dec or push xor notl out je icebp pop es cli dec push ss dec mov rcrl adc dec mov rorb cli fst test jno mov cli pushf xor sub cli mov outsb imul sbbl (bad) stc test cli mov jecxz xor mov xchg das dec test xor dec xchg mov repnz test clc mov jo push cld jmp pusha jg adc and insb mov je mov and stc adc lcall stos sbb dec fidivl nop mov mov dec push add gs test adc bound cmp stos sbb bound movsb movsl sub and cli jb cli mov test jmp aaa les mov add sahf test ret add cmp add aaa push ss cld dec mov xlat pop mov xor xor popfw jnp scas outsb mov (bad) repnz xor jae test in push hlt out pop xor dec test repz sub hlt cmp movsl repnz lcall cmpsb add cli mov shll (bad) cli mov dec xor cmp adc cs dec pop xor add push sub aam xor adc in mov jecxz adc and shll outsb fistp (bad) xchg xlat xor sbb or xchg lods cmc add mov sub int3 mov sbb inc or loop fnsave jg sbb mov nop jno inc adc or pop je pop lret jo inc mov (bad) dec pop leave rcr jmp imulb leavew jmp jg pop shrb adc neg cli mul lea loopne lahf (bad) cli inc mov mov test adc repz adc lock lods sbb inc ret clc int3 and dec loop sub ja imul lods pop dec cli mov lcall xchg push loopne add cli jmp clc jo (bad) in sub cli sarb movsb jle mov or adc sbb adc adc (bad) repz adc mov popf das xor xor roll jo sub dec sub cld (bad) xor data16 iret shrl das cmpsl daa ret (bad) mov sub dec hlt inc loopne and lods or movsb das andl add push in push movsb lret push mov mov sarl and jg pop push xlat rcrb (bad) repz ret adc scas mov adc lds adc add (bad) push cmp scas push gs or add aaa pop and and adc test in dec cltd movsl xchg je xor pop mov (bad) adc sub lds ds fwait jecxz out pushf and push sbb and pop push in sbb adc loopne sub fbstp mov repnz sahf loopne inc and cmp xor adc (bad) in or mov jecxz mov xor mov mov and test stos add test test xchg nop dec js lods or fcmovu cwtl pop sbb mulb rorl lods push (bad) mov lea rorb cmp out sbb dec test sbb and sbb sbb stos and test test pusha pop loopne sub pop sbb ret adc popf hlt out into sub in add rorb jp cmc add sub (bad) into mov mull fsubl sbb sbb cli stos les outsl sub or cli repnz push addb and inc cld lcall sub or xchg stos mov mov fstl outsl mov xor stos inc lock stos sbb sbb test adc out inc negb cmpsb push mov out push pop mov lcall jmp mov lods ja xor push xor pop bound std outsb lock lods and pop xlat fwait in push in popf or mov and cli inc pop xchg pop adc jo xor pop js frstor cld icebp push xchg lods rorl int3 (bad) out sbb mov sbb add ja sbb mov mov test movsl loop mov cmp sarl mov cmp in lret cmpsl lss pusha pop jmp icebp imul jecxz xor (bad) mov out test and mov cwtl jo ret lahf dec (bad) cmp sub jne push dec mov fcompl ret xor adc leave stos mov jo mov add jo xor out and xorl xchg cli ffree (bad) frstor lret add and into inc pushf fucomip cmp ja add insl mov cmc arpl je xchg push fild outsb xor scas ret jnp stc data16 adc sub ret cs mov cmp xchg or xchg mov sub push jmp jg xor cli fucomip icebp xchg cmp mov clc loopne outsb dec mov scas push sahf mov sbb idiv cmp xor mov dec ss mov test add arpl sbb lret mov and ds and mov hlt out mov sub ss cli out (bad) incb bound dec (bad) fild pop out add sbb sbb (bad) je pusha stc imul jnp pushl jmp pusha and adc pop xchg pop and mov das ficompl (bad) es pop sub cmp loop mov xor aaa cmc and test xchg cmc cli or jmp pusha arpl in sbb outsb mov out test stos dec pushf mov ret xchg mov and xor mov jl mov jns movsl addr16 xor lods xor xlat and xlat sbbl gs mov cwtl pop jb mov idivl shlb call push test cwtl gs dec movsb inc push dec push (bad) and nop stos dec repnz mov sub js adc mov fnop push sbb bound call fstpl mov add sbb xor sti xor mov test out push sub fisttp fistpl outsb add and mov xor sbb les loope inc jecxz lods jge mov inc cmpsb add mov sti cli cltd cwtl popa aam fisubr mov pop in dec cmp cmc in rolb adc cld mov dec test mov addl xor stc push je int3 or mov mov andl push out push xor xchg jg je adcb fild sbb push (bad) je inc pop xor add hlt cli mov push mulps sbb mov repz std cli pop or jecxz in popa xor mov or nop mov pushf fnstenv jno orl mov add mov aaa mov mov adcb in ja (bad) sti rorb xor pop je mov mov sub push scas xor mov insl data16 arpl mov inc and fwait orb mov cmp xchg leave out jbe xor into into pop jb outsb add out dec sub mov xor mov or imul mov cld pop add mov movsb push add cmc out mov loopne mov stos pop and orb dec out sbb mov mov and jns push and loop xchg movsb fwait cld repnz mov pop in sub inc mov dec (bad) sbb push jecxz sbb dec outsb loopne and inc mov inc mov and lahf bound bound ret or sbb icebp pop sbb iret in push pop jns or incl mov jne lcall les movsb mov sub mov hlt (bad) mov or (bad) aam fstpl sti bound (bad) jno int bound stos out jecxz jb mov (bad) cli fstpl jo pop push jb push and in or clc repz (bad) fistp push mov inc imul push lock cmpsl add mov (bad) hlt fnstsw sub jne pop repz lock cmpsl call cmp hlt and xchg cmp stos movsb mov fsubr push push add lds jge jne inc das (bad) aad mov dec xchg add sbb push mov push dec or push mov popa aad lret test xor (bad) xor out and ret movsb jge sarl xor inc insb mov and (bad) push push mov pop movsb adc add mov movsl fs inc imul pop insb dec testl push or xor mov cmp and sub sub ret jle frstor (bad) sahf sub jae (bad) repnz std cld jle xbegin sbb inc popa xor lahf fwait cmp clc andb xor xchg and lahf call push sarb ret or js jecxz int3 mov xor mov xor sbb arpl cmp jl inc adc jbe or stos push pop dec fwait sub repnz pop pop mov sub movsbl cs sub pusha shrl jmp xor jns jecxz rcr cwtl lock mov je out mov and xor add sbb mov mov jae cmpsl enter push data16 insb xchg add mov inc popa jno adc or je dec sbb xchg push int push add jnp pop cs push in and push xchg mov je mov aam out inc lods mov popa mov pusha pop lret sub pop push and pop fisubr cs outsb inc sbb jle xchg mov sub inc cmp mov leave sub mov mov mov or push ret xor jne lret pop out cmpsl sub sub fbld sub sub dec push ds cli jnp mov or sub pop mov insb push inc cmpsl cs mov outsb jne pop jo popf bnd rcrb push (bad) mov stos cmc sar (bad) stos nop bound add fbld adc xor scas pusha enter loopne sbb outsb inc pop mov cmp mov mov gs adc sbb jmp gs stos mov lahf (bad) fistpll jnp lret clc push cli cmp (bad) incb mov jmp mov jae add pop std scas (bad) xchg push (bad) icebp in loope mov sub sarb adc aaa xchg jle jo and ret loopne repnz (bad) mov xor out popf pop cs scas and xor jb jecxz sbb sub mov daa sarb xchg call mov (bad) shrl sarb mov xor xor jmp push xor push sub cmp bnd mov or push je loopne movsl hlt pop sbb dec and mov cltd scas scas cmp adc dec das and fwait sub cmp sub mov add orps add cmp getsec loop adc mov and loopne outsb mov imul stos cmp js aaa or and mov jg or fildll cmpsb sub sub push add loope (bad) or dec mov sub pushf test jae mov sbb sub adc data16 mov pop xchg sub sbbl fsubrs lahf jne in pop push mov mov test jae xchg and outsl xor addr16 xchg cld and cmpsl xor mov jo hlt push iret adcl bound ret sub aaa repz cmp jne ret or fisubr pop mov clc (bad) je jo cmp in lods and xor xor jno stc push dec pop or inc xchg and in mov sbbl jno pushf mov xchg stos push inc jne sub sarb ljmp hlt xor fstl (bad) mov mov adc out loop sub je pusha mov xor (bad) jb hlt mov push pop out mov xchg jns popl jae aaa add jp xchg div cmp pop xor push xor negb sub bound xor sub lock jb ret out cmpsb nop mov mov ret ret fnsave adc mov jecxz iret (bad) cmpsl mov je xchg pop mov xchg xor pop mov mull outsb jle xor inc jb jecxz xor pop rol xchg pop sbb test mov loopne test and (bad) mov sbb daa mov stos push or test scas lock dec adc and sub mov scas and pop cmc mulb shlb add notb mov cmp push inc jl popf mov fs movsb movsl (bad) daa jge xchg aaa imul (bad) loopne test stc xor cli cs clc mov roll gs shlb shrl (bad) push xchg mov loopne pcmpgtw push mov imul cmpsb and addl movsl adc movsb addr16 stos mov bound outsb movsb in das cs pop inc and or movsl pop nop mov fs jmp mov jp lret leave lock dec sbb mov push jmp das loope int3 add mov jecxz out mov cmc and (bad) mov (bad) inc push pop and sub aas sbb sub mov xlat pop cmp movsb jae mov and and (bad) inc ss outsb pop (bad) (bad) push int cmpsb sub dec xchg add mov scas pop pop pushf mov add outsb inc pop fcompl sbb fsubr sub adc sbb rdpmc inc push out repz or sar xlat jecxz stos jecxz jbe xor and scas (bad) loop pop ss xchg sbb jmp push xor mov mov mov lock insl push outsb and int jns shr xor cli mov ficom sbb gs ds test loope and rolb mov fimull stos aaa mov sub push dec xchg jno dec int aam push (bad) lock sub pop jge push and sbb loopne je jbe aas pop inc push imul imul dec (bad) adc cmp pop mov sub push or inc mov add or jge and and inc imul mov and push inc fcomip push shrb inc cltd lahf mov mov outsb (bad) in in push and sarb jae and addr16 sahf gs cli cmpl jmp movsl movsl xor cli js cwtl adc and (bad) test cltd fidiv xchg or xchg dec call pop out cmc negb outsb xchg lods sbb xor shrb in sub mov cmp xchg insb xor mov je add lods data16 sub bound icebp stc jne aad xor and or mov sub gs and sub pusha mov aas mov out mov xor jle repnz mov ja lods xor incl and insb daa add sbb mov in aas mov fbstp cli xlat mov adc jno fnsave or mov xor jb js push in imul jne inc cli xlat sbbl sub pop or jne sub pop mov mov inc fiaddl cli mov int gs jae mov (bad) mov fwait jo pushf fs xor das jecxz test pop (bad) in sub in imul mov nop jnp (bad) aad into in loopne stos cli popf xchg sub je mov outsb leave outsl (bad) bound or inc push aaa pop incl repz mov rclb in push mov dec bound cmp arpl jmp xchg and sub into xchg loope std popf (bad) ss pop aaa orl mov ret or nop out mov cmp out cwtl mov or dec fisubl cmpsl mov mov xor jnp sub int fildl cli in mov and push or and sub sbb inc xchg daa lods fmulp fild push or insb jae jmp out stos lods ja xchg sbb jnp es mov shrl mov xchg mov lcall out bound jp fnstsw jbe cli jmp pop or mov dec in and mov leave mov rcr dec in sub stc dec and adc xor xor adc adc dec pop xor loopne movsb ljmp adc loopne mov push lret sbb pop add mov adc mov and and js mov test sbb pop aaa jb pop mov popa sub (bad) (bad) mov (bad) add lock repz jge mov mov mov sbb adc stos jbe lds sbb mov and arpl roll repz push mov mov add jno or jns pop (bad) jno in jb ret imul div scas ret adc pop inc popa pop mov (bad) cmp adc rcrl clc push jle stos pop mov stos pop and pop jl lea (bad) mov icebp repz and cs ja imulb shll sbb cmp cmpl dec sarb test pop movl mov sbb cld xchg and in test mov movsb xor xor sbb and mov inc jae stos or in popf enter push cli mov sub enter mulb les imul mov call lret lds sub and mov jecxz add sbb xor push loope or dec jo ja into inc push jle imul cli out mov aaa loope test jo cmpsb lret mov sub enter xlat and sub lock stos imul arpl imul (bad) aad add cmp mov cmp mov xor divb xor mulb int3 and sub and and out push add push dec inc aad cli xchg dec mov int3 pop loopne test icebp (bad) (bad) sbb add xor mov add xor xor pop lret arpl jno xor inc lahf and ja and pop pop and js in dec cmpsl ja add cmp sub jl into sub je pop mov dec mov xchg sbb jl push ss int3 cli mov ja mov cmc imul std pop ljmp fdivl int3 mov mov fist clc (bad) outsb mov xlat sbb sub imul cmc mov sub xor push ds enter popa xor pushaw les insl push mov or pop imul cmp sub fistl adc data16 movsl outsl inc in (bad) mov push jns inc leave in imul cmc in and xorb and sti push pushf shrl lahf mov xor adc aaa cmpsl mov out cld sarl nop or add push jno and rsm popa mov jo adc jno inc insb sarl or test std jle inc test lods jl gs pop in aad (bad) loope xor mov mov adc and mov xchg in lret hlt mov dec enter jae or dec xchg mov mov mov add mov push std push aaa mov ss das stos and mov xor mov loope rcrl loopne mov sub nop mov sbb adc and pop int3 push (bad) je mov pop mov push jle and adc xchg je in jmp out pop mov mov mov xchg adc nop sub scas mov ficompl in ljmp sbb insl (bad) xor inc clc add test jno (bad) cld adc xor dec mov sarb xchg movlps repz testb adc repnz rcrb lahf ja or mov ret fisttpll mov jb or arpl stc sbb fidiv mov or icebp lcall jp adc pop xchg in jae cmp popf (bad) loope cltd movsb (bad) gs sub bound sbb ljmp lea or xlat ljmp jne pop xor jmp jge adc repnz jmp mov out xchg mov add mov adc xchg cli cld daa inc sub repnz adc aas mov push out lods rorl or imul push sti add mov sub push nop mov lahf mulb out and imul mov shll jp ret mov sbb dec dec fs clc rcrl sub loope or jmp xchg lea lock mov das or out mov xchg mov and sub add or jno sub out push adc dec lcall dec (bad) bound es stc popa sti cmc sub and test mov (bad) and andl in and xchg xor push repnz jecxz xchg xor push xor fbld ret test scas xor (bad) adc fwait in inc jmp je jno stos xchg sub mov in pop (bad) or (bad) xor and cmp dec out ja shrl leave jo (bad) (bad) xchg add adc sbb sub or fdiv jmp push ret push jecxz cli sti mov aaa xlat cmp sar cmp dec push in imul add xor aaa lcall adc sti mov and inc cld clc lock aad stos cmp push or add push aam mov lock stos mov (bad) das (bad) bound in rdtsc popf (bad) xchg xor adc rorb mov pop mov addr16 cltd adc clc aaa and cs pop sbb add nop mov mov inc outsb test mov or adc ret pushf popf jnp pop (bad) and test leave out xlat mov (bad) and popa sub sub roll pop aad jg mov dec and push sub push cmp lds lea in xchg cmc dec repnz xor add dec lods add loopne aam and addr16 adc aam outsb fdiv xor and push das imul mov push xor sub pop lret add insl xor stos adc bound jl sub es sub sahf pop aas adc jns inc pop jecxz jmp mov pusha add das jg mov mov inc push das repz jo repz cli cmc icebp mov adc out dec rol cld movsl (bad) rorb mov movsl fstl imul push std hlt aad and aam clc mov mov (bad) cwtl and movsb cwtl in xor daa aam cli stc repz je fs sarb arpl or xchg mov or in icebp or lods xor adc add xor mov movsb cli in push xor mov dec mov sbb into push sbb fcomip or jbe sub xor es jbe inc and fldcw pop (bad) loopne pusha and in lods add cli in xchg xor fdivrl mov mov sbb mov xchg gs sub sti add fwait xor test fiaddl out jp lcall popf test or (bad) lahf sub push cmp adc jne xchg ss jmp adc mov (bad) cmp lea xor lret push or fs add jne cmpsl adc adc mov hlt mov scas andl push ss jnp mov sbb sbb mov pop movsl adc das orl inc imul addr16 xor jg adc daa mov adc mov stc and pusha out mov sbb scas test jo negb ss cli inc punpcklbw jo sbb sub xchg test (bad) cmp mov dec (bad) ljmp (bad) aam cli jl sub hlt push add es je subl testl and daa into cwtl js xor pop xor out and out pop mov push mov pop sbb in xor cwtl mov clc idivl xor sub inc cmc xchg mov mov and dec clc xor pop push andl test lret test dec lods out hlt xor lcall test push push or mov adc mov sub xor sub xor pop push nop mov add push pop (bad) (bad) pop imul popf dec xchg push cli push hlt adcl inc nop je in bound (bad) insb pop mov cli test adc insb adc je push and fcoml xchg sbb (bad) out adc pop sahf mov lock lock xchg mov out pop sub or pop mov dec mov (bad) mov andb addr16 push stc inc mov ljmp push xchg xor mov xchg and inc pop lock xor insb lods lahf xor ficom jae cmpsl nop sbb xchg (bad) jno ja jbe sbb movsl or shrb fwait cli (bad) movsl test loopne repnz pushf xor fld aad fcomip subl push (bad) and imul mov push or mov inc sbb sub inc in inc xchg sbb sub aam je sub cmpsl fnstcw hlt popa ljmp loope retw push jae loopne out xor daa xlat pop inc int3 sub xlat adc xor mov and fidivrl jnp cmpsb xor xchg sub jns or cs in and jecxz les addr16 out out fidiv lods push les push xor in lret insb int3 xor out mov repnz mov test push call and sub fidiv mov fbld jb push fist jmp or dec pop in loopne insl jb push jo mov ret cli ljmp mov jns cmp addr16 xchg xor in cmp mov and add mov fisttp in adc dec sub or pusha xor mov push adc scas mov mov or xor aaa cs adc repz and ds fildll mov sub lods or jnp repnz push je jo jae sub (bad) jb je cld mov test mov fnstenv popf test popa adc (bad) mov cltd xor outsb ds add lret mov jno push movsl inc fcmovb adc je sbb cmpsb xor cmp mov xor jns loop lods and xor jne fildl xor or push sbb in js shr pop cmp sub (bad) or hlt mov xor jecxz adc loopne lea sahf movsb xor jecxz sub cld test or and repz ds aad call xor cli cmp mov popa bound sub jg mov jne dec cmpsb adc mov sub inc adc ss add mov jno incl add mov shrb fwait sub sub add mov int3 and or jecxz out xchg jg pop in jno xchg push (bad) lcall repnz std add pushf sub js stos and mov cmpsb sbb xchg inc pusha lahf lods adcl bound or or dec aaa xchg clc jno adc push push fstpl cwtl (bad) xchg stos loopne fwait hlt fbld js in bound stos test jge xor or ja push mov fwait daa xchg movsl stos lods lret loopne jbe sub call jmp push mov and shl mov jecxz sti loopne icebp ljmp xchg push call adc addb in pop imul inc bound push adc lret adc xchg int3 cmp adc lcall repnz stos jmp inc adc xor xchg jl (bad) je dec pusha loopne add push lock pop movsb icebp xchg fisubrl or push fsubrs loop out call popa aaa xor inc add and and or xchg and xchg in adc hlt adc dec stc and ss jecxz movsb out jno insl pop insl cwtl rorl add push repnz push loope fs loopne sbb xor cli loopne in aas call sbb or cmp repnz shl stc dec or and aaa iret lock leave loop mov je xor aam mov xor and in insl repnz insb xor fbld xchg repz cmp and jno push xchg movsl inc (bad) stc incl mov lds sbbl insb push add xchg cmpsl stc xor (bad) xor lods imulb dec std cmp imul lods and rcl lock loopne imul enter or in push les add and iret imul sbb pslld sar jns adc xor sub lock stos xlat inc xor push jecxz movsb out and jno xor lret pop jp jl fbstp adc mov add mov and cmp js jmp push jne adc mov cli cs fistp cmc sbb mov pushf sub repz mov inc adcb adc cli xchg or xchg xchg push out (bad) push inc xchg or aaa or pushf cmp imul ja stos pusha in xchg and sub jb dec cmpb sub shl and icebp movsl js push dec shld pop push push sarl push roll cmp xchg das mov mov dec adc mov mov repz repnz pop jae in adc lods cmp cli pop pop (bad) cs inc loope call and xlat or and jno aaa cmc or es push sti add int insl push out xchg pop add dec and (bad) clc add cwtl mov out add je xchg gs add stc xor push inc adc scas out pushf mov mov cmp imul aas inc jnp insb addr16 fbstp pop out je add mov nop or pop cmc add arpl fsubs sbb adc pop std mov push mov aam adc cmp or gs mov pop jmp aam sub aaa add mov pop inc pop cmp mov jo push aaa mov sub gs push jmp loope inc and mov pop sub add sub and pushf xor and imul ss ror out jne xor aad adc lret test das es sbb xor cli xor xor lahf or cmpsl xor mov sub xlat jge (bad) cli pop or jmp inc test push rolb jmp lods sbb add and cwtl lcall sbb mov or add rcrl adc stos push pop out push adc lcall mov ds sub dec sbb jmp out jne sbb gs inc lret and stc mov pop aaa mov ss mov or ficomp adc data16 sti imul outsl dec test and (bad) xor rolb inc add pop and xor ljmp and and jb in cltd or or cmc xor ljmp cmpsl push enter lcall inc xchg dec cwtl push ss ret nop cs sbb push or (bad) and jecxz cld frstor popf hlt in dec cltd push loopne addr16 in lcall lea pushf mov out in xchg jb ja loope adc in cmp notb sub adc pop mov and clc dec pop clc out jl popa push gs lods adc shrl loope jecxz paddd adc jns xor xchg cmc out pop ja pop xchg mov popf jne mov cmp cmc pop push xchg shll pop xor decl xor xchg pop cmpsb clc sub ret aam xor lahf xchg sbb and loope outsb mov sar mov aaa add mov push mov cmp in fmuls sbb xor mov testb and rcr pop (bad) xor fidivl outsl push loope jmp mov xchg movsl or cmpsb mov cmp ror ret lock subb xor ss lods xor inc stc mov adc outsb test std sub sub cmpsl sti outsb inc imul push popf ss daa xor dec mov out xor call sub inc sbb and stos jge xor adc repz pop aaa adc movsl std mov (bad) mov xor mov pshufw sub sub lods xor push mov sbb out add (bad) jmp pop or je xchg mov out cmpsl sbb mov jp mov stos mov mov inc mov ja outsb dec loop cli adc sbb xor or push mov cmp push inc xor test (bad) xor addr16 mov std add outsl sbb jl out lea xchg mov pop aaa xchg adc and jne adc mov jle mov mov and mov xor mov push into (bad) imul cwtl push out ss test jecxz testb (bad) notl inc loopne icebp push (bad) icebp dec or inc dec in mov pop xor jno or or lret mov lock aad adc ss cmp lds xor push jno int3 repz adc std popf imul les xchg int mov mov ss inc mov mov jb sub jns or idivb jle cmp aam cld adc jb mov dec test mov xor mov dec xor inc fdiv cmc sarl jb sarb pop (bad) adc shrb push jl xlat std enter jnp (bad) iret xor fisttpl clc not sar lahf jb pop xor aam mov sub push mov jne shr and pop xor stos mov mov test jb xor leave and and out jp popl dec ret xchg (bad) jnp or dec jecxz mov ss xor daa out push ss out (bad) std mov sti ror nop and roll and outsb in sbb cltd mov int mov mov sbb aam adc fadds adc nop test (bad) hlt mov jecxz and fild inc cmpsl nop lods int3 push insb mov (bad) mov test push in pop imul dec mov rcrb hlt jo int sub lea cmp out xchg inc xor or pushf mov xor fidivl add rorl xor jno inc jae cwtl notb mov or and ds scas in mov ret jge int3 cmp pop sbb jp imulb fcmove das push inc stos outsl cmp dec ss sub xchg fsubl inc mov in push rorb cmpsb xor sub jo mov sbb sub sub mov adc xchg xor repnz inc xor loopne mov push xor ret fs test jmp pop je add (bad) cmp ret dec imul xor sbb mov cmp inc icebp arpl out call jns mov rolb sahf and aam pop popf je inc adc and jmp push xchg mov pop sbb and ficom xor jp xchg lock (bad) fldcw call add add insb das andb inc sub call inc pop (bad) out xor std mov in xchg sbb pop (bad) arpl cld xor ret stc xor and aas mov fld xchg mov les or cmp clc and aam rolb js das gs andl shrb add xchg dec sub ret mov lcall mov pop push cmp mov loop mov loop and stc out add jp das xchg mov loop repz aaa out es sub into jmp aad out mov cmpsl cli dec mov ss enter lods sub xlat lahf sbbb push aaa sbb pop mulb sbb sub sub data16 xchg int xor jb and push das cmp scas cmp mov cmc (bad) cmp and cmp push cmpsb and xor xor mov mov in rcl fsqrt add or sbb push cmp test and loop outsb sub sbb (bad) mov imul inc xor mov sub sub sub push sbb std mov xchg adc add xlat mov scas mov repnz and sub and add mov or lcall xor imul add sbb loopne mov inc mov dec aaa int3 nop add cli mov addr16 cli dec add pop mov cmp hlt push or scas jae adc test nop xchg shl cmc (bad) bound adc dec jo je sbb or rcrl xor jl jmp test ret rcrb adc jp jg loopne xor gs add dec rorb mov jo shrb fstpt adc xor into or repz (bad) xor xchg xor mov or dec xor out mov jecxz jle data16 cmp xor adc push mov aaa mov addr16 pushf dec dec inc xor push cwtl sub mov aaa push xchg sub lcall xor fstl jb rcrl hlt mov gs iret xor xor aad xor push jge std fcomip out sbb pop unpckhps out movl imul add lret sub aaa lock lcall sbb and out jmp push add sub xchg and popa ljmp in jne adc repz ljmp sbb int3 sub adc lock dec sub add xchg es into sahf sub mov loopne shrb xchg mov inc jb cmc xchg fisubr push divl inc push fsubrs add pushl cmp scas loope lea mov loope rcr (bad) into jmp and fsubs lock sbb (bad) (bad) push pop and lea sub lahf jmp mov xor rorl andl jge das loop adc adc out (bad) call push aaa inc sti adc sbb popa movsb sbb mov xlat jmp test out xor xor xchg and clts repnz mov inc mov jmp mov cmpsl xor xlat push mov sbb or rcr pop push or adc andnps mov int sub loop mov push push jns xchg push imul out sbb jl sbb add (bad) cmpsl mov pop icebp rclb xchg iret or out push sbb push (bad) xor push or xor shrb mov cmp loope ret fsubl and mov push xchg mov add jb loope loopne sub mov aad adc lods push push sbb (bad) pop gs jmp loope dec push ret fsubrl jbe push adc lret and xlat mov xchg and jle sbb push mov cs mov mov dec xcrypt-cbc cmpsl adc and lcall mov (bad) pusha xor enter call imul dec iret jmp in mov nop and mov and repz mov push call add sbb scas (bad) jb or mov push popa aas dec popa mov cmp out adc jae pop adc adc xor stos cmp movsb shrb sub test xor sub jmp and test push (bad) xor push or (bad) icebp stos mov xor je and or rcll or nop repz xor adc push fucomip (bad) jbe cmp adc ret push mov jns or (bad) xor sbb mov ret lcall icebp (bad) push xor xchg repnz cmp sbb mov dec jno jmp in sbb cmp test xor xlat add push sti mov jle,pn test movsb push shll jb adc rcrl xchg sub push movsl clc xchg and repnz jge mov jmp cs repnz xor call loop fdiv jecxz nop aaa test xor mov or jb and imul sbb mov mov arpl in and xchg sub nop sbb xchg jle mov (bad) jb and leave or or mov xchg insl lret xor mov push mov dec out xchg aaa and cli jns (bad) sbb adc ret fsts aas xchg insl xor add mov xor out (bad) das insb lcall sub fbstp cmc in push jge stos aas and sub jecxz adcl in push sub adc or arpl add mov sbb mov outsl adc and je and int movsb hlt dec adc mov aas dec mov loop dec xor hlt dec cld push sub lret push clc js flds ljmp les adc movsl and out rolw mull pop clc push cmp mov mov cs stos pop sbb pop pop and sti imul in shr inc pop xchg or pop cmp out insb std push cmp (bad) (bad) imul stos outsb cmp sub mov out jb repz rcrb cmp test mov hlt jns xor xchg cltd hlt lcall sub sub mov jae mov bound sub lods inc fwait aas test loopne mov add (bad) cli ds push push pusha adc add out bnd fistpll mov mov sarb mov sub insb popf lock pop cmp and in adc mov jg jle scas cmpsb adc (bad) into sub or cmp push mov or sub sub xchg pushf les push cmc lret xor xor bound flds xor hlt mov (bad) sbb mov or pushf or mov lcall mov jbe das dec movsl cld lods and xor push test shrl hlt cli rcrb push jle sub mov jmp lods hlt sbb mov mov adc subl adc dec cld and jo sub sbb movsl add decb daa jmp adc adc jmp push int xchg xor inc jbe mov in repz sahf movsb dec clc enter in push pushf pop sbb lods xor (bad) adc add dec adc loopne imull rcl dec mov add (bad) jmp lock sub sbb loope mov and pop sub fbstp sub cwtl jmp adc xor roll insb inc addr16 cmp fcmovnu repnz pop pop dec sub aad xor repz sub repz pushf lods add adc imulb and xor mov imul xchg mov negb insb inc adc xchg aam jb (bad) dec add or lcall loop out cmp popf xchg cmp push mov or jno push sub mov loopne jmp and sub push or sti xor xchg mov (bad) (bad) (bad) movsl push sub lock jmp and mov sub mov repnz ss mov cwtl fmuls repz lods xor xor dec inc fbstp inc fs add aaa pop sbb push scas iret setno pop push cmp sub cmp cmpsl bound addr16 addr16 mov push add pop adc test ss fnstsw fwait das bound adc pmulhw sbb icebp imul in pop push ret mov cmpsl fwait cmp lods mov mov fwait sbb repz jne ljmp cmp mov int push cmpsl xor fisttpll mov inc inc imull loopne pop fidiv scas aam push pop aaa pop sub add bound clc pop jmp sub or dec pop sub or scas sub rcll push pushf adc pop and sub mov mov mov imul mov mov mov push rorl sub arpl addr16 sub lock jo xchg or push mov xor in sub mov pop test mov and aaa or imul sti imul sub and imul xchg sti jmp sub jecxz out jecxz (bad) out insl aam mov std sub je push loopne push fdivl ss mov jmp mov jne sub movsb sub das mov inc push mov call es adc (bad) std arpl int3 int and into jae into int3 adc cmp mov cmp or sub jae in xchg and aam jo cld xor pop mov jae lods int push mov xor or loop fs inc sub and xchg bound dec in ret hlt sbb (bad) pop mov fsubs int add dec push dec xchg and fs lods repnz iret mov ljmp mov adc mov cmp cmp aad testb xor pushf jnp add rcrb mov fildll pusha pushl sbb sbb adc sarb mov mov andl or pop loop adc push inc sub dec fistl or mov loopne mov iret jle push xchg add int xchg in sub push gs sub imul out dec lahf popf cmp mov outsl addr16 inc cli (bad) cmpsb js mov rcrb jno inc mov fdivrs lret lret mov call xlat jge lret jno dec and mov and movsl adcl and sbb pushf inc mov cwtl push add out dec pop pop (bad) sbb negl pop jne rdtsc adc sbb xchg mov aas in push sbb popf divb pop movsb push and lods (bad) in arpl or stc pop loope inc cwtl and or int les and out mov jae add inc xchg aad movl pop jne mov mov xchg ja fdiv xor rcrl sub push les test sub fs das jmp adc sahf das mov (bad) rcrl sti cmp sbb jb ds pop lahf jae adc nop nop mov in cs repnz (bad) fcmovu (bad) loopne cmp sub and (bad) dec cs cmpl mov jne lock lock and js cmc and xor fmull or pushf sbb mull xor lcall add adc frstpm(287 push mov inc sub fistpll fisubrl and adc jnp nop lods (bad) and pop rcrb sahf push sbb aam mov sub add or mov fsubl jne in mov mov add jo xchg lods das fdivrs push stos fucom mov clts xchg sub pop mov scas pop xchg and jle mov jmp dec out loop lcall pop je scas jmp shl and xchg clc cli jne test cli inc sub pop adc lock sub sub jecxz add mov shr mov loop lret rcll mov push mov sbb mov mov mov add xchg lret mov enter fneni(8087 cmpsb pusha or add ja cmpsb outsl jbe mov popa test xor jb inc imul mov mov icebp out dec add and sbb lldt clc out mov shlb mov and ret mov sub test push jns cli (bad) movsl (bad) lret mov and popf mov push mov push repz lods pop test sbb push lock jl sub repnz std and cmp xchg xor dec shrl push nop sbbb mov (bad) sub out mov daa nop lods testl push imul aas scas int3 fistpl and lods mov movsb daa adc push outsb imul cmpsl out xor std imul push sahf cwtl xor addr16 sub and out or xor and mov mov (bad) jb sbb jno mov and scas mov inc dec sub cmp inc or test dec dec pop sbb and sti addr16 repz add and aas cmpsl insb xor cmpsl ds xchg and mov xchg movsl fdivs xor pop stos and mov xor xchg imul xchg fisttpl leave xlat mov mov inc out rcrb cs lret mov inc push or (bad) pushf out adc imulb in cmpsb or or push jl sbb sub and jge add in or pop shrb repnz push and xchg rorb jb add (bad) call daa (bad) xor mov jle sbb mov xor jns xchg cmpsl in stc xchg das xchg popa xor out jo in sbb fdivrs pusha loope repz pop fadds fcoms inc hlt jbe mov xor and jns cs imul jo movsl push sub sar int3 hlt adc and pop leave adc pusha cli lea mov xchg jae lods jno fnstsw sub adc imul lcall push adc outsl pop repnz bound dec hlt mov lock dec push add push xor mov lret ljmp add inc movsb out in and xor pop jb les sub inc aas xor daa outsb add out imul out jmp mov cli xchg fistl sub add out xor insb xor movsb cmpsl push or rcl lret int3 mov cmpsl lret iret push ja les fcomi outsb (bad) ss mov stos in call sbb xor movsl lcall mov ds push cmp mov lock in (bad) add pop popf xchg in cmp adc sbb jecxz (bad) sti ret jmp pusha cwtl add loopne sbb sub mov sti mov mov call xor movsb fidiv cltd pop and xchg adc movsl das stc (bad) loope cmpsl adc (bad) lds pushf cmp aaa sub push lods (bad) sub ss jae in fucom jo clc mov jo sub pushf aad fldt sbb mov dec xchg je dec mov aas pop jbe aam cmp jo cmp imulb cli xchg mulb lods iret and push cmpsb add lret sub sahf stos push or lcall sub and mov ljmp and popa cmp call imul adc fs out rcrl xor add and mov sub mov xor mov jae xchg es sub call mov mov mov cmp dec jb scas aas jmp xor adc lret jp and shr sbb jb out sbb xor (bad) adc jp dec jb mov scas push addr16 sub insl sub jg stos sbb loopne insl push and mov sbb xchg nop iret cld and imul in mov ficomp add and lock push mov xor repz push rcrl sub xchg xor pushf sub cld dec in popa jg adc mov sub arpl mov (bad) (bad) mov loope popf cmp nop xchg ss cli mov and sub test or adc loopne inc inc xor arpl and sbb jbe sub mov cmc mov or out xchg sub lret cwtl fwait imul sbbl fldl lcall add xor aaa aad sbb mov sub mov cmp pop stos test cmpsb fistp jo dec push sub jo add mov adc mov out pop sub sbb les test sbb xchg iret test push dec xlat jb fs inc cmc xor test in das inc (bad) std or mov mov xor loopne jle sub jmp push add mov and xor and jmp cwtd sbb sub pop cmp lods dec mov loopne add mov xchg call fildll jb sbb mov add sub xchg cli inc mov movsl or and dec popf sub jne add jno pop push test cmpsb xor mov push test fdiv xor and jbe scas ret cmp adc adc es in rcrl mov mov mov stos lods pushf dec sub add (bad) jmp cltd hlt fisttpll or cli push es cwtl push mov (bad) sbb jno cmp nop js int3 leave xchg bound sbb xchg mov std push aam jno aam rcrb push sbb (bad) cli jne mov repnz inc jmp xor arpl cmpsb add mov popf cmpsl loopne (bad) xor and dec add repz cmp loop (bad) fimull sub jno xchg out jne or out jmp in push jge mov std movsb sbb popf and add push mov mov xor add pop and ficoml test push jge ss mov sub sbb sahf clc enter mov xchg push push scas sbb and and dec mov fwait and and mov lds movsl movsb mov lock je mov or xchg jno jp ds dec jns pushf gs dec xchg cmp lock adc sub adc and fwait sub cmp (bad) cli leave loop push or sbb sbb lahf dec push and imul lret (bad) aaa sub repz pusha mov mov mov mov pop sub jno,pn das int3 jo aas sbb subl test adc popa and sbb lods jecxz and in repz lods xor and sub sub and rclb sbb and cs adc es cmp stos imul es push cli and mov fidivl out sbb imul mov test ret xor outsl mov sbb mov in inc pop mov es insb cmp pop push in les pop and aaa xor popf add sub aaa push push notb sub adc mov xor push fsts fcomi iret cld push ss mov mov and adc cwtl fs mov and fs xor fcomi cs clc movsb stc adc insb aas out lcall pusha shrb mov inc ljmp movsb push sbb or mov push arpl jo inc or pushf mov cmp insl dec insb adc or sub xchg scas dec mov adc add std and in aas push jo call sbb aaa push addr16 xlat les dec incb push orl adc lahf in (bad) in sub cmpb sub mov cld mov imul out sbb jl lock lock push in outsb sub andb es pusha xchg in loop out and jmp mov sbb iret fistl dec push push inc cmp testb jecxz das push and jne pop rdpmc add xor ljmp loopne out (bad) sub (bad) push or and lock adc cmpsl icebp push and rol (bad) and push xor xchg jp arpl (bad) lcall inc (bad) ja addr16 cld loopne jge mov push mov popa aas xchg mov (bad) cli sub jmp arpl mov xlat cld mov clc ret jg xchg loopne (bad) cld cmpsl sub xor sub sub push jmp cmp push cmp icebp hlt mov movsb push add jae jg mov mov stos out cmp pop into dec test arpl and adc cmp xlat mov in push ret cld add mov loope rcrb mov jae xchg hlt adc sub add addr16 sub jmp inc jb scas lcall lahf mov cs clc pushf mov ljmp lahf outsb or in push sbbl (bad) add jl in jns lods push inc pushf and scas mov movsb add lods andl ljmp sbb mov mov ficoml sbb lret lods mov cli push sahf clc popa mov sub adc lcall in jp lret dec insb dec (bad) push ja (bad) gs (bad) adc and push xor movsl inc imul pop add adc mov daa xor stos mov mov jmp mov cmp add adc dec push or inc cmc pusha loop mov or and push push or cli cmp fucom in sahf leave pop icebp sub inc ljmp pop or lret mov dec add xchg push fwait push sub setl int add pop push movsb cs sub and cmp push nop sbb int3 xchg ss in or sub mov mov movsl pusha ret cmp jp movsl repnz fbld lods adc dec pusha test lea jbe adc jno pop je daa hlt push xchg movsl xrelease inc data16 outsb jmp stos mov icebp and in cli adc popa lock ret add outsb push addr16 lock mov popf adc xlat movsb imul and addr16 xchg pop movsl cmpsl icebp (bad) pop fdiv sar or jb jnp cmp mov xor lahf mov imul xlat sub mov xor ja cmpsb push xor ja mov mov dec lret jb bound loop inc xor add and mov adc (bad) fldcw repnz cmp pop jne cmp sti ss lahf mov subl rcl (bad) lock push (bad) cwtl cli call dec pop pop enter sub int3 sub mov sub (bad) mov mov fwait sub cli data16 (bad) aas mov ds mov or stos and (bad) sbb pop shrb out jnp inc push test test dec out push mov pushf or mov fcomps and adc and adc stc cltd pop dec sbb sbb add mov fnstsw das xor push loopne adc sub daa push sub xchg mov (bad) jo test and mov out or cli into xor and or inc das mov sar lods pop xchg pop xor adc mov (bad) mov mov rcll fild mov jle in das lcall inc and cmp xor lahf rcr ss sbb sbb mov cmp je push xchg push push outsb cmp sbb jbe data16 jo adc push or pusha push notl int3 (bad) shrb add outsl test jae test jbe jle call push test outsb sbb pop jge dec sbb xchg in clc loop or cli mov xor mov and xchg and mov sti ret lahf add pop int3 xor add or std bswap lods dec xor test sbb xor adc lock stos xchg clc jmp sub add sbb and int repnz jae dec mov adc pusha ss (bad) jno cmp mov out in clc mov cmp enter mov dec outsb adc int lret popf mov loope pop pop and ret lret cmpsl push inc sbb mov sbb movsb pop cli cmp (bad) mov sub cmpsb lret test insw adc out jmp cmp dec fldenv jne icebp outsb gs ja movsl imul jmp push inc mov and cmpsl mov fwait mov (bad) loope rorl inc push and (bad) mov js xchg mov test cli and btr add test adc pushf dec xor ret cli clc dec cwtl cmp (bad) lret inc push dec mov cmpsl mov (bad) movsb mov pop or addr16 data16 dec mov ret cmc jecxz (bad) ljmp pop push adc sub xchg js addl or fs jbe test jecxz (bad) add gs add scas mov sub movsb scas jmp pop popa add (bad) (bad) xor arpl ss mov (bad) mov icebp getsec adc mov xchg jmp mov mov icebp out jp inc adc lcall jmp or imul arpl cmpsb or in inc out jl je popf add pushf cli je xor outsl std push xchg jl fdivs adc push std clc je repz sbb (bad) shll nop add je jbe out ret popf hlt jns xchg call (bad) sub push sbb and xchg cmpsb inc iret cmp das test sub cmpsl dec add daa aad icebp mov addr16 addr16 push xchg nop xor jmp mov and jecxz pop xor and jbe outsl add inc sbb (bad) and (bad) mov ret imul adc out mov test daa mulb sub sbb and sbb aam pop (bad) aaa mov in mov sub push imul fcoml pop lods xor cmpsl and jo sbb mov ret jmp cmp repnz test aaa hlt sbb (bad) mov ljmp mov or xor and xchg xchg push sub lock push imul stos pop push je add push sub cld jbe sahf paddb pop in sbb cmp (bad) loope sbb ffreep push scas mov and imul pop and jl mov push inc pop je sbb shrb pop ljmp incb pop and mov pop mov icebp sub lret mov xchg mov and std test lods in dec jle jno int3 dec mov mov ss call ret sahf pop jecxz pushf or loop loop daa in decb xor push jmp gs data16 xchg sub xor enter sahf jp rorl repnz sbb cmpsb in xchg clc mov loopne mov cmpl stos lock adc stos mov cli xor sbb shlb and mov cmpsl lds fsubl idiv sti or clc jecxz (bad) enter outsb jge xchg lcall das jmp mov mov sbb loop arpl jnp cs jo and hlt sbb fistpll insb test or icebp mulb mov aam mov cli adc mov fs imul mov arpl cmp lea xchg cli cltd sbb mov fbld jmp sbb and in xor mov and mov and adc add push ja mov call cmc mov call sbb add cltd pop mov mov mov add mov adc stos adc lret mov test (bad) das adc incb and push xor loopne xlat loopne dec add xor inc out jno or ja xchg popa sub ror (bad) mov adcl and push gs jmp std mov mov test pusha lods roll push out (bad) adc fimul mov mov cmp or ss in in adc ja adc fwait sub ja xchg sub jecxz mov aam mov mov call sub and mov jg,pn (bad) std (bad) fwait shll loopne xor pop mov cmpsb mov lahf pushf jmp negb data16 jb outsb or jns push hlt mov mov in pop shll mov sbb mov xchg jo sbb mov sub sbb adc push sub call pop sub xor (bad) jne stc mov or sub or push inc xor pop cltd or cld push in insb or mov xchg mov jle cmc mov adc loopne mov out repnz sub adc push and out cmpsb pop jne sti iret test or into sahf mov loopne mov out adc sub es cmp dec sub sbb (bad) ret and sub scas add (bad) dec xor and and sbb test not push jae addb je push stos cmpsl dec rcrb flds mov pop push sub repz or mov sbb insb sbb lret sahf rcrb mov fucomp imul sub mov call sbb jl mov jb xlat adc imul iret cmp lret incb stc sbb imul dec push mov cli and sbb leave dec cli dec xchg jno test or sub jnp rolb mov movsb fldl fcmovu push push add lahf pop sub jle sbb nop add or cmpb or or aaa popa ret out imull jno aaa out push in cli insl sbb mov rcrb lods sbb sbbb js ja lcall pop js cld adc in inc shlb (bad) hlt xor rcll out pop outsb subl fldl movsl and mov sbb pop lret dec or loopne mov push sub inc cli adc pop int3 popa mov nop and rep insb add fldt add (bad) insl cli or cmc add mov adc movsl mov stos dec stos imul fisttpll into mov aad xor repnz jno (bad) inc lcall cmp and xor in sbb pop int3 nop lods sbb mov jecxz push pushf jae hlt mov cmpsl cli int movsb jbe jp sub insb cli outsl stos iret inc cmp movsl out fwait mov (bad) scas gs mov sbb sahf fcoms fidivl jo js loop push aad xchg bound clc adc mov mov cltd adc sarl imul xchg pop (bad) hlt lock sahf mov js mov (bad) out dec imul ljmp push adc dec test int3 sbb cmpsl lods shr hlt jl xor popf xchg jp mov xchg and xchg popa ja jge aam cli mov xchg xchg adc rcrl cmp mov ja mov add xor mov jmp cmc mov aam int ficoml mov and adc or pusha (bad) nop aaa mov xchg sbb outsb scas aad popf adc mov pop lods add adc sbb lcall push dec mov dec rorb sub xor cli mov adc cli inc lret mov loop mov mov imul cmpsl and das mov pop adc (bad) (bad) cmp jle lock sub lea cmp rcll push (bad) cs and bound test divl arpl adc mov adc iret js mov mov idiv push loop adc lock notl shlb nop mov (bad) mov lods and dec std cmpsl sub in or xchg or inc jnp mov xor fsubrl mov cmp ss xchg movsb cs sub cwtl add mov mov cli in loop mov (bad) push loop out mov mov (bad) dec jl je mov test sub pop xlat or test test cwtl and jmp xchg loope inc mov sti xor mov lock or push inc mov xchg adc test push movsl aas xchg mov incl data16 data16 mov notl stc mov push pop sbb pop xchg mov push repnz adc xor adc mov paddq push loopne mov ret popa xchg jno iret ljmp int shr jne mov clc mov pop addl adc xor lods and sahf lcall lds and in dec inc (bad) xor adc lcall lea mov dec or xor rorb sub xchg (bad) push jb aaa jne inc push das push mov imul sub lret (bad) sahf xchg add mov cmp scas std test fsubs lock push aam in pop sub sub cmp sbb test push jg sub movsb push push test xor jnp or cli in lcall push aaa (bad) xor mov fistpll sbb cmp sbb dec xchg cmc int std js movsl popf sarb rcrb jns push mov mov out loopne cmpsl xor push repz mov push sbb rclb lods ljmp sti adc mov cmpsl out dec insb mov loopne sub sub xor (bad) dec daa xchg stos ret pop test mov call mul push xor test mov fs xchg sbb pop or mov das xor ds into jmp test xor js loopne das add call in movsb sbb subb cmc mov bound mov inc in jl inc insb (bad) pop xor notb xor mov test adc loopne out mov int3 nop mov sub dec sub loopne mov mov inc or aad sbb sub or inc mov lea adc and mov fbstp fs repz push jo test mov test sub jecxz push mov or cmp orb cmpsl inc inc jmp mov inc mov popf push mov sti add push test push mov test and es sbb mov aad pop fcompl ficomp test xchg sub dec push jl mov adc repnz jle jo xor adc cmp mov gs icebp or add mov add div mov push das add (bad) cmc test mov rorb push in mov (bad) xor push or rcrl inc hlt adc fbld mov into xor and clc xorb xchg stos fucomip mov fldt cld ds in or jnp mov (bad) aaa ret pop mov shr out adc mov push (bad) mov lods xor imul push dec (bad) xor adc pop sarl cltd cli lret decb (bad) arpl ja push insl jmp jnp mov sub add shlb mov pusha (bad) clc and movsl ja lahf add and inc mov subl inc mov pushw in add xchg sbb negl fisttpll add loop cmc aad cli mov jge jmp (bad) jae scas adc sub (bad) stos add out lea stc (bad) xor and mov adc sub cli fstpl mov jmp xor hlt cli pushf xor inc fs out cs xor pop insl mov xor scas cwtl int3 nop (bad) sbb adc in adcl inc sbb repnz rcl jecxz stos lods xor lcall iret sarb (bad) xchg sbb xor and cmp inc fnstsw mov cmp mov repnz lea sub scas leave pop dec mov pop dec and sahf (bad) lock jecxz lock addr16 or xor and xor mov sub pop xor add pop in insb js addr16 lret xchg dec es testb sbb fcmovnu mov js mov lea dec mov sub repnz sbb int3 or in addr16 adc sbb nop mov xchg sub push push sti gs pop cmp sub movsb in xor adc xchg popf pop fdivrs fistp lahf mov into cli push cltd repz cmp mov mov push adc and nop jo sahf jp clc add xor and repnz outsb cmp gs dec sub (bad) lods mov lods ljmp hlt test jge sbb mov sbb mov pop sbbl mov sub bound sub adc (bad) and push out and push es shlb adc and addr16 mov add rclb lret ja inc fwait or pop sbb stc shr cltd add push std (bad) jbe cltd lret sahf cli xlat mov jno mov (bad) mov imul cmc je cmp stos and mov jo je jmp divb aaa (bad) adc lahf sub sbb mov insl jg sbb insb lods lea sbb imul xchg xor sbb nop xchg repnz add cli cmp and (bad) inc es movsb push cli mov ds mov sbb cmp call (bad) ljmp and aam push imul pushf push hlt aaa inc mov cmp loopne andl sub sub out inc addr16 dec fbstp test push movsl inc jecxz and sub gs call xchg pusha iret jle mov aaa test cli xlat mov jne xor jp iret xchg mov sahf cli repz mov jns repz sbb cmc sub jle into add cmp aaa out testb stos pop fmulp or fistp adc xor sbb cmp xor pop mov inc xchg iret xor lcall bound jo sub mov dec or dec iret pop sbb dec cmc je mov dec into cli sahf popa outsb and sbb mov pop mov push popf xor sahf lcall lods xor mov (bad) in loopne shl inc mov popf mov aas dec je imul (bad) in push repnz mov les pop gs adc insl fstps mov add out popa fistp mov xchg daa pop sbb mov cmpsl sbb in push and js addb add and aaa das ss mov push lods or imul cli jge out xor sub psraw loop mov cltd inc and in leave mov jge lea mov cwtl icebp dec call xor jbe daa sti pushf repnz dec in call inc jns movsl jae xor jne and and and xor stc push jg or (bad) in lret cli xorl daa stos ret xlat ja (bad) cli int3 negb push mov and sub mov popa mov std jns mov lcall inc sub aaa aam mov gs jge jecxz push add push rcrl mov sub cmp or mov fldenv out cli xor out outsb sti sub lods cmp lods sub xor sub jb ja in push test adcb sti add rclb xor mov mov movsl fist inc push movsl lock mov cli pop cld inc imul push cmp out add inc outsb adc cmp ss test or hlt xor aam push add scas leave push inc lods imul nop lods adc jle mov (bad) pop nop push dec (bad) sbb or or insl jmp cmpsl outsb jp js ret lods adc cmp cmp jmp lods mov sbb mov adc ret repnz inc xlat daa cmpsl (bad) sub addr16 mov out (bad) sbb orb repnz mov cmp (bad) push inc lods cmp mov push push repz mov jns out loop rcrb cmpsl cmp int3 adc adc std lret ljmp out fcomip mov hlt xor mov adc mov cmpsl jle and hlt xor xor xor aaa cld in xor cmp xchg sub rorl mov popf sub adc and jp or xlat movsl shlb repnz je pop pop xor xchg cmp aas jb les xchg and push outsb bound aas lock aad test jg xor daa ljmp lods sbb cmp (bad) rcr dec or in fldt es push mov mov test roll xor pop mov jo es xchg sub mov or aam out push daa inc jp xor ss jg test sub xor cmp or jne cmp outsb clc lods lahf in je sarb jne push inc incb stc or mov incb sub loop or cmp call mov aam lcall inc cmp adc inc pop fwait mov mov nop in insl in pusha and addr16 sub shlb dec punpckhbw cli mov push (bad) jb xor add int3 sub push sbb je (bad) scas cmp rolb rcrb pop ds cmc mov loope icebp push sbb push inc movsb cld add and fwait lods lock and mov (bad) mov insb xor popf fildll inc push or cmp and xor out cmp fisubl outsl loop test mov inc jmp iret hlt scas and fs hlt xor or push add pop mov mov and data16 sbb loopne aas or jl add xchg pop xor xor popa mov lret aas fs dec ljmp sbb push and xlat inc aaa and xor xor jb inc mov cld push movsl std adc jle hlt and jne ffreep inc inc iret adc xchg (bad) shlb xor xor push and fmulp xchg sbb add clc fbld stc mov add mov jno adc popa xchg inc xor push jae cmp or mov cltd mov addr16 xor cmpsl addr16 pusha jp dec pusha clc out and adc cli rcrl pop mov (bad) jl fidiv fiadd cmp imul and cli inc cs lods lods (bad) dec out cmc outsl sub call (bad) lret sub sbb mov iret hlt lcall lock jle mull xor cli ljmp shrl sarb jb idiv mov mov ret and ret cwtl mov test mov mov nop push int dec (bad) dec and sub push sub cs xor int3 pop mov jno das sub mov in xchg lds cmp mov adc es add inc hlt sbb rclb ja sub xor movsb sbb imul repnz aaa mov adc adcl addr16 enter outsl int cld jmp push (bad) pop and pop outsb leave lret insb sub jb mov mov notb cmpsl mov lods sub xchg and lahf xchg mov push pop movsl sahf mov xchg sub xor addr16 cld mov cmpsl or pop scas scas outsb ds jno xlat out cli jmp mov xlat dec dec xor arpl sbb punpckldq inc loop out cli jae,pt fistp ja lea jb shll mov notl xchg mov loopne jnp movsl shr lods mov fwait inc in iret jg (bad) mov insb aam sub mov enter inc jp push dec enter mov cli push loopne vpsadbw scas cld (bad) cmc test out aaa xchg iret fucomi in adc jb cli int3 xor fistp jns xchg pop pop xor and or test je fsubl xchg pop jno cmp sbb xor inc xchg adc xor pop xor lods cli fnop inc pop test shr sahf inc mov je push repz (bad) mov mul (bad) dec sub mov test adc jno sub lret pushf push popa gs mov cmpsl pop sbb and or adc stos xlat cld mov or imul call jb (bad) popa sub repnz (bad) lcall adc push sub adc fstpl mov cli push xchg test imul or arpl sbb cli repz ret repz les sarl pop repnz or clc (bad) mov cs xor insb fs das loope push rcl push jge ret add cli fistl f2xm1 and mov gs and aas mov (bad) fimul jmp mov lds imul inc mov mov les cmp es xchg sbb data16 mov fbld mov xor hlt mov sahf gs jo test mov out or push sub dec mov jnp movsb push scas mov cmp in js inc fbld add imul sub xchg dec out ret xor (bad) cli pop out sub push dec or sti xchg stos and mov mov pusha jbe leave push int3 or cmp cwtl leave sub notl lods mov (bad) ret inc mov data16 xchg in inc fbstp adc lock hlt mov inc xchg sbb hlt call (bad) mov xor inc in (bad) dec call cmpsl idivb xchg cmp aaa push ljmp xchg stc xchg lret (bad) fmul cmpb fsubr sub pop cli jnp dec lods sub lahf dec sbb add or andl jp ja pop mov les daa stos outsl mov and iret cmp push scas add aaa dec and nop imul sbb jp mov xor mov inc lcall std and xor orl repnz fimul and mov mov pushf push sarb mov (bad) sbb push call or jne inc and adc (bad) rcl fnstsw fisttpll sub cmp xor adc js mov sbb mov sti aad lds jle out mov mov loopne inc and xor sbb insb cwtl sub jb outsb push xor rcrl (bad) mov push mov jnp cmpsl repnz mov mov repz (bad) jmp adc sbb mov lahf aas aas cld jo xchg sub sbb sub add fisttpll test xor je repnz xor cmp jl sub xor add add dec xor rcrl cmp repnz mov xchg cmpsl rcrl in adc xor loopne mov call lcall add push add repz push inc std arpl lret cmpl mov lock andnps data16 int3 mov jnp inc or mov inc push fs lods sub popa and test fcoms mov adc push nop and jb pusha addr16 mov aas xchg mov cltd loop cld mov xor xchg xor sbb jecxz mov xlat sbb and clc dec (bad) mov pusha sub test test cmp xor stos jno fildll add (bad) js sbb lock aaa ja mov hlt lahf pop cmpsl fnstsw (bad) addr16 mov loop in push arpl movsl dec imul popf ss or xchg sub xchg pop sbb sub mov addr16 sub pushw sbb enter xor xor outsb or pop inc adcl add fcmovu xor repnz xchg data16 inc test in into add inc lret and cmc jge cltd add arpl xor jo bound or repnz jae adc stos lea repz push and sbb mov mov mov inc mov mov (bad) int3 inc pop (bad) in fbstp inc ret sbb test (bad) nop popa jl das dec fwait sahf adc mov mov (bad) xchg xchg sbb (bad) das bound or clc pop js cli adc dec or xchg dec dec enter cmpsl xchg adc insl inc xchg add (bad) incb xor jbe rorl jnp aaa (bad) jmp add lahf jmp cld push jo lret sti fs sub mov lock sub inc pusha stos mov jge fdivs fucomip mov sbb in push stc add mov mov add data16 jae jl mov shrl out push data16 aam lret (bad) out ret xlat add mov jge or lret jo jb inc xor leave cmp jnp dec cmp sub cwtl ret outsl push cmc pop cmpsl popf dec in rcrl es test vminss int jmp pop xchg dec popf or xor jo mov mov push push int ss das popa (bad) gs push gs std inc xchg xor mov sub sbb mov orb je mov movsl int3 xor dec outsb sarb mov adc xchg push mov cli push lea cltd dec or movsb movsl and lods xor imul sahf mov pop and or push out sub mov xlat gs xor sbb pop jae and adcl mov ljmp and push jns (bad) out inc cwtl xor mov outsb cs repnz repnz aaa (bad) rol xor dec add mov push int3 movq xchg fs xchg mov cmp mov mov dec test (bad) stc iret mov push fbld data16 out mov mov (bad) mov mov sub xchg mov pushf sub scas cmp ljmp cltd xchg cmp ja in and dec shrl mov sub xchg fxam andl (bad) shll (bad) icebp push push fldt or jne jb lea push mov mov in cmpsl aad and mov xchg or imul sbbl ret mov hlt addr16 xor insb and stos cs and and mov dec and jmp sub (bad) sub and popa push mov (bad) fldl gs addr16 mov lret push xor adc mov mov mov (bad) jge ss imul lock subl repnz xchg stos call mov pop movsb sub ret scas adc add mov dec or mov scas fnop nop repnz add cmp xor mov pop aad lods in inc hlt nop lcall je jo repnz xor mov lds inc adc ss not cltd pop mov pop lock inc insb sbb insl pop fwait inc ror aaa cltd stos cmc mov sbb jge mov jp jno xor mov lods dec ret (bad) inc mov push mov or (bad) cwtl mov fisttp mov sbb sub mov jg mov push xorl add sbb or dec mov adcb (bad) sbb sbb push enter enter insb cwtl ds outsb sbb bound leave jp lret add nop mov insb mov rolb stc insb out adc cmp jl push ds or push aas adc push (bad) lock cmp loop imulb xchg aaa cli jge shlb cmpb sbb jge das and xor fdivp ficompl xchg out test rcr lar add add add scas sar test test sbb cld sub shl pop cltd cli leave xchg push icebp mov jns (bad) enter lret (bad) push mov movsb test outsb frstor or lret in cs mov jl std cli loopne imul xor jg fdivrp loopne outsb cmp adc xor xor mov sbb inc int3 mov or adc and movsl ja add or cmpsb sbb in test sub and add es dec rclb sbb imul cmp push out jae sbb les mov xor rcll xor push cmp mov and hlt sbb stos stos xchg mov clc sti push clc cmp mov repnz add inc or lret cld in pop and jmp ror scas enter sbb test or std imul aas stos inc pop js xchg mov add add cs push adc sbb or push add mov and mov xor xor xor jmp divb cli jo dec mov xor dec push rcrb aaa and sbb lret jo and sub hlt xchg hlt lea shrb scas mov cmpsb lret lock and imul loope pop mov mov inc or fwait add das sub and in xchg fs adc xchg dec mov adc pusha jp jecxz test das sbb in xor mov scas mov sti fs loopne xchg xor ret jne sub lock inc jae cltd fsubs mov in jle pop cmpsl in xchg or movsb push jmp add sbb lods fucomi aad js adc in add and fwait and adc add add pop mov test les or push in lahf cli mov mov cmp cmp cli dec and out imul add jae ljmp mov jg and out sbb in and add lock pushl cld inc mov test stos and out outsl imul and and hlt mov sub xlat dec jl popa xchg xor popf pop push cs ja sbb das icebp xor xchg pusha mov push jns and inc dec fsubr xor lds movsl xor mov xchg out xor xor xor mov or into pop js mov (bad) clc test scas adc mov lods aaa mov cli pop (bad) mov lahf and mov adc pop push xchg mov xorl test es xlat rclb adc or js dec cwtl jge inc lock inc outsb sub push jno sbb pop shlb insb jb (bad) bound sub or clc push pop mov mov xor fs ja or imul or mov dec aas add and dec xchg push arpl shr and lock lcall sbb add idivl jmp xchg out fnop (bad) fisubl adc mov cmp neg (bad) icebp aam mov stos mov adc imul or dec adc ja xchg sub lock xor cmp or xor inc test lcall jge pop sub popf test mov cld (bad) hlt test mov push idiv cmp fwait adc rclb call js jo repz pop out push cwtl in adc cltd xor sbb sbb adc mov lret out mov in xor in sbb xor dec dec (bad) lahf test movsb or cs aaa sbb ss cwtl push xchg scas jge in sub dec insb clc arpl (bad) push add sub dec lods test pop sub rcr sub cmp or fildll imul (bad) and (bad) adc mov sbb sbb nop xchg adc rorl and in jge xchg and ja,pn mov aas inc push test ja stos cltd lret dec mull sbb iret clc mov mov jae data16 je,pn lods pusha pusha lock sub jnp push fidivl pushf fisub pop or xchg repz daa cwtl inc es xchg and xor fstpt mov mov and sbb and sub (bad) xor leave in fwait outsb les pushf fildll push mov adc adc imul arpl sub (bad) mov pusha hlt sbb mull adc adc and mov and inc (bad) fbld bound int xchg mov movsb fs (bad) or or mov fs sbb clc mull aad or jl mov testl cmp jo ljmp stos into mov jbe add pop sti jo and inc int sbb mov and call pushf mov xor inc mov or sti xor out ja lret pop push repnz inc or (bad) sti mov in sbb out hlt xor cmp shrl in push adc or insb ret mov inc imul faddl jae inc fdivl lret mov jmp (bad) mov jp mov mov sbb in add sbb test icebp jp loope mov daa loopne mov insb sub add pop clc dec stc mov imul pushf xor ss in rcrb fs mov int inc xor loop test adc pusha push cmc int xchg out push std sarb jb movsl in or mov dec or dec cmp and jl xor xor sub mov dec and push add fisttpl and xlat pop or data16 push xor sbb and fistp sub sub sub sti mov mov sbb movb hlt push mov dec imul out inc insl repnz sahf pushf rclb push sahf add mov in sbb aam faddl push shl mov xor hlt jne push mov jne sub and cmp inc mov testl aam sub lcall cmpsb adc test push push sbb (bad) shll mov cmc or xor add pushf int3 (bad) or xor add test out test ja sbb loopne or in add cmpsl notb ja push xor mov mov push ja dec pcmpgtw inc rclb mov lods bnd xor iret mov aas mov mov jecxz mov jp fiaddl xor loope xor pop cmp mov pop enter xlat jne adc fnop aaa or popf cmp sbb mov stos repz mov repz sbb in pop roll es lcall sub jle ljmp and scas lock stc gs cs xor push and xchg das jne sar sbb xchg inc pop stos cmp sub cmpsl clc push lcall (bad) cli jno test lods icebp aaa (bad) sbb repnz cli ds xor xchg test fadd xchg (bad) mov push jmp aaa fild mov cmpsl in mov or into inc movsb (bad) jmp rcrl or jge int insl (bad) push jno std pop push mov xor dec add pop mov in nop shl mov sub mov mov dec (bad) loopne mov cli mov arpl loope cmp adc or icebp push and lcall mov or or pop jns movsb mov je jnp push (bad) mov ljmp stos sti rolb sbb and sub movsb sub leave loop or xor cmpsb stos or sar pop pop popa loopne cmp sub inc sbb test mov sbb shll sti adc jns and cmp jno xlat into lods jo cld or into subl add inc call (bad) xor notl lret movsl xchg inc push lds adc enter (bad) fcmovbe frstor call ret ud2 fstpt fcomip fcoml jb movsb stc sub add inc ja pop mov inc jne popf icebp mov inc sti mov icebp insl imul xchg insl icebp ljmp cmp mov int3 mov mov out fadds ret pop push sub mov add loopne xor das xchg mov stos in xlat loopne fs adc jle jg adc add lret mov push xlat les dec pop cmpsb inc push or aaa bound jp js sbb dec test (bad) adc fimul dec out shrl pusha in add wbinvd or cmp in cwtl and dec or sbb scas jge or push into mov jno out xor pushf hlt sub mov cld stc out (bad) ljmp or jno into dec push xchg les jg or adc test test fsubr sub cld insb dec sub cmc loopne cs push mov mov repnz fdivs mov in jns pop ljmp into iret shll test nop inc mov pop or mov xor adc pop xor clc push cmp shl jp std leave pusha cli sub or mov xlat mov lock in cmc xor fwait pop dec add jno mov (bad) imul loop jb push movsb sub xor je push cli pop rolb into jmp or (bad) jle adc in adc cli jnp jns aam cmc mov cs sbb scas cmp mov and adc shll xchg (bad) in shr popf ret adc sub icebp pushf fdivl ljmp sbb mov xor xchg mov pop mov mov mov jg movsl (bad) jno repnz cmp aaa cmp xchg and ffree movsl sub sbb fbld and mov xchg jno xor or cli sub test sbb repnz xchg xchg add icebp fcoml fidiv sub adc dec pop push repnz pop dec push daa jmp jne and hlt xor add jb nop cmp insl ds pusha nop imul nop sub cli aaa cmp xchg arpl in lcall or jbe lods ss lock mov pusha sbb xlat ljmp adc sbb ja sbb dec cli sub inc jno jecxz ss mov inc mov aad lods cli sbb sub aas rclb inc xor xor or jae sbb out jmp lods or lea and movsb sub jo ret and pop sub adcl mov repnz inc int mull movsl pop (bad) test mov sub mov popf xchg xor mov fcompl divb stos int popf adc push movsb xor mov mov in mov lret cs orb nop xor add mov icebp test and or push cld (bad) push ja push jmp sbb jo rol jmp xor lock mov in loope pop jp clc movsl pop cmpsl aad dec ret or inc lock pshufw call inc (bad) xor cs enter rolb and inc outsl lea gs jmp xor push les mov dec push push ljmp into mov lods loope (bad) mov dec mov lock mov in xor cmc sbb mov sahf sub jno fs jbe movl adc mov push jecxz lods movsb cmpsl and jbe fcomip gs (bad) cmpsb out mov popf adc jle add int3 stos mov cwtl and test adc (bad) cmp mov js pop lahf iret xor cli ss lcall push and sub sub sarl adc daa shll gs add inc subb je adc in push test cli mov mov push in test (bad) sub data16 mov cmpsl xor or stos in push xchg loopne adc fucomip jb cmp mov push adc and repz gs sar shld push stc pop mov (bad) mul or movsb jb xchg push ret jp dec sahf push in push lea inc ret mov out and push adc scas push mov pop push mulb xchg xor push inc ljmp mov lret jmp std push stc mov jne xor mov and cmp or popa xor (bad) sub js adc jno prefetcht2 (bad) inc js fildll jg cs mov sub add mov jo cmc aam in (bad) mov pushf bound mov mov daa imul fistpll xlat cmp mov xor popf adc js push or mov std mov and sub rcll (bad) and mov mov add xor and mov pop rcrb or pushf daa lret in push push fwait (bad) aad and mov push scas mov jl addr16 and mov jle faddl mov lods cli push mov daa mov stc aaa and xor jb xchg mov and hlt in insb out fs fnstenv mov cs ja push imul sbb xchg adc and dec mov aaa pusha push in xor xchg insl cmp add jle mov pop and fsubl mov nop pusha daa jbe fwait movsb cmp adc inc jp ja sub in in push mov sahf mov (bad) mov fdivrl (bad) pop jns add mov dec (bad) xor mov leave sahf push sbb and sbb out dec test imul mov cli jmp cmp xor movups jp loop push inc or int3 mov lods adc gs push sub cmpsl sub (bad) imul mov jb ficoml or jg push jle out aaa das lods imul (bad) or fiaddl xor sbb sbb rcrb mov jmp and sub mov mov fbstp popa jl mov xchg out sub pop mov mov addr16 push jne sub hlt adc outsl popa addr16 mov and cwtl jg sub xor mov mov xchg mov iret fwait dec and cli jmp dec adc repz hlt inc test fildl subl xchg push ja mov icebp xchg mov ds (bad) adc pop mov jo mov movsl test mov jle push mov jo jno dec push (bad) shlb mov mov ffree and mov cmc xor sub sub out mov nop dec cmpl xor push imul shll mov add pop push das out xor jnp inc mov push mov and fdiv cmp xchg fsubrs xchg in or mov inc add mov jp mov sahf mov push fidivr shrl pop adc sahf adc cmpps sbb movsb test or inc or movsb and shrb iret add sub xor lcall cmpsb mov sbb cmp push icebp mov adc lea add jns andl lds icebp imul mov xor rcl or leave nop sbb scas cmp add or into mov pop std testl xchg xor mov in test les daa xchg xor jnp and xor cli insl sbb and xor insb imul mov lds nop xchg or mov or sbb jmp inc iret mov jmp lock out out mov loop or ret or cmpl add mov push loopne in adc jns cwtl jl pop mov or in cld and movsl cmc rcll addr16 sub and sub fsubs xor inc or clc mov jns push repnz or ljmp les jl inc gs sahf push push rcrb mov pop hlt xlat addr16 pop push into cmp pop sahf xchg fs in movsb popf fstpl xchg sbb xchg dec (bad) add rcrb bnd divl mov nop cmc fadds mov stos test cld adc mov dec (bad) lret mov lock and cmp jl sub mov insb mov icebp xor jmp mov icebp int3 xor adc movsl icebp out push aaa adc mov dec stos or fimull jno push xor adc sub jno and xor mov call ror fsubl ljmp pop push (bad) hlt mov dec ss cmpsl push out jo mov push lcall or and inc aad mov in add sysenter sub or and lock sub sub fnstsw sub adc cli mov (bad) fwait mov in ret bound adc mov dec push stos daa movsb hlt push jle xchg daa xchg rclb inc mov mov mov push mov mov nop shlb dec inc add add mov inc repnz and orb cmpsl out sub sub sub das mov in sbb shr sbb mov push lret sbb clc xor in and adc mov cli pushf insl push movsb imul mov scas popf jmp dec xchg sbb loope pop push or (bad) bound mov loop and sbb sbb stos fcmove jmp movsb in and mov dec insl add add mov jp add dec setl lods fistpl and push mov in xor loop mov xlat test dec sbb xor mov mov sti mov xchg scas int shrb call sub add cmpsl cli xlat mov pop jae icebp lods jo add add lods in das jmp and mov les push cli push pop js mov ljmp mov sbb xor popf pop mov mov inc adc std xor call lods mov andb inc cmp repnz loopne sub arpl dec add out mov mov lods fwait in and ret and movsl pop out into pop jle sbb fwait push and push lahf xor cltd xor adc jmp cmp pusha repnz mov gs enter mov add cli out cli push arpl pushf xor and xor or jbe hlt xor fildll jbe cmc enter movsl lahf imul clc ss lods (bad) mov mov add (bad) bnd push fild xor hlt je ret mov mov dec and je mov fbstp sbb or int3 push xor test and adc shl xor pop daa lcall push mov inc adc xrelease fldenv cld cs jns js popa lahf lods push cwtl sti lock push jae mov xor xchg gs cmp hlt push push fisubrl and mov stc into sub add dec imul xor dec call jne push cmc push sbb dec (bad) clc lret push mov sub dec pop into jmp (bad) decl mov sbbb xor xor cld mov outsb (bad) push cmp pusha in jbe pop mov push andl out fild dec arpl sub push mov cmp mov cmpsl jl mov mov lock leave int3 jae or testl xor shr jno repz pop xor popf imul inc repnz and inc jmp push adc outsb jl bound or stos in xchg negl mov cmp inc ja in ror subb mov loop inc out imul sbb cmp test sbb inc inc mov popf andl lcall aad pushf js iret cmpsl dec mov loop cmpl andl jne mov jns clc imul arpl fwait and pusha data16 jns lea movl mov pop and xor jae in addr16 mov mov adc mov add (bad) sbb stos jl stos sub mov scas sub (bad) and repz xchg aaa ja push mov js imulb and bound dec add or mov inc popf lods (bad) es adc cs sbb loopne or sar out adc sahf mov test jo dec js ja repnz dec pop aad jno or pop mov push cld push loope imull jg pop xor jae fwait and push or sbb stos psrad adc sub out test out (bad) xor lea jo jle enter jne xchg psllw fisttpll or xor dec repz push in scas cmp sti adc pop push repz cmpsl mov mov outsl or out pusha push in lods imull outsl xchg and das push cmp mov stos push adc jno shlb ffreep movsl lods fs arpl adcl push outsl push iret push lds push test iret out cmp cmpsl mov in add adc jo xor xor daa nop mov ret repnz xchg and in mov arpl outsl push cmc dec lret jno xor xchg addr16 xchg fldenv lret mov sub nop sbb movsl pop adc xchg testl dec sub orb iret ds aam mov test outsb jl or hlt xor rol dec imul cmpsb jo mov movsl mov cmp shll mov mull adc mov adc repnz adc jecxz mov pop sub jg mov adc repz outsl (bad) mov (bad) jmp les xchg mov hlt mov scas adc sbb add aaa pop pop mov (bad) adc test out sbb movsl and movsb lods outsb rorb fld pop jge push mov (bad) push mov cmpsl adc xchg inc mov xor sbb add lock add aam jae xlat add test adc jge and cmp push sti sub sub and or xor push mov cli mov push cmp pop adc dec or mov inc mov xlat or sub loop cs cmp pop lcall fwait cld aam sbb jecxz out inc and xor jno xchg pushf xor mov loopne imul xchg fdivp dec out pop mov and aas rcrb and mov and dec bound in add es jb and fimul stc mov and add clc xchg pop mov sahf xor xor jmp out mov clc arpl test mov clc ss xchg push (bad) mov fidivrl xchg sub sbb push cld adc inc and cld and jno test mov push daa push sub data16 push mov (bad) shr push or loop fwait or into push xor outsl arpl sub sub xor jmp jae push repz outsb (bad) pushf (bad) mov (bad) outsb add and jae (bad) mov cmp fldcw sub hlt (bad) insl xor mov sbb jmp sub outsl decl inc not dec dec inc fisttp shll xor lret jnp mov lods push cli jmp jo rorl adc fsubr aam lret nop bound xchg jmp mov dec repz ljmp hlt xor add xor jl sarb popa mov pop jmp gs add fldenv cmp (bad) popf hlt cmpsb add cmp pop cs loope jp push lea push jl cld jge sub cmc sub push in mov ja push pusha lods mov and xchg gs lds and pop xor (bad) cmp xor xchg mov xchg and in mov add pop jp repz jne jl jae cmp (bad) xor test cmpsl out aas mov adc popa in stos xorl add fidiv out and (bad) sub mov sub lahf xor mov out cmp imul jbe sarb cmp and sahf push or nop mov or jbe mov jge jne mov mov aaa xor xor xor xor push (bad) negl jmp icebp je je cmp bnd add push bound sbb lcall xor movsb sarb inc movsb imul dec dec insb xchg sahf sub adc in out je mov cmp int3 popa mov xor mov pusha jb xor ja popa mov (bad) xor fucomip inc out hlt sbb and mov ja xor jge je pop sbb jo cmp or dec imul (bad) push pop fs (bad) addr16 and xor cli jno popa pusha dec movsl push hlt out adc std fs (bad) test sar mov sbb jno cmp mov jge cmpb loopne xor lds add aaa and mov mov (bad) fisttp mov (bad) and xor cmpsl mov imul mov push (bad) pop xor cmp xor (bad) mov mov movsl (bad) push movsb and mov mov mov and lret or xor mov outsl out jns dec rcl cld fdivs imul mov out addb lods jl fbstp mov mov (bad) xor xor hlt push xchg dec mov adc xchg sub and ret imul mov sbb jp and add lods cld imul fsubr push push adc std (bad) loope xor or sub (bad) xor jecxz or mov pop fldenv stos pop (bad) cltd roll mov xchg inc or or in insl mov mov add jecxz and and xor xor cmpsl xor mov addr16 cli (bad) xor mov scas xchg xor mov adc push mov movsb aam gs inc push mov pop in push push jae les popf push mov mov fcomip mov sbb cld hlt cmp dec in push xor and mov fs out lret hlt or lods xchg mov and in int3 pop lahf test xchg xor fistp sbb pusha xor sahf pop mov mov add sub xchg clc add hlt divb sub movsb repz push (bad) pop ja call aaa jno xchg mov mov xor aaa fs or xchg dec and js push jae sti lods insb (bad) cmp popa push add test dec mov or xor nop les in daa mov jno fisubr leave das mov lods adc xchg lods and and and mull xchg div lahf sbb and push movsb hlt xor jge test mov mulb mov mulb mov jbe xor sbb xor pop repz mov pusha enter jp into xor mov push repnz xor mov imul pop sub aaa sub sub aas mov out push je popf and xchg pop aad inc (bad) adc xor aad sahf mov notl fistl and jmp cs ja mov popa into cmc jmp aas cmp sub xor test jp push shlb jb movsb mov xor jecxz adc sub fwait pop sub mov int3 popf xor outsb xor cld mov mov out repz mov pusha mov lcall je call push and jl xchg sub jae aaa ljmp xlat jmp mov push sub sbb sbb jno rolb sub stos out push inc push (bad) mov adc or lods sub and repz in push icebp mov (bad) mov idivl decb xor sub lods sbb sub fisub xchg push fwait shlb sub loopne mov arpl cld aas int3 fmuls mov daa xor stc out aaa in cmpsb ss add dec dec adcl xchg adc in xchg int lock sub outsb add dec and push pusha push or mov cli dec (bad) cmc arpl out bound jl addr16 fsubs and cli pop sub (bad) xchg lcall (bad) in xchg cmp xor xor pop fidivl stos cmpsl jmp popa push and cmpsl repnz (bad) ret cmp jle and das outsb inc enter inc push testb push cmpsl and divl lea adc push imul adc mov lock mov loopne into sub mov test inc push cmp les cli cmp (bad) mov insb or pop pusha lock jb cli cmp int3 rorl (bad) mov out mov mov mov test jbe lret dec (bad) popf das loop in ljmp xchg repnz out movl mov fdivl cld das cli test jmp xor cwtl cs cmpsl pop sub rcl loop scas and sub stos hlt xor mov jo xchg fmull mov test ret xchg not mov jmp test adc xor (bad) lret sbb fwait inc mov mov in mov lds jg sar sbb and xor jmp aam and shlb (bad) mov in js jb pop das dec jge aam mov lods adc or xchg insl mov lcall inc push clc insb mov ja xchg iret cmp jb les jb pushl jns mov jnp push pusha cmp mov mov lock sarb xor aaa ja sbb fnstsw mov or dec cmp sub pop int3 add push mov (bad) data16 stos lock sub adc adc dec fsubl mov fwait mov ret xor loope movsl or sbb dec das lds cmp stos or imul pop push out clc xchg sub xchg (bad) movsl loop sahf mov popa mov (bad) cmc add sub lret movsb shr xchg xor jo cmpsl inc sbb loop call cmp repz test mov pop out mov orl lods sub mov pop cmp sbb sub jne es jnp and and shlb sti sub notl int in (bad) and lock or cli sub mov or sub dec mov gs xchg dec sbb mov nop fsubs or cmpsb mov or ficom aam inc addr16 xlat pop mov or and pusha iret std cmpsl shlb adc lcall rcrl sub test cmpsb nop mov jp (bad) ljmp dec in cmp mov rorb shlb inc push ror mov or fs out and (bad) mov xor add jl (bad) jmp shl pusha xor sub cli adc iret xor add xor lock imul jns push imul mov lock test scas aaa sbb test ss sbb adc pop jnp mov std mov xlat rorb fbld fucomip loopne ljmp push cli pop clc stos add push xor addl mov cmp adc adc push idivl cmp cmp mov test cmpsb cmp lcall test jno insb mov clc jle adc sar xor add jb cmp test cmc cmp repnz pop xor imul jae ss sbb (bad) (bad) xchg (bad) clc jb pop mov cmp mov outsb shrl mov test jns popf jmp xor adc loopne movsb in ret pop push pop add cmp stos sub test sub sbb dec xchg or pusha adc nop mov lret fcoml pushf es mov mov add push xor call adc mov xor push popa jne lret ret outsb add popf mov fwait push test adc out dec or sub out adc and mov pop mov int3 scas int ljmp aad xor mov mul and addr16 add jns (bad) (bad) inc push sub in mov and pop dec clc push movsl (bad) jmp ljmp imul mov hlt (bad) dec mov pushf bnd repnz pop call and push and gs sti mov mov fdivs cmpsl cwtl mov out (bad) mov xchg nop (bad) gs (bad) out lret sub hlt fwait hlt mov popf jno popf into ret xor cmp fbstp mov xor mov mov and mov jp dec mov iret loopne in test cltd nop mov pop jb xchg pushf mov test cmc adc pop je and xchg int3 jecxz pushf push xor push push xor (bad) mov sbb cmpsb outsb int3 pop movsb stc stos jecxz pop (bad) leave inc lret das add xchg dec adc pop das dec and dec sub or mov test jno and lret cmpsl pop repnz aaa and add and xor and in cmp inc into xor and je sarl pop stos movsl mov xor xor adc imul mov daa xor inc popl sbb adc je fdiv xchg out pop push cmpsb jbe shrb add push mov adc inc xorl stos stos sub dec js lret test mov (bad) in cwtl xor and sbb js sbb inc outsb push sbb xchg jecxz adc jnp sub ret lock jle sub rcll js xlat shrb mov push daa dec cs (bad) sub test sub dec aaa mov jne mov addr16 ficoml (bad) in stos push mov into push mov lds es and jl jne ret xor mov divl xor clc push xor lods or or arpl and mov mov cmc push jmp add xor (bad) aam inc xchg sub into sub imul mov xor fadds cltd sbb mov inc and test xor ss les je,pt pop aaa cli imull xchg or add mov sub add out dec xchg aad nop sub or test lcall outsb mov aas mov imul mov outsb out lret pop adc push push xor adc and mov jae nop and push inc mov sahf xchg loop mov and and js enter repnz fxam shrb ljmp lret pushf addl mov cmpsl adc push ljmp dec sub (bad) sub adc xor jno pop pop mov addr16 jb mov mov stos fldenv xchg lods or inc jb ret aam shl cmp ljmp jns push mov ret and cmpsb hlt xor out out sub lret mov (bad) paddusb jae xchg arpl push int3 and pop mov arpl lcall cld daa cmp cmp mov stos add ret cmp jae push xor iret int3 call sbb mov inc aas loopne pop pop xchg adc and mov scas out jg daa ret test or jno push stos gs pusha mov cld lcall movsl push dec mov mov jmp sbb test xor mov sub outsb int3 sub lea inc stos sbb pop lret inc jnp sub or movsl push mov pop mov dec iret iret sbb pop pop xchg dec fwait xor fdivl add and test int3 jg popf xor int push aaa lods mov pop sahf stos pop outsb xor push xchg or je mov addr16 out test push push lds push (bad) xchg roll add orl mov movsl stc subb int3 or out scas dec or nop dec jl lret ds cld in ljmp xor mov cs sbb inc mov pop lods fildll sub out decb rorb in in and mov stos (bad) loopne lcall popa or mov push inc sub dec mov jg fcoms push test stos jl ss (bad) sbb in push fidivrl sbb push imul (bad) adc repnz (bad) ss psubusb xchg mov push bound xor jle cli pop lahf mov xchg nop inc aam arpl and dec cli ds sbb sbb ds mov push les (bad) jge nop movsb inc or imul gs jno sub and and push in ss pcmpeqw cmp popa pop fucom adc cmp (bad) dec adc ljmp xor cli jo mov lea cli push pop (bad) jne (bad) ss xchg jmp or rcrb dec cmpsb mov mov rcrb clc pop cmp jns mov mov repz sub (bad) out dec das xchg insb movsl inc and das repnz enter int3 jle dec sub and daa imul cmpsb adc test cs pop mov adcl and addr16 in notl or mov mov mov je dec and in outsb pop aam adc xchg test and shrl push mov lahf and xor dec or mov into lock add sub (bad) dec loopne push mov sub and cmp out popa mov loope test pop bound shrl ds add inc out push add lcall add fldl push add jl daa je mov test push mov mov mov cli mov ljmp and andl addr16 lods in and or es pop lea outsb leave or lret add std in add xor sbbl cmpsl lret stos clc and and add pop stos add bound add ss dec outsb aad pusha dec leave xchg fmuls ss js inc xchg orl insb std jb push addr16 mov pop cmp dec imul cmpsb (bad) aaa fnsave inc (bad) mov inc sub movsl or test xchg imull inc les jp popa or test movsb inc sub divb aad test mov lods in cmp fsubl cmp leave lahf lds cld in popf pop lock leave addl add sub or test cmpsl daa xchg adc xchg dec sub (bad) jb (bad) pop aaa fnstsw outsb jge cmc inc add std or cmp cmc mov mov pusha and jp jp (bad) cmc dec mov icebp push add dec add adc fsqrt sub sbb mov push divb push add fmull inc imul push test sbb xlat jge push jp rorb sbb sbb das jno imul cmp aaa incb lods clc hlt or mov ss inc and fcomps and mov adc jne sub pop stos js pop mov and xor popa rcrb lock adc pushf sbb add push loopne lods and shlb xor pop negl add out jge or jmp nop xchg mov icebp pop rclb je cmpsl dec fimul lds loope dec lods std cmpsl loopne insb and jl xchg jns loop jnp xlat pop je jmp loopne sbb mov jnp jnp xchg mov out pop cmc scas cmpb fistp sub mov std ljmp xchg cmpsl xchg adc push jle sti jno (bad) hlt out arpl lods xchg (bad) ljmp jge nop ljmp loopne mov je sbb ds out cmpsl pop setns jae xchg sub ror je jo lea les cmp mov add popa jge jno int mov or shr pop mov pop ss jbe stc mov jae,pt cs fwait xor xchg stos aaa sub mov mov xchg rep cs jecxz stos stos sahf aam pop mov push aaa (bad) popa xor xor xor in lods adc jns mov push (bad) jno or repnz sub xor xor shlb jge dec mov jmp out jne aaa xor xchg xchg (bad) jae jno (bad) mov xor mov es rolb cli jg inc imull lock pusha std test sub sub xlat xlat mov jg mov sbb pop jno nop cltd push ja hlt addr16 xor jns mov in and mov lret lahf adc push aaa test xorb (bad) mov jle or and mov jmp jmp sub sahf push adcl loopne jg and shlb xlat cli (bad) mov adc test aaa pop sbb out fwait mov sub dec out mov push sub and sub sbb jmp loop xor hlt das gs repz clc pop mov cmc cmp push pushf sbb cmpsl cli das jg mov adc sbb or cmpsl notb inc xchg ja (bad) mov adc mov mov das xchg rorl ss and jno cmpsb fsts ret mov sub and in push (bad) lcall mov fmuls outsb sbb mov and pop mov enter loop je inc adc gs div sbb nop xchg vmwrite (bad) sub repz cmp mov enter and ja or rorb jmp mov cmpsb mov mov js cmp movsb jmp cli mov lcall mov or test (bad) mov (bad) mov sahf cmpsl stc mov (bad) xchg dec xor sbb push insb movsb subl notl in push sub clc ret aas test pop push stos lods dec sub jns rcr push icebp dec add (bad) or dec add add pop sub (bad) push adc and insl and data16 push or data16 jl jb pop hlt sub or jle incb inc jecxz mov xchg loop mov movsl sub mov mov in jbe (bad) mov sub mov out nop and adc out cmp jecxz fwait rcll dec push test adc out cmpsl add adc scas mov add aas mov adc or rorl movsb (bad) adc jns dec lods mov in adc mov inc add loop movsl jo dec stc and shrl bnd (bad) scas lcall and ds add push inc nop inc dec repnz sarl popf fbstp subl loope movhps fild ret pop mov add and (bad) aas inc jbe (bad) cmp loopne bnd inc outsb pop mov add cmp lret out jge adc fisttpl cmpsl xorb mov insb lret sbb or nop bswap xor fwait in (bad) repnz inc shrl sbb push sbb repz and or jl and outsl or xor in xlat rorb xor aam xor aam xor pop push frstor repnz add jno lea jb pop dec mov fincstp je inc mov ja lret lock xchg mov and decb sbb cmp mov adc (bad) mov and xchg mov pop mov jne mov repz in add and mov adc repnz xchg jae mov jb and stos dec add shll adc icebp mov mov daa xor movsb jge mov mov bound ss jle sbb jo mov hlt xor lea fs js lock xor push sub and jae jecxz mov pop sbb (bad) hlt subb jle repnz fwait gs lods mov adc aaa fiaddl aam xor loop mov xor (bad) popf and sub or aad out jg incl mov push jne xchg test cmp icebp (bad) repnz scas idivl lods cmp aaa sarb xchg dec std enter xor push mov and pop dec pop push xchg mov jg push loopne xchg icebp shll or adc (bad) sbb mov jg pop or push push xor imul push test push jecxz cmpsl ds sbb into xchg out sub xor jle and (bad) insb add icebp shlb repnz mov ds popf leave jae mov adc data16 mov xchg and sbb jb mov iret out push mov fwait jg aaa lret std mov aas xchg ljmp leave mov xchg or shl lea stos aad dec and stos data16 xor mov sahf sbb addr16 add ljmp xchg lock cmp adc addl dec lock push repnz sub ljmp pop mov (bad) sbb sub mov mov and dec sbb inc rclb stc cmpsb ja das xchg adc popa push mov xor push ret jge mov repz xor rcrl mov (bad) cli or negb gs cli mov xor fnop mov xor push inc dec mov out imul or aas mov adc xor movsl xor adc dec jo cmpsl popa cmp add jl jl cmp mov jae and push sub cmp jecxz stos stos daa daa mov or mov mov (bad) xor sbb int3 es sub in insb out xchg insl or clc xor ret push or adc xchg add repz and ljmp aam scas jecxz push shl (bad) repz or jge fdivs mov je mov mov in mov ret inc cli mov lea jg inc mov dec push and (bad) sub leave nop push add daa mov loope jmp test or pop jb mov movsl mov int iret push imul jmp inc mov popf and aam aam shlb adc push and popa and and cmp ja aas repnz es mov mov daa sbb stc dec jne test les pushf ss adc mov mov xor pushf sbb adc mov xor icebp adc mov (bad) cld push mov in outsb fs mov cli jecxz sub mov adc push jne dec (bad) cli out mov lods mov dec addr16 loope or adc adc addr16 cld (bad) mov out mov inc adc bound (bad) fidivl add mov out mov daa rclb push xchg stos mov test pusha out in adc push mov jecxz dec mov addr16 aaa xchg jbe and xor inc cli js dec dec lods adc inc std and es inc cmp mov push add sub cli pop add xor ja mov jae (bad) mov out push xor inc sbb (bad) lods mov xor arpl adc push pushf sub mov push inc (bad) aam je jb mov push or mov cmp jle mov cmp ret push andl dec xor imul clc and and rcll repnz cmpl cmp stos ss push inc pop bound stc test lods and rorb xor mov push add adc imul cvtdq2ps push add lret idiv out mov les add into adcl cli cmp (bad) sbb xor pop aaa stos mov mov lret popf imul push scas scas adc pop rcl jb icebp pushf push fstl fwait repnz cmp gs stos aam and jns daa scas mov test mov lret sbb jp mov shr fwait mov mov aam cli or sbb mov daa push ljmp shrb stos mov andb ja xor lret push daa mov daa das dec std and bound out movsb cmpsl shlb cld dec sub addr16 js (bad) cli fcoms les orl xchg adc test sbb cli das and aad aam sbb xor cmpsl dec sbb jb adc clc repz pusha sbb xor mov aam out jge pop int stc or and fildll outsb cmp dec sbb xor mov insl mov jo adc js push aaa cmpsl mov push mov stos aaa in jae add mov pop lret lods xor mov push pushf stc push addr16 mov shrl cli jns push mov jno sub mov and stos movsl incb xchg scas mov inc push push loopne (bad) xor dec in sub (bad) loop sbb sub mov sbb rcrl (bad) and cs or aaa les jne (bad) xor and das ret jmp sub lock sub xor sbb or and pop rclb jne imul shl adc cld in xchg loopne xor mov movsb in jno out imul loop sub fbld cli inc icebp dec fcoml add test dec adc jmp or movsl sarb mov inc or push pop mov ja or (bad) sub mov nop sbb mov cmp das lds cmp ljmp faddl mov pop loopne dec fbstp and xor test inc mov jge movsb pop sub inc push inc inc fwait fs aaa imul jae jb lods es repz xor and mov mov adcl cwtl push jmp inc xor ret push ficoml cmp (bad) push adc push cmpw mov movsb push cmpsb dec fidivl and mov imul push scas mov xchg pop test pusha adc iret mov or dec jge jge xchg or cli movsb mov fucom outsb test je jne push push cmp xor in test xlat sub in jecxz mov and xor stos andl outsb out cmpsb ret pop icebp push xor push adc dec pop hlt sbb arpl imul mov sbb enter repnz ljmp fnstenv data16 and aad stos sub test push add loope add ss xchg fild mov or jle jno decb lock adc and jg sub lcall (bad) (bad) jl and sbb aam (bad) push mov sbb jb sub movsl fstl test jmp adc xor lcall mov movsl xchg pop xchg loop (bad) adc jecxz jbe fildll xor sub xor and mov pop mov mov jle mov add (bad) mov xor cli call pop fcmovb out and or out sub leave and stos ret sarb mov std xor inc bswap jae adc pushl mov adc adc pusha cmpsl (bad) sbb movsb in std hlt push insb push in adc pop test movl fnstenv leave mov popf dec adc mov sub jns arpl loope adc or mov popf jmp gs cli sbb mov mov dec dec movsb dec cli add cmp fistpll add pusha mov lea call adc xor adc adc outsl cmp stos xor andl adc push sbb xchg push sbb push rcl pop push lea out popa mov sub push lret pop mov sbb jg gs pop fs lock rcrl sub cmc es mov pusha and push mov addl mov inc push fdivr and mov adc pop fisubrl add mov mov mov inc ficomp xlat es xor lcall sbb cmp js scas movsb sub xor adc icebp lods or xor inc adc cmp addr16 lods push (bad) fcmovb fwait mov pusha (bad) dec call fstps add mov jmp aam xchg adc push andl cmpsl push lea mov add adc sub push xor rcrl shlb in sbb mov or fisub movsb rsm call add ljmp ja cmp adc movsb or cmpsl add fstpt cmp out imul popf jg js sub push or aaa out sub mov mov in in jl xor mov xchg sub mov xchg fisubl lea lret inc mov out sti mov pop aaa cli popf ret adc push mov popa jns mov popf xor movsl ss repz dec stos jb and and in outsb leave xchg sbb cmp insb sub cmp cwtl fistpll push xor imul dec pop repnz mov xlat mov (bad) ficomp xor cltd scas dec fwait adc cmpsl test cs lahf repz shll fidivr mov outsb gs mov sbb and xchg and enter jecxz mov out out dec xor test xor insb adc inc sub jns out sub mov xor cmpsl or sub iret jmp movsb lret stos test stc movsl aad pop pop or push ja in mov aad sub and imul je imulb dec xchg outsb sub in jl push es xor add out in push nop mov fucomip subb add and je add mov inc jmp pop add call cli inc in aad mov test pop fistl enter mov test inc adc add xor rdmsr inc mov adc xor mov sbb stc xchg push mov mov mov xor add adc xor jb mov std jbe sub cs seta pop fildll inc fsubs adc fiadd mov rclb cmc sbb lods outsb loopne sbb cmp arpl inc out fbstp cmpsl sbb xor sar scas push pop mov add (bad) hlt or mov scas es pop mov out repnz mov imul sbb and mov pop inc int3 pop aas sub jno pop inc and fs jecxz cmpsb push incl push xchg push lods jb lods adc rorl mov jle (bad) mov call repnz jp imul xchg xchg jae adc xchg lds mov mov iret jg sbb xchg cmpsl ljmp jecxz pushf pusha cmpsl adc out inc mov mov xchg std popa xchg xchg inc and sbb lods loopne add add jmp sub inc imul and fstpt jnp sbb (bad) lods xor (bad) imul jle push pop mov sbb and pop xlat or popa mov or jl and xchg mov push shrl lds (bad) fistp push jecxz add icebp mov insb cwtl mov out push iret (bad) repz lds cwtl (bad) xchg stc inc cmp mov bound das inc lds adc pop mov xor scas xor movsl (bad) sub cmovo sub jmp jb testl push jns add movsl ficompl out xlat add xor adc sbbl test rorb gs mov and imull roll repnz jl mov in lods cmc orb cli (bad) dec cmp test loop mov repz push dec insl nop dec shrb lods sbb icebp bound cmp pop jl xor mov aas lcall (bad) push and sbb push movsl xor popf stos inc pop dec mov gs cmpsb (bad) (bad) rorl rclb adc and lret or decl jmp push cli cmp inc bound mov inc cmpsl (bad) (bad) repnz scas dec bound mov pop mov inc aaa les xor gs xor movsl inc in mov dec xor out xchg adc ds jecxz repz jae pop jge imul and xor add lds jns cmpsl ret sub (bad) or mov lahf hlt and ss arpl insb mov jae xor repnz mov jb xor int sbb mov cmp nop mov (bad) mov mov jae jle push clc stos cmp push sbb mov cmp jle mov jb sbb scas gs ret fdivr sub mov (bad) mov xchg push daa or mov loopne (bad) addr16 insl mov das sbb xchg cli bound and jb cli push mov outsb jae hlt sbb and les jge xlat dec ds or mov mov sub les test addr16 inc or bnd (bad) fisub inc (bad) jne out in fbstp jmp mov mov repz dec mov adc nop aaa int imul pop movsl add and mov movzwl lods jb shlb xor ds sti pusha rcrb jecxz cmp pop jmp outsl or addr16 sub popa sub arpl mov mov je inc mov cmp imul jl lods sub mov mov jbe push adc xchg and test xor icebp data16 lcall xor xor xor lods mov das cmp sub push addl sub xor and xchg cltd pop inc pop push nop push adc jne andl fistpll mov icebp xor pop mov inc jle pusha sub fcmove sub lcall push adc rclb and sub and xorl cli lock cwtl (bad) mov stc aaa outsl fnsave lods jl push or jnp inc adc sub mov xor js lock clc rcrl nop sub xor pop xor sub cs adc mov jbe dec sbb and adc scas jo push aam jle rorb xor popf mov sub out jle fidivl sub push sbb inc and popf mov xor ljmp lahf push in rcl ret mov (bad) jnp stos ror mov sti stos xchg aas pop scas fidiv movsb push test cmpsb mov and stos rcrl negb sub arpl aaa popl sub clc loope pop adc xor and mov aam cmp pop mov lahf repz xchg add sbbl (bad) xor (bad) sarb cli and repz fs mov cli loop test les test add and add xor int3 add lock or int imul jecxz fbstp adc test popa mov jmp sbb jae ljmp adc sub adc xor dec shr jge leave mov sbb test mov pop sub jmp cmc dec (bad) movsl push sar in pop xchg out adc sbb push aaa xor sbb stos (bad) loopne repnz push lods add ljmp lea insb (bad) pop pop cmp inc shrb adc jge fbstp lods or dec (bad) loop test enter add mov outsl gs xchg and mov sub push add cmpsl sbb ja das lods in sub mov cmp jns shll and aas call and je,pn pop out sub arpl and push mov or nop jl push icebp sub movsb cwtl or mov sbb cld mov adc cmc xchg mov and call and pop jge sbb dec test mov stc jae popa sbb sub cltd xor mov enter pop (bad) xchg jle jmp lahf mov xchg mov mov jecxz je mov mov cmp mov adc dec cmc subb mov xchg mov sbb sub lahf xor pop or sub add repnz jbe lods jne (bad) jle dec add imul xor out cmp push in sub jecxz repnz push stos push repz inc mov aaa pushf jae xorl mov xor outsb sbbl xchg mov popf mov stc sbb cmp dec (bad) push mov inc inc jecxz and sub arpl adc lret push and cmpsb dec and cli pop or in push and sub aad mov sub loop cmp (bad) (bad) negb sarl push inc imul add rcll ljmp gs sub inc xor cwtl cs (bad) cmpsl add test sbb xor das jp push in add cmc cwtl xor jmp xor mov in lods (bad) je or test adc pop lret or popa xor xor fst aad lcall and sbb adc pushf shrb les jae sub push repnz jg or inc cli add lcall jp hlt jne jne xor cli mov dec outsb sbb (bad) and xchg xchg and inc cld push mov inc jne or push pop or add popf icebp xchg mov loopne in js cmp cmp pop repnz cli jecxz iret xchg fstps jbe out outsl push mov sub sub outsb jo jno push bound xchg sub xor xchg xchg pop adc dec bnd in ljmp mov subl adc lret int outsb (bad) jbe and stc and pusha clc cwtl mov mov mov daa xor pop cmc cmp jne pop pop sbb mov sub cmp test and test mov (bad) (bad) cmpsb test sub (bad) ljmp cmpsl mov popa repz adc xchg mov enter mov (bad) and cmp dec and and loopne add sub scas sub lods loope pop sti cld (bad) xchg xor xchg sub dec and inc mov rcll test mov or dec in (bad) mov insb cli int3 std mov jo xor sbb push sub negb sbb insb adc pusha dec movups lock (bad) fistpl add jle pop jne insb test and call lcall aaa rolb pop imul inc jecxz mov push dec out clc mov or or insb arpl push xchg fs pop add pop xchg scas push (bad) (bad) push lods sub add adc xchg rolb mov adc cmp insl xor mov adc rcl (bad) rolb je inc neg (bad) mov cmp dec aaa xchg mov and outsl adc and cmp out loopne mov daa es mov (bad) jmp cld pop pop pusha push mov mov push movsl push insb or ret insb stc sub cmp mov inc and in test mov jmp cmp xchg ss test mov mov inc mov hlt in lahf xor cmp xor int3 xchg xchg sbb shr in adc scas lods sub int3 mov mov mov ljmp movsb xchg loopne xor adc mov sbb xchg sbb loopne mov jle and neg sub fwait out std das shlb mov mov and test pop xor cmc or in xorl mov lock repz xor data16 mov adc insb and mov insb (bad) movsb das sbb (bad) out lods dec pop out dec mov cmpsl sbb dec int cmp es hlt lahf cmpsl sbb pop pop and popf xchg stc cmpsb repz jp data16 xor out xchg movsb sbb xchg add adc lret mov iret pop xchg ret pop sbb mov push lahf jg sub pop push loop dec cmp add push cmpsl int3 cli xchg test repz lock sub rcll daa mov mov push or shlb mov lock add adc sub in sbb repz or mov adcb jecxz push jb sub jle sub lcall out outsb xor shr in jnp mov pop cmp mov bound and inc imul in fistp sub mov cmpsl sbb fisttpll pop jno rcrb jl std xor sbb lock fidivr xchg inc push adc add clc pop rclb and (bad) xor add add (bad) xor xor sbb xor stc add jbe decb push mov (bad) xchg mov test lock fisubl (bad) arpl sub and sub add dec les imul xchg sub sbb xor js pop popa sub cmpsl cli das sbb gs shlb std bound in cwtl jmp xor je daa sub add std mov or adc sub aas xor lahf aaa nop adc cmpsl pusha or enter xchg jmp or shlb jb push sub int (bad) loop lock lcall mov clc xor jae sub fucomi or xlat xchg mov mov sbb je call adc and xor fs mov movsb jb nop adc jo cwtl inc mov cmc jl mov bnd add (bad) dec pop adc mov (bad) cli out inc nop push mov leave and fldcw bound add jmp les (bad) arpl inc sbb pop movsb jecxz jp mov sub mov add arpl mov pop mov shll push or insb mov xor hlt outsb add xor sub pop push add mov cwtl sbb cmpsl imulb sub jecxz fucomip xchg jbe add repnz and mov add loop sbb call mov sbbl fidivl pop jb bound add test aas and lods sbb jbe jecxz cmc xchg lods and sbb push rol les repz stos add adc div addr16 lods xor test (bad) stc daa aad mov and repnz mov lds aaa sub in hlt xor lock xchg push or aam cltd jl notb in xchg mov repz mov jmp insl adc pusha jne je and icebp sub arpl gs pop icebp pushl ljmp fbstp pushf sbb in fwait jo xor sub aad xchg pmulhuw push les out (bad) xor scas mov inc lahf push cld sar cmp clc js pop cmp loope jp lret sub mov cmpsl xor rcrl jns sbb xlat fsubl fs pop xchg out sti mov sub shll inc sbb inc and push ror xor insb xor lods sub xor jp adc jl and rcll mov stos pop push jno pop jo loope or jns mov les (bad) sub sahf push xor push xor and or push xor rolb out lds xor mov or scas sub aam sub bound add push outsl mov ret jne add (bad) je in xchg jnp (bad) imulb or mov dec push call andl mov sub hlt xor lret insb xor call mov divb jae push test xor mov nop hlt clc xchg cmp arpl std (bad) fsubs in push sub in repz mov loop pop cwtl js imul dec push jle mov sahf sub dec ret out mov dec lcall sub dec and in xor mov cli push aaa push jb sub adc cwtl ss hlt sub add cmp call and adc cmp lock pop dec dec (bad) cmp fstpl dec (bad) and nop and sub mov or aaa (bad) push in inc enter sbb hlt cmpsb addr16 and adcl roll setb or push lods xchg push rorb scas mov inc subl push aaa pop jge repz cmp cmp aas add sub (bad) pushl outsb push sbb inc lret hlt incl xor lods aaa dec mov scas dec push aaa shlb xlat icebp es pop dec arpl dec mov jle ss fwait mov pushf add add adc fdivrl push xchg popa mov mov push mov and push ljmp lret dec pop mov mov fildl in movsb mov ljmp aas jae ds cmp and pop fildl dec jae daa pusha nop out scas std aaa push in and cltd inc adc cmp or xchg mov mov or loope mov js in loopne xchg mov mov les add es out in je jae cmpsl pop xchg pop ja insb add sub mov iret fwait lds mov mov out cli sub pusha jbe arpl or adc or jg mov jge add dec arpl adc outsb hlt xor stc xor hlt cmc jns mov mov pushl sub movsb add pop push inc js add mov pop sbb xor jnp jle movsl ret mov jnp sbb lcall jmp cmpsl lock aaa pop mov push scas and push sbb add pop dec inc jb mov imul and jmp shlb sub xor test ss insl mov jns add and adc xchg xchg dec lcall in lods xor jae shl ret push dec dec jb or and pop jno pop lock dec xor imul out xchg ds lret add pop popa cmpsb addr16 cmp lea (bad) loop mov sub jbe mov (bad) hlt ret xor aas mov movsb cmp pop ss sub int3 ja out and (bad) hlt pushf inc shlb pop pop out pop mov add xor jecxz cmp ja inc cld or bnd (bad) pop cs shlb (bad) jmp push int3 movsb pusha pop nop xor icebp mov jp adc insl in push xor int and loop xor insb mov or xor pushf push cld fdivr in dec sub scas in jb hlt add and sub mov adc adc and mov adc idivb xchg faddp cmpsl incb jp clc jl je sbb jns enter sub movb je cmp fidivl movsb mov in out inc pusha std in xor in imul lods jb enter push push ljmp xor repz push test (bad) mov mov rorb dec push sub or outsb xchg and xchg xchg xor sbb mov sub xor mov dec dec add enter sbb inc mov jl push sub call (bad) (bad) in fs jb xlat pop mov add int3 xchg repnz movsb (bad) repnz fwait test and int cmp jno cmp mov xor push rcll push adc test mov and lods jmp (bad) sub push (bad) lret mov push repz out loope xor dec leave mov and fmuls adc js stos nop sub cmp jae lahf pop cmp and icebp lret pop mov icebp push sub cmp mov sub pushf repnz sub in insl adc hlt xor push aas xor mov lods or xor lock cmp add imul pop in xchg sub push or jl dec mov mov mov loop and cmp mov sbb cmpsb movsb mov jno ja push (bad) sub lcall mov push add imul cwtl mov sub ss xlat sub inc jns sbb xchg xchg xor jno dec cmpsb push pop jmp xor out mov cmp mov aad xorl pop out sbb inc int loop imul popl daa (bad) jno or shrb hlt (bad) adc hlt xor sbb fcmovne test push jmp not bound xor sbb push inc pop data16 ret subl mov (bad) jecxz pop test loop jns pop inc insl (bad) adc push in sahf js mov ljmp mov push cmp je mov jle push xor inc or jne in fistpll or xchg clc adc fistpll pop cmp jbe fs mov hlt push gs jg dec outsb jp dec loopne out lods mov shrb jle and ja xorb aam xor cwtl repnz mov lock sbb sbb jmp js ja ret fcmovnbe sub shll out je je shlb jo mov mov jno hlt in xchg insl leave sub mov mov in lds es sub (bad) outsl data16 mov lretw push sub movsl sti cs ss mov lods push sub add (bad) jo xor sub cs jp pop dec (bad) xor adc pop xor pop sub (bad) enter cmp ljmp loop aas jne,pn sbb inc outsb cli sbb popa ss mov jmp xor in int bound inc popf fsubrs sub and add bound fs int3 mov push pop jno or pushf sbb cli jne leave xchg fiaddl add adc cmp shll sub shr cmp lcall std out scas add cmpsb aaa inc repz insl or and push and cmp pusha aam clc xchg fwait mov jmp inc push lea adc xor cld cli sub xchg paddw add dec stos iret mov inc nop add mov ret std dec cs cmp mov ds pop dec repnz jno cmp aaa rclb lcall mov xlat xchg test push fcomip and std jae jle jmp xor sbb jmp adc xchg outsb in and sbb lret mov adc out aaa and (bad) cld xor push aas sbb fistl or or jae mov dec es ljmp jl out cmp mov in sbb cmpsb cwtl mov sti adc rorl cmp stos push fimul xchg xor fadds xor jl test dec add movsb dec dec out lret shlb sbb imul jb mov outsb stos ljmp movsl bound xor (bad) les adc cmc add mul inc outsb xor icebp nop mov fsincos cli adc mov lea push lock adc jp call mov lea in fcomps push and jne popa mov lea incl loop xchg mov or stc sub xor andl hlt xchg jle repnz inc adc xor jo,pn std xor rolb lods cmp out pop and sbb outsl arpl push mov sub mov dec test and (bad) es xchg xchg es bound cmp sti mov in sbb or or or or mov push adc call mov push inc cmp sbb pop sbb js fstl imul (bad) jae or out adc shl pop mov xlat imul dec xor adc bound jno mov cmp pop mov add clc lea jno or jns (bad) jns mov lock inc jl dec adc subl push int3 and jnp icebp in cmp (bad) xor jnp jno push adc jne mov daa mov push xchg aaa aaa rclb cs push cld insb sbb sti mov or mov stc out push cmp xlat (bad) xor mov push cli leave inc das rorl dec mov in mov mov add shrl das aas inc xlat xchg (bad) sub push daa lret cltd mov lahf jmp sub jno push mov xchg xchg sub adc cmpb xchg imul dec lods fildl bnd mov in scas (bad) adc sub out cmp lea (bad) fsts (bad) mov and jnp or (bad) cmp xchg fidiv out lea ret inc adc inc call ljmp push test je jne (bad) pop daa in jo mov xor ret pop je add pop push cwtl mov push adc jle gs push and cli ret mov ljmp mov cmp jbe jmp and mov or ljmp addl arpl inc loop (bad) mov and lds les dec clc (bad) xor adc rcl (bad) or es lret std jb out push mov call stos inc adc pop xor (bad) xor or xor cwtl jae xor jne cmp (bad) cmpsb mov idivl adc sbb cmp push cmp gs test xor add xor sub xchg fs jl ret pop xor jmp pop mov (bad) in shr js xchg mov test cli stos arpl loop cld rol sbb rolb push push (bad) (bad) loopne push jl psubsb mov adc sub imul mov sub lret insb repnz dec push std (bad) lret add inc mov stos sub mov xor test rcr push mov movsb mov sbb pop inc dec into cvtsi2ss push pmulhw scas xor push imul repnz fs bound lcall js or sub jne fdivr and fwait pop dec and sbb pushf jo loopne inc (bad) jecxz sub dec jle sbb push push add inc fs cld fimull ja ss adc xor push pusha dec incb mov sbbl rorl (bad) and sub adc mov loopne sbb xor clc mov out mov cmpb and (bad) data16 das cli or aam stos pop jae fneni(8087 jbe mov jp mov dec loopnew push mov mov enter in sub hlt repz mov sbb sub cmc lds scas pusha mov and sbb call xor fildll imul add imul lock push aam lcall jae arpl inc jo sub sbb outsb cmp sub lds pop leave and repnz push xor rdpmc xchg sbb repnz push or das in push dec pop out sub push adc inc lea mov je cmp outsb cli (bad) add and (bad) cmc sbb push mov fldt xor mov in aas sbb data16 (bad) xchg adc imul xor add mov sbb cmc xor or sub sub sbb and out or icebp loop mov into mov sbb jg sub loop mov jbe mov in stos shlb sub test fildl xlat or pop sub add imul sub or and sbb and sbb test jbe adc push jno xor xor dec fwait xor fcomip xchg adc and mov adc push sbbl xor fbstp xor add aas mov adc es inc lcall movsl rorb int icebp movsb cmpsl xor cmpsl or ret movsb mov xor (bad) lret (bad) jo jmp ljmp iret (bad) das (bad) imulb xlat sub mov inc jg dec cmp sub xor test mulb and and and push aaa in adc (bad) xchg rcll jp inc das or cmp shll mov in push clc adc or jl mov lods lods or dec jb xor outsb sbbl add mov cmp in outsb inc cmp sbb jmp nop cs je pop dec inc sub adc loop fdivl xor je sub lods adc out sbb cmp mov fnsave call call inc or stc call push mov stos adc fbstp sub xor scas mov sbb sub xor push pop lea jge pop rcrb push dec (bad) lret jo jg and or jno push loope mov sti jmp aas pusha mov xor outsb inc xor jle aaa mov mov or or pop fnstenv lds fisttp cmp mov push jns mov pop pop shr mov xchg xor cmpsl add mov add scas imul fbstp je mov mov imul sahf cmp cmpsl xlat mov push les lock cmp xor jb mov inc and xchg cli cs cmp dec xchg rolb mov data16 adc cmp out push inc push rcll xor pop dec bound test xchg pop loop loop inc imul xchg in push xchg xchg push shll adc sub aam cli cmp or sbb (bad) push lea or dec and shl fcmovne pop mov mov cmp inc negl jb xor mov xchg ret loope mov push ficoml inc xchg and clc lods aaa cli sarb mov pop repnz cmp fnstsw mov add jb sti fwait stos and xor hlt lahf lret xchg mov cli addr16 add push hlt xchg notb repz in jo inc and xor cmp adc xchg adc xchg adc bnd (bad) xor mov repz adc mov testl dec cmp sbb xor cli (bad) lea pop xor clc pop andb adc mov lret sub ds xchg jno inc xchg mov cmp pop lds push mov jae cwtl mov inc (bad) je int add mov mov inc adc xchg enter push add add (bad) mov adc enter insl movsb outsb jmp fnstsw xchg mov pop push cmpsb outsl imul hlt aaa imull mov mov jns int3 div stos cmp jge cmc unpcklps jo loopne stos cli sarl or cmc mov fdivrs mov push aas add mov jno pop jge inc jp push pop vmread cltd mov mov xor sahf xor push dec mov or (bad) mov or jmp jbe and je nop jge add fwait mov int3 (bad) inc adc or (bad) imul fisttpll imul movsb sub test or xchg in xchg mov repnz mov jmp sbb enter sub loop push aam jns and mov or mov cmp mov adc inc cmp mov mov inc push in adc leave sub sbb jmp fisttpl inc sbb mov xor dec xchg push pusha dec pop arpl insb inc jmp cmp adc rorb xor pusha mov or dec aaa inc jge (bad) lret push cmp bound (bad) lahf cmp bndstx shr xor pop (bad) sub jle out ja add mov xor or cmpsl je jecxz mov mov and pop and js mov fistpll test sbb cmp bnd ds (bad) jle fdivrl idivl hlt or jge xor loop xlat or ss jbe add xor sbb mov xchg cmp mov lahf xchg inc ret sti sahf lods mov int3 mov xor sbb mov push pusha sub aaa nop mov adc jecxz std cli inc xlat mov adc aaa push pop push and pminub mov std inc stc sub push and (bad) adc ds pop das insb loop sbb and cmc xor je or cmp out icebp xlat movsb mov mov sbb lcall sub mov popf sbb cmpl xor ret and or (bad) sbb test cs push sub adc xor mov xor push fidiv mov aaa xchg mov ljmp add fdivrp shll std popf adc push xchg xlat mov test daa outsb shlb push dec push std arpl push mov sub xlat clc sub pop addr16 aaa loop rcll hlt in dec aas mov and push fs mov (bad) cld pushf aas ret (bad) mov scas cmp jne and jmp data16 inc adc add (bad) mov popa cmpsb jecxz lock sahf inc sub cmpsl pop lds lods push loopne test mov jae sub xor add movsl in loopne mov and xchg (bad) ljmp mov fnstcw jae jle repz fild sbb dec and (bad) push cs not (bad) jge jmp sbb or add shrl mov and xor jecxz loop xchg call adc hlt cltd sbb enter stos jecxz mov or test scas cli sarb lock adc cld pop nop ljmp inc inc pusha pop push jecxz adc push je or shll into xchg test pop xchg rclb pop mov das inc adc xchg adc xchg pop out pop sti pusha xchg ret cli pop and loopne (bad) mov cltd test and push adc lret xchg pop out xchg pop (bad) (bad) xor mov lret fs fs xor or imul xchg and in out sahf jmp jl hlt push pop inc movsl ljmp dec cmpl add sbb stos and xadd push jmp adc mov jbe int or imul xchg sub sbb cmp and jo test push xor scas mov lea (bad) mov in into mov sbb xchg adc popf cmpsl pop dec mov mov popa imul add push insb cmp push sub js test push pop dec and push ss int3 jo andb loopne and and mov loope lock rcl xchg and dec jne xchg aad adc adc bound xor das pusha je or mov aam (bad) cmp and cmp dec sbb adc (bad) mov in mov mov xchg out mov xor nop js popa jecxz cmp (bad) cmp jb cs xor mov das out sub iret and push (bad) jmp sti fsts insl lods insb sbb jmp and das mov nop leave outsb add jo inc std mov and xchg and subl or mov sbb inc or add add and stc push xchg mov or or pop xchg cmpsl pop cld lcall xchg outsl in cmpsb pusha and scas adc lret das in mov in push repnz loopne mov shlb mov push pop out ss rol jne pop cs sub xor (bad) mov or mov fldl cmp repnz nop movl or fistp jns je outsb andl push jecxz mov mov cltd repnz jle outsl push jp sbb pop sub dec sbb (bad) xor lea sub pop subb inc adc adc daa mov es xor jg xor ljmp sbb stos xchg in ret mov jo cmp inc fistpll adc ret rorb jge out fnstsw mov sub repnz int3 inc (bad) nop sbb add xchg inc and xor push jge add fisubrl jg mov mov push mov jbe outsl movsl aas xor std scas ja emms mov repnz cli dec push mov in push insb pop add xor (bad) mov inc sub je shrl fimull add push jmp mov cmpsl cmp aam lcall into or fdivl cmpsl popf xor pop jb mov icebp xchg jbe lods xchg shrb pop or aad mov and pmulhw pushf sbb gs ret rcrb push jmp (bad) dec or mov sbb and test shrb pop pusha (bad) xor stos addr16 and outsb cltd push js (bad) xchg push sbb ret push scas fnstsw jnp mov repnz xor and or pop push pop inc int cmpsb dec sub rorb and jb into fstl cmp mov xor push (bad) ds push aaa aad and in sub xor xchg sbb repnz je xor dec mov mov sbb insb loopne sub sub outsb lahf cmp cli jecxz ja mov and dec cmpl iretw std jbe push lods adc es mov (bad) sub and ret lock cmpsl popf fcomps push jecxz or jo cs inc enter or inc fwait rep out fstpl jo mov mov mov aad sbb loope and mov or push sbb dec stc rcrl jp push (bad) lret loopne push add dec jecxz or pop popa adc sarl dec bound in repnz mov and dec add push mov arpl cmp imul or stc outsl lcall dec andl js cmp adc and xor mov sbb inc mov (bad) ret es jne loop sbbl jnp mov je mov cs and mov nop pop sub inc shrb addr16 inc mov (bad) dec das jnp clc and cs ds shlb cli sahf in push jae mov lods aad xchg hlt pop pop add pusha xchg add pop lretw mov pushf aad sbb xlat movsl (bad) loop sub adc enter je xor lods xor sub jecxz fisttpl call inc mov mov add add ss pop or jb xor xor popa cli mov and ljmp xchg cmp or and or aam sbb mov adc mov fadds mov mov jns lret dec ljmp in and pop lret xchg loop repz dec mov lahf push push mov cmp cmpsl rcrl shr xor cmp repnz pop mov repnz lahf xor ja xor in rorl jo or lret xor lret bsf sub and clc cli loopne pop jecxz jg xchg insl test adc mul mov int push int3 movsb xor xor mov scas aad daa xor sbb cmp mov xorl daa cmp shrl and push aam push jg jnp xlat gs pop addr16 mov inc adc or subb fnstsw xor dec sbb xor mov mov imul lret (bad) cld ja mov adc insl mov add loop dec dec scas and jb mov lods loope xor je xchg jmp mov pop mov add lret jecxz jge cwtl mov inc sbb in sub imul int3 jnp pushf jg xor andl and loopne es sub daa and aas pop aas pusha outsb mov add movsl (bad) and dec or shlb xor insl js push cmp sub pop gs hlt shrl test and xor jmp outsb lahf mov stos gs cmp movsb pop mov adc in (bad) xlat mov push push icebp jge andl jbe xor push (bad) push mov out insb xchg add push lcall in ret or jb popa cmp sub inc mov add fchs js lahf dec push xchg mov mov jno jb add fbstp repz adc jmp jno jno push jp cmp mov jmp adc mov xchg push fbstp arpl movsl repnz adc mov sbb divl stos push fwait sub jle xor jae adc sbb bound and jge cmp inc jle or mov mov xor xor mov xchg add ret and lock sub das imul pop aas outsl mov idivl or hlt and cmp xchg xchg enter and sbb xor rcrl add inc test dec sub cmp icebp jmp fbld dec jle mov mov xor popf movb xor xchg mov jb lock daa or jb adc test lods out push mov pop sbb idiv pop imul xchg fs cmp stc and jb lds or mov adc lcall imul fsub mov test mov cli out and cmpsl js das xchg jmp jo stc mov lock out push mov inc sub mov push fcomip ja and insb adc imul gs aad xor push xchg (bad) jne out sub add push jg (bad) cmp pushf mov jae push jb jmp je orl jnp sbb imulb fisttpll lods loopne sub xor sbb sti and push xchg jns dec xor xchg push mov mov mov sub stc jbe cmp out cmp adc inc push and (bad) mov add fbstp stos add fs outsb nop cmp cmpb shll add xor sub sbb mov adc xchg mov xor sub test xor call repnz stc sub in daa (bad) mov test clc test call and cld imul and pop adc jbe xor out add xor stos (bad) sub aaa xchg fcmovnb dec mov int adc pop sub shlb movsb cld adc xor int3 cld movsb xor mov adc aam in fdivp xor daa jo sbb ss and mov pop mov and add jmp fldt jl sbb xor outsb jge cmp pop mov sahf push or in enter ret xlat pop orl xor test pushf or cmp jns or push jle rcll out or or repnz mov imul std test xchg adc jge aaa stos imul es sbb and bound js dec adc jge xor mov jne xor fmull aas icebp loop stos jge adc es mov jecxz in sbb inc xor cmpsl push pushf (bad) mov fsubrp adc mov jno lret inc cli (bad) clc mov xchg loope jmp aas ret inc mov icebp lock jge or repz das mov add ds lret das dec mov fisubrl call jmp popf orl push and cli test insl push xor sub inc repnz cmpsl mov sar ljmp bound and sbb jmp sti inc mov dec dec aam sub lea add jne dec sbb inc inc or xchg fstpl scas jmp mov push arpl outsb inc push mov pop or sub inc rcrb or xor aas sub aaa pop lahf repnz xor jae lds das cmp jno mov or ljmp push loope adcb sub mov mov fbld fsubl pop ljmp outsb push test jno,pt test insl and cld and out loopne jno jmp ret cmpb xor add shrb and int xor mov cmp mov imull inc stos and fwait push movsl ds outsl ret arpl (bad) popf scas jb gs mov sub xor mov cld in adc es les pushf daa jbe xor clc mov push mov mov and subl inc sub mov pop pop xor push lahf popa sub mov mov daa xor sub xor les pushf pop imul add mov gs jb cmpsl mov or inc xchg inc push cltd loopne sub in push addr16 push in fild inc pop adc rorb adc adc or xchg pop ss lods add mov and aad jns nop data16 call test mov pop std insl (bad) hlt jbe (bad) cs lret lods inc dec mov mov gs lcall push ja mov fnop fdivl aaa popa xor fbstp addr16 pop aam mov sahf loop jbe mov gs cmp clc mov xlat idiv rcrl mov dec int3 sub fcompl in imul test sub xor sbb pusha cmp xchg mov aam hlt int cmp xor mov mov out mov mov (bad) cli and mov jno out mov jp shlb sahf stc call ss xchg mov sub sub loop xchg fdivl xchg icebp or adc mov cmp cli adc lahf rcrb cli fbstp inc jmp xor push jg pop cli jmp lods dec (bad) mov xchg repz jmp movb ficom sbbb xchg jne (bad) scas pop inc cmpsl stos sbb mov ljmp gs mov mov inc xchg gs (bad) jl xor mov xchg into pop in jb sub xor ds fbld mov push addr16 lret dec xchg push xchg arpl mov loope lods imul jb jno call jecxz dec sti subl mov xor jle adc das hlt insl fnsave inc ja stc xchg jo cmp fistpll ret ret lock add jmp outsb fiadd stc pop cmp repnz movl jle push jae clc cmpsb cmp (bad) clc mov sar imul call fs notl sub int3 xor xor (bad) sub fwait jg hlt xchg jb inc mov push (bad) lods jge xor sub sub inc xor pop xor adc leave pop es or repz fbld leave lods pop mov push inc jle cmp ljmp enter imul mov outsb clc push shll or push repnz xchg out popf xor xchg inc jo out xchg imul movsb paddw fcoml es gs dec and rcrb mov jno dec into shr lret ja divl outsb xchg jo lahf sub pop scas (bad) popa jecxz cmp or jp lock shr sbb jge inc out int3 (bad) mov stos cmp jb jo mov push inc inc aas sbb cld pusha movsl loopne fdiv fbld adc lods movsl int3 sub mov stos mov cmpsl rcrl mov and fs sub sbb fisubrl outsb adc mov cmp xchg mov rorb daa popa pop ret popf arpl mov enter mov jnp cmpsb xor fidiv xchg dec jmp lds add cli gs daa imul cmp sbb test pop or and sub or cmc int3 or pop adc push pop jmp and and pusha cli je out fwait xlat inc movsb jmp mov les icebp cmp stos or divl and push movsb repz cmp dec lret lret adc xchg cld movsb or mov sbb cli (bad) icebp mov jge xchg insl xorb sub (bad) jno mov stos mull add mov xor mov push repnz push lcall test mov jp sbb out js fbstp icebp mov (bad) mov add stos data16 mov int stos div aas stos (bad) lret repnz fs jno and call adc and cmp pop lcall fbstp and ret mov (bad) push out mov mov adc mov cmpsl sub ja and xor cmp addr16 push pushf pop mov jl decl movsl mov and cmpsb int3 dec sub es adc sbb and lret jge push pop fcmovu leavew xlat in mov adc sbb cs jo cmpsl loope inc or jmp inc lret mov push jmp mov cltd add sbb stc nop xor jecxz add cmp repz loopne mov xor inc outsb icebp add lock out mov inc lcall sti shl cld cmp jp repnz cli mov mov pop adc repz jle mov call jle ds cmp mov (bad) pop ret mov movsb xor push imul mov sti aam pop jae cltd cld adc cmp stos scas out sub xor inc adc sub fisttp nop xor mov xor cmp add in mov adc andl cli mov and and sbb dec xor fidivl movsb or or and fbstp les loopne in outsb repz xor xchg and hlt jg sbb inc hlt sub mov out iret xor cmc mov sub xor test popa sbb je inc fildll push out hlt das in sbb (bad) (bad) push sbb cmp jle je mulb loopne and (bad) xor adc fs out xor xor xchg mov push ret gs jecxz xor ficom (bad) (bad) xor je pop or ret inc das out pop in call loop ret sti in ret lcall mov sbb in pop (bad) and sub push and add (bad) xorb jns cmc sbb idivb loop mov outsb adc (bad) pop dec movsl pop lods aad je in ljmp push popf mov pop and jecxz push (bad) xchg stos sbb ljmp jle shrl cmp (bad) out dec enter and outsb and sbb repz flds aaa xor pop sub scas sub sbb sub in sub and and mov outsl or ss mov cmc imul and in fs aam and int3 in in std hlt (bad) mov xorl and mov movsl mov lea cmpsl add mov mov imul test adc inc mov sub jne sub sub je jno aad lret les and pop xor int3 scas xor inc cmp in cwtl insl and and cs push xchg and jae movsb push sbb sub cmc outsb sub mov jbe push pushf cs stos cmpsl mov mov pop jl loopne mov xor sbb jmp add xchg mov sub sub cli (bad) enter fbstp shrb jns pop arpl std fistpll jae les push (bad) push jmp add arpl xchg (bad) pushf mov sub xor popf push je das test mov cmp cmp ja xchg mov icebp adc ret jnp xchg xor sbb hlt sbb icebp lea out call dec jo adc cmp aas stos mov insb je lcall out jmp push fbld cli mov sub lret fwait inc jp pop test mov xor adc (bad) jle out aas or in test jb aam jno inc jo cmp scas push push cmpsb adc inc dec push mov jecxz imul push cmp sbb imul push cmp add aas and sbb sub in mov jp jecxz or rcrl pop pop xor xor je mov mov je in clc mov test mov xor adc jl test sub test mov loope add sub aam jl out xor push jecxz daa xor mov ret int dec int3 (bad) loop sub sbb das xor jmp xor jo add aaa shll mov outsb sub daa pop dec das sub loop cmc lcall mov les mov cli lods test sbb mov mov call jmp jl cmp xchg xchg ja inc leave push and aad movsl nop xchg aam cli mov jb xor out xor mov xchg xor lret inc xchg jecxz mov sbb lret mov shll out decb popf add lcall lahf jo and leave vpshuflw cwtl jno lret push push sti shll jmp clc jne add psubd or jge dec loop (bad) lcall popf mov pusha dec shll sub out dec add mov cli sbb addr16 or test addr16 lcall lds cld xor sbb in (bad) pop adc push (bad) mov cmpsb into cmp adc jecxz out xchg repnz push mov cmpsb pusha icebp pusha pop out insb je dec bound xchg out out mov inc repz (bad) repnz mov in hlt repz mov jnp sub leave sbb and mov nop in nop test outsb sub lock gs mov frstor hlt sub add out pop popf adc mov push pop fwait xor xchg ficom rcll cmp notb clc mov je jge cmc cli mov out xchg pushf jge jle popa cmp rcl mov roll mov icebp cli push rorb or out pop mov xchg rorl cli mov adc jg hlt push jno push mov imul mov inc jmp repnz mov (bad) je add dec or out in cwtl ss in xor xor cmp mov test xor mov pop jl cwtl xor lret cmp popa mov inc mov xor cltd push faddl sub and and insl lock dec rep repnz fldt arpl xor aam mov xor mov in mov adc add inc in mov ds repnz xor xor std pusha adc daa repnz push (bad) lock ja sar sbb clc ja sar sbb (bad) ja sar sbb xor fucom je out mov ljmp pop ljmp adc sub loopne sub call sub sti sub icebp and push and aas (bad) sub adc loope mov push add push and clc divb (bad) jo repnz push je insl cld sub jns sbb test xchg data16 adc cmp push out jno,pt adc fldenv or dec movsb cwtl sbb shll notb jno (bad) repnz psrld (bad) sbb lock mov push or xor and mov push or push cmpsl sub stc icebp pushl repnz lods aaa lret adc adc xor pop mov or jmp add aaa mov sbb pop and cmp jnp cmc or daa mov in in adc and jg leave popf xchg jb add and bound es imul gs (bad) xor je dec jge repnz arpl adc jbe imul jmp (bad) sbb xchg mov pop cli mov mov ljmp add movsb adc sbb push add testb jo (bad) mov mov aas loopne lcall ja ljmp movsb (bad) frstor sub cltd loopne adc xor push add sahf and mov xor stos shrl xor imul cmp jg mov ret popa sub xlat aaa push cli adc mov add jp sub pop ret xchg mov push fnsave rcrl test (bad) test (bad) clc push pop xor push jge aam lret (bad) in mov daa mov mov ja jb mov test inc scas jp fnop testb push or (bad) or lock mov inc mov cmpsl mov aam repz add push pop xor push cs sub lcall dec lcall enter call sbb ret push and mov add xor or rolb int adc lret jge movsl fistl jb (bad) ds jge loop pop imul or pop push psadbw test test push mov mov xchg les je xor repz mov xor mov test xor js and repz mov inc dec or stos mov inc mov or and notb xor movsb cmp sbb ja sbb lret sbb xlat mov sub int3 out movsb mov ja cmpsl enter aas mov mov mov jno xor cmp cmp hlt xchg mov adc jns imul loop inc xchg (bad) xor and mov je sarl jge jge jge int3 jno jge and push scas mov gs imul cld ljmp imul xchg sub xor int3 cmp loope loope sbb push leave jo push repz and jno stos or xchg mov (bad) cmc inc push xor movsl mov and add shrb mov test push (bad) in lods mov sarb dec std aad stos mov ficom jmp mov addb cmp lods lods (bad) idiv jb shll test xor (bad) iret sub and mov (bad) push mov xchg sub adc and push (bad) sub or mov aad cmp cmpsl add mov movsb jg mov cmc xor (bad) je adc xchg out jg cmp lcall std mov loopne mulb and shrb sub je mov in cmp out mov mov fwait aaa dec les xchg cs xchg cmp mov imul scas enter inc js pushf jb shlb repz outsb mov ret scas clc bound xchg and xor int jecxz rolb mov out (bad) sbb test rclb mov sub js mov sub pop stos mov mov aaa loope cmp ljmp aas mov xor cli sub mov and rcrl aad mov rorl sub jae or scas cmp mov adc test in test test push jno cmp xchg adc sub jb adc shlb jae cwtl jnp add cli or adc cmpsl or lcall adc mov inc mov jno rcrb pop ljmp adc sub and mov mov iret push ljmp mov pop out js clc shrl xor add jmp (bad) bnd cs mov xchg sbb das scas xor mov dec outsl (bad) sbb sti (bad) mov and xchg jmp lea daa sbb adc xor insl popa inc rcr das (bad) pushf js out xchg clc xchg ja dec and and mov mov ret jnp leave ljmp into popw jo js push mov mov jecxz imul (bad) xor sahf lea negb aas imul (bad) imulb ds pop pop cmpsl movsb ret add test (bad) lcall (bad) xor fildl add je movsb and mov mov xor xor cli sub mov mov lret popf bound inc and fsubl sbb movsb jno fwait loope aam xor data16 sub or lret sbb movsb pop mov aas out fnsave xlat insb mov test (bad) icebp mov adc gs inc loop inc (bad) mov mov mov sti sbb jo scas add fimul aaa push dec inc push sahf insb mov cmp arpl int dec loope cmp mov xchg dec or inc shrb in and movsl mov addb jns into ljmp jecxz and or mov repz cli out or xor icebp adc aaa mov std das jne push insl mov imul rcrb mov dec adc repz sbb mov jl enter adc xchg sub inc test loop inc movsb add in into mov ss int3 data16 pushf (bad) push add (bad) dec jg xor and pop xchg fisttpll jge dec add jle repz xchg out aam je xlat cld repnz jae repz mov in pop fucomip adc imulb and mov jl xor call sub lods cli imul ds dec adc fildll es push clc dec add sub cs outsl sub imull scas jl outsb mov push fldt outsb loope xchg data16 add jno add in fiaddl repz xchg stos pop mov inc rcrl cwtl leave pop shrb cmp cmpb cmpsl out xchg xor mov daa jae loop stos mov mov mov nop mov sub dec jmp pusha sub lods repnz clc mov sbb push xchg aad mov push pop movsb jmp add mov nop cld xor or and adc push in (bad) out sbb or rcrl pop fwait xor xchg clc push jmp pop pshufw mov push (bad) das in add fmuls lock outsl dec or fbld cmc lahf mov adcl aad lret mov jne insl push sar and pusha jnp fwait pop icebp cmpsl mov pop xor cli mov test jecxz adc sti shrl or das pop test out pop lcall mov push (bad) jno push cmpsb jmp mov jle ljmp stos xchg (bad) jo popa stos dec or call mov add pop mov shl cwtl jns test rcrl or push ret int3 repnz push (bad) mov das or outsb js mov jg push ret add sub (bad) in inc scas inc sub add inc add and mov push test xchg lcall cli and cmp daa mov sbb xchg lock pop jmp xchg mov inc fistpll mov pusha add out inc dec shl sarl out mov jp xlat mov mov movsl movsl push mov sti dec popf lock lret mov popa int3 xor pop and xor je cld cmp xor xor xchg scas inc pop sti sub (bad) outsl loop lock (bad) ficom jmp mov xchg mov push or xor adc movsb mov mov push sub or sahf jmp ja lcall aas and and mov outsl into mov push cs mov scas mov lock (bad) fcompl js,pn xor sbb call cwtl jmp cmpsl add jmp (bad) pop inc aas sub and sub cmpsl xchg ss int3 orl add jl cli sbb out mulb mov sti cmp xchg cmp cmpsl popf lahf in lods repnz xor ljmp enter sbb stc xchg jmp sbb add jp pop mov and sbb sub pushl push int sub jecxz pop xchg push cwtl xchg ds mov jno adc mov (bad) mov cmp mov cmp push (bad) mov inc or sahf rcrb movsl out test imul jl aas push push and pop pop inc add aaa cmp add stos insl outsl adc dec push push xchg xor or aas mov push popf lea popf int3 pop mov and sbb jg sub cmpsl or out xchg xchg push andb repnz (bad) hlt lods imul adc xchg nop push adc cmp popf and push add repnz cli xor mov mov sub add push lods mov fsub hlt int sbb cli push data16 je jne enter (bad) inc rorl into (bad) aad adc jge icebp aaa sbb sub les jnp jp mulb movsb lahf xchg mov sbb iret out lcall repnz pop (bad) cld lahf and in testl fwait jmp stc es jb bnd pop mov mov sub sbb inc je js movsl push incl andl jmp sbb jnp adc add mov std scas lret sbb cmp imul jo xchg test (bad) mov add xchg bound xchg pop lock repnz sub (bad) jb test mov push inc mov imul loope fsubrl ljmp loopne int pop mov adc push and jnp cmc push jge lahf inc add sti mov xchg push xchg dec popf pop xchg in cmp aaa sti sbb (bad) insb adcl mov sub dec repnz fstl mov sub jns mov push add test xor xchg and add xor stos pop (bad) in aam mov xor push (bad) xor inc fbld xor and mov sbb sarb sar sbb sub mov xchg shrb scas inc cmp mov cwtl cmp test mov or js lcall jmp or call das and in xor mov push adc dec mov fnsave sub gs sub pop inc sub sub test stos jnp or fidivrl fcoml sbb in aaa lods popf aam icebp xor add in pmullw push cli cltd sub cmpsb (bad) sahf jno cld sbb jle jo push jae mov xor sbb jno aad sbb repnz cmp xchg jbe sbb out xor loope std jne or adc shl (bad) out sub idiv je mov cmp sub pop loop out cmc sub cld jmp repnz mov cmp add aaa aaa jmp adc popa xorl dec test push add sbb xor push mov (bad) and idivl jge fnop inc cmp test lea push xor dec xchg and jo mov jmp fs fs xchg mov aaa jge int test sbb sub cmpsl mov xchg jo adc mov mov jg pop dec xor jo js nop fisubl or adc cmc jo or jmp push (bad) jb fstl cmp (bad) sub mov hlt push cmovae adc out xor jge (bad) mov adc shrb icebp sub cmc sub adc jae icebp and cmc sub adc aaa pushf jmp xchg sub test cs xor and and mov js xlat cmp cmc (bad) and sub repnz add mov pop pop pop and jb xchg hlt mov lea fstl push das les add cwtl jmp xlat test movsb adc xor sbb mov gs std nop fs aas mov jnp test and movsl jle cmp fptan out xchg clc jg das cld lock jmp clc adc sbb lods lods xor inc or sbb mov addr16 scas cld jge (bad) jp mov pop mov mul clc dec lret push fildll cli sbb pop sub xlat pop mov sbb adc sbb (bad) ss add sti stos addr16 stc push mov and hlt add (bad) loop (bad) xor ds cmc add xor enter movsl mov cmp stc jecxz jmp dec jmp pop mov lods les sti scas lret rcrb ljmp adc test mov mov lret cmp jmp mov movsb mov sbb sub jmp sbb cmpsb data16 (bad) mov loopne jmp mov out mov ror add rorl idiv xor xchg fs in add push add cli jne jb adc push push fidivr icebp xor out repnz (bad) into les lods mov data16 insl mov les iret sub and add push shr sbb mov ret cwtl out aad mov in (bad) (bad) lret adc xor push dec mov rdpmc adc cmp adc and aad fbld aaa aad insb out iret or fisubr movsb cld lods daa pop fucomp lea (bad) cld xchg enter pop cli jne jae decb jo pop jno sub (bad) and outsl xlat es adc push lods in add clc lods lods add mov push cli inc xor scas and jge and div inc jbe insl and mov xor sub sub dec mov (bad) push adc inc inc loop mov lods mov jmp jge in in mov idivl std fcompl mov pop (bad) shll xor xor and pusha sub stos add cwtl divl cmpsw lds insb cli mov loop out fistp and xchg aam roll mov outsb sbb mov imull mov xor xor je hlt scas fbstp (bad) aaa lcall sbb cs lret bnd or insb mov lods lock mov lock lock mov stos in lock push pushf rcl add mov jno decb dec lods push pop jnp xchg mov add lods aaa sbb popf mov pop imul ljmp or hlt notb mov (bad) jg mov mov (bad) loope outsb test repnz sbb sub fildl fdivrs cmp sub lods std pop add jne mov mov add repz mov mov xor lods cld adc add ret notl mov lock mov mov xchg pop push aaa in (bad) hlt jmp clc stos outsb push cmpsl rcr sbb mov std and push rcrl jmp mov xor jmp sahf add test jne push das cmp xchg movsl adc ljmp push mov (bad) add pop outsb iret pushf mov out mov (bad) adc pop jb xor scas sar inc jecxz out mov (bad) jg jg xor mov mov sbb xlat adc adc nopl je pop js sbb repnz pop push mov and cmp loop adc xor sbb imul rorl jae sbb cli jmp rcrb sbb fwait and jp xor xor mov or mov push lock aas les out mov gs addr16 imul (bad) (bad) adc or (bad) mov jb lcall pop imul mov out xor mov sub pop daa sub in push or aam pop in mov inc repnz test mov push pop cmp dec mov adc lods mov (bad) adc loop pop mov push mov and (bad) lret xchg ss adc add mov aam adc dec adc in popa (bad) pusha daa adc out adc mov in xor mov in mov and imul inc xchg add cmp push or cmp cltd fildll imul sbb in test rolb add imul lcall mov int3 in xor cmpl (bad) sbb and stc xor (bad) xor add mov jg or and daa (bad) es leave mov scas in jmp mov xchg pusha mov daa adc pop jge dec jo jecxz out jl and lret cltd popa jne hlt adc push mov cs jae inc jb fild jl cs cmp (bad) xchg test jne sbb add add pusha mov xchg lahf and les adc (bad) jbe stc add out xchg je mov cmp add cmp andl in xor cld and pushf add adc pop sub into mov add and xchg call test push or test lock cmp int pushf repz lcall fmuls hlt xchg pop mov sbb popa repnz xlat sub mov push xor (bad) lock xor add out xor jmp fucomip push adc cmc dec faddl (bad) loop jne int aam xor into pop inc jnp adc jecxz (bad) aad jmp sub cli jle (bad) movsl and ret dec adc insb jb sub sbb cmp insw xor sub mov ja sub lods popf fsubrs jb pop mov hlt repnz jnp imul fildll push mov sbb dec loopne and and les loope and insb call test pop dec mov test (bad) sbb xchg lret scas pushf test lods add add mov lret xor push adc je nop jae stos mov xchg cwtl sub mov add push out test movsb clc inc xor sbb pop mov pop fnstenv and mov and push jns jmp and push aam ja xchg ds sub xor pop sub std mov and xor jo popf enter sub mov dec mov aaa sub inc fcmovnu dec sbb xlat push aad cmp add fwait adc (bad) and sar call fs lret add push push rcrl loope mov mov sub xor mov loopne xor push fsubp cld xchg mov jmp adc push icebp cli push insb mov aad dec xor xor lods mov pop lea mov xor or movsb push (bad) mov int3 loope lea mov xor stc aas push push movsb jg xor jmp pop pushf pop out and ret xchg in fidiv cmp mov test add sub mov mov adc mov clc outsl adc rorb pop pop or push sarl pop lea or xchg xlat add data16 (bad) movsl pop gs and and cld xlat sub and xchg (bad) add lods cmp adc sbbl sub cmp adc lods aad inc cmpsb psraw test jb jb fucomip fwait jne cwtl loop xor insb jl call sbb sti jge aaa lods mov ds (bad) mov add ds stos iret jge push mov jmp lods mov mov (bad) xor repnz nop popa ud1 mov xor lock out movsl mov movsl (bad) adc ss xor popa testb test xor xor int3 mov ds dec das mov jmp pushf xchg adc pushw orl adc and push shll xor adc int3 ss addr16 xor jle and mov xor popa bound adc or and call mov cmc sub sub cmp add je fdivs (bad) adc or xchg jl push icebp xchg xchg fs decb or adc (bad) bound test (bad) fldl inc pusha call mov nop pop pusha jle jb push in adc sbb sub das adc and or mov adc xchg adc mov mov sub cmp jae push repnz stc insl dec sub arpl xchg push sti push bound enter push xlat or mov je add cmpsb sub mov inc lods xor dec cmp jg mov xor xchg and cli fnsetpm(287 outsb outsb inc cwtl pop orl (bad) rcr adc es (bad) xlat mov shll dec mov sbb xchg ja pop sbb das lods lock cmpl hlt es fwait xchg arpl jmp js stos scas (bad) push mov repnz jno aam stos loop xor pop inc adc jmp mov push sbb (bad) and aas imul call xor jmp mov (bad) cmc daa shlb jge std mov inc mov roll xor scas jns (bad) test jnp mov xchg mov cmp std xchg gs xchg test add mov xchg mov sub cli sbb loop incb mov jl jae mov inc jns sub (bad) lods mov sub sti xor shlb and sub clc ja cmp int3 cli mov out fs hlt inc and cli lods in icebp push rcr xchg pushf xchg jp mov mov lods outsl (bad) mov fs and or pop jae pop fwait out sahf sub sub adc inc not fbld mov pusha jb mov lret pop lea xchg test push ja ret aas ror and push add rcrl push sub and cmc inc aad arpl (bad) lahf jp adc loop into and lods ffree xor rcrl push adc xor mov out xchg jne rclb dec sub push cmpsb fwait push call lock mov bound add hlt mov lahf jg gs cmpb mov jge mov loop jecxz and fstps add pop jp xor lds fwait dec in pop mov dec out out and xchg add dec in cmc mov adc adc loope adc add ret mov dec imul or mov sti or in xchg data16 cltd mov dec pop je ds push insb xchg pusha cmpsb mov cwtl lahf cld fisttp std out push sbb sbb outsl adc stos lock mov and sbb sbb mov xorb mov push xor xchg gs or inc jecxz popf daa xchg push and cld xchg xor xor inc xor sbb insb scas push incb add sbb fs mov xor imul (bad) xchg and adc adc mov enter call jnp cmp std aam lret pop andl mov sub leave (bad) and inc jg xlat and sub xor les mov or sar jb inc fiaddl push adc cmpsl inc dec out enter in stos push inc movsl imul rcrb or in out je movsb icebp movaps shll repnz cwtl fptan aam (bad) sub sbb repnz je ss pop std (bad) fnop pushf xor inc fidiv xor push add repz xlat mov ror notb test insl push cmpsb repnz movsl pop jmp cmp repnz push je in pop aam lret or insb movsl push les adc jo inc sub scas pop imul xchg or jl (bad) mov dec xchg test or cmp xor add ss jmp dec add push stos or xchg loope add outsl xchg and xchg jbe pop nop adc xchg and notb or sbb sbb pop jae (bad) jb mov nop gs mov movsl arpl ja adc push inc and jno sti sbb xor outsb mov sub jb das cli lcall sbb das push lods popf push repz adc or insl int xchg push sbb lods or cs xchg push aam mov in ss hlt arpl pop (bad) xchg mov xor clc pop arpl and cmpsb iret push cli sbbl (bad) out bound add pusha bswap push sbb mov stc clc das fdivs call pop imul sbb jmp add ret or jae push in add loop push lcall mov jmp sbb dec mov int3 pop and xchg insb in xlat mov add adc out pop mov cmp inc xor daa (bad) mov in xor mov (bad) hlt mov sti and pusha xor out ds sarl cmpsb adc movsb sub mov (bad) int3 shr scas negb push test neg and push inc sarb pushf dec mov cmpsl repnz dec sub mov add mov test mov mov stos sub xor dec sbb and int3 mov mov xchg mov add cwtl call lock popf jns gs jno leave pop inc xor mov nop shlb arpl adc pop insb popf (bad) fcmovb push out (bad) mov adc loope sub adc and pushf jbe and icebp adc in dec mov movsb std ret sarb popf sbb adc jb ret popa mov rcrb cmp mov shr addr16 and pusha outsb in vcvtdq2ps mov mov fidiv daa lods mov xor mov and xor popa push jae push sbb loope pop adcl sti and or dec xchg sbb xor fdivrl dec sbb push stc cmpsb into shl xchg lods jmp aad or sbb repnz push loope fiaddl fs test xor jne out icebp insb pop xor add sbb sub pushf mov sub sbbl icebp mov sub inc push fs adc inc mov mov rorb bound in in out inc push mov mov cwtl (bad) xor xor sub nop sbb sub leave jp add cmp sbb mov push jae xrelease or xchg inc outsb test pushf lods adc mov sub or xor ret loop clc loope nop push fs jae pop pop xlat mov jle mov loope cli adc cmp shrb dec add pop mov mov jmp xor (bad) adc insb push xor icebp mov test sub (bad) fwait cld les xchg mov push iret dec or pop std lea jecxz enter sub movsl xchg pop mov add pop inc int and repz jne cmp fbstp mov repz inc je push xor sbb popa fs dec dec and mov cli xor insb and mov and sbb cs adc cli daa lret xor xor inc lds add xlat std cmp aam cmpb xor enter out xchg sub imul out cmp xor sub icebp not mov fsubl adc pop je sub outsb loope pop mov cmovle fcomip test xor cmp insb add jno or mov mov sbb nop imul je inc jl cmp xchg or fbstp hlt jmp ret aam lea arpl jp push cmp lahf stos cli loop mov movsl lds adc cmp jmp and or je adc and sub in push add mov push aaa sub sub cmp push icebp sbb and nop lret dec fistpl in dec das inc bound mov and pusha add nopl inc outsb inc inc hlt iret add rorb sub add mov in push daa jmp add shl sbb loope sub pop dec jo pushf in xor in cmp mov shlb and in jge inc js adc mov test outsb cmc jmp fstenv pop repnz xor mov push out outsl sbb adc out mov ss stos ret and push dec sub (bad) fbld or out mov push xchg add loope push aaa xchg test repz movsb dec fs add jns and flds cs sbb cli (bad) or sbb push cli cwtl outsb loopne inc mov sub pop out mov jo imul cld cwtl adc pushf push stos lahf sub jmpw cmp in ret shl jle add out add push pusha pop mov addr16 cli pop pop mov ret sub mov out lahf (bad) xchg test mov fwait dec fndisi(8087 adc and icebp daa out jo negb lock lods aam cmp cmp push push les jbe stos xor ret xor lcall js xchg mov sub out in aas pop push rolb aad mov add or add arpl ret inc clc cli sub pushf xor call jb cmc fbstp mov insb jecxz lret into ficomp fimull xor sub cmp sbb aam aaa test push cmp dec adc (bad) mov adc mov scas push mov mov div xchg xchg mov ljmp inc pushf in lea das in mov (bad) cmp movsb outsb and or js cld xor and jb sbb mov hlt cld cli lret fsubr inc ret dec daa and push cmp aaa imul cltd cli ret adc xchg cmp idivl cmpsb mov arpl popa js adc and adc and fnsave mov movsb xlat imul mov add pusha in lret xor fs add divl xor sub adcl and cmpsb (bad) cli mov out sub push push testl in repz out add out pop cltd sub imul mov mov cmp imul xor jo jb xchg sbb rclb and ret aaa movsl dec jmp jno hlt dec jmp pop xchg mov mov xor in cld (bad) xor jbe sbb cli add lret mull mov sbb sub int3 stos stos adc bound ds mov into jno pop (bad) das lea fs enter jno jae push jl push inc adc add int and jns or lcall xchg mov mov and divl xchg lahf mov jno adc push adc xchg adc out mov lock fldenv sub mov dec sbb je xchg inc sbb pop mov add push xor aam cmp outsb ds ja cli push stc jno out jae mov outsl outsl cli pop lret jae inc in jno stos fs push fbld repz pop sbb mov cmpsl es cmpsb dec clc inc and xor aam and pop lock pop inc adc repnz mov cmp in cld and daa push inc xchg mov testl jg fcmovnb and adc int mov jmp dec loop shlb and in jmp jns add (bad) xor jmp adc sub dec cmp jo out fwait (bad) jno imul movsl cld mov fdivr adc fistpl xchg imul mov in push pop or shl inc out sbb xchg xchg popf hlt xor and mov and sub hlt pop popf repnz xor das cli and add lea movsl test div pop add out cs std push data16 xor inc jge xchg xor lret (bad) mov clc clc mov fisubrl xor inc cli scas or sbb cmpsb hlt or xor call outsb and sub shrb push arpl cmpsl adc cli outsb test or jns cmp xor pop pop imul in add xor pop pop cmp das sbb lods popa out out mov push jge call adc out popf daa mov mov pop testl ja fcmovnbe and xchg and leave push xor leave and mov xor sub or popa jo faddl hlt rorb negb (bad) loopne push push divl mov cmp popf cltd cmp cmp seta xlat fbstp jl js clc mov mov mov sbb cmp lock cmpsb xor add clc aas les hlt sahf push dec jmp mov repz icebp repz sub (bad) hlt std dec nop jge enter dec je push in scas fildll push js fnstenv xor data16 shl cli fwait imulb inc xor in mov mov bound sti insb sarb neg xlat lahf inc ret pop or mov sub pop jae repnz imul shlb pop enter and lahf sbb push int pop cmp (bad) adc jo fisttp loop nop cld xor sbb pop popf test lahf int cmp and rcrb and mov or pushf imul arpl shrb cs add or xor cli cs ret lcall jae dec xor adc insb jmp and jae cli (bad) sub inc xlat les and jbe je xor xor xchg adc xchg aam cmpsl lcall shll inc in dec mov lcall mov bound out ss push idiv repz into fs cmp push ja xor mov sub xor jge jecxz xchg aam test incb adc jge insb stc cmp jne mov xchg loopne xchg test call clc cmp aaa cli and bound ret mov in stc stc dec cmp sub outsb clc cwtl jno aam cld (bad) xor iret pop cwtl dec sbb mov insl xchg cltd aam pop leave push sbbl repz movsl (bad) repz hlt (bad) xor mov add insl call sub sub ljmp les aaa jo sbb enter loop lods and fidivrl daa sbb jo sbb fldt imul adc test popa dec pop push push xchg jne lcall xor sbb add leave daa movsb cmp fbld roll inc jmp inc dec (bad) scas hlt fildll sarb sahf jecxz shll dec xor mov xor (bad) mov cmp insl mov xchg lods mov in mov lock ja data16 adc sbb mov inc jae (bad) divb je cs int3 (bad) jns pop aaa mov stos mov imul mov lods lods push inc mov pop imull add scas mov sbb and imul add mov iret aad pop loopne repnz mov sbb cmp dec das jns sbb or push pop pop cli and cltd pop lods fildll mov scas hlt subl fdivl cmc cmp in xor and lds cmpb repnz pop hlt aad sub push inc mov xor cmp sub push xorl ret xchg int les cmp jge xor sub mov and jecxz cmp mov mov fcmove add xor call jl scas lcall mov sahf out outsl dec lods sbb aam xchg add xor cmp mov xchg out ja fimul mov icebp std test pusha inc mov mov mov mov lcall sub fimul and fbstp lcall mov and sbb cmpb xor test pushw sub cs mov add icebp pop mov xlat jo das xor adc in sarl icebp clc leave mov add scas add add aad lcall inc movsb cmpb xor popf lods cmpsl rcl clc xorl push mov loopne jb outsb mov gs xchg pusha je cli pushf inc imul jg and cli imul (bad) cmpl pop xor stos lcall outsl cmpsb lods pop fisttp and adc shrb loop test sbb lcallw jb sub mov std sub sub jge scas pop aam adc mov cmpsl mov cmp jecxz call xchg test sbb mov das (bad) jbe mov out cld aaa loopne xor and sbb and and adc push mov sub repnz jmp out pop cmovs rcrl xlat xchg cli xchg (bad) (bad) jae jno pop dec out pop cli seto aas int3 gs jno mov test inc dec and mov and sub fcompl insb pop movsb jge xor xchg jo sbb aad jecxz mov xchg xchg cwtl addr16 test je aaa xchg (bad) cli int3 clc sti cld lahf jecxz add xor xorl cld fs dec pop loopne sbb popa ds jge pop inc nop (bad) aad xchg daa jp or enter pop loope xor jl cmpsb jo notb call xor push or jle outsl sub adc mov lods sub xchg cmpsb dec push push aaa or push mov dec mov and mov lds rcrb repnz cmc push addr16 and test js mov pop push fwait sti or mov inc cmp les push jno icebp add mov xor mov or pushf jecxz loop fcompl ja add lods dec and and das or (bad) pusha pop orl xor pop mov es mov lret sbb aad rolb cli xor add pop push test repz hlt (bad) ja and or sub mov cmpsl mov lods cmc fbld popf lahf mov sbb iret or (bad) ds or in jb int3 ljmp pusha push push mov xchg mov inc mov xorb repz push mov sub sbb nop add mov in mov movsb push lret and (bad) rcrl (bad) jno or outsl jo imul test adc push in dec fs ljmp addr16 xorb sub fcoml cwtl jb xor lea cmpsl fcoms movsb ficomp fwait test in aad sti and xchg adc pusha cmp sub in test mov lcall xor aad mov pop das cmpsl xlat movsb cmp push adc hlt mov add or hlt xlat and aad jge mov rclb jmp push in sbb in pop sub sub xor sub les je ret and cli imul and mov push and inc enter les sbb sbb out push (bad) in cmpl and pop add and mov lahf das adc sbb gs add loopne xchg sbb gs movsl aaa push (bad) std clc xor ret mov mov dec and xchg sbb mov movsb je xor mov jge lcall jb int3 bound fstps mov push jmp mov clc dec icebp int3 xchg push add jns stos sti ret dec roll (bad) mov mov and or sarl test das xor jmp cwtl and or pop cmpl xchg xchg lods jmp cwtl cld sbbl sarl pop sbb jg add (bad) adc sub cmp loopne stos pop or mov push out int3 in outsl ljmp shll or rcrb out ja inc xchg or test lods iret cwtl inc cmp mov lea test mov push cli lcall sub dec enter out adc loopne in xor adc fiadd mov push sbb push inc adc mov icebp aad push (bad) push mov in jae and pop and mov sbb dec sub out mov jo inc ktestb jo scas or or (bad) push leave mov call hlt out loop push or andl int3 clc cmp sbb int3 imul and adc xor ss sbb and sti notb sub mov rorb lods ss mov out sbb lea in dec test lods stos mov jb cli sbb adc pushf xor dec cmp push fildll push xorl jge xor fdivr jecxz outsb sarl outsb jge push pop repnz mov xor addr16 (bad) xchg sub jb cmpsb movsl fnstsw and and jmp mov cmpl jns arpl insl and arpl push icebp xchg xor cmp das lods fs cli push movsb (bad) jo pop ret (bad) adc incb shr popf and push push jp sbb jbe cmp stc pusha jle repnz in divb adc call ds lcall adc dec das fcoml push ljmp addr16 sub xor adc fsubl jg fnop jmp mov iret in sar mov mov lds dec or cmp fisub ret ss idivl rcl adc push (bad) (bad) push mov ficomp pop (bad) cmp mov mov testb mov xchg out movsl dec ret fstpt lret sbb shrb lock test sub test stos icebp sub mov jecxz sub inc loop test jmp loop xchg leave xor fwait int3 cltd sub xchg mov in repnz icebp in aaa mov fsubl push mov push jnp lret pop jp jg jg lock imul cmp shr inc inc or std pusha push cmpsl ret adc jnp cmpsb ret push (bad) xor loop idivl cmp rcll leave loope adc lret stos jmp xchg mov pop mov fwait (bad) scas fsub sbb xchg loop in push adc neg and andb xchg lods adc mov test ja cmc cmp adc mov sub aas mov (bad) xlat mov js inc int3 pop in out call lods xor sti push fwait sbb cmp xor notb cli add (bad) adc xor add test fisubrl es sti xor daa addb pushf dec rol pusha std icebp test std addl cld hlt add and leave rcl aaa mov (bad) sti pusha fs mov mov (bad) and fs lret mov dec pop mov int xchg mov sub lcall pop sbbl push outsb mov aam (bad) in lret lahf mov je loopne ret cmpsl int3 mov leave lahf repz sub sbbl cmp or shrb push dec dec pushl in imulb mov cmpsl rcll fistpl add or adc xlat and sbb lret addr16 inc das cmp gs jo mov xor cwtl xor mov and push ret fstp cmp cmp (bad) and cmc (bad) out pop sub jb (bad) (bad) data16 es jle imul ret (bad) sub repnz aaa movsl mov xchg test sub data16 push loopne aaa mov lcall ja,pt cwtl hlt int insl xor popf or bnd inc adc roll push ss add packuswb mov sbb test (bad) cmp outsl jnp sbb addr16 andl loopne negl mov jb adc das sbb adcb jge into pop hlt shl xor ljmp push fisub xor out mov push fstpl ds jns adc xlat lock sbb nop mov xchg int leave imull icebp int repz (bad) inc clc fwait cmpsb lret or iret xor inc mov push in out xor xor mov test imul lcall jo jp rcr sti dec lret fwait push xlat mov lret sahf xchg mov aad pop (bad) inc sub inc lahf sbb shrl mov loop jmp pop jmp movsb das sti pop pop into aas mov mov push fbld repnz xor push stos cmpl push sbb push dec fcmovu repz outsl cli adc gs test loopne jl push xor (bad) pushf shlb pushf sub adc mov sub mov jo xor and pop repnz mov and in inc xchg mov fisub mov xchg test sahf inc je test inc xchg ret gs dec mov loope pop mov in cltd sti push rcl push scas jg push lods frstor sub rolb sub movsl xchg sub sub sbb jle pop aaa cli and call mov adc cwtl or mov mov stos test movsb xchg add lods icebp xor mov xchg mov imul sbb lods xlat test (bad) into or xchg mov mov js fistpll push dec pop sbb or xchg test jae sbb cmp imul (bad) xor das arpl add add and rclb (bad) imul mov sbb daa lret xor pop in cmpsb rcrb les hlt rcrb jne jnp test test mov mov addr16 and xor add xchg ja cmp or xor add or sti xor and lock push popa mov adc shll les sub pop jecxz sbb loop (bad) cs adc push pushf inc jo xchg lods sbb addr16 fisubl aam mov divb cmp jge test out add sbb mov and repnz (bad) jae call adc fldt jg cmp js mov lock inc pop lret stos subb stc sub leave icebp (bad) lock test and iret and adc or pop jb pop push dec fistpll jne push inc sub arpl cltd sbb shlb pop stos mov std sub (bad) test addr16 ss push addr16 lcall rol or sub jb and push push or in xor pop add divl pop (bad) mov ljmp pop popf arpl mov stos in (bad) adc pop imul daa lret mov lods aad ds repnz hlt mov inc push pop test jmp ss fs mul push cmc xchg fidivr rcl int mul jae or cmp rorl xchg add and mov gs sbb fs js mov repnz and aam lds sbb (bad) movsb jle push fist cmpsb adc mov stos lods cmpsb (bad) lock pop sti cmp fs dec dec in fsubrl push clc movsb mov cmpsb or mov xchg cmpsb and mov push adc xchg loope out gs and ret pop repnz aam loop jb out hlt out xchg xor fcmovne nop adc and xor adc xchg loopne dec mov (bad) (bad) mov fsubs push push add jecxz cmp fidivrl (bad) adc mov xor fadds push xchg adc int nop mov aaa es mov cli popf adc cmp addr16 mov xor dec in sub fcoms sti mov and sub and stos out adc xchg repz out jbe dec mov mov or xchg inc shlb cmpsl pop cwtl mov call push lds push inc mov (bad) sub and je (bad) xchg aas dec (bad) pushf loopne jnp sub and stos repnz sub out aaa (bad) sub int3 cli push cmc (bad) lods aad imul mov inc xor mov icebp push push jbe rorb movsb icebp cmpsb aaa adc xchg faddl sub jg xchg sbbb cmp jmp jnp in mov inc dec orb or loope mov xor push icebp cmpsb int mov fstpt add mov xlat js cmpsl ret lock sbb dec pop mov jno shll xchg (bad) stos bound aaa sarb unpckhps movsl movsl les fbstp xchg cwtl cmp push dec rorb lods in (bad) mov mov sub xlat mov cs hlt sbb xchg mov mov xor rcrb jl test xor xor pop sub rcl stos test dec jle add inc push mov inc dec hlt cmpb rcl repz xor arpl mov mov test cmp scas testl lods add in mov fdecstp gs call iret and out push mov adc test das icebp imul push hlt cmp testb jb rcr pop rcrb test (bad) mov je ds sbb mov mov pop xor sbb lahf push mov pop inc push sub pop arpl mov or add push lcall lods sbb pop pop and sbb hlt fstl xorl mov pop mov xchg leave sub sub and cmpsl sbb jl sub sub sbb iret xchg roll xor mov pop out mov ret repnz stc xor repz adc cmp int dec lret imul dec mov gs cmovp xchg sbb repnz xlat and (bad) pushf dec es sub mov das jno popa lret jnp sub cs jno aas je jnp cmp fist mov das adc dec loopne clc adc sub and aaa sbb pusha popf cli cli ljmp mov fs je jo imul sbb (bad) hlt mov adc mov imul mov sbb js fs in shr pusha xor and outsl mov mov movsb imul push outsl sti fcoms fstpl je jmp cmp adc fldl and or std rcrl jne add mov pop clc (bad) fstl sbb sbb lock and push xor fildll cmpsl dec jmp sbb imul adc cs stc call dec out push lods loope fwait mov in mov sub cmp daa jmp gs fcmovnu sbb dec adc clc (bad) inc jmp dec repnz pop aaa in sub xchg arpl sbb inc jmp outsb add mov jo fldt mov inc std cltd cmp cld (bad) xchg jae mov xchg cmp sub mov ret in pop push sub push insb (bad) pushw adc sub add mov fwait nop xchg adc fldt xor aas test mov icebp hlt int xor dec add xor in imul nop adc and std xor add inc sbb push sti enter add std hlt fisubl push mov xchg pop inc sbb mov je es or lock sub dec or push jge or outsl xor jl xor inc dec cld insl hlt jo cli sub lods cmovge and mov pusha fwait dec mov xorb dec ds and fbstp sbb sbb jae cli mulb inc mov jb sbb or lahf stos mov dec (bad) aaa xor push inc push add push dec icebp sarb pusha inc sbb leave mov lods push cmpsl xchg push sub mov xor ljmp sub pop test sub fidivr test icebp les outsl mov (bad) xor adc fdivl (bad) fwait out ss mov mov popa pusha fwait les in cli inc push decb test aad xlat mov xlat lcall notl jbe adc xlat pop test mov xor (bad) cmp loopne imul jp sbb jp xor mov adc cld jo sbb inc fmull dec cwtl inc lods inc pop js fmul shrb dec add loop imul stc repnz jle add in ret rcrb sbb sub add push sub mov mov aaa clc jmp in jo (bad) xor add mov push inc cmp cmc jb mov xchg out aaa sti mov repnz aas das adc xor jnp les inc mov inc loopne mov (bad) sbb sub cs (bad) mov jecxz sub fwait divl fs jp add xchg cmp pop hlt outsb aam std cmp int cmp in jmp out daa mov mov ss sub cmp pop data16 mov cld les jmp jmp ljmp mov jo lods shrb pop popf int push adc mov fistp pop cs movsl outsb notl adc repz sbb lock sub and and xor cltd lret lea xor mov sbb mov cmp cld stc adc pusha cmpsb std lods shrb adc test xor xor cmp test or pop in push out add sbb (bad) mov int3 lcall sub and fbld and pushf nop mov push sub xor jne xor push scas jmp (bad) dec adc es ficom mov cmp into ljmp aam lcall or stos mov xor cld xor lcall popf sbb dec (bad) xor fbstp fs adc xchg cmp sbb shrl or shll xor outsb aam orb xor lahf xor jne ss popa jecxz mov int dec inc xchg mov and add inc scas lds shrl jo out push fdivs add dec mov push xor jmp pop xchg dec daa jg jne push das jge sbb sub push js test es or jb jo pop xor fild mov push push mov loope cmc lods into clc or and cmp addr16 pop inc inc dec xor in mov jmp lock push cmp add jae cmp aaa (bad) jp xor pop subl out push lods ljmp mov cli not ljmp pusha push jp addr16 adcb mov popf add imul or imul fisub (bad) cmp sbb adc lods jp sub in sbb mov repz iret jge sbb jmp or lahf mov sahf lcall stos (bad) and outsb and sti cmpsb rcrb adc mov out add outsb test lea stos add inc and jecxz add jne pop in jbe adc sub sub ds and xor addr16 out loope jnp ja hlt jl sbb mov adc aaa add xor xor push shr cmc hlt pop fstpl sti int3 jno xor in ret mov ss jae xchg pop call push fcoml sbb or aad imul and sbbb in pop push mov push pusha mov les cwtl cltd inc push sub es or add xchg repnz js mov pusha or stos inc (bad) idivl xchg hlt in push aas push jnp call insl mov je (bad) xchg or in jl repnz leave sub cmp sub movsl sub pusha inc xchg cmp xor mov push xchg sbb xor fs out movsb mov cli adc test adcl push (bad) cmpsl bound daa mov ret aam mov std icebp mov add sbb cli pop fcmovnu lods cld loop push lods xor mov shlb aas cmp ja adc xlat in adc or inc mov push fs mov je adc idivl insb pushl push adc int3 jp sbb (bad) mov jg or jae scas (bad) shlb in (bad) nop fcomps pop xor (bad) outsl and xor outsb add jl sub adc pop xchg insl aam cld mov into enter imul pushf cltd or push and mov mov stos and sbb mov lret adc xchg mov ss test scas clc ja lds add loopne sub adc push or fbstp fwait jge cs out and andl or fnstenv adc mov mov bound cld in pop repnz (bad) xor dec jno jbe sub mov ret dec xchg imul outsb pop add adc shr pop fisttp cmp in shrl or insb shrl out jno push jle int3 lds adc bound jg sub dec out aaa dec mov adc cmpsl xchg sti cld call pop fwait rorw int3 mov push sbb mov add cli lret xchg bswap adc xor mov in xor and jae dec loopne push adc fcmovbe jle adc mov sbb xchg sub jle jb call adc push dec mov fistpll and scas xor xor (bad) push pushf jl mov dec (bad) dec mov and stos inc push leave dec inc clc gs jb cmp add in or or ret sub xor clc inc repnz or add jno lods repnz and sbb sbb es addr16 add xor rolb gs subl and andl push xchg cmp xor and fnop loope (bad) repnz outsl jne repnz (bad) aaa lods sub sbb and and js jp cmp jmp mov push push in test jp and xor cmp or fwait xchg fsub sbb xchg xor loopne out sbb jmp mov sti sbb pop addr16 icebp pop loope shrl mov mov idivl and in cltd or jne cli (bad) pop outsl das lds out movsb mov aaa mov stc jge shll mov xor add lret insl icebp popf adc mov adc shrb movsl std push mov pop roll lret cmc into jg das iret (bad) scas in test fistpll clc adc imulb mov mov (bad) mov adc cli xlat popl push clc test adc and daa mov xchg adc push sub popa xor push (bad) sub push jb jae aad jo in stos inc lret lock jb xchg insb cmpsb int insb xorl xchg cmp xchg jb iret sub jmp lods pop ss push pop das jge lret and adc (bad) jnp pop mov jmp dec xchg cmp (bad) aam cli mov outsb sub sbb and adc lret hlt call call adc xor fcoms loope in je adc stos jmp xor cltd lret add repz shl jmp mov lret addr16 xor std je cmp xchg rcll jns cmpsl or push push or mov scas das dec icebp sub cwtl movsb mov sub or loopne jns cs iret out jb adc mov push and das out (bad) aaa icebp out pop add out out or or dec in jge movsl mov adc mov in mov dec push push lcall ror ror loop (bad) shll push xor cld adc fwait and inc mov out or sbb lcall and fs jmp add out sbb mov mov jo sub adc jno fsubl cli mov lret jo sti lods int3 test cltd dec movsb data16 jo loope es stos jg repnz pop stos push mov jecxz and jb adc orl call jge and add arpl lock stos add mov inc lcall pop lods sub dec mov xor sub test (bad) sbb mov test rorl and push and xor push mov pop ljmp jo test xor fsubs not aaa push ja je sub fs test int jge xchg jb add xor inc fmull mov stos sbb mov divl (bad) jno (bad) fs add add jg mov (bad) rolb or add jo out mov sbb gs jno ss cli cwtl cmp inc jl outsb test cmpb outsb mov xchg inc out sbb jb cli sbb imul ljmp sub ljmp ret jno jb out adc pop lahf or das cli mov pop or dec loop and imul and cs sbb sbb fistp mov sub jmp pop push movsl (bad) shrb loop ja sub push push (bad) loope out call repnz adc adc and rclb test xor or sub (bad) movsb fldenv in mov rcrl mov stos ljmp mov mov pop mov cltd xlat jnp push gs ja call fnstcw (bad) xor pop and adc in fxch out (bad) jnp leave add int3 cld mov inc mov cmpsb and add mov call and ret mov fdivl rcrl es ret xor divb (bad) pop or in and push sub mov mov xor hlt push cs dec cmc (bad) xor and pop movsl or fs mov sub inc xor sysenter pop mov stos mov xchg mov cmp (bad) xor mov icebp ds loop pop stos stos cld push hlt mov mov gs xor je xor push xor xor ret jmp jb fimul push dec repnz inc out cmc addr16 jae pop or int cmp xor adc sub out mov movsl xor out pop lcall shl cmp mov cwtl pop inc sbb cmp lcall sbb (bad) addr16 repz je js ja in dec pop idiv fsubr xchg mov stos out sub mov leave ljmp cmpsl roll and jmp jno lock (bad) mov iret add mov outsl movsl xchg idiv jmp lods jle cmp leave mov mov cmp jb sbb pop cs hlt ja mov xchg out push repz cmp sub xchg pop mov fwait mov jge jecxz jo push mov adc fnstsw jo (bad) jns xchg adc aaa stc adc jge sub cmp jbe ficom sar inc in lods xchg outsb out dec out jae gs or sbb adc add mov popf aaa jge mov movsb inc jae sbb insl jae sbb xor clc cmp lahf cs cmp jns xchg outsb or push outsb xchg outsb or sub lcall sti outsb clc mov sbb test repz aam outsb cmp sbb jne sbb rolb pop xchg pop sahf add repz addr16 add jecxz xchg and sbb out idiv jl in outsb add add pop pop movsl mov outsl mov push daa faddl and out in ja out xchg xor sub add dec test call and iret mov int xchg xor ret flds and jecxz xchg mov xor hlt cmp mov dec mov inc and (bad) dec scas fstpl mov pop fisttpl in mov jb xor xchg lea idivl mov mov inc loop and sub in and (bad) jb sahf xchg loop pusha mov cwtl test cmp je jb mov lcall and jmp adc ljmp mov jmp fistp add xor popa je stos mov adc cli sub pop mov fcompl out and pop arpl scas or ja lock sbb xor stc call adc ss push xor pop dec pushl insl sbb (bad) xor je sub clc ret jb xchg fisttpl pop jno jmp div cs dec push jbe stc jo adc stos sub and repnz aaa shl std das sub outsl xorl jmp sbb or cmpsb pop xor (bad) push clc icebp imul push mov (bad) divl adc std and fwait into xchg icebp sub daa jge adc outsl repz outsb jno fcomip imulb or (bad) cmp xor fs sar out xchg mov popf call outsb enter pusha int add clc lods aam mov pop dec outsl lods add ret fs jae (bad) sti cmp fdivl cwtl mov xchg sub mov and mov (bad) jno daa lock cli rcrb dec mov je xor pop (bad) and call and repnz (bad) stos mov dec sub cli call xchg es push (bad) push mov and sbb (bad) ljmp leave stos mov les in sub mov es lcall out jecxz push mov and enter xor ja push inc push daa fwait outsl je push sub mov cmp xorl jb push dec div hlt insl popf js pop xor mov jo and (bad) jb cmc out add iret test (bad) fdivl jge or shll mov out aam pop sub push jo lahf je lock jo stos sub stos cmp insb (bad) lods push or sub stos fs out sub mov int3 bound je stos cli and lock and mov outsb adc jbe add xchg repnz add xor mov stos sbb sub ljmp mov inc and and fiadd in or shrb mov jo jno pop push dec loop mov or xor (bad) mov dec push pop add (bad) shl pop test daa mov cmp push xchg ror popf add or lock mov cmp push xor pop out nop mov pop jge daa fisttp jb cltd out loop je pop xchg jbe mov mov cli shll sub in push in dec loope std int ds sub jo lcall cli into bnd mov mov jmp movntps mov adcb push mov inc test mov fdiv jb in adc cli inc andl xchg aad loop fldenv lds arpl inc or rcrl js sub xor arpl and shr addb push pusha cmp pushf nop xlat pop mov sbb scas ja into pusha mov mov cmpsl add daa push arpl cmpsb shrb cli fs jnp sub jmp mov cmp addr16 gs movsl inc and stos dec sbb sbb sti push cltd cwtl imul loopne push stc popf js out addr16 inc inc bnd and adc inc xchg jmp lods es dec sub (bad) pop arpl mov and iret hlt (bad) mov rorb sbb mov mov mov out xchg jo aas shrb mov test mov xchg dec adc inc inc gs test adc ds inc push jae xor movsb cmp cmp mov and mov cmp testb dec rcrb in hlt push jge rclb sbb pop and sbb jecxz lahf sub mov dec pop xor mov mov movsb dec sarb test in (bad) xor popf gs jg xchg sahf aaa and cli jle or dec lds push out jp add pushf insb fwait je inc outsl mov mov push aas pop repnz xor xor mov loop in lret add pop add cmc push nop and loope mov pop lds pop aam cmc sbb xor mov ror loop out loop jp outsb inc add push das aaa fbstp lea ljmp (bad) (bad) imul in mov pusha pop mov imul mov cmp gs int3 jmp gs jae ljmp xchg in mov adc lods sti adc out or sahf std imul push xor fwait push out data16 (bad) mov sub adc insl in int3 test mov (bad) and movsb mov inc leave das mov sbb push jb mov ds cmc stos lea ficompl loope into mov cli (bad) pop lods scas mov int3 pop mov test (bad) loopne push add mov mov int3 dec lea loope mov es popf movsl cmpsl (bad) or bound (bad) out push and bound mov repnz push xor lahf into repz (bad) in rcrl outsl pop out stos xor and ret repnz xchg mov repz and pop andl sbb movsl sbb mov sti aam adc cmp mov les aam je push mov sbb test aam repnz mov cmp aam cltd in in shlb sub xor xchg mov xchg daa xchg push xor xchg xchg test xchg xor in iret mov (bad) xor jae xchg cmp mov xor xor jae xchg loopne sub push mov int movsl sti dec icebp dec and gs jnp loopne popf test daa jbe (bad) jne pusha addr16 mov sbb ret divb sar jp aas add arpl (bad) dec fwait pop push sub push les in js add xchg dec adcl jae mov and es pop pop mov outsb aas or iret cmp sarl pop hlt sbb add cmp sub xchg mov cmp add scas das cmpsl dec das loopne (bad) dec test loop and mov fwait mov les push xor inc cmp std loopne and sbb in ret add xchg addl repnz gs mov sbb push inc imul and lret jne or jo pop pushf (bad) xor inc aad push add cli pusha bound in sub inc adc insb sub adc insb clc adc and lods mov xchg mov ss mov sbb sub cmp xchg fcompl dec mov test sub inc and scas fwait mov dec movsl repnz mov in in mov xor call sar xor cmp push test xor hlt fild nop jge pop in lret rorb mov pusha lods or push repz xor lock enter lods and mov xchg push inc test pop adc jecxz push in sub lods rolb fisubl shrb setnp int mov lahf icebp mov lods mov (bad) aaa repz push sbb je lahf jo push sbb push pop (bad) icebp aaa cmp jne add out daa xor scas rcrl sub lahf scas lea and jb addr16 test jb sbb ret pop jnp push add pop or sub movsb lods xor xchg and add outsl mov mov cmpl (bad) rcrl call mov xor les stos mov cmpsb xor popa sub pop xor or leave jo sbb aam cmp push fisttp in rcl mov sar xchg pop add inc adc inc call jg movsl insl push jge xchg pusha add ret sahf push jb or ja adc mov (bad) lock push jbe sbb and movsl and cmp es jmp and mov or jb icebp (bad) aas cmp and jnp es cwtl mov loopne xor lahf repnz stos jp add and xor aas xchg movsl mov push cli (bad) or leave ja in jns rclb sub cmp push lock mov push xor jb popf lds icebp fbstp pop lock idivb cwtl cmpsl and pop xchg mov lods sbb and popf sub or push (bad) repnz adc aad mov insl stos adc or push dec or pop (bad) sub (bad) jae aad sbb push or or das addr16 call out add mov rclb push mov fcoml push lea mov cwtl add jbe outsl ret push jge cmp adc add pop (bad) xor shll inc repnz lcall mov cmp jne adc movsb add jae out cld pushf (bad) (bad) icebp cwtl stos into jl adcb mov clc sub jl adc sub mov xor in add imul dec inc cld mov add xchg xchg mov jne (bad) jl outsl xor push mov push push pop shl loope jecxz arpl insb out shr add sti cmc and xor shll add sahf jmp jne push push or mov shll dec addr16 cmp dec insb out or pop jl idiv ret push rorb cli inc push xchg mov scas add cmpsl mov jecxz in mov mov xor loopne xor dec cwtl pop lock xor bound pop and adc lds je push out arpl adc std mov pop sub pop addr16 mov jg arpl mov stc or adc stos adc fist add add add or sti sub out xchg arpl mov mov ja jbe ja lock cmp aas test sbb js fisttpl repz nop inc pop movsb or pop push xor leave (bad) repnz (bad) repz cld arpl or std arpl int3 aaa mov push mov cmc cld xor or (bad) aas mov adc cmp cmp out cmc jl mov addr16 and adc movsl cld movsl movsb push dec jecxz in scas cld in pop pop jl mov xchg fdivl lds popa sbb jno enter xchg add fdivrs and jae jb sar cmc pop jmp scas js jge imul je clc mov fs xor and cmc and jo (bad) out (bad) jno sub mov adc inc cli cli jnp mov adc xor xor in outsb ds sub pop aam clc or jl and and std (bad) (bad) mov repnz test addr16 fwait push lcall aaa and adc aad push mov bound daa jmp sarl lock imul ss xchg adc movsb pop aaa dec mov and rolb or jae sbb xchg addr16 xor stos call ret xchg aam and (bad) sub aam mov fldenv xor push xor sub adc xor out loopne loope test sub cmp bnd sub ja and push lods adc ljmp sub (bad) test sub sub (bad) xor pushf ja (bad) push mov xor xor pop sti cs loopne mov mov das adc arpl cwtl and and pop or mov and sub int es loopne mov mov xor popf ss das mov xchg and cmpsl jl xor sub and push pop xor mov push mov xor sub test insl loopne adc sti adc xor xchg movsb movsb adc xor in pop adc mov out push xor shrl adc fs mul xor or sbb ss mov call das and bound jecxz sbb xchg cltd add sbb ja ss movsb push test xor sbb movl ljmp loopne and xchg movsb outsl adc sti pop test xor sbb sub mov sub ja sti test xor ficom int3 gs add pop add sti clc test xor mov push out inc in mov mulb insb lods paddsb xor mov xor adc loop and mov test hlt lock xor and or xor gs xor ss jb cmpsl mov xor or xlat out ja scas gs xor sub outsb pushf ja out sub cs xor add test xor inc xor xchg movsb lods xchg int sbb test xor ja and sti and in mov sbb sub fs pop or sub xchg and bound out lea daa pop outsb test sub xlat sub aam sbb mov push push cs aad dec push jno pop je out stos lock or xor dec adc push xor xor stc adc scas and lret mov test dec imul ret loop sub cltd xor lock xor ss leave xchg das xor inc cs or popf (bad) nop jo and xchg xor and and sahf or and cltd (bad) xor mov cmpsb xchg pop sbb in mov inc sbb scas pop sbb push pop fcompl mov push inc sbb mov jb hlt add movsb jg lock cmp adc adc sbb lods (bad) notb xor movsb or adc sbb lods xchg (bad) push xor movsb add adc sbb lods cwtl testb pop xchg (bad) dec add out (bad) rdpmc mov fs movsb push in das adc adc sbb lods lods jbe lods ja stc xor xchg movsb add hlt adc adc and adc cld in std xor push lock in (bad) adc dec sbb lods or dec (bad) mov mov adc xchg push jb xor adc lods (bad) divb xor pop adc sbb sub xchg movsb sub adc adc cltd add jmp mulb and xor and dec popa xor bound and xor adc inc in sbb aaa movsl out mov push popf sub sbb movsb sbb xlat daa push imul aas cli (bad) cmp jle jge pop add pmulhuw std xor cltd pop aad cmp out jecxz mov mov or or xor add lea mov (bad) mov repz aam jnp loopne mov push mov mov xor or sub cwtl jnp sbb add sub int and clc jnp jno out popf ss mov jle add dec pop mov and pop outsb lock fbstp idivb ja lcall daa lret inc (bad) xchg jle pop mov pusha sub pop fsubr cmp rcl leave dec lds jge push push scas stos sarl xor mov jno lahf repnz pusha lcall mov adc xor jno add es xor (bad) lock add in xor sub imul jno icebp pop jge mov mov mov pop fildll push add in mov push mov lods imul js xchg jb hlt adc cmp int3 call push adc insl mov add sub add jnp insb mov std jle mov lret add in stos std out inc stos stos std iret inc jne notb std inc add loop hlt aas icebp pop lock mov xor add loope jp cmp xor or lea lock rorb adc in arpl aaa insb or adc lock lahf add xor sti sbb sub push cwtl mov out and ss xchg mov push insb mov and arpl lahf and sti fdivrs jno push and mov add and fwait xchg sub jl movsb arpl xor mov fs jb lock cmpsl mov mov imull pop (bad) xor xor xor mov lret (bad) xor mov xor shrb sub ljmp xor loopne mov jbe mov pusha loopne hlt mulb pusha imul movsb and xor and cmpsl (bad) lock jmp add test test imul das out mov mov xor aam push inc push xor flds xor mov addl push ja test mov std icebp xor test adc cmpsb mov and shl scas cvtps2pi adc (bad) ret stc (bad) mov cmp repnz mov loop push fs iret fwait jno cmp mov out gs or push hlt dec test repz out add mov repnz xchg or jecxz dec cld data16 xor xor adc and or dec jns mov fmulp incl add sbb xchg push xchg sbb test xor pop inc outsb adc jecxz mov push outsl mov in push stc mov jno mov sub lcall pop int3 cmp (bad) and pop lret mov xor mov popf std and aad inc aaa xor sub jecxz mov xor daa insb mov in mov test add xor in xor mov xor test sarl je mov les or data16 or out jecxz jbe outsb clc xor cwtl mov shl sysret pop mov and cs xor fs mov inc std je (bad) adc ljmp mov lods lcall mov lea mov test hlt lock cwtl dec mov fbstp pusha bound aas mov in mov jno mov scas cli jns adc xor sbb xor mov hlt fildll test pop adc sar aaa add jno (bad) je nop adc pop mov push test hlt cltd dec sub pop int out ds lahf test push mov leave cs mov cmp pop aam mov insl int or leave daa pop cwtl pusha imul push xor xor cmp push ja mov dec cs in sbbl dec test lcall aaa dec mov jno mov adc xchg lahf mov aad mov xor sub popf mov pop and fsubs xor adc jb inc xchg sbb int3 jmp clc pop outsb rolb pop lahf neg and (bad) xchg add jae mov xchg imul scas jmp cmpl test out sbb ja push add cmpsl pop and mov add mov je stc test adc dec shrb sbb mov adc push lods adc xchg icebp (bad) fbld push out and pop xor xor jo je sbbl loope movsl clc xor aad fdivl nop and loopne push mov pop in push inc pop movsl cmp jb bound lds les lods repnz neg fs pusha mov and mov rorb repz xor out sbb fwait sub nop push cli jno sbb and test sub into lea xchg int3 rep lods mov mov pop mov sub pop inc cmp push imul and jge sahf call scas clc add sbb adc (bad) and ja mov xor jbe popa sbb arpl add inc mov mov sub cli add je jno hlt (bad) push mov shlb xor mov rcrl push sbb sub pusha xchg mov out sbb (bad) jae stc sub add mul inc arpl lock adc mov mov sub stos cli jl or fcoms insb jg aam adc iret addl divb rcrb jb stos cmp jp or leave aas in adc push inc loopne lods add and sub cmp cmpsl jbe and iret loop cli fisubl (bad) (bad) xchg andb cmpsl pop pop cmpsb push out inc push cld sub and ljmp sbb hlt cmpsl cli add lods dec aam in out int push adc xor dec cmp adc sub shll lds jae push xchg jo sub sbb addr16 ret push loop mov and mov cmp rorl push lods push xchg and addl jecxz sarb dec xchg dec dec icebp outsl cli xor imul jnp and int3 mov loop inc popfw mov int3 cmp cs xlat repnz mov add jae aas mov dec out xor cmp push and jnp les fwait out hlt sbb je,pn aam and jnp jb hlt cmc and cmp fs add sbb bnd in xor xor sbb sbb repnz aaa ljmp add aad (bad) je,pn push ds mov jno sub repnz pop xor add cld lcall cmp into or xchg sub and and pop sbb and les jne add mov cmp out repz sub pop int3 call movsb lock popf dec in jb add out mov jb gs cld outsb in outsb lret cmp jns in repnz jecxz out push jno out bound jmp aas jno xchg xor sub dec or (bad) xor jns push mov cmp and adc loopne ret add mov in cmp and (bad) inc cltd add add cmp movsl dec lret std std xor jno pop push inc test repz in cmc mov xor xor nop test popf fucom (bad) mov mov insb les cmp (bad) lret add imul xor pmaxsw je imul hlt pop adc sbb xor shll inc push mov add pop cmc mov pop or dec std sub jno cld jb jg xchg aad xor pop jle sub out notb pop mov sti xor cmpsl jle xchg cltd lock stos fcomi and mov test mov adc and js dec popf int loopne dec jg ds sub adc sub icebp dec repnz (bad) hlt popf test sbb sbb scas inc nop sub das pop jb xorl push cmp daa in xchg pusha cmp iret repz sub pop add mov scas or jb dec add aam les loopne and mov mov push mov jae or frstor jmp pushf xchg daa sti add popw jne test hlt xor (bad) lock out into loope shll gs push cmpsb sub xchg adc mov ss mov mov xchg lock inc clc and stos (bad) loop fiaddl pop sub ljmp les mov pop dec iret mov sti adc repnz icebp popf mov das rorb loop xor sub cmp jae pop call imul (bad) jne sbb adc or rolb push aad jb (bad) jp gs imul rcrb pop sbb adc inc push lods fadd mov mov testb sbb xor sbb xor cltd inc cmp cmp push inc cmp pop mov dec xor xor and stos xor adc and fs inc mov stc pusha lds xor daa pop jno out mov pop imull (bad) negl push cmp movsb ljmp test fnop or push add in ret mov mov xchg iret rcrb sbb and lods loop outsl jmp ds addr16 out cli movsb xlat imul in fwait pop sbbb sub mov es daa mov xor movsb adc dec js adc xor imul movsl dec sbb in addl sub and or fcmovnb je xor aaa (bad) orb or xchg add scas stos clc adc mov xor aas stos lods adc cmp fildll lock xor in je negb loopne cs lcall mov cli xchg test and mov mov lods cmpl inc enter add jge cs outsl xor xor inc ljmp shr cld fstp mov mov je movsl hlt outsb xor popf (bad) stc mov pop push xchg xor daa xor sbb dec popf stos sbb lret fbld add jo,pt clc lahf sub cli testb push sub fwait shlb xchg cmp ljmp (bad) mov mov push pop adc sub das jmp mov adc inc cmp gs (bad) mov xchg (bad) mov sub movsb cs adc add mov jg sbb and push mov ret andl mov loopne popf xor mov cmpsb and or mov in xor xchg jae inc adc push test sar lcall lcall clc sbb lods mull loopne sbb jmp in fsubp test in jmp das out imul xchg jecxz repnz or push cs cli mov iret push pop movsb adc jmp fnop and bound out cld ss add or jae ljmp adc aam shrl inc xchg aas iret cmpsb lods push (bad) test clc gs xchg shlb pusha fdivl xor or cmpsb adc and mov xor gs push inc pushf pop hlt mov pop clc jns outsl xlat and shl in xor lods hlt mov sbb insl scas cli inc sub xor cmp popf or jne jg mov fbld pushf xor sub pop push out push xor andl adc pop push mov out ss cmpsl xor hlt sbb cli push mov push (bad) hlt shrb (bad) out fwait cmove clc xchg push lret dec pusha mov push pop xchg adc jecxz ljmp les call push mov pop rcrw int3 jne jbe loope sub cmp shrb mov repz fucom jno iret push daa ds inc fcmovb sub test and rolb je rolb jl std pop inc int3 jnp jecxz icebp mov add sarb int xchg outsl mov sbb call popf add pop xor xor mulb mov xor lea cwtl les stc insb adc adc ja jge testb lds aaa xor pop scas mov mov sbb mov daa cmp cld (bad) idiv or and inc sub aam sub xor cmc jb xchg mov fild inc pop cmp (bad) and (bad) ds sub cli pop loop ljmp cli dec loope xor xchg push cmpsb inc or push (bad) jae xor shll bnd idiv dec adc sbb and daa repnz imul aas cwtl ljmp rclb mov in repnz cli mov mov jle ficompl adc adc addr16 cmp jg cld out stc inc add add lods mov loop in sub js out adc or jno cli push mov call cmp (bad) add cld test and mov mov adc push cwtl gs xchg adc insb clc jb mov push and and jge js stos dec xor dec stc dec cmpsb addl bound popf (bad) mov aaa cli mov jo xchg loop add jo (bad) popa aaa fs xor mov sbb lret sbb inc out sub (bad) leave mov sub and xor inc cwtl xchg mov cmc movsl jle push out outsl sbb xchg (bad) cmp data16 shlb ss aaa lcall adc test std loop mov mov inc or dec and in lock dec xor sbb in adc jo lret xor xor test xor sub sbb sbbl mov push push test inc rorl push jo push sub pop hlt xor mov lods mov jb mov jecxz mov (bad) lds insb (bad) nop push jae outsb fsubrs lahf fisub mov lock jne adc mov adc fistl jecxz adcb movsb add out inc ficom imul sbb in faddp and push lret insl adc mov imul jecxz adc dec subl call test xor gs lock jne stc hlt divb shrl hlt lods xor addr16 mov test adc mov ja jecxz ja pusha adc divb jae pop call xor in fiadd and push or insb int ret adcb xchg in xor pop lods sbb inc divb ja es mov or lods in jne push push push fildll jle outsb mov push addl inc cmp (bad) sbb out sub cs das imul cmc push and outsb loopne sbb scas pop js mov push push andb mov lock outsl mov push jnp or lods int3 jecxz subb cli test pop lods and rorl std gs xchg sbb in add in fidiv outsb push loop cmpsb jecxz and ss mov fs mov jne jns in ficom cmp insl push pop xchg in xorl add in fisubr jae and mov mov stos out xor fisubl jecxz adc rorb mov aas in adc push xchg jno sarl test adc jle ja hlt adc mov mov jno sbb pop (bad) stos fsubs int (bad) fildll jbe and jge lret out pop xor inc jmp cmp pusha sub push fildll and repnz pop fidiv mov in add fist mov std test or push ljmp inc scas ret mov lods cmp movsl mov rcrl push pop push push and outsl cli out test fisubr stc enter ds pushf mov movsb cmpl jae pusha sti imul insl (bad) lock stc pushf mov insl xchg in xorl add in pop jle dec add inc mov movsbl aas cmpl mov rcrl mov sub ds push xchg jno sarl add (bad) ficoml rclb add (bad) mov xchg lret loop and das mov (bad) lds jnp in adcl pop (bad) cmp mov lock or push jnp mov fs sub mov pop xchg aas ror push add adc jp xor cmp add aas pop lock or sub sarl add add sbb mov scas push in fsts js shrl cmp sub pop lods repnz cli jnp mov cmpb push dec movsb mov or jecxz xorb adc movsl idivb out xor jb das mov xor insb jle sbb fildl fwait mov jge rcrb std adc pop es imul jae adc push inc pushf inc add or ss jecxz call pushf adc data16 in adc incl and xchg jecxz sarl cmp mov add xchg xor cmp mov adc cmp movsl mov ja cmp lock in jb mov mov cli and xor dec mov adc js mov push stc imul lods js repnz js mov adc mov ljmp inc shlb pop nop lds sbb ss adc mov mov jns xor adcl popf push sub xor fs mov push lret xor add mov in cmpsl adc push subl je mov mov shr aas pop pop fistp fisttpll loop fisub and sub loop xchg cltd loope xor repnz repz pushf imul outsl mov in and aas and clc and pop shl mov sub and call mov xor shlb xchg inc and pusha shrb mov stos jle and or push add leave int ret or cmp std xor jge je jbe jb out das (bad) aaa sbb or fisttpll push test in push jo mov or jne inc inc dec jp cwtl adc mov and addr16 pop jmp imul mov mov shrl data16 call rcrl mov nop scas mov aad enter sub jne adc xor xor xchg popf push test jecxz sti xor mov jno mov cmp test pop in add addr16 mov ja in out pop adc imul pop in jno inc sbb decb hlt or fidivr cs cmp popf inc sub push xor leave leave dec pop mov xor ret (bad) mov stos mov adc inc insb cmp adcl cmp fs xchg adc push jns cmp out in fidiv mov repz xor inc dec popf sub inc mov push adc mov mov jmp xchg fwait mov dec xchg cmp sub push fstpl adc sub mov rep push sub enter mov push pop mov dec jb sbb test outsb or movsl mov outsb dec inc in fwait push jmp mov pop pop jns push shrl adc outsb popa rcrb lcall jo push scas mov cmp (bad) in dec bound fidivl xor arpl add (bad) aam cli (bad) sbb sahf jno out lcall fstl in pop loopne test pusha mov jle inc and icebp (bad) mov xchg add jecxz xor or in add push negl jno pop loop mov pop jmp xor sub cli imul loopne sub jb push inc je push sbb or sub adc daa lcall mov loope (bad) ja aam or sub int3 adc outsb cld jbe ljmp jns stc cs pusha add xlat stc cmc sbb and cmc and stos repz addr16 jg sbb cli jmp adc sub aas ljmp xchg test xchg cmp push jl ja xor lea mov sbb cmpsb push test inc jb dec mov add cmpsl mov inc fistpll out sbb lds xor xchg sbb sbb inc mov add xchg xchg add test (bad) mov imul lods inc (bad) adc mov rclb and inc dec fwait push jl push and add loop xor mov mov cli pusha lock push mov fwait shrl dec sbb repnz in in add adc sub inc push add mov add add adc sub mov jno (bad) mov add push (bad) jns jae icebp adc cli daa es enter cmp shrb popf mov adc mov adc jge (bad) mov jecxz jns or cmp jne pop addl sub or jb push mov jp mov and add aas lss and out mov loope jp int ret into pop add sbb push mov sub (bad) aaa push punpcklbw dec mov das in mov idiv cmp sub xchg push addr16 stc inc add or mov shl sbb xor outsl mov stos cmc repnz lret out inc cs mov sbb je inc imul jo lock hlt push xor test mov lcall mov pop popa das ja pop pop mov fucomip sahf cli lret adc adc fcompl and lahf test xor or fisubrl ds lock jo jecxz adc clc adc (bad) icebp adc loop aas shrb clc fbstp movsl stos sbb cvttps2pi (bad) divl pushl jg aad xchg adc or xor fnsave movsb test icebp ret pop subb rcll xor fucomip test pop mov dec neg jo inc sub ja mov sbb cli (bad) xchg xchg or clc inc push jmp cli and loopne jmp sub inc int3 xchg push aad jne (bad) pmulhuw push dec hlt sbb not (bad) push pop cmpsl insl flds fsubrp or push scas jg popf cmpsb jge or jae xchg xchg icebp frstor xor adc sub (bad) fincstp and mov push mov lods jg leave cli fisubl out jb or mov xor test (bad) (bad) pop jle xor adc sahf or xchg xchg lds xor sub mov cwtl cmc adc mov mov push popf jg pop mov dec mov in dec mov pop push jno les xchg dec (bad) out xchg idivb das dec jbe popa xor adc mov (bad) imulb andl mov xchg mov adc inc (bad) mov mov nop ds into nop lcall xor cmp mov xlat lahf cmp cmp jb inc mov repnz mov jmp jo in sub xchg add and lods add mov mov pushf mov mov xchg jge cmp adc cmc (bad) pusha out xor mov mov cmp jb push fnstsw xchg mov cmp cmp out insl aad push xchg call lret xchg cmp jmp fcoms and out dec mov rcll mov mov and repz adc and mov jbe shll cmp pop leave clc pop call jae cmp jb movsb mov add test jle and adc repnz adcb scas lods sub mov mov aaa sub push sub dec fs daa jg pop xor out test mov cmp push addr16 popf inc int3 xchg rorl or push (bad) aaa (bad) rcll inc xchg sti jmp ret cmp jb mov inc xchg enter xor movsb nop fild fs adcl xchg mov mov ret ja sbb mov cmp pusha and sbb inc add int xchg inc pop lds add jns jns test xchg xor pop jl jne sub push xchg jge mov adc (bad) dec das mov lahf insb (bad) jbe sbb loop mov fbstp sub sub (bad) cmpsb ret bound outsb push jmp fdiv push decb mov (bad) adc je sbb divb cmpsl or mov cmp sub mov test pop cmpsl cli pop sub idiv fsubr xor lcall movsl and fbstp outsb aas sbb cmpsb leave inc repnz clc mov mov cmp push mov mull scas xor (bad) fdiv xor pop gs sbb jno stc (bad) xchg std push mov ja cli in lods (bad) xor cld jp cld dec lahf jnp je xlat (bad) sbb inc push sti sbb nop mov jmp cmp jl mov decb ljmp in and aaa gs addl ja push cld das dec (bad) daa mov repnz out daa xrelease inc scas shl adc cmp (bad) sbb mov addr16 (bad) jp xchg movsb in xor lock jmp in ss and aas loop sar (bad) sbb sub lock loopne push jge fwait push cmp xchg xchg mov es jge out cmp les (bad) in dec ret mov xor cwtl xor mov mov je xor cmp divb aaa pop jmp jmp cmp out decb arpl loope mov arpl xlat std sbb cmp xchg ja or negl js (bad) cmp bound inc in lea mov std xor pop push mov lods dec movsl ret sti js idiv imul cmp sahf push push mov mov (bad) xor incl scas and ljmp test pusha cmp cmp pushf jp mov ljmp (bad) sub test jb xchg cmpsl xor fs xor xor in mov jb ljmp (bad) cld movsl gs ficom outsl roll lock add sub sbb cmp sbb dec and sbb fcomip jmp aad stos jno sti mov rorb adc pop pop rcrb xlat movsl xor mov and insb mov test addr16 add lock xor jge xor sub cli xor xor imul and inc rorb xchg jmp add push (bad) loope shlb pop sbb push (bad) scas sbb mov outsb jp lahf jmp cltd dec push pop stos jl lods sahf push xchg divl and fs shrl dec nop dec mov rorb mov xor fidiv push les shr mov jae mov mov (bad) repnz in bound shll js jae and out sub cmp xchg in iret cld mov out mov fwait lret inc iret cmp jno cmp out dec cmp xchg lods xor add sbb cmp clc jno lcall je jg stos and or iret add mov cmp pop aas jne jb jle jge push and outsb inc push mov push adc add cmp mov sbb sahf mov fcomip push xchg xor pop push push loopne sub xor xor notl pusha rcll fsts xchg leave push cmp aaa cli ljmp imul mov cli jecxz sbb jmp (bad) (bad) das mov insb rcll (bad) repnz daa add (bad) xchg (bad) repnz jecxz cmpsb popa xlat xchg and movsl subb cmp jbe xchg (bad) xor jmp fist ret pop dec sbb mov sti cmp sti sub out sub out es lret cmpsb and xlat mov adc repnz push inc imul fdivs inc and loopne jmp aaa sbb and or bound int3 push adc pop xchg xchg popa sub jno push in jno outsb shrl sub mov ja jp jle popf fisttp call push xchg imul data16 sbb mov xor adc jb mov jb xchg out outsb lret sub daa out mov cli lahf stos bound lods sbb sub xchg push subl cmp push and fiaddl daa or sbb loope repz (bad) movsb add jb arpl ret shrb cltd int aam (bad) xor sti hlt dec dec mov push lock outsl add and pop or pushf mov mov mov pop cmp lds call adc or adcl addr16 sub mov cs xchg lods fisubl cmc and add and fistp jae jl int3 cli jae outsl insl stc xchg inc and in repz sub and lods sbb rclb addr16 add mov jns lahf mulb jg (bad) sbb or mov sahf (bad) imulb xor (bad) clc je cmp adc in jle daa sub push push xor jae mov ss in hlt les arpl movups cmpsb mov loopne addb jo adc cli sti pop sbb int3 icebp pop mov fadd inc dec mov mov mov xor mov call lret scas pop cmp test jbe aas add jmp fdivrl adc jmp adc inc jmp cmp pmulhuw dec shrb xor out adc and pop mov inc jmp dec and movsl in cmc inc or pop in pop insb aas imul rcr inc dec sub xor xor xchg int mov cmp add pushf mov (bad) mov jo xchg xchg jae scas sbb cmp imul out repnz das jnp push push outsb test sbb inc je loop inc xor movsb jae andl inc pusha or jmp and inc cmpsb sub sub call jl lcall popa mov fnop js pop daa aad adc add lds ja jge pop dec and aaa xchg push fiadd jge (bad) (bad) cmp inc (bad) imul lcall cmp lret xor sahf mov int inc push cmp repnz sub mov dec sub jg out lods ret cs jg ja (bad) xlat addr16 das imul sbb repz in cli and das inc arpl xor cmp mov fsts mov aad int3 stc add dec das push test out sub lret pushf xor xlat out xchg xorb cmpsb dec adc mov fimul sub ljmp mov aam sub in aas daa mov dec or dec rcr mov arpl xor insb mov pop pop test (bad) into ss xor aaa fildll sub adc or mov mov cmp mov pop jnp jg pop ret loop jb add shll push mov movsb jle lahf repz inc mov inc mov mov sub es ja stc fnsave dec lods popf fidivl mov cwtl js mov int jg sbb fistpll rcrb fidiv repz lds push jns sub rclb movsb call ja test mov adc sbb add ljmp outsb xor (bad) xor mov push popf dec jno and in es pop xor xorl pop hlt jge push mov rcrb and and jb scas ja add ret sahf test sarb mov and in push or cmp outsb or push repnz or add outsb and push aaa xchg xor mov mov (bad) xor das fstl sub xor mov inc pop lcall (bad) nop gs or xor sub rorb sbb test (bad) popa icebp out sbb lcall add outsl (bad) fldt in cmc inc mov clc jbe jno add and cmp cmp fwait or mov push pop icebp repz mov xor adc js sarb adc mov sbb pop xor cwtl cmp int3 loop sub in imul fdivs sbb mov inc clc push inc mov ret fs rcr adc lcall repz push sbb repz cmp xor outsb ds pop fcomps cmp daa pusha stos mov mov and call sbb adc (bad) int3 into clc leave mov fucomip lock test aad (bad) mov pop insb push push jge aad loopne inc stc xor in sti xchg mov xlat lahf inc jg adc cmp (bad) xor mov test sub add xor lea mov ds and movsb xchg push xchg adc mov je in adc (bad) jae call jl jle add cmp mov xchg jno cmp je xor mov adc push scas lret adc fidiv mov aas in movsl rolb mov jne xor fs (bad) cld ja mov xchg lcall out std sub cli jnp mov or inc cwtl je fidivl iret ret fwait clc popa pusha adc cmp in cmpsb (bad) bound mov bnd imul inc mov cmp mov jnp push testl test sub mov repnz sarb xor push les mov std sub in inc mov popf jge dec fimull sahf push or sub add and mov lods and xchg xor sub xor out inc mov lock adc add lock in rep in cmp lock rcll ret sbb repz sub pop xor xchg aaa xchg cmpsb xor mov mov adc addr16 and fcomps cli pop or out pusha or test jl jmp and cli arpl mov loop mov jge mov mov push pushf cmp sub mov lahf aas and out xor cmpsl push push adc data16 std sbb and repnz das adc in and loopne jne outsb and mov shrl fisttpl stc lea push xchg mov hlt (bad) popa inc (bad) mov add mov out outsb dec sbb mov ret insl in cmc push sbb sbb adc (bad) in pop iret shlb int in mov adc inc cmp icebp sub pop mov push adc gs mov cmpsl ret imul and push fcmovbe mov das sar push lock inc cmp sub sub mov lock test (bad) push iret lcall lahf lcall xchg cmp pop xor cli xchg or jns fdiv push mov sub ret sarb cmpsb jmp xchg aad test and mov in shlb or mov icebp ss and loop mov dec lods push ds repz xor mov jne cli mov int jmp and rorb sub and out int3 lods sub cmc xor mov test lds inc ret lds fstpl mov call sbb pushf clc cli sti mov test and mov jne arpl dec sahf push and cli push hlt push (bad) rcl vmaxss cmpsb jmp stc xor mov mov add sbb adc push lea sub push mov int3 lock test and xlat mov xor mov adc loop out fs lods cld mov mov add pop mov mov ret inc xor jle jmp shll push and sbb rcrb in xchg imul xor gs es adc fwait orb bswap and sub bound xchg push cmp xchg pushf loopne lods adc pop aaa loop cli jecxz adcb jmp loope jne pop les ficompl lods stc push popf adc sbb ret hlt adc mov cmp adc adc or scas jmp imul out jle clc xor loopne int3 fsts in push xor sub cmp push insb loope push fistp inc mov nop bound add adc xor mul xabort jge sarl insl sub enterw adc lahf lods add mov dec jb,pn clc xchg mov (bad) ljmp daa das mov imul es lea and rclb cmpl aam or push call inc and icebp in out sbb stos mov jge hlt lret fnsave add push jle in in hlt cmc mov lcall and xchg loopne mov loopne iret dec push fldt dec sti mov cmp scas jo mov pop mov aad loop les jno in outsb (bad) jmp mov mov xchg mov mov addr16 loopne push (bad) stos adc les adc adc mov sub std int3 lock add into pop ret jmp lahf data16 movsl adc push test xor stos xchg push fucomi ljmp (bad) repz pop fcmovb aad pop out fs imul fdivrs test in out fisubrl test out sub les loopne fsubp adc out and xlat or jp mov xor cmp dec rolb pop shrb xor clc out xchg das mul adc fildl sbb out jns imul out clc lods cli scas movsb sbb cmpsb xchg lret cmp iret sbb sub mov xor jl mov loop pushf loopne push mov dec nop (bad) repnz pop je pop mov dec or sbb pop das or aaa aas xchg movsl lods xor or jg or insl push sub aam cld aaa inc pop or mov or ja sti xor jo pop pop xor push (bad) add jmp pop or push jmp lea loope mov or dec mov out jmp addr16 xor add xor pusha adc fisttpll imul mov xor out jne mov jno cs arpl jmp fidivl cmp xor cli (bad) dec jns push lods rclb les ss bound jns add xchg push jecxz sarl xor mov scas mov or adc sub adc mov rclb insl fidivl adc xor mov adc call inc jb adc popa movsb push scas adc pop (bad) dec out popf inc daa loope and mov sbb mov cmpsb xchg stc out scas and inc cli mov in movsb fcomp out sub cmp call movsl pop ja cwtl sti loopne inc jbe out out xorb dec xor xor popf gs or dec test rolb inc push in sub out les pop lods insl (bad) rorb icebp and les arpl (bad) xor add ret jne xor in xor icebp es jmp addr16 push in mov std cmp pop test push or in in sbbb lods xor mov xor sub push sbb push and jae inc and jb pusha js outsl loopne lods or cmp xor lahf in pop repz jge push sub movsb sub jne jne rcrb dec out lods and xor test push fiadd sub mov sub imul push in test sarl mov aas mov mov cmpsb lds in pop cmp cli in fnsave fsubl and sbb xor xchg std test (bad) jno dec sub push and mov sub orl es jno or sbb sub xlat and cmp xor scas rcrl clc popf xor jg sbb hlt out ret int3 mov outsb cmp inc into push add jo add adc insl popf xor (bad) cmc psllq imull xor test jecxz mov lret push imul inc andl jecxz push hlt jl fbstp dec jb mov mov fildl xor or adc sbb gs mov loop xor adc out idivb movl test xor jae fistpll ds push xor cmp cmp stos mov lock stos cmpb std xchg xor jmp les xchg jge cld movsl std mov xor ja mov in cmpsl psubb pop sbb and mov jp aaa lods sub cmpsl es test imul mov xor iret xor mov jmp ss dec mov dec mov call and sbb mov loop fcoml leave leave gs sahf mov fnstenv adc adc repnz lahf and xchg test ficomp inc sub dec inc and mov test add daa and xor mov dec shrl sub arpl stos sbb sbb sbb mov fmull icebp inc xchg or (bad) mov test sub movsl xchg mov aaa mov xor xor negb and xor dec xchg mov incb fdivrs push mov cmp loope pop in mov cmpsl out rclb addr16 sbb outsl sbb rclb aam shlb rcr cs xor xchg xor xor (bad) xor jb in je sti outsl add mov xchg icebp xchg mov sub adc mov repnz inc push repz mov sub xor test adc xchg ljmp mov imul or cs lods test lods (bad) je inc inc mov lcall dec mov cmc aam push test outsb push adc xchg out and ja sbb dec test lcall (bad) loope ljmp sub push repz xchg mov out inc je movsb popl xor lret xor jmp sar inc in std inc push xor ret xor stos adc arpl loope mov fbstp push iret test call movsl mov and in lods bound mov cli dec cmp movsl xor xchg or jb mov aaa sbb addl and and jp push and adc (bad) or fwait fwait xor lods mov xor shrl stos hlt mov insl pushf repz adc bound test mov cmp subb or mov sbb jecxz and aaa lods and add stc fs mov in dec and add and hlt roll mov add data16 or xor xor pop (bad) inc aaa adc enter gs mov xor xor insl sbb adc gs lcall inc mov andb xchg xorb mov adc cwtl pop (bad) sub mov and stos lea mov and xor fistpll popf jns xor jp aam mov cmp xchg add pop jo lods fs lock movsb fsubs data16 jno adc xor addr16 aaa sarl out (bad) cld add lahf and and ja ja ret mov and movsb sbb ljmp rorb xor repz or test loopne sbbb sbb (bad) lret xor xor stos movsb push push add cli mov stos repnz gs adc push cli scas (bad) (bad) or and push sub xor push xchg and mov dec jl add push adc adc jg pop adc loopne imul sub pushf cmpsl imul xchg dec loopne mov repnz js xor inc int3 cmp lahf mov mov fwait and xor (bad) sahf mulb in mov hlt call sbb (bad) mull add imul insl sar mov aas rcl test and xor roll xor jo sub dec fsubr xor test jp xorl call jle mov push repnz dec xlat sbb out stc sbb loopne cmp inc lods in sbb xor outsb les pop xchg mov sbb xchg std rcrb push iret ss push outsb (bad) cltd notl xor push mov lea repnz bound xchg sbb xor scas jle outsb incl test lahf sub sti add mov mov sub mov and stos sub xor scas pop fild fwait and cmpsl mov shlb (bad) jne sbb lret pop xor inc xor cwtl je test xor lret xor mov or jo loopne push sub xor sbb jbe pop mov lcall mov sub sub into stos pop test mov jecxz push xchg xor hlt add mov dec sbb inc (bad) daa lock inc loope movsl aad scas rorl lcall adc push sub shl fcmovu scas icebp pop and mov in ffree mov scas loopw hlt loope xchg outsb lahf sahf hlt adcl lods sahf fild cld jae into sbb mov add and xor cwtl sbb shll sub test mov jno push push jbe sbb xchg repz cmp iret sub jo imul (bad) jae push out clc push adc (bad) xor (bad) enter push enter adc or lods mov sbb lods aaa and hlt loopne and or inc rorb or or and and sub mov pop sbb xor ljmp test std movsl xor imul xor adc sub repnz nop int3 or (bad) lods mov xchg shrl aam popa xor sbb push cmpsb xor roll xor fcomip push out test scas and imul add cs arpl and sbb gs ret cld lret xor shll or cmp fisttp xor xor push cmc aas sub fcmovnbe roll rcr xchg or scas adc xor sub cwtl sub rclb inc loopne movsl cli inc leave sbb bound or mov sub test mov les dec mov imul xor sbb mov stc xor cmpsl std enter std decl xchg repz adc xor sbb mov addr16 in out lcall addr16 sub and and xchg sti vsqrtps adc sbb dec and arpl int or sbb push int xchg fsubl add xor arpl ret outsb add xchg movntps (bad) je in xor xchg stos dec lret int3 mov imulb les jae sub sub rol sub and lock cli sbbl dec jge cmp decl lods repz andl cwtl addr16 cmp sub cmp inc mov in test bound hlt mov shlb fs je andl subl adc and xlat ljmp aas cmpsl lret jb add adc push xchg jle lahf sub rcll js adc pop lods out sub and pop lret test repnz popf (bad) in push mov popa fisub mov popf loopne xchg aas cmpsl xor xchg imul sub cmpsl aaa add add bound cmp or lahf pusha movsb lret sub (bad) xor das xor fnsave sbb cltd sub (bad) fsub or sbb mov popl movlhps sbb and mov sbb xor or xchg mov fdivl cmp in and add xchg ljmp mov push xor je call mov mov inc cmpsb aaa or ja or mov jae jo ret dec xor pop cmpsb (bad) aad repnz in add xchg add out xchg in jecxz jno lock subl cmc lcall call push xchg fsubp sarb imul cmp mov in and out mov sub xchg jecxz mov sub mov aaa push sub pop ja loope stos xor cmp (bad) jno arpl les xor (bad) hlt and and xor xchg cmp nop pop mov pop outsb stos mov push adc pusha jo xor ss mov loope sub xchg mov mov mov ljmp push mov pusha adc mov icebp pop fwait mov popa or je das push (bad) or mov and cmpsl mov jne xchg gs lock mov (bad) mov outsb mov or and pushf add jb out adc loop out lcall sarl lea out jb in repnz fistp and mov sbb pop inc adc jle or mov andl mov pop sub fistp mov sub popa xor rolb sbb and and cmp sbb (bad) shll or xchg pusha or movsl and mov sub sub sbb push cmp (bad) lock (bad) das adc jle pop aad nop xchg adc pop call push arpl and shrl movb subl ljmp insl outsb xor stos or std xchg sub jmp xchg hlt pop fwait sbb and xor mov mov (bad) mov lahf jae xor icebp cli or adc xor sbb (bad) movsb ficompl jae or mov or add das mov xor jo dec in lods and dec aam push inc je pop xchg enter and out jb cwtl mov sbb std pop sub mov popf sub push or std fisubl mov gs sub add imul adc sbb sub dec mov pop adc cmp jne shlb adcl push clc inc and mov jl dec add and cwtl int ror mov cmp imul mov jl sbb and aaa imulb xor bound nop mov dec (bad) loopne mov cmp fisubrl int (bad) dec and out mov mov xor daa mov repnz add inc imul rcrl icebp sbb sbb in in imul and pop adcb pop jmp out int rorl inc mov or fisub lret enter mov (bad) cli and xchg jge mov jno inc cli mov and sbb ret jecxz xchg pop jmp std cmp nop mov jo (bad) sarb xchg sbb sbb repnz and daa add mov cmpsl aam inc fistpll movsb test adc jl dec lock in (bad) (bad) sbb mov (bad) mov imul and jp xorl and mov fildll push mov pop stos lcall mov jge repz gs xor sar shrl jmp popf jp mov movsl xchg imul xor loope hlt sbbl push mov dec negb dec test (bad) adc movsl btc push stc xlat jl xchg push icebp lods mov push xor mov shll cltd adc out or call popf scas sbb ljmp cmp in fildll lret adc mov cs popf and jecxz xor push xchg sub mov or les dec xor xchg (bad) xor cmpsb adc inc and daa push add adc cmpsl sbb push shrb or mov mov (bad) adc ss jae popf pop pusha rcll gs cwtl adc xchg mov arpl xor lea push mov mov lahf sub and and in out enter jb das enter mov cld xor addl sbbb (bad) xor adc ficoml (bad) jmp push xor xor adc jge imul sbb enter loop xor addl sbb out loop mov jno and outsl jmp outsl icebp adc mov xchg inc sub cmc and xchg pop mov (bad) pushf fnop mov cmp or sub in or adc mov imul add into std pop std mov jae mov or popa aaa push sbb out mov stc mov cmp outsb dec add cmc xorl jmp xor rcrb fcoms push mov or jb add adc gs pop (bad) sahf mov sti movsl in rcrb pop sub lahf xor sbbl sbb popf ret mov out arpl push in stos out in test sbb sub in sub icebp add into imul loopne mov inc or shr daa xor sbb cmc and hlt pop pop and inc xor popf jo sub dec and jle std test insl repnz pop std or mov sbb fistpll sub idiv (bad) pop scas fisubl out sbb ret test xchg sbbl test mov cmp mov cmp les xor cmp gs xor jno xlat inc in sub xchg aam pusha pop les es add inc sbb scas dec dec jbe mov xchg in inc ret mov sbb mov cmp jmp test mov and push jg mov outsl xchg sti adc (bad) in popa ss xchg xor sub ss adc test sbb andb fidivrl add repz cli inc sub jp (bad) gs sbb in daa inc jae (bad) aaa mov js clc dec ret push pop clc adc icebp ret mov adc adc cs xorb sbb gs arpl dec mov lcall mov gs or xchg clc mov (bad) jbe jecxz xor jecxz aaa adc subl sbb mov fbstp sub fs xor in xor xor xor insb cmpsl sbb enter inc xor cmp (bad) aam jae push insb jae repz xlat aaa lret mov push adc in xor add call and das loopne pop xchg nop sahf mov and jg push xchg mov test ss sub sbb jge add sub xlat xor or sbb call sub fsubrl test mov shll sub add iret cmp lret jp xchg or aam outsb addr16 adc inc popf mov imul and sub subl add dec lods xchg jae inc in outsl inc pop cmp divb add mov cli mov mov pop movsl dec inc sub mov xor pop enter xor push xor push xchg xor loop pop xor stos out push ljmp fbld push mov jmp stc jg sbb js stos repnz outsl andl je sbb mov push cltd jb xchg in push xor hlt mov adc aam lret fildll or push in jmp xor and roll or xor aam mov imul xor adc mov sub pop (bad) xor shrl loopne pop lods insb mov pop mov int (bad) adc popf pushf lods mov and ss aaa aam arpl (bad) jno adc mov cltd ret and loopne pop addb xchg and or gs mov cmp jo sbb test pop imul js jmp sub sbb xor adc jo dec jl outsl inc mov cmpb add dec mov or xchg (bad) mulb std dec sahf ret cmpsb mov ss outsb clc xor mov cmp xor cltd cs outsb xrelease dec hlt jl adc push out sub jno fwait xor orl fild pop xor cli pop repz mov and and jbe mov std mov or std clc adc stc test mov adc loope dec bnd dec cwtl stc je hlt mov shrb push fwait pusha mov push fwait pop or pop fwait cs aaa dec and sbb mov and les sub push add (bad) adc daa jno out push clc and pusha sar mov and cld std xor inc loope (bad) fistpl sbb jecxz inc inc cmp jg and aaa jno xlat sbb or xor sub xchg mov scas push cmpsb jmp add adc xlat ja in fwait push mov and stc mov outsb jbe mov stos das jno icebp or push xrelease mov mov shrb call adc js inc inc xor hlt xchg loopne jno pop and loope adc fs and mov xchg sbbb fucomip fwait inc adc sub cmp mov shlb fwait xor test cmp or cmpsb out sbbb and inc dec pushf mov pop bound and lahf adc loopne push jb and (bad) subl sub and and jns aam sbb outsb or test mov sarl and scas (bad) pop push lods add push jo out xchg pop sbb icebp sarl cmp jns sahf sub les test stos jecxz sti adc popa adc shl in and push dec stos loopne cld je sub or hlt sbb aaa (bad) mov push movsb and adc cmp loope aas jbe xor adc push inc push sub in clc out cli or sar rorl fsub adc arpl ret outsl xchg and js adc (bad) lock (bad) or xor fidivl pop sbb aam push pop mov je cli gs stos in iret hlt mov cmp and or push add (bad) repz sub or pusha mov ret ljmp pop push and pop sbb cmp fstp fstpt inc gs cltd je or mov jbe jmp cmpsl jge jae and jmp in ja repz popf sahf adc in add aam inc sub sbb sbb je pusha mov imul arpl jecxz add js mov test add aam je pop repz mov adc daa pop xlat fiadd jns and aas test clc and push adc int3 cmp jmp sbb jle scas je and mov es loope call fmulp in xor add mov sbb sub into pop out add sub sub daa cs adc mov les jae cmpl repz and adc cld dec xor test loop and cmp std sti arpl mov pop jle nop (bad) xor push test outsb test cs cli mov addr16 add push out in push std aad and and aam inc arpl xchg xchg ret dec psubw lods pop and push mov jb loop iret pusha sub and cmpsl push pop test sub add fcomps jno adc lods sbb sbb mov (bad) shl push sub pop adc sbb arpl add inc xchg add rcrl adc xor cmpsl xchg mov jo clc enter jmp jns gs xchg stos push xchg lock xor lcall call xchg (bad) test push mov stos add dec push ds (bad) and std repz (bad) ja adc inc pusha pop outsl bound push sub js je sub sub fs inc push push xor loope mov xor mov inc fisubl or ds test add xor push idivb clc cmc mov fimul push cmpsb pusha test xchg imul lea mov and repnz fst dec xor xchg mov aaa insl repnz lret xor arpl inc add xor jb cmc jbe pop fucomip aam loopne pop (bad) decl (bad) mov adc (bad) out or mov add orl xchg and jae test and jg int3 pop inc inc test sbb sub pop fs mov into or mov out sbb iret clc xlat mov mov cmp and movsb nop jg rcl je fs xor notl pushf (bad) (bad) jp (bad) rep mov or mov xor push aas inc jbe aam xor mov pop inc ret lret add inc lcall lock xlat sbb sbb push comiss sbb push mov adc xchg adc pop pop mov adc push or sub add mov inc nop push or mov addr16 or lret cmp jl pusha jg pop repz gs loope notb mov adc aaa push mov pop sub iret mov push add insb in pushf sub ds push popa (bad) les mov in pushl xor cli movsl fisttpl aam and stos ja js cmc lock jae les (bad) jo (bad) sub dec (bad) in fimull loop bound pop les cltd sub jns addr16 test fstps jns xchg sub dec sub dec push sbb xchg int push mov (bad) fistpll add mov mov and ss pop lods aam jecxz bound and push int pavgb jge xor add movsl xchg and sbb outsl dec sub mov mov jge xor out xor cs mov push jge popf movsl sub adc clc sbb in xor mov (bad) jnp xor loope std pop les repz inc xchg loopne fwait lcall mov add and push adc xchg lret cmp (bad) mov or inc cli mov imul test loope repz xchg xchg xor sti dec jno adc sub xor test mov (bad) pop imul cwtl out test and stc lret jo pop in ljmp jo cmp sub lods ja sub and ss movsb cld movsb inc hlt mov mov lcall mov xor les mov jno aaa outsl jl jmp xor pop enter push push mov mov ss mov mov xchg sbb imulb sub ja mov sbb incb mov shrl movsl xor mov sti push mov xchg cs loop xor xchg sub pushf and cli pop aaa movsl (bad) mov (bad) leave or jbe jecxz outsb and pop lret repz (bad) hlt outsb jecxz push or pop push jecxz push xor cmp stos jecxz push pop in jge (bad) sbb or push xchg add rolb ret mov sbb and cmpsb jbe mov mov gs (bad) xchg sahf aas xchg (bad) fist es (bad) mov popa imul sub mov mov xor add jge mov out cli in add orb add cmp cmp xchg movsb sub in xchg xor xor xor popa pop add cld call push jecxz xlat or adc test (bad) imul sub dec mov dec inc cmpsb lds adc into add mov sub enter cmp icebp movsb and cmp pop inc rolb shlb mov dec pop ret jbe arpl lock or aas jns rorl cmp add aam mov movsl popf and je popf fisubrl insl adc push pop pushf adc sub pop mov xchg sbb mov add jmp xchg outsl aam sub popa inc sbb cmpsb hlt push push xor pop rcll pusha add jp and and int and push and inc loopne mov dec es xlat cld adc dec jbe sbb ljmp (bad) mov mov pop nop sbb push fisubr push clc imull push in das js sbb pop and fmull sbb (bad) adc repnz push fs aaa cmp xor into hlt inc (bad) cli aad ror add mov cmp test mov out xchg push roll adc xor scas (bad) in daa mov (bad) cmp push sub sbb (bad) aas pop pop and adc add dec sti mov jno shlb sub pop pusha or pop push or adc and xor xor cltd mov mov hlt in sbb xor adc adc jb adc jo rcll fisubl adc or lods rorb popf test aam and push rcll arpl ret xchg add sub push das icebp push repz lods cmp and in fbstp lods rep sbb jns shll adc inc push mov lds sbb loop mov xor lock lods (bad) xor into fcmovbe pop mov lock ja int3 int xchg xor xor push xor adc stc add xlat add repz lock and mov je adc test xor push lods xchg es push add incb ss xchg lret js nop or call mov incl les cmp pop clc fildll push push lea scas adc jmp inc out xchg and and xchg and addr16 loopne loopne mov bound sahf dec aaa and fucomip add xchg sbb aaa (bad) cltd (bad) cmp ja and xor xchg (bad) adc and cmp mov pushf insb or cld js gs add and sub mov adc or repz lahf mov call arpl mov mov (bad) decl jno lods jb aaa push aas sti dec imul mov or test aad inc lock xor (bad) mov push pop mov xor push and popf or cmp pop add and test sbb mull shrb outsl rcr or push or (bad) sub cmp lods shll push sub lea adc repz loopne int xor js popa mov push es test stos data16 lret mov pop xor pop sub sub push inc pusha sub cwtl es inc mov xchg cs and and and pop add and cmpsb das jl imul sub xor jmp xor dec sub jb xor inc adc push loopne movsl outsl imul jno adc xchg addr16 dec je xlat aaa push jle cmp imul popf cmp (bad) jmp je jmp aas mov mov inc mov lock sub push pop push subl les xor mov into pop ror fimull dec sti inc push mov sarb es mov push in push aam jno or sbb ss pop mov mov lahf pop dec and mov sbb mov push push fidivl and mov push dec cmp cli arpl xchg and fwait cmpsl push insb pop loopne mov pusha sbb cli mov leave in loopne sbb das and xor fwait (bad) movsl cs sub decl bound aaa cs mov xchg add loopne iret push or xchg xor xor hlt popf adc mov in sub (bad) mov pop or rcl and jmp jne mov mov cmp popf shlb ja sub mov inc insb repz or movsb cmpsb xor mov dec call adc cmp xor xor scas jmp rol repz or mov xchg push cs shl (bad) mov outsl call pop (bad) lock nop (bad) sbb es aam inc jle test and sbb repnz (bad) mov sbb arpl push mov jmp aas xchg (bad) or call stos xor arpl cltd jl jecxz pop jno mov bound jb (bad) push push pop and and and arpl xor inc cmc xor imul stos sub mov es imul or out xchg mov and mov mov sbb mov xor popf pop mov jno mov lret lock fmul popa lock push fs fdivp aas inc inc addl sub jl out sub (bad) int aaa lahf mov (bad) std xchg inc in inc jle popf sub les xor mov jnp subb sub sbb dec inc jmp fildl jmp lods adc inc (bad) loopne imulb (bad) stc mov pop rcll stc test lods add and das aam mov jae (bad) std push push lock xor xor out pop jmp push xchg ret lret xchg stos into lret dec (bad) inc cmpsl push adc std sub imul ficompl movsb or in addr16 orl inc lock jmp pushf and movsb iret movb mov iret sahf xchg (bad) mov xor xchg mov and pop stos pop out mov (bad) jne or xor pop add sbb mov popf adc xchg stc sahf inc mov sub repnz adc aad xchg sub stc mov mov loop xorb rorb inc stc daa imul and js pop push subb jmp sub pop stos subb aas jmp pcmpgtw push sahf adc outsl (bad) lock pop adc aam mov shrl xor sbb fwait clc pop sub mov jle popa cltd push xorl xor movsl inc xchg mov pop insb or and inc leave adc adc (bad) sarl mov xlat mov xchg ds int3 out xor movsb les aad lods loopne test pushf xor inc sbb cmp add pop cmp lods in hlt gs and fstl xor lret negb sahf (bad) mov mov cmpsb xor push loopne in cmpsb ret js xor ljmp xor outsl stos inc out mov xchg pop nop popa (bad) and data16 xlat sub and adc jb movsl xor push insb sub mov ret test mov out add mov cld imul xchg cs jge xchg daa mov sbb push jb cli imul xchg mov pop cmp pop pop mov jp lahf popa fildl lods ret push adc add xchg xlat pop lods lret xchg xor adc xor pop sub testl xchg repnz fs mov arpl jo or test shr xor mov push imul dec jbe xor jae jo adc (bad) mov xorl fs aam std jmp imul imul sbb push inc sahf cld xchg cmp pop sub mov shl pop pop ljmp bound shrb mov mov and shrl add neg add sar into pusha and (bad) or std jmp sbb and mov xchg jmp ss pop int cwtl mov pop sub and ja push lock jl test sbb inc int jno daa and pop (bad) aaa lock mov (bad) (bad) xor push add cmpsl js daa lcall dec and xor lds adc cmp sbb cltd (bad) xchg icebp scas sbb push pop movq jmp jno ss lret jno hlt stos sbb mul push das icebp mov xor or out cmpsl int in hlt insb ljmp sub (bad) rdtsc insl jo mov ds dec fdivrs test mov les inc cmpsl daa xor incb ffreep and sub sahf cmpsb add outsl call jmp clc fisubr js sub sti mov mov aaa lock ljmp sar bound and or (bad) mov lods xor mov xor movsb mulb mov imul or dec cmpsb jge pop imul cmp test ficom mov sub out int3 mov xor daa mov popa xor test pop and adc xchg xchg shr cmp jge sbb add ret sar xchg and out lcall ret adc out movsl xchg jp pop sub add adc mov out call int repnz mov xchg out aaa aas adc jb xchg xor and sbb aaa mov xor jmp loope loope mov xor ss divb aaa xor out repnz xor mov xor xor xor mov sub loop aaa les and add std sbb sub add out jb sub sub rcl cs mov and and out jb rcll out rcll sbb sbb out jb pop sbb mov mov sbb rcr mov xlat mov or das ror sbb mov cli cwtl insl repnz jo call outsb les push repz fwait shlb adc cmp call xor scas push bound jg xor or mov repz mov icebp jecxz xor lods iret push rorb xor ss movsb (bad) ja adc push cmpl loop aas aas xor loope enter rcrl insb inc dec inc or loope jnp je mov xor aad dec sti and mov std adc xor testb sti xor pop jae add xchg push mov push aaa sub aad movsb cmp sub sub add test test xor test lret aad das test jb and movsb and lods add and nop add test jb sbb and pop test jnp xchg push adc test adc adc adc test adc in push dec mov addr16 roll or or or or (bad) aaa add mov sti add add lods mov add xor push loope jmp dec rcll push sub cld sarl sti in in mov add mov clc mov sub ror lahf insl and js jle jmp pop fwait repz (bad) adc je pop xor fldcw movsb and (bad) cli test xor push fwait gs mov fstl rorb xor xorl pop xchg adc sub rorb outsb inc repz dec je dec lds dec xor inc sbb mov mov insb sub imul xor iret sub cmp mov sti add add divb inc xor mov xor xor xor imul sub add add mov repnz aaa arpl stc cmpsb (bad) mov xor push push call cs xchg sbb mov (bad) mov test test dec andl xor or jnp push sbb xor int int in xor cmp jle fisubl and xor cmpsl xchg fidivr les xor sub les pop cwtl mov test aas add xor pusha popf shll mov jmp scas in hlt aaa inc sbb loop xor ljmp repz loop ja js shrl repnz sahf inc es lods fwait and addr16 or (bad) fcmove scas (bad) (bad) movsl dec rcrl cli imul ss insl fucomip imul xchg and adc pop xor xor and divl outsb jl idivl movsb inc xor hlt aas fcomps movsb xchg mov int3 xor shll xor cmovp movsl fidivl (bad) jno dec les pop xor lea aaa add lahf hlt cs cli cltd jge dec xor or std jo (bad) dec add out movsb lock xchg shll inc xor clc xchg stc mov adc adc mov cmpsb sub stos leave es adc jge pop (bad) outsl rep fidiv pusha (bad) ret push xchg rorb sarb movsb popa sub lock mov sbb daa or insl shll jo jl mov cs cmp (bad) aad push mov addr16 mov jno sub sub aam and pop popf inc fnsave dec (bad) xor in and aas (bad) fcomi sub sarb out pop fmul dec pop lods jne clc jl frstor sub popf sbb or icebp mov sub mov pusha ret mov xchg cmp cmpsl mov imul imulb mov addr16 arpl jo out add mov push mov test sub sub pushf je and sub push jge mov add push dec and dec in in sub fbstp mov je xor mov xchg repz bswap pushf xlat (bad) adc jecxz movsb jp lds mov sti add (bad) bound xchg inc ret test out aam xor xorb push int data16 out push mulb bound mov (bad) mov and sbb in test adc add xchg repnz je add adc or imul daa mov push xchg xor std dec xchg clc fistpll ficom and dec je cld push (bad) stc repnz (bad) shrb pushf cmp imul push jl push and inc mov or dec (bad) sahf mov sbb aaa xor int cli aad fdivrp dec jne bound cmp xorl daa stos int3 xor mov repz imul sub xor xor adcl arpl inc jo jns sbb lods mov or xor sub and aaa pusha ja adc mov addr16 push jmp bnd sbb movsl gs mov push shrb mov dec and add fsubs fistpl inc (bad) cltd and ja orl jne (bad) popa xor (bad) or or je sub mov mov dec sub test addl std outsb in jnp push push sub test popa mov stos (bad) xchg sbb popf daa repnz jnp mov xor sti push cmp mov std (bad) (bad) cld orl leave adc inc in or ss sub jb cli inc jge sub ret mov cld out mov mov inc ljmp xchg out sub imul stos cli xchg add incl pop add sbb es sti sub sarb cmp je xchg mov repnz mov push enter inc lahf repz lcall sbbl cmp and sahf andb sbb scas cli mov adc (bad) aad and lods out hlt gs inc or sar outsb and or jg ret ss pushf test lcall dec imul and xchg gs mov addr16 clc movsl sub sub icebp adc ss sub popl xor lea sbb cli gs mov aam xor fstpt mov adc xor cmp popa out xor mov movsl ds xorb sti outsl adc fistpll mov ret popa ret (bad) loope cmc test jo outsb in inc into ds fidiv mov xchg sub movsb inc pop mov xor pop push sahf inc add pop fidivl stos mov cmp scas outsl das jge lods (bad) (bad) loopne or inc out dec mov push jle (bad) repz mov mov mov int3 xor movsl mov inc outsb daa movsb leave xchg addr16 and dec ljmp enter or mov std mov loopne iret imul mov repnz (bad) adc test std or jl push out and mov sub jge xor mov daa mov sub inc ja mov stos (bad) addr16 icebp (bad) icebp daa mov adc lock aam xor mov and lods loopne loop imul adc sub call aad mov pop repnz mov mov add mov xor xor pusha sbb mov stos fldl decl enter test sbb mov ds jle adc dec pop add xchg add xor push mov (bad) movsl push adc out and test or mov mov mov nop cmpsb popa add pop jecxz imul jle ret push and (bad) int3 repz lock out push ja movsb divb sti orb adc push sti and push pushf push mov xchg sub mov mov or jbe insb sub out lcall push xor test adc stc out bound mov xor jmp pop sub gs std mov mov (bad) xor in adc mov (bad) push dec xchg push jmp sarb cli pop adc pop (bad) andb (bad) shl mov shr aad test ror mov les fwait jo das (bad) xchg mov (bad) jp sbb lcall xchg and fld1 je lods fwait mov hlt lret popa mov push inc mov loopne mov mov jnp and xchg test pop pop or and mov pop mov rdtsc mov loope xchg les jp mov mov fbld into mov in test cltd aad cli lahf adc lds mov xor adc lcall popa xor and lea out jae adc clc and add (bad) sbb in idivb fiaddl movsl jecxz pop mov inc sbb jecxz dec or outsb ja fildll ret mov stos push lea jmp mov jl add sbb mov add repnz (bad) push jbe dec cmpsl pop or xor enter hlt cmp or sbb sub insb sbb cmp test ja or imul outsb mov adc cmp in inc mov and jns xchg addb int3 sub call cmp cs push insl adc xor loop mov loop or fdivs sbb hlt js movsl adc mov movsb scas cwtl inc xchg add cmpsb pop sub imul adc shl push sub testb and in xor and xor ljmp mov adc cld std xor or aam imul and mov xchg jne push rcl popf rclb mov adc loop inc mov adc fucomip cltd repz push sarb jp cmpsb std movsl mov imul push cmc outsl shrb test cmp add in xor push xlat stos xchg movsb daa xor movsl mov mov jb addr16 xor loopne cli fidivr push push and repz (bad) psrlq sub adc mov xor mov xor adc mov or aaa movsb sub shrl adc test (bad) dec subl inc add sbb subb adc fcmovu js in mov pop sbb addr16 loop out fnsave lock test ljmp sbbb push xlat push or mov xchg enter xchg sub jge xor sub ds je (bad) cwtl mov mov sbb push (bad) mov xor je addr16 or not mov popf fidivl cmc mov inc inc lods aaa xor xchg out lods add out lods (bad) xchg bound adc mov std mov cli repz push push inc test cmp or (bad) repnz jge ds imull lea cmp mov inc sub stc jmp hlt mov xor fwait lock jge or mov adc xchg gs inc je or inc sbb xor rolb sbb or jecxz xchg aaa jae adc je shl aas adc sarw and add jg leave pop add or loop outsl push out in mov cmpsl lret mov cwtl lods lea pop mov (bad) push or notl and movsb fisubr pop sbb cmp leave (bad) faddp ret out add cs fisttpll xor mov lahf xor clc sbb popf out xchg sub cmp add sbb je sub shlb movsb loopne push add imull xor jmp bound mov xchg loopne shlb mov sub dec mov mov aam push add mov cmp inc lock lods jno out movsl jne jbe mov jmp (bad) sub jbe xchg and inc jbe push fwait dec fstl cmpsb jo pop into dec cmp scas ss fbstp or pop mov test insb adc pusha sahf nop push sbb lock and outsb subb pop add xor bound sub rcrb and cs and sbb push mov inc cmpsl cs out sub pushf lcall sbb mov test mov cmp das inc mov sub es dec fsts pop stc push lahf mov ss sahf mov test sbb pushf clts gs das and subb std (bad) gs xchg rorb jo sub mov mov add mov rclb test mov repz pushf rcrl xor and mov (bad) xor jb jae repz or xchg mov lods jecxz add jno les int and ljmp jge add inc inc jno xchg (bad) jmp mov gs repnz xor xchg in je and push sub mov jns arpl scas cmpsl bound mov popa sti aam hlt mov push pop fisubrl add cmp fistl arpl subl clc aam sub pop lret lcall ret cltd mov mov fist (bad) xchg pop push bound outsb faddl jl sahf gs packssdw xchg xor insl ret testb lds shl stc into std xor jge xor cmp arpl or jecxz mov xchg mov lret mov mov sub xor aam stc add cmc sub dec loopne push repnz out push incb scas es pop adc adc in add or scas repz mov imul arpl jmp or jp imul pusha sub icebp repz out adc mov stos cmp outsb inc push jo dec cmp mov mov loopne adc mov loope pop lock cmp xchg xor popa mov add xor xor lock aas jl jl mov movsb lock push adc mov mov jbe cmp mov push cmc stos flds dec les leave push and imul pop mov xchg mov movsl movl mov sti add clc cld push jbe mov (bad) or jb popf lret lcall mov ror mov sbb outsb mov lea andb xor cmp iret ljmp lret (bad) jb out in jo push lahf pop repnz sar std test lcall rclb cwtl fdivrs sbb scas or out rcl and mov jbe arpl inc pop cmp and push rcll out sub fucomip movsl aam cld insl in or nop std pop xor sbb je (bad) xor mov insl dec test lea adc or mov pop inc and in popa jne or push jmp push push mov sub into (bad) sub and popa repnz and mov jb push ftst mov cltd cmp xchg ds fmull ss cmp cmp stos je (bad) (bad) aaa movsb or les xchg and sub xchg sahf add sub lcall test popa (bad) and pusha int sahf mov inc fistpll xchg mov aam xchg std in fidiv lret stos push sbb sub (bad) and and ds je loopne sbb cmpsb xor ret xchg mov dec dec arpl call enter mov mov push xor andb adc out test xor xchg loop adc js mov push jl sbb adc xor sub xor mov sub dec inc adc (bad) xor and sar mov xchg in push je,pt lret shlb adc mov xchg rclb in xor jmp cmp sti adc pop mov nop loop adc mov mov add jbe sub xor sub jae sar pop orb arpl pop gs test and mov push aad push adc cli out movsl (bad) jge (bad) into cmp sbb pop cmp xor cli inc std add orl leave jl cmpsl pop mov cmp stc (bad) leave pop xor inc and je add test mov dec add mov shlb sub shl cli fdivl sahf and std mov stos mov sbb jp fnop adc push insb test daa xor pop test and mov push cli jno cmp mulb pop imul popa cmpsb xor les lret pop mov and (bad) (bad) int3 or dec or movsb mov outsb jmp push es jbe dec push scas xchg jmp xor cli xor adc testb mov xor fsubrl leave mov outsl jns xchg repnz repz mov lds je pop mov mov ljmp xor and adc gs cli pushf in out cs push mov pop cmp dec and das lret pop aas into pop lods in sub jecxz sub xlat daa scas cmp sti mov mov aaa arpl mov xchg arpl push xor inc lret ss rolb std imul jle mov (bad) shrl mov push add sbb inc cs mov std das jle push repz decl stos aaa push stos xor pop (bad) cmp test fprem cmc cmp jbe sbb lods sti xor popa fbstp shrl shlb sbbl pop das jb fiaddl fs das stos repnz jb dec and icebp aaa xlat adc inc aam or mov (bad) je and into negb mov ret fsubrl cltd sarb mov push sti mov leave adc push push (bad) lahf std pushf bound adc and lock xor inc std dec push cmp dec in dec xorb fldl and mov adc xchg xchg and push jno sbb mov jl mov push jle pop xor mov add jno xchg push fwait bound jmp loopne jl or and dec fdivrs ljmp and mov shll jb mov pop xchg int3 pop add or aaa xchg outsb push in and adc sub push add ljmp and and lock loop mov hlt cld push add mull andl cmp iret aam sbb sarl mov call outsb movsl xor nop ja adc sbb mov lret jno mov xchg scas je in call (bad) clc mov lods mov lahf es mov sub mov cmp in jle adc pop mov mov pushf into pusha or testb shrb out jl (bad) jle dec push sub push test xchg aam lea jmp movsb sub in enter fs sub cmpl sbb sub sbb sub or and add das xlat (bad) ss add lock and add sbb andl and and inc cmp mov sub and (bad) lods jno inc es xor jo test negb jns xchg add repnz lock repnz icebp add add stos rclb bound daa pop bnd jp push inc pop mov inc xor std add (bad) es xlat dec ret or adc syscall jg mov adc push lods or jns movsb test (bad) adc mov call pop loop rcrl mov and pop push cltd sub adc xorl adc or xor insb sti adc inc in or sbb and sahf insb add adc dec inc xchg xor ret sti xor mov pop aam pop fcoms add sub inc or and ss add add sbb adc sbb mull sub (bad) leave (bad) mov mov popa add repz pop mov xchg test shll pop lahf xor in repnz sti aam dec sub call sub inc in xor clc test add out add sbb (bad) xor test mov mov call lock popa cmp and lock ss test mov ret gs and loop xchg push iret mov mov loop testl sub ja xchg clc xor ljmp (bad) mov fdivs mov daa stc adc aam inc xor push mov pushl leave mov push sub fnstenv jns movsl pop push js movsb sub sbb inc sub out and data16 xor cmp and push pop rcrb add and scas ja push rorb push sub lds pop cld (bad) cli movsl enter stos std bound cmp addr16 sub cli call (bad) js pop cwtl mov add sbb cs iret enter lods cmpsl cmp sub mov push adc inc mov jecxz pop xor std sbb cmc iret fmulp lret cmp push lds mov add std dec hlt daa out xor int3 aaa out scas sbb add fbstp xor aas push or insb push and cmp fidivr pop xor xchg cmp data16 (bad) sub xchg jp test sti gs outsb nop sub xlat sbb cmp or push sbb mov fdivrs push lods mov in mov pusha aam imul mov arpl in or mov fistl leave (bad) icebp push pop call shl pop push mov loop cli push xor bsf shrb sbb dec push aas aaa outsl (bad) sti mov mov popa add add (bad) cmpsl push sub push sub add fwait push jmp push and add in cmp xor add xchg (bad) sbb push or cmc cltd enter jnp movsb ljmp adc cmp or sbb push mov cmp das lcall or xor sbb and add mov insb stc pop push (bad) pop mov std fidivr iret jge lret cli int3 aas and ret shr pop (bad) mov sub push cmpsb jnp sbb pop ret test call repz loope mov xor out and popf xchg repnz loope gs sub lods xor mov aam xor add lahf add jns and jge (bad) mov mov jle lods sbb xor cmc xor nop dec (bad) (bad) idiv inc insb inc cmp rcrl mov xchg and xchg or pop loopne sub mov pop xor cli push xor xor adc loop repnz mov and ficom sub jo cmp popf jge cli repnz pop adc and decl stc (bad) lret mov cli jae (bad) lods repnz loopne jno add jo dec adc inc jp push xor xchg shrb push and pop push leave xor jne nop mov fisubrl fldl dec gs jb repnz cmp bnd sub jae xchg cmp jle jae or or outsl (bad) clc jns (bad) jae adc lods addr16 xchg dec xlat and sahf xchg push adc ds insl out insb pop (bad) loop movsl cli pop data16 push xchg and jmp inc in mov xchg aas xor add mov aad mov cli or dec pop sub bound mov push cltd lds aad sbb sbb es sbb inc jmp popf icebp scas imul or push fnsave in jg mov mov mov mov push cmpsb rorl hlt divb ja inc mov sbb in mov pop jne loope jno (bad) cmp enter movsb in notl pop in jl in insl mov call popf jb insb cmc jge adc int3 hlt lcall cli stos inc lret mov sbb stc mov jno pop pop pop sub mov les adc aam sbb (bad) push sbb cwtl and sub es mov jne push sbb mov not adc sbb insl in mov and and push and adc jns add cmp jp jge int3 xchg mov and push int3 stos fmull inc stos mov mov jle push and xor aam xor imul sbb in lods xor mov ss adc push xor mov mov inc into or lock jp fildll lods orps lea js lret stos jne fdivs cli xor (bad) (bad) das sbb or jl mov mov je push ficom pop ret fs mov aad (bad) in neg xchg and fs scas mov pop xor stos sub adc push sub popa xlat fiadd inc push ss add rcrl shrl pushf sub je and cmp bound add inc pop push cmp test bound xor jae psllw xchg sub stos aam call and sbb adc mov pushf and mov xlat mov jp adc xchg push popa cld sub das and mov (bad) mov xor fildl mov push mov push cmp jo sbb add lcall mov pop (bad) (bad) add mov pusha fdivs stos xchg or dec sub out dec pop sbb and imul push adc sub mov xor aam popf jb popa mov cld movsl sub imul sub aaa xchg in in dec and add and pop push cwtl fwait js js loopne aas adc sti mov xchg cmp dec mov xor shrl xor sub or dec stos mov sub shlb pslld xchg icebp adc push add jp lret mov fdivrl lods push popf mov stos xor mov cld jae fwait inc xor fldl mov or (bad) aaa lods pushf cli lods shlb iret pushf or mov lcall add out cwtl shrb adc mov loopne xor sub mov and dec (bad) xchg shrw sbb sbbl and fs or inc in repz mov sbb mov mov div sti mov mov test cld std fdivl fnsave in jl sbb adc sbb cli push repnz xor sti (bad) cmpsb xchg mov push cmpsb ret pop xor loop mov jmp cmpsl pop je cmp out mov cld jo rorb push adc cmp in stos xor cli pusha pusha shrl loopne out mov adc and mov jo jg stc aaa outsb daa mov push (bad) add (bad) push insb mov (bad) fildl data16 and xor lods adc xchg sahf gs cld idivb mov rol push in lods loope adc cmpsl mov and and jne (bad) mov push rcll mov aaa cmp adc dec movsb mov mov (bad) xchg jbe mov xor aaa jb mov mov faddl (bad) je ja xor pop push movsl outsl out popf repz mov cmp and mov bound in mov push (bad) insl jo cmp and push sub and fsubrs test cmc (bad) mov push add push mov fild cmpsb ret add adc jmp call repnz push cmc xor mov lret cmp rorb mov arpl lcall sti cmp pusha rcrl push inc outsl push arpl or push xor cwtl xchg test call mov or out jg and push cli adc lcall out sbb pop push cmp fs xchg rcrl sbb mov mov add cmp xchg movsb loop mov inc push sub mov add xor xor out lods jl dec gs cwtl icebp pushf mov hlt jb jbe (bad) xor pop aaa jb add add mov cli xor adc adc push cmp sar jg pushf inc jnp dec cmp pushf adc in loope mov xlat arpl or stos (bad) shrb xchg jb test lahf test jecxz xchg test sub mov dec ja imul jae mov add int jmp sub adc jbe test icebp inc cmp stc adc cmp inc fidivl cmpsb mov (bad) pop andl mov or adc jb push push cmp repnz pop jge and xor outsb and mov stos pushf jecxz (bad) clc sbb (bad) (bad) adc and call movsb insb pop lds and clc xor push xchg inc imul iret sahf loopne das xor cli popf push ja lret or dec jns cmp (bad) fwait lahf sub ret (bad) sub pop inc push mov pop hlt cmp pop lds push push in (bad) fnsave cmp in stc lea mov jecxz jmp ja scas outsb mov adc repz inc xor jno and mov std aam sbb mov repnz dec test arpl ss movsl push mov pop jo mov and into adc or rcr and xchg data16 mov ja mov ret int cmpsl jo cmpsl mov mov lcall and xchg pop lods js fs js push mov enter dec xchg jge push sub repnz sarl push sar mov popf push test xor adc (bad) ficomp add imul pop sub sarl outsb inc xor mov jle or mov xor cwtl mov and pop push pop movsb in fwait jl jle dec in or int3 test ss pushl push jmp cwtl data16 mov mov mov sahf sub xor xor jno (bad) aas cmpsl mov in and adc sub out jb loopne out pop addr16 inc mov xchg js sbb sbb jge lods negl fs lods push fs lods adc mov fiadd xor xlat sub jle int3 mov mov ljmp fnsave lods (bad) cld int3 inc jl (bad) sti in dec push dec gs mov hlt mov out or insb sbb mov fbld sbb mov push (bad) mov imul pusha jb outsb inc jne add in fildll fcmovbe fstl sub jno jns lods icebp fild (bad) mov das hlt cmp stos jno pop call jp out loope xor outsl popa inc mov ss insl lea jl enter aad sub jae in lds in lea repnz popa xorl mov push sub mov roll ss jno xor pushf aad ss test (bad) cs fwait (bad) cld pop aad (bad) mov inc jmp cld xor sub aaa inc push cmc xor mulb lock test (bad) xchg xchg push xor mov and push add mov sub pushf xchg test es xor pop andl xor mov (bad) cli fimull add ljmp faddl pushf insl and out mov mov nop movsb pop in add inc call jp jns iret lahf xchg pushf scas arpl dec imul mov aam fstpt xor adc and mov insl cs dec je sub push mov mov cmc adc mov or movsl das loope mov andl js mov xchg (bad) out mov imulb sub mov scas cmp mov mov sbb pop and sub jle xchg xchg xor mulb fcomip and insb jg or fs jns cmp inc xor sahf repz and loopne insb loop inc sbb mov jb cmp mov jg adc cmp or push testl push mov movsl lret mov push ja jp nop (bad) leave insb lret and push mov popa sbb movsl out and jnp jo ret xchg mov xchg lahf gs jecxz inc push outsb (bad) fildll push push pop sahf dec mov adc or lahf (bad) mov popf out iret imul mov fistp cli or lods cmp dec aaa sbb lret jno fmull test push jg scas lahf jmp scas nop (bad) and cmp jl pop hlt popf repnz popf notl clc cmp stos mov aaa dec push outsl je sub adc sbb cmp test aad movsb (bad) cli (bad) xchg push ss sbb mov lahf je mov pop test xor fidivr (bad) xor stos hlt jmp cmc jb lcall sahf test sub je mov jg incb jns hlt sbb jno jne shl pop pop and push aam mov dec sub dec pop add push aaa imul in adc add sub pop (bad) xor js call aaa inc test repnz inc cmp (bad) stc jo dec aam xor sbb nop mov arpl mov and sbb sub and repnz test jbe inc sti add movsl jb mov mov rorl repnz cltd insl cmpsb dec pop fwait mov mov sbb cpuid shlb push push mov imul test cli sti je (bad) mov add cli insb jo adc sub movsb pop pop xchg mov aam sbb lahf pop inc fidivrl jb test loop add (bad) popa pop (bad) xor add mov (bad) xor insb (bad) std pop sbb rcll xchg rclb sbb mov inc xor and ljmp ljmp mov jp inc xlat notb sub xlat sub hlt jge sub xor adc movsb lcall sub cmp mov push jae ret cld lods cmp xchg outsl andl out jmp xchg pusha loopne jo or xchg mov leave push mov aam fdivs inc imul jb fbld sub mov sub jg fstl imul cmp sbb jge fwait jae call jbe xor xor xor xor cmp and inc aam pop xor sarl decl pushf into mov mov xor out cmpsl stos jno mov add jo inc loop fwait mov xor dec push hlt (bad) out lahf mov inc fild fscale inc add add push xor aad mov loopne pusha adc (bad) (bad) dec cwtl mov repz lock and jns rolb pop ja out fbstp inc scas adc mov bnd inc sub mov adc sub fwait je mov pop jns pop cs xchg movsb enter negl lret stos jae push mov in jmp out repnz inc push insl pusha out (bad) xor outsb inc cwtl repnz push ja icebp scas sub or popa jo mov push jge xchg std mov into cli je out cwtl jmp pusha pop je jp popf mov sub xchg movb jb repz pop repz mov add ljmp mov aaa push or xchg xchg xor fwait jne mov dec aam jo sub jb (bad) decl mov repnz cmp push sub xchg sbb prefetcht1 mov pop jnp inc sub (bad) mov insl into scas xor xor sbb adc addb fsubl shrb ret mov cmp pop xor or cltd sub push jmp clc mov mov shll sbb aas inc adc cwtl push mov cli mov and out ret adc movsl push addr16 dec sbb movsl arpl mov xor jecxz stos dec pop xchg xchg cmpl pusha mov jmp inc pusha dec hlt test sbb sub push fsts push and xorl (bad) jmp xor sbb fsubl scas sub lcall xor movsl (bad) lock push jg jo bound das into jl mov jl mov cmp inc pop xlat mull inc shrl sub ret push shll mov xchg lahf jecxz pop and jno les mov sub insb mov jae test sbb (bad) pop push subl jmp jecxz sub nop mov mov or test fcomip dec mov fsubs jge xor fcompl mov in not mov and cmp mov incb mov adcb add movsb cmpsl sbb mov mov sbb es lea cmp xor aam movsl adc ffree lds jecxz push pop xchg xchg mov mov lea stos mov jge sub stos mov adc (bad) cmpsl lea mov mov sbb aaa insl sbb out ljmp add sarb scas or aas loopne jne jmp cmp repnz fdivrs xor out lahf sub jno ss arpl pop xor sti mov sub mov jae xor cli push pop mov lods sub subl inc push gs mov sub jb add adc insb fistpll outsl jo mov mov fdivp out outsl or mov iret fadd dec xor fcmovnu in xor mov xchg jo clc pop loopne sbb popa adc in in popa ljmp mov aad push pop lea push cli push in mov inc pop and addr16 aas insb scas xor negl push jnp mov ja fildll xor and outsl jmp xor repz xchg ss xor ds pop daa jp icebp das sbb cmpsl out fbstp mov mov mov jno xor add and clc repnz or sbb lock mov and adc pop sub imul or and add sbb add std jecxz and out xor fwait inc adcl xor mov outsb out sub icebp das mov sbb jge push lods call cmp mov mov xchg add mov movsb sub aaa aam xor in movsb sysret inc pushf aas pop mov insl insb xchg cmpsb sbb adc repnz xchg jmp stos (bad) cmpsb sub outsb jle push inc cld test out adc test mov (bad) aad movhps xor pop sbb mov dec sar add jb add out test inc mov (bad) jle jne xor repz lea mov roll jb dec cmpsb fwait int3 stos sub sub push es shrb mov cmp adc je add lret push fwait pop cli dec (bad) dec in imul fs pop je dec and xor ret sahf jno sbb shrb and jl pop xor inc scas mov rclb sbb add out mov xchg jb mull out adc pop sti xchg adc push scas cmp push outsb sbb out aaa das ss std mov dec test aaa cmc jl pop mov outsl lods sub mov mov mov out xor aaa (bad) xor adc loope fidiv popa lea in test xor mov mov add xor add xchg pop test cmp xor inc mov push aas shrb jle aam std clc sbb aad mov das lods sbb ret icebp xor movsb cmp repnz movsb xchg and sbb out jmp fidiv sahf cld int movsl (bad) dec or insl lret inc fnstsw mov push cmp pop std push pop mov (bad) es shlb mov xchg in hlt xchg push ljmp xor je loopne sub lea jno cmpsb sub outsb jge lcall (bad) sub cmp mov inc outsl leave cmc dec ds xor loop sti pop into arpl add stos sbb jmp mov sbb and adc (bad) adc cmc xor (bad) lahf mov sti stos cmp lret (bad) lock adc xor push or cmp sub xchg jmp jb or repnz js roll add dec or popf popa and lock inc pop jo push ljmp jle push jo bound jg dec out imul jge push cmp add push xlat mov jle push (bad) bound imul adc dec in adc ja push mov hlt int3 nop call aaa fistp and add mov push mov addr16 push cld add and adc push (bad) xor sub cli pushf fdivp dec inc arpl mov inc out jb xchg test sbb mov pop adc push and in imul std sub hlt jl movsb (bad) pop push insl sbb call repz xor jbe jae mov pop jg xor and ja jg pop xor xor cs sbb adc and out into (bad) xchg pop push call jecxz inc (bad) xor or jp daa out inc test and jae mov popa push inc mov add out ds sbb nop movsb jae imull xchg movsb (bad) (bad) push sub sub imul stos cmpsl jmp xor es mov pusha (bad) lret fwait jns ja cmp ret add fucomp mov pop in scas xor or cs mov gs ljmp jnp ret icebp fbstp dec mov mov data16 add ss (bad) mov ret out imul in sti cli stos dec push rclb aaa and pop xchg cmp add push xchg add xor xor sbb scas cli adc in pop inc jecxz and jne call aaa push (bad) int sbb shll movsl adc push (bad) and cli je cwtl mov mov cmp ret xor inc dec add les adc iret in das sub imulb and sahf adc cmp (bad) push fisttpll lock xor mov sub fnstcw imul jge inc cmp cmp xchg jl xor mov inc aam sub push fbld and dec int3 sbbb mov xchg repnz andl and fstpl call xor cwtl and jb nop loop ljmp pushf mov and add mov pop mov sbb sbb dec and mov add mov clc aam push mov cmp cmc pop cmp cld xor outsb sti repnz ds add xchg push out es test and push inc pop fistp clc dec rcrb fcoml in push fildl add subl lret mov push in adc pop popa adc hlt hlt (bad) push jl je insl std pop lods scas aam mov and push (bad) xor movsb rcrl or push and add (bad) jo js sub and aas adc mov push xor je out mov out shlb cmp sub push inc ljmp push shll sbb je jle outsl cld mov mov (bad) les and mov hlt in outsb jle cmpl sbb and or (bad) mov add jb or in push sub sbb (bad) fnsave add dec cmp aas mov sbb fs adc call push or mov (bad) (bad) jns cmp push jb mov jecxz icebp imul nop outsl lret pop cmc pop mov ret dec cmc lods loop add inc xorl inc xchg inc cmp out aas inc push in shll aad mov subl jns lret pop jns cmp clc nop out dec je lods push inc mov jnp pop push mov push outsb add sbb sbb and sbb fisub dec enter mov movsb jecxz mov xor lret loopne push pop fwait push mov mov mov ljmp outsb jge cwtl xor sub add shr sbb repnz dec mov dec cwtl mov js jge mov call fiadd push in cmp pop mov and mov (bad) loopne sbb call mov outsb cmc pop adc jb cmpsl mov adc test dec enter and int3 je dec iret ficoml ja xor fnop mov xor xchg push rorl inc insb sbbl lret in lds and (bad) xor mov adc dec call xchg add lahf leave (bad) and cltd adc in push imul cmp or cmp push jle push hlt sbb rorl jne insb push adc and pop scas or xchg mov fimul adc pop xor ficomp jbe cmpsb ret mov adc popa mov mov movlps or or jno out cld sub ja mov xchg out and cs ret or sbb cmc repnz mov jne hlt icebp fbstp add dec lcall jno ss lret shrl and mov movsb test sub repnz sahf scas hlt test push out push dec jae cmc and xchg movsb push repnz xchg adc or adc in inc push and dec lahf dec pop popa xor je dec cs adc inc jno aam jno imul mov sbb mov in cmc lcall jb adc adc xchg ds ljmp nop dec hlt aas or cmp and xor negb push mov jae arpl je or jl sti sbb adc jbe fsubp aad or stos cmp sbb aaa adc movl (bad) scas cmp pop mov mov cltd push aam mov shll sbb jae repnz mov sub aam xor pop inc mov out loopne lds inc popf jno or mov daa sete leave push stos cmpsb dec or sbb cmp or in nop sub les adc sbb adc pop je lcall adc push je jge popa nop aaa sbb sub mov cmp stos lcall xlat inc in mov outsb mov jle sub clc shll repz (bad) maskmovq negl ds cmp call int3 sahf fdivl jno in inc lods jbe roll mulb mov popa adc mov or aas cli inc mov mov ds or in mov xor aaa and loopne sbb mov xchg pop sub cmp into aas fistpl lea outsb loopne test xchg (bad) xchg adc xchg out addr16 mov xchg mov push cmp cld jp (bad) ffree je mov or pop repz dec or fwait mov je mov cmp mov inc in inc fildl loop cltd movsl mov ja,pt mov insb repnz sar sub jnp iret adc xor (bad) adc inc adcl mov lock dec mov stos bound lea mov sbbl add cmpsb imul in jecxz aad imul xor movl xor ja pop xor mov xchg nop mov sbb mov jbe xlat adc int3 ret dec or (bad) in sub adc repz add or xchg (bad) xor icebp iret mov fcomp sub dec hlt test std shrl mov insb scas xor clc sub or insb pop je sbb jae sahf sbb outsl push test xchg movb or aam movl push jle jecxz into fild push addb fucomi (bad) cli jne xchg jb movsl jp sbb daa rcr jo xor pop xor ja movsb push aas in sti xor pushf jg hlt sbb rcll mov or insb (bad) cld jne cmp test jl cli xchg or std fistpll sbb fwait mov sti test stos pop lock sbb xor iret jae xchg push ret (bad) xchg ss mov push or jne xorb shl cmp xor xchg add ret adc mov loop sub pop test cmp push mov jb adc jp fs lea xor cmp adc jmp scas repz mov inc sub add in leave sbb fistp out and imul mov dec in imul and fwait adc mov arpl mov addr16 fstpt xor mov xor sbb repnz and adc in lock lods lods aam jo mov ss or xor ds js and xchg repz cmpsl lret add fdivrl dec xchg cmp sbb mov pushf pop mov insl repz mov mov cmp sub das xor adc into mov lods jo ret fsubp or xlat gs adc lds je sub sbb jb rorb add dec ljmp arpl in dec push clc jo cs xchg cmp psrad xchg shr lods repz arpl xor divb cmc sbb xchg pop (bad) int3 lcall xor unpcklps je cmp sub cmc in mov cmpsl movsb dec mov dec (bad) bound (bad) xor loope and pop and fs cmc loope adc xor nop mov mov loop pop mov xor out jp stos jnp idivb lahf inc jno inc fsubrp mov push cli lret pop gs outsl push push inc les je mov xlat mov les sub into in test cwtl test fmuls mov rcll mov mov xor leave hlt icebp push shrb rorb call rorl push lods out insb xchg movsb jge dec mov xchg mov mov sub dec mov jge adc pop dec aam (bad) adc xor repz cli mov lock ss mov dec and out sbb or inc or std cmp add jno je xor int shll icebp cld mov push adc jne sub cmpsl (bad) jb add or hlt pop mov test aas les test xor and adc pop push jmp dec test sub mov jb aam or popf jmp aas pop sub adc xchg add les sub jbe,pn sub out sub repz jo mov repnz (bad) mov iret stos pushf fist inc xchg mov mov xor (bad) mov xor jge mov or mov or xor mov cld into adc loope dec in arpl js repz or test lods (bad) cli cmp cwtl ret sbb sahf in xchg and (bad) push in sbb or clc lcall push sub cmp add outsl sub and mov movb jo out clc xor dec mov adc and sbb stos fisttpll shl push sbb jl (bad) aaa jnp fnstsw cmpsl pop mov jg mov adc (bad) mov sub mov mov icebp adc (bad) nop adc jecxz xchg add sub insb andb xor lods out (bad) xor xor push adc loope sub push jo xchg adc xchg (bad) xor adc mov pop adc (bad) jo and pmaxsw shl push aam aaa jg push adc subb (bad) rcrb mov pop bswap rcl clc loopne xor push adc jb sbb (bad) xor dec adc push or shll xor or imul notb xor push lock bound jnp (bad) pushf or aaa xor je mov xchg inc movsb sub mov cmpl xchg mov pop negl gs mov xor fidivrl or rorl (bad) jo xchg in mov fld jnp lods jb inc jb imul shrb sub aam jnp ficompl xchg (bad) jmp cmp mov mov in test xor add bswap adc out test jo xchg mov popf mov add jns loop xchg ret xchg pop repnz mov test outsl add jp ja cs jae fldenv jno push fcompl scas xor (bad) popa fldenv in jb (bad) xor hlt add outsb xchg pusha add je loope ret add insl movsb mov mulb mov ss adc ret movsb cmp cmp icebp bound cld mov out sub mov push push and outsb xor sub bound xchg xor xor xchg stos xor adc lea daa or pushf bound js adc xor repz fsubl mov xchg push inc add adc mov adc inc xor mov mov jg inc xor cmp xor pop xor mov lock push push xor jb mov inc (bad) hlt insb (bad) cmpsl lea fwait add mov outsb subl xchg cmp jg mov repz and ret sbb pop in mov jb hlt stos dec xor loope lods and jmp dec mov push xchg sub inc mov (bad) and std lods xor hlt and aas mov cmpsb inc push (bad) (bad) loope xor lret ja and pushf and xor shlb or add xor fbstp shl scas push (bad) and jge mov (bad) or sbb adc mov xor fcomps nop (bad) xor hlt xor aam loop fcoml and xor mov dec ja imul nop or inc ljmp mov xor mov cld hlt adc insb mov add xor stos xor xor hlt sbb insb test iret ljmp jae ret sbbb jae in add sub lea mov pop int3 test mov or insb add adc add test cli leave pushf jae insl cmp xlat dec rol mov popf adc add lret or sbb stc pop mov xor pop hlt inc mov gs or jo add jno fdivl stos pusha xchg sub and subl add mov push cli sub jmp icebp divb test and test stc cwtl cmc aam xor andb rorl jae (bad) int3 or add and inc out andl and cmpsb push (bad) rorb (bad) mov test cli mov jp sub lea roll push inc and inc iret pop push push arpl ja push mov iret inc inc fdiv (bad) test sub sub test jo mov clc lret mov mov daa xor adc jecxz xor sub xor push movsl mov xor scas fistp xchg inc sub dec cmp int rcll test sbb mov sub jb std pop outsb fbstp and imulb sbb repnz dec inc and pop ja into fist fsub jg (bad) xor std imul sti aaa cmp hlt push and and test xor xor lcall mov es cltd mov repnz movsb jbe cli sbbb cmp xchg fdivrs fisttp inc mov sub push ja add and or mov xor stos sbb test jb jge adc lods pusha out pop sbb stc xor outsl outsb inc or test stos lock inc jp sti and lcall push adc and test ret into lock dec test inc outsb sbb dec subl mov adc jmp jo push xchg mov jecxz cmp cmp jmp jg loope push imul arpl gs cli and inc dec xor cmp mov mov xchg pushf aaa xor sbb jnp cld (bad) mov inc and fildll dec jle sbb pop cmp push inc sti cmp imul (bad) nop or xor les inc fwait das push mov in (bad) xor in sahf push and addr16 sbb mov ss adc les (bad) aam out cmp jb pushf cli (bad) mov jp jae jp push mov push jmp mov lret fcompl les cmp inc cli inc jo inc add bound rclb jb xor cmp dec sti call xor aaa add out mov sub inc xchg into jbe mov xchg mov lods int3 xor (bad) stc push aam ucomiss mov arpl ljmp aaa xchg sahf mov lods sbb mov mov in jmp xor push in adc fistl mov pop jb xchg sub (bad) xor adc shlb xor lock add out movsb or push lock add or aas mov xor lods add or mov xchg add xchg add adc xor std mov xor arpl mov mov or mov sbb dec push add sti lods add mov add mov cmp or jmp mov int3 cmpsl or xor test mov cmpsl mov es xchg cmpsb aaa mov and pop adc xor jecxz xor or and lods (bad) xor inc call dec or xor cmp cld xor rep adc xchg mov mov cmp jmp mov fistpl in sub dec aam xor cmp ret and and adc fbld pcmpgtb pop lods push xor push push mov clc push add xor sub arpl (bad) arpl sbb sub push mov lods xor sub out test add adc and sub lds in inc test sbb cwtl push xchg adc add dec lock iret imul js and insb push repnz jecxz inc push and nopl jp lods and imul adc dec mov inc (bad) sub or or stos mov jg daa jne mov loopne hlt jge call dec or adc mov (bad) mov mov cltd xor bound or cmpsb (bad) add bound pop cmp out dec sbb sub mov push loopne out (bad) mov push pop pop inc xchg jbe sbb loope loopne sbb sbb and xor push popa sbb and xchg shrb dec test inc popl loop or add clc dec gs and xor sbb out pop pushf es clc adc push push jecxz in pusha in push ds xor mov inc (bad) ret adcl out clc dec jb mov movsb jmp clc sub lods stc lock push push (bad) xor loope je cwtl add xchg adc adc add fs adc sbb (bad) mov insl add aaa pop cli inc pop lahf adc or stos xor adc out or cmpsb out fldenv xor inc mov data16 sbb xchg and or or and jle or xor cld pop rcrb xchg jecxz push clc loop mov sub add (bad) sbb fbld stc and fldcw sahf and cmp aaa and in lret jge lret mov jb cmp fmull mov enter adc out add mov and test call movsb loope adc pop sahf stos sub cli ret jb popf pushl (bad) mull sub mov sub ljmp pop adc das mov clc lods aaa mov jecxz mov jecxz adc movsb aam into inc sbb movsb sub lock movsb sub xor rcrl ja scas rcrl jno movsb mov rcrl lods ja aaa cmp sbb pusha sbb jae mov mov adc sbb xchg or add push sbb and and rcrl mov loopne,pn sub or insl ljmp sti mov mov sub sbb pop or scas hlt lods mov or (bad) movsb jl add xor adc das cmp insl sub fs (bad) and int3 mov pop mov lods aaa xor ud2 jmp cmc mov and xor jecxz xor fwait adc ljmp out (bad) pusha adc xchg adc pushf push mov xor and or mov jge and sbb call xor cs pop (bad) and nopl or sbb loopne jmp out mov adc stc in jge data16 es aam icebp loopne stos cmpsl mov mov adc sbb and (bad) jmp mov das lock movsb add adc cltd and xchg sbb and imul js stc xchg shlb lock aaa out ljmp repz rcl data16 movsl jecxz divl and cmp movsl add mov dec cs mov pop and (bad) ss push rol and pop sbb mov jp pop std mov roll fs pop add add add repz add shrb pop and jl xor xchg and repnz movsb enter xor pushf add xor lods rcrb (bad) sbb mov lock cmpsl jo mov in in and and aaa sbb adc and fnsave shlb push pop or ljmp shl adc dec shr inc mov daa mov and mov mov mov rcll mov jl mov aam xor mov or sub call fsubs data16 into int3 (bad) sbb push ret xor and mov std jle lock test adc std pop push std insb invd pushf ds (bad) fldl adc push mov and mov xor or mov xor or mov and and int3 pop ret mov jmp aaa xor mov outsb popf xchg lods sub out mov pop lea out sbb loopne pop xchg mov sbb mov addr16 into hlt movsb jg int3 sub mull mov loopne xchg sub add mov stc lock aas adc and xor das xor xchg aam popf aam sbb clc inc lods js sub imul xchg stos xor pushl mov sbb inc jl pop adc popf xor jbe push pop xchg (bad) neg andl out push push sti gs repnz push in sbb xor cwtl mov lock inc std push aam jae xor test icebp stos push movsb cmpsl addr16 repnz inc mov ret and mov sub cmp loope xchg int3 sbb (bad) mov inc bnd scas or int3 das xor stc xor push cmp cli sub mov aaa add pop in loopne jo or pop lcall into add adc imul movsb ds repnz adc pop push mov mov stos sub incb lods aaa (bad) mov out sti into repnz cli and adc jb (bad) xor into xchg (bad) dec add jo xor movsb outsb mov clc inc sub lods mov rcrl leave adc mov inc decb enter outsl push or xchg jbe into nop out shrb clc stc or or dec push gs or pusha (bad) xor xor push outsb jg add out jns (bad) fldl or call fstl xchg mov cmpsb push cld hlt mov je (bad) inc jl rolb clc or pop lea and jp xlat rcll cmp sahf push sub mov jb stc fsub pop xlat sbb test stc cmp movsb repnz mov cmp xchg mov mov pop aaa dec jno jg ret sbb adc cmpb push lea jne cwtl xor lea btr test mov clc pushf add test adc shr mov cmc test call push fildl sar sbb or push adc lods bound dec test scas (bad) lods fwait add and fdivp dec fmul pop sbb cs jg daa call out (bad) pop aas shll mov call jnp aad fwait jns dec sahf ss dec pop inc lret sbb jae jne mov cmpsl dec sub and imulb sub lds sub mov mov lds cmpsb push sub inc pop lods pop and xchg lds dec xchg xor lret jno jle pop jp push push xor xor fs insb add lods repnz pop and xchg aad sbb push xchg sub pop outsb mov lock adc mov adc and add or xchg movsb inc popf and decb or push push es sbb sahf mov fsts or push mov push fbstp add test sbb and out push out stc mov (bad) repz in inc fstps inc jnp fwait inc cli dec lods cmp pop ret das and xlat addr16 (bad) mov (bad) loope adc mov mov call inc pop cmp es arpl pop insl jno jge jmp and into rcl movw sub call pushf lea je test cmp stc jns add bt test pushf cmp push lea jb cmc jmp test push mov call mov bswap bswap movsbw mov push jmp dec mov rcll bound stos icebp push sbbb dec mov push inc push add loopne xchg out cmp jecxz jl jb (bad) stc or xor or int cwtl test adc imul das push out fs scas addr16 sbb cli or jecxz xchg stc jmp mov lahf aas inc or xor add mov sbb int3 ja and shlb inc mov lods gs cmp cmp pop cmp jno mov iret inc fmull inc push (bad) int xchg sub jb adcl ffreep (bad) jno jl dec add mov pusha call pushf push lea ja and push sub and add add pusha mov shl mov pusha repnz pushf pushf pushf call inc popf subl out adc pop scas xor leave sbb (bad) mov pop or jns push jg mov xchg mov loop dec ret pop ret add insl or mov rorl das adc std stos push (bad) lock icebp std std loopne fisubl fstpl xor cltd ja mov out and adc jne cmpsb sbb xchg test jge loope pop cwtl pusha fwait arpl sbb mov cmp call sbb and push dec push sub adcl jns sbb xchg (bad) mov lea pushf jmp mov lea jne mov pusha pusha pushfw popw rcr rol pushl jmp insb or ret int xchg out packssdw scas setle or (bad) mov sbbb mov shrb mov lock loope dec fsubl xchg enter fldl sub jmp dec mov movsb outsb xor jge test (bad) aaa test mov fs sub cmp dec cmpsl mov (bad) mov inc sbb repnz lcall ss mov mov mov pop insl addr16 bound cmp shrl js test data16 jnp xchg xchg leave (bad) loope (bad) aaa (bad) outsb shl jno jp pop or fwait inc popf lods push dec push xchg jp ret insb fdivr (bad) imul mov mov xchg loopne inc jnp cmpsl mov cmp dec pop (bad) pushf mov push inc pop jne jb add rcrl push lahf xchg aam inc push push loop lcall loope fstpl cwtl push pop mov inc mov fsts inc gs ss aas (bad) js js xor inc aaa popf mov mov test sbb sbb lods jno jge xchg cmpsb add lahf fistp out imul xor dec jne jbe jno jns add add mov std sub jnp clc xchg pop sbb add out xor and pop mov out nop dec xor out dec xchg sti adc cmp cmp inc aas mov push or imul aad cli cld pusha mov iret nop mov lret mov rorl aam scas out rorl add lock xor cmpsl push adc repz setae inc push dec imul pop mov ret inc cmp sbb jno js movsb iret outsl fisub xor adc xchg jb mov xchg lods adc adc gs cmp mov add pop pusha jle inc xor cmpsl dec sbb sbb sub gs imul inc or mov adc add sub push js cli lock add mov pop inc xchg pop jbe pop xor cmp hlt and inc jne pop mov sub aas xchg adc xchg scas inc jns xchg xor outsb lock or shr mov push and das adc popa push dec adc int3 mov std pop mov mov or fiadd inc dec jp sti jmp or xorl mov fs mov subl push xor mov out push and xor add dec adc jmp negl xchg das (bad) mov xchg daa (bad) dec shll mov mov test fcoms inc cmp iret jp xor push mov stos mov pop es mov insb push inc fmuls insl mov scas xor sbb stos je lods add movsb cmp mov or cmpsb fldl (bad) or add pushf inc jnp fadds fisub fstps xorl mov sub jo xor push push out (bad) sbb xor jg,pn lahf aas cmp inc fdivs sbbl cmp push cwtl pop (bad) fmull sbb cmpsb cs je mov fsubrp pop push sahf dec lods xor dec xor inc clc mov mov sub in mov (bad) pop push xlat daa cmp gs dec int3 (bad) jb shr (bad) ror or clts out hlt inc incl push data16 nop sar loope out fcmovb (bad) (bad) mov out lahf xor fiaddl data16 mov mov push mov insb lds cli iret ss pop jge orl jg jbe into scas iret sbb add jp push pop push jp rorl cwtl inc push jno jbe shlb xor jp mov xchg lods sbb mov adc jns jns int3 xchg and mov cld push sub (bad) push xchg inc mov push push jns ficompl mov adc ja rclb and movsb jae cmp and mov into aas int jmp mov aam xchg fldcw and jns mov inc sbb add in xor ficompl sbb cmp mov mov cmp sbb add cmpb imul bound loopne xchg push enter fistpl in (bad) lock mov push ret aaa inc pop (bad) sbb shl sub je fldl mov mov mov push (bad) movsb adc jmp pusha jno pusha mov rcrb mov xor add or dec mov sub or or dec or int sahf repnz sub ret adc mov sbb inc mov sbbl mov decb out push adc pop je xor and call pusha call test call add jmp jl push call popa out (bad) or xchg addr16 mov mov push hlt cmpsb sbb and sbb push push push mov mov sbb dec pop sbb les mov pop inc jge rcll out div xchg adc push icebp pop jnp mov (bad) jbe pop loop in imul nop out (bad) out (bad) (bad) mov ret sbb push (bad) pop popa mov cwtl outsl mov ret jmp pop mov out push push xor aam jp out xor iret iret ss in xchg mov cmp xchg enter fwait enter mov add ljmp pop (bad) jl push inc jle mov mov pop jae jne cmp cmp push pusha jmp mov mov movsbw call movl pushf mov push lea jmp aas ljmp cld sarb pmaxub es mov mov dec adc dec out xor rcr pop in fsubrp fisub push pop (bad) jb dec aad movsb mov jo dec sahf add push popa aaa cmpsl mov mov daa dec aaa cmpsl dec sti dec insl fwait (bad) sub pop idiv xor jne sbb les dec mov leave jbe jmp xor mov mov or popa test pop imul int lds mov test jne cmpsb sbbl push out mov dec test (bad) mov xor and jb mov jnp aas inc mov xchg ljmp cmp jl pop (bad) dec add sub js push xor dec je loop (bad) sbb jp jp sbb sub cli jo jno mov mov mov push test pop lods mov sbb inc nop dec pop xchg lods jns mov lret imul mov push sub stos push mov scas jl pop (bad) xchg sbb test and or and gs push popf sub jae dec cmc mov cld inc xorl jp mov push mov push or sbb repnz mov data16 imul dec cmp pop adc mov pop ret add sbb mov xchg jns in icebp inc std dec xor sbb xchg sub inc and icebp jecxz push push cs push inc add fdivp hlt adc dec xor xchg addr16 mov std mov pop sub aaa out lock jp inc loopne push lret loop pop and pop lods xor aaa sti and je popf add or clc push loopne adc jno jl mov fdivs std push mull cmp outsl iret out mov lahf inc lock dec xor mov fwait lods je xor adc mov outsl inc fldenv imul push mov andl inc add push pop data16 xchg add mov dec je pop inc xchg int3 loope cmp aaa mov (bad) and (bad) pop sub pushf lock cmc dec xchg pop xchg in inc sbb push mov mov xor sub push add lahf es insl shll in out (bad) jmp add pop jno jg jb push push call jno lahf add es mov daa and inc jbe lret je je pushf sbb jge aad int lds mov or pop outsl sarl mov mov and inc cld sbb inc fsub or test sti and outsl lds jne jbe sarb mov je (bad) aad cmp push dec pop mov sbb (bad) testb lret pop inc mov jg iret dec out cltd lea pop add mov xor cmp (bad) xor imul pusha pop fs cmpsl pop lret popa jb mov repz das ret jnp repz fprem1 fwait test sbb mov xchg sti movsb in iret loopne or aaa adc inc jle adcl push push or fadds push lods mov (bad) push add cmp nop mov sub cmp jp push stos jbe fisubl sub sbb and mov push xchg rcll push das frstor xchg aam cmp push mov std outsb lock add jnp xor ret aam call cmp outsb shl dec je stos js cmp (bad) mov pop mov imulb push lahf sub mov incl and xchg xor dec mov sub rorb pop xchg cs (bad) jno outsl inc dec outsl push fidiv or mov sbb add test (bad) xor insl repnz ljmp sbbl hlt sub je or mov jge inc jo icebp test insl sti arpl imul (bad) (bad) icebp scas sbb or ffree fmull mov cmp movlps std inc in mov dec rcrl inc inc pop jae stos mov jl mov aas aas pushf cmpl pop add mov cmp mov inc sbb pop and imul leave (bad) mov xor jl (bad) cmc jmp pop bound cwtl jno outsb jl call repnz je dec push mov lret test and in out xor sbb jbe leave mov dec or sbb dec ss lea adc or pop fisubr xor and pop out daa (bad) aaa loop repz daa jns push push loopne adc and dec adc pop in in sbb cmc jmp loop insl addr16 mov adc out jl jl dec movsl sbb mov cmc or rcrb iret je sbb sub (bad) jmp popa (bad) (bad) jae mov pop pop pop ss sub mov mov xchg mov stos mov xor (bad) jae lods mov or insl (bad) xchg sub cmp fdivrs jg cmp jns (bad) pushf mov enter sub add adc pop mov pop sarb xor cmp inc imul scas out add push cwtl out js lods lods repnz push fs fsubs clc out popa xchg leave dec (bad) sub jge add dec xchg xchg dec insl mov or loope jne inc stc cmc dec pushf insl out dec sub fsubr pop inc push lds es cmp (bad) shr jne call push sbb aaa daa in push mov push sbb ljmp cmp inc mov out nop rcr push sub incb sbb std rcll fadds sub cmp orl push mov movl push jmp bswap lea movzbw pop push pop bswap not pop xchg call add add add mov add add add add add add add jbe add jbe add jbe add sub add sub add sub add sub add add add add add add add add add add add add and and and inc ja add and push ja add and xorb mov add jae popa insb insb add fs gs inc outsl jne je jb gs push je imul gs arpl jb add outsl js inc insb insb add jb imul add insb outsl popa fs gs inc outsl jne je jb gs push je imul arpl outsl js pop insb insb add mov test adc (bad) xchg jb,pt imul in fs jl add cmpsl pop sar cmp mov daa xchg xor ret pop mov and pushfw scas add (bad) inc es mov sub cwtl mov lahf ret mov cli pop xchg arpl adc gs in lret call jnp hlt dec jne ds and cwtl lahf lret movaps push mov in rcll push xchg jl mov retw jae jbe pop mov jo and in mov sbb mov mov stc lcall outsb push adc cli dec loope pusha mov rcrl loopne test movsl jb je (bad) dec pop mov sbb or loop sub xor sub dec push imulb dec decl jne xchg aas add pop push scas mov imul mov pop int3 pop shlb imul sbb sbb imul in or repnz inc pop fistp aad or mov cmp ror push test adc test dec add (bad) icebp mov add and out call imul aad or inc out inc out inc pop faddl sbb pop cmp adc jno dec lcall aam movsl mov fnstsw adc movsb dec ret mov in orb jecxz aam sub fwait mov addr16 mov jno (bad) outsl mov push aaa ffreep mov lar fdivrs dec mov inc xchg rep fild cmp and sub push mov lret stc out jecxz fs xor (bad) mov fs das repnz push xor lcall andl mov xchg fmul push xchg dec jp push add inc mov mov push cmpsl inc or jp mov sub mov lods int test aad lahf scas or pop pop sti jle lds shlb push inc pushf cmp jmp push inc push xchg pusha insl lcall icebp pop xor ja repz mov (bad) fstpt scas (bad) xchg add mov mov mov clc mov adc push cmpl popf jnp lds xchg int pop xchg aaa (bad) push or or sbbb fimul dec adc nop cmp aas inc scas push mov push cmp clc iret xchg lret pusha in mov fldlg2 mov stos lods (bad) stos push dec inc and sub jae enter loop dec xor add cli out sbb rclb dec mov rcrl inc repz scas xlat aad sub inc lods fildll sbb sub insl int adc int3 iret sar and lahf pop jecxz pusha fisttpll sbb sbb aas mov dec or mov sub into jl scas pop das jbe mov cmp mov (bad) daa pop jl les dec (bad) je int mov loope add jb and out cmp jno neg into out inc into loope pop xchg js repz popf inc cmp push push imul pop lcall mov mov sub cmp test scas cmp fmul cs sti pop xchg cli (bad) dec mov loop mov mov dec insl inc dec je loopne dec and divb imul adc scas outsb jnp push out clc pop into adc cs movsb xchg in mov push xor jae mov cmpsl stos inc mov orl mov jns in mov out in sbb aam add dec add jb ret pop push fisttp xor dec jl cmp adc icebp sbb inc pop pop mov push test push mov mov loopne mov mov cmpsb roll adc int pop movsl (bad) (bad) std into add push test jmp sub jne fucomi sub daa xlat fldt adc mov ds jp jb cs sub and pop adc adc out dec andb sbb pusha cmpsl fsubl or in dec ret mov cltd loope lods or pop shl in repz mov jmp cwtl scas mov mov jns dec stc cmp pop cmpxchg sbb inc mov lret (bad) and in pop mov rcrl xchg xor andb sbb mov es ljmp xor sbb sub hlt dec jge aaa pop ror mov sti shrl cmc pop cmp adc mov jb pop jns daa ss sbb loope popa leave outsl or sahf test mov jo jge cld sub in roll mov pusha add cld push in cmp (bad) or nop stc (bad) dec jae mov sub into and xor cmp push push sbb push dec sbb mov in dec aam cltd mov sub imul mov icebp add xor leave xchg adc mov jge rorb mov xorl push mov enter aaa mov and in scas pop ljmp add movsl dec mov loopne out aad int lock popf push test (bad) push pop cs ljmp mov sbb mov outsl in add cmc sbb xlat imul sarl jmp stos fs and inc fldt (bad) mov mov sub cmp leave mov cmp cs cli movsb (bad) xor xchg (bad) insb (bad) jne sti cmpsb or lret mov sbb es data16 repnz loop mov add cmp mov cmc cmp fs testl push adc mov call mov dec sub mov leave out sbb jnp xor gs add (bad) fistl sarb std sbb out loope adc push enter pusha pop sub jns ret inc cmp mov mov push js cmp pop xchg lock sbb lods repnz push das mov adcl jp mov push in sbb xchg mov mov sbb jno cmp les cltd (bad) xor cmpsb xchg in shr or push leave pushf fwait jg test cmpsl mov push addr16 mov xchg add pop popf fnstenv js loopne sbb movsb rcrl daa add sbb ss scas sti mov mov push inc (bad) and pop aaa jb inc mov cmp std pop pop push push xor int3 je clc loopne xchg xchg sbbl fsubrs mov sahf sbb imul sub (bad) loop hlt xchg lds das aas mov xlat fldcw sbb and pop dec (bad) fcmovb test jmp sbb pop mov data16 mov mov inc jle pop lcall cmp movb mov insl bound (bad) scas sbb mov inc pop push push lret fcompl cli arpl ljmp or (bad) push xor and adc ja xchg jge roll aas out add sbb loope cmpsl xchg push dec neg gs pop flds jge lea xchg (bad) mov je push sbb (bad) or addr16 cmp fisttpl xor (bad) jmp mov dec or insb and jp jae lret out cmp xchg dec xchg fstp sub (bad) call lds lods inc jg dec aas sub daa rcrb lret and test pop and pushf loopne push lahf arpl fcomp jle jp add aad aad pop xor ret bound sbb in mov mov repz fcmovnu ss jmp fnstsw icebp shll out adc dec test xlat xor stos or js jp xchg movsl inc insb jmp popa (bad) adc sbb leave xor adc inc mov stos outsl in sahf mov div inc or sbb mov mov fsubl mov jecxz aam inc imul sahf sub lahf idivl dec add adc jnp,pn cwtl pop outsl mov andl lcall add or mov sbb jp fdivl jns jne mov movsl add fisttp lds sbb inc pop jge fisttp icebp leave jl in push add jmp js or sti rolb fs lods lods sahf out mov iret lods mov cwtl es addl ds push mov sbb sahf cmp es leave insb pusha and mov inc or rorl xor xchg insb jmp fst out ss repz mov lods loope repz cmpsl addr16 les shrb insb cli xchg js fild xor mov shlb (bad) mov imul ja ljmp mov (bad) into push in or dec dec ret inc cmp int inc push jp or add mov add sbb and lret sbb fildll mov bound test xlat and jp ret arpl jp mov mov pop xchg ret movsb and loop stos or and and xor push sbb test jecxz hlt cli mov out inc lds arpl push inc push and jg and rep stc inc mull mov movsb roll mov popa (bad) mov mov xlat test vpsraw icebp imul push push or adc rcrb imul cs insb add add push push dec dec dec cs insb add and jmp clc sar or ret add xor lock sub jl fadd movsb cltd push nop jg xor pop or pop enter int3 iret mov or ja fwait (bad) aad clc gs fsubrp fstl ljmp popf and or jge cmpsb pop pop xchg jmp jmp dec lea inc mull xchg mov cmp stos inc shl push imulb iret mov jne jne shl pop push les xchg mov adc mov sbb fs inc sahf jae stos xchg lds js js ljmp lock lods sub adc cmp xchg imul icebp gs cmp lods aad pop mov ss adc std imul inc hlt dec mov xchg cld ret mov cmp sar adc push cmp cmp in lods fisubr pop lcall popa pop add add xchg mov xchg cmpsb or push lret jl fldt popf ret lods jg data16 ror push outsl ret leave cmp movsb and das jp cmpsb sbb mov mov mov sbb dec cmpsl jg fwait cs xor aad jo out jg (bad) xor inc sbb and or jno pop jecxz mov push lea ja stc add call pushl lea jae push rcr mov adc shld shr shrd mov rcr mov cmc bt clc xor clc clc repnz pusha lea jne sar bsf mov call jmp into (bad) jmp sbb pop pop outsb fidivrl cmp inc movsl jp mov dec pop mov (bad) je das imul jae sti in hlt adc mov cmp shrb push iret push popa xor stc or jnp xchg dec dec (bad) cltd outsb je sbb ja lahf das dec mov sub (bad) xchg daa jp aaa dec sahf and lcall push sbbb (bad) xlat jno pop cmp dec aam aam test sub push (bad) xor cmp call out decl dec je pop in adc clc cmp dec push dec das jo js jo or pop add or hlt add lahf jbe (bad) stc or fwait and add (bad) inc dec mov push insl nop in loopne out jb popa sub mov call and dec aad cmp subl pop sub adc popf mov or xorb xor mov mov cmp mov jno or hlt xchg ljmp mov repnz adc sub sub ret sbb std int3 xor xor ret add ret add xchg movl add add add adc add mov cld xchg mov in pop scas nop out rcr sub mov mov xchg jbe or daa ret pop pushf cmpb dec or cmc push xor shlb cmp cmp jl pushf fiadd push dec mov outsb scas or and out cmp dec out adc jg movsl jbe jbe (bad) xlat xchg push jne inc cwtl popf mov test mov jne lds and lret and push dec mov jno pop push ds inc mov mov icebp push jno add xchg ljmp and enter or out inc mov push outsb mov in ljmp test jg cvtps2pd lds or pop movb aaa lret xchg popa movsb in mov jg std andl xor mov push enter mov test sahf rcl pop insb inc aam lret lcall (bad) icebp cmpl jmp outsl ret fsubrs jns cmp insb jp or mov add jno pop push cmp pop xchg push pushl lea jge push pushf jmp jmp mov xchg jne stos in icebp xchg xchg sbbb test inc cmp push dec push dec jle push popa jb cmp mov xor mov iret jo or or mov incb dec xor push pop (bad) std push mov enter push pop dec icebp mov leave popf neg mov int jg sbb cmp jl or ljmp and (bad) nop cld push push push pop xchg mov cmp jnp push outsl dec incb ret leave mov and push sub imul (bad) (bad) dec aad xchg mov mull js and pop pop and lea jns jae cmp cmp call mov pushl test and pushl jmp pushf call inc inc dec xor cs insb add inc push inc dec push cs insb add mov adc add add jmp add add sub add add add add add add add add outsl add addb add imul add add add into and add add pop jle add add add int3 adc add add mov add add add add add add add xchg adc add add mov adc add add inc icebp adc add add mov scas and std jo add nop adc aad adc dec fcoms add add add fs jae pushf push pushf lea jne pushf call in sbb out push daa pshufw (bad) (bad) test mov das mov or mov idivl add push cli test mov push jnp popa cmp out aad pop pop cmp lahf negl cmp nop dec hlt test insb xchg lcall pushf ret and cmpsl out sub lret insb mov adc inc shrl and xchg jns mov pushf lods gs (bad) insb fildl sub inc jle scas iret scas lock push mov in ror mov xor out lock or push sub sbb jno push sarb and ja dec inc not call not mov movsbw cwtl lea pushf jmp inc push dec in mov or (bad) xlat pop aaa jbe movsb mov mov ja shrl imul lds jl or outsb push xchg add mov sub sbb mov mov and jmp js sbb scas mov jp xchg aam out xor xchg sbb dec push mov bound mov dec push popa mov mov scas jmp in xchg movsb lods adc push jae addr16 jmp add pop arpl sub jg (bad) sbb ret out jo mov call sub xchg out cs jecxz in int hlt dec add cmpsl scas nop xor aas jb push nop popa fisttpll push enter pushw popfw jmp call lea jae clc cmp push pusha lea ja not inc mov seto inc jmp sti jns lcall sbb pop mov int movsl fstps leave in jb jle jp data16 arpl jo int push and out mov imul mov iret add lock inc cmpsb mov xlat add fcoms fist xchg inc dec xor cmc dec cmp xchg stc or loope dec xor (bad) repz xorl loop icebp adc popf add lahf add cld (bad) hlt push lahf mov int fwait xor gs fistpl fnstenv scas inc mov cs xor push lret (bad) in mov sbb lea jne cwtl mov pushf lea jmp movl movsbl lea mov movl mov push pushl popl movb pushf pushl ret xchg repnz ss xchg in push sub inc dec repnz push sahf sbb sar out push push insl jb outsl mov lods in loope icebp repz mov ret pop ss call mov inc mov (bad) pop jle (bad) mov mov mov loope (bad) dec push mov sbbb jl gs arpl out rcll cmpsb fwait push push adc pxor inc push rorb in int3 rclb scas mov scas mov and and fistpll fs jne mov xchg jo cmpsl cwtl inc popf cwtl cmpsb insb shl jno push sbb pop sbbl mov or inc incl into jp scas hlt ljmp or lds xor cmpsl pop fs lods xor dec pusha mov push cli ficompl and sub jne cmp sbb jle insl andl test test or shl add sbb sbb aad xlat leave js cmp lea push nop cmc aad sbb test mov xchg or mov cmp les rorl pop iret sti xchg adc mov pop insb mov popf jbe rorb rclb test pop pusha stc gs cmpsb aam ror mov sbb jno push sahf icebp mov cmpb sub cmpl add fsts cmp jge ds inc in das gs imul xlat sbb popa stc or aad sti or nop andb jle dec shrl inc aas add push call sub ds mov mov xlat jo pop cmpsb pop xchg jae leave je imul add add push cltd movsl and test movsb pushf sti and pop add (bad) jnp std and leave ljmp add adc cwtl loop test xlat jmp xchg or push hlt fwait and pushl push mov sub je mov adc adc pop adc ret pop (bad) gs aaa mov fistp xchg mov xor (bad) cmpsl xlat cmp xchg call mov imul dec aaa dec cmp data16 jo jbe xchg daa mov in dec add push adc sub (bad) fsubrs push cmpsb cmp sub icebp cmp (bad) dec sub cmpsb mov fwait lsl loop xor loope repnz sub iret rolb mov sti jecxz hlt out or hlt dec mov ss xor mov and sbb insl jno push cmpsl call and je movsbw lea pop pushf mov pusha xchg mov movzbw movsbw mov jmp cld sub inc xchg int push push imul sbb mov xor and stos xor pop xor fiadd inc ja js and xchg ljmp pop and xor or sbb jne fstp movsb mov sbb sub sbb pop push cmp negl fildl (bad) mov push in mov mov (bad) pop or (bad) loopne daa adc jns popf sub sbb out xlat inc daa pop lods sbb push dec add data16 jno dec rcrb and sbb xor push pop cmpsl (bad) mov xor mov call xor inc cmpl out mul rorl xor adc (bad) and fiadd or add int3 out pop rolb je push call or mov fsubr push dec pop jae lret insb jb ret into js shr cmp out jl jnp inc fstpl fcompl mov in sub stc js stos into jg xchg or rcr and aad mov das cmp rcrb movq mov jmp xchg dec jns lret sahf add js jno push je mov cmp bsf inc shld mov clc call out cmpsl clc push dec push insb jge pop (bad) imul adc dec adc (bad) lea aam pop cmpsl arpl scas icebp xor xor pop sub add add (bad) mov test or loope xchg (bad) pop xor int std xor cs lock lock fldl jbe mov mov sub add pop cltd lods pop testl movsl xchg call in rolb decl lock or rolb cmpsl xchg aaa out hlt xor (bad) enter add fmuls imul and popf jne les push mov cmp arpl inc mov xchg sub pop or jb (bad) mov pop pop jae iret and xor sub pop inc push pop lods leave xchg cmpsl pop loope and jo ja js lods test jbe jne sbb stc in sti inc mov push daa cmp cmp jp imul push data16 sti cmp (bad) jg fs xlat pop daa push mov and out out push icebp xor lret repz es daa push xchg sahf or lret cs or add push (bad) mov fstl into mov xchg push insl or add (bad) mov jp mov xchg lods add incl pusha cmc shlb adc sub dec adc gs (bad) test lea pusha aas (bad) js insl xchg mov push loop push or mov push int3 pop add push or dec dec push add sbb pop add fadd faddl cmp jo fmuls (bad) ja mov push test adc fcoms comiss sub xchg imul aam pop and xor sbb pop jnp adc sahf jne into shrl push pop add lret lret mov push jnp jnp xchg imul bswap fwait or sub xor ja insb mov mov pop xchg mov sbb jno dec ror (bad) cmc rol cmp cmc cmp movzbw cwtl bswap lea jno lea mov lahf pop call inc addl mov mov or cmp das jae out scas cmpsl mov ret test pop aas push (bad) sbb sbb sbb mov test jecxz pavgb cs xchg prefetchwt1 pusha adc outsl fcoml sbb lcall popf ret icebp xor pop dec daa lods xor mov pop in out repz call push ss jp (bad) jnp pop (bad) sbb sbb loopne (bad) setl cmp jmp and rorl mov or mov inc sbb mul cld cltd and out xchg insb (bad) jno dec cmp icebp dec push dec push subl mov dec and mov adc sub jp jl sbb je test or fisubrl pop aaa inc pop imul jge mov mov pop push inc outsb push andl xor push mov or or fnstcw mov dec test xor lcall and aaa je mov test imul adc inc jns ror cmp ret xor popa movsb cmp add call aam (bad) push fs imul dec mov jno dec aaa pop push subb pusha or cs fbstp cwtl dec nop ja pop mov pop fs or js outsl iret loopne push das gs rcll pusha out and insb xchg aad lock xchg mov cwtl lods in mov aam flds loopne loopne in std jp fsubl mov aaa pop aad std xchg push add or ret sbb cwtl xchg roll mov daa pop mull pop arpl das inc mov mov xchg call mov pushf mov mov outsl lock icebp mov call mov nop jmp xchg dec xlat call pop lahf mov cs mov and dec sbb fs pusha pushf inc pushf lea jmp mov lea ja pushf not not inc inc inc cmp seta rol xchg adc lea xadd mov jmp movb jmp stos in rcrl add fildll sub frstor cmp dec xor sbb mov (bad) cmp mov mov cmc outsl (bad) jecxz sbbb out bnd mov shrb lcall inc roll out stos jo pushf add cs cmp cmp jge insl mov inc out mov xchg xchg xchg das cld shl enter sbb cmp and mov mov inc sbb sahf insl in adc xor push push andb mov xchg and dec fnsave and fs je push cwtl pushl call movl push movw pushf mov push pushl ret mov pushf pusha mov lea jmp jl mov lcall dec je cld insb repz aas jp push dec push sub and je push mov or int mov lea in out js mov pop pop or push mov lahf mov mov push cmp fstpt inc push lcall xlat mov inc cs mov jmp (bad) and imul shl arpl and dec movsb xchg in or jle pop adc outsl ret pop insl cmp or aad xchg lret push sub lret jae push popf mov (bad) sbb pop dec cmc lcall decl imul clc or test nop push mov out shr outsl das fadds mov rorb imul outsl ds out cmpsl push mov adc lock sub add or inc popf popa jb push fild xor fiadd sbb pop outsl iret adc sbb ss dec xchg scas mov xor movl out xor pop inc fidiv jle lcall mov lock pop lret jae xchg mov jo cmpxchg std adc or jne fldl2e add and pop (bad) push pop stos xchg movsb sahf and nop or mov out mov iret (bad) (bad) jno add sbb push ds pop add das imul ret xchg push cmc daa xlat xor aas mov jmp daa in push test pop dec insb and lahf scas mov test cmp dec int xor xor mov dec mov mov in sarl je pop shrb sbb mov dec repnz bound ljmp sbb mov push fcmovb aad or xorl add cmp inc test xor jmp push dec push cmpsl sbb mov negb cmp inc sbb pop mov push mov repnz outsb jle mov iret and pop jle gs hlt dec nop dec dec xor sbb fwait in pop add lea jns pop jp test pop movsl mov or xor xchg leave jno inc dec inc xchg dec dec frstor ret push aas jg stc popa or inc stos pop mov jle cmp jp adc sub jnp push (bad) jae (bad) js inc jmp mov jne imul aad pop xchg out fimull les jns hlt stc movsl gs in sub cmc push push push mov fstpl jno or xchg imul jns xchg in cmpsl or and icebp sarb add sbb sub pop int3 jbe shrl int mov jecxz or mov jg cmp out xor std inc push jno inc stos in add insl or xchg sub sub cmova sbb (bad) call add int fildl inc pop insl mov dec cwtl popa test imul dec mov pop pop dec call xchg in out xor or cmp mov add lret aas sub mov pushf (bad) cmpsl pop jnp movsb in mov fiadd pop mov cmpsb xchg (bad) cmp sahf (bad) cmp cmp xor nop fwait xchg aaa sbb je mov mov push std inc sbbl fwait and std push jno inc push mov mov inc lock jmp decb xor pushf incl jmp imul outsb daa cwtl lods shr or or lcall in pop les lret mov (bad) not add fidivrl dec push push jp jbe and inc les sbb dec (bad) lock out dec nop mov rcrl xchg jmp (bad) call sti and adc dec cli aad push movsl sbb call addr16 jbe jns loop dec dec sub jb adc das pop cmpsl lret dec mov mov movsb imul int mov test out sub inc aam test jl enter rorl sbbl pop inc adc mov mov rclb jl and adc sahf xchg mov jbe inc push bound movsl andl mov dec inc (bad) cmp shr std jmp das (bad) aaa xchg mov push pop cmp pop (bad) jno jno outsl outsl ret xchg or icebp inc push mov cld repnz mov ret adc sub pop jmp (bad) fistpl mov insl xchg adc fsubrl dec push fsubrs xchg adc push adc sbb cmp xchg pop repnz je hlt mov jo jno inc push aas xchg sub (bad) jo jmp lret loop xor bswap pop movzbw pusha mov call dec outsb jo dec ljmp xlat sbb jb pop xor or cmp (bad) fcomi push (bad) hlt inc pop pop lds fistl mov and jnp xor sbbb sbb dec mov push mov inc mov call pop insl mov mov lret push dec mov mov sub xchg cwtl xor xor gs inc pop jo stc add add rcrl xchg xchg inc movsb rcrl push sub mov ret pop inc pop pushf imul adc daa shrl scas (bad) jno inc push cmp cs repnz pusha call lea jne rol bsf mov neg pusha or and sub shr xor pushf lea add pushf sub stc clc pushl popl jmp jmp push cmp pusha lea jb stc cmp jmp int3 in rolb add inc jnp push repz (bad) pusha jb cmpsl pushf xchg xor push dec test test jb xchg scas int3 mov xchg or (bad) scas pop xchg cmp sbb pop add cld int dec mov dec jne pop ret in (bad) mov imul scas jo (bad) or inc outsl xchg fsubs push dec jbe cmpsl push mov clc pusha test std cmp into mov mov lods out shrb out (bad) daa cwtl (bad) test cli inc into jno outsb push dec das xor pop push pop inc stos in adc clc push or movsl sbb add pushf sub lret hlt ds cld pop add mov inc push das mov lock stc add popa sbb xchg mov test repnz test and in aaa or nop addr16 outsl repnz je push mov ror pop loopne jns pop test lock inc adc insl and adc in dec push cwtl fld (bad) push pop cmpl aaa imul fnstenv scas push jl cmp popf push jmp pop sarb loopne jbe xchg test jno inc sbb sbb pop cmc bnd lea jae pushf xchg not xchg mov push dec mov inc movb mov push pushl lea call pusha mov push adc push pushl lea jae pusha mov call xchg mov mov pop xor ss movsl jns lods mov xchg pop sti arpl fwait mov mov jb int3 and or repz inc lea add sti cmp outsb or les cmpl test pop xchg cmpsb aad in aad mov inc sbb sub adc or mov adc push jno inc stos in add bswap call movzwl bswap movsbl not lea jmp sarl std mov pusha fiadd cmp adc incl cmp dec sahf inc mov mov cli test out mov jbe mov mov ret data16 push inc dec shrl mov into and out cmp pop fidivrl mov pusha mov stc imul adc push push movsb pop pop subb add aas jns jne stos add shll call or sub lret int3 movsl cli jge imul sub and jo jno ds or imul add test cmpsb loop jmp gs rcrb jno aas jg mov push call sub xchg test (bad) (bad) push icebp cmc sub cmpsb enter adc jg test push pusha incl aas cmpsl aaa pop inc push int3 jae xchg dec ds and cmc pop and in test jbe mov scas aad jecxz pusha xchg das aas sub lods dec or dec rorl dec enter hlt mov sub fnstenv sbb jmp dec push xchg xchg dec (bad) mov pop sbb pop adc and (bad) lock loop sub inc notb je xchg mov add push int3 addr16 pop rcl add into aad fdivr add add lock push mov mov mov lds fstpl jecxz pop add fisttpl mov rcll pop outsl out adc mov sub jbe aaa enter xchg dec jnp testl mull aad std sbb add push dec in mov fiaddl in push loop lds sub mov mov pushf clc addr16 lret mov lds and loopne push pop sub inc ret dec stc inc add les mov sbb insl inc jge ret mov data16 xchg cmp inc stos mov xchg cmp push sub push xor xor mov iret out inc (bad) in ret scas push fisub mov test jno cmp call cs jbe sbb pop lods pushf imul xchg insb jmp test mov clc es rcrl push jo fcompp mov mov jae jge jae cltd dec xchg movsl add lock jecxz sub xor mov int3 loop fidivr jg mov int3 out xor sub jb cmp fcomp les out xor jge push pop or mov xlat xor inc jle cmp movsb fist shld dec imul mov lret xchg jmp xorl push lods sbb std jno cmp js xchg call push repnz out jae add push xchg adc pop inc jp xor mov shrb mov pop test fs dec leave or cmpsb inc sahf fildll lods shlb push sub aam loopne push in cmpsl sahf mov js xlat (bad) aad sbb rep mov or jg fwait pop fisttp nop outsl fsubl bound dec or push outsl xor mov mov lret inc push xlat mov add sub dec rcr repz inc pop aas pop sbb addr16 les sbb call fsubr sbb sub les popf rcr mov lds cmp inc sub pusha sub jmp push push inc push dec cs dec dec add (bad) not push setl ror pushf push pushf not stos not mov mov lea jbe call call adc movb lea jae pusha lea jne pusha jmp pushf adc pushl lea jae push lea jne call sub popa repnz aad sub pop inc jmp mov cmp mov lock rcrb (bad) push jmp sub or inc lahf inc pop mov sti or fnstenv lcall mov popa jno movsl mov adc push icebp pop mov pop mov inc es or cmpsl js test (bad) jno cmp pop xor jle mov xor and les adc sarl push loope pop icebp pop mov icebp inc add movsl sbb pop adcb push or push icebp dec cwtl inc les jmp mov fsubp cli cmp and stos popa mov jl sbb jg popa mov stos test aam push arpl cld mov dec inc push add (bad) or and xchg adc xchg jge mov jmp call dec cmc mov dec je popa and cmp sub pusha pop mov repz add daa or mov mov cwtl xchg xchg (bad) dec dec push add ss pop inc aad hlt mov sub push push push rol bt jmp loop add scas jo (bad) icebp (bad) loop sahf push or sub into nop movsb jb sbb sub pop out in push pusha int js xchg mov int3 pop inc int lcall addr16 out pop fisubl lcall into nop pop les and cld jle sahf add cmp fs popf popa push push inc mov lea ss dec adc (bad) test mov mov and das push pop inc lock mov mov mov popa jge inc jl js bnd pop in lock ficomp jae add adc ljmp sarb lods adc pop shrl jno cmp xor mov cmp inc cmc jo mov xlat sbbl and ja mov mov fcmovnb pop out pop cwtl test clc inc fbld sub lret mov pop sbb xor les scas shl cld dec aam add fs stc inc push xchg mov xchg xor movsb ret push xchg dec hlt inc fisttpl adc fwait andl repnz and push popa pop xchg xor push and adc or push inc dec sub imul sbb jb cmp sbb lahf xchg and push mov test pop rorb (bad) enter gs mov insb jno cmp fs je clc bt call test test cmp jmp rep not mov pushf pushf lea jmp sub cmp jmp imul push jg (bad) sub call andl shll es movsb jnp jns mov shrb insl xor and (bad) sbb je cwtl test push scas sbb lods fdivs stos shr (bad) or mov lock xchg popf fxch adc les in or gs rclb add (bad) imul fucomip popf loop repz aaa cmp addr16 fisttpll mov fbld cld cmp pop aaa int cmp dec aam fcomps mov mov jbe cmp test jge imul adc rclb gs das push mull ret add inc push dec ja iret and cmp mov cli jge jb roll mov jecxz sbb add xchg xchg cmpsb je out das je xlat iret outsl ret pop movsl movsb pop jnp mov pop out jle xchg push clc or pop into mov jns out cmp clc xor iret jno pop or pop cltd pop jo or mov sbb movl adc jnp pusha aaa daa (bad) ja stos push cmp xor inc push (bad) movsb test (bad) in dec xor sbb jbe dec out pop cmpsl call jp cltd test add jmp pusha cmpb jmp mov enter imul jns mov fcmovb sub xor xor into fisubrl pusha mov jle cli gs pop popa jb sti faddl repnz inc notb scas adc mov daa or and and mul clc cmp xchg pushf ret pop sahf pop and mov push insb jb repz adc add test je (bad) mov bound push imul sub nop dec push dec mov fucomip adc push sub dec lcall pop xor xor rol mov pushf cmp pushf lea jbe movzbw mov shl shrd btr btc add pusha mov rcl sar add adc shld rcr movl xor mov mov test mov jmp subl ljmp push das nop mov adc aaa or mov push test outsl push push lcall dec repz sub cmp imul out lret lcall sbb mov add push push loopne jmp ds inc mov xor cmc lahf xchg mov push mov sarb jbe arpl pop pop cmp xchg mov mov (bad) icebp adc mov mov sbb (bad) jmp pusha pop jo jnp loope mov pop (bad) cmp and or push fidivl xor insb (bad) jg scas out shr fadds pop push das push mov (bad) sti movsb imul call fsubp jne insl icebp lods icebp lods icebp jge adc and pop mov jp push jo ret sbb cmpsb xor pop gs mov pop orl push shrb mov js (bad) inc and ds dec xchg test outsl out xor in lret or or sbb push mov fidivrl pop aam jbe jno push pop inc pop mov add insl js ret subl push mov lds cmpl mov jo mov xor mov call icebp call mov inc jno xor lret adc pop mov adc mov inc adc outsl mov push jno push repz aad iret mov push dec pop and xor xchg es in cmp fs mov mov dec add adc mov push dec arpl sub jle push inc (bad) fucomp sub xor push mov lods cmp hlt xor xchg aaa addr16 addl ret nop scas lock push lock movsl pusha xchg pop inc jg sbb cwtl inc sub jg mov mov lea xor das cmc or pusha jmp add dec outsl popa fs imul add pop addr16 in jae cmp xchg mov xchg shrl push dec mov out xchg mov mov (bad) loopne insb mov ja jnp nop mov (bad) (bad) push xor cmp xchg incl jmp rcrb jae cmc mov cmp adc cmpsl stos push xlat insb sbb int divb sub aaa mov lods or adc mov aad movsb mov lret jb shrb push sub dec repnz jo insl mov jno xor lea jne test data16 testl stc inc add push pusha push movzwl test mov inc shr mov cmc add bt mov cmp mov jmp jmp mov mov subl mov aam pusha pop xlat cmpsl out jo inc fsubrs into jns popa jne mov pop popa jne ds into jo push repz cmp ljmp ds xchg or mov lea inc jo outsl or sbb xor loopne mov icebp repz or js cmp pop sub hlt stos jmp and xchg sbb mov add shl popa push cmp mov mov scas dec xor xchg ret jle fwait pop lods (bad) mov mov xor int not mov pusha pushf push push pushl ret push pusha mov jmp or inc adc inc jle jno cmpsb jo cld ret outsl iret and jae outsl das inc cld mov (bad) cmc or scas fwait arpl imul outsl inc pop inc lcall into lock sbb decb mov xchg hlt dec shll aad test imul sub in mov xor xor dec pusha jne adc (bad) xor dec insl aad pop mov leave add or iret add pop (bad) push fisub dec mov repnz dec cli jae aaa adc push faddl cmpsl push inc push or outsl add arpl push xchg dec ret pop imul mov imul lret repz jo inc movsl jno popa lea mov xchg aaa or (bad) ljmp aaa nop (bad) data16 bound mov cmp fsubl lahf jg mov xchg pushf orl sub adc repz outsb adc inc push imul sub sbb jo gs daa cwtl dec je adc nop xchg pop and cmp mov loopne outsl xchg nop orb and xor sbb cmp imul out cs xchg lcall jg je popf sbb sbb nop cmp cmp mov (bad) repz shld xor neg mov neg mov sub jno clc cmc pushf mov bsf sub mov pusha push bt sub call call cmc movzwl sbb mov call sub sbb notb add adc sbb fsub je aad imul aaa out or add jb loopne sub jge nop mov inc je dec dec jae mov xchg push leave fidivl popa sbb mov in std nop (bad) xor and mov xor ret (bad) aas push sbb xchg call out inc pop pushf shrl push or outsl dec neg push (bad) xor or outsb movsb mov rol xchg ret jne (bad) call jge mov add mov test cmc arpl push adc xor sbb mov jg jno test cmp push pushf pusha jmp mov mov xchg pop pushf mov movsbw mov lea je pushf movl pusha mov bswap movzbw pop pusha pushf mov pusha pushl ret add pusha jmp pushf jmp fstp jecxz out (bad) dec push mov (bad) sbb test xchg pop jecxz das nop (bad) mov sbbl xlat call inc orl mov xchg mov add outsl das add leave xor int3 dec mov add lcall pop in xor and cwtl mov sbb sbb add xchg sub sahf sbbb adc xchg jmp mov (bad) mov call lods cmc ja rol call sbb outsl das jo lret xor mov (bad) loopne cmp int and jle loop fwait add mov xchg ljmp stc mov add mov movsl mov sbb js scas lock cmpsb sub mov jnp xor imul loopne test imul ficom flds xchg jmp daa (bad) or in mov lret push js dec mov inc fwait push lods push sahf rorl je cmovae jbe sbb ret cmc sub jb fldcw pop rorb pop es sarl mov aaa mov gs xchg sub outsb pop mov clc or xchg inc sbb add cmpsl jno sub and out lock dec (bad) mov mov or cmp and cwtl pop or sti inc cmp or arpl test enter aad fsubrs loopne jmp dec lahf lea pusha call dec outsb inc fisubr out sbb fcoms in ret pop insb jne inc (bad) gs add jmp repnz stos mov nop xchg xor adc push and pxor or add stc adc and leave mov shrl aam or push cltd sub dec cmovle js mov xchg repnz stos jmp pop sub data16 jp bts js repnz or je or fs je pushf test pusha add pushf cmp jmp call xchg jb out xor fdivs jge pop std popa sbb popf push mov xor add jmp inc cld and mov push push aaa cltd push sahf (bad) hlt lret or adc push cmpsb clc adc lods adc cmpsb jge or push sbb or cmpsl sbb das fdivs test sub mov loope add lock fildl inc mov pop data16 outsb nop cmpsb mov pop sub popa sahf andb movl and jae pushf mov push pusha lea jmp jae cltd xchg mov xchg in popa xchg cs sbb mov loope and and jb mov sbbb sbb das inc or sbb movsb xor fisttp push pop inc jle sahf icebp into es lret xchg mov fs xchg sub jmp push out int3 sub adc data16 mov addr16 imul mov and or dec insb pop push push scas out mov cmp mov rcr sub lods data16 enter or sub (bad) mov dec mov mov fwait inc jle adc cmp sub mov gs cmpsb cmpsl ja pop inc (bad) cwtl mov sbb flds in (bad) xcrypt-cbc cmpsl push and stos xor je shrb bound lret scas iret loopne xchg cmp mov inc sbb sbb or sub in sub out hlt sub inc call jmp mov lret adc cmp push jno sub jle popf jmp and dec das jo stc mov mov push or inc pop inc jle jle jb xchg lods ss jne mov pop add jae clc push sbb sbb (bad) in dec mov inc (bad) push jns and cs adc (bad) ss (bad) xchg dec mov test inc push mov insl xor pop pop mov enter scas xchg jl xchg pushf cmpsl push inc sub notb adc xor adc jbe dec xchg movsb xchg sbb in pop and test mull aas call mov jp cmp xlat out cmp xchg push insl test xchg lret mov in icebp jmp das jo pop sub mov pushf pushf lea jmp sbb pop aaa shrl adc ret in pop mov mov es incl mov pop loope cmc stc inc fiadd ds jecxz (bad) push adc (bad) cmc sub pop (bad) jno pop jg or popf dec push pushw mov push lods dec xor adc add pop or inc out sbb rorl icebp into fild out ds push popa pop xchg ja lea aaa push push out sub mov (bad) shlb jecxz psrld jbe pop sub inc lea ror pushf add xchg add not ror mov test ror mov cmc cmp pushf mov rcr shrd ror mov pushf jmp mov aam rcr pushf mov btr dec ror setae push dec shrd setle aad sub not lea pushf pushf pushf mov movl mov not lahf jmp clc stc test call push push inc push xor cs insb add aam icebp ljmp sbb jp add mov pushf mov mov mov pushl ret lea jne and mov jmp mov lret inc lcall sbb jae and je insb push jo xor imul mov push xchg clc mov push in int (bad) je imul or pop out hlt or jae dec xor mov pop shlb lret hlt dec pop aas ret fwait (bad) xchg xorl push negl jb add pop loopne xor add out fisub orb imul (bad) pop and mov fsub cwtl (bad) lret aam lds jno es xchg dec xchg jne gs xor fs insb add mov movsb scas nop mov add rcrb add or je mov rcr imul test dec ret push loop out sbbl hlt xchg leave ficoml jo mov dec and inc test cwtl mov inc iret rcrb out rcr loop movsl insl fist xor (bad) inc pop ret imul in out push stc xor xor iret dec xchg sub aaa addr16 mov stc ret sub dec shl popa fstl sub dec daa into mov or xchg ret pusha adc dec inc jbe mov mov sbb xchg mov (bad) mov ror pop add nop jne push mov ja push push dec jns das (bad) cmpsb cwtl in jno adc fwait mov xor jmp inc pop ret cmp pop int3 mov out adc (bad) fsub sub aam mov dec xchg in mov (bad) in push xchg hlt mov add cmpsl adc dec jnp (bad) xor mov out mov (bad) push test movsl stc sti adc pop mov or sub das cmovl into aaa pop dec mov out pop cmpsb js (bad) (bad) mov pushf adc outsb mov gs xor dec mov ss lret push sub and lret push jnp divl jno inc cmp imulb push adc xor repz sti in in loop test aas loopne leave fidivl and insb inc ja arpl repnz xor mov xchg dec inc sti push mov (bad) mov pop dec test mov icebp add out mov bound jg jo xchg inc jnp dec mov leave push inc sbb push mov outsl inc sbb mov cmp or sbb out mov popa inc sahf xchg scas adc mov xchg dec mov mov xor (bad) sbb jmp sbb repz pop push mov push sbbl xchg jbe cmpsb cld loop into (bad) repnz movsl mov (bad) stc pushf ljmp fidivrl pop scas adc xor sub mov in stos mov xchg jno rcl dec shll incl push (bad) sbb pop mov adc in inc das jo aas test xchg outsl outsl les dec sarl jecxz mov mov arpl test sbb ja and jno and cmpsb cwtl (bad) dec push dec pop aam push movsl mov arpl inc into push jbe or or add pop scas sub out mov inc lods jns cld pop insb shl loopne in adc push hlt outsb out arpl mov xchg xor and mov sbb std adc lret test push jb mov mov cli out rorl and add lds sbb fsubs dec mov push imul jno and ja (bad) arpl pop popa cmp int jbe push jnp jle jno or inc xchg push or loope mov mov mov mov inc adc dec js les xor pop mov pop jns dec and iret test jnp (bad) (bad) dec out add (bad) sub sbb outsb shl les or lea popa mov inc push pop daa cmp and lret out xor call int insb mov jp xlat add aaa (bad) cmp cmc and mov push adc mov xchg addr16 test push addr16 (bad) sbb xor clc or and fwait push shlb sub bnd shlb and jae pusha lea jne pushf stos pushf pushf pushf lea jmp xor pop lea push cmp pop mov gs mov xchg mov mul mov mov fadd pop dec add js lret adc sub push in rcll push adc insb ss sbb (bad) xor inc arpl (bad) sbb insl mov cs inc jns in outsl xor ss mov push js cmp push cmpsl mov (bad) cli in in push inc mov xchg pop xchg fs fucomi fiadd in imul mov aas rorl or mov pop out iret inc fsubl adc pop pop fs and add in sub pushl pusha call cld xor ret inc movsb cmp or adc xchg mov arpl xor adc add xchg inc pop int cs nop mov jbe imul mov sub (bad) test imul push rcrl dec sbb jg xchg test test pop enter test fdivrl scas icebp xor inc xchg push or or movsl mov mov mov fsubs xchg pop cld popf mov mov push inc jle arpl psadbw movl es arpl push mov vcmpps mov ja jb and cmp fcompl scas sbb pushf pusha call jns pusha movl pusha lea jb pushf push movl pusha mov pushf push lea jmp pushf lea jne pusha pop mov mov or call push fsubs outsl ret jnp pop and mov daa (bad) outsl xlat test pop sbbb and adc in inc lds mov jmp gs imul pop sbb dec jae out xchg mov fsubs movsl stc dec xlat sub mov aad mov in call sub aas jns push inc sub test add sub jp ret cld ljmp cmp pop cmp mov fidivrl (bad) pop add mov mov pop pushl sub cmp cld and clc push sub pop std xchg adc stc ror jmp mov push in sub jbe pop and lea xchg mov jp mov jge mov (bad) scas fisubrl jecxz arpl stos xor int3 (bad) and cmc popa std or xchg xor xlat enter xor adcl sbb cwtl imul outsl jno lahf adcb data16 lea ret mov cmpl hlt dec fildl lahf aas mov pop lock push test xchg xor cmp mov in lcall jo imul mov jo iret pushf pusha pushl lea je movzbw call test lret aaa addr16 in shrl push test adcb loope fwait add cmp xbegin cmp neg or xor mov idiv dec mov mov test daa xor jle pop lods jb (bad) adc or inc ret push jbe stos mov xor mov sub pop xchg je mov add pop add or cmp ljmp cmp cmp xor mov sbb pushf call add push popa je dec popa je push inc add mov mov leave cmp xlat enter inc les or enter mov push js mov mov xchg jns daa (bad) or int3 sbb cmpsl call push add mov sti dec jg pop mov adc xor sub dec inc fldl pop xor popa lret xor dec xrelease dec sub cmpsl test clc pushw call fimull in repnz aad dec sbb out das xchg sub add adc daa mov (bad) adc outsl lock inc scas jno sbb inc push pop pushl lea jae pushf xor pushf jmp movl pusha movb pushf lea jmp pushl pushl popl pushf push pushl ret bswap call call sub or pop cmpsb mov cmc push xor pop (bad) leave idivb mov or pop popa ds xor mov stos pushl sub cli aaa inc mov gs leave jo sub pop arpl pop jo jae in in lods insl jb mov outsl jae ret sub and lods sbb lahf xchg inc gs imul lret sbb mov add icebp sbb xlat jno sbb imul push mov into lods and (bad) push or cltd inc ds xchg dec adc inc pop adc add sbb push inc outsl out inc or mov push inc arpl (bad) mov test mov sti shrb mov xchg fisttpll sti cmpsb clc dec dec mov push das jno mov dec sbb mov inc (bad) or shrl pop add popf add jns pushf lods push (bad) or imul sub xchg sbb (bad) in shll and stos mull cli movsl adc (bad) out inc imul mov nop mov cmp cmpsl hlt mov outsl fildl xorl cmpl push arpl lea call jo pushf pushf lea jae pushf pusha xchg setns mov not call rclb or fisub adc das jae xlat je sahf pusha mov and xchg nop (bad) sub repnz and icebp dec loop jno,pn xchg insb push xchg je,pn in xchg daa push cld inc pop pop cltd int3 jae mov mov push in sti std popa mov in dec stos xor test mov daa ja xlat or iret dec xchg xor pushf mov jae mov xor ljmp ja imul sti or pop adc xchg mov ret pop cmp popa mov mov push jnp mov pop sbb in sbb pop add push lret mov mov icebp out inc ret xlat push lret je js mov iret mov fcoms sub sbb fs or cmp cmp sarl jecxz sti dec out (bad) mov inc (bad) aas jno jno ds shll inc dec xchg ret push aaa faddl testb repnz jo outsb lock dec aad xchg in push pop fmulp xor aas repz xor inc xchg mov icebp gs pusha decb es into pop dec mov pop xchg xchg mov jo add sbb outsb push rcrl test int sbb adc add xchg sahf inc rclb sbb stos adc aad sub cld out (bad) fadds jge int lods addl lcall pop in (bad) int add xor lea push pushf stos inc cmp clc dec (bad) mov push int mov out rcll add fsubs cmp sub clc push xchg mov in icebp inc cmp mov cmp (bad) jae push adc or mull cld arpl xchg sub pop mov ja lods jno dec int3 xchg fistpll adc inc fwait pusha jmp add jmp mov nop jmp push test ret pop mov lock cmp dec xchg les cld inc lods xchg pop (bad) sbb nop outsb scas adc jmp (bad) cmp popa neg loop adc cld or sbb xchg pushf fstl cmp mov or pop fs xor mov test arpl or je data16 (bad) aaa movl inc mov cmp cmpsl mov or sbb pop push pop fisubr push inc mov imul jle test ds mov int push or inc push cwtl imul pop dec mov or push insb lods ret cmpsb cltd jno push addr16 in std jno sbb (bad) and inc or fs jmp lea je bsr shr add mov xor add bsr mov cmp stc test pushf movb lea je movsbw add or movsbw mov (bad) icebp mov call pushf call rep sbb or jo add pop pushf inc mov movsl rorb lea pushf add rorb mov mov push jle inc adcl js fistpll cmpl xchg pop dec push cld (bad) fdivl pop arpl popf (bad) mov mov xor outsl shrl mov sbb lods xchg jp int3 clc and out or scas sbb inc push imul xchg adcl or nop das fildl adc (bad) pop mov add jle mov pop pop or sar pop mov shrd inc push jmp movw pushl lea jne not mov jmp mov jo xchg ljmp iret iret and inc pop jae push cmp (bad) outsl jmp or push in andl add scas dec inc mov ja mov mov mov ds inc test push aam mov call mov insl repnz mov mov decb push and sahf ss ret mov test xchg idiv negl stc mov fcmovnu add incb test dec push xchg add shl ficoml pop icebp push pop push dec sahf subl push int3 sbb es mov xor sbb pop adc bts mov call inc jo,pn push lret in roll xchg fist int3 mov xlat jecxz jb je js xchg cmpsl mull stos in cli add (bad) addr16 daa mov pop sub jbe loopne sub jecxz das inc lea nop cli rorb sbb adc add push (bad) popf pop xchg jae mov mov or out push push or sub mov in sbb inc jg push in pop in adc sub scas jl scas lock fnsave xchg or sbb std sub test cli inc (bad) sbb dec jno jno adc std cmp jae insb jne push insb jbe jb popa arpl add jne mov push lds fcoml xor add and dec ret cmp fstpl ds cmc dec pop pop inc in ret sbb xor in cmp (bad) mov push mov mov ja ja int mov push mov js push lahf test fildl lret stc or adc cmp push adc jno adc (bad) mov sub mov call out cmp shrl lcall inc jl out test out mov jle lock cltd stos xor mov mov (bad) ss jecxz jmp mov addr16 cmp int3 mov leave adc add sbbb outsb call xor (bad) xor test movntq lods daa push pop (bad) cmp mov pop push push mov jmp std loop sbb stc mov xchg in inc scas cwtl cmp mov mov inc sub fadds sahf inc repnz ja push mov movsl (bad) sub jno adc mov jecxz jmp ret xor stos jo xchg mov rorb lcall jl test pop cmp out fcomp enter out shl and repz xor xchg or stc ja dec or aam jge inc mov sahf lret iret loopne sub xor enter loopne push dec stos jge pop repnz pop mov fist sbb aaa inc ss add inc jg imull lods add icebp sbb pop stos xor js into ror addr16 pop adc gs xchg mov pusha movsbw movzbw mov pushf push push pushl ret cwtl xchg scas shr pop xchg out xor in sub andl cmpsl and sbbb pop cmpsl push xchg cmpsl mov lock pusha (bad) in out icebp add or jo fbstp fistp xor jle mov add popf add ret (bad) push sbb popa fisubrl aam sti dec mov pop repnz adcb std cmp jno mov in mov lods sbb es (bad) inc or and mov push insl inc aad test push mov fidivr add add xlat inc adc xchg mov (bad) jno adc push dec jne fdivl shlb fcomps sar add neg pusha rcl dec mov cmp bt test push push call mov cmp add cmp mov mov mov call stc test clc add lea jle not push ror call sub push test sub ret out sti and mull add or cmp mov int fstpl add pop aam arpl xlat and popf ret xor jo and adc test std adc mov in xchg in outsb inc mov shrb aad or adc int push ret imul cltd test arpl cmp psadbw sub sub xor and jg add cmp mov ret jecxz jae sub and (bad) comiss adc outsl or scas add fdivr sti dec xchg jo fs nop push nop cmp inc mov inc push dec jp dec je addb into fistp xor inc aas and cmp fs loop mov jae rorl add ret stos je sbb jmp stos pusha sbbl jmp dec daa js hlt sahf add jle pop dec sub fcoms inc es push cmpsb pop cmp scas inc mov cmp mov push cmp cmp sahf add mov cvtps2pd mov mov add addr16 adc jo jl subb jns push mov cmpsl sbb gs add icebp ljmp jbe xor jmp es push push sub mov cmp push aas call sbb sbb aad cmp mov addr16 imul lret outsl das inc aad mov mov fucomp addr16 fdivrl out loopne mov sbb outsb (bad) ret jnp inc cmp int pop ja inc scas data16 or adc hlt xchg mov arpl pop xor scas int3 outsl mov cmc lea fwait scas rcrl fistpl jns mov push aam mov jb push es sub xchg aaa pop inc xchg or cwtl pop sbb imul lock pop mov repnz mov hlt dec pop mov test cmpsb outsl jae sbb sub mov inc mov pop es setns lret lock aam fimull inc pop push (bad) jnp sub mov xor mov xchg lea sbb int3 push mov pop mov push mov push adc xlat sub mov add (bad) ret jnp je pop jmp pop bound imul pop jo,pn rcrl cmp sbb pop dec adc jge pop fdivrs dec pop cmp idivb sub mov fcoml fld pusha sti lods call push mov daa inc aaa (bad) and push insl adc loopne mov pusha and adc enter sub push xchg cmc das mov cmp call mov ret mov jg inc mov popa sbb and push and rcrb ret mov and pusha ds pushf mov ret cmp mov leave mov jecxz and and out adc gs add js xlat ljmp imulb cmp nop xchg aas gs leave cli in loop adc add and sbb jae int rorb jb mov (bad) je adc xlat sbb pop in push mov cmpb push jne cwtl xchg jno or push aad fistp pop addr16 icebp hlt ljmp out fildl fcompl mov enter jns roll ficom pop mov mov mov mov out push cmp aaa scas xchg ss in sbb addr16 test frstor mov in shrb mov (bad) xor lea cmc js hlt xor and in pop jnp xchg xlat mov cmp scas lock test push cmp pushf mov shl ds push test dec mov add pop stos jae fwait lods in dec aas sub and pop inc test mov outsl adc adc cmpsl call inc jne cmp dec std adc adc inc add gs ds (bad) lea adc ret in and mov pop popa repnz or mov lods cmp push pop pop xchg dec cmp repz in sbb jno call pop icebp insl outsb mov mov pop mov or xchg mov fwait mov fist pop stc in push shlb sbb add cmpl loopne sbb aas pop sub cmp fs loope scas jmp ret xor insl rclb or adc adc dec lcall (bad) dec mov dec jp mov stc out iret xor inc jecxz lcall lcall and movsb xor stos enter in jmp ret sub add out mov int (bad) in push lret and jp push push sbb sub mov in (bad) jno cmp sahf mov xor (bad) jne cltd es jmp ret jge adc dec inc ret dec aam daa add ret add pop or xchg sbb fwait ret xlat sti movsb in xor and sbb or sbbl jno dec mov and xchg es xchg adcl insb jecxz rcll mov movsl jle cmp push daa cmp aas icebp mov inc cwtl ret call sbb inc cmp dec lcall jb jne jp xchg dec ds add ret pop and pop dec das xor out pop xorl mov sbb xlat rcl stos add mov cmpsb cltd data16 rcrl inc cmp sub icebp (bad) fistpl dec rorl mov push add aad stos jmp pop or data16 call int jmp iret das test dec fs jnp iret mov test pop daa js push scas out scas push insb outsl mov les icebp add call addr16 cmp jge idivb sbb cmc lcall inc xchg pop cmpl lret (bad) popa jge xlat push arpl cmp mulb pop pushf inc mov push mov push pusha (bad) outsb icebp or movsl sbb div jmp mov cmp cld clc out movsl lcall cltd push das movzbl jne sarb sbb int movsb sbb or into push xchg sub dec cmp lahf int3 mov cmpsb sbb mov push out scas push add rorb and movsl add icebp push dec aad leave push push lds shll mov pop inc ljmp pop push dec aas das add lahf sbbl mov mov ret xor xchg jns push xor in stos lcall pop xchg pop icebp loopne insl out int3 adc add or jmp loop sahf shl cwtl cmpsl dec mov push pop or in sbb enter ror mov add lods (bad) ss outsb icebp sbb mov jg adc jne push setns xchg pushf adc jge xchg (bad) loope sbb sbb cmpl sbb push mov cli pop and sub xlat cltd cmpsb mov leave adc mov lock jo mov xchg in xor movsl incl or sbb call sahf push jns (bad) lcall pop pop inc push sub mov xchg add cmpsl push mov push movsb sti jle sbb (bad) or fs jmp test lret pop in cmc mov jno pop popf repnz mov call pushf pushf pushf push lea jne mov jmp test pushf lea jno cmp pusha lea js push lea jae cmp jmp mov inc jmp aam notb into test into out jne adc (bad) in xor aam pop pop pusha je aaa mov movlps sbb xor cmp sub push stc js push in push pusha shrb add adc (bad) aas lahf pop xlat sub xor xchg sbb movsb imul ret mov or fs cli dec or mul cmc mov int3 repz inc push (bad) js add sahf ss int or cmpsl aas adcb insb addl mov adc jbe add dec jns cmp mov enter into mov imul loop pushf pushf lea ja call jmp or add icebp push pusha movsl mov push push rorb out push and sub and insb cmp adc movsb mov test add dec push rclb adc and xor jnp adc ljmp sbb or stos pushl xor jle cli or pop fidiv ljmp cmpsb jns gs mov outsb push cmp lea imul lret lods movsl fnstcw dec sub out ror aad jno dec xor pop add cmc clc cmp call lea jne mov test shl push mov push add stc call add rolb inc sbb dec (bad) or mov xchg out mov fisubr mov loop out cli adc faddl xchg scas movsl lcall ficompl xchg cmp rorl push leave mov aad int mov ret xor movsb pop daa inc adc negl (bad) fcmove xor scas sarl jecxz shrl dec push mov push std xor mov aad or in and xchg dec data16 inc mov dec sti nop cli ss shrl mov (bad) out rcrb adc into jno mov mov and cmpb adc mov ljmp add jno add mov icebp mov mov and push lret scas in fadds icebp xor (bad) pop int3 idivb iret jns cmp add jnp in dec clc adc mov pushf mov jnp xlat dec out mov (bad) jge jae add sbb sub cltd jae out gs add test adc sbbb dec addr16 mov bound roll in loopne leave and push sub nop rorb pushf enter negl or (bad) scas inc fucomip sahf ds in lea movsb cmp (bad) cvttps2pi in ljmp out int arpl mov dec cmp ret aas outsl fstl sub cmpsb mov rcl dec aas or jecxz mov ror dec push inc jo pop adc xor adc (bad) jb jle outsb call pop pusha mov and mov xchg stc (bad) lock loopne stos (bad) and mov mov sub (bad) mov xchg mov sbb (bad) mov jle xor jmp sub aaa insb jae out pop fwait in ret add fwait xor adc jp iret sub lahf and mov cmp repz out mov pop xchg push push push int or aad mov (bad) cmp cmc push pop pop mov mov xchg dec cmc test jno add shrb inc and gs inc pushf push pushf movb lea jmp cwtl dec mov mov cwtl sub std loop into les popa test sbb jbe xchg pop (bad) mov movsb mov xchg jp mov (bad) add add loopne shl les pop fdivs ljmp cmp mov out jno jae idiv ja xchg mov mov fcompl xor in and stos aam and mov sti sbb add xor adc and add sub xor mov dec mov sbb das lea jae jmp mov leave xchg or in jne (bad) mov or xor push jl je nop push mov fwait movsb out mov mov mov adc outsl mov mov push sub rorb xor add mov lahf xchg adc incl ret cltd cmpsb mov mov icebp int stos mov stos outsl pop xlat sbb sub cmp lahf out sub and popf jb pop lds es pusha push movsb pop pop insl cwtl call mov out pop xchg adc xchg ljmp loopne and inc mov mov or ljmp call inc cli or jne pop out jo inc scas push test jno add mov jmp and das lock add add mov add add adc decl add add add aad and adc adc pop mov add (bad) sbb add mov add push adc pop mov add and sub adc pop mov add and xor adc daa mov add sub add adc das mov add adc inc push adc aaa mov add in add add mov add cmpsl and push push adc inc mov add push adc dec mov add das adc fs adc push mov add out add add and fisttp adc mov add push adc outsl mov add lock test add and das lock mov lea je pushf mov push jmp sbb push (bad) or xlat bound push inc int add shrl into icebp rorb jno data16 aas lahf loopne push dec fwait inc mov pushf addr16 sub outsl aam cmpl and pop and sub adc add test mov mov and in leave call jo adc fs inc dec pop sbb sbb dec jecxz stos jnp xchg daa pushf inc les cmp aam inc mov movsl nop scas lock mov fistpll int fsub mov jno incl mov jne xor cs insb add dec (bad) cld lcall mov xchg shll mov and pop ret fisubrl fsubs and adc clc adc push rcl into fnstsw loope add imul test sub cmp pop lret icebp cmp inc push mov cmp lahf mov xor data16 rcl stos cltd pushf xchg in mov outsb mov xor inc push xlat mov push das rep jae (bad) fadd fcomps in inc push inc popa and push adc ds mov insb ds cmp pop out or out decl lahf jg mov push repz mov cld imul mulb pop lcall xor push leave jbe jno decb (bad) push rol bt shr bt add not jmp xchg push mov or cld (bad) (bad) mov icebp into mov inc cmp sub ds pop movb jo imul xabort lock aam mov mov jle inc std push mov mov cmp push in add lea mov mov lret jae pop (bad) aad daa adc fidivr jo leave sub fs fildl adc fsubs xor pop in push sbb push daa fisub jge popf and lahf pop mov pusha mov rcrl jbe mov (bad) lock or ja pop add xor ja jno std mov clc push jmp js xchg (bad) xchg test push push mulb inc add arpl jnp arpl je movsb pop popa into push mov loope ljmp ds shll mov fistpl gs stos mov jno push mov jecxz pop aad dec xor addb loope dec (bad) pusha mov loope lock sbb into mov clc loop jmp clc cmpsb fldl2e jno cld sub cltd aaa into push jno mov ljmp out push add shrb xchg sub mov les arpl push imull adc aad cmpsb mov adc adc jecxz (bad) inc sti xchg test add push cmp movsl lahf mov std fxch push ljmp cmp sbb rorb in jns dec sbb xor scas popa jle bound inc mov enter movsb mov cs xor mov push outsl cmovle push mov mov jno push lret pop sti and xchg or and xor jne in repz pop add (bad) popf and leave in jp loope hlt adc in (bad) sbb sub adc cli mov in xchg xor fildl inc mov test cmp subl leave roll cmp pop or mov out add push sub pop mov lock repz sbb xor inc repnz enter les bound inc ds lret push test sbb repz adc pop ret jae mov sub out clc int mov push (bad) imull jl pop sti orl lea pushf mov lea stc stc mov bt pusha mov stc ror movb dec call add jmp adc lea pusha jmp push call pusha mov cmp test call sub stc jmp lea call push pushf lea jae clc call cmpsb into sarb les sub xchg movsl pop pop loopne inc cli or cmc clc dec xlat scas jae push lahf fistpl xor dec jb adc inc out cltd (bad) sbb lret mov jnp mov dec insb sarb es adc push cmp push fwait push push xchg test xchg add fdivs jge pop and int jecxz jecxz sbbb les hlt js das push mov cmpsl fsub pop ficomp cmp xchg mov pusha pushf fs mov repnz push mov pushf xchg push pop rolb sbb loop incb sbb in mov mov mov (bad) cmpb xor ja (bad) pop stc ds xchg insl mov fstl xor mov dec adc jmp dec push outsb les jp outsb mov call pop pop lahf xchg test mov add cltd pop and pop sbb out outsl mov nop push stc aas loopne ss sbb sbb jb ja test stos and cmp inc cltd add fs cmp cmpsb push pusha aas push js cmpsb xor rolb sub and sbb cmp push mov inc push pop fiaddl popa imul sbb ror inc fsubrl mov mov dec inc popf push jmp pushf movzbw movzbw not movzwl pop lea pusha pop jmp add lret dec iret xor jb mov inc cld cmpsb cmp test loope sbb and mov jb cmpsl es push or sbb push out outsl adc sub push into mov sbb jbe cmc mov mov fwait lcall add fcompl cwtl pusha jg fs jne btr setbe shld mov test test cmp call loop adc or or xchg and dec xchg imul and fidivrl mov dec jmp xor daa sub mov ret aas icebp adc cld adc xor xor cmp fildl mov cmp push xor xchg fsub add imul into aad inc push pop and cmpsb popf pop or es ficompl js rcll std fwait inc pop xchg inc push mov aaa addr16 fiaddl cmp (bad) (bad) mov sbb xor aam aad rolb (bad) jno idiv xchg inc popf jns pop xchg loopne (bad) jno in aas or sub cmp sbb sbb leave leave adc lods pop cli inc push xor push pop mov ret mov adc jo jge rcl dec mov lock ret test cli pop fildl add std test cmp daa unpcklps std inc pusha adc push std jmp (bad) arpl es mov lret and add popf pop mov fwait hlt lret pushf stc bswap sub dec dec xor es incl repnz cmp jge push jnp js cmpl je push out xchg mov cs int sbb fsubs lds cmp inc jno (bad) iret shl outsl insb xor cs insb add and call push lea jne call inc jo,pn pop push pusha jno out dec fsubs and cmpsb sbb gs test gs inc stc ljmp jp div or popa addl adcl jle repz or test mov cmp mov stos aad ficompl outsb icebp xor ds ret loopne imull loopne sbbw nop rorl mov arpl enter push icebp outsb scas cmpsl xlat dec das dec pop xchg daa sub push mov lcall js mov daa cwtl jecxz icebp adc push mov ljmp xor inc pop inc pop aas xchg sub cmp and mov sti push mov jns nop rcr mov repnz mov cmc jno jbe nop into test in pop lds mov or imul ja fldcw mov push push sbb inc cmp and fistp popa movsb (bad) (bad) aaa test mov psadbw jmp iret loop ret cld jle lds inc pop fsubl inc mov sbb mov das cld inc mov ret rep popa jb mov xchg add jb arpl testb push push call loope repz mov inc adc out inc add (bad) mov les xor sbb mov sub fcmovu lods les movsb mov imul pop in add stc push rcll lods adc test cmp push dec (bad) dec arpl das packsswb jecxz insl inc pop mov into popa mov cmp nop dec insl lods xor or lret pop xchg std bound pushf mov push shrb cmc dec popf and idivl in inc imul xor or shr mov aaa pop loop pop in sbb pop xor hlt int test mov movw push pushl lea jmp xlat mov add movsl pop xchg test movsb cmp adc inc cmpb lea cmova test or mov xlat daa sahf and or push shrl daa pop sub mov sbb or lret loop inc push cs push inc pop mov and push sub int bnd repz insb stos movb pushf movb lea jmp cmp xchg xor jp repz add push test (bad) dec (bad) cs pop xchg sub mov adc bound xor cmp insl cwtl dec nop in xchg shlb mov (bad) push cmc leave std add mov sub out adc fs add xchg lock or pushf adcl sar (bad) jb mov xorl mov es push dec jo cmpb sbb or push or jle mov icebp out and jmp add lcall (bad) xlat jno repnz lock stc bt add pushf cmc cmp pushf call jmp jmp inc in xchg outsl rcrb fstps mov je jae fadds ja mov loop push nop jp rep push jo pop cli fs movsb xchg lods mov into std out loopne mov jae pop mov fsub clc loop repnz movsl push cld fsub sub aas popf inc movsl cmp add lods push imul cmp stos cmp jbe cmp cli mov cld mov pop jg movsb mov mov sbb sub sbb push jmp (bad) insb jo and lods popa mov sub dec outsl push dec xor push fwait inc pusha pop jnp sbb jp jno bnd lods pop jne stos shr dec pop pop aam int3 sub mov jmp push in imul insl xor adc outsl jmp or in inc pop pusha jb int jp mov sbbl fbstp pop lock xor cmp push flds iret outsb jno inc stc push outsl sub push movb out jns push scas mov or add outsl test ljmp or adc xor cmp fstpl ret pop pop inc ss jge dec dec push sbb cmp inc cmpsb sbb mov mov xchg mov jno icebp xor sbb inc and inc scas adc pusha push jmp ror stc pusha clc call nop clc push or popf inc xor rolb dec or xchg mov mov xchg mov lods pop mov mov xchg stos mull sbb ror (bad) pop ss add pmulhuw and inc cmp rcr inc or mov (bad) nop into rclb jno icebp add icebp pushl test movsb push or inc mov mov xor jo lds loop sub (bad) sbb out jo call add js scas mov xchg ret fldt xchg frstor shrl fildl jle push fsubl sbb daa cmp jge xchg sbb in std xchg xor inc jp jg ja inc jmp mov inc xchg add sub or sahf mov xchg cwtl mov xlat std bswap pop pop mov sbb push imul (bad) xor (bad) jo (bad) dec jl lcall and push imul cmp push push mov or dec mov (bad) imul lcall test bound scas adc mov cmpsl and sti cmp daa xchg hlt pusha loop std lds sbb push pop dec mov sbb in fadd mov jg adc pusha jno lahf lcall (bad) in xlat mov fsubl mov aam or inc sub sbb pop pop cmp push sahf mov in movsl fidivl sub or push jg scas jno out sub fadd (bad) push mov bt call pushl cmp pusha pushl lea je stc cmc cmp push jmp cmp jmp out call jne pop sahf jae mov or add adc and add leave adc inc mov repz dec xchg (bad) jmp mov xor and sbb inc lahf mov mov jb cmpb push or pop arpl outsl (bad) adc pop push imul es and xor out (bad) xor into lcall mov dec pop nop fistpl out imul adc mov aam push pop adcl sub xchg pop sbb cmp adc xchg pop add scas lahf (bad) mov jg dec iret xchg ja sbb out loop xor loope add add pop xor ret pop sbb or mov xchg push leave mov inc stc xchg inc jp adc out cltd out sub scas adcl mov cmc rcr (bad) cmp mov lods (bad) scas push and insl xchg mov (bad) lret aam mov sbb std jno fstpt aaa roll shl or js xchg and xchg loop mov inc imul cltd xchg jl xchg and mov (bad) and push in popa sbb mov in mov repnz pushf stc add push lea jmp test mov push loopne push (bad) nop scas pop or dec dec adc ret sti cmp in pop and sbb lock lds sbb xor (bad) repz mov out ss pop and cltd push inc sbb and int pmulhw and jns cmpl fistpl nop shll fsubl sti cmp push mov mov sbb fstl or ss mov in push xor aam fsub inc sbb add loope enter mov push leave xor cmp sub push rcrb xor jno in xchg (bad) loope mov repnz std int cs jns mov sbb and mov xchg xor push push pop push push inc lock mov cmp adc jno jmp add dec lahf lods leave lret cmp int push and dec jae je enter cmp mov xchg imull xor std nop bound jne inc push es movb dec xor leave jb (bad) or cmpsb xor popf add les dec add movsl push xor (bad) dec (bad) xchg stos push icebp fdivl xchg into sbb add sbb addr16 or sbb out cmp adc jno jmp popf adc cmpsl xchg test cmp inc or push js insb out int mov loope lds and add pop push ds out fidivr pop xchg test cmp add pop mov cmp cmp cmp sbb push gs lahf mov test (bad) pop and mov cmc ljmp xchg inc mov adc es cmp mov jmp (bad) jns sbb aaa loop or push mov pop pop fiadd cmpsb cmp (bad) sub mov cmpsb cli push sub jle push fsubs (bad) sbb addr16 ds add sub inc dec jb pop mov add pop and dec jne mov out loop cmp adc inc jmp cmp in push add lock or mov jo pushl ljmp dec fwait inc jl xor sti fxch jge xor dec ret lea push mov ficompl xor cs into xchg pop sbb pop sbb xor dec pusha adc test push pop outsb sahf mov insl and adc adc xchg lahf mov in jb movsl lea mov fbld jecxz popa shr jmp sub push mov cmp je test das addb mov dec xchg mov in xchg movsb lcall cmp sub bt mov push jmp xlat in ljmp mov push iret jns sbb add fcompl pusha shrb inc cmp add add aas xchg mov jecxz nop mov test shl jecxz or test and pop sbb jp inc cli pop cmp xchg divl in jle xor mov inc push sub jae jg mov xor push scas out call ror repnz sub pop out ret rorb fiadd call push imul mov fs jle imul ds xor xchg mov fs mov leave xchg cmpsl jbe sbb xor add or cwtl imul nop and cmp rcrb mov outsl xor pop sbb cmp pop mov sbb ss jo out inc pop mov mov mov in repnz dec inc lea icebp add es shl or xorl inc pushf lods (bad) push inc test inc push ja loop inc pop aas push and mov pusha sub imul mov into mov push mov (bad) and aaa sarb ja cmc stc xor punpcklbw mov add in add xchg dec mov das testb lret adc insb mov lret jmp lods adc js (bad) loope insb jae xor inc jnp jno call lea call call call pusha inc dec inc setge adc test xchg clc mov inc sbb jmp movl pusha pushl popl movw pushl ret fldl sti jg pushf jecxz cmpl adc insb or icebp in test js aaa addr16 dec rolb mov mov dec adc cmp mov push loope xor mov mov jle cmp lods mov std ds pop push nop xchg mull ljmp adc (bad) mov pop andb xchg test dec aam fldcw idiv pop mov out mov (bad) pusha pusha movl jmp pushf mov lea jae call xor aas mov push loope in push add std xor (bad) leave add (bad) sbb or dec out out adc mov pushf adc loope enter mov cmp mov jg and add fbstp mov repz inc icebp push cmp int3 fadd lret xor mov jp rdmsr cmc or das mov and fadds test in xor je xchg mov subl mov fsubs add fwait inc mov push xchg dec lea out pop xchg xchg dec mov cltd add push sub inc xchg mov aad and gs pop cli test pop loope (bad) lods icebp add and daa fsubrp add adc sbb adc aam mov sbb icebp bound in jb sahf cld divb adc push lcall pop loop (bad) in inc mov push insb hlt push int jl xchg mov aas push ret push outsb test je push test stos sbb rcrb faddl push fwait test test jge jae out lock icebp add in jge lea fmuls xchg rorb jns lret or mov add pushf mov pushf push lea jmp jmp jmp shrd dec mov cmp clc cmc jmp push mov mov push pushl pusha pushf pushl ret cld push push jmp cmc stc mov stc stc sub pushf mov pusha pusha push lea jmp movb mov pushf pushf popl movb call mov movsbw mov mov movw call mov pushl popl movb pushf pushf movb lea jmp pushl popl push mov push lea jmp stc add bt shrd push call mov mov movb pushf push mov lea jmp pushl popl mov movw lea jmp mov inc pushf pushf decl push pusha call mov push pushl lea jmp mov pushf jmp mov pusha jmp movzbl btr not not call mov mov pusha push push lea jmp mov pushf pushl jmp pushl test call call lea aad mov jmp mov pushf popl call mov pusha pushf push pushf lea jmp call push pusha pushf pushl popl mov stc cmc add cld bt stc pushl popf pushf push lea jmp push lea pusha jmp movb stc sub call movzbl bt test add pushf jmp call mov pusha pushf popl bswap mov bswap pusha mov lea lea jmp pusha mov mov pushf lea jmp call mov push mov jmp mov pushl mov push pushl pushf popl push call bts mov pushf call add movsbw push inc dec jmp push bswap clc add cmp add cmc bt sub stc ror jmp pusha mov pushl movb pusha lea jmp add pusha call push jmp pusha mov push pusha lea jmp shld push mov mov jmp bt btr cmp mov sar rol clc rcl mov bsf or bsf or mov bt sub push mov call jmp jmp mov pushf jmp inc stc clc call add jmp pusha jmp rdtsc mov sar and or mov cmc jle bt pushf sub jmp mov call not and not stc dec dec sub jmp pushf push lea je jmp movb not stc cmp add stc test movb call (bad) lock decb add and jle mov push lea jmp stc clc ror stc sub jae xor test pusha stc lea mov not stc clc bt xor pushf call dec mov jmp mov movw mov call jmp movw jmp jmp jmp stc cmp mov add clc call and movw pushf mov jmp call push jmp mov pushl jmp das cwtl sub bsr and clc ror lea jmp movsbw shrd pusha or mov sar test inc mov bt mov sub cmc pushf call shld notl shl mov bt cmp cmc sub push cmp mov pushf and call jmp sar pushf or mov add bsr add push sete inc ror xor mov jmp mov pushl jmp imul jmp pushf pushf mov pushl push pushf lea jmp lea jne test sub pusha push call inc neg mov and or stc mov push bt add call pushf mov bt rol xchg push movsbw bswap push pushl popl btr xchg stc push not rcr rcr rcl mov mov call pushf mov mov pushl push lea jmp pusha mov movb lea jmp cwtl cmc sub jmp not jmp test not jmp bt mov cmc stc bt neg mov clc cmc not pushf not stc pusha clc cmp and push jmp shrd bts pusha movzbl movb bt add not sub bts ror inc inc adc and pusha add pop movsbw inc movsbw mov jmp pushl pusha pushl pushf popl jmp pushf pushf pushl popl pushl lea jmp cmc mov btr movsbw mov stc pusha push add call rcr ror mov pusha push pushl stc sub stc add push pushf popl push jmp jmp call push mov call call push mov movb lea jmp pushf jmp pushl popl push movb movw push lea jmp call push btr push btr mov movzbw push jmp rol movzbl setle btr mov push cmc rol cmp sub jg push add jmp mov mov push pushf movb pushf lea jmp mov mov pushf mov pushf pushf lea jmp movzbw add sbb mov pusha jmp mov pusha movb lea jmp mov pushf clc call pushf popl jmp shrd rol pop sub neg and popf bswap pushf mov pushf mov pushl ret (bad) icebp add cltd rorb sub add dec push movb lea js inc push pushf call jmp call add pushf pushf popl pushf pushl popl pushf pushl lea jmp bts call lea jbe pushf call pushl popl movl movw lea jmp jmp movsbw pushf mov jmp bt sub pusha shl pushf call pushl popl pushl lea jmp pushl mov movb lea jmp mov pusha pusha lea jmp jmp mov pushf mov pushf push pushl ret mov pusha push pushf mov lea jmp stc cmp jmp pushf mov push lea jmp pusha lea jne pusha sar xorb lea not movzbw call stc rcr das movzww stc clc bt jmp push pushf lea ja sub mov cwtl shrd shrd lea lea jmp mov push pushf popl pushf mov jmp call jmp push pushl mov lea lea movzbw bswap push repz popl bts push rcr call push mov pusha pushf popl movb push push pushl pushl popl push push movw push lea jmp push sub jne bswap cmp clc cmp pushf add cmc cmp cmp push add cmp sub call call pushf lea jmp call bt not mov stc xor stc test clc cwtl pushl jmp daa daa mov call clc sub mov pushf jmp inc btr cmp mov jmp add add rol mov xor bt ror mov cmp sub pusha movb cmc shr pusha pushl call bswap aas bsr mov rcr not pusha mov pushf stc mov mov add jmp push bt add pushf jmp call call dec cmc pushf stc add pushf add jne clc stc mov clc sub jo mov push pushf pushf lea jmp rcl rcl mov rcl pop das not jmp mov mov movw mov lea jmp pushf mov pusha push push pushf lea jmp jmp mov call bt clc or call jmp pushf mov sar mov pushf neg sub js cld pop jmp pushl popl pushf pushl lea jmp pushf push add mov call dec shl mov push pusha mov add pushf jmp clc lea jno and stc jne cmp jmp pusha movb pushf popl call pusha mov mov jmp lea jne clc (bad) repz xorb pusha setbe movsbw bswap mov push push pushl movb lea jmp jmp lea push pushf lea jmp call cmp add cmc call lea lea jo rol sub call bts mov push test pusha call bts mov sub daa sbb aam mov cmp sub push cmc pusha stc imul call shr jmp pushl popl movw pushf lea jmp pushl call jmp (bad) testb mov cmp setp movzbw mov test add pusha pushl mov pushf mov movb push lea jmp push pushf mov pushf pushl call mov call lea jg push pushl popl pusha lea jmp mov push pushf add call mov dec call bt lea mov pushf mov pusha stc clc add pushf jmp pusha mov test pushf call imul pushf pusha mov mov jmp add mov clc call add add adc mov pushf stc clc cmc sub call call pusha mov pushf push pushf lea jmp call pushf pushf mov push push mov push pushf push pushf popl pushf jmp mov pushl pusha jmp mov cmp cmc sub pushf pushf mov pushf lea jmp call lea pushl pushf mov mov std bswap bswap mov movb jmp call mov pusha lea jmp mov pushf popl mov pushl popl pushl pushf mov lea jmp pusha mov jmp pushl pushf pushl popl push push push lea jmp push pushf jmp setbe shl mov cmp jmp sub add mov (bad) repnz mov jmp call movb movb pushf popl movb call jmp mov movb pusha lea jmp jmp jmp clc rdtsc stc sub push mov jmp mov pusha mov pushf pushf pushl lea jmp lahf shrd shld mov cmp sub push pusha pusha call shl lahf not mov (bad) repnz xor mov (bad) icebp shl test or mov stc jmp pushf mov mov lea jmp jmp aas xor mov test add call ror neg sub shl adc xor (bad) (bad) mov pusha test dec jmp test add mov movb pushl lea jmp mov cmc shrd call pushl popl mov mov pusha pushl lea jmp clc and jmp pushf pushl jmp jmp pusha call pushf pushl inc stc xor jmp push test sub stc mul call mov push call mov shr clc shl mov call pushf sub push push call jmp lea jne movsbw clc mov call movsbw push call mov jmp stc add clc cmp stc add jmp mov pushl lea jmp movb mov movw movl pushl pushl lea jmp push pushl popl mov pushl lea jmp pushf lea jnp push pusha pushl push lea jmp cmp aad mov adc adc daa mov jmp stc clc clc sub stc bt xchg pusha mov cmc jmp rcl mov clc not btr dec add bsf btc sub or mov call mov push pusha mov lea jmp pusha pushf popl call pusha push push movb sub pushf call cmc mov cmp xor pusha mov bt cmp pusha sub pushf mov shr jmp sub pusha lea jne jmp pushf push pusha mov inc jmp cmp xor test lea pusha bt not pusha xor mov bt push sub call xchg pushf clc bt xor jmp pushf mov pushf pusha lea jmp movzbl test add pushf dec pushf pushf ror cmp bt clc neg pusha jmp xor rol sbb clc mov mov setns add pushf ror cmc ror shr call rol mov seto stc jmp mov call jmp jmp pusha mul call add adc add popa and jbe add pop and cmp add pop and nop and push and cmpsl pop add in and movsb pop add dec and in add pop and push and mov and jnp add push and or add jnp add mov add push and cmp and dec and les add ja add mov pop add jns add ret and dec and push and or add scas and push and push and mov add add and nop and sub add sbb add adc add or add push and cmp add push and jno add mov and mov and outsb and mov and out add adc add outsb and scas and aad add mov pop add stos pop add jnp add jbe add frstor add mulb add frstor add jbe add ret and dec and (bad) and lods and in and sbb add sub add push and add and ja add mov and jnp add jnp add stos pop add dec and jnp add in add test and movsb pop add or and lods and or add cmp pop add outsb and mov add ja add in add dec and jnp add in add outsl and movsb pop add aad add push and dec and jnp add (bad) and frstor add cmp and jns add dec and out add push and popa and ficomp add push and or add mov and cmpsl pop add mulb add outsl and sbb add push and push and cwtl and mov add jnp add mov add mov add jecxz add mov and or and ja add mov add cmp add sbb add pop and push and or add (bad) and and add sub add outsl and dec and adc add jecxz add or and push and test and push and dec and adc add or add and add push and or add in add cwtl and (bad) and in add sbb add nop and pop and jecxz add out add mov add push and (bad) and push and lods and push and stos pop add pop and in and movsb pop add test and mov add mov pop add mov add push and aad add push and mulb add scas and add pop add push and cmp pop add mov add push and cmp and mov and lods and cmpsl pop add scas and and add jnp add ret and push and dec and sub add or add and add push and dec and mov and cmpsl and jno add jecxz add mulb add mov add dec and sub add jnp add aad add ret and ret and test and mov add adc add movsb pop add outsb and sub add ja add les add pop and ja add dec and popa and test and in add cmp and movsb pop add cmp and cltd (bad) movzbl pusha mov bt rol test add pusha mov mov mov mov push pushl ret push call inc sub mov test pushf push test sub cmc clc push shl pusha push call pushl mov pushf pushf pushf popl push push pushf pushl popl push lea jmp pusha pusha not mov movb mov pushf lea jmp call jmp pushf rep bswap rol neg cld mov pop shl std pop mov stc movb call mov dec push movb push push lea jmp pushf pusha mov movb pushf popl mov pushf push movb pushl popl push lea jmp mov pushf lea jmp sub call pusha pusha pushl popl mov lea jmp stc xor call push mov movb pushf lea jmp jmp shl jmp pop pushf pushl ret bswap cmc bt popf pushf pop jmp pushf popl pushf pushf mov pushl popl mov lea jmp pusha lea cpuid pushf sub pusha cmpl movb pushf call cmp pushf call movw stc lea pushf jmp mov pushl popl mov pushf pushl lea jmp pushf popl jmp lea jne bswap ror xorb movsbw movsbw pop push push push lea jmp pushf bt add pushf call rol neg mov shl inc stc pushf add call jmp mov pusha push mov pushf lea jmp dec rol mov call rcr setns sar mov add ror mov add jmp bt mov cmc pushf not cmp pushf cmp not pushf sub pushl mov jmp cmp xor push jmp sbb lea cmp cmp jmp mov pushf movb pushf mov lea jmp push pushf movw idivl call jmp pushf mov pusha movl pushf pushl ret movb pushl mov movl mov mov push pushl pusha pushf pushl ret lea jnp pushf push pushl push pushl pushl popl pushl lea jmp add jmp mov jmp jmp sub btr jl mov push adc mov stc add movw jmp shl setb jmp push push mov pushf pushf pusha lea jmp cmc sub bt push shr movw mov push mov jmp not cmp add clc lea jno add jmp adc mov bt push bt sub clc pushf add movl call pushl popf movb movb mov lea jmp pushf call movzbw pop sbb movzbl cmp clc and xor add pusha adc sub movsbw movsbw rcl ror lea jmp pushf pushf mov mov jmp clc pusha jmp mov pushl push pusha mov pushl pushf movb lea jmp mov jmp dec shr inc add not dec add rcl (bad) mulb push add add pusha mov pushf movb push lea jmp pushf not bt add test clc push test sub jmp pushl pushl jmp cmp sub pushf pushf pushf pushf mov mov lea jmp pushf bswap movsbl bswap mov pushf movsbw lahf movsbw mov jmp push mov mov lea jmp xor clc add clc cmp mov sub push mov mov lea jmp call pushf popl call pusha pushf cmp pusha pushf jmp pop inc or and add adc btc pushf mov cmc cmp sub call jmp bts sub call pushf lea jne pusha call jmp xor pusha pushl push xchg push movl mov call test shl cmp cmp bt shr bt clc bt cmc or cmc jmp cmc neg mov stc clc add pusha add jmp pusha mov mov movl lea jmp pushl popl mov lea jmp pushl popl mov mov lea jmp movb push jmp mov sbb bsr add add shrd cmp bswap shl mov pusha shrd sub bswap not adc ror shl bts neg pushl cmp shrd xor call mov movw mov pushf lea jmp sub jmp neg inc movb not push dec (bad) repnz ret bswap call push ror lea pop dec pusha rol xor or bswap lea shr call mov jmp cbtw call bt push mov stc cmc cmc mov sub pushf pushl pushl call cmc pusha ror cmp cmc xor call call daa pop rol xadd pop bsr rdtsc pop xadd not pop bsf dec pop shl jmp push push mov push movb pushf lea jmp adc mov call div mov mov pushf movl mov pusha pushf popl jmp pushl mov push mov jmp jmp bswap not ror xor (bad) icebp shl add shld sar shr shr movzbl mov lea jmp clc mov pusha call pusha jmp mov call call bswap mov pushf mov mov pushl call cmp add movb pushf jmp movsbw mov jmp xchg pushf xor pusha ror stc bt pushf lea cmc push clc cmc xor call pusha mov movw jmp pushl popl pushf pushf pushf lea jmp pushf pushf popl call pushf mov push pusha movb pushf lea jmp bswap mov pushf pop mov pushf mov jmp rol shr test dec mov bt add push lea jmp mov push pushf pushf lea jmp pushf mov mov jmp mov mov pushf pushf lea jmp pushf pushf jmp pushf pusha call bswap bswap neg call call dec add add addl add lds add add imul add cmp add data16 add xorl add divb add sub add pop cmp fwait cmp add add inc cmp push cmp fstpt add sbb add pop cmp fwait cmp sarb add and add dec cmp mov add mov cmp cmp add add int add sti cmp add cmp add jnp add stos cmp add adc ds cmpb add ds xor add pop aas add mov add mov aas add inc inc add xchg inc add roll loopne add add add add cltd inc add fadds add inc add cmp add add cwtl inc add lret inc add add add add js add roll add inc add bound lcall add add mov inc add dec inc add mov add inc add dec inc add mov add mov add in sbb 