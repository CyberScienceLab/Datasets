inc fs pushf sti mov jnp mov ds jl (bad) and pop sub loopne xor ss mov sub sbb adc imul cmc iret into icebp lock loopne dec adc push out popf lret sbb add sbb outsl sbb dec push and clc pop lret call xchg xchg cwtl ja movsl mov jl cmp cmp mov lods repnz or fcmovu sbb arpl adc dec and loope mov inc sbb xchg out call (bad) (bad) or nop loope scas xor ret sarl mov add mov stc dec jo sub mov mov into xchg and mov fidivr inc pop xor xchg movsl scas fcmovu xchg imul mov dec jl leave in data16 std fdivrp (bad) nop mov sub pusha les out push je into lock and jnp lock cltd or les sub shrl bound out add xlat (bad) cmp dec mov mov cld xor jns push jl mov jae in imul iret lods repnz and rorl loope inc rcrb shll enter and adc arpl rcll xchg push jne and pop push mov sbb lea mov inc jecxz out xchg and nop sub jl call and push lea mov cmp jnp hlt test fs insl fucomi mov js adc jmp adc cmp icebp scas jbe add dec fcomip push adc cmp and push cmpsl fcoml rcll mov dec push pop mov mov iret mov mov push and (bad) imul idivb lret and pop push xor fwait pusha xchg jge subl push mov or out mov jg jmp rcrb loope loope jnp (bad) jp add jmp xchg mov lret hlt aam in pop (bad) (bad) cmp cli jno jmp in imul (bad) sbb push insl (bad) mov cld daa dec lods test cmp and or dec push es sub jnp mov xchg push fnstsw mov (bad) adc je add mov testl push popa mov sub icebp and clc adc ss stos add add jno or add xchg iret aaa inc inc sbb lahf pop jl ljmp jb stos xchg push sbb aas pop jge iret add inc leave inc sbb out shll mov out add cmpsl cmp push or out dec jg pop ror mov enter xchg sbb (bad) lret js outsb in sti daa cmpl cltd outsl push gs or out in and xchg xchg add dec cltd push cmpb push push loop xor mov or popf mov lahf jmp add jbe dec test sbb (bad) outsl scas in stos mov jo push xor pop adc adc dec ja cmp add ja push in xor (bad) sub pop fs jl out adc fwait enter pop push sahf mov mov pop das stos xchg mov cmp fcomps mov mov sbb cwtl and in (bad) pop pop or cmpsb nop jg mov (bad) jb push or jmp pop insl stos pop bound jp andl and fwait push jmp jecxz mov shl popf xchg sub push mov fdivrl adc mov sub adc mov dec shrb cli repz cmpsb cld cs mov dec imul jl (bad) imul dec mov imulb xlat jae inc sbb adc inc mov jle adc jne int and enter scas out sahf xchg movsb inc jbe push sbb decl inc scas int mov sbb mov or add or mov jmp jge jnp jmp cmc pop pop push add iret int roll inc xor or bound jbe jle lahf xchg ret mov push lea shrb xchg adc in dec pop and ret sahf pushf add test fidivr pop mov dec mov test arpl in sub sbb inc fldcw mov push pop faddp lds test stos dec sahf lods xor dec xchg push bound mov stos pop add inc pop and and test push repz jno in sti lret push loope xchg inc mov aas pusha dec push jne ljmp push mov (bad) mov (bad) call xor ss sbb adc daa fnop fwait mov jbe jge mov addr16 (bad) fwait or cltd pop aaa push movsb imul push aam jbe jmp pop inc inc xor scas sub ljmp xchg jae jge out inc mov xchg out insl xchg loope pop arpl mov iret add push rorl loope stc push lcall cld mov inc cmp xchg cld (bad) push push movsb insb das jecxz shrl inc and ret push pop jl in and test outsl push push outsl movq pop pop mov push (bad) (bad) psubsw inc cli cmpl fwait leave mov jp lea (bad) andl dec imul adc xor cmpsb cmp dec and jle jbe insl aaa mov adc lcall or add das mov xor repz jno (bad) mov scas rorl sti mov sub fs xchg mov sbb dec mov enter insb gs ret adc dec leave cwtl rcll movsb mov push xor (bad) repnz (bad) pop popf inc pop mov jne push movsb xor add je test pusha push xchg into mov xor movsb inc (bad) mov pop mov test shrl jns sub push pop add shll push scas rorb adc jl shll jno out icebp incl push xor (bad) mov add into (bad) jo and xor in cmp push lcall dec mov stos mov jp and lret rcl inc jge (bad) push ret inc ljmp shr mov push push insb gs add adc int3 jmp cmp bound sub cwtl xlat inc sub into test cli pop sbb xlat xchg add pop jecxz int3 push fdivrs cmp dec in daa xchg jl int push arpl dec xor xlat das mov das aam (bad) out mov out lahf cmp sub add icebp add lods xor mov push cmpsb ret sbb rcr shll arpl ja jle pop aaa xchg mov loopne sub repnz adc cmp sti dec adc popf jg sub loopne sbb dec dec sbb jb (bad) xchg loopne dec les scas push sub clc (bad) and nop test and leave (bad) enter scas les jge sub lea out fdivrl push aaa mov lock xchg mov and je loopne nop mov lods or push inc mov mov ds rol out insl and ja lcall stc mov ret or push xchg dec mov and pop sub xor and adc test cmp shrl scas aas sbb and (bad) arpl pop fdivp arpl pop fs adc rcrl and or xchg cmp aaa push mov sbb mov cmc push bound in and jbe daa aad dec mov cmpsl inc mov lahf and xor push jle mov xchg mov mov gs or push popa jo or out push jns mov lods mov bound push dec jecxz aas pop sbb fisttp inc mov inc inc push pop ljmp mov push mov mov int inc cmp pop pusha aas dec mov jb imul jae mov in or std sub jp mov orl and stos mov outsb push sbb loope jb mov daa cmp cld ret call mov add xchg (bad) mov xor je and mov sbb xchg outsb fadd or inc sub push add mov mov lret fnstcw neg or icebp xor test xchg and adc lods sub es jmp add cld add push mov aas fidiv mov xor dec pop lret sbb xor ffreep xor lods call in shlb in add push int3 cmc rcll push push jmp ret insb lcall mov pusha rep sbb inc in pop xor mov pop call lahf ret ss jnp pop mov cmp jle fnstsw popf cmp xor les add scas jns fist cmp out add mov sub mov add movb push pop ds mov lret stos mov push cmp pop popf leave add push jle mov adc or jb mov or imul rorb dec fdivrs pushf cs (bad) xchg insl jb aad jnp jmp lret (bad) data16 mov cmp arpl es mov jge jg cmp push int3 mov xchg jne out (bad) lret jae sbb lods pushf mov enter dec pusha loop jns cmc sahf test dec mov xchg in jecxz cld ret loopne mov (bad) pop push pop (bad) fmuls cmp aad or dec adc mov pop mov dec lock push push mov loope jb adc inc movsb stos push mov lret xor fs mov push test inc fstps lods adc adc or inc jnp or clc sub inc rcrl cs jne jmp jl arpl or insl std xchg cltd jle xchg pop ret mov push fidivrl popf leave pop add xor lahf pop shll mov sbb inc ja cltd mov jg mov xor lahf outsl inc adc xchg push mov jno add or repnz pop mov push pop dec je and xchg popf fsubs (bad) dec sub mov pop inc jp mov sub pop enter jle insl add fadds (bad) jne pop std sbb push sarb mov hlt movsb rcrb ds imul cmp sbb decl lret iret stos lds and repnz inc mov xchg test inc sub adc cmp out ds (bad) push mov int3 jbe lcall push inc push jnp insb out mov pusha bound fmull mov cmp mov ror push cmpsl cs es or fdivrs mov sub mov enter xor or in mulb clc sar ret bound xchg push fidivl shrb lret pop loop clc mov inc lea (bad) imul out (bad) mov adc push call mov sub adc push pop test popa and mov bnd pop test mov fisub or insb int mov inc movsb addr16 jae cs cmpsb std test dec xor lcall push pop jnp mov cmp cmpsb or lret shll xor push js or pop mov bound adc das pop dec insl hlt xchg lret sub mov lcall ror packuswb mov jmp push xor outsb xchg mov inc (bad) adc clc stc loopne mulb or sti ljmp imul push std lcall call dec sub ljmp sbb (bad) add arpl and adc push mov and xchg (bad) jo and or lea cmp adc divl hlt mov mov xchg xchg lret movsb rol mov js jp xchg xchg or test call lret outsb push adcb jo fbld scas jle stos (bad) xor sub lret (bad) inc and mov (bad) dec stos jnp lods lcall mov lock int3 dec push mov sbb dec cmc jnp out ret push mov std adcb int3 popf adcb dec adc (bad) xchg aaa rorb dec and dec pop dec in add cmp push xor shrb js sti popa (bad) stos jne or mov arpl fwait add jns das rcrl outsl repz es in mov xchg inc pop test popf pop leave (bad) mov cmpl mul and pop stos sbb adc bound popf jge push sub ss sbb mov pop adc (bad) addr16 dec fisub addr16 mov dec loopne sub imul sub ljmp lcall dec sbb mov dec popf out fildl enter sar cmp (bad) (bad) popf dec or mov cmpsb xor xchg xor (bad) jae sub jno pop xor or push (bad) pop ret (bad) mov pusha jns or call jge ret jae clc jno sub inc pusha outsl add mov xchg fwait rorb outsl bound or ss pop dec push mov fmulp testl xchg jp xor mov or ds add and mov mov jae fs mov hlt repz cmp lods mov stos mov imul outsb and jmp lods nop (bad) mov jns xchg adc inc add nop and xchg test jmp mov xchg fistl add stc lcall pusha mov mov lret xchg adc lea ja out push jecxz adcl or adc sti fs (bad) dec jl dec inc popf jbe mov inc out jle xchg test imul pop sub and mov adc push data16 lret ja out ds mov mov ljmp push xchg mov mov jmp repnz (bad) jle repnz push inc jle movsl xchg out jmp and jae hlt add pop mov icebp lods ret sarb jmp jbe sbb fcompl cld das mov fnop sti jmp stos add sub inc dec pop sub scas jae scas xchg cmp outsb out jae daa dec push int push outsb (bad) adc mov mov iret clc loopne sete testl add int3 push or aas leave sti sbb fimul jecxz xchg sbb mov imul cmpsl hlt dec lds je sbb je mulps adc xchg scas dec cli (bad) push adc nop mov sbb lea (bad) js xchg out mov fs out orl lret adc lahf (bad) jmp xchg fs fidiv pushf inc out push cld adc sti pop or jl pusha add xlat jp aam test cmp popa imul or cmc push sub mov (bad) jb xor sahf xchg push data16 cmp int3 push aas (bad) mov icebp dec out push xchg and ret rol or dec mov insb ret js sbb inc shlb incb mov push jmp cltd cli insl jb loopne pop xorl sbb test fsin pop in push dec outsb ficoml jge scas lods jl mov js inc mov rol out dec jmp rclb clc mov shlb fs rcll sti push fdivp out sahf push mov cmp js stc leave aaa cmp mov cmp xor iret lret mov or cltd inc cmp dec mov mov pop pop jmp or std ja mov mov jecxz push xor or mov push lret (bad) dec sub sbb into in mov (bad) movsb aaa push mov mov xor xchg mov xor or fldl cmc and xchg loope pop inc mov cmp mov (bad) lahf jmp mov push fistp cwtl aam outsl mov repz mov fist clc bsf and mov aas popf mov popa and push call fs fcompl add xchg sub (bad) movsb fnstenv cmpl add stos fistpll js and jae add push test pop jmp fimul jle and mov mov add test fstl push sbb mov int3 sbb (bad) lcall testl dec loop push clc fsub ljmp (bad) icebp push xchg scas cmp mov in push ret mov or add cmp lahf xchg in dec jno clc ret and mov mov pop jg jae add inc or mov xchg aas lahf int cmp loopne ret mov ror jp pop test scas lret pushw fs scas mov pop cmp cmp push jo mov lock inc shl push dec and xchg scas xor mov jmp test out xchg ja jge fcoml out outsl hlt add push icebp es fs and push inc xchg outsb cs movsl shrb hlt test testl (bad) mov dec sbb imul call dec stc pop pop mov sbb xor ret xor movsl (bad) xor sbb xor mov dec sbb pop dec es jb rcr les rep das repnz xchg mov or mov mov mov xorl add jbe arpl cli and mov push push insb lret (bad) inc lret mov dec jecxz sbb cld and call cwtl push pop jl mov std jmp cld stos jns push jbe and popf movsl ds jo xor sahf lret add inc jb sbbl push jns or test mov insl insb adc scas ja cs rorl mov scas adc int3 dec (bad) shrb std jno lea fdivrs stos hlt xor push pop adc xor daa lahf roll cmp jne push and cwtl mov mov dec sbb jo pop inc pushl pop popf fistp movsb pop (bad) out gs enter inc nop xor aad dec xchg xor cmc sti or repnz sub push test ss mov inc test inc inc or scas mov mov fildll jmp adc pop (bad) insb sahf daa jns fbstp push movsl ja imul xchg cmovnp pop push dec mov xchg mov out jle repnz cmp push dec movsl cmp mov pop mov adc aam daa out jp mov hlt mov mov dec jmp gs nop jg (bad) lock scas or push xchg cmp sub cmp and loop xor mov in inc jmp stc mov jno outsb xchg scas xchg fdivs aad rolb je cmc in add loope mov pop or push fadds push jo push nop pop outsb repnz mov popl mov inc sub inc push pop jle pusha fimul dec dec jae cmp stos cmp pop mov scas jns loopne cmp in ds fldenv arpl cmp loop fisttpll seto dec (bad) and mov push or stc ret jnp sahf push out or ret push or scas pop push outsb in in rcll int jbe (bad) out call pop jbe (bad) and or (bad) dec sbb cwtl (bad) sub push call ret cmp lock push mov push loop inc (bad) hlt push push dec inc xchg fidiv sbb hlt gs into inc js jecxz mov int gs pop push xchg xor in iret inc xor adc lods stos adc into outsl pop mov sbb push movsl push push inc shrb loop lds ret mov push in aaa sbb inc mov or push xchg lcall imul jno fmuls (bad) rclb cltd hlt mov sub stc sbb inc loope inc mov push xor pop es (bad) rorb repz pushl lahf mov adc jmp pop pop jge arpl lahf (bad) xchg jns bound cltd sub pop cld dec dec daa xchg pushf shll (bad) cmp inc insl fmull outsb xchg bound or sub test xor inc and inc mov push out data16 out (bad) lret das adc (bad) fwait pop push jp,pt aam repz in mov pop mov repnz push dec sahf frstor adc mov pop pop xchg decb cmp xchg outsl adcl xchg mov jno sahf cmp jae push cmp add push insl dec and jle dec mov jle out dec push outsl cwtl aas popf icebp les stos and ja pop push xor pop subl bnd inc dec int leave mov xlat xchg adc data16 jae popa es in jnp inc fcoml outsl and test into lds inc sub sbb pop lcall adc test xchg mov cmp xor push stc inc push and fiaddl xchg mov push mov fstp push loopne jns mov push in mov lahf jb cmp adc inc (bad) xor mov push inc mov and or mov sti hlt cs enter stc aam hlt rolb test dec pop sbb (bad) sbb add jg cmp roll loop jecxz in into shrl mov out repz mov negb cwtl mov sbb jecxz in cli or xor aam fwait dec pop out xor push inc jmp inc mov push xor mov mov sub arpl aam (bad) jg xchg xchg loop icebp pusha push pop add inc inc movsl call xor mov insb pop pop repz cmpb xchg movsb jp push xor lock out negb push (bad) pop inc push int mov (bad) mov jnp ja mov fcmovne mov nop lahf adc cmp sti jo mov shrb pop or inc cs fidivl daa cli cwtl jg aam and mov cli push cmc and fsubp mov std sbb push dec sbb fldl dec sbb ds dec xchg leave cmp dec adc xlat xchg push dec sub xor imul jne push cmp add push fwait jg sub lods test (bad) std push sbb xchg int fwait outsb mov inc or enter sub mov mov jmp mov addr16 roll mov cmova stos outsb mov lea enter cmp adc lock outsl sbb test mov rcrl in fstpt mov and stc lock push in leave mov mov jo cmp aas int3 (bad) imul pop es int3 ret movsb imul test jnp test adc cmp xor int sahf jecxz add insl mov fsubr pop (bad) in cmp jge mov lods lret mov push dec xorl pop (bad) fwait mov test jae sbb pop adc xor add pop adc sbb mul std sbb fs xchg add cwtl test and cmpsl jmp addr16 cmp shrl push jmp or cmp sahf cli sub xchg adc mov mull mov stos jmp xor mov push adc mov call mov xor pusha or sub scas xchg stos jp pop push rclb jecxz and and push scas fcom aad mov in mov xor loope mov xor orb push xchg fdiv inc add ja or cwtl test jg cmc aad mov mov lock adc dec test sub imul aas sbb icebp mov and jl xor rolb mov outsl push cs mov push pop cmp cmpsl rcrw cmpsb mov jmp int stos cld adc scas ret mov lods dec cmp out adcl lea leave lret xchg jle mov arpl or pop ret test mov pop sbb sub (bad) ja outsl pop lock cmp xor sub inc mov (bad) enter cld sti bound rorl jg mov andl out push xor jns jle addr16 cltd push cmpsb mov lahf (bad) int std (bad) add insl push loope popf ljmp sub sub repnz jl in pop stos shlb push xchg mov jbe test mov push mov dec mov jg jge jp lret jle mov xchg loopne add push pop dec inc pop icebp add push (bad) lock inc arpl jp das pop cmp ds mov mov stos mov fisttp mov mov add pop jg mov icebp xor loopne arpl sbb xchg fs fildl cmpsb nop fbstp hlt daa adc mov dec fwait push mov mov fistpl jecxz (bad) sub mov or pop lods imul mov insb je test iretw loopne xor adc fiadd inc lock out xchg ljmp pusha push cmp fmuls cmc adc mov mov mov in int arpl dec movsl adc xlat mov out imul dec fs jge lcall repz push xchg (bad) dec fsubrl adc lods imul sub idivl jg cld pop popfw std cmp jne inc mov mov sub jmp bound daa fdivrl (bad) or jno pop pop out mov push in sub adc lods mov cld std je pop adc mov mov faddp out mov inc xlat pop fiadd sub (bad) cmp leave dec mov int3 dec mov mov pop pop jae mov in enter cmpsl mov add ja add inc jecxz push movsb jl jle lds fisttpll xor lcall cld add dec add test dec pop lahf mov lea ds mov fwait pop mov jecxz and and stos enter in dec scas pushf jno das xor mov cmp jnp stos int inc mov or dec pop mov imul nop pop out mov jb dec mov push adc lods jnp out fidivl push out lods pop ja jp stc mov pop jo test int (bad) notl cmp cmpsl mov fwait and dec mov pop loopne mov add inc adc jge pusha lock mov sub jp scas stos ret dec js push aas xchg push movsb das ret bound lret mov lret xchg jbe and sti je pop lahf mov sbb popf stos mov jp scas adc jno andl enter push jae pop negb outsl and push in inc iret and xchg pop mov in xchg js xchg inc aad sarb sub pop scas fnop mov inc aad out sub jl lods inc push mov outsl push xor dec push or mov cs sbb xor mov fs fcoml leave lods cmpsb pop sub push xchg fs mov (bad) int3 or mov xchg and and imul push (bad) sbb dec xchg cmp movsb xchg push out push sahf push sar test sti jge test mov shll ds aaa dec call sbb stc and mov call pushf cmpl es push lret (bad) jg jmp add icebp cwtl mov popa cmp pavgw jl cld gs rolb add push (bad) rolb jmp outsb (bad) icebp mov adc inc and out imul loop rcl jb stos adc mov sub (bad) shrb or mov (bad) in out (bad) sub aas jns lods push pop sub inc pop push push ds es (bad) push xchg mov dec out jbe es push sbb (bad) xchg cmp sti mov cmp dec hlt pop cmp int dec out push adc rolb nop int sbb iret sarl fs add sub xchg pop push psrlq (bad) fildl mov clc ljmp lds add out dec out dec mov xor rolb aas dec (bad) mov sub dec iret inc das mov push inc dec pop in xor mov in add imul addr16 es sarl out mov mov adc dec mov call daa lds push sub push add sub outsb fbld jge mov inc mov adc add cwtl sub fs push ret xchg or and cs aaa sub xchg cs mov mov cmp mov out push mov out rclb arpl mov jb push sbb xchg out clc push push fs shlb out (bad) sti jp cwtl int mov xor jp mov idivb daa xorl xchg sbb xchg fstpl cltd divb nop pop popa jb or es jge mov push ljmp inc stc jmp adc inc jle sbb in add cld test shrl imul stos mov inc ss push xor arpl outsb sub adc call pop pop or mov push jnp ds ss jae and stos movsl or lock lret xchg jae sub cmpsl mov inc add dec cmp jns pop out outsl je scas js lret insl jns jmp lret lea cmpsb cmc cmp mov xor cmp inc fsubl adc fwait mov in jecxz xor icebp cwtl (bad) mov outsb and xchg mov fxtract sub mov insl mov jbe pop test or enter lahf xor test dec mov mov push popf xor add jl xor push or sub (bad) lock mov push sub mov into rcrl pusha repnz pop and (bad) cmpsl lea jp and push mov daa xor adc or aaa inc xor fld jecxz (bad) imul push push mov fdivrs sbb es pop or loop xorb fcmovnb xlat xor (bad) stc mov inc jle in or xchg lret out fucom jbe movsb xor jmp ret push jno sti push repnz gs push jb addb (bad) inc and punpcklwd in pop jl aam mov arpl in push sbb mov inc arpl xor pop cld lods inc aas push icebp aad jle push add mov pop pop cmp daa dec shlb add insb out mov pop xor (bad) dec add adc inc std mov add add and add add lods dec test aad dec test inc xchg xor insl adc mov bound pop leave cmp dec sub loopne add sbb les cmp push shll mov imul cmp mov xor dec push sbb sbb dec ljmp lcall fs add cli cwtl jb add mov repz lock ljmp es dec data16 cli adc push lods mov adc push pop rclb mov popa mov or es mov aaa fdecstp hlt inc fstpl es add or ds and xchg test sbb dec ljmp lcall cmc repnz fcomp adc jl test inc dec sub fsubr notl rclb jbe aam gs mov lahf and inc jb nop mov push rcll xor gs push mov pop or cli add jo sbb bound pop pusha mov stos sti mov cmp jbe bound fdivl add ret andb outsl adc popa loop and xchg jnp mov push mov dec inc sbb (bad) and cmpsb fdivl mov xchg xor cmp pop aad nop ja sub or pop pop arpl scas sbb cmp movsl (bad) mov iret sbb inc pop (bad) cltd dec adc les sub mov xchg push (bad) pop adc add adc pop dec or mov scas shrl (bad) popf jmp (bad) iret in fwait in xchg outsb pusha cmpsl mov jno inc inc mov and mov (bad) mov mov sarb call mov inc xchg pop xor pusha add sbb and and cltd cmp pop add inc lret jae out xor repz cld clc inc sbb fnstenv or cld movsb loope icebp mov jge jg push cmpsb fs mov sub lret inc aaa pop dec sbb arpl push adc push xchg dec xchg lret jno into popf and lea and lcall imul pop dec call fxch xchg mov pop sub add inc sbb data16 pmaddwd sahf push fistpll sub mulb sbb (bad) mov xchg sub inc rorl add in xchg mov cwtl pop inc (bad) out inc daa aas call xchg imul sub stos js nop add testl cmpl repnz mov lcall and sub adc pop jne gs mov jmp mov repz mov sub sub mov clc outsb mov sbb fisubr or mov dec push push or aaa (bad) sti (bad) insl mov pop lods pop cmp into arpl xor push inc dec and into adcb into cld testb mov (bad) adc cmp sub cmc negb jnp mov (bad) fs xchg jbe leave sbbl xchg sbb jns jp xor sbb or imul push jl fwait add lods add xchg enter mov jmp fs stc jge cmp mov push mov add ret push sub xchg nop sbb addl or push insl (bad) or dec inc data16 ret dec or push pushf sbb pop (bad) jge mov mov js adc dec cltd sbb sbb jne mov mov movsb (bad) rclb fisttpll sahf sub aam push out dec enter mov xor add and ret mov sahf or cmpsb dec jno sub imul xlat loope mulb cmp into stos sbb icebp lahf (bad) in jle cmp sub xchg shll dec fbld aas jb fldl adc push call addr16 jle adc inc jecxz sbb fsub push mov stc outsl adc mov clc in adc (bad) lods inc xchg mov sbbl adc sub in lcall (bad) pop test lods mov mov hlt icebp mov sub pop or ret lret adc xor (bad) out ret out arpl xchg daa cs aad movsb push bound dec enter cli lret push cmpsb test adc and add push mov inc mov aaa test xchg cld adcl aas sti lret jecxz movsl pushl lcall test aas push mov lods lock fistl jo (bad) jae jae cmp into pop sbb xor aad repnz xor (bad) adc cs cltd sbb cmp popa xor mov dec pop rcrl incb mov mov push stc mov jo (bad) fwait lea sbb or mov pop ljmp aaa cmp icebp in cmpl scas xchg out scas or and or pop cwtl mov pop movsl adc sub pop and cltd bound lods (bad) popf or fcoml cmp sub cmc or jge cmc mov inc stos out cli (bad) push sub add jg insl cli mov adc jl jbe mov int scas push add pushf ret mov inc int3 sbb cli cmp push cmp and xchg mov push mov gs xchg cmp and test loope (bad) inc out mov xlat (bad) xor fs pop sub push jp xchg inc xor (bad) mov sbb (bad) inc fidiv jg xchg mov sbb jb pop and jle dec (bad) mov jl iret mov popa mov test cmpsb (bad) mov jecxz jnp inc ficoml or lahf mov cwtl imul xchg jecxz js xor cwtl cmpsl inc xchg outsl hlt addl sbb or sub jae sub fmuls nop inc nop and cltd adc mov sbb push stos dec cmp and je cli mov aam cmpsl jmp sti (bad) int mov cltd (bad) mov lock xor imul imul xor lret jg xchg enter aad test lret xor push test or das test rolb add dec jp sub xor into or frstor sbb push test inc dec lcall push shrl inc sti cs or iret sbb add cmpsb dec stos les mov lods fisubr pop cmpsl sbb popf xchg std xor mov loope mov pusha es inc nop sub ljmp push sbb aas pushf cld fiadd xchg mov imul add inc nop (bad) and dec inc and insl xchg cli sbb jnp sti test xor test imul pop and (bad) hlt push xor aam insl outsl push stos dec iret pop pop cld mov data16 in pop inc gs add fnstenv ds jb xchg imul add lcall fld lea mov out lret movsb mov pop mov lock adc out jecxz stos sbb inc mov out cmpsl ficoml jl test add jle push mov inc ss adc sbb into inc (bad) mov icebp pop cmp dec and enter bound inc cmpsl dec dec mov xchg jbe mov lea fbld repz jmp jge pop and enter and sbb je clc das rcrl and enter pushf fcmovne mov mov daa mov jne mov test push or or mov cmp sbb (bad) mov cmp nop ja cwtl sub adc ret push cltd xchg lret iret leave aas cmpsl lahf jnp int push xorps into daa dec repz and sub dec mov sub pop test mov xchg fistpll inc fldl ret xor mov js gs mov adc jecxz sub pop mov fnstsw push xchg movsb pop sbb adc inc sub popa rclb push cwtl fdivs ljmp je push push xchg scas gs push movsl mov andl iret push mov test push jo pop (bad) sarl dec push mov addl jnp pop out fisttpl jmp pop push mov rol out adc cmp fisttpll xchg mov pop (bad) sbb out inc jo aaa mov jmp ret dec xor pop ja divb mov into fxam pop or fild or sub es setae inc loop movsb push movsb ds repz xlat mov sub jne and mov cmp int3 ja jb fucom cld or dec pop jns cmp jmp mov test in imul sar dec jbe addb xchg push xchg mov sub mov jecxz,pt iret insb (bad) es mov sub test push sahf mov pop out jnp cmp imul outsb es nop cwtl into popa jae and dec hlt aam fisubrl jg inc test lods sbb (bad) xchg xchg mov adc xchg fstl lds add adc inc cmpsb xor aaa out in cmpsl and in divl scas pop dec mov je or xchg push int3 and and das sti push add sbb sub pop dec cmp std popf push sub repnz icebp test adc fwait pop ret out xchg and inc adc jecxz xor stos adc in inc push push out inc add shrl push (bad) out (bad) out lahf mov clc jl or sarb je xlat enter cs fstpl movsl stos and out push sbb int3 (bad) xchg mov ja je jmp lods shlb xor fstpl and sub push cmp ja mov fcoml hlt mov clc out and or push cmp outsl mov js sub (bad) mov mov jmp sub xchg pop mov mov mov lock push pop adc or mov movsl inc popf das adc std icebp in mov pop jl insb xchg xor je aas out testl xchg leave je pop int3 xchg lea idivb adc inc jo push push (bad) jnp shlb inc fmuls dec dec in dec mov mov mov mov out mov adc outsb ja cmp pop push iret dec jo (bad) stc add cmp xchg idiv jo aaa mov stc movsb test jge mov fcmove xchg jl js mov jbe jno jae jno (bad) repz push cmp inc imul inc and mov popa push push aam cmc push add repz sub sub aad cmp icebp bound xor pop (bad) xor lcall scas mov (bad) fstps out pause and sub mov mov xor pop inc imul and mov negl pusha and push (bad) repnz cmc inc dec int3 sbb mov sub dec lret xchg push (bad) jne dec outsl mov stos enter or popf test pop and negl ja std imul dec ss jbe fadd imul cltd cmp popa jecxz push lcall xor xchg push mov add stc repz mov pop jg out cmp subb pop aaa imul lcall adc xchg lods jae ret enter (bad) loope lods add hlt sbb aaa repnz pushf mov or fistpll rcl fwait out arpl test push add dec mov mov (bad) cmc scas (bad) imul sbb mov aas lds loope jmp adc test test lret xchg and pop adcl jmp push xchg mov or lret mov out xor push add lret jbe ret mov xor cmp and sub lds push fwait cli out push out in xor outsb (bad) in add pop mov aaa clc test popa jns jne cmpsb scas aad icebp fs pop arpl in int3 in sub pushf imul mov call fwait rorl or (bad) jb call ja push or addr16 jle jl mov mov and mov jbe stos cs out ja lret outsb push mov imul mov xlat sub adc (bad) xor pop sub xlat dec fisubrl je out subl cmpl mov dec and mov sub fs push inc sbb insl inc (bad) sbb imul push pop mov outsb xchg popa lret pop popa jge adc iret mov pop sub lret test sub cmp dec ja in fldt insb mov inc mov dec call sarl (bad) and add dec jge aas imul and inc add test jo aad ss push xor dec jmp mov fdivs ss sub aam fstl (bad) maxps out jbe lods outsb add out int3 in (bad) fisttpll or (bad) ljmp popa adc pushw test adc data16 push (bad) xchg lret das xor xchg rcrl push cwtl and dec jae push jl mov movsl mov stos xchg mov imul and repz into xlat loopne mov mov mov out (bad) mov sahf stos (bad) lret enter mov data16 jl add mov dec adc movsb ret int3 (bad) sahf dec (bad) adc mov mov loop decb lret inc pop fnstenv pop push pop add stos (bad) stos and (bad) sub pop je mulb jo xchg or jbe stos jg mov pop pop dec mov jp jno mov stc push sub xchg mov mov stc dec sub pop inc mov jne,pn call out sub sbb add sub leave fs scas shrl mov int3 aaa inc in pop adc mov (bad) roll (bad) scas pusha pop ljmp les lea xor ficomp (bad) xor cmp incb xor adc inc mov mov cmpsb data16 lahf rcrl mov lods (bad) adc xor in mov pop roll aad test mov jns stos cmp stos adc jge cmp (bad) jecxz hlt fisub xchg jecxz mov mov pop adc insl mov inc hlt dec adc sbb add dec dec int insl adc into sub or les jecxz pop sub les push xor enter inc scas dec mov inc xchg and inc pop adc lods pop fld sbb or enter mulb add push lods sub adc (bad) iret dec test fisubrl sub xor push sbb ds sbb nop hlt fimull rcr or gs das mov dec ret cmc fdivrl inc dec call cmp in dec sub bnd inc sub and mov push das notb popf jmp popa xchg mov mov sub lods int3 xlat push addl mov push pop in and push mov mov sti enter int xor lahf clc popa jne es fimull in je adc sbb push xor pusha xchg push (bad) mov sbbl data16 fs jecxz adc xchg xchg jle fisub insb pop or ljmp daa lahf (bad) xor xor ret pop loopne xchg pop testl in pop cld (bad) repz fbstp jecxz push popa bound es jp jbe sar iret popa into mov xor sub mov and ljmp mov pop stos mov ret mov test fisubr rcrl xchg push aaa inc fs out ljmp and imul in lcall mov sar cs iret sahf cmp xor int jns inc and push dec pop mov movsb (bad) lret jl cmp mov pop pop lods ja into scas jmp pop lods mov jb cmpsl jle add daa and mov (bad) xchg and mov dec scas and fcompl sti adc sbb jg pop xchg push xchg test mov test jl adcl enter sub ret cmc pushf sbb lahf push dec fldenv mov inc popa cmpsl inc jbe lret xchg aas (bad) mov ret out stos or dec push add loope,pn out das push sbb xchg ja scas or and or and lea leave sbb arpl ljmp (bad) mov fisubrl cmp nop mov push out push push stos sbb xchg add std aad add (bad) xor fprem pop xor add inc cld xchg push cwtl and gs jle pop pop add xor int3 sbbb in cmpsb xor inc outsl (bad) shrb and or push scas push and jbe cld in clc call test incl cld mov arpl lret cmp xor xchg rorl mov icebp sub sub and cmp sbb loope mov fimul xchg pop shrl and sbb pop das mov sbb es out ja and cld iret ja scas mov in mov fsubr push jmp out cs repz movsl (bad) in push int adc pop add dec or sbb or popa mov popa or in and pop daa mov mov int3 xor push jg test dec mov mov addr16 leave xchg jge addr16 push ret add out fcomps jne mov mov lcall (bad) mulb pop dec fnstsw popf data16 mov pop adc cmp pop push das push (bad) rclb or and push leave popf mov xor mov cmp rcll mov and cmp mov mov (bad) dec and sti xor push jae std lds pushf nop push iret jne sub fs test hlt orb iret loop jl test dec jmp push das rclb addl mov sub clc js inc jbe xchg out js (bad) xlat sbb jl adc sbb mov push mov cwtl cltd jg adc bswap inc iret and add pop jo push clc test nop and addl jne xlat push adc lret mov cmp inc roll xchg push lahf jno cmp pop jp int sbbb shll mov adc sub hlt insl jo mov cmp pop mov mov add push or jecxz inc fwait jnp sbb cwtl mov in nop out push mov inc loope aas sbb adc in (bad) aas and into push rorb cmp call jo add inc ret repz sub fstp pop (bad) hlt outsb cmpsl adc xor repz or ret dec cmp mov and sub mov sub in xchg pcmpgtw or jmp cld fstpl fwait sti dec xchg nop jl mov sub jecxz push (bad) xchg (bad) xor fsubrl mov inc pop lret outsb pop leave jb dec dec outsb cmp add data16 mov cmp mov stos xor cld stc xchg xchg stos xchg mov jmp insb and xor je mov clc in inc nop push ss lret insb mov push mov in inc xor xchg pop or push sub pop mov popf jecxz fs mov mov jno test addr16 mov punpcklwd push hlt loope nop cltd cli add xchg mov mov dec inc hlt mov lahf sub ret dec dec mov mov outsl ljmp mov es sti enter pop dec popa mov mov loopne mov lret fisub popf in mov push jae and scas js pop (bad) dec test push stos lcall mov bswap gs and pop (bad) cltd sbb pop (bad) xor push jae cld pop jmp cmp in call adcl (bad) push (bad) aam push adc adc push jno jns test jl pop lods sub jmp or movsb jmp jbe fnstenv imul adc icebp jecxz mov sub mov aad je inc enter jle ret mov pusha xchg imul addr16 pop test mov repnz jmp pop pop stos and cltd pop add jo pop loope mov mov mov dec ficoml inc cmpsl fld test rolb push or loopne addl pop insl int3 das jecxz jbe cs jl aaa cmp dec lods aas ds pop jle enter cmp push mov push mov sti mov pop mov lcall sub les sbb inc fld lahf ljmp mov push pop or rcr dec mov outsb xor sub add mov pop jb call out or and pop jae sbb sbb mov aam sbb jecxz jge mov and std sub and ds inc add test or loope imul insb pop ret dec fwait jnp fstl ss int3 adc gs popf xchg or mov cmp addr16 jno jmp pushl mov pop daa test pop aaa xchg mov hlt les inc and xor fs adc clc sub scas cmpsb imul inc outsl mov fnop add shll or insb inc jp pushf inc test add cmp add mov jb leave pop nop add adc pop jo roll pop dec loopne movl dec pop jle push adc dec scas xor outsb jo hlt pop cmp xor lods pop lea xchg cmp pushf push pop loop jo mov int3 inc jb pushf popa inc push addr16 fstpl inc and mov inc (bad) xor lret sti out into (bad) mov js lret xchg bound jo outsl jns (bad) mov or add and imul test test aad jp or or jno adc push sbb aam dec adc sbb jge push sti add enter mull cmc pop sub adc jge jae mov fistpl popf cltd lock jnp xor rcl xchg jne lcall add ret popa dec pop iret lcall arpl imul xorl lods dec mov xchg into or fsubs leave xor mov pusha (bad) ss rcll pop jae pop or ret test pop fs adc jmp into add imul jnp and sti (bad) jno dec pop add ljmp jbe pushf enter hlt (bad) jae xchg add mov orl xor inc fcmovnu dec ds cmc int3 mov dec aaa (bad) xchg je adc mov aas add imul pushf mov loopne add in dec xor ds test loop pop ret and and or mov hlt nop push xor jp es orl adc pop addl (bad) pop int3 addb testb xor je jle imulb adc sbb or push adc sub fwait repz in fdiv out xchg outsl mov adc sbb jmp adc (bad) push std arpl rcrb xlat inc jp xchg add push nop pop jmp lea fsubrp jg call lea dec and sti dec cmpsl mov ror test test sub sbb cmp cwtl mov push cmp or lock jne push lds jmp jnp (bad) loope pop into sub jmp cmp sbb movsl cmp ret mov and popf sub (bad) cs idiv test or into rclb mov hlt pop (bad) (bad) leave int dec cmp pop enter stc push pop enter xor imul adc inc adc je cld (bad) push or int sahf je imul push mov sub addr16 push mov and jl daa bound sub scas sub into popf jp push pushf popa dec jmp or adc loope imull (bad) jmp std imul popf mov mov xor lods sbb xor or scas add lcall int push inc adcl xchg ljmp lcall (bad) iret out xchg fisttp cmp insl jmp aad in out aad mov push push cmp and clc mov mov pop scas add cmp scas fdiv pop mov sbb push std push pusha js add inc mov xor addb xor data16 jecxz mov xchg aas add mov ret pop adc aad sbb pop pop cltd jmp loop je dec jl sub outsb pusha dec adc adc stc or cmp xor and out div (bad) jmp xor add andb ret xor out pop in lock nop clc daa nop or pop shr mov dec mov dec xchg mov push clc or add sahf pop scas jbe mov sub xchg pusha aam in icebp pushf scas adc cwtl and jle xchg pop jp lret push dec aaa aaa mov aam jae out movsl enter sbb xchg out xchg mov insb mov je mov stos xor fistp imul dec (bad) call cli add and out outsl jg xor es hlt std adc cmpsb pop and loopne fxch out fistpll lods ljmp out out pop inc bound add icebp inc int jae xchg jno sbb ret or pop mov inc ja sub std and (bad) (bad) mov xchg (bad) cltd pop mov je js sbb dec inc jge test out pusha cmp push out hlt cld (bad) iret aas fmull lea cmp lods push sub jmp sub in cmp pop int add xchg loopne js sbb pop insl imul mov js pop mov mov push bound movl inc jbe sub enter pop mov enter (bad) icebp mov roll inc add movsb and xchg loope adc mov mov dec cmpsl rcl pushf add clc in sar into xchg lods xchg outsb unpckhps dec imul ds (bad) lods xchg mov push decb cwtl adcl int adcl push lock mov (bad) cs iret xor pusha jp mov rorl mov scas jg (bad) xor rclb adc arpl and out pusha shrb or lret sbb fnstsw mov notb data16 cmp jae push adc stc shrl (bad) mov fwait nop mov or sub (bad) adc jne dec (bad) mov leave sbb loop sbb gs scas outsb mov sub aaa imul push (bad) fistl jo mov negb in adc in inc sub imul into xor dec cmp sti pop flds addl test push xor lock neg test push jmp loop ss cmp mov pusha les enter lret decl ss notl pop dec gs and jge mov jle adc hlt and add pextrw adc lea ja sub add cmpsb cwtl pushl lcall and je frstor push mov xchg jecxz lcall mov add bound jns sbb pushf call repz popa cs xor loope jl into out pop int ja or xchg stc jne mulb xchg sbbl cmp lret jle (bad) mov pop stos das adc (bad) imul jo ja pushf and mov into or xor dec inc sahf sbb stos scas imul add push cltd fmulp jle lea xchg les (bad) xor ljmp pusha pop mov arpl fistp or clc aas stc (bad) ds lahf out mov (bad) cmc xchg sub pop outsb dec sub pushw cltd in ret out mov ljmp dec push clc int rolb popf xchg push sub popf push jge outsl movsb mov xor mov xor and xchg scas loope sbb negb loope jecxz lahf nop or push xchg (bad) test pop dec out sahf sub pop int jno xchg adc lds adc sbb jo enter (bad) imul xchg fildl cmp fstp sub add pop mov mov aaa in add (bad) mov pop or popf repnz inc or or clc add sbb mov mov adc out cli xor ja xchg xor push test push fsubrs mov imul jne push out popa sbb adc pop sbb aaa das leave pop inc shlb lahf je xor mov in pop jge sbb inc sbb cli jl int3 test aam stos outsb ret and mov push into xchg test dec ret mov xchg fs aas (bad) mov dec sbb pop sahf aam lock mov pop jmp xor mov mov dec add popa pop sarb mov jg cmp xchg stc fnsave inc and scas sbb gs xchg mov xor pop dec push ss pop xor fwait jge dec cwtl sub mov mov pushf imul mov adc fwait addr16 sub fnop mov mov lods daa outsl les cmp test xor (bad) mov aaa out (bad) sub sub xlat int repnz loop in inc adc pop icebp jne cmp fistl jne push iret push xchg pusha cmpsl mov xchg mov dec (bad) xor mov rcrw lds hlt sti scas repnz pop call adc inc fldcw rol std movsb gs or incb dec push les out cwtl pop jl rcrb inc cld pop fisttpll dec dec dec jne sbb mov es inc js xor fmull sub aaa pop or sub mov mov fsubrl ja rorl add jae lret or sbb movsb pusha and (bad) push inc mov lods mov add xor mul push mov mov mov les adc outsl jle mov orl js iret enter (bad) ljmp or xchg pop std jno push xchg jne xchg or cmp js std mov cmc jge sbb mov sbb cmp movsb mov jno leave mov mov fdivr xchg jo jg clc jmp lock inc push fistp xchg idiv pop cmpl std mov cmpsl sub subl mov pop jg repnz mov pop gs std repz hlt addr16 aaa sbb cmp adc xor xchg mov add jb lds push mov cmpsb test cmpsb in lret or out xor fs jle out add inc cmpsb adc mov xor jp imul in sub lret sub mov pop mov cwtl xor inc nop mov inc into cmp imul ret mov mov psrad push mov cmp andb fmull mov inc sbb aaa loop ja leave outsl leave test jne pop loop adc aam pop sub int aas mov ss fs loop mov fwait jmp stos lcall insl or icebp jb movsb mov rcrl imul sti adc leave cli repnz lea lock sahf jmp (bad) lds pushf ds cmp (bad) fsubl daa rcrb dec inc adc sub jns xor dec stc push in jns int3 cwtl movsb and les fdivs out sbb or and dec xor (bad) dec mov dec jmp push and adc xchg out subl mov jecxz jg mov nop in sbb jp xchg add mov dec sub push scas fdivl fdivrs (bad) mov movsl inc pop test and data16 jmp pop and gs dec xlat aam xchg in cmp andl hlt mov pop dec jl divl xor xchg mov popf push mov bound mov or add (bad) sbb jns sub dec sahf lea loopne sub addr16 inc fprem1 aaa outsl pop push jle pushf mov popa nop jmp mov xor mov (bad) and ret sti push or in jnp xchg imul movsl jnp cltd jns jb ffree imulb push inc cmpxchg8b cmp rcll lea mov les jmp jg xor (bad) rep popf popa lds aas test into fldenv outsb push xor stos pop pop scas mov jbe test je pop jp pop fisttpl movsl stos adc in add sub mov mov popa cmpsl sti lock or xchg in cmc xor mov mov mov repz cltd divl push aaa call ljmp mov push (bad) mov icebp add cs and js std (bad) fcoml lods add mov or and gs into jne pop or in dec adc aaa cwtl sbb scas das outsl push jmp push data16 jno cli arpl or lret out cwtl adc xorb fs cmp mov mov (bad) shlb in cmc jbe mov jecxz (bad) jle pop mov mov pop dec leave (bad) cmp insb subl mov cmpsl rcrl cmovbe mov ljmp ja ds (bad) je repnz mov addl pop test fwait dec je add xchg jnp (bad) int3 out xchg inc scas adc insb pop pop stos xchg add push adc add jmp dec sbb icebp jnp dec inc xchg test pop lret out test movsb mov mov dec popa mov sahf lds and popa sbb scas sub insb pop cmc mov ja mov loopne ret xchg inc test push xchg hlt add scas daa ret fdiv mov xor push (bad) mov mov jne xchg sar ret sub dec mov add movsb mov sub das inc mov push mov cmpb (bad) popa sub data16 inc clc or jbe xor sub negl xchg enter push pop cmp jmp pop (bad) enter lret jmp lods leave call add test add cs fmuls and mov mov int mov adc cli cs nop icebp scas insb cmpl cmpsl fisttpl mov ret in jo push (bad) push and jg pusha ret ret sbb sahf lahf jb dec mov mov push jg shlb aam mov pop cmp idiv and jo jb (bad) outsb sbb into stos test mov adc ret sub add fisttp inc add imul jb mov stos xchg rcl scas add mov pop mov hlt shr cmp jl mov xor in leave ror mov pop cmpsb pop push pop mov ret int3 adc mov inc movsb push pop es data16 push das pcmpgtd push addr16 adc pushf mov insl push jg mov mov jnp mov cmpsl inc mov mov notl add and or dec mov (bad) leave orl inc add out sub in (bad) repnz or fistpll dec rcll pop (bad) leave mov xchg stos jae mov adc sbb pop out dec push or push (bad) repnz dec je cmpsb fisttpl outsb mov sub cmc arpl xlat pop mov add mov push mov adc xchg inc nop out hlt mov mov xor push mov into pop xlat sbb sbbl popf sub sub cmp push hlt or add cld inc sbb or or scas inc push xchg shlb out pop sysexit mov dec jp (bad) pop or xchg add dec dec add sub adc and mov push in jno pop sub xchg div int into sbb in lret pop sarb xchg xchg iret push mov pop in (bad) outsl imul xlat adc and push mov or arpl fwait xor or insl xchg xor jl pop xor jmp mov add mov cmc mov jle jg ss mov cwtl mov inc int mov xchg push addr16 call test mov mov clc push mov iret rol pop pop repz (bad) xor inc jno dec call outsb jl jno aaa ficomp into rcll pusha push lret rcll inc ret jns mov sti in jnp mov adc imul mov sub cs scas dec cs fidivl sub out insb fdivs xor out (bad) repz inc push leave and push jo insl or pop imul jno cmp cmpsl cld xlat add sub fcomps fcmovbe push fist test (bad) out xor or cltd and pusha cmp in xor add das test pop pop xor xor push mov inc (bad) mov xchg div xor cmp out cmp cmp into rorl xchg adc fstpt hlt inc inc xchg jne popf dec add inc shll (bad) mov jp xchg into lcall inc cmp fimull adcl mov lock dec outsl dec loop sbb inc or rorl add mov fsts ret xchg repz sbbl jl in lods mov mov pop loopne mov out lods das xor inc fsubrl fdivr repz int sbb dec dec sub sbb inc adc push and lods out cmpsl jp popa jne jl or inc (bad) aas in ret mov inc sbb out in mov sbb repnz cli mov aam inc loop mov inc ret jno adc add sbb add popa sub cmp xchg ret or xor out xor rcrl pop pushfw ss je push jns mov sub aam adc ljmp repnz xchg jne mov fnsave (bad) aaa cmc out jecxz (bad) cmpsb fsts insl ja inc xorl pop insl pop iret iret and and iret sti add push cmp and popa fcomps and sub lcall inc out ljmp or insb popa fsub fld ja lahf iret sahf xor arpl push test push cmp lea int loopne out hlt test jnp fidivl pushf pop adc in or sub mov out xchg out lods push mov pop cmc push fcmovbe mov mov ja cmp dec pop bound push sbb push sub fstpt and inc adc dec or xchg popf ret sbb adc cmp rorl push push stc es xorb mov aas and imul outsl scas jg pop mov jns xor lock ret xor repz ljmp sbb js xchg movsb lret nop outsb inc (bad) scas mov xchg mov stos pusha inc data16 jg pop bound mov test cld mov lods movsb adc jecxz arpl fsub shrb mov mov xor insl jl test add sarl adc rolb sti imul mov cmpsl stos xchg mov in cmpsl add imul push cld or xchg fs push xchg insw or incl jae clc pop push and ret cmpsb fadd ret xchg dec mov or jge aam xchg fwait and xor mov xchg cmp inc ljmp and out inc sbb fs jle jnp,pt jbe dec push test cmp push dec push sbb sub xor out sub add jb dec pop or addr16 or movsl out mov movsl xlat sbb cmp loope sub js jmp sbb lods js mov xchg ret xchg sbb daa js mov lock movsl (bad) cmc jnp es xchg cwtl std fldcw pop lods fwait and mov mov ret sbb popa out cmp cmp insb cmpsb and mov mov gs mov fidivl pop data16 hlt test or cmpsl jns ret push and mov fwait je inc or mov nop inc xor pushf dec pop dec repz adc cld scas mov mov adc test sti mov in lock xchg outsb and (bad) (bad) adc out aas dec inc push ds jnp mov xchg dec sahf adc mov pusha imul repz sub mov push scas ja xor into out lea inc mov mov push push xor gs shl out std mov outsb cli or or fldenv cli test jns cmpsl sub nop mov xchg movsl enter stos mov mov xor xor mov adc dec jge xorl mov xchg or sbb mov flds out pusha cmc xchg in sub mov lock lds add add test lahf xchg mov loope jo push stc mov cltd sub jp xor call test icebp mov arpl xchg repnz mov jg sbb fs adcb xor lods (bad) xchg xchg mov sub jecxz mov popf mov xor jge push cwtl mov inc dec dec and in arpl xor jl add dec sarl sbb pop sub lcall jge xchg les enter loopne mov add icebp jl cmp orl cld jne aas enter jl mov adc add xor popa and mov call cmp dec jecxz xor sbb jg daa push lds stc out or rcl pextrw test cld jne cmp lods add mov or mov (bad) pushf and shrb lock sub pusha or add pop (bad) imulb mov into lods mov mov add (bad) bound xchg cmc test mov mov push rcrl cmp add fwait lret les cmp call push cmpsl scas (bad) mov push enter add test out loope pop xchg ret repz jns pop into or (bad) xchg fmuls hlt repnz sub push jns pushf mov and pusha dec jne pop cmc test andl rcrl decl shrb pop fxch mov daa push xor pop inc in nop or sub and fldl mov out push or adc cs lcall mov mov mov dec jle aam pop pop ret stos test sti sti xchg repnz out movzwl insl out (bad) rcr leave push or xchg add pushf or mov inc mov pop add jns outsl inc cltd aam push push mov fisub adc nop data16 cmpb cmp daa xor xchg iret mov negl das and cmp jle in je lods mov in fnstsw adc jmp mov leave mov cld xchg add sarb fldl adc cmc mov adc cmp ret test dec sbb cmpsl aas (bad) add xchg nop jecxz in idiv dec lahf in movsb jmp push aas insl ja inc das test xchg (bad) xor pop mov xchg cmp (bad) xlat ds lahf out push cs xchg cmp push rcrl xchg push test mov dec mov lods (bad) clc add mov or lock sbb out mov fstpt and mov rorl fist adcl es xor adc pop fwait mov stos aaa jl rolb pop dec ret out bound mov and jmp sub ret pop pop cmpsl (bad) xchg dec mov dec push push adc (bad) sub xlat jns nop xchg xor jmp cmpl push adc add or je lcall jl cmpsl aaa pusha inc or adc dec xor push shlb mov loop lds rolb imul sbb mov and xchg ret add cld stos push test icebp insl mov gs call push das push into adc sahf jmp das cmp ss or sub ljmp (bad) push fs mov (bad) outsb shlb mov xor inc cltd ret cmpsb aas sub add btr (bad) lock imulb scas add inc xchg aad push repz pop fdivl cltd pop inc mov rcrl adc popf fsub bnd sub cmp lahf aad test sub mov jecxz lods cwtl clc or mov int mov movsb gs ljmp mov (bad) popa inc xor push fdivr xchg popl fcmovnbe outsb fs fs scas add dec or (bad) fcomi loope nop sbb movsl int je push loop mov xlat dec mov dec cmc enter pop or out and sub shlb and pop add pusha sti and pop (bad) cmp xchg sub sbb cmp stos xchg pop cmp mov cmpsl mov shll mov fwait xor inc push enter inc and cmp inc xor xlat gs inc mov jae sub dec jl lahf in shrl leave xchg push dec fiadd or push push cmc or js imul loope loopne mov lods mov sti jo repz sbb mov fwait jno inc psubb bswap in leavew fwait hlt stos mov mov add inc call aam pop mov inc xor aaa daa leave sahf xchg ficom fnop cli jns mov mov in adc and jbe xor test popf iret jbe jno mov jle aas test push mov inc dec outsl dec gs lock lret dec dec jle ja mov outsb loop dec addr16 stc jp ja sbb fsubrl out inc rorl and inc loope push imul lahf push je in loop jbe test in in mov call (bad) jmp cmp fcomi adc jb popa hlt stos loop cltd dec mov (bad) inc push popf mov and jmp sbb stos mov or rcl jbe in clc and jecxz iret mov jbe mov sti int (bad) sbb ja inc mov jo sub or jne mov outsb or (bad) xor out adc mov out inc enter je add jae xor add mov hlt push mov mov cmc xchg idivl pop mov popa jecxz push cmp and ret mov cmpsl push (bad) and lret sbb xor lahf ss mov popf or xchg jecxz lds mov mov popf and pop pop mov jge push and jo icebp es in cmpl jmp (bad) pop sub dec adc xchg out mov cmp (bad) and fidiv xlat fwait pop and xlat mov or jp mov and jae push lea test sub bnd adc mov push loop adc dec pop add cmp pop push adc notb inc stc popf mov lcall xor cmp or lods push jnp mov arpl push mov cld lahf stos cmp inc add sub mov jp xchg lret scas inc out addr16 imul jns (bad) outsl push lea dec ss push test inc inc jne outsb push push lret push lea jmp dec arpl in push jo xchg xlat mov sbb dec pop in rcr mov lea clc cmp mov sbb dec jne add out loop or or mov mov lahf lahf fistl das lret call in dec cmpsb push int3 add mov or test jbe push add mov jno push push cmp (bad) loope scas in mov movsl jae xchg out dec add lahf outsb add and push cmp jb add push dec pop mov test dec fsubs in sti add mov dec and lock sbb lds (bad) mov (bad) (bad) lock int3 ret int fldenv mov lds sbb push cmp negl mov cmpxchg xchg ret pop (bad) hlt cmp das inc pop mov mov addl imul push subb inc pop cmp pop pop jne mov add mov test aam mov mov or mov cmp cmp pushf adc cwtl push rcrb insb inc rcl lods test outsb insb test xchg xchg or inc andl xlat jp xor sbb dec test push or leave or mov and jne add xchg fs mov je,pt pushl rcr xchg push sbb push mov loop pmuludq lret punpckhbw dec sbb test (bad) and ret push xchg xor (bad) lea sbb daa sbb scas push jne test popf dec sub mov mov sub inc xor pop adc or pop xchg popa lods mov cmp jne cs mov stos cmp mov adc jno negb sbb cwtl push add lock inc enter das ret sbb mov ficom imulb fs (bad) or xchg std jmp cwtl mov and stos push cld or rcrb or shlb stos lea div out cld cwtd loope push xchg in clc xchg inc lcall aam fisubrl pop xor jl inc sub and int xchg loope mov dec (bad) idiv jge add cmp or cmp popf stos push std sub loop push inc loopne das adc sti fmull mov adc adcb and in movsb mov mov sti test insb (bad) je cmp (bad) lods adc adcb xor (bad) (bad) mov adc adc xor pop stc test in popa or xchg aas pop adc mov sub mov sub push sahf outsb int popf shrb popa arpl push iret (bad) pusha outsl bound fimul adc mov adc jecxz in and push ret cwtl xchg mov sbb sbb and std and icebp sahf js nop jb outsl xor mov loopne lcall mov jge xor xorl aad jb add daa push lds push lret and jno and dec cli and negl dec stos call mov adcl ljmp icebp jecxz ret adc or sbb mov dec aaa hlt jbe mov fnstenv jne cmp push xchg fistp pop inc outsb dec sbb inc in and (bad) xor xor push arpl push jecxz inc jg and fdivp fs xor inc das fnsave stc fstl and icebp lcall bound cmpl aaa jne fbld jecxz repz inc fidiv add mov lods pop push rcrl pop xor aam rcll outsl test pop das and cmp cld pushl aas xor adc dec adc mov add cmp push js movsb jmp imul jecxz push gs xchg add in xor movsb loopne stos inc xchg inc cs ja out mov movsl std cmpsb stc (bad) or enter fs cli xor add jno push cmp pop and pop sti inc cmp mov rcl jo cmc mov and int call sub mov in and xchg inc (bad) lods inc mov inc jle leave mov jne shll dec fsubrl insl jne mov fcoms movsl sub mov sub call jnp fsubrp les and in adcw push and jb mov mov aaa ret adc out dec sub jecxz fs jae xchg stos xchg in (bad) xor gs pop out out out jl ss pop push lock les loopne push insb ja les mov ficomp loope sub in jmp std inc xor andb xor inc rorl cwtl xor scas jne push (bad) jge fwait add sbb ja and inc adc mov pop adc (bad) fidiv cli (bad) mov sti ja idivb out loope mov push or xlat loope nop and sbb ss std mov add out jge sub xor (bad) je stos das mov xor call aam mov lock fwait and loopne or xchg mov xlat sbbl dec movsl xchg jmp jge mov mov fbld mov mov mov push lea add test ret test jns sub and pop add mov lods lea sbb xor adc shrb lret and test xor cli pushf mov movsl xchg sub jmp in xchg pop mov mov sub das cmp call pop dec jo add xchg lret mov gs js lea out jp and in sub or imul lods pushf fs enter mov movsl sub mov hlt xor aad int adc mov xor outsl xchg cmp jb and lret cmp lods push lret outsb addr16 pop push test jl insl loopne pop push (bad) fcoml mov in test test (bad) aaa or in push xchg pop fwait icebp test sbb cltd decl mov test jns (bad) (bad) shlb or dec movsb adc or iret int push jnp pop movsl cld and aam push in (bad) aam mov stc dec mov jo fs test sub or push sbb xchg out push dec sub subl sbb inc (bad) adc movsl in sbb lock xchg mov ret add push (bad) adc icebp mov adc mov je or push fdivrl mov jbe loop mov dec loopne mov arpl mov push movsb subl pop dec stos push adc mov mov lods bound sbb xchg loope inc inc mov dec mov fs imul xor sarl (bad) cmp or mov sub int mov jne test push icebp cli dec insb cmp cs or jle add inc or xchg daa stos scas fnstcw jno fwait enter or or mov jmp pop push lods ret mov pop mov xchg pop pop mov loopne aas mov push rorb or rclb loope stos inc pop pushf imul pop lods cwtl pop movsb leave test and mov bound clc scas pop std xchg sbb ret jns lds pushf (bad) fldl int3 and (bad) int3 out dec inc aas sbb push decb push and mov xlat xor mov and bnd daa loope pop inc dec (bad) fs loop push pop push loopne xchg movsl sbb lods mov pop inc ret cli mov test mov sub push mov test mov and clc in andl xchg in negl call (bad) dec sbb jnp insb dec test leave cmp mov mov sti mov popf fs out mov mov negl mov imul loop and rcrb pop test cmp into les cli loopne xor push pop jg mov inc mov ss xchg cmc stos dec pop icebp aad rorl (bad) adc in repnz cmpsb and loopne mov or out gs je mov rolb aas or je (bad) or mov push daa addr16 mov ffree sub fdivr sbb jle inc adc loopne outsb xchg and ljmp jl test (bad) lods ret sbb out outsb adc push aaa or pop enter cmp cltd stos pop (bad) out or add bswap adc sbb add push sbb pop mov sti movsb push lds addl aad sarl fucomi adc pop je cmpsl insb xchg gs aaa loop scas or enter arpl nop into ja in (bad) adc shrl popa cmp orl nop adc or lret jae sub dec push iret push es mov push fs or dec push in in icebp sub insb adc mov (bad) jne loope fsub addr16 inc repnz (bad) (bad) insb (bad) mov leave pop (bad) inc cmp mov int in jl or ss dec decb sbb sub sbb push or jecxz inc lds test mov cld mov adc repz aad inc pop jle jp pop sub in jp mov or (bad) lret loopne sbb add xorl (bad) imull and push mov mov cmp scas cmp pop inc pop jle and cld shrl arpl xlat ja out mov stc push sub vpmulhuw and add addb dec mov push inc xchg in sahf sub clc mov nop sbb mov pop cmp dec jns add xlat aaa jmp or fbld jle les (bad) mov sub pop cmp sub cmp call fistl clc (bad) int3 mov js pop imull sub aam jns sbb dec pusha mov sub jle test loopne lods mov pop dec outsl xor daa xchg push pop xor push imul push into cmp sarl and mov mov fdivp jne out daa mov imul and mov lahf or bound sub arpl xchg or test cmp lret adc (bad) scas xchg adc incl mov sahf cmpsb sti dec inc pop cltd enter sbb fidivl (bad) sub xchg iret and or xchg xchg mov mov imul ljmp rclb inc xchg call fild out inc inc lcall or out or stos sahf mov inc in cli jmp repz xlat dec push fistl sbb mov mov dec mov (bad) jno add and dec xor fldt push mov call imul fnstsw out mov les lret dec inc xchg adc (bad) mov and add out fbld adc std es jno or ss orl or inc push in push jns mov or leave sbb and outsb (bad) pushf enter loop or sub inc rorb call pop imul inc imul jge pop inc outsl fidivrl cld mov enter in dec (bad) (bad) fidivl ret xor push push jg sbbb and and mov mov and add adc add jecxz mov sbb dec sub arpl mov pop mov sbbb pop test fdivl add sahf dec xor repnz into adcb ds addr16 mov sbb imul mov push sbb lock jns mov cmpsl adc push (bad) xor or pop jae xor dec (bad) (bad) nopl sub fdivrl cmp push pop push fstpt stos loop xor loop add xor int3 xchg andl mov in aad sub divl leave pop incb ja loopne xor xchg popf insb nop popa cmp iret out pushf add xchg fidiv js xorl inc cwtl pop fldcw inc lcall and aad mov out xor lcall mov roll lcall mov xchg cmc inc nop dec mov mov cmp andl cmp cwtl mov scas je sar mov ss loopne jbe mov sbb addl pop or movsb (bad) push or lea fs cmp add dec inc repz xor addr16 jae add xor jle mov (bad) xor test xchg jmp jns push sbb incl fstp mov cmp push sub jne mov fmuls arpl aas clc sti loope push (bad) test adc push xchg (bad) cltd cltd notl lock movsl imul test pushf outsl loop popf or jg test mov (bad) lahf repz cmp xchg and stos and add add faddp (bad) pop stos xor ds xchg jle cmp xchg addr16 jg iret xchg icebp jmp sbb dec gs xchg pop inc mov in mov jnp sbb adc and mov add mov fmulp clc xor cmp inc xlat (bad) xor lds sahf (bad) pop pushf and ficom jmp jg adc lods stc cmp lcall push pop stc clc movsl int3 push cmp add (bad) fdivrs movsl xchg movsb or fsubrl outsb shl stos gs cwtd clc (bad) fdiv call sub hlt mov push jae lret rcl es daa fwait cmp mov imul dec jmp in rcrb xor sbb xlat dec inc aaa pop (bad) ljmp cmp push adc (bad) sbb cmp mov or sbb inc or cmp inc int3 cs hlt push sub jns out pop jno adc xorl iret in jg dec out pop divl inc ds mov sub loope nop mov sarl cltd sbb mov inc fwait add mov loop repnz inc push stos xor aaa xchg or and psubq xlat sbb push push getsec out or iret pxor mov sarb mov addr16 push push inc inc arpl aam jbe (bad) mov ss sbb shr cwtl xchg loopne xor mov insl les jp mov mov hlt test mov mov sub in fs test and jecxz push cld enter (bad) xchg lret or mov ds xchg fisubr jne push out pop push (bad) mov fiaddl fstpl sbb fdivs or fcomps clc and dec mov aas sub mov lods cmp sbb das mov shr pop ds int3 mov mov out call mov popa jp cmp popa stc cld xchg std popa add je pop push or jle (bad) cmc cmovbe pop xor sub fsubr mov mov xchg leave xor mov cmpsl jnp in mov jp and mov add fist jp pop or in or test jle cmp inc scas out rcrl and pop nop pop stos test (bad) ret sbb sahf pop ljmp (bad) (bad) push (bad) jne sub adc dec jns inc sbbb arpl cs stos sbb lahf jl aam bndstx mov sub xchg out push stos je sub mov xchg (bad) into stc movsl mov scas mov repz push push mov movsl lds and pop cmpl movsl ljmp insl mov sbb fiadd add fcomps sbb leave das fidivr mov lods dec dec imulb not sub inc inc xchg cmc or and roll lret cmp xor enter jbe (bad) pop aaa inc lret sub adc jge bound jp lahf pop cwtl mov ljmp test js mov xchg jl rcrb mov xchg clc lods addr16 cmpl in fs hlt add ja subl ss (bad) jae out (bad) hlt or push in jp jb sbb int and ror ret lret mov fldcw in mov rcrb sub mov gs fistpl inc and dec fidivr xchg repnz sbb push lret outsb xchg push sub jle mov mov push test xchg mov and dec lret repnz call and mov mov mov xchg mov pop aas cltd jge (bad) xlat call xor dec sub jge xchg add cmp add pop ror mov test sbb or xor push mov js mov sarl jmp sarb (bad) ds (bad) dec pop sub mov mov sbbb test (bad) shll (bad) (bad) lods in insb and sbb sti in jp jle dec or loopne jnp cmpsl add ss sti int3 xlat sarl in into sbb xor and and dec test bnd imul movsl jnp leave lea nop int cmp mov ljmp sbb inc sahf push xlat jl pop mov push rorl xchg outsb scas mov fcoml and outsb rorb in xor pop mov push test enter ficompl mov mov fs lahf add lods movsl pop int3 pop pop xchg insl xor jp xchg (bad) adc (bad) call and cmc les lods clc (bad) inc in jl dec mov mov xchg mov or ja mov js adc rcrl (bad) lahf repz das and cmp inc fs mov cmc pusha xor and sar jmp and shl sbb xchg mov inc push push mov fsts movb notl jno push mov push into repnz fcmovb mov jb and rcl cmp into xor aam shrl add pop dec push (bad) and jmp mov repz in loop jle into mov adc loopne daa dec js and stos mov clc enter ret mov (bad) out movsb sbb lods icebp sub mov jns fsubl pop ret add cwtl ljmp sbb or pop adc aaa mov mov pop test push aam jp sub int jno dec rcl dec das mov (bad) xor and inc push insb add jle movsl call shlb fwait jle cmp mov ds cmp pop xor mov les mov dec scas jmp fidivr sub push xchg push adcb add adc (bad) movsl mov mov stos jno jmp lcall das mov mov scas lcall mov int and fcoml xchg adc xchg aas shlb xchg fnsave or scas cmpsl mov adc and jae push mov inc aad stos aas mov test mov (bad) aaa xchg mov adc fsubs test cs cmpsb ds popl cmpsl shr int dec mov xchg and xor mov mov dec push xchg popa sbb mov (bad) push mov push (bad) dec fbstp call sbb mov repz add sub mov in push xchg jg and dec dec dec int3 adc loopne jecxz cmc scas xchg icebp adc cmpsb cli dec into fist mov leave hlt and push dec fs or inc mov sbbl lock stos adc jg inc lods stos and xchg mov enter fdivs sbb xorps dec dec dec cwtl lock or int3 stos pop push dec daa dec iret add rcl sbb mov push sub or push xor addl pop jns xchg mov fisttp (bad) dec (bad) jne das fnop xchg mov stos push pop push in in movsb sub sti aas xor mov arpl sbb outsb scas clc popl mov in push in inc sub adc dec incb je jp sarl pop mov nop adc mov inc lar mov lret iret test cmpsl dec cltd call (bad) (bad) icebp pop daa pop (bad) or dec lahf xor adc sahf repnz push repz dec nop xchg lcall sbb es push mov enter inc lods jl addr16 lret push aad and mov mov jo pop clc call nop stc xchg sahf mov das enter inc push push add mov enter sbb and xchg jmp pop push or fild adc pusha mov jae inc lods mov mov inc imul cld outsb rcrb (bad) mov jp outsb lods and pop clc std adc aam dec test call mov mov push sbb cltd and (bad) add inc jno cmc xor cwtl adc imul xchg xorb test inc stos sub adc sub pop mov or clc lret movswl ljmp dec (bad) insb loop push sbb add mov push int sti insb cmc (bad) mov jb out addr16 lahf rcl xchg jmp jns xchg imul xor ljmp (bad) movsl xor pop mov fsubrs and ss push push in push cmc xchg jo popa pop push rorl cmpsb cmpsl call add fwait jl mov movsl cmp sbb xchg idivl out xchg sub adc mov add loope pop pop pop cltd (bad) std cmp sbb addr16 movl lock or or xor jns pop sbb das aas clc mov fnsave jecxz xlat mov xor or cmpsb js cmpl outsb imul pushf fs sbb sub int pop flds jns outsl (bad) loop cmp jo out push mov or mov xchg or fs out aas cmp mov movsb jnp addl push mov push mov out xor jle lods and dec fs stos push xor mov mov mov out cs sbb scas fisttpl xor push mov pusha add sahf arpl ds daa adc sbb or addr16 repnz hlt cmpsb (bad) sbb cmpb test fcmovnu roll pop add subl lcall aam data16 outsl je cs jp add jp nop add cs adc out stc insl rcl dec out jb ja mov pusha sbb (bad) sahf lods inc int3 mov xlat jno repnz ljmp outsb sbb mov pop cmc out iret ds cmpsl ret dec (bad) outsb or test sbb out lcall ds lods inc sbb stos pusha xor xor mov lods lods push sub (bad) mov mov inc pop cld pop pop mov lret pushf ret push jg jg mov sbb aas lcall add mov mov rorb arpl (bad) and mov repz and icebp ljmp out data16 insl call scas lcall test adc mov mov xchg jle adcl call popa outsl xchg daa pop mov xor and xor (bad) fild xor pop sbb (bad) fimull int push or call movsl call subl mov xchg inc inc pop mov fiaddl inc shrb bound jns int3 or sbbl xchg (bad) movsl mov sub rcrl dec xchg or adc aad xchg mov push jmp (bad) in push fsubl incb jnp lds push mov aas dec inc cmp test mov rol or jb (bad) mov lea icebp cmp loope jnp rorb xchg and out out push xchg roll fcmove call psubq mov lret add mov or jne jp dec das call jl jb push sbb push mov sbb xchg imul dec movsb fist jno loope dec jno (bad) cmp or lds stc mov ret cmpsl shl mov jns mov or ret sbb lds imul mov sbb nop push lret sub sub divl les cli cmp into jecxz ret shll outsb int3 fldz mov sub rolb jne loop mov push sub mov repnz cmp push pop loope xchg sub addr16 rclb lea sbb push xor xchg divb test sbb insb pop test in inc ljmp aam mov push loop cmovle shr in in pop pop mov mov pusha sbb jns leave push jp mov mov sub vmovlps repz ret jge jmp fisttp pop jg dec or sbb bound mov sub pop adc fstpl push push and cmp jmp add push add adc scas test or jo cmp mov cmc out lds xor (bad) inc (bad) adc jge outsb jno cmp xchg pop mul xchg (bad) (bad) xchg cmpsb imul mov scas jle sbb stos aad cli es dec adc add jo lret mov add ljmp push enter scas sahf or sub mov ljmp cmp pop es outsb pop in into push push sub sub add push jb (bad) mov repnz fmuls js cmpsl std insb adc xor push out das iret aas jg mov es scas pop mov sahf push or mov stc es movsb ss sti cmp aam cltd out sbb (bad) (bad) lret sub pop xorb push xor and mov ja (bad) pand je mov rolb cld leave pusha fisttpll lods push movsb fcmovb mov int3 adc (bad) jns in loop int3 xor ja dec andl add and adc dec cld and jmp scas inc (bad) sbb add loopne sbb in mov cs das sbbl adc pusha lret ds add xor dec in dec cmc cmp jl aas sub (bad) jecxz add sti leave xchg imul lods pop mov cmpsl pop sub jle mov popa (bad) mov outsl jne data16 inc mov clc jne mov lods inc pop (bad) iret scas repnz pop mov addr16 (bad) mov fisubl and addr16 xchg mov pop push inc dec pop push pushf (bad) jb adc fidivrl ret dec mov inc cmc push push movsb stos ret scas push push daa push cwtl adc negl out inc adc cmpsl (bad) cmc lcall test in mov and jae inc xor mov into xchg inc stos mov push cmp add sahf aaa jbe outsl cmp push xor xor int or repnz mov gs xor sti jp and sub pop aam lds call adc pop das movb mov push popa pusha sub mov sti cltd push scas jb clc mov lcall ror insb lea mov imul fwait inc cmp ljmp jmp dec push sti arpl and lcall addr16 xchg adc adc cmpsl pop mov inc and cmp push cwtl xor mov lds xor hlt imul fdivrl pop scas jo fidivrl sub mov pop xor in int3 mov sar jle mov loop pop xchg insl lret mov mov dec repnz cmp mov paddsw daa jnp jns aaa xchg inc mov out sub xor cmpsb mov pop mov inc sbb or sbb lea je cli and into pop repnz int pop mov or mov ss mov sub mov xchg jg (bad) js xchg sbb pop sub cmp jnp mov divb orl pop dec fdivrp dec or pop fmuls movsb sub jb pop and sub call pop ja add jb fwait mov hlt sbb call jle lods imul lods jo jg sub ljmp mov ss jb sahf lret outsl sub xor sar int3 stc inc aad mov jmp dec and cmc les and rorl out movsb lods cmp mov scas push movsb adc js,pn pusha mov dec mov or pushf pop jbe mov das lods into cmpsl sbb enter lcall call and mov jns add xor aam je lea add xchg pushf and (bad) fidivrl and dec fstps lds jns sub ss mov xchg and add xchg dec ret sub jnp test mov (bad) test adc mov push jmp scas xlat add loope sub movsb mov (bad) lock fidivl jge xchg cwtl inc pop and jo jl mov cmp lock sbb jno jge xchg inc movsb add ficoml inc leave lods mov outsb insl add mov vmovntps out inc push cmp mov inc dec pop aas cmp hlt cmp pop sub mov push mov arpl jb jb jnp xor sbb enter frstor or sub mov decb sbb cltd (bad) mov jbe ja xchg adc out adc outsb repz pop fisubr mov js dec (bad) in ret xorl lds mov movsb push add das inc mov call pop mov clc int lahf sbbl jmp mov jnp imul rcr mov jp mov xor adc aam lret leave out out mov adc dec rcrb test pop ss adc aam std sub push insb pop fdivrl or test or mov push dec lods hlt add jg cmpsl fnsave and out push jns (bad) mov fistp sbb push adc loope push jge in mov sahf femms int3 hlt fldt xchg test (bad) (bad) inc mov lods pop and push scas sub inc inc jmp adc xchg sbb cmp ds icebp outsl out jae fstps fwait clc fdiv and les push aam mov insl int3 xchg mov or fwait pop arpl cli es je pop js pop cwtl or loope pop push sub repnz cwtl jge into push in inc (bad) lds mov lahf scas leave imul or insl lret mov (bad) push add push mov cmp lcall imul mov and xor cmp or mov pop or shll mov ret and fcompl mov insb rolb sub dec lea mov call dec (bad) jns daa pop dec xor int3 (bad) sbb stos mov sbb adc icebp aam scas push mov cmovnp adc pop xchg pop insb (bad) mov lret xchg jl int3 cwtl pop cld pop scas mov clc scas roll fs mov test add cmpl push mov add mov (bad) int jmp push sbb mulps cmp push pop add cmp xchg (bad) push into adc fcompl or outsl std push inc fisubrl and jne fild pop xor imul outsl pop packuswb fs jb imul add push outsb add iret dec xor push sbb in xlat pop push mov xor lret push mov mov dec push add cmp cmp je cmpsb mov lods fisubrl xchg push dec pop xlat xchg test sbb and leave dec ret fisubrl push sbb push in mov jge sbb mov cwtl mov and stos pop pop or call xchg insb xor pop fwait (bad) lds insl in lods mov fiadd stos lret lock out loope mov cli popa xor in push push add inc rol pop movsb jecxz cs add xor sub jmp push jmp add push lret das mov mov cs (bad) bound dec jne (bad) in and fwait arpl popf stos push jmp adc mov ljmp jle sub les mov clc or sub mov mov dec fdiv fmull ret jge push pushf push mov rolb inc pop xchg inc push adc push mov mov jg cmp out jb adc add xchg xor es cld aad je and repnz rolb enter aam xor cltd popl sub in (bad) or outsb stos pop mov jp jl jne ror fwait in mov fwait xchg mov shlb (bad) int3 cmp xchg into sbb fdivl mov ss xchg fldenv xor in outsb adc sbb xor repz aam (bad) mov in jg cld mov xor fstpl insb ljmp push pushfw lret push dec mov pop inc mov in push or cmp push xchg in xchg shr mov and cmpl lret incl lock inc rcrl xlat imul pop (bad) xor pop test mov out jle lds jge push js scas faddl es popa (bad) mov lods in and pusha ficoml add pop (bad) mov inc jnp scas mov movsl sub fildl out mov push xchg outsb in (bad) jne mov xlat pop loopne sub leave xlat pop test sbb pop mov test dec enter mov shr bnd gs mov push sub sub les jae ret xchg das xor pop dec movsb shrb daa pop push push push mov dec js adc or jl xor stc pop or mov outsl imul or dec mov fnop into mov imul sbb sub insl flds or jae adc jmp ret xchg ret (bad) mov xor pop inc outsb sbb in sub add inc and xchg fwait addr16 pop mov ret rcrb ds jb push int3 lret stos mov into movsb (bad) add hlt or loop in das fnstenv or clc pop jne mov (bad) mov mov inc mov and loopne aas push sbb xor lds push adc pop mov popa negb xchg mov ds mov pop in sbb pop mov and stc dec sbb aaa or mov fld push cmp maskmovq imull sbb std mov or pop sub es (bad) mov sbb cmpsl neg lret push movsl adc int mov repnz cmp mov sbb or sbb inc dec (bad) xor lret adc cmp addl add or test adc ss and int insl cwtl ljmp pop in pushl in out mov xchg daa jb ds adc jecxz xor and mov adc iret rcll mov cmp insl dec icebp fdivrl adc jecxz inc pusha sub mov cmpl outsl mov stos mov jae xchg addr16 fs add jmp (bad) jmp je shrb sbb mov lret cmpsl pop addr16 lods nop mov jns fiaddl push cmp mov mov xor add stos add ss mov inc (bad) fmull inc dec outsb stos add xor mov adc add pop clc scas dec stc adc xchg mov out cli (bad) inc sahf dec pop mov cmpsl lods scas pop mov sbb push jb xchg and push sbb ror insl jg jns inc js and inc idivl fistl in mov sti stos or jns mov sbb cltd sbb xorl fwait loopne cltd fmuls idivl ja andb lahf stc popf or incb and scas cmp movsb fimul shrl and pop insb adc aas in or es xchg leave sub push dec outsb xchg in dec pusha or bound icebp cmpsl je push inc lret jae pop scas fwait cmpsl pop push mov mov inc or push push int repz enter add loopne push sbb aad mov xchg flds xor push call mov adc and xchg movsl testb lods mov fnsave inc in loope scas je rcl daa mov or jl push out or mov out mov stos pusha add mov cli cmp arpl mov movsl andl mov mov pop pushf xor dec jnp aaa ss and arpl aas sub movl mov xchg mov and xor lret shl mov (bad) mov mov jnp in or inc sbb imull pop cmp add and mov jo movsb jp mov jae cwtl sbb dec js jecxz sub sbb scas adc xchg les sti push add es orb cmc ljmp jnp icebp orl jmp and cmc mov aad int3 fimul cmpsl mov xchg je mov or xor mov call outsl sahf test pop hlt fisubl jno fisttpl and cmpsb cltd into pop push sbb dec adc and mov inc rcr lcall xchg lret cmpsl cs and movsl shrl mov jge fnstenv push mov mov (bad) and int loopne cmp inc paddw out add jecxz popa pushf push and mov dec lods outsb mov push movd jbe cmp mov cwtl mov push mull ret cltd mov (bad) pop lds and push rorb or nop xor adc sti fsts in mov cmp faddl in push mov xor cmp nop lret cmpsb (bad) xor sub cmp ret push xchg mov mov xchg cmp fiadd sub mov xchg fimul add movsl insl out push insl mov pop mov rorl sahf in cmc pop sti (bad) pop popl pop xor ss out and xchg fnstcw push lea popf insb push outsb nop daa cmpsl jae ret loop enter sub icebp scas jb xchg xchg or add cmp mov push outsl fstps sbb (bad) push std and push popf push dec icebp stc shr lret pop cmp xor adc lret inc (bad) (bad) sub scas jle (bad) mov fisubl test loope aad ret jbe sub dec std cmp fimul push inc cmpsl popa mov orl mov (bad) (bad) mov push jnp mov sti inc push mov pop push xchg bound int fcomip xor movsl call rclb fidivl nop addl sub aam fnsave mov sub xorl test daa adc xchg ret stc and sahf leave out dec aas mov cmpl push add dec (bad) stos push sbb lcall mov and jae xlat or pusha insl jno cmpsb (bad) cld mov push scas icebp cmp cmpsl test and and dec and lock mov xchg nop or cmp adc (bad) cmp mov insb fiaddl test cmpsb or xchg icebp xchg daa lcall call pop jae adc dec sbb xchg ljmp pop dec pop bound in and subl arpl les dec cmpsl (bad) aam lea cld loope dec hlt fucomp inc mov and fsts in in dec fcoml loop cmp lret jae hlt xchg sub mov xchg cwtl push push adc xlat (bad) imul mov mov int cmp or fnstenv xlat negl cmpsl fistp xorl and stos pop aas xor mov xlat mov cmp sbb push add out cmpsl iret shr add cmpsb dec dec mov push stos adc scas pop loop sbb in aad div repz cmp rclb mov (bad) push cmp xlat xchg pop inc (bad) shrb xchg dec lcall mov decl hlt out mov pop orl cs movsb pushf cmp out sbb mov (bad) mov xchg adc pop aaa pop lea dec rorl repz adc int sti jb insb in leave mov repnz xor pop repnz and aam pop jg loop push add insl mov adc jno inc je add lret xchg jo inc xchg int repz push stc jbe and mov xor mov adc push nop jmp jno dec add sub (bad) xor mov pop lret inc xchg into xlat movsb push mov icebp dec arpl arpl xchg inc fmul orl cmp push mov cltd cmp into pop scas aam scas add in mov add dec (bad) imul hlt cmpsb mov jo cmp sub into mov inc and aaa jbe ja aam mov xor mov push mov fimull (bad) jo and fbld xor nop jmp dec out arpl inc lods and xor lea (bad) push ja inc lret test int3 sbb inc aaa or les dec cld dec mov pop fmuls mov jmp and dec lods cmpsl pushf (bad) push push pop test push aad cmpsl (bad) mov sbb pushf test ja and xchg dec aad xchg sbb and ficoml lds cmpsb divb jp jno test movsl sbb orl scas fwait daa outsb sub sub or scas or xchg xchg mov test sahf loop lods (bad) mov push outsb gs fsubs ret movsb shrl (bad) out lock (bad) daa cmp mov sbb sbb int mov call inc mov or repz shlb add scas pusha and pop push mov push (bad) mov std sbb xchg add popf fwait ror push xchg push test (bad) fcomip test add mul out jle jl,pt lods cmc or stc movsl aam cmc push inc fwait stos push mov cmc inc out xchg adc aaa stos mov push jle cmp bound popa stos and rcr sbbl call mov sub sti inc push (bad) hlt outsb or mov mov insb pushf sub jl mov push and stos mov push rcl ret stc jo adc sub es fisubrl push mov xchg icebp sub inc sub push and jbe and and arpl jl sub inc outsl shrl or pop jl sbb out cli jg mov push mov fisttp pop push dec push out add sbb xor push ljmp add pop decb addr16 std repz mov mov out repnz std inc hlt scas mov jnp int jmp sahf sbb adc mov incb nop lahf fwait and jecxz dec pop fcmovu aas add iret aam aam stos je cltd and out mov jae bound jnp dec iret adc rorl xor cli addr16 pop or mov clc or push jno mov dec xchg call ja push ss lods popf clc inc insl xor sti or add into add xor cmp hlt std dec fadd (bad) mov cmpsb pop ficomp inc (bad) cmp pop bound sbb mov stc push aam sub les jg in dec cli (bad) (bad) mov rol lods xchg cmp dec push je jno test insl and sbbb fisubrl push dec mov clc push bnd add mov fistpll push and adc (bad) (bad) iret std (bad) cwtl add cmpsl xor mov lahf add mov add std mov lea hlt jb jae or xchg dec xchg stos xor adcl pop into jge movups stos mov jecxz arpl xchg pushf push xchg jno in mov (bad) push divl arpl cmp inc out lahf and pop adc in jnp sbb and dec faddl out or (bad) call clc cmp cmp fdivrs jno push xchg jge ficompl outsl out je inc mov xchg dec sbb xchg out cmp and add shrb scas mov mov into into lods push push jle cmc (bad) rorb add dec out xor lods inc adc js leave repnz sahf movsb aad int je pusha add mov loope pop bound cmp cmp out sub mov test rcll sub int in lcall aas int3 test pop mov jnp or hlt shl rcrl pop es fiadd jle loope push dec mov enter iret out mov pop std and jnp lods aad mov jnp cwtd pop dec push cmpsb push mov mov mov xchg sarl ja mov imul or test in int3 ljmp fwait sub gs jns sahf xor jne out adc mov push pusha negl aad and or pop das xor pop cmp or adc xchg repz mov push je jp (bad) dec push ret cmpsb mov pusha inc repnz roll pushf je nop pop bnd imul outsb test sub inc lret scas and adc fidiv mov loopne dec movsb outsb mov ds jb push mov adc lret mov inc stos enter pop adc outsb mov dec xchg lock push outsl insb cmp divb sub add pop sahf out sub xchg mov in jnp test add dec xchg pop pandn and negb xchg (bad) scas pop xchg add stc popl lret in fidivrl push lret jmp insb js in mov repnz adcb mov pushf lods and xor push fcmove test hlt in mov xchg loop xor insb sbb aaa jmp dec orl (bad) mov ja fnstcw cltd cltd lret test clc fstpt cwtl or add jo mov mov shrb sahf jo cmpsl xor pop outsb sub lahf lret inc mov test mov mov mov test popa and mov xor mov test mov pop outsl es dec pop cmp adc add add xchg dec mov mov (bad) stc mov push clc push sbbb xor rolb (bad) scas sti xor (bad) mov hlt jbe add flds ja mov inc cmpsb sub mov shrl hlt lock imul dec jne lret (bad) enter ja sbb out iret outsl loope stc mov imul stos loope jae pop dec xchg xor xor es stc jle push mov imul int cmp mov pop inc outsb mov inc cltd mov fstl or test pop sub cltd jns outsl mov mov (bad) enter jmp rol ret push mov outsb dec lret data16 adc push pop mov or xchg fsubrs pop test mov mov cwtl push dec ja hlt jns mov cwtl imul jmp iret hlt (bad) jne pop xchg fucomp push test xchg gs pop xor and in adc out nop mov add rol and call inc leave sbb dec cmp inc (bad) sbb into out push xchg or adc cmp dec fwait and stc dec inc pop ljmp xchg sarl rolb cmp pop loop movsl jne out xchg inc mov cwtl ja add sbb mov into or jae jnp mov jp sbb xchg push xchg test in mov outsl imul mov cltd aaa inc jecxz jne ficoml andl mov inc sbb mov mov out dec and jg xchg int3 lods in movsl jmp addr16 insb jne xor andl (bad) es (bad) lahf push aad negl cmp and jp inc mov jecxz pop or sub test and jb (bad) stos pushf jle mov xor jmp int mov popf fs push std divb loop aam push adc out dec pop (bad) iret imulb sti imul (bad) std pop pop fsts std fcoms cmp mov das out mov int3 outsl test lcall push mov jl into scas cmp jmp sbb lret (bad) sub adc sbb jmp add dec mov or jns add pop movsl add lock leave cmpsl dec xor (bad) inc into jne (bad) test das xchg stc inc mov clc mov inc fadds xchg add mov xor xchg (bad) fnop mov gs xchg jecxz clc (bad) cltd sub xchg push insl ja icebp into repz nop fwait test xor dec dec sub cmc jne xchg aas repz mov int sub enter mov jo jns sbb mov mov fild xchg ss popf xchg inc adc nop popl das mov jne (bad) insl inc data16 dec add loop pop (bad) jne add loopne pop cltd (bad) xchg xor sbb xor jl cmp xor adc push mov pushf divb push mov cmp xor bound or mov icebp and (bad) out (bad) je or pop lds xchg pop push rcr dec inc leave in xor mov push (bad) or imul cmp xchg popf and ss add (bad) cmp mov mov xor jne sub xor dec xchg xlat and repz jmp dec push sbb imul add inc push aas test xlat or fwait sti pop inc lds les and lods adc gs shrb dec popf and mov sbb xchg insb push test jmp jbe sub cmc movsl int3 popf aaa (bad) in mov scas sub inc seta xchg lds andl cmp data16 jnp pop (bad) out aad stc and adc pushf fcmovb outsl sbb cs mov adc or mov mov push push pusha and push push sbb mov cs test mov push jbe sbb imul fcomps fisttp inc sbb sub in shlb add cmp (bad) push or cmp mov mov mov (bad) xorl dec lret idivl add push xor daa pushf jle and mov cmc mov push cld push (bad) shlb adc sub cmpsl push sub lahf (bad) out jmp and clc adc into push (bad) cmp dec push dec xchg push stos and sahf ret (bad) fldcw nop loope in sbb int and jns push cmpl adc mov xchg (bad) lcall xchg inc inc scas pusha adc jbe mov out xchg icebp decb pushf test mov inc int3 xor out push adc roll rcrl mov jmp (bad) shrb lahf push leave imul mov cltd into mov mov cs xor subl dec aaa clc fstpt xor adc fstpl enter ds mov (bad) adc xchg xchg fnstenv test imul xor fs (bad) fdivrs out jp in daa loopne fs movsb test sbb clc je fcmovu into fimull stc pop dec sub sub fwait pusha ja into cmp jmp xor lods lahf inc add sub scas pop mov (bad) (bad) cltd or aam dec out xor jbe popa xchg mov lods or mov cmp arpl xor das aam and adc movsl shrb pushf adc dec mov dec in (bad) xchg adc nop pusha popa xlat stos jge lock sbbb push sub xchg outsl sarb cltd enter xchg aam pop push ret sub orb push sbb pop and jne sbb sti add mov stos inc out fmulp pop adc cmp push arpl mov push add jns lret cmp aaa fs or jmp testb xchg fstpl aaa ljmp push mov rcll inc out aas dec sbb js cld mov pop bound mov jge gs mov and and cwtl push js ret sahf mov fsts xor fdivr (bad) jg fldenv inc aam rcl pop add cltd xchg rcll adc lds jo scas (bad) jo xchg mov mov out addr16 shrb adc mov push arpl cmc adc sub out int3 add sub pop addr16 sub rorl fisttpll or push repnz testl ret dec push dec mov bound xor dec lret and push negb push sub pusha mov addr16 inc inc lods aad cwtl push jmp jp fnstcw mov mov mov incb jle and mov leave xchg pop jp dec xor or (bad) dec pop nop or int fimul je pop das pop and mov loopne mov iret imul js ficoml repnz xchg fmuls add outsb fcmovb mov dec mov repz xor mov ljmp pop push arpl adc ret jp int3 xor fsubrl pop xchg jmp mov repz jno sbb pop fistpl push scas es mov mov loopne leave mov jb jno sub pmaxub popa dec adc or xchg inc add xchg and fist loop test mov jl jo jnp ret sti (bad) hlt cmpsl mov sahf xchg loopne mov fcompl pusha iret loop mov xchg add outsl add lods add je loop inc adc xchg inc push push adc shlb cli add sub repnz (bad) jle mov sbb (bad) (bad) pop jge mov cmp nop mov rol into sbb xchg scas fwait sahf xor and or fcompl dec or out iret stos mov mov stc in xchg inc sti fs mov mov pusha pop and adc rol divl mov cmp lea decl mov jle sbb icebp push iret out in jmp in cmpsb lret (bad) pop lock cmp jo in jmp push mull jb pop or (bad) inc int3 jnp dec and (bad) jns sarb mov loop andl ficoml sbb dec add lock jmp loope pop pop xor jne cltd xor rcll add cmpsb adc notb out les adcl and insb es mov push into cmp jne out sbb xor shll dec mov in add mov cmp (bad) cs jl (bad) xor sbb push icebp faddl add add (bad) or pop jge sub mov fiaddl jecxz mov mov mov pop jle or jne jnp mov mov in das mov push lock cmpsl jo jb loop in aad mov push ret outsb or notl mov jnp sbb inc out jl pop push rcl inc les aam jecxz mov pop mov dec adc (bad) out inc inc xor and jp xor inc ljmp out jmp push inc in mull adc mov sbb jmp ss lret repz (bad) xchg jecxz cmp cmp push adc and repz sub dec ret push pop inc icebp lods aad dec pop mov imull cmp subb flds bound les mov inc jnp sbb add jns repz and inc sub repz (bad) fsubrl aaa jnp inc ss cs lods inc jb pop aaa mov push (bad) std loope mov sbb aaa lret addr16 hlt mov mov enter jnp or test inc in mov xchg sbb mov out fs lcall pop shr add call push rolb js adc leave or jnp xchg push cld (bad) mov push (bad) div mov or cmp imul cmp xor push pop daa lret loope mov daa cs adc pushw add jp push out fmul out pop cmpsl cmpsb shl aam flds imul lcall push loopne push ljmp std xchg loop hlt xor subb mov sbb jg push notb sub pushf or cmpb into ret xchg adc lea dec (bad) push addr16 nop inc or mov dec cmp xchg add (bad) push cmp in mov popa inc mov in mov xor mov xorl outsl mov sub not fwait mov add sahf cmp dec lea inc std into inc rolb dec lods xor dec out xor pop aam mov mov push mov ds das stos fidivl pop repz sbb adc adc jbe dec (bad) and cmp xchg mov mov jb xor aaa adc xchg rcrb fdivl sub mov fucom pop call jo lods test (bad) cmpsb or daa cld clc pop lahf mov push imul xor (bad) xchg mov or lahf insl pop dec inc mov push mov cmpsb dec scas bound ds sub fsts mov inc shrl (bad) inc pop test cmpsb push push lods jmp dec mov icebp scas add jbe sbb inc in data16 aaa fs push and mov in push imul sub inc les clc lahf and out add aas mov lea sub ficompl aaa test sbb in shld add and addr16 int xchg in mov push adc sbb cmp bound jns sub pusha pop or xchg adc mov insl sub adc push sbb lock hlt lcall pmuludq cmp adc inc pusha mov lret jge jae jb push xchg es in (bad) jo push notb jns cmp xchg xor mov sbb adc add cltd dec mov pushf test movsb test in loope xchg ss fcmovnb movlps xor or ficom sbb lcall lds shrl bound xor leave mov sbb je ss rclb mov test dec aaa pop xor sbb push sbbb push add mov inc xchg cmp fld sub and jne shl mov jae jb jns or sub sub imul mov xor mov icebp push divl das sub cld pop in sahf jp jmp dec mov out jmp sbbb in in cwtl adc xor mov mov (bad) loopne dec cs out sub cmp out mov enter push (bad) xor cmpsb and bound iret je jb outsb mov mov sbb mov icebp mov outsb ret outsb test xchg inc outsl mov push popf jg in out sub push out mov and into stc or int or iret sub pop adc xor js cwtl fbld mov out addr16 mov dec xchg int3 jno sbb aaa iret dec jmp xor in shll dec push or decb insb clc dec xchg jmp cld inc fldt aad jo dec loopne pop sub dec xlat mov sbb add mov sub insl and rolb or jo push in cmp cwtl lods clc dec push adc jb aas xor mov repz testl mov sbb or add mov pop xchg push mov and cli fistl inc bound and repz test scas mov xchg fs repnz (bad) sbb loope test in xchg fistl pop repnz pop pop push enter cmp xlat xor insb lcall jno stos loopne sbb mov push pop (bad) scas cltd call aad aaa rolb mov and pop sbb dec or mov testb push mov stos xchg inc jmp add mov inc bound push sbb xor fstps lods sub das jmp sbb clc jmp dec (bad) sbb fisubr pop mov fnstcw (bad) push mov xor mov stos test xor sub push daa sbb xchg es inc aas jge add cmp adc pusha out add mov mov add sub inc sub ss addr16 jl cmp xor fldcw lret insl mov or shrl int dec in cltd icebp in mov push xchg pop mov ror (bad) outsl push bound xchg cwtl outsl js test sbb test cwtl xchg ja mov jge and pusha rorl stos insb pop inc mov (bad) jge (bad) enter (bad) aaa add mov inc pushf mov or stos push scas and xlat pop lods insl jge adc es (bad) jno in jne (bad) in inc les (bad) sbb movsl cli push cmpl mov icebp sahf lcall sbb es adc sbb xor out test add adc lds rcll fcom fistl (bad) mov ja lahf daa jne inc jno adc inc push add loop out stc movsb loopne cmpb jb cmp add mov or push scas mov arpl cwtl popa imul mov or xor push sbb xor push xor lods dec xor sbb cmpsl jnp ficompl adc fwait inc push mov cmp dec sbb jbe cmp push mov icebp adc sbb jmp ss xchg add pop (bad) dec inc stos cmp stos cli test les pop cli sbb ret divb (bad) push adc and mov mov gs cmc push in imul and cmpsl xchg mov cltd and iret outsb jg dec push test clc out stos sbb xor ja outsb and xlat rcr pop xchg cmp mov mov test hlt add idiv push xchg sbb gs das or pop loop mov mov fstps shl (bad) lock pop xor imul cmc loopne ja lret (bad) call lea addr16 hlt test and or pusha or lods comiss ret int out hlt loopne mov and sbb bound inc cmpsl loopne test dec stos mov fiaddl fisubl lds add dec adc mov incl sub insb rol fwait jmp jmp lea add mov sti jp (bad) fstpl xchg insb xchg mov in enter repnz pop pop js cltd adc xchg sub and test mov mov dec sbb pop ljmp (bad) aad jb stos push cmp and jp xchg push scas enter lcall mov fsubs sbb int or xor lahf adc inc push shll loope jo dec add js fstpt pop fst and gs stos mov shll pop mov in popa (bad) mov cmp jg fbld mov inc mov inc sub outsb test and fwait xchg sbb pop mov test push gs into mov fmuls inc mov pop and scas mov mov loopne (bad) pslld lret ret (bad) adc jns dec pop adc mov nop mov sbb movsb (bad) mov stos pop ret adc dec inc xchg push fistl in sub enter into xchg or mov fist push sbb cmp add mov lods loopne xor mov mov push xchg add push mov clc aad sti xor mov push mov pop pop xchg xor gs (bad) jecxz aam and sub sbb jo xorl stos push dec out xor mov test dec jge lret aam out leave int3 cmp add int inc xchg mov stos or fdivs mov cmp dec repz insl adc jae out lret addr16 mov pop dec sub xchg aam icebp mov mov add jo (bad) xor xchg push push jb std adc out movl push push loope mov daa or pop aad push dec shr add dec push jmp daa mov dec test xchg repz push pop mov xor cmp incl iret clc xchg (bad) mov imul inc je aas jg mov sbb mov hlt jmp push out adc and push fmull inc gs stc and into xchg insl (bad) insl mov cmp and mov mov fidivr push pop push (bad) out sub push pop inc inc popf cltd dec in gs jp aaa mov xchg jmp push jge (bad) js push or out inc add scas jecxz out jo test jp adc inc mov push cmp fdiv imul pop push push jnp cld xchg lahf dec add xor mov inc sub outsb movl push sub mov lock xchg jle ret add in push cli adc or inc ret fnstsw loope loopne popf jo cmp aam imul jae mov cmpsl xchg xchg stos inc cltd shrb pusha pop fdivrs push int xchg mov mov idiv outsb jb sbb addr16 cmp faddl andl pop (bad) repnz repnz sub xlat pop dec adc cs mov test aam fisubrl fisubr dec ret je xor pop mov pop mov mov lcall out ds dec mov dec mov (bad) adc lcall cmp scas je movb inc iret add inc or incb daa in cltd imul lcall or xchg mov push outsb and sub clc aas cmp imul (bad) mov insl adc out lret imul jno xor out (bad) hlt mov jmp xor out pop flds inc sub sub (bad) jb pop sbb pop popf adc arpl pop in dec idivb mov add lods shlb or xor ljmp mov jge xor inc dec or (bad) loope jle mov add stos dec mov sub mov test pop adc adcl add cmp inc je fsubr fdivrs stos int3 rcrl jl loop sti push inc les xor dec xchg mov cmpsb pop test int3 loop xchg sub inc pop jbe pop ret roll sub inc jmp push cmpsb repz (bad) sahf push mov enter xchg lret arpl adc out mov bound mov xchg push (bad) cmp lret icebp xchg cli jns dec aam cmp (bad) mov cs (bad) cmp cmpsb mov xor jnp js mov sti inc sub jbe gs (bad) cld rol (bad) mov fcoml and pop cmpsb call imul mov jbe inc jge and scas sub cs xchg leave idivl mov jge lret in ds adc cmp out andl xor add mov repnz test inc mov mov adc jg leave cmpsl (bad) stc lods das das loopne jl std pop cld mov lock sbb insb cmp pop (bad) push repz into out lods mov lahf ja pop pop je cmpsb inc dec cs lret aas mov out jae movsl cld scas nop sbb cli lret rorl scas test rorl pop testl mov push jns jbe jns bound dec and lcall fiadd es loope xchg iret ss jo sbb and or shlb cmp pop mov mov je mov (bad) mov xchg test sub popa mov movsb dec int jg jg jmp cmp mov std mov lahf rcl sbb dec pop jg inc movsl mov std stos or aaa inc imul mov inc lds nop movsb dec push pop cmp aad sbb sbb daa fs mov mov sub es dec test popa (bad) sbb inc (bad) repz xor cld mov and jne mov push push cmp push push xor push jl bound test dec or jg das xchg rcrb xor mov lds adc nop pusha iret mov push adc rcrb ds int3 (bad) xor int mov sbb cmp lret aaa mov (bad) aad and jo xorl mov xchg sub or add addr16 mov rclb lahf jecxz test xchg add or dec xchg (bad) mov cli or das int3 pop jno stos lods loopne lea xchg or dec arpl js cmpsb jnp jmp popa inc jmp into push or stc adc fdivs inc fmuls (bad) es push mov or fsub scas jg or jnp lods arpl push pop pop pop pop out fcom in cmpsl lcall xor lods pop in shl out pop scas cwtl movsb stos mov cmp and int3 xchg imul imul in mov jmp cld outsb pop call lea pop cwtl and loope pop push mov lds lea mov ror or push sbb jbe sbb iret into sub cwtl in inc cmp outsb mov sbb (bad) cmc mov push sub mov insb (bad) xor push out mov cmp push inc (bad) scas sub add push jae mov adc and lcall xor pushf jno jno ja hlt adc pushf cmp (bad) loop cmp ds bound sbb xlat stos test jp pop dec or pop mov aad aas and pop mov popa dec test arpl js mov sub adc cs mov mov outsl sbb xchg sahf arpl ret lods out popf stos cmp ja mov loope cmp out (bad) std stos in cltd outsl dec (bad) mov or sub or aaa cmp icebp mov mov dec mov aas sub pop adc fstpl movsb int3 mov pop (bad) aam call enter lret xrelease rcrb cli outsl mov mov insl push sub mov out sbb out pop inc les imull push or push xchg pop dec test data16 fldt lcall repnz inc adc sbb dec jg mov mov mov sub pop lods xlat sarb (bad) jmp xor sti adc les iret fs in xlat stos mov jl and jecxz pop push mov xchg sub lret scas aaa fdivrs add adc pushf mov jne fidiv and jo loopne aas push fbstp add ds mov dec scas adc sub mov lcall add fbld iret xchg pop inc pop push push jge faddl aad imul and js jo sahf leave mov fs mov in cmp inc (bad) mov cs es aam mov inc inc ret jno sbb xchg mov cwtl popf push pop insl test sbb ret push xchg cmp dec out inc imul or mov sub mov and fcmovnu loopne lods test je lret cmpsb pop sub fisttpl add jmp mov cmc mov (bad) sub dec dec test dec loopne pop mov mov jne ljmp push add in jmp inc push mov push subb cmp jmp sub or mov lahf rorl cmp xchg sub mov movsl fadd fnstcw das jns inc or test icebp idivl xchg es (bad) sbb repz fldl xor dec or ljmp sub cmpsb sub test loope out insb mov roll pop mov and pop scas sub lea movsl and add pop mov jb lds sub sbb addr16 loope ret or cmp add aam xchg sub or pusha adc push mov or mov loop dec dec test outsl sub dec sarb adc ds or js test mov movl adc inc push inc loopne test jne lods inc pop lods xchg xor sub aaa shr adc mov std aaa mov js sti dec ja enter outsl push rolb clc int3 inc push daa mov inc jp xchg daa std xor jbe scas int3 adc xor cmp sbb mov inc add jg mov iret sahf pop xor jo sub push cmp push pop lret push sahf dec xlat mov stc ds stos ret sti lods sub (bad) in ds jmp jg test push mov (bad) and pop (bad) repz xchg hlt jle inc (bad) icebp sub imul lods push cmp bound movsl inc xchg dec mov mov xor (bad) cltd push aaa fwait push push mov (bad) in test insl xor (bad) push adc xor out out xchg fdivr bt mov xchg add mov add pop fwait in and insb imul call call loop pop out outsl (bad) aaa push (bad) cwtl pusha dec jnp pop and or add fmuls clc nop int les out out movsb sub push into imul mov dec fiaddl lock hlt lcall hlt lods cld out shrb cmp sub (bad) push pop in inc roll jl or inc adc out push cmp inc test cmp inc push xor (bad) mov or xor or push adc xchg add loop and xchg and jb xor jo xor or adc adc hlt lods dec cmpsl pop jl adc xchg (bad) daa lods inc scas arpl jmp mov push xchg push mov gs push mov ljmp out lods stos fimul and push sub enter push sub arpl cmp imul sbb cmp sbb (bad) mov cmc pop xchg add gs ds cmp xchg cmpsb pop rolb or repnz dec pop mov in dec mov pop cs jle jo push push jae mov mov daa xor mov ficom loopne dec push outsl into call outsb (bad) movsl xchg imul clc mov xchg movsb xchg aad inc sbb sbb mov in or out iret in sub jns and mov (bad) cmp aad and (bad) les cmova jp jae in into cmp pop aad imul or sub repnz jnp decl mov xchg rorl mov cwtl cld stos and fwait or bnd sbb ret push push (bad) fldln2 std shll popf fidivl int adc mov dec jg pop pop rol fimul adc pop sbb (bad) stos add add (bad) movl xor xor sbb xchg mov rorl jb lahf dec jnp add std cmc and popf fidiv lahf jmp lea sub insl cmp mov lret sbb sbb mov mov cli (bad) cmc mov sbb (bad) or (bad) movsl cmp pop addr16 aam pop cmp push push jnp cwtl sub lea sarl mov mov cs add dec in mov push test cmc adc leave stos mov xor lret cmp xor loope leave rcl inc cmc adc (bad) fiadd xchg test pop mov pusha mov jnp in dec sbb je push (bad) lret push cli xor dec push cld (bad) leave mov sbb add inc imul pusha cmpsl mov stos inc in xor popa ljmp lods xchg stos pop push inc and inc lfs xor sti inc or stc ss fsubl mov in test out popf fs adc (bad) pop jmp dec scas in in in das jne push xor push sahf xor nop in xor fadds es scas inc scas xor int (bad) mov mov pop (bad) adc add mov mov jne xor fiadd stc mov (bad) aas adc (bad) jp arpl add jnp pop pop (bad) cmc add outsb shlb push pop ja icebp insl loope cmpsl xor dec lcall mov mov cmp push xchg mull pop cmp imul ret or ffree psubw jl in fdivl int test aas and loope imul scas cltd jno add pop lret jge pop bound stos xchg fild xchg add test aam pop xchg jns or push stos loope je dec ds sub mov push dec cli add sub inc push lcall mov cmp jnp test (bad) xor call cmp cmp xchg lods divb inc in cwtl aam ret ljmp push rolb sahf cmp inc (bad) iret das push loope test js jne push mov test lret sub insl xor fidivl push movsl add xchg sbb lcall cmp mov push (bad) cli inc xchg adc mov mov adc push or dec pop in insl push pop lds mov sub mov bound shr xchg sbb cmpsb (bad) aad inc push int aas daa dec cmc ffreep sbb std cmp adc es subl mov fimul jl add dec pop pop lods xor add lcall je insb (bad) mov mov mov adc loope sbb pop mov inc testl xchg xor fwait cmpsb dec shl stos insl dec std int or idivb sarb jl jmp push mov cmp inc cmp (bad) or and scas push cli out test fwait mov mov sbb int hlt clc or lcall fstpt test cld in xchg cmpl dec pushf movsb cs push loop inc int insb test sub (bad) push outsb xor nop mov leave aaa xorl loopne cmp mov add call pop inc pop xchg negl jo dec fnstcw sarl sub cmc mov aam fiaddl dec mov repnz jp push loop ds inc and stos jo movsl mov clc fsubr mov nop jo data16 rcr sbb ret xor imul repz sub mov xchg je inc pop in lods xchg adc gs xor scas shlb mov jbe (bad) idivb scas pop lock inc dec add cmc aam outsl jnp rcl fldt and cmp pop aas cli popf dec pusha lods bound pop inc cmc mov add leave mov cmp xchg pop push loopne out repnz stos mov mov inc mov adc ds popf popf pop mov and cmp fidiv xor ds mov das sub fadds adc gs (bad) xchg add roll adc cmp cmpsb mov xchg push (bad) movsb imul nop xchg cmc int3 aam repz sbb out test hlt jnp mov nop fdivs pop cmp jecxz enter lret je cli push mov pop aam arpl idivl or sbb in adc cmp ret das call iret push dec enter mov push xchg les out xor test mov shlb mov pop out rclb sarl dec sub cli cwtl pop cmp xor and dec les sub cmp sbb adc shll mov js in inc push les mov sub ficom outsb cmp inc clc int ljmp or pusha jge (bad) push mov ret pop popf sbb leave imul divl jp test and cmp mov fisubl add out outsb xchg or outsb faddl test les out sbb outsl sarb push mov mov inc inc sti int lret inc mov jg aam pushf fisttpll aas or loope (bad) xor dec or pushf push lock movsl dec shlb mov ljmp lods lcall fwait loopne hlt xchg sub out leave adc sub xor push mov lret aad stos xchg mov out fidivl fstl insb xbegin leave call cli xchg mov stc jecxz das (bad) xchg daa mov inc push mov dec popa lock mov jecxz fsubp unpcklps out mov push add sbb xchg inc cli in lods xchg mov (bad) mov icebp or loopne jle les sbb cmp test sbb mov out jl push and iret inc adc or test or xlat shrl js imul ret add cli neg test xor cltd sbb push inc xor ret mov mov sub movsl push inc pop in ss or push mov pop lret loopne jmp mov adc mov loop das daa jmp cld sub fcmovnb ja out add movsl or sub fist xlat ja int sub mov insl mov sti sub aaa je xor call sub mov loop scas (bad) sti mov mov push test in hlt dec test cmp rcl stc sar in (bad) jb xchg mov aam icebp addr16 mov dec mov push sarl add gs pop inc sbb repz pop gs (bad) jnp pop or push (bad) cs fcomps jbe cmpsl cli (bad) icebp lret xchg or movsl sub and adc jecxz xor and (bad) in jp sbb (bad) inc sub and sub inc daa arpl into mov addr16 enter icebp dec lcall les mov std mov jbe dec xor and jb mov push (bad) (bad) lret popf arpl mov jne decl jb sbb push inc xchg pop and adc add and inc loopne push fcomp mov (bad) (bad) dec roll rclb (bad) sub test mov jns cmp inc add je pop sbb popa add lock out xchg cmp jl sahf and (bad) jne aas pop outsb cmp leave std shlb scas je pop xor jmp shrb rcll mov ja out jae xor cmp and icebp scas inc arpl das cmp and pop dec or stos cld jo call xor movsb inc pop xchg stos adc inc repz out rcrb nop in test xchg les ficompl data16 or jb scas add jne sub test aam inc jbe add jp imul xchg movsl sub xlat mov fs ret or icebp cmp ja mov and and cld mov cs jg mov (bad) mov jmp push mov cmp cwtl adc ret inc mov sub cltd sbb aad xchg addr16 sub leave test or (bad) lcall sub movsl lock add xchg push and aaa cld mov mov lret enter sbb inc adc inc mov mov cltd mov in stos push sbb inc clc sbb lea (bad) dec mov mov fstps divl std add or mov insl xor pop dec fmull (bad) hlt data16 ja fnstsw incl out jb pop pop dec pop jl jne mov xchg lods inc jae push mov daa jg (bad) xor rcrb or popf test into sub shll push pop ret mov inc mov jecxz sub jmp insl adc push mov cmp xlat cld xor add stos pop cld aad (bad) aad aam pop or (bad) je push pusha xchg pop mov dec data16 stc mov lock mov es mov jne sbb xchg sub pushf lret addr16 outsl (bad) icebp movsl in dec lahf loopne lahf push stos jl or sbb dec scas push je push movsb cmp and xor jge push adc pop push ss add mov mov mov rolb mul mov mov into sbb inc push pusha mov cs lcall sub lcall fstl inc mov xor stc outsb test sub (bad) cmp or call or mov aam xchg sbb jae rolb add sub lret imul pop mov push mov clc xchg push pop enter mov xchg shl out adc repz gs xchg hlt int3 movsl movsl pop sub std xor jb pusha enter mov pop dec xor and jmp sub pop pop dec sub xlat xchg or inc les test call xor (bad) repz testb dec aam inc adc daa adc mov out out daa xchg push repnz fnstenv scas inc push repz mov mov mov iret out addr16 jne lock inc aam xchg int3 jbe mov jbe lcall xlat add popa fiaddl jg xor rorl call pop call aas aas sarb push mov push inc sbb pop dec lret mov vmovshdup fisttpll neg pcmpgtb loope sub lcall push pop jle insb mov mov mov jne movsb cmp xor int jg les test lods scas movsl adc cmp out cwtl sub popa mov (bad) lcall sbb ds stos ficoml inc mov mov test cwtl pop and repz cmp xlat jo cmpsb mov ljmp lods enter pop pop mov adc (bad) lods stos je and sbb adc push cmc in pop fisubr lret push outsb pop push (bad) js insb cwtl mov inc jmp dec je daa cli mov aad mov sahf int enter jge cmpsb jg movsl (bad) or pop (bad) sti loop pop lcall xor mov or mov pop ds xor aas pop std mov or adc (bad) js and sbb ljmp push pop and inc punpcklbw or popa rorl pop scas sbb push pop jp nop push adc fisttp push aam xor pop or daa xor fsubr cwtl push fstpt push stos (bad) sub or push pop inc jno mov fiadd fstl inc frstor inc mov mov (bad) or sub imul flds pushf test ret pusha mov std sub pop sub inc fldlg2 mov push lds mov push aas inc dec inc inc push xorb outsb add rolb adc mov mov js out pusha in jp push inc xor jae mov adc clc aam pop push xor mov (bad) pop pop gs rol fldcw subb mov imul xchg inc ja cmp cltd fdivs jb fucomip sbb push jne mov test add dec stc inc scas and lret movsb mov xor pop xor push adc popf popf jmp rclb mov mov xchg repz xchg dec lret (bad) xor xchg test (bad) sub outsl and xchg movsl and scas mov loope aas cmp xchg ljmp jg jnp inc lret leave gs push sub push pop xor es ds iret xchg bswap movsb icebp xchg xor push dec icebp pop inc leave xor dec mov out mov add fidiv int cltd (bad) push out mov adc add dec dec clc rcrl cmpsl jnp ret jbe cmpsl sti sbb adc mov mov jae stos das mov jl mov lea lahf addr16 cmp pop xor fstp cmp mov imul (bad) add jge lea (bad) mov repz ds sub out inc jle cmc hlt lea mov insb jecxz cmpsl and mov dec mov push mulb pop (bad) inc shlb or jmp mov jmp div xchg push out mov push pop jo mov mov hlt outsl and bound and shll cmp xchg pushf pushaw inc pop lods pop cld adc jg mov test sbb and cs cmp ss (bad) sbb or mov jb mov loop ret lret or out imul jo jle jnp sub mov add iret and data16 or jl push inc inc cmc cmpsl fwait push ret jo pop (bad) enter mov data16 (bad) popf push stos js mov test inc mov in mov jno and jmp cmpsb iret clc mov popa add and inc stc pop aam daa std popf pop test seta aad ja inc lods lcall adc and fist push fisttpl adc addl std mov scas adc leave mov mull bound lods mov imul xor negl mov (bad) ljmp and movsl insb inc cmp imull notl mov add scas lcall loop push fwait inc rorb insb (bad) xchg imul xchg fidivrl add test adc lea lahf inc mov shll push call into inc movl dec movsl into subb push insl or xchg outsl in xchg sub push jecxz ljmp aaa fcmovnb xchg test mov pop adc mov xchg fucomp mov and (bad) sub dec sbb mov divb fs ficompl jg adc in jp or push je and sub ficompl and mov div dec imul pop lea call dec pop fwait push cwtl mulb cmp sbb dec xchg push xor cmpsb xchg mov pusha mov nop or jle mov repnz push push jg outsb sub mov jge leave (bad) or or sbb xorl leave je jle pop bound push orb mov out mov pop mov in fs push add xlat orl dec inc mov (bad) jg mov out xchg in ja in and xchg popf jae dec lret leave stos cmc mov std dec and and pop inc and jle je outsb scas stc sub xor ret in cmpl sub lcall inc sti aaa xorl pop xor sbb outsb rcrb mov push stos enter cmp lods roll lret psubd out xor sub add repz fcoml inc mov sub mov jl mov xchg mov or and aaa (bad) test jge (bad) sub mov cmp xchg fmull and fs fstl leave xor es repz lds popf mov je jb xchg pop fdivl leave aaa imul sbb insb negl loopne mov test fcmovnu cmpsl stc (bad) arpl arpl cmp and insb cwtl lods repnz xor out fisub sub sub sbb subl (bad) dec jg mov sahf movsl dec xor adc rcl mov mov push jg sti mov movsl lahf xor mov add push jo jb push je push rcl divb cmpsb add jno xorl arpl sbb jmp aam push push xchg adc js add gs push sbb arpl jae xchg mov icebp push xlat xchg push test jb mov out xor stc inc push mov mov out inc mov xor mov and mov les dec dec (bad) fsubrs enter cli mov (bad) imul aam dec pop dec std sub or insl jno jge mov sbb cld mov inc pop xor mov jo push lahf into dec ret xor mov mov pop jmp or int iret mov pop cmp xor cmpsb pop push aaa and xlat fdivrl pop sbb test inc in sbb sbb sbb ret nop xchg or (bad) sub pop daa fdivs or loop mov orb sub mov or fmulp (bad) jbe das xor insb test mov pusha out dec push lahf cmp stos push int3 mov out sbb or clc shrb jnp push into push fwait jmp lods outsb inc push jae jo add adc add cs push pop dec cmpsl dec xchg and rcll cmp repz fist jg out int3 xchg jp in clc jge and xchg mov mov insb clc mov and inc push stos andl cmp xchg sti mov stos xor pop lea dec ja inc aaa (bad) insl aad inc out pop dec or mov add pop (bad) (bad) sbb adc and sbb pusha das lods push xlat jmp fildll cmp sbb cwtl loopne add and flds xor push jge jmp mov lea cmp les call inc (bad) jg stc xor push shr and lods lcall dec loopne mov rcrl jbe lahf sub lret inc in xchg jecxz or lret cli push fsubrs xchg inc mov jle jb dec lods scas adc adc xchg inc into addr16 add sti pop ja jp cmp mov mov cld addl lret cli neg add mov xor and xchg inc fdivrl jge movsb xor mov mov xor in sbb jae lds jmp cwtl jecxz and lgs cmc sub xor mov loope clc jae cmp pop and cmp std adc pop fs in mov (bad) xor mov popf ret ja orl into inc mov (bad) push (bad) jo mov sub int pop decl subl adc or repz and mov pop and and addr16 in jns imul mov or fdivl pop aas fucomi addr16 adc add pop cmp out mov negb adc cli imul aas loopne inc sbb inc push inc scas pop aaa inc (bad) cli aad jmp aam mov mov sbb sub cmp test lock inc lret es divb movsl xor and fldl call jmp sub dec push mov jge push lds xchg icebp push push or pop lds int add xchg test xchg pop xlat or mov dec in (bad) xor adc add adc push arpl out sub jo adc jg (bad) movsl fidivrl and divl or mov sub add fidiv aad sub mov dec call sbb xchg add cs xchg push into jo sbb (bad) pop dec out xchg js rcrl push mov shrb das (bad) cmp addl push xchg js xchg rcrl jnp aad cli pusha mov pop idiv cmp in push rcrl lock insb lcall and sbb out insb daa or das push mov mov jne jbe jb shrb and fcoml cmp pop in mov dec and mov std lea inc inc fwait repnz mov bnd aas dec repz jno dec jo jb xor jb,pn in (bad) dec xor and sub shrb lahf enter std stos outsb mov push xor mov lcall aaa pop and into fimul inc (bad) add cmpsl mov cmp jns mov push pop cmp lds pop mov add fildl mov inc cwtl sub je push dec jbe mov mov rclb scas mov adc sbb call sbb sub (bad) add arpl inc dec xor ds (bad) pop sub pop jne pop stos mov fdivs mov or fistpll sbb popf sbb mov mov bound jg loopne mov mov dec xor lret jae and dec pop mov je xor dec xor out mov inc popf rcl sub (bad) push stos or sarb xchg in bnd inc nop (bad) fsubr cmpsl push mov aad or or sub daa out jp mov aad mov jl mov push cmp push dec daa scas adc jmp mov and in pop lret cmovo pop jno (bad) fdivs fs pop test pop mov imul ficom fbstp imul mov and jb pusha mov fucomp cmp mov sbb pop dec not cmp add dec pusha lret mov push fsubrs lock ret (bad) sbb lock mov repz (bad) jnp dec xchg ret dec xchg inc cmpsl xchg jbe cmpsl inc sub lret call nop enter push pop dec loope push add mov outsl xchg je jb lock rcrl adc loopne movsw xor iret adc mov xchg mov xlat sub mov inc adc (bad) fdivs xorb jbe enter or cmp cmp popa xchg jb (bad) or fnstcw push sub dec (bad) out out xchg mov movsb je jne sbb or (bad) adc xlat pop test nop inc xchg adc daa xor inc dec inc xchg jmp fisubrl fdiv cld cmpsl sahf push fsincos xor sbb cmp notl xor cmp inc call jns out xchg pop cmp xchg idivl in das adc daa repnz (bad) push fwait (bad) in movsb xchg mov and adc push mov mov es arpl inc jecxz out jge pop mov pop push or rolb fldcw sbb sbb mov fs mov adc fs lea test bound inc ja cmp loop xlat xchg cmp jl mov pop pop jl sub out xchg inc mov jp fbld std in sbb out pop jae mov sbb fucom adc add ljmp lods mov or dec in xor pop jle mov lahf std or (bad) jle or lahf pop cmp lahf movsl lods sti inc inc jns aas pop out into imul imul pop (bad) repz shrb xor (bad) negl imul push dec fist cmc cmp mov or ja xchg adc int clc cltd outsl hlt add jge cld xchg in mov lcall mov sbb jecxz mov lret test or cld sahf nop sub fdivl jle addr16 xor ret in pop iret test mov stc or xchg dec jbe frstor aad cmp sbb cmp sub mov insb push or (bad) sbb loopne js dec fstp int3 out je dec fsts rcrb hlt mov les mov mov mov jmp enter in sbb xor jp adc sbb lahf sbb pop mov xlat out dec sbb mov (bad) call mov mov adc cmpsb and ret in int sub rorl imul jl jmp mov push xor (bad) inc arpl in push push mov bound in mov pop mov (bad) xor or xchg jge xor xchg cmp stos fldenv scas mov push mov fisub mov sub not leave rcll jle nop fs adc adc sub inc xchg aas add pop stos sbb lods cmpsb sub add xchg popa mov (bad) imul lahf (bad) (bad) std insl cmp (bad) aaa push hlt or pop cli ret adc xor sub repz adc and cmpsb fiadd pop fldt mov and push dec loop scas sub cmp je or pop pop (bad) lock int3 pop sarb inc aad cmp (bad) sbb fwait inc (bad) lret push xchg mov push sub inc mov icebp aas aad jge int mov cmp iret fcoms pop or jno mov xchg sahf stos adc in aam sti xorl rcrl jge cli das push lock cwtl in es cmp (bad) mov inc add xor mov cmp fistl out scas fistp pop into dec hlt cmpsb out hlt stos test pop faddl (bad) mov stos add inc lds (bad) (bad) ss sub push out mov add push push into dec jge xchg js mov jg out cmc roll mov jle addl test mov sub sahf sbb lret (bad) pop add mov (bad) shlb jge sbb lods dec mov aad imul lods je sub lea int3 dec repnz jmp push jns in lret sub add mov nop add push dec sti mov push test mov sbbb ja lods clc je push pushf adc mov bound inc pop in jg lret loop movsl jbe sbb in sbb dec sub mov sbb outsl mov inc pop shrb sbb arpl ss sbb adc in pop inc inc dec (bad) out mov adc push lock mov add movsl hlt test add nop lret jmp inc add lock mov and lret fdivr mov mov in in in push scas mov push mov ret cmpsl inc or adc ss jns cmc jns pop cmp mov dec rcrl cs into inc pusha xor xchg add add aam mov sbb mov fld mov imul jmp rclb stos scas jb loop lock loope (bad) fiaddl in scas mov pop mov fistpl fisub jg push jb cmc add xchg (bad) in cmp scas xor push push xor sub mov ret out mov sub sti enter shrl mov inc stos imul xor (bad) loop icebp mov mov dec jno sub ljmp sarb mov mov cmpsb cmp or pushf push or jge les push sub in fdivr sub mov mov loop sub cmp adc pop cmpsl pop loope dec add or xor xchg fstpt iret xchg jo mov jbe jno adc repnz inc sub mov repnz cltd add enter sub addr16 out jecxz stos push fisttpll pop repnz sbb into std das pusha cld rol (bad) ret adc inc and xchg xor lods imul pop in fwait int3 into cwtl inc xchg or cmpsb aam int3 xchg ret lret imul bound sub inc pop outsl mov mov mov dec mov inc xchg or mov hlt mov ret mov clc ss mov call pop adc dec scas pop sbb dec rorl pop pop es (bad) mov mov adc inc adc sub out adc stc sbb jne pop mov mov pop nop lea sbb fldt icebp in and jle std xor xchg push xchg jne mov movsl scas jmp (bad) mov (bad) sti cmpsl mov sub (bad) data16 enter outsb rcl idivl cld xchg cmp mov mov repnz cli mov and add and sbb sub insb shl ficom mov xor sbb push xor lar push adc mov pop sahf (bad) xor pop jno dec popa push (bad) jmp (bad) (bad) fimull adc sbb dec jp fldcw aas mov int stc lcall pop stos pushf inc shrl and in je push out jge cs lea mov dec inc sub jb jge and fldt gs jle adc in clc cwtl push or lea loop push cmp adc dec push fdiv mov jle cltd addl nop sub popa imul movsl jmp lea jae lds mov xor dec dec lcall add and jge inc test push dec gs jo sub push lock dec add (bad) jno fwait inc nop dec cmp pop or push dec push cmp fisttp divps dec jg jecxz jmp out or cli mov add mov and jne repz or aas cmp bound pop mov int3 inc push push mov sub dec mov ficoml lret sbb and out and pop test xchg or out pop mov je les mov add mov sbbl (bad) jmp addl lock sbb pop add push xchg mov sub sub adc test push lcall pop nop mov pop (bad) or adc add or and push xchg icebp out fiadd movsl dec adc lock jnp cltd pop int pop cld int3 bound movsl mov jbe jmp rcrb jmp pop mov dec fimul (bad) xchg fldl mov or push enter dec and inc sbb ljmp xchg adcb sub cmp lds fist dec cmp stos pushf jae adc push (bad) dec and nop jg dec xchg add jne adc shl shll add jno push loop cmpsb inc ret (bad) jnp aad scas push push (bad) enter mov sarb mov mov xchg push cmp test mov sbb sbb mov xchg cmp jae xor ret addb lret (bad) adc add sbb lahf in mov inc cld mov and jmp and sbb sbb roll cli ja fwait loope lock lcall push loopne iret jb je xor fwait dec popf jno scas call dec gs push jne pop iret adc adc pop push adc fcmovu push or ss jb and dec mov jp ret movsl nop mov mov jae arpl ljmp or pop mov cs out sbb daa or out (bad) dec sahf test lahf inc xor lods flds outsl jle cmp cltd jecxz orl (bad) icebp pop stc push aaa cmp mov mov push popf mov int addr16 ret adc out fisubl pop xchg mov test jne fs jg push sbb nop jae add das popa inc hlt lock add fdivp stc jg xor mov je out inc lods sbbl leave test aas and xor test push test push jmp incl sub jge xchg xchg js fucomip inc mov mov cmp loope adc (bad) sub or push test xor jbe jno subl aad adc popa add push lret and das pop movlps add in movsb enter mov sti aaa daa inc pop jge aad jle jno mov imul stc jae push mov jecxz ss xchg cmp fisubr sarb mov lahf add or jecxz test rcr (bad) std das sub dec insl leave dec scas jb pop ss mov mov aad rcll mov and loop lods cmp pop mov fisubr jno and jl mov push pop pop mov xchg js lret dec dec dec repz imul and or pop adc cltd lret sbb aas call scas addr16 in sbb test push pop es xchg and and mov push (bad) loopne cmp cltd dec cmp cwtl mov mov out mov dec js mov cwtl push add int cmp out mov les xchg bound push xchg stos inc jns popf dec std mov mov lret adc mov and ret leave js icebp hlt ror stos test inc push xchg xor sarl outsb movsl pop test mov ja pop je lods lahf mov mov int ss mov dec push test sbb pop daa xor das popf xchg mov xchg out and out xchg mov sbb pop js jmp aaa jns (bad) in dec cmpsb cli lahf and push mov aas pushf imul insl inc icebp scas enter out shrb jnp sub lock and jle fs or xor or dec cmp stos ljmp lea add movsl push in xor adc mov in pop test std loopne mov or fsubs aam jp pop int3 pop lock fcoml mov sti jl cmc pop or (bad) hlt sbb push js fisub das sub nop mov sub or mov ret jl scas shrl lea adc ljmp dec mov aas pop adc lret pop dec mov mov mov scas mov clc jnp pop mov fadds adc xor into mov dec jb into lds xlat push sub into lea (bad) or lea sbb add adcb fistp add jbe push aaa pop xchg fnsave (bad) sti lea mov mov cmp scas adc push std lahf push pop cmp les cld xor fildll xlat mov xchg push dec mov aaa or clc movsb out inc popf lods fcoml test addr16 adc das imul inc adc aaa (bad) cmpsb and mov cmpb sti rorb sub pop dec jmp xor lret rcr lods test rcrl mov js fs leave (bad) in mov mov adc xchg xchg lcall into lods nop mov pop xchg stos cmpsl mov sub sbb inc sarb xchg lods ljmp movsl mov arpl insb fs addr16 dec rep ret cmc xor stos lods mov push in sub aaa inc (bad) xchg xor je xor add (bad) in mov cmp pop xchg or cmp push adc push jmp push loope js adc fmul mov pop sbb lahf loopne pop jb sbb ds lret call mov mov xor int3 jne lea xchg jo daa stc fmulp cwtl mov push jne xlat mov jp inc lods cmp jmp jns movsb add add in xchg test aad bound and int adc jb inc enter outsb pop mov lret jnp mov out lret pop sub dec adc sbb sbb xlat inc popa decl ret lret xchg or cmc jecxz mov sti je add and push pop ja cmp aad sub mov nop or jmp add mov mov cmpsb sub xchg fdivs xchg adc lcall jle sahf xor sub (bad) sti adc or pop mov lods or fadds mov call sbb cmp mov movsb fistpll popa add divb add adc lcall fsts cmpsl pop (bad) leave pop lock outsb movsb cmp adc push loopne jmp push xchg icebp pop cltd lahf dec leave dec (bad) jmp or fcmovne clc jecxz (bad) mov xchg cmp cmp mov outsb call lret in jmp pop add in pop scas jp leave pop arpl adc mov xchg inc jle jb xchg cmp cmp inc sub xlat (bad) notl adc incb fs jo adc cmc xchg shr mov inc fdivl sbb mov push cltd mov shl scas push jns or mov pop subl dec gs xchg das das js stc (bad) mov jecxz (bad) sahf mov and test push loope ss repnz adc mov cmp mov ret scas mov mov fidivl daa aam jns gs fldt ret mov inc fmull inc adc ret mov cmp and xchg insb jb fstps lock jae adcl xchg sbb movsb xor (bad) aas sbb repz (bad) repz push andl sbb movsbl notb jle adc dec loopne stc lahf in jge outsl (bad) in jae push mov sub ficoml les sub fstl or xchg mov outsb jmp jb,pn and js add xor enter lahf adc fcomip fnstsw lea jno pop xor pop xlat mov xor lret inc xchg push fstpt (bad) aam inc add repnz sub dec adc fcmovnu sub (bad) rep mov push hlt jg lea cmp push ja jnp mov lret pop add adc xchg mov mov dec ret xor loope push jbe scas xor pop cli adc mov pop mov cmp add movl cs sbb insb ja jmp sarl js push mov jns jae mov add lods sahf xchg and add cmp fisubl sbb jae insb or (bad) lods (bad) or mov adc mov mov out int3 lea xchg and ja xchg adc and pusha jnp leave lods pushf mov pop loopne sbb mov std and call mov dec add rdtsc inc fisttpl es pop pusha jp xor popf adc xor mov or outsl loope insb add sub loopne (bad) inc mov mov dec cltd leave jne std push dec popl cmp cmp mov mov shrl dec fiaddl inc cmpsl xchg repz ret jb and mov add dec dec sub mov (bad) in (bad) testb pop cs cmpsb dec cmp repnz aad mov pop fwait lahf pop jbe lcall (bad) mov sub mov insl jbe lea adc sub xchg push les inc mov das xor jns clc cmp into imul into cmpsl jae pushf (bad) xchg pusha mov jo dec icebp bound les jbe xlat lock push out sbb lods dec jle mov lcall jle jnp fdivrl je mov mov mov adc add adc sarl add and push (bad) push je mov cmp in dec add cmpsb mov (bad) mov stos sbb pusha add jae xor in dec adcl pop push mov xchg outsb pushf loope jle les inc ja jle shrl out daa jle jle int imul xchg repz pushf mov inc (bad) add addl out popa ror jae inc push and xchg cld mov jno fnstsw in mov mov push inc xchg (bad) mov mov gs arpl outsl mov cmp push (bad) sub loope std jo add or push push mov ljmp sbb aaa pop lret mov and mov pop push xor xor dec notb icebp lods lahf add inc out mov fistp lods int mov and jne imul mov xchg flds out gs mov in mov movl mov push leave (bad) mov enter mov repnz outsb repnz cmp xchg push inc mov in in or jnp ds inc iret popa outsl mov repnz fcomps inc stos mov jge adcl cltd cmc jmp push pusha or in insb pop jmp xchg les sub mov in test and andl les sbb repnz cmp push sarl loop sahf (bad) cmp cmpb rorl mov cmp fs xor bound and xor scas ja jle adc mov cmp cltd loopne pop or ljmp xchg fnstenv sbb mov lcall mov inc es push or push ja xor stos testb mov push xor out or insb dec mov mov pop jb cmp push or arpl xor clc adc repnz loopne imul add dec xor and cmp out iret xchg pop stc into sub popf cmp pop in push das stos jmp sti les adc dec xchg cwtl (bad) jns and pop sub add leave test lret test outsb fcoml mov idivl xchg xlat push mov and xchg cld cltd ret mov adc rclb cwtl push stc fsts addr16 outsb loopne lods pop inc sub pop imulb jb (bad) repnz or xchg in repnz js popf or sbb xor push dec cld add scas push cltd clc push jb cmp mov xchg cmpsb hlt pop dec jge sub adc outsl into sbb lods cmc xor add loope mov jb jle fmull mov sub add popf pushf (bad) cmpsl (bad) xor jp mov jo loop fwait mov faddl movsl xor inc cs call scas jle xchg mov xchg (bad) xor inc or sbbl inc and cwtl cmp push mov mov xchg scas sub stos xchg jno mov roll ret fsubrp jg imul in decb mov adc jl cld pop push notl sti mov mov pop test dec mov in dec jmp adc sub xor push pop repnz in sbb and add lret jmp int3 outsl scas or push icebp sbb add lods xor push test inc dec mov push fwait xchg loopne call push jbe xor stos cmp mov xchg push nop std pop movsl addr16 pop pop aaa mov push xlat jl out shrb ljmp xor jg or inc mov sti addr16 xor cmc cmc jbe cld ljmp dec scas mov leave dec lock add in add xor sub arpl gs mov pushf adc pop mov imull (bad) mov mov call leave test mov (bad) push popl pop aas sub inc pushw sub dec dec (bad) pop (bad) cld outsb and int3 xor (bad) xchg js or mov data16 (bad) pop hlt and inc push xchg shlb rcll jge pop inc (bad) clc cmp and test xlat or cmc stos mov rcrb push outsl ja inc fisub push jno loopne add aam pop mov pop (bad) nop add mov dec cs in movsl js mov cmpsl cmpsb repz adc add lret sti jle sub and mov call jecxz out push gs or xor ret out xor xchg mov (bad) les jge mov ret jg mov std rolb pusha mov mov xlat push mov cltd push lret xchg push (bad) pop and and sbb mov push movsl lds cld fildl pop or add pop push jge cmp pop leave pop gs movsb stc mov addr16 gs cs xchg sbb (bad) add adc fcmovb mov sub ficomp in out fwait test in pop (bad) xorb adc shlb scas ficomp xchg fidiv mull xor pop dec adc inc es lock aaa out adc sahf cmovno inc adc fisttp push and inc ficompl or sub jle jl sub clc mov mov ljmp adc adc cld adc push fldt rcrl push loop stos fwait aaa jb scas sbb arpl pop dec lret cmp js jmp mov stos mov idivb std pop in jbe dec (bad) jb adc pop dec cmpsb mov mov loopne mov fwait xchg inc aad lret (bad) leave sub xor leave add push sbb mov aaa cs insb jecxz and jne and pop dec clc movsl add xchg add mov jmpw sub mov cmpsl movsl jg les xlat mov add mov mov scas shrb popf and push ret shrb addr16 and ljmp inc mov cmp xor stos cltd sahf stc in mov cmpl cmp jg push jp bnd jmp int cmc ss xchg lds jo std insl js and insl out lahf add jmp mov add (bad) fcmovbe push lcall adc aam je (bad) mov xchg jo into jbe jmp movsl push inc cmpsb inc sub aad adc std mov dec jne inc sbb lldt mov mov inc xchg jg add (bad) sbb cmp ds scas mov adc xor das (bad) out push stos notb fdivl out dec stc out nop shrb dec call shl mov inc mov ljmp sbb mov push push cmc rorl xor lods and mov xchg imul and mov shlb arpl mov xchg pop lcall push and or int3 jae mov movsb cs daa test jno xchg xchg clc push or lds push inc lcall or mov lahf pop out mov sbb jmp mov add mov push dec lahf outsb adc add sbb and lret into out xchg adc jmp xchg dec (bad) and int and sub mov xor xchg popa or insl (bad) jo inc and push and inc shrl jp in (bad) or mov push (bad) into pop adc jp inc icebp cmp dec jmp les loopne sub dec andl inc ss shr repnz pextrw mov sub push mov sahf mov mov int3 mov mov insl inc ret push pop mov dec sub addb jns inc cmpl cmpsb add jb xor (bad) nop decb dec jnp push pshufw cwtl pop jmp out cmp rclb fildl mov xor pop adc flds cmp leave stos stos adc iret push stc jmp xlat sbb sub pop das sahf jo mov xchg loop jle pop into xchg sbb insb mov add out lahf loop adc (bad) jno jge jb es sbb clc fnstcw lods cmovno lock and out lret mov push js dec ds pop aam push mov std out out in iret push xchg mov add jbe push hlt jne xchg mov repz movsb mov pop mov fidivl mov push insl or sub clc and inc rcrb or pop imul xor mov mov addr16 sbb loopne out sbb fstpt test add fcompl sub mov movsb cltd movsb adc sbb movsl lods jmp cwtl outsl dec lods jno sbb cld or outsl mov imul push jns push sbb jbe fcmovb mov mov repz lret pop push sbb in dec or test dec dec push rol (bad) aad rolb test mov loopne cmp clc xchg shr decb pop aad inc mov add and xchg dec outsb pop lea in and scas popa orl add outsb imul (bad) je imul add inc jle pushf xchg pop xchg mov or pop test int mov cmp inc add daa pushf fwait imul das in xor rolb sbb (bad) cmc testl movsb movsb negb cli sub nop (bad) enter call pop int sub and and push push pop repnz dec jg pop adc loopne imul in incb arpl jle into xor nop add xor hlt arpl (bad) pop aaa adc adc and jg lret bnd jnp and dec add aad sbb and mov add xor dec xchg loope adc lock mov dec loop pop icebp outsb outsl or test xor sub mov sbb lret xchg add cltd dec push in test aaa cmc xor or int call pop movsl cmp cmp into pop dec sub add aam jnp pop sbb jg adc mov push les jno mov inc push pop cmpsb in loopne jmp and and or lahf (bad) aaa xchg cmp jns sub sub sub and cmpb outsl into test stos std cmp scas lahf inc cwtl stos push (bad) and pop out idiv add xchg int ljmp movsl jne jno (bad) fstps imul hlt insl mov xchg in and jno lock sbb jns adc test sub push sbb cmp mov add and push pop cwtl in (bad) stc es add or mov jp std ret push jge imul aam push mov mov cmp ret (bad) stos in push ja cmp hlt imul dec jne pop ret jnp (bad) inc fild push mov add div cmp jns push daa nop mov jae push pop and aad xlat sbb mov or stos pop mov pop sbb lods mov mov es sbb test inc ljmp jo in (bad) fcomi jns out into std adc push lahf (bad) dec dec ret dec inc in pop and ss jnp out sub xchg sbb lret jae jg iret dec je jmp lret cmpsl xacquire xor dec mov mov loopne sbb push cli ss out lcall mov jmp xor popf push mov jbe subb jmp or jge test sub bound into cld out fmull and pop movsb aas clc lods lods or inc rol in fdivs cmp dec inc int movsb ds jg fldenv ljmp aad data16 jne (bad) xor scas sbb cmp pushf pop lret movsl sti jg arpl outsl xlat dec lret ds cmp xchg stos mov sub or popa aad dec sub xor jl xchg sbb add inc jmp test loop add mov in fcmovu xor clc addr16 mov mov mov aad icebp loop push mov add pop out stos mov call test faddl fbstp dec cmp mov add fimull push xchg test add lods fwait out sahf push push mov adc fcoms sub rcl cmp push (bad) and add push jmp into stos jp push and xchg jns mov pusha loop std jmp pop aaa movsl xchg out packuswb xlat mov lea push lret push lret mov mov xchg shlb adc test sbb stc jg,pn sub pop mov add mov mov sbb mov jnp js fistp add and jecxz pop popf (bad) fwait js mov icebp mov lods push mov mov cwtl dec test push (bad) fidivrl push xor pop fnstsw mov outsb mov pop imul out or mov je ljmp (bad) mov mov adc stos popa push push mov les (bad) push or shl sbb (bad) adc and lret clc out lcall lods arpl and or mov sti addr16 in sbb or fstpt dec fistl and push push mov lcall scas and mov out out xchg shr sub inc cmpsb daa test jo mov jp xchg add sub insb test mov mov inc sti (bad) pop inc xchg ret nop clc sti cmp aam mov sahf aas pop in fcmovnu addl mull out fucomip ja push cs fimull adc inc sbb push or cld xchg inc sar (bad) lods mov ds fcompl clc inc push mov pop xlat jbe andl jecxz adc fildll js jo inc adc push cli xor mov nop (bad) mov pop mov jb cmp dec or outsl sahf fsts clc pop xchg fwait adc bound or int3 jbe sbb mov push jno add mov mov int imul lods pop sub subl lahf pop ss in fwait adc ja sub and faddl outsl out mov imul int mov cmp xor out outsb mov jp push xchg sbb pop gs push lret dec test mov loop push cli push repz cli mov int3 and popa mov add or xchg and rclb xor jmp rcrb push scas sub arpl loop add xchg rcrb daa jb,pn ret push push out adc shrb lds adc xchg sbb in mov inc cmp mov insl mov push (bad) jae pop xor lret pusha mov out xlat fsincos pop imul fstpt fwait jb push mov clc or mov sbb in stc aaa adc in sahf pusha scas fmulp or stos adc call push (bad) pop add mov or push stc test outsl pop pop adc (bad) mov nop call cli cwtl push in ficomp (bad) mov inc imul dec or ret xchg and adc inc popf ljmp lahf cmp push pop cmp and xor test push sbb xor mov mov mul ret es push dec popf pop lods mov mov sarl adc inc xchg dec sbb imul fiadd sbb js fdivl or jecxz mov ljmp push sbb inc dec add pusha cld fildll xchg jne and cmp outsl mov dec xchg fcoml int3 out leave js jne movl cmpsl jp xor and mov xor sti mov ret xchg dec add repz lods shr adc inc and ret and iret push push lds push lret dec (bad) cltd pop push aam (bad) repz push pusha cmp mov sarl sub dec jne gs (bad) dec xchg xchg xor gs jb xchg iret xchg xchg adc adc push pusha popa sbb rcll ljmp rcrb aas stos cmp or (bad) (bad) jp xchg ds or mov pop sbb clc sbbl enter xor adc sbb shl shr push mov cmp and lods cmp push rclb push popa jb push (bad) mov sbb cmp inc and jae push mov fld pop orl jp rcrb sbb pop arpl or inc std mov imul test or (bad) sti lods (bad) cli jno push int and fstps movsb add jecxz or xor jle xchg test ja or dec in repz lret pop adc mov mov jge push cmp jae inc xlat sti pop xchg xlat outsl pop imul mov push sti daa or mov fdivl push iret pop mov mov lret cmp mov and divl sarl jmp (bad) jbe nop lret mov mov imul cwtl mul cli mull lods adc (bad) xlat mov arpl js fnstcw mov and test cmp std test sbbb cwtl lret sub movsl fcoms incl mov leave xor mov outsl or loopne lret test sub test mov inc push and das sbb sarl jnp dec (bad) fadds sbb cltd push insl xchg outsb or jbe jmp test jnp dec sub ljmp pop shrb dec or sbb js imul repnz mov test adc sbb mov adcl xor dec rorb mov gs inc fmuls test rclb sar dec into push out sbb mov pop adc pmulhw pop movsb js xchg pop into push inc test or inc xor push sti inc dec push cmp aas mov stos fdecstp int js (bad) (bad) pop sbb rcll mov push lods dec inc adc mov add pop push push or in xchg mov jne cmp push pop (bad) rorb icebp and lock push push mov dec and je push xchg sbb js repnz and xchg jecxz imul rolb add jae lret jb (bad) mov sbb mov orl xor outsl push add (bad) rcll fnop cmc insl loop cltd (bad) daa lods jns sub or pop mov pop insl aas sbb and paddq gs or aad out nop mov inc in or jg das mov jmp aam cmpsb sub mov jmp out popf in scas lods add mov popf cli imul lret lahf dec inc outsl cmp jg popf sti std cltd ds mov pop std test cmp lds mov and aad lea leave cmp jo out or loope sub push outsl add inc popa cmpsl cmp jg stc lcall dec jne add pop jmp loop mov mov xchg ret mov movsl fwait jp cmp fisubl dec dec lea repz iret push (bad) sub test repnz pop mov inc hlt pop test pop sub dec iret mov mov insb cmp movsl mov out (bad) xchg inc stos movl leave pop ljmp mov mov pushl jmp adc jmp test adc and in mov lds cmp cmp dec add cmp adc ja mov dec fcompl sub sbbb push je dec dec adcl inc push sti out jmp add test xchg xchg jl mov inc mov (bad) cmpsb dec xchg sub fcompl call fisttpl daa test inc negb mov lods or inc xor sbb mov sub inc pop dec mov xor lcall inc fmul mov imul jmp adc loope sahf aad (bad) lea arpl xor pop enter js inc jae xchg jne sub pop (bad) jno fimull mov add add sbb inc arpl aam add mov jo mov pop sbb leave lcall fnsave and jl loopne test push pop sti loopne jnp imul dec fisubl mov inc cli fildl fstpl aad jbe (bad) mov dec (bad) stc es mov lock inc mov int3 lds mov movsl dec (bad) xchg cmp cmp fdivs cmp inc pop dec in mov mov fldenv jmp push popf pushf inc sub cmp push aas pop (bad) sbb (bad) mov mov js push gs push movsb cld scas popa dec aam push cmp sub subl ss arpl inc mov adc test hlt jo pop cmp push xor nop pop and add sub pop pop cmp mov lods dec test cltd divl inc xchg xor cltd pop out jg in sti enter and push and sub jecxz nop lcall push push in shlb dec test inc add xor lret leave leave or fsub pop lcall push movsl fstps andl lcall push sub and (bad) sbb sbbl sahf outsl xchg dec ficoml cmpb idivb mul dec pop rolb xor sahf mov jne daa (bad) hlt loop adc xor repnz daa or dec add add push mov push mov dec xchg add call popa les dec jmp jmp lea shr pop cmp xor add jg sahf mov lods les into xor stos jb fwait out pusha lret ss mov add cwtl dec cmp pop das les test in cld sub (bad) jno (bad) sbb stos mov sub cmp popf adc in rcl jecxz out das test iret mov xor les test addr16 sub mov inc scas cmp push sub cmc jae scas outsb ljmp and xchg xchg and sti clc mov xchg pop add cmp gs jmp je push out and hlt sbb sti test jne mov call mov insb es xchg push ret lahf stos aad scas cmp push pop push inc cli mov into outsb xor mov sbbl jg cmpsl push enter outsl adc rcl stc scas push mov xchg push clc fisubr les push and pop adc lea subb mov punpckhbw pop (bad) mov cmpsl xchg dec jae xchg in jns mov nop dec into adc jns jae gs jb daa icebp push jg push pop or fs das add jp mov out sub inc nop es leave inc xchg lock (bad) jo cli add fnstcw cmp fidivrl or data16 icebp lret fnstsw ret xchg bound fs dec xor ror mov mov cmp fcoml or xchg (bad) aas repz add aam call lcall or inc aad sub mov cmpsl cmp cs stc (bad) cld jmp jmp pusha and push es negl xchg jp inc push stos popa mov call mov leave mov jge xor jnp xor xchg xor sbb (bad) aaa sbb xchg out sbb inc lcall int or pop mov hlt push rcrl fldl sub addb insl cmp mov fiaddl push inc sub int push inc cmpsb (bad) (bad) enter clc and adc pop aam jg or enter adc ljmp mov out sbb or mov lret pxor and jbe jne xor and xor aad and lods hlt push or nop adc xor popa cmp das xchg in or inc mov adc and int3 pop mov loop fnstsw lret inc jle,pt cmpsb adc adc je mov sbb push add (bad) jno adcl call into fisub add sub cmc imul into inc movsl mov pop pop inc out sub mov jns fistpll in aaa hlt insl adc dec inc ljmp daa jecxz add pop jnp cmpsl push mov mov out ja ja cmp dec push stos sti jge mov and or cli sbb imull mov cmp addr16 inc mov push (bad) mov decl lods cli add mov push jo aad cli adc imul loope ljmp adc fcoml lret or xchg aas add cmpsl idiv cwtl imul sti outsb mov scas fiaddl iret mov nop jge jnp fimull popf mov rorl mov testl inc popf imul cmc pop xor fldt into aam and cmp nop movb add dec aam clc xor adc jo scas (bad) pop adc aad lret fcmovbe es mov sbb dec into out jp lock in push aas and sbbl and aas push sub jns lret cmpsb mov inc cmp shl lock dec jp cmpsl fimull test push pop out jnp sbb and imul mov fldt adc dec push shlb pop fsubrl addr16 add lods jb fcoms sub ss push and pop lods xor add iret push hlt movhps arpl mov jae ret adc xchg inc mov or xor in mov inc rol xchg ja dec dec pop test add cmp outsl or cmp push or das lock inc (bad) out cmpsl push mov stos xchg jp xchg adc lret popf scas mov pop push subb add sarl in inc not fisubr mov mov sub lcall test test xchg dec cli (bad) adc stos jl xchg xchg (bad) mov mov adc lahf or xor sbb sub mov sub dec sub pop lea stc push sub je in out mov mov call xlat push popl dec mov clc lahf xchg sbb call mov mov mov int3 negl mov and jno cmp push pmaxub imul int3 out fwait sbb sub pop fucom mov (bad) xchg loope fistl xchg cltd ds cmp mov pop out or pop push inc ds stos jno mov mov daa mov mov add (bad) jae jmp xorl or mov jmp iret xchg fdivrs mov fldl cld mov lcall mov push xchg pop and popf sahf data16 pop gs insb push insl pop jg int3 jecxz loop or xlat mov fxtract pop movsb xchg sub jne adc shr jg movsb insb xchg cwtl cmp in and jmp loopne and push push roll add cwtl sahf xor push sbb lret add xor mov jno repnz rclb sarl xchg gs add addl ss pop in dec outsl mov inc sbb mov (bad) xchg cwtl mov (bad) sub mov popf mov cli mov std jecxz popa add ja xorb sub sti mov aam scas or adc hlt push in add add jl int dec xor stos add in loop repz ss jp pop imul mov stos lods (bad) pop lock cltd push (bad) inc out mov jmp orb push push inc cmp les add pop stos ds into push lret int mov pop (bad) jb xchg jp (bad) rcl (bad) int inc mov jno push mov pop adc adc ret push sbb shrb dec mov add add xor fstpt or enter pusha stc inc fmuls sbb in (bad) pop aam lret out sub adc enter lret xchg pop (bad) divb jne nop inc sbb pusha jns or fs orl mov cli xor push inc sbb cwtl movsb sbb test inc rorb movsl adc test stc push inc jb add mov or cmpsl rol in inc call in push and jecxz mov into pop (bad) std stos aas xor or inc push std leave test ds movsb cmp mov pop in adcl addr16 mov lea fmuls adc (bad) ret fcompl push mov jne jns and jbe mov pusha pusha push jo (bad) inc int cmp ljmp loopne sub test add jg or aas pop sti daa mov or and mov cli ss insb and pop movl and xchg pushf and pop icebp dec data16 pushf xor push push mov pop jnp jge mov cmc cmp adc icebp jb dec and test lds ret insb enter mov cmp out clc das out leave fbld (bad) ds shrb aam xchg mov sbb shrl daa jp shl pop out sbb mov lea popf mov cmp push fwait dec ret mov cmp jbe adc je (bad) clc adc xor imul sbb pop iret repnz (bad) mov cli pop call xchg pop cmc inc inc movsl xor pcmpgtw out sbb mov cmp out outsb shrl cmc test push push lret fs cmp xor jne mov mov xchg aas lds xchg lds push movsl sbb push xor idivb adc fstl hlt add add jbe movsl outsb push push loop aad repnz test cli add push sub jnp jne mov jno mov repnz outsl fdivrs jmp (bad) mov or outsl inc mov rorb mov sbb dec inc sti sbb mov stos das sub cmp mov addl push (bad) cltd xor mov cmp sbb dec movb das inc ret fsubr fimul sbb sub fsub dec xchg jl outsl mov pop lock xchg clc xchg pop pop xor inc fsubs test icebp sub movsb jecxz loopne ret push out and fs mov push dec jge test fnstsw dec push sub jbe xchg and mov or mov ds les xchg stos fistp sbb sbb push lret dec lods jbe insb std stos inc and jno icebp out (bad) xor je mov add xor and xor int rorl lahf xor xchg arpl jl andl mov or pop mov cmp leave (bad) inc push xchg inc dec insl mov push and mov out mov xor (bad) mov cld sbb inc (bad) jle and dec (bad) cmp in and mov into clc into loopne pop lret mov test nop inc jbe lret fs (bad) cmpsb cli mov mov inc hlt mov adc push sbb jae out int mov mov outsb sahf (bad) in pop push mov mov push nop lock jecxz loope xchg and mov add pop inc cmpsl lods test xchg adc stc arpl mov lock adc add push das mov adc cmp xor xor repz inc jnp (bad) adc movsl sub jmp pop mov sarb push les add sub mov dec sub mov or mov test cmp enter sahf insb push xchg rol inc pop xlat and mov and in iret push ljmp push dec addr16 xlat cld sarb pop mov aad add ja loop pop je push push leave mov xor pushf jg or ss popa add sbbl jns aaa mov mov or (bad) out mov push inc xchg push (bad) sbb in out jecxz adc xchg es push jne bound add aaa (bad) jo jb imull push rcll mov imul jmp mov (bad) push stos or aam shrl out jg fcoml (bad) xor cmc mov in jp lahf push inc mov bt and repz dec insl cmpsl stc movsl mov inc cmp ss enter lcall pusha insl rclb cmp movsb jmp mov dec xchg das shrl mov jbe mov fidivrl cmp lods xor out outsb imul adc mov push addr16 vpsrlw insb das pop fstl jle into mov add sub jecxz push xor popf and push lcall out inc jns cld add jae inc mov xchg mov adc mov mov shll and xchg mov mov negl sbb mov (bad) xor outsb push add cmc cmpsl mov inc add enter xchg jbe mov add out ret loop inc lds sbb mov push int adcb dec stos jmp inc or (bad) stc pop data16 jbe add cld jbe add enter lock add mov or enter dec jmp pop mov or mov sbb pushf outsl ljmp shlb aad ljmp push addr16 xchg js popa iret int3 push xor mov insb pop adc (bad) aam mov test sub (bad) popa cli sub outsl ljmp aaa fmul xchg jg sub inc ret aas jns sub movsb mov and negb rolb jmp or inc dec mov es mov jl gs shl fucom mov iret das pop enter movsl or pusha mov (bad) xor push mov (bad) mov mov aad scas jmp flds xor xor sbb mov or mov mov and sahf xchg mov xchg popf call fisttp repz push leave xchg cmpsl sub and lods scas das sti inc cmpsl or mov pop sbb dec lcall push or jmp jg nop mov aad jg and dec mov mov leave jne incb jmp push jbe mov enter pop pusha sbb stos push sti xor or pop mov sbb addr16 (bad) jo add mov fisttp adc cmc and inc fsubrl lods out mov xor add shrl sub xor insl xor cmc mov xor or movsl cltd dec in mov pop fsubrl jg xor mov pop mov (bad) jmp scas std jge movb stos jmp inc (bad) push insl outsb xchg lds sbb loop mov mov cmp lods mov cwtl push adc test xchg test lcall repz sbb add aam aas hlt loope adc (bad) out xor sahf fs (bad) xor pop stc fwait das sbb gs test cmp outsb hlt pop test xor roll sbb (bad) add and push sahf enter or inc xchg inc lods mov insb outsb cmovae shll cmp sub mov dec ret sub (bad) idivb pop xor stos xor insb xor in jp fisttpll lock jbe add movsl inc sbb push stos test ja nop cmpsl call push idivl add or cmp sahf push inc sti push push lock sbb push fistl outsb bound inc add xchg xchg fcomps add jns sbb push push hlt xchg and loopne cmp movsb xchg mov cs es sub or shrb cli jnp (bad) jmp xchg gs push fdivs inc insb or sbb cs lcall cltd cmc ret (bad) sti push mov mov movsb test push daa and and jmp in mov aaa imul (bad) adc roll sub repnz sub ljmp jp jmp mov mov and pop ljmp test int sbb cmp and push or pop xchg mov sub or mov push adc dec test (bad) xor aaa push clc fwait loope (bad) inc mov frstor pop mov pop sahf loopne mov mov pusha ss scas mov add cmp mov std fdivs mov orl cmp and sub sub pop xchg lret push xlat les and lret mov and inc (bad) jbe jle movsl mov inc pop outsb fs leave cmp sysexit ret arpl stc inc daa and out lock das lods sbb push sbb and stos das rorl and lret stc gs (bad) (bad) hlt sarl imul ljmp (bad) hlt xchg jg lcall scas mov jp and aad sti out inc add jge imul push clc pop push xchg leave push leave dec or jmp jno push ret gs mov jnp imul cmp sub daa (bad) orb jo or sub and mov clc push aaa jno cld pop sbb dec mov and pop mov add jo jge les jg jb dec out jne lods stos jecxz dec insb loopne in lret pop xchg fildll sub jns cmp jg shrl cmc xor pop xor hlt push enter and push sub and inc push cmp ficom in mov jbe or push mov ds test xchg clc jns nop sub sbb test push push mov (bad) aam sbb test pop les movsl dec div loopne push cwtl or and pushf aaa ljmp pop ds test xor fmulp icebp sub push push gs jle das mov sub mov xchg inc leave xlat inc das or (bad) pop xchg clc icebp jg jb loop rcrl fdivrl jg ficompl repnz push test xchg rep jmp pop xchg leave in sbb push push push (bad) pusha and fldl gs test lods adc aas icebp ret xor ljmp test test lods enter mov mov movsb xchg scas adc xchg mov lret or mov xchg sbb jmp imul and jmp xchg xchg (bad) arpl cmpsl inc inc (bad) push popa cmp push inc push dec mov cmpsl ds arpl lea pop stos mov xor xchg jl fwait jl in push pop leave test ja mov imul adc in shrl mov inc mov xor pop dec mov or insb mov rcrb xchg fisubr divb (bad) leave les inc imul push ror or loop cltd movsl rol sbb xchg lods rolb rorb stc out add jno mov lcall insl loope stos pop rep clc cli xchg imul push mov fmull pop inc rolb lea (bad) fidivl mov fildll and lods xchg into and aas rorb push push js inc out sahf lock popa xchg fdivl inc fstps dec cmpsb out orl or imul and call jns in mov movsb mov push in cmp js insb repnz imul push lcall enter mov mov lcall sbb fwait in push mov dec jb adc aas (bad) and inc push mov sbb aaa cmpsl cmpsl lcall sbb cmp fidivrl aaa adc mov dec (bad) lock or push pop sub pop icebp icebp sti xor in mov fwait jae add mov jmp (bad) ss dec jbe add lods ljmp cmpl mov out jnp jmp or mov vpsadbw mov sub cs dec mov xor cmp xchg das mov inc push jns inc pop xor (bad) scas ret jns and decl pop into xor inc loope enter mov pop cwtl in xor jno sbb xor sub loope aad nop outsb add xchg shufps pop mov adc fbstp sbb sbb movsb inc adc pop sub and mov pop xchg sbb cmp lods in (bad) dec cli sub pop or rcrl rcr mov dec sti pop push xor inc add jge add (bad) and cmpsb adc xor cld sbb movsl add mov push mov aas clc cmp mov ss pop fsin mov push push push insb movsb adc mov mov popa pop push loopne lods dec call fisubl loop leave das xlat int jno inc xor jge subb in cld adc mov cmp lods xor push pop adc scas rolb inc or jg stc mov call in dec in (bad) ret or out psrld xor pop lock push in push push clc xor pop dec add cs xor movsb cwtl adc sub test cmpsb rcrb mov aaa mov xchg shrb dec js arpl loope movsb push fisttpll xchg inc sbb jecxz mov mov popf xlat stos jmp sbb xchg xor (bad) cmp push xor in into das (bad) ja add sub xchg jae lcall push pusha inc aad inc (bad) jae push lock mov cmp mov inc xor pop loop lcall dec inc pop dec mov push sbb jg jge jecxz xor out hlt adc imul addr16 inc mov les idivl jns push ja fildll xchg out imul add sti loope cmp adc sahf mov test push je (bad) cmp enter add sbb cmp inc int jbe mov push mov stos add adc adc adc jecxz (bad) sti xchg pop stos or repz add (bad) pop pop iret fmull arpl mov loopne sub idivb cmp jl sub mov das mov jno and xchg add in aam sti js jno dec popa js int adc aaa dec jmp (bad) xchg nop sub not sbb icebp lcall in aad pop xlat cmp jo ja or fucomip test out cwtl or (bad) adc mov ret add dec shrl je loopne jno push dec test pop cwtl movsb ljmp ja icebp cld (bad) testb les add push imul push and jb add dec (bad) frstor test cltd jbe nop or bound out cmp repnz aam push mov pusha mov cltd cmp fcoms les (bad) jb fwait add js jmp daa ss (bad) cli in or sbb test pop orl xlat inc dec cltd xor ficomp sbb cmpsb sub subl rcll popa pop pop inc ljmp jns adc hlt pop or aam dec xchg jle lcall mov outsl add cmc push dec or rcrl lock mov lahf and dec pop add fwait xor adc cwtl mov int3 js xor adc pusha cltd in lock inc ljmp cmp scas sub pop js fdivrp fiaddl pop add jno push xchg sbb ss out sub dec ret pop outsb push lods cmpsl stos jp (bad) xor push (bad) scas lea pop push ljmp dec mov cmpsl inc in mov adc fcoms mov int3 inc sbb jb inc test in (bad) icebp ret mov inc stos mov insl (bad) lods bound mov nop cli dec ss roll inc xchg and cmp cmp add stos and pop dec repz mov push and jecxz mov jge mov push int sub bound cmpsb mov scas lds add push aam out adc loop stos stos loop mov pop outsl stos push adc pusha and sti mov sub fstl sub idiv nop push inc insb dec stos xchg push xor push loopne in add xchg jle push xor cmp xor jb jo dec fimull mov inc sbb add xchg xchg hlt mov outsb jns rcrb cwtl shr dec stc pop lret flds mov fsubrp je call mov clc stc ss push xchg push or adcl jmp lahf leave sbbl popl xor add lods cmpsl add mov ret sub inc cmp out gs fcoms jae and lcall test jnp xor pop call or pop mov mov xchg xchg mov push (bad) popa stos mov xchg fidivl jmp mov sbb dec scas lret sbb xor fistl xchg or bound lret pop mov bound mov sarl mov sbb or push adc jo mov ljmp out mov push cli or lds test sahf fnsave xor stos xor xor ja jge cmpsb or pushf inc (bad) dec add in (bad) jecxz es xchg shrl dec (bad) out cmpsl or adc mov jmp arpl mov xchg mov fwait add push pusha mov aad imul mov jne lret jp ficomp cs pop fsubrs dec mov and sahf adc cmp or pop and stos inc jo movsl ss shrl movsb pop jl adc loopne mov rcrl movsl ljmp adc inc jmp cmc xor cltd sarb xor pop sbb lds shrl fxch xchg cwtl mov jl dec adc shrl push or sub imul push les decl pop stos mov mov pushf test cli fwait jmp lods sbb (bad) (bad) cli adc sub pop fdivrs sbb (bad) xchg int3 mov push xchg sub cmp call push (bad) mov inc xor dec lods repnz lods das xor push jbe mov test sub iret mov and pushf hlt fdivr cld jo or cld and add mov mov loope mov leave insl add mov stos inc pop insl sub lret add call test test loop loop outsb and stos cld pop ds aaa xor les repz xor call (bad) das adc mov jbe push bound push int imul cwtl cmpsb jb adc jo cmpsb (bad) push sub cltd xchg insb cmp inc pop cs lahf es (bad) pop xchg out lock push popf sbb inc jno rclb sub cli sbb sbb imul xor sbb pushf lret xchg popf les scas clc insl cmc pop jg mov lods das hlt sub fisubl (bad) cmp add mov push pop cmpsb (bad) jns xchg jecxz cmp jg xor sahf and and ljmp ficompl lret mov or fs fwait ja sub cmp push mov push mov pop sub dec les mov add jle aam or stos das sbb pop pop jbe insl inc mov push mov repz sub leave jno mov gs push insl xchg (bad) cmc movsb sub ja and push imul das js or rcll insl pop push das jg leave stc daa adc add mov or hlt and in cs pop sarl cmpsl sti push int xchg sub scas mov cmp rcr insb sub (bad) mov mov jnp xlat mov test push mov in cmp dec andb inc push test cld jb rolb insb leave (bad) jo jle cld cmp popf push cs cmp es outsl divl (bad) test xorb (bad) cmc adc and ret cld lea or repz clc daa pop xor mov add adc cmpsl jmp mov dec cmc cmp xchg popa fcoms xchg mov cwtl repz (bad) cs int3 pop pop inc hlt enter cld jb jb and cltd fs rclb ss lods fcmovnb xchg mov cmp fsubrs sbb mov sub mov arpl cmp mov dec ljmp movsl ficom cmpsb adc sub mov push scas xchg mov aad inc in pop iret push xor and push push out or jle dec outsl pop add (bad) sub stc push sarb adc je dec les jge jns stos (bad) mov mov pop jl mov sub dec in fisubr mov sbb fistl cmp pop and fdivrl add or and mov arpl mov adc fwait incb (bad) jle imul sbb and inc fldl jp jne dec sahf jp shlb outsb mov data16 jnp push (bad) or adc cmpsl jno icebp inc (bad) dec aad scas (bad) hlt pop sbb dec mov xchg in lcall out mov or and les mov mov xchg sub test out out fnsave mov dec add ljmp xchg jno cmp mov mov enter sbb xchg fstps jp pop jo arpl mov push inc int3 ret insl jnp orl xor aad xchg mov icebp sbb psadbw mov rclb or vminss iret mov dec mov addr16 stc lods jge add jno cmpsl cmp rcll popf push xchg pusha cmpsl std les sub add xor dec jnp insb mov pop mov inc (bad) (bad) dec pushf mov arpl (bad) cmp mov pop repz (bad) hlt dec cmp scas cmp js fbld xor pop and es dec adc jge mov ds in popl mov pop mov enter push pop xlat daa cmpsb jns lods bnd je,pn les or add sti jae pushf (bad) xor and xor ret push sbb cs and push xor andl dec out mov cld lods mov ljmp sarb fldt jbe jmp inc or jmp pop test (bad) xchg scas arpl imul (bad) fucomp addl fsts pop inc (bad) aad sahf aaa pop lcall xchg ss fldl cltd repnz pop call push inc add leave sbbl sub scas push lods pop (bad) jb inc xor jge adc lock xor sub lds into frstor in or sbb fcmovbe pop iret xchg or xchg hlt fs (bad) hlt (bad) jae sbb loope aas push test test je xchg dec cmc adc sbb pop stc insb cmp push lds movsb clc push adc and fmul iretw xchg push (bad) int mov xchg xor xchg int or sub cmp mov mov insb cwtl leave (bad) or (bad) mov pop ss sub adc cltd movsl push push std or jne push cwtl stos mov and pusha mov mov fwait and adc ret mov pop (bad) (bad) jne movsl movsl mov outsb shlb xor mov sbb or sub push xchg push icebp dec xchg bound fisubrl les rcrl jmp mov mov mov inc xchg xchg sub and add pop sub xor cmpsb mov dec insl push aaa mov stos ss mov pop scas lcall xor mov aam or cli pop pushf cltd inc repz std repz xor sbbb mov and mov mov cmp push pop jno xchg shl pop jne mov sub icebp mulps mov std out (bad) cmp add mov rol push dec mov and ret add jg dec cwtl stc imul insb (bad) jle out out icebp aaa cmp xchg cmpsl jg push xchg or cmpl loop ljmp push ret leave mov mov cmpsb and inc (bad) das stos jne sbb sbb xlat mov in mov lods xchg out inc arpl stc push adc (bad) jo fsubrs mov lret adcl (bad) lcall cmpsb addr16 es sarb dec sub mov adc add adc inc mov xchg ja in inc xchg hlt ret fsubl push bound pop aaa or rcrb jg cmpsl add inc ss fldt call (bad) fs mov int add insl addr16 jno inc cli mov cmp pop sub add int jb jg mov sbb int and das xor psubw dec bound add mov mov mov out mov jns mov call or lahf call xlat hlt xchg push iret mov inc mov cmc or adc mov lahf loop add mov pop inc inc out in ja inc add push fcomi sub js in xor sbb xchg push mov aas xchg mov add add jo pop mov push into mov mov mov adc stos dec sub call popf adc test scas mov movsl loopne cmpsl fnstcw lret xchg setb add divl cld aas fcomi lock hlt inc out or (bad) mov mov daa in stc cmc enter mov mov pop fwait mov push ja and sub pop mov xchg mov adc adc addb sti dec xchg dec mov int3 (bad) jecxz cmp push fnsave jns pop outsl dec int3 ss mov pop sbb and stos xchg lods mov sbb call stos test push mov mov pop fst push jae jbe dec sbb inc lds push lret daa inc jl aaa cld (bad) xchg mov lcall stc xchg repnz cld pop dec ja mov out mov rcrl mov loope mov mov mov jp subl fdivr movsb add iret cmovnp sbb out inc lret sub cmp jb orl clc leave repnz daa (bad) ss push rorl fidiv adc inc xorl repnz and mov jl movb lret pop outsl loop in fsin hlt xlat or sti lods in inc sbbl push js mov arpl push sub into cmp mov sbb daa or rcrl cmp dec es fstpl call pop jmp lret push jmp cld adc fisttpll jge aaa out mov jo int3 pop add aas js mov aaa ret sub and xorl mov lret xor out aam test repz mov mov and sbb add sar adc (bad) jno xor xchg aaa and dec scas dec pop std cmp cwtl mov mov xorl movsb mov push cmpsb es arpl js lock mov imul xchg fs iret scas loop out negb dec stos pop xor cld lcall sub cmpsb jge add lcall mov cs sbb sub cmpsl sti add mov scas bound xlat fcmovnbe jb jns (bad) jl mov cmc xor xor js adc cmp loop in in (bad) ficompl idivl icebp shrb imul (bad) clc insl arpl bnd dec call jmp test test (bad) lahf movsl sub lahf push cs pop xchg outsb xor (bad) ffreep add dec mov xchg inc mov adc pop repz jl xlat loop lods imul dec jp ret inc sub pusha cmp leave stc daa ljmp or aaa fdivs or mov in pop jmp dec mov insb (bad) lahf aad jp inc hlt jo icebp push add push adc scas mov inc jp push pop inc pop add ja add insb and (bad) pop js jo push mov sub adc or ret ds fcoms mov xchg add dec in mov outsl dec outsl mov (bad) shlb out sbb imul inc jp cmp jo iret je ror xorl pusha push and mov test test data16 mov jae sbb iret inc outsb mov stos outsb stos inc cmc inc and inc xor aaa inc jns cmpsb rcl insb adcb pusha test pusha cmp adc xchg loope or mov enter mov (bad) icebp add adc popf stos ss fistl aad notb sub pop add lcall cmpsb rclb cs loope mov and jge icebp ret and jecxz add mov popa lods mov stc bound jecxz xor pusha in notl fcoms insl inc adc adc sbb fwait sbb mov push mov imul pop push stos sub cmp xchg sbb sbb loopne repnz out mov mov lock inc pop and add outsl (bad) xor sbb xchg and push cmp imul push out pop cmp mov je in hlt push xor cmp or insl mov jnp iret push cmpsl sbb (bad) js mov pushf fidiv ret call iret cmp and or jo in ljmp in pop ljmp adc iret xchg sub inc cmp xchg loope,pt scas test (bad) and bound ss enter add push or out jo mov xchg movsl xor jp adc or pop aad outsl aas push xchg and mov dec cwtl (bad) loopne lret xor xchg nop cli in gs xor call insb push (bad) dec push (bad) shlb andl movsb or sub test icebp imul mov or ja xor lds loope inc sbb enter mov scas dec or icebp cmpsl mov xchg (bad) scas aad jbe adc mov scas jmp sub xchg lret mov mov rclb loopne das (bad) imul (bad) jno and mov inc pop dec std mov sar (bad) mov add imul dec insb out clc std mov add ljmp or icebp gs xchg add mov js xchg sub jg jnp jp daa gs jge stos rcll orl pop (bad) cli scas pushf int3 cmpsb js adc xchg enter outsl es push push mov and xor push nop push jne mov sbb push sti cmp jecxz push dec push or xchg aas test ljmp mov mov loopne jne sub popa cmc add dec adc out leave push adc inc xor loopne ds push sub sbb nop jp hlt jb and ds repz mov out xor loope push leave lock sahf popa inc or mov (bad) mov mov pusha cmc fimul pop mov mov mov (bad) xor pop pushf xlat sbb cmpsl add sbb add and rol push pop stos repnz inc mov pusha adc cmpsl sbb stc repnz test jmp jl dec xchg inc mov jae fld movsb mov lcall mov sub adc cmpsb mov sub add iret jecxz adc jp xor scas movsb mov sbb clc mov std dec and fistp adc scas ljmp xchg lea jecxz rcll cwtl adc ret rep fidiv xchg mov sarl pusha rolb xchg jmp imul icebp int3 push and mov in or insl or das pushf adc adc add ljmp push lret or jmp popa add add call sub jbe outsl out sub in ss fldcw xlat cmpsl xchg daa dec cmp inc mov xchg cmp outsb jnp mul das xchg sub xor jo adc or (bad) rep adc std jecxz lods sysexit and (bad) push push cld sbb pop inc mov dec mov fldenv (bad) mov test ljmp insl (bad) fs fwait jo jge in lods cli shl adc xor mov push pop mov int3 pop std (bad) mov shll inc test fimul sbb xchg negb fwait jae call rorl xor outsb psubsw sti pop (bad) mov (bad) and xor sbbb scas loopne jae xor mov int3 inc sbb inc aam aad inc mov fwait lret (bad) ljmp in stc pop outsb pop jle push lods xlat cmpsb iret dec jmp pop xor mov mov test inc jecxz mov fwait cmp dec cs pop fistpl imull mov and and dec pop shrb cmp inc ja in clc push arpl push orb xor stos jb loop cmp fisub mov xchg leave and pop mov in iret lcall jp (bad) adc ficompl sub fild pushfw mov enter enter mov sbb fbstp subb leave push jge mov or inc imul jmp cmc movsb mov mov add repz daa outsl loop xchg sbbb dec push or dec arpl sti cs xlat push xor cmp or inc lahf or ss lcall (bad) (bad) cmp dec sub (bad) out fisubr nop cmpsl insl gs je fnstenv inc mov imul outsb das ja xor and adc leave and or fdivrl enter mov pop call stc test adc or and int3 jae (bad) dec or outsb jo loopne ja fist fisttpl cmp pushf ret and jno cmp xchg xor adc ret pop add ret in jno dec ret or add js cwtl jno push xchg sbb daa add clc jbe int in push repz adc and mov sub stos mov push xchg cmc and mov lock adc cltd push fwait cld pop inc lock lock mov pusha add push inc mov fs xor jge je inc test imul inc imul sub push or push sbb jl stos sub subb addr16 adc lcall fwait add push mov test inc sub daa pop sub movsl in shrb mov dec je and (bad) mov mov mov add mov mov (bad) loop push jle push outsl cmp mov aad das adc xor or lods mov shrb shrb and sbb push mov jns movsb stos xor sub jbe mov push bound add js roll mov lods cmp dec iret imul stos scas imul out push dec add addr16 push jns (bad) xchg cltd shrl idivb jbe nop or pop dec or push cld imul in pop adc or imul sub loope sbb mov or inc (bad) push cmpsl xchg es roll mov or sub mov or ja (bad) jg (bad) rorb xchg xor dec lods cmp andl mov stos mov sub test test pop mov push cli xor cwtl sbb inc cmp push js,pt (bad) fadds nop aaa pop aad cmp fwait adc (bad) das das imul pushf sarl add mov fsubr ret push pop movsb movsb in mov (bad) xchg jnp sbb cmc aas xchg push into pop inc pop push ss mov push jecxz shr or loopne mov mov mov lods scas std add xchg out ljmp xor cli imul cli add aam mov cwtl jno sahf jae or fidivr sbb lds ljmp loope pop in mov sub add sub (bad) sahf aaa dec fs mov test mov adc shll cmp or fcmovb or jnp fimul pop fild jb push cmp mov push lret cmp sub lock into lahf pop cmpsl cmp add gs test je push jmp sahf pop pop out adc mov movsb fisttpll call inc lcall xchg cmp push movsl dec push cmp cmc fdivl daa pop scas mov out ljmp mov les ret insb lods adc in push xor sub stos push leave es push dec and test cwtl fdivr xchg adc js jge sub or cmp mov pop aad cmp hlt xchg inc loope stc or mov dec push out sbb popa mov cltd sbb sbb push in (bad) movb je jmp xchg xchg adc lret clc xor int3 leave lock inc sbb clc int3 push lahf mov dec ljmp jo mov (bad) push push std jl add mov cmpl cli into sub or aam or stos xchg mov pushf andl aam jbe xchg out mov je mov mov test ds stos in xchg ficomp imul notb cmp js popa jnp mov pop imul mov mov fcoms hlt mov js fsubrs sarl add hlt mov int3 jg ss cli fisttpll addr16 push push mov xchg repz cmpb pop sarb insb push mov sub outsl or inc xor (bad) mov xchg mov psllq xchg stos imul mov jecxz dec loope mov in gs pusha cmp mov pop sub add cmp xlat sub sbb push pop int3 push mov xlat cmpb outsb inc (bad) mov jmp mov push (bad) outsb sub (bad) jno dec xor test addr16 sti inc test loope pop insl stc enter pop inc and jne mov xchg in cmp clc sub jae mov (bad) lret push mov xor iret arpl mov imul dec dec mov clc fsts push out ret cmp jb sub pop inc cmp dec scas push lret scas test xchg jge push push dec sub jge or fldcw sbb dec iret test hlt sbb dec (bad) inc xchg sub add xchg icebp (bad) fs mov sahf fsubr iret movsl mov and cmpsb faddl jmp xchg aaa pop js aas xor sub vrcpps sbb aad popa ljmp call push arpl push mov xor push sbb jp imul lcall push repnz mov push enter push test movsb scas je lods or leave mov xor jae cmp lea lret dec sbb fldl xchg es std fsubrs ljmp enter and push jge fcoml into je int3 in lds cmp adc in push lods loop cmp es and ja in xor jns jb pop xchg pop jbe mov hlt pop push lcall les inc imull sbb fsubrl push imul xchg fnstsw in iret lods xchg dec jae mov bound inc adc xchg lret sub mov iret (bad) xlat inc movsl jae push push and inc mov add ret push out xchg xchg int jnp test cmp sbb and (bad) aas and mov imul lahf adc sahf lcall cmp sbb push mov mov lods cld dec (bad) xchg pop mov or pop mov push pushf xor mov adc and in jne sub push push scas bound xchg fist ja pop mov mov mov aaa (bad) subb sub daa dec (bad) (bad) mov aas pop push lock sbb mov mov hlt iret cltd test inc xlat add iret xchg and dec pop jge movsb (bad) aad dec jbe in jns dec jg and scas sbb xor cs std sarb jns and mov push jp mov pop fsubs movsb cmp neg add sbb sbb test add in xchg leave fwait popa sahf ret or addr16 jge,pn sub stc jb fildl dec dec dec (bad) cmp out lcall adc (bad) xchg dec jmp ret cs lods aaa pop iret inc lahf jo sbb popa out xor mov mov scas incl fldenv into repz jl push leave sbb daa cmp popf jo imulb cmp jo cmp dec xchg out xor xor jge mov rorb mov xchg sub adc in lahf xchg pminsw jnp lret in cmp out mov mov xchg adc rcrl aaa stc xlat xor sub add xchg push repz ret outsb jl (bad) lcall add cmpsb sbb lcall call iret push jl repz push repnz dec arpl lret dec inc jecxz jl xor inc fiadd adc sbb lret ret jb,pt sbb mov push mov test cmp adc popf movsb test data16 and pop bound inc out xchg faddl aam dec ret adc popf dec movsl pop ret icebp and arpl add mov mov pusha dec pop aad xchg jge push fcmovnbe add dec cmp enter xor enter in pop xchg mov mov icebp cmp cmp ljmp inc stos xor lret xchg jbe mov inc and inc mov dec push xchg mov mov jne sbb lret mov mov push jns int3 push addb xchg mov and (bad) or xchg or stos hlt cmp (bad) adc psrlq insl xchg add or sub mov sbb mov mov add scas jge pop lahf cs cltd popf or ja ljmp mov push push in or inc jge data16 push fnstsw (bad) test cmc pop stos sub adc or (bad) jb aam sub rcll insl inc roll pop pop jbe aaa xor and or int test mov scas jnp (bad) jnp lods sti xchg loopne mov xchg add lea cmp fstps push fsubs jbe inc aad and xor (bad) fs leave push mov mov jle loop test mov and sub shll mov scas les pusha test fstpt call cmpsb cmp pop hlt test or xor dec xor ja xor les test push pop jmp int ret inc divl push add pop add xor leave pusha es cmp ss insb adc mov mov xchg rcrl cli lea mov fwait das stos icebp call inc adc sarl xchg pop xor loopne pop push sub xchg sub and or mov (bad) and dec and inc inc (bad) stc xchg bound out sbb push notb fwait push push sub bound dec sbb bswap into sbbb push push repz adc jmp loopne push out loopne xchg test loop cmp aaa inc cmp push inc inc sub mov imul or scas test sbbl inc imul push pop add in mov mov cmc and mov xor push or xchg (bad) imul dec and xor test jbe daa add sub iret ss test aaa xor and dec test cmp cmp xor (bad) jns xchg push fsubrs stc stos xchg out into jle add gs or and mov mov xchg mov int les in sbb mov xor movsbl sti mov jno add push jnp or mov pop pop (bad) inc push dec in or push aad sbb push jno mov in fstpl fisub cs in movsl insb inc repnz cltd in xchg sub inc or sub jb cmp lods cmpsl mov jne aad in fcomps repz push add clc cmp ds into and addr16 push jle (bad) fild mov shrb inc int arpl jns scas sbb xchg pop mov jne sbb js jl test adc xchg fwait push sbb xchg jno bound push push add cmp push fstp out and aaa or lea movsl repnz push js sub sbb (bad) mov outsb push adc (bad) in icebp jp mov mov add push sub or lahf call or push popa xlat fsts lcall test sub pop xchg cmp roll and cld inc mov pop mov add xor data16 (bad) test push repz in nopl insb or mov push adc outsl push imul pop inc adc fstpt pop je mov jae xor jp lock sub (bad) into xor dec jle aaa into popf and mov shl clc pop sar xchg lahf int3 pop aad jecxz sti out cmpsl xchg aad addr16 shll mov scas popf ror sbb jbe (bad) (bad) imulb xor or lcall nop inc outsl pop out repnz clc loop into xor stos dec fnstcw pop mov fdivl int adc adc mov mov sti or daa stc xor sbb adc loope pop mov inc or ljmp sub (bad) or mov adc fidivl dec shlb mov lret loope sahf push ss scas or xchg fadds dec shrb cld insb and gs (bad) or xchg and jp scas mov inc xchg lret pop ljmp mov adc cmp mov and sub pushf lahf movsb dec sbb dec dec sbb cmpsb cmc xchg outsb imul mov lcall (bad) add push dec sub icebp and (bad) cmp jbe xor adc inc fsubrp movsl push test sub xchg adc sub leave jmp in jns adc xor jb pop ja xchg out test int loop mov in push es xor jecxz dec push fistpll and in mov and enter repnz fwait outsl bound fwait dec out mov cltd xor jmp loope sbb mov test xchg (bad) in mov imul idivl lret out fistpl mov pop scas outsl int3 in mov lods xor push (bad) xchg pop fistp lcall lahf sub icebp sbb add jne sbb pop sbb dec stos mov or pusha jae jp push test mov adcb push (bad) mov lahf divl popa addr16 lahf fwait push movsb lock lcall ficoml push xlat push (bad) in mov aaa mov cltd sub hlt fisubl fwait div xchg xor jns mov mov mov ror scas shll xor loope and push inc mov push cmc cltd mov es mov mov sub adc jnp mov fmull fucom inc fcoms jg iret push pop add push add test cmpsb bound pop mov repz jge add ret inc scas cwtl lahf adc insb aam stc or dec and jb jp sahf jmp or icebp ljmp sahf and int push pop add fild les es xchg (bad) mov or aas push add cmp xor cld pop dec pushf in pop add dec dec outsb and pminub xor sarb and mov shrl push insl call xor cld stc pushf js (bad) pop ret xchg jo xorb sti lret movsl bound repz outsb xor cmp out repnz call lsl cmc mov xchg rorl sbb mov jns pop sub pushw sbb call loop mov dec pop lds add icebp mov jl jbe sub data16 xor pop add mov mov xchg pop cmp sub jo outsl or shl lock cmp pop adc shlb (bad) pop and or loopne xor aam cmp jle adc les test push mov mov out jl cs add lods icebp andl sbb jmp mul movsb ss arpl mov insb mov xchg mov inc push inc jg sub sarb adc gs lock ljmp bt inc cmp dec ret fwait pop push ffree jo mov out cli out lea inc test lods call xor ja inc bnd pop sub add std mov sti stc or add lods (bad) nop jg or dec outsl mov (bad) lret js or out pop sbb inc mov cmpsb cltd add xchg dec sbb out push xor fucomi sahf pop lcall out jl out les jmp jge mov push xchg outsb jl add fnsave test sub sub ret aaa sbb cmp mov int3 or pop dec mov in cmp stos call scas cld pop bound jae pop inc xchg out dec push adc mov dec fwait rorb dec sahf imul aam aas pop enter dec dec add xchg ret stc in inc jg or xchg ret dec pop xor lahf pop jl cld iret sub inc sub je pop cwtl dec xchg inc jb push insl mov mov repz (bad) (bad) jo call pusha in in xchg adc nop jno and add inc cmpxchg mov mov popa sbb or adc sarb sbb inc jle mov ja rclb and mov out or jb xchg and loope add call fs mov jmp (bad) dec ljmp popa cmp jo xchg pusha jns or call cmp repnz aas iret jg pusha or push lret insl nop cmp loop cld orl icebp out mov fstl roll pop insb jbe into clc in pusha xor fadds call shlb push xor mov mov ljmp adc push xor mov pop mov xorb jge sbb pop pop lock jno xchg ljmp cmpsb inc (bad) jbe inc xor fwait lods cmp pop cmp movsl mov inc cwtl push push cmp test iret lock pop out xor mov push daa add cld xchg mov lea repnz fdivr pop sbb xchg in mov aas mov arpl (bad) and pushf lea adc ret push cmp mov mov into repz xchg inc pop into sbb add jp push jae popf dec dec sbbl pop inc imulb fld1 xor and adc (bad) and push in xchg cmp or push mov and aam inc mov xchg ds dec cwtl xlat adc push cmp es and imul inc or cmp decl xor jmp dec push xor sbb ror add mov or dec lods or jecxz mov popf dec inc outsl jg (bad) or jg and (bad) sub pop sbb pusha mov xor lods in movsl stc cmp cmp mov push cwtl movsl inc cmp sbb rcrb cmc adc rcl std jmp iret cmp mov rol fisubr or jecxz mov pop aad push jmp push jae rcrb sbb pop rcll jne (bad) mov xchg lods jae cmp cltd enter pop inc pushf sbb aaa std test je cmpl inc aad lea jle sahf jge,pn mov cmp and or (bad) pop lds xchg mov les mov sub sub push mov xorl in add dec sbb jg pop iret das das xchg arpl pop fsubrs fwait adc lahf sbb dec std cltd movsb jmp repnz inc sti arpl and mov xchg in sub or les movsb xchg in scas push cmp sarl jge adc movsb mov xchg xchg mov jb fsub fstl test mov dec sbb xor xor mov dec mov ds mov fisttpl jl lret sbb jmp ljmp cld sbb jle push xchg ljmp mov out sti jbe dec or jne xlat cltd jmp dec xchg jp inc mov sub inc ret sbb push inc cltd repz ja (bad) dec js cli cmc hlt out push jae cwtl lret sub in jecxz pop pop push subl push (bad) xchg out pop je add pop xchg push nop adc push in pop xchg loop aam add xlat fyl2xp1 dec out sub inc jns movsl shr sbb adc rcll ja mov insb lods mov cmp xor mov jnp or xchg gs aaa adc jl adc mov (bad) outsb fidivrl fdivrl sarb lret dec in repnz out push scas mov mov sti ss sbb add add js add xchg dec int3 cltd cmp fwait pop lret sub push sbb xor dec sbb insb pusha mov popa in mov or enter ret xor pop and pop cs pop xchg xlat es mov popf cmp and icebp jne sub xor fsts ljmp push cmp cmp stos mov push jb das andb pop imul bound mov jle decb inc pop insb (bad) outsl push gs jmp xlat sbb imul and or inc ret xchg cmp cmp cltd pop loope outsl (bad) mov stos js std cmpsl push repz cmc popa outsb lods int jecxz lock leave outsb arpl or imul insl sbb (bad) mov and imul notl push notl add fadds cwtl aad lods fist loopne mov dec mov sub jge sbbl lea cmpsl push push dec idivl lahf sbb dec xor push adc dec cs iret pop test out add ljmp and cmp inc aaa aas std xchg fstpl imul jp inc lods push pop pushf in cwtl lea xor dec xorl mov sub bswap insl pushf pop cmp sub je dec lods daa pop scas pop cltd and mov dec jmp dec cmp dec fcomps pop sub ljmp cmp mov lahf in or xor imul sti mov faddl stc outsb jecxz movl or jb nop les jle out dec jecxz pop (bad) mov arpl stos in inc push fadd ljmp add push imul fmul stc movsl cmp jbe fsub pop or enter sub sub inc mov incb scas sub pop xor bnd xor cmpsl jmp mov lods push popf mov enter dec push pop movl pop adc scas mov xchg xchg pop xor dec jecxz ds rorl leave jo incb mov jno mov dec inc xorb popa fidivrl cld (bad) fbstp dec leave imul pop lret fstpl enter and std fistl (bad) and lret mov xor adc pop fucomp sti mov pop loop jmp js cmp mov cli mov mov and aaa bound add push lea dec sbb or xlat xchg cmp fdivp movsl idivb insl inc mov enter fimul cmp jmp cmp nop push mov outsb les rcr aas pop pop testb xlat enter jecxz push (bad) inc pop add popa inc xor sbb fisubr mov pop inc cmp jecxz xlat test mov mov cltd aam adc lea (bad) push xchg mov adcb test mov (bad) push adc scas dec push push insl loope,pn sahf lods outsl xchg lea lahf movsl enter in jno cli das mov mov pop enter sub cltd mov jl bts pop sub dec rcl pop xor xor scas push pop push popa fst xchg aad repz sub hlt pop mov es cmc int inc movsb lock mov push fwait cmp sub pop mov insl imul pop sub adc xchg in dec fcomps sub or pop mov fcompl fisubr xchg (bad) es rclb or sub fisubrl fiaddl jge adc fdivrl mov xor std repnz xor ret pop jns enter aam fidiv mov and push mov fldpi jecxz mov add push xchg jae sub and add data16 aad in test outsl dec hlt rcrb sub insl pop and stc ficom (bad) loopne push das sbb lret pop jns cmp ja add lea jge jmp stos movsb shl aaa sbb aad outsb and (bad) out bound sbb gs sbb pop fcmovnb pop (bad) cld out push hlt push mov mov mov adc int3 pop pop rcrl dec (bad) or cmp data16 cmpsb adc pop in ja pusha pop mov std leave cmp out mov pop scas adc mov dec or sub outsb jl andb xor cmc cmpsl xchg lods test ds shrl push xorb jns inc jmp sbb push sarl stc lret aas push in jmp or es repz pop fstpl xchg je jl xchg or test les xor inc adc loopne loop lock mov aad pop rorl ds icebp cwtl fsubl lahf add popa adc rorb push pusha xor and ret mov jo test sub mov mov mov icebp arpl push loop mov in mov mov sbb mov pop fisttpll mov and lea in ss lods sbb xchg mov fmull (bad) push inc lahf mov mov add lods and outsb movsb lock lods ret mov rcl ret mov sbb mov push or mov leave push stos std inc pop adc lock jae sbb jmp and addb iret dec cmc mov lock mov lds mov cld jmp mov call popa dec xchg aad adc push (bad) iret pop in mov push push push imul bswap lods push data16 stc into scas cmp (bad) loop and cld loop jns in clc jmp mov sub jl cs push push xor jg (bad) (bad) sub jp push jb mov test pop xchg iret add adc dec dec flds insl icebp cmp xor adc inc push mov subb daa sub xchg push sarl and test ret fildll sub inc jns adc loop jg jp int3 xchg add xor fisubr nop test or cli mov jno aaa pop (bad) xchg rcrb mov pop ret mov push (bad) (bad) sbb inc jecxz mov lcall inc cld cmp jns xchg add dec pop cmc jne je lea cmp cmp fnstcw jle pushl lea lds inc adc sub out inc sbb pop add rcll test shll ja test lock mov mov xor rclb pop jecxz mov imul daa mov scas or je push insb push pop mov xor mov cmp js mov fcomip insl xchg adc mov inc mov sbb sti or nop push scas xchg (bad) xor into jg loop adc aaa xchg sbb xor sbb fldt je mov (bad) mov add scas test xchg pop pop dec out lea dec cmpsb fimull int3 sub cmpsl fmull and push cld mov addl pop fs loop add jmp int3 icebp jo and jl jbe fcoml xor or subl jns test sub mov jmp mov adc cltd jnp sbb sbb inc lcall sbb push cmpsl test in scas adc mov push out cmp das xor push dec pop (bad) call lret jg add dec cmpsl sbb or pop inc mov pop xchg inc pop sbb ficomp fcomps jne insb mov addl loop outsb add lahf gs jmp cltd cmp and push fcompl imul aad mov sub jae popa addr16 pop mov jae pop xlat or adc je out dec sarl jo ret sbb cltd pop xlat addr16 jecxz pushf lret imul add fwait outsl sahf push mov push in test cld pop int3 mov mov lock js ret xchg pop inc pusha fiadd ffreep sub dec pop cmp hlt orl jo mov inc sub pop mov data16 inc cmp dec icebp xorl adc adc push icebp outsl test inc cmp push dec mov in sbb sbb lea rcrl repz add sbb jg mov mov out pop xorb jge pop les xor push inc sub dec movb ja nop jp aad or mov loop mov add inc push pop cli fsubrp dec sbb nop cmp fildl popf sub push xchg sub dec xlat sbb icebp mov into adc ret push faddl cmp stc int sbb push bound icebp inc push add inc fs push push mov inc addr16 mov (bad) in rcll cmp call clc ljmp jmp nop out cmp imul cli jg,pt es push mov pop add arpl iret leave cltd xchg and pop arpl aad inc cmp mov fsubs fcomps push push jne je fs and and or sub sub cltd out inc sbb pop lds sub sub frstor in add lret inc stos dec dec test repz xor addr16 xor xor sarb inc int xor jns rorb rcrb out test fldt mov xchg rolb (bad) ja sbb mov xchg cltd cmp dec xor cmp pop mov addr16 sub mov sti adc call je xor aam cmc and pop inc int3 add push loopne pop pusha push pop xor clc dec mov out (bad) bound mov loop fsub mov sar jg cmpsb rorb pop lret mov push xor mov scas jmp (bad) rclb push jno mov data16 cmpsb mov pop jmp iret in pop xchg mov insb pop rorl ja cmp push xchg lds scas adc push mov sub push pop xor ljmp (bad) mov xor pop sti std ret icebp cmpsl mov inc ss rcrl in mov lock movsl je psubusb cltd add test lret pop xor jle (bad) cltd (bad) xor je pop sub sub es in jno and mov fdivrs sbb sub repnz pop ja data16 stos inc arpl jecxz sub test cmp xor loop adc aam js dec pop lea movsl ret mov dec mov inc lods cmpsl add sub xchg fimul in fdiv movsb sbb push gs cld mov enter out xor jge fcmovne cs cs (bad) out lds mov and mov inc push cmp popf sbb mov mov jg fimull stos (bad) mov imul xor inc bound cld and movsb nop cltd cmpsb xor fcmove repz aam (bad) xor jae out insb arpl or jne sbb data16 cmpsl mov (bad) jge inc add mov movsl clc lcall shll pop mov mov jns push nop and aas pop xchg stc pcmpeqb xchg jecxz push mov sub (bad) cmp movsb xor sti add sbb jb ret push mov sub mov inc mul les push call loop inc icebp call xor pop ficoml xchg pop lock jge ret push and mov jmp test add jo add test xchg hlt icebp aas gs jo dec cmp (bad) add adc mov add in jmp (bad) fidivl xchg stos mov es outsb punpckhdq mov sub and mov inc (bad) push bound shrb xchg fnstenv test int shrb or sbb (bad) or jno or mov lock mov push mov cmp movsb int3 pop pushf (bad) leave leave mov ret je add out sbb jmp push or mov and jmp rorb mov pop es stos xchg push addr16 fucomi inc mov mov bound add inc and pop das stos ds pop mov repnz inc popa add je cmp push aam adc ja in int outsb mov popa test push inc jecxz push pop cmc push xchg push cwtl fcompl dec mov adc and mov add ja jecxz xchg or cltd in xor cli inc jnp sti jecxz cmp adc cmp adc sub stos out mov pushf imull push call pop pop gs cltd lahf adc out inc rclb outsb inc jmp movsl aaa movsb xchg sbb mov xchg xchg mov cld pushf int3 hlt repnz pop loop inc rcll mov push sahf pop (bad) das push push mov mov pop mov xchg fidiv lahf push js push aas cmpsb lret fwait (bad) jae icebp es popa (bad) ds push inc add stc lods mov adc arpl push test cmpsl sbb pusha (bad) mov out cltd cmp push xchg pop fninit roll push push aam sub push loope mov mov out imul rorl sbb or out stc pop (bad) (bad) pushf fwait xchg addl xchg push imul in mov push lds stos jno sub dec mov mov (bad) fildl mov incl loopne and adc lock pop fisubr pop cmp das test cld mov pop adc jecxz lods inc addr16 add push adc inc das into dec (bad) mov out js pop mov jb out push inc mov xor or adc inc or mov push imul call mov xor adc pop ret psllq cmp jae cmpsb xchg shr popa and mov sub ja incl pop lds push mov mov movsl jle outsl sub cmp flds or mov push cmp in fs pushl lahf jmp mov mov pop fisttpl add jg gs dec dec dec adc sbb mov dec stc int test xor mov sub lods fildll je inc mov popa xor inc insb movsb dec xor sti popa clc (bad) les repnz int hlt loope lods (bad) sti rcrb ja push or (bad) and divl testb push lods xor add test pop push cmp ja mov or fmull fucomi das lahf push xor mov sub push jnp xchg sahf pop pop sub mov push je or ds adc into cmp jg (bad) std scas dec mov mov (bad) cld flds xor xchg stos sub xor insl in or fidivr pop imul push mov inc cmp repnz mov sbb pop mov push outsl sbb es mov cmc sti out std js inc jae xor stc fwait lock cwtl aam mov fldenv mov lea rol or xor cld pushf cld add je das push arpl adc mov sub in fildll pop adc shll (bad) adc xlat push sarl leave add fmull fcoml fcoml popl faddp and popf push psubsb inc mov clc mov negb lds cld jle mov sub dec or push movb mov cmp inc push imul lahf sbb ret pop scas call add fstpl lahf mov dec inc jno sahf add push cli push mov mov loope test insl and push jp lret test lret mov es clc and mov add dec pop xor aaa xchg cltd cmp adc addl mov xor push and pop roll push into xchg ss push jbe je movb adc (bad) fidiv inc lcall adc lret je test lock imul lcall stos xor dec xchg jae nop sub mov sbb cmp dec push add inc cld (bad) fistpll inc test adc add js or jl and add cmc outsl movsb cs inc lock mov es lods mov subl das jp jne push xchg (bad) jbe mov sbb push cmp ja jp dec cmp dec cmpsl das out int3 inc push or mov rorb mov push repnz push jbe xchg roll das and adc out int addr16 mov mov cmp call lret or movb mov xchg jecxz xor dec jae outsl fwait mov mov insl movsb test scas imul out adc pop mov jbe or fisubl add sub inc loope pop add mov dec jecxz lods cwtl mov out ja or js push fs bound mov sbb mov mov mov xchg fnstcw ret mov jl sub mov mov cld fwait es aaa push cmpsl mov add daa push test mov jmp cli inc loope daa pop xchg xchg cltd dec or popf jmp push fcoms or inc ret add sti stos bound push ss dec add mov addr16 cmp jmp pop int3 jle push mov iret fstl cmp adc mov repnz dec cmp aaa scas add (bad) mov push aad ds clc cmp in scas test push test cmpsb sbb xor add cwtl adc sbb xor push (bad) stos aam push das push adc loop add (bad) mov lcall outsl dec outsb sub icebp push mov mov lds xchg data16 pop push pusha ljmp es mov imul and xchg push fild jle movsb dec lods lock dec add orb lea aad dec mov addr16 or dec insl insb imul stos dec inc or mov adc imul out or xchg js repz out mov fdivs inc pop xor add sbb test xchg dec loopne fimul subl iret xchg ds test dec sub std cwtl cmp sub or dec int loop (bad) cmp clc outsb xlat fs stos jg sub shrl jle mov mov and in dec mov pushl ja daa inc jnp inc or (bad) add mov add dec (bad) xor and test pop add or sbb bound cmc hlt iret mov mov test jl dec (bad) fistpll sbb lds xor in pop cld rcrl add jo sub pop loope adc int3 mov jae and xchg int3 cmpsl jbe jle out sub iret lcall mov push cmp andl lret jle push fwait sub push cmp mov je lea push jge xchg sub sub jns jp fiadd push jecxz inc js cli sbb add loopne ja adc sub cmp xchg out je sub jno sbb fwait jg in jb pop sub movsb int3 sub jp in and sahf adc aam mov xlat mov inc sahf out jbe xchg test arpl xchg leave fdivl pop xchg addb scas push dec stos (bad) ss mov pusha xor enter or cmp test js mov cmp cwtl add cmp pop (bad) and iret mov sbb pop pop fwait popa xchg cli mov cmp or mov lods add add push push lods std stc add bnd mov pushl xchg iret mov mov add (bad) mov in sbb ljmp xor subb ljmp outsl lret mov add leave cmovle mov inc jmp adc xorl mov je fdivs fstp add xchg sub cmpsl (bad) loop mov popf sti arpl cmpsb and jns or adc add ljmp sub sub jae mov mov arpl addr16 scas sub jo bound sub ss out (bad) dec fcompl mov cmpsb sarl fstp mov xchg aaa inc outsl scas push inc popa dec push pop pop pop fldt in loope decb and gs roll mov cmovp mov repnz push push bound mov or sbb icebp in pushf xor aad sbb push pusha scas (bad) sahf jne and push fcmovne pop lock fucomi cmpsl xor mov mov insb xlat popa popa cli pop jne xchg ljmp je or in mov jb cmp pop sub or pop cmp lods and push bound push dec dec jbe mov insb mov xor xchg out xor push mov aas jno lret imul insl jno ret dec mov dec (bad) pushf xor and stos stos cwtl cld pop insl lret stc mov xor sbb adc jmp dec imulb insb cmc mov cmp sbb mov push out (bad) loope and xchg mov dec (bad) lahf cmp pop adc mov mov (bad) mov lea mov testb push add insl (bad) into das and inc les push test imul adc push hlt cmp or (bad) lcall push xor inc test pop sbb sbb popa and ds lahf cmpsl cmp inc and fidiv mov test icebp in test sub aaa push pop jmp jnp or cmp rclb out test ljmp push dec test jge mov test divl andb mov xor idivb dec idiv js insl jae dec cmp adc push int xchg scas dec cmc and and push insl cmp add adc (bad) rep xchg hlt (bad) fcmovnbe sbb inc mov pop mov cs xchg pop inc in or or and jmp test popf bnd dec sbb adc js (bad) enter adc xchg mov push mov mov pause dec rolb fs cltd (bad) dec push fdivs add out sbb (bad) or (bad) mov adc pop aad lods push ficompl pop rcrl dec pusha repz fdivrl int3 and or lret testb out add adc rclb cld fwait popf sar test xor jae repz scas idivb test xchg insb xor push or add test add out xchg leave imul mov aam aam xlat mov inc pop out cmp (bad) in push cmp dec gs xchg std mov cmpsl cmp out subl adc xlat and loope adc (bad) mov scas jae jno arpl cmp xlat lret push loopne jge fcomps nop test cmp mov sub jo mov aas lret aaa cmp (bad) shrb push mov mov pop mov and xchg scas sub mov in mov dec movsl test inc icebp test ss int3 pushl pop push aas sub leave inc lds sbb insb repnz scas push (bad) bound test add popf dec cmp mov dec push add gs cltd sub adc adc push cmpsl cld xchg dec pop lods mov cmc call adc dec push jbe xchg jp ljmp and cs ss xchg jae xchg in pop or and in mov mov cwtl mov push hlt xchg (bad) inc out loope sub test cld pop inc inc decl mov jecxz test add outsl jo ljmp or repnz out sti mov (bad) sub andl scas mov imul or sbb mov repnz lods adc ds or sti cmpsb or jg or or or stos scas adc mov fstpl aad and cmc push fwait sbb jno xchg (bad) or cmp pop xlat sti mov adc ljmp jecxz (bad) pop adc pushf call out push pop lahf repnz int3 orb cmpsl es and inc push lea popa inc roll adc xchg push aad (bad) xchg inc inc pop dec out sub cmp push mov stos inc lcall push das ror ret repz fldenv pop testb jge jl pop int3 inc sub repz repz fimull fwait pop sarl stos sub xor cmpl mov sub fadd push hlt xor sbb stos jnp int mov test pop loope pop fwait pushf xlat popl xchg sbb repz andb dec mov pop mov inc out xor rorl aam mov in insb sbb pop aad iret sbb push xor fistpll mov movq push sbb ljmp data16 push fimul mov adc icebp je mov fidivr push cmpsl xchg test js xor jae adc push leave hlt mov scas fnstcw subb push push and add mov shl push cmc sub clc mov (bad) adc adc adc and in js jg std ljmp aas pop sbb jl mov cltd pop lret and push sub and int3 mov clc xor or mov xchg sahf xchg dec or push dec add je mov sub sub es inc js or adcl xchg jmp int push sbb and test ret push shlb cmp mov add or dec push sarl fadds mov adc push pop test jno sub in mov and lea enter or data16 jmp jl sub xlat je mov inc sbb (bad) (bad) jmp addr16 loop inc les or mov lods mov scas sbb ficompl and jns imul icebp xorl loop mov lods in mov leave mov dec mov mov mov jmp push cwtl ss push cmc test cmp inc pop in mov in sub popa and xchg cmpsb jno outsl test cwtl pusha shlb pop cltd cmpsb pop test pop push cmpsb fist jg test lods in and jecxz sub and mov xchg lods sbb push outsb bound xchg pop pop push sbb lock negl icebp fcmovnb incb in adc jge mov shrb mov fcom mov cmp sub cmp jne mov or pop and inc (bad) fisttp lock and cmp cmp repnz push mov mov cld fistpl in mov sbb mov push adc push mov (bad) adc mov rcrl xchg aas mov cli pop mov push adc rclb ds in cld mov les sbb and cmp stc mov stos (bad) jecxz hlt xor or push and lcall cmp adc (bad) pop pop daa repz mov aaa inc and in inc inc fwait mov or enter mov adc fiaddl xchg lds jb push lret jnp mov sub sbb dec cmc popa int3 loop and test xor int3 pop or ret adc ret xor mov arpl sti fcomp sbb mov adc adc lods mov sbb daa ret in xchg ret mov ljmp inc mov popa out push lock punpckhwd adc (bad) jne das pop jbe in cmp xor sub cmp fsubs leave lods dec ds cmp punpckhbw fs push lcall in insl or insb fdivs jg pop jg sub imul cmp scas xchg dec cmp je mov fcoml mov jge pop lahf jne xchg jle,pt adc aaa sahf mov push and mov into test add mov mov pop sti mov cmp and out cmp aad call ret xor outsb cmp cmpsl ret addr16 (bad) daa sub xlat cmp adc pop movsb pop sti sbb das cli mov xchg loope andl (bad) lods or fisubr xchg cld dec paddsb inc aad adc aaa cs leave push jns xlat hlt ljmp pop fidivrl add ficompl xor shl ljmp lock rclb mov jne (bad) jae push pop inc mov sti jmp mov inc into pop leave cmp add xlat or inc sub dec dec imul into jle rcpps and dec fwait sub (bad) push fcmove (bad) or (bad) movsl push sub push dec sahf push les rcll push adc cwtl aas pop jle mov pop pop jmp dec adc pop call fsubrl je add stos xchg insb pop fs mov fiadd mov repnz xchg test push fidivrl or test xor and dec push push jp aaa iret jbe int3 lahf mov mov sti dec sti cmp dec cmp push sub inc test mov pop mov mov cmpsl sub lock test ja movb sarb mov call mov rcrl test dec loope pop into stc scas aad push jecxz xchg adc divl jmp in jne mov mov and mov xlat fsub inc sahf mov xchg add out jnp pop adcb mov cmp add or or pusha enter jmp out and movl push cs mov mov in aas fiaddl xlat pop pop into stc repnz mov mov test (bad) je fstpt inc fstpl dec movsl pushf jbe leave push jbe ret (bad) mov mov jae aam lds into pop push xchg out aad cld shrb xor gs and or fbstp bound jmp fwait and dec mov popa adc insl xorb pushl lds add mov push int3 xchg add jp adc jo mov movsb pop sarl jl push xchg pop out mov test and adc negb adc movsl ljmp xchg fidivrl clc add add inc popa jmp adc rcr (bad) in outsb pop (bad) mov rorb mov cmc add jmp addr16 fwait or adc ret fimull or and in mov into xchg and sub daa mov mov pop adc dec std in fsubl loopne cmp aas pop loopne pusha out insb enter cmp sub xchg xchg push add mov jne mov push into dec ss out mov dec push cld cmp or sbb push xor sub cmp inc inc mov imul or mov flds aas outsl lcall or inc mov mov test xchg (bad) inc mov and aas loop xchg movsl add mov test movsl pop xchg int push andb mov cmp sub hlt xor loope scas addr16 fist test push or leave movsl mov imul ss pushf call es xor mov stos pop xchg xchg aas dec sbb inc sahf mov or mov shrl sbb xchg fbstp sub cmp jno mov adc push fcmove add adc push xchg jnp sahf add cmp insl outsb pushl frstpm(287 nop adc aam test cmpsb push inc jmp sbb or pop xchg mov jnp push gs fnstsw inc lods sbb into inc fistpll sbb dec jge repnz fstpl mov inc call ret cmp and jne push loopne (bad) lods cmp and sub aad mov or (bad) cltd mov aad lahf and dec sbb jb,pn bound xor inc xor pushf mov cmpsb jne add repz iret lods jl mov jnp nop sub inc pop testl call (bad) (bad) lea or js dec jbe repnz xchg subl loopne call jne js pop lods and inc sub inc mov push ja adc iret dec idivl xor std inc xchg insl mov das (bad) lret jge subl mov mov and xor test push xchg xchg mov arpl cmp lret dec mov aam adc addr16 dec loope sbb loopne stc push hlt jo stc inc lcall imul incl bound insb lcall into or testb mov dec lea sub jecxz mov ret jbe pop mov (bad) mov xor push jae lret loop lods in pusha cmp dec enter xchg lahf add dec adc mov xorl scas cs andl aaa push cmpsl cmc lea into ljmp ret jle dec test sbb cltd pop or aaa push rcrb xchg icebp movsl sti jno jge fdiv mov cmp add and fdivrp cmp sub leave shll mov xor jnp int mov scas cmp das imul (bad) jae sbb in cmp call mov movsb mov (bad) pop scas jo cmpb cmpsb xchg in fdivrl inc ret aam daa notb sub dec and adc ror cmp mov lock inc enter sti aam mov popa or sbb imul push gs lods pop ret fsubp cmp (bad) sub xchg mov or mov ret jp fdiv les mov adc (bad) xor jae xor push daa out add adc cmp xchg pop popa xor push dec sub sahf mov xor cmp sbb jecxz (bad) mov xor xchg loop sbb out cmp xor neg negb sub hlt gs clc sub test scas iret jns xlat out cmpsb in adc icebp mov xchg call into in cwtl jnp mov mov js gs xor inc aam in dec xchg test decb jmp mov cwtl xchg jae cltd pop jnp ja sub push pop lock lea dec fsubl push and (bad) or fbstp adc sbb jp cli ljmp lds lds aad scas or mov repz fdivr mov ljmp adc pop add dec fs outsl jmp test sub cmp push (bad) jb xchg push mov mov cld insb add imul mov clc enter dec ja (bad) cmp jp aam es aad cwtl jae jmp mov xlat sbb dec mov in xchg stos test out mov outsb stos pop arpl dec dec stos ja cmpsl xor or rcr mov mov xchg push (bad) insb jmp mov add mov test enter or adc pop lods sub notb mov cmpl pop test jmp fisttp and fimull adc mov rcl or ret stc dec stos aaa adc in cltd outsb fildll dec xchg adc mov imul mov xchg aas jecxz mov inc popa rorl dec jp sub mov xchg movsl pop xchg lods imull je push fistpll out xor xor push push aam mov adc and dec xchg pop fwait imul sbb inc and int3 cli into pop inc into adc sub lock sarl test jb jb adc sar (bad) adc or push push jg lods insl out pop pop mov or les iret pop enter shll pop cmp out sub (bad) cli js mov xor xchg pushf cwtl dec inc ja or xor mov jns mov sbb cs ss fwait pop jl (bad) loop dec stos mov inc ds mov decl mov jle pop inc cmc and (bad) push je mov out out or cltd mov xchg clc (bad) ret popa add dec shr sarb clc jg dec and test adc in mov dec js mov ret push std mov loop dec mov ret icebp dec xchg orl adcl mov push add lret lds push mov xchg rcll (bad) mov inc mov andl xor mov xchg cltd mov xchg repnz sbb mov jg lahf arpl sbb and lds fild mov cld mov in jo lea xor pop andl adc jns sbb fdiv dec mov jge test mov xchg or icebp lahf leave or out jge js mov pushf (bad) stos xor sbb test or leave hlt mov ljmp cmp adc sub repz jmp pop shl (bad) mov sbb dec inc mov lahf mov gs out fidiv cmp pop add inc adc push aas movsb push scas pop add lret sarb and and fs xlat mov add mov sar enter push icebp push push loop mov push add add cmp sub (bad) jp dec aad pop adc call cli das leave (bad) js movsb stos pop jp pop nop xor fdivrs (bad) nop inc mov sub lahf mov notl jns stos jecxz scas hlt fsubs sbb sub aam daa jns jbe test inc roll ret call out mov and mov push bound mov add sub push loop xor loopne cmpsb cmp mov les inc pop jbe mov add mov (bad) ja imul inc xchg dec add sbb dec repz sbb les dec mov mov add arpl push negb mov pushf test mov adc inc jg test fcomp push mov cmp add loop movsb pop test test cwtl sbb xorl jns sub adc sub lea pop sbb xchg lret mov pop mov mov jecxz mov xchg popf sub (bad) lahf lahf mov jle fwait mov cmp shrl and cwtl mov dec fadds addl push xchg dec and and ret mov fidiv adc inc (bad) push jns pop stos mov lds mov loopne cmpsb out loop and ds js jo lret dec test mov in lret xchg push mov jbe pop cwtl fwait mov cwtl bound out dec sub sarl scas enter push cmpsb mov or dec dec xor sub pop adc in push jge dec test add lahf or lret xorl scas sbbl inc sar mov mov cmp in aam add cld and lods sub into cmpsl mov inc mov scas inc adc sub sub (bad) out push mov dec push sub scas jb repz aam out in mov and mov push loopne ja inc push aas sub xchg inc and std cmp xchg mov pop sbb arpl cs fstpl mov xchg nop jns mull fidivrl out xchg pop add test push ret sub (bad) jno (bad) push fisttp inc cmp (bad) pop mov xor aas adc shl dec xchg aam (bad) enter aam fistpll imul cmp pop (bad) popf xor fsubs jb rcll aad xor dec das push clc cmpsb cmp lea cmp fisubr pminub test jb xor aas sahf stos push or jl leave into imul ss pop or std iret fst push mov pop (bad) repz push mov sbb push cmpsb inc rcpps out arpl push rorl clc and call mov cmp push dec jb cmc add mov sub xchg pop mov test shr in lds pop pop sbb push push inc fwait cltd sub jg ds pop in es popa or sub mov sub mov fbstp pop cmp xchg add nop sti add es movl push fsubl sbb movb into insl cmp jne jb fdivl imul or sbb pop lea pop lds test push xchg sub pop pushf clc faddl pop inc xlat add push mov out push hlt xchg adc push fucomp loop push sbb mov sbb push popa rcr sbb ss int enter std cli imul int cmpb dec in cmc ret rorl push or stos mov sub les paddsb cmpsb cwtl xor dec scas and jge lcall test cmpsb leave jge (bad) je cmpsl test test push fwait xchg mov xchg jecxz lcall xchg in pop xlat cmc leave or fmuls cs lock imul xchg out (bad) cmp mov sub sbb out enter stc lret mov sbb aam mov mov add inc stos mov fbld push sub sbb xor mov lock jle das sti inc hlt inc imul gs imul add lret subb adc push sysexit sub nop cmp xchg stos int3 mov xor cmc sbb pushf arpl je jle lsl and jge rorb lds mov mov cmc mov in mov lock xchg sbb mov insb (bad) (bad) fisub pop (bad) and fsubr les je cmp adc insl mov push add (bad) cld mov mov xchg lods addr16 aaa inc outsl mov data16 inc xchg sbb push and jmp mov (bad) sarl sub xchg push movl lock int3 cmpsl movsb xor addr16 (bad) mov lods inc pusha push adc (bad) outsl xor or cmp mov mov pop out out cltd loop push mov enter mov inc bound lods loopne mov sbb mov mov mov xor js xor stc jae (bad) push loop push adc lods (bad) jno jns dec xchg cmpsl test adc cld fs jne fmuls mov loopne jl test add jg xchg pop cmpsl aad lods enter push mov inc lret xchg xchg clc stc (bad) dec xchg pop cmpsb inc in lret je cmp sti adc pop push cmp cmpb repnz push out rcrl push fcoml jle imul mov mov jl in pop push inc sub loop ret sbb xchg mov fimul jbe ror ljmp adc stc or dec xchg or mov pop repnz pusha add mov or mov fdivrl aam pop repz cmp lret lret jae and pop (bad) cli sub cld sub test adc fidivl xor call xor arpl push xchg negl lea add loop outsb popf movl push cmp cli das push mov bound jne fistpl pop cmp sub mov negb cmp fist jp popa movsl sbb pushf add lret or cmc xor lret adc hlt dec movb cmp jb mov mov insl and fisubl mov ljmp shrl add xchg sbb jnp ja pusha icebp das std mov pushf inc ficom pop cld stos or jecxz scas lods in (bad) xor adc pop int int3 es xor inc lret mov add leave xchg fistpl js inc or sub jo push push fcoml xor pop in cs adc insb popa scas mov jbe jnp add loope js iret fildll jns push cwtl pop (bad) lahf jg mov push (bad) repnz adc jge fnsave sub loopne push negl inc pop ja js je (bad) mov cmp dec dec mov xchg ficom aas lcall outsb sahf sbb es sbb ficompl (bad) loopne cmp test sub inc mov mov sbbl add sbb jne dec ret fs lock pop inc push cli test adc sbb jecxz pusha cmpsl fistpll mov push out or fnstsw ljmp testl jle sbb popa adc mov les fdivs ljmp add push pop add xchg push pop cli mov push int3 ret pop adc pop (bad) aam push scas adc mov icebp add cmp push addr16 pop jecxz xor in xchg xor iret js js jmp aad sbb xchg lock jmp push or int3 ja inc pop divl rol mov xchg pop jo cld cmc pop insb xchg or inc dec and adc jns jb daa sti (bad) in pop and and sbb nop mov jmp dec call mov adc sbb xchg mov aam test jo mov mov (bad) outsb and les test jnp lahf xchg test imul pop inc cmpsb push aam dec push adc cmp js arpl jle push xor adc das mov bound inc pop hlt add adc jb movsb inc mov mov jmp mov popf ret and stc jbe jg cmp ja dec rep cmp lret fadd cmpb pop sysenter lcall xchg jg arpl mov shr loopne out pop push insb and insb and outsl imul lea sbb cmp arpl int3 enter and movsb scas sbb incl adc mov iret pop jmp mov pop push aam push rorb jl lods in mov and loope add xlat add stos test out test sbb ret je push mov xchg push lods (bad) adc pop inc pop xor out pop repz and (bad) push sub xor dec mov jne push in movsl pop cmpl add push rcll iret mov sarb fdivs sub add pop xchg xchg sbb cwtl dec pop in jmp cmp inc xorl sbb or cmpsl clc jl stos jo jne hlt adc jo ret (bad) jl jp cmpsl or sub insb jmp and stos xchg and daa and mov jb push lret mov push push push fisubl les adc dec aam add dec clc jo adc (bad) push cwtl (bad) repz push jecxz dec in sbb mov stc add add aad scas inc mov cmpl addr16 mov push fwait xlat xchg xchg out mov cwtl ss mov xchg mov fimul popa lods jae dec movsb lcall sahf push faddp ret (bad) push sti jl jno mov dec jmp push xchg mov in pop jge mov (bad) lahf ret and or jb adc xchg imull insb inc or test jns lds xor mov lahf mov (bad) bound addl dec adc pushf outsb test sahf cltd xor imul and mov out pop rcll (bad) fsubrs sub mov test cmpsb repnz cmp push push ljmp mov es and xchg add das xchg pop push adc insb (bad) outsb push mov loop adc mov stc fs xlat aam cli inc out or cmp clc xchg jge arpl popa rorb sub sti inc adc or sbb inc mov mov mov jne jmp cmp or loopne add cltd inc mov out sub cmp pop loop cmp dec push (bad) mov mov aam xchg js xor push outsl xchg (bad) cmp lret sti jae insl push lcall dec push mov loop enter imul sub pusha insb aad jmp rcl cmc mov push fisttpl add outsb jmp sbb addl xor xchg cld out or mov xchg jmp (bad) lock mov sub das test cwtl inc dec test aaa and push ret insb dec scas ss fbld out pop cmpsl out rcrl (bad) loopne sti fs (bad) cmpb and insb lret or das imul pop push jp ficompl repnz popa fmuls pop fidivr add jl cmp call sarb push scas sbb ljmp fsubrs cmp inc push lahf jg or dec rcll pop sbb bswap int3 sarb scas fdiv cmp stos dec test xor add add mov xchg into mov and lods cmp push push stos jmp cs sub popf pushf push outsl fsubs (bad) mov fdivp lock lcall (bad) sub rclb xor and stos rcrl mov mov popl sarl pop imul and pop fimull sub shrl aas (bad) rclb ljmp pop test mov push (bad) sbb dec hlt cwtl pop lret mov jl bound cli (bad) mov cmp dec inc (bad) mov jns mov mov jg aam mov sub bound cmp lcall mov aaa fdivrl pop inc loop loop pop leave gs jl lcall inc xor popf ljmp sub xchg inc cltd outsl dec imul dec mov mov nop pop mov jne sub test pop add iret fild pop xchg fwait cmp iret jle cmc cltd jno xchg sub push mov sbb mov inc add push lahf popf push inc add push lcall das jbe inc xchg add lock mov pushl mov or jecxz dec test leave jno fisubr pushw or (bad) ret xor imul pop push loope xor (bad) fidiv outsl and push and out shll les push movsb stc or dec sub sub sbb mov xor dec (bad) dec mov leave xchg xchg lods push into out inc test icebp push push add (bad) dec outsl fs mov call dec or adc adc ss push ret pop mov test sbb stos ss jnp mov jle jnp,pn aas lcall push inc jae jnp inc pop cmp dec clc imul mov negb lret lds and xchg push dec and push jl mov popa mov cmp and push fidivl test dec xchg mov iret mov xor add xlat jne jg daa int3 adc xorl sub clc fmuls sbb and and in cltd bound adc or sub and push popf jb insb jb mov loop pop out andl gs daa nop movl mov sahf and pop add mov dec jle std movsl (bad) cwtl push js sahf inc push rorl or jp mov inc loope sub sub adc hlt pusha sbb inc (bad) orl mov mov data16 mov nop es mov xchg lock out push mov std stos repz pop or gs jle push and inc push push frstor jns pop mov mov mov cs sub inc test inc fadds adc push subl aad push push xchg frstor inc xchg xchg movsl dec adc repnz mov jns pop add test pop incb fdiv in mov cmp decl mov shl pop jge fs icebp pop xor flds add iret call cmp or pop cmp das inc sahf mov shrb mov ret cld mov dec scas imul enter fiadd inc in inc or cmp imul aaa adc jo shll push sub cmp sbb (bad) mov xchg ret ds dec pop test mov aam nop sbb pushw adc jb in cmp jb out jbe call adc xor outsl ja fs mov cmc cltd cmc mov aas enter or pop inc lock test stos xchg icebp mov ret jp out sbb ja je mov pop xchg lret and push ljmp pop rorb cltd push int in sub adc ss icebp xor mov cmp jne int in xor sub mov add dec push push xchg leave int mov arpl notl or or fmuls sti fs int pop add in (bad) lret fidivl sub loopne and stos pop push insb or adc call jle adc iret (bad) lock cmp pop jmp sbb push into mov test xchg sub push lea cmc insb int push aad and inc push ret ljmp cwtl out pusha (bad) and dec mov or imul sub lods sahf dec lcall ds sub leave cmp jecxz and out (bad) push (bad) and cs js xchg cmp sub outsl out dec dec inc repz xorb aad mov and inc in outsb ret nop cmpsb push mov mov xchg in push insb mov xchg mov pop cmp cmp cmp das pusha lret jmp jge mov in lahf jp adc outsl stos stc mov sbb cmp or ss sbb faddl in adc jb fwait or leave mov inc xor arpl arpl push mov ret mov (bad) inc jae stos (bad) jle sarl aas addr16 stc sbb (bad) jge push mov jmp sub cmp adc pop (bad) inc mov mov divl leave jecxz jo arpl fidivr sub bound in lods jg cmp sti pop dec stos push push adc cltd test cmp add rcll enter je jne lret xchg pop pusha push adc inc scas mov sbb sub xchg movsl or fcomp lahf sbb xchg xchg pushf add (bad) jns push and push push pop cmp mov movsb dec or add mov mov adc sub lds (bad) sub inc movsw push mov (bad) sbb push scas add adcl test push aam in mov dec pop and jge in cmp mov movsb adc rcr bound jbe nop inc pop les adc sub sub scas add jl xor movsl cwtl sub inc out mov addr16 ret fmul outsl popf sti adc xchg stos negl mov pop cmc scas test adc (bad) shrb add out pop sub xchg sub stos aad add insl jge jmp add adc xor push xor cmpsb cmc pop sarb call out and mov and repnz adc popa cltd fdiv sbb scas mov jnp es xor sbb jecxz test aas cmp mov in pop pop mov adc or (bad) scas mov clc es sgdtl mov mov xchg xchg push in in inc push adc jb mov mov outsl popa pushf pop adc xchg sti jne mov sarl popa (bad) fbld fsubl mov fwait mov push push jp (bad) or jae test jmp and ds outsl movsb popa int lds sbbb pop out inc call jl xor push xchg test adc mov (bad) roll dec push je sub xchg (bad) mov hlt jg add inc fdivrs mov and leave sbb loopne xorb mov mov scas das mov push adc mov sbb push adc xor scas sar lahf (bad) movsl jne pop sub stos fsubrl mov or jns aaa adc (bad) and xor popa popl jmp dec call mov cli insl jle jle mov mov test cmp sbb ljmp js dec cmp or int xor leave mov bound mov mov jecxz jge cmpsl mov inc push out out sub lods neg mov lods imul mov push rclb stc repz push cmp stos stos cltd fwait insb pop leave push xchg mov and repnz clc test cld mov imul jmp dec imul lods sub mov movb mov (bad) rol push or mov mov leave or push xor push shll (bad) out leave mov pop lret xchg pop mov fs scas or sbb insl loopne mov jmp xchg lods adc cmp sub ds jmpw int jno insl push popa or push jb in cmp cmp adc nop xor sub pushf incl jmp mov jo xchg pop int3 insl (bad) aad jne fdiv in (bad) sti mov jnp ret mov setno cmpsl imul lock add dec push sbbb dec and sbb cli insl dec adc mov adc lret mov lcall and mov jg xor (bad) jp in sbb stos fmull cmpsb xor out inc mov inc and pop mov stc add jl (bad) lods jp lock xchg andl decl mov jecxz dec and insl cmpb dec lods popf xchg les mov sub mov dec lcall push popf jmp arpl movsb jmp sbb pusha mov push repnz in push push cmp sub mov in adcl jp push mov jb and xchg aaa jle movb mov adc loopne inc dec jp or xchg hlt int xchg aam jl lret cmpsb enter ds fcoms (bad) stos imul push inc sub xlat fwait mov inc test (bad) test aad test imul aam movsl aad pop adc movsl add xchg pop inc sbb adc int or outsl mov and or dec cli adc xchg pop scas std loope push int3 dec out or dec jo pop cmc out (bad) xor addr16 mov add popa sar test int inc mov popa jbe mov dec sbb push popa jecxz add pop ja xchg pop pop and mov xchg in stc jle fs rolb inc lcall sahf repnz and cltd dec add (bad) xchg push les loop xor incb std jnp je sbb add adc mov push jae mov ja,pn rep adc pandn mov outsl and xchg push cld or mov mov movsb mov adc (bad) xor add sub (bad) dec xor shlb dec dec (bad) sbb sti mov scas imul sti sub jmp iret fadds lds mov into inc in adc lret jno sbb imul shl mov xchg fnstenv cmp inc dec hlt dec mov outsl enter (bad) sub movsb xor pop bound pop push repz push (bad) pushf inc mov out xchg shr xor out cmp sub test cmp inc cmc dec addr16 loopne push fbld lret cld add js iret add push xor xchg in jl and fcoms jns inc movsb outsb test std icebp push (bad) dec mov clc fiaddl jo hlt (bad) in jmp fwait call (bad) (bad) pop mov inc popf or mov lret ficomp jae xchg or das adc fistpl push cmpsb jns in cmp jmp mov jl fwait pusha xchg sub cmp fwait dec jne dec jno or movsl in inc lock mov rclb lds xchg and aas xchg dec addr16 xchg dec push cli mov popf xor sub ret jo fldenv pop or push jno sub imul insb xor mov or popa sub sahf movsb adc iret dec out inc jns out xchg mov adc adc mov ds lods test (bad) lcall insb adc imul pop or (bad) call out sbb and sbb push mov les and cmpsl es stos add mov into jle pop nop push ret and ficompl sub add mov add ja jge sub idivl add adc adc jmp add insb adc lods push loopne imul or js and addr16 idivb popf std cmp and std ja push ret xchg xchg push jbe ret test pop push xor loopne js ss daa cmp imul inc (bad) popa imul inc test cmpb add jle push xchg mov cmp ret xchg cltd dec pusha arpl sahf inc mov lock inc push test mov dec scas jmp lock leave push aam daa dec and mov cmp (bad) jl fiadd roll and push sarb (bad) pop push int3 cmpsl inc adc daa mov ret lods mov in and inc inc sbb xchg dec fwait jecxz or jo roll fiadd gs cs push push xor ret inc mov cli pop ret inc arpl (bad) (bad) or jbe ror mov mov hlt cmp mov xchg (bad) int3 mov xchg test jbe xchg pop pusha mov push sti mov gs adc push mov scas mov in cltd xlat adc add loopne cmp mov xor cmpsl mov xor pop aaa stos adc adc idivb dec push dec or mov jl xchg pop jbe mull mov xchg mov inc sbb wbinvd lcall retw mov xor out clc pushf call and pop inc jle rol fwait scas hlt push xchg aam imul (bad) repnz loope xchg test testl lds out les jle cmp inc xor arpl adc jae iret (bad) aam icebp cmc imul adc testb aam dec pop pmulhw (bad) stc cli mov cmp clc xchg cmp fdivrl popa mov in rcr cmp into arpl sti push inc mov insb ret dec clc (bad) insb lret js test (bad) dec and dec test (bad) out and daa and lret adc cmpsl pop ds dec jo (bad) mov adc repz mov add cmp jge mov push loope pop xor cmpsl jmp aas mov fldl insl in js scas aas pop out (bad) enter lock pop stc and lods int3 sti lret mov in lahf jmp in inc dec scas aaa jno jbe fs rcrl adc mov enter cmp int3 fsts lea out mov pop add nop jo mov inc xor insl in arpl mov inc sti mov cmp insl jns mov cmovge int3 jle fcomps stos negb cmc push fdivl cmpsb push push repz out inc andl lock adc xor in add cltd sbb rcrl mov into test cs sbb sub xchg daa idivb push add arpl mov add pop adc xchg (bad) insb jge into pop aad dec rcrl divl shrb lret push pop adcb or cmp jne fnstsw or aad mov and mov imul xor adc and (bad) adc push stos and aas icebp mov data16 push mov cltd sti cmp push (bad) cs hlt les sbb mov xor and cmpsb lock fdivr fistl mov add test push lret lret or mov pusha test roll jg call fisubrl (bad) or pusha call push jge dec stos jbe mov mov mov es movsb daa icebp cmp dec or xor das push pushf inc insb insb jle scas mov pop insl hlt mov and push (bad) lret jnp cwtl inc push jle mov lahf or sahf and xor jmp cwtl mov shufps bound add mov mov leave mov dec mov clc in lret push (bad) mov cwtl adc ja repz in (bad) cmp or adc movzbl out ss sub idivl popa jg fcompl push jp lahf js loop lahf lods cmpsb sbbl gs sbb lea cli add sti shl ljmp mov lock loop add aaa mov push and push jmp jge add jp loope xor clc loopne add xchg fild nop rclb les push fistp into add fbld insb das and (bad) xchg mov dec sub incl movsl cmpsb and or sbb jno push xor outsl mov dec scas dec repz jp (bad) and pop push call arpl push and push lods loope mov test shlb jno inc jecxz pusha fs pop shlb pushf lds test xchg xor push div cmp mov dec std adc sti push inc sub xchg xchg sub (bad) int dec ss loop add repz cld addr16 lds call mov repz out mov scas mov lsl in mov inc jl mov or shll out xchg aam add dec mov cmp (bad) xor cmp dec xchg testb (bad) fcmovbe sub lret popa fidivrl and pop ds outsl fdivrs lahf lods in xchg mov push fldl mov or sti and cli pop jle xchg dec arpl adc push xchg insl inc (bad) xchg das xchg push cmpl xchg jl ja sbb insl cltd sub lahf in testb inc xchg movsl sahf aaa xor add mov enter mov push (bad) insb orl add test sub leave aaa and sub push cli fwait lock mov jg fdivrp push movsb xchg jb mov and lods xor mulb xor pop xchg or pop cmp mov add in rcrl out dec adc xchg or ret dec dec fiaddl lret cld dec imul mov push xchg cmpsb leave add subb or cwtl imul adc dec adc ficoml xor dec in mov out sub (bad) jecxz mov outsl aam jecxz fisubl sbb mov aas or xchg clc inc sub rcrl push aas jbe cmc daa xchg sub and or jecxz jge mov cmp push and ret xchg xor pop xor mov push bound aad jns pop fwait lret dec inc mov cs int3 shrb lret lea and mov ja callw push and mov rep std imul pop hlt cmp add test fidiv pop pop movsb out adc jecxz pusha mov or add lcall push ljmp add test movsb xchg xor addr16 scas test lods sub gs mov push sbb cmc ljmp mov dec (bad) pushf bnd imul fwait jg push ret jns jecxz nop sbbl repnz push jne push sub and mov mov jp add out cmp mov mov fistpll test and test xor iret sub cmp mov arpl sbb fsubrs and vunpcklps pop inc push out mov out xor jbe mov (bad) jecxz inc sub pusha frstor push pop es hlt stc inc sub xchg sbb in dec ss imul xor pop pop pop gs hlt or mov pushf and sub add push data16 mov fisubr test cmpsb lock out sarb push and push mov (bad) dec mov pop add dec orl xchg ficomp mov stos rcrl aas cli or aam lret jae dec mov icebp mov cmpsl and sarb ja adc cs sahf mov sub xchg in cmc data16 int mov rclb push xor fnstsw mov cmp jne in jno add adc xlat fisttp add call adc stc ret ret sub sbb or cld jbe inc mov add push ficompl ret pop loope jmp or push mov jle test notb arpl push (bad) sti rcll in xchg add out mov stc xchg sbb cmpsl out movsb fwait outsb ja test jnp xchg jns sbb push cs pop in pop mov and sbb and mov mov insb aas out movsl or dec inc rcrl sub pop cmpsb fs and adc xchg ds es insb mov pop pop add cwtl (bad) roll (bad) stos cwtl cmp rol add add das (bad) cmpsl jae fistp fs je adc and test add (bad) (bad) fnstenv mov stc mov test out (bad) sti ficompl js push adc mov pop loope jne ret sbb ja imull out cmp aaa xchg xchg mov jb cmpsl lock adc pop stc cmp xor jnp sbb push add mov jle xchg cmp sbb or into jae xchg pusha test mov daa std or in pop xchg clc mov xor call or out push jg sub mov sbb test test shr push pop xor adc iret int xchg mov inc bnd mov inc or out testl xchg mov or xor cmp repz fwait stos mov adc popa xchg lcall sub hlt fcompl and inc cmpsb and sbb mov leave adc pop or mov fldenv dec inc sbb inc jge lods xchg int3 in (bad) mov jmp sahf test adc cmp sbb aas popa jo mov fisttpll push (bad) push scas (bad) std fwait cld or or cli lret jbe pop mov push add pop add pop sbb mov aaa lret dec pusha adc push enter and outsb sub jmp aas xor fdivrl inc (bad) lret pop dec cltd xchg xor fwait pop inc inc xor mov js mov mov test mov je ret pusha xor scas and loopne adc mov into lds inc jae jp mov pop mov xor sub cmp adc jl bound int (bad) and into insb add xor and push test mov lods jl xchg mov lcall pop les or jb lcall mov push jge xchg mov push test dec xchg add push cmp adc lods (bad) lret push ret ret pop daa stos (bad) int3 pop sbb sub pushf mov mov pop sbb and jbe jnp aad test and jbe inc cmp gs or fnstcw adc lcall jl icebp imul xor jl jno push ja arpl jmp insb shlb fdivs add inc sbbb mov addr16 mov rcll ss inc xor fprem sub cmp and imul mov fwait dec jge mov out clc mov inc jle jo mov mov sbb int3 ljmp dec adc (bad) lret push movsl push mov cmp xchg push ss add inc or movsb repnz fs ret (bad) or aas mov add test adc and mov jecxz push mov je mov push xor mul into mov sub inc les pop std mov roll cmpsl push mov shll mov ret jae pop loopne fs lods or test pushf push ljmp repz mov (bad) dec adc in cmp pushf mov aas and cwtl cmp popf out aaa stos push push and aaa mov mov mov mov mov cs and inc or ja add xor repz lock loope rol and inc sub push pop add lcall jns ljmp pusha dec mov scas fiadd adc ror in loope cmp mov lcall clc xchg or cmp leave insl out lods icebp scas xor xor jecxz (bad) imul cld out sbb push mov pop mov imulb fnstsw and (bad) imull jp sub or iret mull inc pop repz mov insb ja sbb sti (bad) cmp mov jp mov pusha add push jmp je pop adc int3 test push push (bad) iret push scas std sub mov icebp sahf ljmp (bad) in lods repnz out insb and int stc sbb inc lidtl sub adcl in push xor shrb cmpsl gs in mov mov lods cmpsl (bad) sbb mov cld xchg insl nop loope dec pushf pop shrl lock cmpsb cmpsb add in pop ljmp mov leave out iret setle xor repz fldz cmp cmpsb pushf xor sub dec mov test ljmp mov mov sub (bad) xor mov popa mov xor sti repnz (bad) pop out xor int3 xchg pushf fisubrl dec xchg and jmp (bad) mov out sub jb push push lock scas (bad) in or dec jb push fist test test dec xchg push (bad) or mov push pop push outsl or xchg repz xchg divl movsb mov shlb mov mov in push icebp je daa inc jnp aam add rcrb push sbb jecxz cmp dec leave dec inc test sub int3 ret outsb adc and pop dec mov sbb cmp orl push mov lcall adc incb lods std ja je insb push cmpsl sbb mov ret or stc outsl dec fmul ss sub inc in lret mov imull pop sub jle mov dec cmpb imul xor call test and mov add mov xor xchg sbb stc jbe scas mov nop imul xchg jne cmc aas arpl in mov shrb mov ret cmp mov fucom sub hlt (bad) repz dec daa lea sbb dec aas push lahf inc and pop aad mov and push add int pop jns xchg mov aad mov jg push adcb mov outsb ret lcall xor lods jns scas mov push test clc fnstenv arpl or inc xchg inc pop mov mov gs iret orb test ret loop cwtl xchg fistpll xor out push pop shll ja dec xor mov and fdivs (bad) ljmp jno hlt and (bad) dec dec out mov hlt cmp mov sbb leave stos inc push les lret (bad) fildll sar fsubr daa cmp nop mov (bad) mov xchg mov jmp mov mov in rcll inc mov fsub inc out xor or push or cmpb jle lock dec dec mov push mov mov icebp mov jno fs in dec xchg andl cmp js in add out sbb push add mov dec cmp add out push sbb cltd xor pop out pushf je xor mov dec jo mov test (bad) sub hlt test jecxz into pop sbb lahf or push sbb int or out and and sub iret into (bad) fdivrl mov push and and outsb insb inc jg jae xchg fwait lret pop xor mov aas or fisttp fdivl sti scas jnp lods or fist sbbb fs mov aaa jnp outsb push clc dec lcall xchg mov nop cli cmpsl inc in out dec dec cmp mov cwtl jle shl arpl adc adc shrl clc xchg cmp cmp loop subl and imul leave jno xchg fwait scas adc into outsb (bad) int3 lcall pop xchg sti adc sub addl mov add arpl jnp sbb adc das cmp dec mov xchg cmpsl imul dec xchg orl pushw jae pop xchg cs aam aaa push xchg sti test xchg int3 std ret in pop add mov sbb cmp lds or push lcall movsl inc lret sbb dec mov mov adc xchg std lods ret inc sub je stc fucomip jge lret (bad) ja mov lods repnz cmc rol bound shll cmovb popf push cmpsb dec popf int lcall mov cmp xor mov popa (bad) cli and mov orl cmpsb aaa mov stos pushf cmp pop sbb push jno paddsw fidivl inc add xchg inc fcomps pusha mov gs cmp xchg loope jo fwait adc das or xchg aam jbe fs lahf mov sub push jle mov sbb cs fs jne insb jne push mov in and mov fsts dec jo add mov fistpll and push popa sbb fmulp in shll mov daa push mov xor xchg xor sahf ret cmp stc jge lods xor lds xchg andl mov pusha or push ds xchg cs adc repz cmp pop add (bad) mov rorb cld inc mov fimull mov cli mov into and jne lea pop int3 mov xchg sbb cmp sub inc repz mov cmp aas mov push popf cmpsb mov mov jp dec fs hlt icebp and ja ret mov xchg movsb lods aad push jnp out fnsave int es je loope dec icebp fidivl pop jg xchg jne sub mov sub daa jnp mov popa xchg pop sbb pop int3 or or push pop sbb adc xor sbb dec sbb mov insl dec jg loope aaa sbb xchg xchg loope add out sbb sbb cmc xor mov or aam jg scas repz inc aas sbbl pop fs (bad) lea lret (bad) add (bad) ja pop mov dec xchg pop add iret or or pop rcll inc imul jb popf pop push adc pop jmp fcmovbe pop mov push mov mov loop in sub rorb sbb (bad) jbe loope aad das or bound jecxz stos lock mov push dec out in outsl mov call mov icebp mov pop lods xchg rcl cmc sbb dec sbb xchg cmp hlt out mov popa in cmp sub in int3 out rorl shrb scas pusha dec sub insb jmp push pop mov xor psrld out lahf pop and sub sbb xchg test mov hlt push das inc sbb sbb repz jle dec push adc add nop dec mov mov xor and or dec cs movsb out lret fstps adcl jecxz data16 sub aam rolb ret ds fmul mov outsl push cmp sahf dec add aad dec mov test xchg in lret jnp xchg divl mov mov sbb push (bad) inc push hlt out shrb bound sahf and lods cwtl roll add mov sbb leave jns popf (bad) mov jnp jecxz adc sub shll push add jle pop test fs lock push test cmpsb iret sbb (bad) out in sbb rcr inc mull ret gs fs mov add ret sub sub imul pcmpgtd jp pop mov inc pop int les loop mov xor mov adc mov iret adc mov imul cmc pop and pop hlt (bad) adc call mov add xor int faddl pop dec push push xlat adc or jge lret notl push cwtl xchg cmpsb test lret cmp (bad) mov out mov sub inc cmpsl sbb jg imul repz repnz push xchg dec push imul xor inc aas adc mov mov adc inc dec inc enter out aas fisubrl daa inc aaa fs dec (bad) xor (bad) push xchg mov xchg clc (bad) pusha sbb lret cmp and hlt loope ret push sahf xor out imul in stc mov sub negl arpl (bad) xor icebp cmp xor int ficompl add (bad) xlat push outsl fsub adc jno mov push mov out sub stos idiv mov mov mov shl mov sbb fs pmullw push gs enter cmp adc lods mov inc pop pop lret sub negl sub mov xlat lds cmp mov xchg sub mov fs mov ljmp xchg sahf mov mov jecxz add clc push jo dec test (bad) mov dec xor lret xchg cwtl mov rcl mov (bad) int sub (bad) out je es pop mov inc sti test xchg cld adc rcrl fiaddl sub mov movsb (bad) repz sbb jnp jp jg lret push aas scas lret dec lods or ret int3 mov nop push stos jmp mov loopne mov pop cmp inc popa test int (bad) rorb call xchg mov mov push int3 mov pushf gs xchg int3 jno call dec or loop les jge pop fistpll pop push mov push xchg insl daa dec push mov cmp mov mov rcrl popf in mov xor icebp lods push add mov mov fldcw mov cmp outsl enter outsb cld pusha push jl sub mov mov enter pop nop jnp xchg and stc push inc add fistp mov push cli jg push (bad) (bad) daa pop push push ds and push cmpl xchg adc movl (bad) fidivr pop push imul std pop enter add jmp ret aad repnz push sahf jmp mov data16 jbe dec movsl jp mov xchg push mov push out sub gs pop inc cli inc sbb inc cli popa sub xor adc xor je aaa xor jns xchg clc jne lds cmp pop pushf sub (bad) fidivr mov push cld aam add mov daa or pop movsb es test cmp mov call inc and mov stos xchg mov mulb cmp mov enter out or iret sahf fdivrl mov insl sub add and mov int sahf cwtl pop je xchg mov cli push lahf cmp adc xchg lds sub stos insl inc mov ljmp into cmp jle movsl sub mov cmc loop into sbb mov lret add xchg cmp movb mov mov xchg addb inc (bad) push lret out fwait outsl js jns imul lahf mov cmp orb cmpsb add inc cld scas (bad) mov mov insb (bad) frstor push pop (bad) push loope mov cmp mov sub int3 mov mov (bad) xorl rcrl mov jno stos lret lods sti ljmp cli mov adc repz addr16 (bad) cli cmp jns pusha fs aam pop adc outsl (bad) arpl push jge and hlt lret jl xchg mov adc ret int3 jg mov mov adc push jl add into xchg pop sub mov dec (bad) and mov mov int3 xchg sbb aam pop shr aad jmp xor cmpsb stc sbb jg repnz mov push fsubr push cwtl (bad) mov ljmp ret mov and cmp ss jg pop and les pop aam ret inc pop inc xchg test imul cmpsb sub ficomp ret push idivb lods xchg mov mov cltd stos aas xor pop aas ret dec and into dec gs and jl mov push das dec adc (bad) in jg repnz mov lods aaa xor add dec pushf movb mov (bad) xchg jno sti jnp js adc xor (bad) fisttp or cmpl sbb push sub test push enter leave cs test ret pop sub cld loop jmp outsl dec cs popa cmc and aad pop xchg test mov mov loopne (bad) jae into loopne mov jmp repnz xlat (bad) leave sbb mov pop (bad) sti mov push or pop ljmp nop jno pop in pop stc inc and lea or jb jo push and (bad) mov push jp into mov push dec adc (bad) sbb loop cmp jne inc dec insb cld arpl into imul sbb xchg int fnstenv rol add lahf ja test xor daa mov js outsb das xchg xchg out test sarl repz pop scas and (bad) push push push mov or scas lods push push mov aaa xchg dec addr16 inc jno jle (bad) mov push jl lret fs not or inc mov cmpsb in and outsb sbb (bad) adc fisttpl pushf jmp mov mov mov in das dec sbb mov ret add iret and icebp adc jb in aaa pop stos daa cmp arpl add int pop loop push mov add pushf lods mov ja in jb sbb mov fadd jle and push xchg (bad) or out xchg ret mov xor ljmp cli dec out add ds aaa flds fidiv mov sahf mov push jecxz repnz sahf jno sub imul mov ret pop mov xchg pop mov stos xlat mov incb enter xchg ljmp lahf movsb adc mov jge adc add adc bound cmp sub arpl lahf pop jae add cwtl (bad) xchg pop lret adc sbb in mov pusha xchg out xchg jns rol xchg mov popa std jmp pusha sahf sbb imul dec push add pop dec adc mov pop add mov push loop les (bad) in inc jae mov xlat xor mov outsl or add sbb mov in sbb jmp test leave frstor pop xorl pop sarb (bad) lds sarl mov cmp dec call rcrb lcall mov into jge mov and fcmovb stos popa jl inc xorl imul fdiv jb das scas push jmp xor ret inc lret push sar mov js lret into dec lock xchg popa inc mov adc push jbe inc inc pop push shrb lret adc sub jno in popf jne lock or arpl xor xchg cmpsl xchg cmp adc (bad) rcrb jb add nop in and out sarl clc out repnz jne test pusha push sub mov stos push cli pop inc lods popa adc jmp cmp jge das repnz add pop fdiv push (bad) cmpsl pop mov aad add scas jecxz sub pop clc in iret mov imul push dec mov enter into repz and nop int cmp adcl push movl ss pop push (bad) jnp stos mov xchg push and inc sbb aaa into cli push inc ja cli push mov pop sbb pop mov jbe int3 mov sub push shrl test add fiadd dec aaa mov shrb and (bad) add and cmp sbb inc enter mov dec push jae test xor adc in imul push cmp inc inc mov push loopne adc or or cmp pusha mov mov std mov mov aad (bad) push push mov mov dec imul jg (bad) fsubrs lret ret popf cmp aaa push mov int mov inc fistpll in fstps dec stc pop cmp sub or xchg jo je cmp jge mov xor inc aam insb insb xor xorb pop test pop lahf fildl dec daa jg inc jns adc jg (bad) insl xchg notb repz xchg xor sub mov imul or (bad) ds inc mov push repnz push mov mov mov jmp sarb je nop or out mov mov cmpsl sahf jno push mov inc fs in push adc std xor outsb dec dec test jp pop fistpl cmpb adc add ljmp scas fwait mov mov cmp mov sub jnp cmp (bad) (bad) dec cmp out dec mov ds stos loope push pop ljmp insl push jmp inc test sahf lods mov nop sbb scas repnz jae pop fildl jmp insb and mov cmp xchg shrb scas xchg lret sarl scas (bad) mov test add xchg pop aad (bad) outsl mov out loope (bad) loopne dec xchg mov ljmp arpl fucomip xor xor les pop loop lahf add adc xor imul jp jne stos (bad) adc (bad) jne push sub xchg scas (bad) push cs pop and and int cmp sbb inc sub xchg and adc mov mov fbstp or lds fadds xchg push inc ret hlt add pop imul sbb pop loop jle aad xchg adc adc lea xchg fstpt mov xor cmp and ds lods xor aam push scas lds test adc jmp (bad) stos and outsl lock push xchg xor imul int mov mov mov mov jne and cmp movsl mov jge sub test xchg sub fs daa pop (bad) dec dec cltd test jmp mov xrelease xor cmpsl sahf fs (bad) xor mov in xor fpatan repz icebp in sbb (bad) pop int mov in into dec inc xchg hlt addr16 xor add add pop (bad) (bad) or push sbb mov (bad) enter mov add jno dec jmp bound gs mov dec xor daa je adc arpl aam cmpsb xlat pop jl dec pop xchg xor aam enter xor ss jg push dec hlt lods pop jecxz test (bad) lret sub sbb push iret jmp jecxz pop sub rcrl jecxz mov add pop repz out xor push insl (bad) jb mov sti test das push jne or pop pop push xchg arpl test cmp hlt call imul das mov and cli rcll (bad) notl dec jne xlat iret dec (bad) mov (bad) mov data16 roll push sarb mov cmp push ficom mov dec sub dec inc das in or lahf pop movsb call jmp out mov add lret enter inc cs jbe sahf adc fnstsw and inc sbb out incl sub in (bad) repnz dec out pop mov pop xor cmpsb jae jmp xor mov pusha insb rclb bound (bad) xor in sbb xor xor shl inc pop and pop pop fistpll (bad) fcmovnu xor adc arpl pop dec cli jo ret pushf add or cmp cmp ret or cmp outsl jns and inc pop mov les cmp (bad) ja or mov pusha xchg lods push int3 imul scas in sub mov and sub fcmovb rorl div (bad) je movsb aam int3 inc clc dec ret arpl xchg xchg dec loopne ret jne xor enter mov inc test add mov xor out out push pop cmc xor xchg or add lock int (bad) mov ret xlat push movsb lret or in test imul adc stos dec jae jne jno inc inc xchg dec fmuls jae or add add out outsl cmp cmpsl dec outsl ss rorb dec ds stos mov data16 pusha jne jle test imul push cmp mov xchg push stc jnp push xchg mov xor inc push mov stos mov outsb scas and xchg clc or push arpl inc xchg adc jo popa xchg leave jl cltd jno add sbb outsl aam lret dec decl jno sub inc cmpsl xchg jo out mov sub push pusha adc mov ss sub push popf ds pop fisubrl out call dec lock dec loope push xor mov mov inc push and push repz mov or mov sub cld mov add sub hlt xor into les inc or inc cmc popa std dec stos cwtl inc jecxz int insl sbb mov dec xrelease sub cmp mov dec fisubrl xchg (bad) addr16 rorb sti outsb dec dec popa sti ss popf mov or fbld (bad) xchg or push movsb adc fwait xchg scas into decb dec cmp sub sub sahf sub push iret xchg movsl mov int pop sub mov mov mov push test (bad) lahf pop movsl imull lods cmp pop push call dec test lods mov xor inc jmp add dec fs inc jecxz inc addr16 loop pop push out test loop xchg mov or (bad) mov cmp test or sub pop pop fwait jl push add in adc jnp pop mov es or ficoml mov rcrl sbb inc iret jl jecxz cmp push addr16 pop push mov imulb adc or int3 add sbb adc (bad) cmp int3 mov pop push ss pop cmc movsl ret and sbb sbb dec scas lcall pusha push ret jns daa rclb ds ds push cli xchg mov mov inc fdivr popa mov loop xchg cmp sub js outsl data16 xor fildll dec icebp stos das inc in clc imul jl das or cwtl xchg sbb sub insl pop fiaddl jg enter xor mov pop (bad) xor out adc lds jbe mov mov push dec jp fcmove cli adc dec les ss imul or mov mov inc (bad) pusha clc aaa in jmp cmpsb stos mov lock jo into sbb or imul ja es jne lods ficoml fadd jo dec call jmp push insb push cmp add test scas aad add jmp inc test xchg (bad) arpl out jmp mov jae jp loop mov lahf cmp daa in flds cwtl (bad) in fsubr mov test xchg push pop insl jb (bad) mov xchg mov insb repnz push pusha jmp xchg xchg or out inc adc dec jecxz add adc jno pop gs sub cmpsl test enter cmp dec mov (bad) xor movsl divb lcall sbb test js cli mov test xor and adc inc add fbstp js or ss out add stos xchg outsb sub mov inc shrb fsubrl jne jne adc jb xchg ja mov (bad) in xchg fwait lret mov pop repnz repz adc sbb das jmp xchg jne pop in and repnz (bad) jle pushf mov jne inc sub add pop adcb xor fsub jo mov push lods push mov or jge pop outsl dec bound sub lcall mov (bad) fldl xor loope dec sbb inc fdivl cmp lcall jbe jge into (bad) (bad) jmp push jecxz or sub shll and mov and out mull ds jp xchg or xor xchg imul ret arpl fnstcw fsubl jp aas loopne mov ret ja inc xchg rcll cmpl and mov (bad) scas adc xor popf and xor inc arpl xor jle sub enter rcrl inc jns xchg jno aam and test movsb push mov cmp inc xor sbb or dec negb mov loop in shlb dec movsl out pop jl (bad) repz imul insl cmp aas mov es sbb inc fiaddl loope inc jp inc outsl sbb aam cltd ja jns sbb pop in xor push lret lods cli and inc dec and mov seto ret or clc push mov js pop mov dec adc mov adc lret imul imul dec in push dec aas imul xchg in stc dec lret sub jecxz push dec xchg add das mov jl clc lods mov aam dec xor sub jge mov xor jg sbb outsb into sub (bad) lret dec sbb ret mov lods pop push and push jl or cmp jno inc adc nop mov fsts loopne pop or mov inc in mov jbe xchg std xchg inc jo stc jl shll xchg xlat inc inc addr16 sbb pop sub adc clc push inc hlt repnz and push mov and (bad) (bad) mov sarb xor dec push xchg mov je pop and ja dec lahf aas clc ss lods (bad) out aaa sbb in aaa cmp test lock movsl cltd jnp pop push ljmp cld in inc fdivr dec mov adc (bad) mov out repnz cwtl or in and adc movsb sub sbb orb xchg rclb mov fistpll inc fisub lret pop out fs mov jnp jno gs std aad insl mov (bad) mov movsb sbb ss aas mov pop sti in mov iret push aaa pop or xor fucomip or clc inc in ja and and lds test scas insb inc jb mov aas cmpsl mov (bad) leave add addr16 lcall fcomi push lahf rclb fisubrl adc jecxz fnstcw pop cmpsb and dec test and loop or mov ret fsubl add icebp (bad) (bad) xchg subb popf mov sbb mov add mov sub sub decl je cmp mov mov fs sub in in xor push repnz inc mov dec jne dec xchg pop inc (bad) pop xor fcomps loopne sub sub mov xchg fnstsw push test fadds outsl loopne xor (bad) fildl nop push into nop cmp outsl in mov cs push sti add stos push adc mov ss cmp stos pusha pop pop and mov divl push sahf mov dec fst cmp dec in int pop sbb pop jecxz rolb xor ds cmp pop fsubs ds mov push xor mulb cmp mov (bad) in mov sub cld and int fwait sub cltd jns fwait sbbl dec call out out xchg (bad) enter dec pop ja data16 dec gs cmpb dec aas mov push aam mov fcmovnb and xchg jg notw ljmp mov xor pop not (bad) pop int lahf lret push icebp jmp mov mov jns dec pop in cmp xchg test and pop rcl mov xchg jmp dec popf (bad) cmc inc or leave or setle mov mov push jno enter mov imul adc xchg lods and cmc mov or lcall xchg fistpl push jbe imul imul mov and jae arpl xchg or and xor jbe xor inc cwtl add dec (bad) das in ds pop jnp or rcrb aad es dec aas lahf pop mov mov inc dec mov dec movsl cmc sub mov mov mov addr16 add sub dec lcall ret xchg mov inc aad sub xchg jecxz mov mov cmp cwtl adcl fwait aas mov out sbb cmp rcrb mov arpl fsts mov mov xchg sbb jno mov push movsb movsl cmpsl lds call and pop js lret inc (bad) movsl rorb xchg jle stos jno xchg enter sahf (bad) das je mov mov dec fnstenv dec pop lds sub adc in testl add lret pushf jp (bad) test add jb sbb repnz mov outsb mov xor clc cltd inc mov mov xor inc (bad) cmp fucomi fdivrs adc daa jp js dec (bad) and jbe pop add shl outsb dec mov roll sub add ljmp out xchg xchg ljmp xor xor rol aas int3 jbe cmp jg jnp mov ss inc pop sub mov cmp push movsl mov cmp jns (bad) out add jbe mov ret cmp push gs pop sbb js inc xchg add loop xlat rcrl sub shr test arpl and aam cltd push sahf push inc xchg or or popf pop fwait jb rorl mov pop rcrl sti icebp xlat sbb (bad) fildll (bad) addr16 imul das dec aas lea out dec and adc jns bound mov mov add sti dec xchg jg xor or and js pop pop cmpsl ljmp out mov lcall cmp ja pusha and mov das xor xchg nop popa xor cmp jecxz sbb mov das cmp leave mov pop cli enter outsl add cmp xchg cmp cmc push and aas mov fs (bad) xchg lret fistl xchg insb sbb push inc lret movsb jae push stc dec ret fsubrs sbb add ret stos mov jl out test rcll inc out sahf pushf add mov sahf adc jg cld fcmovu add or lret or (bad) fmuls xor lret es in sti add mov cwtl mov ljmp into sbb sbb loop xor push adc andl and (bad) cmp mull stc mov adc add into scas scas or jnp xchg dec and cwtl leave mov push aam imul dec aad (bad) mov leave jo inc xor and lods testb lret dec sbb jne enter or pusha xor jmp (bad) cltd das fcmovb fstps jne inc stos (bad) pusha xchg and lcall bound add hlt dec pusha mov (bad) dec and add aas icebp xchg jecxz adc dec or pop ja nop cld das mov sbb sub adc cmp or ss outsl orb push in sub sub inc imul out jp ja dec (bad) dec fidivl sbb aas sbb negl ljmp les jne cmp xor scas lds dec sarb (bad) xor sbb (bad) push dec out and cmp pop mov out xchg push fstp pop loope lods pop xor lods add adc cmp cmpsb or push and pop js dec cmp flds cmpb aas push les dec loopne clc insb cmp push cld loope push repz ljmp cmc dec cmpsb lcall mov push (bad) xor or cmp notl mov xor das jge jnp (bad) jg mov enter mov loop push (bad) cmp (bad) aam lret push mov mov mov cmp fnop and xchg in inc xchg aad fnstcw clc dec or and mov add or xchg movsb jg fdivl inc ss xchg or dec jno mov in popf cmc mov ret add xor fs (bad) call je push mov adcl aaa xchg inc in cmp ja and mov mov jle or cmpsb add cmpsl cmp leave jbe push adc xor or sbb enter negb jno and addr16 out push roll dec pop adc push sbb push and aam popa ljmp mov or mov mov cmp icebp int test std dec mov xchg popa or push loope inc sbb xor cmp iret xchg pop mov icebp lods std push jp lea sti ficomp and push add mov (bad) ja push insb cwtl stos outsl test repnz push mov xor outsb icebp cs pop mov clc shll sub sbb fstp mov fstps fwait jge mov jno ret cltd les jno adcl jns test and adc aas add pop sbb int clc insl dec je add mov dec lret into dec xchg aam xor push icebp pop (bad) scas lcall outsb test sub sub xchg mov dec idivl mov xor std dec mov jmp insb mov sbb out and (bad) jl es stc out mov out mov push jg fistpl cltd adc push mov stos data16 popa cld jnp xchg stos jp push jns in cmp mov adc sub fildll call lock iret cld jae pop mov fisubl in push fbstp mov imul jp ret jns lds push je jl and int3 mov cmp jae mov mov jnp cmp push loop pop scas sbb and jmp ja (bad) test mov add int (bad) lods clc ret (bad) lcall lret jl je lods lea lea adc cmpsl sbb int3 jnp fstl or sbb clc test inc adc jp cmc imul in mov pop xchg stos push sbb mov xlat aam popa or jle adc pavgb pop xchg clc cmpsl push daa inc xor idivl push mov jo push xchg (bad) pop imul sbb or inc push adc testl mov divb xchg je push pusha pushf sub aas sub push xor sarl rcrl mov mov jp pop imul sub mov xchg adc mov dec fildll mov aaa sub push out adcl adcl inc ret xchg cmp (bad) roll mov pop in popa loop jnp dec mov jg cwtl inc cmp mov mov jge jecxz je jns inc dec bound pop pop mov sbb adc jmp pop idiv dec jle and out adc mov fs mov push outsl sbb hlt push xchg mov xchg pop andb or adc sbb ret or cmp dec xor daa xorl pushw mov pop ljmp es (bad) data16 xor and ret sub and cmp (bad) outsl or push int fnop mov insb jb push out and push out xchg loop adc nop sti and inc push jp arpl add imul or arpl fldl (bad) dec pop aas dec imulb scas fwait insl je add test subl ds into fsubrl cld xchg inc enter mov ljmp inc cltd mov mov (bad) push inc jle dec andl ss repnz ds add mov and add leave sbb inc popa mov fsts xchg push xchg dec cmpsl in push test pop jnp dec push pushf sbb std cmp in fwait sbb dec pop out cld mov imulb jle addr16 mov and and dec pop mov xchg cmpsb jo sahf rcl inc pop insl pushf xchg mov mov mov and mov out out int3 lahf or cltd insb cmpsl cli stos ds sbb jg push cmp jl int3 mov mov mov pop jmp and fcmovu and or insl cltd pop enter in sbb stos fdivrl cmp sbb out ljmp jns dec cmpsb push dec dec mov jbe jb cs and (bad) icebp push int3 sahf jae xchg inc pop imulb xor mov cmp push jns mov adc icebp (bad) or add xor pop jp push es xchg lret ficoml jge pop dec sub xchg mov out pop cmp jmp addr16 sub jge jg sub das dec push mov add pop mov or (bad) xor jb loopne out adc dec push xor or mov mov fidiv cltd sar lret inc inc mov mov xor insl loopne sbb xchg jg fmul push int adc aad jnp sbb pop adc xlat out push inc enter imul xchg mov ds jbe mov xor cltd shrb jo add sahf jmp push cmp xlat add sub and pop lahf cld mov push cli mov add inc xor xchg inc (bad) push sbb popf xor jnp sub sub mov js outsl call pop sub xor and push mov jns add pop mov jp out xor sbb test repnz jl andl in mov test (bad) xor xchg inc aam mov loope hlt outsb pop fiaddl (bad) insb push ljmp lahf sbb add loope and mov pop insl decl push mov mov pusha adc xchg iret ljmp mov ja cwtl enter movsl mov jge push mov push push mov lods rolb ja add popf dec mov or sbb xchg and adc les inc mov rolb and out lahf inc add pop jmp ret mov scas rol jnp and jmp subl mov stc lcall call push (bad) mov xchg xorl adc jle negb repnz jns in pusha enter mov mov ret fwait outsb pop dec push cmc push ret xor and xchg shrl movsb fchs mov js fnstsw out xchg fidivl pusha jae lahf (bad) pop (bad) ja jg cmpsb xchg inc ret or lods test xor inc les cltd enter or or jne sub sbb aam jo and add pop jecxz fistpll xor mov ja dec pause and adc xor cs lods insb aad or mov sti mov cmp loopne int3 les jno inc xor mov es lock (bad) fadd jp popa imulb pop inc leave and push push jecxz aas insl out sti (bad) outsl dec or push stos cmp jg fidivr mov xchg cmp sub repnz adc sbb push jge fbstp es movsb jp (bad) sbb adc cmpsl rclb lds xchg xor shlb cli xor sbb mov xlat cmp inc stos mov in adc mov pop (bad) fist mov push sahf loopne mov cmpsb fnstenv out std cmp bound arpl fcoms shrb sbb adc inc sbb cmp and in inc rcrl into jnp lahf cmpsl jecxz sbb and pop mov ret in push ret pop std cmp lea push xchg adcl nop fdiv xchg stos cmp xchg mov sbb cli xor dec cltd sbb sbb aaa or pop (bad) (bad) loopne (bad) ret (bad) jle cmp add push mov daa jg mov or jo mov sbb xchg adc movsl mov add jb fildll adc cwtl insl test ret fimul shrl cmp ja add clc push pop add cld mov aas lock mov sbb mov inc xor (bad) addb aas sub lret or mov cltd inc aas xchg cmp in mov mov test mov pop xchg add xchg push fdivrs pushf ficoml (bad) in push repz mov mov ret and imul (bad) ftst adc roll inc div out jg sub jge xor jp dec je and in adc jbe cltd jp jnp rcll jne fst xor xchg fstps nop cmpsb pushf inc sbb call iret repnz mov dec sti and dec pop xchg (bad) xchg sub inc mov outsb mov xchg shlb les outsl xchg mov nop test inc popf and cld pop push outsb test jae dec mov inc adc mov cs fildll pushf lods pop mov dec fs pop or xchg push push pushf out adc mov jno xor fsubs dec sbb pop aad add mov into enter or stos xor pop lods ljmp adc outsb adc mov insb (bad) xor cmp pop std (bad) xchg outsb js (bad) (bad) dec jl fdivs xchg mov push cmpsl mov (bad) pop test pop outsb mov lcall xor jb and outsl push push mov setg xor es mov mov cwtl xor stc mov sahf pop cmp in inc insl outsb cmp and inc inc ret ljmp mov inc sbb loopne mov cwtl (bad) push std call cwtl xchg (bad) mov adc xchg vmptrst outsb sbb rol repnz hlt adc mov aad addr16 xor es outsb inc call add push push in (bad) xchg out mov xchg pop xor loope or sub cs dec popl ficom jge enter cmp adc ds mov push pop pop cmp sahf ficoml xchg cmp loopne pop adc imul int and mov scas push mov pop and add inc dec stc cmp iret inc xor and jmp mov jb jle push les mov (bad) mov add mov xchg xchg mov dec popf dec int3 cld fldt push push and sbb lock arpl mov mov inc and dec jnp and mov test jae,pt push sub sub or into out das xchg sti push scas data16 in or addr16 jmp test pop jge in mov mov ficoml sbb push dec into dec movsb loope sbb icebp adc mov outsl xchg mov movl adc rcr mov jo clc aad xor or clc ss repnz andb push dec cmp sbb cmp sub or cmp jmp aad hlt aam pop sub fstps outsl je or (bad) repnz (bad) jmp hlt into out in movsl cmp jne pop sarl mov push xchg adc out call xor xchg aaa push in adc jecxz cmp sbb push push out iret dec sar xor ret mov inc lcall xchg clc in xlat jbe mov movb sbb fwait dec jmp jmpw dec jmp push repz xor test sub sub or mov dec xor push dec dec pop sbb sahf scas sub scas repnz imul loop jmp stos adc cmp inc mov add addr16 push syscall in or fstps pushf test inc xor repnz aad mov dec xchg cltd stc mov lds pop sub jb and mov test int3 mov arpl ljmp push insl arpl popf or sbb inc dec mov dec add inc adc mov mov loop pop dec ds jg xor jae and stc shrb sub sub inc mov adc pop sub decl (bad) dec test in push sub adc cwtl xchg pop sbb sti cmp mov mov arpl cvtpi2ps ret or fcompl and (bad) pop add addr16 mov loopne (bad) jbe out dec clc add inc cmp jo test pop push and pop aad xchg xchg fldcw js popa test xor adc push cmp push fidivr xor mov (bad) daa outsl std out cmpsl sub adc inc xchg add xchg sbb xchg (bad) and pop les pop dec in and mov pop scas mov dec add je mov leave and gs push and rolb add out rcrl stos xlat rcrl xor xor and out out divl cwtl mov push push rolb movsb xchg jl in lds pop outsb xchg leave push out adc loop inc jmp fldcw mov enter dec fildl push ret pop rcll scas push std clc call push xor add mov iret out sub mov lds incb xor xchg push enter mov xlat mov lods sbb dec iret push das sbb or pop scas jae addr16 lahf dec sbb out sbb or dec nop into xorl pop es fisubl popa xchg push mov mov mov lcall jb sbb push ret test xlat xchg mov and cli jge dec mov sub lcall mov push lahf andl in mov lds inc test push mov inc cmp hlt pusha in jg (bad) mov in lods mov mov mov mov or clc inc in fcoml cltd (bad) mov lods pop stos call enter aad cld stos xchg dec xchg lret add jno jmp sub xchg mov cmc cmp bnd int3 stc dec test je int3 ja jnp insl jo ret call sub jge out (bad) sub xchg cmp and sahf (bad) pop xchg ljmp orl and loop dec xchg dec inc jge ret or dec ja jge mov push push and mov cmp add mov mov mov dec push pop ljmp cmp cvttps2pi inc mov das fnstcw mov dec dec inc inc sub movsl push add test or roll sub xchg fwait inc cmpsb imul fstpl mov sub std push mov push rol or mov or inc adc arpl or lea stos enter daa stc dec xlat add test pop sbb add test xor dec int push and movsb cmpsl movsb xor rcrl and pop xchg jmp mov les sub dec adc cmc dec and daa pop xlat fldenv icebp jg and fs repnz loopne xlat imul pop outsl cmp xchg (bad) nop cmp fst insl push sub rorb test adc ljmp enter cwtl xlat jge jp cld dec insb shll inc testl push xlat or lock push sub mov (bad) push dec lcall mov (bad) pusha js or xlat das mov fsubr lods xchg dec push push or cwtl addr16 fstp fldl mov sub fcomi sbb out xchg into cmp and push into aam popf rorb into adc fisubrl xor xor or xor or lcall dec xchg in sbbb adc gs fld insb int3 xor inc outsb push pushf les movsb test pop inc add out mov test adc das out popa add adc addl pop fcomps mov sbb push mov mov pusha aad ret enter sub cmc ljmp cli sbb inc js cmp data16 mov shll test shrb dec (bad) lods sbb rorb mov inc loopne xchg cltd jmp push int jnp push ss je jge cmp fidiv add lods ficomp mov or mov mov xor inc inc sub push inc jecxz jnp push push push aad ret cld movsb lods lea adc ds add es cmpsl (bad) xor dec out inc std or jl in insl mov push or int imul dec movsl addr16 adc test cmp pushf sbb sbb cmp pcmpgtd push rorb mov popf mov das and fsubl xor mov jnp sbb int3 cmc adc inc sbb shl mov icebp clc stos add bound inc mov mov mov pop sbbb xchg mov out mov lret lock out pushf jl cs aad cmc in jmp mov icebp int in add leave mov rorb in fwait sub pushl cmp out xchg add movsl outsb mov dec ficoml push inc js ja,pt push pusha sbb xchg xchg insl or push (bad) stos mov cmp push fdivrs scas lret pop cwtl lds (bad) mov out cmp (bad) mov adc add iret jb shrl aas adc out pop imul outsb unpcklps xor mov insl aam pop daa sti shll lahf dec mov sub sar fldt lahf out sub adc mov push call imul mov jbe decl or ljmp fs xor jnp movsl dec lock mov cmp cltd imul jl sub jl test fildll cmp and mov jg sbb inc push in mov lea mov hlt dec imul aam sub sub mov inc dec std aas aad sub sub mulb out push sbb fmulp add adc jg pop ret test ljmp test fs xchg cltd push sbb movsb arpl enter inc xchg mov loope jg mov les push sbb unpckhps stos and (bad) enter inc adc sbbl test jl aas (bad) mov or fwait and cmp lods cmp sbbb cwtl cmp jmp cltd cs mov pop mov sub dec out mov mov test test pop mov xchg stos (bad) mov push jbe lret cmc cwtl test sbb or aas mov out mov push sahf xor loop out cmp insb push aaa ror xchg insl popa test or xlat xor inc xchg inc or mov mov lock pop xor or and aaa loopne sbb mov xorps jmp ret fmull aaa jo jnp shr adc es pop push cmpsl mov insb lret aaa dec pop popf and outsl add pop inc testl (bad) stos adc repz add xchg inc gs test stos and icebp sbb xchg sti fsubl iret mov stos out xchg scas dec inc and adc cmp dec test mov and lods dec mov push mov popa aas cmp insb push mov mov sbb stos sub add mov rorl fisub dec or adc cmpsb sub jge fmull push mull mov dec mov repz add rcrb xor push adc jecxz fcmovbe or pop mov dec push les lcall (bad) scas test fcompl mov pop outsb stos call and addl das mov (bad) xchg nop adc add insl (bad) jno and (bad) lret mov mov out scas subb insb ss iret jl sub cmp shll cmp push repz mov xor imul idivb pop faddp mov fidiv add leave jno popa xor test (bad) sbb arpl loope scas pop mov sbb aas inc push jge cmc mov and iret or fmuls jg lahf inc dec jle (bad) outsb jmp loope sbb or loop fs mov (bad) cs stc (bad) cli xchg inc mov cs loopne mov jge cmp adc fwait sti shrb insb in out add sbb cli das out sahf pop jae fisub (bad) add inc inc iret adc dec in jo push pop pop add pop mov rcl cmpl call lea xchg in cld push mov push sbb and (bad) (bad) insl xchg cmp roll (bad) lea jmp sbb lcall xchg pop cmp iret mov aaa push mov push ss stos or push lret sbb call mov clc sar push xor pop adc dec xor (bad) xchg les movsl out sysexit (bad) sbb stos mov loope insl push jb out es mov call xchg cld nop mov mov jno lahf es (bad) std mov outsb mov mov jge and mov dec jno test fisubl (bad) jecxz insl mov push xchg push or iret push pusha and lock cmp or mov movsb or fcoml dec sub mov dec cmp sub jnp cld inc xchg cs mov fcmovb xchg popa lods lds aas sub in aam int pop fnop dec testl icebp mov ret ds dec add fstpt pop xchg stos cmp mov pop aam mov pminub icebp xchg divl sbb adc sbb arpl sbbl out jle push inc mov dec jb push sbb add adc lcall outsl dec inc jnp mov fcomi pop addr16 and dec mov cwtl mov es cmp popf and add sbb hlt movsb pushf push notb aam insb scas pop idivl push movsb mov adc add fwait repz sub jg inc imul adc pop in dec daa into loope mov pop push jle mov or cmc cltd pop adc call mov dec mov sbb ficompl (bad) xor vhsubpd insb mov test cmp lods or lods cld in test lods sbb jbe mov out in mov sub lret pop (bad) adc scas xor jg stos insb insb push or sarb fimul add icebp mov and dec add mul add and rcll xchg mov scas insl out xor sbb and sub sub cmp ljmp inc (bad) mov mov push stos loop push jnp cltd pop out adc addr16 add pushf and mov jb sub insl cmpl push xor inc cmp or push std fldt rorb repz lahf push jecxz adc lock push fs mov lret mov ret dec scas fnsave push fbstp pop pop xor xor jae sbb jmp out sbb sbb push dec push and lds sti rorb sub push or sub mov fcompl js cmp test fs in out dec cmp notb das divb arpl sub in sbb out xor pusha add ret dec dec pop adc ja fnstcw push fcoms push push cmp (bad) fs scas jns push push jb lahf push adc cmp jnp fwait ret rcl pop (bad) cwtl fstps stc out adc mov loopne test (bad) xor mov popa sbb adc repz nop pop ret jge out adc iret in jmp je or pop imul add jmp push mov call in add adc push mov sbb inc sub ljmp push sub sub cs push jge inc jle test sub xchg mov arpl mov cmp cmc mov sbb fwait les inc or shlw icebp mov jbe (bad) rolb fistp jns pop mov shll cltd mov fcomp xor cmc pop (bad) push out out fsubrp add push jo push sub in out dec stos aas or test cmp imul nop popa test push push cmp mov je lods fsubrl rcll iret and stos nop int3 lods ja out les movsl mov pushl jmp mov (bad) xchg (bad) xchg rorb dec int or jle push push mov or out inc les sbbl into jge lds mov movl mov in dec mov fcmovu mov cmp xor test rorb loop iret mov dec je shrb aam xor mov fnstcw adc or aas inc push roll and in call insl push cltd and icebp pop fistpl xchg dec stc sbb (bad) mov xor adc fbstp into push js (bad) cmp inc cmp sub mov cli mov mov pop lret mov loop xor daa or sbb mov pop xchg daa jg xchg shl outsb pop xchg int shr int inc mov sbb push add sbb mov rcrl repnz pop xchg icebp repnz cmp jnp jne ret cs leave jb aas fnstenv inc dec loope jae fisttpl cmpsl xchg add sbb iret xor adc xor imul repz cmp xchg sub mov jmp sbb or mov cmp arpl mov inc (bad) mov les dec adc sbb jp mov jne inc dec rclb js mov xor je dec call add stos dec subl lods rcr test lods lds mull or ret popa fisttp outsb mov std cmp pop sub pop aad jp movsb pop cmpsl fisttpll test jge aaa shrl inc ret push xor repz out dec lods js push mov leave imul stos repnz inc aas and and or test inc ret scas aad out lods lret cwtl stos inc iret pushf pushfw pop flds mov mov and inc push add subl push sub jmp xchg inc cld rcrb sub je movsb pop (bad) pop fsubrp mov jle andb fndisi(8087 mov aam xor and repz xchg ds inc jge lock dec ficoml lret cmc and popf clc (bad) bswap cltd subb mov faddl arpl sub pop out test in jp aaa (bad) add mov aam stos add lcall dec push xchg dec inc clc pop imul and pop pop lds adc jmp cmpsb stos movsl mov ljmp int3 sbb fdivl jp sub call call dec cmp addr16 fimul lds pop push dec xchg or jl xchg dec ror aaa incl xchg mov xchg xor sbb xchg xchg mov add xchg add push cli inc and xchg cwtl xchg cli sarb loope imulb pop outsb sub and gs fs jae inc inc inc pop cmpsl mov jmp ret jns mov inc clc jno mov inc (bad) out jmp adc add fldcw xor pusha andl fsts pushf icebp jns sbb and add shrb arpl lret jbe and test outsb shll mov sbb out ror and adc sub adc xor inc add aas ja pushf out nop jmp insl sahf add inc fild repnz addr16 add shll adc jecxz and xlat add pop loopne push cmp fwait das ss repz dec jns and mov sub jp popf ret test pop insb or call sarl mov clc in jl jmp push in mov xor or lods push dec push sbb lret push lock jnp sub sbb lock xchg inc jge lahf lret mov insl and addr16 and (bad) ret xchg iret xor mov mov or push enter repnz imul pushf inc inc in flds adc mov dec sub jbe and test pusha or fdivr push xlat cmp xor mov jecxz sbb mov mov mov rcr ret xchg (bad) hlt or xchg jl out insb mov inc cs rclb jbe cwtl (bad) adc jl or out xchg enter inc push and mov sub jns jle sarb or ror mov and push mov out xor scas and sbbb mov or fidivr shlb mov fxch lods push add test jl push mov stc rorb loope xor pop mov mov cmc jmp in ret loope decl imul inc repz cli inc aad xor jecxz fucomp jo pop mov fisubr cwtl std pop mov pop lret aaa mov mov out jb test insl repnz jo jbe outsb and inc fstpt sub cmc push addr16 inc (bad) nop or inc mov mov push xchg inc into in adc sarb adc insl in adc loopne cmp (bad) loopne or mov xchg fcoms mov adc mov ss mov in sarl lods ficoml or push pusha sarl cmp not jl imul xchg jno or cli iret (bad) cli xor lock sub adc fcmovne loop or sarl sub (bad) (bad) scas (bad) jno loop aad mov jp (bad) out (bad) jae aad xchg clc out mov sahf xchg xor lods or fldt les aam jg,pn jp or or popa xchg outsb es push sub xchg cmp cmp inc mull dec and add xor dec jno mov xchg and in int3 leave shr gs flds cwtl das (bad) xchg jecxz subl cmp mov (bad) and hlt push test xchg or mov mov inc cmpsl push sbb sub stos lahf in push stos into aas or and or hlt push rclb cld les hlt jge js (bad) mov inc ja or (bad) jle lret mov std cmp adc shrb movsb shlb cmp xlat inc inc add cmc sahf mov xchg sbb mov jp mov mov or or cmp fcmovbe cwtl jo lcall mov mov insl jp,pt fs shrl insl mov sub outsb ds test mov inc jne enter std ret pop pop push stos jo jnp subb jns and test jl test pop or pop xchg stos sbb xchg adc xor (bad) js inc fsubrl out (bad) xchg mov je icebp inc xchg cmc pop ja into shrl lock xor mov xor bound stos in ljmp jl aad cld sti xchg outsb iret inc fcmovnu jae mov xchg je dec add out into add leave stos jns jbe mov add mov and call lods inc mov cld es ds lret test push stos stos mov dec aad push mov jg andl adc push call pop and dec inc cmp int test dec pop jmp xchg outsb sbb add popa jbe sbbl int3 or jg jecxz cmp add shll push jmp sub cmp cltd and push add mov push dec mov divb rorl pop stc ja xchg cli hlt add xlat icebp sbb jbe out cmpsl xchg xchg jns cmp lds test and clc out dec mov mov add out xor ja lfs mov jle xchg psubusb loope xor ja mov fnsave xor cmc dec les xor sbb stc pop cmp mov adc scas mov fwait xchg test jg jns or mov mov ret jnp (bad) mov xchg mov int3 inc sti fisubr ja ret xor ss popl add (bad) or in cld sti and and cmp inc pop xor pop pop sti rcl xchg or xor sbb cmc popa fwait ret into lcall aad mov lret popf push jb loop jb mov dec mov mov loop add or jae xlat jbe xorb and pop aas mov pop cmpsb cwtl dec adc into aaa lods jae stos jns sub push sti mov cmc loopne inc aad sbb jecxz xchg mov mov xchg gs sti das cmpsl enter sub fldl sahf call push mov outsl pop xchg xor jbe and cmpsl ret jae ficomp ljmp mov push mov mov dec sub dec push rolb cld mov inc push mov popfw sub cmp push cmp inc xchg cld ljmp mov dec sub xor add mov dec mov lret testb dec das ds push loopne leave cmp (bad) out ret sub repz stos (bad) or stos jecxz leave out push rclb push stos or (bad) pop inc mov rorl sub add daa movl ss pop pop and enter mov rolb sbb (bad) hlt lods lods lods int3 cmp mov xchg aam xchg gs or pop sbb and or shrb or sbb (bad) jo js movsl mov adc xor ret sbb mov push cmpb ffree jne dec pop in mov xor mov add jnp mov repnz sub xor xchg jae (bad) xchg jno out or (bad) (bad) fdivs mov test cmp or ja lret out mov xor jmp hlt mov mov cld arpl movsb pop jae fcmovnb cmp imul sbb arpl ret (bad) mov repnz fdivp adc pushf xchg dec das mov les pusha int3 mov adc push fimull pop aad push in or mov mov jle cltd sbb dec popa mov in dec jge jo stc sub dec mov inc and lods sbb pop and imul dec cmpsb pop imul daa lcall cld cmpsl cmp ror icebp adc imul pop mov hlt and jle xor xchg js imul cmpsb (bad) adc cmp pop ljmp lahf inc mov jo sbb adc mov (bad) pushl mov addr16 out scas scas or rorl or (bad) sbb mov dec adc fs xchg ret jnp push or clc xorl pop mov test cmp fsubr mov mov pop sub mov mov push xorb inc inc enter cmp ret mov cmp pop xchg out (bad) popa mov gs addr16 jg inc cmp inc mov cwtl add aas sbb xlat std enter mov mov imul mov not xchg test dec test pop pop mov dec pushf cmp cld ret insl mov cli push pop dec out cmpsl push jae jnp or adc dec ljmp daa inc in fiadd scas push xchg sub jbe lds push leave hlt push xchg sub shll daa dec aam sub scas mov data16 inc inc dec xchg mov (bad) mov scas test pop icebp sub je (bad) jae aaa out das jnp add jne jns aad fsubs addl mov cli cmp inc xchg jge jl pop sbb sbb sbb aam imul and insb fldl ret les testl jle or cmp inc mov das sbb cs fidivrl out arpl (bad) dec cmp mov pop fsubl (bad) cmpsl cmp aam ret xchg leave mov stos mov cld mov and dec mov ret (bad) stc in fildl jle sbb mov fstpt mov pop dec inc int xchg push jb xchg cli in cli cmp jae and aad xchg out (bad) stc jl inc mov stos or ja sub mov mov cmp adc inc rcpps fildll (bad) sub mov pop out sub inc push inc out ret iret es mov and xor dec xor mov je in inc es cmpb jo mov cmp sbb int sbb and cmp lret jne mov leave lret enter inc jecxz sub dec push fsts sbb dec test aaa in (bad) pop lret add test je mov jle mov pop pushf enter fistpll lea pop mov repnz cmp daa stos ret push and adc insl sti lahf ret lds loope cli mov loopne leave mov add jle hlt xchg jno (bad) mov fiadd mov insl movsb pop jp test notl ficoml (bad) cmp out scas xchg imul pop mov push add mov fnstsw adc dec arpl sbb test ds enter sub das ret jmp stos jl loop adc lret fnstsw lret cmc jmp arpl push orl hlt jno jp mov pusha cwtl dec (bad) dec (bad) pop std popf fidivr (bad) xor sbb mov (bad) mov and aad jmp pop jl,pn mov cmp fbld fst aaa or sub ret dec test test sahf xchg pop or test in repz adc jmp inc push movsl mov cmp outsl cmpsb cwtl out fmulp aas inc push adc fstps sbb sub dec in jbe in mov push lods repnz jle lret les mov or insl shr loopne decb (bad) lods nop sbb push add sbb or xchg or std call cmp out insb mov outsl mov cmp and dec jae sbb jp sub bound inc mov inc (bad) js dec jl sub mov mov pop sarl mov fs lahf (bad) hlt add (bad) pop cld dec mov xchg bound mov lods icebp (bad) ja cmp add stos pop les mov pop pop cmp push int3 xchg pop cli repz lods jo in mov inc mov ftst fsub in adc pop and cmp repnz movl fcoms aad mov ret xor adc sub add (bad) in into aas cmc gs cltd inc jmp inc pop cmp (bad) rorb in outsl jecxz movsb roll in dec adc mov push testl add lret call jmp jge pop jge fwait cli xlat or into jne pop ret inc dec jno lahf inc aam xlat test and add mov movsb arpl out and insl in mov ljmp lcall cmp cltd roll loopne ds xchg insl idivb out or xor sti dec lcall lret mov xor mov scas xor imulb push movsl stos in jmp jbe dec jecxz rolb pop inc push shl movsb lret ret xchg jno and mov divb incb cmp cli outsl js sub imul push les (bad) outsl cmp xor adc add jnp aad sub mov inc mov xchg pop out lret insb xchg loope mov xchg mov data16 pop hlt jno iret add pop icebp adcl (bad) or cmp sbb sbb aam fild sub mov pop sbb xchg iret addb repnz mov stc mov insl push sbb adc sub sub add inc xchg adc and inc (bad) sub add stos mov and inc into and fisubl mov jb je mov add sbb inc xchg incb fs inc fsubp xchg cmp leave push aas push fsubr adc push test sti (bad) lret repnz fwait js repnz jmp cmp pop mov mov mov loope movsb lcall movsl adc xchg jns or push (bad) jb fdiv pop imul or dec and and jecxz test ja aad sub out imul push (bad) stc aas in shr mov cli testl push xchg lret adc mov (bad) faddl sbbl or xchg mov mov push push sbbl jmp xor in xchg cmp cld sbb jo xchg mov xchg sub lods push jl jge sub inc and adc xchg jmp cmp pop bound push ss dec cmpsb push (bad) je arpl add scas cmp aam mov mov sbb jle sub (bad) adc inc cmp fwait cld notl push sub into decb inc push push mov inc and pusha inc out sub mov roll roll outsb xchg stc xchg ljmp ss xchg jmp mov push cmp test cmovo mov lret (bad) jb es lahf dec push sti push sub or xor out or (bad) imul repnz adc mov jge inc test enter loop pop insb sbb adc cltd add (bad) in push cs aaa jmp or xchg (bad) cmp xor add jp adc cmp faddp int3 js push lahf and (bad) mov xor sub movd or jnp inc in inc mov xor mov lea pop repnz js (bad) arpl outsl adc loop inc and movsb movsl jl cmpsl out insb repz out and mov std push call cmp inc xchg xor sbb ret add aas mov outsb (bad) cmp sbb lcall mov mov add mov movsl xchg and mov jbe pop pop mov push mov fbstp aas outsb (bad) jbe insb push stos sub mov cmc mov fiaddl cli inc les xchg inc cwtl push add pop sbb stc pop int3 add xor mov jecxz jbe mov aam sbb test mov div push rcrb lea sub movsb push mov shll test sbb mov mov push int std fisttpl out addr16 mov shr mov sub fadd mov jbe mov jge push xchg mov push mov add xor jnp or loope adc mov adc pop (bad) adc sub and mov in daa mov test dec xor jne sbbl add sbb ja js (bad) jne push add daa cmp pop in or pop mov xchg (bad) mov pop inc gs xor push loope sti (bad) in pop xor push adc dec popa push repz and loopne xor shrl test mov xchg stos add mov repz repz sbb xlat mov and pop fdivrs cmp std subl xchg jb cmpsl mov std sti das jge adc es sub jge,pt lods or mov cmpsb (bad) out mov cwtl jecxz hlt sbb jp mov xchg or cmp in mov ss mov and inc cs and mov mov ret stos jb inc mov push sahf xor imul sub adc (bad) adc jl loopne fimul xor push fist xor shr movsb fldenv ja (bad) icebp inc dec adc (bad) in ficompl jle lods adc inc or sub pop insl loop outsb add int3 movsb mov mov daa jne lea mov leave dec bound cmp into adcl add sub inc les movl data16 jecxz push xchg dec or jns and daa xlat adc xlat arpl xchg sub sbb std dec movsl jge ljmp cmpsb mov lods xchg hlt mov lcall nop fs in pop leave cmp clc outsl dec jo lcall (bad) scas jb and ret adc bound push inc mov shll inc lcall adc cld ljmp jle mov scas adc loope in lret rol dec and iret cmpsl and cs and jmp mov in lds push sub insb cmpsl ds adc pop add pop js ficom jo add je dec inc mov insb ljmp jno inc sub lods rep repz sub pop cmp mov inc into inc add mov mov xchg mov push loop push and das pop jmp into inc mov out bound rolb cmp mov push xor imul pop push push scas mov pop add push call out das loop add dec loop and lea hlt fwait push jg (bad) (bad) lods inc lds push cmp (bad) mov ret cmpsl and (bad) cld push lock imul xorb out int3 xchg cmp pushf nop sbb push jb out sarb stos int3 sbb xorl shr movsl dec aam js xor pop push jmp adc adc or leave pop movsb push pop out popf dec loopne dec xchg pop inc sub stc (bad) rcl jbe je stos and cli push dec inc ds orl loope cs mov add adc fnsave xor xchg nop mov int sbb lock cmp pop ret xchg popa xchg mov sub inc rol fcomip ret push fs sub sbb adc jb add in mov nop inc mov and lahf add xor testb or and xchg jg mov fisubr cmp and leave mov int dec cmpsl scas xor and add je mov cld mov inc or jmp inc fdivrl dec in test or rclb icebp xchg aas inc loop idivb sti dec cli out xchg pop or leave jo jne stos xchg fwait add pop mov inc mov pop stos cltd jecxz xor in sbb or movd ret dec cmpsl lods mov sub lahf loopne int ret orb (bad) and cli adc hlt jnp mov push popf mov or popa pop sbb aas outsl or dec push fucomp dec cltd mov (bad) xor pop call dec pop lods inc (bad) imulb dec popf mov fsub xchg in or jmp xor mov mov movlps scas push rcrb enter icebp das push (bad) dec das in jne mov stos mov out mov cmp cmp repnz and fisubl jmp jae cwtl or dec inc pop insb inc mov dec mov xor mov insl test test xor mov jle in jle pop dec lahf sti mov dec call and sub xor jmp sarl leave xor outsb jmp out fsubl mov or add mov pop lcall dec dec stos clc clc xchg mov pop lods addr16 mov jge std sub xlat add (bad) dec xor aam or popf mov fwait lods test xchg mov and ret test push push scas inc (bad) pop inc sub cmp adc std add xchg pop inc frstor in cwtl mov sbb out sti cli (bad) jbe pop lahf dec loopne (bad) test and adc xchg push xchg not ljmp push jmp or mov cmp outsl pusha sbb ja ret mov mov sbb std xor xchg pushw ljmp push mov adc xor out lods and add cltd dec popa pop aaa lods sub sbb mov (bad) sbb jns je cli pop adc dec (bad) mov and sbb or or push arpl repz loope,pn lea cmp cli aad sti jge flds fnstcw sub xchg sarb out and push loopne cmp movsb and aam clc fbstp outsl pushf movsl movl cmp lret jbe adc out or ljmp lock lahf in pop pop push cltd jo mov mov daa stc push loop mov fbld mov lds out pop fstl xorb add jnp push xor fwait dec sub push push cli pop loop mov jp push mov push and (bad) stos insb cmpsl aas outsb and jl mov sub mov xor mov push gs sub fwait push out (bad) and xchg inc adc nop outsb test fs in sub cmpsb xchg int test inc and mov mov clc inc dec and jg pop cwtl push cmp incl sbb fs mov or iret icebp mov xor or dec (bad) mov in inc daa push (bad) insb leave inc fimul cmp adc test or push loop lds and (bad) adc gs add mov push push jle pop push ja xchg jno pushf (bad) sbb rcll int3 xor movsl mov icebp pop add mov mov sti movb xchg out pop xchg mov xchg and dec or sti jmp js dec jg es push xor dec mov sarl cmp sbb xor cmc test pop stc inc ljmp (bad) dec jnp je jbe fld dec jmp mov imul scas or std loope dec lock mov loope (bad) mov fldenv pop jnp sbb jnp inc pop les dec xchg pop int mov test popa int3 inc xchg mov xchg sbb mov roll fimull into adc scas fsqrt mov int3 xor xchg aas nop in ret and adc (bad) add push jp hlt ds mov aam fnstenv and test jl daa jge cmpsb jno loop adc or pop adc inc iret test cmc add xchg gs and ret ja movsb cwtl test xchg mov push inc inc les repz icebp dec xor fbstp dec mov (bad) loop jo mov or pop test lock jae mov (bad) dec mov cs pushf sub out xchg pop ljmp call add add test jne push xchg (bad) not jle mov pop add pop repnz mov inc dec int (bad) pop inc push fldt ret mov shrb jg mov and in inc jge mov push mov xor into lcall stos mov or inc lret stos jae shlb cmp sub mov das mov sahf push out fsubr (bad) mov inc and fs jg push adc mov inc (bad) rcrl jb mov out es aad pop cltd adc dec xchg jae and loope in repnz mov sub int sbb fstps outsb ret xchg cmpsl adc push jmp push fistp imul das xchg fld xlat lds sbb xor mov (bad) (bad) and sub adc add jbe mov fbld jnp mov dec push push out cmp dec repz jbe pop or cmp cmp fisubr gs in loopne jae mov xchg (bad) push mov in sub pop outsl lods push pop mov leave (bad) jae lock or mov inc adc push shrl jne (bad) sbb jmp xor sbb xchg fs mov das ret xchg repnz sbb cld mov push xor cmp in inc in repnz hlt fsubrs push loop inc cmp mov and sbb sbb ljmp adc mov mov push rclb cmp imul test sub xor repnz jnp nop dec movsb notb jl pop arpl mov fdivl mov and push ss xlat and (bad) mov test mov ja fxch in dec (bad) rcl pop test imul cs dec inc into adc xchg popf jg lock shlb fsubs pushf fcoms movsl shr jmp lock xchg aad pop and jns fisubl fucomp repz mov repz sub ja out fwait and lock popf push adc add loopne jecxz mov mov fildl cmp inc (bad) jno add jl aam add add sbb loope dec mov pop icebp and outsb cmp jbe rcrl aaa push cmp and sub jo (bad) ret jmp add push push mov je sub movsb or outsb pop mov ljmp (bad) cmp nop mov cmc fidivl pushf insl push aam push jns pop in inc mov loope out cmpl push lds push push add mov add sub lds sub mov cmp mov test out addr16 dec lock sbb rolb add scas aaa in xor xor mov int3 repz les cmp loope jl add push fidivrl and add pop repz xchg fstpt jno mov rorl pop xchg xor mov mov stc lods xor jo or pop mov (bad) mov lods les pop xlat xlat ja shrb push cmp data16 insb das nop pop test test sub (bad) outsl mov sub and ja rclb test popa add pop xor inc lcall and int3 or dec repnz sbb (bad) imul ds push lea out es jl pop and cmp aam mov cmp ficompl cmc (bad) ja fwait sbb adc add mov add dec dec fnstsw fidivl pop imul or mov int ss nop pop out frstor cmpsl and mov ret test push jle and out push add imul insb rol int3 out lret sbb stos jae int3 loope int xor fldl inc out push lea (bad) stos push xor push std in pop mov dec mov mov cmc jp nop pop mov cmpsb mulb pop aad fcomip jb push out adc (bad) cmp jge int3 jne mov scas cmp pop mov mov out (bad) and lcall movsl and bound int3 bound mov inc jne adc adc into jle je fisub (bad) or in test xchg cmp sub pushf adc and cmp inc inc fistp pushf into mov lods aaa push nop outsl in xchg daa sub mov stos mov mov movb inc (bad) stos sub insl mov push push imul pushf cmpsl jne rcll inc (bad) fsubrs into push cmp push andl (bad) xor mov clc mov jb cmp inc xchg dec xchg (bad) jl and int3 int3 mov and adc (bad) dec cmp mov outsb mov mov arpl lret dec jecxz fistpll inc sub add lock mov test mov jae pop call lds ljmp push out in sub mov pop shlb (bad) and ret inc lret rorl or lds in scas (bad) mov imul push push mov or pop ja mov fldl cmp daa dec subb lret (bad) push ja pop out cmp push mov fdivp roll mov subl cmp pop push jne push cmc test sbb xchg inc (bad) lods mov pop in dec es fadds or cmp (bad) ljmp out jp fs sbb push sub sbb in xor adc mov jne dec xchg dec fisttpll aas outsl sahf xor mov xchg mov test xor push push or push cmp lods sub add dec mov cld repz insb jne xchg mov add in mov jg fcoms pushf mov aaa sti iret movsb sub jge xor ds in out add push mov repnz popa mov add jno and stos pop xchg jecxz mov push push cmc js les adc sbb sbb or add adc cmc movsl scas or ret and mov jns inc cs mov in test ret sub sbb outsb popa leave cld iret push mov (bad) mov and or dec data16 mov (bad) or mov jmp test lods inc aad xchg ret cmp testb mov dec sbb cmovo lock loopne mov xor fisub sbb (bad) das out and adc push pop rclb and push out pop mov mov jnp pushf add jns pop nop movsb add rcl icebp sub lds out outsb (bad) divb in outsl outsl pop inc (bad) sub cmp std sahf pop jno add mov mov lret (bad) cli xchg es ds push (bad) ror add xchg sub mov xor iret jecxz aaa popf pop adc repnz dec mov or pop loope enter jp sub roll mov sub inc imulb lret loop and xor (bad) fsubs sbbl mov pop push jecxz std data16 sarb add test jp inc dec sbb cmp scas cmpsb std push dec push xchg fadds inc and out jmp push push std sbb mov mov (bad) sahf push addl out mov and add dec add dec lret popf adc rcrb repz mov fmull or inc cmpsb add or or inc nop or push aam (bad) sahf mov daa sbb fildl mov sub js mov cmp cmp cmpsb iret loop and shlb (bad) push decl ffreep mov mov not xchg iret and out out sub or cmpsl lds gs leave xchg and or adc push and mov mov adc jne dec and jecxz push or inc pop jmp adc push and mov or movsl mov push js out or sub (bad) mov adc flds push inc mov sub mov (bad) pop xor sub cld xchg adc mov call mov movsb xor (bad) and ret xor mov data16 fwait insl push pop xchg xchg scas aam xchg push xor fs cmpsb xor adc mov lock rcll lcall popf (bad) adc scas xor push inc inc mov (bad) mov sub out mov mov sbb mov adc jae in nop insb lret cmp rclb push loope mov pop ret add cmp adc repnz inc sbb mov jnp jb xor inc test stos xor enter xor xor mov mov ljmp in pop mov enter adc mov sbb pop int3 cmpsl mov movsb cmp mov dec loope fs stos enter test mov mov dec mov dec movsb add xchg aaa or test loope sbb jne out fsubl mov jb mov sub loopne xor aam sub sbb xchg xor jmp jb outsb dec pop push (bad) xchg xor std mov push aaa pop add aaa and pusha data16 imulb xor xchg push fist insl das mul adc push dec mov push ret jnp lret inc xchg enter pop jbe and jb dec mov mov xor and xlat inc mov pop out cmp test lds adc out test (bad) push push shlb out or arpl mov mov ret jecxz (bad) jae inc popa ret add and or test ds mov inc imul or push cmp movsb cmp daa mov pop jp jb jge mov imul movsl sarl in push ss mov mov cwtl cmpsb rep and sub cmp imul mov and inc mov ja xor enter jnp dec inc mov bnd cmp outsb adc les inc ljmp cltd into or add mov sarb and push mov mov mov push sbb jp scas add in sbb cmpsb cmp add loop inc daa ret sub cmpb xor fnstcw or inc or punpckldq dec repz or pop xor outsb xchg cld cmp fst xchg ss mov dec add sub lahf jb or cmp insl cmp add jmp (bad) test lods inc lods jne lret movsb add (bad) rclb pop pop out sub dec xchg jp push (bad) test xor cltd mov cmp push popf xchg and xor outsb stc and cltd andl mov adc es mov adc jbe loope jmp jne inc inc mov rcl cmpsb and cmp ss pop add iret cmp hlt mov push xor leave lahf rol enter adc sub push pop mov mov jp jns pop out aad or or push mov sahf sbb fcomip call insb imul fldl outsl add in xchg fwait mov mov outsl dec mov lds in popa and and nop cmpsl pusha mov (bad) cmpsl test adc dec dec jg daa rcr inc mov inc js inc cmc enter xchg push dec (bad) mov les dec inc addr16 jmp mov adc mov mov cmp cmpsl or imul dec xlat jmp mov xor push imul pop mov xchg movsb cmp out xor mov push or xchg xor scas push lods jecxz pushf in add or shrl out cs (bad) gs and mov mov adc cmp jns mov mov xchg lds cs add cmpsb pusha jge (bad) aas aad push or es inc push mov sbb arpl jg insb or inc pop push push jmp mov inc andb (bad) shrb sub mov push bound or dec xor shll popa xlat lret (bad) dec enter fmulp rorb lcall stos mov loopne mov lds rorb cmpsl push sbb dec pop push pop rol popf xlat add sbb test rep mov stc inc pusha clc cli add out sub cmp cmp jb xchg sar add sbb mov push fisubrl sbb sub adc cwtl cmp dec fisubrl iret cmp sbb jp pop mov es outsb sub add mov adc in clc outsl repnz xchg jns sbb gs (bad) mov in inc push in mov into mov popl sbb gs jp and fs in scas pushf push inc fwait aam rcrl aam cmpsb sbb add std mov ss cmpb adc shrl ret cmp mov rorl mov inc mov mov mov insl dec cmp jecxz and or jg dec adc xchg mov pop daa mov icebp inc xor push ds insl mov jbe daa loopne push jne pop mov xchg and mov sahf (bad) cs cwtl sub jmp cmc loopne nop adc popa lock fs vunpckhpd fstpl sbb int3 js shrl daa rolb rorb push mov dec outsb data16 mov je lock popf pushf xchg mov pop or inc lret jnp pop dec gs add imul cmp fnsave dec enter xor or mov cmp aas adc pop cmp xor ror out sbb xor or jae (bad) and repnz movsb mov daa sbb add xor adc in cmp jg cs dec mov push leave sub (bad) adc or (bad) out push roll mov dec aas scas or pop rep cmp in mov outsb mov add xchg pop lahf sub out sub fstpl inc outsb xor adc cmpsl adc aaa aas mov fstpl stc mov fnop sbb push jns add inc jl jp adc pop mov (bad) mov test cwtl lahf test fst (bad) mov mov mov jnp cmpsl mov pop dec mov jb sub push push jmp sub jecxz repz push jmp out mov xor jl mov mov add dec jo movsl stos ljmp push mov and loopne addr16 sbb add loope mov les in xchg adc xchg scas add dec dec pop les fs lret addr16 push xchg aad jno jge pusha and and sbb in out sbb movsl cmc mov imul jo add cld popl imul and popf lahf cmp push adc mov mov jecxz jecxz adc stos inc xlat adc (bad) out call icebp ljmp lahf adc push sub xor out sub outsb xor gs add add pop insl das gs mov cmp iret pop bound inc in or jle push sahf es mov inc push insl dec nop sahf lods push popa cmp les rorl movsl fdivr std fcomps add pop daa imul bound xchg adc ret mov mov or and adc add adc test (bad) add xor mov pop mov stos sbb cmp (bad) or and hlt sarb fidivl xor (bad) or pop fwait cmp or imul sar das mov rcr and (bad) adc jmp cmpsb les outsb jno ret fisubr imul xchg jae xchg into jbe push call out mov cmp cwtl jg add cmp cmp inc mov (bad) (bad) (bad) dec jle cmp data16 jb lret pop les xchg jmp in lea int sub popf cli mov mov cmc push xchg mov sub pop test and pop or push out inc clc dec sbb outsl jnp shrl push push pop jl push cmpsb xlat sbb cmpl inc push ljmp adc mov mov mov sti cmpsb dec mov andl and mov lahf ret ret jae or popf xor pop or rcr dec pop lcall divl ror sub fucomip add add jp cmpsb imul lea dec mov xor fistpll mov push push fprem xchg adc jecxz outsb int sarb dec movsb sub (bad) jbe xchg push fiadd inc push pop sti xor cmp mov xchg push test cmp adc call xor icebp movsl inc mov pop pop imul push lret out test das inc and push xlat fmuls pop mov cmp mov mov lret outsl add push xchg add (bad) pop ja mov xor dec daa add mov cld jl push mov (bad) aaa lods sbb xorl call inc mov out pop lret in pop fs stos sbb inc add sub pop inc rcll xor pop add inc mov rcll sti push jecxz jp popf inc lods jnp frstor jnp cmpsb xchg add stos dec in data16 ss push ffree idivb push inc ficomp adc loop jmp mul add mov lods arpl mov (bad) push pop cmpsb xor pusha sahf mov xchg xor imul stc cmpsl aam cmp mov mov lds fwait pop pop int sar repnz (bad) clc mov (bad) idivl sbbl mov sahf lods in mov inc adcb stos jecxz test sub jle mov lock fmull ljmp pop jnp bound ret test adc sub loopne (bad) lock push mov add mov cmp or push icebp pop ret fdivrs and add lahf mov mov pusha stos xchg pop lods movb jne test insl movsb in jnp mov addr16 mov stos in fwait sbb mov sub ja,pn mov or stos sub add cmc and cmp fild inc insl dec aam jbe ss dec cmp xor push mov cmp mov out and repz push sar pop push inc lcall xchg inc out (bad) jae pop adc push xor stos (bad) loope cmp cmp (bad) leave and insb lods or pushf sub les and cltd repz pop and dec mov (bad) scas xchg push les jp arpl insl sbb push dec scas roll push inc pusha or adc or dec pop in lcall cs mov inc (bad) je jno aas hlt mov xchg in sbb inc std mov (bad) mov sub pop out aad loop mov test out fs int inc andl data16 dec test (bad) int mov and iret and dec xchg push pop inc movsb mov sbb jae (bad) xor fisttpl mov data16 rcrb loope aas lds add sub out lret jmp push ljmp insb movsl add sbb in push js push test sub push mov xchg sbb outsl adc inc jecxz and lret loopne mov in movsb cltd sub stos xor push mov add ds repz leave cmpsl adc into mov mov cmp mov jge dec xor jl leave or add sarb cltd cmp push in push add xor pop mov push mov (bad) mov mov jg in cmp fiaddl lret stos call mov addr16 cmp fsubrp adc popf mov icebp inc adc std pop mov push mov fmul or dec jg loope fidivr pop loope mov ss jecxz and xchg push in mov and idivl lahf push inc (bad) imul ljmp ds mov xchg pop xchg mov ja std inc jno pop mov fdivs jge xchg fldcw stos sti jns dec xchg dec jp sub repz fisttpll hlt (bad) lahf jns and push (bad) neg push sub push jmp add push sub jb mov and test aas test jmp push sbb cmp xchg add mov push adc pop icebp pop fwait xor and add aad inc arpl ret adc xchg xor lret pop mov mov mov lock in (bad) mov pusha inc pushf and pop dec push das xchg aaa mov push aaa iret (bad) inc sub pop sbb movsb push movsl cltd (bad) or sub aaa xchg jecxz jmp fidivl mov out aam add fidiv arpl mov or lcall sarb std jns ret jbe (bad) fninit daa out mov inc dec cmp hlt mov icebp pusha sub bound or xchg sbb outsl arpl push push ret adc xchg mov fild cmpsl frstor mov pop cmp push mov xchg xor int3 inc jb add mov call and aad das mov inc in insl std adc jns rcrb cwtl int addr16 decb push rcr in movsb dec popa and js loopne xor push popl pmulhuw adc jle test sbb or lret sub shl mov ljmp push lds stos xor pop dec das or dec mov scas in pop mov pop cli jb (bad) jmp jmp push push jmp and lods into dec pop es jecxz lods cmp lods lahf movsl sub pop (bad) (bad) xor inc lds and addr16 mov sbb cmpsl addr16 (bad) sbb pop adc inc ja mov push ret push inc inc push mov sub arpl ffree nop or inc sbb mov mov pop scas (bad) popa xchg ret and push cmp mov scas mov and push stos adc mov movsl out scas mov inc push cmp aad test push inc out sbb imul inc cmp dec and insl into stos rolb clc adc push pop inc popa sub data16 inc lods cmc xor imulb jb push int stos or jno fld1 rcll call cltd out fstpl (bad) (bad) dec sbb and daa arpl pop shrb xor cmpsb hlt es pop mov sub xor loop xchg call and ds mov xchg xchg xchg mov inc and xchg aaa inc popf cli dec pop jo fadds mov sbb add out inc jp mov es ljmp lret fstl ds mov mov loop fstps test cmp and jo,pt or lahf sbb mov pop sbb mov mov div (bad) ror aaa cmp test jno mov (bad) adc push lds sbb sbb inc repz xchg stos xor movsb test lret mov (bad) mov lret pop imull push in nop pop rclb mov cwtl pop repz mov pop pushf popf sub movsl (bad) gs (bad) cs xchg push pop push dec movsb es inc xchg or lods aaa in mov repnz outsl scas xor inc push bound loop inc aas jae test mov sbb mov or pop ds push jecxz jnp pop ret mov or dec popa jmp jp in enter push inc cmc mov rolb loope stos mov and fnsave popf pushf push push inc rcl test and inc lods xor dec fadds and xchg pop (bad) mov addr16 (bad) push leave jmp adc imull insl sti xchg inc shrb cmpsb inc mov and or or movsb stos mov and lea in enter outsb enter popa mov jns rcrb inc jecxz les lret pop fwait adc add popf leave outsb pop sbb (bad) jne jecxz cmpl or mov int mov adc adc sbb stos insl adc cmp jecxz mov push loope push adc jp pop add fstpt shrl notb lods cmp mov mov mov insl sub sub mov cltd mov pop mov mov mov cmp mov and fsubl push xchg fimul sbb sbb test xor xchg mov cmp dec jl jmp xor arpl fild xor adc pop gs add ja es sarl imul fdivl sahf inc negl incb inc jb xor pushf (bad) push imul xchg cmp adc scas imul psraw addr16 inc mov push stos ljmp sub sub repz xor ret inc mov inc mov es pusha xchg xchg (bad) popa orl xchg adc jp cltd xor dec xchg fisub push mov stc into push inc ret lea dec mov dec idivb pop cli test addr16 loop (bad) sub into clc add call icebp sti pop adc sahf daa bound scas addr16 std stos adc or and adc xor dec xchg pop push mov mov in (bad) js adc lahf xchg ret pop test out test dec or sarl jae cli cmp call add push cmpsl mov pop arpl es push hlt insb jecxz lock and ds or push xchg mov fisttpl sub push es imulb shrl adc push or and pusha mov mov mov sub add int3 push dec sbb inc dec push out pusha and dec gs les sbb mov push sahf insb inc rcll dec (bad) add push in add call test jg jg mov fsub fisubrl out inc inc push push popf adc cmpsl push fistl push scas pop mov sbb jmp (bad) adc sets (bad) mov (bad) in add stos mov fneni(8087 ret (bad) dec mov push or jge lret fsts jo xchg jl xor fildll pushf sti inc adc mov sbb hlt mov mov sub xor popl sahf dec pop (bad) xchg adc in dec negb sbb push inc daa imul movsl push les cmp (bad) mov push mov mov rorl test enter xchg arpl test mov mov lds ja and push insl loope nop test lret fildl sbb out mov ja mov loope dec popf lret test push or adc mov je daa fisttp sub fistp xchg in pop mov notl (bad) repnz stos push mov hlt popf pop hlt loope xchg popa data16 ss or cmc rclb lret test sub mov popf and aaa xchg push mov add xchg fiaddl pop popa or (bad) inc jle divl mov mov adc lea cs adc jecxz xchg xchg scas popf ret jne out andl dec test test lahf insb imul mov xchg in xor sub mov mov mov and or mov jp (bad) jae inc cmp push scas lret rcll inc aad decl test ljmp cmp add stos mov and lds xchg mov dec add sub push mov or xchg daa dec adc xchg into inc std xchg push cltd xchg jle or push push sbb sbb daa loopne and dec repz test fwait pop data16 (bad) je xchg adc pop (bad) sub mov xlat les dec mov pop (bad) loopne cmp scas incl (bad) jp xlat push cmc mov cmp insb ss dec aam xor mov test jno cmp push int and xchg push xchg push lahf dec sub aas sub lods js and lahf mov scas mov loope insb dec std outsl imul gs (bad) xor mov mov stos fnsave fdivs inc cmp sbb mov xor mov sub or (bad) cmp pop and xchg incl and xor addr16 test jne sbb adc jmp fdivp pusha xchg xchg outsl mov or push shrb mov dec or xorb lea movsb xchg loop pop push lret out sub fwait mulb adc stos cltd out sbb xor cld push sub fsubs clc lret outsl add setae gs mov mov movsl inc iret out icebp (bad) scas mov and xchg xor sub in lahf jo in dec dec ret sub xchg shlb aas jbe and cld or mov sti mov sub xchg rorl and sub js mov jb mov xchg cwtl int mov adc sbb dec add and imul mov (bad) push test lock push clc mov cmp sub and push push loope lock (bad) cwtl movsb jno jmp div lret aaa call cli dec mov out cmp sbb add adc sub cld sub push icebp insb and adc nop mov inc lret pushf xchg pop loope insl fdivr jg test movsb sbb cli aaa jae dec lock pop sbb addr16 xor mov aam jge popa mov pop out hlt mov pop cmp xor sbb sbb roll cltd and push pop pop pop add mov loop inc mov notl xchg xchg pop push into adc jg mov lock out sub divl and xor jmp int3 jmp jle aaa mov imul inc (bad) rolb lcall mov sbb repnz les dec fisubr mov repnz movsb xlat stos adc inc inc push out push loope mov faddl js popa movsb inc test pop adc xchg les xor sub rcrl sub popa (bad) xchg cmp std push int inc xchg pop mov fsubs mov fsubr jg lahf sahf push mov mov xor pop movsb inc das and sub dec adc inc xchg pop imull pop pusha jmp sub jnp in fnstsw lcall (bad) jae pop lahf mov mov or pop lret mov mov loop sbb push sti mov sub and lret dec xchg xor and ret into adc mov mov dec sbb mov aam push mov fsts mov jmp mov lea fs push mulb jo pop hlt add (bad) xchg sahf dec push shll inc pop mov jp add cwtl jno inc gs repz pop rclb mov add out sub ja fcoml sub and push add mov in and fldenv add insl fbstp ds (bad) out xchg jp jno jmp cmp push mov mov repz inc loopne xor mov insb xor xchg inc ss pushf or pop es test dec and push shrl (bad) into push push cmp repnz incl sti int3 cwtl mov or push adc aad stos mov lea cmpsb push push mov mov rcll int3 sbb (bad) jmp pop push out jecxz inc cmp pop mov jnp pop push mov enter xchg push inc aas scas aam out (bad) sbb fsubrs add aas scas popf out fs in lods sbb testl mov in bnd mov xchg and pop push out and pop repz inc (bad) cmp mov imul push add inc fdivl out lret dec (bad) repz insb mov or test inc out mov xor jge gs mov ror leave fcmovnb dec call mov aad push stos push pop fsubl ret jae sub mov lcall cmp dec pop mov jae mov leave add mov mov pop lea push das popa dec arpl sub pop pop mov shrl stos add loope mov stos sub dec std xor mov fucom cltd and dec in cwtl rcrb adc push jb lahf inc push jb push push lea out iret cmp and push push add cmpsl rclb cmpsl lahf inc or sub inc mov data16 mov (bad) ja mov js xchg xor jle outsb inc jle xor jnp cwtl mov sbb sub (bad) repnz mov push es and mov and rclb loopne jl xchg ljmp inc pop hlt in add jmp jl add or jge xchg and xchg jno test jbe jecxz outsb and dec stc lahf sub cli cmp in dec aaa cmp inc (bad) into lcall ret push test add in stos popf lea call inc shrl push cmpb test stos adc loop cmp je and dec push out sub gs test lcall fisubl sbb lret xchg jmp ror idiv popf mov xchg mov in push cmpsb cmp and rclb les jmp xor add add cli (bad) mov or lods xchg and push sub mov js mov imul lret push rcrl mov pop push (bad) fistpl mov (bad) rol or cmc jbe inc and jno cmp push push in repnz insb popa push lcall decl sbb add xchg hlt fwait das or jb push mov pop scas loope lahf into sbb push cld fwait (bad) cs out sbb loop lock loopne cmp pop lods lods push cmpsl inc jl xchg adc mov (bad) or dec or jle jl push aad push pop (bad) sti call hlt int cmpl push push push loop cmpsl xchg dec stc rolb xchg or les jns sbb aam dec lret scas les in xchg or jno (bad) jmp adc cmp push push xchg (bad) movsl nop sub mov stc lcall inc push (bad) rcl cmp lcall xchg mov (bad) fmuls add dec and sub test pop stc iret mov mov fwait adc adc lcall rcll outsb jo (bad) inc sbb cwtl and xchg ja mov clc xchg test (bad) faddl cmp clc cld inc loop cwtl in rcr sbb mov mov pop repnz push mov movsb pop adc test imul cmp mov sbb mov mov pop fwait add mov mov mov (bad) leave mov jmp inc ja lock pop add and insb and adc lret cmp jg sti movsb stos addr16 or xor lock imul cs adc push mov negl mov jnp jno movsl inc dec dec cmc (bad) das push sub das jns ds les loope out push loopne fdivr push daa xchg jl out inc fisubr inc and lret mov (bad) mov shll pop inc sbb scas dec add mov dec jge push xlat mov pop push mov adc fdivr loop pusha cmp jmp xchg (bad) xchg fstpl nop add subl and dec aad outsb mov lret xor movsl clc sbb loopne xchg jo int3 xchg jne movl movsb jecxz xchg push cmp cmpl aas cmp push cmovg inc bound aas sbb mov outsl xchg rolb mov or xlat fadd fsubrs jno cwtl mov addr16 jle (bad) lret shll inc jle pushw (bad) jl icebp push push xor outsb scas push push (bad) push push sbb push dec mov (bad) aas pusha into jp shl sbb inc aas fidivr cmp les mov sbb les mov mov cli adc lods push test outsb stos les pop in jo mov mov iret mov push ret jecxz pop call sbb movsb sub inc lcall int3 sbb jno (bad) bound mov addl out loop call sti inc outsl cmpsl sbb adc xchg xchg adc test jne test xchg dec dec push xchg cwtl cmp int3 rcll xchg int3 mov fldl addr16 xchg nop push popf sub cwtl cmpb cltd ss sub test add mov jmp (bad) lock popa xor jnp dec mov and mov sbb xchg mov stos xchg ds mov int fidivrl ret pop fstps stos sub and test sub mov adc fist and loope cli out pop cmp pop es jp ds push push add jne push cmpl lret sbb pop popf push cmp mov sti xor jp pushf cmc popf call xchg and xchg imul pop inc mov arpl idivl dec push ss xchg cmpsb xor mov test out jmp aad adc aam ja jle in xor adc repnz jno jnp (bad) btc or nop fiadd add hlt sbb dec jb and scas jmp mov cmp xlat fdivs insb cmp jecxz lods push std xchg fcomps jae or andl in scas call jmp add push inc mov pop sub push cmc jns sub jmp imul xchg pop rorl fucomp xchg xor push sahf je (bad) push lds (bad) negl inc inc pop mov push inc (bad) loop mov add jecxz out jno cmp inc fucomi out push fs pop aas lcall dec add outsb xor and xor mov and jne test jge dec lock mov inc add mov scas pop sbb aaa fmuls jl adc mov mov dec inc (bad) push mov cmpsl pusha mov repz inc inc and jecxz movsb gs into jge in fcomps xor xor int3 push lcall cli mov dec int sbb adc mov aad test mov mov xchg (bad) test jb cwtl jecxz fidiv iret idiv pop add incb sub adc inc or push pushf loopne sbb cmp inc test adc incb adc stos mov and or mov pop mov stos scas push mov add mov mov fldt xchg jl jnp adc bound in (bad) mov ret push mov (bad) inc push mov mov in test pop repnz and adcb sub andl jbe jg ja jmp mov out pop mov imul mov fild fwait test mov cmp mov push push fcmovne (bad) fs movsb faddp xchg insl push push xor movsl dec aaa call and push xlat mov jnp rcll loope and mov sub std jmp das sti pop arpl xor cmp mov pop pop jl mov fnsave push (bad) js test push add movl popa sub inc or sbb lcall pop addr16 and movsl xchg test les add cwtl popa call in jl xchg xchg subb das cmpb sti cmp test inc pop mov cwtl iret addr16 push mov xlat ret mov dec add push push cmp pop jb mov scas ret test data16 or xchg pop mov (bad) mov in dec mov mov adc lcall dec lea insl stc sub data16 adc xor pop cs (bad) jle jnp cmp mov lock rcll mov icebp lret adc outsl pop out push rolb mov pop mov fsubl jl scas adc in sbb mov jae fwait into mov push aad scas fiadd push inc clc imul xchg and fiaddl cs mov cmp jne mov call adc push cmp mov shll sbb daa lea xor mov mov inc in popa enter fisubrl mov or jno mov pop jecxz inc (bad) push test jmp in outsl (bad) ret in cwtl lea cmp inc push fsts or repz test aad loopne mov mov icebp fldcw or inc mov repz ds scas mov xchg ss cmp xor stc mov pop and (bad) (bad) (bad) out (bad) push push adc sbb and (bad) je iret push inc scas inc sbbl (bad) dec fwait jae daa andb pop and xchg or or das jge jg dec push push fsubrl fs (bad) jbe out mov sub sub push popf fmuls imul aad pop push push xchg push testb sbb fisttpl jle mov int and adc dec aam xchg idivl mov cmc mov test sbb adc test pop (bad) adc inc (bad) mov bnd cmpsl jmp fsubrl push and (bad) push jbe and les ret fprem xlat jae das pop mov sub popf xchg in xchg pop out sbb fstpt cwtl pop call sbb dec mov jg mov leave inc dec popf adc xor push std lcall push mov test cmp sbb adc jecxz pop ret lock jge mov pushf int fmull pop push push sarb arpl xchg mov jmp or (bad) (bad) in xchg dec clc and mov icebp mov fwait cmpsb inc mov mov dec mov mov mov push add xchg sarl dec xor fadds cmp out stc mov inc ror roll (bad) sub fildl stos out push data16 mov (bad) sub sub test es push aad push add xchg push pop pop pop dec and ret mov jb sub inc mov and (bad) push pop fnstsw cwtl add jns lea jle mov pop cmp rorb leave sbb xchg jbe mov sbb sub sub mov adc frstor test sbb in fs in loopne cmp ficomp dec mov les pop sub inc pop rcr mov pop mov jno flds inc add inc sub cmp lds sbb add movsl xor aaa cmp push faddl add cltd dec mov (bad) insb dec xchg push mov cmp std inc stos mov mov (bad) loop daa cmp shll lods call jge loopne fdivs push xor pushf test adc xchg fcoml hlt mov jnp orl adc lods xchg xor fcomps push add sahf adc mov adc out push jg jge mov cmp test push sahf push lock daa stos movsl xor arpl xor subl push push push in iret inc enter jl cmpsb xchg outsl mov outsb arpl pop mov jl iret out push rcll cmp xchg cld add jae lea cmp xor out or mov dec lods sub mov sub adc mov leave ret cltd shr pop inc scas sbb test mov mov es aas pop nop pop popf sub add inc movsb add or mov dec push std stos fwait in les mov aas xor fcmove cmp inc fadd adc mov xchg les add lock insb daa aam jns or sbb aaa jb lock loopne aam xchg je sbb int3 leave and lods test adc mov cmc pop cmp clc int xchg shlb cli rorl shlb mov jno orl scas pop or pop cmp ljmp js leave nop and clc fmulp (bad) insb dec push in push cmp mov xchg and insb add cs insb pmovmskb mov mov out or inc faddl add andl xor repz iret inc stos rorb xchg adc loopne aam mov mov add dec fwait pop inc mov mov xor xor and inc rcrb int3 mov aaa pop sbb shlb lods fwait int les stos fidivr clc test decl (bad) xchg mov xlat repnz clc lock cmp sbbl sbb addr16 repz mov push add inc jne (bad) pushf and and jle insb dec xchg shll pop gs add jg loopne sub xchg lcall sub into and mov in (bad) fmuls push jae pop add push stos les psllw pop (bad) scas clc iret push inc fnsave mov aad fsubrs xchg push or in sahf adc nop loopne leave inc and or push sub repnz and xor fcoml sub xlat les cmc test jnp out sub int cs nop jnp sub mov out lahf add arpl pushf fldpi xor pop lcall pushf pop stos in lret stos pop sub mov xchg out cmp (bad) xchg xlat fmull or mov mov int sbb cmpsb in (bad) and jge ja daa jb orl sub mov add jg ficom push movsb jp mov inc cmc stos xor stos lock enter cs cmp dec pop cwtl aad (bad) adc jae sub icebp (bad) loope sub sbb jle mov lods lods in cmp sbb test (bad) dec test mov jp pop (bad) jmp jg loopne imul dec out add popf ror imul (bad) sti lret or aaa out or adc popf sahf inc push jg lret icebp rcll rcrl popa jg inc and dec out rcl test fldl sbb pop mov ret inc adc and push mov xchg int3 jno shll sub mov dec or (bad) hlt push cld and pop sahf mov xlat cmc mov cmc in bnd rcr xchg dec sbb (bad) push es xor mov (bad) mov out stos cmp mov cmp ror dec jne aad mov mov in fidivrl inc push bound icebp mov testb ljmp add mov sahf adc jecxz dec jnp iret jne icebp lock sub repnz lea lods lcall cmp mov rcll pushf or cmpsl outsb popa sahf lds out pop popa push dec test xor and call xor popf sbb pop and pushf jmp sbb loop loopne pop inc dec insb inc dec jg add pusha mov jmp sti je nop int pop popa stos xlat xlat mov lret hlt fdivrs (bad) jno sub cltd fdivs adc out and lea or ret xchg aas (bad) jne pop xchg outsb cmpsl divl push rcll sbb add outsl dec lea add add fisttpl movsb mov inc fwait in loope arpl add fmuls jae unpcklps jb add dec aam xchg scas mov sub add ret mov mov popa pop cmp adc and sbb push push dec jge movsb adc aaa out adc fcoml (bad) xor popl je cs scas pushf pop ss dec in xchg imul repz cvtdq2ps pushf cwtl mov mov in mov inc xchg sub push popf xor jns jle mov (bad) pop rclb xor mov stos mov out out pop xor mov mov popf dec leave outsl cmp sbb mov push sahf addr16 fild xor xor add dec mov cltd mov int or popa ret ret lret add outsb xchg rclb add iret jp xchg jno mov push fstl xor (bad) jmp sub sbb cmc sbb mov adc ja loop dec jb packuswb push popw cld ret cmp cld dec cmpsl xlat inc adc addb cli push int sbb pop pushf jns sbb add ret sbb es lret cmp xchg xor cmp rcrl fnstsw xchg bound (bad) push mov add nop lahf pop adc xchg push mov pusha addr16 ficomp ret jg mov ds pop sub jmp call cltd cmp ljmp mov addr16 mov xor xor pop jle or and add xor sub push sub imul sbb loop sbb (bad) jb xchg pushf cmp add ja xchg in mov cmp cmp shr (bad) lcall aaa sub out or mov lods icebp test in adc je inc stc and hlt push push enter enter push loope jbe adc jmp pop sub add aaa ljmp pop mov lcall add mov fadds (bad) push xchg ljmp lret fwait inc imul fwait push lea cmpsl jb out mov and jge int sbb dec inc pop push scas sub fsubp xchg imul addr16 or or adc std push lods jmp jle cltd dec icebp test adc add adc xor jmp dec inc pop mov xor dec mov popf adc dec mov pusha out outsl imul cltd adc iret pop notb fnstsw movsl fcoms jbe and fwait inc cs aaa cmp sbb es sub shlb or pop outsb std jmp jns cmp xchg or stos dec ljmp shr jmp mov push imull in mulb xlat pop pop mov and ret enter scas or fbstp shll xchg (bad) ja adc dec insl sbb loope push add add jne sti fs jb scas rol sub push movsb into jg sub negl int3 dec fidivr jl sahf pushf mov cmp js aad sub sub pop popa xchg or pop idivb and int lret add inc inc mov mov mov pusha (bad) loop xchg inc sub jb test lods (bad) aaa mov adc das sbb mov rolb inc bound sti fst fidivrl sahf fistl jge sbb ret jbe test pop popf sahf scas subl adc and xor push jae adc mov mov fnstcw push and push and mov push test cmp mov (bad) outsl jae mov jecxz lahf cmp lds fmuls cmp pop mov (bad) xchg sbb jge mov out jl dec popf outsb sti lods and (bad) loopne mov cs aam cwtl ljmp jle rep (bad) jle out push fsubs push popf dec (bad) cmc cmp out mov xchg fwait jmp pushl into in pop stos dec dec jecxz mov mov and in popa xchg jle jmp lods fcomp sbb bound insb ficompl cwtl dec aas daa sti fstpt lea outsl repz (bad) xor xorl (bad) imul mov and lahf aas pop das popl lods in push fldenv pop dec rorl pop sbb loopne aad add lock or and les (bad) std (bad) ror ret lea adc das leave add or outsb cmc push mov mov dec and push sarl outsl pop or mov nop dec les mov sti xchg jle mov into mov cmp and repz jne inc shrd mov xchg repz xchg pop and (bad) mov jmp sbb es cwtl cmp ljmp dec or sub fistpll cmp imul inc sbb add out mov mov in pop cld lcall (bad) outsb scas test cld enter push sbbl mov add xchg (bad) fsts pop insb mov jecxz aaa enter lds sub sarl cmc movsl stc or adc cmp mov jbe and ja (bad) (bad) mov adc cmp mov xchg sub ds sbb mov push cmp mov xchg into jle les add movsl cmp iret pushf push stos cli fwait scas popf dec notl xorl (bad) test lock movl popf and jae fimul mov ds aad and fwait dec and in xchg mov pop inc outsb jg sub pcmpgtd mov fdivrs movsl (bad) jnp or mov mov ret scas mov adc mov call inc mov arpl mov stc repz sub roll popf adc fstps loopne push enter test push cmp xor ss mov inc ret cmp (bad) mov sbb adc jae (bad) gs and imulb add mov iret sbb lds ja cmpsb mov stos sbb adc adcl loope aad mov inc stc js sbb clc add and cmpsl gs jge addb js int3 ja xchg lcall jle int bound gs sub incb aam lahf bnd mov push scas or mov inc mov adc cmp xchg ss add mov in jmp cwtl push dec push test cmp add in inc fildll lds loop fcmovbe repnz or cmp outsl enter js out mov inc in dec sub aas in pop arpl inc mov std repnz sbb mov cs lds stos mov (bad) xchg jo cmp dec xlat das (bad) pop pop xchg loope xor int3 pop jg (bad) xchg aaa lahf div adc fcompl out clc and sub dec enter cmp inc mov imul mov cmpsb adc jne (bad) pop (bad) sbb pop push roll in shlb cwtl mov cmp pop fstl push mov or cmp or mov das insl cmp pop sbbl lahf int3 jmp cmp scas lret and xchg (bad) cld cmp pop xor ljmp or loope ja or ss or cmp aaa lds in mov and or cmp ficompl rcll js jl loop dec jne xchg stc or lea cmp dec jns addb outsl lock and cmp mov and xor pop (bad) or mov or fbld and mov push in inc pop add ret lock jns mov outsl cmp xor dec (bad) mov sbb push inc xor dec pop sub (bad) fcmovu mov jl cmp int3 test int data16 (bad) push push (bad) sub cmp sarb push shrl sub out clc ds mov (bad) xchg mov pusha fsqrt (bad) sub pop xchg test loope mov daa lret (bad) loopne cmp inc push bound cld adc loope add push pop mov nop xchg sub mov stos movsl out (bad) push inc xor stos mov dec lock push pusha inc jle pop xchg pmulhw push inc mov cmp pmaddwd ja,pt adc stc ja (bad) lods jecxz mov xor (bad) rorb push stos or rcl push mov cmp dec inc xchg mov cltd cmpsb sub adc mov lret sub popa sbb xor pusha mov (bad) aam imul fwait popf inc pusha adc sbb sbb cmc pusha sbb mov push xchg sub inc mov pop adc sbb movsl mov jne xchg shl lds sbb adc mov in pop mov cmpsl sbbl mov jo stc icebp aad mov lret xchg fisub bound pushf push dec push sbb cmp jnp (bad) adc test out pop sbb dec imul mov incl push scas add popf dec imul sub inc push sar jp xor repnz (bad) (bad) push adc mov inc pop mov sbb clc dec pop xor cmp xchg push popf pop add xchg mov cwtl jbe or push mov in pusha clc rcl push lahf and outsl cwtl out lods js cmp xchg mov jno and or fisttp dec mov imul mov inc loop mov lea arpl aam xchg mov scas lret mov (bad) icebp adc bnd loopne mov sbb xchg cmpsb ss xor imul lret fdivrl out adc out push iret gs push lock add ss mov movsb out ljmp mov jns add lcall push clc jle mov cld cmpsl lret xchg sbb lret js aaa clc or pop adc cmp or out sub mov aaa push jns fstps aad rorb pop push push jmp jmp xchg dec int popa cmp hlt push rolb pop das add and daa (bad) outsl jl add rclb pop mov (bad) ja out mov pop punpckhbw and mov mov or sahf jns push xchg push pop mov cmp stc addr16 ret nop loop xor push sar rorb mov mull sti gs jo mov hlt xor xchg add loop pop sbb lock add mov rclb shl jmp sbb push mov pop adc int3 mov outsl xchg jnp gs int3 aas in pop scas jp insb xchg dec cmp sti xchg (bad) loope mov or push das cmp inc mov (bad) je js or (bad) xor gs mov pop out fucom dec jo xchg jge repnz and in dec push xchg add aas lret inc mov pop ret xchg sub adc (bad) icebp or dec arpl ret popa dec push lea inc ja adc cmp lock mov cmp mov daa leave pop scas inc and (bad) dec insl lahf mov mov ss push (bad) add inc pop fsubrl (bad) js or and xchg dec jo arpl pop xor jl out andb std insb mov sti loop cmp (bad) xor and ljmp int3 ljmp inc cmp ret adc mov push loope lods rorl and inc in sub xchg cmpsb adcl xchg lret cmp xchg push mov mov cli aam fwait push arpl pop insl test lret rcrb in test or and add out inc test imul call clc mov jecxz in cmpsl imul pop in lods sub inc mov mov inc aaa (bad) pop (bad) sub lret adc mov mov mov fwait into idivb adc pop push popf int3 lcall mov scas scas in ljmp add dec in insb aaa bound push into jne dec and cmpsl scas mov push (bad) lret fwait stc addr16 adc scas jl jbe xlat ljmp pop and repz push mov push movsl loopne cltd sub xor xchg push test popf add outsl int3 lods or sbb dec cmp and sub iret (bad) dec add aas dec lcall mov out sbb or or jo dec in mov adc inc mov daa xor jle dec mov jmp loopne mov popf mov inc test int3 xor sbb lcall dec in xchg pop lds push push xchg sbb cli xchg lret pushf or push (bad) loopne jno jno (bad) mov mov cwtl add insb dec test jecxz,pn cmp leave push ret hlt ret xor in push dec push (bad) mov lahf and jnp stc leave pop sbb cli ja mov xor xor mov jne mov mov loope sbb jmp adc pop enter push nop xor pusha push mov mov push insb fdivp dec inc pop pop mov xchg jne pop push dec out xor daa mov fildl xchg sub xlat int mov fiadd aas dec cmp aam and jb cmc or outsb out inc shr dec push mov lea mov (bad) ficom in adcl jb orl (bad) jg dec mov in movsb mov push sub stos pop inc push movsl mov (bad) xchg test and out dec pop push lret les mov jge sahf lret jns lahf pushf pushf dec bound push jl sbb jp loope push xchg stos jle fs ret add lock xchg pop subb xchg xor adc mov ja push (bad) (bad) flds jbe scas xor cmp addl or pop cmc jbe test lcall mov jns xor rol xlat add sbb std (bad) lea jne xor movsb pushl adc mov push rep pushf fbstp or jo ret pop jmp mov lds nop mov (bad) ljmp jno pop enter insl xor xchg cmp dec sbb sbb or aad push xor push popa sbb int popa hlt jne lcall add insb inc sti xchg data16 sub add dec push outsl shrb push and call aas pop (bad) cld xchg jl,pt adc repnz bnd push cmpb mov inc popl and pop pop mov arpl jl cmp repnz incb cmp out inc push in mov stos sbb cli jmp adc push xor movsb (bad) fstpl xchg enter dec add push and inc jge push mov ja cmp inc fstps fsts add cmp mov ror dec sbb fisttp idivb inc push cs test loope roll iret pushf mov lret ror jle repz sbb fisubl movsb mov inc push jmp arpl push mov nop mov jne push movsl mov inc or lret stc repz xor push test enter aaa mov and dec xchg loopne or xor test fwait add cmp jmp inc aad es (bad) mov or jne push add imul sahf ljmp clc (bad) fsubl enter (bad) (bad) ljmp inc std aam lods push iret xchg rol stos (bad) mov pop sub xor outsb xorb dec inc jo aad cwtl fisub mov fidivrl sub pop jae mov enter ds jecxz (bad) cmpsb and push (bad) call add jp popf lods cmp fcmovnb aas xchg imul fidivl pop mov cmp mov mov push dec adc sbb jmp ja lods sar or fimul ja cltd and stc mov in xchg mov imulb xor lahf iret gs push and adc (bad) icebp stos dec mov jle stos push enter cli inc sbb xor add mov ficompl push fsubr mov (bad) fs mov cmc popa jb flds lods xchg aam jns pop xchg arpl mov fildll ljmp dec mov leave (bad) sar (bad) mov cmp mov sub inc jno test iret jb cmp lret sbb fimull adc loope xchg (bad) mov cli cld jo test mov arpl fadds mov mov daa mov leave pushl std in add in mov bound push loopne mov aad jge push popf sbb stos pop call adc mov call xchg repnz fistpl outsb xchg dec inc jecxz int3 xlat lcall cmp in add jbe mov mov cmp xor sahf mov mov push stc ret cld movsl stc movsl cli mov xchg inc mov jg mov jmp pop ljmp jno sbb (bad) cmc in imul mov sbb es pop cld xlat and or adc mov jecxz rcrb dec add ss push fwait mov ret xor ret adc rorl jb xor push push test sbb xor shll inc dec or cmp xchg pop adc repz push pop rorb xchg dec fistpl das mov push pushf (bad) aam ficomp sbb cli imul sarb dec int3 jae cmpsb addr16 fsts cltd push push imul mov adc pop data16 or and ds jg notl xchg push dec mov xor cmp mov in sbb cs lods test push xor mov arpl sbb loop in fstl sub add push in sub ficom xor stos cmp pop sub (bad) mov (bad) lcall mov mov or fistpll and loope xchg add clc add idivl lods jecxz xchg xchg cmp mov mov push xor inc sub inc fs mov push and in xor lcall les xor xchg push leave stos rcll adc (bad) inc test jmp mov or push addr16 cmp cmp xor xor inc xorb pop (bad) ss sbbb (bad) and fwait pop sbb pusha js push scas pop mov sub mov mov mov rclb out pop orb sbb divl push insl adc inc inc (bad) jno inc mov iret push adc mov xchg push outsl xchg xchg xchg mov jbe push mov fisttpll pop mov insb mov fldcw iret push sub ret mov and mov adc cmp nop adc loope mov fwait mov arpl pop fwait push and xor nop stos inc pop or xor arpl and and or adc addr16 daa test das fs popa fnstsw fisub sub sub add push pop mov add jecxz add leave aas add sarb out jno fldcw out and xor mov pop push sarl jnp leave xorl dec jns lcall mov and nopl (bad) push jg in test loopne iret aam jo add mov (bad) and fsubl sub lds push mov pop inc xchg push sub mov inc clc or repnz add add imul mov mov in mov shll cmp pop insb or and jmp dec imul (bad) out xchg dec ret insb addr16 stos fcmovnbe ja stc daa cwtl cmpsb add cmp loope sub xchg aam mov jno push mov loope push mov or cmp sbb sbb pop fimull push mov xor clc fst dec int3 mov or call inc hlt mov push loopne xchg adc mov pop mov mov sti test rcr lods mov leave jb and and gs adc andb mov js cmp lahf push adc inc xchg mov sbb cwtl loopne emms shrl shll jo movsl xchg push dec cmp popf add in popf pop cmp dec dec mov cmpsl (bad) or aaa push inc dec shrl js in jbe insb (bad) adc inc std pushf (bad) or mov ret popa mov (bad) xor and mov cwtl sub inc lods lods and xchg xchg fisttpll movsl movsb sub ss push cmp jno xchg es fst es aam push out not cmpsb mov fidivr (bad) mov outsb jns cmp ljmpw xlat jns inc sbb push jo test sub push dec (bad) ret les fcomip sbb push inc fs je jae movsb cmpsb test adc test mov sahf loope inc inc bound or xchg inc xor pop jns mov ss ljmp sbb loope repz lock inc sbb dec testb repnz ja shl xor lahf and add testb sbb xor in pop dec in add add pusha dec mov push xchg mov sbb sbb loopne mov pop leave and insl scas test mov adc into jp stos pop or fwait stos aas or mov pop pop mov (bad) out xchg fwait pop (bad) mov (bad) pop push push jge call pop jle cmp inc cmp sbb add dec icebp mov pop mov sub cmp cli into xor mov into mov jae sub push jae mov jp stc dec mov (bad) mov rorb daa inc sbb jo js pop loopne jns jecxz add jae push in cmp mov in fwait inc adc sub pop pop nop pop and cmp inc stc test and leave cld adc mov cmp insl lds in movsb add lds ret add xor xor into mov sbb xchg ficompl in adc out mov jns dec dec inc push jle adc jne xchg in and inc or mov ja mov stos pop inc dec jle pop xchg jns ljmp pop inc test lods fimull inc stc xchg cmp movsb dec push ret roll repnz fnop sbbb ret mov out adc scas pop sbb fldenv (bad) mov ljmp pop clc fisttpl scas loop push sbb add jno in test jge mov mov dec test rcrl mov dec jg std pop xchg mov or and pop jbe push js outsl addb jae pusha lea and dec push int3 je mov sub dec scas cwtl andb push mov push fidivl test sbb push push adc test mov inc jb mov sub in jmp rolb lcall je (bad) jp addr16 je cmp xor fisttp addl rcl scas jbe or fisttp dec inc lock push mov xchg or dec js stos (bad) mov lods push or sbb pusha xchg in mov sbb and add stos inc cli cltd fldcw aad (bad) out jno test outsl js pushf xchg (bad) popf or mov sbb fwait ret insl xor mov js dec push pop and add popf js push ss mov (bad) insb stos mov (bad) cmp mov jmp fidivl mov fistp dec (bad) pop inc lcall xchg mov test and aad mov repz mov sbb iret ret ljmp andb xchg sti scas mov cwtl (bad) in lods mov jl adc lret sub pop test jnp mov add lret cmp jmp lods sub out push mov shll and shl ja into push adc sub movsb push xchg push fs test inc in sti mov pop mov arpl jge sbb mov aam shr outsb xor inc addr16 icebp add out aas adc aaa sub mov mov dec xor (bad) and jg sub rolb adc inc xor cli movl stos rcr aaa and outsb jp add mov fimull les scas jno xchg dec or aad (bad) fnstsw and into mov sbb aas push xchg xor lea subl mov pop in imul mov jno push xor mov jno mov sub cmpsl testl ljmp daa xchg push pop (bad) jae test (bad) cmp flds pop negb imulb popf arpl sti inc xor stos (bad) in sarl fwait cs and mov xchg lahf xchg push hlt cmpl push stc aas or hlt test (bad) xor das xor popa sarl ficomp sub (bad) clc jns ja cs mov and out test and addr16 fstpt ds sbb cs int3 xchg adc loop mov pop pop xor jbe pop pushf insl adc sbb out stos fiadd xchg je adc pop mov and adc sbb fldt dec sub (bad) sbb mov cmc cs stos mov or mov in sub mov mov pop mov sub pop and inc pop js (bad) dec lret psrld out arpl insl push (bad) repz lahf mov cmc jo pop aas xor mov fidivrl add shl add ret push outsb jns dec mov insb and addl cmp arpl adc jmp movsl mov imull loope es (bad) bound mov mov (bad) cmp push mov push mov lret insb imul lcall jmp int3 out push dec das or out mov xchg test sbb mov inc ret mov dec add add jo mov push loope adc pusha add mov inc push or int mov sbb sub cmp loopne hlt or lret fisttpll lock xor bound and xor cmp xor xor or lret or adc push addr16 cmp and fcoms roll adc bound sub sbb test adc faddl arpl in xor xchg and ss (bad) dec xor scas cmp push (bad) push mov addl cltd sbb add mov jae and int ret test jp bound inc jp call or int3 jle sahf sub popa mov arpl mov xor mov aaa mov rcrb int3 ja out stc ret add dec sub pop pop daa fcoms mov jae adc inc es addr16 out lods popf jns mov push imul jmp cmp push jle xchg pushl inc sbb les inc (bad) sbb mul push (bad) jmp sub push push aas jg jb cmpsl dec jmp ss xchg gs sub jae mov add arpl int int dec lret dec imul rcrl lock and pop fisub mov sbb (bad) addr16 sbb sbb or mov mov dec mov icebp mov int inc or xchg dec lret dec push push jne xchg test inc sub adc or lahf mov fimull dec aaa iret iret test mov pop cmp xor (bad) das in adc js mov sub lds out mov hlt cwtl adc lcall cs (bad) icebp adc fisttp insl pop pop sbb ss lret mov xor push in push ret inc scas test scas or mov sbb or loop mov repnz xchg jl (bad) jge xchg xchg jmp fsub insl outsl test inc mov jp and les and mov push lods cmp jb sbb popf fdivs jecxz out pop sbb push repnz pop jle (bad) ja loopne repnz pop adc mov rclb lcall mov repz cmc jnp pop jns push xlat adcl sub cli jmp adc xor sub (bad) ss bound mov xchg mov and add xchg xchg inc stos stos or xchg adc push subl ss xchg push sub repnz mov mov add mov mov or jge and push dec mov nop lock scas adc scas test mov or pop out jo push fsubr jecxz cmp push icebp leave or jmp jo cs (bad) mov dec lds xchg cltd aad dec xchg push ret add mov fwait cs (bad) fwait ret cmpsb (bad) pusha sbb scas jecxz jbe push (bad) and jno ror dec imul (bad) je push mov inc jmp das inc add pushf mov fs ja pop adc mov cmp data16 jne lcall and pushf jne enter popf and outsb fmull cli shrl pop mov imul xchg repnz shll call push test cmp js js and bound jo sbb inc and out mov negb sub test fs loope sarb stos inc fidivl cmp outsb (bad) fistp xor dec ja in test mov pop push loop sbb mov xchg inc dec adc push test mov jne mov insl dec sti dec mov daa test push push dec (bad) jbe cmp inc in call pop fcompl sub pop xlat inc mov cmp mov inc loop xchg movsb leave hlt clc mov dec mov lods insb and and test jae xchg in repnz daa and or pop outsl ds sbb xchg testl mov std rorl scas rcll movsl cmp jg jno dec xor mov inc sbb add lahf pop jge jl je mov pop inc add inc adc push (bad) shr clc add in clc rol aas mov push out clc pop sub test enter pop daa test enter int xchg shl jge mov aam outsl js sbb sbb or lret sub pushf push mov sbb movsl sub shll shrb sti sbb adc jle xor cmp push inc cltd mov mov adc pop (bad) fldl sti popa adc cmp fdivrl mov jmp mov push loope sbb xor jb roll outsb mov mov jecxz int lcall jb or popa fsubrs or xor fbld xlat pushf sahf sbb mov ret adc push rcrb dec or outsl xchg add jnp add push stos xchg sub mov clc push cmp cmp adc push mov (bad) movsl push dec mov pop add dec into xchg icebp xor mov (bad) lret jnp xchg mov mov (bad) adc push (bad) lods (bad) loopne pop (bad) mov stos and add jae icebp fnstcw mov pop cmp les and movsb rcrb mov popa push (bad) stos xchg test sarb iret pop stc cmpsl jae cmpsb add mov sub lret lods add lds cmc sub cmp or or mov stos test push in imul out pop insl imul cmp mov jnp mov add addr16 ja lsl lods imul (bad) jmp ss sbb dec adc cltd jge cmc int andb jb (bad) cmp mov fnstcw fcompl sub lods mov mov ret stos jle mov pop dec and cwtl adcb jne xchg and push inc push jnp mov lcall lock xlat mov cmpl in xchg sbb push jg push inc fsubr inc loop mov mov cmp xchg mov call push (bad) mov movsb (bad) mov test popf dec push fnstsw rorb imul movsb mov cld push fnop sbb das int mov mov out fisttpll pop mov mov enter cmp lahf call dec aas rcrb sub stos lock mov xor ds pop xor or xchg movsl lock cltd sub hlt in add cld jl mov xchg fisttp mov je rorl push icebp cmp mov int cmp and and and push pop add cmp pushf aas mov mov sbb outsb jg test pop dec dec xchg pop es jne add jbe and out (bad) cmpsb leave xchg enter xor sub pop repz or in lcall xchg es aas sbb lds pop (bad) add (bad) cld dec inc lcall cmc and adc mov inc pop mov and xchg shr xchg inc sbb shlb mov les pop push sub xor fstp cmc add jge sbbl repz bound inc repnz fild adc inc dec cltd push cmpsb fsts lahf scas adc pushf (bad) aas mov in jecxz and lds jbe push mov jne pushf mov in add xor test (bad) adc xor fsubrl cmpsl xlat adc push lds fsubs sub xchg xor dec test rorb popf loopne and jbe xchg imul sbb fadd es pop lret sub sub sub xchg adc pop imul mov fimul xlat inc sahf test dec aad ret add add fbld mov cmp dec sahf pop (bad) stc or test (bad) movsl imul (bad) sub (bad) in outsb pusha daa les xchg je fidivl vmovq mov sub or mov or cltd test xor inc adc or dec xor adc dec (bad) sbb pop pop mov sbb ljmp and jg test and push cmp ds mov xchg xor push nop andl pop outsb lea jl or gs push sub jne mov dec push dec aas in fiaddl sub faddl loope mov sbb mov push mov adc (bad) lret repnz cltd xor xacquire dec andl ret xchg push scas mov dec daa mov jbe imul mov inc test adc lret xchg fxch fcomip sub xchg xchg out pop lret inc rcll mov adc mov repz lcall enter push jp jmp js adc jo pop mov mov in out movb jbe outsb mov pop movsl push sub cmp stc dec mov cmc movsb mov movsb cmp cmovns add sahf sbb aaa and adc loopne fidivl adc leave (bad) jbe rcrb ljmp cmc imul ljmp adcl cmp mov mov stos mov push pushf fcomps hlt fnstenv lret mov xchg cs aam cmpsl inc add push in lcall push jecxz pop pusha fdivl loope jb loope add mov scas aam push cmc xlat in adc jns repz xlat dec test clc stos and lock (bad) call inc or jbe xchg push scas push sti (bad) and adc addr16 bound test ljmp rcll mov pop adc xor das mov inc push adc xlat lds cli sbb mov push push inc mov jp add ret xor test inc adc pop adc cli mov sti and in jno or jmp test and push sarl jp idivb inc nop mov outsl add lods cmp dec or sub call insb add movsb je cli sub imul lock push cld inc cmp lds jmp loope mov add mov cmp add popa inc mov mov fnsave bound test jge loopne add push xchg out pusha scas pop dec clc mov cltd dec push pop fcompl popa sbb (bad) jns sbb pop shll rorb pop sub (bad) mov or cmp aaa push or adc pop mov cmpsb xchg xchg lret mov pop fstpt test notb xor fnstcw jo cltd xor xor mov scas aaa cmp lods popf push xor ret cmpsb lret popa movsb dec data16 sbb nop cli xchg inc fidivrl jp xchg pinsrw mov and fs add pop mov aad sbb aad mov ja dec push mov mov mov push loopne fstl dec cwtl nop xchg lret or dec rolb stos stc inc push mov xor das and push in mov xor mov sar mov jb int mov push xor push or jl lahf mov mov aam xchg test cld std xchg in push pop shl mov loope ss aad adc test mov push inc jle xchg jmp ret (bad) sar pushf push jge ds out inc cwtl fstp stos sub jecxz inc dec push loope shll xchg repnz fcmovnu mov gs push mov jne add push addb pop cmpsl inc dec (bad) xchg movsb subl (bad) repz dec xchg pop lock pop in inc adc lahf fidivr jle andb inc iret add dec in fldl sti out sbb xchg or add dec call ljmp imul and push jge and test and popa xlat rolb aam mov pop xor ret mov xchg stos mov push cmpsl fsubl imul inc push scas mov jae cmp sbb gs aas imul ffreep ds cmc jo ds inc (bad) out int3 sbb jb cld jns xor lret push in insb inc pop xor lock sbb fildl outsl (bad) sbb bound movsb pop (bad) mov cmc add jnp add xor pusha addr16 xchg push mov jno jne mov mov lds cmpsb pop aad cli cld addr16 pushf pop int3 ja mov pop sub dec mov sbb lock icebp mov push rcrb sbb nop aam xlat or mov std rorl ret loope data16 fisubl imul mov xor lcall jbe jp clc fidivr call mov cmc push lret hlt xchg pop or jnp dec mov imul lahf (bad) or adc lret fimul lahf sbb pop xchg add add dec dec mov mov mov aas aam stos lcall and sub ss push inc mov mov jecxz xchg insb shr push or loope xor push stos mov add mov fcmove sub je push adc xchg mov into dec lods and mov mov sub insl pop aas mov out popa mov dec out adc inc mov rcl iret inc dec dec aas mov fchs lock mov inc push ja outsb adc xchg lcall pop shrl sub xor bound lret lret insb leave aam je adc push cltd jbe dec divl out xor and (bad) jbe out fildl add xchg in sarb jg cmc fidiv hlt in insb pushl cmp pop scas out pop add jbe pop dec adc pop xor arpl adc xlat imul rclb (bad) lcall pop mov push stc mov xchg cli add mov pop loopne mov mov xchg cltd iret sahf xchg incl stos adc sbb inc jnp add fcmovnb test pop repz xor adc jge into mov push (bad) repz pop dec clc inc movsb or out push or jno test sbb push xor daa xchg lock sub dec mov movsl adc sbb adc iret cmp mov arpl sub fmulp push addr16 push lahf push sub adc push out mov ljmp dec lahf lods cmp adc adc sub inc pop sub adc sub repnz dec sub sahf inc push ljmp imul (bad) or mov jnp insb test add fistpl ja mov dec test add stos scas fidiv mov and inc inc sbb xchg orl cmp rorl (bad) adc iret dec enter mov xchg or (bad) in out cmpsb fadds and stc jbe movsl roll mov insb stc lahf (bad) (bad) sarl mov repnz fucomip mov cmp lret enter decl int jp fild inc push pop mov add jle stos call lcall xor cmpsb lcall dec in jnp xor outsb jnp xchg pop (bad) pop jbe fimull pushl (bad) sub push mulb jmp pop lahf jp mov movsb mov cs fcomps jecxz in outsb dec ljmp es gs mov push dec les add insb mov push fmull xorb loope sbb fsts adc push inc mov sub xchg mov test mov add jecxz or jmp push int cmpsl jle or push jp sub mov jmp lods mov and test jle inc into mov repnz andps mov fldl sbb jmp mov add jo and gs xchg xor inc cli jbe je test test pop and mov mov (bad) push add cmp rcrl iret test and stc xchg lock addr16 mov jmp cmpsb das fcom out add iret push ficompl sub cmp clc (bad) jae cmp cmp nop push jle xchg mov pop and pop (bad) mov (bad) out mov push lock flds inc idivl outsl sub add jp test ds mov mov adc jbe cmp hlt lods add out jo insb mov adc leave popa mov leave test cli pop notb mov pop push enter sbb out push int3 xorl xor addl mov mov loop loope inc sar in lods (bad) xor lock or stos stos mov mov mov xchg test sbb ds test scas push push imul jmp mov les mov (bad) or cmp rep cmp sarb mov and ss xchg fidivl les insl push shlb adc rcrb aam push xchg jne idivb das xchg adc popa mov (bad) test das fucomp jb or fistp jno inc imul xlat sti cmpsl mov mov je test dec les imul lods mov lahf imul ds imul inc sbb loope rcrl stc or test sti cmpsl add inc pop je sbbl or iret scas lret pushf jae lea and and dec push ficoml pusha dec cmpsl fiaddl repz pop sbb test icebp xchg mov (bad) repz stc mov clc lret cmp out push ds nop sbb inc scas (bad) adc cmp sbbl mov xchg in xchg inc into mov xchg repnz pop test repz je sub scas movsb adc inc fisub xchg add xchg sbb xor inc mov aad loop xchg fsubl into mov dec movsb fdivrs push inc sub pop lods lea jge leave enter int3 movsb repz (bad) lods jb loopne lods xorl js ret dec bound gs jbe std (bad) sub icebp test or push or inc test jbe mov xor rorb outsb negl xchg cwtl mov and jns dec xchg insb flds fiadd loopne test mov loope cmp add in fsts xchg cmpsb inc addr16 bound je jo mov pop sub sub push pop cmpsb call mov lock insl xchg sar or or mov ret cli add lock sub insl test xchg mul mov (bad) inc push in adc mov xchg sub (bad) push xchg inc adc add lods loope lret sub insl pop adc ljmp mov lods push jl mov push mov xlat mov jp xchg mov cmpsl mov clc fs test xchg mov popa pop les dec (bad) push mov mov call out fmul adc push mov iret cmc lret cmp mov sti (bad) mov clc add cltd orb mov sahf mov divb add out pop cmp add xchg fidiv mov arpl je inc jecxz out out enter (bad) jno mov xchg or mov bound and je out andl add jecxz add rorb sub mov pop fcompl mov mov rorl mov mov sub dec inc pushf xchg lods test test pushf jnp out mov pushf or or lea in inc inc fisubl mov popl push xor bound (bad) xor mov mov pop addr16 and das cltd jno stos out xchg sub inc pop mov adc imul orl mov pop arpl xchg popa (bad) push sbb scas mov xchg jno aaa jbe mov mov mov mov sub into pop test (bad) xchg out rcr mov stos lahf push cli dec pop xor (bad) ss pop inc test movsl jb test stc jle dec xorl clc loop mov addr16 jl mov push fistpl ja fisttpl test jo or cs ja (bad) test or push cld addr16 xchg adc pop aas mov fldt rorb rolb xchg xchg popa dec pusha (bad) xor mov ja ficompl xchg out mov enter outsl jo hlt dec pop cmp xor adc mov orl push jo add jo popa mov loope pop cmp inc dec cmp in push or and mov or mov into push ljmp lret sbb cld bound cmp icebp bnd std lods shrb jle or cmp lods xchg sub jo mov cli push cltd jl shrl stos dec add test dec loope dec in jl scas fdiv aaa push rep (bad) mov dec pop cmc sbb dec pushf mov dec lret inc lea xor aaa and mov push adc fnstcw leave clc call push sbb ja fcmovnu jno fidivl mov sbb cmp mov mov dec (bad) adc xchg mov in (bad) xchg pop sahf jmp es popa out popa aaa scas and js dec mov mov inc and hlt mov mov cli xchg adc enter or cmp jbe jns loop imul cli pop scas loope push es nop cmpsl mov push cmp call in clc inc lcall (bad) jecxz or push sbbl mov jbe cmp cs push fs scas addr16 sub outsb rorl (bad) sub mov and mov jg push bnd ret andl xchg cld (bad) fcomps sub mov fcomps xchg or jge push xlat js and xor sub add xchg stc mov ss fldpi or mov cmp addr16 jo mov pop push test jbe out insb (bad) idivl (bad) stc pushf add test lcall push in std and mov mov fcmovbe push jmp jg lcall sub push add push popf mov sbb inc test (bad) add cmpsb jo test movsl and mov lahf lahf mov inc and jl pusha cmc pop adc and sbb leave mov mov iret pop leave sub and mov mov sbb adc (bad) mov xor xor pop push pop or insb pop (bad) out jb inc (bad) jae mov es cmp fldl mov xchg adc ficoml fldt test lcall mov mov sbb scas gs hlt xor push daa out push mov pop ret mov js and or sub pop push sub push fsincos out jae cmp add push dec xchg jge push movsl (bad) push scas pop jns and test add xchg push gs jecxz sub inc out (bad) dec int3 daa popf xchg test int3 adc into loopne add daa inc loope mov cmp jno mov mov adc aas mov dec xchg sub stos stc mov cwtl pop push mov add sbb aas (bad) insl rorb mov clc xchg adcl stos pop leave ret jae jae adc popf sub jo stos push cmp stos repnz adcl (bad) dec cmp mov dec (bad) es jne test push adc cld adc xor pop aam out mov stos inc lds into shl (bad) or add shll and sub test xchg inc xchg iret stos sub aad clc lret dec xlat push adc and scas (bad) out or xchg fsubl shrb pop jae pop mov (bad) cmp clc adc dec inc xor cmp push pop xchg sbb mov adc mov int3 cmp rcrb push mov ss mov sbb test adc (bad) jbe jg add push imul and movsl fcomi pop (bad) or dec xchg subl mov mov es pop imul pop andl jl test jae jp iret add mov test sub dec mov shrl mov xor dec add and (bad) cwtl fstps sbb popa jb and mov xchg push cmp add sub ret push aaa imul aas jge mov jg xchg test mov lds stos icebp stos movsl notl sti cmp stc insl into mov out jmp xor imul (bad) insb xchg cmp xor xor jno dec sub out mov add iret in stos push cs movl shrl jno (bad) or push imul popa loopne outsb xchg xchg or mov mov imul cmpsb out sbb cmp out hlt fisubl xor jne jns insl adc (bad) lds push sbb jb lcall xchg pop sbb cmp mov jbe pop push andb out in pop cmp imul and cmpsl lods mov shl sbb rcl out ret flds lret out xchg push lods jecxz add cmp in xchg jo xor mov cmc lcall cmp fmull pop cmp pop xchg jne or mov imul fwait mov mov fisubl ds out movsl sub jle mov or mov mov sub out setb enter push or lea sub lcall push test adc gs adc jmp into mov shl cmp add popa or in clc cs or subb icebp or add in arpl in sarb jno mov sub (bad) (bad) (bad) add ret dec fdivr scas cmpsb pop shrl sbb rorb xor mov les inc push test add xchg loope mov roll cmpsl add mov pop stos push dec push orl push hlt dec sub inc cmp mov xor imul in pop mov and or scas pop lret (bad) mov inc xchg add (bad) arpl arpl dec add lret pop mov hlt int3 dec repz xor shrb cmp ret (bad) movsl cli mov into mov sbb add jmp aaa sub in ljmp mov jbe mov pop sarl sub (bad) popf fs test fs or adc (bad) lock scas push and push out jae inc inc faddl aas mov rcrl std dec test inc push out and mov mov and mov gs push xchg cmp (bad) or stos mov pop xchg jp sbb iret jp stc mov cmp int cmp cld imul pusha adc mov jg mov decb and jbe adc jb or loopne fnstenv cli xor nop addb fxch outsb (bad) xor dec jmp cmp jl jnp sub insl dec xor dec popf add and sbbl mov sub adc mov dec jne je aaa dec js outsl sub aam fs dec cmp cwtl add movsb xchg push in mov cmpsl mov xor mov mov pop in (bad) mov cltd (bad) push mov jo sbb lock insl mov push jle add add mov push sti pop lds push push popf int3 or pop push mov les xchg add jns (bad) test les iret sub aaa xorl jns jo mov or push mov leave xor out adc adc mov push mov cmpsl and inc pop sbb mov push stos mov dec jne sub mov xor cli inc push notb lahf ja xchg cmpsb add bound or sub cs popa repz iret aas dec push lret arpl int3 mov mov sub xchg lahf cld xor fs inc add add ret ret and nop scas push pop arpl jbe out adc sub inc push dec push inc cmp xchg jne sar cmpsb stos mov jmp lock lret jns pop repnz les mov xor jl or in std popa push push cmp sbb jge jbe cmp in adc or sub out dec cs sbb ficoml inc fs ret adc inc imul add sub xor cmp push mov in and sarl outsl test dec pop cmp xchg push pusha push rorb ljmp mov add mov cmc jmp inc sbb hlt cmc ret jle ret sti or repnz ja xchg es lea andl fistpll stos call in sbb cmp pop inc and cmc mov xor loop rcll cltd subl pop and fldt (bad) mov push movsl repz and push aaa in mov xchg lea or adc les insb mov or pop enter mov adc mov insb repnz psadbw js push mov call add scas inc fsubrp mov mov xchg jo out movsl (bad) lea das testl sbb faddl leave loopne jecxz sbb sub or push push mov mov mov xchg (bad) jp (bad) cmpsb adc cwtl test mov movsb negb jle int test or lock (bad) aad sub add rdpmc jbe inc inc xor das mov xor popf out push xor add scas dec shl and nop mov ret push jmp jge xor mov scas sub add push mov fisub mov in repz push inc jb push fdivl sahf icebp push loope cld adc loope pop xchg stos mov mov mov iret scas shl mov push sbb loope inc daa movsl (bad) xor incl pop ja sub xchg shlb xchg sbb scas shrl pushf pusha inc sbbb (bad) jno mov add cmpsb arpl test and cli ret sbb lret xchg movl out sbb ret add ljmp jmp ror in adc xchg mov (bad) aad cwtl cmpl and jg lret mov add dec and in adc mov lret push sti out movsl inc cli dec call aam shr push bnd xchg cmp mov xor xor push repnz xchg dec jg ret pushf out (bad) int3 gs mov mov leave lods dec jb inc leave pusha stc lahf mov (bad) mov cmp repnz nop cmp adc jae cs xchg adc jmp dec popf lret aas push push jb hlt mov aaa and sub movsb dec jae sarb inc test mov fmuls xor andl inc jp stos jo lock shlb push cmp cmp std out push rcrl rcrl pop add hlt (bad) pop jae inc stos bsr aas jno xlat loope sarl call sub or adc mov mov mov (bad) xor xchg mov jne dec sbb or dec mov or or ret push fsubs fpatan mov sub jg repnz push fildll mov pop adc xchg fcompl jg lock stos mov xor mov dec (bad) stos popw test hlt out ds (bad) mull cld sub xchg retw inc adc in sahf dec xchg cmpsb daa adc fistpl stos bound mov sbb out mov cld daa mov out hlt cmc mov inc or insl adc cmpsl sub cmp add lret xor stos lock enter loope sarl mov inc xor jo test adc fstpt mov xchg xchg jne insl dec sbb push cmp and or shrl mov dec jl adc mov mov pushf xor fidivr sbb hlt push inc cltd sbb jbe xchg fwait ja inc fild jbe (bad) mov pop push mov in fsubrs cmpsl fcomi stos pop push mov inc outsl (bad) ja cmc clc mov mov stos lea or or leave push lds cld daa es incl pop movsl jne in cwtl or pop fucomi jmp jg mov jle mov mov insl xor sub jecxz xor mov add out and sahf sbb and (bad) out hlt push adc pop inc cmp jne test add lods imul dec das jb push les and imul popf mov sub (bad) xchg add dec jae rcl jb add pop frstor js xchg sar aad xor adc and call and popf jl fmuls test or lret loope xchg mov daa fcmovne shl idivb xchg mov inc fsubrp mov inc loop,pt in and push push sbb mov nop pop cmpsb add js cmp call push mov xchg add fld mov es daa dec ss mov sbb push push popa or imul mov (bad) push cmp rolb mov nop mov cmp insl mov ds push out inc enter and mov sti aas cmp and daa in stos fnsave sub inc lock sub cmp lock bound mov jmp push jns jmp movsb jo sub (bad) or lock sbb inc stos or jle jge pop push jg clc jae ja ja xchg ss push dec lcall sahf jb repnz xchg insl out mov shrl (bad) rep sub or dec and xchg fs (bad) xchg xchg test mov push fimull clc cmp sbb xor inc mov adcl xor out mul add sbb daa call cmp pushf cli (bad) sahf sbb fs or movsb out imul iret in hlt fdivr mov (bad) or cmp xor lods cmp jg jb pushf call pop andb or cmp add mov imul je sub int3 cmpb inc jmp mov out fild xor in xor xchg pop mov add or dec push xor cmp outsl pop dec adc mov pop mov sub jne imull (bad) xlat jmp pop (bad) outsl or jo pop lods mov (bad) cmc cs mov rcrl movsb cmp or push sti loopne jno mov ljmp or js push jns vmptrld andps dec mov mov add inc xchg loop push dec mov jl daa loop dec into mov cmp add xor idivb mov test jg jno dec in aad icebp xchg in in mov sub push and mov rcrl fmull mov cmc in (bad) sub cmp push imul pop jnp testb mov push stos inc jns xor cltd adc jo (bad) adc lret in imul jo sbb or sub xor push clc mov jle arpl std mov test sbb dec mov fwait xchg adc xchg fsubrp and out cmp roll pop jmp adc or out xor repz mov repz jo test js hlt out loope pop ja ss inc xor xor inc fdiv or sub arpl fmuls dec or in rcl outsb mulb pop popa inc stos bound jg or sbb or or (bad) in jne cmpsb stc lcall sub inc jecxz bound leave fcoml call fnstsw pushf int aaa jmp hlt fisttpll in lahf enter jne sbb cld imul mov and sub push or add (bad) shlb stos sti dec es push mov xchg adc pop push iret aaa pop insl ljmp (bad) jbe iret repz test fs jmp test mov repz jmp (bad) xchg mov push (bad) in xchg inc (bad) xchg out jns cmpsl or sbb sbb lret sub cld push and adc scas insl cwtl fbld mov adc in sub mov sbb ss inc cmp (bad) jo jmp dec cmp (bad) lcall sbb int3 subb inc cmp mov add cmp sbb movsl jmp fcmovnu sub sub cwtl or sbb sbb dec cs inc and sarb jo add sbb adc dec inc xchg dec xchg mov sub in les pop pop jl sub cmp mov adc mov std mov mov and cmp cltd push xchg jns stos sbb rcrb insl mov jae sub lods lods mov movl sbbl sbb test insl outsb add mov (bad) jno dec js hlt dec repnz or rorb movsl in into xchg inc lret xor cmp daa or jb jo xor xchg psubb shrb add xor push std loope dec (bad) (bad) cmc test pop shr push sbb xchg aaa test inc dec loop je out jl cltd jb test cld inc and scas lds ja mov inc repz les iret and cmp out outsb pop cmp and sub ja or pop jecxz repnz je xchg pop jge mov xchg enter sub and jecxz mov das lods mov inc icebp pop mov lods mov mov xchg push pop arpl stc pop push push add mov xor xor xor sub dec push insb push cli frstor prefetcht2 jl cld daa bound lcall add push mov sti ss mov mov popa push jnp andl sbb out xor loope repz inc sub mov dec mov jp pop mov or ss mov jne nop stc mov jl jg xorl insl and push fisttp mov movsl popa adc popa fs xor sub cmp dec ds pusha repnz popf sbb push mov cli dec clc pop adc xchg test xchg addr16 in sub cltd mov out cwtl add out jp jno mov bnd nop loopne pop addr16 or cmc nop fwait in xchg addl (bad) add outsb inc inc sub loope mov insl jp imull xchg cmp iret (bad) push jmp inc pop pop outsb mov (bad) loopne test pop xor (bad) mov insb fwait sbb add adc pusha arpl call lock stos cltd or pop gs xchg mov lods push rclb jb jg jle or jae stos add or ret mov inc out mov xchg arpl sub daa out sbb fistp pop ss daa sar sbb adc imul and inc mov pop dec popf jg mov mov dec hlt repnz mov sbb aad ja repnz mov jbe lods sahf out sbb add repnz adc jno or fdivs imul int loope ret (bad) lahf test into in stc dec lock je xorl sub inc sbb outsb jmp cli sahf or xchg adc or call push cmc and mov dec clc popf add mov cwtl leave sti ss sub (bad) es xchg inc push sahf or scas mov dec mov movsl bound mov daa mov je popa enter sub or rorb movsb push xor daa xor sbb push (bad) adc cs negl or mov (bad) popl xchg pop rorl mov pop pop jge stos (bad) rclb pop pop push jmp inc scas mov or inc pushf nop or jb imul adc in add shl cmp pop outsl cli daa mov aaa jns xchg push xchg jmp cld and clc mov pop and mov lods imul (bad) push and xor xchg inc mov ficomp test (bad) jl rolb or nop outsl xchg or mov pop outsb jb xor out int ror iret mov and shl pop and adc xor les fstpt std stc daa mov cld mov js cmpsb xchg mov ficomp sub (bad) xor out inc nop or sbb ja,pn dec push popf mov inc inc adcl mov mov lcall out cmp ret dec xor cmpsb lret (bad) cmp push cmp incb xchg bound xchg xor popf insb fs outsb sub ja inc xor leave pop enter out lea daa xchg aas xor std mov mov xor scas xor addr16 fsubs xchg ds adc arpl scas leave js stos pop sbb js jmp sbb push adc mov lahf dec lea fisub inc cs mov xchg xor (bad) xor fild mov outsl std jo xor mov push xchg push cld cmp pop imul rorl aad lods sbb mov cwtl bound mov xchg (bad) xchg inc add add mov lds nop daa jb push cwtl cmp loop inc shlb cmp xor test in cmp mov cmpl in in add je mov or (bad) rcl xchg (bad) cld (bad) roll push mov outsb push dec test jae data16 test inc mov ljmp scas jnp out sub or gs jbe mov jne repnz cmp add mov popf cli or (bad) push inc or cmp xchg stos cmpsl jne push imul imul push cmp addr16 out cmp inc push and push ud2 loope enter aad pop rcrl aad cmp mov jp ret in push xchg stos pop div pop mov repz xchg pop pop lea stos push or push xchg shrb (bad) mov int3 out jb inc mov sub pop mov leave cmp push sub lods adc mov outsl adc xor imul adc or fstpl into inc dec pop xchg cli pop push scas adc mov xchg pusha in jle mov sub rol jbe dec fwait (bad) xchg daa clc imul jb shr xchg out adc ficom dec mov xlat leave mov lds inc xor repz sbb loopne int3 mov xor adc ds add pop mov inc inc aaa jmp mov and sub or add mov mov loope,pn push imul mov in sub sahf push pop mov jp repnz and pop stos mov pop pusha mov sar add and pop std mov or jp (bad) cld xlat mov pop cli aas (bad) nop sbb hlt fs mov inc pop lret jl loope decb xor jmp adc sub mov or sbb test sbbl cmp mov add mov std leave mov jl ret ret inc fidiv push cltd mov sub test cmpsb bound dec jmp mov add xchg (bad) lock cli adc mov movsl push std ljmp es mov jb push std xchg pop fsubrs mov push test adc fcomi ja add aam rol sbb mov loopne dec xchg movsb cmc xchg jo pop repz loopne sub imul sub and xlat mov sub inc inc pop ret or popa inc push pop add loopne fwait push pop lea or test (bad) ja xchg mov cli pop rorb push mov inc cmc test mov push xlat (bad) push mov adcl inc jns test in push dec (bad) jno dec int out xor pop ret xchg (bad) stos sbb in in in xchg and mov sbb inc or dec sub fucom pop adc jne aas add lahf add mov mov add aaa sahf imul test cs jp sarl (bad) fistpll cwtl cmp stc jne inc lret dec jp es fdivrp or imul aas xchg out mov cmp movsl push outsb outsl xor inc dec div mulps adc mov pushf mov in cli ja or push mov cmp incb jno mov cmp cwtl mov xor xchg mov and mov inc and adc xchg pushf cwtl insb mov gs cmp jg pop cltd and mov lods (bad) jae jmp arpl mov js jle xor sub xlat push sub xor pop cmpsb hlt or out push jo push mov jno bound mov pop fsubr lods and sub mov sub mov mov push dec xchg (bad) xor or aas out adc push jbe (bad) pop arpl mov add push fcoml push sbb aaa mov xchg addr16 mov loop add push lea mov sbb dec pop sahf inc fstpl or mov push out les fcompl pop push xor cs test int3 mov adc jne mov xor jo sub push push push sbb movsb std jmp pop shlb jnp fldenv push xor daa into insl add das push rorl outsb xor js push mov and xorb std aam dec je in (bad) roll (bad) stc fucomip movsl jmp xchg inc and pop sub pop push notb das xchg xchg add insl je insb jg sub sbb and mov cld xor je add aaa mov and dec dec xchg cmp push out add dec test insl or push sub push popa ss mov mov sbb push mov xchg xor icebp (bad) dec std scas mov jecxz lret xor mov pop jmp pushw pop cmp dec (bad) lock movsb in mov js and fldenv fsubr push (bad) pushf pop jmp je xor test jo jnp ret sub and (bad) adc xlat into bound push mov inc imul xchg rcll jmp into cli aaa push movsl xchg and lcall mov cs loope out ds xchg push mov mov xchg cmp and (bad) insb pop pop mov xor repnz clc cltd rcrl and and xchg sub out icebp imul and jmp dec and sbb daa dec ss jge cltd add dec lret sbb pop jge sub movsl les jns popf sub jne push mov in push and mov ret jmp add xchg pop mov leave in adc and sbb fisubl sbb cmpsb mov add sbb xadd cwtl test xor sbb repz mov clc insl insb and faddl lret bound rcl scas push jno js mov pop add loopne mov inc popa outsl xchg fwait or std dec dec sub dec in out sahf pop hlt pop cmp in jno ja mov xor cwtl sbb pop sbb or fistpll nop jp push mov push and fstps cmc shll (bad) xchg push add and mov imul daa lea sahf outsl test adc cld int jns sbb sub pop nop nop sbb repz and aaa call sbb fwait shll mov pop (bad) mov (bad) xchg dec shlb mov sbb (bad) out movsl add and pop fwait dec xor out mov test cwtl pop push mov pop mov dec jne jo int3 cmp int push jnp or xchg sti pusha es and das pop in inc loop adc (bad) aaa (bad) enter mov inc cmc imulb (bad) xchg addr16 fistpll jge and ja inc ret in dec (bad) inc add mov xor xlat repz pop mov jns or sbb repnz jnp std popa (bad) xor loopne test fidiv adc in loop xchg add popf xchg out push ficompl imul clc inc xor call mov inc gs imul cmp int cmp pop out loopne fidiv pusha jns in scas sub rcll popf clc (bad) ror int fild ja mov xor roll (bad) (bad) lahf lahf mov sub (bad) lahf dec lea (bad) xor out adc mov test cltd cmp xchg (bad) and xchg inc add cmpsl movsb xor outsl out jecxz sbb inc adc sbb bound loopne repnz jge aas cmc (bad) mov sarl jle sahf shrb cmp ret loope pop add ss fidivr insl jo popf mov mov add cmc movsb int3 mov pusha insl mov or iret aaa xchg fcmovbe push mov xchg (bad) sarb inc inc cmc (bad) aad push in xor fs push imul cltd push mov rorl fidivrl adc xor adc mulb push mov add pusha mov or inc aam hlt je push xchg call sub cmp sbbb dec inc and icebp test lret (bad) fwait stos aam rcl and pop in jge add push leave js add cmp (bad) test pop jl mov mov int mov jb js mov sbb push mov jl sbb mov dec inc cmpsl adc fmull dec push dec loop int3 outsb jge pop les cmp cld fadds movsb fwait pop jbe in dec or sti push mov arpl outsl (bad) mov xor int3 lcall adc sub lea pop leave mov or cwtl inc fadd ds lods out out aas sub in xor dec sub push jge cltd mov jle fwait xchg dec fisubrl sub fistpl mov lret sub sbb inc jecxz and cmp cmpsb gs xchg jp adc push ljmp push mov lea jle gs inc aad rol pop jnp xchg mov call loope sbb das jno sub neg das les pop aaa mov cmc dec mov sub sub jns test add pusha jb xchg jbe shl adc fldt fnstenv fsts push addr16 repnz scas outsl inc cs push mov push sbb out pushl ds sbb xorl jecxz cltd xor sbb jl pop or stc hlt or sbb (bad) roll (bad) fstpl sbb or scas jge cli stos enter cmp jae push addr16 (bad) and jmp dec loopne lea cmpsb pop movsb bound out jecxz movsl pop out arpl test bound xor jbe jp push nop mov jmp cmp mulb push in ficompl lret mov fdiv push mov out pop orl push mov js cmp imul mov and pop daa xor rcl sub jmp cs mov fisubl repz mov pop popf xchg test (bad) cmpsb and dec or loope push sbb ja (bad) and loopne push jmp shr pop das inc push push add repz shr pop pop in dec cmpsb sahf pop fistpl dec mov cmpsb imul sbb push jmp and enter in int3 adc inc cwtl lea stos shl jg xor lcall push jle dec ret dec pop lock xchg aaa sbb cmp daa sub lahf and loop enter push adc and xchg fsubs mov ss xor mov cltd mov jl mov or mov in push iret ret sbb rclb mov mov sti jecxz mov daa je sbb dec in lock jle cmp mov jp fstpt pop pop int insb xchg out dec je add push (bad) jg mov mov in push mov lods leave pop xor mov add xchg bound in insb les repnz int or inc jle cmp push cmp outsl imulb or fs test jecxz and push and xor sub lret xchg sub icebp inc mov xlat cmova leave addb add fidiv hlt or in cli or mov xchg dec into pusha es lcall jl push fiadd int3 push add stos jnp fs cs pop test lret mov pop xchg mov mov push add fdivrs test xor (bad) sarb aaa push dec nop push and out pop mov fistl roll mov addr16 mov push (bad) push in jmp sub pop add sub (bad) loopne clc pop fisubr aad mov pop aaa jmp and dec aam inc (bad) jne hlt cmp inc cld aad inc sbb mov test sub xor push lret (bad) adc movsl pop ror ds inc jne les sub (bad) es out rcll mov and xor or stos jae mov pusha xchg xchg in sub add and pop jle push int cmp stos lahf dec xchg sbb je mov inc repnz mov pop mov xor adc (bad) push inc roll outsb xchg dec lods cmp rol pusha adc in stos (bad) adc aad cmc mov sub rcll mov mov clc hlt cltd add dec sub mov dec outsl mov pop sbb mov out call inc cmp das pop es aam imul das rcll jns push sub push pop push sti mov adc or adc inc add inc xor outsb xor in xchg mov ja push fwait push stos bound push mov cltd mov xor incl aaa push call int and outsl fldt pop adc push cltd cmp cltd mov mov insb cmp movsl popa in xlat pop in (bad) push pop sub or lret jae outsb insl jo leave push les daa scas add leave into inc (bad) lret inc mov int daa clc pop std pop add (bad) sub cltd fs (bad) ret or lods cmp fcompl (bad) ss ret cli xlat icebp in sub xchg lret cmp jo jno jnp and and ss jbe cmp adc mov inc sarl jbe cmp xchg into aad std aam sub les ja jle mov and mov daa inc and dec fcoml loopne cmp into and or mov mov and pop mov addl notl cmpsl lea adc fcmovnb int xor int3 or (bad) fcoms stc fcom aad xchg xchg xchg enter shlb jns call sbb push dec sbb push sbb ret xchg inc pusha std (bad) pop nop addr16 addl mov xorl movsb hlt fcomps popf (bad) and xchg cs dec clc mov pop mov cmp fwait sbb push fidivl popf jp loopne sub mov jp or lret dec lret shl dec lcall pop int and mov or adc icebp fldt imul mov popf xchg lcall cmp inc add aam in sbb push sub pop jle or pop dec inc cmpsl sbb push sub cmp adc mov pop in xor or jne sub mov xchg aad inc inc sub cmp and inc sub sub adc pop mov aad adc cmp ljmp pop pop adc movsl mov jbe push sahf xchg ret jno xor lcall jle addr16 sub sub pushf lcall xor jbe mov sbb add jl inc mov mov push sbb cltd mov frstor mov leave pop add cmpsl cmp xchg ljmp pop dec pop xor test mov lock xor add mov je jb mov (bad) aaa mov adc adc pop sub test fldenv addr16 icebp clc jns lret inc jp mov adcl rcr test lock rcr xchg icebp jecxz jmp test xchg ja mov fldcw orl divl int3 pop notl in hlt fildl xchg xchg pop fcompl mov rorb cmp adc pop ljmpw mov push mov fs mov or pop lods dec xchg repz pop inc adc lret xor or cmp push or mov add or mov cmp or fisttpl xchg jmp das or cwtl jns fs stos (bad) fsubrl imull call and sbb pmulhw push ret pop sbb out int3 mov pcmpgtd mov jp in push cs fcomps in clc aas nop mov stos and jbe jnp push shlb pop cmp xor imul mov inc cmc sbb shr scas orl mov maskmovq imull push popf and mov loopne push and sub dec dec pop jne pop adcb adc fwait rorl inc fs repnz test and inc scas xchg jo gs and xchg loop mov lods push jne es add inc std add push test cmp (bad) jl jmp (bad) ja outsb push pop add mov mov movb cmc adc subl xchg mov cmp and pop xlat mov adc xor cmpl mov push lahf inc xchg ss inc std mov mov andl inc in jecxz mov je xchg daa arpl pop pop gs or stos insb push or jns mov enter inc mov das das shl pop add mov push sub cmp mov adc xchg test mov push mov fildll std jmp leave int ret xor ss faddl inc pop mov push pop dec xor mov sbb fldcw ss jp fdivs push (bad) mov xchg and pusha fbld lea adc jno pusha add jo cmp leave or mov movsb test dec and repnz rcrl sub dec adc sbb mov cmp lret outsb or lret xchg mov xchg fwait arpl adc push std jo stos sarl out sbb xor mov cmp jmp add push call mov test cmp aam jle aad ret pop or scas adc aaa mov xor and iret mov and mov addr16 cmpsb push lcall cmp out xchg (bad) pop out movsl sti nop pushf sbb jg (bad) loopne lret sbb jo (bad) adc (bad) cs mov jns cli sti test push xchg mov jb xchg sbb add (bad) add mov or xor jbe in or xchg push fidivr sbb mov scas push cmp ds (bad) or sub ljmp int dec push leave lret xor inc inc push adc pop addr16 lods in pop inc mov pop mov jmp adc es scas pop add in sbb jbe pop outsl and mov cmpsl es iret mov popl dec cltd jg pop dec sarb cli aas jmp mov int mov test mov test stc add shll mov inc (bad) fsubrl push mov push aas rcrl add ljmp adc add stc cmpsl loope cmc out cmpsb dec pop mov ljmp jo xor (bad) lahf out mov roll fnsave (bad) in iret popf (bad) mov popa push and cmp xlat mov aam sub jp iret add ljmp insl in test pushl sub mov (bad) loope lea xchg fildl bnd dec lahf pop mov sbb xor fcomip dec add into icebp stc mov ds leave mov outsb xchg popl xchg stc popf daa lahf add sbb clc and stos sbb shrb or pop aad movsb jb in popf jno nop (bad) sarb mov pop mov pop ja xchg cs push push repnz pop pop pop lcall inc sub (bad) or mov jg pop mov cmp neg xchg scas push loopne jecxz leave cmpsb or fsubrl push les mov sarb cltd mov or push aaa jbe mov ss shr add mov add sub or packuswb mov add mov mov int3 fxch mov adc inc lret jno xchg or cltd mov hlt pop mov (bad) mov jns mov lcall xchg mov sub js arpl cltd fs (bad) or cwtl addr16 inc cmp xor add insb mov pop mov mov inc loopne scas xor cmp xor (bad) xor ret test add pop add inc or sbb and sbb jnp cmpsb mov inc das test ds test popf (bad) jae ficomp cwtl push inc sbb or cmp pusha aaa mov push pop mov or xor (bad) pop in jle cli push int3 push fnstcw fsubs cmpsl call loope xchg popa and push ret into or mov add (bad) repnz mov inc scas aad aaa outsb mov je add mov (bad) aaa jp out andl repnz pop or sub xchg pop into cmpsb mov clc int cwtl lcall cs pop mov (bad) adc jae (bad) fcoms fs mov lods imul call jno xor add lcall stos enter cs addr16 bound inc add fs fidivrl lock jbe sti jmp popf jg mov push pusha mov xchg ds xchg ja pop and mov (bad) cwtl pop shll fidiv scas arpl jns inc (bad) and jmp and popf pushf mov mov inc mov jmp les inc xchg or push repnz sub push mov mov icebp popf dec test xor jbe mov sub jne lock pop jp dec dec (bad) cmp pop in repz leave ja sti mov jle or orl insb movsb mov sub inc jge add inc enter add int3 or hlt mov mov orl xlat mov subl inc ljmp xlat (bad) sbb test and stos push sub iret cmp sub pop mov lcall xor test mov movsb cs jbe sbb les jo sub cmp pop lcall je push (bad) jnp ds int and mov incl sub sarb xchg addr16 ss in addb sub xchg mov outsl dec out repz rep xchg bnd mov aad enter jmp sbb pop push mov out push outsl cmp and xchg fildl pushf add imul mov cld jmp and cmp add sub mov cmp test cmp aam repz jno addb mov test dec xchg and push mov cmc xlat sub stc mov inc mov (bad) loopne std pusha adc je mov dec mov mov je mov add enter lret repz mov out sub jge push into mov imul rcrl shll sub or push cltd test (bad) imul cmp add ret cld xchg aad movswl xchg out pop cwtl out mov lret mov loopne xchg push popf adc mov adc jmp mov inc mov mov orl xchg xchg popf cmc xor and dec (bad) es cmpsb push mov js xchg push xchg mov adc cmovo pop andb dec dec cltd xchg pushf inc mov sub das popa or xchg and (bad) add dec sbb inc adc or dec push xor jno push mov lret bound cltd sub push push sbb push or movl loope mov subl data16 nop xchg les inc add or cmp (bad) mov ja out aad cmc in int add mov scas out add (bad) mov ret inc nop inc sahf xor pushf ds loop or pushf pop stos test stos jno adc out inc adc sub mov inc add icebp (bad) ss nop adc movsl jb mov cmp (bad) xor loopne mov test push lods dec loopne push jno,pn scas lea ret lds dec push or jbe stc (bad) fbld faddp pop push push lock daa andl fldt daa and into imul (bad) jae loopne push mov or ljmp push jmp data16 aam and pop or loope and push mov in xchg inc fs push xor sub xchg cmp enter inc and inc inc scas dec xchg test sbb std add addr16 test cmp shlb aam add mov mov addr16 (bad) lods pop sbb push cmp adc xchg xchg ret xchg cmp pop jmp rcll in xchg test mov cs pop std negl test rorl mov aaa cmpsl ja lret mov adc (bad) cmp mov or jmp sbb xchg xchg lret lods add in mov lret mov fdivr or or and jl cmp (bad) pminsw lods cmp gs test das mov mov dec scas in movsb push add inc and and adc mov negb (bad) dec push push cmpsl sti je or inc jno jns push mov cs push outsb push jle idivb xchg repz xchg cltd mov mov inc jo and ss or mov loope xor das outsb xor add movsb nop jbe arpl add inc sub ja jnp les jecxz pop loope pop xchg xlat push dec xchg and pop adc test adc adc jg mov orl in or jnp hlt xor mov sti fxch push pop stos sarl pop pop rolb ret xor pushf es fildl cmpsb xor xchg mov jmp loope fwait pop rorb insl testb mov mov insb pop dec and test arpl jnp jmp jb dec and lret aad lcall jo repnz xor js rcl xlat lret and mov cli imul (bad) and jae popf loopne jmp loopne xchg movsl sbb movsl and sbb xchg xchg call xchg inc xor in xchg dec ljmp orl mov add sub xchg jge lock arpl cmpsl ffreep adc adc push ss mov in cmp sbb gs sub sub (bad) lods push nop fmull sub sub pmuludq fnstenv xor ret inc ljmp es sbb test xor inc outsb or cs leave in sbb push dec cmp into loop js push fbld jo or xchg in and test lret loop inc and scas lcall inc and mov popf jbe jb lock aas outsl and sbb jno push cmp xchg dec xchg jno add ret outsb mov xchg mov repz (bad) dec jecxz adc stos sarb xor push mov cltd mov sbb or push push or inc push dec ljmp mov call or das add (bad) pop loope mov adc adc popa je xchg or cmp daa data16 nop aam push or enter test adc rcll not in mov fs ljmp adc jg lcall xor mov icebp ja jnp aam dec jg data16 mov bound push lock aam cmpsb jnp pop movsb xor xchg inc popf cmc inc outsb movups jno in cmpsb or push aad (bad) mov (bad) xchg popf add cmp push or jbe rolb rcrb jle addl and pop cli rcrl adc sti rolb (bad) lea (bad) idiv repnz mov cmc push mov pop jnp dec cmp fucomi lcall aam stc (bad) mov out cli loope in dec popf movsl push jl stos lahf pop lods inc fisttp xchg cs stos dec xchg mov cmp xchg arpl (bad) mov stc pop xorl mov mov cltd jbe pcmpgtw push add loopne ds mov and ret push loopne int sahf lret lds mov ljmp std jle (bad) inc out sbb rol dec subb mov (bad) loop enter mulb and jbe js dec push mov sti push lahf mov movsb add xor pop je inc imul loope loopne (bad) call adc mull xchg pop cli loope or sti sbb mov push mov fisubr jo and sti pusha inc cmp jnp or (bad) add sbb movsb ljmp inc push lock arpl fcompl push data16 sbb jns xor out stc jge movsb shlb aaa lock into lods ja adc subl lahf aam mov out (bad) outsb xchg fld (bad) xchg push mov orb gs bound mov insl cmp loope mov pushf dec jns (bad) ljmp mov rorl mov pop aad ficom or xchg mov xchg xchg aad nop fs xchg dec imul xor fwait out out in jns (bad) and dec adc xchg sbb cmp sbb ljmp xchg and mov cmp imull jmp popa int (bad) xchg push lods xchg mov call jno or subb jbe cld mov cli jle iret in or dec sbb mov movsb dec sahf mov lds cmpsb clc lea dec xor sub push popf js xor sub xor (bad) jns sub nop add xchg out jns lcall orb lock add cmc cltd (bad) fwait jl in jb jle addr16 add test dec movsb push sbb fstpt aam dec or dec and fiaddl je aas inc cli adc inc pop (bad) jmp (bad) xor adc daa scas mov adc xchg unpckhps loopne add jnp xchg dec add out xchg shrb lahf (bad) jbe scas jnp mov dec fs sub mov mov test sbb (bad) jecxz mov jg nop mov popa jo push popa rclb mov adc addr16 mov dec push jns cltd aam mov sub ds mov mov pop (bad) ficomp dec pusha ds cwtl test aas xor jne pop adc jbe mov mov enter adc outsb cmp dec inc cs xor cmp xchg jae addr16 dec fidivrl jbe jl aad ja cli pop pop mov sbb mov (bad) jb (bad) lret dec std jnp inc (bad) es in adc jge pop ret test cmpb mov jmp clc mov fdivrs sub fbld sbb inc sti mov test jle sub lcall mov xor mov lods ficomp stos sub mov mov fnstcw add push aas cltd jle pop cmp lahf xchg lahf lods cltd mov in pop mov dec and into dec push dec jmp mov push xchg lahf jle push retw jp fmulp pop pop rorl add jne addr16 loopne das pusha scas add js or pop sbb int arpl (bad) sbb mov pop push ljmp nop sub push and dec inc out lahf jmp mov adc mov (bad) jmp or push dec adc pop sbb (bad) lahf pop test lret out or aas dec jo test test out push inc iret daa lea (bad) mov (bad) pop jo cmp jmp xlat push inc dec push push or mov stc fimull fcoml int jl push add mov in adc sbb aad inc jnp stos ret or rorb pop cmc iret mov mov scas and xor adc jl mov and (bad) or movsb (bad) dec (bad) sbb lahf icebp inc xlat cmp mov icebp insl outsl mov je out mov (bad) (bad) (bad) mov jne scas pop and stc sbb hlt adc inc (bad) push mov sub fist adcb mov pop fistpl add inc jle add into in inc lahf and loopne movl scas xchg es jae shrb in fadds mov push (bad) test lret mov movsl mov pop inc or insl ja mov inc ret jne iret pop (bad) mov ficomp cld pop mov imul lahf xor add insb dec add ficompl loopne jae std cmp sarl xchg mov sti pusha xchg mov movsb inc movsb jmp jne (bad) dec pop sub scas jbe jo fimul pusha xor (bad) mov imul jl (bad) imull jb loop or push adc adc sbb ds adc sub (bad) jmp test pop sub cltd ljmp scas es int cmpsl dec fs (bad) push test xor pusha enter lret fxch repnz push outsl in pop pop lea mov pop in push popa (bad) mov push outsl sub in mov inc jns jnp dec sub dec je inc or xchg out ljmp push sub push inc push xlat cmc mov pop cs aam adc scas pop (bad) mov mov bound mov or or jne jmp xchg jmp js jmp addr16 (bad) adc add cwtl loopne adc and aad arpl mov (bad) sbb xchg popf sub movsl stos xchg (bad) sarb rcll dec or idivb jno pop inc roll rol mov lock inc cltd outsb xchg jns rcrl and xor aad in pushf repnz pop jns and push mov rcr jge sar int3 or mov push adc adc and xchg lock add pop fildl les xchg adc mov dec lock insl jb hlt mov xor test iret mov rolb addr16 jmp push testb mov jp jne inc or xchg and cmpsl int3 pop inc inc add rorb dec lcall repnz lods lret je sti xor xor push leave int3 xor repnz popf adc je mov push stc insl xchg mov clc dec popf ja mov out out mov flds xor (bad) flds push ljmp and aas jnp sub inc mov sub fdivl shr nop mov orb cli xchg imul add add les popa lret es fisttp mov jbe xchg bound jo push cmp lahf (bad) jno push test jbe xor lds fidivrl xchg fcomip mov insb je pop iret lods and inc cmp pop mov pop push push test sub std (bad) xchg adc out out and jb dec out jne or mov and pop xchg xchg dec ret mov cmp inc (bad) pop mov pop jns rclb dec frstor imul or jo or dec rorl iret gs (bad) mov cmp sets leave aas jl stos sar mov jno sarl cmpsl mov cmp ret jne jns mov mov add fcomp and mov outsb or clc inc lds (bad) addr16 aam imul ja in pushf jecxz or cli push bound int xor repz mov iret lret inc notl adc mov xchg xor push (bad) mov jmp fiaddl mov push mov pop xor gs imul dec (bad) es sub outsl icebp loopne xchg jb fwait sub scas and xchg shrb adc push pushl repz (bad) pop addl push sahf jge push add jbe addr16 lahf neg lahf addr16 fimull mov icebp mov lcall fldcw int pop loop cwtl mov into std pusha push ljmp movb pusha jae leave jae (bad) jmp dec and ret rclb sbb cli push xor gs adc dec inc and aam xor in scas fldcw dec or xchg pop xchg loopne xchg mov xchg (bad) and jecxz loop pop sub jnp lds test cltd xchg lods test and mov test test sub out fsubl and sbb push pusha call adc jge addr16 or lcall jp lea pop test (bad) xor dec sbb add mov add imul cld and push incl sbb in adc push jne dec outsl sbb sub dec push leave push lds je or jmp je pusha or jmp xchg decl jmp mov or or lock call and daa mov insb out push (bad) pop fdivrl mov pop cmp inc std mov mov incl ljmp or cmp (bad) ljmp or push in (bad) or dec jmp mov test gs push and add movsb cmp lret ret jno cmp jnp fwait mov insb and mov insb push sbb cmp jle je mov lret jae jl dec pop sub mov inc and jle push lcall mov xor decl lods mov cmpsb adc push (bad) mov sahf push and outsb push push jb cmpsb into sti sub ss out arpl cmp in lcall fstps test repz or jne (bad) addr16 jb fisttpl pop mov ss mov cmc mov sahf ljmp int push movsb xor sub xor dec mov mov cmpsl mov pop scas mov push dec inc out mov aaa push (bad) loope ret int3 mov (bad) fsts and cmpsb cmpsl in cmp shrb lds mov push movsb or adc pop outsb dec sti mov and jmp mov repz in pushf repnz lcall dec push sbb fidivl aaa xor hlt mov test cmp jmp jae (bad) (bad) xchg decb mov xchg stos (bad) stos dec xchg repnz xor mov xor cmp shrl cld adc sahf fistpl fwait (bad) jne in mov pop sub jle,pn in mov rcrb fcomp inc dec jnp jge inc out mov sbb mov jb aad pusha sub and (bad) pop sbb in adc add pop mov or mov inc insl sbb push dec insb sub mov fs out fldenv ret in inc sub stos cs and ljmp cmp stos ret pop xchg adc dec popf stos add (bad) pushf aas dec pop popf jge nop add ret cmp fsubrs adc lods (bad) cltd cwtl dec (bad) and ds inc rclb sub aam add aas out mov cmp adc loope jl sahf push mov and xor sti (bad) cmp adc adc ja cmp sbb pop (bad) mov ret movsb lock jl sti add outsl push or push repz mov push (bad) mov cwtl xlat test scas addb adc sub mov mov repz xchg not ret sbb inc sbb insb jno push gs or fdivl sub sbb mov xchg push (bad) mov mov test popa les roll (bad) jge push sahf jns add in bound popf jne xchg nop inc jecxz ficom lods std push xchg mov cwtl push push adc cmp mov lea fdivr fs sub mov outsl jecxz sub and push leave int3 dec cmpsb add sbbb jno lret jle lret ror xchg mov je ret and xchg data16 or jp inc mov add mov mov mov mov mov fnstenv jl (bad) scas cmp add fidivl (bad) jb jb mov push xor inc (bad) xchg or jle mov sbb pop fimull push lock jne xchg data16 icebp mov (bad) jmp sub aas dec mov mov and aad movsl out das lock and sti mov inc in rcrl xchg inc jecxz push movsl (bad) or ljmp rcll dec mov jmp call xchg xor roll aas leave xor adc pop adc nop mov inc dec mov stos mov gs and add adc xor jl (bad) mul dec pop outsb aas gs movsb fildll sub (bad) cmc shrl bnd push aaa lods and movsl inc out jb leave std lahf call jno insl lods into addr16 mov stc loope add dec lea int3 push dec int imul and out (bad) mov test xchg (bad) and inc fs pop addr16 arpl and add xchg inc addb pop bound addl fisub sub mov icebp sbb cmp adc (bad) xchg push test jno stc fimull mov cwtl add mov sub jg loop into adc pop cmp adc movsl std bound das mov aas dec mov and gs xor aam test lds lahf sbb mov cmp movsb inc and mov ljmp xchg jo mov or add mov scas movl xor sub jno out mov fisttpl mov int3 call xor int3 mov scas dec enter inc fstpt clc mov sub into faddl mov xchg insl nop shrl mov push cmp jmp add pop add lock outsb xchg jae dec loop push fnstcw icebp adc sub inc leave jnp fildll and xchg jmp jmp dec aaa lds adc mov xor or cmc xchg (bad) popf dec test leave sub out and sbb mov pop aaa lods mov lods xchg shll add (bad) xchg icebp cs xor mov dec cmp cmp xor incl out leave je es das mov ret mov dec jbe out shlb push jnp popa fisubl adc js push lds std jmp cmpsl mov jmp xchg adc bound dec pop pop stos pop jl (bad) pusha add gs iret sub pop sub int3 push cmp (bad) mov add enter (bad) nop pop push push dec cmpb sarb lcall add stos cli or pop push mov inc xchg lcall scas pop int3 fmulp or insl mov adc sbb addr16 xor and adc xorb dec push jmp ds sub sub mov inc push fs cmpsl mov or popa lret sbb push cmp into sbb mov add imul sub dec adc dec iret mov push data16 jg mov pop sub xchg cmp xchg or popf add cmc or sub ret inc lret addr16 rcrb das iret cs pop inc sbb inc inc test push inc or cmpsb lock mov xchg ret push jg sub sbb repz mov pop in sub and fadd inc xor in out rcrb int3 sti pop or xchg or dec mov push dec js inc push (bad) jmp xchg sbb mov xor insl lahf cs push jmp xchg gs and inc jmp (bad) push jae sub dec push add xchg pop shrb jbe enter sub cmp inc inc cwtl adc pusha or out into outsb push (bad) mov or shrb test test std and adc cmp fsubl jmp fldl xchg mov pop fs add dec mov mov (bad) cmp hlt rclb add imul mov inc dec mov ljmp pop sub test mov les (bad) jno adc addr16 pop xor cmp mov push ficompl xchg lds mov in int3 cmp dec hlt daa add pop mov popa mov inc add (bad) in mov je mov jmp jmp out sti mov ret int3 inc in mov lea inc mov jp lcall xor and cmp imul lods popf repz dec popa jle pushf mov add inc (bad) idivb aas imulb fmull lods icebp in ss pop test add mov mov push pusha les mov jno in jmp in sub lret mov mov sub or pop cmc (bad) stc push sub xor cmpsb test out push jae ficomp jmp icebp cmp dec mov leave jge rorl jns push xchg rcll mov stc incl or ja or jge mov fistpl call and stos mov mov jmp mov loope mov repz clc movsl jge mov bound outsb jle ret leave repnz push mov leave mov call std mov mov scas fsubr xor lock cltd push js sub fwait adc aad mov fisubl sbb pop je out in jbe or mov arpl mov pop cmp xchg mov pop jno movsl leave adc dec pop mov push outsl sbb inc outsl out shl cld add iret test stos cmp xchg xor xchg mov cmp das mov fcmovu pop lock ffreep and xchg xor push add and jno pop (bad) jo icebp idivb push out jo dec cs nop push jp mov in hlt movsl (bad) call and xchg adc imul pop out adc inc lds xchg add aaa daa nop fisttpl jg and and dec jnp test cmp sbb fwait ret inc sbb xor sarl sub loop cmp dec mov jnp jo ds mull push mov add push push sti mov out jno cmp adc loopne mov (bad) fdivrl xor sbb lea push push inc insb stc imul push scas stc mov jne inc sbb cmp enter mov sub xchg cld mov test and subl dec in inc jge out test jnp out insb in insb psubd dec aad imul xchg mov xchg pop sar enter int3 outsl pop adc jb cli adc ret repz or cltd popa pusha (bad) into push xor sub negl out inc pop xchg push pop fldl mov inc mov dec and pop add dec add adc lahf jb adc enter add xchg (bad) enter pop sub lret mov jle les adc cmc jns sahf sti imul ds jb aad test je dec movsl and and mov js push sarb (bad) rcrb mov sub sbb shll xchg (bad) inc push test jbe jp mov xchg bound lcall dec repz cmp cld jbe cmp in jp movsl in xchg push mov xor data16 dec xor repz and dec leave fnop xor out or sbb xchg sahf shll mov inc dec xchg pusha movsl lea fnsave xor xor scas lret out mov loope mov out in push cmp mov bnd dec adc cmove pop pop push out jge cmp iret test adc fisttp loope in dec sbb sub roll leave or outsb lods mov ret test jno dec jns inc ljmp mov ds das out shrb push insb lods int3 lcall lcall cmc xor pop sub int3 mov (bad) rcl fwait sub xor xor xor pop lahf cmp push add mov jns ret cmp shr dec jge and jecxz and sub sbb mov aaa push pop mov int mov rcrb sub jg dec xchg inc movsb int3 mov cld pop add js aaa loopne jecxz mov ds cmp aaa jbe pop mov loopne jecxz repz and pop cmp je subb xchg insb push push sbb jecxz xor pushf sbb aad stc lret fstpl je dec bound js test negl push sarb js (bad) ja dec cmc sub inc sahf lret inc test (bad) lret cmovnp sti out mov insb xor (bad) or dec dec and and lods lock cld enter sub int sub mov iret int mov or mov mov inc iret mov sub and outsl and nop es sub inc dec inc nop ss rorb push adc imul imul fst xor mov or or out adc mov dec xor push push mov xchg das dec ror lea mov mov aam insl sbb mov clc adcb sub movsl out loop push ja mov pop or jge mov fcomps xor mov and xchg (bad) xchg mov sbb daa call in push add std arpl (bad) loopne jbe mov push or rcrl aad nop jp arpl repnz pushf loope fs test sub sbb mov inc nop in or cld lds or xor lret arpl xor mov inc add int sbb scas fnstcw cwtl sub xchg iret fistl cmc sbb xor xor ret xchg xchg mov pop daa push pop out jbe sub stos dec xor xor xchg mov xchg stos out cmp mov call into mov lea sub xchg lods cmp scas sahf jo sbb fidiv movsl icebp imul dec jle je out push jp jg ss movsb push outsl pop cmpsl push fildl mov xor imul dec out repz push dec mov mov sahf push jbe adc ja jp push mov xchg push inc and lcall enter addl mov sbb fdivs leave rolb sub adc popf test mov outsb pop cwtl test mov jb pop in outsb (bad) sti push scas repnz bndldx cmpsl xor push jb test shlb xor cmp pop jae out out les loopne mov (bad) pop sub fisubrl xor rorb pop cmp (bad) push adc std mov pop out sbb js and push popa in in dec adc or hlt dec adcl mov insl xor push lods and fstpt mov (bad) jl mov bnd and aaa imul mov inc dec outsb bound lods xchg sbb sbb dec mov rcl inc test push and sbb or mov aas leave mov movsb call enter subb and and lock cmp or xchg mov cmp incl pop xor in int3 into xor and dec lods pop ret fldl mov cmp loopne mov pop fnstenv insl cld xchg add push icebp leave cli add pop ja cwtl ljmp push push movsb jg gs cmp cmc mov insl cli imul jmp popa mov repz fimul in mov aam out lret dec xorb mov fidivrl (bad) js rol ja mov insl push xchg sahf ret daa mov stc and ljmp inc or cs dec or daa in push ret outsb iret or add ret sub lret rorl mov jmp dec add inc mov sbb lcall shrl lret scas gs cmp xor loope (bad) jnp ja lahf enter jecxz xorl or or jl (bad) mov cwtl outsl loopne in sub into movsb stos pusha ljmp jl dec fdivs andb mov mov cmp iret mov (bad) adc and jl cmp and sub pop fs sub and jb bound cmp xor pop and (bad) cmp das mov call pop idivb movsb cld or cmp lret xchg ljmp pop mov push notl (bad) ficom mov inc icebp inc movsb movsl jnp pop mov cmp ret sbb xorl loope in andl lret jle pop jns or fimul sbb and jmp mov lds int3 fdivr adc mov jne xchg cmp inc cmp into sahf into data16 mov movsl lret scas push push shr lcall cmp cmp mov dec cs push fdivr add sub dec cs movsl (bad) divl pop mov cmp mov and fistp faddl sub jecxz nop cwtl sub pop jbe dec push mov adc lcall pushf pop ds push aas cmp xchg scas pop xchg mov dec push (bad) repz push xchg pushf mov jbe dec int or push push jae xor repz ds mov inc push inc dec jb sbb inc in icebp and add movb sbb call mov xchg aad or push lock loop dec mov scas mov jb pop js mov insb test fidiv and jno addl sbb les push mov push fsub faddl ret lds pop pop sub or adc pop fwait les and dec fildll xchg (bad) dec adc scas lods mov loope mov xlat adc mul sar pop enter in xor adc sete fstl pop fcomps push add sarl aaa xor mov sbb xor adc stos pushf icebp out fxch lahf movsb rorl xor test mov push clc pop pop lods test xchg or jb cld std dec xchg jmp js xchg bound sbb fstl push xchg xchg stc add scas xor test add mov pop dec in or sti sbb mov popa popa sub sbbl fnstenv mov das xchg shr inc lcall (bad) sbb mov mov ljmp cmp push sub xorl mov in imul (bad) mov jnp xchg popa in movsl pushf loopne out push insb loope arpl lock test (bad) jo sbb imul mov cmpsl cmp jmp xchg dec sahf xor jo jno jg mov or sbb or movsl sub daa roll and or std sarl push inc push cld jae ss sti xchg iret outsb sahf pop jmp nop add adc mov ds insb addl ss push pusha mov or jle adc sub jmp jne dec sub pop test xchg cmp adc divl inc mov push shrb pop fnstsw or outsl or hlt jne xchg cwtl inc dec jns lods sbb lods xchg xchg (bad) pop das mov push pop (bad) adc arpl sbb js add mov jge inc rcrb out orl inc dec sub rclb popa dec cmpl stc or cwtl out push push dec dec mov xor and mov arpl add imul sbb push cltd sbb mov js mov cmpsl sahf into inc stos test mov dec push mov dec lret mov mov imul push adc add push popf xchg rcll insl push imul movsb dec pop xchg jmp cmp clc aad and jecxz cltd mov test xchg xor lret inc add jp xlat pop fimul ret dec bound mov and (bad) (bad) popf xchg loop adc outsl das scas mov notb scas out pop aad cli pop or push lret inc fs pop jle jecxz leave loopne (bad) loopne mov xor daa movsb mov leave dec push or mov dec sarb or (bad) push mov mov adc cltd test inc sub (bad) mov scas mov or (bad) xor out in sub add in gs push (bad) cmp rdtsc popf sbb and and fisubl lds cs and fnop imul mov inc mov mov call hlt out test mov push fldt ror test fs test and mov int3 pushf xor gs lret insl je dec xor leave in and movsl add ja jb mov sbb (bad) rcl add sub jb push sbb mov ss lahf xor arpl jo cmpsl inc (bad) bound movsl pop imul popa add xchg mov and scas scas xchg jg lock mov stc mov faddp int3 shr lock (bad) dec (bad) sbb xchg mul rcrb insl gs mov jmp daa cld push adc jge inc out or clc mov outsb inc inc cld push aaa out mov lcall inc outsl inc xor das stos fsts cmp lcall outsl dec leave arpl push pop pop dec cwtl movsl fmuls lea xor aad lea sbbb sbb fcmovb fildl clc arpl sbb jl jae or sti jbe sub or loopne mov or lahf push adc and (bad) lahf lea jns xor xor pop sub add enterw pop out imul xchg xchg sub mov jp pushf adc cmpsb jae popf xchg and (bad) mov cmc jb cmpsb in xor aam push sub cmc in aad (bad) aaa inc and (bad) jne sahf sbb stc jmp mov adc cmc sbb es mov and jae adc sub (bad) xchg xor or sbb sarl mov lds int test pop unpckhps xor sub mov nop das (bad) popa lret xchg mov cmpsl in or negl adc mov cmp in xor dec ret sub jnp fnstsw pushf inc or xlat sti sub and dec lea mov in fdivl xor mov cmc fmull cmp xor dec inc mov pop rorl pop int3 mov aas push xorl jns ljmp cmpl enter inc roll adc scas mov das fs jne adc xor aad add stc dec xchg arpl clc jo mov jp inc push les (bad) into add les push sub sarb adc dec lcall fidivrl popf sbb jmp movl jg ss add inc mov inc add mov adc aaa ljmp cmp imul lods adc dec imul (bad) sub dec jns mov mov mov enter xchg inc adc daa mov imull xchg inc fldcw decl push lock shll incl lock jb cmpsb mov adc ss dec (bad) mov jne clc push cs hlt push mov (bad) mov sbb enter dec or adcl js push repnz mov movsl cmp bound xchg mov pusha mov or (bad) pop out mov mov stc repz jl or nop in pop inc adc xchg xchg out stos inc les pusha test in cs jg cltd les lock lds cld cs in mov and sub lret jle aam aas and mov fmul cld or lahf dec lds in lods mov inc xor icebp dec test scas fbld jno inc into jne inc bound xchg push sub idivb test adc cmp mov gs mov dec into inc jne push (bad) mov push dec push loope orl push pushf mov cli aas out mov gs dec mov mov ret xchg xor loopne cmp inc scas aad enter fsubrs jecxz jno xchg insb adc mov dec and popa cwtl lea rcrl xor sbb xor (bad) xor push dec clc (bad) rclb bound push xchg pop push sarb int push adc das adc or dec dec jp mov mov fs add into sar ss (bad) cli daa dec sbb (bad) jmp les push add dec mov inc push repz jae imul enter imul dec out and pop or sbb add aaa adc je popa shr arpl adc pushf or jp jge pop ljmp enter push xor jns frstor stc rclb cs sarl sarl xor add add add test adc xchg xchg mov or xor test pop dec insb sub int jmp andl incl or fwait sbb ja inc mov das jle aaa mov jb je test cs into je push pushf test scas adc (bad) out inc sub jl mov jno lcall cmp stos mov fwait pop push and jl gs adc mov push xor arpl sbb aaa sti or xchg cltd dec mov inc sub mov cli mov hlt ror clc icebp test jne test xchg insb into lret pop je xchg (bad) loopne mov shr aaa gs int xorl mov mov icebp andl gs jb call mov xchg push sbb mov repnz or and mov cmp adc add push arpl jbe cli pusha mov mov xchg out out mov cmpsl cmp int dec lods mov xlat les ja test mov push sub or out mov add in repnz mov push cld and daa aaa sbb js cmp adc insb sub dec je lds popa fdivs pop out add push xor clc cli (bad) loope push jg mov jno push sub bound clc or xchg mov cwtl sbb (bad) dec imulb sub cmp add push inc mov out aam push lahf dec out pop scas pop lahf pop mov pop push or or mov adc pop add sbb cld xor dec insl iret inc ret mov add (bad) (bad) jg int3 (bad) fsubrl repnz mov xchg lahf popf jge push dec mov add cmpsl mov or iret fisttpl lret gs lahf cmp push (bad) aaa fidivl lods or mov push inc inc push dec ss jl mov push mov adc xchg mov or ja pop dec xor into testl in stc or js incb movsb pop in dec test adc mov in push data16 mov jnp mov lock (bad) jle int adc cmp xchg jl cmp push fmuls mov xchg mov or xchg push es divl jge mov push mov fucomp xsha256 cmpsb push push (bad) push mov enter mov cli xchg ja xchg inc push iret std lret jne aam hlt xchg lcall (bad) mov lcall daa scas arpl push xor xchg popf mov mov daa sbb fbstp in xchg scas fstpl mov adc fstl clc inc (bad) sub mov xchg jb xchg nop repz xchg shll sub cmp test sbb sbb in out xor pop sub in (bad) dec dec mov clc (bad) imul cwtl sahf leave push cmp lret jae sub sti mov mov lock scas cmpsb adc sti pushw mov call (bad) and nop inc loop scas jg std ja cmp int3 int test lods inc fist ficoml stos xor in outsb ret push inc out ss in add imul movaps imul cwtl pop fwait adc fisub jmp cwtl in daa dec loopne stos mov dec or nop data16 out xor movsb rcrl (bad) clc in idivl and cmc (bad) (bad) nop jae pmuludq sub fldenv mov and inc jno and and push adc out push push icebp imul arpl pop lea loop stc add imul and mov stos (bad) ja push pop mov movsb in mov and out push je cmp pop push ja outsb fwait (bad) mov (bad) xchg mov pop test pop inc clc (bad) pop ret adc (bad) mov outsl and inc cld jnp jnp sti enter jno sbb add punpckhwd mov xorb repnz mov add mov int mov inc mov aad xchg icebp and or adc jge test icebp adc mov mov bound inc mov repz call cmpsl jns inc sbb lret lea xchg fnstenv add cmp pop cld stos pop mov mov ret xor int3 lods push push pop pop pop jecxz aas stos (bad) mov pop aas adc push and push iret lea mov movsl mov test ja out (bad) cltd push insl mov add adc inc and sbb fisubrl int (bad) (bad) and and lret jmp or lahf fucomip dec (bad) imul sub dec inc es fcmovne xchg fisub mov jp cmc jo inc and and mov sti and push inc roll xor inc notb imulb sub push (bad) adc add (bad) cli pop pop lods jo cli pop test mov push pop cmp cli push push jbe jg add inc test shll cmp sbb lock sbb push pop push mov and stc movsb push dec pushf xchg jnp rcrl jmp test mov mov das push scas push outsb shrl cs push iret push dec pop push scas mov cmp ret js adc insb adc aam or jle iret mov dec lahf cmpsl call ja and xchg add imul xchg out sbb xor mov pop fist lods test push lret out mov sub push cmp stos stos add xor xor dec enter scas inc fnsave dec and cmp jae mov xchg jl,pt sub mov jl out fcmovu lret adc or pop (bad) out fstl push xor scas addb pop mov dec scas push mov lcall jecxz lret lret jmp dec stos arpl (bad) mov sbb pop mov xchg mov mov mov pop out repz aaa xor adc fildl xor sbb and push add add cwtl ja pushf push jp add ljmp lret cwtl mov aad pop push push aam mov cmp loop push into dec (bad) imul incb cmp push arpl lock jl cmp inc movb in icebp add pop mov sub xor outsl push mov mov ljmp neg cmp outsl cmc push leave fldl call lock nop stos mov dec (bad) jbe (bad) and pop sbb out push add mov or les bound push arpl jae ja push out loope call js imul xor push mov fucomp ds faddl scas (bad) je das mov jg inc jmp scas cltd xchg push cwtl mov jae cmpsb les jmp lret popf add mov mov leave (bad) mov add xor or nop push jle rcll addr16 stc int in ds sub repnz lret add enter sub (bad) mov leave into aas gs out inc mov xchg mov xchg mov xor stos (bad) test shrb mov popa jle sti cmp jae loopne or or punpckhdq sti lret enter inc stos ret jae dec loop lahf mov movsl ret pop mov xchg mov mov inc es xchg pop add pop arpl xor aas int3 test aas es sub lret pushf nop jecxz adc nop (bad) enter in imul push push inc (bad) enter test push (bad) and repnz into lret xlat mov pusha movsb mov add inc lcall pop and sub into pusha dec sbb jecxz inc and cmpsl cmpsb in negl sbb rorb pusha and or sbb pop scas aad push jge repz fmul xchg movsb popf inc jns pop jmp test std dec (bad) sub pop jmp outsb jecxz push lea jne shl inc in pop xor xchg daa insb push sahf cmp es mov ss xchg cmp jb mov aas xchg dec jl mov vucomisd push inc out cld insb loop aam int push rorl mov movsl inc and add lahf lahf int3 leave ds adc mov pushf ret or arpl pop loope leave ljmp loope dec gs jo scas mov mov push mov ret sti fstpt cld in lcall jo mov pop pop xor insb push or add pop lods cwtl (bad) in out and in rorb xlat insl (bad) jnp icebp adc push test movsb sub adc push fadds jb lret roll out (bad) jns cmp test bound jae inc aad push scas sbb mov cwtl xor sbb mov push jae hlt jae (bad) mov imul push stos add inc (bad) in insb push inc inc orb popf mov xchg push cmp leave xchg inc nop xor dec andb scas push dec sub jae fildl aaa in add adc inc mov push ss in test jnp fs addr16 push cmp mov std fld stc jo push rorl xor bound pushf jbe (bad) in cmp dec inc sarb insl mov lcall mov jne and ror sub (bad) cld or ds int3 movsl jo or jecxz mov xchg adc loope cmp or ja (bad) sahf ret je and movsl (bad) mov jl les and divb push mov adc loop into xchg cli sbb sar pusha imul aas xchg jge loopne,pn jne jae mov je mov es (bad) push ret and push pop fwait push ficom and inc cmpsl xchg sbb pushl cmp cmpsl jge dec mov adc push aam inc stos adc sbb pop mov or and push pusha out cmp into push sbb insb mov out js and jl lds outsb pushf shll mov fidivr inc xor int enter sub dec jae test push mov lods cltd mov ljmp inc xor jecxz mov cmp mov xor sub and in das (bad) js nop jl dec movsl stos test sub insb inc push mov pushf loope,pn fwait in sub dec push (bad) hlt leave cmc cmp or dec enter fldenv aad insb insl push push subl xor fsubrl hlt cmc cltd inc mov aas enter inc cs outsb xchg loopnew mov dec into mov mov adc cmc mov jns sbb dec iret mov mov mov mov out aas jno pop sar pop ret dec rorb or xor jb sub dec (bad) dec cld sub repnz in mov gs or xchg xchg ljmp inc mov mov and out out fwait jne push mov jnp or imul adc push inc aaa js lea jmp loopne push mov mov cmp rcrb jne sub sub cli movsb cmp pop call in lcall fwait xorl mov sbb push mov aaa (bad) mov push mov jg popa jb add ds hlt cmpsb push mov (bad) cvtdq2ps mov jmp fisttpl shl pop xor movsb int mov cmp js test js movsl int data16 add mov (bad) push in mov and or push (bad) push das push dec pop orl fmul stos out push mov fwait xchg cmp add jo aad sbb insl movsb insb or subl sti ret inc ds rolb mov mov and push or xchg mov repz aam jg xchg mov pop cld mov cmpsl bound and imul cltd sahf into or adcl sbb sub fcoms into call popa in sub fstps push test test mov push mov cmp aas mov adc and inc ret dec mov xor cmpsb lds pusha pop and mov or add jle iret in mov incl sub lcall ss cli popf mov sbb adc jns and adc out xchg icebp push out ret jb and xchg mov in repz pop xlat push jecxz lcall test jp mov sub jge enter fst (bad) mov jns add lret cwtl stos xor scas sub mov add test sbb sub sbb push (bad) jno test (bad) jp hlt adc mov adc andnps je leave mov push mov cmc mov adc dec mov pusha jo out mov add jg fbstp sbb mov and mov mov or push xor fsubrs nop arpl jno js loop insb out mov or push popa fcomi popf pop pop sub push mov notb call fwait mov jb lcall shlb push inc jb or fistpll cmp pop lcall mov je xchg hlt mov sti xchg in dec xor sbb popf push daa pop mov sbb sub pop pop lea fiaddl mov sbb fsubrl les ss cmpb icebp add lds xor mov and jnp jae add push push push and popf (bad) out repnz lods xchg call pop daa (bad) sub popf adc adc pop gs xchg jle clc mov and shlb out fsubrp inc lret outsb repnz into or inc push push icebp jnp xchg and push outsl sbb icebp pop xor jle mov push or idiv xor xchg test pop mov in (bad) push cltd sbb outsl imul pop or sbb inc jmp xchg mov or push sbb scas pop pop xchg insb mov cmc add ljmp arpl sub push xchg mov mov sub mov lods in cwtl or or cmovl js leave daa es push psubsb jle gs sbb andb repnz adc pushf movl mov ss cltd jmp pop fildll xor jbe xchg (bad) fidivl les repnz sbb cmp cli arpl mov repnz iret pop aam add mov xchg bound aas xchg mov add into inc or inc stos pushf mov cwtl adc pop or das in shll out repnz out movsl aad inc adc sbb test scas jmp pop mov and sbb pop mov fst leave adcb jge ljmp push (bad) cmp enter mov xorb cmpsb pop insl std or xchg call daa imull pusha jbe cli cmpsb jo push lret pop add sub movsl (bad) inc add add out fs cmp test cmp add xchg dec ja jle clc pushf mov gs mov add fmul mov jne cmp outsl add (bad) sub adc aas iret xchg call add sbb or dec push dec ss pop adc cmp (bad) ja sub movsb test push adc dec repnz mov aad (bad) lock imul sbb push insb xchg push loope dec bound inc adc inc jmp push out push repz adc xchg cmp arpl pusha js mov lret out sbbl mov into dec and mov insl add dec inc sbb xor sbb ret mov cmp cmpsl es jl stos and das pop cmp xor movzbl in cmp mov aas icebp xchg add pop adc scas pop vmovlps push xchg sbb dec push cltd out mov js mov das and (bad) xchg jbe in enter int3 stos out popf push stc into push test popf out sub sub ja pop pop and addr16 push sti rorl dec pop fs int lea clc iret cli mov push pop icebp arpl sbbl fidivl ret jl jb inc cmp out (bad) sub xor and xchg cmp mov fiaddl jle (bad) cli imul adc push lock mov xchg jno stos or call sub push outsb out in cltd sbb and int test mov enter or xchg mov popf (bad) std repz pop mov inc jmp aaa addr16 adc push ror rcll fildll sbb jmp iret fs outsb (bad) pop jle pushf cwtl insb and xor mov pop lahf add mov mov mov cmp icebp xchg mov cmpsb xchg inc jle pop dec in (bad) icebp adc cmp fdivl jge test adc lahf push jecxz lock sbb sub mov inc dec movsl add popa (bad) dec (bad) leave ret scas rclb xchg mov adc push xchg cmpsl adc jne mov adc pop std aas xlat arpl es sbb mov ss gs sbb aam mov or call cmc or insl mov adc sub iret shr jle pop dec cmpsl mov jge ljmp (bad) aaa loope out nop insb orb test push out roll mov loopne test mov add sub push and jl fnstenv mov mov aam daa bound push and test add sbb adc sub adc xchg pop dec sarl cmp mov xor ljmp neg insb out sub mov sbb jle push (bad) and test sti jno xchg xor clc xchg adc or inc (bad) ss popa fxtract sub xor inc xor call shll movsb push out ret das fmulp sbb ds popa fwait adc inc and lods mov jne imul in in jp mov xor shll gs ja xor xchg cli push (bad) and jecxz sarl and xchg sbb aas cmpsl jecxz xor in adc inc lods jge or rol inc push decb insl push sub xchg push testl jo lods xor cwtl sbb xchg in fs in addr16 xchg pop loope cmp xchg je out push cmp test dec adc cs sub mov pusha sub or adc fisubr jg push frstor andl jbe rclb pop push lods sbb add outsb stos fs aad dec or cpuid or cmpl in mov in stc cmp sahf sbb scas push (bad) addr16 ja adc or inc sub test out test outsl rcll push or stos mov xor pushl pusha int js rol dec pushf cmp push mov or popf arpl bound xchg pop ror add popa addr16 (bad) xor push xchg jnp into inc cmp push fbstp movsl nop add pop sub add add mov popf and dec lods pushf mov and pop mov popa jne ss and xchg jle jns (bad) or push les sub hlt das or pop pop fiaddl aas repz push aas arpl cld ret sbbl push data16 or xlat pop push mov mov aad ja out cmp lock lret adc or je pop out std test pop lahf outsb mov inc or fsubs cmp cmpsb lea pop ret cmp js push pop lret (bad) fistp jge lret dec sbb into lcall out push repnz mov adc data16 (bad) mov pop mov add push mov lods adc or inc xchg inc pop add stos inc (bad) addr16 inc fldt fmull dec xchg mov lahf push psrad dec xchg aaa icebp sbb mov (bad) jne out sbb rcll shll inc in push mov ret rcr mov mov mov rorl push adc mov and push pop scas jbe shrl and add ss xor cmpsl call pop mov mov adc sub push popl sub in and cmp mov xor jb cli out loopne movsl nop pop pop js push jl jne sbb push mov insl mov dec andl hlt sub and stos es mov xchg lahf ficomp out and rcl gs gs mov add aam fldcw xor cltd cwtl fimull jmp cli push popa push sub hlt push bound lea push (bad) stos movsl push add test fcomip pop adc fisttp and dec arpl or dec ror fimull and arpl pop cltd xor fldcw jbe and call (bad) xchg rorb mov cmc or sbb jp add or xchg jmp sarb cmp loopne scas or add ljmp sub push std jb pop dec pop adc push sbb das mov lds out in push inc outsl loopne pop pop and popf test push add push inc insb inc mov mov movsl (bad) sbb dec mov out pop cmp fxch (bad) xorl cmp test in imul imul outsb pop hlt xchg cmp adc jae shl mov push mov xchg scas jne cli add xchg inc cmp jle cmpsb sbb xchg cmc int cmp xchg (bad) pop sbb mov nop aad mov out (bad) mov xchg cmp lret pop imul popa fbld test aas push dec cmpsb sbb sbb fsubrl test jle repz sub test add fdivs push das pop (bad) xor (bad) inc and cmpsb mov jp push sub std push xor adc inc lret leave xor sbb adc dec mov xchg ret data16 jb pop lock jnp xor inc xor flds call out or inc mov outsl addr16 out sub push fidivr cltd bound loop mov xor mov (bad) out mov xchg js mov mov shlb test add sub bswap vpcmpeqb and mov les ds sub push mov cmp gs int3 (bad) dec imul int jno lods imul imul add mov xchg dec and inc inc sbb pop in xor stc rolb jmp jno loop in int dec arpl dec or loope mov and loope jp pop and addr16 inc sub mov les jg shrb mov gs in nop test cs into leave inc cs add xor (bad) fyl2xp1 xchg push cmp jle push fsub out mov mov rolb enter mov (bad) xchg xchg sub push aad inc push into lds hlt cld enter jb jle enter icebp cmp out dec fidivr jne and xor sbb loope fcoml stos sbb pop cld mov cld bound lcall pop fisttpll lahf addr16 lret pop sbb jns sub and out adc add imul in pop pop cmp dec (bad) pop push adc push add mov sbb dec xchg lock xor iret push sbb mov loop push cmp aam dec outsb rclb sbb mov out lods lahf pop mov and pop and les test cld mov fnstsw gs mov pop insl pop and ss push iret or pop or jle mov adc into ss and (bad) into or clc repnz pop and pop (bad) jl scas data16 into xchg xchg mov aad popa cmc xor (bad) xchg mov cld fdiv xchg mov adc push pop xchg fcompl (bad) cli in out xchg dec jno cmp sti sub repz addr16 mov lds (bad) pop int3 jnp aam outsl in imul lcall call mov cmp push lds leave je jns daa rol gs cld pop mov test sbb inc jmp sbb mov and popf or jl lods arpl mov cli sbb in cmp pop xchg add bound dec cmovae jmp iret inc mov xor dec outsb cmp lcall subl nop xchg xlat vcvtsd2ss push and mov hlt push faddl xor and mov cmp sbb and mov cld cmp pop fcoms xchg aaa js sbbl stos rcrb pop aaa insb iret inc nop pusha sbb mov mov lret into and or adc inc dec sbb fidiv add sbb inc mov cmp js lea or cld dec roll sahf imul adc push inc fidiv mul out xor mov test into cld push (bad) repnz mov scas hlt stos xor andl ss rorl sub pop pop inc cmp jp dec dec jb mov (bad) dec adc inc sub xchg das or bound and or xchg das (bad) mov pop mov sub xchg enter ljmp cmp lds xchg adc push xchg push cmpsb xchg xchg popf add sub sub pop pop cmp out lahf and repnz xor add inc cmp popa sbb push (bad) stc jns shr push clc mov int adc aaa ret notb (bad) lahf in lods push scas mov outsb jb cld jl sbb adc cwtl (bad) sub or jae fs into adc arpl xchg add test jb mov jb repnz push cmpsb enter rorb es sbb push cltd popf int mov pop fstps push roll push inc rolb mov clc stc fsubp pop mov jo test jo cmp mov adc or add lcall jne adc cltd mov or mov (bad) cmp adc mov test es mov push or out lods aaa notb inc jg stos dec outsb les outsb nop lods int3 pop ljmp mov push frstor cwtl pushf adc mov hlt and cltd mov add xchg jnp std outsb mov push pop jo inc sbb mov pop clc xor sti adc lret fistl mov aam nop int3 fsubr add jg push repnz push call nop cmpl fnstenv pop cmpsl sbb mov dec ds xor pop inc xchg loop add stos test push scas clc je dec xlat lods cmp daa test mov movsl cmp add aad jmp ljmp fisttp or or cltd add xchg lds test (bad) loop (bad) dec xor xor and (bad) pushf jnp fistpll inc mov pop jg adc dec mov lahf pop xor dec mov dec push inc mov dec dec stos jl or mov cmc adc lods xchg dec cmpsb leave test mov (bad) jle into fbstp fdiv aas push adc data16 scas xor imul add sbb ljmp dec out je adc push or ds or inc pop mov out in xor popf (bad) loopne or in add mov out push cmpl adc imul incb inc pop dec dec nop fstpt inc mov lret cmp adc dec inc pop jecxz or adc loop ficomp jae rolb push mov cmp inc fnsave mov mov xor je add enter sar push push dec iret adc lret popf ret data16 int mov push sub jns std ror xchg xor jl stos rcl into or xchg (bad) stos push jle adc fwait xor fwait jp pop loopne in sbb repnz push xchg pushf cli sub rcr push std dec xchg in pop mov lds imul add fcomps push xchg ret flds mov pop ljmp popf sbb sti push jbe sar out xchg xlat pop sahf add xlat or icebp adc (bad) pop or pop mov sub dec or loope fsubs jne push outsb cwtl lret ficom unpcklps jle aam and push scas (bad) push negb dec inc in scas push jp mov and imul fidiv cmp xlat int3 pop aas in js test into in test stc out jp mov jae icebp add or es in adc scas das mov lcall js push cmp cltd push xchg push jp,pt lret dec xor cmpsl adc addr16 mov clc inc dec stos fisttpll mov out inc stos xor xchg or stos adc mov sti jge push (bad) and daa xor in pop lock xor (bad) push daa leave push jae jle mov mov add movsb and cmp loope xchg (bad) xor lods test and jp aad lcall inc xchg in xchg adc cs ror mov mov test (bad) ds fcom push sub imul (bad) xor pushf addr16 out mov or push inc adc inc mov movsl and loop cmp inc into andl and dec xor pop aad jg dec sub pop xchg and ret clc (bad) mov nop roll push inc jle mov aaa xchg cwtl orl fdivrl mov test in aad add loope push sub lcall xchg inc dec bound cmp fstl je ss sub (bad) mov jp jg and add push fucomip addl in movsl dec stos lds (bad) outsl mov mov adc and out fsubrs imul sub mov jno aam repz xor pop outsb cmp pop pushf sbb jne adc cmp adc dec out xchg jmp push cmp lock setp pop fsubrp inc outsb mov cmp fsubl loop loop cmp adc add fnop inc xchg std js out arpl outsl movsb stos loopne outsb mov les repz repz enter mov arpl xchg cwtl cmp enter xchg notl fisubl mov lahf (bad) jo ret jle cmp imul or xor jb sub xor lret pusha xor pusha xchg mov (bad) or mov nop pop lds fbld in out cmpl or mov cmp inc (bad) aas es (bad) pushf push xchg fldenv aas movsl pop sbb mov pop push jl out cli inc outsl outsl outsl mov pop lcall iret iret xor xchg insl pop nop ljmp popf jle or push int3 xlat pop std ret enter bound (bad) lret scas jno fs add in sub mov xchg pop sub out lea mov in and xor daa push aaa inc sub idiv sbb sbb out popa (bad) push dec call push stos icebp in sub adc and mov adcb imul adc mov orb jp (bad) inc hlt scas or mov jmp ja pop mov in xor mov and pop xlat clc (bad) les jle in mov dec lods and or jne xchg loope imul adc mov lahf fs or cmovg sbbl fucomip mov jecxz popf xor xchg jb xlat repnz je push xchg es incb inc in mov xchg (bad) out xor ljmp fisubrl dec and fs enter sahf stos imul xor sbb enter ror sub call (bad) ja leave (bad) xor into lret inc inc pop jnp jbe shrl inc or jl jg stos aam shrb push or push es or inc pop mov cwtl sub not push dec stos mov inc add jno push pop mov lods sub mov pop inc jnp mov cmc jle cmp (bad) push (bad) xlat dec rcl jge shrl push fcomps add js out mov ret xchg cli or mov dec incl pop or inc test inc aad data16 jp dec hlt outsl jnp out push push or mov mov or xor add push out mov push repnz lahf jmp xchg mov test lahf test cmc pop xchg pop cld aas imul hlt mov lds das push into repz arpl test fisubr sub gs insb and cmpsl fcmovb popa into push xor jl jns mov mov in clc sahf push repz lret xchg pop push mov cltd push pop sbbb sbb push push jecxz movsl test xor pop cmpsb out (bad) mov fisttp adc out add rcrl sahf dec imul push push push jle dec xchg jp,pn hlt pushf cmpsb jge in pop test in mov mov pusha iret int3 jnp gs ret add cmp rorl xor mov sbb mov (bad) repnz xorb add lahf lods cmp fdivrs lods mov cltd addl lret in pop push popa (bad) in or dec or movsl mov movsl sbb fisttpl dec lea mov and (bad) iret ds cmp js or fisttp adc push mov dec insb push sarl ja cmp cmc and cltd sub call pop mov test sub sbb push imul js mov test fnstcw mov and sub fwait sub dec adc add mov dec les rcrl inc pop scas iret cmpsl mov mov bound sbb out inc xlat cltd arpl pushf in add outsb or jns mov inc aaa pop jmp ret dec outsb (bad) in stos fisubl imul hlt pop daa adc (bad) (bad) test push imul out xchg jg pop loope decl aas fldcw out (bad) cmp roll add mov mov out clc rorb push cmp outsb daa jmp jmp ja mov outsb lret call xchg push outsb mov cmp lods xchg push (bad) lock loopne xchg cmp rcr jae jne pop fdivrs test cld xchg or xor jp jo (bad) int3 sub das ret cltd sbb and xchg inc adc and les inc sub pop je fmul xor push push aaa fbld cmpsb dec jae push inc or or loope xchg dec leave jp test sbb dec and in push adc xchg ret in sub add pop jbe gs sbb cmp in jae js sub repz addr16 add shr daa (bad) xchg mov pop or push daa sar outsb pop rcll xchg out cmpsb cmpsl sub cmp fdivrs movsb (bad) adc xor lret mov and inc xor je mov adc pop shr jle sub xor cmc sub dec lahf mov loop negl xlat dec xor rcr sub jmp ljmp shr scas fwait jbe iret pop or test mov cli xor adc stos addb ja add mov addl dec enter and mov iret das aad mov ljmp cmp test jg xchg sub dec shlb lahf pop test nop push jmp test sbb or gs lods in fbstp and sbbb xchg dec cmp fisttpll clc push add xchg xor pop xor icebp inc mov repz sub jle mov add fwait sahf xor sahf cmpsb loop stos pop inc pop dec mov mov mov mov cli sahf rorl int jae mov mov (bad) push cld cld jge sub clc out adc adc jae iret mov (bad) mov rorl mov lcall fs mov adc push cmp je lock xchg (bad) pop jg or pop mov xchg jo sub iret dec push xchg addr16 nop addr16 rcrb repz dec imull xor out push xchg lods push pop icebp mov mov push test out cmp orb iret sahf xor addr16 repz jb ja xlat mov stos test mov inc sub and push xchg mov mov jecxz push insl xchg add jb pop push sbb insb aaa push jne test and dec ds sarl sub jo or adc inc es inc mov lea mov xor and mov ret cmp cmp inc call flds or lods cmp lock xor lea mov je add cmc add andl push (bad) adc fs push negb xor sub sbb pop popa cmp (bad) cmc dec lds push adc fsubr adc jmp xor daa lret mov sbb outsl (bad) mov push in xchg pop aam sahf ja jle pop add hlt jb pushf dec orl addb lea inc push (bad) xchg cmc or sahf cmp out mov cli push fstl pop out push imul (bad) fwait sbb or and mov mov lods repz inc jae stc add push das fwait xor jle pop cmp jb out cmc and fistp or mov mov mov mov clc out lea in fdivr and xor sub repnz or popl push jns cmp scas sahf mov aaa and dec movsb and imul outsb ljmp sti leave inc sub and repz ret jmp in lods dec sarb fildl pop dec sbb push (bad) lret push cli mov sub jns inc cmc enter mov cli lret dec lds pop pop sahf mov aad add fsubrp dec inc mov (bad) rcrb add outsl xchg stc ds adc fwait and pop or jne and mull sbb movsl xchg mov stc ret or push enter pop cwtl and push cld cmpsb mov mov lret pop inc mov das jp push xor jg inc jecxz add xchg fisubrl and ss jo sub pop test push or and data16 outsl out into stc sbb bound rolb mov aas xchg leave cmp mov aam xchg push fdivp add sub xchg and stc cmp jns cltd push arpl popf jo cmp sbb sub das adc jl arpl pop dec fmul clc lahf xchg leave in ret ret (bad) sub (bad) jnp mov mov xchg popf jmp (bad) imull int3 inc sarl mov shrb add and push dec xor movsb enter jne inc and cmc mov subl call call (bad) mov sbb test je push out inc enter or add scas fimull scas lods out into mov jbe aaa popf ret or pop jo pop lahf insb sub jmp sti pop in cwtl fwait mov add mov cmp push jae orl bound push std jmp inc mov mov test data16 mov insl xchg repz out (bad) mov push data16 adc out popa add dec xchg sti mov loope fldenv cmp inc inc fsubr insl or inc fldl je cli push cld pop cwtl lods repnz inc mov pop push gs aad adc pusha (bad) jmp push push push daa mov push cmp adc in lea adc pop iret mov add mov aam rcl mov negb xchg fistl rclb aaa fildl jg js xchg adc sub out adc mov rcl loop lock cmp in call push sbb jnp pop adc mov cli pusha test pop cld and shrb push pushw shrl out cmp outsl in mov add imulb pop push or mov jbe adc pop js cmp sahf add add popa int3 sbb daa (bad) mov xchg mov test jg mov mov aaa mov inc fwait mov addr16 dec je mov sub aam cmpsb cmp popf jno push fisttpl enter mov dec aas jp mov (bad) imul gs mov mov mov push clc inc xor mov push hlt fbld iret outsl sbb scas bswap scas rorl sub xchg nop jne adc inc fisubr mov pop dec fwait scas lahf call loopne xchg test addr16 xchg std ror sbb lods or dec push rorl (bad) jnp mov aaa sbb subl mov dec loop movsl adc pop or call mov adc out lret mov and sbb ds mov loope hlt out fnstsw notb stc bound inc mov inc xor xlat je (bad) mov sbb int insl push popf jne fimull sbb sub fstpl mov jo lock loope bound push xchg mov mov xchg push cmc adc jle sbb sbb sbb or xlat lods add jnp leave mov lock popf add adc inc fmuls js aaa jecxz pop sti aaa xor out in and js mov stos insb fcompl (bad) mov sub addr16 inc or pop hlt mov shrl call (bad) repz xor aaa rclb pop mov mov jbe push test xchg jmp pop aas call hlt cmp dec icebp jns (bad) jmp push push mov rcrl scas mov das aad lcall cmp sbb push push push jle fidiv adc inc mov shrb stc push cltd xor std sti adc in adc dec pop fadds sbb sub shl and and or or dec mov repnz adc les cli cwtl adc movsb adc into imul decb fcmovne push pop outsl into pop ret popa fwait repz lock cmpsl fsubs cmp out inc shl sbb xchg adc cwtl (bad) in cltd aas daa test cwtl jbe (bad) outsb test test divb lea xor gs ficoml push add pop test andl push lock int push mov adc sbb jbe loop pop xor cs mov mov xor in push dec sarl fldcw pop sbb scas push jo aam cmp icebp xor cmp mov xchg nop mov sbb cmpsb jmp dec lea mov in push cmpsl cwtl test dec (bad) xchg lahf fwait mov int cld popa inc mov jle addr16 pop push dec push inc cmpsl cmp ds mov adcb pop in fsubrs pop mov adc and rorl stos test insl sub outsl daa xchg push stos or pushl xlat dec fcmovnbe sub pusha rcl cld push lret adc mov lea sub ret js loopne gs imul push push sub pushf pop bound pop sbb (bad) outsb push lret arpl lock jp jnp sub xor pop loop stos pop xor jbe dec xor fcmovne cltd fabs lods sub mov clc notb and pop sti aas divl rcr popf int cmp fs add add xor leave xor and xor and mov mov lds dec test incb (bad) lock int3 jbe adc cmc cmpsl sub pop std addr16 inc dec (bad) mov mov sub lret and pop outsb bswap xor ja xor scas out aaa addr16 sarl pop add mov xchg gs lcall popf inc pop sbb jnp fs idivb mov dec bound js lods lret daa sbb movsl es sub mov sbb push idivb in jl jne add mov arpl pop movsl rorl out mov sahf inc leave xor mov add fimull sbb std sbb adc mov cltd inc mov (bad) leave and mov lret icebp insb mov mov daa and es mov and mov test sub (bad) mov add aam xchg xchg lods sbb mov sahf dec ret cmpsl into scas rcl dec inc mov bound mov jp fcomps je into adc nop rcrb movsl inc scas dec adc xor mov insb cmpsl ret iret popa and add jns ficomp scas adc jo mov sti movsb xlat mov js xchg icebp push jns mov stc dec cmpsl ja scas subl ds push ss nop push fiadd fimul xchg out mov push outsl inc cmp pop xchg push jge push cld out daa sahf mov add dec mov dec pop jb imul clc cmc insl jl sbb fcmovbe addr16 jnp jmp jb hlt enter int mov xor lock jbe mov sbbl mov jg stos xchg fnstsw outsb adcb mov in repz pop lds cmp je sbb xchg mov cld lea adc mov in ljmp jmp jb in xchg mov xor lea cmpsb pop mov mov adc jmp pop sub test xor sub repz fstcw sahf xchg fimull push imul repz repz xchg (bad) cltd pop movsl insb loopne es les jnp out pop clc mov mull push mov loop push jbe inc ds pop or or mov stos dec je and bnd jbe out sub stos push push mov add addr16 jno outsb cmp std mov mov push jo xor (bad) or ja rorl xchg dec es sbb mov shll pop cmpsl mov jo je daa jg addb inc into fmul movsl xsaves push xchg sub scas pop xchg lods enter cmp xor hlt xchg popf pop inc cmp push sbb push lods xor out test out (bad) and aam adc mov outsb mov iret lea pop call loope push out ret icebp cmpsl cmp pop fldcw add lea (bad) pop int3 or adc push popa mov dec sbb out add and jmp dec lea call cmp mov (bad) mov mov xchg jo int3 sub mov push jno jb jg outsl jns stc cmp push xor xchg sub add int3 gs bnd ljmp push push out movsl aad jbe test in stc popf mov sbb inc jmp push jno mov or sub and popfw cmp xchg lcall out js pop imul (bad) push inc push ljmp in mov cli jge aad jae sbb cli jmp stos pusha mov cli jle dec or scas pop xchg and fimull fnsave jb,pn xor out mov aad test add or and xlat jmp xchg jl xor rcrl or imul cs inc outsl mov sbb cmp outsb or mov pop jg pop stc adc int3 es (bad) into push (bad) cmp mov mov cmp mull hlt mov dec mov xchg and mov dec xor add mov dec loope and aas xchg (bad) pop cmpsl mov mov pop mov lcall xor aad xchg bound xor add fldcw ds (bad) mov add outsb out aad push lret (bad) int arpl ret bound push jg pop xchg in call mov mov dec mov sub mov cmp loope mov loope pusha xor sbb aam arpl les pop fs aam jl icebp cmp fscale ja xor std xchg push fs lods insl jo loopne mov jl dec ljmp aam add (bad) dec sub das sbb fsubs mov xchg lea pop xor pop (bad) cmp ret jae andb pop cwtl inc in jmp dec mov (bad) mov or les mov adc add mov std inc inc lods pop std mov pop dec jecxz and push and xor gs push cmp bound push jo and sub out in mov or sub sub jns jle pop adc (bad) push xor xor add je scas and dec sub xlat cmp out call pop jg fucomp add pop dec mov dec ja stos lea dec inc dec push mov cli mov cmpsb fstp or mov xchg sbb shll cltd dec push sahf push iret inc das xchg push (bad) jb (bad) icebp push fcom outsb ret std addr16 sub mov (bad) lods jb fs jnp sub xlat jle mov ret pop xor push shlb adc mov addr16 push mov sbb das mov aas cltd push inc mov mov lods imul pop or lret add test push inc sbb or icebp mov push aam mov add xchg imul (bad) jbe push cltd and incl mov arpl lea insl lahf lret xchg inc xchg outsb clc test dec imul add leave xchg es int inc in les xchg call push enter gs jne pop pop and push push in inc and adc test xor mov movsb xlat mov (bad) enter and std pop and xchg pop dec out mov dec jo mov add mov loop jbe dec sub pop lds and shlb mov aad jecxz dec mov orl popf push das ja lds arpl sbb cmpsl or cs es imul push and pop arpl test (bad) cs icebp jge adc (bad) jle test push dec clc daa xchg push loope cwtl jmp mov sub push lock pop xor aas popl jbe inc mov mov mov cmc (bad) jno (bad) pop rol repnz movsl or push iret lea and aam je inc outsb fnsave cmpsb xchg and cmp movsb es (bad) int dec sbb or add aam add ficom fcmovne mov push jo lods xchg lods fabs and (bad) sarb es pop dec sbb sub pop test les push aas xchg xor mov loope cmpsl xchg and fwait add ret ret mov mov aaa mov push in push adc xchg or popf mov adc jp jno and inc dec cmpsb (bad) leave out jae push pusha in mov jecxz push jmp pop test lcall addr16 fisubrl sar pop movsl fwait stos in cltd cltd jne vorps mov mov bound sti add cmpsl dec xor xchg inc shll mov insb test cld into inc mov xor imul jecxz mov in or xlat test push jl loop and cmc sub jle cmpsb sub push test les into cwtl adc dec jae loop ret mov fwait sbb roll dec lret xor or push fwait stos cmc jo inc and sub les mov xchg fldl mov push in imul and shl xchg adc cmpsl push jnp pushf mov inc jmp dec scas xchg lods shrl rcrb and in mov jmp (bad) cld enter and inc sahf lret scas (bad) fs jo test faddl jae push jge rolb inc mov (bad) pop mov add rcll xchg clc mov adc adc pop push dec jno fwait leave fcomip in mov xor cmp fdivr xor dec js xchg sbb (bad) (bad) xor mov xchg idivb lret aad cmp cmp mov push push bound dec adc icebp add rorl (bad) aam sub mov call adc inc jp cmp out bound mov pop gs mov lea dec fnsave jbe out dec stos dec int3 dec shlb jne cmp lcall mov mov sub vaddsd and or pusha and scas xor ss jecxz dec loopne lock inc push ret sti int3 loopne xchg std or shrl in sti shl push fsubrp repz pusha test or gs xchg js cs stos scas push call or push push cmp adc fs mov cwtl fs clc iret mov in cwtl xor into movsl outsb and dec fimull hlt mov jbe std xor or pop stos mov imul jo mov mov sbb push lods addr16 (bad) int hlt mov push popf mov pop jmp test mov cli ljmp mov sub cmp fsubp popw xlat xorb stos xchg stos inc mov push mov std (bad) adc ss cmp jno iret adc sub lahf popa into mov add cmp ret sub or lcall or sub jno sub nop ljmp dec push mov push cmc cmp fcomps mov leave pop mov imul gs xchg pop sub cmp ljmp jecxz pop jae (bad) test dec push mov xchg mov out sbb push repz in shr lods pop pop or jo (bad) sub mov add fisubr xchg add fiadd mov inc loop cli icebp mov push fnstenv cmp fidivl test mov inc les loope adc pop imul and shlb jns and in add inc test lahf cmp xchg repz adc xor push mov das inc arpl lds and mov inc insl cwtl dec sub shll mov push (bad) pop pop addr16 jae mov sbb gs add sbb jp (bad) int dec ljmp jno adc lahf scas push jmp fsubr lds out mov insb jno push outsb jno pop inc xor xor sti or xchg (bad) adc std jnp insb xchg cwtl inc add fwait push pop fdivr aam add jmp fisttp add lods push jo xchg pop jmp push xchg sbb shrb mov lods bswap cmp mov fidivr xor lea sub pusha movsl sbb sar jae or nop add test (bad) sub jno std (bad) xchg ss mov pushf pop ret pop in inc xor mov sub idivb xchg cmp mov or stos andl sub jno push ljmp fadds push and inc int xchg mov or cmp pop cmp pop mov dec lods jge push mov imul rcr xchg sbb (bad) out lret and or out push ss ret xchg mov imul mov dec sbb not jne add fwait ror or icebp clc fcoms lret sub dec lods adc xchg je dec push (bad) mov pop clc or in xchg xlat or ret jbe sub push rcrl bound cltd push xor inc pusha ljmp sahf jg sbbl popf jo jbe mov or cmc inc ds pushf dec aad xchg push add lcall push mov jne fdivrs dec pop negb mov xor pop shll xchg mov icebp mov xlat jo add dec imul roll int aas stos and sbb and (bad) push (bad) aaa jnp imul popf or jp push fistpl icebp mov sub pusha mull add outsl pop mov int push movsb push jmp lret adc xor mov icebp jecxz sbb and popa xor ja mov sub inc push shrb xchg sarl push adc sbb in adc pop jecxz lock jbe jp and jl (bad) fs mov push into pop pop loope add bound pusha mov outsl aaa mov sbb cmp insl mov cmc mov test orl push gs les inc loope movb pop insb cltd cmp sub lcall sub pop add push xorb out add jae cmp ljmp lock sub stos mov add cmpsb add jl test sub dec adc pop jl push addr16 xchg or aad andb out sbb popf imul xchg push fiaddl outsl fildll pop adcl jno push inc mov daa icebp push push rcl pop mov test iret lock sarb fstpt fdivrl sub aam std add and sbb (bad) xor and lret fstl ljmp xor and leave or rcr outsl sub dec jge pop lods xor test mov test add out loope cmp inc cld mov inc dec dec rcll aam cmp fidiv push push loope (bad) mov pushf fsts sub aaa mov push lods out xor std mov gs in daa in mov xchg mov stc aaa pop mov and add in jb outsl mov adc jl mov pslld clc pop mov test popf stc (bad) rol mov les cs jnp rol in pop mov in stos sub xchg mov ljmp sbb mov mov push movsl jno call push lahf shr adc mov cmp jl fs mov icebp mulb mov lock (bad) ret cmp adc repz mov pop pop cmpsb fisubr repnz sub rcrb jl fistl inc dec fadd data16 adc xchg cmp or push sub mov dec insl ds ja jne pop cmp push and lahf push gs (bad) xchg sub pop nop push and and sub cmp jecxz into int cli insl test sti pop dec inc cmp repz mov fcomi pop aas js pop sti mov inc jbe lods ret mov flds xchg je dec (bad) mov dec jb xchg addb mov mov stos inc fwait lahf or cli mov pop clc add js lods push add loopne in or xchg push shlb jo pop pop and xchg lcall cltd cmc pop or push rorb les cmp sahf add fwait pop arpl dec cmpsl cld les fisttpll mov dec mov loop out sbb pop push daa (bad) imull and int3 imul push cld inc aas std aaa rcr lock add lea mov cld and cmp adc mov imul jmp imul lods test sbb cli cmp outsb dec fwait xor mov fidivl std push mov movsl adc out call ret out xor loopne adc dec pop cs ret lea test js fnstenv test dec lock push jnp decl (bad) mov test sub stos jmp idivl outsl stc pop mov mov repz je push popf adc cld in mov movsl xchg pop mov mov push movsl cmp xor loop hlt and ret cmp xor dec sti loop add mov fcomps loope add cwtl or nop push je adcl (bad) repnz sub (bad) xchg pop dec sbb mov cwtl xchg fisttp ficompl sti pop jmp pop pusha loope mov xchg fnstsw mov inc insb fist mov ret sbb xor in or cwtl xchg jg dec sub loop in mov mov mov icebp sub mov xchg xchg xor pop dec mov xor sti push jae push xor cmp and inc in xlat jae repnz and xlat mov testl std mov cli in add (bad) push aas pop xchg jae test add icebp rorl and sahf push fistl insl pop dec pop ficomp inc in push jmp jno xchg add ja outsb push lret pushf or add or insb outsb in loopne call (bad) cmp ja push lret push pop aaa ja icebp movsl inc ja xor xchg push xor stos popf inc jl fdivrs cmp xchg mov xor or cmp shrl iret pushf hlt mov in and nop (bad) icebp push lods (bad) mov sub bound loop fldt imul mov adc fildll xor loop ljmp (bad) (bad) sbb sbb cmp sub pop cmpsb cmp xor jae sbb repz add sub jg mov addr16 aas push push loope cmp push sub xorl das sbb ja or ss inc sub shrl lock nop jmp jg pop adc sahf push in loopne mov xchg dec mov test xchg pop xchg js add inc scas adc loope adc xor push ret incb ret xor dec clc push push leave popf add lret jmp xchg cld sbb push pop shr sub jbe es jbe lahf aas movsb inc in jbe jmp cmp (bad) dec and lea pop btc xchg push pop in dec or dec mov mov and and add (bad) adc jbe jnp popa mov sbb (bad) cld loop sar xor sbb leave pop jecxz or mov push or pushf in sbb add divb inc (bad) lret jg sbb in dec pop loope mov xor pop das jge out xchg es in adc ljmp mov je outsl xor mov jmp dec repnz out aas popa (bad) aas mov scas fs test sub xor lock fistp in sub lods mov jle push fs adc push aas cmpsb sbb sarb push iret push mov ljmp mov dec cmpsl xor adc in mov sub adc data16 sub push push push xchg mov jae (bad) and fisub lcall dec subl in js test imul jno mov push ds pop lds (bad) adc imul int xchg and enterw push adc push mov js xor js mov fmull imul or pop push outsb jnp aaa out ljmp pop fmuls push lods sub inc mov sahf adc pop and shlb das add sbb lds nop jge and pop aam lret xor xor or daa xor xchg dec jo push adc lret pushf ret (bad) shrl add popa (bad) stos push roll clc test sbb and cs je fadds hlt test and outsb xor adc nop insl enter pop push ret push dec sub pop sbb (bad) (bad) push pushf cmc aas add fsts shrl dec mov xchg mov push adc add rcrl rcll es pop js cwtl pop pop icebp adc sub (bad) lahf cld outsb add out mov mov mov sub out test jle xor outsl popa movsl pusha jg adc lods push aad pop mov fsub stos faddp mov inc rorb mov xor stos (bad) jns in dec jp mov inc dec adc jp cmpsb sub scas cmp and pop rorl push push (bad) nop sbb fadd cmp lea or adc into test pop movsl stos ficoml add movsl fnstenv ret cs xor xchg popf aam xor das sbb dec add stc aaa insb and mov hlt loopne xor mov inc clc jg sub (bad) dec xchg xchg add dec push rcrb (bad) cmp mov dec cmp cwtl aam or fsubrs mov imul cmp fwait sub das popa test in mov xor aaa sbb (bad) pop xchg adc and cmc adc sub sub int3 lock ret xor fistpl inc xor cld test test ds jmp adc stos pushf (bad) fidivl adc idiv push mov jg enter fidivr test nop or pusha es mov jmp jno xchg lock rcrl mov and into imull stos adc (bad) cld sbb adc sbb lahf and sbb pop test pop (bad) lock in sbb cmp aad pop add ret imull mov cmpsl loop add enter std xor faddp fildll rorb xlat xorl sbb mov into pusha pop js aam inc mov adc dec outsl push setb push sub and pusha inc cmpb push jbe mov sbb ret hlt nop in adc jb lods mulb nop (bad) repz dec stos or out sahf sbb cmp cmpsb orl pop jmp inc pop or popf pop orl and cmp stos lret cltd xchg pop jecxz jns cs mov mov mov int3 push mov ss lret shll cli add arpl cwtl push xor sub xchg adc xor (bad) cmpsl cs fistpl xchg scas inc fdivrp lret sahf arpl push iret movsb xor ret jb mov push push sbb repnz xchg jecxz xchg mov stc jo and in xchg movsb xchg in lahf lret xchg cmp cmc push adc sbb jno popf sbb and mov sbb ss push cmp orl xor fwait psadbw repnz (bad) push ret jae xor dec out les mov push enter lret dec mov imul xchg mov mov jno sub adc aaa insl dec pop repz or les xchg or push mov adc popa iret fild dec scas fnstcw rclb pop xchg jmp test dec xor (bad) dec jnp pop inc mov in jnp and jne shll lods out add dec xchg sahf mov insb add dec xor psubusb repnz lods pop pop push notb (bad) push dec int xor sarl sbb mov mov xlat mov hlt ret and sbb inc loopne dec fstl movsl movsb inc sub and inc fsts cbtw subl push pusha adc shrb mov cmp inc mov mov xchg lret inc lock scas jmp mov xlat ficompl and int3 sub std test xor cli pop dec mov xchg fucomi lods push xchg push adc mov mov cltd repz and pop in dec push (bad) mov jecxz cs lds outsl and adc sub jb je pop pop sub sub enter inc jecxz mov mov ficompl xchg jbe xchg jo jmp cmpsl loop pusha repnz sti daa or std adc sti mov (bad) imul cwtl lcall hlt lods xor aad cmp xor mov (bad) ds mov cld xlat mov adc sahf les in cmp lahf sti insl (bad) pusha imul jo push (bad) out or ffreep xchg call or mov cmp leave and jnp jmp mov hlt ds xor in jno test pop mov fsubs scas xor mov (bad) or les ja mov and rorl sbb (bad) loop shl in push (bad) rorl into out mov sub push scas add jecxz adc ret icebp in xchg popa jmp stc jg daa scas inc int mov aas (bad) xor jne inc gs outsb pop sub xor frstor imul addl out gs push in dec dec aaa or les add xor clc cwtl mov xchg fbld mov mov outsl pushf push push in lcall pop mov cmp mov cmp push jge fistpll jno mov loopne mov xchg cmp loop aaa mov (bad) mov cmp cmpsl inc pop lea xor test lcall or ljmp mov jp mov mov movsb xor mov jecxz adc clc jg lret stos inc call lret add lea mov test movsl stos xchg stos pop rol adc data16 jmp clc push xchg jno lds cld add xor inc and xor mov mov push pop mov data16 add jo mov stc adc sub popa inc dec jne xor xchg fstl mov push insl push pop sub outsb imul add cmp sbb imul mov neg add repz das (bad) jb rclb dec jbe sarl mov xor add add pop pop lds pop outsb loope and insb mov loope cmp push sub jbe and rcl (bad) fwait xor cmp rcll lods sbb imul inc sbb test not call push mov push inc mov fistpl dec lret push jnp das jle lods pop dec scas imul sub add sub jge je repnz pop sbb (bad) (bad) ss jbe ficom scas in rcpps sbb iret loope cmp int jno mov hlt or adcl repz push jns (bad) ss (bad) (bad) push ja dec (bad) (bad) cmp repnz (bad) or fisubrl mov or and mov (bad) mov fildl or mov inc fiadd ja enter push xchg insb fstps push mov push pusha outsl and push mov sbb cmp dec scas xchg mov dec cmpsl insb call ret stos cmc fcompl cmc popw gs dec push inc and jae inc inc pop out sbb dec shrl insl inc idivb pop addr16 sub sahf in test xchg into rorl inc mov iret sarl mov sbb inc mov push xlat inc cmp aam pop xor dec sub sub call xchg jnp sbb cli sub xchg mov leave adc and cmp xor imul lea scas es push outsb xor sub mov sub mov jo (bad) (bad) push and mov cltd push jae test cmp addl mov add dec mov jge or repz dec insl sub decl ja mov repz out mov xchg cmp stos notl sti mov jg call jno nop fldenv and xchg repnz mov shl xor sbb pop jge cmp pop rorl push enter sarb sbb cmp cld (bad) imul leave xchg test xor cld test stc (bad) cld fwait dec jmp mov out mul cmpsl pop jae in push icebp outsl cmp outsl decb mov in je jne mov xchg das inc jb cs out scas test ds mov test jg fbld cmp mov imulb repnz sbb mov jmp pop pop cwtl add in cmp inc arpl cmp xor adc in inc jnp push add std ss mov xchg pushf push or (bad) je adc xchg iret (bad) xor push ljmp lret sub ljmp inc xchg ja dec (bad) jo clc aad inc push sarb push sub adc adc lahf pop pop cli jge cs add jmp sarl mov int3 sub mov pop out mov mov or cs adc xchg and fwait daa add out mov test addr16 imul xchg xor dec inc sub sbb fdivrp stos je dec cwtl add push and push pop and mov in and xor (bad) jno out dec aad (bad) jmp aad inc out jne loop cmp (bad) jl dec push dec stos lret and sarb hlt pop mov movsl and mov imul xor scas (bad) jne or test and cmp pop xchg jmp roll aam add mov (bad) pop jne inc iret out push sahf fbstp in cmc lahf in inc (bad) or sar add aad shll int cmc sarb cld jns dec fadd pop hlt fsubrl je out xor sub xchg inc mov stc push and daa mov repz push ljmp daa push repz (bad) mov icebp mov out mov add inc icebp cwtl mov into loop mov push push repnz fstl fneni(8087 sbb imul cld mov sub scas jae push sbb clc outsb es mov loopne ss scas ljmp loop add (bad) in ljmp int3 xchg inc test pop dec cmp out pop dec dec rorl jge cwtl mov lea xchg mov xchg adc test iret shrb push ret scas nop inc sti js fs push mov pop lret idivl and add xorl call or xor and sub aad loopne (bad) pop push adc jecxz divl pop cli sub fdivrs sbb int3 aaa imul bound xor mov mov jb sahf xor fmuls xchg pop jge and inc int3 (bad) sbb in mov iret stc inc clc jnp jns xor add inc xchg jne test (bad) lock mov aaa insb mov vpunpcklqdq and push and adc ss insl xchg inc dec arpl pop push pushf (bad) pop pusha mov push int scas xor pop cmc inc cmp xchg pop xor pop sarb push and (bad) mov aad mov fsubrl xchg sahf fcoms cwtl lret call std mov mov and inc adc and sub and or cmp jg cs cmp nop xchg cld and lods in pop dec adc jne xor (bad) mov cwtl mov sarb inc scas gs in outsl int pusha sar pop pushf mov jmp cmp in mov je mov out sbb popf xchg fisttpl cltd xor sbb int3 mov ss pop in push push mov jns addr16 mov (bad) fcmovb ljmp lock xor jns inc sbb stos out lds mov xor or and xor es dec jg mov push (bad) dec dec std (bad) jecxz mov mov sbb daa in adc sub dec sub stc mov mov out repz fs int and orps (bad) mov shlb enter mov cmc (bad) test adc (bad) mov push lret push inc dec adc scas fistpll dec cmp jbe inc push (bad) in pop dec cmpsb mov mov test xchg push mov and jecxz jne (bad) bound jecxz in xor jmp in pop sub mov or xchg jecxz jle sub lahf imul sbb (bad) lcall divl je push ja das fucomip jnp add sbb jmp cmp adc cmpsl adc sbb daa dec push adc mov stos sub es insl mov mov sub jne add lret cwtl xor xor repz push cld jle pop jae jnp (bad) rcl out popa mov loop aaa (bad) outsb xor dec mov out add inc xchg aad repz lds out jge pop cmpb loopne lretw faddp adc ret idivb dec mov adc aas outsb add mov push cmp popl jb inc mov mov cmp inc into dec fldl cmp push loopne cmp loop xchg aaa dec push inc je lcall sub cld xor sbb lea (bad) ficom ljmp mov ss jnp outsl jae mov xchg pusha push pusha pop and or cmp mov cmc out mov lds repnz mov enter (bad) test and into inc mov jl test jl movsl aaa mov adc cmc lret inc loopne push mov scas repnz aas and in cli add or jge sbb dec loopne jae mov mov push int push mov loopne mov mov maxps xchg sub jp mov mov fidivr xchg cmc cli mov xchg xor outsb cmc add mov mov push mov dec adc ret push xor sub repnz pusha pop mov leave push mov lods sub sub sub pop push lret pop sbb mov mov sub jne jb icebp push ds and inc or cmc call add int3 mov jmp pop lds mov ja popf aam cli pop insl loope (bad) cld cmp jno jg daa adcl xor lret leave jb lcall popa out jnp cmc fisub mov jg cmc mov add or push test xlat sarl pop addr16 dec (bad) push pop inc lds push icebp insb int add outsl mov adcl inc (bad) aad ficom nop mov dec jnp scas or mov mov push add inc mov mov lahf xchg pop testb call mov dec mov (bad) mov sub push push push xchg mov das insl pusha xor addr16 ds cmp in aam sub sbb adc outsb push in jmp lods stos or cmp outsl adc lods jle push ficom mov sbbl fdiv push fidivl xor cmc xor jns or pop mov (bad) pop mov sbb std mov stos aas lret and mov mov imul jge xchg cmp sbb xchg insb jle cmp cmp jle mov dec fiadd inc lea lcall mov sbb and xlat out inc add lds outsb push fs xchg (bad) in fistl (bad) int in cmpsl add jns cwtl shrl xchg sar and ss fisub inc xor inc push sahf aam insl sub sbb repnz cmp out cmp cli adc aam mov leave sub and mov mov pop sub xor mov mov pop dec out add sbb pusha and rcr or inc jmp les cs pop std daa imul (bad) out bound lcall pop jns pop or mov mov xor cmpb jb das les ror or pop sbb les das fs hlt push mov adc ljmp pop js mov jns cmp cmp lret addr16 rcll leave in das cmp push ret add and pop sahf fbstp xchg hlt or fcompl ror cld jmp notb mov scas add sub (bad) mov and jg add mov pop jecxz scas (bad) pop inc fistpll fist sub jl push fcom mov jp xchg inc dec jno or mov loopne call aas je cmpsb or jle popf mov pop clc negl fnsave loopne jo icebp adcb icebp popf push out adc inc or add mov sbb arpl fstl fwait mov xlat inc pop leave enter jne cmpsl pop rcll leave dec js,pn mov dec add loope inc mov cmp fmuls out add jge jae or dec divps xchg adc jmp lods sub push movsl (bad) xchg icebp cltd fcoms (bad) cltd std in mov push insb clc add outsb nop aad jp add (bad) enter xlat push adc and je or inc nop repz add movsl add sub push outsb and add (bad) incb ret cs push mov inc mov mov pop push (bad) mov or xchg mov xchg orl sub add jno sub pop mov or imul xor inc pop cmc hlt or xor push mov xchg dec in jecxz xor or andb adc jle jo or leave out push in dec xlat mov pop popa fdivrl cmp outsl and xchg bound inc xor push or push xchg shrb mov ret push xor jbe loop adc iret xor scas mov pop fs cmpsb in lea movb dec out fisttpll test cmp jl push ja stc and fdivl lea mov loop push adc push add pop mov lds sub mov ret bound add cmpsb aas imul out stos mov testb sbb ret in sub shll jmp (bad) ret clc xchg pop call push jb mov mov and repz cli pop sbb icebp sti mov mov fsts adc jp dec test xor add in test cmp mov xor cmp leave mov mov dec push aaa insl mov repnz mov jnp jbe popl scas repz nop repnz (bad) cmpsl (bad) fnop push enter movb (bad) mov fnstenv pop jecxz jecxz or pop (bad) ret rclb sahf sbb add jp mov es mov xchg mov mov lahf mov sar bound mov mov int3 mov push nop jecxz gs repz inc aaa xor xchg adc call dec orl (bad) addr16 pop gs loop add xchg shrl sub xor mov pusha push xchg cmp daa dec push sub sti xor mov dec jp imul xchg js stos jno mov das xchg jo dec xchg xlat jl inc add repnz pop std or jmp pop mov mov loope xchg out or fwait pop mov inc (bad) xor pop fldcw dec roll sbb push lahf aam or sub xlat jns sub cwtl jnp sbb out cmp mov mov push (bad) pop sbb dec mov mov cmp jg xor dec imul push stc out sbb pop (bad) scas mov jns lock fild test push fisubl inc and fimul in or cmp pop inc popa add sub fwait cmc (bad) adc call xor jne adc add fisubrl outsb cltd and outsl jns xor ds fldt (bad) imul popa add push dec addr16 sbb fs test loopne dec or mov adc hlt mov addb xchg into mov fnstenv out push mov rclb repnz call cmpsl and xchg call mov sbb inc xchg lock ja cs push popl sub xchg pop jg es push enter shll daa lahf or movsl xchg xor cmp mov (bad) mov scas add xchg jmp inc jbe sub cmp jle cltd push movsl pop inc mov lahf mov popf in xchg cmp push adc mov lcall sub (bad) pop dec (bad) mov addr16 pushf dec mov flds push inc call cmp into jp aas aad sub push arpl and mov test xchg xchg es test jp mov clc inc fidivl ret repz add xor sbb cwtl stos xchg das fild lahf pop add std sbb outsb jl add (bad) jmp imul repz xchg jno pop mov sbbl cmp cwtl mov mov push mov lock inc insb or dec adc mov test les (bad) loop push int3 ja test (bad) mov or movsl fdivl lret push imul adc sbb add (bad) popf dec and pop mov je mov pop adc out std es jmp enter insl adc popa jmp in xchg mov xchg fwait push in (bad) dec roll shlb mov mov jo mov mov das mov adc (bad) adc sub rorl (bad) pop mov outsl adc insb sbb pop jno test add add cmpsb lret jmp aaa lahf jb loopne cwtl ret dec in xlat int3 add jmp shl (bad) mov push dec pop lds hlt dec jp pushf popa outsl repnz cli mov fimul sbb pop pop mov popw cmp xchg (bad) inc clc add dec and dec pop xchg mov sti jecxz sahf sbb mov sarb sub divl mov inc or xor sub dec rcrl (bad) repz fidiv or ds cld cmp fbld lea mov loop scas add jns push xchg xchg subb sub sub das mov sub pop gs sub inc fisttpll inc push mov sub call pop xchg gs push push push je dec inc sbb pusha dec daa dec cmp xchg mov ljmp and sub mov xchg repz fistpll flds dec das mov lret or icebp ss popa jle insb jp jg std mov pushf jne push into add add push xchg adc mov jl and xchg mov mov repz xchg jne pusha inc push mov outsb fs aam pop std js push sbb int mov int3 ja xchg pop push lahf dec or sub dec dec mov jecxz mov jbe or roll mov popa ret popf (bad) and lods sub sbb loope adc jae rolb mov xchg push jge adc mov shlb add push std sbb dec push pop and (bad) mov pop add test push ds jbe sbb xchg mov stos daa (bad) cmp fimull pop cmp and cmp jns pop add cs int3 or cmpb orl xor mov or pop (bad) std sub fistpll pop call and outsw push pop mov inc or imul insb and push push shrb in push imull sub and fdivl rolb mull pop pop lods es movsb stos sub or repz inc ret mov movsl aas jge in mov xchg daa scas ja xchg mov cltd lock cmp movsl (bad) bound push mov popf sub cwtl inc xor xchg leave cli pop (bad) adc sahf cs (bad) and or ja (bad) dec xor mov in (bad) mov and push movsb sbb xor repnz popa insl aas bound jae hlt sahf repnz sbbb (bad) arpl iret push sbb sahf add or (bad) pusha fcomi push mov repz jp xor (bad) and xchg (bad) fidivr adc mov lock mov das lea push stos mov push div add cmp out or jl lahf mov jle mov mov loop (bad) lret jno push je popf stc popa adc dec cmpl dec jnp jno hlt push or xchg pusha pop and test add lret or and andl mov inc jns mov and or dec pusha lods adc out cmpsb sbb call loope sbb mov movsb aad repz jecxz jbe sti cmp push jb scas cmp xchg mov push test push and lea into lret xchg jae test aaa xchg in mov cmp ret aad mov jnp rcrl pop cwtl arpl or cmpsb mov inc mov fwait or test mov gs add sub out jns out stos and add lods inc adcl inc (bad) into push mov pop mov hlt mov push int xchg mov push lods sahf pop pop mov iret (bad) mov dec rcll lcall lcall add sti mov mov ret mov cmp xor xchg fnop sub cmp (bad) xor (bad) pushl adc and test in jle sbb cmc lret cmp outsl push shlb or cld dec lcall ja dec nop loop cmp out aaa int3 lcall lds lods xor sub add mov and mov push sarl movsl push into or cltd sahf stos cmpsl adc jnp roll add ljmp jge bound shrb mov addr16 (bad) mov xchg xor xlat jge add xor outsl dec pop mov gs inc sub mov cmpsb pop icebp mov je ja jg add mov xor std mov mov js push scas loope inc mov add mov mov adc mov ud1 arpl pop sub jo pop test repz or jnp cmc add mov sub mov xchg push push out inc mov xchg cwtl push push dec and sbb jb int add inc mov bound fstp xor inc shll adc mov xchg xor inc cmc sub negb mov je (bad) (bad) or or test inc cmpsl fstpt lret rcrl jl dec push bnd lret dec (bad) mov enter repz push adc ss mov int sbb ds (bad) xor mov repnz fisttpll in in je sbb jae dec enter dec sub pop push inc out add rcrb loop jmp (bad) mov cmp hlt insl cmc jo leave mov sub and jg dec lret mov stos pusha andb lods ja fcoms pop sub negl sub movsl movsb xor push add push pop xchg dec cmc stc stos xor popa (bad) xor loopne ret inc inc (bad) fldl fsubp movsb dec (bad) jmp lods ds je lcall sbb lret pop insl fistpll aaa inc and gs popa push adc (bad) sbb lods enter cmc inc ds ret or insb mov js pop bound insl cld inc mov shll and inc push cmpsb or xchg push lods loope pop jns test imul aam mov mov lds rclb push pop stos cwtl dec cmp cmpsb (bad) mov mov xchg fcmovbe sub and dec adc xchg sub adc xchg lds push sti sbb divl pop push mov xor call mov adc dec cmc sti jp push into pusha dec imul rorb dec mov and push popa and xor jns mov add adc inc jmp sbb orl notb cwtl outsb xor int mov sti lret pop (bad) rclb mov mov sbb outsl lods scas sub or mov lret inc lcall push pop jns enter inc lret dec xchg into sub movsb pop mov cli cltd adc lods (bad) ljmp sbb ljmp in pop xor (bad) xor xchg xchg push out push js cmp fnsetpm(287 icebp rcll pop xchg adc mov decb gs pushw popf and jne mov lods stos xchg mov mov pushf sub dec sbb test mov or or lret lods pop out stos inc movsb add sub les shrl sub in lock lcall into xor pushw icebp adc jge in pop loop int and out jmp fwait lahf push mov adc clc into stos mov add aas fwait notb sub lods xchg out dec push cmpsl cld ret add add dec lea add sbb xor pushf and pop pushl xor insl repnz cli (bad) mov rolb insl push popa out ljmp or mov mov fimul cld xor xchg mov bound sub test xchg fcoml add (bad) mov mov arpl mov (bad) and js cmpsl push imul mov subl mov or push mov xchg fadds iret bound cmp sti push mov adc scas xor mov jle imul cmp arpl pop xor add cmp orl xlat cmp ss sarl sub stc int3 int3 inc sbb cmp mov adc fnstcw pop dec xorl mov test xchg in push push out xor or xchg mov cmpsl or jp xchg nop sub bnd outsb ja xor xchg cltd fisubrl jge mov imul or fldcw inc mov imul and in pop jg nop pushf js (bad) xor sti sbb dec ljmp dec jbe dec popa inc test pop inc cmpsl inc and push ja aas pushf mov sbb xchg cltd das ret inc cmp or push stc xor out add push aas enter xchg adc loop jle dec mov xor mov mov (bad) push and jmp or mov cmp (bad) pusha pusha js and dec loope test add sub sub (bad) sarl adc cwtl adc mov xor incb in push aas out jp test popa inc jbe sti push movsb lahf adc into inc or xor outsl push pop or insb sbb repnz mov cmp in jns inc sbb xor sbb add add notb lock bound push loop ja sbb push rcrb jne fidivrl cmp nop inc ret inc (bad) and cmp dec add in or imul xor lret xor clc inc lahf pop inc pop in test push sub enter jbe rcr mov repz das xchg inc pop or pop xor lret push mov mov fistpl push outsl jno mov aad mov pop xchg test adcl popa pop in cmp aaa aam (bad) dec pusha pop lret popa push dec dec mov mov lock xor cmp sub mov mov shr xchg mov stos imul dec clc mov test lcall fistpll and xor cmp jne sub pop sbb pop or cmp cmp pop push out repz imull cli int loop mov cmpsb jae inc xor mov add pushf gs sbb clc push mov in incl enter (bad) add xchg lds and (bad) punpcklwd pop cmp mov dec pop lret lret int3 (bad) cli mov jae cmc in xchg lret push in push scas xchg inc loopne xchg shrl mov out mov pop lcall mov (bad) fsubr out daa scas adc roll insb or push (bad) mov adc sub lret lods jo pop lcall push fstpl daa icebp int cmp fwait mov repz scas out notb mov mov hlt addr16 ljmp lret and adc mov sbb push xchg inc jae cwtl adc enter adc test imul fwait sahf sub xor sbb pop (bad) repz sbb cwtl divb hlt int3 push imul xchg not xor sub stos xor sbb leave rol inc sbb test mov xor (bad) vmwrite sti arpl xor or dec aam in push rorl je popa dec fld mov mov call and cmc jb ror jg and sbb add pop inc (bad) add in fcmovbe mov jmp inc cmp mov mov sbb (bad) mov mov pusha add arpl cmpsb das ja add dec inc cmp mov (bad) dec mov or mov push fidivrl sahf out lods inc nop ja mov jl insl sub jecxz pop push add xchg dec dec fbstp jns cmp mov cmc cli xlat test sub jno push sbb fsubrs (bad) mov mov in icebp aad lds test mov daa jecxz inc inc outsl popa nop or cmp push data16 inc push adc pop add pop xchg test dec sub loope adc popf sti adc inc out (bad) in fwait jmp sar icebp push (bad) pushf sbb xlat xchg das shll jmp xlat inc sbb sbb or ds pusha dec ja movsl push mov mov cmpsb hlt xchg lock jge sub ficoml and push and leave xchg and pop movsl push (bad) loop js out roll shl stos das cld and nop lds and sbbl testb add ret ds enter jae out or (bad) outsb movsl sarb add inc or lret add jnp das aaa imul mov inc shrl push ja scas inc jmp inc sub adc push leave add push adc push sbb xchg adc cmp les fldcw stos adc pop mov cmp in xchg inc xor cld lods dec jns insl jle sbb jle int adc or mov xchg mov adc cs mov jne cmp pop adc mov adc test dec lock outsl lods xchg mov cmp inc cmpsl add cltd mov cltd rcrb lcall data16 cmp jle enter pop aam in in sub xlat jg loope jmp cwtl jnp add js xchg cld push mov fistpl in lea roll or (bad) jle fcoml and icebp popa push daa (bad) lahf rolb push testl and mov mov jne adc jle sub insl adc inc test movsb and into cmc outsl mov icebp gs pop jecxz inc (bad) in in fst mov push adc push and jb sub addr16 mov mov mov adc and sbb into mov leave cmp push (bad) cld push mov stos xorl cmp xchg in fcoms insb inc enter daa ds into xchg xchg dec and out inc ret inc aam or adc xchg into aas iret mov je pop imul jmp pop push hlt jns in cmp or sbb movb pop push jae dec pop loope jnp xor xchg decl push fmul js fimul add test push pusha fildll xchg push jecxz call sahf jnp push pop inc jmp leave lcall (bad) out mov loopne aas xchg in mov fs cmp aad jbe lods in mov (bad) mov aas add mov loope fnsave leave cmp loope ret xlat outsl (bad) lods popl in sub loope sbb pop pop loop xor jmp adc push mov sbb pop dec (bad) xlat mov add ds add adc lds daa pop arpl sub (bad) push xor pop pop jg adc inc inc mov daa jnp pop hlt jnp sarb aad add or es push mov and stos xor ds inc adc mov insl push mov mov lahf pop sub arpl shlb movsb dec popl lret andl jge,pn ds jmp scas nop test sar sub rcrb adc mov outsb cltd xchg add mov or es cmp sbb icebp ret add push ret jmp (bad) mov test mov and pop rolb sub add pop (bad) push sbb cbtw lock and adc stc rcl rep push add xchg leave pop (bad) out (bad) or jle outsb and dec fwait scas cmp mov xor loopne mov mov sbbl popa lcall jge aad imul or dec mov dec add sahf sbb add or or push inc mov addr16 jne cmp xchg lock mov shlb cmpsl xchg push lods mov repnz xor sbb xchg bound fs sub xor (bad) mov xchg push pushf sub fisttpll jg das sub xor jmp sbb or imul outsl test xchg or xchg fnsave outsb push out add push pusha xor stos (bad) mov xchg or inc test jne in sub jl add inc mov pushf enter xor es mov push in fistp push leave cltd sbb (bad) or sahf les ds ja lcall sbb bound pop jnp and insb call dec pop cmp fsubr dec int3 ss pop in daa jmp scas std repz push adc inc mov lods adc mov cmp inc sbb imul adc iret mov (bad) xchg stos and cwtl incl repnz ret ja push lock xchg vunpcklps hlt cmp xor mov mov repnz mov gs push cmpl or adc inc sub xchg xchg inc push stos mov jp out mov (bad) mov mov (bad) fildl in cltd dec sbb lock shrl mov pop insb pusha imull dec jecxz in shlb call inc movsl scas push leave cltd fimull pop adc jnp cmp fidivl (bad) fsubl fmul xor and adc push fcompl add dec out mov mov fstpt pop push push mov je add leave in lds (bad) cmp xor mov imul sub fadd or shll lock cmpsb into outsb adc roll push gs (bad) out xor or adc das notl push or cld xor pushf aaa icebp push movsl repz lds pop sbb repz je xor subb mov push daa sbb lret (bad) adc daa outsb lret pop fisttpl adc xor push mov fwait cmp pusha jae stos cwtl ss xchg andb pmulhuw xchg mov popa in aaa or in lret push push inc xchg lahf daa loopne cld dec test or mov add inc test mov cli outsb (bad) or jmp fsubs or insb add mov pop insb mov mov mulb pushf bswap add xchg jmp loope xor scas in mov xor inc pop test jae add mov pop mov jae into out dec fsubrl lret pop mov lea add lods aaa sub mov ss out xchg lret scas insb loop mov xchg lret call xchg repnz lret push mov in mov es xor fwait mov inc movsb je inc jg cs dec xchg mov loopne clc je inc scas push outsl mov add clc pop xor fisttp call jb xchg push fcomip pop stos std (bad) xlat jb sbb push pop xchg pop xchg lods dec cmp xor lret mov int3 rorb sub mov aas outsb jecxz push xor jo mov popa mov inc sbb mov jbe adc sub pop je in mov ljmp xlat lock mov mov and mov neg aaa mov (bad) mov dec xor pop xor dec bnd jne inc add aaa mov pop loope adcb mov fcoms cld stos in aas cmp sbb dec loopne cmc pop and jle or pop sub add sub dec sbb fisttp jno popa push out rorl ss outsl int3 int3 testb and mov popf (bad) xchg or mov lret mov mov and fs incb scas iret fistp push out mov mov push stos jnp mov xor sahf fidivr jnp xor das daa xor test xchg jne loope mov sub addl dec adc jae aad inc push popa cli jo out in inc sbb adcl enter cs insl lcall mov enter dec mov mov pusha jmp cltd jmp xor js decl sahf inc mov out in aas xor inc mov fldt popl push sbb mov mov adc mov lret xchg lods rolb xchg push into inc (bad) inc fild int sbb leave add popa pop not push insb pop stos stos push cmp or and (bad) pop dec pop cmpsl stos shlb dec jge movsl movaps int dec lods fwait cmp (bad) ja enter adc clc xchg cltd cmp push dec or (bad) loopne push insb jg ss jnp sub adc icebp sbb mov into test xchg pop add jb inc push xchg cs inc pop leave js (bad) cmc (bad) jo add scas lahf and stc fldenv cmp lcall adc movsb add fnstenv test mov cmp dec out xor xchg int3 mov add inc xor jecxz jns out (bad) mov mov roll mov or or (bad) xchg mov mov mov xchg cmp orl shrl mov push test fildll gs xor add std (bad) idivb xchg jmp adc mulps dec mov rclb xor adc fnstsw pop insl cmp lcall sbb fsubrl jge aam popf sbb mov add repnz clc je shrb cltd inc inc xchg ret pop and xchg pop in call jle daa es jo dec mov cmpb lahf std or add pop inc scas out xor ficom (bad) cmp aam and (bad) xchg stos mov pop adc repz sub pop pop lods pop mov aad imul roll sbb or mov dec mov pop movsl mov stos push lds imul test adc and jae xor xor cmp mov aaa out mov inc rolb pop in mov sub ffreep xor outsb dec addr16 jne dec sub scas mov adc mov stc sub xchg outsl je mov push inc rolb pop push push mov xchg mov mov rcrl les and or inc lods cs or jae xchg fild hlt rorb jecxz and icebp pop ja cltd lret jnp movsb lcall xchg fldt xchg inc jae insl pop xor bnd xchg push add jle or (bad) sub mov stos mov scas pop add mov dec enter call push imul sub mov insl cmp inc cli and mov sbb or cmpsl push cmp fistl negl or popf jno xchg data16 push push pusha add or and jne mov sbb sub add xchg rolb jno (bad) movsb out test add jle int push mov push cli (bad) mov cmpsl xchg rorb test fs mulb int xor jns jmp les shrl scas lock nop (bad) mov (bad) cld pop lock out pop fnstsw mov rcr xor or add xchg sub repnz in clc push dec idivb sbb cmc mov push push xor mov inc xchg mov lods adc mov jle or sub in inc shrb and std or cmc les inc out and inc mov addb sbb sub js hlt inc sahf ja mov aas outsb decl sarb pop or and push leave and rcll jge and leave mov roll lods jmp aam jl pushf (bad) aaa xchg sahf fwait cmpsb dec test mov jle xor insl les insl mov ljmp sbb into mov mov lea out inc mov and pop stos cmp mov mov cltd imul and popa mov dec mov mov pop movsb cmp mov push mov lods mov pushf in or ds int3 cltd push mov into in lea jecxz sub push enter jecxz mov or jne mov push jne mov jns and mov std jno dec ds mov add js mov pop mov icebp push jle adc inc sbb rolb (bad) jno push add fldenv repnz cmp jg lds inc mov xchg outsl jo cs sbb int3 sbbl sub or push shlb cmp imul loop add adc adc (bad) fs and mov or xchg or sbb sti fisttp adc or jp lret sub loop push lea iret test cmc or pushf push inc xor mov paddusw cmc jmp mov pop add xlat scas sbb mov pusha dec test mov add fcomps repz dec mov xor nop cmpsl cmp inc inc cli scas pushf xchg mov and outsl xor adc outsb adc sbb lods mov imul cmp mov xchg test jmp push sbbl dec hlt mov test dec mov (bad) sbb test ss jecxz push data16 pop pop push dec cld adc lcall inc push add iret cmp sub stos jb fidivr mov call mov fnsave sub mov and mov loopnew out add add gs jmp dec hlt mov mov pop jbe xchg xlat adc lahf add aad cs je jg out sbb (bad) mov mov popa push adcl mov iret inc ret divl test inc in xchg aad out sub dec pop fisubrl cs leave outsb push test out jo sub addr16 push lret and inc and jns add mov fmul in add lea sub pop xchg mov dec pushf pop call mov bound mov lods mov pop in fmul dec ljmp test push push mov add dec mov popf add and es mov xchg popf imul xor jb lods out fsubs xor lods or cmpsl or das lret jb rorb jl xor addr16 inc jno sahf popf scas das jae and std mov jns fisubl cs mov inc mov dec mov js ret hlt push xor dec vpmacsdd call mov inc ljmp std repz or fdivr ss cmp mov mov lods pop out sti lods nop scas sub mov jmp sar push rcrl aam ds arpl repnz mov lock mov pushf inc movsb roll addr16 mov xchg adc xlat and (bad) or outsb scas and add and mov data16 pop and std scas enter lcall mov aam sbb inc xchg js pushf out pusha mov call clc gs lock in (bad) popa outsb sbb xor (bad) testb nop cmp cmp lret aam ret xchg aad add (bad) xchg je les into mov cmpsl sub aaa imul jo scas cmp les adc dec mov push fdivr mov pop xchg push stc add ja mov jecxz adc mov test xor (bad) lock scas pop push out dec cmc (bad) (bad) arpl mov lds or out sbb cmp push xor xchg popf jg push pop outsl jb jg and cmp adc arpl fild jns addr16 sarb movsb cmp ret and mov test cmp es push cmp fisttp sbbl fwait mov mov sbbb fstp addb pop (bad) dec inc rclb push ficoml sbb aaa stos mov and (bad) adc mov xlat mov cmc fisttpll add mov pushf dec push mov jb (bad) fisubr cmp aad cmp push repnz imul dec sub xor outsl popa or sub (bad) cmc pop out ss add in or idivl stos xor je and mov (bad) cli inc add xchg lret jge xchg stc leave inc adc ret fildl ror pop dec rorb xchg jmp clc cmpsb jno std cs out push adc add lahf mov in xor jmp mov mov adc cld xor fnsave jecxz cwtl ja and int aaa pop (bad) in push jmp ja lret je adc rol pop fs hlt hlt out add xor nop inc sbb incb and pop loopne inc push lcall div mov outsl inc cltd xchg clc jne mov jge xor inc stos sub movsl xchg sub andl ret cmp jo xorl jo es add cmp sub movsl js sbb dec sahf lret or push in sub (bad) dec enter test jne pop out in mov pop fstpl mov and nop jle inc andl mov arpl xor jb and adc sub add inc xchg pop stos pusha xor push lret inc imul or or mov inc flds pop addr16 cli xor jne bound inc sbb lds mov sub sti pop push cwtl pop mul inc mov lret and fwait mov and push aaa mov xor cmpsb xor call mov cmc cmc push push insl mov cmp adc iret mov stos fs fsts add cmc xor int xor into inc fmull mov or adc add sub jns mov adc or mov pop sbb mov rol notl mov jmp fwait or aaa mov ljmp shlb mov pop adc repz jb (bad) xlat or mov and subb push cs dec mov fwait aad adc movsl and shr jnp pcmpeqb pop push mov imul xor (bad) xor mov xchg pop rcll cmpsl xchg jmp xchg rorl cmp cltd lcall or loop out cli jmp repz and xor mov in mov push xchg loop movsb vmwrite clc call or pop xchg cwtl into mov adc cmp sti mov inc outsl (bad) aaa mov repz sub mov (bad) in xor cltd fadds stc sti add daa and test fcoml add (bad) fbld sub popa (bad) cli cmp icebp fildl js aad or xchg cltd (bad) shrb push lret push add jg (bad) repz or xlat pop stos pop (bad) mov push sub pushf push mov repnz lcall int3 cmc push jbe repnz ja lds mov daa (bad) test dec iret cmp (bad) fcompl shlb lea lahf inc add bound lock repz sti push xchg or aas mov push mov mov fs jmp push push add test jno adc add mov adc pop rorl aas js data16 lea das addr16 adc jnp jnp pop fwait sbb fildl fiadd (bad) mov out (bad) std push sbb xchg outsl roll rorb cmp insl mov or repz mov loopne mov sbb adc push sbbb or mov xor cmpsl pop sti and dec mov mov in add or lds dec into add rclb sub call incl js xchg insb flds jg mov mov pop js xchg clc mov adc loop xor dec daa inc lret cmp cmp or push and outsl or add cld inc jo cwtl cmpl xor aam out sbb int3 pop add mov clc inc mov js jmp push repz mov xchg ret jb xorl dec pop leave dec arpl cwtl pop and jmp or dec mov (bad) pop and xor xchg push pushf xchg test mov faddl mov jmp imul mov pop shlb jo int3 ljmp xor dec mov (bad) xor sub lret push sti imul xor movsl inc jg (bad) push push mov jns cmp push jl iret loopne push jb das daa sahf inc mov (bad) out in test or pop outsb or mov dec cmp adc scas mov mov xchg or cmova dec push mov into cmp popf insb pushf cwtl leave add scas xchg sbb mov jne ficomp mov addl push subl mov inc dec mov jmp fcmovne lds add dec jg (bad) adc mov xor xchg stos push je and xchg push mov mov cmpsb ja sub rcll xchg leave (bad) je adc pop divb pop mov push push inc fcmovnb mov outsb push mov jp fdivp iret aas push dec mov sahf pushf and xor out lock in insl popf cmpsb jnp shll and push jle jo mov arpl add sbb sbb mov adc sbb test std pop jg js movsl or dec adc xchg inc inc daa pop mov pop popa xor jno fisttpl push cwtl outsl jae or mov cmpsb or ror xor inc push push jl add mov and mov push xlat xlat data16 cmp aad mov xchg or pop cmp inc repz mov sbb rcrb jmp andl loopne mov jne mov push xchg jecxz jge mov and (bad) cld mov sub dec xchg cmp (bad) iret pop clc pop cmp je ret xchg pop mov sub hlt frstor mov lods sbb xchg pop push adc out (bad) xchg pop dec imul push loop push push adc and outsb (bad) imul cltd rcll jle or lret cmp arpl sub in push xor jb cmp cli dec dec std or popa mov xchg std mov fildl out leave loopne cs xchg add push push (bad) stos xor (bad) jg out pop lods js cmp sahf add out xchg stc pop cmpsb rcrl fwait cmc mov insb lret in sbb adc imul jl cwtl mov data16 imull xchg jns dec cmpsl insb mov push xchg mov out in sbb out clc call jl in or roll out add push mov xorb idivl mov adc out ds call mov mov and and les insl (bad) jnp mov mov mov test pop jle (bad) xlat out adc xor sub inc and cli fs js add adc add add stos ja fisttpl inc lret adc mov int nop jno mov movsl js jg and push lds push sub xchg jno and roll xorb cmp pop mov movsl addr16 add jbe,pt mov lcall sti int3 jl xchg ret std sbb xor dec fdivr cmpsb jo stc mov (bad) pop lods jg fistl lahf popf add test fstl (bad) mov cmp popa lods dec jb dec sbb sbb vdivpd adc aaa xchg adc lods rcll cmc cmp mov sub mov pusha adc test repz stos pop call int3 pop rcl sbb dec (bad) enter xchg call test fildl dec ds push lock jmp mov mov add add icebp cld jge cmc push inc push dec test ljmp and les lahf mov and mov test xor pusha mov cltd jbe ljmp dec bound iret pop pop xor mov sub in (bad) mov inc pop movsb out stc rolb pop fs push out or iret jns in ds pusha adc xchg repnz cli stos mov push adcl fdiv scas inc loop bound xlat dec loop je aas push repz ds icebp cmp or test inc mov mov (bad) out cmpsl das insl icebp sbb jecxz aam jmp nop and mov add scas mov fwait push pop pop fs jecxz fs lock add pop jecxz mov ss mul sysenter mov aam mov sti gs jge daa inc or xor outsl jbe cs fmuls (bad) sahf dec pop inc idivl adc xor mov push push out inc jmp xchg inc mov mov mov and jno scas syscall pusha sti dec jne out sbb into push loope std jle push test cmpsb inc push std ds sti ja stc lret addr16 hlt jne out push mov push inc cmp jnp enter addl xchg std xor mov rclb fisub add imul insb sbb inc insl sbb fidivl lcall push sub icebp (bad) iret mov scas subl scas lock jne das sub xor or xchg popf sbb and and cmp adcl sbb ret (bad) jl mov sar and iret pop push sbb mov rcll add in mov repnz out imul and aam insl out imul lea outsl dec xchg xlat mov sub (bad) lret es test dec mov dec inc sahf and imul xchg into add sbb sub pop push std fcmovnbe sbb fwait mov xchg mov mov je adc std rcr xchg push push imul stos dec sub dec lock xchg roll mov es scas inc add mov lret mov clc sbb xor ret fdiv fcmovb inc imul push or loop movsl add sub cmp xchg out addr16 mov pop fsubrl mov cli icebp jb mov pop push adc fbld in cwtl ds xor and dec les lds imul pop cmp pop mov movsb jb mov stc call std loope test push cmpsl je dec mov cmp xchg cwtl (bad) pop dec adc xor xchg out pop mov loope xor adcl jnp inc sahf fadds sbb cmc shrb lods addr16 jmp cmp outsl imul cmp xchg or loope adc std inc (bad) mov mov aaa xor lds cwtl outsl mov jbe cltd mov sub cli inc loopne movsl xchg add mov push pushf sbb mov add into ret mov cld mov pop sub lods sub adc cmp stos aas lea mov adc fnstsw cmp gs (bad) add lcall loopne sbb adc dec fist (bad) movsb in adc inc push xor jnp mov stos push jmp ret push sbb jo call dec daa sbb frstor inc and in rolb shll push pop sbb mov and imul xor lock pop in mov aas inc in dec and ds pop push sub jnp fstps xor cmpsl scas add inc inc fwait div insb orl push ss neg dec sarb or movsl mov xor std push test mov mov sti or xor mov fildl out inc push outsb sub js xchg xchg lahf xlat (bad) sub insb mov dec and fwait das pop mov out outsl nop dec outsb add cmp js xor ds sbb jg push cmpsb addl pop movsb subb sarl sub shrb xchg push lcall mov nop xchg inc sarl js dec lea fild fs (bad) fwait rcr mov add sub lea (bad) or push push sbb fwait mov mov cwtl sar imul mov ljmp add std fwait sar loope scas sti cmp aaa inc adc lret mov adc mov stos ljmp cmp mov lahf xor aas pop add lret into xor ss lahf and fwait das stos mov rolb pop stos outsb pushf or mov mov ret mov in jns sbb jbe iret sbb jo add aam inc xor add mov cmp mov cmp pop ja mov pop xchg out clc loope data16 cltd ror mov in dec sbb test sbb adc xor cmpsl rorl jmp lret add mov push lret push jne add adc mov mov adc push scas shlb add cld loop arpl mov les mov push pop pop loop xchg jl jle sbb mov mov in mov scas sub jl out pop daa lret movsb scas pop bound dec adc insb sbb in mov in lock test push add inc (bad) sbb (bad) sub jb cltd mov pop jg jmp xor cmp mov aas scas mov inc js inc lods or adc loope push shl jecxz out cmp adc sub fsubrs lock pop dec repnz (bad) xor mov adc enter cwtl push (bad) inc cmp insb inc mov or mov loop fistpl subb leave pop (bad) or int3 stos js pop in aam pushf and nop sahf shrl xchg scas add adc imull pop add dec xor pusha or mov and mov cmp adc push sub adc cs arpl dec sbb sti or add (bad) ljmp mov mov mull and shll inc sub fcomi popf dec std jne scas pop push xchg int lods ss and mov pop scas mov adc popf sarl inc mov fmull add inc push sbb jno push lret or adc scas add or push adc or mov sub fnstcw out or xor pop cmpsb ljmp repnz aad adc sub icebp ret mov je insb mov and push pop mov pop adc jmp or mov sbb adc stos push outsl lods test orl fstl shrl insl js mov cmpsl and rclb jno,pt mov inc dec dec jmp sub push mov (bad) call in add test and add mov ss test les push add imul push mov dec xor ds stos icebp sbbb stos mov add or fstp (bad) lcall (bad) test jg lea and xchg push xchg inc movsl lea fs jg imul mov sub popa mov (bad) cmc mov push or cmp stos stos cmc sarb push sahf fucomp divl xchg shrl lret mov test jl ss push pop sbb in mov dec push xchg hlt xor roll jl leave sub mov push mov inc mov bound mov frstor cwtl scas cmp push addr16 out mov xchg mov pusha jo mov and and or outsb jp test and mov lcall stos aad cmp mov and mov add sahf loop idivl jns adc gs lds mov sti jns push pop mov fist cmpsl in in dec ja xor arpl imul std inc test outsl daa out mov xchg dec fs ja sub jne pop adcl addr16 sar daa fmull repnz movsb add pop add xchg dec xchg gs inc pop cli dec push mov outsl xor or sti push xor lret xor (bad) xor sbb aad push out (bad) jecxz jne cmpsb (bad) sahf rorl push and (bad) mov pop insb das sub test clc inc ret daa mov aad test jo dec out mov das mov push clc lret fs ficompl inc jb adc (bad) xchg sbb test xlat mov aas sbb xchg or sub mov pop scas ror cmpsb sub mov pop add (bad) mov aaa jne fwait (bad) sbb fdivrs mov pusha test insl jge mov dec popa icebp push scas sbb xchg adc out and jae (bad) xor les sbb int3 adc rolb out pushf jle mov sbb pop jp popa lcall push sub mov cmp fistpll mov push jg imul (bad) std into adc mov addr16 outsl cmpsl sub lock loope xchg adc ss cmp stos iret and out inc lods sub jge pop popa mov push lcall jmp gs mov imul pop aam sub push mov mov cmc outsb dec push (bad) pop pushf (bad) (bad) (bad) lret xor es sub xor pop xor ja or lea movsb clc in cld adc mov or pop rcrl cwtl xor add in pop jb das sub cmpsl iret cmp js mov dec scas pop mov test int3 sub fild outsl mov fsubl arpl test pushf pushf jbe push jo lcall mov insb or xchg xchg pop cmc jmp mov cs pop fsts push ljmp sub insl stc jmp (bad) int sub in dec push add mov outsb loop fstp or (bad) mov dec xchg cmp add leave out dec push and test scas (bad) (bad) cwtl jo ret loopne cwtl adc lods adc pop mov push lret sarb sbb xchg xchg sti lahf scas rcll and pop sub daa aas sub push daa inc xchg sub push out inc lret (bad) mov sub test loope clc jge pop cmp fcmovu lret add pushf popa imul dec xchg test enter xchg inc mov sbb fisttpll pop or add or icebp rcrb or aas dec xchg daa icebp scas push pop push adc push fldcw hlt push rolb cmp dec frstor cli icebp mov pop adc iret or jns mov outsl jle inc mov (bad) push faddl loopne push push dec clc ljmp fs or outsl fprem out add cmpsb (bad) (bad) lds xchg dec icebp mov std pop dec shlb add cltd mov lea dec test dec inc jnp mov xchg sub std ja rcl push popa test and adc inc std push xchg repz lods nop inc xlat jmp jnp xchg lahf repz or sub mov scas jae ljmp nop outsl aas ds es sar pop and cld adc mov out xor cmp pop sar inc (bad) mov repz rclb and cwtl rclb pusha jl or bound arpl negb or imul fistl rcrl mov push xchg (bad) mov pop sub sbb das push out sar lea call mov mov addr16 add add aam and arpl add popaw outsb mov xchg xor sahf into pop out divb xchg push and pop daa jb push es dec (bad) cld (bad) repz shrb popa inc pusha sbb clc nop push dec (bad) or and jge lret adc lds sub xor inc (bad) jmp push out dec or loope data16 pop std mov jo add mov int3 lcall sub sub cmp xchg mov fcomip mov (bad) push (bad) xor xchg sahf mov fcomps in lcall dec inc mov stos add xchg es or je pop sub dec bound nop sub inc dec mov inc ja out hlt test ret int daa sarb enter pop test scas aaa ret lret dec or mov test sbb test push or xlat adc sub push aad sbb call test (bad) test xor ss (bad) xor frstor test and bound int sbb push test aas mov lods cwtl pusha roll rolb cwtl std xchg xchg ret push xchg or or push cmp js popf cmp ds xlat mov cltd lock out pusha xchg outsl xor or jmp daa fadd and inc shrl inc jns,pn push (bad) mov jno xor xor add rolb add push mov dec outsb loopne add jle mov mov push (bad) xor icebp mov icebp dec enter pop mov and out (bad) cltd hlt sbb sub and int3 gs mov lcallw popa add push push sub cmp nop xor inc lahf (bad) in add nop adc pop js or pop les ret push fs cmp lret mov pop nop inc mov mov out cmp mov xor add std imul pop fisttp inc icebp sbb lret pop xlat adc iret jne sub popa addb cmovno mov sahf cmp xor add xchg repnz daa loopne repz adc xor data16 xchg mov cmp pop mov pop imul jecxz bound aad push push call popf xchg mov pop mov and jmp fbstp push xor call mov vpsubsw rclb and rcrb and pop (bad) xchg xor out mov pop std insb les insl mov mov dec (bad) jp lahf stos mov pop addl xchg mov or and push and imulb pop call mull gs lret inc lahf mov test cld cmp ret repz std mov test enter or xor pop push sbb clc sub sbb cmpsl jg hlt dec xchg cmpsl fs (bad) cmp jecxz popf add fwait jl xchg out cmp sub xchg aaa add push adc (bad) cpuid jns nop pop test xchg outsb cltd xchg cmpsb dec mov mov mov lock xchg or cmp fmull dec push add pop xor cwtl jno push neg mov jne ret mov mov popa repz jne mov cmp dec sarl mov movsb cltd test pop test cmpsb pushf imul adc dec mov mov xchg stc imul rcrb sub dec int3 hlt clc rcll pand cmp and jmp dec loop dec sahf xor mov js lods xchg push inc out (bad) jecxz sbb adc stos (bad) ja mov xor add movsb jne or sbb arpl inc push fwait hlt repz xlat test jne or xlat andl adc inc and arpl cmp rcl xor stc pop dec leave lcall mov cmp inc andl adc insl out adc pcmpeqb lahf cmp push incl in pop cmp and negl cld sub dec or lret jo add int3 and rcll pop pop and cwtl mov daa fs loopne adc loope movsl push mov xchg dec mov xor enter in enter outsl and push mov cmp add or mov jns pushf enter pop popa fcom and sbb push icebp aas ret xchg (bad) adc out mov inc mov xchg stos aaa xchg cmp lret sti gs mov jne fiadd adc rcrb rcrb jns jnp add push and es sbb jl adc lock and int fdivp push adc jne pushf mov adc out (bad) scas mov lock outsb lods ljmp mov dec outsb jle fistp fwait push dec loopne stos push je adc mov pop je and cmp mov pop aas arpl cltd vaddps movsb lods xor sub shl popa pusha jmp pop in add xor repnz cld cli adc out into scas adc sbb scas xchg cmp std or ja sbb push das test out cmp mov sti cmpsb out ret jbe cmpsl outsl negb out stc sub flds in inc mov xor cmovns lcall add mov dec cmp cli sbb mov push int3 pop cmpsl es rcl adc es (bad) gs dec sbb sbb gs js popa xor lret mov pop fist add add ja mov xchg sbb jmp pop xchg icebp aad stos imul or pop mov mov mov mov sbb jno pop stc ja (bad) out or (bad) out gs cwtl pop dec mov insl push cmp mov imul push push out iret cmp in dec push mul test push out scas push cld insl movsl add dec pop fistl sub mov jo aaa push xor sub add adc call pop stc dec fldcw mov scas xchg (bad) es dec xchg out inc mov add (bad) loope dec push adc icebp jnp xchg xor cmp inc push jo mov push xorl fisubr add scas cmp mov aaa loope (bad) jns jle push cmp sbb jns fnstenv dec sub mov imul je push dec jecxz in xor or adc xchg fisttpll pop (bad) sti notb pop mov cmp enter fcoms cli ror out sub jo pop repnz sub rclb hlt adc adc sti or cld push les fcomps mov lahf (bad) enter xor jbe movb add adc popa int imul faddp jnp ror lcall pop ja into mov cmpsl les pop mov xchg aas adc or cmp and arpl (bad) std stos sahf add push mov fdivr dec rol scas push jnp fs hlt mov xor test aaa push in sub adc lahf cmp cmp inc sbb adc adc clc (bad) and mov iret cmp aas push addr16 aad inc push cmp std ds jmp (bad) call push mov fisttpl xchg mov shlb lea inc fisubr aas sub sbb mov scas xchg mov cltd lods aaa xchg fst dec sub lock xlat ja rclb pop outsl adc arpl xchg iret push mov negl push sarb inc sub sbb movsl insl adc lock mov fwait aas popa mov mov mov or pop insb mov pop and add loope test xchg mov movb inc ljmp fidivl push imul fidiv nop mov xchg jecxz add lret imul repnz mov sbb outsl outsb inc test pop and das mov cli mov aad mov (bad) hlt jge mov lds mov xchg jb,pt push dec lods jl cld insb (bad) sub mov repz icebp shrl lahf or scas lcall lods mov sbb add and lea xor adc cwtl xchg cmpsl (bad) fmul pushf dec dec xchg inc cli sahf inc inc stos sbb rorl add scas xchg fist jmp sub rol ret pop scas or xor lret in loope lds dec dec mov push div mov xchg xlat sti mov dec dec movsl (bad) pop push mov fadd mov pop mov adc sti (bad) cmp outsb shrb std inc pop loop jl hlt (bad) ret jo sub fdivl sahf add ficomp pop mov fcoml mov or cmp add sbb mov lock mov (bad) ja inc sahf ret je cmpsb mov sub sub arpl test xor mov xchg aaa nop pop sub add insl push jmp jp sbb lds cld nop jecxz or or pusha push lcall stos cwtl or sub mov repz mov pop lahf xchg cmpsl mov cmp mov stos mov mov enter pop insb je aas push out movsl adc push sbb xchg fwait in push rcrb in repnz fcomip bound sbb push mov mov jnp pop stos insl mov pusha ljmp mov rdpmc jo or cmp jbe push mov fstpt xor lea mov xor xchg ret inc mov gs mov dec lret int3 mov add cmpsb popa xor lods rcrl inc dec lahf mov cmpsb fwait ret pop jl daa sub jbe jg popf (bad) mov ds cwtl outsb int jno mov sub sbb add pop test sbbb iret sub hlt sbb insb enter stos jge jb mov sbb push sti test or or mov clc xor xchg push mov das std inc fimul out insl mov dec lods aam add xchg cld add mov nop jae pop daa out les jno push repz cmpsl and jmp mov mov sbb in lock enter or std cld push jnp cmp loop cwtl test jne lods cwtl xor inc adc sti dec push mov pop pop mov mov lock jle dec scas xor jecxz out push xchg mov test lds pusha push in in jg xchg mov fbld orl jmp cmp cmp add dec daa mov test inc mov nop pop xlat negb dec js pop movsb (bad) push and test stos addr16 aad lcall push xchg fisub push lret out jb cmp push or mov add add (bad) jnp push adcb nop in fdiv sub cli fbld xchg mov lds xchg sub fnstsw outsb xor pop fiadd lds xchg lret fisubl fs mov sub je movsb xchg test dec mov test cld pop dec xor adcl add adc add int cltd add leave dec push ret inc add add ljmp daa inc aad xchg adcb sub lcall adc pop aad mov xor hlt pop in dec addr16 mov in cmovbe push inc push mov lret inc pop sar mov mov and xchg xchg and push pop punpckhwd xchg mull dec sbb testb movsb dec jne fwait mov jecxz je outsl cmp inc cmp pminub lcall jne sub mov or subb push push out mov (bad) mov sbb stos pop mov xor or rorb add cld adc and fisttp call mov in mov data16 std pop adc pop aas dec pop inc aad xchg cs add call lock and mov sbb sub sub (bad) push fstp rolb mov lea cmp icebp (bad) inc jnp mov js jp sbb mov cmp xor out testl test pminsw je in add test ret test xchg xor insl ror int pop lea mov fs push mov xor mov push sub jg xchg push mov and pop in inc insb push push fsubrs jbe or xchg aaa loop adc lret mov adc pop (bad) (bad) rol imul pop test outsb in fsub sub cltd inc or or xchg addl nop repnz cmp mov jle daa enter push push pop gs xchg xchg add or aam lea sar out in das psrlw and mov mov mov sbb dec xor pop add test push push and fsubr (bad) dec cmp lahf call jp orl inc pop test nop jge or mov (bad) jns xchg cmc cmc ret mov cwtl repz js push push and mov test in mov pop (bad) adc add repnz std adc jne mov daa fwait adc test sar and pop (bad) push and push cwtl or mov mov jns inc lret (bad) jbe clc push mov clc cmp mov add enter addr16 mov adc xlat dec les sti andl dec (bad) loop jo mov js loop dec fmuls push adc add dec add inc adc pop mov or fbld imul xor xchg lock cmp je mov sbb movsl pushf pop jno in pop mov sbbl ffreep jo jns jno sahf mov mov pop dec js out xor rcrl cli sbb es loope mov cmp ficom or pop in dec mov aaa into mov sub inc cmp xor repnz inc in jbe add add cli push (bad) mov data16 stos sub clc pop cmpsb adc xchg iret mov sub push dec mov mov dec test rorl mov aam inc push push call sub cltd mov (bad) or imul test insb dec stos mov mov es jmp addr16 xchg cltd (bad) clc (bad) sbb fsubp push stos cmp mov (bad) test adc sbb jb (bad) fwait sti out sbb mov xlat and or pusha negl xchg inc cmp cld test lods and pop jecxz sbb ja push mov push sarb sti test (bad) icebp jns inc and fwait imulb xchg fnstcw insb cmpb and sbb ficompl jle (bad) adc xor (bad) cmpsb test or stos push inc pop fistpl scas scas outsb and adc lea mov dec inc push aam sbb sahf aaa mov sub add int cmp jae out sbb js inc or fsubs enter enter ds iret inc xchg outsl addr16 push inc dec in in pop cmpsb xchg addl inc fstpt and shlb mov in mov dec (bad) xchg push mov cltd inc dec (bad) fnstsw pushf mov addb add push es mov int or jns fnsave fwait or xchg mov stc pop outsl imul jmp stos pop lea pop mov sub fildl sahf lret rorl mov dec dec jge loope sarl pushf adc pop sub cmp sysenter sub adc push cmp dec (bad) mov rorb or pop xchg mov mov andl jg iret cmpsl jmp mov test insl dec scas mov outsl inc adc inc sar adc adc je mov xchg xchg movsl sub outsl mov xor sbb inc pop mov jnp rcrl loop pop fisubr cs aad push mov lret add fiadd add imul adcl mov and and and cmp aas lods mov push inc pop xor lods inc (bad) mov adc out mov (bad) clc lret jae inc sub popa jb cwtl adc mov cmp jb cmp pop pop adc int3 aaa xchg ret xchg sahf mov pop sub movsb adc sbb lcall cmp jae adc mov mov sub iret scas (bad) das loope out sarl nop cmp movsl sub les cmpsb pop sar test add lret xchg rcl cmp adc daa outsb dec sub pop insb mov ret cmp sbb flds jne pushf lods fmul push xor mov sbb inc fstpt inc es add std sahf loop pop push rclb adc out mov subb ret mull pusha jne push fildll inc cld (bad) mov adc gs jecxz imul mov movups jmp xchg cmp ret xchg test inc mov call (bad) aam movsl jge data16 mov pop inc jno add mov pop xchg mov divb jae rcll aam sahf sub (bad) pop sub fmuls xor repnz ss fcom fs idiv ljmp aad and repz cmc out add sbb adc xchg mov fwait cltd sub enter hlt std pop adc (bad) add dec sbb vpunpckhqdq sbb int fstpt out pusha out xor lcall mov mov pop mov dec dec (bad) insl fistl push rol imul leave push test or arpl in js ja or dec sub mov mov inc mov mov mov lock dec je push enter jge stos lock dec sbb pop lcall jp cmp negl ret sub jmp test data16 jg adc (bad) sub push sbb in sbb fcomi in add mov fmull iret add adc xchg je xchg scas fwait mov xchg push and xor mov cmpsb pop clc inc ja imul xchg cmp push sbbl cmpb test daa pop jge push sub cmp push sub or mov (bad) sub adc pop jb hlt pop ret sub loopne jl hlt lock sub cs and jo inc sub fdiv cmpsb or sub dec xchg jl je dec mov sbb outsb (bad) aam and xchg jo push xchg sbb or fwait in sbb sbb push or popa xor sub movsb iret sub or push test (bad) jg popa aas dec je rorb cmp aas inc adc dec sbb fldcw add pop mov addr16 and cs mov mov (bad) and mov (bad) das jo jne cli popf cwtl mov pusha jb (bad) (bad) cmp jnp outsb popf sub popa dec fcom unpcklps inc data16 stos cmp in sub sbb insl test shl jns lahf mov mov dec and and call test push or sub xchg cmp pop lret xor gs call lock push mov dec adc inc iret cli stc fucomp scas test pop (bad) in (bad) cmpsl ss cmp fldt jle or push xchg xchg xchg loop mov cmpsl sub mov sub xchg shll dec scas push mov imul cmp mov adc xor jg or sbb jle xchg pop jb enter dec out (bad) stc sub ret (bad) push ja test popa subb push lcall inc scas lahf imul adc adc xor or mov push hlt mov jbe arpl out fistpl inc fldcw pop (bad) sti mov (bad) jl mov insb sbb push jno lcall out data16 scas test mov lcall fidiv pop out stc mov fadd (bad) loopne pushf orl (bad) sub repz xlat adc sti mov and (bad) xor lods or xor pop sub sub push mov aaa jns loop iret ss pusha adc pop imul ret cmp int ljmp (bad) int3 push and add insl xor (bad) sbb or xchg into insl pop push mov pop insb bound push subb fidiv cmpsb mov stc push scas dec add or sti getsec and push jbe inc mov xorb push flds inc cmp sbb dec pop push std adc (bad) js,pt (bad) mov loope jl mov mov add (bad) dec jno mov jg dec cld mov lcall cmp add aad mov sub jmp lods insb or cmp lret aaa loop jns xor mov cli imul cs pop lods cmpsb adc cmpsb pop imul jl push je xor mov xchg jg and rolb imul mov sbb mov cmc ds std test add push jecxz lods and into pop xchg or nop inc jle mov xor (bad) xlat fdivrl xchg lods shrb insb addr16 and out sbb add lret sub mov (bad) test add daa sub cmpsl adcl lock mov and pop aam and ja,pn rcrl adc stc aas push jb fs stos test sti imul lcall shrb sub jl and ret imul nop mov test ljmp sub and xchg cmpsb ja mov fsubs mov push (bad) aaa lods inc mov adc pop (bad) out xchg mov sbb xchg cmp loop lret push nop neg inc jo loope icebp xor mov jecxz push fsts mov int3 cmp jnp or xchg mov fidivr dec jne in out not adc jecxz in mov add ds enter pop push jg or cmc lods repnz xchg add clc mov in fisttpll outsl sub fs jmp scas repnz lods cld xchg rcll sub jo fs pop fistpl inc adc mov iret xor cwtl int push divl inc add fs fisttpl stc mov sbb iret pop (bad) push xor into imul or cltd mov (bad) push push fisub or cmc ja pushl in pop mov mov enter mov adc push arpl movsb imul and sub sbb mov pop imul rorl in lcall add out ds add and or ret mov iret sbbb std push test stc je cmp mov cmpsb pop pop std sub sub push insb cld fcomps pop loopne add rcrl rcrb mov adc nop ja add (bad) mov cmp test ss pop fs imul xor int3 mov hlt add xchg popf fdivrl or dec dec sarl mov aad cmp daa scas js xchg xchg sti out and push jmp inc imull cs scas and aam dec push scas test lcall sub in adc push xor es mov mov sub dec jl lods add xchg and pop sbb in inc xor les fsubp push aaa mov push les push push jo aaa fistl mov cmp jns push push std outsb xchg mov imul cmp mov push mov test pusha pop iret jmp loope jns dec jl insb loop shrb loop ss add je push adcl mov outsb lds jo mov jge pop stos mov test mov clc loopne jmp adc addl insb in xor stos xor loop repnz inc rcrb push data16 insb sbb mov mov cmc lds mov and adc push pop sbb adc int mov adc inc popa mov jno inc sbb jnp ds sub fcompl pop (bad) and push test mov or jmp cs in push movsl sbb xchg cmp sbb jae sbb int3 imul push mov mov mov and scas lcall or jge popf lock movsl int3 nop add mov nop mov pop xor lods add adc inc leave jbe mov repz and loope mov fs adc mov jmp shll aad clc xor fisttp scas sub push sbb imul cltd mov test sub mov sbb push enter ss or mov rclb fnstsw xor mov inc jecxz adc or and cmp lods repz and clc mov sbb fdivp (bad) (bad) xor or cmp push cmpl ret out pushf lock xchg and fmull jb dec sti aas and and pop (bad) outsl movb sub push cli mov decb rcll mov in jne push movsb jp fistpll push dec cmp xchg jbe movsb or fdivl pop push add mov inc sbb add mov xor fs and add rclb loopne and xchg in fstps jg andl jnp cmp nop add (bad) dec mov push xchg sub andl push ss cmp pcmpeqw es iret lods dec push mov ss repz add cwtl pop push std scas sbb push stos popa (bad) push mov push push loope test dec push jo lret lahf push adc stc lods and repz dec (bad) cli mov pop mov mov popa imul in into cmp push (bad) adc push es dec sub jl mov mov andl push mov push mov mov adc cmp jge loop fwait ds mov in xor inc mov inc mov mov pop sbb paddsw xlat inc jbe lret inc cmp pop imul jae ja (bad) loop cmc popf mov mov stos fistp push repz and adc mov insl sub inc fcmovnbe jl frstor jl xchg mov (bad) in cmp inc inc mov push cmp and mov push stc sub fcmovb ret ftst cmp cli xor cs into push andl daa adc jnp cmp test test xor in add mov dec fisubl jle fstpl mov rorl push stc jns dec and enter stos aas push add imul xchg fisttp sub sub pop mov dec sub xchg sbb call repnz pop stos ljmp mov ljmp cld loope es and push (bad) xor xorl or or jge dec loope (bad) in (bad) xchg or insl or inc cmpsl movsl ljmp mov lahf stos iret (bad) ret or push xchg hlt outsl push das inc or movsl xor aam je fadd xor inc xor in mov ja cs adc lock leave insl scas mov stc xor fsubrp fwait sbb xchg out xor fs je les add movsl sahf sbb xor dec jnp outsb adc xor xlat jne push sbb pop adc and add int movb (bad) out mov inc adc (bad) adc push insb bound lea and (bad) push clc dec cmp xchg mov inc arpl (bad) icebp pop pop push add jg add adc inc jno xor add or push and dec icebp jecxz in out push cmp ljmp inc sbb (bad) lcall cs outsb and jmp xchg (bad) icebp xor fildl stos xchg push jno dec add pop stc mov adc outsb lret jnp enter inc scas mov (bad) push (bad) mov outsl mov jo mov (bad) mov pop insl aad dec scas in jo push sub rolb sbb push fistpll mov insl mov add pushf jecxz in fs cwtl pop push shll js cld pushw sarl (bad) sbb or jne gs adcb adc ret fnstcw rcrl pop inc cmp xor mov xor cwtl hlt push sbb fidivr mov sub sub xor les dec jle and dec jmp out out inc xorl xchg jo pusha push adc add repnz jge out sbb sbb enter dec mov insb int add add sarl lea mov mov add and dec xor jmp mov xor (bad) lods mov sahf jp pusha fstp sub sbb fmuls cmc xchg push adc bound mov outsb sahf negb pop imul fadds push mov das outsb mov mov adc jle (bad) pop mov lcall test mov mov jnp stos dec sbb leave cmp gs mov stc mov adc leave mov (bad) sbb hlt in push out in cli mov adc fldt clc loop xor lret jno stc adc mov push jo and or push xchg mov jbe or adc inc (bad) mov jmp fcomip fdivs addr16 imul sbb imul lds (bad) aam push cli jmp loopne loop scas or add xlat rorl cmp dec cli lahf dec test repz mov cmp lods iret ret mov imull gs mov cld xchg aam pop jl fbstp js and stos jg add pop sti xor enter mov mov insb fidivrl mov sub arpl sub mov xchg in icebp adcl popf fsubrs adcl xor (bad) pop cmpb mov sub vmread sub push adcl outsl adc inc aas push mov pop adc dec lret or add mov inc cltd stos mov push insb pop add ret sub ret inc mov js repz sbb rorb jg mov mov sub sbb ljmp out in add test mov push sub push (bad) int rorb stc cli jo fisttpl icebp push arpl mov insl jmp dec pop stos movsb mov mov lock mov roll ret (bad) sarl xchg int3 test (bad) lock (bad) popf aam out cmpsl mov mov inc inc call sbb jae ret cmpsl std xor adc and push loop aad aam out enter jle mov push in and lock enterw lods ds mov xor push or mov lahf mov test xchg xchg in or add loopne mov push and mov (bad) jmp mov xlat xor dec jnp shrb push call xchg inc rclb pop mov cs push mul lret int clc je xlat scas std and fcoms pop pop and push rorl popa fstpt mov adc test or sbb fld das ret lret or xchg adcb out int in or hlt out or pop sbb mov cwtl cli cmp mov scas jge and jns ret je in cvtps2pi mov pop (bad) cmp jp inc xor cmpsb imul inc out jo shlb cmp push out mov mov push test xchg jge push inc dec mov (bad) dec pop daa (bad) inc pusha sbb loop lods pop push fcmovbe and xor sbb adc out lret fidiv out adc jo movsl lock loope pop in es mov xchg jl xchg mov (bad) in xchg sbb lcall sub (bad) popf push (bad) movsb mov push xor mov xchg repnz mov arpl adc bound lcall xor (bad) adc mov sti clc add lock pusha movsb aad mov lods dec in leave into pop int repz cmp pop rorl and shld xchg adc push adc xorl inc and add pop sbb add and stos hlt mov add test call xchg gs cmp inc lahf xor or push xor push inc push adc xlat popf push mov dec pop sbb (bad) jbe sub insl adc or mov rdtsc xchg data16 mov in dec jmp leave cmpsb lret cmp adc mov jno ror jne in jecxz jns scas icebp pop ja addr16 dec jle mov push ret push insl sbbb mov fwait add pop mov mov add cmp addl push psadbw or enter outsb xor jl adc inc sub dec add loop add fcoms loop xor push jbe loopne js mov mov adc rcrb out rorb es sarl leave jmp arpl or mul mov rorb pop enter mov jg xchg lods int movsb add mov inc mov loop and imul (bad) jl aaa and std test lcall adc in jge inc xchg jno cmpsl adcl inc out fstps pusha jle call sbb push mov push and out fsubs sbb and pop into std dec pushf adc incb sub jne pusha inc mov mov lcall lods and mov test outsb and ljmp les xchg cld fstl and jno inc into scas sbb and scas inc xchg mov pop mov inc (bad) xor jl fisubl cmp mov add dec jg mov out or mov cltd into adc int adc or insl inc jb pop sub and fwait inc cmp into in es iret xor mov mov adc and lock push cmp jge enter sqrtps andb loop push dec in and xor adc push aaa fisttp mov test inc mov xchg test jmp cwtl mov jp xchg pop std ss mov movsb push mov in dec stos push pop inc imul add sub ljmp jecxz js leave popa ret rclb mov and imul packuswb push mov push stc lret loope cmpsb das push push jbe cmc push cmp mov aas xchg lahf mov jg push (bad) cmc in lret addr16 adcb dec jnp mov dec dec movsb leave test cmp add je pop sub into hlt fstl ret jl,pn inc mov mov push xchg std adc iret jle xchg pop in (bad) js in stos popa pusha ret std dec jne faddp cmpsl (bad) mov xchg out cli and ljmp rcll js lods icebp adc sarb mov es aaa mov xchg fdiv sbb dec xor ret or scas dec out sub sbb movsb pop sbb cmp ljmp mov arpl jb xor fcompl jl frstor inc jl inc xchg fildll pusha aam and xchg (bad) (bad) lret sbb hlt mov cltd mov in dec add rcll (bad) (bad) fiadd xchg xchg out sub mov pop and mov fnop jb nop (bad) xchg stos aad cmp sahf aam hlt mov and loop notl xchg sbb push clc or push cs pop dec xchg pop into fistpll cmpsb and int3 push mov hlt (bad) dec mov insb (bad) cmpsl adc xchg xchg and xor mov mov pop lock repz cmp mov addr16 mov ja imul loopne pop lods or fwait mov scas out outsl cmp mov sub insb pop xchg ja and popf in movsl in jbe dec xchg adc insb mov data16 jmp gs icebp push loope stos adc clc std xchg cmp pop sahf in nop div dec inc testl pop mov loope sub int3 jmp in mov jge add cwtl cli cvtps2pd cs (bad) xor rdpmc sbb movl fnstcw dec notl and cmc mov int3 lahf sbbl shrl std mov hlt adc and add xchg fs push jae dec jb dec dec lret adc xor xchg sbb stc adc mov roll test (bad) pop mov clc and inc les movsb les xor lret mov stos fyl2xp1 (bad) mov dec inc addr16 js push cmp bnd lcall cmc out decl push call lds push add jb and xchg cli xor jae and fildll aad pop pop add pop loopne cmpsl mov ficompl jae fstl inc (bad) adc nop sbbl fwait clc loop int3 dec pop into in imul jnp mov mov mov sarb mul or lcall inc cmpsb clc shlb in xor imul rclb adc adc xor mov and mov push test cli pop iret xor push mov mov ficoml loopne push bound mov sahf cmp insl int3 rorb push push jno dec (bad) cmpsb inc jle fsubrs push dec mov cli adc sub cmp sarb jle push rorb add jge xor push test dec scas js ret jo mov and sbb mov jae dec hlt mov js shl iret (bad) cmc xchg add aas test pop inc pop data16 dec push cmc jg push inc test roll lret dec xchg mov pop rorb sahf or xor lahf aam shrl jp ljmp pusha clc cmp xchg add je push fstpl mov das pushf inc scas mov jmp outsl or push adc dec jns (bad) ret push mov fstpl repz outsl sbb shrl jle aaa sbb mov pop pop sti add mull in popl outsl in sti mov in out fstp jecxz fdivrl arpl lods fwait shlb adc js cmpsb sub sbb mov test mov mov mov in jecxz jbe dec mov mov lcall sti and les lcall mov dec jecxz fiadd add stc xchg pop ss pushf (bad) dec in inc xchg sbb pop mov xor fcmove outsb cmp pop test add push nop dec (bad) fnstenv and lahf js xchg fisttpl jbe ficompl in pushf iret mov cmp insb jne,pn and fwait (bad) data16 jne fwait int adcl xchg iret push pop repz xor les mov xchg inc mov xchg flds (bad) rolb cmp add cld js fldl2e jg or jbe push test call xchg dec lahf clc jbe iret mov aam cs inc jns xchg popa dec scas test not jae je fsubs popa cli into shl adc roll xchg push jle xor push aam mov into push mov out mov daa mov add jecxz pop mov loope jnp jns jecxz call out lods xchg out jb mull cli cli mov pop outsl cmp insb lock rol test adc push mov push dec hlt adc mov test icebp or dec lret add adc mov enter (bad) pop int3 cmc cli sti inc jns (bad) sub add (bad) mov fwait sbb jo adc call xchg mov fdivrl xor out jo dec xchg popa jo push mov or mov jge inc rolb inc jecxz stos pop lret mov nop insb test hlt in dec cmpl sbb inc and das clc pop jns lcall xchg jl sbb std and sbb in shll cmp and stc subb add xchg std push add fwait or les cmc lret adc sub cmp in push inc cmpsl icebp add call pop xchg push test addl xor mov mov sbb dec inc jmp fdivs in les adc dec stc out lods es xchg aaa hlt jecxz movsb jle pushf fldcw dec inc sbb sbb out dec push adc dec xchg dec je jl xor fstl mov push (bad) jno and dec je ret mov repz jno jecxz xor test jge insb push jbe js mov repz movsl xor cltd push jns testl negb popa int3 ss repz pop add mulb test cli push inc jbe xor adc add je imul fldt xchg or dec adc mov xchg dec xor jg cli and mov dec jg repz cmp mov xchg (bad) pop pop mulb out cmp or and cmp rcll test or dec xor test icebp mov or dec cmpsb fstps lcall push dec arpl loopne jge (bad) jmp fisubrl and jb (bad) push popl mov fdivs inc push test mov mov in inc xchg (bad) fucomp mov addr16 xchg dec push dec test cmp xor xor inc cmpsl mov or jne adc adc mov sbb nop rol ja arpl mov mov xchg ret or push adc pop cmpsb ret fs out mov cli cmpsl fcoms mov xchg adc stos out and sub jp jecxz push dec xchg add mov or in rcll adc mov loop fwait xchg dec es sbb mov daa adc xchg outsb fwait cmpsb mov cmp adc stos xchg cmp call lods cmp (bad) gs test sbb pop in popa in sbb loop fs fnsave loope fsub in dec lods push mov jns fcomp mov loop les stos cld inc imul addr16 cwtl push call imul inc in inc jle pop xor (bad) fimull aam fistp inc pop mov (bad) adc xchg imul inc dec jne loopne (bad) jmp cmp loop clc inc adc hlt pusha lea mov lcall stc sub add js or lcall dec cli (bad) aaa es imul outsl in xchg lods iret sub jns movsb jo in (bad) fistl mov fnop stos lods fimull into push dec mov shrl ss sub and cmpsl jbe outsl popa daa push aad or jmp outsb outsl movsl xchg out push jbe push les lret mov or daa mov aad imul jmp xor push jae adc ds cmc std hlt inc (bad) lds sbb out cld int and adc leave stos js stos les push aam xor gs mov jb bound hlt or ret dec push xchg int3 in icebp or jb and sub push pop dec addr16 enter insl paddq roll testb int3 xchg scas inc dec fisttpll arpl ret loop (bad) subl xor pop xor jg int fsubrl inc mov outsb adc jno clc sahf and jns insl loope mov mov mov mov push mov es loopne and pusha movsl ficom sbb mov inc cltd lea jns jge dec mov aas mov xor push rolb sub stos dec lcall (bad) sti imul ss pop push fucomi ljmp idivb add enter xchg cmc xchg mov or adc loopne popa push inc stos push mov ret sub mov xor loope test call xor daa in sahf adc int3 fwait mov mov or shr test pusha popf jl pop and push and aad mov push pusha ret cmpxchg pop in out ror jmp cltd ljmp sti push sbb (bad) data16 cmp jo out jmp push jns mov adc call pusha rcl mov and notb ja mov sbb loopne cmc push push or fs orl loopne mov cld out mov xor enter mov ljmp mov sbb adc pop out test or mov cmp sbbb sub in adc cmpsl fildl push push pop repnz adc (bad) mov (bad) in adcb xchg jp lods lds jbe arpl mov sbb cwtl sahf and lock scas movsl pop repz das adc pushf cs mov iret jmp test lret jge sahf push (bad) jmp iret or or (bad) in xchg jl cli leave mov pop jo rcrb aas popf inc shrb xchg jl jmp and mull xor jge mov ficoml pop pushf fsubrl arpl (bad) jns jecxz xchg mov sub jmp inc push inc rclb pop (bad) test stc imull lea mov inc movsb jbe jns ljmp jno add inc enter jge dec mov in pop (bad) xchg cmpsl jbe out leave test add xchg adc cs mov shl or sahf sbb stc lock (bad) dec xlat mov inc mov mov or jg and xchg pushf daa mov add lods rorl loop inc inc pop dec mov mov daa popf mov insb sbb mov lret adc cmpsl das jl cwtl jecxz xchg jno ljmp imul loop mov out stos (bad) lcall fs (bad) iret mov push stc jne mov inc pop mov ds push pusha and mov cmc adc xchg dec pop mov mov test mov je sti daa (bad) js inc mov test xchg pop into in roll cmc sbb cmpsb call dec iret xlat test mov mov out cmp leave mov push mov lret repz inc mov daa cwtl jecxz mov subl imul loope fxch lret mov mov pop adc and leavew lds movsl mov fstl dec pop lahf add bswap inc fisttpl insb mov aam ret or push loopne mov je mov sub jge repz mov push loope mov or ret xchg lret adc out pop mov jge push mov push dec inc rclb je sbb mov jecxz adc sub adc call add leave fistl (bad) lret cmp addr16 stc lret fldenv cmpsb inc out popf fsubrs push movsl inc into bound pop outsb dec pop out lods lds fldz and repnz xchg mov adc out inc insb push negl push fnsave cltd dec mov ret jmp pop xchg dec stc fsub lods pop push cmp (bad) aad movsb js xor gs das push jge mov xor icebp jo mov icebp enter push adc add or push push push sub lahf push incb dec mov xor (bad) idiv popf pushf sub pop add in (bad) xchg je xchg sub pusha adc mov pop pushf or punpcklbw lret jnp push (bad) repz inc test mov imul mov arpl pop inc hlt xor pop sbb lret push dec mov dec imul xor push xor repz out and dec jmp mov pop pop sbb and loopne pop sbb inc in dec insb ds loopne mov shrb jl orl dec cli xor repz mov mov xlat or into sbbb cli dec mov dec push in dec call push ret incl shrl scas inc dec fwait sbb pop pop mov pusha scas xchg ja je insl xchg rolb mov add push pop stos xor hlt xchg out push add sbb clc xlat test cmpl fdivs jecxz nop push inc enter push dec (bad) xchg sahf push scas xchg jge mov xchg aaa push xor ljmp cmp sub lods sub (bad) dec dec jmp cmp imul in inc sub jge inc lcall loope inc and hlt fdivl dec lock adc cmp out test dec mov js inc sbb jecxz lea loop pushf imull lods movsb mov mov outsl pop jg in jae into push clc dec ret stos xchg inc jno xor pandn mov pop gs cmp cmp or rclb inc call stos inc mov inc sub cs (bad) clc cltd mov lock dec (bad) sub leave jne mov mov data16 push xor orl iret (bad) fsubl ret (bad) xchg xor jecxz in push pop lods push repz inc cmp outsb add jo ss cmp sub scas or test cli pop mov jl cmpb dec out mov cmpsb pop cmp fwait lea sti std std xchg and roll ret mov jle xchg repz dec sbb stos push cmp rclb mov mov test sarl add push xchg mov push arpl push sub in das dec loope pop jnp (bad) adc pop (bad) icebp sbb jne (bad) push outsb mov fs fisttpl xchg and mov xchg outsl call cli push pop xor add or in xor aam mov xor ret pop jnp stc inc scas (bad) into out pop mov stc inc cmp cmp sub ret daa stc push add imul push jo add adc cmp call imul jo aaa rcll movsb ret push bound sbb sub mov dec ja xchg repnz push ficoml lahf cmp in mov jge push and mov aad jg sub mov nop outsb add sbb (bad) out xchg lret in inc orl fistp mov mov xchg jl js (bad) pop mov insb mov and inc or push inc shrw iret jg js xchg iret int add rcrb hlt subl and cmc fwait gs std stc sbb testb dec cld push lahf xorps add or jns lret xchg leave and pop lods sti shrb pop dec faddl cmpsl ds mov rcll adc divb inc push lock and in lock (bad) mov arpl push add xchg nopl dec lret insb push mov xchg loopne or mov nop aaa int3 inc pop lret je (bad) jg out inc test pop daa aas mov pop push cmp mov rorl int push lret aam (bad) adc cmpsl les adc leave push mov inc add jmp xlat movsb pop jge sub mov jo xor out je repnz dec jecxz test adc mov scas dec in mov call loop fistp mov rcrb daa addr16 lret pop jne cmp je call add mov ljmp add sub xor adc in inc jle pop call cmpsb jbe push pushf fcomi and (bad) (bad) mov movsb pop hlt js (bad) pop cld sbb pushf ss cmp pop and jp mov ss repz jne inc xlat inc add scas fcompl pop lret jb xchg hlt pop ret rorl lods (bad) adc adc fiadd outsb mov mov subl jle aaa mov rcll adc or mov test jmp test (bad) aas mov inc ds pop jl sbb outsl pop in lea mov in pop sbb lret push xchg sub fsubrs sahf inc in push inc imul cmp cmc push repnz outsl mov mov dec xor and out clc sub xchg frstor sub test xor out pop (bad) pop push shrb sbb stc cltd call das push movsb and and sub jmp xchg jg push cmp dec add add and das lea in mov fnstenv mov push xor inc jl test lock cmp inc repnz xchg inc dec pop in push push mov lret test and pop jnp jne or adc insl ja fnop daa adc hlt movl pusha in mov lret inc mov fcoml xchg sarl in jns ljmp sub sub shr test jle insb pop pushl adc ret jmp mov jg adc pop sub test inc mov enter pop pop xchg popf xor jle dec xchg push sub aad es mov shrl hlt frstor and or mov imul mov imul pusha inc stos adc insb sbb or xor or cmp movsb pop inc xchg lds lcall mov lds daa popf outsb mov inc or jle loop adc clc in or push push cmp pop or sub jmp cld (bad) not ffree sbb inc adcl cmp inc inc xor add push inc arpl or push sbb inc adc mov mov es and loope sbb insl inc jg dec xor and (bad) in push add lods aaa movsl xor lea nop mov mov dec ja dec (bad) xor mov mov push mov push xor add call mov loope sbb maxps arpl mov inc lds mov (bad) push mov les lods mov out sub inc outsb (bad) call sbb push inc (bad) (bad) hlt jmp add push adc scas out xchg sub (bad) jb push je jecxz adc jge (bad) xchg out or adc pop add xor dec cmc mov mov outsl jno mov addl pop cmp pop (bad) out push insb (bad) sub xchg insl stc jbe inc stc and and xor cmp inc stc js push xchg add std rcll call test mov xor (bad) int in std outsb imul inc xor call sub movsb iret pop leave add push cmp dec inc jo sbb xchg dec dec push sbb mov cmp xor insl mov imulb cs sub pop scas jecxz cmp adc mov aaa jle jno add lret adc push add mov push inc adc pop sub cwtl arpl enter sbb xor outsb (bad) lds adc in or add std aas dec rclb aam stc fnstsw stc fwait xchg insb (bad) shlb inc addr16 or sub sahf dec xor inc jge lock mov xchg lahf lock cmp and mov cmpsb (bad) ljmp adc and xchg clc mov (bad) dec mov sarl mov dec clc (bad) in mov pop jns inc jl icebp mov jbe fwait addr16 popf insl jmp dec mov sub inc jmp rol xor push mov cmp rclb adc out sbb xor pop out xor pop pop inc jg mov mov inc mov ret stos lcall fsub pop addr16 add pop rol int3 pop ret jne add jne dec jb add lahf mov (bad) jle lods push xor push push mov sahf mov cmp sahf fidiv into cmpsl adc and in push test insb push push cmp mov lret das adc jns mov stc lea les (bad) clc popf insb pop pop nop es xchg mov cmc stos out xchg add sub and mov jp idivl and shrb jge cmc jno (bad) repnz cmp jle (bad) xchg (bad) add push and in cmc addl dec jb xchg das jne mov mov les out add lahf scas sbb mov dec fdivl and jg (bad) hlt mov fist pusha aam mov xchg adc fcoms int (bad) mov fmull xor test add xchg inc cmpsb popa (bad) icebp jecxz sub mov sub mov xor lock dec cmc out ljmp rclb fwait sbb add xchg or mov outsb pop mov pop jecxz xor push jg dec add lods psubsb in in adc push hlt xor int3 sub nop or int3 or imul dec dec scas push loope mov sbb (bad) jne (bad) pop pop (bad) cltd sbb and push mov xchg (bad) xor mov cmp out into int repnz push gs stos jecxz movsb xchg push shlb jmp xor test aaa sbb lcall cltd mov sub in mov cmp in and and push push adc cmp and xchg test sub mov dec push xchg insb gs scas leave stc push sbb fbstp adc cmc dec sub pushf (bad) fwait (bad) repnz sbb jbe addr16 fucomi mov les aam fdivs popf daa push cmp inc lahf sub rclb icebp gs notl cmp ret or mov xor jnp pop cmp lods je ret fwait jp ja inc out jns int3 or into inc mov xor cld sbb aas jne sbb mov aad or scas cmpsb (bad) cmp or adc xchg out into movsb push mov adc mov sub or jbe shlb fcmovnbe sub and mov mov push push test xor dec (bad) cli jae lcall shrl rorl jmp inc cli stos dec not cmp lds mov call fdivrl mov mov loope adc loope sbb shrb out movsb push popf jo dec xlat add dec test fdivr push mov outsl lret fs lret fadds mov repnz xchg jns (bad) mov ja cwtl cmp sbbl in lds test jg xchg jecxz and test icebp shrl test cmp jge dec cltd lds test sbb sar leave jmp out sub push push jae aas mov mov arpl iret rclb sub dec fs push cmpsl stos leave mov jb mov xchg enter pop jmp add cmpsb and adc adc outsl cmpsl jge push test jbe and lret xor pop cmp (bad) loopne cmpsb popf ret out sub test sub mov mov stos push imul dec pushf and or cmc das mov leave jl int3 std fbstp movsb jmp cmp adc cmp into add sti insl mov and xchg jle ljmp stos sub shlb mov adc adc je sbb (bad) insl cmp fnstsw jbe dec fdivl cmp mov pop push fdivs mov jb pop cwtl jae pop ja out push xorb cltd pop aas rclb mov ret pushl xchg aaa jp repz mov push aam ds sub sub mov jns push push in mov popf loop sub mov dec scas mov (bad) out in sbb movl and add ds imulb call xchg or lods test (bad) (bad) ss les sub (bad) sbb (bad) dec popf imul pushf aas popa sbb lret jne mov je daa jnp call inc pop dec jecxz mov xchg cwtl loope out pop (bad) call push jl push out fsubs lds test scas mov xor xrelease es es push add dec inc inc cmp add mov (bad) out sub push adc pmaxsw jp iret call loope loopne push xor es (bad) mov stos mov rcrb push sbb movsb push daa ja dec and mov mov cld stc push push add or mov push cmc or (bad) mov xor outsl fwait jb movsl and mov daa (bad) (bad) add movsl push mov outsl and mov dec (bad) xor hlt movsb mov faddl push les adc pop or xor out imul stos and iret in inc cmp jno dec lds jmp jae sub sbb jnp mov loop dec call loope push dec out daa push push je mov lds aam call stos sub xor (bad) out lods jns out lcall jns sbb loop jae out lds inc and mov sub loope dec lods shll and adc movsl push pop dec testb xor inc xchg cld mov ss inc dec or pop xor push mov mov rolb in fwait je hlt cmc test in andb dec jbe movsb cmp push push pop mov insl adc nop inc iret pop sahf mov imul (bad) add push enter lret jecxz mov cltd daa es repz and mov push loop js lods sti insb enter bound mov mov and in sbb xor mov (bad) icebp (bad) fsubs mov jge ljmp imul ret mov dec cs and movsb sub outsl sarb inc push pushf leave ja add enter push js mov mov mov fsts push les jno popf stos mov out lahf push subl js push popa cmp xlat mov or aad mov cmp jg add cs lahf cmp xchg push adc cmp add ja mov pop mov test cmp sbb inc adcl lods dec mov sbb pushf fs jg into and mov movsb mov add lahf bound pop daa movsl add push movsl iret pop cmpsb adc dec out in mov (bad) call in sbb sti and jae stos and int3 lret (bad) fwait (bad) out ret fiaddl mov das sbb ret cli addl ja jb jmp jns adc outsl xchg sbb adc sub pop negl lret and daa jg dec fcoms fsubr mov xchg (bad) (bad) out lea inc dec pop xor or push rolb or into mov movsl mov jl,pn xchg outsb jns mov or ret ss out andb inc popf xor sbb popa in sbb (bad) (bad) mov adc test cmp mov dec xchg (bad) mov loope popa pop and nop gs les xor jle sbb add cmp aad dec jb lea push out insb jnp jle nop push stos fcoms (bad) sbb sub outsl aad cmp pop jge push (bad) dec pop orl mov sahf mov lods (bad) cltd repz dec or xor pop and xchg cwtl xor jns negl push repnz fidivr and out test cmpsl mov push imul cmpb push push mov out cmp insl cld mov notl scas push push adc pop hlt xor inc pop sahf bound and jecxz scas call mov stos pop cmc in andl in enter in shlb inc (bad) jmp jb lret insb mov jmp bswap and jns scas push daa jne mov cmp and jne jb (bad) icebp adc xlat lock cmpsb aad and inc int cli mov push fisubrl arpl fs add pushf pop jnp push movhps sarl jb pusha std dec mov aas sbb roll inc mov in clc jnp out sbb mov add ret dec push loop push stos xchg insl xchg lds div dec dec das cli inc ret add insb add les inc stc sarl sub adc fstpt jecxz pop or arpl push jne into mov add sahf pop sub sti dec popf cmp jmp mov push push sbb add pop inc inc add fldenv push fdivs add sbb mov mov (bad) jb and jmp and das xchg lds sbb jge ds inc and jmp jecxz push mov mov insl sub nop inc sbb mov or mov ret sub pusha out fisttp aas mov adc push data16 inc sbb sub jecxz cmp sbb leave int3 ja (bad) faddl cmc lret and pusha ja jns cmpl inc fwait pushf push lods push in cmpsl sub inc add xor dec pop adc outsb jne insl dec pushf add jmp test push xor mov rolb fs jb fsub cmc lcall lock jp mov stc fimul sbb xchg xlat mov xor jmp add xchg add ds call mov lahf sahf aad and pop inc pop in cmp sbb mov sbb std (bad) push lods lds mov sarb sbb dec fstpt dec adc pop repz dec shlb mov loope (bad) ret adc popf dec ficom and lods sub out test mov mov and lock and push mov lock push sbb pop lods lahf in mov pop lea scas adc xchg xor hlt arpl nop subb repz dec fcoms ds js lds push leave inc jne sbb mov lock mov bound shrb sbb lcall mov daa push xor (bad) xchg iret lea and mov loope psrlw mov push jb or sub or les inc bound in pushf push or pop fstp xchg add or add pusha loope or add xchg scas pop push mov inc and cmp add add and adc sub mov movaps test adc mov mov or loop movsl xor in or pop fs inc fsubr fsubr mov sub aas (bad) mov push sub jle stos in xchg push dec dec loopne stos sub xor sbb push mov (bad) xchg mov ret sub mov jmp movsl std test or jns xor (bad) out pop (bad) pushf (bad) xchg idivl jl push jle pop mov inc repnz cmpl (bad) mov je loope lods les iret or or addr16 int3 outsl lret or mov pop (bad) clc jb xchg and adc jns lea fwait xchg in cmc (bad) push roll mov shr adc lds cmpsb cld in jnp add cltd in insb lock mov rcl push (bad) push int3 pop mov jle daa pop pop cmpsb cld (bad) mov aam push cli iret (bad) in mov mov dec xchg cmp xor dec aaa leave out in mov or out pop push push jmp fistpll in jne mov (bad) push adc ja cmpsb dec ds sahf stos test pop inc adcb repnz stos ret adc dec je or lret adc mov fidivr pop or mov test out cmp popf push cmpsb or cmp cli mov xchg pop add pop sub or fdivrs or (bad) movsl pop (bad) jecxz xchg lods or xor xorb aaa adc dec mov add out in add cmpsl aaa inc mov mov leave push mov push pop cmp sub (bad) push push out pop jae ret cmp ss sub ret jno jp pop fs sub mov jp jbe lock jge ja in push cli inc ljmp fist loopne jno fisttpll cli xor loopne xchg mov call fimull sarl and sub addr16 clc adc sarl mov adc xor mov ljmp inc dec dec scas push jb xor sub ljmp mov xor push lods ror ss dec sub sbb cwtl mov pop in out lds xchg push das cmp sbb xchg pop adc sbb add out jb ds das dec cltd sbb shrb aaa push add insb stos insb xchg sti push or icebp in and inc sbb imul jb cmp and push subb mov push and push xchg cmp popl push mov aam push cmc pop lods push or movsl rorl jno mov subb jae shrl sub push das add fwait xchg cmp mov into rcl xchg lret sub cmp mov mov jecxz dec add cmp out in mov mov int test jb pushf pop add inc lcall xorl in movsl dec ret and mov loope xchg test mov (bad) in cli (bad) pusha jae and lret les testb addl jle push imul in mov int pop and add push sub fstl jne mov inc push rcl sbb xchg mov test pop jo dec and push jnp push jp jno xlat jo xor push jns pop je xorl loope push pop push sbbb addr16 mov fidivr std andl dec ret mov mov out or jnp popf add sti sbb jg movsb sub xor and lret fwait lret push mov outsb jb adc mov sbb pop dec imul fdivs cs cmp jecxz ret jecxz sahf sbb adc inc mov mov push mov xchg in pop lahf mov xchg mov in fwait lea push or dec and popf mov inc ljmp gs hlt sbb cmp das (bad) mov jecxz mov pop xchg xor iret jg and adc dec sub xchg jl jne scas out or add pop cmpsl fdivl push nopl clc nop sti leave stos and (bad) imul lock adc push insb loope mov lahf jp rcrb mov push sti pop pushf mov mov shrd cltd sbb mov sub jno int3 xor cmpsb xchg inc inc mov cmp xlat mov mov scas cld pop int3 mov loopne xor outsl cmp sub jp (bad) cmc cmp jecxz mov mov add sub (bad) xor inc mov lods push fcompl rolb les dec repnz outsb and mov pusha cli pushf test orb mov push push pop hlt fcmovnbe ror jl xchg out sbb mov adc fimul push es cmp or testl (bad) or mov add imul or dec push in mov pop inc mov mov into stc mov inc jle push cmpsl test sbb aas and ret sub sub out out insl mov dec push mov dec scas fldenv test xor pop push (bad) (bad) movsl das into repz jae rcrb mov sarl mov xchg aam dec cmp insl add stos push lcall mov popa fnstcw daa leave sub stos mov xor std leave inc lods les repz imul (bad) dec cmp push mov mov ds leave into mov jmp roll fisttpl sbb add (bad) pop pop int3 lods add fdivrl xchg dec push stc rcrl cmc push shr mov hlt sub jp orl or enter out rcrl xchg (bad) rcrl xor mulb and in inc or jb sbb pop rorb lret push xorl out xor push movb jb jbe and mov adc into adc inc arpl xchg jae xchg dec sbb jp (bad) lcall in and mov ds aaa ds dec scas mov in jp ja aas out cld scas pop fildll jns in lock out nop pop sub iret push jmp test bound inc sti push cltd dec sub cmp dec jg inc cmpsb mov stos jnp fldpi inc stos out lret aas jo sub mov movsl (bad) int3 or cmp out sbb test adc movsb jmp and and lcall orb mov jg cmp cmp fwait in outsb pusha xor dec fistl fildl jbe pop mov fnsave int push pushw (bad) push xchg loopne mov in mov mov decl fdivr jmp ljmp je cld add inc mov cmc lahf push scas ljmp mov mov mov iret lods and imul xchg adcb in dec stos incl inc xor and in cmpsl add jle pop inc lret xlat mov dec mov or jp sar xor inc inc (bad) add add push roll mov out push ljmp inc jp (bad) lcall ds aas fidiv (bad) stc mov cmp jns shlb or notw mov and xchg call aas pop xchg cli adc dec loopne pop repz pop sub test cmp (bad) enter add aad pop inc insl xchg or js ret fist jno ss aaa daa pop push or fcmove mov (bad) or jne inc ret xor mov mov cwtl pop test cmp or data16 add xchg fs sbb dec mov sub adc ss or popf sbb add lock mov imull aam out mov repnz (bad) arpl sbb mov rolb es rcr out push mov shr sbb add bnd sub sub jmp push adc aad push sbb mov mov cmp jle xor sbb dec pop lret test xrelease sahf daa add jo ds and inc fs lahf (bad) aaa lods mov fdivs aam icebp daa jecxz je lret push xchg xchg mov lret sub dec loope icebp inc fs inc in jae xchg out and sar imul inc shlb push pop int shll test not (bad) lret fcmovb rolb xlat pop or cli mov cmp les pop (bad) dec inc jmp lahf outsl or adc jmp js in out and test bnd push inc inc outsb ficoml inc jno pop sub dec mov mov dec cmp test pop cmp pop cwtl cmp ret sub mov out (bad) test popf cltd inc imul xlat dec lds adc adc mov hlt aas or dec pop fs cmp ret push adc pop xor or mov lcall movsb lods xchg pop or ds icebp pop sbb inc adc ret scas gs cmpsl pop xor jns mov bound mov ja ds daa iret fdiv fdivrs add and outsl xor ds rcll sub insl ja stc push aaa psllq sub xchg pop xchg repnz sub lods pop adc fnstcw inc movb inc scas adc xchg or lea pop pushw add (bad) (bad) in pop push cmpsl mov xchg dec push add cmp pop or addr16 out lods mov leave (bad) pop xchg fnstenv or data16 and repnz and add mov and pop shlb pop mov dec subl jbe add jg sbb std mov rolb pop sahf sbb cltd mov test scas lret inc xchg scas mov xor int3 mov pop pusha xor xlat pop imul pop cltd or clc aas ja (bad) mov je cmp jae repnz xor add in mov loope xor adc dec mov mov out jne (bad) pop and test mov xchg notl bound xor in out xchg es ret test xor incb and sbb jmp stos clc fdivr jg dec cmp mov xchg sub xor or mov and jg stc orl mov mov add cmp inc call mov or movsl cmp mov add dec das xchg sarb test cmpl add cltd int3 (bad) (bad) push gs xchg jmp xor xor xor cmp jmp lods xchg call ficoml lret out outsl es inc mov and hlt loop add jbe (bad) ljmp push and lods bound int3 pop ja int3 jl pop loopne ljmp push push mov push mov les jmp push pushf sarl add adc dec flds flds addr16 cmp es jecxz test sub jg push adc lods push dec push lods imul push push call push push pop mov lods mov pop aam lds fs add ss lret mov mov popa pop pop push repz cli leave jecxz popl int sti jecxz lret iret and aad outsb sbb dec pushf ss (bad) xor neg arpl in inc fild mov push mov nop les dec sub sti bound add add nop/reserved mov push aam jmp add bound lret loop or sub mov mov aam jecxz (bad) mov (bad) sti nop mov mov (bad) xchg rcrb mov loope xchg leave aaa mov cmp or shr fwait int pop pop mov lahf sub cmpl lret imul shrl jo rorl in cmp cmpsb sub notb lods (bad) repnz loopne,pt out lret xorl aam xchg test cmp or jp cmp ss inc xor test add mov cmp pop repz and jne push addr16 mov loop pop cmpsb scas mov sbb (bad) in mov pop lds cs sbb out and mov mov mov pusha cmp gs mov jle cmp lock popf xchg mov push or mov push int (bad) jmp and mov loop test (bad) lds cli (bad) mov aad stos (bad) mov push sub sub ja cltd jne lock shll popa das dec add push pop arpl lods dec cmpsb push sub dec fidiv xchg add cwtl or mov add arpl pop fistl mov (bad) mov push mov jns jle das pop mov je mov xchg fildl cmp outsl add push dec stos push mov xor faddl aaa (bad) mulb adc scas fs gs sub jb lock in cltd adc mov pop xor mov mov clc jae mov dec icebp clc int inc lods sarb js push fdivrs je xor and cli addl popf enter add les and call outsl mov jb insl mov jl sub loope mov sub jmp hlt fwait cmpsl dec gs mov dec and push pop pop test jae jl leave imul and add sahf sbb xchg dec xchg faddl xor (bad) jmp pop mov push lds in and movsl adc repz add xlat arpl cmpsb daa mov dec pusha xchg pushf and cltd pop jns (bad) sbb adc mov lahf jmp lcall popa jb pop mov mov or or mov fsub (bad) or into in mov sbb hlt or cmp popf in addr16 inc or xor mov sbb nop cmp (bad) leave jb fiaddl nop cmp xlat icebp push jne mov test xor ljmp cwtl mov jge pop mov rcr orb jo mov outsl dec popf sbb movsb das xchg or ljmp lahf sbb and inc aad add jo mov lds pop ret cmp xchg dec pushf andl adc enter cmp in gs push (bad) daa sub pop test or addl xor cmp xlat jge add inc loope xor mov inc (bad) pop mov movl or test fimull aad or mov jns cltd mov cmp movsb lods and mov test push mov xchg push fisttpl ds mov rcrb imul jg ret jmp fwait push fs out lret sub jne xchg rol test cmc jmp inc lods inc sbb add ljmp roll mov lods dec mov add jb mov push push hlt (bad) outsl test and lret ds add ret les (bad) mov push or push pop cli dec mov xor mov ljmp into xor mov push and jp mov lahf push and add sbb outsb sub or aaa out or cmp (bad) outsl scas push imul popa (bad) std mov pop les adc test out lret out addr16 mov push dec lods jae clc push in inc pop add pop jle push stos jns dec int3 addr16 mov push mov je les (bad) xor and into test int3 pushf mov jp dec nop (bad) (bad) out (bad) jl xor or cs mov mov cmpsl push pop pop (bad) push popf or adc jno adc and imul lds push stos iret jge mov or fs pop sbb dec clc sahf sbb aaa fisubr stos leave mov mov push lret sbb add in jbe out push aam cmp in xor (bad) or and sub cmp sbbl das lcall (bad) jg,pn cmc pop mov cmp in lcall fisubl fisttp push (bad) xor mov sub stos jne sbb push js cmp mov jp cs mov ds add lock lret push shrb out out pop repz clc mov jge xchg jnp clc sub push inc lods addr16 scas push cli flds xchg pop push shr cs xchg jp int3 push pop xchg xchg push sbb jmp jnp inc stos adc in mov in adc jno addl add int vmovupd ja sbb pop adc push in enter stos lods stos or and xchg sub dec in jle or lcall jae pusha sub mov push xchg and out mov aam mov xor xor les push out push add int cmp inc mov and xchg xor out les push lods mov jne ds nop ret data16 rcl aam and int3 mov or mov cmc jns mov mov mov cmpsb xchg cmp sbb dec clc ret cld imul fimul or and mov cld jl insb pop add dec pop ljmp (bad) ljmp mov cltd clc cmpsl lods jo outsb jecxz cmp es aas (bad) iret into mov scas pop and aad (bad) dec pop xor aam pop loopne ljmp sub loopne jecxz lahf ljmp test lods or xchg jmp lcall scas stc imul les xchg ds dec sub outsl pop push rorb mov adc push fildl test add outsb mov adc (bad) in fdivs adc cs inc jae jbe pop lods fist jl stos call test fucomp scas icebp inc (bad) ja repnz or ds xchg jae mov mov stos stos lds fdivr cmp outsb mov and and mov dec mov jge sub cmp pop or and sbbb push push iret repz aas or pop push pop movsb in jbe test jb loopne add push int ss out cmp mov add pushf mov loope mov mov jecxz loopne shlb daa or dec sub inc cmp jb sbb popa aaa out pop pop les xchg movsb sbb xchg cld push enter mov lds ror addr16 lods or fcmovnu jmp mov adc sub shrl and int3 pop sbb mov (bad) imul jmp icebp bound mov mov aaa out outsb xchg mov popf mov dec mov out ret std stos cmpsl lods push dec enter and in bound dec js or enter add lahf aas mov xor add scas cmp aaa mov sub xor test mov mov stos lret or sbb inc add cmp popa mov fldenv adc scas aas inc mov mov int3 outsb add mov pop int3 test loop icebp mov fs pop insb jb push pop cltd addr16 sbb pop mov mov (bad) push (bad) xor adc sub fcmovnbe jecxz add xchg shrb aam sbb outsl bnd pop mov pop xor outsb jp sbb push cmp inc out in jnp fcmove xchg add out pushl add aam sbb addl repz jae outsb add pop cmpsb dec dec xchg cmp mov pop loopne mov cltd faddl cld mov pop movsb jecxz push test adc shll mov cmp inc ja pop sub xchg xchg repnz int cld cltd xor xchg xor push bound jb aad and shl xor cmp jo aam in lret imul popa push stos mov std pop mov xchg mov aam adc test test mov adc mov lcall repnz fwait and nop xchg das ret mov push cmpl nop inc pop pop sahf scas pop lea out cmp mov shrl xchg bound fistpl sbb outsl nop or add lods jp orps inc inc lods push call (bad) xor fistpll jge and in and rcrl fdivrp insb loop push pop sbb int3 (bad) das stos loopne aam mov jo ds pop xchg leave (bad) mov and adc iret scas jo fisttp push push xlat lret aaa mov inc and or (bad) jbe cltd jl mov lret jo and dec add call sbb stc addr16 mov loope clc lods xchg adc out or lock mov push cmpsb inc movsl (bad) mov jns add or mov ficom lcall movsb dec in xchg inc xorl pusha pop aas pop cmp jecxz push rep (bad) mov or int3 pop mov rcrl pop lret push aad gs xor loope (bad) in or dec in cltd or mov mov negb shll jecxz mov cld jl inc hlt shll inc sbb xchg jns add and adc imul repz sbb cld xor dec sub into jo fwait and jl movsl mov mov stos pop xchg cmpsl cmp lcall leave into push jg int3 (bad) or (bad) ret decb push mov xchg mov jmp inc dec jmp fcom ret fs xchg inc sti push repz and push inc add inc daa mov (bad) mov repnz sahf cwtl cld or cmpsb add pop mov fs je lahf xor outsb mov fidivrl sub sbb nop fcoms shl das (bad) repnz sub test sub jne or jle subb sbb call mov mov mov push clc dec add into xchg test sbb sbb out (bad) pop jnp les add popf in mov cltd popf aas inc adc int out dec jecxz and sar data16 repz mov mov ret lret mov sbb outsl add xchg cmp fs lret and outsb mov xchg int fisubrl sub nop lret in mov sub push sbb ja mov push imul (bad) push pop xchg mov or cmpsb rcrl inc test daa movsb clc xor int jp pop sub and loop sahf pop test movsl fbstp fwait and dec loop icebp pop rorl dec push lea gs outsl sbb xlat fdivrs sbb add icebp ficom push faddl add nop (bad) sub jne mov jbe xchg mov pusha iret stos sub in xchg cmc add xor mov xchg nop mov xchg pop js jecxz adc stc jbe sbb cmp mov lret push pop jle mov add lds push out mov roll and aam icebp adc or adc mov cmp pushf gs jle ds cld add cmp push cltd dec pop and mov leavew jl,pn lret lods or jo pop fmul fdiv inc jbe inc xchg fsubs inc cltd push xchg test sbb and mov ss das lock fs lds sti mov imul or test xchg dec push inc bound cmp or and mov lods fwait pop fsubrl xchg ja std shrb adc jge mov push inc xor cs inc mov xchg (bad) cmovns lock mov cmc pop cli ret and push push xchg dec xchg mov ret push (bad) bnd ja jno out xor mov sbb int and inc data16 nop push adc addr16 lcall or push fs sbb (bad) aam aad loope lahf sub pop pop pop arpl add es mov jg mov sub into aad pop mov adc fs rol test mov mov cmp push loopne aad add in jns popl mov ret and ja pusha clc rcl setl or push orl jbe jae outsl pop in pop jbe lret push mov hlt jg xchg mov test arpl inc pop bound dec xor adc cwtl aad inc daa out add lea pop xor not movsb push push jae push aaa (bad) jge clc out popa ss imul int3 jg in sub (bad) lret dec mov out into xchg pusha dec mov pop jnp cltd aas js adc mov mov sahf cs sahf test sbb neg in mov stc adc and test mov xlat pop fwait ss mov push jb movsb sbb arpl imul rolb mov (bad) cs clc movsl cmc cltd cmpsb out mov xchg int3 dec mov xor dec fwait pop xor jnp inc lods xchg popf xchg sub cmc sub jle adc xor sahf loop mov mov add nop nop subb adc adc les mov add decl (bad) dec in sbb enter push jp mov ljmp xor and sbb ret inc sub (bad) dec mov sub pop movsb out aad ds dec loope xor or cmp pop and xor lods pushf lret scas insb pop push add shll or aad xor shll push ret add cmpsb pop adc aam cmpsl fucomp movsl fsubrs adc outsl and mov xchg dec cmp rcl add inc inc pop pop addr16 jb,pn sarb cmpsl test cli pushf ret dec mov stos cmp aad sub loope je xchg xor dec loopne icebp lods sub push jecxz cld sbb call loope mov add repnz sti jp shrl popf mov xchg sub pop adc sbb inc inc cmp mov in stos xchg jns push fxam sahf mov mov aas (bad) ss xchg push (bad) xor es mov pop push xchg mov fwait sbb fldl pop rorb xor (bad) (bad) pop jecxz test cltd mov outsl mov addr16 flds cmp dec xchg ss push fbld enter aad fwait dec sbb inc push cmp inc mov das xlat mov sbb mov and nop in into jecxz sbb loop mov test int out lcall mov out (bad) cmp inc add sub ss dec cltd stos cmp repnz roll dec mov push loopne push mov gs lcall pusha mov arpl push in (bad) (bad) repz test xor inc and xchg imul lock cs cltd mov cmp sub xchg push push daa or xor xchg mov pusha or sbb jmp cmp andl xchg jbe loope outsl jbe adc sub fisub loopne mov loope jge insl mov lea add xchg aas jle and push jns pop sub outsl repnz push jno into cmp or jg outsl xchg out push pop sbb push bound sub mov push lea pushf jnp negb jno mov sbb in add xchg cmp mov xchg jnp inc out xor loope mov push insl pop or mov test cmp inc sahf jp jp (bad) repz adc sbb ret cs add pop hlt (bad) in cli or xor pop pop aam push push push stos add sbb and push imul in test outsb into (bad) mov popf cmp sub jne pop lods or mov and inc jbe ljmp in cmp or lods arpl cli es mov repz popf negb push lcall mov lcall movsb sbb or sbb cltd lcall imul in mov inc push or pop sysenter enter clc mov xor stos sbb out mov stos ljmp inc (bad) jle pop mov imul inc or mov int3 inc pop xchg or jns cs cmp (bad) and push xchg dec mov repz icebp in or push pop mov jo movsl and xchg repnz sbb cmc addr16 sbb dec cmpsb dec cmp daa or outsb pop ret aaa cmc lock fucomi adc repz aaa sub mov xor add push xor es mov push sbb ja add dec mov jns and xchg cmpsl push xchg xchg cmp mov mov sbb jnp jmp push (bad) xlat fcomps or sbb roll imul outsl push rcll jp sbb push das pop sub out add xchg popa hlt xchg xor push lret outsl (bad) imul pop loop lea mov (bad) add xchg scas mov das push cli ja add sbb ds or ret pop data16 cmc mov sub test mov icebp dec imul js jp pop in inc movsb imul icebp mov pop lret cmc push iret dec inc fistpll xchg mov int3 push or xor push push adc dec arpl sub and xchg scas adc xchg pop mov pop insb sarl fdivr lcall mov je sub scas insl rol ljmp mov cmp xchg jbe dec pop sahf jmp popl mov addr16 (bad) movsb pusha or cmp fldcw sub adc mov and ficom (bad) in test loopne lcall stos cwtl (bad) stc fildl dec jb test sbb hlt inc test jl xchg in out push fucomi xor or adc xchg xor (bad) leave jne jb popa xchg sbb lods clc das dec test sti inc js outsb js push fnstenv adc movsl pop mov rcrl mov repz push or neg and xchg xchg mov adcl sbb fwait repz xchg adc pushf fmull subl sbb sub jo sysret loope jbe (bad) pop orl mov jb fwait or cwtl jecxz mov test sub cmp movsb data16 pushf mov push mov push ret xor loope call inc cmpsl pop addr16 ds test aas jmp jp fs nop sbb pushf call mov push jl sbb adc data16 dec (bad) or int fwait scas cmp sub notl cltd xchg jp sbb lea mov mov mov lea xchg mov lret icebp call movsb cltd add roll push andb test scas mov xchg (bad) or das dec mov movb inc arpl fnstcw and inc adc dec test lock outsb xchg or mov mov cwtl cwtl mov loopne push stos ret sbb (bad) pop (bad) out sub out add adc fiaddl movsl adc push adc mov loopne push int gs or mov sub jle popa xor fidivrl nop sbb ljmp or xchg iret dec (bad) repnz jae push and add sahf cmp sbb or loope or jg shrb lahf insl xchg inc dec lods mov inc add lret mov movsl divl dec stos sub cmp sbb ja out iret push mov loop mov xlat add fnstenv add mov mov mov mov push xor std repz sbb fadd lea arpl je in in xchg ljmp jne daa jns pop dec push push xlat mov pop aas mov pop xchg mov sub push mov inc and rcrb pop loopne in add daa pop dec push adc out xlat inc arpl in sub or loopne adc dec cmp (bad) pop (bad) sub cltd xchg adc inc push cmpsl (bad) bound pop jne mov cmp xchg jae push in out call push xchg mov negl div push rcrb pop in or adc nop rcr ror lret jmp test or or dec movsl pop or sub popf sbb shrl mov (bad) sbb mov xchg push push jne insb sub jns push push insl xchg push (bad) or mov pop (bad) negb out pop cmp cmpsl outsb jle and aad ss cld jle movsl je jbe in cmp fs and mov adc (bad) aad fsts aam jle pop cmpsb dec pop sbb fdivrl leave hlt mov mov mov push ss cld add mov arpl mulb add repnz cmp (bad) jae or mov mov sbb rcr (bad) mov ljmp icebp push ds das ljmp stos cmp lock lcall add mov and mov jle add pop xor cmpsl or sub jg pop (bad) outsb dec and pop pop outsl or push or in jge cmp sbb or cli or inc xor aas lcall (bad) roll jg imul sbb push inc push jge,pn xor sub adc fdiv imul inc sbb adc and dec adc (bad) test stos xor and push stos faddl aas sahf daa sar call ss push ss loopne rol adc inc sub loop popf (bad) scas push pop pop insb jp sub out out sub push pop sbb (bad) fldenv pop or mov ljmp cmp xchg dec leave rcrb push xor (bad) (bad) dec xor sahf popf add mov mov add fcmovu jbe (bad) into cltd inc xchg rolb xor js aam xchg fdivl out (bad) or pusha cwtl pop pop jns mov mov mov test scas or stos jp or or (bad) popf pop test pusha dec mov lds cmp fmuls cmpsb loop sbb and cmp add in mov sub movsl jl lds aam les faddp testl movsl xlat xchg (bad) sahf mov (bad) into lds movsb push mov subl adc lds aad sarb add (bad) enter xchg jmp into mov bound lret sti outsb mov flds ret or mov cltd jae sbb jno pop xchg dec sbb (bad) daa arpl dec mov es dec pop mov jns rcrb mov adc (bad) lods dec mov dec roll in inc pop pop jnp (bad) xor dec mov cmp xlat mov clc jnp je pop jb and ja mov pop pop aad das inc dec cmpsl xchg cmp in xor not (bad) jp test loop cs test lock movsl out jb lahf cmpsl fnsave loopne add aad loop dec cld in push or sub dec cmp dec js mov test test sarb jmp ljmp push fisubrl in cmp lret add lea nop movb pop add bound or sbb mov sub lock mov mov pop jno sti mov adcb int3 jns (bad) add test and push jge push aas rcrl xchg mov or call (bad) sub or shll test mov cwtl pop and sub sbb mov gs push cmp mov mov bound add adc ret (bad) dec loope xchg cltd xor push arpl out xchg sub repnz add xchg pushl jmp addb hlt add mov xlat ds inc int3 and loopne shll ljmp sbb or pop cli xor aad (bad) mov lret cld (bad) pop into mov sti aad mov pop lcall test mov add loop ret xchg cs xor sbb aam jbe mov inc (bad) insl out inc stos sbb aaa lods adc jne xor iret cmpb cli nop insl je xchg dec frstor mov fwait rclb ret mov jmp xchg das inc pop add cmp or mov sub in aad fcom mov int cmp in mov mov sbb pushf mov in and push and add hlt into movsl cmp lret (bad) mov add aad sbb or fs sbb add lods inc clc xchg es xchg fsts xor repnz repz int3 sub pop adc icebp test sahf dec xchg arpl inc mov out push mov xor imul adc dec aas cmc xor data16 hlt aas mov xchg sahf pop sub mov rcll add ret inc pop fisttpll aam jle pop push imul stos incb inc inc aas popa and mov mov (bad) or fidiv push jno psubusb jmp lcall out (bad) xor and (bad) mov scas mov cs (bad) leave pop and adcl sub fnop in mov xchg je adc int shlb jmp xchg aas fsts adcl lcall mov xchg or sahf ret sbb jmp std sub aaa ljmp daa cmp pusha xor inc push inc sub mov (bad) mov (bad) add cltd cmp (bad) cmpsl push xchg repz pop sbb dec inc xchg mov stos fadd adc jp cmpb or fstpl stc mov mov enter ret pop (bad) and aaa ljmp xchg cmc or loop cwtl fs jl add jl pop add stos pop jmp adc mov jo outsl jge pop dec cmc out popa add (bad) mov iret mov and fdivrl xchg cli xchg out pop stos test dec aam jbe iret mov cs jmp mov (bad) ret mov aaa dec sub inc fwait insl sarb scas cmp sarl sbb mov and sbbb out pop loopne fnop clc rcr or push outsb test mov jp fwait dec cmp jle sbb les mov sbb gs xlat mov fstl lods mov mov pop push popf jnp or fsubs cmp push je data16 lcall pop dec call cmp inc into divl push adc scas inc loope in xchg stos dec dec and cwtl js sbb xor out insb xchg pop add jnp call cmp mov adc popa add adc mov xor dec pop mov aaa aas ret rolb arpl repz adc (bad) or dec sub out unpcklps popf adc push and sbb pop stc nop fnstsw push insl xor xchg jge loop add pop inc lcall iret pop pop mov or adc std push jle cmpl (bad) inc pop sbb mov test xchg push sbb cltd mov pushf push loopne rolb xchg hlt icebp jle out pop dec iret aaa cmpsb or sbb adc add mov sbb (bad) dec push dec sbb inc xlat popf push add or mov jbe orl or loope movsl pop addl ljmp pop adc in jl cs or dec (bad) pop in sbb ret and ja mov jp dec sub xor inc fcoms fistp or xchg or sub jg sub xchg ret imul dec and bound mov js,pn add or lds (bad) or (bad) and mov mov test xor in inc xchg cltd sti outsl mov or and je cmp or jg mov push push sub sbb jle mov ljmp mov jno pop push fidiv int ffreep sbb xchg test ret jnp push lock pop mov add push lods and mov jmp pop arpl xor loop or gs lret mov fldt fimull orps mov js mov out mov xchg pop ljmp adc ja push lahf bswap lea js out aad inc xor and pop divl lods jecxz mov sti aam xchg cli loop pop rolb push xor mov adc xlat or and aad fwait inc or (bad) outsl xor sub stos mov clc adc pop xor rclb mov jb mov or cltd daa push pop mov out ror loopne mov loopne push or fwait jnp in cmpsl inc sub sbb clc push notb and movsb cmp fmuls call stos test nop clc enter in arpl out sub add push xchg test pushf add rorl mov addr16 mov xor or pop or or mov sub sbb xchg jbe and icebp jno jmp lods dec enter lahf xchg fidivl pop aaa in stc cmc test popf loope stc mov adc sti leave ds in sub cwtl cltd outsl mov cmp out jg jp jae repnz repz bound cli pop push jle es (bad) das stos je xor push aaa adc call or push add jb and jae std (bad) and sub sub test or lock and fs add rorl mov jb jbe icebp pushf pop test sbb ja popf stos scas cli imul and mov mov pop sbb cmp icebp add lds add push cmp scas inc xchg xlat mov lods pop pop xchg or xlat mov mov mov sub outsl mov sarl movsb or or in gs imul pop mov shr bound sub data16 cmp cmp icebp jb movlps cs (bad) mov push dec cmp lock (bad) xor int gs test out sub jmp push hlt cltd jmp sbb (bad) jmp fildll femms inc and push push and lcall in push jmp mov cmp jmp xor loope pop in inc mov or nop out sbb incl mov push or pop adc xchg mov jnp leave xchg and jns rcr ficomp cmp (bad) mov push jae (bad) jp outsl test lcall dec clc in scas adc mov jl (bad) sub lret fcoms adc in inc xor and dec scas outsl pop and jbe lcall imul cmp dec sub mov cmp and xor loope ret and in sbb lds lcall fs movsl mov push scas cmp and xlat ja int int (bad) push stos jns lea lds test jnp lahf (bad) jbe jg daa push pop and pop (bad) cmpsb mov outsb std jecxz jnp mov test dec jge adc add sub push out das mov mov cmp mov enter into movsb sbb inc int fwait xor mov call cmp pop adc int jge in loop xchg cwtl rclb xchg push adc dec test test mov push jl repz xor bound shl addr16 push test pop int3 mov cltd repnz cli pusha fsubrs xor sbb (bad) jno insb stc and out leave jns (bad) (bad) fsubr bound das pop sbb cmpl or sbb lods hlt imul iret test xchg inc in popa mov les mov clc (bad) cli loopne inc mov mov gs xchg jmp daa jno lea cmp xor movsb xchg pop pop dec inc divl jns push insb adc cmpsb xchg movsl out mov repz sub fwait dec iret (bad) jp stos sbb (bad) lcall jl ja aad add sub loop popa (bad) xchg es fucomp jns cwtl out dec cld lea test es stc lret dec mull (bad) push stos jbe aaa fisub enter mov aaa push mov ss push leave dec inc in shlb out add adc clc mov inc enter xor xor xor inc cmp adc aas mov cmc sbb bound jge add jg mov xchg lea in loope mov xchg sub mov out sbb jae movsb stos pop sbb jbe lods cmp lock (bad) jb jg icebp dec (bad) jmp out jns enter xor xor mov xor xor mov (bad) prefetch sbb mov test stc cmp jb in mov xchg daa adc xor xor cmp fistl cs fcomps out push add loope call addb (bad) and in sbb jne mov and pop mov add mov imul xor fdivr outsl pop push cmp ret icebp aaa in test jle (bad) dec repz xor loope mov pop outsl sub cmp xchg push fistp or cli mov cs stc int3 lods mov mov gs pop cmc and int3 cld icebp pushf add in xchg fild popa jecxz adc leave bound jno jle jmp or andb inc jecxz (bad) popf or ret js jg cmpsb loopne addr16 dec sub sbb push mov sub negb cmp gs je es and imul std in pop cmc decb data16 xor xchg jmp hlt das and stos mov clc pop xor cs inc push jbe mov cmp add xchg (bad) aas fdivp popf insl cmp sahf xchg mov xchg lods cmp jle push mov xor sbb aam sbb aas jb icebp fnsave pushf xchg xor cli or inc loope or mov pop out pop out fcom mov mov mov jne xchg pop ja mov inc cmp mov stos mov jecxz sbb movsb mov push cmpsl out iret popa gs xor rcl (bad) pop mov push insl push movsb (bad) int3 hlt push push mov popf inc jb mov das add sub mov pop mov pop (bad) xchg jo mov xchg out push push stos pop les mov cli adc pop pop fildl sbbb daa xor adc (bad) mov pop nop icebp leave push pop mov inc and xchg jmp adc xchg sbb aaa sahf sbb lcall xchg insl mov inc sub and add icebp fdivl leave pushl rcrb mov inc xchg sub sahf lea adc mov sbb and ret out leave cwtl mov add ret sbbb cmc adc ds ss mov test xor mov dec push mov clc call jbe and daa add lods inc stos loopne mov dec notb fist (bad) jge jae mov out mov sbb addr16 in adc dec xchg jb and pop inc dec jmp cltd add fiaddl test inc and jns,pn es pop mov sbb xor fstpl sub cwtl pop sub cmp jb sub or jp adc cvtdq2ps ljmp (bad) sub pop lret mov push inc dec stc lret (bad) cmc mov insl (bad) push pop lcall jle in repnz add cmp push mov imul (bad) jae jnp push ret fsubs jae je mov paddb lds mov pop insl (bad) lock xchg icebp push sub dec pop inc in xor push (bad) and outsb bnd dec leave lret xchg cmc mov sub pushf jae push xor (bad) mov mov mov jle fsubr dec jge cmp mov in scas das jo xor fstl (bad) and addr16 pop pusha orl inc xchg jmp rclb jae cmp lret imul cld out enter insb and mov hlt outsb inc pusha out mov push roll dec bound neg jl pop notl lea imul inc int imul in mov popa push cmp das int test inc or rcrl stos xchg push jge movb sub cmp fsts data16 jl inc out (bad) and (bad) imul out out xor add mov in inc mov fwait int jge mov movsl xchg cltd in ficoml mov dec xchg add mov mov ret xchg jge or divl ja inc push vmovapd lods fwait pusha aam sub and sbb mov call ret pop mov lods push dec mov data16 fs and test cli out outsb and ljmp movsb jne adc arpl rep cmp inc outsb stc popf add loope loopne or lahf es xor dec clc jbe arpl loopne rolb rcrb lock in xchg pop fsub jge push mov aad add pop xchg mov mov das std in cmpsl xor lret pop add mov cmp aaa pop dec aam and push neg fs (bad) test sub pop loop pop or and sbb xchg add cmc iret mov repz or lock jp in rcll popf cmp lret aad imul fadds scas xchg cld out cmp mov popf popa dec mov jns adc lods (bad) fiadd sub xor jle mov clc ja movsl sarb mov arpl mov data16 shrb movsl jb sti dec hlt ficomp movsl push mov jo mov sub cmovno push fisub mov ds mov inc or rol sub pop mov pop ficomp lock or mov mov xor fidivrl test sub sub mov or inc cmp jae cs xchg mov push add fwait test sub jge sahf or movaps ljmp jae adc adc xchg lods sbb jge adc or les fmull ja sub or ret mov ja jno (bad) fimul pushf inc mov and dec sbb push fwait sub push iret ret add outsl xor xor mov in rdmsr (bad) push int3 mov call cmpsl in dec mov cld or orl fistp fsubrs leave fwait pop dec lret adc cmp cmp ret lea jecxz cmp lahf add icebp pop (bad) dec push or push mov sbbl test das mov add fidiv add jl jmp and pop test cs and lcall addr16 aad out pop jnp ficomp dec pop push mov test mov (bad) mov bound nop test out imul mov add and mov cmp jnp xchg mulb cmpsl cld xor mov test jl mov xchg fs jecxz mov mov loope jg inc in push aaa insb inc cld mov fadd xor notl cmp aaa jecxz push xchg lods sub popa xchg ljmp ret sbb adc mov das aas idivb (bad) mov jo lcall dec popa loope sub jo js push rcl and je push int jp jmp (bad) imul sbb in xchg movsl stos fimul mov cmp movsb daa dec (bad) xrelease dec add (bad) and adc cmc mov cmp jle push int3 hlt in in push fwait push sub inc fwait cld (bad) pop loope dec lahf push and fsubp jb aas xor inc in jp mov xor and movsb fucomip jecxz xchg test pop std fwait push sti cmp xorl and out (bad) into inc jns sbb push and cld adc xchg insl mov lods jns jne mov jno (bad) jbe and cmp or pop mov inc shrb test test lret xchg in inc adc push sbb data16 cmp popw xor and sahf rorb or lock rolb sub (bad) movl arpl jbe lea cmc xchg (bad) pop push loop lahf lret xchg out cmpsb sbb lcall jmp adc cwtl pop sbb cmp sub mov mov cli mov mov (bad) jle fxch out imul pop xchg js pop cmpsl and cmp xor enter out and push xchg push in mov sub mov pop mov aad xchg scas sub sub hlt leave call add sbb dec ja imul jge pop aad cmpsl in std incb cmp sub or (bad) scas nop movsl andl sub std inc inc mov jno xchg cli mov popa dec push mov push xlat inc aas test cmp ror (bad) adc loop,pn xchg enter loope inc jecxz xchg xchg fnstcw xchg (bad) mov sub mov xor (bad) jne dec jno gs iret mov cmp aas ljmp push cmpsb jp jae mov push in fs sub insb sahf xor iret or push pop xchg fwait movsl sub push cli pop outsb inc rolb aas ljmp mov out cwtl das or and (bad) push mov (bad) push dec aam push (bad) ret fidivl dec cwtl adc adc out aad cmp scas push jo mov cli ret or sbbl test adc dec aam dec add jnp popf push fwait push fwait sbb add mov sub sar lret pop pop push ret sbb fs movsb cmp xor test enter mov lcall pop push test test jno sti cmpsl es jmp lock mov cltd xor push nop or daa push std jbe,pt movl shlb push lcall jecxz xchg (bad) mov mov jp (bad) inc mov adc push cmp loop insl es push lret inc mov add push stos cli lock jecxz ljmp lcall loopne xor or arpl fdivs cs or mov inc mov fstpl cmp sub jle dec inc and (bad) cld in mov and icebp adc push mov outsb pinsrw idivl add mov loop push cmp adc cmpsl or adc adc lock pop pop pop push jne xor xchg dec and adc adc in repnz outsl lds loopne popa jns scas adc sbb ficompl or outsb dec xor lea out jp fidivr movsl mov in popf push mov shll dec and enter cmp jae push ss repnz pop sarb lret dec xor and arpl loop jns add push aaa scas (bad) fldenv or pop pop out add sbb (bad) jae push in in es mov rcr mov push ss aaa xor sub insb xchg pop mov icebp xchg in inc dec push in aas lahf inc and aam mov add loope push xor sbb aad fidivrl and loope mov mov sarl jge dec mov test adc xor cltd shlb mov lea cmp pop outsb jl ss das xor or pop les cmp fisttp je pushf or shll ret (bad) lods (bad) stc mov int inc ljmp stos insl mov adcl scas fwait or xor iret dec in rcr fidiv dec push outsl cmpsb xchg xchg mov call andb sbb imul aaa push in adc mov (bad) dec idivb (bad) in xor out mov add bound sets dec add adc mov lea movd xchg notl adc sbb add lods adc fsubrs cmp insb push push mov xor xchg sub mov (bad) adc fidivrl fstps aam shr data16 dec aas xor xchg xor (bad) (bad) mov mov push push mov sbb pop sahf stos cmp sub fwait jmp inc add sub imul xchg jne cmpsb pop cmp aas insb jmp hlt add xchg add ljmp int3 xchg outsb cli ljmp jo divb ljmp sbb int sbb adc addr16 cli push aas and stc sub lds in add daa ljmp inc (bad) cmc test xor push clc inc (bad) and adc sti sub sbb jmp lods dec jne push bound movsl mov sub xor test mov mov mov movl jge lret test leave cltd xlat out pushf jb pop fdivp call (bad) jno jl (bad) hlt mov in mov xor in sub push in ds xchg inc push das outsb mov dec repnz out mov (bad) rcrl mov shl cmpl jnp mov cli push mov mov dec mov fmuls roll int add dec jae lcall stc icebp test jl pusha std mov xchg (bad) or jmp xlat mov push adc push mov mov xchg mov aam into std in pop adc mov shll sbb sbb pop fs sbb out xchg das shlb es popl rsm sbb add cltd ljmp rcl xlat imul adc sbb dec push (bad) insl ret jle xlat sbb scas xor lods lods pop jp icebp mov enter add mov or xor mov mov stos fcomps out pop pop mov mov fdivrs add mov lret outsl iret pop out cmpsl cmpsl and xor adc xlat lret pop hlt fwait (bad) pop (bad) sub mov (bad) dec sahf mov stos icebp rcll pop sub ret xchg mov pop arpl pop mov mov sbb rclb cmp test loop jp sbb dec jns ficoml or cltd sub lcall or jle mov (bad) cld dec ljmp push lock stos out das xchg loope js scas lods and negb mov push fldl ja sti inc cmpsb sbb xor cmp aas ucomiss cmp xor pop aad mov fsubrl mov jns mov mov adc xchg inc js into (bad) aad mov jecxz addl inc (bad) xlat adc sbb jno inc out mov in hlt stos push adc daa adc mov call gs push xor and sub push mov int fimul outsl test imul xchg jmp cmpsb into (bad) push mov enter iret fimul inc sub pop cltd cmp jne loope pop int3 mov sub push cmpsb lret stos test push out jg push jnp and loop xchg lds fwait fwait sub pop mov in sbb fwait int dec pushf cmc inc dec mov xchg insl cmp xor (bad) shlb (bad) cld adc adc sub aas jmp inc xchg pop out mov jne push daa rolb add insb lahf outsb cmc lock adc cmp ds aaa inc push mov test pushf cmp int3 leave not xchg jge cs js inc mov (bad) adc (bad) mov data16 mov xchg pop sub and mov call and (bad) jg int3 xor sbb lahf xor stos or push or outsl dec mov addb xor xor out xor insl push fiaddl lods aas repnz inc push mov add mov mov scas enter out (bad) (bad) fldt adc pop inc xchg fldenv sbb pop or jns int3 pop mov movsb jle out mov rcr ss cmc imul enter dec add add movsb ret push cli xchg imul sub push ds mov scas mov test push or push int3 or jnp lock sahf add mov inc (bad) pop rcr (bad) or jl shr jne cmp xor mov push mov sub test sub jno out or mov add (bad) mov sahf cmp test jne call add ljmp jne pop shrl mov dec sbb jnp test pop fnstenv loop cwtl outsb sub push mov and lret jbe and (bad) mov test insb or xor or shld insb pop add outsl mov fldcw pop loop sbb loop rol cmpsb clc cs jne xchg shl fnsave mov sahf imul dec movb mov inc scas dec sbb scas or add negl gs cli subb push mov sbb or or fidivrl inc leave loopne xchg cmp icebp sub in cmc inc sub in scas xchg aad ret cmp push pop sub mov cmpsb in imul pop xchg push mov setl pushf test das push insb or into insb adc fldt xor or jno (bad) int dec sub inc cs lret in sub leave inc xchg add imul dec movsb jmp sahf jmp mov cwtl ss dec je cmpb cltd pop hlt (bad) and and xchg sbb mov push inc loope aaa add sbb dec (bad) push cs add fdivs repnz in adc xor mov push xor xchg repz jns sub mov sbb adc dec nop movsl lret dec mov mov jae sub js sti movsl cmp dec out scas xchg adc lahf pop ja and jbe bound sbb mov icebp cld push (bad) out xor push sub mov repnz sbb outsl pop (bad) mov add movsb mov xchg xchg (bad) mov mov mov lods push (bad) push cmp loope xor jl jp dec xor outsl mov mov mov mov add mov jns daa push es mov push jb add add mov mov nop xor mov stc lods fcom sub out or int3 into push xchg movsl mov xchg push jp hlt sub in sbb loopne dec fucomi stos mov hlt mov sahf xor cmp xorl lcall insl xchg pop les insl mov ja cwtl sahf inc cmp nop and pop sub fwait stos test pop pop (bad) xlat out mov pop stc mov inc mov outsl addr16 xchg inc repnz xchg sbb jo daa inc pop mov add dec pop mov in and push shlb outsl loop sbb enter xorl mov test add cmp hlt jecxz pop pop int notl lret pushf jge adc test inc cmp scas insb add fwait scas push mov cs mov lock dec dec mov sbb inc xlat aaa stos xchg xchg or test lock pop cwtl pop xchg xlat sub sbb xlat ds add fstpt sub inc cltd mov mov xor mov xor xchg (bad) or push sbb sbb (bad) scas es pop mov xor xor (bad) decl loopne into aaa fcmovne hlt nop pusha inc sbb mov mov push pop mov mov rcrb mov imul test mov nop fs push push lds pop repnz mov xchg push xchg test pop loop fldt lds js (bad) outsl or mov sahf into jl sti push inc nop inc add sbbb inc je icebp outsl je fcmovu sbb mov xchg pop js pop cmp sbb or icebp cmp and prefetch negl ljmp xchg mov adc mov call into imul add mov sbb mov jg fistpl dec (bad) cmp rcrl lret sti popl repz add lods aam clc sub subb mov cmp loopne aam fisubr js out stos add subb test leave inc push xor call xor notl iret push inc cmp adc adc jno stos cs aas add imul sub push xor and xchg xchg sbb lods mov mov pusha stc mov inc pop lock and (bad) jecxz mov (bad) repnz nop cwtl adc and data16 (bad) in or in mov fldt or nop push aam add or testb dec (bad) icebp sbb push loop cmp test mov mov adc lea jo popf popa movsl int sbb inc addr16 mov scas jg and lea je mov mov dec (bad) out out jno mov push sbb into (bad) sbb pop outsl pop cmc sahf punpckldq lcall cmp jno fdivs mov pop jle lahf out notl pop dec or loopne test xor sbb js jae scas out testl into jle data16 inc dec sbb jmp sbb inc push dec inc cmp jns and adc xlat or fdecstp mov and ja xor insb es enter (bad) out jle es js add aaa addr16 sbb movsb js sahf mov lahf fwait mov push and and js in cmp ss stos loop jne push xchg fdivrs add addl (bad) mov aaa sub loopne (bad) jl mov mov sbb xlat mov loopne aas mov repnz jl aaa daa xchg adc cwtl inc add or add repnz inc arpl and and cmp add jl jg adc xor jl addl cltd iret bnd pop test lock xor lds out pop xlat gs add pop push sub aaa adc xchg or pushf jne bound repz in icebp dec fcmovnu pusha ret loop mov adc sbb sbb faddl push popa nop roll scas mov test cmp rcrb imul cmp add scas mov icebp sub or std incl add or (bad) jae sti rol std insw jg shrl cwtl ja out sbb mov iret jmp and ret pop rolb cmp (bad) loopne scas xlat dec mov xchg lahf sbb dec add in bound dec xor (bad) or adc xor loope or insl fwait inc xchg stos movsl loopne dec xor xor mov sti das push ljmp push icebp pop sub mov adc mov lret mov dec inc mov popf xchg cmc pop push jb sbb in sbb sub mov aaa push xchg push mov dec out das lods jg sub gs add lret or ret push mov sbb xor lds sbb jb xchg add jl mov lock inc xchg xor pusha outsl sahf insl mov jle sub cld cmc sub scas push push gs mov (bad) pop or push pushf dec xlat adc mov or xor push rorl outsl jge lea std adc stc pop or shr int3 inc lret test mov insl xchg sub or (bad) hlt sub push dec insb insb divb jp outsl lcall lret sub mov push mov inc add fisubl or and aaa adc push loopne pop call or lock cmp seto or sub fdivr pop sub adc mov popa cmp arpl sbb test dec mov ret mov push mov addl push addl cmp push jg or sbb in loope cli mov scas sub std out (bad) pop js ljmp pop mov pop ds pop jae mov add setno loop (bad) and out dec jns (bad) popa out pop and cmp rolb xchg mov bound mov fldt and mov cmc inc repnz add sbb daa test add jge js push out fwait aad inc jp xlat push movsb bound dec cld xlat or js mov cli mov sarl arpl ficom mov ja push les jmp movsb fsubl cwtl ret js aaa in sahf push test pusha mov push dec mov cmpsl loope mov icebp mov add rcrl mov aam movsb sub es mov dec pop (bad) pop or fbld adc sub xor lock insb jle and out aas jmp (bad) jb cmpsb aaa lods test xchg int3 jg mov inc sbb mov outsb push adc test pop mov stc and mov jle fisubrl dec out fcomip mov inc xchg jns adc dec sub fidivrl js imul (bad) pop mov stos call add cmp mov add scas and or jnp es xchg fstpt mov add jp ljmp in mov jno and shll pop cmp dec les jbe pop jnp jns rcll pop sub (bad) in mov adc (bad) aad mov lahf sub idiv jne lods jno sbbb jnp aas lds jge into xchg ret icebp aam add into add xchg shlb dec jne push imul lods add xchg daa ljmp mov push sub faddl mov cmpsl fbld cmpsb add sub outsl push mov int3 movsl or je xlat sbb xor push push inc in cmpsb push xchg dec xor xchg cltd cwtl push inc jl mov pop test inc mov ljmp divl xchg icebp inc jnp or mov pop push fst xor stos aas xchg mov inc or (bad) (bad) div (bad) pop in xor pop mov stos imul (bad) es mov ret jmp mov mov daa adcl out jo inc lea or inc fnstenv jg int3 mov rcll sbb sbb mov loopne out mov adc inc das (bad) in sti pop xor lahf sub sbb call mov cmpsb xor cmpsb mov pop idivl mov dec mov dec or jg pop sub lods or mov push add inc cmp flds clc xor data16 andb repz jecxz cmp das in add pusha lods mov add ret push jmp push inc ja inc aad inc ret clc jg shr sbb pushl cmpsl add cld and mov adc movsl ret pop or add dec icebp enter xor pop ret stos mul xchg xchg adc out xchg je sbb mov push pop lahf mov test sub xor dec nop out (bad) jbe das dec mov enter jmp pop scas or lea mov mov mov jo adc int3 jns dec or or mov push movsl aam into (bad) daa out les mov addr16 or lret and popf sbb xchg pop out or pop lock test lods push aam pop stos and sbb sbb ret insl lret int mov pop scas stos jecxz lahf sbb xchg mov dec das arpl js xchg or lock dec add cmc popf div sub xchg pop dec dec data16 cmp jg cs xor mov push mov xlat test lods adc cwtl or mov mov jl (bad) iret jp cwtl cmpl aad movsb les fbld movl mov pop decl mov call cltd mov int3 adc jp dec out jmp in add jp ret fwait pop in jne or dec jp cwtl (bad) inc jae pop mov pop adc xchg test dec icebp js mov les add adc cmp sub sub jl cmpsb pop mov into loop dec outsb jbe fs stos adc mov sbb cwtl cltd pop pop cmp mov xchg push insb add xchg add fmuls aaa lock sahf repz lods mov lea mov lds fs sub jb shr hlt inc adc lods jl out nop push xchg xchg call xchg push rcll mov push or xor movsl dec jp sub in ljmp (bad) enter mov nop inc mov pop iret lea insl call repnz dec jae out inc pop push mov leave xchg mov or mov push xchg inc lret out jo mov mov shlb hlt (bad) cmp fcmove insl xor ret pop insl aas out lock push mov mov inc cwtl out scas mov xor sbb jle jno mov push jnp nop xchg leave cs push stc fs cld and fistp fdiv pop inc iret rorb push mov xor jl jle jno push dec loope pusha mov mov enter push or pop or sbb leave sbb out lods ret icebp enter int stc nop and popf jo popa jne sbb data16 xor pusha push cmp pop stos test pop push test mov jns aam mov in imul xchg gs fsubrs cmp jge or jl js dec fdivrl adc sub sbb mov dec popa out out cwtl fsubl shlb std mov std mov push insl (bad) (bad) push mov xlat orl int inc inc ja repnz lods sub imul sub mov add mov pusha cmp mov shr cmp push hlt pusha mov cmp cmp lea fildll pop fistp mov arpl xor cmpsl adc xor push sbb je inc xchg fstpt (bad) inc fstps push (bad) ds pop stos or mov mov and cmc test add jle hlt shrb popf dec or lahf mov sbb sub lret stos or les or (bad) stc sbb ret mov movsb push dec ror dec inc mov pushl mov mov or fstpt xchg dec inc test push rorb and dec xor andl jns mov aam lea xchg xchg mov cmpsb mull add sbb xor jne sub xchg mov xorl pop adc pop mov pop cmpsb or sbb jae mov adc popf inc xchg push lret jl int inc stos sub test mov rorl push push dec xchg xlat mov loope outsb imul iret decb mov push mov ljmp xchg pop jne sub sub sbb sub mov mov jmp pushf cmp jmp adc fs movsl sbb mov (bad) xlat pop jnp (bad) adc das mov mov and xchg (bad) insl or dec or pop jp shll inc lods lret int jge mov mov pop xor nop fcmovnb jmp clc enter bound hlt dec (bad) popa lea sarl inc aas dec push or inc (bad) in imulb or mov das (bad) mov in and mov leave or jo (bad) jne rclb fwait and cmpsl roll jno sub aam sbb jo adc inc aas mov mov aam stos mov (bad) out pop and sbb rcl inc and or ja les jg mov pop call xchg jecxz push xor pop sbb pop loop fimull jb insl adc jmp pop lea jl in or ja into or inc mov adc sbb out push dec pop lcall (bad) push jae fnop mov daa sub inc xchg pusha cmpsb xchg fistl push dec movsb gs je mov adc repz and push les cltd sub cmp test movsl imul sub rcll pop mov (bad) and test loop daa sbb xor cmpsl mov fldenv pop enter jnp cmp gs push cltd call dec lods mov and mov aas ljmp and cmp jnp lea mov stos aad pop xchg (bad) mov pop frstor pushf in (bad) insb repnz and lock push jle std outsb jl and or cmp inc hlt mov cmp sub outsb mov (bad) and (bad) nop dec pop cmp xor cmp lret ss inc jl arpl iret adc enter test imul fdivrp push mov call ret or xor mov mov ja pop cmpl jge adc and add lcall and data16 (bad) popa push sbb fcomps out fidivl sub cmc rcrb jb and ret addl aaa hlt pop fs xchg addr16 lea mov scas mov cmp and das fmull push cmc adc xchg xchg jae das (bad) xchg dec fiaddl (bad) sti sbb cmp sbb mov inc or sbbb sbb adc jge push lret or xlat pop lods sbb jno mov insl in js cmpsl xchg inc aas das aaa pop push jns fmuls test outsb mov cmp and jns pop (bad) adc adc jae ds mov push mov aaa dec rorl cmp or out fcmove je popf int3 lods js ja mov add movsl add push mov int fistpll ret or mov leave or mov or pop insl pop aam rorb sahf add dec stos xor fdivrl mov adc xchg sarl cwtl add aas mov stos cmp push pop pop ds sbb stc arpl or and aaa test and fldt cmp dec and xor arpl andb repnz (bad) divl mov movsl movsl jle and mov jne daa jmp pop adc mov mov adc push jnp xchg and lcall outsl jmp sbb jbe inc aad cmp jecxz or iret adcl insl adc mov das and push out aas mov sbb enter pop dec xor fcompl in imull jo xchg aas jle adc movsl xchg pop jle lret jl fs and call loopne enter lea sub dec mov stos pop cmp js outsl stos mov repz jo ret fidivrl adc mov pop pushf pop mov mov lret and inc in loop sbb jle sbb notl xchg out ljmp insl lds setle negb pop add inc (bad) inc mov jecxz mov xchg loopne psubq or add adc pop neg xlat jg pop das sbb mov insl out xor xchg xchg mov mov xchg xlat mov push push test jbe jecxz stc je imul (bad) mov dec es xchg (bad) daa es lahf inc jb adcl stc mov les xor rorb mov add scas imull dec jae clc mov pop adc xor mov adc jno sub aas aas push add dec xchg jo xor or add aaa leave mov out popf inc (bad) call fwait fwait cmpsb data16 adc (bad) mov mov and mov insl test popf cmc dec dec jge ret mov push (bad) repnz xor sbb pop call jl push insl mov push (bad) cmp jns in (bad) icebp in daa mov int (bad) and mov imul popa sahf cs mov cld push sti mov les cmpsl (bad) pop inc mov mov cmp and mov rclb aad aaa in mov inc jg ret fisubl mov repz imul addr16 es jge jno lret adc mov push arpl divb aaa sub movsl insb mov sub pop adc pusha and cmp inc jp add mov popf stc sbb mov adc (bad) in fcmovnbe scas mov cmp jg pop jle jl jle inc movsb clc cld in jecxz dec xchg xchg adc xor insl push ds hlt aad pop lahf fcomps fcompl and dec lret fmulp dec inc mov jns cmp jp add sahf test mov call (bad) pop mov hlt les rcrb jnp cmp ret mov add ss pop hlt nop dec cwtl push insb sub add imul inc mov sbb loopne or jnp in iret xor int3 jno out mov xchg (bad) cli pop jno icebp loop insl (bad) jmp insl (bad) mov sbb xchg daa insl cwtl pusha (bad) scas add xorb push mul push jle pusha loop in cwtl add mov inc dec jecxz int3 mov xor mov add push push add fmul sbb aas ljmp fwait dec sub sbb ret jl mov cwtl xchg jle mov adc cmc pop inc sbb aam dec inc add mov inc movsb adc mov or adc rorb mov ret mov dec mov push enter push xor outsl std sbb icebp dec add or jns sub xchg lret pop mov inc leave mov aad addr16 int leave int3 jo jae xlat test jb (bad) ja imul fisubrl clc mov (bad) sub js ds loope call mov (bad) jmp bound xlat and jbe rclb xchg inc shr or sbb cmpsb sbb and mov pop inc pop sub xor and rcrb add adc cmpsb cmp out xchg cmp jl (bad) aas cmp aas adc xlat mov les jp adc jge rolb rcr daa popf and jp sbb add pop in sbb inc and jmp mov rcll jle mov push gs add shrb cmp mov call pop sub sub dec je lret sub popa mov arpl mov adc cmp xchg mov scas sub fldenv pop inc lods mov (bad) loope mov icebp dec mov icebp lret sub subl cmp adc int3 lock jg push repz xor mov pop sbb and inc aas stos gs mov add and jl imul (bad) lret xchg mov xor sbb js movsb cmpsb xchg pop pop data16 fist test mov and jl ret dec dec sub xchg aaa scas test sub repnz or mov pop push imul xor stos aad jg jmp fs and xchg or and icebp pop add sbb das dec push inc dec es in mov call jnp dec sub add xchg mov xchg into mov mov ret push jg jae int3 ret or xchg nop (bad) pop jno cli icebp mov rorb divb js xchg mov xor insb xor mov in sarb notb xchg out add sbb pop insb faddp je jmp (bad) movsl push xchg out push pop mov xchg mov push cld je sbb xor (bad) out rorb inc (bad) mov test lahf inc mov outsl mov (bad) xchg cli into pop xor js sub add xor mov mov cmpsb mov xchg popa loopne adc fnstsw int adc pushf xchg (bad) out sub push call jg pop outsl mov daa cli test adc outsl adc mov inc and jo xor xchg js sub and mov sub iret sub aaa mov push jmp int3 sahf into in stc repnz outsl and fdivl in cmpsl mov and xchg mov xchg lcall pop flds ds pop pop adc sub shll lcall hlt out jp mov ljmp mov lahf push inc fistpl mov mov cmp jae,pt or cmc js mov loopne mov fwait out int3 push pop adcb sub repz pop and int mov mov subl push out call xlat xchg dec rorb adc and mov imul or out mov aam adc ljmp jbe (bad) xor cmp or mov sbb push inc or adc repz pop loopne sub bound add pop push jo adc pop or mov stos jae repz pop cmp xor cmp jae mov (bad) sbb out out ret cmp fisubl lods hlt add imul cwtl loope test dec lahf dec cmp (bad) fs repnz add push jns cmpsb addl flds push mov insl cmp jbe int add mov lds push clc out fstl sti repz dec cmp cmp jbe ss sarl loope addl in adc enter data16 out push sbb scas inc sti adc sbb rorl jg pop push in mov ret test sub or inc push cmp inc dec lods popa mov icebp das out shlb movsl sbb rcll lods iret or push stc inc outsl adc or add lret imul rcrl add xchg lods cmpsl insl js push rcr mov nop lods mov push fidivrl call (bad) pusha pop aad sub pop mov insl cmp out cwtl inc mov in dec ja jle cmpsl out icebp jne,pn or into aas jge fwait sbbl adc ss pop xchg int mov push ret lea outsb iret outsl cmc shrl mov test cmc sbb mov mov jmp fcompl pop (bad) call sub sub xlat in jg xor sti or inc mov dec test jne (bad) jne xchg mov cmp aad popa push fwait pop jne cmp xchg cmp int mov sti sbb fsts mov or je test rclb insl pop aas cmpsl push or data16 loope rcll subl test pushf push mov cmpsb pop lods data16 ss mov mov pop clc cmc inc sbb inc insb int3 std adc fisub shlb xor push jl test mov sub inc xor fcmove mov insl xchg xor (bad) fisubr mov jmp test or fisub ja mov mov (bad) aaa lahf mov pop xchg dec push sub lock mov mov adc adc fst adc orl sbb ficoml fcmove mov push lock mov cmp (bad) adc inc xchg pop in jno add rcll mov pusha ds mov rcll sbb shrl mov es stos push jecxz push dec mov pop jne (bad) jle sub ret in outsl lds shlb test std pop mov sub imull test fnstsw jnp lahf loop add outsl in push inc xor lcall inc mov push pop outsb mov cltd in out das inc xorb mov fcomps (bad) gs sub pop push dec adc insl imul insb aaa jno mov arpl xor lret xchg xor ffree aaa dec test pop xor push mov or pop mov dec mov jmp icebp sub xchg jo or jp leave mov (bad) js dec sbb aas add mov cmp (bad) das push in ljmp add aas mov dec dec fimul xor clc mov sub ja sahf ss inc inc das pop add or xlat push pop cltd and sub nop rorb out mov sub sbb or adc mov dec fs or push fucomip or and xchg jmp stos or stos mov mov jg outsb jmp js rcl cmp mov setnp add mov hlt add lods push lods adc xor scas mov jecxz push mov pop aaa lds and push ret push sbb mov fimul mov xchg mov mov adcl cmp xlat movsb cltd sbb mov mov repnz imul jmp (bad) (bad) and lret sahf jp insl push fs imul push jecxz push sub dec loopne jbe dec (bad) fistpl in iret cld lahf jne call dec cmp push or adc aaa lahf dec (bad) fmull js pop (bad) mov ficompl add gs mov (bad) mov xchg xchg ds mov sub ljmp movsl (bad) and mov in sti pop jbe push cmpsl add jbe cmp jg into or int3 pop mov in push lods xlat popf fidivrl or popa mov test xchg jbe roll daa leave pop std push insl mov cmp sub mov sbb cmp mov lea ret xchg stos mov cld dec (bad) lret jmp ret fs and notl ret icebp pop pop push mov cmp outsl sbb and cmp jnp jp xchg jecxz outsl into push inc sahf subl adcb sbb push loop jns and push (bad) add sub lret inc push aas into (bad) push jecxz xchg popa insb xlat mov hlt adc or enter cmpsb idivl pop (bad) jecxz xchg and das cmpsb dec test iret mov fs in iret pusha pop mov mov aam dec mov pop sbb (bad) rcll leave or (bad) jle sarl js pop jmp pushf xchg mov or mov mov sbb sbb add rcrl aam rorl dec fnsetpm(287 imull lods (bad) adc mov jp lret mov push jne mov rclb popf pop popl test imul in cltd mov add into scas aam push and sub aam xor cmpsl sbb mov cmpsl notb jns pushf lret roll jb and push mov push rorl pop cmp in jl,pt fs (bad) sbb cmpsl xor pop add (bad) movsl sar jmp add fisttp cmp dec (bad) mov inc shll cmpsb movsl test or unpckhps insl leave insb push xor lods cmp (bad) inc mov or test dec cwtl push inc shl ret mov jne cli int mov push stos sub adc jp cmpsb fcoml sarb jb push outsl adc push test adc imul aaa jo (bad) cmpl or rolb jno faddl mov dec mov cs add xchg mov inc add aas xor push popw sub cmpsb (bad) xchg shrd ret les je stc sbb test test sub fdivrl lret das xchg jge push in jecxz repnz mov push inc shll inc loopne decl sbb jns mov xlat adc cs scas jnp out pop shr push ja imul mov or add inc lcall mov sub scas sub fisttpll lods add test pop mov testl lds jle scas out (bad) adc dec (bad) xor xor jp push cmpl test or (bad) mov mov xor jmp sbb out xlat push stc adc jno mov mov xchg aas mov add (bad) sti outsl xchg in sbb mov adcl lret xchg aas mov mov xchg pop lock cmpsb js fsubrs stc aaa mov mov push mov dec lods sub dec out inc or adc mov loope pop lahf push fild push mov cmc add mov retw scas ja (bad) testb rcr fnstenv xlat dec ret dec stc mov mov dec lcall pop mov jle adc lahf mov (bad) jae out mov adc cmp mov test jecxz int3 popf jbe insb adc mov jmp mov dec pop ret mov inc test movsl and xor fcoml adc aaa jg jo add and jecxz lret lds loopne pop cld add clc xchg sbb push iret ret movsb iret jl ret and xchg icebp imul lods adcl fisub sub movsb mov dec dec popf cmpsb jbe xchg mul ffree popf ss repnz cmp sub jl mov or loop xchg imul and xchg dec in sbb or fnstenv repz lret mov andl jno xchg push hlt stos (bad) or mov repz add in dec stos imul mov lahf das dec nop sbb ret outsl es insl cmpsb mov or in push pop loopne mov pop adc dec add mov push stos loopne imul adc or imul and inc mov cmp add push pop cmp adc mov mov sahf inc sti add xchg (bad) je bnd pop xor mov xchg call ds cmp fisttpll inc mov and add pop jae iret fcmovb pop or dec mov push pop jbe inc xlat mov fwait sbb mov (bad) mov or mov jle rcll inc data16 dec mov jae inc jl fcomps xchg popf out pop bound dec push lods adc inc jge mov dec fs or push cltd pusha loope sub sub pop out fimull in add fnop jb add dec daa hlt dec mov and fidivrl jl jo das xchg cmpsb loopne mov add movaps mov ss (bad) aam fs int insl fwait lea jnp sub cli xor jno pop push mov inc sbb repnz mov clc and pop ss and and mov inc cmpsb sub mov js sbb push mov fs mov xor lds sahf notb cld out pop lret fisubr pop mull jo or add icebp ret movsb rcll jae or stos mov cmp xchg sbb fldl fmuls push lret inc mov aas push add mov xor cmp out insb jae jae nop inc dec rclb subl jmp xor xor mov rorl in int3 mov adc cmp out jbe cli xchg push inc or stos jns push mov fwait lret lods in add imul add xchg lds sbb clc movsb daa xor in adc inc sbb dec (bad) jb dec xchg std lock clc (bad) mov fiadd jnp jle cmp mov imul repnz or mov ss in inc add sub (bad) fmull add mov jne dec mov cs add (bad) add dec (bad) mov cwtl clc nop rolb push sub sub cmpsb cmp les ja or mov inc loope fmulp (bad) lock out fcomps add popf dec inc mov xchg xchg popa push mov lret push ljmp push xchg or xchg jge and mov mov cmc cmp jnp rorl or adc pop rol lods jl inc fnstenv outsl adc inc (bad) stos loope mov inc fildll stos sbb and mov jge inc xor mov imul (bad) pop pop cmp pop stos or cmp add jg jg lret out out cmp sub sahf adc addl mov mov inc stos lock dec shll mov mov iret pop inc ja sbb jb sbb add out fdivl sbb mov jl jno (bad) xor pusha mov ljmp inc das int mov add jne cltd jp movsb cmpsl push pop bound cs xor inc xor mov popa xor (bad) (bad) jmp pushf int subl dec lcall mov jecxz push push dec add mov push into push out add lret push scas int movsl or mov fwait and sub mov fstp (bad) hlt je inc stos pop insb jne (bad) pop cmp aam pop sub add fidiv cmc icebp mov xchg aad sub add xor dec repnz (bad) in lds lcall add scas pop in push lods js sarl push sub pop js xchg jp dec pop cwtl cli daa mov in outsb hlt pop out xorl jo xlat popf ds popl mov enter ret (bad) jg outsl (bad) jle lret or fs inc test mov sbb and rcl push and mov jp jecxz sub sbb mov jbe call add cmp rcll enter lods mov (bad) jb and dec das xchg jmp inc dec or cmp lods or cld or lods sbb mov xchg xlat in push and ja iret adc dec scas xchg ljmp jne add cmp repz jo dec test sar inc sarb cmpl sbb gs mov testl loop jae bound push ds push and inc inc and bound ja adc xchg and das sub in pop movsl push fdivrl xchg repnz repnz sbb hlt hlt dec pop sbb loope push je xchg and das xor mov loop push fcmove cs data16 minps cmpsb adc lcall jmp or (bad) cmp leave cmp stos xor and roll cmp sti enter inc jmp dec inc sbb pop xchg repnz mov pop push jmp cmpsl adc adc daa push outsb dec mov dec rolb in lods loope pop mov mov mov mov mov pop push rcr push inc insb nop pop push cmp mov jmp xchg push mov in rclb push sbb pushf cmp dec inc outsl mov bound bound mov das out push outsl push mov inc mov test ja pop cli fcoms leave ret mov nop dec mov fldenv and sbb sbb add aam fmull sub imul add (bad) xchg cmp inc ljmp outsl ss dec rclb or inc mov mov or push loopne in jno jge sub andl xor cwtl jo add and test mov add cs xchg adc mov addl cld mov sbb dec pop es (bad) ds xor dec frstor adc dec es (bad) jl xchg adc scas mov mov roll mov sub ret lds outsb sub xchg lahf cmp xchg lcall imulb or xor out xchg mov test out jbe sbb pop fs (bad) lcall adcl pop movsb dec and (bad) cmp ljmp jp das out jge in sub nop outsl in add add adc jp imul imul pop push jmp push mov pop adc leave aaa pop test loopne je fsubs sub subb (bad) push int jbe lods mov adc fbstp fsubr pushf fadd inc int3 stc mov xchg mov mov in jne sub add xchg jae outsl es ficomp imul (bad) lock and dec mov rcll imul es add imul or lock mov cmpl mov xlat movsb ljmp xchg pop aas adc pop jp xor sarl push mov (bad) js bndldx and fs adc jmp in push sub stos add pop (bad) outsl lock add xchg addr16 and or add sbb in jge fstp sbb (bad) xlat pop and movsl (bad) jno stos jl sub (bad) xor lcall imul clc loop jno in gs inc (bad) fadd adc push in outsb jmp leave lods xchg int3 sub and pop lock or les (bad) sbb mov and mov cmpsl in xchg or pop jno in cmp clc cmp or outsb jp sub outsl xor push jp in cli xlat xchg nop stc fs stos pop lock cmp mov adc in pop pop incb lock xor lods (bad) xor inc mov adc incl dec add push adc movsl jmp (bad) adc push or or sbb femms sarb xor stos jae lahf pop or jl lret test stos mov sbb dec scas push mov pop dec out cmp mov (bad) imul inc leave pushw jae (bad) jae test dec in or pmulhuw xchg xchg addr16 sbb cmp sbb enter cmp sbb popf ficompl lret ja jmp push xchg dec (bad) fisubr lds inc dec test mov (bad) pushf enter pop es add mov je jae jle mov jbe stos xchg test xchg into arpl adc or fs out mov pop push cmp and popa (bad) pop lods addl aad cld mov (bad) (bad) lret pop pushf jns fwait dec and pop sbb stc scas jp imul add pop add int3 inc sbb mov push dec jbe jg out out movsl fimul imul mov lock sub (bad) xchg sub xchg movsl sbb fs hlt ficompl cmpsl xor gs sbb cmp or sub daa mov sbb and or shrb (bad) jne mov or mov shlb sti inc loop and arpl ret mov (bad) cmpsl adc xchg mov jo adc xlat add test cli mov xor aad insb gs mov fwait notl add sub in rclb ret sub pop push inc xchg or insl insl fdivs loope sub sar test or fsts inc shlb addr16 xor ja into mov inc cmp (bad) in mov int jmp cmpsl gs xchg dec dec pop push cmpsb xchg fwait je mov test les dec andb jg cmp shlb cmp mov jne notb call aas xchg addr16 mov jno pop enter push aad add jecxz sub add in cwtl and mov sbb sub popa rclb mov jg xlat xor ljmp mov sbb sti fnop nop xlat lock inc addr16 adc rorb or sarl lods rcrl mov or sbb cmp xchg or in notb mov xor cld mov inc shll mov enter imul mov test fiaddl mov test adc add push adc xor jae in push sbb adc sbb sbb adc lea sarb adc js push sahf mov pop and fadd pop push sub xor mov cwtl inc xor and (bad) insl cwtl jbe xchg lods and sub adc push jg add shlb pcmpgtb jno shr lods sbb push jp cmovge dec push push jg,pn mov mov mov nop out in in sub pop push mov (bad) (bad) xor call mov and ljmp out xor stos push test sbbl mulb xor cmp out sahf jmp dec xchg ja sbb pop sbb push xchg push xor subl or dec rcrb adc lret mov sbb (bad) sbb jb call cmc (bad) fs cmpsl scas (bad) les jns pushf movsb inc pop fwait stc dec adc xor or inc add incb xor bound mov jns addr16 mov imul insb jg loopne scas hlt add sbb add (bad) js mov cli push ds ja dec lods pushf rcll or inc add xchg sahf push or cmp ret jmp sub icebp daa add push inc or mov sbb shrl jle outsb in fist lret cmp sarl pushf (bad) mov mov ffreep ret mov or pop cs cld or cs push (bad) cmp lock add push mov loop xor pop imul leave sbb leave aas mov mov push (bad) dec and cs iret (bad) sahf mov rorl ja jge fdiv mov push std jne popf dec jmp addr16 xor dec jp les loop inc mov sbb (bad) inc mov jge repnz lods in sub adc adc ret mov addr16 jp and es out mov cmp std cwtl (bad) fwait mov iret int3 pop loop mov xor out add inc (bad) jecxz xchg sbb jmp (bad) (bad) jg push push mov movsb push cmp inc cmp out push test in cltd add popa aaa insl cmp push fimul lret add mov pushf xor mov mov lea adc sub push repz jnp cmp mov jbe mov or lea xor pop or pushf sub je sub sbbl imul mov mov and push jns es movsb sub xchg adc pop cwtl rdtsc sbb push mov shrl inc outsl (bad) inc in xchg inc pop xchg cwtl cmp add jle cmp or dec into pop test pop (bad) mov push add push push jnp sub (bad) pop in push sti mov mov cmp insb rorb push scas sbb push mov mov in popf js add cmp dec rcll mov leave mov jecxz pop js out enter jg shrb adc cmp inc mov ret pushf or inc pop push xchg test dec stos enter (bad) sbb inc or pop dec adcl inc cmp jnp xbegin lock push inc pushf fidivl popf jb or xchg inc mov leave jg lahf jne fwait je push in jns test or (bad) imul sub mov mov mov movsb adc and cmp inc sub or fild daa jae jecxz xor xchg aad (bad) cld push inc shlb inc (bad) adc or (bad) outsl fcmovnb add and xor mov pop dec (bad) mov push mov mov arpl in push or and or leave stc orl mov or and push movsl jecxz mov push adcl mov out js imul mov xchg addw sarb enter xlat int aaa cmp dec jb movsl lahf jnp sbb aaa pop push dec push rcr xchg in sbb jge push movsl (bad) mov xor add xchg idivl mulb ficom (bad) pushl data16 inc out (bad) push mov cltd ret dec mov add fstpl mov xor stc ljmp sub push or mov push sub adc push das xor mov dec jecxz mov out xchg stos pop daa push xchg and pop mov pop sub imul jge loope stos adc dec js xor in xchg cmp jae mov bound sahf xchg sub scas or rorl adc and stos inc (bad) iret iret mov pop push dec je dec test movzbl xlat imul or push fiadd jne repnz xor icebp jo mov cmp or xchg push mov jbe test xchg mov adc cmp jno mov inc xchg pop pop sti pop popl repnz or and jl mov mov testb push out xor add push and fistpl int lret fcmovnbe lret out mov out xor xchg pop loopne std and xchg mov rcl icebp out adc cmp clc test pushf stos adc mov cmpl (bad) mov (bad) or sahf gs push (bad) neg rclb test xchg mov and in pop (bad) mov movsl pop rol das shll andb std (bad) rcll out and cltd mov je lock in (bad) enter xor and aad push add out push ret sbbl mov jne (bad) jne mull cmp clc or jle dec out push popa jmp rcll sbb dec pop iret push push push mov cmp xchg dec sub push inc jmp dec je sbb pop sub pop mov loopne cmp clc fdivs scas mov mov lahf ret lret sbb in or mov sbb rolb (bad) les (bad) jp pushf les mov das (bad) test lret xchg (bad) fld lea xchg jne pop test dec cmc sbb enter add insb outsl idiv out ficomp mov aas js mov mov lret cwtl std add mov test and lds add mov ror cmp lahf mov jae cmc inc add pop and jecxz mov jae imul lods xchg in out test sbb pop dec mov int xchg sbb xchg mov (bad) xor pop pop xor push push lds insb cmp jnp and pop movsl add stc cwtl mov call loop push rcl pop nop wrmsr fisub inc xor iret dec xchg leave dec (bad) pop add and mov cmp pop push inc in or (bad) sbb mov scas jmp xor ret adc and lcall rclb mov hlt and imul cmpsl imul xchg adc inc int3 mov stos es xor inc (bad) arpl (bad) mov push orl aam adc imul pop jecxz,pt movb inc ss leave cs sbb and iret cld add pop and icebp jae cmp jg movsl iret int3 (bad) (bad) mov rorl bound push arpl mov rcr stc or mov jno jbe arpl dec out out clc je cli pop pop mov ss xchg stos (bad) pop movsb adcl ljmp fiadd cmp cmp js and cmp stc add lds add and dec clc jmp (bad) sub push ljmp (bad) aad pop cmp mov and push in int3 mov xchg lock push or mov push dec loope in rorb repnz mov jns sub sbb pop (bad) jmp ret inc lds push insl test lods xchg sub pop lods push xor into pusha adc dec ss or (bad) xchg adc daa rorb xchg dec push jae mov cmp inc test (bad) out ja push sub inc push es inc jb repnz jo and rcl xchg repnz pop push data16 sub fnstcw fwait cmp clc std sahf test popa push inc or (bad) sub xor movsb add test adc mov jg stos imul dec inc mov xchg mov mov pop pushf pop push xor sbb pop (bad) scas and inc ljmp (bad) mov les jge movsl imul adc mov push push xchg sub push and arpl pop ljmp into pusha cmp mov inc pop pop leave sub push sub xorl push add movsl add xchg dec xor push (bad) xchg push fildl (bad) xchg lea pop jno adc int and adc ljmp (bad) arpl xchg xchg xor add and rol clc jo mov les or and mov push out or push mov insb dec jmp in and ficoml dec aam and pop es test adc and or out mov fisubl adc inc inc lret jmp (bad) lcall (bad) out stos pop or (bad) int3 popf push shlb icebp aad push fsubl adc push push pop lcall test (bad) push rclb and jl push lcall loopne jne add test mov ret fbstp mov lret out xor xor stos sbb enter pop push out cmp int inc push (bad) fisubrl lea stos data16 mov jl pop in out out jns into pushf push jmp xchg les jecxz pushf je (bad) or jmp lea out push fnstenv fidivrl mov fstpt or jns sub pop pushf cs pop pop xchg push inc clc mov inc adc jmp les aam and add pop jle (bad) sahf or test addr16 add cld jnp mov shll lret push pop xchg cld pop sub push dec ss (bad) lret cmp mov popf (bad) (bad) lret jbe jl call xchg and inc out and xlat fisubr and out mov pop lods (bad) cmp out aad inc sub daa and cmp imulb pop xor push or pop push test rolb pushf imul sahf sahf or insb andb pop daa adc cmp (bad) ljmp mov test adc cmpsl add or xor or icebp dec dec loop cmp pop aas mov mov out les rolb dec dec cmp fist shrb aam mov and outsl arpl pop xchg xchg inc or xchg jne movsl pop call ss mov jne mov xlat repz push mov into mov sbb inc popf mov sbb push mov pushf dec adc jnp cmp jb das sahf bound mov and loope pop les push in pop jg lret xchg gs aas enter outsl pop xor andl mov inc iret mov out cmp and mov andl push push subl aad enter lcall pushf lods mov out jae adc sub mov sbb sub push cltd (bad) lcall sbb push mov lret pop xor mov and xor xchg mov fcompl pop loopne,pt push iret in cmp dec or repz and xchg mov mov (bad) dec inc lods fcomps dec or sbb cmpsb xchg outsb (bad) jb lock stos pop rclb call or ss (bad) lret push and bound and add jmp mull add jmp int pop lahf in sbb mov push push fwait pop mov je push jmp call adc add lea jbe inc sbb push in cmp (bad) xchg (bad) lock icebp jne popl outsl pop out int3 out dec pop insl es in add xchg inc inc (bad) fmull addr16 lds (bad) cmp lods into xor pop inc mov or jg mov cmp call jns push mov (bad) pop mov add mov int3 pop lock push mov ret adc call ljmp mov push mov add cltd aam mov pop and mov dec cli addr16 jne jmp cmp (bad) xor aaa outsb mov mov mov inc pusha fimul repz imulb outsl mov enter outsl adc or repz cmp xchg mov push xlat sbb lret js jp lahf lret add fcompl les bound mov int jnp mov cmp add and fistpl pop jo cmp jge data16 jns out mov dec xchg out mov inc cmp mov das push int cmp sahf xor jg cmp jns pop fucomi enter add leave add and popa and jl shll loop mov sbb cmp or inc jecxz mov jle jecxz mov fsubl bound out dec loop addl mov les les or mov daa (bad) mov lds mov imul mov sub pop hlt jo stos mov out jne or mov dec pop mov test cmp xchg loop jae and push mov pushf aas outsl in test mov mov inc test jns out xor stc add push fbstp jmp jo adc dec fst sbb xchg pop xchg cltd inc mov xchg cli and pop pop js pop inc sub test aas test nop inc imulb adc out test loop sbb enter insl and xor pushf xchg add and aas in xchg adc pop jb rorl push jne lods jo xchg jae mov adc ret aad jl sbb push add rcrb (bad) les xchg bound cmc push lods stos adc adc insl daa bound in fidivrl lahf sub inc scas cmp or sahf sbb sbb push dec clc mov cmp mov lea jl call and sbb (bad) dec aas xor jmp ret sub adc hlt add out sahf (bad) int3 cmpl js adc insb xchg loope stos incl inc lods jg pop jo icebp mov jl shrl (bad) sbb ret jno push insl push jo dec or cmp cmp gs pop push jl mov pop das sbb mov push leave mov jge push mov inc lret jmp fs jb mov push or mov jnp cli and nop stc sbb (bad) iret data16 lcall ds sarb je ret popf push in add movsb movl xlat mov pushf xchg jnp aam dec mov mov inc (bad) out gs jno add mov das es lea mov sbb loop mov cmp cmp xchg ret jmp or xlat fdecstp enter lea jne das js mov mov adc das xor mov daa add std lock lret sbb xor enter aas push xchg mov cmp mov push add pushf push loopne sub lret push cs xor jbe mov cmp popf out push mov xchg test push aam add popf vcvttsd2si jbe and xchg scas mov or stos push xchg sub cmpsb push and loopne loopne in ret test dec and mov push and repz xchg fnstenv imul pop mov inc or xorl and rcrb cmp mov popf shll cmpsb popf addr16 xchg sub lret ja (bad) out mov cmp sbb rol lea push xor adc fwait sbb popf cmp sbb cltd and or push xchg sti inc dec scas dec jge add test xchg xor out mov inc int push push lahf mov inc sub in sbb out out jae mov aad into (bad) int add xchg adc sub mov ret add fisubr test adc xor cmp rep (bad) or dec push pop inc loopne mov xor cmpb icebp push push fstps loope bound add cmc loopne inc fimull cmc iret jbe and test or inc mov sub pop pushf push sbb movsb push ljmp mov inc addr16 xor scas adc push mov mov jb cwtl sti idivl mov inc sbb (bad) xor sub push nop in xchg dec out pop mov cmp xor sbb pop cwtl daa test jmp mov rol dec pop data16 test inc cmp fisubr cmp stc push pop pop dec dec (bad) mov jge loopne and sub pushf pop add sbb xchg mov lds and dec data16 cmp push cmpsb mov call jnp xchg fistpl jge pop lahf out inc loop jo xor rorb outsl or out or gs inc int jae and repz leave cmp cmp and push push dec cmp aad xor push or into out repz sbb js popa push outsb stos dec shrl sub pushf dec leave mov aas xchg sub jbe popf sti push test dec in cmovle mov in cmpsb fdivr lahf xor dec ss insl mov sbb les faddl in je sahf lods dec fidivr fstpl aaa jnp shr dec jg test call (bad) or int xchg dec jns neg pop mov xchg jo xlat lock cmp scas xchg (bad) ss jge mov xor sbb imul lock in xor mov hlt pop sbb lcall gs mov jno inc xchg inc ret sbb xchg lock mov push adc (bad) jnp and jg xchg ljmp jbe jecxz sbb pop xchg addl loope cltd popf js sahf sbb jbe mov aam dec repz jmp pop jbe and addr16 mov cli adc sbb sub insl sbb xchg shll jge mov into push sbb hlt fdivl rorb and call mov jbe movsl (bad) inc std and cmp mov inc pop sti xor xchg xchg sub push fisubr je call aas mov xlat pop (bad) push xor jp fmull enter xchg inc cmp int3 fcmovnu imul hlt aaa test push int3 adc movsb cmovg push stc pushf xchg test push sarl jae adcl loopne cmpsl lock push jecxz rorl mov rol xchg pop inc jns xor cmp ror mov fwait imul hlt stc and add stos imul sbb cmp repz mov std sarl aad (bad) ss cs mov data16 sub insl aad fcmovb and test in push inc sti fbstp pop test outsl and inc in stc pop jne pop sbb xlat stos dec pop xlat sub out cmp fcomps inc pop outsb push js and insl push dec sbb test mov lds pop sub mov xchg inc das pusha push arpl add pop outsb pop jnp jg sub aam nop fwait lds add es pop mov mov and jl xchg adc inc lods cmp mov aaa push imul mov push pop pusha dec aam sbb and cmp outsb xor sahf ljmp cs mov pop int fiaddl mov xchg mov dec jecxz add aas jmp add mov out sub enter scas adc test in dec jecxz jmp xor int mov and insl jnp popl test dec cmpsb inc sbb lea mov and xor xor std cld aad in dec sbb mov fidivr addr16 popa xchg movsl mov mov jmp fwait mov adc lahf leave mov lea nop into pop das jl mov jno (bad) (bad) jb mov mov push inc sub rorl cltd es xor loop rolb insb (bad) jnp add cmp (bad) inc aad mov pusha cmp cld pop mov adc testb add pop lret cmc adc dec imul sbb inc adc lods divl mov inc or jmp icebp leave dec test (bad) roll fisubrl lret add dec add int3 mov add data16 mov ja cmp sbb inc ret xor push dec iret and ficoml cmpsb push mov adc pop popf dec clc push std push mov pop outsb or int3 mov ja imul inc sti (bad) sub into jns cwtl xchg pop out ds bound adc rcrl movsl adc insb mov cmp sbb lods add lret insl daa push adc into in xchg (bad) je lahf inc rcll sub sbb cmp outsb adc jae cli mov stc xor in pop cmc cs adc dec dec push push aaa (bad) inc fild jge std push pushf add mov fcompl pushl mov cwtl or loope push pop cmpsb test xchg (bad) cmp jmp adc adc jp (bad) cld cmpb in push cmp inc (bad) mov cmc stc push mov or jne push jl loop inc ds ljmp int xor add push dec in push nop sub pop sub dec stos adc mov xchg mov iret jb imul push sbb xlat sbb dec imul adc dec mov test addr16 jns sbb fidivrl pop sbb mov in (bad) mov and int dec shl lcall pop inc pushf scas subb sub sub and in or sbb dec xlat stos push xor pushf cwtl les inc cs sbbb (bad) iret mov test xor daa lret sub mov xchg jno sbb xchg sub sbb stos or push inc out pop xor jl sbb (bad) fucompp pop jns xchg imul xor push pop in jb cmp jl popf (bad) mov inc sbb outsl enter add mov aad cmp daa inc es fcmovb stc sbb and frstor sbb shr loopne movsl jecxz outsb adc ret pop mov (bad) xor ret mov add cmp cmp lock mov movsl shlb xor into xchg or or rcrl fisttp or inc add jno loopne add (bad) jg pop dec lcall out jle ret push scas or and lcall stc jo add inc rorl out mov test fmuls jecxz add jmp fadds dec flds adc mov repz push or fimull lahf in push fs xchg insb mov (bad) or mov loop insl push push inc arpl jg or jnp pop push loope outsb decl fsts out jae call (bad) cmp push imul repnz ret into das das push inc loop ja sbb into sbb push cmp daa mov push xor mov shlb rorl pop mov sbb fmull pop cmpsl adc inc jo lret cmp notb scas cmp pop mov sti insb in jg dec imul cmp lahf jo xchg xor sahf cmp cmp js push sbb pop cmc dec lods cmpsb int mov inc cs mov movsl gs outsb jp outsl pop push adc pop jmp push fistpll popa and xor pusha daa adc pop pop mov in cmp inc lea xor mov cmp jmp (bad) jo cltd (bad) lahf dec out test hlt xchg sub insl aad push pop ret jno mov jbe,pt mov into xchg inc stos jmp sbb inc das aam cmpsl push push into lods ljmp xlat in push dec outsb mov fidiv lret pop cmp jae lret lahf mov cmpsl mov sti in enter add jge ja dec ljmp lock xchg xchg or pop rolb es sub lock outsb cld in jecxz add jl aaa nop dec arpl int3 jmp push clc jle xor ljmp aaa pop jmp (bad) dec mov push xchg cmp ljmp jno (bad) adc ret cmc imul (bad) jo adc out jge add lds je (bad) aas inc jmp sahf xorl mov cli pop cli rcrl ret xchg popa dec out loopne cmc push test repz (bad) arpl iret sbb sbb dec add sarl mov pop std xchg sti aaa insb sub loopne mov mov cmp sub mov jne pop jp aaa imul mov rolb xor mov mov inc push das ret shl (bad) and lret xchg enter pop cli inc pop sub in or and sub dec inc adc lea pop clc pop (bad) adc loope int3 cld dec jecxz mov mov inc or mov mov pop fiaddl push pop sub sbb xor xchg lods out mov sbb daa pop jge lret push (bad) mov push lods push xor mov loope mov dec jne sti mov gs mov mov xor xchg insl fsubrl es xchg lahf pop cmpb push pop gs jmp dec sub xchg arpl and in jno mov push pop push mov fwait repnz ret stos test dec outsb inc es loopne mov push pop outsb inc in xor mov test sub call out mov f2xm1 sub fldenv rorb repnz leave fisubl in popf repz cld xchg fldenv std jl adcb call sbb adc sbb aaa idivb ret js cmpsb sarb push mov jmp pop sbb dec fisubl xchg push mov sbb cld xorl sub popa (bad) jmp add stos insb xchg test (bad) mov je je cmp fs xor (bad) ficompl clc mov mov adc adc jle mov ss xchg in pop pop ss loopne mov (bad) sarb test xchg cmp sarl push add mov and (bad) pushl jo imull and lahf push sbb stos ja xor inc inc lea dec (bad) popf test mov and xchg xchg cmp fucom dec or push shll inc lds cmpsl mov push dec sbb out add bnd push sarb pop cs push mov xchg cmp stos lahf fs cmc pop popa mov jle mov or or or das mov shl mov lcall cld enter pop or jge in dec lahf and jmp mov jg xor mov outsb add mov bound gs add lahf ret jmp scas addr16 ds mov and ret ljmp rclb sbb inc jecxz out xchg data16 inc mov inc sub jmp mov xchg icebp add outsl push jge lea icebp or enter mov adc mov arpl or or jb dec lods or jl mov or movsl ljmp (bad) xlat mov andnps push mov mov jge ficoml ret cld ljmp pop es xor xchg lods stc mov and jmp test (bad) adc sbb and jge mov push (bad) (bad) lret sub leave ljmp int fs mov sub mov inc xlat or mov jge pop inc xchg lods outsb xchg fsubl jbe pop roll adc fnstcw negl mov xor xor in pop inc jecxz in mov mov fmull dec dec popl and dec inc sbb jns idivl pop or add mov inc cmpb ljmp mov cltd jno pop js mov mov (bad) in add pop mov inc cmp call xchg mov xchg arpl int mov mov cs (bad) mov jmp add cmp bound push fistpl dec cmc jne in neg lret jge (bad) fs and lcall inc shll lret xor dec int lahf sub call xchg cwtl adc fsubs ljmp inc mov push in fisttp enter scas lcall stc repz movsl push dec xor lods dec arpl xchg xchg imul xrelease pop sub (bad) daa (bad) push xchg inc jecxz and shrb or jge mov test and push push dec int3 aaa inc sbb add insb cmp out pop and pusha test (bad) popa jbe add cmp inc cld lret (bad) jb fidivr (bad) icebp stc out jge fs fisttpll pop push sub cmpsb jnp adc out cmc pop push bound mov fdivrl jmp push outsb sub loope adc stos and in arpl mov and imul push dec movsb push push cmp mov jne imul xchg inc mull mov fisubr aad pop paddusb cmpsl jno xchg call adc lcall cmp addr16 mov hlt add xchg cmpsl mov pop jl pop (bad) xor cmp sti mov pop subb pop cltd lock dec push popa cltd ror sbb gs and pop xor pop fildll loopne shrb mov out xorb inc cmp sub xor mov into enter jnp mov mov and pusha aad inc (bad) jmp dec (bad) mov jns lods xchg lods pop and clc ds pushl movsl loope mov sub out sub cwtl jp mov jae sbbl fdivr xchg cld test mov (bad) lret sub lret test cmp fisubr sbb dec shrl mov mov xchg cmp fisubr (bad) xchg mov mov popf add pop xor cmp imul cmc cmc fmuls jmp out inc test jbe xor pusha test lods aas insl push push fldl pop jmp cld scas inc jmp jle pop push inc xchg ret fidivl leave jmp leave test mov test pop inc (bad) ljmp pmovmskb pop outsl cmp popl or cmc jmp orb or enter lock loopne sbb sub loop sub mov lret mov xchg cmp pop dec notl push icebp mov stc ror cs lret pop ss data16 add push fiadd ret andl jae add sti mov ror popa lcall mov push mov xor jno fnstcw sahf and cli cli lahf ljmp pop sahf aas dec aam and pop xor mov add js arpl loope negl into dec sbb test inc out jbe lret das bound jecxz stos or movsl cmc ret push push insl (bad) dec push mov dec push or sub push ljmp mov cmp xchg jns jns movsl daa shll and outsb rcl sub shll xchg arpl lret mov lods or sbb dec aam sub mov adc ljmp pop out push outsb mov mov cmp or rorb cltd cmp jg or test jecxz in rclb lea sbb adc cli push sti addr16 dec xchg sbb inc cmp fstps lods jp imul sahf xchg repnz jl notl ds ret lock adc pop ror loop cli popf or jno test (bad) jns popf sarl mov in enter pop addr16 dec xchg movsb arpl sbb loop xor jg and adc pop out cmc mov dec pop pop sahf in jb mov ss (bad) jno js sub adc lret xor mov cmp cmp test out mov stos pop popf adc mov mov popa (bad) jae call push push and enter sub adc rolb or lds dec adc sub int3 movsb (bad) xor adc lods xchg push xchg test pop xlat iret sbb or pusha fstpl pop xor outsl aad cmp stos lcall stc and pop out or ret mov in sub out and xchg xchg mov adc adc sti cmp xor pop mov int push add xchg mov push mov mov push popa jns ret lcall test inc adc movsl dec or aaa jae shll inc pop test aas mov jo repz inc dec mov xchg notl in sti xchg adc dec das sbb into stos mov and fwait or fld lret pop stos int mov and out ret jge popf dec ss cmp loopne sbb dec outsl cmpsb jo mov lret int3 in enter divb shr das jb sub sarl push cltd mov and push iret inc lds frstor and push outsb pop add cmpsb in and sbb and cltd fld mov mov sahf xchg mov insb push movsl ds xchg sbb add add cltd lea jmp (bad) setp ret mov mov xchg adc cmpsb push push jnp int idivl add adc xchg xor scas cmpsb mov add sbb mov mov xchg enter pop pop sti dec testb mov push xchg into cmpsl mov repnz sub stos out roll lret insb lods jmp inc mov (bad) lods js sub mull pop pop lods rcrb or aam mov pop pop and xor mov rol lcall cld lcall add mov jle aas les xchg shl jmp mov insb sti dec ret cmp cmc or jno into fwait cltd mov jmp cli or aas xor movsb jmp test lea inc push test sar jns,pn sub pushf aad pusha les and xchg jp es arpl out inc push pop nop xchg ja test cmp sbb push repnz dec sub cmc jle cld insb xchg xchg fs xchg sub test or outsb cmpsb fdivl dec xor (bad) lods aam xchg adc lds xchg or xor (bad) int sbb jbe xchg sub adc mov mov (bad) and rolb repz test mov aad cmp addb neg les fldl (bad) scas fidivl testl in and inc nop xchg nop insb mov aas or aaa std and add daa mov xor hlt fdivrs test sub loopne dec aas pop cmp dec or hlt jae push in fs loop (bad) mov inc adc push add sbb adc adc nop mov fisubl mov popa mov ss cmp inc mov js xor jb mov sub jmp dec xchg jl pop in xor arpl aas cmp jmp or sbbl lds jge cmp aad inc xchg cs jno cmpsl push repnz and cmpsl dec mov pop arpl les (bad) xchg leave jbe js sub lds mov push inc in loop xchg sub pop lea movsl iret insl enter lahf cmpsb int3 cmp add mov xchg movsb cmp jnp pop outsb idiv sbb mov mov mov fbstp mov enter jle push add push xlat leave aam add push dec jg pop imull mov push sahf inc out jl js inc pop jmp cmpsl jle xchg std sub sub ret test jg lods outsb hlt cld (bad) or jo xor xchg ljmp mov leave xlat int3 rorl jecxz mov mov xor jns add xchg arpl sbb inc (bad) mov leave sbb add inc pop and adc (bad) or cmp imul mov cmp and sbb jbe sub inc xchg lds fs pop jge notb ficoml push push pop sti aaa dec and out inc dec mov pop aas pusha jp pop icebp daa adc into roll dec ljmp out or or jecxz mov fildll xchg repz dec mov inc mov dec ss sub fs mov in sbb mov xor jmp mov (bad) mov fldt jnp xchg xchg das (bad) (bad) roll add jle pop mov cmpsb out pop adc sbb xchg sub dec aaa xchg jmp sub shrl mov jo mov cmp pop cmp ds or adc jne es cltd pop test in clc (bad) mov insl or or and pop cmpl push stos sub out push rep cmp inc clc mulb (bad) clc push pop add push loopne push adc arpl ret cmpsl imul lds sbb add pop and push dec xor inc mov dec mov jae xor (bad) iret inc pop (bad) cmpsl push std xor cltd cld mov inc or or mov into inc fxam pop sub lahf xchg pop inc sahf sti mov test mov xor xchg xor jo jmp pop jmp repz push pop shrl out sarb push adc inc xlat test push aaa insl inc add mov roll push sbb call data16 cmc adc cmpsl fwait insl xor mov outsl icebp lcall insl xchg inc cs inc mov imul lea dec jns (bad) and mov movsl out cwtl repz push call inc mov jb pusha xlat jle jne inc add sbb xor inc pop stos cmp popf scas cmpsb xchg mov fildl xor cmp xor imul xor push loop jp mov mov ret mov dec lds dec mov mov (bad) xor pop jp aas xor xor negl dec rolb mov xlat icebp jns sub outsb addr16 ds and pop xchg pop in loopne mov (bad) fisubrl sub sarl les sahf fidivl push stc ficoml xchg int3 adc jb dec pushf push pop mov shrl repnz fisubrl lahf dec xchg cmp loope call add xlat push cmp push imul sahf insl cs pop adc push mov (bad) inc les shll mov mov aaa add js inc aaa fwait push mov stos dec scas xor dec lahf xor cs pop popa cli xchg sbb scas mov sub push rep xchg jl fsubrp pop push into fs pop repz add cmp and lods in ss fnstcw scas cmpsb xor sti adc div lea jle inc pusha (bad) hlt rcrl js sub pushl scas dec sbb sub aam push push mov push lahf and push sbbb es dec rorb jge mov jmp mov and inc roll adc and jne fiaddl push dec xor xchg ret roll mov and cmp pop xchg mov std push jbe sub inc ljmp ss cmc jg pusha dec dec enter jae (bad) xor cwtl cmpsl mov mov xor sub and sub test ljmp addr16 xorl daa sub xchg add into mov andb add inc pushf jno sub fildl sti vrsqrtps pop jae mov xor sti push sbb jae xor add cmpsb test mov sbb hlt das xor leave push repz xchg pop jmp mov mov fldt inc in cld stos nop dec xchg popf mov xchg mov xor pusha pop repz js push pop lds mov push pslld adc xor mov and scas sahf lea jbe push (bad) or notl mov sub sub pop repnz push sbb push mov or mov cmp daa sub mov jp pop xor push hlt in lret mov enter lods cli add mov inc sbb pop xchg in add lds pop lds insb cmpsb xchg (bad) leave cmp sbb in adc addr16 aam lds pop pcmpeqd cmp lret imul cmpsl clc subb movsb sbb je mov stos push cmc test dec cmp push insl jl (bad) std pop rcrb insl leave adc sub xor mov xor adc je and fistpl sti das mov pop inc xchg hlt in lahf clc fwait mov xchg loopne mov in sub movsb in in dec cmp test pop or and in (bad) jae xor jns cwtl sti in cmp sub frstor in leave stos lods xchg push inc fldl stos les or sahf cmp sbb xchg dec in mov pusha insl sub inc mov es aas outsb or mov pop data16 in xchg cmp mov push (bad) pop repnz mov adc cld add (bad) dec (bad) jp ja mull in nop es lods mov lea icebp das cli cmp scas push inc pop xorl xchg inc shll sti mov mov and xchg rclb cmp outsl or mov (bad) cmc sbb (bad) cmpsb cmp repnz cmp int pop fiadd out and push decl xor enter mov inc dec mov roll mul jae int stos jge mov cmpb (bad) jno mov xlat mov sub cmp andl dec jae jge mov jns mov xor sub jne aad clc js or mov cmp add inc mov inc sbb or adc sbb fistpl outsl inc imul sub jge cli imul stos lahf lahf pop mov pushf movsb and mov out push dec sti das xlat sbb popf fildll push jbe push test in pop sarb pusha add cld repnz add xchg and rcrb mov aad arpl aaa pop dec sbb out cmp or push add jecxz dec pop mulb xchg or test push pop push push or pusha sarl mov inc shll lret cli rolb mov push sbb lock inc jbe push imul xor popf push fisubrl sbb data16 dec push (bad) mov mov sbb mov xlat test xor mov aad jns pop mov sub lret cmp fcomip sub in (bad) cli out mov sub dec adc lods pushl cmpsl fdivrl jo push cli (bad) mov sti idivl cmpsb test add and cmpsl fsubl lock jbe lcall loope std xchg pusha sub inc iret cmpsl or push push popa jecxz leave shlb lock mov test xchg sub sarb leave mov cmp jl adc mov mov lock loopne mov add dec cmp dec idivl outsl jbe lods cmp in stc mov pop lock enter adc roll (bad) sti xor mov arpl jnp jb pop jecxz or lret pop cmp cmp jae nop movsl or pop mov sbb addr16 and sbb and mov iret scas (bad) add push jne lret (bad) pop stos lcall (bad) xchg dec cwtl adcl jbe push ja lds test push and add movsl xchg sub loope sti push aam test sub (bad) jg cmp cmp or call add dec out pop jb sti loop leave sub jne into xor ss sbb lea jmp das scas add push xor mov and xchg pop daa (bad) xor dec into xchg pop lret jns scas sbb ja leave (bad) and aam andl fsubl sbb jp clc and lcall pushl enter push lea mov and gs (bad) xchg jp lock xor aad and push adc gs or dec dec sbb jns (bad) mov mov jle data16 test dec and daa cmpsl lret shll xor out lods js,pn sahf mov rcr inc pop xchg movsb jp aad loop mov outsb cmp (bad) lret outsl xor cmp jl push mov push cli ret cmc mov lahf aam add add pop out nop sub jge cmp loop fldcw adc arpl xlat insl xchg das add shl lret setle (bad) lcall ret adc adc mov adc xchg xor inc insl iret cli int dec sub (bad) pop icebp inc mov sbb inc mov (bad) mov test pop dec mov cld jae jb,pn mov mov pop sbb cwtl flds aam dec sahf add add push sub std cmp in ror out dec out test jb jbe mov dec jle in lock in das adc jecxz cld or or xor loopne imul mov mov fidiv ret fisttpl fmulp dec sahf (bad) je cmpsl ror leave mov sub aaa and cli mov mov xchg addr16 pop xor sub adc loope test movsl mov notl cmp test ret out cmp mov or mov test pop sbb xchg xchg cmp push shrb insb jns rorl aas mov pop out fs dec or dec (bad) mov adc loop pop sbb stc pushf in adc into mov lret fild sbbl icebp pusha fwait and xchg xchg call je lds add int3 scas jecxz fwait lock movsl cwtl cltd or mov out call push add test jnp dec or pop mov insl dec bndldx or sbb pushf flds xlat mov mov sub xor cli decb adc add push aas scas or fdivrl mov mov shrl mov or pop stos test add popa xchg fdivrp je pop add arpl cmp xchg js aam js sarl pop fisub testl fdiv and jge lea rcrb mov inc sbb aam jl xor cs pop das scas int add fs xchg (bad) and jg xor mov sbb adc mov xor or insb inc movsb sbb psubsw test jmp and push push in scas fs aaa cwtl xor mov insb add insl xor inc enter pop push push ds inc sbb imul sub xchg dec rcll je xchg loope ret and outsb cmp mov push sub pusha shll push or repz push scas lahf pop and leave or mov data16 pop out aas les inc std mov in into xchg pop clc popf mov cmp xchg adc rep in (bad) mov es mov inc inc addr16 nop ds push jne rolb mov push sbb push in in adc in cs out lret rcr sub mov jmp xor cld mov (bad) pop icebp sahf in in pop adc push xchg pop jecxz pusha mov push pop jns sub push fmull je sub jae (bad) jbe out fbld pop pop out jno sbb test out mov or jbe and (bad) out or xlat ficompl fs jle andb scas pop outsb lret cltd mov mov mov loop add cmpsb fisub rcrb data16 shl dec pop test rorl in call mov aam or mov lods inc lods gs arpl inc js mov stc dec sbb ss loope push xor stos add or ljmp dec ljmp mov cmp out or les (bad) hlt scas cmp pop es sbb insl dec pop mov repnz hlt fwait ret or xor popf imul xor pop mov adc xchg sub mov jl movsb push outsb rorl lods js adc cmp out mov lock jmp add mov cmp aam mov jp inc xchg push adc imull stos mov xchg movsl lcall and aad adcb fidivl xadd addr16 adc lea (bad) faddl xchg and inc in or lods adc push sbb mov mov mov adc mov daa mov mov test scas popf fsts sti mov mov jns sbb loop xchg rcll (bad) push dec pop jge ret inc xor jno cmpsb cmp loopne fdivrp mov repnz and jle in loop mov mov adc sti data16 or pop sub out push push dec fadd (bad) sti lea (bad) jle adc out lahf pop les in js mov test or jb mov popa xlat xor dec push and mov jae xchg mov jle mov (bad) xor dec jae scas jge sub popf cmpl adc xlat add sbb mov in pop (bad) push inc mov cld mov fisubr push jb lea mov call or pop test push fdivs mov test in cs (bad) stc sti mov sub xchg push ljmp mov push add sbbl xchg mov mov pop arpl inc pop or pushf fldenv iret xchg sbb jmp dec push mov insb adc hlt int3 cs jbe adc sub ds mov aaa sub ljmp fwait outsl fisttpl lock dec repz lods cmp jb mov xchg fmuls mov lret into or lds add sbb pop dec stos ja xchg rcr sub rcll das add xchg arpl pop jecxz test out daa jmp sarb mov push sbb cmp into loope add dec pop fidivrl stos fldl push test inc loope sti pop ds cmp adc xrelease xchg (bad) (bad) cmc pop cmp and aad loope or inc loope inc insl repnz xchg cmp pop mov mov test pop inc addr16 pop repz out add leave mov imul jecxz loop xor loopne mov mov sub fdivr dec or bound lcall out popf inc ret into mov inc popf (bad) or in out mov data16 mov push inc pop out jb cmp jo movsl push loop in or (bad) pushf mov dec lods ret adc stos cmpps jp xchg pusha test insl addl push mov movsl dec jnp movsl or movsl cmp adc jg dec outsl (bad) cmp inc (bad) xchg inc lods (bad) sti adc xchg add std sbb sub push sbb xchg insl fdivl dec lahf pop inc or lds pop push daa scas push pop dec scas mov jmp inc dec in sbb jecxz dec push loope cmc push das outsl mov and (bad) cmp cmp push ret inc sbb fildll adc insl cmpsb xchg xor lea add sbbl cmp mov loopne xchg xchg xchg push mov and inc cmp ret fisttpl loop inc inc xor aaa (bad) lcall fstps xchg (bad) repnz dec push idivb xor popf arpl adc roll dec iret push jecxz fisttpll push sub push mov mov scas or sbb int into movsb fnstsw es test (bad) in mov and scas (bad) (bad) lds jmp mov adc pop push lcall insb adc sub and scas and add jp pop add scas mov lea adc idivl das and jae dec add pop mov jl mov pop addb das ret icebp pushf push pop scas (bad) lahf outsl xchg sub push push xor shlb mov lcall adc cmpsl (bad) imul jnp aaa sub out fidivr orb push jle out xchg popf jns mov sahf push cmpsb or in jns lods fucom stos sahf int lcall dec std outsb adc repnz dec sbbl and out cs inc inc sub hlt sub cmp stos and movsl psrlw xchg xchg test pop fs lret loop mul fs outsl icebp mov xor pusha sbb repnz ficoml or cmpb xchg cmp dec ret (bad) sbb mov push dec stos push dec pusha sub js movsl adc bound mov cmpsb xchg loopne jae mov les mov pushf xor bound xor lret cmp and ret pop and lahf xchg sahf push sub cmp jns mov orl sbb pop xchg test pop ljmp jle cmp mov mov jp mov (bad) int hlt out test xor cwtl ficoml mov repz rolb int3 mov enter push mov stc mov and out inc sub imul fstpl and (bad) mov jne cmpsb aad jl fiaddl es test js std inc inc xchg sbb cmp (bad) aaa fistpll mov adcb sahf xchg mov gs sbb popa mov cld ja cs movsl rcr mov pop cmp push nop and roll shlb aas push mov jne sbb sub pop rorb xchg stos test fcoml ret sti mov pushf add mov xchg daa scas inc fstps dec mov shl inc (bad) adc pop fldl xchg jo push (bad) insl insb mov jae mov cmp xchg das into aaa (bad) dec sub insl add inc jmp xchg inc jns push inc iret adc (bad) jle push adc or pop out lret mov (bad) inc out outsl push jge dec iret loop xlat out sub xchg cmp out jns arpl das bound int3 xchg popf jne into das insb xor pop (bad) aad or dec int3 cmp pop mov xchg aaa pop (bad) lods adc sahf sbb movsb xlat enter repz leave test inc adc int sub dec out les lcall nop cmp push mov fwait inc mov jg cmp outsb std outsb test xchg sbb adc lock outsl std sbbl ret out inc mov repz mov cmp xchg and dec loopne add sub xlat xorb mov fldcw clc test daa daa lods jb stos and scas jno sub or (bad) movsb push and dec push arpl dec pop pop cmpsb js mov jl pop mov repnz adc sbb xchg scas push dec xchg outsb push scas add cmp ljmp pushf dec jmp mov lods pop bound shl call or stos stc xor pop inc jno jbe dec pop notb loope pop outsl inc pop fwait repnz dec movsl sbb xchg push test pop das xchg dec push sbb adc xor or adc pop mov cmp outsb js mov insb cmp movsb pop adc add push sbb xchg add inc mov insb daa adc xchg fdivrs push mov icebp and pop cmpsb fucom icebp inc outsl mov call jp cmp jle pop xchg cmp xlat push lods shll loope xor ret std je inc fcoms push jae in jb inc dec ret mov pop jp pusha lods jmp push push mov cld sbb cld int3 outsl std dec lcall sti mov jns add lcall dec les vpavgw ds cmp les jb in ror push jmp inc pop push mov dec xchg lret pushf sub xchg ja sbb arpl cmp loop jge lcall push push (bad) dec xlat or xor rorb sbb sub arpl adc repz lcall push rcrb pop faddl dec loopne addl and nop or out inc scas pop sbb scas sbb inc mov add int mov pop push xchg push cs js arpl xor add nop int3 push mov or ftst enter push leave popf and out mov mov out mov int sub xor loopne out inc and ret lds aam and jbe int jp xchg sub (bad) int3 mov pop jne push inc les mov sub xchg nop hlt out sbbb clc pop lods test cmp cmpsl aaa repnz shr or aaa test inc (bad) sub xor (bad) leave cmpsb inc fidivrl cmp xor jae xchg mov loope pop sbb adc cli xchg ljmp lret popa popa stc cwtl mov and mov repnz cmp rcrl cmpsb and (bad) stc mov ds pop aad (bad) ds lods aaa test test aaa push mov fadds xchg lahf add (bad) clc add cmp loope bound xor in add ds push std add (bad) ror cmp jmp mov in enter xchg or xor xor jmp lods xchg pop pop pop sbb mov and add outsb in xchg fbld lcall xchg add xor insb ret xlat jge xchg mov mov mov adcl sbb and mov cld (bad) in (bad) in lock fimull push add ret mov xchg call shrb push mov jae cwtl aas and jne pop sbb gs cltd cmp mov push int3 pop mov aas xlat mov push cmp fiadd lret ret lods or popf out cmp adc push inc jge mov xorl fnstcw pusha xchg icebp cmpsl pop fnsave jno sarl shl into cmp jp mov pop inc xchg jle pop dec lcall arpl jge (bad) lods push fucom mov or lcall inc iret in mov iret cwtl ljmp xor test pop jg (bad) mov lcall push fdivrs cmpsl mov test notb jae mov out xchg cltd movsl pop arpl xchg inc jmp sbb cmp aad lcall cmpsb and test and stos cmpb ret aad sub nop sub dec xchg xchg pop das jae scas xchg inc repnz rcrl add aas sbb lock add mov (bad) cli or sub ror test bound lds (bad) cltd push add cmp or xor add push ret stos mov fs (bad) inc push dec ret cmp (bad) dec lret lods lahf mov mov mov mov ror stc fidiv in int inc sbb mov incl repz clc (bad) in cltd add daa cmc aad sub xor fisttpl out ljmp xor imul clc xor add inc lret cs cmp jb add fcompl pop and iret outsl ret out scas jle mov push sbb pop jae imul push push lods xchg lret loop sbb or push stos in sbb xor lods and and xor push lods mov sarb imul jmp sbb movsb adcb cli dec imulb fild dec and add jecxz aam lock outsb rcl in push mov ret push out pop lret xor inc sbb stos repz mov jns outsb or jb fnsave bound jno mov icebp ja popa pop shll (bad) mov aas cltd and and dec xor mov out add ret test and in xchg jnp sbb jo mov cmp inc in fldt js (bad) int push data16 push insb test push pop jl add cmp int3 pop and jp sub scas loop imul add mov push lock cmp shrl test fldt dec ljmp inc (bad) repnz pop xor pusha fwait push sar imul inc jns cmp loope (bad) jb bound lock int3 dec insb pushf daa popl pop out out shrl das mov jbe fisttpll insb jae jno jns push ds arpl xor into xchg xchg or jae xchg (bad) arpl cmp pop push ljmp enter sub add adc int cmpsl push push aas pusha mov and push call movsl jle mov dec add ret stos cltd pop mov dec inc mov test push faddp sbb push jo cmc pusha push push add mov lods addr16 sub mov into push cmp mov scas fidivrl adc sbb adc add in pop push xor popa or insb push mov adc jae in pop cmp adc iret sarl int mov xchg pop pop push addr16 jmp push ret mov and mov lret cmp shrb dec cli mov jb lret inc inc and fbld lock pop arpl fsub and fimul push ja sti loop enter pop adc out sbb push lahf cmp (bad) jbe push lahf dec pop (bad) test inc aad xchg aad jle push add lret (bad) lcall jno rorb xchg fstpl mov cmpsb sbb cmp jge mov mov dec lret or flds aad mov (bad) pop outsb aaa inc cmp clc cmpsb pushf (bad) fsubrp cmpsb pop jb pop xchg cmp xchg es rcrl data16 push in xchg (bad) hlt xchg pop lds mov clc inc mov add dec sub loop adc mov xor loopne push into jp jl pop adc mov ja bound sbb outsb jmp xchg loopne fnop sbb es pusha lock in loopne stos push jnp fiaddl mull mov xor inc popf orb iret mov pop loopne lea xchg clc xchg push imul sbbl cmp (bad) popa mov mov lods sbb js lods mov mov dec in pop inc xchg ds mov jl cli push inc sub imul lret push movsl lret inc in bound adc mov test call inc jmp mov jns cmpb ds in pop fdivrl and fisub inc mov (bad) hlt sbbl cmp in sti and insb ds mov or (bad) aad jge mov subl fildll mov jge,pt cwtl inc outsb mov cmp popf in sarl fiaddl mov dec cmp cld xor lret (bad) in push jb fidivr cs mov (bad) add pop repnz lcall mov (bad) xlat cmpsl add pop push mov fcmove mov push xchg dec not pop aad test inc push cmp pop add add sub dec xor dec xor cmc push (bad) mov xlat mov push cmpsl (bad) mov iret fnstcw sbb ja jae adc repnz push mov (bad) cmpsl xchg sub sub lods scas fcompl jp pusha pusha jmp es outsb and jge inc add dec pop jne jbe lret (bad) jae out mov xor adc adcl cmp test fisttpll and ja fsubr int3 lock andl xchg mov jge xchg add sbbb iret xor subl xor mov mov xor mov jg mov (bad) fcoms xor xor sub add cmp sub fucomp push fwait xor and push push mov or add or inc dec or xchg sahf sti scas mov jnp shll mov (bad) cltd sarl fst cltd ret cmpsb xchg mov ret popa lret rorw fiadd loopne pop adc pop and xor sbb xchg xchg pop (bad) ficoml test push xlat xor in pop mov gs (bad) cwtl xor std adc sub and outsl fiaddl sub cmp mov and dec fnsave addl je inc jb sti push test pop in aas outsb cmp sub adc lds mov loope mov mov rcll lods into sub pop xor test mov call andl mov insb rolb fdivr mov ret jg icebp arpl xchg and imul and and in sub mov jae imul test mov mov push movsb testb mov inc xchg test imul lcall xor sub cwtl neg call std shrl sbb hlt arpl (bad) cmp mov fsubs test iret les hlt dec pop jbe mov sub jns dec int3 jge mov mov aaa cmp repnz in xor imul call dec sbb add xor test mov into adc push (bad) mov aas xchg add (bad) outsb out ja shlb jmp cmc inc adc cmp pop ja mov mov mov xor pop jnp sub test or xor sub mov cmpsb scas or imul daa cltd push jge outsl jmp orb mov dec call lds and ret lret test pop ss imull jp ss cltd nop mov mov rcll pushf jg aam ds cmp jnp (bad) in arpl mov or clc das aas mov xor sbb mov cwtl dec adc dec sub add scas loopne pop clc or pushf inc ljmp dec adc icebp cmp xor sbb popf (bad) cmp fildll cmpsb (bad) addb add xchg fldcw clc aam in jp pusha iret push jb sbb test testb sbb add das xor dec mov js fwait outsl fisubr sbb jbe inc outsl or (bad) push out loop repz mov mov jmp (bad) jo adc adc rolb xor sbb pop repnz icebp xchg push jg dec adc push jg mov mov dec sbb cs rolb aam jp dec movb sub push lods and fcmovnbe divl jecxz ljmp xchg jns adc hlt inc hlt rorl pop sti lcall jp jbe mov inc daa insl sbb and mov aas xchg aam push xchg push and mov mov sbb sbb call xor sub bound jns sub xor adc push jbe imul call and pop pop ficoml cli lock mov dec or pop xlat mov inc sub jecxz (bad) pop daa shll cmp sbb push icebp adc jbe pop inc push repz xor pop jae ljmp cli fmull jp mov movsb sbb cs add dec mov add repnz xchg cltd fbld std and pop or sbb stc mov cmp scas sbb inc call xchg sbb pop sub dec jnp xor xchg sbb mov xor mov (bad) neg xor mov mov adc adc les dec xchg inc das stc movl xchg pusha aam adcl repz test test sub out xor dec pusha sbb int3 ret jne ljmp sbb and fwait scas jae mov (bad) test sbb sbb std inc add jl pop call and jmp lret les inc mov pop aas and ljmp sbb adc mov mov pop inc leave in xchg popf adc cmc mov dec dec enter sub loop push xor push sbb bound ja js pop xchg adc lcall loopne push lods nop or (bad) les jae mov push push imul cmp mov ret out mov decl rol add insl adc rorl mov mov xchg jg adc jg xor movl cmc cmp jmp je push imul loope sub inc xchg leave push or push or sbb popf dec fldcw inc das das mov push and test or xchg jno mov and (bad) lret adc insl jb cwtl mov xor fisttpll sub stc jmp movsb fldcw cmp loopne ss cli in mov sbb jl pop aad ret dec or daa outsb imul xor mov movsb mov jno dec lahf in roll mov fadds ja sub push (bad) test sbb inc hlt ss push adc (bad) jno or cmc jle or push scas in nop dec adc aam or sbb pop xchg add push push push dec fcomps out inc cmp popa push daa rcrb das mov out lea xlat sbb jp add or addr16 xor xor rcl out jle popa inc fiadd scas and jne int nop mov sbb fidivr sub sub pop les add fbld call xor jp dec pop cs adc or mov xchg xor dec inc lock les push mov or out call pushf push lods push fiaddl dec test xchg adc (bad) pop mov cwtl dec cmp cmp mov js sbb scas mov pop xchg push outsb jp push push test mov sbb dec sub and std (bad) xchg cmp (bad) lock lea xor mov jb fistpll mov sahf das adc pop pop mov adc iret add aad inc sahf sahf mul pop lcall (bad) imul mov mov icebp inc mov mov sti sbb inc lds lcall dec mov popf inc mov gs shl sub sbb jno repnz test test fiadd add sub xchg inc icebp cmp dec mov or dec lret fmulp xchg mov or or mov clc (bad) xchg pusha cmp dec pop adc pop xor jb inc stos sahf fldcw pop dec or jg sub fwait data16 scas inc mov sbb shll dec mov xor daa fcomi mov ret fsubl sarb or push stos dec aaa or pushf push xchg push cmp and jl mov nop push frstor adc in loop or pusha xor sub fwait adc sub js ss mov inc jns inc adc scas fild nop ljmp xor mov rol ficoml iret mov ss hlt loopne cmpsl je pop sub and mov ja or sbb push xchg adc mov aad (bad) lret (bad) push jbe aas aas arpl sbb push cld xchg rol sub divl lods sbb add adc pop imul (bad) jb (bad) and (bad) insl sti or test imul lods mov add movsl inc mov or sbbl sub add scas je sub or push xchg data16 mov mov xchg dec subl and test ljmp push outsl add jno push lods pop dec (bad) out (bad) (bad) mov push push imul push clc std cmpsb mov out orl inc jno (bad) popf dec push cmp mov lahf mov mov aas out or mov (bad) and or cmp mov push out jp inc clc sub aas xchg mov jmp jno mov ret test or test cmp xor (bad) lret pop insl push jecxz inc xchg fstp mov mov loopne imul sti inc sub (bad) and clc jnp loopne or ja adc (bad) adc fmull imul gs push imul pop daa pop cmp mov ja imul xor insl xor pop pop add insb movsb (bad) daa ret jecxz pop jne inc pop (bad) jp xchg sbb adc les in into iret jae call jp,pt dec push jle enter add rolb xor jl cmpsb add fwait cmpsb ret mov and sub cmp jo inc dec loope xlat and adc jecxz (bad) push (bad) sahf xor mov push inc fcoms adc shll add repnz and cmp imul sub inc cwtl push in outsb push cmp dec lods stos jb xchg lods (bad) (bad) enter jne fbstp imul inc (bad) mov mov mov fmull int aad pop into cmpsl ss lds out add mov add mov hlt xchg dec mov lret mov adc stos test cmpsb mov sbb adc add push mov cltd stos sbb xor in aad fs cli pop jge mov sbb jmp jecxz movsl dec or adc cmp inc into jb sbb insb mov xor in mov cmp mov xchg jbe ds pusha fsubrl add leave in push inc out xchg jmp xchg and pop adc xor es nop icebp test pushf insb add outsb and and push nop in xchg data16 lret sub jno shr and ficom push pop pop sub call mov jle test into and dec mov pop adc dec add lock loope repz int3 jg adc xchg push mov inc inc lock cmp sub (bad) sub push nop dec sti sub push out popf je movsl call into add fmull push int fildl xchg stc (bad) mov fdiv icebp stos inc scas lds xor rolb push push cmp iret mov add mov xchg fwait cmpxchg pop mov loopne xchg pop das sub adc dec lret and sbb and xchg ret cmp adc push mov nop and and mov test or xchg push pop repz loope imul test cmp add rcrl or add jnp cmpsl jle sbb cltd jb inc push cmp add and insl mov rcll xlat (bad) pop (bad) ja (bad) sbb sarl out push mov mov push pop loopne push rcrb adc cwtl (bad) mov pop loope dec arpl out mov push daa fstps xchg xor xchg and mov mov push fldenv sti icebp add popa pop mov inc cli gs sti shrl push or add xchg cmp push sbbl mov aad and mov ret lcall cmp lret into (bad) leave mov inc in hlt imul inc mov dec cmp pushf jl mov push xchg and fldcw loope lret jp clc jg orb je movsb (bad) stc ljmp mov movsl mov jg out push push pop adc xchg sar mov inc lret repnz jne scas jp push jns cmp (bad) repnz test sahf ffreep popf adc loop add test pop daa mov pusha jecxz cmp sbb rolb dec cmp ret (bad) mov aam dec mov ret (bad) mov loopne jno dec push push es jo (bad) jecxz mov popf int or jno insl (bad) push and jge dec cmpsb arpl mov xchg sarl bound test aas xchg pop insl add push sub lret loope fs (bad) pop xlat adc arpl je adc fisub fwait sbb cmpsb fdiv int3 dec sbb rorb dec mov adc xor jo hlt mov xor dec loopne bound inc jecxz out jecxz and jbe push nop call insb outsb orl in mov cmp femms jecxz and test mov cmp pop sub pop arpl jp adc jle stos enter xchg les (bad) (bad) ret push pop and (bad) mov mov std mov stc mov clc negb stos lahf add fstp sbb inc mov or inc mov rorb xchg mov mov mov cli add inc (bad) nop je mov mov adc ror iret jnp jge push fisubrl imul (bad) cmc mov test add cmp xor movsb outsl sbb enter push and inc lfs shrb ret and xchg jnp cmpb dec pop pushf fisttpll xchg adc out (bad) lods and arpl int3 sbb cld pushf jae lahf popa cli call insl test and mov cmp or fmull enter sbb (bad) out stc cwtl ret dec sub loopne dec jnp sub pushf dec pop jl mov mov mov pop push xor mov shrl (bad) xor jae jg xchg or push inc and and jns mov mov push inc mov das cli ds iret cli je ffree inc cli xor int pop in xchg mov mov mov lock or outsl pop loopne push into xor xor test push loop icebp rol outsb xlat inc mov pop add cmpsl stos jb pop adc sbb sub cltd ja lret and bnd adc out or jne stos fisubl inc jle xchg push shrl ss bound movsb xor pop iret cmpsl or clc (bad) lret inc mov or add sbb imul adc insb mov add arpl sbb jbe pop stos mov jmp out testb mov das mov and add cwtl cli loop and jno insb das or sbb cmpsb int3 test insb aaa jno jmp nop jle in test lret jne inc popa scas in sub fs mov shll adc mov jg add pop out clc pusha jge or rclb adc and pop fs cli out sub jge jnp imul xchg ljmp loop ffree jmp pop out pop inc or dec cmp xor test icebp adc cmc mov adc sbb fidivr (bad) sbb int3 cmp and inc mov mul lret sub pop mov out pop sub es test ret stos sub push cmpsl mov adc sub rcll shlb cwtl arpl insb lds xchg pop rcrl je mov cmpsl xchg mov hlt lret insb ret jecxz pop aad pushf je jo in inc (bad) jp mov push int3 inc leave jb mov dec imul out jbe hlt pop fs aaa rorl outsl push adc lods (bad) (bad) xchg aam adc scas (bad) xchg gs aas rorb outsl xlat popa jge nopl jmp cwtl insl mov mov cmp inc (bad) xor jmp pop and dec xchg xlat imul lahf adc sbb popf mov negl push jb test sbb push cltd (bad) testb dec or jl lea repnz push xchg inc adc outsb mov xor jecxz mov cltd lcall push cmpsl mov add xor cmp mov xorl add out or sbb push outsl jb cmp (bad) mov cmp int (bad) lea fbld lret pusha mov sbb dec pop insb cmpsl push push xchg sti mov add mov shlb nop stos inc repnz jno inc insl adc outsb es add popf test sti inc in jae test shl jle gs adc out or icebp les nop add repnz add mov inc leave inc shr (bad) mov or addb sub mov fxch cmp xor mov xchg (bad) negb jle cltd xor (bad) mov push aam inc push jg test (bad) push js sbb test scas mov leave or mov and jmp insb sbb add sub dec ljmp add test arpl mov cmp mov push adc push add mov cltd inc adc rclb test ljmp int3 lods add scas sbb (bad) (bad) xlat fsts or mov aad test and and mov or ss inc jp adc xlat cltd cmp push hlt aad fmuls imul sbb sahf out out movsb int lar adc dec mov arpl ret and sub orl std cmp stos inc popf mov xchg cmpsb pushf imul or add (bad) push pop cmp rcl std and push mov sarl mov out xchg ficom test sahf sub mov mov insl jb cmp xor fnsave enter shll adc jg das and cmpl push mov or and add mov pop out pop add scas pop ds enter xchg iret jmp int3 mov fstpl shrb xchg les ds push shrb jle leave stc xchg cmp sub mov rclb or sub int cmpsl movsb or (bad) icebp add push ret mov and stos xchg jae inc ljmp mov jge sarb xchg ja mov std push xchg mov adc and mov sbb xchg je in aas nop jnp and adc inc adc jle sbb jno or divl sub rol js in xor cmc adc cmp aaa ss jns call test iret inc les pop adc pop xchg cmpsb call or js sub adc rcll scas sarl pop sbb jo push aaa push mov gs dec shl inc cmp sub (bad) inc rorb inc pop pop es fmull pop ss fsubl mov stos xchg int mov loop lods adc sub icebp iret inc push adc das adcl push add sbb sbb and aad jns pop add push pop imul and shlb mov mov nop fild stos jbe mov or adc push sbb into fnstsw repz stos pop out leave or fildl repz xlat es gs jecxz je push sub mov and pop idiv cmp mov icebp mov dec mov mov scas adc push adc lret test push popa int sbb cmp cmp test jecxz fstps push xchg pop xchg or sub mov rcl or dec mov movsl loopne and roll ror inc lcall in jae or iret push or jecxz out jmp divl fiaddl push rolb punpckldq pop mov mov sub jb stos jns lds or mov cld in (bad) and jns xor cmp push mov add (bad) idiv mov adc dec insl rolb mov imul je stos mov push cmp dec xchg jg test std divl insl cs cmpl or cmpsb sbb aad test outsl arpl inc xlat pop jmp adc pop psllq lcall xchg jle inc js iret fnstcw ret jmp iret ds imul adcb sti sub adc sub mov aas nop jg nop movsb rcl out add cmp adc cwtl push iret xor pop mov and addr16 pop sarl jne repnz insb add int cmp pop mov inc cmp mov sbb out ret mov frstpm(287 out xor adc and add pop lds or daa imul lret mov mov scas mov xor add roll sbb jnp repz and cmp adc cmp or or in sub sub loop push pop popf mov sub rol popa pop sbb dec sub scas pop ret push int3 pop and int3 push or in pusha out aam pop insl push xor decb rolb jge cmpsb jbe (bad) out jl idivb iret sti or lock add loop fwait inc xchg jl mov inc jbe cmp rcrl or inc (bad) mov gs test cwtl lds ja idivb mov adc cmpsb sbb cs jbe stc popf push jae and add cmp test mov xor lock inc mov push xchg pop xchg dec and fistl mov out mov insl adc mov movsl imul iret push mov xor jbe pop pop loop xor jne add ror jp insb ss imull iret xchg cmc xchg push ljmp dec cmpsb pop sbb sub push mov xchg pop test pop (bad) fisubl mov (bad) shr mov mov ror add cmpsl lahf jl loope insl out pop out lods (bad) ja and vpmulhuw movsl lock ja pop fwait test aas adc fsubl daa mov lods xchg xchg js (bad) data16 out mov add (bad) (bad) (bad) ret pop fsts loop cmpsl shll cmp gs jne mov sub xchg xchg mov std test popf sub or sub jo testl sbb dec inc js (bad) push lcall pusha sub jbe xor jle xor mov dec push xchg fldcw jbe icebp mov adc imul aaa loope mov aaa xlat pushf mov fsubrs and mov stc mov out push mov (bad) xor loop add cmp sahf mov mov push xor sub xor mov aam pop stos clc addr16 dec cmpl inc mov or call outsl call lock cmpl pop (bad) or std jl inc push mov xor lret mov or mov aam in inc pop sahf aas movsl mov add add in popa xor lock pop (bad) ss pop lret mov scas xchg mov cld js fsubs roll stos push rclb cli cs gs push loopne inc push adc sarl adc add jae pushf xchg out sub bt mov movsb icebp xchg jo inc xchg stc fsts mov or sti and jae std adc dec pop mov xchg iret sbb jle adc in adc mov xchg nop adc or (bad) icebp mov pusha cmpsl imul push pop lods cmpsb lahf test ljmp cmp sbb adc mov and dec cmp (bad) mov fsubr xchg push fadd sbb sub aaa mov stos or sbb mov sbb cmc cmp pushf out cmp loopne orl sbb rol loop adc jg lret or inc lods test in lret rolb mov test cmp push and loopne pop fnstcw dec ds imul movsb jne ret icebp idivb lds in cli mov packuswb cli ljmp xor adc inc imul jl push lods cli pop inc rcl dec xchg xor mov pusha cwtl xlat ds rcrb fucomip and divb jae mov (bad) dec gs pushf (bad) clc movsl jno sbb dec push mov outsl push or mov cmp loop ret or les mov into aaa sbb and dec syscall jae movsb adc inc pop mov dec jno lock inc push imulb (bad) dec xorl push out fildll push push push xchg bound xchg push add lahf loope sbb ret bound cmp pop out mov mov add cmpsb add ja mov or loope or rcl out lea (bad) push les loopne pusha cmpsb xchg mov pop shrb cmp shrb sar fcomip jecxz lea and push sub pushf sub push out fdivrp dec jns or jg adc sub pop cltd sbb (bad) je ljmp daa jne or jl xchg and loop push stc mov dec dec sbb mov aas mov (bad) xor or sbb out dec lea clc dec (bad) cmpsl in cmpsb dec inc mov (bad) addr16 push int pushf jbe int3 movsl jmp cmp dec xor mov jbe bound jge in sbb jge mov add or fisttp pop test repz test popf jno arpl fildl jecxz fs fist int test mov push mov ds lcall push pushf sub les add ret scas cmc stc dec fstp dec dec push sbb inc and mov pushf popa jp ret xchg inc sarb stc clc in (bad) add je dec nop or mov jb (bad) shlb jle repz xor jle sbb (bad) (bad) pop (bad) xor inc pop aad xor addl sbb jae roll test xor cmp ds and add xchg xchg jecxz mov test out lock mov mov ja dec or mov pop rorb (bad) int imul mov daa hlt jnp rcr scas jbe push xchg mov dec shrl je or (bad) out push mov mov fwait jmp mov (bad) xor loop out xchg fwait jnp movsb or and test icebp sbb or in enter pushf jns (bad) cmp sbb dec lcall loopne cld push stos fdivrs push std out mov out mov push sub mov xchg stos bound mov push jno push out push sub test out lret lds ljmp insb xor add cmp insl xchg js inc mov leave dec pop or les data16 fisubl es mov aas dec mov orb mov mov fidivl fnsave int mov dec pop imul gs (bad) fnop cmpsl lret add jle in pop and iret sub jb je movsl pop and mov add enter roll lret fnsave jle mov adc sbb sub addr16 lea sahf and popf mov out xchg loope mov xlat xor add sti push popa push mov push repz lret push test out mov (bad) xchg jae and fist pusha adc cwtl dec test pop out sahf push inc and jo xchg xor fmuls inc pop or jne push xor pop jg pop dec (bad) and movsl xchg rclb fnstsw pop pusha adc and push mov adc arpl pop push xchg sub insb orl cld xchg leave call leave outsb call outsb dec bound push (bad) xor mov enter pop pop push aad insl iret fldt pop push lret into imul addl mov xchg (bad) mov decb or fcompl push aaa inc or mov int3 and pop mov mov or mov mov add mov dec add add rol (bad) inc enter sub arpl push jne pop test jmp push ds test ret inc in fsubrs sbb test inc fisttp or sar daa xor insb inc mov xorl adc mov cmpb (bad) addb fstpl cmp add sbb jmp insl ljmp shrl mov call andb mov jno daa movsb fs ds outsb pop mov lock shlb shrb cmpsb xchg pop lret repz jnp mov mov or loope imul xor stos pop roll mov adc js mov mov dec mov sahf jp popa shr data16 (bad) idiv jbe pop or imul fdivs sub pop push pop int3 iret lods aam mov sbb jle sti imul xor divb mov push sbb mov dec hlt lods outsb mov ret sub inc rorl cmp out les pop mov shrl and mov rol test lret sub mov jbe dec je add sbb inc outsl dec sbb lret ja test pop mov (bad) push mov fwait (bad) cwtl and lahf sub mov mov das out push fwait test mov repz push jne xchg mov lods mov lods xor cmp mov (bad) pop lcall fisttpll int3 mov sub add mov xchg push fwait dec enter lods (bad) or jecxz add dec add pop es je fsubs ret mov mov lds or cmp lcallw inc outsb cld pop xor inc sbb jne sub add lret cld push jnp loope fs shr inc std sbb inc lds dec mov loop mov imul clc xchg jno push pop int3 push pop add in ret addr16 cmp or fcmovb cmp jecxz push sbb pop jno jmp pop test jl pushf inc pusha (bad) mov sbb mov out movsb adc call push shlb adc push jb jnp (bad) repz jae xor and ja sub inc dec push pop dec mov xchg or add daa (bad) (bad) mov dec jp jl xor mov mov pop popf enter (bad) pushf jl loope sbb mov pop outsl (bad) xchg aas mov cmp ds inc push push out xchg (bad) adc pop in pop and dec add incl jae fwait lret push pop xor fcoml jle mov pop mov into sbb adc popa popa pop push (bad) mov xor add pop dec lret out inc mov mov add jbe xchg and and stos sbbl repz scas mov clc movsl jne push rorb xchg out imul jnp pop fmul pop jo dec idivl mov pusha imul xlat jle (bad) mov sbb test divl jmp mov imul xor hlt out inc cltd (bad) mov jle xchg inc jp jae mov adcb aam scas and stos pop (bad) popa jne bound pop ja xorl mov pop pop cmp aam push or out enter or or jmp sbb mov cltd sbb xor push lods sub enter orb jmp test push out pop jle pop andb mov aam cmp inc test pop jle mov pop jne test mov sti push iret pop fxch gs add (bad) (bad) mov jne stc das xor outsl jp xor mov and and (bad) mov (bad) mov fstpt and adc mov sbb jge ds dec stc xchg mov in sbb jle add inc pop sahf add in hlt out jecxz mov inc fnstsw pop cs std test aas into sbb dec jne jb xchg xor insl movl int3 dec and in jge inc sbb adc aas icebp jno cmp dec shll es cli bound leave (bad) fnstcw sbb mov insb push xchg imul adc adc int3 inc cwtl fnstcw paddsw cmp call sub sub pop out aaa mov mov (bad) addr16 aaa cmc sub gs sub push pop in (bad) mov dec pop outsb js out pop cmpsb sbb push sub je fcoml call fscale push gs mov inc idivb fildl mov mov aam fist gs bound int3 pop ljmp test fsts pop gs cmp es arpl stos mov js lods push jns addr16 (bad) jl pop push mov pushf mov bound outsb mov shlb mov insl jnp (bad) loopne push subb push dec or sub imul xlat xchg das or out add rolb mov (bad) (bad) mov adc or mov subl orb cmp cwtl pusha push fisubr and adc je (bad) adc push rol dec fisubr iret jecxz mov test stos or jmp xchg add bound fldl push mov xchg and mov add (bad) clc repnz mov div push out jecxz adc popf jns inc or dec xor and sbb fiadd orl or mov jp gs mov ljmp repnz xor mov ss clc iret call cmpsl mov dec dec jp aaa mov push scas insb jbe dec insl popf in pop dec push cmp fisubrl sub movsb add (bad) movntq out daa in mov pop out sti gs stos cs jge in cmc lods pop and mov test cli push out pop cmp xchg fwait inc sub xor dec push push jmp mov repz inc fs jbe loop dec (bad) (bad) cmp fist call (bad) je push mov push insb mov stc xor hlt negb push jl push cmpsb aad lahf stos ljmp in xchg rcrb test enter aaa fmuls movsl push pop push cmpsb sub cmc jp inc mov jg repz inc int3 int3 pop std add add int mov inc and push aam jno adc sbb cmc cli daa lock and adc inc lcall loopne or xchg jp lods out and xchg sbb lahf pop aas mov negb mov int3 test xchg sahf ds jbe jne ret iret fidiv ds fnsave subl mov scas mov pop jb cs fistpll xchg mov pop inc xor and (bad) jmp sbb jp push jb into pop push (bad) adc sbb pop inc mov xchg stos (bad) fidivrl inc scas inc push jle notb pop push xor xor mov add jne pop int mov notb sbb sbb or adc je fdivr in lock push outsl ds sub add push fwait es cs rclb inc cmc lcall (bad) mov sti out inc movsl lret lea sbb jb pop lahf mov mov dec pop push or insb outsl add aam sbb pop mov xchg inc lods jecxz scas dec push (bad) jbe popf jns int3 daa imul (bad) and (bad) pop into jg sbb fcompl xchg jnp push sbb incl mov andl les mov ljmp dec jns dec xchg mov cltd pop push mov fneni(8087 mov out movsl sub popf imul pop and stos mov jmp sahf imul jne popa and jne jmp push pushf push pop cli and lea jmp je ss xlat test jae or jns jp cli add sub push jmp pop or mov jl pusha or mov or cld push pop xchg and aam pusha fwait jae cmp sub daa aam fs imul xchg inc pusha (bad) pusha ss xchg jmp je inc shll inc leave pushf cmp cli sbb push or mov aaa cwtl cmp push cmp xor xchg or scas cmp or sub push std out das divl aas push jns popa imul lds jle push repz es jns test (bad) push icebp xorl aaa repnz mov push sbb mov push and inc push jae cmp sbb (bad) stc push stos ret mov outsl mov push push mov lret sub std setl xor push aaa loope adc adc dec les (bad) xlat push out gs cwtl adc mov push test stos test das imul pushf out mov inc adc test ds arpl fsubrl rcll dec int3 or jge jo sbb sbb cmpsl xor xor xor ss shr xchg incb or mulb pop cmp decl mov (bad) or (bad) lds cmp pushf scas sub dec xlat bound leave xchg (bad) lock shl mov dec bnd mov popa js mov ja add cld inc sbb mov out insb sti fnstcw mov push mov mov mov aas mov xchg xor mov cld inc aad cmp adc rorl inc cli hlt test dec cmp xor pop negl aaa (bad) andl cmp out es std xchg xor outsl in adc inc jo or in push out push add icebp aam or sbb test mov jle cmp mov sbb fxch int3 lea and dec mov push inc call sbb pop and or jg adc pop jae loop dec mov or insl popa rorl sub or mov enter insl loopne inc mov push mov test leave dec sbb mov fbstp jns or mov imul mov ret int3 shld xchg pusha andl push mov push fistpl sbb js or pop bound out inc cwtl out mov int xor push je idivb sub (bad) stos (bad) mov lds in mov jecxz pushf fisttpl test mov aas sbb aas ret lods pop mov pop jmp jmp fdivrl cmp push or mov lock pop lods sub sarl inc add stc jg mov gs xchg sahf fwait es inc mov adc xlat cmpsl mov cmp inc cmpsb (bad) movsl inc dec inc es clc shr mov mov js and movsl pop adc push sbb cmp xlat pop xchg push sbb insl popa shlb shl cmpl scas dec js and dec cmp mov jae rcrl mov adc imul pushw push repnz xchg cwtl imul mov loopne aad jl sahf push imul xchg fadds (bad) dec (bad) inc js and and lret maskmovq testl es cmp inc insl lods adc mov mov jbe fnop rcrl enter jne mov xchg and inc insl xchg pop nop dec mov arpl and xchg ficoml enter out xchg mov add inc (bad) int adc dec add daa jmp or mov sbb dec pop dec push xchg xor lret mov push test (bad) into pop (bad) hlt or in loope repnz ret cwtl mov jbe das inc fist mov daa cmp or popf (bad) push dec insb call int3 cwtl cmc xchg insb xlat rcll push cli or fdivr mov and mov dec jne repz mov xchg push lock xor sahf jnp enter mov sbb fcmovnbe mov dec (bad) repnz cmp mov cmpl push jnp outsl (bad) ret add outsl xchg fimul cmp xlat xor in add jmp popa or cmpsl bound fild adc dec add and test les mov aas leave mov imul dec jns cli imul popa leave cmpsb hlt (bad) add pop bound (bad) enter cmpsb inc jl adc dec push mov in sti xchg lret repz lods adc imul add movsl sti cltd aad push (bad) (bad) jo cmp rcrb inc hlt fiaddl test push xor cmc adc inc push dec incb inc dec mov das cmp mov dec bndldx mov daa hlt fcomps jmp fmull into loop cmp xchg je adc jecxz sub fimul lock leave xor jbe mov jno dec or pusha or ficompl (bad) push fcomi sub push aam scas push sub add add mov sarl clc lods movsl sub jmp jle,pt jg out sub ja adc movsb out cld dec (bad) (bad) dec (bad) clc cld push fnstcw mov addr16 sub outsb test in outsl ljmp in sbb jmp inc jnp cmp mov xor test (bad) mov inc cmp scas sub repz icebp ret cmp xchg ficoml adc mov inc sbb aad and lahf and js sub (bad) mov div outsb cs call pop pop repz jo into xchg (bad) jno sbb jle aas xchg push mov sub xchg xchg repz lods gs cmpsl loope lea add jno icebp mov scas push cmpsb adc or cmp cld movsl sub dec mov imul push sub mov mov xor adcl subb dec mov aam sbb sub lahf jg pushf adc mov push jmp stc add mov loope cmpsb sub lods mulb xchg test cld pop jne sub pop xor repz out jg sbb mov cwtl rcrl pop mov and fistpl mov lock incb (bad) dec movsb add popa lahf adc and lods lods lret mov enter aam mov hlt mov jp or and es outsl clc xor mov cltd mov sbb push aad jle or inc das inc daa push jnp loopne in jb mov iret push jnp sti adc push xchg jle cwtl mov sub jns dec mov out jl xchg test xor testl inc xor or adc fwait rclb sub in pop add scas out pop cmp sub xchg or inc inc jne or sub inc jns aam mov mov in idivl and sbb nop pmaxub jp stos stos outsl xor inc std divb (bad) icebp stc and or cmp daa ret popf mov inc ret inc in sub je stos cmp popf adc cmp les push or scas push rclb push xor mov push and inc mov lock and and lods loopne loope cmp das inc orl (bad) repz ds push arpl fistp loope insl dec sub dec pusha mov pop jo add mov (bad) jmp (bad) fldl adc stc mov mov cmp jne mov adc sub test ss insb push into add shr popf or xor sbb cmp inc pop (bad) lods add jne imulb addr16 fiaddl or jmp jae arpl push loope inc (bad) pop mov lods addr16 and dec or sub add xorb add in out aas das sbb mov imul jl lret cmp out popa xor add push or adc dec and lods aad call or mov push addr16 and jge fs ljmp jp fisttpll sbb decl scas int btr daa mov loope cmp and and push ljmp xorb fcmovb xchg cmpsl movsb std cmpl mov or mov sub sbb cli push mov sbb push dec ficompl lock out cli nop push daa add popa cli mov movsl out fdivr inc movsl cmp sbb sub push (bad) cmpsl xchg inc jo xor cmp insl pop inc mov mov popf cmpsb adc cmpsb and test jge mov dec mov jbe mov cpuid lret inc lock cwtl cmpsb xor cli pop mov sbb mov subl fnsave lahf dec fiadd inc fadd sub jp jnp aam sub mov cmpsl sub cmp aaa pop mov mov lret lret or dec out push dec in mov xor jl adc pushf cwtl push ret mov loope int sbb sub test ret outsb sbb adc push add enter sbb or dec dec cmp icebp pop cmp es es or cwtl push das popa into push (bad) jnp adc popf lds and scas dec outsl or (bad) sub movsl movsb pop es xor mov jne dec sbb dec sbb clc xlat xchg add ja rolb loopne fcmovbe sbb xchg inc mov add add pop popa pop xor insb jns out mov dec cld je and (bad) scas pmaxub out mov pop daa mov ss daa adc inc aad out fnstcw xchg mov in or dec and push xrelease adc pop pop ret out cli adc aas sahf es leave mov std (bad) outsl push inc cs dec xor mov (bad) cs mov pusha sub sbb push pop das xchg push fisubr sar or sub mov jl loope and dec push mov mov sub daa into sub and jmp pop adc hlt enter fcom dec push adc outsb dec ljmp lods mov xor mov add test xor and movsb or pusha sbb fdivrl rolb or fs xchg inc inc xchg xchg divl mov push cmp icebp es clc test shrb xchg fisttp dec sub sti push xor stos and insb or push sub and inc loope xchg dec xchg mov arpl push push stos sub imul les and xor push push push (bad) sub imul jmp jmp pop mov inc mov insl sbb xchg jp xchg rcll jnp data16 add fbstp adc out (bad) cmp ret mov fwait xchg iret xchg and sub and jbe cmp mov sub dec aam dec mov lods test negl mov mov loope inc xchg test xchg mov push xor sub jne aaa jne adc (bad) sbb jmp jl imul out cmc cmp mov push pop push clc outsb daa cmp add (bad) push add (bad) fmull mov sub pop lahf mov push stos dec push shrl push mov mov push xor enter lock leave or lret cmp (bad) mov cltd out push loope insb jle push cmp (bad) enter sub ret ja out out inc in nop nop jge sbb inc les daa (bad) fdivl mov call jno pop push mov dec js jmp ja lock fisubrl cmc dec xchg int3 mov mov jbe push dec add mov sbb test (bad) pop push imulb cmp inc bound sub jge xor xlat in cmp inc lcall add mov movsb idivb mov fmulp and loopne insl push lahf mov adc and ja arpl aam fwait adcb xor (bad) sbb nop push int3 aaa sub jl test test mov aad loopne jge adc nop outsl pop jle and push cltd jb out pop mov (bad) and mov ja lea mov sbb jecxz mov mov xor divb lods fcomps xchg mov ljmp aad idivl int xor add jmp dec cmp fldlg2 (bad) cmc pop pushf jne xchg cmp icebp jge int pop sub outsl into xlat ljmp sbb je stos and sbb daa mov sbb mov js insb cmp xchg dec test and loop popf ljmp mov xor mov lcall pop or lods add mov ds pop xchg es out lret cmc push das inc addr16 jns in lret push and std std cld jle sub ds and mov enter mov xor sub inc pop or pop dec cmp pop pop xor push movsb jmp xor xor inc int3 adc insb cs push sub sbb mov cmpsl leave jmp mov leave sbb sbb dec and outsl outsl (bad) fstpt aad xor add add inc fs std popa unpcklps sub in (bad) mov jnp outsb call in add addr16 push leave lret xchg add movsl jae push push das test (bad) cmp mov sub mov out inc aad cmp (bad) es test dec inc mov (bad) sti and xchg loope push xchg push jbe clc mov stos (bad) stos out pop hlt push push repnz clc dec gs lods sbb jns lret cmpsw test loop movsb xchg inc cmp outsl dec mov movb popa and loopne (bad) mov jne inc jno push aas inc mov mov in scas icebp mov imul mov cmp xchg cmp sarl xchg or dec repz jmp arpl lea imul ljmp and mov or nop scas fwait sbb into out sbb or outsb lret cwtl repz imul mov ds xchg or xchg stc xlat frstor jne lods mov cmpl dec lahf loope mov leave es and mov pop mov ret insl fnstenv pop dec je test (bad) mov mov aad imul sub push outsb and enter mov pop bound mov push mov or (bad) stos arpl push ss inc inc or (bad) and xchg xchg int fcmovnu lods xchg notb jb adc pop cld inc test mov pop mov mov lea xor int3 loopne jnp test fcmovu sbb xchg loopne ffree cmp mov ljmp movl fstl inc js sbb loopne sbb mov sbb mov das repnz mov add lds mov push push lahf push push out inc push and lock cs mull push xlat fildll loope cmp scas pop adc ss pop inc fwait push mov ficomp shll xor iret add in jle add push inc push adc adc or test push sbb and adc mov add pop jl add out push push hlt adc out imul pop aam cmc ret mov lods sbb add jns (bad) xchg pop hlt int3 jle int or neg into int fwait sub test enter cs daa mov mov (bad) lcall push mov or imul cmpsb pop sbb dec lock sub push stos adc test sbb lretw rcl shrl repnz inc leave cmc in ds or sub mov jo popa (bad) je mov ret push and imul pop incl in pop ffreep movsb lret mul push (bad) shll mov push inc jnp repz ds or add mov inc insl pop decl (bad) xor mov jbe and xchg xor fwait shl xlat jo iret dec pop movsb mov aad push test dec clc push xchg call add adc dec cmove sub push outsl push out add fldt lds add lods jmp cltd cmc and sbb cmp mov push ljmp lret pop mov (bad) fmull push orl sar cmpsl sub fbld insl and test push jno mov js xor pop in inc pusha mov mul fsubrs call push sub insl in int fisubrl push add cmc mov loopne xchg xor pop stc mov mov sub xchg or xor (bad) mov jp shrl pop in push cmpsb xchg xor ja (bad) (bad) fdivrl xorl sti xor sbb mov xchg test adc mov pusha mov cmpsl xchg xchg push and cmp in xor pop ljmp out pop hlt out mov jns mov je cld mov or push ss xor rcrl xchg (bad) fcmovnu dec xchg sarb shrb inc inc sub inc addr16 and pop cwtl int3 cwtl mov loope xor ja mov es (bad) adc jg dec push stc fs int3 mov xchg xchg sbb or sahf push mov adcl les mov imul and add xchg jl xchg mov or ret push les out jnp mov (bad) out xchg inc mov add (bad) nop (bad) ficomp sub sti push inc xchg scas sub inc lds lods lods push dec mov inc or cli daa xchg int3 int3 jb jae sub sub lret pop lods mov sbb mov inc stos daa cmpsl cmpb jo into or push jnp ljmp jg pop inc sub rcrb push mov rorb loop cmp hlt mov cmc fidivr cmpl repz adc lock adc pop jle xor mov decl ljmp add in repnz jg scas xchg out sti xor (bad) fldcw leave out test stos adc nop mov sub xor (bad) out jle cltd das arpl aas dec dec mov test sahf adc push fwait push and jl decb pop push cld outsb out ret pop fsts ljmp int3 jnp (bad) imul mov sbb pop sbb jnp fadds lahf mov rcll dec inc pop add cmp mov push pusha je dec (bad) adc dec (bad) es xchg pop add into cmp xchg mov or fcmovu fwait dec cmp adc hlt aam push xchg rclb sbb mov push pushf dec mov cld hlt cld or mov dec (bad) lods add pop xor jo mov adc lea jo insl push icebp in push ds dec mov xchg imul inc dec out out inc jb mov mov dec dec jbe xchg or mov ljmp jmp loopne mov push and in jns fwait lods mov xor push (bad) sub sbb adc fs das (bad) pop mulb adc add incb jle pop (bad) sahf sbbl in mov cmp xchg inc jbe xor out xor sub cmp insl xor mov gs add inc push shlb mov je and pop dec jmp pushf sub leave jo ss int3 and pop test aam sti mov lcall bound in test add int3 les add jecxz mov xor das loope popa mov mov jle jo and mov mov rcl push int3 in dec fxch push mov les popf add bound adc sub pop inc addl scas jae mov pop xor add pop pop xchg in iret leave fcompl pusha inc dec pusha inc pop les mov jecxz mov icebp and dec pop mov mov push xor sbb fwait fs idivb aaa aas leave dec (bad) fiaddl aad mov (bad) push lods mov aaa push test adc jecxz std add addl lcall iret xchg (bad) cltd jns pop add mov mov xchg (bad) lret iret push lret fs mov and mov stos aad pushf inc iret cltd xor aas sub mov pusha imul mov mov sbb dec mov cmp int3 mov push (bad) dec dec cltd and iret pop pop rep sarb sub inc into or lret ret clc sbb push push lcall xor push sahf add sub mov sub adc fiadd xor lods out icebp pop inc sbb das stc or xor cli and sub hlt in xor mov popl xor fcomps sub pop cmc loope aad sti in mov push test pop mov jl jmp xchg inc adc lcall inc mov or jo es inc jecxz in ja cmpsl ret sarl add daa and (bad) bound int mov jge cmp jge add es sbb test jle (bad) or out outsb inc xor sbb pop leave (bad) jne cmp stos sti pop aam sbb mov out dec mov dec scas jae sahf int sbb xchg add or mov cmp decl mov in xchg mov js sbb adc pop (bad) mov push inc jo xchg and icebp xor dec (bad) bound mov xchg and dec lret fwait int3 out or pop aad add mov int3 mov xor xor push pmuludq jns int fsts lds pop mov and addr16 sub out dec adc sub js dec jg popa sbb mov pop aaa mov std cmp mov push fstl inc jo inc cltd ret cmpsl mov sbb sub (bad) xor mov pop xlat dec dec adc inc dec mov sbb xchg pop and insb sbb cmp add jbe test outsb test repnz jecxz cmc pop (bad) repnz mov jnp sbb nop sub dec jge push je jecxz fldt pop jns bound mov pushf cmp push pop xor dec sbbb test xlat mov daa xchg xor mov push mov adc dec mov fwait (bad) enter or psrld mov dec sbb aam popf (bad) mov js fisub incb lret push jecxz xor or jg movsb cmp orl je bound insl mov lret push inc scas dec sbbl cmp out stc rclb xchg sub inc mov fs clc push or or jbe loop jge lret les push (bad) inc lods cmp test lahf jnp inc loop frstor xchg mov jb aaa sti (bad) lods loopne xor sub cmp push (bad) sub fsts push popa push jmp push mov pop cmp int jo scas inc out imul jmp cmpsl jge xchg and pop scas pop lock sub movsl les xchg pop cmpsl lods repz aaa das andl icebp mov sahf fcmovnb sbb xor push cli push adc push cwtl adc mov outsb and (bad) daa cmpsb insb int dec mov xchg pop inc pop gs add xor stos imul fwait bound out bnd mov fwait iret repz loope sti lock sub cmpsl push decb call add jp sub cmp fistl inc or jno add mov loope jns xchg inc jecxz xchg stc insl stc xor mov adc cmpsl cmpsb in pop mov pop push in or decb mov mov aas pop mov aam adc lea call (bad) adc push push mov into call cmp adc mov outsl pop and out loop mov lods call mov out mov js lock mov jno fiaddl or or je ljmp faddl and mov outsb call test mov pop adc fistpll adcl sahf jle cmp mov jnp pop lock fsubl sbb sub mov lcall (bad) xor xchg pop rorb push inc mov (bad) mov mov out cmp (bad) arpl mov jae hlt jmp xlat dec les lea stos mov and je nop lods stos lahf lods fmull push sbb mov sub ljmp add cwtl insl or cwtl mov mov les (bad) xor add inc stos repz push scas fistp pop int3 lock push mov mov sbb xor lods mov (bad) mov notb pop (bad) lcall (bad) out xor mov pushf push add pusha or test fxch sub cli adc push fsub sbb dec push jecxz sub xor incb add (bad) in jo cmp leave mov fsubr sub test pop pop mov fist cs xchg (bad) xchg stos inc mov jg (bad) (bad) cmc fiaddl jl inc sbb xlat and fisttp pop scas jae dec mov fwait test scas mov jns jp movsl mov fidivl pop adc inc mov sbb jae add sub push pushf pop les push push and pop mov lea dec and sti (bad) (bad) out das iret mov das cmp and jnp or scas mov loopne jns mov or (bad) or cmp icebp xor jne mov scas shlb testl mov lcall mov xor or sub mov push mov pop push ret mov inc and jecxz lcall shlb jns aad mov jl jno stos fidivr or xlat stc (bad) or fprem cmpsl dec je jl hlt leave sarb out jne mov ss cmp fs fwait je and addr16 mov dec jb jnp fild jecxz sar into clc push xor lods aaa scas out inc and jnp sbb mov add ljmp gs adc jns add (bad) inc enter les dec aaa int aad fdivrs and mov xchg xor mov mov pop hlt lret int3 mov icebp lock dec aad outsb jl and cmp popf xor out push mov ds lret sti jmp test and rolb icebp lock (bad) adc iret pusha ret add xor adc xor mov test xchg cmpsl push jns hlt das pop enter cwtl xor mov mov in dec pop pop jle in arpl fldl pushf pop stos data16 jle aam jge mov jmp mov inc call mov into jnp or xchg cltd cli mov mov push sbb (bad) jae das bound rorl es sbb mov notl pop test mov in out push into cmp and or out popf adc xor push ror mov inc cmpsl and cltd push jecxz aas mov or add inc inc jmp jb (bad) dec lcall push mov sarl enter jg jg loopne fistl push or jae lret lods mov inc jb mov push ja test out sbb jge lea testl iret xor push fwait insl je jns mov or mov nop xchg sub and rcrb add add (bad) mov (bad) xor out sub jae pop aas pop pop inc inc sti push pop mov (bad) arpl imull out in icebp xchg ret ljmp mov jae insl mov add inc mov daa pop clc mov pop mov push movsl imul inc or pop push sti cmc sbb test push pop mov lahf push popa (bad) fistp xor jl jo push stos imul mov into pop or or shrl push int3 pop cmp loopne push lods in jnp or stc test sub insl inc mov js mov (bad) negl inc adc shrb nop xor pop cld push frndint jno dec clc pop inc cs fistl fsts popa ljmp (bad) cmc dec cmpsb or in std pop repnz rcr xor jge jb dec dec sti cmp cmp mov (bad) dec xchg xor xchg addr16 pop test inc out jge cmp cmpb cmp and xchg jnp mov mov rolb movsl int3 push jns jae ret mov aas jnp push and xchg sbb sub (bad) fsubp aad xor addr16 mov aam push inc faddl fimul or scas xlat mov mov xchg mov mov lea (bad) sti mov sbb xlat cmpl mov dec pop inc push stc add (bad) and jge cwtl stc inc aaa cmp inc dec xor sbb in mov (bad) cs pop mov xchg xchg lcall ficomp mov add push lret lcall and xchg lea fiaddl shlb aas fbstp es jmp (bad) cmp mov daa dec push call pushf imul lret or and dec dec scas (bad) popf mov push clc jno mov js push jp insb adc insb cmp sub lods mov add std push jmp enter pop cli xchg mov aad inc jae lcall popa mov push cld cld jmp loopne imul push int jno inc (bad) pop das sbb loop data16 gs add movsb scas xchg sbb hlt lret and mov les js ljmp pop mov mov out js adc mov inc in ret sbb mov dec test jl or jg pop cld mov scas and lret sub movsl fs das xchg bound inc adc jns mov inc mov cltd mov sahf movsb add adc jns test mov out sub cli jecxz pop into sub cwtl lret add add (bad) popa mov test push aas popa jle mov sbb mov mov ljmp cmp scas dec loopne ret or jae hlt xchg push push pop lahf iret mov cmpsl ja mov sarl rorb push sar sahf xor push sbb pop shll inc jb sbb inc cmp test outsl and mov fild in pop rorl stos (bad) pop push aad cmpsb fcomi es test sbb adc mov movsb adc cmpsb (bad) lds xchg shlb pusha out jp pop jb jle xlat xchg nop jno int leave xor xlat ljmp cli mov adc loop jne and inc les mov sbb xchg sbbl inc push mov (bad) xchg mov scas leave nop nop stos sbbl adc push aam popa lret or mov fmuls sbbl or adc pop out jmp stos adc mov push mov xor nop (bad) or fwait test or or div xchg fwait (bad) mov lea mov or cmp mov inc (bad) rcrb cmp sub pop lods scas sub mov sub inc js fwait inc xchg jb fist mov stos mov movsb or mov outsb xor push arpl sahf (bad) jno mov gs mov data16 aaa rol push shll cmp adc and (bad) jp or subl push mov outsl and sub sbb jg test push sub inc inc dec ror push jo adc mov pop and push dec add ljmp arpl sti sarb mov call icebp push dec push xchg jo hlt xchg stos mov sti xchg sub or adc and mov insl lock cmp js jnp fbld imul xor outsb or aas pushf mov mov popa mov loop sub push scas inc sbb dec stos mov sub push lcall cmc push int3 adc jo jp cmp mov and int push adc sbb xor test cld mov mov mov cmp xor insl pop pop jmp into negl xchg popf mov mov fild mov fwait enter insl and movsl mov mov scas outsl inc jecxz sbb pop pop push js in shrl mov std cmp cmp loopne test repz jno cmc push mov ja or pop xchg jnp mov sbb xchg imul pop xor jmp xor insl pop adc test (bad) fcompl mov inc sub scas add mov stos jb lcall shll jecxz imul xchg mov popf xor incl es lods frndint cld imul imul test jae sbb rcr cmp (bad) mov (bad) xor push push leave dec ret out push dec inc push addr16 decb push clc xor nop lret rorl call loop jp aaa xor es push leave pop jo iret pop lods idiv pop icebp fs xor xor ja push popf jl lds jp push or cmp std pop clc adc and or movsl mov cs dec fidivr jnp clc xchg mov inc adc leave xor or loop test pop jp syscall xchg testb push in cmp adc ljmp data16 ds fidiv shll jae bt pop push or shr and cmp jge cmp loope pop pop or xchg fidivl scas xchg adc jno push mov mov ret xor aad push inc sub or insb xchg ja in and cmc or add sub pop fcompl sti push lret dec bound les and mov add push xchg icebp hlt push mov das add dec sbb fisttpl imul imul ljmp test aad test repnz cltd push or cld mov sbb sub jg lock xchg sarl mov and andl add xchg mov rorb dec jne into ss jno (bad) in push sar sarb rcl rolb push test xchg rcll dec mov ljmp sti sub rcll push or rcrl in sarb andl pop insl add mov push xchg imul insl and xlat loope inc inc imull pop je mov subl add and mov inc movsb add jno sub and cli and push jecxz xchg pushf jp inc jmp or ficompl mov js pop push mov pop inc cld sub push xchg andl adc cmp push (bad) testb sub int3 sub pusha sub test sbb xchg aad jo rorl push mov jmp cmp xchg mov push sub pop loopne fmull xor (bad) cwtl (bad) jb imul pop test popa dec (bad) xchg inc xlat into repnz ret mov sbb xor aam cmc es sub nop inc pop test sub inc fwait adc jb mov inc sti push insb xchg push les push push add les call add out pop push pop mov es sub dec das sub imul pop (bad) movsb xchg mov sub std push les aas and add fs mov mov xchg fbstp mov ret pushl xlat lods cmp mov in pop inc mov lcall push out fsubs repz and fcoms push xchg cmpsl lahf mov sub lea arpl jae addb cmp push push mov iret jae inc jbe push pop das ljmp cwtl sbbl jbe (bad) testl dec fcoml push inc arpl add push push jecxz in add mov inc enter sub fiaddl inc sbb fdivrl aam mov dec mov push inc movsl sahf adc aad mov stc jge pop jnp xor dec das test push sbb add jb mov add leave rolb push cmp (bad) out push push sub leave xchg ss sarl push outsl aas in dec fmull or pop les inc or fcomp (bad) daa nop xchg or lret add cmp into movsl mov (bad) adc push push popa je adc or sbb cmp adc out sub xor rclb adc or push int js pop jae dec inc sub js les pusha push es mov lds push sub or jae mov movsb (bad) xor and aas pop push loopne or pop aaa mov and clc mov arpl mov icebp dec arpl pop std sbb or (bad) dec jnp dec sti adc xor mov outsl mov mov fs adc fisubr sbb and leave (bad) (bad) mov lret fs iret in xor rorb hlt xor aaa addl (bad) flds jnp xchg insl and js stos stos shrl call in lahf inc xchg add enter sbb adc jle iret xor scas iret jne sti pop inc and mov cmp (bad) jne sbb (bad) (bad) xor enter jae pushf and adc popa inc xor stc cmp cmp mov jg aas out data16 push rclb sbbl jae and movsb in and xchg or rcll mov out add std nopl dec xchg popf adc out push push mov dec pop push adcb inc pop push jp mov pop fildll sub mov add outsb mov loope xor lods lods inc xchg inc xorb jg mov into or adc push int xchg push pop or or jmp in nop pushf daa fisubl xchg je sub sub xlat stc sbb mov int or imul pop out sbb inc (bad) sbb inc movl mov adc dec das add mov mov xorl xor in cmpsl fwait cld xchg add push clc jmp loope pop rcrb jg adc and fisttpl xchg (bad) call dec mov ljmp lock inc or cwtl mov sub outsb mov mov aam cltd mov (bad) mov adc fistpll push cltd sub fildll jno loopne jecxz and lods or pop mov inc or lret gs adc (bad) stos popa je pop push sub pop adc fwait (bad) adc push pop pop std mov repnz jl aaa dec sbb ss xorb sbb test aas jg push xor adc inc pop pop pop stos rclb shlb pop pop (bad) sub mov jle sub adc pop mov je lret jae stc addr16 sahf dec bound mov test ss int3 (bad) and fidivr data16 and popf pop in xor sbb test dec jle ss adc leave or mov mov movl cwtl xchg sub int icebp dec insl dec xchg and jbe adc xor cmp fcompl adc aaa mov pusha andl mov out leave iret clc aas xchg and ss loopne in jmp lret xor iret iret mov sbb insl mov lea pop int3 stc mov mov or jl sub xchg push dec mov xchg and int (bad) xlat mov pop (bad) and stos orl fildl inc enter loope push or cwtl xchg int3 mov pop mov push notl fsubl outsb mov push xor mov leave data16 inc pop movsb pop add les (bad) or mov mov push rorl loop xor push mov push adc xchg cmpsl xchg (bad) popf cld out or push or stos xchg pop inc stc ds mov lds in push xor dec adc xor mov push sbb stos xor push mov jge xor scas fdivp es xor (bad) mov jbe push push pop enter (bad) call test insl lahf (bad) cmp lock popf fsubl (bad) nop js int3 mov dec out dec orl jbe loop jg xchg hlt rcrb inc repnz cmpsl adc jp sub scas push ss aas and mov cmp xchg fistp popa mov xor stos lock jns sbb mov jmp lods cmp jns pop dec lods ss jmp xor loopne adc mov mov mov adc mov in mov mov jae popa mov out jg jae (bad) shr mov outsl lret fisub sahf push (bad) ljmp cmp lea cmc xchg (bad) aad cmpsb xor clc arpl mov gs push adc lret stos gs (bad) jg repz in mov test test inc jmp push adc fstl and imul sub leave sbb add inc stc add jae mov cmp movsb and scas loope and dec lret cs mov add insb xor hlt in add mov mov mov mov inc gs dec (bad) jo xor xchg aaa sbb clc and out xor popa out add push call nop out and mov mov mov push sbb xchg jns,pt add cmc fldenv push test cmp subb fcmovbe push and ret lods push outsl pop inc pushf loope jns add ss ss pusha dec sub lds xchg nopl jecxz dec adc sbbb and repnz or mov ds xchg inc xchg incb ss out xor inc pop and subb or and xchg daa push mov pop in mov push pushf lods lret (bad) mov xor mov enter mov icebp out add jge outsb or cmc test dec push daa mov and mov ret mov in in jmp (bad) idivl jle mov or fdivs push jnp arpl push jp popa mov mov sub pusha out add dec xlat (bad) and add lds rclb push inc jmp jae sbb imul pop sub popa inc lret jbe and add push add cli sub inc stos push scas orl mov cmp stos sub mov jl push jns jmp and dec push imul and push add ror push pop xchg and and std popa xor gs xor push and fwait add in jecxz sbb inc notb leave push push mov out shlb mov repnz mov xor lods jo insl sbbb pusha push jnp bound jns and push test add jnp loopne or inc jle icebp pusha mov pop test xor sbb loopne dec lahf das push cmpsl xchg lcall out pop out mov fnsave mov mov push test or xchg fistpll xor test test fildll jnp fdivs mov dec ffree inc push and lds dec addr16 pop mov fsts scas jmp lret in add xchg ss test xchg ret dec inc loopne inc sbb xchg imul (bad) ret push sbb xor clc inc jge imulb cmpb (bad) or push loope jae lock adc push into test frndint mov enter pop pop ljmp mov mov outsb lcall jbe arpl movsb inc into movsb or adc xchg xchg cmp or cmp loopne shrb cmpsb jge pop xchg inc mov gs add mov stos daa sbb out jns daa sbb scas push sub mov xchg adc jbe xor fs jno in sbb push popa inc push cmp xor ljmp mov out fidivl or call test mov inc push aaa stos and cmp mov mov add pusha mov add repnz xor xlat xor test xor test inc pop jg pusha js jge push inc loope repnz cltd gs push adc hlt add lock mov in enter pop add or dec jle lahf dec and ret jmp mov mov inc (bad) out popf fwait mov aad mov inc fadds mov repz mov push xchg push cli test and in lods call arpl sahf add les mov test sub xchg mov xchg outsb pop cmp stos (bad) cmpsl xchg cmp lahf fstpl stc int repz add push (bad) enter jl rolb out mov cmp inc inc jb pop and xchg les cmp xor (bad) sbb loopne sbb jne sub gs int pop sbb ficoml int xor popf dec jle push fwait push and int3 das int3 lock pop mov xchg jb ja clc jne lret cmpsb fcoms aaa loop loop jmp inc pop pop xlat jecxz cld xchg (bad) insl push pop push dec dec shrl jle add add pop fdivs stos xchg cwtl lods xor mov xor add (bad) adc (bad) stos adc cli movsl mov shrl pop test fldt dec and aad dec dec xor sar jne subl sub rcrb (bad) sahf out mov rorb xor jno loopne and lods pop jmp add aam xlat (bad) pop sub idivl jae je flds imul push sti sub mov sbb inc push add sbb pop add (bad) adc sbb bound and mov scas sub fidivl fisttpll push js jns jp ds (bad) (bad) mov les out xchg call dec int stos lods jecxz inc (bad) daa push or (bad) push dec lahf adc into mov cltd mov flds sbb xchg arpl ja pushaw jp xchg test stos es cmp cmp fs cltd pop insl bound rclb jae lea cmp jo pop jb sbb xchg mov ret daa mov adc movl je aaa stos lea fucomp or rol ret dec push push addr16 adc movsl sbb xchg xor jo pop std fsubrl insl xchg (bad) sbb push hlt adc jo daa je in or dec sub pushl int fcoml add fwait test es jnp cmpsl jbe dec test (bad) test in inc es adc mov lods fdivp mov push sbb fmuls push mulb ret daa test aas push mov fwait pushf call ss push jns imul push outsl andl rclb shlb push daa xor cmp aam nop insl (bad) aaa dec popa jb aam (bad) mov add pop lock iret xchg pop cmp mov pop mov pop inc jb inc sub jb rolb ljmp insb loope sbb or mov fsubl lcall jecxz or mov lock bound push dec add push inc jg dec and push testb iret pushw mov (bad) push xchg dec push in fstpt mov pusha cli inc adc and mov inc xor dec fidivrl lods test mov (bad) (bad) js dec enter pushl xchg xchg cs pushf jns cmc adc in or push add loope cs jae in cld sbb rcrb push ljmp lds data16 pop xor pushf xchg dec (bad) sub pop push mov rclb not inc insb cltd and arpl mov (bad) js cld (bad) pop icebp lods cmp bound (bad) jo cli ret and dec cli or add mov inc xor lcall xchg out andl leave cli jo les inc in and sub or loope cld stos jns test (bad) cltd xchg jp sbb lds cmp xchg jns leave add (bad) (bad) mov adc cli mov loopne sub sbb dec in idivl and leave mov je adc movsb push dec fisub push jp sahf jmp mov inc cmp mov dec cld fcmovb neg and jle pop lods xor jb ljmp repnz clc lret xor cs add out pushf lock cmp and sti enter int pop inc sbb nop mov repnz into push and (bad) mov inc insb js xchg mov (bad) outsl mov arpl adc clc add sar cmp (bad) sub adc mov mov in inc mov push xchg popf jge pop icebp sub (bad) jp jge lods incb push test out (bad) fmuls pop mov fdivs insb mov pop jae mov ret push (bad) lds xor loopne scas and xchg fwait popa push xor sbb imul ljmp push jne mov cli dec aaa dec dec and xorl add inc xchg pop sbb xchg (bad) js xchg popa fcmovnb mov push add cwtl insl push mov push fldcw (bad) bnd arpl pop and jne mov and (bad) ds stos in mov aaa ret push mov jle jp pop push push or inc mov push fdiv (bad) adc pop (bad) mov movsb add mov push icebp lret pop mov jp imulb dec mulb add mov notb push jbe add loope mov fiaddl decb jmp pop icebp out fldenv cmpsl out out jmp dec sub das sbb lods mov stos repnz int lret test pop out push push test out (bad) data16 mov mov add jnp (bad) push rcll push jmp cmp cmp sbb or xor jle push pop cld cwtl in loop sarl int repz outsb add sti daa xlat add fsubr jecxz add lahf aad imul push in add inc clc fidiv das iret fs sbb clc push dec iret test xor adc push push mov mov sbb jno inc test lret xchg or mov imul shll or arpl clc rorb push test lods repnz mov inc out ret enter daa jno jmp jnp push mov push jmp cmp pusha xchg push or push in pop fdivl mov movsl (bad) mov rcrb push jae pushf pop mov ja add aam mov hlt push (bad) sbb fsub inc push mov mov mov add cmp enter in jbe pop leave or popf xchg jne inc arpl xchg dec push dec decb loopne enter fisubrl adc fstpt (bad) (bad) xor and add lods dec bound scas xor (bad) ja cmpsb stos sbb ds pop cmp sbb jb imul jmp pop bound add popa cmp leave gs lret int push add bnd pop cld ficoml loopne and ret je into dec (bad) cmp repnz jb js cmp sbb push cmp test inc push push scas addl negl pop pushf sti push add push imul in int xchg cli ljmp sahf nop in (bad) mov xor dec das outsl in xor push das lret test xor push dec das jmp loopne fistl int cmp les pusha repz ljmp jle movsl imul and popa or jp pop pop sbb xor dec lret scas jle dec and ret das shrb jge push stc sub dec and sbb imul mov push inc push xor (bad) pop push or push pop ret sbb rcll call clc out (bad) (bad) popaw or je push sarl xor mov mov jp mov lock (bad) adc cltd mov xchg stc repnz lret call cmp (bad) mov fdiv mov lds (bad) pop cmpsl loop hlt jle cmpsb call cmp jo insl inc mov xchg dec rclb sub mov je jp dec insl (bad) (bad) aad sbb jmp clc fs push add pop (bad) pop sub push cltd ds (bad) cmp ljmp (bad) jae or mov loop in lret repnz xchg inc push pop push je shrb clc mov push mov (bad) ja or adc out repnz jge lock into ret inc aam or inc push js or pop lahf rorb mov xor pusha lret aam pushf sbb pop mov mov outsl mov push rclb and out push test mov add std pop xchg mov aad push xchg and xchg sti ret std out and in sarl aas or arpl into clc jge push outsb jnp inc jbe fcmovbe fcompl inc popf xor idiv inc mov scas iretw mov xchg mov aaa movsl cmc in xor mov aad sub jecxz in mov lahf mov pop popf cmpsl popf fwait sbb mov sti loope pop (bad) add push mov aas push xor dec sarl adc cmp push mov or in sbb (bad) cmc pop sub pop lret xor in sbb aam sub cmp fwait jae jo dec pop or add xchg std call lcall mov add stos pop imul adc fs ficoml adc in out dec rcrl or hlt xchg cmp js gs jno or dec fstpt fwait jno cltd and xchg xor pop xor jecxz push cmp add inc leave xchg cwtl (bad) arpl sbb dec push mov mov (bad) pop jno inc (bad) push add pusha inc gs sbb xlat xor rorb fldcw gs mov lods inc jno cmp adc adc cmp enter lock icebp (bad) hlt je jo mov inc sbb xchg push jo ljmp lock mov sub sub jb push sarb int3 jecxz out sub mov or or movsl outsl jle ret ja call shr pop repnz mov push sbb ret mov xchg int3 push sbb xchg in mov ret ficomp xchg movnti lret pminub mov mov shrb and bound lds ds mov cltd adc push push ss jb lret or mov or pop (bad) push ret (bad) test or lahf fmuls push cld aas fstpl mov loope fwait sbb mov cmc fild sbb sub ljmp in pop push inc cmp shll push lock xchg pop imul xchg leave rcl fimul sbb fidiv fdiv add bound pushf sub jnp add dec lds and push push add iret test imul ret imul adc adc and (bad) les push jl cltd out lock jg mov push inc std add xor inc repnz jae fcoml dec sub dec out stos repz adc add pop jbe pop icebp push fstps jno je or and mov (bad) cmp push fcoml mov push frstor fldt lock add into (bad) gs fsubrl cmp or decl rcrl inc jmp sub or xchg push loopne (bad) push lret add push mov cmpsb add lret push jle jno dec (bad) sbb int3 jns push jle jmp lock sbb (bad) push sbb leave pop (bad) out mov mov xor or mov mov adc or loop (bad) int mov pop mov jb out in dec xchg nop cmpsb and adc sbb push mov gs in out movsb pop cmp jmp jmp xor xlat add xor mov jno adc fisttpl adc das inc pop je sub arpl and dec test sub sbb loopne (bad) scas xor and pop cwtl pop mov insb lods inc in xchg add xor adc xchg xlat inc shr stc mov incl das dec ss mov jo (bad) fistpll cli xor jae xchg js inc jecxz push scas shl pushf mov jae jle push cwtl push scas cs fbstp imul push scas in movsl sub mov adc outsb jo mov rorb xchg add cmp (bad) xchg push mov dec and adc movsb loopne cmp sbb test icebp and cmp insb inc scas std dec repnz mov sub push inc add add push popf xchg mov cli sbb movsb dec popf ror and les repz mov mov jg sub cmp popf sbb inc loopne rorl in mov roll sbb ss pop mov jb pop std les and nop pop int3 leave jae addr16 (bad) sub lods in aaa rcll nop (bad) (bad) jns xor scas gs add jmp (bad) push mov or or ljmp icebp pop fdivrl add sub (bad) lret repz dec adc add dec xor loope pop loop leave shll loopne mov mov xchg xchg adc xor xchg sub icebp sbb dec ret pop sbb cmp repnz std fsts cmpsl call adc xchg aaa sub dec push (bad) xchg fidivrl ds xchg fcmovne dec xchg cli dec push jmp out cmc jb and stos pop xchg jbe xchg pop hlt sahf sub lcall sbb dec mov addr16 push mov pop or iret stos (bad) bound push pop push sbb mov and movl int3 dec jecxz pop jl lods hlt lahf adc (bad) out xchg aad xchg frstor inc loopne call lock inc lcall out (bad) cld outsl jae inc push xchg jno mov jge xchg cltd test mov adc sub lret inc jbe jne fcmovnu adc dec push push loope cld fisttp mov ss push pop add adc mov inc sbb in mov das into mov (bad) push push mov bnd lock cmp aaa mov insl movsl imul dec adc sub jl scas sti jmp mov adc fimul xchg test push cmc add dec xlat xlat leave mov aas fstp inc std fxch stos inc ja iret xor stos sbb or xchg insl xchg mov insl aaa hlt lret mov cmp jle add clc jne test cmc stc mov sub xchg mov adc sub pop int fisub mov fnstsw jmp or inc sar mov jb dec mov scas cld shrl pop and jb in fimull pop push repnz or inc pop nop outsl pusha dec cmc adc xchg ret jle xchg test rcll or hlt in popf call push xor scas jg imul mov mov mov adcl adcb sub and mov cmp mov mov insb mov aad movsl push jp out xchg xchg sti sub test inc mov fstps dec (bad) ret std push iret mov neg lcall (bad) push mov adc dec test cmp sbb mov gs pop or mov cs sbb jg loopne adc out jne pop loopne jno xor lret sti pop mov rclb cmp pop lret out mov inc popa push gs pop nop jnp test xor sub xchg stos sub jmp push and or rclb mov mov inc sub cmpsb shll sbb js or sahf dec sub mov popa cmp cmp add xchg cmpsl out pop lret rcll arpl jmp cmp enter pop mov mov lods sbb mov or adc adc xchg xor xor push mov push decb (bad) loope dec sub sub in popf jmp sub jecxz mov add mov imul (bad) pop (bad) jl add ja cli dec mov js rol or cwtl xor repnz addl outsb lock flds cmp sbb fidivl jbe push pop stos dec push std es jae push xchg jns xchg or int std aad fbstp insb and nop repz jns and in rcll cmp outsb xor aad js js ja cli stos nop or lock dec mov mov pop rcll sar cmpsl movsb xor cmp push adc and or xchg sub scas pushf jno mov mov xlat mov mov inc push ljmp xor fiadd imul mov pop xor out loopne sbb insl jg rcll dec add iret add clc pop lret lret dec dec mov les or mov xchg or sbb sbb xchg stc dec dec sub sbb push pop sub out movsl xor lods imul out inc repnz jo rcrb clc add pop (bad) or (bad) cmpsb fstps dec lret test wrmsr ficompl (bad) cld cmp cmp dec cltd js popa cmp lret insl jg js dec mov xor sarl orl sbb add cld jecxz mov push sti test sub fiaddl je or dec pop insl and inc jne mov push mov imul inc (bad) cmp xlat push test shlb lds push push push out (bad) aad ss lret (bad) mov mov lds mov jmp call fmul sbb mov cmp shll adc inc in sub cmpsb (bad) in lret push fs pop aad and or fdivl movsl sbb xchg call es xchg xchg add or inc push and cs nop rcrl mov insb cld jae shr pop xor or pop lahf pop push pop cmp push rcr sub and cmpsb inc jp inc and pop xchg aam leave push lock xor lret lret xchg std jnp cltd cwtl icebp aam (bad) fisub xchg mov sbb sbb rcll popf pop mov lods nop lahf sub (bad) leave xor cmpsb addr16 inc xchg jge or pop iret sub sub lret and push jo out (bad) call (bad) xor call das stos mov (bad) stc scas fadds xchg fwait xchg push jg push or stc mov adc inc enter push lret dec popf sahf mov mov fstl mov test lea cwtl pop sbbb andl sub mov or aad cmp mov (bad) jne jne jno das dec mov orl jnp xor push ja scas jns push push call out rorb jmp dec xchg hlt mov inc push mov push sbb cwtl mov mov sub (bad) cli pop sbb mov mov xchg in lahf or ss add orl pop adc cmp inc loope and and ljmp sarl add lds loopne lds iret int jp cmpsb rorl idiv fistp fcoms iret fsubrp bound add clc bound jbe push xchg and or adc flds sub lock cs cli adc or jae dec rcr sub xlat jbe fcmovnu dec sub (bad) js cmp cmp loopne adc sbb mov (bad) in pop fwait movsb push jmp mov out sbb adc xlat out lahf dec (bad) jecxz (bad) out pop rorb push sbb mov add or inc pop pop cmp jne cld test pop icebp stc ret and stos les sub cmpsb dec (bad) fdivl arpl xchg xchg mov scas and xchg cmp jbe sbb clc mov inc sbb xor repnz add adc and cld pop mov out out pop dec (bad) jbe ja or mov adc cltd jae leave inc dec cmp hlt pushf add or lahf push dec cmpsl push push jl mov jo xlat ficom das aas push fmulp fs (bad) jge lods mov loop scas xchg aas fmull push mov and frstor jl mov roll out and xchg jmp jbe incb mov bound push stos ja mov push xor notb or in cmp arpl push push jl test ret inc ja popf sbb or scas lds fs shrb mov dec ror mov xchg push or scas sub les aas in je (bad) popa inc adc inc jle push leave jne mov or gs pop (bad) fldl andnps mov adc adc xor push mov cltd pusha mov mov jns hlt loopne outsl movsb add mov repnz fcoms mulb mov movsb mov arpl popa ss js (bad) sub leave jl iret sub sub mov shrb (bad) dec dec (bad) adc push pop xor cwtl mov inc push mov fstps inc ja addl pop or sub mov xchg jae sub icebp addr16 sub pushf movl loopne and out mov and mov mov adc out mov dec fsubrs cmp add cs popa mov insl fs in aad mov and push jb push cs push imul leave mov jmp adc test sub pushf or mov xchg push mov outsl fs jmp arpl inc popa stos cmp push inc lea inc cmp je lcall cmpsb out sbb out (bad) inc dec mov inc jae adc lret outsw push ds xor and sbb mov inc enter mov mov idivl das or gs out out cmp adc and sbb pop frstor movsb js or sbb (bad) rep pop (bad) push mov shl lock leave jp (bad) mov inc mov sbb imul stos out aam pop fsubl sbb aam xchg mov jnp notb addr16 fidivl xchg stos fisubl movsl jp in jb inc call leave repnz inc aas or dec mov icebp lcall scas notl mov cmovs pop jge push loopne mov rorl jmp ljmp je ja sbb ror mov pop idiv sub add jo aaa cmc push ret pop imul xor cmp (bad) jmp (bad) test push fs (bad) or loope test (bad) scas add jb fwait repz xchg add push add dec push ss jb sbb inc aaa cmp jbe loopne dec pop mov test xchg aaa lock (bad) int jmp lahf fimull mov sbb in sub pop pop sub or jae ret mov cmp sbb lods mov pusha xchg mov sbb inc mov test int mov mov mov repnz fisub mov fdivs rcr lahf cmpxchg stc xor clc cli cli dec (bad) es jb sbb rcrb (bad) or or add cmpsw aad jecxz inc repnz add mov mov cmp (bad) pop jecxz and mov sti test xchg enter adcl mov mov ljmp pop inc dec inc cmp cmpsb sahf je movsl dec lods (bad) inc inc jnp das daa movsl jnp inc adc mov add insb push pop dec cmp mov into xchg push xchg out ret iret push sub pop mov cmpsl out adc and out loop test xor mov mov dec cmp xchg stos sub test femms lods pop (bad) test push mov rol mov clc add inc or std mov lock ret loop push imul test pop sub inc aaa mov add cld scas movsl movsb push xchg subb mov aaa addr16 ja ss add bound inc (bad) mov mov sub in lock add (bad) stos insb inc xchg jno push cwtl and xchg shll inc mov fiadd and or rorb xor sbb and xchg sub icebp scas test jge cmp sub jb pop push sub mov xchg dec xchg je dec xchg and jmp cmp xchg (bad) dec pop cmc ss and ret lods sbb mov xor aas (bad) sbb lahf dec mov lods lods pop mov call rolb jb es out dec or icebp jl repz (bad) (bad) mull xor scas cmp mov in jnp (bad) push orl test mov mov cmp arpl sub mov dec clc jnp sbb fsubs adc (bad) repnz sub sahf icebp push mov adc outsb mov loope into fwait or jno inc int vandps mov leave pop cmp push add push cmp jnp xor add imul ds pusha js test imul sbb sbb jb sbb in jg push in push in jns xor test push sub out (bad) jbe mov xlat xorb push adc xor aas mov out inc pop popa icebp pop jno lahf mov or repz pusha pop sub cmpsl pop pop adc ror pop jmp mov mov js pushf jle sarl mov pop les call sbb mov cmp scas out das jne push xor adc jo mov jl cli (bad) insl sbb push mov sbbb js sub mov xchg inc mov xchg arpl push (bad) sti jp rcll xchg jo jo loopne sbb js shlb sti push ficompl ret sub cmp ret cs and imul lods push mov clc test inc pushf movsb sub sbbb sbb xor dec xchg dec sbbl lock leave mov repz sbb cmp jne in push jmp xchg (bad) jmp mov sbb xchg ret mov push inc add cmp lahf add mov daa fiadd ljmp sti cmp mov inc push jecxz test xchg jo in mov jno test adc sarb (bad) mov fisubrl (bad) stos add sti daa mov in add and mov repnz movsb ja and cld outsl pop jno inc xorl (bad) mov mov mov mov cld hlt cmp cli cli sbbl pop lods ds sahf xor repz fwait push mov cmc push fsubrs cmp jmp push and mov (bad) cmc push sub jo pushf and mov test dec subl call xchg jg aam adc outsb jns mov dec or dec je add inc pusha dec xor aad iret add jbe jbe push pusha sbb pop xchg lret add xchg daa nop mov lds popf or sub push push jp push sbb inc sbb adc mov jb repz fs test sbb stos inc pusha cmp mov pop pushf cmp xor rorb cli ret (bad) (bad) pop fldenv mov rcll nop pushl fnstenv and call mov test movsl and mov js mov andb mov sti pushf xor idivb dec inc loope out ja test and cmp sub into cmp mov lret push mov outsl jo test jo push lea (bad) lock lret mov out cmc ret pop fs pop sub daa out mov jbe cmpsl cwtl ja std cmp push pop and jl jl popa hlt mov and sub ret sub hlt movsb cmp out and push loope dec pusha mov in mov mov (bad) (bad) into sbb adc cmp mov dec test mov or js inc xchg dec les jbe gs add mov pop imul xor and icebp hlt scas das mov enter rcrb scas clc pop test sbb leave sbb xor movl sbb push mov cmp scas push or mov in mov jo daa loop or out pushf fstps xor iret fbld scas cmc push xchg sbb daa fisttpl mov dec into pop lea push rcrl das jnp in (bad) push mov sub pushf test popa (bad) sbb daa sbb inc pop inc test je cmpsl add popa hlt leave or icebp sub mov loope mov cmp scas std jbe pusha push subl (bad) dec add add jns adc mov and stos pop xchg jnp aas push push mov movsl and mov adc mov dec xchg xchg enter insb je lods insl lods xchg cmp pop icebp mov xchg adc xchg and mov ja inc lret mov gs cmc popa clc clc ret adc sahf lcall or imul fbstp jecxz sbb pop add repnz cmp daa repz add mov mov sahf js mov xor add pop cmpsl pop psrad xchg cmp sbb iret daa insb test aaa ljmp sahf aad xchg cmp xor into lods inc in jne nop push pop loope icebp pushf jbe aad mov in aam xchg cmpsl push jbe (bad) rcll jecxz pushf lcall add in nop xor movsl push dec sub addr16 call pop rcr lahf mov cltd adc sbb pop ljmp fisttpl (bad) repnz and mov ss icebp push fsubs addr16 mov mov test cli fisttpll inc iret out (bad) add leave out mov jbe lcall dec cld or xchg or mov test sbb mov mulb scas xor fs dec sub xor int3 decb and push add lea mov and adc sub jnp nop fsubl xor andb adc imul xlat jp jmp pushf inc ja fisub xchg adc stc cmovl lods (bad) pushf push mov popa out jbe mov (bad) lods pop aad in push mov push mov jno sub js je cmp and (bad) pop xchg mov (bad) fistpl jnp mov fnstcw sbb aad pop es arpl xchg mov mov cli pop or nop xchg dec loopne fisttp andb push mov leave inc lcall divb shl nop xchg xorl mov into mov xchg les xor xor js mov lock les int3 pop mov in mov xor adc adc jmp out movb jb push js out sbb xchg imul fcomp mov adc push xchg add lret mul clc test in adcl icebp mov sbb cmpsb adc push fidivrl mov sub jl mov pop xlat push scas pop add add pop push mov and fmul adc xchg popf rcrb mov sub test push mov js (bad) out repz fmuls imul pop xchg and in push xchg cmc cwtl mov add xchg xchg mov (bad) (bad) xchg ret loopne outsl cmc inc cli test enter cltd sbb adc std leave jbe inc mov sbb cmp stc aaa or call lods repnz jmp nop push dec add cmp push and test outsb lods stc push or in testb sub test dec sbb adc and or mov add or js xor mov jns sti sub ret sahf jge inc sbb cmp add cwtl pop dec clc sti mov mov sub lcall icebp ds dec popf enter jmp in or in arpl xor inc popf jmp sahf scas cmpsb test mov daa mov ljmp negb nop nop stc mov add adc imul cmc inc mov mov pop xchg test pop mov push mov add pop mov scas xor jae push xchg jo sbbl jle int3 mov lret loopew call and or xchg and jle and pop sub nop mov lea add rcrw push fs dec cs push std (bad) push movsl repnz loopne xchg rcrl stc mov in jle cmp imul fistl cmp or lret shlb ret popa pop push sub (bad) in (bad) jb xchg repz in rcrl lret call jg test jge loopne and xchg or stos cmpsl jns inc adc fldl mov xor ret insb lock push mov lods xchg add push out (bad) test psubusb xchg jl (bad) (bad) enter jns cmp and and xchg push cmpsl insl popa mov sbb in xor jb or sahf push int3 (bad) incl enter pushf imul call (bad) xor shrl jmp (bad) xor nop sbb mov xchg and and jp mov aad jmp les mov push xor jl aam fwait jmp add inc dec adc sub jle shll dec and inc ljmp andb mov mov mov push mov shrb cltd imul mov pop outsl insl ja arpl mov stos push cwtl inc aad sub mov es movsb xor cwtl push je fsubrp pop pop mov mov jmp loope jge mov mov push (bad) imull rcll dec aam add repnz addr16 cmc sbb aad dec notl or je iretw ss pusha sahf (bad) dec sub nop mov jl mov dec jg icebp sub sbb sub (bad) aaa repnz lds pop dec cli mov push push lods mov or loope cs fst or ds test js ror pop sub std ret stc (bad) push out push movsb sti sub xchg jle mov clc fdivrl and jle pop mov inc push insl or jb (bad) imul out or inc imul xor stos mov inc jb dec push lcall aas cmp sub add lods xor add or clc xchg (bad) adc dec xchg dec je test mov jbe lret or xchg aaa mov inc je out jns mov jp lret cwtl cli popf sbb push mov call cld movsb loope das mov leave cmp lret jecxz in imul inc xchg imul add movsb dec mov sub or in and out dec (bad) mov movsl jne or lds es fcomip int3 add xchg cli dec aam jno xchg jp xor out loop sub jns in ret test add dec ret ljmp jge cmpsl jbe cmpsl mov lret mov insl cmp jb imul dec and or and jns and cmp sbbl aas leave xlat xchg push ss andl (bad) repnz in lock insb (bad) jbe test inc (bad) aaa scas daa xchg (bad) inc push mov push adc mov and pop leave dec mov dec fdivs mov and and dec fs rcrb mov mov and xchg adc cmp push cmp mov cmpsl push jnp mov rolb pushf div jnp scas cmpsl fwait jne mov mov in jbe push adc jmp mov hlt or repnz les mov xor xchg jns test mov mov xchg xor sbb mov mov repnz jae add mov insb mov iret (bad) (bad) scas jnp push push or push mov add and mov test cs lock bound in std js cld mov dec jne into enter add xor jns dec ljmp fnop aam inc rcl jecxz jo mov pop addr16 cli mov test mov add rol or mov icebp jno mov jbe inc jmp popa ja icebp and push aas test pop sub movsl mov repnz sar inc mov (bad) and mov loope aaa mov daa ss lea xor and pop rcrb nop ss mov insb rcll fsub repz mov adc pop dec xchg mov mov push xor add pop scas insl test test and into (bad) cld mov lcall rolb mov rcrl pop daa or into loop and adc pop adc jnp inc mov int3 add xchg pop das les lcall in (bad) adc sahf xchg mov nop sbb lret scas ffreep mov sbb sbb pop mov insb loop adc mov test push lock or dec mov dec mov daa daa jnp hlt sbb mov add xor sub mov shrb xor xor sub sbb enter sub mov ret (bad) in mov subl jl lock mov (bad) arpl fiaddl int3 sbb popf pushf clc mov in cwtl es hlt pop sub mov loop adc das and adc andb xor cld cmp sar push or ss and or push mov lret test das xor popf jmp out lock mov outsl sbb fimull xor fdivrl outsb jno xchg sub (bad) or mov insl rorb or sub scas and xchg and add fdivp lds std lahf je dec cmc jg imul dec out or or int3 push jbe cmp clc roll mov mov aas sub adc stos sti xor stos in xchg cmp dec ljmp xor popf cld test mov nop repnz mov mov mov ss pop jmp (bad) clc (bad) and mov xchg clc cmp out icebp push je and gs push (bad) xor sbb fcomps and sar push (bad) pop mov movsb (bad) scas imul xchg add test push jge (bad) xchg popa sub and jbe repz xor push orb loopne mov jne,pt (bad) cltd stos inc xor and mov lock and jnp xor mov xchg push in xchg or push andl clc inc stos inc push jo es mov push out popf mov sub mov leave add fmull adc in sti ljmp ja std out jnp fdivrl leave vxorps cmp outsl cmp pop or dec std cwtl (bad) mul and ljmp pop outsb pop (bad) dec add sub fdivrs inc pop mov lock lods adc (bad) and icebp es jg (bad) jo aas jl push test xchg jl push mov loop out add sub pop inc lcall jmp or push xlat aam imul mov jmp insb jno sarl inc add push and lahf inc in and sub push outsl rcll in int iret push (bad) mov jl jae (bad) mov imul lret cmp (bad) (bad) popf es loope fmull xchg mov (bad) loop fstps out jae sbb push fcoml aam dec sarl mov cmp dec push ds ret jnp pop dec xorb rcr (bad) and repz xlat aaa fs xchg fcmovbe mov stos leave pop push ret pop jnp sub sarb mov sub addr16 (bad) jno dec popa js pop mov jmp push adc sti test inc jbe,pn out and movsb jne and sub dec inc adc fcmovbe jg out cmc xchg mov dec ja mov jns inc inc int leave mov jle leave imul les icebp sub jmp bound or iret jno js pop stc push fstps pop pop stc pop inc in leave xchg cmp cmp xchg outsl cs rol xchg xchg fstpl leave subl add mov pop push jg dec xchg leave mov dec jg xchg push xchg js mov xchg jp repz fisttp push (bad) lods add mov hlt mov xor pop int sahf lahf mov test popa sub inc in test lock cwtl xchg pop (bad) jae cmp mov pop push movsl mov xor dec fiaddl mov or outsb scas push repz mov into fsubrl sahf push fdiv mov stc int push mov xabort xchg outsb scas adc sub jne or (bad) add lods mov das pop lret mov dec push aad and xchg cmp mov push stos pop mov xor das aas imul (bad) daa ds sbb push add ficompl fmull cmc repnz dec mov je inc lods in mov inc push ficompl fwait sub mov jle clc dec les lcall jp (bad) fildll adc imul test test mov jle insl repz sub mov mov dec mov clc adc xchg push mov inc popf cmp mov jnp dec fwait inc fisubrl in pop jae mov sbb pop adc mov cmp xchg push aam clc out (bad) mov daa iret sub mov sti mov scas (bad) jnp push xchg fisubl add push lret mov xor cs in or xchg in pop push xchg and xor in js dec fistl jns aaa test jl jmp jno psubb sahf outsb and xor push and aas sub push push mov mov pop push push (bad) loop sbb stos mov adc fldcw int stos rcrb out push fs mov and sbb push fdivr rcl mov stos sbb jno sbb in outsb ficoml outsb xor enter jmp and out es mov ret mov cmp sub fwait test movsb push mov push push xchg sbb jmp das into ret lods aam ljmp (bad) mov shrb lret push dec or sbb add or out cmc cwtl pop inc mov cwtl leave cmpsl jecxz in rolb mov andb cmc sbb ds fisttpl mov clc repnz mov or pop mov mov mov dec sub xchg sahf fstl add sbb pop or xchg sub out mov out inc aad or sub jg and ss or or or cmp jle cmpsl push mov lods lcall inc movsb xchg pop dec lods aaa iret mov cmp cmc mov dec test js sub lret or sub in add ss leave in lods out cld xchg pusha xchg int je outsl fdivs cmp rorl sbb mov sahf andl xor test cmp aad fidivrl hlt (bad) jbe fsubrs in loope mov sbb mov mov xchg mov mov mov jbe (bad) jbe xchg mov jp and repz xchg dec dec das fidivr jmp (bad) mul fbld mov in arpl cmp in imul xchg (bad) out mov iret jp push push pusha in test insl rcl arpl leave idivb or cwtl or jmp sub rcrl pop dec adc dec stc fiadd push xchg push add cmp mov pushf xchg xor dec (bad) test xchg cltd xchg aad sbb and rcrb mov sbb inc je jp gs mov mov cltd mov das mov in mov ds mov pop shl pop inc fxch dec add mov inc ds movsb in jno add jp (bad) fldenv orb sbb or adc inc sbb aas int3 sbb inc ljmp bound lods jo mov in mov lds repnz rclb dec in dec mov sbb in (bad) sub cmpsl je jnp push icebp pop fdivrl repnz rcrb or decb inc mov push inc (bad) cmp dec (bad) into mov inc js push nop push js mov push jecxz fisubr adc ret pop jp test mov fisub test adc mov rorb popf xor scas ficomp sbbl adc cld movb rcrl rolb mov andl jo in xor and push jge shll stc dec in dec xchg pop lds mov push adc mov ficompl stc (bad) scas jl jmp cmpl xchg aaa cwtl int cmp xor loop and jmp or mov or jne rep cmpsb pop push stc dec out mov mov int3 inc popf repz xlat das or ret sub scas gs jl xchg mov adc (bad) push push fsubrl jl mov int into fbld mov or dec sub sub mov iret shrl daa sbb sbb lret mov stc test arpl stos adc mov add loopne insb sub mov jmp test push dec jnp (bad) sbb out push jns lahf adc push fdivl cmpsl test popf hlt jecxz ss in loopne pushf xchg dec mov iret aaa bound pop sbbb outsl add push push sub push mov mov in int3 enter shr repz jge adc mov andb or or in mov jp cld adc pop sbb sbb and push pop rorl xor inc lcall jecxz decl dec sbb xor dec push push popa fsubr cld mov mov mov mov out xchg icebp mov jne bound dec add xchg dec test add xchg repnz popf inc repnz pop (bad) cmp pop sbb ret xchg jl imul mov adc xlat (bad) cmp pop jg adc cmp cmp (bad) mov add les push or mov jecxz popl out in or inc or cmpsb mov push push sub (bad) (bad) mov faddp mov xchg sbb cmp inc dec addr16 aas stc mov cmp in lods push int3 sarb and pop or push mov jg add jmp add in mov leave xchg call ret inc popa std add sub jg pop (bad) (bad) xor data16 pop xchg mov mov outsb cmp lcall dec loope xchg insb loop adc mov gs icebp fwait xchg dec cmp or sbb add pop mov int mov mov cli hlt sbbl jae sub fdivrl divl add jp movsb cltd mov lds push sub jl mov add mov push or jmp sbb jae repnz push (bad) (bad) cwtl and lret push aad aas push cmp mov fbstp outsl pushf gs jns fstps dec mov fstps ror jne sbb or iret inc dec xchg dec cs repz mov out jae sbb xchg sti adc or or ja test xchg aas divb cltd std cli data16 mov cwtl imul xor cmpsb cli icebp cmp sbb sbb sarb (bad) pop loope fmuls mov mov les inc adc les out testl rorb pop push sub iret ljmp adc push xchg nop xchg or std push out jb aaa out aam ficom jbe lcall outsb out in sub sub out mov adc cwtl insl push in xor lret or adc mov push leave out rcrb cs mov inc insl or in scas jno cmp xchg sbb outsb sbb push mov cmp gs sbb jne adc aam dec cltd jle movb mulb adc mov addr16 scas addr16 popa xchg sti xchg stos mov cmp xor daa mov pusha lods loope outsl or push sbb std in cmc or xchg push inc fisttp vmovaps imul fidiv (bad) notb sbb rolb xchg pop jle mov pop or mov cmp adc mov mov and jg cmc pop xor int jbe mov sbb jae sbb test fsubrl dec dec out out ja cmc lds inc mov push push out fisttpl mov cmp xor or or insl rorl push xor ss or int js sbb or in cli imul xchg mov lods pop xor jb xchg call jecxz pop pop sbb jmp lcall pop dec out dec scas cmpl lds inc dec sub push mov lret xlat ja pop mov inc cwtl jle fsqrt pop push lods xchg mov add jg insb insw lcall jnp xchg pop dec fsubl xor xchg aad dec mov inc stc pusha push dec sub (bad) insl mov and push flds sahf adc mov adc sahf (bad) xchg inc out xchg mov stos cld mov xchg lret dec (bad) lock shrl inc or imul pop inc std mov movsb adc popa inc mov (bad) imul aam xor mov add pusha lahf cmp jle or jno adc mov aam and or push daa jmp aas cld repz cmp xchg and je adc std sub mov repnz pusha jg jp mov cmp ds (bad) fldcw sbb cmp decl lods ret dec pop mov shr sub jo enter xchg aam stos shrl sub insb mov push imul (bad) sahf cmpsb std imul dec repz pop das outsl iret mov in mov inc loop jle aam jne xor ret adc push mov pop test cmp lret lret sub mov jl inc add push mov and imul aam and fisubl movsb test cmp lods cmp and push inc jb imul stos (bad) ljmp cli cmpsb mov xor lods mov inc popa rolb cmp test bound xchg int and xchg lret and lds fistpll dec inc (bad) sahf pusha sub xchg imul fwait sub jno movsb shll loop in pop xchg mov movsb fcoms iret ja jbe inc push mov out jmp call xchg xchg or (bad) rdtsc rclb sbb arpl mov bound enter lock aas sbb jne faddp lds add xor cmp data16 jmp test sub insb sub les mov mov push nop in mov or jae xor adc arpl arpl jnp scas mov and lcall xchg sub gs inc (bad) lret aad decl loop cmpsl xor sub fnstsw push lret sub jo ss addr16 fdivl pop loop xchg xchg xlat sbb ljmp xor push dec lahf push add data16 stc fwait mov std cld dec sub sbb lods sub loope test add dec fistp rorl sub sbb (bad) ss jns jl jb add and or fldt mov jnp and cltd and pop mov xchg fcmovnb xor mov sbb (bad) adc pop lcall enter xor add mov cltd negl and dec xchg cmp or in xchg loop out inc lea movsl insl push repz sbb sbb lock in jecxz lret jmp fstl cmpsl into push mov insb sbb sub fisttpll inc pop cwtl push testl mov push xchg movsl adc cmp add lahf pop jmp movsl int3 cmp ret xchg (bad) test (bad) cmp sbb mov out test xor and inc sbb mov fmul add inc lahf inc mov and lcall mov xchg mov in cltd ds ret add push jo dec in push xchg xor inc add jge jl loop xor adc sbb xor add imul mov adc pop rclb xchg je xchg jecxz mov ljmp out les pushf dec jo scas jg adc lds dec mov xchg (bad) and hlt mov cs push (bad) iret icebp (bad) nop mov ds mov shrb xchg sbb int3 add out dec lcall pop stos sub fs add incl arpl push mov fdivrs out fdiv out jae loop dec dec inc (bad) xchg inc xchg loopne jp rcrl test into xor jecxz sbb in pushf cmp pop popa mov pop push enter (bad) repz cmp insl dec cwtl out jge adc lahf pop scas or adc mov jmp push rcl fnstenv std add aaa sub cmc pushf push out push sbb sub lcall jb insb clc loopne pop jle imul jge testb aad divb xor xor inc jmp jne bound lret repz push cld clc arpl data16 pop xor loope xor fmuls mov sti sbb mov fidiv mov loop jecxz mov loop dec xchg and mov cmpsl push sarb lock lock loope aad inc inc pop mov icebp pop adc insl dec pusha pop push (bad) mov push inc loopne cmpb jno movsb mov out ja inc incl jns push repz jae sub in (bad) xor rcrl ss sub pop fs je ljmp or ja pop push popa fsubl loopne mov loope jnp and lds mov aaa rorb insb cmp mov lret rolb popl push xor adc pop lret ja leave jns inc push cmp xlat inc jge xchg mov mov addr16 dec fldt xor mov pop outsl ret addb in mov mov stos aas imul ja cmp add jmp or stos and ds pusha inc or sarl sub out sub xchg sub push add scas int repnz lret pop mov ja push (bad) ss xchg (bad) cmp mov hlt jae mov fisttpll out adc (bad) out jp sub loopne shrb lds cltd lock xor sbb mov mov in pop hlt sbb cmp movsb mov sbb inc or loopne xor jbe push sbb adc insb xor lds imulb lcall pop rep mov (bad) jp adc xchg lret stc (bad) adc xchg enter arpl xchg and or mov or test or add xor frstor outsb mov xor out iret les mov adc xchg cmpsb mov into push add sbb mov pop sahf ds je pop sti es jmp mov mov ja sub je add cmpsl mov ret cmp add (bad) jno lret ss iret lcall xlat sar xchg push or iret sbb (bad) push or cmpsl jge mov ss (bad) mov lods (bad) mov lock mov outsl repnz jb mov aas loop and sub icebp icebp nop addb sti inc lods mov cmp subb push cli icebp push test push xchg push dec andps push jbe mov pop lods es xorb dec rolb or fldcw dec inc divb or adc (bad) mov lret mov sbb cmp sub ret out out pop inc js sub push pop pop arpl std outsb popf lock mov mov xchg adc rcrl fcmovnu or inc in adc stos dec stc out jp out dec aad sub push adc lcall dec push sub xchg (bad) fisubr ret cld lock ss idivl push push mov add sub xor lahf inc jle jmp push imulb subb xor fdivr xchg fisubl out adc inc inc out negb or cmp mov xchg arpl jne cmp movsb sub dec and imul (bad) iret pop sahf lea and jbe xor loope ss into and xorl inc pop push in stos stos inc add es jbe mov fnsave or push pop shrl rorl mov ljmp sbb movd mov (bad) mov push mov sub lds das cmp lods rcrl int3 mov repz dec popa mov hlt and js outsb xchg inc jmp decl pushf cmp jge imul hlt or cmp mov xchg popa cmpsb fs idivl mov add fsubrl test add sub outsb mulb pop std repnz sub arpl call xchg sub xchg pop cmp pusha (bad) icebp icebp sub and (bad) loopne sbb xchg (bad) jnp adc movsb cmp dec push mov inc iret xchg aas mov data16 das (bad) cmp jbe test push push push (bad) mov xchg ss addl jne lods std and inc fstpl loop js clc xor dec bound les inc stos les xor mov mov leave pop inc jo push sbb mov push (bad) mov mov mov cmp mov add (bad) (bad) mov (bad) dec fwait cmp mov push fwait adc pop mov in pop mov xor xchg sbb and mov movsl cmp outsl fs std bound pop cmp leave or ds push sub aaa les jne aaa mov es das push loope call outsl mov arpl add xlat stc xchg pop cs lea mov dec xchg (bad) xor mov xchg cmp xchg in dec push or je mov mov cld pop dec xor imul or sub bound pop arpl arpl add push data16 push aad iret js adc inc iret mov (bad) lret inc je push test or popf sbb lods inc es movsl rcrb repz (bad) test andl adc or fs xchg push dec and out mov addr16 testb js jl mov xchg jnp rol fcmovu out push jmp xchg insl xor outsl leave xchg mov add mov dec mov punpckhwd fiadd mov sub cs xchg clc adc movsb incb sti cmp cmpsb push stos pushf jbe xchg test fnsave aas popf cmp std mov js out fdivr in rcrb sub xor icebp mov notl in jl jno lcall loop xor insb clc inc sub push xchg jne jg dec enter pop jl mov mov daa xchg lret stc mov pop scas mov add repnz or sti addr16 sbb and mov inc es cmpsb and ds push jmp sub lcall dec idivl pusha jae lods ret outsb outsl jns push movsl sbb dec add adc push pop imul jo pop iret lret sbb adc xor out lock imul sbb test push pop test lret dec aaa loop pop fwait cmpsb mov jo ret mov lock cmpsb inc enter cmp adc fwait nop xlat movsl mov pusha lahf pop cmp mov sub jg loop into and mov xchg add inc mov stos xchg mov nop sti sbb subl nopl shl shrl xor shrl outsb arpl ret mov sub leave sbb or mov repnz es pop jl cld xor jne rolb xlat and push aaa (bad) push xor es repz push push or adc iret mov pop and sub pop jo or imul lahf call jo scas sar push pop nop push mov push in imul sbb adc into push imul inc sti not add mov fstps dec insl jp fcmovnu sbb jecxz std sti push inc pop add push lods xchg jg (bad) fiadd repnz fld shrl jecxz not and or push push and and sbb lock into push push test push daa cmp insb jnp fdiv lds jbe cmp dec lret enter repnz ja sbb imul mov stos in pop mov icebp int xchg sahf aad loop pop sub pop mov cmp nop and sarb push je imul iret ret inc jmp out sub xchg mov outsb iret and cmp lret lret dec xorl jmp lret mov and (bad) mov jbe lods pop adc jmp ljmp jge mov inc icebp imul enter mov dec sub sub jge jo iret icebp rolb hlt fnstcw aaa inc popa mov lahf push or push out add cmp cs jns inc push mov mov (bad) cmp aam arpl rcll xor jo mov (bad) hlt adc (bad) fdivrs cli imul jae loop xor inc outsb mov sbb ds adc test pop jnp sbb fimul in out xorb cmc fwait push or addr16 pop pushf test sar lods cwtl xor (bad) testb and push cmp ret scas (bad) es xor xchg je popf jle ret ja inc adc test pop pop ja cwtl test push psubsb in mov into push xor popf pop inc jmp cmp repnz in rcll sti and pop dec mov add dec dec and sahf iret jo or mov scas aaa xchg push cmp stos ret leave dec sub popa shrl fimull into or fistpl (bad) mov dec mov pop xchg iret data16 andb add cmc jge notl mov sub adc mov mov sbb mov ret sbb pusha lret out jmp xor dec inc cltd sbb nop lret ds xchg movsb imul popl aad ret pop pop and aam iret imul repnz or popf jnp loope stos inc (bad) mov xchg test jae or test clc xchg pop rol xchg cmc dec test add jmp xchg inc sbb cmp ret sbb dec inc sbb clc insb rorb adc (bad) fwait push and (bad) sbb or jle rcll mov inc mov sub mov jle mov into pop (bad) scas mov pop adc xchg push or xor lods es sahf cld or mov mov sub ret push jl and add inc call add and addr16 jnp adc inc imul push jns push xor nop aam fsubrl (bad) sti imul shll mov jmp push push xorl xchg test mov or cli xchg xor cld pop mov pop rcl add lahf cwtl add adc cmp or imul fldl data16 xor sub sbb cmp mov cmp clc adc sub sub xor ret mov xchg mov aaa xor das stos jnp pop sbbl loope cmp jl mov faddp and test mov aad push mov stos out das push ljmp jge mov cmp sbb pop xlat jge and add inc popa mov xchg sub (bad) xor push add push mov or adc mov sub jecxz xchg aaa push jo cmp rorl movsl xchg jae and push xchg les cmp mov fs gs jle clc lods add jl lods jne andl xchg (bad) or jbe pop pop (bad) ja sbb fdivr out cmpsl inc and sbb push rol push into mov xchg fild push inc jge xor hlt add mov repnz push jmp and cld cmp add sahf loopne in xchg ss jae or cltd (bad) mov (bad) imul mov sub xchg rolb ret xchg (bad) jmp fsubr xchg ljmp mov addr16 pop mov pushf cmpsl mov rolb jnp cmp outsl adc sub push mov jecxz popa push es sbb lds rorb sub cmp inc (bad) test lea mov out mov ror popa stos sbb addr16 lahf loop cmpsb sbb jnp or enter stos fildl jl cld adc adc and notb movsl je pop mov pushf xor push jo pushf cmp in movsb ret mov lret pop (bad) mov adc xor fldenv in mov xchg xchg xor add cli (bad) push insl or sbb int pop cmp aam addr16 bound xchg push lods xor in andl enter frstor cli insb cwtl sub pop sahf aaa jl sbbl cwtl and pop sbb imul int3 enter or jmp mov cs (bad) (bad) xchg mov mov lods cmc inc lea call gs jp jne push and (bad) jmp aad pop sti mov cmc popf imul rclb sub (bad) stc jb imul add and dec jbe mov pop adc jle xchg adc in test push lods mov out daa xchg lea pop imul xchg jle ret sub jb out mov mov xchg sahf xchg rcrl cli (bad) mulb js sub fsubp cmp movb xchg add mov into fstpl fisub cmc stc ds jnp cmp lret cs jnp in jo push cmp pusha adc mov ret repnz test xor mov xchg mov (bad) jae mov imul push (bad) int mov xor or and fimul testb sahf movsb sub mov lahf mov adc adc inc xor es ja loope sbb (bad) (bad) int3 gs shr and insb sti mov push mov ja mov jb cmp inc jmp jmp jno (bad) lds inc pop xchg add fisub inc pop push lea outsb (bad) pushf pushl sti xlat push outsb or in xchg push mov leave mov loopne mov sub outsb inc add mov stos add sbb test ret rcr add and clc in aam gs lret mov lret add mov sahf mov loopne push cmc bound sahf loope mov mov dec int3 adc jns enter push nop fstl int adc shl ljmp push lea inc push lahf mov inc jns xor outsb ds cwtl pop push dec imul cmp sbb fidivl mov mov pop push ret ret fwait add dec sub xchg inc xchg dec and daa fist pop jb push mov aam enter xchg repz loopne xchg test mov dec and out inc outsb popa pop mov push in lret adc iret xor dec adc jno fwait stos pop mov add (bad) and xchg call test pop cmp cmp (bad) pop mov test or sbb out jno lods dec mov ds outsb xchg push push lds xchg fcoms add ret enter outsl pop fs inc xor lods int3 cs in je dec lods mov jmp cs mov enter xchg inc sti jno rol jns fidivrl lods xor mov sbb mov xor add sbb mov push push xchg dec mov fbld fiaddl movsl (bad) pop push lods jp loop xlat pop push xlat call jnp inc adc sti (bad) mov adc (bad) ljmp jae in xchg xor test adc mov movsl lods rcrb push ss sbb (bad) icebp add pop pop fcmovbe mov subl xchg sub fldt sbb fidivl scas aad mov jbe xchg push mov test cltd mov lods push inc lahf add call repz push and fdivr ljmp loopne stc imul sbbl test cmp ret mov inc shrl jne pop aaa int3 imul stos mov or lds push ss and (bad) inc aam adc outsb ret or lret xchg outsl js out popf lock lret mov sub call xlat adc sti dec add (bad) imull adc addr16 test cli sub popa jne fwait arpl mov push sahf pop mov adc dec test cld mov cmp insb pop pop cmp daa add push cmp mov or mov push cli xor nop cmp adc clc lods arpl push jb mov popa arpl es nop fs jmp (bad) int jb cmp jnp inc daa movsb insl sub jle movsl pop outsb lods dec aad clc cs lcall clc scas imul das insb test cld push pop leave aad jmp into mov outsl imul fmuls jle sbb in sub inc arpl cmpsb pusha sbb out xchg test lcall and insl repz mov lods mov movsb mov fdivrs mov fbstp sub pop xchg test jp lahf mov sahf je pop cmp dec xchg adc popa adc stos and pop mov loopne add mov cld sti pop out push call fs xor pop les dec fwait mov pop lods sub rcrl jb add mov add mov and or testl mov xchg adc rorl mov xchg and je mov (bad) test es sub mov push popa fnstsw (bad) and aaa mov pop int adc pusha adc sahf and inc fwait push fisub out inc push lea push ds push sarl out add jge faddl sub adc mov jns lds add lea lea (bad) loopne scas daa inc (bad) shll and inc ja lds je lods hlt popf outsb aaa mov fist push push inc mov mov adc pop jnp,pt bound pushf cltd jge or ss jns in sbb jns mov push sbb ret mov mov lret adc ljmp rcrb (bad) sahf mov (bad) ljmp sub daa sbb adc dec idivl inc xchg inc and movsl leave cmpsl xor fstl les xchg push add (bad) mov scas js sub aas xchg fwait pop fnstenv mov hlt and lcall and call add incb mov aad push pop cmp ljmp (bad) push jmp out enter sarl xchg ja aad ja,pt mov xchg xor mov in lcall jbe dec add sahf add jp push cmp pop jb add xchg mov ss or rolb les push fs jecxz push inc mov cmp pop add enter adc and xorl insl jmp mov repnz adc dec mov xlat (bad) xchg mov xlat test jo jne jmp pop xor push call jb push add sub mov rep jecxz add mov xchg loope add sbbl in inc leave fs ja or dec scas mov repnz adc ljmp stos push loope mov rolb jns or insb jb push ljmp imul xchg or cmp pop add test leave xchg pop fnsave imul ret cwtl (bad) and push das inc paddsb mov addr16 sbb lods ret shrl ret int rcr xor cmpsl icebp and loopne,pn ret mul push or fnsave gs loop xchg in stc push das and movsl outsl ds arpl sbb xor lods leave ret mov int loopne fsubrl mov icebp jecxz cmpb jle mov jmp mov mov popf aad stos leave xor inc mov pop addb jle cli fnstenv mov fildl (bad) repz mov das pop int3 ret data16 or lret fbstp das push (bad) or imul dec mov repnz mov lcall push loopne add fisubr loop test rorb mov nop xchg aam outsb sub cmp mov das push cld mov (bad) mov cmc pop mov or jle pop xchg js fwait (bad) mov ret fdivl not add xchg add int cmp dec test test scas pop add cltd xchg fcomps outsl add sub add sbb lahf lods push movsb sbb lods and daa mov mov sbb les mov mov push pop fdivrs pop sbb enter in mov mov das pushf mov add dec ret mov cmp dec cmp sbb jo icebp jns decl mov fidivl daa xor sahf xchg fdivs movsb icebp push popf ss jae push add orl sbb xchg sbb loope cmp cmp mov jo sub rcll xor sbb inc and jmp nop repz dec enter popa fdivs cmc lods xchg stc loop push (bad) arpl pop call out popa xor push add adc sub xchg (bad) or movsl dec out loopne adc dec sti in add cmpsl xchg push xchg cmp xchg mov cmp push scas test repnz ds je enter lock inc or xor ret mov fwait stos mov cmp dec sub imul lcall les pop fisttp jp je rcll data16 (bad) cmpsb mov arpl xchg jp pop fnsetpm(287 sbb push lcall ljmp jge mov (bad) test bound inc imul cltd in push mov lock sub addl inc lods or mov movsl mov or aas stos mov (bad) mov call insb in jns adc dec lock fwait loope daa mov push jmp cli fcmovnu stos xor movsl dec ljmp sbb cmpsb call and arpl mov test fldl xchg loop int es popa and jbe sbb jg ficom incb mov sahf inc cmp fiaddl inc test insl mov dec (bad) lock movsb pop ss lret and outsl sbb xor repz daa dec scas (bad) loopne mov std aaa call shrb mov (bad) imull cltd stos pop xor cli test lods xchg fisubrl fwait lods arpl fildl decl icebp cmp dec nop shl lock jecxz leave loopne mov icebp jnp mov jmp aam movsb xchg mov (bad) int3 cmpsb adc cmpsb xor pop xchg insl cmpsl out fwait push es xor nop adc pop ret mov jmp and and repnz roll jle (bad) adc cltd imul mov aaa push je in jno (bad) cmp adc in pop and and mov int add test pop mov jmp clc inc decl push cli outsl (bad) dec pop xor js mov pop arpl adc xchg dec (bad) xor xchg insl js lret rorb mov idivb lea xchg mov inc fwait rcr and pop insl mov cli xchg stos pop int3 mov cltd pop outsb or add imul outsl lret mov out dec add cmpsl sbb data16 out test adc rorl sub xor fiaddl leave dec (bad) pop leave das mov fxch push insl jecxz lea ja jbe in mov pop ss jae movsl or jge dec inc cmp lea scas mov add das lahf dec mov or adcb xchg ja (bad) popf hlt xor fdivl mov pop jl dec es int3 mov dec jbe test (bad) rorl push aad call push xchg cwtl mov or or dec or outsb (bad) bound sbb sarl inc or xor not repz mov inc mov dec std inc xchg pop pop js cltd adc cltd lret sbb test lret jb add cmc loop mov fwait sbb ljmp mov add inc mov dec sub (bad) xor (bad) xchg fs sub repnz cmpsl fadds lods mov xor pop addl or out (bad) xlat inc sbb xor sub push daa cmp jb inc imul xchg imul pop sub (bad) int3 jecxz enter push mov or mov lods cmp cs or xchg jns jne sub cwtl inc lahf aam jmp and mov mov mov sbb les test imul addr16 cli in fs das outsl stos jmp out mov negb leave or dec cld push (bad) adc lods ss fisttpl jnp roll jp call or cmpsl mov inc lds pop inc and xchg xchg xchg fild xchg mov mov aad or into fdivr mov pop push jecxz mov jmp gs push fstps cli movsl mov add mov leave xchg out xchg xor out push mov ss jge imul (bad) arpl sahf lret sbb cwtl fistpl scas icebp or cmp mov subl mov in mov icebp fwait push test push push loop retw pushf dec aam pop outsl js sbb pop xor loopne jns jbe lret insl cmc mov mov decb jge bound cs sbb lcall sbb data16 scas scas inc movsl rorl xor aas popf (bad) sub les jmp jge fnstcw testb leave cs scas fidivl stos lret sahf or xchg lcall mov mov pop lock loop mov movsb rcrb xor fldenv mov sub imulb dec push fdivs xchg je call in xchg push mov mov dec xor ja xor sub ss sahf movsl mov cmpsl (bad) in pop cmpsb andl sbb cmp pop xchg daa mov mov cmp orl sub xor insl idivb jo pop mov mov inc stc imul xchg push bound pop sarb cli cmpsl fnop std push pop or out push test pusha mov jle jecxz jmp and fnstsw mov push sub test dec mov mov adc mov sub rorl mov and mov sarl dec mov mov sub jo lock rclb mov jp mov mov push push dec sti (bad) xchg jecxz jne rcrb or mov adc mov sbb fcmovbe add call fadd sbb das jmp lcall (bad) cmp xor xor pop sbb bound pop xlat mov cmp sub push mov lock or les xchg ja jbe movswl mov loope or xchg jl sahf adc push cmp push lret jb insl sbb bound xor fwait ror gs rcl shrl cmp and js stos and cmp sbb dec (bad) aam jle fwait mov inc pop pop inc pop push stos fcomps iret or insl sub (bad) pop das inc out stos mov out push loopne jnp xchg scas fsubrl jbe or mov cmp (bad) mov mov sub add pop (bad) shr stc xor fstpt or mov mov mov int fwait pop mov jmp jbe hlt inc lds xor cld pop das int das cmc cmpsl (bad) jno push cmp lret stos sti repnz xchg ja jle xchg push and stos mov xchg daa jl jl xchg xchg mov xchg cmp and jnp fisub jl hlt das (bad) mov xor test sub std ret je rcrb add and lea adcb mov inc out rclb push out js dec pop les push scas adc insl adc cltd sti sub movsl xor test xchg nop sub into addr16 aam test mov lcall xchg fsubrs hlt lods (bad) out into dec mov pushf mov push xor fsubrl mov pop fcmovu fdivrl mov inc and loope mov pop dec cmpl dec fs int scas push in clc sub xchg dec adc sub cs add shlb les lds or and sbb pop inc fmul sbb es mov and (bad) mov inc mov xor addr16 and mov pop dec mov pop cmp pop cmpl pop inc push inc pop or into add fadds adc out pop cmp mov cld notl je xchg ret fwait xor push push pop stos scas mov pop add push je arpl ljmp imul pop add call shl xchg mov xor pop daa adc sub xlat lahf dec sbb loopne fdivl adc push sub ja loope adcb (bad) push or mov (bad) dec pop (bad) orb sti xor cmpl push lock out popf dec jmp jmp mov pusha cmp aam cli popa inc add adc stos ja adc dec push dec (bad) dec fdivl outsb orl or out dec fsubs push movsb rol test add pop jb sub out and (bad) hlt (bad) xor pop ret push jns loopne cmp dec popa sub (bad) push mov pop or jb push in dec sub cmc jno fimul xor (bad) or in scas mov push test jne sub rol movl jge push cmp sub mov test add push out lret test or mov sbb xchg aaa xorl lds ret jno lahf cmp lret lahf addr16 mov mov jno push test dec inc or imul lret xor stos (bad) or shll xchg sub mov cmp push cli out pop into mov dec repz pop mov scas gs and push lods sarb push jp lcall aam int3 outsb pop mov loopne xor cmp jnp sub cs sbbl push repz jns push ret mov pop out dec inc jnp ja popa ror cmp enter cmp mov loop adc scas xchg sub inc nop add fisttpl add or nop dec mov adc add sbbb imul std adc mov push (bad) int loopne daa mov mov jg cmp push test pop shll xchg mov push dec outsl imul jbe dec inc (bad) int dec leave shlb push int dec repnz enter jp xor or xchg or fistpll sbb mov pop fdivs into scas or jbe call loopne mov push lods lea stc adc push mov int outsl sub in xchg jb in inc push pop sub xchg cltd cli mov stc aaa cmpsl ret lcall mov xchg or (bad) cmpsb pop or dec pop call ret leave arpl mov push orl int3 aad cmp or mov shlb scas js sub lret fidivl mov push mov pop mov divb (bad) adc or lret fild std push in mov sbb repz mov push bswap cwtl popf xlat add mov adc xor adc scas mov fwait and subl mov dec (bad) imulb fbld push lods add imul (bad) dec js sub lods rorb push in jbe enter dec js pop push or test mov jno pop ljmp fwait lods add sub rclb mov decl cmpsl mov lcall sbb repz dec arpl inc pop ret sarb scas fs shr addl or insl nopl mov fimul inc mov xor cmp xchg mov dec es xor xchg sbb lahf jmp sub inc and mov out dec ds in and cmp push jecxz xchg movsb jecxz xor lock in aas (bad) dec adc push cmp in push (bad) sarb jbe pop adc add mov int3 mov into mov leave mov aaa push outsl push mov punpckhwd es cmpsb inc mov in jge iret es aam mov xor add xchg loop inc add psubd xor inc lock cmc mov in mov mov xchg inc fmulp insb and shll (bad) xchg dec pavgw cmpsb in fs test and jno mov gs sbb pop push int fwait in aad dec lods mov inc xchg scas push adc jbe scas dec dec loop pop cmpsl lds pop pop aaa fdivs cmp fneni(8087 and sahf outsb xchg inc aaa or inc and push and or sti inc and cmp jecxz fnstsw ret inc or inc cmp or add vmwrite js xchg ds sti inc mov testb test or (bad) xor sbb aas mov lods sahf sahf (bad) popa out inc or adc (bad) movsb ljmp icebp sbb fldcw scas inc sahf lods test or jne fdivrs xlat cltd pop add mov mov dec adc sti mov out push xchg rcrl (bad) and in lds fldl xor pushf push push cmp mov rcl in sbb js xchg and enter (bad) mov shlb lds mov cmc ljmp mov mov mov sti cli fsubrl or push dec scas cmp mov jne or imul lret (bad) icebp popa and scas cmp lods pop rcl shl insl test pop dec pop pop cmp xchg lea pop clc inc mov adc xor xor cld rcll lahf scas je (bad) mov pop pop mov jnp mov popf dec leave dec std xor jle (bad) xchg sbb aaa mov clc xor lods sbb fstpl or aas mov (bad) jmp mov lret in sbbl (bad) shll sub dec pop das mov das ret pop or dec fcompl fiaddl mov adc iret int3 pop xchg sub push mov sarb push mov lds add fs cltd push sbb or repz mov mov or xchg aam or movsb jmp cmc insl mov stc jne mov and (bad) in pop xchg push js movsl mov lds les push dec pushf daa xor icebp mov test das sbb rclb inc cli lret cmpsl mov adc rcr add adc aam out fimull pusha imul and fsubrs add movsb loop mov mov jne dec scas dec fisttp add popf dec cltd xchg cmpsl cld push scas add stc or dec sub add xor daa mov inc out sbb xor fiadd iret fistpl fnstenv mov jle fldln2 sbb stc negl ljmp out repz push mov lcall pop xor lret loopne repnz mov jne subl aad sbb sarb out (bad) xor mov repz cmp clc sti loope daa lock xchg xchg mov lret adc stos aam mov stos sti add int mov mov ret pop xchg xchg mov add xchg nop cld mov mov push jnp lcall dec xchg pusha xchg inc pusha or das iret aas push push outsl in jecxz (bad) aad test xlat sub into ret and les mov shrb lods (bad) xchg dec dec ljmp stc adc mov icebp inc xchg sub aam daa mov pop bound cmpsl test (bad) in (bad) (bad) and insl pop push (bad) mov lds test lods dec mov (bad) and repz jnp push push pop fsubrl add arpl addl notb cmpl fwait ljmp rcl jp jecxz and jmp ficomp movsb fnstcw scas xor adc mov (bad) mov jns ds scas scas jb fsubrl xor cli fdivl push dec push std cmp mov movhps jo fsubl hlt fldl fild divb xchg int3 movsl mov mov ror xchg shlb sbb pop aas xchg push ljmp dec xchg dec stos jge sub cmc push mov adc cmc fisub jb in nop sti fnsave push push call shrl (bad) cli lret cmp jb or cmpsl xor ret mov rclb aaa lea fstps dec mov jge in insb (bad) fadd pop dec es (bad) adc xor mov push scas push das add mov xchg pop mov lret out stos mov cmpsb imul (bad) cltd mov push (bad) std hlt adc test popa mov inc lds in out or dec (bad) ljmp cmp push xchg xchg and aad sbb stc add ja xchg dec stc push test sub test cmp pop imull mov jecxz arpl mov sti xchg mov insl popa (bad) mov jnp sbb mov std pop aad and push mov (bad) bnd loopne (bad) sti jl popa lcall push cltd aaa sbb (bad) test cmp loopne pop jge or sbb mov sub mov loop sbb pushf cli (bad) ficom xchg jae fwait push mov cmp xor mov pop xor divl or shrl mov add imul xchg inc add notb sbb mov bound pop addr16 test psllw fisttp push mov or test add into aas jo (bad) lods fisub push push popf push loope add push cmp gs mov inc push sub or jge sbb sub repnz or push lcall cld lea dec and xorb fsubrl repnz mov rcrl cmp push sbb xlat or mov and or jp,pn leave popf fstpl push jne or adc call sub jmp jle lock (bad) sub sbb out out jl mov jle scas stos or jp cli add cli out js in cmp repz idiv xchg and and dec fwait add mov out mov and data16 adc stos jg mov daa xchg psubd inc adc push sub and mov mov pusha cmpsl (bad) sbb inc adc notl out pop pop mov xchg jnp addps lods addr16 sub out mov push sti mov xor out sbb (bad) sbb jg adc mov pop cli push mov subl stc ret movb je sahf pop int3 adc push mov mov (bad) movsl push xor int aam cmc pop ds nop daa add and sbb flds adc testl lods xor cli jp aam push lret ljmp (bad) dec out inc mov gs push lret inc xchg lods leave pop xor add shll lods lods xchg in mov sbb ljmp or (bad) jp mov movsl mov leave movsb ret repz mov ror pop fnsave adc out dec les pop jge sub xchg jne and pop shrb fcoms add adc int3 pop push in pusha scas jne icebp inc lret mov test std clc pop sbb push sbb push cld pushf loopne repz mov enter jbe pushf std and mov xlat inc into outsl test mov cmpsb rol daa dec int int xchg ja mov iret imull mov roll into lahf xchg das sbb xor jle push xchg int3 xchg lods push (bad) sti push repnz (bad) mov fsubs jb pop in (bad) insl je cmp xor in push in sub sahf lds lret mov cwtl xor add add (bad) mov cli imul cmc test (bad) or add test mov cmp xor jmp test and xchg jle push mov or insb jb inc pop stc cmpsl xor or cs jle jmp out cmp jg,pn xlat xor pop jp xor xchg iret sbb js in pusha jae xor sub xor sbb int dec mov stc cli cli nop mov inc es xor mov jle mov iret sbb or rol imull in lahf mov or test jb aad aas fsubl xchg test repz loopne leave inc xlat pop rcl and lea xor daa adc adcb mov enter inc push fimull lock fs lret stos lea (bad) shlb iret jge jae fwait xchg int sub and dec stc add popa out nop fsubl rorl test mov addr16 sbbl std cmp in add sbb rcrl scas (bad) call mov pusha cwtl and xor decl scas pop cs xchg imul pop dec xchg scas mov test adc test lahf mov faddp (bad) shll add sbb outsb addr16 push mov arpl lcall add lds sbb sahf icebp stos js lret push xchg pop pop mov mov out and sbb pop ficom mov cmp xlat ret (bad) mov (bad) push dec test pop ret xchg stos mov loope fdivr (bad) pop stc push (bad) in sbbl rcr sub sbb cmpsl in ss mov in (bad) adc jmp mov sub cltd dec jmp imul cs inc dec cli rcrl mov lret jg cld mov mov mov sub and xlat cmpsl pop dec aaa pop cld shll cmpsl fs and jae pop fxch cmp std insl sbb lock push jmp cltd xlat mov or lods sub cmp in inc movsb or sahf fidiv in mov xor addr16 dec loop (bad) xor jmp addr16 inc loop push enter cmpsb arpl test idiv outsb cmc leave cmp and jge (bad) inc sbb popf mov loopne and imul roll test out cmp lds out jmp sbb jle cmp or push aaa mov (bad) and jg ficoml push and aas test dec mov dec xor adc repnz xchg push dec insb (bad) sti push mov mov in fwait into push mov jmp xorb sub cmc pusha stc inc mov sbb iret cmpsl sahf movsb ja jno xor adc sub mov pop cmpb xchg cmp fwait dec jecxz clc adc repnz call movsb fld1 mov jg cmp sbb mov outsl jg push scas mov (bad) mov outsl lcall in repnz adc sub or pop mov xorl sub mov jl pop fbld push sub add cli add movsl movsl jge mov aad stc test sub jecxz jmp enter mov repz rol or cli popf insb adc xor ss fdiv loop jmp fwait ss jmp xlat iret xchg int3 aas push and pop lcall popa xor pop mov pop mov pop sbb inc fwait hlt and stc push int3 test popf lcall rorb popf into (bad) push clc mov inc push mov rcrb jne cmpsl dec or or push push shr out mov out sbb bound in sar jno pop pop push es fldcw int3 rolb pop insb je (bad) movsl sbb stc mov push sub xchg dec out cltd pop adc xor outsb mov xchg pop mov mov lods out pop adc xchg cmpsl aad mov adcl cmp adc sub xorl dec or or rorb mov xor lods add test jb movsb outsl push fdecstp lods mov ficompl xchg push jl jge das leave cmp add adc mov data16 das jns add dec clc jmp push ret (bad) rclb scas rcll cmp (bad) xchg push gs cld pop bound flds (bad) xor leave pop je,pt popa push mov ss xchg mov cmp movsb xor subl icebp pushf test sub test xchg sar xor mov fldcw mov sub loope inc arpl jge jl cmp fldt insl fucom add das push adc (bad) rcrb pop sbb xor inc in orl cmpsb pop add mov call pop dec in dec (bad) cld push pop loop mov or inc cmp test xor jb (bad) mov js mov cmp dec jp push mov xor fmull or push xchg es mov pop dec xchg pop jo mov xor push adc out stos mov sti shrl mov lret clc dec push cmp add lcall push adc out test insb pop mov jb push dec inc shrb dec xchg lock jecxz and pusha mov scas xchg scas lcall mov xor pushf jae mov sbb int pop cmpsb xor and pop jle test sbb adc dec sub stos dec sub insl adcl push inc jns in iret xor push cmp imul das negb and int3 sbb mov push dec jp and lods push fcomps xor popa in aam mov xchg out sub out sbb xor adc in cmp jmp movsb cltd adc xor xchg sar clc adcb xchg fstpl dec in mov mov in and pop xor aad xor (bad) pusha dec cmpsl dec or ds scas hlt lret push mov xchg das add dec jns (bad) loopne jb xor notb out push aas sbb and addr16 (bad) lock adc cmp leave scas and dec add pop faddl xor sbbl (bad) js cmp lret outsb inc arpl addr16 rcll xchg push movsb mov fwait inc cmp movsl cltd sarl mov jbe mov sub int3 mov std es dec scas std jp mov sbb and mov push jecxz cli xchg popf add (bad) mov mov add mov sub hlt fimul add mov call pop int mulb shrl mov cmp hlt aaa dec and (bad) insl mov ficom dec xchg mov cmpsl mov ljmp push mov call or xor test xor loope or out outsb pop cmp cli adc popa cmp adc daa divb lret xlat fldt inc mov mov (bad) jae dec unpcklps fucomi and daa adc pop add enter mov mov outsb aad daa xchg loope jle cld mov dec pop cmp pop mov mul push aam lret xchg xchg ret dec or and fisttpl loopne (bad) repz mov decb repz pop xor std and dec mov adc aam xor and sub add aam jmp sbb push xlat pop rcrl call mov mov js push lock nop dec pop inc leave imulb sete sar daa mov cmp xor push lret lds adc fsubl ss or stos imull dec dec add cmp scas in mov or cwtl or jecxz xor push ja jl ret icebp push add push dec sbb jnp push mov out mov int or or cmp mov mov cmp fwait inc std stos cwtl mov roll sub add xchg nop mov (bad) xchg push out cmp mov inc js push pop inc (bad) jmp pop jg sub jg push dec mov sbb xchg jmp movsb scas movsl inc sbb or or int3 sub push and int fwait push jp,pt add fisttpll sbb mov or mov imul xor inc jns call loope or lds pop call loope sbb sub push test bnd es or cli or adc mov fdivl push test leave pop cltd repz cmp push push movsl loope sti int3 scas out insl movsl daa jnp decl jg or arpl push sbb mov fsubrs sahf aas inc or out xchg loop mov mov cmpsb hlt xor jecxz and (bad) xlat cs lret jo call xor test or sbb ror jbe jmp jne pand imul push inc adc push cmpsl push jecxz or in fs sub jle push pop jp jmp out repz arpl mov (bad) aam pop in pop or addb ficoml jg jno mov mov push cmpsb and stos xor xchg xor dec cmp loopne shll dec insl call xor stc lock inc sub jb dec pop repz es mov ret in fwait mov jmp inc sbb jp sti jo jbe jne lret dec push add push vpunpcklwd icebp cmp cmp (bad) xchg mov aad fmul dec inc and xchg daa repz lahf pop xchg mov loopne push push stos aad repnz inc or (bad) lcall stos adc push cmc data16 scas pushl adc fucomi hlt mov fcompl popa inc sahf pusha popf cmpsb adc stc mov fwait rorl pop inc movsl decb outsl inc rcrb idivb outsl mov xchg inc cmpsl sbbl inc jg (bad) jne orl push xor pushf cwtl cli mov cmp and jbe sbb stos sbb divb icebp shl aaa out add inc inc js mov cltd cmp push loope push mov dec adc fistl ffree lods push pcmpgtw push ja push mov cltd sahf or mov mulb mov xor pop jno test in mov rcrl cwtl aad sub push cwtl pop mov xchg push daa pop aam pop sbb mov or into lcall data16 je rclb test add xchg (bad) inc scas stos cmp jae pop mov add aas push (bad) push outsl lods xchg nop popa push pop (bad) hlt push (bad) xor pop cmp mov (bad) fisubrl mov push mov (bad) push lds sti jns mov sub sbbl icebp push cmp push es movsb sbb mov adc jns xchg ret pop cs jmp pop pop and scas fs add fs repnz mov sti jae add cmpsl cltd popa add int3 lock adc insb push jnp sbb adc or add jmp rcrb mov mov fisubrl adc lods leave inc inc jmp lahf mov arpl push mov mov imul mov and mov mov cs ret test imul stc jmp jno pop jns pop pop adc mov or decb in sbb sbb mov cmp insl aam xor les imul lds pop insl rclb into lret mov xchg dec adc int mov mov xchg popf push push in or pop sbb scas sbb in scas pop xor cld sub mov push push cmp roll rcrb mov int3 inc xchg xlat add arpl incl xor int inc mov rorl (bad) adc push jle mov repnz push aaa dec sahf and dec add fidiv mov data16 inc adc sbb push popf push decb dec clc dec cmp dec or xchg cwtl rcrb movsw sbb sbb jo or into (bad) outsb outsb xchg xchg sub ret and cs mov and loope pop es sahf and mov mov aaa adc movsl mov adc movsb test (bad) dec hlt dec aad stos lods and sub (bad) cmp int and (bad) dec popf icebp fisub lods jl mov mov or aaa jae pop cwtl (bad) dec xor lods cmp dec aas pop dec xor loope mov loope cmp aam sub add xor in cltd or out jns mov (bad) mov mov (bad) push out popf testl mov mov jmp ja xchg repz jge mov orl lea push (bad) iret cmp inc out out jecxz fisubrl mov popl add test insl outsb and xchg mov imul js test sub fdivl ds data16 mov popf (bad) lret mov push jno add fs in cltd cmp rorl clc inc jecxz int imul xchg and xchg push fsubp dec push xchg mov cld imul push lds stc pop xor xchg mov mov mov into insl mov inc mov add daa pop adc rclb pop mov pop adc stc dec mov negl pop adc shl jnp aaa or int outsl cmp je pop ja adc jge fsubrl jl test rolb mov sti or imul xlat fidiv fs dec cmp push loope lcall sub fildl cmpsb or mov lahf ja adc bound push add xchg dec pushf jae push or stos and sub sbb adc fstps out call lcall or movsl sbb jbe ret ljmp inc add aaa fnstcw ret mov jle les (bad) mov ret rorb lods and jmp int3 fistpll and pop stos add rcrl mov loopne aam sbb cmp jae jo inc lcall pop pushw repnz pop (bad) pop in sub lods sahf fwait mov add jb or test test ret sub and jae pop xchg mov dec int push stos cmp adc sub inc fs and pop or mov xchg xchg dec arpl fisttpll fnsave cmp sub add pop ret mov lcall out xchg xchg nop dec movsl loop outsl in dec or daa lea pop push (bad) lods or xchg cwtl test ja dec jle mov dec popf mov push xchg pop fstpt jl inc addb dec sahf lds adc fidivl pop (bad) sbb push mov push (bad) mov push (bad) jecxz pop pop test inc jb movsl push push mov inc dec adc in popa xchg xchg loop insb push dec adc and cmp push out push cmp int3 repz loopne jl imulb addr16 xor ret jb inc inc insb (bad) mov mov xor push popa and fwait pop push and inc dec ss xchg or adc in pop xchg in push dec in push fnstcw mov (bad) or xchg (bad) std leave lds das ret (bad) jae ss daa adc inc fdivrl or (bad) jns push push xchg cmp and inc shlb cmc sub jg pop cmpsl mov lods push movsl xor jns inc aam aas pop aaa call cmpsl xor mov jno push inc dec out xchg sbb inc dec roll mov ret add stos jbe test inc andl and jne mov xchg insb repz mov mov shrl fsubp pop jb adc (bad) push dec test inc aad xor movsl dec pop dec jbe mov sti int3 mov sub cmpsb imul daa ja cs mov pop fld xchg push push lock xchg ja dec jnp cli rol (bad) mov repnz adc push fild icebp xor mov insb jl jecxz sub jne add sti ss or pop xor dec lahf (bad) mov inc jle fistpl mov inc shll lods incl mov mov std xor mov (bad) test loop mov push (bad) movups insl add sbb and scas out xchg (bad) dec cmp jle sbb jnp int3 sahf mov lods das icebp fs sbb (bad) and ja mov sub insb add pop adc js (bad) mov stos out cmc mov jl mov movsl mov pusha and ja call ja enter pop push add stc add dec cld adc packsswb in pop mov ds jo test inc lds xor mov jecxz mov jno jbe imul push xor sbb or xor daa hlt sub mov leave push or or je inc ret jnp mov test std cpuid jo imul mov mov arpl cltd jg clc push ja popa or mov dec shlb push sbb inc xor iret daa dec das aas scas or ss dec xor jle push or xchg (bad) idivl out ljmp outsb and jns push mov insl rclb add insl lret mov fstp ljmp data16 pop pop daa mov test adc idivb bound daa pop sub xlat dec pop aaa (bad) push add das add leave (bad) mov xchg test popw add push movb arpl lea rclb xor das cmp xor cli and mov cmp lret jg xchg or pop das push or outsb and aas mov add pop fs lea and gs jns jge sbb jne sub adc adc out push sbb or xchg lret pop inc fnstsw mov lahf les jge cltd imul and and jb add pop lods out inc pushl idivb pop fs or and in pushf add push mov iret sarb sbb jo or xchg fdivrp ret sub pop ror xchg ret (bad) sub jg cld xchg in enter pop push jecxz dec adc jo call stos loope call ret int lea xchg sub inc push int shrb jmp faddl add repz or (bad) dec adc sahf lods mov dec inc inc cmpsb push leave insl (bad) mov out test out popf scas andl add stos cmp push pop sahf cmpl pop adc and out mov or mov xor and in add popa test cli add mov sbb mov test ds jbe or movsl and aas pop xor jno bound mov add and leave push jb xor and adc aas mov push jb cmpsb dec fdivp pop aad push adc inc and mov std cmp add adc push jns scas push je pop and push je add imul imul dec adcl inc jae loop jl cmp or in inc mov xchg mov jg ret popf test subl xlat mov clc pop ret daa xor or hlt mov cmova push dec xchg arpl (bad) jmp mov sbb or mov cmp sti mov push mov add ds stos cli and mov fisubrl stc mov inc dec inc inc ret xchg fnsave cmp (bad) mov dec sbb imul test sbb leave inc dec (bad) sarb sbb aas je,pn ret das lods add or adc xchg call ljmp ljmp movsl in xor test mov mov iret dec sbb repnz fstpt js fwait xor sub int3 or cmp mov push adc pop arpl xor sbb cli repnz pop push mov and inc dec xchg xchg rorl xor sub pushl inc test inc repnz lds sbb gs popf aad mov cvtps2pd or addr16 and imul and (bad) xchg dec cltd ss lcall inc push xor sub push adc add mov jmp and mov push push insb cmp dec mov popa xor sbb pop imul inc inc idivb bound jg jnp xchg sbb xchg mov xchg aaa pop adc loopne outsl lods pushw sub int3 adc enter jl iret xchg fs mov insl mov fmull xor out mov jnp insl xor xor lret jo jecxz rolb jnp (bad) mov mov jbe sbb test pop fwait (bad) and mov mov xchg push (bad) inc ret in popf add cwtl int3 out (bad) mov sub mov imul aad roll int3 mov int3 lods rol notl mov arpl aam sub daa dec sub stos int adc fildll icebp mov add (bad) and mov idivl cmc cmpsl sub lea xor mov fs xor push mov push fwait stos ficom mov imul adc add xor lahf lds js lret pop xchg sub roll (bad) lock pop shrb jbe xor sbb push test (bad) out jo pop mov inc pushf orl ds mov mov mov into mov fcoml int jbe sbb cwtl mov mov mov sbb mov es outsb add xchg sub stc mov stos sub mov les (bad) movsl aaa xor jl loop fistpl pop pop sub in push push ret sub (bad) sub fldenvs je (bad) xchg cmp ret sub les rcrl mov xor pop shrb push psrlq enter cmc push pop xadd inc dec mov adc mov negl dec xor pop pop cmc dec mov ljmp mov xchg out fstpl add int int mov sub lahf pop xor push jb xchg imul and (bad) mov xchg add test jmp sbb add das mov adc pop sti mov push adc lret xchg leave pushf sbb fwait mov jge pop pop xor cmp mov inc sub (bad) roll or xchg das stos nop push outsb icebp lret and jb movsb pop fs lea push push mov inc js jno adc cmp inc jbe in cmp stc push pop lods stc sbb sbb xchg or cmp sub mov jnp (bad) fnstenv sahf stc leave adc std test pusha cmp inc in sub xchg jno sub flds test mov mov jmp inc les popf clc loop add dec dec sarb mov rcrl push test push mov xchg outsb or and fs ficomp into dec pop xor sbb mov in std movsl dec xor sub and xchg mov mov add mov movsb repz dec push test dec or insb aaa sbbl jp std jmp ds jecxz orl fisttp enter dec movups push inc loope cmc frndint push popa xlat xchg sub popf pop (bad) aam add in insb hlt js and rorl mov dec scas out push ja cmp loopne hlt mov xchg pop add or jp lret adc iret loopne repnz lea pop lods mov sub int3 addb push dec pop push lret dec shrl push or in mov clc pop mov push aaa sbb dec sub mov inc jg xor cmpsb loop adcb cmc jo and jns push (bad) xor pop flds imul cltd lds cmp mov cmp sub dec pushf xlat mov (bad) aas sbb into add sbb mov lods and inc ret into cmpsl int3 out lahf fmulp sbb adc cmp movsl push movsl jo mov pushf push repnz pusha mov mov mov movsb cmp adc pop fisttpll int3 negb je mov inc push add in dec fistpll sbb pop mov cmp ret pop inc out sub test jp dec dec cmpl call sub push cmp flds adc and dec out outsb adc out jb dec mov and ret sub sbb fmull movsb adc ss adc push cld cmp bound inc dec pop hlt in add xor inc pusha (bad) leave pop out adc mov mov mov vminss xchg jbe ret xchg int mov jno adc mov jmp inc adc jb ret rclb xchg lds xchg insl pmovmskb mov mov push (bad) sbbl add test pop insl xor xchg inc pushf int3 mov pop cmpsl cmp pop xor movsl hlt lret sub inc or inc inc inc out inc pop fsubr nop cmpsl mov hlt push icebp cmpsl mov cltd lea jb jo or lcall pop mov mov pop std out or into dec ret jmp popa out push repz daa sbb and cltd sbb ficompl repz ret adc and sub dec daa xor jnp mov pop and cmp and mov rorl lcall loop out xchg out xor sub jo xchg gs in jb xchg call cmp jb add lea jns les xorb lea in adc inc jl jg gs dec and sti mov mov sahf fstl mov clc inc pushf ljmp add sub enter jge cwtl fidivr out or clc push fstl inc (bad) dec sbb addl in gs mov add jns jmp dec jl jl lahf jbe fsts fdivrl pop insl jnp xchg lret mov cmp dec (bad) xor and ss in lahf push pop or and mov mov sbb lea rorl jp mov cmp add pop daa decb aam sub lret inc ficoml gs dec pop dec ja int3 push fisub pop mov (bad) push ja in inc push sub mov (bad) fdivrs and mov mov sbb adc push dec or push aad fidivrl or out (bad) adc xchg sub mov add (bad) movsb add push jns popa imul sbb mov add xchg (bad) insl loope in jle pushf les xor push dec pop shrl insl test rclb sub clc mov cmp ror rcll incb mov push jle add xchg test cli push adc outsl mov sti cs aad and cmp dec fsts jmp daa xor cmp pop sub insb cmc adc bound cld aas push movsb ret xchg ret push mov insl nop js cmp cmpsl xor sbb sbb push (bad) fnsave nop jne pushf adc repnz fsubrl and push mov pop mov outsb pushf mov mov push dec ret dec pusha (bad) dec dec jl dec pop sti jl pop xor movsl push sti jo je sub jae cmp sti push adc xchg adc imul rcll aaa loope mov xchg das test popf mov push test cmpsb xor test and movsl or fcomps and mov xor xor (bad) push lcall in (bad) push inc inc (bad) push mov clc sub imul in push scas scas sar lock push adc push fidivr js mov pop fnstenv stos dec xor jae mov mov fs jl and bound xchg cltd sti aam rolb repnz fidivr cmp inc add ret bnd dec je,pt sub xlat cmp sbb push addl shrb and outsb adc and jae xchg (bad) (bad) enter xchg pusha pop mov jmp aad sub pusha mov add out imul repz cmc js ds ret add in push test add dec inc mov xor xchg das in out inc je jmp loopne idivl (bad) aaa js sub xor adc (bad) ljmp sbb sub mov lods notb sub xchg inc jno imul jl pop and push mov imul or cli jo jl xchg mov mov icebp punpcklwd lods ret popa dec xor inc dec outsl push xor lock sbb inc dec mov js xor adc cmp daa bound cmp ja lock subb adc and cmc (bad) int3 adc mov aas cmp ss lret jnp pop push int inc pusha test std in js push nop cmpsb ja stc arpl fldenv and fstps pop pinsrw es pop adc fneni(8087 insb cmc js jno jmp jno xor (bad) fs ror xchg in icebp mov dec push leave xchg arpl insl mov xlat popa mov clc imul ja cld mov adc pop pop punpckldq pop mov jnp push pop xor movsl xor insl cltd movsb mov push in adc or popa lock mov (bad) sbb add std (bad) pop stc xchg lea dec cmpsb aam sbb frstor in add stos ja jbe insb inc orl or push xchg and fistp cmp fwait jmp inc add pop xchg (bad) push dec push xchg push ret jmp (bad) cli aaa cld xorl jo fcmovu cwtl cwtl fsubr dec mov sub sub inc pop mov ss jge jo jno mov repnz lret ffreep mov out cmp stos sahf jle lock jne into xlat ds xor inc mov movsb cmpsl pop fnstenv out pop xor mov es mov jl outsb int repnz jns (bad) insw (bad) mov fisubrl sbb shl add imul or rcrl sub movsb cmp ja ss (bad) adc ret and (bad) decb and mov jmp push dec je sub adc lods sub pusha or mov repz fildl lea mov and popf adc xor das sub sar lret adc push sub (bad) xor pop loope adc out jecxz pop fstpl mov lds les fdivrl inc aaa xor jno cs jmp inc pop and cli xchg or loopne xor shl xchg inc mov mov xor cmp ljmp stos xor into lock aaa shrb lahf mov in mov jno xor jl data16 jl leave jl (bad) add sub stos test add test or pop (bad) adc (bad) lods push inc push (bad) out lcall or (bad) pop js pop jge pop pop dec fst pop ret outsb (bad) mov add push andl jp jb sbb lds daa push cmpsl test adc or xchg jl dec dec cmp (bad) pop cs pop mov cltd jle inc fwait pop scas dec lea (bad) vcvtps2pd fs inc and iret int mov movsl xchg icebp fiaddl popa in mov aas ljmp pushf mov and jmp jns rcll pop dec add pop xchg fsubl dec ljmp jp and (bad) and imul dec mov ds clc aad sub lods and dec fdivrs (bad) cmp add movsb stos rorb ret push lock xchg out lret pop enter add and out mov add xchg out adc (bad) pop decb lret jl dec (bad) fildl push cltd jle arpl inc cs cwtl mov jno and scas dec out sbb pop incb popa sbb test popa (bad) xor scas mov pop js stos mov cli sarb test movsb jp sub pop xchg sbb rol jp test test mov xchg inc sub cmp sbb pop jo cli xchg cli pop cld inc out sub and and int3 push add cmc fxam (bad) xor lcall mov movsb mov pop mov inc mov pop dec pop adc lret scas test pop sbb or push and ja mov xor iret test mov inc (bad) push mov sub and dec inc and and sahf pop push push ss addr16 xchg pop lret adc xor cwtl loop lods sbb xchg mov push sbb cmp push sub push jp pushf sti cli sub fcmove repz push mov push hlt scas je pusha lcall inc cltd int mov std and pop lea lds push xchg mov loop jle xchg dec cmpsl push daa adc popa lahf push out sbb sarl scas cld movsbl lret mov mov dec fwait dec lret sub adc xchg sbb push jbe dec mov dec dec cli cltd or xchg pop out sub fistpll mov popf out or dec lcall push into adc loopne mov mov xadd jbe mov jns and loope lods inc cmpsb fs mov ljmp adc hlt int lahf loopne test xchg push and jl into dec mov cmp js outsl dec in popa xchg mov out out invd pop sbb adc loope test das xchg loopne stos sub inc std js dec mov sbb sbb int3 fbld icebp or fmulp adc sahf cs mov (bad) mov outsb hlt jg sbb stos in add mov jecxz dec fsts cmp push lahf loopne mov ljmp sbb mov insl sti mov push sbb push pop inc mov and mov and sub call jo mov xchg xor daa jno (bad) hlt pop rcll mov test xchg adc jmp fwait mov mov mov jp insl pop mov pop (bad) adc nop and fwait jg adc ja shl jno adc in dec push mov fildll sbb xor xchg (bad) and or int out std inc sbbl mov ja jo stos lods mov sbb in sub rorl (bad) std push fsubl and push pop mov ficomp loope pusha cmpsb repz scas cmpsb mov fcompp clc mov jge clc xchg pushf push dec add hlt clc jb xchg xor dec (bad) repz jb mov fcoml movsb add es ljmp dec inc lret shr lret or cli push sbb lods repnz dec sub sub or pushf daa mov mov jns xchg sub (bad) das sub pop cmp sbb jns push or dec fyl2xp1 push cmc or pop sbb popa jle xchg sub sub fdivp (bad) xor enter (bad) gs jns mov iret movsl pop sbb aad xchg add sbb mov (bad) push and lds in push xor clc shrl popf icebp lea insl mov outsb mov xchg cmp jl dec into mov dec call pop jb adc push push aad js xchg cmc mov mov jle add add outsb loopne ljmp shlb xchg out xchg add and or mov add add pop adc xchg pop xchg sub lods xchg push and shrb lret xchg add daa ljmp aas sbb inc sar ret sbb insl leave xchg mov mov pop push lret fdivrs jl je mov add repz mov xchg insl daa sbb xor lahf sbb stc popa jnp pop sbb cltd insb mov (bad) jno std push mov pop sbb lea sub mov sbb cld or sarb fs in or xor enter add inc mov bound sbb mov int cmp popf mov stos xchg push gs add mul xor ret or pop lcall mov sahf (bad) repz cltd inc push (bad) ret push lret loop mov sbb push sahf shl xchg das push jp mov pop adc insl pop sbb lock mov xchg shrl ret fldcw ss push push jnp rorb ds push fmull sub loopne dec movsl ljmp bnd lock mov or lods pop fs mov xor or xchg rcrl add lcall adc sbb xchg rcrb adc test test ss jnp mov call cwtl dec cli inc and xor or lret out hlt popa add out clc test (bad) mov lds xor mov sbb xor push push es lret int out imul push or aam and add out sar arpl cmpsl jne adc fldenv xchg fs into es out cmp push mov cmp jg push xchg rclb sbb and dec pop xchg xchg jb movsb pop mov lds or xchg das jle inc mov ret inc mov nop sbb fsubp les inc cmc or mov push int (bad) mov enter xor mov pusha pusha xchg sub jmp inc iret mov sub cmp aam jl sbb data16 dec mov push mov jnp stc in jae jecxz cmc outsb icebp rcl sub jo push xchg mov push add or inc stos mov mov and jne (bad) fs js ss repnz mov pop lock (bad) lods push fisubl mov inc int3 mov cmpsb lcall xchg pop push mov int sti idivb adc ds push (bad) jbe insb or loope movsbl mov adc jne outsb pop and push cmp test lock pop rolb repz and and pop addb popl pushf aam (bad) out imul mov mov mov push fisub inc adc xchg popf popa lret sub in int3 es xchg lods sahf lret cld push ret push jae icebp insl sbb mov orl mov pop lods xor xchg pop ja rcll (bad) icebp bound cwtl mov and jo dec mov std in pusha inc cmp mov adcb xor or popf jns push xchg pop out pusha add enter inc adcl (bad) cmpsb ljmp pop push push jno jmp arpl push fwait mov icebp into insl adc hlt mov cltd scas mov test popl lds xor bound das cmp in adc mov icebp in lds xchg fdivrl stos mov xchg dec andb lret or (bad) (bad) stc insb (bad) mov sbb inc mov dec cli push cmpsb aas inc mov andl xlat in daa loope lahf dec outsl ret mov jecxz arpl outsb pop push mov and add fs pop popa push popf incl mov testb call dec cmp mov inc xor pop aaa fsub sub into xor lcall sub cmpl adc mov sbb je stos mov add xchg int3 push ljmp push adc inc out setns xchg iret fs aam mov mov cmpsb push iret mov or scas aas xor pop mov scas sti lcall xlat inc mov jno sbb inc adcb pop mov fildl or out jecxz sbb pusha and and sahf repnz movsb mov xchg es in imul popa movsb lret fcoml xchg mov mov movsl out dec daa xlat ljmp jecxz iret fdivrl sub sbb popa in (bad) cld ja fsubl loopne ljmp mov mov call sbb or cmpb jmp in aas push sahf mov xchg adc mov jne cmc test inc add jge jle mov (bad) test cmp add xchg xor fcmovb sahf cld xor mov subl dec into sub cmp jae mov jno mov aas repz mov insl push fcompl jo sbb sahf (bad) out js (bad) (bad) adc push psrad ss sub mov adc mov lods or insl mov mov stos (bad) lock sbb push movb push aaa clc ss fsts pop sarb jl arpl repz hlt loope loopne into into jp fbld cwtl cmp (bad) das mov mov adc je mov ljmp dec incb sub adc pushf pop add leave cltd fisub in or add adc lds mov xchg cld (bad) cmp lcall fstpt in jp aaa gs int into lret rcll mov mov loop dec inc xchg cmpsb cmpsl and test out mov jg vpmuludq ret cmp test divb sub jbe (bad) xor jo lods sbb inc mov push xlat cli push xor sbb lret jo push jae fnop daa mov lea and sub and push jbe push or xor push ret inc out sti xor into dec loop mov aas xor popa xorl jmp mov mov sbb sub xchg scas loopne xchg or sub mov imul jmp push pop jmp int sub movsl fisttpll rorl daa lahf and add xor lods xchg cld jno aad inc aam dec aas popa in adc into mov insl jno scas lods loop pop dec xor enter sbb sahf scas rolb pop inc aas sub pop and sbb and rolb mov xor into cmp loop cmpsl add popa add rcrl ljmp test xchg pop sbb push pop xchg adc and pusha cld inc cwtl mov cmpsb int adc cmpsl rol rcrl bound xlat push (bad) push mov dec ret and xchg xchg push mov sub cmp jecxz mov cmp mov outsl (bad) sub mov pushf xor popf jno xchg jg fdivl add sbb aam jno sbb popf jge jmp push adc xchg cld inc loopne rcr fdiv mov sbb xchg fs xor mov icebp or push rolb call lahf popf test daa movsl sar std inc ss out outsb js aam and cmp in negb adc dec inc sub aam mov or xchg repnz js add arpl pop push sbb stc adc int in xor adc inc insb movsb mov (bad) lock jns or mov push fcmovbe repz push mov xchg mov (bad) cmpsl mov bound movsl pop and lret sbb int3 jl pop test push dec les inc es ljmp mov push aaa adc dec cltd pop (bad) (bad) cltd mov (bad) mov mov ja enter rcrl mov jns notb bound jns int3 push xor xchg es popa lock pop jnp mov mov mov xchg push jecxz jge xor jb into sub out pop clc lret mov add mov outsb push or pminub lods or or jb inc mov dec rolb dec lock mov clc mov sbb sub (bad) stc jp mov fsubr shlb shll mov fnstenv outsb sbb sbb sub adc dec cmpsl pop adc sarl into icebp stos iret aad les jg fwait pop or mov xchg mov add add or or cmp into mov arpl (bad) je incl dec adc cmp shl (bad) inc push mov in mov into lea adc sub es and fmuls jae adc (bad) push sti (bad) push popa leave stos adc mov addr16 push dec xor insl pushl pushf addr16 lahf addr16 in int3 fnsave lea jo mov cmp scas mov lods pop decl xchg pop lods (bad) les repz iret cmpps in xor push mov mov sbb xorl lds jns push loopne add sub adc push cmp movsb xchg fnstsw mov mov in js (bad) in mov fisttpll jne xchg popf mov or push sub mov aad sbb aaa (bad) arpl mov xor enter mov push mov daa cmp into xchg mov fldcw sbb inc iret adc push adc cltd out aas adc out add jno xor jge cmpsl pop repz xchg aas push push sbb hlt or out jp sbb sbb push sub loope dec and push scas or dec cmp aad shr mov inc cmpsb adc xlat hlt imul test loop push test outsb fst sarb sub rol mov int iret sbb push inc and add jg in fimul js push xor push clc sbb popf push add lods push or fild push (bad) icebp push movsl ret lds test shll adc inc cltd test mov xor stos pop xchg push jge sahf dec push rcll aad je and enter test xchg xchg (bad) js lods iret int fsubrs or or addb cli and aad sbb and aaa rcrb dec icebp push cmp stc test int3 (bad) stos lds stc aaa mov aad add mov jp mov jns mov aas fiadd ret pushf push mov enter daa inc in shll fldt pushf mov repnz mov nopl mov and cltd inc mov jno fcmovbe outsb xchg popf icebp inc test xchg inc xor mov dec mov push or sbb inc inc shl jo and mov lods fmull mov test sarb mov lret out insb adc xchg dec rcl call xor ds sahf mov mov movsb mov mov stc dec mov push out loop outsl int jmp lret adc and inc push pop jp rolb adc insb dec leave jecxz cmc push xor mov setge cmp sub push lret lock ret xor faddl jmp call mov sbb jnp sbb dec icebp sbb pop jl mov add mov sbb pop xchg cmp aam mov loop adc nop (bad) or je sbb cmp fistp mov in mov cmpsl push cmpsb mov xor (bad) lahf or outsb loope cmp subl jno jp sub dec ret or xchg cwtl shl push bound roll cmp iret cmp (bad) lea stc cld jb add jge mov movsl push orb pop iret fwait in xchg outsb imul sub or mov mov xchg (bad) movl lahf cmp (bad) scas nop aam sbb push out hlt je sub xchg lea shrl pop scas jno mov shl outsb (bad) push aad push sbb outsl push (bad) in fdivs icebp cmp add out push add fwait pop sbb push movsb fsubrs or push xlat dec mov icebp outsb jecxz (bad) mov lret mov jge cmp into mov cmp lahf jg pop mov sub xchg dec cmp dec mov sub cmpsb push lahf movsb fdivs fbstp mov mov adc mov mov xor pop fbstp dec sub mull mov gs loopne in xchg mov stc mov pop (bad) adc add lock mov jb dec dec dec test pop pop jo les outsl jo adc xchg rclb pop mov sti adc test pop insl (bad) or movsb cld xchg test mov test inc scas dec sbb cs outsl rorb cmpsb add imul sub inc aas sbb pop dec (bad) (bad) das jp jmp test jge and outsl xor lahf int in repz jo clc cmpsb adc rolb pop xchg push adc shll lret xchg addr16 sub push mov xchg xchg sub popa ds addr16 mov imul pop or icebp iret xchg mov ret and xchg arpl popa dec cmpsl sbb into mov loopne add ficoml inc dec push cli pop cli mov mov sub lods sub (bad) xchg ret (bad) fnop sbb sarb adc (bad) mov push or add pushf test call ljmp sbb js mov pop xor add pop mov cmpsb sbb adc mov bound mov cmp xor ret push ss daa mov mov adc ds jbe jmp jecxz cmp (bad) icebp into xchg insb sti mov mov dec mov hlt and xchg data16 and icebp aam dec (bad) jbe mov outsl mov pop divl popa fcoms ret nop or cli pop xor syscall aad (bad) aaa addb push imul xchg sbb fldln2 sub je js aaa push xor xchg push mov xchg pop xlat rclb xor jb outsl or adc xchg movsl gs icebp or pop or insb (bad) mov js es fisttpl adc repnz or and popa add shr je xlat adc es (bad) mov mov inc int fdivs jbe adc inc mov test xor cmp out aas mov push arpl xor (bad) inc xchg shlb dec sub mov mov in jmp test in cmp xor dec push dec cmp ret loop cmp sbb aas mov test or jecxz or int shll lret stc jo (bad) in xor int3 sub mov dec push add notl mov aas cmp insl (bad) mov lahf les adc cld pop rcrl je rcrl into cwtl mov cmc pmuludq xor arpl pop lahf jnp (bad) fidiv lcall xor mov pop test mov fcoms pop pop xchg vandps stos shlb popa repz repz flds das mov mov aas (bad) rclb xor xor jl call test push cli ljmp bnd or outsb jb cmp inc pop ficomp inc sbb cmpsl push jge jecxz loope cmp sub mov xchg sbb mov cmpsb fdivl cmp es cmp pop add (bad) std and cltd push jno jl xor pop lea or imul push pop imul adc push push pusha fadd push and (bad) fnstsw dec outsb outsl test ljmp jnp lods insb jnp and les pushf or ss inc mov inc push (bad) arpl push cmp dec test pop sti mov lds sub xchg addr16 cmp (bad) pusha (bad) out adc push mov lret xchg mov jno xchg lret dec loop lods iret or adc pop cmp cmp sahf aam jmp in ljmp sub mov dec ss sub (bad) dec xchg xor xor (bad) xchg ret sub add in lret sub mov loopne stos and in mov mov adc fsubrs cmp cmpl lret hlt testb dec cmp jb add mov mov mov cmp xchg popa arpl pop arpl mov idivb andb in mov popf jno mov call jmp mov mov loop add js mov lods fs pusha add sahf dec sub stc (bad) addr16 sub ret fild and mov adc dec mov xchg lods daa stc xor push cmp jns pop xchg gs dec ret test and mov mov imul hlt adc aam addl mov test (bad) cmp std push jmp dec pop push cmp jl dec rolb cmp lcall xchg pusha cli mov push loopne push icebp mov pop arpl test push gs (bad) (bad) aad movsl (bad) lods or adc mov in fistpl inc inc mov pop loope xor addr16 std inc inc push testb data16 adc ds adc lret stos ljmp int cltd inc lds xchg mov jecxz jnp es mov adc mov adc pop ja sub mov fldt lds dec inc adc dec cli int3 inc aaa sahf jecxz mov inc mov pop or into mov in pop lods or ffree mov in jnp in pop gs pop xor lea sahf ss and add fnsave mov inc movsb leave inc jnp sbb push mov or mov (bad) mov dec aas jge jle test or out sbbl push clc adc mov cmp out xor cs fistpl (bad) dec loopne xor repnz mov mov aad cwtl sbb pop repnz test mov sbb fs pop leave mov push inc inc std dec push cli or cmp dec mov jns lods cmp jge dec fldz sub fdivp adc stos sbb sub mov ret mov push and out or and outsl jbe pop insl lods cmp cmp inc mov jne adc scas cltd or jge push mov pop lods ja xchg ss adc (bad) cmp jns cmp iret sti or jnp idivb push or (bad) jnp and mov scas jle mov add mov add aas fistp adc cmpl in xchg inc (bad) (bad) fadds into aas sti lods lock adc mov sbb sahf mov mov shrb pop sbb scas jl fs jno xchg movl jbe (bad) inc xchg out fnstcw and mov sti out (bad) lret xchg sub jl or jp (bad) out cmp pop sbb lret dec push ds leave lahf fcmovne dec jge adc ljmp pop subl divb inc rcrl dec dec jno mov imul cli insb xchg in dec lods mov sti cmp adc mov insb sar movsl scas sub inc mov and mov stos cmp lcall push jp mov out out out out add jp add add lret mov adc stos sbbl dec lcall pop push (bad) aas add scas fidivrl mov mov jb pop dec bound call lret inc fs imul inc xchg iret arpl push pop cmp test pop shl (bad) jnp mulb imulb inc add sti jl add sbb and out and jns jae out shrb dec std jbe (bad) jmp adc adc push adc mov jg push mov lsl push inc xor out sub sbb (bad) sbb (bad) mov jecxz fidivrl mov xor rcrb ss push pop (bad) sbb jecxz and xchg mov sub fidivl jnp mov push dec mov mov lcall jns dec repnz imul (bad) lret sbb dec jns jns pop outsb mov mov jne pop inc cmp scas sub pushf add mov mov fcomi orb into es lods aam or adc fs aam (bad) fcoms arpl (bad) stos js ss outsl (bad) cmc cld push sbb or repz sub push xchg mov int aam adc xor cmp inc sbb lret frstor in fxch ret jmp arpl addr16 rol inc mov xor xchg pop mov rcrb dec push repnz or push mov jp nop xor ror loope leave push mov clc dec (bad) xor pop fiaddl jp test lcall fsubrs fidiv ljmp dec add mov aas xor sbb test and mov (bad) sub cmc mov shl mov mov fnstsw (bad) fisttp loopne lret sahf sub (bad) rclb cmc bound call or cld sub push mov pop lahf aas jae xchg cs inc idivl mov icebp push jno xchg dec jge insb sub cmp lods xchg xchg hlt sbb (bad) mov mov sub push call mov ret dec or mov or pop mov stos fisubr fs in jb in mov mov icebp xor pop int xor pop push push mul rcrb jg inc push je mov in inc sbb in xor dec pop push sbb fdivrs cmpsl sub and or outsl out (bad) mov pusha cmpsb test cld (bad) cs sahf (bad) pop jge je jmp mov xor lods pop cmp shr cmp mov lods arpl fadd es dec insb pop neg sarl stos mov fs inc push push xor pusha inc jnp lock sub add out pop sbb lea adc addr16 test (bad) jle xbegin add push repz push test inc mov repz add or xor and gs cmp dec in push adc fiadd cli rcr pushw dec imulb and std xor rclb sub sbb xor pop ficom xchg xor aas mov jge cmp movsl fwait push pop dec test adc or hlt loope xor cmpsb flds pop out mov scas ja xor fdivrs push mov les sahf jnp dec (bad) leave sub lret aad addr16 sub das popa daa xchg xchg push sbb xor and jns push sbb je mov mov (bad) xchg and stos mov add mov aaa mov clc xchg lock adc xchg addr16 mov push mov dec or sub sahf pop push loopne xchg mov rcr lahf dec lods das or mov imul adc mov xchg jo hlt daa jns (bad) dec ds pusha ret lahf hlt xchg lret push cmovp add repnz push into dec push jle (bad) mov jl dec (bad) test je xor stc jmp (bad) movsl sbb repz jge addb lods sub cli mov mov push ds add dec pop test mov icebp adc sbb repz jae xchg int mov sub stos mov pop mov xchg mov mov scas xchg int3 lods jg inc hlt xchg mov xchg loope mov stc pop cmpsl jmp sbb adc out sub add loop imul or pop fld add out push xor iret sarl add (bad) push shrl jmp or lds xchg sbb push repnz or popa jl mov aas movl call mov mov and aam outsb sub pop test push sub ds cs jnp sahf push jecxz push call and lret lea fucom pop call lret in mov adc mov inc push add or xor gs sub xchg fdivr ret jmp xchg pop jne or or xchg add xchg fld aam ljmp ds xchg inc repz (bad) ljmp fcmovnu sarl addl and hlt fimul cmp shl and sbbl jle mov jbe mov (bad) xor push inc pop sbb (bad) dec cmc lret test add jecxz push cli enter pop test mov push mov add mov arpl mov aas pop popf jo or mov cmpsl mov mov pop sbb jmp and jbe adc fidiv push pop xchg mov pop sbb cwtl int3 jge pop fimull cmpb ss sbb fs (bad) and insb push add xchg aaa mov add es fwait pop pop mov lea and mov xor xchg sbb dec ss mov stc addr16 je mov loope jne (bad) lods lahf adc fimull (bad) mov jbe mov pusha dec jp adc add (bad) bnd push in cmpsl pop push test jnp cmc mull mov push adc jne cld je mov (bad) cli js xchg push push cmpsb divl xlat decl mov and sub dec mov push fldt cmp mov pop push jno nop inc mov jle nop fcoms push push pop cmp (bad) lahf scas and dec xchg cmpsb jns sub into mov (bad) fdivl lret jl call add test rolb jl std roll popf pop mov call mov xchg mov aad aam icebp das sti outsb aam je mov dec adc in ljmp inc repz insb mov jne loope ficoml jno test sub das loope pop pop and xchg aam add adc mov inc and in xchg cmpsb (bad) xor pop jnp add mov adc (bad) add adc sub loop das mov xchg sbb test test lds stos mov repz pop sarl into dec cld inc test pop scas jae popa fldl cmpsl loop fstps xchg push sti push mov lds scas aas xchg jnp rclb sub jmp jge in push jnp rcll pop adc push sbb and (bad) fildl scas test aas les mov xchg cltd ds mov lods push push ljmp outsb repnz jno push cwtl psubusb push push lret mulb test pop pop adc pop sub leave sbb (bad) cmc adc pop shl lret fmul cltd pop rolb and pop in icebp sbb cwtl jmp jp push aas test (bad) in addr16 lods xchg fstp mov cmp daa inc pop xlat icebp sub jecxz or mov pop add (bad) dec rcrl xchg imul movsl repz mov in lret push or push push clc inc inc jbe das add jne inc out adc or jae aad in (bad) push jl dec mov mov push loopne movb push and nop mov addr16 fcomp icebp shrw incb adc cmp xchg lea mov adc stc mov aam push outsl cmp sub dec sarb lret in and (bad) jp push and fldl cmp pop lcall loope mov fwait pop jge fnstcw in mov jecxz scas sbb lret or (bad) je addr16 lahf mov dec mov stos mov out inc xchg fwait leave aas push inc pop or jp pop pop repnz mov jge pop fisubl pop xor mov add push shrb loopne lock inc sbb (bad) cmp mov fmuls test lds fnop mov jno lods out int3 xchg push add popa lret fisttp pop mov (bad) fisttpll imul mov lds cmp mov adc push icebp mov arpl mov xor subb fisttpl mov (bad) repz cwtl ss mov insl push call adc xor inc pop stc jno (bad) lcall mov or outsb icebp ret xor mov or mov jno in jno movb gs and inc (bad) icebp ret sub (bad) pop arpl add and gs mov in or sbb add stos hlt inc jbe jge repz (bad) shlb mov and repz xchg pop or jg aaa cmp inc scas inc sub fsubrs (bad) jle jmp lea jmp scas vpor xchg dec inc les fwait idivl hlt pop fs lods lods hlt into mov (bad) mov jo repz inc xor sbb repz ficomp int3 repnz hlt pop (bad) mov pop xchg movsb jns std gs inc jnp cvttps2pi fild fwait in adc bound xchg ret stos jecxz pop jecxz mov jbe icebp (bad) add dec in sar cmpsb (bad) aas pushf xor imul mov imul jns sub daa jp lock sbb outsb dec jns (bad) add mov pop test les dec add cli in jg jb data16 in idivb lahf dec repnz mov push inc xor inc (bad) fsts js test add (bad) gs gs adcb cmpl or jae cmp mov pop sub xchg cli sub xchg sbb jb ja sbb push dec jb sub xchg shr mov mov (bad) hlt sbb repz aam mov cwtl fwait in xchg sub sbb adc xor aaa or rcrl jle orl je push in movsb (bad) jne sbb inc mov sub cs js cmc push xor push dec dec lahf or in sahf or mov lds das xchg mov sbb js mov add jp lods dec rcll scas repz pop push ss cld sub and fcmovnu pop jge cmc and pusha mov pop jb aam (bad) (bad) mov lods lcall loopne inc icebp sub loop lds mov cmp daa xchg xor je push in push fcmovbe dec outsb mov int3 cmpsb popf inc mov or repz xchg out sbb mov mov xlat (bad) call imul xor (bad) sub cmp mov (bad) call fs dec loopne xrelease and rcrl stos mov ja cmp cmp (bad) out push dec notl sub daa inc scas test movb mov ret or repz popa (bad) ds xchg daa sbb pushf out mov inc (bad) cmp mov pop pop popa rcl lods push pop sub or loope mov pop sti mov xor inc xlat stos rorl dec pop jecxz xchg (bad) mov (bad) jne cltd rclb xchg push pop out jbe ss or std cwtl mov jg pop test mov add inc repz movsb enter mov addr16 add cmp push mov mov aam lcall and add (bad) sub int3 pop jno push xchg pop ja dec outsl ljmp ret pop loop in xchg sbb insb (bad) in mov pop mov sbb mov insl out or leave add xchg lcall xor aaa (bad) popf mov cmp stos mov or fdiv push mov sub nop sarl mov cld icebp mov sbb jl push jecxz stc jae (bad) enter push sar sti and pop (bad) rcr add pop iret pop imul insb xchg mov sub rol push xchg sahf (bad) push es pop out test mov push xor test push outsb icebp xor xor dec and test scas dec fildl repnz push mov ljmp fwait in int aas icebp jl aam je rcrb mov adcb or (bad) daa loopne pushf adc nop cmp jl or aad daa imul nop mov jecxz sbb lods in (bad) loope push out repnz ret fnsave test xchg cmp jno xchg aam cmp or inc inc repnz sbb sbb xor popf sbb mov fwait mov movsb xchg cmp jo xor es jge mov in fsubrs gs pop into add bound arpl cmpsb out mov push and dec mov aas div jge inc insl xor jno and dec mov lcall mov test mov dec sub mull xor jle inc bound sbb or (bad) or push leave cmp addr16 mov pop in add dec cld mov mov adc sub out mov mov pop popa jae adc addr16 negb push sbb cltd icebp (bad) fldenv fidivl mov xor inc out iret fcmovnb outsl xchg mov xlat xor repnz dec mov gs sub loopne imul popf xor or mov or cmp rcrl inc mov jne,pt idivl push sbb mov push cmp nop lret int bound icebp imul repz clc icebp xchg jbe stos sbb in subl iret std lods dec arpl popa ret ds pop push hlt push cmpsb dec (bad) pop lcall lods les (bad) in dec mov es mov (bad) push mov xor dec push outsb mov jmp notl pushf cwtl fwait dec fcom mov jecxz dec leave nop mov popf fucomi fidiv imul push or (bad) (bad) sbb outsb inc (bad) roll fimul cmp push lret mov dec fisub dec ficompl mov push test shl loop inc mov xor scas jns mov or sarb push aaa mov mov ds xchg push pushf dec gs dec adc mov and scas aaa jne or cmc data16 and sub jmp sbb add gs repnz or mov in adc or push pop and mov mov movb mov inc sbb cmp lcall or mov cmp xor lds or mov push adc sbb pop stos push xor (bad) out cmp cmp lahf cli jp adc hlt mov aaa out sbb enter sbb pop pop xchg jno or pop add insl fcomps clc sub notl or int3 imull fsubs mov stos or in sub ljmp jp xchg mov cmc xor sbb inc stos in cmp mov ja pop mov and test cmp dec sub into sahf (bad) dec cltd jp sub pop add push cwtl xor insl cmp rcll lahf mov test stos lret fucomi lcall ret lock or repnz adc fldl hlt loope dec or lret sarl mov lahf xchg movsl jb fcmovbe daa sbb popa dec dec clc inc out dec adc fsubs out rclb inc ss les scas (bad) jp jnp in in dec lahf pop ss cmpsb push in cmp mov shr (bad) xor push push (bad) adc inc pop rorb aas push sub jmp jp mov mov dec sub inc mov xchg mov lea (bad) and dec (bad) push and mov inc xchg xor mov jp pusha es stos inc cltd inc sub ljmp ljmp cwtl cwtl inc jp sbb movsl out loopne or into das in dec sti lods ljmp das add and out and cmp cmp pop inc mov shrl sbb mov mov je pushf pop push mov jne xchg mov add mov add mov mov in and je jp jo jmp test (bad) sbb and out add or xorb addr16 dec xor pop lcall popf stos xchg lret push adc push or rol into inc rolb loop,pt popf mov stos xchg mov and daa jecxz add in in and js je loop xor jmp add mov mov pusha add decb sub inc cltd scas fcoms and sub jb sahf out and mov sub imul addr16 xchg jecxz sbb sub dec adc nop add into xlat xor cmc inc inc ret mov push movsl movsb jmp (bad) jl (bad) nop (bad) mov push loope push sbb jo jne inc imul xor decb insl xor addl call sub sahf call sbb rorl in push clc xchg ss inc sbb adc push int3 fstp mov adcl add jbe rorb andl mov xlat xchg push push leave sbb outsl add mov mov enter add lods (bad) int dec pop xchg out addl xchg pop xlat mov cmp xchg out andb sbb loop lods sub pop and data16 jp mov arpl lcall rcl int3 les rcrb push icebp push cld mov adcb in pop add scas xchg mov lock mov cmc ljmp and jge fstpt rolb fwait lcall push sub mov or stos lea add adc add ret roll lods pop mov in fdivrl add fstpt js pop cs and mov (bad) int3 cmpsl (bad) inc and test xor mov jb stos sti loope pop cmp cs cmpsl in out les mov stc lods sub mov hlt bound loopne das andl js scas ds or xchg lcall mov inc adc jo adc mov repnz sbb mov ror add loopne fmul mov lds (bad) jae xor out or subl cpuid pop cmpsb pop and (bad) mov xchg fimull or jo (bad) mov (bad) jnp mov and movsl add lret mov scas xchg push mov mov adc cld fcomp push test test mov add shll pop push sbb ljmp add push cmp int scas jmp xchg xor cs test adc push mov mov sub push frndint (bad) sbb dec daa fstpl pop add in inc les sub mov cmp lds or (bad) fimull jle pmulhw sar cs mov mov lock push push jp and rol mov into stos xchg stos lret adc (bad) fcmovne sbb jp pop sub loop test xorl pushf pop mov imul scas pop icebp pop in mov arpl leave arpl test addr16 sub mov repnz fidivr xchg inc sti pop inc mov mov or jle mov mov mov test dec xor popf cmp (bad) and sbb mov hlt int cmpsb xchg mov in enter sub mov es add cld in inc jmp jmp ljmp or mov out insb mov test pop jbe enter push xor inc mov mov adc leave subps inc mov inc mov (bad) or xor pusha mov adc pop dec lahf mov and cli cmp mov cmp inc cmp adcl shl xchg jecxz gs jno data16 popf dec fsub imul int mov dec mov push (bad) in mov int3 lea bnd lahf adc xchg ds push incb jne xor jmp loope fdivs movsb inc xchg lcall (bad) push testb cmp push lcall pop (bad) pusha fdivrl mov in leave rorl addl gs cwtl jbe fsubr mov jmp fsubl shrb and inc popf sub out cmpsl sti xor pop mov (bad) or dec in cmp mov sbb fisttpll outsl nop dec sbb jo push sub scas dec mov jge out sub and test or int mov call aam jbe pop jp lahf insl scas sub js mov (bad) cmc cmp add ss jmp jnp jle in dec loope push popf push pop mov stos sbb sub mov sub pop or mov mov insl xchg cmpsl scas inc orb jmp add sub fcoml push mov adc xchg push cmp mov icebp xchg aad sti popl jg pusha or test in arpl into gs les push out sbb jecxz mov negb push adc cmp cmp mov incb sub ds sub ficom dec cmpsb dec xor mov lea iret popa sbb lea sarb aad add mov xor push xor insl fldl sti in mov mov lcall adc cld pop cli inc xchg mov cmp les in mov adc cmpsl mov fist xor or jecxz xor loope jae test sahf aaa aaa xchg popa pop push sub divl pop mov lcall es mov inc call mov hlt mov xchg insb ret sbb add sub pop lods dec jb xchg popa mov sahf in out clc ljmp cmp xor pop jl and adc mov movsb loopne cmp test push clc or push scas mov lret dec mov and ja insb imul es xor enter ja (bad) je pusha or pop push sub subl shrb cmpsb fs (bad) pop fisubr ljmp push xchg cltd (bad) fs sbb add (bad) mov daa lret out mov cmp mov or xchg in mov data16 loope aad push or clc xlat sbb es pop incl pop cwtl xor int3 mov mov sub sub mov minps daa nop inc aas out mov mov jg pusha rcll bound popa test dec movsl in xchg enter push mov out push xor sahf cmp jne popa sbbb and add cwtl mov mov sub out pop shlb sbb leave jge xchg xor sub pop dec mov dec pop lods sbb mov out fldenv xchg pop out cld inc ja aad stos inc add push and xor push ror mov (bad) push ret fldt lods stos dec cmc gs fiaddl xor xorl push mov inc xchg xor xchg aam mov addr16 (bad) jne gs xchg out sti pop movsl adc lahf xor add sub js jmp jp sub and xchg js adc jo inc mov push int3 mov (bad) scas cld call (bad) mov mov mov (bad) mov cwtl es gs ret jnp pop jp repnz adc mov pop add dec stos out std icebp push mov insl mov adc (bad) fcmovnb inc data16 movsl push mov and mov fcomi pop mov xor adc mov xchg fwait mov insb xchg test insl andb add jp add xchg xchg jmp inc aas add lcall leave dec push sbb xchg xorb sbb xchg jecxz loope mov xor pop push pop pop sbb in push loop shll mov pop dec jbe push add and push and mov mov roll leave int3 (bad) sbb mov mov inc mov daa mov scas mov cwtl inc lods cli or and jecxz pushf sti sbb or test ret cmp outsb pop dec ds js fadds mov lcall testb (bad) pop shlb loopne pop aaa mov sub jle mov inc pop insl arpl mov and lods xor jge adc stc pushf inc adc mov fdiv dec jg pop fiaddl push adc sahf sbb pop xor cli add pop xchg cmp mov jo mov lods mov jl idivb sub inc or insb insb in pop sbb xchg les or mov and add cmc aaa xor xchg insb ret jg xlat in ja adcl jecxz in imul push test cltd (bad) cmc scas dec xchg pusha jge pop in je jmp sub in pop cwtl cmpsb cmpsl aam jmp cmpsl push cmp mov xchg mov in js fs sbb adc xor mov aaa je and popa loop fsubrl (bad) mov icebp mov mov icebp cmpsb or pusha jo inc in ja pop push hlt and fadds insb mov in test xlat push mov sub add inc sub dec xchg add lods rclb mov repnz sub sub sbb add adc xor hlt ficoml add fstps jns stc sub pop push mov enter (bad) dec lea jl loope imul js subl outsb mov mov movsb adc jle bound icebp sahf mov outsb in je jo loope mov fsubs fcoml stos mov popf (bad) lods in push push mov scas ret adc push mov xor sbb iret cmp jo movsb in mov sub dec sbb xchg adc cmp ds sahf cld aas and ss and jl mov xlat jle dec push gs outsl (bad) sarl mov lods xchg lret imul xor cmp mov xor lret out movsb jge add std mov movsb lcall jnp add jo (bad) lahf mov scas repnz push imul pop scas cltd dec je test and push push push xchg lods (bad) mov mov or mov push add lods mov jp and push fisub xchg inc repnz xor lea fisttpl lret mov cmp adc and xchg inc cmp xor sub or mov loopne lahf clc inc popl rcrl xorl push mov mov dec adc and xor popf and jle cld pop pop in inc daa pop es cs pop stc outsb pop ss mov (bad) mov das in and ds or hlt mov pushf push add mov xor add mov sbb addr16 mov (bad) mov jbe imul pop std lock add xor adc cs add lret dec sbb es outsl loopne sbb mov out pusha pushf movsb jecxz cs mov (bad) and mov push sbb outsl mov icebp lret lea push hlt pop pop mov or mov ror mov inc (bad) xor push jl stc mov xor mov lods mov cmc cmpsl jl push sub (bad) jmp xchg jge cmp mov ja push xor jmp fidiv stc imul adc sbb (bad) subl out mov xchg js loope push (bad) pop out adc adc movsl push pop fmuls mov movsl jl mov xchg gs mov fmull mov sub mov (bad) push mov adc jns pusha lds sahf fnstsw cwtl add sbb rorb pusha (bad) jge mov cs pushw mov stos in fidivrl jmp cmp add sarl lret mov adcb (bad) test push pushf cmpsb add cmp mov sti in cs or test mov icebp add xor insl sub outsb cmp fs loopne fisub lods jo mul push repz testb jle rcrb cmpsb or stos (bad) xor mov sub adc mov push or cmpsl mov jno inc sbb (bad) xor insl sbb inc ss mov shrb fsubrs lahf jae inc cmp icebp into jl arpl shlb int ljmp clc cmp push sarb mov mov xchg (bad) (bad) (bad) (bad) repnz ret push jne cwtl hlt js fwait insb mov adc dec push fs inc ret jbe adc and (bad) adc add cmpsb mov test inc push add fs cmp lret dec imul push stos inc dec or arpl cmpsb out enter lock mov dec xor fisttp add dec into pop ret mov add pop je loopne ja xchg fmuls xchg and or mov insl test add popa mov shl cmp inc cwtl cli shlb es popa push push jo faddl pop pop mov mov mov daa xchg mov jle jg cld loope lcall xchg loopne bound add ljmp cmp lret and push mov xorl push push (bad) xor add leave adc adc clc cwtl stc mov in mov push xor pop js xor mov decb jbe stc push pusha popa (bad) jns push mov mov push or jl insl pop imul sub jae aas add and mov mov push pop adc cli rol xchg inc and popf out into adc ficomp lret and push push bound mov ja movl lret nop pop sub pop dec adc (bad) in mov imul fcmovnu add jp mov (bad) lret inc sti adc xlat nop push aam sub movb pop sbb mov sub int push mov sbb cs hlt test aaa xchg pop sbb xor add lods mov cmp pop jae xchg scas (bad) clc inc xor ljmp (bad) cmp clc arpl jb bound ret std sbb inc cmp insl mov out je dec and fcmovnu call pop fs bound in xlat es cmpsl ret cmp mov stc adc and cmp enter pop inc rolb (bad) jl push xor mov mov dec movsb pushfw pop (bad) in dec mov lgs add pop xor mov ss jbe mov pop mov das sti push popa movsb aaa std test jnp aad adc or pop imul mov and inc outsb mov sbb std decb lfs sbb aas inc push xlat inc pop xchg hlt pop fildl jo ss out aad xor into dec iret sub lock cmp (bad) aas jmp xor mov fstl test inc in jl (bad) scas fs test xchg stos or in sub addb (bad) sub pop dec push mov cmp sub push dec add mov push add stos mov xchg dec lahf cmp pop dec inc jmp mov aas pop in test jge ja mov push sub add xchg xor clc xchg pop jmp (bad) cmc cmp dec adc jb aas daa inc mov movb lret shll gs nop shlb pop xor mov fisubrl jo mov inc (bad) inc xlat pop mov jb adc iret test dec mov jle cld xchg inc mov fistpll push cmp mov xcrypt-cbc cmpsl xchg in repz add pushw jnp imul or mov add push mov rorb outsl add dec jbe scas mov adcb mov hlt mov mov inc (bad) outsb inc aas call hlt mov mov add sub pop rcll and mov (bad) push jbe aas sarb sub jnp movsb mov mov sbb test push pop test xor data16 jg dec lcall lods cmpsb popw jns xor push xor adc (bad) mov fdivrs mov insb mov jne xchg cmp (bad) and bound ljmp add mov gs xchg stos inc xchg js and mulb js sub inc lds adcl ja fsub das (bad) mov pop mov mov inc pop sub xchg mov fisub mov lds enter ss fimul (bad) jecxz pop mov push add xchg mov mov pop fimul cmpsl punpckhwd dec in mov lea es sbb push inc add fstpt faddl loopne shrl stc push orl out cmpsl and push mov loop js leave pop xchg ficoml adc cmp mov lods ja push dec dec push (bad) scas or add mov fstpl mov test test das xor push inc push mull mov lahf bound test mull icebp mov decb dec lods out ret lahf cli or in out add xor lods jmp cmp scas push jl xchg adc mov mov sub inc nop xchg imul pop jecxz mov pop cli call adc in sub cmp ss es adc sbb mov imul mov scas (bad) out movsl mov xlat (bad) sarl mov xor push pop mov add mov loop int3 mov pop or dec ds das sbb push (bad) out mov push (bad) cmp push lcall and pop (bad) pop aad mov out add imul adc push fdivr mov pop pop push (bad) adc pushf adc cmp sub cmp sti (bad) jle sub jne lock adc fstl sub sbbl sub lret mov add mov xchg adc push (bad) movsb jbe mov pop divl dec and add jecxz jp,pt cltd dec into cmp test add ds xchg ss leave movsb movsb mov push or sbb jb mov scas lcall fstl or and lahf testl enter mov xor aas cmpsb stos into gs adc adc dec imul out (bad) push jge (bad) lods addb jnp dec adc iret cmp ret fbld loopne fs (bad) jbe fs pop je push mov mov mov ljmp mov inc stos xchg in cltd sub jg mov pusha or lret sub mov push add ss xchg mov test aad adc push push or mov (bad) push mov cmpsl add inc lods xor cld cmp das mov lcall dec aas pop add push (bad) pop inc mov lret jbe fs std repz xor add dec mov jp push rolb sarl shrw dec xchg dec mov (bad) push inc or or or xchg sbb std out mov ds sub dec addr16 xchg fildl mov repz inc (bad) in mov or into cs sbb ja (bad) xchg stc (bad) mov aam push and adc mov mov ds js lret js xchg sbb dec les ss mov inc mov mov or mov mov cwtl jmp xchg xorb push or mov repnz lock loopne jg xchg jb push fs push dec movsl pop in incl scas xor mov mov out iret idiv (bad) cli jp pop cmp cmpsb dec and or iret sbb or ret mov dec cli lret push jecxz or push leave fnstsw and insl pop (bad) stc push or add stos xchg sub mov scas dec adc cmp inc pop xchg xor mov fdivl xor inc je pop pushf add inc mov sbb push and ficom jno sbb out inc sbb ja bnd sbb inc mov rcrl adc inc or addr16 cmpsb jb popa pop lahf jb rorl cmpsb jg mov fbld mov sub sbb pop add mov paddsw fidivr dec xor popa pop gs add xchg or push std xchg cmc cwtl lahf arpl inc leave (bad) mov aas xor push lods and cwtl cmc shrb test inc cltd not jp dec insb dec rcrl ljmp push scas pop stc fstpt pop xor mov add (bad) aad jo movsl movsl xchg ffree add pop mul lods ficoml mov xchg inc and sbb cmp xor stos push mov mov cmc insl mov aas inc fistpl mov in ja inc aad lods or cmpsb jmp data16 bound sbb lods movsl daa dec xor mov push iret jl pusha cmp hlt inc int3 dec es es cmp and (bad) sub jecxz lahf push out pop mov fisubl bound aaa or loop divl popf jns and or dec aaa jge cmp cmc push cmp xchg pop mov jl push or fldl sbb mov push and add dec cld push inc pop (bad) leave xchg mov cmp nop inc xor je movsl aas cmp in cmp aam cld hlt imul push cmp mov inc mov xorl mov push jae pop int paddq enter xchg push inc ret popa (bad) in loope das adc sub xor jae fcmove loope (bad) out imul pop out mov aam dec test shlb fwait jne out sbb (bad) fadds xor push or pop jp cmp ljmp mov mov push in aas adc mov cmc fs xor pushl cmp add js inc xchg (bad) xor movsb adc pushf stos xchg mov insl aad pop es mov ror lods pop jo fsubp xor std int inc in sbb xchg fistpl push pop fbld lock push test movsb lret clc icebp mov xchg sbb cwtl push jmp push mov xor xchg pop adc scas push lcall push jbe fnsave scas jmp and lods scas loop lds inc and cmp pop ss mov jmp xlat and mov pop inc pop incl push (bad) sbb ficomp add xor adc fistl push enter mov mov lods aas jmp xor sub adc nop cmp mov arpl test out ja xor adc jp jl or inc add (bad) loope insb mov push push setge add inc or xor xor mov mov dec inc sub sbb jl pop bswap inc lret xchg shll push pop jne mov ret ret and add sti inc push adc lea pop jl es cmc add adc xchg (bad) ja jge pop jecxz (bad) int3 nop pop adc pushf shll and (bad) loope faddl pop inc in or stos insb mov push fwait cmpsl jl jp (bad) cmp push xchg adc inc or or mov or stos je fsubr dec fstl (bad) pushf cmp imul outsb lcall mov inc lahf outsl adc int3 cli push push mov cltd outsb mov mov shrl imul outsb es ja xchg sbb jbe mov fnstsw and sub cli add (bad) xchg inc aam fs icebp mov jb adc cmp jmp in fnstenv out clc pop xchg idivb pop jns ret daa mov insb aas lock pop in xchg cmc sbb mov mov addl adc push sbb sbb cltd or fild mov in pushf testl daa jge sbb es test xor mov or adc xchg lods xchg data16 dec inc mov sbb sarl push int3 es mov std lods or sti dec mov int3 loop and xor ficoml jmp jae js pop pop inc inc pop and rcll mov xor jno mov das adc jne insl and lret xor jg cmp lods stc xchg fdivr cmp lock aaa add cmp in sbb mov add sbb mov repnz loope or sub int3 or test pop fcomps imul sbb mov pop arpl cli or jg cmpsb jb xchg ret mov xor out gs movsb enter mov shll fnstcw (bad) mov mov lea nop mov ja test jno jae scas cmp sub in mov mov mov mov das repnz mov insb jl jb xchg mov jnp fisubr mov jmp aas push inc lret nop iret inc stos movsb mov insl loopne sbb sbb cmp lret pop dec sbb or cwtl outsb movsl xchg aaa mov rol ss rol rcrb repz jge pop push mov mov jno scas cwtl or xor repz jecxz lds xor stos mov pop cld movsb out jmp (bad) fsubs fisttp push out pushf inc sti aas lds jb push mov add scas cltd jnp dec xor jmp mov dec sti mov pop stos cmp dec pusha jbe testb adc add jmp and ret xor outsl mov or add xor cmc pop ficompl xlat sub cmp stmxcsr jo pop push sub adc imull popf pop cmp add push (bad) repnz sub mov jae (bad) aam and add fisttpl mov clc fcom cs mov stc pop pop int3 aaa adc sbb mov mov and mov cmp mov jl cwtl cltd adc mov pusha cmp es test add cmp mov fiaddl xor in roll push push nop loop fbstp movsl out idivb int3 sbb mov int jnp cli dec push fwait mov push mov mov sub clc fildll or mov xchg push gs cmp xchg daa mov cmp and in negl call mov outsl aad push lock xor out std jl inc enter inc scas lds lods cmp jecxz jne add push mov push insb adc sbb (bad) mov cltd adc out push fisttp (bad) adc mov dec mov push xchg rorl cmpsl and or sub add xchg push repnz imul and notl adc push adc imul fbstp cmpsl mov bound xor jnp lahf mov lcall das jmp and mov popa jns or pop mov adcl lods lock xor mov adc fildl (bad) jno mov andb ss xor not loop cmp jae arpl clc push push in mov sbbb mov mov push xor jp adc adc push xchg outsb out sub into add arpl push push loope dec mov out orb lret pop cli lret in js or mov call fwait lret and xor cwtl lock pop xchg movsl push pop dec pop cli jno (bad) (bad) jecxz into mov nop jae test or sbb dec decb and jne mov cmc sti inc pop pop je scas aas mov pushf or inc pushf adc pop or (bad) dec mov sahf aam adc fnop cmp push lcall sbb cmp ret es fisttpl shrl das jbe addr16 push mov leave inc and mov sbb pop pop out jo (bad) (bad) pop sub mov jo faddl jo push lock adc inc stos out xchg add sbb xchg pop pop (bad) repz lcall xorps lret repz imul inc jp sub inc mov or test mov (bad) or sub aam enter jge mov push loope add outsb cmpsb xchg imul movsb jo sbbl jmp mov mov pop shlb imul data16 xor (bad) shl adc xchg xchg daa jne add aas (bad) cld imul fdivp je pusha scas cwtl fsubrs rcl mov aaa push into btr ret cmp and dec pop dec iret add add aaa cli dec adc xchg pop cli pop leave ficoml popf test and pop push outsb (bad) jb out shlb adc (bad) lock in movsl test arpl sbb jnp sub pop inc xchg ss mov mov adc jbe xchg xchg xor cmp jae gs sub orl sbb ss xor pextrw push dec arpl out in inc push xchg std rorb call cmpsl inc loop push add push rcr std scas xor push and push inc sub xor cmp push push ret je sub sub push mov incb jne imul in sbb out loopne dec fwait imul xchg dec sbb push mov dec int fisttpll inc in cs add movsl mov pop pop cmp in push popfw jmp fsubl cmp push (bad) dec push fstl fwait xchg ret shrl aaa mov add bound cli ja mov aam pop iret or mov cmpsb sbb iret xchg dec jnp clc js sbb rcrl jb je push add cmpsb cmp ljmp cmc nop inc sbbl push jmp pop or lods aad mov jmp mov lahf mov stos jge lahf jl mov loopne das add in (bad) sti int insl inc lea mov add ret in or pop sbb push pop repz sbb imul xlat jge sub or xor jbe mov lods jp out sub mov mov movsb loop and adc and sub or pop mov aaa (bad) std sub shl mov cmp cmp (bad) dec inc scas lds jnp dec jmp popf stos cmp je sub loopne imul into stos repnz ds lods or fisubrl ret push add rcr dec dec sbb nopl dec mov dec dec test sti pop pop or les push shrb dec in outsl mov movd aad int aam loopne loope pushf xlat jae clc or adc rcll std ret rcll add xor xchg out pop popf cli out adc int mov xlat (bad) xor fsts add ret xchg jbe pop pushf (bad) clc adc cmpsb test call pop leave enter dec dec mov push (bad) dec test pop xchg jae in add in pop icebp push xor into ljmp cli push mov sbb adc adc xchg into push xor inc js stos push and insb bound cwtl (bad) cmp dec mov or inc cmpsb push cmpsb pop sbb lods push dec push mov clc test into test mov aad add dec xchg shlb les cltd mov jae iret repz cs pushf pop loop xchg push in pop cmp cmpsl (bad) pop arpl out aad hlt pop (bad) je xchg push push arpl push jp pop (bad) aas das insl ficom dec (bad) pop mov fwait xor adc add xchg adc fs mov jp inc fcmovne dec outsb cmp xor add add mov fwait lret fwait pop cmp imull adc test add mov push arpl fcoms mov mov and call les dec in sub pop (bad) movsb sub (bad) test stos ret push lret pop pop in (bad) pop xchg loope lods rcll adc std jbe mov jne out cmpsl adc out mov xor (bad) xchg jle push lds std mov imul dec pop or outsl push lea in loope orl aad add mov mov push aas mov nop (bad) mov mov iret adc jb lret pop outsb pop push insb inc xlat enter xchg (bad) mov xchg icebp in cmpl int xchg jae lods lds dec fisttpll call and fdiv xor cmp insl out cmp cs movsb adc or mov enter mov iret adc mov rcll out ja les cmp je and adc daa stc push mov xchg mov popa mov fistp lret pop xor (bad) popf inc enter neg mov jae cmp imul push cmp cmp fdivrl and cmp add adc cmp jnp sbb das sbb cmpsl push push int and rcrb gs xchg incb xchg xchg dec nop lods hlt int add cltd mov push sub mov fnstenv imul push or fcomps or in js xchg scas mov adc adc sub mov push aad mov dec adc std ret test xchg dec stos aas pusha popf fisubr test and and (bad) fcmovbe fistp or lods pop enter inc int3 insl (bad) cmpsl fsubrl fisub cmp mov dec mov addr16 mull mov in dec mov int3 jmp in pop xchg jl xor jne xchg in or aad imul sub sub (bad) (bad) mov sbb mov mov jne pop adc dec cmpsb adc movsb jb sub jns fwait inc mov xchg mov jno jb dec cmc inc and test aaa sbb add xchg push and (bad) hlt lcall in enter push ret mov add add call testl (bad) bound pop in movsb pop inc (bad) fisttpl fidivl mov jp inc jns and cmp push adcb fsub inc pop sub inc int3 and es cs divl fs mov push pushf jp mov test add push pop ljmp pop sbb xor push movl and outsl test sbb xor mov ror pminub mov sbb and movsl inc aas leave add adc push dec mov push add mov lods lea ljmp scas ret cmp lods cltd add push dec add out hlt lret mov pusha xor loopne outsb inc cli push sbb ss push test test adc add ja pop and ljmp adc sbb cmpsb and sub xchg arpl sub in (bad) xchg dec inc fwait test push jg ljmp shll cmpsl xor mov push int adc test sub ja push call and mov dec (bad) push mov xor dec repz mov adc mov xor (bad) aam psubusw insb (bad) jae add call mov and xchg lahf xchg and pop push mov jae je stc pop xor mov insl popa or adc popf stos pop xchg dec mov mov in out mov dec dec cmp push dec (bad) shrl inc push clc push dec push dec inc push es add mov icebp mov xor sarl cli add cmp ss lock int3 or cmp push sub test jbe adc adc jl std sarb mov inc xchg sbb pop inc in pushl push imul outsb adc mov out lret fcmove jo shr push sarb (bad) mov lcall out int3 sarb push xchg cld sub in jge jo imul jb lods mov cmpsb push lret jmp push inc add fcomps insl hlt xchg push pop imul in outsl sub aam test adc leave idivb fwait cmp and pop xor out pop enter rcrb fsubrs aaa andl mov or jns popf jp insb (bad) sbb or sarl shrb outsb (bad) cmc dec xor adc jae orb mov pop or das xchg out inc (bad) pop push stos loope (bad) (bad) adc xchg mov dec or xor (bad) fisubl (bad) aas int cs xchg mov jl iret mov cmp mov leave sti pop stc push pop aaa mov ret (bad) and and pop out mov mov stos pop cmc in in pop repnz cli sbb push insb mov mov out cmc ret cmp mov push loopne mov adc jbe ljmp in xchg cmpsl and insl ret jo lahf or fwait or mov cwtl cs fldenv out insb xchg mov pusha push push mov fbld leave dec mov dec iret and lahf cs xchg bound mov fldt lds repnz jns lods mov xorl ljmp (bad) jne data16 or inc xchg fldl push aam fsubp or rep fs out cmp add sub and ret movsb jp pop dec mov jle (bad) mov sub iret dec mov popf cmp out mov sbb xchg push movsl dec push sbb mov cmp or loope ds lcallw hlt and sub jo (bad) adc push stc insl outsl add lcall push mov mov pop cmp adc pusha and scas negb addr16 jns push (bad) repnz xchg mov inc test and lods jg cmp lea sbbl movsl test mov (bad) aad stc dec mov cmpsl cmc pop mov jge adc movsb pop mov xor sbb jbe aaa mul mov (bad) std mov dec in cwtl push imul cmpsb dec pushf pop lock mov aas mov out std mov lret gs xchg es cmp mov mov dec dec mov lea xchg xor or (bad) dec xor cltd sub jo lock dec xor mov jg loope jo idivl jecxz loopne cwtl fs in test cmp or ja inc lcall cltd rcrb das adcl jl or xchg push outsl cmp mov add mov or hlt sbb xchg lds push mov fs jno imul nop cmp (bad) mov and outsl (bad) fisub add pop mov cld pop dec (bad) mov sub mov frstor in cli mov cmp fwait ret popa ljmp sub test mov xchg cmp movsl je sub xor jmp (bad) jo jl and push out fidivrl fwait in hlt fwait aaa cwtl xor adc out mov cli sbb jno inc sbb sti out rorl (bad) push xchg xchg cmp je enter lcall sahf mov sbb push mov out bound or je ja fbstp repnz adcl packssdw (bad) stc jg add mov and shl daa mov iret xchg xor xchg push std dec cwtl dec lea and int3 inc xchg push (bad) sti popa nop das sub xorb cltd push orb mov sbb test mov or xor addr16 imull frstor popa in inc mov rolb mov push test stos addr16 lds mov gs jae int je pop sbb and push add fnsave sahf add clc jp mov mov (bad) call sbb cltd inc (bad) mov push add fbstp daa fsubs inc pop jmp sub add lods lds or in test test mov jns rcll mov mov inc sbb lcall or xchg ja sti pop inc mov mov cld fsts incl lea rolb repz cmp adc adc cmpsb and xor inc xchg test push mov inc lret mov and out pusha je inc cld jle cmp arpl cld mov dec pop mov gs jecxz jae add push bound or pop jnp imul cmpsl js xlat pop repz cmp popa sub adc jae and push aam xchg fdivs pop sarl cmc aam fwait or adc adc mov lret push shlb jb test mov sbb cs and popf dec repz cld inc (bad) fisubrl (bad) jg lods mov pop sub sub dec stc and add add enter iret xchg mov mov gs fcmovnu cmp rcr push inc inc arpl push cmp es std xlat lcall in inc cmp xor test inc fwait or push sub lock sbb divl rclb mov fsubr pop popl xchg lret rcrl cmp test aam nop aam test lds push cmp xchg push outsb sbb repz or add xor jnp,pn adc dec push mov pop int sub adc pop xlat push ds sbb dec mov into sti mov shrb ja mov cmp inc iret adc xchg mov jmp lea inc shrl add lods jno add cmp outsl pop andl hlt es cmpsb dec mov or push out cmp inc int and push pop sub dec mov addr16 inc dec mov dec lds loope dec fdivs add aad andb sub div imul ja push mov aaa xchg inc cwtl inc aad ds (bad) and adc iret je xchg divb call add lods arpl mov push hlt mov xchg roll cmp outsb push push mov stos out push mov inc push nop jno mov out xor add push into xchg sub fwait jl dec (bad) mov aas mov sbb je repnz cld inc mov sub dec in cmc int jl sub mov mov call xchg cli inc in add pop daa ds lods stc cmc mov dec sbb jno inc push loop inc andl mov notl jnp hlt jno sub rorl xor adc jg dec nop pop pop pop and outsb push dec cmp jne lock inc jl scas insl pop repnz jecxz jp dec pop in int3 pop mov aaa stos and lahf ljmp sub out pop cmp fld ss cwtl rcrl int3 clc js and test jl mov mov mov fs xlat je dec mov fidivl sbb jp jbe push je lret xchg mov dec cmp and sarl ret lds int3 push addr16 adc add pop add pop (bad) adc aas push test cld notl fsubr xor xchg inc or jns inc cmp cmovl xchg fnstenv dec xchg adc outsb fisttp jp orl and shlb outsb out (bad) push in mov mov mov push xchg cmpsl aaa adc add inc gs push loop xor mov mov int mov push in mov inc mov shl inc outsb push test loope fucom mov inc int lret test or rcrb int3 sub (bad) jle mov pop xor and add pop mov adc dec and in aam dec (bad) insb and call in add sbb push (bad) in stos in fwait mov dec pop or (bad) or sub mov ja,pn jle or fimul in movb test fimull mov (bad) fisttp repz daa adc movsl mov std xchg imul les xchg (bad) cmp xor ret out or push jl add jb inc movsl mov aaa and and clc xor .byte dec add add add add sub add add add add sub push add or add add inc add add add add add add and xor add and add adc add orb add pop add add and add adc add adcb add sub add sub add add sub add xor add add add add rolb add add adc add outsl adc add and or push outsl adc xor add or cmp add add or pop add or sbb add or or cmp dec loopne and and adc loopne add sbb add adc and cmpsb adcb and addl adc and sti ficom or pop insl xorl and dec adc and dec pop adc adc and sub adc sbb sub adc sbb sbb dec loopne adc pop dec sub adc sbb sbb dec sbb sub adc sub or adc adc adc adc adc sub add adc adc push rcrl pop pop adc adc pop pop adc adc or mov or or or or push adc or xchg pop adc adc or movups setne or xchg popa sahf adc or xchg and data16 adc xchg sbb adc or adc xchg adc adc adc xchg pop pcmpgtb adc setne or sahf adc adc xchg adc pusha sahf adc adc setne sbb adc adc xchg pop cmc pop adc adc xchg pop bound adc or xchg pop adc adc pop push bound adc or xchg popa sahf adc or or or xchg popa sahf adc adc pusha sahf adc or or or mov pop xchg sbb adc adc adc xchg pop sbb or or or or popa sahf adc adc setne rcrb adc or adc xchg adc pusha sahf adc xchg sbb adc adc or xchg sbb adc adc adc xchg and dec sub popa sahf adc or setne adc adc adc xchg pop clc pop pop adc adc adc xchg sbb adc adc adc setne cmp adc adc adc xchg pop lock pop adc adc adc xchg pop adc adc adc or adc adc adc or adc adc adc xchg adc adc or xchg pop sti pop pop adc adc or or adc adc adc sahf adc or sub adc adc adc xchg and jae (bad) pop sahf adc movups sahf adc adc xchg adc adc adc xchg and sahf adc or or xchg sahf adc xchg pop negb adc adc or or adc or adc sahf adc (bad) fldt pop sahf adc or adc adc adc xchg adc xchg pop sahf adc xchg pop insb pop adc adc xchg pop adc adc or xchg pop fs pop adc adc adc xchg pop in pop pop adc adc adc xchg pop bound adc adc or xchg pop xlat pop pop adc adc adc setne bound adc or xchg pop mov adc adc or setne adc adc or xchg pop mov adc adc xchg sbb adc adc adc sahf adc or xchg pop push pop pop adc adc or xchg sbb adc adc or or or adc or sbb adc xchg pop stos pop adc adc or setne stc pop pop adc adc or xchg pop clc pop pop adc adc adc adc adc setne bound adc or adc xchg and sahf adc movups sahf adc adc xchg and sahf adc or adc adc or adc or or or or adc sahf adc adc xchg pop push pop pop adc adc or adc adc or or adc adc xchg pop loopne pop adc adc adc xchg pop lock pop adc adc adc xchg and test sahf adc or or adc or push adc push xchg and pop or popa data16 adc adc xchg pop (bad) pop pop adc adc adc xchg pop bound adc adc or or pop pop pop pop adc adc adc xchg sbb adc adc or xchg pop sti pop pop adc adc or or pop lock pop adc adc adc xchg adc adc or xchg pop (bad) pop pop adc adc or or pop adc adc adc sahf adc or adc or or sbb adc or adc sahf adc or adc or or adc adc or or or adc xchg popa data16 adc or or or adc adc xchg popa sahf adc xchg pop or or push xchg and pop movsb pop adc adc push adc xchg sahf adc adc xchg adc or push adc and stos xchg pop sahf adc or or or adc or sub adc or adc xchg and push lahf popa sahf adc or adc or or or adc or or or adc setne sbb adc or or xchg and sahf adc or or or xchg popa sahf adc movups setne fs adc or or push xchg sahf adc movups setne adc adc push adc and sahf adc adc xchg pop adc adc xchg pop repz adc adc adc xchg adc sahf adc xchg pop aad adc adc adc xchg adc or or xchg pop dec pop adc or adc xchg adc adc adc or pop adc adc adc or adc adc adc xchg pop in pop adc adc xchg pop mov adc adc or or pop adc adc or or adc adc or adc adc or xchg pop xor adc adc or or adc adc adc xchg pop mov pop adc adc or or adc or adc xchg adc adc adc xchg pop negb adc adc adc or adc adc adc adc adc or adc adc or or adc adc adc xchg and mov sahf adc adc xchg and xchg repnz data16 adc adc xchg adc adc or adc adc sahf adc adc adc or fdivs pop adc adc or xchg and sahf adc adc sahf adc push adc push xchg adc sahf adc xchg and (bad) (bad) lcall adc or or xchg adc or ss pusha sahf adc or xchg adc sahf adc adc xchg adc adc adc xchg adc adc xchg and (bad) fisttp pop adc adc and adc adc in movsb pop adc adc or or or leave pop sahf adc adc setne adc and sahf adc or xchg and adc or xchg pop cmp or or or or int int pusha sahf adc or or or xchg popa sahf adc adc xchg pop rcrl adc adc xchg and inc cvtps2pd adc or adc adc sahf adc adc xchg sahf adc or or adc or adc push xchg and sahf adc push adc push xchg and adc sahf adc adc or pop adc adc adc or adc adc xor cvtps2pd adc or adc and (bad) negl adc push adc push xchg adc and lock pop pusha sahf adc xchg sbb adc adc or xchg sbb adc adc xchg pop lds adc adc or or adc adc or or adc or adc adc adc xchg pop sub adc adc adc or adc adc adc xchg pop repnz pop adc adc adc sahf adc adc xchg adc or adc or adc adc adc or adc adc or adc or or adc adc or or or or adc or xchg adc xchg popa sahf pop inc adc adc or push sbb push adc sub add push adc adc adc add push sub adc add push add add add adc add dec sub add rcrl pop pop dec loopne or rcrl pop pop dec sbb or sub push and popa push add push push dec pop pop or add add add push push or pop or pop aaa rolb add add add add pop adc or add add or xor add add add sbb or fs sbb add bound add pop or adc or pop or pop adc movb add add xor add add add add add inc xor sub or or sub push pop maxps pop maxps xchg add sbb add and sub pop pop or pop pop or add iret sub add lods push add lods push add mov add xor add add outsl jb js dec popa imul jb gs insb add add dec inc add add add add adc add jbe xor xor or mov add dec push add and add push add cmp add and jb outsb addr16 add add add and add and add and dec inc add add and add and outsl bound add mov add add inc push dec inc add add sub add add and jb outsb addr16 add add sub add add and outsl bound add aam add add add and push add add add inc add mov add cli and add add add add adc add adc add inc add add add add add adc add add add push add add add add add add add add add add add pop add add add add add add add add add add add add add or add and add sbb add and add shl into imul add add add add add (bad) jg add add add add add add add add add add add movsl add sbb push add nop push push add add fiadd out push add push icebp add add pop icebp add add push add sub adc mov add or or add icebp add add push add lock add or or add or or add add out push add jno push add add add add psubusw push add adc clts add adc push push add out push add out push add add add add adc adc add push add icebp add add adc push adc cld adc adc adc add adc adc add adc add icebp add add pop adc add nop push push add add adc add add adc clts add adc add add adc add add icebp add add adc push push add clts add icebp add add xchg adc add add add add adc add add adc push push add add adc adc adc add push add icebp add add add adc adc add adc clts add adc add add adc adc add add cmp add add add adc pop adc in icebp add add add add add add add test adc jbe add add add add add add add add add add add add add add add add add add add add add adc pop add add add add add add adc add or add add or add add or add add add add add add add add add add add add add add or add add add add add inc add add add add inc add add add add adc adc inc add add add push add adc adc inc add add add add add add cmp adc in aas add add add add add add or or add add icebp add add and adc sbb add add add add add add add rolb adc push or add add push add add or adc fiaddl push add add mov xchg sbb add add add add mov xchg add add stos push add add add add add add add add xchg add add add add add add add add push push add add add add xchg sbb add add add add add add add add add add add add add add add jo push add add add add dec pop push add add add add iret push push add add add add push push add add add add push push add add add add push add add add push xchg add add pusha push add add add add pop push add add add add push add add add add add add add add addr16 add add add pop lods add add push adc pop pop mov add inc imul add pop rolb add push add add add add imul add adc xor (bad) add add insb push add add add pop jecxz add insb pop push add add add add add add add add addl add hlt insb push add add add add insl push add add add push xchg add add add add add mov push add add add insb outsl push add add add shrb add add add add add int3 jo add add add add add cld jno add add add pop or add cld jb add add add push add hlt jae add add add add add add push add add add add add adc push add add add push sub ja add add add inc add cld ja add add add add add call add add add add add add add add pop arpl add add add add add or add and add adc jmp add jge add add add pop xchg add or push add add add push nop add cmp push add add add xchg add adc push add add add add add inc addl add add add xor adc testl pop push add add add pop addl add xchg or add add ljmp add flds add in push add add add or add add add xor or pop jmp test add add add sbb add add add sub add add add push pop push add add add arpl add add add add add rolb add add mov add add rolb mov add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add in add add in add add in add add add add xchg pop add adc adc cwtl add add pushf add add add add add add add add add add add add adc or add adc add add adc add add xor sub in add add or inc add add push dec add add push xchg add in add add add add add add add add add add add add mov add add add add add add add add add add add add in add add in add add add add add add adc sbb xchg add jnp and add inc add add add add adc add gs dec add add adc add fcoms add dec add ljmp adc add rolb flds mov dec adc in add add add ljmp add mov cltd adc sahf adc mov sub mov lds int push push sub rclb fcoms clc adc sbb addl xchg push dec add add add push mov in add add add add sbb add mov add sbb add sbb add mov add xchg add add add add add add add add add add add add add add add add add dec add add mov ret add push add add jg jg jg add add add or add add add add add add add and add add js add adc add mov add adc imul ret add add add add add add add add add add jae jle xchg add lds add push push xor inc push arpl jbe mov pushf push mov or add add add or add add or add add or add add add add add add add add add add add add push add add add and add push add add xor push push add add push push add add clc insl cmp dec mov inc repz xorb (bad) shrl pop les pusha sbb lds ds mov fadds fs cmc jle aas mov scas xor cmp lret int pushl in xchg clc or aas mov js cmp jno jae jecxz stos xchg mov nop imul fdivl mov cmp push stc dec push ret cs lea scas jnp xor es adc and xchg cmp std pop xchg add add cmp (bad) jg add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add or adc lldt add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add add sti add add add sti add add add sti add add add sti add add add sti add add add sti add add add sti add add add sti add add add incl add add sti add add add incl add add leave or add add sti add add add sti add add add sti add add add sti add add add incl add add leave or add add sti add add add sti add add add add add add pop add insb add pop add add add sbb cmp add add add add add add add add add add add add add add outsb add add push add sbb test xor enter iret push fs push add xchg add add add popf add add add add add add add adc add add add add add add add mov adc add add add add add add adc add add add add and mov and xor jae gs gs add gs arpl outsl jb loopne mov mov loopne mov mov (bad) mov mov mov mov (bad) mov mov mov mov loopne mov mov loopne test mov (bad) mov mov (bad) mov mov (bad) mov mov mov (bad) mov mov (bad) mov mov (bad) mov push imul jb je arpl gs gs xor cs insb add mov loopne mov mov (bad) mov mov (bad) mov mov mov loopne movsl loopne mov mov (bad) mov mov mov mov (bad) mov mov mov loopne mov mov mov loopne mov mov loopne cmpsb loopne mov mov loopne mov mov loopne mov mov (bad) mov mov loopne cmpsb loopne mov loopne mov mov loopne movsl (bad) mov mov mov mov mov mov loopne mov mov mov loopne mov mov mov mov mov loopne movsl loopne cmpsb loopne cmpsl loopne mov mov loopne mov mov loopne mov mov mov loopne movsb loopne cmpsl loopne mov mov loopne mov mov mov (bad) mov mov loopne mov (bad) mov mov mov loopne mov mov mov loopne mov mov mov (bad) mov mov loopne movsl (bad) mov insl jae outsl jb imul arpl jns je insl add mov mov loopne mov loopne mov cmpsl loopne mov movsl loopne cmpsb loopne mov mov mov loopne mov mov loopne test mov (bad) mov mov mov (bad) mov mov (bad) mov mov loopne movsl loopne movsl loopne mov mov loopne mov mov loopne mov mov (bad) mov mov loopne cmpsb loopne cmpsb (bad) mov mov mov mov loopne cmpsl (bad) mov mov (bad) mov mov mov mov loopne mov mov mov mov mov loopne mov mov loopne mov mov loopne mov mov loopne mov mov loopne cmpsb loopne mov mov loopne cmpsl (bad) mov mov loopne mov mov mov mov (bad) mov mov loopne mov mov (bad) mov mov mov (bad) mov mov loopne mov mov mov mov mov add mov mov mov mov mov loopne movsl loopne mov mov loopne cmpsl loopne mov movsb loopne cmpsb (bad) mov mov mov (bad) mov mov mov mov mov mov loopne mov mov (bad) mov mov (bad) mov mov loopne cmpsl (bad) mov loopne mov mov loopne movsb (bad) mov mov mov loopne mov cmpsb loopne mov mov loopne mov mov loopne cmpsb (bad) mov mov mov loopne test mov loopne test mov loopne mov mov mov (bad) mov mov loopne cmpsb loopne mov mov mov (bad) mov inc jb popa jns (bad) mov mov loopne test mov (bad) mov mov mov mov (bad) mov mov loopne mov mov mov mov loopne movsb (bad) mov mov (bad) mov mov loopne mov mov (bad) mov mov (bad) mov mov mov mov loopne mov add mov loopne cmpsb loopne mov mov mov loopne mov mov mov mov loopne movsl loopne movsl loopne mov mov loopne mov mov mov (bad) mov mov mov loopne movsb loopne cmpsl loopne movsl (bad) mov mov loopne mov mov loopne movsl loopne mov mov (bad) mov loope mov add arpl add (bad) mov loope mov and xor and xor loope lods add (bad) mov (bad) mov push jns je insl cs imul inc outsl jb jae inc outsl jb inc outsl jb gs je insb gs (bad) mov (bad) mov loopne mov mov loopne test mov loopne cmpsb loopne mov mov mov loopne mov mov mov loopne test mov mov (bad) mov mov mov (bad) mov mov loopne mov mov (bad) mov mov loopne cmpsb (bad) mov mov (bad) mov mov mov (bad) mov push popa insb jne push jns gs mov mov mov loopne mov mov mov (bad) mov mov (bad) mov mov loopne mov mov (bad) mov mov mov (bad) mov mov loopne mov mov loopne test mov loopne cmpsl loopne mov mov mov mov mov mov inc outsl jb add mov loopne mov mov loopne mov mov loopne mov cmpsb (bad) mov mov (bad) mov mov loopne mov mov mov mov mov mov mov (bad) mov mov mov mov mov mov mov loopne mov mov loopne mov outsb je imul jae gs cs outsl insl jo outsb outsb je outsl fs add (bad) test inc jbe outsb je jb jae inc outsl jb inc insb outsl jae fs jbe outsb je jb jae inc imul imul addr16 (bad) movsb add jae insl bound push jns je insl cs gs arpl outsb add jae insb jbe inc jbe outsb je jb jae loope movsl add gs (bad) mov loope mov loope movsl loope movsl add (bad) movsl loope lods add fs loope mov loope movsl loope movsb add mov mov mov mov mov (bad) mov mov mov loopne movsl loopne cmpsl loopne movsb loopne mov mov mov (bad) mov mov loopne movsl (bad) mov mov mov loopne test mov loopne mov mov mov mov (bad) mov mov mov loopne test mov cmpsl loopne mov mov mov mov mov loopne movsb (bad) mov mov (bad) mov mov mov (bad) mov mov mov mov loopne mov mov (bad) mov mov loopne mov mov mov loopne mov mov mov mov mov loopne mov mov (bad) mov mov loopne mov test mov loopne test mov mov (bad) mov mov loopne test mov (bad) mov mov mov loopne mov mov mov loopne test mov (bad) mov mov loopne test mov mov loopne mov loopne mov mov loopne mov mov mov (bad) mov mov mov loopne mov mov mov loopne mov mov mov mov (bad) mov mov (bad) mov mov mov mov mov mov loopne cmpsl loopne mov mov loopne movsb loopne mov mov mov loopne movsb (bad) mov mov loopne mov mov (bad) mov mov loopne mov mov mov (bad) mov mov mov mov loopne mov mov mov (bad) mov mov loopne mov mov loopne mov mov add mov mov loopne mov cmpsl loopne mov mov loopne mov mov mov loopne test mov mov (bad) mov mov loopne mov mov (bad) mov mov loopne mov mov loopne mov mov mov mov mov loopne mov mov (bad) mov pop add jb addr16 mov loopne cmpsb loopne movsl (bad) mov mov mov (bad) mov mov mov mov (bad) mov mov mov mov loopne test mov loopne mov mov mov loopne movsl loopne mov mov loopne mov mov (bad) mov mov (bad) mov mov inc jbe fs arpl push jns je insl cs arpl imul arpl loope mov mov loopne movsb loopne cmpsl loopne mov mov loopne mov mov mov mov loopne mov mov (bad) mov mov mov (bad) mov mov loopne mov mov loopne mov mov mov mov loopne mov movsb loopne mov mov mov je insl cs jb ja outsb add jp inc add jp add and add (bad) mov loopne movsl loopne movsb loopne mov mov loopne mov mov loopne cmpsb (bad) mov mov loopne mov loopne mov mov loopne mov mov (bad) mov mov loopne mov mov loopne cmpsb (bad) mov mov (bad) mov mov loopne mov mov mov (bad) mov push gs imul add jae gs cs outsl outsb imul je outsl outsb add jo outsl insl popa imul push arpl gs outsl fs mov loopne mov mov loopne cmpsl loopne mov (bad) mov mov loopne mov mov mov mov mov loopne movsl (bad) mov mov (bad) mov mov mov loopne movsl loopne mov mov loopne mov (bad) mov mov mov (bad) mov mov push gs jne arpl popa outsb popa addr16 push jns je insl cs gs jne arpl add insb je jb dec outsb outsw add jae gs cs insb outsl bound imul add je popa jo loopne mov mov mov loopne mov mov loopne mov mov loopne mov mov loopne mov mov loopne cmpsb (bad) mov mov (bad) mov mov loopne mov mov loopne mov mov loopne mov mov mov loopne mov (bad) mov push gs imul jae gs push jb jo jb imul insb imul push gs imul add je inc gs jne je inc gs jne je (bad) mov mov loopne movsl loopne mov mov loopne mov loopne mov mov mov (bad) mov mov (bad) mov mov loopne mov mov test mov mov (bad) mov mov mov loopne mov mov loopne movsb (bad) mov xor cmp xor xor aaa xor inc aaa cmp inc xor xor cmp inc xor inc cmp cmp inc xor inc inc xor cmp cmp xor inc inc xor xor aaa inc xor inc cmp inc inc inc inc cmp loopne mov mov loopne cmpsl loopne cmpsl loopne mov mov (bad) mov mov loopne movsb loopne mov mov mov mov loopne mov mov (bad) mov mov mov mov (bad) mov mov mov mov mov mov loopne mov mov (bad) mov (bad) mov mov mov mov loopne mov mov mov (bad) mov mov mov loopne cmpsl (bad) mov mov mov mov (bad) mov mov mov mov mov loopne mov mov mov loopne movsl (bad) mov mov mov loopne mov mov (bad) mov mov mov mov loopne movsb loopne test mov loopne mov mov (bad) mov mov mov (bad) mov mov (bad) mov mov mov loopne cmpsb (bad) mov mov loopne mov mov loopne test mov loopne mov mov (bad) mov mov (bad) mov mov loopne mov mov mov loopne mov cmpsl (bad) mov mov loopne movsl loopne test mov mov mov loopne mov mov mov mov mov loopne mov mov mov loopne mov mov loopne mov mov mov mov (bad) mov mov loopne mov outsb gs inc jae gs bound jb fs popa jb inc je jb bound add insl push imul je jb bound add jae gs cs jne je insl gs outsb je jb jo gs imul imul jne add jae insl bound imul outsl outsb inc je jb bound add outsb je insl gs outsl insl jo je bound imul bound add jae gs cs jne je insl gs outsl insl jo insb gs gs imul jo jb jae dec insb fs jae inc je jb bound add insl jo insb popa je outsl outsb push gs popa js je outsl outsb jae je jb bound add jae insl bound gs jb jo imul imul jae gs bound jb fs je je jb bound add jae insl bound outsl insl jo outsb jns je jb bound add jae insl bound outsl jo jb addr16 jb bound add jae insl bound imul imul jae gs bound outsl outsb imul je outsl outsb inc je jb bound add popa add arpl gs outsl js inc outsl outsb je outsl insb add jb outsb add je outsl fs popa jae add outsb je push je gs insl add jae gs cs dec add insl outsl jb push je gs insl add outsb je imul je outsl insb add inc push push inc je jb bound add outsb gs je fs outsl fs je jb bound add jae gs cs outsl fs outsl insl cs outsl insl jo insb gs inc imul jae bound je jb bound add imul jae bound je je add xor xor sub sub gs jne arpl jb,pn jae jne arpl add je xor push jne je insl gs gs jo jb add imul inc jb popa jns push jne je insl gs imul fs add popa jb inc gs jns gs jb insl dec popa outsb fs add outsb je insl gs jns gs popa outsb fs add je dec outsl fs add fs add je inc jne insb jns jne insb imul insl add je dec outsb addr16 add je inc push dec popa jb push gs dec dec push push inc dec inc inc add je je add pop inc js insb imul outsb je xor inc jns add jno popa je bound xor push je imul fs push jns je insl cs gs add jo outsb add je imul pop dec insl popa add je dec popa insl add je inc outsl jb inc outsl jb gs je insb add outsl insl jo jb bound xor inc outsl outsb arpl add je inc outsb je jns outsl imul push outsw add imul insb add outsb je je insb add popa jo imul add je push je jb push outsl jae je outsl outsb add jb push je jb push outsl jae je outsl outsb add jb inc insb outsl jae fs jbe outsb je popa outsb fs gs popa fs inc outsl jb inc insb outsl jae add outsb je popa outsb fs gs popa fs dec outsl popa add jae insl gs popa jns jne add gs popa insb imul push jns je insl cs jne je insl gs gs popa insb imul add outsb jne gs bound xor push jns je insl cs outsl insb insb arpl outsb jae inc outsb gs arpl pop inc jae gs bound dec inc outsl outsb jbe jb imul arpl outsb popa jb pusha xor inc gs popa je push je gs insl add jae gs cs dec cs outsl insl jo gs imul jo gs imul add je dec je insl add je popa je add je dec popa insl add outsb je imul inc jo insb imul add popa bound imul jns gs dec outsb jbe imul gs inc outsl outsb je jae je dec popa jb imul add jb popa jns jae je push gs add outsb add jae outsb fs popa jns jne add je js arpl imul insl bound addr16 inc jbe fs arpl inc gs popa outsb imul jae jne arpl popa insl gs dec push gs arpl outsl outsb imul je insl cs push imul gs addr16 inc jne jb outsb je outsl insl popa imul insb jbe inc jbe outsb je popa outsb fs gs popa fs push gs jne arpl gs insb jbe add imul jae gs bound dec outsl popa add je inc jne outsl push arpl gs imul outsb jae jae je inc insb imul add je popa je add popa add outsl jae add outsb arpl outsl outsb imul jb push push gs bound arpl gs outsl insl jo je bound gs push outsb fs outsb addr16 gs jne je inc gs bound arpl gs inc jne outsl push arpl gs outsl fs add dec xor popa add add add add add add add add sub add add sub add add add add add add aaa add add add or or or or or or or add or or add or or add or add or add or or or or or or add add or add add add out insl aad cmpsb inc movsl in sbb out add add or add sbb or or add or add or or or mov pop push sbb mov add adc add or or or push adc add sbb add add or or or add push add add push or add push add add push or add push add or add push add add push add adc add adc and add sbb sbb and add add add adc add adc add or add add adc add push add add add adc add push add xor push or add add add or adc add or push sbb and add sbb adc add push add or add adc add adc or add sbb or push add adc add and or add and push add mov pop jg aad cmp adc add push add cmp or adc add push add cmp add push add add add add add add or add or add or adc add push add push or add adc add add add adc or add add or or add add add add adc add push add dec push push or and push add push add adc push adc push adc push sbb adc add add add adc add add push add add push add add dec add add push add adc add add cmp add cmp push adc adc push adc sbb add add add add and arpl bound cmp sub sub sub xor cmp aaa xor add or add xor xor xor xor add add add push add push jb jo outsl outsb inc js gs imul ja add add add add or add or add add or add bound outsb gs add add adc jo jb addr16 and xor xor add add push inc add xor jae gs cs gs jne arpl cs outsl outsl insb jae push je outsl outsb insb jns jns gs gs jne arpl jne insb fs xor xor add and add add add add add add pop add dec dec imul je push imul jne imul outsl jb cs gs imul imul gs imul insb gs imul popa je jb xor xor add add add or or pop adc pop pop wbinvd or or or or or or or pop add adc and adc push add add add add or add sbb sbb add lidtl add add pop add or or push pop add sbb add or add or add or sbb adc add or or or or sbb sbb push and adc push or or push add push add and add adcb or or and add or adc push or sbb add push push push add add adc inc add stc or add or or adc add add mov and add or add addl or add sbbb add or or push and add orl sbb push and add orl pop sbb adcl sbb adc sbb or adc or or or or add push add inc pop adc push push push or sbb inc push add add add subb or adc adc adc xor adc adc add add add add or sbb or or and sbb sbb add andb or or or xor pop pop or or or and add and sbb adc or push or or sbb pop add or adc add adc or or sbb or pop or adc or add adc sbb or sbb and adc adc or or and sbb adc or add adc and add cmpl sbb and adc adc or and adc add adc or or or or or cmp sbb or or push add sbb pop or or or or and or add adc inc or addl sbb add or push or or and sbb adc pop or or or sbb or dec or sbbl add adc adc or adc push adc adc push adc push add add inc js in test inc dec mov divb pop jne add lret add add xchg add add jae gs cs gs jne arpl cs gs jne arpl gs fs and arpl insb imul jae outsl outsb cmp xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound aaa popa xor cmp xor xor cmp push jns je insl cs gs jne arpl cs jne je insl gs gs jne arpl gs add add add add add jns je insl cs jb ja outsb addr16 imul jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs push inc inc push inc inc shrb add ret lods jae les jae (bad) lods jae (bad) lods jae enter leave lods jae and jae and jae and jae and scas jae daa scas jae sub jae popa scas jae bound jae shrb mov dec shrl mov dec (bad) scas mov dec fisubrl mov dec icebp scas mov dec repz mov dec cmc scas mov dec imull mov dec adc mov dec adc mov dec push mov dec pop mov dec sbb mov dec xor mov dec xor mov dec ss dec aaa mov dec cmp mov dec push mov dec push mov dec push mov dec push mov dec push mov dec push mov dec push mov dec pop mov dec pop mov dec jo mov dec jb mov dec je mov dec jbe mov dec jl mov dec nop mov dec xchg mov dec cwtl mov dec cltd mov dec lcall dec pushf mov dec popf mov dec sahf mov dec lahf mov dec mov mov dec mov mov dec mov mov dec mov mov dec mov mov dec lock dec icebp mov dec clc mov dec stc mov dec cli mov dec sti mov dec cld mov dec std mov dec (bad) mov dec pushl imulb cmp outsb mov cmp outsb movsb cmp outsb movsl cmp outsb cmpsb cmp outsb cmpsl cmp outsb test imulb cmp outsb mov add add add movsb add add add add add add add add add cmpsb add add add add add add add add add add add and add movsb add add add cli add add add add add push add add push add addr16 add in add add loop add or add nop push add mov pop add pop pop add and add add add add add add add add add and add jae add adc add cmp add or add or add or add or add or add or add pop add (bad) pop add lods pop add int3 or add or add add push or add or add or add xchg or add inc or add lock add or add popa push add cld or add or add add and or add or add or add or add adc add add fwait adc add adc add adc add adc add adc add add xchg adc add sldt cmpsl sldt jle add push sldt sub add add add fimull add mov add and add stc sldt movsb adc add add pop adc add adc add adc add adc add adc add add sub add add add daa add add add add inc or add or add or add adc add add int add out sbb add xor add add add add add add sub add add add add xor add add add add add add sub add add add and add add add add add add add sub add add add add xor add add add add add add sub add add add add add xor add add add add add add sub add add add add dec add xor add add add add add add sub add add add add add xor add add add add add add sub add add add add je add xor add add add add add add sub add add add mov add xor add add add add add add sub add add add add xor add add add add add add sub add add add add add xor add add add add add add sub add add add add ret xor add add add add add add sub add add add add add xor add add add add add add sub add add add add jmp add add add add add add add sub add add add add xor add add add add add add sub add add add add xor add add add add add add sub add add add add xor add add add add add add sub add add add add xor add add add add add add sub add add add add add xor add add add add add add sub add add add stos pop add xor add add add add add add sub add add add add xor add add add add add add sub add add add add xor add add add add add add sub add add add add cltd add xor add add add add add add sub add add add add xor add add add add add add sub add add add add add and add add add add add add add sub add add add xor add add add add add add sub add add add add out add xor add add add add add add sub add add add add xor add add add add add add sub add add add add push add and add add add add add add add sub add add add add and add add add add add add add sub add add fidiv add add add add add add add add sub add add add add add add add add add add sub add add add pop add and add add add add add add add sub add add add add and add add add add add add add sub add add add (bad) add and add add add add add add add sub add add add add xor add add add add add add sub add add test add add add add add add add sub add add add add and add add add add add add add sub add add add xor add add add add add add sub add add add in add add add add add add add add sub add add add xor add add add add add add sub add add xor xor add add add add add add sub add add add add add add add add add add sub add add add xor add add add add add add add add sub add add add xor add add add add add add sub add add add pop add and add add add add add add add sub add add add xor add add add add add add sub add add addb and add add add add add add add sub add add add xor add add add add add add sub add add add cmpsl add and add add add add add add add sub add add add xor add add add add add add sub add add add into add and add add add add add add add sub add add xchg add and add add add add add add add sub add add add add add add add add add add sub add add add xor add add add add add add sub add add add add and add add add add add add add sub add add add add and add add add add add add add sub add add add inc add and add add add add add add add sub add js add and add add add add add add add sub add xor repnz add add add add add add sub add xor jno add and add add add add add add add sub add xor jmp add and add add add add add add add sub add xor movsb add and add add add add add add add sub add xor jecxz add and add add add add add add add sub add xor add add add add add add add add sub add ss fiadd and add add add add add add add sub add aaa add add and add add add add add add add sub add cmp roll add add add add add add add sub add cmp dec sbb add add add add add add sub add add add add add add add add add sub add inc add add add add add add add sub add push add add add add add add add sub add addr16 add add add add add add sub add jp add add add add add add add add sub add mov add add add add add add sub add mov add add add add add add add sub add mov add add add add add add add add sub add enter xor add add add add add add sub add faddl add add add add add add sub add out add add add add add add add sub add add push add add add add add add add add sub add add add xor add add add add add add sub add add add push add add add add add add add add sub add add add xor add add add add add add sub add add add push push add add add add add add add add sub add add mov and add add add add add add add sub add add add add add add add add add add sub add add add push add add add add add add add add sub add add add sahf push add add add add add add add add sub add add add push add add add add add add add add sub add add add lds add xor add add add add add add sub add add push add add add add add add add add sub add add add in push add add add add add add add add sub add add add pop add add add add add add add add sub add add add adc add add add add add add add add sub add add add add add add add add add add add sub add add fistpll pop add add add add add add add add sub add add add add add add add add add add sub add add add popa pop add add add add add add add add sub add add add pop add add add add add add add add sub add add add mov add add add add add add add add sub add add add add xor add add add add add add sub add add scas pop add add add add add add add add sub add add add pop add add add add add add add add sub add add add (bad) pop add add add add add add add add sub add add add xor add add add add add add sub add add add xor add add add add add add sub add add xor or and add add add add add add add sub add add add add add add add add add add sub add add add xor add add add add add add sub add add add xor add add add add add add sub add add add or and add add add add add add add sub add add add xor add add add add add add sub add add xor add add add add add add sub add add add add add add add add add add sub add add add add add add add add add add sub add add add xor add add add add add add sub add add add aam add add add add add add add add sub add add (bad) out add add add add add add add add sub add add add add add add add add add add sub add add add or and add add add add add add add sub add add add and add add add add add add add add sub add add add or and add add add add add add add sub add add add dec or and add add add xor xor add xor xor sub add add add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fistl add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push and jecxz icebp ror pushf mov imul dec lahf jmp xor (bad) mov (bad) xor into icebp jge iret mov out pop ds mov push arpl negb and out test cmp dec repnz pop (bad) daa pop push repz push dec pop imul je ret or repz imul cmp inc push sub repz loopne lds pop xchg push (bad) movsl outsb mov mov cli idiv adc fwait mov in out call sbb int or addr16 out hlt cld adc bndldx push dec pop icebp dec and lea cwtl ret push scas test dec jno scas jno movsb cmpsb adcl test push mov pusha sarl in popa loop sbb push jg jbe push mov loope mov aam jecxz jns movsl mov adc loope xchg cli push add xchg pop sbb test pop cs jo adc cmp push mov frstor js jbe nop cmp xor mov (bad) sbb cmpsl stc jmp mov add mov or stos pop insb ja inc movsl sbb lods mov fdivr pcmpgtb cld rclb adc pop in sub mov inc adc push sub mov push and push sbb movb cmp movsb xor jnp jae mov int xlat stos add jo xchg dec es jmp mov mov push sti int3 pop sahf sarl or cmp (bad) push rcrl and cmp mov dec dec iret (bad) lods das push jecxz insl insl adc xor mov push push pushf jno mov in adc mov inc call push mov sbb addr16 adc sbb imul jbe dec iret aam fs xor push out inc sub jl cli out dec into negl and cs mov sti push inc lods cli test sahf inc xchg inc xlat lret je dec cmp mov arpl pop mov dec hlt mov fidivr and pop adc cwtl ret mov fild sbb incl dec mov divb inc popl pop mov mov aaa repnz xchg in add (bad) adc mov cmpsb xor pushf movsl out in and mov jnp stos bound leave jle fistpl cmpsb mov fsubs stc enter inc xchg je repz (bad) js dec fidivr or (bad) ds scas bound ret jmp retw rorb clc leave fldl dec cmp loopne les dec enter pushf cld cmpb mov enter out pop add dec push bound push lds pop sub add jbe outsb jnp adc and fdivs xor dec imul mov sbb lods cmp and cmp sub jb mov sbb jle aaa dec xchg bound or and jmp pop lret aad xchg mov adc add sub cmp movl sub leave scas and sub adc sub xchg and fwait push mov rcrb ret pop pop mov iret shrb mov into fnsave mov mov jb test fnop decb dec vmovntps test xchg in push jp aas sbb ja push jo xor or jg js rorb sbbl js xor je aam sbb dec cmpsl popa and daa sahf lods sbb fwait mov (bad) into mov ret call fildl stos stos ss xor xchg cltd data16 in push in imul dec sub hlt sti add jle std push jno jb lret sub or nop xchg jle mov jmp push xchg xlat adc js cmp lahf sub mov inc movsb jge push stos jo ja pop xor dec xchg sub pop cmp in mov out sbb out js mov pop in push mov mov sbb fwait push xlat scas or inc push mov lds int dec (bad) lock stos out mov jmp (bad) and popf in pop dec mov lcall scas dec xor jno dec inc sbb es test jmp push jnp or ja push out cmp jnp xor nop mov rcr loop ror mov test iret add mov cmp loope cmp pop fnclex xor adc fwait xchg mov sbbl lds jns cmpsb or mov mov or add rolb mov rorb jecxz add rcll jnp in outsb or nop pop xchg (bad) mov insb pop scas jo xchg jle lcall pop lods (bad) ret and pop fmuls movsl ja stc dec call sarb scas call sbb int sbb cmp mov (bad) bound negl inc sahf out jne xor aas test outsb or xchg insb cltd push sub repnz push xchg ret in and cmp cli mov pop test popa xchg sub (bad) stc mov scas inc jl jnp rolb enter call push xchg mov cmp fistpll std repnz repz lahf ljmp outsl hlt popf cmp popf aaa xchg pusha and outsb movsb test xchg clc sub push mov mov out mov push pusha xchg stc push imul inc dec adc fildl daa popa or push jmp xchg mov out sub jbe mov pushf sub and inc xchg jb scas in and xlat push adc jl xchg sbb (bad) adc aaa inc dec cld push and pop push in in push sub mov pusha in ja (bad) mov cmp clc dec lods add pushf test aas popf mov cmp or shrb jp and push jle fucomi xor sub in cs arpl ss es xchg repnz push es mov mov movsl adc jle sub xor sub cmpsl pop js pop push rcr mov loope std sub mov sarl out (bad) mov into xor cmp stc into sarl jmp adc lahf ds fild mov pop test dec repnz pop pop pop in fcomip iret mov sbb test test or ja xchg mov adc push fisubr aad xor dec and scas inc enter pop pusha pop pusha push jl aad (bad) insl sub pop push mov and addr16 adc jbe add inc mov jo sti ja fcoml sub test daa fwait in mov push cmp push sbb mov jmp push inc dec data16 mov stos dec ficom dec sbb into push imul mov mulb push cmp gs push int cmp fwait aam xchg pop iret cmpsl pop or data16 jb imul ss insb cli adc sbb inc cmp enter jne and push sti das and xor mov and jmp xor popa aaa inc pop jne pop mov das dec mov adc ja inc (bad) cwtl jle stc push sbb mov addr16 sub (bad) je dec push jmp nop cmpsl sbb dec cmp mov dec lret mov test sbb hlt inc aad jb mov or adcl test gs xor test call add and pop dec pop dec xlat jae inc std sbb cwtl hlt enter loopne mov (bad) mov dec jns nop jge inc sbb lret xchg and add mov xor pop push adc sbb dec inc mov int std mov push and lds repz cmp fmul fildl inc add (bad) add mov adc mov adc scas (bad) pop je mov xor jae xor pusha pop sbb and out leave add (bad) adc add inc pop pop jle dec test xor mov mov xor in jo pop sub std (bad) pop lcall cmp pop jecxz push jae and test push add push das cmovp adc ss outsl mov sbb push mov (bad) dec push mov sub xchg test das cmc iret sbb and pop icebp mov outsb stc add (bad) pusha adc daa mov add or sub pop clc jae cmpsl lods adc flds push dec loop data16 (bad) enter xchg int3 (bad) int3 (bad) xor idiv mov rcl mov (bad) fimull js jbe or pop pop daa lock pushl lret lret std xchg lods mov xor fldl xor jnp mov jle add fwait cmp and bound dec in in es inc add mov movsb popa push popa inc or into mov leave and xchg sbb xchg (bad) std (bad) (bad) sbb stos sub sbb inc ret repz idivl pop sub and pop cli pusha addr16 das inc push fistl inc xor inc mov clc inc push push std stos mov clc fcomps mov loop jb mov js out popf xchg fwait pop xchg dec jmp sahf or and cmp inc pop xchg and or dec sbb and hlt lret (bad) adc addb fisttp lods mov (bad) in pop scas xor mov xor pop rolb mov sti mov jmp sub push aaa (bad) loopne outsl or push add xlat arpl cmpsb cwtl stos or es xchg xor sub lahf in aad roll cmp xor ret dec mov xchg mov sub fcomps and adc mov cltd divb adc out outsl sbb pop sbb cmp hlt ret adc arpl dec into pop mov jg repz stos insb movsb stc ljmp pop sbb add inc aam mov sub aad xor movsb mov call sub daa dec out push mov cmp leave addl pop pop rorb in push dec mov orl push scas daa in dec xchg scas pop or dec int3 mov ret test (bad) pop stos inc (bad) mov xchg cmp je ds cmp or jmp mov jp je dec cmp dec xchg mov fdivl mov pop in sub jecxz in cmpsb repz jmp or rcrb int xchg adc nop or mov inc inc mov sbb adc fs nop jecxz,pt in inc sub lahf cli jo sbb pop adc in mov jl mov mov and lahf xchg icebp aas es jle mov jge mov les dec xor cmpsl (bad) (bad) push std push add push mul dec movsb cmp inc push adc xchg jae adc cmp ret and jle jecxz adc jg fdivrs inc pusha push add imul insl (bad) into xorl xchg int push dec pop mov (bad) xor das es mov arpl add dec dec jno insl and inc lea loope out enter inc mov pop test inc xor xchg rcll repnz jmp pop push inc mov xchg jmp popf test incl ftst fyl2x lcall lcall test add repz sbb scas jle inc push cld test pop mov rcl mov shr jg and sub mov lea lcall ficoml notl jne stos enter insl sub (bad) clc enter and cmpsb jecxz xlat pop test clc xlat cld pop arpl lock xchg je insl cltd (bad) add scas pop cmp inc pop aam in outsl mov mov lock clc pop ret pop frstor movsb stc push dec test mov and add cmpsl mov cmp lahf aam xor xor jo mov loopne cs fidiv rcrb mov lret jecxz mov ss mov ret xor push add ss add stos daa aaa pop leave cmp out jne js fadds jb and push jmp mov dec mov mov push adc lahf lock add jg jno fnop sbb repz imul or ficompl push lea mov pop adc and mov xchg mov pop or xchg or push lock pop jb loop insb cmp adc addr16 dec push sbb hlt int xchg lcall cmpsl mov jecxz (bad) ds mov test pushf test pop jns mov push sbb jg imul push loope cltd jle fcoml fnsetpm(287 dec imul or cmp or push scas aaa stos dec mov jb xchg rclb inc add aam test stos pop js jbe (bad) pop repnz (bad) push outsl andl les into into ja sub push jb negl jns xchg xor fldt pop shlb (bad) in pop scas test out fs outsl fild ljmp mov and les xor and sub enter mov fst out jg add test (bad) jne cld (bad) repz cmp xchg fwait adcl inc imul jb cmp fmuls sbb mul xor xchg mov inc push adc xchg insb cli (bad) xchg jo int cmpsl (bad) jb (bad) movsb adc adc add popf xor jecxz rclb adc mov cmpsb mov out stos jbe inc rclb cmp movsl dec sbb loop jae xchg loopne gs push pop test and lods jecxz pop mov jb icebp push fstpt mov outsb push push (bad) clc push jno out (bad) mov (bad) hlt push xchg push hlt add sub jmp jp popf jmp mov pop rcl aam push in mov mov loop into cli xchg lods (bad) outsl imul fcmovu vpxor pop xor dec push and nop mov adc mov adc fwait and add jne cwtl std negl jp in fnstenv jnp in fnstenv jnp mov int3 bswap add and add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb add lock mov cmp imul jo fsubrs cltd pushf mov insl lcall fbstp jnp jecxz jg aas add sarb (bad) iret mov jns loop add push inc push sti popl add inc adc mov mov sub (bad) in cli or cmp or sbb xor xor mov daa sub stos inc aaa xor test xlat sti mov xchg push push mov mov xchg fisubr loop and sahf shlb insl repz lret sub xchg jecxz mov mov mov mov or in inc push movsb cs jb loop (bad) mov mov push sti adc sub jge or fs (bad) (bad) push mov ja cld mov inc rep xchg jns test push out mov (bad) mov jge (bad) lcall scas (bad) inc cmpsb inc lods fmull sub jmp stc movsl sub fisttpl loopne mov in inc push and repz inc dec jb movsb push jg pop inc fimul sahf scas pop add push andl jmp pop mulb mov pop push pushf dec sbb mov sbb fldt loope inc arpl adcb outsb mov sub sub out fidivrl pop or (bad) jnp mov leave rolb xchg sbb mov mov fsubrl push xchg jo push cmp hlt in cld rol fwait test xchg add ret xchg add arpl cmp loop lahf add pop sbb test push sub push sub lea push leave nop dec cltd ss inc push es aad pop negl je popf sub lret addr16 jle push rclb call mov arpl push idiv lods int sub fidiv test xchg fisub mov jecxz add mov repz in jecxz nop flds int data16 xchg pop call out mov negb mov fsub subl cs xchg xchg mov scas adc out sarb fbld mov inc ror cmp jnp fisubr pop xchg lods jno inc jne repz add loope fisubr xlat add aas bswap inc scas pop cwtl test cs ja xchg dec icebp out in mov test mov mov in dec mov mov out adc data16 and dec dec movsb mov mov jle mov aad add fiaddl nop lea sarl (bad) pop stc jnp xchg xchg mov jnp push or lret outsb and mov jle sbb movsb icebp pusha inc enter jg lret jp outsl dec xchg mov loope mov (bad) or lods xlat (bad) and jo or insb lfs xor mov jae fwait jmp xchg and xor out cmpsl mov out shrb xchg cmp pop andl xchg fnsave or mov pop pop jp mov scas loop mov and push iret mov jo dec jmp sbb and jg idivb int3 test push lea mov add insb mov lahf mov mov into cs lods jns jg mov movsb cld clc lea xchg fldenv das (bad) out cmp push test outsl test js sbb mov mov (bad) sub push call mov jle stc lods int mov jecxz test xchg divb jmp mov and lock fs fwait lea in sub inc mov insb add not push (bad) testl fildl pop inc and push stos sahf dec fnstcw test xchg in cmp jb,pt in mov neg fildl jp fdivs pop inc lahf or pushf xchg mov stos inc xchg aad std pop lret push lods jge sbb aas imul pop jnp or lods sarl or sub push mov outsb lret lcall push sti xor mov (bad) mov mov ss mov mov cmp sub inc mov cli pop out xchg cmpsb dec and popf jae push pop pop pop push mov jmp pop xor es inc in jne enter mov jge shll imull (bad) shlb lcall dec outsb xchg and fsub push push xchg push mov lcall scas enter fwait imul test hlt or aam popf fmul or push sbb xor ljmp mov popf lods pop and xor cmp or out sahf leave pop and mov xlat mov fsin (bad) popf xor jb jmp aad xor popa test pop mov push mov inc mov adc xor lret out pop aad dec int outsw in fdivrs mov jno add das pop iret rcrb aas sbb outsb lcall es pushf inc outsb inc sahf ljmp lock and push fmuls inc loopne inc and xchg scas in jo and mov leave and inc adcl data16 clc clc pop imul dec inc mov mov stos ja xchg jae nop xchg fwait push add adc outsl sbb scas (bad) lds dec out mov jge or nopl (bad) (bad) jl pop cmp adc push decb jmp sub stc (bad) insb popf insb rorl (bad) fmull mov cmpl aam xchg cmc repz push jecxz or jmp popa pop mov fildl arpl mov inc adc pop adc (bad) dec xchg imull in cli (bad) das inc out sub aaa mov dec or xchg mov cmp fldpi adc adc arpl push xchg js sub ret jl push jo jl xchg mov mov pop (bad) jae inc popa push mov insl in in mov mov inc sbb cltd (bad) ficoml pop dec inc loop faddl pop xlat in (bad) rcl inc aam iret test les cmp dec sarb scas (bad) addr16 adc sub jae out mov inc adc dec fdivl push cld cld and xchg cli inc test add push or ja push imul inc cmp outsl into lahf hlt mov cmp ret sub inc sbb mov data16 xchg cmp data16 or sbb iret sub je dec (bad) mov adc imul mov loope jp push jle inc pop pop adc scas dec sub xlat push pop (bad) popa outsb inc (bad) movsl sti std les repnz push and adc (bad) fisubrl xor ficoml push xor xor inc aaa sbbl jnp xchg sbb mov mov pushf ret dec push mov rol xor or imul lds dec std je xchg sbb jae push mov sub sub push push cltd lock (bad) ja loopne jns imul sbb fstpl rol popa jecxz in scas les in in repz aas icebp into mov rclb leave dec out enter cmp rolb sbb mov andl pop int3 (bad) pop add mov jbe sbb dec call add popf push sbb (bad) pop daa adc dec aaa cmp daa outsl dec fist insb mov ret adc mov and add and call (bad) int3 jp jb sbb outsl lock cmp or or negl xor sti mov (bad) nop ss or fwait popa cmp pop test xchg cmpsb pop cmp push pop loopne cwtl lea sbb mov push sbb bound mov ret stc mov cmpb movsl cmp mov mov xchg or lods push push in sarl xchg fmul jl rcrb adc hlt xchg adc in push mov cmp arpl mov push adc fs loopne in mov push js into std rolb jno push cld push xor sahf ret call xor test das fdivrs add inc imul pop (bad) lret push mov xchg pop fcomps pop adc ror xchg jecxz sbb cwtl call mov scas insb and xor fidivrl (bad) jb jb inc mov in add pop imul sbb fwait rep ds rorb push sbb fs mov sti jp or int lahf sub std mov aam inc aad fs jne and xchg imul push push mov xchg mov in ss xor push dec or xchg mov inc adc (bad) mov xchg mov loope test sub push mov inc jo mull jge xchg out fistpl push clc lret (bad) out (bad) dec fwait outsb push (bad) mov imull sub push or xchg sbb imul ja pop sub repz jo scas mov xchg stc pop mov aam mov fwait or mov pop and mov or mov sub add jl ss lock into das lods push xchg inc imul mov xchg mov iret mov xor hlt sbb loope mov add insb pop pop pop jg mov out push shrl jnp lock bsr ljmp jnp data16 inc mov mov mov pop call sub or xchg pop jecxz adc scas pusha cli jle mov xchg movhps xchg push ja mov movsl jp in push push pxor int3 pop in cwtl (bad) mov jecxz test fldcw pop push xor sbb mov lods push push popa ret shl sbb mov adc daa (bad) lcall xor push sahf adcl ja push fucom in pushf insb or cmpb bound xor lds mov mov in mov add pop and push push xchg (bad) push push mov test ds dec rolb lock repz xchg icebp enter cltd mov pop push sbb pop push inc cmp pop call jae jmp mov push sub cmpsb xor push cmpsb xchg data16 mov dec mov mov sbbl ret fildll and fsts push and lds cmp addr16 or bound int push jbe fstpl (bad) loope scas jbe mov out dec movb xorl leave xchg out jg sbb call push sahf mov lods inc push decl (bad) wbinvd aam mov mov sub (bad) fnstenv mov orl xor cmp and test es mov inc push fist inc jecxz outsl daa add dec insb mov fcomps fmull ss push into addl pop mov gs xor rcrb jmp push movsb cmpsb ret mov sbb sbb xchg test (bad) xor es mov jle jmp rol imul mov jecxz clc jae popf aas adc outsl daa pusha and dec push imul es imul jno orl or in mov pop xchg jle test outsb or icebp pop cmp and ds shrb mov lods sub stos ret insb mov aad mov mov xor pop es enter or or das ss enter pop out les aas pop and push scas test (bad) insb loopne jmp ja dec push dec fstpl lock xchg movsb in fwait mulb int mov and and (bad) fs insl push push enter mov jge jbe mov pop loop xchg aaa movsl xchg enter imull mov pop pop xchg jl or (bad) pop insl push push and in test and stc ret and cmp (bad) dec xchg mov movsl int3 xchg sbb dec mov test imull mov push or mov pop (bad) mov inc outsb (bad) dec call aad mov dec insl ret pop (bad) sahf lret mov in jb stos mov icebp cli pusha sbb fwait jno or or mov subl jl faddl xor xchg (bad) and mov sbb xor push int3 cmp sbb mov hlt aaa movsl (bad) sub fchs and dec cwtl jno das jnp cs fwait xchg jne std (bad) daa popa fxch mov push mov add push outsl testl mov in int3 xchg cmp add decl jge sbb cmp jle cld push stos stc pop ror icebp push xchg fisubr arpl and imul test ljmp lret (bad) xchg xchg lret mov (bad) inc mov mov lcall jge out iret hlt dec dec push pushf cmp mov hlt movsb mov loope,pn in jbe or adc loop movsl dec xor nop push outsl mov and sbb movsl into xchg and xlat insl stos mov mov lods jae lods ja sbb cld pop daa inc mov pop cmp arpl jmp xor sbb inc iret and movsl jmp in popa int dec rep xchg mov dec outsb adc add ror fcoms enter and (bad) xor int inc or std out pop dec orl xchg cwtl test cltd push dec cltd in leave mov cli adc and leave mov lods nop jge push mov pop and jbe xchg mov test ret insb clc repnz addr16 in mov cmp fmulp xchg ds aam (bad) mov push test jg sub mov call stos sub mov and push ljmp xadd jb xchg cld aad sbbl (bad) and stos in out or fisubrl jmp adc jno sbb aaa mov fwait cmc in loopne lea xchg paddw in ret (bad) cmp jae mov jno adc push divb out (bad) dec ja loope xchg pop aam xor ret pop inc sub push (bad) mov test (bad) push adc jl sti sub push mov inc dec dec jnp mov jmp push xchg sub dec and stos push ss sub dec mov stos jecxz sub mov in sbb out lods lret xchg mov outsb mov mov adc sub or js loop mov das pop mov mov das pop mov cld pop inc mov cltd adc add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fsts add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb add lock mov es dec mov push ret cmp mov je out jmp fdivr mov xbegin cmp mov or mov out inc mov loop stc popf jo cwtl ds adc jl es sub stc mov mov iret ror push cltd mov or pop push xchg xchg mov jns mov ret outsl lds inc aam jnp sbb xchg sbb orl (bad) jmp mov mov dec xchg mov jmp xchg leave sub inc mov push lods jge std in (bad) cs sub sub adc stos call sbb pop jl push out dec (bad) popf mov xchg sbb dec aaa enter pop in data16 push lea xor sbb sub jb jns pop shrb cmp scas lods add pop sahf push bound cli (bad) jne int sti loop xor inc mov sub sub dec cwtl fdivrl jge test inc mov inc scas dec scas in fnstcw std mov pop aaa add cmp inc fsubs push push sbb jle xchg daa das in sub cmpsb fild push ret jno xor (bad) mov dec idiv dec push adc push aam idivb add pop out push sti test pushf mov loopne repz in inc out jg xchg or adc mov push movhps sbb pop and repz push cmp andl test bound adc insb xchg xchg xchg test arpl push inc xor loop mov clc incb jp test fwait mov xchg ret pop cld mov push mov pop cmp jge sub inc dec ds fsts xchg sbb (bad) out sub pop ret fldt pop add jecxz pop jnp jb cmp lahf xor pop movsl sub inc test fbld jne shrb js add clc cwtl sub lock and in mov push shrb xchg arpl mov inc lahf push loope addl das je push movsb lods mov iret pop stc mov pushf pusha xchg push rcr in icebp mov shrl push scas sbb clc pop fnstsw sub (bad) sub mov aas idivl insb pop mov sahf nop ret pushf stos lret outsl cmpsl pop in mov push cltd bnd movb outsb stos lock (bad) xchg sub cmp ror jnp (bad) jne rcll enter dec hlt (bad) cmc test adc (bad) pop mov js arpl imul sbb push push xor sub lcall cmp jbe xchg popf mov push js push sbb cmp pop xor and jno sbb dec andb pop adc pop sbb sub cltd pop addr16 ficompl inc gs loop push outsb stos add lret sti enter add vcmpss insl push or cmc aas test ret mov mov jmp movsl mov sbb and test les mov (bad) and rorb pop xchg es and outsl jb and sbb jle adc rolb lret add or cmp cmp out movsb xchg lret and and pop (bad) mov push sub dec clc xlat jo (bad) mov repz mov jnp stos dec xor push push icebp sbb push (bad) ficomp dec stos clc pop je mov stos fwait sarl popf aas jbe scas sub loope fstps mov mov and lahf rorl or cmp mov ljmp sub loopne (bad) sbb cmp aad xchg icebp mov xchg fildl out in mov out loopne push push jg xchg gs mov mov mov repz ss add dec test ffreep jmp pop adc fistl lods pop test jb addr16 inc cltd add push or mov inc sbb add sti inc mov incl ret test popf lahf mov js sbb jbe xor out gs dec adc popa inc pop mov mov dec (bad) fdivrl mov scas or lret mov add mov pop mov mov shlb das xor jmp pop xchg add xor jns aas jge lods cmp loopne jo stc (bad) jbe push lcall (bad) (bad) dec add inc mov loop,pn mov dec sbb xchg stc xlat xchg iret sub hlt scas dec popa dec push sarl sahf leave into lahf out test mov pop rorl mov mov jb mov fimul lcall pop sub mov test mov scas inc pop les lods push movb flds xor and or dec sbb incb rolb cmp ror push rcrl jmp jge add or mov xor arpl in lea pop xor ss pop cs ds xchg jno add push sbb clc pop xor dec push mov test scas jne sarl sub (bad) fdivl jns scas cmpsl xchg pop lods nop out mov jmp mov xchg xchg push in (bad) lahf xchg pop sbb adc aad call sub mov pop cmp test shr sbb push sbb or push loopne and pop scas jne fildll mov pop subl add inc pop enter push imul pop out xor mov inc enter jb lret jnp lds jl inc mov pusha pop xchg lret or cmp push jnp (bad) cmp xor adc mov pop popa ds xchg mov movsl (bad) sub sub and mov enter push sbb pop shll std sub (bad) xor int insl (bad) cli add jne std and scas cmp inc (bad) cmp ds lock clc mov testb iret ficom or rclb test push jae xor mov (bad) ds fsubrl add add fstl ret cmp add mov fsts push andl (bad) gs std adc fdivrs adc inc or jo push cwtl pushl enter jb (bad) mov jae pushf cmpsl loopne add or repz lods stc bound gs or das push mov mov in aad xor aaa sbb sub push xchg aaa pop scas or (bad) aam loope es fwait repnz inc jg and pusha inc addr16 jbe push mov lcall mov shrb xchg popa mov sub es (bad) push rolb xor push mov and js (bad) and cmpsb mov dec xor jl inc bound test out cmp push sarl loop rcrl ss sahf jne stc xchg sti jg lods in (bad) cmc xor movsl mov xor addl mov and dec lds lds movd imul dec daa fwait sahf or imul cmp cmp mov cs push push imul lret sub cltd and aas scas leave test sarb popa push or or push mov or xor mov insb and mov fdivrl int3 sarl mov fcomip pop (bad) xchg mov aas call outsb jle jge inc imul pop fidiv shr lods jns mov jp stos repnz adc adc rcr scas (bad) lret pop adc fnstcw in add outsb movsl push xchg test mov pop mov adc jg mov bts dec rorb lret or cmp popa add fadd fs paddq xchg push push fcoms scas pop adc sbb pop mov mov fs jecxz aas out inc (bad) cld insl mov (bad) fiadd mov test (bad) (bad) movsl daa repnz cmp or aad cli loope lcall (bad) dec hlt jns fidivrl pop push mov jns jecxz dec xlat jo pop cmp pop lret sub test cld sbb fwait push test or (bad) adc xchg push and cli xchg lret leave mov xor push add movl dec mov lahf push jmp js sub mov fstps sahf imul cmp inc sub mov movzbl in sbb outsl xor mov push xchg fmuls jns addb add out add icebp std dec mov mov pop and ret aas cmp push pop mov cmp jg jae fs addl dec or sub inc pop add or jmp push xchg mov sub enter xchg pop inc in int add inc ja and xchg mov mov test andl fucomi (bad) sbb push jne sbb lods pop mov adc adc fs mov out out daa int3 cmc push jae sahf int3 faddp cmp lcall shll test add fiaddl jecxz cmpsl imul hlt test aas jno int push addr16 das mov jne xchg adc mov int mov mov popa pop shll cmp add or test cmpsb gs mov movsb fisubl movsl ljmp aas sub dec fwait mov test out dec adc subl movsb jo mov sbb lahf (bad) jbe mov rcrl (bad) push jae aam xchg test push (bad) outsl es inc dec call add cli xor jle pop dec aad adc mull add fidivrl pushf push fxch leave and (bad) mov fdivs gs push add rcrb mov mov xlat into sbb dec sub in ljmp xlat mov mov popf jecxz in insl cmp xchg add adc mov jmp pop clc pop xor aaa (bad) mov jl fs negl inc add jnp and (bad) jbe out (bad) lock xchg cli pop mov mov andl cltd cltd ljmp cltd dec popf mov cmp fucomi mov dec xchg das dec lret arpl es add pop rol je in mov push in stc jg cwtl cwtl inc arpl cmp and int3 aaa or sarb mov divl test outsb les lcall sub add arpl push xchg mov bound xchg cmp lcall xor push jne cmp sub rol imul sti xchg sbb fwait into sub mov (bad) push push or mov cld jns sti clc loop int3 and adc (bad) mov je mov or std sub pop lahf xchg (bad) mov fdivr inc outsl xchg icebp push push loopne lock adc leave fnop sahf (bad) leave icebp xor ljmp mov sub inc mov and loopne mov xlat lds push push sbb leave sub insb movsb sbb sub cmp inc jno inc mov pop pop mov mov movsb stc xchg push cmp xorb mov fimul aad enter xchg inc dec sub in mov jmp push fs scas or push or (bad) pop ja or sti cmp scas pop in lds push test push jnp into sbb sti or jge dec push jg or jae in sub and out into ss int3 sbb fmul pop scas sub fcomps inc mov dec out or push cmpsb pop jecxz xor add scas xor mov insl inc xor and es enter popa aad sub mov jne inc jno andb mov jne cwtl movsl ret mov faddp mov test (bad) push jmp clc stc icebp add mov fistpll outsl pusha jg push push add or sbb in lods out push test aam xchg mov movsl shlb push stos jb gs jb fwait pop push cmc inc pop cli test enter in inc sub mov and stc into out shl fild jbe loopne in jmp sub mov add add sbb bound mov sbb ds jae sarb or or cmp cmp rcrb scas aam dec mov lret or mov jae pop pop mov (bad) cmc mov fcoml add imul dec and jbe pop or inc jo mov fbld mov and lods inc adc adc pop cmc aam (bad) repnz mov xor cmpl hlt xchg push mov gs int push sub inc stc adc mov je into sbb push lods scas sbb pop sub and mov insl popf sbb mov mov xor mov mov jo es mov stos xorl mov repnz clc cmpsl xchg in test scas dec fdivrl mov pop push in lahf add cmp aad jg mov in das xor (bad) and pop jne fdivr mul sbb fistp and (bad) xchg fidivr sub mov movb mov sbbl (bad) int3 sbb fprem1 xor xchg scas xchg gs in aas ss loop dec xchg add loope and lcall adc sbb jp movb jp dec cmpsb cmp out int3 cs push or mov xchg push cmp out sahf outsl jne out dec adc cmp or cwtl xchg sahf pop enter cmp mov sub ret out and repz fwait mov fs xor jae fisubrl std or stc xor into insb inc sub pop nop jg out sub jo fdivl jnp pop sbb pushf inc or icebp jp or imul lock pop mov sub repz jge jecxz dec bound mov mov loope ja push push mov cmp inc pop inc mov and jl je cmpsl repnz add (bad) mov mov js ret add xchg push rcl int3 stc xchg mov cmp stos in xchg rol ja ss mov push dec jb and jmp idivb loope int3 and int shlb add (bad) call sahf cmp repnz xchg daa dec sahf cmp repnz decl add aas rcrb add add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop adc add loopne frstor or dec dec ret call inc mov fstp movsl adcb and sub fdivl sbb lcall aas add add das imulb aad add inc fbstp pop dec inc ret sub push (bad) lret addl add mov sub mov into or fnstenv adc out mov jg inc int3 sub cltd xchg loopne popa aaa lcall in nop pop adc jmp cmp sub insl insl sub mov add repnz cmpsb jl hlt std data16 das or pop int fldl icebp orb jo leave pop stc (bad) int inc sti mov outsl sub js xchg addb sbb bound mov cmp pusha jns jns insl aam rorb inc push pop inc in dec dec xchg sub jnp scas je push adc jle cltd cmp mov push pop cwtl outsl inc adc pushf loope adc sub (bad) xor xchg xor ret jmp dec xchg push mov mov repnz mov out gs fcomi mov shrb push aaa mov jns std repz in int scas (bad) mov adc cmp dec add lods sbb repnz cld inc push fistl inc (bad) push mov cs repnz fwait fs or xlat push fdecstp cmp push xchg push lret leave mov aas mov sbb adc adc popf in lea das cmpsb push xor push mov das stos add dec mov inc fs pop adc dec push adc mov jl nop out movsb sub adc outsb insb aad pop inc sbb mov test adc lods adc stc (bad) imulb leave xchg jmp loope mov adc cmp stos dec add popa mov fstpl dec aas rorl sbb inc ljmp (bad) mov bound mov nop js ret and add sub jge jle icebp jp jne jg add imul or (bad) les jge out clc mov (bad) adc mov (bad) shr rorl pop sbb imul mov (bad) lret pop imul das out inc daa iret mov jle fsubl stos jb pop lret mov cmp add sub jne mov push adc mov shrb test call arpl mov sahf xlat add add (bad) adc dec pop mov sbb mov addr16 lea and insl pop scas cmp ret aaa add out pop xchg mov addr16 add jne arpl pop xchg jg mov sahf mov pop cmp push aaa fildll cli incb xchg into sbb xor mov clc or mov inc xor dec jbe aas inc push or fnsave into pushf fwait (bad) lods jle addl into push sbb mov loop lock cmp dec call cmp out out sbb jl call xor dec fistl leave outsb dec add hlt add ja shr mov and arpl mov ljmp fistp ja cmpsb inc lods rolb out mov call shl ja dec jmp js xor negb push leave out ret dec inc out inc dec sbb push xchg mov (bad) in mov lret jns test push (bad) and cli fisubr push push std testl ss outsl imul cli adc inc out mov push loope cmpsl pop insb xchg ja sbb out nop sub fldcw pop nop mov in jecxz cwtl fsubr jne (bad) lret mov mov adc fs mov dec mov sub dec loop scas fs inc hlt push test stos test add aad leave call adc pop lret jno push mov push movsb sarl hlt dec cmpsb mov pushf stos push movsl loop push mov scas icebp rorb inc fsubrl mov cltd leave das jo imul stos xchg pop call pop pushf jns js outsb push sbb lcall ficom (bad) pushf pop or arpl jmp test sub out aaa fimull xor adc jge ljmp nop dec jae inc pop jne je ficoml push (bad) cwtl push jnp call inc mov push sti xchg inc dec xchg js outsb dec cmpsl push stos pop outsl or test push fwait inc test movsb scas push fwait repnz pop or lret pop mov data16 sub xor dec loop data16 and out and pop es pushf or and fistpl mov dec mov insb xchg pop jle mov xchg sbb roll jle divl push mov test pop cmpsb or push add int3 mov scas pop sbb dec subl inc or mov mov negl mov (bad) or mov movsl xor or mov pop jle sbb arpl (bad) stos cmp and in xor dec roll loop xchg adc sbb jbe loope lods popa lea cmp cmp mov out stos push dec push lret mov mov push repnz push push data16 sub into out into insl leave les fcomp pop pop inc mov jnp lret sbb test cli jg sti stc pop arpl lahf aaa mov sbb lahf xorl mov jg ds sub idivb call push out inc lahf xlat adc test push fld insb jecxz pop xor mov sar loop and cli mov mov sbb popa pop icebp pop mov ret and jg dec popaw ret lock sub or pop rorl rol lret popf sbb push movb in jge push sbb dec push test mov movb push lret push mov add mov dec outsb mov js sti clc daa daa inc xchg push dec scas inc popl sbb cltd aam dec push dec xchg (bad) dec and jp aam sbb pop movsb inc stc xchg (bad) ja scas sbb out fadds sbb daa add cltd pop fcomip repnz dec (bad) pop xchg sahf and mov mov push mov cmpsb jnp clc out test stos stos outsl mov cmp dec test jbe xor pop inc push sarb notl inc ret jmp and dec movsl (bad) xchg (bad) jle xchg fimul mov inc sarl add subl mov outsb adc fisttpll pusha jle xchg xchg popa fucom faddp idivl or popf sub out test push lods pop xchg in int mov mov fdivs push xchg (bad) ja js mov push mov xor cmp push jno sbb aad and pop call xor movsb mov not movsl cmc in sbb push dec pop outsb add jg dec jns lea and ret push or sbb fimul xchg cmp lds jnp push test in cltd sub inc fstpt cltd mov adc dec (bad) mov mov and dec inc repz popa xchg subb loope pop loope ret adc cld xchg lods add loopne roll pop mov std aam imul xor in lahf mov dec pop xchg mov mov into xchg sahf or mov push cmpsb push mov (bad) jns inc cwtl jp adc xor mov and sbb mov std aaa es loopne and (bad) mov mull xchg pop iret mov adc mov xchg sub inc (bad) int pop mov (bad) jo fbld or jecxz adc test rcll dec jg loop movsl cmp and addl arpl push fsub and push sbb cmp lock (bad) leave and in jnp in xor add or cmc outsl mov or add jge xchg xchg mov (bad) fdiv movsl clc xor (bad) fisttpl loop xor jmp xchg scas pop repz cmp push (bad) sbb popf test (bad) std clc movsb sbb xor fldl xrelease mov lcall outsb xor mov or xchg sti cltd inc outsb data16 mov xchg sub lcall push sbb (bad) (bad) mov mov mov pop enter xlat pop adc aas mov clc arpl movsl (bad) insl sub or cmp mov nopl ja ljmp aam cs rcrb mov inc inc mov popf (bad) jecxz mov mov dec movsb sbb repz lea stos and xchg mov push or arpl int cmpsl popf test insb sub cwtl sbb in notb in sub sbb lods lods add leave loop pop shlb cmp sub sahf cmp shl fstpl jge hlt jp mov add sbb push mov into push jle (bad) sub scas cmp xor jmp daa loope mov mov mov add push mov rcll insb push fstpl pop dec mov les clc ja ljmp adc push mov movntq out inc imul push sub mov sti xchg pop mov stc ret or mov inc imull inc sub sbb add xor cli repnz test sbb lahf roll mov lock jecxz movsb clc sti jp cli jb mov mov xor mov in sti lret out push faddl xlat xor lods xchg mov mov mov cld iret shr (bad) (bad) cld mov mov jne mov ret pop repz pop jmp test dec mov (bad) add rcrl jae dec movsl xor mov shll push jns xchg test addr16 rcll sarb sbb in cmp dec popf into or insl xor shrl jbe std mov stos (bad) pop lret cltd sahf dec fwait inc repnz sbb ds cs jmp sbb aam aam pop int dec (bad) in mov pop or movsl xchg fidiv pusha xchg fcompl (bad) xor aaa xor in movsb out sbb mov out fldcw (bad) push dec loopne adc in inc mov test pop (bad) bound mov mov fs mov sbb sbb loop pop sbb mov pop push (bad) pop xlat adc psubusb lds mov fwait pop divl inc sarb shlb and fidiv xchg or pusha jmp call bound xchg imul xchg clc cs lcall in or adc fidivl fwait inc push mov push data16 lea in hlt mov xchg es cmpsb loopne push mov adc (bad) jae mov repnz fistl sbb add sarb push (bad) xchg or rep push mov daa hlt or pop sahf lods in lock push sub cmc pop mov xchg and sti repz jle jge mov shll add ja push dec aaa movb leave dec out lahf or stos pop psllq and xor jg popa lahf cmp movsl lahf into lret out test xor xor in test jnp mov pop dec ror les pop xchg pop pushw xchg push test adc rorb int3 lret xlat movsb or xor push cmp and insb je pop inc sub xor or lds popf xor sub sti outsb cwtl mov and add lcall pop cmp and mov mov add sub push aad cmp adc pop stc jmp jbe std adc xchg pop push dec (bad) and mov lock pop scas orl lret or cli (bad) dec (bad) loope out or pop jns cmpsb add cmp or mov loopne jns lods fadds sbb push sbb movsl mov ljmp pop jo incl push jns jge push bswap xchg jge adc out daa iret test mov fidivr or repnz adc mov mov sub (bad) xor inc sarb scas scas or or sti and sub aaa cmp xor xor mov cwtl enter push lods cwtl mov lods notb ficomp lea dec mov jg cmp mov or fidivrl cmpsl pop js into mov ret jmp test fmulp loop lods movsl (bad) loope jge arpl adc imul mov gs cmp pop jp xchg arpl dec mov add add ljmp pop stos lock and and ja sbb dec jp mov push sbbl in mull jb test outsl mov or pop das adc lods mov pop gs or lret repnz mov jnp push scas insl sahf mov mov xchg sti aad add int3 les mov insb sub mov adc dec sarl lea lahf inc rolb lret cld mov fldl mov pop jns ds dec fsubr data16 pop lret out lea dec loop aad int3 xor sub lcall repz push sub xchg push and (bad) cmpsl rcl lds push imul sarb or fild (bad) jp nop ret lret xlat sub sarl (bad) fisttpl jle sahf and test push jbe cmp xor jmp into jmp negb xchg sbb imul daa xor cltd stc cmc outsl dec scas push inc pop andl mov jle in test imul repnz push fs adc mov fisttpl aas mov data16 (bad) jnp jp add fldt xor inc bound into cmp call shll std lods bound adc xor pop or out (bad) mov and dec outsb (bad) cltd push or ficoml and jne call mov sub add sub adc jne inc mov sub sbb roll mov fstpl mov in in xor cmp sbb mov sbb aad mov arpl (bad) sub xchg xchg mov mov ss and push out pop mov jle scas lahf add lock or pop inc nopl lock addl push cmp lock addl (bad) jg add add sbb or sbb iret add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fsts add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop adc add rcr and sbb xchg adc push movsb arpl test sbb mov push cmp jno (bad) jno add sub imul push out sbb cmpsl lods xchg and jecxz inc ja rorl mov addr16 xor (bad) fsubrs js mov inc (bad) pushf inc adc jmp mov sub cmp call sarb (bad) stos inc and sbb and dec cmp rorb sbb xchg pop das jmp dec adc enter inc pop cwtl lock rcrl or popa inc cwtl out (bad) pop out sub cmpsb sub les insl arpl (bad) push or push cmp jae in adc fdivr dec or je cmp test inc mov dec loop in ja xchg pop and (bad) sti and out jg int jg mov xchg cld call jae jbe or jno das fimul pop imul push popf mov imul mov xchg (bad) icebp mov dec nop test cltd xor and cld xchg push jle mov dec cmp cwtl lcall xchg repz cs insl inc mov adc das mov and data16 les (bad) push faddl xor jne pop mov mov pop xor xor cmp pop mov push sbb mov and pop xor ret push adc mov adc subl repnz out add lods and (bad) aam (bad) incl dec (bad) ss (bad) insl xchg popf cmpsb lds jae je dec push arpl and or (bad) lods cs dec xor adc fwait xchg bound cld dec shld jb dec or adc test and push (bad) iret clc lahf orl fsub mov pop es cmc mov adc leave pusha arpl xchg mov lret or cmp out ds dec fisttp xor loop xchg sbb imul (bad) push cld int3 add jae ds fwait push pop test pop ds loope sarb das gs adc jnp sti xor lret (bad) hlt call cmp call ss add pop jg mov jg dec dec (bad) push sbb push mov sbb scas cmpsl subl in xlat mov movsb aam xorl cmpsl enter fsts push (bad) and iret icebp pop inc ficompl jle dec xchg dec adc push aam data16 ja (bad) fistl sub pop and movl ficompl outsl sub dec or mov mov push outsb mov jmp fwait clc inc mov ss bound push loop enter outsl inc fwait loop jo cmpsl or int dec ret icebp add jp into insb in cli xchg stos lods cmp sub cmp (bad) push faddp hlt cli add jmp mov dec inc outsb std arpl mov in or push sub mov mov xchg push lds (bad) addl mov mov popa xchg cmp fwait sub pop jae xlat add pop dec sti mov aad mov push cmc repz outsl in or lret pop add iret xchg stos je push lcall or jecxz js in inc insl rolb push fistpll push jnp ljmp bound ljmp in push out in js sbb icebp pop stos in mov (bad) mov xor and (bad) xor into or xchg dec insb je mov add aad ret cmpsb iret inc enter mov repz jmp dec ja movsb ljmp or in jg mov ret mov out (bad) or add js es sub pop push mov xchg in stos (bad) test mov mov mov es ljmp mov insb test mov in xchg ret xor mov sbb xchg push movsb sbb jb popf pop adc lea xchg aad dec xchg popa mov mov rcl aam lock maskmovq mull dec cmc jecxz cmc adc push and cmp mov xchg enter adc pop mov add aaa adc (bad) int3 jno cmovno jp ljmp lock push push cwtl out in push sbb add addl sbb clc lods adc and insl stc scas dec roll adc push leave mov sbb adc repz sub sbb inc cmp es repnz cwtl adc je popa int or cmp cmp xor push pop jp ss leave adc fsubr aad aad jmp jecxz inc testl and cmpsb push xchg jmp jbe xchg cmp push xchg xchg negb jmp movsb mov popf dec adc add hlt inc pop popa jo leave jo out clc jns xchg insb push pushf ret mov mov insl popa mov pop fldt jae (bad) test pop aas or adc jp dec call sti xor sub xlat xchg imul cmp cld jo outsl or pop adc push inc dec jae gs addr16 int3 imul dec xchg jbe ss push ret or push jae int3 mov frstor and loop movsl (bad) cli cmp xchg and (bad) mov dec std adc push nop stc ja lcall xchg cmpsl pop fisttpl pop arpl mov cmp (bad) loopne mov mov das mov std xchg aad push (bad) enter ds (bad) xor nop scas push lods push fidivr add mov rorb fs xchg jns xor mov mov mov aaa in mov (bad) aas divb pop iret xchg pop dec outsl fldl fucomp or inc push lahf jno jg pop mov repnz or pop cmp pop notb sbb jge fs insl inc mov test jno ret pop in push jo iret jg lock jle sub push out enter mov int insb adcl cltd test pop sarb leave or fistl xor ljmp sub and dec aad daa push and adc cmp fldl fcomps repz xchg jl lea push shrl gs enter dec in aad adc and lds xlat out jb aam mov imul mov shll (bad) or mov dec jns aas cld cli aad jnp fmull mov sbb mov sub pop testl (bad) aad int3 (bad) cld mov xchg push xchg loop cmp push stos in subl jb lahf icebp aad mov sbb push add mov pop xor lods dec ljmp hlt scas pop push xchg add mov cli mov out stos push (bad) lock jl xor mov cmp mov push sub and adc dec fdivrl add or hlt in ret xchg fisttp es pop jnp cmpsl in nop jbe and fildll xchg mov pop pop fnstsw add jne pop adc in popa add dec lret ja roll dec jb xor hlt ret inc in mov outsb mov mov cmpsl in xor pushf or push push sub subb stc vunpcklps into aam adc jl mov sub mov repz cmp jb sub ds sbb push mov addr16 xchg imul (bad) stc and inc out and adc lret test iret je sub daa test arpl mov (bad) shll in inc sti insl sbb cmp sub jl out mov xchg mov or push fisttpl (bad) je xchg mov adc int mov out inc mov stos pop inc add fist cmp scas and test cwtl popf jg xlat mov out jl out roll mov mov xchg fisttp mov jmp pushf cmpl mov mov loope in in mov (bad) sti dec pop mov mov cltd add adc xor iret push popa nop sub jo adc xchg cmp inc pop shrb in xor dec push mov and mull lods cmp push das loope int3 stos add sbb jns jne insb mov popf icebp cmc jg imul mov (bad) leave add push enter lcall (bad) repz jecxz stos inc jmp stc adc inc std sbb imulb jb inc xchg mov out pop out repz xchg cwtl sbb xor sub and adcb gs mov inc xor jecxz sahf and and push outsb adc int stos add cmp mov out mov (bad) int test bound repz and xchg mov (bad) (bad) enter enter fsubrs cmp or test insb daa and mov lret push adc jno mov jge cmpsl dec push fist (bad) jmp out pop int add xor movsl (bad) xchg mov ss cmpsb sub and jns inc mov out jo in or add subl jno,pt rcr ja dec repz les push adc sbb sub mov frstor test dec dec xchg jge test xor aaa jno pop mov (bad) xchg or fwait int push push adc xchg jae pop xlat sub xchg sub sbb xlat cmp mov jo mov xchg shrb loope data16 aad sub pop mov mov cmpl adc and (bad) in cwtl jae es xlat fnsave (bad) dec nop push mov aam in dec xchg lds test jp add insl js test pusha leave pop inc jp lods aam incl mov sub ds lock adc pop lret mov xlat xchg jno and push cwtl sbb es sub lds addr16 int3 adc jbe mov test and sub add out inc dec xchg pushf aas push cmp pop sahf mov leave jns rolb sbb rcrb outsl inc dec inc loope imul les roll enter test lahf (bad) and cwtl jno push out cltd jbe jne mov aas mov cmp cmp pop cli mov push test jle pop add cmpsb jo pop or xor adc pop or and add (bad) in into std mov icebp push adc call lods shl sti fcmovu mov pop pop mov aad mov rol stos inc decb daa test es fs xchg xor bswap push lds ss inc push push ficoml popf andb cmpsb loop adc xchg in jo aam inc out xchg pop mov ja push test (bad) outsb jl jne insb push es mov xor je inc pop mov out out (bad) mov sahf bound outsb push or fldt inc push xchg popa roll mov fnclex jecxz and testl xlat jae ja aam pop cmp pop xor ss cmp test sub dec addl lret movsb mov fwait cmp cmp out cli xchg add (bad) aaa jp push xchg outsl cli faddp out inc stos arpl int3 pop xchg push lods cmpsb pop xchg dec imul out jb jbe cmc dec gs sti or pop pop mov enter inc das or sbb jno insl mov push push jb sarl in sub adc cmovbe jge cmp cmpsl mov inc push mov pusha xchg adc test scas xchg movsb imul test mov cmc push push lods fsubrl sbb push xor fmulp lcall fild out lods repz push (bad) nop pushl or inc xchg loopne push test lea mov call icebp and mov out push lcall cmp sbb dec dec fcomip xor pop sbb dec das adc (bad) xor aaa push aad mov dec and out popf mov adc insl jmp dec mov jns jg and lret and sbb jo out roll mov xchg fidiv push add add pop mov jge sbb xchg inc inc jmp movsb mov inc inc mov or mov hlt mov mov jg sahf sbb xchg dec mov lea jae ds out or fsubr aas gs outsl xor mov mov sub push push xor (bad) pop pop daa adc sahf loop sbb popa xchg scas add test push jl or mov pop xor or shrl cwtl (bad) mov pop pop mov sub xchg push mov and mov cli xorb xchg xor or xchg into xor rorl les mov in cmpsb mov add cli scas ljmp (bad) fisttpll (bad) push sbb lret jmp xor insl das sbb inc loop jge lods mov out adc jae jge fsubs dec inc mov rolb lcall aas roll repz cltd test dec sbb sahf pop lcall cmpsl mov ss shll fs add xor jae sarb ja mov inc jge mov inc jo sub and daa mov add lea or and lds dec add aad test lock mov jne outsl inc ds jo movsb xchg xchg data16 in les dec fisubr mov jl mov cmc and cltd call adc push jno ret cmp jne mov inc inc push sub in or sahf pop ss (bad) xor push mov pop cmp andb ret mov push pop movsb mov iret mov testl es fs ja ljmp call sti dec out cmp jbe ss scas scas push dec push scas sbb pop into fldt (bad) shl sub cmp jne mov pop test dec and (bad) or adc hlt adc cmp mov insl jge inc lea push inc and cwtl imul xchg clc xor mov jl cwtl loopne inc lahf dec sti loop or mov ja jle and out rorb fidivrl push out mov inc jg pop cli stos push push scas mov xor jge pop mov xchg pop popf (bad) jo dec sub inc push pop jnp dec mov test loope movsb lret xor pusha push loope (bad) call sahf cmp repnz xchg daa dec sahf cmp repnz lcall add incl push (bad) or mov dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push inc sbb adc jne mov jb sub popf mov (bad) pop or pop out in sti fisubr out pop add mov bound cmova in or push mov movsl cmpsl adc insl int3 push sbb or cli pop testl jge xor arpl ret cmpb jcxz sub pop mov pop xor add xor cld cli or (bad) clc into jae lcall push lcall jmp xchg xchg imul add mov test jns xchg pop and lahf jbe jo sub data16 mov inc lock pop xlat dec xor sti popl (bad) outsb (bad) lock mov enter jo sub xchg mov inc push or ret lahf es subl inc push lret mov jo dec mov mov pop sahf leave pop (bad) push (bad) fisttpll mov and dec or cltd jg out cmpsl push or cmc push ja mov lret xor test sub das and sbb sbb scas (bad) xor mov cmp ss xor cmp leave and xor jmp lds cli (bad) daa fscale jo pop add stos jp mov dec addr16 sub ffreep dec in add mov pusha or (bad) out or add dec (bad) fistl sub mov inc xchg lds jle cli mov movsb or lret scas inc stc add outsl inc nop ljmp jecxz and mov mov cmp cmpsl pop xor jl cmpsb mov jns push mov pop mov mov and adc movsl push (bad) minps (bad) push push out jp inc or sub push repz and cwtl sbb xor test nop inc out call mov jbe aas xor jnp jecxz stos xor out lods aas adc dec fldl add push bound test call imull push pop cmp push int push jmp or pop ljmp fstl cmp cmp dec add mov negb imul (bad) sarl xor (bad) jbe xor adc cmc es sahf and push sub in mov dec or faddp mov mov ja addl and daa push lcall pop (bad) insl je les mov gs sti imul aaa cmp scas jp in or stc pusha dec adc (bad) das or pop lods pop mov add (bad) mov cmp enter pop ljmp outsb push pop adc sti stos mov enter sub lcall cld int add (bad) push or xchg pop testb mov stc xchg mov enter fist icebp sbb popf mov jb jmp fidivl stos pop sub mov ljmp push inc mov aaa int3 bound sahf jp repz or push xchg xor lds jmp mov fsubrl or or insb push inc jae pop lock jg in pop nop in and das loope xor and lahf inc mov and lea test out mov out mov push test lret shr xor dec ret cmp push fs es jl sub xor mov mov sbb pop lods bound jmp dec mov (bad) aam call (bad) aaa and push fsubrp jg lock mov andl xor xor sti sbb es movb mov shufps cld push mov icebp (bad) pop lock insl push xchg je or movsl mov push (bad) sub lret outsl jb inc inc or cmp fsubr mov adc (bad) mov xchg mov jp aaa mov adc adc mov mov cmp push std mov (bad) mov cmp pop fmul sti jmp ds jl cmp mov cmp ja sbb sub movsl xchg je xor in pop cmc lods cmp xchg sbb push dec dec (bad) hlt dec inc xor hlt cmp fld xchg leave es mov sbb and (bad) inc pop cmpsb lds adc mov sub cmp lret in mov xor fldt sbb push dec inc xlat aas add mov pushf xor inc (bad) mov imul lock xor pop frstor xlat xchg and into fistpll in hlt and fmulp xor aam mov enter mov (bad) mov fsubs jae fs dec push push xor clc mov into test push arpl pop cmp add outsl addl popf cld jne es add sbb lahf cwtl jbe (bad) rol jmp andb cmp (bad) mov int3 clc push inc mov push adc rcr cltd mov test sbb test jg popa ss ja in fwait push dec cmp adc push mov and xor mov inc jmp xchg push or enterw out popw add sub dec (bad) inc cmp dec xor push sahf dec push rcr aaa sahf push cwtl inc scas cmp pop mov pop pop dec jns add addr16 in or imul or dec in jge repz es mov iret or or (bad) loope fadds pop jo or cmp pop (bad) in cld sub test push lods out mov stc clc test es or dec in mov xor and mov scas imul push (bad) data16 sbb jmp mov or in adc test inc (bad) mov mov cwtl pop push push push cmpxchg ljmp cmpsl pushf imul sbb inc inc dec sub mov sbb xchg add inc sub xchg (bad) mull add insl imul cmp fldt popa arpl enter addr16 cmp jl iret push adc jge cmc xchg cs sub fildll push fdivl adc xchg dec jo cmp adc fcmovbe fdecstp pop adc xchg enter xchg mov das dec push or aas ret insb pop ffreep sbb or lcall es add in pushf lods push add sub ret aad rorb in imul stc xor insl dec bound lea pushl sti add xor cmpsb addr16 shrb fs gs add das stos cs lcall cmp adcl fildll jne adc sbb repz fidivl int3 or leave cmp mov out rcrl xchg pop fnstsw scas jp xor sahf pop popa mov cld xchg std test out lods push ror fwait xor call xchg leave cmpsl dec jle (bad) dec ja outsb data16 out inc clc sahf rorb add pop out xchg jnp cmpsb movsl mov or pop sbb ljmp xorl jb imul dec pop loop mov lock sahf (bad) cmp dec push sub test or mov mov ja dec mov mov push mov (bad) mov es xorl in dec je adc (bad) cld push fwait sub mov pop sti and jmp cmpl mov cltd cmp dec cmp add inc xchg insb or sbb mov add mov ds clc lcall push xchg test out and jp push jmp lcall test in push dec mov fstpl loopne jmp pop sub aas jp sub (bad) dec mull stos pop cmp add xor fld rclb adc aaa imulb xchg lret mov out adc (bad) mov push inc setg and jecxz dec test sbb pop ds mov push sub aaa adc daa popa jge dec dec das mov data16 jb jne push loope das xor stos adc mov and inc push mov mov xchg sbb jg push mov push jb leave cmpsl xor dec xor pop mov sbb jl int stc (bad) cmp push mov fldenvs adc out cmp (bad) sbb lret mov fstl xlat xchg cmp mov scas mov inc and aad imul and dec fucomi in aas and roll pop xor imul mov repz and insl mov loop push mov lods outsb xlat dec xchg scas dec xlat sbb lea mov dec ss lret scas out mov and mov loop bound pop pop sub inc dec sbb stos lea dec (bad) divb pop andb imul adc stc (bad) test xor pinsrw lret (bad) arpl fistp sbb movsb rclb xchg cmp outsb mov sbb mov push push cmp loope mov dec outsl dec loope data16 pop xchg adcl cmp fmulp rcrl cmpsb clc sbb adc push dec inc adc cmp sahf daa jge xlat or pop or les jae sbb inc int3 (bad) push mov mov jmp or pushf testb fwait sahf sahf subl jecxz (bad) rdmsr imul push cmp shr sub pop inc xor cmp mov dec mov arpl das sbb cmp lea fcoml mov out lahf mov (bad) xchg cmp mov dec jnp aam imul jmp test shr int3 imul int3 dec orl sub and lahf jne mov das rolb lds cmp push inc ss dec sbb repz sahf outsl int3 mov xchg (bad) pop and enter jo pop add mov mov xchg sbb leave mov jp mov cmp out xor loope or pusha push cli hlt js jmp mov movsb mov ljmp mov lods sbb and lods mov sbb adc jo xchg lods cmc arpl (bad) and cmp pop mov mov xorl mov inc outsb xlat sub jno enter out pop mov fisubrl mov fldenv xor (bad) cwtl push in xchg push stos js fwait push aam std mov inc inc jg sub push push cli in add test mov sahf xor les fadds xor adc out (bad) (bad) mov mov mov adc les xchg sbb jbe aas pop popa das shrl hlt mov pandn xchg cwtl pop add sarl mov imul xor icebp out mov jbe jecxz and roll mov daa cmc ror sub add int3 add pop pop dec shlb lods lret mov nop inc fisubl dec sbb dec push out mov mov inc add xor fwait outsb jmp imull push enter cmpsl orb in and lea lret fcoms mov adc stos lods cmpsb xor jmp arpl add std mov repnz cmp pop push (bad) jecxz jb addr16 jecxz das jl mov push cmp or (bad) nop mov outsl cmp jae rolb lock (bad) push test and jp sbb xorl movsb pop mov pop fwait ds not or bound pop inc test (bad) fcomip mov mov inc iret or sbb mov inc lahf cmp clc jbe mov pop cltd out and sbb jo movsb xchg arpl fidivr mov pop (bad) nop mov jmp gs xor jp jecxz sarl lods subl sub or sbb pop lods sub mov fwait lock xchg xor push pop scas jo cmp xchg test aas xchg and (bad) (bad) repnz in mov out mov push push into int3 shll into mov mov mull fsubrs mov (bad) ja imul jecxz lds xchg or add sbb xchg adc ret cs cmp sbb sar js into or dec fsubrp mov mov adc lods negl pop push fs jmp (bad) push int3 mov fs jo jecxz movsb out shrl inc jne stc xchg push in clc cmp adc xor (bad) cmpsl (bad) in pop cmpsl push push outsb fwait pop mov lods cmpsb mov pushf ds (bad) repz jmp mov pop inc push lock addb daa ss dec sbb leave gs (bad) or pop pop popa cmp das repnz lahf add adc inc (bad) daa movsl mov mov cmp loope sbbb gs lret add dec mov push pop mov jns movsb xchg jp fwait lock std or sbb xchg enter and in mov fcmovne nop push mov cwtl icebp push sub scas fs push mov imul mov cmpsl movsb xor popaw jmp mov mov mov cmp cli mov cs fdivrl xchg and or into js das movsl mov pop jge mov pushl pop loopne pop jns or sub ljmp pop push popa add std call pusha data16 jnp ja mov xlat fldl test sub adc call pop clc xchg pop cmp push mov test jl or ss mov and fistp jecxz cs lahf cs or mov out cltd jno icebp jecxz stos sub (bad) in push fmuls sahf aam loopne test rcrb jo add cmp movups mov pop in arpl dec rcrl xor dec std or rcll xchg ss dec mull cmpsl jge lods testb mov add adc sbb jge sbb and dec scas arpl mul movl push stos adc jo pop lock fbstp hlt out fwait aaa outsl fidivr aaa outsl fidivr add pop movsb aad push js lahf test add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ficoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push and sar mov and in gs inc fs popf push divb movb sbb and in jge jmp sbb stc jle jg icebp cli sbb aas mov sar jno mov pop fs paddusw ja sub sahf mov sbb cmp int cwtl cwtl rdpmc and cli cmp shrb mov (bad) mov mov push dec jmp add jg arpl inc arpl imul test jp ljmp or and xchg (bad) xor pop add pop lock inc (bad) jbe in call ds xor jno mov bound jg sti stc in mov aad pop test adc pop mov js or adc leave mov add cltd andl aaa les pop iret dec pop sub or lcall adc jecxz scas imul xchg outsl mov xchg mov or syscall outsb pop testb imul push xchg fdiv sbb std pop mov cli mov dec mov loop sbb inc xor mov lret pop sbb (bad) xlat stos scas js xchg dec xor jno dec add adc popf push mov cmp addr16 (bad) lret rcr push nop cli div and std mov mov imulb imul mov outsb push sbb jo sbb push push mov bound stos push inc cmp stos or jb xchg dec cld in sti xor mov je push icebp xchg divl mov cmc mov xchg mov cmc lahf or data16 push push sub aad mov pop jne pop iret cld movsl insl pop pop popf mov lcall je jbe xchg aaa test dec mov inc pop or push movsl jle mov sub scas stos xor ret (bad) push jg mov out or xchg mov (bad) sub shr add xchg mov cld insb fldenv dec fwait inc int3 sti rcll jp sbb pop xor mov cmpsl jnp push dec (bad) dec enter aam incb pop dec fild inc pop cli dec jne mov mov outsl pushf push push loopne adc jl inc xchg xor sub ret das pop ficoml icebp imul sahf in fimul clc int3 iret inc gs test pop mov dec cmp out bound jle xor ljmp sub lret adc jnp push adc cmp cld ja xor aas mov xchg cmp test jp dec jmp push les pop mov add mov insw xor jnp iret test or or jno icebp push mov push mov test jae adc inc sbb aam cmp pop int3 xor add xchg push sub inc xchg inc mov mov xchg test pop pop pop in cmp lcall stos mov push pop (bad) lds cmp xor xor dec and stos mov jg pusha fdivrs cmpsb cld insl dec xlat js lock xchg pop xchg or aad ds mov test or mov scas jno adc jo inc ds and stos dec bound nop adc (bad) jb es add out imulb mov loope jmp lods inc push pop cmpsl addr16 xchg inc mov lods xorl fwait mov push popf enter cli hlt jl imul push sti push jnp and push enter mov fldcw pop sbb sbb fldt jo gs out mov xor (bad) in or (bad) mov xor mov dec or lahf or lods out inc mov mov dec in movsb mov lret dec add mov cmpsl push jne pop jnp mov add add sbb jle lods test jl (bad) rcrb sbb lret icebp lahf inc and inc stos jne popf mov dec out sbb cwtl loopnew cmpsb push xchg push imul pop (bad) mov xor in enter sub jae mov xchg cli movsbl out mov test fisttpll xchg sarb cmp movsl out pop lret aaa in cmp es jb xchg sar je mov imul lret add adc xchg mov jecxz addr16 push and rep inc jg stc outsb pushf lods pop and jb dec iret ror jge push cmp add and sbb xchg cmp pop je or push or sti (bad) (bad) out adc (bad) jns,pt ss mov mov dec xor mov ljmp cmp shr ljmp ss stos inc pop or pop (bad) and mov movsb cs cmpsb mov mov sbb push adc call js in mov pop jge inc mov push imul movsl add sbb inc (bad) xor xchg fiadd push xor fsubrs mov xor mov test push cmp xor mov add mov loopne idiv pop sarb or xlat pushf (bad) mov ss (bad) out outsl jbe and les aam mov popa xchg test (bad) hlt fwait mov lds cmp divl mov notb pop cltd enter jae push pop ds mov hlt fbld test and mov pop cltd imulb xor push leave and sub pop (bad) dec push ficom ja cli mov popfw xor xlat pop outsl adc mov notl test ficompl push cs xchg testl cli test in rcrl add adc lret inc aaa cmpsb sub mov sub sahf test adc xchg test mov stos pop dec dec rcrl mov xchg scas ret sub sbb sbb mov xor adc push (bad) jmp stc mov into into les scas mov leave sbb ljmp lahf iret loope pop loopne cmc test mov arpl jno xor in pop in outsl cmp mov fnstsw (bad) mov (bad) rolb mov pusha fisubrl (bad) daa and fidiv lret mov sbbb cmpsl sbb fs adc dec dec fldcw adc dec push lahf mov and adc mov jno stos mov cmp das xor das mov icebp lods mov hlt or je fwait xor in pop rorb mov mov bound daa test rol test and pop test pop adc mov lret xor add cld jge mov mov mov mov xchg inc xor cmp xchg loop mov outsl stos stos or sbb add mov ficompl imul jle xchg sub xchg sbb add push pusha sarb inc out push (bad) xchg add js xchg and push adc jb (bad) insb push push in jbe rolb (bad) pop cmp push popa ja cmp pop mov incb sub push mov scas (bad) mov rclb packsswb mov pop dec sub add jl lea mov pop or nop scas xchg (bad) and sub loop adc jg pop stc int3 pop and imul dec popa loopne jo xchg or ss popf hlt inc mov jo xchg in add xor and lock cwtl and xorl (bad) xor jmp mov sub cmp xor sub lds scas mul fcompl cltd bound sub jbe jnp xor cs add movsb push movsl mov repz cwtl mov cmp xor (bad) ljmp imul popa rcrl xor roll aam out and flds sbb dec int xchg adc xchg adc repnz adc adc pop add outsb push push xchg (bad) mov movsl xor pop pop hlt mov sub jne push cmp inc fsubrs and arpl add cld cmp out push cltd add flds movl testb xchg or lcall xchg aaa pop jbe outsb out ret nop in bound dec aaa mov mov dec mov js aas repnz pop jno ds (bad) es pop (bad) out jecxz or stc mov xchg lea ficomp sub fbstp add (bad) sub push mov inc mov adc test push fstl pop fisttp fwait fs imul icebp and mov jnp cmpsb pop cmp xor add in and out orb dec adc pop jb mov ds inc (bad) std into adc (bad) fsubrs adc ss mov push pop cmp or (bad) cmp or mov xchg imul call adc xor aas or jno push aam stos add frstor dec pop push or mov jmp mov call dec in mov cmpsl inc push inc mov pop xor dec xchg sub or adc push es cmp out mov lret push xchg lret add lcall sub sbb loopne add stc xor lods ret inc mov fs es test add (bad) test les mov jle mov js lahf fistl (bad) rcr jmp mov inc sbb cmp cmp and pop icebp leave and hlt lcall push (bad) dec push leave js fsubr fstl stc iret lods loop and fldt xchg xchg dec mov lret lods subl std pop jnp inc (bad) cmpsl mov and dec arpl lcall ds push fist rorb dec pop and loop subb pop xchg pop sar pushf movups cmp xor lods movsl in rcll sub (bad) push js pop mov aaa je cmpsb stc and xor add mov jg inc push sbb enter mov add push mov movsl mov testb fistl push (bad) aam hlt pop popf adc xor test mov inc cmpsl mov in sub pop (bad) xchg rol sbb jno pop scas or mov inc adc sahf divl je nop sub xchg pop insl cmpsb jno or sbb add or sarb or sub sub out push pusha adc imul xor or xor pop hlt adc pop xchg mov jp and lods test mov cltd sub mov into mov arpl fcmovb stos mov je (bad) sbb pop xor inc inc pusha cmpsl or and mov ret call dec mov inc xlat int3 pop cmpsb xor arpl outsb lcall (bad) repnz pop mov aas into in sbb inc xchg test enter in push sbb jle in inc pushl mov daa pop ret popa and push dec and aam and mov pop pop or add jmp and hlt test test lcall inc pop test dec (bad) je insb mov les jne push cmp test cs loopne aas jae sbb outsb (bad) adc sub xchg cmp ja imul lahf mov (bad) mov dec out andl ja mov fwait mov inc jmp movlps fst cli adc inc div mov sbbb xchg rcrl ss icebp lock add lea xchg add std in jmp int3 pusha add icebp cld jns icebp sub mov fsts (bad) sub sahf inc jmp neg cmp xchg sub mov lcall mov pop xor and xchg fistpll pop clc or mov pop dec cmpsl jmp scas aad mov pushf aas dec repz inc mov or mov cmp (bad) mov out xchg data16 out or add shlb fsubrl bound lods push pop int jp sbb jns xchg push push or cmpsl pop sti xchg stos xor flds pop or lock xor mov sub outsl push inc sbb pop sbb mov cmpsl jae int js xchg add jle out loop leave enter add jb imul pop jns jmp outsl and sbb and mov mov jge mov mov push je sti andl mov out fisubl or dec movsb (bad) outsl mov xchg inc pushf pop fwait lcall pushf fcmovb inc xor jns cmp rep push dec and xor xchg xor mov js lock mov loopne push icebp faddl add fwait dec repnz aad (bad) mov fucomip push mull js push es hlt cld hlt lods stos sbb push lahf (bad) mov xchg adc sub movsl ret mov sbb addr16 (bad) rorl lahf jns pop cli mov js cmp cs sti adc jge out push loop sbb fs sub icebp popa cmp add jmp cli shlb dec adc push cmpsb out stc popf hlt push pop aad mov mull call fwait shll in es add xor lods mov std push pop aas enter scas pop and and insb scas fbstp enter (bad) int3 fwait sub or insl or or lods or add cltd rcrb mov test in jne pop divb mov xor test bound jge pop repnz push stc add mov adc in xchg or arpl jne out negl pop fstpt xchg in mov test inc pop ja sub hlt pop out inc aam inc push sub xor repnz in mov lds imul mov mov push push cmp mov movsbl mov (bad) cmc incl notl cmpb sub (bad) icebp movq enter or cltd push inc or push add bnd loop push xchg (bad) leave adc repz xor jnp arpl cmpsb mov (bad) hlt push dec daa mov jae dec push nop pop ds stos pop jb leave in inc lods push mov (bad) aad subl mov push mov sahf and mov shr xchg jbe daa neg ja ficom dec jnp loop test test xor push pop (bad) cmc inc inc cmp xchg sbb das sbb pop and dec xor push out sub xlat cmp xchg sbb faddl ficoml out inc mov mov mov mov icebp pop addr16 xor decl fdivrl cmp fdivrl cmp ja add add xor add add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop adc add rcrl cld je call pushf adcb dec ja dec cmovbe sub cmpsl and jnp jecxz push jecxz add call mov js stos mov push outsb and femms dec cld mov loop xor std sahf outsl xor and les mov cmc mov lret cmpsl fcom xchg incb push mov ljmp cmpsl dec lahf or xchg inc pop cltd pop dec inc leave mov cs aaa ja movsl sub (bad) cmc in jl push mov cmp jno mov pop and xchg pop mov add lret pop mov mov in (bad) xor jbe add mov inc sub add pop outsb popf mov lods nop push loop (bad) fcompl enter cmp inc mov xor rorl in stos lods mov fadds mov clc mov cmp std lcall ljmp insb and test add repnz ja out fs jb mov mov inc cli xor xchg mov enter scas sub (bad) mov das add nop push sub inc mov (bad) add sub js adc rorl mov dec sub sub iret jb push pop pop jb and mov mov inc push or clc insb mov femms in pop or std lods adc inc lahf mov daa pushf imul in sbb xor call js cwtl jno or fwait adc or sub lea jmp jl or inc sbb mov mov imul aas in xor subl xor sub les and dec jbe pop imul iret ljmp mov or push xchg xlat xor sahf pop inc dec jle sbb or std sbb (bad) cmpsb push icebp outsb lret scas in cli mov lret addl pushl mov pusha add js push mov cmp nop in xlat jle inc movsl add getsec xor jo aam daa ret xor mov xor rcr (bad) in jnp (bad) mov sub pop cmp xor or and cmp test cld cmp add cmp and out adc addl push leavew cmp dec ret add xchg inc push push fstpt popf jae and ret test pop out out bts lcall dec sti lcall push leave push arpl arpl xchg out mov lea mov mov add mov mov imul lds push adc mov xor insl (bad) push xor jne sti xchg ret pushf xlat jl cltd mov test sub ds inc rclb jbe add xchg lret xchg pop push lock cmc adc pop jp notl xor (bad) fnstcw cmp dec bound lret sbb out sbb sbb hlt mov rol out or in aam es mov (bad) cmp js loope xor mov scas xchg inc (bad) xlat mov pusha xor hlt popf popa inc lcall adc mov rclb or or cwtl push icebp xchg dec pop lods lcall fnstcw (bad) xchg xchg negl pop scas in ficomp or xor data16 push add dec outsb mov movsl mov xlat dec mov push push xchg or std sub xor adc mov mov movl int push adc xor es hlt pop mov pop dec or stc push jo clc and and push imul lds jo mov jno inc cmpsl jecxz jecxz sbb mov das addr16 pop pushf (bad) stos dec popf or test and or stos lds cmc mov lea js movntps add lock mov jae jge ret inc mov push ret or gs lret and inc gs clc sahf lods cmpsb pop sbb gs and add xor fimul das inc dec jle pop fcomps mov jmp push cli (bad) pop sub sbb xchg (bad) jno jo adc sbb jb call or push pop and xchg dec xor push push or add nop jns call test cmpsl call loop outsb out adc (bad) lock xchg mov mov mov or push pop stc pop mov mov push cmpsl enter stos (bad) xchg notb insl pmaxsw sub mov xchg mov and (bad) mov and push push icebp xchg or fimul insb int pushf or cli jl or testl movsb testb insb lods push and int and pushf ds and inc push inc ret xchg insb std mov mov jecxz mov mov jg jge out dec adc jge loope (bad) in (bad) aaa adc sbb xchg sbb in jle movsb xor dec jbe sbb xor xchg lods loope (bad) movsb es xchg jno call push dec stos adc jae stos clc sub sub push jno ja ja psubw sbbl es fildll lret je fidivl xchg in js fsubrp das enter enter pop cmp sbb add (bad) in mov adc or push jecxz sahf imul cli lret dec xor or sub pop icebp out mov pop gs sbb loopne cs scas in or xor dec daa mov pop rcr add jne stos int3 shll cmc cmp sub mov fldenv sti arpl adcl xor xchg push inc pop daa fimull inc or push flds push ficomp jg popf daa dec mov lock sub jmp sub rol cltd pop cltd fild popa loop mov add les push nop fsub sbb sub insl subl push adc faddp cmp mov xchg in out in mov pop cld mov ss (bad) cmp and iret sub (bad) fwait outsb in stos xchg push pop and (bad) xchg (bad) dec pandn es roll dec mov stc dec and xchg lock mov sub outsb out pop pop gs add cwtl xor xor das lock lcall subl mov mov mov inc test shrb mov pop lret loop jo mov dec sub jae inc imul cmp outsb sub aad pushl lds mov outsl mov das cmp outsl push enter and test js dec push sbb lea xchg push adc (bad) sub sbb call fild hlt jbe add out add imul lret mov push enter mov jge jmp outsl sbb xchg sbb daa mov jge cld aad lods insb xor insl dec fucom int3 and sub adc xchg fs adc int and outsl mov sarb pop jmp xor mov out bound cmp dec and inc in test and pop dec pushf call ret cmpsb sub out (bad) lock iret push cmp in xchg iret inc add dec dec xlat into inc and repnz or mov add subb aaa (bad) ret (bad) pop mov lcall or adc popf es dec inc popa jb in (bad) and test adc rcr adc test cmp sub adc xor adc pop and sbbl in repz addl (bad) mov adc in frstor out lods cmpsb mov adcb nop add ljmp rep pop sub dec (bad) cmp xchg dec xchg out xor mov push mov xchg dec xchg mov jg add out jnp or or or mov cmp icebp lock cmp sub pop adc ret push fldenv push lds add dec inc and dec loopne jo loop inc push fcmovnbe mov jne push and adc hlt loopne test sti mov int push repnz jno iret test add clc inc test push jle imul fs aas add fwait mov push or in jnp fisubl mov (bad) (bad) movsb jnp and or pop jae outsl clc imul rol and xor hlt gs xchg movsl push sub jle pushf lret (bad) cmp (bad) pop or xor (bad) xor xor push mov test movsl flds push js xor sbb sbb pop sbb aas inc and out push cmpsl pusha in stc ja mov xor fstps xor add cmp push outsb sub push loopne mov inc dec mov xchg sub ja leave rol pop movsb addb in and cmp andl xor (bad) mov dec js (bad) cmp add xchg pop cmp sub and jle pop test inc pusha repz jmp and mov push xchg (bad) mov stos (bad) aas jae inc pop xor cltd aam mov leave xchg arpl sbb roll mov sub sub or mov push xchg mov leave in inc stc inc subb addb xchg jno (bad) xchg sub arpl sbb mov std inc (bad) lds sarl cmp out dec mov cmp pop mov sti ss or lret mov daa dec jae mov xchg inc xchg add je fwait int3 pop insl mov push notl pop cmp scas stos mov movsb in or in pop sub add movsb testl icebp adc aas adc xlat add jmp je pop mov mov xor shrb in sub enter popa sbb ss jp leave pop push push mov jo push and pop call rorb jp loop bound adc aaa sbb test rcrl cltd mov pop mov aaa sarl int mov (bad) sahf mov sbb mov adc or add inc jmp stc lea sub push ffree push fcoms xor or jo sub movsb jns (bad) mov jo pop aad arpl test loopne jbe dec test mov rol xchg adc jmp lcall (bad) cmp fucomi or and cmpl jo ret in repnz arpl cs mov push cmp addr16 popa cmpsb mov std and (bad) jbe je ret inc sbb mov xchg sbb sub (bad) sub or dec sbb jb and dec popa test fwait scas jae fcmovnu movsb ss nop imul inc inc inc adc test in (bad) jb jno jnp dec or push adc push mov sbb push test dec decl xchg adcb inc jmp test bound sub xchg dec aam inc test dec icebp xchg hlt addr16 push daa fistpl fwait jecxz stc xor dec loop pop xchg pop mov and xchg push push roll dec cld or mov pop pop push icebp (bad) and push jmp add leave orl lods push insb xchg dec sbb iret out dec dec mov sub push sub or and xchg cld std wrmsr test mov (bad) mulb mov addr16 pop jp lods xor arpl mov repnz insb xor push cwtl mov (bad) cmpsb adc mov lods fsubl mov jle out mov fiaddl inc xor jp pop lods stc out adc fisub (bad) rorb lods pop mov mov dec mov push ret mov imul xchg andl test shl pushf and dec sbb push sahf mov pop mov fildll pop xchg dec cmp sbb es sahf xor push (bad) (bad) stos je sub pusha scas fwait sahf or mov lock stos xlat inc adc out pop incb in add sbb addl scas push xchg int push mov jle (bad) clc cs cs ja and sbb push repnz (bad) mov out jne (bad) in sbb mov sbb hlt out aad js es inc imul mov mov popf imul pop mov ret jno out push mov das data16 notb icebp sub cmp pop mov pushf sub cmc es stos push cmp cmp jge ljmp mov xchg mov jg adc mov or push adc xchg roll push xchg jl xchg ret sub out push divb xchg pop jae sub xor push cmp xor (bad) (bad) cwtl cmp sbb lcall jl inc inc jb fldenv in aam lds cli push and sub in jg in mov (bad) ja push xor int cmp ficompl ds fs xchg pop loop sarb shrb mov jg adc inc and or dec jne mov adc js jne jg mov xchg dec ret cmp jle je sbb fs push xor ret std inc fcoml in xchg pop in jge daa jbe pop sti xchg mov inc mov mov lahf fsubrs loopne mov jp or push (bad) fidivl sub cltd and add inc mov fstps mov cwtl jb push jbe int out mov sahf mov dec sti out dec leave dec test inc cmovnp movsb aaa mov lret sbb scas xchg xchg xor pusha cmp lods adc and adc insb cld arpl push push aad lods xor out xor aas scas mov loope std push xchg (bad) arpl das adc js out jbe ret (bad) addr16 push jne cs push cmp adc enterw data16 mov fistpl cmp out add jp mov ds gs aas jne jnp mov adc fistpl add jns cmp test add sbb pop xor push adc xor mov mov dec and xor sbb dec fistpll adc lcall pusha (bad) pusha sub es add scas mov add push inc scas pop mov stos push scas pop mov stos push scas (bad) incl add pop out dec (bad) xor ja add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoms add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb rolb rcr lcallw mov jmp cmp xor dec fwait data16 cwtl lcall clc lahf sbb (bad) jle xlat repz add push jne sub out fadd push das fwait in lret fstps push outsb leave cmp rclb dec lret xchg outsl mov adc rclb jbe mov dec (bad) repnz fdiv int imul orb sbb or cmp xchg imul (bad) push mov sti xor jnp push repnz loop inc sbb sbb ds add testl xchg rorb out sub add sbb dec mov pop ss adc test sbb sbb gs dec aad pop aas xor popa pop pop out jbe (bad) out addb pop aad cmp in sbb jne add xchg sub inc fimull in (bad) in (bad) xchg mov mov leave mov and cmpsb js cwtl ljmp mov add outsl pop mov adc push push cli (bad) xlat sti dec push nop jae cmp add cld out bound xchg push and (bad) enter adc pop imul xor sbb push lret pushf mov movsl sbb fdivl mov cmpsl (bad) stos outsl jb jo pop popf aaa in add repz inc stc lret enter xchg movsb adc push xchg mov sarl mov mov aad test pushf aam mov iret pop cmp or hlt in push pop cmpsl mov or adcl xchg xorb aad aad test ret lds and mov adc mov (bad) hlt aaa cmp gs lcall push jno std xchg enter jb sub cwtl pop sub xor xchg fidivr jl push enter xchg xor dec sub shr (bad) mov in scas add mov js xor in (bad) int jle nop in out mov mov xchg xor mov imul jno lock scas dec int3 ss into nop hlt sbb xchg inc inc lds es pop mov push jecxz (bad) jg xchg pop cmpsb jl adc int xor sub icebp sbb or fincstp lods cs cmp jmp xchg dec xor mov bound inc add and out popa in test pushf fidivrl mov fwait addr16 bound inc outsb ja and lea sub cmpsb ds pop dec xchg lcall sbb cmp xchg inc push bound push xor xor sub cmp aam scas lahf push dec xchg jbe loop mov and inc cmp repz lcall scas xchg stos (bad) ljmp addr16 clc mov inc std and fwait adc jg leave cmp inc scas fisubr fnstsw es dec lahf scas adc jp inc mov xchg mov les cmpsb sti imul (bad) sarl sbbb (bad) loopne or push dec cwtl xor add inc xchg lret sub in scas test push iret (bad) xor sbb scas xor lret fs inc mov xor and sbb hlt mov mov stc push lcall add push inc mov ljmp push test inc out xor ds (bad) aad add cwtl es pop pop mov jns or dec stc xchg jecxz xor sbb jmp lods sub rolb mov lock repz ret add out inc pop imul lods jmp js mov cli sub mov repz xchg leave imul imul xchg stos out out lds ror or pop push cli test mov (bad) xor (bad) cmp mov in pop in add pop (bad) mov mov mov mov inc and ljmp fmulp int jo rcll xchg je jnp ret std test ja sub jne mov adc movsb mov sarl dec push mov pop insl insl idiv pusha mov inc inc adc add or and or sbb inc arpl xlat mov push je iret addb aad sbb (bad) mov js lret jmp xor fldl pop cmc push sbb adc push dec xor xchg or into aam jmp jp mov shrb add xchg pop jge sub xlat ljmp sbb movsb push hlt hlt mov cmpsl testl pop mov cmpsb lcall xor lcall in aas sub inc or cmc popa fisttpll sbb xor int inc mov xchg bound aad cld data16 mov add es in insl gs js nop scas xor fildll and ljmp test add nop add movsw popa lret and daa xlat fcmovb ret rcr insb out dec cmp ds sub cld cmpb outsl adc into mov pop push mov push sti in sub fnstsw cmpsl pop dec add sar (bad) aam test orl push aas cmp cmp daa dec mov xchg and aam int3 and stc xchg lret repz xor ret inc jne inc and adc jp pop inc ds jecxz nop adc cmp in jg adc ljmp rclb or cs mov movsb adc out and scas test jmp fdivrl cs add dec jno jg in jns inc push mov cmpsb repz call xlat add xchg sbb gs and xchg sbb mov cli cmpl imull push loope xor cmc sbb add mov hlt pop fidiv pop and sar dec test lret xlat mov test xchg sbb rorb add (bad) dec scas push lret jne fld xchg sbb out xor sbb test test xchg mov push and jg xor pop xchg data16 je adc scas fldcw fs xor ljmp jl cld addl aad and add jmp push repz fist mov lcall sub fucomp cmp push sbb xchg dec lea (bad) (bad) daa xchg pop lock int dec fwait repnz (bad) enter jg (bad) mov mov or dec out cwtl ja cld inc into test (bad) dec ja cld out notl jno push pop ret dec xchg jecxz dec lea sbb cwtl aaa cmp adcl or stos lret pop add and sub lret in jp jge addr16 sbb inc aam divps test push xlat xchg scas shlb outsb push add (bad) push add inc scas in mov mov push popf das cs jg in cmp xor orl scas aam cmp pop in xchg push dec adc pushf mov int3 hlt mov sub push leave jno mov dec fstpt mov inc xor sbb mov sbb cmp inc inc cmp pop mov lahf outsl mov hlt xchg mov popa ds sbb pop jecxz mov xor lcall and xor push icebp sbb sub fst movsl dec or add into scas scas lock scas push adc test jge ljmp cs push cltd cs push push div (bad) das and lods push sbb sahf push push mov push xlat clc jb dec and sub pop cmp js pop mov sahf cmp pop cmc push cmc rcrl mov leave inc add pushl and je cmp clc pop rcrb rcrl and pop dec jg mov push fimul out popf xor addr16 jnp pop test cmp lret or fisubr lret das mov xchg mov dec adc es mov sbb pop inc pop (bad) fidiv xchg or loopne lods je test push push mov jle push jmp ja test push cmp je inc mov pop pusha jnp inc popa xchg loopne mov add jl jecxz outsl loopne test scas outsl out mov push ret (bad) fcmovnb inc bound lcall pusha mov iret jge repz bound cmpsb test cmpsb clc xor aaa clc insb outsl sbb in ss xchg pop sarb aad jecxz push test xor call out cmc cmp cli mov lahf lds sub push mov xchg sbb dec mov jo adc in push int or scas add aas mov call in int3 dec (bad) out sub push jmp ja and fldcw mov cmp insl stc imul inc dec nop cmp mov push (bad) iret sbb cmp call cmpsl xor push mov dec jl xor xchg push stc dec out in stos mov push add or movl frstor jecxz add cmp xor bound int3 jo inc movb (bad) pop movsl cmp mov lcall es push jnp scas arpl push xchg push das jmp popf xchg (bad) mov clc bswap (bad) xor sti add test loope out out xchg andl or jge test inc jb,pn pop aas inc ljmp (bad) ja sbb push mov push sub xor jne gs call addl rcl clc out sub adc cli jmp cs stc and mov mov gs jbe sub xchg loop call jecxz or lret lahf xchg clc fiadd push xchg imul mov popf inc pop inc add scas std test mov flds mov jle xchg inc cmc (bad) push popf aaa es movsb (bad) jmp pop mov xchg or and fidivrl lret int jmp xchg arpl xor cltd in cld lea jns xchg dec mov mov das and in sarb js rorb fnstcw sub mov mov pop inc aad and aaa jmp cmpsb push adc sbb (bad) pop lock (bad) test mov sbb aas pop sahf loopne mov sarb fcmovne jl push (bad) aad ljmp xor and sub xchg repz (bad) push jne outsb lret xchg adc aad mov adc xchg sbb and push pop cmp out outsl nop cmc stos fwait dec fcomps jae ss jae mov pop jae push out mov lret mov das xchg push icebp sub es push push pop jp jns and jmp test xor inc and insb dec xchg mov fs in ds in mov clc or sbb pop notb and fisttp pushf call xchg mov insl das or icebp sub mov mov movsb push lock and cmpsl repz lcall dec add push fsubr movsl inc dec stc sbb aas movsb loop pusha out in loopne push int cmp push sbb js ja cmp mov imul test jle idivb sbb sbb xchg xchg mov scas fwait mov jp inc cmovbe mov les cmovnp sbb mov iret and std dec repz stc or outsl add (bad) push add decl loope jae jp lods int jbe adc fistpll insl fnstcw andl push xor daa es lret mov int3 enter pushf mov sbb test xchg adcl sbb mov fldl2t pop loop sub gs stos mov pop sbb popa sbb jl lds jbe mov cltd mov sarb pop (bad) fdivs test sarl imul (bad) cmc (bad) jecxz das imul sbb das adc add add add lret scas pop jnp jne lahf or fdivr jns and fnop inc jnp push sub ret sti xchg inc lds mov jg push in (bad) pop and ds mov sub fucomip cmp pop dec imul jnp inc cli pop fnstsw and cmp ffree test stos mov roll push jo jbe cmc in pushf aad in sbb sub icebp ret adc fnsave ljmp loopne jg,pn lds ret xchg out sahf push mov cli repz imul outsb dec mov push loopne sub adc xor fdivl add inc add (bad) incb imul xor dec dec pop dec add mov int int3 push cmpsb jo in inc lds lock mov push lds das into icebp mov cmp pop sbb xchg pushf pop fildll adc and pop out pop adc push or in (bad) sbb aas ret movsb (bad) mov test cmp or sub add daa lods sti sub jno ret icebp in xor mov push mov sub iret push aad pusha inc adc add aaa push fmull aaa mov adc add jmp mov push (bad) mov stos addr16 push addl (bad) mov cmpsb push lods sub pusha pop clc jnp aad fs xchg add pusha andl xchg aam or push lahf aas pusha mov stos inc lods fisub pop xchg xorb add in and inc in aad inc shlb sti inc push int3 es lahf aad jecxz dec dec and (bad) das push push pop stos push test mov xlat gs ret sbb fs into nop xor lods decl inc aaa loopne cs mov negl pop int xor rcrl movsl sub test shrl mov idivb xchg cmpsl (bad) int add dec adc cld mov (bad) ds pop inc adc push jmp xor add movsb sub in xchg out pop jp enter insl repnz mov xchg dec pop dec repnz or out add ret aaa imul (bad) xor adcb push sti aam je lret stos xlat sub out dec mov sub clts add ljmp stos adc ja fxam loope or js inc xor movsl or dec or das xchg fnstenv jnp in fnstenv incl add pmaxsw std fisubr add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add rcll add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop sbb rolb lret (bad) jb xchg insl (bad) xchg int sub pop mov mov pop sub push (bad) fdivp imul cld add rcll lods pop xor fdivrl stc inc dec mulb mov sbbl pop inc je mov sub lods ja je lods or (bad) jnp cmpsl or push and lods mov xchg and out mov (bad) jae pop or mov cwtl pop pop inc std xor adc inc push push inc inc imul jnp (bad) and (bad) cmp (bad) push mov and jecxz sbb in sub jp mov inc and sbb lcall xor fsub jg jmp pop aas fnop (bad) push inc or imull ret (bad) into inc dec fxch pop lods and jl xor notl push stos andl test jl cmp jmp test xor push jge adc sbb xor adc jne int (bad) aaa sub xchg (bad) std mov push jbe cltd inc add adc shrl push rclb pop inc lcall pop pop sub leave std fiaddl stos divb dec jecxz fs fs lods xor dec or add xchg or or and cmp mov mov xor mov repz mov or outsb outsb sub add iret push popa push xchg lock mov mov cmc movsl push ljmp loope pop bound iret cmpsl std jecxz sbb loope daa jp adc jp push or or pop cmp or call adc inc xor xor decl mov jge and mov jl sbb cs movb shr add sub mov ret sub mov push mov leave mov outsl ja mov je push insb pop cmp xor pop sub and pop pop inc mov fndisi(8087 xchg arpl (bad) lds jb jb jecxz ret inc aaa sub rorl test mov lcall sbb dec mov lcall cmp rcrl cmp mov sbb cmp ljmp pop fnstcw nop jl cld jmp or mov jns mov je rcr push enter fsubl cwtl push pop pop xchg adc sub sub and xchg or pusha jae data16 aam cmp and mov push cltd shl test mov inc lock mov into push movsb lret sbb pop js cmp lahf sti xchg jo adc add push push push sbb push sarl push pop in repz mov dec inc inc pop jno mov out stos jp stos fwait cmpsl fdivrs ss adc xchg push jg hlt std or xchg (bad) je pop (bad) repz outsb inc lods push pop jae push je fwait dec dec push cmpl adc add les push jg aam jo xchg inc addr16 movsl and dec mov not test sbb inc scas ret aaa pop inc test loopne mov imul cmp sahf inc inc mov sub pmovmskb xlat cmp mov out mov popa jge mov mov in jb and test insb outsl mov fistp mov fisubr movsb and xchg in hlt mov and adc inc outsl xchg xor jg das enter push sbb xor jg je outsb cld (bad) or and sub mov pop add mov int3 lock mov stos lds jle sarb push movsl stc dec icebp mov mov in push (bad) scas add inc sbb sub sahf cmc popf loopne fidivr xchg mov add std dec fisubl frstor mov dec ss xor lahf in adc icebp sub enter sbb sbb fist cmp adc repz push push (bad) and lods cwtl mov push sti (bad) adc mov lods pop mov je jb dec sbb lods adc sub ds mov push add mov jnp push je les fsubr pop dec push arpl mov les mov adc dec mov mov mov leave cmp sub addr16 pop loope (bad) fwait (bad) in pop mov dec arpl cmp mov xchg cmp sbb loop mov jp hlt jb in push sbb jmp dec dec cmp int3 or dec mov xchg cmp and (bad) (bad) jne (bad) loopne xchg pop dec pop push pop xchg cmp mov xchg mov cmp test mov dec xor lods popf out mov loopne imul push push push ljmp and in xor pop int xlat or imul loop sbb add fs jg lret sbb ret lea or push loope mov pop out fsubrs (bad) loope jae dec push cli xchg lea je int3 into mov je mov xor push jle cwtl scas cmc lahf mov out adc and mov lock sti (bad) pop dec mov in mov ror cmp ljmp jl pop sub jnp mov test inc scas cmp out outsb pushf add jno pushf sbb out lock sbb aas clc in out dec sbb inc sbb pop adc mov lret mov push lods pop insl sbb in push push mov pop call iret adc push movsl mov sbb jno fucomip out imul lret int3 bound loopne mov ficoml das or mov sti pop inc addr16 and cmpsl xchg cmpb cmc jne cmp xor test add mov inc insb add repnz and mov sub mov and cmpsb enter loop dec add movsl cltd mov lea stc mov insb sub int3 movsb adc mov mov enter mov outsb mov pop mov shll icebp adcl mov shll rorl xor dec cmp imul sbb mov dec lock xor push dec inc pop inc repz out inc clc aam repnz jecxz cli cld out add push and pop int3 insb fcom fistl fdivr ds lds rorl mov lret mov pop add cs test mov fsts cli mov mov testl and out mov mov rorb lahf pop fisttp adc mov bound cmp push mov or jne inc cmp in mov pop in dec outsb rorb into mov push xor std loopne fwait clc push call and sbb ret repnz lds sbb hlt jp fisub lea mov out mov mov dec (bad) dec mov jns test fsubrs xchg leave ret or inc pop xor outsb push ds shrl and lret data16 punpckhbw mov cmp fwait lea mov mov je jle,pt stos clc pop into inc stos cmp in pop pop mov jg or fsub mov xchg insl add imul push int mov imul out mov xor leave dec add sahf (bad) xchg cli jbe add (bad) mov ret test mov xor int (bad) sbb or outsl jns lret and scas gs xor push unpckhps pop mov or fidivr lcall fsubs les mov pop loop mov inc or out clc cmp aad (bad) jno mov mov (bad) insb mov mov dec js mov imul pop mov sbb or mov insl std jae daa ja pop dec mov dec adc jae cltd push xlat popa cmc pop xor sub aam mov je xchg xchg cwtd cmc clc xchg push aam in imulb push aam pop jl lret movsb imulb mov sbb sub insb sub (bad) dec or fisubr mov xor xchg clc and add es add push or sub xchg in loope add ror int aas lahf mov in iret xchg sti (bad) lss faddl fimull mov in and in sbb lea dec repz or test les ret and arpl pop (bad) (bad) lock inc sub and and sub cmpsl dec mov out xor mov cs and fdivs jno out mov mov mov push xchg pop push cmp mov out or fmull rcrb cmpsl pop inc push dec int loop pop stos lcall mov decb sahf adc lods mov or lods iret mov xchg cmp fimul hlt xor sbb cmpsb jns les jbe mov fisubl jb out in ljmp xchg lock fildll mov or orl jge stos sub repnz push sbb fcoml and mov std pop mov scas ljmp or repz push (bad) in xchg inc mov leave les sar pop adc fisubl in iretw popf jp dec lret out imul sbb je (bad) jbe push rcrb cmp iret scas pop ljmp xor rcrb mov inc (bad) (bad) mov cmp inc mov sti sub daa pop sti lahf push iret add xor cmp sbb xchg jp loope test ret fadds dec xchg pop out or cmp push inc and jns (bad) test nop loop push adcl idivl ds mov shlb sahf fs scas mov stc cmpsb and inc mov fidivl xor inc dec cmc jae pcmpeqb pop adcl loopne push mov jmp cmp xchg mov add cld (bad) jbe test adc repz stc lret jge xchg (bad) mov sub ds mov cmpb push fmuls xor cmp ja notw int divl sbb sub sub dec lahf stos push cmp mov cmp out rcl xchg (bad) movsl jp xchg vpackssdw fsubrs (bad) das jnp mov data16 jmp stos xchg mov imull sbb add mov xor xlat lcall pop cmpl lds imul cmp push jecxz xchg jb dec jne int inc into sbb icebp in sahf out mov stc jno mov mov adc and dec dec test pop out icebp mov sti lret sbb or in xor cmp sbb fwait lea int3 pusha jmp divl mov clc rorb insl add ror jae mov jae mov fwait stc mov cvtps2pd fildl jge ds rol pop cmp bound push roll or mov xor (bad) rcrl push xchg sbb sub push inc iret pop aas and lret enter inc mov xor shrb das mov loopne sub adc es push aam shrl fld add jle and mov rolb cli jl jb mov rolb pop mov adc push std and out jo mov loopne fisttpl and les xor cmp cs or xor cmpsb into enter mov mov bound lea xor or and push mov xchg (bad) push jne inc loope dec mov in add inc or addl push lods add xor ss add rdmsr pop popa in sub fstp std je push cmp insb stos sub and mov je push sar fwait sbb js adc and mov push das adc lcall insb mov dec int jl push xor xchg fmull pop xchg cmp and push into popa je dec lret mov and test dec lods pop mov pop stos cltd cld or subl lock inc jo rcll les sub fcompl adc orb dec jl mov mov (bad) or ja pop pop or sub xchg inc cmpsb cwtl mov push lods lock xor mov inc mov adc in cli and mov into sub push jbe push repnz jo mov pop daa insb outsb push or shlb (bad) and adc out xor or cltd aaa cmp jns pop xor add popa and or mov stos pop push pop adc push dec jb add sub push shll xchg lea inc out movsl mov sar int pop ja xchg push and outsl test insl pop xlat or insl push xor popf mov mov fwait pop into mov mov pop xchg xor pop (bad) lahf mov jno dec arpl sub stos pop or pop adc int3 add outsl sbb nop push xor sub push inc or (bad) std (bad) out iret push jmp fcompl inc cmpsl xchg xor inc test cmp sub and pop fisubrl fwait xor test jbe add and add inc fsubs adc xchg add adc (bad) jae aaa (bad) mov mov mov sub mov cmp push popa stc pop stos xor imul cmp pop les fsub bound sub jmp xchg cmp aam es in fsubs dec rcpps push loop jb call fstl sub sub lock bound adc mov orl mov std les mov sbb add xchg jno mov stos adc lret and insl sbb push sub cli (bad) adc cs jbe mov adc sub popa mov cmp or addb pushf call inc out fidivr mov jnp out fnstsw add incb jbe loop jbe jne add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ficoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop adc mov (bad) xor dec ja xor mov or add and sub sbb (bad) jb out cld (bad) ret std sub into add lahf cld js dec mov andl out arpl out shll mov jecxz leave in sbb data16 daa jmp add notl xor popf (bad) sbb scas push sbb pop cmc ds xchg xor jl mov ficompl add pop cmp sub dec inc add mov cmp dec xchg imul pop sub imul pushf inc push std test scas mov (bad) dec fadd test jl ss ja mov mov insb fisubrl push test add outsb mov sbb xchg lret xor xlat popa fdivrl sbb ret aas sahf dec dec movsb stc jecxz sub cli fadds adc pushf jp decl jno sti sbb dec or inc jno sub jae inc inc push pop mov dec iret ror cs push aaa cld insb repz jmp xchg hlt mov sti ljmp out lods fcomip (bad) cmc push add out (bad) push scas inc arpl inc push fst popa xchg idivb mov push setge push cwtl mov in test ss cltd int pushf adc and mov mov xor sub and fistpl sbb mov and fs mov mov sub xlat or cli or or icebp xor mov jle (bad) cli add jle mov ds adc cmp mov lds mov xchg fsub es jle mov in fs into sbb dec insb pop stos mov dec sarl jbe insb jo insb push cld and dec mov in xor jnp (bad) pop loop mov and cmp stc bound loopne jp (bad) mov mov or push cmp or repnz sub stos inc outsb cli mov je dec sbb xchg xor cmpsb xchg lret int (bad) fildll cld mov cmc leave mov in cwtl adc mov iret (bad) mov imull iret fwait xchg sbb je jae test (bad) ds int adc pop mov jbe or xchg sbb or jmp sbb nop addr16 fcmovnb push or icebp mov (bad) gs adc cmpsb dec mov sub mov mov aas sub ss sub jecxz xor xchg xchg dec xchg je mov sbb (bad) xor and mov repz or pop add and inc push dec gs (bad) sub call and mov (bad) dec (bad) mov sbb lcall into scas fldcw loopne mov in cld iret inc popf subl mov push jecxz xchg add adc (bad) fcomps mov lcall movsl jl jne lret movsb xchg xchg pop dec (bad) and mov pop mov mov adc das xor mov jp mov add jo ljmp and add divb inc stc mov shr insb cmp adc scas sbb pop cmpsl ja (bad) stos inc les rol and popf in dec mov mov mov std insl push mov push ljmp stc icebp and aad (bad) mov (bad) sbb jecxz mov add lds pop mov dec mov and cltd je or dec in lods lods mov (bad) mov pop loope or scas push mov adc inc mov add ffreep push or leave xchg fistp sub movsl das add (bad) negl fwait ja sbb clc jl and fwait or das jbe mov nop notl sbb icebp and ret jmp cld mov xor sub lret arpl dec insl sarb into or fist in push bound fisubrl arpl lds fsts pop push adc xchg mov jg popa movaps and out lock dec icebp stc ret aaa mov in pop or and push mov lods sti inc leave dec mov iret out jno out pop sub in stos fidivl mov imul rcl dec sti orl mov jg lods mov jno sar pusha nop (bad) aad pop cmp out sub add fldcw pop adcl or or sub iret mov push mov jmp sbb iret or sub test incb add adc mov pop loop push jae loopne adc cmp sti inc and (bad) ljmp (bad) repz pusha pop mov mov jmp sub dec sarl jp and icebp xor leave xor and dec xor aas loope jp movsl jle jbe lods push mov cld cmc pop movsb (bad) dec icebp sbb iret fidivrl rcll leave mov movsbl add cli pop push inc pop dec cmpsl sarl fmull movsb (bad) leave in pushf popf dec cltd int mov insl fidivl add xor xchg movsl add sarb daa adc mov fistpl jo int popa xor inc std loopne jae xchg dec or pop mov inc push mov (bad) insb push into pop rolb cwtl push mov mov in sub cmpsl push cmp rorl mov sub stc shrl jg clc es or mov and std dec jg mov inc stos test (bad) cs cs xchg mov inc xlat push xchg mov jbe dec loope lds jo xor xor inc cmp push and icebp sar lret pop mov push xor in ret nop loope stos xor mov jo push and aad mov out std mov push cmp (bad) inc mov inc repz dec inc inc shlb jecxz or jbe and adc lret mov sub popa popl xchg inc kunpckbw outsb test aaa mov les (bad) cmpsb cs imul jbe (bad) out or jmp mov xchg call cwtl std pusha sbb (bad) lahf jnp pusha ds icebp jecxz dec int (bad) lret push cltd dec sbb cmpsb dec sub adc icebp mov mov mov or cs repz fstl jmp (bad) ficoml cltd fs inc mov mov cltd das add mov leave push mov insb lods cmp mov add mov xor pop jne sbb divb pusha fdivr scas dec push ret push in jb stc pop jno push dec sbb mov jne cli ja,pn push (bad) call and inc test lcall inc sbb xor mov in in loop cmp mov mov dec loope movsb mov je fucomi ljmp xchg push and mov pusha dec mov in xchg mov movsb pop (bad) xor push mov sbb push mov js loop push mov out fcom fidivrl mov sti sti mov mov adcl mov sub pop lret jmp sbb push stos das mov aas dec mov lds int3 into cmpsl outsb ljmp mov popa xor mov mov cltd add xchg pop and mov lods leave add cs push xor or ret cmp xor xchg xchg jecxz sub and divb cld adc xor xor jnp xchg jns mov bound mov xor xor ss inc popa xchg push jb sub hlt cmp dec shrd xchg xor lock fidiv mov add inc mov mov rol jns loop push inc cmp pop cmp or dec repz mov jecxz mov (bad) (bad) mov (bad) hlt rcr dec arpl out das add dec lea test xor js pop jle xchg std cmpsb aaa pop inc daa int3 dec adc sub fildll ja int mov dec test jbe aaa or mov mov ja test xor loopne mov pop test aam pushf pusha sub outsb cwtl or vprotd or cltd outsl jge or (bad) xor adc ficompl shrb jbe cltd pop and sbb jo addr16 repz mov jae popa mov jae out movsl repz popf mov incb add push and iret out in add jns jle mov in cmp mov mov sbb dec mov inc sbb pusha xchg sub or push in jae sbb mov or cmc mov and fldenv xor cltd push sbb cmp mov xchg push aas pop mov lock roll push xchg aad aas aas fs or or sarb pop loope js pop dec mov xor mov js popf outsb test jecxz add leave movb stos lret out mov jmp dec dec stc movsb jae (bad) rcrb mov orb push add in adc mov lods pop cmc fisubl push xchg test mov jnp in jp adc roll jno lret pop pop adc jae xchg mov dec cmp popa fdivrl fcmovnb fdivrs mov adc clc mov insl push or or push fwait dec imul pop pop mov jns mov imul dec xor xor out xlat sarl int3 cld popa test rcrb mov jge jbe sbb fsub fnstsw mul mov adc imul rolb lock aam push sti jo cmc adc or frstor adc mov mov rclb rcll pop stc in push cli xchg test inc loopne xchg push and stc mov xchg outsb sub aaa mov mov sub adc test push mov and dec call pop outsb jbe mov or mov jg insl jge jae in push xchg lret (bad) scas dec or jns xchg dec test repz gs xchg jle pop (bad) icebp mov dec ror sbb orl mov aam test sarb dec adc lret std sbb fisttpl test in jb imul jne inc push (bad) dec adc cmp and push mov dec outsb pop les clc mov inc add push sbb ret mov ds add xor es inc lea mov daa push scas sbb jg lcall push mov dec mov fsub (bad) into mov sbb inc nop sbb dec mov sbb pop pop fsubrl aaa sub cltd out fcoms sbb (bad) aas add inc or push inc jns lds and cmp stos arpl jo nop inc mov ret sbb out out cmc sarb aam subl loope push ret outsb out mov pop push or dec dec out dec in cmpl add rcll jnp aad fdivr cmc inc jp inc sbb mov push jl loop clc dec jge addr16 out imul getsec dec adc xor sti mov dec sub cmp loop push je and and in ss call pop jmp cld cwtl je andl xchg or jmp sbb fwait rcrl (bad) sub xchg or cmp ffreep add push xchg cwtl xor add jle mov lea jnp aad mov or cmp frstor add inc adc xor cmp fcoms popa xlat jl sbb cwtl mov lock leave pop fdivl dec mov dec mov jbe notl test and mov cmp push push xchg mov ja (bad) call add push gs or into test ds inc ljmp push adc fdivr or pop jbe (bad) (bad) jno sub repz mov jge xor lea mov ljmp push repnz ss inc xchg push pushf repnz cmp mov mov sub sub xchg inc aaa sub test sbb lcall clc add mov iret mov outsb out repz cli es mov cmpsl jge and fnstenv and cli mov movsl xchg mov js and mov popf xchg xchg jno mov lcall inc push push dec mov jl leave add jp rolb enter jno cmp jbe jns add and bound pop out rclb sbb repnz les lret adc sahf ficom mov repz loopne js adc lret lret add mov jo mov (bad) in stos ret sbb xchg mov xchg test jo movsb std dec cmp clc addr16 fwait arpl in lock ljmp addr16 sub push ss sbb pop mov pop xor icebp inc outsl pop mov mov jb,pn test jnp xchg sub lea je loope fwait dec in jmp adc pusha jb std pop test push sub call lret std out ljmp or or xchg pop jmp lods xor adc cltd mov xor (bad) (bad) je jge hlt mov jns aad push jmp fstpt mov sbb arpl sbb pop lods xor fidivrl inc icebp pop pushf sub cli je mov mov push pushf sub scas push and mov pop mov stos sbb out imul dec adc clc aas cmp out dec cltd out sub xlat (bad) xor (bad) push das ja stos in jno sbb push loop xchg pop jbe fildll mulb ret negb cmp lret in jmp frstor push mov sbb and shrb adc fsubl pop xchg fdivrp xchg sub sub jae fnstenv clc jl xchg test jmp dec icebp push push dec xchg loope xor pop pop mov incb mov mov jecxz mov stos xchg outsl (bad) xor jno in test inc xchg mov frstor fisubr (bad) lcall stc xchg pop sub xchg mov adc stos xchg (bad) mov (bad) daa dec push scas or cmp in fnstenv jnp in fnstenv fild add comiss add into mov add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop sbb xchg jns fstpt jno (bad) stos popf test in fnstcw fxch outsb jns pop pop mov jmp or idiv sbb cmpsl mov loope lock mov repnz rclb stos sub xorps clc js mov push or pop mov inc jno jbe aas aam push scas les mov popl xlat ljmp dec mulb pop mov inc mov nop add js idiv pop aam cpuid pop add sub sahf ret data16 insl add pushf jle dec jbe jo push push (bad) (bad) leave push lock shll comiss mov push insl mov push push cmp out xor ficoml and xchg loope mov mov stos and or cmp gs outsl out cmp (bad) dec jo push xchg data16 clc in std mov or fwait cltd rorb inc dec not int3 push or rolb enter xor mov pop ja push mov cltd jge push jno jnp shrl outsl pop cmpsb rorl push sbb loope mov inc xchg out fidivl fistp xchg int adc loop mov ret movsb push inc divl mov movlps out sub xchg sbb rcr jge fcoml mov xor add hlt dec fistpll and sub xchg cmpsb inc rcrl add mov xor add mov pop push cmp mov stc repz add push xor dec push lret mov mov nop lods iret mov movsl adc out jecxz rcll add cmpsl adc icebp lds outsb and pop cwtl sub push cmp out in sarb mov rolb pop sub jecxz hlt mov lahf js sbb or addr16 xchg fisubl push inc out sar sbb xlat outsl jg pop loope cli ljmp mov cvtdq2ps add lret and push and adc out clc or in call mov jl mov and mov inc sahf adc inc xor pop adc rorl or das neg mov aas ret xlat add in push jbe mov xchg pop mov in daa ficomp and cli mov sbb inc push loope outsl xor ds jmp sbb inc inc enter (bad) xchg insb jg (bad) shrl adc mov cld popa sub adc das mov add xchg (bad) loop sbb fimull test in das out in mov frstor mov push mov es lret inc lahf or pushf stos adc dec xchg outsb add jno sub inc mov movsl jle sub lea dec inc xchg xor push xor adc xor (bad) mov inc popa pop or dec js pop mov out push icebp nop lret mov int ret jnp adc or mov add xchg lret lock loop jge add xor repnz sub mov movsb and mov xchg xor lahf pop out jmp sub jne cmp outsb gs mov pop push add dec lret mov scas inc aas inc fdivl mov in test cmp cmp xchg add jmp fisubrl ljmp xchg inc loope mov inc xchg or xchg dec push insb lock jmp test jmp cli xlat fisubr icebp aas (bad) pop shlb (bad) mov enter jl leave sahf enter xorl pop sbb loopne push mov stos inc ss lods xchg outsb clc imull jmp jns fs add xchg lods sub loopne mov outsb dec mov mov or cmp sub rclb loope and push aas mov cli push test dec aas cmp cwtl or dec xchg into mov scas mov int3 insl cld ja mov ljmp movsl sub cltd test leave int mov dec mov add mov insb mov dec nop cmp (bad) movsl out inc mov mov mov mov mov xlat test xchg and and adc inc repz mov mov icebp inc sbb xchg and bound rcrb lea push sbb pop repz xor dec pop mov xchg out mov adc xchg in out in fcmovne jle mov dec iret (bad) mov ficompl xchg addr16 fs push addr16 mov push mov js pop cmp jge xchg mov pop xor xchg pop pop jno (bad) and pop dec pusha les lahf jecxz sub test add jns cli adc mov addr16 push rcrb stos adc or imul add outsl in xor pop add (bad) iret add and sub add scas fdivr jae adc and cmpsb leave fisubr cmp dec mov rcrb push cmp mov xchg cmp xor aam add and xor lea mov mov jne adc push cmpsb mov loope pop adc enter (bad) movsl test mov inc xchg aam and (bad) xor popa popa nop out add test outsl in (bad) mov sbb mov addr16 xchg mov mov or lret dec jg mov jbe fldcw arpl mov mov mov sti dec xchg adc ja dec repnz mov xor mov stos add idivl mov sub cmc jecxz push mov xor cmpsb jbe pop mov or fistp xor popf mov pop (bad) or fisttp push lret pusha sub adc lock jecxz sbb lahf aad dec sbb data16 add stc add pushf (bad) (bad) pusha aaa ja sub pop outsb daa imul xlat out xlat lods cmp pop call pop push jae xor movsl pop std (bad) dec sub fsubl in fwait repz movsl sahf xchg in call loop mov mov mov mov mov mov lods dec cltd or repz xchg sub adc or or sbb (bad) lret int3 enter sbb imul push push (bad) imul scas hlt mov gs hlt dec add movsl fs (bad) mov (bad) aaa adc mov or fidiv mov mov mov or out adc jnp fdivrs cmc stc jecxz icebp dec ljmp push (bad) jecxz adc movl mov and inc subl mov in fisub mov pop push jnp sub lahf inc xchg xchg das sub fs fildl int fcompl xchg cwtl cmpsb push int mov fdivrl das sub sub push out loopne,pn pop imul jb or loopne cmp (bad) xor test pop cmp es lahf add sbb mov cmp push in test movsb mov cmp dec pop jbe (bad) into subl in int3 fcomps aad push mov add test stos (bad) es (bad) jge or je leave push ffreep cmovg test sub imulb das loop mov sub aad int3 push jge cmovno data16 lods mov lret lahf sub pop sub jae dec les mov dec stc mov jns pop xor movsl mov (bad) cld pop movsl icebp push xchg out ds add sub adc roll fdivs pop ret push xor fisttpll insl out mov adc lahf into imul mov push (bad) adc daa clc arpl decb cmp sub pop and add fistp outsb or sahf fs dec inc aas in pop in pop mov mov ds out xchg or mov enter (bad) in repnz mov jle cmpsb js xlat inc cwtl mov jecxz mov stos notl in fwait into mov or std xor inc jle push dec jns xchg sub ja imul push ss lret or jle adc in lods add add inc in dec or cwtl cmp sub les jno lock cmp sti leave mov lds mov and insl cmp xchg add sub lcall xor pop addr16 outsl push pop push scas mov mov cmp cmc xchg xor adc xchg lods cmp in aam push jecxz movsb (bad) mov mov (bad) jge dec sub (bad) cld push cli dec lods jmp stos sub ds ret adc (bad) js cmp lds inc sbb iret xchg sbb jb (bad) sub incb sbb sub sub adc insb fwait xor xchg fdivrp arpl pop mov decb flds xchg sub jo add cld jns mov into jno sub dec adc cmp mov mov mov (bad) xor fwait mov ret jns sub (bad) das cmp les inc imul nop sti cmpsb daa xchg out jge (bad) dec jl ljmp xchg (bad) dec xchg cmp sub xchg mul dec cmpb adcl (bad) mov push daa js mov pop inc jnp pop jecxz jo xor imul repnz fsubr sub mov jne lea mov cltd fcmovnb push or (bad) mov inc inc mov pop dec scas movsl xlat sbb push in daa and mov ds iret inc and sub dec sbb jmp imul test push mov insl inc test popa in cmc cli je push popa shrb outsl in push enter imul aad sti push decb imull lahf scas sahf je sahf xchg iret arpl sbb (bad) mov jp mov pop sbb cmpsb sbb fwait outsb jbe fildll sarb das add push mov lcall push (bad) ja xchg outsl push sub leave pop idivl mov push cmp xorb les (bad) or adc push stc fnsave cmp sbb push imul mov pop push iret lock xchg pop loopne push lcall xor stos mov popf pop mov jne scas clc cmp cmp mov rcll cmp lea mov or out movsb add adc xlat xor dec loopne mov xor inc mov (bad) adc incl sbb sub push mov movl sub add outsb inc mov aam mov add or hlt mov sub sub imul cs or inc push je lock xor outsl mov jo inc dec fcomip shl jp xchg and add mov ljmp test mov (bad) cmp movsb sub add mov cltd pop out (bad) out jmp dec jne mov mov jns jo test pop jnp outsl insb and test pop mov jge mov ret inc sarl pop lds push lods sbb fnstcw lods shrl addl push and ret mov push cmpl in sahf push push cs mov cli cmc fs popa jne mov xchg pop add xchg sub push cli push mov mov rclb cmc mov sahf cltd out daa enter cld int fldcw adc xchg les je adc aad jl into or sub mov rorl push mov sbb sub cmpsb out jne sbb pop in add (bad) mov nop xchg xor cmp mov mov scas sub les push xchg push xchg rcrl ret sub xor add (bad) aas and mov scas dec push mov rol ss test ret inc sbb ja out mov movsl lret sub imul leave jmp xchg leave jnp lds sbb fldl2t ss add (bad) push and jno mov jecxz push mov div inc cmp mov adc sbb roll ds in or push jo divl or paddsb push daa pop dec repz iret or negb lock loopne cltd jno push scas sub dec xchg (bad) jo inc inc inc cmpsb es scas arpl fwait dec add (bad) mov sub cmc xor out pop dec in xor fisttp fs sub ret sbb roll sbb icebp or push mov add sbb push xchg sbb and pop mov mov cltd mov enter outsl inc loope xor mov test adc pop aam or mov sub in mov xor notb imulb and imul in dec inc adc lods push inc cmp sbb icebp (bad) out (bad) and jbe addr16 inc call mov testl xor enter (bad) mul pushf mov mov fwait daa rol (bad) ja cmp sbb xchg inc mov lcall sub jns aam lods mov loopne add aam cli inc lea bound iret cmpsl lock fidivl out xor test leave sub sub inc loop es in es push repnz sti xor sbb hlt in push stos add cmp std mov push popf sub insb popa and mov inc xor jp cmp dec dec cmp xor arpl or mov or fldcw out arpl add sti jmp sbb mov fwait pop pop fwait cs inc fcmovu aaa dec mov into pushf into xchg leave sti dec fs int lds js rorl ss fldln2 out addr16 popa (bad) and lret add outsb jge jo sub ss adc ret outsl cltd js (bad) lea mov mov ja out pop loope jnp xchg sbb cmp sbb xchg mov rcll rcll adc aad or pop pop jb or dec inc out jbe (bad) movsb les pop and or fldt (bad) xor push out xchg out in insb mov add in repz movsb mov fsubs insb fbld cwtl js sub jns xchg out outsl sub push push sti jnp repz or int lret jo std mov cmpsb insb push int3 ds lret and sub xor adc pop int mov mov mov imul lods insl add mov iret pop mov mov sahf rcrl ret push loopne add push (bad) out clc std and lods mov imul cli repz push xchg and xchg sahf insl call ja fidivr mov jnp out fnstsw incl mov pushf sub add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fstl add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop adc outsb aam sub sub (bad) je dec lea sub or inc push cmp sbb mov mov add and inc dec sbb mov pop icebp cmp pop lock je mov pop push jg or inc pop lret test pusha xchg dec into adc push (bad) (bad) data16 jbe int3 (bad) push inc pushf jmp jnp dec mov pop inc add lock mov scas mov mov fstpl adc pop aaa sub rorl leave in mov adcl mov fs dec sub dec (bad) lock fisub xchg popf add movsl popa lret mov loope hlt scas mov lret adc dec cld les adc or loopne (bad) push pop push ret test jl xchg (bad) lret repz enter add add lahf (bad) mov cmp pop gs cld mov test mov cmp pop or inc (bad) xchg mov rcll rcl xchg sahf mov and xchg mov sub fsubl mov loop mov mov xor inc scas jg lea push jle (bad) inc lock inc mov cmp ja mov xchg hlt inc pop ja or scas outsl lods mov ret xor pop push push sub cmc cmp cwtl negb jne loopne or sahf jge jno addr16 test mov xor dec add pop mov inc xchg xor add or sti (bad) sub sub cld add add xchg sub sub nop loop jmp mov fs roll addr16 leave xchg mov push (bad) insb inc imul cmp sbb mov lods xchg movsl sub mov (bad) xor fist ljmp das ljmp pop push or jg jge sub bound adc ja iret (bad) es mov inc sbb clc aas adc rol mov ss push jmp (bad) sbb int3 dec cmp cld idiv inc leave dec lret cmp lret pop or fistpll ficomp insl (bad) xchg cmpsl sbb lret jns imul scas faddl (bad) mov sub std aam dec push pop outsb jmp cs es push (bad) js js inc lods in bound or jnp (bad) repz out sti lods imul xor popf rorl pushf push dec pop test mov add loope enter clc call pop test rorl cwtl sarb pop sarl add out das pop shr repnz ficoml cmp aas (bad) inc xchg sbb cmpsb insl sarb in xor add nop je mov jle icebp xor add out inc sbb xor mov je sbb lods mov push outsl dec (bad) mov mov mov sub cmpsb or mov mov lds (bad) adc jno mov out and fwait bsf fadds bound sub std add jns leave sub call outsb hlt mov cwtl and dec dec hlt jae pop jg xor xchg lods mov fbld dec xor ja arpl lret cmc enter lock leave xchg pop andl mov add cmp subl imul scas addr16 dec push xor movsb sub cmp gs stc inc push inc dec lcall push xor (bad) xchg sbb loop into lret sub xchg adc mov loopne xorl out mov insb xchg mov or negb push fildl popf fadds shrl in lcall (bad) fld mov sub adc stos mov xor adc mov inc add cmc fst pop nop lret xor fs je stos daa aam jle je sbb pop push push mov xchg dec adc je in dec or rolb fcompl push into (bad) mov xchg popf lcall jno ret xor popa lret adc mov push xchg fildl repz insl cmp aam adc fildl clc and inc imul addr16 push jg sbb xchg xor out lret call pop mov or mov xlat mov and jle aam xor lret push std sbb mov xchg jmp insb mov jno and (bad) ja or dec jnp jmp stc sbb lds jb dec sti cmp xchg pop iret sarb jle dec movsb xor bound jl loop jl loope xchg pop js fwait pop xchg xor adc pop sub mov sub pop test mov gs fdivrl sub lret nop sub mov jo (bad) pop adc dec jo lea clc addl fs in fnstenv imul (bad) das sub call inc jle sub cmp das inc sub jmp das call lock push xor and sub xchg and in fnstsw cmp jecxz cmp adc or sbb mov loop (bad) mov (bad) jg sahf xchg fprem mov ds xchg addr16 addr16 pop and scas idivb xchg mov lret test std (bad) fiadd fld jbe (bad) xor pop xchg mov das sbb pop pushf push inc pop lahf and pop mov adc mov cmc mov popa xor iret add loope dec push ss ja andl push mov pushf push lret out loopne enter xlat mov jg xor jp dec int push cmp int3 aas add xlat jl popf aam sub (bad) jge cld pop (bad) ss fs jnp add popf sbb pop jge stos out pop icebp pop push aaa outsl pusha mov cs inc bound mov dec sbb lods mov icebp push cmpsl bound adc imul push adcl cmp in popf fnsetpm(287 cmpsl pop insl imul jp push je xor or pop mov add and ret cmpl sbb (bad) out add push lcall jg loope jae scas imul pop insb mov (bad) mov jbe rcrb call pop fwait inc mov repz lea mov ret inc inc dec inc mov dec sahf mov mov setae xchg (bad) dec cld adc in loop stc jns into dec pop mov sarl inc arpl lods movsl or mov push mov test mov inc imul fbld fsubs cmpsl jbe xor sub sahf stos int3 nop push add neg loope cmpsl sbb gs xor pop mov movsl sbb loope add push adc mov daa add push sbb sbb jge jne iret scas out dec ret ds clc push add or and movsl ror cmp fidivl (bad) outsb push cmp subb sbb lahf enter push mov enter lds pop fwait aas hlt fsubrs outsb call mov pushf lods adc stos jne sub xor adc mov aaa iret pop fucom cmpsl inc scas sti jbe inc movsb fcmovnbe sub xchg sbb lea fs ficom ret test inc adc nop push andb mov jae fdivrs pop (bad) adc outsl rcr (bad) jecxz mov fimull jmp test dec inc or (bad) add stos push jb rcrb clc stos push pusha push aaa adc in (bad) mov xchg xchg xchg lret mov cli ss inc mov icebp repz push mov gs nop inc mov cli pusha xchg dec and xchg fsubl imul pop rorl gs xchg dec inc mov dec (bad) ss (bad) xor dec xchg xorl jmp js ss aas add insl mov cmp lds sbb jl xlat adc jecxz pop dec lcall les and (bad) fbld mov adc push pop cmp mov loopne or std xor repz push pop and rclb xor fisttpl das push scas xchg inc mov imul dec cmp fnstcw outsl xor addl mov mov into xor add inc scas les sbb shlb repz jp dec hlt jg jnp dec inc xor cltd inc lahf pop jns or jno inc sub sub fsubrs scas push cmp aam lahf and and test sbb or (bad) das push dec xchg mov add decb das sbb xchg or testb iret mov pop jns pop xor push sub sub sbb or mov mov adc push std es leave cmp repz mov sub dec inc outsb adc mov sahf sbb xor aam cmc cs push pop icebp ja xlat push iret xchg add icebp ljmp imul cmp test or mov lret jns add push inc cmp pop notl push mov sub pusha inc je test std imul out jge pop arpl cmp fisubrl mov sar into scas push clc mov out xchg (bad) insl sub or test and test sub jne pop jp sbb outsb add push mov daa outsl mov mov shrb ja shl divb inc out mov push movsb cld adc mov pop stos jo push add jno sbb cmc push xchg mov iret sbb add jne mov je jnp pop nop mov bound add cmc cmp add sbb fildl jb jne mov int3 push out pusha xchg outsl pop fsts or mov mov push gs pop ja xchg (bad) ja xor pusha ds xchg mov fcmovnb xchg mov xchg jge add sbb mov xorl cmpsl sub leave jl (bad) ret cli mov daa mov xor out clc leave xchg mov xchg jnp pop sub aas xchg mov faddl pop outsl sbb cmp sbb sub addr16 ljmp inc ret pop sub jo andl add add fs jle (bad) sti mov mov lahf mov daa push data16 pop jge add fnstenv pop sub jle in xchg adc icebp lea xchg mov arpl jecxz out push sub jp pop out xchg cmp dec mov addb pushf push fdivrl rcrl movsb in cs lds sub push push arpl dec and sub in jns dec into shll jmp xor and pop mov add lea and das rcll and inc pusha sub clc pusha mov lds inc and scas mov jo adc lds sbb push clc addr16 aas aad insb gs fldl2t pop lock sub aad aam repnz push js push or jmp (bad) iret push sbb or (bad) cmc mov fsubs hlt fimul cmc sbb aas loope,pn into mov push add xchg or pop mov data16 decl dec dec push mov inc sbb hlt stos mov clc mov jns mov xchg mov mov xor jne dec mov add push fidivrl das es orb xchg mov jo scas fiaddl mov outsb ret push mov sbb xorb out lahf sbb jne subb mov dec xchg mov shr jo mov mov cvtpi2ps aad jne or scas push je or (bad) mov (bad) jmp test pushf arpl lods inc sbb push (bad) repz sub cmp adc pop ja pushf xor add aad es lret ret jmp fidivrl addl ds loop mov xor nop sub into cmp aam (bad) jmp mov lds or cld imul push nop pop inc mov rcll mov mov mov pusha (bad) jge adc sarl or inc inc std and or cmpsb add les data16 movsb ret pop pop inc xlat mov and sbb fist jne jg cwtl cmp subl lods pop mov mov cwtl loopne xchg aas enter add rolb sub jg cwtl js sti insb cmp pusha mov daa sub clc sub fdivrs movsb imul and das ds inc cmpsb mov int3 push cmpsb xchg je imul cmp mov xlat out jns loop fucom dec sti cld scas sub ffree lds stc inc sbb fisttpl bound jo aaa dec dec mov in mov push imul in dec das addr16 sbb and dec inc jmp push push adc scas int add loopne inc or into in xchg negb notl ret ja xlat das pop into jbe jmp sti mov lods pop cs or repnz sti or je inc xor iret push ret push sub fwait xlat adc add idivb inc (bad) or push sub sahf addr16 aad lods pusha fs aaa insb lret mov and dec dec hlt rcrb push push mov xchg movsl out rorl (bad) in arpl into jl repnz add dec loope insl mov jbe inc inc mov pop icebp scas loop pop mov add addr16 push xchg add and scas cmp jae jno (bad) mov push mov mov push push fildl gs ret jns inc addr16 dec pop popf inc cmp pop call sub adc aas push fisttpll testl shlb fwait enter scas cmp add or add sub adc jmp adc jmp mov cld cs mov jp xchg shrl lock sbb push sahf lock push lods sbbl mov outsl aaa xor cmp (bad) outsl inc out mov les inc lcall mov bound adc cld mov push cmp outsb cmc popf not das iret jmp mov dec pop int popa pop pop stos xchg mov data16 imull mov mov sti jb dec lret add loope aaa pop pop lret add arpl dec add shlb lcall jp call push cmp mov add incl dec hlt call mov dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push aas sbb ret (bad) icebp (bad) xor dec out les ror in jmp jmp iret xor fstp xor idivl (bad) (bad) imull add sbb lcall insb jl insl xchg jl dec popa jmp sar imul fdivs or xchg push sbb lahf cwtl jb mov cmp cs in iret inc mov in xchg mov ljmp jle shlb cli inc xchg cli sub fistpl or cmp dec xor jo repnz inc ja or test js lcall je (bad) xor outsb xor (bad) ss or lahf dec (bad) mulb insb inc add repnz test mov in fwait repz inc jae adc (bad) jnp stos mov mov cmc dec and jo lret dec fsub jne std cmp lahf jnp push adc inc mov xchg inc les and loope addr16 jae xor or dec xor cli fcompl pop or lock push inc push repnz sbb sub lds hlt fimull inc aaa popa push mov cmpsb pop xor xchg push mov add orl and and and mov rcrb push or fiadd shrb push cmp ret xchg imul pop int nop divb add adc sbbb scas out dec out sub fs and movsb dec pop out mov dec insb ret test adc int fistpl xchg pop out popa pop mov add pop sbb cmp dec jle int arpl imul xor aad out mov mov rorl popf or enter sbbl mov psrlw adc dec mov ja icebp mov mov push or or mov jp dec mov push enter fsubrs mov cmpsb div adc jnp sti fisubrl rcll outsl ret jmp push sub out jno cli jae inc mov in int3 ljmp xchg in sub insb sahf jno adc jne in cmp adcl cltd int3 fwait loope das repnz lcall fsubrl in iret or aad data16 sub ljmp add outsb pop mov push lods dec xchg fistpll add jns loope mov add inc inc fs cmp popf mov ud2 insb xchg aad sbb dec inc adc mov aad es adc push ret dec loop xchg std subl hlt ficom push daa aas scas ret xchg push stos icebp jo mov mov cwtl clc pop test xor add adc mov int call inc clc je les or loop dec mov pop xor inc adc mov pop (bad) sub pop sbb adc mov popf xor xchg or scas push jo and mov xchg xor fbld sbb or fistp add rcll jmp lods sti fsubs fnop adc or aam push mov jp push in es lods xor add ret mov fs ficomp dec fnsave pop dec jl mov aad adc push mov rcrl pop push mov inc outsb and rolb dec scas or pop push stos sti aaa adc push add gs dec jp cmc mov dec (bad) mov jo (bad) hlt cmpsl ret aas adc lods pop add mov push dec sti movsl out cli xchg pop lea fcmovb cmp cmp call mov (bad) or arpl xor insl (bad) jne dec and fcoms (bad) jmp cmp fwait out mov cmpsb add jns mov in les adc adc int3 loope jbe mov fstpl mov movsb dec pusha xor cld outsl push fimull (bad) xor push dec adc mov push cmpl outsb mov or push pop pop add fdivl daa adc push loope inc mov lods (bad) hlt fisttp test imul jne test mov dec mov (bad) xor roll mov movsl ficomp fs movb jne mov sarb pop jo xchg add es push sar sbb aad mov push addr16 test stos leave loope mov dec mov out push pop push xor xor lock xchg aam jle repz jle push aad cmp push mov (bad) mov cmp sti xor mov mov mov cmp mov rorb and cmp daa cmp sub xchg sub ja xor adc jo test out leave inc je sbb in adc xchg (bad) sub ljmp mov int aad out dec mov mov (bad) mov xor sbb rorb out dec fstpt repz (bad) xchg mov pop (bad) movsb sub add (bad) pop dec lods add push repz push daa (bad) sahf es les pop es call ret out popf xchg (bad) mov fnstcw repz and loop mov or repz push lods repnz stos mov xchg cli test push or out cltd pop fstpl fistpl daa repz iret adc cmp test and int3 cli dec imul clc xlat dec lea aam push ja xor (bad) nop mov adc mov lea sub stos (bad) or dec bound mov add ficomp es mov push aad xor iret pop js and jb movsl lahf bnd xlat xor lods (bad) mov cs or stc pop ret push adc push inc jl mov fnsetpm(287 imul movsb jecxz,pt and cmp mov inc stc inc jecxz jbe int out jo dec gs addr16 (bad) aam in fs xor aad or mov (bad) int3 loop dec mov pop dec sub sub xor cmp push mov jno mov mov adc pusha push mov into fwait jmp cmc mov outsb and fistpl or lret xor inc stos push and jl mov inc and push leave mov mov fidiv pushf hlt lods mov dec mov mov adc cltd xchg and hlt xchg das in add fcoms push rcrb icebp cli push imul ret mov dec and addl daa or push xchg enter popf xchg inc dec jns (bad) mov (bad) ficompl sub pop mov mov fdivrl ficoml mov in push mov or sub add aas sahf sarl call xchg pusha (bad) and cmp int or pop cmc fnstenv adc xor xchg je lods mov push fldcw mov and (bad) mov or (bad) fisttpll dec sub pusha inc dec imul inc dec divb nop sbb in repnz ss mull fidivl insl jge sbb divb sbb or inc xchg jle pop fsubrs adc test mov popa sti in imul dec adc pop repz sub call mov cmp int3 xchg test daa mov mov jae data16 dec loope rorl ret lods fs in sub dec outsl dec lea das movsb mov and sbb ret hlt mov in mov cmp inc cld pushf sub inc insl push mov hlt mov (bad) xor (bad) repz push addr16 mov cmp repnz jne ljmp sbb loope push mov xor jge (bad) roll jmp mov push test sub fldcw pushf cmp sahf std cmp cs or enter add ret dec (bad) xchg out loopne push mov add add sbb lods xor lds lcall movsl mov hlt add out sahf xchg in mov xor dec sub ljmp pusha dec sub mov aad cmp and mov lea jae dec loopw xor cmp mov popa mov cmpsl loopne add jns push test push jbe xchg sbbl and add faddp enter adc (bad) xlat cmp mov mov inc push stos aas sbb loope cmpsl inc push cmp xor sub and or in dec jb lds scas cmpsl stos xchg pop and or dec out mov pop in inc (bad) mov nop jns lcall jmp pop fucomp lret imul jbe in out xchg push sub sti sbb push mov stos sub ret mov pop sbb addr16 test arpl mov xchg xchg imul insb mov jl enter and fldenv cs xchg sub (bad) fidiv jno sub sahf xor nop std or xor repz lcall (bad) aaa imul ss (bad) xor push pop out mov sub aam dec dec jne dec mov in cmp mov mov lcall jnp out push cs int3 cmp js cmp jns and bound xchg pop mov insb mov add out lea jbe cmp ljmp fucomi das (bad) stc jmp fdivrp in mov xchg sbb outsl add push and mov nop jge daa (bad) pop sub jne sbb (bad) mov cmp daa pmaddwd out push stos loope xlat cltd ret pop lock fildll pop fistl sahf addr16 mov inc and retw sub cmp cltd xchg jecxz addr16 sub mov cmpsl std sub add mov mov add cmpsl mov insl (bad) mov aam ds cmp repz (bad) push mov fmuls mov stc sbb pop sar or les inc lds scas loop bound hlt push out add xchg jne test stc test inc jg decl je call in loope xchg sarl pop ss push xor insl sub mov test iret xor clc inc insl add loopne test pusha pop inc inc xchg and in decb sub (bad) pop mov dec inc js and cmp and adc mov sbb add adc cmp jecxz cltd or xor test pop inc push xor jmp ds sub movsb cmp push in lret and ficom das out mov scas push dec sahf jb mov stos jns lods ret repnz add and push pop aad xchg jl subb or cltd scas mov mov pop int3 mov or push sbb sbb loope ret pop ds push sub sti sti add jp je cmpsb xchg aaa sbb xor xor inc sahf cld jmp pop and cs out mov in stos lret push cmpsl xor fsubrs iret (bad) ss or fdivrl in dec mov pop aam leave insb arpl ss outsb sti adc test mov movsb inc xchg sub jle mov ljmp fsts xchg mov adc mov lret sub inc hlt pusha fisttpll push addr16 jb je fnop into jne popa mov push cmp jmp out mov imul inc mov stos in ss mov dec (bad) xor mov rorl shlb lret testl clc mov cmc icebp xor lahf test (bad) (bad) lock (bad) int (bad) mov call into push mov iret push cmpb fisttpl popf mov (bad) iret into in pop iret dec das mov in sti out adc or rorl or mov mov fwait and sti cmpsb and pop add pop add pop inc arpl rclb mov xor addr16 loopne insb (bad) cmp stos repz out fdivl mov aaa out (bad) adc push pop push in leave test es insb divps jge (bad) loop xor mov imul mov lahf mov push adc xor push cmpsl mov test push cmpsb mov je leave fistpll aaa cmp into xor ret xchg and push add jge (bad) xchg dec cwtl stos call mov pop lret and inc cltd xchg add fistpl pop jno popa je adc xchg decl mov repnz xchg push popa ret and daa imul jno mov fs mov loope xor fidivrl mov ror pop cltd repz (bad) lods cmp add push test je movsb jb mov ljmp pop enter sbb dec adc push divl push inc mov es rcrl jns sbb jmp push imul pushf cmpsl adc xchg jecxz jg aad mov out jae lea mov inc sub rolb cmp dec dec pop repz fnstcw (bad) xor dec dec iret int3 lcall mov ja ret mov bnd icebp and out push fadd je (bad) and rol enter scas shlb lods add rcr xchg and test dec inc cmp outsb lea fsubs loopne or int es ljmp mov jle aam add pop cmp addl dec inc data16 ss call cwtl test add cwtl sbb push outsl inc xchg movsl sbb cwtl das mov pop sbb jae aam hlt loopne jb,pt jns insl icebp dec mov insb dec loope call jge sub fild (bad) pushf in push xchg cwtl (bad) xchg jle,pn push sub dec sub sub sbb stc cmp xchg pop jns scas lea mov add adc mov repz je scas cs xchg push flds cmpsb lret xor (bad) mov pop dec imul loope cmp dec and addr16 mov adc das dec stc jmp inc lret jae,pt push lret rorb les lods fnstsw leave xchg adc imul loope (bad) mov loop nop (bad) test std pusha call jl or push xchg lea sbb cmpsb pop mov lds iret ret add pop jne rorl adc sub fwait test jle sbb in enter sbb jle popf push xchg inc xchg cs (bad) mov xor (bad) or mov push scas pop mov stos push scas pop mov decl add aas jmp lock fs imul inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fistl add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb ret (bad) icebp jae daa cmpsb (bad) rcr dec not mov mov jae xchg int3 in cmp insl cmp mov leave sbb cwtl jp idiv aaa push fistpll add jmp mov add movsl jns mov stos cmpsl dec fcmovb repz scas fdivrl add mov iret dec icebp cmp scas and fwait jo out (bad) xchg xor nop sarb xlat mov mov aaa xchg push ret push pop mov mov cmpsl lret bound xchg gs outsb mov rorl cli arpl in sbb or out push adc (bad) fnstcw sbb adc push pop aam int pop mov push xor aas insl int3 add and xchg addr16 loope adc cmpsb or push sbb arpl cmp in pop sahf rorl ret xchg and adc popf sbb mov (bad) xchg cs testl adc jmp sbb mov int3 lcall test xor mov adc gs in jo sub aas xchg xor out scas mov fldcw jecxz addl repnz mov push xor das insb push insb repz rdmsr icebp (bad) lret enter incb mov cmpsb add pop pop dec mov mov int3 xor mov arpl jbe xchg loopne xchg adc out or xor es fs lret cmp or add or jg std sub cmp sbb and push leave add aaa cltd and mov mov mov fs fdivl aaa loope ljmp mov (bad) in out lds arpl jge cli aas or sub dec ja xor push cmp sahf cmp mov cs inc (bad) shll add mov iret sbb xchg mov in iret cmp jecxz xchg mov inc test in jbe mov std rolb (bad) stos out inc hlt dec xchg jbe inc in test dec sub xchg jnp fcmovu xor int3 jae xor sti out aas insb inc faddl stos shrb jg lods push mov mov dec dec mov or loop insl arpl das mov scas pop add mov adc and clc mov inc adc inc pop ss mov icebp push push pcmpeqd pop mull iret das cltd add dec push mov test mov and mov cmp jge pop pop add loope icebp negb dec aam test pusha arpl outsb lods mov push dec inc sub outsl scas and pop call nop cli sti mov mov push insl cmp test nop shll jo sbb jmp insl jns lock inc fldcw adc bound clc out dec das adc mov push jl adc movsl jp mov sub or gs (bad) mov mov jge pop dec sbb sub xor mov xor cltd sbb aas (bad) out inc pop push mov pop das enter rcrl mov adc pop sub out mov xor mov aas cmc hlt mov repz mov add cmp and cs fidivl fidivrl into or arpl aam sbb pop jo test inc xchg imul push mov aaa out mov sbb out aad mov dec movsb imul mov shlb fsubl adc jp es mov insl push jnp (bad) (bad) mov sub (bad) (bad) pop sub outsb lods xor xchg push mov fimull sti push sarl cmp xchg arpl inc iret fiaddl mov push jle in adcl pop std in xchg sub es cld jp popa jle pop push loopne lret push sub lret pop xor push cmp loope into cmp jge cwtl cmp jle test jno jo out dec lock out in rcrl fs sub push lods insl (bad) out (bad) in adc dec xchg push mov jae cmp jle sbb mov es rclb inc ds in push and ss repnz pop lret fdivrs in adc cmpsl bndldx movsb insl sti push cmpsb push adcl fnsave loopne sti cltd hlt mov xchg fwait xchg inc aaa stos jo jmp ret or dec sub ljmp push push loope dec (bad) (bad) hlt dec stos or jmp mov cmpsl mov fnstenv cld cmp xchg sub rolb stos or pop ss loop mov rcrl adc fldpi mov mov movsb mov jbe mov loopne or jmp fistpl mov mov aad popa imul icebp test out and movsl std or jp mov mov inc jno js and fwait (bad) das jo addr16 or out pop push mov push outsl nop pop sub cmp jnp outsl cld ljmp pop sub push aad and jle push dec mov ret shrl cltd push xor nop test mov outsl cmpsl jb add (bad) rol mov mov mov mov sub push mov push inc dec mov bound sub popf lea and jle fildll mov mov xor cmpsl mov dec scas jbe lea xchg xchg arpl lds and clc loopne adc push adc pusha cwtl dec or test push rcr inc sahf sub aad call int3 (bad) adc shll test fsts lahf sarl pop xlat push jmp xchg mov mov xor mov push and loope and cmp sahf push pop xchg sub scas push mov sub popa (bad) divb xchg mov mov (bad) mov xor les and dec and sbb pop mov lret test idivl mov repz jmp pop mov push xlat jl (bad) jno sbb push xchg imul rorb popa out ja insl out sarb mov inc pop add push cmp or and or jb repz outsb cmp xor mov jnp dec sbb loope pop jl push aad mov insl aas jnp fist into repz dec push les sub sti lahf xchg xor test cs cmp sub (bad) mov fcomi inc out add aam and aam jnp aad fisttpll cmp cmp xchg sti into inc cmp outsl rcrb dec daa fadds inc sbb stc add xchg xorl outsl and fistp push scas xor inc jo insl pop add cld loop sub xchg and jne cmpsl and test sti jae adc (bad) je pop addr16 dec mov push outsb sub and pop jbe divb xor cmp fcoms movsb (bad) xor aad pusha xchg push stos mov cmpsb call push stos (bad) and and dec psrad jp jae mov stos cmp incb cs cmpsb lahf lods sub out lock dec testb push push or sbb and mov pop jne stc add push inc lock jns (bad) cmpsl rcr pop (bad) insl rcrl xor popa sbb and sahf mov ret sub xchg hlt es icebp hlt or movsl xor adc inc dec ljmp aaa test (bad) xchg cmpsb dec popa xor rorl dec popf f2xm1 (bad) imul cmp mov xchg out mov xchg test outsb xchg mov fisttp cmp and fcompl test xor mov cmpsl test int3 scas or je notl pop mov jle mov pop cmp daa fwait jmp repz add jo test xorb movsl xchg cmp inc adcb xchg jp (bad) aam imul daa test ljmp into out sbb (bad) dec inc sbb cmp es xorb mov movsb jae push in adc aam sub pop iret je arpl jmp (bad) jbe fidivr dec sbb sbb clc jmp xchg ds lods iret repnz adc int3 dec mov xlat lea xchg dec push pop mov push incl lahf in mov add ja lock sbb inc notb es das aaa inc jmp push lahf sub arpl repz sbbb xchg pop xor cmp ret imul dec push and lea push inc cmp xor mov jp test js jne test loop lea in sub adc rclb inc lock dec or loop mov or mov pop pop cmp aaa pop scas sbb push popa sbb xchg fcomps mov int3 mov out and cwtl or push xchg jge adc cmpsb ljmp mov jge mov adc imul sbb hlt inc mov sub ds adc aaa test cli adc int3 cmc pop jo pop stos or mov xorb mov lods shll arpl xor jnp ljmp xor sub xchg and inc call and repz test mov imul push add add pop mov cltd xor mov sub mov mov fsubs ret pop pop (bad) xor scas ljmp mov aad daa jl (bad) mov and sbb cmpb scas mov js jg aam or xchg (bad) xor jne mov adc fbld fs pop jbe add add insl jne jge into test push ds les fldt (bad) jp rolb mov and jecxz pop fsubrl test arpl (bad) push push sbb ret nop into repz int das (bad) jb scas pop (bad) cmp cmp fisub adc cwtl jb xchg lods inc rcrb pop loopne loop push inc sbb test xlat inc movsl cmp jp cmp cmp push insb loopne jo iret pop arpl sub fbld and nop cmp pop into cld pusha sub mov ja outsl gs cld std push (bad) push and loopne add movl aas rorl cld aad popa leave popf ret dec loope iret push ss cmp mov jecxz push sbb push inc xlat sub imul arpl nop fcmovnu xchg negl in and lahf mov sbb std (bad) fisub repz jo mov outsl movsl and cmpsb mov (bad) stc decl xor fist test lahf scas pop (bad) xchg adc inc clc int3 add (bad) cmp mov flds hlt push xor movsl icebp add sti loopne aad addr16 inc xchg xchg repnz sub inc cmp mov push inc (bad) push push sub sub push mov ffree cld lods hlt loopne addr16 aad sbb lods out mov xchg aad fs insl pop lret scas lcall icebp push pop adcl cmovae pop stc lcall jae outsl adc xchg rcr cmpsl popf inc addr16 outsl dec ficompl mov and cmc out jnp loope adc sbb jb ret cli pop (bad) dec repnz mov test xlat loop lock jbe stc fwait mov out cmp xchg dec jae mov frstor adc sahf xchg into jne push pusha js popf (bad) mull adc or jp inc pop jbe inc jne push cmpsb pop ja imul add or xchg push pop mov pop int3 add lcall adc mov in dec mov cmpl adc and jl mov push dec (bad) popa rol (bad) lds inc out gs xchg push xor xchg (bad) (bad) sub sub inc lret insl (bad) push sub dec enter push jb add ds sarb adc push sub fisttpl imul add inc add jb mov pop outsl shll addl fcoml fdivrp xchg sbb insb push fistp cmp and add in mov out jns pop cmp mov xchg dec add test dec sbb sub mov daa outsb cmp and jmp lret mov and xchg sbb fcmove add addr16 int3 cmp add ret jge sub and push xor inc mov mov scas test and rolb jnp fwait push dec dec fdivs add loop sub jmp in dec outsl adc les js adc lods jle push sub dec jae sub fcompl cltd mov push stc sub mov mov pop cmp or bound jg sub or fucompp lods lock shr lret rclb or push aad lea stos inc arpl rcr xchg mov fimull dec mov jnp pop push cmp std stos pop pop movsb pop sbb stc cli (bad) testl fiaddl hlt adc xchg fildll dec cli (bad) push mov mov pop ret out addr16 sahf inc (bad) rcll add cmc dec sbb stos jg jg popa out xor push repz sub clc popl jg sbb mov jl cld pop and mov xor out cwtl inc inc in test sbb data16 push fidivr call jo add xor stos adc sub test iret iret insl (bad) jle mov or xor cwtl cmpsb jl in xchg data16 repnz out mov mov mov lahf pop pop loop add mov jge dec jp repz int iret xchg or mov and les jge lods loopne and dec out insl add fsts sbb inc mov mov or dec ret sbb jmp adc or stc ja push hlt fistpl fisttp test jmp push push aam push or lea and (bad) pop mov test jge inc nop dec sbb pop andl mov inc ja pusha lret inc std loop test sbb mov dec pop jnp nop jae dec jo mov test lods shll dec lock sub xchg cmp mov jp call push std out add incb push fnop (bad) mov repz add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push pop adc add rcr sub mov movsl jnp dec addl sbb dec mov cmpsl mov dec push sbb idivl xor add or pop cli mov and stos mov inc jo lret mov push in ret subl fidiv hlt pop popf lock fsubl xor dec scas or (bad) dec out inc xor les sahf adc inc pop xor xor add xor push pop dec sbb mov mov xchg or xchg push in mov jb cmp (bad) mov cmp scas sbb gs scas pop pop push or rcll cmp lcall es repz ror pop push punpckhdq stc push test or push std adc dec xchg xor into jge pushf dec jecxz push add js jge fnstcw mov mov int3 adc mov fnstenv cltd xchg out pop es pop (bad) dec mov in add adc ja or and test mov ljmp int3 jle push fcoml pop jno mov aam mov subb rcll data16 and das movsl inc xchg sahf lods std sub pop lods dec sub or mov es test mov movsb gs aad iret int3 fs mov pop fisubr dec lock out sbb adcb and sbb bswap loope sbb dec adc out test movsl push push inc sbb call jnp fdivl adc lret mov adc xchg mov xor xlat jmp sysexit jns cmp inc inc movsb xchg (bad) fcmovbe aaa sub rorb hlt mov movsb popf iret ds adc test clc in je mov mov roll lods notl in rcrb inc push pop xchg mov mov popf or shlb jae xor sbb sbb pop jo (bad) je enter cmpsl mov ss cmp push test cmpsb movsl xor push sahf adc mov xor hlt int lea aaa ss push jno sub push mov jnp repnz call out fisubrl scas sub loop xor xchg jno and movsb call pop in xchg stos out mov xor shlb (bad) mov cmpsl cmpsb movsl dec rcrb xchg pusha (bad) mov jnp imul push movsb pop mov lcall mov mov mov mov inc movsl inc mov cwtl push adc xchg and mov out inc lock (bad) push fimul gs cmp cmp inc shr inc mov bound xchg sub or or push jae add inc or popa cmp mov imul or jne mov popw jl test je lds pusha push (bad) jns imul jno mov mov fucom mov inc xor scas mov (bad) or cmpsb iret push or ficomp (bad) nop mov mov sub push push or (bad) stos pop int3 dec cmp (bad) test mov fucomip push and test mov testb cmpb and iret push and pop stos lea cltd std lret scas rorl xchg fiaddl decb iret es jle orl cmpsb xchg test mov sbb (bad) addr16 mov cmc cmpsb inc dec dec inc ljmp add jle and add lcall or mov (bad) popf test mov repz add aaa xor rcl adc idiv sahf sbb mov jmp lret sbb pop cmpsb insl jecxz,pt fadds les push dec cmp std jno sbb sub movsl push test mov inc mov (bad) iret sti sub fwait mov mov lret jbe xor push ret xchg fisttp cmc data16 pop scas shl out rorb data16 add dec sbb cmc stos (bad) adc ljmp mov (bad) lret rorb imul sbb in jno xor mov mov xchg enter push cwtl cltd add insb cmp dec pop and mov cmp and push jnp daa xchg xchg jl jle dec icebp stos call das mov clc push gs mov scas pop mov or ffree jb js int3 in das xlat mov rorl and sub das dec jp adc mov adc mul cltd test mov leave enter cld jp mov stc daa (bad) roll ret aas add addr16 adc enter and push call mov ret mov es jae sub int3 les aam in mov pop into push addr16 je add and fmuls inc dec sti lds push fistl insb inc outsb insl xchg and clc in je sub or mov js cmpl stos mov dec (bad) das cmp jp in (bad) xor sub testl push notl xor xor cli pop lods pushf popf mov rclb push jae je or out mov clc lock and rorl mov jle icebp pop sub add aam pop and xchg jbe fwait stos popa push push call or dec fs mov cmp mov push ljmp cmc bound sub pop subl jl,pn xchg mov sbb ss dec adc frstor xchg shrb mov push pop and out cwtl ss ret shll ds mov add sub jecxz inc push xchg lret mov (bad) xor roll cmpsb shl inc (bad) and pop sub inc mov jg fcmovnu xor popa stc lret bound (bad) mov xor out repnz mov cmp movsb dec std xchg jae dec fisubr mov lods sarl mov mov pop pop aad in ss (bad) jmp sbb scas xchg sbb dec (bad) (bad) mov test cwtl push add mov dec jo lahf aam mov aad pop sub pushf push loopne divb clc cli add pop les sbb sub gs popa ljmp mov loope aaa scas popf dec and mov xchg mov lods push nop (bad) jg cmp xchg pop xlat jae pop sbb push lahf out js jl dec icebp sbb (bad) xchg xchg mov jg jae push test pop roll cmp add mov je mov nop adc jnp push sub divl sarl outsb mov sub insl jno and xor mov mov bound lock add pusha cmp or sub jecxz fidivr sub rorl and iret sbb mov (bad) jmp repz jnp pop stc jl mov sbb cltd addr16 ficomp test adc js mov popa call cld pop sarb js or shrl cmp mov cs sahf les pop cmp or loope dec (bad) push int sahf fwait mov hlt xchg inc scas lcall or pop cmpsl fbld or loope lret inc fimul movsl adc or pop mov inc rclb jg pop mov and pop push mov test inc inc cmp mov xchg cmpsb sbb sub jge das sbb mov add mov or inc or (bad) add pusha jnp adc lds mov test stos or inc pushf loop loop outsl and les sub push stos lods mov gs dec xor rol jle in leave pop pop je mov lret pushf xchg xlat movsl jns mov ficomp mov mov jle icebp mov jnp fisttpl xchg mov push loope lret leave mov mov lock dec test imul lock add fidivr les mov aam jae jle and daa jbe jae add int3 gs inc xchg or adc rcrb in fadd lea sbb jmp add mov cmp adc into mov pop jmp dec mov xor jl inc into shl data16 ds idivb popf pop scas subl and lcall lock xor shll mov out sbb adc mov daa cmpsb xor push scas (bad) xchg xlat lret xor jmp add push push pop mov repnz jns dec jg mov sbb fcoms mov outsb pop pop xor ss fisub mov iret lcall in pop mov adcb inc push insb fwait push fsubrs lret test mov jl icebp dec aad cmc push pop (bad) inc iret sub daa stc out repnz ljmp push mov popa movsb cmc in in (bad) in (bad) xor je movl jge (bad) jg adc mov jne push push clc lock pop or fsts sbb sbbl outsl push and fldenv xchg jo fimul fidiv sub (bad) jge repnz mull loope pushf pop mov jecxz mov int3 cmp adc lret add mov int clc loopne mov stos out icebp push pop divb andl sbb xchg jne sub sub aaa cmc mov popf sahf jle push cmp xchg inc jnp lods jne inc pop je mov imul inc out ds pop sbb cmpsl adc mov push adc push dec popf pushf mov cmpsl and xchg fwait inc push aam iret cmc insb out hlt in pop pop cmp lahf (bad) ss es mov (bad) and or (bad) lds repz push int3 std sbb inc lds stc push imul sbb mov sbb (bad) imul jle mov int pop in push nop aad clc stos je or inc div js jmp mov lahf inc xor mov push push push (bad) fdivrl xor adc mov jle movsl and inc aaa imul mov xchg add jl cli pop cmp xchg test jecxz or dec dec cwtl in mov and jge (bad) mov mov or stos adc out popf mov icebp testb stc xchg hlt lret idivl (bad) stc cmpsl mov inc daa arpl into pop add mov pushf sub add je mov jo les outsb addr16 sahf jae jmp rclb jne (bad) imul xor lods cmp leave pop jne stc in scas lret xor ds mov inc mov xor adc addr16 and or jno rcll pop pop outsb sar xchg mov cs in xor pushf add cmp ficompl hlt push arpl jl pop xor rcll cmpsb std (bad) ja dec inc jl fmul outsb int (bad) xor xor push jmp in mov pop popa cmp push fstl push lea mov jne add insb outsb (bad) rcrl les xchg or add mov mov jp test sub mov movsl scas pop push fisttp mov and mov mov adc imul test out fildll add pop sbb rcr sub dec cmp jb and push mov out psrld div cli pop dec mov sub leave xchg lret ret movl gs lret sub dec (bad) mov lods pop (bad) out dec and xchg je in lock mov stc mov test lea push negl sbb adc nop mov pushf enter repz (bad) mov lods jno lods icebp cwtl out jg mov add cmp fld push push add xor jae sysenter add cwtl decl (bad) imull push push dec jns adcb sbb aad in pop mov imul lods mov add xchg mov insb sbb sahf (bad) mov repnz scas imul sbb xor (bad) mov dec repz scas clc inc inc incb cmpsl pop sub (bad) xor imul std rclb xchg mov jle xor enter add mov cltd mov mov xchg dec daa test fnsave or mov repnz mov clc dec mov add aas loope mov ficoml add mov jo mov jo ds inc gs xchg sub push sbb pushf push pushf aad mov fwait dec bound (bad) pop add dec lods out (bad) data16 cmp mov xor aas fs cld idivl jae leave xchg fucomip fcmovnb xchg cld push dec outsb mov adc fwait and stos insb jbe push and arpl xchg (bad) xor jmp test push xchg ret pop jo push or addr16 das in (bad) mov cli xchg cmp orl data16 xchg and jae cltd daa test arpl or aam cs xchg cmp shr push icebp jno pop pop rcr inc dec (bad) push adc dec pop iret aaa stos (bad) (bad) dec mov pop push adc lahf in stos pop adc sbb shll mov cli mov push stos sub mov inc jbe ficompl and fwait hlt xchg movl mov movsl (bad) sbb fcoms stos pop fsubr pop sbb mov addr16 lds lret mov lret cmpsl mov mov scas push in repz sub sub jg mov mov xchg adc fadds mov jbe call sbb (bad) fsubs mov lahf nop (bad) sbb xor or outsb or fildll jge push adc cs jl bound pop std add sti fistpl in call es dec push cmpb cwtl cmpsb sbb imul dec xchg xor test xlat loope mov xor adc out pop lcall out mov adc adc add push xor sbb lea sar push popf pop push movb dec mov iret sahf cmp mov iret sahf cmp mov iret (bad) incl add pop les push cltd fidiv addb add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ficoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push inc xchg add xchg outsb add mov and push imul movsb inc sbb adc ja mov aam xchg out sbb jb idiv (bad) ret cmc and getsec add pop add das rorb insb xchg xchg push and pushf fsts cwtl mov pop addr16 xor fldl adc pop cwtl loop xor fs xchg mov (bad) cmp js xchg cmc push pusha ret fwait push test pop pusha jo sub xor cmp sub pusha mov xchg push dec loop scas shrb jo (bad) testb sbb mov mov dec pop fwait (bad) and cltd fisubrl mov imul mov mov rcrl js mov xor mov int3 jne adc scas cmp push lock data16 mov sbb scas pop (bad) cli or sbb adc jae loop and mov jmp jge sarl xor loopne or (bad) aaa mov xchg pop jge adc data16 xchg insb push lds cmp (bad) dec jnp mov push lods jo in adc mov xor outsb and pop das stc outsl lods int3 sbb insb sbb repz adc sbb das insl mov jmp and mov adc xchg in mov sti cmp jecxz mov imul sub addr16 or aas mov dec je ja loop sub mov xor (bad) (bad) divl test sbb xchg cmp xchg je pop imul jg mov inc je repnz pop pop mov inc les jge xchg mov (bad) pop mov outsl rcrl cmpsb fisubr pop ljmp push xchg pop (bad) cltd lds cld (bad) dec jle sbb adc dec shr sar mov xchg xchg enter cwtl mov lahf aas jns mov pop add push in test pop sub sbb (bad) js jle dec (bad) cmc pop cmpsb pop jbe cli out cld jmp jmp mov push sbb scas incb popa fidiv jnp or push xor imul jns jge,pn pop xchg scas jns xor inc ds push (bad) divb aaa sub push jo cmp arpl cmpsb add jmp mov jns xor xchg xchg push scas in xor xchg out jnp std sbb sbb (bad) cmpsl movl (bad) cmpsl (bad) xchg das mov repz xchg mov insl (bad) test xchg lods rcrb jns jle (bad) jne sbbb daa stos outsb mov add inc xchg push loop pop fist lods push rclb jns cmp push bound popl xor in dec and jp mov repz xchg ret pop popf sub fs push cltd xor mov inc fiadd fildll ljmp sbb sbb pusha loop add inc fsubrs ss inc in mov (bad) mov mov icebp movsb hlt stos fimull dec loopne push test fbstp jmp xor or push cmpsb (bad) push mov push mov (bad) (bad) or and (bad) mov bound fimul scas sub fldl pop mov insb fisubrl mov push (bad) jmp xlat cmp fs dec xchg repz lods lock push (bad) and sub pop jge test pop sub ret jecxz xor mov bound push xor shrl mov test lahf push (bad) fbstp stos cli sub pop dec sbb (bad) (bad) xchg mov mov adc cmpsb mov jno ret out jns push (bad) dec das (bad) xchg rcl les pop in sbb iret (bad) jb push mov lcall popf jecxz pop adc adc or lahf add dec je push dec mov je and dec xchg push leave xor sub mov cmp movsl xchg pop inc scas and mov inc (bad) leave scas adc mov jns mov mov out sub mov jne xor lods cs aas imul pop loopne cltd int and xchg mov inc out shrb dec iret leave fldcw leave xor sub mov test jo mov push repz fld jno lea mov add pop mov les cs out mov loope dec cmp lds subb push insl push popa (bad) mov inc adc out pop stc inc mov add aad xor xchg cmp ja aas inc fcmovne loopne das cltd cmpsb in hlt xchg outsb dec in test mov mov add jl dec push mov pop mov (bad) mov adc loope insl (bad) xchg repz cld mov xchg jns pop repz or outsb xor loope aam or shr mov inc in mov or stc mov mov ret xchg and xchg pop push add dec fmull push inc imul insl jmp or aam rorl inc into jnp or insl cs sbb inc pop inc jp pop push mov push int mov fcomps es ret mov adc push cmp in jae xchg fs sub imul pop (bad) scas adc mov xchg jb xlat and push mov xor int call add rorl clc imul pop test gs pop push lea dec in mov jo popf cmpsb mov pop pop sub and das cld movsb mov popa fwait push in movsb (bad) cmp in jns pushf or sbb aaa sarl pop pop (bad) (bad) stc mov out mov es aad add pop cld movsl mov push in pop out ret jae inc inc call out stc jge or xor pop add dec into ret je pop push icebp mov fdivl xor mov xor jno pop in repz daa mov xchg outsl loope js push rcr xchg xchg js loop mov test enter rcrl xchg xchg push daa mov cmp insb outsl and (bad) mov push mov pop cmp rol push mov sub mov adc mov mov (bad) or test lea push fidivrl add clc xlat pop loop loop xchg adc stos xor or icebp lea aam out cmp ljmp dec push scas lods pop push aaa xor mov mov or roll pop xchg add jns test jbe or (bad) mov xchg popa cs push loopne mov jl xchg sbb and movsl mov icebp out pop inc xchg cli roll jp movsb movsb pop popf ret popa mov add repnz xor iret jno in popa cwtl sub cmp inc add (bad) lcall sbb fnstsw cmpsb sbb icebp into into jmp clc ret dec inc mov pop pop adc clc repnz mov jmp adc adc mov sub movsl inc ja push and and clc gs cmp bound push inc dec xchg dec int3 sbb lock push (bad) adc jno and in mov setl cmp xchg cmp add pop cltd jo mov push iret sub add pushf (bad) mov inc xchg push push (bad) idivl mov arpl xor or movsb xchg mov push popa js cld mov pop rorb dec adc cmp insb clc pop scas cmc fisttpl arpl ds and lods mov cmpsb pop cmp jno mov jnp fstpt nop push call jp jmp xorl shlb jne aam stos scas movsb adc int sbb push movsl or or sbb or or adc fdivrs mov sbb in mov add (bad) mov fabs and test into push inc push jge jle loope and cltd enter push stc or call in inc mov xchg cmp push or and popf push add and xchg fistpl dec frstor in push cltd cmp jne sub mov fmull imul adc jecxz cmp sub negb inc mov xchg ss or sbb add (bad) das jmp mov sti inc rclb in fisub and sbb jno,pn jb sub je adc dec es (bad) dec (bad) pop jl dec dec outsb xchg mov mov mov mov stos sub add psubsw and cld cli push xchg xlat mov les dec jge or das mov je out pop pop loopne add sub cmp dec mov inc pop xchg jle out dec mov push mov mov js push call cmpl mov pop inc ja mov test dec sbbb mov sbb sti insb sbb leave mov arpl and cmpl mov push (bad) mov rorl fidivl fdivrl mov adc (bad) cld dec std pop out mov pop dec inc cs push lcall stc xchg jp movups sbb lock pop mov fimul (bad) sub std or pop call lods sub ljmp das pusha test cmp mov inc dec mov mov dec xor loop push sub add mov push ss sbb jl leave inc mov xor inc adc pop aam std dec dec in insl adc cmp cmp push stos dec imul out repnz fmuls mov scas sbb mov repnz int3 pop or adcl ret (bad) jne cmp (bad) addr16 sbb scas dec leave xchg pop xchg popf pop or cmp jbe dec mov and mov out or add outsl shl sub add mov hlt dec stos jne push movsb or addr16 xchg out jg in xor pop sbb lea leave or imul lret cmc add lea push xchg and out push mov pop cmp dec mov mov ss jg fs sub pop xor les int3 add mov xor aam repnz fwait mov fstpl pop cmp call sbb ror push aad repz jmp adc xchg jge sahf pop adc mov jmp rcll lret dec adc push or (bad) cmp add xchg leave dec inc mov lret cld hlt push stos push test sub loop adc shr jl arpl mov jb sbb int3 sub cwtl adc xchg jb inc ds les inc cmp sbb scas mov mov cmp mov sub (bad) push mov in mov jo outsl imul cmp (bad) fmuls repz cmp scas inc cli fstpt (bad) or mov dec push push xchg jae push lcall or push sbb sub jb stc add push std push jo jb mov fstl mov push test pop cmp pop cmp inc out jnp negl cmpsl pushf fnstsw cmp repz outsl inc addr16 xor jmp jo loopne cmc orl stc jno scas int (bad) adc xchg adc lods xlat pop pop in les mov (bad) enter mull and test xor roll inc test lock imull xor and cmp jbe jle iret mov mov mov sub cmp push in adc inc jge and jne dec mov cltd push push rorb mov cmc ds testb adc cmp xchg adc call sbb popa push imul adc shrl jbe xchg cmp hlt jl dec (bad) fisttpll rcrb or lods pop mov es jnp test stc mov adcb jle loopne pop lret fs inc mov fstpl jecxz int3 add xchg negl pop fdivr js cmp stos mov dec mov adc imul icebp loopne jnp sub sub xor xor pop jno sbb loope cltd jle pusha std push pop clc mov ret test inc (bad) (bad) cmc cmpsb inc mov and test clc es mov pop dec and (bad) daa rcrl xchg push and fmul mov xor or (bad) cmp mov xchg cmpsl jg add and push sarb es test fucomi mov pop jo loopne stos lret aas notl jnp xor lcall sti cli cmpsl rcrl mov shrl outsl mov repz push jmp xchg (bad) jo sub pop (bad) push mov (bad) mul xchg cmpsb ljmp scas adc (bad) insl stos (bad) stc outsl bound imul fcompl mov jnp je sbb int3 fcomi dec dec sti mov ret or push dec mov je shrl jns or repz mov nop scas xchg sti (bad) hlt cmovne pop es repnz mov pop mov mov lcall dec mov movsl jne aad sbbl mov repz sti or xorl dec test fisub orl inc mov in xchg mov fdivl fs je stos fstl out jge test mov dec scas jns fs dec roll gs adc mov je mov popa test xchg aas dec out jae bound (bad) (bad) js mov ret adc in xchg (bad) out mov loope mov jg sub mov xchg cli or into pop dec pop jmp movsb jb into sbb jbe mov mov lcall jmp (bad) divb dec mov call jmp fsubl and fnstsw int3 xchg cmp dec leave rolb (bad) fisubl mov icebp out xor in mov out pop and xor inc jmp dec add cmovb test pop in cltd scas pushf movsb cmp dec rcr mov pop test (bad) loopne stc mov stos mov outsb inc xchg sbb add stos ljmp mov inc and imulb add mov pushf pushf arpl pop pusha push lods arpl pop adc shlb xchg mov lcall push imul xchg adc dec add dec sbb mov jae ljmp mov dec ja inc (bad) cmp call push cmp mov out add repz pop jns call dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aam add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop sbb rolb lret mov ja mov jl mov mov mov lret mov gs pop out out jge (bad) fcomi xor add notl lock ds push aaa mov aas push test jbe mov (bad) mov or sbb hlt adc scas xchg (bad) push push pop aaa mov ds pushl mov fildll (bad) dec or test push lods dec dec jae shr push mov inc and add jge notb push data16 (bad) pop mov sahf xlat out fildl mov (bad) xchg enter push push rcrl mov mov sbb lahf jo jne pop pop int push jp inc pop adc fwait and daa mov xchg notb pop push addb xlat hlt loopne push call and sub icebp mov in push das xor mov pop (bad) mov ss dec xor imul mov cld mov xchg fbld lret cs xchg (bad) (bad) xor jl lock lret es push xchg outsl mov xchg stos test or mov rcrl or or add mov negl or lcall sbb mov in dec add icebp sub rorb mov mov mov xchg jne (bad) or cmpsb ljmp and adc test in or cmp adc test cmp sub js mov dec xchg mov jl movsl mov (bad) pop inc xchg jecxz mov mov jp stc xor jg clc inc fdivl popa xchg shr mov pop ja or out in mov adc fist inc adc xchg or fucom inc xlat in sarb cmp push push adc aaa push clc ss and fstl (bad) pop and stc in mov mov fcompl inc or push mov and fwait sbbl jb sub lods (bad) cmp loope jo push jg cmpsl mov mov cmpsl xchg sub xor lods sbb push outsb mov sub and mov loope daa or bswap insb (bad) fisubrl xor es or shll mov and bound jp rcll sbb fldln2 inc es into cmp pop adc adcb pop jno jne out pop out pcmpeqd out push sbb push subl mov mulb jno lret ljmp mov lret mov jge mov addb (bad) push repz jecxz xchg sbb iret insl bound cs lahf out sbb inc fcoml enter sti xchg or in jp ljmp push mov pmovmskb outsl add xor enter popa lea pop mov inc or cmpsb cmp mov push pop jp and xchg hlt lds jae xchg pop andps das aad cmc scas out sub push repnz xchg pop loope repnz je (bad) push ja xor jg jne or adc gs std icebp cmp (bad) fnop push outsb outsb xor add jmp test push sbb ja or ljmp push jl out out ja push shrb jae jno xchg enter test ret popa xchg sarl cwtl jl out (bad) sbb mov fist cmpsl mov repnz fisubr pop cmp data16 lret int in mov lahf (bad) xor popa and mov mov fisubrl push jmp push dec aad test sbb xchg in sub stos std sub pop mov xchg mov mov pop in js sbb sbb sti mov test out dec aas dec push push (bad) leave inc nop shrb inc (bad) mov sub inc push (bad) xchg shll popl repz xchg push fistpll xchg adc rclb fnop test ret cmp imul cld int subl adc sub aam mov hlt (bad) jo and xchg and push xchg mov mov icebp inc sub movsb mov (bad) pop fnstenv out lahf push inc cmp es enter push outsl xchg adc cmpsb cmpsb jno (bad) addr16 add lock mov into sbb int out bound js mov sahf sub pop dec fs pop mov dec cmc or imul imul dec out test pop mov ficoml jl jbe and adc or in push pop mov mov jno cs adc pop fninit push adc add (bad) jno inc sbb in ret mov aam stc aas loope orb enter jno ss ret cld inc jle add inc jb push and les aaa les mov lret sahf (bad) push cmc push pop out fdivs push ret jge or push add inc mov jb scas leave mov call jae ret xchg jne jne cmp lods sub dec pop mov jnp jmp adc sub lahf add aaa sub adc pop pop pusha and xor inc add call divps adc push inc cli sbb push scas mov scas pop or sbb sar adc clc mov push inc dec jge push pop (bad) imul pop testb pushw xor out dec push mov lahf xchg jb fwait inc xor ret dec outsb cltd jmp int adcl std push lahf int stos add pop gs push push enter test push mov and mov (bad) or and inc jns cmp dec imul adc cmp or popf mov lds mov jne (bad) adc test dec xchg push and pushw test add outsl stos (bad) or xchg aam or or pop (bad) insl das cmp in scas jns mov mov movsl dec in jb fwait aas xor clc lcall popa lods jae cmpsb sub mov mov stc (bad) sti jae push push or imul fildl or push outsb cmp movsl cs into sub lods dec js mov dec (bad) lcall cmp mov loop test xor xchg repnz lcall or sub imul jbe out push or orb xchg mov jmp xor ret push movsl andl mov inc push cmp xor (bad) or xor and test out lods pop add es add insb std cmpsb and call inc mov sub addr16 xchg push jl pop jle add loop adc das xchg (bad) sbb xchg imul xor imul jne lret adc jb out aas xchg xor pop pop mov in int dec dec sahf mov fwait sbb and (bad) jo push es sbb rclb sahf std dec lret push inc lea arpl and cli mov mov stos or push outsb or or ljmp ljmp push popa sub xchg ss jae mov adc ss push dec nop (bad) notl scas rclb add movsl hlt cmp push push jns or push lahf clc push mov jp cmp lcall mov lea roll or dec (bad) add cmp lret adc rcl lret insl mov mov test jg movb pop das mov xchg inc mov ja jl xor sbb leave test sti cli leave sub mov movsb inc sbbl mov mov xchg ds call adc int push xchg outsb and mov fld1 insl rcr outsl in (bad) mov mov out stc sbb jp push push stc mov aas cmp pop or std xchg xchg sub jnp (bad) out in cmp adc adc sbb (bad) fwait orl xchg ret jnp sub sbbl mov dec int3 xlat jno dec xchg push mov fild movsl aas dec (bad) int3 jno mov xchg jp mov mov cltd xchg add call fisttp sub or push fidivl add idiv mov push shrd lods cmpb hlt mov or inc push popa (bad) icebp (bad) imul notl sti gs push mov adc dec fildl fistp lods pop (bad) aas inc lret pop in loope (bad) or lcall dec or pop jmp pop loope push ficomp pop dec push test or jmp mov stc xchg je cmp cltd iret push mov insl jno mov mov into mov add mov call in out push (bad) aas (bad) xchg sbb movsb int jge xchg cmpsl jnp (bad) loop xchg inc pop das popa sti xor inc lea es ljmp pop xlat incb pop cmc jno daa push mov stc mov es loopne mov out and lcall rclb es pop mov scas repz jne dec call pop mov into dec popa ss mov inc xor inc dec mov and sahf mov test mov scas xchg call inc jmp lods mov cltd fisubrl jle inc aaa jl xor inc fist (bad) mov jns pop popf add jle push in loope add pop fs jg mov pop stos inc mov push es and jns in push mov pop sbb std cmp push mov lret stos sbb pop test call pinsrw xchg lahf cmp push cmp ljmp into (bad) pop xchg jbe lods adc bound inc and test jg pop scas jns dec dec lods or and push jae js jne pop or jb xchg push decl adc (bad) loope ss in in test push dec cld xorl xchg xor pushf mov sbb loopne sbb inc lret lods mov mov lods jbe or aaa mov loope mov xor jge arpl test mov enter xchg mov (bad) stc cmp sub push inc popf and xchg inc inc mov jg jle mov xor inc xor and xor push popa mov scas dec ret lea (bad) xor incb sbb push je mov mov inc lcall add div pushf xor mov fadd arpl cltd scas push push (bad) out mov test or sbb (bad) push or mov ds daa or jbe xchg in sub cmpsb jno inc scas jl mov lret inc daa xchg ret out fildl inc and fwait pmulhuw dec cmp or mov jge jp push clc sti jle sub popf pop iret jle push daa jp stos xchg or jo mul dec dec mov loop adc (bad) aas cld das jmp cwtl fdivl adc and xchg jle or add stc xchg cmc aas cmc sbb mov push insl ja cmpsb xchg push test fdivrs lods jecxz leave dec outsb imul test subl push stc inc jnp (bad) adc cmpsb addr16 sbb mov fcomps push fwait mov xor push xchg mov mov and daa pop pusha scas push imul pusha xchg sarb test lods mov lds jp mov pop aam test mov sub decb in pop (bad) and imul pop dec mov lock jno and ds and leave dec mov xor stc add scas xchg sub dec cmp in repnz cvtdq2ps and mov pop mov enter nop ds mov push pop and add pop sbbl daa repz push mov lock out inc pop pop ss movsl cmp insb xor shrl jmp mov add icebp stos int mov fwait pop rcrl roll callw lds lds mov ja pop outsl jbe sbb mov xor jns clc sub fcomps repnz jns mov out pop adc addr16 out sub popf mov jmp fwait mov inc idiv pop fucomp sub jno cmpsb adc ret clc xor add pusha mov lods int3 rep ja cs repz inc sbbb movsl sbbl repnz dec hlt xor mov mov adc jp sbb and mov inc loop stos fsubs mov test sarl xor adc mull or fcmovbe push xor xchg jmp aas insl outsl push ret out push stos loop fsubl rclb fs and int3 fld out inc ja sbb inc mov jno movsl jg dec mov cmp mov cmovp test push push xor xchg xorl sbb imul lds jle adc mov (bad) push push sarb fildll test cmpsb imul std cwtl lcall dec js cmp (bad) in fist cmp pop pop stos sbb cld aas dec jno (bad) int ja ja ds jo fucomip test sub push ja cld dec repz out loope idiv sub inc add xchg orl ds mov adc cmpsl jnp jo in out inc (bad) push fsubs and (bad) mov fcmove jo stos xchg sbb ret mov sub mov add (bad) mov xor push xor jns lods pop stos sbbb sbb out movsl aam pop data16 xor adc pop xlat std push pop inc xor fiaddl (bad) and adc mov mov mov push roll in dec lahf add idivl jl inc pop into mov cmp dec ficoml ret cmp out or js mov pop outsl int3 push or jge jmp mov aas push sbb xlat leave repnz mov loopne into (bad) popf or or dec inc imul pop sahf rcr fildll fstpt and dec jl add popl mov pop inc out fidivr mov jnp out fnstsw add incb mov cld jle sub lods add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoms add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop adc mov xchg repnz mov popa sbb mov call inc inc cmp and movsb push mov fdivrs add cmp ret mov jecxz fild push push cli mov pushf out push lock dec sbb xchg dec lods stos push push or rcl mov xchg jo jge cwtl outsl mov fsubl jo lock repnz lods outsl ret les push mov sub push push fistl sbb test iret mov fcompl sbb dec in adc sub js fidivl aad jb (bad) int inc jb inc dec test cmp popf into mov pop aad adc (bad) xlat push mov push dec inc jae mov scas pushf mov imul loopne jp mov cltd arpl xchg or sub jp jmp sbb (bad) (bad) icebp and gs adcl or cli ficoml iret sbb jne cld icebp nop sbb cld cli xchg loope clc or jb xchg push xor pop jecxz jns cld push cld imul (bad) cmp negb (bad) into sub int sbb (bad) xchg insb pop lods cmp rcrb cmpsb (bad) rcr xchg sbb frstor rcll stos gs daa jp push stos xchg stos addr16 sbb lahf insl jmp out lcall add push (bad) shrb (bad) cwtl cmp push lods jbe int push xor imull repz les pshufw add dec and nop jno loop mov sub mov inc or imul ret cwtl or adc cmp mov imul sub mov dec bound mov push popf dec pop sub and fs mov mov setne out mov jbe in in popa (bad) mov mov les inc sti cmp ret pop inc jb lods out xchg or cmp add test stos dec fldcw fcompl testb test xchg in fwait mov jmp xor pusha push dec inc ljmp jecxz or mov inc pop adc jp jnp xchg mov aaa mov and scas dec jmp mov mov mul loope lods jmp mov insb cmp ss adc mov (bad) mov and cmp (bad) mov inc out inc stc mov push cs inc fs mov (bad) jne fnstsw adc dec pop lea pop or (bad) push push das xchg adc or jnp sub mov fcoms push aad movsl push sbb test or push data16 js or pop or inc out sub jp fdiv aam or dec lcall int3 aaa push scas jecxz or lcall movsb dec nop gs and lret jp sub adc mov lea dec cmp xchg cmp push push xchg iret fdivrl enter test int3 bound aam mov test loope jbe adc lret stos inc in mov mov test adc je adc jo cmpsl inc (bad) icebp fildll add sub leave push imulb xor add xorl xor xor pop ds xchg inc mov xor adc inc xchg pop cli out ljmp xchg mov adc jno pop push mov outsb cmc stos out (bad) addr16 push (bad) jecxz add inc ficompl test mov adc adc sbb mov enter js sub push out jnp roll and mov in cmp sub (bad) popf sti push mov push stos shll jnp addr16 (bad) fwait or dec cmp mov hlt adc outsl mov not adc pop popf scas (bad) mov lods cltd add psubq push mov rcrb scas jns mov mov adc outsl or xor mov mov fidivl mov mov inc inc and mov dec lods sarl mov loope lret sub add scas out aad xor iret xor sahf or mov fiadd jge ret test mov pop fisttpl cld push stos xchg pop sti sbb ja inc imul add cmp push movl pop shrb mov mov sahf fstps push jp (bad) lock ljmp scas nop inc fs fidivrl jp test push addb sahf loope sbb mov sub inc jmp cld out dec dec fiaddl push (bad) imul and pushf mov test into jbe shll mov fwait test pop test adc fiaddl out in sarl imul pop push cmpl jp inc push dec cmp (bad) outsb mov lahf cmp call push xchg add orl sbb add cwtl or out jecxz and lods icebp jbe roll mov clc lds sahf (bad) xor jnp or mov cmpsl cld js pop push fbld iret aam jecxz ds lret mov or fs aam cld and repz inc adc sbbb mov pop sub pop pop in (bad) ficomp lods leave data16 insb inc (bad) xchg ss or sub ret mov incl in push ret lret rorl repz mov pop fsubs lret outsl mov cmpl rolb pop ljmp push dec sub mov imul out repz out cmp movsl cmp movsl (bad) (bad) ss in loopne fcoms clc stos pop mov push test mov test xchg xchg sbb sbb es sbb mov int sbb addb xchg mov aaa arpl decb jne leave mov test insl aas jno lahf dec xchg mov adc or cmp push loope mov jae nop sbb cmc pop adc inc les data16 jecxz sub lret adc faddl mov lahf ja pop cs mov cmp fldt mov sub insl xor mov ss rcrb add in icebp jp xchg dec loope mov xchg arpl fs push jle stc jns lock cmp leave or mov mov loop mov add push push loop pop leave jae jge mov sarb out fisttpl xchg gs loop sub cmp stos jnp mov cmc pop data16 in sbb shll inc insl adcl mov mov in in ja pop lock stos mov popf ljmp mov in push push xchg push cltd pop inc test fchs mov out jg fistp cmp (bad) pop in mov scas loopne jb outsb push sub dec sbb (bad) call jmp das (bad) out or mov rcr push sbb cwtl sbb sub push dec data16 xchg scas movsl fsubrs adc mov int bound jmp ret jae rcrb inc lahf lods add xchg loope je xor push pop mov notl ret xchg (bad) push gs cmp jb inc sub add push aad mov andl add in xchg pop push pop xor pop pop jno loop mov mov pusha movsb fsub inc shll pop imul imul aam out add add pop ja sub stos pop nop fisttpl sub jnp sbb mov dec (bad) jge sbb xor ret repz mov sahf push (bad) or sbb repz dec (bad) daa je xorl mov dec mov sub jae add xor push sti popf in outsb xor cmpsb lods push add mov das or cmp or or repnz add cmp (bad) je (bad) xor pop bound and ror test std call les sbb xor xchg cltd sbb or pop cmp fs aam push pop dec sti mov mov daa cmp sbb push xchg ss pop dec lret cwtl and aam xchg mov sarl fisubl dec bound push bound lods sub xchg dec add mov push push inc aad call subb (bad) mov (bad) mov les xor cmp and jne int (bad) lock jp std xchg sbb push das ret sub sbb mov xor add rcl xor test (bad) aaa icebp add test pop xchg jp jne sub and popf pop das cmp inc xchg test xor mov notb sub aam imull rcll pop mov dec aaa dec jg dec fsubs pop pop lcall leave push push sbb daa mov lods and cmp xor xchg mov mov sbb mov lcall and mov mov (bad) push repnz andl ror inc test pop inc icebp xchg test outsl inc lea dec and sub in sub rol ljmp sub pop mov jb fs inc inc or cmp xchg lock sbb jno adcl mov dec rcrb jae (bad) mov dec sti mov adc movb jnp lods arpl inc (bad) cmc (bad) aam mov push jb mov cmpl idivl xor repz push push mov outsb fwait xchg mov jmp cltd repz inc push cli in jmp (bad) (bad) sub add (bad) (bad) repz push call cld (bad) data16 sbb mov jb mov cmp mov xor (bad) push repnz jbe or pop ret xchg mov jo push test adc loopne mov bound xchg push add mov popf mov int mov loope mov fsqrt adc xchg call fildl mov (bad) lret inc call (bad) sbb cmpsb les into sbb add add scas mov (bad) andl je mov out xlat xchg sti xchg outsb jb xor xchg shrb movsb xchg pop push cld cmpsl inc out jmp xor push lcall data16 ficom rcll lea (bad) add cli loopne xchg fistpll mov mov ss dec and (bad) (bad) mov outsb xorl jno (bad) aas fsubrl mov out mov or or jmp pop sub or ds jle jo dec popf ds xchg sub push jns fwait sbb xor or rolb icebp push xlat gs sbb sub test pop loopne das pushl rcrl mov push mov daa and xchg mov xchg repnz add pop cmpl loope and dec adc pop inc jecxz dec mov (bad) jb push mov addr16 ret notl lret push (bad) sbb jb adc clc cmp push sub dec fwait mov or outsl int add loop out xchg ficom data16 xchg insb dec (bad) jl pop fcoms lcall jl adc cmp add clc pop js repnz or sub clc lcall dec pop dec movsl add (bad) xor mov mov jmp hlt ds adc mov inc cli sub jne cmp inc mov pop (bad) mov inc je mov xor ljmp pop push bound daa dec inc loope shrl xchg repnz mov test lret jmp inc jno pop xchg cmpsb or (bad) or insl mov cmpl jmp mov push fucomp dec lock rolb int3 mov sbb out loopne cmp sub push cli jnp mov pop (bad) lock les ss xchg or pop add (bad) movsl mov inc dec jae mov insl fcmovnbe pop pop xchg adc jmp mov adc fxch push dec push and lret sbb jg sub sub insl (bad) enter test cmp mov pop dec loopne cmp aad out sub mov cmpsb jne pop pop cmpsl addr16 push pop fucomi cld (bad) cmp mov and popa jecxz fistpl push adc std mov sahf (bad) adc mov sarb sbb xchg mov add das insb cmp or jecxz or lock stos cmpl mov test test sub rcrb lea test nop out inc outsb jle inc pushf jno sbb xchg fsts fstpl or cmp loopne cli mov ret mov mov mov inc jno rorl insb movsb lods inc xchg dec cmpsb mov jbe (bad) repz adcb test or pop or sbb sub insb adc fstp sub (bad) icebp loop repnz repnz cmp push loope cmovb lret cmp fucom imul jne jmp pop pop inc sub inc lods mov inc daa and sub jg mov movsl (bad) jbe addb cli in inc mov mov inc pop lea mov xchg mov mov dec dec push xchg movsb dec xchg into push ffreep dec mov dec xor cmp lds jmp xor dec dec sbb test push movsl orl rclb cmp out jbe lret mov int xchg xor mov jae inc pop adc movsb xor pop inc bound sti popa out mov js leave push inc int int leave aad aad dec pop dec stc mov and xor jae rol mov cld imul add (bad) hlt add mov fistp push xchg sbbl fwait in bound push scas sub gs in xchg xorb or scas cmpsb loopne fnstcw fidivrl inc cmovl setge aam dec push frstor mov xchg mov stos jb pop xchg or xor inc (bad) jmpw pop dec mov mov outsl xchg in add insl adc test mov cmp cmpsl daa pop pop mov mov stos ljmp or scas scas rcr adc sbb scas ficomp std fmull inc sub insl jg fldcw aam xchg outsb aas cli pop cmp lret aas mov pop call xlat lret cmp repz fwait aaa outsl fidivr aaa outsl fdivrp fild add aas jne out jno xchg or add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fstl add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push and jecxz icebp mov fs (bad) fnstcw xchg mov sti insb cltd push negb frstor lods dec jbe gs mov notb mov idiv jge (bad) xlat out js jl add add decl cli xchg inc (bad) and mov pusha mov stos leave sub push mov popf pop jns lods and test (bad) jmp repnz jno mov in xchg les aam jae sub std ds mov loop and xchg arpl mov fisttp ret scas sbb aad cmp les jno adc nop sahf xchg test xor cmc mov and out (bad) (bad) (bad) pusha jge xor inc mov outsl lods inc cmpsb faddl adc mov xorb sbb lods stc (bad) es dec das test jl push dec mov loop dec mov into insl xchg fs push arpl jbe imul ja inc sar out inc mov adc cmp rcll cmp aas push fisttp adc mov xchg or xchg mov lods gs adc dec xorl cmpsl mov into inc ss cwtl mov xor rcll xchg out pop fs ss sbb (bad) lret mov inc fcompl cmpsb mov loope push jmp xor push sub pop fstl fistpl mov rolb xor das je lret mov ds mov mov adc ret add push aaa clc stos cmp push adc pop das insb out loopne loope out insb cmc fdivs loop sarl inc push add outsl inc pop outsl lret push (bad) pop pop repnz popf jo ja mov std bound mov push add jnp int3 inc (bad) scas popa push adc inc in mov cmpsl bswap dec sarb push ljmp lcall ss iret sub cmp add xlat or nop fs push loop xlat xlat mov inc mov fist dec imul sbb add (bad) xchg mov dec jecxz inc mov ja,pn sbb loopne out out and fidiv mov mov (bad) nop mov add cli cmpl lea (bad) sub pop (bad) adc lds shr sahf xlat call lea sub xchg enter (bad) hlt dec push stc mov mov add call (bad) lcall test adc adc stc push rcr mov pushw fistpl ret pop rcrb fistp les adc test mov (bad) sbb adc mov int jmp fidiv (bad) jl aad in test inc mov aaa scas cld mov aas das xor and add cmp jb adc cmp mov outsl mov and cmpsb mov inc push nop xor inc ljmp add mov icebp xchg xor jmp or jne cmp out inc cs (bad) cmc mov lock mov fmul rcrb sbb out test pop adc push rep push ret xchg lds cmpsl aam subb pushl out (bad) mov mov jg sbb int sub mov lret (bad) xor test fldl arpl lods outsl sbb shrb mov out shll push inc pop ss pop mov in call and xor pushf outsb loopne mov jne mov outsl call dec js or cld mull xchg fcoml loope and gs xchg ret inc sub inc movb shl sbb pop push mov aas cmp flds sub in mov popa (bad) shrb iret and sarl out xor mov cs mov or add dec cmp mov or arpl test call lods pop cmp pusha scas or sbb insb sbb (bad) push roll xor sarl inc clc jae dec (bad) push cmp (bad) les sub mov pop in add sub and dec test jnp cmp mov ret ds fdivrl mov iret scas sahf xorl call push outsl jbe int3 test xchg fucomi clc push rcl sbb cmp outsl add push xchg (bad) mov cltd cmpb (bad) hlt cwtl lods push xchg lods repz in mov leave dec iret shrl ss jge inc sbb jmp xchg pop enter mov pusha xchg xchg cmc mov leave mov xchg repnz push ljmp push addr16 pop jbe dec lret es jb divb scas mov xchg call insb das imul or sub mov and jne call jbe push dec mov shlb pop (bad) xor sub push cwtl jnp mov add jg into pop outsb inc aaa mov xor jp sub cmp mov enter shl ljmp dec mov in push or add iret in loop es xchg stos mov aas ss xchg sub loopne push push mov hlt (bad) mov or mov insl mov js cmpsl pop (bad) inc push or mov xchg mov or mov xchg lock dec adc enter (bad) or into (bad) fsubrl fcoms hlt pop mov cwtl icebp stos (bad) cwtl (bad) add gs arpl jno lock cmp jmp insb outsb ret fiaddl daa popa pop mov lcall fist mov xchg jae (bad) xchg mov push mov sbb jne pop and enter fiaddl mov sub ds lret dec arpl pop (bad) push cmc mov lahf add mov xor or push push xor ja in (bad) dec inc mov fisubrl or icebp dec fistp sbb cmp mov stos inc sub jbe ljmp mov (bad) pusha lcall (bad) push add cli mov fisubl addl or inc pop addr16 adc loope push nop data16 pop or flds in out and push xchg daa test xor add xor lock ret bound popa mov sti jle outsl dec pop xor lock mov out push push das (bad) push test add pop addl aas sti inc or (bad) idivl and xchg les sub test jle sbb stc clc std mov std pop jns xchg int xchg xchg adcl dec dec out sbb ds fwait xchg add pop adc pop mov xchg inc mov cmp outsl mov fwait lods js adc pushf daa test pop lds pusha ja pop add mov loop xor mov pop mov or jle sbb fwait and movsb dec xchg (bad) and fmull mov loop mov lret lret xor (bad) sbb cmpsl cltd mov out ret cmpsl aaa inc or arpl pop pop les inc push bound jae or push mov lret shlb rcr sub xchg rorb jmp dec cmp sub sbb sahf shlb mov testl jle push scas into fucomip fucom gs pop in out push jl test dec inc add hlt leave test stos xlat movsb fwait mov ljmp out in mov (bad) iret in push xchg and mov mov push inc out out pop das test sub ja and pop inc mov (bad) ja inc mov sub dec stos out and js xor mov pop add jne add add add cltd in mov fisttpl xor movsb ret jno cs or stos and (bad) adc or test (bad) lods or mov pop test adc es jne inc pop sub stos fmul fldenv mov in cmpsb mov dec aas int3 adc mov call mov cmp jbe bound mov icebp push mov jmp mov int3 mov jecxz push push adc mov xchg fbstp inc mov je mov pop negb daa lock pop mov mov mov pop mov adc dec outsb xor loope xchg jmp sbb dec outsb sbb jb in cmp imul xlat sub ret je or inc and push adc add or fbld push mov out (bad) jb push rclb cs add scas mov scas out jne adc pop fistp pusha and jno xor pop xchg jne rolb testb (bad) mov loope outsl push xchg push pop pop daa push or inc xchg rcrb cs pop add sbb pop lods into adc lcall pusha xor dec or xchg mov ret iret sbb in sbb cmpsb loop (bad) shrb jae mov push sub in pop enter aas fiadd mov lret mov cmp jge push add xchg jg orb sub lods lret xor add jg push mov inc and hlt sahf mov xchg rcl cwtl xchg leave sahf inc and jg sub or push xchg lahf xlat xor adc jbe popf inc cmpsb out mov sub mov pop je adc mov pop notb or xor pusha jp stos push (bad) jg (bad) xor push ret repz popa adc out aam jecxz push adc movsb xchg mulb lahf lcall push push jge xchg push cwtl pop adc shrd or and scas notl mov ret ja mov (bad) pusha out repnz mov pop mov xlat and fstp call pop test fistpll jle fildll push iret xchg ljmp loopne repz (bad) daa mov clc and pop pop add lahf aam jae out lock dec sub dec xor pop push mov push xorl pusha pop fwait jns xchg aam repz imul imul out cmpl push adc pop repz js sbbl nopl xlat push hlt push add into pop push sbb jne pop (bad) mov test jmp xor sub sub inc xor mov les ss nop addr16 jge fnstcw clc sbb xchg xchg fs push mov mov cld je enter iret mov mov popa jns (bad) test aas (bad) pop sahf loopne dec insb js xchg adc out dec push int3 or sahf and xlat mov incb pop mov fmull pop dec call mov add ret scas ljmp inc cmp push xor push inc xor jne push rcrb lret pop sub pop outsl xor jecxz (bad) insl sub cwtl xor ja repnz xchg mov mov mov scas push aas mov lods xchg adc push lahf push and sbb pop push mov popf pop jmp dec mov packuswb es pop imul pop mov adc stc cmp xor rol fwait les jae mov loope std in jno mov push lods movsl dec cmp sub ror fsubrs mov ljmp jmp loopne jbe cltd gs shll push repz jp mov cmpsl orl sub int3 jno pop mov loop into int mov inc add mov pop int3 test cmp mov addr16 jge in fistp les fwait adc sbb iret inc dec cmp push cmp pusha sti out jle addr16 scas cmp push test in inc inc movsb xchg push outsb ret stos push outsb aaa dec push (bad) out sbb xor fdivl (bad) loope adcl fmull pop pop or mov jmp in loopne push rclb push (bad) jmp cli add sub ss adc int xchg mov add fbstp out inc ficompl dec in or stos xchg cmc out xchg fidivr cmp mov call idiv jmp ffreep jns ret rorl cltd pop out cmp stos mov fdivl icebp in jecxz inc dec jmp mov test pop fdivrl fdivr jno,pt push add push push or mov (bad) iret mov push mov insb fs xchg (bad) push invd mov jl add (bad) ficom xchg xor push xchg (bad) xor jle sub push inc jge cli cmp in das pop aam insb mov adc push inc test push xor fcoml fnstenv push mov test adc inc push mov dec cmp mov out jge stos in inc sub out mov mov sub pop inc les loope mov xor push mov (bad) mov scas pop mov test in xor inc les mov aaa and push sbb pop movsl pushf xchg mov inc imul scas jae lds sahf pop pop das (bad) (bad) int3 mov repnz mov js mov cmp xor pop rcll xchg xchg aas cmc xchg enter and sbb lods sbb xchg mov adc adc adc je push pushf push jp and push push cmpsl inc in mov inc jge adc out into cmpsb xchg or lret jp inc push pop mov jle xchg fidivl out add mov rolb sbb cltd push jne in pusha out mov andl mov jecxz add lods in and scas lods xchg pop jp lret pop or test jns rclb or mov cmp mov stc xacquire imul sbb mov ja sbb xchg aad nop or and sahf pushf sbb daa jmp mov out inc stos shll mov aaa mov js loopne rclb cmp scas mov out repz cmp mov out in mov mov dec mov fisttp shlb pop jecxz sbb jae mov xchg stos rsm adc jp and cmp push mov cmp ret push mov mov push cmc cmpsb (bad) divb mov dec mov sbb test lret aad add mov orl jp lods mov sbb pop adc daa jge mov or imul fnstsw jnp out fnstsw jnp cmp cmp repnz sub (bad) jbe add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push aas sbb rolb rorl popf out sbb pop bound sbb xor popa cmp xor out mov xor std mov pop jecxz add iret add dec test or scas sbb xchg sbb sbb inc loop fdivl fisubrl xor (bad) push jp push in sub xor stc mov sbbb es (bad) ss (bad) insb inc sub dec add daa and aas fimul into xchg cli pushf data16 cmp (bad) je icebp add push shll inc setnp pop cmp sub jae jg mov test imulb mov dec psubq pusha std mov pushf and enter and lahf jge addb cs mov push inc movd cmp (bad) dec lods jp lods sub inc pop sub jbe lcall push fisubr loopne xor mov adc mov dec mov cmpsl jp sub jg arpl dec je fadd rcrb or sbb inc push inc inc popa mov pop les or push leave fprem1 add in sti repnz push jbe loope dec jbe sahf mov ljmp aaa jecxz push inc loop (bad) (bad) xchg jecxz mov and sbb test mov jge push lret xor jp jl ss (bad) js mov dec aam cmp hlt sbb rol pop cltd mov aas pop jne rol fscale cmc inc add lock pop add clc jo push mov lock in popa in xor sub ds repz sti mov and loop cwtl and mov push mov push sbb xchg sarb jno xor cmpsl cmp fistpll inc dec sub test rclb push jp les sti cli jae cmpsb dec loop jmp insl adc mov inc xor fs dec push adc ljmp mov fmuls dec inc push adcb scas push inc xchg push push rol mov push or outsl xchg movsb pushl scas inc jns call in ds pop cmc scas jp inc fimul or sub jo inc mov in aam stos lods hlt push pop daa decl test mov jb pusha (bad) ja lock cmp xor ss xlat xor push sub push jg jne imul dec (bad) movsl mov pop inc cmp mov leave push arpl and cmc adc jb iret je sub push xlat pop cld adc cmp fsub cmpl iret leave test jg (bad) not (bad) ja and and add aas cmpsl dec ret in add mov sbb (bad) (bad) push xchg jg sahf mov mov ljmp xor jae dec inc adc inc pop xchg mov gs xor pop or mov cmp leave test jmp inc push push inc inc sub pusha pushf mov rolb dec jmp in xor xor mov pop jle rorl add sub js cmpl jbe (bad) js pop scas aam and sub and or sbb mov mov inc inc mov out popa insl xchg pop add pop cmc mov int pop fstpt imull or hlt inc fistpl ds add mov pop aam mov cli iret rcll ret mov inc xlat jo mov ds xor sti sarl sbb test (bad) pop mov sbb sbb cs inc adc (bad) outsl pusha lahf lds pop daa fistpll jnp call rclb pop push dec fsts std leave subb int stos xor pop sub cmp imul sbb xchg rcrb xchg dec mov test popa pop mov dec mov jg xchg inc mov push fisttpll adc movsb loope popa add sub xchg mov mov push inc or xchg adc jmp jo popf xchg mov loop leave add cld xor test ljmp orl xchg push cwtl cmpsb push xor scas adc mov dec add test pop push jecxz out js cmpsb mov inc mov cltd leave cwtl xor inc loop ljmp int int adc into out in out cld mov xor adc aam lock fs mov jle cli pop in cmpsl and and mov push inc out das pop in sub push hlt xlat jle and xor jecxz,pn jns fimul je (bad) or jae cmpsl fidivrl lret jp mov popa pop xor dec hlt lea xchg add sbb adc cmc nop xor sbb ret add and push push lock sub and mov sub lahf hlt mov adc mov jl sbbl repnz iret mov cmp inc std inc call mov shlb cmpsl jno push adc dec fbld xor mov cmpsb dec pushl clc test mov (bad) sbb pop sbb jecxz psubsb mov test xchg jg (bad) pusha les mov cmp mov arpl stos pop jmp pusha inc fstpt ljmp push cmp push push ret add mov test push mov repz sbb mov out pop cmp insl push lds stos or or (bad) lods stos imul jb or ss aaa push sub outsl repnz xor sub jg ss loop inc or sbb push xor mov (bad) xor in add outsb rorb adc pushf aam cmp sbb push lods pop ds push cmpsb sahf push popf push repnz push sub rcll and cmp mov psrld fcmovnbe mov flds out jns in in call mov cmc arpl leave push adc das dec out (bad) xlat imul mov ja mov mov ret and dec mov (bad) mov jl jo lcall push jecxz clc aad mov das bound nop push inc cld add sub arpl enter (bad) sbb push sbb scas pop jbe rorl cli jle arpl pop inc iret cmp jnp stc shrb mov icebp mov jo dec mull insl lcall sti movsb and mov fucomip (bad) lock adc jb call xor shrb mov roll and lcall and and shrl int mov sbb lock sub or ret xchg inc jl movsb pop scas add repnz adc xchg faddl pop repnz es dec cs mov pop push sbb outsl dec jle or sbb push push pop add and (bad) in andb add ds (bad) lcall mov cmc add fidiv loopne pop xor mov inc mov outsl mov stc sub lock push push in bound mov das xchg divb in daa cmp pop insl test or sbb cmp jae push mov xor push or fcmovbe es sarb (bad) ljmp xchg ds fbstp stos and leave in lock fild popa pop pusha stos mov in push cs cmp or xchg stos jnp sbb sub pusha and mov mov jbe pop popa jnp push loope int pop test mov sub push cltd imul mov in xchg cwtl fisubrl inc cld fdivs loope clc xor mov bound or xor popa inc or adc mov out xor adc dec es pusha and sbb add adc dec xchg pop movsl arpl fs mov sti fwait xchg mov dec cmpsl adc xlat cmp out cmp dec movzwl loope scas mov loopne dec cmc xchg push mov lret pop aam push and jle push fdivs jbe dec outsl movsl lock adc dec iret jg pop sbb addl in aaa inc outsb and (bad) pop hlt (bad) and enter cmp loopne into fsubs jmp mov fs scas xor dec outsl push xchg cmp cmp sub sub and or or shlb mov mov push test adc insl xlat xchg pop add (bad) jle stos xchg mov inc cltd or mov push jns pop add and pushf (bad) imul fidivl popa xchg pop ljmp outsb (bad) cmp repz shl sbb addr16 loope inc int cmp fisubrl int3 insl insb dec rcll add push enter flds cs bound (bad) cs inc ljmp mov aaa mov push jbe dec enter cmp lret negl and and sbb xor ja mov push mov cld jno call pop xor xor sbb jno aas pop xor mov in mov xor hlt sahf xchg stos xor and mov sar mov sbb pop inc ja mov adc mov inc jg call imull out inc and sub in test push ss mov dec das jl mov and mov sbb mov test popf sbb dec push inc das push in jge push movsl scas jp sti mov sbb scas dec pop cmp dec push and mov jns adc mov sub mov bound sub ret test xor rcr jmp fildl or sbb lds outsl (bad) imul xor cld and lret xchg sbb sbbb pop inc in add add sub cmp xor mov push int ret xor fnstcw leave es lea dec mov insb cltd dec xor xchg jecxz inc add add pop stos arpl sahf inc stos std fwait xchg mov cmp jo stos adc (bad) movsl scas push dec ret add (bad) in mov sbb mov repnz mov cmp aaa sbb into ljmp or lahf adc jmp xchg add jle add mov out cs clc mov xor inc cld pop dec xor or cmp push nop lcall rcr xchg fstl into (bad) fcmovne mov mov adc push sub fistp xchg jg mov je (bad) lock sub lcall xchg pop jbe test test fs sub sbbl inc test mov into fldl jg imul stos adc adc shrb (bad) cmp dec movsb xchg aas (bad) and fidivl push arpl cmp pop mov movsl add jecxz ret dec inc adc (bad) push inc jg jnp mov mov sarb fnstcw call in xor (bad) in clc jb ret sub lods mov pop push cli dec cli mov mov mov mov test push fild pop push leave cltd pop xchg lods mov mov and out jmp rcll inc scas adc sub pop mov dec jnp cmp jge and in (bad) xor in imul xor pop je pop xchg int3 push es mov ret ljmp (bad) jecxz imul lds dec in scas inc fldt xchg loope dec jno cmp divl inc pop fidivrl or movsb jg fmuls sbb mov push fwait into xor sar notb push xchg arpl mov xchg jae mov imul jecxz mov sarb mov outsb dec dec or push icebp stos sbb xchg mov push data16 mov xor fs loope xchg in and (bad) jb das mov mov js sub mov jno push in insb dec sub mov inc iret out xchg and cmp xor cmpsb xchg stos mov sarb cmp pop cmpsb jg imul pop add aam cmp cmp ds nop jg insl aas mov jb mov mov stos loope mov lods xchg fisttpl xor pusha in inc push repnz bound inc mov sahf push jmp rorl lcall ret imul mov loop insb lods dec jg xor sahf push test rorb mov cld into nop add je jl test push fildll sub in loop movl test mov push jmp inc cld mov daa ficom lea frstor push and jo xchg or out inc (bad) sub int3 daa test jnp add pop sub rorl xchg cmp pop imul push jo out push dec sub imul cmp fidivrl ret pop pushf xor xor lock pushf jge ret test ja and pop daa out inc lea adc out mov push xchg mov cmc lret fstpt adc push inc mov xor push repz mov dec lcall mov or mov adc test adc pop ljmp pop in addr16 dec shlb rolb dec mov mov imul in xor sub daa xchg mov jo lahf cltd mov test (bad) mov es pop or pop ja fcmovne scas xchg mov xor pop cmp pop fiadd mov out xor out or mov andb jmp (bad) jns out stc jbe xchg and mov cltd aad pop mov sbb sarl in js imul jns jo push push mov push mov lods (bad) (bad) lods or and mov push xchg sub or push mov pop mov and cmpsb add in inc cmpsb sbb jnp inc test jmp lcall push int3 push pop aas xchg lahf fstpl xor fldcw jb sub xchg rorl pushf (bad) lock bound ret lea fsqrt jg enter xchg hlt xchg mov lcall xor sub adc or lahf sbb and pop scas cltd pop into stc outsl sti in cmc mov (bad) mov xchg sub lea in cli add inc scas pop mov stos push scas pop mov stos push scas (bad) incl add pop mov addr16 add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push inc adc and dec dec ja nop push cmpsl test dec jmp shll inc dec mov mov repnz rorl loopne cltd dec outsl push adc and les dec mov into push imul inc cld test jle pop sub and jmp pop fstpt (bad) insl inc clc outsb fucomi dec adc fldcw call cmc aas adc fisubr push mul ror and shll test xchg mov sbb xchg lea push and sahf inc xchg dec mov sbb or dec test jno cmp fdivl movsl repz jne popa cmp and xchg dec test lods jne pop dec add xor pop js idiv push out (bad) mov outsl jecxz xor adc pushl sahf clc jbe scas xchg pop add das jbe bound jl mov ja nop loop pop mov jne lods add insb out sub mov das lds push loope or arpl mov mov lcall fiaddl dec mov out mov (bad) movsl loop adc loope pop push int3 (bad) push pop mov cmp test lds aam data16 lret mov shll nop push mov mov jnp push ret out mov sub jns adc mov jp pop aas aam sbb imul lock inc js or rcll imul inc cli xor push ss aas lea aaa out out sub (bad) fnsave dec int3 and cmovno icebp adc and dec or fcomps xor xor es sbb pop pusha js ret jmp push movsl add mov test imul mov pop push pop out es or aas cld in push daa sub and lea dec inc imul xor inc mov mov in mov mov or jo clc push jg ss mov mov mov xor scas cmp xor mov mov jl cld mov lret mov pusha cmp pop lahf call mov (bad) adc push (bad) rcrb aam dec cli fadds xchg ds jae push test push cmp in lahf aad cmp into mov mov pop mov js mov mov push es aam loope xor outsb inc loopne outsl (bad) sub ret or lret jge std enter xor pop outsb cmpsb xor cltd push push dec (bad) lret push or out or daa mov in aam into mov (bad) dec inc les or out aaa or pop mov arpl pop xchg dec xchg outsl xlat xchg or loopne push pop push pushf mov fcomi push rcl pop leave jmp movsb in mov enter mov int3 mov insb dec cli fmull aaa (bad) jl pop popa cmp fistpl loopne adc mov xchg ja push sub dec jno ret mov inc inc daa jmp push loope cli lods mov push fucom xchg out outsl arpl mov xchg lret jmp jecxz mov bound shrl lcall dec popa add push add sub and cmp mov mov lret and add ljmp xlat sub sti nop cs cmp sarb popa popa add out xor (bad) dec stc (bad) dec mov push xchg fs cmpsl mov test ret repnz inc jne mov inc xchg jno shlb in sub mov lods jb aam pop imull mov sub mov cwtl jbe clc mov cmp test xchg mov pop mov (bad) xlat adc xchg jno sti scas dec mov out movsb or outsl xchg adc pushf pop setg dec neg pop ret mov sub push jg jle push push dec adc jnp jnp pop test and xor arpl dec fwait pop test sbb mov mov and out push sub int3 push mov or mov mov int3 sbb (bad) push and push pusha inc in add insl int3 test jno xchg jmp push mov mov jbe jmp mov in ficomp sahf cmp xchg data16 ss sti xor test mov mov cli inc fwait dec gs out fs adc add fsubrs xchg test frstor in sub mov mov lcall push cwtl push inc out outsb cmp add repnz fcmovne daa dec sti sub mov mov testb bound mov in loop sub inc (bad) into repnz inc inc js mov jg movsb rcl jo ja mov scas in cmp adcl call sub jge push cld lods pop ljmp xor cmc in mov sbb mov lcall mov sub pop push or xlat push data16 stos add rol pop aas ret inc jnp add cltd scas xor mov cltd jle xor clc ds fdivl push loope fsin sub add cmp mov mov cmp sarb arpl in test repnz pop je add jne cmp fisttp push inc insb jp xchg inc sub ja data16 push dec or inc (bad) cmc xchg les cmpsl pop push lods inc test adc dec dec sub cld repnz out mov ds dec hlt (bad) lea into pop addr16 mov aas loopne add push leave or in lahf clc sahf dec jge mov clc cmp add out xor imul sub and sub scas sub inc mov outsl mov push aad pop mov jno insb mov loopne mov ficoml sub push push push les ljmp dec fdivr pop sub mov add leave (bad) jno cs in inc push lahf (bad) cmp dec xchg sbb (bad) xor enter mov psubsw lcall jb mov add repz arpl js add ret jns xor ficom out push popa jecxz cwtl (bad) pop leave mov inc xchg jmp test jo pop add fs adc cltd addr16 xchg arpl stos leave imul pop cwtl fmuls xchg test and mov imul in je fsubrl jae mov sbb roll (bad) or xor sub jmp popf insb (bad) (bad) pop add dec (bad) push dec mov mov inc mov adc sbb mov add or mov daa (bad) cli push fstps push add (bad) jne in fwait mov mov cs mov fmulp jg mov ss in outsl test inc sti aaa mov bnd pusha pop inc loope add dec mov sbb pusha fisub fisub ja stos aas fistp dec and (bad) ficompl push leave ds repz cmpsl ss enter loope imul mov mov jecxz or xor das or inc fisttp cmp scas repz movsl jle pushf je and lds movsl and mov xchg movsl test mov mov mov xchg fs jp sub cmpl add fwait stos fisub repz xchg xchg pop dec add jne fimul lret dec dec nop notl out push push mov ja or out lret sahf sub cmp dec lea (bad) dec jmp xchg or lods jne test (bad) jb mov mov aam push xchg sub scas push dec add lahf stos imul adc call (bad) dec ja popf add sbb mov imul aaa xchg push lcall lea mov test (bad) mov cmp jae mov data16 push notb ss mov popf aad or jbe shlb xchg dec stc test inc dec and and dec pop mov aad fcompl sub lds aam jbe cwtl loopne imul xchg jge enter mov popa cltd mov inc js dec adc pop imul (bad) int cltd and (bad) cmp (bad) push fs nop or mov cmp sbb mov adc lock jbe scas mov ljmp adc cs (bad) and adc pop xchg add xor sub jnp fs lea xor xchg es mov dec sbb (bad) in xor push in xchg cltd lods and sub dec cmp pop ret xchg pop sbb sti (bad) outsb or je mov mov lcall int3 lcall enter xchg cmp rorl mov push aad pop das pop dec pop mov sub (bad) mov jl pop fist sub cmp sbbl int3 fisubr in mov lahf mov dec mov and cmp loopne mov fldenv push inc enter xchg xor mov frstor popl push js scas insb sub add into add sti inc or inc cltd scas xlat xlat lahf dec adc rcl pop pop test jno jo sub mov fnstcw sbb xor dec lock jnp inc xchg dec jae add stc adc repz push or jns jo jge adc xor xchg push sti xchg leave mov cmp cmp sbb push push daa ror (bad) ficom cmp inc mov pop or pop mov mov and and test bound data16 repz scas jns sahf (bad) out sbb fmul push enter pushf fisubrl mov aas inc lret sbb adc or (bad) aaa fisubr inc xor inc and inc sahf sbb jge cmp inc inc je mov test jo pushf dec outsb cmpsl call hlt scas adc gs mov js popa stos lea xchg lahf or imul lahf and lcall mov fsubrl gs mov (bad) outsl mov xor fiaddl mov mov mov inc sbbl in add cli clc mov int xor icebp mov add push jo or int (bad) dec adc dec jl jle hlt sbb or int3 push push mov fisub inc mov addr16 push inc cwtl sbb dec pusha pushf int3 jecxz dec rcrl xor dec lret add add push outsb jmp xorl cli jl sub push and stos movsl cmc inc lret int mov pushf test mov ficoml pop xchg mov gs adc lcall ficoml xor ljmp in cld (bad) fisubr nop (bad) icebp loope cmp test and int3 cwtl push push push push out movl stc inc cmp pusha aad enter (bad) lret mov fcomip dec push xchg add call dec pop pop ds inc (bad) in pop test push push add sbb sbb divb aam js xor jbe (bad) cs movsb mov xchg hlt jne mov pop arpl rcll test hlt or pop jne jp push stos pop lods dec andl adc and fcomps jb adc in aad sbb xor cmpsl sub data16 or adc lea xor (bad) hlt call inc repz std rolb aas sti inc (bad) jne dec jecxz,pt push movsb bound dec popf rcrl cmp mov das adcb adc cmpsb mov loopne into arpl pusha rorl call inc ret pop popf arpl and mov in stos inc sub stc fcmovne mov into ficom not sti xchg sub hlt lret sbb sbb mov mov fsubl pusha ret test repnz rcrb rclb aas add add lcall jge push mov dec mov (bad) idivl dec pop and jge fmull add imul or push fwait scas pop loop test jmp pop pop jnp dec mov pop popf mov sbb inc push fstl jns jnp pop pop imul add movsb call cltd shl xchg mov sub insb sbb mulb adc lahf enter jle fwait mov xor sbb cmp imulb cmp xor cmpsb das pop xlat cld jo int3 dec push je and pushf int jae pop sub dec sarb push sbb mov sub add push or popl lret push mov sahf jge push int3 push cmp sub fldln2 inc inc sbb jno jne mov into mov push ss fisubrl aam pop dec jl ss jnp aaa lds dec mov pop imul inc and (bad) push pop push add and lahf call or push and scas jmp jle mov cmp adc jmp loopne cmp jle popa data16 fsubr push mov mov push cmc out xchg jb out fs es push outsb mov mov and mov sub adc jne fdiv cmpb and fwait movsb scas jae jne in fidiv daa dec mov scas dec add jns ficomp stc aam cltd adc push repnz mov or pusha stc and push pop inc mov or sub movsl in add lsl call jnp inc bound repnz int loop aam test cmpl ss cmpsl int3 cs popa push mov mov cmp dec xchg or movsl mov mov inc mov mov (bad) dec in ss lock aas imul sbb ljmp stc std cmc scas lret add xchg sbb out pop movsl sub (bad) cltd sbb pop inc mov mov leave push fdivrp mov pushf popa and cmp std out mov arpl (bad) rcll jb movsb imul bound mov or or je (bad) mov cld cmp ja je xor (bad) imul mov cld cltd jl jbe out pusha scas dec xor pop rorl lods fwait enter add es mov es mov pop lret jmp push mov cmp cmp aam loop and push mov out xlat jmp jmp sbb pop xor pop cltd sbb gs jle pusha adc call sahf cmp mov iret sahf cmp decl add aas mov in hlt xor add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push and ret (bad) icebp push xor cmpsl repz lcall or dec lahf out cwtl popa mov (bad) out fnsave jecxz stc sub ljmp in push in movsb xchg dec fbstp mov mov jmp ret mov rolb mov aam jnp addr16 cltd repz pop push in sarl cmpsl es xor pop mov jge outsl into adcl sub sbb fimul fwait test mov and pop mov lret xor (bad) jno jl push (bad) dec pop mov test test in mov push sbb adc bound or int dec loope cmp jno mov testb pusha adc js pop mov mov mov ljmp movsb loop (bad) and pop pop cmc int3 (bad) (bad) mov scas add mov call lahf mov push movb int imul mov push out (bad) dec mov fadd jg mov adc out fs iret xchg pop fs imul arpl add pop jl xor dec jo enter jb insl sbb xlat lock rolb inc xlat hlt fsubs mov sub arpl and rcrb imul xchg mov in xchg add mov ja inc push cmp xor and popf repz movsb dec xlat repz stos or dec jno cld xlat and aad sub fwait mov jmp dec sahf in jnp and test mov inc and xchg mov xchg int3 dec jp add cmpsl outsb cwtl dec fldenv fidiv mov aad cmp test std ret mov inc leave xchg hlt sub jo mov nop inc nop pusha lea int mov inc gs cltd sahf mov (bad) (bad) mov xchg mov ficoml push xor pand pop fldenv outsb push and push cmp imul cmc sti push jge hlt cmp ret jne lret fcmovnbe pop leave out push dec pop pop jl xchg dec stos lahf das iret jl inc inc sub fcmove arpl jae aam stc test cli (bad) aas sbb inc xchg mov mov sub icebp imul adc div cli sbb ljmp (bad) mov lds call sub repz iret outsl mov test cmp cmp lahf gs roll inc dec push (bad) adc clc pop mov jmp (bad) hlt jo insb jge sbb jnp aas or (bad) mov lcall imul je jmp mov and mov push add fstpl daa out xchg adc pop (bad) jecxz sub mov stos cltd sahf enter mov and xchg call outsl shr fisttp adc mov add subb cmp das lcall xor fbld shrb adc inc mov or xor in or jmp xchg sub dec add or mov mov ret cltd inc mov popl xchg orl jbe adc ret sbb push in pusha mov mov push lds movsl inc or popf mov fiaddl inc stc xchg shl cmp in enter pop jmp sub lods pop lret mov jae popa pop jle add dec ja cmp je sub fldt xor adc inc xor repz pop jecxz or div or or sbb push in daa out pop loop mov (bad) mov aam js insl mov sti out pop lock adc and out adc fidivl or and icebp or fdivr daa es stos xchg dec pop daa jb aas add add aaa cmp lock mov int3 push es mov mov pop push sub jbe ret xor aad test or sqrtps les cmp adc call (bad) fadd jae test xlat int fs jo dec sbb dec cmp dec mov clc (bad) lret and pop jo pop mov into (bad) rcrl pop lods fidivrl xor adc push popa sub gs imul (bad) enter cwtl lods push pop int3 jle mov add lods arpl mov add stc push add es or push mov lds (bad) adc inc in mov ja mov stos addb mov pop pushf add repnz and or xor sub fdivrs xchg and mov push mov out dec pop pop pop inc adc insl lret (bad) scas mov push jg sbb mov popf int in pop in int3 loope xor mov mov push jmp xor outsl pop jne and in cmp or flds test in in push xchg xchg test roll stos cmc or sub push dec outsl xchg mov dec rcr mov loop ljmp clc or cwtl popa and mov pushf add mov test jle push lods call stos lret loop push inc out xor sub sbb lock sbb add dec cld pusha add lcall pop mov add xchg push ds fwait in inc sbbb add sub ret mov jle bound xchg mov jp mov nop xor cmpsb inc mov or dec xlat in dec add test pop cmp mov aas sarb mov jo fwait xchg ret and xchg pop add rolb push adc xchg jle dec jecxz sbb shl jne jecxz lret std cmp xor scas dec stc mov dec fldenv push mov push cli (bad) sub iret jne jns ret add sbb test shrb adc or jns movsb outsb test push lea xchg sysret in aad mov xor xor dec ror jg push inc push and pop out mov (bad) cmp nop mov (bad) mov cmpl xchg nop inc sbb es xchg (bad) in sahf lcall out xchg cmp ljmp hlt int3 pop xchg xchg jle mov jp (bad) call cmp mov mov movsl add xlat or or mov inc stos push mov out mov sbb cmp pop mov and push jns xchg hlt inc test js cmp mov ss fs clc pop outsl sub cmp pop mov push xor addr16 inc add sub dec jmp mov inc xchg mov jno movsb inc or aad push imul mov cmp rorb mov adcl in rorl fstpt dec dec lret pop aas out push push decb and jecxz inc dec in cwtl mov sub stos inc nop nop subl push loop fcoms aas hlt and imul loop mov xchg jge and clc xchg inc rorl cwtl fsubl fdivrp mov mov cmp test fisub adc cmp in add inc pop jno push push lahf mov call jmp scas xchg mov pop sbb js in (bad) dec lcall mov jle sub out scas scas test cmp movsl mov notb mov mov push fistpl dec xor adc jp sbbb inc dec movsl xchg push pop mov jp stc and sub faddl mov cmp stc call ja imul mov ljmp push scas cwtl lock mov std jnp lea cltd ret or push sbb fisubrl mov pushf dec out test mov mov mov jg pop lock push push cmp clc xchg insl cwtl cli (bad) scas add xchg adc hlt imul aad and xchg adc lods mov gs pop (bad) ret pop cld mov gs push (bad) scas out jbe pop rorb pop cmp sbb mov and cmp test outsb inc sbb outsb jns ret sub inc fbstp xchg movsb xor pop int or test adc adc add out mov jecxz call pushf daa (bad) adc cli inc mov insb popf ljmp ds (bad) sbb push pop in cmp rol notl pop mov pop mov pop cli and add (bad) testb mov push xor mov adc ja mov cmp xor add xchg scas nop stos sarl maskmovq (bad) lock xor js cmp std lahf adc arpl add adc jl dec repz ljmp xchg adc hlt add ljmp push insl es or mov dec test mov ja mov repz pop mov addl and and ljmp fldt gs ret jmp cmc inc or push lret outsb jne test pushf dec add jo mov rcll push in or (bad) ljmp in or cmp hlt or xchg jnp dec std mov loope dec and cwtl jp pop stos jo push insl lock push cli xor nop push push mov xor jecxz subl ljmp dec outsb dec in mov flds pop adc imul in dec (bad) sub xchg inc lcall cmp movsl pop lahf (bad) dec mov pop test in sub xlat out fsub imulb push outsl ds rorb cmpsb xchg aaa jnp mov stos aam add pop test enter cmpsb sub xor xor ret not leave movsl adcb mov push mov and je imul outsb sub mov mov int mov sub inc stos push sub imul clc dec sbb mov xor mov (bad) sti inc push pop arpl mov mov stos call aam (bad) jmp pushw movsl pop aas fiaddl stc xor aaa ficomp or sub pop xor int3 sub mov dec lea push cltd push out inc adc pop pop sahf cwtl jb adc iret clc je mov fiaddl shll jb pop mov push jl pop adc fbstp and movsb fistpl int3 mov or shll dec xor add lods repz jnp fist movsb les add idivl loopne fnstcw vshufps cmpsl add and sub scas and movb xchg mov fldt test add int3 fmul sbb loope jecxz loop mov bound iret rcll jno dec incl fisttpl pop lods fisubl pop and pop scas (bad) xchg inc add pop dec pop fdiv arpl xorl jb xchg pop xor push xchg test push cs mov stc (bad) and dec test mov movsl in xchg pop mov into sarl dec lods cs pusha addr16 inc jg and inc xchg cltd mov fndisi(8087 mov (bad) jecxz lret push mov insl mov cltd cmpl popf in sbb cmc fildl enter int3 mov jno rorl test es or cltd dec sub xor stc add (bad) mov add cli xchg add dec mov call leave xchg pop loop arpl sub mov adc xchg sahf (bad) sbb dec mov incl es mov sti fcoms cltd inc cs sti loop cmp xorl adc xchg xor loope sub adc sub add addl inc or mov int3 xchg (bad) adc inc pop stos test mov fist jno push sub int3 inc cmpsb js cmp lret hlt push dec add nop mov mov mov mov mov mov xor cltd fucom sti les (bad) out inc mov lret sti test lea (bad) push rclb sbb cmp cmp and pop pop ljmp inc jmp mov mov pop dec iret jnp mov cmpsb xchg out xor fdivr inc sub scas insb stos (bad) mov imul and or dec push jg xchg push xor pop jecxz add bound bound push gs pop mov loop syscall add ret cmp imul inc push dec addr16 push rcrb in cmpsb sbb sar aad xor rcrb jo clc mov mov sub lret and sbb fsubr cmp enter sub rcr xor dec dec jns js and fnsave mov pop xor mov int lods dec mov push add sbb jae sbb jle xchg xchg push push cmp stos cmp or int3 pop mov loopne and nop jl xchg inc stos rcr xchg andl loop xchg xlat lret push push (bad) cli and dec inc cmp inc inc add push jp adc sti mov fistp push or push test xor mov and into in out sub inc mov mov jo push std jns movsb out cmp faddp mov lret cltd out dec mov cmp inc or mov stos sahf add cli movsl xor (bad) dec dec and pop dec lds jge int3 cmp xchg add sub imulb dec sahf enter mov mov js imul data16 rcll ja lds stos ja pop dec and add mov sahf jge push sahf or xchg cs mov inc cmp adc push jo jge sbb push in in mov cltd (bad) mov fwait outsb iret cwtl les lods frstor leave adc cld adc xor mov pop jne adc sub pop xchg (bad) sbb fdivrl loop add pop push cmp test xchg shl and mov xor fsts stos (bad) and rolb lret xor (bad) ja add xor adc dec ret and sahf ja mov mov stc ja or pusha or ret sarl xor lds pop fwait loop jg jbe or iret xor pop fwait int and popa add jl and out xor in fnstenv jnp in fnstenv jnp in jg add jg mov (bad) mov mov add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push pop adc add adc add mov je sbb and pop mov push cmp mov dec call idivl xor add test sbb int in aaa imul push (bad) mov pushf cmp hlt pusha mov lods xchg xlat cmc dec xchg lahf scas sub and test mov push data16 mov fstl pusha pop inc stos arpl inc pop ja rolb cli outsb mov add push int jo jb pop push scas sub fidivr xlat xor sarl cmp sbb and jae ljmp les gs mov fld mov adc jne testl dec xchg loopne dec pop lcall out jno jg xchg add push or shlb xchg hlt arpl sbb sub mov xor sbb jle ja inc fdivrl or int mov inc scas stos jbe ss mov mov cmpsl push mov mov push jb push adc mov rcrb cmpxchg (bad) mov in dec lret mov mov jl loope sbb in out out and or push cmp pop or outsb mov and mov mov repnz ror (bad) lock jnp add inc out pop jne mov and mov mov cwtl sub fisttp jnp lock (bad) mov (bad) insb aas pop dec push fsubrl test cmp fimull adc int and lods sahf push movsl adc xchg leave jmp inc roll cmp test arpl xchg cmp adc pop inc call mov inc (bad) adc add pop shr jb imul pop es xchg dec inc xorb lret in shll (bad) cwtl idiv neg (bad) ffree pop shr mov out mov out pop jnp out and jne lea mov dec sbb jp add push leave fs loope shlb out dec div es (bad) ret lcall jp adc aaa xchg jl cwtl mov add andl mov push push inc jbe ss enter mov jl gs fild fdivs push stc shl dec (bad) xor in jns mov inc inc ret jl rorl in pop mov cmpsb xchg imul mov aaa or insb sbb lods out or shrb rcll push mov pop pop loop frstor inc gs fstpl jecxz mov jmp and sahf mov stos push test jb or pop sti sbb pop (bad) lock sub xchg sub jno andb cmpsb xlat xchg cltd clc xchg out pop scas jecxz or dec js cwtl int3 es cmpl (bad) fs aad pop jno mov push pop pop mov stc sub mov lret mov cmpsl lea mov xor xchg ss mov fildll movsb ss push inc fcompl sbb test and xchg (bad) or or popa jmp in sub pop pop mov add fnstsw pop sbb test push ss (bad) cmp add push ret daa jmp mov push fisub dec lahf dec inc cmp cmp mov flds and push jnp add stos mov fldl xchg gs mov ss clc sub sub (bad) jmp (bad) mov loope or and inc loope sub sbb rcll fmull or fisubrl inc cmp and push mov fidivrl movsb je and shrl fdivl int xchg sub adc insl xchg jnp nop movsb lahf arpl jnp hlt sbb addr16 lods inc or push inc xchg mov inc jnp sbbl cmp sub cmc inc dec jno mov sub mov xlat scas popf push pop xor mov movsl ficom pop dec dec cmp gs sub pusha adc sbb push pop dec xor sub ret call xchg add int3 sub xor add aaa es (bad) cmp repnz xor inc ret jo imul jbe lcall xchg or movsb and push sbb pop or lock jp adc je movsl (bad) sti roll notl push pop push mov ficom clc mov (bad) leave int xchg sbb push mov mov scas sub push mov pop int3 (bad) ficompl inc mov push icebp jmp shlb idivb call or mov fldt mull fistpl fwait js int3 cmp inc sbb dec ret add push sub mov push loop aaa fmulp and (bad) loop in adc mov pushl mov add mov in mov aam movsl pusha int3 repnz jb xor xchg cmp sub das in add pop out sbb xchg fs in add rcl jge jecxz cmp mov cmpsb mov aaa xchg sti push arpl add inc dec pop insb fcompl and ficoml pushf cmp push (bad) fidiv lret movsb xchg mov test lcall xchg jp xchg leave loope mov xchg loop test pop and mov stc loope iret push sub xor sahf fsubl roll push imul and inc push pop push nop mov mov (bad) stos lcall inc jne sbbb jp mov loope or out xor dec push (bad) insb leave mov push fnstcw ret pop iret push push sbb ret clc out (bad) dec mov leave lret imul out xor out xor test outsb cld fchs lods cmp ffreep jg push fadds xchg out adc not mov outsb mov xor cld pop orb lods jb imul mov (bad) movsb mov cmpl push sub daa mov sbb (bad) lret in fwait into mov jbe mov add fs iret dec xchg sub call pusha add jbe es hlt aam add pushf addl push int3 sahf outsl es mov roll daa xchg push push xor out cmp lahf and cwtl fisttpll lock sub pop xor push int3 in adc cmp push jae mov cmp es push dec es or inc ret xchg cmp int3 push fwait icebp into mulb shll fildll lcall scas test mov cmp push mov jnp xor sbbl and sub insl cmp cmp mov mov and and (bad) arpl sub and lahf dec or cmpsl rclb (bad) arpl mov loopne repz pop lret mov shl fnstsw xor les pop jg mov jbe add pop stc and (bad) scas mov mov xor add pop push push push nop or std xchg divb dec fstpt mov dec into pushf jae bound add cltd lods sbb jns (bad) (bad) stc vpavgw jae bound pop fstl mov out cli and movsb push jo mov inc pop int3 and hlt sarb inc jp ja iret into popf test stos pusha imul mov pop pop xlat sbb push out xor aad cwtl lds cmpsl or jne adcl dec dec or jl add in cs cmp enter loop and aad aas xchg into test push xchg jg stc pop loope adc add cmp jecxz ljmp je mov jns push mov mov scas inc jne nop cltd jmp out lret adc push jo sub leave je jmp cli cmp inc imull xchg add cltd cmp (bad) xor pop (bad) out jp out sbb pop fimull repz loopne (bad) add pminsw cld and dec fiadd imul push xor jg lahf mov xchg std mov je cmp sarl in je pop jmp arpl pop sbb or lret xchg xorb leave adc and ret and and cld xchg adcl sbbb pop fimull loop push stos mov imul (bad) dec jge adc add sbb insb test fadd xor scas adc mov aam iret lret mov insl enter (bad) stc jnp test fwait jg adc xchg in int3 lea jmp xor test and inc push xorl jmp xor add dec add cmpsl mov testb imul pushf dec aaa add std dec jmp mov mov test dec push (bad) sub adc iret pop cmp addr16 aaa xor jmp pop dec cltd jo push ret or idivb mov inc pusha xor push mov dec sub inc popa pop mov fsubr gs jb scas (bad) xchg cwtl imul adc in pop scas out fnop enter sub add xchg cmpb imul lahf lret popf xor mov test push xor add lods cmp jg inc into enter jl push repz mov daa mov ljmp mov or add adc in lret push dec icebp lds mov out xlat cli pop mov jl in std rcll sub lret xlat in std add stos adc (bad) fidiv jae xor mov ret dec repnz data16 ret pop jns cs outsb (bad) sbb adc movsl dec clc out mov test (bad) cmpsl mov cmp jle cmp or jnp mov xchg xchg fs cmp je dec lahf imulb add add rolb jnp and cmp push popf inc sbb sub sbb es push scas xor mov (bad) or pop adc jle xchg sbb adc sbb pop repz pop fldl push mov imul dec decb fsubs lods (bad) (bad) int3 mov sub arpl adc adc loop ficomp mov enter inc cld add sbb add lea pushf flds rorb sbbb in fcompl (bad) xor test mov in mov xchg movsl fcmovnu sub pushf (bad) mul jge rcll mov xor push outsl pop (bad) das mov push fisubrl sbb lcall pop jmp lods xchg mov daa sbb pop fisubr ds fdivrl aaa int or pop (bad) out stos or add sbb nop inc pop lods jb loope push sub mov sbb adc (bad) fldt xchg xor or cmpsb xchg sub cltd ret mov fxch ss stc pop scas xor (bad) scas dec add stc mov sbb and daa (bad) jbe jle push lea jmp sbb inc aaa xchg xchg out les (bad) insb push fimull ss xor in mov aas xchg xchg push or mov mov movsb and mov mov add xchg (bad) outsb pop xchg ficoml aam xchg sbb jo int3 push jns mov xor rolb jae inc inc sub in iret cmp push das or pop orl test test mov mov lds shrb scas ret aas dec rcll sub and jecxz cmp jno or insl adc adc pushf (bad) add push call nop outsl cltd loope leave xchg scas xor xlat stos out xchg xchg (bad) ljmp inc scas push dec jae cmpsb push stos lret dec push mov sbb dec int sub or jae and mov xor lcall (bad) mov pusha cmc add mov sbb xor xor cmpsb outsb cwtl and mov mov or or (bad) out hlt cmp xchg ljmp lahf lahf mov xor xor mov push mov daa imulb (bad) faddl adc es sbb (bad) addr16 test in cld popa stc mov shrl idivb insl pop mov popf dec lahf jbe into andb dec and lock adc imul mov mov xor mov sarl clc jne jmp clc and lock pop push sti out imul push cs cmp dec test mov add mov (bad) mov aam orb je ds mov mov adc mov or xor std xchg push aad and mov popf pop neg rorl clc aam int3 pop rcrl aad add jmp or xchg dec mov in loopne call out rcl xor scas xchg test cmc stos repz and push mov cltd jge (bad) icebp xchg in aam scas xor adc and das fnsave mov xor dec xchg pop mov mov push push test adc push mov and xchg mov out out lcall pop mov push mov ja decb jge jb imul sbb dec pop (bad) hlt js movsl cmp int mov test mov stc fisubl fsubrl or negl dec ret (bad) sub push in xchg int js mov ljmp orb ljmp gs out into mov dec in pop sub jmp bound or mov fisttpl int cli jb lcall mov lds mov push aam ds xorl sbb dec dec into repnz gs ret xor sahf add mov inc inc out es out fxch arpl sbb cmc imul xchg adcl in mov dec adc int3 jmp mov mov pop out es sbb mov movsl je or stc sbb mov es adc inc pop mov in js xchg fcomip add (bad) out nop dec scas mov sub rolb or dec fnsave fnstenv dec das andl mov jno lods jb jmp sub push (bad) mov in sti insb jp inc pop sti mov scas mov popa and mov mov mov xchg push clc jmp aad push scas pop mov stos push scas pop mov lcall add incl pop dec lret push push into add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoms add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb rolb mov shll push jno dec dec pushf dec dec sahf mov cmp mov outsb cmpsb mov cmp mov mov add cmp cld das jnp push dec sub pxor cld adc jge test mov mulb popf lret xchg pop push jle cmc xchg and out jno push sub dec (bad) push jge push inc cli jne mov mov rcrb dec inc sub dec out das sub mov jbe jbe push mov stos mov add dec std imul mov daa cli lods (bad) push add pop push jp inc jge inc pop or push pop or jb imul cs cli movsb push movsl (bad) mov dec ja mov mov push (bad) dec aaa dec cld add fisttpl or inc adc inc repnz negl ds jp lret mov dec adc adc inc std sub pushf in or cmp das xor mov adc or add or xchg mov sbb shlb fwait xchg test out es adc mov test mov test (bad) fdiv mov loop in mov xor idivl in sti test jb stos mov lock or sub push and cs add xchg fsubrl push mov out sahf dec cli call cmc dec inc and or outsb inc outsb jb sub xchg add cwtl sub cmp in xor add arpl sbb addr16 add dec shlb stos mov jg pop ficompl jb mov pop insb cmp (bad) mov xor rcll sub in pop push mov xor icebp cmc je stos adc pop sub xor mov push jne mov mov push jnp lds sti fist fldt in mov mov std lods notb sbb cld setae cmc mov mov mov pushl sbb popf inc dec adc jo test pusha dec push xchg ds movsb push ss sbb sarl adc popa fiaddl arpl mov (bad) and jge xlat (bad) adc daa in cmp xor dec push jl into jmp scas dec lods inc and xor les repnz push pop xchg jmp inc ja aas f2xm1 (bad) test push cmc jle lds sti push lods push testb (bad) sbbl mov xlat and out aam pop (bad) xor shlb push loop stos or jecxz jns int mov aad xchg stos pop and mov movsb add rcrl inc push rol jg xor enter jp inc pop lahf add fist pop sbb ss cmpsl lret sub cltd movsb out clc mov inc ljmp mov pop aaa nop (bad) pushl cmp pop outsb inc mov aam mov mov xchg in iret imul cmp pop enter scas cld dec (bad) mov jo add adc mov push inc cmpsl dec stc iret and ret frstor fbld (bad) out mov and mov mov loop xor pop pop cmpsl das je dec mov xchg jnp out (bad) mov not cmp or inc (bad) aas outsl addr16 mov jmp mov inc push stc ss mov dec mov xchg jb push ja mov enter lret (bad) movsb cltd rcrb int3 fistp inc mov test sub cs ljmp jnp xchg pop dec lret push push push fucomip add mov pop jno and ret mov sub inc push (bad) lods arpl sbbl outsl loop add repz push cmp jmp test push and cmp call (bad) ds int jle stc call es les xor sub jge mov test stos mov cmp sbb jae adc mov xchg or loope cmp mov mov push and das pop add cli inc jmp cmp dec push inc insl roll test jge hlt clc lods mov push aaa push imul mov jp cmp jns fld aas and repnz push test loop test push adc xchg cmpsb adc adc add cwtl mov movsl fwait adc imull or mov aas push cs es negb adc mov gs push cmpsl gs bound ljmp pop dec jno cmp icebp rorb (bad) aad mov push ret (bad) in imul test pop pusha jnp cwtl and cmp mov fsubrs aad cmp addr16 cli mov push adc push jno add iret pop cmpsb adc cmc leave gs inc nop pop push mov jp sbb cmpsb fstl dec ret movsl lcall es data16 push jo mov or cli add push jecxz (bad) daa clc movsl clc xchg stc sub in test rolb push fstl cltd dec fabs mov jl iret out imulb xlat inc add sarl test cmp stos push (bad) and in aaa dec jno push push nop adc mov add pop je add aad aad repz push mov stc push mov pusha stc xchg xor xor sti mov mov cltd test cmp sti mov push (bad) mull pusha arpl jmp and push call pop xchg fsubrs dec hlt sahf xchg mov scas push xlat imul mov dec in cmp jae mov arpl mov cmp loopne or mov imul pop rolw sbb xchg push add inc sar mov sub push test cwtl cs es mov cmp inc mov subl insl insl (bad) lods mov daa dec push ret icebp stos fdivrs mov inc mov in pop mov pop jmp add jecxz addr16 repnz jnp rclb pop jp rolb jnp bound jbe and dec ficomp fstl xchg bound sbb lea mov loopne (bad) and sub es out or push lds lods mov shll mov fwait adc push rorl mov out cltd aad pop push sub ja add fsubl push inc or shl test in sbbb out rcrb cmp lock mov cmc dec leave or push mov adc xchg jo in cli fildll cld popf jo push fidivrl add std insl xchg sub sub cltd aaa loopne outsb dec into nop push ja adc mov jno xchg jnp pusha jge xchg scas jmp or test mov and jo out dec mov xchg jle dec cmp pushf cmp aad insb xor pop jmp ljmp hlt sbb mov pop jo xor xchg stc mov adc int3 xchg pop push push and mov (bad) int fs fsubl or orl test mov nop adc mov adc scas or inc push and (bad) xchg loop repz fild pop icebp pop std faddl jns mov inc cmp (bad) cmp jecxz push dec in jmp or sahf popf jl fcmovnu xchg push xor push dec lods add pop mov loope rcl mov loopne out adc push xchg xor push jbe imul push mov jecxz out pushf rcll add mov out sub lret gs popa mov incl lods inc lret mov cmp int jbe loope rorl int push xlat fstpt jo inc ret sbb mov lock push push and ret pushf pop stc mov inc js into ss xchg inc mov jb das fisubl xor ja fadds mov add or (bad) push add pop jp fwait push icebp fs pop mov (bad) push xchg cmp (bad) imulb inc and cmp adc jb out jmp xor loop xchg lahf push add xor aaa test inc push and xchg jbe (bad) enter push aaa scas ret mov out je cmp lret repnz clc jae jmp (bad) or mov jo mov mov stos pop mov mov (bad) jl cmp and leave add in in aad test mov aaa xchg das lcall subl cmpsl xchg ss mov xchg aam adc jne arpl cmp sahf mov je ss and mov lock push cmp cli icebp scas test jnp lds sbb sub shll jge sahf cmpsb lahf xorl or ds mov fcoms dec jg mov jge test cmp scas xchg repz mov cmp cmp cmp div (bad) movsl cmpl push inc fistpl mov repnz movsb mov je and cmpsb xor leave je adc xor int xlat xchg inc (bad) and rclb mov jl lea out push add pop push pop sahf addl push ret (bad) neg shr lret sbb xorb pusha dec es add decb into mov inc and cltd mov add mov scas aad and ja mov outsb inc shrl outsb mov in xlat xlat daa negb dec out stc push xchg fnstsw in jae ss jbe les jle shrb and sub and hlt pop inc sbb add mov sub adc addr16 xchg ljmp and mov and popf leave je add pop setns or mov orl cmpsl adc mov jae enter shrl sbb out addr16 outsb dec adc pop and cmc repnz imul jp pop test iret jbe call pop xchg inc mov mov gs pop jo dec jl fcmove cs mov repnz inc out xlat iret lahf fcomps aaa mov aaa pop (bad) mov xor std adc jmp (bad) aaa jge cmp xchg xlat stc test xor js es adc imull pop push js or int3 popf movsb xor jbe into insl xchg rcl data16 jbe call sbb ret xchg fiaddl hlt pop clc dec sbb cmp xor inc out cmc icebp loop mov scas call mov fadds ja out add xchg pop out jmp jnp lods ds dec add mov outsl and sub cmc shlb mov cltd sub aam jecxz mov dec dec int stos aam fdiv mov xor imul cld and mov jle repz fbld insl (bad) pop pop push inc cmp jne or movsl ljmp pop jl mov and push adc data16 mov mov jg rcll xor (bad) test rorl mov lret pop sbb dec cmpsl out jge stc or cmc test repz and cmpl lret pop mov sub dec lds fwait or add out jno dec in xchg pop loopne mov in dec cmp inc outsb clc xor imul out scas pop (bad) popf movsl dec push jge sub push aad das lds xchg out mov std fnstenv icebp je xor test mov sarl mov inc mov mov lea or adc ljmp dec pop and rcl mov or or rcll push fwait xor mulb dec ret jle in repnz jae and test jl dec add ret or sub lea cld dec stos dec stos sbb icebp fnop pop ljmp stos imul (bad) xchg mov in or aaa add out pop inc (bad) jnp sbb xchg mov lods sbb add pop pop add push test scas and rcll out sbb pop push sub lret mov add orl mov adc pop das add sbb int3 jmp pushf xchg icebp stos call adc in inc repz xchg sub pop lahf xchg mov sub dec sub loopne lods mov xor and stos mul inc popa in pop jns push dec cltd cs xchg and int3 xor cmc xchg add lods add pop jbe sbb push stc daa push xchg pop and sbb mov out pop dec and jp and push push adc push jle jno and fldt adc fisubr lahf mov push cmp (bad) jbe popa cmp je int3 cld mov cmpsb pop pop mov pop cmp pop fisubrl jmp xchg and loopne outsb hlt xor or leave je imul mov push xor iret push dec mov int3 leave ljmp enter push ljmp push lods scas fsubs xchg mov push mov push test rorb xor sahf aam lret (bad) mov xor (bad) ja cmc loope lea imul out push call xchg pop stos mov rcr cltd notb test jb test mov out pop mov cmpsb jbe (bad) gs sbb sub mov test jge nop dec xor sti nop std push push (bad) adc jnp push adc out imul in pusha cmp mov lcall jg loope repnz cmp cmp insb dec loop push mov std out jns xchg add jp push in decl aaa ret ss int3 and cmp jnp sbb jno dec cmc inc ret cmp ja (bad) sub mov inc push sahf scas and mov movsb adc push cmp mov push flds notb test ljmp imulb leave sbb fild push adc jmp cmp ljmp fildl pop (bad) cmp std xchg fmuls xchg pop push movsl addr16 andl or mov int3 ds add scas lods mov lahf mov cmpsb push sbb jb ljmp fsubs sbb cmp xor dec push xor push jp aas lea data16 ss sbb sub mov lods cmpsl jp loope xlat sbb push js mov bnd hlt loop mov das pop mov mov das pop mov verr jg inc lcall add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fistl add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop adc mov shll inc jp call inc push int nop scas insl dec aaa dec cmpsl rcrb push inc add and out into fistpll fdivrl mov pop add aas gs adc xor inc imul push and push pop mov mov in xchg xchg cmpsb pop sub popa xchg call icebp xchg cmpsl jecxz xor sub arpl cmc mov loope cmp cltd and cmp (bad) out call mov inc xor xlat pop mov pop add (bad) out jp push clc leave mov push pop push adc insl mov sub fistpll push in pop xchg inc sbb jnp mov incl cli xchg pusha aam movsl sub outsl incb dec fldenv movsl out sub xor adc repz out push rcr pusha dec je pop cli xor popa fsubs (bad) aas pop add and js or enter test push leave mov ja movsb xor popf test cli mov into push mov out lcall ds clc jge fcoms sub aam inc mov (bad) mov test test inc pop cmpsb mov inc jle cmp es mov test xor (bad) int3 int xor mov add dec (bad) jne in push faddl ficom arpl fxch mov cmp mov (bad) rcll xchg pop loopne in sub xchg push mov dec sbb outsb into scas xchg pop fistp pop stc (bad) push (bad) popf aam push std xor mov int jp jl outsb add iret mov jnp push sbb add push (bad) in aad sar je and jnp jl pop jl or xchg sub pop cmpsl aas imul mov sarl ds loop insb sar stc jl dec mov mov dec xchg or test ds pop dec pop mov arpl (bad) jo mulb mov and (bad) mov enter fist decl ljmp movsb iret loope outsb pop add dec dec push dec xchg fwait jg imul adc mov cld adc mov pop mov cli cmp (bad) mov pop popa add outsl rolb arpl jo push ja test adc mov adc push lods mov xor icebp mov arpl xlat mov popa cs pop hlt mov jmp scas outsb sbb mov adc int3 mov push mov dec adc push int mov outsl mov cmp jle push mov out das cmp loop xchg int3 cmp mov add aad stc cmpsl inc cmpsl test jae,pt mov sbb ficompl mov imul and nop or hlt rcrb inc enter cmpl or xor jg inc stos (bad) ss and or icebp in test inc dec rcl adc or fcmovnbe add icebp xor sub mov push sub jne out sbb mov add repnz cmc xlat lcall aad aam cmp neg mov add (bad) stc mov ljmp cltd sbb xchg out mov out mov xchg sub adc jno ds neg or aam push mov mov popf inc data16 pop scas icebp das (bad) sbb cwtl (bad) movsb xchg dec and fwait ja sbb lea (bad) sub push daa cmp pop aad in outsl cmp and (bad) sbb js push inc rcrb scas test inc sbb in repnz and inc cmp cmp scas fistpll xchg (bad) mov mov pop mov dec ret lret dec lods out dec xlat or mov mov mov xor sbb mov mov sarl sbb repz inc adc and pop inc xchg and xchg adcl lods push pop adc cmp pop or sbbl aas xchg in mov xchg inc mov rorb pop mov mov iret mov add jbe and adc and cld jae cmpsl add aam daa icebp dec lds push in lods lea daa pop pop adcb cli outsb mov jo push pop call (bad) push (bad) jnp xor test les sub push inc je xchg jb fisub fstp scas inc ss rorb lock or out cld sub pop pusha ficomp js mov popa dec ret mov ja (bad) xor in sbb xchg fs inc add test mov (bad) int3 outsl jae inc pop int xchg push aas imul jmp enter icebp cmp imull (bad) jno movsb daa js lods ljmp jecxz sbb add and aaa test cmp xchg xlat les lcall jp jns and xor pushl adc loope test sub xchg inc lods cli mov pop into cmp sti lods sub mov aas xchg or aas xchg (bad) fstps pop push psubsw pushl adc jne out out mov insb xchg dec mov push (bad) or add in out (bad) mov stc fildl out imul and inc aas fmuls mov cmpsl sbb test clc sbb sub mov dec add jbe (bad) fidivl add mov fimull inc fwait in call lcall cmp mov (bad) enter aas mov cmp mov and or in xchg push aad push cmpsl mov popa lret out js data16 sub cmp pop outsl dec inc push jmp es ret (bad) jbe iret cmpsl mov pop incl sbb adc jmp pop enter xor clc dec iret pop jne inc mov xor sub cli mov loop pop dec mov add in outsl push pop call pop inc pop lods mov xchg and inc nop (bad) xlat test pop sti jle inc data16 cs dec mov cvtdq2ps es fs jnp stos in push mov aaa inc lcall pop les dec xchg (bad) mov xchg daa into in fisubl aam mov int aas dec adc mov std adc or xor jne push aas mov (bad) (bad) xor (bad) incb cltd mov pop cmp mov movsb lock (bad) jl popf mov imul popf xchg jnp cmpsb mov push xor call aas push cs icebp jl jns push mov or xorb (bad) fdivp je cmc inc fisub add cmc mov test repnz ss or adc ret leave lcall mov or add pusha dec xor jp cmp push xchg mov cli je cwtl xchg mov sub dec gs pop fimul subl out mov pop dec testb adcl in ss aad push push inc dec cmp dec sub stc jmp add inc push in cmp xchg int out daa js mov pusha je lret cmc bnd iret out jmp sbb inc loope test lods and pop aas lcall and imul out js movsl or push jge in out lock test aad (bad) pushf fadds dec nop scas notl test mov push push and sbb imul fstps mov adc and push pusha and xchg cmp push mov sub (bad) stc push nop shll int3 mov xor mov ja icebp mov jns push popa stc dec dec mov jbe and dec xchg xor mov das test mov xor sbb hlt sub gs (bad) fmull and out add sbb mov sbb jg and push and aas xor add sub inc hlt pop mov loopne loopne push loope in lods xchg movsl lret mov push es ret dec std imul aas jmp push fs jo out cmc test sbb insl push (bad) and data16 jmp lcall pop push jge xchg stos inc and shrl xchg inc jle fcmovu sarl imul jne add sbb cmpsl push mov test fcomp lods movsl mov pop cwtl mov bound repz aad or hlt aam xchg dec rcll stc sub jns in inc xchg into lods loope test pop or aad mov mov and and mov pop (bad) mov add test fwait sub mov cmp loopne mov pop mov gs repz aaa inc cmp dec jp cmpsl sbb sbb (bad) movswl bound insl scas dec push xor out add adc mov cmpsl insl adc dec inc lret lcall or push sbb cmp add mov xor jl xor bound push lret gs bound inc sub adc cmp scas in mov int aas nop push leave mov push aad cmp mov sub jbe cmp push xchg pop out push push or pop rolb les xor mov push loopne das ror cs xchg gs fs xchg mov dec je sub mov fwait inc adc dec jle adc sub stos insl fmul xor mov xchg sub dec push xchg das dec mov daa jecxz pop pop lcall scas xor add add sub xchg lock push jns outsb data16 xor cmp jge sub cli xchg sub xor push sub push lcall cmp pop cmp mov pop sbb idivl fadds pop xchg inc (bad) push mulb pop popa test (bad) test cmp (bad) imul mov pop adc dec dec pop pop aad mov or pop xorb push xchg xor rcll scas sub and lea ljmp mov xorb mov jg sbb or aad bound mov call ret out sbb repz sahf clc mov mov mov and (bad) outsb mov jge and ds mov mov adc sbb scas les add rclb xchg idivl jmp shl jecxz xchg loopne insb cwtl ss pop lahf jo mov pop outsl mov pop loop stos mov imull dec (bad) es (bad) pop ret int pusha or add jp cld cli (bad) mov data16 daa inc movsb push std divl xor inc mulb (bad) xor mov stos test lret movsb lret sahf ds mov inc icebp or cmp mov or popf pop jmp push adc mov test inc pop jbe sub popf arpl sti and jg ljmp jecxz inc inc sbb fyl2xp1 mov fiadd int3 adc ljmp enter add pushf lods xchg std fisttpl lahf aas int sub xor loop int (bad) sub jae daa xor fidivrl pop jo xor jb addl xchg cmpsl dec xchg nop cltd jge loope push push pop adc xchg mov push xor dec lods inc or popf sub jge jnp inc xchg into adc mov jecxz int jnp clc insb mov popf cwtl shr pop fildll push mov sti movsl sar aaa rorl lahf xchg push clc xchg packuswb jecxz mov fidivr fisttpll inc jbe enter mov pop cli sbb inc call enter fnstcw xor leave andl out push mov inc nop out into mov push dec sub mov push lcall lcall fiaddl dec jno jns clc mov out fsubrs cld xchg xchg inc inc sbb scas call rclb inc cmpsl push arpl adc jmp push jmp mov adc je add dec pmulhw movsl clc js xchg xchg adc adc les jl xchg xor test cmp aaa adc mov fiaddl or add push and mov icebp pop ljmp sbb dec mov loopne js cmpsb mov bound out mov daa mov xor adc xor mov clc jmp movsl mov add test jmp mov lds jmp arpl jp add sub cs or arpl arpl cmp aaa push aas pushf ret or adc aas cmp incl cmp movsl xlat fsubl mov add aaa mov fildl cld bound popa xchg sub aad lret dec jmp lret lret shl ljmp mov insb push add cli dec mov mov dec rcrl mull mov push insl dec shll rclb pop fcoms fsubr in push push je push je cs adc (bad) or faddp repz mov mov ljmp sbb mov ja push jle fstpl mov dec cmp loope imul repnz (bad) adc push dec iret dec outsl imull xor out jp into fisub lret test test out loopne mov mov pop xchg jns std addr16 sbb and aaa sub dec dec push xchg dec int (bad) jo jp ljmp in xchg mov mov rol dec sub mov jp ss lods stos dec adc scas adc sbb inc add cmpsl jmp fnstenv mov inc out popa pop pop sar out inc and stc mov lcall ret negl mov push mov xchg inc cmc dec loope inc xchg push pop adc imul cmp inc push cld pushf mov jbe ja cs push adc out or add add ret mov fdiv (bad) jmp in sahf setge mov push rcll xlat adc mov outsl addr16 stos adc fcoms repnz lcall cmp jge mov ror outsb cmp scas adc sub cmc repnz mov arpl fnstenv jnp in fnstenv jnp in fcos sbb and xchg add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add loopne add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb jecxz icebp rcr dec dec push fdivl xor int3 aam mov dec dec xcrypt-ecb cmpsl dec ja popa jb je je fcmovnb sbb dec mov icebp jnp iret mov lahf xlat jmp cli add adc cmp mulb roll jb fstl dec push call enter jne,pt pop mov hlt lahf out adc mov inc jp imul aas or movsb pop in xor xlat push cmp mov dec xor push out jnp stc mov lock or mov push notl (bad) mov push xor dec and mov push adc fs push jne orb (bad) decb sti imul aad sahf mov pushf loopne repz add das mov lret xor loope pop and xchg test xor cs loopne ret fbld icebp aaa push int pop neg lea xchg push dec mov loope inc xchg icebp repnz in push out cmp cmp insl loop enter sbb aas cwtl dec and out shrb pop mov es push xor cwtl pop scas mov jns mov cmc cmpsl cmp cmove and xor inc xlat les sub ffreep mov xor notb adc adc lret or test fdivrl scas (bad) mov mov (bad) pushf pop push sub push dec movsl adc inc jmp lock daa cld cmp js mov mov pop cmp out xlat mov movsb mov shlb mov cmp hlt sbb jle or out repnz aad rclb xlat pop sbb fdivl and loope repz xor mov out mov adc leave push hlt adcl jnp in sub mov sbb cltd inc push mov scas sti pop aad cli clc fwait sub add addr16 jge shrb inc shrl ja out and sti inc mov mov and push sahf dec das adc mov sub cs popf sti js add jl or xchg js lea out sub arpl test push dec mov pop (bad) fstpl (bad) sub adc ljmp hlt mov out pop aam (bad) fs inc or fmull bound jbe push inc lods or loope mov jae mov mov mov aaa inc imul dec adc fimull rclb push jl mov and push cmp and popa shrl xchg fidivr add add adc sub fistp mov loope mov (bad) push roll pop in xchg push mov roll scas jno subps pop mov or pop subl inc clc lahf in out fwait mov leave cmc inc pop js pop push mov fist js sbb mov pop and int3 fcompl push sbb mov inc xor sbb inc cmp mov inc or and push push loopne aaa lock into fnstsw iret push mov clc mov xchg cld in aaa inc jo mov out shr sbb mov iret jmp pop shrb fist jno mov test scas cmp cmp mov xchg add sbb xchg stc cs out dec dec in lods sbb mov sub fdiv pop ret ret mov in dec jbe jo (bad) int3 clc and mov xor cmpsl add adc mov aas ss sub mov dec mov out lret mov icebp fwait push jle fwait cmp inc aaa enter insl or ret or aaa out push lock lods ret insb xor (bad) jns mov bound inc out dec jl aam fnstcw sbb les mov xor cmpsl xchg jns scas xlat pop jmp rcrb ror fdivrs mov mov push or cmp ficoml xchg sub xchg int3 mov cli inc in je fwait stos out cltd int das push repnz pop jecxz das push push in (bad) and adc (bad) push and mov nop sub jo adc ret leave imul daa pop push loope bound lret xor sbb inc insl iret fsubs push pushf xor test sub lods push int sti xchg push pop (bad) clc dec sub and pop stos fidiv in push jmp sub or and xor dec xchg adc xchg fist out push sub enter or call cs loope inc fild ja pop cwtl cli fidivrl add pop add jp ja stos mov mov inc stc push mov cmova out loope pop rol lret mov mov xchg aad cmp mov rclb pop xchg (bad) mov and xorb hlt mov jge sbb out pop inc mov xchg ja pop xchg push dec inc push jecxz cmpsl mov outsl in (bad) xor pop mov jle push scas push scas jmp inc inc fucomi mov in ljmp mov add arpl sbb in loopne ljmp inc movsb inc cwtl cmp cmp cmpsl out cmp or or arpl mov dec push out (bad) mov adc mov sub hlt lds test xchg push xchg mov jne les sub fnstenv mov pusha ljmp movsl add dec jb xor jns nop pop inc pmaddwd xlat in imul loope push mov mov imul hlt inc mov imul int3 xchg imul mov mov pop fwait popa xchg (bad) pop cmpsl or nop (bad) mov mov sarl cmpsl repnz inc push fcomps mov dec push pop movsl push sbb xchg xchg mov in inc mov xchg imul (bad) (bad) loope jnp in push pop int3 xlat js pop fwait dec and add jp lahf addb gs loope fldenv or adc fwait jg cltd sarl adc into pop ret dec (bad) enter jle outsb das mov (bad) pop cmp lods and or lahf adc mov sub pop sbb lods xlat repz test fs test shrl cmpsb jae dec mov jl (bad) (bad) hlt std (bad) dec adc dec mov lods lea fs std mov add fwait (bad) int3 imul mov roll push add xchg aam stos dec xchg ret stc mov je bound popa mov jo cmp cmpsb cmc dec jg sbb popf pop inc ds pop lds cli xchg (bad) aad mov xchg push cltd cld loopne mov sub mov push adc mov mov mov dec mov insb push mov bound lahf (bad) test into sub lret adc add int3 sub cmp dec leave push int and lahf lods jmp mov xor cli adc cmp (bad) jle cli mov jge pushf arpl fdivs mov in test pop in pop repz sub inc pop fstpt iret leave sbb push negb mov popf xor fwait sti test inc pop jg sarl sbb add or clc jmp cltd icebp leave inc (bad) (bad) xor sub cmp pop xchg cmp xchg lret loopne js mov xor jnp cmp into fbstp mov sub pop sub jge ret shll mov add loopne popa addr16 mov sub mov dec pop js arpl sbb add test push push push jp pop jo cmp call mov jno aaa lods xchg push sub dec scas push add jge fsubr loop cwtl pop subl xor test ds inc add icebp sub sub aas jle cmpsl xor inc pop push fsub out inc xlat outsb leave and test outsl imul mov xor rol push cmc test test and or jmp xchg test jbe pop fs inc or sub nop sub mov push mov (bad) mov mov icebp mov shll into (bad) jo push dec mov adc int3 xor adc into or stos insl pop sarb jmp lret hlt loopne jp sbb hlt in mov loop add and jge scas repz mov ret cmp outsb sahf lea ds lock iret dec test mov mov cmp repz data16 jae aad rclb (bad) sti stos sbb ja icebp pusha (bad) sub addr16 sbb or movsl lcall sub jo or cld and inc and cmpb idivl xor mov rolb mov ret imul xchg test xchg ret cltd sub xchg xor jmp mov xor iret scas icebp mov and js fcomps add ljmp pop fdivrs adc cmpsl xchg cmp addl mov dec popa push push stos pop sahf pop daa xchg gs fild leave mov cld push adc mov add insl xchg cmpsl add mov adc sub cmp mov mov xchg ret xchg xor popf stc lret sub imul aas in repz out loopne push jmp and and (bad) repnz dec cmpsl dec xchg adc pop call pop (bad) xchg lret lods scas (bad) jns cmpsl pop (bad) out scas cld loopne mov xchg daa cli jb fwait mov inc fistpl outsl into cmpsl push inc xchg movsl push repnz cld das sbb cwtl scas mov arpl das lock cmp push push sub and pushf shlb lock xchg fist push push fmuls sbb pop (bad) add jecxz je inc jbe mov mov fisub or add or or xchg push xchg push mov andl or fadds push push mov aas aam cmpl add je mov fbstp cmc cmpl ljmp and mov fwait (bad) adc (bad) push add rcll and notb push push popa call dec pop push int jbe mov inc push outsb adc js outsl pusha das jbe mov push push adc mov pop push ja sub fimull sbb pop push stos lock mov inc cwtl push in testl bound adc cmp popf dec ds ret push dec sbb jns test in fnsave fsubl cmp cld or mov lock jmp fwait dec cmp loopne mov outsb jmp imul and fistp xor mov int fstp xor mov pop roll loopne out or ljmp xor jg daa push dec shl mov pop pop jle jl sub sub inc rorl mov movsb lds ja mov fwait dec cmc fnstcw sahf xchg fcmovbe std adc push fucomp mov cmp xor fcmovu outsl inc in mov xchg loope rol lahf push lods xchg sti adc or aas ljmp push in lret and pop (bad) and mov ds (bad) mull jns adc enter (bad) jg jecxz xchg jb movsl cmp aam loopne (bad) cltd cmovl cli jecxz adc cltd cmp jmp jnp fdivl fwait adc xor stos ja and (bad) xchg in sbb ds (bad) mov test rcrb adc or nop jnp jne xor insb mov and add jbe push xchg bound jmp cs idiv pop cmp add dec cmp jbe mov pop repz xchg jae adc mov loopne ja cltd adc sbb jae adc leave cltd or stc repnz scas daa adc or lea (bad) mov push out mov lcall cmpb pop loope lret mov inc int in ficom cmpsl out mov int3 loop shlb sbb mov gs push and cmpsb inc outsb pop push mov rcrl clc repnz and cmp popa cmp push aas sub sub aas jmp cmp inc dec and popf fisub push dec cld sub mov mov aaa cltd outsl jo lahf bound subl fisttpl cli push sti pusha sub pop dec mov cld pop imul lods mov xor pop cmpsb sub cmp sbb ficompl pop (bad) sbb lods inc inc dec cs add xorb enter mov mov fsubrl mov push sbb mov cmc out lcall cwtl les inc aam jle or or fwait subl aaa cltd dec idivl xor test and sub mov mov mov or mov gs das stc adc out or fistpll adc aam ljmp ss pop loope sbb sub iret clc inc ret adc xchg sarl fsubr imul les pop es mull mov xorl fs daa dec sbb cmp mov sahf rclb (bad) shrb (bad) icebp inc lahf stos inc cmp ret and pop push cmpsb adc add xchg fidivrl push mov xchg shll and jle repz test movsl dec jae mov cmp add xchg or add inc fdivl fwait mov addr16 xchg out adc clc mov stos adc mov xchg sub stos push es (bad) jnp cmpsl arpl sub pop push sbb xchg (bad) adc insl and pop xchg (bad) push (bad) jno fwait or xorl ds adc jbe mov (bad) fs pop (bad) (bad) test sbb inc xor out add lock cmpsl bound mov test cmp or mov (bad) mov dec xor (bad) mov gs sbb aam cltd stos test imul data16 gs rcl pop mov incl mov ss inc out fidivl push inc mov push enter stos sub sbb ss xchg adc jmp jo sti mov (bad) push cmp mov jp call add incl xchg cs mov add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add mov add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push inc adc mov or xchg and and rorb or xlat or mov xor adc push xchg rcrb out iret mov pop mov push add push add pop mov add incl in mov ljmp nop test imul xchg push repnz out stc or inc xchg sbb int3 sbb rolb out xchg xor sbb mov loopne sbb mov inc or cmpsb xlat mov in sbb sub push xor cmp cmp pushf repz cmp scas pop mov popa xchg imul or push ds int3 and das add addr16 out xchg pop push jns in lret popa mov fnstsw push adc imul sub sahf lahf in lcall push je sahf inc and aad and (bad) popa mov icebp mov cmp pop lds repnz roll and pop aam or sbb sbb and and pop scas jno xchg arpl nop xor push lock mov jae mov mov jb data16 cmpsb or adc jg scas mull push in adc mov sub pop lods push adc pushl fcomps arpl add mov mov pop xchg mov push nop sub fiadd or sub lods fsubrp gs dec mov mov daa sub hlt push and dec adc out ffree (bad) fwait loop repz xchg xlat xchg xchg fnstenv int3 cmp mov call cmpb pusha mov aam test ja push pop pop mov scas in repnz push sbbb test sub mov dec cmc xchg cmp push xchg call idivl lock in imul jae bound js mov lret mov or sbb and inc sbb (bad) sahf push mov and and ljmp aad nop sbb or dec mov shr pop push cmp test jp sub jl fidiv mov aam jmp movsb mov test mov or fwait mov sbb mov add dec add mov xor dec std jl jae (bad) jbe and lods jecxz jp cs sub push cmpsl dec out (bad) mov insb inc lods mov pusha ja add mov or rorl lea push or cmpl adc add xchg or aaa ss pop add jge mov clc cmpsl inc xlat js popa xchg push adc mov mov nop ret test xlat sub adc or add outsb rol push rcl jmp sbb fnstenv mov into xor mov mov xor adc (bad) mov xchg adc lcall and push dec jnp pop or das and pop les push sub adc add xchg inc ror push ja inc ret mov dec (bad) pop cmp out inc out mov xchg pop fcmovnbe sti xchg or mov add (bad) mov xchg pop or lret mov jge jmp or repnz dec dec jmp outsl mov (bad) mov fmuls cld cli mov daa cmpsb shrb mov pop jg (bad) dec mov pusha nop adc enter xchg lods (bad) ljmp int3 push xchg sbb dec mov and adc mov jecxz sub test and xlat frstor emms cltd push insb fstp pop punpckhdq jle out idivl xchg in adc fwait in mov xchg in sub cs xchg addb or shrb mov add cld push push pusha jno push add aam fsubrp sbb imul or push in dec in xor pop in dec jo cld and cld xchg movsl push push xchg cmp daa insl pop pop sbb shlb sbb ret or out inc sub cmp mov scas push cltd stc icebp int pop dec jns mov imul fsubs add or fisubr jg in outsb mov js and inc out pop mov mov lods push es mov out push pop cmpsb bound jle xchg jle shll fwait mov cli adc stos jns xorb cli (bad) dec add in hlt pop or mov pop js insl adc cmp pop inc xor or mov test sub cmc xor mov mov dec or sbb jae mov xor lods daa xchg or movsb mov test cs cmp out sarb cmc jmp sbb push fsubrl iret (bad) xor inc push sub dec fisubl xchg sbb pop pop test hlt les mov jle and mov mov outsb call jmp and dec cmp rclb jae sti jbe ljmp data16 xlat fdivrl fstpl jb dec mov jmp fmulp pop iret inc and ljmp dec pop addr16 idivl inc lcall std jb (bad) jmp mov outsl leave cmp (bad) fildll and daa and addr16 pop fiaddl cmc popf push stos mov (bad) loopne aam pop daa test iret dec rclb mov je adc rcrl nop xchg dec (bad) aas mov rclb das xchg orb subb aaa pop mov fcmovu xchg cmpsb fistpl fs mov xlat and cld and sub mov imul fimul mov sub cwtl jnp push shl ja pop test pusha ja sub pop ror adc sub mov xor rcrb sgdtl nop imul ljmp dec mov pushf out ret lahf sarb dec rcrb jg lret int3 loope mov sarl mov xchg inc in mov (bad) pop jge (bad) out or xchg or (bad) iret int3 lods (bad) lahf jmp out pop cld sbb cmpsl cmp pushf or adc or lcall daa cmp cld test aam int inc xor imul sub add aaa pop je stos sbb call lahf cli mov pop test out mov ja cwtl pop mov jmp aad mov or dec (bad) xor and out xchg xlat mov ficomp mov int les push pusha pop sbb add adc std mov popl aaa sub mov dec cmp mov out jmp and icebp fnstcw xor xlat insb insb lret ret push add sbb pop stos and pop imul xchg jno mov dec rclb repnz test mov xchg add push sbb dec mov stos push adc repz mov jbe popf lahf sub or jl dec and push adc and lcall dec mov cmpl xchg aad mov cmp sub call cltd mov sub inc pop fnstcw imul insb insb mov jnp xchg sahf movsb aam inc pushf fisttpll mov aaa pop push mov push rorl mov mov out push subl push pop add je lock out pop sub pop cli or aam cmc lahf test (bad) repz icebp movsl loope iret insb ljmp jmp and mov dec inc stc into xchg js xchg lods mov jns pusha push aad sub or adc mov mov loop lret inc add (bad) adc jno mov jmp jle jnp mov fwait lds inc movsb cmp roll in push pusha fwait aam cmc loopne and mov imul sbb enter jmp int3 (bad) push int3 push dec mov pop jp push jg cmp movsb and or shrl cmpsb mov test adc arpl dec rcrl xchg sub xchg xchg push aam sub (bad) ret add jmp add inc das mov mov insb cmpsl mov je neg fdivrl add mov pop imul out and adc add mov (bad) cmc and loop movzwl mov mov mov sub inc test fwait into lahf pop xor cmp out jnp pop mov mov dec orb inc xor and and movsl pop add movsl pop add xchg push xor sarb int3 mov sbb cli aas std call jecxz push pushf movsb or dec popf test vzeroupper push out pusha pop and or jge xor pop xchg sub movsl jae je insl std cmp xchg or xchg cwtl and fimull and and das std push mov movsb lret xchg gs les (bad) sub jg mov pop fnstenv dec dec pop mov jbe mov pop and mov mov subl nop push jge pop dec push push ret mov inc outsb pop (bad) loope rcrl bound rorb mov (bad) testl push jmp jbe inc dec loop pop xchg repnz inc fisttpll sti loop sbb push dec mov sub add cmc push sbb cmc cwtl or arpl or in repz repnz repz cmpsl repnz pop mov mov push push rolb xor xlat lea aas pop (bad) xlat test lret hlt jge jmp in mov (bad) into pop fimul stos std or rcll cmpsl pop mov in fs cld lahf jne in jne xchg or jp outsb fsubrp pop inc js or sub push imul xchg push repnz (bad) sbb dec jmp mov lea popf inc jb jmp stos mov jb cld pushf xor jecxz jmp ds pop lcall icebp cli cmp sub inc xchg push scas adc jb add in xchg fistp int3 fsubs js inc push xchg sbb mov push in insl cmp loopne jb sti xchg js pop or mov das cwtl (bad) sub nop jns xchg cs lods rolb mov sarb lcall scas mov dec into iret dec sbb xor scas xchg mov or and pop test jns sbb xor rcl outsl sarb push jbe lds std jecxz mov dec jl arpl andl cmp lahf ror jle loop inc xor pop cmpsb ret fdivs fnop xor cld jnp inc test pusha push (bad) aaa sub stc daa push cs repz inc xchg xor fdivrp mov int3 jbe sarl sbb test cmpsb inc inc sbb (bad) out in popf lods add xchg sbb rorb inc push and sub fimul xchg adc pop add xor push out xor lcall int or lahf sub and dec (bad) and xor fisubl and mov fnsave xor push stc push mov stos inc inc int jns pop cli pop mov and cmpsb adc push mov fdivr xor sbb mov stc adc fidivrl aaa push xchg push mov jns inc test (bad) je sub out sti sti les setg adc icebp inc or pop es mov sbb inc (bad) idivb dec aam adc jns in mov xchg scas jns cmpsb and ret std pop insl aas enter mov fsub push test lods call imul fmull push mov pop popf mov push sbb xchg xchg jle sbb movsb test mov cmp lret xchg add cmp cli sbb sbb enter push sbb in cmp xlat cmp ret fcompl push outsb xorl repz sbb test pop jmp int3 ja fstpl in sub testb adc and xor into into dec push leave and mov mov loop stc in jo aaa (bad) push sub in pop lcall mov mov std cmc pop out scas sbb mov or shrb dec pop sub mov xchg xor outsl addr16 inc pop xchg lcall bound dec pop xchg test xor clc or add sub movsb imul hlt popf mov mov pop pand pop push xor loope call fstpl psubsb xchg test aas sub or pushf test insl cld jbe daa cmp and stos inc jns imul lds (bad) ljmp xchg ja (bad) ss sbb test adc mov int3 inc lret lret and mov lcall pop or sbb push inc lret mov jnp jb fwait inc xchg push push pop jecxz dec adc loope mov sbb pusha mov std mov aad repz ss sub data16 call sub stc dec orl ljmp push mov sub xor cmp mov adcl in sbb stos push inc pop push out addr16 xor ss dec dec push pop or stc movsl sub xchg inc dec repnz sub mov sbb and out insl je jae xor adc sbb fisubrl dec arpl js jmp leave push and ja mov jne and push cltd ret in xchg lcall stos cmp fwait jmp in out test push (bad) sub in pop ret mov cltd rcll dec arpl fsubrs (bad) mov outsb pusha scas pop flds fidiv mov and mov outsb in fwait jns xchg inc dec pop cmp sub fidivrl cld shrb daa mov mov mov test pop cmc cmp cmp leave nop idivl dec xor fistpll ret imul jge ja lret sti jl cmp mov jp call push cmp incl popf xor ret mov add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoms add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb rolb (bad) xor mov out cwtl sahf jbe fadd xor pop rcrl fstp fstpl fnstenv out jge (bad) jmp sbb add mov in and or xor mov mov xchg jae adc ljmp (bad) xchg ret mov jmp (bad) xor cmp push jp mov fs and push repnz cmp pop jae inc mov ret ret lret in adc inc out adc std outsb and test pop and mov mov out dec xor adc jmp aaa cmc sbb addr16 xor inc sbb jns std fldcw add or mov iret pusha xchg dec in pop mov add lahf pop jne in pop xchg mov nop cmp jbe xchg ficom xor sub adc jp add test je adc rolb fcomps fstl mov cmp sbbl sub mov mov mov in test xchg pop pushf outsb iret mov add stc out sub push push lods xor test call rorb das fs inc jae je ljmp aam or cmp xor out aaa cmp xor imull rcrb adc (bad) jg jae pusha scas push add in jbe js int3 in gs xor jle fwait jnp or sbb jecxz pop pop sbb push add push pop ljmp pop dec mov or dec sahf lahf (bad) lret pop insb mov rorb cltd mov ljmp pop and cmp jno movsl test sub rorb push in dec push jge push xor in fiaddl and sahf ja cmp mov pop stos mov push inc icebp stc pop pusha adc or sahf add std adc cmpsl scas (bad) lret ds dec inc adc je xchg bound lcall add dec adc in cltd jne sbb out out add dec mov xchg stos scas hlt jns push sub and push cld add std bound xor cmpsl fsubp jbe sahf out cmp enter xlat pop mov sti popa pop int3 clc es fist adc fidivrl nop test inc push xlat sarb popf lea and xchg js sbb data16 lods mov test pop popa pop sbb inc sub pop mov dec nop push imul fnstcw ljmp fbld fs sub lcall fstps dec sbb and lcall out lahf mov int3 aaa cmpsl call jo push mov sbb rcr jmp fucomip jle inc cmp cld andl mov lods jmp aad or mov add push cwtl insb in cli pop arpl xchg push cmp lods or push or das int3 cmp add hlt cmpsl xchg divb lods dec mov mov dec call mov sbb nop stos or push loop arpl psubd xchg bsf mov shlb cmc lcall pop jo sbb cmpb adc cltd sbb adc lret iret (bad) ror mov mov mov mov xchg jle and cs (bad) inc inc push popa pop push fcomps rol lret ja cmp mov or xchg xor and std mov inc mov movb negl cmc pop in loop pop imul or pop mov ds aam cmp pop cs jns stc leave pop xchg leave or jecxz arpl dec lea ret mov out arpl out xlat mov pushf stc dec pop arpl inc sbb mov sub add xchg popa call out mov inc jge or add arpl xchg pop (bad) sbb pop inc lods adc jae mov dec enter std fisttp sbb cltd data16 popf out movsl (bad) mov mov adc lods sub andl inc mov outsl xchg sub cmpsl mov pop sbb jbe test pop loope mov movsl mov (bad) mov mov aam dec xchg mov decl (bad) hlt inc aad sub adc sbbl and xchg inc rclb enter xchg cwtl adc mov leave push pop push push aas cwtl sub insb les lcall ja mov mov (bad) xchg xor movsl repz mov push and lret jne push js add pandn andb push jle leave xor mov aaa mov sbb insb lret cmpsb dec push movlps mov repz adc out int out testb pushf cmpsl (bad) dec adc sbb fwait add mov lahf sarl xlat stos dec xor and jbe mov and pushf aad lret add enter ret fcmovbe gs repnz pop xchg sbb mov sti lock sub add xor std push cmp jmp mov adc das mov cmpsb jle pop test sbb jae jnp xchg inc mov sbb roll mov xor fisttp xchg jb or inc or fs jp and push dec or mov stos (bad) popa fstp xor cwtl xchg nop (bad) in add pop (bad) hlt popa fbstp xchg in fmuls jp cwtl ss adc and call cmc outsb jecxz arpl fdivrl jne scas lds test mov mov cmpsb (bad) adc add in pop scas ss sbb inc fisttpll orl dec (bad) les mov mov mov loope loopne adc imul cs fnstsw lcall xchg lea repnz lods or shl fnstcw jnp fildll jp outsl lods mov movsb iret push dec xor shlb lahf js fcoms add cwtl jge dec rclb fdivs pop lret (bad) int push ja mov bnd pop push lods es xchg jp pop cmp out mov push notl mov mov (bad) and in leave addl inc xor repnz daa add cld jge outsl in xchg lahf mov mov inc dec stos jae jae mov ss leave jae lea or nop xchg lds gs sahf leave rorb mov push lahf test xor nop cwtl hlt repz in hlt inc jg inc dec out push outsb mov jge jbe sub (bad) mov or jmp inc jmp dec xchg sahf (bad) jb (bad) aad xchg mov adc rcrl mov cmpsl out cmp bnd cmc js cmp je mov inc sub jp sbb cmpsl imul pop into jbe (bad) fwait mov push mov mov pusha xchg inc cld xchg adc xchg mov jecxz clc sub xchg outsb add cmp push std imul dec rolb pop insb popf lahf or test xchg mov xor adc aam aam mov mov outsb mov clc aaa adc mov jecxz jns (bad) (bad) das mov and ret jmp ret out dec xorl cmp repnz (bad) pop loope push js cmp jnp push mov movsb insl push cs (bad) pcmpeqb mov pop mov xchg js daa xchg ficom outsb outsb xor mull es cmpsb cmpb xchg jns scas mov mov inc xchg ljmp ja fnstsw dec imul int aad push in std mov and ret jle mov bound pushf sbb sbb pop jnp imul arpl jg adc call dec mov int3 popf cltd cltd loopne fsts lea mov cmp lcall pushl cs jo enter les ja leave pop (bad) imul call cli jbe and push push push and mov cmc in sub sbb sbb cmpl rcrl and out pop mov loop fs sub (bad) cmc lods and jmp adc (bad) cmovno pop (bad) pop xchg sub fdivrp push in jg ss scas rorl mov add (bad) mov outsl mov adc cmp lds scas push cld sbb lods test xor es cs cmc test pop jge ja gs cmp imul pop jb mov cmp dec (bad) stos and repnz out mov mov int repnz sbb ret add loop imul cmp loopne mov mov pop mov lods loop lcall movsb mov and stc pop inc or out adcb (bad) sbb push mov popf ss fidivr iret sbb clc aad push mov int3 js push inc jno scas dec je leave jbe insb mov inc and push loopne stos movsl jb test adc std mov xorl repz add icebp cs push in loopne pushf xor rcl xor scas xor lock adc outsl inc gs xchg xor jo icebp dec add ljmp mov push cmp repnz or xchg dec sub jae jge mov scas jg outsl xchg pop mov mov jmp jb cld pop fnsave mov decl rorb fucomi jns insl mov sti inc jg in sbb insb test inc mov cmp loop (bad) ja icebp sub add pop sti outsl in jno les movsl into jmp adc enter je dec mov aad mov loope xchg mov adc sahf out ds ret aas xor aam fimull (bad) or pop adc pop xlat and mov cmpsl push scas aam xchg hlt test test nop lcall enter outsb in xor call xor inc in pop jecxz ds mov xchg mov inc arpl cmpl fistl mov adc adc jl (bad) pop rorb dec sbb sub adc add mov je (bad) bound rep fsubrs push sub out jg int3 push das sahf add (bad) or lahf pop ljmp cmp (bad) jmp xchg cmp sbb push mov or ja faddl dec adc mov sbb mov fsubrs jmp aaa js ss mov cmpsb test adc mov add lock and push xor lods dec mov inc sbb pop push jg rclb mov (bad) fisttpll fldcw fcmovu jg loop mov test (bad) sbb ja pop jge mov jle inc xor sbb pop cmp in cld sub imul jl dec cwtl xchg or jne out punpcklbw or mov push fisttpll or inc fistp pop int3 das (bad) push mov iret and scas aaa bound comiss jecxz xlat mov sti mov fcmove adc test (bad) js mov or push sbb movsb hlt fldenv stos or popa mov mov sub repz mov push xor das loop xchg dec sbb mull sub jno je out (bad) cld test pop scas adc add jmp or cs dec xor add mov or sbb sahf lcall stos xor mov aaa adc jge out fwait ret or and mov loopne mov pop mov xor mov push mov mov mov mov div adc xor push add rorb sbb arpl or and xchg insb gs mov ficomp fsubl inc jb inc dec adc inc adc mov aam imul iret icebp push dec sbb push cmpb addr16 jnp xchg lcall jb or jecxz outsb add jp inc pop xchg xchg mov inc fcoml mov inc (bad) mov jle adcb js insl ljmp leave push pusha xlat mov clc and sub mov xor jp repz faddp or cld mov scas jecxz ja scas push jl push arpl shrb adcb bound cmp addr16 jbe xchg out jp scas cli mov leave fadds lahf mov mov xor cltd lret xchg xchg hlt mov and enter pusha pop mov push sahf mov cmpsl sub clc pushf mov xchg and out jle pusha mov jp mov and jnp inc movsb jb sbb push fistp das lods or adc push stos push sahf xchg pop sub (bad) jae (bad) call ror scas xor int pop or sbb inc int3 sbb fstps mov mov or lea je mov and (bad) out xchg int mov js cmp jecxz jmp enter stos aaa fwait cmp faddl in mov js inc loop nop dec sahf gs xor xchg in adc mov mov (bad) push lea sub and or (bad) leave push xchg test (bad) ljmp icebp loop cmc and xchg mov jmp mov or sbbl jge js lcall fisubrl imul jns mov insb mov lock shll pushf div xchg leave scas and popf scas ja aas movsb jo jg test sarb ss mov push mov ds and add sub (bad) cmp rcl in mov cli movsl popa dec std sub cli icebp sti fldenv popf inc push cmpsb cmp or fsubrp test sub inc xchg out xor fcmovnu dec mov pushf popf sbb adc inc inc pop js addr16 popa pusha inc pusha (bad) pop stos mov or mov pop xor cmp (bad) and movsl int3 pushf push lahf cwtl cmp cwtl rolb int3 push sbb lods in push (bad) or lcall push xor push les mov fistpl out insl jae aas xor sub mov xor push rcl mov xchg cltd lcall (bad) xor lds jae nop xchg je jg hlt out fwait aaa outsl fidivr aaa outsl fidivr add jg sbb and add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fistl add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push and rolb rcrl popf (bad) xor fucom hlt jmp dec int3 je dec xor adc xchg sbb pushf cmp iret jbe cltd jl out sti outsl mov ret repz add xor jg test data16 iret sbb lods les mov mov cmc xor adc dec push xor mov fucomip addr16 test pop jne test popf xor imul ja dec dec dec mov aaa out xor rorl adc mov mov cld jns lret mov xor mov inc mov add xchg jg mov cmp out imul paddsb les aaa adc mov in jge push fdivs je fmuls gs or cmp inc sbb fistpll insb test int3 ds or jae push ja push out inc mov (bad) mov mov xchg xorl popl sbb add inc and bound aas flds mov cmp push out mov sub sbb mov fwait mov xchg ret push out jbe popa jnp cmp sarb and (bad) mov adc sahf inc mov mov aad cmp and repnz push xchg sbb inc sub xchg int3 dec es add sbb add xchg sti push orl xor inc rcll mov cltd ds mov pop mov lods mov mov and jl xchg sti sarb out push pop das lods fidivl and loop outsl bound fcomps cmp test push xchg jmp (bad) outsb pop and jg dec or (bad) lock cmp and int3 repz in out jae imul insl inc pushf push jae jnp sub push jno pop fstpt aaa stos int aas jae js dec jno pop dec in jl ljmp mov (bad) xor cmp fstl cli popf push fdivrl mov cmp dec sbb add mov (bad) push cwtl hlt (bad) xchg mov fdivrl jno jno jo arpl dec pop xchg movsl or jmp (bad) hlt xor mov iret adc cmp movsl les out add jb sbb xor ljmp stos movsl setae jle ljmp cmp sahf inc mov cmp jecxz iret xchg into jno stos sbb inc cmpsb (bad) jne inc int fwait cmpsl (bad) push dec mov pop add cld add popa test je cmpsl test pop pop addr16 mov inc sti sbb push sbb std aad xchg pop popa lcall sbb js lock arpl mov push dec mov arpl sahf mov dec rcll out add or dec call test gs lret sub cmp mov out and pusha sti lret cs and pmovmskb mov mov push push (bad) (bad) loop mov mov fisttpll cmc imul pop ret hlt jnp aam push iret jge outsl pusha ret dec jno and mov aaa lea pextrw cwtl vmwrite sbb sahf add inc lret xor cmp std bound (bad) mov movsb movsb movsb (bad) mov inc addb cmp xor fs jb pushf push leave mov cmp and sub add xchg fs dec fdivr in and (bad) push inc scas mov and (bad) add jns cmp sub movsl and adc push jno and loop pop cmp xor fistl (bad) int3 xlat aas mov push xchg movsl xchg cs mov sub jb ds enter and aaa bound push (bad) xor push ret push movsb sbb add sbb sbb dec fwait es repz xor inc xor lahf andb movsb jne (bad) out inc test mov lahf (bad) std lret nop jecxz mov dec sub mov data16 fs sub daa mov mov push jle (bad) movsb pop push jns pop mov or mov push xchg imul mov mov sub cs xchg in ja xchg add cld add icebp cmp and inc cs lock mov imul add aam das fsubs cmpsl push aaa (bad) test loop add inc jb pop lock enter js dec and jbe test repnz adc pop insl sarb out or cwtl pusha inc sets or (bad) sub jle fs push lods cmpsb sub fwait pop fnstenv inc repnz lock test test jg inc addr16 xor xchg cmp mov adc mov sbb cmpsb addr16 lods pop ds dec loopne cmpsl or push loope pop xlat push rolb jle sbb ljmp xor adc aam aas push push mov xchg inc (bad) out lcall dec push sbb xchg arpl clc mov nop (bad) popa and les and xor cmp cmp sbb (bad) fscale push mov cmpb das arpl call stc mov xchg gs xor repnz mov xor je cmc aam mov into movsb jecxz fsubs mov lret inc stos hlt sarl push icebp pusha stos cwtl mov movsb ja inc jle aad test push test add add sub inc cmp or pop push cmc and push push stc icebp xchg sub jge rcrb push stc in iret lods arpl add inc lret jecxz aad push mov mov mov push test test stos xchg cwtl loopne lret rorl mov ret pop dec mov test lret cltd mov jle lret (bad) int in into xchg ret or pop push (bad) xor (bad) sbb xchg arpl in cmpl xchg add sub rclb lcall pop jo lock dec cmp jmp movb push pushf enter addr16 push xor dec loopne xorb adc xlat lock insl and (bad) insl notl xchg test cld imul adc sub push jo sub jnp addr16 inc mov mov xchg shll adc cmp test ret das ret sbb movsb jo arpl popf es ret pop push stos mov ss cmp lret fcmovnu adc xor mov xor adc cmpsl ja es aas cld repnz std not imul aas shll push lret pop shlb cmp cmc pop mov pop outsl addr16 xchg sub adc out add add fdivr jo les jne push mov jmp je pop or (bad) dec mov lods (bad) and push scas imull addr16 ljmp mov pop sbb inc mov pop sbb (bad) mov lods add push sbbl pop or aad mov mov scas pop enter ret lods or or es push cwtl cmp mov mov test pop jno and add (bad) rclb mov inc movsl adc cld add push les sub lret jno movsl cli mov scas movups xchg js sub stos scas pop stos je or cmp mov cmc and or cmp stos jae imul push sahf mov fidivl lock in pop push dec mov mov pop inc adc aaa mov dec imul rolb lods fistl cmp dec push pop clc les sahf jno add out add je int loope or mov cmpsl jg and insl dec lret pop jecxz or or pop jnp add xchg and mov add add fcomps lcall inc divl insl mov sub jecxz rep loop jbe out dec sbb jecxz or (bad) sub (bad) ja (bad) movsl or inc push jecxz cmpsl std fistl sub inc pop pop nop ss dec sub mov dec insl movsb repnz jbe fisttp ljmp movsb out cmp mov xchg or jecxz push mov clc lahf daa rorl and test dec lahf mov inc decl out cmp sub mov lds outsb ljmp out je inc ja dec mov neg add (bad) repz int3 cli aas lcall outsl fistpl or pop ficompl dec mov scas push es stc mov push and cmp lods sbb add push sub xchg loopne pop xor jae int3 pop jne sub push fildl xor call mov lea push sti ret icebp fcmovu (bad) fsubrl lcall insl push repnz cmpl jb mov mov out adc xchg cmpsl mov arpl aad imul ljmp sub mov stos sub pop stc dec pop pusha test movq repz fild inc movsb mov jle xchg iret stos scas sub mov and mov push cmp or cmp ds imul cwtl call mov (bad) out ljmp sbb in xchg fiadd push into xor jmp mov sbb movsb clc loop sbb test ja pop popa out mov lahf mov outsl dec lods push in mov cmpsb ret push leave jbe out or push sub xor inc jb push xlat sbbl je ret pop mov bnd mov or fildll cmp lret imul adc push in outsl fidivr sub je ljmp mov popf mov je aam (bad) repz sub shl movb mov imul xor iret sub jle (bad) mov dec ret loop dec ret idiv push bound mov ret sub dec loop icebp or test cld adc ds cmp sub sub outsb push jne in mov xor cmc push mov movsb adc add inc cltd repnz out inc sbb aaa sbb daa xchg shlb push gs in dec push ffree pop push sbb shll call adc ret fistp dec cmp das jae fnstsw cli mov in sti push int3 dec cmpsl sbb call mov dec jbe dec fwait hlt notl data16 gs test lods sahf test jno mov sbb pop stc imull insl cmpsb push leave mov inc cmpsb pop data16 pop out jg gs pop iret in mov jg ret pop inc jne and cmp mov sub aad jmp jb cmpsl dec xchg push lods sbb push dec (bad) adc jl dec adc rcr mov pop mov add mov test pop dec mov ret add xchg test clc ficoml sbb (bad) lret and cmp pop aas push faddp aaa daa fistp push inc mov lahf sbb arpl test mov lods ljmp sbb xor pushf cld clc out push pop rcrl fimull inc inc sti rcll scas push inc inc test dec or jmp (bad) insl or dec xor stos mov movsb sbb xor fild shlb sbb mov aas sub jae aaa mov hlt xchg and xchg test lods fbld mov pop jbe sti sbb mov pop mov ja loop iret orl (bad) mov ja jecxz fldt jle (bad) mov cld mov mov mov xor popa mov and and push mov jbe push pop cs pushf stos adc out cmpsb fcomps xor cmp aam nop clts shlb add lret scas cmp popa cmp mov ret add call dec rol testl cltd lahf pop stos in cmp cwtl mov jle jg (bad) pusha (bad) rcll cmp jecxz imul imul mov rcrb inc pop das repz fisttpll int3 lret stos insl data16 xor add sbb adc and fwait mov mov ret xchg lea sbb fs adcl call jae jg dec or out divb imul inc mov inc (bad) aad lcall dec aad in stc negb add stc sbb dec inc push fild mov jmp pop jno aam push sbb rcl movsl xlat xchg jg cmpsb pop nopl adc call imul cmp nop cltd pop dec and push mov inc dec fcoms inc mov xor pop sbb pop adc loope mov int sub dec sbb das cmpsb (bad) pop insl popf lods jne xor out dec add dec jnp mov dec lcall mov jne xorl icebp stc icebp mov fninit addr16 jnp xchg adc xlat xor rolb or stc out dec fcmovbe lret scas test repnz sub je shr or jle mov jmp xchg adc mov cmp rclb push dec insb jbe lret arpl pop (bad) (bad) adc dec sbb jnp (bad) movsl sub cli (bad) aam and negl mov lea in xchg das xchg out mov sub pop jns stc scas out xlat (bad) in jo mov fstpl lods in js ja xchg jae scas dec add outsl jo fnstsw xchg (bad) mov cmp sbb repnz jl push inc dec js push sub xchg inc jb jo sub arpl (bad) adc push add test out or jbe movsb sbb shr xchg push lahf cs push or xchg std jo aas fmul stos aas aad or xchg push ja push mov pushf rolb pop movsl push xor lea jno mov es (bad) loop and rcrl dec aam stos cltd mov leave push sbb push sbbl scas inc cltd mov popa ljmp inc cmp in pop pushf xchg or je loop loopne mov adc imul xor xchg mov sbb sbbb fcos cmp call push cmp mov incl add psubw fcoms cltd hlt pop jecxz add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push aas sbb add lock cmpsb jnp cwtl cmpsb mov push xchg sarl in jo lcall ljmp out xor add or lock leave insl out (bad) (bad) mov mov cld jle jp into lret gs aad jmp dec lea loope fadds adc or add movsb push dec mov in push fyl2xp1 xor test mov pop mov (bad) nop push das mov sub mov xor xor cld insl loop sti test xor xor xor jl or xchg outsb cmp aad push loopne sbb lcall int3 or mov stc sbb or or cmp sub cltd dec xor loop xor mov and lds inc ljmp inc pop in cmpsl mul and or add jmp arpl (bad) mov ss mov sub repz stos push mov shll ss xor dec cs mov and push into mov cli inc das imul popa addr16 push fistp mov (bad) lods mov dec (bad) xor mov xchg dec mov lods lret adc jmp push rcr or add aad mov push mov xchg in pop insl push loop adc sbb jmp cld fwait jle fsts popl adc pop rcll cmp push (bad) stos adc mov mov lret jnp cwtd and addr16 repnz xchg mov jmp in pushf (bad) popf (bad) loope inc repz cmpsl or add push sub movsb sub (bad) insb js nop xchg mov push xchg mov sub je lods jns mov ljmp and mov add xor or ret jns outsb (bad) inc add ss insb hlt inc gs xchg mov xor xchg setno jle xchg sub mov inc sub adc and icebp sub imul add inc je std ret imul insl scas dec jg repz sbb test xlat dec test xlat add push out cmp out fmull ret cmp imul push cmpsl or sar xchg sbb xor sahf mov or lods addr16 push mov sbb cmpsl cmpsl sbbb pop pop aas cmp pop repz mull movsb fcomps stos mov in jmp or stos jg in sub jb sbbb popa adc pop and mov nop adc sahf and jmp insl pop popa mov ds test xchg jo or mov adcl jecxz cmpsl imul sub negb add (bad) xor pop test sub ret dec push xchg (bad) sbb sub sahf cmp int3 and fisubrl es scas sbb into cwtl push sbb clc cmpsb push add in ljmp arpl insb gs mov inc mov es jle dec in xchg test inc inc pop (bad) dec out sarl (bad) aaa mov lret xchg outsl jnp sbb push add aas inc xchg stos aad sbb popa inc adc dec push and add in out xor outsb adc loope push dec xor lock stc mov xlat cltd cmp push xor sub gs je ss inc mov mov xor (bad) mov pop adc cmpsb test pop clc mov mov in push lret ss stos cmc outsl insl jmp popf cmp and jecxz shll inc mov outsl and andb fs int3 cltd or xchg mov xor dec jne mov pop pop test dec inc test mov pusha dec scas mov xor idivl (bad) jae cmp cld add fsubrl out inc push stos mov mov jno nop pop xlat ds xchg jbe and stos or das push cmp bound jb and ds lods push test ret mov inc jl insb arpl addr16 sbb sub jecxz dec xor loopne sub mov in rcrl loope sbb (bad) sahf xor mov int3 out (bad) cmp in sbb xchg and xlat mov jns int3 adc mov sbb sub sarb sarb std mov jo sub inc enter movsl repnz lcall daa cmp mov or ja shrl mov add mov sbb stos xlat push jecxz lods cmp aaa gs test or enter pop xor in addr16 (bad) mov mov loopne jne pop mov sbb ret lea dec ds xchg fcmovu lret jmp jge inc push or xchg mov xor add cs xor or fnstenv and xchg ljmp es and push loopne dec addr16 push popa jge fist (bad) scas push aad mov mov sbb sti adc add or cwtl jecxz fnstsw lahf mov cmp xchg pusha call jl enter lret and in jbe sub or push push inc xlat or mov cwtl ja mov (bad) shrb out pop mov aaa ja pop push push xchg jo ret std dec adc (bad) scas js or mov cmpsl xor cmp aaa in mov push mov inc jp add push jle cs (bad) mov xor sti mov sub push pop cmpsl cmp adc fdivrl fnstcw out jae (bad) mov pop add mov pop and popf fidivrl cmpsl cmc ret lea and jp sub adcb jg pop sub adc jge pop cmp bound dec cmpsl push (bad) aam sub adc cmp jmp push inc pop repz outsl or inc jg jo inc ret mov es jns imul rcll dec (bad) fs insl call outsl outsb std sub dec pushf jno movsb outsl ficom repnz cmpsl dec mov dec les lahf mov out fimul xchg adc xchg xchg (bad) push sbb test lcall jle inc je clc scas adc dec insl mov sub pop insb and stc fucomp mov frstpm(287 into inc shrl inc sahf pusha inc or iret shrb iret cmp sbb and popl out cmp cmp data16 call aas stc icebp sub xor jge les sub sub sub pushf inc pushf sbb scas cmp adcl or cmp imull lahf loopne lret addr16 or add fild push andb add pop cmpsb dec dec mov dec jb (bad) adc fs or mov daa test cmp movl mov stos mov jno rclb cmp cmpsl cmp std ds (bad) jl xor stc (bad) mov loope pop lock movsb outsl mov inc xchg inc mov mov mov pop fwait and push xchg (bad) outsl lret lock jge out lret push loope std jnp loope daa mov or dec fdivl xchg and cmp sbb sbb sub outsb xor jbe loop loop cld lods mov add pop xchg mov xor and inc sbbl fistpll mov ret test inc dec lret test sub pop xchg mov inc lret mov cwtl push mov mov sub (bad) in insl je jecxz lods jecxz jle mov push jnp,pt outsb mov mov mov mov jl,pn mov test xchg mov test pop fimull nop dec or (bad) movsl rolb dec mov mov sbb add test sbb aaa shrl cltd adc lds loope xor jg (bad) ljmp pop mov adc out lods jno in inc lret int (bad) jmp loop push push sbb gs movsb shlb add mov fcompl into outsb sbb mov into mov aad in ja add lret xchg jno adc rorb dec adc les fistpll sbb jmp imul jmp fdiv int dec cmp ficom enter mov xchg sub call negb mov jns xchg lea xchg lods push mov (bad) or iret mov and cmp sbb clc aad mov test xchg add les fwait adc xchg enter xchg mov (bad) cmp lock hlt (bad) test shr or pop mov lods adc or adc sbb pop nop push xor pop ss ja pop ret arpl pop les inc call pop (bad) or in mov popa fidiv movsl xchg mov in push popfw nop mov mov rcrl je add or lods in mov rorb xor iret int3 je sbb pop int fwait enter add inc mov mov js xchg arpl ss inc mov test ret cmp rcrl mov jb int3 lahf clc lahf cmpsb (bad) jmp (bad) jb pop sbb push xor cmp cmpsl mov incl xor call jle cmp cmp bound sub imul mov jno xor jb push test sahf test cmp and jmp mov addr16 add sbb cmp das hlt stc pop movsl aad icebp mov dec or test in mov sbb add aas add (bad) jns or mov pop cmpsb or mov into fisttpll cmpl stos fnstenv pop sbb inc out jo ss sti xor out or xor xor push dec sub pop sbb bound ljmp fcomip mov mov mov movsl jnp fwait sbb push jo call add mov dec psubw popf xchg inc mov pop dec lods dec pusha or mov in pop push xchg push xor fisttpl sub outsb jnp scas mov jp pop xchg ja cs (bad) (bad) xor add cli mov fisttpl jecxz je or repnz jmp mull fidivl jmp int3 fsubrl sbb imul lods pusha in nop jbe dec pop fs cwtl and push scas fldt fcmovnbe fadd xchg (bad) add and (bad) mov mov rcll sub inc adc jae and loope pop gs mov movsb mov leave or ds cmc push xlat add xchg dec pop cmp int3 mov xor inc je inc xchg or add repnz lret sbb ss test fiadd inc sbb lds mov loope shlb adc lret movsl scas and or fstpl dec cwtl xor mov and pop loop ja cmp and das sub enter mov mov ror ret add mov mov shr sbb or scas les incb movd jae sub push mov ss ss lods (bad) fild pop repnz inc iret cmp adc adc and sub loope lret sbb out lret (bad) xor enter nop mov js adc lret call or mov test repnz jae cli mov scas lcall push mov xor or xor pop mov movsl movsl sbb int sahf and iret mov iret aad test mov (bad) lcall sbb lcall jns mov shlb cli shr xor push out mov repz jle out sub xchg shlb jne add mov adc (bad) ficompl ss stc push andl jp mov mov test inc push loope scas in cs aas pop or leave or divl xchg fildll xchg jecxz cld adc cmpsl addr16 es sbb lret sbb lods cmpsb (bad) out and mov cld bound cmc lods and movb xor adc adc dec mov out and cld mov out ret xor cltd in push lods jge xchg jmp insb xchg bound or xor (bad) scas data16 out dec sub lea cmc in or mov mov pop cmp jl (bad) nop es andl mov pop jecxz mov je imul sbbl add fnstsw jg lahf bound stos jbe push fbld add aaa lods inc aam aas xor xor jmp mov stos cmpsl dec or adc mov lods (bad) dec jecxz test push pop push xlat rcll sbb pop push add icebp mov or inc sub mov push int3 cmpsb subl mov xchg mov pushf dec cmp int (bad) aam stc add js sub add iret rol or cli mov xor sbb ret push xchg jb and repz fldt or outsb dec mov mov cmp mov mov or outsb mov jmp es andb adc mov cmp cmpl rorb cmc sub jno mov mov fbld cmp sbb in push fldenv mov insb pop idivb inc push aas out and inc mov cwtl inc xchg push jl sti movsb in out shr mov cmp pop loop stos loopne mov movsb (bad) xlat xor inc out imul push xchg mov push icebp adc cmpsb dec pop adcl js lds mov mul cli mov cld xor popf jmp in mov xor dec (bad) leave lds (bad) xor sub xchg sub or arpl or or inc xchg mov stc test in lds (bad) bswap outsl icebp pop pop mov adc or aas sub sbb xchg mov jmp cld addl aam js adc add fimul pop inc mov jp or sub lret ds push mov xor adc pushf jae ret inc push push mov dec xchg jl dec rcll xor inc cmp fdivs int dec (bad) das xchg leave xchg daa dec sahf cmp repnz xchg daa dec sahf cld incl add add pushf push push into inc loope add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ficoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb jecxz icebp shrl cmpsl int mov in insl dec dec dec dec ja dec or xor dec mov es dec ja xor dec ja out stc cmp dec jl fildll add or jg mov aaa inc inc hlt cmc addr16 xchg xchg pop adc mov popf iret shrl mov mov (bad) sti sbb fucomp jp ja cmp inc insb sti or imul orl (bad) ss and mov mov xor test fiadd stc xchg adc idiv push repnz push fwait push das mov in scas dec mov inc xchg cmpsb add iret ja adc xchg cmpsl mov xor pushf loope xor adc movsb adc dec mov mov fisub dec cmp xor pop lcall int3 adc and aas push or ljmp test pushf sbb dec gs cmp pop cld (bad) or aas inc fs add lds sub and (bad) push icebp fimul mov pop (bad) pop dec mov xor sbbl xchg mov push xchg mov push cli popa sahf xchg mov inc add orl xor pop cmpsb or icebp push cmp jecxz les repnz cmpsl repz and mov ljmp pop std xor enter jbe pop pop cs je orl add fistpl sbb mov add fs ret pushf (bad) pop lods adc fdivrs insb and pop sub lea lods sbb nop clc jecxz cld fdiv push rorl xchg pop mov cld out stos hlt in mov pop mov hlt mov dec pushf sbb int pop mov jp or inc adc jb mov scas mov into cmpsb rcl mov dec and inc pop mov dec ja aam push js in jo adc int3 addr16 sbb mov and push sbb cs rorb push mov xor inc xchg xchg push fstpt ret lods mov push sub leave jg (bad) arpl les fbstp lahf mov inc out cmp std out pop cld cwtl aaa or aad scas add movsl int bound cmp call xchg mov push and sbb gs sbb fldenv movsl fidivr push mov nop (bad) (bad) adc rcrl fdivrl fcoml lea out fdiv in loope dec xor loope mov into js test xchg loope,pn sub xchg fwait sub jns jmp outsl pop mov sub pop jg xor dec sub insb ret jle icebp mov push push lret sub dec adc mov int cmp cmp or lcall in jno pop pop push or add ds sub popa xor mov pushf imul jno into test cmp movsl repz (bad) sbb pop push inc test scas jmp (bad) pop and mov imul dec and inc int insl popl push and gs jne std mov or inc pop inc sub fwait orl jmp jbe xchg jns jle mov xor cmp test inc push jb inc dec xchg jae push mov leave and jg outsb inc in rcll sub pop je gs rol (bad) in xor mov mov insb sar push fsubs js mov lds sub repnz jle and add popl mov scas or shrl insl daa and inc push lock sbb dec push dec js dec enter xchg rcrb pop push inc pusha and bound stos sub fistp adc (bad) cmc xor in lock and pop cli lcall gs iret pop lcall push mov mov out add mov lret xchg mov sub lock fwait pop ror sbb clc adc mov mov xchg fwait sahf fnop jmp cmp xchg pop sbb mov push into movsl mov add aas adc lds lods test (bad) cmc ja sbb lock or in addr16 inc outsl adcb jns out mov xchg out push mov rcll jp rorb hlt lahf pop in mov aas or emms push dec jne (bad) push mov add in fldt sbb or das out mov jecxz xor shr pushf jmp data16 adc js pop push mov mov repnz repz sbb in (bad) push outsb out sbb xor xchg repz int3 mov pop add jbe test mov or movb or xchg lock add or or mov int fwait dec cmp int3 icebp add mov test in (bad) hlt jae mov sbb sbb cmp (bad) jmp sbb dec mov aam test adc xor in cmp loop xlat repz mov xchg add iret cmp pop sbb jmp shlb sbb notl cmc fsubrl ficom push push getsec mov movb js pop es inc adc js cmp push ret sub mov rcrl cmpsl and daa or or ret fcompl or clc test push andl add mov lods dec inc pop xchg jae jmp mov mov sbb mov test cmp push sahf ds pop inc sbb cmp jge sbb enter js ja mov lods dec mov test sbb sahf dec notb push jp test fildll arpl jb adc pop mov ds std push nop ljmp in test xchg movl jg push add clc outsl jmp pushf stc loope pop vrsqrtss jo clc insb (bad) test pop mov icebp push jbe mov dec adc ja jmp fwait pop xor mov clc add xchg fidivrl js add enter dec sahf mov test jae repz push jge add sbb pop rcr mov mov mov jns lock jbe inc pop sub aad jo jnp sub push mov in or mov out push jo dec scas inc inc and xor mov insb dec mov test mov adcl aas adc jae mov xor fs dec xor mov push mov fdivr push (bad) pop cld xchg inc out rcll or adc data16 cld mov push jg jmp repnz lret fisubr add jecxz jbe mov fidivrl or dec pop sbb movsl mov outsl mov stos out das xor out sub push mov push stos cmpb push pop cmpsl inc rorl add sbb repnz mov fsubl or xchg icebp jne mov cltd shr xchg xor cli imul xchg rcrl mov icebp sub andl ss xchg lods popf ljmp cmp xor or out popf jg loopne fldl2e push lahf push or jne js jp jp pop addr16 lret cmp cmp daa out ja pushf jl xchg scas mov and lret mov les mov jno add pop cmp (bad) shr add pop or in mov aas inc (bad) lock dec pop or outsl data16 and dec jae or imull inc arpl data16 sti lret mov shrb mov pushf ja ss shrl (bad) rcrl push sub pop outsl in in or mov bound repz dec jmp pop test mov jg sub jp fs mov test pop sbb xor xor pop js aaa div out xor (bad) daa (bad) mov jo test mov je or jbe mov jmp ret sarl pop mov fdivs mov sbb cmp std std fcom pop mov loop adc (bad) clc push lcall adc add fs and lods mov insl sbb push call inc push cmp pop lods cs mov pusha call popa and stos lret mov int3 je xchg test xchg cmp lret lods popa dec fs sahf or lea jmp pop fisubl icebp aaa repz push inc and ja fidivl rcll (bad) push addr16 mov mull push int dec sub adc (bad) cltd pusha jmp and hlt dec ficomp lods mov nop mov fsubr mov fdivs sub cld jns jnp cmpsb lret pop sti xlat icebp sub clc mov inc push js aam or hlt xor push test or mov lcall add sub pop pop mov sbb outsb hlt repz leave in fsub inc data16 xor add xor daa or repnz dec push push ja in insb dec mov sub pop jbe data16 mov xlat mov mov repnz outsb cmp adc xchg mov inc adc loope add dec into xlat pop mov jecxz imul into (bad) test std mov icebp adc cmp je sbbb adc into dec push jl into add inc lret stc inc (bad) loopne loope iret cltd or ljmp cld dec int sti xchg jl inc loopne inc addr16 fcoml mov ds jno cli shr pop inc pop mov data16 fldt fisubrl inc dec jle fcompl int sub lds ret sub sbb xor insb lret out sti sub ret adc dec in pop in xor pop lret adc (bad) inc icebp jne adc add xchg std sbb mov sahf add insl or add dec popa jecxz jbe js int mov dec push sub (bad) in scas loop pop aad fwait jl (bad) pop test enter push imul sbb or loope mov andl push js test lret adc sub jns inc jmp fistp mov mov fidiv pushf fsts push decl idivb xchg sbb rcrb sar int fcompl cli sbb xchg mov cmp repnz inc dec and movsl sub out mov sarb jecxz or ss or into jp xor ret mov sbb stc ret jb adc mov push incb addl das fcompl incb ret (bad) mov aas jno cmp mov daa insb xor lea data16 sub xor faddp mov add into in les adc in sbb or es inc inc sub xchg lods xchg scas (bad) cmpsb xor loop adc sbb sbb ss dec mov jmp mov std stc outsb mov pop cmp test ja xchg sbb (bad) mov add rcrb jo xchg jb pop cmp das mov loopne out repnz repnz jecxz pop jbe mov lahf dec test movsl inc int cmpl mov into push test je (bad) sti insb (bad) clc add or push stos pop mov int3 imul xlat leave aas push pop cmpsb push jne lcall mov inc inc sbb cmpsl or int adc stc mov pop mov pop dec nop mov mov jle push fnsave shll add cmp jecxz sti jg push xor imul push pushf mov push mov dec adc arpl lret fidivl push xlat dec in and call test cwtl (bad) and jns fcoml lahf addr16 inc lds sub iret jmp repz lods inc cwtl cmp mov stos dec or inc les xor push adc add jg xchg jnp sub mov mov sbb mov fdiv ja iret xchg lock jp lret out xor stc mov adc adc xchg mov sahf push inc mov mov jae lods (bad) lock cmp xlat cmp data16 xor and adc add add arpl cmpsl fistl loop ljmp add repnz dec ljmp push ljmp bound in and pop cmpsb or jno mov xor fsubl or dec imul andb jns lcall jge scas sbb jmp xor pop xchg insl aas imul out loope jle jl mov xor fwait fs je ds pushf fsincos rcll jmp dec xor cmp ja cli insw stos lods or jmp inc push (bad) shll je fs js lahf mov addl adc arpl test out movsl scas loopne or insl mov push cli notl jne and ror xchg mov int or popf jb dec cld jne (bad) xor roll jg push (bad) mov iret mov fistl bsr in mov xor mov mov push das std sbb jp (bad) mov cmp xlat lret mov into ljmp inc rcrb jl push push je cmp nop (bad) enter add clc daa rcrl xchg fild scas movsl jne aas mov addr16 add add (bad) lods cmpb icebp cs (bad) icebp add rcl int lock je mov cmp and rorb loop mov push mov je lock inc das out sub lea xchg stc hlt test lret and data16 cli fsub outsl lods mov pop (bad) pop stc xchg mov sahf loop int3 outsl ds mov push mov (bad) ss pop test sbb lock mov ljmp addr16 loope test aas rclb xchg xchg fistpll lods out dec imul pop pop add mov clc popf cld and or xchg sbb movsb pop push nop test fstps xchg outsl repnz push test (bad) gs mov popf mov mov xchg enter cmpb push js xor ret (bad) movsb add jns (bad) rcll cmp mov (bad) movsl push adc xor aam cs into sahf sub ljmp repnz (bad) mov rorl dec arpl mov movsb push push (bad) xchg fstpl sahf sbb lods xor int3 je cs xlat jecxz or (bad) sub cmp imul daa pop mov ja,pt std fbld leave xchg daa dec sahf cmp repnz xchg daa dec sahf cmp repnz decl add incl dec ret mov xchg add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aam add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb rolb xor out xlat jmp je dec sbb pop ja outsb xchg sbb xor sbb pop jecxz jl pop add mov xchg aaa je push jle adc inc dec or aam inc sbb jmp into mov out jl out xchg dec mov test mov adc mov jo mov ss insb mov dec push fildl leave cmp cmp dec repz push dec mov or std aad (bad) ss call push mov inc fs insl sbb and pop adc addl adc add inc sbb or xor cltd or ja loope gs ret out nop mov popa arpl pop insb sbb js mov cmpsb popf mov mov fnsave pusha mov clc (bad) data16 xlat xor lret adcb dec add sbb jns push push insb je imul loop test cmp jp enter fimul mov aas ds mov or xchg jmpw loop mov ret outsl enter push lcall inc or (bad) leave cld ljmp mov and (bad) pop mov das mov ret pop add sbb mov iret cmp dec adc (bad) jns mov imul or inc push pop xor hlt xchg dec dec lock inc jns in stos mov jge sub ret push dec mov mov mov xor xchg pop aaa repnz inc movb mov sbb test es aam (bad) fdivl jnp mov or mov add ss mov xchg pop mov or push fisttpl or sbb imul jl pop or push sbb int3 (bad) iret ss fiaddl and dec test cs int xchg ljmp loope dec imul pusha inc mov (bad) push lahf mov jecxz xor xor or scas clc rorl inc inc out mov fs adc pusha cs cmp imul cmp xchg js mov pop stos inc and daa scas jge nop mov xchg in cli (bad) js cs pop fstps aas dec mov pop sub lcall sub loop popa ret enter jo adc fldcw dec cmp or xor add add jnp push or arpl mov in adc or sbb xor mov sbb std movsl or dec sbb inc lods test (bad) dec mov add je and lock shrb push aad pop pop or add cmpsb mov mov lahf aas pop sbb xchg add and movsb cmpl pop repnz iret mov pop push jle jno jmp popf mov sub sarl xchg jno in mov mov push cli xchg insb roll xlat imul imul and icebp lock pop jb cmp jnp push jle mov push ja (bad) fsubl lock shrl test push jmp add mov jnp sahf or dec pop sahf adc flds fucomp aaa movsb (bad) jno mov jecxz pop inc div or push mov jecxz sbb mov cmp sbb call fnstcw adc add lods inc add (bad) jnp jmp xchg es cmp xor (bad) repz push enter int call add jmp test pop in pop clc test jns das add dec adc clc dec lret jb dec rcrb outsl jo cmp sub sahf aad push ja xchg mov ret sub jb rcl push push push xchg repnz xchg pop and jbe push or insl add movsb pusha movsb inc decl sbb cli lret xchg inc pop in mull fistp out sahf dec repnz mov mov jno adc stc mov xor fmuls test and lods xchg jo xchg nop push daa jo push mov jl xchg mov sub lea xchg fisubr dec insl mov aam and insl outsl lret and mov addr16 rcl jo jle sub shl cmpsb mov dec aaa stos cmp sbb mov (bad) push out adc in jp dec jmp clc xchg push jp mov mov (bad) daa pop add daa fneni(8087 imul popa jmp pushf icebp cs (bad) xor xchg jg mov or es and dec inc fist jbe (bad) in lods lret push daa cmp hlt adcl pop cli test mov fnstenv int jl jg and daa gs ret ss leave pop stc je std lock movsl adc dec or aaa xchg xor fistpl adc mov push cmp cmp push xor mov jmp fcmovnb ret sbb xor sahf in loope imul sub jge stos dec pop shlb jae fiaddl sbb out test xchg cmpb cmp std jp outsb jbe mov add cmc scas sbb jl jno jne aad xchg inc inc push xor jl fldcw sbb push stc into lahf loope lock xor insb cmp call push lds mov (bad) imull jno adc xor mov aas cmpsl movsl scas mov dec adcb and and push (bad) out xchg mov rol xor mov xchg (bad) push enter mov imul (bad) push mov (bad) mov jmp and ja jge pop fadds xor fcos push loopne xchg mov iret pop mov repnz int adc push mov in mov es mov jge and insb cmp fsubr cs mov (bad) nop arpl pop jle mov xchg mov push mov or (bad) rcrl sub jecxz xchg jecxz (bad) scas push mov loope push xor push adc pop les xchg cmpsb sbb push jg pop mov inc iret imul fisttpl xchg sub jo jecxz repnz arpl jle iret cmp cmp lret enter arpl jge aad ja jo stos pop daa push add mov mov sbb iret mov add mov sbb cmc dec mov addr16 mov enter cmp sbb enter es packuswb ljmp ret int3 lods adc cmp xor add sarb mov jg sub dec aam and adc movsb movsb xor jo mov mov mov push inc cld movsl out ljmp mov mov inc int fnstsw ljmp daa xchg xor cmp arpl and in push mov sahf cmp pop adcl xchg cmp push aad inc and adc jl fldcw test sub push and xor insb xchg pop cmc fadd adc stc or adc out and sub xor faddp push ljmp clc push push sub daa fdivs cltd std xchg push and cld jecxz cmp pop jbe fstl adc mov pop cli or push xchg pop xor (bad) mov xchg inc jmp imul fistpll leave aas jno inc jbe xor cmpsb adc repz insb pop mov xchg dec adc jle out dec aas jecxz ret int3 push sub mov das (bad) (bad) fucomip dec test cs nop cmp cltd sbb stos int3 xor lret jnp cmpsl ja xor fidivr lods fisubrl mov cmp jp imul sbb cmpsl arpl pop in mov push inc in cld arpl mov fs adc pop mov das outsb add je leave jmp push cmp rcl jbe add push aam inc push out arpl sti lcall adc sti pop je aad mov arpl sbb ds adc aad ljmp pop js jae jns sub js das sub xchg xchg jbe in pop ljmp sti sbb jge mov cld out cmp mov mov out sub and adc add or lret leave mov sbb dec ds call lods out mov ret xchg pop or lock lods hlt pop lahf cmpsb sti wrmsr or sub ja mov xor aaa jp out pop mov cs push mov ja js sti outsb and dec sbb inc mov jbe dec iret mov flds mov daa scas rolb xor jmp push fs popa fidivrl dec sbb and cmovns mov in and outsl dec mov insl (bad) in addb add lcall and dec stos inc xor js fs or dec cmc jmp sti dec add mov mov addr16 mov mov sbb popf push daa shrl cmp and jae ss mov xor scas jo test insl or dec das and out inc orb push mov in call mov push in adc popa xor call cmp fsubrp lret add dec out jmp lods (bad) mov sbb rcrl (bad) lods sbb sub cmp gs (bad) pop pop or icebp adc lods sti mov adc push push or mov sbb add sub xchg xchg adc inc xchg mov lret ds mov cli loope and aam ss xor cmc cli mov xchg fist sbb in sub and mov or mov jge mov pop mov cmpsl jmp pmullw in dec push mov stos rcrb faddl sub xchg aam pop (bad) test scas lods mov sub cmpsb ret mov jb inc nop insb add push sbb push fwait xor push xchg rorl icebp pop cmp push ja (bad) xor scas fistpll je xor gs sbb int3 stos in ds or in dec mov xchg arpl cli mov mov mov sub xchg jns add fcoml into cmp mov stos adcl sub sub inc cltd test adc add into xchg cli (bad) std xor in push sub inc inc cmpl ret pop cmp (bad) insb rcrl out lods jle pop cwtl cmp mov and aaa adc cmp stc movsb jb add jb add loop fs aas je mov dec insl in daa push movb jne xchg fld data16 xchg and jns fidiv mov in push int3 popf push inc scas cltd xchg push push (bad) out and pop adc or push (bad) dec cmpsl rclb std dec in scas in movsl stc mov adc adc push (bad) lds adc mov mov dec mov xchg push aaa or jns cmp ss jecxz push mov sub dec mov mov inc xor xchg (bad) lods or mov xchg dec out xchg lds inc test je into mov mov loop (bad) in fidiv or xor mov fdivrs cld mov out xor sahf mov aas stos sub xchg xchg or std push adc cmc mov pop push lret jmp (bad) call xor sub int mov sub test or mov cwtl pusha sti and xor xor dec jecxz dec imul cmpsb sbb dec inc nop mov (bad) fadd pop lcall mulb sbb insb sbb enter outsb add mov test xchg xchg dec fs iret xor addl adc lods fisttpl ficompl dec mov sbb out jnp jae mov push das lahf or jecxz lret inc mov dec xchg pop mov jb add into aas out xor scas psrad push mov movsb aaa mov outsl (bad) fmulp jecxz inc push and imul inc out push movq push ds inc or (bad) jl mov je and ret ficomp jbe sub pop out stos inc imul adc loopne daa mov lret mov jg enter pop push mov scas inc adc insb inc pop cmp popa leave test mov sub mov inc aad pop or loopne pop mov (bad) or add shll cmp mov leave jae pop fildll cmpsl test movsb out out xor mov xor adc sub xchg fs lret fwait and into xchg data16 and cli fimull cmc imul scas mov stc ljmp adc push xchg test or insl jae push (bad) sub lods pop mov adc outsb mov add xchg adc or subb lret mov push outsl stc insl and jg out push push scas test sbb xor dec in dec mov xchg pop sbb inc test push or jb dec pop mov pop mov inc pop bound mov xor lock xor les push adc pushl js out push fwait inc cwtl loope pop in cmp mov xor (bad) cmp sarb pop ja sbb mov sahf add aas push xchg and push xchg sub xchg in lea pop stos movsb push mov xchg dec or lods pusha lcall xchg (bad) add sbb shrl adc lea fnop and test lcall xor or xchg or stos push (bad) iret cmp ret sub pextrw jnp imul mov jl fdivrs push mov addl and mov lods fisubrl leave and int in es or lock aaa xor out inc dec jle stos mov je mov jnp xor dec dec dec popf fildll pop (bad) ss je fiadd out mov repnz movsb xchg ret pop cli pop arpl mov mov dec (bad) (bad) std inc inc mov aaa in cs cld (bad) aad jl xor dec ja xlat (bad) cmp mov std add fisttp leave adc aaa push mov inc or adc (bad) in rorb push inc leave js dec pushf inc sub popf cli movsb insb js push int3 hlt aas or or cli test call pop mov stos push scas pop mov lcall add incl cmp cld push push js fiadd add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push pop adc add loopne sbb je and dec ja ja inc ja or jmp cmp cmp inc clc add ret jg jnp movsl and popa inc jo pop xor pop sub imul sbb xor fwait sbb xchg lret lret push jbe and inc je xlat fwait cmpsl add std cld cld ret xor sbb (bad) lods push mov jns mov rcll psubsb (bad) push push bound ret (bad) nop xchg xor sub outsl pop push cmpsl push hlt icebp add out (bad) xor mov (bad) lea ret adc pop push xchg shll in and dec add mov cmc loop sbb push pushw push cmp mov jle cmpsl popa in lret cmc fldl into adc jp mov add loop mov sbb sbb mov push sub fnstenv outsl lods mov xchg jle jns inc lret out ds mov pop lcall push mov or cmc inc sbb hlt fsubr outsl push shrl or adc jmp cmp sub cmpsb and pop dec and add in adc mov push mov lret cmp icebp sub (bad) in mov es das adc movb jg or mov cmp fdivl test mov mov cmp jae mov shlb rcl aad into mov jne outsb push imul jmp adc test (bad) gs js cmp add adc leave and cmp xchg movsb mov adc and mov (bad) mov bound (bad) lods (bad) (bad) cld adc sahf xchg mov outsl pop sub pusha add and pushf es outsb push xchg insl sub jle je fmull inc out loope lods (bad) insl loope or roll inc repz repz add jno push mov sbb inc fist mov dec jmp pop imul push cld xchg loopne fistpl sbb fadd push xor sarb pusha subl jecxz pop inc je lods fs mov add dec add jno push daa js jg,pn jne rorl push xchg aam cld xor fcmovb cltd popa ffreep dec arpl pusha imul push (bad) mov xchg push out jge dec inc out push push test cmpsl pop xchg pop outsb clc push xlat roll dec repz daa repz adc cmp enter out aam or mov cltd xor cmc adc imul mov inc out jne mov hlt cmp outsb loope xchg pop jno cmp jp xchg cwtl out ds mov sub mov lret std mov pop sbb out sub (bad) dec sbb into sbb fistl inc push mov pop daa dec cmpsb ret mov sub jge sub stos fmull jp and test popf push test rorl mov xor (bad) xor cwtl leave jg mov push int jne push mov add sub into (bad) cmp fadds sbb loopne cli pop xchg pop xor icebp fldcw scas dec gs out push outsb sbb out pop or inc cmp (bad) jnp add mov inc add lds xchg (bad) push nop cmpsb xchg adc dec hlt push call imul jo push (bad) insl fwait xor aas add mov xor adc jnp mov jno mov std adc sbb fsts jo mov push neg mov push dec (bad) js xor bound mov jns xchg dec adc and lret icebp push xchg mov fs sbb movb xor cmp cmp lahf into mov add stos mov jae bound das loopne daa cmp cmp cmovns sbb repz inc flds mov add aam mov fnstenv daa shrb out push scas mov inc mov push push mov out repnz mov xchg sub andl sarl jne push push fcos push cmc jb,pt or into xchg aam push xorl add (bad) push adc lods stc mov sub (bad) and (bad) jns mov jns adc or dec xor iret cmp outsl cmpsb push sbb aam mov ds dec xor jo push xchg cs movsl add ret push enter adc fstpl dec sub aad adc cli cmp dec stos xchg lock mov repnz xor frstpm(287 stos outsb fdivrl sub push mov mov fwait imul sbb sbb cld (bad) jns push fstpt scas outsb dec daa xor or nop cmpsl pop push ds ds (bad) nop ficompl aas pop enter out loopne jo sub sbbb je or imul xchg mov pop repnz mov adc adc repz enter (bad) add outsb push imul pop dec lret popa mov pop out mov dec sub dec sahf jb dec fsubl in pop inc or dec sub movsl mov (bad) jo pop xchg notb sahf sbb pop cmp mov sub add fsubr popa jle push iret push cmpsl xor mov and das and dec push push mov mov jmp xlat xchg out out push pushf mov cmp test gs adc out mov mov sub mov xchg (bad) mov cmc pop mov lret cmp addr16 gs xor addr16 jo scas add divb ds push jmp sbb inc adc sub aam lods pop cwtl jnp push dec mov movsb pop mov push mov push in fidiv mov jmp cmp mov aad hlt fucomp nop call mov movsl loope fcomi jne lcall in xchg cld in inc cld gs fisubr (bad) inc xchg xor mov mov popf out (bad) mov xchg and cli sbbl aaa popa ret mov inc in jmp sbb mov xchg outsb mov ss mov dec stos xor daa xor add aaa mov or in fadds test sub imul cli jle lds xchg std jno movsb sti (bad) in pop jg,pn and or mov cmpsb cmp xor imul xor pop and xor push leave sbb dec (bad) sbb int mov cwtl mov jle jg xchg adc jb cli xor lret cmp repz push aam cmp popf dec je lock mov aaa pop fisubl pop nop xor jns lahf jmp pushf dec test xlat add daa mov mov in add and pop in or add mov fistpll stc push add bound (bad) sbb data16 arpl cmc pop in push jge dec repz or xor icebp xchg mov pushf sub jae mov std aam popa ja stos mov dec jnp hlt cmp sbb mov inc add movzbl mov or mov cli imul mov movsb int3 imul mov rorb outsb js les mov fmul mov jl dec loop fsts push jmp jnp cmpsb sbb in dec mov stos cmp mov inc imul loopne (bad) and dec es xor movd mov nop lock dec mov (bad) ljmp scas outsl push xor (bad) ja jmp xor out sarb sub and mov fidivr test insl std push lea jmp loop mov pop enter cmp jmp repz xchg sbb push out jge sbb mov aaa lods fs ror fdivrs or jl loop xchg mov shr add cwtl iret lock pop pop add sub push mov inc mov inc ja fimul adc (bad) cmc mov sbb dec (bad) xor inc jb xchg push in jns jmp rorl sub pop mov push out add es sub repnz dec pushf (bad) dec jge add mov nop lock pop pop (bad) (bad) jne das sbb push inc in imul mov shrb push adc leave scas or mov ds sbb pop mov out cld adcl push popa bound nop and pop dec cmp lahf (bad) aam lods sub mov jl push jp push xor cmc mov jl fstpt push adc sub stc imul rcrb (bad) cmpsl jge out jb mov clc movsl popa scas gs jecxz fdivs and dec lret lret inc cmc out mov inc jo lods push pop adc cmp xchg mulb xor orb pop jnp and inc out mov jne pop xchg inc fs mov sub lea fs cli inc add (bad) mov mov (bad) cli xlat bswap xchg out aad je xchg mov arpl adc insl fs cld xchg inc popf mov lods (bad) fs stos (bad) loopne (bad) adc sbb sti pop push adc cwtl repnz stos sbb js das hlt hlt out push es (bad) push mov pop mov pop jle and push or sahf negb push iret pop adc dec jne sbb lds pop cltd push xchg xchg lods add mov pop inc or mov adc movsb ret rclb push lahf push push xor mov push sahf mov mov pop mov je mov and xor and pushf sbb xor mov lock mov shl jno jbe push leave decb mov push lock (bad) jne movsb (bad) mov js dec adc adc cs jecxz sahf imul cltd jp inc xor (bad) xchg mov or xor ds inc and pop pop dec ljmp rcrb xchg and mov jb push lea mov sbb cmp or inc sub call adc insl or pop jl push cmp xlat push mov mov mov in pop daa aas stos sbb fs fwait sar cmp sub mov movsb sbb (bad) add sbb sarb fimul stc das dec or pusha (bad) (bad) mov push xor cmp pop in mov (bad) notl ret xor out (bad) aaa ds adc jnp jle sbb or mov rcrl ds mov adc sarl ficomp cli inc push xchg jns nop nop mov (bad) pusha gs (bad) jo test xor or (bad) pop cmp adc push adc pop jae sbb mov clc (bad) dec add lods pop dec and push push jge lret fisttp push ret push adc push sub lods imull rcl jo or pop call mov into gs sti (bad) jp mov fsubrs cmp jnp adc jae shr jp push mov xchg (bad) int xor sub fcmovnbe or mov aad add pop fisubrl insb (bad) pop jecxz into or dec xchg jl xor mov test sub roll mov shlb inc and outsb repz arpl cmpsl jne sub leave mov pop lods sub movsb dec cltd and dec sti rol xor jns add mov push or jle add sbbb sub adc pop mov std cmp addr16 cmp pop int3 cmp inc mov mov ds popf (bad) pop dec mov mov mov movsb inc movl icebp repnz (bad) fstps lret test sbb sbb inc dec nop cli sub testl jae xor sub adc fcmovne mov fcomi sbb into adc in scas out (bad) icebp sub cltd (bad) xlat aam lret push pop adc jge push shrb xchg push rcr insb mov push sub xor in sub lds movsl aaa ds pop es push push in pop adc repnz push dec jae or dec gs repz aad mov dec aas adc jg pop dec mov and jnp push dec jg ljmp les jo sbb insl xchg int lods ds inc pop cli in xadd xor cwtl icebp hlt inc (bad) mov sbb imul inc pop xchg aaa pop repnz sbb stos mov add lock mov pushl pop jae ja add cmp test hlt dec jg (bad) loop lock sub mov mov pop push repz in xchg inc loopne adc sbb lock sub (bad) frstor fdivrs adc orl sub mov push sub sbb test loope repnz insb icebp sbb cmc and scas cmp inc or mov fisttpl lea stc sub sbb lods ljmp add out sbb jb,pn xor pop out pop (bad) mov cmpsl (bad) mov inc std inc push aam or sub stc test or mov xchg mov cmp push mov inc dec cmp xchg leave outsl jl or jle bndldx icebp push pop jb or icebp bound fidivrl sbb cmc mov add sub inc in aam leave enter jecxz sub arpl loope mov push leave out sbb test vphaddwd push insb cmpsb arpl in fimul adc into sub inc mov ljmp mov outsb mov push std mov push cmp cmc pop jle jnp sub outsb cmc add adc and test outsb outsl rcrl inc mov mov insb mov push incb repz mov mov inc insb sahf test in es mov sti shl jns xlat pop rcrl ret cmp sub out xchg rorb das ja dec ss and sbb stc sbb je jge push xchg aam aaa cmp lods insl out out js imul jb xchg push sub std push aad cmp or leave fcompl mov sti in adc into dec mov push sbb lea imul mov ljmp xor sub push imul pushf ret push (bad) pop inc iret sahf cmp mov iret sahf cmp mov iret (bad) jg add add in pop add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fistl add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push and jecxz icebp jae cmp fimull rcll cmpsb cmp xor imul jmp mov decl jle add mov sar cltd cwtl ret jp and jmp aas test mov mov push dec mov pop stos sub jo mov cmp out push mov push cltd arpl push (bad) repnz pop cmpsb mov sbb daa rolb mov mov mov or scas mov popf nop lock push xchg pop pop outsb sub and imul or mov push sbb std mov mov scas rcrb add pop mov loope xor pushf (bad) cli test mov (bad) jne push mov addl dec popf sarb ja aad inc mov sbb mov push jbe stos pop pop test insl test sbb add cmc add xor and pushf in in push mov aaa inc mov sbb negb dec add inc mov sbb mov jae data16 mov fisub iret faddp inc in lret gs mov push xchg mov mov sbb push sbb shr jp ja xchg daa push add cmpsb imul movsb inc dec mov and ljmp sti inc test mov mov dec mov pop pushf pop (bad) lret adc pop jge inc movsl and stc iret lea rolb pusha aas add aad and jno sahf pop into inc xor dec mov fldt xor sub (bad) dec shrb jne push out pop dec fs cld in mov mov lods push xchg mov mov lock ja mov test repz sbb dec shl enter mov dec xchg enter push mov or sub mov mov push sub cli out or jne xor pop add dec cmc xor mov hlt fistl imul inc pop out push xchg dec iret repz and fisttpll cs xchg cld mov sub sahf outsb popa int3 fstl (bad) fldl mov pop or out loop cmp xchg cld xchg adc bound repnz cs into stos jp cmc les cmp inc das xchg jecxz sarb adc dec cmp stos pand icebp push in fldl rcrl sahf int or dec lea jns push int repnz rcrl lahf pop cmp cmp ljmp dec (bad) sarb sbb and cwtl adc cmpl dec addr16 pop sub int3 testb sub shll jbe aad insb lret xchg cmp insb pusha stc push xor lahf int dec pop lret add scas push sub lods es cmpsb ret and gs sub repnz in fcmovnu negl inc mov hlt imul dec lahf orb jl or popl sub cs clc (bad) jo dec push xor fnop pop inc push pop insl jg dec in arpl mov inc add movl int3 xlat cmp daa cmp (bad) imul sbb xorl lods daa jnp xchg fmull cmp xlat mov push or (bad) or imul jg push xor mov mov ds inc std call push not iret leave (bad) fsubs and lret test cmpsb aaa in jmp push bound (bad) or out mov xchg sar (bad) mov jae popf les push icebp popf ficomp sbb outsl jnp and pop sbb pop arpl lods cmp divb mov push sahf fcompl pop add aad mov inc and mov sub mov pop sbb pop subl int xchg jge mull les fwait add pop push mov or test add fldl2e push stc sbb or imull out out sbb imulb psrlw in xchg iret mov sti and push sub repz fwait jle insl cmp mov xlat mov push mov mov cltd pop push aad dec data16 mov js or and push mov xor das mov daa sbb xlat sub sbb xchg mov in xor fmuls or scas fdivrs xor insb sub out (bad) test sub rolb pushf push fs jo scas lods out push int mov pop xchg les mov sub cmp push push mov xor lret jne push leave cmp xchg fwait and out ja adc xor sub int pop mov ds mov fsubp mov arpl xor fbstp jbe dec or cwtl mov mov insb jg cmpsl add sub icebp dec fwait insb pop sbb cmpsl in cwtl add mov jmp inc sbb pop mov jecxz and lds cltd pop xchg das stos push sub mov iret test cmp insb dec pop mov ljmp ja sub fistp test icebp mov aam arpl pop les daa lret outsb mov imul lret cltd push xchg mov and roll sbb adc lods xchg fcmovu xor imul loope dec xorb lods jmp jge inc add and cltd ret (bad) jns pop xor mov push push aad sbb mov xchg jae xor xchg inc mov push notb loopne pop stos iret xor xchg cwtl cld in jp pop ljmp xor ret loop sarl mov (bad) aas cmc pop fcmovne mov mov cmp sub and or add bound jno cmc mov pusha and stc pusha xor jne (bad) sub inc lods cs movsb cltd xchg jle xchg pop xchg lds movsl js pusha repz iret fcmovnbe sahf add iret shrl gs jns hlt inc mov aad inc (bad) cmp cmpsl xchg jg int cmp fwait ljmp jbe and lret aaa mov repnz mov xor mov mov mov push test cmpsl aad dec lahf dec xor mov insb jg inc mov pop enter pop rorl mov xlat cmpsl movsb adc mov cld jmp orl mov cmp sbb push insl add mov dec mov and push adc loopne push sahf mov mov stc dec sbb cmp gs cwtl adcl (bad) fs pop jne push repnz lods aam bound ljmp jbe insb cmp fs out std pop dec xrelease sarb je leave pop and mov sub clc fisubl jle aas fstps movsb push imul xor mov add les xor adc xor out in pop xchg fisttpl jne push movsl mov pop loopew (bad) ficompl and and testl jecxz popf mov pop popf arpl mov and enter add xchg sbb lcall dec mov mov add and push pushf mov out sar inc pop push imul add jno int3 popa popf cltd cltd js add or fisubr imul sbb mov and fbld push pop nop pop lahf or xchg shll mov fadds mov (bad) mov dec xchg or mov cs enter je incb pop lods mov cs sahf xchg rorl jne push xchg dec xlat repnz xchg adc out jno lret scas dec jnp cmp rclb jno push xor daa mov shll sub (bad) add stos jbe mov into test mov into popa add sub out or roll pop sbb jae jne fdivp ds xchg dec inc out jecxz clc pop je bound push inc inc sbb (bad) cli jo in std stc rcl mov sbb sbb (bad) adc lods pop (bad) loop shr lea push xchg ds in clc nop push int3 sarl jns jo inc test mov xor mov ja and (bad) cmp cmp adc xor cmp repz adc xlat mov iret and stc xchg jp movsb jns xchg pop xchg pop pusha mov cli pushf (bad) lcall cmp mov in jmp pop in and pop mov stos rclb insl stos pop mov mov ja jmp pushf push mov sbb cmp and sti jcxz imul cli cmp mov lds lds cmc and incl push pop add ret lea or outsl pop fcompl cli xlat xor mov test (bad) adc mov xchg sti mov mov ljmp cmp dec sbb out clc cmp xor (bad) mov jge xorb insl push add push jo pop pop scas push push or and add test ds outsl loopne and cmpsb push mov mov clc mov bound es imul and lods adc sub fs xchg out and fldenv pop neg lahf mov nop insl mov loop jge testb (bad) sub lahf pop ljmp xor sub add inc outsl ret mov rorl ss nop (bad) outsl sub xchg mov dec inc (bad) insb adc jns sbb mov mov lahf pop dec decl repz adc mov push adc std test and dec imull sti mov jo lea test fbstp sub (bad) dec int3 mov je push mov out aaa nop pop ljmp into push repz fnstcw adc mov mov mov cltd inc jl repnz mov push sarb outsb in cmpsb adc push pop lahf dec jecxz dec lods out mov insb sbb (bad) mov rclb (bad) xchg cmp test pusha (bad) push mov jb stc aad inc pop js cwtl dec daa fisttpl sub mov push mov out cmp cmpsb lcall mov (bad) jmp dec sarl lret push in mov bound add out stc test and mov lds cmp cmpl add arpl test outsb (bad) clc or imul insl cs cld fyl2xp1 sbb aaa mov sub cmp sub arpl or sub push sbb or (bad) out ficompl aaa xchg mov and in dec xchg sbb adc out sbb loop rcll xor jb test addr16 stc pop xchg imul lcall scas dec adc fsubp push mov inc (bad) mov mov sbb dec dec and sbb ror mov hlt mov cmpsb mov int3 rolb hlt jmp xor cmpsb das dec mov sub xor imul inc loop fdivs adc cmpsb sub push aas jle mov sbb sbb adc sbb push inc test or fnstenv sbb cmc add daa loope movsb xchg adc fdivrp adc pop (bad) shl pusha mov dec adc lods mov push rcll xchg sbb lods push pop fiadd jg aam rcl pop pushf xlat imul int mov or fsubrl int3 xor repz inc int fwait std push out rcr dec add lcall decl push loop fsubrl mov out imul push sub jl ret sub mov lods jl mov mov dec lock jl inc xor insl bsf push addr16 enter iret sahf aad mov hlt pushf loope,pt out inc arpl dec cmp mov (bad) lods xchg (bad) mov dec jmp mov adc mov out insl mov mov mov sahf push cmp cltd mov pop dec jl in add or ds cmp xchg pop outsb sahf mov (bad) cmp leave out or fimull stos xor cmc or fsubrl jmp and aam lret or cmpsb push cwtl xchg clc (bad) jp xchg push xchg addl adcb sbb movsb xor sbb push sub dec jae ss push dec (bad) jecxz jno ja rcl movsb pushf mov dec ss jp inc or inc outsl lds out imul jns loope jno xchg pop push jno daa adc in cmpsl and clc dec sub gs in mov (bad) into add cli dec add cmpsl lahf dec and jecxz jae lret popa lret int3 xchg popa jb call int3 mov jge js inc arpl inc sbb subl mov imul mov push sub fisttp jnp pop jp push rcrl pusha je adc push xchg imull ss jns stos dec add mov mov cmpsl dec rorb mov ret sbb in and lock scas and fwait (bad) icebp (bad) pop popf cld or fcoml fiadd sbb daa push cmp test (bad) pushf shll mov test lods jno cs or pop sbb push sbb aad push test xor (bad) out mov outsb xchg lret ja lahf jns leave gs dec into je cs jmp cld aas push popf cmpb xor push pusha cmpsb mov movsl xor mov das pop inc jmp aam adc jno imul ja and pop fmuls cmp out test not adc inc adc cmp in mov fmull gs xlat mov insl gs das loopne (bad) jecxz mov arpl pop mov test inc pusha inc xchg sarl adc push fwait or pop cs dec fcmovb loop sbb sahf popa pop add jecxz pop jo lods into lret in adcl add push inc adc outsb jecxz loope fbstp sub mov sbb cmp (bad) aad mov je cmpsl and add mov in out inc and mov dec mov add (bad) test (bad) aas push int3 pop iret xchg or int3 sbb pop push imul cmpsb mov xchg cltd inc xor aam jbe scas cmpsl negl cmp mov and lods lahf push mov dec gs adc pop (bad) imul sub sbb loope sbb data16 loop or js cwtl stos hlt sarb aaa mov lock int mov pop nopl lock addl push cmp lock decl add aas int3 cwtl lock add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas aam cld pop lock in xor fxch cmp jmp iret mov mov mov jne xchg enter loope std std decb jp push scas (bad) sbb rolb sbbb lret adc dec sub xchg in repz test pop mov hlt dec imul jp mulb test mov lods and dec xor sbb pusha test les shrl pop movsl loopne popf push lock inc outsb int3 das sbb mov scas test in mov and mov sub xchg and push insl ljmp and and sahf mov mov fs imul fistpll rcrl test arpl movsb imul out decl xchg pmulhw clc fldt push out or cmp out aad in test pop cmp mov es jb and pop loop je aam loope scas imul xchg clc ret adc push xchg xchg sarl pop sub sbb push inc push jl (bad) xor xchg pop push jecxz xor sub push js fstps mov sahf mull xchg in or ss stos repnz add jecxz push pop enter sbbb stc fwait dec movsb lret outsb pop or xchg pop lret add (bad) das repz out pop lcall mov push cmp jl add lods mov aad push imul push dec jge sub fldl pop jg cmp movsb cmp cli add lock fwait adc jo xchg dec das scas add fnstsw pop cmpl stc xlat loop (bad) cli dec sbb lock lds dec mov pop xchg mov popf add lret aad mov dec movsb mov pop int3 leave jecxz add jp mov mov in mov or jp pop push in adc jecxz sub xchg sub add js sbb cmp ljmp or push popa lret inc xchg xchg (bad) stos adc fucomi sub lahf in xchg add (bad) aad cmp mov in aas (bad) xor jp pop aad xor gs es inc (bad) push sbb repz sub je xchg ret mov jb sbb in pop stos pop out cli cs mov jae,pt push xor aad jne lods test lea mov sub push push jno in sbb faddl in dec (bad) xlat mov daa xchg mov ds popa mov and mov add mov xor fcmovnb jle fdiv movsl xchg cwtl lret enter aas xor leave push mov gs mov fdivr jle fadds and jns out sahf push aaa mov pushf and inc xchg dec enter mov (bad) mov cltd mov cmp sbb or pop movsl cltd cltd adc orb dec fistpll jmp iret aas inc in cmp (bad) (bad) (bad) cmp push add push ss mov cwtl sbb mov sti jle sahf push dec insb enter and jo adc clc std mov inc cmp addr16 movl pop inc cwtl xor out sahf sbb aas (bad) cmc push ror and (bad) dec ficompl popf adc adc movsb pop cli sub xchg das mov aam lahf xchg divb jbe rcrl push out das cs lahf imul add jo xchg inc inc push inc fmul sbb cmp adc dec fnstsw rcl sahf mov stos lcall inc push jmp sub mov jo adc sub mov dec adc cmp xchg sbb push outsl mov scas bound jp fs sbb (bad) xchg push jnp pop sbb loope and pop add repz and xor loopne test mov mov subb outsl inc cmp sbb sub push sbb mov stos and repnz daa mov push pop mov stos push lods outsl sbb mov lea jnp (bad) mov sti outsb cmp loopne pop jnp sub call adc nop jge in push ret lcall or (bad) inc scas pop out loop idivb dec xor push jne jae xchg and mov xchg clc outsl cli pusha popa mov xorl cmp in ljmp sahf fdivr subb out mov jle push je adc aaa xchg mov pop pop leave leave or mov subb loop fstps push xor testb push frstor iret fdecstp inc push xlat out xor jmp xchg xchg mov in xchg sbb data16 fyl2x add stos fisttp pop jns insb push mov dec pop lock mov lods sti mov push shr or sbb in aad popf int push pushf dec inc cmp lret dec das fwait aam js dec testl in adc ffreep add jae leave mov and jecxz js pop sahf aaa andl pop mov hlt gs push mov push in ret adc mov loope adc lea movsl leave and sti sbb mov repnz mov imul stos test fnop stos addr16 sbb cli movsl stc sub xchg cmpl outsb sbb addb add push sub jno push pop mov pushf and jb (bad) push lods mov popa sub in jns es sti outsl cmpsb aaa and cmpsl mov loope jo mov mov cmp add cli cmp loope call sti clc stos adc cld push add inc xor fisubl aad (bad) lods push pop jb cmp in aaa mov insb inc xchg xchg pop xlat shlb sbb iret mov jae (bad) xor hlt and daa mov lahf in les dec inc loop dec sti inc call leave add data16 xor ss das shlb (bad) cmp fimull mov push jns ret jp mov pop dec jnp frstor fild popf xor sbb and mov cmpxchg cmc jb sub jne nop js inc sbb cmp aaa aam incb popf fdivrp mov cmpsb inc cmp out dec dec inc mov mov sti cli orb push in sbb and push test (bad) in out daa push (bad) lret and aad adc lea (bad) fs push xchg lods jae stos sbb out cmp neg inc sti xchg inc cmp dec idivb mov lret cmp popl stc or les mov pop fcompl add jno ror mov adc xchg jecxz fmul movl outsl xchg rolb sbb dec iret mov lret scas fnstsw xchg rorb add add insb mov and (bad) hlt adc cmpsl pop dec jmp scas stc enter stc rolb fwait (bad) pop fbstp aad and in mov fdivl mov repnz adc cld imul das add je sbb jle test test out outsb xchg mov jns aam mov dec mov sbb movsl lock mov fsubrl jnp aad ror popa and out stos xchg rcr sarl jno xor lds xlat imul add mov adc call loope or and hlt push push rorl popf inc cmp or push movsl in (bad) mov inc popa out in or out lods add pop xchg cli je sub push or pushl sbb mov inc enter cmpsl lahf out jno push (bad) (bad) pop sub das mov mov mov es ss mov lock inc int3 dec ds lahf xchg lds sub andb ja cmp nop loope sbb or rol data16 cmp rcl rorb cmp in sahf and fs insl cmp xor dec mov in cmp lock scas (bad) das pop adc inc inc stos in push into pop cmpl cmpl imul xchg mov xor cmp cmpsl ret jb push adcl cmpsb jl in xor daa cmp ja pop in ret (bad) adc jle insl in jb mov mov xchg cmp pop je xor int3 sub cmp mov sub iret push mov or jbe jl out push repnz xchg mov push fmull fdivrp cld mov pop pop insl inc stos arpl lcall cmp jle xchg scas mov sub or (bad) mov ret mov mov sbb popf in lret adc sahf (bad) rclb jne sub mov (bad) fildl jns pop sub repnz ljmp rep xchg or sarl mov das pop push xor int3 (bad) xor fcmovne fwait dec pop jle xchg (bad) adc mov xor sbb pop add bound dec jmp lods lahf lret cmp imul pop sub orl jg mov pop inc repz shrb cmp (bad) jae mov and inc out mov aaa ret cmp ret adc xlat cmp inc inc xchg repz mov mov call lea je fildl jbe aas lea je rcl cmpsl xchg shr fcmovnb lahf popa sbb bound xlat xor mov cmp adc mov ret adc xchg hlt xchg inc mov sub (bad) add cmp push (bad) sbb cmp out (bad) cmp pop sub push enter shl xor cwtl cmpsb push mov mov mov sti cmp push push std or mov xchg mov or lds test jecxz pop aam jmp lea dec pop rcl push mov mov pop test cmp jae sbb (bad) dec sarb inc inc int3 push add fucom or sub int3 sub fcompl push (bad) mov aas mov inc cmp and add (bad) hlt repnz and add inc lret cwtl iret gs hlt nop std and aad sbb clc xchg jp jmp lcall js push movsl mov ficoml in xchg xor hlt add cwtl int gs ss xchg fldt dec lcall adc (bad) mov cmp ret repz fs sbb dec sti ljmp jp jnp adc pop movsb pop test xchg mov loope sti mov out lea aam out js insb pop xor out mov inc movsb cmp mov divl mov fwait push lea add cmp xchg jle adcl mov cwtl in rcrb ret pop mov inc movsl int3 fidivl pop mov ucomiss adc xchg jecxz pop sub push scas enter mov and repz mov (bad) ja mov imul ret scas xor popa or xor adc mov aam test (bad) fidivr jno adc (bad) xor lcall dec push jne gs dec ror jb mov sub movsb aaa popf sti xlat aas cmp sbb dec fs das mov dec jb xchg pop ret aam call aas mov inc out sbb pop inc push ret lock jecxz adc xor cmp mov jb mov adc mov (bad) xchg xchg fcompl sub and out mov hlt loope (bad) xchg dec pop rcrl cmc sbb cltd stos pushf pop dec in jo (bad) cmp leave sbb lds outsl je mov insl hlt inc jne add loop fwait xchg sbb cwtl aam (bad) mov and jge sub cltd pop dec mov mov sbb sub push fsubrp xchg and lods xor push outsl inc lods pop insl dec jle mov movsl pusha pop sub inc adc ss out push test push pop lea int3 (bad) mov sti ret push inc sahf sbb fdivl jecxz jae pop mov or xrelease ret adc mov or hlt stos std cmpsb mov ljmp mov jo cmp out daa sarl dec mov xchg mov sbb mov lds (bad) stos iret imul mov jo js xchg cmp sbb adcl lcall mov lds pop xor add mov popf ds lahf outsl or clc add push sahf push es enter shrb fimull sahf sbb lock cmp push jecxz pop push xchg cs cmp and fiaddl js sbb pop add stos add in scas dec xchg lea pop adc sbb push mov jecxz dec inc lea mov or xchg jl daa jle cmp lods insb in inc dec pop jge pop fild fcmovnb pop call pop cld pop xor and sbb (bad) cmp iret jmp daa inc sarb out imulb jns mov or fcomi dec and cmp xor inc fnstcw push (bad) jae mov faddl std pusha mov lods (bad) jecxz iret adc loope jns aam ficomp lret movsb dec jns cmpsb mov pop xor daa movsl push inc sub lds pop loope adc mov scas push adc loopne in push std sub jg sbb orb and sbb shll inc lods add fsubs clc jae rorb fwait idivb ja xchg jg outsl (bad) pop add adc pushf and lea and jge sbb mov jmp push (bad) sub add aad dec adcl (bad) out cmp in into (bad) fdivrs loopne loope push cmp and aaa in (bad) in adc pop fs aas xor cmp (bad) lock (bad) push xchg pop xlat pusha nop (bad) or adc jae arpl mov mov sarb pop or xchg push xor jge xchg dec cmp repnz (bad) lock cmp (bad) test int mov jbe inc xchg sub popa jo cmp adc jmp (bad) mulb fild (bad) mov (bad) mov mov cmp xor popf cmp fdivrl cmp fdivrl add pop inc xchg fstpl add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push aas sbb add lock imul dec mov rcr dec imul pushw bound es cmpsb (bad) mov pop jecxz jg aas add or scas mov xchg add popa jo or daa sbb and ret dec pop shr hlt xor subl and adc loop push add ss cltd imul fistl cmp sub or mov scas or notl jecxz outsb movsl and fimul mov inc jb in mov arpl pop and iret mov xor icebp ss insb mov push out inc lret mov push stos scas sub lret add mov pop rolb adc (bad) cmc cwtl lods addb push sarl addl jno xchg mov and add in aaa push es stos int3 sbb lds jmp xchg imul scas jl loop pop push aas (bad) into adc and cs arpl sub and sbb lock enter or pop rcr ljmp inc std imul jecxz inc cltd xor in add mov cltd dec mov inc jle mov mov es lcall push adc mov sub jmp mov mov dec pop mov jle hlt neg outsb push mov fcomip out jl lds (bad) pop insl scas xlat test jb sbb jb mov fincstp jge and or lcall mov cmp dec lea repz xlat mov adcb sbb jno cmp in fistpl gs scas stc mov negb aad jecxz mov push push fdivs sub arpl sbb ja lock out cmp sub (bad) ret mov ja fistp xchg add fmuls imul (bad) hlt cwtl and pop xlat movsb test in xor sbb out mov sbb movsb add jp add cmp adc or loop or out shl aad jp (bad) xor stc xchg (bad) pop js push pushf xchg xchg sbb testl jl jmp add push lock mov insb (bad) pop std xchg into rcr fistl mov add push inc and xor es sti pop out pop push notl movswl adc outsl jecxz inc jns jnp leave (bad) (bad) sub lods mov cmp ret movsb push in daa dec mov push paddb sahf mov hlt arpl xchg jb jecxz sub mov leave mov mov outsl adc movsl mov adcb pusha nop sbb mov dec daa push fsubrp dec adc aaa loopne and insl sub mov in fldt mov popa jmp jne call cmp test in and pop mov cld fsubp test inc adcb (bad) pop pop ja mov sbb adc pop daa data16 mov add xchg cmc insl mov js xchg sti stos pop xchg arpl xchg rolb popf mov out mov int3 rorl les ss into ja gs aad sbb xor push inc mov sbb inc dec imul xchg repz jno push dec (bad) ds ss scas sbb adc pop cmp and mov ss xchg addb leave sbb das clc insb push dec arpl lret pop cmp fwait in jb dec (bad) xor fucomip or rolb or mov ss dec shll int xchg adc bound mov dec mov pop (bad) repnz pop push add mov insb mov in pop scas push idivb data16 shl jmp dec mov dec int3 and sbb je arpl clc popf mov lods adc aad shrb rolb shll test xchg or xor jecxz ljmp cmp in jb (bad) cwtl mov mov push jp adc mov test push push test sbb and into scas lret je xchg inc ds dec inc sbb xor lret stos aas dec rorb stos inc sbb mov ss xor jecxz lock pop cmp xor and inc stos cltd xchg add jle out (bad) xor mov das or rcr fs sahf jbe sub rclb push loope add xor adc mov inc ret shrl adc jo std ret add lods mov dec pop test and cmp xchg pop loope pop mov fnsave jne sbb popf mov xchg inc adc mov mov arpl ds add loope fisttp fisubl xlat movsl mulb cmp lret pop xor mov std pop (bad) imul jbe loop test inc shl ficom mov or adc dec jae into daa fnstsw popa cmpsl pop mov test lds push imul cmp cmp add pop ds movsl xchg loopne mov cmp push jl mov cmp iret call mov in cs icebp inc ret das or scas sbb nop cwtl daa pop cmp ds into adc enter cmp lea movsl call sub push cmpsl les mov dec notb maskmovq inc add int3 mov cmp cli mov xchg mov rcr sub mov xor ljmp adc imul sahf imul mov add jae adc xlat mov push mov jns push jb adc mov pop int3 ret xchg mov xchg cmc mov adc popa sbb jnp pop xchg sarb sti push mov out mov inc inc mov dec ror xchg jo mov cmp fstpt rclb lret out push sbb push mov icebp cld cwtl (bad) mov and dec cltd scas mov stos pop sub (bad) out scas add pusha popa lea xor jle sub sbb jg lahf mov or inc xchg add dec cmc popa aam int3 out aad inc out sbb xchg mov sahf pop stos cmc ljmp add enter and mov mov test addr16 adc lcall xchg xchg xlat fsubrs mov ds ljmp (bad) test lods in popa pop mov lcall xchg fbstp enter adcl in add into push aam gs sbb push mov push mov scas imul iret push fcmovnu mov repz push xchg cmp pushf cmpb stc nop mov roll and rcl jl jb int3 mov cmp or mov cmpsb pop std je icebp out fsubrs (bad) (bad) jnp inc pop pop enter daa sub js push xchg mov or stos jmp fiadd or ret aas dec pop rcrl mov movsb mov (bad) iret push cmp cli mov icebp cmpsl cs add fist and inc pand mov inc ret mov cmp in inc mov lahf cmp not cmp js add cmp pop ret pop inc inc leave xchg iret les jle cmpsb sbb pop mov mov sbb mov (bad) bound mov leave jmp mov (bad) repz mov bextr fldenv inc imul dec nop cmp push pop mov sub dec sub andb mov cmpsb dec lret jno add cmp dec jg mov jo push insl lds adc mov xchg or hlt dec inc push repnz (bad) jmp and lahf les les xor subb (bad) hlt cwtl lds fiadd lock or jns (bad) inc arpl lea rcr fcmovb inc mov and mov sub popf push sbb repnz xor cld fdivrp jp and dec xlat aam pop pop mov aad lods sub jb push sbb xchg or in pop push daa jb mov mov push in jl cmp int3 mov (bad) dec cmp loope arpl and test movsb mov repnz jnp outsl xor add jae dec leave xchg dec sub adc xchg xchg (bad) add scas lods je lods lds xor adc loope and pusha popf cmp push cld dec mov pop movsb aaa aam or dec lds jne mov or mov push gs fucomip cmp es (bad) mov mov fistpll aas in scas inc lret sti sub sub out and push into mov scas (bad) ja sub sub jns adc mov loopne inc dec icebp aaa xchg sub mov leave shrb mov sbb lret popa dec mov xchg stos jle clc out outsl dec mov call or mov fstpl ss gs xchg xlat fsubrl mov test xor pop lock dec jbe pop push mov cmp pop rclb lods pushl mov ret inc notb scas inc cmpsb push test add enter ror cmpsl les and fwait sbb jns lahf adc or dec mov adc aad lods push pop xchg mov daa out jbe mov inc repz add pop cs mov cmp cmp push cwtl xchg ja (bad) str mov rcl pop pop subl mov fcomp iret sbb mov and fs mov lret call es push in xor mov iret mov add movsb fs lock insb mov popf mov les mov enter mov lods sar lret (bad) mov ljmp add sub jp add xchg repnz push arpl add es dec dec cmp jns cmp xor in out add aam icebp jnp and xor imul fmull add inc subps push stos inc les fcmovnu cmpsl cli mov dec fdiv nop xchg dec imul xor cli sub mov and mov cli mov xor fisubl inc test jo aas cmpsb scas rolb arpl fcmovnbe xchg (bad) rcrb xor repz daa rorl ficompl sub adc jmp in out int jns dec jecxz test (bad) das jae stos lahf lock xorl rorl xchg sub cli pop ds fldl neg fdivrs incb outsl stos sub test (bad) and andl push insl push jnp in lahf jecxz enter scas negb xor push movsl stc outsb inc jp sbb jecxz cwtl scas fxam mov push imul cltd pop sub mov pop push test scas (bad) xor push sub (bad) sbb lret sub data16 cmp insb lcall xlat mov pop addr16 lods out jmp in inc (bad) rol std clc mov ds nop cmp inc xchg in in xor sar jb jnp lret xor out jns aas int3 inc adc (bad) mov in jns icebp cmp arpl pusha (bad) push cli pop mov aad data16 les mov ret mov and inc xor movsb push jb lahf mov xor test shll clc jns mov push xchg ja and decl cmpsl and out test or sub arpl xlat data16 jne enter sub es inc push in dec leave sbb sbb adc inc inc jae mov fsubrl (bad) icebp call jp pop into mov cltd inc mov jo gs push push (bad) xor sub rclb es lock nop sub rolb sarl outsb (bad) push popa sbb ja dec push adc dec fistl sbb jno jae nop test xchg cmpsb jmp cltd sub pop mov push out aas mov sbbl sbb aad lahf pushf outsb das pop loop cmp jns (bad) jns fnsetpm(287 andb fdivl out lods mov inc sbb inc mov addr16 subb add test cmpsl fnstcw pop mov shll pop pop repnz push mov call xchg cld dec cli jne add (bad) int (bad) sub aas or in xor sbb lods adc push lcall add cwtl lds jae (bad) out lods and mov pop cwtl in stos inc cmc sbb dec popa push ds cmc pop stos push enter cmp out cmp xor or add add jmp jnp hlt cltd jge lcall mov fcomps int3 mov loope ss lcall jmp mov test sub loopne pop jle in jo insl fwait movsl push pop je,pn add sahf ljmp nop stos mov pop jp lock inc xlat sub push adc sti mov push cmovnp sub adc movsl shl xchg (bad) cmpb shlb sub popf push je dec neg adcl loope aaa pusha inc dec je les jns andl mov stos xor dec cmp ffreep psadbw outsl sub jg test ds loopne call fsts daa int3 mov lahf and es icebp or cs roll pop cmc ja mov add dec push pop xchg sub arpl pop (bad) sub inc jle push or in jb in sub jle dec stos dec pop scas jge (bad) mov mov lock enter or adc imul pushf into jecxz scas xor fist icebp loop adc (bad) xor (bad) lret mov pop mov iret ret pop stc cmpsb ss popf cmp add cmc mov lahf jg scas push lret cli mov int3 sahf pop inc or dec mov dec mov enter test inc lret xchg inc roll loop pop enter jmp and and jl jg xchg pop cmc dec (bad) (bad) mov fsubs shrl ficom bound faddl es pop pusha add push or pop dec jp push cli fcmovnu test int dec jg outsl xor cs jmp push int xor std sbb icebp fbld xor inc sub out push mov aas xchg xchg sub pushf lcall stos push iret mov pushf hlt clts inc xlat push insb pop or (bad) sub popf ljmp mov xchg cmpsb mov decl mov mov das pop mov mov (bad) aas add or rcrl add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ficoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push inc adc and mov mov mov frstor add rclb mov sti fidivr stc jo add jae decl cltd xchg cmpsb cld pop pop sbb test mov bound pop cmpsb sbb or mov decl adc rolb es xchg nop or cs arpl jge push js and lcall push sbb mov inc test bound xchg ja imull xchg xchg lea dec mov cld lret add jno (bad) in xor xor jb lret dec outsb jae mov push pop ret mov ss dec and lea mov dec pop add sbb push jecxz jmp dec pop inc lahf gs add sahf jecxz aad daa arpl jno inc pop sub and iret nop lret clc pop nop xchg mul push push icebp inc push pop repnz and cmp add outsb cmp push loope cwtl inc pop outsb pushf (bad) jb stos push adc aas imul int lods lcall cmpsl jne jnp test push jbe jnp stos and xlat mov (bad) adc xchg jge jg sarb stos iret jg loop dec jns arpl xor push jp push call xchg notb add test mov pusha jo (bad) push (bad) mov adc movsb test sbb adc sbb cmp lret jge mov pop xchg test insl mov dec movsb jge int pop cmp cmp (bad) pop push push dec imul (bad) xor xor mov jo and sub cmpsb lcall out cltd movsb sbb jmp xor or into mov bound jmp inc pop les jns dec inc xchg jns int les loop cmp int xchg fldcw mov aas mov xor lods sbb mov loopne lcall push cmp mov or xor mov sbb andl jp mov pop pandn adc mov pusha fdivrs rcr dec push aaa add dec inc lock into aam lea sbb xchg xor cmc cmp pop int3 xchg add pop ror mov sub cmpsb sbb popa aad jns jmp (bad) into data16 or jno jg inc pop pop xor in mov lcall cmp xchg (bad) jbe addl cli and pop imul add push adc std sub pushl sbb popa js sahf ret cmp mov mov scas add mov and das dec xchg adc mov sub leave adc neg or xchg xor mov (bad) xchg int inc test push pop cmp scas jne jb aad mov cmc lcall push xchg pusha mov sub dec mov fcomip push hlt push arpl inc xchg dec dec mov out ret rorl mov adc clc popa in test mov rorl out mov xlat adc add dec jae fsubs add aaa dec andb call aad arpl xchg int dec mov lahf mov pop gs cmp sub pop mov lods sbb add pushf lods mov add clc jnp cwtl inc or iret or subl sbb mov cmp test fucomip ja roll mov stos jg inc dec (bad) mov jns mov xor iret pusha mov (bad) repnz shll cld imul in clc dec add mov sub ljmp inc neg sub dec push ds xorb aas mov sahf push jge or or imul (bad) into addr16 push clc xchg data16 add or push add gs mov call mov xchg xor (bad) inc nop jb dec mov fldl adc sbb sarb xchg push jecxz sub (bad) lock fnstenv lret mov pop jge mov in out mov ljmp mov outsl inc xchg aas imull test cwtl aas fistpll push sti add repnz sub mov (bad) (bad) mov mov mov pop cmpsb xchg (bad) sub clc jecxz jg adc xlat or (bad) lcall mov int3 imul pop push scas lods adc add into lds in cmp adc repz push inc test mov stc dec icebp push mov cmc out and adc push cmpsb cli hlt mov cmpsb (bad) jb les jmp sbbb mov cli sti das and push shl fucom pop popa mov pop adc std dec ds pop adc and push das dec sub das mov aaa int imul (bad) fmul mov push pushf push pusha addr16 dec jne sub aas mov jle icebp mov loopne inc xor jge jecxz ljmp sti aad mov fcoml add scas in das iret sub out xor (bad) negl and jns jg stos mulb or outsl fistl cltd jns cmpsl cli in cmp nop jl cs dec or pop insl adc xchg scas imul in cmpsl push lret aas sub repz lock xchg loopne push fdivr jmp sub jb xchg pop popf add (bad) cltd arpl aam and xchg ficom and xchg lds push incl out mov aad leave and ror ja jg push (bad) clc cltd pop (bad) pop jl jecxz and xchg and xchg fisub sbbl fdivp push lahf cmpsb repnz pop out mov addr16 cmp inc push fnstsw popf xor in (bad) lcall test das sub xor jo push cltd push jg adc (bad) mov or jae das sbb loop shll dec ret push cmp ljmp repnz outsl xchg lock lcall add movsl dec xchg fildl push inc xchg cmpsb fdivr imul (bad) dec and es repz xchg inc popf scas add loope leave push xchg pusha out mov push arpl sub push nop mov sbb push mov rolb cmp pop stc cmpsb push pusha xor sbb lahf pop xor and mov push adc in pushf xchg mov pop insl sub iret in in das mov loop sub dec sahf test pop xor jno push and mov sbb movsl xor cld subb add mov stos xchg stc int3 lea movsl mov xchg mov cld lock cli cs pop sub mov out mov adc sarl bound push inc mov test pop sub add and dec add push bound sub push clc xchg int3 test out pop imul aas aas mov sbb movsb je push cmp mov push jmp inc stos mov cmp xlat xchg call xor jne gs mov jb pop mov lods je iret out lods sbb loopne jp cltd (bad) push lods xchg aas mov sub test pop push cmpsl pop dec sbb test adc and pushw int3 inc xor ss cmpsl jle rclb mov push in adc inc cmp inc in sahf pop jmp test sub lret xchg sub push dec xchg fcoml push daa mov imul push adc pop pop adc test mov imul mov push fstps xor fneni(8087 add mov mov dec in pop addr16 je push scas mov inc (bad) pop std xchg cmc mov jno sti push mov (bad) xchg push ret mov jmp jns mov and cmp mov dec lock (bad) lret stos mov imul inc cltd jle clc jb out jae mov popa push in inc leave int push leave cld push insb int pop jge out dec out fs mov jmp jp add mov dec jg xor ds dec sbb bound repz mov or (bad) out jg or lock mov insb push repz fistpll and loope cmp cmp movsb dec fstl scas sbb in inc (bad) movsl inc outsb jne push outsb jl sbb xchg movups paddusw xor dec mov mov daa sarl cmp and (bad) xor in ja (bad) lcall cmp dec jnp sub cmp lcall push icebp adc and je cs (bad) pop sub add in xor adc jl inc cmc icebp push add fstps push pop mov dec lods xchg cmovge out xchg mov inc jl mov pushf dec ret xchg mov aas imul outsb cmpsl out outsb sub mov test mov sbb pop mov hlt pop ret inc and sub ja pop push jge xchg cs push push cmp jmp fwait xchg mov fild push (bad) scas shr cmpsl jb push lods mov add stc inc ljmp add sbb aad mov and cmp sarb imul fcomps imul leave lods lock repnz arpl sbb lods sbb es dec push cmp mov insb in jmp push fistp sub push sarl fcompl mov sub fidivrl xor cld scas jo sbb push mov xor mov ja rcl data16 jle lods push rorl sub sbb dec mov cmp mov fiadd lret add mov loop mov ds mov ffreep std jge pop pusha sarb lds repz and aaa or dec cs xchg mov jbe pop or mov dec dec cmp mov push rcrl sbb ds pop xlat xchg aaa loop mov ret adc or lods dec pop scas inc cld shrl mov inc xor adc fstps add jl or int cmp inc (bad) sbb pop clc das mov inc mov jns mov xchg sub sbb (bad) dec (bad) dec call jae dec xrelease mov dec enter mov insb push pop inc mov cmpsb out mov fwait dec dec aad aas aas dec push or push mov push (bad) (bad) jae xchg lea into or adc jl fistpl lock sub daa cmp push dec jp add sar inc jge test add lock lahf or add jl xchg sub aad mov xchg lcall mov mov pop push sbb inc add test aaa jl in push add mov jne test aad imul imul mov mov mov mov dec mov test inc dec jnp adc (bad) mov xor (bad) shrb fcoml xor add cmp inc or adcl jb or dec rcll xor pop push jmp jno mov sub es movsl movb ret mov sbb adc add push xchg ja mov ficompl cltd (bad) pop stos mov dec xchg repz hlt test dec mov repnz lds adc dec xor popf pushf out das inc aam lods in pop xchg lea out push inc cmp xchg aaa xchg sub sbb nop jne sub xor in mov push or cmpsl xor mov cltd push sub mov lods mov adc and push lcall inc mov das hlt mov sbb cld adc icebp vmovaps rol fsubs inc ds jno icebp fiaddl stc inc mov cmpsb int3 pop loope adc push inc jae dec sbb dec fucomp sahf mov xchg mov loop jle or cld pushf aaa leave hlt data16 and fisubl sahf lahf adc mov inc daa mov sub aad push or push movl sub dec sbb jge mov daa xor xchg push sarl xor mov div addr16 pop dec or aad and aam cmp push lds mov or inc mov pop mov (bad) pusha inc mov insb push fs dec fnstsw call sub xchg lods xlat xor mov xor xchg sahf dec dec inc pop push mov jmp dec movsl (bad) cld mov xchg cmp test pop xchg and mov add jp fdivl das out je mov out fbstp cmc or pushf mov jne stos dec add dec cmp push mov sahf (bad) and add push jne cli xchg divl push push dec sbb fdiv cwtl hlt pusha jnp call sub insb pop stos (bad) jne std mov inc out in lret lret mov rcrb pop xor cmp (bad) flds sub cmp sub xchg in rorb jl xchg jp sbb out lcall enter cmpsb scas cmpsb pusha mov sub in out (bad) imul sub jb inc ret cltd in sti repz xor push push sbb xchg mov push jo sbb mov addr16 lds cmc xchg lds (bad) lea call lret and or inc lods out insb fwait cmp in dec lret rorb add xchg jbe xor or test nop imul cmpsl nop pusha lock fs mov xchg xor jns mov sub lahf sahf out pop in cmp rolb mov mov (bad) cmc inc lret dec cmp mov cmp stc pop ja xchg clc outsb mov sbbl fnsave jb lock jl (bad) jne jge imul retw inc stos lods clc jo sbb fsubrs sub jbe dec (bad) jae mov sub mov fildl adc push lods jmp leave push ret ljmp sysexit jp and insb add mov pop fwait std sbb sbb lcall jae or xchg ror add adc pop shrl jno (bad) js pop sbb fldl mov or (bad) sub jo xchg push pop cwtl mov inc test lret dec test fwait jae mov fmul push test sub scas pop dec mov xchg mov xor mov in mov jne ffreep popa sbb sbb sbb (bad) iret cmp out xchg and insl inc cmc (bad) call cmpsb lret mov lods pop and sbb sub jns dec stos stc jno cmp jo iret lods std fbstp hlt ljmp jp ljmp jp ljmp dec in mov add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fistl add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop xchg add rcrb xor adc adc dec dec dec lea rorb or dec ja or dec imul jecxz decl in adc jg inc test or (bad) push mov ljmp cltd push lret stc aas adc mov fmuls (bad) ss ficom jg scas push int3 (bad) andb cmpsl jb fisttpl add lret pop pop movsb fs fscale cmpsl enter push outsb lods incb push (bad) dec je inc ds add and jne in mov fild iret dec adc test xchg (bad) sti sahf (bad) mov aaa sub inc lds pop or arpl fstl add mov fistpll movsl push pusha mov pop mov lods lods xchg adcl stos add cmp addl push jmp sbb mov (bad) insl push inc sub (bad) stc adc setns (bad) xchg jg or sbb std sbb mov inc dec out jae enter int push repz sub js or jae dec out jp fsubrs scas and add sahf mull insb xor sbb (bad) jl (bad) jo jbe ljmp cmpsb jbe,pt daa sarb jle popf stc or mov stos jo cwtl loop call sub push outsb mov cwtl pusha jmp ret lret jp push lods jnp cld adc repnz or dec lret clc xor push sbb push xchg xchg mov mov sti loopne repz push dec push insl rcr ljmp push adc leave mov mov adc sbb push inc les inc jae hlt push sub cld cli orb jge pop and ss jb popa push push jmp pusha jae (bad) (bad) xchg in in and jbe mov cmp and scas test mov inc (bad) sar or stos lods sub xchg jl xchg push jno stos pop nop jg inc mov adc dec jnp movsl inc lods movsl fld1 lret pop sub or cltd push lods cwtl dec rcl cs ret std fildl mov xor mov push add cmpsl inc cld ret push int3 xchg gs or out inc cmp dec leave xor mov in fdivrp lds iret pusha pop push cmp jmp cli push call inc or insl cmpsb mov xchg scas push outsb repnz xor jo adc or enter sbb jns fstl (bad) fbstp out arpl mov inc sub or psubw adc push out jb outsl mov lods dec mov jecxz xchg or shrb jno lcall xabort out push and lods mov mov push or jmp lea stos push mov push loop cmp lock pxor jle xchg je mov inc adc mov push or test xor mov push gs (bad) dec imul jo movsl dec rcrb jns,pn pop push adc fisttpl push and add xor lahf jns imul (bad) jmp jno push cs mov je mov aam cmpsb (bad) jge es inc testb je bound stos sub mov pushf fs push xchg xchg std sub les or mulb dec dec sub lds fildl js mov dec jle sub enter scas adc jne test ret fdiv xchg xor and into fstps xchg sahf ret dec arpl and lods (bad) testb sub stos xlat cmp mulb subb faddp xchg outsb cmp lea in loopne lock cs andl jp xlat es pusha (bad) repnz lods push into (bad) out jb pop stc fstpt mov cltd and fsubs jmp mov pop cmp mov cld imul fcompl movsl dec (bad) dec into addr16 not mov out (bad) push into icebp sbb jmp xchg mov lret or or push stos int3 inc adc inc mov sahf repz sub sbb jmp mov (bad) mov jmp fildl (bad) out lea in xchg push adc aaa add jge sti clc ret sbb aaa cltd dec mov adc jg sbb pop sub popa lds sbb sbb jmp dec pop lods jno rorl das sbb mov xchg (bad) cs out (bad) hlt jno idivl shll stos icebp (bad) xchg inc aas mov sub aas clc dec cmp and clc sbb xor lcall mov mov add jne jle or mov lret xlat ja loopne scas pushf pushf dec loopne pop ret xor leave loopne pop lret add mov dec inc movsl mov popf cmp jno fidivrl in bswap inc and ficoml adc out push jecxz push rcll pushf push and cli sub arpl stos cld cmpl lret jns push cmp push das enter jo or repnz dec lods (bad) pop pop mov (bad) adc mov in dec inc int add cmc pop xchg jne lret dec or int3 mov push xchg ja xor add jl fnclex aam xor jge std jbe pop aam mov jp dec fcoms jl in pop nop pop mov movsl xorps repnz add inc cld and jno nop adc pushf pop push js xor jbe xchg sub mov fwait cld test add repz inc xchg mov loopne cmp xchg mulb lcall testl jnp xchg outsl mov mov ret test call jge push int and mov insl orb les icebp stos add sahf hlt daa jns out sbb adc insl leave mov mov pop icebp rcll addr16 mov cmp dec xor iret nop sbb (bad) outsb rcrb dec sbb adc out mov (bad) add jg repz jmp enter jb mov sahf xlat add insb dec pop xor negb jno or inc mov pop jmp clc aaa pushf (bad) sub jae out nop (bad) hlt mov stc push push ss mov xlat cmp js mov sbb outsl lcall mov rcl pop mov out jg fs rcr (bad) je enter aam jns adc movsb or inc dec shll pusha cmc mov stc stc or por mov mov in scas add pop sbb (bad) pop adc lods sbb stc pop pop sub inc dec (bad) xor lahf push (bad) mov xlat adc enter sarl dec sbb push fisubl mov mov mov jbe push push dec int (bad) lcall lret lock notb stos mov loope sbb lods (bad) lea mov pop mov push jb sub add add sbb aad scas mov push hlt sbb push enter cmpsb test icebp inc ljmp jle lahf cmp inc loope sarb loope or or pusha or inc shrl and pop mov popa push (bad) stos insl xor add pop or or (bad) jmp in mov jbe cmp mov jp jge mov lret mov xor jmp xchg adc hlt stc dec xchg add push mov popa test in je cwtl mov aas jno addl jb aam xchg mov sbb int3 (bad) dec ficoml clc mov mov (bad) sub orb icebp and adc ret pushf inc pusha mov jp dec stc sub addr16 loop dec cmp push repz std fsub popl dec fwait nop pop pop and pop cmpsl mov sbb sbb js xor jp bound pusha fcoms jne das aad rorl xchg das push cmp cli outsb les add int3 sbb or sub xchg out inc stos popf sub jp sub cld mov xchg pop cli pop ss xor cvtdq2ps cld jle sahf jp jg std aam mov pop rcrl cmc push or and sbb mov pop bound lods fs adc push mov pushf push (bad) repz xchg es mov push xor ret pop jg ret out cli out outsb adc cmp cli out outsb cltd (bad) jbe pop stos mov mov outsb jo shlb mov pop pushf insb bound cltd ret repz popf (bad) sub int jns push adc outsl mov cli cs popf mov aas fistl dec mov adc out mov sub (bad) xor in lret ss cmpsb pusha or cmpsl push adc into xchg stc imul aad lret popf xchg aaa in imul je daa push test dec mov adc pop ss or cmp jmp repnz dec cmp and xchg in mov mov lea mov mov adc sahf test cmc xchg xor inc or sbb add fbld ret adc inc std jnp daa mov fsubs lahf lds sbb ss jmp in icebp xchg push mov dec adc push lods pop inc outsb jo shrb push or fs enter imul mov es fisubr pusha jb imul jae mov xchg lds stos aad loop dec mov (bad) iret dec cmp jb repz mov mov test pop scas cs cmp adc xchg inc xor stos out test xchg lock mov pop cs xor adc sbb jecxz mov pop daa clc xor sub sti loopne xchg sbb inc repz adc sub pop imul xchg arpl cmpsl mov push cltd push int dec aaa enter sub pop cmpl and pop mov bound fnstcw jo xchg mov push ljmp cli insb cmp lret mov arpl mov gs pop hlt rolb popa xor lds pop movsb insb or or subl add push sub das or jp jle mov loopne stos (bad) ss mov jbe inc mov sbb pop mov iret fstpt movsb sbb pop jnp imul and jae out cli and outsl push xchg sbb cmp arpl xor mov xor push popa scas repz mov ret call insb sub mov gs clc cld ret xchg xor jne sub or loope xor mov addb and jecxz repnz enter and pop jae mov lods push std add ja xchg cmpsl pop sub or dec fsubl out rorb fs stc and cs add dec inc neg jl push xchg loope sbb imul mov push movsl lods sahf aas push ss sub scas fscale mov pusha icebp divb es jge push dec add dec and hlt pop movsb mov add mov mov mov mov fistpl test adc xchg mov subl (bad) in mov xchg movsb dec inc lcall sti rcrl loope in insb mov sub ja jp addl jmp fisubl sbb test ss or cmp mov push cmp mov mov or sarl flds aam addr16 jo ret hlt cmp push pushf imul icebp ja sub inc pop xor adc ret mov adc cwtl dec imul movsl test (bad) loop outsb adc mov xchg (bad) xor mov outsb pop cmpb jnp ja in popf (bad) fisttp incl mov sbb push pop push repnz in cld (bad) lock dec push arpl mov mov ret loop (bad) imul mov ret dec imul add vrsqrtps lods xchg lret and mov cmp dec sarb and paddsb insb push lret cmc xchg or inc and stc outsl lock imul lret stos outsl data16 pusha pusha das xchg inc fstl (bad) fiaddl mov pop inc jl insb sti push scas mov repz fstpl fsubrl inc shll arpl pop push xchg sub (bad) icebp jecxz and je push cmc lcall mov (bad) xchg and dec leave inc add es and xor cmp cmc xor inc std lea lods into mov test fisttpl (bad) mov adc dec dec ss mov lcall mov enter rorb push ret adc xor ret push cmpsl loope (bad) in dec jg dec or pop pop add int3 aas aam (bad) mov jp add call mov nop mov ljmp push mov sbb aam fnstcw loope enter addl cmp repnz hlt pop mov adc scas xlat out ja ja scas pop (bad) sub and fs mov je fsubs (bad) dec cmp jp ljmp stc pop pop xor inc in int3 movsb leave mov xchg iret int3 xchg jne cmp cli out push push push and sahf insl test dec push mov jns dec icebp les or test mov stc cmp hlt in adc outsb data16 jae imul push jo dec sub jns add popw (bad) lahf out aas pop or mov mov jno dec call les pop and jne leave inc jo pop dec insl dec fisttp jo icebp jo std in popa dec pop pop js into push test adc loope popf fbstp or arpl adc flds ret repz cld lret mov (bad) push sti lea ret int push fimul push divb stc jge add bound hlt loope rol jne ss xchg xchg into jns jecxz orl sbb push sub push mov xchg out add xchg fnstsw jnp out fnstsw jnp out std out add in sbb add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas fmull rolb pop rol dec sahf outsb arpl xchg cmpsb movnti jmp mov fwait into xor fwait mov jae stc cmp fstpt pop (bad) pop add cmp xchg addr16 sub rcrb xor (bad) mov (bad) fadd (bad) xchg addl into lahf in jmp or push xchg in jno mov arpl fimull arpl les add push jo mov jnp orl je cltd dec mov xor push fucompp mov jbe push lret aas push fist call inc inc cli pop les mov push inc sub cmpsb jne jge dec fsub test adc test pop enter cmp fwait movsl loopne lret imul cmp cmp fs cmpsb stos cltd cmpsl xlat lds fsubl sub addr16 inc ret dec add mov and lea push stos sub jg in aad xor gs test fbld bound push pop sbb lcall xchg and ljmp cmp mov imul inc cmp dec cmpl repnz das push mov lods inc add rclb sub add js,pn push mov call test jbe ret mov int3 jbe inc cltd int3 sbb test add mov or mov cmp dec cmpsb pop std (bad) xor loop fxch adcl inc subl xchg insb mov or pop adc test pop imul dec roll imul icebp jno mov pop push adc divb dec and movsl gs or xchg lods pop xor adc sub sbb clc (bad) sti cmpsb fwait sbb mov inc add push test xchg jge movsb jns outsb hlt lahf mov jbe mov mov aaa enter pop mov aam scas dec lea add in mov (bad) scas stos aam (bad) mov sbb inc addr16 pop dec jecxz xor in xlat jne jmp pop aas out push test mov push mov sbb cmc mov lods push mov ficomp xor cmpsl mov in mov lret xor inc js xchg fnop (bad) fistp mov xchg out or aam mov clc pop inc dec sbb cld stos enter dec aaa lds push mov mulb push ret loopne fwait into xorl and out inc and clc push push cmp imul and sbb xor pop cmpps (bad) cs push jns mov dec icebp jecxz pop mov jge sub mov inc push sbb adc stc dec mov js outsl imul sub mov adc enter decb cs push cmc push fnop movsb lods sub cs push fcompl stos xchg push xor scas adc mov loop fidivrl jbe iret in mov insb lret in inc jle dec inc movsl bound sub ds add add call jge inc xchg push jmp push push loopne pop xchg cmp pop rolb enter push (bad) hlt xchg and outsl fwait xchg gs or (bad) or fadds dec adc imul xor fwait inc int ret xchg test push nop stos out shl xchg movswl jecxz rorb and nop cwtl int3 in push imul idiv cwtl call sub popf dec jmp cmp and out sbb pusha mov jl push push rolb push stc and sbb xchg dec call insb cs repz push jo push ljmp fs jecxz sbb mov (bad) inc or xor mov ret cs decl outsl mov mov jmp ss out jo jne jno pushf popf andl jns mov in fdivrl hlt inc (bad) jg test cmpsl fimull les pop jecxz mov jnp and testl lea or imul (bad) ret aaa mov pop xchg mov mov pop mov lock fwait sbb xchg inc mov scas sbb adc outsl push data16 push pop nop sbb aaa jb sub mov jmp cltd insb lcall es stc mov xor inc xchg test iret or aad xchg jg (bad) jne jge shrl pop aas ficoml pushf mov mov sub clc inc mov ror push xlat mov add iret xor ret jecxz xchg xchg aas or dec mov es adc out xchg (bad) and fnstsw mov mov push push xchg mov jl scas icebp insb pop into jge sub adc pop cmp arpl lods bound enter push cmp lods lcall push fsubs rcrb pop je sbb (bad) (bad) jbe in and adc xchg xor add adc push dec push lea icebp pop push out arpl stos loopne push sub mov mov ds cmc jp sbb mov imul dec out adc and sbb (bad) xchg xor inc mov pop (bad) fcoms ds (bad) mov fstpl xchg int3 insl xor stos mov scas imul (bad) imul fwait scas mov sbb iret mov aas pop dec mov push int lret lea inc outsl cmp fwait (bad) stos lea and rorb dec int rorb lods push mov jg fildl sbb push popf mov xor ret aas jmp cli ljmp sbb mov aaa cmp imulb jb adc xchg pusha mov insb sti scas mov andl inc int xchg mov loop xorb push jo sub test icebp repz in pop imul push fnsave inc mov adc mov stos mov popf mov dec jp mov inc sub mov (bad) repnz push test out push call inc jmp out mov pop xchg mov faddl insb mov jo into xor sub mov mov sub popa xor adc mov nop out ret and clc sbb mov repz cmpsl adc hlt mov aam push imul or pusha jecxz pop add cltd movsb sub lahf fwait divb cli icebp sub loopne push in mov jge dec xchg push fisttpll lahf push movsl ljmp cmp out lret out (bad) push arpl jmp lret les pop push (bad) xor sbb inc into add es je (bad) adc in pop lock cltd mull lcall jno jp push aam movsb lds and lock fsubl or mov mov sub dec or sbbl sub mov (bad) mov loop,pt lods push and sub inc out push mov jne xchg nop push movsl mov jg mov (bad) icebp cmp xor gs push xchg fisubl jg add pusha cmp jne mov (bad) jmp cltd lods in mov mov scas xor cwtl in in xor mov push adc mov popa mov dec test mov test enter ljmp hlt push xchg jb jb mov push xor jecxz out mov xor int3 ja lcall sub push lret mov xor cmp adc cmp scas push jo push pop mov stos push cmpsb mov push cmp stos iret pushf (bad) add popf testb sbb add pop lret jns stos (bad) xchg imulb sub test ret or push mov cmp roll pop xchg xchg ss pop xchg out (bad) repnz lret iret scas mov xchg clc ljmp jmp mov call xchg mov jo dec sub mov push out js dec rcl enter aaa imul push lsl pop xor mov out adc sub (bad) (bad) mul push insl negb fcmovnb pop fwait ss scas jl stos movsl icebp lock outsb pop push mov xchg cmp cli dec cs out stos dec pop dec sar sbb (bad) fwait sahf fidivr lret inc pop loop pushf in jnp,pn (bad) cld mov in push arpl sub out adc and mov (bad) in adc cmpsb bound xchg mov insb add mov fnstenv mov test cs jmp (bad) sub sbbb lds cmp dec frstor jns dec rol mov pop (bad) mov sbb or mov stc rcll lock js dec gs icebp jnp aas fyl2xp1 scas pop lods jge pop cmp sub inc xor (bad) daa mov lahf or rcrb loope dec jb cwtl mov cwtl dec hlt or dec cmc insb mov jg pop sub jne rorb pop scas and in lods in push sub jmp inc push pop cmp mov cld jb or mov mov (bad) dec jge (bad) xchg es and dec pushf loop ficom lcall popf pusha mov mov dec aam es lds mov mov popa ds adc sbb (bad) mov dec lock xchg mov lret xchg fldlg2 jae mov enter mov pop mov mov mov aaa adc pop in push xlat adc rorb dec pusha (bad) sbb mov xchg jo xchg push fisub ss mov sub ss pop aas sub xchg push cmc xchg xor lods dec pop das mov lock xchg pop cmp jmp push adc daa outsl inc or ja out lret lock aad bound ss cmp add pop ds jae adc jp stos inc mov jmp mov push mov les xlat sti push sub mov into push into (bad) jle pop cmp mov popa scas stos sbb insl mov mov xor push ljmp lret daa out lea in jp mov inc pop mov lea push cmp enter shrb mov sarl pop cli shl push fs stos into cmp dec cli sahf mov ficoml out lock adc sub push xchg repnz rorl jns jns mov dec mov mov pop stc lock jmp mov movsb or gs adc in push (bad) int lcall mov mov xchg out and xor and xchg and add cmc jb,pt into or or sub jb lcall jge (bad) out out push pop and or jno push cwtl pop cli sub inc or mov stos push aas sub xchg incb push mov or loopne (bad) rolb inc mov int jle cmp xchg fdivr aam mov jb loop subl mov xor lea addr16 dec adc fcomip mov push je pusha lret cmp in mov and les jl jmp push cmc (bad) ret push outsl mov ret dec or dec enter icebp inc movsb dec cmpsl std xchg mov mov cmp lea mov xchg xchg ret add aad stos cwtl (bad) cmp cmp sub adc xchg dec sub adc or aas dec xor dec xchg jge (bad) loopne sbb addr16 mov mov mov xchg fnsave pushf pop jmp lds shrl fisubl loop inc mov jecxz xchg jbe (bad) jo xchg out adc mov sbb fcomps test xchg data16 mov inc lcall inc stc fxch or ja and mov add in test iret imul negb or insb int3 jmp add movsb mov pop jl adc mov stos in xor xor mov mov mov pushf fstpl flds fdivs bnd repz lock or sbb scas iret push mov xchg psadbw mov jae stc movsl cmp daa cmp dec outsb enter jecxz out add cmp or push push movsl pop sub fist sub mov lods mov and jnp clc xchg dec cltd push les jecxz rol lret imull cmpsb clc push mov lds jo or stos add std mov add and insb (bad) jbe pusha ds fbstp mov jmp movsb jecxz push aas mov (bad) lock jmp add (bad) push mov mov into adc sbb ljmp pop dec cmp inc call movsl test mov mov cmp (bad) dec push mov xor les add mov sbb (bad) xchg lcall jge push xchg stc and add xor out mov jns xor push dec add dec jnp mov jno lret cli sub ljmp iret jmp xchg inc or in adcl cld mov pusha fsts in fistpll adc notb xchg and xor dec dec lods fsts pop mov movsb adc push xor adc inc jnp pusha das enter (bad) arpl mov xor adc mov jecxz movsl int3 lds dec div adc test lods aaa jl (bad) shll dec test dec jb push fstl push push repz in ds (bad) xchg loop jns ret push les mov leave mov das fsubp pop sahf xchg aaa pop rcrb sub (bad) gs pop shrb sub ja push sub adc lods ret jp push lahf loope divl dec and rcll test sub jle in push xchg sbb repnz imul dec sbb fimull loope mov lods cmc stos or jmp out cli lret xchg (bad) idiv out mov inc push bound push mov mov fbld shll pushf je xor fnstcw (bad) push jbe adc movsl test push pop dec push or pusha xor es fs addb pop dec pusha pop lock cmp inc fdivl xor jne fcompl pop js or add inc (bad) push cmp mov jp call (bad) incl cmp addr16 xchg add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push aas sbb rolb (bad) jno scas mov out sahf mov mov dec pushf sahf sbb mov (bad) int3 je daa es mov pop jecxz add cmp cld scas imul push outsb adc cli mov jge xchg shr outsl fs movsl mov lods mov mov mov push in jae sbb sub ret mov js,pn pusha or push jl jnp stc roll push pop xchg cmc or jb or (bad) mov xor xchg lea add mov mov movsb sarl sar cmp push call and jle add outsb adc or jae xor jns or pop movsb adc sahf mov push pop and push fwait xchg xchg (bad) lods inc es lock add add mov ret popf dec dec inc or pop dec cld push (bad) jno lods test push mov xchg popf lcall mov jmp dec jnp mov fcompl cld jae movsl xor mov fisubrl je jae sub (bad) adc push test xchg xorl cmc and cmc push shld dec repnz mov push lret pop imul jb cmp lahf push mov add js movsb sti and jno lcall pop aam mov enter push pop xchg push adc adc sti dec push cwtl fisttp (bad) jo imull and popa fcom into pop jnp xor cwtl sub pop cld mov dec mov xor sbb or and dec add ficoml jno xorl idivl push (bad) adc xchg xchg dec mov mov pop (bad) jno sub mov in sahf jl pop sub lods jo push scas pushf mov cmpsl cmp jnp daa cmp iret pop mov in xor sub jmp pop test sbb jmp jae test xchg pop icebp pop cwtl mov lock leave add cwtl stos fdiv dec subps sub mov mov mov adc xchg push insl jno lret clc roll pop jg icebp dec lea lea divb lea mov call pop sub jmp cmp imul jmp adc push sbb pop pusha dec je movsb (bad) mov cli sub or cmpxchg mov or in ss jne pop enter daa cmpl and mov ja pavgb aas fidiv mov gs jle jae test push fisttpl mov push dec (bad) lods test pop mov out pop push les push adc xor ja incb leave inc mov lret pushf sarb (bad) cltd fsub mov lret add push ljmp scas fistpll movsb sub das inc fbld dec cli mov ret aas shlb cmc in iret dec cmp loop sarb std cmp push xorl push sarl test mov ret orl push or repnz jb bound cmp sahf ds test outsl mov out jno and fsubl ljmp loopne pop test push dec imul das fbstp sub add cmpl jnp dec outsb (bad) hlt pop mov addl dec jo (bad) pop inc mov inc iret dec test or (bad) dec push bound gs cmp movsl repz xchg loopne mov shlw and in sar xchg fnsave or and aam lahf push lea repnz mov pop pop test pop push inc sub dec and pop sbbl mov mov and cwtl dec sbb enter push xchg bound scas stos add dec out adc adc inc cld mov jle push jge test pop pop pushf lods mov cmp jl xorl decl adc orl xchg stos mov cwtl mov fs lret adc call xchg and cmpsb jmp jp sbb push mov jle fwait pop daa jecxz fstpt call call out aam pop call sub cs lods out add out or (bad) fst ret arpl xor loope outsl xor jmp push push mov (bad) fiadd cmp stos cmc mov mov push pop xlat add jp mov pop fldenv fwait stos ret xorl pop arpl cmpsl test jbe inc popf aad xor in mov adc inc (bad) daa jae fistpl rcl (bad) into or mov sub sub insl shl sub inc sbb orl fs jmp or repz rol ficomp sbb mov adc aas mov lahf out xor lahf push repz rorl ljmp repnz xchg (bad) dec xchg and cmp mov (bad) xchg pushf pop and (bad) add mov push into add adc cmp lods ret xchg stc scas xor xchg mov jb cwtl xchg inc int3 into out adc loope and sarl pop out or data16 or daa aam enter icebp ret cmp xor cmp jb lods sarb add push jno jp,pn sub or out push ja rorb mov (bad) mov mull aaa ficom out and jge fcoms mov or push push cmp pop mov or lea mov (bad) cmc mov out push dec faddl add lea pop or insl clc mov je leave sbb sub ret mov sbb xchg inc mov fwait sti andb incb lock xlat mov fsubrs loop fs inc jae jle stos xchg pusha fmuls push imul cwtl ret or cmpsl cmp out or dec insb pop pop mull (bad) xchg pushf mov cmp ret pop mov in mov stos ja in sbb xchg pushf and mov rorl pop sbb fsts in xor aam xor mov negl leave lds fisubr mov sub mov sbb mov outsl repnz adc or add lcall ficom jns (bad) push and (bad) xor add jl pop sub addr16 (bad) not adc xchg mov dec or pop ss lret dec pusha pop cmp mov jne jbe popa rcrb leave mov fdivs jmp xor and js mov pop jmp or fbstp and test mov into mov jno or aad cwtl jmp std and test sbb rolb cmp je pop pushl lret ret push xor mov adc cmpsb jg test jp daa hlt out fbstp stc cmp test ficompl push cmpsb pop xor xchg repnz aaa sahf cmc pop int arpl pop fisttp sub jge movsl inc mov sub out push into loop xchg inc push xor push dec mov mov sub scas xor xchg xor (bad) int3 pop pop cmp lahf jecxz xchg divl add scas sub inc pushf ljmp push mov in pop mov pop and repnz cmp mov adc push dec lds fstl pop add cld jmp sahf adc mov add daa mov ljmp mov dec int3 stos adc xchg mov inc pop stos clc jecxz inc test jecxz lcall sub lea xor es pop (bad) mov call adc jnp lcall jnp mov jns jg movsl mov cmp xor jns xlat or inc outsb sub push arpl xor push incb iret or xchg mov ret cmc mov xor add jmp sahf movsl mov movsb aam out pop jg mov negb int mov (bad) xchg into fimull in dec push gs lds pushf xor out insb dec push sub pop test lock lcall xor mov or mov sbb or fs mov in stos mov repnz movsl cwtl incb notb dec leave dec xrelease lods out mov cmp or std and enter jmp and int lahf icebp (bad) mov xchg andl sbb adc js aaa mov mov mov jp add add mov clc fiaddl sbb (bad) es xchg adc jnp push icebp out loopne loope push out iret lods cmp repnz mov ret sub scas mov xchg call inc js imul out test mulb adc mov cmc stc inc scas aaa outsb loopne add jbe leave jnp pop sbb (bad) xchg xchg push mov lret mov mov ljmp xchg call and pop xchg sbb push aam lret enter jns mov inc inc jb lea cmp cltd outsb subl outsb addl adc jge mov and (bad) repnz sbb arpl iret add inc or in jbe ss out and subl imul ss jb loope,pn push inc xchg fnsave arpl jg mov popf insb dec fistl xchg inc jne fsubr rorb push (bad) xor fstp mov (bad) rcrl repnz repz daa lret in int inc xchg and push add or jb sub les mov stc pcmpgtb and ret push imulb pop mov xor pop clc fsubrp cs (bad) mov test or xor or xchg outsl lock jecxz cli rcr jnp cld fcmovbe cmp adc push mull (bad) popa mov imul mov jge push je sbb rcrl add in sub shrl mov sbb ret sub dec data16 pushf shl adc je adcl lret std std add lods xor adcl inc sbb adc xchg sbb out jecxz xlat ljmp sub movsl inc out push cld sub cwtl sti data16 out add push sub movsl in push xlat add movsb fcomp mov sub add jne xchg data16 fist xor or loopne sub xchg push mov jge xor or (bad) pushf lea xchg mov jge jbe pop into in (bad) addr16 in insl movsl adc mov outsb test fidivr aad test jno (bad) stc mov push add jmp ds (bad) lret fbld mov cmc adc aas (bad) sub cwtl mov mov into in in cmp or movsb dec cld fistpll and mov mov lahf mov scas andb mov mov pop pop aam arpl fimull push ds inc dec and movsb bound popa iret popa pop int dec scas jmp sarl js jl movsb sub fiaddl sub (bad) dec iret sub pop mulb orl aas dec loopne or xor sub mov movsb and dec std pop cmp dec jle dec push imul cmp push fadds fmuls xchg fsts (bad) jecxz mov sbb dec mov push xlat pop hlt inc xchg dec pusha sub inc in and test cmp xchg ret jae mov imul pop push and imul push std jecxz jmp mull pushf je cmpsb out pop pushf cwtl icebp push (bad) push pop cli rolb mov mov add sbb pop in popf shlb imul sbb in push or sbbb ljmp xchg mov lods je add mov add pushfw push sub leave stos mov int xor push sub sub sti cli xor add aad jp lcall sub stos arpl or xchg fnstenv cmpsb out imul dec add pop jno outsb imulb xor fisub jbe les cmp mov lea mov ds xor incl mov mov push sbb pop jle dec stos jne inc aaa insb loopne mov inc sti and (bad) ret mov jbe movsl sub jl iret adc cmp imul push test in fcmovnbe jnp lret in pop insb loop mov sbb inc jbe test addr16 (bad) xorb cmc (bad) fucom loop lcall daa sub movsl xor adc add fidiv xor ja push and cwtl add or rcr adc mov pop pusha pop push xchg cs cmpsb sub or cmp lahf push mov test add lds mov popf sub sbb in outsb outsb mov and jge es add mov xor push mov rep repz hlt pop rolb mov xchg shrb sti dec xchg mov decb pop xchg lock stos sub inc es popa hlt jne xchg aad inc pop inc jp cmp nop popl repnz insb addr16 or shlb mov push loope xchg cwtl (bad) ljmp aam and dec loopne fimull mull out cld adc loop lret shll add test mov xchg xor lret adc lds xor jmp push cmp mov sbb (bad) int lret inc subl mov xchg or mov fsubr aaa push jecxz xor pop xor pop sub xchg sbb push mov sarl fild fstpl xchg add test clc mov xor fmuls adc mov cmc (bad) sub ficomp movl xchg xlat jae dec enter hlt add test pop fistpl pop and mov xor mov push sbb inc xchg dec adc xor iret mov mov repz movsl pop mov push and mov mov hlt or jns in or vpavgw inc xor cmpsl mov idiv ret mov dec jl fwait jge dec nop (bad) mov push cli jg hlt loop mov das pop mov mov das pop mov verr jg sbb out mov bnd add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb rolb ror fcompl mul hlt je pushf pushf outsb xchg jmp in pop aaa fwait cwtl pushf out hlt fdivs out out jge (bad) jmp sbb add or pop push add int pop pop ja sti sbb or (bad) (bad) mov cmp call les loop sahf mov mov roll push in scas das in or sbb orb addr16 fisttpll xor (bad) pop mov mov push and push push mov pop cmpsl ljmp bnd in sbb push inc cmp cmp je mulb and and add (bad) leave clc aas aaa js adc xchg and inc cs lahf dec mov fisttpl jle push shll loopne mov test inc icebp fsub push cwtl lock add fcompp fs cs cmp adc sub ret jbe adc adc mov cltd cmc je and pop jecxz fistl notl dec sbb add enter dec sub or jb pop rcll or sbb stos adc xor imul cmp out jecxz (bad) fcoms movsb fsubp fdivp (bad) invd cmp lea lcall push and cli push fwait jns and cmpsb data16 push orl fbld xchg jns jae pop fcmovbe test ja mov in das lods shrl lods lcall and out aaa hlt clc pop fimul (bad) cmp stc sarb (bad) scas loop sbb sub hlt jne pusha mov push dec sbb xchg inc cmp into rolb dec xchg fwait jno out sarb xor push dec test mov in lea gs addr16 and mov xor ret insl fsts or data16 rcl lret add xchg pusha popa and (bad) (bad) jnp lret xor mov push bound fsubrs mov dec hlt test stc sbb mov pushf hlt push std dec dec (bad) xor sbb xchg das jmp jge subl js push (bad) cmp rcrl cwtl stos and sbb ret xchg mov sub xchg or jl sub in les lahf stc mov iret pop shr leave sbb xor pop and or orb mov out pop sbb stc out jp mov (bad) push imulb mov cli (bad) movsl cld imul and pop pop lods lods out clc sti rorb lcall jmp shll jecxz in cltd push std in pop fwait aam sbb shr test push std mov dec jno imull add dec (bad) sbb inc jae cmc xchg testb in or pop pop xchg xchg rorb std mov xor sahf loop lods or test xor pop jle add pop bound movsl and jb pop sub aam lods lods pop dec inc rcrl daa pop (bad) fild ret addl jp (bad) mov xor nop das es mov jg sub jl push enter cmp (bad) cli sub inc mov outsl and (bad) (bad) xchg dec sub repz sub imul rcrl sbb jmp fildll cmp (bad) icebp cmpsl cmp lods add loopne push mov inc pop and popf cmpsl pop rolb add and cmp dec dec xchg enter xor lea loopne jb cmp push ljmp and mov or scas sti in test pop bound adc shl (bad) and jle negl fwait lods (bad) dec jns xchg pop clc sbb negb sub inc adc and sbb lcall mov jnp push (bad) imul push je fwait xchg ss inc xor ljmp dec mov out mov movsl test jle (bad) pop gs sti nop test addr16 push jl notb repz fsts daa and sbb xor call and mov inc adc shrl test pop cmpsb and imul jge fs pop jg imul out jo icebp inc jge xchg mov hlt pop pop and or add repnz push push ds cmp pusha (bad) pop and xor call jmp lods fildl fwait dec lar add dec scas int3 pop add nop jns stos mov outsb fldt lret jb pop bswap mov imul mov pushf add cmp push cmpsb out sar (bad) pop inc add jmp outsl mov mov js or or push mov fsubs push push and cmpsb rcrb mov movsl xchg push daa in adc sub js push cmp xchg mov mov nop jne outsl nop lcall pop mov movsb ja cmp test mov scas jnp mov jg xchg sbb sti lods sbb xorl cmp adc jge repnz mov or xor push or push lds sub xor (bad) popf sub lahf sub pushf jge popf jnp nop pop and mov popf mov hlt xchg push jb outsl dec adc (bad) loope sub mov or cmpsl mov xchg int3 mov arpl xchg push or cmp add push daa mov jp loop movsb push out push xor xor jo mov lcall jl divb cmp dec adc and fs mov mov pop into dec loop shr stos in and bound out pop sbb pop lods mov ljmp and fadds pop pusha push loope lock in lcall push es push cwtl xchg fidivl pushf mov hlt test ss jmp jmp sti fmuls mov popf add and nop in push jo pop test mov sbb sub (bad) test jecxz mov add fwait or inc call sub push mov inc push stc jge repz sbb mov lahf mov cmp adc (bad) xor adc mov (bad) push jae cs cmpsb mov inc and out clc clc gs int pop cmp mov xchg adc cmp adc sbb out push les dec test xchg rcr and sbb loope jb cmpl mov les pop lock adc iret scas mov pop cs adc mov xor ret mov mov test push pop cld sub dec fldt mov or sahf inc xlat xchg mov inc hlt lcall call jmp sbb testl fcmovne and (bad) rcrl jmp hlt loop dec add inc xor imul xchg cld aas pop cmp jnp movsb pop mov mov lock test aad jns das (bad) dec adc cltd and andl jae xor arpl and out call mov inc dec pop mov pop cmp ja pop and mov iret mov int add jp dec sub in mov xchg (bad) sar mov ret shrl sbb add xlat mov cmc jbe sub daa int3 cmp out sbbb fcmovne mov cmp aaa daa dec mov daa int3 cmp jmp cmp cmp fisttp inc xlat inc fld sub cmp cmpb sti pop mov stc repnz jae xchg cli mov xor dec loope jge iret jbe cli adc add mov xchg adc push add icebp mov insb jmp inc int fisub xor xor out mov adc pop gs in daa and push pushf mov mov inc jnp mov mov stos test mov dec mov pop mov mov shlb sbb mov mov push out mov iret int outsb imul imul sbb xor inc xor jecxz les std lds call iret and shrb xchg (bad) lock mov orb andl xlat add xchg lret les addr16 sub mov mov fwait in adcl pop hlt dec (bad) mov push mov (bad) xchg push insb (bad) pop pop inc hlt cmp and mov pop (bad) (bad) xchg xchg push rcll outsl lods push jg mov push dec xchg mov daa insl ret out xor push xlat xchg (bad) sahf adc ret xor in (bad) jge and jne imul and movsl int3 movsl ror inc mov adc xchg stos xor movsl sub sbb or mull int3 pop dec or push shlb pop sub popa in lret jae das (bad) mov lcall xor mov mov jmp cmpsl jge sub imul mov jae arpl fs and mov or scas (bad) lahf (bad) fldl add and lods mov rolb daa sub faddl aaa mov sub push mov push ljmp insl movsl cli insl mov or xor push or xchg xchg int3 dec test cli cltd sub mov xchg movsl sarl movsb pop jl lret in mov sub inc pop push fmuls ss lret (bad) push or stos cld scas fnstcw sub dec loopne cmp mov and push cmpl jge,pn adc push xor aaa loop or jno imul mov incb add push sbb jns es xor test fcompl dec xorl jns push sub and jp jno jo out mov loop xchg andl (bad) out inc rclb xchg jae xchg cmpsl dec test into imul (bad) sbb movsb fwait into sbb mov pusha pop jmp xlat arpl sbb push mov sbb lds fstps dec cmp ret loop (bad) repnz mov jns add addr16 jecxz and inc and lahf (bad) pop lahf jl cmp adc or andl add not test xor mov fist jle cmp repnz jecxz dec jb lock lahf idivl sub adc cmp mov rclb mov in inc js iret pop push xchg dec xor mov inc xor xchg mov hlt mov inc jge int3 cmp lea in sub add push mov push and pop xchg aad mov shrb ret xchg insb (bad) sahf rclb or loop fcoml leave vmwrite mov rcrl sbb xchg mov sbb loopne sbb push inc cmpsb dec jae xor aaa push and idiv pop out out std lods xor mov and jg movsl ror xorl xchg sbb call (bad) mov ret outsb xchg lods (bad) loopne lret cmpsb and daa pop jmp add lcall sub jle je xor sub fdivrl add push mov xor pop sbb xchg xchg ja adc in rclb pusha (bad) movb add xchg (bad) xchg sbbl sub xchg mov lds adc sbb and scas push lret xor not jle sbb js adc inc (bad) (bad) iret pop mov (bad) sbb or in sub add movsb sbb fcmovnu ret xchg lret loop cmp out xor inc testl add jo mov mov xchg das fwait jg xlat (bad) lahf sti lret aas dec insb pop loopne adc loope add mov pop fisubl jecxz lret mov or lahf jno jg gs adc les xchg xlat aad mov aaa sub sbb mov push mov or fadd dec add test mov pop loopne add stos in mov adc lods dec xchg movsb mov mov sar add and jae inc and (bad) das roll test push cs jns ds (bad) pushl js adc mov mov jns fucomi addr16 adc fldl mov out daa rorl xchg cmp icebp fwait js test sub cld (bad) fldcw fiaddl out xlat lret imul into stc cmpsl cltd inc mov stos iret inc cld ficomp mov in mov mov mov and push mov push (bad) fmuls into out push xor and push xchg jp push inc imull loopne cmp (bad) fidivl ja fidivl sbb lods fdivr jo mov popf jbe jg pop das sbb add inc mov sbb adc pop xor jnp push adc pop cmp ljmp mov jge cmp xchg in cmpsl and ret cmp xchg scas ja xchg fcoms cwtl int mov pushf jae jle inc stos xchg lods push xchg std fisttp int dec insb aad std sub push add cmp xchg inc inc bound dec fs add xchg jl lret call mov mov sub adcb cmpsb ds push popa mov in stos mov xchg push xor inc (bad) add sbb add jne mov jge jns and sub push ret test mov sti adc lret inc aas jl,pn xor add addr16 adc and in xchg in xchg cmc fsubp (bad) and sbb sbb ffreep xor lods in push jnp adc sbb sahf pop jg mov mov mov je dec pop mov sahf test loop mov test or cmpsl sub inc add fidivl mov xor bound mov outsl lock mov rclb loopne pop mov iret or jecxz xchg push addr16 mov xchg out pop pop push notb xor adc mov push mov cmp fmul sub std pop out pop push es push pushf sti xchg mov push scas mov or adc addr16 sbb adc (bad) aam add cltd lds cltd jns stos shrb loop adc sbb dec subb daa fisubl fsts sarb fisubrl mov xor adc (bad) es into out stc rol pop mov stos pop addr16 clc or sbbl aaa and mov rorb xor shrl faddp decl cmp mov iret sahf cmp mov (bad) jg add add (bad) push enter add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fistl add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas faddl jecxz icebp das adc xor out out cwtl jmp jmp mov int3 je out cmp mov jecxz std sahf jg icebp (bad) sub scas lldt popf out and sarb jecxz stos xchg mov test adc gs stos mov fnop aad dec imul xor pop lret test push cs sub call movsl pop orl mov or mov xor jle adc add adc inc mov push subl js iret popf sbb fwait cwtl (bad) jmp lods cli cmp lahf enter mov or sub popf outsb xchg mov lret ss jmp outsb ret dec add cmpsb add (bad) pop into (bad) incb xor jecxz insb sub push arpl mov mov fistp cmp push andl aad roll out arpl out mov or sub daa add jns jmp rorb or inc in cs cmp cwtl xchg cmc rcrl (bad) jl dec cmp pop xchg (bad) sub xchg ret or add adc aam mov arpl add and xlat (bad) (bad) cli inc (bad) nop ljmp mov cmp or out sub cmpl add setns jne (bad) sbb repnz lods push jl cmpsb outsl imul bound adc adc adc test (bad) ret mov pop or dec push fldl addr16 or daa or fnstenv pop jns std jle std jb mov arpl dec mov bound adcl insb rolb cld loopne cld repnz or mov shrl fcomps shrl xchg mov sbb dec mov jl inc jne adc add mov and inc in fdivr pop adc sub jle pop sti jnp or daa nop push stos imul mov or sbb ds adc dec in call xor cmp push push sbb pusha push cmp dec psubusw sbb pushf xor aam sti or mov mov or add into fldl lea pop xlat fimul ss ja fadds jecxz movsb push pop clc int push xchg enter sti or aam cmp adc xor and shlb into add call test stc out fwait and pop inc shll lret or lcall cld sub enter fsub pop (bad) lret fcoml lret xor (bad) ljmp ss js inc jle fbld jae int pop daa sbb pop fisttpll jp sqrtps rorl mov sub insb cmpsl mov dec mov into fnstcw add mov inc stos lret push mov cld mov dec daa xchg mov pop jne jno push jns inc out mov cmpsl js or sbb (bad) int3 daa dec ret lds enter cmp mov dec cmp push cmp es out adc fcoml or mov inc ret ficompl in movsl nop imul xor test test call ss insl sub push fdivrp loope add out mov push daa dec and rorl lods out sbb nop sarl mov mov imul lcall iret aas inc xor popf fwait (bad) sub iret (bad) sub ljmp add adc adc sbb es push ret mov cmp push das sub push add adc popa mov mov and jmp cmp stos pop jmp xlat lret sbb mov or inc inc mov int3 mov pusha imul clc lds stc jnp add hlt xchg cmpsb adc inc jns mov cmp push ljmp pop jp mov adc mov pop push neg bound jae mov xorl xchg xchg call mov xchg mov sub daa and cmpl (bad) mov inc arpl stc sbb arpl or (bad) iret or cwtl pushf (bad) stos and stc pushf add mov hlt xchg mov mov out pop push push jl sbb jne and add shlb cmp fdivl leave lahf out sbb mov (bad) push inc sub popa outsl xor mov aam cli xor popf mov cmp js jge bound orb xor sub ret cmp stos mov xchg nop (bad) repz add int push stc mov jmp stos jmp jno inc mov (bad) into and xchg pop loop sub in lds repnz into mov rorl adc mov (bad) mov mov test sti icebp mov (bad) ficompl push push push or scas inc cmp xor add cvttps2pi sarl add dec sub push or enter stc mov in mov loope inc ficoml jne cmpsb rcll imul jg out test sub dec sbb dec addr16 xlat ret add fcomps sub mov and repnz mov xchg orb push cmpsb (bad) arpl cli xchg fcoms pop into idivb mov cmp inc mov add in movsb mov add mov cli test adc repz cmp popa mov adc adc js fstps mov cmp jnp js lds jb loope push insl fcoms (bad) cmp lret xor fwait mov xchg loop or mov imul mov sbbl xchg stc pop popa xchg pop subb bound xchg ljmp clc push mov xchg sbb daa ss fmuls dec lret jnp gs iret push pop dec add lcall or mull stos fmulp loopew addl mov fmull loope shrl sbb aam mov sub (bad) mov adc dec adc cmp mov imul ljmp push scas hlt lods scas sar movzbl cli or mov xchg lret cltd xchg js jmp pop int3 jp pusha pop es pop mov test xor (bad) enter add cmp fwait pusha or pop xchg test rcll xchg push leave inc mov pop mov icebp mov repnz ret bswap roll mov adc dec mov xorl test bound xor push icebp jnp dec (bad) mov and or icebp arpl mov xor push push adc repz xchg jl cmp cmp inc icebp push call sbb clc or xchg mov sub jl shl comiss scas outsb gs fnsave xchg addr16 out jl sahf inc dec fsubrs lcall cltd mov or pop mov aas jge fild gs xlat (bad) cld push dec (bad) int3 or (bad) fmull fidivrl loopne inc push movntq enter xor roll ja xchg adcb or add jno pop in lock loopne adc and push insb mov mov popa or pop dec pusha lea and sub inc push lahf mov icebp and adc leave add je pop mov loopne xor and or cmp dec stc inc dec mov pop sahf pushl outsl pop ret loop nop sti (bad) push pop or stc (bad) mov push mov outsb pop sub loop xchg es popf cmp push mov pop imul sub leave clc pop popl adc mov sub mov hlt jo mov dec add jb fidiv mov and std andl sub les and mov pop test sbb fdivs rclb and mov jecxz sub push aaa push cmpsb jne dec dec or test adc fdivrl int3 cmp fs mov popf push insb push cwtl push iret mov xor imul cld out rol sbb add bound imul sub jge pop dec scas adc dec (bad) cmp sbb mov jae pop jno mov xor fldcw mov mov mov in xor stos aad push enter mov imul pop mov cwtl in xor cld xchg and imul cmp mov jae xor add xor std ss cmpsl pop faddl add in mov push and cltd (bad) adc inc sub in pop pusha add mov inc push cs jl mov outsb ja iret inc es outsl xchg mov lods cmp decb cmp jp outsb adc add dec sub jno pop je mov enter insb push repnz loope push fldl loop out mov xchg out and orb pop andl mov es or aas aam das clc ss out popa inc xor clc into jae shrl push (bad) idivl cmp pop data16 loop jge jle adc loope push dec sarl je repnz pop cmp mov shrl lcall and popa dec out nop xchg scas sbb jmp fisubr and sbb dec dec ds pop outsl lcall and mov xor jmp jno mov mov add test pop mov adc pushf mov and add cli out add add adc stos jb arpl push push (bad) pop sub push cmp xchg cli jnp lea push popf fbld stos adc pop inc sbb hlt mov shrb je ss mov std xchg fwait sub (bad) or bound pusha fdivrp fldln2 insl test jmp pop adc cmp rclb dec mov call int mov pop lods mov and dec loop dec loope out test adc push push push popf cmp repz sbb dec adc outsb (bad) shr push scas jge cmp mov add add mov pop (bad) incl sbb add out mov mov jge mov pop nop push stc ds mov and xchg out repnz xchg xchg and sub test pop je pop jl scas cmp inc sbb push fsubrl les call cmp jno inc lahf mov xor mov xor mov pop sub in mov leave push test inc inc adc orb pop daa push push (bad) icebp xor dec pusha out mov dec cld sahf sub data16 popa add sbb sti mov test pop ja dec dec push mov dec fisttpll adc pop subl xor mov dec hlt test xorl add push jo mov ja xor adc add mov or add mov xchg jecxz xor inc sub insl (bad) fs push xchg xchg sbb addb hlt lods add in pop dec xchg mov xchg push rorl push (bad) out (bad) imull cmp outsb fsubs sbb xchg imulb stc lcall shlb xchg dec mov pop ja imul arpl mov jp aas pop push jmp not frstor jne add xor ret aaa imul push sbb sub xchg int3 push stc aas mov cld mov pop mov imul (bad) sarl (bad) xchg mov mov dec jle and fisubl pushl daa mov mov stos jl lret sub cmp decl into test adc push mov pop ljmp mov stc out rol adc fidiv lcall sub add mov xor movsl pop push test movsl xor jl aad pop ret and pushf cltd push xorl lret fist push into ret out icebp shrl jl and rcrl mov mov imull outsb dec andl fsts mov loope mov sub clc iret arpl sub lea lcall lret lods ljmp fisubrl push or jle pop jb add xlat sbb xchg decl push (bad) dec xor ret cli pop mov mov in lret mov pusha bound sub subl out fnstcw adc das pop jae leave shll inc (bad) out out pop shl mov aaa sub jle,pn je pop jae fmuls sub lcall fidivrl xchg push pusha mov mov movsl faddp inc ljmp movsb sub cld mov lret je dec xor pop xchg jg dec add lret idivb sub cwtl sub sbb sbb adc es shll test bound or xor dec push sbb inc rolb pop sbb cmpsl sub bound push xor addr16 jle enter add or cmpsl icebp pop adc mov push imulb repz sub pop jmp into stos div out les fiadd (bad) push in jle lahf lods rorl jle ret mov push cmp xor ret push mov push hlt pop aam sub jbe xchg pop je cmc mov push adc test or cltd subb inc ror aad add mov jge sub shlb cli jp test fcomp sarl imul sbb sbb mov into lds add push push call out clc or jecxz mov stos fstps ja std movsl push cltd aam jne stos sbb test idivb gs cmc inc lods mov (bad) jle xlat movsb cmp mov xchg push pop dec pop data16 sbb sub xlat into scas push mov (bad) sub sbb xor xchg cmp cmpsl mov cmp mov mov mov cli dec sbb inc mov dec ds mov or fisttpll daa cmpsb mov push mov scas push mov roll fwait jae stos aaa xchg imul rol (bad) adc call xchg mov jns cld ja cmp addl push cmp lock addl push cmp fild add add out into dec ds add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push aas sbb rolb rcr xor shrl fcomi aas fstp es pushf scas popa ficompl int3 leave jmp jae dec sahf out sbb out jge (bad) jmp sbb add add pop jnp testl pop xchg mov enter push bsf cld insb sbb mov and mov aaa int and inc sub mov icebp out clc (bad) aam scas mov cwtl cmp arpl adcw in mov adc lds xor int pop repnz rcll add inc in hlt xchg dec out cmpsl shlb dec adc mov pop cld pushf push cwtl aad into sbb jmp or jl hlt mov xchg xchg outsb lds mov xchg call arpl stos out scas mov lods sub jecxz mov mov xchg loope,pt es sub cmpsl les mov sbb lock sbb stos fadd (bad) rcl sub clc (bad) mov dec sub mov pop xchg inc cmp inc sbb adc loope pusha mov out mov sub lock fsubrl stos in inc insb in xchg xlat aad mov insb push jl cmpsl push dec out out in mov mov mov cltd daa sub rcrl movl mov out push inc out (bad) (bad) jbe lahf pusha int aad imul xchg mov jle fnstenv ret in orl push int xor inc dec mov imul out mov jae xchg lea or push dec lahf movsl ljmp inc imul into mov inc sub loop push aaa int3 sti inc mov xor into adc cmpsb rcr stos mov (bad) pop das inc and sbb and dec (bad) ret mov subb bound pop jge outsb je test std jo clc add sub out adc ret lret mov das xor test cmpl test or sbb verr das add and sar sbb in repnz out xor les pop adc (bad) notl push mov out int mov jge pop jle jg jp mov and clc push std insb dec jo fdivs cmp into pop out sti pop xor int adc (bad) jmp (bad) rdpmc cmp (bad) xor adc inc or adc dec cltd test bound or cli xchg xor int andl xor dec jge sar stos lret mov sub adc scas aaa adc sbb (bad) xor mov inc fild xchg jge repnz (bad) loopne stos pop movsl lods jl jmp mov je dec pop addr16 push into aad cld ret sbb mov in dec rcrb cmpsl push call adc dec out dec ljmp cmp inc in in ljmp dec xor in repnz sti jne inc jg (bad) data16 out mov test pop or aam xadd xor adc xor fcoml (bad) xor stos fwait mov loopne ja rep hlt xchg mov jmp push xchg push lock cltd out cmp mov xchg mov insl flds dec (bad) mov leave pop pop (bad) jl push mov cwtl shrl (bad) xor ds push xchg hlt dec mov push cltd aas cmp cmpsl addr16 lcall ret sub adc pop mov mov xor or mov mov cmc xor mov cmc popf mov repz lods loopne,pn dec or xor out xchg sub rep (bad) js popa mov insb push sahf pop push pop jb les and out adc and ljmp test ja lret mov sti scas mov fsts push pop jne rcrb in push add sub loope lods xchg mov push stos cmp fwait lret outsl push push popf out push int (bad) sub mov push mov lods mov cld mov mov (bad) cmc mov xchg pop pop cmp sub rolb clc add lcall jns push pop ret and sbb rcll push or cmp push out cli imull and stc aaa vminss cmc das in cmpsb sti js xchg sub adc sahf dec adc inc xor push outsb xchg cmp inc adc mov mov xor pushf aaa int dec jmp push test (bad) jle lock jns xor mov ss sub pop out insl cwtl fnstsw popa mov loopne fnsave (bad) daa cwtl adc into xchg jl mov leave cmp leave mov mov insb out (bad) pop xchg cmp data16 adc imul imul movb dec jae out cwtl pop add sub pop cmpsb ljmp adc movsb decb mov sub push push cmpsb loopne fimull adcb (bad) mov rcll jp mov lods inc sub and mov jmp faddl jo add and mov xchg sbb in mov stc ret iret subb ss fscale push add push xorl loop mov ja fucomp int cwtl push shrl push sbb xorl das aad cwtl adc cmovl shrb imul pushf jl fisttp sub and pop stc sti sti or mov test lret adc jo inc cmc fwait sub hlt mov pop fcomps test push or push into into dec adc push mov fsubs cmp cmpsl sub ds orb xorb add out push push and (bad) (bad) inc ret mov fldl or sahf mov pop mov and hlt cltd mov lret fildl addr16 cmp push fildl dec xor aaa xor fldt mov shr (bad) repz gs imul (bad) pop arpl and cmpl lock cs in and (bad) (bad) mov lea dec sub scas sub adc pop cmpsb repnz sub cmp clc mov fisttpl lock imul insl lret xor addr16 jne and in ficoml sbb pop addr16 mov and or jg lds jecxz sbb fidivr jp pop (bad) es in mov mov cmp adc ret fdivs (bad) enter xlat push mov xchg iret iret xchg pop inc xchg je push sbbl mov popl cwtl int3 lret cmp mov insl fdivr mov sub movsl in dec cmp movb pop cs xchg arpl inc and mov stos sbb mov inc sub pop add and repz fist push xor sub pushf pusha lods xor imul adc lods xchg cs mov mov xor mov xor mov repnz jp insb outsb (bad) xchg and xlat or stc mov pusha (bad) cld cmpsl jl sar shrl test add pop add jb outsb dec or cwtl jg jecxz das mov mov dec mov mov push mov lock je xor in (bad) lods sbb ja jo mov stc mov nop jp cwtl inc int push in jns,pn sbb aas pusha gs fist inc xchg pop xor lcall push into adc mov mov movsl fcoml inc outsb arpl xor jecxz inc mov iret xchg out push xchg jl xchg push push adc aas mov in repnz jbe mov adc xchg mov sarl pop daa mov push stc xchg pop mov inc push es rcrl add xor xor out inc imul cmp inc mov jno mull mul sbb cmp cs das ja nop pop xor test cmc mov jecxz mov add jg push leave cltd mov scas out push cmp cmp negb sarb (bad) mov mov jne icebp outsb cwtl add cmc jae pop incl push xchg (bad) xor fistpl sahf cmp ja rclb mov sbb lret push or inc fwait jle pop and mov mov sbb dec push inc pop insl fsub lcall jbe enter inc mov inc jno popa mov (bad) push dec cmp shl sbbl jb (bad) xchg jae jns sbb pop insl cli sub mov xchg and sarl jo aas mov lods cltd jg mov fildl lcall xor pop pop xchg sbb cmp cmpsb les ja in fisub sbb xchg mov daa sub sbb negl mov push dec cwtl push mov daa stc dec arpl les add fs cli movsl rcll fsincos jle cmpl sbb xchg cmp fmulp jns dec inc mov sub hlt not cmpsl jo ds lret cmpb lock dec mov sti outsb rol popaw sbb cs inc mov pop aam orb out incb into cmpsb sub jmp mov call add nop and or outsb aaa roll popa test (bad) ja js clc dec out inc and push xchg (bad) jecxz insb xor ret das xor outsl inc pop mov es addl sub adc sarl sbb mov mov dec shrl pop testl in clc lahf fnop fsubrl fs jno or mov push cmpsl xchg dec jns enter adc pop subl scas cmpsl sbb dec and into aad add (bad) lock std ficoml mov add call jnp sbb jge xchg add stos mov test pop xlat leave xor push xchg mov (bad) cld push mov jnp pop nop push mov add mov dec ja adc push add in cmp or mov pop inc pushf jnp fs imul adc xor jnp mov xor push lcall jno sub pop pop inc pop lahf js clc outsl xor pop add cmpxchg stos pop rcl push pushf rcl mov jns and add aas cli loop xor into ret cmpsb roll dec (bad) add adc hlt sahf pop jecxz inc pushf pop pusha jb (bad) mov lods push rep je imul mov scas repnz in rorl xchg mov mov fs xchg loop das xchg fcmove cmp arpl mov xchg push rorl cmp pop js and rol dec xchg call sbb fdivs sub adcb or rorl pop iret into int dec adc mov adc and repz mov aaa cmp fmull (bad) lods push in cltd push iret test jmp loop out insl das cmpsl jno add cmp xor or pop out inc nop lods cmc idivl in lock aas xchg (bad) sti popa sbb xchg fcmovnbe push (bad) insl popa push xchg push dec xchg cmp dec ret movsb inc adc and mov sti test push scas loopne lds (bad) in and in mov in mov or sbb jle repnz jb gs xchg sub jge imul les rcr xorl and mov pop cmpsl add push jl loop pop pop ljmp xlat fs adc sub jl test add repz into add jg mov push test cwtl stc test jns inc notb cs (bad) in dec jb in mov push xor popa fldcw push xchg lods jae adc add in (bad) test add imul pop jg data16 dec push popa mov and sub stc insb into test add push call lea xchg xchg lock scas andb jg pop push sbb adc dec mov push ljmp add imul ljmp ret sbb mov movsl inc adc mov push insl add rolb jl mov adc sub es add or (bad) cmpsl in in jb cmp in mov cmp stc sub cmp (bad) mov add sbb fmul adcb jmp jg push push insl idivl cmp por mov into test inc mov inc ret enter stos das xchg fsubp mov jg js (bad) (bad) sarb mov mov mov mov popf mov xchg scas push std add arpl push loop out psadbw sbb arpl pop mov std cmp cwtl movsb and sarb test jae dec add pop or stos stc mov inc cwtl sub popf sbb notl inc pop add cltd adc mov add lret lcall add aam mov roll in inc out jp stc (bad) std ds jp dec hlt icebp dec push gs les jns jno js scas sub inc xchg inc mov push and pop leave xchg fstps decl stc dec push or inc bound aam cwtl jle or xchg add mov sub stc pop mov fcoml and hlt add jae push cs je inc pop pusha (bad) in rorb jecxz fstpt lock (bad) pop (bad) adc pop push cmp lea test sahf cmc sub aam add mov pop das cmp jecxz mov jg inc or sbb jle (bad) jb add sbb sub or xchg fwait out ret xor fs rorb sbb in mov sbb mov popf jl xchg stc arpl mov mov stos mov dec (bad) aad sub adc mov sbb leave mov cmpsl inc sbb push mov xor insb (bad) adc push sub jbe push (bad) jmp (bad) std loop in mov mov lea rcr push mov xchg sub xchg sub sbb pushf mov sbb pusha mov movsl push (bad) jmp mov xchg lret mov movsb lret adc into cs stos push push je add jmp mov addr16 dec sahf jb sub push jae add mov jo mulb push jecxz and fildl add adc add pop adc sub dec (bad) jb notb faddp mov es outsl (bad) cwtl pop dec xchg clc adc add mov jl jecxz test imul in or pop and sbb push jl psubsw mov or pop nop or pop cmp idiv (bad) call sahf cmp repnz xchg daa dec sahf cmp repnz lcall add incl mov cli fidiv int add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push aas sbb rolb repz es cmp mov cwtl dec pushf out cmp insl cmpsb imul jmp xchg adc jne out jge (bad) jmp sbb add add pop scas jmp pop push out push pushf mov mov je enter andl inc aas pop (bad) sbb stos out cmp lods xchg sub sbbl jg movsb scas lods fiaddl push pop loopne cmp jmp sbb inc xor adc sbb cmp jbe rorb jg dec pop addr16 and jmp lds dec jmp data16 or and dec push lock loop ret div mov test call (bad) in loope jno stc cmp mov test jne adc or sub sub push out xor adc sti repz fidivr mov cmp in add add or cli add push loopne (bad) jno nop push in add das mov gs roll jo cmpsl fcmovne insl xor out jb cmpsb or jo jp ja pop int3 std inc mov loopne adc mov ss push mov pusha mov pop dec sbb mov mov cli xor int inc add (bad) int3 xor add xchg jae jle inc cltd and aad popf aam icebp push in daa inc fidiv cmpsl inc frstor dec pushfw lea pop inc (bad) ds addr16 mov mov xchg cmp fstl in dec dec out jp inc ds cld movsl adc aaa repnz cvtps2pi push aad adc shrl pop mov outsb dec add pop push mov (bad) adc sbb popa lret leave jno test add call push add add mov jb out addr16 pop outsl dec pop pop (bad) and dec sti sti imul adc lods xor or movsl xchg push cmpl je xchg aas cmp cli push inc test xchg pop jb out xor arpl push add popa add ja addr16 jnp inc adc pop adc dec gs rcrl out xlat je sub insb adc push pop or mov xchg inc dec mov lahf or js add or ljmp cli fdivrs xor pusha and leave pusha xchg mov cmpsl idivb mov mov lcall jecxz pop xor pop repz in push or dec adc je or lret push outsl pop adc das loop mov sub leave test add jmp ds mov jl mov fnstenv cmp inc jmp mov negb aas push inc scas mov lcall sub jnp xchg lret push xchg sbb pop lahf leave or push lcall xor iret sbb (bad) rorl add xchg inc leave adc sahf fild mov rol fiadd sbb cwtl lea addr16 rorl (bad) fsubs out and pushf mov jne sub (bad) loopne add jp jle add pop adc enter xchg fstps outsl jns xor or and xchg mov daa cs cmp xor pushf jmp imul adc xor mov add xchg cli cmpsl data16 cmc xor cmpsl leave dec sti mov fisub inc cmc lcall cli repnz add int3 mov ret loop mov jo popa fcoml outsl (bad) imulb mov mov lds cmp jecxz test dec roll and xchg sahf (bad) pop out das fmuls push pop mov lret inc in (bad) push jp movsl jl lret popf adc fisttpl loope imul lret mov shrb ret dec mov psubb mov push mov dec and mov mov scas dec cltd mov negl sub dec out lock mov ljmp inc stos push pusha mov pop cld loope sbb lret nop leave fidivrl xchg pop lahf mov loope or cmp shlb push mov xor movsl gs call test lcall (bad) (bad) sbb loopne mov shrb arpl cmp loopne sub push scas add cld jmp jge mov fild aaa test add rol (bad) mov push push dec (bad) decb out xchg mov sahf aaa ds lahf and mov push jecxz shrb out notl dec mov xor pop movsl sti mov xchg cmc cli dec int loopne movsl sbb push aas mov cmpsl push mov and or fiaddl ffreep dec fmuls orb insl stos jmp sbb icebp insb jns (bad) push pop xchg mov sbb in cld test adc testb mov push jae lret loopne push fwait mov cli push and shr mov lcall push xor lds and leave cwtl add dec fwait (bad) leave adc repnz cli add inc and ja (bad) mov in jnp mov icebp or or mov cld test subb loopne adc xchg sub pop into or cmp aam xor xchg mov es je cld mov leave push lcall xchg aaa test fcompl arpl clc or or imul repnz or aad push stos jns pop pop and jae jge stc sub mov cmpl xchg cmp or imul push mov aas inc xchg aam movsl pop test into xor aas mov das or sub adc xchg xor pop loopne cmp jb mov sub mov ljmp jle xor (bad) xlat movsl xorl fild jne mov push jp inc hlt popf dec dec daa ret in lret push insb fldenv push cmc in int jne icebp lret lcall es cmpsl and fild aaa push mov xchg sub mov inc (bad) cmc aaa jb (bad) and push push ss or dec sbb sti out sbb dec push inc notb mov inc lret clc sub mov cmp in pop dec mov es dec cld gs jle fdivp mov fsubrl lock or cmpsl adc lods outsb push into push int3 sti lret dec cmp adc shll inc icebp xchg xchg or and sbbl movsl fildl inc jecxz xchg fdiv sub movsb jl fcoml push jae mov dec pushf cmp stos pop lods push fwait pop fisttpl add js mov fisubrl icebp aad push (bad) mov or out mov xchg xchg jg jle fsubs xor mov jo cwtl push pushf jnp into and test notl sbb ret push adc xchg fcmovne (bad) js sbb pop nop xchg push movsl bound cmp cmc stos xchg cmp jg in or lods lds add dec insl sbb push pusha mov call lock pushf in stc jbe mov sub cli popa aas ljmp jae ds lods dec xchg popa mov or stc in scas pop dec mov push test (bad) aam jg (bad) dec mov aaa and mov ja out push pop push xchg int jne add push ret aaa cs movsb adc lods aam jno cmp mov pop mov subl aas pop (bad) stc out iret xchg push mov fsubr inc pop and adc in push in mov xor sub fistpl or fldl inc mov adc xchg ljmp (bad) xor (bad) and jns sub sub push je and cmp outsb sub stos dec mov mov fincstp out sbb mov mov cmp mov aad xchg fxch xchg mov subl dec mov lock (bad) cltd adc fldt stos das sub add pop sub stc mov cmpsl push cmp sti les or clc stc push out rcr mov push inc pop or iret stos and mov sarl (bad) (bad) jb mov int3 loopne ficom in imul out xor ftst in jo mov nop adc xchg es test sub or cli rcr ficom stos (bad) repz insb daa mov (bad) negb fs into or nop mov sub cmp cmp and mov aaa push lcall mov pop xchg jnp push pop imul dec sub movl pusha pusha in aam dec push jbe mov xor outsb imull in adc ds ljmp popa aas in cltd xchg add dec movsl js mov addr16 add inc adc inc and bound xor (bad) jno mov outsl nop mov xor (bad) mov scas daa add out es in (bad) adc cmp and add aam push cmp lock bound ror or loop bound jmp int mov sub sarl pop testl jle lods fimul jg ror test jl push jg xlat xchg pop push lods jbe or aam mov (bad) cs iret lods movsb pop bound ds adc add int3 sbb (bad) out xchg pop aaa test icebp push add push loope dec jl cmovne mov jno mov xchg (bad) stos and insl pop adc dec lcall push mov rcrb mov mov mov test inc (bad) (bad) and pop sbb xchg ret fcomps and cmpsl inc int cmpl sti dec and bound or outsb scas or inc sbb loopne xchg and inc adc mov cli jmp inc pop rcl adc rcrl sub dec bound ds adc lods call pop js sbb push cmpsb xorl xchg loope pushf cltd sub push mov jo nop push push fmulp sub mov sbb sbb dec stc jae int3 orl jmp mov mov mov or push pop pop (bad) mov insl ds xchg mov add xor sub daa popf xchg mov ljmp cld jl jg in pop aad cmpsl fsubr mov jle scas out add push (bad) xchg scas out dec cmp mov or imull add pushf xor popa test movsb (bad) std add jno cli icebp or jge inc fiadd imul sahf loopne pushf inc loope stos and inc pusha mov push dec incb dec xchg jmp aaa ret in jp hlt aaa dec cs nop adc xlat shrb ficompl test mov jl adc repz or out shlb xchg repnz pop push cmp or pop lds jno jmp sbb mov mov inc push insb (bad) mov imul pop sub push bound and lds mov (bad) mov or ss push (bad) iret clc jp mov pop xchg adc out pop scas mov mov and out scas mov aaa mov xchg xchg lods cmc mov jbe cld (bad) mov scas jmp mov or jns je lock xor scas rolb js dec and add jno das enter movsl mov add adc sbb (bad) out iret hlt je imul jae shlb adc fsubrl (bad) dec mov inc je cmp lret pop sbb xchg rcr jge scas nop cltd scas jne cmpsl push pop movsw xchg adc xor and ffreep inc mov mov add jg xorl mov cwtl mov out cmp dec aaa into das pop fistp lcall dec cmp pop sbb and mov imul enter mov cmc push lcall out fidivrl test fcoml imul and mov lods (bad) xchg aas nop aaa (bad) int3 popa dec push cmpb mov movsb or popa out pop pop jl sub mov aaa xor fidivrl and (bad) and add addr16 in mov shl cli test dec in and cmp mov sbb sub stos outsb add negl pop rcr push jnp mov cld jnp mov testb outsb or lret les in mov cli hlt imul jns aaa daa fcompl mov cltd and inc sub test mov sub pop (bad) ja jg out push mov xchg xor sub pop jge push add inc cli add cmp cltd push (bad) mov pop dec imul roll dec adc xor clc loopne test enter xchg push jno mov dec mov loop xchg test jp dec mov (bad) dec nop insl mov divb dec jb mov out idivl repz and call pop out jl fimull in cmc cmpsb repnz inc or sbb (bad) into rorl and sbb ror in repz stos in cmpsb enter out xlat inc mov mov sub frstor or movsb in movsb jmp jg fstp (bad) loop push cmpsb js add push pop mov insl push ja mov rcrb pop sarl repnz lahf fstps iret or dec pop push and cmp xlat aas push pop jne dec sbb loop jne and gs movsl out cli arpl push push xchg xor out jae dec push (bad) cmp js cld int3 je push jle pushf fstl cwtl pop lods cltd in repnz inc pop ror jecxz fs adc sbb push and lods xchg cwtl and jae negl add cmpsb adc push xchg mov addr16 jns mov test adc mov loop rolb dec movsb inc fucomi call ret flds or mov aaa enter mov mov sbb mov mov cltd push sbb and je adc xor inc xlat inc clc out aaa ds cmp rorb mov mov in call inc fsubs (bad) xlat lods aam sarb hlt into mov add inc add loopne rorl push inc mov pop (bad) testb inc (bad) adc ljmp pop nopl lock addl push cmp lock cmp add or scas adc add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fistl add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb sar shll cmpsb mov leave imul in popf (bad) mov insb pushf ds je xor dec fwait mov sahf fucomip stc aaa push out jg repz add (bad) xor jmp lods loopne outsb sub fidivl inc sbb jl sub push not mov sbb sub arpl sbbb sub mov jecxz ja sbb test ss sbb mov ret dec jns pop in mov rorl push loopne (bad) loop (bad) add cs push bound or arpl mov ljmp cltd decl gs sbb mov xlat pop or (bad) inc xor movsl inc shrb pop cs and inc daa imul pop enter ljmp jae out sahf dec (bad) and lods loopne xlat pop and repz out stos (bad) cmp imul in insb icebp in lock fidivl in inc pusha aad cli cmp xchg mov xchg lcall jae xor xlat outsl jecxz and xor cmp and les (bad) xchg xchg jg sbb jno loope fadd mov xorl sub enter xchg adc mov imul leave int pop pop cmpsl lods ret pop (bad) sub xor push test ss mov lods popf cmp mov aas xchg imul xor ret int adc orl jp or jg xchg pop mov add clc aam mov cmpsl mov scas jecxz push stos xchg inc or jmp cmpsl int3 or sub lahf pop gs xor jp test inc dec xchg jo xchg das arpl fidiv insl addl loope dec push jbe xchg mov mov les lock stos repz jp fdivs enter dec fwait jecxz aas sub lcall fnstsw push cmpsb lret outsl clc ffreep cwtl xchg push xchg repz out mov dec scas ret (bad) jnp out xchg enter mulb sbb pop fisub mov lea fstpl sub inc or inc sti gs sahf jbe jnp mov ss in outsb ljmp and mov adc and nop imul imul imul cmp aam stos mov mov jae cmp ds int xchg or insb or mov inc lock mov xchg mov mov inc add push inc adc cmpsl lret inc and add lcall rcll into popf sar mov lcall stc sub addb std adc mov and jae push dec (bad) mov inc (bad) outsl fidivrl mov sbb mov insl test mov add add std test fwait test fcomps scas mov and mulb std test mov jecxz xchg and test inc mov inc das push xchg cmpsl and pusha pusha xor adc mov jge lahf adc iret (bad) push pop jmp cmc push (bad) in xor sub loope scas je dec fnsave movsl push mov inc fs sti and clc rorb sub cmp adc fucomip scas mov pusha cmpsb cld fidivl inc pusha push add mov pop sbb pusha ljmp mov inc lret pop cmpsl xlat std test inc dec xchg cmp cld out (bad) in into sbb xchg rcrl insb xchg enter dec fwait mov fistpll mov sti xor (bad) sbb (bad) roll adc (bad) mov enter movsl xor cmc dec mulb (bad) jns sub pop nop mov jbe mov xor inc enter ret out lock xor clc xchg dec pop mov loop push int3 xchg lcall push inc loopne hlt out mov mov stos outsb xor xchg sbb jae mov lahf es popa les iret inc pop jmp outsl sub inc mov jb adc sub jecxz sub pop push incb jmp outsl sbb fstpl aam mov imul or data16 or dec fnstenv enter inc jno inc xchg mov mov js hlt pop mov dec and xchg mov and sub gs pop add cmpsb mov loopne mov fiaddl pop test imul outsl mov imul negb movl mov dec gs inc xlat cmc push inc cmp mov and jne fcoms mov test ret scas outsl push adcb push imul mov repnz mov sbb (bad) (bad) jp mov ret mov lret lock push add stos in or cltd pop bswap mov (bad) and jecxz test cmp sbb xlat inc pushf stc out jge sti push leave mov lea stc fcmove in mov cmp and pop mov imul sbb das lods xchg mov xchg (bad) dec mov and adc stc inc mov das das pop bound js dec cmp add (bad) or (bad) shrb cltd mov push sahf pop dec (bad) mov or pop int3 out mov aas loopne mov rcrb outsb dec push push mov xor cltd inc add xor int jb push cwtl fsubr fstl lds stos dec loope mov rcll dec push shlb mov jae aad mov cwtl ret push xchg dec mov jp ja mov mov lods xor push sbb xor bound pop sub sbb cltd es xchg arpl hlt mov mov pushf or pop aad scas pop imull pop jb aas pop mov adc out push aad dec cmp loop test push out add inc xchg stos xor and ljmp daa (bad) xor pop pop cmpsl adc ret sub cmp mov mov jl mov cmp push cmp dec lahf mov xchg sbb and loopne movsb rorb hlt jecxz stos jp sub ret (bad) xchg mov (bad) mov sar mov or or mov push push ljmp jb (bad) sbb insb inc test add (bad) cmc pop or push sbb in inc pop mov bound xchg out scas pop mov add mov outsl ljmp daa mov or movsl mov mov (bad) mov mov pop lcall lret mov std pop cmp sti pop mov (bad) lcall std adc stos inc lods inc je cwtl mov dec movsl int3 in mov ret mov scas mov nop iret mov jmp ds add mov lea aas lahf mov push xchg cli sbb fcomps (bad) push outsl insb push and mov cmp inc mov andl sub fldl mov aas jbe jmp mov arpl and clc jle sbb inc (bad) mov cmp jge enter ds xlat negb js cld xor insb push sub sbb lret and clc negl add fmulp dec pop or ja sub cltd push pusha push jge stc jmp or aaa fwait mov cmp out (bad) fistl ficompl sti push push add enter mov or push or rol cmc imul and lahf add sbb out mov inc pop sbb sti jmp mov push ss push and mov lcall gs mov push xchg fdiv add sbb repz aaa mov inc stos sbb xchg mov mov mov (bad) stc mov rcll ret adc int3 je rorb push cmpl push roll lahf out (bad) sbb rcrb std fisttpll pop push int inc jge out lds xor pop hlt xchg cwtl je negl add inc jno sub pop leave cli lcall sub test mov sbb std fimul xchg add jmp (bad) insl cmc and mov pop or mov mov fs imul frstpm(287 sbb push rolb mov test daa into push mov push fisttpl mov ficomp jle cmp cmp mov enter icebp xchg pop aaa push jmp addl lahf mov mov clc push out test out loope,pn xor cli jl lret xor sarl ds loopne mov sbb addr16 push inc fsub jl and fsubl aam push popfw sti arpl xor jl or aam jge cmpsb sub dec xchg mov cmp mov or push and push xor repnz je fistpl push loope push bound sbb shrl inc pop test (bad) xor (bad) sub xchg dec aam or cmp pop mov sbb data16 mov mov test addr16 mov sbb aas movsl ljmp imul pop (bad) lcall in and test (bad) frstor sbb jne inc in out leave mov jnp mov push fldenv (bad) inc sub jle cltd inc mov pop sti sahf test xor lcall sub cltd aam clc aaa mov scas insl jns xchg insl mov adc insb jnp cmpsb xchg mov pop das lcall inc int3 or pop push das xorl rorl jo pop ss jae stos dec rolb sub popf les nop and stos cmpb movsb stos adc xchg jl cmp push scas cld push aad adc mov pop pushf std stc fdivrs mov enter dec icebp (bad) or or cmp sbb mov cs sar outsb (bad) fcompl or clc ss xchg mul cmpsl xlat lds inc sub repnz add dec fwait pop loopne xchg jnp mov jg (bad) pusha rcr xlat sahf mov je insl jno push fs fs in aad push inc notl mull adc setp pop in cltd push roll kandnb lock fsubs mov mov or mov call in sbb and and jb pop mov xor jno scas mov mov outsb inc ret add movsb daa insl jo sub pop (bad) xchg out cmovnp icebp mov imul subl arpl mov inc xchg xlat popa movsl arpl lds popl pop push repz insl xchg jecxz add mov cld xor jno daa lret xchg pop push lods es fiaddl mov ss jnp mov negl push mov lahf test fadds dec adc (bad) mov out sub xchg aas (bad) and nop pop push lcall or test addr16 stc cmpsl (bad) mov push js sarl cmpl dec jg push or sbb inc and or ljmp outsb jecxz ljmp fs insb test sub ret or orb out test mov push xor mov (bad) sub mov mov fcomps or sbb push je in add mov pcmpgtw jo xchg scas popf mov mov or and mov movsl daa xchg xchg js clc push xor add gs scas sub adc dec dec fwait dec cmp sub rcl fldcw pop mov add je cwtl xchg lret mov mov std cmp sbb mov xlat dec ja pop arpl hlt adc lds cmpsb pop mull sub fdivs lock jle std ret outsb daa les pushf popf push sbb jnp stos pop in es adc iret stos inc push fistl out das imul fidivrl mov shrl icebp mov mov scas push iret sahf fstps pop push fisttp rclb lret inc cmpsl push push xor stc ret jmp xchg cmp je add clc (bad) mov mov outsl imulb sarb in out negb imul jo fidiv lret sbb mov inc jae sbb fs dec in rcrb dec cli loop popf aad xlat lea jns dec popa jge clc dec mov inc fildll ret test and out test mov dec ret js in lcall cltd and inc pushf dec jmp fcmovnbe and mov push or into or sub loop,pt insb xor int xlat xchg sub or jb push movsl scas popf add push in cli sbb aam fildll fsubrp push pop cmc jb inc cwtl fsubp jno sbb and sbb cwtl sub idivb inc (bad) rcll pop (bad) xor xor pop adc iret in movsb out ror outsb and adc imul andb das in pop mov dec leave dec adc jo fstl call jae outsb lods xchg sub ficom aad or add lcall push pop mov stos (bad) je test mov popa lcall stc pop push dec mov push jae ret push jge bound seto jo lret xchg xchg jle xor sub test adc out std cltd es and sbb (bad) adc sbb sarl ljmp mov pop rorl mov jle aaa mov pop and fwait pop pop dec dec in inc bound mov push add jae dec jl mov rorb lcall mov jg in cld pop xchg mov fs and clc div inc in fcompl cmp sbb loopne in movsl add mov cld pop mov pop dec loope je es (bad) dec aad or loope xchg imul lcall inc pop pop xchg and sub sbb fdivrl xchg cmp mov sub imul sbb shl enter fisttpl cmpsb mov fild mov sbb fisttp xchg xor int inc push cmc mov je lea ret cmp call lods sub pop sub sbb sub mov iret and loop hlt nop dec (bad) iret lock into pop enter in dec (bad) fnsetpm(287 les inc pop lret out pop ret cmp mov hlt mov enter (bad) ja mov mov das pop mov mov das pop mov clc pop movsb (bad) repz cmc stc xchg xchg add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ficoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop adc add push inc and fwait loope out shll aam inc pop cmp inc rclb mov pushf and sbb (bad) in adc pushf out add incl dec outsl push dec xchg repz aad (bad) jno mov sbb test inc adc dec pop test pop rcr dec dec rcll mov mov js insb cwtl xchg sub xor adc sub rcll pop divl mov jl loop xor sub or out lods push pop cmp xchg cmp sub js mov and int dec jp mov pop sti push or cs icebp stos adc popf rclb (bad) cs loope addr16 jp fnstcw or push push mov ja dec adc pusha sahf jl and pusha popf mov pusha stc lahf out aaa cmp ret mov sahf insb mov aaa ja leave push bound and mov in adc push ds mov push mov xor sub inc pop mov into mov or loop mov and ret data16 stc cmp inc add inc imul incl xor mov loope mov pushf pop push in sub inc jg aas xchg xor mov and jbe das mov sbb das dec ret rsm and movw lock push negl and outsl pop rcl sbb cli movsl xor pop (bad) xor lret xchg imul dec lahf ss adc xor sub repz in pop js xchg and mov sarb push xchg hlt xchg and enter je pop jl lods mov push xor sahf fnstenv xchg add les icebp bound adc out hlt mov pop std scas fucomp inc fwait ss pop sarl sbb iret sbb dec fldenv jns pop push xor stos and inc adc insb mov cmp mov popf inc rolb ror dec and (bad) arpl xor rcll pop aas pusha repnz jb or (bad) mov or ljmp cmp sahf lds lret xchg xchg pop in add xchg sub dec pop js mov jl jo mov mov aad mov dec jp jbe (bad) (bad) or push pop fs mov stos mov xlat push lock mov xchg jecxz xor mov jg jnp loope in push mov notl jle popaw push sub and fsubrl cmp xlat test inc stos mov lea pop (bad) and negl dec cwtl push pmulhw push data16 and push std mov push mov test jns pop btr pop cmp add sbb scas jmp adc (bad) xor sub and jg rcrw xor or xchg inc sub xchg ret lahf fstl jo popf out mul pusha (bad) mov xor lahf sbb imul loope jl fstps push (bad) icebp push jmp jl pop cmc sbb mov xchg cmpsl mov ror mov jmp leave outsw inc ds xlat adc pusha negl xlat test sti test jb xlat shrb sbb dec mov jge aas test mov frstor or fist (bad) adc sbb mov aaa sbb insl cltd sar lods jge inc jg jnp lds js mov je add sbb pop add into js pop jnp xchg mov push rcrb dec inc lahf sti scas imul into mov push add mov and mov dec popa popa scas mov in xchg mulb inc xchg je ret adc dec fsubr enter fisub test out or movsb dec loop mov cld xchg inc stc or test testl xor inc insb (bad) sub repnz out jne and xlat into and inc nop repz sti cmp jns js or std mov xchg xchg mov or push xchg arpl cs xor xor push (bad) loop je or repnz jo repnz (bad) ficomp or daa les out jb dec std cli test inc add inc ror leave or fisttpll pop dec add fstl mov cmp aaa lods xor lea mov mov test mov data16 jle faddl push mov jae aam scas cmp xor xor call rcll addr16 sub fldenv rcr cmpsl pop sahf cmp scas insl pop adc inc subl outsb aam int mov lcallw outsb gs mov fcmovu mov test and push (bad) mov add xchg aaa xchg push pop out mov call jnp pop insb mov rolb fisubrl cmpsl lret xor ret xor jnp rcrb out ljmp test push mov rorb movsl add inc lret (bad) popf es lods test push movsl scas loop hlt imul cmc pop sbb or fiadd sti xchg mov insb add insb push aas das notl insb repz dec xchg pop push xchg jnp xchg fdivrl jp pop lret fistl xchg int3 xor add push sbb aam pop clc cli pop or frstor mov fcomps mov mov sub cmp cs std mov sbbb mov xchg testb mov inc mov mov stc jp scas push in sub sbb mov xor (bad) popf test ljmp inc popf shrl aaa sub or popa pop notb test dec adc jl (bad) (bad) or fild inc or (bad) xor mov mov sbb test cmpsb pop inc jmp das add or popf jne (bad) adc xchg fcmovne sub je push push cmp cmpsb fbstp sub xchg mov adc rcrl aad cmp notl adcl jne jge test push faddl test lcall inc (bad) into icebp mov cmc in mov sub mov std and push push int shl dec sbb mov or dec xchg pop insl mov outsb mov scas test and ss lods xlat (bad) mov inc rcrl loopne push icebp mov push mov sub aaa notl insl int push jbe popf sbb out xor repnz fcmovnu popa movl test ret repnz adc push sbb cmp adc or test rorl in mov jl xchg push (bad) and cmc mov cld mov jbe inc or jns icebp sub fistp (bad) mov and cli cmpb sub xchg in (bad) lock iret xchg xchg daa cmpsl cmp inc sar mov jge cwtl or xchg jg jae outsb cwtl dec (bad) sub cmp gs movsl ja pop push lods push or fmull and repnz icebp xchg mov adc lods xchg adc jecxz inc xchg mov call xor aad inc cmpsb add jle mov cwtl int cmp mov out ds sub out flds xchg jg xchg out es dec inc fcoml sub enter sbb ret outsb dec jns push or mov fisubr add inc xchg push jge loop inc or pusha mov test inc in jecxz (bad) sub lea icebp icebp mov push aam xlat movsl mov imul adc xor ja arpl mov mov leave dec cmpsl xor dec inc nop adc sub fidivr enter jno dec cmc sbb mov push mov movsl fsubs jb xchg cltd dec mov mov (bad) sbb xchg push push dec add dec orl add mov xor and lods mov out jbe pop mov test rcl sub lea lcall adc lds int3 hlt mov mov jg push aaa jge fidivr js sbb aaa arpl xchg mov mov inc ret in fidiv sub loop jo les and mov xor nop cmp jnp pop inc add leave xchg add popa fwait (bad) in inc jp scas or jns mov das push (bad) mov pop enter imul stc inc mov xchg leave dec sub js ds adc rcrl and call xor mov inc (bad) mov pushf mov mov addr16 push lods inc bound sahf loop mov or push dec sbb fdivr xor insb xor pushf in dec (bad) rorb (bad) add or jo rclb inc fxch mov nop out mov imul push enter or and dec jge sub xor inc (bad) popf and jne bound loop push test lods mov enter dec clc push xchg nop mov mov rorl mov aad dec pop (bad) mov xor jecxz pop push in ret sarb sahf jb add add pop dec push (bad) out or into fdivp mov mov icebp (bad) bound aam jno lock out inc lds adc or sbb mov jg test and out push adc mov jmp fidivr mov jb cmpsb add inc test in bound gs dec (bad) insb jno ficom jg xchg xchg dec mov sub in dec sub push ret sub sti or add repnz cmp and add jp mov jo sub loopne or rol arpl sahf les sarb adc icebp arpl cwtl inc jmp mov imul pop push icebp jg add sub sub sbb or aaa pop xchg popf sub mov add test or mov (bad) lods lret add (bad) repz adc das pop mov aaa xor mov adc inc nop sub mov fldl pop (bad) push xchg xchg push xchg push in negb sub js dec mov into shlb das push push pop test ljmp xor fmul xor dec outsl pop cs dec push icebp pop xchg adc lods adc rcll enter cmp and dec mov push popf dec (bad) fidivl (bad) inc loope lret jbe lcall mov imul pushf or cmp repnz shll test adc bnd rorl stc (bad) mov idivb lret cmpsl addr16 data16 gs aam out fs in mov xor or xor dec lret popa xchg (bad) mov cmp fs push xchg xchg mov xchg mull xlat inc movl fidivl adc mov jnp decl cli hlt scas in push xor notb push pop mov les stc pusha and lahf inc (bad) sbb pop movsb (bad) mov or loope addr16 mov call cmp sbb xchg sub push jg inc rolb xchg mov out jg ret jno mov iret outsb hlt and lret subb cmp (bad) std enter xchg (bad) out loope jmp sbb mov or or (bad) xor fiaddl std sbb mov lret adc fistpll int mov (bad) (bad) std fcoms popf dec pop (bad) mov dec sbb push pop inc add call or jne movsb fcoms std and dec adc mov mov cmp jnp ljmp sbb push (bad) fnsave (bad) mov xor sub je or jae jmp daa cli push sub into add and int mov lret lods imulb mov and iret xchg dec mov sub mov or sti ret mov fmul movsb jmp das push push ret (bad) mov shl clc xchg mov adcl mov stos cmp add out push movsl mov ja imul cmc stc cs mov sub std fwait sahf sbb fldcw (bad) fidivr mov jg and test and add mov icebp sarb in adc lock std rorl aam sbb js xchg pop inc popa mov dec fldt pop cmp adc add stos xchg push jle inc mov inc jo fsubr enter add push loope int pushl mov mov mov inc cmc cmp ret sahf test xchg mov mov test (bad) and into adc addr16 dec fwait mov insl in mov or pop xchg std push addr16 jp lret lahf jo mov addr16 cmp sbb or cwtl (bad) test stos jg sbb int3 jl mov ror aam insb push mov into mov push shll xchg sub (bad) jb test push dec inc inc adc cmpsl incb mov out fldenv inc xchg inc sub fadds mov cmpsb mov or sbb and mov (bad) (bad) or cmp sti inc push jle (bad) xchg pop repz xor sbb repz movsl popa push cmpsl outsb add xor gs dec fs loop jnp inc lret push mov mov rcrl repz outsb push (bad) cmp fs ja mov dec data16 sbb popf dec cmp mov bound out movsb cltd add inc mov jne leave aas inc jbe dec mov or faddl cwtl in (bad) mov int3 and push push mov push and mov xor mov addb cmp (bad) mov aad jno mov fdivrl sub xchg adc test sub mov cmp int loopne xor stc mov jp out sub cmp cmp in dec divb loop lcall or shr cs (bad) xor inc js test and push push popa sbb pop loop mov add or add out sbb loopne addl push cmp lock addl push cmp lock add aas jge out jp outsb sub add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoms add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push and (bad) lock rcr xor xchg ret je dec aaa shll into les cmpsb int aaa cmpsl out cmpsl jae cmpsl int jmp aaa push lahf jmp sti add (bad) fild (bad) je mov inc fidivr jmp xchg add cltd adc jge dec or sarl (bad) inc cs insl push imul repz mov jb fsubrs inc leave sub incb adc test std fwait mov adc jle das adc rcr hlt arpl pop inc cmp test repnz dec pop fdivs pop xor test jp ss mov or fidivr lods ret inc push (bad) std xchg mov push pop movsl (bad) cli lods lahf pop cmp sub out cmp outsb xchg fs add inc fdivl js cmpsb cmp into arpl xor pop mov fsubrs add icebp xorl or xchg pop or insl mov cmp mov dec arpl cmp add mov frstor clc loopne jno iret (bad) insl mov bound xadd ljmp imul inc dec es (bad) lock gs cli mov mov cld out adc in loope sbb or js loopne or adc mov pop push bound stos ljmp rorl cmpsb mov add dec push or sbb mov mov pop out lret xchg pop mov sbb jb rorb pop imul bound test jne sahf arpl fdivl pop push xor fwait push lods scas jmp mov dec cmp mov fdivrl jo pushf add sub cmpsb stos xchg mov xor dec pop sti loop stos test sbb push and aas insl push into dec pop mov xor popf and sbb lret mov mov pop loop cmp xchg mov inc pop testl xor xchg lret mov or lret push lds std and mov and stos jns xchg inc push mov (bad) daa xor js test mov arpl inc imul (bad) lock mov int3 mov ds mov dec xchg (bad) adc pop adc sti and jns sub xchg movsb push shll sbb dec aam es push test outsl in jno inc mov push jns mov popa sbb lret sbb lods leave enter xor cmp and into aad lea (bad) cmc mov test (bad) mov cmc test fild or adc jge sbb cmp iret pop xor mov jns (bad) call sub icebp add insb das jo or sbb mov mov mov popa mov xchg (bad) jmp pop test fbstp lahf jl push mov mov and insl jno (bad) repz dec sub fisttpll (bad) cmp lea aaa mov or xorl mov push (bad) inc popf cmp test call call stc shlb loope test xchg into cmp adc pop mov sahf aam cmp pop or or cmp xor (bad) xchg sbb mov imul sub call (bad) movsl sbb fidivr test cmpsl xchg push cmc sbb mov jnp jbe xchg xor jbe cs pop and lret lret and testb xchg add cli scas es cmp cmp out push inc clc jne imul mov push inc rcrb or daa pop cmp enter sub je pop mov loope mov mov jae jecxz mov mov mov inc in mov mov pop out sub sbb and lock mov mov add sub xchg sbb add jg fucom dec pop lds jg or cmc std xor xlat lea add jecxz push aas push stc (bad) xor mov cmc mov dec cmp les add push ds insb iret adc scas mov adc add push arpl rorl cmp pop cmp movsb les js mov aas pop ja fstps rolb mov daa mov pop adcl push or mov and jne out adc mov enter fstpt outsl fistp stc sbb mov dec fs adc push xchg enter fistp sub pop push insb data16 (bad) sbb aam mov scas mov pushf add imul mov adc fstpl sahf inc pop xor xlat inc mov xor shld mov pop jnp dec fwait adc loopne mov imul loopne,pt mov push cmpsl (bad) lods sub daa cmp ja das gs xchg fisub orl mov cs inc call (bad) stc add sub outsl mov aam push dec push (bad) mov fistl mov imulb push push fsubl popf (bad) or jae jbe div (bad) or roll add pop (bad) test movsb cmpsl add pop outsl mov int adc jmp frstor xor (bad) popa ja pop (bad) in icebp cmp inc out adc mov push ror shll sub cmp pop sbb out data16 pushf cmp ret (bad) sbb adc fstl fimul pop xor hlt jg (bad) out roll and jecxz sti and mov adc imul into hlt mov push sub xlat sbb push adc loop push stos je shrb dec gs adc loope mov scas int3 rcrl scas mov and sbb fidivl fucomip pop add jmp cmp mov adc das or jae je xor push push leave pop out mov dec cmp inc push cltd mov aaa loop and jmp es std or int add ds pop (bad) test sub test cmp xchg or sub push cwtl xchg in ret fcoms aas jg add xor xor jo inc xchg push jae out pop sbb bound das data16 jno and push xchg je loopne in or jns lcall scas loopne in jp sub notl lahf mov jb jb gs inc hlt sub push ror xchg pop iret pop and insb fimull popa call mov dec out sti and xor adc cmp test jmp or cmp out pop push adc clc data16 popf aas mov mov faddl je add cmp popa sar sbb sub inc in dec xchg add push mov sti std jbe sub lock mov movsb add cld xor js sub cld add mov lcall (bad) pop fcoml jno std popa adc mov dec sti push cmp push arpl and sbb cmpsl inc jns xor arpl enter dec xor pop xor jge dec es jne xor (bad) mov jg js push (bad) xor mov cltd mov inc pop nopl pop mov pop in cld adc add (bad) out fmull add adc rcll outsb fnstsw fdivp mov dec imulb inc push sub (bad) xchg mov mov ljmp pop push add jmp sti repnz xor mov cmp nop pop push cmp pop jge xchg add and ja mov loope cwtl or adc lret adc (bad) cli cmp jg rol cmpsl test fdivrl into adc ja push and icebp (bad) int3 ljmp aas out xchg jmp jmp sbb add mov test xchg imul in push jmp mov mov adc jmp test push fisubl or lcall adc je mov (bad) movsb iret sub outsl mov inc or hlt xor jbe movsl sbb std jp xchg or sbb add imul dec insb sbb xchg sub jecxz jecxz aad ljmp inc cmp cmp (bad) cwtl jge roll mov jge aaa imul mov inc mov mov (bad) mov cs jge andl lcall popf pop js ja jge (bad) lods pop shrb cmp rclb xchg addr16 pop adc pop (bad) (bad) pop dec pushf xchg pop dec (bad) lret stos rorl iret and and mov dec pop int add ret xchg cwtl pop xor insb cmp inc daa test inc or js mov imul cmp sbb push jp push fdivr push jecxz jnp (bad) dec jno jle mov scas fldl pop sti add subl mov fldl and in dec dec push insb mov lahf mov ret sahf xchg mov dec push dec sahf xchg sbb sub ret pop scas cmp push or cli daa fidiv and ret stos jecxz xchg add stos je push push jne pop (bad) xor mov ret cmp pop jno jo fincstp fsubr pop inc mov mov mov stc mov rolb adc push sbb frstpm(287 ds pop (bad) push shlb clc inc jns fwait lret sub xchg xchg pop dec rcrl and pop mov sbb mov or ss sub mov sarb in pop mov movsl push cmp int3 jo jnp outsl mov cld test add sarl (bad) les (bad) fistl inc dec insb mov sub and cmp cmp scas movsb cmpsb stos xor imul mov push inc out clc ficoml iret cmp cmp movsl arpl outsb fidivrl ljmp sbb repz repz (bad) outsb out nop nop outsl sahf dec inc jno cmp jae push pop xor mov mov xlat pop insb fs pop out mov (bad) std pushf mov outsb std iret pop fnstsw push test pop mov xchg push sti sbb lds mov pop jge neg push test mov cmp pop andl and cmp adc sub test ljmp test fist push jecxz fcmovbe cmpsb clc (bad) or or das (bad) push jg sbb mov jb inc neg push push call in or xchg push cli or mov xchg dec lcall dec lret je sbb add inc fmul mov dec test mov mov lods shrl push mov mov sbb dec imul pusha in out pop push (bad) cli lea out (bad) push cmp sbb cmpsb push sub lret cli rorb adc or pop dec adc sub pop lds outsb (bad) movsb add gs fsubs loope inc mov xchg pop ret mov sahf repnz paddq and jmp out jl test inc dec ficom es mov mov adc mov mov sbb aaa loop sub sbb lret mov ret push adc loopne bound jmp add and std outsb sbb jno dec cmp (bad) shll popa lock jge cli adc lods jle pop out gs call sub xchg pop and out loope mov fwait cmpsb adc jae mov dec iret sti lods dec iret adc mov add mov xor hlt fsub pop sbb and or outsl lods jns mov gs (bad) outsb jns jno cmc fimull jmp push xchg push sub mov sbb int sub clc nop cmpsl jg mov imul aam pop mov add cmc pmuludq iret arpl sub mov in inc jne sbb xchg (bad) add jmp cwtl dec push or add dec adc aam mov sub aad test sbb mov hlt cmp fldenv add rcll pop test mov push loop and das aas push push jl shlb mov pand pop mov and and stos mov cmp push adc repnz push push mov mov aas shr shll mov loop out inc leave adc xorl jb and aaa out and in cmp xor mov xor insl xchg lahf paddd lods jl mov adc push xchg mov addr16 enter pop xlat dec mov push mul add jmp sbb sbb cli mov dec sub jnp orl sbb mov and out fwait jnp inc (bad) in xchg adc mov sub int es out jecxz push pop mov mov rcll ret idiv dec in (bad) jge adc (bad) icebp jae sti in in cs push mov push pop jl pop cmp mov mov test std xor jnp (bad) mov cmp cwtl add mov jnp add shll xchg push inc mov repz mov fcmovnu pop xor (bad) cwtl repnz cld nop jo test mov mov daa sti xchg cmp mov and out lea pop mov (bad) roll std aam imul or popa (bad) int3 test mov push jl lock sub pop lods imul xstore-rng cmpsl push mov test out and test jne xor mov enter movsl out xchg pop lea pop xor outsl jp aas xchg pop test pushf dec inc sbb jle or push idivl pop stos ss (bad) mov jae push push movsl inc mov inc leave (bad) mov fwait lods sbb jbe aam adc pop into outsl adc or fildll xchg call gs cmp lock pop mov jns aaa push std pop push xchg xlat dec jl mov lcall push sub xchg cmp mov adc add xor std dec in repnz pop lea xor jnp sbb lea sub inc jne cmp stos jbe sub inc rorb scas fisttpll jbe es cmp rcr dec xchg jb mov (bad) test dec ret or jmp insb jnp loopne sub jg rorb js loop mov das pop mov mov cmp cmp xchg pop in je lea dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push aas fmull rolb lahf mov xchg fstp cmp jae sbb jne (bad) dec xor fst xchg insb jp iret out faddp jecxz xor clc pop js roll pop out xchg pusha clc dec jbe popf push (bad) mov push fmuls and fxch adc pusha mov cwtl test dec and mov leave pushf cwtl push cmc jecxz jno mov xrelease xor inc (bad) cs adcb mov push test (bad) push sbb ret repz lock or jmp mov movsl leave (bad) pop cs push xchg pop inc fistpll js stos mov xor repnz loop aaa cmp adc in negl push push test and in pop pop outsb add aam das imul sub adc mov dec test jge icebp or xor movsl sbbl cwtl shrb iret xorl xchg inc mov mov mov mov xchg int ds ret divb testl push mov pop xor outsb iret (bad) xor dec xchg fisubr pop add pop fs sbb mov sub (bad) das lods pop inc push adc das sbb shrl dec push cmc out inc adc add dec clc nop scas loope pushl ret mov (bad) outsb cmp mov mov mov mov xchg (bad) lods jl (bad) hlt jecxz fdivs xor sbb mov or adc or (bad) icebp negl pop (bad) aaa mov insb jg jecxz inc insl adc icebp sbb jmp push aad and pop adc movsl mov or pop shrl cmc mov nop add jl mov xchg js dec movsl cmp outsb movsl mov mov dec mov lds xchg pop jae fincstp pop mov and add fisttpll daa sub mov push insb sbb aam pop int faddp fmul xchg out sub out (bad) sub inc mov (bad) fisttp push pop outsb (bad) in into and inc repnz or add js sub mov and and push jbe stos mov (bad) repz sub lea fimul fwait imul out jnp lea (bad) aad mov stos mulb nop mov xchg xchg notb push std aam enter out mov dec test rcr mov mov test jp and js and or push cmp outsb mov mov mov enter sbb or mov cmp lods push js jb lret jbe mov stos jecxz call (bad) out xchg imul dec sbbl stc mov fmull xchg cmpsl mov (bad) fldt fcom fistpl pushl (bad) jb sub (bad) jg scas jge push mov loop aam out xchg jmp int3 cld or daa adc out mov mov inc mov push push ss pop fstpl pop inc rorb jmp gs je lea or dec decl lods rcrl insb int3 pushf lret int3 xlat dec xchg iret imul std clc sahf push in jne xor sbb fstpt add dec or aaa es adc mov ror and push pop fwait ljmp fisubr push adc sbb mov fbld cmpsb (bad) call xor std mov (bad) mov ret idivl ja arpl fwait dec inc jl,pt xchg fwait pop adc sub shl mov imul add jno lods (bad) in les fbld pop lds xor or mull test sti ja sbbl dec jb mov sub out and aaa pop cmp sahf hlt jnp add xchg (bad) push les mov jae loopne negb out sub push mov hlt scas sub sub and cmp jno adc xor fnsave data16 pop in pop stos test lods fistpll movsb add (bad) fistpll jge and push pop fdivp (bad) xor and movsb xlat cmpsb dec sahf mov xor and ret pop mov and aaa imul je inc lods mov xor rclb psubq jb xor mov popa push or xlat dec rcll mov xor and lret xor std mov mov jns test int or lock scas xor pop xchg lret sub mov fsubrs xchg mov pop outsl pop add jne mov dec dec repnz or sahf scas ljmp insb es mov push push into xor push faddl xor in jno cwtl cmp cld dec pop jmp call ficompl add dec and push mov scas push fnstsw jae fstpl outsb insb push push sub pop ds fsts clc js in dec (bad) jmp jne mov adc pop jne int insl xchg adc enter add xor mov mov push (bad) mov pop push adc adc and and out adc jo leave fiaddl cli pop xor pop xlat int aaa (bad) xor lods mov fwait sbb insl sub dec adc lock pop jne or fdivrl nop jg aam jg lock jno insb pushf pop es mov iret and stos icebp out addl sub fldt sahf dec lock mov in movsl cmpsb mov in inc sub inc (bad) loop out mov jmp mov jle dec mov stos sbb pop xchg iret adc dec jns or jle je cmp inc dec jmp pop push stos jl inc push xchg push fdivr loop mov and sub push mov jmp cmp popa lret ja add ljmp out ss inc cmpsl mov sbb lret js (bad) mov lcall shrl shl or mov inc mov idiv cld (bad) ds push nop clts sub nop imul jb xchg push in out in mov xchg fwait repz jne adc xchg aad push and es jg loope bound mov inc pop cmc cmpsb nop into dec add iret push push sbb lret fwait dec xlat out inc push jmp pop js sbb push movsl ja test lret sar pop scas xor sbb lock imull dec inc js out inc cmp int loope xlat inc push lds call add and pop or out std insb (bad) into xchg mov lahf es scas inc sub icebp lcall xor sub cli mov rep test sub test xorl xchg cmp lds add ret mov in cmp jmp jg xchg aam mov hlt inc push outsl lret dec bound cmp pop daa xlat pop push xchg lods sbb data16 jns add clc jmp cmp in push add jnp out mov mov jno push clc add lret out (bad) jae cltd in xor sub into pushl push jp xchg lock mov sub sub sbb jle pusha dec inc testb fucom mov adc jmp cmp cmpsb add cs mul jmp and and inc xchg lock mov clc pop or out or add icebp mov dec ret movsl (bad) sar test pusha or (bad) cld sbb cmp jge jmp mov call xchg ljmp and aam enter aaa add or ljmp hlt (bad) sbb push in rorl and shr call imul loopne xchg insl das jp cmp mov shll jg (bad) add adc xor xor iret fistpl lods inc pop outsb dec pop mov cvtpi2ps fsubrs mov outsb stos and outsb push test push (bad) mov mov add insb (bad) push das jge push xor aam and xlat lret push pusha push mov push repz add fimull mov mov fwait add xor in or sub mov js lods and aam (bad) pop pop mov in test mov add pop sbb popa shr cmovo add xor add cmpsl push call add movsb js inc cmpsb push gs fstps sub sti pushf les aas cld jne fiaddl in or in movsb ja or mov or sbb dec (bad) xor inc (bad) lock mov xor jg test inc cmpsl dec add add jg cmpsb mov data16 and popf push jnp loope jle stos xchg mov cmpsl out in out mov jbe sbb (bad) jecxz inc int adc mov sbb sub call fmull add jge xchg dec shlb mov mov and jge ljmp jp,pn jbe jl fistp es mov out andl adc cmpsl loope mov dec subb and pop add pop xor shrb popf jp cmp lock aam outsl out push mov pop in sbb pusha in int jnp push jl mov outsb mov (bad) jb push (bad) (bad) sarb push scas push adc or xor jg xlat shll fwait jge xor imul push (bad) enter push xor mov dec hlt add cli add or ds push push ret (bad) fsubr adc cmp ret fs pop inc repz daa cmp fdivr adc incb int3 jge inc aas pop or rcll xchg lods adc push stos xchg lods jne pop daa nop stc jns cs cwtl test cmc lret jnp push (bad) pop mov roll cli dec dec cmpsb sti and sub adc or jle (bad) loope pop add pop daa (bad) pop jbe fistpl add cvtpi2ps adc dec hlt mov stc sub mov jge aad mov jmpw pushf adc jno push xor stc pop pop push es jo and pop mov mov ljmp mov mov pushf dec sarl inc lods add add gs mov mov stos jge push push cmp sbb in and xchg cmp cmp dec movsl decb inc or push subb ret mov and mov andl mov clc das cmp xrelease shlb rcll fsubrs add mov test loop xchg rolb int3 mov fsincos mov dec mov add push out shll add test shr mov mov or rorl xlat clc lock stos push sbb mov mov outsb or mov pop data16 dec scas loope jno icebp pop sbb aaa push xor lods adc mull xchg incb cmpsb int3 out idivb (bad) int xchg mov scas push hlt dec jns mov push inc enter in cmp sbb pop mov dec xchg in pop pop push mov (bad) cmc ds ds enter cld sahf popf call mov lods add pop fsts lsl sub xchg ret cmp lock nop sbb jmp sbb push mov ljmp xor push inc fwait cmpsl inc stos test jo test jo stos iret das mov sub in add ss (bad) mov mov sub jbe ffreep sbb jne mov pop (bad) push (bad) push mov pop cmp cmpsl clc jnp xchg fsubrl out mov leave adc push xor sbb mov xchg sub and inc (bad) xchg pusha inc cmpsl sub test jne mov insl cltd lds cltd adc push mov (bad) xchg add imul adc cmp sbb and xchg mov mov movsb popa repnz mov push push adc mov cmp mov (bad) loope in lods idivb xchg fisubl xor leave jae hlt nop and pop out cmp bound pusha inc and cld rorb cmpsl pop cmc jecxz lods and sub fdivs cmp mov sub jae xchg pop push add sub cmp fistl adcl xchg repz or std nop popf cmp cmpsl sub push pop sti mov scas jg int3 sub test ja and add pop xchg pop mov cltd repz inc jae inc pop cmp xchg sbb testb (bad) fiadd out fcomi aad xchg cmpsl iret and jno xchg pop repz popf rcll sbb lcall pop lahf pushf jnp mov repnz jae pop std scas stos mov pop xchg jl adc loop ljmp (bad) adc daa pop fidivrl inc scas mov xor insb into les je icebp lods xor dec push xor loopne les (bad) test or movsw mov jb into or add dec insb inc cmp xor or popf popa stc in mov leave sub adcl fistpl pushf xchg addl push subl lahf and or inc mov or (bad) cltd push sbb jmp jg pop out stos xor sub mov shll sub stc jno outsl or jae mov movsw jmp inc and xorl shlb jns mov jno mov (bad) in pop out movsl repnz fstps sti clc (bad) sbb mov jnp or push scas out enter cmp inc pushf pop cli rorl adc and add jne jbe push addr16 adc mov call arpl std fwait dec pop xchg push cmpsb push xor cmp sub out fstl add scas ret pop sub mov mov (bad) mov lock pop mov int icebp push push scas roll inc int push loop scas or pop sbb pop xor insb adc xor mov push xchg sub insb adc or das fidivrl lcall push jmp icebp and imul and cld popa mov mov aad add push or jns in xchg daa dec sahf cmp repnz xchg daa dec sahf cmp incl add pop mov jne cwtl add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ficoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas adc rolb ret sbb into dec into dec idivb and popf mov sub push inc mov cltd cmp idivl flds (bad) jmp sbb add or pop loope test lret fstl mov inc ss mov inc stos jge push fs jle aam push fidivrl dec daa xchg lret cmp push dec fs idiv mov mov mov push jo or fcompl insb cwtl sub out es lcall xchg insb int adcb push add mov fnstcw or mov push lds test in mov int mov add inc aad outsl jo fdivrs (bad) adc lahf (bad) inc out push xchg push xlat add push insb jmp addb (bad) lret cwtl gs sarl test dec adc insl or cmp ret insb dec iret sbb popf pop adc mov jae lods ficompl in mov negl xor (bad) in cmpsb jge dec sahf or movb sub push cmc das ret into sahf add lret cmpsb jmp and mov (bad) aad pushf and repnz push cmp popf rcrb cld std inc mov data16 pop stos xlat nop (bad) mov sahf adc dec nop cmp arpl (bad) js fimull ds pop or cmp iret cmpsl imul dec in ds inc jecxz scas sub mov lods sarl out lahf cld nop xchg fs and iret cmc imul lcall mov mov jo (bad) mov sarb in pop test (bad) das inc loopne (bad) jne stos sbb (bad) cmc mov sub lds rcrl adc mov fnstenv adc pop mov aaa xchg (bad) cmpsb xchg das stos and pop cld or int into cmp loope (bad) mov mov stos lcall nop js cmp sbb mov add jae mov and fcmovbe add mov jbe cltd mov hlt data16 notl int rcr incb inc arpl stos clc ret jbe pushf pushf mov pop lret (bad) in mov cli daa mov xchg in iret or sub mov pop pop call lock cld (bad) aad fcomps cmp inc test icebp dec or push add cmc int stos adc shl cmp push dec xchg (bad) lret and jno sbb out mov or mov fsts mov ja (bad) movsl insl push test mov jmp cmp mov mov imul cs adc (bad) jmp aas sbb test and imul sbbl jbe sbb or leave xchg outsl pop repnz pushf les dec and je lret xor sbb in sarb roll push cs jo mov add shr sarl xchg loop je loopne sbb adc ret xchg in mov lods lahf or xchg mov stc and adc jl test or push je (bad) push jp lods jmp push push xor inc sbb shlb mov scas daa (bad) idiv hlt neg (bad) sahf mov and sbb cmpsl pushf mov out lahf loop mov dec jo popf dec test test cmp mov das int cld xor movsb stos scas test test mov mov xor jg subl xchg xchg xchg cmp pop andl leave mov in (bad) arpl ret hlt outsb adc arpl imul push arpl mov imul arpl leave inc lods in rorl outsl je push stos xchg les jbe out cmp fwait xor jl add jl mov lret or push and mov pop (bad) dec or jecxz mov jo mov sbb int jge pop sbb mov adc and jge mov jecxz push fwait je sub popf enter fbstp mov add xlat cmp and lock or add sahf cltd xor mov iret mov fisubrl sbb mov aas movsl mov fldcw cmc lcall push push adcl repz in cmc addl inc fildll mov pop fisubrl ja gs into loop data16 call inc xlat and daa pop push cwtl aad jl sbb test jae lock (bad) cmp mov add push scas insl lods cmpsb ds imul insb adc sub mov fidivl fisubr cmp lds shr add and mov in push and ffreep xchg cmp negl addr16 nop dec sub lcall gs dec xchg call es add xchg push (bad) leave jnp movsb xchg in xor mov pop movsb sbb add mov clc mov jp (bad) xchg mov sbb mulb push mov jae das cwtl mov lods out xor ret movsb call fmul mov cs stos rcr repnz fistp sub pusha repnz xchg lahf mov inc insl aaa fcomi adc test xchg loopne nop mov push xchg into xchg ficoml das xor insb push test jl xchg inc push sub (bad) push mov adc pop ja mov jnp and in xchg (bad) dec xlat push push mov cs pushf ja push insl popa jecxz dec sbb add mov inc mov cmpsb insb xor pop mov test push jge js dec mov mov rclb popa std mov mov jp push lcall les leave push xchg mov dec sbbb jge addr16 inc insl imul int3 fs inc mov je loopne jb loope cmp mov or xor push inc outsl adc orl dec lret xchg lods push es or pop fiadd jl ret scas cmpsl fsubs in mov cmpsl mov stos fwait daa sbb addr16 (bad) cs popa ficompl (bad) insb dec push add mov jb lea and xchg push inc jle lahf pop addr16 (bad) or nop (bad) enter fsubl sti and cmp mov shlb adc popf xor les hlt mov xlat mov push fnstsw movsb jbe aam adc xchg inc test aam pop pandn into (bad) ja daa inc out sbb dec push dec jae ds insl mov arpl popaw jo mov out test push scas pop ret cmp aad adc push xor std sbb push cmp test or popl add int3 sbb stc loope jmp dec rorb and pop jo mov xchg into outsl push add fst pop mov xchg inc dec insb xor daa sub xor mov jnp push pop movsb out cmp arpl lods movsl (bad) lret mov push clc cmpsl rclb cmp gs repz add pslld sti pop outsb fadd (bad) icebp mov xor movsl loop sub xor or mov and (bad) (bad) cmp es paddsb xor (bad) (bad) dec lds xchg jae inc les push dec (bad) mov (bad) dec call in add fsubs and fst jecxz xchg or jb cmp jg or jp mov call (bad) jbe jp adc jl int dec inc imul mov aaa iret jp cmp cmp sub loopne daa aaa cld rcll call cmp data16 subl mov faddp xlat inc aaa cmp rcl sarl mov xor loopne rorb leave xchg nop sub imul xchg and dec pop xor cmpsl mov data16 push outsb fstpl jns adc shrb out ja cmc sub jno addr16 and (bad) jo sbb mov xchg dec and push cmpsl bound je fidiv fsubrs pop arpl mov fs movsb (bad) imul or jno enter out lock fnsave ja jno clc xor out or fnstsw icebp fwait setb jl scas imul cmp sarb jo test xchg incb jl icebp cmp test cmp aas aam cmp fs roll inc outsb jle jge xor je lahf test (bad) push inc mov test inc cmp pop push inc in arpl into ss lds es push push sbb push fisubr rcr jno cltd adc jle enter jb pop mov lret int jnp sbb inc jecxz push xchg xchg repz dec mov jne inc adc xor ljmp popf decl lods dec pop jae sub lods fmull xchg sahf nop les (bad) xchg (bad) in sahf lock cmpsl call push mov fcomps insl xchg xchg lods jecxz test in adc mov or xchg or adc xchg je fisttpll mov pushf xchg mov pop int3 xchg push test jnp jle lcall cwtl mov mov cmp mov inc insb lods (bad) mov das and sbb ficompl cld inc xchg bound pop stc popa mov xchg arpl clc push inc loop lcall inc inc jnp pop jo jp fcmovnu (bad) mov or sub mov xlat ljmp stos in and gs stos aaa stc xor iret mov inc aaa fcmovnu inc sbb imul test jns sbb mov and icebp cltd push std out scas jecxz movsb jle cwtl sub dec repnz inc xlat aam (bad) loopne sub pop in pop mov int dec fsubr xchg mov add int3 clc in fdivrs popa mov decl gs repnz fadds pop test push scas pop test jecxz into in sbb or in dec (bad) js or iret call test pop test bound cmp lret push adc sbb (bad) aas jne out in shll fidivr cmp lea rcr cwtl inc fmul popf aam arpl pop cmpl sub loopne and cmp loop fstpl xor ret pop insl fs icebp pop dec cli lahf adc js or or adc mov dec (bad) int3 sub xor xor mov add cmp cmp in in cwtl pop outsb jno jne das int3 pop cs pop repz ljmp fnsave scas jle xchg ficomp cmp icebp mov stos fdivrl dec (bad) sbb add outsl imul aaa (bad) sbb adc sbb dec or pop sbb cmp xchg std inc nop fsubl out rorb lcall mov push mov decb pusha jne mov and lock jmp hlt mov push (bad) mov les lahf lods jb add adc cs arpl sar push adc and int (bad) mov arpl jb push pop dec xchg ljmp mov arpl pop cltd mov adc xchg aas mov adc xor in and sbb mov out pavgb add jmp lea das add jno inc and inc fmuls inc lea jne out cmc jg push jmp jge lds mov paddb or fisubrl push cli adc stc add (bad) outsb ss add pop ficoml aaa or cmp scas loopne push add cmp xor fabs in dec cmp cmp dec iret xor leave jns in (bad) dec dec lcall (bad) mov jae add daa and cli and sbb gs icebp sub xchg push daa stc lock xchg scas inc pop das mov stc add push push sub mov sub repnz sub int jno leave mov xor arpl jbe mov loope sub sub stos les jne leave rorb inc dec jecxz and pop fnstcw mov push cmp sbb imul rcll mov cli or dec fstpt leave xchg sahf into xchg mov jg rcll xlat mov dec cmpsl loopne add push int dec xchg cmp and (bad) xor sbb in mov pop out aam xor lea mov cmp pop inc stos test lea fildl pop adc add push pop xor xchg fisub mov mov adc jo stc fldenv jle jecxz xchg push lea jo sbb dec test add outsb push pop jecxz cmp les addr16 in test jle sti lret cwtl out cmp test sarl cmp in push icebp push loop xor loope mov jo int3 pusha jl xchg loop adc pop pop pop popf (bad) cmp dec movsb xchg ret popa popf (bad) cmc inc sub jg popa pusha push dec cmpsb iret or pop test sub dec stos ret cld movsb mov loopne inc fs jb jmp sbb rorb into mov sbb sub mov sbb lods ja mov inc push cmp leave cmpsl ror int xor in scas movsl push hlt dec fldt cmc sub out and clc pop outsb lcall (bad) pop push ret scas lds cmp mov mov ljmp div jp imul fidivr sub call push cmpsb test aaa lcall leave jae cmc es (bad) xor and pop out push or pop jnp add cs adc or mov push icebp mov and cmp loopne insb out sbb add fldl push mov jne xchg popf dec sbb std xchg sbb add mov out testl cmpsw jl ret fs ljmp xchg add stos add movsb paddd mov sbb xchg std and cmp or dec inc insl adc pop mov mov loope rolb cmc sub sti arpl ljmp out adcl xchg xor das lods pop mov pop xlat das sahf cmc cmp cmp inc pop add bound push les in rorl sub cmpsl idivl aad inc std insl jae adc pushf push in (bad) sti sbb test cmc push lar aaa ret inc call inc imul fnstsw jnp out fnstsw jnp (bad) incl add pop shrb aam clc ret add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fstl add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop adc mov mov cmp ja sub sbb fisttpll inc movsb movsb xchg xchg out push add mov add scas jno jge repz out add fsts loopne gs push addr16 adc mov mov mov pop fcoms cmpsb inc dec scas dec jnp pop add sub or xlat push dec stos mov sub fdivs out mov (bad) mov and ja iret add leave fcompl xor add stos push je loopne (bad) mov push inc fldenv jns fcompl jbe xchg mov jnp int in repnz xor lods sub lcall and (bad) add fsubrp out xchg pop enter mov rol (bad) dec mov nop mov addr16 std popa andl rclb cld cmpsb cmp sub lahf mov lock pushf jb push xchg mov scas xor pop out fnstenv loope dec push jno mov mov xchg icebp cwtl push sbb in jmp (bad) mov (bad) in adc ds ret pop adc aam xchg pop mov adc insb fdivl push mov mov or mov mov lods mov dec pop pushf pop repz fimull pop jo out gs jl lock xor jo and cmc add cmp lcall inc iret mov cmp cmp jecxz fist cmp xor push movsl mov mov jecxz in aaa andb inc xor lds xchg daa push (bad) lods je es adc xor jnp mov mov lds jnp insb (bad) xchg enter xchg rorl mov xor test xor push lret dec and cmpsb icebp aad scas (bad) movsl (bad) jmp sub mov mov (bad) xchg mov push lock xchg pop jle xchg loop mov xchg dec pop movsb popa gs fucom cmp mov push push cmp lcall scas (bad) or mov sbb sbb lahf jmp jge jge cmp push dec inc dec ret fwait mov jg mov add lret insb mov sbb mov cli push (bad) (bad) shlb mov js push mov or dec test (bad) out push dec cwtl mov cmpsl adc arpl mov push dec adc repz (bad) mov (bad) decl vpaddsw sub adc sub dec div lret push jno hlt outsb pop mov lahf outsb sbb sbb mov lds sbb mov mov out mov mov jp dec iret ret or rcl addl sub aaa sub outsl pop pop xchg add or mov cmpsb inc fldenv cli test sbb xlat jle lods mov sub movsb sti pusha scas inc mov inc push or or cmp sbb outsb pop jmp add cmc shl loop inc sti je lds cmc and aam mov movswl stos and test or stc (bad) jo fbld pop inc shll into dec adc push jl mov xlat mov loope or and jbe xor movsl jb out lahf and movsb jnp subb jg jo sub xor jmp or in das popl mov sti in pop sub fistpl mov jle es les adc pop push xchg mov mov mov add xchg into in out inc and jne mov movsl test fstps xchg push jl dec jns jge insl pop (bad) icebp mov notb in iret inc ds pop packsswb pop xor sbb jmp cmp std daa aam push lock ret xor enter mov adc rcll xor adc negb (bad) mov mov test (bad) fs or jp test pop xor inc adc push data16 (bad) adc imul cmpsl push xchg and vpmuludq add and (bad) sahf cltd (bad) or (bad) xor jl insb in hlt mov xor xlat xorb push push lds sbb add mov sub mov lock add mov sub or std pop push cld cmp fistp lea cmp mov loope or ficomp testb fdiv mov jo jno pushf dec or lods popf xor or cwtl aad pop mov fistpll in scas in daa dec pop ljmp loope cli (bad) bound cwtl sub dec aaa jecxz jae jno repnz adc in mov cli ds dec pop ja imul scas jge popf push add ja hlt push ret aam xchg jbe cmpsl push movsb in mov fidivrl pop test mov mov mov xlat sbb pusha dec pop (bad) fldt xlat pushf insl repz nop mov sahf inc loop pop mov fldpi xor add cmp add mov (bad) fidiv push adc push imul and adc (bad) jae hlt fisubrl in stos aaa adc jg jae scas in xchg push cs loopne xchg or add (bad) pop (bad) cmp into ja cmp jmp adc lret sti add sbb jl dec sbb lds (bad) stos das xor xor mov sub sbb scas stos and adc xchg int je js xchg pop ds push in (bad) out cmpsl and jns mov (bad) xor jmp xor push lcall lods shr or adc mov (bad) xor cmp push enter push out jmp roll mov adc cmc popf push lods push and dec lods jg out insb add adc jp test outsb mov into movsl in lea push mov cld or push add mov stos sarb bound jo (bad) stc mov in sbb xchg sub sbb jo (bad) mov jnp,pn decl scas rcr mov fwait aam stos (bad) and outsb xchg adc add jb jp test ja in adc loopne push mov (bad) push fcomps inc insb xlat out push test popa js cld xchg arpl lods adc xor jle push popf fdivrl iret dec popf pusha cmc sar push into mov aaa bndstx (bad) jbe out cmc roll add sbb or push (bad) addb jae cwtl sub cmp sbb push pand dec out and mov jle xchg mov das push test vunpckhpd xor les adc mov loope dec pop inc jmp stc ret jp dec aam popa or fcoml loopne xorb repz (bad) add mov cmp push xchg dec adc jecxz dec or dec dec imul or xor push jmp jecxz fcmovu pushf mov mov jge adc shrl jp mov push push inc mov pop dec mov (bad) mov jmp pop mov pushf test scas jne std icebp sbb fldenv int3 jo jg aad xchg outsl mov jo int3 mov and psadbw xorl mov jb sbb pop loopne mov adc lods (bad) mov out repz jne imul and sub ret subl cli pop and shrl jbe lods inc sbbl sub inc dec ja mov in (bad) or xor out inc mov pop sub jp mov jno stos mov push (bad) mov out mov dec shr inc adc pop jl mov xor sbb fnsave add (bad) cmpsb dec ret fucom push jle push push (bad) dec ljmp push pop outsb jmp or pop or fcmovbe rep and pop mov xlat or ljmp adc orl (bad) mov lahf dec fisubr jo sub sub out sarb mov aam mulb mov push adc pop push inc add inc jbe rolb sub xchg jecxz popf std xor popf jecxz jl push mov aam mov or jo cli mov (bad) jbe jbe cltd mov mov and xchg test hlt lea mov les (bad) into cmpsl leave mov cmp (bad) sahf push or outsb mov lods and into xchg sub cmp fildl inc loope xchg inc stc sbb cmp call push dec aas in xor push mov icebp cmpsl aam add inc lret outsl out sub jae cmp fcomps mov stos xchg mov iret cwtl cmp adc lahf scas test cmp sbbl js pop mov sub hlt stc imul mov push adc mov cwtl cmp sub add (bad) mov (bad) loopne mov fstps lcall mov clc dec and cld or mov fsubs addl fbld jge imul (bad) ja cmp jg mov inc xor lock sub sub add scas jnp (bad) rolb stos adc imull add ret test loopne add ja xor mov dec jge jle jne stc dec xchg js inc dec ds ret cmp test mov ret (bad) push mov jl int3 fwait je jmp insl lret test stc xor add out xor gs mov xor fdivr pop mov push inc inc xchg dec mov sbb roll cwtl push cmp adc jge mov sub icebp mov mov mov bound mov ror ljmp mov inc cmpsb push adc push jno (bad) arpl dec in jecxz push jo mov mov clc scas lea sub enter test loop add jae xchg dec and xchg push fsts ret nop xchg xchg sbb aad dec sbb jo lret mov dec ljmp fnstcw xchg (bad) fldenv nopl aas in mov pop and dec mov notl popf aaa in xlat mov dec jl dec sbb cld stc jns sti xchg fisttpll inc pop xor push xor imulb adc clc sub sub jb dec jnp xor mov cmpsb lock cmp pop push cmp rclb or jns pushf nop addr16 movsl fdivrl rorb push imul xchg xchg ret in push sbb (bad) loopne sub loope lret fild lret or pop xchg outsl ret sub cs dec outsl test (bad) fnsave sbb dec in jge out imul mov push nop inc jmp pop dec sub insl jp sub ror jne inc mov pop sub dec daa je xor or add xor pop test push cld fistpll sub inc fdivrl xor stos fstpt inc push icebp xor xor jge cli xchg fild or gs inc in loopne cmc mov outsb shlb int dec xchg sbb lcall into sbb lret and xchg arpl mov cmp or sbb or hlt mov sub jne lods inc sub cmp pop outsl mov stos inc lea scas jecxz cmp sbb les test scas mov arpl mov sub iret fsubs xchg sbb add xchg pop or mov dec popf fisttpl cmp and xor sahf clc repnz popf rclb ror insl jb pop push ss (bad) xor ret cmp in inc fadd cmp mov pop cmp or mov shll and fnstcw pop jae repnz rclb push xchg cli jle insl jl pop cmpsb jg xchg push bound dec fisubr lret cmp (bad) out jae push sbbl jae aaa js arpl pop jmp inc loope stos cli cltd clc sub cmp jg js push outsl aam repnz push loop mov fwait pop jl lret rorb mov aaa in (bad) (bad) out outsb mov mov arpl sbb imul popf movl pop xor stos mov cmp xor daa jg mov out mov test adc aaa pop (bad) push loopne (bad) repz mov push mov push nop jle dec (bad) sub ret xchg popf stc insl mov cmp (bad) sub mov test jp adc repnz test pop aam cmpsl jle push dec cmp (bad) fistpl mov fldcw data16 dec sahf sbb pop push mov and aas js in (bad) mov mov inc test mov mov xor pop and dec pop daa jbe pop fdivs fnstsw dec mov adc sub pop mov fs daa fdivp imul es xlat or imul mov jb add data16 jb add xor jne movsl clc push mov aaa scas dec pop and cltd xor cmp popf imul adc push (bad) xchg das dec pop or inc je xchg bound lcall dec outsb arpl movsl in stos push mov jae fidivr shlb or popf push mov (bad) or fucomp sub sbb sbb imul jecxz (bad) xor inc mov xor cmc test bnd sbb shlb jo mov clc gs in (bad) aaa movsl mov mov popf inc lret sbb sbb in mov and jg mov outsb cs lea or int push loope dec iret pop daa fdivs cmpsl psrlw push xchg pop mov xor push (bad) xlat pop mov and testl test or mov inc sub pop mov enter cmpsb pop out xchg aas inc cmp inc inc mov xchg loopne ret inc sbb loope mov mov test xor dec add pop mov add sub add shlb idivl xor (bad) in bnd sbb mov push dec dec jno jge imul stos push add imul sub cmp jne andl jmp mov jne pop sbb sbb mov push jns movsb xchg lods cmp push jne loopne popa rorb pop mov dec (bad) mov popl (bad) fisttpll adc lret sub out cli shll pop xor and (bad) in xchg js push insb or jmp cli into nop and inc unpckhps mov inc mov cmp call push cmp mov incl add (bad) add call dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb sar xchg fnop lcall insl loop fstp fst jge mov je les xor cmp cmpsb dec xor cld jle mov lahf xlat pop add cmp cld jg fcmovnb cmp fistpl fistpl clc inc adc push sahf push aad pop jo aam push pop jg dec and ss bnd sbb jge scas push in push mov or test adc pop (bad) add mov inc mov shll add mov mov jne fdivrl mov or and pop loope mov and push jg aam pop aad aaa xchg fdivr sub push dec push mov mov aaa sub cmpsl aad cmp jo rcl jl outsb out cld push jne into dec mov push xor stc jl ss out enter lcall (bad) lea ljmp mov mov mov pop or push fnstsw xchg push fisttp icebp ss xor test mov cmc cmc mov sub shll adc jg dec cmp testl enter testl dec fnop sar insb ret mov negl outsl mov inc mov xlat cmp xor push sub aaa xor fucomp hlt cmc imul fsubrs pop js sbb xor (bad) lds cmpsl fild sar jg inc add xchg cmp mov mov in xchg lcall jns (bad) lods sbb dec out ds dec sahf frstor bound inc sbb pop mov fcmovnu pusha add fwait sub mov iret cmpsl mov aas scas in sar sbb dec popa (bad) aas sbb fwait (bad) xor imul loopne outsl fnstsw fldcw (bad) jp push lret call xchg sahf test dec (bad) jae int3 arpl ret int push aaa ss test mov (bad) lahf and enter jbe push pop mov imul xchg jo out or xor add or insb faddl pop mov mov daa push clc sub mov fs adc adc mov xchg and lods cmp aaa push lret push fildl mov popf test pop fistl adc jmp mov and or add (bad) push jp cmpsb sahf mov loop mov sbb movsl loope nop dec push ds addb inc add les pop and sbb xor pushf dec add mov fsubrs add or sub push sbb pop (bad) repnz adc lods and xchg mov and inc mov icebp fdivl (bad) inc fisttp insl mov mov and jmp (bad) pop push out aas or push push imul leave loop pop imul xlat sbb shlb mov sahf in jle mov add mov enter cwtl mov test mov test jmp lea push xor mov test std cld xor jmp add dec (bad) dec and cli sub inc jle (bad) lods shll push (bad) out sarb jns sub and and adc outsl loopne push sti cld mov scas xor std xor push mov jge or xor imul inc fstpt lea add out push mov sti sbb sbb cmp cltd lret out mov rorl inc lods sbb ret iret pop dec mov xchg fs movsl leave mov dec inc sub xchg mov (bad) sti mov fdivrl mov dec in xor jp and pushf xor or (bad) xlat rorb adc and sub or stos mov std adc push xor loopne sahf aas jmp push add cltd mov out out movsb data16 sub jmp hlt push rcl jo not mov push cmc fs sub inc fnstcw call mov in add add xor inc stos sti jns sub (bad) xor aad pop dec insl pop sbb cmc push and and ja mov sbb nop fwait hlt scas rorb out jp and (bad) fidivrl mov ficompl lahf clc mov test push clc jo int3 std cmpsl lret mov shr xchg sbb xorps aad mov daa mov push sub push (bad) mulb ja insl add dec gs xchg repz aaa cltd enter pop movsb inc out xchg in jl in sbb mov (bad) (bad) (bad) dec xchg imul mov in cmp test (bad) xchg insb sub pushf mov pop add mov xor sarl dec aaa mov enter test (bad) (bad) icebp dec or out addl add jne arpl jae dec xor push int3 mov xchg dec xchg aaa xchg jno aaa in mov or adc mov scas push or (bad) out add pop ljmp add push pop int cmp jno cmp sub repnz jne insl (bad) pusha out cwtl fwait shrl pop xchg xchg jge nop inc shufps test cmp scas ficomp jbe mov hlt ret cmp scas in push jns js fisubr xchg lahf inc push push cmc (bad) stos int3 sbb dec andb jmp fmul fisttpl add nop xchg mov push lret les mov push rorb (bad) jno fxtract mov cmc push into ficomp push and ljmp mov inc into mov mov xchg rorb or cmp rcrl cld add aas mov popa (bad) ret inc pop pop sete inc pop sub cmp xor add fldt insl mov pop cltd or add dec in sub xor mov mov fistpl je or clc mov sub push sbb outsb stc enter add shll cmpsb mov mov xchg fild inc push notb and push jge fucomp cmp pop jbe push in or sub mov es mov inc cwtl cwtl mov dec mov stos inc hlt aas push add cwtl minps sbb (bad) cmp hlt int xor jns jge (bad) cmp (bad) adc (bad) out out sahf test jbe imul iret xor sub (bad) sti cs ret or leave lods xlat sarl cmp mov mov bound pop loop dec pushf adc add cld mov int leavew aas clc sub push push mov dec imull fstps addr16 mov sub insb mov xchg ret push fildll (bad) (bad) push iret ja test jnp aad (bad) js sahf lcall xchg jns and push cmpsb popa ret loop xor rorb comiss stc outsl mov (bad) imul jbe jae cmpsb or dec lea jmp dec mov push imul fsubr insb ret aaa movsl popa jmp leave test xchg pop mov adc mov xlat orl jnp,pt xchg jmp mov pop or (bad) cmp pusha in sub lds sbb sub mov ja lret loop inc arpl repz cli in into sbb dec jno inc addr16 enter mull lcall mov push mov or test sbb or fistl pop inc icebp daa add or adc mov pop pop test movsb in cmp add add nop or and loope xor ss orl dec leave or mov nop test rcrl lods cwtl out mov sub neg mov movsb ljmp jmp adc lahf pop aad push fsubr out push nop mov pop fisubrl shl sub lahf js push push clc inc je fldcw out mov push pop jnp mov jmp jmp jae clc dec in out pusha shll lock push push nop cmpsl xchg jae cltd pop into lods mov xor pusha int out (bad) pop jbe xor decb lahf inc or dec orb daa push jae addb and stos sbb push jae xlat daa aas mov mov mov sbb jle fmull adc pop mov movsl xchg (bad) and ret xchg inc cmp stos shrl fcmovu and lret dec icebp xchg fcoml scas and push lock xor mov fnstsw sub in inc lods pop cmc cli addr16 jno mov adc pop hlt xchg fiadd ljmp sub loopne daa adc ss lcall mov add dec insl cwtl rcrl add stos lahf adc les out xchg (bad) xlat mov les sbb iret xchg pop mov leave inc mov adc mov add pushf test and test mov dec sbb mov mov jno mov ja je bound out lahf and lret sbb insl aam out dec enter adc jno loop popf inc addr16 adcb mov xor push sbb mov ret orl mov xchg cmpsl adc sub jb dec shlb lahf mov xchg ja dec jb mov add push xchg cmp dec dec sbb rolb mov and mov dec jae or fisttp inc sbb sub push (bad) fdivrs adc push aas jp jl gs (bad) jbe ret push xor clc xlat dec es icebp inc add jo js adc push pop movsl jno or stos out add push out xchg pop (bad) push dec jmp push idivl aas nop adc xor iret outsl mov pop loop push data16 lods or div xor out jmp pminub add (bad) mov xchg hlt stc lahf lods mov sbbb jo sbbl and jg fdiv and dec dec mov (bad) imull ljmp mov pop xchg mov mov enter push xor repnz and sbb int push data16 mov and push sub popf out in cltd cmp in fnop out mov in into push xlat add lods inc in out push pop jge or cltd clc mov xor push sbb xchg rolb fistp imul adc xlat cmp fdivl pop cmp push cmp xchg or scas mov inc shld repnz pop sbb cmp jge loop ret pop nop pusha dec sti outsl and sbb in idivb xchg scas xchg dec sub cmpl xchg add xchg jo shll imulb mov ret (bad) sub jmp push int3 push inc cltd pop push cld fldln2 into dec or jle out xor inc iret insl push (bad) fidivl cltd fcmovne lods fnsave (bad) jle jecxz lcall push and imul scas or pushf call (bad) popa ret pop les pop jmp mov xor cmpsb aam dec aas (bad) or sub iret or insb test lds fcmovbe xor mov jbe mov add mov and out mov cld jbe test test or mov imul fisttpll pop dec add push imul xor rorl cmp xor push ljmp out jo mov sahf int3 mov push xchg jl loop mov arpl outsb push mov sbb add movsb clc xchg fcomi aam std stos xchg in mov js dec mov mov cltd js dec mov adc fidivl cmp dec ror jl int3 (bad) and push or popa gs popa loopnew fimul mov insl movsb jg pop pop adc dec test cs out fs mov fisttpll add sub inc fmuls enter cmpsb std das xchg insb xor in mov mov or push jne adc lahf inc sbb int3 testb mov popa add leave fisubr dec cmpsl das ret xlat and cmp inc out popa push stos and imul mov fadd data16 adc aaa jne jo push push (bad) dec mov bound mov mov icebp into test adc fs rclb mov sbb in insl inc rolb imul push rcll addr16 sub lahf cmp mov imul mov adc cmpsl push push pushf mov lods lret outsl and sbb jbe and imulb bound gs pop outsb mov icebp or sub xchg repnz pusha loope xor cli ds and aam and insb inc adc fs ss fwait xor aam xchg insl xchg cwtl lea or xchg out pushf hlt fdivrl pop inc mov nop scas xor pop data16 and fimull cmp les push jle addr16 (bad) (bad) std mov ja mov mov lock fldcw cmp pop mov lods outsl sub shrl mov or mov cmpsb adc outsl stc movsl data16 lds loop inc cmp iret fs (bad) lock mov ffree jbe xchg ljmp ds rclb mov jge enter fwait das mov push xchg adc mov scas imul (bad) xor sbb ds push mov sub pop insl or insl insb aas in xchg insb mov fnsave adc movsb mov sub out sub adc (bad) pop roll je pop ficom out not cmp xchg adc test leave test jns push push aad jmp cld pop iret fstpl cmp lods lret int3 cmp outsb nop adc stc stos shlb and inc outsl in lret adc fdivr cwtl mov add in aas fisub lret xchg mov cmc js mov mov sbb ja push in push out mov neg jnp mov dec xor dec inc xor mov shlb dec dec dec jno pop xchg push mov fwait mov adc std rcll and repz xchg ret sbb std add (bad) movsl inc or xchg cmp mov ror pusha add cmc xchg and pop loope mov mov mov adc mov ljmp fcompl mov out push mov and xor fsubs movsl fsubr mov shrb xchg ret mov dec dec bound mov sti cmp pushf dec outsl jg sub push or mov add jle mov inc (bad) push cmp mov jp call sar (bad) xchg popf sub add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fstl add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push inc adc mov add nop outsb leave and inc jmp (bad) test dec (bad) dec inc (bad) aam dec mov fstp or call outsl sbb jg jg add xchg and incl xor rcrb and sahf mov movsl or mov fidivl jb xor jo negb lods mov xchg imul sti xlat js inc lcall cmp push add lret push cmp xor dec shrl xchg cwtl cs or scas in jae jae imul jmp jae add jo call jno jecxz and ja rorl xchg and movsb add js idivl mov mov lret add lret dec mov add and mov xchg mov mov fldl std cmp xchg dec nop (bad) nop mov cmc mov mov jne out inc xor pcmpgtb add mov jne mov dec aas loop icebp push push mov xor shll mov shlb xchg pop sub mov es adc push idivl movsb fcmovbe js out stos in int mov std (bad) xor jge jle inc (bad) and mov call push mov inc push daa cmp test aam movaps repnz inc adc mov jp jge add pop push cmp ds mov (bad) arpl mov scas (bad) jae xchg (bad) mov outsb idivb xor pop es and and test roll lds sub adc test mov rorb xor mov inc push mov push pop aaa cmp sub jno mov in icebp and inc sahf inc mov sbb loope repnz lods imul add aad imul pop mov mov fist ss mov sbb and imul mov in popa and lock jbe loop push aas xlat mov add inc loope movsl lahf pop xor mov lcall cmp mov mov std or pop lds and xchg sub push jae outsb dec (bad) jo les (bad) adc stos xchg cwtl fimul lock xlat lods ficoml dec mov dec jecxz pop or (bad) and xchg jns sub (bad) cmpsb (bad) not sbb cmp int3 mov in or xlat addr16 or mov push push loop mov mov inc inc mov dec xchg or lret mov push mov lods adc inc sub jle or je jbe inc xchg xchg mov fwait insl mov addr16 cmpl ret add ljmp xchg ljmp xchg push add xor test enter (bad) ret pop mov sbb sub mov (bad) aam jecxz adc pusha pop test aad mov cmpsb push mov divl xchg (bad) push outsl lahf in push jnp and ret pop and push push and std mov xchg dec loopne inc sbb push arpl dec jmp popf inc xchg stos cmp and decb outsl mov push mov or cmc xchg orb pop lahf fisubrl pop (bad) dec add pop push loope lret iret pop shrb sub outsb ja ljmp mov adc or imulb mov xor adc fs jl push push mov xchg sarl and addb aam (bad) adc inc fimul (bad) std cmp into add push (bad) loope push mov jno mov sub insb mov and pop inc shlb lods (bad) pop xchg lock icebp ja cmp lds (bad) pop insl int mov rolb aas jnp leave rclb xor or imul fwait nop out mov (bad) xor and lods fs inc movb inc push xorl mov or adc stc std outsb out jl xchg leave sbb and lahf add shll lods mov jg scas subb xchg out ret test jnp iret les mov sub ss cmc push stc in adc mov pop adc cmpsb xchg ret mov and sbb (bad) cmc lods push mov mov push xchg pusha daa mov jne dec sub aas stos xor pushf push rcrb cmpl sbb add lcall outsl ret jns mov mov adc cltd sbb sbb sub loopne (bad) pop pop bnd xchg inc fisubr dec and dec jb add imul sub jns pop dec pop sbb fidivl iret cwtl repz sarl xor pop jle ror shrb repnz pop incl mov or push mov jmp mov faddp outsb stos movsb hlt xor int xchg das dec aaa adc mov push push xor inc es jbe mov add mov mov inc (bad) (bad) jae shll repz add mov bound out xor insb outsl test pop test hlt fstpt pushf push xchg jo xchg out cmc pop xchg mov daa sub sub (bad) sub ja std and aad or xor mov ds cmp arpl pop movsb (bad) jb in popf mov sbb test loop int xchg aam inc mov loop add push cwtl (bad) xor lahf xchg fstl and push idiv cmp (bad) adc mov loop jno mov push push addl push ljmp mov cmp jbe fstl inc jl sbb fistp cli clc push lods and push pop dec xor mov test jb jbe outsl in sbb pop jno mov data16 inc call push (bad) mov test imul and adc pushf pop inc pop pop push test or sbb xor in mov das daa sahf loop decl add jns leave push jmp addr16 out mov les out mov movsb mov outsb fcomip popa push adc cmp mov pushl cmp shrl movsl cmpsl mov ljmp lahf lcall bound out movsb bound adc xor test in mov jbe frstor lret inc or xchg mov and in add aad xchg gs mov xchg (bad) cmpl gs movsb jg cmc out xchg dec xchg sti xor fldenv jae ja mov pop scas mov adc loope je jg,pt jge mov push sbb ja fldl repnz stos addr16 in sbb and adc arpl inc jns xchg push add lret dec jl jp out int push cmp dec in jae icebp loop cli jle mov int3 lret mov aam test pop push push mov stc scas push sub (bad) shrl iret push sbb mov fwait sbb xchg pop sbb in int3 xchg add xchg xchg (bad) inc jg inc push and (bad) jl mov push mov push pop in inc xchg (bad) xor mov inc popf push xor adc inc cmc rclb mov push pushf push pop xchg fbld lahf je lods push jge (bad) icebp push cli movsl scas push push push jae ficompl daa lods loop ret push or push sub jge ljmp jbe out pushf (bad) out xor enter pop (bad) jg xor inc arpl lcall (bad) loope or testl mov push cmp mov sbb lret xchg mov insl and sub push into jmp mov fcmovnb mov sarb cmpsb dec ja pop ret bnd loope add sbb cs jmp mov ljmp pop mov pop push or sahf mov or fwait inc in shll fcmovnb dec cmp ds mov jnp push pop (bad) adc push add gs fwait mov (bad) jo test xchg inc fbld push sbb or scas aas daa outsb clc mov hlt jp (bad) into sub push ss sub aad (bad) les mov test stos pop xchg jae das push xorb jmp lods add mov mov (bad) mov push inc or mov (bad) and cmp mov sbb mov loop jg xchg scas push xlat (bad) insl sbb fldl aaa dec pushf and js xor push aam push scas (bad) lret cwtl add insb pop leave arpl xor push jge fidivrl mov (bad) sub mov icebp arpl ret fnstcw mov pop sub jno jae xchg cli cmp pop mov add shl mov push fidivr mov test lock and jl lea pop and xor mov (bad) mov cmp dec pop pop shrb daa sub daa and sub subl fs or insl jg jge mov in je jbe dec outsl out lahf dec aad stos push dec cmp push bound mov out int in dec sbb xchg inc mov jne xchg sti pop dec dec cmpsl mov add adc pop mov mov xchg jmp xor adc cmp dec mov inc shlb repnz lock xchg lods dec cs add jne push cmp fbstp mov add adc sbb mov imul xchg push sub icebp int3 mov adc repz test scas mov in fisubr aas lods aad dec sub aam jbe pop scas cli dec ret (bad) es push repz rolb repz push inc adcl jo nop cltd test inc pusha inc icebp in iret push jmp loope loopne imul xchg stc push sbb xchg sub jle std and push hlt push mov out inc dec inc fcmove divl pop cs bnd lods test xchg xlat (bad) sar pop in push sbb or cmp pop scas imul pushw jbe les dec mov and mov push in sub (bad) push rcr xor push sbb cmovb jb aam mov sub mov xor sbb push fstpt xchg mov lcall test jne das pop mov jge outsl or mov mov sub movsb dec sbb clc sub lea sbb sub or popf inc shrb ja aam je sbb sbbl push mov out fsts pop sbb inc jp in into push push mov aad cmc data16 mov (bad) sub mov xchg mov sbbl pop mov jno jge cld push rcrl jnp cli out cs pop ret cltd xor ficompl adc push mov arpl xor cmp mov jbe cltd pop imul aad cltd or cmp ret and push lahf jge in xorb push sub fildll shrb mov mov mov cld push pushf cmp loopne fwait sbb or and cltd jmp inc and (bad) das mov js sub mov sbb movsb loopne xor push cli loopne out into call test push les xor inc push add cld adc icebp inc loope js sub lahf or push outsl sti jle mov add outsl dec add dec int jge (bad) inc ret jg aam daa jge push and insl mov jle cli in xor xchg fs xor lcall (bad) mov int stc (bad) xchg test mov push jb mov (bad) xchg mov pushf dec lock dec jns jg xor out ja test pop xchg mov jecxz movsl out lds lock nop mov xlat pop mov out push sti jg or push mov push add repz in inc cmp or (bad) aad (bad) lods in scas mov imul daa mov xchg addb mov roll rcr cltd mov xlat push icebp int3 les adc cmp adc xor cmc out or mov bound lods add mov mov test lods sub pop adc pop dec lret cli cwtl lods dec (bad) lds jg pusha cwtl aaa mov in mov xor scas cs sub adc jb cwtl cltd dec sbb adc adc jle sub test xchg test inc clc jg dec outsb out xchg mov lret dec add fdivrs fwait repnz xchg shll lret (bad) leave les (bad) xor xchg xchg dec push xchg insl xor test pusha or mov adc adc int inc add xbegin inc add xchg popf mov mov clc dec movsb jo mov lea ss (bad) push mov fldcw sbb adc test jnp fcmovu mov push dec call outsl sbb in shrb mov js mov sub dec aaa xor arpl lea aad test aas popw fadd xchg adc push jmp push pop cmpl stos sbb outsb inc xor dec mov test outsb sbb cwtl sub mov pop mov in dec mov fcmovb xlat jle sub movsl outsl out sub in addr16 loope call xor stos mov imul inc mov outsl fnop xchg fistpll js sbb inc xchg dec sub mov popf int mov fldl lahf hlt pop (bad) clc sti pusha pop cs aas adc adc mov push aaa addr16 push sbb pop jnp je xchg adc lahf stos cmp push mov cmp xchg lock jg insb cli xor mov push lock loopne scas xor addr16 out dec daa cmp sbb insl jge mov fisub ds jp or or dec in orl aaa sub xchg bound sbb aam iret stc mov dec stos bound sti in xlat sub enter cmp add sub jecxz cltd ja nop mov insl add push pop addb adc ret out xchg pop fidivr ret ret shll or or mov jg mov mov test imul add ja cmp xchg daa dec sahf cmp repnz xchg daa dec sahf cmp mov jbe in sub jnp add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fistl add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb rolb push rorl adc xor je sbb cmpsb jae mov dec dec dec (bad) loope rorl fwait mov cmpsb mov sti std mov pop jecxz add mov ljmp hlt les and int3 adc je test ss or std inc xor fstpt jb mov mov mov jmp adcl (bad) ret mov cmpsl jno popf leave add push inc in xlat test test mov imul fs jns out adc aad jecxz leave mov call pop sub cmp jg imul (bad) (bad) ret (bad) in pop out das cmp cs cmc inc fucomp das inc xor loop idivb rcll xchg adc inc push (bad) ficompl lret add (bad) sbb aam mov ret inc bound sarb rcll dec pop mov gs jae out scas xlat fdivrl add outsb xchg and (bad) imul mov jp fnsave push fdiv sbb repnz cmp push jb ds xchg push and fwait mov or outsb mov rcrl imul sbb test cwtl icebp sbb cmpsb jne dec pop scas js movsb (bad) cmp sahf nop or or and push sbb cwtl xor and cmp dec inc dec pop in xor sbb ja rol (bad) push inc in (bad) jne arpl stos and pop mov lcall push sbb mov out push (bad) cltd iret mov mov stos push xor push je push fnsave push push jecxz negb flds mov mov fildll (bad) clc xor jg js sbb popf pop sbb and dec xlat sbb adc scas xor add sbb xchg and dec std and xchg pop inc adc sar inc aam lds fnstsw sub xchg sub mov repz insb (bad) in pop jl stos lret enter push lods mov negl stc sub pop out imul xor cmp out mov add mov mov and outsl jno (bad) outsb inc test iret mov push mov push push cmpb add xor pop lahf icebp jl fadd cltd sub fiaddl loope mov mov in cmc sbb add (bad) stc fistpll mov into sub add add cmpsl xchg mov (bad) or and xor mov mov mov (bad) cmp mov pop mov add lret cmp push hlt clc lret lods das mov ret pop into jnp mov push add xor xchg in jbe cmp lahf jno and jle xor scas iret mov icebp xchg pop imulb lea adc xchg shl xchg or leave fdivr in or sbb sbb mov sbb cli jle incb cmp inc fstpt cs fwait and cmpsl adc push loope (bad) fiaddl mov jbe pop arpl sub js test jo cmp mov loope sbb mov shrb mov mov and ljmp push sti out mov lock jle mov orb push mov mov sub (bad) bound mov mov add sub xchg neg gs js outsb xchg out loope mov sti add xchg call jl aas and leave clc sbb imul pop arpl xor or xchg scas sub mov or call ljmp loopne pop sbb and xor jge push mov mov mov jl add stc rcll add cltd ja adc dec inc test int or mov sahf lahf std aas aaa icebp dec add pushf das mov xchg daa cmp cmp iret nop pop das int3 sub imul sti lods aaa lea in ja rorb dec pop into and mov sub xchg or insl pop out add lock std stc cmp jl jecxz popf add pop fidivrl pop push cmc jo pop ret jo xlat neg mov in inc sahf (bad) (bad) bound aas sub or mov cmp (bad) enter stos sub xor mov mov (bad) (bad) in pop in ret aad xchg (bad) bswap sub push jle popf adc pop or add daa mov das sti into in inc jge sub es pop leave sbb sub jle bound jbe xor cltd pushf lahf dec les xchg decb insb lret out andl popa bound and xchg cmc cmpsb xchg add jne xchg push repnz inc outsb hlt lret lea pop fldl add lods adc mov fcomi add add js arpl aas lock xchg push test movsb and mov imul adc (bad) cmp (bad) ficomp mov push std jo and mov fisttpl mov jnp add scas jne jmp arpl fcmovu imul ds jl inc (bad) cmc xchg das dec mov xchg add je mov jno int3 aas in jge,pt mov xor mov push fbstp xor nop xchg imull and (bad) out add mov imul adc pop xlat inc or mov and dec movsb rolb ds mov (bad) jb ror xor pusha mov sarl dec std jo xor jmp je pushl cmp inc test (bad) jmp idivb movsl cs lea idivl adcb cltd mov xchg cmpl pminsw fdivrs jl mov int3 (bad) jl shrd in lcall (bad) leave es cmp imul jne out sub std jne sub mov jecxz lret (bad) outsl test ret jmp push cmpl gs mul jae or dec sbb jp movsb fs xchg push push std lods pop xchg lahf mov jp inc jae xchg rep aad fild or pop rol das push and adc pop push (bad) xchg enter bound jg ds jnp dec sbb push iret mov (bad) es fcmovu aad jno lcall inc and dec pop mov cmpsb stos inc ds sub outsb adc stos jns loop push jo,pn mov sbb pop fdiv mov cmovae pop and sarb mov fcoml mov or rclb pop aaa dec int3 mov mov fadds mov test fsubs jecxz sub mov and jno mov nop mov fnstsw sarl into fistpll adc cltd and sub pushf xor xchg inc adc lret xlat add movsb sbb imul lahf pop xor cmc mov push movsl pop mov pop sbb scas mov out fdivs mov aaa pop mov (bad) lcall lods mov ja xor incb xor inc sub sarl xchg mov popl mov lcall cmp ds mov push int cmp data16 push pop push loope jle cmp and (bad) xor adc fidiv mov lods adc hlt inc push mov xor enter jnp pop sbb mov cmp dec jmp mov xchg enter sub mov mov push (bad) sbb je stos loop ds or cmp outsb fstps jno mov sub dec xor ret lods and jp or rclb fwait imul and leave jp ret jne (bad) flds popa mov mov sbb inc imul arpl lahf push in mov jnp pop pop lock mov ja cwtl fs adc push mov out lret sub jae es xor std pop cli fdivl dec aam cmpsb shll (bad) adc add lret xor addr16 push andb clc data16 add or cmp leave push pop mov xchg enter or jmp adc pop jecxz jbe popa out adc sbb pop cmpsb ljmp ss jno das les sbb mov inc inc xor in fcomps fsub push sub fwait (bad) cmc movsl ret lahf fs je shl mov sub aaa add divl inc into in pusha les or out jae xchg fild or adc cli shrb orl adc jmp mov int jne adc pop sbb (bad) aaa jnp stc jp leave enter fs hlt pop imul jg pop mov and xchg pop sub cmc dec cmp imul push cmp leave push bound fcmove push scas push jge (bad) xor cmc jae lret jno push lahf xchg aas mov (bad) es mov xchg push sub sub xor mov jbe mov cli test pop fcmovbe dec imul (bad) dec (bad) imul mov aaa jo cld inc js cltd sub push xor icebp dec cltd fcomps (bad) gs int3 js xlat fsubl in push push ja inc inc pop jnp xchg add mov outsb ljmp inc mov push ja push push xchg xor add std or ljmp imul mov sbb out push insl bound jp jle cmp and xchg cmpsl add lahf in push inc int3 std cli pusha fnsave xchg cld stc ficom and rolb (bad) fmull pusha movq lods inc sbb or cmp clc or stos sahf clc jl out pop or cmp loope inc and mov fdivrs sub lret in sbb sti sbb jg add push and mov (bad) sub or and stc xor je dec dec imul ljmp jne cmp das jl mov (bad) cmp iret fcmovb dec jns dec lret add aaa out pop daa add (bad) in mov xchg idiv add fs mov xadd dec jl in sbb and push or idivb test pop adc cmpsl add adc out repz push int3 push dec xchg push pop xchg and out push dec imul mov xchg xor pop les dec add push popf dec cmpsb pop fwait lret out mov mov xchg and fidivr lret add out sti or add xor loope sti xchg outsl push xchg sahf pop (bad) int stc push jnp push (bad) mov sbb sbb cmc je mov cmp mov xchg sub outsl popf hlt and lret adc inc gs call push jae mov xor push (bad) lret rcrb mov mov in sahf add js hlt xchg out in dec in loop push in daa jp leave scas and mov psllq cmpsl ja mov clc sub push and mov mov lods mov jl sub repnz popa imull and popf sbb imul cli mov (bad) nop shl inc mov xor sbb xor movsl dec adc adc jno or out repnz inc cmp mov test lods mov sub or or into icebp jns mov jle and cmc daa jno pop jmp mov mov mov (bad) flds ret dec xchg cli and lret stc iret add je cmpsb jne push push sub mov mov adc mov cltd ja hlt cmp mov xlat ficomp movsb push jne mov push imul jns sbb int3 leave fdivs (bad) je movb cmc notb jg sti inc inc daa jp in lret pop imul enter push out cmpsl push adc jbe jns push (bad) (bad) shl stos adc ret aas int3 jle rcll cs pop adc call lahf mov mov in xor stos mull adc sub arpl ss cmp fidivrl aaa lock dec les cltd (bad) pop xorl jnp fdivl xchg int3 cmp je xor fisttp jge inc cwtl daa out cs mov jle nop out xor repnz (bad) ss mov sub fisttpl cli mov sub ror push adc jbe mov push or push inc or repz adc dec (bad) xlat and cmc pop mov add mov fmul xchg mov rorb xor roll xchg loop push lods pop xor leave (bad) jmp xchg lret mov dec movd movsl mov in cld shlb and leave dec mov cmp dec enter dec push dec roll cld mov dec ds gs enter push insl ret mov lds lock mov push incl lea test fadd push or cmp inc xchg stc pop mov hlt mov mov jmp sbb mov cmpsl xchg je sahf lahf pop cmc xchg mov jnp sub sub sbb movsb pushl (bad) mov mov or mov adc sub inc xchg in leave or cmp (bad) adc jge pushl mov cmp daa mul js loop push (bad) or push imul xor pop mov xchg pop sub js test inc xchg inc push add aas and add sub and and add hlt mov gs (bad) jle jno mov cmc lods inc pop daa arpl xchg xchg push gs fpatan in and mov fs js dec xchg enter sbb xchg lock xchg arpl shrl xlat and cltd test jmp xchg cli mov pusha mov mov neg nop movsb lret dec inc in imul mov (bad) jl sbb add sub cmc test and popa rorb (bad) jae cmc icebp das add mov mov imul out repz int bound in pop cmp sub sub pop push inc test ret subl mov aam jno ds cmpsl mov cli stc sub fs mov cmpsl and add xorl add sti (bad) scas insl stc mov pop iret sbb and jge add das andb aam jg cmpb pop mov loop adc jae ljmp mov push pop es (bad) flds mov mov (bad) jb jmp idivb shll mov mov std jmp xchg andb daa dec sahf cmp repnz xchg daa dec sahf cmp repnz xchg daa (bad) jg add add imul dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push aas sbb rolb fwait mov dec xlat pop ja dec fwait xor dec out mov insl mov fstpl test out out jge (bad) jmp sbb add add pop adc push adc xchg ss cmp mov das mov or mov dec aaa test loop xchg mov in popf mov mov xor lret sbb cmp into jg mov cmp mov loope and mov sar das (bad) in (bad) lret jp adc lret mov clc mov addr16 pushf out inc mov jb out sbb pusha lret pop fisubr sub fiaddl push fst or mov xor lret mov lea ja mov pop or (bad) in inc pop sbb add sti roll ret pop lea lock test (bad) mov push cli push js jne inc xchg sbbl xchg mov mov jo inc inc das stos fistl jnp lahf xor aas inc leave lea in movsb mov in cli cld (bad) mov sarb lods jge outsb or mov pushf and and flds nop add ja push lret or ss stc int insb sbb and and xchg push into (bad) mov cli xchg mov shlb lods (bad) jae mov inc and stc negb mov rcl or js jge lahf cmp mov mov test jp (bad) xor dec into xchg out add sbb mov lea push iret (bad) test mov (bad) jmp adc pusha dec mov push or mov sbb cmp add scas xchg pop scas inc pop push lcall (bad) iret mov adc nop cs dec std jno push sbbl jnp test cmp push test sbb and lcall lret jo mov add xchg movsl fisttp mov adc fs (bad) fdivs fincstp (bad) (bad) leave arpl mov cwtl mov adc sahf and sbb cmp (bad) out pusha jb and and jnp mov or es dec xor repnz or test and (bad) or aad dec push imul cmpsl dec imul movsb out jns daa pop (bad) loope,pt and imulb jne dec fbstp scas mov stos shll cmpsl mov push test out xor leave pop cld or lahf dec test lcall jp add push add cltd push addl sbb adc push xchg out jbe add outsb ljmp and or lcall mov mov ja or jo mov adc sbb (bad) out divb and imul sub lcall xchg jbe cs ret mov or cmp inc xchg fildl pusha jge xchg (bad) adc xchg sub cld outsb add fdiv mov (bad) into lods mov insl mov popa cmp sub mov sti mov enterw inc repnz ret arpl negb pop mov rcl cs inc (bad) test cmpsl dec insb add push insb sub sahf out push imulb ret mov sub mov mov loopne cmp loopne int3 mov jno mov dec stos mov xchg jge test bound jbe rol fcoms jbe aam lock inc cmp iret push iret or imul fsubr cmpsb jp ret lea pop mov jle mov xchg sub rcrb jmp std mov mov adc xorl push bound aaa lea aad repz ja ja jb out cmp xchg hlt xchg sub sbb xchg mov xchg in jge int imulb incl mov (bad) jne push jne mov rcr call xchg cmp ja mov ljmp or out inc lds mov inc out sub mov ljmp pop lds idivl lods out lret in dec pop or int3 int3 mov das outsb push outsb insl icebp dec mov or sbb push sbb sbb jecxz jge inc xchg loope inc arpl and jne (bad) fwait xchg mov push js int or sub dec roll test ss mov pop addr16 adc adc fnstcw mov pop jne (bad) fnstenv cmp push leave xchg mul gs inc adc xor aas sti fnsetpm(287 and inc (bad) adc mov loop mov mov jecxz repz mov adc dec jge mov (bad) fcomps and fwait imul push out mov loop jl lods and cmp xlat mov ret mov mov (bad) jb mov (bad) pop (bad) int3 in ss pushf lea push leave arpl jns sarl test iret out push pop cmc arpl sbb push lds mov mov jnp test fldt rcrl cmc lahf rorl loop ja cmpsl popf pushf test fimul fs sahf push push cmp mov pop sub dec in js fisubr lcall cmp push cmp mov pushf sbb dec pop std out vcvtsd2si jno imul adc (bad) rorl cmp (bad) pop push xlat ret sub into cmp subb daa add adc dec js aam fnstenv push inc mov adc loopne and out sahf pushf or or icebp cmp call dec sub flds (bad) icebp pushf daa test mov sbb pop mov ja sbb push negb pusha (bad) dec cmc push icebp pop outsb mov lds xchg pop call mov pop stos out stos repnz push push xor js jns int and out mov mov lcall call ret inc xor lcall xor mov std scas jb sbb push sub pop pop les xor xchg jnp mov aaa fildl mov xchg and daa sbb int and fist enter popa ret ret lods sbb les mov cmp mov test into outsb jle jnp rcr xor adc mov aad pop arpl ss push push xor jae lods mov and xor mov jmp pop inc add mov ja push out mov xchg stos jnp add and mov add mov push mov cwtl out in ds inc stos stos mov stos push loopne push push jge arpl dec cmp mov mov mov cld mov (bad) and xor push ret pushl daa adc mov mov mov addr16 (bad) out adc or andb inc sahf mov ljmp popa fwait loop dec out aad (bad) mov adcb cltd loop dec arpl inc xor lret sahf test inc jle and xlat mov mov and inc sbb cwtl xchg mov inc pop mov xchg bound scas dec jae add xor mov imul cmc cmpsb jae les test test sub js jg push xchg pop mov les js mov mov pop dec adc and mov fidiv xlat insb pop and mov mov movsb push clc mov pop test dec rorl inc ret test out aad jp leave jl mov push push clc push sbb jne cmp (bad) jno push aad (bad) nop stc (bad) rcll jns test fs js dec inc fs sub push push push xbegin sub imul push adc pop adc lahf cmpb insb movsb cmp mov stc push mov xchg sub test fisubrl mov adc addl clc or stos jb mov cmp jno jno out icebp js das pop fbstp roll test repnz pop js xor fcompl negb fcomps insb pop imul jge cmc push inc es in loopne cmpsb jge mov test push mov xchg lcall je sub cmpsb ds push iret mov jo add dec cmp xchg dec cs pushf (bad) (bad) push fwait lahf dec int3 pop jp mov sahf cmp push pusha mov dec int fild mov or and cli mov clc push cltd (bad) xchg mov enter mov test inc inc mov subl xchg jnp fldl fdivrl test xchg inc jle nop push mov sahf fs mov (bad) test xorl fs repnz hlt cld loope mov lcall xchg (bad) fcomi (bad) mov dec popa imul dec jbe lods rcrl sub xlat dec mov pop lea mov dec sbb imul lret sbb mov add add push or inc dec cltd popa fdivl pop pop jo dec sbb push ss cmc fcoms push inc adcl rorb test into out inc (bad) mov fldenv stos in cmp mov lock loopne jno loopne xchg mov xchg jb mov sub icebp (bad) lahf scas sub daa mov xor push sub arpl mov cld clc dec lods mov fwait pop fisttpll sbb mov xchg mov sbb push jnp arpl adc mov (bad) mov jo dec (bad) xchg lods gs or cmp add in mov repnz adc mov (bad) aaa pop scas call (bad) mov push int3 adc jmp fmul (bad) jo push jp (bad) loop int mov jle xor imul cmp enter shrl xor push xchg cmp xlat dec inc insl stc lods hlt test stc cmp call push fucomi inc add mov in ret insl pop jl pop jnp jns cmpb popf and xlat les sbb test aad inc mov or cmp loopne divl int push xor adc lcall mov aam cmp mov sbb jp pushf mov or cs mov cmpsl cli insl pop repnz (bad) repnz (bad) je inc insl jns out aam pop push lea jno ficomp repz dec arpl adc stos sbb gs lcall fs sub mov lock inc stc mov aas (bad) jl xlat push rorb test adc out mov nop stc out (bad) xlat (bad) xor into pop ss nop pop inc bnd gs add push dec and out or imul mov gs mov adcb rorb mov lcall fldl sbb or cmp push jb sbb (bad) insl (bad) cmp mov mov xlat jnp jne pop xchg mov cmc test iret les mov flds loop rcl dec addr16 xchg xchg push mov add jmp mov mov or xchg cmpsb fild into inc loope lret pop mov (bad) outsw mov mov or (bad) cmp cltd jns hlt mov decl mov (bad) idivb lods ret sub xchg jmp inc pop aad into jmp or (bad) sarb out fsubrs sbb test mov pop adc into add insl pushf rclb imul xchg into ds mulb xchg jbe pop icebp sub fidivl and xchg loopne xchg ficom lea out test js loope adc jmp clc ja dec sub push push data16 (bad) ret fwait sub and aas adc stos shlb leavew arpl and arpl stos jle jl sbb in dec pop repnz ja (bad) xor jle mov jne enter lahf jl sub (bad) fwait std pop js jg aad ror ret outsl cmc cmc inc dec (bad) adc adc jno or arpl dec movsl xchg xchg mov divb lods sbb xchg ss dec lahf jl rclb (bad) stos xor mov imul mov shrb loopne add shlb movlps pop mov fldt cwtl lcall cmp or lds fisttpll sbb cltd add out inc xchg dec xor xchg cmpsl popa xor rcrl cmpsl fnstcw pop icebp mov addl (bad) (bad) int3 mov loope add fcomps inc sub xlat mov or inc push loop pop loopne lea sbb push leave mov add aad cmp push ficompl xor stos test das nop mov and lahf xor aam jp (bad) or lock mov push mov (bad) xchg mov adc stc notl jns dec inc adc sbb pop inc mov sbb dec or gs inc xchg mov icebp lret arpl xchg add lret jle repz nop sarl adc jp sbbl into cltd mov data16 clc xor (bad) sahf lcall (bad) jbe jne arpl sub adc mull push cmpsb mov xor lret iret lea leave fsubl lahf jns cmp jmp fsqrt xchg jle stc cmc jno push lcall fcmovu shlb leave jno jmp xor insl mov inc (bad) dec rcrb add mov xor mov daa sbb sar repnz gs es cmp lea lcall andb or cmpsl cli xorl pop sbb cld in test pop xchg rol cwtl out mov ss mov lahf or and xor cltd sbb aaa xchg sarb sub shrb (bad) mov into add andb mov leave fmuls inc inc test mov in adc inc jmp and (bad) lcall ljmp xor aad or and pop and mov jg movsb inc out push aaa orl jne xor sub lret mov mov ss pop frstor (bad) lock rclb pop pop mov xchg fiadd xor cmp arpl ja or pop in add (bad) adc sahf cmp mov iret sahf cmp mov iret (bad) incl add pop out (bad) or and add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ficom add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push inc adc push arpl rcrb aam push inc cmp lea dec dec dec and and or and out fistpll cmp add xor call adc in pop ds into push je (bad) fcoml popf lods pushf pop icebp pop jge add sbb movups mov lcall and movsb jecxz xchg adc lret outsl imul loopne or jno testb (bad) mov cmpsl dec adc pop mov (bad) sahf cwtl inc mul imul mov xchg std cmc ret or adc rcrb pop or or movsb dec in iret lret jg push outsb mov das sub movsb push pop add add pop and (bad) mov jle mov add dec (bad) sbb mov push movsl das ret push das pop icebp fsubrs cli cmp (bad) std data16 xor lods inc fs jnp xchg outsl mov jecxz loop or mov pop repnz scas (bad) mov pop sub loopne mov mov pop mov pop out cmc mov ja jnp lods js enter aas test push sub fnstsw sbb fucomi stos mov dec (bad) sub pop outsl inc inc clc pop cmp mov in mov mov imul fchs pop les test push lea inc xchg push cwtl jns mov push popa or pop ljmp pop sbb mov into push gs sti mov leave rorl cmpl mov cmpb lret shl cwtl fbld (bad) outsl lds into call rcl ss push (bad) or (bad) data16 (bad) push pushf xchg inc mov scas sbb pop dec lret or jo jle and cld xchg pop xor scas aad pop fisttpl mov jne test mov mov jle cltd sbb cmpsb mov in mov pop mov push das lea jne and test xchg dec lds xor orb jno arpl xor std mov jmp add lcall mov xchg out imul xchg sub hlt cltd or xchg or (bad) jle mov fldl imul push push cs hlt test xor mov fild push mov icebp push xchg jne movb xchg clc fs or pop stc (bad) or pushf or out mov inc sbb ljmp mov or outsb sub xlat xor xchg (bad) pop arpl sub ljmp jl shrb bound call test and xchg nop cwtl xchg cmpsb xchg lea mov mov xlat push pop dec mov and js xchg (bad) ss sbb addr16 xchg sahf inc xor into repnz je mov (bad) adc mov test scas aam pop add and (bad) loopne cmp dec mov or flds jle addr16 dec aas ss jae xchg xor or shll jle adc ss mov xchg mov fadds dec lods movb insl inc notl push xchg pop stos fdivr int dec andl ds pop scas shlb jbe pop fsubr inc pop ss push add insb push xchg pop xchg mov add xor loop pusha pushf movsb push jmp lret adc lret mov mov jne cmc jg imul addr16 mov ja (bad) mov inc push dec dec imul stc out int jb jle adc push notl sbb inc jecxz popf dec mov imul shl (bad) ss cmp sub xor or jne cmp push testl lds jne enter fstps inc mov add push pop lods jp rcr fmul aaa or cli in (bad) sahf ds rcll hlt ret in push adc (bad) not popa (bad) negl cmpsl fwait sbb adc mov jmp cltd sbb inc or (bad) xor jecxz (bad) jb mov sub shl mov lcall pop jae ljmp fstl or mov out cmpsb sarl pop adc roll aad iret lahf jl pop ret cli (bad) push int3 adc adc xchg xchg test pop fmull pop lcall or mov pop jle int inc dec add jp stos or xor data16 jp rcl xor push in or mov cmc arpl inc or (bad) (bad) clc adc loope xchg mov sbb or out inc bound adc inc xchg adc fwait ljmp aaa int3 icebp jle mov rcll sub (bad) int3 subl (bad) mov repnz sbb push cs mov push cmpsb fcompl pop aaa repz push sbb shrl stc xor xchg sub sub xor push cli dec std inc lods pop fwait mov cmp repnz sahf sbb sarb mov or (bad) adc add (bad) dec shll xor lret scas shll outsb cmpsl movsl aas mov out (bad) push pushf lods jnp lcall out sub jl mov push test push shl icebp js and and xchg cmp sub dec adc dec test popl repnz pop pop loopne mov int3 fild into in and hlt xlat sub fist and cmp movb cmp adc subl mov pop lock push mov fwait cmp outsb repz mov in pop arpl or mov cltd stc add int3 or xor mov cmp sub cmpsl mov dec push or jno sub mov lock mov and cwtl jbe dec jl arpl cmp sub std enter mov sti addr16 lods lods scas sub pop xor inc xchg loop sbb lods add loop fistpl jns mov or out and shlb mov adc vunpcklpd test enter dec cmpsl inc mov pop or sbb sbb and cs fs aam dec push xchg mov iret pcmpgtw jle push fdivrs fadds sub push and mov out test int3 bound jae xchg pop jae sub shlb lcall sbb inc jp fimull adc sub inc mov insb and loop lret xchg sub in mov xor sub mov pop pop cld sub lea mov add cltd pop lock mov stc inc test lret aad sub inc ljmp cwtl sub inc jmp addr16 pusha in mov fisubr cld mov out into in and cmp mov (bad) mov xchg xchg adc arpl imul sahf or pop mov fildll cli inc xor pop insb ja push outsb cmp test test ret and repz dec mov jns pop xor mov scas cmp test sub xor xchg ret and mov xchg fildll jmp lret jo or and xchg fwait popa cmpsb jnp push adc roll (bad) (bad) enter out lds addb fs les idivb sbb out xchg lahf or fisttp (bad) dec pushf mov dec iret pop aad jne xchg imul xor sub lods stc movsl ds pushf rclb mov das xor jp mov xor push iret repnz push iret xchg jge test mov adc cs stc jno fnstsw pushf mov std aas cltd mov cmp jp leave (bad) xchg xchg jp les int mov sub dec xor fistpl and idivb mov pop pusha jb mov mov push jnp test mov std adc aad or mov rolb fiadd dec mov xchg fnstsw ret mov lea push fist and mov and push add (bad) push sbb js (bad) fs cmp (bad) mov jl lret sbb lret into add jnp pop push ljmp out push jbe sbb shrb test (bad) out bound mov (bad) ljmp jbe adc push pop (bad) lahf shrb std push cmp daa dec int jmp push inc cmp aaa (bad) mov fisttpll jge sbb xor stos imul (bad) cs scas jne adc sub leave jge das mov icebp aad inc cmp dec fbstp xchg icebp xchg lcall test aad push sub mov cmp test xchg (bad) jo cmp addl lea mov addr16 xchg (bad) pmaxub popa xchg lret adc adc add dec adc pushf fstps lahf jg push in out repnz mov xchg out cwtl mov and adcb js push dec fwait (bad) jae stos dec add push mov mov sbb jl mov add stc push xchg ljmp xchg (bad) mov sub cmp push lock pop xchg cmpsl jae insl sbb dec fsts push enter loop cmpsl jge (bad) pop pop xor and scas out scas and mov mov dec clc daa cli sbb fldt add lea lods mov adc lret pop push pop cmp out hlt aad ret popl inc mov sbb and cvtdq2ps repz inc stc (bad) repnz sub fsubrs jo jg xlat dec xchg rolb mov xchg dec mov sbb mov mov xchg jmp imul xchg mov decb js and flds fld scas imul or lods sar jmp dec jp cmp add mov lcall leave jg dec xor or fstl pop insl repnz loope fbstp pop pop sti jmp mov lahf cmp std sbb pop mov (bad) std xchg nop dec in repz into lahf out jp movsl jne jo and test mov int3 xor mov addr16 ja xchg in loop xor cli inc or dec adc mov insl inc mov add aas inc enter rcrl xor xchg stc pop (bad) ja cmpsl sub dec loopne jl das xlat xor mov jne xchg mov mov add pop xor push lea xor sub sbb push jecxz outsb jnp nop inc and (bad) int mov mov lahf arpl sbb insl or icebp sarl push jl adc clc ljmp and mov outsb pop push and mov (bad) scas cmp shlb ljmp pop lock idivb inc mov and jmp lea xor push cmp sub xor stc fs sbb les lods jge and jl push cmp out movsb mov inc rorl adc sub idivb test insb jp pop cmpsl sub test push leave outsb jge xor out addb aad cmp push pop insb out ja sahf and adc mov (bad) mov fsub xchg stos and test mov pop mov sub adc pop xchg cmc imul jnp adc lcall cmp sbb sbb test paddb cmp or std adc out add xchg push subl xchg lret xor call pop mov pop sbb cli push stos pushf fwait js sbb test pop sbb jg or push ss adc xchg lret out cmp sub push lea ja fsubrs clc sub bound rol out jmp cmpsb xchg jne dec adc loop int3 xor sbb repnz loopne cmp inc pop out bndldx test adc data16 jbe mov ja insb push xchg icebp xchg mov mov cmp outsb inc push jg dec sbb outsb insb repnz lcall and add insl imul clc xchg (bad) push jnp movsb or jl sbb jno inc stc outsb aam popa lcall insb imul cmp call sub outsl out mov addr16 cli (bad) lock out lds sbb pop iret or mov daa je inc neg sbb fs pop stos mov lods fs xor sub (bad) fwait mov bound xchg repz andl stc and psadbw test arpl sbb lods pop rorl pop adc cmp pop lods mov data16 jecxz jle add adc mov sub xchg sti cmp jge daa pop push arpl inc (bad) es fnsave cs sahf test push jne xor shrb fmuls nop (bad) dec push cwtl mov movsb fwait push push movsl (bad) mov stc ljmp ja sub push fcomps repz inc jmp push push mov pop aad and lea add xchg jge popa (bad) cmc (bad) leave scas mov movsl push adc dec adc and cli mov and sub das aas call or (bad) cmp iret pop mov fwait ljmp test jecxz (bad) adc mov lds call imul dec xchg cmp mov fldt movsb (bad) fadds lahf jecxz adc lods pop cwtl xchg mov outsb cmp push arpl inc jge and mov test or shll cmp sbb jle xor or mov out jl addr16 xor hlt adc insb icebp push (bad) dec xchg mov gs fxch orl movsl cltd shrl pop sub cld in jge dec fcomp pop add push jmp daa mov and cmp xchg fwait out and jge and adc std out add push movsb leave inc xlat pop js aad jne mov mov and xchg mov dec jno ss or out lock sbb sahf iret push stos rep pusha ret jmp das push sbb sbb cmpb stos push inc in aaa fisubrl or add loopne sub cmp mov ds ret mov pop aad popf scas inc push sub mov in jmp adc jbe fs lock cmpsl in leave rcll rcll xor lods cld inc mov mov in jnp ljmp push lock hlt loopne addl push cmp lock addl push cmp lock pop add pop jge aad dec push rcl add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop xchg or sub out cs adc out outsb adc pop nop adc mov repz and in mov add out and imul mov pop (bad) mov sub lret sub sbb pop pop popf cld jp aam fist loope xor cli loop mov scas sahf add std jbe adc mov pop fcomp pop decb aas push jb and clc loopne std (bad) sbb in test lods sub jl jbe pushf pop (bad) scas (bad) xor scas pop cmp popa fnsave or js xor or bound fist aam movlps fst sahf mov dec or pop (bad) loop dec add dec lods cli fxch adc jne cmp push lds repnz xor fbstp cmp xor gs push push lcall mov les (bad) or mov ret shlb les sub push mov fnsave out ds fcmovb std xor int3 mov test jnp xchg pop pop xchg mov shl gs adc pop mov pop jo inc test fsubrl jo stos test sub adc xor inc cmp lods jmp cltd mov fsubl insb sbb out loopew pop movsl add test push cld cmp push push cmpsl icebp rorl pop xorl fs jg inc fsubrl jo mov or stc push jne mov enter jns cmc dec mov lahf pop (bad) (bad) sbb popa fcmovb (bad) es orl int cmp mov testl pushf adc inc xchg push xor mov in loope xchg mov add or push in ret stos into test loop xlat pop pop mov hlt das cmc pop stos mov popa mov or in and mov in xchg xchg pop stc dec cmp and aas inc cmc and test outsl add mov push inc test jae pop adc dec mov jmp inc mov jne scas xchg mov arpl xchg ss and pop dec dec lock and xchg repz pop jne jge clc and push popa or inc add sbb addr16 (bad) xor test ficomp movsl fldt lcall cmpsb fistl sbb mov dec adc xchg in pop inc cmpsl sbb sbb arpl clc sub lahf dec gs push inc inc mov and xor push mov ret mov lcall push mov lods icebp pop les dec insb push jno jge mov (bad) js paddb mov push or xchg xor or cld je xor pop mov push mov mov mov pop icebp sbb repz cmc mov fidivl ret movl insb push xchg mov xchg lods push es out (bad) rclb lcall push push cmp divb into pop cmp call push sbb daa push lahf sti dec arpl ffreep jb cmpsl pop mov fiadd outsl add or scas incl movl cltd pop call dec cwtl fxch push movsl cmpsl jl arpl fistpl (bad) iret lret clc fmul cmp mulb dec jo dec ffreep mov xor mov xlat ret mov fdivl (bad) dec mov popa aas mov push das aaa nop mov data16 cmp cmp jne (bad) jns jle and dec insb (bad) jne and lods add pop push mov mov inc jle les xchg jmp xorl adc in mov mov imul daa sbb xchg idivl xchg fsubs jne lcall jle xor icebp mov xchg (bad) aaa test in sub arpl inc sbb mov pop sub add stos add fdiv xor test sbb int push in or pop insl mov ja push arpl mov repnz mov push add cli sbb call not bound data16 in outsl jbe mov add popf inc sbb je adcl cmc stc dec mov pop mov xlat fisttpll (bad) outsl xchg jge adc outsl jmp and xor mov cli fistpll adc and in div add out xchg loope clc mov jns aam jge pop mov mov sub shlb dec mov pop les sub xor clc in cmp adc orl je cwtl push pop into mov adc dec int3 in and ja in out mov jne jb popf dec fmul int jbe notb (bad) daa inc inc jnp push fstpl mov mov mov xor adc out jo jo adc xchg sbb push js lahf dec add ljmp jae jecxz adc xor out mov fstps inc xchg rcrl inc inc insb pop jge mov movsb mov cmpsb push imul outsb lret cmp js rclb jl adc ret call mov cli xor out insl rorl mov in daa mov out sbbl rcr mov ljmp adc xchg lock pushf and dec push bnd lret lcall push into mov jge xlat test and nop cmp pop sub rorl sbb lret cs mov push xor xlat add (bad) in sub sub fistpl pop repnz mov sub push lret out xchg test cmp add add test and mov mov into sti mov dec popf fs leave xchg inc (bad) into popa cmc mov dec roll out ds hlt push repnz mov fcmovnu jbe sub push cmp lods xor cmp test popa ret xchg jge ret xchg pop add and addr16 cmp pop in xchg push outsl fstl mov (bad) es xchg mov loop imul or aad rol jo les (bad) jb sbb hlt jg mov cmc (bad) cmp inc mov jno mov push enter ja mov pop or lret cltd xchg mov stos iret lret jo inc push (bad) hlt stc in sarb sub inc mov mov cmpsl add push gs push mov out inc sub repz push mov add and jb int3 adcb addr16 add (bad) lea jo pop int3 inc and adc fiaddl cmp mov shl xchg cmp adc pop cmpsb mov dec and aam sbb and enter xchg bound mov jp and out add stos test fs insl lahf xor push xor cmc in dec ret pop mov sbb cmpsl out aas loope adc pop pusha stos and movsl sub cmp cmc cmp rorl pop jbe mov sbb cmp mov sub je adc lods lret test cmc mov sub pop jmp cltd cmpsl mov scas jmp pop add js testl dec sub mov lds in call fisub push incl inc fcoml lcall scas roll and jno popa leave ss pop cs aad movl dec mov stos push arpl sti mov and fimull pop cwtl lock shr fs lahf sub ja (bad) jge xor inc sbb repz aaa or xor mov push mov je push push cmp mov popa pop inc es (bad) stos fistl and ljmp or jl lret sbb icebp les mov movsl mov adc test sbb pop into sbb inc cld test jp stos data16 pop push test or out jo and stos sahf xchg or inc pop mov hlt push and sahf fidivl push cli pop add lret or or cmp (bad) in inc dec or sbb loop push mov loope inc and lret xchg push nop shr xchg scas mov mov jp rcll sahf cmp (bad) mov in addr16 cmp mov xor or out pop into dec test aaa cmp movsb adc imul loope lods or scas lds sub or loope out pop jne add xor xorl (bad) mov in (bad) xor fcompl xchg aad or mov fiadd pop lea (bad) sub sahf mov sahf jge lods and dec jne aas ss jle add and inc mov jno inc (bad) add sbb pusha movsl and mov cltd and pushfw mov nop add push mov cltd imul or fsubr sub fild xchg fisttpll xchg (bad) or push iret in cwtl pop pop out push clc sbb push out leave dec mov pushw cmpsb jno pop sbb lock jge sahf rcr out imul push fstps inc scas outsb dec jns iret and xchg and mov and dec mov xlat xchg jge push cmc arpl adc mov cmp arpl xor jae cmp xchg push mov lret sbbl dec jecxz sub sbb mov mov in or jns roll inc insb pop aas dec jle lds addl scas lea mov out clc leave adc mov mov pop (bad) cmp popa add stos mov loope sbb dec daa xor into ret cmp dec mov pushl mov arpl jbe stos lock mov xlat adc mov arpl mov or pop jbe inc shlb aaa (bad) cmp push and mov or hlt push stos popa sbb inc nop inc mov jo fnsave clc cmpsb push xor or cmpsl pop cmp stos cmp mov pop push or loope stos jb inc mov cld pop pop or cmp test test inc lahf (bad) cld adc mov add lock imul loope or jg std sub ss mov jmp cs mov adc bsf and cmpsl mov mov into mov ds fstl cltd xchg (bad) push xchg and lret mov pop fbld xchg dec sarb sbb sti dec jl data16 mov dec xlat mov arpl mov xor fimul loopne into push xchg loope sahf ds sub outsb mov xchg pop pop out addr16 hlt mov adc mov cmp and mov repz add sbb adc ror or loopne xor sahf mov stos add mov xor scas and inc mov push adc test pop in test fsubrs xchg add (bad) icebp das jmp adc into arpl xchg cli sub ds mov mov test push push xor (bad) in or push test mov push xlat sbb cltd icebp inc jbe cli (bad) mov xchg push iret outsb push std mov mov dec jns jb (bad) jno int sub dec sub test daa ds or xor decb out nop clc xchg or push sbb fbstp ljmp push data16 ret (bad) mov test mov push movsl or out stc inc jl lock aas pop mov pop add fnstsw cs stos ja (bad) push xor xchg iret pop popf push add arpl lret fistl pop ja jp jge mov push stos pop icebp or mov sbb mov add jge movzbl pop test cmp mov in mov mov call jne sti dec imul sbb fs pop push pushf imulb pop imul (bad) push mov insl hlt in mov adc sbb jae rcll scas dec das sahf pushf insl aad leave nop sub or mov nop dec movsl aam in push pop xchg ret or dec xchg loop (bad) fisttp test dec es std xchg inc xchg mulb rcrb sarl jle mov pop lcall daa bnd pop and dec mov es jecxz push ficom push lea sbb jae mov push push pop (bad) mov fist xchg cmp mov scas std jecxz inc lock loope mov dec bound sbb and fisttpl (bad) (bad) inc sbb icebp add mov jge aaa pop inc sti mov pop imull nop push (bad) mov lds push xchg lea dec sbbl test fnop push addr16 shr mov push inc cli cmp and sbb fucomip cmp call mov inc and test aad jecxz mov int push cmp in sahf pushf repz mov push sti nop mov jnp insl test inc sub or negb ret bound or cld icebp jmp (bad) xchg pop and test push and in mov push gs add mov repz outsb repz xor inc pop pop test sub in jae imul data16 in lods iret pop ljmp xor out mov das add jl lret packsswb add jp js lods jmp push fwait mov mov (bad) ja test jecxz xchg push in push xchg in in sub mov shrl jl fistpll jno and jne inc pop imul ds repz dec aad daa dec inc xor loopne xor xchg mov inc sub xchg pop pop or subb cmpsl rcl add nop ss test pop adc sub adc xchg aam sbb xchg mov xchg aas loop sahf lret (bad) jbe nop mov push xchg jge and aam adc mov mov jp sahf (bad) sbb std (bad) pop dec cwtl dec mov fidiv outsl je xor stos inc add adc rcrl arpl loop (bad) (bad) dec sbb out xor je scas popf mov jg mov scas push dec lret pop repnz push fstl xor lahf mov clc lds mov mull loopne clc xchg cmp jo sahf sub cmc ljmp jp ljmp jp incl add paddusw cli mov add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push pop adc add rcr or cmp and mov add sub push dec lea (bad) divl add push clc pop mov mov aas cmp mov adc daa in cmp add bound jae fisub rcrl les adc ja and popa xchg mov pushf mov cmp jl stos clc insl insl inc pop inc int3 adcl mov cmp pop sbb dec test test gs pop mov xchg and fsubp and mov stos adc popa in sbbl lcall adc inc pop rorl gs (bad) std negl aas and xchg adc mov push cmpsb addr16 pop inc pop outsl add shrl xchg push mov dec mov js sbb out fnstenv cs add bound mov mov fdiv dec fldt or ficoml mov imul or cmp push mov shrl fidivrl hlt cmp mov xchg lods mov mov mov cmp or out sbb mov inc mov gs stos cmp mov ret sbb inc mov test in fsubr or or enter mov movsb mov insl sahf add daa js stc push cmp movsb add lret test adc lret mov sub ror jmp lahf js (bad) bnd pop into js loopne insl or imul jl loope jle xchg dec or loop mov sbb std sub inc xchg cmp push inc scas clc std js add jecxz dec ja jle sar adc xchg andl repz sbb out fs ret jg jmp pop sahf pushf out lret call loopne jp jae cmp push mov xchg js xlat cmp in iret clc rclb sar add int sub pop jle aad xchg in and pop adc lret pop cmp sub push jp mov sbb (bad) or cmpl jecxz clc leave xorl cmp push sar sub lret out shrl and pop jne lds push int3 (bad) imul test or stos shll popf xchg (bad) jb ja inc adcl jb push out cmp pop mov sbb into inc (bad) push aaa mov in dec jb inc mov add mov lock push xor pop push xor sub mov call or sub es lods imul loop dec cmp sbb add bound push push sbb mov mov and lcall fisub test pop mov pop adc repnz sub inc sbb std into mov add scas stc or or mov (bad) or in sahf out inc mov insb insl jnp sub xchg push pop mov add repnz pop add mov sbb pusha outsb dec mov cmpsl imul jle mov pop push lahf add jo fs jle jb bound (bad) mov sbb mov jb call or in xor neg or inc push jge (bad) icebp adc xchg (bad) repnz inc mov adc xor jl sahf insb popa loope cltd int call pop (bad) bound shrb cmp mov or jp mov rcrb cmp mov out inc cmp addr16 and pushf or mov js lret xchg push fldl mov dec out inc mov roll mov add add cltd push mov push movl fcomps rolb push dec mov inc add jge clc jp dec int sahf push xchg pop int3 mov lods lds jmp ds jbe dec mov mov stos cltd (bad) clc xchg xor pop or xchg fs cli pushf cmc cmp mov les sub subb lret push test fist adc pop fnstenv sbbl or pop and or rcrl and stc pop (bad) xchg and sarb or aad jp leave data16 xor add push inc cltd inc push sbb xchg repz dec ss jg aas in jp or jl popa inc push ss inc lret aas cs jnp inc imulb xchg and cmp push mov xchg xor cli dec xor xchg addl pushf mov jle mov adc in xor fcoms xchg push icebp xor push aaa push lock sahf push fild jmp leave out f2xm1 inc sub lock scas stos stc insb mov dec pmulhw or int js jl dec mov (bad) sbb in sub (bad) repz lret inc loope test into and xchg jge xor mov daa aaa mov out add inc push jp aaa sbb xlat jecxz call mov jp cmp sarl in lock xor or inc ja out fs and out xor cmpsl ret inc clc push es jns push repnz xchg sbb lock mov clc jno xchg mov mov mov bound fcoms mov flds insl sub mov or cmp cli xchg mov xchg loop popf jecxz cmp jle cmp push out jnp pop mov adc sub outsl mov mov or mov or fwait mov jns insl movsb (bad) pop stos ret sbb push xlat xor ficom mov pushf add xchg scas les sub ret js iret cmp inc or or xchg scas jmp jbe sub mov mov fdivrs inc dec (bad) dec mov jae mov test push dec jae pop push test clc mov add in stos out (bad) out and sbb sti in insb mov data16 jecxz mov sbb test dec idivb add and mov (bad) stos movsb fist mov loope nop sti adc stc mov jp jp cmpsb movsb mov xor xchg call sahf movl cmp repnz lea mov dec inc pop add movsl test or leave scas sbb mov mov xor push jge shll inc mov sub inc and sbb mov ss mov sbb mov loopne lds lcall jae adc cmp inc jp push push or dec mov iret outsb movsl pop add shrb add jne cld sub imul push cwtl lret mov iret push fbstp (bad) into popf pop mov jnp les flds cltd sub inc sbb xchg loopne (bad) mov jnp and jnp aaa mulb rclb and push (bad) mov lret daa (bad) es enter shrl mov pop sarl sbb cmpsb push or (bad) pop nop and add aaa push push fisubr dec and fistl outsb (bad) je mov test les pop jns xor add jge sbb lcall ja sbb adc mov enter push sti fldt lods das dec push arpl outsl xlat imul adc inc mov cmp xchg jecxz rorl xchg outsb jecxz adc movsl daa xchg sub xchg insb xchg movsl cmp data16 dec sub out pusha ja neg dec lret mov ljmp cmp adc (bad) sbb mov pop mov mov add xor jge scas mov sbb clc push in in jge cmp xchg lahf mov in or test pop shrb push insb dec popa inc idivl add add add jle aaa pop mov fs xor or mov mov sahf xchg ret pop aaa paddq (bad) (bad) ja addl cmp das and sub inc stos pop cld arpl jl (bad) xor mov mov clc (bad) inc add cmpsl jge mov jns inc in pop test fistpl sbb in (bad) enter add lods sbb leave pop jo (bad) push adc (bad) repz shrl sbb pop jecxz das js lahf adc mov pop xchg fldl fcoml test arpl enter push sarl and jae test lods jg xor rcrl add inc (bad) or cmp fs lahf push sbb mov pop add aas movsb mov out jo popa push dec call pmulhuw call dec aaa imul fstp sub fmul rol bound mov icebp insl sbbb scas xor addr16 int3 xchg clc sub xor mov xchg pop push pusha fisttp je mov jbe dec jnp enter fstl jge mov int3 cmp out adc push pushf mov jge fnop cvttps2pi adc sub push rcll das insl push mov (bad) out dec movsl cmpsb lods jb or fucomi (bad) mov push stos adc cld je xorb sub das cmp sbb and or ja in inc pop or rcrl mov push cmp mov outsl and and (bad) daa inc dec push mov xor int icebp lret jp (bad) or inc cmpsb xor adc jge cli ret les mov mov jl cwtl sub loopne fbld rcrl sti mov or jns xchg in (bad) push push (bad) js imul loope sbb inc inc es mov aas pop sti stos dec scas xor aas loopne pop xchg popf sub idivb (bad) push push out push rol pop mov dec cli pop inc jbe adc iret jp jecxz and cmp jmp in push and mov rclb add mov lret (bad) push fldcw fisub mov ljmp les jg and je pop and or dec out scas test lea add sub lcall insb mov dec or aam adc fsts ljmp les outsb lock loope xchg inc xchg lret adc arpl das mov cmc push pop in popa add test dec xor stos mov imul or iret (bad) lods ret ret out clc inc stos ret add jae xchg into and das (bad) (bad) adc push icebp shll xor cmpsb inc sbb cmp lds into and mov test and sbb dec sub mov data16 test daa adc add lds imul mov stos daa add cmc leave xor inc xchg or ja sub lods jmp inc jnp das dec lds imul (bad) loopne sbb pop add dec cmp scas loop es mov insb push xchg add cmpb push mov sti sbb or xchg xchg mov out push mov lahf mov inc adc mov jg jb sbb xchg and stos dec fbstp inc sub or aad push mov mov aad jo mov pop in pop je fistl jg and jbe push pop or add in mov in icebp mov fisttp pop add cld jge out subb sbb xchg dec in cmp mov push std (bad) movsl pop mov mov xchg mov mov xchg push in cwtl sub inc sbb inc dec ljmp dec dec ret add inc call int3 mov mov test adc ja loopne push lcall sahf sbb sti std scas aaa aad cmpsl aad sar mov pop add (bad) sti lea in pop mov xlat int hlt hlt popa or push cmp or sti xorb ds and roll icebp js xchg lahf xor (bad) mov xchg xor jae dec sub or cwtl mov inc (bad) data16 jle (bad) cli add in xchg mov gs std or mov dec adc mov icebp dec pusha into ds leave in jp dec shrl xlat outsl into jecxz test mov jecxz fwait push lcall pop xchg cmpsl jge jp nop dec ss loopne (bad) nop (bad) push fnstenv sbb fild inc pop sub test mov jg xchg and out notl xchg xor sub cmp mov pop ret sti shrl stc out (bad) ss xchg sarb sbb movsb xchg push pop pusha or roll mov pop div (bad) call sbbb dec sub loopne push loope popf divb pop movsl push xor sub fiaddl mov jp jae lahf aas adc xor iret arpl fistl push and push mov scas xchg push mov jb dec inc sbb mov rcr data16 shll ret popa test mov xor cmp sub test cmp jnp xor addb adc (bad) xor xchg loop int iret jbe jp sbb jne xchg daa (bad) fxtract in (bad) js sub cmp mov mov ret cmp pop jl sbb loopne xor das sarl xchg sub repnz add sub adc lret jmp jmp test enter movsb (bad) mov inc repz pcmpeqb dec lock dec xchg mov push xorb push lret fdivrs push test loop js inc cmp cmp scas in mov mov cmova ret insb mov push loopne pop pusha icebp popf sub test dec mov pop mov (bad) rclb xchg imul sbb cmc cmpsb gs fbstp addr16 orb mov pushf xchg fstpt push aad jg outsl insl mov (bad) adc gs dec pop out pop ljmp data16 fstpl adc fs cwtl mov aam aam aas dec ror push mov xchg mov stos pop sub adc and mov imull gs mov out push push adc mov xor insl (bad) int3 pusha or xorl or sbb orps fidivl scas inc into push cltd mov cmc dec fnstenv and inc scas pop mov stos push scas pop mov stos push scas (bad) incl add pop sbb inc test add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop adc div push add dec dec jb and enter out xchg mov mov push and or or clc pushf out (bad) ret imull pop add push clc ljmp mov push movsb int3 sub cmp add sub ja pushf out cmp jb or pop mov push pop push push mov stos pop int3 push out push push mov sbb push lea add adc adc mov mov aaa in mov push jl bound aam add int3 jge cmpsl rep scas jns fcmovnbe sbb dec lock or test jo pusha sets inc pushl adc scas clc dec fdivr and movsb rcrb scas pop daa aas adc andb mov call or xchg imul jbe ret dec jecxz xlat inc popf inc jge repnz fidivr mov clc adc dec out std xorb dec rcr jne fildl add rorl into push xchg stos dec xor ret push cltd and adc mov adc push xchg pop and dec in mov cltd (bad) mov sub rorl sbb sbb xchg cmp pop inc ja inc lods xchg sbb push cmp and pop dec sub out adc stos rcrb sub sbb cmpsl inc mov pop pusha int sbb mov mov mov lods mov shr jno repz or outsl push testl out psrlq mov xor adc nop inc push inc mov push pop inc fistl push mov call jno mov dec inc mov arpl cwtl cmp inc jae loopne fmuls xchg (bad) push mov sti push call or xor mov sti adc scas arpl (bad) aad lret mov xorb push sahf outsb mov bound enter js ljmp sbb aad (bad) mov cmp jp dec pop mov xchg negl sbb sbb insl aam xchg out add mov add (bad) aam jae cmpsl dec fdivl lret xor out and xchg pop fsubrl int (bad) roll push push outsl decl push cmp arpl call (bad) pop xchg xchg jae (bad) push fs mov mov lret int3 inc loopne xor pop jb inc insl movsb xchg subl push scas int xchg sub lret cmc and mov push jg push dec test sub jae int3 mov mov and xchg adc push push pop movsb jg pop add xor mov std das jo std inc out out adc aaa out xchg imul or and cltd pop inc loope pusha jae movsl shl dec dec sub loope fcomi xchg sub pusha mov jle sahf sbb sbb or fwait mov inc xor mov dec and sub pop and adc inc (bad) ss ret push xchg jmp clc daa sub xchg mov in test pusha pop pop (bad) int3 mov scas xchg or pop lret ret inc sub scas xchg mov movl out in add push sub pop mov addl mov jo or inc sub es ljmp sbb in es adcb imul cwtl xchg dec ret pop dec les shrl lahf lahf jecxz mov inc cwtl xor inc add jae pop mov dec pop push fwait dec push mov jl std mov cmpsl adc lds and mov push add xchg mov and inc or out pop es add (bad) pop add (bad) fsub pop mov and push mov jmp insl inc cmpsb xchg adc mov lock xchg jmp es jb leave clc cld push rcr enter stos test push bound inc stc lea inc cmpsb ss cmpsl pop add sti pushf jbe push in test xchg mov push movsb add int inc (bad) loope imul jp push mov movsb pop fimull jmp leave int cltd push sahf icebp xchg add inc mov je push and xor or adc pop (bad) fnstsw fistpl pushf nop add lods xor cmc cmc sub outsl push gs mov push jbe xor xor inc sbb arpl jmp and cwtl cmp mov or sti cmp out sbb jo sub leave pop shll call out pusha (bad) in inc jns push arpl (bad) aam mov mov bound fnstenv lcall pop test push fisubrl repz and sti adc pop sahf ret (bad) hlt outsb adc add outsb daa push (bad) ficomp (bad) popa aad push sub mov call or mov call nop push ds mov add mov ss cld inc mov sbb and or mov inc out and cli mov cs das xor or push hlt push loop dec mul pop fwait pusha xchg lods test adc (bad) cmc push mov cmpsl mov imul sahf insb scas inc sub rcr test add jecxz pop xor or push in lahf test neg xchg movl cmp sub fwait mov cltd in ret cmp sbb out fucomp pop xor jecxz push sub inc mov adcl xor push (bad) icebp push xlat stc jle sbb aaa movsl fstl xor adc pop stc push cli hlt ja mov xchg sub stos adc inc repz jns fldt pop data16 inc mov jmp daa sbb sub xchg negb sbb addr16 pop mov bound dec cld out cmpsl xchg inc sub mov xor pop ficom xor xor inc cmp sbb ret and mov inc hlt (bad) rorl int and dec pop cmpsb add insl in je insl mov loopne,pt (bad) aam mov hlt push inc mov sub adc loope push lods dec cmpsl inc loope in (bad) stc lahf xchg sub loopne jmp (bad) cmc push lret jmp dec mov lods xor (bad) js pop (bad) imul (bad) mov mov inc push cmpsb hlt loope jo test adc test cmp push mov jmp inc adc xchg (bad) jo jmp cmp (bad) fnstsw or pop push cmp testl and jmp (bad) or popf mov sbb mov fisubl sub arpl bnd pop scas popa xor stos into fisttpl add push dec into leave cld fcoml adc imul push push lret mov repnz mov dec jno lods push popf mov out bound sub ds leave (bad) and or mov xchg and lahf pop fucomp and call imul and aaa popf add int3 or mov or push jecxz mov jnp lcall popf rcr ljmp mov cmpl jg pushf sub mov loop dec cmp push sarb (bad) in pop push inc out sub cmpsb add xchg hlt push inc fdivl into dec stos adc jg and mov or push cli test or mov (bad) jo gs test clc mov push ljmp jae bound mov pop dec fdivrp jnp sbb pusha lret and inc out loope push mov adc call mov dec dec mov test xchg dec fmuls sbb cs mov mov push xlat cmpsl pusha fisubl ja mov push mov insl push (bad) sbb mov dec fcomps adc inc add fsubr ja ja dec pop mov jne pop add push cmp iret stos dec out lods rolb std mov mov pop pop lock jle popa mov sub mov push lret dec sahf outsb sbb push lea cwtl mov mov jnp mov mov loopne push xor adc scas mov fmuls dec cmpsb adc mov mov dec inc movsb cmpl add dec push icebp xor xchg add rol sub xchg sub jbe and inc xchg inc inc fisttpll or adc add mov mov ds cld scas test movsb xchg cmp inc cmp or dec xor and fsubrl outsl mov xor test mov pop push xchg cmp push cli stos repz jb inc mov push sub lods in test aas (bad) aad stc inc and cmp xorl mov daa ss bts push mov mov add pop stos lahf and add inc jae (bad) clc out mov adc add adc adc jo pop jecxz (bad) mov jb pop xchg sarl test fldcw pop inc jo mov stos cld outsl arpl push leave aam sti inc push sub jbe lods mov xchg cld and jmp das inc je mov mov lret and ss es cwtl data16 lds push xor jno jle daa inc mov popa (bad) data16 (bad) pop ja les sub movsb mov adcl or dec dec cmc outsb mov adc call or fcmovnu ljmp add out adc mov pop pop jg loope repz frstor pop pop mov and push mov xchg mov fidivr pop loopne stc or inc scas add das or xchg lea push fxch jmp or cmpsl fnstenv sti jmp add pusha jmp mov xchg mov or cmp repz mov test and imul push push mov (bad) popa lcall loope shrb fwait mov mov aad mov mov mov mov pop inc stos jbe push fxch xor and into insl push sbb push add scas bound pop jmp inc and mov pop (bad) in stc nop dec push (bad) hlt pop fnsave movsb dec sbbb push (bad) cmpsl (bad) insb dec cmp cli push and leave dec push daa repz pop jo pop popf jae (bad) (bad) push in movsb mov jle loopne adc inc cltd jae lods add push std cmp jb mov pop les sub (bad) jnp or outsb sub jge std fsts rcl adc cwtl (bad) int3 jl bound test mov sbb sahf push stos (bad) fstpl jge fwait dec int3 inc mov xor mov test rolb cmp (bad) je add pop cld dec mov dec leave jge or push loop lods dec add in stos repz sbb in xor mov cmp test cwtl adc sub je dec or jnp xor cli hlt jmp stos in rcrl and es jnp ss js adc scas mov pop jnp jge cmp jmp add lret int3 push push fs ja sub xchg enter jp sub sbb movsb push sub daa movsb aad add sbb stc jmp enter lods mov inc jge lds jmp sub cltd mov orl jmp fldlg2 mov xor xor out ss dec jns fwait xor pop jmp sub das xor sbb pop shr aam adc lret loopne pop flds jle cmpb xor or cmpsl xlat mov lea test mov xor das lcall sbb test insl cmpsl maxps xchg stos jns rorb or sub xchg adc adc (bad) ss mov pop add pop fucomip adc xor scas push pop test dec jno fstpt pop sbb xchg fucom ret sbb pop fmull (bad) stos (bad) cmp jmp or lcall xchg ficom sbb mov mov sbb xchg iret bound push jge test add cmp xlat fwait xor cli sub jbe jae xlat cmp jbe cmp sahf cmc fld and repz fsubs adc shrl test lods mov test pop fidivl cmp fwait jae in clc gs mov (bad) out inc xor add ja dec adc out pop js data16 sub rorb jno xchg shrb movsl add jle sub aam ljmp jl xor call std (bad) aad movb jbe jmp xor cmp sub xor xor test pop cmpsb (bad) mov test and push jmp and stos add (bad) faddl adc mov loop dec xor aas mov and je js call xor enter (bad) xor shrl cmpl sbb xor xchg pusha loop (bad) sub subb mov xchg insl outsl movl lcall repnz xor icebp pop rol push es sbb je cmp movsb push insl dec addr16 mov test dec cwtl test mov dec icebp fstpt into aam mov jge mov jns ret mov mov into mov sub loop out daa xchg xor mov push jp push std mov in imul or xorl or stc cmpsl std in loope sub test lock cmp out mov push mov add cs in movsl (bad) inc insb iret notl inc fidivr in or push pusha push mov jno call xor add lods (bad) ja dec and cld sub rcll push mov dec imul les push xlat lods adc sbb and (bad) addr16 or mov xor inc xorl inc pop imul popf in les pop outsb ljmp mov ret dec jl lds shr cwtl xacquire ret inc fdivr xor loopne xchg inc xor stc aas sub add sbb pop pop in repz push mov (bad) cmp imul fnstenv jnp in fnstenv fild add aas sahf jle mov mov add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push aas sbb ret (bad) icebp adc fdivl xor mov pushf sbb popf rcr shrl dec cmp fst sbb dec repz mov add lock add scas pusha leave adc hlt push ds lds insb mov pushl hlt sbb aaa mov jb das aad push stos lock scas movsb lea aad arpl dec xor pop bound arpl jl int pop in lea jge mov je sarb outsl hlt jge jae dec cmp imul pop bound fmuls hlt mov lods int3 push add shrb dec (bad) loope (bad) adc sub adc mov push std scas jge jmp or gs lods test mov xor imul arpl pop lds out insb into bswap (bad) ja js stos int3 scas bound rcll loop stc lcall js cmpsl add mov test sbb sub mov push dec or stos test adc xadd jb mov notl or inc pop lds mov inc je fild adc lcall scas adc cmp cwtl test mov repnz push pop jmp aam inc adc sahf roll sahf push bound loope test lods clc dec mull (bad) inc inc mov (bad) lock and jb dec add push dec rorl dec sti pop xor adc pop sub fdivs adc xor sbb mov xor adc and jecxz out lds out lods pop out pop imul nop jne rolb in lea mov sub sarl sub xlat lock jmp push stc cmpsl daa mov cli in imul push jle jmp fdivs inc fistl test inc mov dec sub jae outsl ss aas mov (bad) xchg loopne lahf add leave lret push fadds and push aam and popf mov push std adc insb aaa mov sbb xchg ret movsb int3 aad lea pusha test arpl inc (bad) mov pop popf jnp inc aaa xchg jns push lcall sub jecxz loopne fs roll faddp xor push and add mov lds jns bound xchg mov add rcl push push pop dec and and movb mov shrb cs in push lods leave lods jmp or add enter dec fs inc lahf cmpsb jmp xor jno mov mov mov jns pop rcrb movsl add cli cmc repz mov inc jge mov icebp rcrl fstl mov stos push clc insb mulb xchg or aas mull in lret je lds mov std loopne outsb bound ljmp pop pop xchg subl inc divb mov test data16 xchg mov stc aam int3 sub cmpsl (bad) sbbl repz decb adc sbb stos lods push fdivrl (bad) aas pop and mov out fdivs addl dec arpl sub imul jno lcall xchg scas in jns mov xor stos mov mov lahf inc mov dec ret mov xchg add and jo mov (bad) movsl cmpl pop and mov xchg pop push pop imul mov test xchg lret je and test loopne adc inc loope (bad) lret dec clc fcoms aas jbe pop iret push loopw jbe fwait mov xor dec add cmp fwait (bad) cli popa cwtl test int3 clc and arpl push lret xchg xor (bad) sbb mov sbb out imul xor add mov out jno dec push or sbb imul xchg es lahf pusha mov (bad) mov cmp (bad) out test lret mov mov popa push push cwtl jo sysexit bound leave mov lahf je jmp pop xchg or rorl mov mov loope cmp add lea divb xor out test ss inc add mov (bad) outsl mov int jae fdivl sub and ds add dec push fwait cli test cmp popa jmp icebp out pushf ds incb stos cmpsl sbb dec lret pop mov mov pop mov cmp aad mov insl pop ss xorl cmp xchg inc and pop je xchg mov lods xchg or mov jo mov and icebp in cmpsb cs sub clc aad jae outsb cld mov jle mov insb and into cmp cli loop xchg popa cmp mov mov xchg push outsb (bad) orl adc lcall inc pop push cmp divb xchg dec push mov sarl xor inc imul faddl aad cmp dec subl cld or push mov xor (bad) pop out push xor lret dec pop jl sub xchg cli lods pop out xchg mov dec icebp in cmp outsb mov and mov xchg (bad) cltd outsl lods jp in shr dec jmp xchg int adc rolb xor adc ret daa dec mov cmp pop mov mov loopne mov mov lea push pop notl clc in ja call lahf ficomp outsl sbbl in lahf lret and xchg ljmp jge jecxz xor pop cmp xchg cmp lcall leave bound arpl mov sbb sbb xchg cmc rcr imul cmp scas inc xchg test dec outsb push fistp stc push pushf pop cmp rorb adc cwtl mov (bad) push rcrl pop out sbb rcr (bad) adc (bad) je adc sbb arpl mov push cs sbb adc lret and inc push fnstenv pop jmp call cltd cmc cmp mov cmp rcrl cmp stos sti push icebp mov in cmp out inc aaa aaa mov adc (bad) xor pop add cmp push fmull into imul enter mov jmp mov dec jbe xchg xchg (bad) ds pop xor xlat pop xor fmull addr16 popl pop dec mov mov pop call xchg (bad) lods cwtl inc jmp ljmp not cmp pusha mov mov mov cmp sub orl jne xchg sbb aam xchg xchg xlat jl ds test enter pop arpl call pop mov sub cmove loope xchg rcr lcall dec add push pop and jecxz pop mov addr16 and xchg mov repnz in imul jae or (bad) cmpsl add insl jmp in fucomip xchg (bad) mov add lret pop xor sub sbb loopne jno,pt (bad) or cmpsb sub hlt test jecxz (bad) jle rclb out jae push rclb inc test push push pop dec mov inc cmp insl aad lret movsl mov xor mov dec mov movsb xchg aas add enter nop popf aam ret or add and sbb sbb lret adc jne dec je mov cs lods pop pop mov ljmp sub xchg dec lret xchg xor add inc cli gs and insl ss push jle cli bound cmp mulb push cltd add lcall popf (bad) packsswb movsb lahf adc cwtl mov fistp aas pminsw hlt cmp daa fs fucomi sub add inc arpl cmp rcll mov push cs arpl ss mov decb cmc daa xor out xchg xor jmp test (bad) sub jbe call push jp lret fcoms pop movsb or cwtl push ret push enter adc test dec add push lods or fs xchg test shlb je dec pop fimul jae rcl sarl hlt cli fsubs jnp adc inc pushf int adc nop mov popl and clc xchg int3 cld push jbe adc inc cmp shl fsts loopne in push loopne outsl push mov jge test mov ljmp sbb call imul pop pop xor and xor jmp pop mov pop decb int xlat pushf jg jl cmp (bad) mov and cmp pop loopne hlt pop add mov mov jbe lahf fsubs aas adc popf mov and add int3 mov (bad) aam int cmpsb stc dec mov pop iret adc mov sub repz enter dec jne (bad) mov imul (bad) divb or or fisubrl dec mov pop xor cwtl sbb or sbb cli aad insl fidiv stos ror (bad) pop cli out push adc daa shrl in ret add push mov mov xor xlat xor jbe adc mov cmp and cli lods sub (bad) adc int lods xchg cltd mov inc inc mov cltd sbb jbe lods pop push sub push mov idivl out sti stos xchg (bad) shll add cld in adc test sbb in xchg xor arpl out cmp and jne mov imul lea cmp icebp and ret bound imul rorl and lcall test je icebp fnstsw xor rcr loopne std cltd mov lods mov xchg lock sahf aam lret stos adc pop xchg jnp out mov or mov jae sub cmp jo fs loopne in cmp out jl and (bad) sub jae lods movsl loopne mov negl (bad) ficomp das jp sar xor int3 out int inc ja arpl rcrl lret or test add ret jae imul push pop clc xchg push mov int3 aas mov shlb insb push sbb or dec test jle inc mov fsubr or dec mov inc shr (bad) mov sub and aaa sbb mov xchg daa adc addl outsl cltd outsb push cs pop movsb gs pop into dec cmp repz adc in inc test stos (bad) xchg adc jno test xchg sub test es enter mov mov push bound jg cld cwtl test jns xor bound dec pop fs adc aas cmpsl scas jp out (bad) ljmp fistpl and std cmp mov insl js and sbb pop xor out cmc sub lahf mov fs xor imul stc in icebp out fisubl (bad) jmp imul xchg adc cwtl push call or mov pop inc nop sbb add mov sbb mov push xor jb mov aaa jmp lock mov rol jne xchg mov fisubrl nop das cld icebp sbb loopne mov clc jb gs aam add xor or xor adc pushf mov (bad) jb,pt aas mov pop pop ss popa rclw or pop or in (bad) out cltd mov sbb lahf pusha sub insb int3 aaa xchg (bad) cwtl add sub ret adc leave push push imul iret mov mov xchg sub loop and push pop or fldcw add lcall popa (bad) iret ret ret dec imul popf or sbb inc push and in lods shll lock cmpsl sbb rclb mov push sub mov sub test shlb in push push fist gs add test out je add (bad) pop cmp std dec pop xchg cli pop cltd (bad) (bad) xlat xorb lea sbb push adc mov cmpsb inc aaa clc repnz adc push das pop jge add or adc mov cli insb lret mov ja xor lods aad outsl hlt sarl ret push adc pop clc and (bad) div mov add push push xchg mov ret (bad) xor and and repnz int3 cmp subl les cmp mov mov sbb mov sub dec arpl dec jle cmp dec (bad) (bad) fs fimul jbe sub or test cmp or mov pop insl jge mov jmp jb jmp daa xchg xor pop je fwait dec les add sub insl arpl inc sarb imul movsb lock push mov out js pushl mov dec mov mov sub loop loopne push movsl (bad) std movsl xchg shrl mov (bad) xchg pop into xor mov jns imull inc sbb jmp pop fdivrs adc stc call lret pop push fadd push fwait int xchg push mov xchg arpl in pop inc dec lods inc pushf sbb outsl and mov test popa adcb xchg push inc push not lea or dec mov push mov shlb icebp xlat sbb aam jne rcrb jle fsubp aaa mov adc out fisubr loop or inc cmp pop iret mov fisubrl push pop pushf cmpsl pop fisubrl lcall (bad) (bad) aas sbb call dec push sub (bad) xor in push cmp jns aam xchg mov dec add fwait int mov sar mov cmp jg add mov (bad) fidivrl adc ds andl ss sub pop test cmp jle mov xor cmpsb cmpb xlat cmp decb aaa and fist mov push loope jb (bad) mov jnp xorb jae dec into lock ljmp and outsl notl cmpsb push mov lea or push aad ljmp add das (bad) gs mov mov and ljmp notb (bad) pusha sub mov (bad) loope mov dec mov out loopne push sbb mov nop and mov cmp push (bad) negb shll repnz jo or in dec cmpsl loope add dec jg lahf ja cmp mov pusha dec fldcw ja mov mov das pop mov mov das pop mov cld pop notl mov add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push aas sbb rolb ror jmp popf sbb dec insl cmp cwtl outsb rcrl icebp fbld out jge (bad) jmp sbb add or pop push clc dec jo faddl dec adc adc jno cld mov outsb (bad) cmp inc fwait dec mov rcrl (bad) lods aam inc mov or xlat aaa out xorb or push mov adc sub aam jnp add dec sbb icebp out cmp add scas sub push xchg fisttpl or roll enter or lock (bad) iret and test fchs pushf mov adc cltd (bad) stos loopne rcll push scas int3 xor dec fimull inc cmp or and pop xor int3 push pop pop fidivl ficompl in out sbb popf test mov adc sub test in and or mov xchg into pop lock scas nop (bad) ficomp ret ljmp sub andl arpl ljmp dec nop sub test movsb inc dec adc lret pop data16 aad bound test (bad) sbb stos out mov outsb fsubrl subl jl sub ficomp mov jne stc shll and daa rol (bad) (bad) stos (bad) or cmp xchg ljmp push test shrb and scas xchg sub shrl mov dec outsl xlat cs cwtl dec mov jnp mov mov inc test movsb mov mov cmp or sub bound sub mov inc sbb and sahf (bad) ljmp mov cmp cli rcrl imul and daa lock (bad) dec (bad) (bad) je scas lret and rorb sub out mov jl jne dec fcmovnb lock and push data16 (bad) aas cmp nop popa mov sahf xchg lahf mov gs inc aas xchg outsb pop push aas loope push sub and cs push addr16 (bad) aad pusha xor or movsl inc aam inc notl mov xor outsb and cmp cmp jb mov cmp push push push adc mov lcall js cld fistp push inc jo sbb sub sub das movb sbb and (bad) sub in fwait and mov mov scas and pop and xor popf inc out test in add dec mov fimull or cmp fisub pop fbstp mov or mov xchg pop stos jne xor lahf (bad) mov paddsb lcall xchg lock stc scas mov jmp imul or and and sbb aad insl hlt ror mov or mov cs adc ret movsb cmpsb pushf scas out cmp push inc xchg xor sub clc ret cmp lods into idivl cmpl stos sahf bound fcmovnbe inc into (bad) data16 cmp nop dec dec jb aaa test inc movsl mov loopne fistp sbb add push xor add fstpt sbb dec pusha adc jge mov dec add jp xchg std fnop js xor inc (bad) xor jge adc sarb (bad) adc pushf push mov jmp pop pop xchg fsub iret (bad) in insb pop dec adc add rorw clc pop cmpsl arpl pop push dec sub jmp and aam movsb xchg into jne in adc popf pop bound push jne add inc pop add cmpsb mov dec gs xchg jl xor jmp leave xchg sarb mov es addl fstpl int (bad) xchg dec push loope in aas in lds jmp mov add push push jae xchg outsl cmp push mov fucomi sub fisttp push add and jae movsb cwtl adc ss ja adc xchg push addr16 dec add adc cmp lea insb jbe int3 or mov sub out inc mov sub inc loope and xlat add push scas inc dec int jo jg movsl stos mov xchg pshufw jno ljmp push out ret call mov add cld xor sub lea repz xchg ljmp shll jno mov out dec mov mov pop loop xlat lods and jae pusha movsb in jo loop sub fsub ficoml cmp loop sbbb je pop xchg in mov or dec push repnz gs or mov mov jne out sbb aad xor dec lds lock out add pop dec add lods jno ja arpl scas pushf cli and mov fwait shlb jmp cmpsl dec outsl push sub sub jb mov sub mov sub lcall xor push (bad) enter pop outsl lcall jl push clc scas jmp cmp cltd push repnz or sbb aad mov jae (bad) add dec ss in dec mov in mov in cmp cmp int stos lds add mov loope cltd cltd insb das mov push arpl leave arpl xchg (bad) fadds xlat (bad) xor pop cmp ds push and or pop sbb pushf lcall and les xor cld xchg adc fisttpl lcall cwtl lods fimull imul into insl mov inc dec mov push jge out sahf leave (bad) int3 loope scas icebp pop mov pop and add (bad) lcall mov aaa jne and or call ljmp cmp nop mov mov mov cwtl neg sbb fadds test lods sub and mov xlat out jae bound aad push push movsl daa xlat cmc lahf das xchg std mov (bad) xchg (bad) push ja lret rcr (bad) gs in jle in call xchg pop sti fwait sahf (bad) cld add dec adc xor lods mov insb outsl arpl mov mov leave lret sbbl ficomp ljmp xor adc aad mov sahf testb in clc leave negb insl in sti push pop into sbbl lret mov in lds push mov ss rol inc hlt sub or inc mov sbb and push scas jl imul ljmp scas adc jbe push (bad) je mov pop and jecxz lret pop mov or cmp fwait outsl outsb inc movsl and out adc cmp mov inc out es fisubr or push add jo (bad) cltd push mov lahf mov outsb sbb lahf jae in mov mov pop test and lcall aad cmpsb gs mov inc movsl in and mov incl push xor test mov mov cltd test or xchg xor add stos add bound jge xor roll ljmp fldenv loop push jge jp xchg call and cmc or adc ficompl loop enter mov mov and dec pop sbb sahf cmc mov mov mov inc inc fidivrl push cmp mov enter add jo or cmpsl js insb popf ret push sub mov sub pop jbe,pn outsl aas mov mov call cmp addl in notl imul lcall imul cld movsl repz xchg lret inc fs add sub lret sbb mov push addb std inc pop repz arpl pop faddl fucomip pop imul outsb mov sub jecxz dec rol xchg push js cmp pop bound mov mov mov bound insl inc push (bad) cld xchg mov jmp mov cli (bad) stos cmp jne xor jnp push into sub ret mov push dec pop jbe and popl jge rcl fisubr jecxz orl cmp fidivr stos enter xor jg ficomp jl or inc and jmp cmp aad (bad) ja jns xor inc mov inc imull lea add xchg cmp jns ljmp std in fdivrl lods into sub adc dec arpl inc loope sub cld add lcall mov lds stos jb add rcrb xchg fscale lret jg push xchg or sahf and in aaa lea out shrl int3 add sbb push or jecxz push sbb push xorl lock jnp mov shr mov push out scas sub stc in mov pop mov lahf mov inc adc (bad) pop pop mov sub stc xchg out mov fiadd cmp (bad) sbb sar xchg fwait (bad) data16 in dec adc (bad) hlt mov xchg or shrl jg arpl jmp sahf xchg sub mov out push loop faddl push and xor adc jnp xchg dec mov add (bad) inc cmp loop ret jge leave dec (bad) dec push mov jmp mov xchg (bad) mov pop dec nop jp loop test in sbb sbb fisubr jne pop and cmp fdivl imul or push jp dec and mov jg mov mov leave test mov mov adc mov out scas push mov pop adc xchg das ss xchg inc jbe fwait divb pop cmpsb cltd mov sbb cwtl imul jecxz inc jno std out dec inc mov jo ret lret xchg cli adc dec push mov or xchg adc das cld xor ror mov dec push in out sbb leave movsl test jmp fiadd je outsb jae shrb (bad) out scas stc push add arpl mov add xchg xchg dec sub movsb push gs call loopne mov pop xor insl xor push into aaa out fwait es data16 dec pop call imul inc dec pop pop loope cmp sbb out bound fwait push arpl ds xchg imul jb in enter push pop notb negb push mov nop addr16 cmp dec xor mov ljmp clc adc aaa stos cs xchg cmc cltd lods (bad) repnz jecxz stos inc xor jl nop in mov (bad) pop pop aaa pop test aad jno inc rolb imul ljmp scas clc mov and sbbl stc shl in or in and mov into daa jg pop fbld aam xor xor dec mov divl sbb test cmpsb add xor dec loope es icebp ss sbb (bad) jae aam lds fwait lock fisubr es lock and out aaa call cli sahf jge lret test stc rorb sub jle xchg (bad) repz push and negl lods xor je mov leave imulb mov inc sbb pop pusha sbb mov stos mov int3 loopne inc xlat mov inc jae xchg dec fcmove fmuls mov xor aas lods pop mov mov push xchg cld mov (bad) jmp xlat lcall jne fwait clc shrb lds sbb hlt jo push jle add fldt jl ljmp int out or lods leave sub stc mov jle xor ficompl das mov shrl ret sub push sbb mov (bad) push ds into adc fcoml adc retw stc mov sbb mov mov xchg sub xchg (bad) out movsl sub (bad) mov imul and iret ds lods cmp daa inc dec mov cmp xor jl ja lock gs (bad) jne pop fcoml out cmp xor jnp push mov (bad) cmpsl push cmp sbb mov mov mov fisubl mov rol int icebp outsb gs mov sub sub fdivl mov in push lods or add clc mov push je mov lahf jno popf jns imul leave in xchg push dec adc lock icebp and sub clc mov sti orl js or inc xchg pop orl out jbe dec sbb or or call lahf clc add repnz xchg gs test hlt sbb push adc daa jno sbb jnp pop mov mov ds mov cmp (bad) cmc jne sbb xchg lret mov inc cltd das push push fcmovne mov addr16 mov into ret sub outsb les jne jne (bad) fmul adc or rcr push mov loopne das dec fnop jne cmp jne das mov out shlb or push das cld stos das pusha xor mov inc mov insb in xchg insl call jmp push push mov insb push iret pop into mov repz mov popa cmp clc fs adc mov loope lcall xchg (bad) arpl mov insb jae push xchg pop mov test add cmc movl dec sub adc fild pop adc mov pop fnstenv imul dec out or pop mov sbb jnp (bad) into or popa xchg je (bad) add sub enter out jb push arpl movl jl enter xchg arpl jge xchg (bad) adc sub inc dec and nop fnstenv vmovlps sahf stos mov lcall mov das push push daa negb hlt outsl mov lcall jne jp sub (bad) lock mov outsb rclb push jge (bad) frstor cmp daa addr16 out mov mov int in aam dec adc out adc cmp mov or pop repz (bad) jg hlt in fnstenv jnp in fnstenv jnp in decl add jg repz jl adc add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fistl add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb rolb xchg (bad) xor cmpsl xchg xchg fstpl cmpsl mov mov insl xor dec jnp iret rep cmp jg out jns jle add les xor mov fisubl cmp adc stos cmp mov mov pop out pop movsb mov rorb lahf mov arpl xor mov sbb mov dec mov cmpsb outsb into aaa jo,pn dec xor inc das mov xchg cmp repnz js jmp das orl mov push push arpl add daa sub (bad) dec dec mov and and dec outsb sbb jmp data16 sahf add call mov push aad mov jnp adc mov mov adc mov lret cwtl adc dec push add popa outsl mov fbld mov mov pop pop push pop roll cmp dec mov aas repnz fidivl mov les test ret sub insb ficom sbb xchg adcl mov fisubrl mov sbb sbb xchg cmovns mov mov out jmp pop and outsb mov cmp or pop xchg mov pushl ds push pop les movl jl ficoml out cmp jnp mov sbb cli mov mov mov decb out adc negl sbbl mov dec mov mov jno jp sub imul popa scas jmp (bad) pop (bad) jo lahf pop adc mov jae daa shll (bad) (bad) (bad) add int pop scas mov mov jge jmp sahf outsl inc (bad) test add popa add fild out daa fldenv and dec rol fs mov xor xchg dec ret pushf pop push cld nop push sbb bts mov rcl lods js outsl push or push sub xor adc fwait ss out scas mov pop mov sub and repnz add pop test out ret adc (bad) pop jecxz sub lahf mov mov test in jle push dec pop mov and mov sbb xor das mov jge pusha dec scas dec xchg and in clc or dec sbb cmp sbb dec add mov pop adc in xchg adc dec sbb sbb sti sbb shlb adc gs sbb test int3 add iret shlb cli sarl insl std pop push add mov loope in fistpll insb jbe lock mov or popa jae insl push jmp (bad) ss pop jecxz insb xor sub and xchg jecxz mov or mov cmc stc clc or call push out xchg push lock pop jl (bad) and mov lcall push outsb jmp cmc cmpsl popa in cli mov inc mov popa repnz (bad) outsl ja clc jbe mov adc (bad) cmp out add jg or jecxz popf add cli or inc fwait ret jg test and sbb jae mov xchg rcll xlat and andl enter lahf ja fs mov cmp cmp pop (bad) and xchg mov push mov or lcall mov adc xchg aaa pop loope aaa mov js fcoml sbbl and repz je xchg sarb mov xor jecxz push jnp jl push push adc mov popa out jle mov push mov cmp je or pop mov flds lea les sub dec xchg pop inc push pop cld out cmpsb into (bad) in push icebp arpl sbb cmpsl add mov ds int dec jg fidivrl andl xrelease dec test test or jno cmpsl into jp jae cmp sub test loop inc int cmp or cld lret pop cmc mov cmp sbb mov in pop pop aas jnp cmc lret push ret lret dec loop xor and jmp push outsl fsts dec jae jp cmp xchg ret inc mov (bad) ja in and sbbl jnp mov mov les jmp (bad) push (bad) add adc sub lcall dec rorl mov cmp fcmovu mov mov sbbl sub pop dec sub clc popa push jle jb jne bound sub pop lcall (bad) jno xor mov cmp jecxz push out sbb pop sub shrl xor pushf out js hlt push aad adc mov mov aad sbb sub aaa out std add mov add inc fcomps sub mov inc inc cmp loopne in stos xorl cwtl cmp repnz mov mov xor out jg lods lret jg xor xchg imul mov cmpsb ror int cmp pop jae ror mov jbe aaa inc dec fist pusha xor (bad) fcmovu jb cmp mov sbb orb cld or jne sbb into (bad) mov adc sarb push pop test jle sbb dec arpl stos aaa sbb jg leave leave popl and mov mov jns es (bad) mov pop (bad) mov push gs orb mov push adc vdivpd sbb push mov sbb push xchg pushl wbinvd mov mov xchg dec xor cmp and pop pusha insl push out sbb ret cmp mov fwait movsb rcr sub lret mov lods icebp xchg jecxz push sub das in push cmpsl or adcl (bad) jge or or loop inc int3 push xor pop popf add dec (bad) jmp lcall std dec pop adc imulb cmp jg mov (bad) lret test pop add in hlt loop mov or push fidiv lret mov adc and movsb int3 std dec ret pop in ret or leave in cmpsl sbb out xor leave xchg jmp test adc mov rcl mov (bad) mov adc push out xchg daa daa mov js aad inc mul leave cwtl test jg mov push and push faddl or jl inc add popf lcall pop inc push mov xchg popa nop test lods cs outsb outsl sbb pop inc inc mov xor int3 test sub or add js hlt dec lahf ss cmp xchg jl data16 sbb loopne sbb jb sub call fdivl enter (bad) je add cwtl fwait mov shll jno imul pop loopne (bad) push and push popa inc insl push rol inc loopne xchg mov jmp popa xchg xchg jle fisubr into or lcall outsl les or repz imul icebp sbb sub pop pop mov dec xchg stc pop imul outsb negl mov lods jae je mov cmp int3 fwait insl (bad) mov xor movsb sub sbb fs jp xor imul hlt push jne push push add test stos jns outsb mov rcr and jne shrb inc push push (bad) lret aaa lcall mov add and out (bad) (bad) xor push ret lods mov stos mov dec sbb sti xchg lret (bad) cmp sbb cltd ret test push push scas sub jne fcmovnb or into aas inc mov jecxz jmp loopne mov je inc mov dec jbe push cld mov punpcklbw sbb sub lret fwait lds shlb add test adc xchg push stos cltd mov and mov add cmp into pop test loope mov add dec shrb jae scas cmp push mov addr16 dec mov mov movsb cmp call jle mov and mov adc jnp cmpl push aas pop fdivs bnd xchg sub ret jle int3 scas (bad) insb test mov inc sub icebp inc inc cmp push mov scas imul mov mov mov add mov je pop add aaa mov inc aas stos mov in fildl cmp cmp mov scas or mov jp xor push in pop mov sbb sti push in mov stc sub dec cmpsb fbstp mov pop pop xor mov sub push jg xchg insb xor psubb cmc sbb sub xlat mov popf ret xlat mov ja in cli (bad) sbb pop push ffreep imul icebp pop clc ret popf int in stos mov sbb and mov mov cmp cs pop clc jmp (bad) jnp aas mov je push mov out xor gs sbb dec sub out data16 aas dec sub push cmpsl jnp xchg mov pop (bad) jmp lret shll lods jg (bad) push sub mov xchg push pop xchg or cltd add das jne in push movsl sub sbb or jno mov and adc add leave adc mov lods mov (bad) je (bad) scas aaa loope jg xor mov xchg jns jg or mov arpl mov xlat outsl cmp enter and jge testb insl or xchg mov rep cltd pop subb pushf sbb mov jb je enter add gs jo ret mov fsubl pop push cmp dec push dec inc mov lods or cmp subl cmp lods ds call ret sub (bad) jne jbe ss dec jno mov int push test xchg lds dec (bad) cmp xor push dec jg jp jne unpckhps push xchg outsb dec cmp out cmp mov (bad) sub or xor add adc push jns (bad) dec fwait enter push cmp pop shll fnstsw (bad) xor in movsb xor jecxz push mov mov and push cld push (bad) sub mov ljmp or mov xchg or je dec out aam loop lret fs test popf je lods stos mull pop (bad) in rcl aam lods or fisub sub lea add out sarl cmp adc pop mov stos or dec repz stc and cmp sti sub lock pop fbld into cmpsb jae add mov lods adc mov jg (bad) jmp mov sbb inc push pop jl jnp and movsl fstl aad outsl (bad) loop xor in pop jg in add xor mov lahf out mov xchg call mov push ss ds lahf xchg pop int3 fidiv bound jae stos mull xor aaa pop xor dec mov in mov into dec test ljmp icebp pop mov aas loopne pop test fs jne sti ds xchg mov insl sti fwait repnz inc cmp pop mov push jbe divl lret iret call outsb lods jle sbb dec mov adc pop mov adc sbb sub or add mov or es pop shrl mov mov (bad) repnz jp cmpsl push and (bad) iret push inc jge in mov rorb lods ds jle inc in sub jo sbb (bad) push xchg outsl lods xlat sub (bad) mov cmp loopne aas pop mov ss mov xor aad jnp pusha inc xor fbstp loopne jno stos stc inc rclb hlt add ds int3 jp sbb nop fbstp enter test mov and cmp inc jle fiadd addr16 enter outsb (bad) cmovs rcr std cmp (bad) outsb fidivr and out and inc adc test xor push xchg lods pop icebp test lods icebp loop adc cmp mov jge movsl leave adc and mov fisttpll (bad) mov mov (bad) or outsl push cmp loop and jl popf xchg mov adc mov jbe out inc cmp adc int cmp fstpl add mov sbb or jl jae loope pushf call scas sbb push inc aam es jmp mov jl dec jecxz dec test lods xor and pop stos cwtl (bad) sub mov mov dec push sub lret (bad) inc stos inc jge insb in ja dec shlb popa adc sarl inc scas mov sbb jno test fwait ja dec clc in inc adc cs lock aaa inc aaa sub aad pop jb enter clc mov inc pop mov icebp imul lds mov ret pop divl mov fwait (bad) cmp insb mov (bad) lock mov arpl outsb insb fsubr mov add mov inc fwait add loope fcompl fs push int3 scas mov and push jl cmpsb cmp adc test dec movsb push xchg test cltd or divl xchg iret pop ljmp clc cmp lcall out add cmp push std iret add mov rol mov inc pop dec pop mov jmp repnz push fldt ljmp rolb push and cmp popf (bad) xor xchg sub into sub xor leave cmpsb cmp cmp xchg cmp pop mov pop cmpsl movsb cmpsl ds mov loope xchg cmpsl imul mov fsubr xchg stos push jg mov push cmp daa out mov js (bad) roll dec icebp xchg adc mov ss lcall mov jmp mov scas ret mull lods mov xchg das pop inc call pop xchg or push rcr loope fiadd stos paddsw shrl and out leave or add xchg add imul fnstenv jnp in fnstenv jnp incl add aas xor notb add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push pop adc add and fstpl mov lea xorb mov dec imul fstp fstl jno (bad) jno add xor ljmp rcrl adc out xchg push push or je in mov ja jne (bad) mov movsl xchg xchg mov packuswb or inc sub scas into cltd dec xchg in int add or cmp pop push inc cmp into mov inc stos add flds addr16 xor or lahf insl jle pop pop mov push test out push scas mov sub lods xchg add push repz inc mov sar iret xchg fildll int movsl outsb fbld xor cld add pop fwait ljmp insl fcmovnbe jo xlat sbb mov rcr loopne icebp test mov mov adc bound (bad) fidivrl mov mov jmp stos lcall sti (bad) mov mov mov nop dec mov cltd in pushf fmul rclb pop cli inc pushf enter and out sti or sub dec nop (bad) mov cmc lods cs cld mov pop mov fwait and add ja push add or in rcr push in push iret sti xchg push xchg fsts jns fimul in bound add jb mov inc jecxz dec and mov xchg xchg pop loopne cmp push jb cmp or outsl into test cmp fwait push mov mov dec outsb lds add leave and dec je popf into in mov inc movsb xchg dec daa imul outsb lea testl or jo fbstp in pop jbe hlt rolb and xor adc popf stos mov and jl sub push enter push adc mov cs or fsubr test movsl add jns and sub mov push adc mov loop das mov add dec cmp xorb xor js imul pop lock aam jmp jnp arpl pop cmp lret fldl (bad) jmp movsb jl clc cli fwait popf xor (bad) xchg sarb mov push push jb cmp mov stos lret fldenv jo addl cmp scas sbb (bad) mov jbe fidiv push popa imul gs jbe cli lock imul inc movsl sbb in fnstsw jmp pop imul pop or loope jo leave pmullw fnstenv sub sahf sub sbb xor lcall repz pop fistl fs mov pop push inc sub scas (bad) sub mov lods push insb sub xor cmp xchg fdivrp cs inc or adc icebp jecxz mov add dec sub pop pop adc bound jp cmp dec xchg dec push daa (bad) mov call lds push popf mov jae pusha cmp aam lock fldenv push inc cmp rcll clc (bad) xor test enter xchg xchg dec movsb lret jg and out outsl cli out sub insb push dec shrb call xchg add neg mov mov pushf pop dec jp js in sub clc repz test sahf jmp icebp aad push cmp jo sub fistl bound or xchg mov in sbb gs push add imul jecxz fbstp inc insb out mov divb std push fcmovnu jge arpl mov pop das outsl das in enter dec xor fdivrs and inc lahf (bad) scas push data16 sub js cmp cld (bad) sbb pop xchg roll nop xchg sbb stos xor stos aad loopne inc ja bound ret xchg pop inc and adc mov sbb jge in (bad) roll test push xchg cmp minps orl mov pop xor push scas mov lcall xchg or cmpsl (bad) push or sub mov test sub lcall mov inc cmp xor pop mov lret or push ljmp pop sub mov in popa jbe aaa mov adcb enter adc iret xor movsl ret (bad) not adcb mov outsl adc mov (bad) push jmp ret sub cli fwait xor int3 (bad) push jb push outsl jb xchg cmc jle cmp mov cmp sub ja imul repz mov pop mov ret jp jns pop in cltd push mov add push imul stc out imul cmpsb (bad) je daa out or jns xchg mov jle cmp daa fcompl std jns (bad) les lea or cmp or in cmpsb dec sbb test sbb into cmp sub movsl push mov (bad) and sti icebp dec rorb mov jbe or jb pop mov ds cmpsb dec mov ficom dec pusha test xor jmp aaa aam cld cmpsl inc test xchg in ja imul inc lea mov loop in repnz pop dec es mov and scas enter (bad) cmp sbb lea int3 adc or mov out js jge pop push test push xchg (bad) inc add ja std (bad) jbe iret (bad) xlat enter fisttpl sbb push test sub shrb fchs icebp jmp jg sti adc mov inc insb fmul cmp and adc popf mov jns inc dec leave outsl (bad) fistp dec (bad) cli sub call fstps test push dec adc mov int aaa arpl add in pop push lock pusha push push lret stos dec iret mov jno or fsubl pushf dec iret cmpsb and daa mov icebp call cmp (bad) (bad) xchg xor add mov jg cld push mov jnp cwtl or stc in in adc lcall dec push pop lret cld fcoml sti sbb (bad) jg fdivs cmp and (bad) xchg mov arpl rolb inc mov lea mov add test push jmp dec pop in lea push mov cltd test adc movsl pop pop push test stos int3 mov ret ljmp xor pop aaa mov outsb or (bad) lds xchg and pop fwait ss xchg lret clc mov xchg sbb push cmpb sub add cmc jo stos xchg es shll cmp int3 mov add pushf test in jo fisubr push dec push std mov xor pop ss and and fdivrl jns aas enter ja cmpl cs jae dec mov mov rolb hlt clc xchg js push lods mov loopne stc jmp test xor push mov jmp sarb sbb repnz jb sub sub fs mov aam mulb sub test icebp mov cmpsl into gs sbb mov mov call in xchg mov adc sub add adc data16 sub jbe leave or gs rcr aam (bad) jmp mov lods xor and sahf mov push xor dec mov jo xacquire mov cmp jmp stos jns pop pop jle insb dec jnp outsl (bad) add sbb jmp xor pushl xchg pop jecxz out int jmp nop int xchg inc popf (bad) aaa imul jle loop std push add rorl test mov shll pusha cli jns pop (bad) mov pop rol dec push lret scas rcrl or cmpsl cmp pop in xor (bad) faddp lods enter fst loope notl mov inc sbb out ljmp jb out xor or adc and mov add inc arpl pop mov lods dec negb sbb nop xor mov sbb imul push addr16 sbb scas fwait jno aad dec les rcll inc shlb out enter (bad) or or loopne neg les into push pop xor inc dec or mov das jle adc out jmp aad sahf in sahf push push mov fcmovu test out int aam push sub push mov push pop lahf inc push mov out nop lods nop cltd outsb cltd out sub xor and in std jl mov pop sub mov mov ds (bad) xchg adc xor andl jge aam fdivrl and and loopne in loop xchg int3 divb inc jne jmp xchg or xor or test fldenv stc stos rcll sub push mov incl mov mov cmp mov pop icebp jle xchg add pop (bad) insl push pop jae add test es xlat mov mov in jnp fidivl out sub inc jb mov xor or (bad) and rolb icebp les xor push mov xor jl sarb pop in or xor stos adc xchg (bad) cmpsl xchg mov sahf pop sub ds and mov sbbl fstpt jecxz push adc (bad) or mov fadds outsb cmp lea jg hlt jno imul pop repz inc jle rolb dec lods into lods sbb mulsd cld insl sub pop dec jecxz cli pop xor xor loopne cmp ja add sbb fsubr and xor movsl nop scas movsb sti jmp into jbe in hlt test sti pushl push mov scas idivb jge not lret inc push ds jo movsl dec sub adc push popf dec inc (bad) push shll iret arpl cwtl (bad) neg in in sub enter cmp mov add mov fisttpll inc ja adc lods cmc (bad) outsb mov and fldcw outsb adc lcall fwait push adc push negb jge xor xlat iret push jns loop ja lret aas jno (bad) mov (bad) dec std xor loop test popf div (bad) adc call mov dec insb xchg xchg je adc xchg nop jno subl mov fidivr jge (bad) push sbb leave and push cmp and insb fwait daa cli mov std mov add test mov push pop mov out lds add sti adc and loope mov xchg or pop inc les jae sti shr lahf (bad) or and sub push cmpsb stos push push xchg pop mov bound aam outsb int cmpsb mov movsl pop jp add cmpsl popf mov into (bad) dec jo or iret test in lock imul pop bound sub add lahf push das stc jge sub ret or adc xchg leave cmpsb sbb xchg mov mov adc in dec stc mov cmp inc sbb xor or rclb cmpsl cmpsl cs test gs into add popf loope jl xchg out mov fldt xchg aad pop xor insb pop sahf jmp jno cwtl dec ljmp pop cmpsl xchg scas jmp outsb cld nop xor sbb pop sbb fsts mov cmc pushf xchg mov mov movb (bad) adcl test jecxz enter and cmc enter mov lods mov subl rolb push mov out xchg in mov imull repz mov sub adc lea xchg test xor cmp adc imul mov jle push stos add pop sbb in mov insb je clc jecxz test mov adc add mov inc sbb xor adc inc shr or in cmp pop daa (bad) aas or dec xor jle loope sbb icebp (bad) dec adc and fnsave adc js movsb xchg jp cmp jb adc cs mov pop push std mov inc rsqrtps bound adc ds push inc and dec fdivrl inc fisttp jnp test data16 es mov adc cmc mov das sahf (bad) adc pop (bad) pop or mov pop rorl aam pop jg jnp sbb cld pop rolb jg js insl mov out inc lea xor adc push repnz in and mov aad xchg jno and sbb (bad) jmp out sbb shr int repnz call push xchg dec cmp sahf push mov mov dec movsl outsl int3 iret sbb in pop xchg or dec addr16 add mov xor sbb lods out loopne icebp inc shr pop add (bad) lcall xchg add (bad) pusha cld sbb insl ss xor dec lcall out fisttp sbb jge and dec data16 cmp shl fdivr mov xchg inc gs jbe (bad) ss scas jne mov aam jp ss ret or mov push dec inc jne icebp pop call jne mov push or dec pop cld fs bound lods jb mov enter test sbb or aam xchg mov pop leave lcall test rcll adc lcall mov call jl inc lock push pop pop xchg shrl and mov jmp mov pop or test jnp ljmp jns add sub lcall push xor or outsb ret ss cmpsl mov add inc iret or xchg lods cwtl cmp adc (bad) adc and fsts test (bad) aad outsb mov dec (bad) fmull stc jecxz and clc out push test lret dec jb fwait imul fdiv mov fcmovu sbb mov and adc pop inc das pop mov mov das pop mov mov das (bad) incl add pop jb out xchg aad into add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoms add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb rolb arpl popf cwtl lcall into pushf push rcrl jbe les push fwait out out cwtl fmuls mov div mov mov add xor fwait shl push js xchg lret lods and mov jmp sbb jle add cmp jne arpl cmpsb jae aaa xor imul adc dec or ja sarb dec aad jle scas insb sub clc inc pop and push push dec mov aas out xor std icebp insl jb cmp pop sti sub mov jae or lock jmp mov mov (bad) inc int sub mov sarl std lods imul lret out cld add scas push imul add out cli enter lock iret outsl dec jmp jae jp jns int or inc roll data16 fisubr push xchg push daa sub pop adc int jnp push cli fldt xchg test or cmp sub sub mov mov sub inc mov adc sbb mov xchg or cld xchg outsl dec ret fs jns sahf lret add out or mov icebp aaa out inc repz pop push add jl aam jp jns lcall dec inc xor jne push out mov fldt scas jg arpl pop sbb adcb mov jne xor cmp lods test xchg fwait jp adc mov add stc fdivrl icebp push jb jl xchg mov movsb (bad) add int3 ja or (bad) (bad) sarb jno addr16 sub (bad) fidivrl pop cmp xor pop cltd jl mov stos inc (bad) sub subl ja repz insl jne test or xchg mov mov sub sahf cmp lret pop lcall mov mov test leave hlt dec stos push cmp movsl and shll pop jmp pop std push cmpsl or outsl push lock push or or popa divl lcall loope dec ret cltd adc push lcall les cmp mov or add inc int3 cmp fcomps (bad) mov pop ficompl (bad) test mov push adc mov fnstsw repz mov fwait pusha or mov mov jns adc jo xchg imull aas mov scas (bad) dec dec pop inc scas scas iret dec rcl push lahf jo sbb stos das mov jecxz cmp fnsave dec (bad) sbb add repz aam and (bad) xor pop je cltd cmp loopne stos adc mov aam inc lods and inc push das push inc fwait cmp in popa ret adc cmp xchg jae sub pop pop mov xchg mov cmp mov xlat xor lock push push out pusha call js mov push loope fmull jecxz inc jo or dec (bad) sub push dec mov dec cmpl scas sub in lahf ss loop or dec sti mov es pop loop add lods jns xchg jae pop adc loop jns in mov add sub mov cmc fsubr xor gs imul aad push jne lds jl dec pop lret adc movsb xchg xor daa pop (bad) rcrl into iret aad xchg and mov pop call and stos inc and pop xchg fwait enter stos cwtl sub das test jge lret xchg rcrl dec fs cmpsb xchg or xor mov (bad) jl fs xchg js ljmp test mov cmp stc loope pop inc inc lea fiaddl lds adc fdivl mov in loope,pn rorb (bad) mov je xor ja inc gs xchg mov mov cmp sub mov adcl es (bad) jno ljmp xlat mov inc sub icebp hlt ret out sahf out je xor fcoms and (bad) call push cmpsb std mov imul jle jno jl aam pop lds imul imul (bad) mov mov sbb les (bad) fcomi sbb enter test lcall and mov std test (bad) fistpll inc enter fwait xchg lock ret inc dec (bad) popa cmp (bad) cmp cmc adc fimul (bad) je cmp mov cmp sbb std jae rorl aam fcmovu imull mov dec sbb pushf mov dec in sub (bad) negl cmp jl repz sub int3 push stos mov mov insl cmp es ds stos push jb push pop sub (bad) jle (bad) lods cmp outsl mov lock aas mov pushf cmc ret sub pop arpl push jg (bad) mov nop in sub xchg xchg aam xchg mov and cs inc testb and sahf pop inc or out mov dec mov inc or loope icebp xchg rclb mov lret sti js push mov push test mov pop dec fsts fist dec jns cld xchg out adc cmpsl jae cs adc pop in hlt jecxz or and add xchg popf popf fnsave dec inc movsl icebp aaa int pop pop or fwait out scas dec mov clc ret fmulp dec lahf int3 dec fmulp cmc inc inc sbb and pusha ljmp mov sbb xchg jmp add fwait movsb mov out leave mov jno sbb sub in psrad sbb add mov xchg push incb repnz mov mov fst push shr mov mov das lods jno cmp jae pop or mov mov stc (bad) mov lret jecxz mov int3 shll mov pop (bad) mov stc cmc aad xor rcrl sbbl mov cltd sub fdivrp outsl test mov dec inc aaa push mov insl inc pop jne mov mov mov lock sbb push inc inc dec jg cmp gs sub cmp movsb test cmp out in pop or cmp and mov jne,pt aam insb or push stc pop and movb outsl stc je add lea loop imul fimull xor aad fs cli cmp fcoms jbe sti ljmp movups cwtl fwait call mov push mov jne xchg pop push into mov mov pop jg mov xchg divl movsl add loope pushf jl mov add mov mov jb pop gs cld xor adc test and fdivs sub movsl movsb jmp jle (bad) aas lret pop ljmp xchg data16 test fcoms sbb loopne and lods mov jne dec dec mov cmpsl mov jbe adcb cmp cld push sub xchg mov xchg test pop mov aam xchg push into daa stos xchg outsl scas lea lods cmc inc jno stos fs ja lods out dec adc jbe jmp or xor sub jns and in imull xor mov pop testb add jl aam adc mov cld movsb stos xor jns add inc scas sbb pop and push jl or mov pop (bad) mov pop test popf cmp (bad) dec inc sarb add push push jge ljmp mov les sahf lods mov or fisttp add pop xchg std pop sub (bad) lret mov (bad) dec popf test and lahf cmp addr16 jmp mov (bad) leave jge mov pushf add ficomp dec outsb dec loop mov repz rcrb xchg in ljmp add aam adc jno aam and and mov jle mov ss mov xchg in (bad) test sbb pop jecxz fcmove jo loope adc lret push fcomp inc cli mov int3 sbb jns scas cmp repz fwait push in dec sarl and jbe xchg or xchg xchg pusha dec fist out in das ret aaa cmp mov jmp inc mov (bad) repz cmp dec cmp mov mov icebp test mov ds int3 cmp and das xchg or iret jl and mov fbld add testl add mov mov aas out dec sbb adcl cli ds add jno pop insb popf (bad) (bad) lcall popa pop jno lds cwtl jp mov jne adc ret dec jae testb scas hlt pop lretw rclb mov stos mov scas pop dec mov lds mov data16 dec lcall inc clc or loopne dec hlt shrb jecxz ret sub ficompl lea inc pop in fs fistp insb or mov test push and push inc fst sti pop mov push push push fisttp lock xor leave jle (bad) cmc push mov jg mov leave dec add (bad) pop inc xchg dec (bad) push out test inc ss scas mov fstps lret and mov jns inc cmp push xor insb repz (bad) xor adc xor test jb shr mov ss or fisubrl scas mov ja data16 xchg in jmp shr repnz dec (bad) xchg sbb fnsave dec fistpll insb mov push inc sbb push js sahf nop cmp into and fimull mov dec sbb scas dec test hlt pop push les xchg cli pop dec test xchg xor stos and lret push pop xchg jno sub jge mov (bad) xchg lods (bad) movsl cmpsl out xchg mov xor sub je aaa cld pop inc sbb loop out rorl cld orl es fnstcw in jmp js xchg lret inc inc xchg adc cmp lea repnz mov cmpsb out mov sbb mov jnp,pn jae mov dec mov add push xor das scas xor or sbb push xor pop lcall dec sub loope sbb jns jne adc cltd cltd insb imull mov mov (bad) fwait sub mov xchg scas jmp jne insb cmp pop int3 pop loope sub cmp push insl cmpsl ljmp push int adc mov icebp aas in rolb movsb outsl jae cmp inc sub or mov jae mov push adc sahf cmp adc push daa in dec or pop push inc mov mov stc popf fsubrl push add clc adc (bad) ja jb js sub push mov test sahf dec mov add imul mov inc and pusha pop sub cmc (bad) movsl lcall lcall jp daa es cmp sub cmc out jp stc stos jnp in mov out fildl jno inc mov (bad) pusha call fldl2t in mov and (bad) clc sbb cwtl sbb and push xchg jnp outsl in inc repnz movsl inc push ja fcompl sti and repz pop popl xchg xchg cli add (bad) cmp sbb cmpsb lcall or add sbb out sti adc dec hlt test mov cmp mov pop hlt jbe fadds jbe (bad) jbe stos pop jg and in int3 xor rolb xor std pop lock sub jp push jl movsb jb mov mulps sub rcr dec mov int3 pushf mov pop lock sbb test lods xchg add mov mov push mov push push into mov sbb pop lock (bad) divl adc pop out inc outsl jp cmp cmc push dec jnp (bad) pop adc inc inc test pop negl pop mov xor sbb mov mov icebp jecxz pop imul mov scas addl pop sub fistp pop cld (bad) in (bad) adc les (bad) loop pop mov (bad) mov mov pop push in test std cmc scas loopne pop push punpcklwd mov adc sbb dec stc pop fdivs sub das sbb fidiv xchg sub pop dec push outsl jg xor es inc pop sbb pop loop fmul lcall movsb loope sub mov mull into movb or add dec cmpsl xchg in nop enter adcb jmp fld dec xorl sub aad icebp mov hlt popa stc orl add sub jno fldenv inc movsb dec icebp lds xor sub sbb aad aad cwtl aad leave scas xor daa push mov dec aam mov push add ret (bad) push mov frstor (bad) push xchg sub int xor push je dec cs arpl (bad) mov pop and pop sti gs mov adc fcoml decl in push fcmovb arpl mov outsl (bad) jae icebp int adc (bad) cmpsl cmpsl imul and adcb xor fidivrl dec sub jno pop cmc xchg and lret sbb mov sub aaa cmpl pop push lret js in pop out sub push jb adc iret outsl enter lods or sub ficompl ja leave push xchg ficompl lret sbb xorb push mov cmp sbb pop jmp inc xor add and inc add addr16 ss xor sub dec pop test std cmpsl and dec aas inc loop sbb cmp add negb ret mov cld aam in adc sub jl dec sbb jl (bad) mov les pusha not jle cmp aas test imul popf pushf jle or shrb mov lock pop out ss mov or js adc add outsl push flds daa and inc cmpsb leave mov adc sub mov test push lcall pop xor xor xchg mov mov fidiv jno adc imulb dec jno and je clc dec mov or mov hlt loopne addl push cmp lock addl push cmp lock verr jg fistp push out cld adc add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoms add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb rolb push cmp (bad) imul cmp ja lcall sbb fnstsw fucomp jo mov scas out cmp add add cld imul xlat jmp push mov mov xor stos xlat not dec add mov adc xchg mov jo dec int3 imul lock adc shlb mov rcrb dec jo mov call (bad) push js cmpsl movsb sub dec (bad) (bad) or xor into scas dec xor dec jae pop out es or stc or test lock scas mov sti cmp pusha test or xor cld sub pusha dec and (bad) sbb popa pop and mov popf (bad) mov rcrb pop push inc mov mov sbb aas sbb pusha sbb ldmxcsr mov pop mov sbb ds stos aas out fcoms push dec xlat scas into xchg mov mov pop xchg aaa dec daa adc inc and lret pushf mov push cmc ret pop ret ds sti cld pop cli mov mov sbb add mov or sbb and xchg movsl bound pushf push push mov mov popa movsl call mov lods mov repnz jg fnstenv sub cmp out cltd jp test xlat cmc jns pop enter fwait add shrb xor mov mov das inc adc lds push cwtl scas or addr16 sub lahf mov xchg xchg out xchg or idivl fwait repz xchg jo mov fs and clc cwtl mov inc mov mov xchg es cli pop shlb addr16 clc sbb gs xchg mov pavgw insl ljmp push leave fsubrl mov jb pop imul and cwtl int3 movsl pop arpl hlt hlt cs (bad) insb add mov insl adc xchg jnp mov clc mov rorb ljmp movsl mov enter jl mov xchg xchg daa enter sub adc dec cli mov pop adc bound (bad) repz mov dec out xchg loope xchg xor sbb jne xor push ljmp fwait lret and cwtl cmp push xor dec jb jo test pop outsb scas popf das jns dec or sub pop es mov mov lcall loop add jle in pushf sub test xchg jp popf subl enter inc jns adc mov pop jns jns mov cmp pushf push incb mov test pushf jg pop in cmp sub cmp sub (bad) dec mov inc inc sub pop arpl sbb fs pop adc inc cmp xlat mov cmpsb mov ret push shrl pushf adc and lcall adc aaa dec mov mov pop or cmpxchg mov inc incl push stc popf inc xchg add xchg imul loope mov xchg push xor push and and jnp in mov mov iret and and data16 cmp mov ja pop pop xchg and lea add mov inc sbb mov in fmull mov rorb lods stos fbstp sub pop imul adc push fwait es or cmpsl test fisttp adc nop adc (bad) jo shlb sbb jl das lock imul ja (bad) sbb fcmovbe sbb rcr dec pop or and stc pop sarb and jo int3 cmp sti (bad) push into adc cmc jb je inc xlat cmp adc add out int mov cs xchg push mov mov aas inc icebp adc xchg sbb add adc aad mov mov mov xchg adc out or sub xor rcrb and (bad) bound loop xchg sub xor cli daa cmp sar xor cmp mov ret xor fimul mov pop addr16 (bad) mov daa sbb dec inc xchg inc out mov mov mov outsb adc lret cs jmp jl push pushf repz xchg mov mov addl fwait sbb gs cmp jmp dec sti scas sbb cld hlt loop adc add sub mov xor jbe adc in gs sbb sbb xchg fildl (bad) stc cmp insb xor inc jecxz inc aas jmp sbb test dec in notb ljmp jg outsb pop and or push movsb es lcall cli mov mov mov fidivr mov clc push inc pop mov pop js scas adcl sbb cmpsl popl enter xchg jecxz add scas nopl mov lcall lds cli inc mov jecxz out dec jle push cmp cmp mov push imul lret jb lret gs bound dec inc push mov cld in xchg test pusha imul shlb adc push fistl ds mov mov test in imul mov jnp in aad idivl rcr xorl fs stos xchg or movb fcmove (bad) stos dec jnp fwait (bad) aaa mov cmc push loop xor pushf inc stos in ret mov add pop lods adc mov mov lret mov loop pop hlt rcr mov xchg fdivrl mov dec jge push iret movsl lret or xchg add sti mov lret jne pushf pop ficom jecxz xchg cmpsl push jne cmpl pop push imul les les pop rcl xorl mov pushf test adc out sbb lcall sub loope xor rcll fwait mov sub adc xchg jmp fwait lods cmpsl lahf push jb scas insl dec jl jge add adc sti cld out fstpt xor out jmp and add decb jmp pop cltd ds dec mov (bad) jg es das arpl mov insb leave sbb int3 lock xchg rorl xlat pop je and mov je add dec in insl shrb jb jecxz outsb jp push outsl (bad) icebp sbb sbbl push inc dec cmp fs add push dec add and insl and jnp nopl sbb fisubr xor pop leave jg add mov push and icebp stos mov daa dec sbb cli jge sbb (bad) mov push cmp daa push std insl je test dec xchg popf out pop lcall test aad xchg xor scas push mov xchg jne push jno jns pop xor add mov dec popa imul add (bad) arpl jno cmp test fnop xchg mov adc sbb mov test sbb in into dec test jecxz xchg jle insb cli test fildll push aaa inc sbb in mov (bad) xor push mov mov sbb rclb mov int3 fsts xchg sub add popa mov int aaa data16 adc mov pop pop movsb mov into cmp out inc push pop jecxz push dec dec movsb lds fcom jo stc mov icebp cltd sti pop iret fidiv push add and mov loope xor mov lret mov js jle xor mov pushf push lock imul push (bad) push jmp lahf mov push cltd (bad) mov inc cld lret scas clc lahf push lods adc inc call mov add xchg outsl dec pop loope dec sbb jmp inc test mov xor ss test je jno mov cmp mov in int nop push clc popf divl jae dec incb iret pushf pop jo cmc mov xor dec shr xor push sahf dec mov inc jno loope js cwtl mov repnz fdivp js jp and or pop arpl js outsb out jle sub ss sti add mov inc ret xchg xor (bad) call (bad) mov dec cmpsb jo dec hlt jp daa test cli imul test adc sbb mov (bad) out (bad) xchg xchg in aad mov mov addr16 ja sbb sbb (bad) sub (bad) xor xchg jge adc fstl cmp cmpsb and rcl pop add rorl inc scas fsubl sub cwtl adc mov jp lds xor push gs mov adc out mov addr16 out lret sub mulps push je pop cli sbb or push je lret dec aam cmc jo mov push cmpsl cmc pop lods lret movsl sub neg cmp sbb je lret push pop sbb repz inc lahf iret push cmp mul (bad) ficoml imulb mov mov ret mov xchg pop adc das mov adc dec dec pushf scas or cwtl int add loop mov roll push mov and pop mov sbb push inc push mov pop data16 mov push loopne paddsb mov pop (bad) mull add pop mov dec lcall push dec ret xchg push sarb push mov sub outsl mov mov add sub faddp mov pmaddwd cmc or mov push fbstp jl fucom xor stc jp mov or push mov jb test imull and insl push sub add jmp out cmpsl out fiadd add and lds mov shlb jo mov mov lahf scas add mov mov and mov mov jns mov inc (bad) mov and add cmp rcrb xchg and pop mov stc adc pop fsubrs sti out cmp cltd enter xor cmpsl and and pushf cmpsb xor push xor inc jne (bad) repz mov popf (bad) adc enter sahf dec lahf insb inc idivb (bad) icebp movsb jecxz lcall pop sbb jg stc scas (bad) jnp push add fist loop mov cmpsl aas rorl xor sti in shr pusha jno mov pop cltd mov scas movsb sub mov pop fstps adc xor jne outsl push xchg and (bad) mov xor cltd and jge adc lret into adc lock pushf orl aam jbe out ljmp pushf addr16 test and sbb cmp clc in mov leave adc xchg je dec test sbb xchg mov aaa jl ds cmpsl popa aam and jnp push jbe cmp inc xchg xor popf out pop adc enter and scas insl popa rol jle inc dec xchg pushw leave push (bad) mov daa js dec mov lcall je xor pop lea popf fcomi (bad) bound add out cmp mov pusha cli mov jns addl pop gs push lods jmp push scas ja mov fsubs pop mov in inc pop les pop mov movsl inc cmp std jnp outsb xlat cld jo dec ret fwait outsl es adc add mov mov pop aaa cld push int lods pop dec insb mov inc mov pop ret cmp pop in inc lods lret adc shrb (bad) mov jp mov out inc cmp std scas lret sbb das inc pop lret test fldenv adc push xchg adc (bad) ds adc sbb std push push in and lahf lret sarb push icebp xor dec das jmp cmpsb adc pop mov mov sbb inc cmp add enter mov dec xchg lods sbb cmp mov inc add add ret push rdpmc push sub sbb into cmc jmp mov and loop adc add push cld and mov mov fs inc dec jp and inc arpl pushf stos insl jo jecxz fwait sub clc xchg aad mov xchg insb inc stos mov jmp clc bound mov mov mov gs mov dec pop lea xchg adc inc push or pop cmp pop jecxz push inc testb add mov test sbbl roll pop sub pop mov sahf fs push jbe mov pop jne lcall add cli das das repnz nop add mov or fisttpll pop mov rcll jb mov inc jb and mov pop push popf outsb cmp push stos and sbb loopne insb add pop xchg pop shll push xchg cmp dec xchg dec mov lods fs mov jnp mov (bad) call jno adc and jmp or jne adc sbb push test push stc dec xchg out jno fiaddl addr16 pop jg jb and cmp xor mov mov aaa lret mov fidivrl ss cwtl sub fisubrl loopne jp js mov mov mov lahf lcall mov pushf outsl aas push out xchg pop xor roll rcl loope sub xchg ret sbb sbb insb mul je jmp sbb fwait out lea or out mov sbb test iret les lods and add xchg sbb ja jns sbbl insb add and or sub dec and ret xchg xchg movsb mov sub adc add pushf popf mov movsl or jg icebp dec mov xor jle popf fisttpl jns sarl mov adc jecxz outsb adc mov loope fwait pop sbb inc (bad) fidivl leave mov sti out rcll out int dec out and div mov dec jnp dec int jbe (bad) jae xorb jg cmp cld lods and jge add pop ret cmpsl shll insb mov shrb fdivl stc test outsb adcb jmp lcall es stc les and out movsl in sbb sub or iret pop in lahf lea lea das std lock cmc loopne xchg add push fldt push popa mov pushf mov lcall sarb jmp cmp adc daa fs fstl push outsb fist arpl scas inc pop test cmc jns xor mov lret push mov mov lock ja std pop or jp ljmp jp ljmp cli incl add pop adc mov add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fstl add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb jecxz icebp adc jge or arpl bound in je push cmpsl cmp leave xor test repz (bad) (bad) sti jg mov add aas add aas mov mov adc jmp jbe and xchg sub lret push (bad) cmc gs adc movsb in sbb sbb mov lods add rcrl fldt stc repz jle dec lahf (bad) in mov gs data16 out clc mov into pop sbb popa jnp mov xor dec lret lds adc (bad) xchg adc test ficoml jl cwtl and imulb xor xchg push jge lret fidivl repnz pop dec xorl ficompl (bad) insb jb loope,pt sub js (bad) repz xor loope int3 xchg adc or (bad) sbb je jg or mov pmullw je and mov pop pop fsin inc std jge add mov ficomp jo mov stc es cltd mov aaa out bnd bound iret adc outsb int not pop enter lods icebp xor lret ljmp jmp add (bad) inc lcall psubusw jns in pop mov test pop or push leave jns test gs push mov lcall divl ret add popf sub xchg push xor divps lret pop or adc inc sub sti xor mov or and dec push xor adc stc mull arpl jae xor add mov mov pop or loopne lret and les and ror das lock je push and pop gs mov (bad) sahf push add or cmc ljmp dec cli inc mov sub arpl stos pop cmp mov repz negl or fstp add mov and insl mov leave (bad) mov (bad) jp call shr ss aaa or outsl jb pushf xlat jns pushf (bad) xor dec fs sub add mov paddd out mov xchg and mov scas lods or pop es or (bad) ljmp or (bad) aam push shll outsl mov jp,pn (bad) or fsub sub mov xchg mov pop dec add pusha popf jl push int js shl movl lcall pcmpeqd fildl jl push loopne test mov (bad) jne popf addr16 pop inc aad jp outsb aaa dec pop leave adc push mov cmpsl fcmovb fcomp je pop pop jle (bad) in loop cmp sbb pop in push mov sub cld addr16 push ss pop (bad) push jbe (bad) fimull cs dec and rcrl lods cmp loopne fldl sbb adc ja add adc fcmovne insb inc imul iret cld sub sbb pop and pop sbb xchg dec je or mov sub loopne inc mov sbb inc jmp nop std dec or xchg cmp push out xchg cmp add mov mov mov pop adc xlat mov xchg daa mov jl push xchg pop adc std outsl jns or pushf mov das jb loop in jns jecxz sub cmpsl (bad) lods push ljmp loopne mov bound sub test add int3 xchg lcall out cmp fisubl xlat scas jnp cld ljmp mov out xlat jecxz popa inc sti repnz movsb sub test rcrl and mov adc das inc mov das cmpb inc mov add out (bad) cltd imul mov xchg sahf or fwait pop jge cmpsb movb stos in dec pushf scas fisttp fbstp jno add out aad jp out mov fidivl mov adc mov leave movsl push fcoms push sbb lea or xor je push iret xor rclb out pop push test add dec lock rolb ror adc jne (bad) mov icebp dec fwait xchg add mov sbb jae push nop negl pop lock dec pop cli jecxz sbb pop bound mov mov lods mov xchg jae or jne mov loope out stc inc subb stos out idiv inc (bad) push mov push or es lds sub sub inc lahf mov push pop in mov adc xor fsts mov fs push adc jle cmp xlat mov scas incb addr16 into insl in int3 mov (bad) mov mov pop pop push mov mov sbb inc jo xor mov sub sub adc or in pop scas mov stos enter fwait or adc cmp pop xor xlat inc sub cmpsb sbb and lcall mov dec sbb (bad) or inc sbb xor popa cmpsb fstpt mov mov (bad) mov je and push jle mov or ficompl jp cmpsb test lahf lods pop std sub xchg adc inc rcrl fistpl or lock test fild shrl push loop push mov out out push xor jbe test sub je loope mov and pop icebp mov call pop lods add (bad) std cmc push and call sub rorb sbb dec inc xchg xor xchg aaa mov mov movsl ror add enter inc push xchg and sti pop cmp aas jmp pop inc out aaa sub push mov or xor jbe sub rorb ss xor out or push lahf push push dec push xchg xchg or xchg fstl push int loopne fs jl mov cmpsl rorl dec inc lea insl mov push pusha enter sub mov or xor fsubrp fiaddl push imull fildll jge mov and adc dec adc ja cmp sub insb xchg add jge repnz ret leave dec add das ljmp add leave xchg jmp stos push in or aas inc fildll das (bad) xor lods pop xchg insl fwait sub xor pop xchg (bad) and stos cwtl icebp cld fimull mov shll sub jge and fwait xchg jmp inc popa ljmp sub (bad) adc xchg cmp add sub data16 outsl ss (bad) mov das (bad) add in add les xchg jle xor mov cmpsb adc dec leave xchg enter test cmpsb add cld mov mov movsb pop int jmp addr16 outsl aaa imul scas std inc xor arpl mov out jnp add sbb dec mov mov sbb jbe (bad) mov cmp ds adc dec rcrb xor lcall jecxz xlat cmovae inc cli jbe jl and add pop sbb test xchg cmp insl rorl xchg dec popf xor js and mov test inc mov iret fwait cmp xchg sti sub stc dec jle dec mov and movsb das jo out das adc mov in jecxz mov shrb pusha and sub mov inc into adc adc and shlb mov scas out mov xchg mov sbb mov pop leave in sbb enter ja push lret jbe mov mov icebp pop and outsl call mov mov xor jge int3 loop rcr pop sub jno mov dec inc int mov popl test cltd add add sub scas mov mov sti mov sub stos add xchg lahf idivl rcrl fidivl bound sbb mov ret pop fs dec jmp imul mov dec (bad) sub daa xor inc cld push sbb out sbbl je test pop subl add cmp iret mov mov clc adc cmpl mov jle imull mov cli cmp (bad) out adc lahf les lret pop in icebp xor js (bad) fcom mov dec jecxz xchg imul sub aas cmp pop pop sub mov je inc xor xchg aad mov enter into roll jo outsb psllw cmpsl push cmp add push icebp mov push bound pop sbb mov ret jae out movsl shr mov xor iret push sahf cmpsl jle xchg mov cmp pop ljmp iret pop int3 jmp sbb loopne jo xor push cltd inc xchg lods aaa ret cmpsb mov divb dec insb xchg or push cmpsl mov shl sbb test cmc (bad) push jnp call aad (bad) rcr inc rcrb adc mov sub mov subl dec outsl int3 (bad) stos mov and mov notl repz xor jmp push cmp lret jmp and into adcl mov loop fisubr loop xchg dec inc iret popa stc pop sti or add dec mov xlat mov xchg loop sbb push cli mov mov xchg popa lahf dec adc mov mov add lds iret cmp test in sbb sub add or jne pop dec imul ljmp bound loopne into mov call mov cli faddp adc sbb sub test ret and outsb (bad) or pop in loope in cmp cmpsb mov fdivrl inc loop xor xchg jo add popa and scas xchg and xchg ljmp (bad) cltd mov inc out (bad) push inc pop cmp insb push cmp fld1 pop inc push adc cmpsl cltd xor loope xor arpl push imul out adc insb mov mull (bad) mov pop inc icebp ljmp jge cmpb movsl and sub adc cmp xchg fcomps pop add sbb and or movsb pop (bad) not iret out push xchg fidiv loope xlat push in jne inc rcrl (bad) sub push inc outsb inc daa movaps std inc cs inc call sbb (bad) or je cmp cld push cmp ret dec fs repz add adc std adc mov das aas xchg mov push jle xor or mov daa in packsswb jg dec jp lahf nop push jle aam jp les pop inc push cld les into pop das in aam pop jne fmuls lcall cld and mov lahf xchg or sbb lods push or mov or and cwtl pop sub dec out arpl xchg adc clc imul gs cmpsl lods rcr inc push lahf cwtl jecxz (bad) int3 sahf outsl pop jge stos jae clc mov shrb xchg out jae iret insb pop jmp pop std lret cmp cwtl jg leave jo push fsubl arpl decl out rcrb xchg cs push (bad) or mov adc pop mov test leave idiv dec aas ds shlb shll cwtl xchg pop push out nop (bad) mov xlat ljmp stos in push sarl shrl test test mov inc fsubrl movsl stc jnp cmc fwait push cmp imul push pop (bad) dec in mov inc in stos xor xchg mov xlat pop call rcrb (bad) cmpsb pop ds leave fildl call cmpsb xor das or or (bad) idivl ja mov sub cwtl es cmp lahf mov mov in sub nop imul in jbe add lahf push out pop sbb pop jl cmp fs ret push fwait add (bad) and lock xor dec cmp push dec fistl mov mov jbe or fcomip xchg add scas ds jne xor xchg xchg adc cmp mov lds mov movsl mov lods pushf rol pop jno or rolb insb fdiv jo (bad) clc cmpsb iret aaa push scas ja repnz (bad) or es lods and cmp loope mov xor jbe in xchg xor (bad) add daa clc mov xchg hlt mov xor out and mov aam cld lods js xchg sbb imul push (bad) repz fiaddl mov loop mov pop lea dec jne add sahf or jecxz loopne lds push ret je addr16 and cmp int3 loop and repz iret mov mov inc cmp push stos xchg and fsts sti jae push jbe xlat int3 stc (bad) popf (bad) mov xor push ljmp xchg test pop fwait mov sbb pop sub mov popa jge inc int xchg xchg xlat pop inc fisttpl in dec cmp sbb sbb test cmp xchg xchg scas das mov dec int dec push mov jecxz out enter pop push fmull (bad) dec fwait sub fstpt lock (bad) cmc push std fisttpll adc or stos rcll aam shl cmp inc cmp mov cmc test enter divb ret addr16 and out sub testl cmp mov and lret test imul repz das in scas mov add pop bound (bad) fsts mov pop push ds (bad) fistpll jmp mov into lahf cmp fucom push lcall mov repz adc out jl pop dec pop (bad) lret jl pop mov fwait stos in mov fnstsw popa or sbb xchg loope mov rcrb add insl sbb cmp add (bad) mov jno cltd fistpl aam push dec adc xorl jne add aam push xchg mov add and addr16 fs movb sbb mov dec cld jg jmp mov sub and aas sbb jne adc jno sahf mov mov and sti or cmp and xchg addb faddp jle jne xchg jnp stos ret inc mov mov fwait rcl daa jb jno shlb inc add mov out xor loopne addl push cmp lock addl push cmp lock pop add jg adc pop pop in jne add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoms add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push inc adc int dec sub imul fstp sarb nop out xchg xchg xchg out out out dec orl outsl pop sahf pop jo pop add sub push lret sbb fcomps jle (bad) cmpsl mov cmp or movsl add or xchg ljmp jmp mov jp mov mov js lret jns stc enter mov add and xchg pop push sbb push cmp movsl popf and adc outsl push pop push pushf pop hlt mov js mov mov mov sub push mov cmp fidiv je dec adc jnp (bad) and push out dec mov xor insl and xchg jae push mov leave ficomp pop test lret mov mov mov mov and xchg (bad) mov xchg loope or jl aas mov rcl sub das loop addr16 mov cmp fidivrl fisubrl fistp aas inc das inc aaa or lret jb dec hlt jne lods (bad) mov sub out (bad) aaa test dec xor and adc and sti gs mov mov cmp or out enter jl fstpt xchg popf cwtl jle and xor repz push je push incb insl (bad) push dec fist add xchg lret pop jae popf dec mov test out mov sti adc xchg sub fildll in or mov dec imul ret mov jae loop mov clc lret loope frstor adc iret jmp xor shrl enter jl jge adc mov (bad) call and fstl div addr16 lock xor (bad) ja daa ljmp out cmp ds ffreep outsl sbb jae (bad) das sbb xchg jg outsl sarb cmpsb out in inc dec or mov movsb cltd xchg lods scas push add or sahf xor mov stos dec and fsubrs sahf cmp scas lods xor fcomps aam mov fwait ds stos out and adc adc data16 mov addl add jp sub sub cmp popf in mov popf (bad) call and stc and xchg xchg add xor je dec dec xor (bad) xor or test leave imul xlat fldcw (bad) je fist rolb adc sub pop es and fwait mov icebp xlat clc cmp test xor jge ret nop (bad) push cs outsl xor push add adc push cltd iret mov stos or sbb fsubs xchg sub sbb mov mov jge dec cmp jns inc add out mov jb hlt add pop int3 lods hlt xlat lea sub mov outsb cmp and je mov jns shrb js dec mov fbld in mov adc cwtl add cs imul or ret pop adc pop sbb pushf loop jge jae fwait in add push adc mov dec mov das int3 adc mov lods pop lret sub dec aaa and or cmp pop sub clc xor xor jae out es shrb fdivs aam jecxz aam and xchg scas jl insb sbbw mov (bad) (bad) lea insl mov imul mov lea popf push (bad) lret stc jle (bad) pop ljmp cmpsb inc cmp cmpsb movsb dec ret xor add lret push or and test (bad) call cli je rcll inc lock scas iret xor (bad) mov add mov scas aas das mov jp out ljmp push pop add inc inc test mov jno mov fdivrs in add dec out adc ficom icebp xor stos jo orw and adc test lea add inc and dec inc adc sub nop mov and addl enter pop adc push pushf or jge cmp dec xchg pop xlat cmp test cmpsl int loop (bad) mov lcall adc adc in dec in push test mov int3 jo pop inc push (bad) push and mov xor rcll xchg cmp sub cltd inc xor (bad) cs mov mov adc fbld lock sbb mov xchg xchg pusha jl out dec xchg clc xchg out call (bad) pusha mov sti jns test faddp ret or and scas repz rorl cli subb jo (bad) sbb push nop addl push sbb xchg jno movl repz push lock jnp fisub push repz pop adc mov in xor pop aad (bad) sbb bswap cmp xor cwtl sbb adc sahf mov xor dec (bad) fisub (bad) jp sbb mov aaa daa jbe push xchg dec add dec inc cmp sbb pop in adc jno mov sti bound mov test (bad) and js mov xchg jecxz in mov adc jns add sub mov sarl mov xor scas add ficomp sub push fucomi test pop push add arpl mov xchg lock (bad) fdivl (bad) clc mov ja push xor mulb lds mov lcall mov fsubp ja mov ja add (bad) aam mov in mov inc add inc faddl push fs fildl aaa pmulhuw pop addr16 push and incb jecxz mov or inc fnstcw pop pop pop jg lea in cld mov insl ret fisubrl dec (bad) push fisub cmp fwait push push push xor or dec and adc out inc jnp adc mov cmc jne repz xor dec inc imul iret cmpsl jge and mov pusha jno push cwtl (bad) repnz cli mov fwait push movsb xchg pop or dec pusha xchg adc int3 mov pop inc cmp mov (bad) lret xor sbb mov icebp leave fidiv sbb dec pop mov sbb jns dec imul lods inc cli sbb bound popa data16 dec int mov or adc insb pushf add and cli mov cwtl inc (bad) fdivs jnp lahf pop push xor call sbb push scas dec rorl xchg jecxz dec mov xor push push mov sti imul orl or ret add call (bad) mov (bad) mov fbstp lcall je sub xchg cmpsb icebp mov lods add loopne dec push stos pusha xlat movsb nop sub cmp push mov lret fisubl mov fbstp lock lahf mov and lock (bad) mov sub sti icebp (bad) insl sub jns (bad) in outsl jae cli cmp mov psubb (bad) (bad) adc cmp addl out in pop xchg je inc xchg or in mov aad pop add cld mov sub into jb xchg jno sahf pop push data16 mov dec nop fs sbb pop cwtl ljmp repnz loopne xor popa test fcoms cli ret (bad) mov hlt test into adc out and push cwtl pop jb scas or cmpsl pop push fiaddl sub cs pop inc scas imulb test adc aaa lods inc les mov add push jmp negl arpl stc cmp call xor sub or xor out test mov aad shr fistpll inc xor stc adc test sub lods or adc (bad) jmp pop inc dec js mov call shl push daa stos adc jmp jle sahf adc mov ja xchg orl scas fldenv lret sub js fwait scas lret aad mov dec jb cltd sub and divl ljmp push lret ret pop and mov xor das xchg and jno jb jp movsl int3 mov das or add insb jnp lock loope (bad) adc (bad) cmp les jnp inc test jl push xor pop xchg jmp mov shrl mov mov push xor leave mov xchg (bad) sbb mov mov fisub gs arpl jecxz out mov cmpb mov int3 out and xorl data16 hlt adc jp mov xor or (bad) icebp rcl in xor loop mov imull or fidivrl (bad) mov mov jns dec insb add popa inc mov adc sbb fwait and int3 jno repnz cltd or jne clc lds je dec ds pop lock lea jl jb into xchg cmpsb ds push mov xchg jno xor push dec fnstcw xor jb imul fsubrs and loope bound xchg out xchg push xor ret lods mov xor xchg call mov inc sub dec push lods (bad) movsl sbb subb (bad) and sub and mull jmp (bad) icebp or test cmpl xchg out dec addr16 xor js sub aad add xchg sub shl jmp add loope sub mov les xor mov pop xor loop loopne,pt inc add insl imul in mov or test push ret mov mov fwait xchg test xor or aam out mov xchg or sub iret fwait push push push aaa pop xchg clc out pop mov push lock js movsb adc lods bound hlt insb in ret out cli push xor je xor lock xchg (bad) (bad) fbld fs sub mov xor xor xchg or pop mov ja xchg inc ss jl mov mov mov xor scas icebp cltd mov pushf adc pop xlat or shrb daa into data16 xor loopne stos mov aam ljmp xchg sbb xchg xchg sub cmp cs icebp (bad) sbb push sti in nop aas loop or mov push inc xchg and lahf and (bad) mov dec push cmp and (bad) jecxz (bad) outsl jg pop and pop xchg popa xor push (bad) orl sub inc pop out xchg inc and mov pop (bad) stc jo mov ret nop das inc sbbl jne mov mov call pop push adc push pop lock loope sbb daa dec cmp xor mov shr in jle push mov add xchg xchg test inc and fsubr aaa sbb (bad) push mov popa (bad) cmp enter (bad) cmp pop jb test sti aam sar stc jmp sbb adc jp mov cld out jmp pop jge mov dec jmp cli xchg out jbe aad divb push repz cmc test push push adc dec xchg orl sub lock aad dec in mov mov jo jb xor repnz cltd xor add test or stos jb imul jbe div sarl fildl pop push fsts push inc mov sbb lea push adc ljmp inc inc dec pop lods lods hlt pusha adc adc lret pop cmpsl pop mov dec (bad) push hlt pusha adc xor and adc mov fucom sbb scas pusha cmp add push xor aad and inc sub inc adc repz (bad) jbe cmp jmp xchg dec and push or int3 (bad) icebp dec call sub pop push or mov nop jbe sbb adc call and add aad cwtl insl jo xchg repz int mov sbbl fwait test mov imul lahf dec xchg dec sbb and mov mov shrl or jno ret xlat popf lcall adc or lret repz test xchg outsl cmp test or je pop es cmpsb je xchg cmp xchg and dec jb push lods int3 and mov and (bad) jae sbb add jg mov je movsb jno jnp ds loope fs (bad) push xchg inc mov movsl jno loop sti and bound jmp clc add jo js lds pop fwait lods rcrb adc enter xor xchg mov mov divl mov mov je inc aam mov mov imul in or inc repz adc xor ds (bad) xor shr rcr add imul aam test cmp mov jb fisubr inc xchg add cld mov pop pop sbb (bad) cmc andb cmp repz pop sub adc cmpsl lds mov jg jb,pn pop and fdivl fbld jb lds repnz xchg xor in (bad) and sub out mov pop into push and clc jl or inc in cmp push mov push dec mov mov mov inc int3 xchg fmull outsb mov (bad) into mov or insb xchg dec mov or js mov and jb lods jg in (bad) jle or add push js cmc adc mov lods and or pop xchg pop sbb inc scas mov outsb sahf ret fwait loope cmp push into lods dec sub rcrl cli pop xlat sbb mov jl jo mov push push (bad) flds cmp sbb icebp repz outsl ljmp jg popf inc lods add js inc iret cltd mov lret mov test bnd test imul inc div rorb xchg mov jbe push in jne mov pop dec sub push sbb inc ss int test pop gs push xchg or inc sahf leave aaa lods dec sbb mov bound push scas insb jl xchg ja add fild mov sub daa (bad) mov out outsb in std cli mov add or mov stos push push inc pop (bad) jp mov push scas pop mov stos push scas pop mov decl add aas or repnz repz add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fstl add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas faddl jecxz icebp scas xor xor sbb insb bound cmp xor aam push cmpsl cltd outsb arpl adc sbb mov sahf jg icebp (bad) daa ds xlat pop add mov test and pop pop insl mov mov fisubr push or and loop push pop adc aad outsb jae rcr roll sbb cmpsl mov mulb inc adc mov mov scas cld imul nop jg mov movsb mov scas leave and sti pop dec xchg xor cmp pmaxub loop mov pop jne (bad) jl mov test shll stos cmp cmc incb das std leave imul push jnp sub push or lret pop adc repz mov jecxz pop adc scas mov jge lds movsl sbb sahf jl fiadd in iret inc sbb out or push int3 repz loop scas repnz xacquire lods outsb sarl mov jb mov clc inc (bad) pop add cld push cltd mov lods push xchg je enter aam out dec lock (bad) (bad) or rol nop add push mov cmp jae ret ss (bad) js inc cld dec mov (bad) adc mov xchg stos jnp jae add loop jmp adcl jne outsb add (bad) mov pusha andl push loopne popf lea pushf mov out mov rcrl push sub xchg fs mov jns stos movsl dec and pop cmp imul ret stc shr pop outsb movsb fwait mov mov cmp cmpsl push and pop leave adcl jmp inc jle arpl lret xchg push incl sub pushf jl loopne subl sbb pop lcall jns dec push adc mov movsb sbb mov sub xor dec inc sbb push push dec mov xchg jecxz ret xor jmp ljmp xchg sub out lret jp js xchg mov xchg aas push popa inc cmpsl (bad) xor scas inc inc enter addr16 pop jecxz add arpl popa jmp xchg lea and sbb nop xchg push push xchg fsubr stos and pop adc add adc test pop ret ljmp xor mov ja inc scas adc loopne mov jecxz inc ss out inc sub mov cmpsl mov pusha mov popf push dec sub rorl out ja movsb dec iret imul push jo scas test jp outsl push mov and mov mov push (bad) out jne mov (bad) (bad) xor stos jnp sbb loop or (bad) in push mov das xchg (bad) popa add inc outsb pop pop fisttpll cmp (bad) xlat leave ds imul mov out jb fsubrp mov xchg mov shll fs push adc ja stos (bad) cmp lahf mov xor addr16 hlt movsl mov mov lea jmp pop cwtl cmp pop mov loop push mov push jge push (bad) cld jp (bad) mov xor pop sub dec stos xor sub out scas pop (bad) jg jno in lret jl jbe outsl inc cli inc std lret push mov fwait sbb mov xlat mov xor decl stos shrb jg nop cltd enter sub daa int push adc (bad) daa outsb dec cmp fisttpl mov es cld cmp mov popf jae inc fistpll pop negl dec add mov lods std mov sbb jecxz lret mov cwtl dec xchg stc aam adc das sub sub (bad) fldcw fildll outsl lods (bad) fdivrs jb loop in aam xchg or inc adc sbb xchg or add mov insl test mov fisttpll lret int les pop mov outsb enter nop inc jecxz iret ja adc les cwtl inc xchg test pop movsl xlat mov cmpsl cmpsl vprotq push insb (bad) insb jl adc (bad) jecxz lcall pop xchg mov sub and clc jp sti in sub (bad) imul (bad) cmpsb cmp xchg sahf not adcl push sub iret sub jge and push (bad) scas lods inc pop xor ljmp mov out push mov adc and mov and sahf popa sbb js adc lea push das test pop sbb out mov mov ja es lods xchg int loop jg add or xor cmpsb push cmp add or mov pop inc (bad) out pop cmp test mov or ja xchg int3 pushf nop aam test mov pop ljmp xlat pop jbe sbb adc pushf push sub add into aam dec ss pop sbb jnp in sub push push xchg inc insl sti fisttpll sub stc out jmp and test mov inc aad adc lret push cmpl mov imul fst dec fnstcw pop sahf xor cmp mov adc stos xchg ret leave xchg xchg and jo mov dec cmp sub out push mov loop lea pop lods outsb in xor rcll fisttpl jecxz push pop pop add sbb push cmpsb mov test (bad) fyl2x xchg inc (bad) lcall xchg jbe js movl sahf and icebp popf jecxz dec outsb fstps (bad) push cli mov lods clc cwtl and inc out add stc (bad) pop xor stos repz scas fildll or (bad) (bad) out faddp sub stos push jle push ja aaa mov ljmp pop aam lahf or (bad) aas pop adc (bad) mov sar test jg sbb and test ret cltd sti pusha into mov inc sarb jg aam add nop aaa add fsin jnp in adc inc mov jmp loope cmpsl rcrl xchg cmpsl pusha fisubr xor nop gs fisttpl pushf movsl test (bad) or sub fwait popf pop ljmp insb mov mov lock fs loopne (bad) xor ret add push dec fcomip push fstps subl insl sub fistp mov lods mov jns dec xchg mov stc mov repz (bad) adc test test sub push pusha movsb adc repnz cmp or xchg push cmp fsubl (bad) jae mov aad adc stc mov mov outsl or mov sbb xchg int3 movsb nop pcmpeqb xchg cs (bad) movsl mov (bad) jae stc pop int cmpsl mov sbb pop ljmp out ret (bad) mov ljmp int pushf push in sub adc inc xchg dec repnz pxor (bad) dec cmpsb mov fadd flds lcall cmp in mov (bad) and test icebp and scas jmp xlat mov mov loopne test xor jnp lods je addr16 fisubrl cmp lds ret mov jle cmpsl inc clc sahf push clc (bad) out mov (bad) dec jmp mov xlat sbb hlt add fisubr adc (bad) mov (bad) cmc mov mov mov (bad) jb pop xor mov jns pop push pop fwait jecxz sbb icebp cwtl out mov arpl fcmovu imul mov jmp rcrb scas jg in rcll xor jb push push sub int lock lds xchg mov clc jmp mov gs mov xor out les rcll mov imul sub mov ror pop enter or aaa push xchg outsb push inc daa jecxz cmpb xor or cmc lods pop aaa in or aaa popa xorl (bad) rolb dec xor out std pop lds jmp push out arpl jns push aad dec repz jo jge or jb pop jnp cmc jno dec lret lahf rolb sbb xor mov mov push pop jp das dec fdivp ljmp jnp pop fcomip mov sti aad and adcb jno mov lret or ret and or (bad) lds sub mov test xchg hlt out mov dec cmp js int3 shrb mov popa adcb jmp nop js mov in sahf push iret or sub fnstsw test xchg in leave ret rcrb mov push es lea mov jnp (bad) mov mov mov mov inc loop sbb mov mov rcl push (bad) out lds (bad) jge push jle xchg cmp lcall dec mov mov dec ja dec lods sub mov xchg add cwtl xlat es cmp or and jg cmp data16 pop dec xor ds and pop cmp imul out xlat movsl in fldl mov push add sub or pop insl mov test addr16 sbb fs popa inc sbb ljmp (bad) mov cli scas lcall lret sbb xchg pop out outsl ja pop (bad) adc popa inc mov out pop mov fs push jmp push rorl cld xchg jne hlt and cld mov inc shlb (bad) cmp lcall stc and decl daa mov (bad) daa xor aaa push lods jecxz inc pusha pop mov lods lds pop pop dec xor mov les aam dec jge jns cmc popf out add fsubrl adc mov cmp inc and add jne jl repz dec dec or hlt outsb (bad) fimull mov dec sub int icebp cmc sbb sub scas adc mov jg jo idivl call test ja pop mov pop movsl inc call je bnd pop push idivb ds in inc das and and ljmp mov lds xchg sbb push cmp stos movsl mov sarl mov lcall mov jmp sub jg inc and pop ret aad add (bad) push fs retw ds mov (bad) pop xchg in jp not cwtl leave sarb or xchg sbb xchg incb rcr xor scas inc cmovo jl,pn mov lret cs push test sbb sbb xor fdivl popf pop adc (bad) dec xor stos inc aas and dec cmp loope mov int3 cmp and movsb and jmp outsl add mov cmp add ret pop mov insl addr16 test out pop mov das shrl jmp cmp sub fldcw push lahf dec cmp cmp sub dec movsb popa popf push mov std leave sub inc outsb push inc cmpsl cs in push ds hlt stc stos fisttp mov fistpll clc sbb inc mov (bad) sarl jecxz fmull fadd dec xchg imul sub imul (bad) cwtl out lret decl push lahf (bad) jne fstl lds (bad) imul mov cmc dec (bad) mov cmpsl xorl pop aaa scas fldenv lock gs roll xor cmp dec sub ret out mov xor fwait mov adc call pop jge stos push inc cld rcrb sub out std push xchg rorb mov pop add popa inc imul aas push gs dec mov push push fucomip test dec push inc sub mov and (bad) (bad) mov push xchg mov lcall or test in js ficom mov xchg mov dec lods pushf int aad adc mov mov add and jp push mov cmp jg test xor mov jecxz lods mov lea adc cmp pop outsl jb,pn imul push in test loop mov sub clc inc insl sub leave jge push popl or clc fs sbb lret push insl sbb std cltd pop daa in outsl or mov xchg inc and movl mov (bad) rol or fwait push test into push out out cmpl loopne xlat les iret mov pop and push inc cmp das mov dec call mov mov mov add shrl in sub inc insl (bad) shl dec mov ret inc sarb mov jb fidivl repz int dec pop aad dec pop adc data16 sbb sub jmp sbb mov in push cmp jb je scas xor push aas and pop sub cmp cmpsb pop adc imul sbb dec mov ret xor jg cs pop inc push insl ret rclb loopne in nop mov scas mov stc loopne ljmp ja test push jb lret (bad) jle mov add ljmp push xor (bad) and lods hlt fistpl jecxz mov out pop in fdivrs out xchg cli xor mov pop sbb movsl xlat sbb or lock mov inc push add aas xorb sub hlt aas jns sub sarb nop push mov leave mov outsb xor push sbb fistpl sahf pop sub mov bound fwait jl pop inc add lock mov das ret mov mov pop push sarl jne (bad) mov xor dec js mov xchg jmp int3 dec dec jae sbb mov ficomp cwtl xchg cwtl rcrb sbb insl sti and (bad) stos fstpt xor icebp mov sbb cwtl pop cmc in mov inc inc insl imul pop jne rclb popl mov push addr16 sub pop jp js mov mov outsl add mov pop es ud1 cli and inc or mov (bad) dec ret jle xor enter aas sub es mov ss lods sub mov pop pop mov pop and mov push lret add int int3 popa scas pop fsubs jb out je lods dec dec out xchg inc jnp mov loopne std jmp sbb and mov jb cmpsl mov sub jbe sarl nop test add leave add inc add notb mov (bad) pop push push hlt loopne addl push cmp lock addl push cmp lock or cld pop popf pusha (bad) out adc sbb add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoms add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb add lock ror je cmpsb fstps pushf sbb mov cmp int3 xor cmpsl lea cmpsl fucomip mov (bad) pop add ds xchg pop cmpsl stc xchg and fldcw jnp popf mov (bad) call jle fstp and movsb push adc adc iret pop loopne in mov sar addr16 pop fcoml push pop in mov hlt outsl inc repnz dec into mov repz cli sbb (bad) or push adc mov inc mov (bad) sbb mov xchg cmp out mov add lret xchg mov adc sbb mov roll outsl xor decb scas test imul mov addl jp andl ret jae sbb sub mov sub xchg incl pop fimull pop pop (bad) adc loopne loopne shlb pop pop xor push call jae (bad) ds or movsb mov xor movsl xor pop cmc fistl mov pop aad jbe aam mov mov (bad) andl pushf jae call loope dec xchg fldt push inc sub jnp cmpsb repnz and sub out sbb fldt (bad) mov pop and push xlat ja xadd adc leave cwtl mov movsl xchg rcll cld pushf push cld iret sti lahf psubusw fnstsw addr16 (bad) int mov push cmpsb mov add stos mov mov sti mov pop pop fistl sbb inc mov lret sub mov cmc movsb add std popf movsl push xor arpl fs mov (bad) in push jmp or mov cwtl xor cmp pop call jnp rcrl cmc xchg jp mov lods xchg test or push popf fnstenv das push cmp sahf jecxz loopne outsl int3 cmpsl js lea mov shrb inc daa sbb insb or pop inc (bad) xchg imul add xor lahf and dec adc cltd jecxz sbb adc pop notl mov push rcrb fs xchg (bad) mov jb pop cltd roll sbb pop sbb dec shrb xor data16 push iret fisttpl mov mov sub or aaa jb loope sub push jmp or cmpsl (bad) ljmp xor xchg stos lods jmp rol mov push mov inc ljmp stc inc mov or out dec xor in inc flds jl xchg jns loope xchg sbbl cmpsb fcoms mov dec cli insb rcll (bad) mov repnz shrl mov inc adc lods repnz out cmc shlb and mov xchg xor adc ficom lret and or push scas insb mov notl pop sbb mov in pop xor pushf cmc scas ds icebp pop and (bad) push push je hlt repz adc nop mov ljmp in sub sbb clc sub mov pop xchg (bad) xlat lcall (bad) cltd xor repnz cmpsl scas pop lock adc jae out and divl push lods jge pop movlps mov inc popa cmp or (bad) mov mov in mov adc adc stc mov hlt jne sub dec or cwtl je sub icebp psubd inc pusha pop ret jno daa out sbb cmpsb or movsl out adc pop xor das cmpsb jge mov push and cmp push test add out mov lds out lcall rcrb ljmp ljmp sbb hlt pop rcl sbb es movsl in mull pop mov les daa std fucompp lods mov andps cmp cmpl (bad) rolb dec adc (bad) jo mov jg push mov mov pop push jge cmp test insb adc or mov dec rcrb cli sub sub cmc rcll xchg fistpl adc xchg sub and jp outsl lahf rolb test mov push mov movsl call xlat insb pop xor dec (bad) xchg xchg orb jb outsl fiaddl ljmp adc jae mov cmp mov cmc mov (bad) (bad) pop mov inc inc nop not mov cmp imul insb fbld js (bad) in in loopne mulb xor jge jo cmpsb jnp addr16 scas ss push sub enter push leave pop movsb pop inc push js (bad) sti jae sti ret (bad) xor jge mov les movsl int dec adc rolb in mov xchg rorb gs dec push insl lock mov jb fwait iret sbb out fisttpl sub js ret push inc push xchg mov xor add scas pop xchg or xor dec mov pop sarl adc sub lock stos add xor stos lock sti cmp push imul xchg push ds pop andl mov daa xchg cmp pop lea adc lcall push dec int3 dec sbb xor mov stos (bad) cmp and hlt dec mov ret scas push jecxz mov adc mov pop (bad) or pop repz or push push sti or jbe add cltd imul pop stos hlt dec cwtl sahf pop into outsl fstl in adc hlt ret jnp adc repnz lret pop mov add nop mov rcrb jbe jns stos inc (bad) es daa xor push cvtps2pd enter int std sarl data16 rclb mov sbb push dec sbb mov iret repz call adc inc inc stos and fdivrl xor push xchg scas orl fsubr enter data16 sbb xchg clc mov leave out pop pop push push pop loope test lea outsb push lods and or jmp stos cs push jne (bad) xchg ja adc icebp roll and jg push push inc xorb dec mov mov (bad) inc popf jo (bad) in jbe mov fwait inc (bad) (bad) repnz sbb gs sub mov (bad) repnz sti inc cmp loop outsb sub and cs or cwtl sbb andl insl adcl jp inc cmpsb daa jge cwtl add xchg (bad) cmp cwtl sub lahf jo leave int3 imul push iret jge addr16 iret and dec pusha aaa (bad) sbb stos sbb adc push pushf cmp inc cwtl fcomp mov lret pop in lret adc fcom pop test icebp sbb pop lea mov push jb inc (bad) lock dec mov es loopne xor out das sbb mov call jecxz xor aam test jnp cmp out jle call jno cmpsl xor int push ret push aad negl adc outsl cld xor mov mov jmp pop xchg popf cmc push dec mov sbb arpl rorl mov dec mov je out cmc pop inc aam mov adc sub dec jge xor add out enter mov stos dec cli rcl add test sti mov hlt shrl aam adc push sbb insb loop mov lds xchg mov sub jae and inc jl inc xchg jmp push pop insl inc test adc das popa cmp add lahf (bad) push aaa add sti rorb jmp jb addr16 add mov push push addr16 cwtl cwtl rcrb push jo and mov shrb ret imul insb rcll in mov sub cmp jae gs pop mov mov adcl or (bad) ret jne ftst icebp cli inc scas cld test adc orb inc or nop mov popf dec adc daa dec cmpsb lret sub fcompl mov popf lods movsb fnop push aaa ja les and add jb mov mov sbb jge or and scas pop jp sbb idivb cmp cwtl mov into push mov leave jle test dec ficom jbe cmp pusha cmc mov lahf lea jae fistl pop or mov (bad) loop shll mov jno aaa not sbb adc aam and adc mov (bad) leave mov xor mov insb lods pop pop addr16 das fidivrl inc jbe jge lock jge mov imul mov adc out fcomps cld lret nop sub fcmovnb mov leave ljmp sbb fdivl insb stos pusha ret jmp (bad) test or push xor insb sbb cmp add popf mov adc imul in cmc adc std or pop icebp cmp xlat data16 ret int3 cmp stc rcrb mov fs sbb mov mov cmp dec fwait lret pop lcall xchg cmpsb scas xchg and pop and mov xor (bad) lock cmp hlt lahf inc cmp or aam les cs and loope jge jns mov jecxz mov dec test sbb jno ds mov test pop mov inc push rcrl insl paddb enter sub pop mov out mov xchg add jnp js,pt (bad) dec sub xchg bnd mov jo mov iret or ds inc sub jecxz out push mov sbb cmp sar jge mov in ljmp jl cmp in lret rclb leave out xor lcall adc push add popa add out cmp xchg sub iret push daa jns cmp xor xor xor ds stos insb mov xchg xchg xor sub xor cs pop push imul mov xor cmp unpcklps sahf (bad) dec fnstsw push inc je sarb mov and bound aaa push and loope imul je and mov push outsl mov fcompl daa (bad) fidivrl les mov mov (bad) mov xchg je adc jae mov xchg sahf icebp into sub sbb into fs scas sarb xor pop jmp mov add imul ja sub cli dec cwtl mov pop fcmove push mov push pushf iret push mov add fcmovbe xchg icebp inc sbb movl daa ret jge int3 fisubrl mov push imul xchg test lcall xor insb mov add loopne popa mov fucomi mov out xor out add imul call (bad) pushf push mov mov stc cmpl fcoml jg nop mulps ret nop sub call adc mov icebp mov push nop push mov push fdivs cmp xchg adc pushaw mov scas dec xchg lcall jno pushf dec mov fadds cmp ljmp (bad) cmp mov jle xchg cld dec cmp fwait adc fisubrl daa ror fcompl sbb sub (bad) (bad) test jge mov into rcl iret push movsl loopne int3 dec jge sbb add push push or mov frstor les mov pop dec iret mov ror dec inc fisubr cmp into sbb mov mov and popf mov daa in pop cmp popa stos sbb stc and sub push loopne pop add dec lea and dec stos xor inc and adc (bad) sub out (bad) lret mov pop or fcmovu sbb or xor sti mov pushf push jb inc xchg mov sub sbb rep adc jmp cmp jle das outsl push jns adc (bad) mov fucom (bad) iret and jae aad pop icebp and fucomi lods push cmp mov inc sbb xor jbe xchg mov cmp fsubrs push push pop mov add pop sti xor lock pop mov fstl pop adc dec test push xchg stc jp inc inc stos ret data16 mov dec mov popf cmp jmp inc xor mov out pop cmpsl jo sbb or mov aam mov cltd jg push pop mov dec mov lods outsl and aas roll xlat or push pop cmp subl (bad) in cmp adc (bad) and sbb jge xchg and and dec fcmovbe sbb add outsb fmulp push sub loopne dec dec lcall adc lahf cmpsl inc imul out in xor cmp (bad) ja movsb push xor sbb es push mov test push inc das inc je push insb out in lahf iret inc fcomps insb jb jecxz xchg outsb xchg mov out jno jmp imul jo lahf push das push stc push sbb cmpl in mov inc loopne mov push cwtl cli fist je cmp or nop fldenv mov sbb das add sahf scas mov sub leave cmp andb ret movsl xchg loop std push pop add xchg mov aad pop fidivrl fisub mov leave jg jno loopne dec js aam outsb push push and add movsl xor mov aas leave iret addb (bad) mov xor cmp jae mov xor lret (bad) jbe fsts mov scas ja ret mov cltd mov (bad) int3 lret int push hlt push adc mov (bad) push pop cli and mov dec cwtl xor pop mov shrb sub pop xchg jns lock cwtl sbb fstpl gs mov pop adc sub test lock xchg arpl (bad) cs clc push dec insb hlt les and lea jnp out xchg dec insl cmpsb sbb scas xchg and sbb mov or inc pop lcall das fwait stc jge shrl (bad) scas jbe testb (bad) mov (bad) std ds loop mov pop fadds clc sbb insb xchg out dec arpl xchg xor cmp push jp jae mov shll jp call push cmp add mov lock repz ret add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ficoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop adc dec ja sub add dec xchg sbb xchg pop push imul outsl sbb pop icebp cmp add jg rolb jp add ja (bad) out push movsl daa or fnstenv pop fxch imul jge aaa (bad) leave cltd into sbb sub jae (bad) jcxz xor rcrl pop popf jb fcmovne leave rep ds out jp mov jo,pn mov mov dec xor pop cmp aaa gs mov pop or or cwtl out mov into add call sbb (bad) cmp mulb inc lahf xchg out (bad) fcompl test lea add stos mov (bad) int3 sub or push faddp add aad cltd add ds pop out cltd push xor repnz cs insl inc push arpl out pop adc (bad) cltd adc jl and lods jno in (bad) jg aaa cs repz fisttpl jno or dec add adc cmpl arpl les mov repnz arpl jbe jg and (bad) sbb test sti push stos or mov insl and mov mov cmp xchg and cmp cwtl sbb ret pop and and inc sub pop and mov xor cli stos and pop loope adc inc es stos fwait in and push mov inc jecxz pop mov xor xlat jl ja adc cmp mov int push and pop (bad) mov mov mov add adc adc dec jmp and idivl arpl mov push in dec imulb bound icebp mov xchg test cmp in ja sahf mov les stos mov xchg xchg ret test (bad) fsubp enter pop data16 int3 in repnz pop lahf xor push cmp pusha mov fcmovbe mov cmpsb mov xchg xlat ret xor dec repz push mov in inc add xor xor mov lret push out or add mov adc bound dec lds mov sub in xor int3 int3 mov movsb xor (bad) cltd and (bad) divl scas xor mov xchg inc js in push fisubr fwait and bnd (bad) out (bad) mov cmp inc (bad) hlt sbb jge xlat mov inc movsb pop adc and jae add pop sbb (bad) push es jl shrb pop cltd test test sub push movb in xor add or and test sub repnz test pop cmc fsubs pop aaa adc clc fisttpl xor lods mov adc test mov add jnp movsb loopne fisubrl ficomp addr16 shll and lods and jmp sub adc add mov and or insb jb sar jne (bad) sbb insl fidivl scas rorb or or pop (bad) (bad) dec xchg dec push sbb insb bswap fwait or cmpsl xor bndstx add cmp cmp aas test fcomps jmp jae out popf fcompl xchg test lcall jae ja add pop jae push imul iret and pusha sbb push aad std in lods adc or out sbb mov cltd xor ss push insl push mov iret or idivb adc das sub jp cld xor or pop xor or cwtl pop inc jb mov lret jge test movsl cld mov (bad) pusha int sub pop sbb arpl inc dec sub cmpsb repnz test pop push xor jle imul (bad) hlt cld or ret rorl or adc push loopne bound push les cmp dec out mov dec fdivr in loopne fisubrl shrl pop add xor xchg shrb dec xchg add add cmpsb adc xchg out cmpl (bad) decb cmp xchg mov cs (bad) out aaa xchg lcall sti adc stc popf ret or and cmc sti push cld push inc pop loop sarl inc pop out dec dec mov mov lret mov push xchg pop cli pop push and push xchg pop out rcrb jp push mov outsl mov inc outsl gs inc mov add mov and mov in int3 add adc nopl scas out jnp ljmp clc nop mov sahf pusha dec addr16 cwtl lret jno pop mov js and mov gs sub push push lcall pushf cli mov adc aam inc cmpsl cmp pop fwait loopne pop cmp mov jne mov out es sbb xchg or add iret mov imul mov xor shrl (bad) mov jecxz rcl test lahf mov mov jg or into sti sahf push jmp xor mov je or sbb out add jg and hlt mov (bad) fsubrs sub mov mov mov push pop xor loope jecxz jl popa inc std xchg test scas sub clc pop sub inc cmpsb mov or dec out lods sub mov push mov adc sub lods adc loop movl and es sub lret nop xchg mov pop adc xchg and test lds mov sbb mov int sub loop pop (bad) jecxz (bad) cwtl popf add jl repnz (bad) (bad) lods jns xor push sub dec cmp lret scas hlt ljmp cwtl jl pop lock arpl test lods enter and jmp jge pop xor mov mov inc dec sar movd stos ret or scas mov inc imul adc push jecxz push scas leave mov mov movsl dec xchg insb lock mov rclb sbb fs loope xor lds mov pop pop inc adc sub popf jge sub outsb mov mov sahf mov out mov (bad) lods pop and stc insl adc jo bnd dec adc shrb pop adc mov sub ljmp lods (bad) lock mov push cltd dec int fiadd mov enter je (bad) insb (bad) jno aad mov (bad) (bad) dec scas les sbb or nop jae mov add pop adc sub imul sbb cmp sbb sbb xor xchg aad popf iret mov mov fnstsw movl pop sub cmpsb xor fs mov dec sbb xchg mov js cltd cwtl push xor add pusha xor out dec mov popa fsubrs sub push fwait arpl mov lea stos pusha push (bad) xchg (bad) xor aas sbb push insb mov mov hlt (bad) (bad) jmp xor push sub fwait jbe sub in xor push hlt jae pop jae or or inc push jecxz inc adc xor iret mov inc lcall arpl jle inc mov adc rcrb or inc test pop dec pop dec mov inc lcall push fcoms jo mov loop repz jns aam lahf push clc psubb jg or nop icebp cmp sbb add imul xchg lods sub bswap inc push stos mov mov and imul cmpsb out dec xor test and pop dec mov aam pop pop or inc mov lods repnz test out (bad) mov hlt mov sahf fdivp push insl jnp adc aaa loope,pn push jae sbb xchg cmp xor ds dec jmp imul inc sbb add sti adc clc mov js call mov clc xor xchg pop sbb sub loop int jecxz je add fs jge pop and add pop dec cli jg shrl stos ja push stc inc sub arpl xor dec sbb out jecxz int dec jnp push and xlat mov or mov sbbl cmp and jo dec ss movsl inc lea (bad) stc push psllq cmp loop jg push dec xchg sbb ds cmp cmp cltd js mov addr16 cmp or int cmp aad jl mov cmc fbstp lcall dec or in xchg add test mov std mov cmpsl xchg out je jp dec lret sahf add pop push (bad) hlt cmpsl (bad) adc aam jae push out pop nop mov jae (bad) daa out adc imul fldl push inc ffree xor nop sub adc jmp xor mov outsl fmuls dec add inc andl or mov scas pop inc dec ss or cmp jl sub xchg or inc loop pop cmp mov mov xchg sti shl pop or xor adc icebp shll loopne test mov xchg repnz add jne pop lea out lret mov test adc sti loopne gs sub jae stos and pop mov jo mov aad jg jno fldenvs (bad) psrld pop out inc xchg dec test mov xor cwtl nop repz in xchg and xchg mov cmc xchg jg pop mov out imul pop push clc or xchg popf fstpt ds jae push jb aam or test xor xlat fdivl out je pusha arpl imul stc fwait std xchg popa incb jge jmp mov jne stos mov test sbbb popa or dec js mov lahf push sarb mov jae jne xchg mov cwtl loope adc insl mov fstps fwait test jo into cmp in cmp mov outsl pop iret add subl jo mov bound mov push sub movsb into add mov int3 rcll fnstcw push push lods sarb and in sbb dec gs (bad) sti jp and mul iret jnp imul pop repz or mov xlat loope scas rorb xor fdivs orl lcall adc mov dec test pop aam sbb mov sbb repnz dec ficoml bound std jne pushf hlt stos lods rclb adc in and sub push mov jbe jb cld adc cmpsl mov rcr popf or in mov dec mov xorl sub push jno addr16 ret fdivl fldt popf sub (bad) mov mov jg push fcoml inc (bad) movsl dec jns push xchg sub scas xor cmp xchg mov outsl xchg orb fcoml js push jecxz xorl in into push push lcall sub test lods dec imul data16 sbb push push (bad) and add fisubl ljmp jno fldl mov adcl sub push mov das cld and test iret inc aam ss outsl icebp mov cmp lret in dec cld lret scas mov pop sbb call adc xchg lods test stos cwtl push mulb push xchg mov insb adc push sbb fbld leave cmpsl lods push sub xor out mov hlt xchg pusha mov mov mov nop (bad) push ret dec nop das ficompl push aas fisub mov iret cmp out pop mov dec jne in sbb jge xor mov popa push aas pop cmc idivb xchg cmp jnp push jne mov push push js movsl pop icebp inc scas imul mov or or mov adc sub mov xchg inc mov add push jp add cmp mov jb aam ja popa xchg push outsl cwtl (bad) (bad) divl xchg mov iret es jl in mov inc inc enter xchg pop test push mov loop pusha repnz ja stos mov lret adc test stc test cmc and popf bound dec mov inc ret and pop cmpl xchg cmp and mov arpl test in arpl scas dec jne outsb or adc pop sbb mov test f2xm1 sti sub sahf jb inc pop lret jl sahf sub sub or arpl pop fbld mov add daa les jle push adc pop xchg bnd xchg lods int or popf sbb mov push sbb adc jae divb test daa xor and cmp cs std xchg mov and es xor xor lods mov sub out or cmp ja jbe insb stos sbb jge sub loop jecxz sbb mov mov cmp push stc push push pop adc notb les fld and or leave lds rol aam invd and sub sub inc xchg pop and in outsb add test xor push push lcall and cmp pusha sbb ds xchg (bad) int3 outsb fcoml sbb popa add repnz adc sbb xor mov add add call xor adc dec mov dec jno scas ret mov dec shr dec push add sbb xor ss mov or add dec push scas scas adc cltd xor insb and jae xchg mov or push lods jmp jbe scas dec cmc (bad) mov mov mov rcrl cmp testl cwtl inc inc nop std inc imul stos fistpll or and out cmp xchg push fwait cmp sub jae or lock out jg in fcomps lock jle jno xchg cmp mov fiadd (bad) pop ror mov xchg xor and test and in das adc outsl stc cmpsl mov xchg and lods mov hlt out scas mov in jb push inc push outsb add sub fadds call xlat iret sbb adc mov repz daa lods cmp enter movsb xor cmpxchg dec (bad) pop mov inc inc ret pop in in xchg imull fldcw jl pop lods xorb scas aas test (bad) jne pop std mov xor xor icebp pop loopne jg (bad) mov iret sahf cmp mov iret sahf cmp mov sbb sub push cli mov add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fstl add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push and sar adc jno dec jae jne mov ror in cwtl into jmp pop cmpsl jae cmpsl dec ja xor cmc jl iret mov out lahf fiadd add sub call (bad) leave xor cmpsb (bad) cwtl and js mov jns adc pop sti sbb mov mov add aas pop fistp push das mov rcll fbld mov adc icebp pop mov push jmp sbb xchg sarl jne mov adc dec cmc icebp add add xor xchg mov jle aam pop xor jb dec lret xchg adc popf push xchg pop in xchg aad ret push push fistp cmpl fxch testl aas repz into fs pop outsb fstps push add ror inc mov push sbbl jae aad and fdivs iret mov dec jle pop (bad) test xor lcall in or rcl (bad) mov icebp and jg pop hlt pop xor inc xchg cmp push dec ja xor cmp aas mov fsubrs adc jmp in mov push ds sbb xor sbb and xchg push ret pop inc mov stos mov push inc xchg push scas movsl insl push and int3 add xchg xchg ds inc pop sub test mov out arpl mov popa and mov jmp ret fwait mov mov mov lods pop or ret sbb jge cmp lock mov mov shr in cwtl pushf inc xchg (bad) fidivr (bad) and cli inc psllw xlat add mov je mov popf sub pushf ljmp pop sub cmpsb ja fcomi mov mov jmp push mov (bad) lock push subl push lahf jl mov (bad) aad push cmp cmp or or cld jmp cwtl mov bound cmp adc dec leave lret inc test mov cs xchg pop fcmovbe je cwtl shr sub daa movsb ret fsub rclb pop jle les push mov mov add sub xchg pop xchg jno hlt cmp sbb call pop cs aas xor inc jecxz out mov dec gs mov xlat xchg loopne adc lahf push jns cltd out nop add repz jnp xor fsts mov in mov leave in fldenv addr16 mov adc (bad) (bad) xchg arpl pushf lds leave ds mov jb or push add adcb mov mov xlat pop inc xor in scas dec cltd push cs pushf jl data16 nop aam dec rcrl sub xor fdivrl push scas inc add push out aas sbb insl cmpsl jns mov mov jo (bad) push repnz repnz push mov fnstcw fdivs mov jo mov gs daa sbb pop xchg inc test loopne pop cltd out lods cmpsl outsb addl inc fcompl cmp inc or pop aad out inc pop (bad) outsl aaa inc arpl pop sub je or lret movl add lds test scas std insb dec ljmp rcll mov (bad) in adc int lret jmp lock adc jg xor scas pop push sub adc sub es je ljmp scas repnz push push push xchg scas repnz inc sub and mov mov jno loope jo mull out jnp mov dec pop push std cltd mov cmp daa cli xchg jmp mov (bad) dec mov mov leave or jecxz xor xor ffreep fsubrs add mov xor outsl mov push push jp (bad) mul in mov push xlat mov scas (bad) (bad) nop addr16 out clc push inc dec ficomp mov stc pop xor iret jne lods xor mov cmc clc retw jp xchg mov fadds sub xchg mov in push jp sahf add lods xchg mov out cwtl xor sti rol jge in out (bad) imul mov js jle push or jae arpl ss ds adc push xchg mov push mov sahf test in push and jmp lods jge push inc xor inc mov lods cwtl jl andl pop jmp jle in cmp mov xchg mov in xor (bad) dec andl cltd bound mov cmp jns inc aad sbb inc xchg xlat xlat jmp out (bad) repz test jge inc and sub jp (bad) fild xor call jbe popa mov and mov add ret mov xor (bad) (bad) fdivrl adc outsl push xchg adc adc gs jo testl scas xchg mov movl mov lret push mov mov and lret sbb mov fs iret or xor in jo nop ret push out popf push lahf imul push dec nop pop shll jecxz xchg gs cmp mov sahf loopne jl mov or inc pop sub int3 in pop fwait and aaa rclb mov rclb add mov lcall and pop sbbl jno call inc dec stc cmp mov pop add fild cs sti adc stos xchg lahf add add cmp int test aad inc xor mov lahf and movsb or mov add mov cmp push fwait mov in xlat pop call pop mov pusha sbb repz lea daa xchg sub cltd (bad) jbe jne mov dec stc push dec (bad) mov in inc sub movsl cmp mov adc jne (bad) adc adc (bad) daa int (bad) push imul out addr16 into mov clc or push popa and cmpsb mov stos pop push pusha inc dec pop dec jge dec adc mov iret outsb (bad) outsl loop mov aaa add fistl outsb pop mov push dec xchg adc cltd in dec mov cmpsl add aam xor cmp je sub pop dec cs lods sbb testl jl fwait mov cmc (bad) pop push xchg xchg and mov mov dec loope sub popa cli roll mov ret out in pop mov fildll dec fimul dec in jecxz cli jns insb mov lods out mov dec sbb test push data16 jmp nop sbb jb scas mov xor xchg test push adc in push rolb adc or adc out cld gs hlt lods (bad) icebp or mov mov sbb and lock ljmp iret dec clc mov cs lea lods aam (bad) jmp cltd lcall fcomps mov popa and out xchg cltd xchg jl jmp (bad) dec jnp jmp cmp insb lock test mov (bad) dec mov gs mov mov xchg pop fnstcw enter fsts ss stc mov mov out rcll fiadd (bad) call int shl mov mov push dec cmp jl insb or lods inc aad adc imul (bad) jecxz in (bad) xchg mov into cmp mov jg clc data16 rolb (bad) ja scas push mov fstl lea sub lods sub pop and scas jbe in push cmp jl gs js xchg sarb sbb mov das jmp push push adc inc inc and scas jecxz sbb movsb inc lock fdivrs pop dec and icebp js jmp mov mov rcl pop xor mov dec jl xchg lret cmpsl xlat adc dec xchg add inc adc movsb fnsave fistpl push adc movsl mov push outsl xlat inc push in xchg lds (bad) mov sbb pop push imul cmc ret and mov out adc pop rolb (bad) in sub fnsave and mov scas mov xor bound inc jmp fisttpll popf into lahf jl xor in arpl pop insb push jae shr sub xor hlt push je cmpsl adc jl dec cld lods xlat not in daa or add (bad) idiv popa mov and and xor repnz mov call xchg cmp in xor popa dec mov or stos push pop mov daa ficom inc flds pop xchg fcompl mov dec in xor mov adc cltd jnp mov jne fsubr and nop dec gs cmp adc sarb mov ljmp xchg sub dec and xchg push stc loope lret adc inc xor cmpsl (bad) xor xorl cltd cmp pop xchg cwtl push ffree xchg xor cs mov fsubrp test shll pop imul stos sbb cmp xor jecxz jmp cwtl push fistpl leave test sub loop push stos push mov mov inc pushf retw add adc test adc push aad push sahf int3 pop dec jl xchg or ss into sbb enter lcall jbe dec adc pop fs xchg out inc (bad) imul xchg mov mov pop stos ljmp or push jg ret jge (bad) sbb ja outsl ret dec push push mov lcall mov mov lret adc pusha les ret inc (bad) ret gs cltd mov mov xchg jmp outsl stos mov jbe pop inc repz fistp sbb lods pop add lods pop inc in js mov je idivl mov mov cli mov icebp xchg and movsb imul cs (bad) cwtl lret test lea cmp jno imul (bad) fidivr int cs inc cli jo into fcoms int3 hlt ret push icebp popf jecxz scas lods les adc cmp xchg add inc push lret imull cld xchg les jge andb rolb mov fsubr fidiv mov (bad) pusha xor xlat inc adc add pop or (bad) rclb test out mov pop andl sbb xchg jge fisttp or push les adc ret stos sbb mov pop sub imul jns addl pop clc push inc sar mov lods push push mov adc bound call add mov notl mov fstpl xchg mov scas push mov sbb push mov push icebp adc test insl dec jno lea push out fsubrl out movnti jg add xchg in inc ret mov pushf sbb sbb fist rcrb dec mov jns lret out dec pushf cmp jno popa xor jg stos sbb loopne ds pop movsb sub test sbb fwait dec les (bad) mov pop scas adc sarb cmp gs cmp push mov popa sbb cmp and (bad) hlt jns outsl in stc aaa (bad) sbb inc (bad) mov (bad) mov into jmp push lea dec stos sub (bad) jno xor adc cwtl cmp mov dec repnz ja shrb sub sub in or roll pop out jae mov pop das mov fildl sub stc mov lods push xor (bad) (bad) or leave push push mov scas inc sub add push xchg pop mov push imul ja arpl sahf outsl movsl sub inc mov lock xchg fcmovnu jno mov cli mov push (bad) mov aas adc add push jg jecxz daa xchg dec fcom mov stos inc loopne or outsb mov mov push insl (bad) cmp lahf push jbe or dec push loope inc or or (bad) lods imul adc lods out mov pop mov xchg in ret push inc inc (bad) dec hlt es push jne ljmp in gs lahf and orps mov aam push push stos ret and jle sti shr and enter test ret pop mov jnp hlt das lods int clc sbb inc ret xchg lds adc scas aam adc aad mov daa jbe mov std leave xchg pusha add iret push jno in cmc lock stos xor pop mov fstpt negl test gs lock sbb inc or out push xor xchg push in orl mov cltd outsb jae adc jb push pop sub fcmovbe fldl inc dec notb out es je push xor xor cli jle cld push call xchg pop outsb lret add push mov mov jmp mov repz mov jmp ret int adc and inc push loopne mov (bad) repz pop ret orl setbe inc pushf insl loopne add aam xor mov xor or lret ret dec (bad) dec ret mov aaa mov cmp jle orb lods or arpl adcl push jecxz dec xlat outsb in lret pop push and jns call cmp data16 rol cmp pop outsl xchg lcall ja ljmp mov xchg inc lret je ret pop pop mov push xor pushf pop mov push sub sbb rcrl pop (bad) mov mov out (bad) fimul sbbl xlat test jnp push xchg imul fcoml mov sbb adc dec push pop (bad) es pop test test pop mov push fcoml clc aad mov cmpsb lods push pop lea and (bad) dec sub cmp lods aad mov scas mov add mov xchg mov lock aad push push movsl fisttp js fs out push inc enter mov mov pop mov cs ja faddl jno out or xorl pop (bad) sar scas ja and xlat dec gs popa movb fldenv pop stos movsl jmp and mov aad mov aas (bad) imul jge jg adc xor popf pop add (bad) enter inc das pop mov mov das pop mov mov das (bad) out add incb push lods out stc mov add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fistl add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop adc and mov popa xchg xchg shlb dec lcall dec dec ja inc mov rorb rcl add jmp popf jae (bad) loope adc jne add leave pop sar test or jmp iret dec aas aaa scas sbb mov in bound pop mov sbb (bad) push add pusha mov cmp out inc mov es dec xchg mov cmp xchg sub in sub and xor mov in scas daa mul mov mov lret adc cmp xchg or push enter sub jns stos inc pop out bound fcomps jmp push lea mov mov lahf std (bad) repnz and cmp cmp outsb mov ljmp ror jbe movsl out outsl jns cmpsb mov cmpsb ljmp or ss jns xchg cmpsb cld (bad) arpl xchg test or std xchg and rolb mov rorb in scas inc push inc nop xchg cld jecxz popf nop es xchg cmp pop dec mov dec dec out inc push cltd js sti add sarl and push scas mov xchg cwtl (bad) add cmpsl sbb push cmp popa add push pop lock mov dec daa or xchg mov aaa push outsb add cwtl jl outsb rcrb gs and into enter rcr dec pop adc fninit xchg scas popa fildl (bad) popf fstpt inc xor sbb aas jnp sbb adc xchg push repnz scas add add add call and mov or mov jl lcall cmpl sbb test mov pusha scas xlat xlat div pop push adc mov jmp xchg cmp xchg xchg mov outsl jnp pop jne mov sub (bad) sahf pop add jns push mov mov mov cmp push mov fdivr dec cmp fisub dec pop add cmp add (bad) push (bad) jbe fbstp xchg insl xchg ficomp das pop add dec cmpsl mov lcall jge aas sti mov ret stc sbb aam inc jle je sahf xor adc sub mov popf shld cmpsb jne inc push fisttpl out in int3 call dec aas cmp pop and stos sub cwtl jecxz cmp mov and xor xchg dec repz fidiv or movsb xchg xor aas and sub (bad) dec out fstpt inc test dec xchg push insl fldt xlat or test cmp cltd repnz jae outsl fs inc ljmp fwait mov fmul (bad) pop jmp mov (bad) int3 inc dec mov fs add test pop xchg das out (bad) enter pop pop scas and imul (bad) jl faddl xchg or frstor ret ret or jbe jb out mov cmp ss dec cmpsl (bad) das mov (bad) mov out pop shrb push fmull fwait pop rcr xlat std aad jecxz lret add mov push scas push pop in div add notb clc std sarl mov insl fisttpll push insl in add outsl popf stc jb test xor fisttp int shrl lods xchg daa lock sub sub xlat dec mov add stc icebp pop (bad) and or mov adc xchg pop imul add dec out mov jne push arpl jg iret lea ficomp int mov jb cmpb repz decl (bad) shll mov aam loop dec std lods cmp mov sbb loopne add jl jp or sti lret push inc xor jno roll ret pop in mov pop sahf mov sbb pop sbb push push jbe mov mov out inc ds push icebp lods test subl jmp fsubrl push xchg movsb pop ret sbb add cmp cli push int icebp pop hlt jp pop jne aam cmpsl push call fisttpl jl push add testl or push bound mov (bad) pop in sub movsl lods push rol outsl and enter jns imul jecxz lods scas xor adc mov pop divl aaa mov inc in add outsb and sbbl mov leave jp sub imul mov sti and xchg cli lret aam inc aaa rcr (bad) out and inc mov (bad) mov cmpsl push inc adc repnz gs fnop testl adc inc arpl fs mov adc pop (bad) repz imull jbe add push mov fs add sbb inc mov push push adc in cmc pop cmp mov pop pop mov add in inc sar mov mov mov sub dec test imul mov jecxz dec scas push nop iret push test ret mov jae xor jle (bad) out clc popf cmpsl int3 ljmp cs cmp pop idivb mov mov cltd lds fimul rolb xchg xchg addr16 ljmp inc sbb (bad) fcoms movsl lds into add rcll mov pusha cld inc push shrb jo (bad) icebp push mov test mov outsb and sub pop out sbb mov add cmp lock mov or cmp adc cmp cmc stos fwait mov mov jae pushl test mov xchg pop (bad) stc (bad) sahf and xchg enter into dec jnp lret insl (bad) flds xchg orl les jmp outsb cmp jbe inc in fldt inc and popf inc rcr mov sbb sub add jae pop push add cmp and mov mov xor vpsrlq je ja inc push pushf mov into ss ds cmp gs rcll add or mov adc cli loopne and enter add push jno push pop test fistp push ficompl in out insl pop inc in xlat dec cmc shrb or mov jp jl pushf xchg sarb idivb pop mov movsb into push stc mov fldt out jg push (bad) pop pop fiadd (bad) mov aas cmp jnp daa stos std imul movsl mov jl add adc les lret sahf lahf scas clc push and cltd repz scas pop adc sbb fcoml cmp rcll cmp jl inc sarb xlat push mov leave addr16 out mov popa cld scas hlt push lds in jbe rorl movsb stos (bad) mov inc inc sahf loope add jae cmp pop xor mov inc test in popa out add push cli xlat in sbb mov mov adc (bad) mov bound inc lahf out enter pop dec inc push insb adc das jp pop cmp mov mov or xchg leave or xchg xor rorl sbb cmpsb scas jecxz mov mov dec inc int3 cs mov stos (bad) sub cmp and sbb outsl pop jnp mov ds repnz sbb ds xor mov inc ljmp pop popa ljmp inc mov sub dec fdivl dec ret pop pushf outsl out (bad) aam lahf sbb scas cltd in xor and mov sub xor sub adc into (bad) sti in sarl es cltd aaa sub sahf rcrl push jae insl out jmp mov stos sti or (bad) push adc mov arpl leave imul repnz xchg inc add mov mov dec std lret repz loop test enter mov ss add adc sbbl imul pop (bad) out ljmp xor hlt hlt or and test stc (bad) int3 lahf mov jmp rcrl daa int test sbbl mov push stc push loop repz clc out jp sti out clc push push stc ficompl cmp cld push leave inc xlat hlt add mov std mov xchg and mov aas popf call pop loopne lret and cmp fsubrp push icebp pop mov jmp mov ret in test je test repz (bad) add psllq lcall sarl loopne and xchg mov sub inc dec mov out push (bad) mov ret pavgb jae stc leave aas mov sub scas fisubr cmpsl pop and add test sti gs push aas jbe pop inc ja mov adc jns mov add mov mov out fidivr xor adc adc test mov or push jge push rcll sub xor out iret addr16 in inc fisub dec mov and pop sub push xchg int3 and dec cs inc sbb push push gs call pop mov dec or adc roll ret fcompp fldcw cwtl pop jge (bad) leave mov sub sti outsb scas (bad) (bad) inc int fwait mov xchg dec mov nop fadd icebp push imul cmp adc or (bad) lods rcrl and sti xchg fidivl jmp or pop pop and and jo cmp rol jno add xor adc ljmp (bad) push ss mov stos fistp loopne lock (bad) add push sub xchg int3 insb jns movsb stos mov inc movsb sti outsb lea jae mov lret bound ret xor outsb cmp arpl mov loop cmp repz xchg cld xchg and jp insb shll or repnz or (bad) in mov xor push out pop mov push rcl cmp es lcall xlat mov and das lock sub iret outsl or mov xchg jne mov mov adc and ljmp mov hlt dec sti add inc ja cld mov (bad) aaa stc mov cmp add pop out fs mov mov xlat lretw inc imul mov sbb dec add aad mov int3 es mov xchg mov inc xchg sub or lret mov lock or rorl fdivl ret pop mov sub scas sub xor leave in arpl xor dec sub mull dec jmp in or fnop inc ljmp movsb or mov xchg outsl divb imul sbb mov jmp sub call test add jle movsb mov pop movsb aam mov ljmp enter das push dec popf pop jbe or loop mov mov pop pop (bad) ss xor sbb in or pop repnz and dec jb decl loope lahf push repz call imul addr16 jecxz mov (bad) lahf inc loopne jecxz jnp fdiv adc add nop je inc out xchg push rcrb pop or dec mov add sti notb mov (bad) xor iret xor and movsl (bad) and fwait jnp stos out lea test in aad sbb sub lock clc test int jl loop or pop mov test xchg lock fadds cmpb ret (bad) (bad) sbb call mov adc das lea xor and and jp cvtpi2ps pop pop cmc or push push in jle je inc push cmp add ds mov dec jmp add cmp mov pop hlt repnz fsubl lods cmp or xor sub insb pushf (bad) rcrl dec call xchg or xchg sub (bad) mov lock faddl sarl (bad) hlt lds sub out push test pop push xchg push movsb jp outsl js in cmp jno in cmp jge mov and jb int sub jae repz mov pop in pop cmc out test sti stos inc ljmp in int3 pop inc js pushf inc lret sbb cs jb adc sbb jle mov imul pop sbb pop push lret xchg mov cmp push add or sti or das xor scas lret shrl sub aad mov xchg cmp fcoms mov mov sub cltd pop fcmovu xchg mov push jl (bad) cmpsb push test pop sub adc jne arpl out mov shlb cmpsb idivb test std pushf xchg adc sahf add pop mov or aaa mov icebp in dec cmp xor mov popa and imul cld sub mov mov stos pop jmp jae jmp cwtl ss push jne (bad) adc mov dec in xor push loope dec (bad) pusha mov push scas movsl jmp (bad) test sbb out hlt and fcomip lahf stc bound js or call jmp popf lea (bad) je,pn and (bad) lea pop (bad) jmp xlat out cld movsl ds push jnp rcl popf inc das sub jge cmp pop cmp loopne xchg xchg and xor rcrb add lret clc mov lock (bad) movsl mov sarl xchg sub jo cmc mov cmp cmp push ret jmp aaa or (bad) xor sbb mov dec push mov stc std mov loope hlt scas sbb rol or inc jno xor pushf inc mov lret or std lcall popa stos adc (bad) or xchg xor aaa and lcall imul jle lretw xchg push cmp jae enter aas mov xchg cwtl and outsl ss mov jl pop xchg lods xor movsl inc iret mov push push jbe mov ret repnz outsb bnd rclb ds mov push adc icebp lds scas or mov lods jecxz daa mov aas jmp rcrl into cli ret lea jns in xchg daa dec sahf cmp repnz xchg daa (bad) jg add add add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoms add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb rolb (bad) mov popf cmp arpl fstp dec xlat je clc jmp out cmp sbb rorl xchg scas in in cmpsb jmp mov pop jecxz add push and movsl in mov popa add mov inc cmp jno or dec pushf (bad) mov scas sub push (bad) in shl sub inc mov sbb mov repnz mov movsb (bad) and rcll cmpsl out add sub cmp mov outsl jge insl icebp frstor fisub sbb adc xchg push xchg leave out scas mov mov jbe jmp xchg adc lea ljmp sbb aad adc and and (bad) jae scas mov (bad) loopne aas out lods mov sub das bound push std xor xor pushf scas or sti iret aaa jmp negl orb movsl scas (bad) or push push sbb sub subl (bad) loopne icebp push xor pop mov lea fcomip inc mov mov movsb or (bad) mov enter mov xchg pop push sti sahf stos xor push lods dec cwtl pop movsl out ja in hlt jno (bad) rolb jne popf (bad) in dec sub adc scas cs inc pop adc xchg aaa mulb (bad) stc and sbb or xor jne or aam (bad) jb (bad) daa push (bad) imul adc imul movsl lods dec mov (bad) cmc xor jge jecxz cltd aam movsb sub in hlt adc faddl dec js out push lret sarb adc clc sbb xor sbb adc pop push jl push xor rdpmc xor xorl sahf adc stos out scas int3 jnp out ret xchg adc nop add sbb scas gs push repnz fs mov andl push scas cwtl mov adc adc out in jecxz cmpsl fnstcw mov clc sbb shrb in test out mov clc adc mov push add (bad) rol xor movsl jmp iret (bad) (bad) jns sbb out (bad) or inc insb jbe inc into jmp jb mov popf fldenv fwait cmp and fbstp loope shr (bad) xor lret mov mov stc adc add inc lahf xchg fwait pop xchg cmpsl jnp aaa cs ljmp aaa mov or or mov cltd sar xchg hlt add cli jge popf outsl stos fnstenv in mov in in int xchg jns pop shr ret lea in mov or inc insb add nop add push xchg inc xor in repnz push jmp cmp rcrb (bad) ja fidiv jle test in sub ss jno lock int outsb ss (bad) cld dec push cmp and test xlat jge pop push cld mov out sbb and xchg aas xchg pop arpl pop pop cmp scas pop push mov stc mov mull or xchg add xchg lea mov cmp enter push test mov test popf mov les imul das adc jne add cmpb in sbb (bad) jle cmp jo push inc sbb int3 dec mov enter in lea cmp push xlat push lret into pop jns sub xlat arpl in mov in mov cld pop lods dec pop shl outsl cmp in cld shrl mov cltd xor test sub dec mov test and lods add push loop mov and (bad) jmp xor xlat cmp fs loopne push xor dec adc clc jo movsb push pop pop xchg in and insl push lods lods and add jae iret in mov sbb int3 daa stc data16 mov pop (bad) xor sbb and pop push decl xchg xchg push rcrb xchg xchg sub cld jnp cli stc popa addl rolb repnz add out cmp mov cmp cmp and xchg and daa sti push ret stos sbb jl xchg mov lcall dec fisub push daa lods dec inc sbb ss inc ja lret jo out sti loope fldenv repz iret add and xor xlat shl dec add dec loop,pn cmp rolb adc clc xor xor mov call push jne dec dec jg lock je call es imul divb stc fcmovu add jp int bound fs adc xor lret cmp dec jno stc jecxz xor std fmul cld adcl jb cmp pop fcmovu pop leave jge fs in jbe pop lea push and and sub clc xor mov sarl xchg or stos xchg mov enter dec mov mov mov daa xchg cli push lahf add (bad) mov sub fcomps in mov stos sbb scas adc arpl cmp xchg cmp jle adc xor push fs movsl adc leave adc cli popa sub sub js pop dec sbb push in mov sbb and fadds mov add adc push lock inc loopne stc adc jp dec sti arpl cmp xor adc mov mov pusha (bad) into xorl or cmp sti imul leave xchg mov loop div (bad) outsb ret mov sbb xor pop xchg inc add xchg neg pop cmc (bad) je mov xchg cmp dec dec orl sbbl mov (bad) jecxz push dec aaa xor adc shrb add scas dec xchg mov add out hlt xchg cmp popf sahf jecxz clc and sub push mov test jmp jne sub bound pop fldenv cmp add push cmp data16 sub (bad) in pop pmovmskb into popa mov insb shlb push pop and cmpsb xchg loope pop xchg das loope aad (bad) xchg movb movsb push push xchg fnstsw test sbb add imul imul pop into rcll pop rclb in imul jns sub enter bound inc xchg xor daa sbb aas in sbb sub lret adc adc mov das stos mov cmp das mov scas popf xor adc ljmp add mov fadds xlat fistp sbb mov (bad) leave rcl jecxz cmc cmp jl loope inc mov pop xor xchg jne lret fnsave adcl pop insb ret lds jo mov mov mov jns out mov push fimull pushf into pop shrb dec pop pavgw jl jg xor fistpll jae shr shlb (bad) lcall or (bad) adc pop or mov push mov jmp outsl inc cli pop les and mov jecxz xchg fisttp jae fnstsw sub cli imul cmp loopne mov mov adc ss stos cmp cmp clc mov stc sti cld adc inc pop push lret (bad) lcall lea cmpsb jno scas adc adc outsb push lock jmp xlat into test stos scas xor stos and addr16 dec lods mov int3 pop or push in adcl loop movsb inc push and mov lahf repnz (bad) shr cmp or xor mov pop pop jns insl fwait popf cmpb test xchg mov fidivr mov mov adc push clc xchg jbe cwtl fisttpl lods jmp push sub ja mov mov pop inc xchg idivb lods xchg ret stos mov (bad) fs jno jae cmp mov mov xchg pop or dec mov jmp hlt in dec mov cmp cmp lock jmp push cmp mov ja je pop dec mov js jecxz inc adc sbbl pop orb dec ror sub mov push sbb iret fcompl jle and xlat into or outsb and pusha push and (bad) xor fstpl or ds cmp adc call add adc pop stos lods pop dec pop arpl lods incb lods push or mov mov cmp lret cmpl sbb lcall mov sbb repz xor xor daa daa jnp loop cmp popa mov (bad) lret insb add insb fwait dec fwait int ds enter xor mov xchg sbb cmp mov pop mov dec sbb pop mov sub and stos gs sbb mov mov (bad) aaa sarl mov hlt xor dec mov stos leave rolb cmp mov pop out mov mov jb and mov fnstcw movsl hlt adc aas sahf (bad) jge lahf aad xor mov fnstcw (bad) (bad) imul mov repnz xor mov jnp add push int (bad) push mov test xchg fdivl xchg mov aad out imul sub loop mov cmc mov out sbb (bad) sbb (bad) loope mov cs push std mov xchg fistpl aad andl lret or sub ljmp dec push ljmp mov inc mull cmpsl or jp fs mov testl xor fdivl cmp mov lcall inc sbb rorb addl into lods pusha xchg aam pop sub in sub mov clc mov test jge adc mov movups dec es and stc push adc xchg int3 das mov cli bound xchg sub xor pop jg clc or jne xchg mov add test xlat cmp aam adc or int3 imul cmp imul int jge adc imul stc mov movsb out xchg (bad) pop pop push sbb imull stos leave sbb push sub jno loopne std sbb inc xchg cwtl mov fisub pop arpl mov cmp sub pop or jae xlat mov repz jp or and std pop cmp dec iret sarl pop orl and xchg push cmp sub lret adc out pop ficoml lods hlt push test mov add das sub (bad) shrl and test xor xchg xchg xor sbbl mov mov jg in (bad) je ret mov movsl mov sbb xor ds adc sbb gs ljmp insl mov push mov mov (bad) fcomp addl inc mov push xchg (bad) xor or inc aad cmp mov jne lock pop sbb (bad) push push cwtl out sub dec dec lock sub test sub in into fsubr inc pop (bad) mov je or or lret mov sbb or xor sbbl lea xchg xchg cmp jg pushl hlt xchg xchg cmp mov mov es repz pop mov add dec ret lcall cli mov lahf aaa (bad) mov mov xor nop scas notb out add pop xchg push cmpsl jbe pop insb ljmp mov or push mov lea bound cmp bound mov dec out (bad) cmp jge or popf xchg mov pop jae mov adc push sbb mov add (bad) into (bad) rcrl sub aaa jae (bad) xor xchg xor push sbb mov in enter dec pop mov cmpsl dec mov push mov popa pop jecxz mov xchg add pop xor in add inc scas push in jl flds addr16 mov mov cli shrl scas fadds shr xor add inc dec adc pop push popa push in adc outsb (bad) aad leave testb push das lea mov scas (bad) sbb push xchg mov mov orl into outsl aam and cmp adc jne sbb gs icebp pop sub xchg mov cmp mov enter sti stc xchg mov rcr fadd fmuls mov push cmp add cmp jge push stc cmp xchg jmp lret icebp xor push dec add cmc cmp push xor (bad) test adc dec scas xchg mov (bad) xchg mov cltd xchg and sub shll pop testl loop jae xchg movsl push add sbb icebp andl sbb jmp add icebp lds (bad) fsubl mov jp sti aaa js fsubs clc fildl fistl fisttpl pop popf xchg mov xchg inc (bad) popf mov mov inc (bad) rolb leave and sar ficoml mov pop rcl cmc ret ja mov push xchg mov idivb jne add addl rcll mov (bad) out jae ds lock fstpl mov notl pop pop inc jge hlt out arpl dec test xor push jecxz pop js dec mov (bad) movsl inc and lret cmp adc mov pop stc cs mov and cmp daa stos in (bad) (bad) mov cmpsb loop mov dec std mov inc jl jae mov insl test xor add out lods je sub aad jae sti dec push mov inc sahf in test adc and pop lcall xorb mov sbb stc or and sahf sbb movsb adc pop rclb jmp icebp lcall movl sbb mov fdivr sbb or sbb out std pop sub adc mov xchg fbstp sub inc xchg fsubrs daa pop and mov and pushf imul (bad) and cmp sbb enter std push or imul fisubl ret jge jae lret or mov sub pop das adc ret gs out jnp or jno outsb mov xchg lods pop test add inc std cmp pop inc iret sahf cmp mov iret sahf cmp mov iret (bad) incl add pop ret inc hlt int cmc add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ficom add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop adc mov lea and sbb out inc lret xor ja ja dec push adc xchg rcrl nop outsb adc inc lahf out cmp jo mov mov adc decl adc (bad) popf pop and inc aaa jbe ljmp xchg mov cli dec add dec inc lret in mov pop fcmovbe mov pop xchg xchg xor fidivr push or mov push fld1 addr16 testb sub sbb loope out lcall add inc push xor mov incb sbb (bad) cmovle pushf repnz inc xor jmp xor (bad) mov (bad) aaa cmp pushf and or out xlat ret aam divl hlt adc add cmp insl out pop sbb dec push inc ret mov xor adc mov push mov and cld mov out mov in jecxz test adc mov fsubrs lods mov cmpsb das push cmp popf out xchg fistpl les xor js cmp bound mov cld or (bad) bound xor pop xchg jmp inc popa rorl lret int mov (bad) insl mov inc pop xlat pop pop mov add sahf ss mov (bad) sbb mov push cmpsb les callw lcall ret dec (bad) fildl ss nop fidivl adc pop nop jnp (bad) pop inc addl sbb pushf test in jecxz and cli ljmp or movsb sub xchg push adc add pop mov out dec jle pop int3 ss push xchg jb scas mov adc xchg fidiv cmc (bad) rol mov dec fldenv push fs inc push clc adc aaa int add call xor aaa into dec adc cmp add push pop cmp sub xchg push gs jno sbb (bad) jno ds pop mov cmp inc cmpsb out aas ljmp mov fldt rcll xchg test dec push and icebp jmp test aas roll loope stos fldt xor lea outsl cmc adc xor or xor jns popf xor popa lcall arpl inc push rcrb and jnp sub jmp inc cli mov imul std mov mov sbb push out xor push lods ret sbb cmpsb in pop mov dec movl mov mov mov in ss fs pop mov inc inc push dec in lcall jne jnp enter loopne mov mov and out orb push pusha mov (bad) sarl or and sub lds mov jne jns scas pop adc test inc adc pop mov test shll push jge (bad) adc imul leave subl xorl shlb sub jne mov mov repnz test xchg mov mov sti bound outsl out sbb xor jge mov xchg nop icebp jmp cmp mov inc mov sbb inc adc jb xchg add pop sub stos mov cs js and (bad) jns push inc push xchg push cmp dec dec lods ds lock jne lods int jbe test xchg or test movb mov mov (bad) divl sub in data16 dec dec iret nop xchg push adc aad (bad) enter add xlat fwait pop sbb and mov or rcrl fstl xchg xor push insl cmp jbe test push sbb and stos out add push loop lahf cmp dec adc mov inc jns xchg rorl fsubrs and in xchg jns mov das mov lahf imul insl orl (bad) into jnp xchg test rol negb dec xchg loop imul jo jmp or mov jnp mov lea jo insl mov leave popa lods lret mov jle je add sbb xchg xor pop ja in xchg adc repz sarb shll stos sbb adc mov add ss mul fldt jge insl mov fimull sub xchg xlat fwait bound dec mov (bad) mov lahf inc ja cmp sub inc dec push inc xchg mov dec loope lahf repz or mov jo movsl cmpsb cmpsl dec push icebp mov mov mov ss lock scas gs mov paddsb adc jae es (bad) fsubrs pop in unpcklps das dec sti int out clc test fnstcw mov inc pushf loopne cmp shrl xor dec lcall sti scas loopne sub mov dec mov movsb sbb aad fs jge sub cmp mov inc loop dec ja push pop jbe jl cmp xchg lahf sbb sbb cld mov or lret fcom xor lret push (bad) hlt inc stos movsl xchg or lahf ss cltd jmp pop push dec stos sub popa (bad) das rorl cli out adc jae loopne cmp and pop aad sete sbbl loop leave bnd (bad) mov xor xchg jne loop enter scas jbe cmpsb pop in jno push add sbb xor xlat push add push (bad) adc add push out addr16 push outsb sub rcr pop cltd push lea (bad) dec fwait mov sub es push in pop mov in xor mov xchg callw dec dec imul cwtl jne fildl fsubrs sub jmp mov mov stc mov setns ds mov gs test sub mul cld cmpsl repnz aaa scas in stos call dec movsl cli call out insb xchg xor sti aam add fwait test jmp jnp lret push dec call xor add insb je stc inc dec out ja pop lahf add loop xchg xlat mov or and negl dec sbb dec dec push sbb dec and sbb push aaa mov scas hlt cmp fisub jecxz imul lret je cmpl hlt pop pop nop push cmp adc add pop add daa jne lds pop pop leave ss arpl loopne cltd pusha sarl adc mov test aad mov lods push das mov jmp push mov jb mov pop jp lock lahf das mov add insl and decb (bad) mov xor xor (bad) dec push mov jns hlt xchg mov loopne test cmc lods data16 (bad) sarl cwtl dec push xchg in movsb shlb out test sbb repnz pop insl loop adc repnz enter inc xchg call xchg jge xchg jno lret test xchg push push adc (bad) scas in adc mov sub rclb test pop sarl inc mov (bad) sbb aad bound lcall sub jg (bad) addr16 cmp inc xchg pop push xchg jmp popf call mov and ja imul pop add inc pop test cli imul (bad) push mov cmp adc inc rcll adc outsb or loope mov test adc and xchg mov mov mov lods jb dec out rcrb aaa insl jecxz addl lcall sub mov sub bound xor push rclb sub (bad) sbb pusha dec lea cmpl adc pop out aaa negl push xchg jmp lea fcomps (bad) push push xor pop (bad) cli mov xor fwait add xor outsb jb push cmp je icebp mov pop imul cmpsb adc adc fistpll mov jg jecxz stc add cmp in fsts or ds fsincos int loope movsb sub adc fcoms sub pusha lcall (bad) sbb sub fidivl xchg fistpll xor push (bad) mov xchg inc lods jp imul inc outsl nop xor outsb ljmp xchg mov ret test insl pusha leave dec mov pop mov sbb sub stos rol adc or pop add xchg fsubrl and xchg insb lcall fdivp inc mov or jmp aam mov je (bad) mov rol fs je sbb fdivr mov mov in ret xchg stos lds subb sub pop pop add mov lcall xchg pop add xchg cmp hlt sbb (bad) insb fcmovb pop sar imul outsb and sub test pop and sti nop or pop ss cmpsb out (bad) xlat fs push sahf xchg and and pop fsin loope xlat (bad) cmc cli in jns,pt mov (bad) into dec sbb icebp rol add test lret ror cli (bad) je movsb add push leave lods mov mov je out test (bad) pop or mov push xchg mov int fcomps into dec mov or test and jge ret dec inc inc outsl inc in jmp add aaa pop enter idivb jnp add mov loope dec pop repz mov outsl push jl xchg mov dec movsb cmpsl cld test pop pop push pop pop loope cmc adc jno jns jnp stos pop (bad) (bad) sub dec mov int3 fs iret add jge (bad) cmp mov sbb xor push icebp test add inc dec mov push sub je mov or decb (bad) outsl (bad) ja dec popa adc mov insl adc lret inc xchg mov mov pop push out test cs mov sub icebp fs stc andl and scas test (bad) fsubs cmpsb stos cmp xchg jecxz cmc out fmuls in pushf sub negl dec arpl push mov mov (bad) (bad) mov addb mov inc mov mov aam das mov dec adc in mov (bad) cwtl outsl (bad) lret adc pop mov dec out and jns int (bad) and clc outsl pop inc mov mov out fldl iret xchg adc jp inc xchg inc cltd and fcomps jge and mov out gs sbb cld ss fnstcw adc xchg xchg scas pop lret push hlt incb loop lcall xchg ja xor push inc xlat out mov and lds (bad) mov jae repnz fsubs nop std pop mov enter lret movsl mov adc cli in ret je mov out loop bnd (bad) mov sub cmp xlat pop cmpsl ss lods test ja sub scas mov pop cmpl sub mov out add test xchg into jg cmp xlat jnp jmp icebp inc mov jmp pop dec push sbb ret inc inc xor into jns mov mov or fild add ljmp rdmsr fbstp int3 divl out dec jmp jo out das icebp add in mov ljmp sbbb and loop aaa jne enter pushw push lds fidiv movsl add push sub jp adcb mov mov cld mov rclb icebp ja pop inc (bad) xchg dec lea and fildll cs adc mov jp push xchg xor xor dec stc icebp dec stc adc shr stc aam xlat push popf xchg les mov les pop dec pop and mov jne xor cmpsb adc je sbb das push mov mov clc mov dec cmp pop add and gs push cwtl push add jo sbb imulb sbb add dec les fwait int3 sub fnstcw xor jns push nop dec push jmp push js sub ljmpw cmp ss out loop inc das sub insb push fstl cmp sub mov jnp cld adc jl test in lahf (bad) das leave and jne mov inc mov add cli gs iret aas dec aas push addr16 or pushf lcall out test aaa add jne sub mull aas xchg rcr aad jecxz jnp and out add lds and lock pop jmp pusha (bad) loopne daa enter push inc sti mov sahf sbb scas loope push sub popf cmp call push cli loope int3 jo cld xchg into mov adc ret mov iret out aas rcll cmp test or jo loopne cmpsl scas mov stos enter xchg push inc fstp insl or loopne mov ss inc scas sub ret lcall cmpsl (bad) call int3 jns mov lcall les ret cmp pop sub lcall cld mov fwait ret inc xlat ss mov data16 mov xchg in push cmpb cmp cs push shrb cmpsl pop int3 int3 inc divl cs bound jns jmp gs lds enter add push mov loop cmp jne pop loope stos stos and or (bad) push (bad) ret insb ret jp xchg aaa or mov or data16 loope and push mov sub sub movsb mov jne jne in jno lock add mov cmp idiv ss out mov aad mov push xor out popf (bad) fisubrl imul adc or mov fistpl jp jns jae sub ds scas cmp push sahf or dec test xchg mov and adc movsl add clc scas mull popf das add adc (bad) xchg mov clc mov es xchg pop loopne pop mov test push aaa cwtl cmc enter jmp push outsl (bad) loop fisubr ss pop jmp mov mov popa out add xchg stc inc sub ds and sub cli inc lret mov or neg sbb mov jge lds sahf mov ret les adc adc addb sahf lcall jnp in fnstenv jnp in fnstenv add incb mov ljmp add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push aas sbb rolb ror loope (bad) fcmove jmp rcrl sbb pushf out ja fwait cmp in cmpsb mov jle xlat repz add jl clc pop jp inc es imulb and fsubr sbb xlat lret rcrl xchg mov jmp sub rolb or (bad) jnp test mov push insl pop adc xchg test pop mov or insl lea mov sarl pop fwait inc fwait sahf jb icebp push push (bad) sub and mov mov outsl fsubrs xor pop in stos adc jp push lds test mov daa ret (bad) cmp mov movsb aaa cmp negb mov cwtl dec mov dec jne rorl or xchg lods out jp clc lods int xchg mov das cmc outsb pop cmp pop or mov mov (bad) daa jle jle jae mov mov mov stos adc int mul out mov push dec sub in cli cmp (bad) jo add dec fsubrp enter sbb mov fs cmpsb mulb cmp and pop mov mov xor mov xchg lds nop jmp xchg pop loope js stc repz loop sub add fyl2x mov popf inc xchg adc dec (bad) in ja lret cmpsl (bad) inc mov push jb jae lea insb adc push lock jl mov leave das push push int pusha mov in sub (bad) pusha pop loop pmullw xchg ss sub decl cwtl xchg ja fcompl fcoms out loopne scas (bad) xchg adc nop xchg adc mul test (bad) outsl cltd xchg jne sub lret push (bad) cltd lock in int lods jae xor mov and xor mov test cld sub dec addr16 ss push loope les lods dec clc push jle add lods clc xor push pop xchg adc repnz add sarl pop test lods idivl ffree fs add lcall or xlat cld and je cmp lock or adc ja dec mov pop dec push leave adc jbe add outsl fnop (bad) stos push dec push xchg or in daa add out repnz mov pop (bad) clc pop aas std loope jg jbe (bad) sub inc iret fxch in shrb add and push mov push and sti xlat ds sbb xorb adc nopl sbb mov dec (bad) xor pop ss inc movl pop jge,pt std test stos or out mov jl insl xchg je ret fsubrp jl push inc mov pop pop ja add out stc into gs lret mov jecxz loopne in add fwait jmp addb dec dec mov mov out mov mov nop mov xchg les sahf cmpl popf mov (bad) or pusha (bad) std xchg shlb cmp frstpm(287 jmp adc repnz mov xchg (bad) stos lcall rorb and xchg fdivrs mov sarl jnp dec scas jbe aas (bad) loop lcall dec fstps add push sub mov je xor popa shrl xor sub (bad) es inc aaa inc xor hlt pushf rorl sarb mov sbb push add lods jno inc and mov loopne pop push cld rolb sub repz pop lods lea mov mov mov ja aad jnp pop repz jp stc pop dec outsb pop jne jno scas dec sbb repz add adc xchg shlb and int dec repz mov insl xchg pop repz and shrl cmc mov enter (bad) adc fwait adcb lds clc (bad) fbstp inc lahf stc inc mov dec pop xlat mov pusha ffree ds dec (bad) pop cli inc add xchg jmp cmp repz adc aas adc insb ret jo jbe cmpsb ja pop pop sub repz pop movsb pop das out jne sub cmp fldl pop lods mov sbb fsubrs push pop and (bad) adc enter push pushf inc add jmp fucomi fwait mov push pop inc pop xchg mov icebp das xor xchg push cmp (bad) fbstp push daa push cmp mov test out jnp mov roll add mov jnp sub mov push mov int3 jle (bad) popf mulb aam dec mov ljmp mov mov (bad) (bad) cmp xor lds mov pushf pushf sbb sub ja nop rcrl pop push mov jecxz outsl out mov mov cmp xchg xchg enter sub jbe scas xor add inc out sbb lods stos fst mov or xchg dec loopne pop sbb jne mov aad mov cmp push sub xor jl jns mov outsb and xchg es jl mov dec mov pop mov jl das es hlt outsl fwait jge xor jnp out push icebp push sub mov xor insl mov scas xchg mov test stos dec xchg adc out jns dec mov cli aam mov xor mov insl cmp out mov lahf xor movsb stos movsl sti (bad) sub jns push or in pop int3 sti icebp mov mov aas dec add pop and jp fdiv dec fs push cmp (bad) mov dec mov adc inc add add push stos cwtl mov xor sub push insb lock out (bad) (bad) xor hlt add out aaa inc add jbe sub cmp xor push push xor pop loope lret fs jae mov or inc mov stos int3 cmp xor mov push clc dec pop (bad) mov push outsl mov test packuswb sub (bad) ljmp and add test ja or in imul push je xor mov into pop jb and js pusha dec cmp sub sub movsb add sub mov bound mov xorb mov add push or loopne or xor lcall sub xorl mov sub (bad) mov outsl repnz loope xorl dec ljmp mov xchg dec and dec fldcw xchg subl sub sbb in mov jl pop push push jmp inc arpl jno mov sub fisttp mov js sbb das fisubl enter pop andb fimul (bad) xlat test dec sbb cli aaa lea inc es jno and sarb das cmpsl jl pop sbb outsl xor adc cli sub (bad) sbb push into jge shrb push fwait (bad) outsb nop lock sbb in xchg xchg xor pop inc or sub stc rorl adc adc sub loope sarb shrb adc test repz (bad) jbe sahf mov clc pop xchg es imul int fscale fs (bad) jl push std cmc jno cwtl push adc clc cmp adc dec sahf pop mov mov adc dec pop cmc inc rclb mov lds hlt test mov mov sub in inc lods shr (bad) xor sub fistpll sub mov in mov cwtl clc push fdivrs sti push mov test dec gs fnstsw xor lods xchg ljmp mov jbe aam fimul xlat mov fisub addb fcoms jmp and call jle nop jae jne into jno sbb inc into shrd xchg cli jbe imul imul push dec and push (bad) lock dec inc sub mov xlat mov imul add inc mov lcall (bad) cmp add xor sub out adc lret inc add (bad) pop (bad) shl push pushf cmp scas es push and addr16 sbb inc aad mov inc daa pop stos aam sbb pop sub sbb inc inc int3 push and inc inc jnp jg cmp aam loopne (bad) jno sub mov and mov insb jle cwtl jle and outsb push cmp je add and xchg pushf jo lds mov inc (bad) loopne (bad) cmc ficompl push fdivs adc gs and test jg lahf mov test adc xor xor mov mov iret repz push adc scas inc jmp (bad) shll inc into mov daa out rolb int test cltd js fs push cmp (bad) xchg inc xchg jb call jge out testl inc addr16 in loop jp lock cs mov negl rolb rcrb testb cmp push add mov sbb jb ss cli pop fiaddl ret xchg jg loop sub lcall hlt push sbb adc jae cmc dec jecxz fldl cmpsb icebp mov inc repnz pusha push inc arpl addb (bad) xor incb ss cmc idivb mov out pusha mov ret pushf icebp mov dec (bad) ljmp jl in and adcl cli lds inc lcall nop and add lods sub xlat ljmp bound adc xchg (bad) imul addl call cmpsl inc pop push (bad) ja (bad) cmp push jge jge dec pop push aam jne scas xor jo fidiv (bad) mov fwait xchg mov mov mov xchg sub repnz mov out push sub xor fmull in pushf cmp mov enter push outsl fld test jo outsl xor andb jp (bad) pop clc outsb xor pop cmc sbb pop in cmp sti aad add push jmp adc xchg jecxz jl sahf icebp add loopne adc psadbw sbb pop sbb subb push push (bad) push leave (bad) mov push orl mov inc test xor add cmp jmp pop or dec mov fwait add ret repnz dec or lods je lret cmp xchg test fistl sti xchg mov jmp into cld xlat pop jmp push lods in pushf xchg popa inc jge dec adc xchg dec dec mov lret mov enter (bad) mov aaa js adc cmp mov out data16 repnz sub (bad) sub cmp fisub stos pop fs push xor sub stos sub xor lods in cwtl or decl push shr cltd or imul ret add mov arpl lahf call orb push pop sub dec dec mov adc sbb lods into je mov mov add pop insb cmp aam mov add (bad) mov imul mov leave sub dec loopne imul dec mov mov sub jle dec pop jp cmc aam stos xchg stos (bad) jnp mov mov mov adc stos mov push les push dec mov sbb or int3 ss rolb into pop (bad) mov sub jo mov call push mov dec jno rol out jbe mov cmp jnp add inc in push fistpll popa mov movsl cwtl loopne cld rcll add stc fsubrs test je,pt icebp insb shr aam pop pop push sub int3 xor adc test jmp mov fistpl inc mov cltd or inc outsb mov or mov cmp jno scas inc clc xor popf stos dec cmc sbb ret pop jb out (bad) jmp scas in out ds push ja add sbb out xchg sub mov lods daa (bad) scas leave and into inc jb cwtl sbb lds stos in repz shrb jecxz arpl stc call push pop and daa outsb (bad) repz movsl inc test pop pop fdivrs aad cld dec std mov push ret and dec popa sub xorb dec dec into jnp or fnstcw les ret pop pop cld enter sbb dec or and movsl sbb pushf jno xchg lret fs cmp cmp jl dec jb sbb inc push mov ret dec fstpt and mov cmp mov ds ljmp lock (bad) mov (bad) sahf add mov addr16 lds lret sar test dec stc cs outsl mov cli adc mov bound and inc mov (bad) rorb leave (bad) mov sub std sub or pop jle cs or or push dec lods imul jp sahf daa jg and sbb repz movsl pop inc pusha js xchg (bad) push into mov fistl xchg enter pop push ret dec mov fwait scas gs add shrb sti nop in hlt pop hlt inc jle xor mov sti or cmp and ja lret inc lds push and scas cmp lds cmp adc fldt (bad) jl out ss jns cmp js int3 and in test jnp xchg push fistpll mov mov mov inc pop adc and sub cmp mov stos pop xor (bad) cmp adc push push jmp sbb je xchg int3 pop jge push mov mov verr jno cmp mov mov fcom rcr loopne and aad mov arpl adc jo aam sarl dec adc in movsb pushf lods lret mov jle adc and fsubrl call imul sub xor ja sbb loop iret cmp add mov jp sbb xchg (bad) das sub aas (bad) or xchg and arpl iret ljmp mov jbe outsb scas call cli cmp sub push jne int in (bad) push in ljmp popa push cli and test popa or lret shrl mov push mov leave fwait push jp and (bad) mov icebp push lods (bad) (bad) scas scas or mov sub mov in pop jne inc adc pop lds jl xor cmp (bad) ja jb cmp jecxz mov adc sbb in fnstenv jnp in fnstenv jnp incl add aas xchg fiaddl loop,pt add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aad add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas fmull rolb lahf clc imul mov (bad) popa mov fldt cmpsb cmpsl es imul lcall lahf out sbb add sbb mov outsb adc mov xor push es mov outsb sbb xor fwait mov fsubr aam sahf popa jecxz push imulb xor call jns or lahf sub and pop xlat int3 push (bad) xor inc add or xlat dec and cld sub pop add mov cmc sbb add pushf xorl pop fstpt into sub in cmp imul add push lret xor sub or (bad) add cmc das imul aaa push fadds (bad) test loop adc push lock mov adc dec addr16 push pop adc xchg lods xor sti push lcall loop dec das cmp int3 ret sub mov cmp scas int3 jmp call test fwait jmp xor mov jbe je rclb call cltd mov add mov jle xchg jnp inc rcl xor cwtl or fdivrl mov arpl jne insl push inc adc cltd (bad) (bad) sub int cli fstl outsl fcomp fmuls test (bad) sbb gs incl inc leave sbb int out popa cltd daa cmp push pop push aam inc inc in ret dec mov xchg jmp mov outsb int push int inc push adc add xchg es push sub xchg loope mov adc das addr16 imul outsb iret sub outsl sahf rclb sub jl jb je in out scas mov pop ljmp fmul and out imul cltd sbb adc add push enter mov ror xchg jbe loopne inc test pusha mov cmp rorb mov cli mov mov push jmp jle jne push dec insl mov or int mov mov cmc sti das or push inc and pop adc outsb and inc xorl cmp dec test in fstps (bad) hlt pop aas dec add jo ljmp pop test inc xchg pop jo lods in push sti (bad) and sbb cltd sti ret mov jne adc bnd cmp aas arpl out pshufw ret mov adc clc mov adc inc xchg mov adcl inc adc ds pushf test fcomps ja pop outsb inc push negb stc xchg mov jae lds in pop xor bound and dec arpl push pusha fsts jno dec xor cmpsb (bad) adc add movsl dec das aaa cld pop pop inc popa int movsl and outsb imul mov mov je aad mov leave mov adc fstl add jle or ffreep or insl mov daa dec jnp fs (bad) bound push ss dec mull sbb (bad) xor and mov mov cmpsl das pop add cmp aam adc in fidivl sub imul (bad) je mov xchg inc inc scas mov (bad) repz jg sub outsb jge xchg jle insb dec sti inc xor xchg lock cltd pop hlt xor mov aas scas or push pop fstps jb inc mov rcr sbb push mov aas inc inc mov sbb leave cmpsl pop lahf xlat test mov das push dec adc ficomp push outsl sbb int outsb mov imul mov xchg sbb fs frstor push ja in imul into sub adc mov imul fisttpl subb mov jno push jbe inc cwtl rcll mov sbb mov stos push insb test insl ret (bad) pushf fwait jnp lahf mov (bad) (bad) mov or adc push cmpsl inc xchg push mov stc push gs adc sarb pop testb push imul insb and fiaddl inc mov lea mov fadds push ss pusha lret and xor mov mov js icebp dec jge jle leave jp cltd jb jl jbe push ret jp add or jae mov pop bnd (bad) movsb pop test cmp dec xor ret jb push outsl jb add jbe cmp sub xor repnz test data16 mov dec push and sbb push xchg outsb mov xor je addr16 outsb sbb mov testl fimull jecxz push (bad) fs into push sub or mov mov cmp call sub and sarl test jmp cmp or sub fwait mov cmpb imul rclb clc jl push andl mov add pop pop or (bad) lret ret and bound jnp sub mov mov sbb xchg mov lret add lea int3 adc mov mov cmpsb cltd fstpt mov dec xchg xor xor cltd mov cmp sbb xacquire lds pop aam pop sti imul jmp mov jmp push dec sub cmpsb sub cld pushf cli mov cmp sub jo adc ljmp pop dec test test push mov push clc arpl fisttpl mov repnz xchg (bad) sti jl inc sbb aam popf mov mov inc mov scas lds lcall imul repnz push mov fwait inc or mov mov sub push (bad) or sbb rcl push cli mov mov ficompl mov sbb sub insb xor test in push addr16 or mov pop or mov lods in and es movsl add aam mov xchg adc mov push push and (bad) sub aad inc in into xchg and jb adc mov and dec int3 lds into add clc xchg inc divl sub jb mov js mov aas mov mov fsubrs dec insl in cltd and push and sbb xchg or sub (bad) int3 dec add push pop sbb and divb push pushf jbe xor mov jle and mov sbb je and stos dec mov cli insb stos mov add (bad) ss cmp cld mov ret mov pushf mov daa cmp pop scas repnz test (bad) shl fstl mov dec nop mov cmc ljmp jge je icebp add mov mov xorl push addr16 cmc das or cmp pusha out xchg mov (bad) xchg cli pop fsubrs cli sbb push mov cmp popl (bad) int stc loope inc (bad) cmp jg subb mov sti or inc imul test mov push xor dec xor and add push ret (bad) stc lahf lock adc mov das xor imul fcoms ficomp sbb fstps inc mov cmp xchg out fs (bad) (bad) mov sub je lahf daa xor aad int3 or ret pop adc arpl cmpsl call or sbb les sub mov add mov xor inc sub mov shlb sub rolb and or inc sub sbb mov movl pop cli out lea clc das push adc jge or sbb subb arpl jo cmp xchg mov adc sub (bad) lods sub nop sub mov pop sbbl repnz popa js test adc (bad) lds clc mov cmp bound pop std sbbl adc (bad) (bad) je and sbb inc xor jns js mov test repz push jecxz sbb aad and stos inc sti daa mov loope movsb xchg jno cmc add insb or iret rorl inc pop repz inc dec and sub (bad) jb data16 arpl out cmpsl jg (bad) xor cmc lcall xor or ja push mov les scas shlb xchg push stos int out or xor mov and fcomps out std jo sahf mov cltd inc pusha pop fcoms loopne fist adc imul leave jns into or mov or les inc inc fnstsw gs lds xchg mov clc setae int3 decl sti add push push push aam stos stc popf push and pop pop int3 sbb adc pop cmp (bad) cmp out aas add lock repnz loop jg movsl sub mov (bad) scas mov mov sarl fcmovu xor inc xchg add and ror jns inc out xor repnz mov fisub jns mov mov xor inc mov cmpsb mov into repnz sbb les mov add mov add cmp and mov push (bad) mov xor (bad) cmpsl js cwtl mov adc and pop pop je lcall nop sbb rclb pop add cld sub xlat pop mov ljmp cli rcll inc mov (bad) out repz repz cmp dec (bad) dec mov fisttpl cmp adc mov pop add scas pop loope pop lret lods lds and aad data16 repnz jmp rcrb cli dec adc (bad) jno test mov data16 mov lods lds in dec sub sbb arpl xor lds or xchg cmp andl lods aaa insl xchg es xchg jbe jae fdivrs adc sbb pop dec hlt adc add pushf or push iret (bad) popf aas aam cmpsl dec dec dec push pop sbb pop xchg jbe mov int out lahf inc push xlat jecxz imul insl mov (bad) push pop fs xor out mov cltd and mov leave jae ffree (bad) sarb aam ss mov cmpb fistpl insl push push push mov repnz inc dec mov push inc sbb inc ljmp loopne addr16 xor jae inc add scas sub out aam adc aas cli push xchg fwait push jbe scas scas icebp fcomi sar pop push mov in mov scas and cmp (bad) dec pop and adc je pop wrmsr lcall (bad) idivb test dec je sub xor mov fs icebp stc pushf mov testl pop jmp roll and ds sbb std push push or bndstx into sub push and pop xchg (bad) shrb cmp fs add push push and and icebp shrl negb popf jg imul loopne std pop (bad) mov and push and xchg adc inc sbb jns push jecxz call mov pop (bad) push push nop push cwtl fnop cmpsl pusha ret fldenv iret adc dec loope push xor js jle lds xor xchg daa in daa xchg outsb or fwait xchg pushf mov xchg loope fldenv add lea jecxz sub push push jp adc pop out rclb inc fmuls pop enter aam adc lret jae push cwtl mov in mov mov xchg (bad) in xchg ret cli ljmp faddl ror sub dec in adc call out inc ficomp pop sarb dec cmpl imul mov cld popa dec mov jbe int3 sbb mov or sub push mov das mov test cmp cmp mov out ficom mov and dec mov sub xchg fsubp jmp pop outsl lock xchg xor (bad) ljmp (bad) mov mov pushl jb xchg fs int fisubl cmp push sbb in cmp mov jnp addr16 mov pop mov insb out pop call lods mov mov mov jge stos xchg pop pop and cli jbe push adc cmp pop outsl scas mov daa sarl jo adc fstpl (bad) xchg scas dec xor (bad) xchg mov push lret jne dec cmpsl push jne mov sbb ds jnp (bad) cld push adc aad (bad) loopne cmpl rcrl test in fiaddl jmp mov stos add mov dec xchg mov dec jno andnps mov stos jno pop leave pop icebp fsubr inc xor stos xchg add stos ss push movsb jbe push xchg or in lret xchg mov insb stos mov decl (bad) fldcw popa jne mov push adc mov (bad) sub adc sbb sbb out dec sarl (bad) mul push sahf or inc lcall mov jge xchg sti or arpl xchg cmpsl push js mov jmp sbb add adc pushf clc xor ds jns add mov cmpsl movb mov or andl clc cs sub aad add inc add mov imul cmpsb inc imul mov jp xor in rcrb pop pop repz popa out (bad) dec xchg pushl sub cmp jecxz rcll jmp jno je jge out dec enter std push mov cltd pop shlb outsl sbb call sub in out xlat sbb test fldcw in mov cld mov sbb xchg jno imul lcall shrb push call xchg push pop daa (bad) push add dec xor adc inc mov addl pop ljmp jecxz jo cmp pop das push out xor xor dec add mov stos xchg repnz and jge mov add inc xchg jmp push xchg inc pop xor in movsb xchg arpl pop add push adc ss pop sarb pop enter sahf jp xchg mov idivb xor jg cltd push dec icebp rcrl outsb das push pop adc aas mov aaa out add mov daa dec sahf cmp repnz xchg daa dec sahf cmp repnz xchg daa (bad) jg sar mov xlat ret int add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoms add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop adc mov push rcr fstp xor movsb mov (bad) dec or je mov jmp xchg nop inc mov outsl sbb pop icebp pop sldt and pop clc stos pusha push mov add dec in inc cmp mov insl jle sbb pop out (bad) lret leave cs cld scas pcmpgtd add cmp push (bad) lea adc xor lahf mov or xor fistpl pop xchg jo dec xor push addr16 (bad) sub js test cmp test xchg data16 sbb divl iret cmp fisubr sub mov lds popa in xchg mov fildll pushf mov dec es gs movsb sub repnz test mov cmpsl adc inc mov imul mov aas push xor sbb ret mov frstor (bad) andl or mov out int push dec aas and dec in or mov daa sbb xchg pop mov inc mov or adc test dec add fistpll rcll push add ret aaa loopne or pop imulb je aas in (bad) xor inc (bad) inc (bad) mov push cmp scas mov xor ja scas push dec repnz movsb jne,pt lods pop scas test cwtl mov aaa mov movb rolb add into or xchg mov jo mov (bad) std sbb insl adc push dec in push xchg jae dec or inc xor mov arpl or call les push inc arpl pop inc sbb xor mov inc pop lahf pop add push xchg sub mov pop scas sahf outsb mov or pop bound xchg arpl inc xchg dec mov xchg sbb mov mov icebp add mov fcomip jmp mov rcll add or nop xor cmpsb sub insb sbb outsl xchg imull inc scas (bad) cmp dec pop pop mov (bad) scas rorl pop in push das lcall fisttpll aaa shr push lods cmp out and (bad) mov mov dec je adcl jno enter sbb or jae out jo sets cwtl fdivrl mov mov (bad) adc jl cmp mov pop mov push adc fwait cli insb scas les xchg sub lcall mov (bad) cli xor cmpsb ljmp push test sub and jg pop in popf xchg pop popa popa out add push jns fsubs add mov or scas sbb (bad) mov lret cmp cmp adc jne lock or lret scas pop fisttp leave sbb jle cmp or shrl cmpsl adc xchg mov aad ljmp jecxz jnp cmc jae ja mov insl das xchg inc ss jmp cwtl outsb jb cmp pop add jmp std or xchg jp pop scas stc arpl xchg pop mov aad push sbb inc aad cmc test repz les or stos mov mov sub push (bad) mov dec sbb mov scas and out add jne pop decl mov push sbb aad sub fisttpll sub shrb xchg imul inc insl cmc pop xor mov mov cmc (bad) push imul mov adc sbb lcall imul sbb xor arpl lods mov dec dec adc and stc popa es fadd int3 rcl test (bad) jbe jp dec push and es jp scas pop adc adc das scas pop loope adc push movsb inc adc sub xor mov outsb test mov lahf xor xchg jae sub pop adc xor imul enter pop sub rcrl push mov mov (bad) mov pop sub hlt sbb push inc pop push push popa ljmp sbb or xchg lret les cld cwtl (bad) in cmp jb bound and pop push sti sbb outsb test fidivr jns adc test jg out mov les cmp enter inc jnp jle mov js shrl popa jbe in dec (bad) fdivrs sti jnp xor test call push xchg test push cmp fnsave lcall xor pop and rclb into push dec dec sbb cltd in int3 in adc sbb pop adc cmpsb stos rclb ja in les xchg sbb jg ficoml cmc sub sahf xchg push push mov sub sbb lock std in push cltd int3 dec and (bad) out addl ffreep xlat dec jle stos xor add outsl scas add sbb cmp test jmp imul fsubrl daa sub ficompl arpl add add or loope mov pushf add out (bad) stc cmpsb push xor xchg pop adc push fadd jb stos sti fstp dec mov in sub jne dec cmc roll cmp mov mov adc and jl jns push cmc adcl cwtl jnp int3 scas jne,pn pop cmpsl jb mov sbb dec outsb lret push imulb mov cld fistp xor fsubr cmpsl or pushf pop scas sbb fistpl push scas iret (bad) out ret mov push les jnp js out test mov dec ret sub fnstcw xor fwait jbe sub sbb (bad) mov ror and jnp lret push jno add lock jp jge (bad) adc push inc lods push mov in cltd mov xchg mov add pop push pop out into movsb xchg pushf and cltd xor jae push repnz sbb ja inc cli jae mov cmpsl jecxz or adc loopne xchg jg xchg test sbb jmp mov inc inc sbb mov push push aam lds test pop cli push les mov lret mov (bad) cmc xor jge sbbb ret mov add lahf cli (bad) mov xchg mov adc mov mov loopne jae popf sbb mov addr16 jno push push lods ret test cmpsl mov into jbe xchg cmpsb and sub push xchg icebp push mov inc mov lahf jmp sti pop sub rcrb and cwtl insl jecxz dec xor stc dec call loope push push sti ret incb aas loopne mov adc (bad) pusha lds aas subl (bad) mov mov movsl orl xchg add or dec pop arpl psubq (bad) dec cmp and mov das pop aaa mov out mov jns cmc orb push jne mov jo mov (bad) lahf fwait mov jecxz sarb (bad) out push adc and lcall rorl sub in xorl dec sahf lods scas sub push andl inc mov ficom xchg stc dec loop pushf mov js cwtl push cmpsl movl ret das and pop aas jl stc aaa push adc mov into adc pop fisttpll out test mov sub aam inc ret push push es jmp fxch mov popf fiaddl xor mov cmpsb xor fsubrp movsb ja sahf addr16 test mov sub leave cwtl push add inc mov das (bad) outsl mov test jnp imul xorl xchg sbb loop or nop add (bad) das outsl insb sub sbb xor ret ss and dec (bad) stos lret fcoms sub (bad) in mov push lods sti mul (bad) pop add dec pop mov cmpsb push rclb std jb pop or iret xor push push negb lds and inc loopne mov sarl adc add xchg fstpl xor ja xchg imul sbb push jo outsl in jns or setae sub mov movsl arpl jns and push push xor sbb icebp inc lret xchg loop jge cmp inc out aaa push in and imul insl cmp mov fcomip xchg adc jp jge (bad) sbb lahf push mov imul fistpll mov outsl jno mov shl mov and orb inc jne mov addr16 icebp jb fildll (bad) mov test xor push jmp repz negl push add js push loop mov lcall mov sub mov and mov mov pushf mov jns fnstsw jo cwtl sub and shl jo inc pop in cwtl cmp imul sub inc xlat adc add call (bad) jns (bad) pop or rcrb pop cltd lret faddl sub and in imul mov imul mov test jge xchg addr16 (bad) cmc push dec fisttpl scas stc jle out push and data16 in out repnz popa call (bad) call ret mov mov iret xchg dec mov inc sub push test adc or or mov pop push lock test cld mov push mov push push rcr mov call jns jae adc lods jmp pop xor mov push pop sti push add jo cld addr16 aas (bad) xor inc in and dec dec jae and out or xor push aam or fldl2t popf sbb outsl push mov pop adc xor enter (bad) (bad) xchg sbb stos in lret jb (bad) out add ja fstl scas xor add sbb imul push loop pop sbb insb adc xchg xchg sbb (bad) (bad) jbe cmpsb fdivr and add fwait inc pop (bad) stos cmp (bad) fs mov (bad) cwtl int3 lcall add cmp fwait insl outsl call push inc pop out test or mov loope fldt jnp inc int3 dec mov hlt sbb mov push dec ds mov push cmc clc push cmc inc mov nop roll pop mov cmp mov lret stc lea das or (bad) aas or fs add gs mov pop pop sub sub imul sub mov repnz int3 sub popa pop sbb fisubrl and sbb mov aad xor sbb mov addr16 jbe fwait mov xlat fucom adc mov addr16 xchg bound enter (bad) push shrl adcl and out nop sub (bad) jo ret xor pop arpl xor ja outsb mov negl lds and dec xor loopne incl mov ljmp je sarl pop aaa sbb mov dec cmp push test fcoml jne pusha inc es (bad) stos decl in scas pop mov mov pop sahf dec sub pop stc ds (bad) jne lods add pop mov arpl lea (bad) inc adc sbb add dec ja cmp mov test sahf or pop add repnz out xchg push sub imulb dec sbb outsb pop lea daa stos clts scas mov pop sbb (bad) (bad) iret shlb pop sahf scas test hlt or and (bad) adc andb fisub sbb xlat sbb inc xchg nop stos in add stc cmp imul mov inc xchg sbb pop in dec addr16 in movnti pop repz das nop pandn sub loope sub ja in mov inc inc pushf dec aas jns js mov cmp loopne adc mov arpl pop and xor pop addb xor es int3 or pop dec ja test push pop test ja fcoms mov lahf mov pop inc cmp sub mov fbld add jbe add cltd movsl sti lds xorb push lock jb test adc xchg test pop xchg inc pop js ds jae cmc fidivr adc ss repnz stc ret jbe add xlat addl popa fldcw pop pushf dec cmp insl pop data16 mov (bad) jle cmp mov add jno xchg in sbb iret (bad) or mov pop (bad) lcall leave das js pop pop sub mov add in in push scas jns push scas mov ljmp int andl loop test in aad movl mov sub iret ficoml fbstp aad loop fiaddl inc mov mov push into inc pop mov or dec aam lret in lret imul icebp jbe push aam or mov adc bound cmc xor data16 adc cld fldt sub add imul div scas jb jns subb addr16 push sti sub cmpsb adc cli sbb test jns (bad) adc cmc (bad) scas stc jne mov mov mov push mov dec sub lods xchg fldl mov adc adc (bad) in mov push mov idivb sbb cli xchg sub push je call jp in pop imul shrb inc imul push dec std mov sbb ja shrb jnp xchg cli fstps add jp push mov inc popa or movsb inc mov imul fs xor sub (bad) inc mov dec cmp and cmp sbb push pushl in into push jbe loop stos inc cmp mov je repz cmp call out adc push sarb iret pop ret mov push sahf loopne aam and rorb push sub scas js push jl add push pop or push push push and cmp inc or lret mov in into mov je les push jmp jge jecxz divb add pop bound sti and jns popl xchg sub repz or fsubr lahf pop scas xchg sub pop and out xchg stos repz cli cmpsl cmp lahf or sti pop call lds cmpsl or jne adc mov inc add xor repz fwait aaa outsl fidivr aaa outsl fidivr lock add mov add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ficoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb sar rcr int3 or daa cmpsb sti je daa (bad) cwtl frstor dec (bad) je in test push xor iret out idiv sbb jge add xchg sbb mov je cmp sbb inc jo addl sub imul inc (bad) jns mov xorl adcb sbb std cs out mov mov xchg pop mov pop mov test mov adc pop mov out dec jl pop mov cmc fisubl rorl jle pop cmp jb call mov out jecxz push dec fsub cli adc mov mov std jge stos movd and sub xor mov fisubrl xor mov aam pop mov or add aam test outsb xor cmc addr16 add std lret inc adc (bad) add push jne inc sub (bad) sbb mov push pslld das jl movsb fwait jns addr16 lods inc jne fs arpl test int3 test out gs and ret les out xchg int es ficoml das sub xor sub jne mov push dec test mov adc xor int3 out adc jnp mov add test jnp lea jae popf (bad) fs lods sbb xchg fcmovnbe dec iret pop sti xchg cmp mov dec clc pop lret xor mov cmpsl shr adc jnp mov faddl pop adc ret pop xchg sbb dec int3 scas lods sbb sar pushf jno jmp sbb cmpsl mov add mov adc jno xchg clc jge xchg and xchg je cmp mov inc and pop xchg jmp pusha adc pop add cmp sbb jp mov xor negb fild push sub call xchg sarl push mov cltd pop fucom inc dec repnz xchg and sub mov cmp test mov mov and mov (bad) std sbb and push xchg jbe push cs data16 daa dec adc pushf mov push dec sbb mov std icebp fwait sub dec out loop in mov mov insl push lcall mov mov test xor jo sub adc push cwtl mov iret inc cwtl jmp les stos ljmp mov pop and cmp icebp movsl aas sub inc mov pop cltd cmpsb rcrb fcoms cld (bad) ss mov mov pop inc xchg andb adc js jp dec xor jmp jb stos fldl stos xchg mov pop cmp push shrl fsubrl mov pop imull std imul in mov arpl loopne roll jnp dec mov add sti or ret enter rep enter lea insb dec test enter aas pop and cmp push sbb sbb stos outsb jnp or hlt outsb cmp ds xor sub and in push mov cmp jle xchg jmp (bad) xchg mov aas fistpl fnop out and rcrb and mov pusha push outsl (bad) fnstenv test fdivrs (bad) sub and xchg out cmp cwtl nop dec mov mov loopne (bad) adc jle out (bad) dec push es dec lds mov push mov cltd push pop lcall ficomp mul fwait xor in cmpsl out xchg sahf je sub scas stos xor mov int sub iret int3 (bad) xchg mov pop mov aam xlat cltd (bad) (bad) cmpsb in jo into insl sbb jno jns lcall pop xchg push add (bad) out movsl rorb add jl sti addr16 aad add (bad) mov cmpsl push ljmp dec out stos imul adc mov cs pop cmp hlt in mov addr16 data16 push test xchg sahf aam aam rcl adc mov enter faddl nop rep orb out xchg add jbe (bad) ret cmp cs lret int3 and pop xchg lret mov mov (bad) push popa out xchg lcall callw cmpsb enter mov cmp movsb (bad) mov xor in pop ficoml aad je int sbb (bad) icebp jno ret cs mov lahf ds in (bad) pop jno or xor stos aas in cltd dec mov xor leave sub hlt sti and and lods push mov hlt insb cmp xchg lds (bad) (bad) add test lahf test jno repnz in mov xchg inc cmpsb inc xor ror sub xor sbb jle add sbb mov xorl or mov or daa loopne or inc fwait dec mov xor or add lcall in add jg jg mov scas sub xchg addr16 lahf or (bad) (bad) mov (bad) out xlat xchg gs push mov pop jecxz int insl data16 inc sbb push mov (bad) pop mov test pop in in push jle icebp fdivs arpl hlt cmpb jl stos enter jl and shrb ret push xor dec mov dec or aas mov repnz cmp scas xor out ja inc push test lret out push and jnp jbe push push push pop fstps xor fdivs lods pop add clc out std xor frstor sub and int mov jg lahf out lret jns rorb pop push ficoml cltd (bad) mov out xchg pusha push pop xor repnz das mov or cmpsl aas incl push or clc enter shlb cli jge stc shll mov cs adc cld inc stc jns movsl leave jmp or xor adc mov out mov fstpt cmp xor out daa fcomi push movsb cwtl jae jle mov (bad) dec pop orb pop jp add mov addl add cmp mov shrl and pop lods mov mov sbb and loop lcall arpl fcomip lock lret stos (bad) mov jecxz movsb add and fsubrs dec nop sarb pop cwtl or mov jecxz jne sti jmp adc mov push roll mov (bad) mov int ret add ret repnz mov lahf enter pop push roll adc sahf jns sarb and stos movsb sub or push xor loopne lsl arpl je sub fwait jb lea or pop dec std es add add or mov icebp dec or rclb sub imul rclb mov cld (bad) mov sbb mov jge outsl lret inc pop dec sub pop jmp xchg xor xchg inc xchg mov xchg and lahf out sub adc xchg push pushf lock sbb gs push (bad) icebp jle xor xor js push inc adc test sti pusha dec jmp xchg lret bound jg idivb cmpsb cltd ret mov sub pop cmp pop mov dec push cmp int3 out out stos xchg or pop push inc xchg ljmp sbb in sahf or mov mov lods sbb faddl xor xchg push sbb and outsl lret mov cmp loope inc inc xchg sbb push push pushf xor jb sub imul mov (bad) insl popf mov mov push mov iret adc jne xchg mov dec hlt cld jl es in in imul lea jmp mov fldcw push rcrb out icebp dec cmp out inc insb xchg and adc int inc or inc aam (bad) fcmovbe (bad) jbe hlt repz add out in fnsave push test add xchg hlt out repnz (bad) xchg pop xor (bad) ljmp xor push mov subb sbb cmp jmp fist loop stos push mov loope repnz push mov mov add lods jbe in mov insb js cs sub rorb xor add inc xor (bad) mov loope ret loope or sbb mov lret divb xchg mov mov pop lods mov sbb leave push add jmp xlat dec push dec aam jmp lods leave fcomps push xchg movsl (bad) mov push push fimull add pop lds mov lds cmp adc lds in mov out xor mov mov and xchg mov and mov push sti push mov test in mov cmp mov aas xchg lods mov dec cld dec sbb jb or fistpl mov fs fcoms into cmp xlat bnd xor stos fstpl xchg xchg dec and inc inc inc or and sbb mov xchg out idivb fiaddl xchg push jns cltd mov adc jo rorl lods jl mov xchg pop xchg jp aas out dec mov push nop jge out and and cmp add mov (bad) mov cld popa xchg dec (bad) dec pop lcall js out mov xchg mov sbb sbb fidivrl xchg push mov ret ljmp test pop cwtl inc and cmp lds xchg test mov sahf jmp pop ret add ficomp aam cmp mov push jno jge (bad) pop cmpl lret iret lahf jne and pop mov in iret cmp (bad) mov (bad) sub rolb sbb push and imul xchg lods test xor iret mov pop pusha pushf cli repz gs adcl inc adc mov rcr (bad) jmp jne fdivs dec ds xchg je aam bound int3 or lret mov hlt mov inc jnp ljmp fs or ret ljmp sub cmpsl add mov mov fwait loopne gs out mov (bad) or lds vmread dec pop mov jno and aaa cmc jle xchg mov pusha ds test popa or dec dec dec mov aad xchg jb mov mov jbe repnz and fisttpl push sub cmp lea xor adc cs and mov mov insb jno add (bad) mov aas xor test js imull cwtl in ss lock bound inc repnz fmull movsb jno lock in sbb ja sub inc in sbb loop push nop push jne xchg jo inc cmp mov daa sub in (bad) cmpsl cld push push lea aaa (bad) jae adc add inc adc call mov sbb mov mov adc cmpl cmp lea and pop loop hlt (bad) sti inc push dec bound shr arpl call mov xchg pop (bad) lea lcall jae in mov shlb pop push addr16 xchg daa pop icebp mov jmp lcall jmp pop inc sti and jmp push ljmp push lret xchg (bad) shlb leave push pop (bad) sub (bad) out jp sub inc adc in repz rcll lahf dec mov cmp shll fwait mov arpl and sub movsb ret add ret gs clc bound scas push std push cmp inc pop daa les xor adc lods cmp leave inc outsb cmc xchg xchg mov fwait cs cld push adc das in data16 sub imul es (bad) in or loop push cmp mov xor bound lods xchg add (bad) mov xchg xchg ret mov sbb ret push mov fprem1 loopne lock icebp loope xchg (bad) sub cli dec mov or lret icebp xor int3 mov arpl adc inc pusha pop xchg mov inc sbb daa pop inc ljmp insl and xlat jns fldenv push jb and push dec inc sahf adc and cmp dec push arpl cld xor lods push xchg mov and popa gs ja movsb and test (bad) and add (bad) jbe les adc mov pusha popf dec lds (bad) sahf dec inc fdivrp xor movsl mov cmp mov jmp (bad) pop lgdtl or adc or (bad) aad popa stos out mov test inc in cmp jno lcall adc loope cmp xchg mov push jl adc and cld sub mov pop in les data16 loope jg push lcall fldenv fcmovne xor icebp test mov es xchg (bad) or mov dec dec adc out mov add mov out or stc pop inc lods cmpl sub sbb (bad) mov movb insl mov dec ja inc sti cmpsl pop dec cmp aas ficomp xor inc into push mov mov mov push std out ror jne sub in shlb scas in or jne inc pop and inc fwait mov jno cwtl dec andl negl test repz lods pop outsb mov mov scas test lcall outsb daa inc push mov xchg out cli sub out (bad) fwait or lock insl js or fwait inc mov push xchg dec insl outsb cmpsb inc mov int inc jno lock inc out aaa test cmc out and or mov orb cmp leave xor or xchg test push xchg ja subl cmpsl inc or mov scas pushl sbb or add push xor jbe fildl sahf negl fwait int in mov jno mov mov movsb mov andb mov cs cmp cs sub sub pop mov xchg jle adc lcall leave pop mov mov mov push jecxz adc mov and inc mov jg shrb jp ljmp jp ljmp incl icebp sub rclb add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push aas aam rolb pop popf mov adc gs out and into sub sbb pop out cmp leave enter in cmp repz mov clc mov push add mov jae ret mov or enter (bad) xchg int in inc insb ja movd enter push pop into bound mov inc clc mov pusha add dec pop inc mov cmp xor mov or and test out lds fnstsw frndint push cli ds pop cmpsb subl dec repnz push test fimul ja je hlt ljmp dec xchg mov sbb lock inc pop xor fdivrs dec aas sub mov xchg std icebp stos jge push jbe loop lock cwtl shr das cmc xor mov cwtl jne movsb dec adc xchg outsl daa cwtl (bad) outsb inc xchg adc lret in or cltd dec cmp dec jecxz movsb sub mov roll add inc dec rcrb popa jne loopne mov cwtl cld popa xchg xchg inc ja cli aaa push xchg add sbb mov mov push sarl dec mov (bad) sub test int popf lods cmp shll pop add fwait and fwait dec xor loope inc pop mov jg sub stc gs cmp inc xchg fiaddl pushf dec stos rcrl dec jno repz add jmp (bad) aad es adc jno cmp loop xor pop push cmpsl mov mov lcall xor xchg cmc sbb mov sbb push sbb std ja aad (bad) test pop icebp stos xchg movsb outsb xchg daa cmp xchg out mov pop test push (bad) xchg lods sbb xchg xchg cwtl (bad) mov out lahf out aas int3 outsl or (bad) jg add xor loop out enter pushl out in jae or loop test mov lret sbb orb jae ror sbb push dec xchg sbbl jecxz inc pop ret push fwait ja sahf out and or adc xlat xchg add je (bad) jle iret dec sub call inc jl imull mov cltd sub xchg imul in jl fstpl int3 mov movsb call ja inc dec dec sbb out gs mov aam cmp xchg sbb sbbl sbb lea jecxz push mov aam in pop icebp test jns and jg lahf cmp scas push popf shl mov jmp fildll sahf mov xor imulb push add push imul inc cltd mov adc jno rorl jg mov js cmp push cmp mov popa mov add jne fstps mov fsubs in fisubr add data16 xor (bad) mov dec dec cltd js daa mov add lret leave int3 push xchg mov test cld lods pop in push repnz mov rcrb mul push push mov mov jge int sbb mov push fxch rol fsubp jno sarl fnstcw (bad) dec and mov mov cmp stos cmp adc mov cmp loopne divl jecxz imul (bad) popf lret dec sub sub fsubrs sub imul sub out xchg lds jmp mov sub push jae fisubr jb scas int3 cwtl adc jne cltd lcall sub fldl xchg mov es cmp push fwait iret movsb add rorb cmp sub inc gs push push in addr16 dec out fdivrl dec and cmp lds sub cmp push sahf adc je and add (bad) jb out test and pushf adcb or cli or mov pop repnz sbb jg xchg outsb jecxz add movsl or (bad) jmp loop rol inc jmp das adc mov or mov dec in push adc sub dec (bad) cli loop imul pop sub sub fcom lret cli fcomi (bad) cmp insl (bad) jo jle icebp gs ficoml dec outsb cmpsb (bad) mov stos in les cmp (bad) (bad) dec pop inc add out sub les stc std cmp mov mov fidiv call test add les lods mov clc adc (bad) sbb or movsl dec cmp pop adc stos rcll sarl xor (bad) mov jns mov enter cmpsb in repnz data16 movsl bnd sub fistl lds jmp inc push icebp call cmp dec xchg push in push inc adc fisubr in pusha and pop sahf in shl cmp test cs jbe or dec loop jmp negb inc jns push sbb cmp mov dec pop fistpl dec mov inc cmp xchg adc and ret cmp addr16 lret ret scas (bad) je pop add std mov hlt inc inc jmp and stos addr16 repz mov dec hlt insb pop aad push sahf das jae (bad) repnz push jg xchg cmp cli inc (bad) fnsave aam cmp cmp in (bad) xchg aam ds js repnz es xchg cmp push sbb or lea fidiv sub dec mov xchg cmpsl cwtl jne rorb add movsb notb sarb add ret sbb lret lret shr pop imul xchg dec bound inc pop insl lcall dec jo std jp inc enter or jle pop pop sub dec nop or sbb fistpl mov in mov sub sti sbb repnz cltd shlb nop popa jl sbb adc lahf xlat mov mov clc int3 (bad) mov (bad) mov add pop push jb insb xchg nop cld push out xchg and out jg (bad) sbb rcl flds stos fnstcw cmp ds mov icebp movsb adc dec jmp cmp gs and sbb jmp add insb ret orb jp shll push adc jns dec mov lret shrl in jb repnz mov aaa fs jg stos adc push daa scas mov lret mov in dec in popa xchg jp test sbb sub and sti jo xchg lods mov pop shr dec push dec cmp in mov mov int3 in cmp lock scas adc and arpl cmpsl stos inc xchg aas and aam mov xchg or lds or mov push test (bad) pop push lock mov adc sub add jl mov inc test inc movsb inc xchg xchg xchg sbb imul xchg xchg mov mov subl push mov adc (bad) sub (bad) ja and jo dec mov imul push push dec mov loope xor inc jne stc push lcall imul sub inc inc in and xor jne cmp jecxz leave jb into mov pushf lea sub dec cs ja pop push incb hlt cmp xor nop scas je mov pop mov sbb pushf push (bad) jo loop pop daa rolb adc stos jb scas ljmp das je mov (bad) repnz adc inc jmp pop jns pop or and lcall mov mov dec add inc pop fsubrl notb cmp fsub daa push gs cltd jecxz sub cmc mov cs repz daa icebp pop xor xchg or dec xchg aaa pop mov pop jmp sbb push leave std pop subl leave mov fstpt fucomp push jge popf iret rcrb mov jne lret adc pop (bad) sbb pop dec cld lcall mov ds sarl (bad) daa xor movsl inc or push int3 xlat adc nop movsl int3 mov out adc inc lcall es adc mov ds out ljmp inc mov inc out adc sti lret cmp push in mov dec jb insl (bad) mov ds ss rsqrtps xor lret insl call mov lret cmc fbld (bad) leave push ss outsl sbb push sbb int jg orl push ror pop test pushf inc out lds pop xorl pop movsb (bad) pop repz add js rcll lret dec pushf ljmp push and repz push (bad) sahf dec and jge mov sub and cs add ja pop and stos (bad) fdivrp insl std dec pop push cmc mov movsl push cwtl lods cmp inc cmp adc and in xor sahf sbb rol mov mov lret xchg leave mov sti sbb xchg add mov lret mov cmp add arpl cwtl cmc (bad) pop add mov je int pop xor es scas xchg push sbb mov jnp movsb (bad) mov pop xchg push popf adc out mov sub (bad) fdivrl jae push in sti js push inc fbld pop mov pop dec mov jle out test rcll jo (bad) xor pop xchg mov iret fs jg or rcrb pop into jle stos scas out je sbb nop cmpsl movsl or inc dec fidivr sub push popa jae,pn push mov xchg jle mov dec jo push inc and mov jl lret sub in data16 call pop aam mov les xchg mov cmp aas adc fs mov push add add sub xor dec aaa lods sbb das sub pop lret pop movsl loope ss mov cmp fistl das scas out (bad) ficomp gs cld mov sbb das pusha push inc adc lods lea lahf xlat repnz sub nop push test imul fwait leave les jnp mov xchg lcall sbb fs rclb popa loopne adc iret repz loopne sbb mov adc cmp push lods cmc xor xor jo (bad) push mov std pushf (bad) movsb pop mov inc sbb jg jle lcall push adc adc fiaddl ret lds outsl gs adc push icebp addl pop lahf mov mov push repnz ljmp adc fnstsw mov and sub add mov adc cwtl and pop xor inc sub inc int3 lahf arpl icebp (bad) je popa loop fistpl ds (bad) or inc mov xchg add cmp bound dec fs ss mov pop call cmp (bad) mov pop sbb xchg lcall push mov scas stos dec push lcall xor daa pop push sbb cs push in xlat mov push rclb ja (bad) xor mov pop cmp or push mov cwtl shl into adc jo test mov add pop bound fsubl adc jns xchg (bad) icebp add cmp cmpsb movsl pop (bad) xor cmpsb or pop dec mov xchg fisubl out mov jg sbb push int dec cmc mov xor std cmc push out add inc ret xchg xor push and aam mov adc (bad) push movsb or stc jecxz in mov repz pop stos adc push rcpps data16 pop stc (bad) lock (bad) je mov dec cmp rorb or adc cmp jnp ficompl mov inc dec mov les movsl mov mov mov xor mov stc mov fwait int3 sub add in loopne xor call lahf lock andb enter int3 leave or scas mov mov cmp cmp fwait jae cmp stos aaa stc adc mov push int rcrb push mov ds dec cld dec negl (bad) fmull loopne je inc insb mov hlt mov and mov ret and je test call pop and mov jb mov cld jmp dec test stc leave ss inc pushf xor mov adc lods dec fwait mov lods lahf sub leave (bad) (bad) outsb fsts xlat test adc push xlat cmp push or dec inc js lock js (bad) repz push sub sbb cld in movsb roll xchg int xor lahf inc add add test sahf ss repz out mov movsb push fs inc push dec ja fwait movsb stc adc gs xchg push pop divps fwait pop fstps stos std xchg mov jle scas lcall mov ja push mov xchg xchg dec jmp mov fwait sahf dec push (bad) (bad) js repnz (bad) or sub movsl outsl pop lcall jae dec mov cmp and inc mov fsubrl mov stos dec (bad) jl loope sub ret aad xchg xchg push cmpsb mov nop mov mov inc mov out mov add adc jecxz mov fwait xor cmp jnp insb adc pop push and mov js fwait mov sub inc gs push stos ja setle arpl bound or dec mov dec cmpsl clc or xor adc outsl in push (bad) and mov clc (bad) mov sahf mov je pop inc mov ja and push dec fiadd mov je and push cltd stc adc icebp movsl and and dec jmp sarb scas insb and jp lea cmp cmpsb imul lahf ja aad jnp push xchg xchg fcoml xor cmc test mov pop popf icebp sub sub loop lds fisub (bad) lea add pop sub loope mov enter (bad) xor sub ret xchg sti aas das dec (bad) add outsb (bad) in sahf xor sbb in popa inc test fmull xchg xchg sbb add lods ror inc ja inc aaa fisttpl mov ret aas dec push js lods clc imulb data16 jno mov xchg or mov sti stc ja dec dec sti mov jg push jmp adc mov inc (bad) aad add jp push inc imul fnstsw jnp out fnstsw jnp (bad) pop add call xchg add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fsts add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop adc add or adc ja call xchg inc cmp mov popa or sbb mov mov add enter or jge dec ss mov add or hlt mov fistp loope xor nop add loopne (bad) imul sbbb pop mov sub sbb pop inc adc sbb aam inc jg insb ljmp pop sub push lcall movsb mov mov loope inc sbb stos jo rcr add jge loop fimul cmpsl aad sbb lret jle jnp add (bad) or or cli fbstp jecxz xchg inc pop in rcl add mov (bad) addr16 dec pushf cmp cmpsb repz jne sldt movsl sbb dec add sarb mov mov push pop jns mov and fisub jle jne push jb mov and cmpsb cmp add aas push cmp pop mov pop lods inc jno call sub xchg in cmc push xor fsubs leave fidiv sbb fdivrl (bad) dec mov loope inc jg dec scas (bad) xchg divb jl hlt scas lcall out cmp (bad) push or addr16 fildl mov inc mov and insb daa push sbb orl (bad) aaa mov dec add jnp ret test mov jb arpl (bad) and pushf fcmovnu stos jecxz or mov lret xchg lea push int3 or push rcl mov ss lret insb or movl (bad) je imul cmp sti scas dec xchg xchg icebp or lahf jge push sbb mov ror xor (bad) int3 lahf jecxz out adc mov sar scas xlat sbb mov decb dec cwtl cwtl icebp sub test (bad) pop insl add (bad) bound and decl inc test mov iret add or inc vpsubusw aas mov cmpsl adc xlat add pop daa shll mov sub push scas xchg push das push popf jo test rcrl mov push push sub sub outsl xchg out (bad) jg,pt and push scas aaa movsl rcll (bad) or or scas in dec xor mov mov fwait addr16 das fld1 adc or sub icebp and enter imul cmp xor out fucomp popa fnsave insb mov push ret (bad) stos nop out jmp test lock popf roll rcr data16 mov add loopne mov sub dec fs adc sub loope push dec hlt inc loop pushf mov jge sub fwait mov (bad) xor inc push pop stc mov outsb sbb cmp inc cmp jae inc mov and data16 xor bound imul jbe inc jb xchg sahf mov mov gs icebp imul and jo,pt aad xchg jle mov mov mov loop test insl jge push lcall dec sbb (bad) mov aaa cmp lret clc pop sti cwtl and dec daa sbbb adc jns jae ret fldcw repz cmp jmp xor mov insl das lahf sti and cltd and xchg lock sbb dec mov pop sbb push sub in scas jmp and mov dec ffreep movsl lcall jo (bad) (bad) fwait jge jo jb sub in imul fs ljmp xchg das adc idivb lock pop inc sub outsb (bad) (bad) sti sbb inc push xchg dec in rcll test mov cmp sti jno dec outsb call nop loopne jl dec out rcrl jnp sbb jb pop in jns cs leave mov cmp leave mov pop loopne jne pop inc scas addb mov in xchg dec lcall stc arpl sbb addr16 and cmp sub arpl add movsb lcall jmp lea mov pop pop mov jae pop lretw clc (bad) or dec js push cmpsl fist cmp adc mov mov sbb push (bad) (bad) outsb cmp imul mov test mov (bad) lret jl pop jne cmp jmp dec cmpl bound ds sbbl mov out mov fnstcw loopne mov outsl iret hlt lret pop xchg pop jecxz pop ja push stos mov xor lock (bad) out test scas stos push loop in add ret jno xchg loop lea lds clc lea jge mov and icebp out sub notl notl mull stos mov ds dec xor aam push rcll cmc mov sbb loope sbb rcrl clc jecxz int push cmpsb mov lret jnp xchg add pop negb pop cmp adc dec adc icebp test rorl shrb adc or jl add fmuls pop mov xchg adc sub sbb incl ret xor mov sub xchg mov xor std or jo mov (bad) (bad) ja outsb (bad) mov xchg bound jl test mov xchg inc adc imul push xchg jmp and sti lea add adc pop pop or jb sbb out push and cmpl stos bound cmpsl jo movsb fcompl lods ds dec jne (bad) mov faddl cwtl cmpsl incl sub pop fcomps and mov addr16 stc jmp mov mov cmc push outsl adc add fsubl inc imulb roll outsb pop cmpsl test ja jns cli ljmp jl sub paddusw jnp sahf fisttpll loope (bad) or add ss lea xlat sti cmp scas mov lods pop push rolb inc push pop adc pop insl add int aam sbb outsl les xor jo repz ja push xchg shlb int push lret cltd push jmp test sbb and into inc aad outsl ss pop cmpb outsl sahf pop lret xchg in mov jmp pop sub adc cmp fiadd fldcw sti rcrb nop jo xchg push lds cmpsb ljmp xchg arpl xor out sub aas imul sbb adc hlt xchg je pop xchg mov xchg or lods fldenv mov xor cwtl mov loope cld in mov adc int mov mov test push scas xor lcall xchg sbb data16 mov pop xor (bad) xor push call lahf ljmp pusha movsb jbe adc push popf jno daa xchg ljmp imul push push into cmp fsubrl nop idivb pop push fadds jl das leave adc out sbb sub inc adc leave adc mov int3 out daa lret sti (bad) xchg bound iret test inc pop movsl add cmp jne jge mov sbb fstps jle or mov add mov mov mov mov es scas mov inc daa dec sbb push mov jmp mov out notl testl sbb and dec imul movsl test or sbb jno adc mov repnz mov dec push notl or test insb xchg pusha loop push mov cltd and addr16 adc arpl sarl jnp mov cli sbb ret fisubl es das push hlt cmp rcr adc stos pop addr16 adc jmp test mov mov sarb aad pop push jno ficomp jbe mov repnz (bad) sbb std cmp lcall (bad) pop ror je xchg (bad) fnsave inc or js icebp (bad) sbb movsl daa mov sub movsl push addr16 xor scas (bad) pop mov and les fnop sub fsubrs cld xor adc lret mov cmpsb stc sub xor xchg aam push sbb outsl mov das mov in loop push jp inc push mov test test (bad) sbb fdivrp lret sbb out mov jl popf sub loope,pn sbb push mov enter loop test insb hlt aad mov xor (bad) adc add inc sub daa scas insl imul xchg icebp rcr jo data16 pop mov mov jle adc cmp push stos jge dec ret ja mov cmp push jp sar repz jp out mov and popf jp daa sbbb ret sbb lcall in xchg jo sbb in xchg add jecxz insl ja push das jl test cmp inc cwtl jp repz fisub xor mov push xchg xchg ja insb jno and mov push stc xor mov or xchg jp add je aas dec mov mov inc clc rorl xor stos aas adc or rorb lea insl (bad) mov pop scas fisubr (bad) push mov xor les mov in jp fstl jp rol mov gs mov repz hlt sti jbe fnsave pushf int daa in (bad) in mov jmp mov lock mov bound rcl scas test jne cwtl js ret leave int fwait out push andnps mov xor out mov fistpl outsb rcll data16 pusha push mov popf sbb hlt es adc jmp add jae sub push sub leave andl add nop les or dec stos les cmc ss xchg std or push jecxz push ds pusha and insb jl and xor (bad) jns dec mov xor mov loopne mov jg add adc or pusha push shrb idivb cmc sti push (bad) push sub jbe jecxz inc pop insl jae sbb jbe mov cmpsl push dec xor xchg ss adc mov mov test pusha ficoml sbb (bad) cs xlat scas jmp sbbl aas fcmovne adc out push or pushf fcomps cmovge orl xor pop faddl cmp fiaddl ficom das cmp push xor pop xor cltd or es jmp rolb fsubrp adc add popf cld fbld fnstenv mov shrb insb push dec aaa test loop mov add int xchg mov jmp das push fbstp in add js mov (bad) int3 out ret pop imul cwtl aam fs (bad) repz sbb out out pop in pop sbb insl xor mov add adc imul sbb leave mov xor fwait sti jno sub aas fdivs movsb cli cwtl mov clc mov call sub sbb jp cmpsl mov xchg mov rolb stc push jno and or mov mov (bad) outsl icebp and push xlat mov inc insl aas jp and xchg sahf xor aad jne push fistpll leave std ja mov jnp rorb pop mov xor and mov xchg pop and repnz mov pop (bad) mov in mov (bad) and push xchg ret pop fs pop cmp out xlat pop push ret outsl sub inc rcll lock fcomps xor mov nop (bad) xchg outsl dec movsl aam inc sbb or push stc xor iret iret daa mov dec daa popa mov cmp or int3 xchg sbb mov fildl popf and lods pop dec movsl mov xor int3 mov in push push rorl pop push xlat movsl ljmp popa xchg (bad) mov fucom fdivrl loopne stos mov dec mov pop push sbb pop jnp and cmpsb repnz inc jns cli xchg mov push ret cwtl xchg (bad) cli fwait aad push lret inc dec pushf nopl mov pop test sub lahf stc notb cltd in test arpl clc test gs pop pop bound inc xchg (bad) push and loopne sbb mov mov jmp imul pop outsb pop fsubrs dec arpl lret pop inc dec push addr16 dec sub xlat pusha adc inc or cmp insb jp jg inc mov inc xchg xor out (bad) js xchg cwtl aas add cltd inc test into add push mov pop js mov jl outsb cwtl mov or mov jne clc lods rcr lods int jb inc cmpsl gs aaa leave repnz shll sub jae dec xor cmpsb dec push adc mov (bad) scas inc sub data16 enter mov test clc jl mov xchg pop and aaa in insb mov mov cmc gs adc xor jp xchg sub jo sti push subl mov or fs mov dec mov shll (bad) cmpsb pop inc adc cmc sbb mov jne test add aad dec test aaa cmpsl pop pop mov test cmp mov sti cmpsl (bad) mov push std arpl (bad) pushf shrl or cmp push test mov mov jl jns xchg pop cmpsl shlb cmpsb movsl stc les xor cmp loope jle fnstenv mov loope fmull cmp rcl adc bswap pop shlb lods jge insl mov repz (bad) in pop arpl mulb rcll cmp in mov scas icebp sub repnz sahf and sti mov rcrl iret push repz pusha xor out and inc fdecstp int inc jbe pop enter rorl sub stos cwtl mov out add (bad) ss xor fistp arpl xchg add punpckhdq jnp push sbb xor and in sbb and dec xchg sbbl add push mov push push inc fs jb fstl jnp (bad) mov and xor leave mov insb push xchg pop mov pop pusha pushl aaa jle rcrb stos sub or push mov xor cmp xor call inc nopl lock addl push cmp lock addl (bad) incl add pop cmpsl dec stc stc lock add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fsts add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas adc add lock ss cmp pop mov jne,pn in in into ficomp and fidivr fwait and (bad) mov cmp (bad) icebp pop add mov jno adc in pop jnp jns loopne or aaa xor dec dec fdivrs sbb ret and enter dec mov adc rcrl je rolb sub sbb sbb rcll add das sti jae es nop sbb fildl sahf mov lea mov xor xor stos lods inc (bad) cmc gs (bad) jae into (bad) ret repz test movsb aad jbe test lcall lcall sarl out inc pop icebp leave mov add bnd (bad) adc add (bad) cmpsl leave int3 aas fdivr cmp and push (bad) cmc push mov data16 adc jge xchg loope jo sub inc pop loop into addr16 push push adc push stos std sub loopne adc sbb in push ljmp mov jnp faddl mov addr16 mov fnstenv fsub jecxz and adc aam scas enter scas inc int3 test (bad) cmpsl js outsl xor nop iret insl push pop hlt dec or push int3 (bad) mov pop mov sti jb jle addr16 adc (bad) fimull add pop in lahf (bad) push and pop mov or es pop sbb stos sbb mov push stos add (bad) mov popf loopne gs aad pop add inc xchg es in mov or jmp pop imul xchg mov jle das adc jns je mov pop jb jle adc mov ja lret sub xor in push scas xchg push es sub sub movsb xchg aam loope adc mov pop in mov push dec adc mov or dec shr or lcall std mov cmpsb mov pop fisttpl popf dec jle imul inc jbe mov ds insb bound fbstp xchg add nop gs pop in fstpt mov sbb scas imul mov mov imul cwtl xchg mov add lock repz aam es mov adc jge imul icebp dec in inc lahf jmp rcrl sbb and and jb fs mov pop jb add inc fist add dec fmull pop rcrl loope js xchg adc cmpsl dec fcompl xchg push sahf dec addr16 xor and data16 shr shlb and push xlat lds mov (bad) xlat stc mov or jmp test pop inc aam sti addr16 shrl imul cmp dec mov adc cmp adc cld fldcw cmc int popa adc mov xchg dec fbld (bad) sub cmp mov xchg in (bad) xor enter es out mov push cmc stc mov or mov cmp jg and push cmpsl stc jmp cwtl add (bad) mov roll daa mov mov dec pop and scas jnp sub (bad) in or clc add cmpsb push cmp es add into fildll lcall and mov pop ret test sahf jne push add pop xchg outsb aas dec (bad) sub mov jne inc stc jecxz mov loopne das adc hlt hlt cwtl push lods jo sahf ds lret lcall stos xor in pop sub and negb xchg (bad) dec and or loope mov test cli addr16 cmp mov mov inc idivl add std fnstcw push push or xchg add fs jg outsl fstl iret mov (bad) out clc aaa repz stc (bad) (bad) scas ficomp loopne pop scas mov (bad) pop cmp addr16 pop push fiaddl pop shl icebp pop cld out xchg imul xchg inc add fisubr fwait jp adc mov out dec sarl sbb and out jg cmp add dec xchg sahf mov test stos sbb pushf mov adc mul scas out clc push sbb scas inc lods cmp popa das xchg (bad) pusha stos inc das popa jns insl pop hlt push xchg xchg scas (bad) mov rorl sbb cltd std mov (bad) imul stos adc ss xchg enter (bad) out jg aas xor fdivp out pop lret add outsb adc clc mov cmpsb (bad) cmp mov aad push scas xchg and inc repnz (bad) mov add dec or xor adc inc or dec jge push pop sub pop std ss stos movsb std sti mov in cmp jecxz rclb push sub mov lods adc pop sub clc mov loop sbb enter sbb cmp into fs sbb rol imul daa stos cmc aaa mov les mov push push push mov gs push fs je dec add insl dec mov mov lcall (bad) lods cmp js aam jno movsb int sbb jnp mov fnstenv pop and fildll push dec repz add jge scas mov shrl xchg dec les adc cmp cmp push fbld aas mov push popl sbb stc pushl inc sub xchg sbb clc aas pop std cs push ds test mov mov lcall leave inc xorl pop movsl sbb out and js lock mov test sbb add mov out push and outsl imul jnp repnz aad mov in jo mov pop mov mov inc pop inc mov jmp mov (bad) jp add add dec xor jle mov stos clc sub push mov aad adc icebp sbb push outsb subl mov mov cltd mov adc (bad) mov fmuls mov xor dec pop mov lods pop jbe ljmp aam jge cli pop mov xchg cmp inc fldl jle mov pop or bound push popa mov ss pop push aad test mov adc call pop movsb imull (bad) aaa inc xchg (bad) xor leave xchg mov inc (bad) (bad) pop or shrb mov mov sbb (bad) fsubrl test jns stos loope icebp mov and shlb dec dec popa iret add xchg mov aas push pop sarl insl pop ljmp or and loope in push sub fsts movsl sbb cmp idivl and cmp icebp aad sahf push push sbb shl cmp xchg mov lods xor or jb je pusha fwait pushf mov sti dec out xor cli dec fidivl fs mov cmp inc inc pop fistp xor xchg push mov mov sbb arpl mov cmp das (bad) lds out cmpsb leave pushf (bad) jo push pusha jb add xchg divl lods inc cmp xor in push enter pop xchg add repnz (bad) add push adc outsb cli jns jl in lods test mov stc sub int3 mov mov jge je sub aam push lret ljmp les mov xchg mov or (bad) xchg and jecxz insl arpl mov stos jnp pop mov lock mov stos jmp pop stos loope in inc in fmul or rclb aad imulb and int or icebp and rol or mov (bad) adc jnp push add lret xor inc cld sub dec sbb aaa je xchg mov lds fisubrl jp sbb inc mov adc inc mov mov (bad) mov pop cmp fsubrl stc cmp mov cs mov sub pop jp sahf das fcmovb popa pushl mov je addr16 push and jnp popf jnp lret cmpsl sbb iret (bad) dec inc call imul jne mov inc cmp fcomi mov ljmp out push loopne xchg fimull fildl pushf popf (bad) out fbld ret and cld pop rcl mov adc aas mov clc fs daa imul lret js adc or lcall clc jmp mov push hlt sub icebp iret int cmp mov xchg repz push push pop and xorb or xor fsubrs lds in mul sub cmp (bad) or adc leave in int jle test xchg pop or cld (bad) ficompl xor (bad) pop bound test test iret mov loopne and lret jo repnz fwait mov test out aas (bad) mov dec adc dec lods xchg cmp push (bad) (bad) psrld lcall dec inc fsts movsb sub add adc test jne xchg enter test ret xor and adc into ds call (bad) fsub rorl push cs movsb sbb jno sub cmc sbb or aaa or jns cmp pop xchg and sub mov mov push jg mov loop loope xlat ds mov repnz lahf mov pop pop xchg sbb pusha lods push lret adc stos or sub sub (bad) push lock popf sahf jbe xchg (bad) xor push xor (bad) outsl sub dec subl enter repnz xchg aam aaa mov out xor add ds cmp dec mov sbb mov lock cmpsb cli mov scas sbb inc mov loope pop in cmpsl sar lock test stc adc and add mov dec xchg fistpl nop leave jl fsubl inc push cmp clc stos mov mov pop jbe mov fmul jbe scas mov mov adc aas dec sbb cltd insb xchg add pusha add hlt or dec jbe out arpl mov mov pop cmpsb xor cmpsb gs cmpsb sbb pop lods hlt (bad) mov push fisub pop pop (bad) ljmp cmp mov cmpsb fwait lahf push xchg aam mov ljmp or fistl lcall fsubr fdiv repz jge dec dec hlt aaa testl mov push aaa std adc jle jp push pop jmp popa stos jge dec outsb adc add adc lods pop push sbb in mov mov and pusha int dec jmp sub iret inc repz test call pop orl and xor xor and clc int sub sbb dec or or adc xchg sbb fistpll aad xor addl cli in xchg cmp dec push fcmovnbe clc xchg sbb push sahf aas lea jmp scas rol mov mov (bad) ja and dec dec mov pop pop jno lods push jb fs inc xchg fldt sub add xor and adc out mov pop xchg pop pop cld in iret push dec movsl and cld icebp movsb add pushw lds cmp mov fldt aam loope (bad) pop aam and mov mov aad adc add xchg sub (bad) das mov sbb jns or pop and dec mov mov fiaddl addl inc clc dec (bad) test out xchg push repnz adc push pop jne ljmp xchg test adc dec orb shrb xchg mov (bad) sub int repz in mov aas push mov out out adc inc lret nop insb or adcl mov clc add cmpsl mov (bad) or cmc dec mov mov std mov mov push jbe xchg (bad) sahf ret outsl scas pop call int3 mov dec ret imul cmp (bad) jo xchg lods pop mov stc (bad) mov xchg ret xor ror pop sub pop pop push je push inc ljmp push leave pop and neg testl and iret or mov push insb mov jo mov add add (bad) shlb arpl mov pusha frstor xor sbb stc sub js xchg cmpsb pop mov ja mov cltd mov repz iret imul (bad) cltd jecxz inc sarb sahf mov cmp ret clc jl lea sti or std sbb (bad) lret cs clc xchg mov test call aad adc dec (bad) cmp sbb xchg inc icebp pop lret nop push dec cli xor pushf (bad) scas sbb dec (bad) loope dec adc inc aaa shlb jb pushf inc fsubs push jge mov add lods popf scas dec xchg icebp push cmp pusha or subb mov adc fcmovbe icebp into xchg notb mov mov shll push iret int3 mov movsl inc ja lods xor sahf cmp pop stc adc inc mov sbb inc test (bad) std xchg pop mov inc pop mov mov jle sbb fwait xchg push aam (bad) inc xchg (bad) gs in add mov push mov js inc cmc xor stc stos (bad) data16 repnz jge lret jno roll fild ljmp and outsb ss mov sbbl out cld ds fstpt ret rolb mov mov jns pop mov in nop xchg addr16 inc pop in mov inc cltd imul xchg and xor adc fwait dec and inc lcall adc inc inc sarb iret pop daa shl mov mov cmp and lods push addr16 or xchg xorl sbb dec bound xlat (bad) scas jns pop push test cltd push loop cmpsb fs cmc xchg test pop shl out dec sbb push mov cmp or (bad) mov ljmp fistp jmp roll lock addl push cmp lock decl add aas pop sub not add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb rolb mov (bad) adc pushf mov ret xor cmpsl mov cmp fstp (bad) pushf cwtl cwtl rcrl (bad) aam jg sti xor add (bad) jae ljmp fsubrp loope mov test jl push dec insb pop aad push stc or icebp (bad) mov sbb mov aad rolb (bad) inc std add lahf outsl dec movsb clc fnstenv mov orb addr16 addb scas pop inc orl shl jno out mov lret sub mov mov insl es add mov xor or fmul add in xchg cli out int3 rcll lcall fcmove es pop test leave mov aad stc mov sub es pop ljmp fcompl outsl dec pushf inc rcrb cmpsl mov mov and clc out jnp outsl jae jg js mov daa mov test or pop sbb lret loope sar xchg sub into subb push int dec inc cmp pop das adc xor mov ret push add les es cmc (bad) addr16 sahf and fptan popf (bad) pusha pop sbb mov cmpsb scas adc xchg cmp jno jecxz mov push out pop js cmpsb pop mov in xor insb shll mov clc xchg mov sbbl pushf mov pop inc data16 mov jl pop and dec and lock mov dec in int3 adc pop push mov mov xchg sahf push push add inc loop or dec jae test jle add decl pop insb dec aam mov mov mov jae (bad) sahf adc shrl rcll ds outsb popa movsb movsl inc rcrl xchg lods (bad) (bad) in push add adc loop lods call mov or cmp test xor pushl sbb push dec scas movsl enter mov lahf rcrl xlat xchg pop popf sbb push cmc mov shr sub mov das insb dec hlt mov adc movsl sbb pop rclb and jp xchg sarl (bad) leave sbb fdivrl jl out and dec aad data16 sub and ja xor pop sbb and xor imul mov mov add pop inc adc aas fiadd xchg std jl nop repz jb cmpsl adc dec jb jge movsl sub pop (bad) testl ret xor fiadd pop adc shrb movl jbe jb cmp push xor mov inc push mov dec dec xchg cli mov fwait dec mov ret in or int rcrb data16 xor stos je push xchg int jle repnz or sub dec stos ds push or add mov lods in int3 dec lret jb iret leave mov sahf cmp mov stos scas popl mov inc loope adc into pushf popf popa jbe ret pushl int cmpsb std sbb lahf xchg test add ss fwait add cmp int3 inc clc lahf add ljmp dec jbe jbe inc fadds inc inc mov jae imul jnp cwtl xchg or das insl jecxz scas jbe adc inc inc test aad mov mov inc rol adc pop lods jbe inc ss add pop (bad) je outsl jg jge je rorb xchg dec imul dec sub jmp mov sbb in jns mov pusha lcall lcall add push jmp icebp inc ret cwtl arpl idiv (bad) (bad) int add loopne scas in scas shr or xchg mov xchg repz rcl lret jecxz jmp mov cltd xor stos imul cmpsl mov adc jmp adc lret scas in and and and cmp jnp inc or dec (bad) cs add or aaa in dec push fstpt je dec adc push inc mov sub and inc mov push add enter and mov lock cmp mov jmp andb cmpsl leave rcrl adc cs mov or xchg lds mov and imul adc and inc popa mov (bad) jge pop push push shll push pusha imul inc mov mov mov jno dec dec jmp sub std sti das push pop pop mov dec mov mov shrb mov scas scas loop push jne scas inc or cmp out cli cmp mov mov sbb insl mov in repnz xchg mov inc outsl inc mov or dec add mov xchg loop fwait dec ror mov jg pop push cmpsl lods jg dec clc adc xrelease sbb or ss (bad) addr16 movsl roll push mov imul ds in imulb sbb push push push sbb sbbl loope aam loope js fnstcw mov pop mov add lea (bad) arpl fnstcw in gs or cmp push push fwait je lcall outsb cmpsl xchg sub rorb insl fwait (bad) iret dec stos mov nop ja test cmpb pop jg dec in sbb out dec iret into pop (bad) ja cmp out lahf lds and (bad) mov dec xlat pop inc test pop rcll and scas cmpw mov push lods sub xchg (bad) or sbb test xchg ret adc jae pop mov cmp movsl fmul fbld jmp inc cmp dec bnd push push jbe daa sarl lret lret xlat outsb xchg mov push (bad) out scas push mov fisttpll and pop sbb mov lahf mov ret andl in dec test in addr16 in cltd jae lret cmp cmpsl sbb cmpsb fdivr into lea lret (bad) addr16 jge repz sub stos fs mov scas scas clc mov out adc cwtl add push fsubrs lahf fwait stc fimul stos pushf shlw xchg iret push ja popa push add insl test (bad) jecxz and bound outsb (bad) stos xor dec mov sahf sti xchg dec sarl cmp imul scas pop cmp dec (bad) cs fcomps mov mov jp daa mov inc sub mov lret pop mov out xor push jp xchg xor mov arpl xor add dec cs fs jb mov or push rolb std push push push gs adc repz (bad) pop mov cmp sbb js ss dec out lahf jl mov and sti jecxz fiaddl push (bad) shlb call cmp sub adc stos je pop add mov push jo test xchg sub hlt lods in and inc sub adc pop loop push ds ljmp cli scas das and and in out xlat movsl je jnp scas in rclb loop sbb lret mov insb mov int dec cmp mov xchg popf cmc das cmpsl mov mulb das fdivl nop sbb scas in push sbb loope es repz cmp jne and cmpsb rcr or repz mov xor push mov cltd sahf cmc (bad) dec adc das add sbb or mov or lahf ljmp inc jo out sahf xchg xchg mov icebp fidivr sub mov sti bound sbb subl dec movsb add (bad) push subl sub (bad) repz popa sbb dec mov arpl out jmp jg cmp fistp sbb imul out sub pop push pusha sub push jp in shrl fidivl sub fcompl out jo (bad) dec sbb negb in std lods push jns pop nop into and push xchg cs mov sahf cmp xor stos cwtl repnz popa xlat dec outsl jle test loop cmp add cmp fdivs xor sub bound sarl pop dec pop add push dec xchg dec dec add int ret mov mov das into or mov stos mov mov sub movsb push mov ljmp pop mov adc icebp push mov mov push lea inc loop aad (bad) jg sbb xor outsl push repz adc xchg inc add xor xchg add inc insl jbe jle adc ret and int3 je mov sbb sbb les lods repnz loope add insb push ret jg pop jo jge mov xchg nop cwtl mov cmpl mov insb loope clc fdivrl adcl pop out test mov push xor outsb scas mov and enter adc fldt add in repz mov xchg inc push insb sbb fwait adcl mov orl cltd imul add jo cmp dec mov push daa mov les mov in lcall aaa mov sahf cmp mov cmp xor cld ret jo insb fnstsw mov mov (bad) dec in cs into inc test pop pop in inc rorb pop fcmovu in mov inc imul test jg out ja or push into repz adc nop sbb daa arpl mov shrb push arpl loope (bad) cwtl aam ficoml maxps jp rcrl shll in movl test inc std add into movsb ja sub leave xchg jno movsl add outsb jecxz or inc pop jb sarl lahf xchg xor xor mov lahf cmpxchg sub xor ds jle push (bad) nop lea ss and pop ret or fmul pop (bad) lds jbe ret das adc out push adc mov lcall ja daa jns mov add adc or cmpsb das in into cmpsb xchg incb pop dec add sub pop xchg inc imulb xchg pop mov cli xchg pop sub (bad) aas and test mov cmpsb mov out enter (bad) cs lods pop jecxz movsl push add outsl sbb pop arpl outsl loopne add (bad) pop ja push inc xor nop pop jp dec cli mov or subl (bad) fnop push jg inc addr16 ret mov imul adc jecxz push out aaa xchg out idivb xchg add jnp sub or loop push cmp movl add icebp popf mov sahf add dec popf fsubrl ds adc jp jp mov pushf add pusha addb stc mov mov mov jle jb loope mov cmc mov pop fstl andl jne test movups dec mov imul fs xchg test das mov aad iret sbb inc pop test jnp push or gs ret stos or test idivb add add subps js push mov mov in jg xchg xlat cmp aaa rclb rol jecxz test sub out add mov or movsl pop inc xchg ret sti test lret out adc ret dec out jbe dec and das jp lret pop lods (bad) push stos call fs in and or sbb mov jo add cmp gs (bad) inc popa lret sub cwtl in xor xchg and sub sub or sbb fstpl or ret (bad) push lock sub (bad) (bad) or movsl sbb stos ss ja and mov ds out fs adc jnp push std inc mov ja movsb ret adc jmp cmp xchg aam sub dec out sbb jle movsl adc jl mov andl in and dec sub xor jbe jecxz lahf (bad) jb push or xor dec mov test mov aaa insb mov call sub sub aaa or xchg sbb jno xchg pop inc insb pushf outsb pop or cmc pop call loop imul and dec ret jb mov cltd inc sar mov ds es xchg mov pop es das fisub push flds mov dec (bad) xchg addl sbb and leave lret and sub adc sbb xor and sbb xlat push ret sbbl enterw decb xor push in jne rcrb add jne dec xor cli outsl pushf jno sbb ss rorb mov xor jbe adc aas into lcall cmp cs inc int and jnp decb movhps xchg lea dec fwait ss sbb sti popa imul cmp xor ss jmp mov xchg in cmc add push insb in iret inc jl lea fdiv sbb mov arpl subb cltd es lods fstl out das aas imul push daa in in adc fisubr aam sbb js push inc mov mov hlt ret inc xchg sub push shll add (bad) hlt sbb (bad) push ljmp loope scas std dec or add xor push dec cmc pop scas mov fstl jno push addr16 ret stc stos scas sti dec fwait cs (bad) cs mov mov fs aam mov sbb popa cmp repz test lods fidiv mov pop into jp movsb (bad) sti repnz mov pop rcrl sbb lods mov mov aad or mov movsb xor mov push (bad) notl mov push sarb push push aas int3 bound add cmpsl ret or nop out scas out mov decb movsb dec and pop lds xor mov fwait aaa ljmp cli xchg xchg add insb mov (bad) pop push mov xor lahf push out das cmp shrb stos mov sub cld ret out cmp pushf lret or das mov aaa out sub mov subl (bad) xchg mov aas mov mov fcomi enter mov lahf xchg mov (bad) jae cmp (bad) incl push and xor sub ja lea inc lahf nop cltd mov fisubrl lret or (bad) push xlat int push lret cmp (bad) icebp dec scas adc xor xor mov stos faddl pop das pop mov mov das pop mov mov (bad) jg add add stc sti cmp push push js add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb rolb push xchg sarl cmp dec sahf ds jp dec ja cmp dec jae cwtl pushf mov cltd into xor les jg sti xor add mov sar and pushf popf jae and add jle ds cmp bound cwtl xor jb cli sbb adc imulb cmpsb in sub scas pop jno xor mov push std jnp jae (bad) out dec imul push pushf xchg cmp mov dec jo push leave ret push dec inc push popa aas sub out sti int jle mov cmp stos xchg mov dec (bad) outsl int adc jl pop xorl cld pop ja (bad) inc cltd cltd add dec dec cld call mov pop (bad) mov add push in test leave push sbb imul adc pop xor push cmc fnclex ficomp cld dec mov cwtl mov xor in jo cwtl scas ret jo lea mov lock xchg (bad) or (bad) shrl pop daa xlat cwtl cmpsb loope mov adc inc push pop pop ret cmp cmp sub or nop xchg pusha xchg loopne aas cld imul stc out sub movsl dec cmc std (bad) fwait popf aas xor push pop rorb mov push dec mov out adc xchg sbb aam or cmp adc outsl sahf inc test hlt xor fwait dec jnp xchg test iret pop sbb xor jge cmp mov xchg sub and mov and xchg scas mov sub mov add ret cmc fs push jo test jp ja daa faddl pop fcomps inc pop test add (bad) loopne (bad) jnp lret in fbld jecxz sbb jle ror jge data16 daa add ds aaa mov fisubl daa rclb rclb cmp pop fs repnz sbb aaa loop jne scas movsl xchg (bad) push scas and cs pop jl movsl xorl sbb pop ss mov sbb jbe pop mov xor lahf or cld mov mov inc sbb push cli adc mov pop inc sub fsubrl mov mov jnp lahf sub loop sbb sbb or or adc sub cli xchg inc push add and jg add xor bt pop imul dec and daa mov push mov (bad) jg les add jmp bound das pop mov or in jle xchg loopne mov mov out jg mov and xor push jae xchg sub sbb dec out out dec cmp or lock scas cmpsb hlt into stc lods push cld (bad) mov sub es pop inc sahf xchg sahf out xlat push pushf jp (bad) pushf push push and xor ja and xchg stos int in push xchg jg outsb (bad) aad jnp jo daa loope fwait add adc dec adc out out scas dec fistpll js lock faddl sub adc lock xchg into dec jle ficompl pop and pop jns out jl outsb data16 cli bound enter fwait dec cmp in inc xor dec mul mov or js jmp insb mov jl xchg push cmpsb fisubrl test ljmp jp,pn add jge inc out in cmp and call (bad) xor dec cmpsl sbb arpl nop mov mov mov mov push dec dec jno xchg pop xor fldcw je mov cmp in mov or sbb pushf scas and xchg add and jg sbb in les pop pop in jne aad pop loopne jae bnd scas pop in mov push fiadd sub popa or shrb push ds decl mov fucomip or fdivs mov inc icebp sub push adc aas test das loope pop xchg scas xor adc mov jecxz bound int lods aas ljmp push lcall enter and jecxz mov inc xchg fnstenv cmp ljmp xor movsb pop xor mov sub sbb xchg repnz orb pop xor push and (bad) lcall mov fsubrl cmpsl lcall jae out cmpsl push add mov jl mov mov sbb mov mov xchg mov iret mov fwait add leave out rcrl std or jno repz das outsb shll xchg cld inc icebp xchg mov push test cmc cli iret push fwait sbb cmp mov inc adc popf das cmp pusha sbb xor mov jbe mov rcl lret dec outsb rep (bad) jne xor or push pop fsubrl cmp cwtl addl push cs pop or in lods inc bnd scas push in into xorl stos push mov cwtl pop out adc cld test xor nop add je dec xor add dec (bad) movsb and int3 add popa loop jmp inc divl xchg (bad) dec pop enter movsl ljmp jb shrb and sar mov add lea dec (bad) mov mov data16 aam pop out lret imul and arpl pop movsb cmp imul xor push outsl je addr16 ds or es xchg adc arpl lds decl xchg out mov push mov fisttpll (bad) in (bad) (bad) call cs xchg xor mov fbstp pop test cmc push repnz cmpsb and push sbb js pop (bad) insl mov sub dec cltd mov inc cli xor hlt inc and (bad) lods dec push inc (bad) mov mov call fisubr mov cld cwtl aaa (bad) in sub int3 mov mov push cmp pop dec jno mov lret pop push pop push leave add sbb cs or scas push popa inc sub dec pop fidivl cmc pop test mov (bad) or xor jle cmpsb push scas stos in mov dec or into mov clc sbb mov pop lods fwait sub int3 ss rcll fsubrp loope mov inc outsl sbb movsb cmp mull inc inc jne pushf popa adc in dec stos inc (bad) jae pop loopne int clc lahf mov push aaa int sub leave and sbb adc inc out lret pop sbb pop sbb loop xor sub sbb xor sub call adc nop outsl int adc jle lret aad sbb cltd inc xchg mov das nop outsb inc xor pop pop in jae fiaddl clc rcr movsb jae jbe (bad) cmpl rcrl outsl mov sti mov push inc inc (bad) xor pop xor push xchg pop movsb dec fnstenv sbb lret adc pop push jmp inc stos pop or enter adc insl mov ja xchg jo lret xor pop cmp xchg pop movsl das fdivr ret push push rcrb jp mov das push pop in pop mov sbb lods xlat sub mov jmp and xor sub pop jl xchg add movsl xor loop mov in les (bad) add js mov mov add xor nop popa mov (bad) mov xor xchg dec jno xorw jle (bad) push stos xchg cmp pop lret ds or sub aas push and addr16 into cmpsb fnstsw mov rorl aad je lcall xchg xor cmp push clc add mov shll out outsl jl (bad) je je pop loope ror push and pop pop movb lea adc ds dec sbb xor loopne push test pusha lahf loop iret lahf pushf xchg jg das call and jne dec dec and inc movsl scas sub mov xor orb mov pop jbe test hlt xor stos addr16 fldl sbb adcb pop rorb repnz aad xchg arpl stos (bad) xor xor loope adc jle mov mov cmp stc jnp loop dec repnz sbb inc cs mov sub mov in stos ds sbb vdivpd mov insl sub mov xor aad xor addl lea xor (bad) pop addr16 mov mov mov ja push or sti dec jae xchg pop jne ret push inc mov inc lods pop lods adc dec mov mov push push pushf imul pop std idivb adc sub imul out sbb and icebp add test dec lods xchg jp cmp push or in ljmp dec jl daa push mov in pop ror jl (bad) dec sbb adc stc loop mov hlt adc test in cwtl lcall xlat sar outsl adc cmp mov es push and std dec mov mov mov rclb sbb sbb lcall psubusw (bad) jno test or or adc cltd add push xlat scas imul adc or cmp mov jno mov mov xor mov and dec je leave and lahf sbb test in cmc ss fnstsw pop push scas pop and sbb xchg mov push in inc rclb rcll (bad) pop push or movsb add mov pop or pop or push mov push mov and call movsl (bad) lahf pop cmovg arpl inc test jno (bad) rcrl in and add jnp xor xor push cltd xor clc jmp mov dec and push or in out lahf in mov cmp lcall stos stos scas movsl fimull cmp dec jnp push add or inc mov std test dec (bad) xor dec stos push pusha jnp ret add or insl inc imul adc out idivb pop (bad) rcr mov cmc xor and icebp popa fild dec fcoms mov int3 and andb out (bad) mov cmp test jecxz stos inc les cmp mov jecxz outsb pop jns pop push and jg les ja xor adc inc idiv sbb sahf mov mov movsb leave divb rolb jp add cmp xchg cld (bad) mov pop fdivr mov mov pusha mov push clc nop pusha push adc enter repz mov cmp xor cmpsb jo cmp sub sbb jne mov bound adc (bad) int imul out bound mov loopne fcomps dec out subl outsb test imul ja cltd sub aad test push out dec jge in data16 (bad) scas fstl push lret push mov mov mov insl mov mov mov lock cltd pop push enter aaa jl pop pop inc xchg mov (bad) fwait xor inc aas pop xchg arpl pop xor int push loop dec jae xchg mov fidivl pop mov add add xchg push pop inc mov xchg notb leave js or xor (bad) lods mov jae mov bound daa fcomi into out das adc mov cwtl jge es data16 mov xor ja stos jecxz arpl lods adc xchg aas aaa pop cmp (bad) (bad) sti jns push in push je mov push (bad) mov fisttpl jle,pn xchg jnp and xor dec insl xchg orl push (bad) jnp jbe into clc or aam (bad) xor mov (bad) and or mov pop add dec sub mov mov icebp paddq sahf rorl inc movhps sub push push movups aas or dec mov repz in mov adc push cmpsb pop adc aad test push bnd cmp mov les or jl lods push or dec inc push lds popf jne lea out push push jge sub push dec sbb sbb jle mov and push insl and into fisub insb xchg rorl js add js fcoms xor cmp xor insl mov push lcall mov fldt (bad) or xor mov dec add mov or popf xchg jnp cmp stc cmp fild ljmp sub jmp pop (bad) cld mov mov test xchg mov mov test and les int3 (bad) ljmp xchg int3 cs jge mov into sub xchg jb clc pushf dec push pop ds xchg daa sub xchg in adc pop aas repz hlt es fldcw or fdivrl ds mov rol jecxz jge,pn popf or push mov lock fsubs sub inc cs mov add jne add aaa addl xchg dec in xchg dec inc pop jo and and fsubrl sub xchg jns jne pop hlt mov lea sub movb dec push loop jbe imul push in jno dec pop imul dec dec add push popf push or mov hlt xchg out fisub cmpsb pushf push xlat dec lea cmp popf jmp xchg inc sub dec cmpsl mov (bad) cmp lret jmp jmp daa cwtl pop inc movb (bad) xor sbb dec lea mov and loop sbb cltd or lret cld hlt cmp cltd std cmpl popf pop xchg sbb rorb jmp xor mov aas mov xchg dec add push sub cmp mov arpl or repz mov xchg mov push hlt (bad) lods inc and mov dec and sahf and sub lea cmp lret ss dec xor xchg js arpl (bad) jne cwtl jae bound and sub push (bad) and jbe sbb pop pop or add add das xchg leave xchg daa dec sahf cmp repnz xchg daa dec sahf cld incl add btrl add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push aas sbb rolb rorl divl frstor jge les cmp cmpsb fucomi out sbb push ss mov cmp (bad) jle xlat repz add push lret call stc in cld push scas sub je loopne loope enter xchg and lahf test fs xchg pop lock cld fidiv fs mov pushf add daa loope push cmp aam rolb pop jl cmp mov dec in mov ja adc jne xchg stc pop outsb pop or dec ljmp dec stos mov mov std arpl int clc out or adc ret ret popf icebp and xlat mov inc push aad mov mov sbb lret enter (bad) (bad) xchg add mov lcall movsb and test insb sbb lds cmp call mov pusha adcb pop or into out movntq out pop scas jbe cmp jmp and fdivl cmp test sbb out aaa clc daa mov lds dec in sub or or or mov movsl cmc xor (bad) inc leave mov das iret jge sub pop cwtl mov test sbb adc dec sub cmp outsb nop fwait stos not mov jp (bad) mov ds xchg repz push out (bad) pop ficompl (bad) lret jl adc es das jp cli sub jno jg pop repnz rcrb fldcw push xchg je sbb sub xchg xchg xor leave into mov sub stos sbb addb lock pop or nop lods mov jbe rcrl imul rcll call outsl les xchg rorl xor stc in dec pop inc pop push add cli lret sbb mov pop or jmp fstpl add out cmp sbb ds lret call push adc cs xor pop mov and push cld cld rolb or scas subl stc sbb mov pop in mov fwait add sysret in cmp ljmp fs (bad) addr16 cwtl inc (bad) out sbb pop hlt les (bad) cld out and test sub cmp gs inc cmpsl inc aad sti arpl fadd mov fldt push jmp jge mov mov call stc mov fisttpll xchg mov pop jno xchg inc ja fs notl push mov and lea loopne (bad) fstl jbe cmp sti loope pop add into cmpsl sbb xor movsl in and jl fsubs pop mov sbb inc fmulp pop xor inc (bad) cli xchg lods repnz pop inc mov pushf shll xchg add lods insb ljmp fwait push cmp xor and cmp sbb (bad) jno mov mov bound negb sbb les push test sub gs fcompl stos push (bad) sub enter push outsb pusha mov dec mov shr rcll add mov movl push cmp adc mov fwait add mov dec (bad) push (bad) cltd nop fxch mov and pop jecxz sub lods repnz jecxz jecxz psubusb adcl out das popl or ja cmp out dec hlt outsb and repnz daa insl fdiv xor and mov inc push xchg (bad) ds test lahf mov aad dec push int3 jp pop and and xor xchg mov shlb cmp data16 (bad) jae xlat or jle ret div mov sub sbb inc out popf inc mov sbb jo xchg mov xchg hlt dec mov inc push popa sub push mov repz mov add out xchg mov (bad) rep ljmp mov mov addr16 lock imul jbe mov loopne test sbb sbb push repnz xor lods fdiv xor lds lods mov adc xor push mov inc (bad) gs out (bad) (bad) cli jo push stc dec les ja out mov gs scas loope sub cmpsb mov sbb mov mov movsl dec jp xchg daa push mov pop call mov inc add push mov jnp fsubrp insl mov scas jb push mov sub push sub ds and movsb sbb mov sbb arpl cmp rcr dec imul ljmp push (bad) adc mov push add gs call cltd outsb cmc inc cli cmp cmp mov add lahf and jecxz shrl cld push sub rclb jns ja fisttp lods (bad) mov mov and cmp bswap (bad) add xor jne mov int3 xor and iret sub xchg (bad) xor sub mov lcall jle incl push loope test fwait pop mov fcmovbe and repz pusha jb (bad) cs rorb movsl rclb fwait insb jbe and push mov or into insb mov idivb or mov imul mov jmp or pop sbb jbe adc in push cmc sub scas sbb scas inc add (bad) iret mov (bad) mov mov aaa jae inc mov lret cmp lea push mov push icebp hlt mov xchg les inc popf stc movsl dec or push or call movsb xchg and push mov mov dec fdivl dec rcrl push loop iret pop push xchg push inc pop shlb and cmp je enter or inc stc jns xchg sti loopne add add sub fdivr scas data16 addl jne cltd aaa mov jge nop ds cld and icebp aam sub das push das or addr16 (bad) fucompp int int aad cs into mov add dec clc or (bad) fsts push gs inc cmp negb mov insl push sbb je mov cltd xor mov sbb push out cmp insb loopne dec jns ret mov loop pop ss mull mov add std mov push lds (bad) jns in push aas rcrb jmp inc cmpsb lea imul cwtl sbb movsb (bad) sub shl pop push clc aam test pushf mov and dec mov stos inc test movb mov sub push mov dec clc lods mov ljmp hlt jnp shll adc xor test inc pop inc insb mov repz xor push jne (bad) or xor or lds clc xchg inc loope fnstenv pusha test push mov imul ss (bad) mov push sbb addb test adc sbb add fsts lret jno rorl out fildl bound and daa daa push pop scas mov daa (bad) (bad) frstor (bad) mov mov mov xchg pushf or mov xor xor jmp mov sbb sbb cs je fnstsw lret ja pop push repnz lock bound mov adc adc cmc sub out mov or push sahf jb pop sbb std movsl iret push (bad) popa jne xor nop aam dec lret mov xor insb push xor lcall daa cmp cmp fdivrl lahf jb mov imul mov push cmp mov mov dec (bad) jne in and andl (bad) sub push xchg les int3 and mov movb insl repnz sub cwtl push xlat loopne negl push js xor ret inc test loop mov xor test stos adc cmp sub popl adc xchg or mov sub cmp dec cmpsb mov jle ss ljmp (bad) imull mov jne insb and dec adc pcmpgtd mov add test lahf xchg pop xchg daa mov inc jle mov imul movsl mov or pop fs pusha mov dec pop xor dec dec jg test xor sbb push push loopne push sub mov mov mov in dec out mov or pop xor sti and addr16 pop xchg jo adc sarb jb popf mov dec clc add dec into ljmp mov mov sbb lea push mov pop into adc or sti popa mov lcall mov aad ds pop cli sbb dec lock adc mov pop inc call xchg addl (bad) daa pushf mov sbb icebp dec int3 xchg sti jns ja jns jno in jo mov and sub xchg mov icebp cltd inc sub pop pop mov add pop in stos dec lret aas insb stc pop pushl ffree cltd push imul into mov xor xor insb pop fidivrl repnz ret inc popf fcomps sbb icebp in test mov loope out jae sub js push lods (bad) es repnz cmpsb jb push (bad) roll outsl mov in scas push or loope pop das xor cmp xor xlat dec sti mov cmc jle mov cmpsb movsb icebp test xchg mov faddl jne das test mov pop lock inc movsb push xchg mov pop je (bad) into inc js ds (bad) jae out sub inc dec fimul pop test (bad) (bad) pop in adc cmpsb xor and inc test inc dec push lods ss sbb push add sub mov fidivr ja rorl into pop outsl cmp xchg lea leave int movsb pop xchg lahf add (bad) dec and sub inc loop aas add mov adc leave mov xlat jb fbstp rolb je adc xor cli loopw mov sub mov mov cs mov pop lock mov jle and pop jb mov scas shr sbb arpl imul or adc cld or loop je out subl ret dec xchg loope pop bswap rorb push add nop mov gs sub movsb repz fidiv sub in ret pushf lret and mov mov sarb jno imul mov mov addr16 add xchg gs (bad) cld sti xchg (bad) aam ss repnz pop mov or jmp data16 les fwait mov mov pop dec mov push add add ljmp in pop xchg inc js repnz outsb sbb (bad) dec pop paddusb mov xchg jge (bad) dec mov mul mov imul jecxz cltd add jl loope sub jbe pop pusha push mov mov or les sbb sti test sti inc jae movl xor lret mov push std add psllw jle jg sbb mov pop mov or repz mov lea mov xchg (bad) (bad) xchg aas dec enter cmp mov or outsb sti dec cmpsb icebp dec jne lret sbb push in mov mov dec cli (bad) push push xchg cld mov outsl add and test out ficompl lock ljmp test cmp jbe out push imul pop or enter or les push fiadd sbb dec inc cmp lods xchg mov xor aad mov sti cmpsl or add dec push xor mov std mov imul push pop cs dec adc add lods cwtl jae mov inc add sbb push sti adc xor mov scas xlat hlt subb jo and sbb push in or jae sahf mov push mov jo (bad) leave inc mov push popaw pusha cmp in int xchg jecxz sub inc lcall les jge pushf call cwtl mov mov sub call imulb aam test xchg adc pop sub cmpl lea xchg incb push inc mov mov push loopne mov mov push add in mov mov (bad) call mov push adc enter mov mov cmc hlt fldenv jne push mov xlat mov xchg in std pop adc or mov icebp outsb xor mov mov lea cwtl xchg fisubrl (bad) cmp (bad) cli mov jge arpl dec cmp add sub insl mov scas jl popa pop fcompl sbb push cli adc imul out push or sahf (bad) mov sub ss (bad) mov loopne scas (bad) adc mov out js in pusha fsubl test push cmpsl js sbb and mov bound test mov pop repnz mov insb pop fnstcw sub addl mov push out xor adc dec and dec push mov stc (bad) ficompl jge and cmpsb sbb push cwtl mov adc jns stos movsl insl or loope icebp sbb cmp sbb mov pop and test push dec scas xor dec jae inc out mov fadds rolb into xor add push mov and xor jecxz lods (bad) cmp loope xchg out in ret pushf sarb jmp loop lcall sub mov shll fistp xorl xchg cwtl dec insl pop push lret lahf add aas pop dec pop scas ja ret mov xchg outsl xchg push lods sbb sbb mov jecxz xlat aaa ret mov jg test (bad) jo scas dec mov ja stos rcrl sahf jle sub loop dec insb pop pop mov pop lea xor mov call inc scas pop mov stos push scas pop mov stos push scas (bad) incl add pop lahf push repnz iret pop push add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aam add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop xchg or xchg out xchg out push jmp xor fisttpll mov test add (bad) sar in mov add sarl mov mov test and push (bad) mov aad aam (bad) cs fsubrs fnstsw loopne aas sub lcall out std sub jmp pop cmpsb outsl cmp ds mov fs fcomps (bad) addr16 mov in aas scas sbb xor sbb jl lret daa js jbe dec and aas arpl pop or cmp cmp mov (bad) adc dec cs or cmp outsl insb call fidivrl cmpsl add push fistpll fmulp jb pop push cmpb xor pop mov test stos add mov stos lods dec dec (bad) bound shl mov inc mov adc dec mov jecxz fnstenv push scas sub ret cmp outsl push jb jge mov sub (bad) or neg test pop repz imul sbbl mov pop push cvtps2pd mulb sub mov sbb sbb aas std out fisubl cmp sar inc mov lret cmp mov sarb cs pop mov push cmc insl mov (bad) outsl popf adc ret xor adcl push jo outsl and (bad) fdiv loopne or add ret arpl adc leave add mov pop inc (bad) sbb dec and push into add and jne push mov repz aad ja mov sbb lock scas xor sbb adcl jne cwtl and cmp dec mov xchg fs insb push mov xchg lods out inc popf insl inc ret out inc xchg or xor out (bad) aam arpl daa sub jmp add lods inc mov xor ja aas inc ljmp (bad) push sub mov outsb push pop pop nop stos add fstl sarb pop ljmpw jp mov test jmp fcmovb cmp fwait xchg pop pusha mov mov sub inc pop push stos cmc in mov and pop adc imul scas xor sarl add add cmc les fstps jp xor mov into lea int add or jne mov ss mov xor adc mov mov out stc xchg push shrb mov sbb sub jb or idivl movsb xor stc aas lret mov inc jecxz out fwait daa dec je lret mov cmc fcomp sub repz cmp pop cmc dec insb shrl cltd jnp push scas (bad) in (bad) inc popa push sub ja insl add push in call adc push and les test sarb pop (bad) imul push push loopne pop and push cmpsb insl (bad) aad or ja push stos mov and push cli repz push inc mov sub lds inc imul lahf mov daa xlat lret sub (bad) pop lret addr16 out push jbe stc or xor push (bad) push adc hlt popf or cmp stos mov add inc jnp ret jecxz fiadd (bad) xor lods xchg imul lret or mov cmp mov hlt lahf int (bad) fdivrl sahf int loope mov xchg push mov test (bad) jecxz cld sub fwait cmp scas in cli lret jae jae adc aam lcall dec or pop jle mov out jae movsl call jae mov int3 and mov xchg movl lret push out mov mov mov ljmp jne (bad) mov mov push lods lcall mov pop dec jle xchg pop pop imul sarl mov xchg lret mov xor push (bad) dec and cmp push mov jmp pusha adc daa inc cwtl xchg mov add xor insl js mulb push insl mov call jecxz pop adc dec pop inc pusha mov and mov sbb call in je rcll xor and stc imul pop sub xor and rorb mov pop push (bad) outsl (bad) (bad) pop call cld push cltd jmp pop jp data16 stos (bad) xor daa lock hlt ja icebp cmc pop es mov add icebp inc rorb test mov test sahf loopne or test icebp mov loopne insl cli xor cmpsl ret js negb in addr16 (bad) adc out pusha push mov mov push cmp jae sbb pop xchg arpl jno sbb notl add test push iret movsl cmp sbb (bad) pop movsl jg cmovbe insl negl popa push inc mov cmpsb push shrl das cwtl sub mov sub add (bad) add xor and dec or jae aas adc adc fisttpl mov push mov loope inc inc xchg mov or enter in lret stos jecxz jae fcom in mov cwtl inc out or cmp add (bad) enter dec movsl jg (bad) (bad) cmp in push loop jnp cwtl xchg mov into inc pop aam mov push sbb mov stos mov aam into mov jg in nop inc gs sbb test adc lds fcom mov mov mov jae movsb sub mov outsl stos and clc push call shl lods in std mov dec jmp dec stos push dec push addb out mov lock pushf lods adc cmpsl jae pop movsl xchg xor sub and lcall or pop (bad) mov mov fisubr mov bnd nop ret mov aam repz test cmp sahf pop xchg pusha jl sub cli and out push cmp std push outsb in das fdivl arpl test add inc or xor clc pusha xorl js mov icebp in push sbb adc imul and push testl in sub xor frstor test adc mov inc dec out sub stos xchg xor jecxz add enter cld cmpsl aaa cltd sbb lahf int (bad) stos xchg lods xchg aam add test pop jnp in mov and cmp rep jl push mov xchg cmp pop dec inc outsb and fsts inc shl insl xor test inc pop out cli (bad) jbe pop push dec xor (bad) mov cld insl inc and jae repz stc (bad) xchg rclb add orb ret lret iret sbb jo xchg xlat pop sub cltd fildll lcall jp mov or mov test (bad) adc loopne pop mov test push outsb in sbb xchg call fidivrl clc aaa in sbb and arpl push push xchg imul or or shr cmc jne mov das pop mov inc fstl aam imul ja add jle cs lret sub cmc add mov pop nop lea mov mov sub out xor incb in jns and push xchg jp repnz mov cmc or int3 sbb aaa aad popf stos pop mov sub inc push jae mov into (bad) aad add xchg push outsb mov mov push push xor leave push mov mov mov aam das fildll popf xchg push xchg mov imul push pop daa mov mov fldcw sbb lds sbb dec inc push movl cmpsl fwait adc jg mov rolb stos js sbb push jne jle notl (bad) sub lods pop push inc cld sub inc fwait mov dec add pop in repz pop pop (bad) mov xchg (bad) cmp cmp jo mov fdiv sbb pop cmp adc sub addr16 clc dec xchg mov cmc jns and iret js sub pop (bad) cltd les inc sti repnz adcb repz mov das mov or fbld les push mov pop aad cmpsw lea insb bound pop xchg cmp addr16 rcll sub lcall xor test dec into sub arpl xor loopne jl bound cmp dec sbb test cld sub es mov aad mov mov out jbe push and and fdivs out ljmp push fdiv into ljmp or out jae jle push rcrb std lds inc fs xchg add cli lea pop in pop stc repnz cmp adc push mov cs jne div mov pop adc rolb pop pop add adc iret mov cmpsb dec mov jno test cli loope adc into popa lret aad cs fldl cmpsl cld cmp cmp imul test sbbl test cltd and add stos sbb imul stc inc dec or push les test pop out mov scas jb cmp mov mov lds stc push sbb and lock mov sti xor adc mov mov out push sbb dec push inc (bad) and std sbb outsl mov incl insb xor pusha (bad) fldenv in pop or mov iret fwait xor mov mov test mov fidiv mov das fildl int gs inc lock sub mov in xchg in (bad) int les and push and das hlt fdivr mov adc dec lcall push jg push in test inc ds es inc inc push insl (bad) or jmp adc or dec ja dec and xchg inc add xchg cld dec (bad) incb cmpsl lea mov pop push frstor xor cld insl mov lret (bad) jne inc rorl jns sub ret mov inc jb sti adc xor inc data16 fisubl in or mov in jecxz add dec jge push push (bad) xor mov lds mov mov adc decl pop mov sub stc into pop lret mov xchg cmc iret xor sub aas popa fldenv inc or sub push outsb fsubrs mov pop hlt dec jns push out adc inc aam cmp mov daa xchg jp in lret fidiv dec or jae lock test pop sbb xchg fadd xor repz cmp out push pop daa loope test pop jb test sbb xor fimull negb ljmp jo mov cs repnz stc xor nop std push push xor (bad) adc out push xor lcall adc arpl scas inc mov cmp mov mov push (bad) fsts cmp pop adc add (bad) cmp fsubrl lcall into mov pop push jmp sub loop dec lock ret jns mov inc dec movsl adc lret lret in dec icebp mov (bad) ficompl notl and and pop xchg mov or es pop aas push aad add add xchg lds or movsl mov mov jg int negb and (bad) cs fstpt in adc ret int3 test xchg int add (bad) mov ja mov pop sbb imul xor mov mov pop mov jnp mov mov xlat sahf sbb imul add enter xchg push into mov fs jecxz int3 jae mov stos lahf cmp sub mov adc test scas aas stos and loop xchg inc xor mov lock gs xor inc or or jle adc aad cs fstpl pop sbb xor pop (bad) leave mov lods outsb jns je or adc and xchg inc js rol fwait icebp sub dec xorb (bad) jo xor fbld inc adc push xor cld jno lret pushf jbe jo out cmp cmp std sub sahf popa mov lock mov xor test inc inc xchg int3 pop cmp dec xchg jnp mov mov rcrl popa jmp jmp iret fbstp jmp loopne (bad) out test cmp ss jg pop enter jae jge inc in sti mov jb inc sub rcrb and cmp ja push ljmp jmp inc sub sbb mov push ljmp cli movsb sti pop arpl int3 test jg pop inc dec push adc movsl ret cmp shll test lock mov and aam mov mov das mov shll pop rol data16 jecxz inc cmpsl lea enter fidivl insb lds and xor cs push clc mov add fstl xchg mov xchg lods ss ss lret adc xchg mull test mov adc mov and popa inc jo jno mov sahf (bad) mov push sbbl fwait test pop addr16 jp mov pop adc das sub movsb sbb outsl mov out pop out sub and sbb push test jp pop add cmpsl adc lock inc mov xor ret outsb cli icebp cli lods mul fsubrl and and pop iret xlat xor mov add clc cltd hlt jecxz psllq mov add push mov xor cmp inc jp jecxz imul cmp stos sub (bad) jbe sbb xor aad (bad) xor lret cli fdivrs test pop dec mov and orl (bad) and inc idiv ret push lea dec push dec mov xor jb loope add cmpsb adcb jne cwtl jae xor dec pop mov cmp icebp fstpt insb outsb clc js andb jp push cltd pop ljmp dec lods cmpsb ror or jle ret and or out jbe (bad) cli jnp es incl lock iret ss pop or jp ljmp jp ljmp cli incl add pop xor adc add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoms add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb rolb fwait sbb into mov je cmpsb sbb rcrl push arpl ffree mov pop (bad) jmp xor add ret call (bad) loop sbb outsb gs xor add sub popa mov cmpsl mov pop fdivl repz lahf and or mov cltd mov (bad) sbb jae xor fistpl sahf sub jp (bad) aad insl imul cmc or fisubrl dec and leave test mov add xor (bad) scas push scas xchg arpl xor push or cld cmpsb mov or cmp int3 imul in xchg and test push fildl repnz (bad) pop add imul aad clc pop nop lock imul pop and into jle ds repz and movsb out xchg mov jae orb in cmp mov outsl popf mov call push add (bad) movsb mov das and or push data16 fnsave (bad) jbe sbb push ljmp (bad) aaa cmp or adc cmp lret (bad) mov jo and dec pop pop cmp in in inc xchg fimul and pusha cltd mov fs inc inc (bad) outsb rolb xchg daa pop shrb adc jmp sbb or das subl and jecxz,pt mov xchg and pusha fnstenv mov jns test push jmp add sub clc xor gs and sarb fsubr daa jo cmp loopne nop mov mov pop aas jg dec pop mov push into fidivl stc adc int and je sti (bad) or cld adc pop or sub cmp adc addr16 and fsts pop jg push je pop jne clc outsb mov ja fldenv push scas icebp cld shrb je addr16 or lcall nop aas ret push popf scas mov jno push adc fbld mov push jmp inc or push inc mov xorps push pop repz jp std (bad) pushf leave xchg mov dec sub xchg pop sbb addr16 xlat movsl xchg ja adc sub neg lea mov rorl (bad) movsb xor inc mov pop xchg fldz add je ja fdivl inc pop and cli jns mov (bad) subl fs ljmp and scas in cmc lret je dec in or (bad) dec adc cmpb dec inc and fldl in xchg inc insb xchg (bad) je insb arpl mov cmp jns jo xchg call mov xchg call mov push inc aaa cmc jo mov mov test shrl push js loope jmp stos sbb mov out jno sbb in push and ficom push sub and out xchg pop pop mov push rcrl push aam sub jne jo mov and mov jns push sub fdivl push and sub cmp push mov testb dec mov call mov nop das cmp shrl shlb addb xchg faddl test mov cs mov jg pop inc xchg seto pop int or scas inc inc inc std adc int aas clc das js mov dec mov xchg shlb in (bad) xor outsl adc mov cltd add hlt mov lods lods in and ret loop fisubrl mov aam int3 mov sub pmullw xchg movsb jae push test fimull jle xchg ljmp nop add icebp mov in or push sbb mov aas sbb sbb les in aaa fisubr adc js or pop push ret in daa sbb mov int3 sahf push mov push xor pop je cmp (bad) dec mov xchg jns mov push out dec das sbb lods hlt mov stc cld sahf pop pop sti xchg dec les rorb cmc imul jbe cmp fs fidiv mov cmp out or push jecxz mov sti imul jbe sub or mov int inc or popa pop loope jmp push ret inc or test mov push sub or stos gs mov adc std fscale adc cmc pushf scas lret fwait sub jecxz pop fidivr xchg cmp dec dec inc (bad) adc mov mov dec xor sub jge lcall test pusha test out ljmp mov push jg ljmp jnp mov adcb cs lret cmc mov cmpsb adc push fisubr xor dec mov shrb pop adc inc xchg out fs xor jecxz jg xor call imul sbb (bad) or ja cld scas popf (bad) xor fs jp jne mov xor mov xor stc mov jecxz add add cmpl dec add jecxz sub fisttp xchg rorb or repz or cmc lret inc movsb das je xchg mov shrl mov sub xchg stos push stos sbb (bad) rorl movsl jno adc test insl (bad) (bad) repnz lock jl out mov add jmp mov push push sub andl or std lods sar jnp (bad) inc inc jns sbb or fmulp pop ja fs hlt cmp loopne test push mov lock dec pop xlat shlb xchg xchg cli fistpll pushl inc push cli inc aam inc pop adc hlt cltd ja jg xor and xor xor addr16 in dec sbb cmpsl mov out cmp sub leave push pop mov push add push test das enter es mov ret (bad) jb or lahf inc push lea mov inc cltd divl pusha mov add xor and or aas aad mov aaa (bad) fdivr sti push sub inc (bad) and icebp jg ja (bad) cltd lret cmpsb push push mov aad repnz dec leave sbb data16 pop mov and js mov cmp in popa adc xchg mov insl mov lahf nop cmpl (bad) clc lcall ret mov pop xor outsl das or xor jae pop jmp fadds lods push insl pop mov imul mov out insl sahf lea jnp xchg adc inc dec and sbb fidivr lahf jecxz jnp addl fwait xchg fbstp jmp jle aaa cmp int pop pop mov or fadd out dec lds xchg outsb push and lods xchg sbb in bound mov mov add jbe call or fistp inc int3 cmpl movd (bad) push mov push test pop popf add jb push jg mov daa (bad) mov jmp movsl std inc loopne addl dec into xor adc popa lahf xor jl inc and jp (bad) into out lcall clc xchg inc out test lcall mov aad push lcall push jnp imul xchg inc and das add mov std mov or adc (bad) mov add or xchg imul ds xor add sbb mov sti mov and into stos dec pusha push outsb and aaa jmp je mov jns scas idivl sub mov mov test adc xor (bad) mov dec (bad) add inc pushf jge ret push mov repz pusha arpl xor imul pop aas mov mov rcll lret rcrb dec divb mov adc orl or xchg push add insb push xor xchg rcrl dec outsb or xchg nop mov out push lahf (bad) fnstsw sbb scas cmp pop cmp add rcrl sahf xchg js int3 in cmpsb mov cwtl sub aam mov lahf mov jb scas (bad) ss and pop cmc iret fwait jo stc jge jp jns cmp inc sbb movsl pop xor loope pop inc mov call scas or dec xor and (bad) sub xchg or loope jecxz loop mov or jmp cmpsb jbe mov pop push adc stc mov loop (bad) mov cs or xlat xor sbb (bad) insl fcmovnbe or mov inc sub mov (bad) fwait cmp push cltd ss add cltd pop scas outsb (bad) repz push fmull out mov fbstp popa cwtl (bad) arpl dec stos mov xor pop sbb sbb mov ljmp sbb lret adc (bad) adc mov push rclb fisub adc negl cmp (bad) fs jb cli push scas in loopne mov cmp sub or jp sbb jns test xor xor inc xor lcall (bad) pop cmp mov add lret or cmp xlat adc repnz mov xchg cld adc cmp cli push lret sub pop rolb xor adc in lock add (bad) dec push aaa sbb (bad) in fs adc pop sbb pop fbld icebp jp push cmp rcrl shll jge fbld cwtl fimull aaa into je xchg mov sahf lea dec imul mov sahf out scas mov fs (bad) cli xchg jg fildll jno lods pop cmpsl mov idivb cmp add push subb sbb dec cld push cs (bad) pop push insb xchg ror dec sub xchg (bad) mov jne xorl sub and pop sub xchg addr16 lods jl jecxz aam das outsl jg add dec lcall push das scas xchg lea dec out popa les push dec push cmc add (bad) pop aas stos add push and mov sbb cwtl lock mov sahf or in addl and insb (bad) mov pop lock loope pop jge xor daa pop sti sub pop mov pop push and lret add into sbb data16 orl addb jmp inc (bad) daa dec mov or xchg xlat cvtps2pi test push idivb sub out xchg jbe insl cmp jmp stc xor out xor (bad) js pop xor test inc (bad) lods repz push ja add sub xchg mov shl pop push jo jns lahf add idivl jecxz (bad) sar mov mov stos mov xchg in imul incl cli repnz lods fwait lcall and dec xchg std jae fs and mov pusha jp popf cmp repz push dec mov dec lods inc (bad) loop mov push test push or dec cmp daa inc (bad) inc sbb cld ljmp add stos daa test out ja sub mov fiadd fdiv clc push inc dec cmp cmp xchg or fdivr jae mov gs pop and loope inc xor imul or sub sbb dec mov jno js (bad) sub repnz xor in fisttpll push (bad) sti sub aas add push (bad) negb push jne sub cmc cmp cmc push dec (bad) ja cmp cmp stos imul push imul mov lock movsb dec cltd mov adc jae outsl loop push call and out in (bad) cmp repnz cmp dec mov xor jne outsl sbb push xchg jg dec pushf dec sbb ret add das dec sub out repz lcall xchg aas mov mov xchg mov adc push pop lret cmp cmc out add cmp push or out inc fcmovnbe insb lock scas pushf xor cmp cmpsl dec pop loop (bad) dec int3 xchg in dec (bad) cmp (bad) push push pushf jae hlt (bad) fisttpl and mov js push inc stos lcall push lods mov mov lods cmpsb cmp cmpb inc adc stc call mov test dec fdivl cmp ret and test out outsl faddl insl insb fist xchg (bad) movsb push add bound cmp lock jb fistpll sarb lock mov ret adc xlat cmp mov aas subb fistp cmp fs jne sbb cmp sbb or jmp rorb aas ds and in mov mov lea add pop not cmp mov jbe and negb addr16 cmp loop mov jb inc push leave loope std ljmp adc test mov mov aam adc jmp mov jbe add pop lret adc push mov push xchg add jnp (bad) int sbb aas stos jge shrb xchg (bad) roll push das lcall int insb or ret push adc xchg fst push push inc mov dec popa fistp jg pop inc aam imul aad in push lret ret loope jns stos xchg icebp clc push inc add sahf rol into sbb out pop mov (bad) push mov decl arpl xchg dec daa adc push xchg fsubl (bad) jo sahf in inc aas cmp mov loope ljmp push add cmp and mov xchg and bound pop or adc inc push std (bad) pop ror (bad) in outsb lods sub gs inc lahf lock mov scas sti push into nop mov popa mov mov mov imul cmp sbb jnp cmp pusha xchg movsl cwtl mov sub fisttpll add cmpsl aad loopne push pop push mov lea jo push mov or mov cmc addr16 enter ret jb std test mov jp loope push leave sar je ss cmpl std aas xchg movsb fs cwtl fwait (bad) jb (bad) cmc inc (bad) mov js loop mov das pop mov mov (bad) jg add add stc testl add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fistl add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb jecxz icebp rorl push (bad) out into rcrl push cmp adc ficompl sahf cli cmp mov cmc std add les inc jecxz fdivs mov stos mov test icebp adc cmp xchg lret mov ljmp and je,pn outsb subl ret mov movsl pop pushf add fbstp bound nop sub jge fcomip jge idivb pop xchg push repz shll cmp adc adc daa mov adc cmc xchg or pop ja cmp push aas loope fsubrl jae and and rcll sti cmpsb adc je lahf push inc push mov pop pop mov xchg sti sbb xor loopne adc scas mov push in and dec mov sub bound inc movsb jge mov les ja lret inc loope icebp lods daa jnp push jle test mov pop and fdivr fisttp decb test sbb test mov or jno cltd sbb mov std out loop,pn jmp outsb mov xchg insl inc dec adc clc or ljmp mov mov jo mov sub sti pop cmp pop std insb movsb add mov pushaw ficompl inc out lret or fscale or push loop into rolb sti xor fs jl adc aam (bad) cmp out pop or loop push lret xchg cwtl neg xchg out (bad) jb mov lahf icebp outsb sbb mov ss mov mov cmp jbe and stos in or enter rol and pop adc pusha scas jge cmp insb pop test (bad) mov addr16 xor sbbl jno ret jg ret lock xor (bad) push loope pop or push and push pop push (bad) or mov dec cld aad pop cmp xorl test or mov mov fidivrl js mov mov loop xchg scas cli mov iret push stos mov mov test jecxz aam int dec in mov (bad) pop mov pop xor sahf cmpsl pop test js sbb loop movsl cltd xor xlat pusha aam inc icebp jp add movsb mov push push in mov adc iret hlt adc call mov add lret decb jmp cmpsl daa movswl shrb pusha sub xchg fcmovnb or xchg add jae xor lret call cmp fstps sbb pop cwtl and jle mov jecxz fimul sahf sbb xchg mov imull out and xchg stos push stc xor pop cli incl les inc imul pop lds mov inc dec jmp pop (bad) faddl sbb cltd jle and dec push dec pop cld xchg imul xor in mov outsl rclb xor xor xchg mov mov cmp inc inc pop jbe xchg push sbb jle inc mov arpl xchg inc jmp inc dec xchg fs shr clc rolb pop dec and aam ret sub pop and imul divb sarb dec dec and repnz adc lds pop cmp pop push shrb push in test mov pop dec sbb mov jb hlt pop sbb cli push in ss ja or fmul lahf (bad) xchg jp mov pop mov xchg and je inc lahf sbb push sahf dec mov in sti lock lcall mov jnp les adc xor imul outsb mov fwait push jge sbb arpl and add jne gs sarl dec dec sarl (bad) aad adc jmp imul aas mov mov mov xchg test loopne add lar test getsec push sub mov xchg jmp outsl xor sahf pop pop xchg xchg sbb inc jno inc fisub push push dec loope pop test leave jne pushf addr16 ss out fs xchg xchg fwait in inc cmpsb fsub mov dec je setb jecxz fbstp imul mov lret in mov insl movsl push mov loope fisubr shrl dec push xor std mov xor movsb rep add int3 xchg cmp add adcl jno mov out or cmp inc inc mov sub cmc jecxz ss outsb sbb in fstl lret shr dec data16 pop in std pusha cmpb and adc mov mov repz push sahf jne (bad) mov stc ja mov and mov xchg iret push mov xchg (bad) pop dec sub fstpl psubw repz adc mov and mov xor js dec push cmp loope mov pop add jnp (bad) cmp xor movsb sub fist scas lds push push out inc incl jns shll gs push test out bnd test ficomp push mov inc push add push mov (bad) add inc mov ds mov daa ret sub and in leave sahf xchg fbstp cmpsl mov and jnp pop aam mov push mov mov out leavew fsts in adc test pmaxub mov out out jp ret sub repnz imul mov jne call les push (bad) mov cmp not in leave xor sbb lods add les (bad) dec cmp fcoms push jnp cmpsl pop dec in fbld in xlat mov jl pop cwtl adc jmp pop xchg and lods ffreep jl cmp mov jbe,pt xchg sbb xchg mov les repnz je pop fldenv enter sbb cmp out fwait test jae push cmp push aad push clc arpl mov imulb popf repnz into fwait sbb cmp xchg dec jno add jnp inc lea lods mov jle icebp fs pop pusha lahf xor and sti ljmp pop shrb fbstp sbb iret push shll adc cmp mov sbbl sbb and divb jecxz wbinvd push or test in and pop movsb inc enter cwtl lret adc movsl cltd mov sbb movsb add mov mov scas xchg repnz lods testb push mov test add pop mov sbb int3 mov jg pop mov push inc icebp je add cmpsl push push (bad) xchg mov aad add mov in imul inc xorl cmp cli lahf or aas push int3 out (bad) mov movsl jbe cli mov cmp and test or daa fbld cmpsb test and xchg mov lcall mov icebp dec lret decl dec push iret pop ret clc sbb negl cltd out mov fld jmp sub jb out insl std cmp add iret in xchg pop cmp cli mov js movsb pop stos mov scas repz ret push not subl iret push mov mov dec pop pop xchg xlat xchg mov pop popa das inc xchg jp mov xor adc inc xchg stc ret ss test jl dec lcall loope lahf imul inc fwait jp jns mov mov inc mov pushl push cmc sbb in cltd cli in in mov mov jge pusha dec test in push insb gs mov ljmp addl cmp jns push mov push dec jo and push cli pop xchg mov sub inc pop bnd in es pop cmp bnd lea mov scas das add out popa push add outsl clc mov data16 fs gs jge cltd lock xchg (bad) out add or loopne insl and xor (bad) xor loope xchg out xor jb mov pop or jns leave iret sbb cmp cmp fwait or (bad) mov scas mov inc cmp rclb idiv arpl mov adc into mov cltd data16 inc popa rorb sar xchg pop ja cwtl dec data16 adc ficomp sbb lret or or xchg loopne aaa sbb or sbb inc es fisub dec enter or mov and adc and shrl cmp sbb push inc xchg jecxz push (bad) js and push or fstpt jo adc test out andl pop inc aaa pop cmp pop shl push in fistl cmp inc (bad) pop xor sub dec jp push sar movsb sub or mov mov in aam in out andl sub add cmpsl push sub jno jbe inc dec push inc es inc mov xchg mov das mov jae loopne push fsubl xor inc inc cmpsb (bad) sti lcall cwtl and outsb mov les dec neg push outsl pop ret (bad) mov hlt cwtl add add cmp or xchg sbbl bnd outsl pop int pop jecxz ret cmp je int3 xchg lods or mov scas pop popf add and mov inc pushf pop dec lahf push into push mov scas jbe imul insb lds cmp push mov bnd and mov pop and pop mov xchg lds jecxz sub inc fdivs mov aam cmpsb stc aad jecxz pop std mov xchg stc lock call mov cli pop les into hlt mov push pop nop cmp inc sahf outsb das arpl pop push jno dec cmp cmp clc lock outsl test mov add jle inc lahf pop fcmovb int call push mov (bad) lret mov std push ljmp push cmpsl into cld bound jp loopne push scas mov clc in (bad) js dec inc jne addb and jge and lahf stc adc pop lret jne jo push inc cmp mov mov test ja dec arpl cltd inc sbb jmp xchg lds dec push push lds dec adc xor repz inc or sub pop inc cmp mov nop xor cld pop pop scas mov xor (bad) fstpl aaa xchg add sbb jae or or xor sub xchg mov movsl xlat and cwtl repz shrb mov pop or dec pop and test push xor sub pop cli enter push adc or add mov xor push push cmp test jge cmc clc add dec mov sub mov mov in icebp adc jmp lret ficoml pop inc mov and lods cwtl (bad) mov sub into jge xchg inc jmp sti mov test sbb movsl shrl dec add jbe lret pushf cmp cmc mov fisttpll xchg in lea arpl fwait mov cltd loop mov jae (bad) loope add je cmpsb push shrl mov insl mov push js rcll push cmp and sub pop pop pop pop sbb fildl dec inc sbb popa insb mov xchg xchg jl (bad) adc hlt jecxz aaa out add lods push pop pop mov addr16 push sub lods (bad) adc push sahf sbb jb dec (bad) hlt pop or lds sub jg mov in pavgw (bad) jmp repnz mov add out insb mov mov push lock cmpb (bad) dec out pop adc mov fnstsw lds aad mov mov fwait sbb jle addl fild lahf repnz outsl mov fcom mov shrl (bad) xlat call inc testl push pushf out add out je add pop add gs xor lahf mov cmpsl stc or sahf int push dec scas enter jns pop inc mov xchg cmp nop test loopne inc out fistpl movsl jecxz jp lcall jecxz mov mov sub inc sub or arpl fwait mov push dec sub jnp stos rcrl pop data16 mov pop ja xor lret jmp insb das sbb cltd mov imul and pop test jnp test pop lret push popf loope cmpsl add pop jne dec pop cmc inc cmp inc xchg mov gs int es or dec loope or rolb mov pop mov cmc mov xchg sub inc stc mov iret push dec jb (bad) test or mov lods pusha jo and std pop hlt loopne pop loope aad adc pop xchg mov add inc xchg push add insl cwtl lods insl pop sub push ret push cmp mov push dec int xor lods mov jnp jmp dec popf push inc insb sbb push mov fcomp (bad) insl fwait ret cmp aam imul dec es (bad) repnz adc pop sub nop pop fisub push lods leave sub pop inc fstl pop mov push mov ja jp mov xor decl jmp jns fs mov add cs push popl cld sub mov fisttp adc mov dec lcall mov pop mov mov jae fsubl imul cmp addr16 repz xchg in hlt data16 jns xchg add or add clc dec fucompp pop push xor push or jns mov mov adc addr16 mov inc insb cmpsb cmp sarl das cltd cli dec stc mov test mov nop push xchg je mov and jl and add push ficoml imul mov and pop (bad) mov cmp nop loope out jecxz cmp fsubrs cmpsl iret push lcall mov sbb inc jns shr (bad) jo nop repnz inc fmuls in pushf push sbb push cmp insb pop mov lret call rcr mov or pop cmp fmuls jae (bad) ljmp mov dec das and orb lds fisubrl push ss and (bad) cmc pop (bad) mov mov lcall inc iret sahf cmp mov iret sahf cmp mov iret (bad) ja add pop and ljmp add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push push adc mov jmp xchg out dec jmp adc push movsl dec sbb mov xchg sbb (bad) out pop (bad) loope test mov cs daa test push aas js frstor addr16 mov add lea cmp out out mov push adc roll lret fs pop dec out fcompl jns adc sahf inc xchg push icebp call pop jle inc or sbb pop xlat (bad) dec mov (bad) lcall (bad) insb sarl or mov rclb mov jmp std and (bad) aaa pop outsl fucom xchg (bad) pop pop lds pop nop arpl das fiadd add and mov jecxz inc jns sarb pop xorl and mov (bad) mov mov xchg xor lahf jmp push push mov cmp int3 xchg enter inc movsl lret into (bad) or inc test outsb lods (bad) fcmovnb les xor push jo scas inc jle xchg jle fsubrl inc fcompl (bad) mov hlt test ror (bad) out jns sub cltd cld pop notl ds or dec xor decb fisub mov jo jns dec sbb sti std inc popf (bad) and mov movsl testl jmp adcl movsl dec mov xchg outsl ljmp jg xchg mov jecxz add clc adc das fisttpll or dec xchg insl cld scas inc aaa dec dec jnp xchg adc xor xorl sbb andl mov sar sub xlat jne xor jg cld inc mov movsb fdivs dec or inc imul ficoml gs and mov lahf mov incl scas pop (bad) sbb outsb popf jbe inc and mov stos mov in insl mov xchg ja in jl mov cmp pop jle mov (bad) stc push cmpsb cmp cmp pop push sub mov inc or inc gs inc fidivl add (bad) mov pop xor lret dec xchg add jns dec pop ds (bad) popa arpl mov shrl jb xchg push xchg cmpsl adc ja (bad) aas divl or xchg adc xchg arpl or je push repz (bad) leave das xchg ret mov mov mov pop (bad) and push mov les imul es addr16 jge push sbb adc stos loopne int jmp repnz cs sti cmp cmc lods inc (bad) xlat xor xor (bad) daa mov aas fs cmp dec (bad) lock mov icebp cli pop test int stos or gs push into add sbb jns cmpsl std jne mov push enter mov loopne test cmp out pop imul dec clc sbb ret jne imul pop lret (bad) into iret inc mov xchg pcmpeqw sbb jmp into push outsb jge pusha adc dec fidivl js jmp pop es or xor cmp (bad) jae inc test mov sbb jae (bad) cltd xlat or sub mov pop xchg cmpsb aas (bad) int cmpsl dec arpl jne mov add push cmpsl rcll mov ret loop adc (bad) mov sub mov test mov mov push cmp jecxz sub push out jbe push test cmp mov sbb rolb addr16 nop mov sahf mov pop jae pop test int dec je push push mov mov imul and imul test jecxz ds push push adc sub popa mov mov test aas cmpsl int sub (bad) mov arpl push cli jle push ljmp rorl clc imul in sar fwait ret pop adc nop mov hlt push jo push cwtl scas negb out inc je or inc adc stos mov xor inc sub push mov (bad) adc ss addl sahf cmc pop mov in add fldcw or imul and pop in icebp mov mov mov cmp xchg mov pop loop jno mov xchg add frstor das mov das mov loope fstpt push push cltd ljmp push rorb in js mov sbb inc pop stos add pop das insb xchg ja inc fbld (bad) dec mov and into or inc lock ud1 cld add or fisubl inc adcb es rcll cwtl xor stc int3 data16 scas test outsb imul std push out inc (bad) jecxz mov jmp jns xchg jg popf cld lret sti imul ja lahf jge mov and xchg mov dec add lcall lock cmpsl imull mov loope stc sbb dec sbb int3 aas data16 mov int3 sti and mov sarb out xchg jne xchg (bad) rolb add inc sub adc add push mov dec jnp sub pop and jle fsubs pusha xor pop pop cltd jo xchg testl adc sbb and xchg sbbl dec adc mov pop dec outsl mov adc pop in imul mov bound (bad) sbb mov data16 xor xchg les scas addr16 das xchg and sbb and lret xchg hlt sub mov fwait sbb es ficom jb push lahf (bad) dec cmc imul fidivl mov test jmp sub push lret xor pop mov mov loope xchg xchg and adc dec call mov divl (bad) pshufw or dec sbb je ss sub lea cli lret es push inc das stc jnp add fildll jecxz pop push xor mov je outsl inc (bad) jg pop or nop dec bound push xchg dec adc and xor aas (bad) mov bound dec movsb add pop sahf or repnz es push hlt inc in dec push adc or jne nop in and gs inc xor psubd loope or (bad) cli jnp mov (bad) (bad) push aam adc imull inc cld jns mov pop sub les cwtl cwtl shr mov cmp jl icebp mov mov or gs mov jo xor mov pop push dec and shlb cli outsb movsl ficompl fsubrs adc inc dec mov push nop push clc fadds xchg les dec test sbb xchg dec cmc pop mov add pop dec das push adc pop test orl inc push popf testl sti fld mov lock xor mov imul loope movsb mov repnz dec sub iret shll out movsb pop sahf lods popf inc xor popa mov into mov daa fildll or into jmp jle int3 iret aam out inc adc pop and lahf scas sahf test mov pop sub loope repz pusha cmpsb and add ja sub cmc jg fdivl addr16 mov (bad) aaa xor pop xor dec or pop dec les add inc dec cmp pop jl fnstcw mov aas mov sti jns aad arpl sub (bad) dec dec int3 fsubs mov mov stos adc pop mov push xor push dec mov ja sbb loope xchg adc hlt xchg cmp push sub jo insl cwtl or add out add sbb movsl dec fucomp jle pop jecxz ret es pop push inc sub mov add lea or jmp xchg pop dec nop push mov xchg jmp stc ljmp popl out push (bad) cmc sub and cwtl rcl test lods call popf outsb mov lods add pushf adcl xchg mov cs imul xchg mov xor addb outsl cmp lret cmp std fwait pop stos add mov pop mov loop cmp fiaddl sahf test pop cltd or inc or cmp stc mulb int sbb in (bad) xchg pop movsb jmp (bad) rcll loop inc mov andb sarb xor jb int3 or stos test and into repz push mov add xchg in jb das into cmp push mov mov cli adc pop cmc add dec dec jp sbb movsb sbb xor addr16 mov sti jl jge js push pmuludq xchg fisttpl sub or aad pop sbb cwtl dec sub jne into jecxz push (bad) mull loope pushf out cmp fidiv popa scas xor adc push xor (bad) push mov adc cmp mov sub ja dec in sbb sahf jns mov pop repz jecxz or lods jne outsb int3 jp mov mov xchg sub jg aam cwtl ret xchg les mov addr16 in jle mov and dec mov sub (bad) push in test mov cmp add mov cmpb mov cmp xlat push arpl xor xor fildll daa and mov jecxz pop ret jne or (bad) jp dec cmp pop icebp push jle,pn push mov mov adc inc iret mov xor mov into sub mov fisubrl ds scas movsb (bad) sbb jnp xor shr xor fidivr ljmp lret dec dec pop lock jmp (bad) aad cld fcompl faddl repz cmpsl and movsl lea or jmp test or pop scas cltd arpl (bad) lods xchg dec stos movsl icebp sub leave xor lret cmp cmp sbb mov xor out stos inc inc (bad) mov aad sti test or ret mov dec jno test repz lock rcll jb push ds xlat in loopne cmpl mov sub push pop std jmp cmp cltd mov and or (bad) fs jns (bad) sbb xchg ror sbb jbe icebp (bad) cmpsl out pop test push pusha fadds jo sbb cmp outsb xor pop inc (bad) ljmp imul inc adc cmp imul jne dec scas sahf mov insl xchg jbe jne testl mov jae xchg aas mov push jmp (bad) or ss test pusha xchg mov push test test push into sub popl stc pusha mov cmp mov out pop in cwtl and movsb add jp cmp insl xchg or jg aam inc mov mov pusha out (bad) lret (bad) (bad) pop mov inc push mov ja adc and int3 sbb push pop test inc xchg loopne shlb pop cmpsl in in and mov lret repnz cmpsb inc in pop inc loopne lods push sub jle push insb mov hlt sbb (bad) mov outsb (bad) lock aam fsubp lea cmc pop rclb xchg aaa mov mov mulb inc fstl aas push xchg popf mov mov pop jge call clc jl push sbb pop stc in gs outsl mov dec xor test dec lcall popa mov frstor inc jne shlb out das inc imul fmulp add sbb mov inc cmpsl cmp sbb xchg sub andl xor and leave and ss out jns aas (bad) jg sahf (bad) gs jmp lcall mov adc nop cmpsl (bad) pop mulb movsl lret xchg adc fcompl adc mov sub sub sub subb pushf sub mov orl push xor push notl rcll sub push and xor xchg lahf addl fisubl inc mov mov (bad) arpl repz adc std in and std (bad) or inc fdivs xor ljmp cmpsb cmp adc sub test cmp and adc rcr ucomiss mov xchg iret mov inc adc adc mov in push nop roll arpl lret cltd iret (bad) jecxz inc push xor lcall dec call idivb loop add insl popl or lcall xchg sub cmc push push lahf mov add push jno aad les lods pop (bad) test in cmp adc sbb rolb xlat popf xor cltd inc push sub pop lock (bad) lods push jge,pn mov notl mov adc fistp and mov fst jae in andl push and cmp dec (bad) mov add int push fs add jns cmp pop mov or int das jp xor pop cmpsb jg data16 insb jl or mov daa mov cmpsb add in inc cmp not (bad) push sbb ret add cmp (bad) push into mov push lahf jle popf jne mov mov outsb into jg (bad) dec and sub ds in mov insl dec movsb xor sbb mov call arpl xchg xchg dec sbb or adc sar dec (bad) clc push mov into cmp sarb adc sti and sbb aad insl push (bad) pop fisubrl out mov (bad) hlt flds push xor es adc mov and jne ljmp mov mov mov or mov sub cmp stos andl sub andb lock jbe dec (bad) sbb xchg ficompl out inc push cli push imul xlat cmp leave es mov mov pop jne mov dec loope rolb jecxz cmp fnstenv mov pop jge daa fmulp cmpsl lods push scas dec jae test test mov or (bad) stc jle imul jne jle icebp cmp mov mov inc lods mov inc ja or adc mov idivl add cmp test xchg iret sbb xlat jp and jle popf mov jmp cmp jge not push shlb loope das movsb inc leave pusha fcomps fldl loope pushf and in adcl (bad) test gs inc mov pop add xor cli push scas fsub push mov mov sbb mov sbb ret fmull ret int3 rcl shll dec call clc (bad) sbb (bad) xor push jb nop imul ljmp outsl fidivr aaa outsl fidivr sub sar add dec ds dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoms add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas faddl add loopne fmuls lahf sahf mov sbb mov push daa (bad) hlt les shll (bad) xor dec ja xor bnd hlt sti jnp scas icebp jp movb inc inc sarb out (bad) inc jl cmpsb and dec add mov push popf clc sar je sub pop aaa jns fistp stos pop stos mov xor aam or in and mov and shl mov sar sub xchg ljmp lahf es sarl adc int3 pop adc jbe dec lock mov dec inc notl and push push daa dec (bad) in push fwait pusha mov dec test sbb push xor popf jmp inc lret in xchg pop push sahf hlt jmp imul dec xor rcrl pop imul xchg sahf inc lret out movsl fcmove ret lahf cli mov sbb pop scas pop mov iret jle cmovl stos sti xchg stos jno push dec mov in mov fstl push pusha fsubs dec fwait stc sub mov lcall or es cmp sti pop mov pop xchg lock xchg dec out rcrb add stos jne mov jno xor dec xchg inc inc or xchg call push std enter pusha leave sbb and adc mov pop decl rcl std sub addr16 cs mov pop mov pushf mov cltd mov mov cmc imul jo in sub add fcoms cmpsl ds lcall (bad) cmp push adcl mov add adcl jmp stc movsb fs (bad) (bad) xor ret cwtl or jp or repnz aad hlt nop dec stos jg mov aam and mov test aam xchg add push aad leave sbb stos cmc in lahf push mov mov (bad) push test jbe pop mov stos inc mov and sub inc cltd cld jns adc or lods imul jnp dec clc fcoms and fucom std jmp mov cltd ljmp push mov enter (bad) sbb pop mov push ret push outsb push push fbld call pop fisttp (bad) sub xchg imul fbstp outsb test ret cmp mov fnsave lods mov cld fcompl jne or xor test sarb xchg adc scas mov sbb mov divl enter repz adc loopne sbb and sub xchg or mov add inc (bad) ds xchg mov sbb shr ds or mov into lcall int3 rol fs lods das fadds rcr (bad) xor mov ds shlb cmp loopne push pop pop icebp jl imul mov push insb cli (bad) mov sbb or mov cmc mov inc sbb inc push fistl pop data16 jl imul pop cld in sbb sbb jae jge mov push insl scas jno or lock data16 and (bad) xor outsb push jnp popa and call dec xchg std int3 fsubl fisttpll ret pop mov cmp jns (bad) inc cmp cmp pop rorl push (bad) insb fnsave daa cwtl sub mov adc xchg cmp pop mul adc dec les stc adc insb ja loopne mov or dec fisttpll mov lret in test movsb cld mov les (bad) addr16 popf adc jg mov pop mov in mov sub pop xor mov cmp in sub scas dec inc test out jecxz cli mov dec mov sbb loope push xchg les outsb (bad) std rolb jl mov adc aas imul shrb arpl add push mov jns cmp mov pop sub (bad) cmc (bad) outsb mov pop lahf sahf sbb aad fnstsw cmp mov fwait pop andl sahf lret push int3 xchg push paddw orb xchg loop (bad) insl repnz test mov gs fistpll jbe adc mov cmp pop pand or ljmp in aas call jno movsb push sub imul enter pusha cmp in pop mov mov and fdivrs mov jno in inc popa xor and and dec ljmp mov dec je jns inc cmp (bad) push jle out mov shrb xor jl push inc adc div or (bad) or pop pop jl pop mov ljmp test enter xchg das int mov push jno push (bad) xchg cmp sbb test insb inc dec idivl dec dec dec ficom or add push shll or iret pushf mov add dec imul data16 push icebp and mov mov pop int (bad) jbe scas add int dec xchg paddq test sbb jb or mov dec pop mov cmpsl ljmp or mov repnz jne push jne dec aam mov jb xor fnstsw aad (bad) in ds lret mov ret fwait mov fidivr dec mov xor outsl mov dec pop pusha push aad sub push out dec cmp sbb scas push pop sub mov xchg or sahf jbe rcrl push insl out push pop xchg add mov jb inc sub xor test mov (bad) bound and sti lods jbe sbb cli mov cmpsb outsb xchg sbb jge xchg mov imul cmc jp add cs push loope stc pop pop les mov out fsubp cmp es in jnp or js or sbb jg sub pop fwait mov jae cmpsb leave ljmp cmp lret int jmp push repz adcl ffree call and lock insb adc ret lcall xchg sbb fildll jne imul push add stos inc cmp inc add sti repz sbb lahf and (bad) std in out sub xor push (bad) mov popf leave call xchg aaa push push aas insb (bad) jbe lcall lock dec lret sub jnp cmp and xchg imul sarb notl push ljmp test jno cli lcall data16 mov mov js and js insl sbb sbb cld mov add iret or mov iret sar arpl xchg rcr dec stc idivl lcall inc jbe outsl ret sti imul jl inc or dec in fwait (bad) mov insb push cmp fwait rol push and in lret or sub inc inc and les xchg pop (bad) cmp pop cmp xchg ljmp or mov cmpb mov dec inc jmp dec pop jl mov mov aam inc iret mov inc jecxz xor fiadd loop sub sub sbb sbb sahf out insb xor push mov lock rcl mov and adc stos repnz ljmp div or inc out lret pop mov clc lods insb xor pop mov lods fwait pop inc xchg pop sub push stc aad cmp (bad) les cltd in lods jo dec enter scas xor pop jecxz stos out mov lds and pop in or sub xorl lds inc sti lea stos negb jns es jns mov xor xchg aas stc jl mov icebp (bad) pop xor fdivr into jmp sbb cld std leave cwtl sbb mov pop push das clc jmp add xchg add jmp mov test sbb cs sub adc jns test push cmpsl lods xchg dec pop mov mov jl mov orb es inc das (bad) sti test pop (bad) shrb lret and rol or loop out jne jo movsb lea insb data16 shr mov pushl xchg push adcl pop divb lret jne and mov ffreep and in hlt jg insb stos sbb mov and pop fcomps pop into aaa xor pop cs bound push xchg test jmp std movsb loopne push mov outsw sbb pop lcall or js fucomip pshufw cld mov cmp bnd fisttp out dec dec rep xchg mov sti inc and xlat into or sarl aaa cmp imul sarl aad gs mov out aam fnstsw adc push cmp fwait clc (bad) out int3 mov mov lods and loope add push sub dec jbe pushf sbb cli sbb and arpl nop out cwtl out repz out mov pop cmp je sar pop stos lret mov rcl aaa mov add out sti inc sub loopne ss xor and sbb sub cmp inc jmp dec mov dec inc aaa dec mov (bad) hlt lret mov dec or sbb pop arpl (bad) hlt add push cmp jnp popa cwtl jbe fstps dec int jbe mov xchg loop test test cmp lock inc aam dec insl lds pop mov cmc aad cs xchg mov sub mov fisttpl add ja xlat lea leave or aaa jge lret pop sub notl pop out in test dec push (bad) mov sub loop xor lds pusha xor xor mov dec sub pop xor mov addr16 sbb repnz (bad) call push popa lret pop popf jg test cwtl jge shl lds je icebp xchg xor inc ss outsb nopl dec xchg pavgw cmp stc test (bad) rorb stos pop mov mov ds loopne mov jnp or shrl push fisubrl shrb lds lea data16 jmp xchg lahf push test decb mov dec or movzbl add das mov push xor sub dec and pop ret or (bad) sbb inc test mov cld scas enter sbb add push stc push in mov and cmp dec xor loop sbb dec dec pop push pushf mov inc out adc push and sbb jge mov sub popa jle sbb dec cli std repnz nop push div xchg (bad) mov pop test lret xchg out fdiv fdivr cs out out loop push arpl das xor adc mov daa pushf adc jnp lcall mov loop rorl pushf loopne jb mov mov pushf sahf test adc aaa xor mov jp pop into mov adc shlb in rolb push xorl and sub mov popl fldenv rdtsc mov mov ss in les sbbl dec lods mov and (bad) stc in out ret jmp fucomp pusha sahf out sahf leave neg repnz aad gs test xor (bad) ss mov pop js jb add pminub xchg mov call jne mov lea jmp jl and dec repz movsb xor xchg into inc adc push xor mov cltd sub jge rcr int3 rcr mov imul (bad) in iret pop imull icebp icebp pop jge jmp in ss mov lods loop jbe out test insb std fwait into jge or mov dec inc cmp pushf fnstsw pushf roll add dec (bad) or in cwtl test mov dec aad push fldt mov mov or dec push sahf call movsl in adc cmp fistp mov dec cmp cmpsl dec xchg mov xchg xor push (bad) push movsb test movsl sarl fucomi cmp pop jle mov cmp stc jnp mov sahf gs mov pop sub fistp mov pop imul and cltd repz int movsl xchg mov cmpsb push andl jecxz cld mov jp ror orb adc dec xor out pushf adc (bad) hlt adc sti mov jmp or fsts xor adc stc or cmp fstpl divb jge dec jl out dec out leave test jge bound sbb or into fucom push push cmp sbb rcrl fdivr xchg dec cli mov mov imul xchg mov cmp push cmp inc add adc stc cld jno sub sub in test or and loope mov adc ss aad or mov scas mov int mov cld pop push ret imul inc dec pop pop adc jp adc add cmp (bad) adc or stos push shr xchg and (bad) aam mov mov mov rclb inc cli aam cmp fistpll cli mov and lret push jo push call dec pop jo test (bad) or cmp mov mov loope pop inc mov pusha add faddl xchg fisubrl outsl jmp addr16 cs jecxz inc xor rcr cli mov mov push insl xor cmp mov int es daa fiaddl push mov lret dec pop cmp push push ret test jle push mov inc sti push pushf out fmul imul mov psubsw scas sbb test pusha pop mov pop scas xor adc popf inc popl (bad) std (bad) sub arpl rcl push decb add aad mov out loopne mov xor cmpsl mov jecxz lods sbbb pop mov push xor arpl xchg setne outsl sub leave xchg out iret sub cli pop mov sub mov movsl push adc hlt fcoml dec cwtl push cmp jmp fisttpl mov jns loop cli (bad) xchg xor dec sub inc shlb jp call push cmp mov pop inc lsl sub adc add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fsts add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push and ret (bad) icebp arpl jno sbb cltd ds lcall sahf lcall mov cwtl mov push mov jl aas add jle repnz push mov lock cmp lret jnp or cmp sub pop inc test add fsubrl cmp ljmp das sti mov mov push inc ja js xchg lods ja out orl pop jg pop lods xchg sub jl dec lods mov je add jb adc jbe xchg imul enter and jp add (bad) or leave sub insb cs fistpll or fs lods or das push cmp push pop add enter pop lret (bad) push mov xor shlb rorl pusha push sahf lods mov imul jb scas sub out xor xchg push scas adc out lret sbb push push sbb mov sub (bad) iret sarb flds xchg adc jno cld dec pusha fsub hlt xchg aad (bad) lods add xorl and inc pop mov les test fs jmp gs ljmp sbb sbb fyl2x and daa push push pop orl dec arpl adc ljmp fsubl int3 add jbe mov push negb xor mov fcompl mov (bad) bound rcr movsb add inc jecxz in mov mov enter in sub arpl mov mov ds inc inc inc (bad) adc jge iret lret xchg into ja (bad) rep inc jns push adc inc pop dec dec nop dec xchg loope pop leave in jbe stos xor notb dec mov jae xor out push xor andb ja insb lods mov or in outsb mov jge cmpsw nop (bad) ljmp pop lret mov (bad) mov mov adc test in aas ljmp lods hlt add lock fbld (bad) lock (bad) sub add dec dec sub stc les mov outsb dec mov dec nop push aas inc je jle daa test mov cmp or popa adc cmpsb test dec mov sub mov cmp arpl lret mov pop leave (bad) test test lahf sbb adc dec fnstsw jno push nop (bad) (bad) icebp xchg mov pop and je ss cmp sahf fmulp push and aad mov stos test lea test scas sarl scas inc cwtl addr16 push cltd ss insb pop cwtl cmp sub sahf push movsb jns and push movsb mov cmp in (bad) lds or cwtl adc and repz jne mov mov inc lret ljmp lret mov stos sbb sub popf jge rcrb shl lret dec shrl pop ret lods and jl outsl lahf adc xchg inc jg arpl and arpl lods sub repnz imul fndisi(8087 pop into dec cli daa ljmp mov in ljmp mov lahf push rcrb and xor gs sarl in dec xor add pop aas fsubrp and leave lods insb push test fcomps negb (bad) movsb jns es arpl jp inc pushf fsubrs ret int std cwtl aad icebp mov out xor and pusha pushf dec xor idivl adc mov lds or imul insl jne insb push aaa lock push cmpsb and or gs imul dec sbb (bad) mov imul dec xor push push jp adc add push inc loopne int3 jmp inc cmp pop scas jg fisubl lahf xchg xor dec jge (bad) push mov pop fisttpll inc add inc lret and iret pusha xor scas (bad) adc mul push mov or ja test push mov fcomps push xlat inc (bad) mov mov cmpl add fdivrs or lock daa mov les xchg out divl xchg adc mov into push cmp lods arpl frstor jle loope adc fsubr add xchg scas xor add add stos in mov loope popf loope lods out jb lcall (bad) out das arpl dec es test cmp add lcall sub ret fcoml adc repz pusha stc loopne mov andl out repz or pop je or and inc inc mov sub (bad) outsl mov outsb stos test aas push mov inc lret xchg pop dec jne arpl jmp push jae push aas mov les ja ss loopne add inc mov push ret (bad) xchg pushf mov shll xchg and push xchg mov js ja adc movsl (bad) cmp cmpsb mov inc mov xchg out aaa hlt lahf imul sahf xor dec cld jnp push jg outsl push addl lods data16 xor and adc and dec jno mov push enter cmp or int fimul in mov xchg xchg mov addr16 pop sti fcomp adc cmpsb (bad) mov or dec imul sbb (bad) cmp mov (bad) lock jno dec int rcrb xchg or insb mov ss sub (bad) lods xor mov sub mov out pushf jnp or faddl repnz nop arpl jb lret (bad) jbe xchg jno jo into inc xchg js inc (bad) push or sbb insb mov xchg add ret jmp or loopne add clc xor push jecxz ja dec mov (bad) fdivs dec push jp fs in insl (bad) jae add pop sbb or or test and push test sub mov xor xchg sub sbb repnz andl mov (bad) repz movsl mov and movsl mov shrb push je push pop mov push mov mov push dec pop arpl (bad) pop out jmp jno jns fstl mov mov mov and mov cwtl inc mov pop in inc add stos inc push add mov pop xchg sti mov and and dec jge aad mov mov and mov decl mov (bad) in cwtl fldcw (bad) and sbb cmpsl jns mov stos call jb clc jne stc jbe pop aas popa add sub mov push test fadds ss xchg or jle xor rorb sbb xor mov int3 cmp leave cwtl jl inc mov xchg aad adc in cmp jg sbb pop jp sar inc and mov add fisub mov pop popf andl repz push data16 push je ror movsb push mov adc int3 pop repz fidivl adc cmp (bad) jno cmp scas cltd mov repz les adc fdivrl pop hlt pop adc (bad) mov xor iret std jg dec out push in mov out xor mov (bad) fcoms shlb mov dec push in jnp jno iret mov mov movsb xor lods mov popf daa push lret mov dec out mov push bsr icebp lret sbb mov inc ss xchg test inc ja sub xor inc xor push sub into aam xchg fsub (bad) (bad) sub test inc sahf pop cmp mov fisttpll gs mov push dec movsl gs subl bts imul cmpsl iret or (bad) and dec jle notl popa ret es jb sub andb (bad) hlt jb outsb sub cmp push sub mov xchg data16 adc fdiv cmp mov mov cmp or (bad) jg lock (bad) ljmp movsl xor ljmp (bad) shr cs xchg lret js arpl push shrb stos push jns xor testb cmpsb xchg fistpl jne sbb inc push push and aas push cmc xor mov out pop and aaa test (bad) ss push mov out push mov inc adc test cmp mov and pushf rcrl sbb lds loop loope xor iret fprem mov stos arpl or jle mov int ret in add and pop sub mov (bad) (bad) mov into adc std mov mov sti cmpsl scas testl pause mov mov mov fsubl sti out jno aaa negb xor xchg xor jge pop mov jle xchg in mov movsb or lods imul xchg mov sti xor cmp push pop xor mov xchg and insb aaa call into mov dec push mov jecxz mov push sbb push repz xchg fs (bad) cmc and xchg cs fnop push std and cmp das push mov fdivs cmp aas insl adcl push in data16 shrb dec fldenv (bad) pushf inc add movsl sub (bad) cmp jno push imul andb stos test sbb (bad) lcall inc lret lock gs divb int3 into lock jbe dec les cmp insb cmp cmpsb add mov test out xor in xchg fs mov jo pop pop push adc je and out bound roll add fildll mov loop (bad) xor or or inc leave dec repnz fiaddl hlt jbe adc movsl decb mov mov pop (bad) jo lcall jg lahf or push mov sub dec sarl jl pop call aaa push or push adc rcr inc xor pop add jnp into adc (bad) pop mov aaa jg push dec xchg add test add and lea cmpsb adc cmc (bad) mov add push push (bad) push push les add into addr16 sti xor aaa jge in fisttpl (bad) mov in hlt xchg scas pop or push sub add sub in in adc mov mov fild adcl dec dec xor aad lds sub or xor subl mov adc out lea push dec hlt sbb in addr16 mov cwtl insl dec push lret xchg mov and divb fbstp cmp xchg loopne inc add divb clc xor fildll sbb sub push out stos inc ljmp push fsubrl aaa sub jne int lea es fcomps xor pop and mov scas in (bad) sbb or aas insl pop enter dec jae xor gs lods jle push shrl xor insb dec mov mov push push lret inc mov push jmp cmp ljmp mov dec lock pop mov xor pushf add jns jae dec jmp inc pop or sbb cmp hlt test jecxz xor (bad) pop (bad) jb adc outsb aam cmp xchg jae repnz mov aad jns into mul out xchg mov inc lret mov mov daa pop mov std push inc jmp (bad) push lret sub cmpsl inc movsl or (bad) in aaa cs ffree ret cmp frstor mov daa fstpl dec push jno mulb sub xchg jmp enter xchg inc mov jnp push xor mov lods fwait mov mov shl or mov (bad) xor std (bad) adcb push mov icebp pop xor sbb mov jecxz add cltd pop push jno hlt cmpsb mov arpl adc bnd inc ds xor jae fisubr inc fsubr negl scas jge (bad) fsubrl pop pusha ja push cmp adc scas inc cmp xor lock aas fisttp mov mov aaa xor in in adc mov jg inc adc xchg jne rcr xor ljmp mov pop ficomp pop pop mov (bad) mov pop or loop shlb sarl push sbb cmp jmp sub lcall in mov and push pop (bad) mov xchg adc adc xor mov icebp imul test cwtl adc hlt mov jns pcmpgtd mov push dec repnz mov xorl jecxz (bad) push aaa stos and clc inc adc jge js jns clc test in aaa dec sbb pop jno xlat pop cmp inc cli sarb cmp cmp gs sbb lret cmp xor adc add enter mov push or in dec call pop insl std imul mov inc clc dec mov sbb not xor (bad) sti cmp or (bad) xor repnz jno insb push jmp rorl jae out ds scas sub dec cmc adc jecxz sahf out and lock dec addb sub das mov jecxz sbb dec out lret movsb and scas mov sub add repz shr cltd and rolb cmp cmp mov lods (bad) fldl and loopne cmpsb test mov jne fsubrs (bad) push loope cmp push mov adc jecxz xor or stc gs lahf or mov jns jb adc add popa xor rcrb sub (bad) imul jno push and lods iret icebp es mov xor push out mov mov icebp (bad) aad xchg enter or imul das test js movsb dec jo cltd push xor into mov scas jns imul cmp push lret or inc pop xchg or and shrb int add push cld fs dec xchg cmp (bad) out jl (bad) fistl and cmp rcl jno cld adc xchg xchg flds cwtl or dec mov cltd in push cli mov push popa xor pushl cmp addl push cmp lock addl push cmp incl add pop rorb lods jmp dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fistl add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop adc and or rcr sub mov in inc inc sbb xor sbb and mov outsl sbb pop icebp cmp or jg mull int mov jns (bad) repz movsb (bad) adc sbb insl lcall bound mov mov add lods push bswap je addr16 mov mov lock imull jecxz in sub cwtl not aaa and dec pushf das jle lahf dec (bad) mov (bad) sub cmc cmc cli gs pop jle push sahf lock fs pusha dec cwtl test sbb dec ds mov aad or (bad) sub js push inc push test xlat pop inc xor lcall ds insb sbb shlb scas push into stos adc sbb mov out aas lock int3 lea push daa sub mov ficomp arpl ja rorb repnz rolb jne inc das out (bad) test xchg or adc mov sub inc mov cwtl (bad) cmp jns mov outsb push or dec js sarb mov ljmp pop enter push stos cmp dec sub cld mov cltd js dec dec ror and pusha mov jge insl mov (bad) mov data16 stos lcall inc add lea in addr16 mov mov xor xorb adc pop pop out mov aad outsb mov sbb mov lea jnp adc (bad) mov mov mov repnz out ds sub mov loop jp ds pop popf pop sbb fcompl or ret mov mov addr16 cmp (bad) jns jne test pop sub jns xor mov dec out bound and (bad) (bad) mov aaa daa js push test xor jge test clc loope mov cmp cmp mov icebp mov fdiv add mov xchg dec cmp xchg hlt dec inc adc pop cmp (bad) jbe loope inc out cs mov push leave lds pop sarl sub lret test cmp adc or call sti jle int3 outsl or dec daa in out fwait add push inc add icebp (bad) dec lock scas and (bad) jl popf jp ret sub test mov movsb xchg push sub hlt icebp mov data16 push sbb mov push or mov pop inc push cwtl pop pop xlat push and repnz outsl lods lret mov sub imul pop mov mov lret ljmp scas and push fmuls pop mov sbb mov mov ja push addl mov adc xchg lret clc add inc sub adc jno dec dec mov push mov call xchg aam rcrl enter (bad) pusha cmp rorl arpl aas ljmp popa in scas and mov and lea test xchg pop clc push call inc pop push xor iret (bad) ljmp or jecxz add aaa lret out lahf adc data16 aas pop scas pop (bad) jmp dec dec dec mov stos test mov call push dec imul loopne mov inc sbb mulb aad and and or push repz (bad) mov cwtl outsb and mov and stos movsb in mov rcll adcl lock mov and fwait out adc int3 xchg ss ljmp push push xor daa outsl (bad) add xchg push mov pop adc out adc dec jp mov inc adc lahf out pop adc xchg mov jmp fildl cmp jp mov push xchg jge int shll dec adc call gs popa xchg fs scas pop lcall mov pop mov je cwtl mov dec dec ds test mov mov lret mov add outsl xor sbb mov pop je int scas popa lret lret push cmpsb fs cmp mov dec into pop and cltd mov repnz push jae add push push fldl (bad) jb cmp and aaa mov sbb in push pop test outsl fstl int pop add mov fistpll aaa lds scas lock inc mov push push mov icebp mov jb dec into dec out stos movl add cmp dec loop,pn ss jne lods xor sbb push pop mov jle or stos out push mov in xor bound cltd call push push mov repz xchg mov insb add sbb movsl push xchg loope fwait addr16 fisubl scas imul fstps cmp mov jo jl xchg int3 (bad) out cwtl mov push sub jnp rcr add fldenv sbb ds (bad) cmp sub popa mov or loope nop mov and hlt aas cmp xchg (bad) es sub movsl mov sub test cmpsb pop aas push adc xchg jnp out sbb jnp lock sbb stc mov jns xchg repz out out popa xor cltd mov dec and cmc sub test inc xor mov xor aas (bad) lret adc mov dec push addr16 sub jl xor loope ds ret in mov ljmp fld pop xchg ja sbb call cmp push lds fistl xor lds xchg pop inc jl sarb add test add and push mov pop loop loop jecxz mov jae dec psrad test jb mov cmpsb ror push dec je push aad int3 (bad) sub push xchg dec ss pusha outsl dec aaa data16 pop (bad) xlat sub or or sbb inc cmp mov inc pop xor das rol testb mov nop loop jne pushf sub enter lods std stos mov rorb dec ss mov pop pop inc push shrl cld sahf andb inc (bad) mov sub push push fisttpll addb fnstenv add jbe jecxz mov jl fidiv push add and cltd xchg clc xor and mov aaa jne pop dec xchg shr sub cld dec ds stc popf xchg sahf fs (bad) and aas test stc es mov xor lock adc xchg sti lret inc in insl icebp xor jbe or ds pop dec jl pop xchg roll lret inc dec arpl ljmp mov jb jnp enter add mov cmp push xor xchg daa xlat jno mov push xor loop test out (bad) leave leave test outsb sub cmp aas fdivrs icebp addr16 xorl and data16 sbb in cld mov insl jge pop inc xchg aad mov jge add mov subb addr16 push cmp xchg (bad) mov into add aaa mov xor lcall stos xchg adc ja jecxz fcoml cmp sbb in pop add xor jae int je adc jmp ds cmp add inc js inc pusha push ret cmp sahf shll push div or xor add fstpt pushf sbb stos out fldl dec imul push inc push add fisubr xor sahf incl jae test scas jge aam push xlat insl incb push sti cmc pop addr16 pop adc outsl pop pop push inc iret fcmovbe hlt inc stos stos ss cmc xchg aaa push mov mov xor mov stos fldenv cltd pop adc dec sbb mov jmp insl add mov pushf (bad) xchg jo insl js fnstenv lods push dec jecxz lods fldenv sbb clc or adc imul inc cld lds push push dec pushf jl ror adc idivb pop data16 push or testl jnp mov sbb xchg les dec scas jle cmp rcrb sbb cmp (bad) sbb ja jp mov xchg stos mov mov inc dec lret adc jmp sahf call arpl fstpl dec adc das pop or inc mov or mov cld and cmpsb stos dec sub and mov lods (bad) sbb iret ss lahf cmpsl out lcall mov push fnop jecxz mov (bad) pop add or xor ret adc mov sub insl inc or iret popa dec (bad) dec cli out or sub lcall pop insl pop int inc xor int3 cwtl fisub in adc adc sbb pushf cli mov test xor test push lds push jne lret adc jne clc int pop fldenv add fs dec pushf es iret adc pop ljmp push cmp roll dec repz inc adc inc inc enter lret xchg js and pop xor (bad) push inc inc mov or clc pop jb in ss xchg push test les xchg ret xor aaa push push xchg pop jecxz ja int aam push xor mov sahf inc add in jmp or andb call sti mov out repnz mov xchg xchg ficompl cld out loopne in emms jl push dec das enter ja jbe jge fdivrs sbb fbstp loop popa push fsqrt adc fisub and sub pop mov rolb jg clc sbb scas fidivl and push je cmp mov decl inc fadd (bad) xor es dec jns sbb pop jp fstpt ret cld mov jo aam or loop mov jno cmpsb (bad) frstor mov ret lods inc (bad) cli and push inc lret xchg jb in dec add pop mulb aaa and repnz inc sbb lahf test xchg aam xor add sub insl pop sub (bad) lret jnp pshufw push (bad) xor xchg mov stc cmp pusha lahf xor adc (bad) xor subb (bad) push sub mov inc test add dec push or daa popf and push lahf ss call loope (bad) popa icebp lret jne add xchg insb mov jecxz adc aas clc xor call dec sbb adc mov ret add popf repz mov or mov mov mov imul pop mull popf and mov cmpsl test adc sub (bad) mov pop inc mov jno shll push movsl out jns idivb mov push cld push mov push in jecxz mov pop pop insb fwait push (bad) leave sar inc stos mov lcall pop (bad) idiv pop mov dec js lods inc movl aas adc sub mov adc (bad) sub insl sub test pop or outsb jo addr16 outsl fbld xchg xchg xchg mov xor mov xchg popa faddl inc mov icebp jo fbstp das cltd gs jge jo in mov and aaa sbb jae push xchg out cltd cs sbb nop fldt (bad) (bad) cmp xchg xchg sbb in cmp mov add mov sub adc push movb (bad) xchg jmp push mov xchg mov shr inc or in adc mov jno add xchg addr16 les movsb mov lock jo ret and imul xor repz sbb push mov sbb push imul sub xchg sub xchg ret mulb divl (bad) lock cmp shl lcall xor fisttpl jne adc jl in imul pop clc jno pop rol mov inc lret push sub repz lds ss xchg pop jl outsl stc into (bad) outsb mov push mov dec pop lods cmp mov push popa and ret sub lock (bad) push push jo cmpsl mov mov mov lahf test fwait mov out enter dec pop mov (bad) es popa into or push int scas add scas ss loopne mov ljmp xchg in shr in xchg xchg lods dec or ljmp mov jecxz push push jmp mov rcll push (bad) aam jg cmp xlat icebp jl mov adc out lahf sahf (bad) loopne lds lods xor call xchg dec mov aaa aas lock in leave mov cmp cmpb mov mov xchg fdivl cli jnp enter call xor addr16 xchg or push mov movsb lock loopne imul xchg fwait lret gs cmp cmp or sbb repz mov mov lods out xor xchg lret loop addr16 jne mov and lods lahf jle xlat add mov out pop in daa mov js push pushw or mov cmp lock inc ss xchg xchg lock mov rcrl inc push in outsb movsl aas mov mov movsl imul daa pop xchg ret xor add lea cmp (bad) mov jp push push repz ja push add ja cmp es mov mov repz test push shl inc pop cltd push jmp add fwait jo sbbb gs test mov fucomip std pop popf sub nop xor jbe mov shl testl movsb pop cltd test cmp notb loop aas jp sti or xor aad cmpsb cli jne aaa cwtl xlat scas outsb loop dec xor adc sub inc adc and aad loopne sbb lea arpl jge neg scas test lret sub mov dec dec mov adc sub sub fimul adc rcll mov cmpsb out out rcrw fwait mov insb cmc pop insb std push jle mov push (bad) xor mov clc fprem1 pushf cmp outsl xor rorl inc pop sub lret leave daa je mov (bad) lea loope mov out xchg cmp sub adc imul fdivp (bad) lcall jp call push cmp mov add incl jg syscall cmp out out add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fist add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push pop adc mov dec dec mov leave xorl jmp mov nop sbb pop add sub jns xlat cmp mov add add decl pop dec jmp sub in test push pop push lahf sti xor and jle ljmp jecxz mov mov lahf sarb cs adc mov jg jmp xor mov cmpsb out inc lahf pop inc pop ds inc jp xor mov mov ds push jle fcmovnb mov popf jnp and loope mov and aaa (bad) decb add sub cmp or jnp pop cmc push xor rorb inc fcoms sub xor cltd movsl adc add mov and sarl add cmp jo aaa int xor repz push fdivr repnz pop dec addr16 sbb daa push jl scas ss mov sub mov jbe or (bad) pop fs outsl lds js jecxz mov xor (bad) push cmpsb (bad) cmpsb xor nop mov ss cmp aam fstp jno lock xor ret aas xchg ss push mov jne mov imul add lcall xlat mov mov pop jle fldt sbb push cmp xchg adc jecxz mov clc test pop sub outsl lcall add lea out lods pop mov les add das pop (bad) pop pop and int3 xchg pop jge ret xchg push xchg ret decb and adc inc pop ret push xchg inc cld das cmpsl push xor call in movsl cmp in rcrb in mov push pusha inc add into and or sub dec or ret repnz jmp adc cmp dec adc mov mov sbb push pop cmpsb pop lahf das and jne arpl dec jae adc push shrb ljmp xchg inc sarb xor push movsl aaa mov cmp push in loopne push cld mov mov lret out into (bad) repnz leave adc mov mov mov xchg addr16 scas xor push mov sbb jge mov mov mov xchg lods ds xchg xchg push loope rclb mov mov dec sbb rcrb mov test pop jge stos pop subl mov sarb lret lret icebp imul test lret jo ds sbb shl mov pusha push ret ret mov sbb adc xor or xor adc out es mov loope int add stc xlat rcll cli pop ret stos push mov jae (bad) scas repz push xlat int aaa push roll xchg push icebp cmp in mov mov push (bad) std cmc ljmp inc xor mov dec lret call dec mov loop mov mov add (bad) cmp and fwait mov cltd mov sub jp cli (bad) cs push jge insb add imul jb cmp mov cld xchg aaa pushf pop or mov or xor jge int3 adc lret jecxz push cs cmc in mov sbbl mov movb add (bad) popa hlt or inc js loope movsb pop hlt mov ss mov cmpsl popf cmp xor push jbe outsl stos and xchg (bad) in xchg xor push outsb arpl aad mov movsl mov xchg dec jecxz jg cmp jno test mov (bad) mov rcrb fidivl xorps jnp mov cli inc inc xor fistp add add mov gs (bad) loop repnz aaa sbb out popf insb movsb mov add inc push dec push enter add (bad) stos sbb mov sbb clc pusha mov sub andl repnz mov rep xchg stos sub inc xchg or inc (bad) pop inc push lahf jmp ret not shlb inc les imul jp ret clc xchg (bad) xchg xchg add nop xchg jns mov daa dec (bad) adc rclb sbb inc mov insl mov arpl bound mov lock mov jnp fbld std dec mov faddl ljmp in clc add pop not arpl mov add xor mov mov out fisttpll divl sub lea fimul aas dec jne fstpt call outsl jle fsubrl dec je xchg hlt lret push cmp push repz out or push pop push mov sbb xchg icebp mov and lret dec and std imul mov cld ljmp int3 inc aad je scas xchg fwait push push in jle jg pop imul out int push sub idivb sahf sbb loop jl lahf add stos fsts rol in cmc es add jns fimul push mov shlb addl xor popf out in pop and cwtl lods xor lds ret cmp clc fildl and ja mov sub sub dec mov ss mov stos sarl data16 adc mov lret inc test mov in mov daa (bad) pushf xchg xor xchg jns add cmp aas (bad) fs sub std cmpsl (bad) and (bad) (bad) aad stos jne jo add or insb xor or lds daa movsl mov rcrl ds test dec pop clc bnd jae mov scas sti ret pop lahf push outsl xchg sbb insl mov or iret xchg jns mov sub fadds das mov (bad) jbe mov bound jecxz pop scas sbbl in add inc (bad) in popf inc in fnop dec dec loope lds fsubl adc mov mov add push mov jae xor mov add cmc fisubrl dec mov repnz pop testl lock add push add test cmpsl push lahf fcmovnb rolb xor out jge test pop adc fnsave cld push mov sbb jmp xor shll cmc aad mov jne inc movsb ljmp sbbl adc outsl inc lods test rclb fstl iret daa jl call lret mov jae sbb repnz jp mov push xchg ficomp (bad) enter mov sbb or popl mov push subb dec and pop mov repz and adc je outsb ss inc jns sbb mov loopne cmp shrl stc (bad) fimull andl rol cmp xor dec dec mov int mov pop mov sbb insl mov icebp jbe pusha int3 cmp in rcll push fsubrl (bad) jne and mov mov aas clc movsl mov and std mov dec lds dec mov sub xchg cmp pop mov lcall leave push rorl aad and scas movsl pop mov insb loop cmpsb add push data16 fdivp push hlt pop sbb arpl ss scas pusha sbb pop inc xchg add pop inc hlt adc test shlb rcrb inc (bad) xor test test fwait inc rcll shrl mov sbb ret (bad) (bad) cli fnstenv inc enter mov push pop (bad) test scas into jae mov out cld xor outsb jo mov cltd jmp test dec or mov fdivr sbb cmp lods mov ret dec dec mov xor ss rcrb es mov (bad) mov mov push mov jo inc and xchg mov aaa xlat mov add cmp sub paddq add fsubl dec out das sub and addr16 les stos lahf cmpsl mov dec cmc stos lea cmpsb arpl fstpl jl call dec xchg clc pop dec dec adc lret (bad) notb clc inc jge push mov sbb int jns cmpsb mov and and scas pushf pop push add xchg xchg subb xchg fdiv xor in jmp out loopne inc popa outsl lods daa lcall cmc adc cltd sub push lret insb fnsave repz sbb dec mov in gs sbb add xchg lret dec and and ljmp mov js mov pusha pop sbb stos jne dec jl aad aas and in fildll outsb jbe xor test pop outsb clc inc clc push (bad) fadd loopne or pop out sarl out jne push dec ss sbb cli mov aam or mov sub data16 push mov mov dec dec xchg mov push hlt insl cmp fcoms cmpsl imul pop (bad) jno test (bad) or xchg push sub loop fstps mov mov je adc fcomi sbb sub into jbe fs or add in pushf sub xchg push pop test imul sbb sub daa bound imul aaa (bad) mov cmpsb jnp or sbb or sub mov and mov sbb pusha mov fstpl hlt cli inc fdivrl movsl pushf pop (bad) aas repnz push in cmp xchg mov adc stc stos test inc stc xor jb scas cmp mov dec jl xchg fmull call xor jo mov je sbbb sahf rcrb ret cli insl and sbb stos mov rclb xor fmull in fsub pop lods (bad) ds inc rcr fildll and ja hlt pop push cmpsl push jnp fistl jmp ds sub mov dec hlt mov mov pop sbb pop add push shr leave fcoml xor or loop adc jo xor xchg jl in mov out pop popfw sbb dec int3 mov mov cmp pushf inc movsb dec into inc notl inc inc test inc enter and insb insl and adc testb cld sub or lea int3 cld (bad) popf fxch add or push mov lds ret scas aam or jg xchg jns sub scas fsubp mov mov mov into cs enter and aaa lock jp and mov pop mov in mov out jne xor jl (bad) pushf push inc push jmp rclb std dec xchg inc cmp fistl mov movsb aaa (bad) mov mov push mov xchg repnz mov scas pop (bad) push mov test or test jae cld fdivs sub js stos jmp jl mov in xor cmpsb mov add cmp sub int (bad) mov icebp mov daa popf iret xchg xchg pop in jmp (bad) push push in add xchg rol cmpsl xlat lods xor sbb push add fistpll mov mov lcall mov sub push aaa out in lea (bad) (bad) mov mov mov imul jl fiaddl xchg mov clc dec push and loope pop mov out mov push ss jb out inc inc clc movsb mov std ja push mov xor add sahf repnz mov fmull and mulb push inc xchg pop in jle inc push push ljmp out (bad) ss cltd outsl inc jne mov sbb ss (bad) xlat pop sbb sub mov pop roll out (bad) add test inc out xchg xorb fstp jbe cmp into gs cmp dec (bad) mov or inc test adc es lahf mov cmp jmp push lea out out or add add insl add movsb push add xchg dec call pop mov icebp or mov (bad) adc roll inc sub hlt xchg popa insl (bad) jnp ret cmp fldenv jo cmpl xchg lahf sbb sbb mov or dec mov clc rorb sub jge in cltd clc xchg push jp lea xchg and pop sub xor push or stos dec mov test and lahf in cmp and insl movsl cmp ret outsb or imul cltd loope jbe adc into popf bnd or hlt sub push push in push and sub sti jne add add outsl (bad) or enter jnp mov fldenv scas cmp jmp mov arpl xchg cwtl sbb shr adc xchg das (bad) push mov push jbe mov movsl movsb cmp or cld pop fidivrl iret cmp or push push iret push xor ds fldt pop pop xchg insb xor mov repz imulb in mov lods mov jmp push fucomi mov cmpsb jecxz mov lret lcall jg adc sbb sub loope jns mov cmpsb sahf imul (bad) stos xor add add push ja mov sbb out rorl mov mulb dec scas cmp in subl gs push jle fstl add cmp xchg pop push sub sbb cmpsb pop dec dec push int xchg shrb mov fdivr insl aad subl pop movsb lock jmp pusha pop jns mov jns or or pop add dec dec daa ja gs dec lea pop aaa pop or xor test mov jmp xor enter inc adcl jo sahf js inc xchg fwait or xor lds push xchg iret cmp cmpsl mov add cmp pop adc mov inc in daa sbb scas stos inc icebp les stos lock or inc add and aad and sub and adc in lea fdivrl enter je pop mov js daa ret mov std (bad) jne push xor and push lret scas cwtl push mov mov fistpl pop pop lret lds add sbb lea push scas cmpsl sub push add into or ss sbb ret adc jb leave dec add mov jg mov jns in xchg daa dec sahf cmp repnz xchg daa pushl add xcrypt-ecb cmpsl int3 std lret fdivr add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fistl add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push and jecxz icebp rcrl cwtl fdivs test (bad) je rorl cmp jmp out rep cmp inc sti xchg iret nopl and lock mov add loope jnp jp outsb arpl mov data16 cmpsb aad fadds cltd (bad) rcrl sub inc jp dec sub cwtl stc jmp sahf lret jnp sbb ljmp pushf mov mov (bad) mov xchg int3 pop inc jnp mov dec jecxz movsl js pop (bad) xor xchg add out loop mov cmp cmp mov cs cmpsl xor insb or jo dec aas popf jle mov pop pusha imul test (bad) xor fs cld sub dec mov pop (bad) sarb push mov fwait ret dec jg dec mov push mov sub jp mov imul and pop or mov into pop in xlat lcall pusha xchg je lods ljmp jmp nop xchg imul fst mov ljmp out movzwl xchg mov jl aam ret addb not fbstp enter sub rcrb cli and das testb inc data16 push adc adc cld dec inc int3 std js xchg mov sar call sti and (bad) fiaddl jnp pop add pop insb jno outsl sti and ret out push xchg push (bad) mov mov clc ficoml jae jge outsb cli sub lahf mov pop shrl xchg cld jne mov pop pop jb or call dec das into test out xchg lahf and inc jno gs mov jno test andl cmp ret adc mov and mov clc (bad) in insl fdiv xchg out int3 push jns shll jg dec cmp push push inc jb cli pop jns adc movsb call adc push fwait data16 arpl aam dec inc jae cmp mov ret cmp lods stos mov sub or xchg dec das ja insb je test push dec shrl out (bad) sar outsb add and cmp inc movups aas mov (bad) int sbb cmp xor stos xchg ret mov add je xor cmp mov outsb mov sub mov mov or fstpl in pop adc push fiaddl mov cwtl xchg test add cmp out fimul and pavgb sarl movsl lods adc xlat inc mov rcll mov test pop loopne (bad) push xchg adc push cltd and test mov lock (bad) xchg (bad) das shrl inc mov loop and or das mov idivb and cmp sbb aad dec xchg dec negb jg nop sti out push xor mov add fcompl mov test adc inc scas sbb daa imul inc flds cmpsb add or fnstsw ret inc or jnp outsl aam inc or xor mov xchg adc insl enter repz mov inc hlt lock mov stos cmp aad mov mov jle jge push in repz and (bad) pop (bad) cmp mov loopne movsl lahf push cmpsb xorl scas popa lahf jae mov jg leave ret les mov pop mov mov and daa mov xor fidivr jbe hlt push imul xchg jge std sub mov repnz xchg mov inc enter (bad) mov mov sub pop (bad) aam mov dec and ret xchg dec push lods mov lahf int daa mov pop push add outsb mulb dec pop push and pushf xchg cmp in sub shrl push mov lock mov inc and xchg jo outsb cmp adc aad add cld dec mov in xchg and inc xchg aad mov lcall pop in in push push mov movsb cld fcom mov dec mov or rorl cmp adc (bad) scas aaa mov jae imul lods inc in fs mov adc bound add adc insb cmpl jno test aas mov inc jb jle (bad) sahf shlb xor popf outsb addr16 xchg jg aas or push pop cmp jb mov ret lret (bad) sbb adc fisubrl scas add pusha popf cmp mov in scas mov mov das push dec push or (bad) negb movsb js xor cltd inc cs xchg lea lods pop out push mov (bad) jmp sub or rcll icebp outsb xor jle mov stos xchg jg jle xchg ret das sub or or (bad) (bad) (bad) repz push repz mov ljmp mov std lahf sub int fcomps adcl pop bnd pop sarb mov xchg shr xor int push js fist movlps call cmpsb or or pop sub mov sbb sbb outsb pop out out lret jbe lret nop xchg mov jg jns jl addr16 sahf outsb cmp movsb sti pop iret cmp push imul call pop pop and divb or mov push mov dec pop dec inc or in (bad) out fidiv mov stos and xchg adc xor xlat or add int3 push mov sbb (bad) xchg pop aaa leave cmc mov and iret and and leave jno pop aad imulb cld xchg push dec cmp repz mov repnz lea xor imul mov inc inc negb pop mov (bad) sbb test rolb xstore-rng cmpsl inc add mov mov add ret cltd ret in loopne in dec insb jb xor adc jl shll fdivrs fwait mov mov (bad) mov xor jge mov cmpsb rol mov cmp xchg iret stos (bad) (bad) dec mov testb and push in (bad) xor aaa push test aas js in jno and mov pop es add add mov fs into roll or pop lret sahf and mov das mov inc lods arpl mov xchg dec mov into or adc test (bad) jo xchg xchg addr16 pusha push jl inc clc pop jb test shrb sbb pop cmp xlat stc mov aam jl inc mov int inc dec data16 sarb cmp pop ja pop inc or sbb push mov and and (bad) in sbbl in jo pop inc fcmovnu push std jno enter inc outsl pop xor imul insl stos js lea pusha aaa scas and cmp cmp leave jmp mov out cltd in lret fildl in (bad) jae sub lds (bad) into mov std or loop enter mov jge cld lret daa dec mov xchg dec int pop push dec or (bad) jne hlt incb push loop fcmovnb jnp push or fistpl scas cltd dec out mov lock push push mulb aam mov mov adcb xor rcr sbb xchg push movb mov pop fcompl repz enter into sub test scas push xor (bad) (bad) into jns jecxz gs push fiaddl arpl bound pushf lods mov sbb push adc or ret push fdivp lcall cmp sar inc stos jne pop inc xchg dec pop das fs sbb iret pop mov sbb mov jge fdiv imul xor or aam sbb icebp pop bound shll dec pop out in icebp (bad) into fsubrl cmp insb in es inc mov fildl add or (bad) mov movsb (bad) fimul aas mov jnp mov movsl cmp pop (bad) in (bad) fwait shlb rorb sbb xchg insb dec sub mov jno mov mov lock mov cmp mov les loop fwait (bad) hlt idivb test ret adcl sub add (bad) out jle enter xchg push mov aam mov push cmp test stos pop cwtl lods sti int dec sbb or mov pop inc mov rcl cwtl mov stos pop jmp xlat xchg movsb sbbb in shr mov cmpsl inc mov imul jb sti push cmpsl adc inc lods in mov lds pop xlat sahf into mov jg outsb popa out js inc add inc jne mov xchg inc xor popa add imul scas imul rcl mov dec inc inc sbb enter fpatan gs (bad) jno jmp aas aaa aad (bad) out mov cmpsb lea popf int pop inc xor pop daa arpl ret or jns dec push xchg jne dec arpl push mov jmp test fidivl sbb mov pop dec pop enter pop jmp stos outsb fisubr movsb mov push imul out mov ds and pop sti divb sbb push lcall xchg inc mov cmp pusha cmp push inc jle popf pop xor add je in (bad) stos mov sub pop lea std jp and leave jns out inc jno aas repnz cmpsl jnp in adc cwtl clc or sub push xchg iret in push stos pop and and mov mov mov xor cld (bad) out cmp push cmp mov inc dec out sub ficompl int3 adc mov jno sbb ret add pop movsl daa andl je xlat push xchg and popf jmp outsl pusha jecxz repz arpl sarl push jb stc cmp in xchg sub xchg adc add dec test mov ficompl dec and mov insl hlt inc jne js pop repz out inc mov fnstcw ret fdivrl cmp mov cld in andl pop test mov and dec ss add out push lret pop cwtl xchg cmc lcall (bad) loope loop test push jmp movsl xor jae cli xchg push lods lods into jmp pop cmpb dec push clc fmuls and loop jp jbe gs jae mov sub shll inc mov push fdivr cmp lods aad push (bad) xor inc je jb int3 bound sub stc sub jo mov cld movsb mov int cmp adc and mov xchg cli sbb inc std test in loope (bad) cs add xchg pop (bad) pop icebp jg inc pop sub fisttp fwait sbb scas insl aaa (bad) stos enter rorl aam dec pop dec cli aad push cmp xchg in (bad) mov push rcrl adc fild dec inc dec push adc (bad) out jb pop mov xchg pop mov jae cmpsb mov pop mov jne lea push dec inc das lea jp mov mov test movsl fwait pop mov nop pop outsl mov popa stos mov cwtl cwtl in pusha cmp std test stos push xchg jle rorl sbb les inc in mull inc lea jns iret mov xor sbb sbb pop lahf inc push mov leave or ds add adc idivl mov add test sub lods inc sbb and scas pop mov mov xchg nop and mov sub push or aad adc cltd in mov icebp shll sbb test out mov adc stos mov pop fcmovb (bad) jae xor adc jl out out push repnz mov stos and (bad) sub push iret shrb mov bound (bad) mov fistp out sbb aam adc cld push push ret adc add xchg leave sarl mov movsb stc lret ret in or jae xor jns push sub cwtl fs rorl mov sbb aam push popa adc jb sub rclb adc js dec je icebp dec out fwait test xchg je jl adc xchg call fstpl ss movsb lods sti popf and js mov adc jmp jmp pushf mov or out pop out mov xor mov cld cli ror mov mov out sbb mov inc mov stos mov push xchg mov (bad) jg test xchg mov lods mov lods cmp ja icebp jl aaa (bad) dec mov xchg mov rclb loopne sar cmp pop das rolb mov shll fwait xor xchg into (bad) adc popa pushf or fisubrl hlt mov fs in jae xchg jae and add arpl mov ss aaa jno mov dec out imul hlt lahf sub jnp sbb sbb fdivs iret mov pop (bad) sarb mov adc xor inc pop shrb push dec stc pop pop test clc adc testl and adc cmpb adc out sarb push cmpsl push icebp xor testl es je xchg ja and xor in out inc sub (bad) ja adc xchg sub xchg fwait mov mov xchg movsb mov pop das notb sub rcr test sub loopne cwtl fsubrl add dec xor test xchg mov in lcall ret repnz decb mov push mov rcrl fs jbe or sbb jle and repz aaa pop xchg mov (bad) in mov test pop jns cmp out les and pushf jge lahf mov push in fsubrs inc add cmp cld adc add fiadd and jae or sbb jmp jb pop enter sarl dec ret dec mov cmp mov push push jg push aaa dec fisttp or xchg fwait xor add loop add dec ret loop dec and addl push insb mov mov pop fsubr loop adc inc xchg sub pop incb jg and add (bad) pop popf arpl pop lods cmp rcl dec insl shrb sub cmp and add cmpsb dec jne rorl xchg jno xchg stos into mov bound in xlat push cmp xor in fnstenv jnp in fnstenv jnp in jg add jg or add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ficoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb add lock jno dec pushf pushf out dec ja mov hlt hlt xor pushf dec fwait out cwtl cmp rcr (bad) aam es mov (bad) pop add or das iret fisttpll int3 xchg push pop push jne jmp pusha std jne ret inc into inc xchg leave cmp call test outsl ss ds call bound mov or cmp (bad) mov sub pop (bad) out in mov dec aaa (bad) jns sub lret stos dec jg adc adc incl dec mov xor sub cmp ljmp dec mull mov es cmp mov push mov dec int adc inc idivl sub repnz adc popa push lret stos jg pop out fmuls cltd xor sarb mov sbb add gs sahf dec stos sub sub std mov cmp pusha mov xor or popf push dec adc sbb mov xchg jmp je leave test add (bad) testl xchg subl jge pop jge jnp mov cmp lods ds adc jmp push stos pop lods lock push cmp in cld fwait jmp lea cli mov sbbl add or mov cli adc scas jb xor aad leave int inc or sbb jne fstps in jge jmp ret or lcall or sbb push mov lods call jle nop es jns pop shll push push flds call push lcall add mov iret cli mov roll imul sbb in je mov sti dec mov sbb stc call inc push jecxz fs mov jne xchg xchg das test repz xchg sbb mov or push sub mov lea or mov pop leave xor and or xchg jmp pop into sbb cmp test and dec pop mov sub in or and lret out insl adc xchg and adc (bad) jmp (bad) inc or lret (bad) jl cld (bad) jmp roll sbbl cmp fbstp jbe leave sbb inc or sbb rorb dec in test icebp push fcompl out in inc bound jle sub sbb jne xor jge mov loopne out or mov or (bad) fist sbb adcl outsb imull les cmpsb movsl cmpsb subl insb cmp push fs pop xchg pop pop fcoml sub or push fisttpll icebp jb adc into pop mov cmovo and or push jg aad or cmp mov lret mov jmp fnstcw je test add xorb xor mov stos clc test mov jecxz inc cmp leave lods or (bad) leave js lea mov lds dec fstpl in clc jg rcrb xchg mov sahf (bad) cmc sbb push pop or (bad) pop imul lret push popf push mov in stc add jno sahf neg cld loop pop xor jle jae xchg or jl pop inc pop fwait in xchg ficomp movsl and or fmul pusha movsb fdivs mov fiaddl data16 je adc pusha sub lods and test fiadd cwtl xlat adc xchg les scas out ret rol out jno dec add outsb xor or movsl push das lret xchg mov cmpsb mov bnd aad jne aaa fisttpll and cmp int mov jmp (bad) in jg push rclb or mov adcb mov lods mov and xchg and test and fisubl dec dec or popf add cmp lock pop enter push cmpsb xchg ret mov mov aas out mov std jne out mov outsl add add scas mov cmp int dec test idivb push or xor add sbb mov adc mov pop insb jg fs adc xor adc push aas sti mov aaa bnd data16 outsl add or stos sub out stc loop sub dec pushf cmp (bad) mov push jns aam hlt fidiv mov jnp push dec mov ret test adc out xor cmovbe aas ljmp hlt fdivrl cmp in inc sbb xchg xor and xchg xlat in test and repz out mov stc out mov add jne shrb pop cmp inc scas dec subl dec sbb mov negl xchg clc add mov mov jnp sub or pop fcoms xlat sub aaa rcrb mov sbb sbb inc lock add or push or dec sahf loopne dec loop inc jle (bad) push jbe fildl cli mov jg (bad) popa push push dec push jmp mov cmp and inc fnstenv fsts imul push int3 jmp imul jmp out xor push into or bound into imul aam rcrb adc mov jl std shlb add xorb mov sbbl push jg add mov pop xor (bad) loop (bad) mov push push (bad) sub fcomps inc adc iret or sub xchg mov movsb adc push cmp ja lret jp inc add push outsb fisub jne push push mov push pop and or adc add (bad) in fcoms popf sarb jo loop mov mov push jle sub cmp imul outsb pop cmp enter mov jnp mov js cmpsb push pop dec lahf push imul add mov pop stc and das add adc pop and mov jnp dec movsl sub inc (bad) cli sti adc push sbb push jle cmp call dec pop jae insl push loope int3 aam xor and xor scas popa (bad) outsb ret sbb rcll xchg into xchg scas pop and mov or jns push repnz lahf mov and loopne adc mov or incl inc std (bad) push sub dec and dec mov pop mov lret pop xchg pop xchg dec sbb andb orl pusha subl decb mov inc cmp adc test sub sbb adc mov dec in push mov xlat mov adc and cmp fildl mov jge mov xor je adc or add pop je in xchg cmp (bad) fs lds and jns clc aad add cli push mov into nop inc push adc inc or cli inc mov sbb push fisttpl pop sti sub pop std add and insl ss inc into in pop mov mov (bad) jmp dec lea or add hlt aad stc and sub xlat adc adc dec dec test sbb repz mov ret dec mov pop xor cmpsb andl add decb or and fdivp pop movsl inc mov hlt mov jb insb jg mov pop push mov dec cmp or mov or popa aad imul and add repz into icebp fs inc out lods lods rclb add sbb add adcl cmp mov int3 dec loopne into xor cmp js pusha push sarb maxps push push outsl (bad) pop in int ficompl inc aas imul cld repz sbbl add xor cmp enter std hlt mov call adc ja cmp bound stc sbb lahf mov rorl stos lret jmp xchg mov xchg fmul push scas xchg cld mov pop rclb rcr pop mov sti nop ret mov js (bad) cmp pop inc xor xchg adc daa stc arpl xchg sbb js xor aam gs jno ffree cmpsl into lods lds and inc mov pusha jge pop mov outsl add xor mov dec and hlt cli dec shlb jmp addr16 push inc sub ret andl lret call adc (bad) xchg sahf xor cmp lods out adc mov dec outsb in data16 outsb fistl out pop xor push mov (bad) xor mov cmp lods ret sub add (bad) int3 jns cmp and pop test xchg mov xor mov sahf jmp lcall sti adc aam and cli sub test or mov inc (bad) xchg jmp adc xchg xor adcl or push and dec sub mov inc fcomps hlt mov mov aad dec cmp jge aas cmovle pop xor jecxz inc jmp inc and push adc int3 test fcomps sarl mov and loope out loop movsl bound fstps jp inc pop mov int3 hlt insl mov xlat xchg pop push or data16 pop pop fwait inc mov movsl jno adc add lods jg mov imul rcll notb add jmp mov hlt xchg xor push jnp or bswap xor imul jbe aad call mov loop mov movsb pushf fs push mov into dec imul sti mov jg (bad) jmp fmulp push mov out in sbb add add pop mov pusha cmp cmp lods mov shlb std cmpsb mov jp scas ret jge out lds (bad) aad sub xchg sbb mov mov repnz in pop mov mov cwtl mov shrb adc frstor lock out adc inc or push dec repz flds xor pop push in xor sbb in test mov (bad) xchg mov xchg sahf out sbb mov push (bad) jbe iret (bad) mov gs mov jle dec xor jge xor out dec mov push movsl or xor jg arpl cltd fsubrs push outsb xchg scas push in scas and daa (bad) dec adc lods and pop scas jmp mov push sti adc call sbb test bound sar call push stos lret dec bound popa loopne push dec inc xchg adc xchg fidivrl enter fucomip outsl cmpb and movsb pusha sbb adc jo jb cmp pop in pop dec xchg scas aad lock nop mov nop pop addr16 add adc das jno jae cwtl sub add lahf stc xchg push xchg insl invd adc pop leave idivb incb or and fisttpl sarl sub mov ss lock fist cmp leave sbb icebp lock jb mov mov xor inc repz dec dec sub les sbb push jl mov (bad) dec lahf inc add dec mov cwtl adc in jae (bad) pop xor xchg movsb dec inc fiadd js cmp (bad) adc or inc jne fld ss lods xchg int3 push sbbb dec dec sub mov ret push xor jle aaa (bad) jne sbb repz xor das push sbb sbb out test pop fbld (bad) push arpl add dec and int3 lcall daa bound loope lret (bad) data16 hlt (bad) push cmp xchg stos test sub jp jmp or sbb jle stos movsbl jle lcall jnp out test inc in cmc (bad) pop cmp mov jle aam cld fdivl lret test addl aad bound and adc loope insl mov inc scas and (bad) sar inc (bad) js xchg add xchg jns out xor or addr16 fstps mov sbb jle mov (bad) xchg push leave adc ds xchg in stc push mov test mov std es iret dec or xor xchg mov mov mov inc das sbb xchg mov test ja popl sbb sub pop shrb scas int3 xlat jl stos mov lea jmp pushf (bad) mov and mov int3 rcrl xchg dec movsb and xchg fidivrl dec (bad) or fisubrl xor fs jl in add add sbb mov adc in out sti popa into dec (bad) mov in xchg inc and vorps and cltd cmp jg xchg mov enter rcrb ds push mov fadd mov add lock mov jnp fisubr xchg xchg aam xchg mov fnstenv adc les mov pushf enter mov jp mov aaa comiss mov fmuls jns jns enter adc popa xor dec adc les fnstsw xchg or sarl mov push cmc mov stos rorl (bad) jmp cmpsl sub or int3 cmp ljmp push push fildl mov sbb lods and cmc test jl pop ds mov or shr (bad) faddl jae imull adc sbb imul xor lcall cli loope jle rolb out je scas xor pushf push stos aaa add dec ljmp push dec and in inc jno (bad) lahf cld sbb loopne aam sbb xor ljmp scas sub adc ficom fmull repz in js popf cs adc call repnz imul cmp rcrb adc ljmp lcall xor repnz mov cs mov sbb (bad) pushf std push loopne scas (bad) fcoml ret mov stos mov imul inc shld pop inc dec sahf cmp repnz xchg daa dec sahf cmp repnz xchg daa dec (bad) jg add add sbb cmc repnz add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoms add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop adc add push xchg (bad) xor nop outsb xchg inc inc nop out out xchg data16 inc enter jnp xor je je cld (bad) xor fistpll jno add jne stc inc adc insl in insb mov fistl call adc test (bad) leave jae or or adc clc sahf cmpsl pmaxub mov enter pop mov insl dec fs dec sbb cs stos jb imul loop xor (bad) dec pop shlb cwtl not add and fcmovbe push rolb ret adc jno jo js or and sub sbb inc lea addr16 iret setg or dec mov sarb scas aam movsl cwtl sbb into jns mov test xchg popa mov clc pusha mov xor stos shrb das ljmp inc aam mov xchg mov push add into mov fdivl cmp ja xor imul aas jmp sbb and outsl xchg mov into (bad) or in aaa mov pop dec xchg das add outsl nopl xchg xchg jns mov cmc push pop xor jecxz inc xor repnz mov mov xchg daa mov aaa mov stc gs jmp mull stc add mov xchg dec inc fdivs add xor and push fucomp sub nop out mov jno lcall mov pop mov ss push (bad) xor adc and sbb xchg inc int mov fsub and out mov mov xchg xor jp sti push ret inc int or testb mov lods hlt dec mov sbb sti aaa (bad) (bad) dec (bad) (bad) in pop add sbb or mov rclb add mov into sahf je mov xchg dec (bad) daa mov sti dec popf push add cmpsb loop inc sbb cmp lcall insl push imul inc mov mov sbb mov or daa add icebp aaa mov mov in inc shrb movsb jmp fisub aaa mov and pusha add adc add leave testl push imul pop add mov pop add add in test and lds scas mov negl jp mov jge es arpl sbb stc aas or (bad) xchg repz and dec ja movsl dec test mov stos (bad) out and int3 adc lea xchg pop sbb jecxz pop jg fs add pop or jno insl push icebp dec or cmp cmp addb mov jle loope mov shrb jle inc pop test sbb xorb scas bound outsl and adc iret daa (bad) aam imul lahf (bad) pop lret pop in jl mov pop fsubrl sti in aad sbb sub dec xchg pusha cmp push cmp and lds push movsl pop mov dec jo xor out stc add cld inc inc and mov push or push rcl (bad) stos jne int3 mov pop push or push notl mov (bad) push test cmp cmpsl fimull sbb jge fwait cmpsl sub sar data16 cld call sarl mov xor xchg in nop divb in aam push push mov pop pop mov dec sbb adc cmpsb xchg lock mov out pop dec test adc jnp fcoml cmp popf movb xlat sbb daa sub out dec lock sub hlt (bad) push mov mov and leave out mov cmp add decb pop test test cli dec js fstpt out imul decl sti or fwait leave clc movsl and adc xchg sahf (bad) icebp adc pop xchg mov inc pop sub test xor or push xchg sbb ss sbb enter push mov je xchg push inc sub sbb dec jns add adc push scas ss lock cmp subb xlat xor pop sbb lock clc xchg iret pop daa repnz sbb icebp out in add jnp (bad) xchg jp mov push lret aam or repz mov and je xchg clc cld adc lods out mov test enter inc ja stos fsubs fisubl loop sub call mov inc ss add or nop mov lcall push movsl cltd or shr add mov dec push and lret add adc inc std dec lock adc fwait mov xor shlb ret subl or outsb or iret test sbb ret loope push inc cwtl inc xor sbbb cwtl push sub sbb (bad) sbb xchg xor ja insb leave sbb adc inc inc push push (bad) test sbb test in add cmp mov fs inc insb mov test cs jl xchg imul cmp loopne pextrw cmp sbb pop out sahf mov lahf jmp call sahf imul sbbb out mov ret pop fisubl sbb add mov dec fwait pop inc mov dec jbe xchg mov loop out sbb add push pop add xor xor into mov leave scas rol lret std inc and jmp decb cli jl jbe icebp jecxz pop mov jns inc dec sub lods aam loope stc inc mov icebp ja jns,pt mov aaa push iret fisttp sahf notl jp mov jmp sub mov stos sub cmp rcl daa push movsl cltd xor mov or pop fdivrs cmp xchg add insb imul adc out outsl shrl inc pop (bad) rorb cmc pop inc aas jns dec xor out test pop stc pop arpl sbb xchg popa jnp cs mov mov fnsave aaa push mov mov adc jmp (bad) movl popa add leave sub in mov mov out call and xor loop mov jne insl int hlt (bad) cmp (bad) sub addr16 or mov inc sbb mov pop mov in pop pushf aam ja push jl cmp add into adc cwtl dec bt insl and mov mov loope mov in pop sub cli jno add inc les pop mov mov adc incb or add aam aas in sub js sub xor (bad) dec rep popa movsb lgs cltd inc inc push leave movsl dec aam add arpl mov das mov mov mov (bad) jl sub addr16 push mov lahf dec sub xchg push sarb and push push push jb arpl aad and mov les cld xchg jne in sti jp lds ljmp insb inc inc adc lahf mov (bad) fcmovne push and xchg lret test xor enter aam and enter push loope pop ljmp rcll iret pop stos shll fmuls sub sbb xchg adc and push cs xchg movsb pop jg mov sub bound add (bad) jle je or pop dec add int3 mov pop sub jnp or pop clc popf aam mulb cmp fbld iret mov add jg (bad) mov add push sbb adc cmpl mov orb or xchg cs fs mov call repnz out cmp mov and out jne cld dec cmpb outsl rorl je mov insl adc mov cmp repz gs rorl xchg scas test mov jecxz stos mov push add movsb (bad) pop inc jge test stos cmpsl dec fsubrs dec aam jae in sahf in aas (bad) shll stos dec mov cwtl pop sub mov xchg lods mov add pop (bad) (bad) sbb mov add daa call and adc xchg mov shlb fs roll arpl fild jae fbld inc jno pop pusha lea dec xor xlat xor add push clc or lret jbe or pcmpeqb int scas cltd aaa ficom fidivl fidivr ret pop push sarb fcomp xchg push mov cmp (bad) adc cld cmp mov pop fidivrl dec mov (bad) sbb ss inc xor subl imul push jle adc adc (bad) neg push inc out or jle jecxz test fist fwait dec mov jp,pt aam jp cmp or adc mov inc aad in mov (bad) or adc bound cltd xlat bound into sbb or aam fildll mov pop pop (bad) std mov stos jns add inc (bad) adc imul fimull mov cmp inc dec out xchg lea push loope cmp mov jne out xchg dec lds and cld fcompl xlat mov and dec and mov xor sub sbb cmp and int xchg mov pusha xor push adc pop lds ljmp push and push out repz lea jl cmp pop subb rep (bad) push push xor xor aas pop ljmp test mov lret mov mov and push aad mov mov loopne pop shr mov les dec in fstpl outsl popa xor sarl ret cld sub data16 adc xchg pop mov pop aam fcmovb xchg sbb jne test sbb inc aaa mov and sti sti jge jecxz stc sbbl mov cmp fnstcw in pop inc mov cwtl mov inc bound cltd xchg xchg jae xchg xchg adc add mov lret add xlat dec movsb ds (bad) jmp inc xchg clc push sbb adc ret loopne push dec out dec cmp sti sub pop jge (bad) loop mov nop fimul movsb lds je mov pop inc mov mov roll xor dec xlat push sub mov popa (bad) jo mov push push push sbb push pop xchg and push sbb sbb push insb push or sbb mov pop pop scas jne ficomp pop mov divl lock cmc mov loop repnz adc repnz outsl (bad) push mov insb fldenv jle cmp pop popf add lods xchg pop xor scas adc lret or (bad) xor jp jne out cwtl icebp stc adc lret dec dec loop out fs out js (bad) je add jp sub push aam sbb mov xor (bad) fbstp push jbe pop jae sahf mov loopne test push fimull xchg adc cmp je rcrl mov add xor and call cmp movsb rcrl icebp imul and movsb fildll or inc ja xchg insb aaa ds xlat xchg sub js dec mov sbb or movsb jae push lcall push je mov test mov jmp jne sbb mov pop lret test repnz aaa stc mov lahf xor jge inc inc dec mov xchg addl push pusha repz mov xor lds adc push mov sbb lea mov cmc fimul daa jb xchg sti leave adc faddl int3 aas push js inc test shrl gs sbb lock mov arpl xchg pop jp add xchg push mov sbb mov fcoms push test jmp stos leave cmp cmpsl mov push dec cmpsb xor inc dec lods in push mov jbe movsl ret cmpsb (bad) outsl adc (bad) daa or or jae sub inc push (bad) int lahf div lods in inc xchg xchg inc jbe repnz fildll outsl lea stos inc lea in mov adc sahf pop adc jg mov xchg stos adc push xchg dec fsubs mov add pop popl rol push (bad) xlat lds aam fcmovnbe mov push mov jbe adc inc vpxor sub enterw pop sub or sub push push and mov movsb int3 shlb xchg mov insl jle mov sub arpl mov ja insl outsl cmp lahf popf sahf es shl adc jb or rorb mov test pop int or out mov aas pusha sti insl add or ret in out mov sbb popa cmc xlat lock pop mov lock test inc fistl inc aam inc dec scas adc (bad) aas lds aam aaa les mov loopne xchg mov sti push data16 aam aaa pop (bad) xchg sti scas ja cltd outsb add into and push loope lahf sbb sub call (bad) mov and sbb cmc std in pop push lcall in (bad) (bad) inc pop push mov imul mov sahf stos inc cmp int3 xor cwtl mov pop mov push mov lahf rcrl push sub or insb xchg pop je cmp lret sar sbb cmp add xchg xchg bound data16 mov loope cmp repnz dec outsb add shll shrl dec inc push push loop sbb in mov sarl mov je xorl movsl mov pop leave insb (bad) mov das fwait mov lock push aam (bad) or jnp cwtl sbb fs cmpsl sbb jnp int3 (bad) pop lds mov inc stos nop test cltd movq test add dec jge das insb push fwait sbb push mov mov dec jno sub jns andb adc push lcall aas mov out push vpcmpeqd add xrelease jmp scas jnp lea and rclb scas or mov fdivl jg hlt loop mov das pop mov mov das pop mov verr jg fnop jecxz mov add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fistl add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push and jecxz icebp jecxz cmp mov sbb dec (bad) xor addr16 xor cmp xor dec xor jne insl mov aam std mov pop cmp add or lock mov pop sbb dec clc sbb es and adc bound mov rcl data16 cltd rcrb cmp adcl jne adc xchg fwait push stc push scas pop stc sbb push add pop fs repnz mov lods jl or jb jl sub jl mov mov jno pushf popf jp lea pop mov jl (bad) mov cwtl cvtps2pd aas cmp mov pop xor lret movsl lret stc dec js popf add es lret insl push xor inc jmp shlb aad add into or sahf mov lahf (bad) jns sbb dec adc pushf mov lahf arpl scas idivb (bad) mov jmp movl daa cs in pop dec repnz cs mov (bad) dec cmc dec sbb add cs mov dec lcall insl ja lcall popf pop jmp lea inc jne xor insb scas cmp aas adcl inc push fistp stos xchg and loop push adc (bad) dec xor sbb dec and fistpll fdiv jb outsl mov (bad) cld icebp add cwtl incl jno jbe movsb fdivrs or test sub jae arpl sub mov (bad) mov (bad) repz sbb pop (bad) lds xchg mov or inc cmp mov add es fsts mov pop add cwtl stos add dec negb xor jmp xchg mov test fwait mov pusha movsb ret fs sbb loope dec test lret pop mov icebp push push pop ja dec push push out xchg push mov jbe jns ljmp mov test loopne inc ja and mov lret pop cli inc movsb or pop add scas shrl push imul mov mov push icebp addr16 addr16 adc jecxz test or cmp push fstpl xchg out jg arpl stc mov sar sbb dec push mov cli aaa xchg dec xlat or sarl jge pcmpeqw jmp icebp fmull and xchg leave xchg inc cmc jmp push or jecxz fstl pop icebp lret ds hlt imulb mov mulb mov rolb jle fsubrl popa fs mov mov scas mov daa adc subb pop faddl scas (bad) es xchg dec or loope lcall jb cltd push push mov arpl aad dec and outsb jne push and das jl push jne adc xor iret ja fs mov stc fs sub mov xorb aas call pop jns sarb dec mov testb rcr dec rol dec pop fstpt adc sbbb jecxz ret sub jmp push rcll ljmp mov fsubrs rcrb or ret movsb movsb pushf mov pop add add inc dec jo (bad) movsl jb jle sarb add ja inc (bad) int3 inc aam pusha imul sbb inc negl mov pusha xor mov sub xorl in js sbb lret jbe mov movsb mov adc les sahf push ret inc adc xor sti imul in notl ljmp sbb dec mov push mov popf pushf push bound push mov in or or das fcomps sbb or push fldl2t clc ja xor cmp cs mov and rorb aad cmp xor lret das (bad) add sti clc and scas stos and pop icebp in (bad) in sbb adcl xor rcl pop pusha idivl mov pop jne add xchg stc sahf frstor sub push adc test fimul jle mov ljmp rorl out pop mov xor cmp clc sub or or repnz dec cmc orb rcrb popa jmp lds ljmp out repz add daa pop out jge xchg xor rolb xchg cmp fs cmp std rcrb cmp (bad) imul jae and mov pop push mov or fstpl inc out sbbb subl lret sbb push int3 and fidivr lahf fnstenv mov andb cmp pop psubsw lret xchg rcl sbb cmc shr aad mul data16 inc mov (bad) aad ret out and cwtl repnz sub out movsb pop push mov (bad) mov mov mov add or push mov pop cmp xor xor xchg bound sbb icebp jl fnstenv inc lret xor fsts add sbb leave cli lea (bad) pop jmp rorl mov loope mov lock adc sbb in inc mov lods mov sub sbb inc insl fwait mov les pop mov inc jle lret pop je xchg cmp pop xchg dec inc jmp (bad) (bad) jmp insb adc enter loop mov fsubrl mov or test icebp inc dec test cmp pop add push cmp xor ds adc jo jnp dec pop mov (bad) inc cmp push sti sbb jl int jo,pt lock arpl push jnp mov jae mov add lds adc sub in pop imul int pop test xchg ljmp push out dec push in in mov and (bad) cltd jl mov inc (bad) cmpsl mov and jle push lods inc adc pcmpgtw mov lcall xchg data16 mov mov sarl in sti (bad) leave incb mov sub push xchg ds mov cmpsb hlt aad in mov jo sub movsl movsb out cld mov jne fwait mov popf mov mov sub cmpsl push inc cmpsl cli push clc push test pushf dec jg hlt arpl xor jns psubsw (bad) adc shrb (bad) pop mov das adc stos test xor (bad) push loopne inc or and fsubl dec pusha add les mov (bad) rcrb dec jg inc or pop mov jmp mov adc dec test (bad) jp stos adc fs (bad) rep test xor incl imul sub mov incl jmp jbe out ljmp arpl sbb inc inc scas (bad) jbe pop cmc pop popa pop les pop loop notb jg and in jge push sbb cmpsb ss les xchg ret or outsb stos outsl stos mov mov cmc or daa push js pop xchg pop add push daa mov dec std popf xchg rcrb lock pop push (bad) xor (bad) jge pop in scas sbb add xor (bad) int3 or fimull popf jmp dec xchg push mov mov sbb sbb enter adc imul pop push icebp sub cwtl outsb cs adc sbb mov pop or pushf push push jge aas outsb fs rorb (bad) jo outsl xchg push aaa jne shrb xchg sub in mov mov fdivl cmc aad ds imul stos sub mov dec inc pushf test push fyl2x cltd les cmp mov imul mov or (bad) jns addr16 test or call rcr mov pusha insl mov jnp push xor stos or es mov dec xorl pop clc enter lods mov mov je push pop push std mov out cmp subl (bad) in test gs fmuls jl fdiv aaa fwait add lret fsubrs (bad) sbb jbe cli inc mov cmp cs in push mov push xor loope mov sub mov pop fcomps adc cmp adc mov sbb jns imulb enter push fisttpl invd repz lds dec sahf jp fildl jo sub adc xchg cli inc mov in pop mov jl out cli jne mov mov (bad) call or pop out repnz push icebp sub iret fwait enter aas mov pop add ret es dec cmc imull bound mov js in jnp lcall inc int hlt mul jecxz or daa insb jmp jecxz leave scas mov movsb maskmovq notl sbb int repz ret addr16 add out js cmpsl jo dec fdivl pop push mov sub sbbb xor fldcw jae sahf mov push mov sub xor stos inc push ret adc pop (bad) sarl xchg pop arpl popa pop sub push jns xor test lods sub pusha sbbb and mov ss sub adc stos cwtl mov pop call shr es pop lods xor add lds adc loopne dec add lcall in repz mov movsb fidivr push push addr16 incb adc std jmp jbe icebp sbb cmc push (bad) fwait mov sahf and jg insb add divl in pusha sub adc ss iret adc lds sub sbb inc mov xor or stc in mov mov lock sbb testb add (bad) sbb fdivl stos mov imul xor or pop (bad) sahf test push xchg add mov repnz xorl in ja mov stos call jne sahf ror addl and je inc dec sub sub fldl2e aam jl xchg popf and into bound stos cltd dec mov fwait mull push jmp popa and out mov (bad) out js aam lret in jmp or icebp jle sub xchg sub mov pop loop mov sbb ds aas aas out pop mov clc sub mov ret int push dec enter add fisttpll mov into dec mov in rorl ret jle pop ss mov nop lahf inc xor fnstcw in mov mov rorb sub xor xchg jbe inc stc jmp stc xor and mov mov outsb xchg jl inc jae and sub cmp lods cmp sub lock (bad) fnsave sub aad sub inc out pop loopne (bad) ds cmp out fdivl pop push idivl test outsb or cmp mov (bad) shrl jmp push xchg icebp jecxz scas outsb or jb pop cmp xlat mov int3 pop in cmp mov cmpsl out repnz push inc (bad) lret movsb cmp inc push (bad) mov or test in pusha or sbb scas sbb (bad) fild dec dec mov gs jecxz fidivl and xor push sbb loope daa sbb dec hlt pop add lea repnz aad rol mov cld pop fstpl pop xor test sbb jp dec lea aas movsl mov mov jae daa add dec (bad) lcall mov mov mov into xor inc jge mov xchg and fldenv adc rclb mov ljmp (bad) or dec or cli or push xchg fldenv int inc xchg scas out js cld pop pop insl pop xchg and stos sbb mov subl outsb aad (bad) jbe stos out insl lahf imulb cmpsb dec xchg icebp cmp ret dec mov xchg cmp fldcw pop jmp sub hlt scas ficomp out pop sub in push cmp pusha in outsl test out pop cmp mov cltd in push mov pop dec pop std call or in pop shufps loope xchg push ss xchg sarl sbb lcall popa out fimul lods arpl xor sub insl outsb (bad) outsl loopne mov cmpsb cmpsl (bad) ja push xchg lahf cwtl xchg cwtl jns mov movsb push dec fbstp lea mov neg mov and dec lcall or enter nop mov fwait mov dec fisubrl and test add cmpsb sub jne dec stos pop in test sbb jnp adc push dec lock insl in dec pop jne cwtl push (bad) push aas iret subl imul es sbb (bad) xor out inc hlt cmc cli push mov ss and mov sbb addr16 sub test inc pop icebp outsb inc (bad) loope data16 or out cmpsl add mov popf fcomip jle and dec add aam xchg int3 cli sahf pop lock or xchg jge enter add and jp jns lret or add xlat pusha popa popf out xor jnp bound xchg sub ljmp pop cltd into or fidivr add mov cli insb push sub je adc flds or dec inc call fistpl sahf mov into test loope insb (bad) push in (bad) (bad) data16 xor fwait xchg inc xorl mov mov out dec out jno imul fwait dec sub xchg std dec std push rorb aam in lret rcrb ja outsb inc inc aas add or mov pop rcrb addr16 enter ljmp dec dec mov sarb dec dec pop sarl inc popf mov push sbb movsb sbb (bad) lock pusha shr out es pop sub push mov arpl mov mov push int3 scas mov mov iret or sbb (bad) sti divl not fsubr std je cmp xor mov les cld sub xchg jecxz mov xor test loope mov mov or or jle lods call (bad) lock cs push cwtl pop int mov push sarb push adcb shlb jp call push cmp mov jg hlt jg shrb jmp add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ficoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb rolb rcrl xor popf cmpsl cmpsl dec mov ret jmp cld xor hlt je cmp mov mov (bad) xlat repz add mov xorl cli mov or xor fisub xchg andl (bad) stos and dec mov push sti mov movsl lcall cmpsb and jp mov xchg std lods fdivs inc and xlat dec leave pushf xchg aaa adc and lahf xchg scas mov (bad) pop xchg jne push jae pop lret mov gs (bad) xor test stos inc pusha fild (bad) jg mov xchg cmpsb add in pop leave pop in and dec in lcall in in sahf pop jecxz add cld cmp stos rorl push push xchg nop sti dec xchg into outsb fs (bad) mov js sbb movsb ret nop/reserved movsb aas out adc and fmull mov icebp add xchg data16 jno int adc (bad) or in mov dec mov sub jg dec leave cmp loop das out pop sbb loope fcoms pop pushf mov (bad) sbb pushf cmp xlat fsubl stos lret cmpsl je je mov aam mov test test dec insb sbb shrb div cmp leave xlat fiaddl push push in fldcw jp int cmp inc cli pop lret and push shlb sahf sbbb mov jns and push bound scas (bad) xchg mov rorl sbb jecxz pop add daa ljmp sbb decb push sub adc mov cmpl jg mov sbb loop les sete leave rep adc adc repz xor fs addl add mov push inc std (bad) lea hlt dec testl pop push inc pop jecxz lods fnstsw subb xchg inc jge pop add outsb aas push xchg movsb bound push daa or fdivrs or imul sti mov out inc sub ss sbb fnstcw mov add cmp fist movl xlat enter (bad) mov and sti jge cmp and push push mov xchg mov or mov add push fucomip (bad) aaa mov push (bad) ja push or pushf push movsb mov outsl xchg sbb sub add enter push int (bad) (bad) mov dec rorb and inc jno mov es xchg mov fmull add pop dec mov test pop bound incb pop int3 cli jae mov aaa sub add jno jg (bad) sbb xchg aaa popw inc push xor mov leave sub sub cs dec pop and ficoml inc ss mov push repz stos addl in pop push aad (bad) sahf sbb xor add mov mov mov dec inc sbb push xor mov adc push popa or mov leave mov movsb sbb pop push in push xor ret push (bad) xor adc orl add push xor in jnp cld bound mov and push xchg (bad) cmpsl cmp jnp (bad) outsb jl inc dec into jl pop xchg and mov cmp pop adc lods rclb mov js pop dec sub push addl xchg sbb jp push jno xor lcall push test push cltd popf jmp repz dec loop es mov iret mov jg xlat dec out push inc and jne inc test adc lods pop and dec xchg pop and and pop (bad) jae (bad) mov rclb bound mov mov cmp lods cmp inc fcoms xlat sub push pop test mov mov pop xor clc cmp mov cmc push push test fs xchg loope loope notl add mov aaa rcrl pop in jle mov push add and sub clc fldenv mov stc jg fstps mov push cwtl fidivl arpl outsb js outsl std dec xchg out in cmp cli out (bad) mov dec jnp xchg or test shrl push rol mov in and (bad) insb popa add imul push adc mov add jns cmpsb cmp pushf sbb dec iret xor insb in adc pop test loope jp mov cli pop mov in mov or and cwtl fwait lcall push push aad fwait pusha sub xor pushf popa rorl push cmp xchg fs jbe fwait aam jnp repnz jmp add imul in jg and dec xchg mov inc loopne fwait test xor mov ss cwtl mov xor ja sub cs pop and push roll nop sub (bad) loopne das mov mov jae scas cmp push xor clc (bad) frstor iret imul ds call and cmp arpl mov out arpl jbe mov addr16 out adc (bad) fildll jo ja daa imul movsl hlt fs mov push fistpl lahf std pop push sti cmpsl and movsl or push test sbb xchg inc dec inc daa or mov fcom adc fwait dec icebp xor cmp xchg mov sub and push call in das outsl daa push (bad) mov mov ret sub push pushf das push int add sub (bad) or shlb iret dec lret dec mov pop enter sbb xor fwait iret add jle stos imul sub mov pop xor pushf mov arpl (bad) test xor icebp nop push lock repz xor movsl mov lahf in sbb dec and sbbl gs dec inc movsl pop in or sarb enter fnsave jbe jne lret add add dec loope add mov cltd xchg xchg repz (bad) out inc bound frstor xchg cli xor adc inc cwtl sahf and lret xchg pop xlat fiadd fs lea push lret jg or inc ficompl mov test mov les fild (bad) mov cmp (bad) mov jge dec pop sbb cmp or in or cmp movsb adc aaa lock mov adc insb add dec imul outsl push (bad) movsl leave sbb xor (bad) rolb popf push dec or xlat test test jns push jmp mov push cltd ds adc mov scas or lds sub sbb outsb clc iret xor rcr jae sub and rcr add jge std loopne popf lods mov testb mov jecxz cld jle jle mov test pop mov sub adc call cld jg cld jnp mov jo arpl mov leave (bad) sbb ret pop stos mov xchg (bad) mov push pop cmpsb stc cmpsl add cmp push out pop mov pop (bad) or xchg loop aas jmp scas aas jo lock leave push push dec cmp add or cld cmp mov dec or stc (bad) ss std dec add fild jb in fimull ret test cmp repnz in in daa and scas adc outsl inc mulb inc iret pusha jle push imul out ret lods dec fldcw push xchg push add aas pop imul lret ljmp iret xchg cmpsl or mov ret outsb mov adc mov lods mov (bad) dec sub aaa punpckhbw mov adc fstps dec mov mov pop jmp cmp lret jnp fstpt push ja mov repz or mov ficom les int3 xchg push hlt push sbb pop inc fistpll jb aam es adc jle test idivl test xor bound sarl pushf inc sub jnp inc (bad) cmp mov aaa fcmove jnp push stos xor jbe adc mov (bad) jge adc cmovo stos lea loope fild dec ss arpl mov mov insb add int3 (bad) mov or sbb clc (bad) (bad) fs push (bad) repnz insb mov fbld aam (bad) rcl adc daa dec push or loop pop sub imulb inc fs pop mov sbb repz int3 fcmovb stos push mov mov jns sar sub cmp sbb pop cwtl push int mov (bad) (bad) lock xor fistl pop mov enter inc push push sbb xor inc popf or fistpll aad sub in sub repnz xchg fild mov xchg mov xchg adc xchg pop sbb pop pop add dec leave pop xor mov mov cld xchg fild lds adc popa add imul push cld mov and cmp xchg and inc ret ficomp call sub sub push inc pop cmc sbb cltd stc mov xor xchg mov cmp jae sub (bad) or addl adc cmp jnp mov inc xchg mov mov imul pop fldl mov sub push or test lds sbb jae jnp jl inc lcall mov or mov dec cmp repnz stos cmp jns cmp jg cwtl push xchg or jmp pop fsts sub push add jbe sub and stc push imul mov ret sub (bad) inc push add mov out cltd lcall push xor and sub sahf jo mov outsb mov sub imul inc jmp insl mov push push (bad) int3 or test jl push pop jno inc fstpl jb (bad) pushf movsl and sbbb scas dec pop pop jle mov xor adc cmc sub test faddl jnp push inc fwait xor aam lods xchg rcrb jg mov adc aad adc cmp mov test or adc arpl jne adc cmc rclb jbe push imul pusha jmp ljmp (bad) jecxz test js aam lods movsl cmc mov jp mov faddp in ljmp push fs inc test loope and (bad) andb add add (bad) and mov push mov mov outsl fcompl adc add fdivrl roll lahf hlt sbb push or pop outsb jmp cmp fistp jmp fwait mov and aam jmp or faddl add das xlat call and cmp push mov push fcmovb mov cmc das sub jbe seto cld aad inc ret sbb out push iret push cmpl stos mov test out sub sbb test bound cmp pushf push inc push aam add xor (bad) cmp cmp xchg es push sub int3 cmp outsb fsubrp sbb insb lods adc cs out (bad) int adc mov jecxz stc or cmp das (bad) pop xor in pushf out lock jecxz aam in mov or adc lock mov add cmp push rolb xlat nop pop pop (bad) in sbb addr16 mov cwtl das xchg dec sub gs sbb mov add xchg pop iret sbb dec cmc and mov inc cltd aas mov mov sbb sub jb pop xchg cmpsb mov ret mov mov dec movb in jmp shrl fcom aam dec test ret arpl in arpl call outsl icebp out lcall mov (bad) lret daa test adc shll sbb mov add sarl pop push cmp cmpsb ja,pt je ljmp (bad) jno cmc (bad) or or add push jo (bad) prefetch or add mov push mov in cmp leave and jg jg je out aaa jg insl fiadd xlat pop add adc push rcrb je jmp leave enter add sbb sbb neg imul scas adc cmp sti pusha and pop add push lret cmp mov xchg lock add aas pusha add cmp arpl inc leave mov push sbb ljmp or aaa out add push adc insl loop xchg ret xor xchg aad fmuls in clc jbe loope sbb daa xchg out test mov mov pop loopne sahf pushf stc xor leave add add pop out sti mov mov loope out nop pop scas icebp jg dec pop jno or pop push popf jb hlt push lcall sbb jno je inc dec cmp testb mov scas jmp fwait loopne aad mov adc ljmp xchg je,pt pop leave xor inc xlat sub xor mov lret (bad) roll (bad) orb and push push mov dec cmp xchg in outsl nop aam push sbb inc jbe push pop js push test mov icebp pop push ja aam fwait sub lods (bad) cmp cmc int3 or icebp loopne ja mov flds pop popf pushf push inc add scas outsl fildl mov and insl std mov push pop cwtl daa or fadd js imul outsb and es adc (bad) pop (bad) jbe xor mov mov fsubl iret push add ret xchg insl cmc out cli clc mov out dec movsb sbb sbb jnp xchg in rorl pop std xchg or dec test pop mov ljmp sbb in jbe je std adc mov mov lods into fsubrs add dec jp out push cli inc enter ds sbb imul xchg add cli pop fcmovu jp push sbb outsb (bad) jno xchg add andl insl pusha sub adc ret pusha mov xchg std jmp aad push scas pop mov stos push scas pop mov lcall add incl cli inc in repnz dec add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ficoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop adc push xor adc outsb jmp xor push ja rorb push (bad) xor mov into fistpll fdivrl mov cmp dec dec imul xor aaa mulb ljmp jmp fistpll xor mov cwtd lcall sub mov setle cmpsb ja mul fnstenv in lods or scas fcoml mov mov leave mov cmpsb push loope std faddp and inc mov mov xchg in imul push xchg jmp cs js xchg xorl arpl pop mov test jp pop pop popf jno inc imul and out enter in (bad) (bad) nop jp pop xor jge xor jne repz mov loope and pop addr16 dec cmp dec (bad) cmp dec lcall add fadd jae repnz push xor cmp dec sbb ss cmp xchg cs dec and bswap pop mov sub ret je (bad) mov clc inc xchg xor f2xm1 sbb push cmc pusha or xchg sub stos push xchg orl test sbb dec jmp outsl testb outsb jle dec xor pushf sub sbb and (bad) out adc adc pop (bad) mov pop icebp scas dec mov movb fdivs pop cmp (bad) cmc cs inc pushf cmp push sahf push sbb clc (bad) test mov pusha icebp adc call mov movsl xchg dec cwtl lock jecxz xlat je sub mov (bad) pusha bound test add adc jmp in insl loop sub mov pop push lahf cmp dec mov push addl jl sbb jno sub in stos inc clc clc jmp (bad) loopne mov dec pop mov jo das xorb xor mov dec test mov mov jmp je cld pop lods ficomp or xor mov pop dec or mov inc (bad) sti mov fwait sbb xchg add push hlt fbld push sar add cmp mov (bad) mov sahf inc divl scas xchg stc int dec test (bad) or shrl lods jg push pop scas leave pop push or mov mov xor xchg xchg jle mov inc cmp inc inc dec enter (bad) cmp jne xor (bad) int3 push or xor inc push in mov jl xchg gs scas push das mulb pop dec inc push sahf add mov aaa adc (bad) leave lods test fdivrl sub loope and inc sub cmc jns pop cltd and adc add push aad and adc sarb or xchg mov inc dec pop out and sub jp nop shrl sti mov (bad) xor cli adc push sub xor push xor mov xor test jge outsl pop scas sahf mov insl jl adc and das cmp aaa arpl xchg pop xchg imul imul cld push jo mov ret ss aaa cld cmp add adc inc (bad) js mov sarl scas mov xchg jmp aas push jnp (bad) xor pop mov stc sub mulb std aad mov ret cs lock inc into dec mov dec test inc add std xchg aaa sub icebp mov fiaddl xor push mov dec push mov sub add jnp mov xchg aam jg fidivr mov adc jne movsb loopne rorb sbb call xor and xchg outsl add je fcomps jmp cmp or push pop out (bad) jne (bad) jne fwait dec add or in ret mov cmp dec adc dec jmp xchg out out push or jae sbb lock lea sub iret mov mov (bad) jb pushf sbb test cmp fsubrs cmp mov or push pop mov jge xchg jb jp dec mov mov and pop inc sbb sub xchg sarb aad push lret mov adc and xchg or cmpsb add cmp lcall and push scas add jg out mov movsl push loopne add xchg or mov cli add rorb aas sub add cmp pop inc lcall sbb cmp pop and mov inc ja adc mov loopne in ja or jno lahf fcomip dec in or lods mov cld mov je xor xor and (bad) mov lock rorl hlt cmp jecxz out aaa add pop xchg in (bad) sub (bad) sbb dec push xor pop pop fildl fsub (bad) lods das mov lret sub jmp sub cmp and icebp enter mov jmp jb add mov bound mov rol pop xchg cmp (bad) iret ss call xor ret std sbb mov in lahf push inc jmp inc (bad) dec inc fadds push (bad) stos xchg xor arpl pop cmp mov add bound movsl (bad) mov in es out add cli xchg mov pop cltd (bad) je data16 jb (bad) mov outsb xor cmp lret sarb or (bad) in mov mov aaa xchg repnz int3 repz movb (bad) mov sub jg in ja mov outsl push mov jb (bad) in arpl and outsl xor jb lock mov movsb jge clc xchg fisttpll lret xchg imul ss int notl pop lea ret enter inc mov add fimull outsb mov jge xor sbb adc cld mov or push (bad) aad repz mov (bad) xchg test sub ret pusha sbb xor jg mov aas add movsb shl adc jecxz (bad) mov and jge pop add add and jmp les in pop push fdivrl jl mov faddl scas mov sub push pop mov cld sub iret sub jo sub mov fwait mov cmp fidivr pop fisubr or add enter sti inc jno cmp cmp mov fdivp test inc mov sub inc xchg or cli dec js push pop add mov (bad) fdivl int3 ret lock shr dec out and xor cmc fsubr adc add sbb mov or inc jp insb lds jbe cli add xlat lods mov mov push pushl dec int popf (bad) and xor sti fs ret int3 shr sub ret out scas push jae fwait pop sarb mov pop mov mov mov loope pusha inc dec (bad) lret mov sub inc imul les cmp aad sub mov xchg repz and lahf (bad) mul lret call addr16 xchg out test mov shl lahf dec sub jbe enter cli mov pop pop xor pusha mov clc mov push loope js add mov and or xor inc inc xchg stos jmp repz xchg test sti mov repnz cmc call jbe cwtl in imulb lcall stos mov stc adc cwtl lahf pop scas pop add (bad) sbb or push dec and imul lss xor movl push push les or insb aad fstpt cmpl xchg mov lods and mov pop mov or sbb lcall or inc bound int3 pushf dec xchg int3 (bad) stos or and mov test test xchg shrb test mov sub loop mov cld jmp dec loope (bad) dec adc adc cltd aaa fldlg2 xchg xchg xor pop dec jg sub stc loopne jecxz sub inc mov add sbb ficom int xor mov in mov jp in push fldpi std adc sbb sbb jno in xchg mov jb dec xor nop stos std (bad) mov cmp ja dec adc test fiaddl and fidivr push outsb arpl outsb mov adcb xchg aam imul int3 lock inc repnz sbb mov insl push in (bad) scas int3 mov dec das fisubrl jo lds mov in jle dec xor and jmp inc sub mov rolb pop test pop (bad) jo clc mov mov push aaa into in test in fs in in xor xchg je,pn xor push in je test sub pop mov dec mov and test adc pop je sub xchg orl rcl mov sbb adc dec lods mov fdivp xor mov fcompl adc or add adc std sub dec inc dec fcoms fsubrs and fcmovbe (bad) pop push jo gs rcrl clc mov mov sahf fbstp pusha mov popa in fdivrl sub fisubl inc pop sub mov pop pushf enter lds dec jbe dec inc mov mov stos icebp (bad) imull cmp insb frstor imul mov hlt (bad) icebp or imul enter iret cltd mov mov test js push shl mov ret adc add inc mov lahf mov push out ret push clc sbb add in and cmpsb dec jbe ss aad inc imul outsb stos xchg aad aad repnz jecxz cmpsl (bad) add adc lahf jae mov pop lock adc imul sti adc sarb test icebp mov jg xchg xor rcrb mov rcr test xchg mov (bad) push pop stc push enter mov mov push loope jmp dec mov xor daa out into adc push pop push adc in (bad) hlt cld mov lock ss das xor (bad) xor dec popa inc stos xchg lods mov and adc push lods xchg inc inc mov xchg jmp xor lcall test dec setnp push lea dec imul mov cwtl push (bad) mov adc lock mov cmp cmp mov xchg dec lods pop jo ds faddl cmp and imul pop pop mov cli sahf and push (bad) (bad) hlt push (bad) adc je lds pop out mov aad jnp rcr xorl push jp pop or scas mov aas (bad) aam imul xchg and les xor (bad) push add add pop push xchg mov push addr16 xor sbb lahf pop push pop cltd pop into xor call mov xor hlt sbb mov inc popf lds pop pop popa adc addr16 mov fidiv lret shrl cltd push push mov fwait inc sbb adc sbb adc xor addl xor pop adc fstpl jb push push or sub into xchg outsb fwait subl pusha inc loop stos hlt (bad) mov xlat adc xor xchg out fwait inc sub ljmp sbb mov jecxz sub mov xor xchg clc mov mov adc jne push lea insb push fisubr ja and scas add sbb xchg test fiaddl adc add and lahf fwait xchg (bad) leave ja popa stc mov cltd aad sbb sbb add sbb sbb fwait cmp (bad) sarb fist pop pop rol xchg xor push mov xor call cmp sbb ja jnp outsb sahf inc (bad) mov add lea enter and push (bad) mov mov data16 mov pop pop outsl int jb cmp mov das movsb and ss or arpl fnstcw push push (bad) outsl movsb es in int3 xchg and in cwtl imul jl cmpsl sub ret adc adc sub (bad) notl xor mov js jecxz movsl cmp imul xor pop adc push push in clc imul dec mov int dec subb and cmc pop pop xchg xchg jno pop xchg in int je push rorl nop lret pop mov mov test ficomp sbb mov cmp std inc mov lea inc pushf out xchg push dec adc leave pop into mov or xchg fidivr cmp aam adcl mov dec icebp dec dec (bad) (bad) adc fwait or (bad) je cli fwait in mov lcall jmp fistp repz mov and and jp jns pop stc sub mov adc aad pop cli ficomp mov pushf fdivs loopne test add mov cmpsl sbbl ss ljmp js cld rclb fildll jns dec aaa mov sti cs jl lcall fild and arpl xor notb ds mov jl mov loope mov cmp mov ljmp cld and push ficom shrb (bad) in sbb or and xchg xchg insl push add cltd test mov nop out pusha leave add notl js popf test insb in mov jae push sbb loopne dec pop fdiv and mov cmp std fisttpll cmc sbb push orl adc mov movsl push outsl pop mov lock (bad) mov test je and jae fsubr hlt cmp pop cmp inc push popa in and call pushl push in mov xor mov pusha enter or (bad) pop mov lret adcb ja nop notl jecxz jns inc inc ud1 mov div jge and jle sub mov adc dec in lods jae or cwtl jl stc stc add movsl roll fbld lds js loop mov das pop mov decl add incl out cmc movsb iret call add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb rolb adc cmp (bad) aam xchg ret in jb xchg je push ret pop out ja or jno cmp hlt (bad) sti jle xlat repz add aam outsb jl xlat out and mov jns inc insl ffreep push cmp or divb mov sbb dec int js in call cltd shrl outsl push dec (bad) mov xor cwtl mov movsb adc (bad) hlt push or incb mov push pop dec jno mov xchg jl cmp imulb and jecxz lock pop es push pop inc outsb add ret mov lret test inc cmp push sarb adc push cwtl or in mov jecxz arpl mov test fcoms pop test push scas and xchg stos mov push mov dec adc movsb int3 fdivrl mov loopne fisttp xchg pop pop jae test xchg xor das or movsl hlt (bad) adc dec lock fisttpll ret pop or mov iret jnp push iret adc xor mov flds and add pusha and jp add lret das into mov fcomip lds push mov lods adc inc stos sub lahf (bad) jp dec cs adc cli sarb jb lcall iret ss ret jle xor adc mov pop outsb lret or aas bsr das out aam scas jno jp call enter test fucomi andb push mov insb dec mov rolb stc cmp fsubrl inc es pusha je imul out jp dec mov xchg imul mov or and mov inc in push sub into aam sahf bound xor inc lea adc daa (bad) lock ja inc test sbb mov add icebp and lods add ret xchg cmp jg and pop (bad) fldenv imul mov (bad) push lds pop mov xor das std je imul sbb push loop and mov daa nop push scas jne xlat fstl test dec add jle add cltd jns mov or mov jo dec push mov ficomp dec inc push outsl inc stc add out es cltd hlt cmpsl sub mov (bad) mov jb arpl stc adc or jle ret sti ss dec rol imul jae cmpsl jl and stc daa bound mov sarl inc xor push xchg (bad) jge inc adc sbb loop insl into xor popf add mov adc ja pop xor andl push les sub mov sub jns cmp movsb mov es mov (bad) (bad) ficom scas jl pop push jle stos jle cmp sbb fldcw cli or icebp cmpsb rcll (bad) sub int3 dec test xchg mov jns in iret (bad) sbb dec outsl pop push push loop decb push xchg mov fdivl hlt adc pop sarl int push push das lcall es repnz xchg cmpsl dec adc movsl insl clc test sub jp jmp icebp lcall js adc cmpsb mov mov outsb loop jne pop nop inc mov subb adc push xor xchg inc imul pop push outsb leave pop rorl adc add movsl stc or shll je mov jns mov scas push aaa lahf stc mov mov scas repz push or loopne bound cld jns xor mov (bad) mov dec xor adc inc sub lea push push cmp mov into rcrb sub mov mov iret add pop jecxz roll popa mov xor lds nop push xchg aam or mov les xor jmp sbb outsl fwait xchg inc lcall les xchg mov insl sbb pop ja int3 xchg and push xchg mov les inc push int jl mov adc or pop call jo xor inc mov dec out fwait in push scas add test mov cmpsl cmp pop lods mov jb push subb dec adc (bad) stos inc xchg jo out fildl xchg (bad) mov dec test or ds aas fsubl cmpsl lods in sbb and ret nop rorl aam imul inc stos enter insb pop test inc dec aas mov out daa push cmc add sarb push pop dec mov sub call pop lods (bad) cmp cli pop cmp sbb sbb add or (bad) mov je xor mov xorl push xchg cmpsl test int xchg (bad) pop dec mul adc xor dec in out add mov mov data16 jecxz pop fisttp call jle inc xor fimull in test insl xor es (bad) cltd fcmovu add mov jp sbb nop imul xchg insl dec push mov scas or mov int3 fcmovb adc aad dec call stc data16 (bad) sarl inc (bad) dec cmp cmp cmp out adc push aaa mov xchg imul cmpsl clts xor dec push stc cwtl aas inc jae jmp fadd xchg (bad) outsb mov cmpb icebp lret shrb cmp xor add push nop jp add lods sti xchg inc inc add jb sbb popl out insb rolb mov insl clc ja test inc mov in (bad) daa and jnp aam outsl adc fs sbb movsb dec push mov mov ret sub cmp mov mov fidivr and lock or rcl dec sbb jp in call sbb ds push cmp (bad) mov cmp outsl inc mov mov fdivp fcmovu (bad) js inc out xor add das mov popa mov xor dec sub fmuls xchg mov xchg mov nop imul mov sbb int3 pop inc ret pop pushl sub lahf add pop inc (bad) lock lock ror and popa push push (bad) fwait mov mov xchg js mov not ja cmpsb mov fs frstor scas xchg sbb int3 add pop sti push out rcrl mov cs cmp or popf jecxz in mov insl xchg pushl push sub xchg sub dec inc pop lods or pop sub orl xor scas pop mov fidivrl pushf dec push pop pop outsb adc sub hlt addps or sbb out sbb push mov lret test inc xor ja flds cli dec pop dec data16 orl mov imul int outsb ret stos xchg mov adc mov leave jns mov adc pop mov mov (bad) cltd inc dec sahf mov shlb loopne mov iret mov add jmp test insb stos mov dec xor mov dec mov test and pop and sti daa rorl xchg jmp xor clc adc sbb add repnz xor stc shlb xchg push rcl insb pop outsl loope or pop xchg add cli mov cwtl std mov ja mov ret xlat sarl or push fcoml jnp xorb cmpsb add sub fwait test push icebp pop mov ja ret pop add xor mov pop inc mov jno pop addr16 push sub pop fwait addr16 jb inc mov andl xor out xor push stos mov and sbb jmp testb sbb sub mov push and xchg ret movsb xor mov lods mov pop jo (bad) repz xor push push lcall mov rorl (bad) and push negb pop adc fwait add mov leave sub shlb dec mov int3 pop addl dec xor repz pop lds sarb fiaddl adc fcmovnbe xchg xor ret push (bad) xchg insl adc test xor push cmp es jmp repz es shlb mov fistp jle jnp pop or fwait add push ret adc insb xchg orb sub mov and enter divb inc push cwtl enter je outsb orb or popa shrb fabs sbb sub sbb add test outsb lahf mov fisubrl mov cmp xchg add aad xchg mov pop push mov xor mov fbld dec mov sarb mov jno cmp mov dec fisubl fcomip call in add jmp nop jle in push inc enter sub in mov in mov dec mulb sbb xor adc xchg mov add jg data16 into cltd mov cmpsl push push lcall rorb xchg mov aad cmp lret cli mov jae mov roll pop mov lea rorb mov cli aad popf push lea (bad) dec jge fiaddl push adc and (bad) imul stc out mov push sbb lcall sbb into roll in imul test cmpsl movsb xchg and push das pop cmp lret push mov cmp (bad) or (bad) and aaa mov daa cmpsl push imul inc add and mov mov cwtl pop sub mov xchg mov mov sbb push test loope or push mov mov addr16 mov mov mov clc jno push lret (bad) test and push clc out mov bound es test call cmc sub cmp cmp data16 mov cwtl aad pop rcrb (bad) jo dec (bad) sbb push addr16 push inc lahf cmc and mov xor xlat jae lds repz xchg into fnstenv mov inc icebp dec xchg jge aam cld loopne add inc mov xchg mov sbb pop rol popf mov fcmovne int3 test mov ret out jge clc dec push adc jb mov jg mov cmp scas cld fdivrs jo rol jo xchg repz outsl lahf mov rcll cmp sub cmp inc enter ljmp jnp mov leave xor mov mov or hlt dec xor loope push jge mov adc cmp cmpsl jno loope or stc out (bad) std faddl rcr lea or rolb cmp dec inc les mov ret jmp mov inc pop (bad) push xor mov repnz inc mov lahf xor mov negb mov divl mov iret sahf and call pusha (bad) sub pop add mov mov in aad push (bad) loopne adc lods sbb ret dec or xchg gs pop dec mov inc jo sbb push les rcll mov sub adc stc push xor dec cmp ljmp gs js and es js pop dec jl movsl fidivl pushf fstps gs add cld rcrb lar aad xor adc test (bad) (bad) lock xchg out xor dec out xchg pop xchg rorl fldt loop sarb jmp adc (bad) xor hlt jecxz jo testl rcrb sbb ds mov xchg cmc mov sahf cmpsb lret adc int3 iret das mov (bad) (bad) jle mov (bad) dec loop daa mov out imul inc mov dec and jbe (bad) pop xor call dec psubw fisubr jl jp popa jg repnz sub (bad) adc out xchg test mov lret pusha xchg sahf cwtl dec xchg cwtl adc sub cmp gs leave movsl ret (bad) ds (bad) jp inc aaa sbb mov outsb push jle push das (bad) in inc popf idivl dec xchg test inc gs xchg rcll pop cli mov mov dec xchg aad sub or cmpsb push out xchg rcrb (bad) (bad) jns jle or sub cli cmpsl stc cmpl mov mov sbb xor aam inc push loope lahf mov mov test popf jle mov pop icebp pop cltd push inc xchg cmpsl sbbl push scas arpl mov jg lahf xlat sub mov add scas stc pop lahf mov dec cmp pop (bad) push jle movsl jmp inc lods movsl mov sbb loope nop push cmc mov lds icebp push add jle mov pop lea gs fs lcall gs (bad) ja mov les fwait mov mov mov cmpsb sbb stc mov inc and sub jo out xchg ss pop dec scas mov mov xchg adc inc cmp fsubrs sbb (bad) in jmp insb or loop inc loop or ror and test rorl ret rcl divb mov in or mov ret mov push sub mov sbb cmp pushf xchg cwtl out jecxz mov pop push sub inc dec mov addl ds out or mov add cli add pop loope,pn mov insb dec adc sub sub stos lahf xchg neg int3 xor icebp adc xor pop mov pop add ss xchg fsubr loopne pop jb repz imul pop nop jge nop neg in testb push pop xor cmp outsl outsb stos jno mov fcomip cmp jp sbb mov (bad) movsl or jg fwait incb das sub fucomi fistp or sbb xchg lcall and neg (bad) rcrl stos mov jl mov clc in adc sub mov test scas mov jnp pop daa jecxz mov or inc sahf dec (bad) sahf push and ficompl mov add call mov lds js loop mov das pop mov add aas inc add add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fsts add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb add lock out lcall (bad) jno rcr cmp rcrl cmpsl mov (bad) ffree xor jbe leave xor sti mov xbegin cmp into pop push sub inc arpl pusha repnz adc pushf aam js popf std dec cltd jns repz (bad) sarb or add out (bad) mov lea adc daa test inc cs mov loopne jns leave xchg cmp out lea pop (bad) repnz jp xor mov sub and in lcall sub pushf and xor (bad) jmp in inc xchg aad sub sbb and xchg cmp ljmp pop jnp aaa jecxz ja xor or xlat outsb xchg insb aad xor aas aaa lret (bad) lret and outsb pop negb clc jo call inc sbb fldt xchg and imul lcall icebp xchg ret jmp in sub push lret into (bad) add lods mov sub xchg and stc loopne fisubl xor stc bound sub in xchg fstl push (bad) int3 mov jle popa push adc add push cli sub test (bad) movsl adc vmovlpd mov fwait dec ret scas repnz shrl loop inc sub adc dec das or inc push cli push xor hlt or inc jne push sar test xor call fidivrl xchg imul xchg ret jb lods cmpsb rcll cmp xchg cmp adc pop pop cmp xchg in cmp mov inc cmc cmc jae sbb ret test sub pop mov add inc sub lahf xchg ja cmpsl add xchg push out sarb lds int3 or add pop add dec lret adc dec mov sbb push dec lods push push adcl pop xchg xchg popf cld jmp cld enter mov cmpsb and mov xchg mov icebp fcomip clc pushw xchg mov ret add mov cmc xchg adc jp popa cli sbb insl push xor fstpt mov cld xchg sahf out pop test icebp mov mov adc das fmuls and jle mov add cmp sbb jno fcoml jp mov test or jge push pop inc dec jno mov and icebp cmp push pop mov push dec and scas inc jge pop or cmpsb packsswb icebp jne xor jne add test fldl xchg jne loope int3 xchg leave xchg lods popa sbbl (bad) push arpl test lret es inc jbe dec inc or fcmovnbe nop std js loop pop (bad) mov pop push push loope out mov pop or out ja or fcomi sahf xchg addr16 fldpi adc jg adc stos lret mov ja pop fadds cmp ret outsl xchg fwait jmp nop mov fs pop jo xchg addr16 pop into enter inc shrl repz out cmp sti nop cmp jge mov jmp pop pop test out add jle outsl cwtl aas gs mov rclb addr16 and gs scas lret push les jmp sbb push cmp insl xchg xlat push mov sub gs cmp xor xchg jne push adc es push mov lea pop xlat push adc inc pop mov loope fisttpl push fcmovu pop daa insb add jb aaa and pop loope fcmovu pusha insb fldt jno pop mov sub push xchg mov mov lretw and test jb xchg sub sti pop fcomps dec subb push test pop jge inc test adc in popa dec or ficoml pop (bad) pop mov jne popa xchg sahf outsl testb or int je in outsl pop cmp inc pop ljmp idivl jo push ss pop xor cs mov jnp (bad) clc cmp std into mov mov scas pop cmp clc and jns jne andb test add xchg sub lcall mov test push mov in ret (bad) jae test data16 or dec aad sbb js mov lea push (bad) adc lcall sar mov sbb jmp or dec out lahf fsub or sti jo call clc mov mov sahf jmp inc jmp cmpsl xchg js bound mov xchg hlt pop mov pop cmp cmp repz xor lock lea or jecxz and (bad) in roll cmp movsb xchg pop in loopne mov mulb sub xorb sbb loop xchg les fcomi dec out out and lods fild idivb jb pop push cmpb (bad) sub or es gs sub pop jns inc cmc cmp lods push repnz and push in mov jno mov js sahf xchg jecxz xchg xchg push mov (bad) cmp jl cmp cmpsb (bad) outsb (bad) loope xor dec cmpsb loope dec add in push sbb pop pop mov es or test pop adc (bad) (bad) cmc inc lea notl shlb or inc lods flds sahf xchg mov adc cmp out jmp push iret xchg movsl ret stos sub fcom inc (bad) leave divb (bad) icebp fwait leave mov scas push icebp jne (bad) mov push xchg dec mov mov notb sbb and ja mov inc sub adc xchg out push cmpsb lret adc jnp push mov mov sbb (bad) or mov jnp and or fucom xchg pop clc out lret xor fwait pop and mov out and add cmp xor cld and ret stos fbstp jge repz movsl nop sahf xchg cs test mul dec (bad) rcrl movsb push push sti rorb cmp adc inc jbe cmp inc pop incb mov (bad) (bad) mov push bswap sbb or dec sub mov jo mov dec rorb out jle xchg jp imul push mov mov lea sbb sahf jno cmpsb test fsub push jbe mov fmul dec icebp sbb mov mov in lret jae out mov addr16 xchg insb sbb pop push fst push mov arpl mov mov icebp fs lahf in test mov cwtl sub in xchg aam push popf mov divl call daa dec test adcb das cmp aam ret and aaa (bad) jecxz mov xor lahf ror jp add mov mov jnp dec dec or push adc (bad) je fwait aas clc sti cmpsb sub (bad) mov lock push xor out dec fisubrl inc int fnstenv push sub mov iret jb out (bad) xchg jle scas psubsw push scas movsb sub xchg mov mov mov loop int cmp daa push dec icebp test stc mov cmpsb xor (bad) mov dec add data16 mov pop push sbb adc push inc arpl ja push jae push sarl add in hlt mov gs rclb and dec fs in dec mov std jnp pop in sub lods add add outsb add and mov mov scas fwait adc popa repz cmp dec lods orb mov cwtl sbb sarl mov fsubr test es jne daa das ret clc add iret mov repnz or jl dec add pop (bad) fcomps repnz subb rolb arpl outsl push adc push mov mov imul (bad) repz rclb js mov xchg cwtl popa (bad) mov lds test mov das enter dec popa mov jno cmp xchg int3 inc sub daa js ja lods jne ds out (bad) (bad) mov xchg sbb cmp enter jae push dec insl in outsb inc sbb inc lds cmpsl clc push xchg mov adc push xchg adc imul adc test stc jge push pop leave xorl dec clc or mov dec mov jle push cmc idivb add in negl fwait insl cmp xor pusha or xchg loope jmp xchg and sub outsb aaa in subb das mov jno sbb mov xor pop inc xor sahf push out mov or push push call sub cmp dec insl (bad) or pusha cmp sub dec sbb mov ret mov mov xor xor cmpsb imul push cmp popf push push xor divb cli push out in pop jne xlat lcall dec and xchg cltd addr16 adc repz xchg add rol (bad) cmpb sahf mov (bad) jmp mov mov xor pop mov ret push jne add enter xor rolb pop xchg dec lahf insl jecxz sbb repnz mov jb insb and jno in mov adc fst mov push inc repnz mov pop je cmp xchg scas mov fsubrl popa ret (bad) ficomp bound mov movsb pop roll cltd sub ret test stos repz cld and jmp or aaa cmpsl jg es mov iret add push (bad) neg mov sub or fadds loop xchg jbe out jg xchg out scas test adc jae daa mov push cmpsl arpl (bad) scas into movsb push test jg push fwait cmp push mov jns psrlq ficom adc mov and fist in cli add pop mov outsb inc pop lods inc cmp repnz popa loop aad test dec outsl push lock mov add mov or mov enter and jb mov mov lods loopne ja es ljmp cmp in call roll sbb adc xorb dec cmp xor sti test stc cmp icebp leave fsts mov stos sbb ljmp aam and mov cmc push pop adc adc aad mov jae cmpsb xor lds aas fstpt xor in add cs add sub sbb mov cld loopne sub xchg mov fisubr add or sbb sbb mov lcall aad xchg mov pop or data16 xchg sbb aad push pop outsl mov mov push mull aam inc sahf cmp push ffreep pushf sub mov sbb mov jg mov fwait mov mov cwtl testb test in and mov insl mov adc sub jns inc out pop scas (bad) jae fistpll out mov push pushf or sub aad mov in mov mov cmc cld das jns adc js ljmp or aas loopne stc xor gs or cmp aaa (bad) loopne,pn jp subl sbb loop (bad) arpl dec cs mov pop test pop mov xor mov add sub push lock sub add mov or cli (bad) mov (bad) pop bound cwtl push jno jecxz inc inc mov mov mov sbb adc imul stos in add ljmp mov fldenv adc push push dec sbb and sub pop scas xchg mov rdmsr in ret mov sub push xor popa repz sbb rol adc loop dec or aas ficoml and mov arpl fwait jg adc mov (bad) xor mov cld adc in sbb lock lahf push mov call js dec mov sarb fisubr mov insl out orl aaa pop mov and arpl pop push push aas fs fstpt xchg cmpsl push mov aas add xor dec lods cltd sub push mov repz mov out sbb (bad) pop jge iret xor jo push mov sbb icebp mov ljmp adc icebp or mov nop les adc mov inc faddp xchg mov scas js loope xchg int3 (bad) repz jo inc or out arpl bound ret lcall ret dec and inc (bad) push aam dec rol out mov mov (bad) popa jno xchg mov insl push add mov pop xlat fnsave lahf pop push adc jno lcall mov aas addr16 fwait repnz jg sbb imul int jo dec rep iret jbe hlt psubq adc frstpm(287 imul and mov stos nop mov xchg xor sbb loope push pop mov test add lret push mov dec dec mov cmp cs fwait xchg adc xor inc sbb push add and sahf repnz in mov pusha pusha cli mov les mov inc or in sahf jp mov in icebp pop inc jbe ret jecxz jae jg xlat pop jg incb cltd sub cli sub cmp dec (bad) cmpsl mov cmp inc xchg mov in dec push pusha bound popa and cs test js xlat sarb stos (bad) out icebp test inc ficompl and (bad) sub shrb pushf jmp jne sub cwtl push xchg xchg adcl cmp jbe nop ds cmp ret pop jl test in lret pop push xchg xor or jne and lock (bad) and xor out and add sbb mov stc sub leave xor and xchg pop push jno push loop cmp sbb roll and rolb test (bad) fucom push jmp and adc (bad) dec aaa nop aad enter js sub sahf mov sbb inc rolb js loopne addl push cmp lock cmp add jg out int cmc cld mov add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ficoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb add lock je adc jo mov cwtl sbb push cmpsb mov imul sbb pushf leave idivl imul icebp pop add add adc dec jbe adc xchg mov and and dec test mov pop mov les out ret in (bad) decb outsl xchg pop inc mov das push negl push daa pop lret sbb mov sub sub stc jecxz int3 int3 xor (bad) jnp xor aaa add mov adc arpl movl adcl stc mov bound adc movsl mov (bad) popa sbb out push ljmp jne lods mov cltd stc cli cld pop inc mov cmp dec (bad) aaa movsl shrb inc stc popa gs or push andl sbb sti fidivrl stos sub dec pop fwait jge outsb (bad) mov out aas inc push and mov jge (bad) cmp sub ljmp cld add sbb icebp xchg or sub cs or xchg (bad) repnz dec pop imulb ret movsl orl (bad) idivb inc (bad) jl call (bad) leave mov add dec loope mov jl (bad) clc cmpsb popf jo int3 test outsb xor xor lret ficom (bad) cmp dec hlt cmp xor mov jno mov (bad) insl pushf pop pushf adc inc jg (bad) popf popa nop xor mov rclb xchg inc pop stos pop pop stos out xor or decl mov xchg mulb xor add jl jg mov pop dec add das jb not (bad) mov pop mov mov in fsubp jo jg ljmp jo dec (bad) stos lahf sub mov xchg mov sbb into mov jmp jg (bad) (bad) ljmp js add aaa sti bound sbb push mov cli xchg sbb popa cmp fdivr xchg mov (bad) and daa (bad) dec (bad) into mov cmpsl sub xchg xor sbb lods dec cmp jmp or add add push std dec push in sahf insb imul aad or insl sbb loopne pop pop (bad) mov adc sbb or ds daa pop push jo jl push cs stos sti xchg aad scas mov mov fildl push or mov push clc stc popa or je adc fimul mov ds ret jae (bad) inc loopne jo xor inc adc mov cltd outsl dec js insb insb adc jecxz inc scas add xchg (bad) cmp or jae push lea sub cmp mov pop loope adc test mov in outsl mov sub mov icebp pop loope xlat mov mov fstl add mov xor xor xchg push movsb outsb jge imulb and inc adc sti mov out adc lock sub movsb jae jns in ret jle lret pushf imul sub lods fwait lcall pop xor sub std jmp dec add mov aaa xchg xchg ret cmp push aas arpl mov lock push ss loope scas fs add xor out fistp cmpsl dec xchg sbb lea xchg inc lret dec or push call nop sbb inc adc in push aaa mov ss push xchg cmc shrb cwtl xchg test sbb push pop xchg jns xchg nop ljmp cmp pop pusha addr16 test into cwtl xacquire es pop cmpsl cmp icebp sbb idivb dec scas fmul push mov (bad) fcoms (bad) je push jb or (bad) repnz fidivrl (bad) dec (bad) movsl inc fbld mov aam repz popa rorl addr16 or pop jecxz sahf sub es sbb inc adc orb test adc cli movsb push pop cmp iret mov fcompl stos scas jle stc xor cld cmp and jge mov fbld pop cld push mov hlt push std pop mov inc popa fs fildl pushf movsb dec sub addr16 xor or push dec scas pop xor xor aad sub fildll sti lea cmp inc inc push nop repz insb mov mov popa jmp mov mov loopne push in in xor and adcl xchg loop pop aad pop sub cmp stc dec adc std subl mov test mov cs (bad) inc (bad) cmpsb fstpl icebp mov stos (bad) dec popa shrb sub dec pop mov cmpsl mov cld mov mov cmp fistpll xchg push sbb stc mov jbe imul push sub add jl xchg test cmc jle cmc sahf in xor leave cli sub bound insl xchg cld hlt into adc mov xor jns mov jle xor fwait xor pop add xlat sub add add aad jo or adc rclb repz xor adc xchg mov les cmpsb jae outsb or stos sbb lret and outsl xor lods repnz int3 add mov mov sub mov mov sub hlt jae test rcll push add jle and pushf mov inc icebp das dec mov cltd das dec sub cli jmp hlt xlat adc and lret or arpl les pop dec (bad) icebp jge push mov aaa ret adc lret sbb mov sub push pop testb xchg or push sub xchg imul jecxz pop dec pop pop scas push shlb jmp (bad) mov jecxz movsb mov int repnz icebp xor dec mov ret sub push repz ret jmp call pop sbb push std jae add fbld fldt out ja loop push (bad) repz lret cmpsl loop lods hlt nop sti xchg adc cs mov cwtl mov ds out jecxz jg stos inc inc adc sbb cltd fucomp xor int xchg dec lea cmpsl jg inc aaa or dec adc sbb cmp rolb add int loop cmp sbb push jle into mov cltd movsb or adc cmp push mov das repnz daa fwait xchg popl repnz and in dec pop ret sahf inc cmpl hlt cld test or subb insb dec inc iret clc pop ljmp dec inc or jle xor pop into (bad) mov jne sbb call sub inc jmp js (bad) mov lret mov dec les movsl dec leave (bad) xor pop stos cmp xlat (bad) and stos (bad) (bad) int3 insb nop shr adc jle inc bound popa sbb xor movsl call popf jecxz pop (bad) iret mov and (bad) cmp jae scas push sub xchg test bswap enter and in lods aas xchg mov arpl inc push movsl nop iret jno fcompl push xchg (bad) push and jne scas mov movsb dec out dec sarl shrb cmpsl add dec pushf jmp inc jle mov add push (bad) push lds mov cmpsl pop cld inc cmpsb cmpsb lock shrb cld sbb pop or pop push push mov pop lahf xor push pop scas dec mov out test sub jecxz mov add insb aam ja repz ljmp ret fdivs ret cmc sub imul out xchg sub xchg das push shrb aas cmpsl pop int pop inc rcrb xor gs (bad) ss (bad) fldl in jnp mov mov xor iret jle or dec jl call out and mov dec lahf push sub loopne add cltd insb mov (bad) xlat cs push push mov and dec clc mov movzwl mov arpl aaa add inc adc mov xor jb cmp (bad) or fiadd imul jno fsts push push (bad) mov xor loopne lcall adc or pop fimul dec mov aaa cmpsb pushf cld mov adc sub lret jae divb push (bad) scas mov adc and daa adc je adc (bad) rolb or ljmp and cmp test aaa fisttpll and xor pop jmp insb mov jg,pn jl mov dec cmp pop push add cmp mov out cmp je mov test jl cltd sbbb push sub inc mov adc mov mov jp dec outsb add popa rolb jge push cs insb mov sub push push cmp faddl sub test jbe in pop faddl les push lods rcr and sar jle cmp push mov js call sub dec out add xor imul imulb or in jge test push scas pusha shrl inc push fmull leave outsb pop add add cwtl jnp ljmp fidivl fisttp (bad) cmc clc scas popf jmp loope scas repz ss jl xchg stos or mov dec lret sbb sub cltd negb cltd icebp hlt dec stos icebp in dec arpl pop jecxz roll xor out push mov inc mov jno scas movsb rcl jp mov mov mov imul adc stos xor loop xchg lcall dec insl xchg push sbb mov jno fildll fcomps jno fldcw mov or enter push mov fldl adc das push test jno pop cltd lahf sbb test pop shrb push data16 shrl add pop sbb xchg pop jecxz mov (bad) inc or lcall fcompl neg or scas test lret sbb fucomip or lds in lret cmp rclb mov or sub xor cs push test in sub (bad) push shll shl pop fstpt lret jecxz dec adc mov je xchg pop pop cli mov out rcll xchg xchg cltd mov in cwtl add nop (bad) ficom pop jo push leave mov jle jno icebp ja loope inc jne sbb mov jge sarl andl and popa arpl push into xchg enter pop inc xchg add outsl mov insb stc loop push aas ss (bad) into arpl jnp xor sbb enter in mov mov int mov dec fs int mov cs mov or adcl sbb call sbb inc add scas gs and inc cmp push nop push xor (bad) stc sbb shl mov jo dec inc fidivrl jae add (bad) sbb pop fidiv inc mov xor push cmpsl test add dec xchg sub pop rcrb cld xchg repz sub push test test (bad) mov aam mov mov jnp pop add cmp jne loope dec jno xchg test jmp mov mov pop rcrb dec jb lcall sarl xor inc inc mov mov cmp sbb mov mov pop sti outsb test pop sbb ret inc and aam mov cmp clc arpl mov dec (bad) pop push dec loop outsl aam cmp pop mov aad pop xor cmp scas or push cmp mov and xor mov mov pop insb xchg mov mov lods cmp pop daa cmp fistpl pop mov inc pushf out xchg cmpsb bound out push push sub or adc xchg cmpsl lods push and (bad) mov stos xchg sbb std nop sub push cmp (bad) movsb out mov int3 popf arpl sahf cltd push out mov popf jmp lcall loope jne cmpsb lods mov mov xchg pop test pop xchg ret fs dec pop inc sub cmpsl loop mov mov jmp mov fistpll xor xchg test call inc cmpl in int mov mov lock out out divl loope sub dec dec (bad) imul sub mov cmp mov imul test dec out je pop ljmp andl cli mov cmc mov adc imul xor dec cmp stos ret (bad) and jno sarl std sub loop sbb sub pusha movsl outsb jns aam add stos int3 test fnstsw ret dec jl test mov inc push sbb mov sbb popf and and test jge pop xor shrb dec mov dec mov adc out fimull fsubp mov sub sub shrl cwtl bnd and mov (bad) xor (bad) cld std mov push mov (bad) pop cs test cltd sub arpl fidiv je xor repz xor xor ds pop sub xchg jle adcl out jo mov out jl add pop scas loope jp cmp sti arpl idivl dec push push sbb out push inc (bad) inc out loop cmova jge incb subl repz rolb (bad) pop push sub dec xchg (bad) dec pop add mov jle sub fnop or inc xor lea inc stc insb icebp pop jl bound pop inc call lahf push mov cwtl or nop je lock dec dec mov lret add js dec xor xlat jo adc clc insb dec into jmp push adc sub testb adc xchg orb mov xchg fstpt fistl popf dec (bad) shlb rorb add aas bswap les out stos dec fcmovb sub test mov (bad) mov sub mov stos pusha push jmp ja aad (bad) mov cmp cs push cmp jb leave hlt das xor adc int3 xor (bad) into sub sub jns dec adc lods add push dec imul rorb sti popf movsl (bad) mov mov lret cmp fstl leave fcoml sub arpl add (bad) idivl hlt in xchg daa dec sahf cmp repnz xchg daa dec sahf cmp repnz pop add pop inc sbb sbb inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push aas fmull rolb lahf sahf jae imul je pushf sbb into test (bad) cltd sahf pushf mov fstp int repz mov clc mov sbb ljmp xlat (bad) cmp cmp push push daa movsb ja scas ret lods stos adc add sbb dec push dec clc push (bad) clc hlt hlt fs adc jg cmp dec cmp jo mov scas rorl test pushw push push mov aad in mov das jmp ja xor jg jle movsl fdivs pop mov andl fstl fisubrl pop cwtl mov mov into fidivrl xchg jl sub inc cmp stos addr16 push je rorb rclb mov aad mov add lods (bad) hlt cmp and cmpsb jl or (bad) insl cld pop push leave ja out loope ds imul (bad) repz in xchg adc xchg sub push mov popa fs jb fadd or enter dec inc or jmp dec mov sbb icebp jns aad mov rcrl mov xchg jbe fcmovnu mull fidivrl scas lahf and push decl lods adc adc (bad) mov fucomp mov fidivrl (bad) mov fwait (bad) cmp add fstps adc mov mul aam sub pop xchg add push mov xor fist out aaa inc test pop push sub (bad) or xchg pop jmp or cmc pop repz push inc xor pop fimul cmp xor mov lods loop sub sub mov in dec dec inc sti iret lcall push imul cmp push inc lret or adc mov xlat fldt pop (bad) (bad) add dec sub gs pop inc push xchg fsub or imul leave cmpsl xchg cmpsb pop sbb addr16 and mov loop stc push pop mov cmpl daa add (bad) imul push add leave lret pop in dec cmp in push and sarb xorl mov mov pop cld cmp adc push jo sub lret stc lods out inc fnsave push jg inc fimul and mov pop adc ret jle mov push daa loopne fs mov adc mov adc outsb dec mov sub and jmp stc xor inc jp pop ljmp imul fwait sarb negl or or popf fdivs adc add push sub and lcall repz fcoml loopne jg or adc je xor js xchg icebp mov mov in fcomi and aaa dec fdivl outsl (bad) fnsave inc out out jg sbb pop jb icebp xchg out notl in sbbb sti pop dec sti push xorl (bad) pop mov aam pop mov les push loopne xlat ret mov iret cli jle xchg hlt cmpsb adc mov pop int addr16 repz mov sub mov xlat gs pop pop pop pop fcomi insb sbb leave lock lds mov gs pushaw test cli pop push xchg rcrl dec dec arpl in out das push outsl push lahf int jne cli adc push pop cmpl xchg and dec xchg testl out mov pop or aad adc pop sub mov fbld xchg mov popa adc inc cmp repnz cmp mov adc arpl cmp jae mov xor jo jo gs cs daa add mov add mov mov cmp xchg out arpl xor and mov sub lcall add cmp hlt jmp lcall push mov popa mov or lods mov aam rorb ror out pop mov out insl insl pop roll in inc adc shlb sub xlat pop lods dec adc mov arpl shrl stos cwtl cltd outsb lock setne leave mov (bad) test cmc scas add test out pop push mov adc or mov pushf lea sbb fsubr adc dec enter pop pushf push lcall aaa adc (bad) and mov cmc pop aam jg xchg and orl je push pusha or push push movsb pusha rcrl mov cmp xchg mov inc aad inc std inc mov lahf out xor rcll lret cmpl das popa pop in pop jo dec dec mov in ja xchg test mov outsl je sub xor mov cmpsb ljmp push pop fwait or jnp scas into aas cli pop push mov ja jae or xchg pusha fidivr cmp iret aaa cmp cmp xor loop xchg and roll repnz data16 pusha pop ss xchg dec push pop mov cmp pop mov push mov (bad) stos fisttpl movb mov add xchg aam pop jns sub adc and dec xor leave pop dec jl ljmp dec mov mov and ja test jge cld rcrb (bad) pop or jmp (bad) xchg sti leave stos lcall fyl2x push xchg mov iret mov out push lahf movsl xlat push sarb mov test les push or test or jb loop mov lock dec jmp sahf cmpsb and inc cmpsb rorb pop xlat mov decl or enter xorl popa push and or add push sbb mov mov mov inc mov (bad) jbe out insl cwtl mov mov sub pushf je int3 sub xchg das js pop lock xchg jae mov mov push (bad) and idivl fidiv push jne mov cmp sub jmp jmp adc adc test cmpsl int (bad) je adc fwait div insl insb aas adc into out mov push push repz xor js outsb push cmpb adc pop imul add clc int3 gs out inc pop imul ret scas and and mov cs insb push popf sbb movsb add adc or pop pop dec xor xchg mov decl xchg ret imul icebp cld dec cmpsb and nop sbb mov add push xchg int lods mov sub popa or and mov rcrl fimull (bad) cmp icebp pop adc pop fidivr lock dec icebp ret dec das xchg pop repz or into int mov stos movsl test add adc gs shrl popa mov sbb jle add or mov mov fiaddl sbb insb pop push pop out fcom mov add lahf xor dec out xchg (bad) mov dec test mov outsb sub lahf cmp loope sbb sub inc sub dec pop xchg push xor jecxz push xor xlat addl push dec dec push fcmovnu jnp dec pop xor and decb inc es dec clc add xchg push jns lcall cmp daa sbb push pop mov mov ret in in subl pop inc lock fdivrl out enter dec push dec je pushl hlt jmp push mov test adc adcl ss jno stc sub loop (bad) cmpsl in mov iret negb push (bad) xchg ljmp sbb out and pop dec pusha jge lods pop lcall push sbb insb mov xor fldt cmp pop cmp ret mov dec mov sbb dec pop iret xchg sbb mov jl push mov xchg push decb mov adc pushf imul dec xor pop cli jg inc lret xor daa xchg jae mov lret aam jmp in pop dec (bad) mov popa pop xor pop (bad) xor xor xchg sub loopne xchg mov loopne in test push mov lock les xor add sbb pop (bad) aad cmp mov sbb cmp jno lret cmpsb sbb addl pop xchg int3 sub cmp cli and jne push sbb outsl mov sub lahf sbb pop sbb aaa (bad) lea repz cltd fmull and mov dec leave lock xchg fistpll jnp push sbb shrb xchg dec xchg cmp into pop sahf lock sub xchg movsl lea mov pop mov leave and (bad) lret xlat imul dec mov popa xor fsts dec hlt mov (bad) adc or stos inc jle mov insl push das hlt (bad) test jecxz cmp and call xor paddusb clc pop mov pop jno jae and or dec (bad) mov mov mov jns mov push push inc pop or inc clc stc inc xlat dec cmpsl pusha lahf lea add jle sbb add ss push cmp pop in data16 jecxz xchg and into ficomp cmc nop test cmp xchg js adc dec mov stos and and dec and xlat push xchg cmc or mov jns mov push dec pop dec movsl fstps mov cmp ret push cmp push repz and aas (bad) or in (bad) mov and mov mov ja loop push iret sbb dec out fs es divl xchg mov inc dec push lahf ljmp inc (bad) repnz aaa jo popa cmp add mov jae rcrb dec loopne push xlat add pop (bad) cmp mov (bad) aaa xchg hlt push popa and loopne fdivrs mov out cmc (bad) cli movsb cmp push cld ja pop in fidiv xor leave inc jge pop pop mov mov cmpsl push push mov ds out movsb nop push or stc in pop scas addr16 mov push dec xchg mov ror dec dec mov das sbb mov add loope dec (bad) sbb stos mov dec cli orb mov stos xchg popfw pop daa jge sub lret imul aad repz fisttpll push push jge popa mov sbb lahf mov fcmovnbe fbstp xchg je call xchg inc outsb leave xor jb out jmp or jle enter daa bound jp dec loopne out ret sbb mov sub loop aam inc orl sub jo sbb sbb mov ret faddl hlt daa pop dec jg popf sub jg xchg add xor outsb push xchg gs xchg fwait cmpsb rorb pop xor pop stos fimul sti mov sti shrb xor movsw lods xchg mov sbb aaa mov adc popf or xchg add icebp jno int3 aaa xor mov jmp or and mov imul pushf push fldt loope dec imul ror popf shll add rcrb lahf aam mov nop or xchg int imul ret das imul shll mov ret mov imul pop push das mov imul fs dec ret adc and insl inc aam movsl outsl inc inc jnp into enter out cmp xor adc adc pop out repnz roll push or sbb add in mov mov mov das aaa subl or xor fdivs jno leave dec adc shrb xchg or (bad) rcl pop xchg mulb insl jg mov push fmul fdivr test push arpl in in loopne xchg xchg ret test sbb jbe add push xchg fisub pop scas push cmc loop outsl add jp cli mov nop fstps cmpsb (bad) lret js push jg hlt fs je bound mov or mov imul into dec addr16 sbb cmpl add pop sbb stc punpckldq pop add jge test jbe and imul (bad) add mov insl subl inc mov cmp aad pop push and out xchg arpl in outsl xlat aad lods mov gs inc insl xor dec and outsb jp clc leave stos lret dec popf and push push iret inc out pop aad push dec rcrl cmp (bad) xchg pop mov lcall pop fidiv cli ss add and and popa test xor repz lcall mov loope jp scas dec lea outsl push mov out mov pop mov or inc ljmp jne aad movsl inc xchg xchg (bad) cs pop sarl mov jg push repz sub add sub pop lods shll pop dec pop push mov sub (bad) add sub inc adc mov dec cs mull push aaa push imul test cmc jp sbb outsl dec add test jl xor out shlb es js loopne mov fistl push cwtl push out aas sbb mov (bad) outsl imul add repnz sub cmpl fdiv cmp and lcall scas inc adc mov adc dec test push jno jl andb pop and push add data16 mov mov xor adc mov xor (bad) std xor jns repnz cmc lods (bad) jmp mov fs data16 sub rorb jle mov insl negl aaa mov cmp or pusha dec cmp push int3 cwtl or jle fwait loop mov pop push jbe xchg sbb jge (bad) in dec arpl mov ret cmp mov and aam out int inc add sub gs pusha mov js orl dec jmp jmp mov push pop jns pop jl out pop and and ss fldt sub pop fcomps adc xor out lock out das les pushf testl dec cli cmp push repz mov or popf (bad) sbb push and push and lret pop mov cld cmpl nop xchg cmpsb and jmp jecxz gs vrsqrtps jg mov das xchg cmp mov jp call push std incl add add (bad) push add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push inc adc and mov jmp dec (bad) call shrb orb inc mov sti fidivr stc je add push test mov sti pop mov xchg aaa inc imul es aam mov pop pop xor mov pop adc das xor imul mov xchg cmp add mov test call jno sub xor sbb dec jmp aam in mov popf mov vaddps sbb (bad) xchg mov pop add lds aad outsl repz stos test or rorl shlb push call sub sub mov movsl cld in xchg (bad) stos and stc orl lret inc sub (bad) in mov mov subl dec pop roll xchg sub daa cmp fldcw sbb mov mov push mov pop adc pop mov lea dec int3 bound int3 stc pop (bad) gs pop (bad) popf movsl inc je (bad) or addr16 in rorl in jb xlat jnp iret cld ret push in push or pop std cltd cmp stos push mov dec pusha cmpsl mov mov (bad) hlt sub es and aad jno cmpl dec mov jg or dec adc inc hlt pop (bad) fld aas or insl lock sub lret adc insb insb and lock add bound cld cmp jp add mov outsb call repz inc popa mov mov (bad) int3 popf clc insb pop data16 mov insb shrl mov in mov fs test cmp (bad) fs pop jno ror std test add es ss jl mov shlb int3 fldcw pusha cltd and in pop mov push mov orb adc popa test cli (bad) movsl ds inc (bad) dec add popa xor (bad) sbb out pop aaa ficompl shrl mov xchg in bound dec (bad) sbb xorl lret (bad) bound sub mov stos fwait in sbb lcall mov insb mov es xchg push pop aam inc or daa int jmp pop test mov rcrb js out lret cmp xlat je fwait int (bad) dec (bad) sub ret cmp and mov push xor mov enter jmp cmp fsts stos mov pop xor dec icebp imul add or add xchg cwtl sahf das inc sbb (bad) xchg cltd imul push int3 test xchg (bad) (bad) in imul mov pop jns mov leave add cmc js les jmp outsl int3 and pop cmc jl jmp sub dec lahf dec mov into roll mov imul sub rorl mov ret xor jo int stc adc jb cmpsl addr16 mov mov lods jae mov in shrl mov lock (bad) cli dec or (bad) dec ljmp jg imul push sub loope outsb sarl shrb in stc add data16 andps dec and push dec mov pop mov dec (bad) mov (bad) mov mov negb sbb lcall (bad) in xlat xchg rcrb aam les loope icebp rcr cmp or mov adc lock arpl mov lods jns out jl add in adc dec into adc and sbbl inc imul pop push dec fmulp mov sub insl iret cs mov lret push test fwait and (bad) dec hlt dec dec shl xlat mov (bad) aam mov test pop sub sub or sub insb mov rcl cmpsl xchg rcr movsl insb aas pushf adc popf scas lret fisubrl sbb mov dec add je or out cmp dec xchg mov bnd sarl sbb loope loope test mov inc fnsave adc fwait dec pushf cltd aad in popa clc clc or xchg movsb iret xlat adc les sub push xor xchg jecxz sub cs jns xor clc push add stc sub icebp inc lock pop insl cmpsb sub mov sub cld (bad) mov stos mov push pop push jae hlt cmp lcall adc inc or ljmp cs xchg nopl mov sahf daa (bad) mov cmpsl fdiv imul add mov cmc les into adc cmpsb loopne,pn test jnp pushf fldl2t mov jl out mov hlt push jnp or inc push int adc enter call imul sbb xor sbb sahf push jp arpl mov aas add ds fiadd adc rolb leave pop ds and mov add lods adc mov cs inc inc test frstor cmp xchg mov xchg std stc fs cmc shl inc pop es icebp iret push clc push mov int xchg dec iret sbb jecxz ja mov pop fwait gs icebp jnp subl and add sti into lcall jo mov in cmp dec (bad) insl jecxz int3 stc aam mov cmpsl jg sbbb mov sbb movl push and in lahf (bad) fildll rolb lods jns test xor cmpsl imul add hlt pop not mov dec loopne xor ja jb xchg les setp pop aaa popf divb lret push jmp or cmc mov sub js test mulb cs adc cmp inc xor jnp repz (bad) lcall jmp mov out or inc ret imul out lret ficomp jne test enter cmpsl xor fcmovbe imul cmp insl les pop cmp repnz jecxz loope aaa nop test push add outsb sbb outsb xchg jl adc fdivrl xchg pop sahf enter xchg (bad) bound mov fs aam icebp enter cs out dec repnz lahf sahf or cmc or scas ds inc jecxz stc or cmpsl xchg rclb jecxz mov dec stc cli xchg sahf and cmpsl scas inc pop dec pushf cmp cmpsb (bad) int3 in clc ret dec out loopne lret adc stos pop and fs stos rcrl jne adc dec inc int jle jbe fs xchg leave and or wbinvd aaa mov push (bad) int3 jnp adc mov test sbb int3 jle or loope inc or notl test cmp inc pop sub dec mov dec mov repnz mov mov icebp cmpl fnsave test gs data16 idivb int shlb mov inc mov inc fiaddl fmull mov (bad) xor repz or lret daa adcl dec lods mov mov and pop cmpsb lds cmp lcall shl mov icebp and es fistpl inc es mov (bad) fsts cli push sub mov mov xchg call add stos mov das jb out sbb cmp xor dec das cmp or cmpsl (bad) rcrl bound imul rorb lods aaa into jmp insb lret (bad) xchg mov and sub lods lods stc mulb push call jl orb or sub mov and push lods or sbb and iret inc repnz (bad) dec mov cmp mov push (bad) shll fucomp jecxz les (bad) cwtl jbe fdivrl xor or and aad sti push bound mov adc adc push movsb cld sbb outsb fistp mov idiv mov mov xor (bad) mov push hlt loop sbb jns (bad) ja jno inc adcl push lds lods inc mov ret adc lods popa hlt insb sahf push or int3 or mov xchg loop adc xor test lods jbe clc mov out jecxz pop nop sbb mov xor mov fs jnp arpl pop xchg sub mov inc aaa or cmp and inc fistpll pop fimull mov mov lret adc cmp pop and test sbb dec daa mov (bad) mov fucom ret pop mov (bad) sti dec sbb imul xchg jnp out mov gs leave sub mov adc test push fsubrs pop mov inc pop sbb aas cmp pop in xchg add cli ljmp pusha into mov adc lcall cmp mov je mov sti (bad) push aad and imulb adc jbe jge xchg movsl xor loope pop mov bound add rcr or cmpsb and pop cmpsb sbb jge fwait sbb stc xchg (bad) jo push (bad) push jecxz fisubrl pushf (bad) int cmp mov (bad) dec lahf and jmp cmc ret call sub cltd mov adc (bad) xor test lods xlat in mov sub ds fdivrs and cmpsb jb daa cs push clc adc pop and xchg out jmp dec imul cwtl push pop lods sahf push loope ds sbb pusha jp lret adc push mov adc mov dec add push mov xchg jge adc jmp sub inc ljmp dec scas insb iret idivl sub mov add sub dec mov xor paddq or fwait mov or lret xchg fucomip clc push outsl shlb push in mov dec sti cmc popf push cmp sub data16 mov push insb popf push jle icebp ljmp xchg xchg jne (bad) xor shrb bound es pop movsl data16 int3 sbbl add ds mov int and xor push je movsl mov sub aam sub call dec shrb hlt fwait and cmpsb cs cltd jp (bad) call repnz or mov out outsb fldl daa je (bad) popa mov mov jecxz out xchg sbb push stc gs fsubp sbb das dec arpl xor sbb lahf and pop mov jo cltd and sub pop int3 push sub fstp dec stc fisubr adc mov xor mov adc popf outsb or push loop mov pop jl adc inc aas pop jmp push imul push ljmp dec and scas inc mov aam in or cmp int xor pop xor adc out mov loopne inc inc cltd clc sbb push dec push jne (bad) loope cwtl add es cmpsl notb adc (bad) inc and push cmp xlat jmp sub stos cs lds pop mov lock mov int3 mov arpl icebp adc mov mov ror xor xchg test xchg push xlat mov insl and pop dec out pop rcr mov (bad) das mov rolb or lods fwait add and adc add lea cmp fbld lret xchg lea imul mov leave xlat imul jl sub mov xchg scas push inc adc push and daa mov mov mov fidivr in inc pop outsl iret je sahf jb xor inc je push cmc int3 ficom push xchg ror add movsb cmc xor addr16 mov jecxz adc jecxz shlb lods sub dec ret (bad) mov xchg cmp cmp dec adc dec push mov test or std stc xor inc subb dec mov xor in xor mov into pop pop jecxz sub (bad) gs setle push xchg ret cmpl (bad) insl xchg mov bound adc push cmp popf pop iret scas or sub jb xor fidiv cli inc sbb pop cmc aad (bad) aam in jno xchg mov or push pop popf (bad) stos shll dec push js cwtl hlt inc mov mov dec fcmovnu mov mov xchg jp (bad) push xchg sub rcll fnsave xor add lea daa or aad inc pop mov (bad) in imul pushf dec push test std jp inc sbb inc mov ffreep lret add push (bad) loopne xor outsl clc push ds call aas mov into pop dec test ss loopne sbb xor add and fmull scas nop out test sbb rorl push mov imul ret jge fs push adc (bad) arpl mov repz pusha mov xchg cmp xchg nop aam cwtl out jbe cmpsl mov addr16 or inc mov iret mov outsb pushf mov addr16 cmpsb ljmp pop mov or std lods xchg cmp es faddl add iret jmp cmpsb pop out mov movsl xchg out pop das jbe jnp call into add out xchg in jp push outsl pop es popa (bad) pop mov (bad) cld cwtl fdivrs out jg push clc lock ficoml dec pop fimull les clc out sbb mov lea pop lods mov incl add sbb sub xchg jmp fcmovbe js ret movsl sub jae cmpsb mov jg fmuls pushf pop cwtl clc cmp adc inc dec push cmp aad outsl loope jmp cmpsl xchg sbb (bad) scas aas adc movl repnz fisubl mov addr16 mov mov sbb enter cmpsb idiv xchg dec cli or nop or adc adc aas rolb rcr fistpll jg sub or or and jns lods cmpsl xor push push sub mov jns arpl leave and sub xchg scas fimul xor mov jecxz std daa xchg adc insl in dec sub push je xlat or push loopne and push or outsb push (bad) ja fnstsw jnp out fnstsw jnp out (bad) fild add pop pop xchg in jle push add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoms add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop adc adc movsb mov dec mov dec ja xchg xchg sbb int inc movsb dec dec push cmp or rcrb stc sbb pop add sahf add fildll pop insl sub sbb shrl pusha cmp lods mov aam lods cmc dec shlb add mov xchg mov (bad) out insl lret stos ds jge mov (bad) jecxz aas mov scas mov loop jb xor (bad) push aam adcb jle cmpsb mov cli xchg rcrb xchg mov or inc cmp lods (bad) loope and xchg lcall (bad) xchg call pop ficom fs mov icebp mov cltd cld inc add es lds repnz js dec inc fstps push popa xchg mov sub jle roll test jp insb cmc add ljmp mov js xor sub cmc loopne pushf (bad) adc cmp out stos pop cmp pop sbb outsb ss jl dec cmpsb adc inc inc mov mov xchg push sbb sub in push movl (bad) sub das ret jg pop mov jmp clc outsb in xchg lahf push into xchg adc out pop jp shll add pusha out sbb and jecxz xchg or mov movsb clc push mov sahf sbb adc adc cltd add cmp mov fwait aas pop push adc inc sub mov cli xchg and aam test push lds mov ds push add dec cmp movsb rsm outsb push aad ljmp popw sub cmpsl pop int subl lcall in adcb lea iret adcl cmp rcr cwtl cld (bad) mov mov pop xchg inc inc and shll push movsl mov jmp dec in loop daa mov xchg cmpl test push mov jnp pop mov fwait arpl imul and (bad) lret enter or push in inc sbb outsb ret rorl push ss dec push gs test dec xor roll pop mov out enter sbb lret fisub pusha sbbb in mov and shll push stos scas fs adc pop mov jg xchg sbb imul sahf outsb inc cmp or (bad) jno push cltd adc outsl mov mov inc mov stos fsubs fbstp xchg pusha divl sub rorl pop int3 sahf mov or inc ret and adc push out cmc insb inc jle pop std jge lds shll xchg leave push and xchg dec sub push sti jnp cwtl pop sub ss jno es jl cmp push sbb lret clc stc aad out pop les and stos js lea inc push lret rcrl fildll aas aas dec sbb pop cmp ljmp incb xchg imulb int mov aas (bad) clc cwtl cmp inc push jl rcll sbb orl mov ficompl dec daa inc or push in fdivs jl das jo adc data16 pop push out mov add fwait hlt sub push insb xor loope cmp cmp imul (bad) arpl shrd inc fmull cmp imul fwait push mov and xor xchg xchg mov stos and (bad) pop (bad) sub xor fisttp aaa into sbb cmpsl adc jle repnz (bad) daa daa in and int3 adc stc sub cmp sbbl pop movsb mov push mov mov sarl cltd std dec movsl jbe ja jae lret fucomip sarl imul roll data16 test push (bad) fimul mov mov push mov sub and fmul sub or add gs mov and xchg scas rcrl sub andl mov jmp es and add lret jg addr16 cmp or imul test push in ret inc inc popf pop push lods loopne test inc adc lea sub sbb in sbb lds stos loope cmpsl loopne inc dec xchg mov xchg flds xor jo dec repz pop int3 test mov stc pop xor insl pop inc adc or and or mov mov icebp sub add int movsl clc mov mov sbb pop push bound xchg dec fldenv rorb and in loopne fdivl jno cmp adc mov mov subl adc call dec adc sahf out lahf xchg cld lock lods or and mov fwait les outsb ret (bad) out push sahf inc pusha adc dec cmp ret mov in pushf stos int jp sbb stos lods repnz fidiv aad xchg cltd aas ret (bad) adc pop inc (bad) lcall cli stos or push adc aaa adc lock xchg std inc test xorb insl adc aas and (bad) push (bad) sub es inc or mov push dec adc cmp stc mov sarl or push adc dec push clc add xor jge idivb popf jns pop ljmp mov ja addr16 mov cwtl (bad) mov mov icebp dec sbb outsb lea cmp fcomp ja pushf mov bound jno in cwtl sbb incl lret xchg rorb jae imul rorl xchg xchg mov cwtl aad inc ret xchg jecxz mov ds loopne and clc scas mov add pusha lret ret jno add cmp pop push cmp sbb xchg sbbb push dec arpl add sub push fwait push lahf repz cli jo dec push loop call jl xor jl adc (bad) xor mov and ss out (bad) mov cs aaa cs imul pop sahf inc dec sub daa popf mov fmuls scas xor fwait (bad) test js inc or lock push and dec mov out pusha push xor add call daa es jo mov sbb ljmp neg push inc push iret out dec clc dec dec nop pushf fnstsw imul jns icebp (bad) icebp ss push mov jmp pushf test popa adc (bad) or call push dec xor in dec and fstpt repz cmpsb in in jbe inc push and lahf jae push xor pop stc data16 mov cs push pop aad mov leave inc xor inc iret mov lret and ret push pop mov pop fwait pushf cmp test mov or xor mov push rcrb mov imul sahf aas stos jle imul loope xchg mov les cltd mull xchg lods cmc cmp push movl mov xchg mov mov fsts insb xlat je fwait out mov and lods iret in cmp lods push fwait jecxz xchg lahf scas das pop cmp xor sbb add cmpsb push jb mov adc mov arpl in xchg dec fwait lock jne adc and xchg push cltd xchg push (bad) out cmp cmp cwtl arpl inc cmp mov adc fistpl addr16 (bad) xor in rorl mov dec insb into out pop add cwtl pop dec cmc add inc jl push pusha mov mov inc inc icebp bound dec inc rcll mov jg jmp mov dec (bad) jne shrb mov inc fcomip mov int dec lods lock fwait sbbl cmp bnd adc lods arpl cmp cltd leave cmp mul and sbb xor fnstcw mov test xchg jge xchg adc jne cs icebp mov jge and js js xlat lods movsb faddl loopne fstpl xchg mov (bad) data16 cltd inc sub por data16 cs bound aam out jae sbb or aas imul inc push (bad) or jo ljmp xchg jne je mov mov mov lock sub sub xchg in mov push and test pop cli (bad) aaa adc sbb xchg jg pop sahf insl je test js div mov (bad) (bad) adc sahf jnp shll push pop pop test shr adc inc push sti push and fsubs outsl or test fwait addr16 mov js sub movsl push loopne xchg cmp lret sbb (bad) ljmp jg out and lahf lods jo pop mov fwait movsl inc mov inc lahf insb jle sarb cs subl mov pop inc lcall mov adc sub mov pop and pushl mov test cmpsl cli mov fldl inc dec mov adc subl jge (bad) xorb jp aam fidivl sbb push jbe sti iret lret dec loopne jbe push lea data16 sbb push lret (bad) push pop pop push dec mov aas dec inc xor in add mov jle clc dec out leave inc sub cli scas sbb cmpsb psubsw (bad) pop dec pop mov adc ret inc ljmp and cmpsl imul mov xchg lret fs lret cmp ljmp jnp dec adc (bad) aaa or mov sub (bad) mov add sub rcll sub push ljmp stos jbe out sub std call push nop mov jmp add sub lods cmpsb mov sub es imul lahf in popf (bad) jg pop fs cs fs sahf sub js cs int3 dec call clc ds jbe jg cmp push outsl mov cmc pop sbb mov dec pushf add ret lock and es pop adc out lds (bad) hlt fadd mov xor xor and (bad) jo movsl paddw or inc lods scas (bad) hlt arpl jge mov lahf jne mov mov pop xchg popf add xor mov push loope ljmp inc pop mov aam mov les ficom sahf dec loop xor add (bad) aam jbe adc xchg cld push dec add fimull add aad cmp cmp mov jne sbb inc lret inc cmpsb cmp or and movsl adc cmpsl inc push hlt jl cmp aaa add sahf loop loop adc ds stos cmp mov lcall dec dec and outsl in inc insb jmp and push push int3 outsb daa push (bad) aam stc in and cmp popf jecxz movsb sbb (bad) jae fimul (bad) sarl jmp mov cmp (bad) fidivrl dec xchg dec mov daa sti push (bad) jns insl js cmp (bad) jae push out dec dec and push dec scas mov je cmp out pop int bound dec jne jnp jae cmp loopne lds push add lcall aaa mov fwait loope xor (bad) xchg mov pop aam jmp lea rorl dec or pop movsb mov adc sub cmc pop push xor jecxz mov (bad) sbb (bad) push cld and shlb (bad) xor repz cmp fxch cwtl stos push fst add movsl sahf out xchg imul arpl sbb jbe clc subl xor hlt adc cld setae xchg inc loopne or (bad) in and inc push mov or add mov jecxz dec gs test loopne xchg cmp pop lret bound ss les xchg inc push push inc (bad) xor bound insb ret lods and xchg jmp sahf dec daa mov in pop pop mov pop and add pushf out jae rorb adc mov popf lahf mov inc cwtl cwtl xor adc mov or in inc sbb es movb data16 pushf inc push mov lret rorl jnp js ret rcrl mov mov out aad pop das xor and sbb stc and mov mov movsl das xor cld fidivl (bad) xor dec imul mov jle sbb aam (bad) xchg ret jle ret inc cld xor pop mov adc cmp loop (bad) repz jmp and lcall aam pop call mov push jmp jb imul cwtl pop add xchg mov fs or (bad) mov mov in pop outsl stos mov imul test dec lea aas test xchg sahf push xor mov xor ljmp push lods pop push imul cli out loop sub pop sbb fs ja adc inc jae push dec push push and lret dec fist jecxz lods mov push or clc stos mov ds mov sbb daa xchg pop jae mov push pop addr16 push and (bad) repnz out jb bound mov andl and and fistpl mov es (bad) cmp and mov cmc sbb scas inc xchg mov movsb stos call outsb pop xchg inc stc push lds and icebp shr sub inc jmp les xor ss mov mov flds lret movnti mov inc scas jae push cmc mov icebp add xor push inc adc shrl fsts scas sub idivb xchg push push mov enter mov or mov mov and movsl ret adc inc cltd movl xorl loopne call xor repnz std popf or xchg aas nop mov in les rorb and negb jecxz pushf bound adc mov (bad) mov mov add icebp mov fld pop xchg cmpsl ja cld jp sar loopne outsb push push fsubl int and subb rcl mov jmp add add stos arpl movsl or push jmp or cmpsl and add jp sbb mov sti bound or out mov outsl (bad) mov clc inc push mov bound fdiv xchg scas xlat inc jmp adc dec lcall cmp bound mov inc dec xor or je loop and scas adc mov mov imul stos dec add or jg shrb jp ljmp jp ljmp jg pop xchg icebp in jecxz cmp add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb rolb xor loop jmp lea mov (bad) je pushf jmp ret in cmp xor js out sti xor add xchg push sar iret popf int movsb jecxz mov dec ljmp movsb xor in inc or inc pop addr16 ljmp divb ljmp insl cmpsb pop outsb mov xchg xor sub jns jbe js stc out mov popa dec ffreep lea lret add and inc loopne (bad) mov les nop push orl test inc sub xchg fsubl xchg mov jo ds or out push cmp mov lahf sbb pop dec or (bad) adc mov pushf inc jbe add rolb fisttpll call dec push fidivr mov data16 ss xchg or test lret call fisub popf dec out mov jbe dec mov fnsave int (bad) popa aad mov popa and iret push xor dec pushf decb dec mov lea and (bad) xorl pop std lret xchg js jnp out orl jae lods int add pop or daa insb mov mov scas ret xchg es push mov xchg lds xchg (bad) aaa jmp out xlat mov sub movsb cmpsb sbb dec hlt mov mov ds (bad) imul call cmpsl inc scas icebp add es imul (bad) dec mov fiadd or sbb mov pop es dec jne (bad) rcpps pusha adc mov dec dec push outsb sbb imul mov int add (bad) inc pop push mov arpl pop fistp lea mov insb (bad) call repz inc in pop inc mov loope inc iret pusha push pop sbb out and jle sarl xchg (bad) dec bound ljmp cli mov ja imul rcrl inc mov dec fnstenv negl add jecxz je jl dec loop rclb cmp mov and mov jp gs mov nop mov cmp push jne (bad) pop bound xor pushf (bad) push not pop lret fldcw sbb xlat imul pop ss xchg push adc add aad pop std or sub dec scas (bad) in pop push mov in push jg popf imul mov and dec loope outsb loopne stos xchg bound xlat sbb pop dec jge lret cmpsb xchg call and movsl lahf shlb adc lds lds ret cmp imulb scas enter daa sub push ja xlat cmpsl jg xor mov (bad) or fs clc push sbb inc shrl out sbb cs sbb mov cs (bad) mov ss dec jne inc (bad) mov aam push hlt sub hlt (bad) adc xchg xor lcall mov inc je roll and popf popf mov fsts mov mov int jo push and dec out sub cmp gs xchg cmp jnp testl inc mov jle iret mov sub xor mov dec iret dec out frstor sub fstpt addr16 fbld sub inc xchg cli pop ret mov hlt mov aas call mov dec dec iret dec xor fcom dec push icebp insl cmpsb ja or and xchg fdiv pop mov loopne push movsb mov gs push cmpsl sti and je into jb or mov jbe adc or aas pop push cmp sub push enter jns mov nop leave mov pop lcall (bad) lahf mov xor rep ja mov gs push mull mov sub in mov add adc xchg ret std xchg adc sbb pop push leave pop mov sarb jmp and push adc mov xor push movsb int (bad) or xor (bad) pop lret cmp dec xchg push dec insl jmp push outsl xchg mov jo jp enter decl icebp (bad) aaa xor lods xor (bad) pushf hlt xor mov add and adc dec inc mov out lea fisubr in test scas hlt xchg xchg ficompl pop imul test repz fisttpl jl dec sub ret jg jne movsl mov xchg aad daa fcoms sub adc negb movb dec mov mov mov fdiv jp mov loopne daa jle and mov push sbb ret (bad) out (bad) imul arpl add sbb inc in je loop jg add push push clc bound addr16 push enter in das dec mov pop cld push rcr dec mov push int lea pusha js clc xchg pop cmc dec dec repnz and push push loop mov ds test add out decl aaa test (bad) je ret pusha insw js cmp sbb js jnp aad sub pusha mov fist mov pop pusha xchg fiaddl sub popa sub push sbb call ds enter inc dec jp lret cmp stc mov ds insb repnz sub out push (bad) bound out insb orl pshufw rcl imul (bad) aaa clc mov sarl xchg data16 mov ljmp insl fdivl push jge xchg jge (bad) cmpsb mov add or stos aad js xor ljmp lock push movsl xchg dec xchg daa mov mov rolb in bound mov xor cmpsl sbb jp dec rcrb andl pop push imul cwtl outsl call aam sub sbb (bad) push or sahf cmp inc mov lcall fildll cld in dec aaa push sbb cli hlt add xchg enter jns daa out stc bound mov adc loopne cmp adc (bad) fmull mov ret cmpsl (bad) test sbb imul das test dec and mov xchg test or aas gs adc jmp dec cltd cmpsl ljmp jmp imul (bad) mov push out enter xchg sub inc insb pop jns mov push (bad) xchg fwait imul iret cmp xchg mov jns and int3 fisub fisubl lret jle jb sbb push or jle rorl or dec sub scas daa out mov shrb cwtl nop push es xchg jb push fildl (bad) pop pop js addr16 xchg sbb dec movsl mov jecxz lods das sbbb jo push xor fabs (bad) adc das inc mov icebp push test jl (bad) lock mov push inc sub or xchg icebp cs mov leave cmp sbb push arpl lret mov inc inc mov push lahf sbb cmpsb jne imul mov push inc xor xchg jnp dec mov subl add push arpl repnz cmp enter dec dec stos or dec scas out enter and pop or mov cmp int3 movsb sub adc (bad) jno xchg push dec orl (bad) mov mov or je sub push aad sahf movzwl inc in ja sub (bad) jmp sub int pop int3 inc cmp aas sahf push mov aaa or enter jecxz push add mov sub xor adc mov daa jae int xor lea movsl decl ret cmp pop jecxz fstps mov mov lret mov cmpsb dec arpl popa adc fstpt test ljmp sti cmpsb std dec test mov repnz sbb mov js imul cmc jg,pn push or ljmp mov test mov cmp nop jae outsl adc lahf fcomip loop iret lret sub fistpll mov add jns sbb imul test shll jnp lds (bad) push sub fmuls cmp or push (bad) movb cltd enter fs or scas dec xor imul dec enter pop je fstpl imul hlt lds jg int sbb xor pushf out add mov jle aaa stos inc lsl xchg push jl push outsl sub ficompl jge inc stos roll add and sti inc pushf xchg enter mov xchg nop fwait sub pop inc push jnp jp inc push cmpsl inc mov insl scas sbb les inc adc movsl ja mov sbb fxch jmp or fs test (bad) fbstp mov inc mov jge jne scas push add or mov lcall stos pop cs rorl jmp scas inc cmp lods sbb movl je mov add xor pop cmp popf jmp lock xor sarb fidiv xor sbb pop mov mov and cmp mov inc aas pop leave jmp sub sbb aas pop mov in mov mov pushf arpl sbb jl pop dec aad xor fsub push fdivr js scas xor inc xor xchg push xchg or cld ret mov lock push js insl cmp mov stos in out xor cmp jno int3 rol inc dec xor adc cmp ss and cmpsb jns pop or jge adc std and sub mov cmp es call pop xchg xor cmc xchg xchg or arpl cmp mov aaa outsb test jg cmpsb frstor pop in syscall aam mov cs enter dec rorl in call loope ljmp push mov (bad) dec fildl jp into jmp in push mov cwtl lods sub faddl insl dec pop arpl outsb rorl bound ret push icebp lcall push xor ds adc lcall daa loope pop arpl or data16 jmp and movsl sbb out add and rcr mov push add mov inc mov and mov jmp scas cmp mov faddl xchg dec (bad) je cmpsb pop js enter (bad) lock push in int3 lods cmp inc xchg enter ja,pt dec test repnz sarl cmpsb insb push loop or call outsb sbb jns or push push push mov test pop sarl gs (bad) cmp aaa jns fmull push testb and cmc pop stos sbb shll mov sbb int3 into inc mov xor jae (bad) cli insl pop add stc addr16 flds mov (bad) call lret (bad) mov mov movb iret jecxz out aam push lahf push shrb lahf and jp cmp in sbb lea stc cwtl cmp sbb shlb sbb jne mov in sub ret test push sbb addr16 and popa add xlat mov in std sbb out xor inc leave jecxz xorl cmp xchg data16 stc in jo movsl mov aaa push mov mov jmp dec das and xchg xchg sbb lcall adc in sub or or out add pop out or (bad) xor ljmp jg mov dec imul push data16 inc sbb mov scas ret lea sbb fwait xchg mov dec mov jecxz imul cmp push (bad) shll roll pop sbbl cmp out mov dec sbb mov add add (bad) mov push jge je or popf fdivs push outsb dec test in xchg lret cmp xchg outsl leave sub pop mov sbb xchg repnz mov jb test xlat jns mov popa jo loope push sarb push lret out cmpsb (bad) xchg int3 inc mov pop cmovnp mov push adc pop adc out jns mov das sbb es and lahf cmp mov dec fbstp mov aam popf jp icebp insl fisubr sti je add addr16 or icebp lods mov jns jmp inc orl pop ja cmpsl scas jb loope sbb loope mov fwait sub addr16 jae mov or je sahf stos mov mov dec insb and test xchg mov mov (bad) int inc inc in add (bad) ss push pop mov int3 movsb test cli adc mov push push jno inc ds (bad) fs fwait test mov push (bad) aaa cld cmc adc data16 scas adc ret mov mov fstpl push mov xchg mov cli data16 in cmp push mov mov jge into push call aam xchg iret mov dec or xor jecxz enter mov mov cmpsl xchg popf mov aas int3 fidivl icebp das xor adc bound imul push pop mov ja repz jle das mov xchg adc lret mov add adc sub push outsb lret push mov (bad) xlat hlt int3 scas push fmull shll shll push xchg pop in inc sub jae mov xchg push es dec lods inc dec shrl mov add fstps pop into jno inc and mov (bad) push add inc das cltd movsl inc das loop pop data16 mov sbb or sbb loopne push and outsl mov adc fnstcw popf fcoms or mov or rolb lock pop cld adc int scas test cmc add rorl popf xor inc outsb mov add in das fiadd sbb iret sbb mov push mov test out inc imul nop imul xchg daa adc jl inc in pop sbb sbb xlat sbb lds frstor outsb sti pop adc jle int xor jmp negl aaa inc out es insl std sub sahf dec mov cmp leave aam ljmp xor jmp and fbld mov insl and pusha loop ret xor lea ljmp (bad) mov sahf cmp mov iret sahf cmp mov iret sahf std incl add prefetchw nop add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ficoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop adc add (bad) xor dec xchg addb sub mov mov movsb adc movsb jnp in idivl add enter lret cli cltd dec lret rcll jmp imul sub push mov push or mul loopne test cmc or leave adc and mov (bad) fiadd test fisttp pop outsl shr aad push pop gs sahf leave fs mov push dec mov (bad) enter jmp sbbl loopne sub jle mov je dec mov ret sbb dec or mov (bad) xor push lahf rcrl test and clc mov or lret mov daa mov mov and and sub pushf rcr sbb es ja mov sbb imulb push jb aaa adc out pop int int clc test out les and jbe mov loope push rorl sbb repnz jge jbe int sub push pusha es adc push inc lahf adc popl fidivrl xlat ficompl fsubrs lods rclb repz push in cltd sti mov fsubl adc inc out pop mov xor jne loope daa jl dec mov xchg dec es inc aad pop cmp scas jnp fdivl mov pop mov sub sti jnp enter rcr punpckhdq es icebp fidivl test nop xchg in loope or xor sti iret sub movl dec dec dec icebp ljmp aam repz or push xchg lock stc pop scas in mov inc cli aad sbb xor dec fistpll adc stos and cmp sub (bad) xchg dec jl cmp pop jb sub or jg sbb bnd icebp andl cmp pop or ds in in fcoms pop rclb es or and sub fs mov orl addr16 pop push call nop shrb pop out dec ja lds rcrb out stos dec jb dec mov sbb sbb mov sahf push int sub lea xchg stc nop out lds jno mov stos std cltd ficom dec push add imul or jecxz arpl movb loope inc scas fidivl adc adc mov jbe fadds mov movsl scas enter inc test lods inc pop cmpsb pop jp jne mov jo (bad) cwtl push test jbe sbb sti mov mov (bad) mov pop cmpsb stos movb mov jns fadd or dec repz fidivrl rcll (bad) call lret or int and mov mov data16 je out sbb xor jno icebp lods das movsb xor in cld rcrb stc int3 inc or jo das ret sbb push pop pop dec (bad) xor fmulp jnp and imul mov fdivrs push mulb je shrl divl xchg movsb pop mov xor jg push mov and (bad) cmp xchg test aas dec bound pop xor jmp pop cmp lods leave mov addr16 sahf fisttpl cmp inc add xor push or dec sbb inc rcr outsl mov fsubs in dec mull lds aas xchg or mov out dec pop jmp cmp imul popf jb popf jb xchg addl sub jbe or push ficompl cmpsl mov sub call sub dec cmc cmpsb push xchg xor and jne pop mov enter insl dec push push movzbl loopne xor clc pop movsb push loop xlat xor imul es insl and out ficoml (bad) and je lock sbb repz sbbl and mov out pop cmpl iret dec scas (bad) movsb lock in aas pop jno daa aaa mov dec or jbe outsb test outsl test out mov int leave cmpsl aaa cmp mov ret imul fistp push mov inc sbb cmpsb xlat int popl movsb ss fs fsubl int3 in dec mov lods fcmovne scas jmp inc and in add add xlat and push cmpsb add xchg das adc or es dec aas jmp repz cmpsb lret mov push stos and test mov pop jge loopw das aas ljmp fsubl aaa outsb push fstpt xor cmp jbe pop (bad) aas scas cmp and mov mov adc imul cmpsb jo mov iret in add cmc in iret test lret pop data16 xchg out fsubr in pushf push xor pop cmp outsb push and aaa push push outsl jne out nop pop push pop sub and push push repz hlt xchg enter adc jo lahf sub or lret test in cmp xor sub push pop loop add mov pop cld pcmpgtb daa into rcrb arpl stc (bad) xor pushf lcall andl push adc jp or mov inc mov jne (bad) xor ljmp ret (bad) lods stos test scas xor mov mov (bad) or mov (bad) xchg fsts cmp movsl out sbb clc ss ljmp mov add mul mov iret mov call xchg add dec je jbe clc cwtl ljmp out test jne loope sbb mov pop out pop xchg cmpsl (bad) roll mov xlat cmpsb push or lock sub ss cs jnp mov arpl test cmp je insb fldt aaa jp jg dec fcmovnbe dec popf stos ret repnz push mov push dec or add mov (bad) nop mov repnz pop cmp fadds rclb push pop enter fbld push ret mov iret cld lret insl popa cmpl ss xorl test xchg in add xchg fwait stos (bad) mov shrb jp test sub inc sarl fsubl pusha jmp hlt mov dec mov out hlt mov (bad) sbb outsb mov jmp repz hlt ret dec aas pop outsl or ficom or stos push add dec cs adc aas call fiaddl out cmc (bad) sub and orl cltd imul popf stos push and add (bad) dec rorl stos push xchg ror call imul add aas nop sub sub push mov xlat test pop (bad) sub or dec test sub xchg nop push ljmp loopne adc inc popa loop or xlat pop mov mov es or (bad) mov hlt sub rorl lock (bad) ja or sbb cmc fdivrs inc inc (bad) mov jns dec test mov outsb cmpl nop push mov mov aas and test movsb push pop mov push fiadd lar mov adc push pop in adc imul (bad) mov dec lods add icebp mov pop xor lahf rcr pop lods and (bad) mov cmp cld mov xchg inc fwait cld mov loope add and or dec mov mov cmp pop cmpsb mov mov ret inc mov cwtl and mov test sub adc arpl sbb ss lock push fisub sbbl (bad) fistp pop imul cmpsl inc pushf push lret jg pop ffreep mov xor adc (bad) add je mov lods aaa and das inc sub or dec xchg add ljmp fmuls sarl aaa add mov cli iret (bad) push popf (bad) jbe mov mov push fbld mov pop repnz lahf inc inc mov hlt pop pusha push and popf repnz movsb dec add xlat ja and cmp mov mov adc fadds dec inc pusha sbb jge call mov adc mov jnp mov dec test aad orl jo push sbb fwait cmp inc sub es popf xor das jbe cmp stc lea lahf sbb adc mov leave rcrb in fimull mov mov inc (bad) fucom pusha push std out loopne jbe and dec sarl jp fcmovne mov lret sbb pop ss mov stos inc lcall divb and add mov sub jg sub data16 addr16 push int3 xchg (bad) xor lea jl xchg or mov mov lea mov adc sbb pusha in ret jecxz scas subl sub jae lock leave xor add fld pop leave or xor cmc cmpsb cmpsl sbb adc jo lret jg and out mov xchg ds call pop (bad) jecxz sub or or inc loope insb insb stos clc (bad) daa rolb and movsb leave addr16 push push xorl and movsl adc cs jb and pop imul adc js repnz xchg sbb push xor adc add outsb push xor test pop in scas arpl adc push jecxz in mov sub dec (bad) idivb push add mov (bad) cmp jo inc into xor test add aaa (bad) jno mov jns shl cld ds mov push nop ljmp mov scas jge mov lea pop stos lock or inc fwait add stos movsl sahf push fcomps pop xor mov cltd pop (bad) mov stos mov ds dec out mov and add inc lock mov cld test sbb scas cmp iret push mov iret push imul or cltd mov lea xorl mov add and or and xchg mov dec (bad) not or into out jo sub jns pusha xor lock mov imul (bad) jae or loop sub cmp mov jmp fcmovne fstpl pop clc (bad) lds inc adc decl lret pusha jno (bad) adc xchg int3 sbb xchg sbb jp mov push mov jne enter push nop mov sbb fucomip hlt outsb ja (bad) mov adc cmp lcall fs outsb pusha (bad) jo loop ret roll push clc daa cmp (bad) or mov adc push cmp sub cltd xchg dec js ss (bad) enter out ret mov lock in mov add fimull outsb add out adc dec xchg iret sub insb push data16 or out fbstp test inc mov aam stos addr16 stos pop adc mov jne xchg ficomp test pop inc inc push loopne add push mov push dec dec pop push pop jmp repnz (bad) (bad) (bad) cli psrad push inc jo or mov push test xor xchg jg gs jb cwtl inc xchg loope repz xchg rorb sub fwait scas add pop jle dec (bad) outsb sbb pop adc sar cmc pop mov jp je test fidivr loope xchg jne sti out cmp iret into jle fldenv cwtl call jmp and push loope enter xchg loop xor or push mov xor add stos jne xchg push mov repz mov imul xchg lret mov fcmovnbe outsl and mov mov xchg jno cwtl test sub xchg (bad) lahf cmp fimul or mov cmp bound lods add mov and (bad) cmc xchg das mov aaa cmp movsl cli mov mov add repnz mov jmp sub xchg mov inc addl out mov cmp mov mov dec xchg xchg pop repnz dec and shll lahf test cld movsl mov mov mull or pop inc xor addr16 insl pop out cmp pop xor push xor xchg push mov jo mov cmp idivb hlt mov insl jg inc push jo push lahf mov mov fisub inc sarb call sar sbb dec je add aad (bad) (bad) in push push lods int3 repz jnp pop mov fldt jp xchg sub mov (bad) pop icebp jecxz int3 or mov sub and add mov jne hlt jb cmp cmp jle xchg mov mov inc sub (bad) loope daa push and fsubrs and jne hlt stc push pop mov adc inc inc jle lods jg push dec mulb xlat imul xor cld mov inc cmpsl mov test popl cmp sahf sbb xor mov sbb str out into and push andl insl jp dec mov ficoml out pushf fsubl jns jg pushf imul test push sub mov leave jns daa lahf jge in pusha out negl lcall pop inc adc adc imul xchg data16 out rol arpl jnp test mov mov xor (bad) xchg sub scas sbb mov fsubrs hlt sub cmpsb xchg jecxz mov mov add sub xchg dec cmp loope dec notl push int loopne fadd aas imul int3 dec fcomip int gs leave add add scas push clc sbb aam pop cs mov mov cmpl xorl mov mov lahf gs mov push cwtl inc mov pop sahf mov out test rcll icebp sub add inc rol lret cmp in sbb inc and push jae push xor mov sub lcall jg nop into sti adc push mov lods adc mov mov call xlat addr16 (bad) sarb xchg out loopne rcr xchg insb movsb (bad) popa aam in andb mov leave xchg daa dec sahf cmp repnz xchg daa dec sahf cmp repnz lcall add incl lea or pop roll add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add aad add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb rolb xchg (bad) ja fnsetpm(287 cmp fnstsw push rcrl dec dec into je dec lahf ss jge xor lock or (bad) sti jle xlat repz add mov sbb ljmp mov sbb pusha inc cmp out outsb daa sub adc (bad) lods jae xor and pop loope es add fs popa jno jmp jmp and jecxz fcompl aad loop in add mov push xor xchg lret jne mov aam mov lret or mov sub aaa scas cld (bad) scas es sti jl xor stc mov mov lods dec xor (bad) repnz mov (bad) xor jp outsb pushf dec pop push loopne scas push fmuls pop ds in icebp mov into pop repnz icebp jmp or out xchg pop inc sub or lcall das dec xchg shrl jb lods stc int fdivrl push dec fwait xor ret pop les adc adc xor xor mov lret inc mov inc daa mov xchg and mov fildll jl je cmp mov pop aad and arpl jns,pt and cld imul loop loopne cmpb pop sbb jb sbb cli inc fs lods jl cmp dec insl lsl lock add cltd mov mov xor daa fstpt sbb cmc scas fstl fwait movsb inc fwait lret add xlat pop xchg int3 arpl or and xor inc sub xor mov dec (bad) cltd xor pop dec mov inc add sbb push xchg xor cs (bad) out mov inc mov icebp ja cmc xor push push out mov jae gs xchg lahf cli dec mov neg sub push jmp pop fnsave in jne inc mov scas cmp js pop rorb mov imul pop lcall jmp test add jbe sbb stos les pop sub lret out mov into mov dec push xchg mov sub push mov stos lea add push mov pushl pop aas mov into cs (bad) sub lods mov pop jg sbb outsb rol pop pop jecxz pusha clc or push cltd pop sub push push mov idivb jge pop lahf cmpsb shrb pushf leave ss push pop cmp daa sub or or dec add stc decl jnp xchg imul int3 lds (bad) xor jle outsl out cmp fnstsw jle sub xor dec dec push int sahf pop lds popf mov mov lret test or es fdivrl mov mov adc xchg sub (bad) ja jl cwtl jo jg loope mov (bad) mov mov sub in or xchg repnz mov cmpsb adc repnz das (bad) sarl dec push fbstp jnp jle in lcall push hlt adc std cmpl aad jmp cmp inc and xor and xlat mov mov add jnp push es inc push push jae je loopne pop pop roll repnz inc add xchg sbb sub mov pop mov insl or imul (bad) pop inc lock (bad) aaa daa ljmp cmp fcoms mov cltd lds fdivrl aas (bad) jnp jle add test xchg inc pop lds jecxz stos xor adc mov cmpsl xchg mov jl aaa ficom stos adc and jl test iret ss loope sarl mov cwtl leave jne fneni(8087 fmul inc clc bound popf addr16 add test (bad) mov test addb xchg or jbe daa and push into xchg outsb push jp rclb jecxz sti int dec jmp and data16 iret in insl or mov repz fcomip and sahf clc mov sbb mov xor daa inc cmp test cld sbb loope adc testb push sub iret pop cmp add and dec out stc pushf incb es icebp mov xchg adc repz imul icebp sti and cmp xchg add mov cmp shrb addr16 push insb das lret sahf mov inc pop fwait fwait xor loop jbe (bad) pop movsl push (bad) ss cs insb fnstenv and lods pusha add ret pop ja sbb sub int mov and rcr insl jno imul cmpsl das es dec mov call stos and mov push cmp xchg inc pop xchg jne addr16 inc mov jle lahf scas repz pop pop or sbb mov in cmp scas or fs adc sbb fsubl mov inc sub arpl clc fwait pop lret xor (bad) jmp mov push add xor or (bad) xchg cmp jle jb mov cli jo loope dec stos (bad) cmp mov or xorl push cli jge stc adc dec sub movsb and pop mov lds popf enter jecxz jne fsub mov jns sbb push add imul fldenv mov and jge xchg cmp daa (bad) mov mov mov mov shlb popa xchg and lahf xor mov cmpsb add xor cltd or pop push cmp lds jne fdivs int3 std push sub sub or (bad) mov iret inc push xchg int cwtl sti xchg push les scas clc imul push adc sub popf and sbb scas mov or movsl sbb arpl pop out mov mov mov mov mov jne popf mov addr16 xchg cmp scas pop sub pop or and cltd xchg cmp cmc mov xchg push imul lret dec cmpsb lahf sub out loop inc bound push push push lock mov sahf outsl push mov push adc mov movsl fildll jo hlt cs repz loop into insl (bad) je inc xor xor outsl hlt add (bad) jl aas imul imul insl mov sub mov mov push ljmp push and stos imul sub adc les and mov leave dec sbb pop pop jb gs sub add add push shr inc mov lds out mov sbb xchg jge sbb cltd jecxz sahf lock int3 mov stc add cwtl jns in mov pop mov xchg repnz push push inc aas mov js push shll insb movsb ja mov daa ljmp adc js fadds pusha xchg push mov cmc jmp or inc (bad) and jo ds mov mov sub push (bad) lds pop mov aam (bad) pop add outsl sub int jo push loop add cltd pop jb test mov pop mov sub pop push sub dec fiadd repnz mov in pop pushf adc mov sub mov fcomp sar insl xchg push fs jns push sbb iret jp adc into inc stos (bad) cmp jg in ret fs outsl test dec mov xchg les mov or cmp xchg pop cmp dec adc jmp mov push add xchg loope xchg in cmp push hlt neg push mov xor xchg add pop mov mull push and lods test jo mov xor push (bad) mov dec xlat xchg jns inc adc mov pop push pop cmp add out jmp sti ret (bad) in xor dec (bad) pop pop and imul fnstenv lea or loopne fcmovb mov inc fistpll mov jmp inc out lahf aad shlb data16 das push sub mov ja (bad) xor cmp or sub xchg push outsb fnstenv rcll jbe adc or mov xchg les or push jp jne inc xor test fst push xor fdivrl mov jg sbb cmp lahf jmp xchg or pop (bad) and enter pusha iret dec or mov sub cmp add outsl lret testb stos call push cmp xchg dec xchg call std stos cmpsb movsb out or push inc out sub andb jle jmp ret dec mov js aam pop pop or xchg push lahf pop loope add pop push mov jbe scas rcl dec inc std mov std jp fdivr outsl gs and inc iret dec (bad) inc sbbl out mov int imul push imul add shll testl (bad) lea ds testl sub jg imul push xchg jb pusha gs pop icebp (bad) sarl out and in xor nop aad mov js inc fmuls popa movsb add mov push sarb sub push xchg call xor (bad) pushf ret aaa ficompl inc (bad) and or or push xor lret pop addr16 inc dec arpl repz sub mov pop cmp fcmovbe bound fwait cmp mov add push cwtl daa aam sub cmp nop cs sahf js pop xor fistl cwtl mov jbe sbb push addr16 fimul outsl dec inc xchg icebp cmp push bound popa or inc mov or jle int fisubr test mov xor mov inc ds add mov daa ds sub push rol nop sbb popf jns mov jp push mov sub jb mov jns dec pop enter fstpl cltd xchg mov test mov js lods jle lcall and mov push fidivrl pop hlt (bad) jp popf cmpsb ja clc pop imul xchg dec ljmp and mov shrl fdivl rcrl nop pop and push xor imul and inc mov incb leave repnz divb cmc (bad) aaa jno js (bad) or das cmp scas bound adc sarl cld xor cmpsl arpl push out cmpsb sub adc cmc data16 stos xchg xchg sbb movsl push outsb mov fnstcw sub popf iret enter push movsb (bad) lock mov mov push and jo adc cmc imul sub and dec cmp mov inc or iret xor sub pop inc mov (bad) icebp js adc jecxz mov mov pop fmul push sub arpl push das js scas movsl ljmp push push pop pop fs (bad) out sbb loope lret pop sub xchg (bad) out pmaxsw cmp in cmp test jne,pt flds sub cltd sbb xchg (bad) lret adc jl add or sbb sub push cwtl inc fildll in (bad) mov cmp mov push inc mov into xor and lods (bad) lahf int3 cmp dec add xchg stos jne xor mov ret jae lock and mov jno inc cmpsb jnp cmp inc or movsb test ret sbb ja add insw mov adc leave xchg cmpsb mov movsb mov xchg fdivr sub pop aaa adc mov stos sahf xchg xchg inc xorl mov icebp xchg xorl add iret xchg mov repnz insl flds xor xor fcoms lock ja ss cmpsb push xor cwtl test add pop xchg sbb sub fnsave lods icebp xchg int3 mov aaa scas push adc arpl lods outsb sub sbbb movsl fiadd imull stc inc add mov outsl stc (bad) inc mov mov jnp sahf lret push orb stos in or addl and pop std dec pop add adc jmp adc mov cltd push cmc or cmp cwtl ljmp push bound xor outsb mov mov imul xchg idivl fcomi in pop mov clc add adc xchg push mov mov ficompl aam jne fwait shrl in sbbl inc movsb push shll xchg add leave sub jl adc push or mov add loop jne test in popf dec test inc xchg js dec fbstp push sub loopne or sbb rcl mov leave push and pusha stc sub push jno sbb cld mov push jne inc aaa sbb iret xor cmpsb ficompl scas push stos sti mov dec lcall cmc lds xchg pop mov loop mov push cmp (bad) addl sbb out xor lret fcom aaa aaa in sub mov pusha clc xchg lahf xchg cmpsl dec std addr16 dec fwait xchg sbb fistpll aaa lret pop mov pop jle push popa xlat int3 jo cmp (bad) jo xchg mov nop inc mov and je mov pop mov fistp jl ret mov icebp repz or mov aaa bnd fimull roll xor sbb mov dec push mov repnz aad push (bad) stc push subb xchg xchg push call cwtl jns cmc psubusw nop cs mov (bad) rcr dec fild ret in pop sub mov mov jo fidiv sub xchg test sub mov (bad) pop jecxz xchg sahf xchg (bad) push popa andl mov and sbb push std xchg push jb and mov and sbb (bad) lods stos out cmp frstor movsl push xor pop sbb and pop aaa add addr16 fsub iret test push pop into mov in imul mov dec test imul js or xor repnz adc mov stos mov jnp xchg stc add lods movsl fcmovnu mov shr mov clc lock cmp into inc dec push fadd cmp jg inc cmp imul cs divl movsl (bad) sub mov push ss xchg loope pop sub frstor sbb xlat cmpl movsl loope and mov fdivs push add adc outsb aaa and and mov fs out repnz pop mov decl mov mov das pop mov mov (bad) jg add add test add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push aas sbb add lock les push jnp dec dec aaa cmp fstp adc les cmpsl (bad) mov rcr cmp cmpsb jae sti std fdivrp sbb jmp add mov mov jl pop sbb jge xchg sbb sub shrb or mov jecxz test jge inc test xchg cs ds pusha (bad) pop xchg fwait pop and and cmp or pop ja pop mov mov ljmp scas adc jecxz cmc std mov push scas (bad) cmp imul test in cmc (bad) lahf imul mov cmp sti dec pop jnp mov shrl loope hlt ret xor sbb jg or in fidivr push lock pop jo cmp pop (bad) pop in mov jbe add jge add push adc sbb adc add in push dec cmpsl xlat mov insb aam in sub jnp and adc aas pop sub push ficomp rcrb xchg pop popa repz jp add stc aam push out push jbe push cmp push add cltd sbb fisubrl inc scas test mov or add enter in xchg and daa clc rorb xchg pop jg lea sbb js insb loop orl sub repz lret pop mov jecxz test jae dec imul add jae ja xchg adc add mov mov ss cmp mov roll mov or or lret push addr16 (bad) es (bad) xlat (bad) cmpsb insl push pop insl sahf dec lods push or jg stos pop test sti push push ss cmp pop cmp fild outsb add shll ds mov insb out rolb sti sub push or mov loope in dec loop inc mov xchg xor or and (bad) subb xlat dec (bad) sub push lock aam les pmaddwd mov inc cmp repz insb jecxz cmpsb mov and jl fstps ret outsl cld icebp mov lods je mov hlt rorl ret mov movsl dec in xor and add jp and daa pop sbb and stos cmpsb pop push mov ret and mov (bad) xchg jl (bad) jns idivl mov xor divb stc ret int xchg movsb add aaa sbb fisubl inc movsl mov xor mov jg or movsb out (bad) xchg aad and push sbb test push or iret mov cli xchg mull add cmp xor push push shl mov xlat js pop out pusha sub cwtl fnstsw and push fsqrt adc subb cs imul ds sub adc pop into mov lahf out ljmp scas cmovle and jle jge pop cmp ja (bad) insl jnp jne insb movq xor fs out cmp mov cli out add push dec mov std xlat xchg pop jl ret xor push pop xor (bad) mov cmp aaa icebp pushf repz push mov aam inc sbb xchg push imul push aaa sahf push call mov cld pop cmpsl inc pop push sbbb mov cli in out insl and clc push sub dec sub aam jnp cmp add mov frstor xlat push dec pop inc pop test sub clc inc call sub pusha sbb sub mov push sar pop push clc push scas stos lret and insl mul popf and dec xchg mov push idiv mov movsb xor in (bad) hlt jmp adc repnz mov neg xchg inc data16 std mov inc add mov shr lcall fidivrl sub inc repnz or jnp push gs fmull insl sarl mov dec insl xchg aad movsl dec add lret cmp pop and js dec (bad) pop clc test cli push adc xor push mov lahf jne push loop jnp xor xor test in arpl jl shrl fldt js fcmovbe xor fnop je sub dec arpl cmc (bad) cmp sub xor (bad) xchg cmp in enter sub fsts sahf les (bad) ja inc add sbb add dec push in sahf xchg popf inc sub or cmp jl subb push and aam mov mov and enter fnop add sub fisubr add fs inc push pop inc pop push mov jb cmp cli inc add (bad) (bad) cmpsl or mov clc cmpsl mov (bad) dec xchg push in push xchg cmc cld mov xchg test xchg fs mov shl push not nop divb movl inc jge (bad) ja mov in cltd hlt inc inc dec cmp aas or iret dec cmp outsl lahf adc lret jnp cmp loop cmpsl je cld pop mov sahf fsubr mov dec and lods test (bad) idivl pop out outsb mov adc gs (bad) call dec repnz sahf mov xor vpsllw movsb lahf enter pop jl popl cmp loopne jbe jg or test dec xor pop repz jmp movsl addb xor inc xor (bad) sbb lcall lret ja les outsb inc adcl cmpsb mov lahf mov sbb (bad) xor das push ret mov mov das je imul movb ficompl jecxz movsb cmp sbb jg fnsave jno jmp shrb push mov (bad) mov ljmp mov je je pop sub sbb adc leave xchg movsb out dec cmp aad popf mov pop in pop xor dec mov movsb pop mov push fiadd sbb scas xor fdivl mov cmp pop popf pop mov enter mov flds sbb rcrl and (bad) aas mov mov test jp in pop jmp inc mov dec or mov push add into (bad) out loopne pop shll mov cwtl mov inc mov dec xchg mov add xchg push sahf call xlat (bad) pop movl into mov push (bad) mov dec cwtl xchg call cmpsl fildll mov jecxz push sub lds sub fcoms cld arpl stc cli sub and (bad) ja push mov dec fldt add mov push out inc mov mov cld js das sahf pop test loopne loop stos sarb xchg enter pop push loop sub dec mov mov pop adc aad mov je inc or jns popf inc rcll xchg icebp faddl fwait jns (bad) pop mov push xchg lods loopne pop aas lcall push stos test jg imul lahf lock cmpsl sub xchg add xchg call cmpsb je sbb nop dec xchg in out in lock add cpuid push cmp daa mov dec popl test cmpsb pop inc push mov adc (bad) push jbe mov pop test hlt (bad) and sbb cli cmp arpl cmpsb cmp gs adc lods in xor gs mov push (bad) sub push dec and outsb or and or pushf pop gs jmp out xor xchg push dec outsl roll mov negb and imul popf in sarb fsubl inc cmpsl ds jns xor testl mov (bad) sbb mov mov fdivrs scas jno adc pop pop lea in sub mov outsb push jns pop lock add mov mov das mov xor ret ret or adc aas outsl and idivl stos inc dec lea gs or in insl test cltd cwtl sub sub lea mov mov pop mov and popl push add outsb mov xor (bad) (bad) push pushf push loopne out pop xchg add ja inc add mov pop push cmc sbbb stos out xor mov fldcw adc lret mov sbb pop and pop mov data16 cmp jg inc (bad) dec out daa fstl inc addb js mov inc and (bad) and jae dec dec insb pop rolb sarb push jns push mov and fisubl dec pop fstl por fwait sahf jle (bad) imul hlt mov mov sbb sarb call pop push shlb fcomip inc mov lahf lret or lds xchg push adc xchg (bad) outsb fs jmp mov fdivrs jl popf das orl enter test lret and sbb jecxz (bad) pop (bad) aas cmpsl out (bad) mov xchg jl pop cmp mov xor jne dec movsl dec add and adc lods push enter jmp in decl mov out adc adcl addl dec lret les mov out out jg jo jg scas mov cltd in push push jb,pt push lahf jne inc data16 jl jo xchg mov push clc mov inc mov mov in jns inc fwait mov jnp fs fcmovnu dec ds or jne pushf ds scas dec mov sbb imul mov ds add sub scas pop in repnz (bad) sbb mov pop test and adc or xchg arpl inc pop adc movsl in dec xor das mov movsl popa jnp es cmc mov sbb cmp les mov clc or mov sbb or jae in pushf comiss jmp cltd rorl jae dec adc xor and cmp cwtl lods popf xchg imulb mov icebp pop mov xchg push repz mov add arpl cmp out add out and enter das sbb lock cld stos push cwtl jo ret and xchg xor into cmc xor jmp xor cmp fidivl mov movl pop xor dec lds nop xchg movsbl movsb adc repnz (bad) xor xchg ret mov mov inc push mov add mov pop sbb test andnps imul popa pop or cld push jnp scas fisttpl data16 mov out mov repnz lret dec and jns sbb and repz mov into addr16 jecxz shrl add (bad) fiadd les test mov jp push cmp enter and mov and pop xor rorb ds shrb mov sub dec push pop imul cwtl in (bad) and mov (bad) fldl sub movaps inc sub imul es add add add movsl cmpsl jle xchg in sub push aaa sbb imul inc cmp mov fcomps aas (bad) (bad) push cmpsb xor mov mov mov jecxz mov mov or push and popf loope xor (bad) test out lods cmpsl push mov loop jl push fidivrl push jmp imul cmpsl add mov xor and lret lret xor jge clc jb cmp xchg out mov adc out sbb push mov not es (bad) das xchg movsl insl push push pop daa icebp (bad) dec pop mov (bad) jle sub dec inc pop fwait mov (bad) inc xchg aam xor cmp sub js enter setne xor dec lahf pop fldenv mov pop das jae pop push push xchg inc leave imull and inc movsl dec ja pop xchg sbb cmpsb jbe scas mov xlat cld or xor aad lcall mov mov mov mov jae cmp sbb pop pop xor pop sub incb fsubr (bad) jecxz hlt cwtl insb fs insb pop and in push stos scas jno ret nop fsts cmp ja push lret xor xor les cmp stos dec push dec shll push stos add into call and mov adc mov xorb jnp or hlt enter mov (bad) popf shlb cmp incl aam test sbb xchg add fimull rcrb lods lods push aas aaa not sub inc mov adc adc add sti xor stc rcrl incb lahf stc test sahf push cmc fadd addl out cld and popf push mov stc xor mov into test push push cmc inc sbb fs dec insl into xchg dec inc lret je dec cwtl inc and xor pop bound sahf enter cmc fs inc (bad) cmp mov (bad) xor ljmp (bad) xchg pop in loop leave stos push dec out and lcall sbb adc mov std rorl aam mov into jnp sti push pop or push lds pusha jno fsqrt mov dec inc cmp test cmpsb adc xchg lds outsl sbb push inc xchg ficomp mov loope dec pushw jae push sbb pop jo enter in lea incb inc cmp mov dec xor jb adc adc fstpt dec push insl mov inc mov loope or mov mov xor adc push xchg jp xor dec xchg in mov stc sahf jo out ret ljmp je mov in push xor mov xchg ss push inc pop cmp mov dec mov jo push mov not add dec sbb xchg popf clc fiadd mov mov repz lods xchg xor mov xor test cld push je fidivrl push out leave popf xor nop (bad) jo pop mov jb popa mov pop inc into dec inc bound ja add mov pop mov dec sti in stos jne inc insb cmpl xor lret scas int sub xchg sbb fsubrs pop int3 hlt cs lea stc (bad) xor cmp sarl jbe repz sbb lea xchg test sahf mov jbe cmp daa pop pop add mov call inc iret sahf cmp mov iret sahf cmp mov iret (bad) jg add add addr16 xlat add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoms add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push push xchg or out dec add inc mov outsb movsb push mov sbb sbb cli xchg push leave jge mov out pop das add pushf add lahf cmpsl out sbb leave daa sub cmp lods xor nop lea jae mov and (bad) sub aas sub enter subl cmp loope scas mov popf ss mov jle jae and cmp push xor cwtl pushf fiadd data16 sub and or cs xchg inc iret mov xorl push sub mov jl jecxz das ja xor or std int int3 cmc push dec and sub pop lock jno jb sahf mov xor xchg mov jne loopne aam push and cmp negl rclb push cltd scas mov mov movb fsts adc mov and ds add or xor das sub sub std sub xchg js mov sub (bad) pop pop pop sbb fstps inc xchg addr16 lret lahf push jp jno mov call in mov mov arpl cmpsl inc mov mov mov push addr16 mov mov rcrb inc cmp int inc pusha mov mov xchg pop arpl pusha std jae lods pop in sub subb lcall push loopne sbb movsb inc clc rsm les ret idivb ljmp sbb and xchg adc jmp lcall cld add and jns or movsb dec jl lock outsl xor pop pop sbb cmpsb aam inc lcall cmp xor sti mov mov leave lods cwtl mov xor pop cmp jge xor movsl movsb sub rorb lods sub sbbl push xchg xchg movsl lcall xchg imul cmpl (bad) call into scas pop fsts jl mov dec dec stc adc cmp inc daa mov pop push shl mov lods mov into xor movsb sbb fist xor psubusb psubsw xor in icebp in xchg dec (bad) fcmovnbe adc nop out ds ss insb icebp jb test test fisubr sub pop clc aaa cmpsb pop add jnp xchg cs aaa out pop jmp sub pop leave loop push jge pop mov mov insb arpl sbb jbe int adc jbe stos call xchg call xchg movhps out insb lods mov sub xchg mov (bad) push in lea lds dec xor cltd cmp sbb add adc lock cmp dec insb in pop imul mov mov fwait jnp insl push jle outsl mov push (bad) jb mov ret stos jmp (bad) enter adc pop xchg xchg inc mov push sub pop rcll shll ret mov jns inc mov inc dec (bad) enter movsb xchg pushf jno in jb mov pop repz adc push std sub dec cwtl int3 lods lcall orl mov call es or sub lret shll pop sbb fistp shll cs cmp xlat fdivs inc add mov cmp and movsl (bad) mov outsl or pusha lods mov jo arpl push adc stc push mov pop dec push cmpsb pop shrl sub cld sbb mov sbb sub jb ja int mov cs leave cli sti and sti jl xor repz lock dec lea sbb out jbe jecxz cmpsl pop pop aaa repnz jmp stos xchg divb and inc int3 mov pop dec pop jo dec dec (bad) ds out xchg fwait lock sub pop mov inc mov mov mov xor test mov or jnp cli jae insl push insb stos mov mov cmp mov es and cmc cmp mov or out pop bound arpl adc popf in insb das push iret and fstl pop or jne test pop bound loopne mov aaa fistpl shll into into out test pusha std cmp movl or imul sub mov arpl lret mov mov or loope test out lret dec xchg cwtl sbb out pop repnz sti fstps les cmp out mov (bad) cmp cmpsl lods (bad) xchg lods jmp jl leave fidiv lret fistp xchg xchg pop cmp xlat xor inc sar fwait cwtl jmp in movsb scas movsl mov bound out mov fimull jge inc pop cmpsl repz mov test and (bad) in pop mov in mov xchg xlat jle,pn pop jecxz rolb mov incb or xchg (bad) bound pusha shlb mov or movsl (bad) jle and jp push sub adc fwait jmp cmp clc xchg (bad) fs mov jge jecxz inc fcmovu mov addl stos jmp ja sub and (bad) insb add add or daa xchg push push sub xor jb in imul push sub sbb ljmp ret push pop push jne stos addr16 fisubl aas cmp inc lods jns aaa add mov add cltd jae jo sub dec cwtl sbb pop rol or or cmpsl xor arpl lret add rorb loopne or push (bad) pop jae enter xlat popa lds dec jno push pop cmpsb fistp fwait push cli sub mov insb inc xchg movsb adc std xchg mov xlat mov mov mov push (bad) jp std sbb pop js scas gs xor or dec mov ja lods cmpsl pop xor mov lds mov jmp fcoms cmp stc fadds in xchg outsl xor push cmpsb cmp (bad) dec dec pushf or sbbl jb jne jg dec mov jo xchg push xchg mov cmpsb in fcompl add data16 pop bound cmp or hlt das pushf sbb mov mov loope fiaddl and out mov gs call xchg add push cmp xor aam pop xchg fbld push (bad) cmp cmc call insl (bad) in mov xor jne jns fistpl mov mov mov mov sahf cmc xchg rorl and push fisttpl sbb jne push cmp xor lock pop jno xor loopne jp icebp test mov mov mov or lds add (bad) or lods pop js push cmp fnsave daa pop sub inc lods xchg sub push aad and sbb fcoml sbb mov inc push decb pop push or inc xlat roll lea sub stc cwtl jo stc mov js pop pop mov call mov imul pusha in pop xor sbb cmp lret pop adc mov (bad) sti sahf mov insb fcoml adc mov (bad) adc int3 mov adcl imul xor lds add ret mov fcomps in movsl loopne nop sti sbb lret out test push jnp push scas sub bound mov out lods rcrl sub sub or ds pop cmp push mov sbb test ja loop jne inc cmpsb loope adc loope rorl fistpll lds push xchg mov (bad) xor ja loop or lret pop insb aam add mov out int add fist pop mov mov repnz fnop dec mov lret loop push mov icebp clc or add (bad) mov js out arpl xchg inc mov cmp sub lahf mov xchg push pop adc imul ss test adc jnp into pop movsl mov pop mov dec aas mov pop pop pop (bad) jl push repz mov test jmp (bad) fxch push imul jno sub or imul mov dec push stos test mov cli mov leave or fwait mov mov cli mov xlat fimul dec lods pop push jmp pop sbb in xlat outsb or and roll mov dec cmc inc dec sbb sti jb sbb inc out dec bndldx mov jb movsb cwtl sub lds or scas aam je mov int inc pop jecxz mov fild or mov cwtl inc and xchg sub jmp adc or add mov out in cmp lret ss test loop loop jmp add mov xchg in push lods sub iret icebp mov lds mov (bad) cmp out iret sub std inc fldcw mov fs push lcall std pop xchg icebp mov imul xor and out inc jo jno xlat mov add xor test in mov cmp pop stos push mov mov mov outsb (bad) (bad) mov sti xor jno lcall adc xchg scas cmc les inc fsub call pop stos fidivrl push add addr16 insb and jmp aad imul sub sub sub push inc mov (bad) lret call push inc test int3 hlt iret stos sbb mov adc xor pushf or out push dec inc mov inc insb dec mov adc aad leave addb jmp xor pop movsl test mov or loop cltd loopne mov or xchg or std lahf add jbe mov orl or dec lcall sub bound ret mov mov jge push lret jecxz hlt jmp push mov lret xor movsb mov xchg dec movsl mov fildl push test scas pop add pop inc mov fidivrl popf mov or aas jno sub inc pop pop std pop dec add dec jns imul enter out pop imul add inc imul xchg (bad) xor push jae jl outsb repz int3 int xor aam inc cmpsb cli cmp mov pop push (bad) int3 fs add push arpl push imul (bad) (bad) push mov sbb ficom adc loopne jbe sbb (bad) mov xchg mov add leave or mov sahf (bad) mov sub push xor es loopne in or jo mov in xor cwtl jbe inc sub (bad) fs or and push mov in pop mov pop mov jne cli pop (bad) or das mov adc and sti inc adc jb fs movsb push jo push jmp cmc rcrl test push movsb fwait mov xor ljmp js in mov dec pop test mov and (bad) mov fldt inc push int cmp sbb out and adc mov sub adc xorl jge mov leave int aaa leave and dec add lret ja jmp mov cmc sub or out ljmp mov or and and jne loopne sbb out jle sub inc dec sar jnp aaa push xchg xchg sbb rcr fdivrp insb std pusha pop and xor into cmp sbb test loop icebp movsb mov mov sbb ljmp and addr16 loope add outsl popa jge js aad push jmp ljmp mov jl mov jne adc into push lcall fstps fistp and jecxz inc mov inc in or mov lret or inc sub enter cld pop inc psubsb pop mov and repnz stc push imul ret std push dec bound aaa mov xor ds or inc mov cmpsb in test cmp dec cmp mov jae sub fwait icebp leave inc sbb mov add lret or xchg jg movsb insl mov add icebp loop dec shll inc fmuls xor cmpsl in sbb lahf test mov cli repnz ret test pop or jnp cmp out push cmpsb push cmp xor dec jl rcl sub xlat dec mov (bad) mov scas xor push fwait out stos sub ror aam inc insb and cmp or ljmp add ficomp fidivr clc mov cld je outsl mov test in insb std in dec (bad) or push mov inc scas jp fsubrl fsts push adc xlat (bad) movsl xchg adc mov loopne aam rcrb nop xchg int3 add jns fisub inc repnz lret push mov aas add shrl cwtl roll jge sbb insl xor pushf out scas add and fcoms sbb ja out arpl enter enter sahf test mov mov sbb das dec mov xlat dec ja mov test push jns and mov stos data16 outsl popa mov (bad) les xchg cmp dec push and jnp inc movsl pop adc push sub jp push repz dec or mov and lret mov xor cwtl fisub stos out sbb out xor mov xlat jae adc dec lock hlt inc ret outsb xor scas js and and jbe push test int mov inc push xchg repnz and bswap test jo scas out sub jl mov push mov clc pop (bad) js cmpsb sub aam jmp cmp sbbl jecxz and test pop pop lret (bad) push negl cmp and xchg dec pop sub rcll xor fs insb inc leave xchg dec es inc mov jl repnz test jo cmp and pop inc mov sub adc add movsb sbb push mov insl sti test cmpsl loope mov stc xlat pop cwtl push sbb cmc and xor ret add out sti in dec jb mov ds (bad) mov in sbb cmp sbb mov fistpl or iret aaa jnp out sbb ljmp jp ljmp jp jg add paddsb add addb add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fsts add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop adc push dec xlat call or jmp fstp rorb mov rorb nop push xchg inc mov out sbb pop loope out push add (bad) mov cmp push popa insl mov cmp adc mov out mov inc sbb xchg xchg insb xchg cmp call mov adc movsl adc lcall fidivr jo notb ficomp xchg ljmp dec hlt ret push inc lods fstl fidiv dec xlat pop xlat (bad) loopw rep adcb lret mov xor push rcrb jge jnp jmp dec push xor mov xor fmul dec inc or inc scas loope popa mov dec sbb pusha jb data16 std pusha fnstsw int3 cmp jae arpl fisub pop and in push nop adc pop jge ret push xchg pop arpl dec repnz leave ds stos mov iret loopne gs jg fwait add popa jg xchg ret arpl mov scas mov das adc into xchg add xor lahf cli mov dec hlt mov data16 rcll mov jle out gs xor fidivr lret loope sub lds int3 xchg shrb push fldenv xor pop cmpsl je dec int sbb jb jbe mov mov dec lods fstl add nop das clc mov lock push std adc add xchg mov dec pop sbb push mov mov cmp sbb in jno leave in dec lea mov mov push aas add int3 xlat ret or sbb es push shrb repz jne popf xchg sbb sbb cmp sahf sub (bad) mov mov sbb jne outsb divb sahf jle and inc mov xchg stos xchg and or rorb jbe insb sbb xchg dec mov sbb mov cwtl xor addr16 push pop mov mov sbb add fstl cli xchg mov roll jnp mov cltd fcmovnu pop cs xor jbe daa loop mov int jbe xor cld mov test nop cli pop ljmp arpl mov jo aam movsb pop rcrl clc loopne or pop xor popf rclb sbb das cmpsl lret sub divb aas inc dec jge push (bad) or push stos cli cwtl test test sbb mov dec jns subl dec mov jne adc mov jecxz mov lret mov mov push mov jnp sbb and cld data16 pop sub loope xchg ss lods sti cmpsl mov xchg push inc push dec das fcomps mov fldl xor mov dec ret clc int3 mov cwtl stc jb iret iret pop out out icebp mov xchg lds ja loopne insl fimul pop cmp adc test or std notb pop out sub pop fisubrl leave sub std scas lahf inc int3 mov aad std aam adc push mov sbbb scas add fsubrs xchg jae (bad) out out inc ljmp inc jecxz mov lahf insl or scas ljmp test pusha and out es ds fisttpl add mov ss repz cmc mov test bound mov insb xlat out and lret push push je cmp stos mov or push lea push out cltd mov aam push cld push ljmp inc mov out repz hlt mov insl jg fcomps ret add dec pop add ret cs mov sub js and push dec mov cmp fxch clc je push xor pop mov pop push das jecxz mov jle mov scas repnz popa xchg scas or sub or (bad) (bad) mov test sub aad outsl push mov pop inc fdivrl cld jne and add aad (bad) ja xor or xor adc mov mov pop (bad) ss insb adc popf bnd movsl gs push imul mov adc fidivr fsubs mov divb sub mov addr16 inc icebp bound adc sbb sbb cmpsl mov adcb ljmp pop push out jl bound fwait mov repz bound adc out sub xchg mov pop xchg loop (bad) jge das fiaddl leave push push movsb sbb lods lea in dec fiadd lret imul adc (bad) or pop pop outsb mov sti mov outsb adc movsb pop mov (bad) test push iret or jae pop (bad) dec cmp leave jo jo rorl mov pop push aad xchg lcall das ljmp mov or inc into or jge (bad) mov (bad) cmc xor mov cmp or and inc and push imulb and cmp jnp mov lea lock out dec mov ljmp ret cld sbb mov inc and jmp repz and jne cltd cmp inc cmp push xor mov jmp sbb icebp xchg loopne pusha and (bad) adc cltd addr16 mov enter (bad) outsl in inc xchg jecxz or cmc enter lds sub out scas mov es enter stc fisttp mov xor inc cmc add xchg pop add mov pop dec cmpsb out sti ret mov gs cld jno popa test call sti pop (bad) xor imul cltd xor fmuls cmp ficomp mov inc psllw and add jp fs gs jo lret inc sahf mov clc sbb aas pop cmp jge sbb jecxz insb xor stc add mov ret xor push or loopne xchg outsw aad jne test int pop aaa addr16 xchg push mov lahf clc hlt rcrb lods (bad) pop cltd data16 mov push fwait jl add inc pop and sahf xor and mov xor (bad) les xor int sti iret pop or mov (bad) (bad) cmp fs pop or inc sbb cmp adc stc dec sbb add cmp xchg inc sub pusha leave mov into loope or das push fldt or xchg or call out cmc sti aad pop imul dec inc cltd loop movsb cmpsb daa xor mov daa push and cmp pop scas push and sub lret das das jo div jl hlt adc inc (bad) mov jne fs xor out cmpsb xor fstpl dec cltd sti mov mov xor adc (bad) jno (bad) or sub pusha adc gs or sbb dec lds jmp xchg inc adc movsl data16 inc movsb out pop jge adc imul fisubr mov inc xchg mov adc ja dec pop add pop lods adc sub test cmp adc jno xor stc lcall mov sahf cmpl push inc or inc inc lahf addr16 dec pusha mov cmc repnz add xchg mov insl xchg aas add xor xchg dec add insl or es mov push popa jmp push and dec jne sub testb sub stos arpl pop xchg mov adc outsb fwait addr16 pushf pop (bad) jne mov pop repz sahf adc and sub out adc sti sub and adc inc repnz adc (bad) push pop dec xor fsub fs rcrb cli fwait sti pop xchg popa (bad) lcall mov cltd ss ds pop int jnp (bad) mov lret and mov pop and lahf pop mov addb cmpsl xor nop fldt or mov mov rcrb pinsrw xchg in pop (bad) or test mov aas cmp mov (bad) xchg mov jae hlt and sub xchg mov mov mov test insl mov std das lcall or add push push sarb xchg jg sti mov xchg popa or fisttp (bad) and xlat lds bound push sbb push or out mov xchg in aas xor lret xchg aam aaa out aam mov dec pop movsb cmpsl push mov and and add push aad in jge cmp bswap add dec imul and mov enter sub sbb jnp ja repz mov ds xor test test sub loopne push out shll fnstsw into xor push adc xchg jl popa sub jae scas inc aas jb add into outsb (bad) cld xchg mov aad push mov jb rorl sub push cmp xor cmp xchg stos in leave cltd punpckldq push push test (bad) sub js aam (bad) repz ret daa test nop xor mov nop call add daa and push lret stc xchg dec push fisttpl mov push adc repz out call dec cmp or adc lcall xor sahf std in (bad) in mov dec icebp sub sub sahf aas stos xor enter cmp adc push mov fmulp add mov adc loop xchg inc pusha xor sbb lret fisubr xor js sub fcoml cmpsl push mov out adc sub or mov nop cmpb pushf fidivr aaa or push ja lcall ljmp jno std sti in sub and sub fwait sti xchg sti adc insl ss addr16 int3 adc jmp pop cmp push pop add fnclex pop inc pop or andb in sbb mov test (bad) int3 out out dec ja in adc (bad) cmp xchg jg and mov in xchg pop mov arpl dec add loop (bad) xchg rsm ja jg pslld inc cltd pop out mov jmp lcall aaa inc outsb pop repnz inc ljmp mov cmp adc fwait (bad) out aaa push aas xchg sti js push ljmp rcll xchg mov pop mov in pop dec pop mov sarb mov push std sti sub repz and adc cmp scas ror (bad) fmuls pop aas pop lret mov imull jae out jo test push daa imul lods cld pop xchg addr16 movsb lds mov aad imul fs jo mov sub pusha mov dec neg xor add sar into fistp fs dec icebp int3 jae leave lret push mov cli or add ret sub jecxz fcmovnu mov pop mov test stos xlat lret pop sar das ret mov push into imul and mov xor ret mov out push fwait push in aaa jnp ret and xchg aaa insl sub push jmp loope enter or (bad) push cmp and xchg js jge mov loopne fucomi add js sbb xchg lods or xchg (bad) jb repz cmc xchg scas jne lret addr16 aaa sarb addl rcl bound aas insb push sub outsl inc (bad) (bad) test in sarl repz add test mov add dec dec fmuls pop add repz pop sbb lret incl fstps std loop,pt nop into ds je in mov jns popa cmc test enter subl leave shll in loop scas cmp add je aas and or bnd cld je fiadd mov sub aam sub cmp adc insb xor jecxz cmc push test push xchg dec mov push scas and inc mov jo ror jns or sub push adc sub sahf or and stc lock dec or add repnz cmpsl gs mov mov push mov xchg aam sbb sbb out jno loope jp testb mov clc test inc jne xor data16 sub inc pop fisttpl pusha mov jecxz hlt lahf fnstcw in (bad) jne sbb lods cmpsb cli clc int3 loope mov or setl push add or mov jecxz cmpsl bound stc cmp dec xchg dec inc push dec mov ret leave ss cwtl pop fwait outsl out sub popa pop pop or mov pop xchg or fildl repz add dec (bad) sub int in fcoml je clc jo aad lret push mov (bad) popa jns insb shll fisubrl adc ljmp nop dec cld inc jg jnp dec fwait dec jns scas rorl mov aam cwtl aad inc sbb mov mov push addr16 and jo scas push (bad) in idivb lods cmpsl lods hlt lret push enter dec jg nop inc add mov popa data16 cmc jb sbb cwtl xchg or (bad) popf cmp push sahf push bound loop imul in lret ret inc and lret iret out add mov cmp popa test addr16 mov js lock js movsb bound insb divps in pop aad aaa lcall mov adc lret dec or mov add sbb push pusha or jnp add stos (bad) mov scas xchg or pop mov and mov mov jp mov (bad) test sub sbb fnstsw pop fisttp and sub subl dec rorl sbb push sbb push lds lcall out dec pop xchg inc pop mov xor and out out cmp push cli fldt lret xchg xchg clc cmc out adc mov xor push scas gs pop lea mov jg mov repnz fnstsw leavew xchg mov adc lods sbb jmp xchg push xor hlt cmp dec push stos lods hlt leave and jns iret inc das in add inc sbb leave inc int3 mov sub push pop je mov inc push cmp or sar mov xor inc repnz mov stc fildll bound sbb mov out mov jle jb rcrb xlat insl aaa xchg or (bad) stc cmpsb cmp pop mov pop adc jnp idivb iret sahf cmp mov iret sahf cmp mov sbb (bad) xchg loop cmp add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoms add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop adc add loopne lea arpl xchg outsb adc xchg mov mov popa je dec ja aaa and inc nop sti out pop jecxz pop jecxz add add and divb outsl orl in ljmp ja cmp sbb cmpsb out or addr16 mov idivb jge push sahf jno lea jl (bad) mov cld jnp cmpsb mov dec mov loopne (bad) fcmovb inc mov fnstcw in sub mov add cmp inc mov popa add cmpsl insb cmp mov xchg lock rcl and mov fmuls and xor jge in mov or adc cltd mov lahf addr16 sub jle cltd sub cmpsb xchg jno jmp sub lods into in fdivrs ficoml xor (bad) add popa and mov mov test and xchg lock popf ss popf test pop (bad) adc jae jo inc mov pushf mov xchg mov xor jo int3 inc push sub out mov in adc dec test add (bad) pop cmpsb lahf xchg nop or sub push push das or inc push mov arpl xor lods js adc imul add sub jb cli lret xor das lock adc outsb xor or jns lods addb mov inc cmp sahf adc insl bound sbb xchg ret and lret jge mov mov mov fsubs pusha lahf pop jg cmp jo jbe pusha mov or jecxz iret cmp and pusha mov jge imul mov (bad) and push mov int mov or jle sub xor pop pop ret pop sbb xchg loope adc pop ja enter mov push sub jbe pop adc push xchg mov or push adc add xor scas (bad) xchg test pop lock inc mov xchg jl repz fistp or and xor jbe cs push (bad) pop push inc xchg push inc jge dec sub fs cmp divb cwtl lahf test push push (bad) stc lods fimull fdivrp mov pusha or cmp fcmove adc dec lret lea sbb enter pop xchg movsb xor and adc fnstsw cmpsb push (bad) aas pop mov daa cmp mov shr in je sub lret push sbb movsl jno xchg pop mov adc jecxz imul ds xchg jp mov loope daa and mov mov adc fidivl mov iret popf mov xchg imul (bad) div jne mov add cmp inc inc and or adc addr16 repz cmp sarb add sub mov adc jge push lcall and movsl dec push fidivr mov std (bad) inc ds pop rolb push push std test push pop adc add ret movsl jne and jp bnd out into movsl mov mov repz ficoml add or mov jecxz adc clc int mov lcall xchg fs sub sbb xchg xchg push in jno fdiv cmc dec test push cmpsb js addr16 xor dec inc pop mov xchg shl hlt mov xchg jecxz xchg sub add mov push push sbb dec mov pop out (bad) cmc stc movsl fs cmp sbb sbb pop ret pop cmp mov mov lods insb mov stos ret mov mov in inc clc insl in cmpb jo je or sub nop sbb add inc test jecxz int test xor xor adc push hlt loope sbb add mov daa clc add lock loop clc sbb mov cmp jbe rcl xor cmp outsl outsl xchg mov (bad) mov dec test lea in imul aad test leave push mov mov jp xorl xorl mov ret push (bad) push dec jae dec loopne lds test mov mov scas dec divl jle aas mov jl popf push or cmp addr16 push in xchg lret movsl jp mov mov xchg sbb lret test xorb lret add test xor jecxz cmp daa ret repnz cmc outsb rcl add pop mov fxtract pop (bad) mov push bound pop icebp test je xor int3 sub cmc jge lahf ficom rcrl jecxz repz adc jbe push mov rolb call lds mov aas nop out repz outsl mov imull push in mov pop sub lcall enter js (bad) loop mov in pop outsl push xor mov mov mov mov ja imul fnsave rcr psubd (bad) xchg sub ss pop scas jle popa sbb pop es or std mov sahf stos jo cld pop mov mov xlat lods mov push (bad) clc xchg fisubr js sbb mov jp inc (bad) or mov cmpsb pop (bad) (bad) arpl fistl lret loope jbe leave lock (bad) mov adc inc fwait jno jae (bad) out mov or aaa fistpl mov loop xchg pop mov mov aaa pop and sbb idivb rcl pop push mov xor cwtl aad loope clc mov fdivs divl jg cld fwait loope imul std cmp cmovae cmp fnstenv mov popa mov lret sbb cltd icebp add test dec push dec mul in jne inc fiadd sti xor jle rcl add pop and xchg inc xchg xchg test mov or sub sbb loopne into jge js push jmp rolb jae add fiadd daa into cld rorb and and sub cmp fcmovnbe pop lret mov adc and in xchg mov xor lods adcl xor dec pop ret or sbb pusha fsub popa add jb push push jns aad add xchg adc jg dec mov mov xor jecxz jo mov push je enter pop mov lret sub leave xor (bad) jl mov sbb fs sbb leave xchg (bad) movsl ss mov cmpsl icebp (bad) and mov jmp pop cld mov ret mov (bad) cmpsl add sbb rcr inc lcall and int mov cld loopne bound in in pop mov les adc xchg mov or adcl dec inc lahf jp add mov mov pop xchg xor hlt push lods jg adc jmp add ss xchg push jbe movl leave fistp hlt jae xor mov outsl dec xor jmp imul xor lock iret pop (bad) mov adc scas xor mov (bad) (bad) dec add nop and sbb jl je loope and push gs xor in out mov xchg test movsl adc jg idivb xchg mov add jp (bad) stos cmpsb xor xlat mov mov pop cmpsl and fmuls jmp xchg jmp and sbb scas xchg ret divb mov repz and stos and insb (bad) sarb mov mov mov push das imul ds mov pushf xor jne sbb sbb ss or dec pop int3 or cmp mov out sbb divl mov jae mov fadd or mov jmp mov mov fldcw fmul test push xchg or inc pop cmp xchg mov int3 clc sub push push fisttp loope lcall enter mov fdivs jg or push movsl call sbbl fisttp cmpsb ja repnz jno aad in and cs iret sti in lret and rol inc pusha and or xrelease das clc sub int3 cltd in push fs je test out loopne scas pop push dec inc loopne js sub and jg js out repz clc push (bad) mov push and movsb je js dec jbe sbb popf aam mov fidivr arpl dec sub jbe (bad) in jmp fcomps icebp mov cmpsb shr arpl (bad) imul adc sti neg ljmp and adc jno push dec out mov out jl xor fwait aas dec lcall mov movsb jbe mov push adcl push mov insl dec add xchg jp inc and lods cmc cmp (bad) jno cs sbb mov js cwtl push mov dec sbb stos or xchg enter dec movsl jg je mov inc rorl popf push sti popf sub inc (bad) lret (bad) fstps and lock inc scas pushf fnstcw mov icebp cld push lret psraw int adc (bad) cli push mov ret loope fcmovnu push lods (bad) xchg popa dec clc das jno notl (bad) fadds push incb into mov dec popa mov hlt notl enter push or or ljmp enter ss inc xchg pop jo adc sub lahf rcl inc push xor lcall jge inc mov daa mov mov loop xor repz push ret xchg pop outsb adc or push int (bad) or mov icebp inc leave loopne out sbb mov fidivl idivl or xor ret leave mov pop mov fiadd jb rcrb ror xor jne xor add push test inc lock in jo repz pushf fwait addr16 pop add and aas std ljmp inc add aaa aaa stc mov jne pop notb push jle mov cmp cmp pushf pop in push mov scas push lds fwait cmpsb fisttpl gs mov ret dec mov sub add inc faddl aas loopne dec xor push nop hlt pop fadds test mov out loope inc or cmp cmp jge or lret xchg ret or jp sub out jmp pop push xchg fnsave cmpb popl pusha xchg inc adc push add jg ss pop aam push xor jns mov fbstp repz dec xor add push test xor mov xchg shll fcmovne dec jge dec dec in (bad) mov loope das stos rorl sub in mov inc hlt mov sbb mov rol adc add pop mov das xchg in (bad) int3 and inc jb mov mov (bad) jecxz jb sti hlt out jle cmpsb dec sub push je insb mov pop rcl sahf fist scas push lahf mov dec sbb mov fisubl mulb adc out arpl es pusha adc cwtl movsl pop jmp cmp mov and jmp fldenv add inc add xchg jae repz add xchg jg add lret cmpsl jg add sbb cmpsl (bad) xchg push xor lods (bad) cmp ss cmp sti add repz jo sub xchg ja out in dec sub rorb dec jle dec ss jne mov sbb jbe (bad) push aaa inc addl jo and or test mov out mov jnp test pop pop dec aaa outsl das stc sub add test push jb mov inc ja sbb and sub (bad) mov xchg dec cmp cmpsl jle jg adc cmp jne pushf mov leave push or addr16 mov inc loopne adc loope stc out xchg lret lret ljmp int mov cmp or push add rorl mov push jae xchg pop xchg or dec lret dec and or xchg orb and add popf hlt sub mov fwait test pop mov les xor or repnz ret sbb mov hlt aad jno loope and cmc sbb mov lds clc ljmp loopne sbb mov and nop xchg jne rcrl xchg sti mov xlat imul mov jmp lcall sub jmp decl ds cmp inc and inc dec jnp (bad) mov mov sbb std aam add lods lret std or adc es adc insb and push gs movsl lea mov mov dec dec sub jo push mov mov sub push and (bad) ja and out leave stc incl lcall (bad) xchg repnz stos outsb jo adc loop inc aam add aad insb push cwtl leave (bad) push dec and push inc popa push imul sub (bad) mov movsl out enter inc std in dec inc xrelease insl inc mov mov dec out in dec bnd in mov std cmpsl or stos lds mov test lahf gs jmp and and insb sbbb arpl lret repz pop ja pushf cmc nop push dec cltd push xor imul fbstp (bad) insl js aam xchg dec sar push adc push imul ficoml cmc push (bad) addb sub jo inc jp out cmc loope jle xchg aam sti xor cwtl inc cmp xor push les fimul rcrl xor mov inc scas scas mov xchg js jb xor push imul out sbb mov inc mov lds adc lods and sarb push push jl stos mov xor mov pavgw cld dec hlt lahf lret movsw test add mov xor or inc cmp outsb inc xchg jmp xor sub imul sub loopne out mov and loop inc in or mov sti adc or mov cmp pop stc insb lahf dec and xchg inc popa dec pop in xchg jge mov sarl sti mov cld or addr16 adc (bad) xlat imul push inc daa cld jb cli rorb pusha mov sbb call push cmp mov jp incl add bts stc scas in inc xor add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fistl add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push and ret (bad) icebp jecxz jb mov cwtl cwtl outsb cmpsl fisttpl xor cwtl out out (bad) xor ds jecxz push jl aas add call jmp xlat pop cwtl es test fist out imul div mov leave mov (bad) fmuls and out inc xor dec fwait cltd sub push pop and cmpsl sbb xchg adc inc or cmpsl sub fstl or sbb jo flds adc dec xchg mov or sub add stos dec in repnz aad xchg xor je sub stos outsl push xchg cmp scas lret ja in push dec jns les adc (bad) xchg mov test sahf and push jg or dec mov inc imul shr cmp insb popa dec mov cmp stos enter test jno hlt dec fidiv arpl dec lret stc repnz push mov sbb or (bad) aas stos popf cli iret mov popf cmp psubd jae pop or bound fucom mov pusha fwait pop push and and sbb les dec pop mov push inc xchg xor movsl into into sub or cmp loop jmp xor movsb pop mov xchg leave xchg pop insl sub in fucomip xchg test dec adc dec (bad) push popf xor negb and or push stos or ljmp jecxz sub push fidivrl jle mov sub jge and jbe cmpsb pop xchg xchg hlt jns pop popf rcll mov jmp cli insl sti add movsl test in xchg repz out sbb inc cli shrl loop cld pop out test in enter mov fstps je sub or aaa inc sbb in hlt (bad) hlt arpl notb pop inc loopne imul push sub xchg out lea dec icebp ficom fdivr int bound daa mov aas add or mov das jb xchg pusha or scas gs imul jae jno sbb je fistpll scas adc and cli xor and (bad) jne mov movsl lret cli out cltd dec xchg cmp sub arpl mov inc ret adc les inc lahf imul popa aam (bad) cmp xor fidivl inc pop (bad) sar dec xchg cmp movsl movsl jg iret jns dec pop mov adc inc popa or stos cmp xchg ss rorl or xor mov sub or les adc sbb xor decl (bad) pop mov stos add inc sbb fwait inc cmp in test push mov xorb aam and (bad) xlat mov sub or mov pusha push xor dec call mov pop add push mov or mov outsl imul scas pop or in xor mov in add sahf lret push mov hlt mov push add sub mov nop imul pusha mov pop adc pop clc dec xlat cmp in jg mov xchg mov shrl xchg mov bound enter xchg popa outsl lea pop jmp mov mov aas push pop jnp scas lds cli adc and lods in mov jo rol lcall inc cmc mov mov leave inc xchg call mov movsb inc scas scas lock in sbb fidivrl nop jle push dec in and push dec lods fwait popf inc mov jge push pushf or sbb (bad) mov es inc stos repnz movsl sarb sahf adc dec adc test loop add fnsave adcl dec (bad) stos iret add sub dec imul js sub inc mov sbb jg dec sarl add lcall cmp jno mov repz cmp cmp adc and loopne xchg pop insl dec pop aaa push jge add sbb and cs mov mov hlt lret sbb sbb pop push xchg pusha inc gs out stos push test test or sbb push daa lahf mov xor inc jmp dec or ds dec mov mov in sub lods das imul jg ss pop add push jmp inc xchg mov sbb cmp mov dec mov mov loop mov inc inc mov imul shl push add inc push int aas orl ret and test (bad) mov push aam pop das push and sub data16 lods cld insb xlat xchg xchg xchg jno mov xor push icebp adc jne fstpt xchg lods ret jns mov mov imul jns lahf or xchg mov mov mov or jmp sbb mov adc leave jbe daa jge pop pop rcrl mov pop xchg lret mov xlat add ret sub fisub mov enter add cli inc call push sti dec jo out cltd mov sbb mov sbb add int jb pop jg mov lods mov imul out add fldt mov mov out (bad) out xchg dec fsubl xor jne mov mov (bad) or push pusha pop sbb inc xchg xchg mov (bad) insl in lea and cmp hlt aaa movsb xor xchg or mov cltd repnz push sbb ss jne xchg popa int push ret mov (bad) std mov mov pop mov out andps mov sti push fcomp repnz and xchg xchg and sbb (bad) or imul scas xchg push pop hlt cmp cmp movsl mov mov scas fcoms add pop test sarb mov pop mov push hlt sbb arpl lahf pop inc jg leave ljmp ja aad aad jbe inc xor cmp sub or clc mov push push loope popa es iret adc push sbbl cmp fmul mov jns xchg mov or daa movsb jo xor sub stos sbb inc xor mov cmp std jno (bad) xchg mov xor sub and in scas out sub pop fwait adc and out or jmp push pop cld mov cmp xchg cmp sub xchg mov les pop in (bad) or pop cmp and push jbe test jnp lods mov pop pop inc lcall or add push pop outsb dec or movsl ljmp push das (bad) hlt mov xor rcll int3 or or movsl pop pop stos pop mov push mov insb dec mov sbb mov xlat push sbb cli mov pop neg js outsl js arpl mov ret jg push daa loopne loop ljmp mov iret popa testl or es mov pop pusha lret cwtl bound lcall sbb cs repnz es sahf add test sbb cli (bad) clc push pop (bad) push fcmovb outsb push inc jg mov movsb std outsb mov dec cwtl and ror xchg pushf add iret adc in or sarl adc cmp jnp out mov movsl out in (bad) jb pop (bad) mov or xor push leave mov jg shlb sbb movsb mov inc fisttpl sub stos les cwtl test sub push sub mov movsl lahf std mov lahf loop jnp loopne out cmpsb xchg repnz xchg mov add testb dec inc push sbbl mov jp out scas pop mov sub mulps addb incb ljmp insb xchg insb jns mov in cmp and in push xchg loope mov sbb sarb mov test cmp repnz hlt out or cwtl insl cmp inc mov lcall ret fucomp les pop pop mov or sub stos push adc xchg and adc dec jae std push push sub leave xor fld xor test add out sti sbb shlb testl adc and cmp and aam subb lret cmp gs sub push sbb jle lods mov add cld jp ljmp outsl sub gs cmpsb repz jno scas bound dec cli je and les mov or stos jl pop or mov jo xchg cmc sbb mov xchg inc add sub ds pop push push lods lock jo mov nop leave jp in loopne and xor pop test pop xor inc (bad) sti int3 push sbb loop sahf dec daa mov push aad outsl jl icebp xor out xchg pop or loopne lahf inc add cmp sub and test jle aad dec into arpl cmpsl or rcrl outsl mov imul hlt and cwtl jnp mulb test stc pop push jle test jle cmpsl xchg xchg sbb ja dec cwtl movsl dec mov jecxz xor je or aas mov xorl (bad) push loope fstpt push stc add ret mov int pop divl fwait mov and xor cmp add in sbb pop insb lcall imul dec shr inc sub mov jno sbb sub pop cmp or pop and stos scas jnp ss and jl fimull aad add scas push add add rcr jp out inc pop and out mov dec loop xchg mov lahf in pop or xchg xchg in mov imul testb call mov lcall in mov cs jb mov mov mov mov xchg and fadd stc fisttpl or ja push shll in test mov rclb sbbl lods addl adc inc shlb icebp dec adc pop sahf push lcall ja popa dec inc and adc shrl xlat mov pusha es cmp rorb pop rcrl add sbb imul xchg (bad) int3 adc (bad) loopne jb add xchg dec popa inc jle jge sub cli adc ja movsl inc imul in mov lret mov fstpt fisttpl push xchg xchg mov jp ret cmp insl sbb pop xchg or fnsave push or dec jle cwtl ror test adc adcl push push in pop mov inc xchg jge in adcb jecxz js,pt xchg (bad) scas ficomp hlt ljmp sub add jg lds das jae push sub add ss lcall xor mov fnsave addr16 outsb lcall sbb in push lret cmc add xchg addr16 imul (bad) xor jl aas icebp cld test add mov mov jne or cmp adc sbb inc in push pop test (bad) mov pop in xor in test mov sti bound mov mov sbb enter pop push or inc add add sbb xor test mov or xchg jg fcom out mov in das jl enter pop je ret popa imul add mov dec inc addr16 xor ds mov pop aad daa test jbe push pop mov or cs jecxz lock jb cs push pop inc sti cld mov pop pop sub mov jae cmp mul inc xchg aas dec inc and mov mov mov fcmovnbe in mov pusha mov mov xchg cmp lods in jnp mov fcomps dec sub cmp xchg push scas loope das jb sub sbb outsb mov in or in aas in xchg mov pop je add test and dec aad loopne cltd xchg ja je xchg (bad) std loopne std push call fxch je adc cli add (bad) (bad) xor or sub mov pop pop mov xor std and pop js loop jno loop mov dec and loopne sub lock mov or hlt pop rcl and sbb dec incb jb loop loopne cld xchg stos jmp lock cmpsl dec or jae jmp iret aad insl jl xchg insl subl mov jg mov in mov fnstcw xlat dec sub pop mov fisttp aaa jl push fldl cmp js hlt xchg push push out xchg fbstp outsb mov js xchg stc sbb mov pop out dec jg jne nop test pop push notb push mov cmp push push fs inc scas in inc or outsb push inc jmp push xor inc xor into es into fwait and cli xchg inc dec dec dec dec or or mov mov cld xor sahf add outsb mov sub roll sub flds or mov ja cmpsb movsl mov bnd inc aaa mov loopne js cld inc pop jge cmp sbb or sub push jl gs sub mov pop adc pop stos outsb jnp push cmpsb fldcw mov int push pop add sub cmc adc add xchg cltd (bad) jb push in mov xchg pop iret out pop aas jne sbb mov pop xor imul cmp push inc cmc mov nop jns mov loop adc pop insl mov xor fisttp sti xor xor (bad) push mov xchg outsl out mov push js cmp dec mov jbe add fist sbb ffreep dec pop sahf fcompl test push xorl sbb adc pop dec nop sar sbb addl scas movsb addr16 or test lock lahf cmp fcoms cmpsl addl cmp adc hlt aaa adc lock push lock int add xor shrb xorl mov fs jg mov js loop mov das pop mov mov (bad) cmp cmp cmp xchg (bad) push aad add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fcoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb jecxz icebp xchg xchg mov dec dec ja test dec ja dec out out ja ja cli jo sahf fcomip outsl cmp inc out cli add js add out in lock jo or sbb pop add push adc mov loope (bad) pop and mov mov xor int3 mull sbb je cld sbb jecxz ror mov shll adc scas icebp push jb es out cmp cmp inc mov xchg dec adc stc sbb insb (bad) jo popa mov inc mov or les insl sti or xchg adc push sbb cmc cmp push pop mov adc cwtl dec fcoms add stos cmp pop cmpsb addr16 ljmp iret or mov fnstcw inc in cwtl xchg outsl mov fdivl cmp es mov ret leave push pop cmc and xor and or sbb dec insl mov clc or lret ljmp leave xor mov push mov mov data16 mov pop mov jns in push jl add sbb sbb xchg xor pusha movsl es call out (bad) lods or pop mov push pop mov push inc fs sbb and fsts push mov lahf loop pop adc cmp xor jmp xor jl in (bad) or outsb stc xlat clc cs xchg push dec jge jno (bad) jbe test aaa lret addr16 and insl add jecxz cmpsl pop push dec test sub adc add push (bad) sbb aas xchg out mov testl inc jge mov int rcrl outsb fcmove sub jl les pop lret xchg data16 (bad) shl cmpsl arpl mov push cld in mov pushf pop int3 fistp cltd inc cmp or push (bad) mov inc push std cmpsl mov push mov mov mov sub lds cmpsb insl cwtl ss xor inc adc mov outsl outsb jbe jmp xor outsb sbb sti int3 jbe adc out mov test cmpl push arpl xchg aad push stos lcall fidivrl mov cpuid add cmp (bad) cmp sbb inc mov jmp insb jge loope inc sub sahf mov bound xor enter out jl test and iret (bad) mov insb add aas popf cmpsl in pushf inc inc int (bad) shlb jecxz data16 adc lahf scas lcall lcall fisub incl or add jle cmp je add hlt or jecxz cmp lret (bad) pop pop hlt mov in xor xor das int mov rorb cmp dec gs aad inc movsl ficoml (bad) jmp push subl xchg icebp add negl dec je fisttpl jnp out jae test sub cld cwtl ret sahf cltd and jae add (bad) mov enter cmc lods (bad) and clc (bad) and jo xchg push cltd jns rcrl sar rcll pop or jne pop push popa push int3 jg xor les xor popa fimul push adc fcoms xchg mov rorb movsb call aaa pop lods or std mov idiv cmp data16 adc jp div inc push dec ss inc jo push pop xor pop out mov test lahf mov and jle into adc ss icebp push sub sub sub xor call lahf pusha adc mov insb mov outsb and sbb mov daa mov xor mov xor mov leave into xchg jb inc sbb aas cmp (bad) xor xlat mov cwtl pop inc bound ds sbb fs xor roll mov lock popa or arpl mov sub ret inc nop sarb dec popa push pushf out ds add test out pop fidivr inc jmp in les outsl jmp and mov arpl addl add inc (bad) stos adc mov push xor (bad) lcall adc or aam jnp lods pop dec push mov push push mov pop xor mov add inc fidivr mov jns inc notl (bad) sbb aad cmp dec and mov dec mov push (bad) (bad) outsl in ds fimull nop add xchg sub mov fldt addr16 fcompl jb mov std inc enter daa mov jle (bad) xlat test xchg enter aad adc mov and mov in xchg pop pop mov in push add lahf add sub bound test push jl jmp xchg (bad) in (bad) loop fstp xcrypt-cfb cmpsl movsl test sar jle negb mov int inc (bad) fldcw mov mov lods cld out scas inc (bad) (bad) into je add (bad) lret js add push add and mov cmp add jg mov push add fdivl sub imul lods mov int sbb mov mov sub lods fldcw mov std cmp les dec inc pop int sbb mov scas cli jg pop lret fdivl and mov loopne pop dec ja dec push imul inc dec push pushl ljmp xchg lret hlt cmp or leave repz pextrw pop lret xor inc sbb xor cmp and jnp rcl and cmp (bad) or push pop cmp cld (bad) xor or mov sti aam mov scas (bad) aam ss int pop inc je popa sbb and daa rcrl test mov shrl cmp jmp stc std pop mov addr16 sti push ucomiss insb add and pop movsl jbe push xchg sub dec enter enter cmpb sub mov loope movsb cmp leave out sbb pop push fwait mov outsb dec sahf test leave clc xchg mov and lahf stos sarb rorl mov mov data16 fnstsw pop bnd mov xor xorb sub testb (bad) stos push (bad) xchg repz inc insl push pop popl jmp cwtl sub sub jb cmp mov pop xchg or orb mov popf and into (bad) fnstcw jns cmpsb out in outsl pop dec dec (bad) ret push arpl mov int stos push insl inc std lret adc ret sub jbe (bad) push loope xchg (bad) cmp rclb add and pushf jb in mov mov loope out mov pop notl ret mov cmc daa test call lods mov adc lea leave lods shlb lret mov aam xchg orb xor fwait fs push mov data16 or push fidivrl and jno clc lods pop test daa or inc fidivr hlt dec imul jle push mov imul sbb lcall nop insb pushf pop mov pusha cs jp dec push push push incb cs add mov push adc sbb call jge loop dec mov (bad) mov cmp pop insb test jbe lds mov lea jne mov sub xchg sub inc stos and icebp mov imul movsb imul and cmp adc xchg dec xor inc xlat cld dec pop pop adc (bad) xchg inc addr16 xchg stos popa mov jmp sahf movsb mov mov test into jl (bad) lahf pop cmp insl xchg mov faddl adc testl jo cwtl push stc adc push cmp loope scas mov sub outsl jb das (bad) xchg stos lret cmpl push mov pop add mov inc rcll in dec orl mov stos subl orl (bad) hlt mov dec mov mov pop and jae or out movsl mov mov aad pop movb jb repnz or push push or das xchg addb popa clc (bad) dec and cmp out cli push adc sahf js push cmp cmp sub pushf sahf jg leave jns lret jecxz xor push xor cmp pop inc push dec ret mov pop cmc decl in jno ret lcall in (bad) sub sbb call lret sbb (bad) fnop mov les xchg arpl dec je xor loop cmp push push cmp and mulb dec pushf cmp repz and shl fimul repz jno sub mov dec dec cs push xor bound xlat jge jge xchg dec std test xchg idiv jg xchg scas add sbb push adc test fsubr sahf repz outsl mov add mov rolb cmp and fwait cs ret jle hlt loopne das mov lahf mov sbb shlb sbb pandn lcall adc jnp (bad) in jg stos xor sub adc fimull xor push add sub scas pop mov adc std jae std out shl divl aas pusha into hlt dec loope sub (bad) arpl loope mulb loopne sbb ljmp clc imul ja cld in scas sub jne or xchg inc lods (bad) add shrl (bad) push mov das push gs test (bad) sbb aad test jle (bad) sub push xchg pop sbb sub (bad) mov xor fwait sbb cli dec fisttp sub imul iret jo sti mov pop fisubl lods in xor addr16 mov jb les inc adc mov push movsb movl xor mov (bad) fildl movsb in (bad) jl xor mov leave sub divl loop mov daa (bad) test sub sub lock push sti sub cmpsl mov add pop mull enter and pushf mov xor and mov push je fild mov outsl out adc jne aaa inc scas arpl xor cmp imul mov arpl inc lock cmp dec ljmp pushf adc aad jns stos push sbb cmp fnop cltd call push inc dec dec push scas lret imul push inc leave (bad) xor arpl (bad) jge fisttpll ds imul cltd fnstenv repnz outsb push push xchg daa xchg lods cmp sarl pop pop sti mov pushf dec or jo in (bad) bound adc aad cmc mov push xor rcrb pushf call enter cltd jmp xchg test mov add cmpsl mov call aam jb cmp icebp pop (bad) frstor (bad) ficomp or push test insb icebp loop lods sbb leave push out nop xchg rcrb pop lea popa sbb ja sbb mov xor sbb dec sbb pop jl sahf push fstps and movsb jmp lret cwtl lods pop and sbb cmp scas es jmp jnp test xor sbb and dec scas ficoml jg es outsl or sti xlat sub mov and mov stos ja ret dec xchg mov (bad) icebp mov jmp cmp andl mov stc icebp inc cmc inc inc pshufw je js jp sti mull pop inc (bad) sub (bad) lret stos hlt dec cli mov fnstcw cmp mov repz pop ds int out cmc std xchg ret sub dec and adc add lods pop or scas frstor or fimul clc xor sub inc in pop int3 or (bad) inc mov fidivl fsubrs sbb dec xchg push (bad) mov adc and arpl test faddl pop jg jmp (bad) in cmp test test data16 dec mov sub cld lock xor sarb je aam lds stos sahf adc pop mov loop push xchg dec mov pop inc pop (bad) mov sahf (bad) out and add cmp xlat std cmp insb xchg pop fstps xchg insl push dec pop not sbb clc adc ret jb jg jecxz sbb outsl add jl cmp (bad) mov lahf cmp mov xor js test scas cli in pop xor rcr sub fs in cmp jmp push jmp stos dec adc sbb sub xchg das nop cmp push dec cmp push push sti aad aaa xor gs jge add inc mov mov sbb roll push rorb pop and imulb jg mov ja int cmp inc mov fsubs mov sbb (bad) inc xor dec push dec lret push adc fcomps fstps adc sbb push push lret xchg xor ret jl repz les mov pop push push sbb scas mov pushf int3 repnz jno ss xchg and mov inc popf and mov push in lret gs pop xor pop mov sbb scas sub dec test push fwait repz dec les ja sub jbe pop (bad) push enter inc cmp lahf sahf mov xchg (bad) dec jecxz stos mov imul (bad) (bad) sbb aam imul lahf xor cmp jno mov dec push (bad) adc xchg in adc cmp stc adc lret xchg out dec lea bound (bad) fnstcw bound xchg imul adc pop (bad) mov dec lea into rcl (bad) or push stos jmp cmp push es inc inc push sbb nop mov push and adc push lods mov mov inc repz sbb repz jb push jl dec add shlb ja jno cs pop sti sahf movsl ss enter sbb gs fdivr jge repnz insb and lret subl out lds aas or std cmp mov in clc push mov (bad) inc repz aam jae test or out sbb lods daa cmpsb out pop je fimull insb xchg jecxz mov arpl inc mov xor mov mov lret call out pop adc rclb adc cltd aaa xor loop in xlat insl lods dec xlat mov fidivr sub negl jp loop mov das pop mov mov das pop mov add aas xor out stos add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fstl add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push and jecxz icebp roll leave push arpl aam popf mov (bad) leave rcr mov xor cmpsb mov cmp mov daa cmp add loope loopne adc dec pop aam fdivl in pop xchg sbb sahf push or popf inc in stc outsl xor (bad) mov xchg cmc stc push jle hlt out test loopne mov cwtl mov mov sti push cmp sbb scas jbe mov jg je sbb test xor rolb mov stc xor rcl jl xchg lret and insl mov mov jl lret xchg cmp and and inc cmpsl inc inc dec gs out imul add loopne or xor cltd into mov int (bad) aas cld mov add ss movsl mov adc mov aam imul cltd stos adc xchg testb and pop (bad) addr16 mov pop xorb jns cs pop mov aad push fsubl inc jno pop mov push xor negl push scas in jae dec pushf and jo cwtl test inc ljmp rclb aas in sub pop sbb xchg sbbl inc ret or stc fisttp insb sbb fldt mov adc push adc popa bound stos mov aas and dec stos xor or imul aad cmp jg xor cs mov notb data16 push mov push cmp sbb in push outsb addr16 xchg rclb outsb outsl push mov sti mov sub outsl cmc pop xlat fisubr push out cltd ficoml aas fs inc ja cmp cmp pop test insl popf mov in jl out jns cld shrb inc mov add mov call inc sub subb iret xchg mov dec ljmp inc imul or dec imull or jmp sti int3 scas adc lcall cmp jnp add out pop sbb rcl gs out cmp out je in mov push test in xchg shrb shll mov cmova loop sub pop adc jb xchg add sub nop stos stos cmpl out xchg sub mov testl mov aaa jg xor add in aaa mov icebp xor mov ret cmc insb pop mov jnp cmp and fdivs ljmp xchg push xchg ficom mov int adc adc mov cwtl or lea ficom iret out ljmp (bad) in shrb pop cmp adc xor fwait pop bound push dec mov add fsubl insb sub inc (bad) sahf jns lock mov daa pushf sub jmp add add pop and mov lcall pop fisub mov mov sahf pop xlat sti scas roll jp mov sub movsb pop out pop push pop pop dec xchg lret mov xor push mov cwtl jae mov aad cmp data16 lret mov mov mov mov in loopne xor mov pop (bad) cltd sbb mov mov push in mov or dec xor das or imul in bound xchg stc lret push dec test test int3 lock in cmp les and mov push or xor aam fnstcw or ret imul xchg dec xchg jmp and bound inc std sbb packssdw test shrb shrb pop and pop lahf (bad) adc cmp xor insb out or sbb jp sub xlat xlat mull imul xchg movsl ret jl push fwait sbb daa sub mov dec (bad) cld cmp pushf insb (bad) mov sub dec leave cmp pop push out dec push fmulp xchg cmp mov push (bad) mov loopne enter icebp int dec lock xchg lods jmp mov rcrb xor addr16 mov movsb xor xor jmp or sahf movsl push leave jb outsl mov bnd push xorl in mov jne int les xor aad cmpsl adc mov mov sub enter jbe arpl mov and add movsl jnp iret dec sarl cmp data16 mov jnp loopne daa fnstsw pop pop and cli mov mov nop sti mov push cmpsb jns ss fmul ljmp dec std mov repnz popf mov lea stc lods mov adc nop outsl popf jae sbb enter je pop stos pop inc cmp pop (bad) out inc mov aas lds pop and outsb xchg aad loop push pop fs and dec mov pop mov adc aaa mov fdivl xchg mov loope fisttpl mov mov ret mov sbb fldl (bad) cmp icebp jg lods xor pop out sarl mov hlt lods pop push test mov xchg sbb jecxz sub inc sahf test in ficom cwtl cmp pop bound sub (bad) in pop leave stos or data16 push push jl and or inc sub and push add clc xor cmpsl pop sbb outsl iret aad cmpsb mov push enter fucom insb add idivb sbb cltd stc cmc mov pop push adc xor or cltd insl sti adc xchg dec cmp popa in xchg push inc insl icebp mov pop mov cmp incb frstor popf push adc lahf jnp xchg popf adc mov scas scas jmp dec in and sbb movsb mov test xor pop lret insl arpl xchg (bad) (bad) out ljmp (bad) scas push sbb pop (bad) pop in lcall adc in dec test or or mov and add push jmp pop (bad) sub jns add fist std pop mov mov dec fstpl stos pop dec dec into cmp push or xchg push inc mov daa sbb cwtl mov mov and and cmpsb icebp int xchg lcall rorl fucomi call daa hlt cmp fcoms dec rolb sbb mov int push sub add das pop cld sub sub xchg (bad) jnp pop xchg inc adc xchg and mov in xor je sub add sub popf inc repz sub clc das mov aaa loope icebp je jnp xchg aaa jecxz mov or mov add inc jecxz sub icebp xchg push popf mov loope repz xchg (bad) cli sbbl pop test jg and dec mov mov sbb sub hlt and test push mov sarb pop sub in pop rolb ja pop xor adc and pop push mov jmp sar cmpsl cli dec cmpsb xor lock cmp mov xchg xchg popf popa lahf inc aad es cli jl mov test jmp outsb (bad) mov cli lret (bad) aam nop/reserved mov mov jp hlt xchg jno sahf mov and sbb fmuls add aas dec pop repnz jmp push push pushf neg lret ficompl mov vmovdqa and cmp push icebp or test sub lcall sub (bad) fisttpl fwait mov lahf xchg rol pop out fs fldl je xchg jne xor orb jae xlat scas pop les arpl loopne lods push call cmp inc enter cltd adc jne ljmp inc xchg data16 xor (bad) lock jae les lret xor pushw adc rcrb movsb xchg xchg mov jecxz fimul mov cltd jns ds insl nop push or jge or jbe mov rcrl loope (bad) inc ret mulb in ret jbe sbb mov sbb and sub pusha aam in aaa cwtl push inc mov xchg push mov leave popf add mov jns xchg jo xor xchg xor mov pop cmp in dec mov push adc push les loope push xor scas outsb aaa lahf xlat popa sti popf es in sti xchg mov in and pop cmpsb jl sti push int or xchg inc push sbb and xor jecxz pop repnz fdivl outsb mov xchg sub mov int mov pop aad fcmovnbe aad int3 fs and pushf (bad) jmp cmpsb and inc xchg mov les cwtl ss ret mov mov popa negl push ret sbb cltd adc mov xor js add fsubs fiaddl sbb (bad) in int3 in iret adc sti mov adc inc aad jne dec pop pushf (bad) xor movsb (bad) dec fnsave sbb (bad) lds mov and (bad) or jne mov dec dec leave lret pop clc shlb sbb xchg adc lods int push das test jmp cmpsl mov (bad) enter outsl loope jge sbb out hlt pop mov push out js adc test int3 out out mov sbb push push enter mov mov clc mov repnz sahf push stc push adc xchg lcall adcl mov scas push sbb xchg cmp sbb lret ja push fnsave push loopne sti lret push push rcrl jb (bad) mov test lods sub dec adc insb push ja fs cmp outsl or xchg xchg nop test call xchg loopne iret std mov clc and mov in or inc aad jnp dec mov scas pop mov mov imul adc mov mov jae aas fs iret cld insb inc fldcw mov mov loop insb js jp xchg andb aad inc pop adc cmp lahf neg pop jp add mov jnp adc stos push test inc mov dec lea add add daa jle (bad) mov mov push push mov mov stos out (bad) cli in outsl xor sbb xchg dec mov push cs int3 sbb jne sarb lret push mov sti (bad) notl popf lahf xor cmp lcall push xchg xchg cmp xor int3 enter xor sbb ja adc movsl in cmp inc out xlat push fnsave (bad) out insl ss xor leave push rcrl loopne pop cmc incb addr16 sub (bad) out and ret popf lods mov cmp add mov cmc fwait mov mov in cmpsl test aas movsl lret ds fisttpll jno fs adc cmpsb mov subb hlt (bad) xor rcrb mov inc sub aaa repnz pextrw xchg push xchg sarl xchg aaa push sbb ja sahf or movsl ret pop pop fs sti test das add mov pushf pop inc aaa add or fimull movsb mov shll adc sarb inc ficoml aas fiaddl xchg mov xchg ret int mov repz lcall sub sub xrelease mov pushf mov xchg dec pop dec push jb xor into cli mov mov in sub fidivrl lods xchg pop sbb fldcw xor cld int pop mov sub sbb sub push popa stos push out enter aam cli sub xor jecxz cltd into lods fldl daa fdivrl xor outsb push in adc ret pop lret lret mov fcoms inc outsl push adc or xchg pop pop push adc inc aam add ficom jnp xchg sub add cli cmp ret mov adc loop xor add jl push mov inc jecxz std sub mov xor in jl adc xor es data16 xchg insl push insl negl jne icebp aam mov pop add ss cmpsb scas je inc ret jmp divl xlat mov insl lock int3 lcall mov pop xchg test into leave test es addr16 xlat xchg icebp push xchg dec rcll aas mov movb xor dec mov std scas pop data16 mov stos xor push xor inc push xlat xchg (bad) shr add test mov negb adc add lock scas jge adc push inc stos jns ja and leave adc jmp (bad) fimul sub outsb jno adc mov nop adc fs std or pop push call shrb jne (bad) mov dec push rcl push sbb push sub cli cli jg lcall pop movsb xor movsb (bad) test inc enter scas test push (bad) cmp mov fwait push rolb int ret dec jno iret cmp or xchg jp stc aaa loopne cli sbb push cltd adc stos in jno xchg movsl inc push add gs stos sub (bad) int3 insl fildll fisttp xlat fimul das cmpl jmp sub sub mov or test orl cmp push popa ret lock sbb in arpl and dec (bad) or mov fistpll dec inc jle or fbld dec ljmp or xor test ffreep sub pusha push mov adc (bad) mov jno pop lret cmp mov and aaa jg jle es adc mov push add and dec movsb dec rorl push mov loopne test nop cltd push mov into icebp rcll xchg sub aas pop lahf xchg lods sub hlt lods push out loope test aam mov or stos sbb bound xchg jp jmp and stc notb add jge jg and cmp mov jp cs mov inc popf mov fsubrs pop das cmp mov mov loope aad mov leave aaa jle in sbbl div iret outsl jle mov or aad imul aas push test jb dec fldl jo clc push inc hlt and clc mov addr16 sahf cmp mov iret sahf cmp decl add aas out sar icebp and in xchg add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fsts add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb rolb (bad) xor arpl aam (bad) jmp fmul loope cwtl sbb les xor mov stc (bad) xor cmp out jge (bad) jmp sbb add add pop xor mov dec push mov loopne out imul dec rcrl and xchg mov mov lock pop imul pop dec lret pop out xor scas inc scas xor jns popf sbb xor out adc (bad) loope sbb pop aas sub mov fisub dec jecxz cmpsl mov jg ds lock out es sub inc cli test loope mov test push push outsb mov dec adc jmp mov inc cmp or lcall inc push mov clc xor xchg int divl lahf ret dec add inc push outsl cmp adc xchg test ljmp lods dec into xchg sub cmp mov mov sbb jge lods into sbb mov es movsl push imul fbstp bsf or lcall and rolb xchg mov fs fldl js inc mov in into inc icebp cmp add pushf pmaddwd (bad) les aad sub cmpsb xor pop cmp xchg and enter loop or mov fnclex fistp inc movl dec inc push (bad) (bad) dec jg ret scas and push (bad) repz push mov cmc pop movsb int3 test jecxz jge pop lock mov ret cmpsb cs pusha sahf (bad) enter ja mov sbb mov pusha jmp ja insb mov dec add lea lahf sbb inc xchg clc and sbbl outsb pop repz ds movsl sbb (bad) sub xor sbb inc dec sahf pop leave popf xchg pop jle mov and enter mov lahf insl pop add sbb dec dec push enter jb xor leave stos test je adc pusha aam leave mov jae lea adc mov (bad) notb sbb scas mov jge clc push aas leave mov dec mov push fs xchg mov dec or push dec aas jge or mov loop repnz and xchg loop decl add imul inc mov dec (bad) push xchg jle push (bad) or adc in fbld pop xchg movsl fdivrp loop or xor dec popf inc push and or aam (bad) mov popa jmp xchg inc roll arpl jge push adc das shl xchg mov decb cmc sub fs adc add test fyl2xp1 repnz scas mov jl dec popa stos fidivr mov (bad) xchg js cwtl jns push inc das mov inc and push sub ljmp push jmp inc lods and (bad) dec rorl xchg dec xchg fmul leave xchg or ss loope and stos pop lock xlat mov cmpsl add mov sub mov jle mov aad and inc out adc lock lahf aam mov ja pop test repnz cmpsl into call jl cmp mov scas xor repz inc (bad) fldcw idivl dec mov add hlt sahf in pop xchg dec or sub gs mov aaa mov add mov mov cmp and ja jecxz push popf mov jl lds mov adc movsl lock adc mov lret mov adc xchg and daa mov xor aam mov mov fcmovnbe sbb or add sbb repnz (bad) ljmp jb mov dec jg inc mov jg aad or mov nop mov and mov roll mov inc push push lret daa jne adc cmp sbb loope or cmp lahf push jns push mov aas mov fidivl gs dec mov dec fisttpll sbb push mov leave outsl cs scas mov mov (bad) push mov add loop mov ficoml mov sbb jle sbb imul das push les dec cmp lret sub sbb adc stc xor mov add cmp or aad frstor mov mov (bad) movsl mov mov cmp jae jecxz pop fs sub push (bad) vmptrst inc mov push icebp pushf mov cmp pop mov jmp pop aas xchg pop stc call fs lahf push fdivrs pop sbb adc subl pop push xor cmp mov lock test xchg repnz inc cmp add fdivl in scas in ljmp add ss xorl stos das pop enter inc xchg ss jbe pop dec mov cld lods repnz sbb cli mov push gs aas push clc or lds and mov xor xchg inc aam lock and pop test iret xchg mov mov mov xchg sbb push xchg ss adc enter stos sahf or fisttp cmp inc les jnp mov xchg cmp add arpl pop les lret sub mov cmp out pop pusha mov aaa mov test cld outsb in cmp out divb push in loopne pop pop xlat aas in push sub fsub out dec mov xor hlt cmpsb pop sbbl mov (bad) mov mov popa ss movsb mov xor enter jae rorb cmc push insb push mov stc ds dec out fstpt dec inc sbb or mov cmpsb (bad) dec mov and inc (bad) aad lcall jmp mov xor and lods cltd mov (bad) push cmp sbb pop notb popf pop pop xor mov jg fwait lsl test sub fmull sbb lret cwtl mov jbe sbb aam xlat xchg (bad) lahf orl lock repnz dec movsl mov imul cmp (bad) clc push sub test push fnop jp fwait (bad) rolb adc adc cmp adc pop mov cld xlat ds cmpsb loop dec ret popl and pusha mov xlat ljmp xchg das xor mov mov pop pop cmp shll and clc cmp xchg fsubrs inc fs lret pop bound mulb mov lods mov cmp (bad) mov aaa es sbb aaa dec mov mov aam sbb ds ret jg in (bad) dec jne repz gs dec pop mov mov hlt cmpsl mov aas cwtl push or pop mov cmovle jmp jl repnz out or sub insl aam inc inc daa js icebp outsl dec cs rorl or daa jmp (bad) cmc mov inc mov jne stos cli iret push mov and int and (bad) outsl push mov mov add cmpsl bnd adc jns sub push aad out stos dec daa adc pop call push push int3 lods fldcw shl jecxz dec repz cmp push js push ljmp lret cmp and sbb adc lods push jle pop leave out orl pop xor dec mov xchg (bad) aad mov xor dec dec push pop jmp jg inc jnp aad movsl enter cld sub mov in jecxz push or jmp adc (bad) dec sbb jns mov sarl xor push cmp rcrb pop pop pushf add inc inc fwait or and mov int outsb pushf rcr fwait add test aad aam (bad) jo,pt pop addr16 insb xor aas or adc xor sarl outsl out cpuid sahf bound mov js xor add push ror sbb mov sub jl dec dec mov fdivr rorl rorl pushf mov adc jae push sbb xchg (bad) mov stos xor mov mov inc dec mov cmp orb mov andb mov leave push out addr16 jb (bad) jecxz mov cwtl shll xor xor mov scas pop pop (bad) pop push sahf and (bad) xor js fldenv mov inc push xorl fwait into jnp test ficomp mov in fdivr ficom pop push dec xor subl fcoms push ret jae xor mov mov push sub dec lea jne (bad) mov lods dec int mov sbb shlb sbb nop jae movsb negb and adcl fs (bad) adc pop mov pop repnz or xor rorl popa jns adc mov or sbb xchg adc aas mov out xor popa loop movsl push cwtl roll fxch cltd loopne mov push jne ljmp cmp mov add adc cmp hlt icebp sbb mov mov outsb sbb jno ret lret and pop lock mov leave fstpt cwtl push sbb je push arpl fmull sbb ss cwtl push incb sub adc lds sub xchg (bad) icebp jns push mov daa fwait mov in repz (bad) out push mov outsl repz jns (bad) mov movsb push imul test push cld imul xchg sub das push divl sarl xlat andl loop out stos pop add mov jl inc jno imul or icebp mov cmp or vhsubps rsqrtps test cwtl and repnz sub test (bad) jge cmc dec (bad) push cmp loop xchg mov mov mov xor push dec push jmp xor cmp (bad) pop and pop lret pop repz adc popf mov jns cmp test roll inc mov jle es mov test mov rorl scas or sbb addr16 add adc (bad) or sbb pop dec mulb aad je imul es adc dec jecxz xchg mov or mov (bad) add pop (bad) in shr xchg pop (bad) jnp jno cmp mov jnp mov rsm jne not mov aas cmpsb push push loopne repz (bad) into hlt add fldcw popf sbb adc dec enter loopne add jb out and pop fwait mov jge pop inc or nop push (bad) xor xchg mov pop ret in daa repz imul imul fidivl add pmulhuw push mov pop mov repnz iret sbb inc or ret or mov add cmp xchg push push mov sbb loope lret imul adc add inc sbb jge mov out add inc mov jno add out addr16 cmp mov jle add enter pushf sub sbb out adc outsl sub aaa fisub sub fist dec adc xchg add stos into and add lret call cld popa dec andl add cli inc lea out push and test sbb loopne loopne call cmp out fnop fwait aad or test xor and pop lock pop cmp xchg std (bad) dec cmp cmp sbb lret sahf leave lea xor shr xor mov mov add arpl lcall addr16 daa (bad) pop scas push jg outsb jp cmpsl aas or sub out dec repnz mov xor cmpsl push popa jl cmp push mov divl mov orl movsl adc (bad) lret add adc adc (bad) mov or cmp push cmp add mov sahf mov mul rorb dec les repz cmp insb scas scas loopne imul push lock jle imul js xchg sarl fnstenv cmc xchg loopne iret dec add sti mull fdivrs imul push lcall cmp lods jae ficom fs or fdiv scas das or jb cltd mov daa push test fisttpll fimul aam lcall fidiv sbbl arpl and out push outsl outsb (bad) rcr out sbb mov divb sbb fdiv and xor xchg push lea sub cmpsb ror sbb jecxz stos or sub or cli sahf inc (bad) push lods push mov xchg mov and add push hlt ret inc std mov sub lsl jg mov sbb xchg push mov jns (bad) in dec push adc cld jo cmp push mov jne xchg pop clc andl int3 js and fisubr icebp cmp test scas cltd sub je cmp pop jle sbb ds xchg push pop mov lahf sbb pop jg xlat enter daa fstpt aad sbb stos inc test xchg add push and add sub jg adc loop xchg movsl in sub push ret das add (bad) imul (bad) sahf cmpsb adc test movsl push add out or ds inc lock iret shlb sbb push push pop fs les xchg cwtl xchg jp insb int3 and mov and in inc pop pop push pop inc and push sub mov mov fimull les cmpl xchg rcll clc repz test xchg repz dec int fwait adc cmp incb out and ds xchg sub push sbb test mov enter ret cs pop pop add pop push or roll shrl push rolb sbb ljmp mov sub adc loopne lods mov fisttpl enter daa mov int jb imul add ret movb pop dec divl rcl push mov (bad) push jnp pop sbb xchg vmovdqu mov cmpsl dec and ja je or adc pop fs adc pop idivl es int3 sbb ja push pop leave push addr16 decb xchg jnp je and sub adc cmp mov in js push insl nop arpl sub enter push iret mov add jmp push cmp mov jp call (bad) incl add pop or cld xor xchg pop sub add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop adc add or in or frstor or out out push xchg dec jmp out cs add rcr stc rcr out (bad) mov add sbb jg fist ret fwait xchg je mov pusha shrb xchg add cmp rclb mov pop repnz add scas stos xlat fmulp cld pop cli cmp push sahf dec rcrb subl popa insl cmp xchg iret and bound stos sub push mov hlt jns add xchg jecxz (bad) aam popa sbb and sbb or inc pop daa ret js scas jle (bad) gs add mov cld dec xchg lret xor dec mov sub lcall insl es popa lock nop scas stos loopne aad scas xchg clc (bad) lret mov push or aaa inc je scas xchg mov xor fcompl lahf pop out cmp sti ljmp jbe stc cwtl cmp mov (bad) divl inc vorps mov insl in push sbb jns enter push jl stc arpl mov cwtl or push sbb popa rcr cmp sbb xchg mov iret inc dec push fisttp repz mov adc inc dec xchg (bad) xor scas nop mov mov clc shrb repnz fmull insb cs and imul mov xor stc xor inc cld push mov sbb (bad) bound out or fldl pop and mov (bad) stc js and sub rorl bound mov dec xchg imul mov jl xor pop xor daa shrb or shlb fmull sub jno ljmp or pop mov pop into lcall sub mov roll pop fsubr cld mov sbb addr16 pop incl cmp in in iret fs sbb dec push repnz pop inc out cmpsb xchg jne mov out lds sub out sti (bad) sub das and jne in cmpsl lcall je testb jmp in or out jge lahf mov mov pusha stos cmpsb push sub mov sub leave icebp pshufw push sbb mov ds mov sub cmp push xchg sub mov cmp push cli lret xchg mov cmpsb push mov mov add sub mov push sbb iret test pop and inc xor add pop popf pop inc int mov jo stc dec test test popa sbb clc jns inc (bad) xor (bad) test sbb dec pop in or loope inc sbb stos aaa out cwtl jnp pop mov mov lret adc test pop arpl insb out loop cwtl call ficoml mov sub jae mov nop sti loop imul add or push pop mov and sbb mov (bad) dec sarb sub mov out fs cmpsl arpl push fdivl or into pop push ficompl iret into inc arpl pop scas notl cltd jno adc pop (bad) fildl ljmp inc mov sti mov jecxz inc std inc and fstp sbb push out cmpsb pop and push lret push mov popf fisubrl xor je out (bad) pop push sbb iret mov lods add loope xor test js pop dec mov mov inc cmpsl mov push xchg movsb push push ficompl sarb stos cs or movsl mov jecxz cmp cmpsl lret popa sub mov inc sbb aam lahf xchg or pop mov xor xchg jmp cmp pop bound or add fsubs xor xor addr16 xor stos jecxz and out into xor ret shrl xchg push ljmp dec sub cs imul cs loopne mov jb jns (bad) pop scas mov add adcb mov (bad) ja adc xlat push (bad) fldt sbb dec or stos sbb dec lahf add jno jl dec out test sbb ret dec cmp inc xchg jg lods push mov je xchg jecxz (bad) push rcrb add arpl aaa addr16 mov sub xor stos add out mov inc (bad) je adc int fcomip mov mov jo sub xor iret dec push sub add scas jnp daa jno push mov pop cmp test xor (bad) flds insb push movsb mov jl stc and mov insb (bad) sub inc mov mov shll fsub mov sbb jbe inc cmc mov rcl add dec rclb out test int loop xchg xor xor rcl (bad) and aam xchg xchg push stos sahf pop jb stos sub push pop push jecxz mov mov jb push mov cld fwait mov inc xor fwait pusha insb js repnz je test ds packuswb mov dec xchg add and jnp daa test mov addb (bad) lret xchg xchg pop xchg les ficom out outsl jecxz repz data16 push xabort movsb in xor aam xor mov adc popa lods sbb push (bad) push rcr inc std mov dec mov xchg push insb fdivrs push lods cli call adc sbb pop mov lods repnz lahf pop mov and adc jmp push cs into in adc pop and jno jae jnp and sub insb lock mov add (bad) jne mov push mov ret ret lock or xor push idiv pop pop (bad) imul or pushw imul stos dec andl lds outsl jbe cmc insb mov xor sub jno cmp push cmp push out mov mov mov inc aaa scas adc jmp outsb pop fs (bad) bound divb scas lret xor js repz les inc push cmp dec push clc test pop sub sbb sbb out out imull je add add pop mov mov out or inc jg sarb adc mov cmpb arpl cmp std stos outsb pop outsl inc mov test add cmp daa add movsb js das es in pop jl and mov aad scas inc jno mov mov sub ret add adc ret mov mov pop xchg ret mov cmp lret mov js pop add enter sti or inc add mov loopne dec shll pop cmp fstp arpl add aaa jle push mov and daa and pop mov cmpsb mov mov cmpsl dec jmp inc jb jno lods sub push xor repnz xor (bad) and sbb fisttpl add lds lahf repnz mov es aaa jns inc daa xor xchg push mov leave ret mov cmp imul movsl and inc push jg push mov les or (bad) dec xchg sub mov lods test movsl jo cmp adc (bad) stc es xchg idivl inc out lea repz adcb mov push pop sbb imul add (bad) hlt xchg push les test xor mov pop rol add ss jp cmp ret mov mov call fildll outsb sbb jb sar push pop mov push xchg sbb xchg nop ljmp outsl mov clc xchg pushl sbb cwtl insb xchg in bnd sub sar test cld repz ret push sub sub or sbb cmp xchg jb jp clc xchg xor movsb idivl (bad) sub jle xchg shrb or mov arpl pop mov add das les lea mov or inc and into pop dec push xor pop xchg stc insl addr16 rcr shlb sub mov aam pop pop inc out stc lahf jg dec adc and addr16 lea adc daa fisubl fwait add cmpb sub ror cmp mov add (bad) out shr dec (bad) lea xchg jecxz sbb sub xor sarl lret xchg mov fidivl push lea mov jmp pop insl sub pop or add aam stos and or jle push or push cmp enter pop jl mov mov adc test add xchg addr16 mov xor repnz push mov in mov lds jge bound pusha test cld pop inc dec fcoml push mov mov push sbb (bad) xchg call std stos mov dec rcr (bad) dec adc outsl fmuls cmp cmp movsb push out (bad) jmp (bad) mov sub xchg sbb addr16 jl and xchg and adc sti sub cmp enter push push out xchg (bad) sub daa inc sbb (bad) ret push jno and inc cld jecxz fisttp clc sub popa and adc sbb or hlt inc mov addr16 clc xor mov scas inc js or dec call dec add inc xlat mov sbb or in fidivrl jp and test pusha add fs push icebp push cmp insb adc mov lea fstpt xor push ret and inc xchg cmp test sar mov lahf xor lods fdivl dec cmpsl lods mov push (bad) xchg cmpsb ret cli inc repnz jle push je or outsl jecxz fmuls ss test aam les lods sub (bad) paddq or pop adc nop sub into pop movl int3 sbb pop jecxz jmp lods jno cmp stos mov cmp jle lods push jbe in push or into divb sahf xchg mov dec add xchg jmp mov mov mov cmpsl or xchg loopne aad pop fwait lock cmp adc (bad) xor xchg sub int xor in leavew je or xlat mov je cmpsb out in (bad) mov call adc or clc adc (bad) fcomps sbb imul push (bad) cmp pop popf adc repz mov mov sti pop inc imul dec repz out je les loop sbb xchg movsl fwait inc popa aas xorl adc mov mov enter cs xchg pop lret xor push jg cmp add loope inc arpl cmpsb mov jl mov pop out xchg sbb insl lret mov pop fbld jp sbb pop movsl adc mov pop adcl fs (bad) rorl repz cmp enter dec xchg and mov xchg and or popf data16 inc out mov adc sub pushf mov icebp out cli push xchg repz xchg out jns daa addr16 insl xchg ljmp es call gs sarb enter clc jl ljmp mov xchg dec xchg mov mov jne xchg ss (bad) adc shrl mov loope,pt fisub cmp ja mov mov std sti mov inc cmc mov push cs pop push mov jae fwait cmp mov xchg mov pushf sbb dec js inc xchg in sbb or dec mov jmp sbb jp iret mov iret dec dec pop push lods mov mov jl aam jmp cmp out out data16 hlt sbbl xchg cmp ljmp dec ds cmp aam (bad) and pop jg fisubl ret sbb ja stc es notb lcall adc pop ds or jne and stos mov pop mov xor add dec hlt push jo andl sub dec lahf in repz jp inc xor andl lea push sbb mov inc xchg sbb sbb in sarl (bad) inc in scas push popf daa xchg fnstcw cmp dec push jmp pop sbb mov roll mov in ljmp lods imul pushf lahf add movsb push (bad) cld cmpsl int cmp aad stc jge cmp xor ljmp mov notb lods leave jns inc fadds popa push sbb outsb (bad) movsb xor add js cmp shrl icebp add add jnp in pop insb cmp ds mov cmp das add das mov test mov test pop aaa mov pop and daa add das mov divb dec cmp inc sub aas ja addr16 xchg push lahf pushf or pusha cli add mov xlat test mov push jecxz dec adc mov or and cld jbe mov adc or adc insb in pop nopl sub out jbe fidivr push fs adc mov (bad) dec cmp cmp adc jo adc add lahf mov out scas cld fisub cmp xchg test sbb xchg jle aad xchg scas xchg ror in (bad) mov jo jno scas xor dec mov je cli jnp inc arpl pop inc fisubrl or loope dec dec mov or mov (bad) (bad) mov dec xchg popf das lahf out mov xchg adc daa cmpsb lret mov (bad) xor sub movsl clc nop in outsb mov pop clc sbbb cld fdivrl sti (bad) xchg dec push xor test in rolb cmpsb outsb adc jne push (bad) (bad) xor pop add jp loop mov xor dec repnz adc xchg lahf push popa jmp stc ret inc aas cmp rsqrtps in out daa mov (bad) cmc sub jbe push cmp (bad) cwtl push out or jo jae std push sub mov xor jnp push loop jg ja test scas xchg lahf xor dec lea xor cmp or repz pop xchg ret or adc movsl dec mov jecxz or push fcmovu pushf push fsubl mov rorb mov es rcrb mov push pushf test push cld pop or jp ljmp jp ljmp cli incl add pop dec lahf fdivrs push das dec add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add (bad) adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop xchg or fmuls inc xchg push nop inc repnz dec xchg out adc adc fisttpll xor (bad) rcr sbb cmp cmp add jg dec stos sub mov push repz icebp jl addr16 lcall mov cs fistpll loopne push add lea test cwtl mov jnp pop pop (bad) add and lahf mov popa adc pop push xor xor xchg into ds jbe push fmuls xchg pop sbb inc cmp and lods int cmp or add jne or ucomiss and (bad) push dec push jle mov lahf insl in dec inc lods test pop out and scas lods inc ljmp inc leave test mov add rorl imul out jno cltd ret (bad) std or sbb dec lods and inc lret cmpsb push sub mov jecxz xor out mov pop mov test mov es imul imul sub repnz sarb (bad) pop fs cmp fdiv fild loope jmp rclb (bad) ljmp pop loopne xlat jecxz mov dec out add mov aad xor pop mov dec lahf shlb lds and xchg push xchg xor push jg aas adc or pop incb inc int3 stc psubd imul adc sar mov je dec cmp outsl pop mov aaa hlt ret aam decl sub sahf (bad) xchg mull dec mov repnz push lahf cltd insb xor jo mov addl (bad) (bad) outsl xchg rcrl imul inc subl cmp fucomp mov mov rol add out movsbl jns rol inc mov aad mov pushf jl popf mov pop repnz sub cmp std ret movsl scas inc mov iret test pop cmp popf push stc fwait sbb xorb div add and cltd sbb bound jp xchg fadds insb mov clc dec lods test imul jp jae out cwtl (bad) out inc dec cmp mov jne adc aad lret sub lds aam push mov sub mov test stc inc pop inc sbb gs jge pop ja jmp sbb mov arpl out dec add sbb pushf push aaa cmpsl jp dec call push cmc adc mov pop jno sbb and mov cld js dec idivl jecxz movsl out jo arpl imul cmp add push sub lods inc and mov mov lret scas lea stos ja xor (bad) ljmp push mov (bad) lret mov pop ss and js daa hlt inc repz movsb lret stos int ljmp xorl int3 jns push inc (bad) and loop sub stos aam dec dec enter mov lahf (bad) lret rorb inc repz imul xchg mov arpl or clc mov lret mov nop stos sub xchg negb andl fist test adc mov push fwait (bad) sbb jmp hlt inc repnz inc fisttpll popf test mov fdivl movsl bswap movsb inc xchg mov aaa outsl inc ljmp psllq jae das lds cmp xor test scas incb jne push sbb adc pop sub clc (bad) hlt jl leave adc cmpsl mov push sub xchg lret cmpsb push pop fidivr fildll sub in aaa push mov push scas and lea xchg pusha lock push push (bad) bnd stos out in inc and dec je test enter lods mov fistpl (bad) out jns insl adc jo mov mov mov add cli lods test (bad) cmpsl test sbb enter out int out andl mov mov mov dec dec xchg ret adc jmp fsubl jns mov insb xor cli ja cmp xchg push xchg jg mov inc push add inc pop imul les xchg call lret lcall enter adc (bad) shl jle ret or cmpl es cmp cmp inc jnp aad cmp push or pop sub pop jle test lret rorb or jo mov test xchg push fisttpl add cld test xlat lret sub sub sub test sbb adc pop jbe mov stos inc popl daa ja xchg dec jg xchg push jp sbb xchg jne insl add fnstcw jb test insl pop rorl xchg aaa scas cmp mov orl dec mov mov lahf (bad) leave addl mov iret push lcall gs push (bad) dec mov loop inc xchg cli loop incb jmp mov sbb sbbl imul and jp lcall lods adc movsl push (bad) mov roll cmp xor cmp enter sub cs mov pop mov outsb in xorb in ljmp ss ja faddp sbb ret stc dec pop mov cmp inc push sub lea pop or mov out std pop cs movsb xor out out cmp add hlt jnp sbb cwtl or test daa ficomp ss xchg popf sbb sub lock mov rorb xchg pop xor lahf sbb push insl fimul xchg xchg rclb dec mov in xlat iret jge pop xchg test jecxz cli das nop mov xchg mov xchg iret int xor inc and jne addr16 enter mov in lahf stos popf mov imul jno pop out xor pop into push into stc frstor and dec xchg inc xchg sbb iret dec inc (bad) flds js lds xchg imul ds pop test movsl bound aam in lcall inc sbb mov sbb xor jmp xor sub sub sbb cmp scas or pusha cmpsb hlt cmp outsl sub aas test fcmovb fs mov mov scas and data16 adc call xor cli movsb in mov lcall lahf in jl in pop xchg sahf pop icebp leave push aas cmp inc std inc pop mov lahf fisub mov in push repnz mov lret sbb inc dec rol mov data16 dec mov fldl fdivs xchg into clc xchg add scas xchg enter push mov fs xchg sbb call pop test addr16 dec or stc icebp cltd rclb test dec dec jne push xchg cmp addr16 xchg iret daa call ja leave (bad) pop (bad) roll xchg xor cwtl jb mov or pop icebp idiv imul fnop mov je or xchg mov outsb fucomip mov push jo mov sbb fcoms mov cmc jge mov leave xchg out ss sbb xor scas jp push mov int3 adcl cmp fwait sbb aam xor inc rcrb test mov and lea jae add mov js push ja dec xchg jge aam (bad) std push cltd push pop cmp sbb add xlat rorl std adc or mov std data16 aam (bad) xchg sub sbb xor das out inc xchg add movsb lock mov fwait std add out inc pop mov sbb shl adc xchg jno pop adc call mov (bad) in sbb ret sbb int sbb mov pop cli mov sbbl jmp jae dec dec aam xor xchg xchg jecxz mov or ljmp popa jne cmp push (bad) pop sti stos or sub push test lea in xor pop out pushf lcall mov pop shrb jp xor mov popf leave mov cmp cmpsb das xchg or dec mov lahf movb push push mov xchg popa sub cmpl adcl mov or les sbb mov pop pop gs jne mov jmp dec push fldcw xchg mov (bad) sti lcall sub (bad) jp pusha pop xchg mov popf adc jbe pop xor loope hlt lret push mov movsl adc ror adc mov push and hlt push fmul pop xchg inc (bad) rcrl dec and sbb cli stc xor les sub fwait in mov xor nop sar cmp std jae cmp xchg xchg aad mov inc aaa or adc dec adc xchg imull jge cwtl (bad) adc mov adc in enter sti xchg scas mov mov insb mov outsb adc push xor mov data16 aad fcompl loop scas xchg test in int clc lock jecxz repz inc mov mov jns pop sarl push stc call aam adc xlat or pop mov rcll xor das es std ss subl push (bad) add dec out cmc outsl and xor lods cmp jmp cmp aam stos jo inc fadds cli not repz cmp inc mov insb fnclex mov imul fwait sbb fbld js mov cmpsb adc in out movsl sarb mov or or ficoml pop or outsb out pop sbb mov mov or mov cmp mov ja data16 nop inc push in jnp sbb or fcmovb jbe es ja pop xorl xchg aas popl inc xor scas jg (bad) push call xor pop sub cmp gs dec pop (bad) je fbld jae and hlt adc dec mov sbb test sbb push dec jp mov add sahf add jnp mov test pop or xchg or popa xor cwtl jecxz icebp or decb hlt push mov cmc call loopne bound (bad) cwtl add insb dec inc (bad) pop mov pop cli push xchg inc add std hlt lcall lods stos out aaa dec mov arpl xchg jle add movsb pop mov mov movl xor inc mov dec sbb (bad) pusha outsb cmp das sub mov std add sti push xor (bad) ss and sub movsb ror push push aas mov subl adc fdivs fwait jns mov mov call xchg mov xor data16 loop lahf out jb insl mov stos mov mov call mov sbb (bad) shl in mov loopne ret cmp out scas or ljmp sar lcall xchg xchg (bad) push not (bad) inc add push lcall jg subl out pop xchg outsl lahf lret cmp pop cmc sahf dec adc sub mov cmp sahf pop add (bad) xlat ss movsb inc push jl loop out icebp push or inc pop in rcpps sbb outsl in out fwait jp aam and scas scas (bad) add dec lock mov jns jecxz sbb dec (bad) (bad) pusha es jae push xor call in fimull mov lods shlb addr16 repnz push dec cmp loop or sti aam push jge loop stos pop sbb imul cwtl popa nop cmp mov cmp (bad) lods sub stc test mov inc sub data16 (bad) pop mov daa and pop (bad) pop push lods or in popa jae cltd sar xlat and lea lea dec push inc (bad) mov (bad) mov inc movsl rolb insb sub jo mov adc sub idivl gs hlt pop sub mov sub fwait mov into sbb call push dec testl xor (bad) xor mov or xchg push push not push cmpsb sbb mov pop xchg in sub cwtl mov sbb mov dec mov aad out push xchg cmp sbb out pmulhuw in lahf push mov dec test lahf sbb xchg scas jbe test cmp lock sbb mov nop insb sbb out fisttpl cli int jns adc mov jge bound cmp dec push mov outsl vandps sti ds cmpsb and pusha xor das incl stos jno cmp lahf jmp adc push push fwait xor push jp cltd (bad) std (bad) sub dec mov xchg mov pop orl je mov rorl xchg dec cmp mov dec cmp or push dec addr16 sbb mov movsb repz inc out stos jg ret loope repnz in push push std scas inc and push aam inc mov push xor push movsb cmp xchg sbb mov mull fdiv std loope inc push sti sub mov push push ljmp call jb jecxz outsl add cmp xlat jns mov sbbl dec sub dec movsb jbe aas xor mov lea or mov subl sbb mov fs or or shr mov push sbb les mov push jle xor mov push js inc repz xchg adcl movsl sub mov rolb or divb movsl outsb sub stc sbb and mov push cmp sar jp mov repnz test lcall test icebp xchg xchg lcall dec btr pop cmp mov mov outsb or mov push shrl adc call mov pop push jo test (bad) dec adc jmp mov ljmp daa cmc jmp inc (bad) mov or andl cmp mov stos sarb scas aas test dec inc test dec mov imul add cmp icebp pop push dec dec dec dec std xchg push sbb xor in imul movsl xor xlat jle leave pop xchg aas jno add pop add mov ja jne fsubrl sarb loop cmc pop pop add jecxz adc add cld adc add roll cmp in stc dec in xor lret das gs cmc inc (bad) mov iret sahf cmp mov iret sahf cmp mov aas add jg pop mov mov add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add xlat adc add mov inc or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc push push aas aam rolb lahf in mov gs mov cs (bad) adc mov gs xchg and fs nop (bad) jno out faddp jecxz xor cld scas jne loopw (bad) bound dec mov test adc mov sbb push je aam cli and iret jg arpl jmp loop or xchg popa cmc loop out mov (bad) jl mov aad ljmp (bad) xor pop inc insb push test and call mov mov rcrb push gs jecxz negb call push mov sub cmp mov inc cltd mov jmp xchg mov je cmc cmp dec push mov xchg xchg aas jmp inc scas bound and jp push nop mov movsb lods bound lea movsb clc adc rcr imul fnstenv repz cmp (bad) jnp pop xchg in pop push push cmp test (bad) mov jle daa mov mov jns sub jecxz (bad) or ret xchg and sbb loop fmull repz out (bad) notl enter loope out xor sub pop mov dec lahf int3 gs and clc add (bad) pop pop (bad) hlt pop xchg cltd addr16 push and (bad) icebp test into push pop sub fidivl clc clc sub fistp dec std jecxz xor xchg repnz lock push pop adc xchg adc jo cmp mov es mov jmp pop ret fnstenv test rclb sub push hlt stos test das push nop mov repz arpl das idivl fsubrl insl into mov and jp test les aad cld loop inc push xor orl push nop xchg pop pusha out cld lcall pop xchg mov mov clc jmp add out mov jbe xlat cmp mov js cmpsl cmpsl xlat sahf incb xchg movsb dec dec mov sub lcall aas cmpsb sbb rclb xor imul inc lcall jnp xor loopne incl mov jp and pop leave cmc cmp push jecxz jo repnz add or mov stos mov inc lea xchg push mov sub sbb int (bad) (bad) push inc inc (bad) mov dec stos popf stos push add or jle movsb (bad) mov jmp mov sarl xchg pop mov sub add mov sbb mov dec call cwtl cmp andl jne xlat add test dec enter jnp jnp imul pop inc lcall sbb (bad) hlt push das cltd mov mov (bad) aaa mov cltd sbb nop add push (bad) into fiaddl adc dec lods push notb cmc sahf lock push sbb dec sub outsl imul jns sbb ret and int3 dec sbb das (bad) mov jo fstpt and mov or stos test cmp cltd cmpsb cld add fistl in mov mov sbb xlat and inc std (bad) sahf pop es sbb movsl jno outsl dec cld adc add adc jno out add mov movsb pusha popa pop mov (bad) mov es or adc inc dec enter lret dec add iret popf pop xchg loope jne jo pop xchg pop sbb (bad) into pop mov out pop mov jbe outsb iret and stc (bad) fiaddl jmp mov mov outsb adc xchg sub shll or mov lret sti pushf mov mov aam lods mov mov cli or sub mov rcrl mov data16 xchg movsl or ret xchg push call inc stos sub mov movsb in xchg ret pop std icebp adc out push (bad) dec pop mov adc xor mov jno aaa jle daa dec imul jae jg loop roll adc mov pop in mov imul dec adc add lret cmp or mov imul imul jg fs push mov adc imul push rorl jg xchg dec xor not add mov xchg call and cld adc sub incl jle jp mov je ds mov or inc scas and pop popa loope sbb mov imul test cmp dec pop cld popf aam rcrl pop ror adc push pop cmp movsl sub icebp adc mov dec jg or push bound xchg mov sysenter and leave and mov inc cmp stos imull ja or cltd cmovbe push cmp into (bad) pop add lcall mov mov xchg stos addr16 jno jecxz sahf mov iret test mov sbb mov jg xlat pushf int3 div mov lcall in repz sub push stos notl mov jnp add mov in inc jmp gs in mov js dec cli test aam or mov inc negb xor fcmovne and dec dec jb or fcoms or hlt popf sarl adc scas add pop (bad) xor in dec das jnp push enter imul cld inc mov push scas mov mov fs or popa lcallw push test lock jp jecxz mov push (bad) lret ficoml fisub xor push imul pop scas push stos movsb stc cltd cmp cwtl or insl rol in in lock jmp mov mov out flds and pop mov pop popl inc icebp cld (bad) or scas cmp shrl leave and xchg call xchg jmp push jno (bad) pop lret mov testl ja mov addr16 mov and add dec sbb add cli sub or sti (bad) mov aad mov ja jecxz push mov pop xor mov frstor lret stos mov mov jp (bad) xor loopne test push jnp ror aam and addl xchg fmull inc daa cmp pop pop ret jg lahf leave (bad) repz (bad) cmp sbb stos out (bad) (bad) in sahf xor movb jg inc pop cmp sbb mov xchg push ret mov and mov sub lea mov aam pusha mov lods cs (bad) dec cmp dec scas sub mov adc in mov cmp mov jo ss push xchg lret cwtl sbb lret mov xchg mov or cli insb mov push mov jne sbb loopne xor lds sub cmp std mov mov add sbbl faddl xchg (bad) das fistp mov sub xchg aas dec movsl stos (bad) xor mov adc mov daa fldl2e xchg pop push bound lcall aas loope push test inc sub sbb fdivp pop mov (bad) mov es pop sub mov je inc std enter pop clc aad hlt mov flds push inc push imul mov push push ds jbe cmp int and mov adc fisubl or dec into xchg dec add xchg cmpl nop insl scas outsl inc or push (bad) aad pop cmp inc or or loopne add sbb lret ret out stos insb insb iret imul movsb inc and cwtl cmpsb sbb icebp push call adc add insl loop clc sub xchg and (bad) rcrl (bad) push lcall cmp mov xchg loope into cmpsb ss pop jmp or hlt adc mov xor jge sbb jno mov mov xchg lahf pop repnz dec sbb add jecxz fisttpll xchg fmulp xchg std ror dec cld shl fcomip mov fisttp sar ror sti mov sub call insl out mov jg adc jmp out sahf pushf addr16 scas repnz loop push adcb mov xor es addr16 sbb xchg stos jo fs js dec (bad) sub (bad) subl loopne mov outsl adc sbb xlat cmc fldt dec iret aam idivl shlb lock and mov sarl aam movsb inc dec in stos jo aad mov jns mov aad jmp popf es insl mov mov sbb pop ret (bad) lret aas out push int3 fisttpll inc mov insl adc lea test (bad) sbb scas mov lret xchg icebp xor int3 jbe lods (bad) (bad) stc cmp pop repz fist test scas fdivp (bad) sti sahf pop mov sbb mov push arpl inc cmp test ret pop push mov jecxz mov divl outsb inc sbb sub in xor arpl mov fdivrl repnz pop aad testl fcoms pop dec xchg push jno mov ret xor sbb int push das xchg mov mov push imul jnp js inc xchg int3 mov cmp push jge xchg or stos dec fsts pop fstps aas mov ret mov (bad) jo les leave jno and sub pusha inc xorl (bad) ficoml mov cs push mov sbb jecxz flds add cmp (bad) mov aaa cltd ja xchg sbb push jmp imulb mov mov mov jg mov push stc (bad) mov push out mov sbb daa jns push cmp pop inc das in jno sbb iret mov xchg (bad) pop cmp xor cmpsl out cld push pop test in pop adc and aad out movsb dec jecxz or mov stc mov mov dec or inc inc dec adc adc push sbb scas inc xor aaa sub mov jge (bad) in mov popf popa mov sti mov rcr les push and (bad) cli sarb stos movsl lods sti lahf idivl jbe in push dec in jns outsb shlb and inc inc or shrb mov movd adc sahf cmp enter sarl imul inc push push arpl add gs push mov dec sub jge repz pop nop mov sub inc insb pop insl popa rcll daa pushl clc xchg insb mov (bad) xor mov cmpl call pop dec (bad) test lahf sub js push sub mov (bad) mov scas push xchg cmp xlat test stos jmp xor cs sbb int3 stos cli out leave out jg push or or loope loopne mov inc sub sub pop cmpsl sub push lock fisttp scas jl mov lahf int3 fldcw fisttp mov sub dec fwait (bad) popa pop es jae icebp inc loop cmp pop arpl and jl add rcr push adcl rcr sub js jmp sub pop dec push adc (bad) pop push mov mov push mov outsb and std insb ds sub popa out cwtl das scas rcrb das adc popf push adc jo sbb pop mov mov testb xor inc mov pop or sahf sbb popf daa aas or not fdivrp xchg aas dec scas fnstsw fwait or and jns fs dec xchg cmp stos or ret xor push xor loope cwtl inc pop jb (bad) nop inc inc pop mov sub push pop lods xchg push stos jbe lret hlt mov lock pop or pop or in or cld and sub mov fiaddl clc data16 pop dec fwait mov pop jle movsl fcmovu fimull pusha xor clc in dec jecxz mov add ja sub je cmp les cmp das leave mov sub iret call pop sub ljmp and or clc (bad) xor and and insb dec insb stos popa or data16 les push pusha aaa repz xlat cmpsb inc ret ja ficom test adc pushf test (bad) ja call imull lods icebp repz push pop cli and lcall mov arpl add jno into mov pop jge add jg sub mov xchg int3 scas imul add cmc outsl pop mov (bad) sbb pop into mov mov js dec test jo dec dec xor mov pusha fsubrl insl adc leave iret and nop data16 push outsl add fmull mov sbb jns testl dec xor jns xchg pop lahf fsqrt popf xor cmp add aaa (bad) sti scas sbb cltd mov je xor daa out sub push xlat daa sub sbb sbb push (bad) jmp adc sub test pop mov sbb test pop or lret and pop dec int xchg sar aaa jne cs sub mov jae push xlat jge cmpsl cmp pop mov push in data16 cwtl mov jg pushf fnstenv mov fisubrl sub xchg xchg int leave inc nop jb test mov push and loop (bad) xor in test jl jl icebp sbb cmp test test repnz shr jecxz jno (bad) pushl bound adc (bad) out xor jnp stos push pop xor insb mov jne dec mov cmpsl jp push test into addr16 inc (bad) icebp push inc xchg adc or and enter mov add adc das mov pop xchg sti jp pop pop fidiv xchg (bad) test mov sbb daa jne aaa notb mov sarl pop movsb jp cmp loope pop push hlt outsb rol nop sar sarb mov jnp out fnstsw (bad) aas add jg rcrl out inc inc sti pusha push add add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ficoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb add lock mov cmp (bad) je cmpsb cmpsl xchg xor fnsave fnstsw xchg fwait cmp into xor js pop jecxz add and call (bad) (bad) call cmp mov out leave imul pop pop loope (bad) jp movl lods jbe fwait push jns,pt iret xchg popf mov mov aam mov lcall popa jecxz (bad) ds xchg push cltd js sarb jns arpl bnd cmpsb scas out bnd push ja ja sub cmpsb lods cmpsl jg jmp sub les sub xchg sub mov clc add dec (bad) xor cmpsl cmp mov sub mov arpl and in lcall (bad) repnz sbb mov aam idiv xlat ljmp hlt cltd and jns xlat and jbe push jg je jp fstps jns pop dec mov xor aas xchg sbb mov ret xor leave push jo or push shlb mov aaa lret je pop push arpl or sub ficoml sbb xchg call pop daa in test jo mov jnp dec pusha outsb xchg jne (bad) jmp jnp or xor fcmovnbe inc dec and cmpsb xor in dec sub sub scas push xor repz cmpsb ret movb pop or loope insb outsb inc add dec add fidivl jb sbb mov andl add fildl lret mov pop in js xorb sub adc cltd sub pop inc dec (bad) mov das fwait mov pop in insb xchg scas cltd decl test pop inc sbb andb fldl iret lods sub sub xchg in test or fisttpll pusha mov enter dec ficoml xor out cmpsb cmp andb add icebp out outsl mov fs xchg xor pop mov ja xor inc call mov js or lock mov rcll xchg test jp jmp inc cmpsb scas jnp jbe sbb xor mov inc lods test xchg mov jbe cmp shrl pop jno data16 and repnz cmp or out lahf push jbe sahf out fimul inc roll lret pop lds and or jbe cwtl mov mov mov jae nop cli xlat hlt push jp std jl add add scas cltd adc fwait pop stos (bad) div adc jne dec mov mov daa xchg push xchg dec pop into loopne xor jle cmp in nop mov push sbb jne push and icebp inc in mov pusha lds sub sub addr16 inc pop jbe pop or pop mov ljmp addr16 mov sbbl dec push adc mov js dec lods out xor adc pop (bad) enter stc cmp mov jp mov adc xchg notb sbb inc jno ds (bad) xchg std push into mov xchg pushf ja xchg cmp and dec adc aam repnz loope mulb ret jns sahf cmp movsl mov cld cmpsb pushf sub fldl sbb stos cmp (bad) cmp mov push push jle add push neg pop inc sub sahf jmp xchg mov mov sub lcall push pop or insl cltd lret xchg add cld or fcomps in xchg inc mov cmpsl sbb jg fwait (bad) dec lahf jp inc or dec or pop push jecxz loop xchg mov inc jge xchg sbb js inc sub mov int pop sbb pop xlat dec (bad) fbstp outsl imul ja sar add ret cmpsl add jno ds fistpll and mov rcrl mov into mov mov div jnp (bad) dec and dec mov bound push mov pop inc jne int3 decl add mov jg pop jge int jno test js ret jmp daa pop jns inc subb in in jle std loope xchg or fwait mov cltd icebp (bad) mov add je jae mov insl js mov rcrl xor lea xchg sbb ficom xor lods cs fucom and sbb sub xchg repnz clc mov or cmp lods in outsl je xchg ja push sbb nop movsl mov data16 push fildl add jge sub inc (bad) aas sub jns push es cli popa pop scas mov ja mov lahf mov jnp pop js js mov or hlt in rcrb mov push cmp rcr jns loop mov push push sub addr16 std fbld das mov ret mov cmp inc push fcmovbe into data16 lcall xor pushf aad jbe fwait cld iret dec push mov enter cld mov jl pop xor pop push xor push pop aad insb lahf icebp in and imul lods repz inc jbe cld cmc inc scas imul negl push or xlat lahf out mov xchg sub push push xor lahf iret mov je jo fsubl mov xchg pop push rol sbb rorb scas rorb xor xor lret pop ja xchg inc lret dec mov lds out out sbb bnd imul sub pop inc dec (bad) cmp xlat pop push pop pop sahf cmpsb inc rolb jns das in sar fs push aas cmpsl addr16 ret adc addr16 leave ss push adc (bad) mov mov lret in and imul js sub mov push lcall pop mov clc loope inc jbe rcll rcrl ffree lods je pop popa fildll pop jl dec inc mov xchg jge pop enter or ljmp loop push stos stos aas xor sub sub lcall sbb cmpsb mov mov mov cmc or push out fild (bad) cwtl jmp ds mov mov mov jns mov cmp cmpsb es jno js sti sbb jecxz or mov popf mov jmp out jle das popf leave hlt mov popf inc mov ror in int3 mov lock mov or mov and popf cld cmp xlat mov mov imul mov sahf jle mov scas inc repnz mov ret mov test jno imul outsl mov cmp subb xor fdivr sbb jb mov (bad) test out jae push (bad) jl lods push clc fdiv in (bad) gs ss lods dec lods sub dec jmp jne xor test fs outsl fdivr sub push ja xor out xchg xchg mov inc cmp jo (bad) leave mov xchg aas add test movsl sar sahf xor and sbb loope jg xlat adc fbld inc aam jle or mov push sbb add ljmp sbb ret cmp jns rolb loop je orb (bad) push in js fdivrs into mov scas into sbb sub adc loopne inc mov push jo and int3 pop and lcall mov cli call cmpsb mov inc jnp sub insl stos xor inc bound hlt mov stos jb std sahf testb and out out xlat sbbb add sti out out lahf jnp scas mov dec movsl sti dec int3 (bad) cli adc sbb mov adc push mov (bad) mov iret pop xchg mov jge aad adc fadds or add cmpsl push divb and push lods cmp cmp pop hlt jns and or fistpll inc pop jo push (bad) not enter sti pop stos fbstp jae xor std mov repz xor aas sbb sub das push cmpl arpl dec add icebp adc dec testl (bad) scas enter cs mov sub xor aaa mov mov mov in add scas sub aas mov cltd sbb jmp fs out sub push cli fdivl inc mul aas (bad) ds mov dec push pop out out sub popa mov mov pushf jmp sbb mov mov daa mov jno ja out mov test ret adc xchg rorl push shr pop pop gs push repz adc in dec lret ds cmp pop mov mov stos xchg popa in and ds fwait arpl inc or jp mov mov pop jo dec fwait dec stos iret je pushf pop mov imul imul jne xor push xor xchg aaa xlat lea es or mov (bad) clc xchg mov adc fisubrl pop leave fstpt pusha jnp negb test dec mov cmp imul ror jl push inc xchg inc pop cs mov pop xor xor dec sub fmul cmp sbb adc push mov lods xchg pop push or xor or mov imul ss mov xchg mov xchg pop ss hlt ret stos inc adc stos in ret sub outsl rorb cli sub lret push add lods test or fistl outsl sub dec out aad ret cmc mov clc ds enter aaa cmp (bad) idivb test push mov bound movsb fwait sub push sbb addb test jnp adc cmp cwtl mov add mov mov test (bad) mov jg add test into lret mov mov outsb adc push xor xchg sbb outsl stos fisub push jmp imul adc addl pop and in mov jo jb insb insb repz mov aam ss push and into lock rcrl cmp push pop xchg cmp aaa mov sub iret mov xor add rcll dec sbb dec pop outsl jl cmpsb push jl pusha inc xchg xor fidivr jne dec hlt lea stos gs ds addr16 inc ret jb int3 int add hlt in lahf lahf cmp pop mov push jl in inc push repz jnp lret cmpsl js sbb addr16 popa cmpsb fisttpll sbb jg jb scas data16 jnp xor xchg jne push mov jle ja sti (bad) dec mov ret cld adc push and movsb int3 xchg sbb jmp cmc jbe mov jnp mov push jne dec sub add inc inc sub outsb jg push sarb daa jge dec in sbb xchg sbb scas adc (bad) (bad) js xchg push cmp mov and xor int xchg jae jle call rcrb cmp pop push xor inc pop sbb (bad) in xchg fidivrl fnstsw jp inc pop ljmp or sub xchg fstl jbe lcall cmp dec xchg fdivp decb out push cmp inc mov dec xchg rclb (bad) fcompl imul sbb stos addr16 mov sub add aaa dec test mov rorl jae popa xor jmp or adc int3 or jns in outsl cmovne xchg in and mov cmp fstl insb and sub ret push xchg rorb push pop in sub mov in ljmp (bad) mov in dec dec add inc out mov jne clc jae jge mov fmul jp mov dec negl or scas lea faddp in pop mov cld sti jbe mov (bad) mov xchg out lcall pop gs add jle mov dec mov mov cli mov adc ds inc bound loop push jl inc into mov int loope cld int and (bad) divb dec jo pop dec jae jge inc dec in ret xor (bad) (bad) test mov (bad) fnstenv xor adc (bad) mov or mov dec inc mov adc jp loope or adcl and xor popf push adc scas xchg dec push cs frstor outsl nop pop inc mov and xlat jg xchg sbb add mov fdivs (bad) js mov sub dec push mov (bad) push lock mov test test test scas jl inc repnz test sbb pushf mov jne or xchg sbb movsl sti sbb int mov push jg jnp mov rorb xor or out das xor das jbe pushf je or add xchg fs sbb jb push mov imul xchg mov dec sahf pop lret add jg movsb ret movsl xor inc cmp (bad) pop sub cltd jb dec xor add mov xor clc jno push add and inc jmp mov pop repnz popl sub lahf repnz push fsts xor cmp imul popa fldt pop push int jp enter cli cmp xchg or pop pop jnp push cli mov xchg inc push xchg addr16 push pop loop and aam cli and cmp incb mov movsl fs popf (bad) cmpsl mov or aad adcl divb xor xchg (bad) pop les add jg test popf jle and arpl subl into fild shr xor push roll mov stos fldcw mov inc fwait movsb stos inc cli loope (bad) mov loope push movsl xchg sub in out push inc lret mov fmull cld mov rorb popa dec push lock inc or repnz popf fwait add sahf xchg cmp scas lcall jno and lret or int addb push and out push lcall rcll and repz bound scas inc adc dec sahf cmp repnz xchg daa dec sahf cmp repnz xchg daa dec (bad) jg add add xor cmpsl mov dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add fsts add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push pop xchg or push cmp frstor mov fnsave inc jle jb je movsb and sbb sub rcr and xor (bad) loope mov add cmp bts iret (bad) loope jo aam data16 mov sarb pop add lret (bad) mov and roll outsb fcompl je outsl dec icebp inc shl jae sets into cmp lcall iret into sub idiv addl cld scas sub rolb xlat cwtl jne bound push scas fiaddl cmpl addr16 or cmp int3 lods repz add xchg mov popf cwtl aaa fcomps jp inc (bad) dec ret jb or sbb enter sub lods daa adc stc inc dec add pop sahf xorb ss int test lock cltd push dec xor leave aam (bad) les loope cmc fistl adc fldl sub add push adc mov add clc fdivrl adc add sub in loope lahf push gs imul mov ret int3 pop scas dec shrl sbb inc loop fldenv testb out (bad) or arpl jae and push outsb push dec lret inc jp jle mov lea fildll xchg subl gs test sahf pop push push adc rcr adc movl jnp std fwait mov (bad) aam push (bad) pushaw or popf cmp xlat mov imulb mov in push enter ror xchg push bound sub sub ss xor ja inc out mov push outsb repz cmc pop xor inc or xor jp jno aam loop xchg inc (bad) mov mov xlat push fucom movsl xchg aas sbbl xchg push cld jle test mov imul negb cld dec xor dec ja xor dec repnz jp cmpsb inc das sub sbb or pop sbb (bad) jno mov aaa lods jo movsb xor fdiv push jmp enter cld mov push (bad) std inc mov jge call jb mov and xchg xchg imull (bad) mov mov or and inc dec jmp push (bad) icebp into loope stc sbb das (bad) mov jbe scas int3 jp dec push xlat cli sahf imul int3 lahf les dec xchg dec cs ja jg cld aad cmpb push jmp popf cvtps2pi ljmp mov add jns sbb pop cld outsl (bad) stc adc icebp jb jg in inc jb pop in mov ss lret dec xchg mov pop arpl jle lea jecxz in sub out shrb ja sbb iret lods test lock cmp dec call cmp mov cmpsb popa in aam push mov pop dec add loopne jno loope,pt dec lds ret xlat add sbb mov sbb dec sub fwait sub pop push mov insl jle inc xchg mov cmp outsb xor daa mov mov push jns addr16 push es cmp pop (bad) clc or adc xor idivb cmp mov or lods aam (bad) mov add adc (bad) lret adc outsb in loope scas std mov push (bad) push or jne test sub out pop call sti fwait out jl or and gs test xchg dec jmp and sub mov xor test dec pop xor fisttpl mov dec movsl fcmovnu mov ljmp xchg scas std lds mov adc or sbb sbb negl fstl insl inc add sbb lahf adc add lock xchg jbe (bad) adc inc (bad) jnp,pn (bad) cmpsb sub jb cmpsb mov lahf inc push pop inc xchg sahf pop and mov dec int3 lcall pop sarl sub dec clc incb inc push xor inc stos cli ja dec mov loopne lods repz push pop fist xor mov stos loop adc xlat mov jne mov je cmp and xchg mov mov movsl push mov cld ss sub xor repnz cwtl inc cmpsl or es add or (bad) jmp pop mov dec std sub pop push and fucomip pop mov mov ret jbe cmpsb les xor and popf cs jg add add add pop sub adc stos pop movsl int3 and fwait jbe cmp popa xchg fistp nop out add mov insl outsb xor sbb jle cmpsb faddl leave mov pop fucomi clc push rcrl fstpt imul ret inc add mov fsubs (bad) xor insb imul arpl loop std mov pop mov push stos loopne xor scas sbb fisttp (bad) loopne mov cmp shr cmc (bad) (bad) in jge lea lods cmpsl cmp (bad) aad js arpl fisttp out jns mov (bad) mov fcoml fiaddl xchg sti mov dec fiadd test test or push pop or cmp or lcall xchg and dec in leave repz js jbe sub inc in cs fsubr mov in sbb jecxz mov mov fstl mov into mov (bad) (bad) fcmovbe loopne adc dec repz iret xchg xlat int3 ja add or repnz push lret sahf call mov mov xchg cltd inc jl xchg push mov inc in fucomi sub ret repnz or lock nop jb push stc mov in mov pop xchg ss mov inc adc jmp int3 fucom pop xchg arpl leave fucomi rol scas xchg xor sbb in mov push enter xchg inc scas mov jg xor rol bound inc stos xchg mov add dec push jbe ret and xchg inc dec out int adc xor daa fs mov nop out mov pop mov dec dec scas fstp ljmp loop mov mov arpl jmp adc pushf add xor jmp or jns sbb pushf lcall imul fistpll andl ja inc aaa add sub rcr lret cmp jl mov mov push adc cltd pop mov pop aaa ss mov aaa jno (bad) jne sarb decl mov les jns xor lock notb inc or mov cmp addr16 mov adc aad inc aam test jo rorb sub and ret das fmuls xchg jle sbb push std sub push adc cltd inc lock mov jbe jecxz cltd pushf jp movsb sarl (bad) xor pushf cld fldl cmp or leave and dec je lcall xchg jg int3 sub push xor mov pop xor cmpl and ds test dec arpl mov mov icebp imul ljmp outsl and test sub addl or lret imul loop jecxz mov cltd sub popf push xchg movsb ja adcl and cmpsb pop jmp mov inc mov test daa (bad) sarb sub inc pop arpl xchg rcrl xchg xchg pop lret imul rorb loop mov pop push loopne cmpsl mov pop add add pop insb fisttpll scas sbb sbb in cmc dec mov mov mov loopne test jmp out les mov clc cmp imul xchg into jnp test lds xchg ret mov (bad) and popf cmp cmpsl pop xchg stos aaa cmpsb icebp cwtl out inc popa mov sbb leave stos sub gs daa dec pop int mov dec sbb test adc sti test (bad) pop call mov rcll cmp (bad) lret pop icebp rorl in add mov in outsb cmp daa adc xor hlt aam xcrypt-ofb cmpsl in ljmp mov sub in jae and jecxz dec lcall mov add (bad) fucom fcomp pop pop stos jl and add mov popf jns je inc xchg imul icebp std fwait lret in or push addr16 nop xchg dec sbb mov cmp sbb arpl loope popf popa sub pop std or add push std mov enter das push stc das push pop xchg ljmp insl cmp lret cmp fisubl pushf xor push or aad push lret int iret mov leave aam test ss icebp (bad) jg adc iret mov fisttpll or jnp cmpsb shrb jae adc ficompl mov lret leave daa cwtl in in ja mov into sbb adc sarb push fcmovne sub cmpsl inc ret xchg js movsb int3 ljmp xor sub loopne and or scas xor dec pop mov jo aas mov fnsave pop cld std shr jb fwait mov adc mov stc jns lods sub dec daa mov sub cmp out into dec mov pusha pop test jmp popl dec and and lcall dec and popa xor std aad outsl fisubr out push pop or in cmp pop outsb push sub mov (bad) xor and lcall movl jge lret and xchg push js ljmp loop mov and inc rcrb aad xor inc mov push pop inc inc mov cmp xchg and cs jecxz dec (bad) fst sub jle dec sub jbe sbb xor jmp int3 cmpsb sub cmpl pop (bad) es aaa lahf (bad) lds test jg mov push stos sbb add sub or scas in add shrb mov add jo les dec pop dec inc cs pop or adc fimull inc fisttp push fs popa bound (bad) jae jl scas pop push cs lods call icebp push repz test or and mov push fs dec adc sbb mov (bad) adc lret fcmovbe adc jo mov push mov jp mov or ret icebp mov stc pop push loop sub cmp push xchg aad (bad) out adc movsl cmp insl ds jbe fs dec add mov imul xor test xchg mov mov xor leave sbb mov lock and insb adcb lock outsl movsl jecxz or mull push jmp sub cs xchg push jnp push mov mov push mov scas sub mov lea jno (bad) cli adcl pop pop pop lock adc sbb cmp stos push test shrb and (bad) jp (bad) movsb and mov negb inc mul mov mov es cmpsb and pop jg cmp leave sbb or xchg aam daa (bad) out jns sub pop (bad) loope lret jecxz lret pop cmc cwtl loop nop lods leave fwait push (bad) ss push cltd or and push ds mov mov mov (bad) out lea adc push leave xor std js pop lods or pop sub imul adc inc jle inc xchg (bad) les jmp cwtl jg fnstcw jne dec fdivrl mov pop imulb xor xor fiaddl push es cmp dec sbb xor test out dec adc lods into xchg shll ret cmp sub cs cmp add cld std aam add jnp adc jno (bad) cld loope lcall xor push jno shrl mov dec dec dec mov or data16 loopne hlt mov sbb jle xor lods icebp push sti mov push test addl aaa int3 (bad) mov (bad) stc jo xor ljmp sub push cwtl xor sti fucomi xchg cmp cmpsb or mov xchg mov outsl imul xchg cs mul inc lret popf xchg scas out jno push fcom imul (bad) sub ror mov xchg test aaa jmp xor cmp fcompl lock jp leave mov jg test mov das outsl cmp mov test xor mov inc sbb lds cmp mov mov push jg jecxz nop fisub mov jns cmp data16 faddp call and scas shl jmp pop ds adc xchg dec mov mov sbb loop xor (bad) and fnop inc jle test fadds out imul jo leave add divb push push add int pop movsl adc inc pop dec aam mov fstpt jl leave add iret mov adc and mov add add dec jge sub mov adc daa clc and sub sbb ret inc out bound je arpl insb adc enter dec sahf mov negl xor sbb xor push data16 jne adc sub and insb pop ds fistl pushl je enter mov (bad) push ret jb mov in aas xchg adc mov fildl mov inc fcomi push push scas in cld push daa inc or or rcll fbld pop out call stc rcrb xor xchg jmp jns sub and insb lds pmulhw fiaddl loop and dec xor faddp fs adc sbb loopne lcall cld inc in dec ja cmp (bad) sbbl jecxz inc rcrl add popf or pop addr16 or and ja out push xchg mov lahf ficom jo mov xor adc add (bad) inc (bad) push cmp mov jp call add jg fsubrp add outsl sub dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ficoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas sbb ret (bad) icebp rcrl xor fwait cmp fnsave fstp dec sbb rcr outsb cmp dec jae dec ja xchg cmp iret mov mov nop pushf add lahf and mov xchg add xor nop gs movsb mov rorb sbb mov in sub arpl pop push xchg aaa or adc iret or jnp test pop in inc dec jb out stos push cmp testb mov push or pop stc sub rcr dec add in inc xlat pop ret mov in push add or rcrb scas add scas xchg inc aam lds xor pop mov or in inc cmp jae call add fild mov adc sbb (bad) lret dec pop les cmpsl xor lock push lahf xchg jnp add add sbb add sbb pop adc enter das repz push ds push jno pop test cmp insb adc (bad) js jnp mov and nop xchg inc jno pop xor and jnp imulb mov rorl in xchg stc pop hlt (bad) int3 or addl (bad) dec lret push int sahf lods fmull clc sub lods mov xor inc mov push ret int3 pop shlb push fisub imul xor int3 add dec adc leave cmp jmp mov push stos repz and or sub xor (bad) das inc cli xor push or movsb inc add addl pop and or or aam xchg in xor bnd xlat fild mov nop xor test cmpl add mov mov mov shll push push stc incb inc clc out divl out (bad) lcall fadd adc or pop xor mov test ret scas lahf pop dec mov and addl arpl dec push add inc pop scas loope mov ret adc sub adc (bad) enter clc dec ror jge insl in (bad) outsl popf mov sbb stos xchg sbb (bad) jne (bad) mov insb and jle imul mov cmp stos adc mov jne cld dec or in fnstsw frstor aas mov stos pop mov jae arpl pop or lahf aam out and (bad) sti and fstpt sub outsl fs loopne adc popa (bad) stc data16 pop and test fldt jbe jnp add xor mov mov int3 xchg mov adc xchg fdivrs insb test imul jo cmp (bad) cmc shrl add pop cmpb adc (bad) mov stos stc xchg mov flds lds push mov add adcl fidivrl sti lret pop out aaa pop (bad) ror addb lea lock jo pop ret lcall iret xor out xchg fdivrl ja sub mov aad jns mov fidivl push mov pop rclb adc mov mov push test push mov mov or scas push sbb out sub cmpsb test pusha mov cmp pushf ret out inc (bad) das fucomi scas js in ja dec repz mov loopne shl xlat mov loop dec mov pop dec xchg cmp inc dec into fs inc jmp (bad) add add jo and in adcl pop mov mov xchg cmp stos sar push and sbb lds or aad cmpb pop sbb sbb and in fs dec lret lcall mov mull ret cs sub adc daa or (bad) cmpsb add jne icebp jne mov push sahf in sub mov std pop xor mov mov popf call dec ret jne insb and sbb inc sbbl lea push dec xchg fs andl (bad) jo into adc adc test inc push test adc push sbb mov ficoml pop mov jp js sub fs fld sarl sub lea loopne outsb jbe xchg mov mov ror pop (bad) rol arpl (bad) jge shrb sub int xor jge (bad) fdivrs sbb int push jb mov enter clc mov nop mov xor or dec pop shll adc adc rcll mov pop mov pop mov sbb rcll mov imull outsl jecxz popa jl pop pop mov jne cmp (bad) mov cmp pop push pop dec outsl ss (bad) in xchg jl xchg jae sbb mov sub pop ljmp test ljmp lahf xchg out xor push and adcl push dec sub mov clc out fcmovu sbb sub outsb loopne inc fidivr xchg adc fst scas ss sbb or ret fwait test push mov fwait loope call jle mov add negl into bound dec bt lods aas enter xchg or out mov sub movsb adc adc leave push mov sti ret and mov sbb test repz add mov cs mov xchg pop xchg xchg fwait jns mov add movsb inc orl push (bad) xor sbb mov (bad) xchg cmc cmp imul in leave sbb (bad) (bad) lock jne test cmp mov imul mov pop and sbb sbbb xchg sahf sahf and (bad) data16 into in add repz and jnp stos std and fs imul dec sub push in pop mov in mov pop jno insl lret das or fcoms push dec dec repz iret mov aam cld cmpl dec inc sub dec pop shlb xchg jno lcall insl inc inc fwait add push daa (bad) xor hlt jne outsl shr mov repnz repz xor push xlat addr16 xchg scas int mov les imull iret fs mov (bad) fnstsw mov sbb adc push std test seta xor je hlt lea push sub aam sub into lahf test mov aam das sbb push push test (bad) cmp push repz jae inc outsb movl or aad or das sub arpl outsb in cmp and mov hlt mov pop cmp popf mov pop das rcr dec xor add push adc jge andl les dec pushf mov sahf je ret jo push xchg jo scas lods pusha outsb inc popa pop idiv or clc cld jmp lret in std dec sbb jbe int fldl mov mov sarb xor lcall mov add lcall mov dec int3 inc fistl or movsb xchg inc jno hlt dec inc add hlt mov pop mov xor mov inc mov push sbb or stos add in add pop (bad) jmp sub xor (bad) sbb cmp ret lock and insb add je clc pop dec mov std fistl fmul mov gs mov mov xchg bound adcb pop sbb dec repnz inc mov pop cmp int3 xor jns movsl (bad) iret movsb sub lret aas mov xchg xor push sbb scas add movsl sub mov cmp hlt scas hlt das cmp sbb jbe push shl mov (bad) xchg mov cmpl xor jb imul dec push inc xchg inc mov hlt int mov icebp push fcmovnu and movsb or mov sub adc cmp shll jbe jl jne xor (bad) paddusw ret inc dec mov in xor shrb cmc and imul or xchg shrl xor xchg in or popf or push shr pop add jne (bad) push cmc jnp add cmpsb (bad) (bad) xor adc mov lods cmpsb pop popa sbb enter imul fdivl inc mov mov mov (bad) iret pop imul outsl outsl cmp jae xchg sbb mov push and (bad) pop cmc xchg push shr popf add mov (bad) addr16 insl mov cmp aaa iret xor out and xchg ja and (bad) mov (bad) mov cld and sti push ja loope push jmp sub clc loopne jle (bad) int3 sbb cwtl fldenv or data16 shll addr16 call cmpsb or push mov fildll cmp adc ret cmpsb push test xchg (bad) in movaps imul sub push movsb fdivrl cmpsb test je aas lds push dec xchg sub adc les fimull xchg dec in and icebp xlat aaa inc mov lea xor dec enter jae outsl stc push out mulb pop out xchg push add das push (bad) and mov push loop rcrl mov pop iret (bad) inc inc fsubrl stos adc xchg xchg loope sub (bad) ja push adc mov inc cmp jmp js leave xor jmp jecxz js test and movsl lret push or clc sub (bad) mov push xchg mov push push lahf fwait test jb lcall push jg ja xchg mov sub (bad) (bad) sub out mov adc fdivl (bad) dec jae sub xor clc cmc xor notl dec in test pop out andb jl fcoml mov push mov mov xchg in fwait rclb and adc pop lock push fadd mov es bound xor sub cli int xlat jb popf push jg das cld pop or or cmpsb dec mov fcomi xor and fldl or cwtl imul push outsl mov dec pop loopne pop fxch loop arpl mov dec mov maxps cmp mov jmp dec aaa jge mov push pop inc arpl or std jnp cmp sub repnz mov (bad) mov adc push dec mov and xchg mov inc insb in jmp enter push jle xchg pop movsb mov xor (bad) jnp mov std imul cmp es xor gs (bad) lahf and mov mov inc imul mov cmc fisttpll in scas clc arpl leave mov jbe jge sbb out cmp rorb cmpsl and (bad) mov sub push loope gs sbb imul aas jnp add jb xchg test push cwtl and mov dec data16 insb push xchg pop push cmp fisubr inc mov mov insb dec out jae sub (bad) cwtl movsl hlt sahf stos jl sub (bad) testl jmp and xor ret add test nop add fsubrl lret (bad) jnp out ficoml adc mov scas into adc notb sbb inc lods dec mov add cmp ja jne imul repnz or rcrb (bad) pop fcmovu fimul fdivp mov movsb jae std mov push push ljmp ret aam mov fwait mov add pop das cmpsl inc insb ds imul pop sbb (bad) jne adc es pop push (bad) in cli xchg cmp pop inc int3 aad mov push xor popa (bad) pop pusha and out les sub jns addr16 adcl push fldl mov jns pop test pop outsb inc fwait out add jnp (bad) cmpsb ficomp pop (bad) xor (bad) in cs xor sahf inc jno mov mov in iret cmp add lret adc mov or jno mov xchg inc fsubr popf lock iret aam lret dec jecxz (bad) jne dec pop pop mov xor xchg mov sti mov int3 mov lods out ljmp jns gs pop pop icebp stos sub push add adc lahf inc ss push mov (bad) int3 dec aam jmp xor sbb pop ja scas jge (bad) xchg jno or push je jmp sbb jne iret ja xor and adc inc jb dec jae ss xchg jb push popa clc dec xlat cmpsl sbb inc inc xor inc cmp addl int into cmp adc shlb addr16 outsb mov aad cmp xor pop rorl out push repnz insl int3 sub sub ret inc dec dec mov hlt das ret push je subl cs inc jg mov fnsave cmc movsl mov iret cmpsl arpl movsl loop ret pop inc int (bad) pmuludq inc sti inc in (bad) dec es loopne cmp mov inc mov iret in sub sub fucomp in mov clc adcl out push fstl pop shrl fdivs sub xchg push lock pop adc inc or lahf mov and cmp inc mov fwait adc inc ljmp mov xor jmp pusha fwait mov xchg nop add aad adc and pop pop loope mov lods and in pop mov jge push repz jmp and xchg scas cmp sbb arpl hlt into adc pop adc insb arpl inc mov inc daa xchg inc jecxz push in jno movsl into (bad) in dec xor les mov push adc jns add pop pop (bad) cmpsb cmpsl lea jmp mov push add push test inc pushf jg lcall pop pop push pop mov add mov mov in ss sbb push or ljmp lock fsubs aam ss ds adc js sti mov pop push scas lret cmp nop xchg xchg cmc mov adcb jno xchg rcrl ljmp inc dec ret test loopne push and (bad) fdivs mov sbb mov scas pop test and into mov popa outsb test sbb mov add (bad) ja cmp mov iret sahf cmp mov iret sahf cmp cld pop mov and add dec inc dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ficoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push inc adc cmpsl movsb je mov mov add xor xchg cmp mov xchg flds out imul pop add mov push push sti out movsb addr16 ljmp cmpsb mov roll sub int insb fimul in in and cmp popa idiv sub jecxz mov subl rcr mov xlat push test imul mov scas loope daa add jo ret xchg es cltd mov xchg jl test arpl mov jo pop jno sub fwait imul stos jecxz cmc (bad) int3 mov mov xor das stos or mov mov inc (bad) jbe mov and cmp pop cli mov add cli xor pop dec clc adc add jnp pop gs push and xchg mov mov sbb mov into in divl push push xchg gs enter mov fisub shll sub (bad) aaa fldt sub mov jge addr16 decl jg sub dec inc push into mov repz push clc clc inc cmc mov mov ljmp ret repnz mov mov or xchg adc adc pop das aaa pop lret lock addr16 repz xchg out xor js or adc imulb xor mov jle pop add push sti movsb xchg xchg imul sbb outsb stos fs rol in loopne les dec jp addr16 xchg aam hlt jbe test movsl out push mov scas jecxz dec mov ret popf arpl push xchg pop out stos addr16 arpl add test sub ficoml jbe in mov mov iret push not xchg push cmp (bad) sub in adc (bad) xchg and sub xchg jp lret cwtl ja popf pop sub mov adc arpl repz idivl sub dec xchg push (bad) leave ds adc fidivl push lock xor pop xchg scas out dec ljmp push or insl imul xor and xchg iret test mov sarl pushl jns cmp pushf xlat xlat or das shrl jmp mov cs jmp out pop pop inc mov sub jecxz lods sbb adc adc adc lods push enter mov mov pop leave (bad) in arpl enter push imul inc pusha repnz pop inc jnp dec mov loop addr16 mov loopne lahf into pop inc mov dec mov icebp inc in cmp ja aad cli idivl or in adc repz fbstp sti movb inc repz in insl lret mov dec adc push lret jmp add (bad) sti repz dec negb push and inc out addr16 add loope les rclb (bad) pop addl inc test les mov (bad) push adc out cmp xor mov jno jb icebp out inc lahf ret les (bad) ret add loop ja out ret (bad) (bad) (bad) in cmp sbb loopne daa icebp dec fstpt sub add enter lock lahf add mov sub fistp jbe,pt scas stc out sti loop or and dec pop out xchg dec (bad) jo test loopw mov dec out dec movsl insl jl ficom mov lahf and stos fcmovbe sub fimul push stos and inc mov xchg and lcall mov mov nop enter or or js stc fmul push iret mov scas push loop jne ds frstor push les mov rcrb push xor out jp in (bad) xor sub adc push xor jl sub movsl mov pop notb add das insl aas jle mov jmp nop jne mov dec sub inc xor js leave jns mov stos inc roll fild nop ffreep dec inc jge lret xchg fimull push xor mov mov push push jo and or (bad) sub hlt jne (bad) mulb daa mov lret gs (bad) and lahf lcallw popf sbb mov loop shlb adc (bad) ljmp inc inc mov dec pop push lret add lock push lea push out test sub out mov sub mov push push in int cmc sub out cmp and mov es dec gs xchg fistpl lods gs mov or push sub push fisubrl mov addb xchg push pop lret jb ret adc add fwait and cmp ljmp cltd pop sub ficoml mov cmp repnz mov sub pop mov test sub xor arpl sbb or stos xor add dec cmp (bad) pop sbb pop fsubl xor jbe loope cmp push push jp nop bound fldt aas in bound rolb jmp mov lea add in arpl les ss fisttpl sti jnp fcmovnb lcall dec mov clc stos cmp cmp mov mov popa dec ret pusha xorl ret iret add push es jnp inc adc mov and lds cmc push jl pop sahf fs mov pop ja adc sub popf mulb in xor adc jnp push cmp rcr sub pushf xor popa dec mov cmp jg lea adc pop lock push jae push loop adc (bad) in outsb cld stos gs nop dec lret jmp cmpsb adc mov lock (bad) loope jmpw jmp imul (bad) (bad) lret sub push lcall repnz sarl sbb (bad) out test xor dec int inc adc ficompl push (bad) scas pushf inc sbb clc sbbl lea pop push dec nop pop mov mov xor clc adc sbbl and loop sub jecxz (bad) imul mov or lock mov or mov push push movsl and fwait lret pop xor or xchg loop mov and lods fdivr lock or lock cmp icebp cmpsl psadbw ret xlat dec mov jmp sub repnz mov je jnp push mul fs scas mov scas dec jne jns push sarl jbe,pt ret push lods jp mov or stos xlat (bad) dec fimull scas iret add xchg mov andb int or hlt mov aas test (bad) test pop mov xchg jae fdivrl leave dec dec push stc loopne fldenv dec cmp sti push xchg sbb fisttpl das inc mov jecxz or lcall push mov fisub jle xor lods orl out loope add (bad) ret out mov and mov fwait or dec mov cmpsb daa mov mov push cmpb push leave sub mov adc mov pop (bad) popf push cmp sbb aas dec add or test stc mov in adc push and cmp xor loope jne test or xor dec or lret jnp aas sub mov js mov dec (bad) cmpsb out xor cltd imul repz data16 leave cmc fadds sbb loopne inc mov repz jg mov inc scas in test jmp xorl jge fstpl pushf jb jnp mov and push cmp sub sbb xchg mov ljmp cmpsl dec jno lods cmpsb (bad) int icebp fdivl std aam out push xor or pop sbb or add add mov inc pop and icebp and stos stos dec outsb flds lcall icebp cld cmpsb xor adc cs dec mov jo sahf mov adc ljmp mov xchg subl insl jecxz mov ss repnz mov pop jno xor hlt test enter mov cmpsl repz mov push add sub aad (bad) sub frstor pop test lret enter dec ret mov clc mov xor stos xor mov mov mov xor xor sbb inc mov es or out roll xchg mov pop iret mov xchg inc rcr (bad) sub jle push dec jo pop adc in cmpsb sub stos (bad) les push inc jl jle mov cwtl dec addr16 cli (bad) jbe mov movsb adc jnp mov fnstcw cld es sub lret inc (bad) mov push inc push pusha dec dec push pushf push pop mov xchg pop leave ret loope cmp add jg lea aad ss xlat lea imul lock pop push dec mov mov xchg mov aam adc mov adc ljmp xchg insb js out (bad) and mov dec decl stc mov xchg mov stc jns jmp into test mov adc adc push cwtl lcall mov mov and mov push out mov cmc sbb std pushf pop jp pop stos shrb jo adc push loop stc ja push lret xchg enter nop popf icebp cwtl pop repz scas pop rolb push ret (bad) scas popf (bad) int3 (bad) xor pop mov cltd mov push dec push mov and test in push fs xor loope in dec sub cmc mov push xor enter rorb test cmp (bad) jae (bad) call pop aas jbe push inc pop jns sub xchg stc and rclb mov inc pop test sub mov add ljmp arpl pop xlat shl jg aad inc add jp pop aas and aaa push and adc mov xchg notb inc ss sub mov xor add mov enter cli sub and xor lods add call hlt adc cld pop add cmp mov sbb dec nop dec aaa andl xchg jmp sub cmp ljmp xchg and or xlat ret cld sti insl jo sbb fcoms cmp rolb iret ja data16 enter mov aaa dec sbb aas imul add dec (bad) fs mov mov stos push in test sub jns jecxz fwait mov gs pop repz (bad) jmp pop lahf pop xchg je (bad) rcll lock (bad) sub popa int sti pop dec cmp test scas xchg test cmp mov push mov icebp adc mov adc cmpsb cmp xlat push mov popf fsubr lea push mov ss aas sahf cwtl or aam cmp inc aad sub jbe mov in pop outsb xor call outsb jecxz cmpsl cmpb and fistpll dec gs aam icebp mov pop xchg test jl xor repnz cmp pop add mov mov jo mov imul pusha inc bound push mov xor insb mov cwtl adc add stos dec mov loope and rorl mov mov jne push and ja mov push outsl jbe popa insl push add push dec adc cwtl outsb push mov xchg adc mov dec mov dec or lret jg dec sub and out aam ljmp push fdivl jl pop fcmovnbe sub xor sub adc test adc daa jo dec push stos push inc sahf sbb mov jmp aad pop fcomp scas mov lret push ss lcall mulb stos mov lcall (bad) ds cwtl idivb es clc sub jo cltd cmp mov sahf dec dec push inc sbb arpl jg insb repnz push mov imul sbb mov out pop and cmp test lock les lds add cmp leave mov xchg mov das push movsl data16 cltd jp sti stos mov cmpsl cmpsb push pop push negl aaa leave paddsb pop mov out fcompl fstpt push sbb xor js mov popf or jp notb (bad) jo rorl xchg jbe push insl add lods cmp (bad) inc lret pop sbb fdivrl movsb mov mov mov enter into jl out jecxz mov in cwtl add inc enter fisubrl inc outsl aam or stc outsb call shrb cltd or (bad) (bad) aam lcall or jp sbb (bad) sub push ret (bad) int3 lahf lret jecxz leave les stos enter mov pop (bad) ss (bad) and cmpsl jg es adc les inc insl mov push xchg arpl cmp out insb sbb idivl xor cmpsl decl outsl push dec dec jg arpl or jo jge sbb mov in hlt cmpsb pushf icebp cmpsl xor shrl and xor sub scas scas push fs sub stos cmp and cs pop ret mov adc das notb enter in stos jp jb lock fisubr xor mov and push cmpsb add dec jb test nop gs loope jmp lea cltd lods adc and adc xchg sbb pop popa cld adc lods cmp jb (bad) decb and pop cmp lods out jl fistl cwtl cwtl mov je (bad) cmp rclb cltd addr16 movsl mov lock or aaa pop xchg mov in sbb scas gs stc mov lcall xchg or loopne pop pop testl mov out mov sar push aad cld leave and stc add in dec mov sahf pushf ret das ret inc dec out pop inc popa adc xor iret xor pop (bad) mov lea pop icebp fildll cmp imul test pop mov push pushf push ljmp pop out rclb dec insb sub js cmp sar out sbb cmp fdivrl cmp fdivrl clc bsf das lods jmp add add dec inc scas inc pusha (bad) or add add (bad) (bad) (bad) incl add add add add add add jns je insl cs jb ja outsb addr16 push gs imul xor xor inc jne je jb cmp jb insb sub push jne insb imul imul bound xor data16 xor fs add adc gs cs jb ja outsb addr16 imul add popa je pop add add add add add lsl add ficoml add add or or add or add add add add or add add stc xchg add add inc inc add add add inc dec inc add mov or popa add jo pop jae add ret push ret sub add adc inc inc push push aas faddl jecxz icebp scas (bad) je sbb ret imul mov in rcrl cwtl mov jmp arpl out jnp (bad) (bad) sti scas clc mov or mov sbb rcrb jecxz sub (bad) mov stos and addr16 push imul (bad) jb in mov push insl lret mov xchg stos push or sub inc and sub mov (bad) shrl or aas dec shll jno test cmpsb (bad) adc ja mov fmull shll sub xor roll inc fcompp xchg inc xchg push xchg mov sub cmp jb push sub push stos lea roll into xchg arpl xchg xchg sarb insb mov dec pop pop (bad) es test addr16 rcrl lds fcmovu scas and push (bad) sbb add push dec insb sbb sti lcall mov pop aam cmp jp outsl fnop outsb and (bad) sti loopne clc inc ljmp xor adcl imul cmpsl push mov mov push in jp (bad) dec inc pusha arpl (bad) rclb cld lea add aas movsl fsts pop out xor mov fidivrl jne lods sti mov outsl cmpl (bad) sti lods loop pop mov dec xor jbe movsl iret lea mov sub cmp fs xlat inc sub mov stc lds add xchg popa jp cmpsb xor xchg das in int3 clc daa xchg mov inc mov sbb ror imul fwait pop mov adc push sar push push test xor aas sahf int sub pop (bad) out leave ljmp mov fmul sbb fcmovne sub and outsb cltd inc xor mov xor jp ljmp adc sub icebp dec loopne test in xchg cmp decl divl sub es mov xchg xor or xor addr16 adc pusha adc call rdmsr dec loope leave cmpsb mov push sbb rorb push xchg rorb sbb (bad) sub or clc push jns popa cmp mov adc shlb gs test pop xchg aaa xor jl pop add mov mov iret (bad) cmc lods push jl flds sbb pop add hlt rcrb sub leave sbb pusha or jo ja in dec sbb pop or push imul call xchg sbb test xchg push jnp ds inc stc jge mov mov push mov and rclb inc mov jne jg or jnp or scas rolb mov xchg sbb ret or inc or out (bad) jmp mov int3 xchg out in cmc push fidivrl lods es push jecxz (bad) xchg in dec cmc mov fstpl sbb jb sbb jbe and xor cmp inc inc and jnp mov stc mov lcall push sub into outsb aas add in jno es push scas mov dec pop or sbb adc mov sbb movsb mov inc mov orl and push (bad) mov test gs pop imul pop fnsave push rorl jge mov jnp clc cmp push sub sub xchg push mov fsub insl mov scas sub aaa cmp cmp sbb test mov sub scas imul add or lahf jmp xchg cmp mov jmp xchg shll pop outsb mov cmpsb (bad) add sti stos and ss mov scas int3 fnstsw sub ljmp testb icebp cmpsb jge lods lods fsubrp ret test adc xlat das mov outsb (bad) int3 out pop fldcw aam ret mov sahf je push cmp adc push mov xchg xchg pop test insb and pop (bad) mov push lret dec add mov sbb or sub cmc xchg xchg push jo ja (bad) ds or add mov stos xchg fadds ss negb push cmpsb dec popa mov push cmp cmp or adc or je adc aaa fdivrs out rol and movsl scas (bad) (bad) pop xor cmp fsub or (bad) jnp xchg dec into pop sub mov sbb sbb outsl insl dec movsb cmp jge push pushl negl jmp and cs cmp into sbb ret lret imul js (bad) cmp iret adc js ljmp movsl jp insb js adc lods insb shl bound loopne ss rorb clc mov inc xor cld std push jmp in iret mov mov sar jle in enter jle sbb jmp adc lcall lret pushfw sub mov add jle pop push inc mov not push fcoml insl (bad) mov cmpl sbb and push dec in xchg pop pushf enter and cmpsb xor pop in nop pop idivb lea das test or xchg jae pusha mov cli jo dec pop xor and push fs xchg pop nop push std (bad) (bad) adcb push in pop adc mov test mov clc int and (bad) sub loope cmpsb test loop xor xchg jmp push and ja dec (bad) jb push dec mov jb dec mov push jle in in je xlat xor xor aas mov scas loope shll xchg pusha and add loope jle or push test and bound xchg jle xor gs xlat fldcw mov jns or pop repnz pop push dec xor gs add jg stos call adc cltd mov (bad) (bad) test jle in lock xor mov push lcall lret fwait leave sub adc or testb cltd pop (bad) cmc mov cmp loopne cmp fwait mov daa inc adc mov clc rorb jo adc lods rol fwait mov inc mov dec xchg enter out pop fnstenv jns cmp inc add rcrl stc frndint rclb cwtl cmpsl or imul mov sbb fwait push xbegin jl notl xor lcall imul push dec and sub pusha xor pop fpatan (bad) dec clc int3 js insl sbb lret cli dec cmp fisubrl fmulp dec pushf sub jne (bad) jae mov outsl pop lret cmp cmp lret push push xlat xchg gs aaa sbb cld out loop ret mov fstpt rclb icebp lds jne jp push scas pop pushf cld mov xor scas out adc sbb xchg ficomp inc std fincstp mov mov lds int je and xchg ja pop vptestmw addl out xor repnz inc popa fs push dec loopne sbb sbb int3 or or test adc jecxz xor mov xor fidivr pop inc fisub jne inc xchg ret sub mov inc sahf add movsl repnz xchg jmp xlat cli in cmc xchg (bad) adc pushf movsb loopne out (bad) mov aas push inc mov inc js shrb mov popf mov arpl js push or and rolb xchg push jbe xchg test push out aam adc mov xchg sbb mov pop cmc fstpt sbb mov push in pop test sbb dec and jg push popl addb lret aam idiv and jge pop in xchg dec cwtl pop sbb scas les in out iret clc je adc sti loope cmp mov aam sub mov sub sar pop shr arpl imul mov (bad) clc push push jne out fsubr mov fs loop xchg jnp jle xor out out clc es or stos hlt fwait movsb (bad) cmpsl mov mov loope mov mov sbb (bad) fadd mov jmp (bad) pop pushf bound es out aas xchg mov fnop addl fdivs sbb pandn mov sub out inc push cltd jbe jg jmp repz (bad) mov inc xchg inc sti pop (bad) xchg mov pop test xor std sbb cltd clc fmull in or pop (bad) adc (bad) push ret fimull mov ss mov sbb aas lock fldenv in cmc in cmpb sbb div ljmp sbb fnop rcr out movsl sbb adc cmp inc test ja es addr16 loope push cmp ror xor cltd add or or rorb aaa lods adc adc push push insl or sbb cmp inc sbb fcompl lods ret out jb fs movb les add add mov lods ja cmp jns fisubr or cmpsl sub movsl jns lret sub add push and pop sbb push es stos xor aad xchg lods xchg cmc scas popf (bad) out push xlat lret lcall repz sub jecxz clc rol adc ljmp xchg jb (bad) or cld scas adc ljmp dec xchg sahf dec dec mov mov mov divb pop mov aas mov pushf pop iret ficompl dec mov cld jo push jmp push repnz cmpsl push jb add sti mov dec mov pop sub and mov stos cmp pop das cmp sbb adc (bad) or fstl outsl mov sbb mov inc dec and push lock xchg push push inc out mov fmul dec ss cli inc fwait bound ret adc sbb out pop mov jmp sbb leave cwtl out mov or pop sahf pop cli mov push jne add sbb add in mov insb push neg sbb dec add outsl or xchg int or test nop out repz jno lcall adc jp sbb loope sub or cmp lcall (bad) mov ret lret xor dec or rolb adc jg daa imul xchg add cli je sub into dec push out scas out cmpsb enter dec xchg cbtw insl dec push push or cli stos push sahf push or add mov (bad) lcall int lahf ret lock int hlt cmp jge (bad) subl jns incb fisttpll xchg inc xchg jo aam xchg int3 lods pop scas push test jnp xchg dec ss mov dec xor roll xor sbb mov icebp mov test mov dec mov int cmp adc pop lds int sub lahf jae frstor cli push mov xorb jmp sub mul fistp add enter scas jnp in arpl push ja xchg (bad) cltd jno mov xlat fcomi xchg mov mov mov ds jl stc stos jle adc hlt xor adc xor mov ja sbb lock mov mov inc stc jns test adc add xchg mov cmp lahf push cmpsl sub out sub mov dec jo fist nop jns mov lret inc fldl lods sub and cmp popa cmp stos hlt mov (bad) cs cwtl ja aam dec (bad) (bad) icebp sti int3 insl stos dec push xlat mov adc or lret mov (bad) mov xchg dec scas jmp and call and cwtl adcb les xor push xchg adc sub jne mov inc call js add pop shll push ss mov mov or (bad) idivb push add or mov xchg mov out in add push data16 sbb inc in or inc mov rolb mov mov push ja lcall jnp test ss enter push cli mov sub xchg cmp test sti fisttpl push jl push adc inc ss jmp aas leave mov xchg xchg cli lods lcall scas xchg xor (bad) pop flds mov sbb lcall mov imul call pop push repz data16 mov sbb jbe fwait shrb lret push xor icebp test jl pop aas cmpsb mov xchg fcomip inc rcll mov popa sub jno arpl push cltd shll inc adc inc jb cmpsb push aam (bad) mov repnz xchg ja adc and and int dec dec leave (bad) shll aam push jmp mov and mov pop rcl mov push aam push inc out mov mov mov adcb mov aaa pop mov mov mov hlt leave loope in mov sbbl push out inc cmp and ds pushf adc or aaa test stos mov push dec test adc das rorl icebp cwtl in cmp fdivp cmp xchg popf inc outsb mov cltd fs and pop out sub movsb ret jge aas lret jb (bad) pop mov jle jo scas aam jle js inc jl out mov sarl mov and pusha (bad) or (bad) mov dec ret dec data16 std push pusha xrelease shrl pshufw and xchg cwtl jns clc mov inc adc (bad) pop cltd enter adc dec pop xor dec xor fsubs cs out (bad) aam nop and (bad) hlt push daa mov jge xchg adc out das dec mov imul adc adc dec sbb (bad) loop dec ret xlat jl out gs loope rcl in pushf push clc js js pop cmp add iret fisubr nop inc push testl jmp mov cmp mov bnd lahf sub add cli int stc fbstp hlt call push cmp mov jp call pop xor dec cmpsl xor add add dec inc dec inc scas inc pusha (bad) or jp add add add xor add add and 