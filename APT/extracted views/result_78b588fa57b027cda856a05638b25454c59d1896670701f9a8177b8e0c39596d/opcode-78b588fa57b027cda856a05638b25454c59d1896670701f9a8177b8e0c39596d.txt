pop mov lea jns add push xchg jno push dec rolb inc mov or sti xchg pop add and test les jnp mov (bad) popf outsb add cmp and lods xchg add jno cmp and jne xor pop sub dec dec ja push jne cmpsb mov aad or loop es mov or xchg and sbb leave test push jbe mov fisubrl stc lret cmpsl iret jb mov int mov test mov imul pop sbb pop xor imul adc repnz sub loopne mov into push out (bad) xor or push addr16 pop test cld fld jbe cmp lds mov mov xor inc bsf bt mov cmp and bt call lea movsbl lea pushf call pushf pusha pushf lea jb push shld rol mov add btc mov test clc shl push movb pushf pusha lea call adc mov stc bt bt cmpb call mov pushf ror bt mov clc test bt repnz push jmp bsr pushf bsf mov call jmp add or xor or add add jbe or arpl or or add jle or or or adc add xchg or pop sbb add mov or add or and add xchg (bad) add pop or sub add sahf (bad) add stc or xor add cmpsb (bad) add or cmp add scas (bad) add or inc loopne add add pop das or pusha pusha push lea jb jmp mov pushl popl pushf push pusha push pushl ret lea jae mov lea call adc call stc add call not pushl call add pushf pushf call add inc ds movsl movsl popa xor inc dec inc fdivs mov mov icebp mov cmp (bad) fnstenv imul loop out and adc movsb pop cmp mov mov rcr jmp sbb je loope sbb add inc lods mov pop hlt jae xor rol push cmpsb ljmp mov add cmp (bad) repnz mov lock (bad) jp mov jo (bad) daa negl fsubs inc punpckhdq inc ljmp icebp movsb sarb push loopne shrb out jge je mov jno jns jne (bad) pop lret or cmc dec aad xor (bad) (bad) call push lea call pusha pushf movb lea jb (bad) hlt shl movzbl lea shr mov movsbw btr call lea jb adc push movzbw shl mov shld shl bts setle mov cmc shr lea jae push adc pushf test cmc sub pushf bt jmp not pusha mov lahf push pushf bswap lea pusha lea call pusha pop movzbw mov mov push movl push xchg pusha lea jae not push movb call adc pushf movb jmp add add mov and rol call clc stc cmp call pushf jmp lea xchg rolb inc add jle dec je outsl adc xchg ret push and ret scas insb mov push mov jns lods jle data16 push repz clc xchg shl mov in mov mov pusha imul fwait sarb in test pop rcrl jnp je cmp ja xor pop push lcall or adc mov imul jnp pop fidivl roll mov popa cmp ret mov aam mov sub ret daa pop sahf adc (bad) xor rcrb popf xor mov rclb fcmovu pop cmpsl mov pop aaa in in loop xchg fsub in and sbb enter and mov or cld push sahf add xor mov jl sbb testl sub loopne mov inc xchg into std push int3 jns mov stc pusha xor add or js lods push xchg inc xchg jno fs mov push push adc jnp mov xor xor mov jmp (bad) je loopne fwait mov sbb mov push cmc xchg movsl push lods cmpsb push mov sbb stc pop cmp clc mov mov cmp clc nop (bad) out aas adc mov lea mov or xor dec pusha hlt pop cmpsb jge pop jp or jne adc dec cs mov stos fimul mov test lahf cmp cmp sarl xchg add add or jge ljmp movsb les dec ret pusha lds inc (bad) insl pop jmp push scas jne xchg push fnsave out and dec ret add imul cwtl jno mov add out out scas xor rcrb sahf sub aad cmp sub stc cmpsl xor mov jno sbb push pop push xchg negl pop inc out inc cltd cmpsl ret iret mov mov xchg data16 jne,pn hlt ja xor incl xchg js es dec (bad) js cmp fwait in dec out aad mov push mov cmp add bt mov clc call push pushf lea jbe btr sub pusha mov lea mov sub jmp cs adc roll inc aad mov pusha insb mov inc inc push mov adcb mov scas jno (bad) dec fwait andl xor cmpl dec fldenv pusha hlt or xorl pop sub fcmovbe push or stc xchg mov pop mov into gs and cmovne dec mov ljmp or mov xchg dec and mov aam (bad) insb stos mov std setbe es adc xor mov cmc sahf test dec nop adc mov pushf pushf test jmp dec mov call fsubl rolb faddl inc adc in adc dec (bad) pxor xor sbb les loopne push rcr int add inc or push jp arpl sub loopne aaa add stc mov or fnstcw mov pusha gs xchg into sbb mov and xlat nop mov push jmp in inc lock mov call xchg adc cmp daa imul sbb push std mov lret setne mov lret pop test insl adc (bad) int jmp push push mov dec mov xchg ljmp mov pop rolb push inc loope xchg dec xor sbb push add test les jbe xor mov insb xchg jg test mov lock imul lock enter mov xor frstor cmpsb int dec cli aaa sbb or xchg and lcall (bad) icebp pushf outsb insb mov pushf xor insl inc fisubr popf dec and and sbb enter imul and mov inc fnstcw xchg jnp xlat xchg in les lret popf mov int or mov add (bad) sub fisubrl pop inc or inc and jg rep jmp push mov call sub push cmp jmp pusha shl pushl pushf pushf stc add call lea jb shl mov clc movsbw shld bswap mov bt cmc shl pusha mov movb jmp clc cmp pushf call push pusha call lea pushf movb mov call int add rcl (bad) into sub mov cs mov and in hlt xor into decb out pop push jecxz mov sbb ja adc inc cmc inc popa shl arpl ljmp add push pusha hlt scas pop cmpsl pushl sahf or add sub push mov shlb inc loope fcmovnbe sub cmpsb dec mov fwait mov mov rcll mov or aad std xor test into lea add imul xchg imul xlat ret test loop mov mov out pop inc push shr jmp loopne neg push xor cmc jmp adc ficompl push inc add xchg test pusha mov cwtl bound sbb mov sahf mov movl cld lock adc je dec mov pushf push pop xlat sahf adc inc int3 dec adc pushf pop rcr dec push cmp and pop stos out inc add jno insl xchg cwtl dec mov dec jns and fsubrl ret and dec scas cmp dec lahf sub or adc (bad) xor cmc mov add negl pusha mov in outsl or cmpsb (bad) popa into mov out pop add dec bound lahf add add adc add add sbb add add add add add add adc or add add jo or add add cld sbb add add add xlat or add add pop sbb add xor or std push add call or add xor add add mov inc insl xchg and rcl repnz or (bad) push lds add add mov or test std add inc add movsb sub mov (bad) out adc loop push mov mov push xchg fisttpll xor loopne shll scas mov mov xchg (bad) sub push stos push mov das clc bound adc push outsb pop rcl inc aaa and push in pop inc jmp pop dec lahf nop (bad) mov or cli stc js adc out mov je inc ljmp mov mov movsb sbb and aam iret mov xchg iret aad sub add and test stos inc out mov das inc subl fdivl inc push rclb pop aaa (bad) inc nop adcl roll js mov mov push pushf je imul mov rol xchg outsb xor leave sub test cmpsb test shl pop mov xor mov outsb mov imul mov pop in jp ror aas adc push jp pusha cli ffree cmp sub jp sarb pop push sub mov call xlat test mov jns pop dec lret or jae fcompl enter dec and (bad) iret sub loope out leave push mov sbb inc gs (bad) adc fwait hlt push ljmp lcall or dec sub fisubr mov dec (bad) or mov lret jno xor xor jle icebp and xorl adc rorb mov js pushf or sbb dec psrad xchg mov mov jmp out insl ret jecxz gs out je ret cmp mov int3 dec jne dec lods and (bad) iret push int orb mov and out cmp or pop add mov jae pop (bad) jg and mov test jnp inc cli leave clc push insl mov stos and cli cmp and idiv inc jg and scas add aas adc bound sbb stc dec orl xor add cmpsl cmc cmc jge jns xlat cmp add scas and push jecxz in add dec aad cltd in mov jae pop jmp les leave in cmp pusha loop fmul addr16 std mov fdivrl icebp and push stc inc and sbb push scas insl ds jge in jns jmp lcall cli int mov inc clc pop pop pop aam cmp add or into xlat shll xor inc mov lret xchg shll inc sub das test mov rcr push mov or mov scas pop ljmp sub cmpsl ficompl int3 fwait in leave clc shrb call mov loope jge xor add push xchg dec mov add mov add in sbb mov cmc mov mov add sub xor stc pop push mov jo insb pop popa sub fisubr pop sbb inc addb inc sbb lret or test add je sbb fwait sbb in cmp mov ljmp push ss sbb fs lahf mov mov clc mov adc fwait stos popf fidivl divl mov cwtl scas sub mov inc inc xlat test or mov aam sub repz push mov xchg movsl fist (bad) pop daa jns jp inc or pop in cmpl in (bad) gs mov jle mov push xor leave jns lcall mov adc dec in inc push inc push hlt jmp fs mov inc mov sub lret loop mov pushf repz pop es mov popf lock mov mov add out adc jnp ret push stc enter cmp cmp es jg mov mov mov mov add sahf push into outsl lret mov push dec insb jb call sub xor js out sub or push xor push gs push lea test cld cmpsl adc add mov push rcrl les mov cmp or mov cmp mov nop popl inc dec cwtl inc or jp (bad) xor jmp mov jp shr xchg js xchg neg xchg sbb fs es mov and jp rcll (bad) (bad) xchg or bound jb into divl insl dec sub cli arpl pop adc or jnp push ds cmpsl lret shrl fimull hlt out (bad) lock and cmp jmp mov cmpsb mov lret inc cs sbb sbb mov pop ljmp sub rcrb fwait pop pop mov or lds clc and ret push xchg daa popf data16 lods pop daa fwait (bad) es outsl mov adc pop mov xchg movsb (bad) or sbb dec inc in add lahf adc pop xor jb rorl fldt subl sub fsub pop hlt inc jae mov xchg jecxz or sarb int fwait ret or ret (bad) aaa stos sub aas or adc inc push (bad) jo shl aad popa inc mov mov push sbb pusha aas test inc out nop fisubr push sbb jbe bound and lret push xchg cmp out jle outsl mov sbb pop sbb sbb mov arpl into sub mov ds mov adc fs iret sbb out cmp outsb call dec fwait add flds hlt (bad) lods nop scas cmp icebp das into pop xor push pop loop sub fadds test and xlat das ja xchg fcompl and subl jle and fwait dec ja adc fstps mov mov cli cwtl mov push xchg adcl flds data16 push ja arpl fldenv mov mov adc xchg adcl hlt dec mov test add scas (bad) cmc int mov lods sbb (bad) adc (bad) jnp fnsave mov xchg mov aaa mov test xor mov push sbb xchg into adc stc jle (bad) movsb mov aam stc adc mov sti cmpsb mov cmc (bad) shrb jnp jmp lret mov aad das push push jno cltd aas je (bad) sbb inc mov into and divb xchg and mov popfw (bad) push movsl gs stos das in xor enter pushf inc test repz sbb push jle add imul mov add and sbb adc or mov jb or xor cli xor nop add inc (bad) mov test call dec mov or sbb and or sbbb sbb aas and fistl sbb push movsl fisubr add jae adc ss rcll rcll push jns ljmp jbe mov xor mov push pop jge call shll sub push mov sbb aad lret or repnz (bad) xchg mov xchg add setle jmp sahf idivb ret cwtl pop pop pop pop out sbb or xchg pop mov mov xchg repnz xchg pop pop push arpl loopne xor (bad) incl imull das rcll ja adc mov pop sub addl test loopne add dec mov ss or imul out adc out mov inc xor jge xchg nop aas push sub sub jge pop rcrb push dec lea outsl xchg mov jne iret pop (bad) cmpsl xor test cmpsb xor dec icebp and jb daa in cwtl std lods dec jg (bad) jecxz bound sub xor aaa imul mov hlt inc jmp dec inc add lds (bad) push dec icebp cwtl mov mov movsl push sbbl xchg pop inc mov sub add jl enter in sub in cmp xchg xchg cmpb add inc mov cltd (bad) push inc jecxz ljmp pop int pop jg sbbl mov imul lock mov repnz into in push sub mov and int3 mov and outsb sbbl and add popf js or push hlt insb incl dec cmpsb lea scas fistp or sbbb fisubrl jge lds dec dec mov mov inc ds jo xor scas nop out pop (bad) xchg inc out mov mov dec sbb xchg inc jo cmp lock repnz (bad) jle add ret cld jle push cwtl repnz or ror sar mov mov push push add and bound push inc js leave rolb lods in lods jo mov mov (bad) mull bound cli out jo mov es and out jb stos mov insb scas cmp dec sub mov push (bad) inc daa repnz inc (bad) test adc lods std sub jmp in in pop cwtl cmp into pop cli out xor sbb xchg xor sub adc jns mov inc mov jbe dec bound scas push mov fstl jl js cmc sbb cmpsb push mov adc loop adc pop clc add pop dec or in xchg leave es mov lea cmp sbb and pop jo dec add repz out mov rorl imul ficom aad cld push jne mov push adc jecxz mov dec pop xor add push add clc ror inc cmpsl leave aad aas jb xor fadds std dec inc mov cmp jmp test add add mov (bad) bts mov (bad) cs adc stos pop loopne xchg adc inc jae repz sbb mov fsub int3 ds push push shll push loop cmpsl rorb pop shlb mov daa pop fidivr push scas mov in cmc sbb mov mov test loopne mov jp cmpsl lea fsubrl cmc les sbb pop push in daa xchg rclb aas lods push mov lahf or mov and and fadd fsub fisttpll fisubr ret dec adc pop into sbb or mov xor stc or js clc xchg jle ss sbb roll pop push out jecxz (bad) or cmpsl insb movsb inc sbb cmpsb push sub leave xor pusha int3 cmp imul xchg test push sub popa lods dec dec call dec ja jb iret fsin fimull sub daa test push test lahf push pop mov (bad) bound nop lods cmpsb sbb out (bad) adc adc lds pop hlt jg loope adc lea pop xor xchg or aaa add int and cmc dec xor scas ds mov out repz pop push xor mov cwtl (bad) jne scas cmc lea (bad) out mov pop or es test jne testb inc add mov fdiv pop sub lcall insb lock push mov inc test inc ret mov inc jnp xchg cmc clc scas dec or dec (bad) cld outsl and and loope fwait out inc pop mov in test inc or mov sub enter xor test nop popf or xor cmp xchg sub (bad) fisub popf mov jmp adc xchg imul sub imul xchg add pop mov cmp xchg sbb sub add mov lea movb movw jmp mov push inc movsb cmp cmpsl dec inc gs push inc mov push adc bound fs mov lods mov mov push nop (bad) xor mov jl imul fnsave es add dec std out je mov jns xchg popf jnp fisubl aas mov mov pop push movsl stos sub sbb sbb dec dec cmp int3 popf or xor add inc mov sub or or outsb enter cmp add shld xor bsr lea cmc cmc adc btc push add push bt bswap shr clc mov pushf mov pusha stc clc jmp stos add jo push inc out movsl add insl or cmp adc mov or int3 xor rclb icebp adc push pop lock fsubrl loopne mov sbb mov jg and (bad) push ja shll push add cmp stos pusha ss in ss fs fs cmp or cmp scas mov cmp and adc (bad) mov sub xchg scas xor loopne mov bound xchg aad pop fnsave xchg dec iret nop lret mov insb in stos mov xchg inc sbb xor mov iret jp and (bad) and add pop adc sbb call pop loopne mov call mov insl scas push mov pop hlt xchg adc xchg pop pop dec cld inc or outsl jp test pop scas imul in aaa xchg or (bad) das push xlat sbb jg mov sub push inc je repz fninit pop outsl lahf jnp mov dec lcall test jns fstl sahf pop push out cmpsb out pop adc fistl ss pop fwait arpl imul sahf mov jg cmp std sub xchg push es push loopne cmp ds adc lea mov inc pop add cmp cld sub sbb and sbb xor mov mov call fldt xorb jle call fnstenv mov push outsb stc add pop stc pushl stc cmp lea pusha pushf push pushf lea ja clc pusha call les inc negl test rcl cmp pop mov inc sbbl mov or fstps dec mov dec and mov sbb pop shrb out adc rclb nop inc scas pop fisttpl sahf mov lods pop mov xchg test xlat aam xchg mov sbb sub pop push push push jecxz gs fwait jbe mov mov cmp gs nop push nop outsl xchg pop (bad) sub mov bound mov sbb incb outsb out insl mov dec or pop or jp xor mov (bad) shrl add lods enter xor pushl pushf stos call cbtw addl in dec mov mov and xchg lret nop shrl pushf jl pop mov loop into adc dec loop cmp pusha stos lock je hlt add js dec bound rclb sbb movsb cs je lret mov and (bad) xchg mov mov dec push inc shl jno cmp insl xchg xchg int3 mov rolb cltd adc mov jbe xchg (bad) sbb or scas push sahf cmp fs jne push pusha xchg mov pop mov cwtl movzbw movzbw mov lahf setae movb setne lea jmp lea je pusha pushf pusha lea jmp sub not lea pushf lea call pusha add add sub dec and daa pop movsbw pusha mov pushl test clc cmp mov call pusha stos pushf movb pushf lea jmp mov call add clc cmc cmp jmp aaa shll sub xor cwtl cmpsb insb arpl and (bad) dec in sbb imul cli xor mov inc dec lds ja stc sub pop pusha leave or lret dec xchg test loopne into jb push imul sbb or and mov lret out in xor xchg adc add adc inc out push and or mov (bad) loop mov lods and mov arpl dec imul mov mov out pop lods movsbl mov arpl cmp mov (bad) ss mov xlat aad adcl cmp nop inc push jbe and xchg rcll pushf outsb int3 dec pop pusha les (bad) xchg outsb push lods pop lret pop (bad) (bad) lahf mov faddl or aam cmp lds pop push sbb int cld mov fstpl push insl (bad) xor sub inc ss or adc xor cmp enter or fbstp inc in pop and dec icebp es cs mov les mov cmp daa lods pop fisttpll gs jg jmp roll jmp mov or xor add (bad) xchg add mov pop enter inc jnp jge pop inc imul jle xor test sahf mov sbb aam cmp (bad) xlat and test push in loop jo inc test (bad) movsb aam sarb xchg jl data16 or adc lock inc adc jge shrb mov mov inc test push aam or (bad) push aam adc jge ss insb cmpl mov xor or (bad) dec ret movsb out fisttpll and imul mov rcll or sub mov rol inc rclb inc pop xor scas mov test cmp jmp ret inc cmpsb pusha imul adc xor out dec fistpll sbb mov jnp mov xchg test jl pop in ret stc lock cwtl jg cli into out cmp das pop xor xlat xchg icebp pusha mov mov push dec cmc jne std imul fnsave jne xchg adc add pop push into adc jle lret sub pop test dec rcll (bad) jnp insl xchg add jns leave cmp xor pop lcall jo movsl xchg sub mov lret nop rorb mov or lea mov push insb mov jge jl add and cli (bad) fsub dec add fsubs add xchg aam and sbb dec roll inc daa and clc inc ljmp or cld movsb clc xor int rcrl mov pop loope in test sbb cld (bad) lret dec jmp xchg lock popa dec mov push inc inc sti inc (bad) or mov and arpl mov sub push sbb mov inc lret sbb lret roll fimull jnp xchg dec push xchg cmpsl dec push dec and sub iret sub pop cli xchg clc xor push aam cmp fs and sbb out dec (bad) jo sub sub inc add inc push in out pop lahf xchg cmpsl pop cmp in test xchg popf mov mov loop arpl lahf arpl cmp jle push in jmp jg or js enter sub mov jmp sahf push mov dec jmp or fisubl not dec mov push (bad) sub push aad or dec mov enter push xchg xor (bad) add fnstsw stos pop and fldpi pop scas xor jle dec mov lret sbb ficompl pop xor in mov sub mov mov (bad) pop repz mov push mov inc jp or push push std push out push call and pop inc pop push push mov xor xchg dec bound add push pop insl xor pop cltd out push cmp add call out nop mov cs stos test int3 inc jbe nop orl push cmp xchg iret into insl rclb or (bad) jne lahf sbb dec fdivs xchg cmp hlt add ficoml int ret or dec mov mov faddp dec mov js xchg mov pop inc out (bad) pusha and push lock lods or add mov and jmp push in addb jg push and xor mov ljmp lods jne jne adc jb lret or pop test fbld stos pop test and fbld arpl jp fist mov or repz les xchg sbb pop push push outsl dec les jg inc js subb push (bad) jb xchg insb stos leave mov adc adc xchg clc sahf (bad) mov pop dec popa aam sti push push setb mov push pop cwtl lea movb jmp pusha pushf pushf mov jmp mov pop inc scas ljmp ja add (bad) fnsave movsl fwait mov dec dec pop and shrb setp jb fisub sbb xor cmp mov stos roll es insb imul xchg repz daa cwtl dec sub pop cmp mov mov cmp push lret sbb or or adc into dec inc insl mov pop xchg (bad) mov clc inc repz outsl xor jbe scas sub mov xor inc add fwait insl mov push hlt js or xor add call lea jne lea movzbw pusha movb cwtl lea mov not mov setle call jmp lea jb shl lahf bsf cwtl cmp movsbw sbb setle movzbw movzbw lea lea lahf lea mov call movl pushf pusha jmp push xchg mov push xchg call lea call jmp cld mov inc push jne push and xor dec fidiv mov cmp pusha scas scas inc popa inc jge (bad) mov dec into femms lods (bad) mov jno cmp xor dec inc out cwtl out popf pop adc test movsl xor arpl (bad) decl fdivrs popa (bad) ror sub je movsb mov or xchg rol call cmpsl or rcl jb iret dec arpl xchg push repnz int3 adcl in push repz imul lret and add popa aam xchg test dec or std adc popa fmull and jge push pop aad fimul call mov jmp xor bt pusha pushf test pushl jmp jmp shld bt mov pushf pusha cmpb movb jmp call xor pop mov pop inc (bad) mov and nop push xor sti jnp cmp aam (bad) clc aaa cmp sysret ja pushf jmp sarl dec push pop or cmp jno loope lods sbb inc sti or rcpps push enter pop roll add andl inc pop iret ja lret mov mov test lds aaa icebp and ror push sbb ret cmp pop (bad) jae lahf arpl gs outsl insl inc fdivrl repz adc push aam and push add xor pop sarb movsb mov test jne scas insw adc movl pusha call mov shl lea call pop ret add push push lea jmp dec mov sar rcl add push mov stc xor cmc cmp pushf repnz mov lea jne bt bsf mov call push push push call pushf pusha mov mov push push stos pushf pushf mov pushf lea jmp call push bt test movb pushf lea je clc add pushf cmp clc pushf cmp pusha movb lea jb jmp xchg pop xor sysret inc mov cmp aad gs pop ja cmpsb lcall ret jecxz out ficompl test xchg jne aaa inc mov dec jnp lret cmp xor popf fldt xchg mov inc inc xchg lods sti std pop rolb ror pop push cmc push cli push fldenv jae call movb cwtl movsbl push jmp mov movl pusha mov push pushl pushl ret icebp cmc cli jp pop inc in ja pop xlat out in xor cmp pop iret ja jns in sub and les nop jno aam jb xor mov adc jmp das pop cmp movsb adc int3 (bad) sbb mov les pop and in loop pop jae jnp loop cld cmp jle adc xor int push push push sbb jne xchg dec lea lret outsb std and mov mov daa add (bad) shl and leave sti pop mov mov mov jg into stos xor ret mov pusha in cmc or pushl jmp mov lea jae stc pushf call movb lea ja ja setne rcr sub and add inc rcl rol jmp (bad) inc pop aaa fisttpl repz pop adc repz arpl jbe cmpsb pop cmp pop jmp add and add push stc sub inc mov lahf pusha fucomp add mov dec and pop (bad) or inc jo xor stos out into mov inc lret pop xchg fs es or and mov outsb popa bound lea loopne jo sbb icebp cmpsb pushf jp movsl jbe pop xor inc cmpsl push sbb sbb pop jne or sbb mov jne shlb dec push sahf xacquire pop inc dec nop hlt sub cld add scas (bad) dec fwait xchg cmp popa mov pop shr xchg dec add pop push mov decb sub pop test icebp mov out (bad) lret jecxz shrl mov nop sub pusha mov outsl xor cmp aad movl stos data16 push sub in les mov loop push fidiv add xlat mov add inc (bad) in push aam fnsave dec mov xor subb inc push lods or jne insl adc ss dec daa idivl call shl cmp push clc add push sub pushf push push lea jne (bad) repnz sub inc mov lea mov rcr cmc sub movsbl mov shrd (bad) icebp clc mov stc mov sbb test mov cmc push clc call push movb lea jb btc movzbl rol clc shr rol not jmp mov pushl push pushf stos pusha movb lea jmp bt sub bswap cmc test neg lea cmc sub cmc pushl popl jmp pushf jp push or inc mov push and scas sub fadd ljmp daa outsl pop lods popa rorl push icebp cmp scas jmp bound sbb adcl loopne,pt fwait push pop xor pop sahf sbb loopne dec jg add inc adc out jne int je mov call push jbe sub (bad) incl xor mov enter jmp add rcrl sbb push clc outsl jp ror cltd dec je push jmp sbb cmp push cmp test or cmp xorl sub icebp adc inc sbb push iret addr16 jg cmp xor lret nop adc ja push fidiv cwtl out (bad) nop (bad) xor shrb test out sbb jb sub ja fidivl pop cmp out test pop in icebp pop mov lret (bad) test dec rorl cmp pop cli xor add inc out push add in (bad) std fs fsub add or push aas inc xor mov dec stos and dec (bad) push adc sbbl (bad) aad cmc push mov (bad) (bad) pcmpeqw dec (bad) gs hlt adc jno dec inc add jecxz ljmp add lock xchg adc je into pop cwtl and cmpsl (bad) in leave ljmp jno cld or ljmp sub xchg jge dec sbb xchg fdivrs es in mov push mov inc ficom nop push and push icebp mov jbe mov cmc mov ljmp jbe push lock mov mov sbb clc inc imul mov push and fadd test jb loope sbb cmpsb jl push movsb mov (bad) mov sbb lcall mov mov cmp aad clc shr pusha call push lea movl jmp lea je clc jmp (bad) fidivr ljmp jg sbb xor mov mov into pop mov ds pop (bad) pop jecxz xor add out sbb xchg lret jae fldenv sub pop pop fdivrs cmp mov cmp dec or inc (bad) mov cmp ficoml dec xchg imul ja sti or mov lods jns loopne icebp inc mov xchg push cmp jae sub es sub jns inc movsb sbb push or rcl fisttp pop enter repz mov sbb add jge divb iret cmp sbb ds xchg inc or pop mov mov or xor push hlt push out cmpsl pop inc test aas cmp test fxam jno pop inc out mov dec out int3 cld dec aam cli jo test cmc std xchg ja jno sbb xchg cmpsb (bad) jmp add or ja push in or and push add stos push jo lret pop rorl jl ret mov fimull sbb and pop sahf sahf (bad) jae mov or imul scas push push xorl test cmp into cmp fs mov xor shr inc jmp jbe inc cmp (bad) out mov mov aaa sbb sub stos testb lea jae bsf rol pop not pop btc or shr mov sub cmp mov pusha call mov mov adc inc aas les movb vmovups fist push outsb cmpsl jmp insl push mov cs lahf mov and stos stc xor test sub cmc push inc cmp pushf ret and pop jns and addr16 (bad) cmc mov push inc inc and dec imul mov lahf stos cld push test clc add into sbb pop inc lea lock imull movsl and dec sbb xor mov out mov inc inc mov call pop push jbe sub xchg test shl stos clc push dec inc std or je adc push inc fcoml add jge sub (bad) xor ret cmp jge loopne xchg xor jnp xor clc mov rcl lock loop lods rolb jmp pop stos cld push mov xlat push or repnz adc inc js fild or fstpt dec imul sarb push sbb imul daa clc jp ds or repz add mov movsl jge cmp lcall leave sbb jo and adcl xor aas sub mov sub pop dec addl fstps ss lcall popa lock aas idiv mov sbb mov es adc and or lret sti push aad mov inc sbb ss sub cmp sbb adc pushf push movsl in cli sbb clc inc push xor sbb (bad) scas sbbl loope ret push or or jne mov test adc lret cmpsl mov pop inc xor lret jns or stos or cs mov (bad) xchg pop (bad) push clc divb mov incl popf add push in mov sbb scas daa sub jne fsubr arpl xor (bad) xchg cmpsb rcrl xchg xor push ss push sbb out aam (bad) ret data16 test pop xchg xor jbe rcll pop inc mov xor mov jmp pop stos daa mov cmp mov pop mov cmp sbb or lahf dec xor mov add cmovge xor fcoml jle pusha addr16 jnp negl and fidivl cltd add and add ret add ja or repnz xchg jae xlat incb jmp push inc add rcr sbb inc (bad) (bad) xor loope shll lret int or lock or xor ds mov mov cmp push stc js in cwtl imulb gs aam dec sub pop dec (bad) or loopne daa fidiv or mov inc in and jecxz and test jge loope es and lret adc inc pop (bad) sub cld push je outsb push sbb fcompl mov mov nop jp pop ljmp sarb das inc lret pop stc jb xchg les jno loop imul pop mov ss rcll shrb test xor add in pop xor (bad) jnp push dec das fdivrl (bad) idiv push stos ljmp shll test xchg sahf xchg mov mov pop test popa dec dec dec mov sub xor int3 popf or nop sti pop pop aas icebp fistpll repnz out (bad) shld (bad) imul (bad) (bad) pop add cs loop pop inc mov rcll cmp and cmpsl subl mov jno mov mov dec xchg loop jns jbe movl pop mov rcr dec ret xchg test and fild daa sti lods lahf pop pusha sub push jp and outsb bound add rclb insb into clc (bad) rolb js and inc movsl enter stc cmp outsl cmp pop stos sub sbb mov es in sub loope sbb mov xchg jo sub add ss cmp jmp js sti mov push idiv push dec inc mov inc inc sarl mov and stos and imul mov sbb add scas into jl fs dec xchg pop mov push and popf mov adc cmpsl sub int3 sub das sub cli jmp jns out xchg inc (bad) mov ffreep sbb sahf push push lcall push cmp or sub data16 pushl inc cmp xor xor andl test pusha movb pushl call push jmp lea jb push cmc cmp call lea lea and clc sar mov rol ror mov adc not sar jmp jno xchg xchg mov mull pusha lea jb ror pushf sbb btc mov bt cmp pusha pushf sub call not mov not pushf pushf lods data16 testl add lea jp push bt jmp lea je not lahf cwtl lea call pusha call pusha or push jmp mov movb lea pushf jmp mov pusha lea jb shrd jmp xchg push lds pop inc lcall jge xor jge jne outsl mov mov adc (bad) pop (bad) cmpsb push imul icebp or fwait sarb push mov ret adc mov lcall call inc cmp xor sub mov loop gs push add pop fistl inc subl orl lcall leavew lods or push rcr aas cltd in xor lret push mov je xchg lcall jl rorl xchg frstor sub pushf mov mov ror movb test not call push pusha movl movw lea jmp movsbw ror sar setns mov bt cmpb call add inc gs gs popa addr16 add test hlt push add xor aaa mov jmp inc rcl or test sbb ror adc loope add add aad xchg mov xor sbb cld jecxz fcompl sub jecxz jg jmp out popf jge pop int3 inc (bad) and xor sub repz (bad) loope std push stos leave cli repnz ja aas (bad) ret nop dec addl sbb dec addb pop movsl clc sub lds cli inc jnp and out psllq sbb or test add neg rol mov cmp cmp movb cmc add call add (bad) tzcnt rcl add sub sub shr bts rol mov pusha jmp movb pushf movb lea je stc sub call not call jmp mov not bswap lea mov call add inc gs outsl fs gs imul add mov imul dec fcompl in inc enter mov push pusha mulb sahf mov sub cmp aad xchg pop into out jns adc incb mov push xor xor pop or adc mov mov push jae fimull pop adc inc xchg fwait add xor push shr mov xor cmp cmp int dec inc xchg lcall cs (bad) stos xchg and jg sbb cltd add sub sbb je xchg mov jmp mov xchg outsl insb ret sbb xlat mov scas push mov xor rorb mov cmp jb add sub push pop ret mov stc pop push lea jb cmp daa stc mov mov stc clc xor stc not xadd mov btr adc add bswap xchg setno setb not pusha pop lea mov lea call pushf pushf adc push movb pushl lea jb pusha clc call call call adc pusha lea jb pushf stc xor pushl test test setns lea jae mov call movb mov pushf mov movb lea jmp add inc gs outsl fs gs imul add push sbb inc pcmpgtb add mov lret sub push mov cmp mov jbe xchg outsb scas sub repz int3 clc jg out mov ret mov pop sbb sub xor or fisttpl pop add mov push xchg aam sub sbb stc (bad) lds decb fiaddl out pop das in cmp adc clc popa push pop and jb repz (bad) push insl cld add fs popf dec jo xor mov fsubs xchg push push test pop les outsl pushf lea je cmp stc test bt sub jmp lea call jmp jmp jl push xlat and inc ret mov call mov dec sub mov add sbb addr16 std cmp call fs adc mov add push insb lock jnp adcl add aam pusha jecxz loopne sbb or sbb shrl fwait in lahf faddl cmpsb mov repz mov xor jg mov adc push das rorl ja adc and in repz addr16 iret push dec mov add dec mov enter pop mov out inc and push fs call pushf stc add pusha jmp lea call pusha jmp lea ja jmp cmp movw push lea jmp call lahf mov inc ljmp shrb add dec rol das mov xlat daa pop gs or fcomps push push push mov sub insb mov shrl and (bad) jmp push movsl dec test mov push cmovg sub mov add adc jmp cwtl arpl add sub outsb (bad) push popf dec inc je jg stos mov or hlt (bad) sbb mov and std cmp sbb pop xchg dec jae sub sub data16 jno aaa lock mov aam pop popf mov sbb (bad) jmp test pushf call movb push jmp rcl not test pop not pop pusha (bad) idivl int out mov setg rcl movzbw not mov shld bsf not mov cmc bsr bsr add movzbl call cmc bt sub pusha cmp lea jae pusha pushf lea jae pushf pushf pushf lea jmp jb lret dec es inc fldl cmpsb repnz xor mov cmp adc mov out inc enter cld mov push in push adc xchg cld es jg test (bad) xor jae sbb or mov out lret add inc icebp mov mov dec leave jl lock mov clc in sbb loopne out sbb mov dec and xchg adc imul mov push mov fmull daa pop inc ret cmp and (bad) lcall and sub into mov fcompl adc (bad) iret fstps flds mov adc inc mov aaa lahf shr jmp lcall mov stc adc cli mov push lret inc lea sarb and or mov xor testb sbb xchg in xchg aaa pop xor pop mov push lahf xor mov fsubp movsb sti xor jp inc push dec sbbl jmp mov xchg xchg iret lret pusha cmpl jmp lea mov pushf pushl lea call jmp test neg test cmp pushl lahf call sbb (bad) jg pop inc and dec vmwrite pushl (bad) cmc lods ljmp popa xchg popa dec inc rcrb mov pop and jl lock add xor push rcrb movb sbb mov push out (bad) aam push lods jecxz and adc pusha test add and insb jb push and dec adc clc insb xlat pop adc cli pop int out push test lret push xchg mov pop stos sub and fsubrl adc push mov sbb cld movsb mov mov ss or fadds push mov lods (bad) pop add xor test les fldl jne mov andl cwtl lea pusha push lea jl push jmp not or sub xchg jmp je dec lcall movsb jle sahf fsubrl call adc ret and or push pop aas dec movl outsb in inc xchg push xchg and cltd fldl in int3 xchg enter mov imul cwtl test repnz notb xor cmpsb jns inc lock push test adc insb test aam or fisubr ds xchg sbb push inc (bad) xor popf pop sub js fimul addr16 mov or xor loopne mov push fisttp jg jnp or mov fwait pusha xor js or lea shrl dec (bad) inc cvttps2pi ja push xor rcrl jb lods enter (bad) hlt addr16 add jbe or out out les and sub iret or inc and stos push movb mov movw pushf pushf push lea jmp lea lea jne pusha not mov call call jle test pop inc btl mov mov sbbl scas mov lret in add pushf mov push mov sti push xlat push clc out mov or mov jb decl lcall inc xchg leave jno sti or testl sub mov jno shrb jnp push cmovnp sarb push js gs leave adc (bad) stos pop (bad) sub aas int mov inc jecxz jle scas sub push aad mov inc pop (bad) gs das aam cmp sub shrd xor setl pusha lea add btr shr mov shl mov bt cmp repnz jmp cmp pushf call jmp pushf stos call test stc call clc mov btr add test call xor sbb and inc ficoml jg movsl inc lds cmpl sub cmp flds xor test push xor mov and mov xchg fwait paddusb adc outsl push test dec jns cwtl pop pop bound fadd xchg sub roll fsubrs stos or dec jg les out pmulhuw push mov enter jne dec adc lea lods cmp lods cmp and fwait cli adc pusha les out and stc push jns push sbb mov ret push loopne mov cmp pushf lea jae clc sub movsbw sets lahf lea lea call pushf test bt mov test pushl clc test pushf pushf jmp std sbb inc je fnstcw fnsave cmpsl scas in scas fbstp mov cmp push out push jl rcrl xchg aad cmp lock sbb les xchg out pop std daa cmpsb hlt push out aas fisttpl cmc dec incb jle mov xchg enter out out rcrl ljmp (bad) lcall popa and sarl jo (bad) sti push xor push iret inc test loopne in in fsubs into gs popa aam (bad) ja andl jo sbb mov fwait adc int3 sarb lret out cwtl push or aam or pop sarl sti push pushf scas idivb test lea dec bound inc fmul xor add mov xchg lea push xchg push xor shrl imul bound push add jle pop loop sarl mov inc imul imul and xchg mov xor and cltd call andl xchg ds in lret out or mov clc cli ficom imul fcmovb repnz arpl push xchg jg push movsl pop inc (bad) xchg lret pushf xchg loope push aas psrlq out shrl int xor push iret sbb adc cmp mov sub jmp shrb adc loop xchg popa adc std pop out loop pusha mov mov aam andb dec das movsl adc test jg mov fwait data16 ja (bad) sub cwtl mov fldcw in jno sub in jo jle repnz jb dec add ret ret push inc bnd pop inc sub push pusha insb jb movsb jp jb and push adc scas mov and pop bound (bad) mov lea mov jbe mov cld mov (bad) das (bad) rorb mov mov lds popl push jmp js xor adc xlat xchg in insb lahf lods insl pop cmpsb sbb ljmp mov fwait std dec scas pop mov adc test sbb dec and rep and (bad) push cwtl shrb xchg mov adcl ds sti ds cmp jp fistpll in fs xchg popf jecxz lea mov pop fisubr pop inc lret fistpll inc (bad) in push adc mulb enter into cld fsubs jle sub mov mov ja cmp xchg dec stos sub xor mov scas lods inc stc mov dec or jg jns mov lock xchg arpl cwtl pushw ja adc dec sti rorl mov pop loope push add out mov in xchg loope scas loop insl lods enter int3 outsl cmc insb in test arpl imul sbb gs cmc inc xor dec test ss add repnz mov movsl inc mov adc or insb mov in loopne mov inc mov out sbb lods in dec aad repz std js dec aad aam inc mov and jo fbstp icebp dec cmp iret loope mov (bad) divl cli cmp add divb (bad) jne sbb or mov aad fidivr xor and outsb inc pop cmp inc inc in lahf leave jmp mov inc add pop ljmp (bad) sub (bad) testl lea mov mov or jbe (bad) cmp inc xchg jge sub pop inc je icebp popa test aas aaa dec fxch xor aaa addr16 (bad) std mov jb scas imul mov rorb fs xchg aam add jbe pop and xchg mov xor cmpsb out jge pop fbstp dec arpl push pmuludq dec dec push lock movsl sbb inc or push or mov cmp mov movsl movsl push mov sbb xchg and xchg mov push movsl mov aad lret pop sahf ss pop out pop into mov insb pop xchg lds jg pop pop sub add pushf mov dec pushf jmp ss xlat add pop inc pop cmpsb cli or or or lret cmp cs bound add mov and (bad) js add ss mov pop mov cmp push cld xor dec xor cmp je mov cs fstps test adc jg xchg sbb in add fist xchg test (bad) adc test dec dec in push cwtl sahf lahf mov add push inc pop lock inc push inc or cltd ds add xchg cmp sub or xchg xchg in mov and aas into shrl rcr mov (bad) repz int3 sbb pop inc inc dec inc fldl sbb sbb in xchg pop leave inc sbb dec sbb in loope xchg insb dec jbe lock into cmp mov adc scas jl shr pop pop mov les lods xor stos cmpl sbb mov orb orl jns inc jg pop fbld and inc xchg adc insl les in inc arpl and aad and loopne push mov xchg in adc fs cld mov xchg add jp inc and (bad) lea je pushf clc call pushf lea jne rcl sar bt and sub btc sbb lahf mov test (bad) lock rcr add (bad) lock mov cmp test call call lea jb xor aas lahf mov cmc bt call cmp sub mov pushf seto mov pushf pushf stos pusha pushf movb pushf lea jmp push (bad) mov pushl daa pop cmp lahf lret fbstp ja ljmp ljmp rcrb ret fisubl cs push test mov in outsb repz push and mov fwait sub fmulp add gs rclb scas inc inc test or loope push movsl fsubrl pop in fdivs jge xor jmp cmc (bad) movsl and push iret cmp or jl xchg mov xor leave or mov scas sbb add and xor inc test xor movl cmpsl leave leave (bad) in sub mov push adc imul daa clc pop aaa iret aaa pop mov push pop mov fs lock add sbb je mov sti pop rcll (bad) mov out or ret adc scas fcoms lods cmc or inc popa mov xor xlat inc inc imul xor mov mov push call test lcall sbb divb mov jb mov fiaddl stos sti push lcall cld cli setae inc sub sub lods xchg pop add jecxz xorb stos pop or leave push jo ljmp jbe adcl sbb popf iret bound movsl cmp sub int sbb or mov stos popa mov cwtl mov cmp rclb lock cld inc pop das dec xchg inc enter pop jbe icebp or arpl scas ja (bad) push movsb insl jnp jg pop adc dec push lds shlb lea and fs stos cmc popf ffree leave push mov mov sub adc lods loopne (bad) pop scas leave push loop cmp or adc je mov inc aas push xchg xor test lcall subl pop sbb sbb cmp mov xorb ja and or test xor stc jnp std xchg cs or inc inc mov push fnsave int sahf addr16 repnz push sub aaa mov (bad) hlt inc fisttpll in sbb mov or (bad) fs in inc mov and push push xlat add pop inc pop fmull adc rolb popa mov in xor test fdivs int3 cmp sub mov (bad) out adc cmp xchg insl das push repnz or loop xor fstl sub push iret mov dec scas or xchg dec andb cmp mulb add jbe mov jecxz cmp mov insb cmpsl pop pop aaa xlat insb mov xor daa fldt jecxz movsb int3 int3 inc pop push call daa (bad) push mov cmc jl ret pop insb inc sbb iret push (bad) mov call pushl push mov push mov pushf pushl ret cmp pushf mov clc bt cmp pusha call cmpb pusha push lea jne mov shl mov cmp add cmc stc movzwl neg mov clc add jns cmp mov cmc stc test push push push lea je test call movsbw not ror bswap not not bsr xor bswap mov xchg mov lea not push pushf lods clc cmp pusha not call xchg jmp ds xchg xor inc enter jnp sub or sub and shr push sbb xor jp ficomp ja,pn nop rcrl pop stc cmp lods xchg cmpsl data16 into sbb jle push and pushw sahf rolb es mov ja gs int3 pop into outsl xchg or sahf (bad) int3 xchg mov jge andl xchg sub aaa cmp lock iret fnstsw lds (bad) xor (bad) aaa mov or icebp pop mov mov push (bad) mov mov xor repz mov das leave addb not call xchg outsl inc (bad) xor inc lahf hlt and xchg hlt push jl jl xchg test bound mov scas inc imul pop out xor sbb inc cwtl add push xchg sub pop mov jl push push out mov or negl addr16 mov int cli cs popf push adc xchg pop mov sbb pop cmp inc xchg subl call (bad) xor inc popf das mov (bad) cmp bound iret fstps push jmp or lods mov repz pop fsubs scas les movsb push pop mov js and adcb test push lret mov cmp dec fistpl add adcl test adc cld lods pop sub shl and mov (bad) clc cmpsl push adc push pop in shlb insl lods push jno mov and loopne fs add push jb out leave push adc call pop cmp dec ficom test in mov push repnz dec jb sub add dec xchg lret into dec gs enter and dec gs sbb pushf stc bt lea sub push cmc stc test xchg test push cmc rol ror push lea adc mov add not shr mov stc add push jmp pushl popl mov cmp movb call aam adc inc lds push pop jmp mov add leave (bad) psubq mov adc pop mov pop repnz je xchg call arpl pop arpl jbe aam rcrb fimull mov addb dec out ss mov jno outsb movsb (bad) outsl inc adc std sub test movsb mov push xchg push add insb sbb adcb sahf js gs adc dec jnp test (bad) or and push (bad) and cmp enter push sahf sbb mov fmulp ljmp sti fidivr pop add bt cmp cmp pusha pusha movb pushl lea jae bswap bts rol jmp pushf pusha stc cmp or movw jmp push mov push lea push movl call cmp dec mov shl shr mov and sub mov pusha jmp repz outsl cmp inc stc repnz clc push in into sub bound lret lds iret ud2 dec scas mov arpl inc aas cmp mov in and (bad) repnz xor mov dec jl and popa mov jns mov loope out push add cmp adc (bad) cmp mov ret mov lea or xor out repz sub dec ljmp push movsb clc pop aas out add dec jns push push push ret mov dec andnps xchg stc jle in loop aas (bad) enter and pusha add add rol movsbw bswap setae mov (bad) lock mov bt repnz pushf pusha lea jne pushf pushf lahf movzbw movb setp bswap mov setl pusha pop movzbl lea call pushf lea jne add bts movsbw xor cmc mov stc seto rol add and sar neg mov pusha test pusha push pushl lea je pushf call pushf add pusha pushf push movb lea jmp (bad) out xor cmp fs mov les mov clc sahf jl inc push lret in add mov adc mov fdiv (bad) sbb dec mov js (bad) sbb xor in and xchg jno push repz mov pop and sbb fimul xchg mov sarb icebp push adc pushl in dec pusha lea jne cmc bsf jmp outsb test cwtl ds inc (bad) lods outsb cmp mov mov call loop xchg push out bound push cmp int3 sub push lods sbb icebp mov loopne xlat sub sbb dec int add add std fcomps call sub lods xor mov xchg je lahf adc inc sub pop aad dec mov add clc and and mov ret mov mov push orl repnz mov std pop fnsave cmp inc inc mov or or mov ja out popf cmp xchg push inc jl lds ds inc add leave cltd pop pushl xor sarb push orl push jnp js loopne movsl pushf mov test ss testl insl movb stos repz sbb pop loopne mov arpl adc lods arpl adc mov mov sbb pop test fwait loope scas into dec inc mov (bad) xor sbb xor hlt push frstor add mov sbb lret push cmp rcrl push or in jbe xchg cmp bound mov mov xchg sub (bad) jmp fild pop ja push aas mov cmp xorl inc out mov hlt xor ds les xchg dec xor or jne mov and jmp push mov shr imul cmp jae mov mov sub shr add call clc pop ret push mov pushf pusha mov lea jmp movw pushl lea jae aas movzbw pop dec lea lahf ror pop movsbl aad pushf stc mov stc bts neg shld cmp pop bswap mov pushf lea jb and dec bt cmp lea lahf push jmp mov movb mov pushf lea call pusha lea jg pushf mov pushf pusha lea jmp lea call test add rcr cmp pop movzbw stc cmp sar pop cmc cmp pushf push sbb mov jmp mov popa mov icebp mov ficoml in fadds clc sbb pop mov xor hlt inc pop mov jae ja inc pop test sbb xlat adc sarl out jo inc mov mov in and cltd mov test ret sbb stos mov push mov bound pop (bad) xchg in leave sub add push inc daa dec orb std decl sbb xchg cmp dec fnstsw movsb cmp (bad) psraw js dec cmp cmpsl mov pop int aam loope insl cld mov sahf sti lea test fldl and cmpsb mov jnp lcall mov ror cmp or xchg add aam call add sbb cmp and mov sub pop push sbb jmp mov out test or pop shrb ret rol jne adc or mov xor jmp inc add xchg outsb rorl xor dec or mov sub movsl inc adc stos mov pushf insb xchg insb dec lea das aam jno lds sub (bad) xchg imulb lcall or jne add iret test or mov je add mov test sbb flds fisttpl cmpsb das jp das cli cmp inc out cmpsl addr16 jmp and out xchg jae pop pop into cmp jle and push rorb rorl dec rolb inc in or inc and push mov add dec add mov (bad) push loope xchg jmp mov mov subl mov xchg stc cmpsb xor hlt rclb sbb inc inc pusha mov jmp rcrb sub mov mov inc clc xchg popf faddl dec aad dec (bad) pop fucomip cmp sub movsl xchg mov (bad) xchg jnp mov (bad) icebp mov pusha jmp pusha pushf pushf lea ja bt sub rol movsbw add sete sub sub btr mov jmp dec call pusha push push lea jae push mov mov lea jmp mov pushl btc mov shl rcl btc sub pusha mov lea shrd shl ror push mov bt test inc sub adc cmc shr and lea mov mov shl mov cmp call pushf push pushl mov pushl stos movl pushf mov movl pusha pushf lea jmp dec shl inc pop inc gs add cwtl scas je insb mov cs mov push test jp dec push xchg pop sbb bound mov jae pop push jns xor or and movsl add or mov int mov pop sub sti outsl pushf lea pushl jmp mov lea jne pushf pushf pushf lea jb adc jmp mov not cmc shr jmp clc shl clc mov cmp cmc cmp mov call pusha movb lea jg jae xchg bsf inc or mov or push mov adc mov call lea jb cmc aaa cmp setge mov jmp pusha push movl jmp pusha movl pushf jmp sub lea jl repnz pusha pusha lea jne sar cmp mov shrd shr add sub stc inc bts test mov bt sub stc cmp cmc pushl test cmp push call not jmp inc push cld jl pop inc xchg push adc loopne lock push mov cmp push lret fs add sbb pop push add jne sahf xchg add test xor mov ljmp push push ja jnp popa mov dec cmp sub cmp into sbb pop adc (bad) mov or mov ja jns xor cmp sub pop (bad) and sbb fnsave cltd sti pop cmpsb mov jno cmpsb sub rolb sub (bad) jb fadds xchg mov lods inc pop inc repz mov rcrb (bad) test cmp add cmp cmpsb je push outsb mov mov inc dec inc mov in cmpsl jo push sbb fildl sbb cltd roll test outsl rorb sub mov test je mov ret xor add mov test aam fcoms lods hlt or call jno pop or mov mov xchg add pusha jl inc sbb inc pop cmp out cmp (bad) add test ss jge cld inc lcall mov mov fsubr dec out neg mov bt bt sub jmp test es add (bad) out test adc inc add (bad) dec adc and pop add inc add add mov add inc add add dec out insl mov add shrb sbb loopne xor add jecxz add inc add add inc add inc add add sahf sub cwtl xchg add inc add add rcrb fwait out add inc add out cmpsl data16 pop pop jp sub add (bad) jo cmp aaa sub add subl push sub add add sbb or inc add (bad) mov (bad) aad pusha das es add add mov sub add (bad) out inc sub add push cmp lahf scas mov add xchg add and (bad) dec xor add xlat insb add inc add add mov xor inc add lock pop push imul cld lret xor jno push cmp inc add cli xor or xor sub add call mov add mov fildll push push sub ljmp imul add idiv lods int3 lret xchg and sub add clc jne lret inc push add imul cmp inc add mulb jns je cmp inc add call add add (bad) int3 fs inc jp inc add add push fisttpll push push xor add icebp ds mov add hlt pop (bad) pop xchg mov add cld adc clc xor inc add (bad) pop ret push out inc jge sub add sub jbe sub add dec jns jb mov xor add stc je pop out adc inc add rorb sub mov xor add pop addb inc add add ret mov sub add out mov xor add push leave rclb sarb inc add int mov inc add (bad) lods lahf xor inc add add ljmp inc add add and (bad) ret cmp inc pop inc lret xor scas push ret mov pop push movsl jbe jp adc jle xor xchg mov arpl mov imul test es mov cmp outsl cltd shlw arpl mov fnstcw dec jno (bad) and repnz push subl sti jbe cli aaa stc or cltd push xchg jno push lods (bad) icebp popf fidivrl lahf mov arpl push pop lods adc pop subl xchg nop arpl inc rolb add sub inc push pusha mov in add call pushf jmp cmc sub clc pushl popl bt cmc pushf cmp movb call pusha xchg pushl call mov jmp int out inc pop inc ficom or or div repz inc lret lret jmp fstpt dec ret fsts dec dec sbb xchg add rol push sahf mov leave or repz pop shrb jb add clc adc aad push cmc push call jae push push pop in cmp cs mov jge or cli inc cmp sahf outsb mov mov pop jmp dec fildll sub pop jne insb fsubs xor lds pop mov dec sub je (bad) (bad) popa push popf movsl enter repz fnstenv inc cltd dec in ss jb and dec inc popl mov cltd (bad) out pushf fistp aam push (bad) cmc je inc test and jbe cmpl int3 pop mov mov push xchg xchg mov xchg out sub jg and xchg in cmp nop ret xor pop mov fwait cmpsb jnp jp enter xchg mov add in js sarb xor pop jle and fildl adc cmpsb jne cs stos xlat lds std push jb stc sub (bad) xor or sbb or pop adc fldt jl cltd pop rolb jg les shrl insl (bad) ss popa loopne int3 mov pop sbb inc fidiv add jnp lcall out out out sbb ljmp mov add pop fistl (bad) loopne mov xchg into jne test xor cmpb (bad) (bad) psubsb pop inc aaa pop mov ljmp dec xor adc xchg xchg das pop cltd and fs mov mul ds lret loope add jg and nop lea fdivrs repnz cmp mov jbe jae test jle leave cs cmovns push or ja test add jle xor cld fdivp inc mov dec packuswb aaa test es or xor mov loop,pt (bad) sub sahf aas lods test stc test push xor pusha jmp push or les inc rcrb popf add ja push daa jno int push stos mov leave sub shrl xchg jns addr16 fs into dec cmpsl mov or adc jno call arpl xchg insb fsubrs ss iret aas js std sub pop sub add inc hlt jne insb xchg rcll out sub pushf cmp push mov orl jne idivl cld test or icebp addl adc test out cmpsb cld mov xor rcrb aaa adc add shr insb and bsr aam ror rcl sub lahf bswap push bswap setl push lahf push movzbw movzbw pushf pushf mov cwtl pop lahf push bswap movzbw mov call call add mov call add pop ret jmp jmp mov pushf push pusha movb pushl ret xchg push movl jmp pushl pushf lea ja adc cmp or sub rcr sete add cmc sub mov jmp push movw pushf movl pushf jmp mov not bt shrd call bsf data16 repz jmp call push movb movl pusha pushf push mov lea jmp pusha call movzwl add pushf bts mov pusha call cmc cmp pusha add pushf lea jmp movl jmp cmp shl cmc add pushf jmp call je mov dec pop inc mov sbb xchg xor cmc icebp add inc ja addr16 shlb sub icebp sbb jmp arpl fsubl xor fcomps mov mov cs scas cld rorb xorl pop xor ret into std rorb jb xchg in dec arpl mov pop push lahf pop outsl int3 (bad) cmpsb lds mov mov push fnsave sti mov (bad) test push dec fisubrl jl out pop repnz ss xor pop dec xor mov iret sub cmpsl stc sahf (bad) dec data16 sbb outsb int3 jg data16 sahf xchg test xchg sub xor es outsl ljmp dec pushf aad cmpsl mov and push movw lea jb bt cmp cmc stc cmp jmp pushf jmp pushl call negb sub in movsl popa mov stc cltd out movsl aad jmp mov mov test nop or loopne out dec ret mov ja xor inc mov jg movl sti fdivrs fnstsw mov add jg les jmp dec (bad) shrb dec je pop out ret loope mov pop stos mov adc pop fstps cmp adc cmpsb or xchg aad push add in xchg sub cmpsl lret pusha (bad) push sahf adc into insl divl push and xor dec jp pop adc lds icebp ficomp pop inc dec (bad) icebp pop mov test es push dec fs dec push cmpsb pop int3 aas sub cmpb lcall out jo pop in cmp pushf testl arpl gs cltd jge push jne sbb adc addr16 xor lcall push and or js mov jae jae xlat ja ss pop or and sub ficoml push pusha adc inc xor push addr16 call int inc cmpsb jo mov sub ja push mov cmpsb adc dec jg lahf idivb sub jmp lea call cmp stc mov cmc clc cmp clc cmp push movw pushf lea jb xadd bsr stc mov sar data16 repnz ret add add jmp add jg add je or test push add shrd bsf mov test bt clc add call bswap lea pushf lea call cmc cmp pusha push call add dec outsl arpl inc insb insb outsl arpl lahf pop mov jecxz cwtl rcrb xchg mov shll sub push mov cli test push ficom sbb testb addl sti shlb push sub imul inc out repz aas stc pop mov (bad) aas xlat jl or rcrl push in jae (bad) push insb cltd loopne lods pop sub (bad) int3 movsb mov arpl rcrb mov pop stc and lock push test stos loop adc sbb inc inc sub and and mov mov sbb mov int3 movsb mov std rcrb hlt xchg inc enter push bound and mov inc insl fisttpll cmp dec or imul popf jl ret sub test (bad) push jp outsl sbb popa mov pop inc rcrb inc xor in lea mov stos jae dec push iret and ficom pop pop loop mov push movsl mov xor in stos leave jo call mov pusha lea jb mov shld mov bt jmp jae lea sub mov lea call test fildl js mov into in es out hlt repnz test and lea pushf sarl pusha loopne nop fwait mov push pop out push inc dec xor push jae lock scas pusha test adc popf sbb subl lea das repnz xchg repnz cmpsb lds in (bad) jl sub and loopne push xor arpl popa dec jmp adc cli fsts jp cli sbb jb popf into sbb inc loope mov fs pop mov lock pop sub mov lods cmp js pop mov push cmp push xor leavew or pop inc (bad) push and sbb clc push add int3 inc lea mov add fsubs add push jo cmp in mov (bad) inc cli dec fmul mov sahf out sarb ret adc (bad) cmp mov add mov dec ja or lock inc inc (bad) dec fs mov xchg jnp stc test dec mov adc cli pop fnop xlat repnz scas in in pop mov sti xor pop mov fwait cmp sbb fstps xchg mov cli push out adc jb lea je test bt push jmp rol sub pushf lea mov movw pushf movsbl mov movw movzbw mov not pushf call lea jb jmp call add dec jo outsb push inc dec popa outsb popa addr16 add xor pusha call test cmp push pop inc jnp adc jo inc mov cmp fs push in bound add or push jno fcoms push shrl cmp in fchs and sahf hlt sbb nop push jae add and mov push fnop xchg imul xchg stc sbb mov sbb in jnp mov add fdivl addr16 push negl sub adc repnz test call fsubl pop inc jmp sub cmpsb and mov scas fimull test es std test xor inc jbe push pop mov jns roll das adc dec mov mov pop inc aaa cmpsl push mov pop (bad) xor mov lods push add mov xor jnp fsubl in subb mov fiaddl or lods ds in cld push ret aas lcall inc pop loopne xchg mov (bad) aam cli scas push push cmp ljmp std hlt fimull pop and sub jno data16 dec push or insl mov push sub jae adc ljmp hlt sti push dec xor cmp mov out cltd testl jne hlt loopne and data16 mov lcall iret xchg mov xchg rol mov lret aas movsl add adc mov lods sbb data16 insl fwait out dec (bad) xchg mov push cmpsl lret out das jmp push movsl das mov xor pop cmpsl fidivrl inc scas xor sbb test aas jmp pop lret stos push push dec lea jne sbb dec shrd xor mov mov add rol and add neg mov push clc test jmp fldt adc movsb inc les test push pop push pusha add outsb hlt sbb adc fsubrl and dec adc mov movb mov jne lods repnz iret inc (bad) in jbe push mov movsl push jp insl or jns and cli mov notb inc loop push in mov or xchg insl cmp scas and ret xor xor pop xlat push lods aad jle arpl sbb orl xor dec push mov outsl cltd shll xor lock mov outsl jle mov daa subl dec push dec mov jae lcall push pop inc pop sbb cmpl ss pop pop push bound scas ja inc (bad) aas sbb ja popf inc or scas add cmp (bad) and mov pop dec xchg ficom fisubrl stos scas arpl xor bound or sbb fwait push call dec cltd xchg xchg cmp cwtl hlt imul pop fisttp dec jecxz fwait ljmp mov mov jmp mov and jne insl or adc and sub sbb (bad) repnz pushl fcoms pop inc push scas rcrl xor jle xchg sbb inc ret mov cmc stos fldt subl pop xor mov jae sub cmp and xchg mov in xor (bad) sarb rclb mov mov adc inc (bad) loop loope adc (bad) ja pop inc ret jne sub ljmp jb add jne mov xchg jecxz dec push mov (bad) push fs sub push sbb ret and push xchg mov pushw mov mov xor and lods and add (bad) mov xor lea jmp not pushf mov push movb mov push pushl call in pop fcoml inc sub fadd push fdivs dec dec push stos sbb dec mov xor stc int rclb jl push sub pop add insb pop mov lret push xchg pushf in xchg lds aad jbe roll sub sahf sbb mov movsb adc inc test insl inc subl jne in xchg mov outsl (bad) cwtl in or adc xchg cmp pop pop push xchg cmp sub mov hlt inc out insl clc cmp stc out dec add sti xor fsubl call adc fs pusha lea je cmp sub pusha clc call push call add dec outsl popa fs imul add pushf lea jb shrd pusha add dec mov neg sar not not pusha adc (bad) icebp add (bad) adc pushf add jmp das iret mov push outsl jnp das aaa pop mov (bad) cmpsl xlat aaa xchg jg jno mov cmpsb pop jmp jp push inc ja aas test xchg sbb push cltd pop xlat jne sti pusha lds jp cmp push inc andb cmp xor enter sbb mov pop adc sahf loopne add cmp repz dec loopne lahf addl mov (bad) mov sub xor out bound push insb dec push sbb cmc add nop std adc test pop inc lfs lret int pop xchg xor mov and lahf pop lret repz mov inc adc fistl fdivs mov cmp imul das push pop mov jnp clc loop lock enter sub ss mov xor and std add jb fmull xor jp or jno and jns pushf mov dec cmc (bad) test xchg inc cmpsb insl fdivr jecxz shrl pop lds pop out cmp sub sahf adcl push xor sub repz pop inc lods (bad) aaa mov das subl negl mov shl sbb jo fwait addr16 xlat and mov mov or jns cmc cmc add lea cmpsl pop wbinvd or xor popf divb pop pop adc stos jl bound cmp aad pop test sub adc xor push int3 fwait js int3 out or (bad) push inc in int mov shll inc push nop mov cmp push jg sub jae or pop adc xor jecxz sub sub mov call fdivrs inc in pop out dec rolb cmp mov int3 xchg fstl pop aaa add insl and lods (bad) push sbb call mov test (bad) call daa or xchg jae sub jl adc js testb and and lea inc inc dec test cli jno dec loop add loope (bad) stc sarl push dec mov xchg mov xchg mov dec push pop out xor repnz pop push inc dec orb cmp out pusha sub dec fsubs int sar inc inc jg fnstenv sbb inc lret pop int3 cmp sbb out movsl jb push push cs cmpsb mov cld jl ja mov cwtl fisttp push or or in ss dec das cmp (bad) clc movsb into cmp insl push push or lret dec leave call jecxz or inc add jmp mov rorb in and mov push adc jecxz adc mov je in push xchg (bad) jmp pop int3 xor (bad) cmpsb ret mov cmp sub stc in fidiv bound mov xor scas jl dec aaa outsb lods js adc cmp repnz xchg or cmp jge shr popf dec shlb dec push pop or pop out mov divl dec lods jge testl lds stos mov dec insl or insl sub das pop clc movsb jge and add cwtl bound xor fnclex fmull dec mov out pop lock insl adc leave gs cmp push and mov mov enter pusha push jge jge dec shrl adc inc pop fxch xor xchg xchg mov fdivrp jae test xor pusha or lret sti (bad) ror add stc ret repnz adc xlat sub push cltd out mov out inc icebp adc lods adc lea std movsl ffree sub (bad) popa and (bad) or aad mov out cld repz int3 sbb into dec jne inc cmp fmuls lods movsb scas mov add fsubr mov mov pusha xor fwait xchg ficoml test cmp pop xchg getsec dec mov aad test adc test cmpsb inc icebp test add jmp mov imul xchg ljmp aaa (bad) cmp aad jle rclb je leave dec hlt add mov and repnz fild mov jae fnstenv lcall jp pop push sub pusha les and bound fs aas sub mov test cwtl mov outsw in xchg hlt (bad) incl das jle pop insl (bad) lret loop cmc sub arpl push sub mov mov ret (bad) jb js arpl and mov sbb fnstenv js andl xchg stc loope rol jne sub push cmp jg fsubl mov movsb fldcw cmp xor xchg dec js mov sbb sbb outsl jne xchg mov mov and out cmp in mov pop movsb inc stos pop out out ljmp mov and adc dec cmp push outsl mov mov iret outsl test lea or popa push es inc std push lods out cmp dec ja fildl mulb jne nop jb outsl idiv sub (bad) fstpt dec xlat mov mov fsubrs pop jo bound ficoml outsl int jbe xchg pop fucomi push xor fcomip mov mov jne jl cld xor dec call lret or scas out mov bound mov movsl mov fcompl stc mov cli mov jo add lret xlat jmp es push jg sub mov push jmp sbb or insb in add pushf pop aad les cli in pop mov lods outsb in or jle pop aad push mov mov rolb lods pop mov add sub dec and adc or iret and pop push mov sub dec test imul ficom dec popa in cmp sbb sahf test scas movsb sbb pop and enter out push adc pop mov fwait push jo mov jns lret mov scas mov outsb lcall xor dec (bad) loop cmp lods or xchg inc outsl ja xlat pusha clc fidivr add (bad) hlt push movsl dec sbb push or mov movsb les sbb lods andl sub test sub imul das cli setge pushf aad test xor dec jne mov mov mov jl sub (bad) lcall push fstl mov adc xor lret lods pop movsb lcall mov pop subb es jp test mov stos push mov pop std ss push jle jb mov fildl or push lcall mov xlat ficompl push call mov dec mov adc sbb ret (bad) iret xchg xchg push aam popa mov ss jg test push push push sahf aas rcr push inc mov jae and loop test mov push inc outsb (bad) frstor dec dec or xor in jge popf push in cltd adc sub nop cmp lret cmp mov icebp or sbb cli gs (bad) jo dec (bad) pushf pop push int mov daa stos pop sahf sub dec fucomip fnstenv push das xchg jne jg mov pop mov cli push movsb jge out xchg fmuls mov pop aam mov (bad) sahf mov mov inc cld fld arpl or mov in lds popf cld sarb int (bad) mov mov addr16 iret add das cmp cld outsb dec xchg add pop shll movsl xchg sbb sub (bad) pop push jne int3 insl call sbb imul push mov mov (bad) xchg jge mov add mov sub frstpm(287 je xchg (bad) sbb cwtl lahf sahf mov int xchg add pmuludq jae push sbb push xor push movsb sbbb dec test (bad) fs sub stos lock mov cltd inc push fwait popf (bad) jbe mov nop fwait les (bad) and cmpsb jo (bad) mov xlat pop add jns sbb addr16 pop pop inc pop jnp jnp (bad) mull mov rorl xchg jns fwait in push mov lahf rorb rcll (bad) (bad) push mov dec and jp or (bad) xor pop imul inc ficoml mov or adc pop (bad) std sbb lcall or pop ret mov movsl dec jae jno sbb (bad) pop enter test mov mov add shlb mov jmp fldl xchg cmpsl push les add jge mov mov aas into out pop push sbb jnp jmp in fwait andl xchg and and or xchg (bad) fmull imul ret insl mov dec (bad) mov in sub repz fs push push jbe add jo sarl cmpb mov test inc inc fistpl pop and sub and gs inc jb and cmp xchg adc xor mov and sub imul jg adc push xchg das ret mov (bad) jne (bad) dec imul jb push frstor push cmp mov pop push sahf out (bad) mov loopne mov push gs lret (bad) mov imul rorl andl movsl add sarl mov sbb das fisubl dec mov pop sahf dec dec icebp loop dec mov sbb js xor loopne loope jmp cmp jmp decl jge fild clc fs jmp dec jl xchg sub in sarb fistpll mov rorl call adc movsl ljmp and jb inc dec (bad) ljmp pop xlat fucomip das imulb fcomip mov and add push (bad) pusha push test dec or cmp ja dec push out push push sbb cli clc dec fmull imul push daa rclb or add inc sbb ljmp lea clc stos or adc mov shr jae gs js push pop adc stos aaa stos (bad) mov adc sub scas lods jns cmpsb pop lret xor adc jecxz or ja xchg pop mov xchg icebp xor daa addr16 js push (bad) push pop push xor inc pop ljmp jne sbb fidivrl push cld jbe xchg (bad) movsb cmc xchg inc hlt jl mov pop in sti rorl icebp cld sbb (bad) pop shl ret test sbb mov int3 inc adc xchg sar aaa cld sub ss lahf inc pop add and notb rcrl (bad) icebp cli mov subl sub hlt adc pop add jne fisubl adc inc cmpsl jmp popf fwait mov sbb mov test pop mov mov lods pop test cmp inc dec shll fisubrl adc mov cwtl in mov scas (bad) mov sarb leave push jmp in mov jle and ljmp les pop sbb mov mov inc addr16 test or xchg repnz inc std mov jns jae inc ds rcl mov or cmp cld insl sbb roll jae test (bad) frstor int3 lahf pop aaa in pop cmp aaa cli adc mov call test (bad) clc jno daa outsb (bad) add dec lret jae insl mov or mov xor insb outsl mov sti or pusha aaa dec loop fldl aad repnz imul outsl cltd mov hlt les cmp jbe loop,pn lahf cwtl add addl test fld stos and loop dec push push stos rcrl sbb mov pop (bad) add or cmpsl and xchg lret dec mov rclb in lret inc insl adc (bad) and lahf repnz push sbb lods leave test mov and mov pop add pop adc stos pushf pop in rol mov xor ds and xor mov inc mov test sub jmp jnp into popa pop aas mov fstps pop lcall (bad) enter or pop cld mov loop sbb insl js fs iret in and adc out mov add pusha aam call mov add lods xlat dec call rolb mov push pushf cmp jae xor dec sbb dec pushf into jns pop jg pop stos cmc aad mov aas pop adc add lret dec mov inc movsb out sub push pushf in mov xchg loope aam sti out in mov ja cwtl xchg cmpsl rorb aaa repz or sbb inc xor mov imul jmpw shl dec out or or sbb jp sahf mov xchg add cmpsb sbb repnz mov mov mov scas test lods mov inc pop mov inc cwtl or cmp les int fldl ret mov imul mov pushf xor pop inc loope lcall mov lcall cmpsb adc mov pop push dec mov inc fcos mov js cwtl aas push add stos frstor js cmp or pushf loop loope popf pop fldenv push sub inc nop cmp and pop dec jns dec xchg dec jecxz jg pop adc xchg xor ret not and cmpl cmp xchg jmp dec test stos lods dec fnstcw mov addr16 add aam jecxz scas std sub xor mov dec jl xor and sar jbe mov test jns arpl (bad) xor shrb sub xchg mov jnp addl fwait dec in data16 mov push jne jmp data16 pop and mov lahf repz fsubs nop aaa decb jne lock nop sar sbb mov inc (bad) mov mov inc imul and push sub out mov ds iret dec xchg mov popa fmull mov jns bound scas xchg and fwait mov push fcomp mov rclb add icebp sti inc or mov jno ret (bad) inc mov ljmp and xchg add mov adc sahf aas pop push pushl sbb stos xor inc fstpt psllq sbb pop es xchg push push xor imul out mov cmp sub or sbb jno repnz inc push rcrl xorl mov mov loopne mov data16 xor fist inc cmpsb dec int3 lds lea mov pop cmp xor push xor pop add test and mov loop fstl outsb xchg push push xor insl bound sbb cmc pop pop andl pop (bad) mov and sub sbb stos xor mov test jle mov push ja std out add (bad) hlt (bad) adc cmp aas into cmpsb cld fidiv shrb jnp (bad) iret mov (bad) xor push inc pop cmpsl (bad) mov xchg out push inc sub sub mov clc adc pop fsub pop std mov xlat outsb jmp int out dec mov rol fsts aad xchg rcl dec popa test mov sbbl push fsubrl mov mov adc push in hlt imul sub sub cmp and loopne jecxz push inc pop ret mov sub (bad) pop mov xchg bound add ds mov push ret mov aam lock pop adc (bad) cld stos outsl pop leave add rorb push (bad) movsb hlt and mov sub (bad) int3 xchg roll imul ret push (bad) out (bad) lods push outsb aam dec inc nop (bad) jecxz mov push popf and push push sub fisttpll test movsb jle je rclb push shlb iret test call fidivl push adc xchg push and add mov dec pop lea push sub push cmc icebp scas add push daa movsl push xor psadbw jbe inc xor jae add push dec fsubs cmc adc inc push lds ja push or stos pop test lret xor or jl cwtl adc sti neg xchg mov repz xchg sub push fsubr mov mov xchg nop jecxz lods mov sub xlat rol bound jno out mov fwait aad push push push cli movsb and jns fsubl or add mov cli loope test cmc outsl lock adc fist mov xor mov sti mov push xchg popf repnz xor dec scas mov ret sahf call (bad) arpl jbe sti sbb fwait adc cmp hlt dec aaa pop pop push and sbb mov mov mov adc nop adc cmp movsl clc cmc mov jl jmp das pop outsl inc push jg aad sbb movsl call cmp cwtl xor int3 imul jne inc int daa add pop (bad) jle adc cmp sbb hlt stos das lret (bad) loope popa dec sub cmpsb and mov mov mov or jl pusha adc int pop sub jle cmc or (bad) sbb pusha sarb cs cli test inc (bad) or fdivrl pop jns fiadd and stc in dec cmp jecxz daa push lret cmp adc sbb xor sahf add mov neg dec outsl jmp sbb jne cmp lea addr16 pop add and popf rcr fildll xchg sahf hlt dec inc inc sub mulb outsb adc dec add pop dec sub inc lret pop mov loopne loop sbb push and ds cs sahf arpl in sbb (bad) (bad) (bad) mov mov rclb stc dec jnp lds or sbb jmp jb jae inc pop sbb lods push mov iret shrb cmc in test iret lret mov idiv mov mov mov mov movsl sti out cmp loopne inc jo adc inc xor movl fstps jns cmc or outsl sbb sbb je sbb xchg and fdivp test xchg lods test stc scas xor mul clc cltd jo in push cmp fcoml adc ret fneni(8087 mov lock push movsl and push add mov inc ljmp push testl dec mov cmc fistpl xchg push loopne xchg inc jae testl jp or xor ficom cmpsb pop pop js push fsubrl fildll movsb scas sub xchg cmc sub outsb dec test out push sbb adc lea and pop pop xchg scas cli fdivrs sub or (bad) mov dec cli mov sti adc push arpl cmp (bad) inc std pop xchg and icebp xchg sbb mov rclb insb imul gs sub das and xor icebp loopne cmp stos and test mul pop add pushf pusha aam jp mov and (bad) mov jns push cmpl je inc or mov arpl xchg cld add (bad) bnd dec push and data16 mov nop popf push cmp (bad) out mov arpl pop fnsave iret xor xchg hlt sbb nop addb pop fcmovb inc (bad) les dec shl adc lods xor shrb push and mov push push js lret pop repnz lods fsubl xor jns mov enter dec ljmp mov seto or push mov sbb mov or les jno leave js (bad) popa cmp (bad) incb fisttp dec push sub inc int3 loop sbb test mov cwtl xchg fcmove and jo push jg addr16 jle adc rorb xor xor movsb lret pop arpl mov clc xchg lods pop pop aam pushf xlat push fsubrs notl adc push dec xchg and shll xor xchg jmp mov cmp cli sbb loopne ficoml push lock dec mov jo jecxz cmpsb pop inc and ljmp in and mov ror xor mov add lcall or (bad) outsb cmpsb push cmp push hlt icebp pop sub movsb fmul out jbe push (bad) cli (bad) mov ficoml mov xchg mov es test ss or js (bad) mov out pop or dec pop jbe cld sbb xchg fbld call pop ret jl cld ja sbb jmp pop or fs insl call inc inc arpl push cmp inc test xchg bound aad adc mov shl xor adc sub xor ret test xor cmpsb mov in pop lret dec andl sbb jmp adc out or mov mov outsb cmp aam (bad) jne xchg repz inc insb aas add sbb push and mov shlb out jne cmp inc adc fwait add inc push enter push mov int3 aad das pushf outsl inc xchg sub pusha sti int3 sub ret push sbb adc in enter sbb sub inc or or pop mov mov cmc or aaa and pop movsb xchg shlb adc inc and (bad) jb mov xor ror sti inc xchg fmuls sbb push je mov inc shrb mov mov sbb in das test test and mov js movsl add sbb outsb pop into adc jno out sbb lods fld adc arpl jl insl cmp jne xchg int3 stos repnz in xchg lret pushf std cwtl or fdivl mov jg mov push pop sbb fild and repnz sbb daa (bad) lret adc icebp (bad) lods fnop stos stos adc mov dec or push jns mov jp inc icebp jnp cmp mov test sbb and (bad) jae stos fcomps jmp stos lahf lahf fdivrs or jno or cltd sub or fbstp fdivs mov add mov lahf xor mov push mov int3 lds idivl iret mov addr16 cmp sub sub push roll out pop pop sarb loop (bad) lret mov lahf and fcoms xchg add cmp mov out push or or inc hlt dec (bad) cs arpl enter sub aaa test pop test xor incb lret mov jo or adc mov sti fnstenv out mov push inc inc loop adc dec jg lds out jmp loope mov aas mov push arpl test movsl scas xchg xor imul mov shl adc test xchg pop push mov in movsl push sti inc or movsb dec inc rcrb push add xchg pop or push pop push xchg ret mov ljmp sub mov outsb out xchg jg sbb pop pop js jle fxch dec pop cltd test jle mov test cld xchg aaa lret sbb add pop or rcl mov stc pop pop (bad) cmp or pop pusha cmp mov lahf pop iret orl inc adc push xchg sub int3 shlb or xor cmp xlat mov cld in subl in or cld adc adc mov aaa dec dec popa or bound imulb fnstenv xchg xor ljmp loop fisttpl je ret ret push mov dec xor and mov inc jge mov pusha or lea xchg lea les or and into (bad) std and mov push mov popa stc sbb cmc out nop in test cwtl test dec call imul aad or faddl and aam test add movsl or push call add mov inc dec decb (bad) fstpt cltd xor popa pop push xor jne out fnstcw sub xor repnz sub cli cli imulb mov sbb dec or cmpsl scas xor and mov adc sub fstps xorl ja mov jo andl cmpsb bound js rol cmpsb sti insl dec mov sbb and mov mov mov flds ficoml addr16 data16 mov inc mov outsl cmp je fdivrs xor mov ljmp ficom mov jno adc push pop js lock xchg cs test jmp mov out (bad) outsl jns cmp ret outsl inc shll push inc fs inc adc cmpsl out push lods mov stos or fs jne xor jne lahf xor dec insb mov mull jbe ret loop test jno lret mov cs jns outsb ss outsb push and pop pop push or outsb pop mov sub (bad) dec mov jne push stos xor loopne aaa mov mov popa mov dec pop fs ja sbb xchg (bad) in push cmc push push rolb adc push add mov pop add addr16 adc fildll test push xchg inc (bad) jp je aas sbb and aas and adc xlat lods test dec dec or aaa and and and inc xor cld ret out (bad) xor xchg cmc jl movsb ss jnp cmp cli dec lods cmpsl push pop inc loopne scas push sbb test sbb sbb inc sarb and imulb jb ret iret (bad) adc std mov (bad) mov lcall mov pop es (bad) sbb mov in movsl lret mov movsl and and rclb mov mov iret imul mov cltd test (bad) mov xlat gs rorl pop pop lock std inc inc scas push lods push std jns mov xchg pop neg xor out jl cmp daa (bad) fisttpl jb arpl aam sbb xchg testb xchg push scas popa loop inc int fucomip jbe icebp sub das loopne popa push xor sbb xchg (bad) or das and (bad) jb xchg loopne add jge into sub mov (bad) das cmp push sbb cmp fcmovbe (bad) adc cmpsb xor inc mov xchg (bad) mov aas inc mov xchg jnp pop push mov std dec jp xor cmp push ror nop push xchg or or aam inc sub xchg mov mov insl xchg push xor outsb cmpsb cmp adc mov pop test pop mov push push push push stos movsb jae pop test lock push push pop jnp mov out xchg lods xchg sbb xchg pop mov inc mov xor fnstenv mov call cli xchg popf mov vmread mov fstl leave inc xlat in (bad) cmp popf cwtl sbb loop add push pop dec xchg int3 push movsl xchg inc mov sub xor (bad) mov cmp push pop dec xchg jb mov jecxz xchg stc and fdivrs lahf repz or out mov inc lcall jecxz and sub sbbb andl xchg nop add add les aas cmpl int mov js dec (bad) or daa jne mov hlt push inc push fwait dec test (bad) adc mov test lods dec or aas pop dec mov and cmc adc mov cwtl addr16 movsb cmc (bad) hlt cmc subb or fbld addl jnp movsl insb pop jp cltd mov push leave movsb dec and push pop inc leave xor dec enter adc lea in dec jne mov sbb push nop iret pop jne out xchg lret ret cld sbb (bad) nop lcall xor cltd jge ret jecxz jge or lcall or lahf jmp add (bad) in sarb cmpsb dec into lret sti cmp aas or stc les push lea mov jl cs fldl push stc loopne jp jecxz aad jge cs mov dec out inc push xchg in xorl lret scas or je push rolb fs jecxz mov rcrb pop sbb pop xchg mov xor dec dec and mov adc pop fildl xchg mov xchg or lret mov cmpsb adc dec inc movsb inc aas sarl ret popf push sbb mov loop daa loop (bad) lods adc cmp fwait je ficoml add adc add cmpsl (bad) adc subl enter jo add movsb sbb jmp rorl sbb sarb in rdpmc sahf pop and jne sub mov dec lds mov (bad) jmp sub mov mov inc xor or push push scas xchg imul cmp pop popf adc jecxz xchg add add in mov mov stos push adc dec clc sbb sub jp cmpsl js (bad) bound mov sarl xor pop les lret cs adc in out (bad) nop mov push jle les aam push mov xor xlat int mov xor inc mov adc xlat stos mov mov out lret mov mov or mov imull fist out aas ret sahf xchg jne and add mov in push jmp ljmp or mov cld and xchg or ret fsts (bad) fisubr out pusha cmp mov fsubs or pop pushf fcompl xor (bad) pop data16 jmp fildll dec scas mov xlat or notb movsl in inc in jmp bound (bad) (bad) hlt adc out es push repnz outsl sub flds add jns outsb clc arpl lea mov xor mov mov push and lock mov pcmpeqd test inc dec daa cli mov test push xlat cmp clc clc nop sbb cmp push push bnd rorb in adc adc inc dec pop push je push cld mov repz aad mov xchg mov push push inc (bad) loope xchg adc dec cwtl scas dec inc mov aas and xorl pop dec xchg jle cmp cvttps2pi cmp jmp rolb sbb in push pop mov lahf es xor cmp sub insl repnz hlt fistpl dec push cli dec jb and mov sbb test int outsb icebp ljmp xchg push push in sbbl sub (bad) fidivr mov lock (bad) pop outsb sub pop adc in pop movsl cmp (bad) dec sbb out push dec xchg mov pop and rol pusha mov clc cmp mov out div mov imulb cli and mov pop pop repnz addr16 std fldenv xor cmpl add cmpsl loop sub and sbb xor xor fisubrl jbe cmpsb dec ja mov mov bound cltd sbb adc mov pop xchg les xchg add pop sub js imulb add arpl mov mov rorb pop add outsb lods sbb inc arpl imul ds push popf add clc xchg arpl xlat (bad) or xchg pop xorl mov pushf and pop adcl jns rorb pop jbe addr16 adc dec or sbb in dec icebp mov pop lods cmp jne push mov pop or sub cmp fwait mov sub mov sbbl mov sub es mov add mov or clts or xchg inc cmc add stos (bad) mov inc add add push scas add mov cli mov xor nop mov add cli xchg fistl cmp cmp out add imul out xchg lds mov sub xor (bad) add cmp sbb mov dec les dec fs inc sub dec out in jp std aaa xchg pop pushf fwait push (bad) into sbb call mov jno in mov std mov pop pop push arpl xchg in aas lret mov mov out lret cltd adc lods repz sub pop lret mov inc ja loope jp mov xchg insl pop adc sub rcll sbb add jo movsl jne movsb lods rcrb push push ret lea dec lds repz add sbb cmc jo (bad) stc scas (bad) sarb hlt in enter mov loope rorl or std adc aam gs xchg (bad) jge push xchg (bad) push inc mov leave mov cmpsl arpl ja popf pop pop popa repnz in movsl jp sysexit push ljmp lock test cmp mov dec aad movsb cmpsb pop mov push lods imul movzbl dec cmp jecxz cs fisttpll xor es das inc repnz shll test xchg fidivl push inc out inc adc xchg pop (bad) sub loop and mov or mov jge arpl fcoml nop mov insl cmp inc pop push and push out ja mov pop inc outsl stos mov cmc fsubl inc pop jge clc (bad) and in into mov cltd mov push xchg aas jns icebp fdivr outsl jmp jbe rorb cmp lods pop out ficoml xor imul cmp shll or dec lods sub jno dec adc lods jns test adc push xor out mov lods xor das cmc mov mull lret and aad pop jae push adc rep jg jne mov mov xor hlt jnp and push jae addl inc push cs cmp test or xlat sbb out out or loopne enter jne lret add sub mov bound pop es sub adc xor insb mov jns int pop mov sti xor jmp mov mov dec out cmp jl test enter mov jmp xchg lret rolb repz fsubrs inc sbb je mov adc orb mov sti and test lods arpl jle xor movsl lret lret add pop and and aaa sbb stc pop xor mov or xor in (bad) cmc sub add mov rcl mov repz aaa repz jnp mov jne popf adc aad push sti sbb leave mov movsl push (bad) xor jmp sti sahf or adc fbstp nop in data16 mov xchg push js xor sbb and xchg mov lods cld test mov lock insl das push mov popa (bad) xchg xchg xchg cltd sbb add ret jnp aad and jmp add insl arpl jl rolb mov les imul dec xor test (bad) lahf scas mov insb faddl aas mov xor pop nop in hlt sub (bad) fiadd jb cmpsb cmp outsb dec adc jb push pop or mov cmp (bad) lret dec lahf lahf fwait mov dec std cmpsb test push scas insb or sahf (bad) repz loopne mov lds xchg push rorb add bound mov sub or mov out mov jns pusha xor push cli std ret (bad) repz rdmsr cmpb ljmp xchg int3 and scas jb mov cmpsb or sub pop xor jnp add je inc xchg mov pusha or enter sub push sub lret pop jb or call insl push sub lahf pop pop push push add push pop cli jecxz push xchg pusha mov aam fidivrl mov cld pop cs pop mov jbe cmc stos mov clc das repnz cmc (bad) adc pop push mov sub test stos mov daa inc push in ret int3 outsb push fsts xchg sbb jg and lcall ficoml cmp movsb fidivr xchg push add movsb sub dec arpl (bad) popf (bad) sub sub pusha (bad) loope ds outsl cld cmp mov dec sub ret pop cmp mov dec addr16 push sbb or jp test mov mov sub jb push mov inc adc ss sub cmp add jns and mov (bad) in ds mov mov jno and mov push loope inc imul cmp jmp adc sbb clc push cmc call mov je mov mov insb int (bad) int mov add mov lea sti out lock and aaa neg xchg inc sbb mull insb fstl iret (bad) loop mov xchg push popf and xor mov aas mov mov mov push test daa push (bad) xchg cmc aam and jge jmp xor je or cmp mov jb subl ljmp sbbb aaa jle outsb ficompl ret les mov stos mov repz mov xor push outsl or mov xor xor sbb jnp decl mov pop sub inc sub jae in jge push imul jo mov sub (bad) adc popa pop icebp cmp lret rcr xchg inc es xchg test fsubrs test xor sub fidivrl lret cmc cmp push sti xchg scas jge dec xor shr adc push fstpt adc mov (bad) add shlb pop pop fcompl pop iret or cltd cli fadd arpl imul sbb das jae je add imul adc inc out ret mov xor xchg jle call je push mov mov aaa pop movsl add pop mov mov repnz pop cli repnz xchg cmp and fdivrl xor xor sub addb stc insl or movsb jmp dec gs or sub popa push pusha out pop mov mov add push inc imul dec mov mov out dec imul outsb nop cmp sub movsb xor pop push push and jnp test stos loope mov sub jae (bad) mov mov sbb arpl pop nop mov (bad) loopne imul aaa inc rorl fcomps jbe aas and cmp dec icebp (bad) cmc sahf mov mov add xchg cmp mov push loop push int3 jnp fdivrs adc xchg cwtl pop fdivs sbb inc jge mov pop imul fiaddl adcl mov jl mov ret fucom into leave dec clc ja stos out cmp xor test pop mov push and cwtl ror cmpsb cli mov cmp fadds jg pusha cmc jbe je pusha mov dec sbb or into in jecxz push mulb (bad) mov jecxz mov repz add mov pop out jg push adc sub popf cli stos dec xchg ret mov aad or imul (bad) mov in fmull xor aaa jns divb mov push push push in repnz mov jle mov les push test mov sub jns inc ss loopne mov dec cwtl out add cltd nop test mov bound add out rorl fimul imul lahf fmuls sysret pop cwtl cmp jg xchg jle xchg loopne icebp jo rcll lds jo lret in lds xchg xchg sub or add push loope mov fs add and adc xchg in dec (bad) insb (bad) xor stos fucomip sbb loopne test enter or lea testl cmc leave push jp jne jg xchg mov fildll pop mov jmp jg mov lret aaa rclb pop sub mov xor or ss std lods out jns xchg mov sub add (bad) xchg das pop clc jbe dec jbe js inc jecxz inc scas cld imul aam push fist div insl or ret and test xchg dec dec inc lea xchg ja mov popa pushf jns imul xchg mov aaa sbb popa ret jp sbb sub xchg push cmp sbb fmuls das sarb adc or mulb aas cld sub movsb lret mov rolb add sbb jo sbb les stc es ljmp cmp jp,pn test nop (bad) xchg xchg popw pushf rcl mov daa popa jge ljmp mov orl orl enter lods roll xchg icebp push or mov push cmc mov lret xchg or incb (bad) mov push inc leave jb push aas gs sbb push cmpb or (bad) jg data16 mov clc mov out jmp sbb int3 dec negl test mov sarb or pop cmc daa and ss pop imul sbb push cmp clc repnz (bad) stos push (bad) pop sbb stc leave cmp or xchg mov or pop sub ficom fadd mov mov sub ss sub fwait es dec ret loopne inc es jno mov test dec into jl push mov jl rcr arpl das xor or repnz loopne lods fcom pop sub pop aam test mov inc sbb lcall push and bnd adc fistl push pushf xor enter jge inc rep sub ret adcb (bad) loopne inc xor je jecxz gs cmp cld int3 data16 add sbb stos scas lds add insl lea cmp das lahf out cmp shl cmp ds jl push ret mov stos in pop (bad) incl ljmp pop and in frstor out mov xchg out push pop xchg iret jle stos nop sub jne jae inc jp push dec push pop or push movsb dec addr16 lods cmpl cmpsb loopne lods loop outsb pop jnp in enter sbb add pop mov adc ljmp xor jnp mov out insb sbb xchg or and lods push xchg jl dec jns js sbb pop es push insb dec das (bad) sub aad jnp insl inc fistl jne push out jbe inc or cs xor lock push insl mov and inc and mov mov scas sbb xor xchg testl (bad) jecxz faddl cmp jbe (bad) scas push adc or in stc ja in fcoml push sbb fmull cli fnstenv inc jne (bad) jmp xchg jl lods or xchg jae mov adc fwait mov or jo inc jmp jge scas gs jns jmp (bad) negb sub in call insb out push aad jecxz iret scas jl or fcmove shrb out sub out mov paddq pop jg push nop xchg int3 xor cmp jbe jb icebp xor push outsl push outsb add or cmp or xchg cmc inc jns mov mov xlat pop and das inc mov ficoml push stc repz nop cmp inc fmul inc dec (bad) xchg imul sbb pop jne fmulp jp mov aaa xor stc xchg and inc cld mov dec inc dec (bad) cmc orb in lahf jecxz adc pusha sub ret std ljmp add loop test pop xor fs jns mov nop push mov lcall hlt test test dec cmpsl mov cmp cmp ds pop pop stc cmpsb clc and in inc push bound imul xchg fwait outsb (bad) jb neg popf push xchg test movsl mov fiadd sbb xorl xchg mov xor fdivr nop sub lods int3 stc mov cmpsl mov les nop ret sbb add out divl leave xchg mulb sub add dec aas jp inc imul cmp stc das andl add dec sti jecxz lret (bad) or mov sar xchg inc or push pop and cmpsb repnz aas mov mov sub pop inc std enter sbbb nop int3 mov test test loopne push cli stos scas inc rcrb mov std mov pop insb jno dec (bad) cmc fsubr out push xor add inc loope bound or mov (bad) jns cs inc sbb jp pop and outsl mov int3 inc sti cmc dec sub mov jle shlb cmpl cwtl jg aam pushw push add in dec in movsl (bad) xlat mov xchg testl cwtl (bad) pop aad gs mov (bad) and andb addr16 lret stos sbb pop mov xchg dec cmp andl sbb out test repnz inc es lods enter dec dec xchg xchg int add xchg inc rcrb ss push jnp mov mov push add aam mov jb (bad) rcrl or xchg sbb mov icebp (bad) dec aam in ljmp xchg mov mov loop into fucom push dec mov insb xor ficoml sar sub sti outsb ss rcl test xchg xor aam sarl (bad) lret push mov jne jne mov mov xchg sbb fisttpll mov andb or jne push inc sub adc jmp push cmp add adc out pop cmc adc cmp sarl imul sub aam mov sub xor test pop jmp xchg cmc cltd (bad) test add jmp dec add push mov loop adc mov mov loop out jg aam inc xchg cmp mov inc imul shl outsb aas or pop adc rclb pop mov mov pop leave shrb (bad) xor push adc call mov pusha test mov (bad) imul jmp das adc dec mov or dec (bad) rcll dec cmp in or push mov dec (bad) jo sub jle les xchg pop jp sbb nop dec or adc mov ds sub inc mov push mov adc cmp xchg mov adc mov js pop jg and scas mov pop and in push es cmp pop inc pop ljmp aad pop cmp ljmp popa add inc incb sub and ret cmpsb adcl pop loopne xor into adc fsubr mov ljmp scas jns les mov mov hlt and pop fwait hlt cld pop (bad) cltd lahf lods add sub mov je gs xchg or jecxz lods daa adc mov dec add pop pop sub jecxz pop out mov pop and (bad) sar push add push cmp push leave arpl push les cmpsb xchg inc pop iret adcl jbe jp push stos icebp or dec dec push dec push mul xlat mov outsb incb jb add rorl mov ficomp rorb jne xor enter insb out sbb and jbe aas pop out xchg cmpsl mov (bad) cmc cld cwtl (bad) and mov jmp pushf into fnstsw (bad) mov out sbbb pop popf and mov lods xlat mov jmp lds adc rorb movl sub bound aaa dec xchg sub cmp fldln2 lret aaa xor stos dec sahf push (bad) cmp ficomp cmp shr ds push outsl jne pushf add int3 fildll (bad) mov into xor inc jge or cld rorl ret rcl test push xlat add xchg mov inc call bound (bad) (bad) pop push fcomip sub jp pop cmpsl push cmp sub add pop xchg test iret pop mov mov bound adc aas push loop fcoml clc cmp aad and in outsl jnp add push cmp hlt push push into push std addr16 mov cmp aaa rorb fnstsw pop jmp test xor movsl mov dec jne lahf adc add cli and lret mov aaa fcmovnbe test push push jo pop call add xchg test shlb roll jle dec leave sub mov xor or std sti (bad) sbb call mov push outsb or jp out movsl fcmovnb in push jle mov pushf cmp pop xchg mov jo dec pop mov push dec les mov addr16 cli mov movl aas jbe ja je pop aad mov push push outsb mov mov sbb mov lret movsb repz cmpsb jg push fsubrs mov test faddp sub pop lcall adc cmp lahf lret pop int3 cld xor inc fstsw in (bad) or or and int dec jge jb pusha xor sub aam xchg aaa in std add insb mov js imul clc repnz jp cltd xor add push or imul push or test or icebp aad push out dec inc or xor adc add enter inc add mov jle jb jo fwait pop stos into xchg jge cld xor mov adc pop cmpl sbb inc sub mov jmp cld inc or inc movsb and xor (bad) jns lahf pop jle jbe xor (bad) fildll ss lock push and pop (bad) (bad) adc cli stos mov data16 adc inc pop and dec mov push fisttpll fcompl cmp loop test daa ljmp shrl nop mov lret shr dec or out lret (bad) ja ret fsub sbb inc or ret sub ds sti (bad) and movsl xchg fwait push repz mov xor outsb and lds push hlt jne jnp in clc les adc jne sarb fdivr dec mov sbb pop call xchg bound or mov insl in mov xchg aam xchg dec and dec bound mov jmp mov in scas add imul dec pop lcall and push scas fdivs pop mov pushf lcall jg push jne dec xor mov xchg ljmp mov add add mov xchg add xabort cmp lods mov jne mov add xchg roll xchg fnstsw jg paddsb into arpl xchg pop inc sti popa loop push mov inc aas or in fidivr fmuls in add into test ret movsl cmp add cmp aam and out xchg mov std (bad) stos mov mov xchg push cld xchg ja push adc jge (bad) pop cmp inc add in or jo insb fwait imul push (bad) arpl mov lret sbb ljmp sub xchg mov jne pop xor xchg xchg or xchg pop mov roll mov mov or or and pop push xor out fidivrl xlat xchg sahf inc jg xor adc xchg inc xchg cmp test sbb lea daa and push iret dec insb sbb jb cmc lea mov mov (bad) popa adc pushf decl popf cli jp sub or pop lea push xchg xchg and sub cmpsl sbb adc repz push mov or xor push dec loope mov sub inc cwtl cmpb fldt mov icebp mov or cmp (bad) jmp daa push dec pop push push xor in cmpsl cmp sub push add frstor sbb (bad) (bad) adc negb iret test xor lahf xchg in (bad) loope pop push sub repnz ret inc andl cmc lds mov cmpsb popf add xchg ja jne mov lahf sbb (bad) adc lret faddl out jne cmp push sti pop add sahf inc addr16 jne popa jmp mov popf cmp movsb jmp arpl fisubl sbb aad mov jg out ljmp push inc push sub push mov ret mov aaa xchg pop jns and push push sbb repnz cmp pop repnz shr (bad) or jne lret cld test or lods and mov inc mov clc mov (bad) push jmp cld incb outsl loopnew jecxz inc ljmp cld outsl adc inc (bad) mov push (bad) fucomp mov insl mov insb loopne shr fild xor sbb out test in rcrb xchg das mov xchg mov push ret mov or ds dec jecxz mov lcall outsl sub fnstcw or mov andl mov arpl jo cmpsl dec loop jnp xchg mov add jo mov test mov int3 add inc pop sar add mov inc aad cmp push imul pushf (bad) lret (bad) pop mov outsb rorb gs sbb xor out mov jmp cmp and rcrb lock sub (bad) jmp mov sbb aad test lahf ds sbb scas pop adcl inc or xchg sarl jmp pop mov rorl lcall andl repnz shr popf inc lret or push pop scas push lret push adcl movsl push sti and fisttpl dec ss fsubs mov std icebp roll mov jae mov cmc aas or leave push out xchg faddl in insb lods out rcll bsf xor cmp ret or js imul ficom sbb fbld cli fldenv lods lock fs cmp popa aad loope fimul aas in pop imul loop sub xchg inc or imull pop in adc movd aad mov fiadd mov sbb mov fwait mov xchg lea (bad) in cwtl insl (bad) mov cwtl insb sbb das cmpsl xor add dec (bad) cltd jp test jge jmp pop rorb cwtl inc int lods popa inc pop inc mov push mov out pop mov fs push repnz mov push pushaw cld pop pop dec and outsb fstp or repnz add mov dec push jmp cmp inc sub daa mov mov rol add and xlat sti loop and mov sub out add and pop test cmc jecxz mov or (bad) aam xchg movsb mov sti push sbb insl insb fsubr pop mov sub ficom inc andl test mov add pop sub cli lea cmp cld or mov jecxz shrb dec test stc hlt fisub jb repnz (bad) rep mov out test fildl xor ret leave pop xchg lea jns pop pop dec push add mov mov xor movb (bad) hlt sti mov pop cmp loope jle je lds sub lock fbstp je scas fucomi adcb (bad) loop adc pop les mov add jbe cmp jp xchg lcall mov pop or adc mov push lea push cmpsb xor ret out xor imul sbb ja loop pusha dec notb (bad) aaa mov fwait nop in pop hlt lret mov in mov pop push fiadd or fistl pop inc ffree aaa cmp sub inc arpl out sbb mov xor ljmp lret mov pop cmp ja mov outsl push pop dec cmc rcrl xchg pop arpl repz jb mov ja ja gs rol adc pop gs pusha ficomp nop movsl push push xchg mov dec fldl sbb or dec cltd inc fmull iret in sbb inc lahf mov fildl xchg scas pop movsl int or inc mov imul jmp repz adc popf rclb ds sahf std push mov cmc xorl aad add sub sbb popa sbb xchg outsl imulb lods or push sti cmp sbb arpl and fcomip in imul outsb pushf mov or fisubr ljmp xor gs pushf mov xor cmp mov std push jle les ss das jne mov ss (bad) mov mov xor xchg dec xor adc or push aaa and mov mov xor jne jg iret rorl sub stc mov repnz cmp inc addr16 add dec ljmp lcall fistl arpl push and lds inc and icebp repnz iret bound push cwtl fnsave imul jge jmp cs hlt lds int inc inc fisubrl adc clc add adc adc dec sub fs mov imul adc mov ret adc mov jge xor dec roll adc and repz add push scas je mov arpl and mov enter jno sub aam and scas and insb push cwtl repz into sub mov cs out icebp and cli das inc pop cmp divl jecxz jne lahf mov xor test test cmc aam and pusha mov pop push jge add sti xor gs push cmp adc pop in jb,pn ljmp add leave movzbl inc jne pop sbb push dec pushf mov ljmp outsb les mov add cwtl lds pop popa jbe mov mov pop fisttp loopne push out outsl popa mov adc and sub xor outsl test lahf mull inc ljmp sti pop cmpsl sub cmp sub repnz addr16 ret pop pop cmp repz push pop loopne mov xchg arpl lock in sbbl (bad) daa xchg or add loopne ss xor (bad) clc hlt push mov mov sub or mov xchg jo xor inc ja aas aaa inc fdivrs dec push lret xchg cmp mov test pushf add stos pop add mov sub aad scas xlat out push cmp dec mov mov out sub or decb jo ds pop mov jp and das add or xor xchg test les add shll inc jmp cwtl dec push mov jns divl jb add pop stos and cltd or or pop pop arpl aad mov add pop adc inc mov clc outsb ret repz push xor clc xchg and popf xchg jmp mov adc not pushf pop lcall inc mov dec cmp sub push mov xor dec cwtl adc mov xchg pop xchg cmpsb sahf xchg (bad) test lahf ja dec xchg inc inc repz xchg xor add jp rolb scas jbe lock jge (bad) cmp movsb pop xor mov aas fnstenv subb pop imul inc adc les imul xor inc inc xor lock add cmc xor ljmp fsts inc mov fnstsw jp push cmovl jmp hlt fmul gs add (bad) ss lcall int xchg imul mov add js and mov js hlt fidivr jp push lods xchg jae push movsb xor dec push mov pusha imul outsb or repnz subb adc fimull aam out xchg pushf aaa pop or jl andb mov (bad) xchg and cmc imul idivb out adc sub sub fstl jmp pop test movsl sub loop xor pop aaa ficompl xlat fsubrs les and movsb mov je in in jae daa stos nop test mov enter mov mov push lods or add push lock adc ret loopne xor xchg xor jmp dec jl scas mov inc jl push and rcrb add daa cmp pop loope pop flds jbe adc sub jecxz lret std test push daa lock out test sub xlat dec cmp repz mov adc or out add xchg dec push pusha mov stc in sahf cwtl popf ret jle sub ret mov dec dec stos pushf mov push lea jno sbb aas imul or js pop popa mov sub in daa iret loopne xor mov mov jg lea dec out push (bad) lcall arpl faddl xor ss stos test lret imul out int pop cs leave movsb paddw scas mov and out cmc rcrb push test (bad) push inc leave test or (bad) (bad) dec xchg sub pop stos jo,pt add mov mov inc inc test inc mov mov mov jns pop dec out add sbb sub xor stos or ficomp fiaddl shr cmpsb fldl mov mov mov push inc pusha sbb adc ss push push shrb insw jns dec inc mov and or imul mov mov xor xor jl sub jo popf push mov jmp mov xchg inc adc jp dec sbbl lods pushf adc out xor xor sysexit xor add pop jp shlb inc dec leave mov (bad) std sarb xchg cmpsb mov orb mov stc (bad) jae nop pop es xorl inc das adc lea jmp hlt cmp out add (bad) pushw jbe fcmovb imul rolb add rorb rcll lret sbb jg test push enter (bad) or lahf cli sub ret xchg lahf jge add in shrb rcll jecxz jo notl int3 push mov sbb push test popf std out jae jnp jnp xchg sub lret mov pop mov nop lods sub (bad) int mov in and jnp scas mov das out std in loope dec and dec addr16 jno fwait pop lock sti and out pusha adc sbb out je jl sbb leave sbb je mov fcompl sub in pop inc push pop pop popf rcll push adc cs adc xchg adcl mov cmp pop inc mov jl inc sbb push push inc (bad) sbb xchg mov lret imul inc lret xor lret scas xchg sti insb (bad) dec test out jns cltd and fwait imul fs xchg lret pop scas jp lock mov mov into lcall dec mov mov hlt xchg adc shrl insb jp enter push jb inc cmp inc rcl or andb xor dec fidivl mov add sahf push xchg ffreep out (bad) (bad) out addl loopne clc and mov (bad) icebp test dec sbb std xor (bad) lahf icebp mov out mov adc loopne in das mov fidivr cli pop dec adc pop add aas out (bad) nop fsubp out lods inc aas daa ds adc rclb mov sti xor xor lret cltd (bad) fmull pop lds pushf jecxz or xchg mov arpl mov pop lods inc fadds dec imul mov xor (bad) fucom add push fs jle mov adc je addb xor rcrb lods outsb sub dec fsubrl je clc and push adc test test dec mov hlt repz lret pop xchg sbb lods mov mov xchg stc cmpsb mov data16 mov mov jne in out sub fidivl mov out inc jmp cmp xchg pop sbb rcr xchg in push aad jg adc and lahf xlat jle lret aas leave ljmp and cltd test mov jns jmp stc cwtl mov loope push in pop ja push ljmp mov adc cli dec xchg sbb repnz push pop pop adc sub mov std test pop mov cmc xorl lock int3 fsubrp pop (bad) jmp popl or rcrl iret les aaa inc sub in leave (bad) jb testl push jnp out lods sbb stos sub ljmp sub mov adc daa into fs rorb out movsb jp sub imul fsubrs pusha adc adcl lea shlb (bad) add cld push pop and mov clc jnp lahf fsub int mov loope popa mov repnz push insb fwait mov (bad) ja inc sbbb ret test sub ljmp das jae sub enter sahf adc fst negl xor sbb add and je std (bad) adc loopne add jmp outsb daa and or lods lret mov xor dec cmpsb aas movsl xchg xchg test push ljmp pop ds push pop das rcl mov fcomps xchg stos fiadd in push jle clc cli cmp (bad) enter mov xchg adc sub or test lcall (bad) movsb adc (bad) jnp outsb repnz pop inc rol je push jge inc loopne imul mov xor outsl and dec pop nop xor lea scas mov insl inc stc fildl divb sbb in js mov inc lds pop inc rcll ss aas jo jmp jbe jno ljmp mov mov cmc pop sbb and dec add nop and das call cld ret arpl push imul mov fimull mov nop ljmp movb rcll sub push cmpsl fcomp sar add xlat fwait test repz (bad) pop cmc add mov inc outsb or fldt mov das or insl aad inc nopl jo push and xor aaa pop fbstp cmc and and sbb arpl and xorl fcmovnu adcl test mov andb fimul lret stos sahf hlt outsl cmp jge shll dec (bad) aas or lcall lods jmp xor std test add jge cmp in or mov jno push jg movsl (bad) jbe jo cmp lret jo mov (bad) dec shll cmp rcl push sarl push dec and scas push test les jns mov jp in dec and mov mov ror (bad) icebp pop test aaa (bad) je dec or adc mov aad push dec mov ja loope pushf in mov cld fadds movsl dec lock subb sti mov add insl adc pop inc jmp cli add jmp popa adc popa xchg mov rcll std and cs movb cmp stc pop imul (bad) adc outsl stos outsb lcall push push sub jne les jne sub jmp or pop fidivr loopne sub mul sub stc in xchg jmp jne mov cltd mov push jmp sub inc lds divl or inc bswap push adc aas xchg int ret mov lock mov ljmp mov mov and in and jp in rorl btc fsubr lcall je sbb cmp inc xchg add call (bad) mov push adc sbb pop sub ss xlat fsubrs mov roll popfw cmp ret inc cmpsb xor cli jle pop xor xchg cmp lea sbb push mov pop add fwait scas jbe and sub lret pusha gs xchg add sub arpl sub in xchg inc das rol xchg cmpsb push enter adc cli pop push ret cld dec jno xchg jge iret mov pop pushf je adc sub nop aas jo pop xchg shl inc xchg push adc popf cmpsl adc adc jge (bad) xor lret cltd insb movsb std push pusha jbe mov pop into mov xor mov push mov cmpsl jmp sub rolb dec or cld jge pop (bad) jae or fs adcb jbe clc sti jecxz jno jae xlat sub ja idiv popf in (bad) pop jne sbb out bnd lock out and stos mov cwtl mov xor cmp test push xlat adc sbbl loop out mov sbb int jg popa loop mov cmpsl pop inc or (bad) sbb adc pusha lea or xor mov add add pop (bad) in or dec jecxz cmp inc cld dec shr mov cmpsl sbb fimull add stos dec in mov lds daa es movsb jge sbb cli adc mov (bad) sbbb insb ret jb in sub mov in add sar mov es mov mov test pop cmpsl mov xor stos xor xor and orb adc (bad) mov fdiv mov imul pusha mov sarb sti and pop aaa adc and lret loope and leave enter arpl add jp cmp loopne cmp lret or fidivr sub jne daa je push pop pop pop xchg cmpsl shr nop mov repnz lods cmp cmp lods pop arpl mov jp ficomp cmpsb jg sub bound mov (bad) call pop xor push sbb in sbb outsb cmpsl mov jp pop jecxz sahf addr16 or adc dec int3 jbe or ret mov addr16 lods xor mov mov cmp inc int movsl add test inc push pop inc dec dec and or dec lcall cld fdivrl jle in outsb in mov jnp test test cmp cmp jbe lds pop lret mov stos xchg or pop sbb jnp fistl jp sbb out mov and xor aas xor lret cmc into dec in inc stos sub icebp mov sub or lds inc (bad) into adc mov sti push dec add mov mov mov aad push std mov (bad) test mov pop push int3 push mov adc (bad) pop lock jbe push pop fdiv sbb in scas sahf aad sbb ss out xchg repz cli mov xchg mov and ds movsb jo cmpsb in add lds dec push cld sub jbe mov fimul fildl mov cmp mov add testb pushf pop fwait inc fsubr gs js ljmp sub ja xchg sub mov sbb cmp cli fldt add popf or and mov into sbb (bad) js xchg aam sbb dec or cmp lods fs adc bnd xor into or fstpl pushf dec sbb push ss scas adc inc adc aaa subl cli cmc test popf call and and mov imul pop and (bad) loope push push pop jp dec ljmp (bad) fdivl lret xchg inc adc hlt mov cmp pop jno iret ljmp xchg add je roll push xchg xchg xchg sub xlat rcll (bad) (bad) jmp ja lret and dec push aad jns sub pop stc popf mov xchg sahf mov leave movaps clc shlb and lds lods mov jge jns cmp data16 lret sbb mov dec aam and nop out mov nop and push std fs mov (bad) sbb xchg js ret adc or inc jmp adc das daa mov stc or in mov sub ljmp int3 sub fstpl adcl insb push mov in int3 in xchg insb push pop enter repz subb scas imul pop inc xor (bad) leave std mov test in mov xchg mov pop iret or dec movsl and mov push (bad) jne (bad) jecxz jg arpl loope xor pop mov pop jb jns mov inc mov xchg mov aas mov mov mov xor das jne popa popf mov into mov test sbb aaa jne fistl cmpsl inc les in dec lock lret push sub popa into cmp out inc sti lods jp mov les mov add popa add sti scas dec push lods dec cwtl pusha xor sbb cmp pop push ror mov and or jno in rcl dec das aas int3 stc in pop inc push ret mov clc repnz and fisubr outsl push lahf in fidivr dec sbb dec jge sar mov sbb dec push call test pop ljmp xor adc xchg addr16 movsb lret test push aas pop push movsb fadds cmp lods and mov gs int3 mov (bad) inc push scas mov inc hlt push aad jo (bad) jp rcrb mov push das pop stos lds repz popw push mov fisttp cwtl mov scas xchg (bad) out push adc shrb xchg loop lcall cmp jg (bad) not mov sbb xor add daa out add mov jae je mov push adc mov arpl call xor add aad aaa mov sub sti test testl ret jb outsb call xchg jge pop inc sub dec xor je cmpsb loopne das mov icebp fsubrl subl cmp roll addr16 icebp repnz inc add sub shlb jecxz or outsl sbb int pushf arpl pusha sbb fisub fxam and xor dec cmp push sub (bad) pop aaa pop mov cld jge fs push xor movsl cwtl mov (bad) xchg test stos aaa jmp mov data16 leave dec xchg cmpsl lret das cwtl insl test pop lea or jle fstpl mov adc or sub cwtl adc and lahf negb dec (bad) push inc pop jl add dec loope mov idiv test lcall incb test push movsl dec out dec or ficom sub sbb orl lods es loope nop mov mov push inc cmpsb ljmp add cmp push add aad inc mov pop pop add ss and addr16 (bad) and (bad) cld mov xchg scas scas aam clc and lods cld aaa ljmp data16 pop mov add (bad) movsb xor scas adc push inc aas mov sbb roll jne (bad) xor adc mov repz push rcr cmpl cmp std sub (bad) xor dec sub je stc adc push mov lods clc lock out test rclb std ljmp call imul popa lock dec inc pusha push mov loope (bad) pop mov daa jge adc or sbb repnz ja mov mov mov sub sub imul pushf rep adc lea and (bad) test pop test adc push test inc (bad) hlt mov or and dec xor mov fwait dec lahf iret add nop (bad) lock cmpsb jo xor pop pop cmpsl js jne xchg jnp ret push dec rcr inc stos mov movsb stos mov fdivl call sahf or xor mov cmp push sahf cwtl mov add mov popa xchg push xor stos and in mov nop js mov push out leave imul pop pop jmp jmp dec cmp pop fildl mov (bad) daa inc or sub (bad) imul ss cld or inc cs data16 dec or push or xchg (bad) push repz lcall inc adc icebp mulb push xchg sub push jg mov lret ret lds int3 sbb add dec jne gs cmp xchg in adc sub xor pop xor and mov ljmp adc xchg xlat clc xchg jo notb in add adc imul cs sti push pop sbb xchg in xchg sbb mov cmp pop mov and out adc fmul dec enter push ficom xchg mov mov push (bad) mov mov xchg pop cli inc lods divb inc adc lret jp jb push sahf decb cmp push add cmpsb jbe loopne lahf ljmp push xchg push pop push ds int ret mov mov cld pushf mov into loopne aas pop dec lcall fisubrl shrl stc ret push cmp pop gs (bad) add xchg out pushf in sub lods sti cmpsb pop sbb hlt xchg push pop loop loopne into add (bad) push insl dec mov fistl sub pop lods pusha stc aaa cmc add cwtl fisttpll aaa fildll xor jp fldl (bad) fucomip jae dec mov aad xchg mov outsb aaa int scas loop loope mov nop ds sahf cmp cmpsl jp add aaa lret xchg enter pop fimull inc fnsave pop and push bnd movsl jbe sarb jge lahf imul les rolb das cmp sub mov in add pop mov add repz dec mov je pop add inc cmp push dec add ret adc out inc stos mov jl jecxz and aaa xor push cmp lcall sbb std test in pop shl insl sbb xor movsl xchg xor or sbb jmp lret fildl adc into xorl jno pop notl mov xlat or inc jns or scas mov fsubrs pop push repz push xor xchg mov mov ret dec lods fsts cmp adc adc cmp push lock leave inc push mov std pop mov out mov jnp test into iret stos (bad) arpl mov dec les push ljmp sbb in frndint lret fwait int in sub and aaa stc jecxz pop gs dec imul dec jnp jmp mov inc out dec (bad) cmp sub and fist pop add add mul mov mov movl inc cltd icebp lods mov xor (bad) inc pop push xchg push cltd fistl add pop or jl push in arpl and xchg popf test ficompl sub mov sbbl repz pushw (bad) adc std xor mov or cmpl arpl rcl pop js lret psubusw sub xchg fldenv mov pop test fnsave test lods mov test cmp push jnp,pt pushf push push out stc and pop pop mov dec dec mov cmpsb mov lret rorb xchg sub sub pop icebp (bad) push xchg and rorb mov mov sahf xchg pushf std mov xchg mov jno rorl (bad) jae int cmpsb lds dec add and jp and call inc enter add mov lock adcl mov and dec ja pop dec dec idiv mov in leave pop and cld or xor sahf cmpl pushf mov cwtl cmp mov sbb dec and sahf push or fldcw cmp pop lea out push xchg sub ja sahf pop scas (bad) cli mov in insb js test das imul xor cmpsb sahf out scas in ljmp lcall jle mov xchg dec repnz jbe xchg mov or pop pop mov aad sbb andb pop dec sub out insl (bad) icebp lods push insl orb mov aas push sub test scas (bad) lock out or arpl jae cld mov ret popa (bad) lret sahf test (bad) jle mov pushf sub sub pop rorl cmp xchg adc int mov lret gs jnp xchg jle adc les aam mov arpl cmp sti fwait pop test add sub lahf mov sbb (bad) fidivr cli cs (bad) mov test or sahf adc mov ss data16 xchg mov ljmp dec loopne mov jecxz dec mov popl or xchg ljmp add inc int3 and js push imull fisttp repnz push into es std inc mov repz into insb sub hlt das xor jp jge push das jl icebp mov or mov xchg inc adc xor and sub cltd add call adc cli js loop (bad) int3 cltd in pop mov and inc cld sahf scas jno pusha sbb loope and cmp (bad) inc ljmp aas test clc outsl rcl add call jmp mov or xorl pop lcall adc mov sahf outsb cwtl aaa jl,pn jne das shlb cwtl add jle hlt cmpsb push aas jne cmp push mov push out cmp call mov movsl cltd jge mov xchg mov xor das jp pop fst nop xchg add je inc mov nop imul fsubp (bad) adc pop xchg sbb test insb pop adc or or mov add add popa ror les mov mov in xlat inc pmulhw scas inc sbb sub or hlt cli insb push mov fs sahf inc (bad) xchg xchg jne push pop jle inc mov sbb jg mov dec outsl imul jnp and mov sub rclb ror icebp inc pop dec sub js addr16 icebp in arpl add or pusha mov data16 mov xchg enter xlat mov push (bad) ja (bad) mov enter cmp cmpl sbb es mov mov repnz inc sbb xlat aam xchg sub lcall xor stos mov xchg jno popf mov ret stos sbb jns imul push insb adc (bad) and jg pop push lret imul fisubl xor fsubr sbb or aad jo sbb sub es sub dec sub mov shlb pop dec dec addr16 std leave mov inc imul imul mov mov pop add ljmp push cmp jecxz (bad) int call lock jb mov outsl jno andl pop inc negb xabort cmpl mov fldenv mov xchg ja fwait push inc mov mov sub js mov inc arpl dec adc push cmp aaa hlt aas mov pop dec icebp or jl pushf jge (bad) push sahf roll jg xchg jb cs mov pushf push jo dec cli or daa int3 pop inc cmpsl pushf das or sbb mov cmc ficompl mov sbb cmp mov rcll sub mov or out mov lock insb sysret rcrb iret insl outsb pop dec push mov int3 das and imul xor jg xchg lcall push sub movsb shr fisttp in data16 jle inc xchg jge fucomi mov dec push lahf xor lea andl jp cld pushf ret adc jl mov rorl dec in aad mov sti mov xor insb mov cmp arpl aam sti inc stc arpl push pop loope sti mov stos loop jae or movsl scas clc inc cmp lods sub aam addl dec mov das je rorb and push xchg mov les cld shrl add dec adc mov dec cmp addl sub and adc outsl push jmp mov loop mov jmp or xchg or inc or mov lock call in fdivs mov cmp es popf fidivl add push (bad) test dec cmpsl add jns cmp or movsb jg mov outsb add xor pop cmc int3 mov pop xchg xchg sbb insl lret inc andb daa push popf or lods and iret (bad) (bad) or sub xlat daa arpl sub pushf mov arpl cld push loopne push and and xchg xchg mov lea inc je loope data16 xchg sbb adc mov xor cli inc dec mov and sub dec sbb pop rcpps push int3 cmp (bad) mov std dec out fwait movsl dec xchg pop sub or mov lret movsb xchg sahf repz sub and cli xor scas pop imul cmp push xlat mov push imul inc cmpsb jno xor jmp cmp cmpsb shrb aas incl push push inc and sahf mov std jnp inc xorl (bad) in cmp out cmp ds cwtl pushf lcall adc xchg inc movsb cmp xor imul xor out imul sbb lret cmc inc or aas inc jns (bad) jnp mov pop cld sbb xor push (bad) adc add inc mov jbe jnp mov in mov out fwait pop jmp pop mov jo adc or int3 mov jne daa adc call sbb adc mov popl xchg (bad) sbb mov xlat imul push es mov rcrb jge mov jne call in pop cmpsl insl outsb inc push dec jmp std sub or cli jp cmp scas enter xchg arpl out insl inc or fimull stos cmp push mov pop pop push mov mov mov xor insl pop dec rorl push push int3 jmp (bad) loopne outsl fiadd xor push adc lahf and dec lcall cmpsb dec cmp push sub lret or and out xchg mov addr16 adc scas in (bad) dec and hlt arpl dec mov mov xchg add mov cmp in clc (bad) ret xchg xor jl mov hlt mov pop mov xchg cmp loopne sarl dec push push add dec hlt sbb leave inc cwtl cmpsb sub jle aaa out cmp (bad) cwtl test sbb mov stc and pop cmpsl (bad) ljmp arpl repnz sti xchg lcall cmp and outsb xor push scas add insb add das fincstp in psubsw and fnop movsb cmp mov cmpl repnz cli repz xor mov out jge xor mov pop mov jl fildll mov pop push pop adc lret mov subl mov lock imul rclb pushf ja pusha mov outsl int jno loope fsub call ljmp inc cmc rorb out aam jo inc in inc mov push adc dec mov dec (bad) je push cmpsl xor pusha xor out in cmc ss jb xchg decl mov popf inc dec mov inc xchg sahf mov pop idivb and jae pop mov fsts jecxz sbb pusha lret dec jg shlb add dec sub pop lods push pop adc repz pop xor and xchg cli in sti jae pop into test fisttpll push movsl mov xor dec push mov out xchg xchg pop loopne mov stos dec out cmp cmp add repz (bad) fsubr shl sbb ja mov jno inc ss jbe add inc adc jns jge mov mov adc jns (bad) sub xchg mov fld1 sub push xchg cmp test add pop sub rolb inc cmp pop repz fiaddl std loope rol or mov inc data16 pop ficomp data16 enter jb sbb inc inc mov push dec popa test mov addb (bad) jne ret shl mov inc sbbl (bad) negl clc push cltd jae pop (bad) loop inc push cmp ljmp out lea dec inc in jb xchg enter inc dec inc fcmovb aad leave xor and and insb enter jne (bad) cmp fistpl in inc add clc mov loope movsl repnz (bad) cmc rcr shrl add aad cmc insl ss dec xchg jno ljmp fisttpll and xor lret (bad) out daa sbb outsl popf ljmp fbld outsl lock and mov aad ror push jle push idiv push mov popf hlt xor dec or movsb inc in stc jmp addr16 xchg jbe pop cmp test jae pop movsl mov (bad) push pop aaa lds inc adc popa dec pushl (bad) dec push xor and aam push (bad) mov icebp enter xlat clc xchg stos sti loopne sbb je push adc lock into or sub out add jecxz leave xchg and cltd xor pusha fistpl inc push pop push popf adc sub mov ret repz fsubrs xor jl push mov mov aad loope xchg sti jbe push xchg lock jae mov and aam addr16 andl (bad) adc adc bound lret dec xchg inc shrl dec addr16 pop sbb cli repz addr16 lds dec mov cmc (bad) cmp call addr16 sbb aam cmp jne mov ss sarb (bad) lahf mov ljmp xor je loopne out pusha iret sti in outsl pop or mov pushf mov mov mov stc xor push leave add push add mov mov out push jne xchg push mov push in aam xchg scas mov leave scas out shll push out push and xchg hlt xor dec inc cs hlt pop adc fdivrs push xchg add call fisubr xchg sub imul add popa xor stos loopne adc andl and nop je push jp jecxz dec push or sbb mov les (bad) pop cmp mov mov les jmp iret jmp mov mov cs jle jmp add and jl or push jns fstp or pop movsb in xchg add xor int push pushf test icebp sub mov test les clc fistpll movsb mov dec fsts or cs jae pop scas add test and into xchg add iret inc inc dec int jl xor cwtl jge xor dec adc pushf andnps aam adc push std imul std dec xchg inc dec pop (bad) repnz loopne add mov push sub xchg gs cwtl int3 dec cmp or xchg xchg ret sub rclb xor sub leave mov mov push sbb push dec fadds and sbb repnz and xor or mov je mov dec mov je out push jb adc es push mov push (bad) jp push and and lret push outsl popf jb pusha dec inc xor ds push xchg push push jo gs adc pop mov int3 jae and pushf mov iret and (bad) mov popa inc and arpl mov mov xor movsl xor out je cmpsl cmc out push sbb pusha jno sub out dec cld bnd add cmp fdivp scas bound bound leave test pop sub jle pusha jecxz sti push movsb mov clc sbb roll mov lea adc sbb scas icebp enter or pop jo in stos idivb mov sbb into rolb les or lcall (bad) mov sub imul popf (bad) jae jmp mov inc inc mov lods mov stos lret out adc es fdivrl jmp sbb (bad) iret cmc jle les std hlt in jo add (bad) cmpsb clc int mov mov and bound (bad) not mov lret shlb or cmp add xor sbb into cmp (bad) std xchg push push insb jb or hlt rol dec outsl (bad) lcall addr16 in imul or inc popa inc ds xor out call lahf dec push es fs sbb pop xchg or rcr push pop (bad) push repnz scas mov (bad) sub pop dec bnd rcll (bad) xor inc into (bad) adc (bad) xor adcb adc ljmp outsl adc inc cmp nop cs cmp mov mov inc mov mov sbb shr cmpsl es jo ret movsl lahf mov or lcall enter nop test pushf xchg xor xchg outsl insl nop fsts and loopne mov pop pop (bad) lahf (bad) iret popa cmp sub mov aaa inc and addl jecxz fbld adc fst sbb and push lock loop lods mov movsb adc test dec xchg sbb inc sub mov sahf popa (bad) fistpl and adc repnz add xor sub aaa sbb (bad) repnz daa or xor dec cmp shlb in jnp mov enter and (bad) cmpsl mov adc out insl xlat cmp fisttpl xchg rclb jo ret sti adc add pop cs xor and mov dec orl iret inc pop je mov pop and xchg inc add fcompp ret mov pusha hlt add shrb lret (bad) fidiv out push xchg inc movsl in jb out sahf xchg pop aam daa sar dec cld xlat adc fxch call xor jl mov pop leave xchg mov pop inc (bad) sahf in test mov push mov aaa ds adc hlt pop jbe pop add or push xor add mov mov dec mov cmp adc mov add (bad) jbe cmp ja adc movl lods push sbb push add add adc imul pop cmp stos imul scas jb cmp fwait aam fstl iret gs mov cmc add or mov adc jmp aad mov jo xchg daa mov in loop inc into cs repnz dec xchg in data16 xchg adc repnz push int sbb int movsb cmp (bad) and leave in lea lods stos loope xor stos push pop stos or dec dec outsb (bad) mov add mov scas popf mov jmp clc divb fisttpl data16 pop cmp jl mov aaa push ja daa pop mov loopne (bad) in ret loope imul jno leave (bad) mov stc fs movsl mov rcl bound nop push in cmpsl rolb xor inc pop nop jb jno lods mov push (bad) leave xchg les fsubs mov es add cmp xor (bad) addl les aas inc pop das jb xchg pop cltd jbe jmp js mov and jne push xlat scas push enter jbe fmuls adc fwait ljmp adc (bad) sbb mov (bad) call aas popf jnp jecxz mov fyl2xp1 movb test pop in push cs in mov in xchg call leave ficompl pop not jmp out mov stos arpl sub loop sub mov nop push xor faddl adc iret cmp mov leave in xchg (bad) or dec and pop add xchg xchg inc sub (bad) xor js xchg sub pushf fiaddl in je pop nop push mov cld push xchg adc add gs nop adc fsts push les cmp dec sbb std fiaddl sub popa mov icebp movsl ret dec jmp xchg mov out lock mov repnz adc jmp (bad) pop cld js sub sbb cs sbbb xor jecxz ljmp xchg scas or outsl cwtl and mov insb fstps jbe and int cmpsl insb lds (bad) popf rcl jns xchg ret pusha and cmp or movsb lea fstps mov lcall hlt push aad jge aad fdivl movsl call pop jmp fdivs and push lods dec rorl lock mov jno test popa into add in mov shlb sub idivl dec pop hlt xor dec mov and xor int add pop jg xor out out das call mov pop mov push fidiv fsubrl (bad) icebp cmc (bad) je cltd cmp xor mov stos cmp out int std int daa or cmp jne and inc test adc lret sbb stos (bad) mov lock ljmp adc push out sub xchg xor cmp sub (bad) mov adc movsl adc mov sbb scas mov in or jb cwtl add inc inc push xor inc idiv lods adc (bad) xor dec popf jl incb call clc lods sahf aad int3 and mov cwtl and xchg fsubp cld push fwait out lds sub and jl outsb je pop rolb sti es ja mov jo adc mov adc dec fidivr das iret icebp mov cmpsb jl (bad) mov je mov push or (bad) pushf imul mov inc fistp std push mov outsb xchg rcpps (bad) repnz out sti jo stos stos (bad) sub mov imul std push test sub leave or mov or dec ficoml out arpl into cmpl or dec add jp sbb inc push add fs jne (bad) hlt (bad) not das add cmova bnd push xor push or mov mov jp stc add fsubs pop xchg (bad) fadds pop dec imul pop xchg dec pop cld addr16 mov mov js jnp scas sbb outsb (bad) pop mov insl add outsl or stos pop in cmp les inc inc mov fnsetpm(287 int cmp sbb cmp out sub dec xor xor ja lock jae mov pop aas jnp stos clc outsl je xor add push cmpsb dec nop ret sti or ret pop mov xchg iret cmpsb std punpckhbw pusha adc jmp or (bad) ja inc cmpsb lods mov xor loop popf xchg inc sbb xor movsb fsubrl aad pop push cwtl push in std faddl rorb mov push or test jmp jb into ss sub out push mov and and out cmpsb vmread cmpsl fisub jae lret sbb outsb aam int3 add mov icebp popa movsb popf pushf pop push adc pop fnstenv pop in les arpl dec inc mov scas into inc cmp inc fdivrs mov pop adc push (bad) je (bad) push mov out jne daa push clc pop xchg sbb jp sahf pusha mov jns daa xchg jle xor fstps fimull das ret inc enter fild inc xchg loop mov push hlt (bad) aas lock dec pusha or cmp jge lds aas sbb jno jns dec mov xchg lcall mov mov pop pop popa fwait lods cmpsl or cltd inc cmp pop cwtl mov inc jl cmp aam mov add jbe (bad) fistpl subl sbb ljmp dec xor (bad) cltd ret sbb xor fnsave mov (bad) xor (bad) loope call leave xchg cmc cmp adc push adc push cmp xchg and inc jg fcmovnb aaa adc jecxz xchg xor outsb inc imul push (bad) aaa pushl sbb cli ja adc push mov xchg dec pop mov lret mov hlt jno push insb jp callw jo test mov aaa (bad) jno call aaa push push sub imul sub pushf or pusha lods lods in (bad) in mov jge ficoml push mov cmp mov mov jbe lahf neg inc jp and cltd fs js inc dec test shr rcl leave loopne flds daa cld jmp rcl or cmc add mov sbb adc popf jno jp out lods movsl jg fisttpl sahf cmp inc sti sti cltd xchg repz stos cmovs lret addr16 data16 ret inc test xor adc push push lods divl mov pusha dec or cmp adcl mov dec jno cwtl dec mov jns xchg lds jle ja sub and fist add and add jb aam ja push pop mov cmpsb arpl mov pop je mov cld pop mov jbe pop (bad) andl lss mov in and movsb fwait sub iret daa lret or jg pop mov and repnz xchg inc and xchg insl xchg out daa mov and fildll jae sub lock int3 cmp fdivl es out fwait jle ds pop jg rolb sub pop xor dec loope sbb insl sub notb mov jmp mov inc xor cmpb (bad) leave js mov imull orps sbb xor and pop test lret xor adc aad fs mov je cltd imul (bad) jg or aaa lods loop orb xchg jmp cmp add out cld jmp add jne sbb cmp test imul or fstpl pop stc sub in daa or fiaddl xchg jp,pn dec fdivs and jne cmp pop mov lods add movsb mov mov dec fs out rclb adc cli cmpsb cmp (bad) test fwait and jnp pop xchg ds mov dec jp insl mov add add lcall or test es inc sti fldt and sub fild (bad) sbb push (bad) lods sbb push lahf rclb andb adcl dec shrb cmp pop jb pop adc popa decb cmpb das ljmp insl sbb mov add stos cmpsb (bad) hlt test cmp bound cmpsl inc movsl mov test js adc js fs sarb stc leave fwait sbb imul test addb xor xor jecxz inc out iret (bad) pop mov (bad) sub loopne int3 bound xor das outsl add xlat cmp push stc sahf (bad) incb mov and push dec or lret stos pop les jp test jmp loopne pop (bad) cmp imul pop repz jmp fnstcw cmp testl clc jns mov sub inc mov enter xchg xchg mov in sbb or out les push daa loopne sbb fcomps mov cmp decb lret fdivr jl fidiv sbb outsb xlat add or mov (bad) cli mov xor test push jb mov enter or loope arpl out push pop mov add jne jns in out aam mov ja in inc xchg or fxtract jge xchg and push xchg lds dec adc fcoms push in call and insb pop mov xchg or hlt push addb and xor lret shr lock and pop testl cli inc mov dec dec and fcomps sarl xchg (bad) cli and xor jp insl loope std imul xchg out in sbb push ljmp push clc and lods frndint and in das adc xchg cld mov cmp inc inc xchg and mov xchg dec push pop loopne std or lcall jae fsubrs insb sub ljmp (bad) mov andl aam push popa les xlat stc inc insb popf xor int3 dec out and js outsl fcoml add cltd sub sti mov pop out aas dec scas pop popf add pop test call lods inc hlt into add ret mov and cltd xchg mov sub fidiv mov inc in sbb lret cmc scas push push enter xchg add hlt shr es dec fist imul (bad) cmp (bad) daa (bad) xor in jmp sub xchg sarb lds lcall inc mov insb incb adcb pop in pop stos out daa pop cmpsl add xlat call sub popf jg pop jg mov mov lea int jne cli addr16 mov test ja jb xchg jb mov adc and cmp lret pop cmp mov xchg inc push xchg (bad) mov ficoml xlat outsb cmp add cmpsl fidivrl pop dec mov cld dec movsb loopne test test adc xor adc popa lahf push fbld cs pusha mov ss cmp cli mov pop movsl adc mov cmp cmc pop jg into mov mov mov mov mull ljmp inc rorl sub popf mov jbe es sarb insb out cs dec rorl jge xchg (bad) mov loopne mov mov push test push jle mov sub repz cli push in std loopne adc hlt xchg sub sbbl cmp inc test sbb jg push (bad) mov repz hlt cld in xchg dec or fs sbb adcl jl cmp jns sub sti popf mov stc inc or inc adc mov lret inc mov inc mov inc popf adc mov idivb ds gs (bad) ret xchg pop xchg cmp add pop adc sbb mov cmp test push popf test bnd push inc scas xor sub fldenv adc fmul sbb cli xchg adc mov fidivr jmp leave out mov pop pop (bad) mov mov test rorl xlat push lea (bad) jp enter pop out fsub lock mov sub inc (bad) push outsb (bad) (bad) push popa bound jge leave (bad) lock cmp arpl push inc (bad) cmp call insb add scas adc pushl test pop andl stc iret xchg test addl mov push cltd bound mov repnz aas inc add xor and test jmp scas shlb or push out xrelease out stos bound mov sti cmc jb inc scas cli shrb lcall jge or mov popf lock push dec add sbb fwait push xchg mov fist in jge insl jno leave dec ficompl mov mov push outsl inc stos std mov pushf sahf jmp fistpl je jmp cmp lods add xchg fwait push mov mov pop arpl jns xlat les test push cmp sub pushf mov adc mov cmp dec mov shrl lock sbb (bad) push or scas in sub mov add (bad) insl int3 inc mov iret (bad) iret jge aas aaa add xchg xchg lock mov mov jmpw ret cmp mov mov sub pmulhw jo pop ja rolb aad lods stos xchg loope scas outsb dec mov inc xlat in sbb cmp xor xor ja iret gs std push imul and roll jo std repnz sarl popa mov (bad) mov ja fidiv cmp sub xchg lds repnz (bad) and push mul cmp das stos fnstcw jle fdiv inc cmp or push test mov aad inc in out cmp lcall pop lret xor fnstcw das dec xor out sahf imul dec arpl negb xchg sti or loope cs sbb xor outsl rclb and (bad) subb data16 icebp sub sbb add adc cwtl test insl mov ret jo andl pushf nop mov insb mov je ljmp xor sub (bad) movsb mov call fiaddl fistpl and (bad) or pop lret cmp push iret xchg sbb (bad) cmpsl xchg or sarb dec dec and cwtl movsl test loope iret aaa mov sbbl xchg stc or sidtl xlat insl outsl cmp cwtl mulb mov stos int pushf xor xchg cmp lea jp fwait mov mov mov mov nop lods mov pop mov sub mov lret pop push mov imul inc loope (bad) imul sti clc andl push (bad) loop jnp pop ljmp mov scas adc movsb aam jmp call inc lds dec adc sbb jb add mov sub jae cmp test sti jge mov in lods pusha ss add and cmpsb scas mov xlat jmp mov push cmc mov mov push fwait mov cmc pop adc xor cmpsl and mov xchg icebp xor pop leave out ficompl adc and test movsb push jecxz mov cld mov mov pop mov mov inc cwtl lock dec and test inc mov sub cmpl mov push and pop jnp dec scas mov jno xor (bad) loop pop (bad) cmp jmp inc stos xchg lods mov cli jl xor out jp jns enter xchg loope out repnz stos and sbb xchg cli test xchg push mov popa dec lods pop lea xorb pop cmp subl and add outsb mov outsl xor je cmp sbbl nop mov and and jns pop inc fucomp jmp xchg mov cld vpunpckhwd shlb dec pop daa xchg add das cmp jecxz (bad) jp mov xor sub test loopne adc xchg mov std push dec pop add sbb add in nop call fdivr nop je dec movsb mov gs push subl divb and xor fdiv lret icebp jle jl xlat adc pop jmp xchg push inc cmc or or stc inc push xor or jle cmp jle movsl fs gs xchg dec popf int lahf rcll andb stos dec shr mov cmpsl mov andl repz rep and adcb out sub xchg inc test lahf sbb xor mov repz and cmp jbe cmp adc aad leave cmc leave data16 nop inc mov repz lea add xchg je insl fcmove arpl inc inc cmp add adc mov add aas pusha xor mov es das pushf xor or fnstsw adc push pushf xchg movsb cmp int or dec ss aas jbe push popf cmp xlat jecxz in mov imul stos adc jle inc dec add les aam jno add imul xor mov xchg test cmpsb cmp pop insb cmovbe or out sbb mov push mov gs jmp dec mov sub sub aad insl (bad) idivl outsb pop pop xchg sub insb push sbb dec mov ss (bad) jbe lret jbe fiaddl jae mov loop pop jge fldz push imul dec shrl push mov sub cltd add sbb sbb cmp sti pop (bad) ss adc sbb xor or popf ss mov ss push dec jp jp push and scas inc dec rcl jno cs test xor jae stos sti mov ss imul push mov into mov jne mov (bad) addr16 insb aam imul dec or push fnsave fistl dec or push xchg inc leave add ret jb xchg (bad) repz bound sbb mov jp inc adc fstps add nop mov adc dec insl sti sbb (bad) icebp mov cmp mov mov sbb scas in repz iret mov leave (bad) xor popa jb cli mov mov mov movsb outsb pop dec scas faddl xchg lret sarb sahf pushf adc repnz sbb mov or sbb add mov jo pop cltd mov mov pop pop outsb stos test insl aaa mov test sub cmpsb (bad) push aas and inc mov js das mov mov sbb outsb dec inc sti popa lret mov sub push arpl xor popa pop mov loopne dec icebp or sub push in leave push push fist jb fisubr sbb add leave or arpl movsb sub fistpll dec les cmpsl jecxz jmp mov js jae,pt nop repnz iret jmp fadds add cmp push inc jae sbb aaa mov mov loopne mov xor addl mov lods xor lods daa xchg inc mov and or dec jecxz mov rolb cmp cmp xchg pop mov mov les inc inc bound stos hlt or push pushf lock dec loop xor cmp push int push push pop bound push cwtl cmpsl movsb shl mov cwtl insl (bad) mov mov add ss clc fs aaa add mov mov icebp mov data16 bound out mov mov jle sar cmp and push lret sarb (bad) mov xor aaa cld xchg pushf mov test inc leave dec nop out cmovg pop xor xlat in ret inc and leave jl mov pop adc aaa or mov fcmove aad ret data16 stos dec nop ljmp je out xor sub test fnstcw hlt sub inc mov loope stos outsl in leave outsb lea test mov dec adc cmp xchg xchg sbb push out pop dec dec add repz hlt out stos xchg or jne mov xchg mov mov xchg xchg std jo fldt pop add das dec mov mov fcomps inc (bad) xor leave cmp popf mov mov nop js cmpsl cmpl push rclb dec jb aad aad or cmp cmp stc dec rclb outsb or iret ret mov addr16 cltd mov ret and shrl popl decl lea jp adc and (bad) xor neg arpl stc mov sub rcll jge xor dec arpl loopne mull stos adc jmp add push xor outsl mov fistpl cmp pop xlat aas xor pop sub mov xor push in out pop icebp cmpsb pop aad arpl movsb xchg in push (bad) fsubrs push scas insl cs (bad) or (bad) ss push cmc cmp cmp pop lods jb mov stos hlt pop mov xchg repnz inc xchg cmp pushf mov movb leave dec cmp mov stc cmp add in mov mov xor movsl dec pushf ss das jo ret xchg test ljmp xor jne in out test rcll mov popf in mov inc dec dec mov (bad) aaa and sbb fs (bad) cmc fcompl sbb cld arpl inc add (bad) mov ljmp (bad) mov insb jge or inc dec stos or stos pop inc les lret je inc stc sub push dec cmp jnp outsb jne lods mov (bad) in mov dec push or jnp xchg or add pop das add mov push insb (bad) xlat pushf cmpsl pushf mov mov stos or push outsl cmpsl push pop invd enter pushf cs xor sub ror mov pop lods pop test (bad) mov inc mov inc xlat lret or jle cld adcb inc fdivs enter push cmp loop ja or vmovhps stc pop int (bad) push dec jne sub mov cmp mov pop xchg jne lods gs push sbb lods inc loopne js cld aaa repz shr jne xchg mul inc popa jo dec lcall mov pushf dec lret push inc loop push dec ljmp int adc or ss idivb int3 pop icebp popa lds ljmp icebp push imul mov test in xor ret or (bad) mov mov or add or dec sbb push push xlat loopne mov daa mov test lret push adc push pop push insl jno leave ds mov xor sub adc mov fldcw test out lods dec mov js repnz into pop (bad) std ja test cmpsb pop and movsl int3 mov jmp cmpsb sub pop pop mov in clc lahf inc jo adcl ret sbb or cmp cmp cmpsl push pop push mov inc xor (bad) cld inc rclb cmc and cwtl insl iret add (bad) sub std jbe pop dec push add inc loop aam cmp movl scas add fwait cmp jl in les jae fcom and js fisttp or fistpl and js in jae mov or lds inc call (bad) lock gs push add cmp mov inc cmp cmp jne sar adc jae (bad) jbe test cmpsl les sbb push incb xchg cmp das pop (bad) push inc mov (bad) jae jg scas or test xchg repnz xchg (bad) jae inc (bad) pop lods sub les in lcall dec inc clc mov push add jmp xchg (bad) (bad) incl in xchg fidivrl and (bad) lret add sahf push stos test cmp data16 jle test lret dec pushf sub loopne mov pop mov lea pop dec xchg sub std ss push mov mov sbb iret notb xlat movsb and xor add sahf aaa mov push mov jp sbb dec jmp jae add in push dec fisttp movsb lock sarb decb lret cmc hlt loop enter rorb dec stos (bad) sbb cmp flds push outsl sub cmp mov cmp ret mov test jae mov dec enter int pop sbb xor xchg xchg sub cmc cmpsl cmpsb or movl pop ja mov push outsb imul inc pusha (bad) aad fistp mov sbb xchg outsl adc mov xchg xor lahf jmp out cltd gs subb fs or sahf xchg mov xchg dec movsb add test aam add rclb cmp adc cmp bswap fstl call add stc aad mov rcrl cmp or dec pop in sbb pop push leave mov fst mov in push mull inc adc outsb inc sub sbb (bad) fcmovne in sahf pushl mov xchg and pop jbe push mov cld iret adc pop mov stos mov lret dec xor cmpsl in insl iret fisttp xor leave (bad) lods into shr imul xorb cli xchg xorl inc inc cld hlt or popf push push jns push pop outsl xchg shll pusha rorl jno dec push iret inc adc mov clc xchg dec fcoml sbb push mov hlt and cwtl lret pop cvttps2pi jo test jb xchg sbb outsl jnp mov dec mov xlat adc xchg int3 loopne sbb pop jns test (bad) inc mov cli push push add mov fidivrl cltd adc adc push daa dec or push mov rcll out add sub or inc (bad) (bad) daa or aaa lea jae,pn ljmp data16 in mov dec xchg jp pop cmp imul lea inc jecxz (bad) mov nop inc cmp in add inc loope or mov push adc mov popa xchg adc enter jns cltd xor jno mov mov mov cmp xchg loop test lock insb push fcomps test mov jo cmp xor adc sub xchg pushf dec in loope xchg outsl add inc mov push dec (bad) repnz push cs aaa ss xor mov imul mov ss dec add insb rcll fcomp fisubr adc push cs ss push dec and ja in and fild aad mov adc dec dec stos push es insb outsl mov jo out int3 inc push sbb add xchg lret adc jae mov (bad) mov aam sbb movsb imul mulb insl or stos fsts fidivr mov lcall stc lds clc push push sub insl cmp sahf pop push jne in rcrb pop pop adc data16 xchg sub iret pop dec xchg adc mov int push jnp lcall outsb jmp icebp aaa pop jno sub enter pop pop push xor pop das test push scas ss push dec mov cltd push mov sti or jno out jge sbbb jg cld adc mov mov dec shll inc das outsb mov xchg int3 xor aad test dec fcomps clc push iret cmp mov sub enter push mov xor data16 pusha sbb add inc movd mov jno jns int pop fadds lahf and lret lcall out dec (bad) (bad) ficomp clc scas lcall sub sbb mov ficom fcompl push mov adc jecxz imulb jecxz test mov int3 leave sub mov je std sbb inc push inc imul lahf jo std rcrb mov daa in push mov data16 jnp js pop push mov mov hlt inc dec repz fmuls xor daa insl jp lea mov out leave test divl pop inc dec fwait inc out daa clc push mov sbb jecxz xlat inc out pop outsl inc out fsubrs (bad) test inc fwait stos movsb imul pop push sbb jbe pushf mov fmull sbb addr16 adc cmpl int xor pop sbb cmp add pop cmp insb stos (bad) enter mov fxch aas rorl icebp lea lock add test in lods (bad) clc pop pop push adc in into mov jle mov movsb cmp pop dec mov movsb xchg xchg fwait inc add jl push repnz aaa push cmp repnz fisttp dec sbb movsl fnstcw adc mov jo sbb sbb fnsave add xor or add imull inc xchg or pop stc arpl (bad) std xor sub ss mov ja cmpsb enter jo int3 (bad) test fistp dec pop or sti inc (bad) ljmp mov ficoml loop push sub test popf push in xchg push push not fdivl and leave push test pop enter or aam mov dec aas xchg pop (bad) aaa mov or das add pop push mov sub loop aam or sub lret sbb shrb repz jg je daa lea xchg pop adcl cwtl xchg pop jg push inc stos lret jnp inc call sbb pop cwtl inc inc push movsl xchg ret sub fwait cmp aad mov in add movsl adc negb adc adc rclb or lods cmp pop pop movsl fnstcw sahf fwait imul cwtl xchg insb dec mov rep es dec daa imul test mov call mov aam nop pop dec xlat jle mov lahf add (bad) mov cld fistpl push (bad) cli cmp sbb lea mov sarb ret push pop fcomps inc sbb lcall les mov mov jae jl dec ret popf icebp xor dec loopne fcmovnb mov sub xlat pop push push cwtl jl pop mov add jmp inc xchg mov push push cmpsb das jl adc rclb mov into add add pop push add add or imul mov in sti xor loope mov and add and jns arpl lret mov xor loopne inc enter notl inc cmp (bad) push dec jge int sbb ljmp leave cs cmpsb sbb push add dec xchg js fdivl push stos js mov xchg sbb insb inc movsb inc sbb jp aaa mov inc imul xor adc adc xor daa (bad) jo inc inc ja jno mov cmp cmp and arpl cmpsb jp icebp cwtl shlb test in fistpl xchg or test mov push adc push push mov movaps (bad) jne push jno pop inc stos wrmsr push sub pusha xchg leave mov repnz test test ja lods cmp subl fwait rolb cmc pusha leave mov sub adc shll mov or xchg fsub mov fmuls loopne fldz ljmp push in adc jne icebp cmp outsl and stos or cld mov jae adc dec sub inc test mov les ret mov lds xchg push dec mov into mov adc add into and scas mov inc js,pn notb fsubs fucompp fnstcw loop jno clc lock jb sbb or xchg gs stos (bad) aaa je (bad) sti adc add or sub sti mov sub and out (bad) and mov sub cmpsl sub lods (bad) out loopne jg inc and mov loope dec push mov sbb aam scas inc stos or xchg (bad) fwait icebp popf xlat es adc loope imul cs mov sti mov inc inc mov scas hlt push mov mov jbe mov mov nop mov sahf cmp repz mov outsl fs sub inc fwait or loopne or or jl fcmovne into jmp fsts jl xchg add ja xchg jae sbb insl insb mov mov jo inc sub cmpsl mov cmpsb gs jecxz adc frstor mov jno jne mov (bad) cmpsl addr16 lcall push mov pop adcl arpl imul inc adc dec (bad) insl dec jg sbb jnp mov pop scas js ds add es hlt mov faddl test mov call mov adc pop adc out ficoml mov int3 jnp jbe push rcll cli gs and lahf icebp fldt int3 loopne xchg in idivl nop data16 fs in jnp icebp adc cmp popa loopne lret jle sbb inc push pop and lea hlt rcrl sub lea gs pop sub push and push pop xchg bound test or mov pop stc mov xchg lea scas (bad) mov mov loopne add incl in xchg sub add insb lods adc dec lea dec dec cli mov into repnz or adc cmpsl cmpsl popf orl sub xchg cld imul pop test cmp mov mov shrb adc sbb pop in xor sbb das pushf fnstenv sbb int gs arpl fwait arpl out mov mov into xor dec jne push icebp (bad) pop into jg lahf ja inc push cwtl cld mov mov xchg cmp add mov adc mov (bad) movsb cmp cmp into aaa cltd sub xchg popf fs and loope ss mov push and mov xchg arpl xor (bad) scas pop cmp in arpl (bad) mov sbb mov xor cld xor (bad) add mov test enter push inc cwtl mov mov sub or js cs (bad) mov add xor sahf mov pop les dec mov or mov dec cmp outsl cmpsl adc mov xlat add je adc (bad) cltd lret out mov loope lock or shll leave cmpsl mov cwtl mov jg mov push add mov mov mov fsubrp sub movsl mov sbb or or clc loop sub jmp fcoms clc add shrl xchg sbb mov in dec mov and clc inc jp xorl loope,pt outsb adcb cld cmp mov sbb js daa or mov and aas scas jnp popf sbb mov dec push repz xor adc mov mov (bad) and dec jbe clc adc mov (bad) loopne int3 sbb out xchg pop jbe lahf cmp push pop rcrb cmp or call xchg jo sub sbbl add (bad) fs (bad) inc jnp cmpsl shll les cmp cltd jle mov dec jo inc mov xchg loopne adc fldenv push fsubs bound std jo xchg jb xlat lahf cmp push adc lea ret cld and ds or scas fnop (bad) inc das shr cmpsb subl push std dec xchg inc and addr16 xor push push lods ret mov xchg jmp mov inc ljmp push pop xor stc idivl xor int3 mov sti cmp dec adc inc mov stos leave bound (bad) ja xchg jecxz inc xchg cmp or pop es imul lods lret movl push loope in dec imul stc inc mov jbe cmpsb cld add scas pop cmp xchg xchg test (bad) push in push adcl push sub mov inc dec dec rolb adc nop test int pop ds ss jle popf push loope out stc mov push out test push test xchg add into mov or scas mov dec jmp or ret sbb lods out push xchg (bad) imull loopne out or (bad) sub adc push pop adc (bad) xor addl ljmp not in mov mov (bad) mov shr icebp and leave mov mov mov fs sub mov pop pusha cs sbb adc dec test in popf outsl in adc pop icebp push shr push (bad) mov pop rcrb jmp xor aam insb mov test push mov or lods push xchg ja ret dec jae decl mov xor (bad) add sub push (bad) add adc fstps xchg sarb hlt jo mov adc mov mov inc roll mov and mov jno inc adc leave sub mov pop mov cmp push jne pop ja fs push ds push xchg mov scas lret jb jnp jb dec (bad) popa loopne fisubl out mov mov mov dec bound pop push push or into outsb fisttpll dec cld dec mov add lea add ret cwtl jns xchg lret xchg add in jecxz jg fcompl fnstenv and sbb cmp jle mov int mov xor dec mov pop (bad) jb loope fistpl adc jg pop xor ret mov jmp pusha (bad) nop sbb jecxz mov add aam bound mov jnp xor pop jg add (bad) pop mov sbb dec mov lock sub jecxz stos add mov frstor cmpsb pop aas and pop lods inc (bad) xor mov sub mov mov (bad) push sub dec or sub push sub mov lds (bad) rcl test lcall insl mov xlat jmp es stos push int3 jl mov xor cmc sahf clc mov xchg lret or out inc sub lock cmp sbb outsl inc rcl pop fbld xchg in (bad) mov xlat cli pop xchg fsubrs lock in fldl ds adc cwtl cwtl das (bad) mov ljmp std inc aas dec dec jnp xchg lods jge push fdivrs pop sti ja pop int3 repnz out flds test pop les xchg inc push in jecxz js loopne popf and scas or mov cltd std mov and jae mov data16 scas jno fnstcw mov (bad) repnz stos rcrl cmp push mov fmuls xor push loopne push inc repz xlat int movl mov mov fimull and jle cmp jp xchg call fadds jge add divl fnstenv pop loop pop imull mov cmpsb jno push sbb lds stos mov or cmp aas into cmp nop popa inc in loope inc xor shrb je or push bound cmpsl scas idivl dec inc jo mov pop sub xchg in gs movsb add push adc es mov nop sbb imul aaa xor fisttpll sbb add add ficoml leave pusha sbbl inc sub adc xchg and mov mov or or fidivl cmp mov fcoml jne xchg inc inc push push dec push adc ss mov pushl dec pop sbb add mov (bad) fiaddl imul or (bad) fucomi mov mov inc xchg out pusha dec jo mov fisttp cmpsl or mov xchg xor test and cli hlt outsl sub fsubl les pop add jmp repnz fs in icebp adc adc jb dec mov lock jl imul inc mov push inc cmp inc mov jns dec outsl jecxz jns imul addl cmp lcall (bad) call hlt cwtl xor xchg in push and dec pop push je pop jge push pop mov js cli stos xchg push xor ds pop jno es and sub movsl add (bad) test faddl rolb repnz push jge loopne cmp jle xchg adc (bad) loope das cmp movsb sbbb dec inc ljmp iret jmp outsl push or aaa lcall sub (bad) lcall fldt mov mov pop call push cmp inc push mov mov adc add jp bound ljmp push jnp (bad) ret pop pop dec inc aas mov pushf in xor pop xchg push repz test mov mov sub shrb jnp add mov lock and das push xchg pop lea fsubrl mov les loop (bad) xor sahf lret es fwait in lds test push out pushf sub pop push (bad) jle lret daa int push adc jg stos fcmovb imul pop xchg test jp inc ficom sbb pop adc pop fwait pushf rolb and lahf xchg xchg dec xor movsb je cmpsl cld push mov (bad) fmull inc fnstsw fist loop adc iret cwtl test mov (bad) mov movsb movsb das push mov push xlat dec jbe xchg xor fcmove fstp clc cmpsb out cmpsb arpl repz mov xchg int3 loopne (bad) push add adc xor jmp inc repz stos mov decb lock adc adc in lahf mov mov push test stos jl,pn std fldt sbb test enter mov xchg jl xor mov inc mov les iret fdecstp sub es scas insl or mov jnp push cmp xchg mov mov cmp lea xchg lret mov sti pop add ljmp jne out ja mov dec les sbb mov add jg mov je jle repnz pop mov js jb pop and inc lds push pop cmpsb or fildll mov aaa mov fisubr adc sahf sti je mov jo pop insb sbb inc in rcrl jns push jbe mov adc ds hlt or loope cld jae test xchg add sbb jno and cmpsl pop jbe sbb outsb iret mov mov lahf xlat sahf xchg cltd pop dec xor scas lcall mov in movb push mov push mov xchg or sbb iret sub cmc jo mov jle mov into mov pop push in push mov testl push ret ss mov mov mov push mov clc aas inc lock push add mov stc in jae ja cmp in test xor data16 inc and leave stos lea lds and out mov mov and ja stc mov xorl aam pushf popf sbb fstpl popa mov xor int andl sbb les stos (bad) mov and das xor pushl fcoml push mov jle pop push les vsubps mov xchg out cmpsl sub loopne mov out mov dec xor scas out shr fs jp lods pop xchg push xor mov cli or repz in add fbstp inc xor dec and in push push or lret jmp jae mov mov rcrb xchg xor mov cmp ret out ja popa enter mov jp mov jmp nop pop push push aad push push mov mov test xor cmc mov xchg mov addr16 adc int dec xchg xchg jge sbb (bad) loop mov addr16 cltd stos in rorl sub dec pop enter sbb js dec jo jge pop push sub test sub ret add insl xor movsl test pop fstl cmp lahf sub add sahf jge jecxz insl xor aaa or xchg flds outsb xchg inc push shrb xchg sbb adc ret fcoml sbb aad cltd (bad) push mov sub fwait jmp push pop xor cmp xchg jbe push xchg ret sub pop inc ljmp ficompl mov fwait bound arpl mov pop test insb pop and pop xor pop or or sbb add shr daa and jae sbb mov gs adc loop mov mov mov cmpsb mov int3 sub mov or call add movsb fistpl xchg cs outsb lock mov scas cmpsl sub mov jmp jle mov dec push inc adc jne add jmp mov rcrb dec cmpsl cmp lret mov lret movsb daa pop outsb cmp movntps sbb lahf jge mov mov xchg aaa push test and jge sub push sub cmp aam mov movsl iret (bad) sti loopne dec mov push data16 imul mov (bad) pop outsl fsubl mov push xor std enter fs or sbb dec inc fcomps and fsubs cmp dec addr16 out addb jg lods fdivrl cwtl fmul int dec insl (bad) (bad) xor mov mov les push mov stos add out fisubr data16 and sub ret mov in mov (bad) js pop cmp sbb dec xor scas sub jno rolb xlat stos shrb into add rcrb dec ljmp jmp (bad) mov and mov jnp mov sarb jo pop lea insb and bound inc pop jmp cmpsl sub jne ficomp es icebp lds icebp (bad) in pop mov dec xchg xor add sbb xchg fwait mov ret sub cmp xor das dec ljmp popf daa push out lods cmp lcall cli sbb xchg cmp ret fsubl addl arpl pop std movsb repz xchg int3 inc or je dec dec pop movsl std stos push mov adc jmp sub cmpsl cmp shrl icebp jo adc icebp jb ja mov pop and push or pop lods out sbb mov ljmp mov mov mov inc clc sbb imul ret and fidivr out jp bound bound mov pop (bad) in xchg (bad) push fidiv mov leave arpl in push js icebp arpl jns cmp insl xchg cmp sbb pop inc or sbb add sub out repz data16 xor pop lods jns ljmp loopne cli and dec mov aas stos leave popf and subb fdivrl rcrl xor jle cmp and jp inc test dec mov cwtl xor (bad) dec mov data16 xor insb mov mov lock cmp jae xor lock popa mov fimul and outsl jmp cmp add mov mov cmp adc jnp lods sbb stc adc mov pop (bad) fnop inc adc dec inc xchg add js lsl jg ds jbe mov mov hlt cmp in xchg inc insl rcr imul out xor ret call inc int fdivs sbb and out dec push mov sbb xchg scas pusha and aaa cmp leave push ljmp dec mov jne jbe fwait xor xor mov and out mov (bad) ftst mov cli aam push or push pop push cs jle outsl test sub cltd jg jns or pop mov adc mov dec mov shr jbe cmp rcrb mov mov bound subb outsl cmpsb inc inc cmpsl push jp mov cmpsb pop orl cmp cwtl cmp dec loope mov out rorb sub jnp divb lahf aad scas gs ret outsl mov sbb sahf pop inc xor add ljmp add adc orl fsubrs pushf jl push scas push inc add pop fwait loopne punpcklbw repnz jecxz lret test dec test add lods lret std movsb add xchg mov insl and inc and fistp pop adc int3 fisubr in dec insb mov pushf jb inc add cmp dec cwtl das stc aaa and cli pop and int jns sbb or into int scas jl or int (bad) mov scas sub inc gs jae push sbbl jp lea loop gs fiaddl daa jmp pop je mov mov iret xlat xor lahf mov cmp push mov fiadd jb and and (bad) xor loop sbb je push add and loop loope test dec pop dec jge push mov xor mov mov mov mov aaa xlat xor adc test inc imul push push loop clc mov dec in loope (bad) fmull sbb arpl call sbb adc add std xor xchg lods xchg test (bad) int pop pushf das sub and cmp xchg add xor leave int3 dec lcall gs mov cmp jle andb dec loop inc cwtl inc inc or dec jle jbe sub sarb scas xchg push mov mov pop and jae mov fidiv test in addr16 inc fwait xor xchg sbb pop inc push push dec or add insl and pop stc mov push or cwtl arpl pop les mov aad and mov push lret sub fcmovnu pop and fsubrl data16 loop jne xor sbb hlt sbb cld xchg test add call arpl inc outsb inc xor int pop inc sub incb test xor mov ret or jmp rclb sub test (bad) jns int3 movsl insl addb xchg xchg inc call xchg push wrmsr (bad) aas movsl aam dec xchg out jmp shrl in xor in das aas and jge adc lcall mov jp push cld and pop movsl pop popa repz ljmp xchg ds adc loope mov or push mov or jnp sbb mov pop add xchg mov adcl push ret jle ret stc imul clc dec ret imul adc loop pop cmp cmc (bad) lods push fcoml push jb lcall jge push adc sub push xchg and (bad) rorb aam jle mov jmp outsb subb and (bad) cmpsl aad outsl pop xor stos push jmp dec add add out scas test jl out jg mov push in clc out mov scas das gs divb mov push sbb cmp xchg dec je (bad) jbe repnz push xor das test inc jmp jecxz cmp jns dec push inc hlt pop outsb mov icebp mov es add mov xchg cmpsb lock mov out xchg xchg lcall dec cmp test sar test mov xor fdivs loope push dec adc dec and xchg push add pushf push mov cmp lods fcompl cmp je nop mov inc paddq dec cmp (bad) (bad) dec adc or fmul jmp lock dec lock mov adc push in lds mov push mov lret sub cmp fmul pop ja mov xchg aad (bad) fwait aaa mov outsb push cmp jnp negb inc dec push dec mov cs add sbb sub call push addr16 outsb mov imul dec adc add jbe imul cmpl adc js outsl mov hlt xor jbe or cltd mov pop jecxz gs fistpl scas xor sbb outsb xor mov add cwtl daa faddl jl das mov or js (bad) fisubrl mov out fcoms (bad) or scas fs mov loope (bad) pop and sub or inc daa data16 inc xor fimull mov movsl jbe out cmp rcl push dec cli mov imul inc cmp cmc fsts inc arpl jnp test fstpl jno scas dec repz movsl loopne popa scas popa cltd es mov adc jecxz movsl mov sub cmc mov (bad) dec jnp xchg push mov test add korw movsb inc lock cmpsb or sbb pop lds push mul mov clc pop pop fdivs xor adc xchg jmp sub shlb adc push pusha loop xchg jb mov pop pop fiadd and sub cli sti ljmp sbb push and cmp xchg sub mov aad (bad) loope xchg inc mov das add out outsb cli (bad) jne and loope rorb lods (bad) add arpl sub movsl (bad) pop (bad) cltd scas sbb mov sti out pusha stc je aam icebp sub or test cmp fiaddl out and jge mov pop pop getsec adc shll dec (bad) ds xlat adc cmpsl mov loop fldenv sub or into or sbb xlat ljmp cmp stc mov rorb ds movsl jns pop adc push mov movsb in jl or fbstp mov stos leave int3 mov push pop mov testl dec xor push xor sub test inc mov lret out (bad) sbb pop and mov xchg inc mov add cmpsl sub inc repz mov dec inc (bad) xor xor inc jbe jns add sub push movb inc rclb es fisttp mov adc mov popf (bad) ja xor popa lock xchg push std outsb xor xchg ficoml or loope movsb jecxz out (bad) imul mov push sub movsb adcl fidivl fisttp jbe lea cmp pop add popa out pushf mov push adc in jmp insb in xchg ret push push rcrl icebp jp mov mov mov mov dec and je push push xor rclb ds icebp pop and call out pushf fs xor outsl mov jl dec jecxz bnd push inc inc int3 imul mov mov pop rolb mov pop ss push add jb pop jnp stos les stc push adc cld mov sahf outsb (bad) adc mov add push out sbb out xchg pushf aad test pop sub xchg imul sub inc pop inc sub out cltd xchg xor mov sub js add fcmovnu addr16 inc nop pop dec sub dec cltd out roll add add xchg es enter sarl ja push notb (bad) decl adc aas popf je xchg add cmpsb push das jbe imul out into mov sbb stc xchg loopne or in jbe inc inc fcomps xor jns js xor aam fldcw out lret add int lcall pop jnp xor cmp xor je xorl sarb cmp xor push enter and adc ss cmp ljmp movsb cmp sub or pop sbb mov movsl imul jnp cmp add cmp bound cmp add cs sbb sub add loopne mov stc push xchg mulb cmp incl add inc repz arpl mov dec daa dec test stos lea fist lcall lods dec sbb cmc sahf cld test test das adc and push das mov mov or ror cmp insl or ret sbb stos xchg sbb jno xchg sub push iret fwait leave (bad) cli fiadd lret xlat xchg fisubl pusha mov and sbb add jae mov test mov push cmc sahf dec les int3 or xchg outsl popf cmc push ja (bad) or xor outsb negb arpl (bad) pop mov int3 js and cwtl (bad) sbb icebp jb loop neg fwait jns mov jo or push stos lea jp (bad) jecxz mov push lods lret mov push sbb sub mov pop cmp fimull add lock and jo sbb cmp mov xchg mov (bad) push jl lea jbe mov pop inc jl inc mov js xorl dec fs popa fwait scas push mov popf outsl cmp rorl adc adc fsubl or pop jp (bad) mov inc cmp lods xor and inc loop lret insb lcall adc mov sub cmpsl syscall mov pop int lds jnp cmp sbb push fidivr xor xchg dec push sub jle push xor in aaa (bad) pop xchg repz test scas lock jno repnz fildl fwait sarb jae adc mov jge push jg push imulb cwtl mov xor sub mov or frstor movsb in es pop xlat jo mov vpunpckhdq and mov pop leave cmc pop scas notl fimull jl xchg cmp inc xchg xor jle std ficom aaa loope push pop cltd dec popa push (bad) push mov (bad) cmc push aad cmp push aad xchg mov sbb xchg mov fidivl push into aam (bad) out mov dec loop push or insb icebp sbb movsl (bad) sub sti inc mov test (bad) fcomps mov mov add out mov cmp pusha aas inc fucom sbb lcall mov loop mov mov mov sbb inc xchg out ret lock xchg pop fstpl pop (bad) xchg jo (bad) sahf icebp dec ja (bad) je lcall ds cmp pop insl lahf imul jg dec mov mov pop or mov gs jl loope inc hlt mov mov push test sbb rolb adc or roll cmp add je xchg in push call dec mov add mov xor sub mov shrb gs into fistl xor jns xor sbb push rcrb inc jg es and xchg mov xchg in notl mov ljmp imul inc daa and pop bound lret mov jbe add das pop sbb mov lods lods push cmp leave test movsb push xlat jb adc cmp push mov aam (bad) adc aaa push and mov or shrb inc (bad) dec jae and loope aam push jnp xor stos in dec lods add rcll push mov fmul adc add push mov mov fidivr push dec xor push loope out cld in dec (bad) fadds inc btc iret fstl sbb add cmp fdivrl add pop and jp sbb fistl sub jl (bad) fisttpl jb pop pop mov faddl sbb ss rorb loope add xchg fimul cmpsl pop jmp es bound jmp out test fsts stos push dec lea (bad) scas icebp test enter jmp rclb dec mov imul push pop pop xor xchg push xor mov outsl pusha ret xchg addr16 rcrb loope fidivrl fdivs (bad) cmc dec (bad) xor mov xchg inc enter lret sbb inc roll cmp sbb cs stos xor aad sbb aas (bad) mov rcll (bad) jo bound in lock push xchg push adc push fs add cmc push mov add fildll ja (bad) (bad) mov out icebp sbb mov sahf sbb orb lret (bad) loop (bad) pop mov in std inc or test in (bad) aaa push sub cltd in dec mov push jns frstor (bad) test add sbb fsubrl mov subb jle pop lods pop push mov test mulb inc rorb lock xor fsts mov xchg stos cs xchg outsl add es or and sub adc add mov hlt push xor loop xchg loopne out test scas mov cld add or fcmovbe iret mov xchg add mov cmp sbbl repnz stos adc inc add andl lods ret pop int3 xorl adc sbb and inc arpl aaa out sub mov xchg pop out out inc add orl sbb xchg mov dec sub and jge dec and add test sbb (bad) lock adc jae xchg sarb mov lods cmp fmuls (bad) je sub push push cli or mov inc mov stc testb mov or dec pop cmc test jl or popf outsb es addl jp js jge hlt push xchg imul jp adc dec pop hlt mov inc cmp pop dec fsubrl and (bad) or (bad) push jmp adc xor cmp or sbb sub xchg xchg stos mov sbb lcall add cmpsl adc mov and pop dec mov push test cld mov inc dec gs inc push xchg fisubrl dec cmpsl stc repz rorb and xchg leave mov sbb adc repz lret repnz dec scas aas or out movsl sub sub add ljmp push adc add ret test out loop pop sub mov rorb pop inc (bad) pop xor fcoml je xor ret rcrl fnop inc (bad) cld lcall inc dec je std or je push jns inc inc insl or sbbb pop sub lock ret lods out push jge imul lret jle cli mov xor push aaa in (bad) imul repz call decb cmpsl aaa jecxz mov add adc mov sub pop les scas jle call negb dec fdiv push aaa dec inc xchg add xor ja cli xchg pop sub jge mov aas in pop or mov insb rorb sub test sub or cmp sub dec add or or bound inc sbb insl out repnz and xor outsb fisubr cmp mov insb (bad) in fstps mov jb cmpsl repnz inc int mov and fldt xor add sbb mov (bad) icebp in aas stos dec pop dec pop (bad) fidivrl sbb ret dec mov test sub add add or add cld mov mov cmp stc add dec fldt (bad) addr16 pop fnstenv mov pop or cmpsb dec pop xchg cmp ss push sbb push mov inc mov push mov add int (bad) jo test lret or je mov push outsb sub inc sahf fnsave das add imulb loopne mov push xchg ds (bad) lock xchg and cmp nop les dec xchg ds xor icebp pop adc hlt (bad) push mov bound fwait adc in adc imul mov mov adc nop fwait lods push inc jp xchg outsl into push and inc inc cmovge addr16 lock jno jmp insl pop outsb pshufw hlt cmp lcall mov setp mov (bad) jge push aas cmp cmp les and cmp pop jg xor push out dec xor or mov add sbb and popa gs dec ret or pusha mov fsts mov jns push dec jae rol movsb call out add not nop sub leave adc aad mov pop pop lret mov sub adc aaa sub pop push jecxz and stc jge mov adc mov sti (bad) jne nop dec (bad) cmc dec adc pop lock jl push lcall and test pop in dec popa fwait cmp lahf in adc les adc mov mov push in push push xchg push mov sbb inc mov loop push nop sub xchg cld push xchg shll and sar (bad) icebp xchg inc fiaddl cs push xor les add lods mov std xchg jno out into xor data16 arpl adc mov pop sub scas sbb ss mov iret jne sub push in add mov push lods aaa cmp (bad) adc xchg sarb (bad) aas inc xchg xchg inc mov pop push repnz push shrb mov popf jmp int3 jne jns inc xor pop stos (bad) cmp movsl jnp leavew les dec xchg jp jne pop out cmp push data16 mov (bad) mov icebp jbe js add stc sbb and lea or mov cmp mov test mov jno pop out dec adc push cmp mov cmp in cmpsl dec mov mov mov icebp mov lods outsb mov or pop pushf pop xor jmp jl nop fstl jns and int (bad) xor add mov repz push in and dec daa lret lret dec and std popa std loope vcomisd cmp fdivr (bad) les ja pop shll push sub inc xchg aaa scas dec ficompl stos xchg fstp outsl sub nop jbe ljmp sbb leave mov add jo pop repnz sbb add rcr mov push mov test jbe mov ficom movsb push jecxz roll lret inc xchg stc and out sbb iret popf andb inc (bad) mov mov outsb lock mov pop or in in repz sbb out pop xor mov push js data16 loop pusha jns sub mov pop outsb rcr adc jo sbb (bad) pop ljmp mov fidiv xor or movsb adc xor inc push xchg scas jae hlt pop loop,pn mov dec out dec mov aad and sub mov lock (bad) pop notl repz push daa nop jp cmp movsl fcom movsl pop jo lock out sahf mov pop stos push xchg add jmp push roll ljmp dec push xor sub lret out push inc dec shrb lahf jg sti jb rclb insl xchg rol jne push cmpsb jno or test cmp es popa out xor loopne cli dec sub add fistpll mov lcall fisubr jl inc pop popf mov jnp fstpl fs dec lods and les adc int3 (bad) mov cmp loope (bad) std jmp mov adc dec or mov dec loopne push ret pop sub insl sub jp add pop test and jbe lcall pop je lsl (bad) rolb and push mov and jp rdtsc xor mov ds mov mov mov xor out rcll lret mov aad mov and ss sub mov sbb lods xchg jp out xor into push lret sbb sub sbb (bad) dec mov pop mov hlt clc push jbe call (bad) lods sbb cmp aam pop add add or std jge push sub push push jnp lahf mov mov xchg sub mov adc roll and pop faddp fdivrl in je (bad) jbe sbb or loope lcall push aad add jmp int cmpsb les sub dec xor mov pop mov popaw ds dec push popa xlat rclb ljmp and dec push aas inc outsb mov pop in and js (bad) add add divl daa adc xlat iret pop cli pushw cmc and jne mov clc mov fnop shrl mov pop fdivs (bad) pop mov add inc pop mov adc imul int data16 inc ret fwait pop mov ss rolb mov ljmp rorl add lcall pop loop dec or push neg dec lods xabort pusha addl fadds pop adc (bad) fdivr cli adc mov mov icebp int3 iret addr16 and dec inc dec cmp inc stos in xchg ja jge in or push loope dec sbb push cmpsl jne scas ds jo mov lds dec mov fisttpl leave mov iret sub out push cs fistpl or decl push insl mov js pop sub pop ja push repnz (bad) (bad) in addl call das mov clc out xchg lds mov adc scas adc pop js inc mov add setg ficoml add sarb adc out ret xchg ret and cmpsl adc insb test les fisttpl mov divb pop sbb sti mov out jb cmpsb inc mov sar cmp lods movl loope icebp and lret outsl cmp mov sub sub push mov add out sub je repz mov lcall jae pusha xchg xor and mov or stos (bad) jle inc mov mov iret jo clc dec cmp mov pop lcall sub (bad) jb stc xchg data16 int3 or pop sahf leave cld inc mov cmpsb imul or add iret aam jno call dec jno dec pusha ja and hlt sahf jae test cmp fcomps hlt xor je aas jbe sbbb sbbb lea add adc sbb fistl (bad) mov ficoml dec rcll dec in xlat xor mov lock clc addl call mov mov sbb or aas test movsb pop leave inc xchg pop pop arpl and jmp jbe in sbb mov imull xor cld pop add jecxz push mov pop test iret sahf in into jge lahf movsl sbb popf (bad) pop adc mov les stos pop stos xor and mov hlt cmp lods mov jno jne mov cmp mov push cmc loopne call mov cmc pop xor ds ret and enter test aam inc adc push xchg jl mov pop adc sti stos xchg push cmp ja and mov jae in int sub xchg inc (bad) dec xchg (bad) sbbb outsb mov dec mov loop adc xchg ret cmp sbb pop mov mov test push sbb xor sub int cmp jo jb lods inc cmp pop inc sbb icebp les (bad) loopne das cmp push xchg xchg aad mov push (bad) repz pusha mov or int test mov adc cmp mov dec call out hlt shrl lahf insl sbb and stos (bad) insb jl cmp push or imul sub outsb push jae pop dec xor or cmpsb xchg adc dec lahf jbe stos cmc in (bad) clc sub nop xorl mov jle push sbbl into mov (bad) cmpl sti outsl sub dec sub jle test and clc test daa ljmp push mov jbe push pop pop fld dec (bad) int sarb inc cmp and es jb mov andl (bad) add lahf outsl pop sbb scas fprem1 sbb add jmp outsl dec pop (bad) jg xchg das adc repnz lock or test test insl sbb adc add cli xchg rol cmp mov ja sub in adc mov inc lret test test mov enter fiaddl (bad) daa pop and mov xchg vpxor pusha mov std jno lds push jb (bad) pop xor lret dec inc sti lret mov rol inc mov adc mov jle (bad) pop gs pop lcall push adc pop int add incl mov fadd mov test inc jmp push xor out xchg add adc sbb sub outsl (bad) cmp ljmp and add fwait pop xor dec dec (bad) mov (bad) mov add pop daa xchg mov mov jnp (bad) fdivrl sub (bad) cmc cmpsl jmp (bad) xor stos daa xor adcl or lahf dec jge jg add push cmpsb and das (bad) js push push (bad) stos dec mov inc or (bad) jns insl mov jns lahf xchg and jo into int3 imul cs push mov jb loope movsl mov mov stos lods dec ffreep mov bound and mov in divl clc push and in lahf push pop inc pop adc pop dec adc fcoms fdivrl ret gs dec cmpsb in or push inc aaa or aaa sti pop rol pop lret dec pop ret mov pop fmuls imulb out popf sub aas mov or sbb xchg in jno push in and cmp sbb in test movsb je sub addr16 call or aam mov (bad) out imul repnz dec and hlt aaa sub test (bad) jge iret and mov das pop and out inc insb ret jbe sbb mov sbb jbe mov inc iret repnz add and jb stos cmp lods mov pushf incb or push jge mov and adc imul fsubrs inc push sbb add scas sti cmp pop pop xchg insb cwtl mov pop rcrl or sahf lods je aam mov xchg mov mov inc dec test rcll add lock sbb and call rcr jmp (bad) (bad) jbe packsswb adcl pop push aad cltd and push jp mov jmp push hlt push enter stos dec les mov and js mov cltd cmp mov cld ret insb pop xchg popa adc clc dec and pop xchg mov lds int mov and lahf sbb or or sbbl fs add mov loop adc outsl sbb dec jl cmp jp aas add enter add push shr frstor dec icebp cwtl lahf adc inc jmp fwait cltd mov (bad) xchg and xor inc sub adc mov dec cltd cli xchg stc js adc adc (bad) lds xor mov fsub int aam sarl das add dec jnp xlat ja lods mov sub bnd cmp shlb adc cmp inc into jbe xchg fildl (bad) or sarl push adc sbb outsb das (bad) in jnp adc jp pop ja pop ja pop and arpl xchg pop or inc xor andb pop std dec daa cli cwtl dec xchg mov (bad) int sub movsb jg shlb push sub sub popa mov clc fucomi fwait push stc xor inc push aaa jle test xchg in pop mov popf mov decl or imul sub pop mov stos mov or cli mov outsb push stos imul mov mov test push gs fwait rolb xchg bound pop dec data16 xor stos scas xchg cmpsl scas ret mov sti (bad) xchg out mov xlat fwait sub lret xchg out bound insb push adc push fdivrs xor pop mov rorl sahf push ja pushf imul call imul sub (bad) jne sub mov inc stos aad sbb rorb pop push jl xor or push jbe pop jns push or cmpsb imul pop std xchg lcall push push pushl loopne adcl imulb adc into xor push (bad) adc mov lret pushw mov daa mov sub popf ret imul push rolb mov sbb andl push mov sbb dec adc pop mov mov mov sbb aas sub push cwtl mov lretw sbb xor cmc add and sbb mov ficoml cmp arpl and cmp aas loopne lcall add jno (bad) stc jg outsl cmc inc mov sbb into push (bad) leave jl mov push rorl jg and dec cld std ljmp xchg adcb push cmp dec ljmp mov icebp aad or sub out adc fimul sbb in fisub stos cltd loopne cli fmuls mulb je jb iret mov call sbb testb mov mov cmp sahf js sub inc sub (bad) std icebp repnz and pop daa add jge testl cmp ds or aad dec test pusha mov cmp sub jo push push mov les dec mov jb push addr16 dec inc mov inc (bad) cmpsb pop adcl arpl lock mov mov xchg (bad) fdivrs lods aam icebp stos bound adc iret popa mov pusha mov (bad) xor scas hlt xor mov pop pushf add dec adc sarb (bad) xor jmp mov xchg sbb sbb movsl clc insl aad popf adc paddusb push mov mov cwtl jmp (bad) inc or sbb out (bad) lret pop xor pop sbb jo or xchg inc pop mov xchg cwtl lods fmull add aas xchg xor jp negb sahf jno stos mov mov js insb mov sbb sbb cs mov add push enter je xor cmpsl lea adc xchg aam (bad) jo cmp push xlat lea xchg or push sahf pop and dec push int3 and pop inc inc lods lods and mov mov jle inc xchg mov xchg ds mov shlb add ret out xchg daa leave (bad) and inc sub nop arpl shll movsb push mov iret mov scas jne stc or pop jnp arpl cmc aad mov cwtl and sub adc jbe test add mov icebp mov dec cmpb add scas pop addr16 mov aas out insb jmp mov push sub popa int popf mov shlb mov lret aas bound xor mulb add pop aas lods ss out jne sub jmp mov fistpll rorl out lds js xlat pop loop inc int3 sub ja pop outsb cmpsb (bad) jg clc inc insl xchg mov test mov (bad) jae pop daa negb mov shr pop pop mov and out pop (bad) mov movsb jmp mov sub sbbl jge movsl pop sbb (bad) adc inc stc stos cmpsl sbb sahf cwtl stos shll or mov js mov cmc ret mov adc ret sbb test jge mov rcrl push jg xchg std adc mov mov scas mov hlt pop mov xchg addr16 push push lock loop dec and jns int push leave mov adc pusha jecxz pushf inc xor lahf xchg hlt pop mov cmp xchg incb sahf sbb jecxz aaa in adc mov and lods inc mov and cmpl dec add out cld cmp or mov aas int3 push das push lds adc or or jb dec out (bad) out leave push iret cmp pop or pop mov adc xchg dec cmp mov jmp pushf jo cli mov nop pop push in (bad) mov (bad) sbb aad les cs push push mov imul pop pop jecxz jne imul test mov mov icebp addr16 cmc jmp inc push pop jo lea dec sbb add fisubr (bad) int xchg mov addr16 call loop test lods pop jmp add adc cwtl call aad jge jne cmp xchg sbb sub push cmp jle sbb xor push mov mov push int (bad) fidivr jle pop in pushf xor aad xchg inc and adc aad int3 push outsb jecxz cmp sbb inc or mov fstl ss std adc divl lahf pop cmp lock fisttp sub sub dec push mov rcr out mov jge call xchg fs mov andl adc cmp popa jbe add nop hlt add adc fldcw xchg idivb ljmp (bad) leave nop mov je rorb inc dec sub out (bad) inc sub (bad) or cmpsl cld dec jbe jb push les pop jp addr16 xor (bad) xor jecxz or aad cmpsb mov sarb jecxz mov pop fucom out pop pop adc lods test repnz mov jg xchg loope jmp add ret stos pop push xchg sub popf pushf loope rcll mov scas bound ret out vandpd mov aad lcall pop andnps jg dec daa loop je popf daa sbb sbb popa das mov inc mov mov add and adc mov mov xor cmpsb or cmc into push and cs pop dec jno loop stc xor jbe in in mov xor dec xchg pop pop inc pop shr ja sahf mov pause std ret dec scas ss lcall inc xor pop sbb jl mov mov out inc dec jae in aaa inc mov hlt mov mov aaa rolb popf cmc push fdivp add lret aas lock jnp or repz sti mov push jbe testb dec popf enter mov pop sbb (bad) int fbstp push mov rorl stos std jge mov push pop push decb je push push test xor loope add dec xor pop adc cmp xlat pop int jge subl andl ss adc push std neg lods adc mov xlat mov cmpsl addb outsb push jno add out inc test ja inc add pop movb push inc test std imul das cmp loope mov popa fsubrs fdivrl jge lods jne ja mov daa pop (bad) or add inc into lods xchg aam out popa scas gs outsb faddl inc cmpsb and das jp fsubr pop out cli fxch mov adc inc push test es gs adc fcompl xchg lret loopne inc jbe xchg sti mov dec cmpxchg pop cmp fdiv test xor pop xlat jmp call call jge cmp adc aas or test mov dec mov xchg (bad) repnz mov push push jns sbb pop inc dec fadd call jmp cmpsb and stc outsl pop repz fisttpll loope adc ret out dec xor es xchg jae jb (bad) sub push in fistpl adc inc leave shlb push adc es jo mov imul outsb inc ret stc sbb and scas xlat adc js and jp daa or sbb mov pop xchg (bad) daa ret cmp bound xchg repz stc js mov popf sbb or jp ljmp jge aas adc or dec rcl or sbb pusha imul fst aad xchg lcall scas test dec repnz mov movsb movsb jmp loop mov jge sbb jecxz push push imul mov sbb (bad) dec mov punpckldq jp add add in test push outsl gs jl cli jle sub inc push pop cmp arpl xchg fistpll sub mov enter insb fadds push adc xchg lods popf xor (bad) test js out gs mov sbb xor shrl push je push out pusha mov stos jo cmp dec dec in add (bad) jnp pop lock and dec mov fld mov and out popf xor or xchg fldl repz or (bad) jecxz sub popf js sub test jo movsl jl dec lret xor jns mov and and idivl rolb mul xchg dec in or inc push or cmpl cmp les dec sbb loop sbb hlt jge scas lret ret or sbb mov adc sub int imul test std icebp adc cmp mov loope mov pop mov das fsubl add mov out imul add xchg mov xchg iret (bad) jp std sbb repnz inc xchg lods sbbl xor sub mov push jge rcr inc packsswb shl outsl mov pushf or xor pop popa jmp in data16 push ja std mov jb push (bad) mov dec imul mov inc or ds out jns loope,pn cmp mov int je push icebp pop sar shlb mov xor sbb cmp inc inc jmp push mov test pop frstpm(287 cmp jl or jo idivl mov cmpsl mov dec ljmp cltd (bad) out mov jne jl cmp cmc fcompl outsl test in loopne dec push neg and in push xchg inc enter test lods sub or and (bad) push cmpsl frstor cmp stc xchg lret dec pop and bound scas pop lret add sbb dec xchg lods pusha enter faddl aam cs lahf dec pop cmp aad sub test sub stc insl outsb mov jno icebp push icebp cmp sub push jl pop (bad) gs inc mov dec sub adc (bad) ret xchg dec rorb or stos sahf pop fs int add es insl mov mov pop in pop push lcall dec push adc aas mov aad adcl movsb scas test repnz fs shrl push pusha (bad) outsl pop addr16 or call mov sub in test cmc movsl push cmp sbb adc mov data16 fiadd dec lcall sub cmpb mov out fnstsw add and lret (bad) repnz mov gs arpl xchg xchg xchg fsubp push stos mov sbb les inc sbb enter dec (bad) and sbb imul out push stc scas xlat mov adc mov pop jae or jp push push cs cwtl or lret xchg stc push and jge daa int imul (bad) fistl popf xor jnp (bad) jno jmp movsb in mov xor pushf bound scas lcall mov push lods mov inc in out lcall jo mov fadds aaa aas jecxz cli das push push lea adc cmp jno jne mov push mov xchg and inc push and pop add cmp xchg (bad) sahf jmp test (bad) out push rorl cmpb add cld jge mov add sub inc xorl lock jne add repz jmp and addr16 sbb in push sbb jbe je mov in add add psraw in sti sub lahf or leave inc push jno jbe jmp lahf test in adc mov mov imul pop shl in push and jecxz jg and fsubr seta cmpsl push push pop sub mov mov sbb mov xchg out mov call mov push movsb lock xchg es cmp cmc test rcr clc test xchg shrl inc push mov adc scas dec (bad) in bound shll aam adc aas or push and jle mov stc pop add sahf fistpl fcoms call jo sub jecxz push (bad) je lret pop cmc lcall jmp xchg stos mov jbe pusha sahf dec pop inc xchg aam pop sub xchg fisttpl pop jl test cmpsl adc int3 or pop mov ja jp jle bnd jbe cmc push adc push aad xchg sub jmp xor outsl xchg mov mov int3 movsw popw fwait scas stc mov sbb js (bad) mov mov inc loopne frstor xor rorl inc adc arpl dec jmp fs inc cmp mov inc xchg mov or and push outsl mov xchg xchg std pop mov mov xor cmp orl sbb lea cld mov testl or mov jp test or arpl xchg mov or inc xor xchg cwtl cli xchg jae mov fiadd or inc pop jg xchg mov push cmp sarb or sbb xchg stos popa xor xchg and out sbb scas in mov mov in pop push xlat andb pop ret sub mov inc pop mov cmp push (bad) insl repz jnp mov inc jl xchg loope xchg lds jae pop mov hlt sub and jle mov cmp dec mov push in inc or test aaa sbb scas inc pushf js xchg (bad) sbb push movsl cmovo and nop mov sbb outsl dec lods flds aad push test jne pusha dec mov popa das dec adc add pop push daa jae bound add xchg adc sbb inc jmp push jg js mov fisub cmc addr16 lea mov adc fs dec int3 gs inc rcrb in ss leave or push push or sub jl fs mov scas lds jg es mov arpl sub push addb pop xchg out adc adc (bad) jns sbb insb and (bad) pop ret ljmp fisubl rcl (bad) mov ja cli xor xchg daa or dec clc adc add mov cmpsb jl mov mov mov fisubl aas hlt fisttpll jae fcomp adc (bad) stc cmpsl sti mov xor inc sub jnp adc adc xchg push jge movsl adc dec xchg aaa loope (bad) cmp bound add xchg lret (bad) xchg sub dec push xlat ds arpl cli fldt ss pop leave inc push push movsl mov into push mov scas repnz imul sti add adc mov popf lret lret and adc mov imul lret bound cmp icebp xor inc xchg and jle mov xchg cmp sub test mov scas in popa mov dec push shrb jle push jge or out loope pop gs sub outsb or mov lds (bad) mov and jbe cmp inc cli add xchg and jl std sarl xchg imul xor movl sahf or hlt shrl pusha push arpl negl fistpl dec adc out mov pop dec rcrl add sti lret mov (bad) arpl movsb daa pop negl das aad ljmp push xor xlat out or adc dec and add daa fild adc xor (bad) in ljmp and cltd xchg popf sub jnp cmp aad ljmp repnz cmp ss xchg aas mov xor (bad) out mov jp mov pop xchg inc xchg cmp sub ja or scas (bad) push mov xchg cmpsl pop (bad) loop rcr jne push dec push cmpsb lock das push and incl lret push and add sbb jp lret lds scas in mov and shll sbb jb cmp jns push dec mov cmpsl popf jo popf les mov add push (bad) sub cmp mov sub sahf sbb cmp or nop pop jl lock push sub subb and mov std jle je sti gs push imul fwait cmp sub push mov repz dec lret push cs lcall inc inc (bad) lcall out jnp sub outsl mov mov xchg sub out mov (bad) sti cmc sbb sbb pop call dec xchg test jb js pop cmp or pushf icebp mov add rcl mov jp in outsb pop sub dec jbe daa fistpll dec add pop out repz test cli jno or and movsb pop and stos mov mov fildll sub fdivp mov data16 xor xchg negb clc or mov pop jae (bad) hlt xor jmp jp in imul cwtl xor js pop int3 aam pop mov jle xor out pop fimull jbe (bad) inc fnsave or pop mov fcompl int3 out jle lret sub mov lret or fimull push je xor adc aas test sub notb add cs pop test pushl int in leave outsl call inc mov mov pop aam movsb xorl repz cmp sbb pop jnp sub dec xchg jmp into and dec (bad) adc cli fidiv inc movsl fistpll xchg rcrb xchg fmull je iret int in push or pmulhuw xor cmp jns hlt stos cli cmpsl popl aaa jo cmp push aam sti in xor sbb shrb cmp pop fisttp fwait xor sarl ss sbb xchg pusha (bad) xor out cwtl mov inc xor sbb mov imul mov iret data16 test inc sub sub inc inc test xor xchg or jle adc enter lret cli test stos stc push or xchg add out inc adc enter leave fldl int3 ret mov xchg adc cli mov aad mov lods dec jle or std sub cmp and push nop push push rorb std andl mov dec jno fs clts enter notb pop mov or push leave dec mov inc mov cmpsl mov mov mov dec cmp mov fs mov add rclb mov sbb push add outsb loope sub add lret add inc jp (bad) jno (bad) xor insb push jge (bad) xchg push pushf pop push leave xor insl adc leave inc inc sbb or sbb stc repz in jae pushf cmp popa lods in xor mov cs xchg add and xchg insb xchg pop hlt dec stos inc movsb lods mov mov add movsb dec cld add xchg pop (bad) dec insl xlat mov mov bound shl sbb rcl and dec mov xchg data16 pop inc popa adc add inc int3 nop xchg lods dec mov in les pop idivl dec dec pop nop cmp outsl mov std mov xor daa subb xchg jp pop jecxz roll fsts int3 lahf int3 outsb out sub das popf in loop adc int adc loop push push out or lahf bound call jno xchg outsb push add out mov pop int3 push les sub out push rclb cmp add jns fdivr mov ret (bad) cli cmpsl jmp jbe movsl popa fbld (bad) sub xchg sarl dec out add adc cmp fnstsw sbb ja int pop pushf mov movq or add jge mov in popa (bad) jno nop fnstenv xchg scas xor fwait (bad) out push je xlat push cmp or add subb mov xlat sbb jnp pushl fistl xlat jns adc stos sub jns arpl outsl sbb sub and mov adc xchg mov addr16 lret sub hlt mov adc (bad) (bad) pop dec je in mov mov bound fstpt or xor jae xor lods sbb test cld xchg or jae adc mov or fadd mov aaa xchg data16 jp mov jp nop out xchg xchg gs cmc jne clc subl (bad) sub cmp sub add cwtl aad cli pop (bad) add push mov adcl xchg dec or xchg pop mov cmp pop jns imul pop fdiv sub jl stos cmp je repnz xor (bad) jmp pop mov jb jp andl pusha movsb lahf clc add in inc push test cli (bad) mov cltd (bad) jbe stc addr16 (bad) mov inc sbb movsb push iret mov iret sub mov jbe lret fsubl push mov rcr inc cmp out sub cmp pop jno pop adc inc push add movsbl add or outsb in cmpsl cli sbb lret pop mov xchg stc pop popf mov mov ret vmulpd xchg pop aam mov adc or cmp pop andl outsl je movsb out xchg cmpsl lcall ficom pop mov lds jge sub pop daa sub dec test into mov into ret lahf (bad) fsubs push cs addr16 or adcl fbld cmp lods lods dec (bad) (bad) sets jno scas add cmc cld mov xor pxor fstps sbb mov lret test lahf fwait and popa xlat and mov inc push push (bad) push and fbld mov adc das frstor out add bound sub sbbl jmp sub or fs test xchg cmpsb mov inc cmp dec adc test lahf and jg mov es out lret mov xlat sub mov dec mov (bad) pop lea stos push xor scas stos pop in cmpb sbb add xor pushf int (bad) sub test pop mov dec jmp jae xor cmc sbb jmp xor sub (bad) xchg or dec js push inc xchg xor xchg mov ss loope mov xor jb inc cltd mov inc and jle jmp mov xchg fisubrl fcoms push movsb pop (bad) addr16 subl push jp sbb repz and sbb aam push mov imul sbb dec mov cld sbb jl lock jbe call push sub xor lea adc je bound pop ss out mov pop sub popa mov pop cli mov fdivr mov (bad) cmpsb popf mov stc loope hlt xchg cmp push icebp roll pop (bad) mov out popf icebp push (bad) jae lret mov mov fbld lret popa dec cmp push inc lret adc clc add idiv xchg jno cmc addr16 sub cmpsl test add jae mov or cltd sbb popf dec inc dec pop mov push adc pop jle adc aad fstpt dec jle mov lahf push mov loop dec pop push mov sub into lods inc cwtl cmpsb movb call xor xchg imul or fnstenv push sbb mov mov adc cmp add test mov sbb cltd sbb rcrl pop divb imul ljmp inc std les inc pop adc orl loop hlt or inc (bad) dec (bad) sub out pop (bad) mov mov test lea cld xor sbb test jbe std test adc sub scas mov pop int3 frstor or jge enter push pop mov and push add jmp test push push cmp dec mov adc jge add out sbb in std dec fcmove into je icebp mov push lret and leave ljmp cmp jecxz insl mov mov adc or fisubr xchg jp cli mov dec push mov iret pop push mov loope mov leave fimull inc or pop (bad) aad repz ljmp pop mov or cmpsl popa xchg jmp loopne push xchg push cmp push out insl jb,pn rcll (bad) test in jp pop pop pop inc fninit sub cltd jmp das aam mov icebp sbb xor out fcompl cmp mov mov adc adc adc mov ljmp js mov add add (bad) lock test sub cmpsl pop imull xchg push jns jnp ja sub pop sbb jmp loopne rolb (bad) adc sbb xor mov push scas inc sub pop xchg pop sbb dec push popa scas mov jge adc add push jnp xor or les or rcrb jns fbstp das inc xor sbb lods adc mov xor repz mov in cli mov sbb sbb push mov mov lea mov mov data16 push inc add inc cmp mov enter lret aam mov xchg ds mov sahf xchg gs jne jmp push jb mov mov mov jl xchg xor popl imul xor mov sbb mov (bad) fild out add (bad) sbbl fistpl mov data16 inc mov mov push movsb jge xchg push cld xchg loopne test and inc push stc push xchg adc cltd pop test sub pop loope pop push data16 dec fldl cmp lcall or scas jo movsb pop call imul inc cmc jnp sti stos rcr or stos (bad) imul rcr add jb adc stos sahf mov call das fist push xchg sahf movsb fwait jo xchg mov sub pushf (bad) int3 mov push dec movsl fmull cld xchg orl adc jl loop repz and xchg shlb das mov pmullw hlt inc clc sahf adc adc or mov cmp and and inc pop sbb push dec mov mov loop push dec stos lds mov sbb loope das adc mov fidivr fistp ficoml pop pop sahf sub sub shlb push inc js ja jle in lret or sbb xchg xor notl aad sub pop sub mov loop mov push dec inc rol or mov stc cmp xchg xchg inc xor adc mov mov pop inc jne mov into test js push (bad) mov sbb fiaddl jae sbb insb mov inc cltd jmp xor gs sbb cs lret mov mov in jg pop enter lds jns sub xchg pop out push rcrb stos and fnstsw push jae add cld add or add push mov les mov pop or lcall adc jle popa jo push ds sbbb sub imul jns repnz hlt popf or sbb jae pop fiaddl aaa nop popa test adc xchg adc push push negb sbbl xor addr16 ljmp jne push xchg adc bound fnsave mov xchg pop das addr16 out mov int mov or or adc repnz (bad) mov sub jecxz leave insl repnz mov cmp loopne mov sahf bound and sub cli ror mov inc movsl mov mov clc pop and jb loop push push xchg loopne and fldl es jbe jb pop dec shrb cmp stos lds (bad) into xor mov mov shrb mov add ja dec or mov sub jo pop mov cli (bad) push test dec lock xor mov dec add inc cmp insb push xlat jl lds cld and dec sti sbb fnop cmc xchg sub (bad) cmp pop xchg out inc dec fstps xor ret inc jne adc mov and icebp into jns dec mov jnp rcl cld ja out fsubrl int jmp dec or inc add mov outsl mov hlt pushf aad ret cli icebp icebp mov stos mov dec pop (bad) lahf or xor inc rcll and repnz fild scas mov pushf mov popf (bad) rcll and or aaa or xchg inc jns sbb mov pop ret cmp pop sub scas or sbb xlat aam rcrl jo fs or daa dec fcompl loop sbb (bad) push scas adc adc cmpsl add stos int3 add lods lods sahf or push fs mov into push in popf addr16 mov xchg (bad) or and popf (bad) dec add dec insb xor jnp addr16 test outsl push adc jae mov hlt ret test addr16 sahf fistpl and sbb stos push movsb pop jecxz lock imul int3 imul mov aaa daa icebp (bad) fstpt js cmc sub push mov mov and into sub sub stc scas nopl inc idivb std arpl push xchg mov jno pop ss enter jno add or gs adc ljmp adcl je (bad) sub and sarb test es sub push add lret das and push aas push dec xor sub (bad) cmp sub push lds mov push les aaa loope xor cs movsb into in lea dec out inc jo sbb test or test cmc add mov out stos test cli test popf ret arpl inc fistpll mov xor loope jmp movsl (bad) incl lods lcall sbb out add lock pop iret cmp xchg adc and stc (bad) outsb mov push rcrl mov pop dec nop xchg xor lods mov in mov sbb mov (bad) and push orb imul sub mov lahf insb sbb adc pop and lcall cmc out mov xchg (bad) in or push cmp fimull mov xchg lods (bad) (bad) mov dec lods arpl jae icebp mov pop pop (bad) lock jb pop xor push incl (bad) loopne loope pop ljmp inc sub xlat outsl es sub (bad) mov mov dec dec jb mov cs aad cmp (bad) fisttp jae inc jbe dec movsb setle pop push dec sbb push insl bound push popf stos mov xlat adc xor cli je loop pop (bad) jle pusha pop nop sahf sub or mov push xor or push sub pop jb outsb pop popf and jns movsl lea roll cltd (bad) adc aam jle mov xor addr16 dec daa inc pop mov xlat cmp add mov cmp push daa xor or test stos and push mov stos (bad) pusha stc xchg push xchg test dec fdivrl je outsb aad cmp insb ljmp mov mov xor sub dec ss cmpsl pop mov pop dec mov gs add pop (bad) xor stc call loop add jg xor mov imul dec xchg frstor sub push mov xchg rolb mov mov push jmp xchg lods xor pop mov mov mov adc aad movsb aaa inc jmp xor test mov je stc mov xchg or arpl add scas outsl test iret sarb sub jbe aad adc and and call ret mov sbb adcl imul jne xchg mov loopne inc mov mov jne adc cmp ljmp fyl2x jae or roll lahf fdivp jnp pop cwtl clc inc inc pusha fwait js sti (bad) popf imull ret push push sub and cmp divl mov int test xchg cmpl clc fucomip jne pusha aas (bad) xor insl outsl dec sbb test in dec sub fisubl fnstcw cmpsb lock (bad) cli adc pop insl sbb and push outsb imul xchg mov jo mov mov and pushf mov push or push xchg inc jbe xchg add pop dec mov repnz mov (bad) jb jg xor inc scas movsl std fiaddl cmp std sub jecxz into jmp jbe push mov cmp test ljmp dec imul nop fildll xchg mov or xlat mov jo test rol imul scas pop pusha xor pop pop call ja inc rorb pop pushf enter call lods outsl es xor imul push mov rcl sub repz push mov and (bad) lods mov loope sbb sub fcoms (bad) mov pop xchg cwtl out and popa mov push scas jno dec imul jo test lock push mov outsl ret dec pop dec sti rcrb push and xchg out test cvtps2pi push add cmpsb inc (bad) mov aam mov mov into pop divb nop xchg sbb jae xchg mov xlat enter (bad) std movsb es icebp add fistp icebp out jae or mov movsl mov mov stos xor add jb push jb mov pop imul pop or leave jno and or popf add lret int xchg (bad) xor mov sub sbb adc and (bad) int3 scas subl rcrl outsl xchg loopne pushf mov loop pop sub add adc xchg pop fucomip jnp cwtl lods cmp pushf dec in es push push inc mov cmp (bad) dec nop movl notl ficom pop jne (bad) in mov hlt add mov jmp insb pop call jge mov pusha nop sub mov cmp push movsb imulb out inc gs idiv arpl push fs push insb mov mov lods repz in mov pop mov scas inc jno fwait aad mov clc mov push mov xor pushf or ror xchg addr16 pop jb sub and pop sahf dec das imul insl mov insl mov cltd add mov add (bad) dec mov pop in push outsl icebp mov mov dec mov xchg out push sar test insl cmpsb js sbb hlt iret test ljmp pop inc sub or iret pushf jbe out stos sbb nopl ja daa arpl ja adc jg sub (bad) js jae pop fucomip jb int lret sbb int3 push mov mov movsb fdivr inc adc mov mov jle movsb sub jecxz ret sbb jmp (bad) mov (bad) xor pop push sub xor sbb dec addr16 sbb mov movl mov imul xor aam pop stos andb daa xchg in ds in xorl mov cmp repz sbb mov and mov cmp mov sahf jne jl jnp push daa or in xor fidiv or and or (bad) cli mov mov inc ds scas fwait mov lds pop shr imul in pop cld dec (bad) fisub dec mov fistpl xor mov push aaa jae movsb pushf (bad) imull ret loopne outsl rcr mov pushf xchg std (bad) pop sub sbb lahf cltd jb mov xorb in in mov fld ret lods inc fcomps data16 (bad) cld sub push and inc dec in outsl test pop mov or les jae xor cmp pop (bad) adc mov adc cmpsl loope imul mov mov (bad) and iret push loop cwtl stos mov push lret fild aaa add cmp sbb leave sbb push push ret inc sub jp sarb cmp and out fistpl inc and pop dec mov in xchg mov cmp (bad) or sub or pop jecxz popf fldcw adc push mov cld inc fiadd bnd xchg imul mov lcall mov data16 lock js outsb push out mov xor push jmp in js xor insb jb xchg sbb popa xchg or pop iret jno sti adc adc lods push movsl and or fnstsw dec cmpsb xchg daa sahf and dec jmp mov jb mov mov jle jne sub insb (bad) int3 lds repnz xchg and arpl sub fistl adc xlat arpl mov pop fs and lock jmp sub xor xor push cwtl cmp outsl jbe or xor xor aas jno mov xchg sbb mov mov dec outsb mov mov mov push and (bad) mov xchg ss sahf std add nop cmpps in ss dec dec lret dec push cmc loop lahf fsubs repz sbb mov inc (bad) and scas add mov clc mov js das neg arpl mov adc aaa mov jns push std dec sub movsl js fadds je rcr mov inc lcall add movsl outsl mov das out jno jg arpl stc (bad) mov xor inc cmp fs add xchg jecxz in xchg add mov jnp stos xlat sbb and js xchg cld ret push mov dec loope loop movsb (bad) out pusha jge push adc cmp sub shlb enter xlat xchg ljmp inc push out outsb addr16 adc cmpsl pop ret xlat aad cmp seto daa lea mov mov dec mov cmp insl mov std clc lret lret mov sarl ret aaa jne nop fnstcw jno cltd test mov push mov mov je sub sbb imul iret test pop mov outsl fild push pop movsl aas mov add insl pop mov lret jb popa and cmp fmull xchg xchg sbb hlt fwait mov mov adc sub pop jno bound add mov cmp in cmp xchg orl inc addr16 lea leave push lods xchg aas inc push mov cmpsl pxor pop jno mov out (bad) scas xchg sub sti adc lret adc aaa cmpsb adc mov jne mov ret cmc or lcall fnstsw lds inc cmp mov (bad) mov adc adc inc sahf xchg sbb adc int dec test stos aaa into je ds popf mov cmc xor fisub cmp decl xchg stos add fcoml out or fucomi imul mov add mov int arpl push loop add insb mov and test dec movsb or sahf pop inc mov pop test push int icebp stc sub dec int3 mov loop addr16 dec icebp adc fnop push lahf out sahf mov insb sub push xchg jp decb dec jg or insl daa mov and arpl pop add lock or mov jp andb (bad) hlt (bad) mov fisttp divb jmp cmp cs fisttpl dec mov jmp ja arpl pusha jecxz jo fmulp xchg cmp pop sarb psllw (bad) push mov lds inc xchg ficompl cwtl xor arpl jecxz movsb enter test ret repz fs mov jo movhps out ds out pop pop je and es ret fsubr bound and jge leave lds push sbb mov icebp sbb and mov (bad) les xor sub or cmp ds int inc clc lret jp jne push dec iret sub pop pop cs (bad) mov mov mov ret sbb mov jmp call dec xor jns in enter nop push jae repz push and in nop orl and sbb lret cmpl adc and adc pop lret insl or adc sbb mov pop repnz popf gs mov (bad) sub mov and sub ret cltd inc xor aam imul cmp cmp fwait mov arpl in mov mov adc sbb xlat sbb push iret pop mov test inc pop inc sub jne movsb loopne push sub nop cmp mov mov (bad) outsb pop cmpsb bound mov movsl in call out fcoms cwtl xchg imul test pop push ds push push mov push ja cmp sbb or and jae fistpll push mov push mov insl xchg jmp mov sub ds jbe adc mov sti mov test lods add sbb fwait mov mov pop pop sub vunpcklps or mov dec push inc mov or aam sub sub dec rcrl sub popa dec dec das xchg xchg add inc loopne enter cltd push ljmp mov fidivr mov (bad) fwait adc rolb (bad) adc inc xchg mov pop xor sub sbb xchg and add (bad) mov ret push aas mov inc mov cs push out stos data16 test mov fsubrs std jp jns add daa xchg into adcb mov lcall movsb test lcall push ret es mov inc pop mov mov mov pop std test mov xor cmp xor hlt imul adc xchg repnz imul mov enter outsl in xchg cwtl push dec dec jg xlat test push or push jle xchg (bad) pop mov movsl mov add das inc pop dec xor push push inc lret push push xchg xchg mov jmp and dec mov sbb in mov push pop mov ucomiss xor (bad) ss sbbb aad sbb cmc hlt cmp nop xor jae in shrb rorb imul jns fwait cld jae or xchg jle inc pop adc (bad) hlt xor mov pushf cli ljmp les sub pop pop out rcll or ret mov loop out sbbl and jb ss int ret mov or repnz out and and sub jae mov or sub inc pop mov imul fdivr cs sub int3 dec fstl fisttpll inc cmp dec cmp les push jb lahf inc mov vmovhps int3 push out es push cmp cmpl cli inc jns lods sbb pop int push jno (bad) pushf enter inc fildll lahf cmp push lock in pop mov inc cmp push cmp xchg (bad) stos xor inc pop jl mov data16 outsb les mov xchg mov in arpl or mov bound scas mov test mov inc add addr16 insl cmp adc sub xchg fsub (bad) out and xchg int fist xchg dec loope sbb fiadd and icebp pop test mov addr16 cmp out mov adc pushf adc les (bad) popa stos arpl mov subb push jg scas add sub xor adc jae mov test push pop rclb or pop and js or in dec sbb xchg repz (bad) xor push sub xchg stc and and mov jp test or sub push mov or pop sub fsub mov and clc inc inc jno ljmp mov test stos in add push jno fidiv insl mov add push cmp lods nop test cmp imul xchg push dec mov cmp or arpl adc sub outsl jp xchg cmp mov nop fcmovbe out adc in sbb test and lock cmp sbb cmp test imul jb push sbb add aaa sbb arpl gs ja mov jae shll jle or mov pusha fstpl push push cmp leave dec into repz mov out push cmp mov ret ds hlt jne add cmp pop add test std shrl or push shl test test int3 cld push lods mov or xlat js xor lret aam rcrl mov ljmp dec pop das cmpsb pop sbb int movups aad mov jl cld jl fbstp cmp mov int ret stos lods sub jo sub mov lcall push cmc iret stos adc jns sahf fs outsl lock sti pop jge ljmp or in nop out jo and jecxz test fcompl and aas mov out fwait inc and or enter ret lock dec or ljmp push hlt and adc sbb in xchg push in sub lods mov xor xchg (bad) pop fsub outsb jno adc push cmp jl sub data16 loopne in mov inc jl lods mov enter movl arpl negb lsl sub lcall les popa jns aaa jae cli mov sbb pop repz mov insb in fcmovnu into dec sbb data16 fs sahf mov sub lahf xchg xor popa pop in xor mov jl cld rcl pop nop ja mov sub fisubl pusha mov rcl adc and sbb mov xchg int test out sbb mov and mov fldl2e nop arpl test add inc out jae and pop js push jp mov lahf scas inc popf pushf mov movsl fbld xor push sub sbb fimull lods ds cmc pushl mov js lods out mov and hlt movsl mov or or cmp mov inc xchg js (bad) cli fwait shrb fstpl les fisttp fdivrs pusha push pushf mov xor add insl sbb (bad) sbb dec (bad) out push mov movsl icebp or cld jb push ret jns aam shrb loopne cmp adc roll scas jne dec jne or ficompl insb test mov pop jb add cmpsl dec mov add jnp push rorb es inc inc xchg jae stos andl outsb adc lcall sbb mov insb rcr ret scas es cmp adc adc lea pop out icebp inc lea jge push dec outsl daa mov mov rorl cwtl xchg sbb pop out or jg (bad) cmp cmp fnstsw (bad) mov push loope je mov popf or imul lds aaa test xor pop stos out test sbb (bad) xor dec aad adc mov fucomp mulb lods xchg sahf xor enter sbbb ss mov jne xor mov mov inc pop pusha fisubr sahf and push push test cmp push sbb push lret sti cld add ja inc test mov fwait lods inc jne jne (bad) stos pop push cmp cmp inc or dec movsl and jl outsl fnstsw mov push ret or cmp jnp lret cli leave and jmp inc ficoml dec int xlat pop mov pop fidivrl (bad) (bad) mov lret sbb movsb add inc or adc and test xchg scas lcall (bad) mov xor imul int3 mov mov jp dec (bad) inc xchg and mov jp add jnp ret jmp mov test xor cmp das and jns das xor push (bad) cwtl xor push push pop lods hlt in jge (bad) repz adc (bad) out sarl mov cmp stc mov loopne int3 jnp test cmpsl sahf xor fstpl mov inc setg leave sbb gs in xor inc pop scas dec lea rclb shll jo daa fdivrp int3 imul iret (bad) xor jno add repnz (bad) mov movsb mov mov xor arpl pop in dec out cld cmpsb sbb js popa sbb dec push jle les dec cmp jp lods xchg movsl jns insl ja (bad) out enter pusha cld dec test shl std jl ss pop mov mov sbb cmp fcmovb dec cmp popa xchg mov leave in mov mov sub lret push jnp push (bad) push cmp out pop jl add movb xor mov ljmp lcall int mov adc fdivr subb jl clc fldenv mov stc insb or pop mov mov popf dec mov out add cltd lds lea (bad) cmp xchg xchg mov (bad) in dec mov sub or add (bad) cmp (bad) push adc fisttp sbb push and aaa scas popf (bad) ljmp mov mov insb cmp in mov ror jge sbb xchg nop mov lods push push (bad) jnp loop int insb or andl mov test mov popl mov push pop iret aas stos sub lret mov jle enter mov hlt (bad) aaa pop cmpsl cwtl push lahf mov xchg jecxz roll stc repnz mov inc push pop cmpsl stos insl jle mov pop jmp divb sbb mov out jb dec fisttpll mov push icebp mov rcrl sub push mov sub fwait insl pop pop pop cwtl out cmp inc inc jg je repnz sbb sub push cmpsb add add loope pop push jg mov movsb and fnop cmp int3 sub lods add jo push test fisttpll inc dec add push jge (bad) sbb loopne out lcall sub xchg mov jne inc int3 cmp xchg xchg imul int3 xor xor lahf loope inc rolb inc inc and out or enter cmp mov xchg xchg adc out mov cli stos add mov hlt mov js cli push xor mov add xchg cmpsl sbb lret test mov adc or rorb out mov xchg in cmp push das pop push push sahf mov mov jp push jo call jae into stos repnz cmpsl xor sbb inc pop insl pop or mov mov inc lds cmp sub sahf xchg push push clc in push in or test add out sarb and mov sub jmp ljmp mov std ret cmpsl inc dec clc xchg sbb inc xchg movsb sbb out xchg pop lock inc jb loop cwtl sti sbb dec (bad) call push mov cld jge imul ffree andl jne xchg pop addl loopne neg cmpsl dec nop cmp pop out mov push nop ret in out (bad) lret add jnp int xchg push mov inc pop push inc xchg jo je sub fdivr jle jb sbb out pop mov cmpsl jnp xchg jne (bad) and and push loopne cmpsl out push inc mov leave adc fs jns aad ljmp ret sub add bound outsl (bad) xor or ds scas push pop lret jmp repnz das cmp mov enter sbb and dec or test or and dec fcmovbe mull mov shll stc sbb les mov movb dec sarb jmp cmp repz cwtl out gs mov push cwtl aam lds test cltd lds scas (bad) mov add sbb sbb mov test pushf or xchg xchg pop rclb or inc xor xor adc cld ljmp sub test add stos bnd inc xor mov stos and ret scas push pop and mov (bad) dec sbb xor cmc mov xor movsb cmp in dec or add inc jmp add and nop or les outsb mov and data16 les push add jno in jl sbb pop js jp push mov mov fnsave jp or pop out mov fbstp mov sub fildll cltd dec (bad) cmpsb jb mov inc pop pop (bad) mov adc mov das pop repz imul nop xor jle (bad) and add sti inc xchg clc cmpsl pop fwait repz sub push ret xor test jmp bound add cmp sbb cmpsb jl pop adc and push cmp cltd fstl and call push xor gs (bad) int dec mov inc jae dec or loopne cmp and (bad) das mov mov ficom jns jg jno repz inc call cmpsl add shl dec mov scas xchg jle mov mov nop mov aaa xor leave imul inc rol mov inc cli in push ds fldt pop pop inc dec (bad) push jl addr16 xor dec repnz js sbb sub (bad) cmp test add sub push inc lods cmp dec pop push push pop pop repz xchg inc pop movsb imul mov clc jns inc lock repnz xchg imul pop add movsb daa scas xchg lcall jl sbb movsl test cmp sbb test add sub or das or xchg mov or stos jp call or inc ja push repnz cmp jns int mov xor and popa rcrb mov bound or pop pop push cmpsb fdivrs lods lock aad jo orb sbb mov repnz ret aad mov outsl sbb aam inc adc popa imul sahf lahf jne std mov clc out mov jp lock int3 loop mov inc mov sub loop sbb in popa mov cli (bad) test (bad) jo (bad) test sbb sub or xchg mov cmp ds jno ds enter sbb inc lods scas add mov out push push mov push or mov (bad) mov in (bad) cmp fildl inc xchg clc fidivl mov pop outsb ret push add mov jno or add push push add push and (bad) or fldt pop push ficomp (bad) and inc ds nop sub imul cmp mov in jns das pop mov xchg rcll hlt sub outsb fmulp in outsb gs push (bad) shrl push xor dec movsb xchg leave daa dec sbb push ret ror mov and xor lret ror lds cs js sub mov adc lds push inc or test lret push add or out pop imul sahf adc mov jmp jbe cmp int push push cmp fs ret out xchg jns std add ss and lods or aad mov fcmovu dec sbb aad xchg (bad) cld cmp aam mov or das jp out jge repnz hlt mov loopne and dec hlt cltd and push nop push cmpsl inc clc and cld mov lcall jg mov call xor jp or lret jp loope adc sub ds jecxz rolb fucomi xorl cli mov or mov popf in xchg push fadds mov loopne adc sub fistpll sbb sti std call outsb je ror rclb in cld lea test fdivrp fnstenv test jge sbb shrl inc sahf fild test jns and test xchg sbb push idivl push inc cmp mov mov add in xchg inc stc mov in xchg ja sbb mov sub push mov divl dec push xchg push test push addr16 xor mov lock das ja mov sqrtps test jb jp mov inc arpl add lahf sub leave mov add pop jmp mov ss in rcll scas cmp jbe popa orl mov or in (bad) out xor xchg insl xchg rep mov sub mov push mov pop icebp (bad) jb pushf cmp push ja pop mov outsb mov les cmp push cmp lret ja mov sbb (bad) insb xor fistl ss xor std imul cmp loope push shrb ds inc stos pop mov mov xchg jbe loopne mov sbb jno je fs inc mov test pop inc lods mov jo pop jns outsl out (bad) rorb jge and aas mov pop adc sub rcrb popa pop and aas (bad) push pusha hlt fnstenv pop test scas cmp mov sub jg jo (bad) fidivr lret adc push dec and orl mov inc mov (bad) sbb repnz pop cmc test sarl enter dec rcrl cmp imul insl jg dec out cmpsb xor shll xchg add sub cli arpl xor add adc jge cld xchg pushf dec imul daa idivl or xor push xor movsb rorb and sahf std mov es mov mov and cmc test imul mov lea rorl cmp (bad) stc ljmp pop lods mov jo sbb xlat (bad) (bad) out mov rorl jge fildl jge stc and rorl loope es cs jmp push enter mov push push add mov adc push inc push and call (bad) lock sarl clc fnstsw jg mov dec sbb insb inc out int mov lock int mov icebp lds out into in in mov push sahf push xor in cmp dec out data16 push sbb push int sub test add jno pop lock fcoml sub cmp add mov xchg outsl pusha lods jecxz out or es sub mov inc insl mov lahf popf inc (bad) sub mov or push jmp int ret mov jbe fistp or fimull stos rcr ja mov stc pop jbe jecxz or repnz sub add pop jle movb xor jp fbld fcoml xchg xor or pop xchg roll add into inc shl fnstenv std or je xchg mov jg push fiaddl dec cmp jg sub mov push jge adc mov pop mov push mov lock mov push cli push pop and out push xchg cmpsl loop inc pushl sbb lds xor pusha xchg movsl ficoml xor adc mov mov aad push dec out fwait mov loop (bad) cli jb in mov add pusha pop dec or cmp cmp lds or stc popa je sub xor sarb dec pop int3 in out cmp add inc (bad) fsub xlat imul xor inc add mov lods mov jne lret lahf pop aad fidivr bound jp pop fbld push loope inc jo in dec test fcompl push mov jne xchg sbb stos pop gs data16 mov scas or ret and lcall or addb push (bad) cmpsl mov in dec push mov fcomp inc pop les add inc mov inc mov gs and lcall addr16 negl out mov inc (bad) inc dec lret and cmp cli pop loop add js das mov push (bad) addl push repz nop lahf mov or cli pop fimull pop adcl or push (bad) xchg (bad) jg shlb popa addl ljmp outsb mov fs (bad) jo fidiv icebp push int inc in jp and stc mov shrb int enter mov popa mov adc dec icebp orl mov or lea mov add and fadds sti mov sti sbb mov lock xor sbb pop repnz sbb inc rorb sub das push xchg clc pop inc pop test push popf dec sub add jmp mov cmp pop and jge pop lret mov and and xchg jmp scas mov out test mov jnp sub cli lods mov mov push jge scas or ss sbb das mov les xchg or stos loope push add sub (bad) cli js pop xor mov pop fs jne mov repz out xchg movsl push cmp int3 fsts scas jl jl icebp lods stos cmp enter or sub pop ret add addr16 lods sbb loopne cmp add roll push roll jmp test adc cmp mov or bound xor (bad) in jle adc ret addb (bad) pop lea push sarb push mov insl mov dec or xor push xor pop into dec leave xor rcrl popf push in push les pop cmp xor jno into lret push test jb mov jnp lea mov ljmp and and ret int3 jmp es sub addr16 pop lock fistp test pop xchg pminub inc fstps ss les movsl push jl sbb test movsb cli push mov pop pushf lods inc lret mov fucomip imul int3 adc xchg push pop scas fsubs mov int xchg in inc (bad) mov sub mov xchg int3 adc xor (bad) xor dec or sti addr16 jmp int mov cmp xor lds ss scas pop adc mov outsb ljmp xlat ficom (bad) mov or jmp mov shll test push cmpsb mov xor repz mov in popa jns (bad) push or xor sbb jns stc add push mov imull loopne push test (bad) jne pop pop push mov or jns push cld and sahf sub jne test adc scas mov outsb xchg out mov fistl ficoml cs mov out jne adc fisttpll loope dec cmp test pop add or sub xor rcrb add push cmc ret out std cmp call iret mov test mov aaa mov aad jmp and rclb (bad) push bnd and pop pop push xor pop repz pusha dec lods lock fsubr mov test xchg mov (bad) mov outsl loopne (bad) pop add push cmp add mov out mov outsl sbb pop or cltd xchg push add popa push repz jbe lods mov cmp lock xchg shlb mov adc (bad) jo sbb adc insb fs dec imul and scas cmpsl sbb mov int3 call fldenv sub loopne imul dec inc in dec or enter inc pop ss inc cmp lock add dec or mov loopne loope push rorl std cmp pusha lods mov ror test add jg shrb sbb jecxz cmp xchg sarb je mov sbb lds and dec jg lahf imull jl jae mov clc xor out push popf ljmp sub mov loop ret mov jge popf push xchg popa adc add cld inc jo ljmp adc ret adc pop movq jo mov lar cmp add xchg adc inc into test aad sub and orl stos addl ret jmp dec test lcall outsb cmp shll inc subl inc jb jbe mov push in push outsl jg sbb cmp movsl or xchg pop xchg js das mov es mov in inc inc sub nop adc push xchg stos jp je imul xchg pop add push cmc fldenv push add mov std fisubl and aaa jne sub out bound sbb outsl pop dec add xchg jp dec mov ss adc add test movsb das js in fisubr clc imul push fcmovnb repnz mov loopne ja fwait pop mov inc (bad) push pop push sti jecxz out pushf hlt je les arpl movsb adc xchg pop xor nop lret or data16 pushf cli inc push push and mov pop inc xor lsl (bad) push mov jmp (bad) mov mov xchg push movsb sub adc xchg jl sarb fldcw lods out xchg pushf xor aad jmp cmp push mov mov test in jbe xchg pop cmc negl adc xor lds xchg mov cmpsl shl dec or test divl mov es (bad) xor push notb (bad) mov fistpl pop sti lahf (bad) dec inc xor lahf aaa mov adc and jae mov and out aam mov test mov sbb mov rorl cmp add lahf or mov cmc adc and fs xor xchg and in cwtl dec push je enter mull mov pushf mov jns fildll (bad) stc push pminub or pop add rcl cmpl mov sub jmp dec inc dec xchg dec arpl or sub xchg push mov mov mov (bad) fldl add lcall sub scas lret sbb add mov sahf rolb sub (bad) push cwtl push xor inc fcoms add adc aam push mov or fwait push mov out into lret add jle in dec out dec lock jge iret fildll sahf imul pop inc xchg mov repnz pop pop inc dec xorl inc add mov loopne (bad) mov and out cmpsl mov rcrb aaa aam (bad) or mov sub fnstcw jg loope or mov push mov jnp push cmp lcall mull push cwtl cmc and fs cmc out inc push jns push rorb cwtl push jg jne add cmp mov push aaa lods mov mov dec fcmovnb push js adc ja imul lcall sbb imul or lahf or jb incb gs das in xchg push cmp dec loopne add mov lahf stc add pop (bad) insb test iret inc and dec fisttp adc sbbl out fldcw mov cs sbb cmp imul sarl sub aaa inc test dec mov pop pop aas pop outsl sqrtps (bad) stos sub (bad) or jno and dec mov mov andl cmpsb mov xor lahf ficoml sub push loope jg xchg mov inc mov cmp in mov pop inc ljmp push sar sti clc add mov or leave out xor jns push inc out inc cltd sub mov cmp cmpsl movsb xchg nop xchg popf mov popf and sub and add jge mov test fcompl sarb mov push (bad) cmp cli xlat inc or xor and adcl add test inc lods imul (bad) sbb push ficomp leave movsb push xchg sbb sbb push and outsl les xor cmp mov mov push (bad) fstps xbegin xchg sub xor add repnz pushf arpl xchg cmc aaa mov sub scas xor mov push shrb (bad) cs sbb ret push (bad) dec pop or lahf mov nop push inc mov and fdivrs cld lret mov jge add jge gs inc (bad) ds sub push sbb xor mov mov enter inc or jo fnstcw bound sbb or pop mov movsl push lcall and adc out add mov mov insb xchg imul mov lret andb scas or pop lods cmp and cmp mov cmp or movsl js movsl mov or and push fcmovbe les xchg jae dec sub leave fstpl jmp or mov jae iret aam movsl (bad) ficoml scas sbb mov pop test aad cmp cmp pop push and into mov (bad) xor sahf mov xlat sti push push stos imul outsb jecxz jo andb xchg arpl mov push inc iret push stc dec mov mov adcl cld mov push xor dec outsl dec mov cmpsb pop dec jle add sti mov sahf sbb pusha sbb repnz xchg inc (bad) lahf push nop or movsl xchg mov lock lods adc pop daa stc mov icebp adc pop mov xor pop xchg lods adc outsl sub mov (bad) cli mov pop add xchg xchg jmp cli jb pushf add mov lahf xchg xchg jns enter or imul std inc cmp dec jb lahf mov fstpt outsl and in jp push std push mov and orl cmp mov out xchg popa sub mov inc mov and scas mov pop mov (bad) js xlat pop sub dec inc fcmovne mov (bad) clc rorb test mov sahf xlat push call add jge cmpsl mov xor cmc and test cmp sub push mov aam loopne adc aad ja and stc mov int3 das lret test pusha data16 sub into inc sub jl sarl xchg adc adc pop jmp enter or mov cld sbb adc xchg mov test stc inc or insb out xchg cwtl lret mov push sti push push sahf je cmp loop mov pop cld xchg or sub arpl mov mov insb cltd adc inc bound jmp out mov setno lret hlt push lods inc fsubrl cmp mov mov push ljmp dec js out int3 mov int mov push std lods or in sbb pop mov adc lds pop push jo aaa mov rorb mov imul sub xchg xchg mov (bad) into fstpl data16 lods lods sub jecxz ja or mov roll inc push sarb mov loopne pushf aam mov in sbb mov aaa es aaa xchg mov int dec aas shrl les test mov js dec faddl stos pop pop xchg inc xchg arpl jg mov dec jecxz (bad) lods jo outsb rcr mov dec fdivrl leave (bad) out sbb mov rcrl popa xchg sbb das mov adc inc lock bnd jle cmp push lock repz cmc sub jns in inc jae dec xchg leave imul cmp sti xor addr16 jae imul addl jle inc push in es nop (bad) gs cmp inc xchg xorl cltd xchg push shrb xchg (bad) mov test fdivr add mov lods movsb cwtl pop ret lds test cmp addr16 xor or leave adc and sarl daa lods stc int test roll icebp lock lea shr mov xchg adc mov fmull lret push xor mov lcall in mov sbb cltd ljmp mov xor xchg inc out aas test aad clc js test sahf je mov fs sub or aas pop push cmp dec (bad) cs dec out mov inc negl dec xor cmpsl fstps inc loopne aas enter fwait lods add mov ret (bad) call and push jp bound or sub jecxz (bad) xchg andl xchg dec cmpsb fldenv cli aaa dec fbld xlat fdivrl and stc or mov lea (bad) xor adc bound dec mov fild mov xor mov outsl jge out ficompl jno add pop xchg push fistpl enter pushf sub das outsl test int mov dec ficoml test jbe mov outsl adc lods mov mov fistp mov jo jl xchg and jno or mov mov jle dec mov enter cmpsb lret adc jmp push xchg mov or loopne adc and int3 adc (bad) cwtl (bad) cmovne add aam adc and and js sti jno testb jnp and inc in in xchg mov mov pop movsb dec and test fisttp push cs iret fadds mul dec sub mov popl adc xor cmpsl sbb iret push sbb push xlat imul dec cwtl mov xor xor clc pushf jne stos and pop sbb fs sub mov rcr in outsl and dec mov adc mov xchg jno scas fsubr lcall adc and movsb mov dec fwait dec cmp popf push push xchg mov testl fistpl push lods cmpb movsb frstor test rorb push orb movsb inc jge push push insl push fldcw mov ret outsl rol outsb repz xchg cmpb dec sub dec sarb (bad) pusha lret popa ret out sub xlat inc push adc arpl incb pusha scas push das in movsb loop push jecxz xor fisubl mov (bad) aad xchg lret pop enter inc cmp imul pop out mov loope rorb pushf aaa mov adc pop icebp pushf fwait (bad) sub aam mov repnz mov mov icebp add andb jmp pop (bad) lock pop roll or into stos dec loopne jae xor mov or push pushw js push push jbe xor mov pop inc stos cli mov dec stos pop (bad) ljmp mov pop decb std xchg push or bound loopne mov xorl jge and and movsb in sub mov push push cltd sbb jl mov xchg repnz daa sub es in test sbb lcall sbb or and add test cli je xchg add fcmovb shlb pop push rclb int sahf and arpl repnz imul xchg scas out les hlt (bad) jle int adc or lock data16 jnp or ds fidivl lods push outsb repz inc cltd xchg sub stc jmp adc sub and adc dec scas out pop xchg movsl cmp aam aad out jno cmp inc jns lcall mov sub pushf int and adc out pop dec clc adc push movsl lods push sti fld mov inc dec dec ret pop mov (bad) psubusb (bad) lahf pop cwtl stc std aas or test push jle je add mov stos dec mov mov xor out sub mov pop add or dec or mov pop and loop xchg mov mov fldt test jecxz jge rcll mov or pop and and push hlt mov cwtl pop aaa popa or fnsave (bad) insl lea pusha add lods into add (bad) out (bad) js adc pusha mov test xor adc add test aad mulb xchg xchg clc out add ja sti cmp fsubrl pop inc add imul sbb sbb or iret pop les int3 add in jl das jb icebp and popf or and pop xor sub mov sbb xchg dec rol enter jle mov mov sub mov cmc cld mov pop sub adc stc xchg xchg popf ja and pop cld add ret scas insb push lock sub jl icebp lods (bad) and stos pop xchg das xor call stos cld sub mov jl outsl dec out fsubrs scas jo xchg inc jmp adc sub jnp (bad) nop test outsb adc mov rorb cwtl (bad) xchg push jno pinsrw xchg cmc clc xorl cmp loop mov daa xor dec call push loope or lods sbb ret lods push mov xchg ss enter sbb adc dec or mov xchg shl xor mov inc pop and dec (bad) fnstsw into rol aam jl jg and lcall cmpsl popa outsl xchg aad test popl push push mov xchg enter or mov sbb mov mul mov jecxz movsb divl sbb in cmp push xchg arpl arpl scas push xchg cmpsl lret sar mov lahf (bad) loop mov mov pop movb les adc cmpsl lret cld xchg insb dec arpl scas push insb jo sub fcoms pop inc cmp ljmp dec das movsl data16 ljmp inc int3 dec shll pop int3 mov fimull adc jge mov xor dec into sbb adc sarl pushf and dec sbb (bad) mov lret out add fdivr nop aam cmpsl test rolb jae insb jnp test lea xor sub fwait test fwait add daa fdivr enter dec push xor dec repz ja push leave in test and xor jl inc ja mov idivl xchg ds (bad) push clc add inc mov gs or ja aam jle jb das ds mov bound or sub (bad) in fiadd movsb mov cmp adc xlat inc insb jb jl mov jnp sbb cmp sbb mov inc (bad) mov icebp lret pop adc bound add sbb cli push popf lret mov stos out mov add pop cwtl sbb mov and sub push (bad) repnz outsl sbb stos (bad) stc loopne adc mov inc pop push and mov adc or jnp inc adc inc xor cmpsb sbb js lcall push jns scas xor push jno pushw inc push xchg fdivrs push jb ljmp inc and pop jae test push push sbb les lahf jnp inc mov push inc cld jo dec and aaa lods fidivr bound sti fldcw push and dec push add inc jbe bound pop inc in fiaddl stos sub pop inc cld ja,pt xchg mov inc xor test push data16 roll cmp shrl sbb cmp add xor sub (bad) ret (bad) sbb add pushf popf pop mov pop mov jnp xor add xorl or dec loopne xor (bad) sbb xor nop pop mov cmp pusha adc mov sub mov xor or imul push sub lret adc idivb les jecxz cmp sub cmpl test popa aaa jo fidivrl pop mov sub flds out lea mov xchg push adc pop push adc (bad) test insb mov pop mov je jle pop sahf xor or es mov mov lcall cmp pushf call or add mov fdivrs adc clc jo imul pop push add and push pushf pop cld inc movsl xchg lea popa pop jno mov pusha mov mov (bad) sub mov sbbl sbb ja sti jo aas test lahf aad pop test mov in cs push and test push loopne outsb adc sbb xchg movsl ljmp mov gs push cmp pop sbb mov mov (bad) ror lret xor lock mov xor dec pushf loop aas cmpsb lahf in cmpsl pushf ja sub lahf aam int3 mov jg sbb inc jl xchg pop pushf xchg sbb lret inc adc xor adc inc aaa inc outsl add outsb fwait pop or add xor mov mov xor daa sti out les enter jb sbb mov cmp ljmp lds or pop jge adc mov adc cli into data16 pop xor mov outsl xchg mov sub enter fistpll cmp jge push cmp fnstsw ljmp inc sarl and sahf mov push sbb push rcrl ljmp xchg out inc lods fistpll xor cmp sub xor es jp dec daa mov add sub test mov and das mov pop insl int3 cltd mov xchg rcrb add sub mov sbb add test sbb mov hlt mov cli xor xchg shlb or push shlb push jg dec iret aaa push cmp jb mov push mov pop cs add cmc mov lret into xchg add sub pop in outsb addb out pop lods outsb arpl fnop sbb push (bad) arpl icebp or lds xchg stc pop inc xor push and mov lods and and sbb pop nop jecxz adc bound mov (bad) out inc aas call or aaa pop das sbb (bad) sub jb dec int lahf push mov push mov daa mov (bad) cmp ds or and cmc js sbb jnp xchg test xor shll jb xchg push ret pop pop lahf xor in (bad) jl dec es pop lds outsl adc mov fist xor mov jo movsl lods dec dec inc add cmpsl mov jecxz xor adc and jae addr16 sbb hlt sub pushf int xchg xchg cltd mov (bad) cwtl ljmp pop and or or mov pop mov pop lds sbb mov mov subb mov in in test add xchg jnp (bad) mov xor ds js jae sbb and and or push mov xchg adc jle cvtps2pi adc xchg sub mov test and push sub dec sbb mov jne and xchg (bad) aad loop jno mov (bad) (bad) ret loopne sbb rcll les sbb icebp std (bad) add push test fnsave sbb fxam outsl stos (bad) jg add stos sub fnsave repz fsub cmpsl xchg adc (bad) in lea lods mov jo inc test jo ja cmc aam pushl ljmp repz and gs stc adc dec cmc fs mov insl iret add jmp lods mov push bound rcl or jbe xlat cmpsb mov ljmp dec scas jb push mov mov mov pop mov sub pushf std fs ret leave out hlt pop mov sub dec cmp xor mov fmuls movsl sarl sbb xor jecxz dec xchg cmpsb push cmp or mov gs cmpsl (bad) das push mov jg sti push ljmp gs mov push ds push push mov xchg lods xchg inc or lock inc xlat aaa add fdiv jns and xchg xor dec sbb cld (bad) push and fs xchg cltd fmull mov xor into lcall pop es lret push sahf sub int sub mov cli fwait lahf shlb xor adc insb loopne ret iret or sti dec inc sub cmp (bad) sub dec fildl lods addl fmulp sbb push mov push push sbb pop inc inc inc movsl test cmp mov sub pop inc sub rorb aaa std fstpt inc mov ljmp cwtl jg imul jge in mov jle xchg adc (bad) inc pop xchg or leave inc push push cmova mov add add js jns rolb pushf xor push lock shll stos fild ds and ficomp call and jecxz (bad) jns cmp test je ret (bad) or dec adc dec mov sub or das adc adc ds aad cmp icebp push dec pop cs add xor imul pop scas scas mov add lea mov int aad mov cmpsl outsb movsb adc out cmp mov dec sbb jo cmpsl dec or push xchg cmp mov jmp jmp (bad) lds mov lcall addr16 imul mov dec adc and inc cmc mov outsb imul sbb test ud2 into vpackssdw add aas sub inc mov and cmp mov subl xchg sahf or xchg xorl pop test cs jns or int xchg in adc bound cli clc ret pusha call dec imul sti andl ds std pop pushf jmp lret cld mov js leave movsb sahf iret daa arpl jb cmpsb cmpsb inc and cmp test (bad) stc adc ss jae cmp int3 sahf pop add pop aam rcll gs enter or jl addl mov xor call (bad) ss js push mov hlt flds push loope iret (bad) in jg shrb adc outsb shr or mov push out loop mov mov fs in xchg movsb inc xor xchg mov add ds or inc mov fs imul mov fwait push (bad) mov xchg repz inc inc sub push pop add jmp std push scas mov add dec add xchg jb popf sub and inc pop jecxz xlat mov pusha mov xlat add jecxz test or je add jmp popa pop and pop icebp dec rcrl stos push test (bad) fsts movsb add movups pop jg shrb outsl out jmp fwait rcl fisttpl sbbl sub dec xor ret shrl inc movsl xchg adc xchg or sahf fnstenv or sbb push xchg fistpl fisubl enter jno,pt cmp nop ds jns and jle int pop mov lods sub sbbb sbb inc repz mov fistl out jno jb dec xchg pop test and and leave push fcompl popf pop iret mov inc mov in inc cli sbb aas outsb jmp movsw xor fs jb dec add out dec test es push cwtl int jbe fdivrs movsb mov pop (bad) ffree xchg insb stos or pop (bad) inc xchg inc sub xlat xchg jecxz cli xchg adc mov enter pop xchg pop xor sbb adc testb pop es cmpb dec call xor scas push or es sub sbb xchg sub (bad) inc xor push inc dec jb pop mov mov mov mov je (bad) jp push test sub es and lcall insb popa sbb loopne push mull add or (bad) addps shr insb icebp out mov cmp mov (bad) jb fs sub stc mov adc rcrb jge clc pop orb pop or mov rcrb cmp pop frstor dec jmp lock push mov (bad) pusha jge dec mov mov sub inc xor sahf sub pop ds xchg sarb jnp mov into addr16 xchg in int3 rorb fimul mov xor fucom popf sbb test push inc push movsl shrb ret into sbb sub dec mov push mov andb mov xor test mov pop sbbl dec stos divb es lods pop (bad) xchg pop sarl xchg (bad) xchg xor arpl and push cltd sub loop fmull push negl jg add xlat mov outsl mov aad sub loop dec mov ret daa inc incl imul mov lcall push cmp std jnp outsl push pushf sbb mov lret and and (bad) out nop into mov jae add pop jne call js fcoms movsl arpl pop andl andb test push or (bad) sub fdivrp add sar stc sti imul mov cmpsl insw mov inc cmpsb cs call loopne xor xor and mov mov loopne push or mov sbb xchg cwtl insl pop push or inc leave cltd les jno mov cmp push dec xlat dec push xchg lea inc jo jp dec (bad) aad cmpsl add dec mov ret daa jecxz pop pushf popa lcall mov mov push and push pop xchg add mov push gs pushf daa cmpsb xchg dec push mov push inc cmp enter mov inc mov ds xchg jg repz jle lods enter (bad) into dec in and or mov jg and (bad) lods adc (bad) inc scas stos outsl ds pushf pop orl mov and mov stos subb jg insb pop add cld into cld mov adc daa xchg pop outsb inc lods mov or dec sub aad xchg sub aad add aam das decb test push sbb xchg movsl je mov testb lret push insb adc inc mov mov lea pop mov push cmc fsubl pop test cmp mov mov loopne push pop fsubrl push cmp sub mov mov inc and xor stos push pop in (bad) dec jbe movsl or or inc clc push or int3 js mov ret push mov mov jp cs jmp aaa inc lea add mov sub xchg inc mul lret clc xor push pop mov dec inc incb adc or movsl inc icebp call (bad) scas test out std mov das ljmp inc das out lcall xor mov ljmp decb insl adc imul xchg ljmp in pop sar stos push xor insb and faddl or push cmp sub dec divl jge mov into jmp fnsave mov nop inc cmp iret sarb jl repz cmp jmp loopne dec in cs (bad) mov leave push sub lcall pop shl jle xor (bad) (bad) lock sbb jbe out sbb mov mov adc cmp mov xor jmp icebp mov sbb test test cmp loope or (bad) ja push popf nop jge mov jo inc (bad) jmp sahf xchg in out ja addr16 or flds mov pusha sbb mov insl das sbb fdivp lahf test out and sbb jg fdivrs sub scas or push shlb inc and lods mov addr16 or jle enter fcmovbe xchg pusha mov repz sahf xchg leave sti hlt loopne popa xor fwait sub das and insl and push xchg dec lods scas pusha loopne aad aad in leave add movsb fs sbb inc push cmp bound scas repz (bad) pop in mov dec mov (bad) ror (bad) xchg inc stos lahf add out xor mov mov out in or in dec and inc push faddl jnp lea push pop push bound in es jae movsl test daa gs mov sbb pushf sbb or inc scas mov repz mov adc xchg xor jmp add outsb add push sahf xchg inc cmpsl jno jnp mov jle hlt sahf mov inc ja fdivrl adc sub pop aas in pusha test sbb es push jg push push (bad) int3 xchg cmp inc sub xor mov sbb (bad) pop scas repnz or mov push into xor out adc push mov imul mov clc in outsl mov jnp add mov in mov test test mov adc fstpl mov mov inc call jg fstpt mov int fwait lcall cs pop xor jo dec add daa in jnp aad push push mov pop punpckhdq cmp div daa cmp icebp push les mov mov fwait loope pop (bad) in int3 (bad) es mov inc ja mov cmp clc sub or sub pop in cmp jp fadd int3 pop and imul pop stos or fcomip cmp jnp pop sub add add pop dec sub clc rclb fst cmpsl test push dec jo pop in inc mov (bad) or sti ljmp mov call pushf and adc sbb jl jle mov mov in mov dec dec aaa pop aas sbb xchg or fisub mov movsb inc xchg and jecxz push ror dec fild lahf pop pop mov xchg in lret in lahf xchg dec push xlat or mov (bad) jnp add andb rclb rcl inc push test loopne add ja enter iret cltd int (bad) jbe dec mov pushl (bad) push mov and cmpsl jns fcoms cld push (bad) repz out inc insl mov insb pop or movsb xor or into inc mov lret arpl bound cmp push mov jns test or das sti cmpsl bound sub xor out jns dec insl pop cmp lock push ret mov out cli xor add (bad) push mov add and negl xstore-rng cmpsl ret lcall xor adc or xchg push outsl and ja jne mov fwait loop stos call push insb xchg in enter sahf iret xor out cmp mov mov adc xchg ljmp mov mov push lahf sti xchg xor stc mov icebp xchg pop xor push lcall xor test inc lods jge mov xor stos push cli pop sbb fisttp (bad) and xchg jecxz test and or stos bound out pop and cwtl fwait popa cmp clc dec cltd pop and sbb mov cmp imul gs mov (bad) mov mov sbb lcall pop insb jg sbb shr dec dec add addl mov (bad) in dec iret rcr cmp outsb pop out lahf fbstp cmp mov jns mov mov and mov xchg cmc add in xchg jns push push mov mov or addr16 out fwait sub stos push xlat fisubrl int test mov adc out pop sub sub mov push mov jle mov out test test jp dec sbb mov sub cld fsubl lahf mov inc push test push cmp xlat or xchg and jp ret leave sub or in iret aas (bad) sbb add jle cmp loopne rolb cmc push ds sub sbbb cmp sahf std repz xor jae je ss clc mov xchg cmp pop inc dec sbb or sahf test (bad) sub pop aaa mov jnp in addr16 inc ds int jo clc ret cmp xchg mov mov inc scas jns test inc call inc dec imul jno mov jp lock ss and (bad) fdivl (bad) jo xchg clc call dec cmp lods xor clc push jge mov sub out mov lcall sbb inc rsm push cwtl into xchg in or sub adc out sub sahf lcall mov shll inc sub mov add pop mov xchg test insb enter sub xchg (bad) (bad) in pop push mov push scas add aas test (bad) mov inc push je bound (bad) loopne fwait dec sub jl xor sub (bad) xor inc mov sarb hlt mov add cld bswap or call fcmovnu jmp mov sbb pop push mov sbb ja mov add cmp repz cmc jp jge mov out sarb frstor sbb adc in out sub inc mov mov (bad) adc mov jno ss idiv dec notb in xchg (bad) arpl les ret mov bnd mov lret pop sub cmpl cltd xchg (bad) inc cmpsb sbb divb test xchg (bad) dec push jmp jb and pop stos mov inc (bad) repnz xchg inc adc out lds shll mov adc fldt arpl push addl fwait pop gs (bad) lret and xor inc add (bad) adc (bad) xor (bad) test adc ljmp xchg mov leave xor in nop mov lods pop push lock jbe imul lahf xchg xchg fsubl xchg or mov movsb fsubr pop mov adc jg jnp mov in clc outsl mov pop jno cmp xor add ret lods jo inc sub sub rorb push sub icebp pop sub cli pop ret enter mov repnz jno jecxz sub push mov xor pop push xchg lods mov ficompl cmp or push iret mov lret fildl push lahf ret mov or hlt frstor jno adc lock popa pusha in mov fcmovb out push mov and js xor mov sbb in test mov mov jbe push lahf dec and out add jae sub icebp jp jnp cmp mov lds lret mov inc sbb dec adc mov push push inc jmp outsl movups inc inc imul in and loop outsl add imul xchg push stos mov jae jnp call pop sub inc movsb nop add jno sub nop cmp inc mov xchg (bad) in (bad) dec push rorl sbb or mov jb mull dec out ret dec outsl push jecxz sub mov nop jl jge pop (bad) in out roll outsl sahf sar in dec in xchg mov adc aaa out sbb shlb push mov cli jbe sub pushf cs or lahf pop movsb in into jno lret je std xchg aam scas or mov pop lea xchg xchg lret insb mov mov je testl (bad) imul cltd repnz add push outsl stos xchg dec sarb decb push subl mov jne sbb jns push cmp out dec (bad) in push ret dec mov add ja insb and sbb or dec stos jns add jl mov faddl push sbb xchg mov dec mov jae mov and (bad) mov js push dec mov icebp test pop (bad) jmp (bad) hlt sti iret es test pop popa xor adc push int (bad) rsqrtps pop rol push xchg mov inc mov daa sbb cld and clc (bad) pop cmp inc gs pushf dec adc stos jle cmp xor call inc jg xchg fcomps imul into iret mov mov (bad) cmc mov cmp movsb fs leave jecxz fisub sub js mov out xor pop mov inc cmp imul xor imul roll ljmp jp jecxz and ret sbb mov inc dec pop and push adc mov in call mov and push add daa pop int mov push cmpsl pop (bad) push add mov je aam cmpsb test adc pushf insl sbb cmc inc push push movl pop movb pop inc sub inc mov test stc push fcomp stc mov aam sbb cmpsl repnz mov mov popa shrl fucomp jae (bad) mov mov bound push and cmp out jmp notl jge sarl push test fldenv cld out ss inc or shrl (bad) mov (bad) scas adc xor mov insl popa inc sbb mov cmpsl sbb hlt rclb sub inc pop inc mov aad in mov mov in sti scas pop mov or cmp sarb aam ss dec add scas xchg iret repz sub jnp (bad) int (bad) cmp mov adc jb sti mov mov dec jmp and jo cmpsl fwait xor je fnstcw test mov lret sbb push mov jmp movl fstpt call adc push jge jmp aaa xor imul mov add fisubrl xchg mov and push pop fstpl cmp and ret xchg xchg pop sbb xchg mov push test in mov inc xchg pop mov outsb add nop fsts int3 lds lods push xchg rorl xor pop sub pop push pop adc test and cmp jg cmp jle or xchg loop sbb sub add or int pushf adc das pop (bad) lock call mov (bad) and lret mov cmpsb dec add mov mov lods and in lods mov xor das fsts cmc and jg mov inc cmp sbb das leave arpl in adc pop sbb sbb sbb repz clc sbb add pop ret lods xchg adc scas shlb and int jp cmpsb cmpsl stc insb iret cmp push enter cmp (bad) sub cmp sbb push mov jmp jle xchg mov mov jns icebp dec adc pop pop enter aaa shrb xor addl sbbl cli mov or rorb mov out repz sbb mov fisubrl scas shlb jns (bad) int3 jbe lods aam mov or dec lcall xchg outsb lea dec aaa bound es sub dec mov sahf (bad) icebp mov jnp loop aam or scas lahf mov pusha adc push loope (bad) jns cmp in jno cmpl push mov push dec out cmp scas push repz les sub pushf xlat subl addr16 test or mov (bad) pop aas out (bad) in into movl jbe in mov test and jb daa xchg sarb adcb ret nop xchg sti pushf pop pop pusha leave testb cld cmp xor add test js pop xchg xchg inc out push shlb pop ret push fsubrs add outsb iret cmpsl jns sbb ds mov test jp in les call cmc sub fidiv jge cwtl mov test dec in adc sti push jbe icebp ret xor mov pushf aam psraw (bad) call clc (bad) (bad) lcall add mov enter push sahf mov ret pusha add mov cmp jge mov mov ljmp adc test cmp fnstsw adc fbld mov jbe mov outsb cmpsb inc cmpsb pop jo jne mov push out or andl in xchg adc push in xor mov mov nop push mov cmp mov cwtl in or xor cld fsts cmpsb push pop dec sbb push add push dec push cmp inc ficomp insl addb jp bound cmp lea cltd notb leave jge insb movsb mov es loope pop jno and or jnp in loop shr cmpsb fsubrs iret and cs clc ja imul sbb xchg lcall mov or adc cmp sub add scas (bad) mov aaa stos pop out jmp jne or dec daa adc fcompl or outsl arpl ficom aad sbb and cmp test mov pop icebp (bad) insb (bad) sub cmc add xchg cmp int3 lock cmp out je pop xor inc lea (bad) outsb addr16 incb jmp iret sbb xchg test call mov outsl lods stos sar xchg hlt popf cmp sarb out inc inc das repz mov mov test test jp and dec aam mov push mov mov and jp daa add mov frstor (bad) loop mov pop in cs push jae in mov in cmc jmp (bad) cltd jno jns std jo push add scas pop (bad) bound xchg lahf fiadd repz jmp (bad) push rol loopne test loop,pt leave test iret jp mov mov xor movsb jb cltd jno lock xchg jmp nop dec cmp pop cmp iret dec add add add jno lock fsubr (bad) jmp dec out loopne ljmp in or cmp (bad) cmpsb jp mov aam popf jp lods cs pop repz pop imul cmpsb jp push pushf rcl stos push loope mov mov pop push vpcmpgtb gs and notb sub cmp and sbb pop lahf add or ret cmp xchg xor jl lds fwait ret sub push mov push les push stc loope daa xor std mov popf mov insb jo out cltd ss adc xchg cltd sahf dec ljmp pop cld fisub xchg dec sbb mov fwait lcall (bad) je push adc gs inc lret xchg test test pop cmc data16 inc mov push xchg stos sub pop push xor mov xchg into imul stc mov lock fistpll pop (bad) mov es lahf sub adc repz aas outsl pop stos and sub xor dec xor inc xchg sbb mov adc adc dec dec in push pop data16 pop and mov jl cli insb pushf cli mov mov stc pushf mov int ss mov push sti stos pop push cmp mov cs movsb idivb popa jno mov pop xchg gs mov subl adc lods sarl adc clc cmp jmp and xchg push mull cmpsb enter movsb movsl xchg sub mov mov (bad) cmpsl rolb mov aaa mov or sub xchg call cmpsl sbb movsb mov leave mov mov adc popf (bad) cmp push fdivrs add aas xor leave notb imulb sub adc jg jno cs xchg into push enter jg sahf xchg jl dec lret dec sahf xor cmp cmp int3 pop push mov xchg jl stos xchg cmpsl adc pop cmovg pop inc outsl push lea jg push aaa adc adc and popa or mov inc nop aaa cmpsb mov inc inc xor mov cmpsb pop cmc icebp xchg cmc nop xor xor jb sbb push mov mov clc mov lea movsb jmp lds stos ret dec jmp adc or add aad out cmp mov sbb add pop add pusha or push jp add mov (bad) push mov jnp mov mov fisttpl pop push or and xchg mov cld xchg les pop ret lock test scas (bad) mov pop cmpsl pop (bad) lahf fwait mov rolb je daa (bad) dec push fucomp aaa cmp int add push in rcrl xor fnstcw aad (bad) adc stc insl pop lret sbbl sub and insb pop mov ja jle xor lcall jg add cmpsb das and data16 aas pop mov clc pop int3 stos lds ret inc ret repz cmp dec lock xor xor ljmp icebp sub pop sti pusha pop mov ljmp jecxz mov push sbb cmpsl sbb das mov ljmp mov cmc adcl xor cs push mov and fcmovnu (bad) cmp or sub fs lods fist pusha les insl fs or in mov out ljmp lds dec into sarl iret xchg fcompl pusha inc adc and push data16 mov test dec inc in orb xor ss ds mov gs push and jg stos mov test mov sbb fnsave icebp or mov xor (bad) shlb xor push sarb or jb push jae jne mov pop mov in xlat jns lods int pop or push pop mov ss leave data16 cmp mov mov rorl jecxz pop lea mov adc movsl push (bad) sub lcall and stc pop jge jnp and mov adc (bad) iret pop out inc pop mov push push pop outsl mov xchg outsb rclb ficoml adc divb je popa mov add leave pop ret popa inc rorl jg aad mov xchg ror adc and aad and xorl jne scas inc mov clc cmp test movsb loope dec xchg insb test les xorl testb jnp gs lret aad dec jo xlat mov dec ljmp (bad) jnp ja adc dec mov push add cmp add cmp (bad) cmp rcll ja in lds dec add nop lahf movsl je loope xor imul jge pop std push sub inc jno cmp mov jg jo xchg mov add xchg aad popa add mov stos add bound push popf sbb inc pop test pop sub and add cmpsl out adc imul es push pop cwtl test push add fs dec adc or xchg and lcall sbb mov fstl push inc pop mov clc fimul div scas insl sbb (bad) fmul fwait push push adcb loop outsb lahf divl cmp jl arpl cmp mull loope int push gs jae andl scas dec fnop sub fcoms mulb adc out mov mov add stc pop jle mov jle pop pop add push fsub or and and or inc loope iret and cltd movhps dec inc add (bad) popf push das pop adc jge aas incl cmp rcll jne out xor add jne or fistpl jle mov mov mov in or cmp cmpsl lahf push sub flds push mul stos scas mov or xchg dec cld aad inc rcrl cli (bad) mov adc (bad) push dec (bad) icebp push fsub pop aas ret bound test mov rolb sbb xchg push jge push push and sahf add inc sti int3 loop or hlt (bad) (bad) dec imul inc das jne xlat inc stc loopne aas sbb lock lret and lea xlat mov into lock mov inc sbb inc test inc ss ja outsb loopne and cmpsb outsb movsb sub push lods insb in inc mov inc mulb dec pushl cmpsb pop (bad) xor out jnp pop jle int3 sub push sub test repz into push leave push dec je mov xlat imul shr push mov mov in sub cmp cli outsl xchg jb mov sub roll in lret fs dec inc lods dec jnp mov adc mov or in dec subl mov jne mov push xor leave adc and mov dec hlt xchg jae dec ds stc dec sahf (bad) jb push cmp xor rolb out movsl adc lret sahf loopne stos sti pop jle sub je adc push sbb hlt jbe pusha (bad) stc iret adc rorl mov lret push mov cmc andl jbe jecxz inc das fnsave push mov inc xor and jne jge push xor or dec jmp mov mul ss mov mov mov mov (bad) adc mov cmpsl adc xchg pop shll out mov sbbl dec loopne roll xchg addl out or add cmpsb or mov jbe jecxz dec push ret inc inc jnp je mull mov inc push aas cld push scas cld or push stos mov je popa jmp (bad) repz movaps dec (bad) aaa mov mov jo fmull addr16 sbb jo (bad) fidivrl sarl ret ds jle mov inc push jmp ret mov addr16 mov dec jl jmp lods out cmp jo add inc dec loope iret jno idivl mov popa jnp loopne push add xor dec jg xor aam jle pop mov std cltd aam push sbb push push mov daa fisubrl pop dec (bad) jp (bad) adc roll test jbe js pushf xor (bad) and in daa sbb mov jl icebp je into or mov xchg lea mov push outsl gs adc scas mov in lds hlt mov imul inc insb int3 gs inc jno cmp inc jae cli icebp fs mov mov inc sub leave mov adc cmp loop int popa mov in push fidivrl sub and or jmp xchg xor gs rcrl lret sarl insl dec inc inc int3 insl add enter icebp fmull movsb xchg std scas mov fstp xchg bound xchg loopne or sbbl std sti data16 pop mov adc or dec jbe mov dec (bad) (bad) sub fwait test and mov adc test lea dec cmpsl fs mov pop fisubrl jg iret rorb pop or and xchg add jne dec jae push insb cmpsb (bad) jge sbb and mov mov inc adc pop stos nop rep cli xlat cmpsl roll fs sub xor fildl mov push fstl (bad) push lcall sub xor cmp mov aas dec roll dec xor sub lea jae or xchg pop test sbb push add mov mov jecxz jae leave inc or hlt mov in and sub and dec cwtl nop test xor stos add pop xchg lods mov jecxz push leave add imul aas mov mov cwtl inc mov popf mov leave leave cwtl movups and std mov dec cmp insb xorl lret mov sti ds mov imul mov lcall test sub arpl in and js dec inc shlb mov push and loopne cmp not aam cli aad mov aam jmp push sub jae out in fwait or sbb push (bad) dec arpl push xor inc loopne xchg jbe xorl mov sbb mov iret outsb inc or cmpsl and jl rcr mov mov jnp fiaddl push mov mov xor mov cmp pop shlb mov xor add lods xchg ss push faddp pop mov pop (bad) (bad) icebp adc (bad) (bad) cmc push sbb or (bad) cltd xchg mov (bad) andl push sbb movsb lods jg or xchg add xchg mov push or imul cmp pop movsl mov add mov imul mov push (bad) xor jne and movsl adc movsl shl ffree dec sbb adc pusha mov (bad) mov pop sbb jb es dec mov test xchg jo or lahf cmpsb popf cld loope ja xchg incb pop (bad) cmp arpl mov sub and push sbb mov adc adc push in sbb arpl or or rcrb das arpl mov xor add cmp jecxz pop pop push sub sub adc push inc fisubr xor int mov cmc hlt push xlat ja mov fist fidiv jb pushf xlat inc inc sahf cld xor out lret ja xchg sbb add or imul lods sbb xlat inc jns push adc add and imul shlb dec mov mov pop stc mov sub pop push insl lret mov ss add cmc cmp add or fildll dec cmpsl cmp fidivl std inc cmpb xchg jo scas jge imul and push mov hlt jmp test (bad) sbb xchg dec mov lds mov insl lahf shlb inc das xchg hlt add mov test lret out stc dec jp lahf dec xchg pusha fwait xor adc stc dec outsl push test int3 mov mov and pinsrw clc sbb ds fisttpl test dec jae or jne push and test popa xlat push mov cmp cld mov loop add scas out shrl pop xchg jo lret in ljmp mov clc jg out dec mov add dec mov in lea arpl leave ds fcmovnu aam mov sub popa dec push xor aas dec lds or mov push and cli loope cld pushf fwait jo pop sti jbe mov xor dec xchg scas inc pop scas ja aas mov test stos pop cwtl repz je push es mov xor mov ljmp or hlt jnp dec (bad) pop sub xchg in cmp in pusha and shll or add jmp mov pusha or jecxz dec sbb out jnp pushf (bad) mov xchg and (bad) adc stos lods in mov mov mov cli mov cmp aad lock xchg or pop leave and or shl cmp sbb dec cmp inc and scas orb xor fcompl cs xlat pushf in outsl es sub inc mov pop in dec push lds sbb mov jge cmp jb imul into mov or jnp,pt mov mov pusha push push imul mov push popa enter gs stos sub out (bad) test xor in movl adc (bad) in cmpsl nop pusha hlt dec (bad) jmp mov (bad) (bad) mov roll in jae sub (bad) add mov cmc jae jb repnz cmp add call (bad) shrl push mov imul cld in xchg cmpsb dec push icebp clc jns stc sub mov jg andl nop (bad) or pushf ret add iret push jge ds or aas (bad) je add jne ret xchg xchg or ss lods adc out in sbb imulb roll jo (bad) mov mov into and (bad) ljmp lahf imul mov jecxz mov add add out repz push add mov movhps pop enter pop loope jae nop push fldcw (bad) sub mov fs mov push pop mov dec sbb lahf jge jle repz lret dec aas pop aam push fmuls fidivr xor add sbb push int3 push mov xor xchg fcomp cmp movsb ljmp (bad) adc mov ret fiadd xchg test or push sti mov (bad) mov insl test jmp mov xchg add into dec xor scas repnz inc or test sbb jg push sub pop insb out sub mov jo mov sbbb loopne xchg call adc jle adc xchg push mov test outsl push push mov sub call xchg sbb sub add sbb jo mov jl in lcall std mov pop and subl jl cltd mov pusha and mov dec or mov add (bad) pushf inc jbe push mov ret imul push inc in dec lds xchg push jl repnz lret fnstcw test lcall mov mov adc cmp repnz mov jae cltd fistl shr xor add imul stc cmp mov testb sarb xchg jnp adc out jp cmp xor push pop sbb popf push test out jg xchg hlt jno mov inc xchg sahf cmpsb mov call mov ret xor addr16 jo cmpsl jecxz push repz andb repz lahf shrl jb xchg pop pop mov mov stos jecxz mov push test rorb roll push mov into daa add rcr sub add nop mov je or jb (bad) iret inc push outsl lahf bound repnz xor and jge inc inc add mov sbb dec sub mov jbe fidivrl frstor (bad) mov loope inc jmp insl jecxz idivb cs popf arpl xor push sbb inc clc jbe mov sub and roll cs cmp jns (bad) jne aas adc cpuid xorb lock adc xchg pop lcall icebp sub hlt lods and pusha cld inc sub xor stos lcall jl mov dec aaa jo sub add add std push imul push add mov xchg stos xor add aad ja mov arpl cld (bad) pop sbb lock out out mov mov and (bad) pop push adc xchg movsb inc inc out inc stos popf ficomp push jl jne xor mov fwait cmp aaa cmpsl cmp push sbb lods orl insl jo or push mov jb call push cltd or jno mov cmc push xchg rolb xchg les mov xor daa push cmc jge ss pop ja ret mov lds clc xchg mov mov sbb mov imul mov (bad) jno fwait pop adc shrb mov jnp mov xchg ret lret movsb sbb test add cmp and push mov cmp xchg daa mov dec and movsb cld adc xchg push hlt (bad) sub xor cmpsl imul push into mov dec enter (bad) jp lods stos loop mov outsb lods fsubs push sbbb pushf mov inc xlat xor mov sub or mov imul jg mov ja mov call xchg xadd mov add fimul sbb xor shr enter bound int3 divl and xor adc iret popf dec das mov je ja dec add xor mov xchg push mov and mov out mov scas pushf sbb mov pop rolb xchg xor (bad) fisubrl or cmpsb mov sbb int3 and fisubrl inc sbb scas or fist xlat mov cli inc sbb aad push xchg add sti flds push icebp aam push xor jae xchg xchg mov dec xchg xor out jnp mov mov stc push cld daa or cmp stos subl or pop push adc mov incl dec movsb pop mov or mov jl fwait dec sbb or out dec push dec push out xchg xchg pop mov sti aad pop cmp jbe sbb ret or push inc xor shlb dec dec (bad) std inc push mov xchg (bad) loope imul xchg jge jge daa sub and ret cmp dec out movsb fstps ds dec xorb cmc pop (bad) addl es or pushf loope jp or push push dec jge push mov add popa in out shrb inc jmp jle xor daa mov stos inc test sbb add adc jnp cmp cmc sub sarl jo out mov cmp ret outsl xor loop push shlb and mov sarb jge push jmp push repz xchg cmp lret mov pop in pop push cltd mov push mulb xchg popf jg fisubr fnstsw (bad) mov sbb mov test jno stos sub mov or jbe mov loopne dec fisttpll mov js cmpsl lods addl push mov in inc jne outsl jl bound cmpsb arpl xchg (bad) notb out cmpsl fmull or loop sub inc cli mov aas push pop push adc dec push mov icebp sub dec out (bad) jmp pop mov inc dec aad xchg cmp dec dec enter call xchg loop inc jle fildl push arpl mov dec popa (bad) mov inc jle push sbb bound adc dec and add mov fcoms jae aas mov inc popa dec cld cmp mov jg adc adc sub loope repnz inc rclb dec fsts outsb push test xorl inc ljmp idiv int mov movsl fs fld jmp sbb or mov clc outsb adc fcmovbe (bad) fist push xchg pop movsb mov imul loope cmpsl lds addr16 dec jmp in fmul in fisubl mov test sub mov dec ret je ja sarl test gs mov lods xchg loop jle shll cmp sub imul mov mov inc cmp es scas mov push mov (bad) out enter sbb add jne cmpsb pop mov or sar lock movl out xchg (bad) sbb aad jg aas jbe es mov lods mov (bad) repnz (bad) sbb push add dec ja xor (bad) push pmuludq xchg push lret sbb lods sbb jle xor xchg mov push fcomip (bad) push inc outsb pop mov xlat xor shl and push jl dec fcoml enter push adc cli addl sarl inc pop mov and xor imull gs loop inc inc std sti lods or jnp adc cmpsl pop and sbb cmpsb repnz lds inc sbb mov xor jns in add es xlat arpl dec out and mov jns shrl push pop icebp bound xor sub cltd mov xor scas jae gs mov lahf aad roll pushf lock (bad) mov iret fucom popa dec icebp jl pop inc mov adc stos or test jmp daa sub out pop mov (bad) insb mov shl test popa push cs sbb pop push shrb xchg mov jg rcl jp xchg jnp sbbl in repz outsb pop lret adc icebp cmp inc sahf int3 mov add shl dec cmpsb fdivrl ss xor and cmp push aad popf lret ret scas ret sub imul push xchg lahf xor sub int push loop adc sbb cmp lock or sbb mull xchg es pop (bad) lcall push fs xchg loope and inc dec (bad) ss mov cmp pop ss cli mov mov cs aam add faddl shlb and push das push sbb xchg sub ds and mov mov sub push inc inc jo inc push mov movsl rcll cs movsb xchg xchg (bad) mov mov sbbl dec and cmpsl rcrb pop add sub cmpsl sbb outsb jb out mov xchg xchg or pop lds inc inc pop pop leave jmp mov in shll add add push inc (bad) popl addr16 or push push mov fisubr fstps mov sub in sbb xchg pop push outsl lock lret sti xor rorb cltd pop xchg mov mov fwait aam pop mov xor data16 fdivrl mov out push push sbb ja cld fnstsw inc adc mov ret adc enter mov xlat and jecxz orl cltd push sub jae push sahf sub jle cld sub shll xor mov dec xchg (bad) in mov das call aad adc ja out adc into call push sub mov sbb and ljmp addr16 sub mov jle shll outsl or pminub das enter dec and inc or aaa addr16 sub dec pop or pushf test push roll jne and test cmp leave push out into stos shrl out adc add lods test sti mov xchg xor add add stos mov jb mov subl mul push rcll sub jecxz dec les lea (bad) cmp sbbl jg sbb insl jmp in jae xor adc movsb fcompl mov lods clc addr16 inc adc mov mul in (bad) into add and rolb cltd icebp pop int hlt adc outsl mov sub push push mov push orl cmp jmp pushf arpl and das pop inc adcl and pushf ss inc ja out out out call push (bad) xor fistl pmaddwd or and jle sarb das fidivl lret dec dec (bad) lret jge sub mov xor stc xor xchg ficom mov bound mov dec lods fnsave jmp push bound dec stc mov cwtl sub sbb je movsb push jp in pop or xchg dec das mov xchg loopne negb sbb in sub repnz sub sbb loop sti dec mov fimul pop sbb push ss sub or sbb fsubr lods mov pop jns iret push stos (bad) aad sbb lds jne mov daa add mov sahf test js dec lcall push (bad) test mov dec jg inc inc mov out sbb mov push pop (bad) popf cmpsl (bad) scas add fsub stos sbb pop push repnz push ja xor xlat lods loop fs pusha fwait rcrl or inc mov adcl cs outsl rorl or inc inc pop pop push ljmp cmp adc dec lods and int3 jne pop inc ja lds hlt popa cmp call xchg loop sub in das jnp or jns (bad) out or scas (bad) pop mov out add gs jp (bad) dec (bad) pop xor test lcall sbb lret dec lret push mov mov addl std add out aad mov rclb adc mov or or mov jb out popa add in jge sub inc icebp (bad) inc in test add outsl inc mov or push cwtl in outsb xchg and or adc rorl xor mov adcl cmp jmp mov or pop dec and pop xor stc incl cmp mov adc pop dec and rorl cmp and jmp inc jns cltd inc jns add enter (bad) add bound out orl pop dec dec mov sbb test cmpsb nop popf push test bnd and and cmp push pop mov (bad) or clc dec xor ret adc jmp rolb stos sbb cmp scas rcrl xor iret sub sbb inc push clc in xchg clc jne xchg out ficom hlt push lcall scas dec push xor dec push add movsb adc lods inc (bad) repz into stos lret xchg xchg mov inc mov xlat mov xchg daa leave repnz xchg pushf cld xor xor (bad) pop push pop lret pop push or nop adc mov dec sub push call cmpsl insb into mov out daa cmp lea mov cmp std mov fidivl dec or fidivrl mov cmp xchg dec fsts sahf jge sbb adc ficomp cmp cmp stos xchg mov mov pop jmp outsl dec in out cmp mov add mov call (bad) xlat jbe xchg repnz test ret pop lcall imul pop push push push movsl (bad) jne inc addr16 xor dec adc lods xor (bad) jmp repnz adc inc aas mov or sahf test mov xchg mov pushf std cmp (bad) mul bound xor ljmp out push lcall hlt pushf test push xchg mov imulb and fwait js sub (bad) iret (bad) loopne repz and mov into dec mov sub xchg scas push and dec adc idivb sbb cmp jbe pop or mov (bad) test push adc inc jle mov jmp or (bad) das and repnz add mov and pop pop lods mov imul mov add cmp stos add and sbb mov push sbb jnp adc cwtl xchg subl ret sub lret inc xor loopne ret lods fs mov adc xchg dec add imul ja lcall ret or stc xor jb mov lods repnz (bad) gs or sbb mov ss sbb stc pop jecxz fidivl (bad) dec andb shr fcoml int3 lock rolb fbstp scas pop leave aaa movsb dec (bad) xor jo loop (bad) xor leave jp push sub imul cwtl adc in aaa (bad) jnp out mov mov mov cmc cmp push push add lods out mov leave outsl pop or and and loop enter cmpsl mov cmp aad enter jmp mov or in bound sbb mov sarb pushf stc xor add push enter sub sub cmp popa inc add (bad) pop jg mov xchg mov inc les in roll into jnp hlt bound in or jp or inc jecxz dec sbb adc and xchg in out xchg gs inc into and inc mov repz sbb aam xchg shll psubb rcll loopne fidivl push fsubrl add jae cli pop test sub cmpsb adc in jno inc xlat (bad) jne stc adc (bad) and outsb xor sub pop dec movq pop mov in jge fwait mov jo sysenter inc jge lcall sarb pop in sub mulb pop enter jle movsl sahf pop (bad) in mov lcall jecxz mov bound fdivs adc adc ret jo sbb jns rorl jo pop sbb xchg lods imul push loop pop adc iret jl test pusha xor (bad) imul mov in mov mov xor sahf outsl push stc sar movl outsb xchg adc repnz pop jmp leave popa pop push lods ss sbb scas test push and push pop mov out jnp mov add imul cmc (bad) insl ljmp mov adc hlt mov divb sahf out fistpl push cmp sarb pushf mov jne test (bad) push mov pushf xchg bound mov mov mov das mov push lock out mov adc enter xchg ret fisubl mov ds scas sbb pop std fstpt add xlat mov inc push sbb fnstenv jno and stos loopne out leave out dec (bad) enter add out rclb mov add (bad) jbe mov call nop or lret out hlt ret sub ror fistpl and xor in popf (bad) (bad) (bad) adc dec mov (bad) jnp jecxz jle mov lods popf adc leave testb mov bound in cs dec cmp rclb mov dec pop rol sbb sbb iret sub sbb movsl stos lahf in push mov aad test outsl (bad) mov repnz stos push xchg mov imul adc jmp pop fldl shl push repz xchg or lds scas add movsl cmc addr16 cmp jg fcmovu out inc mov movsl and adcl push int3 lahf (bad) lcall dec imul mov sbb xchg repnz out pop test insl inc mov out cmp adc mov pop call stos mov inc jg fistl clc push das push aas (bad) push les outsb mull enter stos jecxz faddl xchg jmp jae and push stos mov lret inc and fld mov fadd sub mov cmpsl cmp xchg rclb (bad) and push push iret notb push xor loopne scas pop stos movsb jge jnp push xor fwait and insl mov in xorl pop out (bad) aam cltd sub pop lahf insl xor add mull popf rcll mov dec inc lods cmc popa push jge mov fwait sbb in pop pop push loope dec or movsb stos and sbb dec fist (bad) ljmp fwait cwtl shll lods xchg (bad) adc aaa clc mov mov (bad) mov lcall mov cwtl jae insl sub pop cmp mov int lcall mov xor push pop cmp out test inc jns pop stos fmull mov jb ljmp rcl sarl jno sub loop inc push sub ljmp adc pop jmp mov (bad) je ja and ficompl lock or dec in mov cmpsb in adc fnop adc pop xor and popf (bad) scas jp rcll nop or (bad) and loop aaa mov lock aas pop xchg fdivp pop xchg or adc mov js xor (bad) fldt addr16 int (bad) xlat insb in nop fisubrl adc (bad) hlt push mov pop std out mov out test rcll jecxz fdivrs stos pushf xchg mov push out push pop sbb cmp push or inc dec xor scas add cld mov push or bound pushf mov push gs mov jbe add jno push sub mov mov xchg sub sub xchg ror jecxz iret inc data16 adc mov test cmpsb mov (bad) mov mov cltd xor add out mov mov dec pusha clc imul dec sti das mov das inc nop int3 xor imul inc in stc and pop cmp ja pushl sbb stc lods ffreep (bad) lret adc xlat ja loopne gs mov fcmovnu inc mov popf adc daa jmp lea xor mov cmp leave mov adc stos pushf mov loopne add loop lahf sub sbb add es jg mov mov icebp mov repz inc pop cmp pop mov xchg mov loop pop xchg cmpsb sbb xchg js push xchg jno (bad) enter fisttpll cwtl xchg cltd inc xchg (bad) xchg mov in addr16 int3 mov jge jbe and or dec mov cmp push and cmp gs push and mov movaps mov pop cmp inc mov push es pusha iret sbb mov xchg sbb imul sbb mov cmp cwtl loopne mov cmp aaa add (bad) sub sub jbe jge jae lahf popa jge inc imul dec dec xor in rcl call lahf xlat fsubrp add mov enter push flds dec jnp fisubr pop and ret xchg push cmpsb movl or std mov jns (bad) popf push repnz inc ja jl mov xchg notb push gs sahf jo add ljmp adc and out mov lea mov in xor into pop out jp fimul cli adc xchg shlb xor mov mov add mov daa les je mov jae sub (bad) (bad) or pushf xchg dec xchg jns lcall neg jge mov mov dec psubsw adc outsb jbe lahf movsb ja cmp test test xor mov loop xor gs push pop or repnz cld pop fwait dec ret ss fwait icebp push arpl aad ss loope adc out mov mov jge aam mov pop cltd and xchg xor jb fmull pop (bad) or addl xor inc and lcall orb push add sub bound out jmp pop sub lret or dec dec mov scas shlb testl push pop lds xchg inc (bad) xchg insb repz ret or das or into leave lds aad add dec aam mov mov lods xchg mov adc in sahf mov xchg ret shrl mov mov jmp pop ja dec jmp mov sbb inc mov dec mov cwtl lds adcl aam loope stc xor or cmpsb xchg hlt add mov rclb or mov add mov cmp out xchg mov mov out mov scas jmp sub (bad) cmc mov nop jo cmp push xchg add pop mov adc lods jo popa mov jbe fisubl or stos cwtl test lods test adc lea mov fsubr mov pusha and adc pusha cs push jle cltd mov inc cmpsl mov pop jl lods adc pop (bad) mov mov mov loop testl mov mov jo cmp pop test lahf das aas je xchg test adc dec divb xor fnstenv mov sysexit inc (bad) mov and aad fistp stos dec clc mov mov inc mov iret push adc and enter sbb dec aaa stc bound and mov clc pop push xor or and aad loop or push dec or pusha in scas outsl lcall insb sti xlat fistpl add mov or stos add bound test popf pop call es loopne xor xchg xor and mov jmp fmulp cltd fsubrs xchg std pop cmpsb jne int3 mov jae mov cmc jle fisubr rorl out sub stc add dec mov cmp mov gs mov enter inc sub insl push add repz mov jne int lahf in add mov push push xchg rcll mov stos int3 iret xchg scas mov jns xchg cmp pop sbb jp push ljmp loopne adc repnz orl dec sub mov hlt das adc and add push mov xchg xchg jle xchg adcl xchg sbb xchg adc sahf lods addr16 adc cmp sbb fldl mov into (bad) sbb push pop jl dec adc mov ficom jge (bad) lods in sub testl roll lock lahf or into mov dec mov and mov push das (bad) and out shrl roll xchg cmp xchg pop mov ret imul mov xor js xchg adc ss pop test mov movb jg mov pusha push insl cmc pop cwtl lret push jnp fidivrl and shl push mov outsb sbbl (bad) stc adcl push push div xchg aaa sbb dec repnz cwtl das cld cli enter sbb xor xchg cmp fistpll mov push pop mov mov cltd xchg mov (bad) fidiv rorb (bad) mov push lods scas ds pop incb bound mov or popa add add push push xchg jno int3 and lock ret cltd inc push cmp cmp adc aaa bound (bad) int3 orl pop nop sti and out adc movb sub shlb lcall adc sub jne clc jb push lock js (bad) and sbb arpl xor aaa cli jb mov sti dec sub add lock loop imul into and sbb (bad) xor mov repnz addl in mov sarb pop out inc lcall fs sub mov jo push leave jecxz nop cmpsb sbb sbbl push fnstcw add dec jecxz adc test dec pop andl mov mov inc fsubrl les jecxz inc xor hlt pop insb mov mov mov iret test in xor aad push dec push add push fwait xchg push pusha inc inc and sub test pusha lahf dec adcb lods cmp mov aaa idivb lds in out sar pop sbb jecxz cmp rep or mov lret mov pop xor fistpll push ss aam inc je jae mov mov sub adc push pop push adc inc sahf inc aaa aad fsts push movsl sub pop fisubrl lods cmp in mov cmp mov rclb dec push (bad) ds mov sbb sub fidivr scas sahf movb mov dec cmc mov fnstsw mov into loopne cltd xlat jle and sub pop dec stos pop das add adc aam adc pop gs sub push arpl push adc adc into ljmp adc mov movb pop mov pop xchg gs lahf ret mov js lock test fcmove push movsl stc mov xchg mov dec cmpxchg pop add test pop repnz or xlat subl or push out inc les inc jg leave enter xchg outsl pop loopne inc inc push push cltd (bad) mov mov add clc pop mov sti jge hlt adc jg movsl stos add jmp push int3 adc pop xchg dec xor mov ljmp call dec jo aam repz pop mov lahf iret sbb mov sub mov xor dec cmc xchg subl test fcomps xchg fbstp jo repnz ja sarl stos das daa mov (bad) jbe jae add sub mov in push pop xchg and xchg sbb pop imull (bad) jne aaa test mov xchg pushl sbb icebp cmp and sahf cmpl (bad) into movsl pop loop (bad) iret fstps mov pop lods add adc inc sahf out in popa cltd lock lcall push rorb cmpsb sti push add xor fnsave js daa pop ficoml mov inc sub (bad) nop in adc fild or fwait adc (bad) xchg adc mov enter mov (bad) cltd mov fsubl sbbb sbb sbb push cmpl insb inc outsb mov pop cmp jl mov fstpl gs sbb xor inc xchg sahf mov fldt insb fildl jns dec or or (bad) lea cmp mov pusha mov fsin sbb adc lds mov jno dec (bad) test sbb shrb ja mov or dec push add mov jle fdivs js sbb lock (bad) aad dec inc test cmc mov cltd xor push dec jecxz adc and cmpsb lods inc hlt inc xor sub stos push scas das pop in loopne xor adc in xor jae sbb dec and orb jge or lahf jmp (bad) mov cmpsl push mov roll rorl pop and xchg pop or or xorb add xchg pop addr16 out adc push sub lds imul int popf inc xor pop aas rcll jmp (bad) dec jecxz aam call iret ret pop jae in mov outsl in xchg inc xor lret xchg xorl mov lock push mov test insb or das stos popa xchg dec scas aad jb incl enter sub cs repnz (bad) jg fdiv fmull test ljmp push inc sbb sbb imul adc es pop inc add cld mov pop mov mov add mov fwait leave es push push add push or test mov xor push jae sub adc movsb pushf xchg jne mov scas pop mov cmp dec xor xchg pushf dec das shlb jmp rcl mov enter call aas pop sbb jno jg cmp sti aas xchg and fmulp icebp aas popf fiadd push push mov rorl pop pop and sub adc sbb xchg pushf sub mov testb cmp fcmovne fstps (bad) sbb sub es out push repnz jnp lods sub scas fdivs cmpsl and ficompl imulb ds out imul enter jle ds dec stos push insl dec sahf popf jno push popa jno jns add adc loop testb xor out outsb loopne fs shl stc push jle dec clc cmp pushf lock adc gs mov into (bad) in ficoml push out add lret mov xor int pusha stc imul push pop aad stos bound push cltd xchg loop and lahf arpl fcoml out icebp (bad) push rclb fisubl divl dec xchg xchg fwait test in imul dec push pop add xchg idivb lods outsl (bad) adc push jb iret adc add (bad) sarl std or (bad) (bad) aas jle ret mov mov out popa or js and sbb scas mov jo adc mov fisubr push aam mov inc mov nop sub xchg cmp (bad) mov scas lret pop pushl mov js sbb inc mov pop loopne addr16 and cmc lret lock push mov aas ja loopne xchg fs rorl xor adc lahf lods adc cmp or mov ljmp push movb out inc mov mov sbb lods fdivl sti sbb scas xchg cmpl dec add shrb mov outsl aad xor and test and je mov dec mov sub popa sub dec jg push push stos mov shlb test push cld cmp fisubrl ds es fwait stos cmp pop aam icebp imul push scas adc xchg addb sbbl cs scas test push jmp out inc (bad) repnz jmp (bad) mov (bad) dec aas pop pop loopne out iret sub mov add popa daa inc inc loopne gs cltd push inc xchg sub push jg shlb dec xor test in mov and xchg scas sbb jecxz out sub xchg je add jne add pusha inc or pusha inc or xchg in mov shrb fistl lcall jne and and dec push pop cmpsl jecxz pop andb movsl sub fwait out stos pmulhw mov mov cmp inc add outsl jecxz bswap (bad) cmp sub call and push addb jo mov insl xor (bad) movsl dec jb mov rcrb lock dec mov in cmp mov dec icebp adc cmp cltd jle add (bad) fistpll jecxz mov jmp cmp aaa inc push shl push clc cld and cmp int3 inc sub outsl push inc loope mov xlat lock or jle ds xchg in imul daa jno dec int dec mov sub mov adc hlt mov xchg and mov sub pop sbb pop pop test adc nop xor mov jle push std jl out push xorl jbe fstpt xor (bad) loop lret push xchg sub int icebp mov ret sbb call sbb stos adc sbb lret jecxz mov aas mov pop in pushf outsl enter call sbb rcll sbb movsl sbb jne das cmp insb arpl mov mov popa popf jo aaa inc mov je jmp mov scas inc xlat cmp mov jb xchg repnz sub sbb push (bad) xor cmp into shlb out rclb and adc lahf mov call inc push (bad) jbe test push (bad) popl jg lds sub out gs and xchg (bad) push push stc inc lcall imul adc add je ds insb rol inc cmp mov in xor je cmp mov adc xchg dec push es movsb mov ret hlt jp or (bad) stos gs push push mov je add movl mov dec xchg (bad) cmp enter xor or or daa lock sub cmpsb or inc pop ljmp (bad) sbb xchg fildl pop movsb jbe xor xor stos in imul lods cmpsl es adc add mov push cmpsb mov lret or add sub adc mov add jg adc push movsl pop dec jecxz (bad) inc test or loopne (bad) je imul lcall cs fwait mov xor mov sub sti movsb inc jmp fadd inc fnstenv push fwait pop fbld imul arpl and push clc cld sbb pusha ds (bad) and mov (bad) lock inc xchg pop imul mov clc test test adc xchg push mov push jno push mov add ret popa mov add int3 cmc mov jp scas leave aad (bad) pop inc pop movsl inc add and sbb ret inc xchg sbb sbb fbstp into adc roll insb fldenv inc hlt mov inc sbb mov mov insl sbb mov outsl mov icebp (bad) xor lcall mov xchg ja mov rclb imul cmpsl mov repz inc mov push sub inc (bad) mov (bad) lea loop fsubrp icebp scas dec (bad) cltd mov mov add outsl xlat or (bad) fsubr sub pop or movsb fwait (bad) add mov ja mov inc out pushf faddp lret stc aaa in ljmp out mov fdivrs lods scas out pop int3 (bad) adc mov add add mov out fisttpll inc add out (bad) loopne scas dec xchg pop insl cmpsb repnz addr16 movsb jmp pop (bad) or or stos fnstsw cmpl push iret test outsb push dec decl xchg add movsl std add rcl pop jg cmc add inc (bad) and fcmovu rep popf outsb xchg jae cmp fistpl mov pop dec testl or stos (bad) or mov add jg mov adc (bad) lods ljmp sahf dec outsb or xor xor (bad) cs icebp jmp pop xchg in sbb push sti out xor xchg outsb mov inc loop data16 sub push and out out stos outsb lahf mov (bad) push xor movntq out lahf pop dec or test jbe,pt and lds jae lcall lds test ret jns int in iret mov xor int3 pop decb test rolb fs and lret push cmovs xchg nop jge dec inc cmpsl jp test mov or call rcll leave cmp or mov ss inc data16 es sbb push sbb xchg and xchg add cmp rorb mov int3 adc ss es test mov lcall jno sbb add cmp gs sub pushf or inc sub repz mov fbld popa inc mov dec fwait insb test mov sarl mov xor cmpsl insl sbb sub sarb out dec inc sbb movsl mov sti xor push jb test loope loopne sahf mov push out push jecxz fiadd sbb add shr mov add sub inc repnz mov cmp jbe push push push add fidiv xor sub addr16 push in inc xchg ljmp sub lock sbb mov int3 dec (bad) jnp in push sub mov dec push clc movsb xchg loopne imul cmp mov popf mov loop jo pop movsb xor mov mov pushf mov (bad) mov sub movsl xchg add pop fcoml pop (bad) lds mov mov hlt in cmp add in (bad) xor pop std dec inc mov or cs nop pop rcrl lea pop sub pop lea mov mov in (bad) nop lock pop pop cmpsl mov lahf in pop repz je xchg mov mov push add test cmp pop add mov add cwtl repz test sbb clc push int3 fs mov xchg out jne enter jmp subl outsl scas ja lods pop pop (bad) push lock cs jne xchg enter sti sub pop out sbb inc aaa out mov jmp dec xchg enter mul mov out push push add pusha shl adc sub inc fcoms loopne add andl mull (bad) mov rclb adc dec jle jbe sbb cmp popf lret data16 lret icebp lahf push ret data16 jno (bad) xor addr16 out cltd push addl clc scas ror sbb sbb mov aas dec xchg jns push inc in out pop jb lahf int add jo ret push jge push fnsave push imull inc enter pop (bad) fdivr movsl xlat xor adc call stc pop pop push (bad) pusha push testl (bad) frstor sbb mov leave movsb jae jo ret (bad) rcrl jbe jnp popa stos rcrb jb gs repnz addr16 sub jae xor out adc push pop and into mov scas lret mov (bad) pop fwait sbb dec xchg pop (bad) jmp outsl icebp ljmp shr outsb call fwait bound in and mov cmpsb mov push jno jne icebp push push std pop lds push rcr xchg add lods push test and fcom inc adc rclb cmp mov mov enter test add mov xor inc pop mov loopne adc insl cmc cmc sub cmp mov popf fldcw imul hlt or mov int3 fldt rcll xor cs btr xor negb add add rcrb pop pop adc outsb adc loop xchg xor mov push das sbb fxam frstor dec int3 js mov pop data16 dec lock adc in push out sub (bad) cmp insb outsb mov pop sub jmp dec sarl fstps (bad) adc inc in push scas mov cmp or lcall jne dec (bad) (bad) aam add enter stc xchg or adc inc mov pop push fdivl loope and sub xchg jmp jnp aas data16 mov push scas pop and and setne shlb xor iret (bad) les mov test cmp sbb stc fidivl test pop ja,pn add decl out fidivrl jmp sbb out jmp adc inc scas push cmpsl mov add add fs cmp sti add test (bad) mov pop adc andl in repz mov xchg pop ror lods lods push mov inc lock jb incb mov xchg rol js mov sbb dec mov fdivrl xlat rcr dec sub push clc or fbld push sub dec dec xor jnp lahf add push sbb inc scas add stos ds pop push sbb add subb mov mov movsb movsl jno rcrb (bad) mov loop sub mov rcrl push xchg mov inc xchg dec add repz jo push inc je push xchg jle push icebp paddusw aas test or jge xor test mov sbbl outsl jbe lret or fstpt jecxz js (bad) jb cmp das into clc dec adc pop mov jo fadds pop sub cmp out call push mov out mov sbb and sub lret fbld testb (bad) or jbe xor test jo pushf cmp paddsb push outsl out cli fdivr loopne cmpsb lcall adc outsl dec mov bound mov or xchg mov mov js mov xchg imul test addr16 xchg call cmp loopne add mov sub sbb jae xor cwtl mov xlat (bad) push into pop and sub jns xchg pushf jle shll push inc sub inc jnp test mov mov push sub fdiv mov stos pop push (bad) fidivrl add xchg mov lods xor (bad) sub clc dec dec pop scas adc fs or sub popf mov push xor jecxz sbbl mov sti test les push ljmp dec push inc (bad) sti xchg inc cmp icebp jmp jbe jmp and lods clc and mov shrb pop loope fs xchg dec inc fs loop aas loopne lea gs (bad) clc test add incl lods sub pusha xor add push pop leave jl push cltd or sbb sahf mov and mov add pop cmp jl insl xor call movl pop cmpl sub pop insb imul icebp or fbstp ds mov cltd xor push addr16 repz repnz mov xchg movsb stos xchg mov add jl lods push cli sub lea lds pop (bad) cld inc (bad) into inc jmp push sbb jae enter adc xor mov dec repz inc xor scas popa or pop loope jecxz xchg and and jecxz aas pop test icebp out lcall mov imull mov test fild ret adc add test ljmp jl (bad) xor sbbb adc dec mov sub nop pop add rolb sub in sub push push mov dec leave (bad) cmp aaa insb bound cmp inc or stc scas pop lods add jnp ficompl ret jno pop cmc push fistl insl mov sbb dec jp sub push fstps data16 (bad) xor push or cmc imul adc lds sbb inc sub fist (bad) jmp dec adc decb enter jnp or in shll adc xchg mov ljmp inc fidivrl fwait sub dec push lcall adc or cmp sub lock mov and sbb insl xor push mov dec ror or mov sub lods push stos cld xchg adc imul and adcb cmp stos adc xor and mov jecxz and iret fsts jne cmp lock fistpll push mov out outsl (bad) (bad) mov lcall inc por cltd pop loopne lret adc pop push adc push xor mov in fmuls lret hlt mov and inc stos div daa push ret and mov fisttpl popa and mov mov mull push pop int outsl cmp scas xchg sbb lcall mov leave dec outsl repnz ljmp movsb mov mov push loope pop fnstenv out test mov jnp pop (bad) (bad) das push xchg cwtl cli mov testl stos lods stos ret dec leave lods dec cmp dec into cld movsl add cmp mov add mov push out mov mov aad cmpb xlat jbe jle jge insb dec lret insl mov mov xor or lret push popa in aam or pop cmp mov test icebp inc jge sub mov rorl (bad) push test or push pop decb mov cld (bad) mov jbe subl xor fcmovnbe fdivr leave fstl cmp xor shrb sub mov push jbe scas jnp cwtl push sbb mov sub (bad) movsl ffree jnp cmp xchg stc lret (bad) mov repnz pop sub mov pushf dec and orb and dec (bad) mov fwait dec icebp jle mov or out mov ja dec dec cs sub fcmovb sub or scas xor lods add mov mov pop shlb ljmp xchg ret add sahf sub lret in pop ret mov sbb aas cld out sbb sub xchg sbb repnz cmpsb repz jecxz push push mov inc cmpb sahf mov cmp fstpt push xchg xor dec dec or and and fcoms je into rcrb not idivl stc out ret xor pop and test jmp push pop inc pop add sbb into movsl mov pop or or leave adc push inc sahf dec imul dec pop mov sub stos stc in mov push lods pop adc cmpsb mov cmp aam add test not xor push push sub (bad) test xchg jp daa aad cmp mov pop mov mov or pop movsb xchg dec sub mov jmp loop fcmovne je jne stos mov rcrl sbb test mov stos insl cmp nop insl icebp gs (bad) in or test inc mov jns pop shll cmp pop cmp (bad) fwait inc push inc cli les stc insb add sti push dec push dec aad icebp aad xor adcl inc sbb cmpsb frstor mov lahf leave (bad) pushf stc sub mov pop arpl gs rcll jle mov sub xor stc in push mov flds dec inc jmp test scas outsb cmp stc stc fstpt fucomip out adc cmp mov (bad) hlt cmp jns cmpsb add sbb (bad) outsb jle (bad) lock pop pop xchg or subl and mov fs fbld enter sbb incl pop orl mov mov or mov aam test cli iret repz mov cli fcmovbe mov add sub pusha mov mov sbb (bad) (bad) mov stc sbb lcall fnop jge or in sub inc test adc out loopne pop outsb rolb int3 cmpsl xchg or out arpl cmpsl mov mov lret adc repnz add sbb xchg shll sub ret shrb call rclb mov and std pop out xor pop inc sub adc int3 jno outsb adc mov dec scas sahf insl inc aam xchg jl ffreep add xchg dec add adc mov or xchg cmp jle cld xor popa push rclb jo loope inc jle dec mov mov addr16 movsl fsubr mov out sbb pop movsb shrb loope and out sub in mov mov inc test mov test add add jecxz mov (bad) popa scas popa ret or dec lds xor cmpsl imul or dec xchg mov xchg pop cmpsl add dec outsb lcall push movl stos adcb inc ljmp push push bnd mov nop mov cmpsb mov sahf xor push mov sub xor or dec push insb pop lock xor sub insb mov insb into gs xchg and inc ss call xchg or mov pop fs pop (bad) cmc sbb mov push cwtl int aad sub ds iret loope in adc pusha cld aas and (bad) lcall mov fdivr stos (bad) push mov inc cltd es ss fwait jle aaa push xchg mov lods fidivr hlt test (bad) stc je mov in and imul ror inc sbb sahf jne jecxz sub (bad) or xor mov or xorb dec adc lret fdivrp mov ret int hlt xor pop push push jae sub int3 sbb adc lock xchg lods (bad) dec pop mov mov add sahf outsb stc mov jp sub inc pop sahf xchg push mov aad push jns ljmp das push out fcoml out mov clc pop repz and dec je adc aaa or jg das pop jl and daa loopne (bad) call lods movsl pushl jae dec push push rorl shrb add aaa mov outsb icebp popa test aad sbb sbb mov sbb and adc insb cmpsl (bad) jle,pn inc sbb push xor pushf add xchg mov addb leave jmp cmpsl (bad) outsl jmp sbb in mov outsl push pop fwait cmp cmp pop lret xor outsl in jmp negb mov loop xor ret fmull inc (bad) scas addb xlat sbb pcmpgtb insb or sti cmpl mov int3 dec repz mov es cwtl pop ss dec sbb adc aas movsl test inc jno jns bound scas lret dec jno push cli pusha andl mov fs xchg mov ret js sub cmc lds bound mov pop jge aad dec jp icebp jmp add stc jae test mov stc pop jbe xor cmp rolb cmp ret and bound inc out jp,pn or sub and scas jp push lahf or mov or mov or sbb mov and and fidiv pop adc cwtl xor pushf sub xor and (bad) out pop pop aaa pusha sbb pusha or dec push arpl iret cmp xor add push pop mov jb inc sub sub pop xchg sub lret xchg add out sbb xor dec mov xchg in pop xchg rcll xchg out ret jnp mov movsb inc pop inc mov imull inc (bad) jns loop nop sub pop rorl jle insl (bad) ja cwtl adc movsl dec (bad) lods data16 or cmp pop or aam mov mov (bad) dec mov push mov enter and sbb mov jns xor jge (bad) sbb cmp dec fsts bound scas cltd xchg fisttpll push xor mov push hlt xor inc (bad) jb inc xchg mov outsb je rorb add dec cmpsl adc rorb xor xor add addr16 mov insl sbb mov push (bad) lock jp (bad) push mov mov in dec sbb sub pushf mov pop sbb rcll jae push movsb and stos fmuls inc or rcrb cmp sub div adc je or mov mov (bad) pop das lea aaa iret mov mov push lods (bad) sahf or aam stc inc xor xchg mov lret out loop jg std inc jp inc pop cmp or push xor out sti cli adc add dec mov fcoml dec dec add and (bad) pop je jnp sub and xchg jo jmp inc outsl cmp jp and jle xlat jle mov gs sarb adc les hlt lret lahf lods cmp mov xchg sbb fmuls stos mov in xchg in cmc cwtl out cmc test (bad) leave inc mov xchg repnz stos push sub mov cmp jp test test lahf stos outsb or mov jmp cmc sub daa (bad) mov es aas shlb dec adc xchg arpl ror sbb popf xchg (bad) jno mov push cmp icebp int mov mov sbb add test mov mov or fcmovnu sub jns lret es fwait push sbb or cmc outsb mov aad fsubr sbb (bad) fsubrs or adc push lea dec aas xor fnsave jno (bad) or dec icebp sub fnstsw add cmp popa mov adc xor lea mov ror in mov xchg in mov mul xor ljmp pop xor addr16 mov xchg insb xor imul lret push dec add outsb mov inc cltd mov sti jmp xor (bad) fbld lods xchg repz ficomp cmpsl lock and xchg jg and mov cmp xor sub ret inc mov mov adc and jg cmpsb dec xchg movb push pop xor outsl test sub daa fnsave daa mov dec sub and inc pop (bad) jno mov sbb out mov and xchg push inc or repnz fsts (bad) or ja mov mov pop mov mov imul aas arpl cmp fidivrl iret pop cmp and push call into push call lods adc xchg inc xchg aas faddl daa and ror (bad) fadds pop jl push cs test and mov idivl pop gs lods sbb popf xor (bad) xchg inc gs incb dec ljmp jg pop movsb lret mov icebp sub (bad) jg push aam outsb mov into int3 add cwtl xor (bad) pop inc jge lock push mov and pop hlt test pop out je pop das sub jle sub insl push mov nop mov (bad) xchg mov daa (bad) pop cmc mov je inc mov sub adc xchg cld out sub cmp jns pop mov sbb (bad) mov ds xor (bad) test pop inc pop les pop xchg out cmc xor push cld sbb imul rcrb dec pushf add addr16 push aam or ret int out test mov lret push adc push (bad) ss or pop dec lods mov sti pop lcall push jle insl xor adc lahf in push jl (bad) sar ds sbb add cs (bad) push xchg test mov or leave les fldenv pop imul cmp gs andl mov lret sub jo cli mov incl dec push push adc fwait cmp lea mov shl fbld (bad) loop sub (bad) cmc idivb jne dec fist aaa aaa push lcall xchg mov xlat nop lret sbb sti mov pop call xchg scas ja adc cltd xor jle mov (bad) jae push aad add push shrd in ficom call test imul call push incb or fisubr sbb cmp sub decl ror cmp jge,pn std movsl jmp xor leave mov sti lret push push push or in ror mov xchg cmp daa mov std mov aad sub aam jns push xchg adc pop es lcall push fs push xchg dec lea int push popa fisub (bad) aaa xlat fnstsw cmp pop test or pop push insl fisttpll jbe push js cmp fsub jnp es xchg dec jp ss mov xor cmpsl icebp ret ret mov mov mov imul jns sbb cld stos jl pop in repz addr16 (bad) sbb jmp data16 out out push and loope sbb fs pop jbe jbe test mov mov lods sidtl loopne jg xchg jns adc xor scas or js fisubrl jecxz xor stos movsb or int3 cmp xchg nop add cli xorl cwtl int cmp inc jbe inc cmpsl mov ds push cmc or pop xchg pop std cmp cmp adc add jo bnd cmc mov xchg mov mov jns jb xor nop dec adcl repnz and add xlat push fwait add testb jp (bad) fcmovb and movb fwait sbb xchg inc adc lock xor arpl inc xchg in xlat into cmp cld dec mov lock or pop pop rcrl inc mov mov or or add jl or dec int3 movsl mov sbb rclb hlt enter mov clc mov jg in inc out out inc push das jae pop sbb ljmp and mov les jbe mov cli mov lods mov cld aas sub fwait cmp push call addr16 repnz add add in jp push or add gs push add lock xchg mov sub pop sbb jmp popf lods loopne jp inc pop lods pop test mov mov fdivrs pop movsb sbb add sub negb dec dec popf daa xchg sarb mov or mov dec rcrb adc movsl fnstcw lock or outsl loope fidivrl fdivrl dec adc mov pop push outsl fistpl adc hlt ja mov aad rolb insl scas sbb jle fnsetpm(287 imul sbb lds mov lahf hlt pushl in push and stos pushf idivl test stc mov cltd fwait loopne mov sbb pop pop (bad) iret cmpsl loopne adc dec nop (bad) enter push jb subb lds and jl sbb cmp inc addr16 cmp push daa repz xchg sbb jge les test leave movsl add subl mov xlat cmp loopne test pop in (bad) or mov in push jecxz and jo xchg xchg cmp cmpsb das cltd jg mov adc (bad) imul mov fstpt notb mov mov fisttpll sub push push fwait adc out stc mov mov movsl hlt dec push cld je and cmp adc arpl inc nop in fwait pop mov (bad) jns xlat jg jge sbb test vdivpd insl adcl sbb add add or fsts in dec or jmp aad fsts lret inc repz xchg idivb xchg sub test aaa dec (bad) das (bad) in push or cmp outsl inc adc jb sub rcll outsl dec dec mov cmpsb fwait sub lahf in dec pop or ja rorl lods ds repz scas push jl inc hlt ret cmp in movsl cmc pop jle pop aaa fdivr jmp add rcll pop xchg into jmp push out insl cmp adc inc sub push push nop push jecxz rcrl insl out cmp std subl repz aad jmp xor les inc stc pop lahf mov jle ss repz mov fdivrl stos xor dec inc lret aaa outsl xor rolb ljmp pop inc pop jle mov in dec push sahf cld jns arpl xchg jg in cmp js adc add xlat sub mov jmp xor xlat lcall out dec sbb push in xchg xor and and scas sti imul cmpsl aas inc sbb or push sub xchg inc nop cltd movsl push fdivrs int3 pop adc xor cmc fidiv movsl mov mov and adc add pop pop rcrb outsb decl je inc xchg xchg mov in jns xchg in or cs or and xor iret xor xchg test mov mov adc je jae sub insl pop mov out mov xor mov negl in mov mov xor aas fnstenv ficomp inc cmpsl push mov mov lods xchg mov add cmp or or jbe inc lds test xchg dec dec jge sbb xchg into dec rcl mov pop out xchg movsb mov push (bad) sahf cmp imul xor pop test mov sub jnp inc out jb call push and jmp pop sbbb xchg pop push mov das test mov sub adc lcall mov add push movsb (bad) sbbl mov pop or sub shrb pmulhuw push and xor (bad) imul add mov gs mov stos cmp hlt and stc sub sbb add jmp mov xor jl xor xor jle dec nop mov and idivb (bad) and inc test mov sbb loopne inc add adc rorb xor je stos call cmp jecxz stos push xchg inc cld nop lock ficomp cmp cmp sbb push (bad) in lret mov imul pop test inc push inc xchg push ficoml lock out and stos mov icebp popa int3 insb lock sbb ds xor pusha test xchg sub xchg aad dec lahf xorl sub pusha lret clc inc or popf rcrl scas or test and ret fs jnp cmc test aaa stos sahf mov cmp push or mov (bad) cli cmp popf push fmuls leave ret movl dec xchg jmp ja cmp dec adc scas mov xchg jecxz inc mov pusha inc jmp adc pop aad adcl out or fisub or dec mov push and subl xor andb mov or (bad) push jnp cmp (bad) popa inc xor lods fwait mov xchg iret inc loop pop clc sbb mov sub inc imul (bad) scas or into inc xchg lcall mov xchg cli lods out int frstor in jb jg pop mov sub xchg fnstenv push jp xor pop lods mov dec inc pop repnz ja inc push (bad) out (bad) lock cltd fidivl pushf ret cmp inc mov lock clc and int3 adc inc pop or push addr16 jne (bad) fnstcw je cmp fwait es test jo and (bad) unpcklps test lock and add pop pop xchg (bad) loope test in lea jl add aas xchg insb loopne outsl sub ret and gs push or sti movl pop scas push add sub adc sub dec icebp imul inc xchg inc xchg adcl mov or js (bad) out xorl xchg fnstcw jg stc or ds push inc xor push xchg shrl in push lea cld setae daa (bad) mov fdivrl movb cmp cmp scas loop jae pop mov in and lahf cmp xchg sub popf rclb xchg mov jno inc rcrb popf bound cmc push xchg sbb in aam js and movsb les jmp into push outsl (bad) or cmp xchg sti push dec xor hlt add leave std std push mov mov ljmp xchg clc js int3 int sbb fmuls sahf das mov mov cmp fildll in fistpl adc (bad) jl adc aad xor dec cmc iret cs jle scas mov or (bad) loop pop sub icebp sbb fstl lds xchg dec (bad) (bad) fldenv and ror mov cmp jecxz xor push or inc mov xor pop adc pop cmp imul cmp mov fidivl fnstsw (bad) lret push aam popf or mov dec lea scas inc cmp inc jne bswap cmpsb gs das pop mov mov lds scas pop (bad) or xchg js outsl xor (bad) push pop or in inc adc adc sbb cwtl lret xor jl out leave stc out ja test es sub or out pop jge lret jp in cmpb fyl2xp1 paddd test cs hlt gs aad push (bad) fistpl push and test sahf mov bound lods je (bad) out mov push mov xchg inc (bad) xor cmp std repz mov sub jl xor lret into mov add dec xchg xchg jmp test dec ret xor mov test nop ret in rorl jecxz bound add push sub sbb stos xor jle mov pushf pop mov enter add push outsb lods mov sub out idivl and outsl or xchg mov or movsl test nop adc xor and or aad jbe adc ja or sub jno rcll ja mov out jbe inc jne dec jl ljmp iret insb scas lcall push fadds inc mov push sbb out std jl scas jbe inc leave enter sub jmp setnp pop lds (bad) pop dec jo lcall in mov int add hlt inc std bnd or mov sbb push push fldenv lock mulb jp add ss das pop cltd mov jg iret aaa mov inc imul clc std arpl lcall clc push jb test inc pop sbb outsl inc pop mov sub jmp (bad) mov les andl pop daa rcll data16 shrb into sub ret pop xlat cmp jno ret xchg sub in sub ljmp dec xor lods cmp mov cmp jecxz mov (bad) cmp push sub sti sbb adc jge gs repnz loopne sbb jae xor iret insl push jbe cmpsb repz or lds add lahf push add sub fnstcw adc sub out mov jns mov ror sbb inc mov lea andl or lret scas mull sbb fnstenv aaa or out cmp addr16 cmp xchg je gs inc jb add scas les inc dec jl inc inc mov mov dec cmp mov push pop lcall mov mov xchg sub push sub sarl push sub mov mov and inc add pop dec mulb sub imul sti pop (bad) adc loope imul in jp jae lods pop outsl daa xor ds sbb sbb bnd out repz mov in add push cmc insb jnp mov lock in dec imul repnz cli pop xor pop ret sbb or xlat (bad) pop adc adc rcll mov mov (bad) dec pop test mov xchg xchg fbstp add mov mov adc inc push cmpsb jl addr16 pop cmp fbstp cmp rcrl clc xchg push xchg leave mov mov insb jmp push stos dec fdivl push lcall out notl ds dec dec xor and and cmc sahf push daa fnstcw jnp pop scas fld scas push add movsl (bad) into xor inc dec test xchg daa or mov or orb outsb mov aad fs cmc jo mov cmp inc andb loope jl pop jp je lock cmp adc ret sbb ficom jbe mov mov sbb push out inc dec pop imulb mov or cmp mov mov aaa iret mov mov iret test js icebp es mov and xor mov fdivrs adc mov pop iret mov stc dec sub testl or les jmp push dec into cmpb inc in cwtl mov xchg jl arpl loop inc inc push sbb adc xlat push jge push cmc sub xchg mov jge mov ret ret lock lcall shll push jno add jnp pop je inc outsb cmpsb ja jo pop push (bad) ss out (bad) popf and and xchg ret mov faddl into fnstenv sbb enter hlt mov fcomps cld lahf pop lds pop xchg daa mov add (bad) fcmovb movsl jne mov dec int rol aad add xchg push sbb scas push cmpsb insl pop or inc xor jecxz sbb push or xchg inc sub divb cmp jge mov add movsb clc or push cmp gs ret mov std lds stos insb adc mov mov push dec and mov dec and sub xchg data16 into jle scas mov testl or frstor push jae and jl push sti push jle xchg sbb mov mov je push out fisubr aaa push in or cli mov aad sti sub incb or mov adc fistp ja sub add mov enter push mov movsl stc int loopne jno sbb jge mov rorl repz test sub push out sub cmp movsb xchg std push sub (bad) aas ss aaa dec mov ljmp pop xor incb adc jg inc mov mov xlat and cmp in data16 sub (bad) mov cld enter mov push dec add loope mov (bad) rorl in mov call test jnp popa scas shufps data16 insl jle add addr16 stos sub icebp aaa dec into fiaddl aad xchg dec or mov or loop mov leave push or jb cmp mov sbb dec jns call decl pop push push add fisttp xchg push in cmpsl push ss int stos (bad) lret gs or pusha push and pushf and icebp adc or cmp adc lock div test lea add mov jbe outsl test iret imul in mov not ficom mov cs pop adc sbb (bad) (bad) scas push xchg insb enter repnz xor mov mov cmp scas rolb mov cwtl dec adc cmpsl and and jno outsb jae popa bound inc mov adc mov (bad) pop fisttpll cmp jno scas lods (bad) sbb in xchg repnz mov xor xor mov cmpsl add sub shrb stc (bad) dec jg rcll inc pop cmp cltd lods mov adc pushf add xor xchg in ljmp add fwait jge xor mov dec mov test insb mov cltd daa test jae pop addl dec cwtl ds stos nop mov sbb ljmp stos sbb jno inc shr mov repz sub sbb mov ds sbb dec sbb movsl lahf or into mov rcl or sub mov adc dec mov push pusha push add jge mov pusha mov enter cs hlt movsb xchg out jae sbb fimul push insl xchg ds inc xchg push inc (bad) cld frstor fisubl push scas mov xchg mov sahf outsl cmp outsb imul pop pop mov mov movsb mov mov mov xchg or dec (bad) call andl mov xor sti mov lods and add mov mov mov dec ljmp push lret stc in call lret pop ss push in mov js cmp repnz and push mov ljmp mov add (bad) mov pusha jns lods dec push in gs int3 ljmp outsl ja push jb loop xchg mov pop data16 (bad) mov jecxz jno xor cwtl sbb add mov mov add sbb sub xor (bad) or imul mov sbb mov adc dec lds fnstsw mov bound sbb mov cmpl shrb jge mov stc and fiadd xlat push out mov inc xor es cmpsl inc and cmp ss imul ret mov daa or lahf scas mov xchg mov loope stos push fistpll mov pop mov (bad) xchg mov stos pop mov adc push (bad) enter scas jb add lock popf das inc jb aaa push stos aam (bad) rcll cmp push xor mov adc cmp xorb pop and in xorl mov pop pop jo xor jnp and icebp in cmp loopne negb addl mov test es xchg test (bad) push outsb inc (bad) cmp and pop and (bad) inc pop lret (bad) (bad) in mov data16 jbe mov mov imul sbb movsb and cmpsl out mov cwtl jo jnp enter call or (bad) out js mov push dec (bad) cmpsl (bad) jg and fwait (bad) gs js movsb pop cmc lds sbb rclb and std in fisubr stos adc inc xor add loopne pop sbb push mov adc inc mov jo mov sub es test lods mov clc sub loope and jnp aaa mov sub rcrl dec loopne sysret pop nop int3 lock adc sub bnd (bad) sbb cmpl sahf das lret and mov test lret (bad) mov or jnp leave fnop dec pop sbb iret loopne cmp sub (bad) imull es pushf xchg nop cmp xor das sbb fsubrl cmp jnp lcall cld inc (bad) inc push cmpsl add (bad) xor cmovp pop lds popa push xchg push jmp pop lahf xchg hlt cmpsb cli pop mov sub and cltd into or ror mov dec aam mov daa lcall repz out lds in je out gs ret loop shll dec xlat fnop add cmp mov out pop (bad) sbb sbb xchg mul or cmpsl xchg test or lds orl (bad) lret xchg (bad) popa jp jnp mov add mov sub cmp ds mov cmc sub test mov test (bad) cmp stos inc insl mov push and mov cld mov pop call xchg test loopnew inc fnstsw pop outsb xor xor cmpsl pop outsb pop xor movsb pop push stc and push fs xchg xor push xchg push loopne pop add clc (bad) loopne (bad) pop ljmp mov (bad) out mov out (bad) mov mov int jge imull cltd (bad) jge adc cs sub test mov in adc loop adc jecxz push (bad) sarl aam mov btr fwait aad aad inc (bad) movsb xchg sub xchg mov arpl pusha dec adc mov cs jbe fist sbb mov mov gs popa sub xor adc jno push add insb jp int3 mov movsb movsb xchg xchg jp enter movsl dec fs das out roll jl pop push or addl pop pop adc insl pusha dec inc add pop cmp xchg lds push or repz xlat inc inc arpl jg xchg addl add xor cmc adc or adc dec mov icebp jg sub push ret ds jle add xor jne (bad) fstps test fidivl shrl jbe cmp dec jne jne sbb cmp inc scas jbe aam mov in out data16 pop adc and pop out mov int3 pop inc enter and in pop add in icebp ja es hlt sbb jo or mov jns and in stos mov cmpl push mov jecxz das out enter les sbb add adc lahf test arpl pop nop das roll mov arpl mov ret testl negb lcall (bad) leave (bad) scas fidiv ds outsb dec mov sbb dec cld sti dec inc js mov adc sbb ds push (bad) xor das mov fsub lahf dec sahf pop rclb xchg pop jmp add xlat mov insb js fbstp adc scas (bad) mov or mov out mov xchg fdivrs dec stos cwtl in movsb fidivrl mov repnz lods lahf pop jno jne adc daa fdivs mov aam cmp divl aam mov pop in (bad) mov push scas push sti out into cmp cmp aaa (bad) inc enter inc fildll das out or test xchg out aam daa rol int xor xchg pop xchg dec xchg xor ljmp repnz jecxz (bad) fidivl cmp jmp push popf (bad) lcall pop pop insl jbe mov push loopne adc sbb pop std daa mov add repnz or lcall negl xchg sub cmp jmp xor xchg lret xchg movsb jns (bad) mov mov out repnz sub push loope push scas cmc xchg mov dec or pop daa loopne mov outsb stc test adc (bad) daa push xchg or fistpll arpl mov jl pop cmp (bad) ds xchg dec dec add ds data16 adc lret shlb into mov out mov stos or xor enterw lcall aaa popf sbb push xchg sub into js in pop fstl adc call call jo andb inc data16 sub dec jae cwtl xchg fsubrs xor cmp mov mov mov pop out cwtl push mov inc popf jmp pop xor dec mov lea and sar out cltd (bad) jp lods pop mov pushf test xchg or mov sbb inc mov lret rcll leave inc push cmp cld shr push fldenv pop js mov imul pusha ror (bad) inc out adc inc dec clc imul jl data16 jae out pop insl andl adc push scas pop cmc pop dec push pop out lock leave fisttpll mov cmp pop inc aaa jns imul inc mov or adc mov or cmp cmp je lods gs adc push lahf fnstsw idivb addb sbbb enter fwait sbb mov mov rol div aad adc jmp xchg sbb sbb pop jg xor jp in sahf mov int gs test arpl cmc cmp test push pop mov adc xchg pusha pcmpeqw xor push fiadd sub (bad) adc push imul cmp lret enter clc cmp sbb repnz sahf xchg fstl (bad) xor int3 subps ljmp call dec jp fisubl mov sahf cmp dec in mov mov movsb push out gs imul and cwtl mov lcall lret cltd dec outsb jbe,pn sbb mov fwait in outsb xchg rorl sbbb cmp nop hlt add pop xor scas into jnp mov ja test xor int3 in push sbb insl in loopne xor adc cmp repz dec sub fldt mov xchg ja jge cmp push xchg xor sbb cmpsl pop std jl jge dec jbe mov jle xor lock and or orl jl mov fadds xor fdivrs xor ficom bound dec fmuls in or jne mov (bad) std xchg call inc int3 jae test call in mov cmp sub ja lods sbb popf mov ret mov xchg pop add sub call daa dec cltd ss mov cmp js cmp stos dec fucomp sbb push jno jmp lret enter or adc arpl jmp and push jge int3 iret enter js pop les adc and (bad) sarb aas insl ja mov das push xchg leave or adc push scas add das es add xchg (bad) enter pop out cmp lods hlt mov aas (bad) adc adc mov ja xchg leave sbb sbb pop or push mov stos negb mov je inc fwait adc fsubrl lcall outsl lods jbe out add cmp lret adc std ja inc xor incl shrb add ffree inc dec std fcomi push (bad) fsubs sbb and in mov mov lods jo cmp repz call adc sub shll (bad) test pop fdivp add repz inc sbb add fcomps je stc test imull mov push xor ret shr mov icebp pop ds pushf jne xchg push out movhps dec dec dec or lea les std jo icebp mov pop pop icebp call xchg and add and inc jns dec and push xlat or push add shld (bad) jbe mov imul pop in ffree mov scas jno cwtl aad and lcall ljmp lods and daa jns pop sub cltd cmp lock ret movsb (bad) cltd fs pop repnz test sub sti push pop push or push sub xchg fsubrs mov lcall sarb leave mov and add mov jo sub dec xchg and inc push jmp push xchg stos fadd stos test (bad) or pop pop jno test (bad) push jecxz adc add mov addr16 popf sub daa popf out rorb pop fnstenv lcall mov inc out jo sub sbb loop mov addb push aas (bad) jecxz aad dec imul aaa dec jno jle lret cmpsb xchg cmpsb mov (bad) jmp xor fisttpll sbb cltd into shl sti jne leave call or xchg pushf xor mov mov pop mov xchg sar add adc mov lock out mov gs pop lahf les xlat add mov gs fsubl psubsw push mov in mov mov int dec je inc xchg int3 xchg je and int3 cld popf pusha inc scas mov jo xchg inc sbb stos fidiv push nop outsb subb cmp fs mov cmpsb push push inc cmpsb lret xor pop xor cmc das out jne pop popl pop adc mov lock jecxz movsb lods pop mov arpl push mov stos add fs test jo into sbb hlt cli orl aam imul mov gs fdivrl dec (bad) pop cs mov cmp xor dec js sub mov aam arpl out mov lret imul mov mov (bad) ja push (bad) addr16 fldt daa imul movsb xchg mov aas fdecstp or mov mov lret ret sub (bad) adc es call mov and pop jb xor repnz in or dec rcr (bad) mov and lock jnp pop out rcrl les pop ret aas mov test mov sbb add outsb dec jbe insb mov dec (bad) loope mov notl xchg shl or mov fnstsw loop fmull out or mov sub pop sbb pop xchg pop mov mov pop push int dec lea jg mov lret dec aaa pushf pop arpl movsb (bad) ja push movsb cmpsl int3 aam pushf adc (bad) mov fwait pop or or inc ficoml lods mov cmpsl (bad) cld or xor push and fsts test str int3 sbb fimull repz ja pop push clc popa adc movsl (bad) or insb sub ror mov push push mov dec mov jmp lcall and enter pop fldpi lahf inc lock (bad) mov jno jne insb add loope cmp lret dec cld push hlt mov mov pop lea mov mov (bad) int int3 callw out lret test inc or sbb dec std addr16 pop dec sub sbb mov imul push les xchg sub adc inc stos arpl pop shll mov loopne mov sub lret lods jnp ret adc mov out test mov es mov out sub jnp sbb lea adc push pop mov movsl fiaddl outsb movsb aad mov cwtl adc push xchg mov pop mov jb repz ss xor popf (bad) dec aad sti fdivl or cmpsl adc and out (bad) mov outsl (bad) (bad) pop pop lret xlat pop daa outsb test jg leave jecxz,pn mov add pop mov sub mov in std loope dec sbb int3 inc jg imul ret mov cmpsl mov imul or ja mov into or push inc insb sub xchg cmp or sub aaa cli push sub mov jns (bad) jae cs test gs (bad) jne divl xor xchg mov jno icebp ljmp lret push and push push les sub mov jp orl lret (bad) js mov sahf icebp nop xor ret jo stc int hlt sbb cli enter push cltd push imul cwtl sti lea stos ss jnp insl in pop or sbb dec imul xchg inc (bad) aad mov daa mov fildl nop mov or jge lods sbb mov add jae sbb xchg fmuls into adc xchg lods cmp test insb sbb pop push push ret fadd mov mov cmc insb inc scas out aam insb stos shlb xor mov (bad) std pop cmpsl xor rclb andl lods fwait xor inc xchg iret inc add in (bad) rcrb dec mov adc pusha ja push je or and (bad) les in aad cmp mov pop cmp std (bad) xlat lock and cmp xchg xchg mov dec mov adc repnz or inc cmp mov add xchg mov mov hlt lret push and inc in xor cmp cmp jp dec lds lahf test inc insl repnz xor push rcr (bad) rorl or jae sbb and push or cwtl loop sub push in push movsl mov pop aad xor pop pop ret pop pop fistl popa les (bad) mov sahf out push push (bad) and cmp xchg xor mov mov cs mov add fs fwait ss mov add fwait nop das cmp pop test cmc les inc jns (bad) cmp dec js pop ds mov idivl jns scas jns xchg loop das shll shll je fsubr sbb pop mov xchg addr16 sti xchg jnp xor iret xchg mov ljmp adc bound iret inc fcmove leave sub dec imul pop mov sbb jl popf test pusha push xchg mov jae mov xchg or (bad) cmp adc scas (bad) pusha and xor inc aam gs inc sbb mov cmp and xor push pop jnp in add pop mov sarl fnsave repnz push aad es insl sbb ret je test lds mov mov dec mov fsubr jne in cwtl inc enter lahf sbb insl sbb xchg cmc out popl fcoml bound mov push popf lods pop and jp enter add inc loope xchg nop das xchg ljmp xor in std pop pop xorl aad jbe jae push lret mov jnp (bad) es test scas js int3 sbb out pop xchg jg dec inc ja inc sahf mov mov scas lods mov cmpsb fldt adc pop lock cltd int add jge inc add or push repz inc rorb setno loope jo add subb rcr mov cmpsl ja xor addr16 jns scas (bad) push jp leave sub mov sub push jg pop aas xor mov lret pop push xchg mov lcall cmpsb dec mov inc xchg shll lcall xchg imul xchg (bad) push cmp jae stos shll iret rolb xchg mov adc and arpl pusha notb cltd pop mov repz dec dec push lds (bad) xchg dec out jp sbb lcall and jecxz push cmp add mov inc sbb std jae fsub push jno fidivl pop push and out fisttp inc popa ret stos xor test (bad) adc aam jnp leave bound into mov je sub push and mov and or fisub pop lcall lods fistpl imul xor cmc std push scas push stos xor xchg out jne xor fistp dec adc repnz leave pop mov out (bad) fstps ret xchg adc sbb sti bound loopne xor inc cmp int jae inc out lock xchg leave push mov mov js pop fs lcall mov cmp js sti jmp pushf ss xchg rolb nop xlat xchg sbb call (bad) cmpsb call cmc jbe out cmp loopne arpl jmp std push mov ds das nop jb mov ret mov mov js aad nop into pop jno fnstenv lods pop out das and mov imul outsb lods imul aaa jl das fsubrl lret dec push pop or (bad) mov mov and add ror int add push lods dec xor cwtl pop xchg mov adc popf iret cmp movsb in repz mov movsl andl arpl pop push lahf jb mov stc dec add roll dec and pop pop mov xlat (bad) sti inc xor cmp gs sti mov jle jg cmp scas xchg sbb arpl adc out mov push arpl pop sbb outsb ret stos add jmp rcl repz outsl or xor cmp push jns cld fnop jno (bad) test inc xor (bad) mov jno movsl sub loop mov mov cld add jle xchg stos in mov cmp xor pop jns inc pop inc inc xchg in test fistpl xchg or and sub hlt hlt sahf sbb mov icebp xor ret insl shr (bad) (bad) jmp ljmp inc xchg lahf jmp mov sub xor xchg fpatan add mov iret xor scas sub xlat mov jle sti xlat lcall mov mov jmp (bad) rcll inc cmp sahf scas sahf sub inc jge arpl fwait cmp xchg insl jl aad pop ret sbb nop negl fisttpll dec (bad) xor repz pinsrw ficom mov xor (bad) ja lods outsl mov dec sbb mov scas adc inc ja adc cmpl movsl les fisubl mov and push popa nop fldl2t sbb dec cmp jecxz xor mov sbb adc mov fcomps cltd jmp test and mov xchg jle,pn pop xchg lea in iret in pop mov adc mov in cmp xor (bad) inc and cmc push cli lret mov pop sbb sub push xchg enter mov rcr (bad) ss rcrl push cltd outsb (bad) mov test clc jecxz into sub (bad) pusha dec or fistpl and lds cmp dec sub sbb lea dec mov push xchg popf cltd ds movsb std outsl test test es push je mov shl mov mov jbe sub push mov call push sbb lock sub mov jle add add (bad) (bad) mov ss (bad) (bad) icebp stc mov sbb ja aas cmp jg pop in dec mov sub mov fcmovne out mov ja dec mov movsb sahf sbb daa lret xchg lods das test sbb sarl push adcl adc mov ja bound fisubrl sub movsb leave fsts pop in jnp ja inc push cmpsl movsb and mov clc sbb fild fbstp xor aas inc rcr aad mov jecxz test pop jge cmp mov es rcll pop mov out (bad) mov add (bad) and in aam sub fcoml inc mov cmp test pop sbb shl and cmp mov xor mov mov enter mov lcall lret or std sbb addr16 stc lret sarb jp jp mov jmp cmc mov hlt lods add (bad) cmc inc fldt xor lea mov and outsl mov mov enter cmpsb dec sarl adc sub imul mov (bad) out ret pushf lea sti mov jae xor das mov dec andl pop int sbb cmp push cli clc (bad) mov scas push insb adc nop dec jge sahf rcll stc imul xor jne mov loop std fmull pop cli jbe add std aad psubq add pop (bad) faddl arpl inc add mov push lret cld add sbb cmp mov gs mov pop xchg lahf mov cmp xor xchg inc inc in mov fist mov jbe cmp add ret xor testb sar dec popl lcall push dec mov leave stos (bad) mov (bad) mov fdivl dec shll ret (bad) out js ljmp xor ficom inc cld mov sbb and lret dec out int movsl aaa pop xchg test loope test int3 lcall mov outsb fucom and gs fisubr xchg ret je and lcall or push adc mov shrb cs mov flds lea nop cld lds push mov ret mov dec test sbb iret into xlat mov mov movsb rcrb loopne insb (bad) jne lock push fwait clc jo fisubl push sbb pop add and cmp inc inc xchg xlat lcall push inc xchg jmp adc or pop mov mov lret pop pop aam ss dec adc ja mov movsl das mov xchg js scas mov push shlb pushf xchg (bad) dec aad ljmp cmpsl mov cld in or in dec jno mov sub fidiv pop cmc push addr16 in mov cmpsl or lahf jg imul push into fs add push in (bad) mov test xor test movsl or pop insb jno sbb fwait xor dec pop pop add sbb push repz jne dec jns std lahf (bad) xor lcall cmpsl mov fyl2xp1 test pushf je xor rorl mov xor ljmp sub and repz adc std jmp (bad) nop add xor fsub out sti mov divb jmp mov cmp inc mov hlt jmp mov sarb or jns jne mov in or das ror adc dec xchg fadds add pusha subl sbb jle aad movsl sarb cmp mov clc push pop xor xchg das lds loope mov add add mov scas push lahf xor scas test mov and outsl sub movsb adc push decb adc fbld in hlt xor jb loop bound push and scas pop lods aas sbb inc (bad) lcall inc pop lods jl mov and (bad) push mov cmp out inc jle cmpl shrb mov out test fs pop fnstcw xor bound out sbb cs jp decl push push jb je clc loope mov pop stc push adc or and lret stos sub xchg into rolb icebp dec icebp xchg mull loop xchg sbb stos fs push mov push pop cli xchg aas mov lret jnp out daa ret sub push loop pop ret test fidiv fmul cmp and pop stos pop push (bad) ja nop cli xchg rcl mov xlat (bad) sbb pop dec aam xchg (bad) dec fwait mov pop mov mov clc mov jb in sub cmp pop xor in mov mov icebp and shl test jecxz inc push sub nop push out out jl xchg mov push clc mov mov sub insb push ret sti pop std dec je jb lahf or mov insl fs inc lret pop lds lret jg in loopne popa (bad) icebp jne in mov cmc out fs shr scas sub insb pop (bad) xchg fdivs xlat cmc or push push (bad) sub sub outsb mov pop mov jg inc cltd push es mov mov ljmp push fidivrl (bad) js lock push xor cltd loope mov nop or pop cs add push sbb jb dec mov out lock xor xchg and out enter inc mov fxch add xchg (bad) cmp lock (bad) mov cmpsl push (bad) sti lret icebp mov pop sub scas test sti jae (bad) ja js xor mov (bad) imul push push cmpl nop fistpl mov repnz xchg inc and pop inc les add nop (bad) fwait mov aas add movsb sti rcl enter ljmp and sub insb mov ret push jnp xor jb xor jmp nop rcll cmp jl in xor pop or xchg pop test pop mov (bad) (bad) jno fdivs push (bad) mov and and cmp call insl cli imul outsl das popf (bad) cmp inc (bad) or mov iret inc jnp sbb sbb adc ret movsb fcoml xchg dec fs ss jg jmp addr16 pop fmul inc aad mov aad stc stc cmpsb jns ja shrb jbe lfs (bad) push pop inc pop mov mov jnp dec testl jns mov adc dec mov jmp xlat (bad) cmp fisttpll push mov out gs or frstor (bad) sub mov stc enter mov pop int3 xchg in stos addr16 xchg test loope daa sbb push test ret jl mov dec jo (bad) loopne push mov sbb bound nop lahf in (bad) lcall and out ss inc inc lea pop or aam pop push inc push xchg mov inc test xchg sbb (bad) jg sub add mov jle pop xchg xchg rorb imul aad jecxz mov lcall ret ret dec fisubr jge mov lret mov add inc out bound xchg xchg fdivr out insb adc in sub mov iret adc bound inc test lahf push adc rorl das mov mov arpl mov rcrb orps je adc mov fistpl inc xor js (bad) or fsubrs testb sbb aas lods xor mov sub dec xor mov scas mov push pushf dec lods sbb fwait in int3 das imulb add mov dec xchg test ja sti adc and popa jno ja rol push adc xchg pusha cli (bad) sbb addr16 lret mov mov mov sub pop movsl fistl xchg test jg and cmp out adc scas and mov lahf push inc lock dec sbb sub xchg and lahf mov sarl mov or sbb mov cmc bound pop into bound call and ror out add js fwait push lret or movb arpl adc pop fwait mov push rclb je (bad) adc xchg gs test out sti repz movsb cmpsl lock shll pop cmp js (bad) jbe test es adc (bad) cltd inc jbe jnp rcr scas in mov mov clc outsb fidivr dec and repz sbb int3 add push hlt in aam xor (bad) cmp sarl mov fcmovbe mov or testl jo cs sub cltd mov sub lea push xor xchg ja push inc (bad) in mov cmpsl xchg and je cmp test push loope dec xor call xchg and int sbb mov loopne inc in push rorb and data16 jle enter sbb sbb int or sbb aaa (bad) mov movsb rorb xor out mov popa loope and int (bad) ficom mov inc mov movsb or cli mov xchg dec insb outsb push mov pop jl pop or ret aaa mov xor jae mov push in xchg ficoml jmp lds jp je das insl xlat ljmp mov sub mov pop jbe adc mov out mov int ret test incl dec jg mov sahf and in mov cltd jb jg nop (bad) je (bad) dec inc icebp mov push push add inc add push addl xor outsb xchg addl dec es lahf xchg bound fcoms les cmp out data16 mov push daa pop cltd or aam mov js pop adc jmp pop in sub ret adc add xchg mov jp pop sbb in mov adc movb push lock cli pusha stos mov mov sub cmc mov xor fsubs inc xor cmp push xchg incb sub push jl push lret (bad) jge sbb xchg inc and xor das pushf rcrb or cmc fwait clc iret es testb push in shlb arpl (bad) fisubl loopne aam ficoml pop or int mov fdivs leave imul lahf add lods ds rorl xchg dec lea push addl mov lock adc or sub into (bad) out sbb movb imul mov cltd mov pusha xor stc fcmovnb lods clc movsb lcall sub push jge (bad) sarb pop mov push gs jecxz rcr sub neg cmpsl ljmp shl aaa cmpsb (bad) fildll in or xor enter pop out and mov mov lahf call jbe int3 dec dec pop fimull mov dec jne sbb repnz sbb mov and cmp in push jno dec psrad fist or (bad) mov push or aam subb or test rcll jl test rclb lret sahf rcrl push lret xchg sti lods xchg in xchg ljmp pop cmp xchg sbb cmp movsl pop fwait jnp jne in inc loopne jl pusha xchg sub icebp (bad) pop outsl inc lea cmp push pop lcall leave cld out out mov rol (bad) std mov pop xor cli pop daa sbb dec lock or add fs stos push cld addr16 aas mov lods stos sub or ds stos push ljmp je sbb jle adc cld mov mov (bad) cmp aam and scas out ret xchg jo sbb xor sbb scas push cmp cmp xchg pop movsb sub mov movsb addr16 movsl pop cmp push xchg popa (bad) sar and cmp add mov mov pushf pushf (bad) xor sbb (bad) dec xor fcompl inc push lock add imul mov sbb xchg out dec cmp lret jg fsubs ljmp mov push mov mov int3 jae mov xchg mov les add test sar cwtl dec hlt sub sub xchg aas roll cmpsb inc dec lret movl repz adc jbe xor inc sar jmp (bad) in call stos pop inc inc clc fmul daa ljmp (bad) das insl (bad) sbb jle lret xorl mov stos mov out adc pop ret bound add out or adc cmp and jo int3 rcl mov test in out or push sbb subl les cmpsb adc hlt sub out jns lea pop fs fcmovne aad leave cmpsb mov cmpsl lods mov jg insb cmp sub sub push scas jmp xor add jge out pop cmc gs push xorl lcall leave std pop cmp and mov xor jmp movsb ljmp fwait jbe mov out aas inc imul or rolb (bad) out rclb mov test inc test and ljmp pop or push inc dec sti pop clc or (bad) cs inc insb pop xor jb adc inc push lds jg fldcw jmp pop or mov movsb inc mov (bad) mov sub jge test aas cmp sbb add jo je adc bound mov test or test hlt xchg popf cmpsl cmp xchg gs fsubrl pop and divb sar js jecxz sbb adc mov mov mov lds xchg add pop sub jae push inc rcl and push aad adc pop jne sub fucompp popa mov movsb mov out xor pop xor xchg jnp ljmp push enter and in mov jo xchg mov cld xchg test pop int jecxz outsl aam rolb mov (bad) pop in mov movsb out (bad) cmp xlat push cmpsl xorl mov pop jnp pop jnp (bad) iret adc jle jmp jmp inc mov loope inc insb xchg fidivrl or and adc aam pop rolb fldl cmc xor mov jl push add int enter xorb or add jne fs repnz add dec bound (bad) mov test sub jns gs (bad) lea repz enter hlt mov xchg xor icebp fistpl sbb dec (bad) call xchg xchg inc mov gs movsb fbld mov mov aas cld (bad) xor je pop stc insb fxch add or push pop xchg push mov movsb rclb mov jnp sbb daa mov pushf cmpsb sbb or pop imul sbb pushf xor mov sub push xor push aaa or jp pop arpl fsubrs jecxz outsb sub jl sbb pop lock pop xchg xor mov sti push sub xchg or mov sbb aas jecxz mov es xchg xend push (bad) mov (bad) fldt test call lock aam dec (bad) mov sti adc loop pushf inc test scas jbe xchg cmpxchg daa test or ss stc add fsubrl jno sbb jbe fidivrl in add adc sub int3 add pop adc pop xchg mov bound rcrb subl pop fcomps out push jae push xor xlat sub push mov sub xchg sub dec mov jb cmp leave addr16 lahf flds bound pushf stos (bad) ror xor sbb ljmp pmulhw dec sarb sub lret mov dec es push push and and xchg ja loopne dec ss jge dec mov xchg bound xchg inc jnp lret fwait (bad) repnz mov cmp insl mov inc stc and jp mov movsl inc pop add sbb jne push ds pop pop sti ds mov jl cs andl xchg and xor cli mov (bad) icebp pushf (bad) mov sti outsb push mov push insl out fbld dec inc stos adc fs lret xchg mov pop adc adc repz mov mov nop std or pop imul dec jecxz add pop jnp cli push sbb jbe neg popa icebp cmp aam loope mov (bad) adc sbb cmp or push xchg mov test xchg jmp mov mov adc inc imul inc jae mov sbb mov out pop hlt jecxz (bad) lock idivl popa fstps dec push (bad) sbb pop fwait mov rclb test inc xor test insb or jne dec sub arpl orl mov jl das stos jnp stos out enter aas xor mov and xchg cmp test insb pop jne loope je sbb int3 sahf sbb add sbb xlat xlat arpl lds fwait push jne ljmp fcompl lods mov (bad) cmp cmp xor sub faddl (bad) test je and test dec loop lea call pop jmp jns pop pop inc ja mov ds (bad) cmp and xor nop jge sub dec ret dec ss cmp mov mov mov sbb lock fnstsw xchg xchg push sbb cmc dec adc pop mov cld dec sahf dec mov ljmp sub mov test fsubrs pop outsl xchg mov sub push xor inc out lea shl fcmovnu or dec jno lods mov and test cmp jnp fmuls add sub and mov jge lock jl jae xchg mov adc fldl xor lret cli lods mov dec push ljmp pop into or les arpl or out add (bad) lock stos sub scas sub xchg out cli xchg std pop scas mov adc loopne mov or (bad) cmp and dec dec (bad) sub ja and test (bad) xchg iret in lock into int3 arpl sbb stos scas iret xor daa test ror (bad) lret lods jnp mov push jnp dec sbb fwait or flds xchg repz xchg sahf push inc sbb sti push repnz leave jmp lcall loope pusha shlb fiadd mov add push int3 cld jo jnp stos cmp cltd (bad) dec xchg (bad) xor inc es mov cmp mov mov xchg inc (bad) sub xchg or inc xor cmp dec jb iret xchg dec popa lcall jno mov adc addr16 test es jae push dec scas pop dec loope dec arpl dec sti adc and xor (bad) mov dec pop lds or pop or xchg sbb loop inc add add sbb jo cs mov mov ja adc fcompl jbe mov push mov mov imul out cmp js xchg mov sub (bad) xor lea cmpsl enter ds and gs and sbb cld loop jnp jns xchg les outsb mov xorl mov inc pop aam mov (bad) sbb mov pushf mov xor mov insb pushf xor sub ja xchg mov xor popf loopne push push xlat push (bad) jne jmp nop icebp test mov aam in or jno mov xchg cmp insl out dec push inc (bad) (bad) jmp and dec cmp adc inc sbb adc adc inc cltd popf arpl xlat jmp cmpsl or mov jge sbb lock xchg sarb das mov inc ret or shlb jl jp add cmp popf ja add jmp mov fs mov mov dec (bad) aaa pop lods mov mov or aaa pop push outsb (bad) xor in or mov pushf add lods cld das push fcompp jg out (bad) (bad) in xor push mov push clc or test mov lahf enter add in cmpl cmp ret mov pushw dec xor xchg pop hlt sub test test mov addr16 repnz scas cmc add and xor popa int ret cmp iret or test inc mov xchg outsl cmp or jl xchg pusha cs fistp xchg cld inc movsb sbb in sub dec test pushf js jns shr pop insl sub cmpsb sahf es mov (bad) rcl out std add and dec pusha ja push movsb sbb cmp sub (bad) pop movl popa xor lahf test lock mov lods adc in dec (bad) fisub dec es imul xor ja xchg test inc outsb and and dec insb add xor cmp insl sub and adc out lcall mov dec in aam mov loopne jle,pn scas mov cld dec push cltd mov cld lods lahf mov inc or enter int and cmc dec int3 insl mov loopne adc imul push add inc sbb out inc call jae lds sbb mov ja js cmp mov sub cmp inc enter sbb movsl jae inc xor ror mov fiadd (bad) loop pop lea ret cmp lea gs push stos xchg inc and clc scas stc bound or lret cmp cld jp mov js repz (bad) int popf mov rolb jmp call pop sub xchg inc fbld and xchg mov pop lds bound jns and push mov mov mov add sbb aas adc push push dec inc inc xchg mov pop fadds mov dec push or pop test dec ds pop stc (bad) sar (bad) adc lea test xor (bad) mov mov and jae inc push push mov (bad) divb jbe lret add push pop pop insl sbbb cmp imul pusha loop adc pop add xor test xchg xchg mov sbb icebp ret (bad) push shrl out add jmp insb inc xchg hlt ljmp in arpl push xor sbb pop mov popa jp adc push xchg pop fs push in jl rclb mov mov xor sbb mov in aas pop icebp push xor test (bad) out xor nop scas std bound or dec cwtl jmp lds outsb xchg sahf mov cmp (bad) pop (bad) dec jmp adc mov popf and (bad) adc jae jmp mov sub into mov ja xchg insb movd add stos stc cmp sub sbb dec pop das andl mov rorb insl ret fcoms js push lret mov repnz rorl and dec mov data16 icebp cmc inc cmpb cmp pop stc add cmpsl push adc (bad) les push ret mov xor pop movsb shrl outsb mov loop and or push in (bad) pop dec dec xor dec mov jp dec lcall pop mov lea jl inc cmp out adc or xor dec into or mov lds lods jecxz dec cmp sbb ljmp xor (bad) xor mov out lds in cmp cwtl bound ja icebp out imul and cmp cld dec push sub fwait or aad movb xchg jge or jb adc jmp aad pusha mov add inc mov lods fisubl fimull inc cmp jnp jle dec pusha (bad) mov imull sbb mov xchg cmp jge xorb lods test mov push jp es or jns outsb insl lret iret xor inc shr cld dec arpl lahf pop lss lock xchg mov jecxz,pn popf repz repz sub xlat dec imul fwait mov mov jecxz idivb push sti adc dec sar sahf pop or aas push scas test mov in pusha mov shrb cmpsb es xchg fwait jne out out sub add xor or outsb (bad) lahf test jne hlt (bad) push pop aad lcall push mov sbb add jp lods aad or dec (bad) shll jno and fidivrl bound mov in arpl loope pop movsl repnz cmp movsb push or and adc stc (bad) repnz js pop sub sub jge inc (bad) fldenv push mov shr cmp sbb xor fcmovb scas jne or jg test mov fldenv popa dec and sarl hlt (bad) jbe xchg sbb pop dec inc push popf xor jnp mov xchg int3 adc aad jl out pop adc cli (bad) data16 int3 ficoml dec pop pop inc addl shrb std sub int3 add movsb cmpsl fcomps (bad) sti pop mov or nop arpl shll push aas or lret lret mov lcall sbb test lcall adc lock sarb (bad) das addl jp hlt cmp cwtl movsb pop movsb xor repnz add (bad) ds xchg nop inc mov and or pop jecxz (bad) flds inc mov cld cmp lds inc ds ficoml xchg xlat or stos mov and mov and repz shll mov cltd add cmp loop test (bad) ss xchg pop sahf mov push mov out push pusha inc inc scas cmpsl push jmp lods push enter jb mov mov adc test or pop inc inc pop out push repz loop iret cmc icebp add fnstenv shll xor movsl inc inc cmp xchg pop (bad) ljmpw decb insl and es insl jae dec dec dec pop cmp in pop gs loopne mov mov imul xchg repz nop hlt and test sub jno (bad) imul push xor fsubs icebp (bad) cmp in fdivrs sbb and jno lret inc (bad) or adc pop dec faddl push xchg in pop sub mov sbb test pop out pop insb dec (bad) (bad) inc pop out (bad) in nop ret mov es jno test ljmp mov in and repz adc fldenv xchg stos push pop cmpsb rolb outsb mov jmp push movsb push xor fadd adc adc push push aam dec mulps aaa mov mov dec push dec bound lea scas imul addl js cmpsb dec movsl inc sub fdivrp jecxz mov jb xor (bad) xor mov xchg xchg addr16 cwtl pop adc xchg inc cmp adc mov stos mov mov dec dec cmpsl mov push lods fwait ret inc mov xchg ja pop fisttp int and test into mov sbb push data16 cwtl mov fwait mov insb (bad) call push jp push sub push sub xor cwtl stc mov loop push lods pop pop or iret or cmp fcomps mov jnp fisttpll in out sub js (bad) cmpsl int3 jg cmpsb das bound push mov adc cwtl cld es or push lahf daa mov push or adc xchg lock jns inc xchg sbb mov shlb sbb daa mov sbb xchg adc xchg in pop xchg push mov jmp pop inc adc mov ljmp ljmp psubq jl jp gs scas xor (bad) mov mov frndint cmp jecxz cmp jg or outsl fcomps (bad) adc (bad) shrl aam fnclex daa pushf fdivl mov push dec dec mov mulw cmp loope repz push lcall sub jmp pop aam (bad) jmp cmp sbb popf push stos test mov inc inc push aaa (bad) mov cmp mov add cmp adc xchg iret pop repz xor nop (bad) (bad) pop aad adc rcr xchg sahf inc ljmp iret out mov rorl clc jns and (bad) std fs mov jmp push mov mov push adc sub inc imul jo sahf pop (bad) iret sahf pop and int cld aam pop popa mov sub pop push sahf jns add jnp and sub test dec leave rclb inc bound inc lret (bad) xor (bad) xor js jbe push pop rcrb pushf ds ds xor insb sub jmp pop lcall xor jb inc push pop int jno xor decb test lock les push (bad) push jmp enter cmp push aad inc xchg xchg loop fisttpl sbb xor xchg mov insl nop lds ja aam imul lds test es daa test xlat push rcrl mov sbb lods fisub icebp mov in pop xor aas sti sbb ss jge xchg pushf jle mov ds inc fs adc daa inc in mov incl mov mov or es cmp add aas or cwtl mov mov mov lods jns mov ljmp jns sub xchg xchg test xor inc mov inc dec mov pop jae mov xor hlt push imul lods pop xchg ficom pop adc adc je out dec inc adc cwtl lcall lret xor das mov pop inc cmp xchg mov mov lea sub das and mov push daa pop or jne xchg (bad) je xchg jmp push es jo call fdivr fcoml std or ret xor sub (bad) sub rcrl or xchg in rcrb in arpl jbe or mov lock mov hlt enter loopne loop outsb pushf int3 push jno push (bad) into je mov xor sub in jnp mov and out xchg ds notb leave stos adc sub movsb cld (bad) sub add aam aam loop addr16 mov stc icebp popf ret xlat pop pop cmpsb xchg mov dec sbb aad push add sahf mul scas or cmp inc insb cmp add lea mov dec pop sub lcall clc add cmp lret (bad) shlb pop cltd pop xlat xor in loop jnp or mov adc sahf add push mov sbb icebp jg rcrb sbb out push sbbl or mov inc inc xor dec fdivs mov movsb loop int mov mov in fdivrs sbb jmp jo mov test addr16 (bad) jmp popa ret aad mov fstl sub cld daa pusha lods std and sub lret popl aaa out fmul mov lods in push mov jns xchg dec and addb push insl sbb sbb pop movsb inc push loope clc cmp push inc adc add sarb adc jns adc sbb mov and and jmp sbb (bad) sub in sub ljmp test sbb push mov loope fnstsw call cmp popa mov add cmpsb xchg sbb int3 popf fadd xchg cmpsl (bad) nop aas xor scas aad and ret and mov fs cmc adc (bad) or repnz outsl (bad) or jecxz and mov push loope,pt sub dec out test inc inc add jp dec arpl pop inc inc out out adc or and dec inc bound mov mov test imul leave jecxz xor adc aaa (bad) pop ret (bad) mov mov enter test jle sahf (bad) jo cmpsb mov stc xchg dec mov xchg emms aam lea dec stos mov or loop pop xor stos (bad) insb jge push and pop stos or mov aam (bad) mov cmp lock jmp xor jg push into and nop adc xchg insl adc adc imul call xchg cmp fdiv (bad) negl movsl aad push (bad) je mov loope lods aaa pushf (bad) in mov loope fdivrs std pop mov lds xlat rolb cld andl pop test inc sbb push push std mov adc jbe (bad) cmp xor pop and rol jecxz test aas xchg xchg imul fisubl and (bad) jae xchg scas insb jle popa repz jge adc xor inc push pop into lock jle xchg cmp or ret in (bad) lock lret out scas mov mov loope pusha or scas mov jl out pushf das xor out (bad) xchg cwtl es ret jbe dec in sbb dec xchg or loop mov dec cmpsl dec notl push cwtl lret adc sub sbb je loope aam mov adc loope into test (bad) or and dec ja in test xchg sbb xorl pop repz cld cltd cmpsl lahf mov pop push out call mov (bad) into imul sti std insl icebp xor loop pop inc jmp xchg jge cmpsb lea mov inc pop fcmovnb add pop mov mov (bad) pop xor insb sahf cmp dec and (bad) call stos aas inc mov or packsswb bound ja stc cmp lock adc or pop fcoml les xor outsb jg jg loopne outsb lds sbb fidivr daa or (bad) sar sub hlt out mov insb (bad) aam rcr out (bad) adc (bad) mov ficom xchg dec (bad) mov stos mov and dec mov jnp fdivr and jne scas jae sub hlt cmp mov mov ret leave mov in fs xor sbb mov push push mov jns xchg cmp lcall insl push leave call fcmovu repz into (bad) je jle cmp (bad) mov pop bound adc dec int addr16 adc sti daa push push sub xchg inc dec xchg adc inc mov pop push popa cltd jecxz adc ret movsl cltd push (bad) bound in xchg push push fcompl faddl nop or pop pusha pushf fwait adc aam fmuls mov xor enter cmpsl jnp or sahf adc cs adc cwtl iret push jg sbb out or ljmp xor push jne jmp jg pushf adc (bad) scas pusha out jle (bad) aad inc mov (bad) jne stc xchg fcmovnbe sub fdivrl xlat jno cmp sbb and lods (bad) cltd jae mov xchg xchg mov (bad) and popl dec int icebp xchg out pop push (bad) aas lea rorl dec je push pop jg out add in enter dec pop push dec aad jge inc cmpsb addr16 add imul cmpsl ret dec int3 pop and leave les (bad) jnp jno shrl lcall jl push mov cltd mov or hlt mov gs popa adc pop bound outsb fld or jg jnp jp cmp test adc outsb add cmp mov xor mov mov dec test push sbb daa adc cltd stos inc out sub sbb jne and or jns sub mulb enter pop mov jg fst xchg xor push cld fsubp dec mov cltd xchg dec pusha dec xchg cwtl mov add fisub rcr nop inc cli xchg outsl jnp insl or popf fwait stos loopne cld inc mov mov push mov jecxz sub cmp adc push dec push mov or mov push dec pop in add sbb mov jge std mov dec test iret popf aas cmpsl pop lds (bad) cmc mulb test (bad) or nopl imul lcall xchg xor mov lcall call sti push cmp xor movsl ja stc (bad) jne stos js xchg mov in xchg imull std cmc in push loopne xlat sbb insb enter jmp sbb in xchg cld repz pop mov repz (bad) push mov jecxz das scas jne aaa outsb inc xchg push cld pop push pop sbb pop push repnz mov or xchg jo sti xor shl or iret cwtl or dec mov push cli dec pop stos das pop scas (bad) fs bound (bad) fistpll orb out pop inc xchg out insl outsb rorb inc (bad) or or lods in imul sbb cld clc push inc mov mov push push sub or cwtl mov mov in jle pop push cmp lea ds lahf rol out dec adc add cmp xchg mov lds xlat pop mov popf sbb mov sub int add or cs dec out pop (bad) cmpsl sbb add pop mov jo cmp mov test out daa in ror jecxz mov mov insb or fistpl mov xor jns xor add cmp test add dec xchg call xor adc sysret or push mov push or stos add pusha movsb pop (bad) push cli mov imul jne (bad) (bad) xchg cmpsl les pop jno or bound insb int aad pop rcrb cmp loopne sbb and mov or jo inc pop lea or sbb repz dec lea sbb fs xor jp cmpsl (bad) push hlt movsb fwait cmp pop cmpsb sbb ret orb mov and and ss jecxz loope je pusha add xchg int3 mov stos sub mov xor mov jns jle rcl or xchg insl loop stc xchg ljmp (bad) outsb fs jne aad inc mov dec add or aad mov js sub pop or or xchg (bad) and pop mov pop into ret unpckhps jle rcrb fwait add xchg dec fcompl push push pop leave cmp mov mov es mov push jecxz and ja int jmp or dec or dec or notb xlat loop and cld push cltd clc fcmove mov shl scas and ss and lods fs fsubrp das jno in ffree clc lods cmpsb mov jns in shrl sahf inc sbb mov sub imul std or sub sbb push adc out cmp mov lret pusha insb sub (bad) call in adc pop repz jg ret inc loopne jo mulb adc addr16 dec dec pop pop pop int jle sbb xor mov outsb pusha push sarb ja or test pop inc or sub dec fcoms jo pop mov fiaddl jecxz inc jo aam (bad) cltd add outsw in out ja sbb (bad) jne pop sub push pushf fsubrp mov repnz xor mov mov and xchg mov aad pop sti (bad) repnz mov sbb stos adc aas sarb pop mov in shrl (bad) mov cmp pop aam add sub mov mov (bad) (bad) fstps sub xchg lahf (bad) sub xchg adc push cmp and roll scas test push js les jb adc out cwtl (bad) mov cwtl jmp jno pop popa aam xchg or fcmovb divl inc sbb int mov mov pop stos dec pushf push fidivr jle les popf jb gs mov xchg mov pop sbb (bad) cmc sbb cmp and fwait ror jnp inc mov inc mov sub xchg sbb mov adc cmc and ret test aas (bad) push ret iret shlb jge stos fdivrs jp (bad) dec outsb mov pop hlt sarb push jae pop ja mov lods lret ret mov pop in mov and lock movsb jp repnz push xchg cwtl or xchg jae leave scas cli rcrb mov pop loopne int dec xchg je test in pop xor andl inc inc mov repz cwtl xchg pop push fcmovnbe and dec inc inc fildll imul fildl lds push jbe xchg jl outsb inc into insb lock pushf mov imul jmp add cmp sub inc lock adc inc push lea push scas cwtl (bad) jmp xchg les aad or dec ficompl fldl2e dec push (bad) adc jbe test repnz inc mov add jae mov clc inc out dec mov sub int3 dec out imul cmp pushl out mov xor sti nop push inc insl test cld nop mov rcl insl roll mov cwtl in in cli scas mov xchg jl jl push subl pop out jle pop inc xchg scas or pop adc jne lcall xchg lret std sbb dec scas mov int ret mov das mov jno mov pop std insl cmp and jecxz xor adc imul pop sarl dec subl rorb jo mov imul pushf fcmovb aaa mov popa iret xchg cmc sub xchg and or sub cmp std xchg jbe sahf scas add sti mov jg mov push lods and daa sbb repz or mov inc dec inc xchg mov jns gs ja cmpsl cli je (bad) mov fs sub or (bad) notl xor add outsb cli push xchg cs enter aad push mov add and mov jo cmp jmp mov roll test adc in mov cmp adc xchg out mov out loope sbb (bad) hlt adc clc nop xchg les mov (bad) mov dec addr16 repnz into inc and out sub jb cmp lcall jl mul push outsl xor daa jnp int3 ss push call jno cmpsl lds jl clc cmp jl fiaddl push iret mov sbb jmp (bad) fcomp (bad) jno xorl jbe pushf ds or mov jno mov xchg loopne cmp sub dec fxch lds lods pop in inc lea xchg pop loopne movb enter cmpsb mov pop cmc rol pop mov scas insl clc push adc daa (bad) aas inc mov or (bad) dec ds fstpt lea inc cmpl mov psllq push fdivl add lret (bad) ljmp outsl mov loope sbb inc clc insl add xorl pushf lcall cmp mov mov bound pop push out pusha cmpsb stos pop pop repnz enter push inc and pushf ljmp bound inc pusha mov mov in dec push pop testl inc jb push mov aad sub cmp fs xor or ret aam and jg out inc neg mov cli xchg loopne inc dec icebp repnz pop mov jbe ljmp xor leave or loopne,pn xchg ds dec mov loop or mov push cmc cltd and lret int3 aas adc add fisttp call or pop and xor dec stc outsb arpl (bad) out jb aad idivb addr16 jge add mov sub push out dec cmpsb fisttp cmp push mov push (bad) aam lea xchg idiv adc je xchg mov sbb leave rorl mov xchg lds insb or insl movsb mov mov sub test insl xchg or pop inc mov push dec das (bad) addr16 pop inc in lahf or xchg addl cmp fsubrl ljmp insl repz je enter testl or int3 sbb out mov add mov cli enter sub repnz mov pop pop push sbb push jl xor cli jno dec sbb mov lea sbb (bad) xor decl pushf dec jnp jecxz inc xor push (bad) ret mov sbb pop fdivrs shll stc ret arpl cmp sub leave aaa out out movsl adc sub xchg test inc mov push mov mov sub je outsb mov out sti adc (bad) cmp cmp sbbl scas mov jmp add xor inc xor add push and cld into pop das and frstor aam pop jbe mov data16 mov in sub adc add dec popa (bad) push ret test mov jl mov cwtl test enter push mov fcomp mov cmpsb repz mov push xchg ror xchg lahf (bad) std aas in or mov mov xor or lret inc mov push push imul jp mov dec aam std dec lret int loope push scas repnz xchg movsl sub push mov repnz push fist dec jnp rcl xchg in push jns or inc dec movsl out fdivrs pop pop add nop adc or add mov ljmp pop sti xchg divb adc dec jb enter xchg notl mov int3 inc daa in xchg leave jo orl imul mov ss add call hlt push jns dec cli pop in sub fsts sbb xor in fldcw inc out xchg mov std mov ljmp jp out push (bad) pop dec je add mov das pop and lds notl out testl test pushf mov out popa add inc mov dec mov pop or test aad inc sub sub and call xchg (bad) call push add xor stos std mov xor mov aaa and std mov mov (bad) mov jb add movsb orb cmp cmpsl inc xor lods push iret cld and pushf test or bound outsb xchg add lret adc dec pop dec pop push gs jmp pushf xchg imul mov dec out add xchg stos adc inc andl inc stos call xchg aas pop pop cmp fild dec push and movsl inc aaa dec aad mov mov and daa dec jo mov push cmp xchg out dec mov stos fmul dec mov or pop sbb arpl faddl lods out nop jb push arpl mov test ret sbb cmc sub arpl xchg or mov xor mov arpl cltd xorl add mov sub inc and pop fnsave dec test add dec imul xchg movsl push (bad) jo add mulb ret pop inc fstl xchg adc leave sbb outsl sbb ret mov xchg xchg jb jno inc mov cmp xchg mov mov or pop loope jne dec in mov hlt jns ret cmpsl ds xor sub xor loopne mov lds mov test or ret mov dec push xchg out sub gs rcrb loop aaa push ficom dec xchg cmpsb aas adc in dec mov dec mov inc lahf in push cmp and into clc cltd leave sar mov bound test xchg ja jecxz inc std xor mov push mulb lret mov (bad) xor pop int3 ljmp (bad) lods or cwtl sbb outsl or arpl scas xchg add push (bad) or push cmc insb push and mov test imull fwait push inc inc pop push cwtl mov lds call xor pop out iret xchg ss (bad) jl pop dec fadd cmp int3 bound cmp into das cmp xor jns in lret xchg xor hlt xor popf pop xchg loope lret mov cld sbb jae jmp int add cmpsl pop je out jne js flds dec (bad) cmp nop mov push lcall mov mov and iret packssdw adc cmpsb xorl fadd mov stos mov inc inc loop lds push enter jb nop call sbbl lea stos mov iret imul (bad) popa pop ret cs pop xor sub dec fcomip jne mov add or jb push test cli popa pop sbb xor out iret pop jmp jmp iret jne fstpl aas mov popl sbb mov lock adc fidivrl push xor int jnp xchg dec enter jg jl sbb repnz inc and js mov sbb mov push mov cmpsb mov pop cmp sub dec fldl popa sub or mov mov xchg js mov popa pop jmp test mulb mov jnp inc jbe fildl mov dec cmpb add int pop sbb inc dec or sahf add or sbb fisttpl ja,pt sbb mov es fwait inc (bad) fdivp cmpsb add outsb xor pop and and add mov xchg ret lods in jge xchg sahf movsl xchg cwtl lock push mov pop pop pop mov scas shrl out jge insl and cmp aad scas (bad) jae pushf mov aaa jbe xor cltd rcrl (bad) lods lods pop mov mov inc fisubrl (bad) aas dec pop jle roll lret cmp jp out (bad) aam iret (bad) insl xchg xchg bound repz sbbl int3 cmp mov jns jg fmull imul sbb mov popa stos imul xor xchg icebp jb mov pop aas idivb cmp imull dec leave stos jle mov insl mov daa push xor cltd imul inc test or inc fs std pop dec notb aam int inc shlb xor sbb shrl arpl loopne mov int jge hlt fwait mov hlt cmp mov dec sub int mov shr test (bad) dec cmc adc cmp test inc negw (bad) rcrl and pop or dec mov mov push imul xchg jae xchg and xchg dec lds xchg and push call icebp mov hlt fs push cmpsb cmpsb (bad) sub jne sbb enter jns cmp or ljmp mov pop cmp fisubl fwait pop test sub lahf xchg fisubr add insb mov mov aad inc xchg inc adcl pop sbb movsl pop mov sbb adc (bad) sbb scas xor mov lcall xchg sbb pop popa sbb cwtl cmpl lret inc dec aaa (bad) adc mov mov dec adc xchg (bad) loope ss (bad) out fcmovb pop and popf and adc adc pop sub or pop push fcomip ss sub je push jnp add pushf ja fcmove or and dec cmp xchg (bad) (bad) sub pop sbb push fwait sub aad mov dec sub fnstcw test mov data16 rcrl push mov xor push shrb lahf xlat les push dec hlt inc dec je or hlt jle push inc cmpsw cmpsb loopne repz sub mov push jmp scas xchg ja cltd in subl adc xchg sbb push jge ja movsl or cli movsl aaa xor shrl orl insl (bad) das rorb or into mov push insl dec mov cs clc pop sbbl xchg push pop jo test mov (bad) stc cs out std ss test adc aas and push insl scas (bad) lret xor mov (bad) int scas mov loopne inc fs insb adc inc fcmovu jmp jbe stos popf pushf ficom lds iret and popf push aaa sub daa or psubusw mov (bad) fldt fnsave adc jns fsubrp and jnp or cs out sbb cmp arpl xchg jo sbb out test mov scas push inc repz mov loop ja pop xchg pop in lods ficoml push sub add mov pop sub and test inc stos fsubrp push lcall jg cld jl (bad) movsl loopne int das add dec and or jge (bad) stos sub xchg sub xlat pop mov fdiv xchg cmp cmp (bad) arpl mov in cmpsb inc push lods sbb mov jmp pop insl jae xor inc insb sub add dec ja mov lahf les adc das in bound aad jg and mov cmp in push es mov pop loope lret rorb inc dec inc cli sbb testb ja out pop pop in cmp sbb dec das inc std mov js rclb pop pop push sbb sbb jne add loopne jl movsb dec imul push and cwtl or iret lahf xchg call loop and repz jmp in rorb inc fiadd leave jl or lahf mul sub int movsl aam out test sbb pop and and rclb sahf sbb lahf xor rolb stos jnp pop pushf imul add pop imul xlat lret cwtl inc scas add mov js mulb leave and add aaa sbb jecxz mov rorl xor mov mov mov mov sbb fucomi lahf insl add ja test int3 in inc gs sahf and sbb in testl in adc pushf mov (bad) cld push pop dec fildll pop adc out xchg push cmp jmp push mov fildll dec jp push iret sub fwait sbb dec sarb (bad) xor imul mov rclb push jb mov orl push pop push movsl jnp pop adc adc mov sbb push cmc dec push fcmovbe aas fstpl sub int jmp (bad) std cli fstps inc mov scas ss les jbe les jnp divb pop scas push ss roll dec hlt xchg push icebp or xchg lock daa and dec loop push cld mov add nop push mov mov movsb ss and test aad xchg xchg nop cmpsl idiv cltd pop xchg xor int cld xor xor lahf fildll out in xchg sarl jnp das rol push test jne bound mov outsb pop xchg daa ja mov adc mov xchg jnp adc sbb cmpsb rcl xchg sbb (bad) mov rolb fidivr mov sbb aas ds jmp add and xchg lds jbe aaa (bad) ss push mov (bad) aad or bextr and lods outsb cmp sub pushf lock cmp daa xor orl jp scas sub cmpsb ret add jmp cwtl sbb mov cmp mov jno and aad scas ret cmp scas outsl cmc lret adc dec int3 rcll ja mov mov aas sub and push (bad) nop or or lea in ljmp dec xor jae sub cmp jl aad sbb xchg lret pop scas dec pop inc push fisub mov mov (bad) sub lea jnp fs loop cmpsl sub loope test mov daa inc cmc sbb mov lret pop jnp fmuls mov sub jnp or call pushf sub xchg adc jno add leave cltd repnz push sbb vaddsubps aas jbe loop dec mov push aam popf stc push adc dec cs repz mov leave add iret (bad) jo sbb jo mov xor in jg or (bad) adc ret mov and or fiaddl dec dec push sub lods or fs push inc push xchg (bad) call mov imulb push push outsb mov insl ds iret sub jl pop lods sahf xchg arpl pushf ja in (bad) scas fcmovnbe stc (bad) out ret dec push sub push lret pop (bad) xor jp sbb mov mov outsl cli fimul ja mov inc xchg into lds aas cld sbb scas sti xchg test jecxz rcr xchg sbb and dec int push mov xchg je jbe sahf jmp cmp lahf ja repnz cmp mov mov ja addr16 insb jbe das or aam fwait xchg mov pop loope jp mov pop (bad) push (bad) ret cmpsb movsb cs mov mov inc mov dec sub rcr xchg xchg add aas cmpsl insb cmpsl xor and jmp rol push jecxz vpaddsw leave (bad) in rcr faddl inc jb cld fwait cltd pop adc xchg fs mov mov (bad) je cmp call fdivrl xor shlb fs adc xor adc pusha sbb adc shlb faddl push dec sbbl jb xchg cmp pop push jb push cltd inc cmpsl dec sahf xor data16 ljmp push dec cmp mov adc andl stos and in add int and sbb bound mov clc jge (bad) or mov (bad) sub loopne mov jmp xor scas into aam inc mov stos test dec aam adc xchg push in and daa sub cwtl mov (bad) xchg fisttpll (bad) (bad) rorl adc shrb adcl dec xor orl scas lock cmp lds and and data16 lods pop in mov daa mov inc inc popw out xchg (bad) scas ret inc xor xchg shll (bad) decl adc push call xor adc add test andb repz outsl hlt sarl (bad) jo xlat cmc lds fcomi (bad) sub lock les lock loop pop adc js sbb (bad) jnp scas jle hlt rcl cwtl ret mov sub imul cs insb jb mov test xchg mov out and outsb mov mov fsub pop mov dec push inc pop xlat pop aas sbbl mov jmp sbb xor test rcll jge leave or fsts mov pop cwtl lret in mov or in lret mov aas lret or mov mov cmpb push jge fcom push pop sub rorb cmpsb cmp (bad) js lahf mov fwait enter cmp add cltd dec std sbb mov sbb scas in and mov push sbb loope imul mov loop pop push cmp or in mov sbb mov xchg mov ret and xchg scas (bad) or xlat and mov adc (bad) sub jne mov inc or mov aaa outsl sbb mov inc stos stc stos push inc outsb dec sbb add aaa dec sbb pop adc dec stos jle gs dec and cmp xchg mov jno mov push push xchg mov xor sub mov inc into xlat in mov into das sub fdiv loop test mov adc repz leave jle mov jge fiadd flds or inc adc loop mov in fisubl dec negl mov gs ret movsb push aaa in movl pop inc cli rorb or mov mov jmp adc or sub cmpsb xor jg pop jbe (bad) sub add (bad) mov mov cltd gs hlt mov xor aas aaa xor stos adc je jb in add js loope push mov add mov mov loope pop addr16 rclb popa enter (bad) jae push mov mov pop mov leave cmpsl cmp dec movsb xchg mov or push cmpsl fildll or add test add lcall in lcall xchg call mov jge xor xchg or pop mov shlb mov cs je xor jl les stos add fldl sahf pop push add mov push test push dec xorl mov mov mov jmp pop test out mov jae inc pop mov shrb lret stos mov aaa push push notb dec and fbstp mov js pop xchg jno jns fsubl sahf jge roll or fstp xchg stos sub leave xor in cmpsl mov pop xchg ja mov lea rcr scas stc lods adc jnp jl and (bad) push cmpsb sub mov cs jae out daa iret test and sub add mov sub mov mov sarb xrelease cmp notb cmp lods mov scas jle sbb mov stos pop addr16 divl adc out lret jo lahf xor pminub cmp div movsb nop (bad) xor divb lods xchg sbb sub gs lret andb add out fs jl jge and adc adc es cmp jg das (bad) mov icebp mov pop mov out jns xchg jnp fisttpll mov or push leave xchg dec cmc aas fnop pop mov sbb cmp sbb gs repz add std add jmp or pop pop jns loope stos (bad) xor pop mov rcl sbb stc add roll mov mov ss mov lret sarl push xor movzbl add push clc iret xchg out imul pop sbb add xchg lret add inc push or jmp aam fimul lods testl adc inc pop cli xor ds out pop jns sub mov jo nop cmp sbb mov inc xchg outsl pop or loope (bad) imul adc mov leave sub jno addr16 test aas out inc cmp (bad) fsubl or test inc lret push add ret jge mov lods mov xchg mov jb pushf in jnp jae add stos mov and sbb jb (bad) mov sub int mov cmp ss push cmp adc mov (bad) mov mov mov add mov jae dec test dec dec (bad) addr16 int3 add jmp pop mov idiv (bad) mov mov out iret xor mov add enter add inc fcmove jb or enter clc xchg in frstor sti sti insl lods jns sub cs test fstpt xchg cmp inc call mov mov ret push and mov mov nop ljmp je,pt xor lods mov movsb add rorb push and sahf push pop inc xchg xchg aas shl mov inc popf les mov sbb rclb push sbb cmpsb (bad) xor aad or sti push leave test mov (bad) lret loopne vmwrite dec lods pop lods loope (bad) mov sub stos ret pop add mov adc add mov sbb gs push ja insb push stc jbe cs pop cwtl mov jbe iret outsl daa adc movsl pop orl cmp ret enter sub sbb push cmp rolb lock lcall lahf hlt cmp les lds imul jnp mov rep jge and push jge into insb (bad) hlt scas add imulb adc popa push sbb mov inc cmc repnz mov dec in jmp fdivrp mov sbb add incb push popa ja sbb (bad) xor idivb push or (bad) (bad) ficom aad adc push ljmp sahf pop lea jno loop push xlat loope adc (bad) scas dec fwait push adc call fldt sbb sub loop jmp lock in jnp adc and adc in sarb pop aas fcmovnb mov lea icebp gs cmp fucomip push dec outsl push das insl (bad) fsubl test cwtl outsl dec inc mov lahf cmc mov insb adc stos mov dec fidivl jne lret mov add jns ror sbb in leave pop mov pop mov mov lret xchg faddl lret lret cmp pop add or movsb icebp outsl sbb fldl fsubrs jbe loop imul jae ret aaa das cmpsl imul dec jnp addr16 add ss add ss cmp clc sub xchg (bad) mov pop in pop mov or jnp mov data16 push lret in add jo sbb shrb ret xor outsl jno imul out mov popa cwtl sub data16 mov sbb inc movsl pop test in pushf sarb dec jl (bad) xor jge cmp inc and rol push xchg ljmp mov cmpsb push jge cld dec sbb test pop js mov cs sti rcrb or mov fildll sbb fnstcw insl mov mov sub cli dec rorb fildl leave sbb push loop cmp aaa lock scas test pop inc and in stc cli mov ljmp dec sub pushf rorl cli gs cli and inc insl pop ss dec xchg or push add mov xorl xchg fadd mov adc adcl pushf jns push shl cmc push mov mov and or pop xchg sbbl jl add into mov mov (bad) mov mov jle sti jb movsl mov or (bad) ret sub into push in fstl data16 out push (bad) lds ret cltd push adc lret popa cmc sbb cmp push pushf xchg mov mov pop sub sbb mov fsubrs xchg fs cmp out dec adc inc sub jns and pushf sbb jmp lcall ficom jecxz jnp pop sub mov shrb mov dec cmpl stc adc mov addr16 lods xor pop sti aas xor (bad) sub xchg inc mov clc xor mov mov idiv outsl int3 mov (bad) mov in or cltd repz dec xor push data16 repnz punpcklbw mov jmp dec ret (bad) into xchg addr16 push push jge sub aad (bad) xor pusha mov jmp xor jg movsl push jnp lcall jb sbb stos (bad) mov daa pop jmp fwait andb aam inc jno stos xchg pop scas mov cmpsb sub mov test nop flds mov or outsl dec test xor addr16 mov mov sub lahf shrl add push xchg jp gs in add rcr mov in xchg push mov int lods push mov ret jmp mov scas iret push sbb add js int outsl cmp mov dec (bad) repnz inc lahf adc sahf gs mov shr add fisubr jl clc call orl mov pop xchg addr16 xchg jb mov addr16 stos sbb movsl mov or push dec adc jno pop imul fnstcw aad cmp mov int3 call iret push popf push lret xchg mov or jecxz cmp fstpt aaa cmp sub pusha lds push std shr idivb enter inc ret dec lea jno imul add cli aad jnp loopne lea cltd add aaa ret cmp addr16 pop cmp jge push adc test xchg or sub xchg or lods mulb loope or add ds popl (bad) xor scas pop in shufps (bad) (bad) std push xorl clc cs ds flds cmp mov call sbb xchg mov sub jno mov test test es das cmp fisttpl mov fwait out mov mov add mov popa cmp push inc mov mov fistpl lods sbb mov int3 leave std or xchg lock pusha jmp insb imul sbb out mov jg jo jmp in daa (bad) cmp xor mov out dec mov mov xor pop sarl in mov imul aaa jp pusha jp dec dec pushf test mov pop lcall jmp inc (bad) ret icebp jp ret imul xchg adc add mov in in xchg or dec mov leave decl repz xor pop sbb push sti insl mov pop loop stc add pop aaa add mov sub sti lret test jg inc mov shrl mov mov mov mov mov jl addl add cmp shr in imulb loope mov sbb imul shl pop imul mov sub lret cmp adc cld cs xchg and push mov sbb in jae mov lock dec loope jb sub outsb stc xchg pop xor push enter daa inc push xor hlt mov mov mov pushf fisttpll test test rolb movsl stos je sub sub jge cmp rcrb les xchg dec push (bad) mov (bad) cmc std insb lret jecxz lret jecxz jle lret cwtl mov bnd pushf xchg cmp pushf in pop sbb out jecxz cmp fdivl and inc push mov or clc popa fisubr bound das xchg xchg call in sahf in adc pop mov pop fcoms stos in cli call mov add jo jne in mov mov bound das lock mov punpckhbw sbbl xor or dec sub mov or and out cmp mov ljmp aaa int3 xor lahf push scas sahf std dec cld div dec add andnps bound insb dec jmp and pop push pusha jge mov cmp cmpl lods (bad) aam jnp cmpsl mov mov fnop cld dec rorb into popa scas popa jg xchg lcall pushf int3 sbb fs inc sbb outsb or dec jb jl mov pop icebp push pop pop sub pop mov in iret neg lods push mull je jbe outsl fnop testb testl mov fsubrs bound inc dec addr16 and in (bad) or rorl push out jnp and pop sbb cli sub mov jnp scas xchg das push adc test jmp pop sub pop dec xchg jne inc ror das mov dec (bad) sbb xchg push mov and sar and jb insb shll jg mov sbb movsl mov (bad) pop adc andps lea stos test jnp adc add test lea sbb adc sbb repnz and test popf cs lds adc sarl jmp lods adc inc xchg mov cmp test ljmp cs in inc lcall xlat mov cmp rorb sahf gs adc inc jno xchg push mov enter pop push push out pop mov orl dec lcall ds pop push scas mov pop stc stos cltd std mov inc cmp push jo xor and hlt mov lret jne mov jl cmp sbb push xorl adc xor loopne add mov adc (bad) push cli shll dec adc mov fildll insl fimul iret cmp loop ds sti js sahf inc sbb jno pop jb test or inc mov fdivrl sub inc imul add ficom daa xchg sahf cmp jge scas mov js xor cmp push and das xor clc inc scas mov (bad) dec repz sbb xchg lock sbb sbb cmp inc sub jne jge jg clc leave push pop (bad) jno xor int incb cmp in add lea lahf icebp push cli fistl dec (bad) (bad) xchg mov js sbb pushf inc dec fistl dec lea in es lds fbld pop mov push fs jb cmp lret mov xor jns pop pop (bad) mov sarb xchg inc sti in loope out jecxz jbe jg int addr16 add xchg push sub or push nop jb (bad) js loopne mov push sub inc sahf sbb pop pusha mov xor cwtd rdtsc out jge pop repnz out ja pusha push inc push mov sub push inc jbe cmp pop clc stos adc cltd popf hlt in ficompl lock push adc ret test test push pop aas xor mov addl xor cmp sbb sbb int3 inc dec movsl movsb add or cmpsl and fistl loope cmp enter or pop icebp push loope test adc in xor dec loop dec cwtl jae inc mov mov test gs int fidivl cmpsb fcomps mov adc dec out inc adc sbb push (bad) xor push push cmp jp jl inc nop out xor sub jbe lds xor adc in dec mov loope push cmpsl mov cld sub mov pop mov adcl adc mov insb dec and repz xor sub ja cmc iret sti clc adc fwait lea sti mov repnz loopne repnz int iret push mov push pop mov (bad) push (bad) sub mov or mov pop jno or jo sub xchg sbb mov dec sub jno lcall cli das mov or and imul lock dec in scas dec fucomi sbb sbb aaa push push dec dec mov (bad) adc outsb popa out adc (bad) sbb test dec shll (bad) (bad) lcall repnz mov add push mov xor pop iret xchg xchg into int3 xor add and (bad) (bad) loope jecxz push pop and sbb dec movsl popf dec sub scas (bad) cmp xor hlt dec mov dec jmp xchg inc and int mov aad pop dec pushf xor js ja (bad) in repnz jl and ret lret out loopne sar push clc sbb out lods mov mov fwait out dec insl faddl mov sub mov jbe dec inc cmp ss loop xchg fwait xor and test or jg sub cmpsb push call mov pushf sub dec dec xor imul lods repz arpl or aaa fisubl mov popf aas add push xchg xchg cld pusha call arpl pop push or aad cmp mov push mov push fucomp das lea adc push push cmp jmp pop clc inc mov adc pop inc xchg movsl jmp add pop aam cli jb jg xchg jl adc vpcmpgtd rorl dec into jmp jnp stos mov (bad) sub mov imul std outsl mov shl les (bad) fldenv cwtl mov int push sbb pop pop and vpunpckldq mov xchg mov (bad) out in inc scas jae dec mov stos mov pusha cltd xchg add test mov xchg imul cmpl jl lret or jecxz add add cmp xor aas dec (bad) mov xchg mov in pop into push (bad) sub or mov lret sar (bad) mov pop adc enter insb std sub push movsb addl adc movsl aam gs std mov outsl mov push int int jge mov jle (bad) mov mov call push (bad) test push call movsb add lret mov repnz mov faddp push cli loopne mov fstps int movsl clc mov incl push fidivrl pop sbb pop inc (bad) in xchg jmp xor mov stos and imul hlt rep sub jl dec mov mov sub or cmp sub int add int cmp shrb movsb xor jne test inc movsl sarl fadds out aam scas dec aaa fdivrl shrb mov adc cmpsl mov mov mov imul pushf cltd push cmc inc xor aam xchg dec data16 std sub push fs decb ficomp insl pusha fsubl sbb add scas push mov test xchg ja push pushf cs pop or movl mov (bad) lods enter jp mov fsqrt (bad) xlat cmp js push cmp mov and cmp push test add or jl test jmp push lock add sub adc xchg je (bad) lcall xchg lods adc or or rep sub jne mov sbb cmpsb in cli jp les cmpsb outsl inc or fadd ljmp bound mov sbb ret adc mov test daa iret in cltd fwait movsb cmp or xorl scas mov xchg mov clc push ljmp push jno cltd aaa shrl or (bad) mov mov (bad) fs loop into mov mov xor sub out nop fs add mov mov std gs mov cmpsb rcl mov (bad) in or clc mov cmp sub cmpsl cmp stc (bad) push popf xor cltd or dec push mov es mov in xor repnz or mov push sub xlat aad and arpl test push xchg pop out and and repnz mov stos push dec lods or push sbb adc pop cwtl insl add push dec ret inc add mov pusha out xor inc pop cld andb xchg in shrl sub and jmp dec loopne imul icebp jge sbb insl nop push dec cmpsl cmp ja stc call pusha mov pop mov ret cs imull (bad) rcll out xchg xchg mov jnp and (bad) lock (bad) es jns bound push inc adc xchg les xchg sub test lea (bad) (bad) sbb xchg push jg int int3 mov in add cmpsl xor pop fimul mov xchg movsl xchg dec or mov shrb lods rorb xor pop out push and (bad) mov push lods fimul pop dec mov mov scas sub jns xchg mov inc adc jbe cmp inc lds lods xor and loopne cmp das add xorl jl test scas outsl fbstp push jae cmp js lcall push jnp cmp mov sub out outsb cmp into rcrl in xchg rol push imul clc int3 ds mov enter nop pop cltd push repz adc mov dec sbb in test mov loope mov ret bound adc jne aas jg inc push cs push lea pusha js fnsave mov pop jnp sbb fistpll addr16 sbb sub jecxz jmp dec fidivl (bad) into test lds add mov jl sbbb ret jl lds mov mov leave jmp sahf sub imul xchg xchg (bad) icebp nop mov xor push (bad) push sbb cwtl loope mov pop int3 notb orb test sbb lds enter jl repnz adc inc pop fdivs jl xlat jno dec push jg lods mov shrb not sbb and lods push push shrb or in clc inc cmp xchg jecxz jno mov dec mov bound ret cli cmp clc mov add mov pushf les bound adc sti xor lock xor bound fcompl outsb mov mov test rcl or hlt clc into ja mov xor inc xchg xchg xchg imul (bad) out sbb adc cmp and add call gs ret aam int3 cmpsl mov pop nop cmp sbb cmp stos out (bad) xor adc jmp dec call jno std movsb push push ud2 out mov sbb popa (bad) repnz loopne (bad) push cmp jnp je out ret add leave cmc sarl stos repnz adc cmp fsubrl xchg cmc mov mov imul into sub sbb xchg push cmp sbb popa xor rdmsr mov jmp jno and jne mov adcb rcrb push pop mov movsb mov cmp movsl xchg scas lret mov repnz xchg sbb pop xchg mov test mov ss or mov sarb in movsl in movsb push insl adc into arpl and dec mov js cli jnp movsl mov mov pop mov mov fwait pop ficoml cli cmp push jnp or data16 ret (bad) or pop mov and and dec dec popa sub iret fdivr int mov pop ja rorb mov jmp shrb jno dec pop aad mov mov lahf rorl cltd daa clc test shlb jne sub jecxz sub jge add adc fldcw fcompl nop mov outsb lock xchg scas rol xchg xor jns sbb push ljmp sub popl rep xchg inc mov js mov sbb pop in and icebp xor frstor mov leave js loop (bad) adc inc push nop xor and push and leave fsub mov movsl or mov roll je mov ret push stos xchg pop mov pop stc adc xor mov pushf or xorl into fbstp sbb mov cmc push outsl jb cmp xchg adc (bad) mov ficoml fcoml sarb daa push ljmp sti mov push mov sub iret jle xchg adc das cmpsl xchg cmpsl movsb iret inc iret int3 xchg stos stc pop nop jl leave inc sbb nop add sub mov cltd lds cmp in push loopne xchg xchg into mov cmp cld add mov gs sahf (bad) in xchg in int dec or jmp stos cmpsb in pop mov mov gs (bad) int loopne js lods xchg pop jns cmp loopne pop dec (bad) out outsb (bad) into (bad) jns sbb (bad) mov shr aam ret jmp notb in hlt gs adc lcall mov pushf cs mov movsl sub loop or push cmp mov sbb jmp ss (bad) and mov out push pop sbb insb mov dec ss mov lods pusha xchg mov sbb hlt pop out xchg dec and sbb aaa jl rcr (bad) in fcompl call cli xor cmp jle cmp cwtl imul xchg mov mov pop stc cmp or xor ret inc retw arpl dec mov xchg int3 enter inc mov add pop and in scas daa mov xor pop insb lds outsb cmp stos jecxz inc leave sub cmp pop sbb push push out sbb lret inc push xchg ljmp cld xchg inc push lea or mov mov xchg (bad) mov push pop popa adc adcl push daa sbb ss pop or dec cltd (bad) mov jno adc sub je dec (bad) mov or gs pop mov aas cmp xor add adc je loopne ljmp mov sbb cmpsb add add pop (bad) mov jo cltd ficomp ja sbb pop aad rclb jo dec jle sub fdivrs push fstpl clc mov lods mov gs pop jbe sub ret adc pop sbb xchg mov movb mov mov ljmp mov xlat xchg xchg inc or dec or stos lods imul adc mov cmp sbb xor mov mov stos cld test or push lods xor pushf cmpsl mov fldt mov jb xor loope inc inc stos pop ss xlat adc jne ds jbe jge (bad) lret mov test jecxz or mov or xchg and stc mov pop add ss icebp scas (bad) mov jno cmpsl arpl push jle cmp sbb imul pop cs nop sub stos clc ret mov (bad) fstpl adc test mov arpl inc push daa outsl pop test mov out loop movsb add xor das js and xchg jns pusha mov mov divl fwait mov and nop negl pop ret mov adc and inc jnp push mov loopne outsb pop xchg test xlat cld mov sbb fcmovbe mov push mov cld push xchg fistp addl vpsubw ficomp das pushf mov push inc or (bad) and gs pusha pop mov ja andl insl ret jb jae and xor movsl iret pop mov lahf and daa mov (bad) daa mov out cmp xor addr16 pop push sub in xchg xor std ja in and jl xorl shll loop dec pop imul mov xor cs sahf repz js inc and fnstsw test cmp imul sbb je cmp test pop push mov iret xbegin jno fcoms pop mov popl xor dec enter push outsb mov shrl (bad) xor jnp popa jne popa sbbl mov ss loope xchg adc mov push or push pop mov dec js div mov cltd outsl jo xchg insb sub push rcll mov adc out xchg bound pop inc sub leave cmp and cs dec loope sub scas (bad) jp lds movsl xchg mov or jb insb popf aam add pop ror ja das inc mov loop rol call jo out fsubr (bad) (bad) jno outsl pop jg lcall mov pop ds mull sub adc sub pop pushf pop ljmp stc mov fisubl in push cld inc adc xchg into aam cmp push icebp push das mov shrl mov mov cmpl and mov mov (bad) loope test xor sbb dec lea in pop dec mov and mov add dec xchg inc mov xor add add (bad) enter leave fldcw std gs adc loop adc inc pop lods mov jo aad rcll mov lock and sub rcll cmp and dec xchg mov inc xchg leave insl cwtl jecxz xor ds stos push pop enter push mov cmp insl cli repz adc subb mov push and loopne (bad) out enter in or inc loope icebp sbb cmp jle add in clc mov xlat ljmp mov ss in fist jb rcr icebp int (bad) out inc lods mov dec cwtl aaa testb jecxz dec ret fcmovne test insb sbb out (bad) data16 dec out mov pop mov xchg xor or fistl xchg lret push std out cmp das (bad) xchg neg jno sub add or lock test ss xor shlb xor daa stc aam push stc and push in adc xchg sbb repz jp push push xchg mov mov aaa es push nop lock dec (bad) std (bad) call push insb sbb sub jnp call sti daa cmp loop inc jmp cmp ret test out inc jmp cltd jo lods int sub fcomi mov jb int xchg dec mov mov ror fnop jno call shll inc push cld and loop lock or subb or xor into sbb dec jmp adc and and into lret sti loop sub cs jnp pop and les mov dec out pushf cmpsl pusha or push xor push xchg push mov or lcall (bad) flds cmp inc or add insl aas stos pop in aad lret in dec ds pop cli inc sub add xor sti aaa xchg (bad) fs enter ficompl and insl out stos pushf scas mov repnz (bad) aaa test lcall lret scas hlt (bad) pop inc mov sub scas push jg and hlt call inc cltd in pop call dec push outsl (bad) imul adc std cmp ret jl ret xor (bad) aad insb push stos and outsl in mov cmc loope std push dec sub xchg push jge (bad) push fwait test insb dec push pusha inc mov jg aas push out data16 jae fldl add jecxz sub sbb shll adc in nop mov sbb sbb and adc imul inc lock aam faddp jno outsb xor fidivl enter insl mov and mov lods and cmpl fldcw mov xor (bad) cmpsl loope jle jl cltd clc pop jle or int (bad) adc (bad) dec sub push (bad) sub lea mov push lahf out push push mov inc pop cmc mov mov mov into sbb and mov ss jmp lods push pop pop mov sbb cltd iret xchg mov sti (bad) repnz fs jo mov das push lds pop adc test cmp test xlat push test or (bad) bound negl data16 and push adc aas push ss (bad) (bad) or test sbb hlt pop aaa insl popl inc iret fsubl xchg jno or insb lock lods pop jg sbb std cmpsl or or mov mov jl xor sbb es jo cmpsl cwtl data16 sbb cmp push adc add loop daa sbb inc mov mov scas inc push mov cmp scas mov (bad) lcall outsl lods sbb addr16 setnp inc (bad) adc push inc jae mov test adc push cmpsl js cmp aas out cmp rorb pop call mov inc rorb fmuls inc mov lods push in sbb mov sub stos mov pop cmp cmp jns gs negb dec or icebp jb clc mov push stos mov dec jno dec cmp cmp cli out inc punpckldq loope mov adc lcall sar call xchg push (bad) xlat inc or push sahf movsb cmp es xchg pushf mov outsl ljmp push incl rclb cltd pop stos sahf xchg push push xorb inc xchg fdivrs aad out cmpsb adc ret sbb das push inc add jns je add sub leave inc push fidivrl cmp or mov movsb into sahf stos test in in push loopne movsl push jmp mov loop scas aam jl cmp and xor test mov nop daa out sbb movsl push cmp push mov out ret xor sub movsb sbb jo pop stc mov pop int xchg adc dec rcl push sarb mov adc (bad) cwtl push xchg mov test mov cs dec mov iret fimul fstp xor inc dec fcom or addl dec add in orb or mov cmp ds adc (bad) pop lret (bad) add std dec jbe call movsb jb fbstp inc movsb mov inc inc adc rcrb enter push xchg jmp mov xchg sub (bad) xor fisub sub inc jbe xchg pop daa fistp or adc add movsl cmp cmp aad jns mov push addb jge pop and sti xor iret je push out inc mov lret iret cmp lods aam jle out icebp mov push mov xor mov push jle fbstp bound ficomp mov jnp nop push sbb in inc rcrb jo jno mov insb mov push outsb std cmpl push mov ror ja jne pop leave push cli dec mov and mov add dec xchg (bad) pop mov xlat dec repz mov inc pop cmpsb lea pop push mov adc jae pop add out add dec cwtl pop adc andb cmp pop adc dec xchg repz js adc (bad) mov dec pushf dec push (bad) mov inc (bad) sub or cmpsl sbb pop or imul mov cmpl addr16 dec in pushf jns test jge iret lock push mov cmc test xchg jnp jecxz shll push in stc inc in xchg fwait xchg dec fistp adc add add lock loopne or inc bound test data16 fstl je jb jg add dec add xchg loope scas popl fdivrs fcoml andl repz adc xlat (bad) xchg sub mov stc aas fisubrl (bad) js test test mov dec shr js add mov push add out (bad) xor jnp push test dec loope lahf cld movsb xchg mov enter loopne mov lahf scas lea dec sbb out popa xchg push cwtl adc xchg mov add loop lcall arpl dec mov cwtl pop sub xchg sbb lea outsb call fdivrl jnp gs (bad) sti cli lods push sub rcrb les inc int3 pop enter aas mov inc (bad) pop fcomps jnp enter aam sbb (bad) ljmp sti jp push lods xchg (bad) mov inc adc add jecxz inc push movsb sbb inc push out scas or adc xor out insb cmp repnz leave inc insb jno pushf mov pusha cmpl (bad) (bad) jmp jmp xchg in out std or sbbl jo push pop fs cmp lcall scas es and popf addb clc push outsl xorl mov mov into adc loop push idiv mov adc fmuls mov mov xchg cmpsb or add dec scas jecxz repnz dec loop sub into gs (bad) enter mov enter push inc or cmp lret jno (bad) dec cmp mov ljmp test add cmp push jg jecxz lcall mov inc jg and pop add das (bad) and add (bad) push leave sbb pop jns mov stos or enter (bad) and push out fwait scas clc mov mov cwtl loope xchg repnz push daa or stos nop push add inc inc jg mov cmp cld xor pushf jp fidivr mov sahf jae dec mov rorl xor sbb cmp inc xor pushf dec in ror push loop or lds sbb ss loopne dec pop jp push fidivrl insb inc pop das xlat lds xor insl lods jo scas data16 jnp testl popf inc adc lcall (bad) push pushf or inc jmp and xchg mov lds and jns sbb cltd mov sbb mov inc sbb pop cmpsb sbbl shrl mov es sbb inc pushf jle dec aaa (bad) ja into outsb dec scas cld adc pop sti dec cmp jge sbbb into (bad) enter clc and mov loopne sti xor std es jb xchg xchg xor push push sbb (bad) cmc sub jle xor jb adc in sub movsb bound pop and fwait insb cs fbstp pop shrb addl push flds lcall ret or popa sbb (bad) xor xor clc xor pop lahf fdivl lret into cmc out dec aad mov jmp xchg pop push sub sub jbe test jecxz loop iret mov rcrl mov iret xchg gs push push add pop outsl cmpsl mov test push jne rorl xchg sub dec push xor jno lea stos pop psllw hlt lcall pushf (bad) into mov repz je je jl jl ud2 pop dec xacquire cmp or cmp out adc push leave cs cmpl cmp enter xor push adc pop (bad) in dec es lods test mov and hlt iret sahf fwait mov and dec mov div lods ffreep dec jnp in movsb dec dec mulb sub out stc les or adcl test xor ss js and aaa int cmpsb mov scas ficompl arpl lods mov sahf mov sar lods cmc loope inc jp mov out add xorl iret jno cmpsb push dec insb xchg dec push stc dec aam add sarb ret cmpsb adc movsb icebp inc ret adc fnstenv aam bnd push pop mov out lea mov xor dec fidivr pop xchg ljmp sbb mov pop pop xchg in fldl pushf aaa push aas sbb imul mov sub (bad) call repz jg cmpsl (bad) push mov add fs stc pop pop or iret mov add fnsave mov incb jo and xchg push (bad) icebp lret mov fimull push aad scas aaa ret ljmp aas adc jg sbb arpl rcrb repz mov mov jge mov cmp les mov add sar pop loop inc lahf movsb jecxz cld (bad) test add xor fcmovnbe mov int pop (bad) xor cmp mov mov scas inc push xchg (bad) call mov pop not sbb (bad) out inc and pop stos and (bad) icebp pusha mov ljmp mov pop push push ss out xchg cmp shrl cmp mov out incb and xchg call outsb sbb outsb sbb jnp sarb cmp fist subl xchg mov or stc mov pop sbb es fsqrt xor (bad) lock imul push cmp xchg ja xchg add mov push xchg jl inc das pop sub or sub push fucom add mov int das outsl jp std xor fdivs out daa or into insl jnp push xchg mov dec loopne xor in ret ret mov adcl mov in add sub repz push mov je lret jb xor test cmp (bad) repz enter push dec pop addr16 aam shll mov jnp mov push icebp hlt pop je cmpsb roll imul stos sub outsb movsb repnz push loope push adc push jmp lds pusha (bad) cwtl push dec mov add aam cmpsl jb iret gs inc mov adc sbb mov shrb fs add add cmp mov xchg into ljmp adc lds cmpsb loop inc dec push add sbb aad adc out cs push (bad) pop lahf imul movsl in sub adcb mov in xchg test xchg pop add sbb dec cmp adc bound inc and loopne push jl xor jle jp add fcmovb sbb (bad) xchg loop addr16 mov andl lahf mov mov loopne mov mulb (bad) pop pop call cmp jno and xchg add stc push popa xchg push cmc push imul divb mov xchg scas divl clc hlt shll out ljmp adc loop,pn nop das stos aam insl repz push aas sub scas aad xchg data16 pop pop in jae (bad) push in sub mov js out hlt sbb lea pop push push rolb sar xlat gs lods pusha lds xchg adc (bad) cld movsb movsb fs mov xor pop dec in sub (bad) into fiadd iret aam dec outsb sub sub cmp pop loopne lock shr push or frstor xchg das (bad) adc daa cmp or loop ret adc movsl adc mov cli mov dec sub into lds pop lods or cld push mov xchg (bad) fidiv add in jle imul xor or xchg fstps inc mov scas mov ret mov pop mov and outsb pop cmp mov nop jae pop sub aam in js addr16 pop sbb dec mov cmc sub ds dec dec (bad) dec rclb ret xchg int and xchg sbb jb mov out inc and cmpsl cmp pop hlt xor adc jno mov cmpsb fwait cwtl xorb fmuls add fcompl sub cld test out popf gs sti sbb sahf jle pop adc popa (bad) jae inc lcall sbb mov jp fbld dec rclb loope fnsave xor out aas scas iret lods lahf sub fsubr fisttp cld jge xor dec pop push in xor xor jp jne stos clc jle pusha (bad) pop loope cs test lret arpl lahf loop aam shr mov and dec adc xor pop add xor imul popf call push out call and mov or and dec xor sub xor push jmp cltd inc push nop cmp cmp dec adcl cwtl out lret popa out mov in mov sub lret cmp adc sti lret out dec inc popf data16 (bad) push dec push sti push fcmovnu mov jl lods outsl aas test xor shrl lea test jg xchg add cmp pop dec push js cwtl xchg adc sbb stc push cmpsb mov mov xchg jle outsl dec pop dec xor push rol or or pusha mov js jno mov pop imul jmp inc and inc ss (bad) data16 sub xor mov or and inc (bad) sarb inc sahf lea dec mov or mov out das dec mov sub movsb or sbb mov fildll jo popa adc (bad) pop idivb fldln2 pop or je (bad) dec pop stc rorl mov lds pop cmp cmp xchg int3 mov or mov push inc push push rorl push xchg int iret or stc arpl loop cmp mov icebp jecxz cmpsl (bad) and ja cmpsb je mov nop jb (bad) xchg addr16 push leave (bad) loope adcl (bad) mov push sub and lods dec inc imul mov clc cmp sub cmpsb and mov pop mov push jecxz cmc adc hlt mov push out stos mov push das mov add out out dec mov sbb mov (bad) (bad) or test pop mov lahf scas test push fimull or jne mov sbb mov mov sub imulb dec xchg pop inc int3 xchg jo xchg and mov dec jl jnp,pt xchg iret mov mov lret inc ds cli adc popl idiv dec sbb les mov push out stos sti ret ljmp mov sub jle cwtl ficompl push mov ja aam push sub xlat shrl rclb stos cli pusha sbb repz out or into test or shrb rcrl cltd or add add inc lahf sub mov ds xor dec pop sti scas mov fs push lods inc mov dec adc scas push js or lcall sub adc mov aam arpl mov adc adc xchg mov mov adc inc pop pusha repnz test jmp push cld in aaa mov xchg sbb into push js jae cld (bad) and pop std mov call in aam daa scas or push adc mov aaa mov (bad) and xchg popa push inc in jne xchg fs cmp arpl xor test dec and push xor data16 mov divb dec int outsl ljmp mov mov xor dec loopne mov push pop ret arpl out mov movsb orb and mov fmulp cwtl mov pop jbe cli mov xchg pop fmuls adc jl push mov cmpl mov sbb jecxz,pt or scas ret lods (bad) mov fdivrp pushf stos imul and mov lods gs jmp push push jle push (bad) mov sti push mov mov arpl jmp xchg or cmp mov cltd xor sub cltd pusha leave int3 inc push push arpl insl mov mov xchg cmpsl mov fwait popf xor pop ds in inc outsl shll mov je jge icebp scas fstpl dec jmp push pop test inc fsub pop cmp jle aas call sbbb lea xor (bad) lahf mov xchg ret sti add ret movsb popl ds lcall dec bnd outsb cltd ret xor adc add cmp cmp jp push aam lock jecxz cmc dec dec int3 popa insl mov mov out sbb mov pop rcrl pop scas pop jbe mov out cmp mov stc push cs lea pop xchg (bad) mov dec std popf mov jnp xchg push daa inc sbb rorb mov movsb jp cli lods pop jle adc cmpsl outsl aas add sbb loope adc iret adc lahf mov push add dec sbb int3 xchg pop xchg xchg jo pop arpl or cli jecxz push pop jecxz lcall jae adc enter ds mov xor sbb je fist cld out dec add dec les sbb insb or rcrl out sbb (bad) add lds mull jge or sub and mov movq mov repnz xor xchg scas call mov xor int pop dec jbe xor xchg ljmp push jge imul inc call jg arpl scas popa ljmp icebp jne xchg mov adc jg lret cmp mov int mov sbb popa sti mov mov xor test add push mov ljmp leave pop mov popl daa and aad sub nop or xchg mov mov fmull xchg int loope cmp pop das xchg sti pop fistp sarl out xor xor dec out (bad) enter vorps inc cmpsl inc dec leave cmp jge push cmpsb add dec out push cmpsb cs shll cmp test pop (bad) dec iret mov neg scas jnp xchg mov xor into dec and fdivrs mov pop dec in mov sahf xchg es icebp add popf xor dec mov push aad push inc cmpsb xorl push adc sbb sub add or std xchg cmp cltd aam cmp jo add fstps jmp adcl scas or and mov jmp xchg movsb cmpsl mov xchg push outsl test pop jbe and adc jp fadd inc scas ss xlat insl mov mov pusha jns mov dec cmc cmp xchg cltd (bad) addr16 gs sbb imul pop jb xchg shl jmp lds iret push cli pop pop push and sti mov sbbl outsb in dec aas in sbb inc jle mov iret (bad) jo mov fcomps out push and or stc sub mov aad adc rcrl cmp cmp rorb flds mov xor popf push inc jne jge ss mov inc adc stc ds fldln2 hlt jg in mul jp lods jo inc imul inc ds imul xchg loope add stc push jae mov xchg inc push jb ja mov pop sahf xchg shlb sub pop test popa (bad) ljmp aam jbe cli and lods popl pop jnp ja push xlat pop add mov sub adc imulb outsl or mov jb lods (bad) arpl or sub mov movsb push (bad) icebp add jnp jl xchg int3 inc mov notb sub cmp push mov cmp mov push in mov scas sbb lret lods jmp fimul in pushf add insl pop divl fwait mov and cmp and push mov mov test decb mov push inc inc adc insl pop inc jbe pop imul sbb inc push or add push push cmp xor fadds aam insl or jo lods or jbe xchg subl jl mov stos cmp jg (bad) lea cmc les into pushf add test cmc mov mov je lahf cmp push aad push push mov fidivrl lods arpl sub daa loop sarb xchg inc stos pop iret and mov jnp scas cltd add xchg pinsrw call push addr16 sub xor stos or ljmp mov adc cmp imul xlat cmpsl mov cmp or daa clc daa into add das inc cmp xor sbb or inc jecxz std jp (bad) gs loop xor jp imul es fwait push movsl stc dec rorb jb xor sub fiaddl movsl sbb in pop pop push jb ficompl outsl scas sbb cmp mov bound jge mov (bad) cs ret (bad) in sbb (bad) lock push bound add mov fdivl outsl (bad) pop mov mov xchg lcall pop or fnsave push sahf sub jns cmp mov icebp inc mov sub lret sbb fmulp push daa push call push inc sub push movsb stos imul push ror neg ja ja fwait cmp test popa mov jle dec push call fld rclb imul dec dec mov mov pushf pop mov je int3 rcrl push pop cld (bad) ljmp sarb add inc aam lahf (bad) sti and fmuls lea lds cmp js adc nop add stc insl je stc sub les out sub or push loope cld rcrl cmp mov test push xchg adc in (bad) push push push outsl pop cmp jle xchg cwtl flds sbb adc loopne loop sbb xchg inc push add pusha cmp and mov aaa jnp jle loope daa and (bad) push daa adc bound mov xchg std insb or xchg jecxz rcl sub mov dec sub jge inc lods jo cmpsb inc mov popf ret pusha mov scas in sbb fisubr and icebp rcrb scas imul daa (bad) fcmovnu xchg cld movb jmp (bad) push lcall movsb and push jno sbb adc push or (bad) jmp les imul js cli repnz cmpsl push js fs cmpsl out movsl adc fisttpl mov jg addr16 cmpsl mov xor (bad) (bad) nop mov pop xor shrb in sub data16 into mov push enter mov scas test ljmp lock sbb jl lea test test sub lods add xor lahf popa adc sbb loope push xor sub mov clc (bad) repnz (bad) leave mov inc push movsb jo rcl dec in inc cmp sub (bad) lods out andl ficoml dec loope stc cmpsl push test mov faddp mov in xor or popa mov sub rcrl dec repnz sti hlt pop cmpsb jne cli push mov je movsl hlt sbb int3 adc mull mov xchg pushl leave jno jmp pop push stc fstl ds movsb ss cmp in mov xchg leave mov adc cmp mov dec or les addr16 (bad) and (bad) movsb push push das aas dec xchg fisttp scas call test xchg xchg (bad) stc imul mov (bad) mov pop xchg (bad) addr16 sahf cmp sbb add inc lahf je scas fdivrs repnz test mov cmp aas aam xchg pushf mov push push gs insb xchg sub scas scas iret add stc pop mov or cmpsl add ror pop aas inc inc popa sti jmp mov test sub ret ss cvtpi2ps mov add lahf mov addr16 jno push jne cmp dec hlt scas adc mov sub ds sub jle pop sbb push adc add nop pop stos xlat scas rclb sbb dec inc in mov addr16 cmp std jo jno notl (bad) into xor fwait xchg or cmp sbb call movsl sbb adc pop or jno add push (bad) or xchg mov cmp ss mov rcl cmpxchg aaa mov and in stos xchg mov sub hlt fistpl cmpsl stos xchg add mov cltd jno mov imul push pop dec cmpsl pop xchg cld fwait jecxz (bad) cmc sbb leavew xorl daa stc jb and cmp rcrb pushf jno arpl je (bad) adc mov jbe clc and daa mov movsb fistl adc jne out pop sahf mov mov loope inc loope into ret mov incl nop inc jb (bad) frstor movsl lcall in sub sub add fcomps push mov add xchg jecxz bnd and les pushf inc mov xor ret ja sarl ss mov push aam add mov dec insb (bad) movsb sub loope jge clc cld jl mov fucom jg pop fcom ror sub pop push lret push (bad) xchg mov (bad) jmp xor sbb je das in push add (bad) aam jnp sub stc cmp lods gs xchg in sbb push or int3 fdivs mov inc mov mov sbb push mov cli mov dec out imul lahf sti (bad) mov ret fnstenv outsb arpl sub das sub push xor sub daa or icebp imul dec mov lods dec xchg sub inc jge bound push hlt dec scas shll fucomi jmp repz jl or adcb dec sahf imul lods sahf xor test int3 je scas or ss mov in ret (bad) push and sub mov in aam push lret lea inc sarl push mov xchg int aas xor pop pop sub xor mov aam call ss loop rclb sbb add icebp or fiadd mov jo sbb or movsl pop test push jne cmp cwtl add stos dec mov pusha fisttp test sbb cltd pop pop stc rolb xchg adc mov (bad) jle ss cmpsl jae ret pop xchg cmp xor pop fucomip dec pushf jo xchg push push pop jecxz dec cmp or int pusha ret iret lods mov nop lock lock lret adc inc test xor test int and sub test mov ret pop aas lahf and and xchg mov loopne or adc dec xchg loop jns clc js stos leave imul pop stc (bad) out rcrb test xrelease jecxz pmaddwd pushl aas mov inc into ss pop outsb fisub cmp cmc imul mov or das add pop xchg cmp leave ljmp and jo daa add lcall mov popl inc sbb jg mov fldenv inc movsb and mov (bad) ja cld pop neg jmp fcom xor pop lods out push aas adc dec xor jbe or clc mov rorl repnz xchg into jmp push shr in push sub aaa cmpb mov and data16 cmp scas (bad) jl fildl mov or push push fnop shr es mov xor jge ja (bad) imul pop mov lahf repnz scas cmpsl stos gs clc xchg inc decl daa mov das push sbb pop jae (bad) (bad) mov add notb and jbe leave ret aad out loop jne (bad) test mov sbb adc cs jmp sbb mov hlt push push cs fcoml push push iret lods test hlt xlat std lock int outsl jb mov idivb call pop test cmp loope (bad) sti mov add mov or xchg cmpsl movsb dec (bad) cmp sbb loop (bad) mov jmp outsb add movb ja in loopne leave cwtl xchg xchg inc icebp sbb inc jecxz negl dec sarl ret add outsb stc jecxz daa add mov mov xorl pop sahf ljmp test fnstsw shlb sbb mov cmp imul test dec xor adc push out inc dec xchg jb push xor lahf movsl sub mov lods test rclb pop cmpsl ret data16 sbb (bad) fs mov adcl xor test lcall je jo dec (bad) jmp push adc enter les push icebp cmp pusha dec jle imul bound sub cmp stos fisttpll shrl xor jl mov rol add and lods xor pop lea push pop mov ja fcoms xorb jmp cs push adc xlat js fs push pop jns mov pusha inc jbe test inc int3 aad lods mov adc je clc (bad) cs cmpsl fimul sbb mov jb fisubl and xchg pop inc out lahf sub call inc loop subl inc xor daa (bad) push sti mov jbe gs sub mov cmp add dec xlat lea loop jg mov dec push cwtl cmpsb sub sti call jecxz or dec lahf es (bad) cld add mov add gs lock dec xor shrb fisub push divl jg push add cs aaa out loop cmp stos dec inc mov lcall outsl or iret xchg or jmp inc movsb aaa mov cld xor cmp jp ds ficompl jge ficomp hlt jecxz jb aaa cmp add dec rorb daa xorl cmp (bad) in outsb sahf push xchg popa enter rolb inc das mov int add mov gs repz loopne lods mov jne push lea pop sti mov addr16 into mov mov imul cmp test pusha sub adc xor cltd fldcw xchg pop jecxz xlat sahf dec roll inc xchg inc xchg or push mov ljmp xor mov sbb fidivrl sub pop popl pop and push cmp push cli cmp mov add mov mov stc mov cmp or adc push and cltd mov bound fsubs push adc jle (bad) mov xchg mov add (bad) bound enter lock cmpb hlt hlt int cmp or sub xor push hlt inc data16 psubq add repz push mov mov les cmpsl sahf sub add gs and mov imul mov ss je jmp jmp dec jl mov inc ret xchg adc dec mov mov push or mov jp std xchg (bad) (bad) cmpsb jbe xchg xchg ret or jb and stc movsl stos xlat fnstcw dec jp jmp lcall inc mov arpl sbb pop lahf push daa or cmp mov clc dec add in push ss repnz mov and xorl pop in rolb adc fidivr cmp (bad) pop pop xlat idiv xchg sbb outsl enter adc sub adc imulb pop repz loopne adc push data16 rol sti sbbl (bad) jns faddp leave lds inc push push (bad) xor mov or pop jnp add mov xchg inc ja jns in outsl sub int idivb xchg mov pushf pop jnp xchg sbb addl add pop mov fst addr16 mov je bound imul add (bad) dec dec or call daa push shrb aad out sub adc and mov cmp sbb sub aad ficoml loop pop imul sbb xor xchg mov and ljmp xchg jbe test push mov jmp aas movsb mov push and dec mov mov push in leave xchg mov lahf pusha rorb loope or cmp inc ret icebp call mov mov fidivrl xlat sbb jp loopne icebp xor adc sahf xchg sbb insl test popf sbbl mov cmp lcall ret inc mov jnp inc lea cltd pop jecxz or xor cmpsl lea clc jge cltd aaa ret mov pop mov or mov pop xchg fdivrs stc (bad) repnz pop and cli shrl lds or pop sbb pop adc cmp imul stos addr16 jl and out or outsl gs dec cwtl xchg ret xchg fisttpll cmp bound push std or jns mov mov pushf ret int dec and pop cli imul mov stos sti test mul add sub pop xchg dec adc repz pop mov in dec je popf cmpsl in cld fcoml lods sub loopne mov add mov shrb inc (bad) (bad) int jmp sbb aaa leave or ret xchg jge sbb push ret jecxz movsb inc dec lock xor adcl insb dec call in jnp loopne hlt adc lds push and cmpsl jno out (bad) ret aas les nop hlt jnp cmp sbb add adc mov sbb ja pop pushf ja enter xor (bad) psubusw xchg pop insb mov sub lods pop mov jg mov mov mov jmp mov in mov jg add lods mov orl fsts pop or lea pop mov test dec test ja mov (bad) pop iret xor repnz inc rcrl adc lahf in jnp xor dec fsubrl imul sti mov mov xor cmp addr16 scas jnp mov jo and popa cltd iret cmc jbe enter jbe mov mov sub xchg cmp mov and mov out or cmpsb add xor aad mov rcl mov lods lahf cwtl in leave pusha shrb imul jle (bad) leave or xchg xor loope cmpsl push pusha (bad) repz bound xchg mov fld1 or fidivrl adc sbb pop aad cli aaa mov xor sub loopne das ja inc sahf push (bad) xor lods pop sahf addl pop mov and inc arpl xchg adc push (bad) ljmp popf notl jo jecxz dec xor mov int jecxz mov mov in inc fsubs or stos sbb out pushw pop cli loop jge lcall popa idivl bound or push out mov cmpsl inc out add stos mov in test mov test sbb pushf push mov movsl (bad) int3 cmp jb call cltd repz rcrb mov lret int3 xor arpl ss push pop aad scas call xchg cmpsl push mov out add test dec add inc cmp pop mov dec mov pop xor into cmp imul imul int3 xor mov or daa lock adc inc dec test mov sbbl scas adc notl ljmp jb ja add mov jnp adc dec push mov mov insl test or cmc xor mov in out pop jmp into sbb xchg cwtl dec sti mov sbb adc mov pusha pushf and loop aam pop adc mov sti fnsave pop cmpsb repnz cld xor push or sub outsl lcall ds mov into cmp fisttp add and xorb jb pop push fistpll pop jg lods into pop in cld int rcr out xor idivb insb jge ret mov sub sarb or std inc repnz push sahf out xchg sub sbb cmp xchg fwait jb fild fisubr gs out (bad) rcl adc scas outsb jno push scas popa fmul inc fidivr dec and fdivp cwtl jne test xor sub in xchg push and sub jne or mov es mov (bad) or daa mov push sbb mov xchg loope jbe mov js sub dec pop cmp icebp sub lahf movsl int3 shrb pop ret mov and cltd cld enter xchg pop fwait push (bad) aaa push cli fcomi insl test ja insb outsb fdivrs and xchg roll add shrb mov in outsb sahf and lret xor imul sbb in push push in jl mov ja mov in pop cmp mov frstor mov sti adc xchg mov mov mov pop dec cmp jmp push pop push lcall mov mov or mov and lahf into ja jb add ror dec xchg cmpsl push lahf cmc jne repz stos and mov jg and fcmovnbe test mov (bad) scas jg cmp jmp cmp push jmp stc ds cs xchg (bad) jae les xchg imul adc clc sub or cmc push push outsb out or inc mov fnsave int mov pop jle ss inc test stos outsl mov inc adc into push push pop xchg mov dec out dec shrl popa (bad) daa sub push lret push xchg jecxz clc jns (bad) pop cmpsl cmp jecxz fsubl and subb jg aaa cwtl sbb xchg dec lods dec repz out pop mov out insl data16 add jle sbb aaa fmuls (bad) adc adc add (bad) add fwait incb (bad) push out xchg repz xchg insb push pop dec sbb cmp and (bad) and and aad std hlt mov sub xor inc jnp lods cmc fisttpll sbb or lods js clc cmpsl and dec aas sti imul dec mov and jnp test sub mov rcrb sbbb std les push fnstsw std (bad) sbb sub sub (bad) xor sahf stos and dec in cmpsb jmp mov cmpsb loop mov sbb push push push into dec jb sbb enter xor (bad) jo ljmp jle loope arpl add cmp pop gs int xor and mov sarl js rol push or mov xchg (bad) mov int jle dec js fwait jp pop xchg fs inc in mov gs mov adc cld xchg and repnz hlt std sbb ss stos sub xchg pushf es arpl pop xchg testl adc mov push movsl imul sahf mov iret cmc out ret lods mov scas add clc mov cmc add call shl adc stos lods popa in nop push inc dec js mov or fsubs aas fcomip in or iret push pop daa pusha sti rclb push fcmovnbe outsl xlat mov xchg stc mov fucomi pop ja pop aad adc xor inc xor mov dec mov lea mov mov ss sahf rcll out arpl dec xchg dec cmp pop sub dec xchg and mov and pop inc jnp das mov sub loopne and mov es inc loop outsb pop pusha inc or and icebp enter (bad) mov mov icebp addl push out mov jnp xchg loope clc int3 in mov dec test repnz dec sub arpl cmp sub in icebp mov jp popf ja pop cld xchg pop dec xchg in push fucom shll mov push push clc lahf xor xor ds pop ret xchg and test mov and mov int3 (bad) jae shr sub mov jmp jg sbb xor ficompl jns push ja jmp jnp cmpsl mov loop movsl mov pop aaa sbb xchg mov or xchg cmpsl dec xor and xchg xchg (bad) sti jns and daa xchg movsb pop xchg dec push mov push dec xchg cmpsb inc mov adc es in mov sub cwtl fnsave pop iret (bad) ret fwait les jecxz cltd loop insb ds (bad) mov or aas imul and lods inc sub (bad) dec cmc jle mov je in cmpsb dec orl in stc or jno mov mov testb decl ss xor adc xchg jp fwait mov repz mov fdivs or add iret jecxz jns push jbe or jnp push js adcl push (bad) dec es popa xor repz jmp jge popf mov push mov stos sbb dec and gs cmp mov out push mov xchg cwtl fcmove fadds ljmp add lods test pop ja sti out in loopne pop pusha rcrl out mov cmpsl and sbb iret decb lds sbb or loope outsb cmp push mov ret ret insb out cmpsb lods fsubrl xchg xor sarl jge es xchg push aaa jb cmp and cmpsl fistl loope pop sub cs pop and inc jne ror in add data16 inc sahf mov add lahf pushw mov xor xlat cmpsb mov add ficompl or mov jmp insl lcall xor (bad) mov (bad) fbld mov call lahf es test adc pop mov pop inc sbb cmp popf jb mov jae mov sub les sbb adc (bad) dec lock loop push or cwtl cmc jl fisttpll mov add mov test mov inc and rcll cmpsl aaa cmp test pop xor add stos pop adc pxor test mov cmp (bad) mov adc add rorb scas outsl mov sub mov sub jp jnp mov xor rol in out orl pop daa mov add xor lret leave xlat jnp dec jecxz cmp lods mov pushf lock pop adc add sbb jmp outsl (bad) out push cmpsl xor inc add or adc je fisttp cmp xchg xor (bad) xor xor leave out push insb rorb sbb fdivr js imul add sub lock insl push inc (bad) dec mov sbb bnd (bad) mov mov adc cmp iret (bad) cli mov testl out jecxz les add scas push inc or jnp scas das mov xorl inc sub sbb dec aad imul mov aad call xlat (bad) push pop fstpl decb add mov (bad) je lret imul jle mov test sub stc pop fs sub bound fstpt mov xchg jmp int3 jne call rcrl ficom sbb (bad) shrl xchg jne das out inc nop mov repz mov mov or mov push xor popa mov fninit dec jo and pusha ja (bad) repnz movsb add (bad) cli inc mov scas cmp sub cltd xlat inc repnz xchg imull fbstp xchg adc pop int aam rorb adc pusha bound pop or pop jnp fisubr iret sbb lret sbb ss shrl aas ret sahf inc fstl fcomp lret inc dec (bad) dec and sbb lret push jl xchg or dec shr and mov push xchg cmp jo cmp lea mov lds rol iret sar fisub dec xchg cmp inc cmp stc adc and jp stos ret cmp inc (bad) mov cmp or inc cmc aas push divl out add int3 mov add js mov mov fdivrs loop push cwtl fisubl ret and cwtl mov pop push mov jae inc sahf mov sub mov sbb xor ret (bad) into enter std mov cmpsl xchg jne cmp lret arpl jbe mov pop js push (bad) aaa dec not ds jge and push add xchg lahf or test (bad) xchg popl andl xchg pop inc cld push out fcoms or jg iret sbb incb adcl rol outsb in cmpb enter inc lahf add test push sub hlt push push xlat cmp cmpsb movsl xchg cmp push push pop int3 out inc repnz xor inc cmp std arpl cmp xchg jg fwait mov mov repz loop xorb bound xchg in outsl cmp cs inc dec pop and xchg push cli adc (bad) loope inc daa push cmp int sbb mov (bad) jne movsb jne adc mov call push enter fnclex or repnz test sub ljmp aad orl mov jle xchg xchg repz mov dec js cwtl sbb mov repz adc jmp lret sbb cmp enter movsl lret leave sbb jbe insl mov dec scas mov call jmp loop sub fsubrl lcall fdivrs mov adc xor dec icebp dec inc mov lret fwait test idivb add mov pop add mov add rclb pushf aaa mov jge mov push (bad) lret pop dec sarb sbb add cmp cmp pop in stc adcl popf dec aam pop loopne (bad) and cli cwtl lcall (bad) fimul xchg adc mov lret xor dec stos mov in or insl jp rcrb ds lods push ja test add fldl cltd int3 jle clc xchg fldenv pop mov add hlt int3 mov push add sbb pop int3 mov push cli (bad) out adc push rolb mov and stos icebp dec arpl les dec mov repnz xchg stos adc hlt mov or scas das pop adcb lret sub movsl les pop or cli fwait cld popa jecxz addr16 mov lds jbe adc cmpsl sub in mov cmpsb imul or or ljmp jp mov gs test xor movsl inc inc jbe subb xor rol pop mov lret fadds jnp cmp push pop movsl xorl mov out icebp push jle dec test stos (bad) mov bound xchg xchg fwait mov das mov data16 ja inc out (bad) cltd repz pop cmp xor rclb or xchg (bad) mov data16 insb sub lea sbb jne mov xor add pop jno jne loopne pop ja mov imul xor dec mov pop or mov push jo mov insl xor lods cld xchg in out pop sahf cmp dec es add (bad) sahf (bad) ja inc lock out sub js fwait es sub cs or iret clc mov or addr16 sbb sbb push mov lds mov jno movsl xchg pop mov in int3 bound xchg push std dec mov rclb xchg loope jns movsb lds cld mov enter sahf jmp scas add ret jecxz daa add add in rcrb je inc xchg xor test test and sbb inc inc push inc hlt mov ds mov mov sbb sub addl pop das mov sahf dec repnz popa jle pop mov push shl testb push add fs push mov call or push (bad) cmp and inc mov shr fcos sbb enter pop mov mov sub cmp (bad) pop ja lret add mov movsb xchg je dec pop repz push xor mov mov daa and push rorl mov mov iret push sarl pop daa jne call push xchg aam sbb shr mov push or aas test popa mov push testl mov push mov std insb js pop inc lods cltd cltd cmp mov jns loope scas jns rcrl add and cmp push push dec push jb fdivs pop cmp jne xchg ret fadds fistpl and pop (bad) (bad) pop xchg mov out mov fs pop mov hlt sub outsl push pop xor je stc outsl xchg adc add nop mov test movb lea lock xor popf jg and jge push or push xor jl adc fistpl xor fsubs pop mov je xor mov popf xchg imul pop sbb cmp in js mov lret int cmp and repz mov testl mov imul ds fwait imul or inc adc xor sbb ljmp cli fstl cwtl sti inc adc cmc or push mov pop push cmp fs or push push dec push push icebp push xchg sbb cmp sbb in adc xlat inc add imul mov idivl outsl ds (bad) push lea js or or mov xchg lock mov sub scas pop jne sub (bad) lock movsl icebp scas mov lock sbb add sbb je incl gs xchg dec jb js ret int mov mov mov push jo cmp jae lods sti sub ljmp popa (bad) adc rclb stos call cmp sbb and pop stos dec rorb dec gs cli jmp and lods jo and xchg lcall pop mov jge notb lock and addr16 jno mov or fnstenv jle jmp xchg lods imul cmp inc mov push fcmovne ljmp rcll mov lret pop xchg xor dec lret in mov push push push fcmove or xchg xchg cmc fdivs inc clc iret aam dec lds mov in orl sub add ljmp xor dec insb (bad) push cmc sub jge mov push popa xor mov push call jb pop outsb fsubs in jg inc pop cmp xchg or dec add pop mov data16 sbb addr16 mov or sbb fs pop ret xor xor iret xor loope in pop insb jae insl mov push jecxz lds pop iret add aas cmp lret push (bad) xchg jmp outsl xor mov xor inc dec adc test ror push jo adcl cmp fldcw sbb and and mov xor test sub pusha add push jae les stc mov in lods arpl jb inc hlt outsl scas xchg lods push dec inc ret inc lock and dec mov add mov cmp push add notb cmpsb or sbb add or push mov roll mov adc (bad) push imul add in repnz scas xchg sahf jmp and push jae addl jle cmp dec jnp test jge inc ja add mov mov dec dec push sub or dec xor mov js add sub sub in roll inc ljmp popf scas dec gs cmp incl xor pop mov stos lds cmpsb ss insb lret stos call in aas cld fstps sub js lods stos ret push sbb or sub sbb arpl fstpt jne mov fabs aaa sbb jno mov js jae mov (bad) cwtl gs mov bnd (bad) jbe ss pusha js jae mov loop xchg jg in inc fisubl mov mov xor addr16 adc stos data16 pop and and sub pop xchg add popf icebp data16 or inc dec enter xor bound inc mov mov sbb pop jmp mov loop popl divl ja cmpsb jo in push jbe dec (bad) rcrb mov rorb aad stc jnp out popa add xchg sub cs jbe jne pop jp and std lea ja fs mov fnsave int3 push jecxz (bad) mov sub add lahf into call in ds jae cmpsl fmul mov mov ja and and out xlat push sub lret gs inc in mov lea mov dec ja dec adc cmp clc nop jbe (bad) in int3 movsl adc xlat shll es sbb out sar mov push cmp xchg std and (bad) aaa les mov jle (bad) lahf xchg jnp adc into or mov fs adc cmp and jb std mov in aad add xor rcrl add repz out jbe aad push in in mul sub fwait sub dec popa pusha lret sub push in into xchg xchg add ljmp incl jb add or cld or sbb in fsubr add sub cwtl gs sahf lahf push xor nop insl subb adc mov mov cmp sub mov push push mov cmp pop add stc in outsl int3 mov jp jle cli fldcw cltd add lds insl sti dec daa nop pop dec xor inc push loope movsb xor dec or out jne add sub mov or mov rorb and ss jl jg loop cmpsb or inc int3 mov ljmp add and cmp rcrb pop arpl movsl jbe cli aaa rcrb negl xor out cmc or jg jnp jo xor mov call push pop adcb sub std aam xor push add lret xchg fs sbbl xlat int3 stos and jmp cmp push pop push test (bad) and (bad) xchg push push stc fcompl lock mov je dec pop mov rcpps push sub push mov enter add or mov testb jmp add js lret push daa mov (bad) mov aas xchg daa gs inc mov mov lahf mov rcrl enter fs pop push fs mov jle repz xchg pop cwtl nop mov out push (bad) rolb aam sbb sub es ficom aas insl dec push pushf jmp jb xor (bad) dec mov xor dec push jb mov scas sbb push dec sbb push xchg push push jp popf clc mov pop lret push pop cltd mov pop scas mov cltd lods pusha jmp cmpsl push jnp push das loope pop les xchg addr16 (bad) icebp cmp jg fisttpll rcl sub mov ss (bad) pop push scas dec push (bad) insb arpl jbe hlt xorb xor inc jp jno jge push xor cmp adc jb dec push negb into lret adc in jle nop pop mov push xchg (bad) into and inc dec je xor in dec push or adc jae add cmp stos jnp int xchg call movb hlt inc inc loope pop xlat xchg test js mov ja xor fidivr jae ret mov push inc or cli jp jns out cmp xchg push int3 dec fidivr repz dec pop jle xorl inc imul lods xor cmpsl mov popf pminub stos mov jl cld je dec xchg in repz ss in cmp push cmp pop int add fsub insl sub jae mov xchg add lods bound xor inc lock dec push mov in icebp stos push xchg mov ds xchg jae (bad) (bad) icebp (bad) into xchg movsb jbe adc movsl push xchg mov mov ret add dec xor mov std sub loop mov addr16 xchg adc in outsl hlt xor (bad) pop imul mov mov xor sbb dec mov mov cmpsb xchg shrl push xchg hlt clc pop mov push outsb pop inc sub xchg push push sub imul pop in cmp inc pop insl lods cmpsl bound test stc inc mov popf mov inc rcl xchg test inc sub mov cmpsb aam or lods negl leave mov xchg int adc stos ficomp (bad) dec pop scas jnp mov lods data16 cwtl mov bound test mov and add xchg sahf add int3 stos popa adc loopne daa jmp or pop (bad) pushf xor mov lahf test xor jecxz push jb fs adc or leave adc add das pop or and mov imul push rolb cmp xchg inc jae les outsl mov adc rcr adc add pop jnp pop jle pop test cmp or pusha add xchg dec bound pop faddl xchg inc sub jg,pn push stc int stos xchg mov mov xchg xor (bad) pop lret imul das repnz lahf push pop movb ret loop aam jns sub in movsl fwait adc jl outsl mov bound mov mov fldcw push movaps pand enter cmp fidiv mov push xor aam xor cmpsl jb jle mov in and xor sbb push jne cli test ss sbb repz cmpsb mov push test and push mov or xor xchg aam inc xor pop jae cmp test jae mov cmp mov repnz sar and add and jne aam imul mov dec inc push clc add das lods push pop push (bad) aaa xchg inc int lock push fdivrl cmc sahf mov jle lret iret jmp push lea loopne out mov add mov das out sub data16 dec lret outsl mov int cmpsl (bad) push ja sbb mov jl out mov and push cmpsb imul lock loopne mov sub pop sbb rorl fptan sub pop popf test sub (bad) loop jle or sbb and leave xlat and outsb xchg pop sbb repz lret popa xor pop lock sub mov call ret inc pop sub dec cli and jl dec outsb adc in sbb (bad) lock cmpsb (bad) jbe add jnp daa add lds outsb enter jp fnstsw je cltd xchg pop insl cmc lods adc xchg shrl dec xchg dec mov rclb test aas jb lods or cmpsl lock rcrb lahf xchg jmp mov imul ret imul jge push aad adc (bad) jae adc mov sbb and adc js or cmc fisttpl int xor sbb add pop jns std pop push push nop push fdivs push sub mov lock sar repz sub push lret pop fidiv (bad) jbe mov jmp or insl lret push sti div mov scas dec inc xchg inc iret mov or xchg scas lea lret inc enter dec xchg jbe pusha jb inc dec xlat lea nop inc ret aaa mov sbb stc or inc ja aas mov (bad) popa out cmp mov sbb or sbb sbbl mov or lret add in dec mov fildl jmp xchg xchg sub sbb cwtl mov cmp sahf push aaa mov xor xor jbe jo add outsl scas xchg or cmpsl inc je mov mov loope sbbb test mov dec adc add and sbb ret mov xchg inc (bad) jbe push jno add rcrb adc mov lret movsb lcall adc iret andl ja hlt in push jne loop xlat xchg test mov stos outsb js inc mov out in pop in subb xor pop mov es ret fldt popf xor mov mov rcll sbb test sti add xchg loop pop mov bound out cld lret xchg arpl rcl mov mov dec cld and les rolb mov out sbb add xor xor mov dec ja dec sbb aam sub nopl mov push rcll mov push insl push xor lret sub dec mov hlt mov mov mov lcall mov call movsb addr16 rcr xchg mov sbb lahf fsubs sub sahf jae into in dec in pop loop,pn jnp push inc xor sub mov sarl imul gs fs inc xchg out fisttp cmp dec push or cwtl loopne push push mov test jns das (bad) cli pop jge xchg lret xchg in sahf push adc xor adc jb rorb test test xchg es bound dec adc dec iret pusha fwait mov imul dec cwtl fmulp ja lahf adc daa dec mov sbb sbbl imul imul fcoms test cmp out pop and cmp mov fwait pop push sub pop xchg add mov inc mov pop cld subl mov xchg fld movsl fidivl push imul mov inc call sub jne sbb in mov inc and mov lret fwait stc push outsl cld imul xor lcall sbb dec xchg mov inc push adc mov mov dec jg sbb pushf inc sti jmp dec add push popf mov out ret test cmp jle xchg sub sbb fwait add in or pop pop lds jg inc cwtl fisubrl xchg cwtl cld sbb inc sar adc imul add inc pop mov or ds dec sti es mov sub test sub pop cmp mov movsb push dec xor scas loope mov mov adc fldl xor lahf mov inc mov aad cmp (bad) clc in ror ret adc inc or push lods adc into fidiv js fist push mov aas xor out int3 mov jne test outsb adc sbb dec jecxz jne jno dec inc fsts fsubrl scas pop pop xor or (bad) fistp jno (bad) je rcrb in xor inc cmc mov and sbb roll jns in outsb and fisttpll aas add add in sub xor mov nop lahf cwtl lods inc cmp subb mov call cmpsb mov fmull xlat sub push adc xchg scas jo sarl js jle xchg icebp adc cmp sbb loope push pushf lock testb and or aaa loopne add adc leave testb xor cmp lods mov mov cmpsb fstpt inc into cld clc (bad) das scas mov lods in hlt pop mov lahf push (bad) inc frstor sub (bad) fistp popa jae mov cmp bound shrl jnp lds clc xor jp,pn xor adc dec sub pusha xchg movsb test test popa add insl sbb inc push mov movsl sbb push mov sti push xor cltd into mov imul push add add icebp in mov lds jbe pop stos and sti xchg mov push das lahf subl mulb sub scas inc pop xchg ljmp sub repnz shrl cmp and daa fwait add mov dec xchg clc aam push cmc xchg sbb and adcb bound pop rorb (bad) sahf pushf cmc pop jbe das push lret or aam jbe hlt mov inc pop pop (bad) mov ret out (bad) pop shrl cld scas imul aas mov ret xchg dec in into jnp ds in mov cmp arpl pop rcrb mov ljmp enter cmc fisubr add data16 call faddl in sub int3 dec add js xor inc add rorb ja mov mov xor dec mov dec cmpsl fsubrp mov xchg mov popf (bad) js mov dec out mov and and shrb add mov movsl inc repnz xchg pop pop stc cld fldcw dec mov mov shlb dec lods stc pop jp int3 jmp sbb pop push push xchg fldt sub xchg cmpsl mov mov insl ret xchg sbb repnz xor lds mov movsl xchg and fcmovu int adc push (bad) movsl sub (bad) in call inc xor rcll repz mov mov pop sub xchg xchg int mov fisub push cltd inc xchg je mov mov mov pop cmc xchg xor xchg lcall divl sbb lcall add pop out loopne dec inc daa call fcmovbe int inc mov jo xor aad lcall xchg jle or pop adc das dec stos mov insb sbbb sti mov outsb pop fldcw mov aas xor mov inc jno call aam push add outsl call jae jmp jp test in fisttpll (bad) nop push fs dec xor jne push pop (bad) hlt sbb jb sbb xchg pextrw mov adc mov xchg add sbb sbbl aad bound clc test call sahf mov push fwait cwtl in jbe gs test xchg and jmp or mov (bad) pushf fsubs (bad) fwait lods mov push jnp hlt and cmp decb add inc xchg cli mov fstpt xchg mov inc addr16 mov inc rorb or movsl sub test or mov insb js (bad) or pop adc or sbb xchg in loope aas mov cmp cmc xor adc push mov add js add (bad) push pop fcmovu push js mov lret pusha leave nop xchg sbb push inc test leave leave pop jecxz je pop and lahf add lret dec leave rolb xchg push pop (bad) lods xchg xchg mov sub jb pusha xor cmc inc or sbb pop or fmuls popa ja ja jle mov int adc mov xlat pop lods cmp decb dec aam push rcr lods data16 sbb std stos xor iret mov push and loop mov push std jne popa addr16 loopne int3 and cmp addr16 pop push inc call pop pop je ret pop adc jno inc or lcall and les and push or or and adc shl fcmovbe jecxz sbb scas iret dec imul mov stos cmc or jne mov push jo mov mov jge outsb inc (bad) push lea pop lods sbb loopne mov add xor lds mov adc mov xchg inc outsl iret pop cld sbb cmpsb jo (bad) jno imul mov in ljmp stc cmp loop sbb adc dec push ror insl gs sbb dec test pop add inc out xchg mov fcomip movsb mov adc stc lds bound inc xchg mov in arpl mov or ja mov imul loope mov mov fiadd repnz mov jg adc ds mov aas pop fistp cmp jno or fwait pop ja out lock cmp ja gs test aas aam add (bad) mov dec mov test sub push stos inc lahf in push xchg das mov xor pop sub pop aas adc lods xchg testl vshufpd sub mov dec outsl fs xchg in shrb roll sbb sub addr16 bound mov xor sub or mov pop cltd adc push and add mov inc clc cld fadds push daa sbb adc repnz push pushf fdivrp mov dec xchg into aaa jbe sbb or cmp (bad) mov ffreep imul cmp adc cmc sub adc and sbb dec and in in sub pop sub inc mov clc pop dec cli (bad) pop out add fucomip xchg sub rolb sub inc dec jmp out fistpll imul (bad) stc addr16 push cwtl mov lods mov dec mov mov (bad) xabort clc sahf xchg pop pop ror fdivrl outsb test pop cmp sti pop push xchg sub (bad) lods add mov stos vpcmpeqb jno pop mov xchg mov call stos pop cwtl jle mov std xor loopne rorl mov test imul lods aam in mov lcall sbb bound dec lds add adc pop inc mov lret jp add cmp andb dec shrb mov cs out (bad) mov imul xor pop jp cmpsb add ficomp insl movsb push sbb fwait adc xchg and popa xor ljmp xor add rcll xor inc dec aas lock cmp lods mov adc dec pop dec pop stos pop sbb and adc fcompl nop add sub loope xchg mov lea (bad) mov loope push in sub pushf je mov mov xchg call xor add cmpsb pusha mov int fisubr movsb dec loopne pop insl outsl lret nop popa ds and setnp xchg mov push adc and sbb repz cmc cmpsl hlt test loope aaa push int3 fildl notb push mov mov push mov xlat add lds ret or xor mov fs int3 mov out inc inc fimull repnz mov pushf aas inc addr16 stos and test jmp testb outsl pop mov repz cld fnstcw cmpl dec ja (bad) jnp xor add fisttpll xor xor push fisttpl aam add cld fiadd jnp adcl push mov popl out cwtl add test and and push cmc inc icebp mov sbb mov and push dec into inc cwtl add sub stc push jle xor arpl sub push sbb jmp rcll and or sbb cmp xchg outsl adc and cmpsb ss cli mov dec or cmpsl jmp arpl hlt js xor scas or add sbb mov dec jne mov push add imul repnz sbb pop dec lds out movsb cmp pop int3 loopne inc adc inc dec add subl cmpsb sub push mov lock pop in (bad) jne adc loopne aad arpl gs xchg push movsl pusha in imul push enter xor insl (bad) xor jns (bad) mov out jge lret push mov dec mov mov jno add xchg (bad) leave shlb je cli mov mov (bad) pop pavgw push sbb cmp dec or icebp sti cmpsb loope into xchg lret daa cwtl dec and inc xchg ljmp mov mov and pop ljmp loopne sbb scas fcoms xor test sbb inc inc lea dec jg lods std jg sub ret push sarb sbb repz dec pop nop and scas bound pusha sub push sub int3 lods push fsubrl pop push addb cli mov jae jl dec outsl inc sub lds pop adc cmp imul lock jmp push je frstor adc int3 inc and in cmpsl and ret inc stos mov inc mov test repnz popf mov fildl ljmp (bad) icebp jl scas sti cmp in push push adc jl aas fimull es dec inc jg ja call sbb and sub mov jp jmp sub insl pop fcompl mov mov das xor stos ljmp (bad) lret (bad) scas mov mov cmp xor sbb cmp imul mov ficomp fdiv pop and sbb mov add jmp es xor mov sahf scas mov pop adc (bad) sti mov pop jb jne leave mov push and fwait sbb lods fdivrl mov inc outsb test adc in out je insl inc adc or popfw aad iret sub clc xchg outsb push xor sbb xchg cmpsb jecxz (bad) cmp fs push mov (bad) push (bad) xchg add jns xchg fsub fcomip or mov pop dec inc mov stos rolb sub sahf xor enter fidivr and aaa mov jmp faddl xchg imul or enter movsl aaa adc xchg das cmpsl lods lods xchg rol add push insl int3 imul (bad) repnz adc push ret dec pop pop adc pop lret dec movsl sbb and xor pop ss sbb and stos hlt daa cmp push test sub or rcr and pop pop add and nop lcall mov (bad) stc or adc stos sub push add or adc dec cli int inc jg,pn mov cmp jnp sbb dec mov pop add rcrl fnsave mov push ret mov popa jo ficompl xchg out (bad) xchg dec cmp nop (bad) icebp pop aaa cmp push js adc add mov xchg sub push icebp and mov insl xlat (bad) ror aas gs push mov push ret or enter in stc cmp movaps xor pop movsl mov addl sbb andl jae nop pop dec xchg fdivl iret scas pop xlat or and int3 xor xchg sbb xchg (bad) xchg mov lods (bad) jg mov xlat es sbb (bad) adc insl mov xor jbe in (bad) gs add or outsb popa cmpsb and ret lret (bad) xor jne mov outsl mulb mov mov jae inc clc dec push pop push insl in mov (bad) mov mov lods sbb dec mov cmp jne xor jmp mov xchg (bad) dec gs add pop (bad) js adc stos sbb xchg les or in imul (bad) pop cwtl outsl mov outsl sarl mulb mov xchg je pop jmp mov scas loope jmp adc mov lods push mov adc out or gs sbb xchg out ljmp sarb mov popa ficom jecxz xchg push pop add imul negl fidivr pop repz (bad) (bad) dec (bad) lcall sub aad shl and mov mov push push rorl test sbb sti dec xchg (bad) int3 ss sub lahf mov dec jns mov insb je push call adc incb cs mov adc (bad) scas pop jle fcomi xor ucomiss inc mov stos jo,pt enter jl negl fimull xchg adc dec xchg lea sub rcl inc test (bad) xor adc mov mov hlt sub mov pop stc cmp mov test pop mov out adc (bad) cmp pop or push stos mov cwtl imulb pop loop xchg jle push mov cltd sbb out mov xchg clc xor mov push scas dec out sbbl adc adc sahf mov push xlat xchg es jp push jae xor std repnz jo popf xor push sub xchg or fdivrl mov and inc xchg ds outsl in jo jecxz negl jne ret addr16 sarb sbb and cwtl push xor movsb inc test mov sub adcl push lods xlat std fwait push repnz rcrl xchg repnz sub and adc mov or or int3 mov pop repz mov out lahf aas fstl pop or lret arpl sub popf or dec inc aaa in or dec pop or jno push stos adc push push sub mov xchg mov popa mov sbbl std mov fwait sarl add sub in enter loop std xor sbb xor or nop aam push pop out push push mov lods push pop inc mov pavgw pop mov pop dec std imul cmp pop ror add (bad) (bad) mov mov xor cmpsl int adc insb mov out lret push sub shrb cmp lea fldlg2 push jae in inc inc dec pushf lods loope shrl sbb int xchg jne lock stos mov mov cmpsl leave push lock sub fsts jp cltd xchg mov jb fs fisubl repnz inc inc loop (bad) (bad) in dec mov and int sbb jle push je lret jmp aam in es xchg jbe sub cmpsl ds dec cmp cwtl lret arpl into lret xchg (bad) test pushf or mov dec lods rol add adc xor or mov ds out jno sub fwait mov xor addb sub pop or push test or and jne adc jno in out outsb inc cmpsb or adc sub loop (bad) lcall test add (bad) std push out ret xchg xchg push or dec cltd fs hlt add adc bound pop dec fnstenv xchg inc sahf pop cld cwtl pop sbbb cmp lahf or jp mov pop sub inc pop popa cltd popa mov mov cwtl (bad) xor lock jo es dec mov jmp jecxz fldenv arpl xchg add jbe and cmp add mov add cs or or in outsl sbb inc adc adc add jns roll adc fidiv cmp or sarb jp fdivrs cmp ret repz cmp cmp int3 push adc and inc iret aas push in cmp dec xchg stc testl dec in adc popf inc sub push sbb sar push inc enter dec cmpsl and add inc nop xor loopne int3 sub test add insb outsb in sarb push pop test clc ja cmp adc add scas ss push fwait scas mov xchg outsb pop mov aas (bad) mov fisttpll dec pop sbb loopne and inc or sbb (bad) push xchg test pop repnz ficomp movsl mov mov lods sbb cmc pop cwtl push jecxz sbb cld testl (bad) in dec cwtl int3 rcl mov add and rclb cmp out in (bad) js or add pop es decb repz fs mov xchg mov sbb mov sbb loop push and xchg scas mov sbb setno cwtl in int and mov shrb call repnz lret xchg lret movsl fldl2t js fcoms inc in push sbb insl cwtl (bad) iret sub jns and divl xor push inc adc sbb in lret cltd (bad) xor dec test mov jae dec xor popf or mov xchg repz xor cs jmp push mov mov sub adc push pop pavgb add or adc (bad) mov es cld pop xchg repz add lahf das add lret mov push mov mull (bad) jbe lods mov mov push enter mov xchg in mov sti xor xor xchg mov mov fwait sub out mov (bad) loope and cmp pop (bad) rorb (bad) lock dec xchg dec jno sbb sub adc inc xchg xchg mov out lret clc or push sbb mov jecxz pop jl adc repz jecxz inc roll cmc xchg cs cmpsb pop call bound in sbb push clc cld xchg mov push mov cmc push out jp cmp lods test cmp mov cltd sbb inc and imulb arpl dec push sbb jl adc mul sub fwait lea test cmp add scas cmc lahf (bad) (bad) orl dec mov into call es push pop enter mov mov cmpsl dec sub sub sbb or push adc pop xchg scas push ret cwtl lods push inc jl push mov pop xlat sbb je cmp mov mov mov add pop xorl mov mov testb insl mov xchg sub imul rolb mov lcall sbb out push xor fwait or cmp mov mov mov gs outsb cli mov ds test sbb add fidivl (bad) repz loop push adc cmpsl (bad) mov xchg mov pop repnz xor lods fist xchg adc lock mov fisubr imul ret pop int cmp pop popa jg pop enter jge push pop cwtl mov outsl adc dec pop push sub adc xchg cli (bad) popa mov rcrl xor cli or out es sahf mov or push xchg push xlat sub data16 ds cmp or into or out push lods adc xor es fnsave adc pop mov xchg sbb fildll lahf adc adc mov idivb mov jnp push in sbb jbe jge or add cmpsl hlt xchg dec pop add pop neg xlat enter insl jg (bad) jmp jmp xchg jecxz mov add cmc or adc and das es mov and dec mov inc frstor fstpl push clc ficomp cmpsl mov pushf jge in push aam dec inc lods pop cltd ds mov xchg mov or adc mov mov fcoml (bad) jns inc fdivl and mov neg and (bad) lea xchg fidivrl stos ss lret js cmc fmull cmp push cmp scas int fcmovne xor xchg or imul xchg mov movsb enter add jnp mov mov cli (bad) lock xor sub (bad) xchg les sarb sub out mov icebp cli popf lea lock fidivr movnti xor jns ja dec cltd out int3 lock jnp imul fsubrl call loop in cmp mov push sub enter clc pop inc mov or cs push mov cmp xor dec mov inc lret jecxz cmp rclb push dec push test adc (bad) cmp dec insl das test pushf or adc xchg push add sbb push stos dec leave into sbb cli sub xchg adc or (bad) push push out testb sbbb xlat es sbb inc cltd mov cmpsl dec orl test adc cmp in dec dec mov cmp sub lahf dec stc push push xchg xchg push fs or out (bad) ljmp dec mov or adc (bad) mov dec cmp sti sub jge movsl and xchg push (bad) (bad) (bad) out cmp sbb out cmc cmp shl idivl xor sub orl aad mov cmpsb fildll lds inc push mov lahf pop (bad) sub js cmpsb into (bad) adc xlat jg,pn xlat in cs sbb or adc add and cmp xchg dec cld repnz fstl movsb dec (bad) frstor mov cltd or sbb lock fdiv push popa sbb repnz and xor js fisubl pop mov cmp test and sub idiv mov push fidivr xlat xor pop ljmp test or add outsb jne jl xchg cmp mov and dec adc into sbb fs outsl test out cmp data16 and test inc adc (bad) movsb mov rorb adc lret pop sub mov popa nop sub pop aam sbb xor xor icebp inc sbb rol push inc adc insl mov ret loop ret sub push mov rol mov inc cmp repnz fimull sbbb cltd ljmp ja neg rolb push dec test aad es mov popf scas dec mov hlt popf adc pop add mov negl mov lret pop fst das lret and ret in hlt iret dec in push bound nop mov pop cld inc inc and in lret out cltd jp std shrb ret mov in jl adc jg pusha pushf (bad) sub or icebp aam es les jae lret inc arpl mov iret (bad) mov movsl out fidivrl ja int3 adc loopne push cmp fsubrs aaa repz stc rol or int3 std fisubrl xchg pusha jp fwait stos sub std mov and stos enter out lcall ljmp pushf movsl mov stos cltd and push or dec inc outsb dec pop (bad) push mov repnz pop cwtl xor shlb je icebp incb jne adcl sub sub jle fstpl out (bad) ja jmp jns xchg bound or xchg sbb jno push or dec dec shrl pusha jg lret mov inc inc nop mov (bad) dec xchg scas sub pushf sbb jmp daa add jae das leave mov or ljmp (bad) (bad) sbb xchg sub insb adc cmp xor sbbb data16 fsubrs add imul scas rorl cmp orl int3 scas add push bound adc add mov call mov pop cmpsl ds fidivr jb ficomp mov and jb add cli je jb sub lret sbb push movb pop sbb push (bad) rcll pop adc ret mov push or fs fst push js cmp pusha jmp jo ss test lock adc mov out sbb pushf lea dec dec dec sahf xor imul popa jmp sub pop mov push push xchg (bad) cs push add push shrb lock fwait push in je daa popf xor inc lahf call mov xchg je jecxz lea push xor xchg mov add mov jae sub cmp dec (bad) (bad) scas insb jmp pop push jmp imul lcall nop in adc mov xchg xorl jae mov or lret xchg dec (bad) mov push lods sub cld push fwait jns (bad) int3 jg mov cmp shlb pop mov inc sti or movsb loope dec out lods iret movsl dec or fwait pop fsubrs repnz les bound cmp outsb insl cmp xor lret stc sub sbb test lcall ret add cwtl pop insl adc pop loop push ror pop test pop roll das xor pop dec fwait ror sub add push jmp push inc cmp or xlat popf cmc aaa push cmp (bad) sub in fs lea or inc stc repz in push sub loop int3 orl jp shlb mov sub mov xchg (bad) clc outsb push enter push aad aad sbb sti jle jnp and mov dec push or movl mov pop push test loopne xor or daa add inc dec cmp or mov lea push divb xor jno icebp pop lret sub fstpt cli loopne popa inc jmp jle insl les lret stos pop adc jae xor test cmpsl dec pop push cmp jnp enter add mov repz add adc mov nop mov push fisub ja dec addr16 lods jmp jo fimull pop or jge inc mov xchg adc lret loope cwtl (bad) jns popf cltd cmp pop mov iret mov jp mov xchg lea xchg lcall add pushf lahf iret stc pop lcall ret pop int and jb cs leave aaa lea pop xlat inc cmp hlt arpl mov outsb fisttpl xchg int3 pop xchg ljmp push mov inc push pop mov and xor test les jae outsl loopne es pop cwtl into sub or test sub ljmp mov dec adc cmpsb mov adc mov ljmp inc or and dec and dec out sub fnstsw outsb js aad pop lods xor mov mov das xchg mov pop add ja xchg sbb add enter and dec int3 or mov imul or push fcmovb xchg mov adc mov cmp ss movlps ror sbb jbe sbb inc call iret xchg repnz adc xor or jns xor lcall pushf pop and scas es push mov cmp test scas mov es sbb lods cmpl xchg mov dec cmpsl xchg mov dec mov hlt push dec adc sub (bad) mov insl insb ljmp xor adc mov enter adc xorl inc mov jae imul inc (bad) iret push mov xchg movb xchg inc or sbb addb jns nop popf push aas insl ja test pop push movsb jne ret int3 jo insb ret inc mov mov cwtl mov call loop mov movsl jne mov repz inc mov sysret jmp or fwait dec jae xor incb call mov bnd popf andb pop pop mov outsb fs add push cwtl stos jp jns aam leave xor push mov sub add pop es fisub rcrb push lret mov sub in cmpsl pop mov and push test jnp sub stc addr16 fcoms jge adc push scas cmp aad (bad) xor jne stos lods jle or push je sti push jecxz xchg dec cs popa push jmp arpl cs scas inc push and int adc es mov std fwait dec cli imul cmc mov enter test add xchg jno cmc ret cwtl insb movsl loope int3 sub inc sbb xchg (bad) call sbb jecxz mov in test jbe jbe cmp aaa popf cmp int3 adcb rcl fucomip test add inc and xchg mov imul scas or xor lock jmp push mov add mov ror mov inc sub iret or cs daa repnz push into int into mov inc daa and sub sbb fadd cltd jmp adc mov mov repnz xchg popf mov mov stos out (bad) cli adc add das call pop adc add and stos es push lahf daa jne int3 fidiv sub ret sub aam jp test add mov ret jle adc pop xorb in fcmovu or je and adc push inc in push xchg dec stos and loopne cltd aad cmpsb sbb pop xchg dec xor popf push int3 inc cmp xorb data16 aas test jle (bad) inc mov int3 gs mov inc push mov pop pop leave lods incb sub inc fs adc mov mov adc into ret (bad) sbb popf or dec pop ret adc dec inc lahf gs inc decl imul mov imul push mov mov sti adc mov push (bad) push dec adc iret push fs insb mov aas mov mov mov push fwait jbe popa cmp dec add mov jmp int sbb cltd xchg dec dec or test inc pop lsl fs mov inc push sbb iret dec ret repz inc or sbb addr16 inc iret jns mov pop push stc push or xchg push cmp cmc jg cwtl inc es dec mov pop fcoms mov cmpsl add lcall or jcxz jns add pop jns sub mov aam das add mov fisttp dec mov movb fcmovnu mov dec imul lods hlt adc inc fcmovu xchg jns ret fstpl aam or pop movsb rcrb popa lahf stos mov loop out jl dec stc mov jnp imul pop repnz sti cmpsb test xor movsl adc cwtl and xchg cmp and mov mov xchg push lahf or jo stos aad lret fisttp xchg addr16 pop mov shll (bad) pop cmp aas push xor jp add xchg nop les push cmp push pop aad fidivrl fwait lret xchg ljmp jne popf pop pop push out push fistpll in jo xchg in fild loop jb mov rcrl gs lcall and jo stos lahf neg jae cli sub enter sub cmp cmpsl adc test and or push jae aas fs xor je lret arpl sbb cmp pop ss dec shr inc out (bad) cmpsl cmc outsb (bad) dec mov test sub lea mov inc fwait mov add out jg xor sbb xor inc sub into loop loope add (bad) aas sbb loopne sbbl push pop dec (bad) negb mov addr16 cmpsb movsl test cltd test pop dec cmp fstp into mov pushf mov add xchg in test iret jmp push dec jo mov iret add out push fs test jmp adc out arpl movsl adcl arpl les fwait add xor loope inc mov push notl push adc or icebp aam pop notb arpl pop cmpsb in (bad) into pusha movsb xchg insl mov pop fisub sbb push and jns int repnz les movsl vmread sub aas pop cmp test mov add mov cmpsl adc fdiv mov sbb pop adc test das sbb jne adc lcall pop mov lds cmp adcl add movsb je or push daa in lret imul mov xorl pop dec push stos out test js add in cmp and inc (bad) notb lea loope xor (bad) xchg cmp ret mov lods dec imul daa and and pop sub popa out fwait inc jmp gs mov mov mov sbb je sub cmp xchg (bad) jp wrmsr jl icebp cmp sbb into jl into xor inc adc push fnstcw les cmp lock test lods lret pop lret mov push jp add repz stos out pushf pop mov imul stos jns pop xor mov add xor jne loope stos cmp out push pusha dec cmc or inc push add pop or rorb pop pop adc cld jno xor daa test mov sub xor adc pushf cmp (bad) pop mov mov cmpsl test pop scas lds js or insl fisubr imul adc cmc mov push and and (bad) (bad) or shrb pop js mov sub mov jo xchg loopne xchg mov jo cmpsl orl fsts popa loop or mov and adc mov inc jecxz push pop cmp ret int3 (bad) jae push and lcall mov in mov sub inc in adc fnstsw push in mov sub jb fdiv out dec pop fnstsw mov mov inc jmp inc hlt icebp test sbb jns inc inc sahf sbb lock in fldt xor fnstsw mov out cwtl cmp inc mov mov jne gs jne lods stos push xor outsb arpl pop fwait int inc and cmp out mov pop std lahf stos lock pusha std xchg mov cmp mov pop inc adc fsubp or mov out and mov sub lea (bad) jb adc pop inc jmp (bad) in in dec pusha add pop and lock push xchg jae incl out bound inc pop ds mov lods setnp add lods fimull ret add repz adc sbb bswap xchg jl ja add roll scas (bad) pop std push mov xor insb fs faddl mov aaa adc test stos and iret pop mov and cld pop aas ja stos xorb insl adc or test (bad) daa pop mov test daa sarl fwait mov pop rcll adcl mov cmp add scas or lods iret push test fisubr push and test lods pop fbld rcll xor push lock push mov push in (bad) or imul hlt ja xor lahf test (bad) jecxz xchg popf push ffreep or scas addr16 fcmovbe enter mov pop dec arpl mov pop loope or lods or xor jns sbb and add out inc clc hlt pop mov std adc scas and mov mov fist lahf aas popa adc inc xchg test mov inc (bad) jns or cli dec daa mov mov and cmp (bad) or xchg sbb arpl adc stos call dec repnz roll mov cwtl jae out xchg sbb lret test call fisub (bad) lcall loop in rclb fwait daa or dec iret fimull movsl add jb daa fnstcw out sarl ljmp xchg mov adc fisttpl cmp cmc inc add xor mov lods sub int xchg adc jge xchg test sbb (bad) mov rorl sti insb cmp repnz mov roll in nop push mov jp jmp lcall inc jge repnz aad pop mov fiaddl fdivs cmp out ror sub out pop outsb out xor mov xlat (bad) sub jno out cmp mov test loope aad xor mov adc inc leavew mov insl ja mov mov jno andl inc jl add out arpl xchg xchg or (bad) jge mov jecxz ret xor mov je minps inc pop cmc xchg cs adc hlt pop sbb xchg mov push dec in fistp (bad) roll push adc inc stc out sbb jmp aam pop cmp pop daa mov inc cmp into adc repz mov loop or add xorb pop xchg cmp ret mov and jp and pop shll pop mov pop stc cmp hlt xor push xorl jmp std cmp add jne out addr16 jge in xchg fnstenv xchg mov outsl pop cltd lahf nopl pop out pop mov xchg enter push movsb push mov add pop push xor pop mov xchg ja (bad) (bad) pushf dec hlt call jbe aam jo outsb cmpsl insl xor out aad clc rcrb dec xor movsl mov sub cltd inc adc sahf xchg neg mov xchg push xor push mov xor out repz xchg movsb out xorl (bad) bound push loop add orb mov mov jp call mov sbb icebp mov cmp mov lods pop dec push gs fldcw loopne lds dec pop add adc (bad) mov mov aam inc (bad) call and (bad) loopne aas add inc aam roll mov inc scas lods add xor icebp sahf mov push (bad) lock pusha cmp repz push adc es cli sbb (bad) sti iret dec pop ret push pop push mov dec mov out insl leave mov mov cmpsl adc push push ljmp push inc xor fisubl int testl push mov dec rorb mov add ja adc xchg push (bad) cmp cmp add jp into ret mov mov cmp sub and push insb insb pop add sarb sub mov pop dec mov or (bad) addb out test mov (bad) dec into push cmp add mov add test jnp hlt xchg pushf aaa cmpsb push push ret and cld rcll imul ja shll ljmp scas inc add lcall mov rclb dec push add mov cmp shrb stc sahf repnz sub movhps pop sbb shll rcll xchg nop out mov repnz fabs cs pop mov in inc (bad) and pushf arpl sbb jle mov xor xlat pop mov lahf gs movsl mov jnp adc push insb dec jo push cmp cwtl mov jecxz sub push fwait pop dec mov xchg adc repnz insb (bad) adc hlt cmc adc leave inc or dec xchg sub imul push pop pop (bad) out jmp inc lret push lret mov push mov mov xor mov add mov xor js push out adc mov cld loop xor adc mov mov inc (bad) ja ret jne sub jne movsl rcll fdivrl cld dec or jmp dec ficom adc stc nop sub pop or xchg std or dec xchg add repz cli dec les add fdivr push xlat data16 inc int3 out iret bound sub cmp movsl mov and dec add add fnop jl pusha gs adc nop mov xchg cmovnp test jp out movsb (bad) in aam mov fcompl add xlat mov fstl js iret xchg lods and sub stc lods mov hlt repnz jno into xchg ftst dec xlat dec idiv fldcw imul mov or or repz subb cmc inc mov xor out fisubrl (bad) xor xor cmc mov sub mov jp sub adc sbb xchg ja cld cmc in mov adc jne gs (bad) jle inc mov xchg repz (bad) mov fisubr sbb dec daa decb lea pop enter hlt mov cmp add lods stc (bad) pop pop cwtl in and sbb (bad) dec mov push pop mov mov daa loopne jge mov and xchg inc or fiaddl xor (bad) mov add jo fisubl mov arpl gs mov cmp push mov imul push repnz out movsl push movsl (bad) in lahf or push outsl jns mov fildll loope push in dec mov or int3 movsl repz aad aas fucomi ds sbb adc clc sub das call out xchg jo inc push mov lahf dec (bad) sbb int3 mov dec imul ret (bad) mov test mov sahf sbb and xchg push iret fstps scas sbb loope ret jle loope sbb or fs mov mov lahf mov xchg pop xchg mov or es jne jmp mov or mov lock daa sbb mov cmpsl cmp insb movsl jmp incb and mov lds or push aad ret push mov dec and inc mov sti pop sub gs call xchg mov cmp sbb outsl jge int3 out xchg outsl movups inc aad adc ljmp jb and leave sbb rcrl (bad) fdivp movsl mov mov (bad) adc arpl daa or std sbb or orb adc mov cwtl or xor sbb xor xor jb add mov xor pusha pop dec in lock loope mov rcrl rclb das mov xor jne ret cmpsl imul iret dec addl xchg into mov mov popa leave and sbb lea mov ret mov (bad) jo dec or adc in test out sub jae mov testb shlb fs inc (bad) ficompl pop es adc jae les (bad) jg lea roll mov nop inc add mov movsb xchg or mov jbe sarl (bad) (bad) fistpl dec leave sub mov cmp xor ljmp cltd fsts repz in sub imul mov xor or jl pop lods sub popa std repnz (bad) (bad) div pop pushf cmpsb jl lods xchg iret xchg aaa inc pop orb push mov fisub mov rolb inc adc mov jne scas pushf (bad) jle jmp mov sub icebp mov and xor lret push adc bound jne and lcall aaa mov pop sub xor sub inc mov inc ljmp sahf in jns push fnstcw mov mov mov nop pop clc jnp repnz ljmp push cwtl xchg adc out out or mov xchg or xchg mov jle xlat icebp jno sbb push xchg add adc lds and push out fwait (bad) pusha test (bad) jmp pusha push push shll dec int pop shrl xlat dec out push clc mov sbb mov xor mov push mov and dec mov pop jl pushf jbe lret push ljmp int3 lds je inc xor (bad) push test xchg test scas dec je lods mov push in sub pop out and sbb pop aaa xchg xchg test test cmp mov push data16 pusha (bad) stos mov pop std inc loope (bad) cld and add les es push sbbb cli cmp push insl les aam lcall in add rorb mov cmp mov dec lret adc xchg push mov or aam or xor push mov dec ss pop push jae pop pop std pop jno inc push sub inc andl mov xchg xor cli push dec scas and mov xchg aam mov gs pop mov xchg xchg outsl pop rcrl (bad) (bad) loopne dec cs loope lea push mov aaa lret addr16 test sbbb dec adc (bad) mov out (bad) fwait ror sub xchg cmp dec push dec cmp test xchg pop std mov push push pop mov xor fisttp divb mov rcr xchg repz adc and lcall rcrl cltd mov jmp pop mov clc add test dec scas cmc xchg inc sbb mov (bad) clc add repz out dec daa push imul cmp cs enter sub rol push jb js bound js push sahf push cs adc jnp or imul adc ret or cli repz daa (bad) lock in sbb test mov std setae cmpsb rorl xchg jne cwtl inc js out pop cmp xchg sub add ficomp push adcl mov mov add ja add js and movsl dec int dec jmp test ret std and lret sti adc aad std xchg popf jl in add and xchg lods ret ds call xchg aam add sbb and loopne fsubrl adc mov dec and enter shlb pop add jecxz inc outsb and sbb cmpl pop enter (bad) (bad) adc dec int3 mov pop xchg xor loope sbb dec push and lock int hlt jbe xchg imul adc loop pop add pop in jo daa aad or mov jmp and jno jecxz sub repz aaa xchg dec xchg (bad) imull xor adc jb stc movsl xor or gs mov push outsl test or ja,pn std into mov shrb push out or es pushl scas dec cmp pusha or xchg aam mov and xlat mov push lret out stos or push fsubs mov nopl sbb add hlt jg ret push xlat inc mov dec push sahf and call or or jge adc iret aaa fcmovb jp add mov mov fildll dec dec xor dec data16 sbb sbb subb fistpll addr16 mov inc cli sub (bad) incl mov aad es sbb sub xor sub inc dec mov adc and sub cmpsb push (bad) in stc jne,pn mov adc cltd imul mov lock mov fwait push mov sbb xlat (bad) adc xor out jo ljmp mov cmc ror repnz xor (bad) int and testb adc cwtl sarl mov pusha stos pop push (bad) scas cmp in scas push cltd mov push loope lcall pop push add shlb mov sbb jl movsb xchg adc sub aam push and negb sarl pop pop or jb inc cmp lret fildl out pop fwait push repnz jno mov jnp loope cltd and ja xchg pushf shr in shrb test xor hlt inc push mov jge jmp jl je xchg push ss adc cs mov rcrb jg and mov adc mov sbb sbb insb sub sub loopne (bad) cli in mov push outsl cwtl ds outsl loop mov mov push adc cli fdivrs jecxz sub pop cmp push addr16 or push inc ja mov sub pop mov inc sbb daa xchg int scas jns iret pop bound je jns stos bound cmp fld hlt ret fnstsw repnz ljmp arpl push fildl cltd jg (bad) sub sub cs mov sbb mov and xchg push and add (bad) mov test pop clc ss mov fisubl sub (bad) jnp pop (bad) outsl fwait (bad) ss sbb ror xchg insl das (bad) test into lea pop inc cs repz (bad) sti jp sbb gs jno add push lret shrb add dec dec rol addr16 and pop xlat insl xchg out push or jmp jno outsl sub or add scas movsb mov jecxz jmp dec pop sbb out (bad) xchg pop sub mov adc push add mov sub icebp sub pop lcall loope sub pop jne jno int3 lcall int sbb push cwtl inc lock int3 in nop dec mov stc lea xchg (bad) mov jmp cld dec (bad) (bad) out pop mov jbe mov sbb push cmp leave les mov mov cmc in cmp enter add pop in pmulhw in pusha push and sub cld arpl idivl fs loope sbb repnz and add sub ret out sahf mov cmp test push mulb shrl jns inc mov test scas mov jp les rcl mov js or jae adc imul mov mov xchg dec push ds inc in and sbb jo aam es call xchg pop dec dec mov loopne mov push out (bad) pop leave outsl or jmp addr16 cld xor movsl pop mov subb fsubs fstps test jno adc jb (bad) lret xchg push mov test cmpsb or or sbb scas xchg fsts jno (bad) dec xchg ds xor or sbb dec mov (bad) and add ljmp mov adc es adc popa ss xor pop insl jg push xlat and imul stos sbb clc sub inc ljmp rol ret ret xlat loop jb cld push push mov imul push cmp repz xchg ss das add pop dec and fst cmp and leave adc sub aam loope push (bad) sahf jp mov testb movsl movsl push cs scas dec push in xor or mov cmp dec in dec mov mov add out push add into out lret or cmp (bad) je and cmpsl mov xchg xor adc pop xor sub outsb rorb in and sub rcll adc adc lret ljmp std test push add es push fs push adc popa and (bad) mov int3 sbb push dec leave decb popf stos ror lea and (bad) iret sub add or iret lret lret mov mov icebp test dec and lods jl pop xchg add adc jmp hlt or sbb push add cmp mov dec jmp jb and adc xlat dec loope test mov jg (bad) stos hlt negl inc icebp xor loope mov out je out loopne mov stc cmp pop mov lea mov in or pop pop movsl inc add adc rcl dec mov or out or mov xor add lock xchg dec pop push dec fwait sbb mov pusha xor cs sahf sahf inc xchg and xor sbb sahf adc andl fndisi(8087 cmc es aaa adc mov adc pop xor sbb cmpsb add sahf adc jne pop fisttpl dec out fneni(8087 add add dec mov jbe adc mov inc cmp ja je jl cmp inc out dec adc xchg push dec lret repz dec in adc add out imul jge (bad) test cmp push gs sahf enter sbb sub hlt (bad) jp stc xor data16 lret add sti jle mov (bad) cmp xor and iret stos in inc sub or out push xchg xchg in aam push adc test hlt inc movsb push sbb lahf jns xchg stos stos mov cltd js jl sahf dec push inc adcl add int3 xor jb cli jmp jecxz and push call fisubr out ja cmp and sub lcall and xchg out sub out pushf mov jl sub mov and mov movsl int3 inc dec dec add add test mov add in or rcrb out es sbb sub sub xor push mov lds sbb dec pop hlt imul sub push and in mov popf xchg push mov sub xchg test subb loopne or sahf lret mov popf cmp push push adc adc lret mov push in bound lea xchg scas sbbl xchg movsl int3 inc outsb lret (bad) (bad) jle loope mov xchg or out imul sub sbb fcompl lds aaa sub movsb shrl fdivrs cs xor popf inc dec nop es cmp fcompl shrb jne js xchg sub mov add mov or push sub (bad) (bad) xor jnp push xchg decb (bad) stc (bad) mov and mov dec notl mov mov in dec cmp jecxz ficomp scas jnp jge pop pop mov inc mov push or push ret aas lods xlat push ret shrl mov out sar xor jecxz ret lock xlat clc cltd and hlt enter idivl or jmp dec hlt cltd pop or sti dec popf stos test (bad) insl jp cmp fnop mov jl les pop xchg ja movsl cmp fldt addr16 xor jno inc jmp jbe mov xchg icebp mov push in orl sub int repnz icebp pop ss jl (bad) mov and jle insb rcrb lahf cmpsb es jl imul mov negb leave adc mov mov jp push xchg ds (bad) pop sbb mov leave adc mov out sbb nop xor rol jmp push in outsl jbe in mov mov arpl out test cli push dec inc cmp push scas push jo inc push xchg pop insl mov and add pop pop fiaddl mov gs outsl popl jg cs (bad) enter xor sbb cli sbb push es idivb aad pop or imul test mov loope scas push xchg and push fs mov fisubrl jne mov mov sbb xor mov es std lret loopne sar jp ds sahf stc aas inc (bad) mov repnz addr16 and sub outsb xor cwtl push cmpsb rcr or push fnop jmp (bad) inc cmpsb icebp sbb adc clc xor cmpsl dec adc (bad) rcrb and gs scas outsb (bad) xor ja mov cld jns jne lods loop int push int rcr adc in push inc mov xchg and aam fldl std xor lea sub mov test repz dec mov test inc inc xchg mov push (bad) fwait (bad) dec add iret adc xlat pop cwtl mov inc icebp out (bad) (bad) mov pop pop aad lret gs cmpsl and jg adc or cmpsb jge stos inc or push lea clc sbb lahf ja pop into orl lcall daa mov loop or les cmpsb pop mov push jecxz cs cs add (bad) (bad) lods push dec ss mov popf pop pop (bad) int3 lahf fisttp jg loop mov adc repz in gs add mov or sbb jmp pop mov mov inc jbe loop je jno lahf push sub insl sub inc xchg xchg or in jmp jb pop pusha outsb imul mov xchg xor or xchg ficomp cmpsl leave cmp xlat mov mov xchg pushf pop or adc jb pop fs jnp mov pop cmpsb shr popfw and xor push iret pop xchg xchg jb mov enter and aad push test mov loope in sbbl cltd ljmp jae mov cmp lds inc scas lock push jne push mov pop push ficoml inc jge or xor mov push sahf repz dec sbb pop lock loopne lea adc cltd add lret jne or mov mov loopne jg (bad) clc imul adc ds add inc divb sub mov adc sti pop pop sbb lds loopne es cmp inc aas add adc sub ds sbb push jb inc jns pop ss mov mov jmp cltd rorb ss ljmp cmp pop push dec repz inc data16 dec adc jo (bad) jb int mov loop sbb sub cld outsb jmp push add push or in lock imul pop adc lret imulb lret lahf daa and mov rclb int3 jbe leave rcrl mov ja je repz cwtl mov dec mov movsl mov frstor ja jo lds out cmpsl dec mov pusha fisubrl clc leave (bad) aas mov and and je aaa mov dec cli pop scas pop scas dec pop mov nop mov popa pop pop inc mov adc out xchg dec ds mov xchg sub int jo (bad) dec loop in push (bad) pop movsb sbb into shl inc loopne icebp mov out nop cmp pop dec repnz cmp movsb add daa stos xchg adc nop rorl daa in xor fildl add aam mov or xor sub movsl jecxz notb ds pop fsts div popf mov (bad) pop dec sub jbe,pn and push xor add (bad) xchg addb jo (bad) (bad) pop loop out and aad in inc ja,pt adc adc aas stos cmpsb sub test push pop (bad) call or in das cmp pop and inc push call iret xchg xchg call adc xor lcall cmp sarb xchg add mov jmp mov dec mov mov imull adc cmpsl mov sub addb fstps lret sub sub leave mov cmp pushf xchg cmp lods mov sarl cwtl je mov add adc idivl cli popf dec movsb into (bad) dec fisttpll mov xchg adc (bad) and pop ljmp mov (bad) mov lds aam sbb shll xorl insl (bad) adc add mov inc sbb xorl xor insb jp fstl add ret lds add in xchg in ficompl lds add inc out icebp adc cltd add jp aaa push (bad) mov mov pop mov cs pusha popf cmp loopne mov sbb out pop sub popf add xchg mov imul and mov outsb or popa jbe add cmp dec mov fisub lcall rol push sbb out insb jo stc sub xchg movsb sbb adc jmp pusha fcmovnbe inc or pop push cmp jmp push sti cmpsl dec pushf stos xor (bad) sbb outsl or sbbl mov xchg data16 inc push and mov (bad) cli push out lahf icebp call sarl inc jl mov xorl lods (bad) (bad) ds and sbb mov js dec dec mov fsubs ljmp xchg repz mov dec jle pusha sub jge or (bad) cld (bad) cld je in ja sar addr16 fwait or in cli out ret test xor pushf mov jno mov inc out xchg jl cmp push dec cld cmpsl fs jb and ret jp add cmp lret inc pop cltd mov repnz call xchg xchg mov pop fwait xlat aad ficom loopne sbb pushf sbb das cmpsl mov in test xor jo jmp call mov mov xchg and mov into outsl inc push lret sbb pop xor outsb xor and pop jno pop les jg lret pop in idivl xor divb adc addr16 xor xchg mov pop cmp test fcmove out nop pushf mov out loop pop dec sbb rorb jmp push aaa dec inc pop adc add popf pop jnp adc pushf ret inc xor lret movsb and data16 outsb cmpsl mov inc out xchg push (bad) aad fwait inc xchg pushf std loopne pop dec pop je adc cltd or movsb scas cmp xchg adc mov nop mov outsl and mov xchg scas mov and outsb lcall arpl xlat sub out test pop cmpsl mov arpl xor inc negl push lcall xchg or sbb mov jmp or xorl jnp aas loop or pop aad push js je sbb jg dec pop pop inc mov lahf or mov cmc in ss fmull xor cmp xorl ja dec cmpl dec fisubrl xchg cld sbb loopne out (bad) cli sub clc mov cs push shrb adc xchg nop movl loopne sub (bad) mov and cmp jg inc (bad) xor cmpsb sub lcall jmp ja mov icebp ds cmove sub fildll fstp mov fldt ss pop pop shrb xor sub cmc pop jp cmc mov xchg inc lcall fmuls jecxz roll xchg mov pop cli ss mov sbb (bad) pop mov pop mov das mov std mov mov lds add iret mov cmp in pop pop fidiv test or mov shlb (bad) ficoml mov mov pushf inc mov mov or and push push cmp loope push (bad) lea fbld or add fisubl cmp (bad) pusha and data16 pushl aam sub test mov and lahf adc sahf pop loope test jmp pop jae sbb xor fild or (bad) fwait imul jg sarb popa sub mov aaa rorl jg fiaddl test mov sbb leave sub loop xlat dec dec add jmp mov sub dec (bad) rorb pop sub (bad) push xor mov stc and adc (bad) in xchg movsl jne adc and push mov dec jl jg mov pop rorb (bad) mov jne jae stos mov clc lods mov call push push and gs and fbld sti cmpsl lods mov pop pop mov call insb xor pop or inc test push pop inc mov xchg mov xchg or shr (bad) cmpsl sbb addr16 xor lock xor adc adc pop adc aam mov call adc std adc pop aad xor imul and xor pop push push mov icebp jo push (bad) jp add and das lahf pusha and enter (bad) arpl (bad) xor dec jecxz pop cwtl into outsl push je xor stos push sbb cmp rcrb sbb jecxz lods and je cmc cltd mov cmp test rcrb mov leave popf cli pop or mov mov rcll xchg lcall jo scas jle test mov incl dec inc mov xlat add cmp outsb pop dec xchg in xchg and fldz or and mov mov out xchg jle test adc in add inc xor xchg dec sub inc jp inc mov xchg mov fadd rclb xchg rclb gs sub aam mov mov pop xor popf cltd ds (bad) or fist lahf push dec stos aad xor push adc sbb mov push pop mov jge jno pusha cltd inc inc mov sahf mov xlat xchg pop xor pop dec pop xchg imul pushf add inc cmpsl push xchg cmp and cmpsb pop in sbbb mov orl int3 sub nop mov xchg movsl xchg inc sbb scas call aas out repz jnp aas push fwait ja inc pusha cmpsb adc test sarb jle scas aad pop xor nop lcall push inc stos (bad) add test fcoms mov ss xchg repz movsb jnp (bad) in or push sbb mov or mov fbstp and add aad cmpsl cmp pushf inc into pop jo cmp stos std hlt dec pop jns outsl rorb mov pushf push xor xchg sub mov test pop out scas ss sbb push lds mov pushf xchg movsb (bad) sbb (bad) insb loop push xchg pop or push test ds adc cmp notb jno scas hlt jmp push adc xor jnp cltd xchg sub into pop pusha pop mov or sar (bad) std add (bad) insl pushf jg add lret pop and ficoml adc ljmp stos dec cmpsl js or fdivrs inc jp dec add lcall mov testl pop lea ret xlat sarl mov and jno mov cmp push subl jo addr16 outsl jle lret lcall rcrl dec aam clc mov cmc or les and jne inc fst pushf add outsb test add cmp andl and mov stos or or mov es sahf adc mov push into fldenv insl xor lahf dec pusha or lods or xchg (bad) push in stc test push imulb pop xchg add outsb rcrl cli and das xchg dec adc mov sbb or pop out sbb mov loop and dec jl pop pop jmp bound out in lock clc pop (bad) ss ja inc jp adc sub icebp add outsb test and or inc scas out pop mov add xchg (bad) ret scas orb xor cmp sub and cmpl ret inc (bad) mov add or xchg test dec mov jle mov scas pop dec in cli push xor cmpsl pop or out push mov mov or fxch push jmp fmuls pushl ss jo xor jnp adc adc push sub lds push mov lret leave mov (bad) xor push stos jno jnp call mov popa or mov xchg mov mov test dec inc push out scas xchg inc fldl subb (bad) sbb mov test xlat push loop mov mov bound cmp and mov repnz imul mov (bad) and dec call mov call jbe mov adc sbb xor adc xchg loopne inc sbb in cltd sub lods je pop lret ss inc repnz frstor xor test and mov mov cmpsl or push sbb lods shll mov pop jle mov or sbb lcall cmp pop sbb push out stos mov pop aas xor or (bad) xchg cmpsb (bad) push rcrb adc call sbb pop pop imul jae jns lcall popa stos stc xor mov mov or push rclb insb adc std out lock sub jle clc fcoml inc out mov js les dec lret inc fucom fldt mov push leave mov int into push and or je test mov std mov mov mov femms (bad) or sbb add test jns push into mov aam jge ljmp cmp outsb cwtl aaa mov push pushf jbe repnz (bad) std sub (bad) or testb and clc mov shrl dec addr16 xchg or and clc push test mov or mov push daa or mov (bad) ds cmp adc iret add cmpsl mov jle sbb xor cmpsb dec idivl jb dec xor cs xchg (bad) pslld imul mov stos insb mov xchg out pop jp aas fwait loope mov mov adcb incl insl add lahf inc scas xchg add jb jbe out add cmpsl jmp jecxz xchg jb adc out fimul sbb in lods pop inc lea test jp inc push (bad) int3 test idiv mov push test out repz fidivr in inc mov bound mov jne popa jnp xchg mov dec xor es pop gs addl mov sub mov ja xor loopne or nop testb and div leave adc and ret sub or lds (bad) mov pop mov scas mov aaa adc adc popa (bad) sub repz shrl mov pop pop mov push cmpb push sub ja jle mov ljmp adc dec stc jnp fadds (bad) js aad movsl sub mov ljmp imul pop inc test cmp lahf cmp mov movsb sahf (bad) lahf call int jae add adc jb add push push push scas xlat hlt mov jecxz push push xchg pop xchg mov xor or sub fdiv aad ljmp fmull push in xor push adc sub xchg cmp xchg pop das fsts cli fidiv pushf in and dec push popa pusha sub test mov jg mov fcomp sti les sub daa or or mov push shrb xor rolb sub jb jne xor xchg mov lcall mov negb and jmp mov xchg xlat push int3 lahf xchg and dec lea int3 push adc sbb and push mov pop mov push dec loope mov add enter (bad) xchg jl sub push mov xchg xorl add lds lods int or xor call fs es data16 arpl popf push movsl in jb les std cwtl cmp cld pushl push add subl andl mov shrl add xlat push dec cmp or ret pop add xchg call jmp jb push aaa enter aaa adcb fistpl addl jb mov mov rcrb mov jae push loop mov xchg sbb nop (bad) mov cmp (bad) int ja fisubrl je push push stos adc dec ss daa add jns shrd and or hlt sub or xchg pop ss aas sbb fs out pop mov push push mov pusha cld ds ss cli sbb (bad) testl insb pushf fadds mov inc jg and dec mov dec sub xor adc neg cwtl xlat mov cld and aaa lea (bad) cli mov xor mov leave push outsb not enter imul pop insb xor mov cmp sub (bad) clc pop mov nop sbb lahf dec (bad) into mov scas popa out das push mov out iret sbb dec insl pushf lcall jecxz subb fistl cmp ds shlb fldenv inc mov add rol es mov mov mov sbb pop mov outsl stos scas pop mov stc xor sbb (bad) imul xor cmp xor pusha adc jmp fidivr mov lcall sub rcrb fidivr push inc rcrl xor mov inc xchg xchg jnp lahf popf icebp insl pop mov dec nop cld jno ret and rcr xchg (bad) cmp dec fwait sub call cltd xor adc (bad) adc push in (bad) xchg cmc (bad) in pop fistl clc fdivrl aas dec mov lcall insl inc cmp roll sub sahf xor call mov push ret cmp mov (bad) push leave es sub push add aam scas test aaa sti loop es pusha and dec jno push and pusha sub mov cs push push insl lods mov push sbb mov sbb mov in mov ret gs xor push mov roll xor mov add xlat sbb andb or or pushl jecxz pop cmpl sbb cmp cmp mov and (bad) xlat mov cltd scas xchg faddl aad push xchg inc xlat sub jl pop mov mov ss and mov fisub add add mov in in push sbb xor repz popf scas sahf xchg iret popa xor adc inc ret pop sub stos sti test xchg mov dec add rclb enter xchg jge sbb clc mov jnp xor daa add pop mov and adc data16 stos stos div in mov cmp rolb mov loope es inc push push ret in jge dec jg push mov cmpsb mov mov addr16 sub mov mov loop or mov (bad) mov loopne (bad) xchg out sub fimul cltd stc sub pusha mov in mov cmp jbe sbb les adc or leave and cmc ficoml cmp xchg xor inc xchg mov and es cltd js mov scas jnp jl or stos mov xchg sbb mov mov fsubrl es fsubrs scas mov std xchg xlat xchg xor pop cmp hlt cltd or or data16 pop test ljmp dec jp xor popa nop add imul sahf mov jae faddl addr16 mov mov stos aam pusha (bad) fistp mov pop mov mov or push adc lret xor sub xor (bad) or fimul jns sub daa pop pop mov cs pop out outsb mov inc pop ret jecxz iret iret lods insb sub adc fistp xchg mov stc sub jl xor or jno mov sbb aad add insb bound rcrl or add mov cmp inc or dec aas lea sbbl fdivs out scas mov inc popf and adc pop test add arpl xchg stos hlt imul cmp mov xchg pop lcall in andl popa imul adc out cmp and inc lds lahf xchg ds sub xchg jge,pn hlt and notb ds inc sbb (bad) ljmp xor enter jmp loop xor mov xchg or jnp cli mov push lea mov dec or push loope jge insl imul xor repnz sub pop cs jne lret js aam pop pop les rol insl add push sbbl mov shlb xchg mov push pop sahf popa sti push mov or mov and pop pop mov bound add and dec xchg lds cmpsb mov or ds cmpb repnz insl cs gs nop ror mov or sub clc ja jle pushf fnstenv dec or mov adc cmp inc add inc inc fwait sub nop stos push or xchg or push outsl inc mov aad dec frstor push (bad) icebp cld lahf into sti cmp dec aas xchg mov dec in sbb mov xor add mov pop inc dec cmp mov movsb dec add out jle mov stc mov inc mov int3 mov cmc jns rolb cmc xor (bad) jle xor fcom popa sub mov push mov jmp icebp mov jae pop outsl (bad) (bad) je mov add xchg jbe (bad) push cli push jo mov push pop (bad) xchg jmp pop test ja repz cmp and sbb in pop push stc repz fwait cld (bad) push and mov inc sbb sbbb sti mov cmpsl fwait sbb jp in mov repnz or mov nop pushf push int3 cmp lret dec jnp jbe mov mov pop daa push stos xchg push in movsl inc inc mov mov xor lahf push roll xchg in mov mov sbb push lea popf push stos and fbld stos imul out cs cmp daa sbb es pusha sbb test out loopne sahf cmp push or fcomps sbb aam jne loope test adc sahf cmp mov pop lock lods loop or mov dec or popa jmp mov adc dec bound repnz dec pop in faddp xor jno in in je in mov jmp mov xchg data16 jo popf xor mov or ja inc mov gs repnz jp xor jae bound push mov lahf sti jmp or imul mov std push xchg sbb add fs dec cwtl fnstenv enter pop cs xchg ja xchg add xor jp jle mov add add mov fisub and outsl cmp sub push pop inc lods jge jle addr16 and push fs mov test out push aaa xor lahf mov cwtl shr fmuls sub xor mov jle loope nop and pop fs sub imul mov cwtl aaa outsb push (bad) mov dec xchg dec xchg mov stc cs mov outsb mov pop mov (bad) dec sahf jb cltd (bad) xlat dec add scas lcall jbe enter push es push inc and call les cld outsl arpl fst ja push and adcl push (bad) sti test mov js push jns popf and mov (bad) (bad) (bad) out or stos push dec fidivl add sbb js and adc int3 repz xchg mov adc aam dec add mov cli dec xor dec scas sbb inc insb cmpsl lods jmp outsb or es fldcw or roll sub cltd xchg push mov je test push jns adc pop popf in in adc xchg call mov (bad) cmp push cs hlt out mov bound sbb mov stos sub xchg (bad) mov add push movsl dec or fwait shll ja xor fistl lret in mov test sub scas mov (bad) inc cmp mov xlat add in mov imul push insb xorl popf push pop jle jmp popf stc fsubr and fbstp call cmp (bad) nop ds fs push ja das insl cmp mov shl es adc repz hlt lret push out dec push inc ja out pop mov lret test adc lret sub push adc jnp dec xor lods push sbb sub (bad) pop test out adc push adc jl add lods imul mov (bad) test mov xchg sbbl repz pop and and ds stos jmp scas out dec int je mov xor call and dec lods adc mov sbb mov mov ds push arpl adc in popa repnz js imul dec dec dec call fisttpll mov sub fidivr inc mov jae mov mov push inc adc pop add inc push lcall xchg nop pop cmp mov sub add xor mov aaa cli mov xor daa (bad) jno bnd inc ljmp dec ljmp test fsts xor mov sub cli aam cmpsb in push or mov outsb cmp mov mov cwtl sbb lods js sub out and outsl bound push pop jecxz cs iret mov add les push sub lods imul push mov sbb sti cmpsb inc pop adcb or push inc arpl loop sub sub fldt mov or jbe xchg fildl or adc xchg popa bound scas daa shl in cmp xchg sti add cs sbb ja push mov pushf pop mov cmpsb adcl xchg nop pop sub sti cmpsl insl inc mov (bad) mov insb add pop add stos jg imul mov fisttp dec mov xchg jnp out mov hlt sbb lods rcrb test mov shll test or imul inc imul and pop andl jae mov push inc adc cli in or sub cmpl sub push or (bad) add mov dec sub stos test xor inc inc mov int test or dec adc adc cmp ret stc dec push stos rcll fsubrl clc (bad) into stc fisttpll dec mov in lods arpl sub outsb inc mov aaa adc bound fsubrp pop repz mov xchg imul dec arpl fwait loop sub push fcompl ljmp cltd pushf cld movsl xchg xor out rorb aaa inc push jne cmp xor mov or sbb dec loope (bad) ja rol mov jp stos in mov cmc lea mov fmul push mov shlb movsl mov cwtl xor jl push xor (bad) jle cltd out dec nop dec ds lods fimull jnp adc xchg lea setle pop jo fimul dec sbb push aad push fldt jo into jbe sbb gs adcb inc inc hlt enter stos cmp daa iret pop push sarl loop jns mov ficoml (bad) fmuls add mov add adc imul or cli mov inc outsl cmp push das loop leave inc jo dec fs fistpl jo subl negb icebp xor loopne xor push (bad) adc lock jecxz andl pop mov ret pushf test add jecxz popf adc repz fild jecxz imul outsb shrl cmp (bad) inc mov or cmp jecxz leave scas mov sbb xor sub das xchg mov lea pop lock arpl lods inc inc adc push (bad) out jge int3 inc pop dec lahf dec and test mov add sbb mov sub and pop sub push push mov pushf jnp mov jns dec lea dec jne and cmp xchg adc pop inc fstp (bad) cmp dec jg ret cmpsl cmp jbe xlat xchg xchg mov loop std lea mov mov mov sbb bnd jo dec pusha jo jae dec push insb popa pop xchg cmp pop sbb in hlt insb cltd push rcrb sbb enter xchg xor sarb pop sbb sbb dec bound xchg ret ret sbb dec movsl mov cmp outsl repz aam mov subl jns xorl (bad) divb fstpl stc jne in mov addl push std out and aaa push in add orl outsl push xor (bad) faddl cmp and dec fs sub daa push je test sub sbb push fstl arpl sub in sbb mov cltd test repz out popf xchg clc sahf push sub cmp adc leave stos rol fldl or pushf mov push ror loop lods stos or add xor sub add jmp xor hlt stos scas xchg xchg addr16 pop pop or pop cli pop int dec cltd mov mov adc insl sbb aam ret stos (bad) pop sbb sbb jmp cld mov stc ljmp js leave sub imulb xchg inc rcrl fs adc inc (bad) jo imul rol jno jl insb push jl data16 loopne inc aam clc out sub sbb (bad) xchg repz std jb and rcr test gs jns ljmp data16 mov adc aam sbb adc shrb out xor ss inc mov mov mov stos gs out negb mov lret aam ret inc fwait jo mov jb adc push movsb add aaa mov sub test cmpsl sbb out mov jmp xor pop cmp xor out lret mov mov lds sub pop scas (bad) xor out add loop push or pop xor imul movsl movsb push cmp jmp repz inc pop xchg jno es lods mov adc jne jecxz (bad) mov les inc and pop test fptan loop cltd shrb (bad) adc pop xchg les loopne push enter cli inc fdiv sub and aas jmp add divl xor jno or les icebp or xchg jmp ret popf lock arpl out ret outsb movsb sub nop mov pop cmp push cmp jp inc addr16 clc es out dec ja xchg out sbb loop inc movsl sub fildl pop test mov ljmp sbbl (bad) into sti inc or in mov mov push addr16 add mov call xlat xor movsl (bad) into sar cli cmpl insb add out out xor imul push stos xchg xor lods mov scas lock push cwtl (bad) jae orl push outsl cmpsb sub cld cmc std les jecxz orl pushf inc enter sub mov jnp mov mov adc adc lea or inc mov sbb mov insb ds int3 outsb push cmp popf inc mov ss adc fs cmp fsubp cmpsb mov repnz sub in jmp sbb mov add mov xchg in dec mov pop ret sub pmullw xor fiadd mov int3 shl dec shlb (bad) testb jno bound adc es lock pop les pop (bad) pop out push or inc in xchg sub daa push push int mov stc pop popa sti inc add mov adc fnsave ja aad jle lods or (bad) repz xchg mov popf cmp adc push xor imul popa shr jp,pn xchg out jnp fcmovu arpl adc iret xchg mov push dec push hlt dec cmc sbb rcll movsl add mov sub repnz (bad) mov cltd xchg cmp mov jecxz add loopne loopne mov jg adc stos or je mov cwtl scas xchg lret cs mov (bad) xchg pop xchg int push jne jnp push mov mov je aam nop push rcrl sbb dec (bad) daa pop call xchg xlat cmp jne iret outsb lret cmpsl xor negb movsl mov jnp inc mov outsb insb mov sbb inc or je mov mov rol fisubrl push and jo xchg sbb movsb mov ret cmp add stos test imul mov inc sti cmp dec std mov test or loop adc (bad) mov test cmp mov daa in (bad) lret int3 cli int3 fldenv adc test cltd popf cmpsb and fiaddl outsb test stc daa sub adc pop xchg subl nop pop push xor jmp mov mov mov (bad) cmp xor ret mov ret rcrb jnp (bad) adc push arpl xor jno pop dec packsswb push sbbl xor arpl rcll ret pop mov out jno out jns sbb cmpsb and (bad) loopne add mov movsl sub in lods hlt stos add mov cmp and xor rcl mov fidiv jg or pop adc xor inc sbb dec jno sti insl mov frstor fiaddl sbb mov xchg clc sar or mov mov xor pushf stos cs pop lock js mov cmp dec pushf test in sti sbb jne sub inc not push mov push lcall cmp dec je (bad) mov testb pop lods lds int int3 pop mov mov call push cs xor mov or fcoml dec loopne in cmc icebp adc nop add imul mov out (bad) aaa push test cmp lea adc lods arpl loope daa dec loop sbb adc adc inc xor jge (bad) stos les push jle xchg jo rorl push addl sbb loope repnz mov mov hlt mov test loopne jno movsb xorl stos js and inc or sub adc xor push lods ds test dec jae lods dec mov sbb cmp and repnz inc mov aad aam pop pop inc jge push test lret add adc xor xor call xor and xor push ret pop jb add mov push dec sub andb push jmp jae int3 jle pop inc ficompl mov mov sub or and mov pop (bad) cmc jno je inc push adc movsl pop in cmp in inc outsb aaa arpl mov cmp mov ljmp or pop adc cs icebp and and jl test push out pop jno hlt test out js mov or pop inc jno and pop push iret jne shrb sub ret mov jg pop es (bad) mov out (bad) repnz or out (bad) movb push int3 fcmovu lahf sbb in scas push xchg mov or xor xchg dec jmp ret push cmp (bad) mov clc (bad) inc xor xor and in mov push dec mov pop cs mov jb jle out push cltd mov (bad) inc fwait ja lcall push inc add xchg push jl jge mov cmp stos fistp cmp (bad) fdivr xor add xor mov arpl inc inc aad in and and sub ret mov rclb xchg in pop fiaddl jnp xchg cmp cmp mov movsl mov cs sarb push or jns sub sub ja pop test dec repnz jae push inc pop xchg xchg and (bad) inc sbb test rep or add cmpsl lret sahf out push dec mov dec imul inc in and or dec cltd lds xor sbb pushl pushf scas dec mull daa add (bad) mov test scas lahf inc and pop jno cmpsl mov dec and xor test add cltd sahf ds sub adc (bad) sub push push push mov subb pop lcall add xor stos push (bad) xchg adc dec clc mov sub adc loopne and cmp inc sbb mov dec inc notl stos push mov sbb cmp add fisubrl adc push pop mov inc inc xchg outsb dec dec ret je loop inc and add mov andl adc ljmp and adc inc push cs dec into sbb sub and dec (bad) and cmc jl jb (bad) mov pop idiv pushf mov cmp mov pop pop inc sub mov pop lods in lcall cli sbb (bad) mov inc adcb mov mov cmovo and test add into aaa lods mov pop mov sti pop push in shl jnp sbb adc ds or xlat or adc mov test ss pop xor xor adc inc int3 inc ret pop add sub xor sbb xchg mov lcall jge mov cmp bound in scas ljmp lret sbb xchg pop jb sbbb mov js scas loop test or push xchg xchg xorb ret adc dec or cmp cmp movl in jbe mov fcomp arpl push inc movsl test adc add (bad) xchg dec push call mov aaa int3 push xchg mov sub cmpsl cmp (bad) jo sub hlt repnz cmp xlat fistpll sbb jl pop mov cmp and jb dec xor xchg je adc (bad) sub fimul adc imull test ret inc push dec mov add push leave mov test movsl push sub nop shrb mov in lods iret adcl mov dec dec loop lods jne clc lock dec call xchg mov fnsave mov mov cld dec add movsb mov xchg xchg dec and repz lods gs xor in lahf or mov sbb stc addr16 enter cmp and addl pop adc (bad) xor scas sbb fisubl jns imul push rcrl mov jg ffree sbb clc loop xchg sub call inc xchg push mov add mov lods stos loopne sbb lret adc mov insl and or aam test (bad) out xchg sub mov and fsubs push xchg jle xchg addr16 adc xor loopne push lret pop rcll xchg sub in mov jae aas popa js imul add les sub movsb cmp sbbl std js mov ja jae pop adc (bad) mov add sub sub xrelease js cli push out ljmp xchg dec enter and lea fs push xchg sbbb jb mov std or jge imul imul xchg (bad) cmpl jp inc outsb cmc jle insb aam aad not jge mov jle inc or mov sub dec gs arpl mov sti movsl (bad) cmp sahf cmp lahf outsl lret lds sbbb push sbb movsl xor mov mov movsb mov sbb cli lock push mov and jg (bad) xor in mov jb fistl sbb popf mov out sub negb mov mov dec fidivl jno mov movsb stc push push aas fdivrs jne cmp es (bad) vxorpd sbb cmp xchg cwtl jnp push xor dec jmp lret and and xor xor (bad) pusha mov ss or push sarb js cmp adc jp push sub out adc nop push push pop rolb sbb fcoml sub mov bound fsubp pop aam xor adc pop clc pop xchg out dec les insl loop mov mov jbe mov in sbb and movsb push pop jl sub sbb pop pop stc sub xchg out hlt mov pop adc ljmp xor into loopne xchg fs inc mov movsl ljmp mov xor push dec dec add in mov cli jmp sbb mov (bad) sub push sti shrb sub loopne add sub aaa sbb out test lods jge cld in and mov negb notl xchg sub (bad) hlt dec jo iret cwtl or inc and aad sub addr16 mov mov pop loope pop inc pop push gs cmp outsl cmp push pop inc iret neg cltd cwtl jmp mov (bad) insb je ja jl lods add and (bad) push mov cwtl and mov test div fistpll es jg dec push add mov cs push inc adc or sbb stos inc nop xor (bad) movsl call push mov jnp add pop xor (bad) xor push add inc push shrb gs cmp cmpsb mov cmp mov icebp pop mov cmc out cs mov inc push cmp icebp ja jmp jle je (bad) lret data16 test dec dec leave mov mov lret push mov gs (bad) lock loope arpl mov ficoml mov inc pop rorb (bad) repnz pop or or jno mov pop jmp clc negb imul cmpsl mov cmp lds inc jg mov push jge sbb jge push jl and push iret push in popf push sbb add pop cwtl xchg mov fdivrs jp and pop popf test sub outsl mov cmp xchg sub iret sbb adc cmp xchg dec or mov mov and or add sbb sti dec jge cmp jb rolb (bad) sub lods int xchg das enter lods adc mov rcrb add (bad) das push sbb in movsb xchg adc inc mov jns push outsl mov cmc xchg lret jae mov mov addl out mov mov icebp ficomp pop dec mov insl or jo popf push push sbb inc push scas fnstcw adc mov scas mov leave pop sub pop (bad) or lods jae or (bad) outsb add lcall sub cs stos xchg xchg or pop cmp mov jb sub mov inc and repnz mov arpl dec and lret inc pushf sbb push jecxz mov icebp add out or xchg pop lods push xor int3 test push lods lcall add pusha xor (bad) insb cld (bad) or push xor out mov out xor xchg dec cmp jo dec and mov mulb jb and push test xchg scas pop jns pop std not adc pop sbb repnz repz aad or mov mov jne adc pop (bad) xor add sbb scas divl int test out mov (bad) repnz (bad) and cmp jno fsubs rclb sti jno adc scas jnp inc push dec push inc mov push push bndldx hlt jge sub xchg cmp mov mov push pop mull fs add (bad) inc lods stos stos imul pusha mov and pop mov roll sarl pxor stos clc dec or sbb sub xor add pop push xchg xor pop ret mov mov fsub lods cmp push push sbb cmp or ror sub push sti mov movsb aad push jns xor rcrl mulb mov xchg mov ljmp mov (bad) push (bad) les movsl std les sbb arpl outsl scas push mov pop mov (bad) aaa sub daa dec and add mov push ficompl mov pop inc push in mov ret stos nop push and cmp lret mov and ficompl jns add mov (bad) mov out test hlt (bad) mov shrl pop push jae in adc les jmp fstpl push jb xlat mov jb dec mov cmpsl fcmovb lods test enter fcmove addr16 out sbb jp mov fcomi loope loop add mov das add inc sbb outsb adc je mov push out (bad) (bad) les or addb dec sbb push xchg inc in (bad) xchg fwait js insb xchg rolb sahf xor dec ret es mov mov outsb pop arpl xlat pop negl in loope je jl sub icebp jb incl (bad) dec jle push mov lock xchg aam xor mov lods cmp es jmp xor sbb les mov inc adc pop ja stos mov icebp inc imul in lcall stc adc dec push repz fsubrs push xchg or pushf push (bad) repnz mov xchg mov sbb lret sbb cmp jno ds push and inc jp adc mov adc pop andl inc sti loopne adc cwtl push les or cmp or leave and or fmull lret call loope mov test das mov stc cmp (bad) negl xor pop test dec cli mov nop aam xor mov shl cltd loopne movsb sub pop add rcll enter int3 imul and test jbe push movsl xchg xchg jo inc pop mov mov mov cli push mov leave push arpl jmp sub add (bad) push in divl mov ljmp cld add push aas ficom sbb adc ret int ficoml inc lods pushf ror cmp out cmp out sbb idiv cmp icebp push daa fidivl and cmp call xchg cs mov mov bound out rorb fidivr sub push stc stc aad mov loope mov xchg lcall fs sbb jle into push mov adc pop mov mov xchg je adc push (bad) jle nop push xchg pop mov mov push arpl scas es and jbe ljmp push cltd jge repz cld adc mov pusha push inc test loopne jge fucomip mov lret jge sub inc shlb xchg ret xchg push lahf xor fimull ss xchg xor sub mov push pop mov mov div and push cmc lods mov dec push (bad) js xchg (bad) in rclb inc popf dec cmpl xchg aaa xor (bad) push inc lcall imul clc inc sub inc push pushf test bound out push mov xor decb out inc mov xor in lret lea aam mov xor aas push xor popf aam (bad) dec fsubrl icebp imul push pushf (bad) mov fimul xchg call testl ss mov fldcw pop xchg jo adc std xchg fld (bad) ja lods loopne sbb sub mov popa sub sub pop and test arpl dec inc fadds dec sub sbbb adc xchg cmpsl fstpl lret imul ljmpw mov dec lcall hlt xor loopne pop mov pop xor test xor jmp push push dec mov xor mov mov mov push push sbb (bad) call les cld mov scas mov mov mov ficoml push dec fwait imul lret jl jb cmpsb xor mov xor test cmp adc jp fwait mov pop cmp enter add sub aas fsubrs (bad) mov inc add jns cmp cld xor pop (bad) cld loop fstps cmpb dec das bound or mov roll enter bound mov scas pop push or lcall push xor fldt cli loopne jmp cmp jg test fadds dec popf (bad) cmp sahf pop jbe cli stc sbb icebp mov mov mov andl sub mov out rcrb cmp test pop shlb pop out jg loope mov xlat (bad) dec into xchg add cmp and cltd fsub in mov fmull pop int3 popa and lods leave test in stc cmpsl or int3 test (bad) ds add dec imul lret in jns sahf pop jbe hlt negl mov outsb in repz pop movsb scas or adc arpl mov xchg into (bad) js data16 cmp pop inc outsb sbb or push mov ja lds movsl sub adc adc enter push cli imul sbb outsb mulb add fisttp mov fwait dec call mov inc imul push mov int3 fcompl dec in sbb adcl imul sahf adc inc cmpsb and cmp scas sbb icebp ljmp stos (bad) mov or xchg adc ss sbb xchg mov fldenv push pushl cmp jbe stc push mov mov mov xchg and (bad) mov sti cld scas mov and test inc das inc xchg push imull pop call push rorl inc mov faddp or outsl add ret lods mov (bad) cmpsl mov data16 fnstcw add add xchg into xor push subb stos int cmp jns enter add mov jp imul aad rorl mov push lret pop and scas xor adc jg aaa and xchg addb fidivr lahf ljmp stc inc jb mov aas xchg lods lods jnp subl pusha inc repnz pop xor in and pop fwait arpl (bad) mov sbb sub negb out xor inc sub xor popf addr16 cmpsl data16 jae insb stos sahf push mov pusha xor aas sub sub or arpl lahf xor aad cld mov sbb xor pop test sbb pop push (bad) cmp pop mov cs dec pop sbb adc loop xchg enter push push (bad) jo add out push mov jnp fmull xor popf repnz cmpl jp jg mov pop roll dec stos inc cwtl and or add aaa in sti aam mov fdivrl in add sub adc jmp insb in xchg cmp bound int3 test adc push mov and ja je inc push lahf fldenv and idivl and cmp xorl hlt out scas mov sub xchg dec imul inc dec aam sub mov in and arpl and mov cmpsl imul leave sub sar xchg push mov xor sbb mov sub sar outsb sbb aaa icebp jnp cmp inc fmuls inc rcl bound mov push out aaa adc and mov pushw and dec inc ja repz or test int3 mov xchg (bad) xchg out insl aas gs cld mov xchg fildll jnp pop fisubl lock fwait mov in mov enter jo outsb nop pop cwtl bound xor jne or or cmpsl arpl sbb push dec or mov enter pop pop push (bad) xor push mov dec je lcall test dec xor add std pushf jo repnz int3 cmp fcompl out push cltd lcall push inc push adc loop push pop jae push (bad) xchg sbb xchg cmp mov outsb ret jp xchg inc (bad) decl push sub (bad) xor cmp cwtl and sbbl fisubl xlat push sbb xchg jecxz or mov mov lds and je out stc cmp and and xchg pop sub sbbl sub test mov cmp das fdivrp es sbb pusha xor loopne (bad) fsubrp flds and sub pushf arpl insb mov aam inc out imul test enter push outsl or cmpsb repnz aaa sbb push sbb jbe push cmp cmpsl or add xchg (bad) mov aaa inc and push or adc sti out mov popa ss lret and adcl (bad) xchg xchg popa mov adc add mov out pusha cwtl cwtl jne cwtl pop push imul ss xchg imul xchg xchg inc mov sahf cltd dec mov push mov sub loopne daa add addr16 xchg mov adc (bad) and inc sbb xor push nop cld jp mov sub mov add inc pop (bad) notb inc aaa int3 adc dec fsubr jbe popa repz cmp test xor imul jg shl or rorb cmpsb mov mov (bad) jnp mov movsl shrb cmp pop adc das out pop mov (bad) (bad) sub scas int3 clc ja pusha jne fistpl rorb cld sub decb sbb cltd rolb divl xchg inc rcr push jl add pop sti ss aaa add fbld lock or (bad) pop pop push ret outsb push bound jbe or (bad) mov fwait push pop xchg idiv push mov mov daa fs popa push jmp es insb push cmp push ficom xor xchg and jae in lret scas loopne lock pop rcll test mov xchg cmc enter lret xorb test xchg out xchg push pusha xlat add fnstsw fsubrl jge rcl mov pop mov pop sbb jo jae jg imul or idivb das rcrb jb inc jg outsb add bound insl lea test into pop xchg mov fucomip and mov or xchg sub add fs cmpsl aaa enter sbb out daa out (bad) data16 into ss dec jecxz out (bad) mov shrb xchg adc xlat xchg (bad) (bad) icebp not sbb loope and ja imul in jae (bad) lcall shl cmc xchg add int3 mov xor hlt push bound push pushf adcl add sbb mov adc ret xor and das and xor sbb rcrl enter aam add pop or cmp mov mov std adc push sub fild loope dec cli cmp and (bad) jg cmpsb xorl stc jne add mov adc nop dec xorl ja mov xchg dec (bad) mov cld xchg ljmp pop (bad) ss (bad) push fidivrl mov shll or rcrb (bad) int cmp or cltd test cltd push cmp lret add jne insw pop sub jl xor lds adc fadds cmp jmp inc add fildll lea stos pop push das mov les mov push inc sub mov pop add ret (bad) dec xor add mov sti push pop daa dec mov and sti leave (bad) int3 cmc jmp push es cmp or mov adc ljmp fidiv icebp pop sub test dec outsb test test imul lock pop aad jg dec jp lret (bad) fsubrl out jno iret push cmp arpl ret fimul pop xlat dec pop fwait inc ja mov xchg mov mov dec aaa int3 add repnz jo ss push movsb mov cs movb sub cmp sbb mov jne sub pop repz (bad) adc jbe in xor add mov lods out push faddl bound test adc test xor test leave lods loopne inc int ret insb push pop xchg sub imul mov inc cli inc cmpsl inc out and ds std mov cmp addr16 pop imul ja sarb shrl inc arpl sub push insl movsb mov jp ret dec push adc cmp das aaa mov xchg cmc jl push enter mov inc repz sbb arpl sbb or int3 popa iret (bad) into test or jmp sbb push int3 mov xchg shrb lahf lcall add push outsb mov adc lds out in dec lods cmp add cmp (bad) dec iret rcrb and pushf imul iret mov sub call dec shl imul cmpsb lret and sbb inc outsb dec dec pop cld dec pushf mov movsb push jnp mov and push or mov cltd sar and and lret and test stos or into (bad) loopne jmp ret xchg xchg imul dec xchg jnp pop cs or push fstp adc outsl adc jae sub test ds orb (bad) xor pop mov out outsl test int3 push adc xchg push arpl fwait or mov fist push mov inc int3 jb cmc jb adc lea (bad) mov inc inc pushf ja xchg out das out lahf sahf scas pop push lahf lahf cs repz js js maxps and mov or add pop ljmp add imul notl or js pusha jl ficoml pop (bad) push insl insl nop lret jl outsl (bad) fdivrl lahf adc mov mov mov inc xor xchg cld dec aas mov lret test or push arpl data16 mov dec sbb xor add mov pop mov (bad) clc dec xchg out xchg mov je cmp jmp les sub and ss lods cmp pop mov data16 aas jno sub xchg (bad) lret fiadd push mov push push xchg test enter (bad) and xor daa loopne ret mov dec push jae sub inc push stc ljmp fwait lock cs movsb jne jne pop js cmp das fsubl add movb aad mov mov iret addr16 mov into addr16 (bad) cmp dec movb mov mov popf dec bound int3 or dec loopne pop enter jmp popf xor out repz test fimull daa xlat xchg inc mov mov bswap out es shlb and mov add push outsb lds inc call mov adc fistl xchg mov push in addr16 mov pop dec stc lds sub sub xchg outsb fistp and lret jo dec (bad) and andl pop ds rcr cmp lcall mov add js add imul mov ficomp (bad) jmp negb push cmpsl dec jmp add sti test fisttpll inc adc cmp xor (bad) icebp les pop push inc cmp bound dec mov dec pop jnp ljmp mov pop or sbb in mov movsb out cld push loopne lret mov pop sbb pop movsl insl cmc inc xchg lret push mov fidivr sub aad push ds imulb mov cmpsl gs sbb data16 (bad) mov leave movsl cmp popaw aam ss ss aad cmp insl aaa dec out xor dec insl mov andl arpl lcall pop or dec aad in in scas or mov sub test je leave cmp sti mov dec jo adc sbb fbstp xchg dec xor inc push xchg or in icebp loopne sbb repz sbb inc (bad) fist shr je push or jp jl nop cli jecxz inc das sbb aam or xorl test jl xchg mov insl arpl in fnsave xor dec jp push into stos aam (bad) in (bad) int and add ficompl imul mov pop adc ljmp inc xchg arpl in test shr fwait mov cmp cmp ja mov sbb cmp and icebp or pop into lods fsubrp xor jg push mov sbb jle add (bad) jne lea test mov (bad) aaa in xchg jle jmp push popf cmc negb test sub inc loopne lcall dec cs mov sbb mov or mov pop xchg fcoms pop cmpsb xlat adc bound les push imul adc test pushf jle imul push aaa add shlb lcall icebp fs pslld adc pop adc leave jecxz stos adc pop and pushl insb dec cmp inc add insl fild in sbb or jae mov add (bad) outsl push or (bad) lcall or out mov fstpt push imul mov lods mov ficompl mov std loopne fstps push sbb fisubl adcl sbb faddl push loope fsubrs cmp frstor out cmp sbb push cli ja rcll xchg jmp mov xor xchg mov mull sub or cmpsl mov test lcall (bad) cmp insl sub mov xchg (bad) sbb dec sti negb mov adc pushf xchg (bad) inc clc dec push loopne adc insb adc sub adc dec imul jo outsl add sub lahf (bad) xchg cmpl pop sub inc or inc add pop cmp cmc enter lahf jp xchg xchg sbb fidivl push cmp mov testb mov jle or add mov xor in loop pop mov add nop test pop in jno jns lret add jne (bad) lea dec or and or ja add lahf push lcall psubsw jmp mov push cltd fisubrl sbb adc repnz xor daa inc inc xchg dec push xchg push cmp mov mov cmp mov jns ret or jae out loop or pop in call mov repnz lahf xchg or gs jbe lcall or mov inc and pusha xor or cmp notb add push popf arpl (bad) dec and pop dec int3 xor and inc sbb in shll cmp push sbb dec inc lds mov leave cmp cmp xor cmp pop mov aas lahf hlt mov movsb dec pop mov mov iret sbb pusha jns push xor cmpsl xchg mov xchg push mov in lret push adc jbe push xlat push sti inc pop cs cmc and jbe ljmp pusha mov mov mov dec mov and mov push add adc jbe xchg cmp pop jo cmc loopne ja fsubs aaa test push pop xchg mov jge hlt shrl lret add in es or das dec ljmp adc inc adc jns pop mov mov insl test lea mov popa or scas je call lods int daa les add ja movsb enter pop cmp jns push imull sahf scas xor sub ffreep outsl int3 sub pop dec arpl cmp gs int loopne iret add lea ret mov bound in out ss push lock xchg (bad) push call inc or cmpsl scas mov mov daa sbb shrb ja je dec (bad) hlt xor clc and lcall jno lcall fdivl mov inc movsb inc cmpsl inc lods fdivrp inc pushw aam jne xor adc xor (bad) sbb insb xlat cmp aas or xor lods push test sarb int3 sbb xchg sub fdivrs add sbb jge pop int adcl les pop and sub push xchg push or lds dec xlat mov sbb cld in add cmc enter and xchg fimull cltd cld (bad) or and mov js mov push xor mov mov jmp stos add lahf bound (bad) aaa rorl (bad) negb aas dec adc fidivrl ret jae xchg lods mov mov ss arpl xchg (bad) sub inc and sti lods mov fsubrl pop push mov mov aaa add push imul mov add push cli mov mov mov jbe mov push inc (bad) sub mov int push pop mov pop ds pop inc les ds sbb dec push mov mov or lahf int3 and xor shl add fsubp xor xchg fnstsw lret mov ret icebp jbe movsb mov xor pop pop sbb cmp sbb cmp adc xchg push fs push mov divl scas pop jo outsb adc and loope sar rol dec jns or shlb stos push and aaa out aas jp sub and xrelease (bad) les mov mov out cltd or andl adc ret imulb inc pop push xchg dec data16 xor sbb inc hlt bound out jle add lcall aaa push pop xchg jne cltd pushf add mov lock push imul pop add leave cli loopne push sbb mov cmp jno cmpsb xorl (bad) lea dec jmp pop cld les cs adc hlt aam sahf push mov daa mov outsl pop lods lret dec mov xor shrb jmp inc pop mov push addr16 repz push outsb pop pop std gs sbb (bad) out inc push sbb sbbb or xor mov inc add test or leave xchg pop aad (bad) jne ret sbb lret loop fwait lahf (bad) icebp and pop (bad) mulb fsubs in gs xchg pop sbb add dec (bad) inc pop enter std sub jl movsb inc jge sub ficomp sarb or cmp fadd jbe sbb cmp das icebp xor jle rclb popa jno aad inc sbb xor and shl aas sbb (bad) stc (bad) pop xor or inc jnp cwtl test mov xchg hlt sub xor jmp (bad) repz outsb jge mov rcr mov sarl out sbb dec iret cld enter sar mov fildll push int int3 mov cld std js cmp ja jp lea jl add clc lods mov pop nop sbb mov mov les cmp push inc mov push push gs mov les mov cmc inc jnp fs scas inc js aam mov add std sub and in pop ret cltd daa or pop insl loop mov cwtl mov pop mov out sbb test sbb inc outsl xor mov fst inc out mov out add mov push out fsubs aas mov hlt out cmp sbbb test ret loop sbb insb adc loopne and jge xchg fnsave jnp movsl xor aas or test mov dec mov ret mov pop repz hlt inc mov lahf int3 xor dec push in pop loopne or stos jge jp push sbb (bad) or ret aam addr16 sub leave in push fs sbb adc lret mov jne mov rolb (bad) into push setno fistpl mov inc adc js aad rcrb in (bad) mov inc stos push mov cmp mov scas test jl sub fildl sub xor ret inc cmc movsl inc jb lods sahf mov xchg scas loop mov ror mov ret in ja add xchg nop (bad) jp cmp int3 add inc popa xor cld mov jns in lods lahf ja inc adcb (bad) mov pop push mov push inc test cmpsb jmp dec or scas pop ret insb sahf xor add inc daa push adc and adc clc clc push ljmp bound mov mov jge pop adc dec stos push or sbb popa or lds outsb nop sarl popa scas cmc roll and jg xchg push push and addr16 xchg adc icebp jl lahf xor jmp mov popa pop xchg cmp mov cmpsl fisub pop loope or mov xchg jge jb and xchg flds dec push lock addr16 fildl les xlat jmp js xor push rclb (bad) push lea dec adc jp jge ret das out je mov int3 jge pop aam jo ret mov sub lret aad mov xchg cmp scas inc dec inc outsl ljmp push (bad) sti sub (bad) loopne add sub adc subb lods pop push or orl mov dec sbb add adc leave mov cltd cmp out inc adc mov push jb rcrb inc out or je in aam or mov popa ret (bad) push lret loopne mov push mov sub push xor jle mov movsb (bad) mov jecxz ljmp inc fnsave xor out adc adc mov push mov mov rcl ret sti xchg push jg and pop cld lcall jb in xchg sahf repz xor mov jne sti cmpsl xor xchg fadd adc add cmpsb stos aas or cli ret rclb cmp ficompl repnz pop nop ss xchg aad add jmp int3 push iret das mov in (bad) fs pushf mov aaa fdivrl int3 sbb popf pushf addl xor shrb xchg imul mov leave sbb cmpsb lods out jle lods (bad) sti mov mov addr16 cmc mov xor xor (bad) xchg sub push int3 sub cli lods inc add rorl jg cwtl inc pop (bad) (bad) xchg inc loope sub mov jne pusha mov aad mov loopne hlt pop pop dec mov sbb (bad) mov lret xchg sbb outsl add dec ds out jae adc repz cmp push jbe xor xlat push or fbld adc into (bad) cs into repnz sub add jo jle das scas stos mov pop lods mov sbb sub repz adc repz xchg ja xchg jp inc mov dec mov cltd sbb (bad) pushf mov mulb xor inc pop xchg aas sub ja jb in into stos out jmp nop push inc jle adc dec add mov push xchg inc or inc notl std outsl push dec ret fcmovu inc pop cmp fist or loop sub fadds jnp cmp xchg ja xchg mov cld inc cmpsl and xchg repz dec xchg inc leave push adc inc pop pop sub mov daa xchg push icebp xchg adc dec lret (bad) cmp sub arpl lods jmp pop pop xorl mov xlat pusha mov imul mov loope mov loope andb push sub push add or cli jp mov xor mov sub jbe sub push push xchg ja mov sub imulb push mov popa stos ljmp repz jl jno cltd add aaa outsb pop cmp or xor pop (bad) jno stc popf mov sbb inc mov (bad) xor xbegin mov test insl push jl pop sbb lahf bound dec xor jbe test stos xor popa aad sbb cmpsl lock jecxz dec int3 dec mov lods int stc xor add aam push mov push (bad) xchg mov sub scas push mov (bad) xor loope test pop pushf sbb adc sbb fist mov repnz notl mov fwait mov repnz dec xchg dec out in cmp jbe inc mov push add divl mov dec (bad) ljmp push js xchg loopne inc bound (bad) dec test (bad) sbb jne scas incl (bad) iret cmp sbb mov aad pop dec xchg dec add ss lret loop in popaw jo push into mov inc lock add mov orb mov outsl push mov mov mov (bad) lods insb sub pop pop out pusha in repnz jl adc ds mov test mov pop insl int3 ret push mov jg cltd das pop pop mov or pop mov pop loop xchg or dec jl and lds (bad) (bad) cmc pop lods out cs dec xchg ror pop movb adc (bad) jae test pop push aam add data16 add imul in sarb sahf and mov pop icebp arpl push xor fisubl xor mov fs sub sarl xlat push (bad) es xor cwtl arpl stos push lret fldt inc or and jns jns or dec mov jae insl pop xor dec pusha cwtl cli or (bad) xor jp xchg fwait ds ljmp push xor iret pop lcall cmpsl mov ret es movsl mov outsb mov lret divl jb adc mov ja mov or loopne ljmp xchg nop repz test add jbe adcb fcom xorl push jo inc adc cli (bad) sbb sahf push xchg inc sbb sub ljmp js in mov and bound data16 adc std sub adc cld ja xor sbbl addr16 into sbb and (bad) push mov jno xor (bad) fimull out sbb data16 mov stos dec cmp xchg xchg add xchg imul sbb xorl gs xchg lret jp jl (bad) mov aas xchg movsb sbb ret mov xchg sbbl pushf ficoml mov sub pop add rcrb cmp fisubrl or add lea xor insb movsb mov jno cmp leave jecxz fimul shll xor jo lret dec pop cmp add (bad) mov in xchg fsubl push pop sub faddl out int3 or (bad) sub insl mov fiadd cmp in and adc pop lods push ss sub frstor es and mov call mov dec stos aad imul mov mov ja sbb in lea addr16 dec rcrl mov (bad) sarl inc pop xchg fs imul lret in bound xor insl leave insb lcall sbb jo jne sub mov xchg cmpsl (bad) iret xor cmc addr16 aad pop inc test mov scas cli pop outsl ret divb (bad) jp push pop push push test in mov cmp or movsb movsl sbb das aas adc sbb sub je outsl repnz xor cs lods mov xchg mov and push mov inc mov sbb inc push cwtl clc mov daa rcl sbb aam mov out sbb lahf mov ds popf sar repnz sub decb cmpsb adc sbb stc sub cmp xchg and das jecxz sbb jp sahf addr16 adc xor fsqrt lock mov inc jl jno rorl nop push sbb push or cltd or xor fdivl push outsb pop aas pop jbe pop stos mull sub stos or cmc xchg push mov jnp fstpt cltd lret mov fsubr mov outsl mov lock and pop mov lcall popa and mov mov lea push jno fcoml cmc dec sbb scas push adc jo sbb jmp lret and scas sub mov in xchg dec push dec push mov ja and cmp jl or sbb aaa aas dec fbstp mov in mov shlb scas fildl movsb stos mov rolb cmp or cmp jle cmp xor ds std ret stos pop cmp jle mov dec adc pop insb data16 rorl in or mov inc xor insl inc adc push in fist insb fldcw inc shrl (bad) dec clc cltd dec test inc (bad) jl mov mov repz cltd std pop pop in test and sbb test lret shufps push addr16 adc fs cmc push pop in bound jbe das dec inc sbb mov mov or sahf pop dec ja jle adc pusha orl aaa nop loop xchg das xchg int or cmpsl push cmp cmp movsb out mov rcrb sarb mov iret insl insb mov pop push enter sub push jbe imul mov in popa jb cmp loopne push leave cmp clc sub pop cmc pop test repnz jl rcrl insl pushf mov in outsl xchg cmpl inc jnp pop (bad) rcrl add and iret int je out mov or addr16 and pop pop es cmp xor inc leave xor jae mov leave xor mov jne inc xchg fcoms xchg out shll mov scas and mov mov jb inc lods or cmp int add cmp jle js ss sarl repnz xor add mov pop and dec mov imul xchg test cmp sahf repnz mov rorl jno,pt mov sbb ss adc jg inc cmp lret nop aam imul pop lds lods push xor sbb fld lahf ret cs mov in ja mov fstp jns sti (bad) lcall out cltd movsb sbb dec outsb shr mov addr16 pop (bad) test addl pop inc jl and dec push fist add outsl mov cld aam dec pop xor out rcrb mov sub bound dec ss push test popf xor movsl inc cmp xchg adc insl jg xor lds push xchg jbe loopne pop jmp stos pop je xor add pop sbb lcall push jmp test decl mov in dec lahf popf imul mov mov jecxz and popa incb mov shr call xchg mov fst jp fadds inc mov pop push pop jle les mov sbbl fisub xchg push lret hlt enter mov jno int3 incl das jl push add stos and aam xor outsl prefetcht1 cmp sub push mov mov pop pop adc cwtl xlat (bad) cs sarl cmp jl mov lcall jno test dec outsb aas xchg mov adcl jmp call stos (bad) jl daa jbe add adc in fisttpl scas iret push jp jmp cwtl pop inc cmp inc push inc or pop jmp int xor mov fsubl mov mov mulb or jbe xchg dec idivl jg loop rorb or mov outsl dec and loope adc repnz cpuid xor pop mov cs mov (bad) or push out xchg xchg ljmp pop or dec out mov add int3 jg das push loop xrelease ret push jne mov sub in shrb inc jmp ret cmpb cmc mov mov fcmovnu dec xor fdivrl (bad) dec fucom jae jae stos shlb pop das adc (bad) sub (bad) int cmp and loopne js inc jae adc inc insb mov or add push mov aad jae sbb adc test pusha and dec out mov mov mov cli mov and out xor popa std repz addr16 xchg xchg mov divb repnz cmp (bad) adc dec arpl sub cmp icebp lret mov mov mov sub ret add int3 or dec sub outsl dec cmp les in mov pop inc std jmp mov jno test scas repnz fild or xor xchg mov dec xor dec fs (bad) out mov inc xor adc jle inc sbb jecxz mov leave inc test xlat dec mov (bad) and mov mov mov or fdivrp push je and adc aam cmp orl in gs fadds xor pop subb in cmc mov pusha aas and ret jge test xchg sub mov int3 and pop mov mov adc push leave add jno push dec mov xchg xor xchg pop xor and out adc cli xchg js rorl xchg out cmp shll mov lock mov clc int3 push rcrl insl ret lods movb xor (bad) dec lcall pop ret mov mov mov mov call stos pop push or and mov mov mov mov ret mov xchg pusha pushf int pop cmc adc cltd add fcmovnb insl (bad) (bad) leave push js adc stos sub adc and outsb add jo test fdivl mov inc scas jne xchg xchg nop arpl push cld lret aam in test sub outsl (bad) sub fsub pusha imul bound stos jle pop ret lods lods lea popa loop cmp jle jecxz jbe mov hlt adc call jl mov cmpsb lock mov lahf adc jp fadds je scas inc pop mov jecxz push cmc push add push sub fisubrl aam push and pop mov sarl cmp rol sbb stos mov xchg pop rcrl dec push xorb push cmp int mov out inc sub shlb ret jecxz rclb cmp mov jo jns jp pcmpgtd cmc rcl mov xchg pushf push mov jae inc je outsb cmp add add repz jle mov push pushf xor (bad) cmp enter cli loope cmp in icebp mov and inc outsb or insl insb push icebp add push sbb je mov sbbl lcall jo mov ret sub cmp jge jns (bad) mov mov push and test out add out pop out movsl popf dec std pushf int push lods pop sub movl sti push cltd xor ja xchg mov (bad) arpl in jecxz or int or imul orl movsl xor mov movsb mov aaa dec fdivs mov incb or xchg cmpsb aaa sub xorb mov lods lahf mov push xchg lea jnp bound adc mov xor aaa mov imulb pop rorb inc repz movzwl out rcrl out inc popa dec sbb xor sti adc sbb fnstenv in pop mov mov adc jns jle sub (bad) into or ret xchg xor mov ljmp repz add pop fcompl inc loopne mov sbb out in pop pop cmpsl in out pushf fdiv ficom lods pop or je cmp xchg call fnstcw inc mov dec lret je cmc mov mov sbb push ljmp sbb cmc and mov sbb out mov push call out inc mov dec pusha xor and sbb cmp (bad) cmp ja inc inc inc stos xlat outsl outsb xchg sub push add pop adc hlt jmp sti xchg imul push fimul lcall dec sub outsb bound lret cmp jbe cmp addr16 dec push std into fucomp and xor inc in push pop lahf add dec nop xchg sahf (bad) cltd and add mov and sahf movsl into mov mull (bad) jno push movsl and xor mul mov mov adc push or cmp (bad) cmp out mov jbe lret mov insl jp dec sbb test leave lock pop dec daa fwait push sub bound popa xor push mov adc dec sbb cld cmp xor cmc (bad) (bad) pusha stos xlat enterw mov sbb adc repnz mov mov ret mul out pop std inc int add sub aas cmp in addr16 cmp ficomp mov gs inc jmp push xlat ja bswap insl popf pop cmp mov mov repnz sbb popf hlt sbb dec mov inc lcall add pop in jl sti sti push ret nop inc xchg sar lods push pushf outsl es mov inc dec sub adc cmp sti mov movb fildl push sub push xchg insl lock pop add adc int sub fmull mov xlat or dec rep js mov push js (bad) cli pop dec jns push clc sbb cmp cmp add push xor xchg mov push (bad) imulb mov add cli push call out xor xor aam or data16 jg mov push leave jle push sub mov jmp push mov jns mov mov aam or je sbbb lods jl push sbb rol nop icebp insb aad xor rorl or sbb outsb push in mov out outsl xchg cwtl out sbb mov (bad) sarb mov jno ret xchg mov inc adc cmp fiaddl xchg lods pop pop push xchg mov orl test aas call cmp in mov mov arpl mov sahf insl xorb fild decb icebp lret ret or loop cmp sbb jg push imul arpl adc cld in data16 (bad) adc lock push cmpsl and xchg aad int3 into xchg add insl std dec js cmp jle orl fcomip xor and arpl xor mov (bad) dec add pop dec insb mov lds mov and and add dec sub cmp lds push out push adc andl mov iret enter jmp dec (bad) lock fmull repnz xchg out (bad) fstl movsl push mov dec sarb sub xchg outsl call shrl and and (bad) into or icebp sub xorb adc push aad or add lods in dec pop pop mov xlat aam inc fwait jg xchg push cld dec in popf div cltd pop pop sbb dec jmp repnz mov xchg and or wbinvd pop clc loopne pushf lods dec std jmp add aaa out divl and mov jp rclb jg lret lock jmp out cmp lock and scas sub enter sbb pop xchg mov or insl mov adc cmc push stos mov push cli xchg and and ds push mov repz je add insb int sbb out fnop jne shll loopne (bad) sbb sbb sbb add mov jecxz test imul dec sub cmp gs mov ror (bad) xchg push test inc adc add stos xlat jge sub test cli mov pushf and pop (bad) and xor jge xor xchg adc (bad) clc sub jmp jmp dec or inc push and or sub and push lahf fst mov popa test enter lahf adc lods dec fsubrl mov (bad) dec mov lods sbb pop in xchg popf (bad) in int (bad) push dec mov incb cmpsl loop xor jnp push sub or pusha roll negl jne iret movsb loop test not add mov std or jmp imul sbbb add jbe and mov add test (bad) hlt fimull scas xor stos inc xor in movsb (bad) std lock pusha lods addr16 inc cld sbb gs rorl add cmp xchg in xchg cld or or (bad) mov xchg inc cmp call lods cmc push aad les sbb cli xchg adc pop ljmp popa sbb sbb xor mov jp mov (bad) xor mov mov ret daa jnp mov xchg iret scas inc or pop les pop mov adc iret mov pushf jns push jns sub inc mov dec loope cmp ficompl cmp dec icebp lds ss adc push add jle arpl jle cmpsb inc test ds sar adc xchg outsb add (bad) jae in or and jne jmp mov adc (bad) mov mov pop sub sub int3 cltd mov pop daa mov insl cld lcall mov jecxz jecxz mov and adc mov push xchg out sbb xor push adc pop sub movsb aaa mov mov out mov daa dec or push sub fadd dec cmp mov (bad) jbe or cltd add xorb and dec sbb add faddp aaa xchg loopne into scas sbb and push xchg mov xor lods sub cmpsb leave lods cs fcoml rorb and add sti stc sar (bad) aaa dec minps sbb imull inc or mov adc aad pop out pop cmpsb int test mov add push push pop or mov sbb xchg stos call rcrb sub (bad) loopne sub xor lea aad iret shrl mull push leave mov in mov leave push xchg std mov js mov ret xchg daa mov outsb push jbe push pop iret leave push ret les ja nop lret icebp cmp lret dec mov mov fisub mov mov pop or es mov test aam mov mov lar xchg push mov movsb inc lock mov in dec sbb setge sub inc inc arpl (bad) jmp lods inc fisttpll (bad) jno stos cmpsb ret sbb hlt movsb ret mov pop repnz scas jnp loope inc adc cltd jae inc pop push or pop pop dec pusha std test testb (bad) fdivrl inc repz in push jl ja pop out cmp lock xor fcomps or gs in inc mov test out leave pop fisubr add push xchg loope jb mov fs push or ret scas xor dec xchg pop dec call sbb out ja ss push in sub into outsl add mov mov frstor stc loop pop inc and loopne out insl bound dec lahf aad getsec xchg pop and repz out push dec jl pop mov ret sub add xorl loope rorb inc sub mov (bad) mov aam pushf rcrl movl in sub test xchg in imul mov pop std push or es cwtl (bad) mov sbb outsl dec sbb shr daa je push and mov push pop xor or and or mov sbb shrl adc xor xchg rcrb (bad) and daa inc pop inc cli sarl jb sbb (bad) sbb cltd mov jns jo sahf xchg pop fstpl testb sub (bad) jno loope adc out out test je dec aaa mov stc ficom aas cmpl sub pop in roll jge loop sub push mov aam mov ret mov mov pop movsl inc push jns mov cltd addr16 lret adc cmpsb xor les inc mov mov sbbb push xor cld fs mov lock hlt es xor add adc xor adc lahf int3 xor aad sub (bad) sbbb cmp cmp mov lret std xor pop add std push adc stc xor xchg movsl sub mov out shlb xor or out sahf in cmp mov xlat pop aam pushf ficompl push xor and mov fidivr mov push mov xchg sarl jmp inc mov inc je mov mov sbb int3 mov mov lcall mov mov lds inc mov ds insb inc rclb or inc cs scas inc in push in je xor xchg mov fdivrs outsb cs test mov cli je clc mov stos push cmp ret int3 stos (bad) ud1 ljmp pushf fisubr loopne stos mov scas xchg sbb or and push mov add sbb (bad) or jne pushf or movsl shll mov dec fldt (bad) stc mov fdivrl cmc push mov lea mov jno pop xchg jmp aaa dec or lods mov outsb lock mov cmp push mov xchg jb xchg pop mov out and dec loop std lret mov in mov das in fidivl cmc lock fistl cmp push jge out sbb push mov add mov (bad) rcrb bound cltd pushl jp fildl mov mov mov subl jmp movsl inc nop pop cmp test bound xor sbb repz and or cmp push clc xor fnsave adc sub pop (bad) iret lds adc out and les and scas pushl in jns lret cwtl sub les icebp xor push xchg and lret in scas hlt adc stos xor outsb mov or test inc push scas xor and mov inc dec push push es fstp imul (bad) and inc cmpsb bound mov addr16 sub mov dec and cmp dec fwait sbb dec popa adc jp cmp arpl jle cvttps2pi add add jns gs sbb xchg jne std popa mov movsl outsl jnp push add je sbb push js xlat pop ljmp cmp cmp imul xor dec imul add dec shrb aas repnz in rcll call and xchg sti orl cld fsubrl jp or lcall cmp xchg pusha pop ds notl xlat add adc std repz add add shr fwait adc add sub dec adc xor cmpsl jl leave pop xlat push mov mov rclb cltd fs rorl (bad) fsts mov lock mov imull int stos test lcall sub sbb cmovle in jp cs std in jecxz cmpsb pop call push mov xchg xchg jbe mov es jge cltd outsb repz decl and mov xchg aad sti jbe cwtl (bad) jae mov mov mov jae push mov jo insl in shll loopne mov (bad) sbb daa push daa xchg pop inc jbe (bad) xor push std dec or and xor es aas in pop stos cld or xchg stos out adc mov mov xor add jo movsb or in sub call inc mov mov xchg push push lods jb cs lods sub mov dec fs jecxz pop stos adc cltd stos stos je movsl or shr and mov out fmuls hlt (bad) cltd arpl cmp adc out sbb pushf mul daa mov cmp push fbstp jno mov in add adc jo push xor xor xchg outsb mov cld movsb cmp shrl hlt adc push and pop pop and or cmc adc mov in dec lcall or test push stos ljmp pop fucomip mov sahf xchg or push jg push jno mov in mov bound xchg push insb push xlat insb mov popa fstp cmc fcompl xorl adc adc jnp aaa xor cmp jmp sub push push push inc inc sub pavgb or jns xor in imul xchg mov (bad) lods fxch fcomi mov xchg mov dec push adc aad mov cmc add in (bad) hlt movsb adc fdivl aad mov bound pusha jnp or or jecxz (bad) adcb sbb and xchg out (bad) pusha lea mov sbb ljmp aad inc test push sbb jp es sti add fstp jno push gs cmp push inc lret mov cmp push and cltd jne xor cld imul ret inc sbb xchg sbb (bad) sub mov pop fisttpll jns les xlat addr16 adc bound xchg ret adc into add pop in add clc ljmp adcl cmp pop cmp cmp push outsl or into pop mov jle jne fistpl daa adc or add mov jbe out push jmp mov dec xchg sub inc mov push lods in stos xor lcall aad or fs mov xor les xor sub mov mov (bad) imul and pusha push int daa sahf lock sbb pop push xchg or (bad) mov test std cmpsl aaa in mov mov data16 pop pop lods mov test sarb inc mov loope sub pop mov jnp (bad) enter mov cmc cs insb std push or jecxz lods pop add aam (bad) icebp xchg pushf pop mov rcrb mov jae aaa xor (bad) cmpsl xchg shlb stc mov fldl push and sbb dec lock inc jg sets push aad push in in inc xchg js sbb jnp xor jmp xadd cwtl ljmp mov (bad) lea mov insl mov sbb dec ja repz or inc xor inc (bad) push xchg incb divb push clc push (bad) sahf mov in into stos popa out pusha xor sbb test sbb stos test int sub xchg dec loopne cmp aad push add mov xchg xchg push lock jle pop inc pushf mov pop pop das gs pop mov test inc xchg loope cmp lods movl pop adc lods icebp xchg movsl xchg and loope add and jbe mov les sbb divb out mov notb xlat push punpckldq test dec push movsl mov xchg loop cmp aaa mov add lea jmp xchg dec xlat lret and in fdiv lret xchg (bad) jae sub xchg adc push into call jp mov fdivrl xor xor adc push call addr16 push push clc and inc push call movsl xchg (bad) pop jmp arpl outsl mov jge add and jb pop adc xchg jle jg pop incl cmp lods mov inc test in stc cmp clc xchg mov mov xchg notl aad les mov test in jne enter and inc imul outsb daa es sbb in fisubr insb call dec pop hlt cwtl xor and test mov testb pop jle div xchg adc fistpl loop fildll cli mov sarb aaa rcrb aam or sbb sarb mov das jp xlat repz outsb xlat jnp push repz enter cmp xor movsl loop cwtl xchg fwait cmp aas dec pop cmp and mov mov cltd add add scas pcmpgtb dec or mov pop push adc (bad) int3 out adc or lahf aas in sbb jo out and call pop pushf loopne testl cmp jg mov int3 rorb loopne push imul xchg pusha aam push mov dec js sbb jmp mov xchg mov cmp cltd loope ret sub (bad) aad dec jmp daa sbb jle fptan ss inc sub sbb out in dec aam fwait push (bad) xchg rorb dec dec imul cmp sub sbb (bad) test lret fwait cmp mov cld pop outsl lock aaa movsb sub ljmp ja lds sti aad sbb jp sbb mov pusha push jne sbb aad mov aad mov sub mov add cmp or sbb mov dec pop lock and push popa test das mov mov faddp and fimull int in cmpsl ret xchg lcall jno and inc call scas jo push cld and xchg sub jge dec popf adc test sbb (bad) daa mov leave mov pop pop mov or loop xor jge cmp and (bad) push sub scas add aad add inc dec icebp cmp icebp push pusha pop lods add in decb sahf cld push test lods pop nop ss push push push fs outsb jbe popl fldl pop push push loop sbb in icebp out int loope js rolb jge js sub fsts loop test out das popf xor fwait xor lods xor jbe sarb ficoml mull xor (bad) or pop push das das mov pop inc mov adc mov mov and into inc pop pop inc push dec lea xchg push movsl and fwait ds fwait ss sub push es fadds xchg and xchg mov sbb xor jnp dec call es add mov loopnew push lock lea sub (bad) jo loop pop cmpsl xor aad xchg je std insb cmp and repz mov call cmp push cmpsl pop out test mov popf gs adc sub add inc xor (bad) mov imul loopne (bad) aad out lods out dec das in push add lock adcl sbb scas shrl xor mov fwait js ret out mov xchg xchg gs or inc orb and (bad) inc fimul jne imul out xchg gs jle inc mov push divl mov jg cmp dec cmp sub jl hlt cmp add mov pcmpgtb ds or (bad) xor push adc mov adc repz dec lods xchg pop iret mov fsubrl add repnz sub jae rorl cmp mov add shl xchg push std mov mov icebp xchg sbb clc (bad) pushf jb aad cmc aaa ret fcomps jae and addr16 cld iret loop fcoms and cwtl scas jns sbbl sub lahf mov pop pop in cmp xchg mov arpl push stos add aam mov xchg dec (bad) jecxz push xor xchg das adc fcompl cmp sbb dec mov and jae (bad) pop xor adc sbb jp inc push xor mov aam jmp jmp lea popf push mulb mov out xchg xchg (bad) sub add cmp mov std lcall gs rcll add bound push mov ds dec jg fcmovne dec sarb pop mov gs cmp ficoml xchg lds dec call jns sti enter jnp arpl shrl fist shrl ret add mov lcall xlat adc mov xor add xlat ret subl arpl aaa dec aaa out decb sub sub sub sarb repz jno cmpsb arpl dec sbb xor gs mov movsl jne mov divl (bad) cmp xor sub stc adc mov dec aad or jle daa ljmp xchg xchg rcr mov push or (bad) (bad) mov inc jb xchg gs jne pop testl sub or ljmp inc addb sbb (bad) xor inc lret mov mov sbb in mov push inc repnz mov mov push addl je jo outsl mov pop decl xchg cmp movb mov mov (bad) mov push dec (bad) cs addr16 leave test sub test add xor (bad) or stos adc je std notb jno sbb cmpsl sbb pop lret add mov xchg sti popa imul rorb sub cltd movsb outsb xor push lods inc pop test das inc lea and (bad) fnstsw or xchg dec xchg (bad) push imul outsl jns lock jle int3 mov add mov rorb mov xchg into in insl mov inc sbb in add sub cmp aaa fsubs push in movsl and pop in arpl loope jl js mov scas add ja test das add add lret cmc add arpl fsubrs sub mov dec imul mov icebp cmp out sub inc mov cli inc push lret pop (bad) cmp mov or cmp sub stos mov cmpsl data16 and and stos fsubs inc daa loop js clc pop and in fsubr (bad) bound in dec mov push cwtl sub add inc mov xor or ds pop ret pop fimul or cmp push or adc ja sti pop jl lods scas or fsubs jae mov (bad) insw (bad) pop ja addr16 cli xlat orl cmp ds daa leave or add (bad) cmp pop arpl inc sub std xchg stc xor leave push aas outsb pop or pop clc inc lods adc fbld mov mov jg push push pusha rcll mov dec stos push cmp pop rcrb inc pop clc inc inc aam pop insl ljmp cmp xchg lds data16 add movsl (bad) xor push ror outsl jp mov dec push push and fwait sub mov cmc jmp outsb mov test add popa mov and pop lds sub aaa pusha jmp mov inc leave hlt mov mov sub mov aam cmp mov lret outsb dec jnp mov repnz sarb xor mov loope inc idivb jl push cmp jo (bad) mov ds test mov or mov stc push jle popa push or dec add std mov orl inc mov sti shlb xor mov (bad) xchg enter xor scas jne cmp in push aas ret add icebp push xchg jbe pop jmp sti addr16 frstor addr16 inc mov js push xor popa and and movsb lods rcrl ljmp push aam dec repz arpl icebp icebp mov mov jg jg,pn sub pop push js cld stos and pop imul jb pusha ret js cmp scas or ficomp hlt icebp xchg mov xor jp cmp cmc test jo sbb inc xor rcr xchg mov es xor mov out xor hlt fwait jecxz in cltd jb sub cmp pop sahf bound loopne rorb popa je (bad) loopne fs xorl and cmpsb sub js mov pminub fwait decl lret scas xchg nop ss (bad) lock jae lahf cmpsb add cmp mov lea lret mov out outsl jne push sub adc sar and push pop loope xchg mov lds jl hlt test (bad) jne (bad) jmp aam inc cmp (bad) pushf push ficoml aas push sub into int3 fdivrs jp lcall inc in push js ret (bad) data16 sbb lret mov aam cs jmp (bad) jg js movsb pusha ss mov stc dec or test out add xor pop fs jle add sub dec lcall push test aaa aad dec ror adc jbe pop aad xchg lret dec sub pushf das xor push pushf mov add inc cs add add cltd push ss cmpsl cld rolb push mov adc adc jge aaa pop hlt cmpsl mov fsubp into fmuls inc pushaw stos xor sub cmc int3 (bad) jb (bad) cmp mov les or mov cs (bad) stc (bad) int3 loopne mov rclb ret bts rcr daa hlt mov aam jbe test sub fst add fld xchg mov daa cmp imul pop pop and imul dec movsl mov loopne,pn jmp mov icebp pop mov mov cmp lock jg jmp sbb imul insb cmp dec nop sti push pop test add add jecxz jle (bad) jno aam daa insb ret insl outsl push and and push cs icebp sbb or outsl cmp cmp mov addr16 movsb adc subb mov mov in out mov popf ud1 aas mov xchg (bad) sub cmp mov adc jmp pop pusha mov fstpl ljmp imul ja mov scas mov pop insl sahf js sahf arpl sbb push ds adc std mov jnp adc lock mov lcall notl in xchg sarb add call adc aad add enter hlt hlt dec mov adc push and cmp dec dec gs cmpsl add lods mov pop fnstcw mov jae pop leave incb mov test lcall imul cmp hlt mov std andl mov pop jb add push loope sub subb ja cmpsb push or jnp sahf lea sub xchg push mov ret (bad) mov mov outsb mov out dec popa sar in out loope repnz jo jo sbb jle push sbb dec pop fdiv (bad) movsl cli lods or sarb jnp ss jae push lcall mov or stos xchg fistpll clc inc xor dec movlps sbb test mov mov add ss outsl jnp jo (bad) mov (bad) les dec sub jge rorb mov (bad) rcrl lret aaa inc adc sub and out or push cmp cmp xchg fcmovu data16 ljmp xor les xchg loop push mov dec cmp cld aam test dec lods std cli repz je cmc cld lret gs mov sbb jl inc inc dec lahf (bad) dec adc push rcl add sbb outsl mov popl mov out jp lods in or xchg dec cmpsl or cmp es and pop fisttp aas cmp xchg lcall cwtl or (bad) movsb sbb inc pusha daa out xchg movsb lock jb push in sti fwait pop jae test mov in inc xor jp and into jge sbb js jg enter addl cs nop push sub pop aas clc cmpsb adc test pusha fcmovbe nop int inc mov nop shr mov mov dec loope fidivr jmp mov testb jne push sbb inc xchg gs mov xchg add js out hlt (bad) mov sbb pop pop cs pop (bad) imul jecxz cmp xor jae mov imul mov loopne and das lock andl (bad) mov or xor cmpsl inc inc and pop (bad) adc ficomp push xor (bad) loopne push jge cli (bad) lea mov cmp mov mov repz xchg xor xchg xchg adc dec (bad) xor jp pushf mov pop jns adc or sbb jp stos loope lahf fildl adc xchg or mov pop or lods add sbb push mov scas mov add test fcomi notb pop xor mov mov sbb pop outsb push aas imul aaa mov push (bad) hlt jl std sub jnp push jo dec xor and or push pusha lahf push adc jne push faddl push cmp or sub js fldenv or jecxz outsb lods incb jmp aas les jge adc xor cmc stos out jl sti mov pop inc inc dec and pop and loop mov mov adcl push (bad) sub rcr out (bad) xor sti cmp (bad) cmp adc jp jne stos push xorl stos in jbe in test stc jno cmp jns dec cmpl jb inc jo push insl lds add push fsubr jle inc and inc stc (bad) dec lcall jb into andb call adc insb push jecxz scas gs jg or sbb (bad) in add add xchg dec add mov cmc xor stos inc stos mov inc aam addr16 pop and cmc mov xchg xor and xchg mov aas and sbb das push aaa loop mov sbb lods or jo pop inc xor fistl sub mov stos push mov leave inc dec or divb imul adc out pop (bad) cmp adc fs ret cmp out push clc xor push loopne dec imul mov iret iret sub mov mov dec cmp stos scas jl sahf mov iret pop xor cmp push mov sub or lds xor xor push cmp xchg fmul and ficoml jge cmp fiadd rorb lret or and aam jg and pushf cmp mov dec jmp mov push loopne cld xchg mov int (bad) cmp ja xchg js jns xor mov imul mov ret push jnp add inc push jl jg jnp cmpsb jecxz lret pop xchg icebp and lds ret xlat loop cltd arpl (bad) (bad) pop daa pop (bad) pop or cld inc push lds xchg (bad) jne mov jne (bad) negb shl push inc aam cwtl int ss mov test sbb jo add test jbe xor pop jnp pavgw lds sahf sbb ljmp test dec push sbb shufps cmp push in or xchg jne fs jo inc push add pop sbb mov dec ffree mov push cmp adc lcall pop xlat mov adc fcomps xor out xchg xchg or sub stos mov and in mov (bad) (bad) sar push inc lcall xor jns js push cmp popf xor in imul fldl imulb (bad) lods push or std inc jmp mov or mov and xchg notb jecxz js mov pmaddwd jns mov fiadd and (bad) dec cmpsb push and jae aas xor scas jge lods cmp lea lods add stos fs pusha pop sar icebp lcall cmpsl sahf push jae cs sarl mov mov mov loope push mov mov shrl in sti ret idivb adc xor clc test mov notl xchg mov sbb lcall push push sbb insl aas add xor mov mov xchg cmp xchg inc aad imul out sti mov icebp imul iret stos lahf jnp inc jp fistpll out bound pop shlb jg nop sub ja mov inc mov add pop sub ret call cli mov mov popf inc sub sub leave js adcb adc icebp fistp leave nopl sahf xor mov ret fwait or lods mov cmp jecxz jmp sarl int3 repnz pop adc pushf cltd insb mov rep fist xchg popf mov fist sub icebp mov fdivl pop call popf fnstcw push movsb and push movsl ret xchg cmp inc cmp add cmpsb cmp pop push repnz mov inc pop xlat insl inc pop icebp mov xchg xor lahf sbb ret in fdivrs mov ss pop xor cmpsb push dec insl das ds xchg lret scas test imul fnop fnsave ja popf jge out xchg push rcrl sbb and or sbb dec mov xor inc cltd cmp icebp mov add (bad) aaa mov xor mov dec add xor aad nop (bad) cmp dec pop add mov in hlt push adc adc lock xchg outsl movsl jmp int inc sbb nop movsl jp dec stc push adc cmp jns lcall and lahf xor popf repnz jb push jmp (bad) jns add sar sarb sbb inc aaa inc cmp push add out in xor inc movsl cmp add cli xor (bad) push add adc and movsb xchg push call xchg inc dec lds adc sub push (bad) (bad) mov xchg sarb cmpsb stc pop into out xchg lret xchg cli ret mov mov sahf les and out int aaa mov ljmp jns inc lcall call jo sbb sub int or lret jmp push jns pusha add in add subb add cmc test mov mov xchg and fwait xchg sti (bad) push stos jmp dec dec or sbb dec popa and add int adc mov ret sbb inc adc inc bound xchg lahf fcompl sbb or mov pushf fldt int sub push repz shr scas (bad) rorl pop int3 mov push es gs out push pop stos and fisubrl (bad) dec fildl mov add push popf xchg sti (bad) out es pop in addl into mov (bad) loope mov bound insl add andb adc (bad) xor jns mov imul sub cmp push add stos and jmp iret in cmp pop ljmp and stos popf ds push dec cmp lock mov mov xor mov cwtl lods add xchg dec mov sbb sahf or xchg mov xchg cmp pop aas pop lea inc xchg lahf push in test and movsl mov sbb dec (bad) ds mov fwait fwait shl das jle ret loopne fidivr inc in xor ret (bad) lret fs pop xor idivl inc mov out sub (bad) sahf sub add mov (bad) out pop dec xchg xchg out lcall dec mov cmp inc lds int3 stos fcompl out fmull hlt cwtl sub pop mov and pop sbb sub push ret push push jg js xlat sbb xchg inc pop mov jns aad sbb mov inc adc dec sbb aaa je mov adc cld dec push pop fucom test call pop xor inc mov xor jmp shrb mov fisttp xor ss xor ret out mov lods not pop call or or (bad) mov mov cmc or jae xor jb mov sub shll mov jle mov test aaa repz (bad) cmpsl xchg sbb add jo scas lcall gs notl daa adc cmp js mov cld xor jne fild cld mov ficom lods leave subl sub pop mov (bad) pop xchg sbb push inc pop es (bad) fisttpll ret (bad) popa cmpsb aad daa pop lods fsubrs xor test test (bad) movl enter mov ss xor inc lods or push push xchg arpl lcall leave mov mov pop fwait cli jne (bad) xor imulb test mov cltd repz or cmp fbld pop jmp jnp sbb insl mov dec imul out push fmuls xchg lods fisubrl popa (bad) pop (bad) mov pop mov call cmp iret sbb inc cmp mov (bad) adc aas mov scas outsl dec mov pop push lds push add push mov aam out mov cmp in mov cmp pop inc jle nop mov push dec pop mov xor nop xchg in stos and and in insl iret inc sub adc test lock jle sbb mov pop bound fs mov fdivrl into shlb jbe imul cli hlt leave mov enter jg or xor out mov push cmp in push faddl mov out fildll sbb (bad) cmc stos sub jp (bad) xor es and push dec add dec ret push pop xchg mov mov add sbb cmp xor mov insb shrl les incb lea in mov push add push pop inc xor mov fldl in jg pop sub jnp jne xor inc dec mov test vpshuflw mov mov mov out rcll test mov ficompl mov sub mov xchg xchg mov push (bad) aam fcomps lods and loopne fxch fbld mov imul daa pop xchg (bad) jno adc add hlt jl movsl inc aad mov sbb or out or mov cmp jmp cmp adc mov jle push xor in jno cmp mov das out shrl add adc fisttpl mov add dec push jmp mov mov inc inc xchg sbb mov dec mov xchg dec xor adc xchg pop mov push cmp mov xchg adc cltd xor inc sub mov (bad) fs in scas repnz stc aaa out lock jno mov das jge push (bad) ja test push and mov jnp ds jne sahf fstps add test jle dec fldcw mov push and data16 xchg push dec cmp sbb or jo nop test or jo hlt or mov jge je dec mov sub or fmuls adc push dec sbbb (bad) aad lret or leave into clc xorl and cmp mov incb push or call push jne loopne test popf mov jle sub scas clc or add outsl xor add adc cld pop dec mov xor (bad) mov loope cmpsl jno js dec push and mov (bad) sbb bound dec inc cmp lock xor mov ds in cmp push add mov dec inc addl add inc inc mov sbb pop lret mov lea rcrb movsb bound aam xchg out aad inc dec cmp out (bad) fwait sub mov xchg cmp (bad) jno ljmp pop cmpsl push outsb jmp push es pop in cmp rorb loopne cmc outsb aad movsl jg loopne scas jns shll adc clc and xchg insb lds mov adc push and incb pop inc aam loopne xor sbb jnp ja test out in adc sub and mov neg pop mov movsl fdiv and loopne,pn loope dec mov xchg je mov js xchg adc pop cld cmpsb sbb addr16 push outsb or cwtl jl ret cmp imul stos int adc mov fidivr pop cmp popf mov ss xchg adc mov icebp (bad) cmp hlt and push rcll lahf push movsb fidivrl adc push stc and je or add mov mov (bad) stos aaa ss lcall lret fcomps (bad) cltd jecxz je and rcr mov mov lahf idiv mov mov imul and push mov xlat push xchg xor and xchg or outsl rolb push mov call cmpb add scas stos and (bad) clc mov mov test ss mov sub dec (bad) adc mov sahf in shlb jne fcoml mov mov push jb (bad) hlt sub sub mov sbb pushf es xchg rcl mov cld insb or and call loope repz hlt add (bad) leave aas ret push mov ljmp dec jge fwait sbb je jmp ficoml (bad) jmp xor mov outsb lret mov sub mov fdivrs push test pop sub cmp aam jae mov cmpsb jno call cltd es pusha es fisttp lcall inc imul fisubr in xchg je mov or lret xor or mov cmpsl in jb cmpsb xor lret pop lods outsl jo add push mov xor cmpsb and push cltd insl or mov cmp leave mov aad xchg fcompl mov sbb jbe lahf and mov aaa aas push push mov pop add sub sahf fisttp cld pop xorl mov jmp aas lds lods push mov and pop or jns cmp insb stos or cmc neg test aad imul push das and mov fnstsw imul push bound imul inc mov outsl adcl inc pop push cmp flds aam and repz mov sub ss adc and ss push xchg sbb mov mov scas pop daa push push mov adc fsubr cmp inc pop add sti inc push sub test jbe repnz push out jae aas xchg jae sbb sub xchg stos cmp mov loope nop mov xor inc sarl in (bad) pop or pop aaa mov lds and int pop dec js jb fimul rolb push loop das and xor mov cltd add icebp jp pusha scas cs es xor std dec dec adc mov sahf xchg int3 pop xor into adc sub mov cmp mov jecxz sub insb mov loope xlat es aas pop pop hlt cli orb xor cltd jge inc clc arpl inc push ljmp mov or push pop pop fsubrl mov int3 push adc lds adc sub in out dec daa cltd push cmp xchg (bad) jmp stos sub ret push sub push dec jge js imul addr16 lahf out in mov ljmp mov xchg inc enter mov lret (bad) (bad) ficoml xchg out sbb popf aaa cmc inc scas mov pushf lret add xlat mov rclb imul and in in xchg cmpsb fstps mov and pop add mov lret adc and add ret cmp lds add adc inc mov popa cs xchg hlt push sub movsb push mov cmp or cmp call jb or mov js mov gs hlt inc mov push out cmp adc in shr ljmp test cmp jmp inc enter shufps pop pop aam mov pop mov adc xchg cmpsb mov and cs lods pusha mov andl daa pusha add orl imul aaa aas imul or xor inc test jp ret int ljmp and mov sbb (bad) adc lods loope xchg cmc add in jnp in ret sub sbb fwait enter sbb in js mov sub ja stos cs mov mov xchg pop hlt fldl2e xor fisubl cmp call or in imul and rorl mov pop mov dec inc xchg hlt imul mov fisttp shl cmp mov push dec sbb gs xor or jg push repnz sub (bad) mov sub add push outsb xchg (bad) not gs decl (bad) and sbb mov xchg (bad) les scas cmc int mov and cmc mov mov or jo xchg mov dec jno sti jo and xlat fs fs sahf jo push jg arpl adc inc xchg sbb mov and push cmp mov xor jl pusha lcall ret mov xchg push push out dec out xor (bad) or add out les jge cmpl leave lcall jp aas cwtl push push loop les sti movsl (bad) cmp lea or dec adc sbbl mov ret lea or dec push pop inc sahf add movsl je push push loop push scas jns rcll les jge fistl cmp (bad) and sbb inc push sbb out in push addr16 (bad) rorb scas in loopne jae daa cs inc mov jb in inc (bad) arpl inc sbb insl push dec add pop adc das pop pop jecxz ljmp cmp push xchg fwait ret test hlt adc or mov mov mov or fs xchg mov mov cmp jmp inc das push mov cmp xor xlat jo (bad) push test mov cld lea aad fdivs ror xchg dec stos sarb in leave push xor lods leave add mov lds mov mov out loop test shl push push cmpsb pop mov leave loopne,pn mov xchg jbe inc das int in rcll pop sub xor sub and pop (bad) mov mov xchg repz cmp jecxz inc in sti adc int3 lods (bad) pop cmp icebp icebp lds out and push jmp push sub ret mov fistpl aas mov inc sarl pop clc outsl outsl pop out and outsl mov mov popa loopne cli daa inc loopne popf ljmp cmp outsb mov ss jmp lretw pop inc call adc stos dec jnp lret mov xor in dec dec sub fisttpll mov xchg xchg std adc mov (bad) pause dec pop jge in dec imul and fmul lods sahf push pop lcall cmp jnp bound and movsl leave and jns test lret push into sbb popf mov mov mov xchg mov adc push push shrb sbb int fucomi fwait sbb adc fmulp (bad) jmp dec or dec dec in pop inc nop ss sbb jo and ds mov cmpsb sub je lret movsb stc or xlat int adcb cmp push dec sbb ret ret xchg in leave das xchg dec jmp mov je popa push loop adc jno inc stos xchg imul jp ja shlb hlt movsl or cmp push cmp jnp repz pop ja and cli leave and mov rcrl lret xchg mov aam cmpb insl jg iret fisubr xor jns outsb inc iret ret int3 add addr16 shlb inc adc push in popa and pop or fcoml icebp push mov lods push sbb dec cmpsl mov icebp mov cmp (bad) cmp mov or lahf fisubrl xchg arpl rcr sahf into ror repz jno in xor cmpsl out xor cwtl inc dec ret push in mov jmp mov jae std js in je and lods xchg test push cmc ret adc daa sbb push cwtl mov repz jmp ljmp adc out push adc xchg mov pop out xor jb or icebp cwtl cmp mov addr16 pusha inc mov dec popf xor xchg aaa lret or pop pop rcll cmp ja (bad) or popf aad iret jae js in dec push or jg daa pop push mov sbb jmp pop in xchg into dec and and cmc pop lret sub adc in push xchg ljmp mov fstl enter pop (bad) cmp and jecxz xor imull and jle ljmp inc mov sub stos ss xor jmp fwait mov dec adc mov (bad) mulb inc addr16 add testb movsl mov adc mov adc mov inc ja pop gs xor sarl mov (bad) lock sbb daa pusha lcall dec outsb inc adcl push fwait mov movswl jo or inc inc or push xor adc add movsb inc das jno popa dec adc mov inc sahf inc (bad) jbe push daa or pop add enter cmp mov xlat jecxz sahf ja leave sub daa add cs stc fnstenv addr16 int inc enter (bad) jp dec xor jb pop xchg jnp xor jle xchg (bad) (bad) out bound loopne sbb jp inc push mov out test jns ret cmp jnp pusha arpl das stos movsl in inc out mov int mov sub xor (bad) cli sub and push cmp sbb popf mov mov (bad) pop loop xchg sbbl mov aaa out out aam jnp (bad) mov ret out cmp cli sub cmp lret iret shrb pop sub add lea popf in xchg mov loop jo ds mov in jne,pt mov push xchg pop pop iret jecxz hlt out xchg les sbb lret and inc mov vmwrite sbb jb rcl mov (bad) xor stos fimul mov stos lret and roll sbb mov cmp lea test and push (bad) dec xlat add test lds movsb jmp xor fisttpll inc xor in sbb cltd dec xorl or dec xor scas sbb cs sub mov mov js arpl pop ret call push repz mov mov mov call fwait dec lcall outsb jge fadd push test cmp icebp jecxz imul pusha cmpsb dec or das cmc int push or out pop sbb pop and jl (bad) std cmp imul cmp or aam in loope push dec repz stc mov sbb lret shrl push xchg jae addr16 std fdivrl inc push or xor push icebp cmpsb xchg adc and pusha mov dec je inc testl lea lock pop push sub lods (bad) xchg sub stos xchg test mov fldl mov jl mov movsb mov jns cmp sub fisttpll jo ret and jo (bad) push sub loope inc stos sbb inc test push push mov adc imul cs mov rcrl cmp push lea mov mov mov push pop xchg mov fmuls mov stos icebp in movsb xlat xchg xor test sub pop inc cmpl or fnop popf insl push loop mov dec jmp cli mov test call cmpsl fs jo fcomps dec orl adc nop in ret sbb or das lds mov je mov xor out shlb in loop movsl lahf lea call movsl fdivrl or roll xor mov jge xor out mov fisttpll ja fdivr and movsb stc or add inc pop push push call xchg mov ljmp xor out popa es adc and jg bound push popa imull nop fisubrl cld xor (bad) pop push mov sbb push std jl mov movsl adc ss jecxz std mov test push xchg and or (bad) out rorb dec aaa fimull pop pushl fist push sar jnp mov mov shrb dec and add lret inc jmp cmc imul fistpl pop sbb cli mov xlat lds and pop cmp mov pop mov daa int outsb movsb pop in jb std push mov jl mov out lret cmp push sub and jnp mov clc aaa mov push movsb insb addr16 cmp loope addb xchg lret repz loope pop xchg cmpb jmp xchg xchg mov out pop addr16 push xor cmc outsb fimull pop or adc cmp inc pusha mov or push ret or sahf lock shlb aad aas xor mov test ljmp inc add into pushf cmpl cwtl sbb push lods mov ret inc stos dec mul adc xchg rcll cmc (bad) sub fisubr hlt and aad or sbb xchg lcall sub in mov mov push cmp sub test add cltd or mov jp lods lods dec mov in jp pop fs jb sbb in (bad) cmp dec icebp iret add and cmpsb in mov arpl sahf enter int3 jo sub xchg mov mov rorb jl sbb mov aam imul outsl add mov push or nop pop dec fdivp pop mov mov gs sbbl addr16 cmp insb adc cld mov scas jno fs roll repnz add out xor adc add outsl mov lock mov push mov mov rcl sbb sti adc out xchg test (bad) std out stos ret xor mov (bad) fbld add bts imul (bad) in sub pop iret mov ret push insb lock inc mov nop xlat xchg or daa adc pop leave cmpsb aas mov inc mov xchg lock xor sub or test adc pop repnz lods pop outsl aad fisub in add int3 into stos cmpsl cli into mov fldcw sbb pusha ret sub mov inc and popf cmp and sarb jnp mov jne call add enter adc jle test popf aad lretw mov notb mov mov icebp mov mov push test or jae loopne adc jp and sbb jge stc test sub and mov vcmpsd push xchg cmp sbb (bad) clc (bad) ja insl cltd mov adc push test xchg jmp mov push inc call out dec das outsb jnp or xor cs lods test in push mov mov add call je cmp iret cvtdq2ps push xchg iret jno out fild cmpsb fisttp adc cs adc sti shll inc xor inc mov push mov movsl dec adc arpl cmpl mov (bad) insb pop outsl mov fnstcw sub (bad) insb sub dec mov (bad) xchg add outsb jnp inc ljmp inc xchg sub fs mov sub jmp adc jle enter push mov xor ror push fisttp lods push movsl cld xor outsl mov dec mov push insl mov sbb sbb inc jns out cmpsb ret cmc and add sub bound out xor sbb aam jbe lret add cs dec add mov push mov imul sub aad mov or enter lahf fwait dec pop (bad) xor scas cli push sub dec sbb push xor jnp sarb mov insl rcrl (bad) std add jmp lahf dec dec mov (bad) clc jmp gs daa ficoml (bad) mov leave and pop and adc dec lods xlat cmovb (bad) jge js (bad) imul or arpl in and mov sub cmp jmp sbb movb cmp mov sahf cmpsb cmp fistpl mov or sub or fnstcw lods (bad) push leave jno fwait int3 or dec call inc mov nop imul test inc sbbl nop mul (bad) adc js subl adc sub and ja test (bad) jae in cmp xchg in (bad) std out push (bad) enter push (bad) pop scas or sub adc xchg push lahf or jmp stos fs (bad) dec out jnp push outsl movsb lahf ss xorb xchg adc lods add lock int scas adc mov mov ret xchg daa divl aad sbb sahf call xor cmp add fdivr mov aam cmpsb sarb out jp cltd push mov fimul mov iret lret pop jbe mov popa imul fnstsw imul push mov jb cmp jae call sarl into dec ljmp jecxz subb adc mov jmp das (bad) stos movsb stos sub sub stos xor mov dec jle repz mov adc xor addr16 sub or lods push xor insl push cmpsl (bad) loopne lret rcr inc in mov popf ret dec addr16 lods pop test mov jmp daa sub lcall mov pop dec lods fnstsw cs out or ds push push and jnp orb ja daa mov add mov (bad) aaa pop pop sbb ror iret (bad) out dec jmp stc or sub or inc push jmp cs mov sbb push cwtl jg xor push push in int cwtl lahf (bad) (bad) fs jg in adc stos insl add fsts sub sti repnz xor or lcall or pop sub xor xchg jo scas test popf stos xor cmp mov pop push fistpll das pushf inc adc imul push push push cmp idiv pop xchg and pop andl outsb mov sub pop test ds xchg mov inc sub push fistpll push xor sti mov or (bad) xchg sub add jne inc sub add sti cmp inc jno aaa jnp or xchg mov out and and icebp pop adc add jl hlt mov ja xchg add lret cmpsl push add xchg hlt roll xor inc insl lret cmpsb fwait jmp insl mov sbb cmp fnsave add dec dec loope adc inc sar push fucomi jbe aad pop mov add inc (bad) lret inc test sub stos and jb cmpsb cltd scas inc out int or mov xchg jmp movsb clc push iret push sub es lcall push je nop xor or add fcomps das (bad) fistpll mov fadds inc dec imul ret decb pop push pop adc push ljmp movsl fidivr pop mov jno,pn jne mov xchg outsb push cmp rorl inc push cmpsl pushl shll jae or das test test and push aam pop jae int3 jge and jmp ljmp pop outsb fsubrl (bad) jnp pushf and add into push jbe movsb leave shlb fmull hlt inc push adc stos jmp push out mov sub cmp sti sub int3 daa jp jmp sbbl push (bad) or mov pop sbb mov push mov imul push in popf mov mov std outsb mov xchg pop mov sti shl or iret insl push inc inc cmp xlat fs outsb cmp push movsl rclb repnz and or ljmp int (bad) scas call sbb movsb sub mov int sub or and xchg aaa loope add stc dec arpl addr16 ret sbb sarb std rcrl into out xor lret sbb cld hlt push mov stos stc (bad) clc mov ss cmp cld mov test addl test xchg xchg dec push cmc int push sbb mov je push movsl adc pop dec in push sub jb nop insl pop lock jbe fcoml hlt fs inc fnstcw dec mov rcrb enter imul xchg xchg movsb push call jg push xor jecxz enter pop in mov sbb pop mov pop dec mov cmpsl xlat mov cmp jecxz inc outsb push leave mov mov push dec dec faddl and fisubr arpl jb bound push inc outsb out jecxz je xlat mov mov jmp mov pop scas enter xchg arpl lds or dec mov dec dec ss stos inc outsl xor ret out cmpsl jecxz imul cmp jg daa lahf jecxz lret loopne mov xchg and jge test and and dec mov loopne or push flds push adc add out call neg adc (bad) cli movsl popa mov loopne push xor sub lods cmpsb push cmpsl iret add sbb xor push mov lds popa dec or xor popf dec lret xor test xorb clc lcall jnp push out sub movsl pusha aas adc and sub sub fcmovbe xor scas rorb mov fnstenv aaa push in mov xchg jbe xor js mov frstor (bad) push sbb xchg xchg mov mov es lea dec mov iret scas dec mov inc fildll adc std mov inc add out cmp xchg push roll mov push je fnsave imul xchg xor punpcklbw scas loop inc mov je lods lds pop out mov cmp data16 aam stc mov mov adc andb mov rol and outsb mov sub dec aas js orl xchg es jne imul inc mov icebp push cmc aaa dec jb xor mov mov lods pop dec jbe add sub jnp imul adc test ret hlt pop or fistl int3 cmp shrl arpl pop leave xlat mov out xorl mov or daa cmp orl inc dec xlat push dec sbb or mov je inc push fcomps (bad) and sub aaa repz mov cmp push or inc mov sub pop outsl pop cli xchg lcall roll inc jmp push aam xor push mov idiv sti jbe push sub adc xchg test or pop je cs call rol movsl mov dec andb push es aam pop pop lret xchg push xchg movd loope imul cltd mov js dec rorl loope in sbb and cmpsl xor les sti inc out xchg iret subl stos mov pop push push inc xchg ficompl lods stos push push jne xchg stc lahf sub sub xchg in popf adc call xchg notb push sbb subl je jecxz add popl cmp jo lahf daa sbb jl das add mov mov icebp addr16 inc pop fstpl mov lahf push sti sbb icebp cwtl movhps scas mov mov repnz xor push mov ficom std out cmp fsubrl loopne incb ja loopne push fucomp insb push ljmp (bad) cmp movsl xor repz pop push push or lcall mov push cmpsl aas push add repnz cmpsb dec dec mov outsb jo jecxz mov mov mov ficompl out inc rol jbe pushf xchg rclb jo nop fsubl incb and sbb dec adc or push sahf (bad) or mov cmpsb gs mov xchg jne sar ja enter mov cmp xchg (bad) in and xchg stc cmpsb mov roll cmp xor sub add pushf inc xchg aam mov int3 mov aam inc pushf in sbb xchg sbb xchg imul dec cmpsl clc addps adc mov enter lret push cmpsb rorb mov sahf (bad) adc add jle and imul and insl (bad) in adc xor mov jle mov test jp in xchg test sbb arpl lret mov std lea movsb push adc scas lock and sbb mov imul and les sub inc mov push or test sbb dec repnz (bad) ss in mov mov cwtl sarl (bad) adc fistpl repnz jno lock ss ds jo xor inc mov sti sub and ficompl fs (bad) outsl mov repz sbbl outsl push jp sub sbb clc push les sub add pop jge jg mov lock fiaddl stc test xchg cltd addl xor mov push roll push jno xor jp lock mov movswl xor (bad) cltd in int out out (bad) sub push fdivr adc addr16 aas push pop jl nop jnp out or mov mov mov sub mov add arpl mov push pop add push mov fsubrs int3 enter test and loop xchg (bad) mov mov jnp push and pop mov cwtl fidivr into cmc jle shrb inc in push lods jo mov push daa in sbb xchg aad data16 sbb push push xor push in stos aas aam pushfw xchg and rorl or lock inc int inc mov roll and (bad) push in pop inc out (bad) xor and and pop sahf mov push shrl sub jecxz inc jno or or cmp cmp pop xorb sahf lea jg push cmp lds (bad) stos xor or jae inc mov pop sub push imul test pop sbb out dec shrl jb lock or ds jb stc ss adc and rcrl pop or pusha mov cmpsl daa pop (bad) loop lods sub and mov pop jne and push xor subl pop lret sbb cltd lret inc jo je or dec pushl and fisttpl int mov (bad) ja clc pop xor test sti stc pop mov inc lods test cmp xlat fidiv xchg inc jno,pt add inc pusha mov fcoms inc jnp mov pop and es mov test mov lahf in inc ljmp lds xlat or cld cmp movsl xchg xor sbb pop fincstp pop mov push mov pop (bad) aam or or mov sub lahf and sub mov push (bad) ds dec add mov inc rcrb imul mov cmp popf push cltd lcall jno aam jae inc add xlat std or pushl ljmp xchg lret jnp lods mov ds (bad) mov in add adc sbb out call int mov push mov lea out scas scas xor mov mov xor movsl adc add fisubr pop (bad) lods mov test pop leave movsl loop das (bad) mov mov imul mov pop in pop (bad) rolb addr16 xlat pop mov adc jne movl stos out xchg and lret sbb sti outsb pmaddwd pop shll mov aad adc mov inc mov movb fidivrl arpl dec inc je xlat in data16 mov cmp mov lds lods rcll (bad) ja roll adc jl je gs jns cwtl ljmp (bad) xor xchg (bad) jecxz push fiadd xchg (bad) or mov sbb js pop push jecxz pop inc mov dec xchg outsl or sti aam aas mov mov sub push mov inc sbb mov dec pop mov xlat lods fabs mov das rcrl sbb push sti daa fdivr sbb mov hlt dec syscall insl pop jae pop es mov int lahf movsb lods test and sarb neg lahf inc pop xchg mov add inc pop fsubrl leave mov mov fnsave das pop cmc pusha add ljmp lcall outsb mov iret in repz repnz fidivl clc lea inc movsl imul je aad stos push (bad) cmp jnp cmpl mov cmp test bound aam pop mov pop bound stos shl aas cmc add push mov popl loop add or scas loop inc into ret adc jmp lods dec (bad) cmp push data16 xor lret xor jg in into sub test ficompl and mov or jnp xor cmp xchg sbb dec fwait mov push mov lds sahf mov int3 dec cli insl and jbe repnz lock fdiv in xchg add mov cmpsl jg ret subl loopne in test xor popf or add ss xlat cld out popa das jmp pusha pop push dec cmp and push push sbb les xor dec dec nop lods pop mov movsb pop mov lcall dec lds cltd mov dec pop lds or (bad) aad cwtl scas push sub dec cmp fstpt (bad) daa icebp push pop pop loopne lea jecxz,pn lds pop cmp mov sbb dec jp cmp push sub enter cmp sbb jb dec rorb xchg loop inc call xor pop cmp (bad) sbb sti lods add jg push js jns lcall pushf leave sub aas mov ret lret cmp mov lahf lret test mov sbb hlt test dec mov push lods pop cltd jmp push sbbl push leave jge push add mov mov mov inc sub loopne rcr mov dec sbb sbb pop pop adc mov fist sub push jmp ljmp fistpll pop and mov addr16 cmpsl pop mov mov das arpl cld cmp pop lods xlat hlt adc aas es add push cmpsl scas lcall (bad) loope or mov xor jae xor or (bad) mov repnz pop packsswb dec mov xchg aad dec aad adc add xor push xchg mov loope sbb movsl hlt ljmp ds in inc push cs inc nop pop push jg xor sbb (bad) push mov jno enter loopne dec mov mov jge testb lret repnz or sub xor mov stos dec (bad) mov sub sti cmc test cmpsl ljmp dec pusha sub xor cwtl mov outsl mov or push lret sub popa lods push sbb fwait ret add jmp ror add dec call (bad) xlat jb pop jmp push stos fs adc push cmp jo ljmp xchg sahf xchg dec in sub (bad) mov cmpsb sub clc mov jmp jns js cmp lea dec iret sub mov jno in test push pop mov cld in mov mov mov add xor xor cmpsb adc pop inc dec leave test push push cmp sbb mov sbb inc push push ret cmp ret into dec sbb cmp sahf jb dec mov aam xchg iret jbe xorb push cwtl dec popf jne ds sub clc push sub xchg pushf lret inc lds ret xor bound push push sub cmp ret cmp lea pop inc or and cmpl dec and push (bad) jno std repnz inc xchg out cmp dec mov add push clc sbb ficom rcll or nop push aaa xchg push sbb bound xchg leave cmp sti jae ret push inc inc sahf xor popf (bad) push out lret ja push push (bad) mov mov add scas daa sbb stos loopne jnp add jne (bad) xchg mov xchg pop or lret dec icebp mov add out incl inc push or insl or mov imulb mov aaa test mov fdivrl iret test stos jnp jmp adc inc cmp cmp cmp push mov loopne dec sub and mov fsubrl rcr pop out and xchg outsb xchg mov add inc jge outsl lahf dec movsl pop pop inc lret add xchg or aaa pop fs out (bad) fldcw int3 lcall sbbb sub pop arpl mov push inc fsubs adc pop sbb loop add dec jge rol outsl dec adc enter icebp js push mov sub mov and pop mov jae lcall aad test (bad) jne loop test test lock add out adc sbb lods mov jb adc pop in les mov stos jb xlat out fimul dec jl cli dec cmc cmp lret loop pop or popa flds push mov (bad) adc lock inc pop jg jae mov mov xor xor sub imul lods push dec jnp pop cld xchg bound sbb arpl sbb rcll push stos jae or pop or enter pushf loop sahf sub mov fnstenv bound mov test hlt jo add mov aas mov enter mul and mov imul (bad) mov rorb cs arpl divb sahf icebp adc or outsb inc hlt stos mov xor shr das mov in imulb sahf pop addl jo cmp mov je inc mov ja mov pop xchg xchg ja pop sbb and or in xlat cmpsl push lods and stos cmp test insb xchg cld push ret rcll or cmc inc or mov repz rcr lea js xor mov inc pop mov xchg pop jl pop pop xchg sar cwtl (bad) std fdivl mov data16 lret cmp adc stc jb lods imul or insb outsb into xor rclb clc dec xlat adc ljmp jp mov arpl fcomip dec cli (bad) hlt mov fyl2xp1 in adc mov inc test cmp mov jge and sbb add pop mov push loop and and mov stc xchg (bad) mov sahf mov adc js sbb lods (bad) mov sahf repz xchg arpl and dec sbb ss out cmp push mov inc (bad) test stos adc test push adc pop ss mov ror xchg push nop imul push in sbb push jb fs movsl cs in or out jle jns mov test and push out fiaddl faddl subb cmpsb (bad) shrb adc fildll int3 es adc lahf xchg stos (bad) imul jg lock lock pop les jns jle or out mov out xor push test enter add cmpsl insb mov dec gs or jle sahf add cltd mulb negl cmp lret cltd shll sbb ds mov push mov mov scas jo or add adc movzwl rclb or add std ljmp xlat mov (bad) imul lahf lahf lods pop rolb push repnz subl movsb mov sti cmp popa pop loope lcall cmp scas mov out mov sti mov sti push jbe mov movsl inc add add ds pushl sub aaa psrlw nop and add or repnz push inc sub pusha pop adc (bad) loopne xchg iret jp inc push ljmp cmp (bad) imul mov xchg inc mov inc xchg mov cltd push mov rcrb hlt dec insl xchg movsb inc int nop shrb fildl xor push push mov daa movsl scas xchg (bad) dec in add adc dec jl jo insb push jg enter fdivrl pop or hlt hlt xor adc clc jne (bad) pop adc lds mov push sbb lahf sbb into lret inc push jge push inc divb jno imul daa sub add xor xor orl jmp jb (bad) clc mov ret scas lea sbb psrad test into js lds mov cmp je leave inc (bad) and (bad) mov outsb js inc pop mov cltd ret pushf jb add enter call lret cltd inc popf mov xlat rcl xchg outsl mov xchg pop mov mov sbb cmpsb push mov cmp mov daa mov enter loopne sbb aad inc subb mov in hlt xchg pop clc mov lcall mov dec sbb xchg insb add pop repnz idiv mov mov rcrb icebp push jg sbb xchg and push movsb jns dec and je dec dec add xchg jb and dec or mov push inc sbb popf sti sub jb mov xchg mov insb data16 int3 adc fnstcw (bad) out pop mov jl mov inc sahf sub fnstenv add mov inc idiv mov cmp bound inc adc pushf xor adc sub xchg dec insb or pop dec pop sub cmpsb addr16 pause repnz and fwait out xor inc mov inc out out mov test inc pop test add mov mov push in pop or ss fs inc lret out (bad) insl daa pop sub pop mov je jae insb jo movsb imull mov jnp addps mov fdivrs xor pop lock loopne and ret jnp mov shrl (bad) jbe and mov add fiadd dec xchg es jns das ja mov lret jmp (bad) cmp adc into push jb movsb push push xlat lock xlat mov jle pop jecxz cmp pop leave shrb lods inc cld xor jno cmp cmpsb int inc ja sbb add mov (bad) mov mov hlt push pushf pushf and icebp xchg push fs into jmp ret cmc icebp xor ljmp or mov sub test push pop into decb sbb cmp push sub push ret jno dec or sbb add cwtl and xchg jo sbb pop mov aam xlat ja cwtl and jb lock fnsave in xchg push lds pop pop sub sub sub mov popa lret pop pop and frstor stc jae cltd outsl cmovs jnp es stc jge andl mov mov add popa mov stc xchg jecxz popf test in pusha mov dec push out data16 jl cwtl xor jb adc int dec js inc jl pop add (bad) js push fs push dec cwtl sub iret lcall fcoms push lods pop xor xchg out lret lahf and out push pop sub sub ds pop xor arpl cli mov jns gs data16 dec mov in cmp inc pop sub stc pop (bad) jae or pop fistp adc ljmp fucomp inc pop push sbb lods xchg pushf nop iret stc ss xor cwtl sub les pop (bad) push repz shr adc sub fdivrs daa lahf js arpl add inc fidivl and mov aaa push mov cmp xchg dec roll loop out cmp pop dec loope push adc push out pop dec enter mov std mov push outsb jnp aaa mov fmul xor or ror inc ja int3 fwait or jecxz iret test leave xlat outsl addb add xchg andl xchg cmp jns cli cmp xchg std jne (bad) mov mov or or jnp mov push hlt incl xchg pop sub dec outsb loope pop pop push out out jmp daa dec xlat repz lods fistpl xchg jae sar daa popa lea jecxz or cltd dec lods adc clc (bad) mov jnp mov mov jns lret lods mov cmp mov ljmp and pop add mov out sahf mov lds iret push test pop sbb jp rcr ret cmp xor push cmp xchg mov (bad) inc mov jp push repz and jno insb jecxz in dec pop les lret jnp in lods je ja dec or dec mov dec loop dec cmpsl sub jle push sti sbb cli test push (bad) push and sti jnp test jl jbe mov sbb pop movsb sets jge insb dec mov adc inc mov push jl mov mov adc pop mov fnstsw je or mov repz cs and lcall pop repz loope test push push jo dec ljmp ds les add pushf in mov rorl and jmp not cmpsb or test and iret ss (bad) mov add in iret xor push (bad) repz negb hlt mov test int3 rcl xchg mov xchg cmp mov adc ss leave cmpsl hlt pop adc js mov mov js jne out outsb cmpsb dec cmpsb loope add test in adc pop cld mov and aad aaa mov std loop push fldl popf or out test xor xchg dec push test addr16 js popa or data16 testb adc mov dec push insb in test or add icebp jge scas cmpsb or aad and mov je aad add pop cmp adc cmp (bad) mov sub insl push fiaddl jg hlt adc hlt jecxz addr16 ja (bad) addl fistl xor stos mov int mov pop out mov xor clc dec aas pop mov dec fsubl push xchg out sub mov ret xlat dec add xor arpl pop fpatan mov jmp cli (bad) xor pop out test cs mov daa sbb or mov cmp sub mov sub dec rcrl xor movsb movsl imulb roll cmp (bad) stc cmc jl outsl sbb sbb mov into jl icebp in (bad) fwait xchg xor add fdivs or hlt sub repnz stos or push (bad) lds xor inc xor or into pop nop or inc das sub sbb test ds cmp ljmp imull cmp push dec inc and in inc outsl xorb push mov xchg stos jg cmp sub push or mov loop xchg inc cltd out pop insl (bad) enter pushf push fwait cs lret mov in or cltd adc gs popa add push mov inc mov adc xor push stc in sbb repnz notb pop popa lods mov fildll stos in mov inc cltd sbb shr jl test scas jge xor clc push add ret add cmp aad sahf ret and mov xchg repz mov ljmp xor xor popf stos push pop sub or test outsb cmp imul inc cwtl repnz movsb inc out insl leave cmp push cmc scas jb fwait cmp aam inc push pop clc xchg xor popa in add push mov pop les inc cmpsl inc push pop inc loope stos add adc sbb pop jns cmp ret jge jecxz ljmp shl aad (bad) jmp ss xchg test les mov movsb jb lods xchg mov add mov push sub nop fistpll dec cmp loop push (bad) cld push xchg sahf stc sub shll add add inc jmp (bad) xchg icebp sarl cmp mov mov ljmp pop pop push sbb pop or dec popf outsl xor insb jbe dec call mov pop lret int3 stos incb adc jne cld jl mov leave ljmp push fcmovnb lret push push movsb das addr16 xor sbb movsl in repnz icebp push inc mov and adc lods push mov les fnop cmp sbb xor loop mov jmp out mov and out and daa pusha int lret sbb lcall adc push cmp sbb insb xor mov push popf aad nop imul lahf aam mov push jle add xlat das xchg loope mov mov cmc fidivl shrb cmp ret mov sbb sbb jmp mov and sbb push fistpll out loope cmp dec enter jns nop push add mov xor das mov pop dec (bad) mov addr16 inc and imul stos sub (bad) cltd lret dec out enter in pushf push jg rep dec pushf mov inc ljmp in sub xor (bad) std dec inc cwtl xor add xchg mov and addb sub (bad) scas cmpsb pop pop hlt pop add dec sahf out xchg add mov out mov (bad) jg out and cwtl add out in xlat shrb and pushf fnsave ja inc inc aaa js sbb jge in fld ljmp xor test test dec in bound sub jae lock fcoms aad cld loope loop adc sbb mov sub stos push les add xor fucomi ret aaa mov pop mov shlb mov ds fwait jns,pt mov jg push mov dec cmp xlat cmp adc adcl dec jmp int and jo push out flds push xchg mov inc pop jge xor adc mov adc pop mov push jmp jle sub sbb subl mov movsl outsb adc mov xor xchg pop stos xor dec aaa loope nop insl inc push cmpsb or pop fwait repz add pop stos push jnp xchg nop mov or jle in fldcw (bad) push cld ds movsl or out inc adc xor ss call cmp jmp lret outsl lea xor inc sti adc dec dec push ljmp mov sbb push fimull inc cmpl lcall lret cmp lods stc fistpl aam pop out scas pop in inc xchg pop add cmp pop lea addr16 sub es and mov xor cltd lds and jo sub push daa ljmp lret mov add das mov in or (bad) dec loop sti je (bad) xor in cmp in add mov and jb aas orb xchg in popa repz push sbb bound mov sti pop popa frstor (bad) adc jp mov and mov xor aas pop xchg adc xor loop ss ficompl xchg dec (bad) pop sbb pop push scas cld pop arpl adc clc movsb pusha fldcw test pop in dec mov movsb lret and pusha cmp insl xchg cmc pop in inc push sub or xchg mov popf ljmp cmp outsl or push addl adc xchg mov aad repnz and pop mov fs push xor (bad) adc notb xchg popf dec cmc call mov and andl lret fidivr addr16 into insl lods js push sub (bad) mov inc mov enter cmp add std cmp push cld jnp pop pop or scas out (bad) cmp cmp push frstor xchg andb stos mov cmpsl (bad) add xchg mov mov jmp jno in pop cmp rclb subl push xor ja iret inc add popa xchg jb jle add movsl cmp jecxz mov dec pop mov movsb add cltd popa pop sub loop cmp xlat es xor stos hlt mov clc push mov adcl dec push pop bound jg shrl lods repz (bad) mov inc cmp sub in mov sbb popf jle ljmp mov out test movsb push stos inc (bad) fildl cmp pop pop mov mov stc pop jmp xor lock outsl jecxz jg mov les inc arpl enter mov frstor pop cmpsl or (bad) addr16 or push dec pop cld test out negl fcoml fistl sbb rorl cmc push lret inc loope fnstsw jnp cld scas jae (bad) adc pop push cmp xchg (bad) xor xor inc xchg xor icebp sbb ret aaa cmpsl shrl lcall lods adc out pop push call addr16 shl int3 rcr enter push pop shll inc inc (bad) mov cld cmp loopne shll push add inc push push test dec sahf stos xchg fisub mov sub aam icebp or xor xchg sub int imul sbb pop mov mov cltd sahf imul push movsl inc mov inc cmc movb movsb rcrl inc mov mov push or xchg in fistpll mull jns lock (bad) in fdivs push jmp mov inc imul ret leave mov fsts fisttpl xlat imul cmc mov inc add lds shll ds add into sbb (bad) aaa scas xchg into cmp popa push out mov xor lcall sub dec lret xchg adc xchg rcll inc jmp repnz xor inc imul inc cmpsb icebp sbb push and ret dec push test arpl andl sub mov (bad) push into pop inc nop dec arpl ds stos movsb pop mov sub cld push add xchg repnz ljmp mov adc (bad) mov cli jae in jbe mov (bad) out mov jle sbb test outsl fstpl inc pop sbb mov adc add cs sarl mov arpl jl pop mov xchg jno out sub pop outsl in shr (bad) or push cli ret adc pusha cmp test xlat pop jmp add cwtl (bad) ret cmc addr16 dec mov jmp sti inc jecxz add imul jecxz pop out shll mov jecxz or xchg sub fldcw mov aam push dec push sbb movsb out aam mov mov movsb lds idivl xor ss repnz jg sub sub out and pop push push out imul jmp movsl add in xor (bad) sbb (bad) sbb aad inc sarb popa mov lods movsb negb clc imul idivb cmp cmp stos sti mov (bad) mov xor push cmp push rol push popf les andl lods mov je lret jg arpl add mov mov nop xor and push mov or cltd fidivl sub push (bad) aad psrad sub pop in shlb add fistpl movsl mov sbb imul (bad) mov xlat test bound cmp inc fsts jae sub mov arpl mov ja add fcmovb push jnp (bad) jb mov jmp mov (bad) mov lock movsl jmp mov xor lods push (bad) mov push jns lods jmp mov jp (bad) movhps mov je mov inc ffree push or insl push and pop add ljmp or lahf jl dec xchg sbb jg jp (bad) mov rcrl stos mov repz mov int3 lds movsb push hlt cmp lock adc jge dec inc mov dec dec js mov jno push mov push mov xchg loope jp mov dec cmpsl pop mov bound pop outsb shrl shrb xor (bad) mov xchg lcall loope mov cli fildll leave sbb lds push stos je pusha insb in jmp in imul pop lahf popa fcmovne jno (bad) lahf mov cmp cld jno ds cld ret pop sbb mov in subps les push sub (bad) gs push mov dec adc dec out sbb jl xor jo jl jl xor iret lahf jl jle fist jmp call push std add mov sub cmpsb inc jecxz lahf push cs popf mov xchg je cmp (bad) lods adc insl xchg das jnp je test addr16 rorb icebp mov adc out insl mov cld psraw mov push fstl adc and insl cli push mov imul ret cmp in inc popf mov pop xchg insb lods or sbb jo push test das pusha popa jmp lea xchg jbe call xor neg clc rcl mov mov adc push cmc cwtl mov add stos loopne push leave jb hlt mov pop mov and push test loop jb xchg ja pop aam xchg add loope les dec loope pop sahf adcb push jle sub nop or cltd es adc out (bad) jmp mov daa dec xlat insl sub dec mov cld rol movsb dec and mov fucom dec mov xor and xor xor movsl push mov xchg mov rcrb nop or ds push fnstcw mov nop incl pop emms sarl add xchg and or lahf push arpl cmp (bad) into out cli mov xorb xchg inc dec sbb shll lcall stc add cmp lods pop ss adc xor jge (bad) and cmp fdivr shr testb mov mov aam adc loop sub inc add dec data16 aas ja outsb mov cmp xchg js fdivrs or jno xchg push push sti stos fdivl test fsubr fistpll stc frstor push or lret les add mov popf sti push add aad test mov lea loop fisubl xchg and push xor mov aaa fwait jno push fidivr sbb push test cld (bad) mov pop lods jnp js sbb das cmpsl aam xor sbb imul sbb xchg sub cmpsb jle sub jns mov jne jo cmp mov adc jp xchg mov mov arpl imul out fcomps jp push lret mov xchg or mov xor in dec mov mov in push popf push mov test mov xor cmc fstpl out sub pop rclb mov (bad) add lret add cmp cmp cltd mov jge xchg cli xchg adc das xchg imul lahf (bad) cmp notl push iret push mov pusha out rcrl mov ja adc repz fisttpl aaa sub mov and nop add fcmovnbe pop or (bad) xor adc jb mov outsb insb nop mov xchg sti push outsb ds aas ljmp xor (bad) or je jp jae add cmp push pslld rorb xchg inc jnp sub jnp fnstenv outsl and mov loopne dec cmpsb inc scas movsl push out ret xchg mov xor in inc xchg jecxz sub pusha (bad) cwtl int3 or je mov cltd cmp call add inc dec mov fildl jp ja ficompl pusha inc (bad) insl jne xchg sbb mov loope test dec call popa loopne mov adc rorl push js sti push jmp pop loop add push push je in cmpsb je out insb mov mov repnz call ljmp pop mov fsubr jns adc loope fdivr or pop pop adc (bad) mov xor leave das sbb lret mull repnz mov outsl pop test sub ljmp (bad) insb pop lods (bad) adc sbb in add jnp repz and pop (bad) dec cltd gs fnop (bad) ss pop lcall lods popl or add int3 and lods xor inc sbb (bad) push push stos stos movsl fnstcw push int mov push (bad) js mov adc (bad) outsb sub mov outsb fxch ret and pop (bad) hlt (bad) mov or fsubrp rclb lea imul rorb out ss mov pushf sbb mov mov cmp out inc push lds sub test lods cs push mov push rcrl das std add mov fdivl or sub xchg mov cli gs jns add test mov mov push rorl pop push dec cmp pop in xchg mov mov jnp das jae cli pop daa mov lcall sti ret dec imul adc rol push mov test pop aam fistp gs xor rolb jle (bad) leave mull mov pushf (bad) jg fwait and scas cwtl dec pushf ret push xchg pop mov push lcall sub popf out mov insb pop stos stos int3 push xchg lahf add out and ja xor test repnz jmp stc mov cmp movsb push jns xor xlat push push movsl insb mov addr16 mov repnz inc dec sbb push mov outsl test stos in fisttpl test pop mov into mov gs out daa adc add pop jnp sub cmp insl or xor test out xlat sbb sbb mov mov push pop in xor dec push lea xchg inc imulb pop fisubl lds mov mov add cmp lea pusha push cmc imul xchg scas push iretw cmpsl dec ror add lock orl mov or inc inc mov les dec fstps mov or popf adc sub mov mov inc jbe and dec xlat xchg insb and ficom daa ljmp and adc lea movb test adc ret mov push jo addr16 icebp bound ret mov cmp and pop (bad) or push push cwtd je push (bad) jmp (bad) xor xchg push pop xchg cld or repz pop mov cmp mov or mov mov scas cmp jmp jno and fs xchg loopne,pt cs jle repnz loop ficomp jmp add je sbb (bad) shrl cmp into sbb mov xchg jl loope in add aaa pop push dec xchg and mov sbb fmuls jle lods add dec or (bad) dec sbb dec xor loope xorl cltd divl lret add mov jnp and push out (bad) inc rol adc js push enter push mov rolb ret (bad) rcr or mov cmc and push push call repnz dec scas repz xchg cld scas pop and imul jnp cmp xchg mov adc pop add xchg cltd sbb xor jnp sub pop inc not mov movsl mov pop mov lods test xchg lea in mov mov mov scas sub mov (bad) mov popf (bad) stos stos jnp je pop (bad) into cmpsl mov push sub ljmp lea mov sub lahf sbb ds add cltd mov ror jle mov lods add jb popf mov push push shll mov mov mov repnz adc jmp inc push test fdivrs push add mull mov adc and ret lret jge insl loope fdiv push out and pop inc pop pop mov fsubs outsl in xchg pop jns jbe inc fisubl pop loope cmp jae mov xchg orl dec inc pop addr16 or pop gs adc jno inc insl xor (bad) testb repz lret daa mov mov scas cmp cs stos aas std mov imul add test jg inc sahf int3 push leave imul imul jno insl xchg pop dec in dec sarl idivl and jmp sub mov icebp or addr16 push andl out pusha inc push lods fwait push push adc loope frstor std mov (bad) idiv fcoml adc js xor adc movsl jmp push dec xor push movsb inc test cmp adc push jbe push or pop and imul (bad) lock dec lret std push sub mov stos add dec ret xchg jp arpl jp (bad) add cwtl int3 std dec xor mov lods pop pop inc scas dec flds fnsave (bad) (bad) push mov push loopne xchg and sub pop push in dec ret mov movsb push fsubr xor aad aas lea xchg cmp mov xor popa xor or mov xor pop and loopne sub cltd ret cli bound test stc sbb testb or jmp repnz mov je xor push add jnp mov mov pop sbb mov pop lret arpl pop rclb adc or mov pop push aad xchg aas ds (bad) pop out xchg ss gs mov outsb sub sub inc out idiv add or aad call xchg scas call pop fstpl lahf and inc xor data16 ret leave xor mov imul push mov sub fcoms out cmp pop xor es mov or out mov (bad) cmp sbb inc mov cmp movsl push jbe or push push fcoml mov adc stos int3 fwait cwtl or xchg xchg scas mov popa mov or iret xchg cmp cmp xchg idivb sbb scas add mov (bad) mov inc xchg xchg pop icebp jle mov nop mov add popf stos add shll lret xor and or xchg xabort dec and es loopne xor (bad) imul subl xchg push push and shll idivl pushf out imul cli rolb dec add lds pop fdivr mov dec pop push ds movsl daa test sub les mov push (bad) je or mov insb xchg mov fs out cmp push xchg movsl divl shlb ss cld add mull sub mov mov inc dec sbb outsl les stos scas and iret cmp dec aam inc test push bnd adcb pusha xchg std popf fisub push je mov cs adc outsl dec mov and mulb push sub dec mov (bad) lret mov pusha (bad) repz iret rorl subl and sub jmp sahf push add movsb iret mov out lds xor outsl xor testl add dec inc mov jbe movl add jnp push repnz inc cmpsl enter aad mov or mov pushf dec push jl fdivrl addr16 and iret pop cmp xchg dec ljmp xchg imul xchg fs jle adc mov push dec mov add into cld loopne sbb and mov dec mov lods xchg (bad) mov mov mov (bad) gs adc xlat sbb lret sub (bad) mov lahf jge xadd imul dec pop lods and inc push cmpsb idivb aaa push adc xchg push mov clc inc fildl fildl les sar je ds sub rcrb aaa pop frstor ror mov fwait mov daa in mov out sarl cwtl xor dec pop xchg std mov push int3 insl mov pop rclb (bad) dec xchg sar test jge xchg mov insl bound or ds mov jbe xor xchg out xchg xchg adc cmp scas push jmp pop cltd pop mov adc data16 js xchg jns lods mov and sbb and (bad) cmp pop sub cmp mov adc xchg stos inc aam push loopne xchg mov addl cmpsb jmp bound adc mov test add or loop,pt movsb leave loopne lcall pcmpeqw pop in lahf fimul aas mov mov lahf test in ljmp jnp pop mov jo (bad) mov icebp jp cmp scas dec push xadd push inc (bad) (bad) xor jle test mov cmp xchg es ret cltd je (bad) cmp iret out outsl adc cmp jb hlt mov push sub (bad) xchg roll in mov mov fdivs jbe mov pop mov nop movsl cmp mov mov sti das sarb arpl and sub cmp addl or adc adc add nop lods negl dec arpl imul mov lods mov cwtl lahf push js lds dec (bad) scas (bad) popl add (bad) mov lahf movsl shlb mov dec pop (bad) and ret sti xor push call adc lods cs push mov mov mov clc xor cmp cmp inc and repnz pop out pop mov pop in aas fs in aad in xchg push pop sti std insl push mov mov xor mov sub xchg sbb das bound aaa js jmp out cmp adc mov das pop mov ja add jle addr16 loope mov jo leave mov xor sbb sbb popf cmpsl adc adc adc pop push fwait lods pop sar mov add adc clc jle and imul stos jbe mov jb adc or dec dec loop into pop jb xchg xchg adc imul dec movsl add adc mov mov aas call lret nop sahf not mov rcr push dec in sbb mov inc in (bad) call out dec mov mov cwtl mov and jp ja sub mov jmp outsl les xor orl test mov fs pop mov insl insb stos movsb sub lret jp sahf hlt xchg std andl pop sbb cltd sub xchg push lea jp jb movsb fsubrp outsb ret in or lahf mov pop hlt mov and ljmp and jbe inc jmp sbb or cmp int push add cwtl test cmp loop das mov das inc and pop dec aad sbb pusha push cmp fimull mov mov gs mov es cmp pop insl sbb lcall adc cltd push (bad) lock scas ds testb (bad) mov xor pop pusha cmp mov push or dec sbb dec imul add cmp loopne xchg and aad stos jge sarb addl mov mov in stos loope push sbb bound subl flds jmp sarl mov sub data16 cmpsl adc dec (bad) aas inc mov push mov lea sub int int fsts int3 ljmp mov jmp and cmp push mov and imul leave inc sub xchg push (bad) imul push add push scas add adc jns or or (bad) repnz movsbl and xchg mov movsb push jp iret jp je push and xchg iret lock inc push ret je jp testl mov inc mov pushf mov lcall add div cmp movsb jle cwtl mov loope jbe es loope (bad) lret sbb push (bad) pop aas and jge insb fstp (bad) xor jo and (bad) jg cmp (bad) pop sbb dec repz jns (bad) subl lcall popf insb push lods (bad) stos mov leave cmp int3 sub iret es aam inc jne cs adc fnstcw lahf mov ret lret xchg jmp push cmp add fcompl sub packuswb and insb or pop dec divl cwtl into adc fdivl pop fnstsw test adc (bad) (bad) movsb mov mov scas sbb jecxz mov aam cmp pop push ljmp lea out mov test sbb jmp cmpsb int push push test push mov xor ljmp fcompl adc and add jns fist outsl ja dec inc push xor pop iret sub negb inc or mov adc pop mov push sub movsl int3 pop mov mov clc daa or leave cltd hlt and (bad) cmp dec mov xchg rolb fimull mov test jae xchg jl xchg mov lret lcall inc and or inc leave je cwtl mov cltd imul pop fs xchg push adc into xlat pop insl stos push xchg sarl add int shrb loop out mov xchg mov icebp mov mov hlt push xchg pop or rclb pop pop inc push cwtl mov scas in out mov mov jl lcall stos outsb aaa lahf out or in mov push mov lret cmc push jle fabs lds mov fwait (bad) int push push arpl and pop testl into pop lea push arpl daa js jge and into xor in mov fdivl dec stc mov fisttp jmp mov lret adc movsl cmp ja sbb cmp xchg xor pop and fmuls sbb mov add cmp and dec jo sub mov sbb jo xchg xchg out test jno or mov clc inc repz jp lea ficompl pop jae cmp or lock (bad) cli cmp test mov jo xchg aas outsl int cmpsl or push inc ret pusha xor or imul jecxz fwait popa (bad) rcr or mov mov rorl divb loope and cmp jl sub lahf xor jo sub ja movsl and outsl inc cld cmpsb aaa mov lock (bad) fnstcw bound int add mov enter loopne or jmp sti mov stc push mov dec sub fistpll pop (bad) xor cmpsl xor xor adc sub mov pop pop test scas loope les in jae xchg jae cmpsl xor mov pop shlb pmuludq and mov add aas cmpl jl gs gs int push cmp mov mov mov shrl and dec fdivrs mov pop in push adc fwait xchg lea in iret cmc inc insb mov cli mov jnp lcall push cltd test push sbb or into cli mov add dec adc inc mov and push or or mov dec (bad) push pop rcll cmpl mov fidiv rorb lahf push push arpl ja jns dec hlt dec xchg out out sbb push das sub inc sub or mov ret lods shl cmc stos sub imul xchg or (bad) test dec cwtl insb dec inc cmc fxch cltd aas outsl adc jmp jmp jns imul xchg or push in (bad) sysenter sti stc add push inc outsl xchg xchg pushf sub mov sub test sbb (bad) sbb mov ret cmc ret movb push or adc fdivs or mov jle cmp fstpl cmp cmp dec xor mov in xor sub mov jbe ljmp mov cmp fbstp or xor inc jl pop push jmp dec popa xor cltd roll and pop and pop adc es (bad) lods ret shrb pop fcoml loope jb (bad) lret fstl push jmp mov pop lcall inc and sar popf push add in ljmp cli cmp xchg adc mov leave xor leave and sbb sbb add daa xchg push inc mov call pusha pop (bad) cld mov inc xchg ror es loopne (bad) cmc int3 pushf outsl out push outsb mov ja sahf fcmovb ret jb mov ret mov sub mov lock imul push cwtl pusha mov and jbe lret pushf add adc add add in xor repnz bound mov pop dec xchg or inc push sub nop push bound cmp push adcl ds loope add jmp sub pop dec imul into mov fwait das sub inc pop xchg shrl je aaa xchg dec mov test cmp inc xchg aaa loope fildl movsl mov mov adc ret xor inc xor jmp fcmovu push ja jle cmp mov mov adc gs popl cmpsl test inc loop mov jo add (bad) push xchg push adc pop push fistpl mov pop add inc mov xchg jp in lods xor dec inc dec icebp out pop ljmp js mov push ficomp pop xor pop repz push popf add xor inc mov xchg shl jnp aas mov inc sbb push inc mov push jns jb xchg adc xchg mov mov pop mov mov xchg mov dec sbb idivb add out add jl xchg or inc inc std adc push jbe jmp push xchg pop negb adc mov pushl dec push dec out faddl jg roll add push lret fstps adc xchg xor test es fisubr dec sub xchg pop rcrb or push je xchg lods xlat sub fnsave xchg repz jp andl pushf mov roll sbb xchg loop (bad) xor mov in ret xor clc xor data16 lcall imul jmp mov pusha mov imul jns pop dec dec add (bad) mov and les mov xor fwait mov addr16 jge xchg flds or pop add cli movsb lcall (bad) std cmp add (bad) iret insb rcrb and mov jecxz inc data16 addl and xor sbb aam out sbb mov lahf xchg and mov mov mov test and movsl inc sbb add cs sub pop idivl mov adc sub imul pop sbb mov aas fucomip rclb les fisubrl dec (bad) xor dec fdivrs jmp fwait push repnz sub xor fs movsb mov mov dec mov aad lret fwait enter xchg mov cld cmp idivb push in xor insb mov stc fisubr movsb mov or in movsb mov stc xlat test jb jbe sub xor pop out or xchg ret insl lds or daa push pop adc dec inc daa inc aas push movsl sub inc pop test fmuls inc jnp movsb or adc mov cld push jge dec inc ret in inc sub sbb add in (bad) mov push inc jbe rcpps pop mov sbb mov jl and arpl mov mov loope sbb xchg icebp push sarl and sbb sbb stos fnstenv mov cmp pop xchg jo repnz outsl jle outsl fstps lods lcall ds les xor push lcall and aaa fstpl mov add jae stos daa inc in sbb adc inc sahf leave cs sub xchg xor jmp xlat sub hlt (bad) xchg xlat fldcw data16 fnstenv sbb xor sahf jle sub cmc call aaa and in sub inc sub fbld fisttpl jp daa xor je test sbb cld xchg js lea adc inc jns (bad) mov dec aad cmp mov xchg out sub push stos add test lret cs dec xlat add pop gs mov cmp xor (bad) std jb xchg test jg jns cld pop in aas movsb push nop/reserved cmp ja pop bound mov xchg push xchg pop stos lods and shlb cmp ret lret test lods mov add ret lcall sbb or iret cltd sahf pop repz (bad) push jg cmp stc aad dec xlat sub popa jno mov inc es pop test pusha mov scas xchg (bad) jb add call jmp pop cmpxchg jle div cmp sub push push ljmp popa dec in repnz mov std insb ss ljmp aas jmp (bad) aaa les push lret jne mov push aad hlt sub push dec jmp (bad) cli mov push inc cwtl jae or bound dec loopne das mov loop aam int outsb (bad) int3 fs leave pop pop rclb mov cltd fadds int3 int3 pop out inc stos imul in cmp fisttp sub cwtl mov sub stos ret aas outsb out fild repz data16 pop or sbb fimul mov xor ret aas lcall mov lahf or test adc arpl test dec dec data16 xchg cmp out arpl push stos sarb mov shrb and pushf fdivrl imul std jg lock test cmp test xchg dec hlt push and test call push (bad) fidiv push push ja xor into test lods lods pop inc lea push inc mov jo cmp dec (bad) aad adcl cmp pop sar jne cmp mov mov push jo,pn (bad) mov iret cmpsl push sti test adc inc lods sbbb xchg and inc andb xchg nop aaa mov xchg mov popf jmp jne add icebp push in lahf mov cmp add lds jecxz sub push rclb jnp aas mov jmp sub dec roll jno jl xor (bad) mov sbb pop pop xchg mov and into sub xchg (bad) fsubrl out pop push or push mov nop sub rcrl fs bound das je mov jle push std loope xor cmp jmp inc fcoms ja push push sbb fidivr jo scas xchg mov nop clc jge mov jnp (bad) int or das (bad) arpl jno push clc packuswb xchg adc pop fwait loope mov daa jbe aas aaa insb out push sbb pop aaa and ss push pop cmp rcrb push movsb in push jg inc repnz xchg push cs adc and lds mov addr16 stc (bad) out lods cwtl jle pop jnp mov jge (bad) sub inc fcoml (bad) lahf fisttp sti pop test enter arpl cmp jge or adc xchg xlat enter es jo xchg pop push pop call xchg push push cmp xor mov (bad) push fisttp clc xchg jmp fiaddl call xor test inc push out or xchg insb push ja or pop data16 ss sub xor mov mov outsl vmovntps arpl xorb xchg jo jo mov mov jg pop scas or repz out jmp push xor sub adc aam push pop push push mov imul out js es adc sahf dec ljmp rclb dec in push test addl cwtl push roll pop mov push sbb loope adc cmpsb dec scas xor and pop add sbb (bad) cwtl sub and sub jo add andb mov jo or fildll divl int3 inc rolb xchg xor scas or insb mov or dec add inc xor lret inc (bad) das mov int jns xor add stos (bad) inc mov aad lret mov test cwtl fs icebp mov fidiv mov push mov cltd loopne (bad) in repnz xor adc jl lds fxch add ja test adc fs mov xchg add orl and inc jae pushf cmpsl jp jb xchg xor and hlt adc aam out push out inc int3 sbb inc lret (bad) aam and mov pop xchg push sub movsb lods icebp int3 mov in pop pop fnstenv sbb in imul jne or cld les in mov popa cmp lcall xlat dec push and and stos fst fiaddl xchg cld adc mov or pop pop fistp cmpsb test jecxz mov aas in or loope sbb out clc jns cmp das out and cld (bad) js test iret mov mov mov push add pusha test inc sub add inc (bad) xor sbb ja adc add xchg push (bad) xor mov jmp pop push mov sbb outsl sbb loope or test sub lods mov xchg mov leave jecxz push das and adc cmc sbb insl faddl sub loope and lcall push rcrl mov push hlt lret xor icebp leave stc jns scas sbb xchg sub aad mov repnz outsl cmp xor jo mov push movsl sbb cmpsb movsl sar fs inc cmp sbb insl inc aam sahf (bad) fsts adc icebp pushf gs lret mulb sub test adc cmp dec nop rcll push cmpsb mov and xchg or add (bad) xchg call or push repz loop aas test jnp pop lcall out push in cmp push gs mov xchg (bad) jnp sbb cmp sbb out push adc add int lds pop fadds pop out movsl xchg loope inc add fdivs jae je jg gs pop jp jae pushf add call cmpsb mov test cmpsb hlt (bad) and (bad) psadbw testl push das (bad) leave xor dec and inc mov inc jae or xchg loop fs inc shll mov jecxz xchg mov pop mov lea jnp ret inc jmp add mov dec jns jo push inc (bad) inc in adc push dec lcall jmp stos sbb ja push xorb push mov jmp push mov repz lock pop rorl push mov add stos repnz movsb push call aaa push jns or scas jge mov lods es syscall inc sub cli pop mov fldenv ret (bad) cwtl arpl ret enter jl into dec test (bad) jmp (bad) lods sbb cwtl pop add je jle,pt add in sub call jge or (bad) add mov rcll or xchg and in or sub mov mov or or mov inc jbe into test das push or mov mov ja adc pop nop jp (bad) jae aad test adc das sub inc or add cwtl mov mov outsb ficom jle cmp popf call movsl sub mov test dec ret (bad) xchg mov inc adcl jl jmp jp test sahf push rcrb mov pop pop cld sub stc mov push inc in and sbb push jge push inc add in lret outsb adc std cmc cli aas scas fsts push push dec insl pushf and pop gs xor (bad) mov fwait and mov roll in lret mov ds bound add (bad) sbb out in fisub adc sti sbbl in ss bound adcl mov leave out jne jge jle out lcall add and push in mov add popf inc inc add lods dec cwtl cld mov sub test (bad) ror add ljmp inc (bad) (bad) mov iret push xor stc sub inc daa into xchg xchg fdivl loopne in pop cli lods nop ss (bad) ljmp out mov xlat and fsts xchg push and repnz jecxz cltd arpl dec leave inc xchg sub push enter add arpl stc lea clc js lods call fidivrl das mov (bad) xchg test adc in daa (bad) add dec push add (bad) nopl xor push out lcall mov dec lret shll cmc imul xchg sbb add xchg xchg jb sub enter imul iret inc sti mov sahf mov pop add aaa push enter test ss pop cli dec outsl sbb psubusb sbbl cmpsl jg mov mov addl out sub and adc movsb aaa nop stos sarl cltd bound arpl bound out out push call insb ja add and xor mov or adc pop or movsl push je sub (bad) pop push xor int scas icebp dec negl shl dec cmpb xchg adc add xchg (bad) sub (bad) lods dec jge mov mov mov sbb adc xchg movsb mov in repnz stos push and add ficompl jno lahf loop stos inc inc cmp (bad) sarb and inc dec or ret outsb mov pop pop add mov enter stos push cmpsl sub mov orl jne or xchg mov inc daa mov lret insb addr16 movsl lock data16 (bad) push test ret stos sbb aas cmp mov dec imul icebp movaps mov or imul lock xchg fs push xchg out cmpsl xor xor das ffree repnz not xor aad enter mov xchg mov push inc jne mov dec in cmp (bad) mul sbb mov push lret rcrl xor sub pop out lret fbstp mov nop xor out ret push cwtl jo adc cld test and cwtl outsb in ja cmc mov les fldenv mov ja,pt adc aad (bad) (bad) rorb dec aaa data16 add out inc cmp jp mov lods shrb push xor imul insb stos jne mov in xlat pop arpl out andb jmp sub sar sub call call sub xchg jl adcl popf mov dec popa (bad) inc push (bad) lcall mov xchg jg loopne or outsl stos mov pushf int3 mov addr16 popa std push aas cwtl pusha cmp mov jbe lods inc xlat and shrb jb clc nop mul dec stc mov push rsm icebp fwait dec xchg adc test push push inc cmp movsb lock jmp mov test mov imul nop adc and xor pusha mov ds dec mov pop stc pop outsl cli imul (bad) in sbb cmc push xor rolb jl pop adc rorl push ja in jp das mov out or jb nop sub inc aad mov pop add icebp xor fistl out jne rorb or pop (bad) sbb insl es loopne subb mov push xchg rcr hlt jmp add xchg jo out faddl (bad) sbb mov in mov int outsl mov mov (bad) xchg inc rorb push out jbe lock cmp add outsl cmpsb jno xchg clc dec jge jmp in das (bad) cmc sbb cmp mov in pushw fsubrs pop pop arpl jmp or mov push (bad) idivb sbb add fidiv mov jmp lock mov and arpl insl out cmpsb clc pcmpeqd ds fadds push (bad) mov inc jno jae mov adc mov shrl (bad) pop mov test inc add sbb test xchg pop shrl loop movsl cmp movswl and lock lods add mov bound xlat dec sbb xor sbb add iret fstps jne scas adc mov popa xchg lcall and mov or je pop iret std test imul inc push mov push (bad) lock push test or jl mov lcall test jne cmp xor test or sub int push sbb pop mov movsl dec test adc in lds mov daa test jg push cmpsl add lcall cmc sub mov out sbb pop lret (bad) pushf push and inc stc mov insl inc mov out imul cli std idivb rcrb fwait arpl lods push jmp loope xor (bad) fbstp lods mov je or fbld xchg subb jg (bad) out cltd adc inc sbb and lea xor cmp (bad) jecxz adc out add je dec out or jae jne (bad) int pusha lcall lods sbb mov sub inc sti inc mov and mov mov inc sbb in jbe hlt shlb arpl fsubr les cmp in pop rorl cld rcrb xchg xor mov mov sbb xchg sbb stos and int3 nop mov pop sbb ss sbb movsl jo les xor test mov sahf popl (bad) xor jns push or ficompl in adc cmp sbb pop jne daa popa add pushf pop push xor jecxz enter dec push jmp and push jns add pop es or pop das das xor or repz into xor pop mov sbb adc pusha std add xor aaa popa mov xchg dec add je mov data16 push xchg cmp dec (bad) adc inc mov or jmp lret movsb mov mov adc pop mov lods test xchg je xchg jno,pn or (bad) mov inc jmp jnp hlt sub push xchg jle cmp mov mov addl xchg enter nop call in gs testb jno lea outsb lea sbb test push fnstsw cmp inc sub sbb or and xor mov cwtl cmp cmp jae mov xchg xor enter jae mov cmpsl lods jno or out inc cmp add insb dec lret xchg jecxz xor lret pop repnz sbb iret cs iret xchg cld or mov (bad) xor popa movq push clc addr16 xchg lock daa int pop shll dec sub cwtl nop cmpsl arpl insb ret gs mov inc cmp dec pop cmpsb fs (bad) adc scas add mov cmp pop out popf mov out cmc es test std es (bad) mov imul popf lds enter shrl and out outsb loopne xor test dec or mov jle leave jecxz call stos lds inc push popf lret mov sbb lds mov xor xchg xchg xor ret adc jne jnp push cmpb mov jp ret gs push xor inc push xor rcrb dec cmp (bad) jno pushf std or dec cmpsb das testl scas adc es movsl out lret xchg (bad) insb (bad) pop movsb into adc and sti mov dec in cltd test lds add and cltd stc sti hlt and cmp fdivs test aad inc repz test inc pop ret ret ret xor add cmpsb xor xor fsubs mov (bad) int3 push pop or sbb push fs insb mov inc push fistp add clc stos cmp xlat inc pushf in test and aad xchg mov sarb jp jl pop in dec xor ss es jnp jge jmp fild mov test dec lret push int mov imul inc and fldl ss loopne (bad) popa jge je cmp pop sar imul pop fwait mov cli dec sub fs cmp (bad) (bad) push adc sub mov xchg movntps cmp push push xor cmp out gs mov mov push js mov pop fwait jecxz fsubrs daa push sub adc nop lret aad xchg ljmp mov out cs cli xor fwait or (bad) cmp pop inc sbb sub push enter fist notl scas ret leave dec cmp les outsb or (bad) test inc aaa pop aad sbb lods scas test ret (bad) jne push mov jnp push int sub cs add and inc push mov push ror aam inc sbb jnp mov arpl stos add fimul cli (bad) cmpb adc call pop rcrl fcmovnbe lcall jge sbb mov cmp lods xchg cmp stos cs xor mov test adc or test mov (bad) sub loopne arpl xchg mov xor xchg pop int mov clc dec int3 mov xchg sbb sbb fisttp stos stos inc imul jnp xchg dec scas jo push aad mov jmp lret adc cwtl int and mov xchg cmpsb push inc or cmpsl add (bad) mov js inc sbb call in fsub icebp push in data16 cltd jmp inc ficomp or mov mov and sub fstl lcall ljmp pop (bad) cli pop notb and mov lock in jno loopne ret and push loopne out mov repz lret inc mov or mov mov and stos js pop lock jl rolb gs cli mov decl test scas push mov repnz xchg int3 inc adc mov sub imul popf mov (bad) mov iret les enter and pop adc xchg mov daa xorl repnz ret andl stos or cld or ds push sub jecxz cltd xor iret mov ds cmp adc lcall inc jbe pop shll dec dec lret dec ja mov or call adc xchg outsb cmp xchg fdivs shr push cs scas jno mov sub insl mov cltd mov (bad) sub xchg dec sbb inc shll lcall or popf mov add cltd fidivr popf xor roll push leave jnp,pn push jno (bad) mov fisubrl rcl push mov push int3 inc leave ljmp data16 fistp jo iret cmp adc lcall stos jg xchg pop pop loopne or xor xchg in inc lcall aam jbe pop imul mov rorb jbe mov sbb mov outsl sbb es test in mov test xchg std sub mov xchg adc pop ja gs ret les mov dec std lahf shr in int3 lret or pop shr test mov jg repz push and shr mov clc test jno ja xorl inc or int sti insl data16 sub push fsubrl cltd add inc and notb das dec push jns pop ja inc aad hlt dec jnp xchg sbb mov adc dec fs xor xchg jno sub mov fstp roll (bad) xor dec dec push lea in mov mov cmp bound cmpsl push cmp inc xchg shlb lcall add and inc in int3 push pop outsb cmp mov cmpsl sarl sbb repz pop shlb scas outsb popa inc out in dec cmp push push push in pop cld add inc cmp jo sbbl fisttpll out dec aaa hlt popa mov mov cwtl jns mov cmpsb and loope push cmp out or int3 mov out cmp and cltd ss mov arpl nop std rorb xchg inc xor pop addr16 (bad) popa inc neg outsl dec repz add add sub arpl nop inc mov cmp cmp sbb pop pop mov stc fmul roll (bad) fistl decb push aas lcall movsl cmp fimull lret es lock sub jo aas push sti sub out ret or cmp popa shrl cmp mov (bad) aas cmp icebp stc mov (bad) sbb mov out mov mov dec cmpsl insb cs lds xor adc es stc push sbb lea lahf mov push adc repz push fist fdivr jb jns stos bound je dec push or cwtl lcall push imul pop mov push xchg bound pop sub int mov add pop mov cld clc or pop andl shrb jmp (bad) in outsl loop mov in mov (bad) sbb mov mov jno add mov and mov stc jle cmp pop out test fwait into xor popf mov popf adc xor fdiv push sub (bad) pop and sbb add adc das mov or test cli movsl nop mov cmpsl pop lea push dec push dec lds rcrl or es test cmc mov clc mov push orl call mov test in cmp jns xor pop aam add mov mov mov mov adc jne inc insb jno mov sub movsb enter inc xchg mov dec jo jmp into lret dec sub jle dec out sub ss ror (bad) lea dec repnz sub pop push push cld lock (bad) out in xchg mov adc pushf aas ja add cs mov arpl js (bad) test scas xor add adc mov push pop xchg push jnp in jno mov xor xchg mov mov push pushf stos xor sti fstp js mov jno (bad) cmp pushf push mov and pop dec popf push add inc push lret xor call mov aad ret sub ret loopne dec push insl inc (bad) idivl (bad) das and adc loope (bad) rcl mov xor sub ret int int loopne out cmp insl in and pop jne cs lods imul xchg rcrl adc pop mulb inc ljmp lds sub dec mov jle mov icebp aaa xchg adc loop dec loopne mov out out test scas push add xchg jp jo (bad) jno roll pop sbb jne stos xchg ja cmp push mov jp pop pop dec xor mov pop mov out addr16 test dec (bad) cmp je pop rcr jne adc pop aas js test push loop sbb (bad) idivb cmp add mov xchg (bad) inc das jno mov lcall sbb popa test les xlat sbb cwtl jmp sahf (bad) aam sub rclb scas cmp ds test adc sarl and and sub xor loop push ds mov jp jno mov out cs out fisubl pop pop cmp pop mov xchg jne pusha (bad) pop movsl jl jle in mov sbb std mov mov and std mov mov push cmp inc mov lret pushf and fildll jb adc gs popf aad cmpsb xchg adc lea inc sbb sub adc (bad) mov mov cmp jno mov push movl out dec fs stos cwtl scas jp adc hlt dec loope aas dec ss sub jno inc add jp outsl dec out nop mov mov in mov cld int3 arpl hlt pusha adc or pop mov jmp jge loope xchg ja out xor lret negb outsl je fs sbb dec xchg mov or arpl out adc push ss fwait cmp xchg notb cli or xchg repz mov mov mov mov fnsave dec inc rcrb sarb pusha sub mov lods sarb jns pop int3 clc popa dec sbb sub imul sub mov push or add inc js sahf icebp cltd sbb adcl dec and pop push mov pushf jmp sarl ret sub (bad) pop xor cmp dec notb sbb mov inc xchg xchg pop inc xor lea add in dec jmp add or iret psubusb fucomip fiadd les mov sti test dec outsl xchg inc add push xchg jb and dec loop inc or sbb push cmc js inc outsb or inc cmp xor adc mov inc or call aaa cld xchg js dec ror push xlat lret dec or enter lret mov aaa bound pop jbe std out es sub cs jge das xor push fnop addr16 push lahf jp arpl adc gs popa xchg in lea fs sub (bad) int (bad) (bad) add cmp lcall and repnz movsb insl push xorl aas and das xor insb xchg mov sbb in (bad) xchg jno lcall or jb jnp stos jge jecxz orl and outsb aad insl ret or bound stos sub leave int3 popa addb test mov ret push push inc rclb adc pop push or or loop push insb imul das mov std aas cmp loop xor adc xor push repz dec mov jno mov sbb push dec inc cmpsb aam or fsub mov or aad jb push cmp js test ljmp (bad) aaa in mulb js pop cmp fwait sbb lods cwtl lcall lcall inc pop xor (bad) cli test jmp arpl (bad) lock or mov ja inc inc ret add mov pop pop jecxz pop adc aad push cmp stos insb pop fnstsw sub out cld cmp cmp test enter dec gs or sbb inc leave int cmpl sbb and ja loop lods test int3 pop mov sub dec jle mov xor das mov mov iret jo pop out dec lea fild stos adc push xchg lods lea mov inc movq jecxz lret stos mov push jbe cmp push dec and dec lret jo sbb mov pop rclb sub ja fs je enter imul loopne test (bad) jno repz mov vcvttps2dq pop jnp jge lods sbb jne es stos je sbb fnstcw iret add lcall xchg mov add icebp xchg sub cmp push jl enter mov cmp xchg dec dec mov fwait sub sub or in dec iret int test movsb xchg cmp pop loopne sub push jb aaa dec push std stc mull imul lods lcall push mov jl aas (bad) (bad) lret add xor fidivrl in sbb add xlat mov aad scas mov cmc pop daa imul (bad) mov cmp sbb cli xchg add out push rcrb or fnstenv mov jnp (bad) jl sub imull pop clc cmpsl sbb addl dec sub lahf xor mov xchg inc xchg ja jg push insl ss (bad) enter adc clc or addr16 dec xor (bad) sub jmp or outsl sub or lods (bad) out mov notb sbb sub jbe aam outsb aaa (bad) xor stos scas imul cltd ljmp fsubs fldz addr16 xchg jge cmpsl sbb aas in pop lock sub in cmpsb ret sbbb aad (bad) cltd aam jecxz hlt outsl dec fs dec clc fdivrp mov mov adc sti test addr16 scas sbb ret in in sbb cmp (bad) push add add shl fucomp sub ret into rclb pop insl cwtl cmp dec mov inc push mov xchg mov pop mov pop (bad) or mov mov lods mov pop mov mov jg cs push out dec pop cmpsb addl daa adc mov stos js mov pop jae fsubs dec and outsb xchg mov aaa in ret in xor movsl cltd dec jae int3 mov and and xor xchg xchg sbb into jno jae subl fisubrl repnz dec pop leave mov sahf jecxz ljmp fldcw int adc pushw ljmp pop ljmp ljmp mov stc inc jnp movsb or xlat xor aad jae outsl data16 (bad) int push add inc (bad) xchg xor loope fs and dec sub insl mulb insl int3 inc outsb std mov outsl pop dec in sub sub cld sbb and test inc sub jl inc adc xchg xchg xchg and stc mov daa repnz aam adc out (bad) sub jl hlt sbb (bad) xchg and xchg xchg xchg stc (bad) inc out cwtl cmpsl adc mov movsl mov imul rorb aad jge cwtl insb inc test stos mov or dec in stos push pop rcll sub inc mov das add test lea in push sarb or push jge leave jp out jae mov push das inc sahf jecxz jg rcl cmpsb clc xor cmpsl faddp mov mov cmp aam aaa daa cld jne test pop mov fs cmp enter dec and push scas push shrl data16 add decb push xor call shlb ds cld push mov lret sbb jle out push or push add popa mov rorl mov inc gs xchg pop jmp imul in cmp in mov int xor add adc call out cmp lods mov js dec sbb add push xor pop sub (bad) or (bad) xor xchg mov mov jb imul xor and or jmp xchg inc inc pushw pop sbb xchg dec pop lods dec (bad) sbb clc pop mov in loope ret daa stc leavew ja mov mov dec xchg push xchg lret adc repz clc imul test imul sahf sub loop,pn jle (bad) mov mov push lods pop add sub test jne mov hlt dec icebp jmp or or sub jl jbe or xchg push inc lret cli (bad) lds jbe fnstenv xchg ljmp push out adc xchg adc fdivrl jmp iret mov push lea (bad) aam mov (bad) aaa cld sbb aam pusha outsb fiaddl ss jb fildll jg sub xchg into (bad) shr add push and push (bad) ss es xor jae xchg cmp and pop std jecxz push (bad) loope js jp push mov hlt (bad) xor jnp dec inc jmp (bad) scas mov gs push lahf add int3 mov mov xchg xchg xor mov xor in cmp cmc pop mov mov and in sub dec mov negl out leave dec push (bad) jge push mov std sarl ja add arpl mov sti inc xor hlt xchg xor xor incb push ja std loopne adc in mov out jo idivb cltd add jns movsb arpl dec es call rclb ffreep mov scas jns mov je cmpsb lds cs dec inc mov pop les and pop divb out jbe rcr (bad) (bad) mov mov scas nop xchg call sbb loop add xchg jb jb rsm pop ffreep add mov fildl and fcomps sbb mov jecxz jae inc js std dec fwait mov and cmp icebp pushf fnstenv fidiv popa subb mov xchg fdiv push scas adc fnstcw movsl jmp bound and pop test xor hlt stc pop testb stos addr16 dec dec push mov xchg loopne pop add ja call out (bad) add shll sub jns push and call xor (bad) mov cld test mov leave out mov lds je sti lods mov out divl adc mov aas popa pop xchg movsb out and pop les (bad) pop jnp sub repnz sbb jl adc mov (bad) cmc xchg movsb mov xor mov push jne xchg push lret test sub add (bad) ja stos fld cmp movsb xor sbb mov jno mov cld mov jecxz sub add jnp pop daa push enter andl pop ja xlat xchg jp pop insl sbb je xor jmp ret mov stos shlb aas cmp aam test mov or in dec inc mov xchg mov jge loopne pop fnstcw jmp sti mov sbb rol popf or stos imulb or mov xchg outsl lock imul fisubl cmp sti mov sbb mov cmp addr16 push mov cltd adc mov pop jl mov inc aad das pop cld inc cmp fbstp enter aad pop or in (bad) sub leave sub outsb leave dec lret call xor push fs addr16 repz adc mov mov mov pop jne cli lret (bad) jns outsb gs inc popf lock loopne mov and jle outsl mov pop call mov popa mov cmpsb xor imul (bad) imul jmp pop add pushf aad push adc repnz scas push cltd lock icebp test mov push xor ret enter aas imul les in and ret mov mov (bad) sti add imul adc int xchg stc jmp mov (bad) inc aas adc or mov mov iret std fldl mov mov lods mov test in xchg pop jmp popf pop mov adc (bad) push cmp pop (bad) ds int3 mov repnz inc sahf cmp adc or mov outsl repz sahf int outsb push mov adc xchg ljmp jae shll in sbb jecxz jecxz jne scas aam in add sahf mov (bad) pop pop jno js gs xchg nop cld push fs lds inc xlat mov pop jp pop jecxz in dec pop cld push inc out ljmp (bad) jno sub test sahf mov rcll mov rol jae xchg jns mov ds ja test mov mov mov test out and ds mov add mov jno cmp js add sbb inc and std loope clc jle mov pusha or jnp adc nop into jle ret lock in iret push pop push jmp pop lock test pop jns cltd arpl into xchg icebp pop popf popa pushf cmp dec pushf push ja movb push cmc roll mov adc out add fimul cmpl mov sub enter sub les or imul jno inc push int3 xchg xchg stos jge dec sub sbb jb stos jbe mov out pop cld idivb pop (bad) and or sbb in push ja rclb loope inc orb repnz push das pop cli inc mov xchg adc mov (bad) cmpsl add mov add fsubr scas lods dec push inc fwait das mov je test dec test lret in fs pop xchg addr16 mov or xor stc leave jns mov gs pop stos aaa call jb,pt js sahf sbb scas je or mov jae rol iret push mov popa loope mov mov jns push cmc add add (bad) xlat pop add dec leave sub lods pusha inc pop test or rcll mov test fist dec mov dec mov inc clc mov jecxz mov arpl cmp jl mov jbe cwtl ret xchg pop push cmpsl or mov ljmp lods into jle andl mov mov arpl stc mov cmp mov sbb push jbe xchg mov and in inc pop mov lcall (bad) cmc mov push shlb int push test jne jle push adc cwtl inc lret xor movsb in mov inc outsl sub icebp lret cmp dec cli xchg xchg adc (bad) dec clc pop out and mov ds insb inc jl xor lret pop into sbb in out sbb addr16 insl inc mov int3 roll push adc push mov jne dec jnp adc sbb push aam orb outsl (bad) and repnz mov add test sbb push push ds sub adc and mov sub mov loopne repnz movsb add jmp insl pop and mov arpl mov xchg mov and stc sbb insb pop mov lods or loopne lret sbb or push xlat orb repz test pop cmpsl jp addr16 adc rcll sub mov sub mov jne test jmp daa pop int3 pusha mov iret movsb inc popa adc loope faddl int test mov sahf lret inc sub pop sub aad out pop push int and outsl mov mov xor ds xchg mov rol cltd sbb sub mov in idivl mov (bad) je movsl pushf imul in sahf fcomip xor adc or push (bad) lods jp xchg push push (bad) pop jle repnz shrl das jle xor lcall jo in inc mov adc (bad) iret xor add (bad) aaa push sbb inc or aas je lds iret mov lds lods pop xchg sbb jo popa mov pop out push cmp mov outsb fwait es insl outsl jmp iret jp push mov inc xchg pop jmp and push or mov jge lahf cmp push (bad) xor pop imul cmc sarl add (bad) push mov out push adc or mov lea cmp add cmpsb pop out fistp pop cmc mov pop nop je lds adc in shlb push add bound jnp scas repnz imul push mov adc or in imul ljmp dec mov fcmovu addr16 lret sbb xchg mov lret scas mov xchg push mov jg or inc inc imul pop push push fidivrl push mov fcoml je daa fmuls repnz pop gs adc rolb addr16 lret or mov repnz cs jno xchg dec xchg push push xor imul scas mov in movsl cmpb inc push inc mov push push icebp lret mov adc test push xchg mov (bad) and jge sbb dec ss das mov xor adc inc pop xor or dec push cli jp mov dec push repz dec pop es add test jge pop (bad) dec jae stos sub jo (bad) cmp lret inc ss lret out cltd lods mov rclb cmp ja pop cmp addr16 repnz mov sbb (bad) stc push test (bad) cmp movsl leave add inc push je mov inc ficompl fwait lret xchg mov fimull sti dec leave out inc stos inc fisttpl xchg jo sub push enter leave dec (bad) jb push loop jecxz outsl inc adc lds es testb mov dec and repz call dec inc fsubp test cmp or lcall int3 jle push or (bad) out (bad) xchg pop push xorb dec lods stc and push mov aas in xor sbb scas inc pop inc imul outsb pushl xchg mov cmp insl fstps loope mov xchg mov mov lret xor pop xchg jb,pt and push popf inc pop xchg std ss jae jb mov mov mov add push jne outsl push xchg sub inc xor xlat sub iret xchg loop add xchg test jecxz dec scas cmp in sti cmpsb xchg pop push push cmp and fsub pop push test push jle sub and jnp in add or jmp pop adc std inc xchg jno iret push adc pusha (bad) push subl stos bound scas sbb mov jle mov outsl xor mov dec aad nop xor inc js (bad) int cmpsb xchg or sbb mov sub mov in or jo adc and jne popa js pushf (bad) pop xchg sahf lods (bad) sub stos bound sub addr16 sti ja mov xor mov ss jo adc lret fwait xchg add gs mov repnz jmp iret enter dec sub mov cmp inc sub leave mov shrb xchg imul sti mov fwait adc lahf jb icebp (bad) pop xor ljmp (bad) hlt jbe jne jns sub mov lods cli push pop xor mov and jp push mov test mov data16 mov divl mov and out dec fisttpll jae popaw dec les sub jnp enter (bad) jns stos add sahf stc es dec nop in cs leave (bad) icebp mov sarb lea cmp jae cmp and push push push xor cs adc int cmpsb lods loope cmp mov push movsb ret lret dec xor xlat pop sub scas lods jno xor (bad) leave cmpsl mov pop ds in sbbl stos xlat cld push adc outsl lea adcb add mov dec call (bad) roll sub ret xchg shll daa sbb in iret mov fbld (bad) cmp adc xor dec sbb push jmp xchg pop mov push dec lods loope insl lahf pop pop sub pop insl aaa or fs sbb aad lods adc scas mov dec jae cmp inc jne (bad) psubsw jp in nop or outsl int data16 xchg pop jle add aad jecxz jb test (bad) imul add mov cwtl pop repnz mov xchg in jecxz cmp mov mov imul cmc add pop dec inc cmp fnop add jns mov and and movsb in pop bound xlat aam rolb mov insl xor adc in add aad xchg xchg pop and mov mov fisttpl lret xchg idiv push jg cmp popf add adc mov adc jmp xchg loope nop inc lods xchg out nop or and or cmp xor les (bad) jb sub (bad) (bad) dec or or jmp popf in dec mov outsb rcl iret cmp loopne std or fadd cmpsb sub lret sub or out repz inc stc cmc jbe adc stc push pop test fimul or popf movsb dec cmp pop dec or xor and cltd sub popa jmp repz and sbb push loopne push inc and leave subl cwtl mov inc lret sar inc (bad) cli xor cwtl mov push repnz dec fcoms sahf out inc ret shrl (bad) pop sbb cld sub orl sub cs mov mov cmpsl sub lds in (bad) fiaddl mov aam pusha sti fs cmpsb ss insl cmpb icebp gs mov fbld inc and dec jo cmp sub stos lcall inc add mov std fcmovu fnstsw mov into es sub (bad) hlt mov push std inc xchg or pop adc pop jmp aam mov push repz fildl lods xor cltd shlb popa mov xchg out push add dec inc ss and test xchg pop lods pop xchg push sbbb into cmp or mov js enter popa push repnz push into cltd mov popf pusha and jmp lret test jecxz in aas dec lods mov stc hlt bnd sub ja dec (bad) stc stos outsl mov push scas dec out repnz icebp cld es xchg xor ds xorb inc test mov mov pop and lahf push jle stc inc jns das pop sub ljmp sbb xor sti outsb push sbb adc (bad) cmpsb popf data16 push or fistpll and faddl lods adc push push addb js lahf mov sub pop bound decb lea mov sbb into mov mov push ss cmp adc loop es mov jle aaa mov xchg mov int3 sub xor add add sbb (bad) movsl loopne adc mov pusha rclb mov fsubp (bad) add call icebp outsb jle sbb sbb pusha sub stos repnz imul mov mov lods ss out xor xlat dec adc mov sbb dec xchg pop int jle jo,pn mov int3 xchg xor mov pusha or jmp and stos xchg push inc aam dec sub mov mov insb inc cmpsl test or or lock dec lret and adcl fnstenv add pop jge mov stos sbb sbb jnp imul mov int3 jl add dec data16 in sub push inc jnp push pop fcmovbe shrl inc mov mov out push add out out pop in lods or dec pop (bad) push dec enter and xchg aas inc clc hlt inc mov lea push into js add mov add sub cs cs cltd hlt ret in mov fldl2t cmp loopne xchg shrb subb xchg and sub mov test cmp cld imul cmp mov inc sub or pop xchg ficoml aam mov pop mov xchg outsb xor je mov add mov xchg int and sbb ss cmp mov mov mov sub jnp aas push jo insb dec or fwait mov fs pop fs jb xor pop xor jmp sbb mov mov out into mov sbb arpl out fidivrl aas jecxz rcll push dec jecxz jg in mov xchg sbb jp lods push push inc ror jp add (bad) push das orb (bad) mov cmp out loopne movaps dec cmc frstor ret std ret lds jg sti (bad) jb add jl cmpsb mov jo xchg loope mov lret xchg ret xchg push sti inc cld scas hlt int3 xor movsl in xchg mov (bad) popa int3 imul ja mov and dec divl mov inc add lock mov mov mov cmp addr16 jecxz add ja xchg fbld inc stos xlat pop dec in ret adc lcall data16 aam das sub sbb xor sbb out pop sar dec sub fildl cmp cmp jmp mov xchg in ljmp pop inc mov flds add adc sahf sbb jns jnp fwait add test dec jns inc push lods cmp mov inc sub (bad) xor or mov mov mov xor stos push int3 sbb mov loopne mov sbb (bad) bnd popa enterw jmp pop ljmp xor lea pop gs out (bad) clc mov pop test (bad) mov (bad) lea ret aaa lea sub movsb or rolb test mul lret cmp mov lock movsb leave loope (bad) int3 sub out mov ljmp lock test xchg dec dec jge stc jns mov add mov and xor es outsl inc fiadd inc cltd inc int xor loope imul adc mov call (bad) call cmp inc push imul cmp xchg fwait push scas inc sar loop pop (bad) jno push aam scas or lret scas lds insb mov mov arpl xor pop mov stos mov aas std icebp loop add pushf ss rcrb add mov outsl fwait inc test cld cwtl aad xchg pop mov cmp js cmpsl icebp inc notl mov cmp sub fneni(8087 je xlat and fdivp test out stos (bad) cli insb rcrb ss addl cs scas shlb aas lods mov sbb or push leave and js push jne (bad) aaa clc aas adc pop add or xchg pop call and dec mov dec add std xor cmc dec push (bad) pop negb ret and dec mov loop add mov push add test and lods jl lret clc xchg pop leave test pusha and jb call out add push jo inc push sub hlt in out ss and dec test mov (bad) lret in test push dec in pop xchg mov ds cmc fdivrs sbb pop in lods out lret adc xchg movsl (bad) rcl idivl lock stos jnp xchg adc jg xchg rcl mov pop sub pop loope or ds rcrb negl adc iret pop jge out fwait int or mov int3 mov pop add jne xor mov push ds popa or pop std sub lahf into stc jnp jecxz sbb out or xchg or and lret inc or mov imul movsb cmp or mov xchg mov comiss out popa imul (bad) rolb mov movsl adc cmc popa lret dec mov (bad) add sbbl fldt push pop pop xor out and pushf cmp (bad) jno adc nop pop mov pop mov cmp mov mov stos test lea add cmp ja sbb mov mov ds int3 jge inc popa xlat jge cmp ljmp (bad) fiaddl aam sti hlt out repnz add jbe inc xchg mov jmp imul adc xchg add push xor xor insl ja mov (bad) outsb inc cld sub or xchg rcrb add jle iret jbe cmpsb dec out cmp jg sbb jo pop mov fild jb push in sub sub jle and add add sarl inc lret push pusha and fcomi xchg int3 and pop mov pop rcrl dec jns push inc (bad) repnz (bad) jge mov xor ret xor icebp or push pop cwtl jno dec inc xchg (bad) and adc sub lret into mov lods idiv imull xchg insl lahf mov aaa mov (bad) jp cmp mov cmpsb icebp outsb mul ficompl pop xchg movb or lds (bad) push mov les (bad) ss xor shrl mov sahf sbb repz iret pop das and mov in and jbe ret imul adcb test lret dec lahf outsb mov sbb arpl sub jo bound aam (bad) and lcall and enter mov divb adc cmp push jb pop incb sahf push leave sub lds test cmp pop daa bound movsl and in in jmp pop or push pop jbe repz arpl negl cltd js jle jmp pop fs fucom repnz cmp enter adc and mov rcr stos insl sub pop xchg jp imul jae sub sub pop or sub subl xor push and dec push hlt push aad mov sbbl or inc xchg repz lahf jmp adc sbb ds mov (bad) mov (bad) sti push cli mov and mov fcomip cld jg jle mov jae sbb dec aad pop sti sbb jmp lea stos xor pop leave mov push mov cmp cltd (bad) cs jl xor jns dec xchg int outsl pop pop scas je and xor (bad) jmp xchg sti jae add cmp gs add leave inc jge fldt fdivp cmpsb mov inc sarl imul dec cmpsb shrl push add stos icebp pusha mov pop or cmp in xor jnp stc adc mov jmp or push add insl jge inc mov (bad) cltd cmc mov add es sub loope mov lahf push pusha mov inc push and in mov jl and lahf leave in xchg xlat xchg test ret xor (bad) test cmpl imul out mov jno iret cs dec inc ja xchg aad repz push mov xchg xchg dec push xchg and xor dec jo neg int3 pushf mov lret adc ret mov add jne cltd mov test mov mov pop fisttp and push sbb lahf xor jl and repz ljmp pop xchg jle add sbb sub jae dec insb out das mov fwait sahf jp dec faddl jmp ljmp fs repnz incl push pop je fidiv or addr16 xor out or xchg cmpsl push ret push lret and imul pop test popa cmp test mov fs pop out pop jae pushf or (bad) sti das sub dec add dec movsb int sti xchg sbb movsb jg inc xchg repnz ss or xchg mov dec and inc movsl mov test mov inc cs xor rcrb lods push and mov push jne cmp mov inc xorb jb mov and dec mov xor pop insl push (bad) dec loope pop stos cmp sub hlt test push orb mov loopne (bad) not push mov shlb xor xchg mov push dec xchg add push xor cmp sbb or jae insl cltd push pop jae ficoml cmpsl inc mov out xchg inc dec mov sub push pop icebp (bad) mov sbb push fildll cmp hlt movb cmp (bad) xor es mov notl sbbb mov fiadd in mov popa daa xor or stos data16 imul out mov orb xchg jns inc and imul ss lock cmp mov mov mov xchg mov rolb adc mov out inc sub add mov daa cli ss mov int std mov cmpsl sub and mov xor sub aam cmp (bad) aas es xchg test add jl data16 add pushl fwait inc xchg les jl fisubrl (bad) and sub jno and hlt lcall sub inc scas loope cmp fdivr mov adc mov add mov cmp pusha lock xchg (bad) or jne imul xchg pop mov int3 and adc je psubusb shlb pop add sub faddl pop and mov sarl js imul and push in outsb adc gs movsl dec jecxz test jo mov loop insb cmc sbb mov movsb adc mov add sub icebp mov pop xor inc and test fnsave push fldl int iret inc jg sbb mov aam das xor scas jnp pop repz xchg outsl jp imul sbb inc adc cmp rol jae mov (bad) xor pushf vxorps iret mov cmp jl loopne mov pop pushf stos jl inc xchg mov sbb mov mul outsl cmpsl pop dec xchg icebp mov mov rcr fcmovnbe push (bad) xor ljmp xchg sbb ljmp hlt fidivr sbb mov cmp repnz stc aaa sub jnp pop lock lcall adc adcb mov sub shrb or fdiv es jbe enter xchg bswap xor push jmp es (bad) pushw movsl cli js pop xor stos mov add sub into jb jmp int dec jmp xchg cmp out cmpsl stos inc shl addl ret pop jl (bad) jle mov loope das xchg sbb adc int3 mov loopne jge dec insl pop sub sti pcmpeqd mov (bad) rolb xchg add pop dec add in add arpl cmp stos adc and cmc jmp aaa mov cld cmp fcom leave movsl and adc cmp pop dec stos scas mov and push xor mov add xchg imul pop sbb adc or out pop pop or adc jp popf cld mulb ror outsl dec movsb popf clc pop push mov sti sysret je sbb das inc push bound sub sti xor inc cli int das fs cld insl push dec inc pop jmp aaa pop cs add cmp xchg ficomp sbb pop in inc fidivl pop in out ret jg or repnz jl das cmpsl pop js into mov pop je jne xor push ret pop out mov push lods inc add and test sub push adc pop push orl add sbb xchg aam xchg pop aad mov pushf cmp cmc jbe or movsb test sub add sbb cmp xor and hlt pop add and xchg les pop insb cmc push in add jbe cmpsl or add mov sti pop lods or push mov scas ss cmp sti sbb outsb xchg rclb into testl fmulp dec shl dec fnsave mov dec cmp inc adc cmp or (bad) outsl jg aad dec lods dec (bad) out xchg push out cmpsb fcoml pop dec push shlb dec dec pop cmc aaa pop mov adc mov inc mov inc (bad) mov pop adc sarb jmp mov ret test dec jg lret cmp mov fstpt scas mov sti and push lods popf jg aam into jae repz inc insb jne jge scas cmpsb scas (bad) fstpt lahf push jge rcll bound out test sub xor jmp testl sub jl add fidivrl mov imull pop outsl xchg pop mov mov mov mov fstps mov fstps mov popa sarb add sub ss in shrb push and aaa pop in cmc dec js,pn inc lahf pop bound cmp inc and lds jecxz cmp in or inc incl cmp and bound mov lock rorl lds fwait inc adc fbld xchg (bad) aas hlt mov pop jmp jp push mov sub cmp outsl (bad) ss inc (bad) inc dec add enter cs or mov scas jns mov out sbb add jne pop fwait inc jb movsl add fstl sahf loopne (bad) rcr (bad) (bad) push pop mov push jle xor push cmp inc orb out sub fwait imul ret add jno or xchg pop pushf push mov cmp out popa rorb push js movsl or dec jb jns repnz dec or mov cmp inc mov dec pop test adc rorb rcl (bad) repz or sub dec push mov arpl negb in out icebp into jae,pt sub sti sbb cmp xor and loope and xor aas das pushf xchg mov adc clc dec lds jmp dec pop cld or mov sub xor fs repz jmp dec iret xchg mov call inc pop out mov scas test or das sub sub ret imul mov scas hlt inc out insb lods fmuls push popf mov push push das lds add (bad) notl push lods mulb mov call and lock test imul pop es pushf fisubrl sbb popa add and add jge jae inc push mov sbb ret pop repnz push jae repz out xchg jp popa imul (bad) inc lods add mull or pop xor pop push bound adc mov in fidiv pop lods jnp mov or shrl cmp push popf test cmpsb push mov mov cmp fisubrl mov stos sbb shrb mov rorl jecxz mov cmp push jmp mov movsb into outsb and mov icebp in jb cmp lahf adc cmp fwait je cmp push leave (bad) pop jnp (bad) in sub aam cmp arpl (bad) push pop cld shrb add in push das jne and dec and insb data16 arpl or xchg jae push mull push nop cmp int3 inc (bad) stc push sti loop push cmp xor jge xor cmp fdivl loop mov cmc push cltd decl jo loopne movsl mov and popf or mov jl push inc outsl mov mov nop outsl negb mov push seto int (bad) mov mov test adc int3 enter push jns or imul inc dec imul adc lock loopne mov inc mov lods dec in dec mov aas sti mov xchg inc inc cld jp pusha imul push lock pushf out lock clc xor sbbl sub push pop mov cmp loop or aas jae add jge in pop cld cmp push (bad) sub in dec push mov add insl jge stos jb inc pushf sub imul (bad) out add jg loop pushf lret inc adc cmp push jg mov adc out mov imul jecxz lods adc inc cmpsl repnz (bad) xchg push push add je repz std xchg lods test xchg fldl jae jae lea push std divl daa (bad) jl mov les push mov jnp ror or jmp cmpsl mov lds cmp out insb mov pop scas sbb js jbe jns adc pop lods into sbb mov xor js cwtl add push push loope nop or scas and mov das mov shrb push and mov and sbb data16 or push faddl sub pop fdivl inc push or cs adc jno cmp mov jg roll cmp out je and repz mov sbb sub xchg lret sbb shrl jg (bad) ret xrelease ljmp cmc aaa pop test jg mov mov xchg dec sub and mov xchg aas add test sbb mov inc pop mov gs ror jle (bad) dec adc lock fcmovb iret xor dec repnz cmp fsubs in test adc insb mov xchg mov in out fild lea cmp mov mov cmpl lods lods hlt aas imul ret xchg sub loopne aaa pop cmp ja or cli or notb mov bound pop lods xor out aas std loopne fcmovnb xchg mov push cmp push and arpl xchg sbb mov lds ficom mov movsb adc xchg daa std loopne inc fstpt mov jb repz cmp mov pushf rclb jecxz arpl add xchg cmpsl adc or test repz out xchg arpl scas sti push dec mov jns mov inc int out mov bound std xor daa test out int (bad) mov outsb xor xorl mov fsub mov pop xor mov push fldl push jp inc jecxz lret and dec std adc imul mov or sbb pop xchg sbbl push lods push fsts out push add arpl cli bound incl sbb jno mov pop insl jns cmc and movsl cmp sbb nop shr mov cmp push icebp mov push cmp loopne or inc or sub inc dec vmread imul repnz jle fsubrl jb into sbb enter popf sti lret ds pop outsb cmp data16 cltd sub addb shlb inc pop ret cmpsb xor pop jge out sub or adc adcl fs jp jp stc aad sti xor push sub sub ja or repz nop jl mov call test iret lods pop jno lock cmp ret outsb iret ffreep sub dec mov (bad) mov xor mov inc xchg inc ds leave inc inc adcl jne jg int3 in jl or push rolb ds cmp in imul int mov stc nop nop aas or add and add xchg jmp push cmpsb jns lahf push or mov stos pop or (bad) xor jo push or in push mov scas mov aas stos mov lret sbb inc nop sti fistpll test jbe sub jmp or cmp daa inc xor test lds leave push push bound outsb fisttp mov popa fisubr sahf push xchg (bad) fdiv rol mov inc and stc in and push bound push nop mov cmpsb jno (bad) xchg shrl scas mov mov inc xor arpl mov pcmpgtb es inc jb mov arpl es or cmp jmp sub xor xor cmc inc outsb fnstsw cmpsb dec xchg or pop pop jle and pop lods pushf jb mov xor rclb mov in (bad) ss xor ret dec es sbb mov inc and jmp out lock imull sbb adc arpl add loop sbb scas push imul push insl stos jns pop inc push sub gs mov es xchg sbb xchg out movsb (bad) insb mov mov or cmp mov (bad) cld dec loopne,pn outsb addb pop mov ret arpl xchg or imul cmp mov pop hlt or mov pop popa mov sbb js js xchg inc aaa xchg jmp bound jae push adc and sub ljmp or inc push ret jmp (bad) xor imul test aaa pop movsb cmp into (bad) jg xchg pop push lock xor push and es push (bad) test mov rorb xchg dec xor pop mov xor jmp in mov xchg sub pop rcll add leave jg sbb pop xchg rclb or out loop (bad) or jle sbb inc or jl int3 or xor mov nop sub add inc out shlb xor jo push imul sub lahf xchg loopne mov xor xor in xchg inc lcall test pop dec cli arpl dec lret mov sbb jecxz lcall or inc sub movsl (bad) and test push and fwait das xor mov or loope xlat adc pop push sub pop int mov gs or and out nop add pop lcall or rorl pop add lds fucomp jno mov jno sub out ret xchg cmp imul or mov jge lahf pop fisttp inc sti pop jecxz rorb jno imul mov push scas adc repnz xchg lds xor fidiv pop xor insl xor mov stos in push inc (bad) cmc pop push lahf lcall xchg inc jge xor xor xor imul (bad) xor test and mov mov ss xchg movsl xorl fstl test jo lods xchg mov adc icebp pop outsl inc sbb fwait nop or push sahf mov es dec data16 mov mov jo cmp pushf addr16 pop je mov mov fidivrl aaa push or jp push sbb cmp adc xlat mov mov push (bad) je lods push cmp xchg test mov pushf cmp movsb lret lock sub icebp pop ss aas push adcl in jp adc adc sar subb sub lods cmp js ss negb lcall ret cli iret mov jno repz test mov hlt xchg mov inc mov pop push cli pop scas pusha pop cmpb jle negl xlat dec pop ficomp std (bad) in mov xchg sahf inc out push jg mov mov xor cmpsl cmp sahf mov pop adc mov iret insl cmp cmp adc sub int3 xor dec mov cmp push add pop mov xor inc jp cld and fcoms icebp enter or add xchg jecxz pop hlt loope sbb jne fld1 ficomp dec sbb sub xor cmp mov mov loop (bad) mov or or in insl inc fistp (bad) shrl jecxz iret ja xchg dec mov call in sahf xchg jecxz pop mov mov cmp sbb in stc xor aas xchg movsl sub fcompl stos mov cld xchg push insb mov jecxz imul sbb int jo bound dec xor sbb out sub jl ret orb stos loop jnp (bad) lahf pop sti outsb dec call inc fcomi lea cmpsb or jno xor stos sahf or push and mov push addl nop movsl adc lret lods pop xchg xlat push fisub lcall mov or cmpsb loop add jg push mov jmp xchg and xchg aam jl sub (bad) xor inc sub push pop or cld xor fistpll bound fwait cld jg mov mov and mov mov cs fldcw repnz and stc leave sub jl mov sahf xchg lahf xor mov pop roll jl enter xor pop cmp pop les cs push mov movsl sbb mov cmpsb jle lods enter out jnp pop sbb xchg mov test jge sbb movsl enter inc sub leave cmp pop dec dec repnz addl xchg or repnz sbb fsubs (bad) lock cli cmp (bad) (bad) jmp xchg (bad) dec pop lock push push or arpl (bad) fwait ret int3 jmp xlat sti add ror inc in int or ljmp leave sbb cmp ret movsb fwait test xchg xchg xchg loope sbb into or jg push (bad) sbb and insb in or fwait js ljmp pushf mov push xchg mov mov xchg add mov mov stos mov sbb jbe mov inc sub or aam movswl icebp adc cmp pop inc or fimul sbb in dec inc ret (bad) and mov or sti jecxz mov and mov lock movsl or js (bad) fwait pop cmpsl mov (bad) int (bad) mov in sub movsl adc movsl sarb cld sub sub je test sti push mov cs (bad) cld dec loope aaa sub push mov jae ss jp (bad) or test movsl jle (bad) dec adc xchg in adcl sub xchg movsb inc jle push jl dec sub mov or mov sbb cmp (bad) xor dec xor pop mov inc fildll dec pop pushf jbe pop inc leave push pushf mov jl dec cmp lret (bad) test lea scas pushf mov rclb rorl movsl and mov add enter dec add stos scas pusha push adc fs mov dec mov (bad) repz (bad) es jo adc mov push scas jle push nop dec pop jbe out push mov xorl or jle fsubr repnz mov pop icebp add fldt mov xchg lock rcrb push mov pop pop add pop inc hlt movsl dec and movsl nop mov mov int3 pop sub inc jne aad push nop add sbb jg,pn clc jp fsubl push sahf add sub add jp mov dec sbb in cmpsl loope push or dec inc or icebp jnp dec popf lret pop and pop and push rolb sbb push or or sub fldl add scas jo out ret mov sbb push int3 imul sub dec dec in add xor xor dec jno aas jb mov sbb clc mov call pusha js or cwtl dec in pop fiadd xor (bad) rolb mov adc insl cwtl mov imul inc fwait data16 add add sahf movsl mov cmp rcrb aaa stos push dec cmc and adc aad xchg dec cwtl mov (bad) fbld stos jmp les fwait ds push fs mov add xor stos data16 pusha shrl cmpsb push mov mov pop test xor push movsl sahf cltd out mov aad mov test ret ret mov rcrl push fs rcrb int mov or lret adc xchg decb test add cmp test loopne mov (bad) and (bad) jmp mov (bad) divl pop sbb frstor mov or (bad) push out adc dec fs ds jg out cmpsl (bad) insl fmull (bad) outsl add jge add pusha inc test push sti xor mov je adc cs shr mov ret xchg mov je pushf push mov and mov ja dec push fildll ds xlat xor mov add dec mov mov dec cmpsb push sar pop aaa or bound or aas or add sbb jbe mov jl mov push repnz icebp repz push adc push ret cs sub stos pop xchg into push in pop (bad) jno (bad) add and iret shll sbb add fwait pop leave or mov sbb mov test in inc les adc inc mov lcall mov (bad) add gs rclb ljmp lret sahf out jmp push fadd sbb xchg clc sbbl int3 loop test std call or stos ja push jecxz orb xor adc cli stos and in je pop cs add in adc push mov notb clc inc nop push (bad) push or dec inc movsb outsb daa cltd inc lods stc dec push sbb pop push pop pop push xor lret and loope ret sbb and icebp sub mov xor xchg sub not sub xchg repnz repnz outsl mov mov mov scas cmc add pop insl (bad) xor push mov outsb pop cmpsb or lret shr add xor loop push or lock sbb mov xor out mov ss or jle addr16 push insb inc scas mov rorl sbb cmpsb pop push xor incl inc lcall addr16 mov pop outsb (bad) in lds mov mov in jle int3 add (bad) jb (bad) into cmc scas push lret cmpsl dec cmp das call lods lcall imul popf cs lret je mov jo out or loopne inc cltd (bad) das decl mov jb ss inc movsl call outsb call xor or xor cmp in ss and loopne outsl frstor mov pop ret xor int3 adc imul std (bad) rclb cmp gs cmp xor or clc fptan scas inc fcmovne adc mov lahf in adc jo or lret xor sarb add rcl jno sbb jmp inc cs gs add fisubrl stc jnp test push mov push loop xchg aas fmull addr16 xchg loope mov repz jae sbb cmp sub and cmp (bad) mov stc arpl push jmp mov push dec mov andl xor cld fbld sub mov (bad) fcmove fcoms sbb pop jo mov sub sarl enter dec lock cltd out gs jne xor inc rorw ret ja sbb add and push push (bad) cmp pop in dec dec (bad) fwait jle icebp in add jne sahf in jle mov mov add (bad) data16 cs add xor imul inc cmp add nop xor xchg add cmc dec pop rcrb repnz das icebp mov loope,pn dec lea sahf out push jmp (bad) and inc (bad) ja enter lcall test mov loop call std pop sbb push shlb mov aaa lock xchg add mov ret in mov aas sbb clc dec mov fisubl jmp inc stos pop xchg (bad) rcrb ds arpl mov mov or (bad) ret insl mov (bad) aam add mov sub xchg jle jle cmp insl sbb stos sub push scas aad pop push test cmc sub dec mov inc lcall pop push lods loopne negb add adc and sub jge subl and inc push sahf arpl xor and je adc xchg xchg cmp loopne jae lahf xor mov bound mov inc imul sub inc adc xchg jp jg push into jp in xlat xor (bad) enter andl inc nop out xor xchg lods or and mov or mov xchg or gs mov mov faddl cmp mov xorl insl cld repnz adc aas sbb cmp xor adc mov fdivl mov sbb (bad) adcl outsl sahf and sbb into cmp cmp je inc adc xor pop mov xlat call (bad) push (bad) dec repz pop outsb cmp cmpsb scas (bad) jmp mov pushf mov insl aas in mov push push xchg ret es dec sti cli mov test add fsts mov out (bad) sarb fldt inc shr arpl mov xor jo dec ret push cmp mov insb clc mov sbb pushf cs sub ret dec cli bnd andnps ret test dec test push lods jo (bad) testl cmp pop pop jae jno aad addl repz adc in add pop mov lret push jg ljmp dec andb popf shrb adc push sbb fmuls cli in loop inc pop or iret push insb out push fistl inc jo out mov cmpsl fdivs sarb clc into pushf mulb xor outsl or pop mov cmp jle mov and cwtl pop lds xor out cmp ret insb sub enter outsb adc mov mov sbb mov jnp pop sbb ljmp dec xchg fs andl in mov fldenv shlb popl in cmp lds push push xorl push add push adc es jne dec int3 mov jae aam xchg pop mov (bad) jmp pop mov in inc pop div lock or adc mov xchg call ss data16 ljmp pop dec pop loopne xchg xor mov in psrlw cmpsl pop clc les subl rcl movsl dec btc and iret or sbb les cld dec jae lret in movsl shll jb jl mov jle push inc xor std jbe pop push adc icebp lock ret pop into adc push inc hlt push pop sub in ss ds dec dec and dec lcall xor mov mov fcomps or adc jl pop and insb lret sbb mov outsl jns test cltd xchg sub xchg insl out and push test adc cmpl hlt movsb push pxor pop and daa lret cmp jne mov or (bad) popa fidivl scas inc push sbb popf stc gs rolb fcomip jl (bad) jb rolb ja mul jecxz xchg mov add jne cli or add pop push xchg mov sub out cmp stos adc push in in scas gs jecxz adc leave por divb aaa jo cmpsl out and inc jmp pushf mov add js add dec adc sahf jo das xor rcrl mov pusha jnp jns push sub xor xorl xchg dec repz xor lods bound out iret xchg mov inc add mov pop sub jmp push fstl xchg xchg jg cmp adc imul push mov jg ret or sbbb pop test xlat aam jnp lret pop clc rorb push mov mov mov mov fildll imul add mov push enter enter xchg lahf push cltd jbe in popa mov adc inc xchg adc dec sbb pop jo test dec enter adc cmp aaa lcall stos cld cmp cmp (bad) cmc inc sub inc cmp sub pop xor add inc int sbb mov pop mov in pop sbb add (bad) and enter mov mov (bad) xchg adc pushf fdivp xor jo addl sub in jl adc push pusha pushf scas push adc add push loop std sub lahf or imul jo mov mov lret mov cmp out nop imul nop ret pop push js push dec adc pop cmp lea std fnstenv or (bad) in and mov push mov xchg scas aas ja adc pop mov in mov jle jns not pusha mov xor (bad) out fisub insb in notl sbb idivb xorl jp sahf mov cmpsb dec std mov mov mov aam add pop pusha pop push mov leave aaa push inc dec xor mov mov jne adc sahf xchg test out adc sbb (bad) int cmp xchg leave setbe dec inc and push pop hlt cmp (bad) add lcall adc pop and xor (bad) iret mov mov mov push ss mov rcrb add cmc loope xchg mov push aaa lahf pushf sbb inc dec xchg sarl movl pop fwait xlat xor jb mov or test data16 inc repz je test xor xchg push (bad) jnp mov xor (bad) hlt in sub (bad) adc add pop clc clc jle sub in sub xchg pop mov mov (bad) jmp xor lock mov out (bad) repz xchg add jle js inc aas gs mov mov dec pop test repnz adc or rcll call ret out jne aaa and leave push push loop lods and out cwtl mov aad bound push cmc jmp out mov gs xchg dec negb out shrb dec out std inc pushf mov sbb pop xchg sbb jge jp roll lods or mov or icebp loop mov mov cmpsb rclb clc lret aam mov cltd jno fidivr icebp lahf fdivs push loopne in loop sbb (bad) int push jbe sbb ds and cmc les es insb icebp ljmp ljmp (bad) aad adc das cmpsb xchg mov pop std pop repz imul sbb sub add push call xchg (bad) fadd scas ret sbb mov pop push sub cwtl or sub popf cmp es out xchg lret and (bad) sub xchg xchg inc sub cmpsb lcall rcll pop dec lahf inc inc mov or sti jg jge movsl fidiv add adc xor ljmp clc js rorl stos mov inc cmp mov dec bound jbe js inc xchg cmc inc movsl fnsetpm(287 or imul std xor ss std dec (bad) xor mov es or scas repz daa pop les insb jmp xchg adc push js or inc clc cmp push repnz cmp adc pop pop leave clc mov push ficoml mov push cmp dec in adc mov mov sbb movnti adc aam sahf mov inc lret test fiadd cmpsl cmc fs mov ljmp cmp lods out or test fwait js inc inc mov add rol mov sub push or push jo cmp int3 adc je sub or mov (bad) gs into push int ja sub (bad) or stos ret aad aas out insl xchg sub fstl bound mov enter mov cmp cs test icebp dec push sub movsb mov rcrb into jge jge sar xor xor icebp clc fyl2xp1 xor jp (bad) sbb push xchg jae insl add cmp cmc sbb sbb popa clc insl scas jmp xchg inc sub xchg in ja and sbb push push test (bad) and or or fwait div xchg (bad) adc push call sub jne sub fldcw imul scas in sub mov fnstenv mov fdivrs repz inc push in dec addr16 xor adc repnz cltd xor das sub lahf shll pop add les dec xchg inc adc lods aad cmpsl pop leave es and mov ret enter rorl jmp pushf scas mov imul in std icebp mov push add sarl lods icebp (bad) leave mov outsb fdivrl mov fist lock jle mov cmp testb mov ret lock pop adc mov fldt lea inc xlat aam push mov push rol mov and mov lret jl sbb popa test aaa cld xor popf sub movsl iret xchg pop cltd sub icebp test jecxz imul jp jbe jp dec xlat ljmp mov dec mov cmp dec pop xor sbb inc or shrb das rorl lea pop call xor jo and jae pushf (bad) or mov loopne stos mov test setg add shrb lret mov push mov xchg gs icebp xor outsb ds adc in fstpt xchg aam mov pop jnp mov inc mov test aam lock sbb nop es and imul popf cmp mov inc jne movsb mov xchg ss mov add adc das lret jg xchg int3 add insb testb sbb jae into (bad) pusha dec shlb (bad) or test dec lret mov adc and push push xor ret mov sbb pop mov rcrl add lods xchg push insl scas stos cmc fidivrl push sub cmp push dec fnstsw inc (bad) sarb loop jb add pop call lea (bad) jne pop sbb (bad) lods mov imul jae sbb xchg cmpsl sbb jnp nop push mov (bad) int3 adc pop pop lods pop jae js leave mov punpcklbw jne inc push jae lret imul fcmovnu jg imul push fsubs stos mov jle mov or insl insb imul push pop mov sub movsl (bad) push scas (bad) jbe xchg add out adc (bad) pop inc xor test cmp sub loope pop cmp mov sub test addr16 add movmskps (bad) lock add out sahf mov cmp lret mov movsb int ret add ja jp loope mov in cmp out int jge lds in lret or push and xor jge mov pop xchg lahf ljmp sub (bad) lret pop sarl dec add xchg inc (bad) jbe popf adc in (bad) or test fs xor and (bad) pop cld mov add test popa fnstcw or dec push mov mov cwtl sub xchg rorl push ja cmpsl and and push stc dec in pusha pop mov lods add scas dec test xchg push addr16 outsb data16 and inc jl jb and push xchg stc or test shrb fwait mov leave iret imul outsb pop dec dec add loopne call jmp pop std call fimul push mov pushf fcmove aad sbb adc adc xchg test out or mov pop jae dec pop mov and addr16 lret mov fldl outsb mov or or dec pop or push repz rorl icebp stos repnz cmp std dec inc lahf mov out dec clc add pop xchg mov jmp sahf sub mov sub xor (bad) sub mov arpl sti pop arpl push (bad) std dec push jno fistpll ljmp js pop cwtl imul bound mov dec call pop inc imulb or add jl mov and mov fcmovu sbb je cmp inc jmp loopne xor mov sub cmp sub in outsl insl pop (bad) mov mov cmp fcomi inc test mov push jo mov sub fst jmp add cli shrb lock repz fldcw jl call jbe (bad) fstpl scas jmp fisttpl shrl cmpb test stc fs out inc mov sahf lret dec call or jg mov dec int mov subb jbe,pt imul or cmpsb xor sub aam lock imul fisubr mov jb int3 and mov lahf push xchg movsb and aaa mov pop daa mov ljmp jb xchg and das cmp (bad) repz mov cwtl push rol jns push xor and stc pop aaa jnp cld mov jmp xchg adc outsb (bad) jb sbbl movl cld (bad) not adc in adc pop outsl cmp sahf jae dec jno mov push sti mov insl lcall mov dec xor push rcll xor inc xor stos lret pop or ret mov and inc (bad) cmp fidiv mov test (bad) jl enter daa mov insb enter mov scas mov int movsb cmp sbb imul daa mov pushf mov inc or dec clc cs mov pop iret push testl sbb inc icebp inc fmul xchg (bad) imul (bad) xchg or test daa mov pop push jns mov sub pop jmp add cmp mov int (bad) jge xchg mov xchg xor lock mov cltd orl fs jp test push dec das push std movsb pop and repnz add in aad out dec mov push js mov (bad) mov repz cmp loop pusha roll push pop jp fsubl fdivl cmpsb push insl loop scas imul jnp xchg or xor cs push loop mov into lock jl adc jnp adc mov add dec mov (bad) or mov mov xlat mov sbb sub add cld cmp add pop adc pushl xchg out (bad) ss jns mov clc arpl xor add sub jae jb out or lahf add add mov add fwait sbb sbb xorb gs lret leave fs lock (bad) push fucomip das mov popf mov divl mov and inc push aas packsswb in ds xchg dec jmp repz ret bound decb sub dec mov adc es out adc jno jne loope sub push add icebp push test cmp fdivrl dec mov and int3 jg inc add aas in xchg fisttp add fildl sbbb outsl dec fisubr cmc fsubs in lock sub push push bound lcall xchg or xor shr xchg cmp add jmp jbe sarb (bad) scas cs mov mov mov lahf in not inc jbe and jecxz pop cwtl xor movl sbb mov push cmp cmp mov inc sub cli and mov fs stos outsb pop cmpsb lods movl pushf insl adc jmp je cmp xchg sbb es and push pop shll shll jmp je outsl inc mov aaa popf mov fnsave adc test and add adc xchg push stc mov jb push pusha adc or and cld les movb pop rcl into js mov xchg mov xchg adc add (bad) stc sti adc push sub mov test mov mov ret jg bound (bad) mov cltd dec xchg mov movsb pop pop dec in mov cmpsl dec out sbb cmc adcl push es aad faddp xchg pop sub pop push in pop int3 push arpl pop sbb (bad) in mov imul (bad) bound and cmp mov mov dec mov push outsl stos dec push jle pushw sub aam mov (bad) fcoms test and loopne divb inc sbb enter roll adc (bad) xlat pop mov push aaa in in cli and mov mov and (bad) cmc (bad) call xchg lcall mov decl lea pusha daa xor sub test (bad) scas test fwait dec outsb adc mov movl jmp push leave int shrb push xchg mov shrb push int3 push jae stos stc dec arpl lahf dec addr16 dec mov cmp ja mov ds jae or andb mov add mov fstps nop cld out repz push nop stos pop xchg mov mov out fnstcw push test scas jo or cmc jb rcrb mov mov out pop mov inc fdiv outsb mov jl xchg out outsb push (bad) cmp fwait sbb movsb mov cwtl push mov cmpsb sub ret pop sbb loopne adc dec inc scas cmpsb xor push les (bad) mov cmpl leave aam repz rorl pop subl sti inc movsbl stos popf jnp repnz imul in adc je add sarb dec mov mov sbb fldt cld xchg xchg mov movntq out push sbb cmpsb arpl mov mov test adc daa dec or xchg test daa in outsb push jns adc pop iret sbb cmp leave cmp test sbb stc adc pop xor fwait push mov (bad) sti fsubl and sbb repnz sub jp pop adcl mov cmpsl jb lds out lods out cmp out imul jecxz jne dec adc ljmp push and stos jecxz cwtl xchg mov push and (bad) xchg pop int cli lock std fcompl sub enter repz pop repnz mov cmp xchg add in mov je repnz or fdivp cmp leave jo pop mov mov popa jl in push (bad) lds sbb pop rclb and and pop andb fcompl push test jno cli insl loope test sub imul insb mov rcrl call addl popl or enter in xor pop fisubr nop inc push mov lods iret xor mov inc inc stos sub sub loopne lret mov mov jle int3 test mov mov jb xor mov mov jle outsb mov add push xchg xchg ja (bad) and dec rcrl stos stos sti mov cmpsl cmpb pop lret cmp mov in xchg push inc and mov test (bad) sbb cli insl pop mov sub mov (bad) scas icebp jb xchg rclb je sub aam cltd mov push xchg jbe add sbb push mov adc mov add lods stos sub and cmp push pop test push int3 adc dec xchg lds inc dec fwait sti mov sbb inc fwait enter jbe shl mov ljmp ljmp mov fidivrl inc pushl loope dec jno test popa add lret push or fstl xchg add out adc xchg cld imul int daa ljmp test inc aad aad pushf jp cmp mov mov sbb icebp mov pusha inc mov xor in lds mov pop adc test out adc xchg mov inc pop (bad) (bad) scas lret (bad) loopne pop sbb mulb dec pusha rcll xchg cld test adc push daa mov jl,pt sbb pop and popa and mov sub mov sub sbb pop icebp or mov cmp and sub adc cld pushl mov adc xor xchg stc ljmp test and inc out jmp add je out adc ret insb xor aam dec sbb ljmp push lods jbe movsb jae xor jnp pop dec ss out xchg pop pusha pop mov fnop fucomip jo lahf inc mov xchg xorl mov add pushl mov dec push mov ffree mov push iret xor jge and mov lds xchg leave into sbb fucomi jo adc popf dec lret cmp lea stc ret jns inc enter cmp inc data16 mov jbe add outsl add (bad) and aaa js mov sub lahf xor mov and pop and arpl and inc inc arpl lods jmp arpl jb enter jbe (bad) dec out adc out pop mov ds aad or mov xor and jns aas ret in icebp fstps aam jno push mov mov push fistpl aaa outsl sub fnstsw lods lock mov stos xchg mov in and cmpsl nop xchg xchg cld (bad) mov and sar and pop mov xchg out ss test xchg xchg dec test ljmp enter sub jb xor (bad) mov test imul sbb ror cld dec sbb pop or or mov test fwait ja rcll in and jmp cmp xchg xchg inc imul jbe xchg hlt hlt push jne jne pop std mov loop clc imul mov imulb ret fcmovbe mov jae adc dec mov out icebp (bad) bound aad add not mov imul (bad) mov and sub shrb data16 xchg incl (bad) lea inc cmp rorb sub scas (bad) cmp enter out cli test in mov (bad) stos and scas lea mov into mov mov pop int push leave dec stos dec fsubl adc jmp test mov sbb xor cmp jmp test mov loope and movsb or cs and inc cmp or lea loopne jne stc movsb xor int3 (bad) aaa (bad) stos lock dec ds jle or pop or cs mov out inc das lcall pop mov sbb mov cs or (bad) mov lock hlt xor jne and sub mov out xchg (bad) sub test mov jbe push cmp push or dec pop shr mov btc cmc mov test movsl mov jb mov clc mov xor (bad) xor mov sahf inc insb in scas cmp mov clc adc out into ja dec cld push popf lds imull and dec sub cld (bad) pop fcomps test push nop rol mov das js clc adc sbb icebp cmp mov movsb cmp cwtl push jae jae jg xchg ds arpl rolb stc push insl out pop fdivl test (bad) ror fiaddl xor movsb ja or adc xchg mov test push add inc mov lret xor aad roll movl sbb mov ret mov aas add mul mov into jbe jecxz out fsubs pop sub insl xchg das pop cmp and adc sub daa popa incb movsl lds sub rcll mov int dec nop nop and ja sahf pop add pop sbb pop movsl imul loopne dec push cmp lea add lcall xchg xchg inc xorb outsl out rcll inc aaa sub je fsubrs jbe cmp xor repnz dec add sahf dec push mov div arpl out adc jecxz (bad) mov xchg mov xchg clc mov das jg cmp addr16 sbb mov out inc sysret cmpsl mov mov sub and int jmp fidiv (bad) lret adc lds andl sbbl aam adc jno mov pusha (bad) fldln2 mov lea stc jl jl xor add call out and daa (bad) jo jns dec jecxz mov jb add jne mov mov xchg jecxz jo das rclb mov mov mov (bad) loopne adc sti inc repz pusha xchg flds mov (bad) sti or push push clc in mov pop jmp sub (bad) add xor fsubl pop sti adc xor jae jle stc xchg cmp (bad) mov scas mov in or test or adc stc out call into dec pop push outsb and mov daa das jne mov cmpsl dec cs sub xorl push and fisubr xchg aaa das push cli gs lret xor push les fs jecxz pop addl inc sahf loope and add clc pop xchg pop lock test aas shrb shrl jmp ficoml xchg add aaa imul xchg (bad) and cmp loop mov cltd xchg and not out xchg add ret mov fcomps cmp (bad) sbb lock scas jbe outsl jp (bad) int3 mov adc xor (bad) vpshlw clc cmc add cmp sub jle imul (bad) int3 pop in ret hlt clc enter jns shl in pusha push jecxz outsb mov jo daa jno sbb xchg push (bad) es pcmpeqd lcall (bad) xor jge mov xchg mov mov xchg shr xor adc aaa repz arpl cwtl and jg hlt xor jg or jg xchg xor mov cmp clc imul mov sbb mov test mov inc mov mov insl jns cmp es pop shrb push test mov xlat bound in int mov inc dec cmp (bad) sar sub mov icebp sbb pop (bad) pop mov fmul aam adc xor push inc popa xchg mov lods mov scas xchg or test jecxz insb or test out test jle nop xchg xor lret (bad) xor insl hlt pop je push mov cwtl mov jg mov imul cwtl int (bad) xor inc sahf dec mov ss and into ja lods aas movsb stos adc sahf je mov mov mov mov ficomp xchg test sbb (bad) enter out mov mov jl cs or repz rcrl push test ret cmp das mov aaa rol icebp cltd les jecxz cmpsb (bad) (bad) in push mov mov cmp mov aaa lret jbe iret push mov jge jmp out and and cli mov inc into lahf push hlt rclb cmp arpl mov mov out cmp mov imulb cltd (bad) adc outsl push imul test mov jns ja xlat push sbb or xor stc das sbb pop sti jecxz adc sbb test inc insl xchg mov xchg jg pop ds andb pop out mov and dec movsb (bad) int3 sbb jmp hlt sti icebp xor inc inc movsb jecxz mov int push cmp add mov fcmovb or fdivrs jg and pop insb xchg jnp mov pop mov xchg dec push into (bad) sti cwtl rcrb add out stos xchg loop aam sub mov (bad) fwait pop and repz lcall mov adc popf mov (bad) jae mov ret jae dec and sbbl nop sbb push ljmp or js sbb xchg add stos popf outsb cmc cmpsb aad jbe js mov add pop sub jbe rcrb xchg aaa mov rol inc int or leave or lea sub std mov jmp (bad) jae std fiadd bound sub inc test repnz cmp push mov test inc mov movsl test fstpt mov xor push inc jle enter push add bound inc dec jne mov dec push jne cmp xor cld inc lahf or xchg aaa enter cmp dec sbb enter (bad) jns movsb bound pusha in (bad) sbbb and cmpsb jno pop rorl jle addr16 adc out gs fsubrp or scas add xchg scas sbb stos push sbb mov and (bad) (bad) (bad) int3 xor jb sbb dec in fs mov roll pop loopne mov popf dec sub xor mov int push sub fwait mov loop pop aad mov and xorl fldl lcall hlt add pop pop adc sub sarb arpl or outsb mov and pop xchg repnz mov sub cld and lods xorl enter push mov push sbb arpl in xchg (bad) mov pop push ds sbb jno stc add and lret mov jno test add cs cli mov sub inc mov out jbe (bad) call mov stc push ret push inc sbb xchg adc ficompl test add jbe out ja jns cmp lret cli push pop push sbb inc push movsl mov mov fildl in jle mov adc ret clc jae xchg ficompl rcll lahf fisubr xor insb orl add inc ja or inc xchg push xchg add mov out jbe out pop jno xchg xchg mov insb orl mov or data16 mov add xchg inc mov xchg sbb xchg mov in add rorl movsb out jge ret push aaa jle sbb fmull jmp nop in rclb mov jl xlat push pop out inc jp xchg push sub in ret testl mov hlt das test jecxz int3 dec (bad) (bad) lea sbb push es stos adc insl xor inc mov push aam aam out js ja xlat jb movl sbb xchg xor mov lods sub imul xchg mull cmpsl test fdivrs push mov sub cmpps ret fwait xor ss fimul jp fwait pusha dec aad or xor fisttp and push data16 test notl ljmp fadd push stos xlat pop mov loopne pop gs and mov call inc cmp sbb sub test out xchg js ljmp outsl shl xchg jmp push outsl mov shlb sub and mov xor loope nop sbb mov push pushf mov push fdivs leave xchg jge inc das pushf es ljmp arpl dec mov les push or fnstenv push cmp shll flds popa lea dec gs push ljmp mov mov jb adc leave dec outsb xor dec shrb mov jnp clc xchg xor outsb les fnstcw mov notb xchg mov (bad) cltd outsl mov popf enter pop decl stos into mov xchg mov addl ljmp test aad outsb dec int3 dec or fsubl and xchg nop movsb aas adcl stos mov xor sahf aad cmp ficoml rclb iret inc lret pop fwait int3 dec cmp push jbe cmp mov pop lds aas gs shrb and cltd mov xchg and or jl pop (bad) jmp dec xor jg fbld dec aad scas aam mov push cmp xlat dec loopne jns xchg mov mov jle sbb xchg dec xchg cmp cmp cltd jl xlat cs cmpsb cmp xchg andb xchg mov add push and mov xor inc mov in and sbb stos ss xchg movl xlat iret dec mov ret jb or and dec mov fiadd pusha std lock repnz clc and and fcmovne js mov ret mov push loope sbb and movb ds lds lret mov inc or je cs push int pusha scas jl fmull out dec xchg nop addr16 clc dec adc xchg es adc ja out loope add sbb rorl jg cmp cmpsl mov push std pop sahf movsb cmp movsb adc loop sub sbb out xor mov int3 xor (bad) xchg and sar bound aas (bad) fildll (bad) mov xorl cwtl fstps push insb mov xchg adc (bad) aam pop mov out in xchg fcoms mov in xor add jecxz xchg ficoml fnstcw inc jg jae adc dec mov jae inc inc aas cmp jno in cmp sbb pop cld in loopne cmp in xchg leave pop pop pop arpl cltd or cmp fldenv add aad mov mov repnz dec sub mov int push mov dec gs (bad) std repz inc mov fisubrl mov adc in add or es push mov stos and inc push pop inc sub in jns test or xchg or imul sbb lret inc idivl inc push xchg dec adc lahf clc mov aad and dec je or nopl sub test pop cli xchg cmp xor mov dec sarl add mov cltd stc mov add jmp push mov ljmp mov les divb pop (bad) xchg test ret mov enter fdivs daa data16 (bad) mov sti jecxz lahf adc inc das xor (bad) push dec outsl fnop add pushf jbe xor and fs push pop sub (bad) push mov adc in mov push gs jno xlat out add push sbb test dec mov cmp or jecxz test xor nop cld in lret mov fidivrl mov mov adc inc decb or jns popa inc hlt xchg fidivrl dec scas mov sub xor mov mov cmp std in xchg in in add test xchg mov and jle inc lods es mov mov mov push push push outsb dec pop (bad) and inc adc rcll and pop mov sub std or fwait cmp es pop into test mov and jge loopne adc mov stos lods in mov push imul pop sub daa push adc mov push outsb xchg xchg inc xchg ds mov leave (bad) xor jo fs mov push sbb or or inc scas xchg stos xor cli mov xchg push std insl hlt cmp cwtl xor xchg loopne inc and push and xor lods loop pop and jp pop es lods xor (bad) ljmp mov outsb inc xchg pusha insl mov lds adc das (bad) ss ljmp scas out mov loop cmp scas push jne xor pxor jno rolb dec jnp js movsl cmp test cmp (bad) imul jge jo icebp rcr pop int3 jne cli mov mov add insb sbb imul mov mov repz push inc mov xchg sarb add test mov mov scas dec cmpsl repnz shl push mov dec fidivr and les jae cmp in dec aam xor aas mov mov add or cmp adc add int3 fcomi and cltd dec ljmp (bad) sbb adc mov push bound fbld mov es pushf je inc mov (bad) (bad) shll outsb fwait mov sbb loopne jmp xlat cmpsl (bad) pop push or icebp inc daa popa mov fstl (bad) or mov cli mov in xchg stos push mov ja (bad) add jne xor aas cmp je sub rcrb jb jae push push xlat int sbb dec jecxz inc mov aad pushl cmc fiadd mov dec ds aas insl and dec push ret iret ds iret mov test ret cltd out hlt and xor arpl aas fxch std push roll call mov lahf (bad) jno pushf out inc sti xlat dec mov cmpsl or jle xchg mov mov sahf or call gs adc ret imul (bad) xor push fcoml lea fisub and (bad) ror xchg cs xor fdivrs test iret cmp ljmp aas push loop in lea (bad) jp cs cmpsl pop hlt pop imul push adc out sbb sub push bound adc fs push pop mov aas out xchg pop test xor add nop dec loopne fnsave pusha cmpsl push or lods cmp dec cld movsb cmpsl cld in stc fnop sahf add lods cmp mov das mov lret insb out mov into sbb adc daa ljmp aam jmp daa or nop jge inc xchg pop sub xor je rorl (bad) push mov leave inc sarl jg xchg jge inc loopne cmpsb xchg (bad) insl mov por es xor cmp enter push pop push or call (bad) push jbe mov aam push out cmp ss ljmp in ret mov std in push mov or and dec insb ret dec movsb cs outsl popf push int3 scas jmp mov data16 stos (bad) iret lods data16 sbb stos or int (bad) fdivrp js cmpsb or push aas mov xchg jno xchg (bad) ss (bad) sub or cmp cs out mov push scas in ret cmpl loope popf pop adc insl inc int (bad) cwtl out push stos in mov subb ret mov cs lds loopne outsb inc lret jp adc push mov ja push loop lods and sub mov insb ror gs jl sbb adc dec jl loop loop in mov push stos adc mov std lock cmp and mov leave lods pop fidiv lret shrb pop stos ss imul test sub out pop sbb push divl jno lcall dec mov mov sbb sahf pop mov movsb push ljmp pop adc sbb sub jg mov fisub and lods mov test pop inc int3 rolb xchg xchg movsb xor test and pop dec les enter fldt jmp sub mov in lods lods push repnz je xor mov fmuls xor pop push hlt push sub pop (bad) outsl sub dec lcall daa jp stos dec pop xor inc sbb sub pusha aas jnp or dec dec jns in scas fadds xchg out sbb push mov xchg push push (bad) lahf mov cmpsb scas xlat mov fldt adc mov test cmpsb mov sbb aad pop ljmp mov and cli jmp or mov or ret xor js addr16 (bad) popf push dec pop push std adc mull mov xchg sub test jno dec ret mov das fs popa in aas and mov js ljmp mov pop dec rolb clc xchg nop and or push xor orl imul insb jno (bad) jns in cmp pushf dec insb ret mov loope or fistp rdtsc pop xchg shll decl mov es notl dec addr16 add jne,pn fistpl outsb lret popf call cld cmp rcr xor jo fidivl mov addr16 push push add test out push lea cli and icebp jp fxch loop xchg stos (bad) mov (bad) add mov into stc cmp mov mov and inc lret call and movsb xor cmp arpl mov sarl stc mov fwait insb bswap inc xor xor inc fwait in adc sbb sbb xchg in cmpsb jmp jecxz push dec dec inc aas or jge push push sarl dec mov out insl pop push jg adcb pop int3 mov add dec mov in int3 repnz scas mov nop pop cmpsb pop cmpsl dec insl out push push mov mov pop pusha or aas jb mov sbb cwtl insl pop outsb push mov mov cli daa xor sub aad cwtl and xchg add test lea sti gs adc (bad) pop je mov mov mov (bad) js lret mov sub or sbb mov std (bad) mov in pop push sarb add or dec mov sarl ds aam mov pop repnz shr dec bound (bad) inc jbe (bad) mov rorl mov shrl inc xor test xorb and inc test xchg pop mov mov jae (bad) lcall xchg cmpsl and test icebp mov push mov inc js popa cmp sub ret mov add aad cmpsl adc (bad) (bad) and outsb test mov mov mul fsubl orl jle fbld sub fxam aad pop enter sbb push inc outsb aad and ror xchg inc loopne mov addr16 pushf and mov dec jmp sbb mov hlt imul jae das (bad) jle push jns enter fs mov in inc addr16 (bad) or adc jg xchg xchg insl (bad) mov and mov mov mov in movsb insl sbb cmc fsubrl dec and popf add div imul cmp mul out les or xor push inc rep scas xor sbb add fwait out cs aam xchg or out pop out inc (bad) xor sbb dec xchg neg (bad) outsb mov dec jecxz gs std mov jp aaa pop mov or xchg mov jp and pop or and ja test push call mov mov sub movsb lods sti mov pop push rcrl cmc jae addr16 jge imul push mov cmp out adc test push push sub shr ds cmp or or orl movsl lcall gs jo insl mov xchg pop in jnp push xchg pop mov mov std pop test jae movsb pop cwtl lock sub cmpsb push mov imulb sbb outsb ret insl je bnd (bad) push jle lds out push (bad) push mov inc pop stc ss lods sub mov mov mov jne push mov shll jecxz ficomp push jmp arpl pop incl add mov sub xor sbb push rolb loopne in std pushf in dec push cmc dec pop adc push pop daa xchg outsb (bad) pop pop sahf rcrb mov jb outsb xchg jo pop mov dec inc lods push inc icebp inc and sti adc std jmp loop stos scas bnd divb insl mov jmp out adc and fldt mov lcall lret sar test jne jmp mov mov fiaddl lret in sub push xchg fstl dec imul push loop popf pop das fidivr xchg or push inc insl fisubl cmp push out mov push (bad) stos ja lcall ja in mov fiaddl sbb les outsb mov sub dec mov mov ljmp js pop imul jle xor jge xor arpl push out stos orb out out into fs fist dec inc cld gs outsb fiadd and pop dec adc mov and xor je test jp or or mov adc fiadd lcall push cmp ja jae adc fistpl fsubrl orl std xor mov mov mov aad insb push xlat cmp popa popf or ret fs jnp inc cmp stos inc jns pop or fnop pushf add mov pop inc and jmp xorb xor scas fisttpl xor jecxz sbb add iret rorl fsin sub inc andl push sub cs cwtl in in daa dec sub das popa test stc push imul cmc loope enter sbb mov subb (bad) loopne cmpsb aad and push cltd fimull push jmp dec lods fmull sahf sbb sahf pop sbbl inc das and ja pusha fs addr16 addr16 mov and sarl nop push shlb negl imull bound sahf jns sub std imul test push xor or movsb call fstps and adc das pushf inc divl fucomi inc sub daa stc xor sbb movsl adc sub push xor mov jo add sbb dec scas dec push add xor sub jno fwait mov cmp xor scas bound in in cmp push ret jbe iret xchg aaa stos mov or push add pusha pop hlt pop bound pop mull inc (bad) mov nop or loope mov das fwait into mov adc dec (bad) leave push xor jae into pusha xchg (bad) mov mov fwait inc je mov inc cmpsl push dec sbb mov (bad) mov dec fdivrs xchg (bad) fisttp inc pushf lods dec mov addr16 andb push leave negb push into out dec dec out (bad) lods stos movsl lods mov nop addr16 sbb or les sub xor pop aas dec adc sahf loope outsb enter mov jnp fcoms push sti iret addr16 repz pop add inc mov and cli adc int xchg stos fisttpl push pop jae jle lcall adc fcompl stc lcall rcr dec xor outsl or adc jg dec arpl nop out repnz gs jecxz cltd inc add std cmp xchg push mov jmp dec ret iret aaa push fistl sub or push push cltd nop lea jae cmpsl (bad) std xchg jno or arpl inc mov in xor leave bound xor fidivl ljmp int or jmp and xorb inc push outsl out fldt lcall jg ja inc arpl xchg xchg lahf push adc out je loopne gs jl lea xchg mov pop dec popf mov sbb mov ljmp and rcrb inc sub (bad) dec hlt push adc xchg out or incb push div cli enter inc jnp testl movaps mov cmpsb adc cld mov and dec sbb mov rolb mov stc pop jno rol push jg ljmp (bad) in xchg int ret or cmc jle sbb cltd inc pusha cmp imul aam test mov mov jge sub (bad) sub fsubr adcl inc mov stos jno push pop lret in pop sub mov test es pop repz fidivl and cmp push data16 and mov inc mov mov mov push pop rcrb mov jns or cltd (bad) into aam xchg mov and cmp push cmp mov (bad) repnz mov stos dec jle popf inc test sub cmp xor fdivl fisub push ret pop fnstcw xlat adc addr16 mov lock lret push mov mov aaa jne sub out loopne lds xchg xchg xchg out add jne jns push inc out (bad) cs pop movsl and fcoms or in je jbe ret xor hlt bound pop mov mov cld mov test add or jns fadd cmp mov mov fdivrl repnz in lret and and test pop sub sti jno sbb cs insl loop popa mov mov cs pop inc ds sub ficomp push ljmp xchg fsubl sahf js mov pop xchg xor mov cli adc notb xchg fdivrs fidivr xchg iret sub shrl xchg test in mov xor xchg daa notl movsl push aaa mov pop sbb sub jns test aaa sub mov pop adc inc mov add dec in add scas push xor mov jnp cmpsl adc inc ljmp xchg inc sub jmp push mov in and jo push mov popa push dec fwait cmp ja mov jg (bad) lahf cmp enter lcall pop jecxz cmc jg sbb mov notl push xchg cmp les fwait mov pop dec daa test test inc cwtl sub xor mov pop mov adc cs in push adc mov popf adc jp test xchg (bad) icebp aad lcall and add movsl cmp icebp rorl addr16 jmp out jnp mov insl jl rorb xchg xlat stos stos jmp fwait mov inc int out inc ret cltd mov inc test lea mov mov inc xorl lahf jb (bad) repnz cmpsl dec jno das cmp sbb cmp sub lret xchg xchg int3 out xor cmp mov mov std jne sbb mov test mov cmc xor out imul (bad) jno pop shrb aas outsb push jg inc cmpsl int (bad) ficoml mov mov dec inc gs in xchg pop jecxz xchg or imul lds push aam mov sti mov bound hlt stc (bad) jl insb (bad) popf mov cs or cmp test mov hlt hlt cwtl pop dec sub cmp jno adc cmp nop ret nop pop stos cmp loopne aad xor or mov mov xor mov jbe push mov jns adc mov mov cli cmp xchg mov sbb mov loop iret fiaddl aas call lods push int pushf mov adc xlat xchg fnsave lods dec bound push adc sub les andl das add dec outsl (bad) mov lods jne push sub std in xor inc arpl or dec nop out dec iret lods lods inc shll aad cmpsb movsl lret push mov scas sbb shr cmp xor nop xchg lods call lcall arpl popa out test rcll adc in fidivrl movsb cmpsl pop aaa aas sub std pop (bad) add lret enter fsub mov pop jge mov aas sbb dec fistpl pop (bad) pop push cmp pop lock fist pushf (bad) push cmp mov sbb push mov rcrb sarl leave fistpl sub stos jb out dec pop (bad) push rolb mov cmp or jnp cs (bad) xor cmp push jle cld push mov ja popl notl call scas loop loopne ds and outsb (bad) out mov mov mov adc xor fmull dec cs pop leavew insl arpl fldenv scas sbb sarb notb mov loop mov pop lcall loopne rorl stos mov dec (bad) jne das repnz push loop bound bound icebp dec pushl xor mov cmp jecxz sub and clc sub mov js mov addb cmp cmc in jbe in jecxz stc (bad) xchg call orl xchg aas mov aad sbb ret pusha mov lock fiadd mov add ja cmp push add jnp mov out arpl sub pop push mov mov mov jl (bad) jns push push mov push jb add cmc (bad) jae xchg mov inc ret leave pop jg mov daa dec jge jp in pusha hlt ljmp nop rorb sub lds test jg (bad) outsb mov cmp xchg push mov data16 add jmp test in test mov push dec out out mov sub sub mov cli add jp shr pop bound sbb jmp mov cmp (bad) pusha andb and (bad) mov adc sbb in in or out (bad) mov daa push or jp leave and jmp or mov add rcrb cltd dec and jae jae ret xchg jl mov je pop add sbb aas leave mov inc xor js sbb popf in scas sbb xor ljmp pop jmp scas sub cs test add shll adc (bad) aaa stos xchg push leave jnp lret mov jnp popf jnp add (bad) cmp mov cwtl fwait xchg daa cmp pop test test ss xor daa jo subl dec mov js xchg xchg push or dec in pushf outsb mov mov or or out dec lahf inc adc ja xchg xchg stos inc rep push mov mov fist leave mov xchg js aaa cmp pop xchg adcb mov outsl mov mov add pop inc mov jae push jl mov cs xchg sbb and sarl mov jno std out lds or das setns mov jo adc rcl out sub leave call fstps xchg ds (bad) lret mov add add test or fnstsw adc cwtl dec sub out pop add jg push push mov or scas jp ret push cli dec dec add pop ror xor mov fnstenv aas jae aad es in xor das pop xchg lret pop repnz mov jge lea sbb (bad) sbb mov sub rclb sub mov ficom lock loope dec push lahf fcmovnu push fnsave sub lret test inc dec mov lods int3 cmpsl push push stc jnp lahf fdivr mov and fld mov push mov and js (bad) mov int3 in pop jg and mov mov push les pop lret add ret popa pop pop les insl mov roll inc add inc jb sbb pop adc push (bad) mov xor adc subb sbb movsl mov gs out jo jb push rolb movsl jmp stos sarb push adc mov push in mov cmp lahf jne cltd sbb mov popa ss jno (bad) mov xchg outsl bound repnz mov insl popl fdivs jbe (bad) repz mov test imul sbb xchg jne inc dec adc nopl test les imul negl or cmp mov js jecxz sti (bad) cmc lods add adc adc loop or dec jo (bad) xor mov adc xor mov mov push and push mov push scas and incb jl cwtl and ljmp mov sahf fiadd fwait jne jp xchg in lock push adc or adc std mov outsl and cli je out subb sub mov xor incb fadd dec push mov les data16 ret xorl or xlat mov jnp cs aad xchg or imul add mov or mov out jg insb test cmpsb cmp xor outsl jns xchg popa or pop je jbe clc xchg js push shll cmp jns ljmp into lret les shlb mov jno adc (bad) das outsl or call or test pusha jg cmpsb xchg and jnp mov in idivb imul sahf outsl (bad) jge cmp pop push sbb add je jle cltd cs cmp pop cmp mov fisub mov adc (bad) out (bad) int jb sub test and jbe loopne sbb cmp test cmp fmull xchg sti addr16 pop imul stc xchg and sub popf ds int3 testl xchg test jns arpl ljmp in pop push dec (bad) xchg push stos xchg sub loop mov jo xchg jns xchg sbb test (bad) (bad) jecxz out imul sub xchg mov pop pushf cli loope adc push ficoml add pop inc bound in adc int3 xor add jp sub mov pop dec cmp ret dec dec xchg js adc cmp das dec pop movsl xchg pop jecxz push sub mov push mov lret add cld outsl inc pop daa cmp jnp es push in (bad) inc and mov sub out xchg cmp pop xchg mov in daa pop into roll push test cmp cmpsb mov shlb and mov sub lock rorb dec jmp fiaddl sarl in pop mov mov add sbb sarl (bad) in jnp fist jecxz es les lds dec push icebp or mov sbb push repz lret int3 enter dec pusha inc and (bad) mov xlat mov mov shr repnz inc (bad) stos nop rorl dec daa test popa cwtl inc sbb push stos (bad) scas sub dec adc or arpl jmp jae std mov cmp or or inc test (bad) pop mov cmpsl or mov sahf insl xor rorb movsb xor movsl inc lods dec push sub push (bad) out dec pusha jne pop imulb pop sarl leave dec fiadd push icebp and add jbe mov jecxz sbb and xor mov xchg daa fbstp inc sub dec into dec mov jle jmp mov incl xchg dec add sbb stos jns pop cli jno fwait dec jnp dec push lret enter add jecxz jl xor inc test mov adc lock out cmp sbb sarb mov mov mov dec in mov daa out insb xchg push mov cmc lahf dec jp inc xor movhps cmpsb popa adc lea out push into das dec lods (bad) idivl shl push mov push in roll push daa add add or cld aad mov out mov mov cmp or adc adc nopl movsb shll jmp in adc adc xor das shll jo inc push rcrl ja hlt and inc mov cmp pusha cld in lds push dec test push int test movsl mov mov or xchg push adc addr16 iret insb or test inc out mov cltd lahf arpl mov dec pop int cwtl pop cs ficoml mov orb in lret popa mov cmp jb mov mov or in arpl mov adc mov xchg js,pt cmp (bad) mov or mov inc gs divl stos adc dec arpl scas adc fldl pushf int3 fdiv sbb cmp mov mov pop mov or bound je inc adc jl,pn cmp (bad) add jg ds movsl in cmc aam cmp cmp cmp mov imul inc mov fistpll (bad) ja jb outsl fadd nop mov cltd int enter movsb mov cld jae repnz mov inc test push mov cmp insb mov jbe insb add fsubrs dec add push in call xchg sbb jge les or repz mov je sbb add adc in outsb pop fidivr xchg data16 bound inc les ljmp jecxz cmc stos add daa push cmp (bad) jnp in fs or sar loop jno sbb sti stos and and repz jg mov add mov shlb outsb xlat arpl dec add in fsubl and add pushf shlb push mov lahf lds stc cmpsl movsl (bad) pop aad enter testl loopne pop pop inc test dec jmp add push mov push popf adc stc adc xchg or xchg mov insb movsl movsb push stos jg adc mov push test inc gs lahf xor fnstsw inc or xor in das and pushf sub leave fstpl fistpll mov adc es adc pop ss (bad) mov je or stos jecxz dec fnstcw jns push into sub sub inc add adc or outsb les push stos fistl jl xor cs lock or xchg push jge push push and subl cwtl mov mov add subb jnp test rcrb fidivr imul popa stos sbb imul (bad) iret xchg push pop mov aam xlat dec xchg hlt fstpt test mov movsl adc rcll and mov push enter jmp jno out arpl cltd inc add ret test lcall gs pop mov aas lods ja sar add lods popf scas popa jb imul nop cmpl fnsave xor inc jo add jp sbb (bad) movsl push inc rcll push pop and adc js or fsubrs (bad) test lret shll xor ljmp and mov xorb loopne jae addr16 int3 pop mov xor add mov (bad) leave repnz js aad cs mov loopne test scas sub arpl sub (bad) rclb mov xor add ljmp cld xor lahf mov out and cli mov fcomi mov rcrb fidivl cmp add cs stos ret lea xor sbb sub pushf ljmp jg and mov cli test pop stos jmp pusha inc popa pop push and in dec das cmpsb insl adc sub mov and loop mov cmp dec sub in pop sub scas int jecxz adc xchg push pop or dec mov sbb sub fcmovnbe data16 dec cmpsb into (bad) popf cmp adc sbb cltd sub negb add adc repnz add fsubrl imul xchg fiadd stos inc push (bad) lock add out push sbb gs sub enter in int3 fsubrl or push mov sbb mov jmp cmp fldcw xchg sarl mov fbld lahf jo adc inc inc stos gs shl cltd mov cmp dec loopne in adcl popf push lahf xchg in sbb xchg push nop jo push mov sub adc in shll push (bad) xor int3 push in sub sub xor and js into (bad) xlat pop lret push push xor mov stc js fildll xor lea addl cwtl push inc and (bad) and sbb mov rorb int3 xchg or cmp jle pop jmp xchg dec add das push adc sub insb mov (bad) xor or mov movsl sbb clc fidivrl imul xor inc in inc rcll js inc mov mov (bad) clc inc out mov inc icebp pop mov fwait mov imul fist cli jo inc xchg push inc dec (bad) mov adc out orl and push jb xor lcall pop lock push popa (bad) mov loopne mov shl ja pop inc int3 (bad) mov inc pop pop fdivrl pop dec cmp roll mov jg rcr cmp loop pop and inc sbbb jb lods and push ss mov pop dec mov icebp mov jle mov cmp outsb or lcall cmp gs pop and (bad) (bad) pop dec mov xchg jae (bad) mov rorl push lock jne (bad) and ja inc outsb jnp cs push test jp mov inc ds fiadd (bad) pop iret fisub pusha pop jge add inc pop inc or or insb jg and aam mov (bad) icebp sbb hlt pushf sbb pop xchg cmp jbe xchg add or in jp jns jnp push lods add shlb icebp mov dec adc addb xchg icebp cmc (bad) jge pop scas sarl push rolb jg out jne daa add push dec or icebp sub cmp hlt mov xlat sti mov gs cmpsb dec mov test insl adc ret aaa das xchg push mov sbb sbb or leave xor cmp sub outsl fwait ret add psubw sbb dec repz popf popa mov insl rolb xchg sahf fs cltd daa mov movsb inc and sbb xchg push mov and cmp jl fisttpll scas popf rcrb mov inc push pop int dec addr16 sbb in mov cmp inc sub sti fwait jae xor daa push lahf fmulp push hlt mov or ds mov sbb idivl andl xchg (bad) aad scas sbb (bad) and imul mov popa mov mov push inc outsl pop pop pushf mov aam jle dec in xchg test orb jb pop adc out push fiadd outsl xor scas out xor mov cmp pop aas mov mov inc test push cmp jg mov mov xchg daa outsl add das test jg lcall fwait ror dec xchg cmp fs inc rorl xchg inc test mov xchg dec push outsl push arpl lahf ja xchg jmp ja jbe stos mov ljmp pop push and mov test add inc and add push into xlat fmull jecxz test dec iret sub shrl pop sbb mov sub push (bad) out std std jmp stc cmp popf lea sbb (bad) mov addr16 xor fbld push daa fcoml imul sub roll sub mov insl xchg int movsl dec or aam xor dec inc movnti inc push adc xor out pop add jge mov test xchg pop xchg popa mov mov or jmp lods (bad) sqrtps jno jmp pop aam dec mov out cmpsb cltd pop rcll xchg jecxz add jne mov cli mov cmp cmp or ficompl gs lret add and orl dec inc xchg int xor ret mov push bound aad test pop dec sbb test inc push aaa or das lds mov dec mov add orl mov cmc nop or in inc add (bad) test pop stos insb (bad) mov mov xchg or push xor cli push xor shrb leave cmp cltd sub push mov add lods mov mov jne loop sub pop and cmpsl fdivrs shrb add inc jo mov cld mov scas push ret leave ficompl out ret adc pop sub or dec fwait xchg mov push push xchg cmp dec jp std js (bad) ss pop std xchg cli and aad jnp leave ret aam es or arpl test adc mov or pop xchg sub jo out cld pop out push sbb push dec jmp xchg loopne out jg add icebp aad sbb (bad) ja add push stos test dec mov inc dec jg mov mov imul aad pop (bad) or aas shrl cmpsb push cmp loop inc fild dec aas or je xor mov and xchg sbb fdivl call loope mov fcomip notl in fdivrl or in mov inc ljmp xchg pusha loopne xchg cmp loope fxch mov fstl dec jo (bad) jmp sub jg xchg push mov aas and lea mov (bad) cwtl xor icebp xchg (bad) dec repz fs push leave cld lds into push inc ret movsl std sub adc adc subl je fildl repz jmp pop repz std daa fnop in lcall lods inc jle or dec fidiv xchg cld sbb sub (bad) ja jnp test cmp inc outsl jns mov cmp adc popf xor dec adc (bad) iret fstpl pop test daa lret fcmovnu mov sub out add test sbb jno or gs adc sub sti imul (bad) lds into xchg psubsw jnp repnz sahf sbb add movsl jecxz cmp pop mov out inc dec stos pop ret das add add push gs arpl xchg dec inc push xchg movb dec cli rcrl out jg out jg popa mov jnp mov mov inc mov jbe scas or cmpsl iret stos adc fs sbb fmuls or shrb lods popa xchg push mov mov xchg mov pop jnp pop inc sahf jmp sti pop fsts jg mov loope add inc lret (bad) cld daa je pusha pop (bad) inc inc mov mov bound fcoml iret (bad) shlb clc mov test push adc pop and cld sub or sub sub xchg fistpl adc cs and divb fisttpll inc int mov add inc or cld cmp xchg ds ss sbb mov int xchg popa cwtl mov lahf (bad) arpl mov lcall ret mov push xor push outsb dec not xor movsl rcrl jmp add cmpsb gs popf inc lods icebp push icebp and mov ss jns adc adc lock mov mov mov push adc fs aaa (bad) stos frstor dec (bad) or push sbb popa repz mov arpl sar jle fildl arpl cmp mov dec rolb loopw xchg sub in frndint cmp outsl mov sti sbb fidivr in add push in or cli (bad) (bad) cmpsl subb fs sbbb ret popf ds inc movsl mov aam iretw xchg mov or test add repnz fiadd dec inc push jmp add push frstor cmp mov push sub push outsl dec mov dec jns es nop sub gs xor test xorl das mov mov inc dec push and nop shl push test cmpsl jne or shll test mov push push bound addr16 push loopne push push (bad) icebp push adc es repz push test pusha out dec jecxz (bad) mov push xchg push or aas testb inc fcmovbe and aam add and dec leave jno jp orl or rcrb cmpl data16 jo push fwait cmp push pop push mov dec test arpl xor and pusha sti inc lods inc es (bad) lahf and scas orl ret jge cld cmp fiaddl push dec push sbb cmpsb icebp sbb push mov push cmpl add cmp aaa adc push prefetchnta push fistpl ret xchg jno cmp in daa js pop add int3 jbe roll lods enter xchg mov (bad) jno cld stos jne mov sbb cmp sbb sbbb clc int pop mov aaa pop fidivrl lahf mov dec dec bnd pop add mov bound lahf lret iret clc sbb add mov mov (bad) rorl mov xchg es idivb nop push cmp dec sbb fsts (bad) cmp dec (bad) fnstsw jns dec divl cmp push mov gs (bad) cmpsl in dec subl cltd inc scas rep lret inc mov push nop mov dec cmc cli ljmp pusha or dec loopne add pop inc dec aas lods ret sti add jo loope stos and inc rcrl mov jge je xchg stos dec adc dec mov pusha sub sub xchg mov add pop lock hlt jns pop mov shlb fs mov jecxz pop inc push inc mov in add call mov mov mov jp mov cs std (bad) call cmpsl sarl add dec and and dec and inc ja jp loope push flds in sti mov cli xchg mov loope sar repz push jp mov inc ss lds popa add out das cmp fsubrl cmc test sbb inc (bad) sbb jecxz test sub xchg addr16 adc fwait pop mov aam add xchg dec push adc mov cltd int3 popf sarl mov sub das cld rclb sbb (bad) mov inc push pusha incb push jb mov ficompl mov (bad) push or cli lret cmp push shrl xchg (bad) out xchg and lcall movsb dec fisttpll dec mov mov je stos add stc mov pop jno sbb sub (bad) and jl movsb rcr ret popa stc mov sahf mov leave mov fldcw popa mov pop pusha mov ds mov fdivs cld (bad) repz fcoml fcmovnb out jmp inc cs push xor dec xchg push cmp xchg (bad) mov push jne add daa mov iret adc pop rep jb iret std jo cmc fsub pop sbb insb lcall cltd cmpsb xor push inc loop stos inc sbb into aam cmp push pusha or push rorb lret cmpsl and repz and inc jmp sbb xor rcl sbb cli js push mov daa es (bad) jg and push outsl (bad) lret sbb push mov mov aas jb pop adc (bad) inc std aaa mov inc mov mov in and adc dec lcall push adcb loope xor idivl sub insb cltd add shr stc pop and outsl add scas cmp sub xchg lret mov xchg in test cld in xchg xor std popf in add or adc jb mov xor cmc mov loopne lahf lea push je and cmpsl stos inc test (bad) clc lods test andl add and pop dec dec ds rcr jno ficompl rorb (bad) and inc js dec fcmovnb xchg in int3 push and lcall xor pop xlat das movsl pop inc int mov or xchg test jnp jnp aaa sub fnstenv movsl aas add jne aad sbb fldcw pop fnop lds test pop cli mov jmp aad sahf push dec xchg jecxz lea fimull enter sti call jnp popa (bad) in mov sbb repz scas inc mov mov fdivrs sbb xchg mov pop xor cmp sub fldt adcl xor movsl aas mov dec mov mov push cltd nop aaa fs inc (bad) ficom xor inc lods cld mov xor aad adc (bad) cltd test sub adc mov add mov xchg xchg add pop sub push push xchg stc cmp (bad) cmc imul push fcomps cvtps2pd lahf int (bad) adc cmpsl jmp cli hlt push cmp or (bad) push out push mov add xor xchg push xchg or jnp into push xchg test sbb xchg jge push pop into mov fnsave xchg jge sti jp or je insb in mov sub es adc mov jo jnp mov stos aam rol fcmovb push (bad) pushf std popa sub test pusha pop cmpl jne push lods ljmp xor ret int3 pop jmp lods mov fidivr push mov xchg jb xor rclb sub cs clc sub pop sbb fidivrl fsts jge mov mov popa cmc aam in sub test mov xor rorb lods int3 sbb mov sub loop add sub sbb lahf cli decl fsubrl xchg mov cmp jmp jbe mov imul cmp adc pusha dec pop mov xchg jp popa inc cmp xor bound aaa mov mov rcll jecxz repz or stos clc call or adc bound jl fdivl inc int jbe mov cmp clc push or cmpsb aam ror or mov add sbb or in pop (bad) imul loop cmp cld push (bad) movsl jbe adc push scas rorl in (bad) movb popa jo popf mov adc and cmp add cmp or mov movsb imul (bad) cmpsb mov mov cmp jl inc insl push cld in xor mov lock ja mov mov lcall lcall fnop cmp aas outsl pop xchg jmp jmp out in das jnp rcrb bound adc add pop jmp pop imul add cli push in pushf push and push nop std ret and mov push xchg adc push test or pusha and add adcl in dec sarl dec lods call test ljmp fnstsw mov sbb int3 push mov pop or cld sti cmp cmp mov in inc adc data16 xchg rol mov mov xchg pop xor push add lock mov xchg (bad) dec jg stos scas inc jbe sti push pop mov push mov insl xlat cmp movsb dec es idiv jbe lea sub inc jge ss jne call dec jg cmpsb cmp add (bad) ss inc addr16 mov dec in cwtl xchg inc out lcall xchg movsl rorb out xor xchg mov fwait xchg add and cli jb mov mov into jb cmp mov and (bad) daa push mov push xchg aam mov arpl jo add mov cmp loope movsl mov clc inc add cmp mov scas in push gs pop imul orl mov dec or or cmpsl push sub or lahf cmp mov sar (bad) enter xchg xchg mov shr cwtl xchg insb jp sub lret sub mov (bad) mov mov adc in mov repnz mov (bad) xor insb stc adc jbe pop dec cli rclb cmp mov sub fisttpl sahf imul subb mov test mov mov add dec loopne adc and leave jl mov pop int lds jl (bad) ljmp sarl adc sbb xchg ja or stos xlat pop xor push int3 lods enter pop mov ja mov mov pop stc sub outsl jl xchg in in push cmp add inc xchg in mov aas mov js push outsl dec or sub lahf in and push es inc test rcll mov sub test jne jae mov jno push rclb sbb mov call test fmuls loope push push test insl fcmovnbe jecxz fucom out adc dec pop (bad) jmp in xchg ror in gs xor addr16 out push dec lock cmc push jne in outsl (bad) repnz fscale repz imul jg pushf stos mov inc cs fbstp cld adc mov cmpl cltd clc stc jne incl add mov cmp jns adc push pop call pop add cmp pop push decl dec or and clc jle fwait das cmpsb loop mov cs data16 push xchg jo mov lret dec insl push sbb xchg dec push sbb jb lods (bad) mov xchg das add mov andl cmpsl pop cmp push insb or stos outsb shll and adc ja cmp inc in (bad) sti in aaa lahf mov sbb add cmp movsl stos mov cli xor insb xchg inc std jmp dec (bad) sbb mov mov mov mov mov mov and and fistl sub into enter fnop cs cwtl sub aaa xchg xor iret outsb xor test ljmp lahf ret mov gs lock jae sub aaa out ljmp jae dec test mov mov aaa jp insb fcmovbe insb mov pushf cld push (bad) bound sub data16 adcl es cwtl or sub and scas cmp jnp jg ja stos je dec cld push jge xchg inc xor pop mov ret cmp ret inc int3 or (bad) fadds jmp push mov and jns cs gs jle dec mov add sub jae push nop aam xchg ret ds sub lods pusha jb test std insb mov aas cs ja in sbb xor sub divb out fs push mov dec pop ret lods negb adc mov xchg hlt fcomps mov lret jmp mov imul and jg add mov cli cmp jns mov sbb xchg repnz push adc subl jnp leave add daa cltd mov push (bad) sub add leave pusha fwait cmp dec push mov sbb addr16 cwtl andl mov gs mov adc mov xor pop lea push fstps adc sbb dec xor outsl incl out lret ds cmp imul mov jle adc xor ss or jb shr inc (bad) cld and mov jecxz mov (bad) rolb mov cmp out (bad) xchg test insb jo shld outsb add cwtl cmp sbb scas lock xor cmp or dec js add aaa dec insb cmpsb clc mov sbb cld and inc push ss mov cwtl push dec xor or mov inc sarl fstl xchg inc fwait loope dec xchg das sti iret push mov or inc lods pop es and inc imul mov icebp into lret imul aam xor call aam fwait add stos popa mov mov or insb pushf lret jnp scas jne sub ja ss mov (bad) insl pop sahf (bad) mov loope iret mov push sar jnp es das adc cs push repz (bad) push out cmp insl cmp fwait daa sub or adc js and gs ss (bad) push lea jb or mov jne cmc addr16 outsl mov test (bad) jo rolb imul or int3 push xchg jp jmp pushf mov dec je jbe mov pop loope call cld cmc sub (bad) xor test fmul add mov cmp imul aas mov cmpxchg daa mov dec jo test cmp roll aam lret lds hlt mov mov jg inc inc push jp inc outsl imul or fnsave aad std fadds push ja movsb insl cmp sti adc test or test pop jne inc outsb jns dec lea aas mov stc lcall and xor cltd lahf dec (bad) mov or std jbe xor cmp (bad) mov and nop xor sbb inc decl test mov cmp sbb sub fs xchg pop xchg sbb sbb stos sbbl jb ja pop and jo sub mov imul push callw push cmp mov aad (bad) jge dec in push addl pop out js cmp xlat in push push into mov sub rolb sti sbb mov xor sub lock dec jns fs dec dec mov in (bad) int3 (bad) xchg sub xchg outsb mov cmpsb mov xchg test adc dec outsb lds pop outsl jno loopne adc icebp or rorb cli dec rol pop mov popf mov adc cltd sbb popa ja xchg int int3 int3 pop add add fild jne (bad) xor fiadd mov xchg setae test jmp lock push xor (bad) push js push and call (bad) movsb jg add pop add popf sbb mov iret push mov sub outsl (bad) test xor hlt sbb xchg sub or and es or icebp gs and jge sbb or (bad) cli out es jmp popa sub mov dec fsts (bad) push ljmp push mov mov les jne jo sbb sub push shl ljmp and out pop movsb xchg out gs lret jne push gs add pop xchg cmp xchg dec test pop and and xor stos js xchg add xor (bad) sub out call mov lds and cld int imulb iret and xlat xchg sub lcall xor inc fcomp xor pop leave mov or cmp pop ds push adc pushf cmc fcompl sbb or mov push ja jb lcall sarl mov hlt jns mov idivb lock push cmp rclb rorb sbb push mov inc mov lcall push sub add mov xor xlat lret ja je fdivs sbb mov and inc xor shl xchg cmp mov rcrl sbb repz (bad) xchg cmp stc pop scas lea sarb xor push inc adc mov dec nop into dec lret lea aaa (bad) or fstps jnp sub mov rcll adc xlat nop rorl jno repz mov or push stos popf pop repz cwtl aam cmpsl inc test mov mov ds cmp scas jb adc pop clc jl push dec xor jecxz insl mov movsl fnstenv and mov fxch sahf add xor imulb mov sub f2xm1 andl out add mov jnp or xchg fstpl and inc fadds sub (bad) aaa js sub mov in xor shrl sbb ret fstl dec mov push stc scas cmp sbb and pop jmp jno in or or testb jmp stc scas es xchg test jbe add daa mov xchg jecxz stc mov test push mov popf jmp jg ror imul push sub fs (bad) dec fcompl or (bad) or or mov sub stc aam xor mov or pop lret xchg js pop inc ret inc sbb loopne sbb repnz cld (bad) loope icebp adc inc xchg testb jnp or jecxz fsubrl fs outsl (bad) imul dec sub gs aad ficompl roll nop xor das cwtl or loope inc addl cli int or dec mov fnop out les push mov dec scas cmp mov mov imul dec mov pop aas dec jae dec push xchg jg je jp cmpsb rcrb mov jne (bad) fbld fdivp adc mov inc xchg loopne loop jmp jae adc push sahf in mov fmuls dec and in arpl test jae fwait mov scas in xor std add into pop jbe insl jp fsubrl xchg cmp fdivrs loopne popa iret mov insb jb fcoml inc mov outsb dec or sub scas popf xchg mov or adc adc dec fsubrl sub addr16 add xor insl xor jle pop sub std mov fisttpl pop fwait popa jno stc es jle mov jmp xorb pop mov push movsb mov dec ljmp mov (bad) jge mov rclb in jg cmp mov les and fcmove cltd sbb arpl call cmp add adc (bad) mov adc mov ss pmaddwd int3 xchg cmp push and push sub rorl rorb cmp pushf fist push es jb pop mov cmp or jbe pop jae jmp cmc scas add aas pop mov and inc mov fdivr pop and out xchg into and sub pop cmp movsl pushf es xchg push popa cmp xchg js mov lods push dec cmp mov mov stos mov aad andl (bad) and add jmp pop xchg test xchg bound pop jl mov loop sti push fsubp pop inc xlat xor std test dec xor int add cmpsl repnz sti (bad) jns aaa jbe jge inc (bad) xchg pusha push outsl add mov std movsl pop and inc add adc loopne (bad) cmp dec (bad) ret and inc stc arpl lods lcall (bad) nop out cmp cwtl mov mov or imul mov test (bad) hlt shll (bad) lods add mov and push add imul (bad) bound outsl cmp push cmp addr16 push xchg clc sbb lods lds cmp cmp jb inc aam pushf jg cmp pop les mov (bad) fstl cltd mov in ljmp adc jge (bad) or test rclb mov call fsqrt push movsb mov jmp sarl loop inc xor sub jmp lret adc and leave mov mov mov pop fnstcw push test and (bad) movsb xor rcll lods push cmp dec repnz sti pop inc test mov fisubrl inc sgdtl pushf mov test clc mov daa cmp sub cs adc or enter push lahf and mov sub jl imul jae push imul and out jmp fiadd loop (bad) mov into mov add cmp imul outsl enter fs add dec sti std (bad) xor pusha out add sub inc mov xor xor iret (bad) xlat pop imul mov leave das stos push bound push test fistl jne js fwait icebp mov mov lods stos shlb mov or lock push fcoml sbb jbe test xchg cltd xchg call xor enter jecxz cmp push (bad) mov inc push stos mov es cmp push and repz pop push in cwtl pushf out or gs ss sbb mov pop test pop jo pop xor xor insb jp push mov push or xchg imulb jle pop sar lret out (bad) pushf lcall cs test (bad) jne leave or out std mov dec push jo and cli es lcall sub mov es ret xchg aad das sbb out addr16 stc cmp (bad) mull xchg loop mov lds mov cmc out jp shlb repz push icebp loopne xor dec cmp mov jbe jb (bad) or lock out aas pop loope test mov pushf sub xor adc (bad) mov (bad) xor clc sub dec sti popf mov ljmp mov lret aaa adc sbb mov fnstcw inc mov cmp daa sub mov and jns xchg les xchg repnz hlt push imul or rcrl xchg scas pop popf daa dec fimull jecxz into lods imul icebp pop inc ret mov sbb and out scas enter jno mov and pushf cmpsl xchg inc dec jo imul pop movsl mov push and popf cmpsb push (bad) mov mov jb (bad) das adc jo xor cmpb fcomip mov xchg pop lods jnp in jl iret in jl lahf jbe jns fwait rolb pop mov out test adc and dec jge sarb or (bad) xor and std dec loop mov bound aad repnz mov gs mov cmc sub stos inc ret and xor jp icebp sti pusha jg xchg push mov aaa add and and leave stos aaa cmp stc mov add popf rcll xchg pop jle sti or xlat (bad) lret push xchg les cmp add icebp ret cmp clc adc ss mov push xchg pop mov add xor xor or push bound ret xchg pushf popf adc lcall (bad) jo inc mov in test fdivrl jnp cmp mov jns xchg fistl jle stos cld jp mov add nop adc repnz ret xchg lock cmpsl xchg pop ficomp mov movb pop jle cmp and enter or jmp in add mov int3 and lret pop movsl fwait pop cmpsl xchg mov pop xor jno adc stos pop sbb ret cmp mov inc popf (bad) testl repz ds test icebp push push dec in gs iret cmc mov and lcall dec pop dec ss jmp ret mov push push pushf xor add mov mov rol jp ss or test mov or test mov lds and gs lods cwtl and push fs subl sbb push pop mov fistp fcomi jmp gs out movsl das sub jge ret (bad) out aas ds out or adc fsubrl push out and (bad) aam jg rol inc sbb mov ss repz adc loope cltd pushf subb jl pop enter mov fsub lock sbb sub mov movl dec inc fwait stos sbb adc mov xchg lret enter inc mov fnstcw xor xchg in loope inc decb ret int (bad) mov cmp mov out aas insb sub mov (bad) sbb shrb shll icebp aaa insl stos cmp stos mov repz lock inc inc adc fisubl out (bad) xchg mov mov cmp xlat dec popa imul adc mov sub dec xchg fyl2x sub inc rcrl sbb push xchg add push pop jnp xchg sarl sbb gs mov cwtl test pop (bad) mov fildll sbb (bad) mov add xchg outsl jno xor outsl lock cmp sub xor adc fstps xchg inc xor mov pusha dec (bad) lock dec mov sbbl sub movsl std pusha or sub stc dec mul aam cmp sub lahf std mov ficompl data16 push add pop jg cmpsl lahf mov int jp outsl mov pop mov cmp sub daa sub mov mov jge xchg pusha sub xor push jl or dec notl test dec push jo xchg in dec les xor or imul (bad) and lcall lret out rorb pop mov adc mov gs psubusb jg xchg mov xchg js test icebp jp out dec jmp into (bad) cld mov out lods adc stos add in dec shl push jg xor insb aas push ljmp repz out xchg and pop fnop movsl jae xchg inc push adc in dec mov test stos movsb out adc xor jne outsl jnp iret cmpsb leave enter gs std mov mov fisub adc dec stc sbb fwait int3 mov jno in mov xor aaa mov lea orl movsl bound and aas and das iret jnp mov cmp jg add daa xchg xor lea jge stos mov ret jp add inc cli gs (bad) aam push mov fstpt std fwait cmp pop mov hlt inc lcall jle sub fdivrs sbb aas aam rcrb cli out sbb sbb jg popf nop dec or dec popf or add jle popf sub std insl push mov das dec pop sbb fisttpl push cltd push inc mov cmpsb cmp mov popf push insb xchg push xchg xchg sbb pop inc mov iret pop cmp mov pop arpl icebp adc mov stos add mov jl sbb cmp repz and dec clc push mov mov dec mov test dec repz aam push fsts pop pop sub adc mov jmp or aas sub stos ss lret or (bad) xor xor inc roll add push dec and fist jnp push xchg cld jo cmpsl pmaxsw icebp push pop (bad) jno,pn inc jmp add inc lea xchg aas cmp push or pop je arpl (bad) mov adc inc pop push loope (bad) xchg int3 jnp xchg add jecxz fstpl cmpl lods rorl adc hlt test jecxz ss and loope or fprem1 xchg mov cwtl leave stos shr daa in sti cwtl pop int lret xchg xor sub xor or (bad) test je repz jb mov jg popf popa sub xor icebp pop iret popa push push lret sahf mov lods push jae inc xchg fld imul (bad) out lret lock adc cmp pushf cltd dec data16 ficoml mov icebp sbb or push xor adc loope xor sbb pushl push xchg add inc mov adc loopne dec cs add add inc adc icebp scas cmpsb pusha out xchg iret xor in sahf shlb stos inc mov movhps aas (bad) into fmul insl mov movsb and out test mov out into cs or addr16 xchg fwait lahf (bad) cli fsubs xchg pop ss (bad) into add in outsl loope mov mov js or cmp daa sbb add out xchg add bound negl andl or shlb fwait mov lock test xchg icebp mov mov cmp mov lahf lods not into mov pop inc lcall cmovnp int3 adc inc cmovbe xchg es psrlq dec adc xlat int3 and adc mov cmpsl adc (bad) pop add pushf cmc inc mov mov xchg rolb test daa lds push (bad) je xor jge jle imul xlat mov cmc mov mov mov pop and gs sbb ret (bad) out mov pop pop lret rcrb adc and test pop call inc mov or jecxz mov adc test and test sub inc push popa rcrl jb or fsub add mov jns mov lret inc mov sarl xor adc lods mov ret mov mov rcr mov or stos and hlt out aaa cld push cmp sbb pop xchg xchg inc pop or lcall sbb aam popf ficom out mov cmp xchg les test test int mov jp or add push pusha ljmp fwait push inc sub mov mov push pop pop lret orl fcomp mov jmp push aas inc push addr16 adc dec inc adc lock aam mov js jb sbb fxam adc xchg fcompl cmpsb pop sbb xlat sbb push dec xchg aaa call sarb or jecxz in xchg stc lcall mov call insl icebp movsb mov push or push push lock dec adc popf xchg lock sar bound push mov mov jg adc shrl ret jg xchg loop test or mov lods aam inc test fwait dec dec push xchg push enter inc iret adc mov outsl mov mov xchg stos scas pop jge or mov cwtl cmp cmp cmp dec xlat dec cmpsl jmp pop xor pop and aaa and test movsb inc ret (bad) iret or cmp xchg or mov imul enter inc lret and xchg jns pop inc nop icebp loopne or scas insb mov mov cmp frstpm(287 aas hlt dec sub gs dec ror out mov rolb lcall adc mov dec loopne loope mov inc push lods loopne xchg in mov icebp adc repnz xor push dec in pop pop jb mov cltd inc incl push push js (bad) (bad) mov popf mov int int (bad) xchg test nop (bad) fdivr movsb inc inc mov or or cli das movsl test and test addr16 mov inc aaa shl pop sub push xor xor add imul mov mov fs rolb dec in mov or arpl inc movsb add jp mov pop in cmc xlat or cmc mov mov sbb (bad) mov mov and in cvtps2pi mov pusha or js (bad) jle and jno aam sbb push sbb inc adc cmp cmc xlat psubusw cmp and xchg mov scas sub cmp mov mov int popa dec and pop aaa mov outsb es xchg xchg push mov loopne outsl mov scas lds fnstsw mov rcr dec dec dec (bad) push xlat xchg mov push rorl and mov mov std mov jo ds loop test xor (bad) sbb iret jge xor bound jae shr ljmp test sub fstl jns fldt and lods push inc aad (bad) sbb xchg daa test pop pusha dec (bad) sub mov mov or in dec (bad) shll lods mov cmp mov in xlat xchg and push scas cmp movsb and xor mov mov push xor nop fisub insl or (bad) pop mulb adc xlat inc ss mov sub rcrb add mov xor fwait stos js fwait aaa fs mov jo xchg repz iret aas cli shrb adc fisubl pop add and loope xchg mov rolb pop mov je cmp pop push fcompl ja imul adc add cmp dec pop adc jbe ret bound negb addr16 and fcompl lret dec movsb cmpsb stos test add cli add and adc addr16 mov scas jno sbb xchg jb mov jne (bad) cmp hlt repnz adc xlat adc out pop repnz or sub fistpll test adc pop add scas iret cs shrl into insb add pop scas and inc adc into dec rcrb mov cmp add push xchg es insl push mov (bad) jge andb mov daa cmpsl adcl mov push fdivl (bad) (bad) lea hlt cmp stc inc ficom test ret imulb test rol jno pop lret xor ficoml pusha sub pushf (bad) xchg in sbb push mov iret (bad) (bad) adc lods sub dec sbb xor xor js cmp imul push imul ds adc mov sub jecxz xchg sbb mov push nop add lods movsb xchg lret (bad) leave adc in jl mov sub inc sub cmp xchg adc inc and outsb adc rolb jnp (bad) movsl les mov js and add lahf js outsb mov or sbb fsubs add push adc pop pop daa fdivrl cmp sbb inc fwait pop cs movsl push dec dec push jne adc sub sahf lret gs xchg push pushf data16 int3 xchg cwtl orb push into and (bad) dec inc lock (bad) imul cwtl pop push imul inc mov fadds mov cli (bad) xlat sarl inc cwtl sub mov cli mov les lock ss adc test cmp (bad) ja mov cltd in push daa dec fist sarl es ret sbb sub mov lahf push sbb and jo mov addr16 aad adc (bad) adc pop mov pop push cmpsb mov inc dec jb add sub notl std mov or jnp in lods in mov push push lret add ljmp and bound jle cmp in mov mov jecxz aam sbb int xchg pop call add push xchg cmp xchg sbb or je in lret hlt xchg pushf nop idivb int fs rcrl sbb je or lahf stc sub fs push pop pop inc pop lret out movb inc or sti jp shlb or adc adc subl int3 adc iret pop iret outsl push or scas sahf jg fbstp push test pop aas (bad) sub fbstp dec in outsl fnstsw aad add or jp (bad) (bad) aad jmp enter xchg jp leave adc out sbb in jl sub sbbl mov in xchg js (bad) bound idivb fucomip cmp clc and loope insb js dec (bad) lahf insb popl jae add xchg aas inc loope enter into xor and int jnp test sub and test (bad) fstl adc mov mov mov enter add fmul clc mov pop push fsubs mov lcall sub add sbb sub sub loopne sub adc sub fmuls mov test jne iret and jg sbb loop mov aad iret insl movsl scas bound jns or cmpsb fst fistpl mov jge mov data16 adc xor push dec fdivr inc cli loope,pt jp (bad) lret js lcall mov int3 cmp inc mov jl dec out or rclb sbb dec sbb sbb cmp sbb xchg (bad) push mov rclb lcall sub adc cmp iret or jno fs mov scas ret sub mov testl jp dec out dec in mov loopne pushf mov shrl mov and inc je mull dec rcrl sahf xchg imul icebp aad push call call andb lds lret xlat in mov aam pop inc sub mov dec add cltd in jle cmpsl lods sbb dec jb pop or adc pop push jae jp adcl sbb xchg push xlat (bad) cmp adc sahf icebp scas push bound push cmp xor cmpsl stc cmp sub jne out push nop adc push push xchg (bad) or hlt popf int3 and lea adc in fbstp xchg stos adc mov inc negb aam andb adc mov push hlt xor test and (bad) outsl cmpsl cltd mov sbb cmpl mov stos mov aam ja je rcl cmp (bad) icebp (bad) sub cmc mov push cltd fcmovu rcrl or repnz daa pop rol xor xchg adc mov int3 sub xchg in and sbbl fildl sub sub in adc test leave push inc (bad) jmp sbb fdivs jbe popf inc aam lcall sbb inc pop cmp mov xchg ja push mov xchg xor adc stos arpl in sbb xchg int3 mov push and in je pop es daa push rorb xchg jl push out sbb cs outsb fnop in mul cmpsl dec nop mov jbe or xlat stos orl inc daa cmc stos scas faddl or add std fs test (bad) mov out data16 pop aaa push test stos mov enter into sub mov (bad) sub jo lret xor sbb mov fwait cmp push mov or cltd imulb mov lahf imul leave lock test fimul adc popf mov xorl call dec nop in js mov mov int out mov sub in stos xor push lahf and in stos jo sbb aaa out sub pop movl sub mov mov loopne clc push fnsave cld jnp imul sub and rclb jns mov push push mov jg mov insb out mov cltd fcmovne fnclex xor adc cmp lret ss jbe inc or hlt mov sub addl fidiv adc roll outsb enter cmc int3 jmp jecxz dec cmpsb js movl xor popa mov xchg stos lea push enter fucom cwtl jo cmp icebp scas pop nop aam sbb leave pusha pushf aaa and cli je (bad) divl in or dec adcl mov inc (bad) xchg insb xor sub bound dec mov inc push loopne sub sbb insl or hlt popf stc and xchg cmp into add sbb push add push imul lret int mov out jo lcall xchg cmpsb jle jb iret push sbb popa dec rclb ret and test test or push sbb pop or and mov cmp xchg sti sbb imul pop sub inc outsb xchg jecxz pop lret push idivl and pop jnp ja sub repz jl pop jge,pn insb popf mov leave push push jge mov into push icebp inc jo in fdivl loope sbb jno gs cmp lods cli add (bad) xchg gs inc hlt inc mov shrl jp mov mov aas int pop leave loopne and mov pop jmp xor (bad) mov sub lret add dec adc or movsb push ret mov mov ljmp loope push loope out or gs sub mov dec or cmp int3 cmc std push xor push mov aad sbbl fbld mov dec add mov nop ljmp in out cwtl int3 lea xchg cmp fisubl mov imul cmp dec daa pop ljmp insl sbb ljmp mov andl xchg test loopne fwait jnp cmp aaa les sbbl jnp cs xorl xor mov lcall or dec adc or sub push or fiaddl inc cmpsl or repz cltd xor mov mov pop ret icebp add inc dec insl add addr16 and inc subl push enter mov (bad) xor je jns stos adc out test mov and xchg jns xor (bad) push or popa and fldcw push inc jg shrl mov loop fstps adc sahf pop and push cmp dec xchg insb mov sub or push or cltd mov xor jae (bad) js xchg mov out cmc sbb cmpsl pop xchg cmp xor xlat outsb lahf jnp mov popa aaa jns mov push sub mov imul mov inc (bad) aad push cltd xchg out icebp xor xchg cmp pushf dec (bad) popf insb push dec mov xor sbb mov inc xor dec aaa mov mov sbb mov cmp mov repz clc ret cmp test push pop iret mov incb add add pop mov lods stos sub jmp je xchg cmp push push xchg cmp pusha pop fucomip icebp mov mov jmp movsb ja adc in mov mov adcb xchg xor sarb push stc (bad) jae jo (bad) pop xor or inc push rorl nop movsb aaa and push arpl mov inc into add dec dec mov or jge jl,pn xchg inc sbb rol add test push mov mov pushf nop mov cmpsl lret cld or xor test pop out arpl or mov cld popa fsubr push ljmp cmpsb stos sub jbe repz (bad) mov rorl (bad) insb or pop ret fldcw add sarl pop and jmp pop mov das dec cli mov push (bad) outsb movsl rcll daa popa and pusha lcall or sub xlat das push imull movsl popf ss mov ljmp loope pop jb adc pop inc push fldl enter dec enter aam inc cwtl jecxz mov arpl int cmp xchg xchg xchg hlt mov push (bad) sub movb cmp inc arpl adcb lret push into sbb push cmp or cmp xor imull jb jmp or sbb xchg sbb js punpckhwd (bad) sbb mov mov js mov mov arpl fnop (bad) push xchg ret rorl cmc xchg xor pushf enter insl push insb push lahf mov pop dec pushl mov out inc push int3 xor dec icebp push add lahf adc clc pusha xchg xor xchg aas lcall mov pop push fwait sub js popf test aas mov scas or jno stc loopne mov aaa sub xchg out and pop or repz fimull int3 stc loop jo mov in xchg rorl (bad) stos xor xor int3 add mov add ljmp dec dec push adc inc cli jne loop xchg xor jae loopne lret mov dec lea es inc pop lcall cmp mov ffreep imul dec (bad) mov cmp sub adc and dec insl cmc fiaddl cmp sub mov sar xchg cwtl (bad) push imul inc xchg rcr sbb mov mov mov es int3 sub or mov dec jo add adc inc mov ja aad jo,pn in out das sub repz mov push xlat std mov fistpll add popa jns aaa lods jae lds ret imul jmp inc push xchg repz shll pushf cmp data16 add fistpll inc (bad) cmc hlt sub pop ret test (bad) and mov inc imul or scas movb xor mov repz lcall mov push test push repz mov test adc imul jl (bad) loope fbstp addr16 aaa divl xor sbb add adc xchg jnp sbb cmp mov rorl and add pop test cltd sbb (bad) in repnz mov push mov inc cmp cmpsb mov je stos xchg dec mov jge or test bound ret mov mov pushf xor cs notl add js inc push jg mov lods jle add xchg cmpsb mov sahf mov xor mov mov jecxz lock jg sbb addr16 jecxz pop pushf aas add mov add and cmpsb dec js jo sbb (bad) popa ja xchg stc and push mov cltd scas or adc movsb (bad) sub push push push (bad) std sahf mov pop jg cmp in jo punpckhbw push pusha pop (bad) loop test cmp cmp dec nop jmp jb cli cmp push pop mov lcall mov fwait mov subl sub mov int mov push xor gs jge mov or sti cmp icebp push mov sub inc in jmp push mov jmp (bad) testl pop fnstenv inc test lahf iret mov outsl xor pop fdivs mov inc ja loopne xchg pusha push mov aam shll imulb adc fs dec roll rorl inc out jbe das jae adcl jns outsl ljmp in jge ja daa mov cmp fcomps jg data16 je push sub pop xchg jl pop mov xor je push jne mov sbb inc popa fidivrl xchg push cmpl dec out (bad) mov and adc mov in mov xor inc in lret mov scas mov dec addr16 or stos xor adc pop lds and pop popf lret mov xchg aad out dec (bad) mov (bad) pop out xor mov add adc add cmc mov ds test mov push mov adc inc lds and lods push xchg add rol pop and cmpsb les fs test jg dec orl push sbb sbb (bad) outsl in push adc pusha push add adcb hlt repz loop leave jae call jae repz and and in xchg mov (bad) insb cli mov sbbl inc loop in xchg data16 addr16 dec lret cmp xchg nop push imul sbb mov stos mov pop push cld pop push fidivl hlt pop add iret (bad) sbb imul ds roll push ljmp adc dec lods and adc lods lret in data16 subl mov test push data16 xor push rcl adc (bad) mov nop insl out mov and xor push xchg pop sbb sbb lds xor (bad) sub cmpsl gs sbb jmp inc test loop mov xchg pop xlat int rcl mov add jmp mov int into cs xor dec mov lahf dec push orb lcall icebp mull scas mov cld inc cmp nop lahf add adc xor adc cmp dec mov cmp cmpsb fwait insl push xor cmc pop jg cmp jecxz out push cmp adc jmp in push inc in test jnp dec (bad) cs cld nop in mov inc (bad) cmp pop cmp jmp adc addb push xor int push jg sahf pop out lods mov into add inc je (bad) out in xlat addl fidivr insb popf cwtl sub in and cmp arpl jae hlt push mov loopne push shl bound or inc xchg jecxz scas insb and and adc pop repnz xchg (bad) notl jne xchg sbb sahf fdiv std xchg pop insl adc into add out loope dec addr16 jae popa in arpl sbb ds pop push call popa fldl mov rorl cli lea pop jecxz sub or iret inc mov fdiv adc cmp xor add xor jbe sbb scas cmp stos jge mov jle mov push mov xor add (bad) pop jp data16 aaa lcall lret in dec stos jno lret push xlat imul sbb add xlat pop aas push cs or push mov and and lcall hlt in cmc dec (bad) stc adc jnp fimull bound (bad) mov sar data16 in arpl inc mov inc pop frstor sbb mov sbb mov xchg clc mov adc enter jo mov jmp es fisubr repz std push or fcmovnbe loop repz jge cmp push mov or ds test out js pop imul jmp push gs pop into gs mov cmp jns push cli push sbb rcr mov pop mov ret pop mov or aaa call stos add pop jl insb lcall mov mov sahf mov xchg sbb fstl orps xor in adcl add shr mov fwait push sti xor add push jne xor push retw mov adc sub and xor (bad) int jb shrb mov sbb dec stc pop icebp mov adc or push cmp mov (bad) nop cmp xor sbb movsl inc or xor adc cmp pop aam and dec pop arpl push mov push in pop sbb incl int3 add mov loope inc dec fdivs or mov push mov shll jb stos dec int insl rorl fisubl mov mov push ret iret xchg (bad) xchg popf dec jns mov jno sti xchg pop mov scas lods mov ret lds fmulp jp sbb icebp adc add popa pushf cmpsl jmp sub mov xor jno jp in in daa pusha lret sub adc stc rcrl div mov jg inc (bad) lods pop cmp dec ret ret mov mov shl or in das mov pop or in mov js xchg pop push mov dec testl pop or js add dec pushf ss xchg out jo mov push sub or pop movsb cld repz pop dec call inc mov push mov outsl and dec aad lahf fdivr popf dec stos nop fiadd stc sbb andb adc push mov jae pop xor imul push rcrb push lods push fadds clc jl xor (bad) or mov or or (bad) cmp popa mov enter xchg mov lahf adc das cmp ja rclb adc pop xchg test xchg aas dec lret pop cmpsb and dec jecxz lock pop mov xor iret fcomi cmp rol clc mov cltd dec jmp insb mov sub push nop mov push imul cmp inc xchg dec xchg xchg and out cli loop lds mov pop and aad fstl hlt sbb das cmp xchg sbb or stc push fisubrl push mov aaa cmc loop (bad) push and in sahf pop xchg adc lods adc adc bound ds sub hlt das (bad) stc idivb push out fstpl jne fs sub xorb adc mov cmp mov fisubr test xchg loop,pn sarl pushf scas pop adc inc fs xor and les jecxz add rcrl and jge pop in imul loope sub add xchg aam mov mov and test fildll popa insl mov lock jg add inc leave je cld std push arpl mov xor lds out pop inc lahf insb scas cmp jno pop insl or push dec imul jg call xchg ds push cmp lods push leave and cmp in mov (bad) daa movsb cld xor out push (bad) dec sbb xchg xor (bad) add das jmp pushf and pop push push daa outsl outsb and int3 addb sub out and jge push test jg sub push lods inc mov pop lods or out xchg inc pop orb mov xchg cmp fisubr mov sbb clc cli mov add cmp test popl dec lods movsb push mov (bad) insb adc popa movb repz aam icebp xchg jns mov pop call fs pop inc jns dec sub (bad) incl push jnp xchg lods lcall scas arpl mov dec jae mov (bad) xor add xchg dec ljmp addr16 mov inc mov jl movsl (bad) aam xchg jns mov mov sbb int or dec mov mov in jecxz nop in mov sbb (bad) mov xchg (bad) lock mov xchg inc stc in inc push cld hlt mov xchg sbb inc jbe scas je out or add pop cmp bound push in mov adc outsl pop clc push insl ljmp int3 adc and inc cmp inc cltd xchg or mov push sbb add fidivrl out out add jne call sub adc fwait xchg mov ja popf ljmp loopne arpl adc sub cld cmp lds sub sar pop fistl inc outsl pop movsl push sahf add int mov leave inc jbe dec mov add es mov add aam push cld lods repnz fwait lock sub pop pushf sahf mov push outsl mov andl push cmpl daa dec jno pop fs mov test jmp sahf lahf ficoml jo ret in cmp sti xchg rorb repnz pop push pop out push test outsl sub divl jle mov loop scas mov iret cwtl xor sub xchg popf or in fisttpl or adc in cmpb xor add sbb mov adc sub xor repz test xchg lretw dec push mov adc lds test or icebp bound punpckhwd fisttp adc inc fidivrl inc outsb data16 iret push cmp sarb xor xor sbb cmc and mov xchg or fldt cmc xor mov sbb inc add sub mov ror je mov (bad) aad ja je test fsubrl and (bad) xchg je push addr16 loop in imul push movsb pop ficom push pop idiv sub mov movsl pop fldcw mov push nop and xor rcrl mov imul loop mov and mov adc or hlt cmp (bad) push (bad) lds pop lock jge ljmp xor cmp xor ss adc mov and inc test mov je pushl stc sbb pop dec xlat cmp dec adc lds mov into mov es cmp pop jl stos inc mov inc sbb xor mov es add pop sti pop stos movl fnsave (bad) jl test push inc pop in xchg repnz add in mov mov test outsl das pushf inc sub test pop rorb xlat in pusha and hlt enter (bad) and aam (bad) mov lds sti add cli and mov (bad) scas xor leave test jb loope data16 cmc fnstcw cmpsb xor push pushf lcall xchg dec cmp fdivrs sub leave mulb aas jmp fs xchg dec pop mov hlt nop fsincos bound sbb aad mov and std xchg repnz and sub xor jne sbb and out ss push and mov pop inc sbb test sbb lods lea iret add push insb xchg push xor std cli dec dec pop add push nop outsb inc cld and loope lcall and cmpsl hlt lahf mov hlt lcall pop jb jne mov daa mov aam jg mov push xor movsb lcall stos push jmp adc lods rol fistpl push mov lods mov adc push jg incb mov push loop or mov adc sbb adc rclb aam add int adc inc daa sub sbb stos sbb sbb sbb aad cmp dec lahf call xor and ds xchg cs xabort sysexit xor mov lahf call rcrl aas iret ret in pop xchg addr16 sub cmp imul insb mov and jae cmpsb or jg (bad) cmp xchg xchg out jno test and cmp cmp adc in arpl lods popf ja sub jmp js xchg and jae cld dec xor pop mov repz and lock xor add sahf or dec aaa or test ror jne jg sub shll pop nop jb clc sub lret lock push or inc fistl shrb dec sbb jmp dec fiadd int3 call iret fstpt imul sahf scas mulb cs aas outsl add push pop outsb cmp fcoms fidivrl push push int cli and inc cmp inc insb xchg andl push xchg cwtl adc xlat fucomi js mov addl cmc stos or sub xor dec push push add cmc push mov dec sbb push inc sbb ljmp push out std mov negb mov dec jno sti sbb test decb inc sbb sti jle (bad) jbe dec je pop jnp mov mov rcrb cs shlb js and call mov fbstp (bad) cmp jg mov imul lds xor addr16 mov stos popa hlt inc sbb call cmpsl pop iret adc lock mov mov sbb pop fstpt xor call jg jbe rcll icebp test (bad) div scas int3 clc dec (bad) jbe (bad) sahf xor mov mov jae daa inc mov aam mov and cwtl adc jg add bound cli sbb add add dec xchg mov xchg cmp inc sbb sahf push fldcw mov dec sar aas lods inc inc out inc les push ds (bad) out insl jp pop dec daa (bad) test mov loop loop test cmp pop jns (bad) pop insl xchg loopne popa (bad) out pop or fistpl push sbb xor and mov sub loopne sti je adc mov add mov fucom addr16 insb (bad) cmp fst mov add mov jmp jg sti lahf (bad) fcmovne add and push add outsb jmp (bad) or ss push ss (bad) mov inc and dec xchg inc stc fdivr cmc aad pop cmp add push je data16 sub cmp and fdiv shlb xor jns add pop and jge loopne clc inc and pop insl or dec xor xor or je out lret bswap mov repz sub jecxz arpl fadd popf stc (bad) mov inc xlat mov or cmc enter rolb outsl pop jae jno sahf jmp lahf lods adc sub (bad) xchg fild aas and or outsb lea or mov jge cs pushf dec inc addr16 jecxz pop jmp xlat sub dec in sti pop test mov bound enter ret nop rorb jle mov or cmpl sbb add mov fs into add insl data16 (bad) jb out fwait cmp add icebp cmc imul mov push sbb sbb out xchg jbe adc pushf gs inc cmp adc pop (bad) je inc leave or dec fldcw or fstpl fnstenv fistl sbb add mov (bad) pushf pop jbe lock push int3 nop or inc icebp aas pop lret dec xchg movsl out mov popa cli test aad (bad) repz adc test xchg or mov stos das dec mov xor mov adc mov hlt xchg sub mov pusha cwtl lods (bad) in mov enter fstpl movsb pop or pop aaa jge pop testb jmp mov xchg sub insb inc insl mov xchg inc insl ja incl fwait add dec fucom idivb mov adc ret sub adc mov lcall std stos stos enter (bad) add push movsb mov pop dec (bad) xchg and sbb bts lret jo mov lea mov jns inc bswap into pop pop rclb rclb mov or adc test sbb mov xchg add and mov out push cmp mov movsb sahf ja cmpsb inc js push push rolb dec iret jmp dec cmc aas call push movsb cltd scas sub mov mov push add cmpl mov movl test sub adc pop fidiv sbb pop (bad) iret rorl lcall dec mov push cwtl inc loope xor mov mov lock icebp xor test cmp cs pop mov (bad) and jne xchg sub dec lahf fistl out mov pop jne and (bad) movlps sub jmp push cmp push add lock jl push jl jb adc push or cwtl xor pop and cmp mov pop ljmp cltd pop bound xor aad cmp dec push mov repz jle test call adc xchg pop and dec scas xor loop jns mov stos cld jg divl and push fstpl iret mov mov push (bad) lret insb and xor lret sti out cmp sub mov pusha imul daa js jb xor je or and (bad) adc adc addr16 inc xor mov xchg fisttp out mov mov les cmp out movsb inc inc sbb icebp repnz cltd (bad) push movsl mov xor mul adc out hlt push icebp in sbb pushf std (bad) mov fistpll xchg insb cmp out es and mov ds dec and push mov mov popf adc outsb movsl push sbb stos sbb nop inc fcomps cmp mov out xchg adc aas out jp sbb mov imul xchg and or xchg fdivrl dec and popa cmc add or sbb mov loop cmpsb fdivrs loop mov test aad fidivl js ret lock fldenv jo adc test enter sub cli (bad) xchg mov push adc test jns ss rcrb push loop (bad) jp mov ljmp iret xorl add or jns xchg cs mov dec int3 sub pop in mov mov movsb iret in test (bad) push ja pushf pop cmp or pop lock imul cmp cmpsb ret lcall mov lret xlat lcall adc pop cld shrb fs daa pop lcall adc out jno out dec pop jecxz mov test out daa inc pop lds mov push (bad) outsb sub mov ljmp mov inc sahf pop (bad) in sti lods leave pop push arpl xor aas out in push orb mov scas push pop mov xlat dec (bad) icebp iret push fmuls call in shrb xor js mov aas push shrl pop and rcl jle cmp outsl enter adc mov sbb push sbb adc lods in icebp mov (bad) jo test pop xor cmp push outsb (bad) jle mov adc stc test sbb arpl pop jmp (bad) sbb mov and mov dec imul jae add mov sub nop hlt aas dec push (bad) cmp stos xchg or inc fcomps (bad) dec xor xchg cld inc push mov dec call ja ds push inc testb lret enter stos push movsl lret inc push cs xchg test sahf push dec jo in mov das mov dec dec mov mov jl js and xchg andl cmc fs fstp mov sub and or es lret cmp es cmpl in cmp (bad) xor jbe mov and lahf divb mov (bad) xchg sbb out imul pop imul lock cmovle push inc jno adc xlat jg add (bad) sbb pop add std sbb pop add mov les adc loop les sahf mov neg add inc xchg adc pop mov mov mov or loop dec cs incb mov ljmp flds inc hlt and iret cmpsl insl cmp and pop mov das mov daa iret daa pop push mov mov stos (bad) cmpsl lret push inc adc dec jge jp mov or jg mov sub fistpl (bad) inc inc xchg jecxz fsts pop inc js sbb (bad) ss push sbb fidivl insb std fincstp xor fwait push pusha xor push xlat fistp adc ljmp and adc test dec push xchg cwtl jmp xchg scas lahf cmp push fmulp xchg cmpsl sti shl pop mov cmp pop lahf jl mov call add out rcll mov sbb (bad) cmp fsubr jp enter jecxz aas xchg and jmp push movsl es les xchg add mov dec xor sbb and rol inc aad dec pop add outsl xchg cmp push not (bad) pop popa jle mov jns cmp cmpsb xorb sub rol xor insb sub sub movsb sbb cmp inc adcb sarb cld mov mov jecxz pop pop pop aaa xchg sarb fsubl sub iret ss cltd pop xchg mov iret pusha inc addr16 pop out imul xchg jne into mov jae pop test pop insb (bad) adc or cmp mov ds rcll pop bound idiv sub (bad) sub dec pop cmpsl xchg bound mov pop mov aaa bound mov push fmulp ficoml fidiv icebp loop lahf aad push xchg es push jg sahf sub js or push lret ss mov mov pushf dec loopne adc hlt xor shrb fbld push lahf add sti pop shrl out cmp shlb xchg dec out cltd pop jbe adc ret ds cs xchg outsb adc cs stos addr16 cli dec add es lret test pop lret ja inc popl mov mov hlt inc inc mov clc cmp push stc sarb jmp xor push push push dec adc dec add test or adc jb mov jmp xor (bad) xlat mov in mov and lods xlat xchg sub sub and mov xor loopne fwait xchg mov test mov xor sub ret xchg mov (bad) adc and loopne sbb (bad) (bad) rclb ret add jle pop (bad) mov push pop frstor stc cmp jge and fsubrp xchg mov pop pop cmp mov test add loop int adc hlt sbb je pop mov js aas cld loopne outsl iret pop dec sub (bad) mov inc sub pop jp jno fsubs mov std jns dec sub repnz mov sub mov lcall cld cmp pop push lcall fldcw add xchg cmc xor mov jb add sub dec pop pop divb mov pop or ret add int3 (bad) in xchg and movsb lret pushf add les add fadds push cmp dec outsb and push rcll mov clc pop jecxz pusha xor xorb sub icebp push jmp in ljmp addr16 cmp mov or inc jns jo imul sub push jl in mov movsb mov mov lea ds out jmp lcall mov (bad) mov xchg add and sbb xchg (bad) jb loope or in in lcall aas popf mov cmp loope push repz push adc shr loope sti cmp pushf xor fcmovb gs adc lret pop (bad) mov leave pop add das or (bad) (bad) sbb jbe in fisttpl fsubrs movsl mov xor sub sbb xlat and dec cmc mov push icebp and (bad) daa adc cmp loope (bad) mov adc sub jbe xor xchg std (bad) push cmp xchg imul test lret push movsl xchg rorl mov mov pop (bad) cwtl jle mov mov push gs lods roll js enter call and add sub push daa aam stos mov sub lret xchg imul cmpb fucomp push xchg ss out cmp loope jns xor imul data16 call data16 pop shl movsl push and dec jl inc dec cmp dec pusha js jecxz mulb data16 fnop (bad) mov sub xor inc stc clc out and add sub pop lds mov xor sbb inc or mov fmuls push dec inc jnp mov pop sbb jp jbe or mov add dec jae outsb stc imul fimul repnz push mov sti xor aam adc lret and roll jae xchg pop gs lcall outsb ljmp push push lcall and or sahf xchg or jo test repnz pop jne and inc mov jecxz mov int mov and dec fwait or pop push push sbb lods pop xchg ss bound mov mov xbegin fs sbb mov mov iret aad cmp inc mov mov pop in outsb bound dec mov stos in jle add (bad) sub rcr jp cmpsb add push cltd mov outsb scas fdivrs insl sub sbb repnz les (bad) (bad) out jo push (bad) jmp mov int3 lret jmp imul pop jmp xor sub or xacquire into rcrl xchg fisttpll fisttpl hlt icebp mov adc rclb jmp sbb ds jge sub push rolb arpl xchg pop inc and cs (bad) sbb rcrb mov sbbl jmp sub les lret jns cwtl xor adc int3 imul into jecxz scas into mul or adc popf dec scas adc imul lods mov je mov ljmp mov sbb sub clc jmp push icebp xchg pop fmull pop push jmp adc dec loopne movsb mov push insb int (bad) xor mov and mov lret adc idiv ja sbb mov jg adc je je pop movsl push jbe jno lds lahf mov or aad mov pop xor add push mov mov mov adc aaa dec std dec js or mov or pushf fcmovnb xor xchg push popa fst lret mov in or xchg (bad) pop xor jl inc mov xchg fs inc loop jge (bad) iret sarl xchg out pop or or shll sub xor cwtl cli subl mov and movsb loopne in adc lds mov fstps cmp cltd dec xchg arpl mov pushf ret cld std cmp pop mov mov inc fbld inc xlat out out cmp mov mov daa and add pusha andl mov or (bad) mov mulb call sbb xor cmpsb and sbb jnp adc into pop mov (bad) aas outsb incb xchg inc dec insb call xor dec js push mov mov dec in push add popa iret adc inc mov jmp cld fidiv (bad) or pop cli insb jecxz add inc inc dec xor cmpsl lds sahf fnop lds pop adc inc mov (bad) sti xor (bad) out subb xchg and cmp lret jo pop cmpl in or or scas xor test addr16 out jmp fnstsw mov mov inc shrl mov inc mov aam add fstps scas or sbb adc jg ret repz shl cmpsl push insb add aaa jg xor arpl ljmp adc and mov arpl push cmp xchg ret inc shll rcl dec lods mov cmp scas jae in loop fidivl push fidiv lds mov shll int3 das jne outsl push lcall sub (bad) dec mov aas lods jae les cmp cmp cmp clc mov inc sbb adc popf mov jb jge movsl sbb fnstenv aam insb pop mov shll cmp add (bad) scas dec mov mov das push cs mov clc ds pop data16 ret inc cmp ret inc call adc push sbb sbb mov dec adc mov xchg ficom lods adc (bad) jo mov jnp lods mov mov xchg mov addr16 push pop push jp mov aas inc mov mov or in pusha (bad) sbb fwait rcrb int3 mov fdivrl (bad) pop mov leave dec repnz push jne insl mov mov mov jno cmp fcoms fsubrs cli and add outsb loope das out addr16 xor mov pop mov and movb mov into int popa imul mov push (bad) xor pusha scas add dec lods jne lcall cmp jl scas lea cmp mov sbb andl sub dec lcall xor or hlt jmp sti in xchg iret and decl push gs leave or fnsave dec xchg cltd sub xchg jl,pn cmp cmp push loop stos mov lea add inc out aad bound (bad) jbe ja xchg pop cltd mov fwait rclb aaa cmp fucomip add cmc out mov in or xchg sbb mov cmp mov imul jg sbb mov rol popa lods and inc and scas lret mov stos sahf pop or lds negb insb jae hlt jl mov stc call es xchg jae std lahf xchg ds data16 inc inc clc adc lcall and scas sahf test lret stc pop incl movl adc in sahf add push mov inc jne dec sahf cltd or pushf and mov aaa xor lds clc fwait adc inc push loop lock test jns jo popf in test cmpsl fldl mov ds sbb ret js xchg test mov repnz cmp mov (bad) mov jle mov (bad) mov imul dec mov mov and jg sbb mov insb xchg test add mov into pop push and mov test lds xor (bad) jecxz pop pushf xchg lcall jl flds lret xchg repz inc push cmpl gs lahf gs icebp add dec imul pop in sub aad lret add push loopne inc (bad) mov inc mov enter imul fcomi scas xchg mov movsb xchg pusha jmp cltd pop xchg and fwait dec cmp sar out outsb call int3 xor ja inc sub nop call stos lret pop add push fsts jns outsl ss (bad) jo jp xor fcmovne aas push or inc movsb (bad) (bad) call cmp xchg data16 (bad) sub cmpsl pop test loope nop sbb add sub call iret loope pop xchg lret push cmp mov mov and jl adc sbb cltd insl sbb ss ss inc je dec jae mov xchg lods xchg ja adc sbb xor cltd adc rcrl sub js mov es xchg or or dec mov add stc push mov pop arpl push push sub jb adc roll jnp push xchg push fistl mov out es roll sub mov add mov xlat cmp mov dec and jb sarl mov and push jo lret pop mov cmpsb imul daa mov mov mov ss jmp repnz pop inc (bad) arpl fs xor out (bad) out fdivrl and add (bad) jmp adc lods mov adc cmp std (bad) adc jno mov push mov std aas push dec fsts cwtl pushl outsl cs and scas mov sbb fcmovnb xchg rcrb adc xor scas xchg ret push pop stos mov sub jnp gs (bad) scas adc adc add mov or push pop xor push add or xlat fs mov pop xchg sbb jle leave pop push add xor jo nop pushl pop jno sahf js inc popa sub xor test mov push pop jle dec lret jmp adc inc pop jp mov mov xor mov xor xchg push arpl (bad) sub leave pushf gs mov or cwtl pop xchg cltd push jno loopne out sbb scas sub aam jg sbb dec int jg mull jecxz fildll mov xor xor pmuludq fsubs mov mov clc xor leave ss pop cmp lods cmpsl dec mov stc xor ret outsb xchg repz imul ds in jg mov jae lcall xor xchg xchg inc movsb cmpsb lea adc in inc arpl imul push fcoml arpl lcall dec pop push dec lcall inc xchg adc insl scas lahf and or fstpl scas inc lret (bad) jne mov mov addr16 xorl sahf pop scas cmc mov (bad) and xlat inc repz cs xor mov aad hlt xchg add mov pop mov jno xchg pushf inc popf cmp adc cwtl jb in inc mov or xor xor add sbb lods ret sub stos stc imul enter rol stos fdiv into repz jnp inc inc dec stos sbb ss pop fldt stc dec fcomp ss mov mov (bad) imul and and call jle mov adc in and dec xor subb rcrl and xorl shr mov mul pop or inc clc sbb push sub clc imul (bad) adc fwait sub mov inc xor jbe fs mov cmpsl xchg std inc sub dec insb adc into or addr16 xchg adc aaa lds jo iret cmp outsb mov adc push sbb fs or xchg push pop push mov out dec mov mov cld sub inc imul outsb push and mov jae jnp (bad) dec hlt aam repz inc cmp or aad push or shrl lock mov les xor rcll xchg movsb addr16 mov xor or push xchg push mov into cmpsb xchg cmp sahf (bad) out cmp or popf movsb inc mov push (bad) cmpsl mov inc or dec pop fcmovnb pop rorb (bad) mov add ficomp push push (bad) pop add inc xchg and push inc add cld jle xor sbb mov xor and popf xor jno bound aas dec rcrl jmp mov lcall mov mov jne movsl test adc adc out lret push fs sbb lea or lret lahf dec imul jo pop xchg ss mov (bad) mov jnp clc ret push sub out mov cmp sbb push xor pop mov add pop aas loopne aad xor (bad) xor sub inc dec dec cltd sbb xchg cmp into jl cmp call push push or aad jae jns xlat mov mov add mov jbe xor lods xorb fisubrl loopne mov cmp jne cmp xchg sahf cmp mov dec mov mov repz (bad) arpl dec mov or gs cmpsb cmpsb cltd shrl fxch movsb out mov cli dec rol scas bsf xor mov jl xchg push mov ret andl ja andl sbb xor xor fisub leave (bad) fimul fdivrp mov adc dec popa push pop add mov xchg add ror scas push aas push ret es aaa sti cmp xor push stos xchg inc mulb pop or sti mov adc sub inc pcmpeqb lea imul dec pop sub cmp inc add iret ret fs std or mov clc cs jmp inc pop push daa mov mov jecxz (bad) testb mov mov cmp int3 out outsl mov adc and das push pop mov push scas mov xchg pop sub cmp jg stc cmp lock sub jae xchg push aas xor es clc mov fstl cmpsl mov cmp call leave test rolb subl xchg jne mov ret mov (bad) pop mov sub gs rcrb fs xlat adc jae inc sbb mov push sbb aaa pop sub aad and loope stos dec pushf int3 or lods in lcall rcrb add jg fsubrs jle push das in push xchg xchg fild push das ja gs ret test and out out sahf xchg jae cmp scas mov xor out mov mov or test mov xor push out mov je or push xchg mov and cmp les push add jno sbb in inc cld dec ljmp mov mov adcl push inc mov (bad) adc xchg mov or dec inc sahf imul and (bad) jae inc xor or fbstp repz xor das icebp aaa out pop xor clc xor ja repz lret test call sub out add mov dec cmp shr out inc add mov into cmpsb fwait sti add add (bad) lds sub push sub inc (bad) loop lret js adc aad (bad) cli iret mov mov mov clc shlb and imul js mov stc aaa das xchg es inc stc sub cli das adc pop sbb push stc ja ja fnop orl fwait mov xorb ret xor xor cmp repz jp push xor test push xchg inc or dec xchg push rcl mov sbb push jae mov push inc ds sbb and bound inc scas dec fs lcall (bad) addr16 jge pop gs ds lods ret (bad) lods xlat xchg arpl xchg sbb clc dec sahf arpl xchg dec push je cmc add ret push fwait mov fcompl adc mov loopne test insl cmpsl in pop clc lcall into pop and cmp sbb jl sbb jl jmp xor inc int jl adc (bad) mov cld inc data16 or (bad) or pop imul mov adc sarl movsb in sub pop insb frstor pop (bad) in popf (bad) push test rcr cmpsl or repz pop jo test xor or (bad) jno push das shl jnp mov cmp (bad) xor and std aam pop mov hlt dec mov dec mov cli jp adc sub inc pop and fcompl movsl xchg lret das fs jp sub or inc pop ret mov ljmp insb inc aad or outsb cmp xor imul inc or fbstp push mov mov arpl mov pop cwtl fimul jnp xchg leave cmp (bad) lahf adc into stos in push jmp insb jmp enter mov cmp rclb adc cltd push and std imulb loop adc lds or insb cmpsb mull jmp mov pop sub dec sub scas in sub sbb jbe lcall seta push xchg fldenv and mov and push lret (bad) call inc cmp dec outsl fs es int3 int3 push (bad) mov jmp sarl mov jne adc jecxz aaa add sar (bad) sbb and cmp cmpsl or or and sarl cmc mov inc sub jecxz outsl sub xor sbb bound jbe jge dec ja xor cmp cmp xchg lret loope (bad) insb ds cli and push cmpl js pop das and lock push pop mov movsb ret mov push imul inc shrb cmp xchg arpl lds jp push fsubp repz fwait jns nop fstpt xor aad inc push outsl mov add scas mov mov push in fildl fnsave jne sbb pop in sbb cmpsb and in jmp fs adc xor push cs dec sub aas sub enter ss icebp jle mov in leave call mov (bad) in or push fistpll push out fldl movsb lcall xor into xor (bad) ljmp dec cmpsb jae arpl ret outsb jmp pop xchg pop ja add fdivs (bad) ret inc inc dec aaa movsb cmp outsb inc add fstpt ss xor test push outsl dec imul adc ja jo cld scas fnstenv push jae mov pushf outsb mov out popf scas mov daa xor (bad) dec sbb mov or pushf lcall jbe push push jne repnz dec xchg mull sbb aad outsl std ss outsb ret pusha fsubrl mov fisub (bad) lods into aam (bad) jge and jae lods sahf sbb mov mov das sti push add into dec pop pusha pop out popa cmpsl out insl adc insl mov data16 cmp pop push sbb cs into jp pop jo leave sub jns push mov ret mov lods jecxz jns pushf repnz push pop pop adc jne pop mov sbb lahf cmpsl test ds xor add leave dec and jl (bad) cmp hlt jp sub hlt cltd mov mov clc add pop into fsub adc jno dec mov xorl pop xchg mov jbe push mov or push pop imul cmp inc cmp imull addr16 fstpt test pushf ja (bad) sti lds fs pop (bad) sbb in loop sti movsb cmpsl loope out andl mov pop xchg (bad) iret test mov mov and adc xor mov push aas mov out and pop aad mov pop test out dec dec jp (bad) jg sub insb pop mov adc rcl popf and (bad) fwait lods xor cmp test in sti rcll lods clc in cmc lods xchg aad jmp mov outsl xor stos ret test and xchg add sti data16 popa cmp and leave pop pop out mov pop add and xchg dec cwtl fwait push ljmp stos cli mov push xchg arpl push sub std popa or stos cmp mov dec jns cmp sbb ljmp test sti popa and dec lods pop push sub inc inc lea inc inc hlt mov (bad) and cmpsb jbe mov add repz jmp pushf fildl mov (bad) ds jmp jnp adc mov pop inc and add lcall nop mov sbb push lahf fbstp movsl and push and daa lods pop fsubrs iret or add or sbb cmpsl comiss xchg iret sarl mov das jae loopne xchg inc sub rcrb out jne es cmp sti xchg inc je pop or lods outsb and mov lods sbb (bad) mov add addr16 sbb push push out adc sub xchg pushf adc nop cwtl scas inc xlat dec and enter loop cmove daa test pop inc sbb pushf mov dec lock shrb push jae rolb xchg adc fwait pop adc mov loopne and nop xchg sub xlat cli xchg xchg jecxz je pop ret sbb inc out out shrb mov into (bad) imul daa ret adc mov push inc or aad int bound lret lock addr16 jne (bad) xor sub fs cmp ror mov pop mov loope fmuls (bad) ja aad xchg xchg popf xchg decb jl xchg inc jne fidivr xchg lods hlt loopne test test xchg mov cmp out lcall or mov shll cmp loop jae cmpsb mov (bad) cwtd jbe push mov and sbb or inc decl pusha sbb test (bad) fld je scas or and rclb lcall jb pop mov in mov insb or inc xor mov imul andb mov movsl out adc cmc lea adc add and imul sbb mov jle and push addb pop (bad) jae pop push pushf inc mov inc pushl push popf aam xlat stc stos cmp (bad) imul pop loope rol inc xchg or fnop shr mov es jno arpl icebp or test mov repz lahf jo xchg add inc subb cmpsl lods mov sub mov sbb inc xlat xchg test repz xchg call popf in jp mov repnz aam cmp cmp fucomp out cmpsb subl addr16 fs insl sub adc icebp push add fs ljmp xor cmc jne adc mov or popf sub pop dec subl repz jmp ret pop mov test inc mov lds xchg fprem jge add xor lahf stos xchg adc xchg pop data16 sub mov cmp hlt loop cmp jl push sarb push xor sub xchg das test mov out sbb (bad) inc xor mov adc mov adc arpl dec sbb dec in xor jmp sahf jg out repz dec push outsb cmp fistpll push mov pop and psubusw insb ss mov stos insb adc xchg in pusha mul rcrb mov jecxz inc xadd push aas or pushf dec pop cmp out push sbb addr16 enter fnop mov cmpsl cld xchg fsubr inc and cltd stc fstps jns gs adc sub xchg or ss inc sub pop ret jp sub aad cmpl mov lcall fstp sub fist push pop pop pushl lock cmpsb push jp mov out xchg es dec dec testb test out fsubl push xor das addr16 test dec sub bnd jns test xchg mov ret push and push lret ret add pushl dec add push jae shll movsb repnz and call add cmp adc jae std je xchg ret jnp aam idivl adc popa jb lea (bad) repz add jb adc push (bad) and mov js push test scas loope rcrb jge adc dec test cs ret push cmp cwtl fcomi pop push cmpsl adc pop out push insb push pop mov movb pop push sub cmp or jmp ret sub jo xor mov xor mov xchg (bad) mov cmc push dec and cmpb inc mov inc jp sbb pop ds idiv bound xor sbb call fldl jnp es jb or adc hlt push test cmp jbe in mov jno ljmp rcrl pop aaa or aam sbb pop stos push movsl aam mov mov insb dec mov movsl int3 xor roll mov and lret mov cs pop cmpsl xchg (bad) shrl (bad) sub repnz fcmovbe fisttp cld int3 iret cltd sbb inc frstor movsb and jae push sub inc pop cltd xor leave bound jmp add fisubr mov pop xlat xchg pop out rorb sbb test cmp outsl pop scas mov push dec subl sbb imul daa push subb lret cld pop imul nop loopne xchg mov clc jg dec cmp lret mov push aad jae inc mov push lds (bad) cld xchg nop into cmp in xor mov rcrb xlat add (bad) add add into mov ret sbb (bad) xor cmp xor fldt dec push push std and add pop daa (bad) jp enter rcrb adc cmc insb daa leave mov ret (bad) jae and jno sub mov int and sub jne ret and ds jns dec sub mov jge xchg sbb fstps adc std jp cmpsb add shll clc pop add xchg movsb sahf test leave imul sub sbb std mov push mov push xchg xlat shrb or mov cld or or jmp out (bad) in mov (bad) and cli dec xor mov pusha pop and inc cmp ror fisubrl or add mov idivb repz mov push pop fistp xchg gs in adc sub (bad) int in inc hlt xor negl pop sbb int3 and dec dec pop pop add push stc inc test sub test int cltd repnz xor add arpl add sbb outsl xchg mov decl (bad) fistp ret jb fldt in sub ror movsl gs ret fcmovu (bad) jb mov add pushf arpl xchg inc repnz xor sub arpl xlat pop pusha add xchg ret mov or int ja cmpsl stos test lods outsb mov rcll hlt or add data16 mul (bad) movsb adc dec cmpsl jno stos push sub inc adc fwait shr mov add pop gs int (bad) adc mov lahf ss popa popl jg dec jl sub inc ss (bad) (bad) mov cmp and (bad) mov inc inc iret and mov sub push mov (bad) mov scas ja aam sbb imul xchg insl cmp adc cmp popf jo aaa fcmovb lea adc jl sbb repz mov das sub xor push cltd sub jo mov jp cmpsb out mov cs in ror lret sti push push clc nop les aad int3 jmp or dec add scas fstl inc or fmull jno cmp mov adc or push imul out sbb ja cmpsb xchg out fwait pop icebp movsb inc pushf sbb aaa bnd inc and bound lret in dec jbe fidivl sub or into mov cmp nop push pop and pop sub int3 outsb lret cmpsl dec mov scas inc mov mov and (bad) inc add subl (bad) lock pop fisub in jae inc mov xchg sbb pop (bad) adc in pusha lods test jp sbb xchg push lds push push idiv xor test dec cmpl xor out or sbb jmp movsb cmpsl pop outsb xor pop roll xor movsl mov inc xor data16 and jle mov pop pop mov jb or (bad) cmc mov popa cmp pop movsb sbb (bad) push gs addr16 sarb push mov pusha push out imul mov mov pop sahf aaa adc fwait (bad) jbe pop in ja cld out lock clc les sub lcall mov pusha jle dec and cmpxchg dec xchg test xchg repz shll hlt mov fisub adc imul mov cmp es xor sbb push out gs sub dec lahf test push (bad) lahf fdivrs pop stos iret rorl fsts jne ds sub and or sub pusha mov lds test pop in push popf mov dec inc sub es in push jecxz fucomp stos jecxz add sbb ljmp cmp int loope inc mov int3 aad mov out enter rorl lods push sub ss mov or push cwtl cmp mov je add lds test int inc aam bound xor lret sub repz hlt mov push or push inc jns loopne xchg or sbb (bad) pop enter aas mov dec ret sbb push repz sub jmp ljmp cmpsb mov adc push repz jp push mov push (bad) notl cmp cli aaa mov or sub xor and (bad) rclb pop test pop (bad) mov std out push shl mov adc inc mov jb cmp in jecxz inc jno test mov jns addr16 xchg shrb addr16 jg nop decb cmp (bad) int3 jbe mov jg pop (bad) incb cmp lds add push dec xor insl or leave xchg test sub hlt std cmc jae pop hlt lock pop or mov jl mov outsl dec cmp mov sbbl aas inc daa xor add je (bad) xor mov xchg bound popf mov leave add (bad) pop jnp and pop movsl cmp sbb mov pop mov sbb pop negl pop cmc dec es adc push xchg jo ljmp cmp rcrl lock adc dec aaa loope add notb push loopne xchg es ds rcrb cli cli add add pop inc xchg addr16 out jle ret add fistpl mov loop data16 fcmovb pop mov xchg roll push sbb jbe cld icebp lea popf jo sub mov in push mov pop sbb xchg nop imul lret pop insl pop or ss fistpll in (bad) dec push mov mov mulb adc inc push stos bound ss push (bad) setns ficomp bound cmp insl lcall mov cmpsl loopne in (bad) rcrb fsubrl sahf cld pushf mov sbb mov test jne leave cmp stos mov ret add je (bad) stc rcrl xlat xlat or fsubrp jge add lock or fcmovne js sarl pop mov or pop fcmovnu outsb push fnsave imul fwait aam in repnz add repnz jo jne test push stos push in push pop divl mov ret push mov hlt (bad) arpl int3 in out mov out aad icebp adc (bad) in inc xchg mov dec push mov fwait (bad) xchg addb fist ret push push fdiv stos mov sbb jge mov jne jp loope jnp xor sbb xor aas pop dec (bad) (bad) enter lods es mov jae arpl cmc int pushf lds sub mov mov jp cltd sub mov xor fidivrl pop insl enter ja mov loopne and xchg xor out cmpsl fcoml xchg in lods into jne fwait cmp jne sbb je cmc les inc push mov adc movsl inc dec test jecxz or push nop je xlat fldenv inc nop rorl pop mov pop enter pop mov sar jmp jns jp push add adc push prefetchw and repz daa jl add imul stos push or jns dec ret xchg lcall rorb sahf shrl mov aad (bad) jle dec stos outsl mov push push mov adc inc test iret bound call push push xchg movl push into popf mov lahf es mov sub loopne dec dec push mov cmp int add xchg add rorb sbb mov fadd sub and das mov sub scas pop in imul xchg xchg push xor adc pop mov adc arpl ret addl jmp (bad) imul out mov daa sbb test dec or add sub insb fistl movb add mov mov lock mov xchg sub idivb push add add mov pop das cmp jp sbb dec inc enter mov in fcomps lea mov fwait test or pop adc popa inc into leave cltd dec push sbb dec mov xor in fwait cld cmp jge jg xchg fwait or sub mov imull inc insl ds and pop cmp push inc (bad) jmp out aaa mov dec cmpsb js jmp into das mov dec pop clc mov stos lcall mov int aam cltd int fisubrl pop stos test ds push (bad) dec pushf add sub adc push flds and jl addr16 xchg pushl or add add xchg ljmp lods pop jbe mov test lgs and mov sub xchg mov dec cmp sub enter cltd and inc push push outsb out in pop roll lods ret aad xchg mov mov or and mov dec js xchg hlt cli out (bad) xor (bad) sbb int3 loop in jmp lcall jmp scas pop push popf insl xchg lock fist repnz pop add pop xorl mov add rsm data16 call push jae shll test movsb jbe movsb fisttpl (bad) js scas aas cmp aas push outsl jne les test mov (bad) xor add (bad) not and lahf int3 dec jne imul add pushf adc unpckhps jecxz or (bad) mov js test push hlt hlt mov push xor push (bad) clc pop adc push mov addr16 adc (bad) outsl in and mov stc repnz dec mov int3 or in xorb dec enter jnp dec cmp cwtl cmpsl shrb data16 xchg sbb adc out dec jae dec arpl jl mov fsubr jno scas xchg jne add leave rcll xchg sti les dec loope mov mov sbbl jge xor push sub adc (bad) decl loope dec fidivrl stc pop mov cltd imul xor test lea repz jge addr16 gs adc ja ror icebp out mov mov dec stc mov (bad) pop dec lcall mov dec movsl out adc hlt xchg mov inc roll cmp mov xor or loope and fild pop pop sahf out pop adc pop push jl movb test jp mov add jnp ss fwait mov add mov sub leave in int3 xchg mov test insb jno jp cli das or cmpsl or or sbb (bad) loope mov rcrl mov push mov xchg pushl dec sbb jno insl inc xchg ror inc das (bad) mov mov xchg adc rorb int mov pop outsl mov movsb jo out jb pop add or clc xchg inc bound push sbb repz adc jne push pushf pop shl sbb lret lret rcr aam xor jg fistpll imul xchg cmp sbb ds loopne scas pop lods arpl fdivrl xor sbb mov orl jns (bad) jnp out sbb or jge or popf fisubl mov frstor out fisubrl lock add out ss call dec add arpl dec (bad) push cmpsl les rorb mov ret fiaddl cs or inc dec fisubrl add and fisttpl dec sub lea andl es icebp addr16 nop cmp int pop add sbb cmp pop mov ret cmp loop cmp xor mov jae mov push rolb adc fcoml ret sahf popa add inc mov add repnz rcr add ds jmp inc nop test sbb mov sub push jmp adcb mov adc pop cmp cltd jge icebp and aaa mov cmp test xchg cltd inc (bad) pop sbb xchg push clc dec lock imul in add mov insl mov fildl push mov popf mov xchg push fisttpll in imul lds cmp cmp xor stc push push incl scas or add dec push push push dec xor fmuls mov jp push std pop push cld ljmp insl jp xchg bound in int mov stc imul jecxz loope cmp jle jnp xchg (bad) idivl mov sub cwtl test add popf jno imul stc jmp iret repz mov roll push sbbb outsl mov mov test jg cmp sub mulb aam adc xchg jno sbb xor xor fs outsb ret mov or sbb xchg cld pop lret sahf and cmp push xor stc and sar cmp insl adc cmpb stos in stos jp cs mov xlat inc mov lcall aaa and xor jl (bad) aas pop inc arpl mov xchg dec jle adc or inc cli (bad) (bad) jne jae hlt sbb incl xchg and add adc scas dec ficomp add cld seto jnp xor lcall test arpl sub jae loopne into (bad) mov cmp pop mov jno rorl push mov sub jle add and xor call out inc mov mov lods (bad) ficoml out cwtl aam je xchg (bad) and or int ljmp xor push lock lret jl inc (bad) cmc lods ret cld sub jne mov mov pop insb int3 xchg mov iret dec aam sahf imul icebp push mov pop lcall lods jg out pushf pop js mov adc mov js and wbinvd cld clc cmp je in rclb lods or sbb pop les xchg out arpl fstpt int3 outsl sbb es jle jl inc add ret dec push cs sbb (bad) cmp mov xor mov mov scas xlat int3 lods sbb sub or ret xor lahf mov push xchg lds sbb inc aam es inc mov popa mov and aas jbe xchg shl mov pushf cmpsb sub cmpl mov sahf push insl push (bad) nop sti gs aas scas sub pop int3 cld mov fimul lret push push xchg add adc test cwtl stos push in rolb mov daa int cmp (bad) into dec inc subl sub loopne and mov dec out and jne roll push cmp mov sbb (bad) fcoms dec adc pop mov sub dec cli lahf xchg stos mov fiaddl dec outsb lods mov add das xchg or in lods fstl xchg stos sub mov js,pt negb addr16 or bound xchg cltd cmp in xor push repz or loop adc ret add fwait sti cmp divb and mov jne jle ja pop cmp mov xor fistpl jge xchg push sub push adc loopne add fldenv or lret push sbb ljmp dec sub push mov (bad) mov jecxz movsb xchg push mov aam (bad) into pop xchg lds scas sar cmp push cmp inc sbb adc lcall mov xor inc or cmpsb mov aaa pop dec (bad) insl jmp mov inc in das mov movsl leave adc lods xchg sub mov aaa ds mov pop inc adc or sbb shlb jp test mov cmp inc paddsb ret mov and mov inc adc mov scas add enter xor aas xlat lods (bad) push inc movsl ss mov mov out mov dec mov mov fs ljmp mov out mov xor and sbb fdivrl (bad) call insb adc or popa cmpsb push sub test fwait mov icebp in das jnp lahf xchg pop cmc push aad jecxz ss es scas sti sbb sub in mov loope cld fstps out or add dec lret fwait movsl sbb movsl nop dec gs pop dec dec push sub mov repnz jbe sub in rolb adc lock std mov xchg push scas fmul call (bad) sbb mov inc xchg sarl stc idivl jecxz mov and (bad) cmpsb push push lds mov pop in test jle rep sbb stos push or mov add jl sub or add mov imul fcmovu (bad) or push aas pop xchg stc inc loop xlat repz push stos (bad) ja mov leave sub in mov sub lret jmp lcall and je push mov sub mov lock pop pop sub add fildl popa incb sub shrl xor mov xchg inc push sbb dec sti dec cmpsl inc xchg inc std clc jne or dec rorb imul mov lret mov jne imul stos adc pop xchg shrl in xchg dec push adc xchg int3 imul mov mov lods ljmp dec icebp fs jmp or push mov cs jnp popf xor cwtl scas bnd add call sbb mov mov and (bad) andl (bad) jg mov roll js push fsubrs in jecxz movl movsl iret cmc cmp xchg aam cmp divb jmp jne sbb cmp sub insb out mov push xchg adc inc imul sahf mov cmpsl pop repz and adcl cmp ja das add fadd push sbb xchg xlat pop jg ja add into inc movsb xor rorb or jnp jno int3 int3 push sub xchg cmpsl jg cmp and divb inc out ds jbe or mov scas mov cmc clc mov pop fwait (bad) addr16 orl movsb pop lock fucomip mull mov cld insl rcl aas or xor or gs scas out cld int3 ds sbb xor dec cmp mov shlb xor mov push push jmp stos xchg adc inc pop in movsl dec mov cmp jp imul xchg mov inc xchg call push push repz jnp std jbe dec xor and mov shr sbb fprem or gs xlat and cmpsl mov mov aas xor mov dec insb lea dec mov les lods ja xchg paddusw inc pop (bad) leave jne out (bad) imul into sub lds pop mov js loopne call sbbl icebp lret ljmp mov repz fldl roll mov (bad) or add mov mov and sub std sub insb mov cmpl inc xchg rcl jp push dec xor lods pop and imul lret insl and dec pop and mov fadds clc das mov xchg xor push xchg push jne ret lock aas mov xchg rcrl (bad) decb lret mov ljmp push sar pop dec (bad) jno jle cmc bound push mov mov dec hlt dec push add adc fnstsw xor sub shr (bad) fnclex movsb and inc popf mov mov sahf cmp pushl push loope fisubl mov js mov scas inc outsl mov xchg dec iret arpl test mov arpl mov adc call outsb cmpsb lods (bad) jle imul aas cmp adc out and (bad) jae mov xor lods sbbb cmp (bad) pop jno mov mov cwtl (bad) out bound call mov pop jns inc jp pop dec cmp sti scas sub int adc loope sti mov movsb xor repz in aad inc aad fnstcw fbld mov outsl xchg das lds out push int3 addr16 push fisttpll cli adc jne fidivl aam pop pop dec mov xchg and add (bad) sti push rorb pop fildll or sbb xchg std push dec repnz xchg js outsb cmp xchg push pop sub fisttpl sub jb dec movsb fsubr add add andb mov repnz jmp xchg dec xlat push hlt push iret dec xchg push push pop test adc fisubrl lcall loopne push les or aad out adc sub xor or (bad) std lcall add push mov popa add mov mov cmpsb (bad) fildll int out mov call adc xor xchg xchg (bad) stc inc popl fstl in add xchg outsl out lret dec push mov aaa test or push xchg iret int cmp das imul inc (bad) jl cmpsb outsl adc sbb fisttp sti dec jne push and sbb lods call insl lods ljmp and sti jae loope dec (bad) ds jle mov popf dec pop sahf in xchg outsl (bad) leave daa negb mov movsb mov stos cwtl insb cmp and in insl jge mov lahf dec movsl shlb es int3 xchg and (bad) pop pusha sub notb addr16 imul and lcall aad lods cmc out or mov cwtl (bad) mov cs insl jmp push lock ja ret in xor ja sbb dec leave clc in cmp inc (bad) hlt push push add inc dec test sbb iret push in push or push mov jmp cmpsb sbb xchg not xor pcmpeqd sarl mov imul mov idivb cmp bound call fcmovnb pop lret sbb sbb push shlb stc stos (bad) ljmp (bad) and or mov push xchg testb jmp sub dec fsub mov xlat jb jne imul cmpsl mov mov add loopne pop aam scas (bad) and insl daa (bad) xor sbb stc mov jle lret das xor (bad) es mov out in gs fidiv int3 mulb (bad) jl add push cmp les pop cmp sahf adc xor mov cvtps2pi cmp mov xlat test (bad) je sub pop lock lds pushf iret pop gs fwait scas pop add (bad) ljmp cmpsl push (bad) (bad) mov sbb jecxz js movsl xchg adc jmp andl adc (bad) out and xchg sarb inc push pop (bad) roll scas add out pop fs mov test aas jns jne out mov addr16 mov insl sahf (bad) add ret dec mov push test jnp jae xchg add popa push and mov inc jbe jns scas push clc mov sub dec lods rcrb les add xchg and out in pop push rcr pop jbe mov jne addr16 dec xchg cmc xchg xlat adc jnp cmp js sar or movsl or jno xchg sbb lods pop push jecxz push popf outsb push sbb fldenv sub jo add and mov mov cmp xlat mov mov mov lods adc sbb adc adc xor (bad) jbe (bad) iret adc xor out add rol cmpsl pop popa fidivrl mov scas dec iret inc pop pop fcompl pop mov adc in (bad) push shr arpl xor jo std (bad) mov pusha sar and out add mov add sahf fidiv decb stos push and xor (bad) xor popf add jnp lods les enter push add fwait mov dec insl ficomp dec jmp popf jle bound out adc push movsb je mov jecxz jmp ficompl or xchg dec jmp jge sub mov mov jle mov adc lcall mov cmp cmp mov lret inc or ds xor stc sub mov iret and xchg popf mov (bad) add adc insb mov hlt mov dec cmp adc mov push lds or loope lods xor cmp and mov and sbb pop popf hlt mov daa jle xchg test pop push push enter insb dec pop mov movsl xor mov mov sub cld sbb ror cmc and mov sub int dec or push je adc int3 lret (bad) insl jecxz lahf lret jmp fistp and sti ret call ret push icebp int (bad) mov pop pop dec repnz hlt pop hlt inc insb add cmp mov and xor imul sub inc rolb notl dec (bad) cmp jbe aaa mov sub xchg das stc jmp push shrl ja je cmp and sbb sti gs cli xchg mov fisubl in (bad) hlt mov orb sarb pop test mov sbbb mov dec dec (bad) notb and add push xlat jmp xchg arpl rcl mov lods js push fsts ss push lods ja dec sub aaa jb xor ljmp lods mov aad jp xor add jecxz jle xorl outsl push mov aas movb call movsl pop add das or push mov iret dec cmp and test test push aas (bad) enter xchg scas imul pop mov shrb rolb inc iret xchg push roll mov int3 inc inc gs sub das xor mov movsw jb mov (bad) ss push sub sub iret enter push and sbb sbb popf test and xchg jp dec fcompl cmp cwtl test fistl (bad) xor jge mov test (bad) xchg xchg push add adc mov cmp dec test mov enter push fistp cltd or imul fstl add and mov mov add lret leave sub into dec xor mov mov out movsl lea mov push pop outsl call gs sbb xchg xchg icebp add jae sub into adc pop mov arpl sahf test scas pop in xlat jne (bad) jne daa push out xchg xor xor inc shr scas mov inc mov sarl add ss adc xchg adc cmp rorl pusha aam mov fwait jno ret jae push mov lods pop movsl dec lahf dec dec je inc pushf xor pusha inc or mov (bad) lret enterw fiadd pop das ss fsubp cmpsl mov inc in inc cs mov popf test xor dec in jp xor or jb movsl stc lea push sbb aad rolb fwait inc and jbe (bad) and xchg pusha sbb dec in add push pop sbb leave or pop mov sbb mov andb sub lock or in insl mov pushw jne mov cmpsl xor adc and imul (bad) lcall jmp aam cmpsl fs ljmp xchg xchg fild mov fistp aad sub gs outsb push mov xchg sub inc sbb mov mov and iret sti xchg (bad) mov out packuswb push nop jl into mov lcall std sbb negl sub lock sub test pop dec and add popf in and pushf es cwtl pandn xor adc and dec xchg incb sub lock fwait rcl push mov lea mov push xlat aam sub ja insl dec mov mov out clc shrl mov out dec dec imul inc jmp shll mov xor test mov js dec rol insb (bad) cmpsb inc stc mov in cmp les add jns pop insl adc sahf jge jno or adc cltd cmpsl xchg dec out (bad) sbb xor (bad) xor jle out out or data16 clc cmp popf mov lea in loopne adc fimul and rol add add cmp or lods sbb mov xor addb jg fs out jns jmp cmp and xchg sub ss and cld leavew (bad) sti shr jecxz cmc outsb sbb pusha mov ljmp mov loopne push (bad) imul pop movsl jno rcll inc notb inc adc jb mov out fsubl and pusha call lock roll aaa or je fcompl inc (bad) fnsave and mov mov test std (bad) fistpll test insb fiaddl jmp mov xchg test pushf mov mov (bad) lret jg inc push je add addr16 lahf dec lahf cli mov repz pop cmp mov (bad) in pop inc push dec xchg clc xchg cmpsl cmpsb push dec sbb lods mov and xchg cmp stos pop jmp ds add popf jns pop pop push mov movsl fidivr lds sbb cmp cmp dec or in fldcw mov sbb add cpuid mov or push jg pop dec rcrb jecxz inc in inc mov sub hlt inc pop sbb pop mov mov mov movsl xchg pop jne repnz mov push in test movsl (bad) mov xor cmp fisubrl ljmp or movsl (bad) jb dec sbb xchg or dec xchg loopne ficoml and push das fsubrl fimul sub sub mov push push xor mov gs mov cmp out add sbbl hlt or inc adc mov adc data16 pop xor imul or in lods jno jg jecxz cmp fdivr jecxz dec mov (bad) dec push stos lods jne cmp adc jle cmp imul cwtl mov xor loope push aaa adc mov xor or enter xorl inc addr16 in daa aas and mov cs cmp dec int mov and pop mov das out push pop mov jmp cmp mov popa add dec pushf pop mov xchg mov (bad) in clc xor (bad) jbe inc adc mov ret in jmp (bad) xor mov adc iret sub aas cld dec push mov ret in pop pop inc test inc jp mov sarl rcrb shlb mov or insl adc daa sbb mov mov movups imul imul push ljmp lret or push jne jne repz jge mov (bad) sbb pop cmp inc stos cmp cmp pushf repz jns call xchg repz cmpl in (bad) pop dec inc sbb out (bad) fdivs stos mov and stc (bad) dec mov jecxz mov les test xor and and aad (bad) ja aam sbb mov je xor inc lret sbb inc pop leave das std inc mov lcall or divb je cmpl sar in pushf dec jne ret mov cmp les sub xchg outsb inc movb pop int3 or pop sub jge or pop hlt mov pop push (bad) ss je sahf xor mov cmp pop fwait jo or cwtl imul jno jb pop fadds rcrb loop sub adc add imul lahf std adc xchg mov xchg mov and cltd push sti xchg push pusha or cmp jae lcall movsb scas aaa or adc lea popa pop mov (bad) adc leave jl aas fwait jno push movsl sub jb in frstor das push add pop int3 or ret sub pop test jns fmuls push int push mov push loopne inc hlt lods mov lods ret call mov lods cld out inc stc fsubrs push (bad) icebp mov and mov dec nop rol push fiadd lret clc jmp xchg punpcklbw sbb js jecxz pop xor lods stos adc or ret push or lahf std and loope (bad) push inc pusha push (bad) mov insb dec out mov aam jb mov pop xchg inc mov xchg pop cmp lds icebp imul mov into xlat and lods xor leave xor push (bad) mov lcall nop mov jae int3 push push dec push bnd into mov sub popf dec movsb loop sbb (bad) or pop pusha lcall pop sbb dec xor sub rolb out pop or or dec xor insl xchg push mov jb insb inc loop insb sub pop lock daa adc fmulp sbb and mov lahf rcr (bad) aad sbbl aaa and clc popf jge pop repnz roll xor aaa js (bad) xor (bad) loope xchg jns out or in fwait repz fwait or pop dec pop jge ret cltd sbbl adc mov (bad) dec ja mov mov add sub (bad) pop in insb push pop arpl fs lahf lea sbb mov fild insb insb push and jno add mov pusha lret cld out or mov adc sub in test sub xchg ret fstpl adc cmpsl (bad) xchg loopne or insl adc std lret push or pushl inc adc dec mov xor dec roll in jl mov fxch inc pop mov stc faddl pop sbb add loop (bad) mov inc or push fwait cmp out sbb jo movsb cltd sbb ss sar call loopne popf dec dec mov ret in popf in mov xor jg arpl (bad) hlt scas insb cmpsb scas sbb jb pop data16 insb (bad) js das push pusha pop das (bad) or cmpsl mov sub rorb call stos daa (bad) cmc dec call in dec pushf hlt adc popf pop mov movsl fsubrs sarl rclb mov cmpsb xchg jge scas in leave imul lods cmp xchg push test clc sub and notl outsb (bad) xchg pop sbb ficomp jne sbb out fs outsb add pop adc int3 ds je add sub mov cwtl aaa lods xor jg clc jle fnstsw jecxz jne and pop push adc mov jmp loopne ja (bad) loope jp int3 imul dec mov add or ficoml or push xchg loop xchg mov sub rorb pop repz cmp push xlat xor lods inc push inc mov movsb inc lret sbb mov cmpsl and inc push mov push mov xchg pop cmp in mov sbb add mov add dec loopew add iret pop xor jg das scas jnp in and add push imul push xlat popa pop lock out out lods mov pop inc xlat inc pushf cld jnp dec mov mov xorb xor push push xor adc cs popa add sub pop scas loop pop hlt sbb movsl cli repz lea mov push rclb sbb xchg fsubr pop push nop pop sbb cmpsb repz add dec inc jne sbb cmp pop into jmp (bad) mov pop sub ja pop gs mov lds dec cli cwtl xchg pop pushf cwtl stos cs jo,pt pop inc or out hlt aaa std jecxz mov test in mov rorb je or stos xchg adc pop xor cmc fwait mov cmpsb mov or xchg mov lret mov arpl lret xor sub pop test adc mov aaa test jns lahf add jo and fsubrl cmp stos movsl cmp fs xchg sbb insl mov jmp and mov mov lcall xchg xlat (bad) push or add cmpsl pop jecxz divl adc push mov xchg arpl xor insb pop popf leave or loop (bad) stos mov adc in test sbb (bad) lds movsb lods cwtl pop std rol fisubr mov push xor (bad) jecxz lcall add sub adc ror jae push pushf orl int3 push adc data16 jmp pop sub cs and push xor cmp dec add (bad) ror orl fucomip jo addr16 push call jecxz mov lcall pop lods rolb cmc std sti lods jno xor xlat dec pop mov shrb nop flds cltd mov mov jecxz out or and xchg fsubl sti pop mov icebp inc jg push divl scas test add adc dec aad and mov outsl mov inc cmp mov dec mov rcrb add mov add fimul repz ror paddq push add ret add cmp xchg inc dec rolb out push setg in call decl mov fbstp shr movsb imul mov mov in enter pop push xlat fldl int3 push ds add push pop mov test or mov add aad sbb shlb mov std mov fsubl mov enter arpl fldt test mov outsl pop sahf mov jno push and bound mov adc xchg int and loopne ret ds cltd (bad) jnp int lret lea in (bad) dec mov and sbb inc loope data16 push je sbb and and cli mov xor stc and pushf pop pusha mov lods fs dec stc nop mov mov cld in add cli out mov fwait ja lahf jecxz cwtl lods mov sub jns out dec stc xchg adc inc cmp les dec ss inc scas lods mov push lcall push cltd mov ret stc xchg add dec xor xchg mov pushf push xchg stc or (bad) loop iret and pop mov cmp pop adc and popa dec mov push out or cli sbb nop gs sub fcomp or cmp sbb jae adc dec cmp (bad) or xchg pop mov ficoml sarb dec inc int loopne or mov in test add sub subb fiadd das pop sub int mov les and sbbb das cs mov mov add loopne and into sub inc mov push (bad) js cmp iret fstl aam xchg clc or push xor adc inc pusha push add mov mov cmc daa jno mov mov pop and ss sbb cmp inc add das mov pop scas and aam mov xchg xlat movsl insb mov lret dec rdmsr adc (bad) mov sub push xchg lea cmp push test sub pop repnz mov imul and shrl movsb add pop ret mov sub inc adc dec std or icebp sbb push enter rol in sub sub lret ficoml repz (bad) movsb jne xchg jo xor adc in push jae add leave or test xor (bad) jno xor mov push andl lea mov pop inc popl mov out jno enter loope mov out test lret lods repz push cmp sub adc sbbb cmpl ds or (bad) mov pop jb (bad) mov xchg dec sub fisubl sbb pop rcrb push sbb push imul (bad) push inc xlat outsb inc test sbb push push cmp jnp outsl pop mov aad xchg jge,pt lret popa lea sbb mov loope pop bswap (bad) icebp (bad) xlat xorl dec mov fcmovbe push cltd mov lock ja xchg pushf mov cmp repnz imul add add movsb sbb adc sub add mov cmp push mov enter push push mov test fcoms vdivps je lods xchg mov mov mov inc xor cmp subl pop pop into pop push cmp add stos out cmp lret sub xchg adc ret iret lcall fildll or mov mov arpl clc cmp jmp clc push sub mov popa addl or pop stos test cmp xor lcall in cwtl push pop pusha imul orb lods mov andb jno or sbb notb mov pop adc mov jle aam movsl add ret daa add hlt out pop pushf mov mov mov repnz xor mov repz xchg mov insb ds dec mov rcrb dec loopne inc das je jmp js push xchg negl jo seto ss mov sub cmc das jnp cmpsb subl push (bad) and rcll out aam mov shrb pop sub cmc pop inc mov pop les adc xor mov imul push jae inc inc adc push push mov sbb idivb inc push adc pop jbe stc inc xchg repnz push xlat inc mov loope cmpsl add pop repz fs push jl,pn inc sub push inc xlat adc hlt (bad) stos or lea iret cmpsl cmp clc mov stos inc pusha data16 xlat adc and dec inc cmpsb hlt cmp in or xchg (bad) push out dec mov lods repz gs dec ljmp and (bad) sarb add addr16 (bad) mov inc push cmp push mov pushf (bad) adc es sti test xor and mov scas sbb vpaddusw (bad) push mov mov pop adc arpl leave pop mov dec mov cs hlt mov rcl add push stc (bad) shrl jb sbb xchg inc in sub test jp jbe xor pop repz fildl verr rorb xor ss add adc push stos jbe (bad) loope call inc enter cmpsl es sub movsl je dec nop mov cmp sub sub push add push in pushf (bad) xor inc adcl lock push cs paddusb xchg mov fwait cld pop mov sbb je scas movsb cmp push aad lea data16 jne inc and aad (bad) push gs lock stos xchg or (bad) arpl enter pop and jl xchg fwait mov mov sar enter dec pop pop and ss test push mov add mov dec mov inc lret jge xor adc jno mov adc lcall fbld xor pop adc jg push test and push jne mov dec fadds es mov fild das (bad) div push cwtl push xchg (bad) fimull push jmp add xor fdivrp dec ret test shrl scas xchg or adc cmc aad jns dec sbb cli stc jbe sbb (bad) fbstp sahf lds mov adc mov das or inc sbb sub aam push push jmp jp loop cmpsb shlb imul rolb jns clc bound and mov adc int inc push pop nop lds xchg out mov outsl inc push sahf shlb push cmp adc sbb mov dec mov jae jge cmp mov faddp lea ficom mov add arpl test dec xchg push mov push sbb mov mov jno mov pop mov jbe mov jno xor or or icebp test inc notb out xor inc mov sbb call fnstenv inc push cmp lds jle bnd (bad) ljmp cmp xchg mov pop add pop jle stos enter dec inc sbb (bad) fistpll clc sbb cmp cmp fldt push mov sub pop dec lret xchg pop dec loopne sbb sbb lock mov ds into call pushf int3 push cmp xor cwtl cmc mov add loope int3 movsb imul xor lcall xchg add jae and xor mov lret popl push iret adc mov cwtl xor std test mov dec xchg xor pop xor mulb lcall outsb mov dec int3 fcompl pop scas stc push cli insb mov lods and sti fsts popf arpl and sub aas or imul add test add push lods cmp incl cmp sbb xchg sub mov xchg (bad) xchg xlat (bad) push or aam lahf stos jmp insl cltd idivb inc addr16 jp das dec out and outsb dec cmp xor sbb sbb xchg push hlt outsl ja push inc data16 dec cmp jl movb ja (bad) lods push in lcall outsb stos das push pop jbe cmp int3 ja in dec inc add jnp dec jbe pop mov cwtl cli pop lods pop jbe (bad) enter jmp repnz vpunpckhwd sbb pop outsb (bad) mov mov fs mov cli aaa jb test fdiv call ss popa movl aam sub movsl xor roll mov push adc clc lahf fucom popf lea add gs push int gs enter fbstp frstor adc push cmpsl pusha decb add movsl sub xor mov movsl dec das lods inc xchg push out scas push ljmp inc jmp inc or dec push test inc xor add fsubl adc push mov and insb xchg pop cmp cs sub ret mov enter cmp lods mov in adcl pop (bad) push fwait push enter add mov in dec xlat mov mov adc icebp jbe dec cwtl inc push pusha out es mov jp pop mov test add sbb ja mov mov fstpt push mov lret std rorb mov inc and sbb dec mov xchg mov aas cwtl mov pusha and jmp aad stos push pop out inc jmp (bad) push notl bnd push xchg xlat hlt jecxz push repz movsl dec mov out mov sbb das push inc pop cmc push movsl (bad) xlat jp ja cli jns iret adc mov (bad) aaa (bad) out les sbb inc xor inc scas mov movsl mov les scas out in je mov xchg sti xor pop jge lods inc fwait loop xor cmp or int3 mov cmp pop das push test in lret push jne mov inc xor jbe jne pushf insl test mov ja in rorl or cli mov adc (bad) jae out sub (bad) dec mov decb dec (bad) xchg sub mov daa push lds movsl or cmp pop fcmovne adc pop andl mov ss mov and push jecxz out lods js out push mov or push popa out xchg sbb fwait lret test jns (bad) rorb jo pushf and and xchg pop xorl sbb sahf stos add xor or pop adcb push mov fsubrl repnz sbb sbb xchg movsl push mov mulb cmp mov xor int cmp mov fcoml lret xor ret mov xchg and jle (bad) bound ds fstpt jb add mov mov mov aad dec aad sahf mov pop push cli inc push sub mov popa ret xor adc jge addr16 jmp pop sub into sbb int3 jb pop adcl inc mov cmp test scas in cmc cmpsb int insb les aad jmp dec mov ja iret lock cmp mov xchg shlb add inc mov (bad) jge cmp fildll and fcmovne dec sbb push inc and (bad) mov dec add mov repnz mov mov push mov and push ja addr16 xor jle scas mov sbb shll mov mov pop jmp mov in cmp pop pop push out subb insb (bad) hlt pop mov je mov push mov and clc idiv xor sahf int3 int3 push push xchg dec pop xor testb push movl std sbb lock fcoml cld mov xor pop lea lret cmp lds pop dec cld add aam int3 setl mov push mov dec rolb push stc cmp and popf mov push jge (bad) dec mov pop (bad) push sub push cwtl popf fmuls cmpsb int andb je dec movsl iret ss or jae push std out xor cmc xchg push xor jl imul test enter in adc sub mov pop and aaa icebp pop imul daa fisttp mov aam mov ret popf sbb (bad) and pusha mov push int3 xor imul lahf loop push push sbb add sbb sarl xor stos ljmp push pop push les iret push add repz imul sub hlt push cmp vaddss out mov movsl repz (bad) mov ja sub xchg jbe add clc dec pop lahf (bad) dec add inc push lahf jp sbb imul ret jae ret aaa xlat add fucomi mov adc movsl and dec je push mov rcll jg popf inc notb aaa loope sub scas xchg mov fsts push xchg push and (bad) pop pop or sub pop mov adc rcll sub pusha adc flds inc lods hlt into cmc pop cwtl in scas je in add and pop mov dec iret dec inc xchg ss sub imul call jmp inc jmp mov lahf pop cmpsb add sub cmp dec mov sarb cwtl aad sbb and mov push and imul add xchg int3 loopne mov mov imul jnp fnop adc adc ds inc (bad) fsub add cmp es adc ja ss pop pop clc inc js int3 mov fidivl pop sbb push fldcw mov or or rcr push pop nop xchg add fistp pop bound pop mov mov mov push mov push into aad movsl cmp jg ret gs mov stos jmp fist leave outsl outsb xchg pop xchg repnz rcrl pop (bad) in rcrb movb jl gs imull add outsl out dec dec jbe jp imul xchg and insb or gs in jg cs frstor sub cmp lret sub movsb lret and bound push into outsl rolb sub or test sahf sahf and add (bad) xor hlt arpl (bad) incl repnz fnstcw mov or mov or fmull in sbb cmpsb mov outsl arpl ljmp mov cs cmpsb movd jno aas pop pop gs dec stos int3 mov add adc or loopne mov and dec sbb repnz cwtl push jecxz mov (bad) not sbb (bad) into lock loop insb inc xor push pop or sub xor cmp imul and ljmp pop fistp idivl in imul outsl xor bound clc sbbb mov lcall jl stc pop push jecxz jb mov push dec ret daa in lretw fdivrs stos lahf mov popf stc sub cld out pop decl aad fimul sub addl sbb cmp sbb scas or jp inc (bad) fstps test jg or or jmp fwait add loope scas jae adc inc dec pop pop or sub sbb outsb fisubl sbb mov out sbb cmp cmp ja push xchg shrb jno sbb adc aad movsb int3 cmp fwait xor jbe imul fdivrp push push jae aaa inc add pop mov mov inc loopne cmpsl jge lret and imul push sbb (bad) sarb adc insl (bad) cmp dec ss lea dec mov cmp aaa xor jle or and fs lret sbb fldl2e cli pop sbb cli addl insb je es or push adc out jbe cmp mov xchg pop or popf push mov jecxz push or xlat lret pop jecxz imul pop fisttp jne add insb xchg popa cmpsb loopne and mov ret xor sarl pop lahf add lea test inc leave rolb std popf xlat mov inc insl int3 lcall test mov mov roll loopne mov not pushf mov bswap movsbw lea push movl pusha lea call jmp movl jmp mov lea call cmp push push jmp mov clc sub pushf mov pusha mov lea jbe stos pushf lea jmp inc pop xchg loopne inc test dec mov orl sbb push imul rcll lcall inc ret inc lahf pop fwait ja or loope repz cmpsl js pop cs push mov mov jl inc push (bad) movsb popa mov add mulb stc add dec dec mov lahf xchg out inc cmc or popa cld cmp int push out xchg xor inc cmpsb adc int3 lock mov cmc test mov btr shl neg mov pushf neg not jmp bt sub jmp pop pushl or mov push xchg pop int3 dec mov xor rcr out (bad) hlt es xor lcall (bad) rol (bad) jge popa mov lahf push push (bad) sbb mov lret cwtl in lods add out movsl add xchg test cli (bad) nop cmp movsb jae inc xor ficompl pop sbb lods rcrb or scas in (bad) jno jmp in cmpb mov mov mov imul in push (bad) push in mov sbb jmp dec inc int or or push loopne cltd mov icebp inc mov sbb push enter push insl pop mov aam mov addl dec xchg mov sub mov outsl push adc (bad) stos repz and adc dec dec cmp scas mov mov adc fisubl xchg cmp add xchg cmp mov outsb jnp fistp adc in jmp mov jg aad mov cmp push mov and adc xchg pop jb ds fs fildll pop adc push fnstenv jb xchg push lods pop lcall push rclb inc lret mov xchg xchg push add inc arpl xor sub (bad) jnp mov ss popf lods mull fcomip add mov int3 pop xor xor mov jne jg scas xchg inc movsb mov cmp or push xchg or dec mov mov xchg jmp insb rcrl adc lds movsb aas lods or push mov in in lock lret mov inc out mov cmp loopne inc cmp xchg (bad) scas ret nop imul fildll xchg enter cwtl cmp lea cmc and or jg or inc pusha xchg in cs or test xchg (bad) jae push cmp xchg shrb int pop dec inc je push test enter cmp jno stos jg ds dec shlb movsl push sahf or xor test nop add rclb (bad) out dec mov aam imul subl xchg xchg jb xchg loope movl dec sbb jns ss xor mov lods jbe sbb push mov aad das aad pop adc nop std or stos movsb xlat sahf and push cmp adc or xor rorb inc dec or subl mov cmp fwait jo pushf sub cmp mov and enter fwait je rcrb mov in sub mov enter mov dec cld sub loopne out gs sbb mov adc or cmpb stos and in or enter pop mov add push jp lret pop enter push lret cmc xchg pop dec mov xchg pop stos lret in add push icebp clc push call outsl or popa loope sbb or push fstpt imul jl lock (bad) jl push mov lds mov add movsb xor insb popf arpl sahf test mull repnz inc pusha out sbb push push jg pop fcoms insl psllq data16 cmp xor rorl fbld lock jae rorb and pushf lea jmp pusha mov in or enter xorl js negb push push std sbb mov scas jbe mov outsl cmp jp push inc lahf stc ss cmpsb and sub mov push clc xchg pop sbb cltd pop jg and add mov inc xlat shlb lock orl mov lret lds pop test dec jmp les (bad) (bad) push ret jmp setne push stos std mov mov dec xor fucomi add mov ja xor out or mov cmp dec jp idiv push xor pushf jb scas cld loopne sbb sysexit mov mov mov add gs add dec repz shlb repz pop outsb test scas js jl in shrl out popf jp mov jno pop mov sub jge flds vminsd sub cs xchg movsl mov loop loop mov jecxz scas outsb and into in jo fnstcw jge adcl fcompl adc mov sbb test dec insl call scas fucomip (bad) stc add push clc sub call pushf lea call jmp stos loope cmpsl out or dec lds mov rorl add inc sub inc outsl push aad ds in test jecxz cld in adc mov ds out lret and (bad) daa sbbl jne lahf push or xor dec jne mov je dec or xchg jae lret jg dec sbb mov push stos je fs das adc push pop scas aam inc movsl pop push imulb jle pusha mov pop stos jg jle or add imul add pop fucomp or dec rolb mov push cmp insb adc test push testb sbb xor loope xchg cli sub stos outsl adc or cmp mov clc test dec sahf or mov cmpsl push fistpll push fstps pop sarl cmp arpl mov dec jne fnstcw stos adc mov fsts xchg xor jb aad int jecxz lret mov sub mov sbb push cmpb inc insl lret rcl loope les dec mov dec fwait jg inc imul jo (bad) imull inc in xchg sbb mov xchg cwtl pop out sub imulb cli decl xor pushf pushf lea jmp mov shr setno add mov test test stc test and test add pushf pusha call jnp addb or pop xor cmpsb aam js int3 dec sbb lret cmpb bound sub sbb mov jnp adc xchg pop in out (bad) sub adc add add jecxz lcall push mov std (bad) fs scas ss mov dec push bound popf je cmc push incb mov (bad) pushf stos mov sub xchg or inc js push in aaa dec in cmpl call das hlt inc sbb push enter fisub pop lods shlb push sahf lcall (bad) push sahf sbb stos dec cwtl xchg int pop es testl xchg xchg sub je or cmp aas dec inc jne dec in stos push cmp jns and inc fs outsl mov imul cmp js sbb and xor xchg inc loopne inc and in fistpll stos jne inc mov sahf in xchg out pop xchg mov jne jne dec xchg divl cs adc imul add clc and leave fld cld lret and inc push cli xorl dec pop testl dec imul shll (bad) shll push nop mov pop xor cltd shrl lods leave data16 mov xchg popa push dec rcrl jnp xor dec repnz aam pushf push sbb inc cmp es out inc in sbb jno push (bad) sbb shl iret add ret inc add addr16 or bound loopne jg adc not mov in pushf aaa push movsl mov and push ds pop nop andl inc push out or or and sub dec fwait pop xchg xor adc sub dec cmpsl mov xchg cld in push (bad) aad icebp bound inc cwtl cmp nop fs mov adc xchg jno jnp ret cmpsb mov lods xor frstor xlat pop or and mov or add adcb cmpsl mov jle and frstor jg jbe (bad) mov stc lcall sub (bad) mov inc clc or fcompl push rorb adc pop pop jp xlat adc fstpl popa and dec lock jp leave test mov subl push inc xor sti or or movsl in (bad) push cli inc push cmp add xchg cmp fiaddl (bad) cld popa sti dec test and sbb repnz mov push adcl add xlat fs cmc shl push sbb fsubl pop dec in pop pop mov arpl pop or pop inc popf cwtl mov xor fs aam xchg push adc mov inc stc cwtl xor cmp jnp in mov testl scas (bad) push cmc insl adc dec clc pop sub mov pop xchg mov movsb (bad) fsubr xchg and fwait pavgw mov jae pop jae xchg lea or mov std pop repz lods and lret mov stos (bad) inc cmp inc in cltd (bad) adc jne and in gs cmpl jo add jnp bound push jae popf test fcompl aas add into adc clc xor jbe add rolb push sub xor bound stos xchg test sahf push imul inc test push fwait (bad) push stc mov std mov jnp stc and dec (bad) mov imul fdivs jnp cmp jmp aam mov test pop stos js or mov inc fsubs or mov sarb jns dec and or inc call xchg and xchg popf mov call hlt hlt into jbe movsb pop mov xchg fwait nop push cwtl insb jo xchg mov out sub dec inc fwait loope cld ret scas jns (bad) xor addl insl cmp lcall data16 scas (bad) jp jge decb sbb xchg add (bad) and add and psubsb add mov inc hlt and (bad) pop dec and rcr adc js sbb mov xchg mov push cmpl into arpl jae addr16 jbe mov jb sbb stc xor inc (bad) cmpsl jp add and pop enter addr16 fcompl pop es sub xor or jb pop push add rolb repz and test mov xchg out cmpsb and test fsts jno mov pop jb add and inc in jnp cmc and std (bad) jae out mov gs lret dec push aad add xor push push jne mov push jp jmp pop loop or xlat mov xchg fs movsl out inc adc pop cmp xchg jmp daa lahf and popf cmc push pop ret rcrb jno popa test (bad) push aas test cltd (bad) jp hlt mov xchg test xchg das fmull icebp fldcw loopne add jge jb enter pop mov lret xlat xchg fdivs push imul dec addr16 inc or inc mov movsl xor xchg push aad xor sbb call outsl push test xor add xchg sbb xchg cmp cmc push mov mov sarb inc or mov and sub dec (bad) ds cmp xchg pop add inc inc xor jne call neg mov rcrl les les das sub or xchg sbb dec int cmp pop lock mov push lods xlat add mov push movsl les mov jp adc pusha lds add push push sahf mov mov mov pop jecxz push pop push (bad) xchg mov pop fdivrp jle xchg xor pop jle fucom jp push inc clc aad adc pop sahf cmp push stos out cmp xchg cmc aaa dec cli in pop js and pop lea inc stos jmp mov mov or inc adc adc push js mov icebp icebp pop sbbl mov gs inc into test inc jne jg xor in movsl nop fistpll fwait loope inc test jo cli add and mov outsl divb pop iret test fmul mov pusha dec lahf iret xchg ret (bad) mov in outsb lret inc mov scas loop fsin ret insb jge jl shrl sbb out out rorb lret dec adc stos std add (bad) gs add push loopne cmp in es leave leave pop test xchg mov and xor lods and cld sbb and push imul call (bad) dec xchg sub sub sahf sbb lret pusha jae xor lret mov mov flds sub fdivrl dec add mov fdivs and xor cs (bad) xchg inc lds (bad) lret stos call lret cmp movsb mov mov lods and push or pop aas jnp add push mov ja (bad) (bad) adc dec fbstp xchg mov movsb (bad) and test movsb in jg add xchg cmp push rorl in dec push or int3 adc jg ror mov and negl sbb and fcom mov mov inc jmp inc js mov loopne loopne pop xorb repz mov and lods pop jl xlat test mov mov cmp mov add dec jo loopne mov bound add cli outsb and out sbb test adc (bad) gs push lret ret pop inc jl xchg jmp mov sbb std jbe shr push fldt add insl push adc js fisttp or repnz sahf mov imul ror push jno mov nop or pop and aam test rcrl nop and cmp mov pop icebp pop or ss pop sti jb loope jecxz iret inc and push sub negb out ja xchg xchg nop (bad) mov pop in in inc push mul imul ret adc sub cli adc pop in sub pop in push sbb add (bad) stos or js cwtl mov in sub inc cmc loopne out xor loop xchg popa mov aam pushf push xchg mov insb jmp (bad) and sbb dec add pop cmp xor leave cld inc scas pop lcall lea xchg aad jp (bad) sbb fiaddl inc pushf nop or sub popf nop jno rcll mov out jle add (bad) repnz (bad) (bad) scas xorl cltd add cmp lds adc cld xor loope sbb in xchg cs fwait jp incl out scas shll inc xchg fwait in jg sub arpl mov sbb jae or dec (bad) mov xchg dec xor inc bound out mov lret (bad) or xorb mov mov xor in jb push in or (bad) pop jne xor (bad) sar push sub mov mov scas sbb jle xor sub sub add push loop or enter cld sbb les push repnz movsb or insl (bad) out or movsb test cli sbb push loope outsl jne ds push jns (bad) sbb adc scas add cltd iret sbb fscale xlat adc aas rolb jg cltd repnz data16 push fnstenv aam clc aas sbbl in mov nop into mov rol inc push incl push push das or sarl imul add xor (bad) sub mov or pop jl dec mov adc call pusha mov add sub xlat ficom stos in adc pop xor xor xor jl mov lahf insl divl out xchg test cs mov daa adc gs iret lea pop in sub push adc adc (bad) je pop pop mulb cmpsb loop scas outsl mov dec inc adc pop dec int3 mov (bad) cmp pushf mov (bad) and into inc pop test clc dec stos lds push mov stc push (bad) int3 push scas shll call leave nop adc sub push fisubl scas mov sbb ja bnd jb xchg fistl xchg cli mov test std adc mov stc mov sub and sub xor stc mov aam fildl test mov clc mov inc cmp push cmp js mov outsb xchg adc push cmp xor add lods cmp aam mov mov pop cmp mov lds scas stc int add cli aam js push jl fimul dec call cld repnz insb fwait (bad) bswap sub jo add popf imul (bad) or rolb lods imul scas adc imul mov rorb dec mov insb insb jmp xor loop in dec pop xor test ljmp add je mov inc ljmp scas inc pop test cs dec lock inc mov fidiv mov psrld movsl xchg push aad inc out insb mov mov mov ja dec (bad) add jmp xchg or mov jecxz jle (bad) out cmpsb jl cmp nop sbb push js int push pop out shrb ljmp jae jbe push adc xchg out movsl sbb fistp inc (bad) jmp mov jnp jecxz xor pop jae inc sbb add jae test and mov inc test mov pusha bound and cmc pop (bad) in ret mov int sarb or scas lea push mov mov repz adc jo cltd pop push aaa pop (bad) es rorl pop sbb adc add fidiv xor mov dec insb pop scas je jg and mov mov and mov jecxz orb negl movsl dec push push cmpsl sbb inc and mov (bad) addr16 test call push out ljmp scas cmp jp cmc adc call data16 daa fiaddl inc or (bad) pop pusha push loop nop stc dec je mov xlat and movsl dec inc cmp bound jmp or jmp pop repz dec mov loop je jo outsb dec pusha aas enter arpl or mov loope add mov std cltd dec dec test add mov xor repnz fmuls mov fcompl pop leave push mov std mov ficompl xchg fimul push xchg (bad) je lcall cmp mov adc xchg adc add cld imul aam jo roll loopne js cmp lret xor mov (bad) int3 sub ret cmp in ret loopne or push (bad) mov je jne bound insl mov shlb fistpl fistpl ss orl pushf xchg test rorl cltd add pand jno xor jecxz jl test out daa jbe sub jno fisttpl hlt sub scas cmpsl sbb push inc jo insl cmp lods sbb es or out aad mov in data16 out fwait jo ja cltd cltd imul movsb dec (bad) jns jo fcmove jne push out ja insl int3 (bad) and (bad) jl out lds pshufw jae (bad) out xlat pusha mov fdivp fsubrl lret mov jl cmpsb mov into and incl cmp ss mov jle and sbb loopne gs or dec or rol sbb adc outsl mov pop in lahf push cmp sub xchg data16 lods (bad) rclb das xlat imul xchg jno add incl rcr push or cmp push sbb push jae aaa and insl adc into das nop adc add mov xchg (bad) push sub pop push ret sub iret mov xor adc mov dec sub jmp xchg (bad) test inc push aas or cmpsb push (bad) cltd insb jecxz movsb jle sub mov fwait outsl nop push pop jge dec pop ret add sbb loop scas dec xchg xchg enter (bad) clc test stos aaa dec lret xlat push jmp rcll add aam nop das pop sub lods adc movl movsl ficoml mov push jne mov cmc or adcl hlt or mov std sti pop out nop push push mov gs sti inc or sub mov (bad) call mov mov inc sarl xor jecxz les pop xor sub adc shrl ficompl jle xchg xchg out jp les jno sbb push dec stos mov pop subl (bad) popf cmpsl mov enter xor mov dec mov xor cmp loopne mov mov popf aas fiaddl insl and inc dec fisubr insl loope cmp pop push lock cwtl ret icebp jo stos mov daa (bad) xchg mov test (bad) push outsb dec test add fsubrp adc and lea mov add ret pop rol adc inc cmc mov in xchg sbb std sbb es mov inc imul mov sarb mov mov mov movsb mov xchg in mov push psubd loope insl ss cwtl and mov mov out or jno jnp mov xchg repz (bad) fiadd fmul fdiv fnstenv movsb mov push les imul cmpsb cmp adc jno js xlat rcll dec mov mov outsl mov add xchg cmp xor popf rcrb sar jo outsl cmpsb test mov aaa or je nop cmpsb add icebp pop movsb stos cltd daa mov pusha fs stos fstl push xor mov fwait bound xchg flds xchg fild dec jmp lds jg dec lret sbb mov mov jmp stc arpl inc sbb pmaxub aad mov cwtl cmp cmp jp (bad) jbe fist aas xchg mov mov js mov push and addl pop dec fsubrl jns test and arpl aas adc rorl outsl xor mov ret sub add test cmpsb inc xor mov addr16 (bad) fcmovu pop xchg popf mov loop push inc fildl pop aam add aad adc outsb jecxz sarl fbld imull test bound or xchg idiv andl xor dec adc sbb pop sub (bad) popf dec imul aaa sub cltd push xlat xchg in cmp xchg pushf mov loop ficoml adc jecxz scas in lods adc or sub in jg int dec out lret es jle cmp mov jnp lcall adc sub and bound dec cltd (bad) push cmp add sub fnstenv inc cltd icebp mov dec loopne es stc jo nop aas aad cmpsb push mov orl or push pop cs les push cltd mov (bad) cltd leave into and pushf mov cmpsb cmpb push adc push rcr mov ficoml jmp clc clc fisubl pop aad cltd push mov mov test xchg mov jle sar clc jb outsl jp mov inc or (bad) punpckhdq popf push sub fcmovnbe cld pushf pop dec or (bad) icebp fs lret idiv outsl inc stc std (bad) and mov shll xchg scas int or add and mov lock addr16 loopne inc mov xchg cmp sbb cmp adc mov sub push pop sahf mov push jl sub mov sub sbb pop sbb jmp adcb nop mov mov dec jae fcomps je pop xlat xor es das lods (bad) icebp fimull call xchg fsubrp dec mov mov cwtl xlat push adc stc jo push cmp outsb jle add inc mov sub sub call sub push out mov pop and xor jmp out out sub notl and rorl add xchg or add std xchg mov andb push mov pushf add push hlt mov (bad) gs aam rcrb push add lcall (bad) sub fcoml or fidiv push jp adc sbb mov pop out fnsave out movsl xacquire lahf pusha (bad) mov sbb add mov adc mov sub cmp push inc sbb mov sbb cmp in adc daa fisttp mov push (bad) shlb movsb loop into cld add xchg push adc and out xchg ds es inc ret fs leave movsb (bad) aam sub leave in xlat xlat xchg xor mov std inc jp dec insl lret shrl rcl setl in push jo xchg xor mov mov int aaa rolb subl lods add into xor mov mov adc pop and dec mov lahf and ja jecxz das jge stc (bad) fcomps xor test adc into je xor xchg rcr (bad) pop jae xor push inc addl movsl repz sbb or push sub (bad) leave fsts lret mov mov xchg and mov mov lahf lret mov test mov sub in and lods sti std jge mov mov outsb enter loope cs int3 mov jo aad jmp cmp (bad) push push cmc in xchg mov inc lock push cwtl sbb movsb pop sub mov mov mov push dec push sbb lods cs push push add nop pushf adc push cmp movsb adc loop pop inc loopne push int out pop into mov xchg fs dec je mov lret cmc xchg aaa pop jbe shrl pop mov mov mov fldl js pop shl adc (bad) stos test cmc mov fimull and adc lcall push aaa mov movsb (bad) je dec mov (bad) in popa dec popa inc mov shl (bad) and lds add pop cmpsl iret jp cld cmp push stos iret push mov outsl jp pop mov jecxz scas into fsts stos dec sub cli push xlat push sub imul xor mov mov (bad) je inc popf les lods movsl add jg mov mov js sbb pop js lods test and sub and mov movl sarl xor cwtl push cmpsb cmp in leave mov xor cmp xlat test mov in lcall data16 xchg jb fwait cmp movsb notb xchg (bad) int3 push jle outsb pop and lcall jb (bad) xor push or dec add mov test cwtl ss rclb lock daa mov test dec ror jl and (bad) sub adc sub icebp popf pop outsl push scas sti push shll push fcoms cmp pushf sub mov or in cmc sti xchg imul (bad) (bad) xor add fwait push dec push dec lret jge sahf adc cmp jbe andnps movsl cli in fbstp jbe dec pop mov mov sbb in adc rcrb rclb pushf pop rorb fistp (bad) nop adc stos call aam in loopne repnz mov cs push cmp lock int lcall sub sub sbb cltd je dec dec mov xor ret push es shr adc into shl into cmp xor cmp xchg bnd call cmpsl nop dec addl out jp cltd adc scas loop sub mov adc and repnz and xchg cmp enter aam mov push jecxz notl adc ffreep xor sub jnp aas nop dec adc mov add xchg dec xor dec out inc fistpl sbb sub jecxz adc and mov mov shl sahf cmp and shrb pop mov arpl mov subb xlat jo fnstcw lods je inc stc lcall cmp and test push dec push aas in sbb jecxz or pop in js and mov int inc xor jnp lock pop dec sbb int dec and cmp (bad) jle or sbb mov jno ss pop gs pushf push gs push and mov lahf pop xor push insl test dec lret sbb movsb xor ss mov and mov je cltd popa (bad) ret push and lds into and stc mov xchg js sub int (bad) icebp mov xchg push push bswap xor xchg fstpl pop dec mov jle sbb sbb loopne (bad) in sbb push test incb ljmp daa std pop cmc inc rcr cmpb arpl fimull sbb loope inc mov inc adc xchg and push xchg adc xlat and rorb notl aam pop repz mov aad out rorb sub dec in or jne or das dec loope (bad) xchg dec mov inc dec movsb call (bad) mov stos int mov mov cmc fucom ds hlt and into push insb pop call lds movsl aad push ja (bad) lret push (bad) hlt bound adc sub xchg mov lods xchg sub daa mov pop int3 sahf into (bad) fsts or pop movsl hlt add fmul sub cmp pop and bound shll int pop sbb int push mov aam call and xchg dec mov pop lret inc je addr16 fwait mov int outsb imul inc lds and cwtl repnz hlt dec (bad) or jo and fs push push xchg pop pop mov mov insl fimul push sub push iret xchg add sub mov fistpl fdiv fcomps out popf scas out (bad) movsl lret and push dec pop idivl mov mov movsl das stos xor add stos (bad) in mov ja jae ja je repz sbb mov xchg mov inc add pop scas adc and push (bad) inc cmpsl sub movsl (bad) (bad) das push cltd (bad) lds xor dec rcrb lea (bad) aas dec sub mov push lea push and jmp sub push sub mov or xchg xchg cmp mov mov aas ret test int mov dec stc sub nop fcom add (bad) fs aaa ds arpl fs iret mov sub push mov or cmp adc and cmp loope inc sahf push loope (bad) xor dec mov mov mov daa xlat jle pop mov nop or pop out movb pop push orl dec and mov fstpl dec pop cmc mov mov in mov xor add incb in mov out cmp mov sub ds int3 inc push lret test aad (bad) cmc mov pop push cmp fldt lock loop roll push sti pushf test and mov inc shlb stc xchg (bad) das fldl2t test jp fistp dec pop scas or loopne fbld pop mov rorb sbb (bad) pop mov cwtl movups xchg push add adc popa addr16 test mov ds mov or jbe adc call (bad) out es adc push cld mov pop jl loope mov movsl jbe sbb lcall pusha or cld xor push lcall loop sbb mov ret pop ret push scas sub lret jae fnstsw xor ror sar add xor sarl (bad) aad cltd mov in pusha add push pusha add les ss fisubl adc daa inc sbb scas daa lods ljmp push dec xchg out sbb xchg icebp mov dec adc ja push mov push in cmp cmp xor pushf (bad) mov fadd mov sahf dec push adc inc jle adc inc mov pusha cmp (bad) push aas sub subb adc je outsb lahf movsb das jo add cwtl xchg dec sbb and scas jo inc push dec xor mov jno push addr16 lock rcll enter movsb ljmp jmp idivl xchg test cmp push and dec jb sti adc outsl pop and shl sub jbe (bad) (bad) dec inc cmp gs sbb sbb xchg lods or mov jp divb jne frstor xchg ret sbb aaa icebp scas fdivrs dec adc (bad) push fsubp jl je testl cmp xchg (bad) scas (bad) int3 dec mov loop dec or pushf sub dec xchg mov pop fnop test jo sbbl fwait shrl xor leave popf pop fisttpll in popf inc dec jne in pop jmp pop pushf fiaddl dec xor pusha dec jg sub aad add xor rcrl fcomps fisub mov lret mov jnp enter pop mov inc out xchg addr16 mov ja push fcoml sbb mov sub cmp or pop push sub mov daa stc sub pop sbb and lock fs xlat loope mov insb outsb cmpsb cmp fadds iret sbb pop add cltd inc (bad) jbe jge mov in dec push fsubrs xchg adc xchg mov fldenv enter push sub pop int3 (bad) lahf inc fs fildl push sub jns cmc jno fcoml fisttpll cltd adc das add jge in insb pop ret mov stos int3 inc xchg and sbb or adc test xor pushf dec and pushf movsb in leave mov mov mov movsb pop jg sbb or mov loopne add lods mov out sub adc (bad) repnz adc int3 jnp out pop adc jmp mov dec push xor scas sub fadds pop pop inc add xchg je pop out fwait cld pop pop cwtl shrd lret js pop jmp insb jg repz cmp adc push icebp iret adc adc je cwtl adc cmp mov daa or and push mov test mov int3 pop mov lcall push sbb mov cmp inc test cmp mov out mov (bad) pushf orb movl mov pop or ret mov sbb jns fisubr inc lcall cld lock cltd push sub sahf sbb dec cltd mov das or inc mov pop push test out xchg jne cwtl (bad) dec ret mov xlat jns pop mov pop mov mov lds dec xchg imul inc lret lahf aaa aaa mov in lcall aas (bad) leave pop fcoms push sbb push inc jns les mov cmpsl inc inc jns out in rolb xchg mov sti ds xchg push iret mov aaa ljmp in mov mov popf sbb fbld jnp aad xchg insb nop enter sub xlat cmp push cltd pop movsb xchg jge fmuls arpl sub inc lret mov xor push (bad) jl mov mov push inc jbe (bad) (bad) sub xor cmp aaa int3 adc sub push sub dec lds or pop clc std mul jmp inc xor inc jae mov rclb adc pop xor jns insl aad bound cmp out nop jg cmpsb add fcompl leave cmpsb sahf mov cmp dec mov shrb loopne xor xchg jg cwtl lea xchg jnp loop (bad) adc clc idiv in decb int mov movl jmp sbb insl mov paddsb repz adcl push xlat loop cld inc inc rorb mov out sbb test gs (bad) orl mov cli scas loopne sub and xor stos mov daa mov das sub fcoms jmp dec (bad) mov jmp pmaddwd jo std inc sub push dec pop mov testb movsb (bad) adc adc test (bad) shl jmp inc xlat mov je js ss ljmp mov sbb lret ret dec sbb inc test dec pusha std repz pop push aaa inc fcoms xchg jge jl sub in lea mov (bad) (bad) fmul push and mov push in sub xorl movsl cmc xchg mov inc in scas inc lahf or cld insb in cmpsl mov imul ret jp sub jnp sub cmc sbbl push dec or les in xchg fimul dec ss clc iret sub sahf enter mov psubb std call ret (bad) std pop jmp mov mov in adc jge lods pushf mov jp out xor (bad) and mov ljmp or outsl mov or insb pop xchg mov out pushf popa cs daa mov stos popf lods xchg stc lcall jae data16 cli dec mov mov mov cmp inc dec adc repz ficoml dec jb les push test (bad) push lcall inc stos nop inc lret int3 out sub ds or cld jmp xchg dec mov xchg inc or adc mov out pushf jno cs inc loopne (bad) psubd jnp decl iret sbb or cmpsb (bad) neg dec cmpsb aam add lock jecxz add sub push mov loop out pop mov lcall xchg cmp ljmp xchg stos push addr16 ret sahf (bad) repnz jne nop mov pop test add sbb mov stc lods (bad) xor inc sub jno xlat push cmpsl iret push push leave xor fldl sbb jb inc roll rorl loopne lods xor jne mov (bad) push test dec mov ret lret mov pop insb movsb int push stos (bad) or adc iret stos mov push loop push stc aam shll call dec ret scas lahf pop pop inc xlat aad insl aas fbld xchg shrl add adc (bad) sahf cmp xchg call roll push fmuls lock int3 (bad) cld jmp rorl test outsl bound mov test pop sub and mov mov sub xor xor fwait mov mov pusha rcll sub cltd xchg dec pop mov (bad) pop adc mov fcom lds out in and fsubl inc out jle xchg cmp movsb mov mov push popa xchg cmp std sub rol repz fs flds adc mov pop cmp mov sub addr16 or stos (bad) push push leave popa cld sub inc (bad) int mov fdivrs (bad) mov inc sbbl cmc nop jne pusha in jp adc pop sbb inc mov jno dec enter xchg push test (bad) out mov inc cli test dec popa push jl jo xchg data16 pop xchg mov mov popa in add decb sbb (bad) mov stc inc sarl push test in xchg outsl xor leave idivl scas push rcrl aad cmp (bad) mov sbb mov cld outsb jbe lods inc scas jno and jb pop mov fistl lock (bad) ret loop cli mov mov icebp and sti test dec or or xor ds test enter (bad) loope sbb dec fistpl fstl adc sub hlt cmp sbb pop scas mov es mov sub pusha sub stc lock popa pop sbb push (bad) xchg mov push jnp popf sbb ja insb data16 adc add pop jo insl pop add inc nop pop xchg or notl test ret outsb sub outsb call pop out cmp sahf rcrb jne sbb xorl movsl imul inc mov loope fs outsb arpl inc xchg and xor enter sbb mov repz mov mov push popf imul or scas inc xor test imul int3 sbb jmp inc jne xchg dec (bad) int3 data16 mov rclb jmp lcall xor insl add push jmp ror xor sub ror and cmpsl flds bound cmpsl ret je scas cmpsb push mov jle sub lock in xlat sbb imulb xchg add mov jns bound pop lcall nop jnp int3 push xchg sbb xor sbb (bad) or addr16 gs dec or or std movsb pop add fs arpl aas test cmp mov repnz push ficompl push sbb scas add jb xchg adc mov std xor xchg std jmp mov in dec cld mov popf scas sub jae lock and stos mov cmp mov out mov scas inc sbb add rol mov lea dec es cmp xor clc push jecxz in dec and mov idivb jge jl das and sub adc add mov mov insb outsl icebp mov pusha adcb lret es gs or insl add mov stos mov clc cmp xchg sub mov stc jmp mov sbb mov push cltd sbb jb dec xor mov fisttpl hlt adc outsb test pop and push outsl mov fistpl arpl or mov ror or icebp xor in xlat fild int sub jg jl pop rclb pusha testl addl outsl xor cmp mov pop lods les mov test xchg xchg and (bad) pop ret or lahf xor xchg iret push xchg inc popa fistl popl cs cmpsl cmp jae dec loop adc cmpl mov mov lods test sbb add push hlt mov je mov test leave sbb push mov roll add inc dec aad jo add cmp pop xor push pushf ficom pusha les ja sub imul std sbbl sbb aaa stc add aam je fdivp aaa insb xor pop outsb xor adc imul push test popf mov push movsl jg stos test int add aaa jbe add ljmp fcmovb fs lcall mov jbe pushf test scas mov push cltd dec and xchg mov cmpsl outsb inc movsl or or mov in jmp xchg test or or jge leave jo clc cmp aad mov shrb test jae cwtl jo cmp out arpl rcrl push jg cmp push jo,pn pop push xor shrb or leave and xor (bad) mov push es mov lahf and mov cmp xor dec lea mov push pop out or mov popa and repz pop into jno ljmp movsb jbe or jbe dec add mov scas fisubrl cltd cwtl insl daa dec mov (bad) gs arpl test cmc inc or repz sub jns lods dec imul jg pop dec adc lcall dec int test and in adc int3 cli and jmp (bad) and data16 push jno push jmp pop sbb or out xor xor in dec and or sub pop push sbb dec push pushf jle jns fcompl (bad) sahf negb xor (bad) jecxz pushf fs inc xchg fsubr jmp pop mov xchg in aaa cwtl imul div cli dec loopne inc lods mov sti jb mov sbb scas push outsb sub lcall and sub or lret and sbb outsl pushl rclb pop dec testb or scas test push in add mov xor jecxz push fs add cli test add inc test mov cmp in sub leave test sbb mov pop inc lret and std and es pop test repnz sbbl mov pop clc lods dec mov mov mov lods or pop cmp inc pop dec and mov cld arpl in sbb pushf push jne pop sub cwtl ret jno push cltd cmpsb ret mov xor insl repz cwtl xor fcmove jne mov pop mov inc loop popa roll xchg inc pushf ret pusha push into dec pop (bad) pop ror cwtl ss scas stc jae and cltd pop pop push pop ret cmp mov xchg xchg imul pop and cld ds jb dec iret jnp out mov add fbld xchg xchg jle sti sub repnz outsl sbb push (bad) sub (bad) pop inc adc pop dec imul push xchg (bad) mov and mov and divl mov cmpsb lret mov push (bad) aad int3 mov out jb mov mov jmp cmp test mov mov cli rcl pusha pop test aam adc lock jb inc pop dec jne pop add pusha out add push in daa rclb (bad) jp mov pop or ja cmp (bad) ret push mov push lock fwait or pusha jns ret dec push or insl mov adc cmpb das sub test icebp int out (bad) push jg inc xchg jno xchg pop js cmp and (bad) mov test jle xchg scas test stos aas inc adc fisttp cmpsl dec idivb cs testl (bad) cmp (bad) xor adc and pushf repz inc or mov lahf fmuls sub jp dec xchg xchg push mov mov sub shr mov imul push xchg xchg dec fidiv dec jecxz mov ds dec sbb popa xor dec sub out in scas popa jae out adc pause jno mov pushf (bad) adc jnp adc xlat xchg sti inc cmc movsl push test rorl ds cltd pop jp dec mov leave mov fcmovbe icebp or xor pop test mov lods xor lods inc or fwait (bad) loope test imul jg fbld lcall mov js inc xchg js mov adc inc cmp sbb ficomp pop ret lcall fisub add sbb testb mov (bad) pop push outsl sti mov outsb icebp cmp inc bound fwait ds mov lods jp cs mov roll cld in pop lods mov fstpt popf (bad) call push cs cltd sbb dec and popa cmp cli ljmp pop cmc pop sub push loope je jae pop fldenv insb jbe fidivl mov xorb mov jb out addl (bad) xchg popf or pop rcr xor xchg data16 cmp xchg add jns movsl into jae out sub std mov push aas (bad) stos and loopne in nop clc pushl gs cmpsb mov push and out sahf sbb mov std test (bad) sub js addr16 (bad) leave cmpb push stos xchg sbb pop mov mov sbb jge cwtl fs pop aad fs data16 popf jge and and sub xchg repnz popf cs or in nop xor push (bad) jge ds mull mov shlb xlat sahf in lds fcmovnu xchg push fist mov sub mov and add lds inc sbb iret test jae cltd loopne push fidiv cmpsl sbb lret ljmp mov inc mov mov xchg jge mov mov xor repnz mov shl pop les mov (bad) clc enter jecxz shl pop adc call les mov mov and jg inc call imul push mov pop push dec rcll mov sbb cmpl aaa out xor movd dec bound xchg xchg pop jbe add jp add stos adc and enter shrb mov sbb xchg inc inc jnp ljmp push cmp mov mov dec lods xchg sub mov xchg imull or popf mov cmc sarb push xor inc std (bad) or mov push idiv jle and or mov imul push push and fcomp add cmpsl adc mov andb cmp dec pop pop stc cmpsl xlat push (bad) mov lock call repz mov (bad) mov sub cmp (bad) out ljmpw jmp add and push pop xchg pushf push aam inc jne dec (bad) outsl pop out lock push add fcmovnu in inc adc lret enter jb repnz pop fisttpl jns mov pop stos das stc outsl cld mov adc pushf scas cmp xchg or sahf sub push mov xor inc aam hlt jbe lods add mov es sbb fs sbb dec flds and int3 les push xchg adc cmc test jmp xlat (bad) clc test push (bad) lods add ret into notb inc add xor js lcall add movsl cmpsl dec ljmp or or xor mov out fdivs mov xchg leave out sahf pop loope pushf iret inc in cmp xchg shrb mov and push repnz popa dec sbb mov xchg andl and cs outsl mov mov jnp cmc push sbb mov in movsb jne adc xchg push push xchg shr cmpsb xor je sub dec gs jecxz sub fisubrl or push int3 fldenv cmp loop cmp into mov vpmacsdd test sahf and xchg or lock mov aaa outsl sbb cltd add add iret xor adc lods out pop push mov fildll stc mov add jnp stos mov push jnp mov popa js jmp mov push enter (bad) mov xor inc shlb test lret dec dec dec mov into mov mov push je movsl enter xor inc and insl out push jb sbb cld and movsl iret sub pop pop jno test clc push mov mov rcrb mov repnz inc (bad) sbb push and das jecxz hlt sub add sbb lret inc les lahf pop lret in adc cmp addr16 pop ret insb and aaa fstps imul push adc add pop test jno push pushf sub jns cmc xlat ret push dec (bad) cmc jb pop in dec xor xor mov in addr16 sbb inc mov and out sar aad dec mov rcr push fstpt push push iret std push out xor and jecxz inc ficompl lahf xchg jns pop sub cmp pop sbb (bad) mov mov or cmp mov adc mov adc shrl xchg sbb jo pop in mov jmp imul dec fmulp (bad) ja sbb ret lcall mov repnz mov leave jo lods xor mov sub (bad) ss divb in movsl add mov mov ror scas cmpsb dec clc fstpt xchg and loope xchg mov xor mov loopne js xchg or adc loop pop push roll adc xchg adc jecxz mov push xchg cwtl imul xlat add inc pop inc fisubr sbb cmp ret cmp mov add pop int3 adc sub inc repz adc jmp (bad) adc pop inc add mov xrelease in insb daa mov add dec sub test movsl stos aad lock dec daa inc into sub pop push jb xchg mov mov lret sub mov jg repz fist (bad) das insb add push add jae jecxz jae jmp cmp frstor ret mov xchg test sub ret push negl add jecxz or mov add and pop cs imulb and or lret cmpsb leave xor or lahf inc mov dec iret cmpsl add cmp movsl aam lock pushf xchg pop pop xchg push scas das sbb stc nop cmpsl jmp cwtl pop aam ja fcmovb jl or cmp and pop lahf mov pop sub cmp arpl (bad) jno sbb sbb xor jnp mov jmp rcrb mov mov mov sub popf sbb pop mov roll xlat sub sahf mov rolb test (bad) in clc sbb lret mov and popf aaa xchg bswap outsb ficom and pop mov imul fsubp push (bad) in in push xorb jbe adc rol sub push jns cmp xor sbb cmp (bad) dec jbe sub push (bad) and dec fucomp sbb fisubrl jno push jl cmc addr16 mov cwtl imul adc mov xchg imul repz or in pop push fldt pop aas ror test int3 insl out loop mov inc xor (bad) and pop mov cmpsl mov enter js das jno add adc ret popf fwait push sub sbb dec or repz sub aaa jbe bsr aad mov mov jbe fs imul inc lock dec pop out push jl pop jl fwait xor (bad) jl cld fwait push lds int cs push adc inc dec in jo xor and pusha mov fstl jo dec cmp stos test mov icebp inc dec stos push add xorl sbb fidivr in in xor mov fwait pop adc push (bad) mov or jnp lods test ret cld psllw lds push mov xor rcl fnstcw leave adc data16 jmp cmpsb and ret or push test jbe xchg mov in mov js mov sub xchg sbb cmp mov and adc les in fwait lcall adc xchg das enter loopne cli sub mov je insl sbb push sub ja ljmp push fnstcw cmp cwtl add mov std lahf (bad) imulb push cmpsl js fstpt jne fistl mov xchg pop add scas aas ret adcl mov js ds rcl imul data16 mov fldenv (bad) loope inc push out cmpsl inc or or movsl mov jecxz push test push test sub pop xchg xchg sbb pop ja ds rcrl xchg inc add xor or repz add fs insb push into dec mov xchg mov push aaa pop adc pop mov jae push or icebp mov (bad) jno mov bound mov rclb inc (bad) mov pop rcr xchg cwtl inc dec outsb cmp cltd (bad) mov mov (bad) arpl mov nop or jnp mov dec pop add lret mov adc enter xchg jp mov ficoml pop insl or inc inc or rcll repz aaa xor pop (bad) lds adc add leave lds jnp sbb jecxz icebp in pop (bad) sbb add dec out pop pop adc add lret jl dec clc rcl roll sbb sbb mov sub push shrb inc lds rclb and lea popf xchg jne lds (bad) mov xor mov push inc sbb shlb or cmp fldl je aam fdivl xor fmuls pop mov sub adc adc pop ds pop pop xchg cmpsb jl sbbb sub xor xorl cmp adc movsb inc outsl icebp rcrl out int loop cli loopne mov sti sub and add stos mov or aad daa outsb out cmc pop jecxz aas xchg in js pop loopne sbb je leave xchg lds pop mull and inc imul hlt (bad) mov cmc mov xlat shrl cmc xor pop add pop pop push adc mov imul es xchg popf jmp add push adc lods mov or cmpsb cmpsb xchg bt (bad) adc push xchg jmp je lahf adc dec sub movsl gs jbe in sub daa xchg movsb add (bad) jb pop pop push fsubrl mov outsl imul sbb mov mov aad in call addr16 xor dec lret dec sub or and sbb inc push lahf inc mov jne dec xchg adc adc pop popf fwait adc lock sbb sarb fimull push dec lock xor es sbb jns loop cmp cmp jbe fstpl stos mov loop mov call jns,pn jo inc mov inc icebp jne ret mov insb daa mov sbb testb mov fst out out dec mov out lock in (bad) sbbl fs mov xchg dec addr16 and mov cmp ror mov jmp ret enter push add dec mov xor sbb cmp push iret stc push jp shrl fwait in lods mov fimul imul je dec imul test pushf jbe std jo je push sbb negb dec adc lret test loop mov movsl mov dec mov dec xor jmp jle fs rep jbe pop leave aaa (bad) lea lods outsb les cmpsl stos mov in inc icebp inc je lods mov xchg out pop clc mov int3 jp jae into push sbb pop loope jmp fsubrs sub dec int3 inc jl xchg cmpsl push push test mov mov ret or xchg add fstps rcrl pop aaa mov mov sahf sti xchg sub or inc mov notb jne insb jo mov cld dec cmp xchg sbbl iret rcl mov nop push xor rcrl cmc sub insb jge add faddl enter pushf xor mov sbbl dec mov repz mov aam jg sub iret cmpsb fisttp sbb idivl mov mov xchg loope cmpsl aaa push inc xor add je les xchg mov push xchg je js jnp enter test xchg push mov inc movsb jl push (bad) lret std lea mov sub sbb add in sub fnop out inc sub push mov push xchg mov cmp sub ret adc ja (bad) nop mov int3 inc push push and mov mov (bad) mov test icebp cli jl fsubs std stos into adc adc xlat jns cpuid mov push in dec mov cmpsb imul jmp in in sbb sbb pop mov andb sarl jne (bad) mov insl push ret sbb mov xor jae pusha pop call mov ds sub movsl rorb repnz repnz (bad) out adc or xor jl cmp std push fucomip out scas xchg clc cmc inc push sub and add idivb lahf subl sub mov (bad) stos pusha mov lock out push fadd insb loopne xchg sbb inc pop in cltd js push nop mov (bad) pop lret jo loopne test lea (bad) pop popa leave and xlat imul jl mov add push (bad) test or xchg xchg jae bound shlb data16 ja cmp cmp sbb adc mov mov mov imul or and xor dec sub outsl mov inc daa enter push (bad) push sahf icebp mov insl xchg in out xchg pushf in js addl stos inc push out mov cmpsb lcall or aad mov lds test adc (bad) pop stc shll (bad) mov clc pop adc add icebp xchg movb out inc mov xlat mov mov dec xchg xor pop lods jno out fbld test aas int3 pop ds int sub mov jge jno repnz dec mov jns push outsb ret or add sbb mov lds loop push mov pop pop jno fs push inc jo pop (bad) imul dec mov ss (bad) in gs outsb xchg imul (bad) sbb xchg xor daa stos or dec add dec out and pushf addr16 mov lea out mov rolb and adc xlat adc or aam push std xor mov push pop lds push mov mov adc insl pop lods pop mov cmpsl push outsl pop inc (bad) pop lods ret lahf ja adc mov xchg je add push bound xor jo pop cmc lea addr16 jecxz ja mov leave adc das aas pop jnp pop jmp inc in pusha pusha push cmc pop insb and mov xchg loope outsb xchg mov add xor cmp (bad) add (bad) jge xor add jecxz js cmp pop mov loopne cmp cltd xchg cwtl mov out fadds hlt sbb xor cwtl into fdivrl adc hlt sbb mov lret add or outsb fwait adc mov orl adc cltd fwait push imul lods pop push xor xlat cmp pop mov int3 sahf mov sub test sti adc push bound call mov call les jo mov nop movsb pop bound hlt incl add sahf cmpsl xor dec idivl loop loop cmp in js xchg push or into repnz mov jnp and xchg mov mov es sbb jo lcall std xchg pop push sub leave movsl (bad) jb jae ret cmp stc mov mov jo adc js pushf repnz inc out mov add jae xor adc push rorb rcl push xor mov andl and stos mov aaa add rclb divl lods das add (bad) dec inc inc xchg inc roll jo mov inc leave sbb pop cmpsl inc frstor jnp fldl into insb lods fwait sti mov divb gs pop xor es (bad) mov stos dec mov cmpsb push jp jle pop xor cli les out jae inc xor sub adc addl test outsl pop mov cs push xor cwtl push jmp sub mov andb inc divl jmp (bad) dec das mov xchg daa out mov fimull push pop pop sbb scas stos sti adc ljmp cli movsb lock pop mov lock aad or stos adc sbb insb xchg lds inc aaa popa mov and ss adc mov cmp stc mov sub push lds cmpsl mov dec jecxz jl in or xchg sbb fcmovne pop cmp (bad) mov sub mov pop xchg mov inc repnz cmp popf pop mov out pushf sarb aas scas std scas or or xchg shll insb jp add outsl xchg cs pop mov addl clc cli movsl or stos pop or fnstcw ss cs (bad) sbb sub push pop mov lret xor cmp pop xchg fwait gs fwait jnp lret add ds xor mov mov jo cmp (bad) mov and mov push cmp insb es pushf add bnd lret xor jg add jo call (bad) ss out (bad) loopne push sub loop dec jbe lea mov lock loopne mov lock cmp sub int3 or (bad) in sbb pop stos add lods add adc push pop pop xor out mov push and lret in (bad) mov xor popf sub xchg test std test or imul test imul stos and (bad) xor push jns fdivrs or enter pusha jbe ficomp mov test mov push jno (bad) popf xchg dec loop icebp inc mov xor ret int3 sub add push ds and xor pushf rcrl les mov dec lods in push rorb jle cmp mov lods mov jmp cmpsb mov adc insl loop add pop push lock enter cli push insb jns lock push jb sub ss mov mov cmppd lods xlat fiadd scas mov sbb cmp sbb in insb xchg jno adc mov push shrb cmp mov jns pop xchg addr16 hlt push mov xchg and cmp jp mov neg xor popf mov std jne sub sub xor pop fptan cmpsb xchg ja cmp adc mov sub psrad cs repnz lods incl loop lret xlat xchg lcall jge push xchg int or push fwait jmp xchg cmp push lea ja in and or mov sbb popl (bad) notl mov stos add aas sub pushf daa adc inc incl or iret sbb sub pop sbb sahf fs std mov or iret sbb jae xor mov lods fs xor pop cli xor xchg fwait sbb sbb insl (bad) lock push (bad) call test lret std pop stos mov push hlt adc jae adc pop (bad) lcall mov cmp mov sub sub clc aaa or pop push ret push je pop cmc sbb aad dec dec xor mov in and subl pop adc mov jmp rcr mov cltd imul hlt mov lods mov cli (bad) rcl imul adc out jl pop and fs fistpll lret adc ret add add repnz faddl out sbb push pusha test inc add arpl (bad) je lods mov mov inc push int3 test xor outsl add imul mov jle lea fstl loopne mov sbb xchg mov jae and mov popa or in negl xchg sub xchg sub loop fbstp dec repz pop sbb data16 loope and jb dec xchg add xchg cld jp out (bad) dec mov cld jg mov out and xor out clc aaa inc pand adc push fwait inc (bad) leave cmp arpl pop mov ljmp push add add jae adc sbb xchg mov jo dec addb out or out ficoml pushf mov outsb or pop and dec imul jmp lea or dec dec xchg add pushf add lods lods das xchg fs (bad) testb lcall mov inc repnz push jecxz gs push pop pop jnp mov aaa fnsave xchg adc movhlps xchg cmovno pop lret insb push inc std outsb jnp jnp lret xchg shr pop ret mov in pop dec xchg clc push xchg sbb dec shrl shl (bad) mov xor cmp cmp or jle cmp mov jge lods fistl fwait test repz xor fnstenv xchg mov aad out adc lcall or cltd adc inc add add and add sub or js out add sbb scas ja cld cmpsl fwait xchg shrl leave push pop or mov jns ret (bad) jge lret xchg cmc pop sub loope push popa popa mov mov dec dec dec mov xchg pop in add cmc xchg pop out fstpl inc jno jae sub inc xor sub fimull idiv sub mov nop sub sub test lods mov push push test ja fs daa lahf jmp (bad) xor sbb dec lcall cmpsl es push jnp cmp mov stos scas lret cmpsl test add sub xchg pop mov dec addr16 imul cmpl mov loope ret xchg icebp call xchg jnp xchg in daa sub loope enter bound jne sahf dec cmc sub and rcl enter sub adcl pop pop mov les mov cmp scas sbb mov inc icebp cmp in ljmp lret ljmp dec add sub cli pop push or nop mov pushf inc mov sahf loop gs ss push mov stos pop loop arpl fcmovnb push lret xchg ljmp into fwait cmc add into jg outsl mov mov insl inc daa pop insb and movl mov jl pop stos decl cmpsl and sub scas movsl sahf lret hlt (bad) add int3 aas ret insl add orl pop fsubr xchg lret push add pushl sub pop push push dec (bad) xor (bad) repz jg movsl adc aaa (bad) mov add adc insb aad enter stc cmpsb inc sub push dec cmpsb pop sub pop sar movsl and repnz clc inc xor pop sub push (bad) push inc sbb push pop mov mov xchg lret je push pop add jno (bad) clc jbe out mov bound rcrl pop inc push ss bound shll stos test js cmp cltd (bad) std rcl jnp ds add sub xlat or cli dec bound jb repz mov push cli sbb add (bad) ljmp mov xchg jbe jbe ret adc test xor (bad) fsubrs sbb adc add adc roll xor fdivp push jge cmp sti add push in lods mov (bad) sbb rep xor pop mov lea dec fmul fmul inc mov xchg cmp mov push mov ret lret lcall enter sbbl (bad) and aam movsl pop cmp stos lcall jg mov dec mov xchg rcrl arpl push and mov pop sub pop sub xchg xor push adc (bad) out dec xlat sahf jge pop mov out imulb mov xor add nop ret xchg mov fisttp sbb leave pop test xchg mov sbb sub add mov lods mov (bad) mov stc jne es popa or push ret sti lahf lea or in push les aam inc lret xchg sub or jae movsb sahf xchg inc mov pop lret adc xor in pop mov pop lret hlt jo ds ret (bad) out push inc mov popa in add mov add imul jge in mov (bad) shl push fisubr in sbb add icebp jg (bad) js or ror add mov mov mov lods ljmp cmp adc or xor loop xchg aas outsb push push loop stos nop sbb jecxz js push lds inc dec mov scas xor xor lcall jnp repnz push jge adc push mov stc test xor push aas sarb add mov outsb pop or adc and mov inc jl in iret fs ret adc fmuls mov ret mov (bad) cltd add (bad) ja (bad) divb xor jl in mov add andl out pop icebp xor mov dec fist add int3 inc (bad) sarl push sarb add scas jle (bad) repnz xor mov sti pop sbbl pop addr16 shlb adc sub mov mov test movsl mov push dec pop int and das sbb jl push xor popf fcoml xchg mov adc or lret sbb (bad) push xor aam orl out std lcall out lods dec enter lods and outsb ret sub cmpl hlt adc sub dec inc add dec (bad) xor inc adc in insb fs and outsl or sub mov add enter and or lret pop stos push in cmp testl adc mov daa sub repnz inc (bad) arpl (bad) popa mov jmp jg xchg mov lret (bad) out mov (bad) ja or sbbl dec sub loope call lock aaa dec xor fcmovu mov insb cmp dec subb push or dec dec sbb and mov adc aam fs or sbb push and jmp sti lret fld out inc std inc and or adc pop mov repz mov jbe pop insb (bad) sbb adc int3 ret repz fldcw mov mov mov pop sti pop xor mov jg call push sbb push add jae and test loope in bound dec and hlt pop push jmp cwtl sub adc ficoml out push and pop or (bad) push shll shlb pop sub stos add insl dec push rcrb (bad) in fbld mov ja cmc lahf sub rorb jbe mov push and daa das jl push lds xchg dec mov stos out fistp jbe lods sub or ret pop into adc stos sub icebp xor xchg or sub daa jnp roll or clc jp xor mov and dec or adc mov pusha pop mov jbe jle test add lcall dec mov xchg (bad) fistl out xor dec sahf xlat and adc addl insl pop popf pop je lock in std aas outsb lock (bad) mov dec xchg enter adc xchg rclb xchg sbb ret loopne push hlt dec push (bad) addr16 lods (bad) cmp xchg adc jge xchg push addr16 or jg mov jp adc xor es jb aam mov and in (bad) arpl sub dec mov out sbb jmp and les fist xchg mov adc mov mov cmc pop inc pop xchg inc stos (bad) ja push cli dec test out loop lret loope pusha jle pop outsl xchg call add test jbe xchg push push pop inc gs scas mov mov leave mov add or push sub and scas rolb lds (bad) cvttps2pi loop jns psubb imul and push insb lds xchg pop sti mov fnstsw call ds fdiv aas outsl adc pop pop fdiv sbb or ss dec xor add add xor daa (bad) adc stos dec das jecxz jae jns test cli jnp add mov dec mov xor (bad) out int mov mov cmp xor das aad dec push aas loopne cmp mov sti and outsb mov lods (bad) jbe lcall pop mov jne icebp pop or pop pop out sbb lds adc mov pop insl and adc cmp icebp dec and fiadd or fdiv stc or aad adc adc mov cmp test and sbb push fdivs push sti cmp movsb adc pop in movsb dec pop xchg fld1 xor fmull repnz adc pop jns sbb lods les jnp xor cmp mov inc loop xchg loopne outsl push addr16 shlb enter push adc pop test ss imul xor (bad) outsb mov loope adc jg data16 je dec mov mov std sbb jnp jne popa jae cs mov cs and icebp mov inc cltd imul cli cld sub mov lcall es sub lret dec cmp push jle cmp cmc repnz sub insl jno mov cmp xchg mov aaa cmp or cmp cwtl (bad) mov mov bound xchg sub pop mov stc test mov mov pop (bad) xor gs jb xor aaa cmp inc sbb mov repnz fwait (bad) sub dec pushf jecxz scas int fldenv pop adc push sbb shrl xor out ds in inc repnz (bad) inc not ss mov push push mov sti stos ret lock movsb mov int3 aam inc shl (bad) adc push xchg mov jge or pusha dec inc cld out mov dec cmp cmp pop enter and clc mov repz in pop jl or xchg fcmovnu aas lock cmp bound jne imul arpl and rcr adcl or ret leave cmp ljmp adc dec loopne popf addr16 push sub std add dec ds or add cmp mov add fisttpll movsb mov repz ljmp int3 pop cmpsl js push repnz push daa (bad) mov gs xchg (bad) lea std sar lahf xchg lahf dec jp sbb lahf in pusha loopne movsb jmp push fistpl out mov out adc mov mov mov xor in jae inc push mov stos insl jo mov adc (bad) mov mov cmp inc arpl insl mov (bad) mov ja inc dec and pop sbb inc mov jmp pop or scas loopne out pop inc xor arpl push mov outsb sub pop loope adcb xchg fisub cmc cmpsl xchg add mov je sub xchg mov ljmp mov les jp movsb (bad) nop shll jle test popf sbb push mov (bad) pop fsubrs test lret int3 sbb inc adc jns lock mov lret gs imul mov add pop cmpsb insl aad add shl lods addr16 nop xor cld mov repz fnstenv dec push pop lock and inc seta mov mov (bad) rcll adc inc fcomps jno inc outsb mov xor sti inc push clc dec hlt mov test out mov hlt rcll mov fucomi dec popf sbb mov mov inc ret outsb and mov dec push in fdivrl jp mov sub jp adc sbb jmp and mov push and aad add or int3 in lret in mov cld pop fdivs (bad) out icebp xchg or (bad) in pop mov push lods xchg outsl jb aaa dec scas dec add out lock push sbb or dec stos cmp mov stos iret call cwtl ja (bad) js scas jmp mov test pushf sub lea ret xor sahf unpckhps es or loopne cmp test dec xor jmp cmpsl test cmpsl push (bad) popf xchg (bad) arpl xchg inc push enter cmp fwait ljmp fwait (bad) fstl push dec (bad) mov adc iret std jl icebp add xchg add call fninit pop lds adc add mov movsb xor aam fisttpl stc xchg jae or test iret pop pop cmpsl pop orl add lahf inc or sbb pop fs loop repnz insb inc out sti mov je shrb push jns stos loope rolb int3 sti or push xchg inc fnstenv mov pop in xlat pop adc xor push push push jge out sbb dec dec jle clc push stc std adc into jno sahf xchg notl test lods sub xchg jg xor mov dec mov dec mov enter inc data16 mov je inc hlt jmp rol out aam lods mov stc jbe mov xlat test imul hlt in or pop jmp jb adc xlat cmpsl mov rorb push pop outsl pushf cmp pop jp fcmovu jo,pt sbb or int3 or fsubp out aaa push ficoml and push xchg es push stos scas movl stc roll into test and stos cli inc mov pop jge push imull loopne lcall shl jp and das sbb fistpll pushf inc dec push push negb ret jno cmpsb push add loopne fnop test mov push jne lret loop jge pop sahf mov cmp dec and add mov test imul pushf jb ret (bad) push xchg dec sbb int std in hlt xchg aaa and aam push push push fstpl ljmp nop xchg pushaw xchg sub dec test xor (bad) cmp jb imul aas sub bound dec (bad) or stos ret cmovns xchg pop jecxz or imul aad mov dec (bad) pop dec fnop sbb fiaddl (bad) jecxz jae mov mov mulb rcr xor dec xchg sbb rclb jmp pusha cmc fdivrs cmpsb call dec xor xchg jns jg sub mov stos dec xor call or (bad) loop hlt jae addr16 mov imul and mov cmp insl cmpsb js xchg imulb xchg insl or sub or icebp rcll add add push push mov movb (bad) mov dec shr push mov and clc cltd stc outsb das gs ljmp lahf push jl arpl fsubs lods adc sub pop hlt adc jg mov ss lret or mov shr js push adc cmp cmp or and sbb or mov sbbb sti lods call pop arpl cld and sub rclb fimul cmp pop nop in out lahf (bad) xchg addb xchg rcll dec das inc lret ret imul ret xchg and adc mov jno fwait int push popa cs bound xchg cltd mov bound cld (bad) aas fcmovu mov jo sub pop jl add cmp and (bad) add popf dec lods push cmc xchg test hlt clc (bad) jle rcll push mov adc mov adc clc add (bad) in mov std int3 inc xor inc cltd pop pop in jae xor inc popaw or dec mov push add dec or jle popf xchg cmp cli jl mov lods scas xor inc xchg mov (bad) jo xchg stos mov xchg lock cltd sub xchg shrb bound and xchg lahf cmpl fbstp mov fdivl sbb outsb dec out cmpsb mov fisttpl jl inc ss pop xchg fcomip mov pushf ljmp xchg inc cld cmp movl jl add push sub jo mov pusha inc xchg mov pop nop outsb int popa in loopne mov sbb cld xchg cmpb ret jbe xchg pop cmpsl and sub cmpsb xor mov xchg in pop insb xlat cmp mov cltd dec rorl out adc dec cli nop mov adc lock repz mov sbb push sub adc nop ror sbb xchg (bad) lock int3 cltd iret mov inc dec aad notb mov jnp or pop add or cmp push mov add (bad) lret cmpsl and pop pop cwtl test insb mov mov mov mov and mov daa test dec dec add sub add lcall or cmp pop sub mov cltd mov push in sbb cwtl bnd es mov test fldcw push pop ret sub in pop mov push mov sbb pushf scas stos pop xor repz jle gs mov js jbe jb mov sub cmp icebp cmpsb dec jo xlat or pop mul (bad) xlat pop movsl pushf cmc lds jbe std out cmp mov and aas mov in ss push dec add subb test (bad) lods sub jb lcall fidivr xlat out cmp add lods movaps jns in mov icebp ds cmc mov pop and xchg int fwait cs (bad) jle (bad) ljmp push or push dec pop iret outsl jmp nop leave fndisi(8087 nop or inc outsl or pop xchg sarl cmpsl iret xlat movsb rorb adc outsl jae roll sub push jle rol mov dec int cwtl out mov lcall call mull pushf pop mov repz out enter cmp push push pop and ljmp popa mov dec jnp hlt out push xchg push xor xchg rcrl dec inc loopne stc mov dec add mov push idivl adc fmuls pushf or pop orl (bad) fidiv pop scas mov addl test fstpt fcomps sbb int3 mov mov dec call stos pop popa inc out mov (bad) gs fwait enter inc push les aaa (bad) fisttp sahf (bad) jb lahf jnp cmpsb dec or roll cs aad stos mov rorl and mov adc sub mov sub pop jne jno xor push pop cld outsl sarl and pop sub daa sub xchg inc dec mov out fmull lds js ss fsubrs stc sbb mov cmpsb jmp iret fiaddl ss std lea (bad) dec mov dec nop sbb fmull dec xchg xlat or jg (bad) jbe and inc or dec adc js dec fdivrl lret mov jecxz and sub mov std mov jp (bad) xor arpl pop data16 imul sbb fsub adc inc test dec add fstps into push insb mov bound sbb jno jbe shld push lods sub mov xchg faddl cmp jle and mov insl loopne adc call add jmp (bad) ror inc push pop mov xchg es pusha and popa gs jmp pop call clc ljmp xchg pop mov outsb cs aam push jne jle in xchg mov pop inc and push jge mov movsb fsubrs jp loope movsb xor sahf lret push int in cmpsl sub xor mov (bad) std inc push jp or jbe xor push negl stos je imul cltd cmp push mov adc js out pop push ja jp dec xchg out xor gs orb or xchg sbb cld pusha ss cmp mov sub cmp sub xor imul add mov shlb mov adc adc (bad) std mov mov mov loope cmc or or vdivpd std stc jbe push lock or fdecstp mov cltd aaa jge shr cmp call pop cmp mov mov aaa sub dec jo sbb jae inc mov mov fs sti push mov ljmp cmp sub xchg (bad) in popa enter stos not xchg mov mov iret push mov mov ja sahf minps repnz sub mov push scas cmc (bad) xor repnz xchg addr16 cmp sub jo fiadd jmp mov testl repz push or jmp dec jno fsubrs mov pop pop pop sbb jne xlat jge inc ds fisttp stos mov pop mov push sahf cmp pop popf leave pop sub fstpl in into cmp lock dec loopne dec fwait sbb mov ret jo,pn mulb inc call jbe pushf fbstp xchg inc push inc lods xchg loopne sti cmp adc enter xor popa outsb sahf pop xchg dec (bad) inc xor repz daa (bad) mov xchg sbb mov cmpsl jg mov jns aam cwtl jg pop pop cmpb das mov cmpsl push (bad) in test gs jb mov xchg jnp add out out add push mov fucomp outsb push ljmp out push into mov fwait inc sbb jg add adc push jb jo jno in dec insl fs test inc mov rol cld dec (bad) lea int3 xor xor ss mov int (bad) cld in jnp loop lods push push fist imul test mov ret loopne sti jp mov movsl and mov lock jbe pop inc and pop dec test das cli es cltd dec movsb test dec aas cmc aaa or stos subl xor or lea jge out rolb out loopne jns dec outsl stos and adc mov dec out or cs fimul push hlt popa pop lods cmp enter push sbb les (bad) push push push jae xchg inc xchg loope jnp xor mov xchg int xor jno add loopne cmp mov push shrb outsb xchg in into (bad) cmc sub mov (bad) popl aam daa ss add ret nop jecxz xchg lods cmpsb push mov and punpckhbw into into (bad) jmp mov ds inc (bad) cmc enter dec jns mov cmpsl stc (bad) jbe cmpsb mov popf test sub adc sub mov xchg scas pop lcall mov xchg mov or callw (bad) repz out fldcw inc mov pop jmp or or xchg aaa jnp test pop xor adc push cmpsb mov fsubr adc stos inc lcall mov (bad) in push adc xchg scas es mov (bad) sub xchg hlt push mov pop (bad) hlt icebp sub mov push flds fwait xor pop xor or pop lret aad or jecxz stc or push (bad) lret enter jns xchg in or xlat sub rolb sbb jo mov or adc push push mov inc cmp repnz pushf mov mov push dec (bad) insb mov adc sti xchg jo add fmuls std jae in hlt loope insl stos scas fcmovbe or icebp ja push clc movsb fdivr inc adc aaa jns sub mov (bad) cmp or in addr16 mov les roll or jmp leave mov add les or or ljmp icebp push jns imul in xchg sbb pop inc dec push xor xchg mov mov mov sbb int adc inc pop cmp mov (bad) (bad) xchg add mov xchg fcmovbe lret dec fs sar in xor ja and jns popf xchg ja nop and in mov outsl lock mov inc or dec loop push pop inc mov lods mov sbb aad ret mov push pop imul pop push or lahf mov and fadds sub lock popf (bad) sbb aad scas cmp bound mov dec iret (bad) hlt jnp,pn mov jge,pn mov xchg add je xor dec imul call inc mov cmp mov cmp push xchg rolb xchg ret xchg lds movsl mov push popa bound test xchg jge in leave add scas lods add pop adc sbb lahf call (bad) out adc leave loope daa ret cmpsl and test (bad) pop sbb lret inc (bad) sarb loope stos xor ret rcrl call fsubrl int jg fist xor (bad) push mov push cmp xor cmp xchg mov stos loopne movsb adc inc insl push fcmovnu push xchg icebp orl and cmp sub outsb xor xchg imull xchg out rclb cltd in sub and xchg pop repz std xchg hlt jp cs jge cmp push inc mov and cld lods out cwtl cltd mov mov xchg inc push xor addr16 int3 mov push out and mov add lcall xchg jecxz aas imul mov out cs adc nop movsl or lret or cmpsb inc dec insl stos or jg movsl push and sbb sbb mov inc js loop das dec sub in scas fldz mov xchg icebp gs jl cli (bad) xor or fistpl dec xor cltd sbb ja insl pop stos or push pop in mov fadds inc cwtl dec cmpsl mov rclb lret clc xor jo pop mov outsb test jnp hlt sub std jmp sahf clc inc mov xor hlt nop andb cmp inc sti addl push mov mov sub testl mulb cli (bad) (bad) bound jecxz in mov dec jl jle and xchg lods pusha cmpsl mov ret aaa adc pop jnp jns mov fwait xchg out mov shrb sbb je push xchg test mov cmp (bad) xor into cwtl (bad) mov xchg cltd dec loop mov fs jae std mov imul jp dec cmp push sbb idivb (bad) xor adc cmp in insl jbe mov cmc lea dec jo or and pushf inc je faddp imul stc loopne push jl popf jne push repz push cmpsb int fnstenv dec fildll push imul mov js xchg in mov xchg test gs xchg ljmp xor in inc repnz aad fwait xchg shl xlat int mov js or xchg out push jnp roll cmp ds cmpsl lahf cs mov and and and adc into dec mov adc pop jge jmp aas xchg xor into jo mov inc iret dec push outsl mov cmp in mov iret mov popf push (bad) hlt xor cmp sahf idiv mull pop aas fs iret cs adc (bad) mov arpl pop mov pop stc xchg sub add scas cmp fbstp rcll jno push mov out cmpb cltd and aam lea movl gs push or sbb mul hlt mulb imul int3 dec test pusha mov pop ret add shlb pop mov (bad) mov and fildll jno add (bad) aas xchg add (bad) mov mov loop sbb jecxz jg sbb sbb mov inc (bad) out aad cmp mov inc leave mov dec mov je sbb cmpsl insb aaa mov ficompl push xor jecxz mov or and push pop pop xlat push in pop fsubr notl loop mov xchg dec daa cwtl sbb mov cmp pushf adc stos iret cli pop imul xchg mov sub imul insl inc jae pop movsb jmp and sbb inc and sub sbb rclb (bad) int in ret dec fwait push sbb cmp lock mov pop test adc or jo test cmp (bad) jg loop sub jnp notb pmaddwd jecxz push cmc push cmp jae xchg (bad) std clc mov xor fnstsw lods or add outsb sbb inc aaa jge adc loopne cli outsb adc (bad) push imul (bad) xchg push dec xchg fxch orl jp jp scas adc xor xchg inc mov and lea test cmp mov push cmpsl (bad) pop pop push push push xchg jae bound mov (bad) jge das leave jp sti mov lds out mov xchg (bad) into pop je xlat aas addr16 jp cmp test adc pop int3 ffreep jecxz xchg mov jmp mov xor sti lods push mov jne inc nop decb add movsl push inc pop sub sti dec test cli sahf aam mov sbb test xor addl and cli mov jecxz icebp loop bound cmp mov out xorl jge add add cmp sbb inc xchg jb insb lods cmpsl xor add push insl fcoml xor (bad) gs lds sbb ja (bad) pop jb pop fidiv (bad) push push bound xchg sbb mov fadds test dec inc outsl icebp jl mov sub mov sbb mov inc pop lds add test sti or xchg popa arpl icebp bound inc cmovle hlt add add xchg arpl push mov adc xor dec or scas enter or (bad) enter mov adc mov repnz mov setae pushf jp out rcll clc addr16 dec push pop lahf cld mov pushf scas cli inc int3 inc sbb sbb sub or jb shlb popf ljmp cmpsl das ljmp rcrb aad sbb sub or mov pop (bad) cmp lea pop lret aaa test fimull cmpsl dec mov stos pop push xlat leave xor xor movsl push pop inc and (bad) negb movsl iret xor out xor cmpsb adc push movsb lret outsb add xchg lock or incb push mov mov es mov push dec ret stc out scas cmpsb mov cmp and xor mov push lret jb dec int (bad) add sub mov jl jge mov adc addb pop (bad) cld xor add mov push dec jae xchg sbb dec dec push int3 push mov les cmc dec push xor cmp inc ja xchg mov es pusha pop inc (bad) mov imul mov scas xor jl cmp add imul sbb adc enter not scas inc sti das imul pop test xchg (bad) and test dec les arpl xchg icebp add icebp inc out mov mov cwtl out aaa dec (bad) xor cmp ja lret sti lods mov mov sbb ljmp pop call mov aam add test jge out (bad) std xor sbb mov jae fs jb in xchg nop shr xchg je sbb repnz mov in cmpsb sub repz loopne das sub (bad) ficompl fidivr (bad) outsl cmp scas and sbb orl nop sbb push push mov push xchg push pushf sub pop xchg ret xlat imul repz mov lock fistp push cmp xor mov (bad) xor stc (bad) pop mov testl (bad) fisttpll (bad) aam mov pop stos into jge leave sarl ss mov sub mov pop pop bnd mov add sub stos stc sahf jge xor ffreep mov jecxz inc lahf repz addr16 (bad) shl dec int3 in lds and lds push sbb sarb aam in rcrb jns jg mov outsb mov test hlt in int mov hlt cwtl (bad) movsb jno (bad) xor and jle and pop icebp pusha jl cmp sbb sub mov cmpsb xor (bad) and xor fadds push idivl scas cmp repz in add cltd aaa fwait xor ret inc sub lock int3 push sbb and lods and rorb (bad) xor mov lahf jno (bad) bound jno ljmp sub sub pop cltd xor inc scas scas clc mov (bad) mov rorb (bad) int pop mov aam cltd mov (bad) xchg pusha cmp pop cld jb fwait scas jle mov iret sub cmp xor nop icebp add xchg adc stos movsb cld and ds icebp inc xchg stos mov push mov and fsubrs popa lods xlat jnp xchg mov xor ss mov mov xor fmull mov mov cld aam (bad) lret adc jnp dec ss flds xchg sub xor (bad) cmp imul and jmp imul xchg out jl jp cmp lods pop loope insl mov imul xchg aad movsl cmpsl xchg lret mov test imul add int3 dec inc push fstps in ja dec mov dec push xor (bad) cmp mov aas jle hlt and clc nop mov mov (bad) lea stc xchg in push out arpl mov xchg adc and test fisubrl sti sub mov xlat pushf inc add int3 scas (bad) pop and enter sub insl xor sub fucom pop daa popf add incb testb cwtl mov bound xchg mov (bad) or xchg push cmpsb dec adcl in sub stc sbb into add push imul dec lock pop jl gs out inc mov decb das inc scas imull mov push mov sub xchg sub imul loopne fcomip mov outsb movsl repz lea (bad) mov lret (bad) adc inc mov stc imul mov inc push push jge lock dec sub mov rcr fsubrl fucomp movsl xchg mov lret push push inc lds and lock or push mov pop or fabs cs and cmpps ss aaa sub inc test cmpsl imul and sub inc mov pop or js and mov ja leave mov pusha pop xchg in lea stos test daa push pop push mov fmull std fs sub mov jmp addr16 mov roll inc ljmp leave icebp ds xor loope aam mov pop mov push cltd insl out ror push cmp inc cmpsb xor sbb pop (bad) call addr16 movsl jno sbb inc and dec out mov pop sbb add lds xor sahf dec pushf or cmp into add xlat aas or aad outsb mov mov cli pushf movl dec ljmp (bad) push pusha jns fldcw push inc add jle pop cmp js popa push push or (bad) xchg (bad) fcmovu mov mov nopl push iret add bound xchg in jge mov cmp std enter outsb jecxz fnstsw xchg mov xchg cwtl cmp sub push push and aaa cmp push add xor lret pop cmp xchg cs rcll cs xchg aam test popa ds inc lahf dec cs jnp cmpsl loope xor dec fwait insb stos adc mov fs xor lret mov xchg xor mov pop fldt jns imul les inc ss fistpll push pop lds cmp call (bad) jecxz add xor fcompl fidivr add pop data16 aas cltd popf int3 mov orb (bad) xor (bad) movsb jmp add outsb lret das push or sbb adc mov hlt pop mov jnp inc jnp jle xchg (bad) icebp or pop and jnp std mov or cmp (bad) in and adc shrl aaa cli mov push popa or dec lret ljmp sbb xchg mov push mulb jl cmp inc sbb xor dec movsb mov mov lds icebp mov sahf lret (bad) ret test jno and mov pop push cmc repnz iret cmpsb push jg dec inc adc in sub mov mov sbb add jae loop leave insb (bad) xor stos jno sbb mov sbb test mov xor test mov cwtl cmove mov sbb xchg pop in dec pop jmp popa es lds and outsb test sbb idivl pop in mov arpl xchg xorl mov xchg pop mov out dec rol cs pop xchg (bad) int sbb outsl pop push rol jnp sahf iret lods pop int3 xchg rcll pop leave dec inc jo dec jp dec sti xchg shll mov pop cmp adc pop (bad) fldcw clc aad adc data16 and pop sub dec sbb xchg imul in push adc dec xor (bad) mulb or fiaddl mov push push add jecxz xor lods and cmp sub lea sub cmpsb inc add push sub xchg lcall xchg pop xchg js cmp sub ljmp das mov sub lahf jmp pushl hlt lock mov cmp mov or ljmp xchg les push (bad) push jo int3 dec fwait mov adc mov (bad) mov arpl shrb in sbb pop cmp mov movsb pop (bad) jbe leave scas pop inc inc wbinvd jmp sub (bad) push push repnz ja sbb xchg dec or fmuls not cltd xchg mov jb fistpl xlat ror fdiv push repnz pop in cld sub ret mov aas jno xchg mov aad mov hlt jg push stc insb clc pushf mov jmp loopne mov mov dec ja sbb fsts cmp notl pushf mov push sub lahf cmpsb int jbe cli jle pop xchg dec xor fcomps fimull adc pop fldl xchg aas mov dec pop lcall pop mov adc cwtl xor jge add aaa shlb add xchg jno outsl ds mov in push outsl jbe pushf jne lods cld andl pop movsb add xor bound enter jl pop jecxz fs cmc fwait aam in sti iret jmp push or clc adc data16 pusha lcall (bad) cltd cmp push jg int3 mov sti push fcomip adc movsl sub andps pop push lret and cs and add stos aas out notl add (bad) loopne loope adc push sbb pop inc rcrb cmpsb add mov lds jg xchg push cwtl (bad) fmuls mov mov loop push imul sbb jp xor bound (bad) push pextrw sbb hlt pop add pop stc push arpl push in pop jge stos inc inc inc cmp add cltd pop aad out and popf mov repz jl add (bad) in dec ficom cmp sti das insb mov stc mov stc push jg xchg shrb (bad) in push cmpsb dec shl aam jb sahf jns in movl ret mov pusha cmp sub lods xor pop push cmp or js jl lcall mov pop lock xchg jns fs mulb cmp loope dec mov mov inc xchg mov dec inc aas add add loope pop outsl arpl cmp int scas imul fwait jle shrb int3 cs or insl negl xor sub mov js test dec (bad) ljmp daa mov jo stos int mov ret pop mov xlat xor ja mov loop jle sahf stc pop cmp arpl push (bad) mov pop (bad) ja and xlat cwtl push loopne fs xor or test (bad) int3 sbb mov mov movnti mov bound cmp jg xor ret loop cld psubw jl fxch es jmp push aam (bad) (bad) lock xchg mov xor mov ds and lret in sar ret xor mov ss mov jle out pop hlt cmc xchg sbb xor daa stos ds xchg inc or out stos dec repnz jo jmp lock sbb mov pushl inc shll cmc in inc fcoms jp (bad) insb jns pop push insb aad dec inc push or push jns sti push seto loope das (bad) hlt cmpl mov sbb sbb in jb sbb xchg rcrb push dec movsb add pushf mov mov movsl mov fsubl ljmp outsb (bad) adc out cwtl cltd and (bad) in pop xchg loopne daa es push enter cmp or (bad) jne jbe sti mov jnp icebp cmp cmp pop nop stos mov jbe jmp data16 movsb sbbb lret cmc sub pop mov stc neg adc dec lcall sub outsl (bad) sbb cmp int or repz sub sub inc lock mov cwtl lock clc sbb pusha mov clc (bad) addr16 roll js inc sbb out sbb inc adc cmp pcmpeqd add (bad) ljmp mov dec (bad) into rcll call xchg mov in fisubl andb and push (bad) sub out and mov inc inc push test cmp sub cltd cli (bad) je add popa call add push push movsb jle ds (bad) hlt outsl sub dec xor jle add mov push jnp pushf sbb dec push pop or aam inc sub in out dec out adc in xchg fmulp in fildll push ret out jb ret and test xor xchg dec xor cltd sbb notb or loop ret sbb add mov sahf lcall outsb aas nop push mov xchg mov test fdivl xor fcmovnbe cs cmc mov (bad) pop aaa mov fwait sub jo call popa cmp jg adc xor or jp mov jp sub outsl aaa lock xchg cmp xor lcall push xor add inc aam in mov insl gs loopne aam das les pushf dec jb subl mov call mov adc stc xchg aam loop,pt test cmp pushf cmpsl xchg lds out sbb lcall (bad) add push (bad) push push fistl cmp jb xor out mov xchg repz adc fstpl rcrb xor push jmp dec stc mov ss cmp sbb fisub pop mov xchg fdivrs cs pop dec aas push iret in movsl push inc dec ficoml lret sarb mov push mov popf jle cmpsl ret and (bad) out shl scas in sub xchg js (bad) jp push jae push mov in cwtl or mov pop jae addr16 pop jl in sbb int push scas fildl sub daa popa enter scas fcomps cwtl dec push pop jae in jo (bad) bound add aas cli sub push shrb add (bad) jecxz jge in or or jb or pushf mov lret sub adc icebp out sub in pop popa mov push inc dec xor (bad) sub das pusha movsl jnp les jbe sbb push stos sbb mov mov xor pop loope xchg cli lods cmpb cmp cwtl add xchg jmp out or gs js stc data16 outsl repz fcoml insl (bad) inc jb add mov loop das ljmp fwait (bad) outsl xchg (bad) cmp inc xchg push aam xlat xor push dec (bad) or pop jns ds push inc mov adc icebp xchg sbb pop adc mov int testb fs (bad) lods inc out mov lock push std jmp pop shll (bad) imul insb mov sbb imul stos pop iret and mov out imul scas mov sbb xor sbb cmp jmp addl xlat fbld outsl mov ret fwait jmp jb fs xor jecxz lea fisubl lock cmp sub or outsl (bad) mov pop xor add xchg and es cmp xor push fwait ret dec imul pop and clc xor xor gs push sub arpl xchg iret mov mov xlat push mov lods add fsubrp sub add adc psrad sbb push mov mov cmp xor sbb sahf sub fadds outsb cli mov loope mov push sbb popa jns lods das and add mov jg mov (bad) fldl2t xor rolb mov clc idivb lcall mov push pop jle icebp fnsave lods sbb dec adc push aam stc movsb outsb push stos dec xor mov and das xchg insb sbb pusha ss or jp fsub add fwait adc scas pop mov imul ss enter iret or lret (bad) test mov mov sbb cwtl stc jmp push sub popf jbe (bad) imulb mov out mov mov lds mov cmp sbb jp xor pop mov sbb xchg fwait and repnz xchg notb jmp cltd push cmp sarl js xor dec sub lods sahf hlt push imul iret mov cs xchg xor (bad) or inc cmp out pop or repnz dec inc xchg fwait mov and cld jle or jp arpl lods lret mov fistp cmp arpl push stc push xchg mov mov cltd mov adc pop loopne mov sarl dec rcr sbb jae adc jp xchg xchg mov (bad) test popa xchg out ret xchg shrb divl jne mov test fdivp dec in mov mov decb repz jecxz xchg imul push dec mov dec scas cmpsl dec jno jmpw mov and in (bad) mov sbb ss mov js sbb mov xor mov xor cmpsw leave scas xor adc mov fdivrp inc pop push mov mov scas cmp popa int adc rcrb fidivl or jp outsl ror ds jge dec scas rcl jb lcall sub popf xchg popa cmpsl enter cmp or movsl cwtl mov lock call daa and ret jb inc pop mov add mov sti outsb out out stos call pop dec cli mov loopne sbb fbstp jns mov push xor in pop std sarl cltd cltd int3 mov daa adc cmpsl jecxz push xor inc fs int3 imul es loope jmp inc shrl mov add ja daa pop les pop clc scas sbb sub sub out xchg popa add sti cltd out rcrl add (bad) xor les iret mov push xlat dec pop dec cwtl adc icebp shlb adc add xchg daa sarb sbb in ja int sbb cmpsl mov xchg pcmpgtb add pop mov mov jae mov pop inc and int xor push movsb jnp imul mov sarb movsl cld xchg xchg ffreep xor mov push lahf aad push ud1 mov shl movl jae rcrl sub mov shlb ja jg dec push xchg cmp add rolb pop add jo add push orb mov xchg roll add add pop mov inc aaa sub shrb xchg ret mov leave lret add popf mov jmp lahf iret into mov dec int and lret inc pop ret push cmp push sar pusha push or lahf inc pop mov fistp xchg push mov jo mov aad xchg or pop push psllw out gs fisttpll xchg or sarl lret ret shlb sub in inc (bad) mulb leave push mov pushf call in or cmpsb push pop cmp mov cmpsl or inc lock xchg dec xchg js imul les hlt cli jge sub in les lret cmp scas jbe test cmp fcomps and (bad) jb lods sbb in std gs lods popf xchg pop mov fisubr outsb loope adc movsl jnp dec lods cld fsub test repnz jp push adcl push fcom addr16 pusha and mov jnp or jo xlat incl ds adc sbb mov rcl aam sahf lret dec cmp je shlb lcall addr16 out xchg fsubrp push push push pushl cld or stos loopne scas adc cmpsl xchg xor jns aad stos mov inc cmp push fs fdivrl inc cltd xchg inc adc fdivrp (bad) mov incb inc and sahf bound add pop jbe adc mov add mov xchg mov jecxz dec sbb mov je and hlt mov inc pop (bad) mov jmp mov subl mov sub sbb (bad) sub in inc into frstor in push mov std fiadd dec mov or pop dec imul and mov jl lods or push fild outsl xor push std popf and scas push inc xchg test mov pop sub ret sbb arpl sub ret gs pop addr16 gs popa mov mov icebp xchg cmp cwtl rcl fild xchg (bad) js and stc (bad) cmp inc inc in dec rolb sbbl sbb mov loopne xor (bad) push je in mov hlt mov mov in addr16 sbb fldenv loopne lret add dec loopne fidivr mov leave mov scas jnp adc icebp jp jae lock lcall out push add lahf je push mov and dec adc and je enter cwtl inc xor sbb mov fwait ss (bad) mov (bad) (bad) sub xor pop mov test out fcomps jmp int3 cli sbb xchg fisttpl andl push mov jp adc ja add mov ret or lret fwait sar pop push pushf rclb pop (bad) (bad) imul pop push dec add sahf add loope (bad) lds push sub out jnp jmp adc add sub lds fs jmp lods mov mov fprem1 and adc jmp sub rcr popf insl mov fmuls es jb rorb dec stos xor mov lret sub insl leave push cmc xlat orb loopne,pt lret sub mov cmp jecxz rolb sub jp pop test scas (bad) mov std pop add mov sbbl aam (bad) ja push jno pop ret insl mov dec mulb rcr std cmp test add mov xor data16 push dec not mov push dec sub mov xchg pop sub sbb fwait insb mov testl xchg (bad) inc xor imul jg sarl in pop mov std mov sarb adc xor insb pop fisub inc cs enter mov sub and cli and sub xchg pushf in jg xor dec lret repz iret mov (bad) call psrld push data16 pop or imul insb xchg into ret jl test in xor cmpsl jle and pop icebp inc pop sub xchg in sub movsb loopne je ljmp mov push jmp jo (bad) movsb cwtl cmc add into jl pop ljmp jecxz jmp push (bad) xor xor cs inc inc add scas jno inc dec jb xchg add pop mov rorb xchg fimul mov push or ljmp sub xchg arpl xor hlt inc test test dec push jle add ret xlat bound bound xchg xchg inc dec fcmovnbe insb imul or inc in stos push loopne cs mov mov push jle adc sbb arpl pop icebp dec lods inc loop repnz add jp inc push jmp mov jae lahf rol inc cwtl adc and ds jno dec pusha jecxz lcall sbb mov push add jecxz pop idivb lret xlat jmp dec cmp xor adc jb xchg jb mov adc sub inc fcoms mov (bad) lcall push cmpsb push mov xchg jl popa fxam stos pop pop decl and arpl push nop scas mov idivl xchg iret sub aaa jl mov pop aad xor test call mov ljmp xchg test mov iret ja inc dec decb and adc cmp fadds inc clc push lret adc mov cli fstps aas sub sbb xchg mov adc stos xlat clc push jmp dec xor push stos das adc aam leave dec jle add in lret daa push push scas fwait jge xchg rolb jp rolb sarb xor push scas jo mov xchg add mov insb ficomp inc fs aam mov mov and sbb addr16 fldcw jb or pop or jnp mov imul mov clc sub dec add inc pusha jbe ds mov xor int3 gs and ret fnstcw dec dec pop and jge xchg (bad) push mov addr16 loope xchg lret adc push jne jle xchg pop fsubs mov dec es fcmovnbe shrl sub jno mov fadds add lea push ret adc adc loope dec adc jne mov mov sub fdivrl xor sbb dec fadd fnsave mov ljmp addr16 (bad) sub in push cmpsb push jle test sbb jno rcrb sbb inc dec bound push bound (bad) adc in lret ljmp jnp add sbb push mov enter inc jp mulb sahf lds pop and out sbb inc mov test (bad) pop cmpsl xchg (bad) movsb jne movsl cmp xor push insl outsl loopne psubsb or and dec adc dec scas lods sub cmpsb ret jns xor insl mov mov int dec sub cmpsl aaa and jns adc lcall dec push cmp or xchg xlat cmc (bad) (bad) or mov test jmp pop cmp scas (bad) mov mov xor stos movsb dec in outsb cmp mov stos sub out cmp mov sbb add pop add les pop fildll mov jge mov je inc push ljmp or pop gs pop daa xchg mov repnz int aas xor push mov xor push dec lock jecxz nop mov push arpl dec adc mov cmpsb lods jg inc test je jns jb add addr16 sti add dec arpl pushf stos (bad) divb or dec or jne pop in insb push (bad) sbb lods (bad) mov insb jmp mov cmc mov sbb fwait pop das (bad) aam int3 jmp (bad) sbb mov arpl aaa ss test lahf (bad) out imul cmp jmp mov divl push (bad) rol bound push or mov mov pop and xchg sarb es scas pop jecxz (bad) roll stos pop jnp push pop das (bad) cmp add sahf stos jns mov sahf fwait std loop call cmpsb xorl fstps push jecxz loopne pop inc cmp dec push outsl pushf mov mov cwtl jae movsl mov notb aas out jo cmp loope mov les cmp data16 and push adc push stc push push push or and in jle mov jnp into (bad) mov mov iret sahf mov jbe cmpsl movsb mov iret xchg pop into mov mov push add jo sti cli sar lcall incb stos cmpb lock sbb jo aaa and iret pop add sbb xchg add mov pop mov push enter je lds shl cmp mov cmpsb roll mov xlat dec push or sarb inc and pusha push push add xchg adc mov jbe out xchg jle fsubs clc inc xchg push inc xor adc rol and push mov int xor jecxz leave das xor push sbb cmp mov jmp push sub mull ror (bad) jns xchg mov mov xchg xchg push jb cmp das sub fwait std inc add and dec fsub dec pop mov adc xchg xor and arpl outsb and push (bad) aad shrb mov call pop add push cmp adc cmp xchg adc sbb pop pop jns mov push sbb pushf fs out jp aad sub out sahf loopne push dec aas or ret sub cmpsb in movsl mov stos movsl and inc in inc or add cwtl mov pop jle push xchg lret insl and test out push sub into pop sbb lds push enter push push cmp mov xchg add cmpsl icebp and into pop imul jmp cmp mov and jp and popa mov and pop push fidivl imul jb (bad) in ss enter lods nop aad push or adc jg mov xlat cltd shl and fldt outsb xchg adc jne dec gs int dec aam stos add and aas inc cli fidiv aaa or cmp fisubl fisubl cltd fsubs or sti cmp rorb insb fldenv mov jns inc xchg adc mov sbb sti sbb es ficompl addr16 add negb push je imul popf aaa repnz nop in nop jmp je xchg sbb mov or push adc xchg lods jmp jp push push in clc aad (bad) sub stos adc mov sub hlt les cmp insl mov (bad) mov loopne jo push daa inc (bad) cmp cmpsb loope or jnp mov xlat xor push cmp adc xchg scas jo popa sub inc sbb sti and pushw jecxz pusha inc cmp jge sbb xchg mov stos dec lds or jl call xchg xor jle int ds cmpsb movsb push dec in out and test cmpsb and dec or (bad) scas and std inc outsl mov ljmp sbb xchg sbb mov ret sbb (bad) or inc xor jp push mov js jmp xbegin xchg mov cmp mov (bad) outsb jae repnz movsl movsb push jmp stos mov addl dec and pop cmp mov cmp add stc stc sbb or xchg push outsb jg pop fadd or jae (bad) mov push push lahf sbb adc adc insb pusha pmaxsw cmp add mov scas movsl aad and gs outsl enter dec scas xchg dec cltd push insl xchg enter inc cs pop push loope or inc scas outsb jno (bad) xor dec jae lret mov or aas adc pop (bad) mov in cmp in sahf mov push adc and dec xor pop jle mov lret push mov ret test addr16 fdivl ret inc pop push int3 mov or push and jne mov pop scas xchg xor aas lods (bad) stc xchg fild add int3 cwtl lds (bad) mov ret cmp and and shrl addl fstpt dec push pushf rcll push xchg ss add push mov hlt adc mov stos cmp dec mov loop outsl mov dec cltd cmp fimul sub adc stc cmc mov pop xlat inc lret test stos add jle (bad) mov xchg xchg push lea xchg mov mov js (bad) push hlt push jmp test ds dec mov in daa int3 inc and in loopne icebp ljmp sub aas aam mov sub xchg ljmp incb nop inc jae mov push roll icebp aaa cmp call je or sub mov call fisttpl mov addr16 mov sub rorl ljmp jb xchg sbb out xlat repz add imul and adc jbe out jo ret gs daa inc cld fwait mov or dec cltd popf and addr16 fisubr push fdivp js and repz jge into lods fildll jmp jge sbb xor pop sub divl pop inc mov dec in cmpsb add and push sahf cmp mov push jp lods or jle jno cltd lahf enter fs xchg xchg dec lcall jbe jmp hlt movsb push push or les lahf out add ja jmp loopne dec sub into jns cmc adc dec or pusha mov fwait add push mov xchg gs adc inc jno mov imul fisubr fnstsw fwait or mov pop leave cmp push and inc mov dec add mov jne imul or mov scas xor aas in inc xchg mov movsb and add (bad) xchg bound (bad) lret mov shrb gs je inc test cmp in jae int leave mov lods aad repnz ljmp dec sbb jae jnp fimull mov loop hlt mov inc mov jne dec rcrl divb dec jno into les mov jb lea enter dec fwait aas jae scas pop addr16 pop cs das lret aad mov cmp (bad) bound sbbl mov repz mov pushf adc sbb sbb into cs shrl loopw and mov out mov bound in adcl mov shll loop lock and mov insb arpl xchg outsb push or mov mov and addr16 stc (bad) mov pop add in out xor xor scas (bad) mov out sarb nop or push sbb jl pushf cmc enter lret insl mov pusha stc lahf xor pop mov pop xor int3 dec in jle scas push test imul int3 adc sti cs xor dec dec cs jb sub mov xchg jo cmc out rcrb xor sbbl and test popa xor mov and jno and dec mov les inc mov xchg cmpsl jb mov mov pop sbb jne or sub inc test popf push mov add jp iret inc mov and mov jmp push shll pop mov xor cltd jg stos xor push push mov xlat inc adcl (bad) dec push cwtl or mov lock lcall jns testb xchg jecxz jg (bad) or popf inc xlat push cmp aam stos mov mov or pop enter nop clc xlat mov test mov xor add lret or mov cmp into jp push or les push popf and inc inc pop aam data16 push pop enter ds pop inc idivl mov cwtl inc push insb ficoml push ja pop push pop pop outsl scas movb (bad) in lea add jg xchg add popa adc int (bad) test repnz cmpsb repnz in add inc (bad) cli add insb xor sub cmp mov sahf mov push lret stos jno cmpsb ret jno scas pop mov lret cmp inc push in pop pop add lret mov sti jnp adc inc sti jbe repnz pop fbstp in mov sbb dec cmp lea mov pop sbb aas adc push rorb cmp ss pop test mov mov dec data16 leave sti dec dec adc sbb mov dec inc lock test inc mov aad mov movsl xor inc test (bad) fld cltd repz pop sbb xor (bad) mov shrb cwtl mov sub movsl mov jge scas (bad) icebp or dec aas xchg cmc in mov xchg fadds jo movsl cs stc pop out add int3 xorb xchg jge daa lods inc and mov adc icebp bnd inc stos (bad) push push inc in mov mov and fisub aad jo ja andl ret mov dec movsl adc cmp push add or dec roll stc push insb insl dec or push mov inc push or sub mov loop js into ljmp dec ret cmp mov cltd fcoms and add lock fnstsw jae (bad) xor pop fisub loope jmp sub add cmp les daa dec or movsb and add scas jb jecxz or xchg arpl pop mov pop jmp mov adc inc dec mov dec lock xchg les and in mov gs je jmp rolb pop xchg outsl shll pop test (bad) test sbb cmp jnp test or jp test fcompl movsb outsb mov pushw cwtl aam scas sub xchg or sbb mov xor add xchg xchg inc movsb lret test mov xlat cmp sub je test into pop cltd cmpsl mov out and xor and fcomps adc mov jmp dec pushf loopne lahf add push add push loope insb outsb jp jp add rolb fisub sbb loop lret sub push shr fldt (bad) scas (bad) xchg scas (bad) icebp aas lcall (bad) push sarb jecxz pop sbb inc or int3 shrb inc adc iret outsb divb xchg sub or cld jae pusha sbb clc clc mov fnstcw adc jmp dec mov or aad in ss test or loopne xchg xchg pop sub je pop (bad) iret pop mov pop dec (bad) sarl jo das rorb (bad) mov jnp push sbb negb (bad) out xorb (bad) les imull icebp fisub add and int3 or push je cmp or leavew movsl fstpt pop jno enter or roll fldz cmp mov movsb mov or std add jnp and loope popf xchg sbb push lret mov in inc fnstenv fcoml push (bad) (bad) aad cmp pop or jae idiv pop pop aaa loopne icebp ds mov add lahf cmpsb adc inc shrb push rorb pop inc sahf xor mov cmp xchg mov sbb adc xchg outsl pop ljmp push arpl das fs (bad) rorb addr16 cmc pop fidivl xchg loop orl ljmp add cld add xorl repnz and mov aaa and jo roll inc mov out ljmp mov ss in test adc xor xor inc xchg fistl movsb sbb inc push inc push jle or mov lahf pop jnp pop js jb and and into inc insb stc repz mov fwait loopne jl pop std call fwait jl mov ja (bad) pop push daa fwait test xchg out movsl pop int fdivl outsb call stos or dec mov ret mov mov lcall sub imul mov push lret jbe inc mov ret sbbb sub push fcoms xchg stos mov cmp stos pop jmp call or aam sbbb bnd adc or std xchg mov cld aam (bad) int3 push xor push js rorb sbb test sub insb pop incl mov test nop repnz dec inc mov test rorl pop push jns pushf mov cld std rol mov xchg pop cmp out je inc fcomps imul xor fucomi push jle leave mov push pop rorb inc aad or push pop mov or je inc (bad) mov addr16 mov mov out xlat loope outsb fldt inc jb arpl add sbb and push and adc mov in mov jne jmp and ret jmp jne sbb jne jns leave dec sbb add xor and sbb out inc mov jmp dec (bad) in mov mov mulb jb cmp sbb push mov cmc pusha push xchg addr16 mov xor bound lods push or cmp mov jmp sti stc and sbb or push in jns je inc orl insb xor mov xchg cld pop mov inc fs dec lds inc scas cwtl bound iret outsb inc lret push pop into and jmp xchg push or pop or or xchg jno (bad) (bad) dec mov test (bad) ljmp sub cld lds xchg pop fsubrl loop sub pop pop pop sub and mov add cmp jle sti push dec gs clc push pop sub jae mov (bad) xor ljmp push jg cmpsb jecxz jl mov mov in les xchg inc adc sbb mov adcb rorb mov cmp bound ret mov bound pop (bad) jne sbb add stc ror in xchg sbb sti cmp call cmp hlt adc into mov dec adc or or mov mov pop sbb scas push mov xchg loop movsb frstor insl xchg xor outsb dec or test nop ret leave pop cmpb adc sub mov shlb outsl loop in popf fnstenv jno out push or push icebp xchg sbb daa or fisub jb xchg addl sbb ret lret adc lea cmpsl xor lahf adc push cmpsb and xchg pop pop int3 inc dec addr16 ss pop dec ret sahf andl or addr16 cmp push cmpsb cmp cli fist xor or cli hlt push test jo and ds test rclb les int iret out mov push (bad) (bad) hlt out loopne mov loop nop (bad) mov and mov movsl int3 cmp sub cmp movsb cwtl push mov hlt mov push movsl mov cmp out jno (bad) mov in pusha es jno jnp clc aam out jno sarb pusha push (bad) sub jp (bad) loopne dec (bad) int3 xor xchg xchg shll out adc push lret repz ljmp mov pushf repnz pop mov mov out popa js push pop push clc sub (bad) loopne imul push mov add xor or es fwait pop adc leave adc jp pop add and movsb mov imul cld add pop cwtl dec clc movsb ficoml fstl mov (bad) divb or dec push (bad) xor out and dec repnz jecxz mov lcall jecxz sub mov movd loopne imul sbb push pop dec les jecxz repz cmp pop imul mov sbb (bad) icebp jb xor loop mov int loopne iret incl out js adc push (bad) xorl lahf push imul mov jae pushf adc mov repnz xchg jo in aad push das ret loope pop (bad) aad das mov ret mov ja pop mov inc push nop (bad) orl and or enter test lds push jl mov adc scas adc mov sbb out imul (bad) sub addr16 mov ret in repnz pop push jl inc int add add mov cmp fwait ljmp push dec mov cld mov push int3 jnp adc push push lahf nop mov hlt nop mov or xor loope bound (bad) idivl mov jbe pop cmc mov lret icebp sub jmp ret ret pop xchg out cmp int3 add (bad) divb adc mov xlat push insb pop and push stos cmpsl not adc das les pop repz jg fidiv mov imul bound jmp rcl (bad) rep pusha dec arpl in sub icebp rorl mov lods xchg rcll imul sbb sti pop andl xchg (bad) xor jg int3 enter dec das icebp dec jne inc or lcall data16 sahf mov repz mulb outsb ret pop or (bad) push pop pop mov lret out in adc jmp mov inc out pop inc gs jo les data16 xchg sar xor leave subb pop fsubrp outsb aas test inc rcl repnz test dec and xor arpl sub (bad) push xchg and loopne add sub xchg pop fcomp add xor das ud1 mov sarb xor cmpsb leave int cmp xchg sbb mov call jb or adc sub rcrl nop loop jns sbb sub lock push fistp mov jae mov inc scas out xchg push push cmpsl divb jge lahf pop xchg enter nop and and ficomp dec xchg push in std mov or push and insb or push mulb sbb pushf cmpsb jmp jno mov adc or dec jle int dec ret pop pop push sbbl ljmp movsl and xchg cli popf jecxz js test lret aas cli adc in pusha pop ss (bad) sbb xchg jns out sub mov inc jmp jnp (bad) cmp icebp lret lea rorb xlat dec xor mov push pop fstp scas pop xchg mov sbb add push ret add lea adc stc clc pop lret pop sbb inc push push ljmp aas mov and js addr16 shll cli add push es sub test (bad) ror mov ss xchg mov (bad) lret cmp leave lock add push xor push cmp sarb les jmp jle jge pop rorl xor cmp jmp fist pop xchg test or pop push add in loope cmpsb pop cmpsl test jo and push movsb adcl test sbb imul int adc pushf (bad) mov xchg and fidiv and dec mov loope jae call pop fbld icebp dec jp inc icebp sub lds push mov into jbe pop sahf cmp push dec idiv out inc gs (bad) out cmp sub inc into pop (bad) lock xchg test adc je jb or xchg jge lret xor fimull ljmp lods adc xchg push xlat repnz mov mov pop push cmpsl out mov xchg pop push testb ljmp pop cmp push xchg cwtl mov iret loop (bad) pop loope xor addr16 cs xor aas or push xor xor cld xchg and pop dec movsl and stos xchg lahf out pop mov dec pop out sti div jno es stos jl loop (bad) cmc ljmp int mov ss insl (bad) repnz fimull pop sbb mov int3 or mov mov add in inc push repnz jb sub lds pop fldt in pop sahf xchg pusha sbb sbb daa mov loopne jbe,pn lds sub xchg pop ss or je xchg xchg and push sub and xchg nop daa repz iret (bad) (bad) aas sar mov sarb lahf push or aaa out mov jae and mov incb popf inc mov shrb sub inc sbb hlt imul push nop cmp xlat dec xchg push stos out ret lea mov jmp outsl js stos xchg ja aas test in jmp inc cltd cs test mov outsl loopne xor faddl repnz enter sub pop mov xor or (bad) cmpsl movsl or cmpsl arpl jnp imul inc jle pop push pop movsb adc jmp mov les pop aam cmc xchg mov ficom les and into cmp (bad) jmp jg or push aas xor add lret out cmp lea aas or push pop sub mov aaa jns jns inc jae nop addr16 icebp pop shrb sti sbb add mov test std hlt jns or push popa dec stos repz xchg cmp aam and xchg cmp jbe fdivp inc stc mull add insb or mov (bad) sbbb int rorl jle or pop insb lods push sbb psubb mov cmp lods and cmpsb dec rorl out stos dec or mov repz into test idivb pop inc sub hlt stc das push (bad) icebp lods inc test sar into mov or add mov or (bad) cmp and mov lock and add ds xchg cmc enter jo adc outsb and mov int adc sti cmc or stc (bad) rcr (bad) lret and mov (bad) inc out xchg cmpsb xor mov fcompl or je stos addr16 dec mov das xor test jne int3 pop jnp jge (bad) add sub xor (bad) ja jmp je jne sbb pop pop sub pop call cmpl std and sbbl jo pop xor gs push cmovns aam stos ffree loopne inc aas pop lea xchg out or addr16 insl into inc pop inc fcmovbe mov jmp in idivl mov ret repz sub jp into add pop jb pop mov cli cs ja dec fldt pop dec pop rolb mov dec xor push fxch bound adc repz adcb inc orl arpl sti ljmp and test lods incl cwtl fbld into or push xor jp adc push add rclb in mov jne insb pop popf cmp push not jge mov (bad) ja dec jo ret test fmul pop push rcrb movsb cld mov xor mov inc cmp enter inc cmp xchg mov ret push and movsb xor mov pop sub sub (bad) fisttp add sbb repz push test divb scas cltd movsl outsl inc adc or mov xchg mov mov xchg jne insb lds les or mov mov sub int3 addb mov jle cld iret push jmp cmp jl xchg in lret cmpsb loop mov popa in subl int sub pop xchg daa mov pusha enter xor iret les mov pop out pop fsubl ss inc leave jo push or cmpsl mov push aad nop mul mov in test dec xchg jle cmp dec cmp lds mov test or fwait mov enter jge iret jge mov add or dec mov (bad) push pusha aam lock jno mov jp repnz fcmovnb mov lret dec lret mov xchg mov fisub (bad) (bad) int cs xor lea ja dec lds fimull outsl mov fnop push movntq adc mov mov dec add (bad) xchg jns xchg adc insl mov scas jne cld add push popf jp pop test cmpsb scas in mov repnz scas xlat and xchg pop fidivrl push cmc mov sub dec inc or rcll into sub push jl push inc std push ror adc (bad) mov aam mov mov and jl dec (bad) std lret push jl or fstpt cld mov xor inc fincstp lock enter jns dec aam xlat bound into (bad) jnp pop arpl sub daa xlat (bad) xchg (bad) cmpsl hlt xchg (bad) dec ljmp mov mov inc jae loope insl xlat add cs push sbb ret test data16 (bad) mov xchg pop rcrb mov ja sub or and cmpsb sbb arpl daa inc mov sbb pop jno repnz mov cmp mov mov (bad) enter daa push xchg or out int fwait iret (bad) jae icebp xor pop xchg adc pop jl jns sub dec pusha lcall test mov insl push loop test and aaa rorb out adc inc sub lods xchg (bad) pusha dec stos and pop xchg imul ficomp mov cmc aam orl insb and and in nop inc test nop mov fstps shl lret cmp cli xorb rcll mov sub int mov pop add xchg jecxz push cli fcompl push mov pop lods iret aaa mov hlt adc sbb pop adc mov xchg pushf lret gs push xchg add pop loopne fcomps and xchg or orb clc jae mov shl mov mov xchg inc loope inc cmpsb mov jge inc pop pusha cmp leave insb out jecxz push mov xor inc push inc mov les subb out push sbb ss (bad) cmp ret cli mov repz int3 movsb enter and and (bad) fiaddl in push scas fs sti push pop cmp (bad) shlb add hlt fidiv mov les mov pusha or push push (bad) aaa xchg add out std out cmc cmpsb lret push mov mov cwtl movsl insl mov sub jno mov jecxz pop mov mov xorb (bad) push inc and xor ja xlat nop loopne (bad) in xchg push int3 jle add mov xchg xchg pop pop cli (bad) test xlat cli inc cltd (bad) cmp sbb fisttpl and dec or jbe xchg in push push add cs xchg aas cmpsl jmp push jnp mov push gs cld sbb jecxz push push xchg mov daa mov out lea lcall jl dec and jb pop movsl jo popa mov (bad) pop lcall (bad) lds pop jb cmp xlat mov pop jmp or inc push in in cwtl icebp negb xchg adc test push cmp fnop and bound sbb out mov stos arpl aam jae xchg push bound scas test imul insb scas cltd lahf das out and adc push cli divb aad decb push rcr xchg push adc adc pushw imul insb cmpsb pop stos jmp sahf fs mov test add (bad) rol pop dec lcall inc pop push lock mov in jmp add (bad) dec mov cmc jle pusha push ja mov add ss push jg pop push jbe lock mov mov div inc outsb adc cmpsl scas lods jg fwait (bad) pop sub sub sti mov (bad) mov inc pop xlat shlb mov cli xchg (bad) in add dec lds sbb (bad) mov cld shlb dec or pop push in and aaa and sub pop jge sub xchg rorl xchg xchg lahf cmp pop insb or or push lret rcrb adc shrb dec aad mov loope mov sub cs lds pop adcb fmuls and negl add sub repnz push xlat out mov movsb nop xor shrb sbb adc fneni(8087 adc mov and insb (bad) sar inc sub xchg mov fldt fs or pop fst leave xor (bad) jbe (bad) hlt push push sbb sub inc mov add movsl or mov es aas shlb sbb lcall or ffreep jbe loop es out (bad) cld cmc repnz pop imul loope mov fstl xor mov inc data16 fxch jae or sahf and repz out sub iret fimull les sbb mov fs xor (bad) gs pop mov outsl roll xchg xchg cld lret cltd cs cmp fsub cmp fist outsl sbb sub mov inc mov mov push mov shrb ss pop fs pushf (bad) daa xchg rol orb xchg pushf dec lods frstor mov in adc jbe int xor and cltd mov adc int3 pop aam fisttpl xchg and in dec lret sbb mov pop pop lret arpl pop lock add push iret (bad) lcall push andl mov mov pop daa xor movsl sbb bound cli insl insb dec (bad) out dec arpl jne cmp enter pand mov imul push pop cli xchg add enter (bad) jp sbb jo cmp and inc xchg sbb or jno insl xchg pop aaa xchg xchg or xor xor xor mov (bad) mov das and sbbb or push inc idivb xchg jb psllq into inc jecxz cmp mov xchg xor mov iret int mov (bad) mov xchg xor or movaps je (bad) fisubr jo cmp add repz inc scas in pop dec punpckhwd ffreep inc add test or shrl aaa add adc into add aas fsts and sbb pop loop adc divl push rolb cwtl adc or pop mov adc or rcrl sub fucom jge bound dec stos repnz ficompl mov xor push or cmp aas insl jno push xor aad mov cld push (bad) test mov (bad) jmp fnstenv scas bound fdiv mov sub adc shlb xchg xchg lock inc cs sbb jne (bad) mov jg xor push outsb jl roll fisubrl loop rcrl cmp dec mov push test push xchg xor in into and fiaddl incb cmpsb adc xchg data16 dec iret or xchg out lret push orl pop test cmp imul jns ret mov out popl in out push mov fsubrl lods (bad) fs mov int3 in cli fcmovnb and xorb jno aad addl mov push repz cs stos std xchg (bad) jb inc mov pop js mov in lds cmpsb (bad) fiaddl pop aam cmp pop in (bad) fidivrl mov fwait cmp xchg jne aaa or push push inc loop es mov (bad) iret int3 push and cmpsl jns mov ljmp push aad stc mov (bad) icebp decl xor or push gs mov les scas pop or rcr cmp cmp scas sbb jns and out cmpsl push jecxz pop popf xor xor or iret rorl mov (bad) nop sub xchg cwtl and dec out lea test cmp xlat insb lods pusha or mov pslld mov pusha jecxz inc push jno mov mov inc into cmp push sbb aas sbb adc out add ja out pop push adc repnz xchg pop bound pusha jne mov adc shrl pop loop pop fstps sbb pusha rol sub or pop adcl sub loope in sub cwtl (bad) dec mov and outsl add mov mov mov in mov and leave push mov popf ljmp lds cmpsl cmpsl addr16 shlb pushf jo loop icebp dec cli scas or insl xchg lods xor fcmovu aad jg out mov push xor mov insb jne je mov loop mov cli mov jo (bad) mov add sahf push xchg ret adc fstp bound inc dec dec dec xchg and pop jno inc add in dec mov arpl pop mov mov incl hlt xlat movsl notl iret push inc fiadd mov cmpsb add sahf xor clc pusha bound add adc add imul out xchg add mov xor mov data16 ljmp mov (bad) cwtl pushf push push imul lea cmp loope mov sub adc std insb and pusha cli xor inc sub (bad) lock jae mov inc test test adc aaa jge imul cmp in (bad) rcl call push pushf in mov std ja pop add lcall adc out imul lods cltd jo and cmpsb leave pop lcall xor push sbb ficom jl outsl push sbb inc in jmp mov xchg or cwtl lahf sti cmpsb movsb pop cmp arpl aam cmp sar push sbb imul mov sbbl add mov push adc mov jb les ljmp cmpsl dec dec lret mov sbb adc mov push mov jge cltd sbb add popa adc idivl test jae pop mov add lock xchg hlt sub js cli in cmpsl dec fsubl cli inc or pop (bad) repz jnp inc (bad) test xchg clc mov push push inc jecxz mov adcl out lods push shll ss pop test lret clc loopne pop jl fisubl pop mov xchg dec jge scas lock lcall fwait jno ret cmp (bad) cli and add cmp xor adc inc mov adc loope pop jae idivb jo outsb sub cwtl mov inc movsl out xor pop cs outsb sub test jo xchg fnstenv lahf mov iret ljmp jle ds mov jle sahf sbb pop leave insl outsb or push out les bound jle sti pop push add (bad) xchg pop xchg adc sub jb xchg cmp mov nop outsb js cmpsl xchg sti sbb jecxz add cs or inc out (bad) (bad) push cmp jl (bad) std or int3 push in imul dec xchg mov stos std cmp jg mov jecxz (bad) in out sub shl out pop ss (bad) jle into (bad) mov mov pop fcompl stos ss mov sub jp pop je jecxz jmp jbe sti mov push mov je fmull hlt or xchg dec arpl sbb aad jg mov ficompl mov (bad) pop adc sahf inc adc lods jne cmpsb popa dec das add je es xchg lock popa adc andl inc divb arpl xchg das jle dec xchg inc sbb push into push and int (bad) jl mov nop inc mov scas cmc adc jp jne ds sbb addr16 xchg xchg xchg call pop cmp fbstp (bad) mov mov cld les jbe jae outsl push stos dec mov lea jge outsb dec jb adc pop jge repz sahf xor mov xor daa add icebp lcall out mov (bad) stc fsubl and push mov add cltd cs mov or stc popa in adc imul jmp mov mov inc (bad) mov leave lods or outsl xlat mov jnp (bad) mov and adc int3 pop pop push mov dec adc ds jnp mov aam sub movsb cld imulb or daa (bad) mov mov xchg mov pop push dec sub ds cmp fstps fidivl (bad) and or mov dec cld mov insl adc (bad) push xchg xor xor cmpsl dec sub inc jbe or iret add sub pusha jmp (bad) frstor sahf cmc sahf cld sub dec imul rcrb int push lcall mov je lahf (bad) jle int3 adc sbb fsubrl loope sub fidiv xchg sbb test test or daa lret inc popf imul push popl out push mov xchg subl push jo mov test mov jb mov xchg mov imul insl mov pop mov adc lods push mov adc inc or loop aad dec (bad) lret sub in jbe xor sbb ror pusha fstpt repnz jmp mov js jae push push mov in mov fst or xchg dec dec fcomps dec loop outsl arpl fisttpll inc push jb scas push push sbb pop test or xlat (bad) addr16 dec imull mov jbe inc cmpsl or and pop sub rcr mov cmp xchg in adc mov popf push pushf pop and out mov mov rol pop xchg enter lahf add sbb int or fidivr mov jo push sbb sbb and es mov test je dec fs mov inc xchg icebp and ret mov dec adc pop mov cli imul pop add xchg or mov movsl cmp lcall add adc movsb dec push insb xchg pop push push adc xchg sbb sar push pushf push or jl inc imul sbb mov xor pop mov arpl push stc sbb jle jle (bad) mov jne shrb inc je xchg lock ret mov add lods movb jmp mov adc cmp outsl xor data16 mov cwtl loop adc lds rcrl insb push (bad) cmovg imul sbb sahf and icebp into cli shll jge leave in shll dec or addr16 fisub mov cmp jae xor fistl jns pop pop int3 mov cmp xor addr16 in call pop sub imul ljmp loop dec roll mov sbb in sub (bad) clc cmpsl fwait mov ja mov and outsl jmp jae adc daa imul int jnp xchg pop jo rcrb ror imul ret cmc rorb insb mov push mov stos add int3 dec dec outsb hlt data16 mov movsl mov adc out lret xor push sbb dec add sbb roll clc xchg repz test cmp inc out push insb pop lret jle xchg sub pop pop pop mov (bad) mulb and dec je xchg mov mov dec movsl sub imul or shlb xlat fcomi sti scas mov (bad) int3 jne mov adc (bad) adc es pop cmp into ret iret popa pop (bad) mov addr16 push scas (bad) sub xchg jg pop in aaa inc jle loop adc mov and dec pop or fcmovnb mov dec jo outsl adc jl adc out lcall xchg hlt jmp lret out (bad) xchg pop xchg leave aas int flds jbe out inc test aaa sbb push mov stos jecxz adc repz call nop bsf pop xor mov fldenv aad rorb jg cmpsl inc fwait aam mov add jmp sub iret dec cmpsb iret push pop iret sahf or call loop push jmp out jo nop inc dec pop mov arpl ficompl push leave mov pop icebp fsub pusha and cmp xchg mov or cmp add pop stc dec rorb into push std xor xchg movsb pop pop xchg dec dec (bad) jp dec fimul mov or push xor xchg (bad) in call cmp cmc adc dec fcoms shl adc sub nop test (bad) stos dec cmc jmp aaa lods lods adc push imul or jae fwait jge jb mov je sbb adc sub incl sub les dec hlt mov in xor loope or ds into mov sbb in std mov call and push pop ljmp xchg dec nop pop xor and ljmp jno add pop adc rcrb insb sbb out sub addr16 mov fstl fbld and outsb mov cs rcll push adc notl add dec pop es cmc ss dec (bad) mov sub jg rol subl ror adc dec notb push ret je fstps add enter dec and push sub imul sarl lds adc bound add lahf jecxz es mov pop and mov cmpsl mov add rolb cmp arpl cld jbe lods push pop fstpl scas jg pop jo sti cmpsl test cmp cs rorb (bad) push (bad) rcrb sbb dec push sahf push clc push decl sbb adc lret icebp push cmp inc insl iret fmuls (bad) mov and and inc aad xchg sub cli xor repnz mov fldcw sub pop mov cli (bad) xor cmp fstps cmp js subb and ror sub subl mov dec loopne jno push loop dec fs sarb (bad) lock out dec clc mov dec xor cmpsl aam mov push jnp popa jmp jno stos push xchg scas push cwtl mov add pop sbb (bad) xor jecxz sbb lret adc cmp lahf cmpb pop cmp sub adc mov test outsl (bad) int3 inc int3 cmp xchg dec push add ja sbb cli pop das add jmp ss jmp stos sbb test outsl test ljmp adc inc and (bad) cmp (bad) mov out scas dec cltd js cltd (bad) cli push inc sbb sbb scas sti into mov and into pushf and js ja sbb imull lods dec push insl xchg repnz and lret lock sahf flds leave stos push fxam fmuls or arpl rcl sub sbb jle inc and stos cmc mov loop (bad) sarb xchg inc fisttpll adc (bad) jne repnz inc and loope push xor fisubr mov pushf mov fild out add jne inc sbb rcrb mov mov jae push adc ja cmp dec in hlt push push jmp (bad) ss or dec scas push ljmp mov dec cltd jmp push and push (bad) outsl cld sbb pslld adc and lock clc daa es sub mov gs adc dec lds lods (bad) mov adc test clc mov cli pop pushf xchg push dec stos fbld jge icebp cmp scas jnp or ss int sub sbb push ds ljmp hlt push xchg adc out aas fwait repz leave pop jo adc call jae sbb cwtl cld adc dec mov push shlb cwtl xor xor jg add cmp add iret loope mov dec repnz cwtl xchg inc and mov (bad) rcrl sub popf mov inc inc fwait rolb ret or pop push inc xchg (bad) cmp lretw cltd popa pop push push fnstenv add cmp fs fwait lods out jae pop mov lahf fsubrl xchg aad mov pop or push inc mov loopne stc mov jne jl imul pop leave repz xchg mov pop daa in xor mov pusha jmp mov repz outsl pusha mov pop stos xchg sahf jnp pop aad ja push add aaa or push popf xchg jge lds mulb ljmp sbb mov fwait or mov js outsb pop xchg orl push add stos fbld loop orl scas jmp fcmovnbe popa sbb outsb xchg addr16 imul pushf hlt xor push negb push cmpsb xchg mov imul ret xchg sub cltd mov mov sbb addr16 out lret fldl mov ret xchg and or pop daa nop das push adc pop mov movsl stos and fst aaa aad pop sub or imul dec pop negb adc int3 (bad) lret mov hlt lods cld jp ret cli rorb call (bad) mov inc mov push jne outsl mov movsb popf mov stos icebp mov fnstcw or mov pop jo mov insb je shl dec ds (bad) leave jmp insb mov das test movsb sti cmp add pushf xor sahf inc pop inc inc push mov mov xchg ficompl mov xlat pop mov push add sbb iret out out dec loop mov and adc cltd incl push testl in ret xlat mov lods lods loope mov ds push lret fistl xchg mov sbb jecxz push sub sbb mov fadds xchg jne fsubrl dec sti ret lods xor js cli or fdivrl (bad) movsl xorl icebp pop mov xor cwtl popa and test sbb test sub ss or aam push mov daa aad mov sbb or jl pop das in mov sbb adc (bad) sti cli xor std adc aas aam rclb fs shr mov xchg adc cmp sub mov int3 (bad) cmp and fs call (bad) dec jle cmpsl inc test dec test js pop mov adc jo fwait cli in push cmp xor dec xchg push xchg int3 adc adc jbe jp and inc cmovnp add mov adc sub scas jmp xor std sti aam mov rorl push fcmovnbe dec pushf sbb bound adcb inc jg out add stc repz mov mov aas loopne mov pop mov sbb repz pop sti clc xchg dec mov xchg xchg sti ljmp xchg jb (bad) sub adc cmp stos cltd push inc mov (bad) xor nop mov dec fadd jg lahf (bad) imul dec jns test and inc adc push adcl cmp inc xor aaa nop push cmp out clc push mov clc mov add out xor jae mov decb aas or lods loope call jns pushf lock add jne fldl insl jmp cmp clc les stos stos pop lods add cmp xor jg dec and mov sub push (bad) sbb jle leave adcb fisubr jg mov dec sub out sbb data16 and fadds xor (bad) test out xor aam popf mov add jbe ret sub enter scas fidiv sahf cmp aas cmp mov mov (bad) jns mov sbb dec popf pop cld jmp xor pusha dec mov xor mov push movsl out sub inc out imul sbb mov leave out aaa into std fstp cmp cmp or xor or jnp (bad) mov popf mov loop xchg call inc cmp and xchg scas repnz and pop xor out cmp hlt cmp aam imul push lret cmpsl test xchg enter nop popf cmp jl stos movsb insb push pusha dec mov adc jmp jmp mov fcoml mov gs lret and fisttpll les mov xchg sbb data16 jp jae js roll cmp jnp or mov xchg shlb jns ret sahf bound adc lods or lock loop sbb xlat adc mov push push pusha cltd sbb xor cmpsl inc rcrl mov fildl ja pop mov jae mov cltd test pop jb je jbe dec loope popf mov aas push mov hlt pop push pop mov sbb xchg popa jb xchg dec loopne cld or push arpl jnp (bad) xor rolb pop pop mov fmuls insl js pushf jl pop xor js adc or mov (bad) int sub in mov icebp call cmpsl fs das sub mov dec leave xchg mov sbb adc sub in add int stos test icebp fimul scas cmp ret push push std inc push in fidivrl fadds test jns mov scas fbstp (bad) in loop mov sbb fcmovu adc and mov add mov lcall xor fsqrt jne (bad) ds ja lahf movb scas xchg mov sbb ret aad (bad) cwtl test adc je or adc push (bad) push xor insb inc fs xchg xlat nop xor xchg mov push stc imulb adc adc scas dec test or jnp push xchg sbb sub inc add sarl and out (bad) mov xor mov clc imul ret push aaa pop mov push fistpl stc pop fldcw data16 sbb adc addr16 std nop cmp insb pop mov pop pop es inc enter sub enter and xchg pop xor sbbb mov aaa test (bad) popf das inc dec jp enter loop sub sti adc iret mov mov (bad) rcrb ss sub scas pushf xor (bad) jg nop ret push les pop hlt sbb cmpsb in mov loopne (bad) mov xchg inc icebp inc mov add jne fdivs test nop dec test and repnz stc xchg into dec pop (bad) aam cs sbb cmp pop jbe pop push lea mov cmp stos lret cmpsl sub out insb add je popa xor jge les xchg mov (bad) subb lret pop sbb xchg orb (bad) (bad) cltd push int cwtl jb leave loop (bad) repnz pop sub je imul mov fadd std popf jns inc inc out fxch pop cmpsl out fstpl movsl adc mov jmp stos cwtl push enter hlt test (bad) push aas dec bound mov sub rcrl int3 mov adc lret popf test out xor xchg add push inc imulb (bad) mov stos adc cmp mov ja in dec inc and cmp stc (bad) in mov fidiv push bound xor inc sub adc (bad) mov leave inc jno pusha aam or aam mov cli pop lea push daa xor inc sub movsl jae jmp cmpsl les or or push pop arpl stos cltd and jns dec inc push cmp icebp pop dec pop jle cmp xor sub jbe test clc inc int pop out xchg test jmp cltd push loope mov std iret loope adc inc xor jne mov sub and jnp mov adc ja rcrb ja jl mov daa dec inc pop nop mov adc push out add push mov inc jp int3 jb xor outsl push push stc (bad) icebp sbb xlat (bad) mov rcrl jne pushf xchg das pop add or pop pop cmp (bad) mov sbb inc insl sbb cmp jge mov push orb xor jb jae,pn jecxz mov xor and jl jl mov cltd pop mov sub js fimul nop sbb insl loopne ljmp enter mov ds pop dec or cltd mov dec mov adc ds popa test pop fmull fs mov out insl out addr16 fistp mov and mov xor int add mov mov enter arpl std pop push xor dec movsb mov clc (bad) clc inc add cmpsb mov imul xorb lahf cmp in scas mov sub push xor sbb sub shlb mov out cmp adc mov mov sbb or dec mov pop fcoml mov cmpsl jmp push cld imul lret out and sbbb imul mov jp push test jl sbb or pop pop popf sahf mov lret jns mov xchg rolb loopne leave cmpsb cmp xor add arpl scas adc add (bad) dec or mov rcl mov lcall cmpsl jo clc sbb out dec inc inc cmp pushf add or stos mov jl fild cmp inc out pop pop push mov and inc (bad) pushf into iret mov nop mov movsb sub les (bad) mov pop out pushf push dec inc cmp mov push fwait jge or negl cmp push dec lret sub faddl inc mov pop je test mov or fwait mov aas mov (bad) jp mov std std pop jle fst movsb add dec loope adcl xor adc mov test and push inc jmp js ja pop ds test dec xchg jecxz push adc mov fadd push xchg jge loop jg or cmp sub dec mov push sub popf test in mov dec jnp push popa aas loope ret adc pusha xchg xchg sbb pop shrl fs (bad) (bad) jo dec imul mov cwtl mov insl inc lret or xchg adc dec dec adc ss (bad) xchg push pop push pop mov movsb shrb xchg (bad) in jecxz mov mov mov dec (bad) mov shlb pop mov mov test pusha dec push clc cmpsb inc sub pusha into xchg xchg clc inc out leave xchg jb push push test hlt aam mov test insb in push in jle mov (bad) jge rorb repnz out pop xor scas cmp mov or sahf mov and cltd xchg xor test adc or repz mov lret (bad) lock hlt lock in xor mov xor cmp push mov mov push movsl xchg (bad) or mov push test xchg (bad) sub cmp call add or jge push and repz xor js into stc loope inc adc inc inc cmp adc test add (bad) push sbb call mov std cltd gs push pop negb pop popf into in out mov cmpsb sbb xchg mov sub cli sub mov movsb imul test test xchg repnz pop pop cmpsb mov push cmp cmp jb inc ljmp (bad) cmc cmp xor xchg (bad) or (bad) jbe (bad) data16 or pop lds js push nop pop and stc lods adc je (bad) in ret sets jge push or jns add fwait sbb sub (bad) stc jg movsl inc cmc jbe stc inc push jno sub popa andb shrb adc mov popf loope push daa adc inc inc adc xor jbe int3 jecxz sub push xor and rcrb jecxz sub mov dec sbb out add scas mov pop or fs adc pop xlat or mov or mov xlat das imul mov ret andnps jp xlat imul push daa mov mov or fildll dec xor arpl fnsave and lret gs mov jb hlt cmp jle mov insb rcrl adc pop xor popf movsb inc mov push repnz lods addr16 xchg fs push mov test inc (bad) jge lcall scas pusha fildll cwtl jae fbstp into sbb dec xlat (bad) cmp fldenv mov hlt mov and jmp sub pop rcll jg cmc outsl stos bound and scas xchg jb imul pop cwtl mov je ret scas and push jp out add lahf push push not dec imul xchg mov sub aas sahf pop icebp cmc aaa rcrb add das (bad) repz xchg icebp adc rol insb loope popa xor mov subl mov jp,pt (bad) rclb or dec xor das sbb dec cld cmp lods je sti les pop lea pop shll insb insl or rorl clc cmpsl negb int3 test push test enter dec fninit (bad) lar mov jns xchg jge dec gs dec push fdivr gs inc ja jmp stos inc mov stos and xchg lahf pop xchg (bad) cli test xchg outsb mov std or xchg inc sub sub and fdivl sbb mov call cmp das lret imul pop inc and jmp fucomp movsb fnsave jmp mov test lret (bad) (bad) out mov or fdiv add sub gs sti xchg (bad) outsl fisubrl mov in mov inc arpl push xor jle mov stc cmc add fnstcw clc out push bound push lcall fstpt push mov add cmp lcallw iret movsb dec add inc sbb test leave sti xor gs jae push icebp pop cmpsl nop popa adc pop mov sbb sahf mov cltd add adc ss pop out (bad) minps cmp sub ficompl or sbbl cmp jl jnp sub ret add inc es out dec cwtl adcl sarb mov add mov out imul and shrl mov push cmp mov sbb jb dec jl push mov add jp mov xchg out sub sub lods das mov mov repz jge ja hlt xchg icebp fdivrl enter ret pop cmpsb clc lcall test pop imul repnz cmc nop fdivl push pushf pop inc pushf push dec and out (bad) test pop mov jmp jb mov shlb mov movsb (bad) or jnp test arpl pop loope cmp out out psubusw outsb mov inc out std pop in dec pushw es xchg and (bad) in int in jecxz inc jbe lds pop ljmp inc es sbb fdivs or xor sarb ret jmp movsl jle sbb insb sti cmpsb js pop lock xchg jge and adc in jnp cmp enter in adc insb mov fwait cmp mulb rclb push push mov dec in pop (bad) lret insl rolb inc cmp mov lcall sti data16 std jns insl shrb jecxz xor popa sti ret cmp jno cmp sub jbe andl fisttpll or and mov add bound ficompl xlat cmp xor dec push push insb ljmp xchg jmp in inc push ror pop mov xor lret adcb fisub or test adc iret add push movl xchg mov dec adc xor repz movsb mov ds lods test jae or and mov mov mov cwtl out xor insb aam jl mov pop es into dec mov inc enter dec pop push mov sub jae jp adc nop add adc test xchg mov mov push lahf sti test hlt jmp rorl jge fs mov popf out jmp aaa push mov out js push jns push push popa (bad) pop jge push rcll shr pop je cli pop dec stos push loop xchg lcall in into ljmp (bad) add push in addr16 jne or mov subl test dec and mov scas mov test mov popf and cmp rcrl jl leave jp iret sbb rorl mov cld jb sti push and dec clc mov lods aam and test loopne mov adc test pop stos jl mov or cs jae add pop xor cmp lods (bad) dec mov jecxz hlt int3 mov sbb inc pop ds dec roll mov icebp (bad) rorb jmp cmc mov xchg mov pop sub mov sarb pop or repnz xlat std movsb ja addr16 into fidivr adc xchg or jne stos sbb adc inc and mov imul scas mov pop cs xchg (bad) mov push or pushf cmp mov nop sub mov adc pop cmp xor mov repz mov and icebp mov pop gs xor lods sub or in popa rsqrtps push in es push add movsb mov cmp pusha inc (bad) stos jno jnp mov (bad) inc xor sbb adc xchg pop dec jbe and scas adc jno pop rcr push pushl fisubr aam adc fisub aas ffree std add pop push dec mov ret mov or or movsb adc scas insl je fistl mov adc jnp repz inc sub mov add in and push add frstor mov (bad) iret repz daa fimull bound fcom jecxz mov data16 pop test fadd cmp xchg addl and push lret xor (bad) jnp xor mov (bad) jmp dec pop xchg sub and fdivrs enter sbb inc sbb repz in lods test xchg mov lea (bad) aas out ror insl test mov inc arpl jno lret insb jno lret fwait rorb xchg sub mov imul pusha mov ret xor fucom inc (bad) mov jge inc jae ret bound push clc push lds jns mul inc jnp adcl outsl nop (bad) mov sti xchg sbb lock push clc std or in dec fidivl pop pusha cltd cmp add or ret fsubs fnstcw add mov mov mov arpl aaa aad jmp pop xchg mov add jmp add sbb push sub mov push lret nop out jg iret lret jb rcll pop sbb jg rep or adc mov push pmulhuw repnz inc xchg dec sub stc idivl mov scas dec and fisubl jnp xor xchg push les jbe push sub ret aas pushl shlb xor inc xchg mov xor clc jecxz mov in addr16 mov xchg push fldenv inc dec (bad) outsb jo les push jmp decl pop cmp loopne add (bad) sub pop add sub sbb mov (bad) xor outsl or test push or andb push (bad) stos lock xor mov sub jbe jns (bad) pusha cltd cwtl lret int cmp cmpsl lret leave jl scas xchg pop shl in and pop (bad) lea push push mov fisub pop cs adc lret mov mov lret or jl movsl or scas add jns xorl lock push hlt stos xor sbb cmp dec call aas call sub mov test pop shll or loop sbb shr jae jp dec jge nop lods mov loopne sub adc add sub add aas (bad) mov lret xlat test add les sbb adc sub outsb int3 push sub lods adc cmp and push xchg xlat jmp sahf adc add sbb int das test jecxz cmpsl push in test std dec inc js aas aas sbb inc jg xor hlt or popf sti lcall dec jmp test into aad mov cmp dec mov push mov xlat sbb pop jnp std int mov std fxch inc test jns pop fs gs ss mov rolb add call push cs xchg sar sbb xor inc push fsts cmp jae mov add clc lcall aam cmp add lret jl jnp xchg ljmp pop cmc nop iret aad push repz sbb pop icebp les aam popa xor out std pminsw pop inc xchg jmp jbe adc pop dec (bad) pop ret test imul mov data16 sub daa jp or call pop callw add or push dec push outsl sbb pop push les mov jl cmpsb mov jno mov sub and int3 pushf out rcrl into orb test loope test sbb push cmp mov test inc bnd mov mov mov or cmp loopne pop int3 ja aad jne cmpl (bad) sub jmp lahf fs push cmpsl xchg test jge jmp sub fbstp lahf mov mov pop movsb sarl dec call or (bad) pop sub pop pop xchg and in xlat ljmp dec jle mov mov test insl icebp mov loopne cmp test or ss stos mov es dec leave adc cmpsb (bad) aaa cmp xlat jp sub mov xrelease (bad) or movsb or fistl das das dec addl repnz xchg lahf or (bad) int sbb or mov sub imul test push push mov mov mov ljmp in jle icebp or popf and add cmpl sbb mov sti mov pop push lods push lret mov mov push test fimul adc lret scas call xchg or jns sub sbb inc cmp cli cli sbb stc test test movsb pop lret pop push sti fwait lea sbb xchg jne aam mov je test inc fcompp mov push mov push lds stos cld jmp xor enter mov push fstpt out loope loope mov sub ljmp nop dec xchg (bad) std xchg sub mov aas (bad) (bad) cli inc pop sbb and mulb andnps inc jmp out cmpsb sub mov xlat test cmpsb pop mov pusha and psraw push xchg xchg andl or jge sub es xchg loop icebp sbb icebp frstor jmp mov pop mov cltd add cmp fsubl pop ficomp or repnz leave jmp stos jbe pop jae cld jo adc mov dec add inc pop xor pusha mov jae pop jnp cld sbb in cs adc xchg and mov jnp pusha mov push daa or clc cmp jg lahf push sub push aam jmp fucomp lcall das ja pop cli mov cli cld pop inc loope in cld cmp pop into mov int3 sbb testl lahf insl add (bad) mov sete mov push or imul jge inc or stos lods mov lea fucomp jns dec loop jmp scas data16 jp pushf mov lods inc mov jmp xchg mov out or ret aad cmc mov jl mov decb xchg push repz add mov jg aas or rcll insl mov pop cltd mov imul call pop mov dec sar push cld loop or insb int3 cmp mov pop sub mov pop sub mov and outsl dec in sub and sbb repz push adc nop inc xchg sub dec jl daa mov adc or mov test add aad rorl outsb and mov sbb stc xchg int3 mov xor jge push xor pop lret mov xor jg inc push outsb out push ret mov dec pop fisub mov push adc out rorl mov jmp cmc cmpsb sbb jb es or bound sub testb xor incl cld pop in jae (bad) (bad) (bad) jne ret lock addr16 push in adc daa push dec mov cmp xchg lret enter sbb repz mov shl fs pop stos push (bad) jl,pn movl xchg mov in push pop inc dec scas movsl dec (bad) cmpsb ss mov push and jl jb xchg mov test scas lcall lahf lret iret sbb push sbb adc div movl fcoms outsb xchg stos das and cmpsl mov jl sub int push out mov inc cmp pop sbb push push xchg dec dec and stc add data16 rcrl (bad) inc cwtl add clc sbb divl pop int3 jbe js test jecxz xor pop mov sub aaa pusha jne xor xor cli lods mov out jbe int3 xchg pusha jmp cmc dec data16 rcrb nop sub inc stos ljmp inc fiaddl cmc jg fnstsw scas pop in into add stc mov mov mov lcall js cmp ret incb xor icebp xchg adc shlb dec jne sbb push push xor mov lods inc fwait repz pop popa stos add ds out push cmpsb and adc cmp movsl xchg pop std pop enter loopew outsl into xchg clc cmp mulb push xchg jg out adc lret popf mov aad cmp sub dec and ja arpl mov push cmp stos xchg arpl xchg aam (bad) aam ror dec xor mov push frstor sti inc loop test inc mov or sbb mov lcall and sub pop cmpb mov aas mov notb mov add add push icebp in mov pushf fcmovb (bad) add mov fistl shl inc xor rcr pop insl mov stc mov pop daa jmp pop cwtl (bad) jne add (bad) mov pusha cmp cmp xchg ret add add jns pushf lahf fistl out pop jne dec insl loop jno pop xor jl out shl and insb js rcr (bad) imull psllq xchg arpl push orl out imul rcrb xchg in ret int3 adc dec mov addr16 lods ds fwait orb stc mov test jle scas in add add shll push je enter and mov sbb xchg ret sub xor in push and fisubr sbbl cmpsb jle push in and pop xchg adc popa xor lcall test clc into xor bound roll lods inc sarl pop dec insb mov mov leave cmpsl sbb xor cli jae xchg mov inc push xchg push imul mov scas mov stos imul mov sahf and icebp push pop out lea shlb xchg push push and out (bad) xor push pop scas xchg je cmp sbb ret xchg pop test xchg xor mov (bad) movsl adc mov in add fimul movsl stos test sahf mov shll mov xchg mov movsl dec xor fdivl pusha cmc rorb pop mov popl cmp add loope inc mov add pop lret push or inc xchg test adc (bad) fstpt cltd jae cmp and ret or inc xchg mov (bad) inc push mov sub pop fwait enter imul in arpl nop xchg xlat and sub fistp mov lret insb subb xchg adc sarl loop fadds inc test test mov ret das add sbb aaa push jp aaa push ljmp and xor (bad) in pop test push fst pop push mov xrelease add adc pop add cmp mov andl xor rclb std jecxz add mov test or xor pusha js insl popa addr16 insb insb add movsb add dec add insb insb sub ror ss loope push sahf fidivrl stos dec mov fiaddl es test or or add jle push push in minps xchg cmpsl dec lods jb and ret outsb xchg xor and nop or loop dec and popa fmuls adc mov inc xlat pop inc cld ret inc ret sub pop adc pop xor hlt inc sub sub out inc aas test sbb es les rcrb cs adc adc and push or scas inc xlat ret es (bad) lsl (bad) sti imull jmp fistl (bad) push mov push test cmp sbb add repnz data16 xchg jl loopne mov imul inc test in aaa mov sbb sti pop adc scas dec and and inc mov jno cmp cmp inc mov or push std jae ret jle adc inc add popa call lods loopne dec loopne inc pop test lcall test push xchg (bad) mov cmp adc push sbb test xlat push mov repz loope xchg je sub push pop sbb or push jmp fstl and fldcw xlat mov cltd jae cs int dec arpl and cli mov vmovaps cmp cwtl test sbb cmpsl fstl insl maxps das sahf subl xor mov sbb pop out pop xor mov mov lods dec imul push push sbb scas ss sbb add ss cmpsb mov test sub jge cmp push and inc fbstp fdivl adc jle nop pop push sbb stc push lds out mov sub adcb mull sub shrb jo jle (bad) adc call or push repz xor je iret inc mov mov ret jb leave lret fistp sub out xchg testl xchg xor lcall push clc push je sbb (bad) mov mov int jb pop int das out lods jbe fidivr outsb fnsave push add pusha lea je lea lea pushf lea call lea call pushf pushf mov pusha xchg push push lea jle jae movzbw lahf movzbw xchg pushf lea pusha movzbw mov setnp push mov lea bswap call pushf push lea ja jb xor pusha ror add jp cmp dec movzbw call cmc sub pushl pushf mov lea lea jmp aam adcb inc stc adc imulb out inc jb loop outsb mov (bad) pushf movsb add inc enter pop fwait push pushf fwait push sbb push cmp jg xor test pop mov cmc insb mov sub int3 (bad) scas outsl imul push rorb fsub stos scas inc push je out cmpl xchg xchg xorb adc daa (bad) outsl mov sti xchg jo inc frstor push std jb sbb pop hlt jmp aam movl (bad) pop repz mov push pop int3 and inc fisub xchg data16 (bad) xlat jbe inc add shr mov cmc call jmp out and or inc movsb dec fcoml mov or ficom (bad) sbb bound or sti cmp cli xchg push adc xor and dec aam jp insl (bad) push jne xor mov and (bad) mov decb lahf or into fldenv outsb push cmp xor mov ficompl icebp fidiv movsb mov (bad) (bad) xor (bad) out inc mov jnp aam insl add dec icebp out mov or iret aaa jecxz (bad) jo and aam mov push in outsl out mov jge and std xlat insb outsb jo fs pop gs add pop std std test xchg fs mov ret jae aaa ljmp xchg pushf mov pop fidivl xor and sbb add dec push and aam pop int3 add in sub movl mov xor es in xchg push mulb out add dec add pusha enter rorl push fisttp in or xor or (bad) je notb subb in mov sbb or jl mov xchg cmpb adc xchg lea gs add pop loopne jnp out arpl push xchg mov out jo lock addr16 int3 mov rorl jbe mov ficom lods cld cmp mov mov mov orl mov fucomp popl cmc and jne jle fidivl (bad) lock pop stos jnp lods mov push xchg cmp inc movl ret in or fmulp js stos mov iret pusha xchg fs pop mov inc das jmp mov mov out bswap stos xchg push fcmove fcomps xchg (bad) mov push lock ljmp sub push aas inc fistp jne push mov aaa out xchg mov jp inc and les sbb clc or add cs mov sub add adc pop leave cmpsb mov pop xchg sbb stos mov xchg cltd inc xor movsl cmpsl inc das fbstp ror das in out push sub and or add pusha lea call pushf cmc mov push bt call mov pushf xchg mov setae push mov movb pushl jmp pushf lea jne pushf neg mov pop shr clc call jmp call pusha movsbw rep jmp push push lea jne setge lahf movb setg movsbw ja push mov jmp mov pushf cmp pushf jmp cmp or mov shlb pop and mov push fcomps testb aaa jmp icebp mov dec mov inc cmp movsl shlb fsubrs nop repz outsl xchg mov outsb outsl outsb fldl into aaa ret imul shl cmp xor cmp pop jno push pop addr16 test cmpb dec loopne enter sub (bad) add adc xchg clc and fstps mov and mov stos xor dec popa mov ret clc sub imulb push xlat add or cs mov fdivr cs lcall cli and ret in pop leave pop pop sub mov cmp popa lahf jo jp dec push (bad) jns mov loope outsl out or fimull xchg repz sbb ljmp lds jno push insl stos adc scas les cmp lahf in cmp in bound mov sarl ljmp inc or cwtl cmp test jle sbb (bad) mov cmp mov adc mov xchg leave pushf test and iret sub push in push movsl montmul cmpsb add dec xor stos sub or (bad) loop clc faddl and jle push stos mov sub mov test push insb rcll stos int mov out mov (bad) pushl movsl popa ss out mov scas in cmpsb sbb cmp inc repnz or ret lret or sbb enter out nop daa ljmp mov gs sbb pushf jecxz mov jo lea (bad) test ret in insl xchg add mov repz vphadddq lea scas in int3 mov test ja sti enter mov mov xchg push int aas int3 cmpsl jae insl (bad) out mov or jo xchg sub (bad) int jl lret jge xchg and and mov xor lods enter fnstcw aas arpl mov pop and (bad) stos scas cmp dec jp add sub ja sub cmp adc mov mov adc sub adc shrl jp,pt cltd adc ljmp jb jge push cmp inc pusha (bad) mov movsl into xor test push inc bound (bad) mov je or mov xchg jb bound out pop mov sahf into inc sub jae push cwtl cmpsl (bad) clc push in insl call sub into fnstenv xchg jnp lret push stos pop mov outsl mov or sub cmp push mov jae cmc cmp testb imul movsl lret mov jge loope dec xchg push xchg xchg test push pop popf (bad) cmpsb cs mov pop repnz sub mov mov mov mov inc movsl lret jbe in cwtl lock repz popf pop (bad) xor pop out gs fwait push notb das sbb scas aad into push inc sbb pop cltd test es nop ds xor lods outsb xor repz inc movsl lret cmp scas xchg inc mov jae pop inc insl xchg ss add lret sub in cmp daa fsubrs jo adc aas dec push movsb or nop fistp mov inc mov mov sbb push or xor inc mov mov jp std les cltd hlt push cmpsl arpl icebp lahf (bad) dec or pop pop test push dec jg pop pop dec add pushf jns push or mov pop popa cmp mov sbb movsl testl push mov xchg xchg cli gs ds sbb test test test pusha movl jmp repnz dec jmp inc mov pop and outsb mov inc xor inc pop xor jl xor lods into sbb iret sub and das inc ret or xchg add xchg fwait jp cli call xor fisttp stc out stos scas lcall mov insb or test add jge stos sub loope fs sahf or (bad) xor push push and pusha mov test ror pop outsb add in pop loop mov aaa mov and int (bad) scas out mov pop jle repz (bad) mov in xlat and enter jl clc pop sti jo jo add jo xor (bad) ja (bad) out pushl lea jb jb stc cmp cmp inc mov lea sbb movzbw lea lea mov push call lea je ror dec setge push add movsbw inc adc sub inc bswap lea shr and bsf ror pusha mov stc inc jmp xchg fcmovbe cmpsl (bad) xor dec jl rorb cli sbb pushf push sbb cmpsb mov imul js ss pop fadds lock jo dec rcrb addr16 imul lods sub cmp pop xchg out pop cmpsb cmp mov fadds xchg mov int3 xor cmp sar mov out sbb adc xchg (bad) or sbb scas add jno mov iret pxor movsb fistpll aad inc dec dec ljmp xchg ret push sbb pushf lea jne pusha jmp cwtl call test or sub iret aad (bad) jae xor jmp mov jne sub roll mov es fwait and mov or aad push jg inc mov add jae iret addr16 inc or jnp inc inc (bad) testb dec loopne iret cmp and jg dec bound lea adc fcmovb add mov call icebp out xor mov ret gs lea jg mov pop inc jno pop arpl push or xchg push outsl sub add dec cld adc mov add adc loope cmp je rcr aas hlt jae mov jns int push divb push jo or and mov in outsl in jns jne cmp movb data16 push jo out adcl add scas xchg cmpsl arpl stos fmulp nop ljmp movsb sub (bad) je dec xchg cltd mov out or push leave enter inc rorb add das (bad) mov (bad) or add mov daa mov clc push je pusha xor xchg pop mov push insl aaa clc xchg xor fsubs pop sub mov mov roll inc aas (bad) xchg xlat frstor mov cltd dec inc into hlt cltd pop adc adc les push mov movsl and and pop mov int and mov mov rcll out inc cmp cmp aas daa mov pavgb jae int cwtl inc jne or pop xor add xchg jmp lcall jne lea ja push jmp jmp mov xor lds (bad) jno scas in fadds lock testb stos inc mov into sarb enter xchg sti loop cwtl push (bad) je pusha lods out dec adc call ljmp (bad) arpl sbb test sbb ret pop loope dec dec inc push mov adc negb push (bad) inc test push inc daa dec and jp aas scas std pop pop sbb test xor test dec shl cmp add mov inc cmp mov out int (bad) fcmovnbe pop lods cld mov out cmp pop loopne mov xor ffree fisub cmpsb mov in (bad) sbb in mov rol in dec pushf xchg fwait xor and je bsr add bt pusha sub ror sub bt shr btr sub call data16 inc aas push mov (bad) jo fsubs push mov cmp mov insl pop sub add xchg xchg dec nop insb add ds iret mov fisttpl adc cmp sbb and fldl out jnp aas arpl mov imul mov inc (bad) and (bad) test ret jae xchg fcmovu int or rcl sbb dec and dec into loop jno scas xlat dec jnp out cltd dec scas lcall push psadbw mov stos test ret sub dec pop mov jecxz into and sub daa loop test sub test loopne mov stos push pushf stc mov call pushf mov icebp or loopne outsb mov (bad) mov popa cmp out cmp adc lahf loope and mov xor cmpsl arpl push lea adc xchg mov pop mov jmp inc mov pop mov fsts dec notb lods mov enter mov pushf movb push lea jmp cmpb jne shll shll push lods not sub ror not mov pop ret clc push aaa loop or frstor mov popf mov repnz pop sub xchg (bad) jle or jno mov xor or subl xchg pop out adc ret add loop push lds loop mov dec mov lods jne movsl cmp jb jecxz std call mov daa cmp (bad) stos sub push addr16 sbb cmp cmc into lock push adc fiadd std or sbb cmp cmpsl pop mov (bad) insb ljmp mov cmp and loope xor and push xchg test jle xchg xchg fdivrs in lods lret cmp adc wbinvd scas int pop lret ficompl mov jns mov jg outsb and negb adc cltd and out aaa jne stos jns cmc scas dec gs inc push mov mov inc in ret dec adc mov cltd mov xlat push inc fs (bad) enter out inc push popw ljmp popa outsb test sbb ficomp and add aas ret mov cmp jmp pusha mov pop es jecxz mov ret scas or repnz pop inc stos push mov push pop mov sbb loope and repz rcl lock cmp sahf cmc add (bad) out xorl je adc mov cs (bad) je push cld mov addr16 loopne xor sub cmpsl pop movsl and xlat aad jb leave jecxz ror je inc mov ljmp xchg icebp loopne jae inc pop pop push jp,pn cmp inc enter ljmp int mov add call mov push int3 outsl fcom dec xchg push clc dec mov cmp cmp add and inc jle daa inc (bad) pop incl pop fild data16 push mov sbb inc and sub sub (bad) push in (bad) decl divl fdivp rol (bad) leave mov xadd cmp mov dec add sete xchg movzbw setl setb pushf push lea pushf jmp pusha adc jmp pop mov inc shrl dec das cmpsl outsl popa xchg adc dec cmpsb sub xor cwtl mov add outsl outsb mov mov add test dec mov sub pop sub insl lcall mov js (bad) fsubrl dec jo leave jp sbb imul inc mov xor add mov jmp jne mov inc mov jno dec pop pushf xchg and lahf lahf lods cmp flds pusha inc cwtl ds mov sub add in movsb test add loop mov bswap adc int cmp std adc mov leave cmp fs ja push lea call jmp scas dec sub mov pop xlat mov jmp xor lret adc pop inc cmpsl outsl popa sahf out dec inc and pop sub push and pop mov dec je jb xor sbbl incl das cmc arpl hlt sub out leave loopne mov and fwait testb mov cmp adc or adc insb iret push or pop sahf add add and or outsb cmp or imul mov insw sub in ret test subl test cmpl sahf fidiv (bad) sub call jae add call jb mov shl lea call add pop ret push mov push sbb pushf pushl jmp push lea jne cmp cmc stc bswap mov rol pusha sub not lea cmp call push movl pusha movb pushf movb lea jmp lea jae add btr pop sbb movzbw pop sub mov mov shld cmp pushf mov pusha jmp lea call btc add xadd aam pop sbb btc shrd pop pushf stc cmp pushf call pushf cmc test mov mov call lea ja clc imul test bt bt add pusha pushl lea jmp fmul dec cwtl clc or push pop enter inc cs add pusha ss fmulp inc pusha or (bad) or fmuls cmp adc insb clc pusha ljmp mov dec cwtl xchg dec jnp mov lret aad mov ja mov (bad) jp lods mov xor mov loopne inc pop lock aas mov inc lret jns orb cmpsl adc test dec (bad) ljmp inc xchg shlb fmul push xor jmp jle push (bad) mov inc push out addr16 insl mov push sub pop inc sbb pop push jne push (bad) push mov cmp jne in repnz mov sahf cmp outsl push mov mov mov cmp pop mov push or (bad) sbb js mov clc pop in imul jg pop lods xchg jae ret out cmp push inc xchg sub xor add imul inc rcrl rcl xor xchg in xrelease jno xlat push cwtl lret outsb mov mov sub or rcll pop ljmp call aad sub or in repnz push or hlt in sbb hlt jbe sbb sub mov call aad adc cmpsb jl pop shlb push mov insb mov (bad) dec movsb insl mov mov fbld pop cli push lods out test pop data16 shll fildl shl xorb notl ljmp lret xlat mov lahf xor in adc inc cmpsb and movsl mov mov sbb xchg insl mov push movb mov sbb (bad) scas mov (bad) movsb addr16 xchg mov loope dec xchg fstpl lret sbb in mov lods lock movsl adc div push pusha jg aaa xor sbb xchg (bad) movb pusha lea call ja rclb or (bad) adc adcb fs pop adc and into and (bad) xchg negb testl lret aam inc enter jp mov lods adc add pop pop pop mov inc sub jp mov add sbb or xchg xor aad lock in or pop aaa notb ror pusha jnp jg es dec mov rdtsc lock sti xor mov xchg add xor sub sti pusha daa cmpsl push fstpt dec pmaxub out push mov (bad) fldenv stos sub fisubrl stos dec cli pusha repz add or les push test jecxz sbb jno or popa cmpb (bad) jae pop mov dec lea jnp jnp and mov push adc sbb jno ljmp (bad) int leave and xchg hlt sbb sub mov fldcw cmp sub aas cmp sbb cmpsl iret push mov in mov idivb mov sbb inc int3 jns mov pop xchg cld adc arpl daa dec out sbb jne mov and xor mov repz jnp pop mov das push call lret cmp test es xchg test push xchg aaa sarb jmp leave pusha sub cmp add dec mov xor lods or push lods jne out add test fcmovu dec pop scas xor stos pushf pop pop lret jl cmp xor inc mov fnsave clc decb xchg arpl sub pop dec mov or pop mov xor lea pop fdivrs pop fisub sarb imul sbb mov jbe dec push mov out std test push sarb and lahf adc mov mov jb lahf fisub enter or js dec repnz adc push cltd push out inc jl (bad) popa pop push adc sti inc mov push mov testb lcall test lock jmp outsb xlat pop sti mov jo pop in fld push sarb inc adcl ret cmp dec out jbe (bad) ja insl js or jl es loopne xchg jo and lods (bad) xchg xorb fs push inc daa bound mov pop pop stos frstpm(287 pop shl std push orl mov leave sub stos xor (bad) push mov sub pop nop jp add xor jnp jne cmp out push add iret ret jnp dec sahf dec sti jns push rcll data16 jg jecxz mov or push inc movsl pop in jne fistl dec out sbb or or pop add mov bound lret mov icebp mov inc inc inc lahf dec rcrb adc dec inc gs outsl insb fs popa je inc add bswap pushf pop mov pushl jmp rcr insl push push inc sti pusha jle (bad) into in add cld lods sbb pusha xchg call push sub (bad) and and test ret or fistp iret adc movsl mov mov cmc mov loopne xor cmp rolb into inc sub aam xor xchg sti lret lock lahf push jecxz mov popf lock jbe mov dec out daa idivb addr16 mov mov cmp and mov outsl movsl xor repz push inc lahf mov or and sub bound lods call jecxz hlt adc add pop xchg jecxz pushl ret push lea jb lea mov cmc mov test push stc shr pusha adc test cmc bt stc sub stc shl pushf call mov (bad) sbb dec jge test xchg push stos mov pushl push inc jmp movsl insl inc jecxz mov stos and fs add addr16 add push jns pop adcl imul jecxz mov adc nop jb inc mov fdivrl push pop mov int3 (bad) ret out jge or xor mov mov push cmp push sub mov push or or jnp cltd jecxz mov mov das mov push lea jle sub aaa pop scas aad shrl xchg xor add inc cli and rcrl scas cs mov sbb outsl imul (bad) pusha outsb test or lock push clc push test mov sub cmc push xlat dec (bad) xchg add inc mov es cli movsl lahf ret rcrl mov gs and aaa cmp arpl mov mov pop test mov cmpsl aad adc lds (bad) stc jnp sub mov mov push fsubl or pop jno xlat inc cmp add inc jg and rclb cmpsb lret call pop ja in mov or xchg xchg nopl xor jno or cmp push outsl incb in mov jae add dec xchg jae mov cs stos push pop iret aaa lods or out cld xchg loope xchg fs add dec enter and scas or repz lds inc int3 jnp daa pop in insb cmp scas inc insl cmpsl sbb in imull push inc out imul cmp lds pop (bad) xor mov push pop divl movsl loop inc mov ret push inc out adc pop mov pop pop cmp push imul mov xchg xor xor push cmp sbb xchg mov or loop scas inc push cmp add in lea aas popa outsl mov cltd stos test out movsw test shll in lock lahf add cltd (bad) xor loop fiadd int3 (bad) jp sub ljmp adc xchg into mov inc imull push jecxz lock (bad) jbe rclb sub jge aad or or ficom mov xor test inc stc jmp inc incl setae jmp loope mov arpl shl xchg jo hlt es call cmp mov vsqrtpd fs inc gs adc lcall psubd repnz adc push lcall adc fbld out cmp inc fldcw (bad) sarb or nop or stos and pop cmpsb (bad) xchg test inc lea je repnz mov xor sti pusha sahf cmp fidivl ds or test cmpsb std aaa stos stc inc inc mov rclb add sub test jg adc push inc add scas (bad) stc test fwait stos pop inc inc loope dec cmpsl out sbb adc add jl sbb jae bound and push pop aaa xlat xchg movsl jecxz shrl add adc mov cld mov ljmp or mov cwtl (bad) add rcrb movsb iret xchg outsl dec pop xchg inc mov popf fst pop add cmp loopne ret mov fldcw xchg (bad) ljmp ds cli cmpsb sbb mov cmp jnp shlb cmc (bad) push ds pop clc (bad) cld in repz add shll jbe push lret repz mov xchg loope out pushf add push adc mov dec xor fstpl ret mov sub sbbb add dec cmp push cmc mov sub leave in les bound in orb sub mov dec mov push add pop or mov cs sbb sbb loopne icebp or sub out sarb mov push and call aad pop aas xchg push shl adc add sub in popa fdivr arpl xchg mov or dec test shll lea xchg decl (bad) lcall pop fdivs sbb movsl aam mov add cmp aad stc mov jle dec xlat cmp stos les imul loope jne fcompl je adc lahf mov push fidivl dec dec ds push and lret xor sbb es (bad) jno jns sbb and mulb push pop idiv addr16 stos (bad) adc test pop shrb aad fdivl or add push andl aad sub clc pushf bt cmp pushl popl clc cmp pushf pushl lea ja sub sbb neg call pushl lea jae stc bswap mov inc mov pusha mov cmc test pusha mov sub jmp cwtl bswap sbb lahf lea mov lea lea pop bswap not setge mov pushf pushf pusha jmp push pushf jmp (bad) fs jno cmp cmpsb test push sbb stos add mov pop (bad) jo pop test js xor push or aad in add add mov push aas push (bad) out fidivr les nop xchg in and xchg iret popa popf jb pop and pop mov js notl mov pushf sub sub push add dec and inc adc dec jg mov fistp inc mov fsubp gs mov ja mov inc stos pop mov push ret mov cmp (bad) xor or inc ds xchg mov inc push mov outsb lds jns add (bad) dec add inc and mov pushl pushl ret pusha sbb stc lea cmp xchg shld xchg call push mov and push inc xor xchg jno arpl pop sub push call mov lods mov xchg (bad) cld (bad) divl xchg in push call in ficoml popl js xchg push add imul ror iret xor lods ret dec jbe xor in and das or push sbb sti add or call pusha jmp sub inc setb sub add pusha bts mov clc neg mov pushf push pushf cmp repnz pushl jmp imul sbb pushf shl cmc lea bts lea shrd bsr mov clc xchg cmc btc mov jmp mov mov push bt pusha and pushf pushf add push mov pushf lea jmp call push jmp call gs stc insl or inc sti lock leave leave mov in icebp cmp inc cmpsb add mov sbb data16 les (bad) into pop mov jl,pn mov xchg cwtl hlt lret ljmp dec inc ret test mov cmp movsl cmp mov adc imul mov push data16 (bad) stos dec les mov mov sub lds cmp or dec and sbb sub inc sub xor loop lock xchg aam imul int jp clc fistl movsl jg jl dec mov int int3 bound test mov inc clc mov lea aam cld (bad) adc fidivl ret mov push jbe,pn push movl push push pusha pushf lea jmp mov lea pusha pushl call add dec outsl arpl inc jb add add shr and (bad) (bad) cli loop xchg or inc leave (bad) in movsb sbb inc movsb mov cwtl fsubl mov sbb push lret mov incl cltd sbb cli xchg fs lret fnclex dec adc test mov orl sbb adc jo les (bad) mov jbe lock movsl xchg sub sbb cmp mov fwait jnp rolb push pushl mov enter fistl ficoml push push in cmp test jg jl int3 bound mov pop xchg out jne enter inc fwait sub stc dec push in cli mov test imul leave js das and pusha and or shrb mov (bad) popl pushf pusha pushl ret add inc js je jb arpl jae sub mov or inc mov ror enter mov and dec dec inc mov cmpl or jecxz push sbb test movsl dec mov inc cld adc movsb inc les mov fdivrs aaa lea sub add jo inc cmp push fstp or mov inc cltd fs add inc sarl push inc adc sti stc ja sub adc dec xchg test sbb xchg test rclb pop divl mov fbstp mov fistpl sbb test loop lcall fimull mov push jl xor and scas pusha call pushf mov pushf adc pusha bt sub movb shl pushl jmp pop (bad) je or inc (bad) stc xor bound je hlt (bad) insb cmpsb les (bad) mov mov cmp dec imul xchg int3 (bad) pop in mov (bad) or dec mov adc and lahf add js push adc xor leave mov and popf mov mov lcall push icebp pop push lea jae stos mov push std xchg push xlat addr16 cmp pop push outsl push roll cmp incb and pause push mov movsb roll cmp adc pop roll outsl fwait inc xchg divb (bad) mov test aad or add popa and push loope sbbl loopne (bad) cmp xchg call fldl imul xor test or push bsr rol mov pushf cmc cmp pushf pushf lea ja mov pop jmp test rcrl push inc inc das fcmovne fsts add imul lret fisubl inc lcall pop inc cmpsl xchg mov mov or inc pop inc pop repnz pop sub pop jns ljmp pop push cld inc outsb not dec loope sub jbe pop sbb pop inc sub add js push and sub (bad) mov cmp cmp data16 mov adc enter xchg xor jmp and inc div sbb (bad) mov fstps cmp lea lahf cmpsl and mov out test inc cmc out lock dec mov gs cwtl aam lds fdivs fwait lock jno mov inc ret bt pushf shl pushf call pusha lea jb movzbl add adc btc cmp not pusha bswap lea sbb pop pop not lea mov mov pushf pushf call imul pushf test add movb pushf lea jmp mov cmp pushf jmp jne gs xor fs insb add mov cmp cmpb pusha pushf lea jne pushf push lea jmp push mov push pushl pushf lea jmp pushf lea je clc add pushf push cmp pushl pusha lea jb pushf push bt cmc cmp pusha push push lea jae setno jmp dec cmpsl je push push inc mov push xchg push xor sarb sbb (bad) lret out mov inc fist loopne xor ja xor hlt bound enter inc and cmp arpl or in stos (bad) ret sbb out cmp mov inc mov insb jge or (bad) and sub add rorb repnz dec cmp rep jle,pn fcmovnu push imul adc cwtl mov int3 out lods clc sub in mov inc add call shlb es pop pop sahf dec ss add loope sub int3 sub shrb jge ficomp lret push mov (bad) in ds shl cmp test cwtl xchg jl mov out iret push mov cmpsl jnp sti adc rol ljmp cld dec cmpsb ds aas mov cmp lods dec jbe sbb or mov jns fcomps ds movsb ljmp mov mov sbb dec shr scas hlt mov iret sarl xchg scas ret mov or in out fwait ds sbb xchg (bad) addr16 ret inc sbb mov xor inc adcb jle mov jns mov jmp dec cmp cld xchg cmp xlat pop jecxz mov icebp jb jle or inc int test repnz ret aad repnz (bad) hlt arpl outsb std or rolb outsb lods jmp or ficompl pushl mov lea call jmp xchg pop sbb mov dec outsb mov daa imul push lods test inc nop imul mov sub into jmp sub cs jo jae dec sbb (bad) es sarb cmpsb add adc insl mov ds xor cmc jo xchg xor icebp hlt fwait aam pushf test jle,pt push (bad) lds push xchg or jns clc test push dec aam adc lods jmp lods enter mov mov push iret in lds scas push aas rolb lds rolb adc inc pop xor pop or push sbb and rcr xchg cmc adc jmp data16 or fsubr xchg (bad) push sub pop roll jns sbb jnp sbb arpl pop cmp pop into jle sub jne lods cmp push in loope stos cmc push xchg (bad) adc aam jl addl push inc xchg push add mov mov xor rcrl fldenv mov jge out scas mov add popa shrl xchg call and rcrl aad popf jne sbb sbb mov xor cmp adc (bad) cmc dec dec int bound push movsl sbb xchg (bad) dec cwtl sti inc sti mov (bad) std ja ss pop lea into mov lods jmp jne cwtl lds sbb je fucomip mov and fisubl jo dec mov fadd mov and xorb outsb cwtl pop scas sub pop mov gs inc xchg or movsl aas or adc cwtl mov add enter mov scas xchg jo sub insb test xchg outsb add mov jle in mov inc mov aaa out pop pop ret lcall and xchg jge sahf (bad) pop enter mov sbb cmp mov pop sbb pusha hlt int3 mov ror aad adc (bad) in insl mov sbb and test cmpsb inc loop dec gs adc push ljmp xchg out fwait lock cmp std or repz test mov lahf out rcll and fisttpl lods inc mov popa scas es pop les push sbb mov std pop mov mov stos inc add mov out pop add in mov jns and dec jecxz out out mov add (bad) dec mov test loopne mov movsl pop into mulb cli push aas sahf (bad) cltd (bad) test lahf jle inc pop cld xchg call mov lea jo push pushl lods pushf cmc pusha clc xor jmp pusha mov btc btc add inc lea clc mov neg add movzbl movl btr btc shr mov add pusha mov cmp jmp movl pusha mov pushl pushf push push pushl ret push (bad) jl adc inc negb fstp stos outsl jg inc and inc mov dec jnp (bad) call repz pop push adc loopne scas lret stos nop pop test push fnsave sbb dec xor pop clc jnp js sub cld inc push pop push dec imul push mov mov and outsl into sbb fsubs mov fsubrs hlt push test adc dec test mov ret jge sbb and stc out pop out into (bad) mov repnz xchg push test lods mov imul sarb sub repz dec xlat xlat in popf (bad) out add pop dec dec lret push stos sbb sbb lock sti cs pxor push cmp mov test in sbb sbb cmpsl xchg cmp inc mov jb adc mov lds mov mov mov adc add mov sahf mov or mov xlat and adc inc mov (bad) in cmp rclb loope iret inc sbb push (bad) stos push daa hlt cmpsl push mov loop fadds mov int jp inc inc into lds loope push inc cmc sub add movsl mov icebp stc mov xlat inc imull loope adc scas jecxz lret inc pop dec sti (bad) ret aad mov jne xlat jle pop xchg xchg in push out (bad) addb insb leave dec cmc sbb xchg mov xor loope mov pop adc mov popf jns mov xlat (bad) xchg inc mov mov xor rorb mov mov sahf sub test cld pop pushf jmp rolb push flds into mov sub movsl aad pop xlat mov mov lea jo mov dec jae addr16 insb mov mov dec jmp fadds cmp mov dec es int bound movsb xchg scas in xor adc add inc gs imul outsl outsb dec outsb outsw push imul (bad) mov pushl pusha pushf lea jmp bswap call push push mov pop lea cwtl lahf mov lea xchg bswap pop mov mov call pushf jmp test cmp pushf lea je pushf cmp push jmp test int3 push push inc xchg push sub fmul mov ljmp mov sbb jb mov (bad) fsubl dec dec push mov xor jmp push insl xchg add (bad) lock (bad) rep call sti pop test pushf and iret and leave fmuls (bad) icebp jecxz ds xchg aad xchg xchg loop push (bad) mov cmp xchg (bad) mov bound mov add mov ffree jl add sbbb fdivl iret mov aam mov adc cmc sub test popf or xchg rol push mov sbb leave sub push xchg decb mov (bad) movsb dec mov push fdivrl cmp pop repz rcrl inc aad mov dec (bad) cmp push fisubrl push (bad) inc and pusha and inc cmpsl aas divl stc or inc (bad) in fiaddl push icebp mov fisubrl mov mov sub dec mov sbb and aas jp lea clc xchg sbb pop leave cmp mov pop xor sahf dec shrb rol imul push add cmpsb cmp mov cmpsb adc push fisttpll inc sbb testb jae imul push cmp dec inc xchg sub sub push movsbl mov sub jb cmp jmp sub movl repnz movl movl movb lea jne shl rcr test mov pushf sub shrd mov lea lea clc push mov push sub call jmp xchg jle add push inc in repz sub jnp lahf mov pop or jecxz jne imul jb add pop out pop int mov lcall xchg imul cmp leave popa (bad) in aad aad loope clc sbb fidivr leave loopne dec fs test mov jns bound jbe bound cmpsl xlat mov push cltd xor xchg out mov cli (bad) arpl push or addps out daa insb inc test jle ret pop jo sub cmp sub pop add push lcall imul mov dec xor cs insb add pop mov and jmp adc popf inc sbb inc sbb pop sub mov jmp mov outsl ja xchg jns mov push and in dec ret mov iret stos loopne in stos mov adc adc rcll cmc inc nop dec or int cmpsb addr16 stc aas pop (bad) fwait mov fiadd cmc add push rcl and add or arpl sub push mov hlt cmp cs xchg dec mov aad mov (bad) (bad) je push jl and push inc mov int lods cmp mov jo pop (bad) xor fadd dec or adc test popf outsl inc lods test popa or dec popf sub sbb rcrl push bswap lea call bound push movsl jecxz iret push mov and sbb clc insb iret ljmp pop fistl mov fs push daa mov cmp (bad) lcall jnp aaa xor not push lods aas je mov cmc mov pushf inc out and cmp add xchg or (bad) push int std jnp and or jae dec mov adc roll mov in and pop cltd mov sub push lret pop lock fldt fcomps jge dec mov sub shll aaa (bad) daa sti sub adc xchg lret mov dec rcll out mov andl in jae adc popa lea jae je lea bswap lea jmp call call add add pop add add xor xor adc mov jmp xor xor xor xor push ss cmp cmp cmp sbb cmp xor ss cmp cmp cmp into cmp cmp repnz add add pop add add xor popa xor stos xor mov sbb xor daa ss ss cmp cmp cmp cmp cmp (bad) cmp cmp cmp cmp int imul ds aas xlat aas add add adc add mov xor xor xor xor xor xor outsb xor js (bad) xor xor xor xor xor xor xor xor xor xor xor xor xor xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor pop xor sub aas xor push xor addr16 jnp xorb xor test mov mov mov xor js stc ss aaa jle xchg aaa or push cmp cmp cmp cmp cmp cmp cmp cmp cmp mov sbb cmp cmp idivb add add add add xor xor xor mov xor xor xor xor xor xor bound das ss ss ss ss ss bound imul jle xchg mov xchg mov ss (bad) ss ss in cli ss aaa das aaa ds fdivl in divl add pop cmp cmp cmp cmp cmp cmp cmp push cmp xor dec cmp cmp cmp inc cmp cmp cmp cmp cmp cmp cmp insl cmp cmp cmp cmp cmp cmp cmp aam add daa ds movsb ds add popa aas add add add xor xor xor xor ss cmp and cmp lea cltd cmp add mov aas loopne out out aas sti aas add add add add add xor xor xor xor xor xor push movsl xor xor xor xor push xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sub das xor xor xor xor pop xor jl xorl xchg xor xor jmp pop xor xor xor xor dec xor jno js xchg les stc xor je (bad) ss cmpsb cmp cmp cmp cmp mov xchg cmp cmp cmp adc cmp mov cmp cmp cmp daa cmp cmp cmp cmp cmp inc mov xchg ds out ds ds jle add add fs xor xor xor xchg xor xor aad ljmp xor cmp (bad) aaa (bad) aaa or and xor cmp ja (bad) cmp cmp cmp cmp cmp mov xchg cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp scas ds aas inc aas push aas mov loopne add add add mov xor xor aaa mov cmp cmp cmp nop add in add add xor xor lret xor sbb xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor xor sbb lea mov mov xor inc ss ss ss ss ss ss ss cmpsb lods ss mov mov aaa data16 outsl aaa mov (bad) aaa stc aaa add inc cmp pop cmp jne xor cmp pop cmp cmp cmp cmp cmp cmp push cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp pop cmp dec ds ds jno,pt jbe xchg mov ret or (bad) dec aas dec aas push aas pop aas popa aas data16 aad fidivr in add add add insb xor mov xchg xor dec xor jge xchg xor xor xor xor xor xor xor push xor xor xor xor xor pop xor xor xor jl repnz dec aaa je (bad) aaa bound test xchg cmp cmp cmp cmp cmp cmp cmp cmp test mov add add lahf xor xor xor ss aaa insl aaa in pushl or aaa cmp pop cmp cmp cmpl adc dec cmp mov cmp (bad) cmp cmp cmp cmp cmp cmp add add inc add add xor xor xor outsb xor xor xor xor xor xor xor inc xor ss ss imul push cmp mov add add add and add add pop add add xor xor xor xor mov xor cmp cmp cmp movsb cmp les int3 cmp cmp cmp cmp cmp cmp cmp enter sarb add lock int3 add add cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp mov cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp or add add js mov mov nop ss ss mov int3 fdivl loopne hlt ss or or adc sub cmp inc aaa je jl test mov nop aaa movsb aaa lods aaa (bad) aaa loopne add and inc cmp cmp cmp cmp cmp cmp cmp cmp jo jl cwtl cmp cmp cmp cmp cmp xchg cmp cmp cmp cmp cmp cmp cmp add sbb add add sbb inc xor xor xor xor xor cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp cmp cmp cmp cmp nop cmp cmp mov cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp cmp or or adc adc sbb sbb and and sub sub xor xor cmp cmp inc cmp cmp cmp cmp cmp sbb cmp cmp cmp cmp cmp ds ds ds ds ds je,pt cwtl ds mov lods ds mov mov ds sarb aam fdivrs fdivrl loopne in call add add add add (bad) adc add add add mov aaa push cmp add add add mov outsb xor test (bad) aaa fidiv movsl cmp cmp hlt cmp cmp adc cmp mov ja,pt add nop add inc add add xor cwtl xor xor xor xor push aaa inc aaa xchg aaa add and leave cmp imul sub dec cmp je add add add repnz xor xor xor xor out ss mov cmp cmp cmp cmp cmp inc ds outsl aas add add add adc xor xor fdivs fnsave test cmp pusha cmp cmp cmp cmp cmpl ds add add add dec add add xor xor xor xor xor xor jle ja scas xor xor stc xor out adc dec aaa xchg aaa repz push cmp fnstcw or push cmp cmp push jg,pt add add add cmp add push xor xor xor xor xor xor dec cmp cmp mov add cmp cmp cmp test sti ds aas add add inc add add xor xor xor xor xor xor xor xorl cmp cmp cmp cmp cmp cmp (bad) cmp scas aas add add push add add or sub dec xor xor xor xor xor xor (bad) lods aaa xor jg add cmp cmp cmp cmp ds mov aas insl aas test mov jmp add add dec add add add mov xor xor xor xor xor xor and ljmp cmp cmp jecxz scas cmp cmp cmp cmp dec aas arpl add add dec add add xor xor xor (bad) xor xor xor xor xor xor xor divl jl inc cmp inc cmp cmp cmp cmp xor sarl stc aas add add add inc add add xor cltd xor xor xor xor xor xor xor mov ss ss aaa call cmp cmp cmp cmp ds jp sarb add add add inc add add (bad) xor dec xor xor xor xor xor ss inc aaa leave aaa jecxz jge test (bad) cmp cmp mov cmp cmp cmp idivb push aas add add add add mov addb adc add mov aas add add add cmp fnsave cmp mov xor add xor xor xor xchg mov out ss cmp cmp pop cmp cmp cmp cmp cmp cmp enter ja add add adc xor imul (bad) xor xor mov sub nop cmp cmp cmp cmp cld cmp cmp outsl ds ds aas nop aas scas aas add add add pop xor xor xor nop xor xor fdivs fwait xor xor xor xchg add jp xchg aaa in (bad) cmp cmp cmp cmc cmp cmp cmp cmp cmp idivb sub jbe sahf aas sti aas add add adc add lcall xor add pushf xchg xchg rcr call mov or jecxz push fdivl sti enter push add mov push lods popf das jmp js into aam movsb ss jb cmp enter and imul mov jl dec jb daa jae arpl mov in xchg mov or popa sub xor (bad) mov xchg stos pop shrb cld cmp roll jl adc pop ficom cld loope fild dec xchg test fstpl lock ds out lock or call push cld mov push frstor sbb push jnp add in or scas int3 cmpsl jmp xor popf pusha push jno in push push fwait js pop dec sub (bad) dec outsb pusha jecxz test dec push adc int3 mov aas lods mov incl outsb and adc add adc sbb repnz mov leave hlt adc mov jno mov push xchg push inc sub push faddp pop push inc push int3 inc (bad) pop push push jp inc push les aaa mov pop aas cli dec xchg adc mov pop popa mov fadd xchg jb cltd sahf sub fwait mov inc sbb test in fdivrl sbbl mov lods scas ja cmp pop loop aad shlb mov aaa push int3 sbb mov insb icebp pop push xor adc pop shrl jmp mov lock jb cmpsl mov fsubrl sti stos in or jae jecxz stc mov mov or (bad) int3 jmp sbb (bad) mov mov inc jecxz nop pop jp inc in or ja adc mov out fistp lahf lock mov (bad) insl jns mov pop (bad) mov call int lret dec and sub (bad) pushf or aas mov loope lcall inc pop (bad) gs dec movsb mov call and scas imul nop push dec cmp cmovge jbe aaa jg xchg pmulhuw pop jecxz movsb imul out (bad) push mov shrl jecxz push subl lods jo xchg mov rcl sbb jle mov ret mov dec xchg bnd mov xchg push addl ja jbe out int3 loop xor jmp fwait test roll jno mov cld mov mov fcompl ret push int3 sti rcll jb clc xlat pop shll jp sub scas pop ds mov mov push imul fdivrl inc roll mov pop lcall aad xchg (bad) add jne sub pop push or and inc push add repnz sahf in dec (bad) xchg fdivs ljmp jecxz add mov and push fildl cld popa mov movaps mov in mov mov rorl (bad) mov fs sub push notl div orl stos loope cld adc cmp cmp repnz dec fisubr push icebp cmpsl inc stos fidiv mov lods xchg lahf bound push mov and and fisubr insl js lahf xor outsb mov repnz (bad) jp cmp pop mov movsl fistl dec sti nop push ret frstor mov xor (bad) cmc adc inc mov int sub or mov jmp adc adc shrb and cmpb pop imul fiadd pop jmp xor std in lods loope jbe test out (bad) add push cltd scas fisubr dec rcrb sbb add xchg or mov xchg jp scas inc icebp fdivrl repnz loopne mov gs std jmp adc xor inc fildll push fisubl fisub push repnz sahf push lret push test mov stos gs sub mov sub mov mov mov jnp jmp imul add inc in jmp jecxz std imul cltd jmp in movsl (bad) xchg lds mov xlat or daa int3 frstors push cmp inc pop out push mov (bad) mov xor mov jbe ljmp in xor pop scas test and (bad) push xchg test ja mov (bad) adc fwait (bad) fbstp (bad) in ds inc js mov xchg jnp,pt sub insl nop loopne mov inc es pop setne testb jge add and sti dec (bad) mov jmp xor call adc cmpsl inc pusha fdivrs insb mov ja jge mov subl pop ja imul dec xor push lods pop and fs es in or push movsl mov mov cmp push ds adc mov and arpl dec in (bad) jbe gs pushf mov into addl or out push ror inc sub xor pop loope jne imul mov sbb and xchg xor out add and mov inc (bad) int mov loop enter mov data16 roll or loopne inc xchg mov mov stos push addr16 inc out pop lahf outsl (bad) sbb decb push jbe sub clc mov xor dec mov adc (bad) cmp test pushf lea call pushf jmp pusha je lods aaa push inc repnz jno dec popa xchg cmp dec inc ret sub xor jb stc xor dec cld sub dec push inc cmp xlat inc sahf out push int test sbb lds lock mov (bad) pop aaa mov ss xchg lea inc imul push pop sub jae loope cli jne push popa or ficomp push pop fdivrs dec xchg data16 insb sub lret lretw into jge test or call mov jle imul in pop (bad) (bad) push pushf hlt inc ljmp bound mov into push fldcw (bad) pop call or insb mov loope fiaddl repz sub (bad) xor inc les fwait repz mov mov add sub push push or inc out xor scas das (bad) jb jo ret fidivl adc rorb lods sub mov pop sub push xchg inc dec ss sbbl iret sub lret push imul pushf std fcoml push fadds dec ss fwait mov or xor xorl inc pusha (bad) arpl push xchg adc (bad) push mov push xchg jp jno cmp aam add outsl aam sub fldenv stc pop (bad) xor inc shrb pop (bad) fidivrl push push test cmp pop enter push lock fcmovbe pop mov add (bad) push mov out jnp cmpl dec iret and clc ss push fmuls sahf mov jno mov push aas jmp push lea fidivrl (bad) cltd sarl into jle push in and popf jle or and lock mov je cltd xchg ja dec xchg cld sbb cmp add aas into dec std push cmp arpl cltd jecxz (bad) sbb inc xchg xor inc jp jge add int test aad daa xlat (bad) int jmp scas mov out out mov xor jb xor scas test or enter cmp out inc jecxz adc hlt mov dec push and pop test pushf xor out jp sub jb pop popa or inc out or push lea jb bswap mov jmp xor push jmp mov lea jb shr clc adc cmp not cwtl bswap mov push push lea jb btc (bad) lock clc sub not setp mov call dec insl cmpsb jae push inc sub (bad) imul mov xchg imul push lock ficom inc rclb fdivs dec inc pop js dec data16 rcrl repnz adc push ja and or inc inc or lods xor in sbb sahf push rol mov adc dec push xchg ficompl fimull ljmp outsl mov (bad) cmpsl push xchg pandn or adc push push pushf (bad) ja notl cli enter addr16 imul add mov scas mov xchg dec or lds xchg or hlt in (bad) xor hlt stc jmp fdivl push call stc scas cld test daa mov leave push enter push inc scas sbb sub cmp add inc mov pop mov push xchg push or inc repz mov ss mov add fstpt pop in xchg test adc out (bad) insb ret inc aas out outsl add aad (bad) mov sbb add mov sbbb pop adc loopne and jno cmpsl (bad) mov sub sbb push mov cmpsb (bad) pop test and inc adc addr16 pop in xchg mov jle or lea fs sub imull call js or shlb and inc lret subb nop jle jmp cld sub cmp loop mov and adc out xchg loope js xchg mov sub cmp lcall jg jmp xchg inc dec xchg repnz cs sub lret ret pushf jbe adc jle (bad) and xor adc jne sub pop icebp imul mov movsb cwtl xchg mov repnz jnp sbb cltd shl and mov push repnz call jmp mov or sub inc icebp mov (bad) lock out and inc xchg popl lods push push sub mov movsl sbb sub push (bad) imul cltd pop push cmp aad mov mov clc push test (bad) daa xchg sub sbb cmp mov or test pushf adc mov xchg fsub mov add mov lods and addr16 leave stos mov mov cwtl sub jnp arpl push mov frstor cmc sarb or sbb loop or xor mov js (bad) dec (bad) jp pop mov out adc daa ret push scas scas push push out (bad) movl xchg (bad) fistpl xchg imul lea je mov bound and lods sub (bad) imul mov jle ret (bad) or xlat repz ror xor jns js enter insb cwtl cs dec xchg sti es dec sub out push stc mov push push pop jne mov lock mov out (bad) in mov xchg sub inc sarb add dec movsb mov jo je popa mov jnp mov sbb pusha sbb inc insl insb xchg rcll loope (bad) jo cwtl into test (bad) xor sbb loop (bad) push imul inc mov mov nop xor fsubl mov add push sbb jo (bad) mov add lods sub sbb call insl sub test ret loopne std arpl mov fisttp xchg scas mov pop fsubl (bad) pop inc inc cmpl mov stos (bad) cmpsb mov push icebp movsl add gs lahf mov lret mov mov stos lods gs sahf cs cwtl imul inc in lods sub xor jae mov out scas cmp mov loopne inc (bad) lock xor or push aad pop jmp je pushf insl pop cld mov push dec sub (bad) dec cld ficom loope inc sub jmp dec xchg mov aaa movsl push inc fcompl add xor mov mov jo pop sbb test aaa jmp jo sub outsb sub add and shl jae stos inc pop enter cmp lods pop je test aam rorb aaa ds xor jae in lret xchg sahf dec aam (bad) adc and lea pop mov or clc test mov sbb call test add adcb dec cmp xor xlat cli ss and xchg rcll (bad) icebp lea pmuludq mov pop fstl mov adc xchg jno jns or jnp int pusha fwait loope or jne jne dec sbb loop mov es xlat inc inc jp (bad) cmp fwait xchg fsubrp gs fstpt mov cmpsl out pusha test pop lock push dec lahf sub jg dec nop or insb xor jp test pushf fistl jne daa xlat cmp mov sar mov mov loop push sbb in xor xchg push outsl test imul ret les scas out xlat or js push jmp mov sarl adc test add call dec mov xor push jbe std (bad) shll sbb dec inc in cmp stos mov push lea aad mov or pushf sbb mov or mov inc pop pop mov mov mov mov paddsw or or mov pop outsb sti sbb in loopne fidivrl xchg xchg xchg and ret testb push add pop push popf mov pushf mov xor add dec lcall out scas adc imull test scas or imulb test sbb push test mov icebp ljmp cwtl push mov inc jns je sbb inc test imul lods push dec adc mov jp out out inc cmpsl mov icebp int3 push or inc or sbb enter sub fsubrl inc inc xorps fs lea aad js cmpsl xor faddl and ss es xor insb dec lcall jnp cmp push xor cmp (bad) mov mov into inc fidivr imul inc enter iret add mov ret fsubrl push aaa push or sbb jl mov in xchg jnp mov fcoml int dec movsb xchg jg cli stc jmp test outsb je je dec outsb lahf cmp jo cmovbe jmp sbb stc mov mov cmp fsts imul loopne cli in sub repz cwtl mov mov pmullw in dec push lods dec mov push ret pushf mov push incl mov mov mov rcll data16 pop movsb inc dec push cmp xlat int3 push mov dec xchg testb sbb xor and mov sub outsl adc pop jp mov cmp in adc sub mov jb in mov and add push inc int push cwtl rclb xor jmp cwtl or sub (bad) push adc jecxz inc dec mov sbb clc sbb fnstenv xchg pop stos jne jmp rclb sbb aas add and cld inc js xor add lret cmpl fst dec xchg lods subl or lret jge test jo lcall jmp pop cmp fisubl pop fistl aas in sub ret adc adc (bad) inc or xchg gs sub push sarl xchg mov xchg and jmp aam js pop mov mov daa nop test movsb testb jecxz test jae mov and xchg push jnp jnp mov dec or movsb pop jge push pusha cmp shrb fwait cwtl mov xor pop push cmp pop add sahf cltd ret xlat dec aam aam pop adc inc mov imul sahf (bad) shll and test test dec and iret jg xor out adc clc repz jb out push sbb add mov je jns jp subl pop sub stos icebp sarb popa xor lock inc pushf adc adc inc cld xchg aaa outsb aam xchg mov ret icebp push add ljmp icebp dec hlt and push inc jle movsb mov and jb mov xchg lods out add scas cltd mov imul inc sbb fiadd adc inc ret add gs add cmp hlt repz gs fisub addr16 (bad) xor icebp mov xor or inc icebp popf mov mov lahf cmp jnp mov js jns ret sbb fsubl out mov jecxz jnp icebp repnz ja dec fmul sbb xchg push adc push xchg pop pop pushf lahf sbb scas (bad) fbstp mov enter cmpsb lock ret clc pop ja (bad) in dec dec out mov sub arpl (bad) sub adc mov jg mov imul push in imul and das fstps data16 enter (bad) arpl adc pop jbe (bad) ja je stos push fnstcw xlat xchg dec push mov loop out into (bad) shr aam and sbb shlb outsl push mov mov out pop jns dec repnz sub data16 popf arpl dec pop sbbb sti sarb daa popf scas mov sbb adc jnp and loop adc les pop mov sbb pop mov dec in (bad) sub loopne js add notl sbb xchg lods sbb pop dec rcrb lret insl cmpsb dec pusha jle inc sbb cmpsl scas mov push ss les sahf movsb fs sub push mov je mov mov add ficom mov rcl (bad) out mov fadds stc mov inc fnstenv dec pop (bad) out and push js ja loopne imul mov test outsb jb imul jge ret mov in cld popf bound div push jp dec sub inc jmp sbb dec mov lods add (bad) jbe nop decl in push sahf fistpl addr16 push ret rol movsl cmc ss jbe pop dec fwait sub sub pop xchg lahf inc insl or adc pop jbe in fidivrl ja mov sub ret hlt inc pop (bad) cmp repz and enter stc call loope xchg clc inc or iret lret pop (bad) scas mov lret push jbe jl jmp aad lods (bad) fdivp jp inc cs cli imul push lcall leave test jle and ret cmpsl pop scas incl fs jecxz inc adc mov in xor pushf add test sbb fwait mov mov stc gs int popf jp xchg sti ds scas mov (bad) mov pop sarb xchg cmp movsb int sbb shl pusha dec dec sbb insb inc mov cmp daa mov sahf adc repnz mov (bad) push sbb pop test xchg lret ja imul lods pop pushf adc bound and pushf or xchg adc jp add and jp scas xor pop repz jne xchg xchg sub orl mov lret xlat dec outsb add push lods adc pop sub daa pop cmp loope xor insl pop sbb in or movsb or cs movsl push rcl xor enter jge lods cmpsb das cmp push jge or add pushl add mov mov mov (bad) mov movb insb repnz ss dec fwait repnz sub jg or or sahf add xchg sbb sub mov xchg out adc shrw mov xor sub pop stc cs out pop int3 ficompl hlt out push xchg or mov scas cmp fdivs fsts xor dec sbb rcr les pop cmpsl cwtl fistl xchg push sahf aad xor jno jge gs sub in adc cmp loopne sarb sti jecxz jno sub push adc fsubl int3 in ret inc outsl rcrl push adc sbb dec fadd jo lea sarl int jl sub aas push mov cmp out movb xor mov inc pop bound mov das inc inc (bad) popa adc adc jge leave xchg jne pop push mov lds xchg pushf jae dec imulb or xor (bad) pusha jns and pop xchg cmp jle incb xchg dec out sbbl add xchg lea jne push (bad) call inc es mov (bad) push xchg lea mov inc ss test outsb push ss mov pop push movsl ljmp and push test inc dec stos idivb fs div sbb pop stos dec inc jg (bad) aam or dec (bad) mulb rol leave jmp ds cmp int3 mov add ret add sub ret rcrl out sbb jbe ss jo mov test sub out fcomps push (bad) jg insb sahf pushf (bad) mov push inc ss (bad) mov pop sbb enter ret and adc mov pop adcl inc je lock jbe fnstsw cmp sbb fwait stc insb (bad) inc pop call notb fsubp pop cmp or pop scas mov and decb ja dec pop mov pushf mov fistp out popa outsb bound test mov (bad) or testl or into jae add ret jge xor enter out xchg test mov lods ret repz insb test mov cmp lret out jle and xorl pop jle lahf pop lods (bad) cmovae lock insb xchg add movsl stc lds fsubrl dec outsb lahf clc jge icebp pop pop (bad) cmp xor inc xor loopne jne insb pop lods sub cmp sbb lods test lods in xor xchg adc dec ja sbb adc mov (bad) inc pop rolb (bad) inc stc xor and test inc inc nop jg enter pushf fisubr push mull popf dec inc pop (bad) mov cltd js test and push and adcl aas cltd out outsl imul xor loop sti leave push pusha popa mov xor das push add sub cltd inc xor mov pop or rorb lahf mov jl jl mov mov cmp jmp mov cmpsl push test lea (bad) stos cmp push mov adc push lcall out and dec push and idivl ficoml mov sub inc (bad) in mov mov loop outsb xchg cmp push nop and outsb cmp ds push adc int movsb push shlb jmp push into ss pop leave or mov lcall out sbb les fs push mov stc cli dec out or mov mov jae jnp test dec xchg lcall aam in and nop test xchg dec lods adc inc (bad) jle jle pop fcoms inc stos outsb dec stos xor loopne xchg (bad) mov test pop xor pop in gs fadd or das jnp xchg pop sbb sub (bad) add jb mov pop testb sarl push dec sarl xchg inc and cmc sub and lea sub push imul mov cltd insb and mov insl and add xor das mov jnp out bswap mov (bad) out fcompl ret cltd pop mov imul mov pslld lahf dec test mov dec pop inc pushf aad std mov jmp loop out adc (bad) push rcl add adc push fwait out push bound dec rolb popa mov iret inc pop mov xchg or (bad) adc add push or jle add adc xchg loop sub out fadds imul scas mov fadds mov sbb dec (bad) inc cwtl ss (bad) mov jmp fs (bad) (bad) sti loope pusha shrl mov adc mov push dec add and adc aad aad std xchg push sub cmp jae imul insb sbb int3 xchg sub dec mov lret pop xchg sbb fstps test mov movsb fisttpl mov adc lods aaa (bad) dec (bad) notb dec xor (bad) pop jnp arpl (bad) stos or aas push mov loop mov out push xchg xor inc dec xor lret mov sbb dec dec stos shrl mov pop lock jmp push lcall mov jmp mov add add push les add fdivrl cmp push outsl sub dec cs (bad) sub adc add push dec stos sbb sbb fnstsw hlt out mov iret push mov iret test shrb in push or fwait notl adc inc xor adc mov pop xor mov mov push push leave int3 test inc sahf sub scas adc add lock sub aad inc pop adc jle sub leave hlt mulb mov dec dec adc jno adc xchg cs dec (bad) jae mov fistpll inc xor cld pusha divb mov pop fwait gs xchg sbb pop sbb (bad) dec xor dec mov cwtl inc hlt fidivl dec mov sub fdivp outsl mov lret dec xchg inc je lret mov cwtl push jne and push movb mov fsts mov int pop dec lea dec or out inc pop je and adc (bad) push enter loopne enter pop (bad) mov iret jmp jns (bad) cmp xchg decb roll mov pop pop sbb in mov out outsb mov imul outsb push xor inc ljmp and pop push imul jmp leave push inc leave inc sbb cmp add pop scas push iret jbe xor sahf iret jg ds loop xchg jae mov xlat ss insb xchg outsl rorb loopne mov jle and cmp fwait in scas and int push (bad) or sub aas push mov mov inc aaa es scas mov jmp pop inc add xchg les rorb test inc icebp fadd mov ss adc mov and (bad) jmp mov xchg sbb pop push or inc int3 insl loopne mov cwtl out int3 call mov mov sahf loopne jmp adc mov mov sbb notl pop mov aas dec xchg mul cmc xchg jl loop sbb cmp xchg stos lds pop or les cmp shrl movsb or jp rol dec sub (bad) icebp add inc adc mov test add jae movsb lods sub push fwait and and jno push xor inc cmpsb push ror jbe imul cltd flds pop dec clc mov shlb mov jne xchg test xchg xor cmp xlat pop addr16 push pop xchg enter or rorl ja jl shrl imul in icebp fmul add and mov in or or test or (bad) les leave sub inc and xchg cmp popa cmpsl repnz sahf push insb dec enter mov (bad) pop push gs xchg mov mov je adc push lcall mov sbb (bad) xor in je ficoml insl push cmp xchg clc cmpsb adc in xchg fidivr aad out push and push stos jno lods and sbb or mov cmp movsl das int3 in cs inc pusha lea fmull std in and or and notl lods mov push fnstcw push or shlb aad pop movsb dec es stos jg sti jg out (bad) loop out push xchg add cld fs mov mov lret or hlt sbb xchg (bad) xor inc shr test cmpsl mov test or imul push fnstcw test mov or xchg mov xor ret cwtl movsl test add dec int3 fiadd and ret js aas in neg inc mov xchg lret mov cmc jp xchg aaa repnz add ljmp mov pop push addr16 stos xchg sub lcall pop xchg fdivl dec adc mov xor cmp and imul push out mov jo ret int3 sub cld cltd stos inc lcall icebp pop mov inc add jne outsl lds push adc cmp adc cmc mov cmp ret or popf stos incl cmp call or popf mov jecxz xor jmp andl repz mov push and push enter push movsb push stos dec mov pop lcall xor sub clc nop jno or cmp icebp pop pop push xchg jl inc aaa or aad and stos bound mov add sub test pop sub (bad) jl push pop adc add icebp hlt cltd mov and pushl xchg dec stc int movsl inc xor cli push push repz pop imul pop sub mov inc es lea pop data16 inc mov icebp jmp inc and push cmc fadd inc cltd cmp and or xchg add roll inc pop xor xor std into addr16 les (bad) xor xchg loopne sarb mov dec ret add mov sarl sub push sub mov out repnz test mov mov and cld sub dec ss dec inc mov insb aad jb in lahf out push mov jbe,pn jb mov loop xchg xchg inc add jnp enter lahf xchg fdivrl xchg or mov jae jae sbb rorb or loope sbb imulb push rolb mov fnsave jae ss insl (bad) pop loopne test jno jne pop jp sbb pop add pop and jmp daa add call js in cmpsb pop ret or out fwait add lret push inc adc jle push or push add (bad) in push lods or scas jg add aam lahf or mov lds sbb int add jnp popf xchg mov jle xchg cmp mov pusha push int3 imul scas push jge mov imul jecxz fistp ss add jg rorl aad aad pop pop or mov add pop (bad) push pop push test sub jbe jb cld xchg mov leave cmc lock sub scas les clc xchg pop mulb fs jne lea lea shr cwtl sub aas mov jns inc pusha stc add or or mov cmc push pushf test call mov mov mov pusha push lea jmp mov bt pusha add cmp test pushf jmp lea call clc test bt pushf mov pushf clc call jmp movl pushf pushf movl push lea jmp jmp add push gs outsb push gs js gs imul gs leave rorl cmp add loopne lret jle sbb xchg stos nop xchg fucomp sbb mov xchg aas jae sbb and add xchg pop leave pop xchg imul std push jae mov enter push insl mov daa roll loope adc mov loop repz and mov hlt cmpsl xchg push arpl pop xor sbb je push mull xor cltd lea (bad) sub test adc jnp ret mov es mov push mov leave (bad) push sub mov leave fcoms imul outsl jecxz xor mov hlt ja cmp lcall stos mov lock aam inc negl jo mov or inc jmp fucomi daa mov mov dec iret lcall frstor divl sbb sar add pop mov hlt mov cmpsb cmp stos sahf mov push aas mov lcall adc pcmpgtb test sub mov (bad) jbe or inc dec shl stc scas idivb dec sbb addl aad xor nop mov in cli jb lods push pop mov mov inc les mov ret test pop aam jb and insl mov jecxz fwait pop stc push cmpb insl in push aad mov mov or push add loop test faddl stos ret outsl (bad) lods jns push inc es ret jae pop mov maskmovq idivl mov ds push lds sub roll cmp adc and sbb cmp mov repz adc add xchg mov lcall sahf and stos aad stos cwtl loope daa fwait (bad) pushf mov adc and fild xchg (bad) sahf cs sti loope popa nop outsl into sub les adc push add ss or nop (bad) sbb addr16 push inc cmp inc add lods test dec imul pop gs inc mov mov fmull sbb push push mov push and xor mov and and or out scas aad and push jmp aam xchg mov pushf gs and iret imul sub lahf sub mov mov cmp sar aad mov rcll cwtl popf test and mov or sti inc mov cld aaa jne imul out outsb movsl xchg mov ja das popa push sub xor dec decb pop outsb jl fstpl dec inc sub mov add mov pop setge dec addr16 out das decl and bound int3 pop xchg ret int3 sbb daa shll jge adc dec test mov rol or cld sbb rolb jmp sahf xchg (bad) pop xor clc mov xchg (bad) out inc dec stos fildl sti (bad) setns mov aas lea xchg outsb (bad) insl lods dec test test daa pop (bad) std push xor xchg add (bad) ds in dec sub cs jb pop cmp repz adc or lea je clc pushf push cmp movb lea je call mov movb mov pushf pushl ret pushf call pop dec and xor xchg test jb loop aaa (bad) sub sub dec push rcrl dec xlat xchg and xchg popf aaa jle pop dec xchg add fisub inc add mov dec add lods aad add sahf sbb div daa ret mov push xchg pusha ss outsb add into ret or movsl fidiv sub or pop cwtl pop in fsubrl pusha sub xor xor imul mov sub (bad) pop mov cmp jb shlb and xchg test jb xchg push divb stc mov push inc sub clc ds sbb pop sahf cmp mov sbb dec test leave jb add jnp outsl scas test in test pop fdivl iret lods inc ja and or inc cmp (bad) lds mov lret xchg rcll and (bad) lock add daa lret and cmp jle test in fdivs sarl push xlat add xchg (bad) dec sahf or pop lcall dec insl sarb push orb xchg fidivrl push push cmp call out test xor and je push pusha lea jmp push lock std std xchg jo sub sub sub pushf mov pop xorb lret shrb cltd in sub bound aam pop leave add out sub test cmc jge and out xchg or aam xchg fist in xchg push push stos les mov mov enter flds in aas pop push inc sub add (bad) dec imulb mov call test (bad) and out (bad) hlt cs adc sete out or lods push movsl xor xchg push push (bad) fwait mov sub ja in pop or enter mov lret xor add mov jmp xor sub insb dec pop fildl or fs cs insb loope sub in jns jle mov jmp scas xchg incl jbe xor cmp xchg sbb dec and or jns lds ffreep pusha fwait nop mov and stos je pop jne sbb xchg fnop (bad) call movl lea jb test call cwtl seta cwtl lea call xor rclb inc (bad) pop scas pop out mov and fwait repz aas fstpt lret and jmp adc mov push dec test (bad) ds sbb clc push xor dec and push data16 mov ja psrad dec ss nop inc dec mov mov test ss mov add mov je add dec or data16 jecxz xchg data16 pushl jb push sahf mov jmp and cmp js mov and adc repnz fimul adc clc ljmp in mov insb and pushl pusha pushl ret sub push cmp push lea jmp push push push mov mov xor lea call lahf adc sahf rcr sub jne mov pop rol pop pop ret push push lea jne pushf pushl jmp jmp push inc pop jmp push jl xor pop adc xchg xor lods push lcall cltd repnz sub les pop cs jle nop pop adc mull cmp popa std sub stos sbb cltd pop and mov pushf pushf shlb addr16 adc data16 sbb ljmp jne xchg icebp xor cmpsl pop dec push dec jg imull push rcrl adc inc push cmp push inc and sahf je rcrb es xchg negl xchg test ja xchg cmp mov pop push inc mov outsb push inc dec sahf sbb sub jp push (bad) cmp (bad) enter mov movsb out decb hlt nop (bad) xor mov ljmp aas mov test push cmp and aad (bad) xor sub and cmp aad cmpsb leave daa fdivl jge (bad) dec divb je es movd pop sbb rcll inc mov xor in pop sti mov mov shl lea sbb sbb mov xchg rolb cs and adc ss lret and cmp pop push inc mov loope xchg jne pop lahf ja sbb xor push fbld imul movsb mov aas (bad) push scas mov push mov insb leave mov es add inc fstl cli push inc stos or (bad) out adc push mov jbe loope negb enter js xchg jge jmp sbb add (bad) sbb hlt jmp rcrl and mov jbe notl out ljmp movsb inc jns add adc lret bound (bad) aam mov rcrl mov inc and adc jmp lea jb stc cmp call push inc push push dec dec dec cs insb add inc pushf clc jmp mov aas lea add mov inc call mov scas mov xchg nop fcoml add sub movsl fdivrp pop mov mov mov arpl cmpsl frstor sahf gs xchg daa mov mov jecxz mov call lret mov pop cmpsl jno test sub jg push out mov pop xchg (bad) sti mov div mov fsubrs push inc mov repnz fs ja sbb xchg imul push gs ljmp out push stos imul jbe cmp inc jns out xchg adc rorl scas xchg adc xor cmp cmp add gs rcr out xchg xor mov loopne mov cwtl out xor aad dec add out jo and movsb in nop imul xor cmpsl xchg mov mov negl jb cmp sub test in sub cs or mov sarl jno xchg scas in (bad) idivb mov loope int dec add jne test bt or call xor shrl add mov sub jb mov add call sub jne ret not mov jmp aad imul dec gs add xchg movsb adc out cltd ret clc push aaa mov push (bad) sub (bad) mov sbb out ffreep roll xlat pop comiss dec lret add jnp mov cltd sti adcl divl ss (bad) stc scas push cltd pop adc call (bad) push std xchg fs lods xor pop movsb bound jl add inc mov mov (bad) xor add xchg xchg xchg fist dec mov and adc cmp fisttpl jmp sbb pushf lea movb pushf push lea jmp call mov daa adc (bad) fnstcw (bad) mov fnop faddl jae or mov lahf pop sbb pop es std jmp jmp sbb fcmovbe test enter test out cmpsl subl imul aaa sub pop push xor mov xor and (bad) xor mov push mov int insl add xchg xor hlt stos xor js pop lock jo fcoms ja std aaa roll sub pop xor xchg xchg mov inc cmpsl or push or stos ja inc sbb fcoms inc inc test arpl aaa fs test or dec dec hlt hlt enter adc adc out cmpsl sub pop ss add dec jne and (bad) xor adcl xchg push arpl outsb dec scas cmpsb aad xor pop rclb ljmp pusha ds push sbb xchg rclb mov out or fwait stc lret jbe mov dec out cld (bad) sbb mov jbe jg (bad) int3 (bad) mov xchg cs or into lcall dec sbb cmp and mov add sub mov jne subb pop cmc sub xchg mov dec adc adc shlb icebp mov mov psrld xchg xchg ret jge pop in mov jns fcmovnu gs pusha sub test xor int3 bnd pop or incb (bad) sbb ds idivl sbbl stos jge rol je jecxz mov fsubl and iret xchg pop ffree dec pop adc aad dec imul ja int3 dec shlb (bad) (bad) mov (bad) icebp xor inc mov ljmp fnstsw push inc imulb jmp es xor sarl es arpl daa mov out and call jnp mov lret in movsl pop mov jmp xor jge aas clc mov jo cmp mov aad mul inc test (bad) push mov mov arpl xor pop outsb sub pop in aad es pop xchg sbb mov or mov adc addr16 cwtl jns call lret cmp sub cmpsl das and or inc rolb inc dec push insb inc xchg aam and mov rorb js sub pop jge inc lret pushf test xchg outsl call lcall mov negl sub test das jecxz mov hlt mov icebp iret es mov (bad) cld loope push add sbb mov cmp mov pop jecxz aam insb xchg pop cmpsl push cltd inc mov mov fcmovu jle or ja sbb xchg out ja push test sub or sahf ret cmp sbb loope inc mov xchg jmp ficompl cmp (bad) popa movsb dec pop xchg sub mov dec jo scas inc adc sarl fnstcw repz popf pushf mov loopne loope mov dec inc cld push (bad) adc adc inc cmp cmp hlt outsl sbb sbb bound bound lds xor mov out stos cli xchg add stos lods mov xchg jg pop inc lret sbb xchg cwtl or inc dec aaa push push dec inc mov xor sub fs and dec popa ja mov cmp add enter in cmp push push sbb cs add xchg ds pushf cmp xchg push and xchg mov mov out jb enter test js loope xchg in jecxz cmp inc mov outsb dec lds rsm lods in and loop or cmp xchg cmpsl and cs add ret push xchg loope mov popa add lcall jle cmp xchg xchg xchg loopne push jp out cmpsl push sti movsl adc cwtl or movsl int3 repnz mov daa insb xchg or jle and jns rcrl mov mov inc inc and xor pusha sbb aad pop mov pop pop outsb sahf dec insb insl fs jmp mov inc add (bad) sub adc mov out idiv movsl dec divb out lahf push mov cmp ds adc dec aam shr imul sbbb adc in mov and nop enter xchg push xor insl sbb arpl jnp xchg out cli push push push mov flds push push sbb insb mov pop cmc bound cmovge jmp loop and sti cwtl out inc sbb push cmpsl push mov es add xchg aaa pop push mov xor rorb mov movsb add nop and jb push xor mov inc adc xlat or cmp jge mov fwait test xor xor mov iret jns ds pop adc inc sub adc jge push (bad) pushf iret test hlt lahf mov push sbb push gs dec push adc sub push mov fdivrl enter lods lret call cmp popf fsts xchg ss push pop pop lret add and sbb sti aaa mov jo jl mov jecxz enter dec xor dec call adc cmpsl jg jnp pop aas mov cmpsb test rol pop jecxz pop mov dec xchg mov dec ja adc js sbb and push sbb cmp test adc pop adc inc lret (bad) jg test fistpl dec dec lea and pop into mov sbbl mov mov pop sarb xor mov cmp xchg in xchg cmp aam fsubrs sub adc sahf fwait mov mov pop popl clts repz insb test xor add xchg mov push iret out sbb dec insl add mov xor mov cld ud1 or movsb and inc jnp adc jo daa fisubl jp cmp popa push sub arpl cmpsb mov xchg dec cmp js mov mov or (bad) stos fnstenv cmc jmp into xchg sub sbb adc jle cmpsl ja pop cmc xchg add lahf mov xor shrb sahf jns in mov imul pop adc xchg xchg push in mov push cvtpi2ps pop lds add clc cli xor mov or sets into push adcl add jns mov and rcrb or clc lods mov dec jno add xor in jo inc aam lahf es dec push cmp inc pushl inc lret dec popl pop dec sub leave push cld andl and or rclb adc stos add push ss mov in inc pop xchg fist clc xchg cmp out ret jp mov push into mov aam jbe lahf push cltd pop sbb push mov sub mov dec xchg xchg mov push arpl xchg push add push loop mov add cwtl lods cmpsb out addr16 jmp cmp cmp rcrl mov adc repz sbb bound or jge sbbl push int3 loope ret pusha sbb mov pop mov ret je push sarl push fcmovnbe mov xchg imul xor sbb inc xor jmp iret mov sahf fcmovne sub cmp or mov inc lea push sbb rclb and xor lds cwtl mov push mov add xchg ret mov fcoml (bad) stos pop icebp mov mov enter xlat pop icebp divb mov or dec stos mov shlb add dec and jo dec mov (bad) int push jb ficompl pop adcl imul stos je loop or push outsb in mov mov adc push add out pop (bad) (bad) xchg fidivrl ja into cmp std mov (bad) not cmpsl pop push rcrb fldcw pop dec ss jnp daa popa sti jecxz cmp push mov dec add sti lcall jg pusha rorb xor movsb jl lods push push mov dec jns into cmc pop (bad) jmp je add xor inc add jno adcl lret decb pop ja loop call jmp lahf pop sub pop inc dec cmp or test inc ds out (bad) repz cld data16 ret cmp push imul mov sbb loopne pusha mov inc mov decl jbe mov (bad) pusha lahf in mov or xlat cltd and sub andb insb sub repz fstl cs sub inc jge mov stos jae inc out inc insl orl outsb push sbb cmp bound test lret jmp xor loope or ljmp hlt test push push leave cmp and jg std repz inc int3 adc lret jp and cmpl sbb jne nop jnp sbb jnp mov les or xchg (bad) ja jmp mov or adc jmp popa fs dec in imull push jmp sahf test push xor xchg lea jo and mov jecxz aad cld (bad) fldl pop mov sahf popa fimull cwtl arpl (bad) push dec push daa ret pop pop outsl sbb xchg mov fidivr pushf mov fidivl leave add or and dec mull aas lods jge incb push je mov int3 cmpsb jl mov inc (bad) fcoms adc enter repz push mov jae cs mov out adc add adc xor or mov push clc cmp inc add xchg pop lods cmp sub subb loope cmp pop pop sub test inc push mov cli pushf sub es das mov icebp sub xchg dec and imul test out movsb ljmp aam jb push mov dec nop jae xor std je mov xchg inc dec xorl sahf lret mov inc add sub jb aam in pop dec jmp xor (bad) mov pop xor lea aaa mov and adc mov add mov rclb sub daa add leave fildl in mov inc mov gs or sub xlat adc les fdivl rcrb lea cmc add cmp mov dec mov fidivl mov ret stos jns imul push or imul xlat xchg pop pushl outsb nop icebp mov aam adc mov inc incl sbb fstps push push pop mov ljmp stc xor sub add add cld mov fnstenv and adc cmp cli sti int3 int3 mov sub (bad) sub sub cmpsb lcall out and pop jnp loope gs ror inc xor mov pop mov xchg mov (bad) mov pusha cs mov rolb jno sub mull cwtl adc (bad) cmp adc iret loope (bad) mov adc and clc dec mov mov and sub aas mov pop iret das push (bad) lret mov pop dec mov jmp lret es add pop xor gs sahf adc or jg pop (bad) scas fsubrp popf mov push dec sbb (bad) fisubl iret dec mov adc clc (bad) sub les or xor in push shll dec pusha inc push aaa jecxz in or bound lods (bad) fadd pop dec or and repnz dec imul mov mov std rolb cmpb aaa rolb out xchg fwait (bad) push adc in movsb (bad) (bad) pop stos jne test popa xor mov icebp inc dec aas int3 mov or xchg out in push mov jle ja lret dec pop cmp (bad) xchg jge out sbb adc xor cltd add cmp shrl andl in aaa lds or movsb mov push insl das add mov cli mov (bad) std xor (bad) mov jge sub xchg inc inc push pop das sub jmp cmp hlt and lods or call add ret dec xor push sbb out sub div stos mov xchg hlt cs cmp (bad) enter mov mov sti jmp sbb sbb leave int3 js adc mull cmc dec cmp das jo stos jne (bad) sbb lret push fimul cmovb imul (bad) cmpsl (bad) std inc push xchg push fnstenv add xor cmp stos sub lods lods push and push js cltd lock shll adc mov out push das inc mov xchg mov icebp nop jnp (bad) mov fwait dec mov xchg or imulb out shlb push outsb push jl jl insl adc jae cmp sub sub iret or popa sbb out jnp push inc subb adc lret ud1 adc inc aas pop jbe mov rolb fimul inc fwait pop or xlat gs into std sbbl aam jmp inc in out jo ret inc xchg sub or in pop jb icebp push jle (bad) fs xchg cmp xchg out pop int3 loope pop or dec push stc inc cld aad fs xchg pop dec lock jbe pop add leave mov je loope inc add xchg mov pop cmpsb fs and mov jno icebp and stos cmp sahf and rol xor (bad) scas ficomp inc es and out or inc pop jno subl mov (bad) fs imul sahf push lcall and jmp push jbe pop or xchg mov and push int3 or adc in addl (bad) xor neg mov inc push test pop push mov insb lea fcmovbe push mov xchg pop jp jl int push adc xchg mov das sbb jg ljmp add iret adc xor jecxz add push fistpll and add cmp mov or bound mov cmp adc clc push in and gs push adc ror sub ror int3 pusha xchg nop lret mov aam test mov stos loopne push (bad) xor mov xchg mov mov pop mov neg stos cmp test repz pop push jecxz sbb and sub scas xor in pop add ret lea test pop mov scas cltd or add aaa fldcw lret rcl ret gs daa pop xorb xor or mov lods sub lods lods jo inc (bad) ja ret dec andb aas mov inc pop (bad) loop xchg mov int xchg inc push lock jo xchg inc or push shr xchg jb add xor mov paddq or xor movsb xchg pushf rcll push out fnstcw les xorl in pop cmpsb mov jbe das or pop mov pushf insb or or popf pop mov add push aam lret adc jnp or in add lcall mov mov dec xchg mov popa das pop movsb and sbb and call cmp mov or add jb cmp add sbb mov jg ss xor xor movsl cmp add mov cmp and jp lods cs insl into push sbb loop in xor or add pop fbstp shr jns (bad) (bad) lea and xchg mov icebp cmpsb sub loop bound cli lahf mov mov ljmp or std fistpl inc jne mov mov jno mov jg cmpsb (bad) and sahf sti (bad) xor and add popf xchg and lea fucomip shlb add pop push shrl mov lods xchg imul mov mov in pop (bad) xor lds ja mov jno ja insb leave ficoml or (bad) push clc fcoml adc mov fwait das push iret adc rep insl sbb lods enter nop scas jmp bound jl popf or xchg mov scas gs or das lahf lret mov (bad) js jmp stc lock orl mov jg push ja mov insb sub mull out cmp adc xchg push cmp (bad) hlt or std lock xor xchg or mov cld add aaa in pop dec inc jb mov cmp imul cmc decl divl out sbb xor les lds jp mov pop mov xlat fcmovne xchg addr16 inc sbb daa sub psrlw mov and xchg lds jge out or xchg jecxz in lods add loopne lds lods mov mov dec pop fiadd movsb jbe cmp or outsb and shr adc adc mov jg lcall xor sbb (bad) xchg test (bad) lea shrb push sub les xchg test inc scas push xchg std (bad) mov aaa daa jl and and sub sbb sbb add mov cltd mov sub mov sbb dec pop jmp pusha rep fsubrl mov hlt sarl push jp adc jecxz sub scas pop mov outsb je into pop fmulp xor adc scas hlt cmp dec (bad) cmp cwtl fs arpl pusha sub inc sub movsl push shrb call mov into ret mov mov into inc cmp andl pop sbb outsb sti clc dec adc mov sub inc push mov dec dec or pop cmc out jns cwtl jo jp sahf ljmp ljmp or adc pop mov cmp push or stc lds test mov jl mov int3 cmp test mov inc mov in cmpb test cmc push jg inc std push in xor and pusha pop int iret mov loopne mov or shrb sbb add in mov popf or mov fcompp and inc iret mov add popa jmp push mov sbb dec ja out fbld add sub and aam or adc xor clc cld cltd cltd cmpsl lods sub jl jge adc mov jns shrl xchg inc loope lret mov fisttpl xchg xlat fcoms cmp xlat dec pop push dec push out test adc jo mov hlt hlt insb lods call sahf dec cmp mov inc mov fs push lea adc daa and mov fisubl sahf and sbbl inc mov sbbl mov sbb xor rcrb push lea pop mov xlat setb inc xchg xchg jae mov dec mov push bound daa add mov or (bad) and sbb mov pop pop cmp pop repz scas mov cmp test enter sbb sar mov xor jne cmpsb stos rcr int3 jge mov les arpl xor popa adc add ja imul pop adc divl out mov xchg lock (bad) in out fidivl dec mov dec push xchg mov jp dec adc mov scas jne int3 pop cmp (bad) mov es mov insl cs xlat sub jo jns lock push and js rclb or jl sub xchg sahf mov (bad) into push push xchg lahf mov mov hlt xchg nop incb testb movsl cmp into mov sahf inc fsubs inc in pop outsb out cmp not pop rol idivl or aam and dec mov jl and xchg cs lcall lods dec test mov xchg cmp sahf push mov jg sub movsl jle das xor sbb cmc mov cld lret jno mov fwait cmp mov dec push int lahf fwait jno lahf and cmp das rorl bound jnp in hlt and adc out push cmpsl or aas push js sti sub enter jne sub inc test jb arpl add daa add loopne nop clc xor push pop scas sbbl mov adc inc and testl mov sbbl dec xchg sbb xchg stos mov inc (bad) sahf fsubs inc fidiv or ja or sbb cmp jo push xlat mov dec push out test outsl pop xchg hlt cs jno mov fsubs mov popf xchg (bad) imulb cli outsl adc mov insl and mov (bad) push dec inc shr fidivr add lea jbe repz xchg cmp inc cmp leave cmp dec jo mov insl std repz or cmp clc xchg inc adc push cmp (bad) lds dec jle or (bad) dec shrb js enter daa movsl nop or inc or fdiv push dec mov jecxz icebp shll jmp push cmpsl mov add sub xor rcr int push call and and add das (bad) or inc add (bad) aas push cmp cmpsb push dec dec mov (bad) nop (bad) add cltd cmpsb ror scas out aas scas dec cltd arpl adc in je in jo dec das stos sub rcll add insl mov sub outsl adc nop adc icebp cli stos or scas sub adc jg jmp xor loope xchg idiv sbb and xchg es jecxz and pop jl enter dec scas mov ret lret ss lods pop sbb call dec ret fildll cwtl gs sti lods out pop push (bad) in mov mov repnz bound pop ss insl pop hlt arpl into subl enter xchg roll (bad) cmp lret jge and add or or insl or lds adc out cmp push movb xchg cmp push mov mulb daa mov (bad) (bad) mov jo push xlat mov pop cmp inc loopne mov add leave arpl or mov inc or (bad) mov fldcw sbb pop (bad) cmp ss mov (bad) fistpl stos sbb inc cltd out mov mov or mov push push hlt mov mov stos rclb jp mov jbe inc mov add mov popa loop xchg inc pop test mov stos (bad) jns xchg jg cli repz aam out jno jecxz sub in mov out fnstcw mov mov rol (bad) xchg dec and pop stos gs out dec dec pop pushf fwait and mov dec pop pop add pop mov cmc push cmp lods mov push fcomps xacquire cli (bad) cmp dec mov insb mov movsb and ljmp ret jns cmp pop movsb jo push xchg mov cmp mov (bad) data16 pushf mov outsb xor lods (bad) mov sub jmp lock mov repnz xchg in es pusha jle dec repz lock xchg addl cld add fstps mov fildll sbb mov lcall push xor and add xchg clc loope push xor enter xor mov sbb mov cld clts test sub out jne xchg adc xor adc call (bad) add jne adc xlat insb sbb adc jno insl (bad) clc mov xor inc push inc mov sub xor leave mul mov mov rcll mov jno fwait pop and jp lahf js rcrb fidivr mov inc test add mov pop push loope xchg or mov xor stos in sti sbb pop and dec or les xor fsubl aas dec sub clc jge movsb cmc popa clc out sbb inc into mov cmp loope out fldt hlt cmpsb xchg mov call sar stos and cwtl movsb xchg xchg insl outsb test (bad) cmp (bad) in xor pop mov and cs outsb mov sbb cs cmp pop scas mov in and test clc mov jb int3 push fcmovb dec ror lea sbb and cmp lcall push pushf add mov lds push daa adcl ja ret in mov hlt xchg cmpsb dec dec cmp inc dec push fsubr jle mov pop lock rcr fs or pop repz sub test gs pop jle push dec insl dec and ret inc cld mov jae sub push adc inc das mov or aad sti lds daa sub fisubrl out mov das dec loop mov xchg push pop lret imul xor (bad) lock mov lods xchg cmpsl test mov movsb mov aas and mov sbb pop jp push in roll fimull sub add cmp test lret pop or js (bad) xor add ja sub dec and mov xlat cmp movsb negb jo dec test cmp pop mov (bad) stc roll std push cltd fdivrl mov shr add iret call adcl xchg xchg decl sbb add fdiv out test adc in sub lret lea ljmp loop dec add (bad) arpl (bad) or mov test mov fdivrs jno or cli xchg sti and pop and inc mov lock je mov inc into cmp sub inc outsb lods xchg scas sti fildll movsb pop xor lea pop jle push inc add lock test xchg mov movsb mov in cltd clc sub inc aad stc push fwait insb cmpsl adc mov sbb es ret sub and shlb jb pop dec roll les out cmp jae jl aam jl xor add cld imul jle test fnsave mov pop movsb jns jle dec iret stc or cmp xor pushf sarl daa jns mov pusha or mov fdivs sub hlt push sub jmp pop mov pop cmpsl xchg movsl (bad) insb inc (bad) rolb mov cmp jbe out (bad) ljmp jle xor scas (bad) cltd add je (bad) mov xchg ret mov daa adc aad mov adc inc imul fistp out lret shll (bad) pusha push mov pop push repz add (bad) mov jbe clc call and add cmp enter mov test ds popa outsb adc testl leave test cmp ret movsl and out push xchg pop xchg mov or sbb cli in test and push dec jns addr16 jns lods jl cmpb sbb push mov out loopne mov mov push fldt cmpsl andl pop mov jecxz cwtl aam jb mov gs roll xor out (bad) (bad) sub lods or shll cmc idiv mov inc outsl jle loope adc add fsts pop je inc mov cwtl sbb xchg movsl cwtl inc jl daa loop cld pushf mov add (bad) mov insb repz or js pop in jae into popf sti inc mov cmp ds jae stos ret mov into (bad) inc mov dec je movsb lods mov jecxz rcr mov adc sbbb imul stos (bad) sbb mov test jmp and (bad) std lcall adc or in iret mov iret sarb pop aas mov pop out imull lret in add mov hlt cwtl push sti dec and dec (bad) mov cs mov jecxz testb ret sub in sub insb idivb stos notl sub sub sbb push dec lock fcoml xchg sub rorl ljmp xor xchg in or outsl fwait cmp and and cmpsl std xor in sbb fwait jecxz loope das and xchg rcrl xor pop outsl cwtl cmpb pusha fbld popa push shr add sbb into sub mov test jae xor pop pushf jmp pop ret out push pop mov jae cli cmpl ficompl mov cmp (bad) mov shlb pop (bad) xor mov inc sub pusha push leave mov mov mov sub mov dec test adc (bad) iret sub andl push push adc ret out jle ja ret mov mov in add cmp push ds xchg nop xor push inc icebp mov (bad) mov dec fnstenv push pushl mov xchg and dec lahf (bad) ja dec cmp lret mov (bad) cmp jns jbe or (bad) mov jbe,pt xchg xchg and enter xor lods scas lret cmp mov (bad) jb jae js bound bound or mov stc (bad) pop nop addr16 jp dec mov cmp add push jo cs aas loopne lcall adc xchg pop shlb lahf sbb push into (bad) (bad) sbb jmp add pop inc lods push cmp push in pop (bad) int3 stos sahf nop repz and and xchg xchg mov popf orb xor cmp out pop pushf in mov ss test pop (bad) ja inc aaa fdivrs lods sub iret ret jge hlt xchg push in decb mov cmp lahf ds int stc lods inc int3 jb jo jg aaa dec push sbb lret lock ret movsb mov adc test loope ja enter les add sub icebp or adc jae mov push jmp xor loop lcall dec xchg dec push les push jbe adc mov jbe lds mov dec pop sti pop sub sub popa mov bound repz pop fdivrs (bad) std scas xor jp js icebp rcr andl into mov cmc scas cmp out lods fcomps sub push je pop xchg and call push add and jg adc adc cwtl dec sub mov adc lea leave pop ret add or out adc dec dec popf mov sbb xchg jge lcall cmp sti add xor ljmp push (bad) cmc jns daa xchg or mov lods int xor fprem1 (bad) adc lahf push test aaa xor and popf xor movsb push xlat and mov js ljmp or cmp ja rolb les jl ficomp pop cmp jecxz in and xchg add dec inc mov cltd add js inc adc hlt fs jge out mov sarl xchg sub xchg inc movsb mov adc xor xchg lea lret mov add rorl pop mov pop loopne inc push sti pop sub pop pop and mov test xchg cmpsl cs imul cwtl adc sbb add ja pop sbb hlt and pop xchg in test ja roll out add sarl inc aad inc inc jecxz insl mov mov ss lock imul mov jnp mov adc inc fwait mov jbe test push (bad) or lfs cmp clc mov dec xor sar popf stc insb (bad) jmp mov insb sub cs es push aad inc mov rcll fbstp sbb aas pop jmp jle mov dec hlt test les add f2xm1 in push out sbb mov pop mov insb pop or imulb push inc hlt andl mov adc lcall int imul mov arpl mov jns jge enter push aaa xchg in and mov dec mov sbb jmp mov lret jns sarb push dec pop push and ljmp int3 xchg jmp adc push bound data16 ds sbb sarb push popa ficomp mov stos pop test mov mov mov fidivr stc jns cmpl shlb pop adc (bad) mov imul inc push sub mov (bad) cwtl or bound mov push push ds lods in adcl mov xchg ja push adc scas rcl popf inc or mov icebp daa stos push enter loopne mov sbb mov dec fcomi push push lret xor stos in cltd imul addr16 dec inc outsb add fsubrl xor icebp aam int3 (bad) jge push ss pop call fmull mov and or mov int dec clc sub stc sub adc (bad) ja adc addr16 rorb add pop push clc or sbb inc arpl (bad) pop rcll lret mov pop or movsb add rep sbbl mov fdivrl xchg jecxz dec div push cmp or scas xor ljmp sarl cmp jmp out cmpb jno sub cmp incb lods mov mov fsubs add jle inc scas pop arpl jl lods xchg xor ss stc xor jl insl add repnz cmp adc mov pop cwtl in push test repnz int3 icebp test (bad) cmp sbb addr16 mov mov aaa test loope dec je add sub jle je pop pop lds mov pop jg lcall imul fcompl lods adc mov call dec pop mov ret xor mov out mov test dec jecxz mov insl ds or sub fs jle pop repz adc sub aas lock cld loop inc lret test outsl int pop xchg nop cli imul push cmpsb shl fnstenv imul push jo stc mov cwtl mov xor clc push jp rcrl (bad) in xchg movsb scas sti mov lahf mov push mov pop xor and imul mov jmp sub inc repnz jl cs (bad) stos jl mov imull js jae outsl iret outsb clc inc dec aas adc bound sbb jnp sahf test (bad) mov xchg out add xchg das ds xchg jp mov xchg mov mov pop lcall jge (bad) lds fnstenv push dec gs sbb cli fnop lcall mov cld sub arpl add in push push fs xor out in pushf xor loope mov test push or movsl and pusha sub cwtl ror xchg jp (bad) cs arpl movsl sbb iret test std lret es push cmp adc icebp mov outsb jl lret loope lahf pusha sti dec or jl pop xchg xorl dec and loopne (bad) pop loopne bound pop jne push popfw lcall sarb adc jg cmp insb nop lahf cmp add fadd cmp popa adc js dec mov cmp test pop jns adcl out xlat outsb mov iret inc in ljmp (bad) sahf fist cmp dec sbb (bad) xor mov xor fcomps (bad) idivb ljmp mov pop inc add lcall fistl fsubl xchg mov lcall dec xlat cmp or cmc enter xchg cli push lahf pop xor cmp jecxz cmpsb jle and cmp scas inc jnp jl mov push push (bad) clc insb push shr clc mov inc fwait add pop outsl sar dec mov jp sub sub cltd int3 add pop add lea pop push add mov ret cmp ljmp push cmp test push or xchg sub xor sub psrlw and iret shll jo es fsubrl shrl push imul out out mov imul add add xor sub jmp lea movsl push mov inc or cli mov jbe outsb mov inc add fs repz push sbb push mov jbe mov mov cmp leave xchg inc sub mov and ja sbb xchg xlat jge cmpsl mov xchg push pop incb jmp gs decb loop or mov (bad) mov inc fdiv mov inc mov pslld in ss mov insl (bad) pop (bad) and jmp push ror repnz in imul cmpsb cmp add xor loope mov outsb cwtl out push add outsl rorl inc add adc movsb call das loop ja loope outsb push movsb pop (bad) xchg mov in xchg jp (bad) inc xchg push mov (bad) out cli mov mov push or sbb cmp push aad jb out orb test repz jbe lea xchg and and xor sbb repnz dec pop divb push add lcall mov jle inc xor cmp cltd divl xor xchg cwtl stos js inc test push (bad) mov xor jo jmp idiv sbb pop pop adc daa sub push xchg pusha cmp inc adc out stc frstor int hlt scas sub sub mov mov push jbe sbbl add inc out or dec in out cmp popa gs and or inc push or inc (bad) mov in add sub inc test dec jg int xor and dec cmp sub mov (bad) in out ret dec mov stc das jmp sti sub dec sbb xchg sub pop dec dec or daa enter xchg shl sti out dec xor add bound sbb adc jp push xor mov mov pop mov iret scas xor sbb jle push add xor faddl mov push or pop and xchg lea popa gs fcmovnb (bad) fsubrs sbb ret pop xchg icebp push (bad) sub sarb inc ret loopne addr16 jecxz pop push jbe xchg sbb mov add cmpsl cmp push and sbb (bad) sti ret aas pop ret push cwtl shrb js push cmp clc add mov pop out add pop movsl mov insl pop xor lds test add test add cwtl and or sbb mov add xor xchg pop lods cmpsl xor in jge rep inc repnz (bad) arpl push addb adc leave sbb sbb inc xor xor mov je stc cmp jl or jmp dec cmp mov add fs movsl imul add pop bound mov dec mov dec push das push push lock cmp mov unpckhps or cli xchg add insb push mov dec pop bound xchg shrb xchg xchg inc cmp inc jae add sbb xchg cmp push das jno mov cltd mov popa (bad) jb push pusha mov movsl pushf add and call dec test and fnstenv sbb push shrl loop pop pop mov jno je scas insb mov pop inc dec enter pop gs mov jbe dec mov push mov dec sahf xchg std mov xor add imul fistpll jmp mov add pusha jecxz daa mov xchg outsl dec imul sub dec (bad) (bad) daa pop push icebp movsb cltd or mov xchg sub pop mov pop bound jbe call les pop pop or xchg loop cmp scas jno enter testb push into inc xor ja cmp lods lahf xchg pop fcompl xchg ja xchg in scas push movl (bad) (bad) pop loop or xchg out ret nop out push mov icebp (bad) ja adc daa mov push or into cmpsl and (bad) pop jl in fnsave add sbb push outsb inc scas aaa mov ljmp (bad) (bad) xor flds pop or rcrb mov and fisubrl bound mov cmp pop fwait mov fldt repz mov popf out stos mov leave leave pop imul inc (bad) xor cmp mov sbb jns sbbl fisubl sub sahf xchg fiaddl xor ficom nop testb lea testl push pop les stc rol mov addl mov pop cmp out adc cmp xchg mov sub xor jg xchg imulb in and push pop and imull incb mov sbb mov es jg ja es push cmp cwtl (bad) lock js into inc lock jle nop lret scas xor adc mov in leave enter call pop add or insl ds xchg out (bad) js mov mov or fsubr mov nop add cltd pop (bad) data16 jge popa icebp aam stos cmc (bad) push je mov jne lret aad pop ret mov popf cmpsb add icebp pop lcall aaa sti jle xchg cld fist and and inc ret ret mov dec xorl mov test mov in in sbb insb ljmp jb mov imul xchg xchg mov insb or jp jbe jno inc inc ljmp (bad) mull adc (bad) sbb out jo clc lret mov ljmp xchg dec or mov inc inc jb imul pop inc out cmpsl loop xchg dec push jg das pushf mov imul mov jle out add arpl shll rorb fstpt fildll roll insb movb pop mov push mov (bad) mov sub str mov ljmp das shlb repz neg sub ror xchg cmpsb jb bound lret flds popa icebp cmp xchg dec push push pop sti lret mov mov cwtl dec jl and jecxz xchg pop mov scas pop pusha and sbb jo fdiv xor xchg cs cmc cs mov dec gs fs push add lahf cmp cmp imul push push adc fnstsw movsl imul (bad) jmp cld lahf pushf pop pop xchg push enter sbb mov jnp mov imul mov and lahf arpl pushf pop stos test inc insb cmp rcll mul or xchg and loop cmp jbe js mov repz jb (bad) jo fs data16 mov mov dec lea inc fwait inc es shrl (bad) xchg fs or mov ret inc es and mov repz pop dec (bad) pushf add enter xchg fidiv (bad) mov loop in mov mov sbb mov lods mov mov lods ficompl mov fmuls cmp push out int3 mov cli push lret mov sbbl pop push rorb sbb push in addr16 or add fcoml movsb nop cmpsb sbb mov cld lcall mov and mov imul adc icebp mov out or adc push into (bad) in mov mov dec and out cld shrb scas adc push ja and insl call dec fildll sub jne mov aad (bad) pushf sub jno (bad) sub mov aam mov cwtl add and sub gs add mov mov mov fbld mov fisubr adc jl mov lahf mov mov lret pusha lahf and jns mov jnp pop loopne,pn in mov (bad) int3 xchg fild enter inc (bad) mov pop mov int psrlq imul cmp pushf inc or inc pop xchg sbb mov movsb push or push pusha ret insl cmpl jne,pn and xor add cld insl fldcw pop stos shrb iret and ljmp sub jl and out addr16 push pop lods enter mov pushf insl (bad) fimull loop repnz int (bad) pop aad adc or xchg sub addr16 sbb dec popa mov mov and aas pop loopne fistp scas or fsubl and les pop adc push cmp divl fwait xchg in lods arpl jmp lods lods pop fldenv pop and (bad) jecxz pop cmpsl cs add jns xchg jo sbb ds loopne pop adc into loop and push or and test enter push inc mov mov ret cmp cmp fnstenv stos jo dec sub sahf lret fadds fsubrl out xor sbb call jnp in aas lock dec rolb xchg inc jp,pn popa cmp mov pop nop mul outsl shrl aam lds sbb pop pop or mov dec inc xchg adc stc ss pop idivl adc push lock jbe sub subb jecxz (bad) cmp pop pusha (bad) adc div loope (bad) and or inc lds xchg dec loop pop push loopne push pop es loop es xchg loopne adc add push mov (bad) fcmovnbe dec frndint pop mov sub mov cmp mov repz or lcall mov sub les pop aam jmp aad jae mov out mov sub and mov aaa in mov or outsb scas dec es cmp mov adc outsb jp out inc (bad) fcmove sbb or (bad) (bad) xor nop or loope xchg dec lods sub fdivrl push xchg je movb mov ror push cli and fisttp push adc loope jge pop les cmpsl dec insb jmp xchg mov jecxz das cmpsl mov popf lcall xchg xchg incl arpl jle testl nop aam loop mov dec lahf movsb movsb pushf rclb adc (bad) push sbb loopne sahf and notb xor addr16 std sub int3 addr16 out dec adc fiaddl lods push inc add sbb or sub loop xchg out mov loopne sbb das jl mov cmc push mov repz movsb push push inc ror jp out ret cmpsl sub dec push sub imul fwait js add inc mov cmp repz cmp cwtl pop enter hlt xor decl pcmpgtb (bad) cmp sub lods hlt adc inc or inc cli (bad) bound pop push jnp mov in jb or fnstsw jnp popf cmp je leave (bad) mov sub rorb lods push fwait lea repz jge jmp sti jae,pt lock out (bad) arpl cs cmpsb imul xor cmp push jns or loop dec inc in into icebp pop outsb lret bound addr16 decb pop sub sub add js mov (bad) jnp (bad) jne call sbb imul inc fnstsw mov xchg mov lods cmpsb xchg mov jnp imul rcll sub imul jmp clc (bad) pop arpl mov jno jb sbb popl mov cld addb in adc aam xchg (bad) push fisttp push cmpsl outsl rolb mov shrl gs mov mov xorl (bad) fsub daa add sub push xor hlt aas and repz jg std sub inc testl or adc aas jns push cmpsl cld scas push push push int3 cmpsl push sbb roll and or sub das lods dec xlat js aaa xchg sbb cmp sub mov les sti leave iret loope hlt roll xchg and or jl dec mov ljmp push xor repz rorl add mov jne push mov xlat mov lahf push mov aaa aad adc mov mov (bad) and imul inc sarb popf cmc inc (bad) and sub dec jl push out sti test jp and mov mov scas lcall addr16 add arpl dec sbb push daa sbb (bad) mov or ret shrb pop test jo sahf sub out bound add pop or lcall mov push data16 fsubrs xchg mov cwtl insl sub imul inc bound sbb mov xchg xchg and mov loopne test out int3 add and dec outsl mov push mov fidivr aam fiaddl lods ja lods xchg mov scas sbb adc sub lahf (bad) xchg repnz cmp cmp int3 test jle cltd andl lcall aas and xchg ret xlat xchg jne push push inc out sbb loope fistpll (bad) mov (bad) sahf out jo imul cli mov jno lcall repnz shrb inc adc cld pop iret sahf pop push cmp andb sub add xchg ljmp les add pop or dec pop pop scas aam ret aaa pusha sbb ss ja mov pop repnz jmp repnz dec mov sbb std and mov outsb mov pushf imul in sub pop sub cltd sbb jl (bad) cmp shlb or bound int3 cmp mov mov push fsubl scas push push or stos lret xchg pop fcomps sbb push push dec push adc mov stc (bad) in inc stc adc and mov call loopne fwait xor loop xor cmp rorl cmpsl pop fild lcall xchg in test cs call mov lods push rcl mov dec mov enter pusha ds push loop xchg mov xchg out push or or das mov out mov dec jns xlat mov (bad) (bad) loopne lds sbb and sbb sbb fadds jle shll outsb int3 leave adc xor xchg push insb push (bad) pop inc loope sbb ds add js pop adcl (bad) stos stos xchg and clc ret (bad) cmp or sbb adc xor xchg sbb xor pop xchg add aas xor dec cmp xor fnstenv and in mov pop outsl mov dec mov mov mov movsl in cmp mov mov (bad) pop test shlb shrb pop push jmp push inc jae fsub or push inc or adc sub cwtl fwait push pop (bad) jno cmpb adc pop cmp jne popa cmp sbb xor out jecxz std mov arpl int push xlat jae mov cltd sub pushl out and cmc pop int3 jle sub ret nop ret jp mov dec xchg dec cmp inc push fcmovnbe add push mov scas sti (bad) jae jle les mov push add aas and jp addr16 xchg popa ret jo movl jg xor repz pop cmc mov int mov fwait in xlat popf leave pusha jae add idivl xor fcmove xchg fsubr ficom int lahf cltd and mov or push pop xchg ror mov leave fwait gs stc (bad) pop sti clc orl loopne (bad) shll dec test dec out cmp mov and cltd fcmovnbe and or jne pop push fs aaa push lret mov fs push punpcklbw lods pop dec jne sahf data16 dec lock or fcoms add gs mov aaa icebp xlat push pop push rcrl pusha pop cmpsb sar mov je sub outsb cld hlt ljmp xor add (bad) cmp into push xchg cs mov mov mov add pop mov sar stos xchg cmc pusha fwait inc cmp add mov test cli xorb push adc arpl jnp je adc cli cmp cld fs xchg test lret movsl inc push out in jmp push bound enter inc std or cld repz push sub icebp pop hlt js or pop and mov mov sbb dec fs es mov mov push test and hlt fldt je punpcklwd dec pushf adc push test (bad) push out sbb pop lods repnz mov cld xchg jl in in adc inc pop test fs lret mov pop inc rorb popf (bad) add lods mov mov push lods lods stc stos mov push jno xchg mov popf push out sbb add insl (bad) jns add ljmp pop stos inc adc xor icebp test xor lock dec xlat les push mov loopne ret leave xchg call loope and inc aaa lods pop aas mov insl test loope and (bad) leave clc mov xchg xchg lret mov pop cltd insl push jl ds cmp mov mov adc decb nop jge mov dec mov jg cpuid out push jge lcall and xchg fistpll push (bad) outsl rorl push pop int3 lea sbb sub mov sahf es fisub das cmpsl std (bad) ret mov push mov push xor xor jb cmp xchg call pop ret adc movsl or mov ss jb dec (bad) and push ret ja or jns std scas dec xchg (bad) fmuls add xchg sbb hlt mov pop (bad) daa push dec outsb push lret dec pop push fwait jmp inc xchg pusha aaa mov jl or xor or pop xor mov cmp fidiv cmc sbb lods das fcmovnbe mov mov xor loop shlb lar add mov adc fdivrs xor and xchg xor dec insl stos sub cltd mov lahf in jns adc jmp add ja rorb into dec jecxz inc fidivl mov jno mov xchg scas cmc or or or aaa js jo out ret push test sub inc jmp iret push or cld or loopne xor je adcl lods outsb cmp (bad) cld push aas mov cs inc pop aaa jle mov imul loopne add and xchg cmp nop sub mov hlt les mov popf push sbb mov push or mov jbe nop cmp mov mov inc leave mov mov jmp repnz int push mov xor into out int3 push cltd add add cmpsb fisttp mov dec inc ret aad int3 lods jo adc fidiv jne push mov pop mov sbbb icebp out (bad) fadds lea rorl js xor sbb gs add aam cld (bad) hlt rolb mov cmp pop dec or pop loop add jb out sbb test mov cmp (bad) pushf imul mov bound xor and les adc or cmp movsl or insl jg pop mov arpl pop (bad) jmp lods sbb lock lods insb or aad idiv enter pusha arpl add dec dec sbb in fadds jg xchg pop pop jle mov imul addb sbb jle or out lcall push mov dec adc sbb dec and push push sub add cwtl push call clc test aad rorb sub cmp test (bad) pop ds ljmp repnz cmp lods or inc loop popf lea cmp nop les add adc test push arpl sbb add sbb inc xchg pushf leave xchg sub push push bound repz fmulp cmp cwtl out (bad) cmpsb cmp (bad) mov es xchg xlat dec iret push or adc ds jecxz mov pmaddwd xchg jge mov adc test cmp sub xchg mov cs outsb or jecxz popf sbb addl add jbe add call mov push es push jae cmp sbb mov push int xor or ret mov sbb in add push mov adc ss xor pusha ds mov and and rcr fwait lods add or or jl push add movsb nop push and cmp push inc pop lahf call lahf or mov sub mov dec or out and in mov mov (bad) mov lock push mov xor rcrl xchg int pop inc dec sbb sti adc ret ds out je stos cmp daa in cmp mov lea jp (bad) or push mov fstpl loopne lcall mov orl (bad) stc sbbb sbb lds test fistpll rcr and lods fsubr adc jg push data16 (bad) jo jg icebp cltd mulb in outsl pop orl out xchg dec mov (bad) aaa in mov bound add cmp lret add mov adc add test mov xchg cs mov iret cmp pop jmp fiaddl mov hlt ret cmp and loope cmc cmp fcompl gs fistpl push cmp stos xchg insb aaa sbbl adc mov frstor and mov push push shll sub xchg testb mov mov pop jne add testb fs push dec dec hlt push and fisttpll xor cmc push out adc test mov jecxz das or sbb imul daa mov pushf inc or add cmpsb push fnsave cmp xor pushf sbb scas mov xlat or xchg clc cmc nop push and jb mov stos jecxz push push sbb push (bad) mov jg addr16 in xchg sbb test clc or movsl add les not jmp orl ret arpl xchg xchg pop cmpsl xor jo pop mov mov mov andl lahf cmp out sub push adc testb pop xor pop or xchg pusha gs addr16 in flds mov mov jnp inc popf data16 std in mov mov xchg mov (bad) outsl fmulp adc loop pop loopne push pushf xchg divl mov push call push data16 jo mov jle pop mov pop mov iret popf sub sub inc mov popw movsb mov adc push ret lods or add pop add data16 jle fwait jp pop in out push test jmp into mov mov (bad) and stos or ja mov int lds and scas dec (bad) in push popf jno push jns sub loopne add les push lock fyl2xp1 add icebp sbb mov cmp xor cmp es fcoml inc gs call int inc stos repnz pop sub pop loop pop cmp add stos shr pop or push pop cmp mov mul and lds stc rolb daa in in jnp xor je ja dec mov mov xor (bad) hlt mov push movsb mov daa cmp aam and lea adc pusha lods movsl popf cmp pop adc cmc xchg or xor ljmp clc (bad) pusha sbb mov (bad) push or xor lock daa sar mov insl pusha cmp lahf jbe push and test sahf orb daa popa scas (bad) int3 fdivrp mov and cmp mov rcrl mov cmp fistpll pop mov in (bad) js mov jg dec cmpsl pop push jmp test xor hlt scas inc cmp jmp add sub jl int3 sarb dec jp xchg add test das inc fiaddl sub imul and xor iret lods or fcoml pop pop inc mov dec popa test xchg add stos inc mov vphsubbw sti mov (bad) mov dec jmp pop dec push mov push scas mov pop pop cmp add ret mov inc jb xor and icebp xorb sbb mov add fsts pop xchg mov sbb cltd mov loopne loop test std (bad) out sarb mov dec mov jge mov push jae cmp push out xor fist or (bad) xlat xchg pop faddl inc mov and testl scas sahf shlb rclb pop call jecxz notl aaa aas mov pop jl and cmpsl jg lds lea loop hlt shrb push loopne fwait and fimull dec lret fdivs test jmp icebp lret jp imul sub xlat or hlt and outsb mov fidivrl adc adc mov or leave xor pop jp out mov rolb lret lea inc mov sar mov xchg test inc in cmp sub mov add mov popf push add lds jmp push inc insb hlt in xchg jge test or push ss shl (bad) sar inc lret add mov fcmovu push out test mov push arpl cmp repnz cmp mov cld into outsl jno pop mov int es imul fstpl jno sub sub dec (bad) jl dec (bad) pop (bad) leave or lret (bad) out icebp jbe ja adc test cmp fwait loop mov or sub insl mov mov cmpsb test enter adc popf push dec mov out shrb out outsl pop mov call inc push lock adc cmp xchg cmp dec stc jg int3 (bad) mov data16 fildl pop (bad) (bad) xchg sbb jo movsl fwait push aad jae pusha mov pop imul das mov in lods xchg test cmp push mov push mov dec cld cmp dec jae ret test repz push and pop jecxz jmp jmp push xor or xchg leave (bad) push cmpsb fidivrl in jle in add jge repnz sub xchg bound arpl arpl push pop xchg pushf enter out bound jge bound aas lahf loop xchg xor lahf pop jmp loop mov imul mov inc cmp xchg aam lret iret mov inc xchg cld lods lcall clc and mov pop pop jnp fildll and leave in (bad) std ret mov push out outsb mov adc dec (bad) shrb addr16 cmp add sub enter test das xchg shl mov mov lods push and adc mov loopne lods xor fcompl lret push push fldcw repnz mov mov add jns dec mov dec cmp lock or cmp outsl sub les (bad) jmp andl outsl fidivl and mov xchg jge push sbb mov pcmpgtw jb mov movsl js xor jecxz adc sub loope adcl es inc rcll shlb jae push jno fistl xor repz pop sbb sub xchg mov or data16 popf insl mov movsl xchg xchg mov dec push cmc mov mov xor mov mov rcl in enter call outsl jg pop into push lds fdivl and lds pop (bad) xor mov in push xchg xchg jp mov cmp shlb enter cmpsl add fwait add insl cs daa xchg repz lcall stos cli les mov scas addr16 ret xor ljmp xlat inc dec movsl sarb in sub (bad) dec push inc or lock rcr sub enter (bad) mov inc xchg jne into je xchg sahf leave (bad) mov jle fisub fmull and fcoms pop adc inc (bad) pop mov data16 mov adc push lods movsb (bad) aaa xor sub adc pop lods iret xor mov test rcrl sbb sarb or das fcom add mov push cmp icebp ljmp xor (bad) or inc adc rcrl mov gs bound stos mov daa sub or or imul pop push xchg inc cwtl add (bad) mov jo xlat push jl xor fmuls xor cmp or mov (bad) xor xchg inc cmp call push dec add es dec lahf out pop movsb in fild test jecxz clc dec mov xchg fcomps aad mov (bad) mov movsb test lock scas cmc mov repz xor addr16 lds add out cld push lret xor jg or pcmpgtw cmp ret push andb imul and dec pop popa lea repz and or add dec cmp or test fadd dec cltd jno mov je aad cmpsl push popa cmp jb lea fwait imul inc mov int inc nop negb mov and ja dec fistl mov xchg out mov stos mov aad mov testb xor or rclb xchg call daa outsl sbb cmc in cmp mov aad xchg mov mov fst lret cmc xlat cs add sub adc aad pusha aas adc cld xor push leave lss in je rcrl pop mov add aaa or jmp sub jae cmpsl je cmp in or add cmp fs jge push xchg aam xchg jne test pushf dec mov adc dec fadd cld push cmc bound repz test dec aad jecxz push lock rcrb sub lds sti xchg or rcll pop lcall aas mov pusha add jmp lret inc aaa cmc enter push push and nop (bad) xlat cltd jns add pop add cmp movsb inc es adc pop mov jae sbb data16 xchg cmp push or pop ljmp and xor (bad) jnp push clc xor sarb pop mov cmovns fdiv push push dec mov aaa (bad) iret stc push (bad) push push and lret stc ficoml push dec sbb adc push push xor sub fisub insl divl inc popf inc mov cmp cmpb in (bad) xchg (bad) loopne (bad) in (bad) lock popa adc rorb xlat clc dec xor xor std jecxz xchg mov das inc icebp rep cli data16 push ret fnstcw addr16 fnop cld mov and sub hlt sbbl jb mov lea mov xchg mov sub xchg mov incb out stos adc popa mov push in fdivrl sub stos scas push pop add mov lea (bad) movsl cmp inc sub cwtl or incl xor adc inc fldlg2 adc xchg mov sahf sub jo xchg fist dec mov orl aas (bad) jno and out sbb int3 lcall aad repnz cmp jl jge pusha inc sub add and dec pop pusha mov inc mov addr16 xchg mov add mov ret int in mov ds scas jle scas push xchg int3 fstpl mov push cmp xlat sti mov sbb xor mov mov adcb fisttpl inc lods mov sub xchg and decl jns imul cwtl arpl fidiv out mov pop aad mov arpl fidivrl jnp sub gs push adc bound pop into inc pop outsb push std sbb ret sbb push push xchg push cli jecxz xchg pop adc push fildll pop test mov mov mov inc pop movsb mov js cwtl pop xlat sahf sti lahf inc lock repnz sub daa sub mov push mul xchg mov daa pop cld adc dec mov mov cmpsl js js cs push ljmp mov in enter mov ds inc adc pop iret (bad) mov xor int insl jg and icebp js inc pop dec sub movsb sub movsl lret call xchg cmp or cmp adc inc mov push inc add jl mov in lds jno (bad) mov lahf leave stos (bad) rcrl fidiv (bad) adc (bad) mov inc lock dec cmc es mov fldt adc repz mov fdivrp fwait aaa cmpl mov das and jo pop leave push movsb xchg int3 xchg mov mov xor jp insb pop and pop (bad) mov aam das fidivr nop pop (bad) ja cmpsb jnp les scas cld mov aam loop movlps imul jle movsb dec ret imul pop inc xchg repnz sub jl xor mov sbb adc mov cli mov pop lods imul sbb mov cmp mov imull push mov adc jbe jnp adc xchg add cmp sbb push add inc sbb inc enter xor shr imul insl pop mov cs adc mov pop push pop pushf ret sti out push xchg push mov pop or cmpsl add pop push lods (bad) test lret jg test mov push inc add repz push push mov aaa out mull shrl mov mov pusha or jg pop call push sub aaa xchg loopne lock xor nop sahf dec lcall mov jbe xchg rorl xor aam mov sbb inc jge cwtl mov sbb lods test por cmp test mov aam cmpsl imul inc enter inc cld xchg sbb (bad) (bad) out scas inc pop cmp mov sub jge rcrl and cld cmovs mov xor std pop and push xchg mov fstps outsb xor ss (bad) shll inc jle rolb pop sbb add xchg push push movsb aaa js rolb stos aas rolb dec mov cli sub xor out or xchg and dec fnstsw jp xor fstpl pop lret sbb outsb xchg push rcr daa mov pop sbb cmpsb lods mov enter push dec pusha or cmp imul adc (bad) jbe (bad) cmc dec mov cmpsb pop orb inc push xor les dec add mov data16 xchg ljmp bnd mov cltd mov fdivrl mov sub gs adc push adc add pop bound lea add (bad) (bad) mov jae xchg into mov add test imulb sahf mov rcr adc pop or (bad) push subl lock dec (bad) in ror stos dec into mov cld lea xor push xchg std cmp ss in jl lret or ja jnp xchg jmp insb dec adcb mov (bad) ja and int add jns cmp push pop sahf stc sahf xlat jge cwtl inc (bad) xor fcmovu jl push (bad) dec sahf pop repz movl out pop je addl popf cmp xor or xchg loop mov bound das fnop popa cmp dec add inc adc adc xor fsts xor das in imul or sub lcall nop out mov jmp (bad) testl stos inc sarb mov mov jns push loopne xchg sub xchg mov pop xchg mov in jmp mov sub outsl cmp pushf shll adc in stc push ss push dec pop and (bad) out leave xor fmul in repnz cltd sub sbb adc gs (bad) or mov (bad) inc insb movsb xlat cwtl sbb cs sbb or les stos sbb or add mov pop push pop xchg mov cmpsb in (bad) push sbb and sbb dec sbb fildll pop pusha mov fldt mov incl es cli shll pop test dec loop int popf je mov push sub or dec aam insl movsb cmpsb loope sub lock mov lcall ljmp mov jo roll mov rcrb enter shlb mov (bad) sti sub into stos cmpsl mov xchg adc xchg nop popf push imul popa arpl ret es inc push jle (bad) jo add mov addr16 lret push out sbb pop cli jg sti rcll jbe ret fstpt lods shr out dec jecxz push bound mov hlt aas sub in arpl mov push ds frstor das (bad) mov loopne inc dec adc xchg mov aas pusha cs or mov xor js sbbl rcll or mov xchg sub stos out jg pop fldl arpl iret cld sub loop inc outsb inc mov (bad) jecxz push arpl (bad) and cmp mov and jmp push ljmp dec rorb dec jle sbb in mov ret mov dec fist jb push mov popa or cs (bad) faddl dec test pop or aas sub fwait cmp inc stos aas stos dec pop add cmpsb and push ljmp jmp (bad) mov mov adc add xchg popa sbb jns push scas jae movsl dec fisubr sahf sahf std test addb and mov rcll adc mov incb int jl lods xchg jnp dec jl lods nop mov push (bad) sti jns aad inc fild fildll std jnp pop nop movsb ret cmp push sbb sahf movsb adc and pop ja cmpsl int3 pop xor movsb dec outsl mov outsb inc subb repnz cmpl imul (bad) add pop inc xor mov or pop je mov movsb or lea shl add mov pusha fisubr xor jecxz cmpsl leave test mov and aam mov (bad) mov mov jno push subl push (bad) fs sbb loop mov imul cs (bad) mov lea imul sbb pusha bswap cmp ljmp cmpsl je out jmp adc lods mov cltd repz sbb dec cmpsb xor stc sbb inc aad hlt test ja mov leave push push into mov test sub (bad) dec push (bad) je or mov movsb stos clc jno sbb pop pop lret xchg (bad) jb cmpsl outsb push adc stos add sub adc fadds and pop and sbb mov jb mov xor dec mov out test dec mov stos fyl2xp1 mov fmull xchg mov (bad) int3 into sbb mov add or nop push jmp adc pop sub adc nop inc xchg lcall popa (bad) xchg cmp mov cltd cli inc dec in dec push and lahf add mov cld and rclb gs out pop lcall add xorl imul push jge outsl test push mov (bad) xor push adc outsb or add lahf xchg repz xchg sbb iret imul popf push insl adc fidivrl pop xor imul pop mov fnop ds sub xchg xlat push gs sbb std in clc dec mov xchg movsl xor ret mov xchg mov daa sbb pop lods aaa rcrb (bad) lret out mov pop scas pop jb cmp dec mov sub (bad) fisttpl arpl mov inc pop adc fldt (bad) dec pop in add jne hlt data16 sub mov mov cmpsb jecxz pop (bad) mov outsb arpl xchg imulb test lods cmpsl roll popa les sbb mov lahf sbb sub das mov stos xchg mov andl das sbb fcomp ds ljmp add sbb into pusha scas xor call push push and jne cmpl sbb adc push xchg add adc (bad) xchg add sbb lahf fisub lock xchg cmp inc mov push dec hlt pop jge pusha mov fldenv pop outsb out mov sbb and addr16 add leave ret inc add fisubl aaa pusha sbb lods data16 lods lock xor into mov sub cmpsl add inc shrl gs scas pusha mov pop pushf push push fidivrl push (bad) push stos inc iret enter cmp and pop lret icebp add adc mov inc pop lods sub xchg jns lock jge in in pop mov fcmovnbe jbe dec pusha aam ficom cmp cmp inc mov mov xchg xchg sarl icebp (bad) divb cwtl (bad) sbb daa push dec pop jb (bad) clc dec mov imul cltd push mov add insl mov (bad) pop into (bad) inc popa inc adc inc mov das xchg inc mov xor divl sti add cs sub and sysenter pop mov sub pushf and lcall lock and (bad) and pop cmpsb push fdivrs xchg inc cmpsl pop and testb jne and mov adc fsubs xchg outsl clc ret pop aam lds adc cmp imul sbb test push (bad) mov test and pop test stc xchg cld or call rcrl xchg mov mov mov (bad) lods mull (bad) shr or (bad) loope inc mov stc pop fiadd mov loopne lods gs jle stos cwtl xchg sub andb add cmpsb lods push pop dec std mov dec jl cwtl sahf dec sarl sar loop mov cmpsl cmpsb xchg out ret js shrl pop adc xchg daa pop mov dec dec outsb and cwtl xor imul jp push imul dec lret push lock or pop lahf sub jno dec jo adc mov sahf push lods xor jbe cltd outsb clc lret mov push imul bound js dec into adc push mov out push push mov rcrb cmp push jp sub or or (bad) data16 inc push pop in and call scas add loopne mov sub push xchg pop pop mov or cmp mov or outsl fidivl and sti mov mov mov shrb rclb ljmp pop mov add adc xchg sbb pop or addr16 push mov mov xchg sahf cmpsl lret (bad) ljmp loope xchg flds lret jb sub cmc pop mov mov jge lods lock pop pop jo test mov rcr and inc cmp xchg jbe pop jb fcmovnb dec ss sti les jmp mov fmuls nop stos mov js pusha sbb adc je jo add fist insb mov fstps mov mov pop xlat fs pop int3 test pop or mov loopne (bad) (bad) sub xchg inc test jmp (bad) cmpsb and icebp in xor aaa ss (bad) mov rorb pop and test add in push mov cmpl ret imul xchg mov je (bad) ss xchg orl (bad) mov clc xor cmpsb xorl stos fst dec loope fldenv push sahf enter sbb mov es cmp pop mov push cmp cltd divb fidivrl out cmp mov push inc mov xor push dec jge popa xchg mov cmp repz repz push sbb popa les out ja or mov jo dec xlat xchg jns sub xchg adc mov sub cmp mov or lds imul stos insb or mov mov orb test jge stc pop and scas jae outsl lahf add mov fwait aas cmp lcall mov jl mov lret int xchg mov leave dec inc xchg js (bad) leave insb sbb adc std cmpb call xor movsb adc and mov ljmp cmp adc pop in pusha insl push adc inc mov addr16 popf mov push xchg jle mov adc lock scas push in inc xlat jnp popa mov cmp fs sub pop aaa jmp pop std sub mov arpl jg pop jp mov push pop je (bad) leave jp movd cld fbld or cmp stos and xchg js insl fstps cli mov or jae push mov fcmovbe das inc push movsl outsb xlat (bad) or jmp popf add addb xchg add add and or dec jo mov enterw push xchg int3 push mov mov aad scas ficom mov inc ficomp stos or mov pop pop sub pop clc repnz push fidivl cs mov sub leave inc jge (bad) mov dec adc cmp fbld sbb stos or mov subb ja sti xor sbb mov add adc and gs xor and repnz push inc pushf fstl pop cli loope sbb lret jo fiadd push mov xchg push mov cmp dec cli push dec push cmp or test daa mov push in and jl or xor (bad) push mov lods add enter ljmp test inc cmpsl insb repnz adc add xadd jo mov rorl (bad) (bad) cltd (bad) int3 sub mov adc jbe sbb insl push sub jne mov pop cmp mov mov repz fs mov rorb mov mov add push ret push adc pop out sub dec decl (bad) push xchg pop xor stos or lea leave je incl adc lds iret cmp mov aas xchg repnz inc and jnp cs mov or push xor push outsl sub cltd fsts sub roll fmuls addr16 adc into aad xor enter ljmp dec out cmp inc arpl outsl (bad) lods sbb stc call mov (bad) xchg mov lock and mov xor cmc push jno push ljmp cli fistp mov sbb sub add in push dec mov lods lods es pop out insl int3 out out sbb iret cli repz mov cmp and mov mov fdiv mov aad inc sti sub jmp xlat aas push call mov les outsl adc fwait lock dec rolb inc psrld add les sbb lods xor dec xchg popa mov jg stos repnz push pop mov xorl inc ja lods dec (bad) ret sbb mov jge mov sub lock hlt or add push test out push mov popf xor lcall into pop mov ljmp ret jb mov lahf nop imul les fdivrs push push orl add and (bad) mov push xchg push fnop xchg call insl adc scas inc push mov mov push sub or lods sahf cmp into iret cmp add cmc mov push xchg push mov push ficomp sub stos out loope mov gs iret adc (bad) insl clc dec test dec and sub jmp dec aad xchg xchg cmp nop add pop sarl xor mov push es xchg fs (bad) cmpsl cmc pop mov adc push or push mov or push rcrb outsb push mov inc pushf adc rcll je mov fmuls (bad) pop xchg inc dec sbbb loop xlat dec push pushf and sahf inc icebp cs push dec vmovaps or push mov cmp dec hlt ss sti dec cld scas inc jl rol sbb jae aas add inc xor inc pop or in adc divl dec mov xor pop pop xlat xor or outsb sahf mov dec mov add adc mov aas add repz fstpt adc inc stos rorl pop mov mov cmc cmp call lea je bt stc cmp pusha pushf call pushl push mov call ljmp into movsl jno inc (bad) sti repz mov aam dec cli stc dec ss xchg addr16 loope push add leave xor and and sahf pushf hlt ror pusha adc mov and repz (bad) sub pop cwtl mov add jbe and scas in ss cmp fild (bad) xchg mov decl fsts movsb sbb shll xchg sub push fcmovnb xlat sub aas imulb jbe mov repnz aam xor lret xchg mov inc outsb cmc push push lret (bad) pop xchg stos sub push inc aas cmpsb lcall es (bad) leave mov push scas cmp inc mov mov imulb (bad) or inc (bad) iret lret sti mov dec mov std adc push push sub sub sub ret dec xchg into dec mov xor cmc dec mov das dec hlt pop mov sub fwait es arpl mov push fs into adc sbb sbb xor inc mov iret scas jbe jo in jge inc mov sbb xor stos jecxz scas popa push in fxsave iret or shll out jl inc (bad) and jno xor rcll xor inc pushf mov repnz es cwtl add jle or and adc inc add loop add adc push lea jae daa adc cwtl dec pop aam bt pop btr mov stc cmc push cmp pop lahf lea mov jmp movzbw mov cwtl mov movzbw lea call out xor in (bad) push inc mov inc (bad) lahf fbstp sbbl setns call inc jp stos dec push lcall mov pop mov and jmp loop lods or or cmc add rcl pop aam les insb call iret mov lock test nopl scas cmp or repnz mov push push jl mov dec adc fsubrs adc lods jp xor inc bound fnstcw repz in mov cltd and push jno sbb scas data16 mov mov pop jae test out push add push mov bt pushf clc neg jmp shl pushl cmc test mov clc cmp movb lea jae test bt cmc bt sub pushf mov lea call jmp jno xor xlat push inc or cmpl cmp dec mov cmp cmc sub bound bound push inc and inc or xchg movsb push (bad) xor sub outsb (bad) repnz xor and xchg ror lret call sub xor dec lret std sub jb push movsl (bad) cwtl push jnp xchg mov mov inc pop dec flds mov shrb repnz lods popl pop int pop div negl push lods sbb das sbb sbb xchg pop inc inc sarb push ret xor fsubs daa jbe pop mov lea je pusha bt jmp stc mov cmp cmp test pushf lea je clc add call jno xor rorb inc jae jmp inc mov enter sbb je push and addb test scas and ljmp xchg pop xor xor fmull push fs pushf inc inc outsl out jmp adc mov daa push mov imul pop cli pop mov mov mov xchg mov sub inc pop mull jmp shlb mov pop mov push or push cld xchg gs sub fldl push or mov cmp fwait mov imul lea push pusha mov pushf lea jmp jmp add push lret rorl inc xchg call (bad) lea mov ret jmp push mov scas lret xchg sti jmp aas xlat dec jne pop pushf gs aas dec dec cmp inc in mov in addr16 lea or jae cmp dec jae test add push sbb add mov fsubl jg jne (bad) psllq in mov or mov or sbb adc cld or dec out (bad) fnstenv jne outsl mov sub sub lret in mov rol lret cmp lea je push lea jmp call pusha stos push push pushf pushl lea jmp mov test clc cmc call add dec popa imul jb inc imul jns popa je inc js jae jae jo icebp lods adc push mov cwtl (bad) stc sub icebp lods adc ja int3 or or bsf mov clc pushf pushf stc cmpb push movb push mov lea jne push pushf pusha lea jmp pusha dec clc movb rol clc neg bt movb push mov cmp lea bswap lahf sets lea setb lea mov pushf lea ja pushf lea jb cmc call mov pushl movb push mov stos pushl pushf mov mov push movb push mov lea jmp sbb (bad) push rorl inc or mov out icebp add mov in lods xlat xlat mov (bad) pusha or aam (bad) push out pop loop ror xor dec xchg and xchg push xchg jnp or in or sub or lcall outsl xchg push lret xchg cmpsb cmp arpl inc push add push popa je inc imul jae add push inc das inc mov loopne adc (bad) xchg loope mov in cmc fwait sbb cli movsl push push stc insb add xchg jnp push cld or jbe adc inc mov call ss aaa mov jge test push or cmp or popf or lock stos imul lret stc jle fcoml mov xchg xlat lds imul adc insb adc sub clc xor clc rolb push cwtl leave out push in mov sbb pop fmull inc add xor imul outsl cmp or sub sub dec dec mov arpl cltd jne sub outsb push sahf sbb sbbl mov fwait xchg insb inc rcrb pop mov fsubs aas push cmpl nop jge sub orb (bad) std nop xchg dec fucom lock push neg rcrb mov and adc cli cmp pop sarl ss push frstor bound cld xor pop out (bad) stos clc sub (bad) inc xchg sbb push xchg dec loopw mov mov xor dec pop outsb mov adc add add sbb add add add add add add adc or add add jo or add add cld sbb add add add xlat or add add pop sbb add xor or std push add call or add xor add add mov clc (bad) jmp lea jb cmp test cmpb pushf pushf jmp not lea pop push pusha pusha pushl ret push movl jmp lea ja clc imul call mov lea jae pushf pushf jmp push into cmpsl jb push inc sub js clc cs push lret mov fsts adc sub jle,pt jl enter jo jbe pop sub call data16 and ret fs jns call out popa nop or push neg jecxz aaa inc sub and pop add dec (bad) jb es inc mov add mov sub jae rolb mov sbb out xor jg (bad) jmp in add jne cltd add ficomp ss pop jecxz mov pop fs sub xchg jecxz jne mov out (bad) ds scas mov dec mov ds mov pop (bad) push inc dec mov xchg adc aam mov xchg xor push scas fiaddl mov je out dec pushf call mov lods roll jno add loop es stc jnp sti mov inc xchg sbb roll or add jae (bad) lahf push jecxz ljmp rolb in cwtl hlt arpl xlat jmp inc jno pop cmp xchg cmpsl or mov sbb dec (bad) sub xchg sub xor mov push fwait outsb rcrl inc ss add lds idiv cld fnstenv lcall loopne pop lock cs sub jl push das icebp pop push cmc push sub cmc push sbb xchg clc or push dec popf fisttp inc ret fwait imul lahf cmp nop fmuls sbb adc mov sahf test dec pusha mov push ljmp and repz stc popa lods gs jne or inc jp test or outsl (bad) fdivs dec out sbb imul or mov mov adc je sbb ret jbe,pt mov dec inc adc movsb pop or add push lret leave ficoml sub test add add jg cmp add les cmp insb jmp pop and insl mov and fmull in cmp ss jle imul cmc push inc fstpl mov or inc lods cmpsb out cmp movsb clc cmpsb fnop mov (bad) std xchg inc mov (bad) leave int3 es lret or jns mov and mov mov mov adc (bad) call icebp push jg or pop sub pop jmp sarb sub in stos sbb mov (bad) or cltd cmpsl pop jmp sbb ss sub movl add or mov js loope imull xor push xlat push in push outsb insl xlat xlat adc out inc les xlat pop mov mov js inc cmc pop sub out cs repz lock sub icebp aam or mov push call adc ljmp (bad) (bad) stc pop ret xchg test (bad) inc or (bad) xor jmp stos lods and push jns std stc or xchg mov mov mov cli outsb push adcl loopne les (bad) mov fildl insl fwait in pop fldcw dec dec xchg xor adc jbe adc stc xchg pop fisubl mov rsm cmp add xor pop sarl sbb jo (bad) stos insb adc shrl mov pop jb outsb mov xchg jge cwtl sub push pop mov movsb lods fdivs (bad) cs add insb jge clc pop xor outsl cmpsb dec pusha push pusha mov lea jae mov push pushf pushf xchg jmp jmp inc sahf fimull inc sarl pop push pusha das fidivl push stos int in add lcall add inc xchg xlat inc sub div fstpl adc imul mov pusha lcall in loope ficoml add jns jnp insl push adc cmpsb push (bad) mov push neg lret sub sub jne in xchg psadbw jb idivl js pop jne sbb inc mov mov lock iret es jl sbb mov jb sti popf lcall cmp push dec sub dec nop lahf push push mov out daa decl cmovne dec pop or loopne adc in pop int3 ret or cmp (bad) or jbe mov or or xchg jle inc cli add adc jg arpl mov mov dec popa outsb movsl and pushf mov lea fdivs sbb movsb xor pop aaa mov stos iret mov push mov out cmp sub and jge push arpl lret push sub in sti icebp or sub xchg cli loopne out jne in xor sub popa add shll mov ljmp mov pusha negb xchg fs movsl pusha mov fisttpl shrl ja dec into in in (bad) jbe aam mov into jge xor stc pushf cmpb call jmp mov lea mov pushf movb pusha cmp pushl mov lea jbe jmp lea ja push stc imul bt add push pusha pushf lea jmp xor push inc pop les and xor clc push dec xor (bad) rolb cld xor xorb pop pop int3 dec iret test icebp xchg lds lret mov js xor in push mov xor or pop xchg popa (bad) daa mov adc fistpll pop leave shrb loopne push sub xchg sysexit and (bad) adc inc sahf icebp dec mov insb pop jmp cmp shufps out sbb xchg mov fxch mov arpl (bad) mov shrl fdivrl jg sub testb loop mov add sbb lds jmp (bad) pmulhw inc push pop pop push mov cld dec mov or sub cmp test pop int3 loop out lcall cmp ja xchg push pushl (bad) dec xor sbb imul enter push aas jp aas scas cmpsb jecxz dec (bad) sbb test movsl inc stos ret or pop push das out call sbb inc sbb pop sub aam cmpsb ret out mov addr16 adc scas dec mov add mov and test (bad) int3 sbb and sti push xchg cmp mov outsb xchg mov test mov jmp dec mov inc in xchg ds mov adc pop push push mov xor aam rorb push mov xchg cmpl pop into push jns sub movsl push dec lahf shrb outsb mov notb mov xchg (bad) or stos adcl cwtl inc add adc jo test and sbb xchg scas sub pop stc jb and xchg xor (bad) and ljmp insb (bad) and mov fcompl fisttpl in cltd add sbb pushf iret sbb cmp int3 pop mull aam dec imul je sub jmp ja pusha movl pushl call inc inc push inc push dec xor cs insb add add jmp dec (bad) push and cmp ja outsl (bad) imul lret outsl lret (bad) cmp fcomps in adc inc mov xor push addr16 sub jecxz push push and stos push pop mov dec into pop (bad) loope sub outsb jno xchg jg sbb icebp or int pusha std mov and or sub les rol (bad) icebp jb mov push (bad) out pop cltd loope jb shlb (bad) cltd sub pop lea push mov adc int3 mov sbb jge xchg or cmp jmp bswap shr dec or test mov bsf or inc add jmp clc mov je jecxz shrl push leave stc sbb jg jmp lods jne mov stc adc dec arpl inc ja aad mull popa xor push lock bound jp std jmp movb pushf jb std jecxz fadds hlt into pop ds jb add xchg push mov and out adc iret push imul test and mov in xor sub out jle popf pop pop mov jg pushf add xchg (bad) repz scas mov cmp inc imul shlb sub inc and xchg adc mov mov mov pushl mov movw pushl ret lea jne cmp setg xor lea shl jmp lea je push pushf bsr add shrd clc mov mov add jmp pop rorl push inc shrb fwait outsl sbb int3 mov sahf fisubrl int3 xor cmp cmp shrb arpl mov push push cmpl lods aaa out pop mull fbstp mov sbbb lds mulb push push mov mov sub outsl mov mov mov test imul jmp or sub ret cwtl (bad) sbb nop jle jle pop test movsl inc js sub inc test aas cmpsb adc or inc xchg or outsl sahf lds std clc call sahf js fndisi(8087 push inc dec (bad) adc inc fdivrl cwtl (bad) test adc dec mov pop scas pop pop call movsl imull pop leave adc rorl mov sub mov lods adc jecxz popf mov (bad) fisttp into cmp aas call test jno cmp movsb lea icebp xor (bad) fmull mov and scas jg mov push divb ds es imul xchg cmp outsb lods iret xchg mov sbb and sub jns je sbb adc inc les loop inc xchg es int3 in inc xchg add pusha stos xchg sahf cld ss mov out mov adc inc in mov sub sbb mov fdivs mov xor add shr (bad) in pop loop jmp sub add fcompl mov aad lds ret std inc cli jns les jl pusha xlat daa push mov lea sub push mov loopne ja aas test xchg push insb iret jns movsl dec inc xchg push lods daa mov jns jnp sub jo lahf fnstsw add je cmp jecxz inc cmp mov add cld push or test push xor push jb jae lods inc dec add lcall pop add xchg xor mov (bad) cli and cmc pop push push mov leave cmpsb mov nop mov jge cmpsl int3 dec push mov xor insl shlb aaa inc and aaa mov mov inc xchg lret das repnz cmpsl add les scas enter jmp dec xchg push pop and mov jns mov jp addr16 push (bad) dec mov or lea lret jmp mov sbb inc push dec inc dec xor cs insb add cmp pushf push push lea jb btc xchg shr xadd mov bts shld bsr mov jmp or mov neg setbe shld cmp sub shld sar push movzbw rol bt push aad btr (bad) hlt pop push aas lea pushf mov adc test bsf sar mov test push push pushf test pusha push lea je lea dec mov xor (bad) testb (bad) shr cmp call movb movb pushl popl push pushf movb pushl ret push push mov push mov pushf lea jmp mov push inc sbb mov clc add fsub sbb cmc cmc xchg jne int or xchg sbb sub cld dec jae (bad) aad mov add xor sub cld (bad) xchg pop ret adcb mov xor outsb mov outsl xchg dec or (bad) jo outsl xchg xor (bad) push or aad inc mov push sbb adc push mov lea ja pushf imul cmc cmp add pushf lea jmp xor cmc or mov sar cmc pushf sar add shl adc mov pushl jmp push pop mov push inc sarl xor pop (bad) push lret xchg sub nop dec shl dec ret push lret cmp call mov jo xor push jp inc int3 inc and test xchg dec pop xor push aad push pop test arpl mov hlt or and add xor xor loope mov int adc adc lock jbe mov mov push test aas iret pop (bad) dec and push pop loope mov jecxz pop je push cmp push cmc push sbb int ljmp faddl cld inc shlb je,pn cs fmull ret in jbe dec (bad) leave jb cmp adc insb push dec (bad) mov push inc jmp sbb jge jns mov sbb inc cmpsb hlt insl jae push dec call ret jnp fwait push xor leave xor xchg pusha pop cmp pop fist adc int sbb outsb lcall fnstenv gs xchg mov and jne pop pop fmull mov sbb es (bad) je add xchg mov ret (bad) sub sub (bad) cmp pusha out lea mov inc mov loope push mov mov jne pop add lods hlt pop insl add or (bad) xchg mov or xor and xor out push inc mov sub clc movsb rclb insb outsl arpl sbb mov mov fisub push jae fldt add ja fwait dec pop add outsl int xchg jbe and add pop fisub fsubrl cmp mov adc (bad) xchg inc outsl not sbb shl (bad) lret idivl nop mov lret and loop or xchg xchg xchg and std mov sti (bad) mov sub scas or das in mov ss jle std popa fisub js ja aas std notb or push pop aad mov cmp pop in cli iret mov dec test inc lods push dec ja dec cs decl push inc xor (bad) movsb mov sbb lock stos imul jmp xchg and ja mull or sti jl repz cmp sbb inc and cmpsl lcall (bad) lret into popf jno mov leave cmpsb sbbl and fstps dec dec jmp repnz or data16 repz inc stos imul insl mov push xor dec xor jo in cld cwtl (bad) fwait push daa xchg stos fldcw and inc push pop add mov pop mov rcll add je outsl fs gs popa outsb fs gs add scas push call jmp shl call cmp jmp cmc sub test stc mov cmp cmp jmp int3 dec inc cwtl jmp pusha outsb jle fs rorb rolb pusha push jbe cmp jns sbb cld call stos stos ljmp add or cmp sbb repnz dec lds xchg sbb sarb ret addl in mov lea jns mov jae jae adc icebp xchg mov jne movsb js fisub movsb jb testb imul nop mov ret mov outsb mov jo stc stc mull (bad) mov fsubl mov rcrb and sub in lods sbb jo mov xchg aaa mov (bad) jno fidiv xchg hlt ret fcomps int3 dec orl mov cmpsl push sbb push push movsb dec in add lock test dec lds stos or lea mov xchg sub jge dec popa sub cmp outsl push pop cs sub pop mov mov imulb outsl mov add add xchg adc test fs sbb dec lahf xchg in sub jo sbb dec mov sbb faddl loope roll inc (bad) jbe mov bswap sub push movzbw mov adc adc btc push cmc add push dec inc push mov add setb xor push not (bad) icebp mov cmp mov movsbw mov call push stos push mov pushl lea jmp sbb seta pushl lea mov lahf mov lea jge not jmp cmp movsbw mov sar sub (bad) idivb mov pushf bt sub jmp lea jo lea pusha pusha lea call call mov inc shr inc sub pop cmpsl dec fstpt repz mov xchg movsl adc (bad) (bad) push pushf xchg shl or (bad) jae (bad) adc xlat je sub and inc cmpl inc cmp mov push cmp cli adcl jecxz jo loope cli mov in unpcklps in (bad) add mov iret (bad) and ret cmp mov cmp pusha or inc xchg imul add sbb nop dec mov hlt pop xor sub mov fistpll pop test pushf fstpt fistpl aaa (bad) dec popa xor test add dec dec nop ret inc or hlt push inc shrl dec pop sbb mov nop inc mov mov jg repnz test mov jae stos orl (bad) mov inc mov jae lret adc fnstcw (bad) and test hlt fstpt xor ss mov rcrl xchg sarb sub adc jns lock pop fistpl jle out lahf int3 mov xor lock es mov repz not mov aad mov ds xor subl scas adc inc mov mov inc or out dec mov test add rcrl data16 cmpsb and idiv call stc test pushl popl test cmp pushf push jmp pop aas les cmc push inc cld mov xchg jecxz xchg pop lret jle dec pop mov outsb fs insb mov icebp mov xlat scas rorb inc jne pop stos dec jno sbb mov inc add outsb adc shlb (bad) test aas jmp test mov and sub mov xchg cmp ss push rep lods sbb push dec aas ds arpl fildl shrb aas out adc mov idivl andl jae movsl and cmp scas push loope mov iret mov mov xchg xor push push inc push xor cs insb add aas ljmp enter xchg in pop int3 cmp pop cmpsb cli push sub int3 data16 jg arpl jecxz lcall cmp das mull jecxz sarl sub fstpt add js fsub stos lret mov rcrl add or ja cwtl ffree sub lret (bad) inc jmp cmp rorl enter imul out (bad) je cmp arpl ljmp mov aam out (bad) icebp decl push ret ss pop cmp mov es mov inc stc iret add push inc add xchg in jmp out jo in pop (bad) int or dec ret add push add add pop int3 mov loope sbb in jp cmp adc jle,pt call je adc scas nop out test xor and dec mov imul and xor adc sub xlat (bad) push inc mov add jae fildl cmpsl out sbb adc arpl mov xor cld in mov lods pop rorl xor sbb pushf call mov add test lret jmp dec in and sbb mov mov lahf dec iret push and or sti sub add mulb mov iret dec das incl inc adc (bad) iret jb inc push pop pop hlt pop iret jge mov loop sbbl push add call jmp push jmp movb movl pushf movw mov pushl movl push movb pushf push lea jmp movzwl add bsf data16 mull jp clc clc add test jmp pushf movb mov pushf call je and xchg test pop inc cltd fstps and cmp push fmul xor test fistpll setns bound lock (bad) pop (bad) ja incb ja and pusha cld mov scas int jmp mov sub dec sbb jae icebp and push pop mov and test insl cld mov nop mov test lods sub add test outsl sub push mov pusha aam test enter popf aaa scas xchg mov mov inc clc jmp lea jge mov pushf lea jmp xor mov movb repnz call cmp call jmp jmp and push lods mov push inc xchg push ficomp pushf cmp lcall xor inc ret aas xchg inc ss data16 mov test inc and lock cmpsb pop sub jne in lret inc (bad) (bad) sarl js sbb jne jp aam lret cmp nop and sub jp enterw pop lea add push rolb and out dec mov xor mov mov adc movsl push or dec mov dec loop int sahf out iret (bad) cmpsl decb inc mov (bad) aad xchg inc xor aaa inc cld inc lea jb adc cmp call adc push inc pop mov vmovapd fwait sbbl mov cmp mov push (bad) decb mov out add pop adc and add out lcall mov sti sub (bad) pandn inc mov loop push dec pop popf or in xlat shrb xchg shll sahf add sub out adc push pop ljmp push mov cltd fcoms lahf adc mov stos cli aam int3 cltd repnz dec fwait mov pusha lea ja xor sub rcl sbb xor clc add stc sub add rcl mov xor mov cmc push pushl test repnz call mov mov pusha lea jb xchg pusha jmp pop cwtl clc cmp bswap pusha inc sbb not not movsbw lea push setge mov push mov not jmp shr mov pusha cmc test cmpb call movzbl mov clc add shrd rol or add movzbw mov movb shr cmc test cmp call cmpb pushf jmp xchg shrl cld push inc mov sub les mov je,pt pusha add xchg faddl xchg add jno std adc or sub cmp mov dec cmp dec jno inc jno xor cwtl jp xor sahf iret movsb jp fwait sbb lds fldt mov pop popa lcall sti cmp (bad) cwtl scas rcrl jl,pt add push (bad) lret mov push not inc mov fidivr sti popa mov (bad) cs mov icebp daa adc adc mov adc inc dec (bad) mov jle cmp (bad) lock pop xor cmpsl inc push data16 clc sub (bad) sub (bad) ficom out xchg pop pop jo sbb mov and repz pusha cmpsb jo push scas push dec js adc inc fisubl mov xchg inc inc mov je lcall ss and imul rcrb mov mov dec xor mov (bad) jle sub movsl iret loop shll lret cltd (bad) sbb stos mov ja shlb mov shrb (bad) pusha xchg push in xor movsl in pop pop punpckhdq jecxz mov sbb and mov sbb mov cli inc add pop push pop mov sub sbb fcomps and test (bad) jb dec cwtl inc jno xor inc pushf xor jmp push dec dec push inc push dec cs insb add push inc jmp sar sti xchg imul addr16 adc mov mov pop mov movsb dec inc cmp pop mov inc xor jmp jmp mov push (bad) or test mov mov pop lahf sbb mov dec bound mov adc lcall scas and out imul pop sub or xchg shlb ret mov jg mov or xchg push or push shlb mov imul mov cmpsb and aad stos inc in pusha js and xchg push xor mov jmp lea ja not rol sar sub lea dec jmp xchg decb inc cli add std pop int sub add dec scas mov sub stos imul divl in pop lea jnp pop imul or subb inc aaa loope aaa imul repz popf push xor faddp dec popf or ss or es cmp movsb pop scas imul sahf fisubl popa push insl jo scas lret test int3 mov and repnz pop cmp cltd mov mov jmp push lea jne setno setge jmp mov pusha pushl pushf pushl ret mov pushf movl push call pushl mov movb lea call jmp pushl pusha jmp mov movb lea je movzbl movzbw lea push lea call pusha adc call pusha lea call pusha movw mov adc mov pushf jmp (bad) scas cmp push inc pxor rorl sub loope incl mov pop clc xchg pushf and iret mov cmp mov (bad) (bad) mov mov xchg test in jno lret (bad) lock ss sahf xchg inc loop icebp or scas and (bad) addr16 lret mov scas movsb mov dec ja clc push xchg movsl es leave push (bad) xchg stc sbb ljmp mov xchg in jbe mov inc scas js jb stos ror fs mov mov (bad) pop shlb xchg stc push inc into movsl inc lds ja jb (bad) pusha jg jne sbb cli and cmc or fisub fldl das inc fdivrs push jl pusha or push ret jbe or out aaa or lds cld mov or sub pop lahf push std mov icebp enter push out inc aad sub xchg xchg enter push stos or fs dec les mov out xor xchg out push in jne shr fdivr decl add fstpl (bad) (bad) inc rcl cmp mov bt cmp test cmc repnz push call movsb jb ds push inc popa or idivb and jl inc push push and push inc inc lcall mov sub int lahf mov mov test gs mov mov dec (bad) jb mov mov daa out ficompl mov add inc xchg mov jp xor and mov pop stos mov cltd push mov lret mov xorl repz ss push add (bad) add test sarl push (bad) cwtl call frstor inc and call pusha movb lea jne bswap mov cwtl not movb movsbw movsbw movsbl jmp fild mov push inc aad mov aas fistpll adc and in sbb insl scas mov rclb lock dec decl xchg cmp mov jg in xchg cmp sbb add js inc sub cmp adc pop sahf and fadd lods xchg mov rcll and scas in mov inc in push add pop mov xorb cmp mov xchg movsl popf cmp mov lods push lods mov push mov in pushf in insl cltd sbb pop ljmp pop mov jecxz jle addr16 addr16 mov jns icebp or ds fisubr xchg mov ret fidiv dec sub or test bound cmp push pusha mov jmp fdivrs iret sbb push inc push inc stos cmp mov and xchg xchg repz mov std in es jnp push jnp adc ret jmp repz cli test shlb xor cmp cld popf lea mov outsb xchg mov mov pop fidivl push les push add sbb icebp jo (bad) ret test mov add cmp aaa mov cmpsl pop lret pop xchg xchg sub cmp rol push pushf cmp std and loopne jno xor repz movsb pop cmp stos fucom mov adc mov lea push dec push cltd jns (bad) xchg test push or jle rep mov ss jo aad dec iret das push jns xchg push fsts jns xor xor pop sti popa fcoms stos leave mov stos stos xlat xor fisttpl ficoml stos mov std lods out enter dec stos sub sub or inc sbb xorl mov adc mov or andl sarb div daa lret mov cmp xor jb inc aas xchg and stc dec push sbb sbb repnz outsl out dec jno jmp aad (bad) (bad) dec mov stos pop sbb push int3 cmc sub mov jns and sbb hlt or imul gs push shll and jecxz and xor xchg loop (bad) jbe adcl aas enter mov cmp pop mov mov das pop jge pop imul dec xor and ljmp xchg nop push inc xchg (bad) ljmp mov dec shrl popa mov dec test test xchg lret jmp push push mov mov mov shl lea call adc sub jne mov sub pop pop ret repnz push pushl lea jne ror jmp mov push lea ja call cmc jmp jmp mov lea jmp shl clc cmp add not pushl pop cwtl lea call cmp inc xchg push cmovb notl sbb js loop jnp je fidivl test lds cltd aaa out enter rcrb dec jl push mov or outsb faddl (bad) aad push (bad) ljmp dec cld inc (bad) push jno arpl ret mov and sub cli lahf rcrb pushf in pushf cltd jns lea je fidivl repnz cltd cwtl scas mov mov jb pop and cmp mov in push or loopne xor out xchg jnp aaa push jb push pop mov jge mov (bad) inc stos movsl daa sahf push movsl aas mov cmp pushf inc insl loopne mov mov sub in push lea movw lea jmp sub outsl mov fcomps mov mov incl mov sbb cmc or bound rolb ss jno les adc das cmpsl arpl pop outsl inc jne in and sbb dec (bad) sti sbb xor mov cmp rorl fdivrs lret push or bound mov push jno les aad test sub or push jae fwait sarl xor sahf pop cmovb stos js je insb sub pop mov int dec (bad) pop or bound lret xlat icebp jno (bad) rol in addr16 jmp xchg sub getsec cmpsl mov sub (bad) push adc pop mov (bad) je xor xor cmp mov inc pop out sbb dec fdivl jmp data16 (bad) cmp mov clc mov jnp insb cmpsl sbb out inc ficompl or outsb loope cmpl dec loope cmp sbb popa or aaa into mov mov test rclb (bad) mov sub clc or xor push fdivrs xchg in add daa or (bad) (bad) xor mov leave pop mov call lea mov pushf pushl movw mov jmp fcmovb jge add inc jne,pt inc cmp adc xlat jg in stos (bad) mov int cmp in movsb arpl rcrl das lret inc call xchg mov cli cmp or lret fbld sbb or xchg in mov int add jmp push insb lret xor push cmp pop gs pusha into jl cli shll add mov leave dec lret retw movsl inc fiaddl push fstpl xchg cmc mov pop in negb jl out sbb out xchg sti xchg out sbb cld jns mov arpl je push xchg and fwait sbb cld push mov ss adc add push ds mov adc cmovb push or jb ror and cmp dec jbe jbe push adc ss mov push inc push int3 inc xchg xchg or mov push and out lcall fstpt ret fnstcw xor rcll jle js sti cli movd jmp (bad) (bad) lods sbb mov mov sbbb mov or insb nopl test ret jns lcall mov pop xor pusha gs stos ja push ret mov les pop push imul cwtl cld pop test cmp cmp in rcrb dec mov push aad ret sahf mov adcb movsb xchg inc test cmp testl inc rorl pop dec daa pop cmp cmp ret repnz adc mov mov xor movsl int3 inc mov scas outsl (bad) fbld scas cmp mov push add mov aas mov stos mov fimul test inc xor js push mov cmp fist loop add insb xchg lret loopne pop imul movsl daa (bad) sub aas xor lea jne dec mov repnz mov fstpl cwtl lea call shrd rol cmp stc add cmc pop adc lahf aam lea pop cmc cmp jo sbb push lea push pushf lea jmp push hlt xchg dec add inc adc mov pop or jb sub mov rorb fs or dec pop pop push inc (bad) push pop push je dec push fmuls pop std add add inc sub push xchg xor in mov xchg je add ljmp pop insb inc or or sbb sbb lea add andb test into leave adc (bad) popa cwtl jge dec xor out inc add mov insl cmp inc inc cmp pop push or adc dec (bad) jne pop inc sub inc loop push call popf lea call pusha jmp push stos faddl or inc pop loop and cwtl hlt pop mov xchg out rolb dec sbb and mov icebp and outsb add stc hlt push setbe fdivrl popf sub and jp shrl addl subl stos push sbb lret xchg mov lret sbb gs add cmp pop out call or (bad) fstl mov rclb ja pop jno jo das aam and mov and call jmp stc mov pusha call inc setno neg pushf pusha ror call bt clc test xchg cmp mov call bsf bts rol mov jmp call shld aam call movw movw mov call pushf popl jmp neg sub movzbl and sbb xadd mov sbb not dec bt mov bsf bts add lea cmc movsbw mov setp clc xor not push setno rol dec shld not bswap or pop shld xor bswap jp sar bt xor pushf shl shrd rcr movzbl add cmc bts sbb lea add btc call mov pushf jmp push pushf pushf push mov pushl ret cmp bt sub push push jmp xchg cld pop mov pushf cld lea call jmp jmp cmp sub call push push pusha pusha call push rol mov cmp cmc mov pushl call mov pushl mov mov pushf mov pushf lea jmp pushf pushf popl pushf jmp call movsbw bswap mov lea mov js pusha lea jmp mov mov lea jge pushf push movb pusha lea ja popl pusha lea jmp mov mov pushf mov pusha mov pushf pushf jmp daa mov dec mov pusha jmp mov shr setle xor mov lea jg pushf pushf sub stc shr mov mov pushf mov pushf pushf call add pusha movb pushf lea jmp call mov movw pushf lea jmp pusha pusha lea movl jmp push xchg lea mov mov jmp bsr inc mov test add pusha pushf pusha lea jmp bt clc and push pushf popl pushf pushl pushl popl push pushf mov lea jmp sub jmp mov pushf jmp push call jmp or mov push pusha lea je call call adc push jmp neg bt bt test cmp add push lea jo pusha push mov push pusha pushf pushf pushl ret mov push mov pushf lea jmp shrd inc mov jmp bt xor push jmp jmp jmp lea shr xor rcr shld movzbl cmc inc cmc sbb lea jmp pusha sub jmp ror mov movsbw pushf mov movb pushf mov movb pushf call jmp pusha pushf pusha pushf popl call push lea jp pushf pushf pushf pusha jmp shld mov movzbl mov bt stc pushf call push mov jmp pusha mov call pushf pushf lea ja clc mov clc bsr aad lea shl sub sub aad not lea rcl and rol bswap xor add sub mov bswap mov mov bswap pusha movsbw push pushf popl mov pusha call daa push bts mov clc stc pusha xor pusha test pushf stc neg pushf pushf dec test jmp pushf pushl pusha mov jmp call push push movb movb mov pushl mov push jmp mov pushl mov push pushf mov push pusha lea jmp pusha mov movb mov mov pushf lea jmp mov push push mov movb lea jmp bts shr pusha mov cmc bt sub mov test clc call call mov pusha jmp mov pushf popl lea jns pushf push pushl pushl popl pushf mov movl pushf lea jmp pushl popl pushf pusha push pushf lea jmp test pushf sub pushf pushl mov pusha pushf mov mov pushf pushf lea jmp pusha pusha pushl popl push movw movw lea jmp movw jmp btc mov call mov stc call call push push mov push pushf lea jmp or movl stc xor lea jae pushf inc call movw mov pushl mov pushl lea jmp pushf lea jnp push pusha pushl push pushl ret bt shl sub mov add shr add mov cmc call call call call mov jmp push pusha mov pushl mov pusha mov jmp jmp call pushl popl pushf pushf lea jmp mov jmp xchg jmp cmp neg neg add sets xor rcr add rol dec add jmp add clc clc pusha shrd pushl mov call mov call mov movb push pushl pusha lea jmp movb call movb mov pusha pushl mov pushf call cmc movb rol push call add pushf mov mov pushl lea jmp jmp mov call mov pushf pushf push lea jmp mov push pushl mov pusha mov push jmp and btc shl mov rcr bswap inc sub shrd movsbw add inc mov inc bswap rol cmc rol inc inc adc call call push pushf mov pusha pushf mov jmp pushf popl pushf pushl popl pushl lea jmp inc pushf clc bt add jmp mov call pushf pushl call mov call bsr neg adc notl dec mov cmc call add pushf stc shld pushl mov pushf mov mov pushf push movb pushf popl pushl call pushf mov call mov bt or movb lea je stc push pusha pusha xor pushf jmp sar add xor bswap rol movzbw mov call divl push mov push mov push jmp mov push mov lea jmp jmp movb mov pusha push lea jmp lea jns pushf mov call clc pushf clc add jmp cmp sub call mov not mov pusha mov jmp pusha mov mov mov pushf movb lea jo push pushf mov pusha pushf pushf pushf lea jmp add cmp cmc std pushl popf push lea jmp jne push mov pushf lea jnp pusha movb mov mov jmp pusha mov jmp pushf pushf inc pusha decl movw pushf pushl jmp mov call mov mov pushf pushf mov mov mov mov push mov push mov pushl pushl movw lea jmp pushf sub pushf cwtl test pushf sub push pushf mov pushf lea jmp mov call movw mov pushf pushf pushf popl jmp call mov pushl lea jmp bswap mov neg adc sbb mov pusha shr dec call pushf pushf mov pushf lea jmp lea jne stc push stc sub pushf call call lea pushf movb pushl push mov pushl mov lea jmp mov pushf jmp jmp push pushl mov pushl pushl pusha pushl ret cmc cmp shr jmp movsbw btr ror mov adc dec cmp mov bt sub cmc test shl pushf jmp shl pusha mov push mov mov call jmp mov mov ror (bad) repnz call add add call jmp not pop cmc neg pusha or pushf add not cmp add sar lea not mov clc movw sub push call jmp sub push inc mov mov xor mov push pusha push inc bt ror cmp jmp mov pusha call mov push pushl ret call push mov pusha mov push jmp cmp sub call pushf mov movb pushl pushf lea jmp pushf neg cmc call mov call pusha push movl call add pusha pushf mov movl call movl jmp cmc cmp add call push push inc jmp jmp mov push push jmp push push push pusha mov movb pusha lea jmp mov pushf jmp mov push call movl jmp mov movb push lea jmp pusha mov call pushl mov pushf mov mov jmp push mov call mov inc clc pushf neg call pushf popl jmp mov pushf mov mov jmp call movb pusha jmp xor neg movzbl cmc call pushf mov pusha pusha mov lea jmp ror aad xadd ror mov adc bts jmp movb jmp stc cmp mov sub jmp pusha push pushf mov mov push call call mov pushf pushl pusha pushl lea jmp jmp jmp pushl popl mov pushf pushf lea jmp mov jmp pushf popl pusha mov pushl popl push push push pushf lea jmp call pushf jmp lahf aaa xchg mov btr sub mov clc clc bt add pushf mov mov pusha lea jmp push and pusha pushf pushf popl lea jns push pushf pushl popl pushf mov lea jmp mov pushl pushl jmp mov pushf lea jmp movb mov jmp mov call call mov call mov pushf lea jmp mov movb push push pushf lea jmp push mov pushf push push mov call movzbw mov cmc (bad) icebp add loope dec add mov or lds lea jno mov pushf lea jmp push push movb pushf mov lea ja pushf mov pushf push jmp inc neg mov cmp clc add push pushf pusha jmp pushf movb mov movb pushl lea jmp pushl popl push pusha push movw lea jmp call lea jbe mov pushf lea jmp pushf mov push lea jmp sbb lock into fnstenv push in mov fdivs sub mov inc repz cmc fnstenv fnstenv into fnstenv mov mov pop loopne incl (bad) mov pop call mov call repz mov ljmp sbb mov xchg mov loope mov cld loope jmp fdivs xchg fidivl cmc fnstenv mov fdivs sbb mov (bad) divb ret repz pop call mov mov lock jg mov sub mov cmc fnstenv loopne mov (bad) divb fdivs mov mov arpl mov (bad) incl fnstenv push fnstenv adc mov mov repz loope mov addr16 mov xor mov ret repz xchg fbstp (bad) fbstp loope mov into fnstenv sbb mov stos jmp incl fnstenv loope mov cmp lock loope mov out out mov loopne mov ret repz adc mov cmp mov xchg aad (bad) cmp mov sub mov rcl mov and mov sub mov xor mov and ljmp mov int mov push fnstenv mov mov fdivs rcl mov push fbstp xchg fbstp cmp in mov jg mov xchg mov cmp loope jmp mov rcl mov loopne mov rcl mov out mov fnstenv push jmp mov int mov xor ljmp int mov fdivs mov jmp mov call fnstenv stos jmp (bad) out out mov cmp mov inc hlt mov inc hlt mov sbb mov (bad) divb cmp mov pop in mov out mov rcl mov out mov cmc fnstenv addr16 mov call aad jmp xlat mov arpl mov fnstenv pop call mov inc hlt mov arpl mov loope mov mov (bad) mov pop call mov loopne mov arpl mov mov fnstenv cmc fnstenv sbb mov int mov xchg aad push fnstenv ret repz jns mov mov (bad) mov (bad) fbstp fnstenv out mov cld loope incl icebp mov mov mov xor mov sbb fnstenv loope mov and mov pop call mov sbb mov xchg fidivl pop loopne jmp mov into fnstenv into fnstenv xchg fbstp and call in mov adc mov out out mov and (bad) out out mov and incl icebp mov fnstenv mov mov xor loope call repnz rcl mov fdivs loope mov into fnstenv mov mov adc mov fdivs mov aad lcall mov stos jmp (bad) cmp mov pop call mov sbb mov cmc fnstenv inc repz mov mov pusha mov push mov mov pushf mov call push shr lea jle mov jge push pushf popl push pushl popl movb push lea jmp jmp decl pusha movb lea jne pusha pusha lea jge mov pusha lea jmp pushf jmp movw movb movl pusha jmp pushf push pushl jmp push mov ror btr sar bsf add add xor lea bswap cmp sub bt mov cmp pushf jmp pusha mov pushl jmp aam mov pushf seto sub mov clc cmp pusha cmp add push pushf mov call mov pusha lea cpuid cmp sub push stc cmpl pushl pushf mov pushl pushf mov jmp xadd ror bsr rcr mov sar cmp add neg not xor xor jl lea neg not sub adc btc add cmc (bad) testb bts add pusha ror mov btc add shrd jmp pushf mov pushl pushf popl pusha jmp pushf stc sub call mov pushf lea jmp btc btr cltd mov btc pop inc jmp xchg stc clc cmp mov bt movw pushf sub pushf mov jmp pushf pusha mov movl push movw lea jmp call jmp pushf lea jmp push jmp ror movb jmp pusha mov call call pusha mov call push pushl popl movb pushf movl push lea jmp inc clc shr mov sbb call call mov push movb push lea jmp push call mov pushf mov lea jmp jmp pushf mov jmp pushl popl movw lea jmp jmp mov cld call lea jge push mov mov jmp clc test btr rdtsc call push movsbw pop lea push jmp cmp sub pushl cmp push cmc sub call add movw pushf pushf pushf popl pushf movw call call mov push push lea jmp and lea jno push movb pushf mov call sub stc sub jo push mov shr pusha call call pushf xchg jmp dec btc or mov push add mov clc add jmp jmp call mov pusha jmp pushf pusha mov mov pushf pushf lea jmp mov pushf pusha pushf pushf popl movb jmp call jmp pushl push movw pushl popl mov movb lea jmp pushf popl call call jmp mov call mov movzbw setbe not mov bswap movsbw bswap mov seto pusha xchg lea xchg lea setae setge mov xchg lea lea push push repz popl xchg pushl mov bswap xchg push mov movsbl mov push inc rcl rol movsbw push call push mov push mov lea jmp rep ror cmc btc mov sar ror lea mov std stc std bt pushl popf mov mov lea jmp call inc push push mov pushf lea jmp movl push mov push mov mov pushf mov movb mov push pushf movb lea jmp mov jmp clc lea jno add pusha jmp lea jo push pushf mov jmp movb jmp mov mov push pushl movb lea jmp mov mov push pushf lea jmp stc clc ror stc sub jae sub test pusha stc xor mov sub jmp mov pushf lea jmp push mov mov mov pushf mov pushf mov call movl pushl popl pusha pushf push lea jmp stc call sub cmc add jmp cmp mov cmp add stc clc stc movl mov movb sub call lea jne push push mov pushl push pushf lea jmp call pushl popl push pushf lea jmp lea jne or jmp test stc bt sub call push mov pushf pushl mov pushf pushf movb lea jmp push pushf push pushf pushl popl pusha pushf pushf lea jmp bt xor mov push bt cmp bt sub jmp bt bswap lea jae stc xor bt pushf sub jmp pushl popl push pushl lea jmp jmp pushf popl push jmp jmp btr daa mov sub shr rcl mov call bswap add lea push pusha cmp jmp push movb call call pusha mov mov call push pushf pusha jmp btr dec shl bt mov stc test add call push pushf popl pusha mov mov pushl popl push lea jmp call mov pushl call call test pushf cmc jmp inc dec movsbw lea xor movzbl stc bt pusha call stc bt sub jmp jmp stc sub cmp jmp mov call movsbw mov pusha pushf mov jmp pushf mov mov mov pusha mov call rol movzbl push add pusha pushl inc call jmp call movl mov call pushf pushl popl pusha pushf push lea jmp call mov call sub pushf xor stc cbtw movw cwtl cmc push clc cmc add call mov pusha mov jmp jmp push mov pushf mov call mov pusha push lea jmp cmc jl daa not notl aas mov push stc test sub jmp clc pushf ror push mov lea mov call call pusha pushl mov jmp pusha clc mov bt clc clc push add movb call bt add mov push pushl movl mov push pushf mov lea jmp call movw pusha pushl popl push movw lea jmp bt sub mov mov mov mov mov push pushf lea jmp pushf push pushl popl pushf mov movb lea jmp rcl rol or mov bt pusha add mov pushf sub cmc pusha call push mov pushf pushl mov mov pusha pushf mov mov push jmp mov mov pusha pushf pushl ret bswap call or call mov pusha movb mov pushf pushf mov call bt ror bt clc cmp sub cmp test cmc mov bt sub jmp shrd not mov stc bt stc add pushf mov jmp movl mov jp pushf mov pusha jmp pop pushf rdtsc shl pushl popf pusha mov setl pop call cmc pushl popl test call mov mov pushf mov pushl push pushl lea jmp pushf jmp jmp pusha mov push mov lea jmp pushf mov pusha lea jmp not clc bt not test pusha cmp and pushf movl jmp lea jne call cmc cmc add call call ror clc clc call mov push call push jmp add push push pushf call jmp test movzbl call mov pushf lea jmp movw pusha mov pushl movw movb lea jmp test xor test sub movb mov pushl movb lea jmp pusha xchg call pusha mov pusha mov pushl mov pushf mov movw push lea jmp pusha aam add mov pusha call call jmp pushl pushf mov pushf movb mov pushf mov movw lea jmp not bsf mov bt inc add pushf push mov lea jp pushf mov mov lea jmp mov push push movb lea jmp jmp push mov pushf call cmc xor stc stc mov bt test stc add pusha jmp xor cmp xor call cmp stc add pusha jmp jmp sub call push pushf mov pushf pushl ret call pushl add pushf lea jo push pushf mov mov lea jmp cwtl mov pushf mov mov pusha pusha mov push push lea jmp mov push movb lea jmp mov jmp mov pushf lea jns push jmp mov pushf pushf mov pushf pushf mov lea jmp mov clc pushl cmc cmp add pushf pushf pusha lea jmp ror add pusha mov mov call bt xor movl jmp mov pushf pushl mov movb mov lea pop lea lahf mov pushf mov lea xchg movsbl not mov not mov movl pushl ret mov movb stc pushf test and stc stc mov stc cmp pushf push pushf lea jne (bad) repz jbe xchg movl lret setp mov pusha movw lea jmp pushf pushf mov pushf push push lea jmp pushl lea jge push mov call mov pusha push push pushf mov call cbtw or sar lahf mov neg not mov push clc stc stc sub stc shl movl mov pusha mov mov pusha pushf popl pushf pushl popl pushl push movb movl lea jmp pushf pusha movw mov push mov jmp pushf mov jmp pushf call bts sar rcl movzbl add btc pusha movsbw add bsr add movsbw add jmp clc add push pushf clc neg call mov pusha pushf movw pushf lea jmp movzbl push inc setge ror rcr cmp or sub btc btr test xor lea jnp lea inc bswap inc rol add cmc lea movzbl push pushl mov bt pushf call das mov cmp pushf lea stc cmc clc sub movl bt add pushf stc clc mov neg stc pusha jmp pushf lea jo popl pushf pusha movw lea jmp pushf jmp jmp neg shrd movzbl shrd sub jmp dec stc rcr ror btr lea jmp shld mov jmp pushf popl call movzbl lahf lahf mov call call pushf jmp pushf jmp shl bt shr pushf pushf bt call pushf mov pusha jmp add call mov jmp movb call pushf mov jmp jmp mov mov movb pushf jmp cmp shr pushf movb mov push pushf popl call not pusha cmp not push cmc sub jmp pushf pushl popl movl pushf movw pushl lea jmp pushl popl pushf push lea jmp add add and fsubrs dec add add add imul and add mov 